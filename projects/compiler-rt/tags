!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A	lib/builtins/hexagon/dfaddsub.S	/^		A = #-1$/;"	d
A	lib/builtins/hexagon/dfaddsub.S	/^		A = #0$/;"	d
A	lib/builtins/hexagon/dfaddsub.S	/^		A = ATMP				\/\/ 2's complement value$/;"	d
A	lib/builtins/hexagon/dfaddsub.S	/^		A = ATMP$/;"	d
A	lib/builtins/hexagon/dfaddsub.S	/^		A = convert_d2df(ATMP)			\/\/ Convert to Double Precision, taking care of flags, etc.  So nice!$/;"	d
A	lib/builtins/hexagon/dfaddsub.S	/^		A = convert_d2df(ATMP)$/;"	d
A	lib/builtins/hexagon/dfaddsub.S	/^		A = convert_sf2df(BL)			\/\/ trigger invalid, set NaN$/;"	d
A	lib/builtins/hexagon/dfaddsub.S	/^		A = insert(ATMP,#63,#0)			\/\/ insert inf\/maxfinite, leave sign$/;"	d
A	lib/builtins/hexagon/dfaddsub.S	/^		A = insert(B,#63,#0)$/;"	d
A	lib/builtins/hexagon/dfaddsub.S	/^#define A r1:0$/;"	d
A	lib/builtins/hexagon/dfdiv.S	/^		A = #-1$/;"	d
A	lib/builtins/hexagon/dfdiv.S	/^		A = asl(A,QH)$/;"	d
A	lib/builtins/hexagon/dfdiv.S	/^		A = convert_d2df(Q)$/;"	d
A	lib/builtins/hexagon/dfdiv.S	/^		A = convert_sf2df(TMP)		\/\/ get invalid, get DF qNaN$/;"	d
A	lib/builtins/hexagon/dfdiv.S	/^		A = insert(B,#63,#0)$/;"	d
A	lib/builtins/hexagon/dfdiv.S	/^#define A r1:0$/;"	d
A	lib/builtins/hexagon/dffma.S	/^		A = #-1$/;"	d
A	lib/builtins/hexagon/dffma.S	/^		A = #0$/;"	d
A	lib/builtins/hexagon/dffma.S	/^		A = B$/;"	d
A	lib/builtins/hexagon/dffma.S	/^		A = CTMP$/;"	d
A	lib/builtins/hexagon/dffma.S	/^		A = convert_d2df(CTMP)$/;"	d
A	lib/builtins/hexagon/dffma.S	/^		A = convert_sf2df(TMP)$/;"	d
A	lib/builtins/hexagon/dffma.S	/^		A = insert(ATMP,#63,#0)$/;"	d
A	lib/builtins/hexagon/dffma.S	/^		A = insert(CTMP,#63,#0)$/;"	d
A	lib/builtins/hexagon/dffma.S	/^#define A r1:0$/;"	d
A	lib/builtins/hexagon/dfminmax.S	/^		A = and(ATMP,B)$/;"	d
A	lib/builtins/hexagon/dfminmax.S	/^		A = or(ATMP,B)$/;"	d
A	lib/builtins/hexagon/dfminmax.S	/^#define A r1:0$/;"	d
A	lib/builtins/hexagon/dfmul.S	/^		A = #-1$/;"	d
A	lib/builtins/hexagon/dfmul.S	/^		A = B$/;"	d
A	lib/builtins/hexagon/dfmul.S	/^		A = PP_HH$/;"	d
A	lib/builtins/hexagon/dfmul.S	/^		A = convert_d2df(PP_HH)			\/\/ Do rounding$/;"	d
A	lib/builtins/hexagon/dfmul.S	/^		A = convert_d2df(PP_HH)$/;"	d
A	lib/builtins/hexagon/dfmul.S	/^		A = insert(ATMP,#63,#0)			\/\/ insert inf\/maxfinite, leave sign$/;"	d
A	lib/builtins/hexagon/dfmul.S	/^		A = insert(ONE,#63,#0)			\/\/ put in rounded up value$/;"	d
A	lib/builtins/hexagon/dfmul.S	/^		A = xor(A,B)				\/\/ get sign bit$/;"	d
A	lib/builtins/hexagon/dfmul.S	/^#define A r1:0$/;"	d
A	lib/builtins/hexagon/dfsqrt.S	/^		A = #-1						\/\/ qNaN$/;"	d
A	lib/builtins/hexagon/dfsqrt.S	/^		A = asl(A,EXP)				\/\/ Shift mantissa$/;"	d
A	lib/builtins/hexagon/dfsqrt.S	/^		A = convert_sf2df(EXP)				\/\/ Invalid,NaNval$/;"	d
A	lib/builtins/hexagon/dfsqrt.S	/^		A = extractu(A,#DF_MANTBITS,#0)		\/\/ Extract mantissa$/;"	d
A	lib/builtins/hexagon/dfsqrt.S	/^#define A r1:0$/;"	d
A	lib/fuzzer/FuzzerTracePC.h	/^    T A, B;$/;"	m	struct:fuzzer::TableOfRecentCompares::Pair
A	test/asan/TestCases/Linux/preinit_test.cc	/^struct A {$/;"	s	file:
A	test/asan/TestCases/Windows/demangled_names.cc	/^  A(T v) { v_ = v; }$/;"	f	struct:A
A	test/asan/TestCases/Windows/demangled_names.cc	/^struct A {$/;"	s	file:
A	test/asan/TestCases/alloca_detect_custom_size_.cc	/^struct A {$/;"	s	file:
A	test/asan/TestCases/init-order-atexit.cc	/^  A() { }$/;"	f	class:A
A	test/asan/TestCases/init-order-atexit.cc	/^class A {$/;"	c	file:
A	test/asan/TestCases/initialization-nobug.cc	/^int A = (1 << 1) + (1 << 3) + (1 << 5), B;$/;"	v
A	test/asan/TestCases/pass-object-byval.cc	/^  A() : me(this) {}$/;"	f	class:A
A	test/asan/TestCases/pass-object-byval.cc	/^  A(const A &other) : me(this) {$/;"	f	class:A
A	test/asan/TestCases/pass-object-byval.cc	/^class A {$/;"	c	file:
A	test/asan/TestCases/pass-struct-byval-uar.cc	/^struct A {$/;"	s	file:
A	test/asan/TestCases/pass-struct-byval.cc	/^struct A {$/;"	s	file:
A	test/asan/TestCases/pr33372.cc	/^struct A { int x, y, z; };$/;"	s	file:
A	test/asan/TestCases/use-after-scope-conversion.cc	/^  explicit A() : p('C') {}$/;"	f	struct:A
A	test/asan/TestCases/use-after-scope-conversion.cc	/^struct A {$/;"	s	file:
A	test/cfi/anon-namespace.cpp	/^struct A {$/;"	s	file:
A	test/cfi/bad-cast.cpp	/^struct A {$/;"	s	file:
A	test/cfi/bad-split.cpp	/^struct A : public ZZ {$/;"	s	file:
A	test/cfi/base-derived-destructor.cpp	/^class A {$/;"	c	file:
A	test/cfi/cross-dso/icall/diag.cpp	/^struct A {$/;"	s	file:
A	test/cfi/cross-dso/icall/dlopen.cpp	/^struct A {$/;"	s	file:
A	test/cfi/cross-dso/shadow_is_read_only.cpp	/^struct A {$/;"	s	file:
A	test/cfi/cross-dso/simple-fail.cpp	/^struct A {$/;"	s	file:
A	test/cfi/cross-dso/simple-pass.cpp	/^struct A {$/;"	s	file:
A	test/cfi/cross-dso/stats.cpp	/^struct A : ABase {$/;"	s	file:
A	test/cfi/cross-dso/target_out_of_bounds.cpp	/^struct A {$/;"	s	file:
A	test/cfi/multiple-inheritance.cpp	/^struct A {$/;"	s	file:
A	test/cfi/nvcall.cpp	/^struct A {$/;"	s	file:
A	test/cfi/overwrite.cpp	/^struct A {$/;"	s	file:
A	test/cfi/sibling.cpp	/^struct A {$/;"	s	file:
A	test/cfi/simple-fail.cpp	/^struct A {$/;"	s	file:
A	test/cfi/simple-pass.cpp	/^struct A {$/;"	s	file:
A	test/cfi/stats.cpp	/^struct A : ABase {$/;"	s	file:
A	test/cfi/target_uninstrumented.cpp	/^struct A {$/;"	s	file:
A	test/cfi/vdtor.cpp	/^struct A {$/;"	s	file:
A	test/cfi/vtable-may-alias.cpp	/^struct A {$/;"	s	file:
A	test/esan/TestCases/struct-simple.cpp	/^struct A {$/;"	s	file:
A	test/fuzzer/LargeTest.cpp	12;"	d	file:
A	test/msan/allocator_mapping.cc	/^  A() {$/;"	f	struct:A
A	test/msan/allocator_mapping.cc	/^struct A {$/;"	s	file:
A	test/msan/cxa_atexit.cc	/^class A {$/;"	c	file:
A	test/msan/dtor-multiple-inheritance.cc	/^  A() { x = 5; }$/;"	f	class:A
A	test/msan/dtor-multiple-inheritance.cc	/^class A {$/;"	c	file:
A	test/msan/dtor-vtable-multiple-inheritance.cc	/^class A {$/;"	c	file:
A	test/msan/dtor-vtable.cc	/^class A {$/;"	c	file:
A	test/msan/icmp_slt_allones.cc	/^__attribute__((noinline)) A::A() : c8(1) {}$/;"	f	class:A
A	test/msan/icmp_slt_allones.cc	/^struct A {$/;"	s	file:
A	test/profile/Inputs/instrprof-icall-promo.h	/^struct A {$/;"	s
A	test/sanitizer_common/TestCases/symbolize_stack.cc	/^template <int N> struct A {$/;"	s	file:
A	test/tsan/deadlock_detector_stress_test.cc	/^  void *A(size_t i) {$/;"	f	class:LockTest
A	test/tsan/vptr_benign_race.cc	/^  A() {$/;"	f	struct:A
A	test/tsan/vptr_benign_race.cc	/^struct A {$/;"	s	file:
A	test/tsan/vptr_harmful_race.cc	/^  A() {$/;"	f	struct:A
A	test/tsan/vptr_harmful_race.cc	/^struct A {$/;"	s	file:
A	test/tsan/vptr_harmful_race2.cc	/^  A() {$/;"	f	struct:A
A	test/tsan/vptr_harmful_race2.cc	/^struct A {$/;"	s	file:
A	test/tsan/vptr_harmful_race3.cc	/^  A() {$/;"	f	struct:A
A	test/tsan/vptr_harmful_race3.cc	/^struct A {$/;"	s	file:
A	test/tsan/vptr_harmful_race4.cc	/^struct A {$/;"	s	file:
A	test/ubsan/TestCases/TypeCheck/vptr-virtual-base-construction.cpp	/^struct A { virtual ~A() {} };$/;"	s	file:
A	test/xray/TestCases/Posix/arg1-logging-implicit-this.cc	/^class A {$/;"	c	file:
A2	test/cfi/simple-pass.cpp	/^struct A2 : A {$/;"	s	file:
AAA	test/tsan/virtual_inheritance_compile_bug.cc	/^struct AAA              {  virtual long aaa () { return 0; } };  \/\/ NOLINT$/;"	s	file:
ABase	test/cfi/cross-dso/stats.cpp	/^struct ABase {};$/;"	s	file:
ABase	test/cfi/stats.cpp	/^struct ABase {};$/;"	s	file:
ACCESS_ARRAY_FIVE_ELEMENTS	test/asan/TestCases/Posix/halt_on_error_suppress_equal_pcs.cc	20;"	d	file:
ACCESS_MEMORY_RANGE	lib/asan/asan_interceptors_memintrinsics.h	53;"	d
ADB	test/sanitizer_common/android_commands/android_common.py	/^ADB = os.environ.get('ADB', 'adb')$/;"	v
ADD	lib/msan/tests/msan_test.cc	/^template<class T> INLINE T ADD(const T &a, const T&b) { return a + b; }$/;"	f
ADJ	lib/builtins/hexagon/dfsqrt.S	/^		ADJ = cl0(ROOT)$/;"	d
ADJ	lib/builtins/hexagon/dfsqrt.S	/^#define ADJ r3$/;"	d
ADJUST	lib/builtins/hexagon/dffma.S	/^#define ADJUST 4$/;"	d
AEABI_RTABI	lib/builtins/int_lib.h	44;"	d
AFL_DEFER_FORKSVR	lib/fuzzer/afl/afl_driver.cpp	/^static volatile char AFL_DEFER_FORKSVR[] = "##SIG_AFL_DEFER_FORKSRV##";$/;"	v	file:
AFL_PERSISTENT	lib/fuzzer/afl/afl_driver.cpp	/^static volatile char AFL_PERSISTENT[] = "##SIG_AFL_PERSISTENT##";$/;"	v	file:
AGlobal	test/BlocksRuntime/modglobal.c	/^int AGlobal;$/;"	v
AH	lib/builtins/hexagon/dfaddsub.S	/^#define AH r1$/;"	d
AH	lib/builtins/hexagon/dfdiv.S	/^		AH = insert(TMP,#DF_EXPBITS+1,#DF_MANTBITS-32)		\/\/ clear out hidden bit, sign bit$/;"	d
AH	lib/builtins/hexagon/dfdiv.S	/^		AH = mux(Q_POSITIVE,#0,#-1)$/;"	d
AH	lib/builtins/hexagon/dfdiv.S	/^		AH = xor(AH,BH)$/;"	d
AH	lib/builtins/hexagon/dfdiv.S	/^#define AH r1$/;"	d
AH	lib/builtins/hexagon/dffma.S	/^		AH = USR$/;"	d
AH	lib/builtins/hexagon/dffma.S	/^		AH = lsr(AH,#31)		\/\/ get sign$/;"	d
AH	lib/builtins/hexagon/dffma.S	/^#define AH r1$/;"	d
AH	lib/builtins/hexagon/dfmul.S	/^		AH = insert(S_ZERO,#EXPBITS,#HI_MANTBITS)$/;"	d
AH	lib/builtins/hexagon/dfmul.S	/^		AH = insert(S_ZERO,#EXPBITS-1,#HI_MANTBITS+1)		\/\/ Insert correct exponent$/;"	d
AH	lib/builtins/hexagon/dfmul.S	/^#define AH r1$/;"	d
AH	lib/builtins/hexagon/dfsqrt.S	/^		AH = insert(EXP,#1,#DF_MANTBITS-32)		\/\/ insert lsb of exponent$/;"	d
AH	lib/builtins/hexagon/dfsqrt.S	/^#define AH r1$/;"	d
AK_Float	lib/ubsan/ubsan_diag.h	/^    AK_Float,  \/\/\/< A floating-point argument.$/;"	e	enum:__ubsan::Diag::ArgKind
AK_Pointer	lib/ubsan/ubsan_diag.h	/^    AK_Pointer \/\/\/< A pointer argument, displayed in hexadecimal.$/;"	e	enum:__ubsan::Diag::ArgKind
AK_SInt	lib/ubsan/ubsan_diag.h	/^    AK_SInt,   \/\/\/< A signed integer argument.$/;"	e	enum:__ubsan::Diag::ArgKind
AK_String	lib/ubsan/ubsan_diag.h	/^    AK_String, \/\/\/< A string argument, displayed as-is.$/;"	e	enum:__ubsan::Diag::ArgKind
AK_TypeName	lib/ubsan/ubsan_diag.h	/^    AK_TypeName,\/\/\/< A C++ type name, possibly demangled before display.$/;"	e	enum:__ubsan::Diag::ArgKind
AK_UInt	lib/ubsan/ubsan_diag.h	/^    AK_UInt,   \/\/\/< An unsigned integer argument.$/;"	e	enum:__ubsan::Diag::ArgKind
AL	lib/builtins/hexagon/dfaddsub.S	/^#define AL r0$/;"	d
AL	lib/builtins/hexagon/dfdiv.S	/^#define AL r0$/;"	d
AL	lib/builtins/hexagon/dffma.S	/^		AL = #0x0030$/;"	d
AL	lib/builtins/hexagon/dffma.S	/^#define AL r0$/;"	d
AL	lib/builtins/hexagon/dfmul.S	/^#define AL r0$/;"	d
AL	lib/builtins/hexagon/dfsqrt.S	/^#define AL r0$/;"	d
AL	lib/builtins/hexagon/dfsqrt.S	/^#define AL r1$/;"	d
ALIAS	lib/sanitizer_common/sanitizer_internal_defs.h	210;"	d
ALIAS	lib/sanitizer_common/sanitizer_internal_defs.h	222;"	d
ALIGNED	lib/sanitizer_common/sanitizer_internal_defs.h	211;"	d
ALIGNED	lib/sanitizer_common/sanitizer_internal_defs.h	225;"	d
ALLOCATE_FROM_LOCAL_POOL	lib/asan/asan_malloc_local.h	34;"	d
ALLOCATE_FROM_LOCAL_POOL	lib/asan/asan_malloc_local.h	39;"	d
ALLOCATION_FUNCTION_ATTRIBUTE	lib/asan/asan_malloc_win.cc	36;"	d	file:
ALTUSRLOCALLIBSYSTEM	test/BlocksRuntime/makefile	/^ALTUSRLOCALLIBSYSTEM ?= $(RootsDirectory)\/alt-usr-local-lib-system\/$/;"	m
ALWAYS_INLINE	lib/builtins/int_lib.h	47;"	d
ALWAYS_INLINE	lib/builtins/int_lib.h	52;"	d
ALWAYS_INLINE	lib/fuzzer/FuzzerDefs.h	110;"	d
ALWAYS_INLINE	lib/fuzzer/FuzzerDefs.h	113;"	d
ALWAYS_INLINE	lib/sanitizer_common/sanitizer_internal_defs.h	208;"	d
ALWAYS_INLINE	lib/sanitizer_common/sanitizer_internal_defs.h	221;"	d
AMDFAM10H	lib/builtins/cpu_model.c	/^  AMDFAM10H,$/;"	e	enum:ProcessorTypes	file:
AMDFAM10H_BARCELONA	lib/builtins/cpu_model.c	/^  AMDFAM10H_BARCELONA,$/;"	e	enum:ProcessorSubtypes	file:
AMDFAM10H_ISTANBUL	lib/builtins/cpu_model.c	/^  AMDFAM10H_ISTANBUL,$/;"	e	enum:ProcessorSubtypes	file:
AMDFAM10H_SHANGHAI	lib/builtins/cpu_model.c	/^  AMDFAM10H_SHANGHAI,$/;"	e	enum:ProcessorSubtypes	file:
AMDFAM15H	lib/builtins/cpu_model.c	/^  AMDFAM15H,$/;"	e	enum:ProcessorTypes	file:
AMDFAM15H_BDVER1	lib/builtins/cpu_model.c	/^  AMDFAM15H_BDVER1,$/;"	e	enum:ProcessorSubtypes	file:
AMDFAM15H_BDVER2	lib/builtins/cpu_model.c	/^  AMDFAM15H_BDVER2,$/;"	e	enum:ProcessorSubtypes	file:
AMDFAM15H_BDVER3	lib/builtins/cpu_model.c	/^  AMDFAM15H_BDVER3,$/;"	e	enum:ProcessorSubtypes	file:
AMDFAM15H_BDVER4	lib/builtins/cpu_model.c	/^  AMDFAM15H_BDVER4,$/;"	e	enum:ProcessorSubtypes	file:
AMDFAM17H	lib/builtins/cpu_model.c	/^  AMDFAM17H,$/;"	e	enum:ProcessorTypes	file:
AMDFAM17H_ZNVER1	lib/builtins/cpu_model.c	/^  AMDFAM17H_ZNVER1,$/;"	e	enum:ProcessorSubtypes	file:
AMD_BTVER1	lib/builtins/cpu_model.c	/^  AMD_BTVER1,$/;"	e	enum:ProcessorTypes	file:
AMD_BTVER2	lib/builtins/cpu_model.c	/^  AMD_BTVER2,$/;"	e	enum:ProcessorTypes	file:
AND	lib/msan/tests/msan_test.cc	/^template<class T> INLINE T AND(const T &a, const T&b) { return a & b; }$/;"	f
ANDROID_KITKAT	lib/sanitizer_common/sanitizer_common.h	/^  ANDROID_KITKAT = 19,$/;"	e	enum:__sanitizer::AndroidApiLevel
ANDROID_LOLLIPOP_MR1	lib/sanitizer_common/sanitizer_common.h	/^  ANDROID_LOLLIPOP_MR1 = 22,$/;"	e	enum:__sanitizer::AndroidApiLevel
ANDROID_NOT_ANDROID	lib/sanitizer_common/sanitizer_common.h	/^  ANDROID_NOT_ANDROID = 0,$/;"	e	enum:__sanitizer::AndroidApiLevel
ANDROID_POST_LOLLIPOP	lib/sanitizer_common/sanitizer_common.h	/^  ANDROID_POST_LOLLIPOP = 23$/;"	e	enum:__sanitizer::AndroidApiLevel
ANDROID_TMPDIR	test/sanitizer_common/android_commands/android_common.py	/^ANDROID_TMPDIR = '\/data\/local\/tmp\/Output'$/;"	v
ANDROID_TMPDIR	test/sanitizer_common/android_commands/android_run.py	/^ANDROID_TMPDIR = '\/data\/local\/tmp\/Output'$/;"	v
ANNOTATE_HAPPENS_AFTER	test/tsan/annotate_happens_before.cc	19;"	d	file:
ANNOTATE_HAPPENS_AFTER	test/tsan/annotate_happens_before.cc	25;"	d	file:
ANNOTATE_HAPPENS_BEFORE	test/tsan/annotate_happens_before.cc	17;"	d	file:
ANNOTATE_HAPPENS_BEFORE	test/tsan/annotate_happens_before.cc	24;"	d	file:
ANNOTATE_RWLOCK_ACQUIRED	test/tsan/test.h	88;"	d
ANNOTATE_RWLOCK_CREATE	test/tsan/test.h	82;"	d
ANNOTATE_RWLOCK_CREATE_STATIC	test/tsan/test.h	84;"	d
ANNOTATE_RWLOCK_DESTROY	test/tsan/test.h	86;"	d
ANNOTATE_RWLOCK_RELEASED	test/tsan/test.h	90;"	d
AP32	lib/asan/asan_allocator.h	/^struct AP32 {$/;"	s	namespace:__asan
AP32	lib/hwasan/hwasan_allocator.cc	/^struct AP32 {$/;"	s	namespace:__hwasan	file:
AP32	lib/lsan/lsan_allocator.h	/^struct AP32 {$/;"	s	namespace:__lsan
AP32	lib/msan/msan_allocator.cc	/^  struct AP32 {$/;"	s	namespace:__msan	file:
AP32	lib/sanitizer_common/sanitizer_allocator_internal.h	/^struct AP32 {$/;"	s	namespace:__sanitizer
AP32	lib/tsan/rtl/tsan_rtl.h	/^struct AP32 {$/;"	s	namespace:__tsan
AP32Compact	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^struct AP32Compact {$/;"	s	file:
AP32SeparateBatches	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^struct AP32SeparateBatches {$/;"	s	file:
AP32WithCallback	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^struct AP32WithCallback {$/;"	s	file:
AP64	lib/asan/asan_allocator.h	/^struct AP64 {  \/\/ Allocator64 parameters. Deliberately using a short name.$/;"	s	namespace:__asan
AP64	lib/lsan/lsan_allocator.h	/^struct AP64 {  \/\/ Allocator64 parameters. Deliberately using a short name.$/;"	s	namespace:__lsan
AP64	lib/msan/msan_allocator.cc	/^  struct AP64 {  \/\/ Allocator64 parameters. Deliberately using a short name.$/;"	s	namespace:__msan	file:
AP64	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^struct AP64 {  \/\/ Allocator Params. Short name for shorter demangled names..$/;"	s	file:
AP64	lib/scudo/scudo_allocator.h	/^struct AP64 {$/;"	s	namespace:__scudo
AP64	lib/tsan/rtl/tsan_rtl.h	/^struct AP64 {  \/\/ Allocator64 parameters. Deliberately using a short name.$/;"	s	namespace:__tsan
AP64Compact	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^struct AP64Compact {$/;"	s	file:
AP64Dyn	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^struct AP64Dyn {$/;"	s	file:
AP64VeryCompact	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^struct AP64VeryCompact {$/;"	s	file:
AP64WithCallback	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^struct AP64WithCallback {$/;"	s	file:
AP64_SpecialSizeClassMap	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^struct AP64_SpecialSizeClassMap {$/;"	s	file:
APP	lib/msan/msan.h	/^    INVALID, APP, SHADOW, ORIGIN$/;"	e	enum:MappingDesc::Type
APSR_C	lib/builtins/arm/aeabi_cdcmp.S	/^#define APSR_C (1 << 29)$/;"	d
APSR_C	lib/builtins/arm/aeabi_cfcmp.S	/^#define APSR_C (1 << 29)$/;"	d
APSR_Z	lib/builtins/arm/aeabi_cdcmp.S	/^#define APSR_Z (1 << 30)$/;"	d
APSR_Z	lib/builtins/arm/aeabi_cfcmp.S	/^#define APSR_Z (1 << 30)$/;"	d
ARCH_HAS_BLX	lib/sanitizer_common/sanitizer_linux.cc	1566;"	d	file:
ARCH_HAS_BX	lib/sanitizer_common/sanitizer_linux.cc	1563;"	d	file:
ARCH_IOVEC_FOR_GETREGSET	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	504;"	d	file:
ARCH_IOVEC_FOR_GETREGSET	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	509;"	d	file:
ARCH_IOVEC_FOR_GETREGSET	test/asan/TestCases/Linux/ptrace.cc	38;"	d	file:
ARCH_IOVEC_FOR_GETREGSET	test/asan/TestCases/Linux/ptrace.cc	45;"	d	file:
ARCH_IOVEC_FOR_GETREGSET	test/asan/TestCases/Linux/ptrace.cc	68;"	d	file:
ARG_PAYLOAD	include/xray/xray_records.h	/^  ARG_PAYLOAD = 1,$/;"	e	enum:__xray::RecordTypes
ARM_HAS_BX	lib/builtins/assembly.h	104;"	d
ARM_VFPREGS_SIZE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	126;"	d	file:
ARM_VFPREGS_SIZE_ASAN	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	124;"	d	file:
ARRAY_SIZE	lib/sanitizer_common/sanitizer_internal_defs.h	338;"	d
ARRAY_SIZE	lib/sanitizer_common/sanitizer_symbolizer_libbacktrace.cc	26;"	d	file:
ASAN_ACTIVATION_FLAG	lib/asan/asan_activation.cc	35;"	d	file:
ASAN_ACTIVATION_FLAG	lib/asan/asan_activation.cc	40;"	d	file:
ASAN_ACTIVATION_H	lib/asan/asan_activation.h	16;"	d
ASAN_ALLOCATOR_H	lib/asan/asan_allocator.h	16;"	d
ASAN_AVOID_EXPENSIVE_TESTS	lib/asan/tests/asan_test_config.h	45;"	d
ASAN_DEFINE_ERROR_KIND	lib/asan/asan_errors.h	391;"	d
ASAN_DEFINE_ERROR_KIND	lib/asan/asan_errors.h	432;"	d
ASAN_DESCRIPTIONS_H	lib/asan/asan_descriptions.h	16;"	d
ASAN_DYNAMIC	lib/asan/asan_internal.h	48;"	d
ASAN_DYNAMIC	lib/asan/asan_internal.h	50;"	d
ASAN_ERRORS_H	lib/asan/asan_errors.h	15;"	d
ASAN_ERROR_DESCRIPTION_CONSTRUCTOR	lib/asan/asan_errors.h	393;"	d
ASAN_ERROR_DESCRIPTION_CONSTRUCTOR	lib/asan/asan_errors.h	434;"	d
ASAN_ERROR_DESCRIPTION_MEMBER	lib/asan/asan_errors.h	392;"	d
ASAN_ERROR_DESCRIPTION_MEMBER	lib/asan/asan_errors.h	433;"	d
ASAN_ERROR_DESCRIPTION_PRINT	lib/asan/asan_errors.h	395;"	d
ASAN_ERROR_DESCRIPTION_PRINT	lib/asan/asan_errors.h	435;"	d
ASAN_FAKE_STACK_H	lib/asan/asan_fake_stack.h	16;"	d
ASAN_FIXED_MAPPING	lib/asan/asan_mapping.h	253;"	d
ASAN_FLAG	lib/asan/asan_flags.cc	43;"	d	file:
ASAN_FLAG	lib/asan/asan_flags.cc	45;"	d	file:
ASAN_FLAG	lib/asan/asan_flags.cc	49;"	d	file:
ASAN_FLAG	lib/asan/asan_flags.cc	52;"	d	file:
ASAN_FLAG	lib/asan/asan_flags.h	33;"	d
ASAN_FLAG	lib/asan/asan_flags.h	35;"	d
ASAN_FLAGS_H	lib/asan/asan_flags.h	16;"	d
ASAN_FOR_EACH_ERROR_KIND	lib/asan/asan_errors.h	/^  ASAN_FOR_EACH_ERROR_KIND(ASAN_DEFINE_ERROR_KIND)$/;"	e	enum:__asan::ErrorKind
ASAN_FOR_EACH_ERROR_KIND	lib/asan/asan_errors.h	367;"	d
ASAN_FOR_EACH_ERROR_KIND	lib/asan/asan_errors.h	431;"	d
ASAN_FREE_HOOK	lib/asan/asan_internal.h	121;"	d
ASAN_HAS_EXCEPTIONS	lib/asan/asan_internal.h	33;"	d
ASAN_INIT_VERSION_H	lib/asan/asan_init_version.h	16;"	d
ASAN_INTERCEPTORS_H	lib/asan/asan_interceptors.h	15;"	d
ASAN_INTERCEPTOR_ENTER	lib/asan/asan_interceptors.cc	88;"	d	file:
ASAN_INTERCEPT_ATOLL_AND_STRTOLL	lib/asan/asan_interceptors.h	45;"	d
ASAN_INTERCEPT_FUNC	lib/asan/asan_interceptors.h	117;"	d
ASAN_INTERCEPT_FUNC_VER	lib/asan/asan_interceptors.h	122;"	d
ASAN_INTERCEPT_INDEX	lib/asan/asan_interceptors.h	47;"	d
ASAN_INTERCEPT_PTHREAD_CREATE	lib/asan/asan_interceptors.h	48;"	d
ASAN_INTERCEPT_SIGLONGJMP	lib/asan/asan_interceptors.h	70;"	d
ASAN_INTERCEPT_SWAPCONTEXT	lib/asan/asan_interceptors.h	64;"	d
ASAN_INTERCEPT__LONGJMP	lib/asan/asan_interceptors.h	46;"	d
ASAN_INTERCEPT__UNWIND_SJLJ_RAISEEXCEPTION	lib/asan/asan_interceptors.h	86;"	d
ASAN_INTERCEPT___CXA_ATEXIT	lib/asan/asan_interceptors.h	98;"	d
ASAN_INTERCEPT___CXA_RETHROW_PRIMARY_EXCEPTION	lib/asan/asan_interceptors.h	84;"	d
ASAN_INTERCEPT___CXA_THROW	lib/asan/asan_interceptors.h	83;"	d
ASAN_INTERCEPT___LONGJMP_CHK	lib/asan/asan_interceptors.h	76;"	d
ASAN_INTERCEPT___STRDUP	lib/asan/asan_interceptors.h	104;"	d
ASAN_INTERFACE_INTERNAL_H	lib/asan/asan_interface_internal.h	19;"	d
ASAN_INTERNAL_H	lib/asan/asan_internal.h	15;"	d
ASAN_LOW_MEMORY	lib/asan/asan_internal.h	40;"	d
ASAN_LOW_MEMORY	lib/asan/asan_internal.h	42;"	d
ASAN_MALLOC_HOOK	lib/asan/asan_internal.h	116;"	d
ASAN_MALLOC_LOCAL_H	lib/asan/asan_malloc_local.h	16;"	d
ASAN_MAPPING_H	lib/asan/asan_mapping.h	15;"	d
ASAN_MAPPING_MYRIAD_H	lib/asan/asan_mapping_myriad.h	15;"	d
ASAN_MEMCPY_IMPL	lib/asan/asan_interceptors_memintrinsics.h	82;"	d
ASAN_MEMINTRIN_H	lib/asan/asan_interceptors_memintrinsics.h	15;"	d
ASAN_MEMMOVE_IMPL	lib/asan/asan_interceptors_memintrinsics.h	113;"	d
ASAN_MEMORY_ACCESS_CALLBACK	lib/asan/asan_rtl.cc	169;"	d	file:
ASAN_MEMORY_ACCESS_CALLBACK_BODY	lib/asan/asan_rtl.cc	149;"	d	file:
ASAN_MEMSET_IMPL	lib/asan/asan_interceptors_memintrinsics.h	100;"	d
ASAN_NEEDS_SEGV	lib/asan/tests/asan_test_config.h	38;"	d
ASAN_ON_ERROR	lib/asan/asan_internal.h	126;"	d
ASAN_PCRE_DOTALL	lib/asan/tests/asan_test_config.h	48;"	d
ASAN_POISON_MEMORY_REGION	include/sanitizer/asan_interface.h	42;"	d
ASAN_POISON_MEMORY_REGION	include/sanitizer/asan_interface.h	47;"	d
ASAN_PREMAP_SHADOW	lib/asan/asan_mapping.h	236;"	d
ASAN_PREMAP_SHADOW	lib/asan/asan_mapping.h	238;"	d
ASAN_PREMAP_SHADOW_H	lib/asan/asan_premap_shadow.h	17;"	d
ASAN_PTHREAD_CREATE_VERSION	lib/asan/asan_interceptors.cc	42;"	d	file:
ASAN_PTHREAD_CREATE_VERSION	lib/asan/asan_interceptors.cc	44;"	d	file:
ASAN_READ_RANGE	lib/asan/asan_interceptors_memintrinsics.h	124;"	d
ASAN_READ_STRING	lib/asan/asan_interceptors.cc	53;"	d	file:
ASAN_READ_STRING_OF_LEN	lib/asan/asan_interceptors.cc	49;"	d	file:
ASAN_REPORT_ERROR	lib/asan/asan_rtl.cc	101;"	d	file:
ASAN_REPORT_ERROR_N	lib/asan/asan_rtl.cc	129;"	d	file:
ASAN_RT_VERSION_DYNAMIC	lib/asan/asan_linux.cc	/^  ASAN_RT_VERSION_DYNAMIC,$/;"	e	enum:__anon50	file:
ASAN_RT_VERSION_STATIC	lib/asan/asan_linux.cc	/^  ASAN_RT_VERSION_STATIC,$/;"	e	enum:__anon50	file:
ASAN_RT_VERSION_UNDEFINED	lib/asan/asan_linux.cc	/^  ASAN_RT_VERSION_UNDEFINED = 0,$/;"	e	enum:__anon50	file:
ASAN_SCARINESS_SCORE_H	lib/asan/asan_scariness_score.h	30;"	d
ASAN_STACK_H	lib/asan/asan_stack.h	16;"	d
ASAN_STATS_H	lib/asan/asan_stats.h	15;"	d
ASAN_SUPPRESSIONS_H	lib/asan/asan_suppressions.h	15;"	d
ASAN_TEST_CONFIG_H	lib/asan/tests/asan_test_config.h	18;"	d
ASAN_TEST_UTILS_H	lib/asan/tests/asan_test_utils.h	15;"	d
ASAN_THREAD_H	lib/asan/asan_thread.h	16;"	d
ASAN_THROW	lib/asan/tests/asan_test_utils.h	53;"	d
ASAN_THROW	lib/asan/tests/asan_test_utils.h	55;"	d
ASAN_UNPOISON_MEMORY_REGION	include/sanitizer/asan_interface.h	44;"	d
ASAN_UNPOISON_MEMORY_REGION	include/sanitizer/asan_interface.h	49;"	d
ASAN_USE_ALIAS_ATTRIBUTE_FOR_INDEX	lib/asan/asan_interceptors.h	58;"	d
ASAN_WRITE_RANGE	lib/asan/asan_interceptors_memintrinsics.h	126;"	d
ASM_HIDDEN	lib/sanitizer_common/sanitizer_asm.h	47;"	d
ASM_HIDDEN	lib/sanitizer_common/sanitizer_asm.h	53;"	d
ASM_OPERAND_NUM	lib/fuzzer/FuzzerUtilFuchsia.cpp	164;"	d	file:
ASM_OPERAND_REG	lib/fuzzer/FuzzerUtilFuchsia.cpp	162;"	d	file:
ASM_SIZE	lib/sanitizer_common/sanitizer_asm.h	49;"	d
ASM_SIZE	lib/sanitizer_common/sanitizer_asm.h	55;"	d
ASM_SYMBOL	lib/sanitizer_common/sanitizer_asm.h	50;"	d
ASM_SYMBOL	lib/sanitizer_common/sanitizer_asm.h	56;"	d
ASM_SYMBOL_INTERCEPTOR	lib/sanitizer_common/sanitizer_asm.h	51;"	d
ASM_SYMBOL_INTERCEPTOR	lib/sanitizer_common/sanitizer_asm.h	57;"	d
ASM_TYPE_FUNCTION	lib/sanitizer_common/sanitizer_asm.h	48;"	d
ASM_TYPE_FUNCTION	lib/sanitizer_common/sanitizer_asm.h	54;"	d
ASSERT_LABEL	test/dfsan/custom.cc	42;"	d	file:
ASSERT_READ_LABEL	test/dfsan/custom.cc	45;"	d	file:
ASSERT_READ_ZERO_LABEL	test/dfsan/custom.cc	39;"	d	file:
ASSERT_ZERO_LABEL	test/dfsan/custom.cc	36;"	d	file:
ASSIGN_REAL	lib/interception/interception.h	179;"	d
ASSIGN_REAL	lib/interception/interception.h	184;"	d
ATMP	lib/builtins/hexagon/dfaddsub.S	/^		ATMP = #0$/;"	d
ATMP	lib/builtins/hexagon/dfaddsub.S	/^		ATMP = add(ATMP,BTMP)			\/\/ ADD!!!$/;"	d
ATMP	lib/builtins/hexagon/dfaddsub.S	/^		ATMP = add(ATMP,BTMP)$/;"	d
ATMP	lib/builtins/hexagon/dfaddsub.S	/^		ATMP = combine(##0x20000000,#0)$/;"	d
ATMP	lib/builtins/hexagon/dfaddsub.S	/^		ATMP = combine(##0x7fefffff,#-1)	\/\/ positive max finite$/;"	d
ATMP	lib/builtins/hexagon/dfaddsub.S	/^		ATMP = extractu(A,#63,#0)		\/\/ strip off sign$/;"	d
ATMP	lib/builtins/hexagon/dfaddsub.S	/^		ATMP = extractu(A,#63,#0)$/;"	d
ATMP	lib/builtins/hexagon/dfaddsub.S	/^		ATMP = insert(A,#MANTBITS,#EXPBITS-2)	\/\/ Q1.62$/;"	d
ATMP	lib/builtins/hexagon/dfaddsub.S	/^		ATMP = insert(A,#MANTBITS,#EXPBITS-2)$/;"	d
ATMP	lib/builtins/hexagon/dfaddsub.S	/^		ATMP = neg(ATMP)$/;"	d
ATMP	lib/builtins/hexagon/dfaddsub.S	/^#define ATMP r13:12$/;"	d
ATMP	lib/builtins/hexagon/dffma.S	/^		ATMP = #0$/;"	d
ATMP	lib/builtins/hexagon/dffma.S	/^		ATMP = abs(CTMP)$/;"	d
ATMP	lib/builtins/hexagon/dffma.S	/^		ATMP = asl(ATMP,EXPB)		\/\/ shift left$/;"	d
ATMP	lib/builtins/hexagon/dffma.S	/^		ATMP = asr(ATMP,EXPB)$/;"	d
ATMP	lib/builtins/hexagon/dffma.S	/^		ATMP = combine(##0x7ff00000,#0)$/;"	d
ATMP	lib/builtins/hexagon/dffma.S	/^		ATMP = extractu(A,#63,#0)$/;"	d
ATMP	lib/builtins/hexagon/dffma.S	/^		ATMP = insert(A,#MANTBITS,#EXPBITS-3)$/;"	d
ATMP	lib/builtins/hexagon/dffma.S	/^	ATMP = combine(##0x00100000,#0)$/;"	d
ATMP	lib/builtins/hexagon/dffma.S	/^#define ATMP r13:12$/;"	d
ATMP	lib/builtins/hexagon/dffma.S	/^#define ATMP r9:8$/;"	d
ATMP	lib/builtins/hexagon/dfminmax.S	/^		ATMP = A$/;"	d
ATMP	lib/builtins/hexagon/dfminmax.S	/^#define ATMP r5:4$/;"	d
ATMP	lib/builtins/hexagon/dfmul.S	/^		ATMP = abs(PP_HH)			\/\/ take absolute value$/;"	d
ATMP	lib/builtins/hexagon/dfmul.S	/^		ATMP = combine(##0x40000000,#0)$/;"	d
ATMP	lib/builtins/hexagon/dfmul.S	/^		ATMP = combine(##0x7fefffff,#-1)	\/\/ positive max finite$/;"	d
ATMP	lib/builtins/hexagon/dfmul.S	/^		ATMP = extractu(A,#63,#0)		\/\/ strip off sign$/;"	d
ATMP	lib/builtins/hexagon/dfmul.S	/^		ATMP = insert(A,#MANTBITS,#EXPBITS-1)$/;"	d
ATMP	lib/builtins/hexagon/dfmul.S	/^#define ATMP r13:12$/;"	d
ATMP2	lib/builtins/hexagon/dfaddsub.S	/^		ATMP2 = extractu(BTMP,EXTRACTAMT)$/;"	d
ATMP2	lib/builtins/hexagon/dfaddsub.S	/^		ATMP2 = neg(ATMP)$/;"	d
ATMP2	lib/builtins/hexagon/dfaddsub.S	/^		ATMP2 = sub(ATMP,BTMP)			\/\/ Negate and ADD --> SUB!!!$/;"	d
ATMP2	lib/builtins/hexagon/dfaddsub.S	/^#define ATMP2 r11:10$/;"	d
ATMP2H	lib/builtins/hexagon/dfaddsub.S	/^#define ATMP2H r11$/;"	d
ATMP2L	lib/builtins/hexagon/dfaddsub.S	/^#define ATMP2L r10$/;"	d
ATMPH	lib/builtins/hexagon/dfaddsub.S	/^#define ATMPH r13$/;"	d
ATMPH	lib/builtins/hexagon/dffma.S	/^		ATMPH = or(ATMPH,PP_ODD_H)$/;"	d
ATMPH	lib/builtins/hexagon/dffma.S	/^		ATMPH = setbit(ATMPH,#HI_MANTBITS+FUDGE2)$/;"	d
ATMPH	lib/builtins/hexagon/dffma.S	/^#define ATMPH r13$/;"	d
ATMPH	lib/builtins/hexagon/dffma.S	/^#define ATMPH r9$/;"	d
ATMPH	lib/builtins/hexagon/dfmul.S	/^#define ATMPH r13$/;"	d
ATMPL	lib/builtins/hexagon/dfaddsub.S	/^#define ATMPL r12$/;"	d
ATMPL	lib/builtins/hexagon/dffma.S	/^#define ATMPL r12$/;"	d
ATMPL	lib/builtins/hexagon/dffma.S	/^#define ATMPL r8$/;"	d
ATMPL	lib/builtins/hexagon/dfmul.S	/^#define ATMPL r12$/;"	d
ATOMIC	lib/tsan/rtl/tsan_interface_atomic.cc	877;"	d	file:
ATOMIC_ORDER	lib/sanitizer_common/sanitizer_atomic_clang.h	104;"	d
ATOMIC_RET	lib/tsan/rtl/tsan_interface_atomic.cc	887;"	d	file:
ATOMIC_RMW	lib/builtins/atomic.c	312;"	d	file:
ATTRIBUTE_INTERFACE	lib/fuzzer/FuzzerDefs.h	131;"	d
ATTRIBUTE_INTERFACE	lib/fuzzer/FuzzerDefs.h	133;"	d
ATTRIBUTE_NO_SANITIZE_ADDRESS	lib/fuzzer/FuzzerDefs.h	116;"	d
ATTRIBUTE_NO_SANITIZE_ADDRESS	lib/sanitizer_common/tests/sanitizer_test_utils.h	54;"	d
ATTRIBUTE_NO_SANITIZE_ADDRESS	lib/sanitizer_common/tests/sanitizer_test_utils.h	57;"	d
ATTRIBUTE_NO_SANITIZE_ALL	lib/fuzzer/FuzzerDefs.h	120;"	d
ATTRIBUTE_NO_SANITIZE_ALL	lib/fuzzer/FuzzerDefs.h	122;"	d
ATTRIBUTE_NO_SANITIZE_ALL	lib/fuzzer/FuzzerDefs.h	124;"	d
ATTRIBUTE_NO_SANITIZE_ALL	lib/fuzzer/FuzzerDefs.h	127;"	d
ATTRIBUTE_NO_SANITIZE_MEMORY	lib/fuzzer/FuzzerDefs.h	106;"	d
ATTRIBUTE_NO_SANITIZE_MEMORY	lib/fuzzer/FuzzerDefs.h	108;"	d
ATTRIBUTE_NO_SANITIZE_MEMORY	lib/fuzzer/FuzzerDefs.h	112;"	d
ATTRIBUTE_TARGET_POPCNT	lib/fuzzer/FuzzerDefs.h	100;"	d
ATTRIBUTE_TARGET_POPCNT	lib/fuzzer/FuzzerDefs.h	95;"	d
ATTRIBUTE_TARGET_POPCNT	lib/fuzzer/FuzzerDefs.h	97;"	d
AT_HWCAP	lib/scudo/scudo_utils.cpp	84;"	d	file:
A_Foo	test/msan/dtor-vtable-multiple-inheritance.cc	/^  virtual void A_Foo() {}$/;"	f	class:A
A_Foo	test/msan/dtor-vtable-multiple-inheritance.cc	/^  virtual void A_Foo() {}$/;"	f	class:B
A_Foo	test/msan/dtor-vtable-multiple-inheritance.cc	/^  void A_Foo() {}$/;"	f	class:E
A_Foo	test/msan/dtor-vtable.cc	/^  virtual void A_Foo() {}$/;"	f	class:A
A_POS	lib/builtins/hexagon/dfaddsub.S	/^		A_POS = cmp.gt(AH,#-1)$/;"	d
A_POS	lib/builtins/hexagon/dfaddsub.S	/^#define A_POS p2$/;"	d
Aarch64GetESR	lib/sanitizer_common/sanitizer_linux.cc	/^static bool Aarch64GetESR(ucontext_t *ucontext, u64 *esr) {$/;"	f	namespace:__sanitizer
Abc	test/sanitizer_common/TestCases/Posix/dedup_token_length_test.cc	/^  template<class A, class B> void Abc() {$/;"	f	namespace:Xyz
Abort	lib/hwasan/hwasan.cc	/^enum class ErrorAction { Abort, Recover };$/;"	m	class:ErrorAction	file:
Abort	lib/sanitizer_common/sanitizer_common_nolibc.cc	/^void Abort() { internal__exit(1); }$/;"	f	namespace:__sanitizer
Abort	lib/sanitizer_common/sanitizer_fuchsia.cc	/^void Abort() { abort(); }$/;"	f	namespace:__sanitizer
Abort	lib/sanitizer_common/sanitizer_posix_libcdep.cc	/^void Abort() {$/;"	f	namespace:__sanitizer
Abort	lib/sanitizer_common/sanitizer_rtems.cc	/^void Abort() { abort(); }$/;"	f	namespace:__sanitizer
Abort	lib/sanitizer_common/sanitizer_win.cc	/^void Abort() {$/;"	f	namespace:__sanitizer
Access	lib/asan/asan_descriptions.h	/^  const char *Access() { return Blue(); }$/;"	f	class:__asan::Decorator
Access	lib/tsan/rtl/tsan_report.cc	/^  const char *Access()     { return Blue(); }$/;"	f	class:__tsan::Decorator
Access	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^void ScopedThread::Access(void *addr, bool is_write,$/;"	f	class:ScopedThread
Access	test/asan/TestCases/use-after-scope-types.cc	/^  void Access() { *t = {}; }$/;"	f	struct:Ptr
AccessC	test/asan/TestCases/Helpers/init-order-atexit-extra.cc	/^void AccessC() {$/;"	f
AccessFunc	lib/tsan/rtl/tsan_external.cc	/^typedef void(*AccessFunc)(ThreadState *, uptr, uptr, int);$/;"	t	namespace:__tsan	file:
AccessInfo	lib/hwasan/hwasan_linux.cc	/^struct AccessInfo {$/;"	s	namespace:__hwasan	file:
AccessThread	test/asan/TestCases/Posix/deep_thread_stack.cc	/^void *AccessThread(void *arg) {$/;"	f
AccessType	lib/asan/asan_descriptions.h	/^enum AccessType {$/;"	g	namespace:__asan
AccessType	lib/hwasan/hwasan.cc	/^enum class AccessType { Load, Store };$/;"	c	file:
Acquire	lib/tsan/rtl/tsan_rtl_mutex.cc	/^void Acquire(ThreadState *thr, uptr pc, uptr addr) {$/;"	f	namespace:__tsan
Acquire0	test/tsan/deadlock_detector_stress_test.cc	/^  __attribute__((noinline)) void Acquire0() { L(0); }$/;"	f	class:LockTest
Acquire1	test/tsan/deadlock_detector_stress_test.cc	/^  __attribute__((noinline)) void Acquire1() { L(1); }$/;"	f	class:LockTest
Acquire2	test/tsan/deadlock_detector_stress_test.cc	/^  __attribute__((noinline)) void Acquire2() { L(2); }$/;"	f	class:LockTest
AcquireGlobal	lib/tsan/rtl/tsan_rtl_mutex.cc	/^void AcquireGlobal(ThreadState *thr, uptr pc) {$/;"	f	namespace:__tsan
AcquireImpl	lib/tsan/rtl/tsan_rtl_mutex.cc	/^void AcquireImpl(ThreadState *thr, uptr pc, SyncClock *c) {$/;"	f	namespace:__tsan
AcquireReleaseImpl	lib/tsan/rtl/tsan_rtl_mutex.cc	/^void AcquireReleaseImpl(ThreadState *thr, uptr pc, SyncClock *c) {$/;"	f	namespace:__tsan
Acquire_0_then_1	test/tsan/deadlock_detector_stress_test.cc	/^  __attribute__((noinline)) void Acquire_0_then_1() { Acquire0(); Acquire1(); }$/;"	f	class:LockTest
Acquire_1_then_0	test/tsan/deadlock_detector_stress_test.cc	/^  __attribute__((noinline)) void Acquire_1_then_0() { Acquire1(); Acquire0(); }$/;"	f	class:LockTest
Acquire_1_then_2	test/tsan/deadlock_detector_stress_test.cc	/^  __attribute__((noinline)) void Acquire_1_then_2() { Acquire1(); Acquire2(); }$/;"	f	class:LockTest
Acquire_2_then_0	test/tsan/deadlock_detector_stress_test.cc	/^  __attribute__((noinline)) void Acquire_2_then_0() { Acquire2(); Acquire0(); }$/;"	f	class:LockTest
Action	lib/asan/tests/asan_exceptions_test.cc	/^  Action() {}$/;"	f	class:Action
Action	lib/asan/tests/asan_exceptions_test.cc	/^class Action {$/;"	c	file:
ActiveCode	lib/interception/tests/interception_win_test.cc	/^u8* ActiveCode;$/;"	m	namespace:__interception::__anon12	file:
ActiveCodeLength	lib/interception/tests/interception_win_test.cc	/^const size_t ActiveCodeLength = 4096;$/;"	m	namespace:__interception::__anon12	file:
ActiveThreadCount	lib/fuzzer/FuzzerUtilDarwin.cpp	/^static int ActiveThreadCount = 0;$/;"	m	namespace:fuzzer	file:
Add	lib/cfi/cfi.cc	/^void ShadowBuilder::Add(uptr begin, uptr end, uptr cfi_check) {$/;"	f	class:__cfi::ShadowBuilder
Add	lib/fuzzer/FuzzerTracePC.h	/^  void Add(const uint8_t *Data, size_t Size) {$/;"	f	struct:fuzzer::MemMemTable
Add	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^    void Add(void *ptr) {$/;"	f	struct:SizeClassAllocator32::TransferBatch
Add	lib/sanitizer_common/sanitizer_allocator_stats.h	/^  void Add(AllocatorStat i, uptr v) {$/;"	f	class:AllocatorStats
Add	lib/sanitizer_common/sanitizer_flag_parser.cc	/^  void Add(const char *name) {$/;"	f	class:__sanitizer::UnknownFlags
Add	lib/tsan/rtl/tsan_ignoreset.cc	/^void IgnoreSet::Add(u32 stack_id) {$/;"	f	class:__tsan::IgnoreSet
Add	lib/tsan/rtl/tsan_mutexset.cc	/^void MutexSet::Add(u64 id, bool write, u64 epoch) {$/;"	f	class:__tsan::MutexSet
Add	lib/tsan/rtl/tsan_mutexset.h	/^void MutexSet::Add(u64 id, bool write, u64 epoch) {}$/;"	f	class:__tsan::MutexSet
AddAddressRanges	lib/sanitizer_common/sanitizer_procmaps_common.cc	/^void MemoryMappedSegment::AddAddressRanges(LoadedModule *module) {$/;"	f	class:__sanitizer::MemoryMappedSegment
AddAddressRanges	lib/sanitizer_common/sanitizer_procmaps_mac.cc	/^void MemoryMappedSegment::AddAddressRanges(LoadedModule *module) {$/;"	f	class:__sanitizer::MemoryMappedSegment
AddArg	lib/ubsan/ubsan_diag.h	/^  Diag &AddArg(Arg A) {$/;"	f	class:__ubsan::Diag
AddBucket	lib/sanitizer_common/sanitizer_addrhashmap.h	/^  struct AddBucket {$/;"	s	class:__sanitizer::AddrHashMap
AddDeadMutex	lib/tsan/rtl/tsan_rtl_report.cc	/^void ScopedReportBase::AddDeadMutex(u64 id) {$/;"	f	class:__tsan::ScopedReportBase
AddDieCallback	lib/sanitizer_common/sanitizer_termination.cc	/^bool AddDieCallback(DieCallbackType callback) {$/;"	f	namespace:__sanitizer
AddDieCallback	lib/scudo/scudo_termination.cpp	/^bool AddDieCallback(DieCallbackType Callback) { return true; }$/;"	f	namespace:__sanitizer
AddExpectRace	lib/tsan/rtl/tsan_interface_ann.cc	/^static void AddExpectRace(ExpectRace *list,$/;"	f	namespace:__tsan
AddFeature	lib/fuzzer/FuzzerCorpus.h	/^  bool AddFeature(size_t Idx, uint32_t NewSize, bool Shrink) {$/;"	f	class:fuzzer::InputCorpus
AddFrame	lib/tsan/rtl/tsan_symbolize.cc	/^static void AddFrame(void *ctx, const char *function_name, const char *file,$/;"	f	namespace:__tsan
AddHooks	lib/sanitizer_common/sanitizer_symbolizer.cc	/^void Symbolizer::AddHooks(Symbolizer::StartSymbolizationHook start_hook,$/;"	f	class:__sanitizer::Symbolizer
AddIgnoredLibrary	lib/sanitizer_common/sanitizer_libignore.cc	/^void LibIgnore::AddIgnoredLibrary(const char *name_templ) {$/;"	f	class:__sanitizer::LibIgnore
AddLeakedChunk	lib/lsan/lsan_common.cc	/^void LeakReport::AddLeakedChunk(uptr chunk, u32 stack_trace_id,$/;"	f	class:__lsan::LeakReport
AddLocation	lib/tsan/rtl/tsan_rtl_report.cc	/^void ScopedReportBase::AddLocation(uptr addr, uptr size) {$/;"	f	class:__tsan::ScopedReportBase
AddMemoryAccess	lib/tsan/rtl/tsan_rtl_report.cc	/^void ScopedReportBase::AddMemoryAccess(uptr addr, uptr external_tag, Shadow s,$/;"	f	class:__tsan::ScopedReportBase
AddMutex	lib/tsan/rtl/tsan_rtl_report.cc	/^u64 ScopedReportBase::AddMutex(u64 id) {$/;"	f	class:__tsan::ScopedReportBase
AddMutex	lib/tsan/rtl/tsan_rtl_report.cc	/^void ScopedReportBase::AddMutex(const SyncVar *s) {$/;"	f	class:__tsan::ScopedReportBase
AddRacyStacks	lib/tsan/rtl/tsan_rtl_report.cc	/^static void AddRacyStacks(ThreadState *thr, VarSizeStackTrace traces[2],$/;"	f	namespace:__tsan
AddRange	lib/ubsan/ubsan_diag.h	/^  Diag &AddRange(Range A) {$/;"	f	class:__ubsan::Diag
AddSleep	lib/tsan/rtl/tsan_rtl_report.cc	/^void ScopedReportBase::AddSleep(u32 stack_id) {$/;"	f	class:__tsan::ScopedReportBase
AddStack	lib/tsan/rtl/tsan_rtl_report.cc	/^void ScopedReportBase::AddStack(StackTrace stack, bool suppressable) {$/;"	f	class:__tsan::ScopedReportBase
AddTagToPointer	lib/hwasan/hwasan.h	/^static inline uptr AddTagToPointer(uptr p, tag_t tag) {$/;"	f
AddThread	lib/tsan/rtl/tsan_rtl_report.cc	/^void ScopedReportBase::AddThread(const ThreadContext *tctx, bool suppressable) {$/;"	f	class:__tsan::ScopedReportBase
AddThread	lib/tsan/rtl/tsan_rtl_report.cc	/^void ScopedReportBase::AddThread(int unique_tid, bool suppressable) {$/;"	f	class:__tsan::ScopedReportBase
AddToCorpus	lib/fuzzer/FuzzerCorpus.h	/^  void AddToCorpus(const Unit &U, size_t NumFeatures, bool MayDeleteFile,$/;"	f	class:fuzzer::InputCorpus
AddUnchecked	lib/cfi/cfi.cc	/^void ShadowBuilder::AddUnchecked(uptr begin, uptr end) {$/;"	f	class:__cfi::ShadowBuilder
AddUniqueTid	lib/tsan/rtl/tsan_rtl_report.cc	/^void ScopedReportBase::AddUniqueTid(int unique_tid) {$/;"	f	class:__tsan::ScopedReportBase
AddValue	lib/fuzzer/FuzzerValueBitMap.h	/^  inline bool AddValue(uintptr_t Value) {$/;"	f	struct:fuzzer::ValueBitMap
AddValueForMemcmp	lib/fuzzer/FuzzerTracePC.cpp	/^void TracePC::AddValueForMemcmp(void *caller_pc, const void *s1, const void *s2,$/;"	f	class:fuzzer::TracePC
AddValueModPrime	lib/fuzzer/FuzzerValueBitMap.h	/^  inline bool AddValueModPrime(uintptr_t Value) {$/;"	f	struct:fuzzer::ValueBitMap
AddWordFromDictionary	lib/fuzzer/FuzzerMutate.cpp	/^size_t MutationDispatcher::AddWordFromDictionary(Dictionary &D, uint8_t *Data,$/;"	f	class:fuzzer::MutationDispatcher
AddWordToManualDictionary	lib/fuzzer/FuzzerMutate.cpp	/^void MutationDispatcher::AddWordToManualDictionary(const Word &W) {$/;"	f	class:fuzzer::MutationDispatcher
AdditionalSize	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^  static uptr AdditionalSize() { return 0; }$/;"	f	class:SizeClassAllocator32
AdditionalSize	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  static uptr AdditionalSize() {$/;"	f	class:SizeClassAllocator64
Addr0AndSizeAreEqual	lib/tsan/rtl/tsan_rtl.h	/^  bool Addr0AndSizeAreEqual(const Shadow s1, const Shadow s2) {$/;"	f	class:__tsan::Shadow
Addr2LinePool	lib/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc	/^  explicit Addr2LinePool(const char *addr2line_path,$/;"	f	class:__sanitizer::Addr2LinePool
Addr2LinePool	lib/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc	/^class Addr2LinePool : public SymbolizerTool {$/;"	c	namespace:__sanitizer	file:
Addr2LineProcess	lib/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc	/^  Addr2LineProcess(const char *path, const char *module_name)$/;"	f	class:__sanitizer::Addr2LineProcess
Addr2LineProcess	lib/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc	/^class Addr2LineProcess : public SymbolizerProcess {$/;"	c	namespace:__sanitizer	file:
Addr2LineSymbolizer	lib/asan/scripts/asan_symbolize.py	/^class Addr2LineSymbolizer(Symbolizer):$/;"	c
AddrHashMap	lib/sanitizer_common/sanitizer_addrhashmap.h	/^AddrHashMap<T, kSize>::AddrHashMap() {$/;"	f	class:__sanitizer::AddrHashMap
AddrHashMap	lib/sanitizer_common/sanitizer_addrhashmap.h	/^class AddrHashMap {$/;"	c	namespace:__sanitizer
AddrIsAlignedByGranularity	lib/asan/asan_mapping.h	/^static inline bool AddrIsAlignedByGranularity(uptr a) {$/;"	f	namespace:__asan
AddrIsApp	test/msan/mmap.cc	/^bool AddrIsApp(void *p) {$/;"	f
AddrIsAtLeft	lib/asan/asan_allocator.h	/^  bool AddrIsAtLeft(uptr addr, uptr access_size, sptr *offset) const {$/;"	f	class:__asan::AsanChunkView
AddrIsAtRight	lib/asan/asan_allocator.h	/^  bool AddrIsAtRight(uptr addr, uptr access_size, sptr *offset) const {$/;"	f	class:__asan::AsanChunkView
AddrIsInFakeStack	lib/asan/asan_fake_stack.cc	/^uptr FakeStack::AddrIsInFakeStack(uptr ptr, uptr *frame_beg, uptr *frame_end) {$/;"	f	class:__asan::FakeStack
AddrIsInFakeStack	lib/asan/asan_fake_stack.h	/^  USED uptr AddrIsInFakeStack(uptr addr) {$/;"	f	class:__asan::FakeStack
AddrIsInHighMem	lib/asan/asan_mapping_myriad.h	/^static inline bool AddrIsInHighMem(uptr a) {$/;"	f	namespace:__asan
AddrIsInHighShadow	lib/asan/asan_mapping_myriad.h	/^static inline bool AddrIsInHighShadow(uptr a) {$/;"	f	namespace:__asan
AddrIsInLowMem	lib/asan/asan_mapping_myriad.h	/^static inline bool AddrIsInLowMem(uptr a) {$/;"	f	namespace:__asan
AddrIsInLowShadow	lib/asan/asan_mapping_myriad.h	/^static inline bool AddrIsInLowShadow(uptr a) {$/;"	f	namespace:__asan
AddrIsInMem	lib/asan/asan_mapping.h	/^static inline bool AddrIsInMem(uptr a) {$/;"	f	namespace:__asan
AddrIsInMidMem	lib/asan/asan_mapping_myriad.h	/^static inline bool AddrIsInMidMem(uptr a) {$/;"	f	namespace:__asan
AddrIsInMidShadow	lib/asan/asan_mapping_myriad.h	/^static inline bool AddrIsInMidShadow(uptr a) {$/;"	f	namespace:__asan
AddrIsInShadow	lib/asan/asan_mapping.h	/^static inline bool AddrIsInShadow(uptr a) {$/;"	f	namespace:__asan
AddrIsInShadowGap	lib/asan/asan_mapping_myriad.h	/^static inline bool AddrIsInShadowGap(uptr a) {$/;"	f	namespace:__asan
AddrIsInStack	lib/asan/asan_thread.cc	/^bool AsanThread::AddrIsInStack(uptr addr) {$/;"	f	class:__asan::AsanThread
AddrIsInStack	lib/hwasan/hwasan_thread.h	/^  bool AddrIsInStack(uptr addr) {$/;"	f	class:__hwasan::HwasanThread
AddrIsInStack	lib/msan/msan_thread.h	/^  bool AddrIsInStack(uptr addr) {$/;"	f	class:__msan::MsanThread
AddrIsInside	lib/asan/asan_allocator.cc	/^  bool AddrIsInside(uptr addr, bool locked_version = false) {$/;"	f	struct:__asan::AsanChunk
AddrIsInside	lib/asan/asan_allocator.h	/^  bool AddrIsInside(uptr addr, uptr access_size, sptr *offset) const {$/;"	f	class:__asan::AsanChunkView
Address	lib/asan/asan_descriptions.h	/^  uptr Address() const {$/;"	f	class:__asan::AddressDescription
Address	lib/xray/xray_interface_internal.h	/^  uint64_t Address;$/;"	m	struct:XRaySledEntry
AddressDescription	lib/asan/asan_descriptions.cc	/^AddressDescription::AddressDescription(uptr addr, uptr access_size,$/;"	f	class:__asan::AddressDescription
AddressDescription	lib/asan/asan_descriptions.h	/^  AddressDescription(uptr addr, bool shouldLockThreadRegistry = true)$/;"	f	class:__asan::AddressDescription
AddressDescription	lib/asan/asan_descriptions.h	/^class AddressDescription {$/;"	c	namespace:__asan
AddressDescriptionData	lib/asan/asan_descriptions.h	/^  struct AddressDescriptionData {$/;"	s	class:__asan::AddressDescription
AddressInfo	lib/sanitizer_common/sanitizer_symbolizer.cc	/^AddressInfo::AddressInfo() {$/;"	f	class:__sanitizer::AddressInfo
AddressInfo	lib/sanitizer_common/sanitizer_symbolizer.h	/^struct AddressInfo {$/;"	s	namespace:__sanitizer
AddressIsPoisoned	lib/asan/asan_mapping.h	/^static inline bool AddressIsPoisoned(uptr a) {$/;"	f	namespace:__asan
AddressKind	lib/asan/asan_descriptions.h	/^enum AddressKind {$/;"	g	namespace:__asan
AddressRange	lib/sanitizer_common/sanitizer_common.h	/^    AddressRange(uptr beg, uptr end, bool executable, bool writable,$/;"	f	struct:__sanitizer::LoadedModule::AddressRange
AddressRange	lib/sanitizer_common/sanitizer_common.h	/^  struct AddressRange {$/;"	s	class:__sanitizer::LoadedModule
AddressSpaceIsUnlimited	lib/sanitizer_common/sanitizer_posix_libcdep.cc	/^bool AddressSpaceIsUnlimited() {$/;"	f	namespace:__sanitizer
AddressSpaceIsUnlimited	lib/sanitizer_common/sanitizer_win.cc	/^bool AddressSpaceIsUnlimited() {$/;"	f	namespace:__sanitizer
AdjacentShadowValuesAreFullyPoisoned	lib/asan/asan_errors.cc	/^static bool AdjacentShadowValuesAreFullyPoisoned(u8 *s) {$/;"	f	namespace:__asan
AdjustStackSize	lib/sanitizer_common/sanitizer_posix_libcdep.cc	/^void AdjustStackSize(void *attr_) {$/;"	f	namespace:__sanitizer
AdvancedCallback	lib/sanitizer_common/tests/sanitizer_stoptheworld_test.cc	/^void AdvancedCallback(const SuspendedThreadsList &suspended_threads_list,$/;"	f	namespace:__sanitizer
AdvancedCallbackArgument	lib/sanitizer_common/tests/sanitizer_stoptheworld_test.cc	/^  AdvancedCallbackArgument()$/;"	f	struct:__sanitizer::AdvancedCallbackArgument
AdvancedCallbackArgument	lib/sanitizer_common/tests/sanitizer_stoptheworld_test.cc	/^struct AdvancedCallbackArgument {$/;"	s	namespace:__sanitizer	file:
AdvancedIncrementerThread	lib/sanitizer_common/tests/sanitizer_stoptheworld_test.cc	/^void *AdvancedIncrementerThread(void *argument) {$/;"	f	namespace:__sanitizer
AflInputBuf	lib/fuzzer/afl/afl_driver.cpp	/^static uint8_t AflInputBuf[kMaxAflInputSize];$/;"	v	file:
AfterFork	lib/hwasan/hwasan_interceptors.cc	/^static void AfterFork() {$/;"	f	file:
AfterFork	lib/msan/msan_interceptors.cc	/^static void AfterFork() {$/;"	f	file:
AfterSleep	lib/tsan/rtl/tsan_rtl_mutex.cc	/^void AfterSleep(ThreadState *thr, uptr pc) {$/;"	f	namespace:__tsan
AlarmCallback	lib/fuzzer/FuzzerLoop.cpp	/^void Fuzzer::AlarmCallback() {$/;"	f	class:fuzzer::Fuzzer
AlarmHandler	lib/fuzzer/FuzzerUtilFuchsia.cpp	/^void AlarmHandler(int Seconds) {$/;"	f	namespace:fuzzer::__anon35
AlarmHandler	lib/fuzzer/FuzzerUtilPosix.cpp	/^static void AlarmHandler(int, siginfo_t *, void *) {$/;"	f	namespace:fuzzer
AlarmHandler	lib/fuzzer/FuzzerUtilWindows.cpp	/^void CALLBACK AlarmHandler(PVOID, BOOLEAN) {$/;"	f	namespace:fuzzer
AlignedElementStorageSize	lib/xray/xray_segmented_array.h	/^  static constexpr size_t AlignedElementStorageSize =$/;"	m	class:__xray::Array
AlignedNextBlock	lib/xray/xray_allocator.h	/^  void *AlignedNextBlock = nullptr;$/;"	m	struct:__xray::Allocator
AllFeatures	lib/fuzzer/FuzzerMerge.cpp	/^Set<uint32_t> Merger::AllFeatures() const {$/;"	f	class:fuzzer::Merger
AllInputsAreFiles	lib/fuzzer/FuzzerDriver.cpp	/^static bool AllInputsAreFiles() {$/;"	f	namespace:fuzzer
AllLines	test/fuzzer/SimpleCmpTest.cpp	/^int AllLines[__LINE__ + 1];  \/\/ Must be the last line.$/;"	v
Alloc	lib/sanitizer_common/sanitizer_flag_parser.cc	/^LowLevelAllocator FlagParser::Alloc;$/;"	m	class:__sanitizer::FlagParser	file:
Alloc	lib/sanitizer_common/sanitizer_flag_parser.h	/^  static LowLevelAllocator Alloc;$/;"	m	class:__sanitizer::FlagParser
Alloc	lib/tsan/rtl/tsan_dense_alloc.h	/^  IndexT Alloc(Cache *c) {$/;"	f	class:__tsan::DenseSlabAlloc
Alloc	lib/xray/xray_allocator.h	/^  void *Alloc() {$/;"	f	struct:__xray::Allocator
Alloc	lib/xray/xray_segmented_array.h	/^  AllocatorType *Alloc;$/;"	m	class:__xray::Array
AllocBeg	lib/asan/asan_allocator.cc	/^  void *AllocBeg(bool locked_version = false) {$/;"	f	struct:__asan::AsanChunk
AllocBlock	lib/tsan/rtl/tsan_sync.cc	/^void MetaMap::AllocBlock(ThreadState *thr, uptr pc, uptr p, uptr sz) {$/;"	f	class:__tsan::MetaMap
AllocContext	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^static tsan_block_context_t *AllocContext(ThreadState *thr, uptr pc,$/;"	f	namespace:__tsan
AllocGoroutine	lib/tsan/go/tsan_go.cc	/^static ThreadState *AllocGoroutine() {$/;"	f	file:
AllocThread	test/asan/TestCases/Posix/deep_thread_stack.cc	/^void *AllocThread(void *arg) {$/;"	f
AllocThread	test/tsan/debug_alloc_stack.cc	/^void *AllocThread(void *context) {$/;"	f
AllocThread	test/tsan/race_on_heap.cc	/^void *AllocThread(void* arg) {$/;"	f
AllocTid	lib/asan/asan_allocator.cc	/^uptr AsanChunkView::AllocTid() const { return chunk_->alloc_tid; }$/;"	f	class:__asan::AsanChunkView
AllocTracer	lib/fuzzer/FuzzerLoop.cpp	/^static MallocFreeTracer AllocTracer;$/;"	m	namespace:fuzzer	file:
AllocType	lib/asan/asan_allocator.h	/^enum AllocType {$/;"	g	namespace:__asan
AllocType	lib/scudo/scudo_allocator.h	/^  u64 AllocType         : 2;   \/\/ malloc, new, new[], or memalign$/;"	m	struct:__scudo::UnpackedHeader
Allocate	lib/asan/asan_allocator.cc	/^  void *Allocate(uptr size) {$/;"	f	struct:__asan::QuarantineCallback
Allocate	lib/asan/asan_allocator.cc	/^  void *Allocate(uptr size, uptr alignment, BufferedStackTrace *stack,$/;"	f	struct:__asan::Allocator
Allocate	lib/asan/asan_fake_stack.cc	/^FakeFrame *FakeStack::Allocate(uptr stack_size_log, uptr class_id,$/;"	f	class:__asan::FakeStack
Allocate	lib/lsan/lsan_allocator.cc	/^void *Allocate(const StackTrace &stack, uptr size, uptr alignment,$/;"	f	namespace:__lsan
Allocate	lib/sanitizer_common/sanitizer_allocator.cc	/^void *LowLevelAllocator::Allocate(uptr size) {$/;"	f	class:__sanitizer::LowLevelAllocator
Allocate	lib/sanitizer_common/sanitizer_allocator_combined.h	/^  void *Allocate(AllocatorCache *cache, uptr size, uptr alignment) {$/;"	f	class:CombinedAllocator
Allocate	lib/sanitizer_common/sanitizer_allocator_local_cache.h	/^  void *Allocate(SizeClassAllocator *allocator, uptr class_id) {$/;"	f	struct:SizeClassAllocator32LocalCache
Allocate	lib/sanitizer_common/sanitizer_allocator_local_cache.h	/^  void *Allocate(SizeClassAllocator *allocator, uptr class_id) {$/;"	f	struct:SizeClassAllocator64LocalCache
Allocate	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^  void *Allocate(AllocatorStats *stat, uptr size, uptr alignment) {$/;"	f	class:LargeMmapAllocator
Allocate	lib/sanitizer_common/tests/sanitizer_quarantine_test.cc	/^  void *Allocate(uptr size) {$/;"	f	struct:__sanitizer::QuarantineCallback
Allocate	lib/scudo/scudo_allocator.cpp	/^  void *Allocate(uptr Size) {$/;"	f	struct:__scudo::QuarantineCallback
Allocate	lib/scudo/scudo_allocator_secondary.h	/^  void *Allocate(AllocatorStats *Stats, uptr Size, uptr Alignment) {$/;"	f	class:LargeMmapAllocator
Allocate	lib/xray/xray_allocator.h	/^  Block Allocate() { return {Alloc()}; }$/;"	f	struct:__xray::Allocator
Allocate	test/asan/TestCases/Posix/new_array_cookie_with_new_from_class.cc	/^  static void *Allocate(size_t s) {$/;"	f	struct:Foo
AllocateBatch	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^  NOINLINE TransferBatch *AllocateBatch(AllocatorStats *stat, AllocatorCache *c,$/;"	f	class:SizeClassAllocator32
AllocateCode2GBAway	lib/interception/tests/interception_win_test.cc	/^u8 *AllocateCode2GBAway(u8 *Base) {$/;"	f	namespace:__interception::__anon12
AllocateCurrentUnitData	lib/fuzzer/FuzzerLoop.cpp	/^void Fuzzer::AllocateCurrentUnitData() {$/;"	f	class:fuzzer::Fuzzer
AllocateFromLocalPool	lib/asan/asan_malloc_linux.cc	/^static void *AllocateFromLocalPool(uptr size_in_bytes) {$/;"	f	file:
AllocateFromLocalPool	lib/hwasan/hwasan_interceptors.cc	/^static void *AllocateFromLocalPool(uptr size_in_bytes) {$/;"	f	file:
AllocateFromLocalPool	lib/msan/msan_interceptors.cc	/^static void *AllocateFromLocalPool(uptr size_in_bytes) {$/;"	f	file:
AllocateMemoryForTrampoline	lib/interception/interception_win.cc	/^static uptr AllocateMemoryForTrampoline(uptr image_address, size_t size) {$/;"	f	namespace:__interception
AllocateRegion	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^  uptr AllocateRegion(AllocatorStats *stat, uptr class_id) {$/;"	f	class:SizeClassAllocator32
AllocateTrampolineRegion	lib/interception/interception_win.cc	/^static void *AllocateTrampolineRegion(uptr image_address, size_t granularity) {$/;"	f	namespace:__interception
AllocateTwoAdjacentArrays	lib/asan/tests/asan_mem_test.cc	/^static bool AllocateTwoAdjacentArrays(char **x1, char **x2, size_t size) {$/;"	f	file:
AllocatedBlocks	lib/xray/xray_allocator.h	/^  size_t AllocatedBlocks = 0;$/;"	m	struct:__xray::Allocator
AllocatedBytes	lib/scudo/scudo_allocator_secondary.h	/^  uptr AllocatedBytes;$/;"	m	class:LargeMmapAllocator
AllocatedPointers	test/fuzzer/AccumulateAllocationsTest.cpp	/^int *AllocatedPointers[kAllocatedPointersSize];$/;"	v
Allocation	lib/asan/asan_descriptions.h	/^  const char *Allocation() { return Magenta(); }$/;"	f	class:__asan::Decorator
Allocation	lib/hwasan/hwasan_report.cc	/^  const char *Allocation() const { return Magenta(); }$/;"	f	class:__hwasan::Decorator
AllocationSite	lib/asan/asan_memory_profile.cc	/^struct AllocationSite {$/;"	s	namespace:__asan	file:
AllocationSize	lib/asan/asan_allocator.cc	/^  uptr AllocationSize(uptr p) {$/;"	f	struct:__asan::Allocator
AllocationSize	lib/hwasan/hwasan_allocator.cc	/^static uptr AllocationSize(const void *user_ptr) {$/;"	f	namespace:__hwasan
AllocationSize	lib/msan/msan_allocator.cc	/^static uptr AllocationSize(const void *p) {$/;"	f	namespace:__msan
AllocationSizeRequiredForNElements	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^    static uptr AllocationSizeRequiredForNElements(uptr n) {$/;"	f	struct:SizeClassAllocator32::TransferBatch
Allocator	lib/asan/asan_allocator.cc	/^  explicit Allocator(LinkerInitialized)$/;"	f	struct:__asan::Allocator
Allocator	lib/asan/asan_allocator.cc	/^struct Allocator {$/;"	s	namespace:__asan	file:
Allocator	lib/hwasan/hwasan_allocator.cc	/^                          SecondaryAllocator> Allocator;$/;"	t	namespace:__hwasan	file:
Allocator	lib/lsan/lsan_allocator.cc	/^          SecondaryAllocator> Allocator;$/;"	t	namespace:__lsan	file:
Allocator	lib/msan/msan_allocator.cc	/^                          SecondaryAllocator> Allocator;$/;"	t	namespace:__msan	file:
Allocator	lib/sanitizer_common/sanitizer_allocator_local_cache.h	/^  typedef SizeClassAllocator Allocator;$/;"	t	struct:SizeClassAllocator32LocalCache
Allocator	lib/sanitizer_common/sanitizer_allocator_local_cache.h	/^  typedef SizeClassAllocator Allocator;$/;"	t	struct:SizeClassAllocator64LocalCache
Allocator	lib/sanitizer_common/tests/sanitizer_allocator_testlib.cc	/^          SecondaryAllocator> Allocator;$/;"	t	namespace:__anon59	file:
Allocator	lib/scudo/scudo_allocator.cpp	/^  explicit Allocator(LinkerInitialized)$/;"	f	struct:__scudo::Allocator
Allocator	lib/scudo/scudo_allocator.cpp	/^struct Allocator {$/;"	s	namespace:__scudo	file:
Allocator	lib/tsan/rtl/tsan_rtl.h	/^    SecondaryAllocator> Allocator;$/;"	t	namespace:__tsan
Allocator	lib/xray/xray_allocator.h	/^  explicit Allocator(size_t M)$/;"	f	struct:__xray::Allocator
Allocator	lib/xray/xray_allocator.h	/^template <size_t N> struct Allocator {$/;"	s	namespace:__xray
Allocator32Compact	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^typedef SizeClassAllocator32<AP32Compact> Allocator32Compact;$/;"	t	file:
Allocator32SeparateBatches	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^typedef SizeClassAllocator32<AP32SeparateBatches> Allocator32SeparateBatches;$/;"	t	file:
Allocator64	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^typedef SizeClassAllocator64<AP64> Allocator64;$/;"	t	file:
Allocator64Compact	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^typedef SizeClassAllocator64<AP64Compact> Allocator64Compact;$/;"	t	file:
Allocator64Dynamic	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^typedef SizeClassAllocator64<AP64Dyn> Allocator64Dynamic;$/;"	t	file:
Allocator64VeryCompact	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^typedef SizeClassAllocator64<AP64VeryCompact> Allocator64VeryCompact;$/;"	t	file:
AllocatorCache	lib/asan/asan_allocator.h	/^typedef SizeClassAllocatorLocalCache<PrimaryAllocator> AllocatorCache;$/;"	t	namespace:__asan
AllocatorCache	lib/hwasan/hwasan_allocator.cc	/^typedef SizeClassAllocatorLocalCache<PrimaryAllocator> AllocatorCache;$/;"	t	namespace:__hwasan	file:
AllocatorCache	lib/lsan/lsan_allocator.h	/^typedef SizeClassAllocatorLocalCache<PrimaryAllocator> AllocatorCache;$/;"	t	namespace:__lsan
AllocatorCache	lib/msan/msan_allocator.cc	/^typedef SizeClassAllocatorLocalCache<PrimaryAllocator> AllocatorCache;$/;"	t	namespace:__msan	file:
AllocatorCache	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^  typedef SizeClassAllocator32LocalCache<ThisT> AllocatorCache;$/;"	t	class:SizeClassAllocator32
AllocatorCache	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  typedef SizeClassAllocator64LocalCache<ThisT> AllocatorCache;$/;"	t	class:SizeClassAllocator64
AllocatorCache	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^typedef SizeClassAllocatorLocalCache<Allocator64> AllocatorCache;$/;"	t	file:
AllocatorCache	lib/sanitizer_common/tests/sanitizer_allocator_testlib.cc	/^typedef SizeClassAllocatorLocalCache<PrimaryAllocator> AllocatorCache;$/;"	t	namespace:__anon59	file:
AllocatorCache	lib/tsan/rtl/tsan_rtl.h	/^typedef SizeClassAllocatorLocalCache<PrimaryAllocator> AllocatorCache;$/;"	t	namespace:__tsan
AllocatorCacheT	lib/scudo/scudo_allocator.h	/^typedef SizeClassAllocatorLocalCache<PrimaryT> AllocatorCacheT;$/;"	t	namespace:__scudo
AllocatorGlobalStats	lib/sanitizer_common/sanitizer_allocator_stats.h	/^class AllocatorGlobalStats : public AllocatorStats {$/;"	c
AllocatorLeakTestWorker	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^void *AllocatorLeakTestWorker(void *arg) {$/;"	f
AllocatorMayReturnNull	lib/sanitizer_common/sanitizer_allocator.cc	/^bool AllocatorMayReturnNull() {$/;"	f	namespace:__sanitizer
AllocatorOptions	lib/asan/asan_allocator.h	/^struct AllocatorOptions {$/;"	s	namespace:__asan
AllocatorPrintStats	lib/tsan/rtl/tsan_mman.cc	/^void AllocatorPrintStats() {$/;"	f	namespace:__tsan
AllocatorProcFinish	lib/tsan/rtl/tsan_mman.cc	/^void AllocatorProcFinish(Processor *proc) {$/;"	f	namespace:__tsan
AllocatorProcStart	lib/tsan/rtl/tsan_mman.cc	/^void AllocatorProcStart(Processor *proc) {$/;"	f	namespace:__tsan
AllocatorSize	lib/scudo/scudo_platform.h	/^const uptr AllocatorSize = 0x4000000000ULL;  \/\/ 256G.$/;"	m	namespace:__scudo
AllocatorSpace	lib/scudo/scudo_allocator.h	/^const uptr AllocatorSpace = ~0ULL;$/;"	m	namespace:__scudo
AllocatorStat	lib/sanitizer_common/sanitizer_allocator_stats.h	/^enum AllocatorStat {$/;"	g
AllocatorStatAllocated	lib/sanitizer_common/sanitizer_allocator_stats.h	/^  AllocatorStatAllocated,$/;"	e	enum:AllocatorStat
AllocatorStatCount	lib/sanitizer_common/sanitizer_allocator_stats.h	/^  AllocatorStatCount$/;"	e	enum:AllocatorStat
AllocatorStatCounters	lib/sanitizer_common/sanitizer_allocator_stats.h	/^typedef uptr AllocatorStatCounters[AllocatorStatCount];$/;"	t
AllocatorStatMapped	lib/sanitizer_common/sanitizer_allocator_stats.h	/^  AllocatorStatMapped,$/;"	e	enum:AllocatorStat
AllocatorStats	lib/sanitizer_common/sanitizer_allocator_stats.h	/^class AllocatorStats {$/;"	c
AllocatorThreadFinish	lib/lsan/lsan_allocator.cc	/^void AllocatorThreadFinish() {$/;"	f	namespace:__lsan
Allocators	lib/xray/xray_function_call_trie.h	/^    Allocators() {}$/;"	f	struct:__xray::FunctionCallTrie::Allocators
Allocators	lib/xray/xray_function_call_trie.h	/^    Allocators(Allocators &&O)$/;"	f	struct:__xray::FunctionCallTrie::Allocators
Allocators	lib/xray/xray_function_call_trie.h	/^  struct Allocators {$/;"	s	class:__xray::FunctionCallTrie
AlreadyFinalized	lib/xray/xray_buffer_queue.h	/^    AlreadyFinalized,$/;"	m	class:__xray::BufferQueue::ErrorCode
AlwaysInstrument	lib/xray/xray_interface_internal.h	/^  unsigned char AlwaysInstrument;$/;"	m	struct:XRaySledEntry
AnalyzeDictionary	lib/fuzzer/FuzzerDriver.cpp	/^int AnalyzeDictionary(Fuzzer *F, const Vector<Unit>& Dict,$/;"	f	namespace:fuzzer
AndroidApiLevel	lib/sanitizer_common/sanitizer_common.h	/^enum AndroidApiLevel {$/;"	g	namespace:__sanitizer
AndroidDetectApiLevel	lib/sanitizer_common/sanitizer_linux.cc	/^static AndroidApiLevel AndroidDetectApiLevel() {$/;"	f	namespace:__sanitizer
AndroidGetApiLevel	lib/sanitizer_common/sanitizer_common.h	/^INLINE AndroidApiLevel AndroidGetApiLevel() { return ANDROID_NOT_ANDROID; }$/;"	f	namespace:__sanitizer
AndroidGetApiLevel	lib/sanitizer_common/sanitizer_linux.cc	/^AndroidApiLevel AndroidGetApiLevel() {$/;"	f	namespace:__sanitizer
AndroidLogInit	lib/sanitizer_common/sanitizer_common.h	/^INLINE void AndroidLogInit() {}$/;"	f	namespace:__sanitizer
AndroidLogInit	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^void AndroidLogInit() {$/;"	f	namespace:__sanitizer
AndroidLogInit	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^void AndroidLogInit() {}$/;"	f	namespace:__sanitizer
AndroidLogWrite	lib/sanitizer_common/sanitizer_common.h	/^INLINE void AndroidLogWrite(const char *buffer_unused) {}$/;"	f	namespace:__sanitizer
AnnotateBenignRace	lib/tsan/rtl/tsan_interface_ann.cc	/^void INTERFACE_ATTRIBUTE AnnotateBenignRace($/;"	f
AnnotateBenignRaceSized	lib/tsan/rtl/tsan_interface_ann.cc	/^void INTERFACE_ATTRIBUTE AnnotateBenignRaceSized($/;"	f
AnnotateCondVarSignal	lib/tsan/rtl/tsan_interface_ann.cc	/^void INTERFACE_ATTRIBUTE AnnotateCondVarSignal(char *f, int l, uptr cv) {$/;"	f
AnnotateCondVarSignalAll	lib/tsan/rtl/tsan_interface_ann.cc	/^void INTERFACE_ATTRIBUTE AnnotateCondVarSignalAll(char *f, int l, uptr cv) {$/;"	f
AnnotateCondVarWait	lib/tsan/rtl/tsan_interface_ann.cc	/^void INTERFACE_ATTRIBUTE AnnotateCondVarWait(char *f, int l, uptr cv,$/;"	f
AnnotateEnableRaceDetection	lib/tsan/rtl/tsan_interface_ann.cc	/^void INTERFACE_ATTRIBUTE AnnotateEnableRaceDetection($/;"	f
AnnotateExpectRace	lib/tsan/rtl/tsan_interface_ann.cc	/^void INTERFACE_ATTRIBUTE AnnotateExpectRace($/;"	f
AnnotateFlushExpectedRaces	lib/tsan/rtl/tsan_interface_ann.cc	/^void INTERFACE_ATTRIBUTE AnnotateFlushExpectedRaces(char *f, int l) {$/;"	f
AnnotateFlushState	lib/tsan/rtl/tsan_interface_ann.cc	/^void INTERFACE_ATTRIBUTE AnnotateFlushState(char *f, int l) {$/;"	f
AnnotateHappensAfter	lib/tsan/rtl/tsan_interface_ann.cc	/^void INTERFACE_ATTRIBUTE AnnotateHappensAfter(char *f, int l, uptr addr) {$/;"	f
AnnotateHappensBefore	lib/tsan/rtl/tsan_interface_ann.cc	/^void INTERFACE_ATTRIBUTE AnnotateHappensBefore(char *f, int l, uptr addr) {$/;"	f
AnnotateIgnoreReadsBegin	lib/tsan/rtl/tsan_interface_ann.cc	/^void INTERFACE_ATTRIBUTE AnnotateIgnoreReadsBegin(char *f, int l) {$/;"	f
AnnotateIgnoreReadsEnd	lib/tsan/rtl/tsan_interface_ann.cc	/^void INTERFACE_ATTRIBUTE AnnotateIgnoreReadsEnd(char *f, int l) {$/;"	f
AnnotateIgnoreSyncBegin	lib/tsan/rtl/tsan_interface_ann.cc	/^void INTERFACE_ATTRIBUTE AnnotateIgnoreSyncBegin(char *f, int l) {$/;"	f
AnnotateIgnoreSyncEnd	lib/tsan/rtl/tsan_interface_ann.cc	/^void INTERFACE_ATTRIBUTE AnnotateIgnoreSyncEnd(char *f, int l) {$/;"	f
AnnotateIgnoreWritesBegin	lib/tsan/rtl/tsan_interface_ann.cc	/^void INTERFACE_ATTRIBUTE AnnotateIgnoreWritesBegin(char *f, int l) {$/;"	f
AnnotateIgnoreWritesEnd	lib/tsan/rtl/tsan_interface_ann.cc	/^void INTERFACE_ATTRIBUTE AnnotateIgnoreWritesEnd(char *f, int l) {$/;"	f
AnnotateMemoryIsInitialized	lib/tsan/rtl/tsan_interface_ann.cc	/^AnnotateMemoryIsInitialized(char *f, int l, uptr mem, uptr sz) {}$/;"	f
AnnotateMemoryIsUninitialized	lib/tsan/rtl/tsan_interface_ann.cc	/^AnnotateMemoryIsUninitialized(char *f, int l, uptr mem, uptr sz) {}$/;"	f
AnnotateMutexIsNotPHB	lib/tsan/rtl/tsan_interface_ann.cc	/^void INTERFACE_ATTRIBUTE AnnotateMutexIsNotPHB(char *f, int l, uptr mu) {$/;"	f
AnnotateMutexIsUsedAsCondVar	lib/tsan/rtl/tsan_interface_ann.cc	/^void INTERFACE_ATTRIBUTE AnnotateMutexIsUsedAsCondVar($/;"	f
AnnotateNewMemory	lib/tsan/rtl/tsan_interface_ann.cc	/^void INTERFACE_ATTRIBUTE AnnotateNewMemory(char *f, int l, uptr mem,$/;"	f
AnnotateNoOp	lib/tsan/rtl/tsan_interface_ann.cc	/^void INTERFACE_ATTRIBUTE AnnotateNoOp(char *f, int l, uptr mem) {$/;"	f
AnnotatePCQCreate	lib/tsan/rtl/tsan_interface_ann.cc	/^void INTERFACE_ATTRIBUTE AnnotatePCQCreate($/;"	f
AnnotatePCQDestroy	lib/tsan/rtl/tsan_interface_ann.cc	/^void INTERFACE_ATTRIBUTE AnnotatePCQDestroy($/;"	f
AnnotatePCQGet	lib/tsan/rtl/tsan_interface_ann.cc	/^void INTERFACE_ATTRIBUTE AnnotatePCQGet($/;"	f
AnnotatePCQPut	lib/tsan/rtl/tsan_interface_ann.cc	/^void INTERFACE_ATTRIBUTE AnnotatePCQPut($/;"	f
AnnotatePublishMemoryRange	lib/tsan/rtl/tsan_interface_ann.cc	/^void INTERFACE_ATTRIBUTE AnnotatePublishMemoryRange($/;"	f
AnnotateRWLockAcquired	lib/tsan/rtl/tsan_interface_ann.cc	/^void INTERFACE_ATTRIBUTE AnnotateRWLockAcquired(char *f, int l, uptr m,$/;"	f
AnnotateRWLockCreate	lib/tsan/rtl/tsan_interface_ann.cc	/^void INTERFACE_ATTRIBUTE AnnotateRWLockCreate(char *f, int l, uptr m) {$/;"	f
AnnotateRWLockCreateStatic	lib/tsan/rtl/tsan_interface_ann.cc	/^void INTERFACE_ATTRIBUTE AnnotateRWLockCreateStatic(char *f, int l, uptr m) {$/;"	f
AnnotateRWLockDestroy	lib/tsan/rtl/tsan_interface_ann.cc	/^void INTERFACE_ATTRIBUTE AnnotateRWLockDestroy(char *f, int l, uptr m) {$/;"	f
AnnotateRWLockReleased	lib/tsan/rtl/tsan_interface_ann.cc	/^void INTERFACE_ATTRIBUTE AnnotateRWLockReleased(char *f, int l, uptr m,$/;"	f
AnnotateThreadName	lib/tsan/rtl/tsan_interface_ann.cc	/^void INTERFACE_ATTRIBUTE AnnotateThreadName($/;"	f
AnnotateTraceMemory	lib/tsan/rtl/tsan_interface_ann.cc	/^void INTERFACE_ATTRIBUTE AnnotateTraceMemory(char *f, int l, uptr mem) {$/;"	f
AnnotateUnpublishMemoryRange	lib/tsan/rtl/tsan_interface_ann.cc	/^void INTERFACE_ATTRIBUTE AnnotateUnpublishMemoryRange($/;"	f
AnnounceOutput	lib/fuzzer/FuzzerLoop.cpp	/^void Fuzzer::AnnounceOutput(const uint8_t *Data, size_t Size) {$/;"	f	class:fuzzer::Fuzzer
Anon	test/msan/dtor-bit-fields.cc	/^struct Anon {$/;"	s	file:
AnotherFunction	test/tsan/race_top_suppression1.cc	/^void AnotherFunction(int *p) {$/;"	f
AppAddr	lib/dfsan/dfsan_platform.h	/^uptr AppAddr() {$/;"	f	namespace:__dfsan
AppMemBeg	lib/tsan/rtl/tsan_platform.h	/^uptr AppMemBeg(void) {$/;"	f	namespace:__tsan
AppMemEnd	lib/tsan/rtl/tsan_platform.h	/^uptr AppMemEnd(void) {$/;"	f	namespace:__tsan
AppRegions	lib/esan/esan_shadow.h	/^static const struct ApplicationRegion AppRegions[] = {$/;"	m	namespace:__esan	typeref:struct:__esan::ApplicationRegion
AppSigAct	lib/esan/working_set_posix.cpp	/^static __sanitizer_sigaction AppSigAct;$/;"	m	namespace:__esan	file:
Append	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^void SuspendedThreadsListLinux::Append(tid_t tid) {$/;"	f	class:__sanitizer::SuspendedThreadsListLinux
Append	lib/sanitizer_common/sanitizer_stoptheworld_mac.cc	/^void SuspendedThreadsListMac::Append(thread_t thread) {$/;"	f	class:__sanitizer::SuspendedThreadsListMac
Append	lib/xray/xray_segmented_array.h	/^  T *Append(const T &E) {$/;"	f	class:__xray::Array
AppendChar	lib/sanitizer_common/sanitizer_printf.cc	/^static int AppendChar(char **buff, const char *buff_end, char c) {$/;"	f	namespace:__sanitizer
AppendEmplace	lib/xray/xray_segmented_array.h	/^  template <class... Args> T *AppendEmplace(Args &&... args) {$/;"	f	class:__xray::Array
AppendNewSegment	lib/xray/xray_segmented_array.h	/^  Segment *AppendNewSegment() {$/;"	f	class:__xray::Array
AppendNumber	lib/sanitizer_common/sanitizer_printf.cc	/^static int AppendNumber(char **buff, const char *buff_end, u64 absolute_value,$/;"	f	namespace:__sanitizer
AppendPointer	lib/sanitizer_common/sanitizer_printf.cc	/^static int AppendPointer(char **buff, const char *buff_end, u64 ptr_value) {$/;"	f	namespace:__sanitizer
AppendSignedDecimal	lib/sanitizer_common/sanitizer_printf.cc	/^static int AppendSignedDecimal(char **buff, const char *buff_end, s64 num,$/;"	f	namespace:__sanitizer
AppendString	lib/sanitizer_common/sanitizer_printf.cc	/^static int AppendString(char **buff, const char *buff_end, int width,$/;"	f	namespace:__sanitizer
AppendToErrorMessageBuffer	lib/asan/asan_report.cc	/^void AppendToErrorMessageBuffer(const char *buffer) {$/;"	f	namespace:__asan
AppendUnsigned	lib/sanitizer_common/sanitizer_printf.cc	/^static int AppendUnsigned(char **buff, const char *buff_end, u64 num, u8 base,$/;"	f	namespace:__sanitizer
ApplicationRegion	lib/esan/esan_shadow.h	/^struct ApplicationRegion {$/;"	s	namespace:__esan
ApplyDictionaryEntry	lib/fuzzer/FuzzerMutate.cpp	/^size_t MutationDispatcher::ApplyDictionaryEntry(uint8_t *Data, size_t Size,$/;"	f	class:fuzzer::MutationDispatcher
ApplySuppressions	lib/lsan/lsan_common.cc	/^void LeakReport::ApplySuppressions() {$/;"	f	class:__lsan::LeakReport
ApplyUnstableCounters	lib/fuzzer/FuzzerTracePC.cpp	/^void TracePC::ApplyUnstableCounters() {$/;"	f	class:fuzzer::TracePC
ApproximateMemoryConsumption	lib/fuzzer/FuzzerMerge.cpp	/^size_t Merger::ApproximateMemoryConsumption() const  {$/;"	f	class:fuzzer::Merger
Arg	lib/sanitizer_common/symbolizer/sanitizer_wrappers.cc	/^  struct Arg {$/;"	s	struct:__anon88::GetTypes	file:
Arg	lib/ubsan/ubsan_diag.h	/^    Arg() {}$/;"	f	struct:__ubsan::Diag::Arg
Arg	lib/ubsan/ubsan_diag.h	/^    Arg(FloatMax Float) : Kind(AK_Float), Float(Float) {}$/;"	f	struct:__ubsan::Diag::Arg
Arg	lib/ubsan/ubsan_diag.h	/^    Arg(SIntMax SInt) : Kind(AK_SInt), SInt(SInt) {}$/;"	f	struct:__ubsan::Diag::Arg
Arg	lib/ubsan/ubsan_diag.h	/^    Arg(TypeName TN) : Kind(AK_TypeName), String(TN.getName()) {}$/;"	f	struct:__ubsan::Diag::Arg
Arg	lib/ubsan/ubsan_diag.h	/^    Arg(UIntMax UInt) : Kind(AK_UInt), UInt(UInt) {}$/;"	f	struct:__ubsan::Diag::Arg
Arg	lib/ubsan/ubsan_diag.h	/^    Arg(const char *String) : Kind(AK_String), String(String) {}$/;"	f	struct:__ubsan::Diag::Arg
Arg	lib/ubsan/ubsan_diag.h	/^    Arg(const void *Pointer) : Kind(AK_Pointer), Pointer(Pointer) {}$/;"	f	struct:__ubsan::Diag::Arg
Arg	lib/ubsan/ubsan_diag.h	/^  struct Arg {$/;"	s	class:__ubsan::Diag
Arg1ExpectUMR	lib/msan/tests/msan_test.cc	/^NOINLINE void Arg1ExpectUMR(S4 a1) { EXPECT_POISONED(a1); }$/;"	f
Arg2ExpectUMR	lib/msan/tests/msan_test.cc	/^NOINLINE void Arg2ExpectUMR(S4 a1, S4 a2) { EXPECT_POISONED(a2); }$/;"	f
Arg3ExpectUMR	lib/msan/tests/msan_test.cc	/^NOINLINE void Arg3ExpectUMR(S1 a1, S4 a2, S8 a3) { EXPECT_POISONED(a3); }$/;"	f
ArgIndex	lib/ubsan/ubsan_handlers.h	/^  int ArgIndex;$/;"	m	struct:__ubsan::NonNullArgData
ArgKind	lib/ubsan/ubsan_diag.h	/^  enum ArgKind {$/;"	g	class:__ubsan::Diag
Args	lib/fuzzer/FuzzerCommand.h	/^  Vector<std::string> Args;$/;"	m	class:fuzzer::final
Args	lib/ubsan/ubsan_diag.h	/^  Arg Args[MaxArgs];$/;"	m	class:__ubsan::Diag
Array	lib/xray/xray_segmented_array.h	/^  explicit Array(AllocatorType &A) : Alloc(&A) {}$/;"	f	class:__xray::Array
Array	lib/xray/xray_segmented_array.h	/^template <class T> class Array {$/;"	c	namespace:__xray
ArrayCounter	lib/esan/cache_frag.cpp	/^  u64 *ArrayCounter;$/;"	m	struct:__esan::StructInfo	file:
ArrayType	lib/ubsan/ubsan_handlers.h	/^  const TypeDescriptor &ArrayType;$/;"	m	struct:__ubsan::OutOfBoundsData
ArtifactPrefix	lib/fuzzer/FuzzerOptions.h	/^  std::string ArtifactPrefix = ".\/";$/;"	m	struct:fuzzer::FuzzingOptions
AsGlobal	lib/asan/asan_descriptions.h	/^  const GlobalAddressDescription *AsGlobal() const {$/;"	f	class:__asan::AddressDescription
AsHeap	lib/asan/asan_descriptions.h	/^  const HeapAddressDescription *AsHeap() const {$/;"	f	class:__asan::AddressDescription
AsShadow	lib/asan/asan_descriptions.h	/^  const ShadowAddressDescription *AsShadow() const {$/;"	f	class:__asan::AddressDescription
AsStack	lib/asan/asan_descriptions.h	/^  const StackAddressDescription *AsStack() const {$/;"	f	class:__asan::AddressDescription
AsanActivate	lib/asan/asan_activation.cc	/^void AsanActivate() {$/;"	f	namespace:__asan
AsanAllocator	lib/asan/asan_allocator.h	/^    SecondaryAllocator> AsanAllocator;$/;"	t	namespace:__asan
AsanApplyToGlobals	lib/asan/asan_fuchsia.cc	/^void AsanApplyToGlobals(globals_op_fptr op, const void *needle) {$/;"	f	namespace:__asan
AsanApplyToGlobals	lib/asan/asan_linux.cc	/^void AsanApplyToGlobals(globals_op_fptr op, const void *needle) {$/;"	f	namespace:__asan
AsanApplyToGlobals	lib/asan/asan_mac.cc	/^void AsanApplyToGlobals(globals_op_fptr op, const void *needle) {$/;"	f	namespace:__asan
AsanApplyToGlobals	lib/asan/asan_rtems.cc	/^void AsanApplyToGlobals(globals_op_fptr op, const void *needle) {$/;"	f	namespace:__asan
AsanApplyToGlobals	lib/asan/asan_win.cc	/^void AsanApplyToGlobals(globals_op_fptr op, const void *needle) {$/;"	f	namespace:__asan
AsanBuggyPcPool	lib/asan/asan_report.cc	/^static __sanitizer::atomic_uintptr_t AsanBuggyPcPool[kAsanBuggyPcPoolSize];$/;"	m	namespace:__asan	file:
AsanCheckDynamicRTPrereqs	lib/asan/asan_fuchsia.cc	/^void AsanCheckDynamicRTPrereqs() {}$/;"	f	namespace:__asan
AsanCheckDynamicRTPrereqs	lib/asan/asan_linux.cc	/^void AsanCheckDynamicRTPrereqs() {$/;"	f	namespace:__asan
AsanCheckDynamicRTPrereqs	lib/asan/asan_linux.cc	/^void AsanCheckDynamicRTPrereqs() {}$/;"	f	namespace:__asan
AsanCheckDynamicRTPrereqs	lib/asan/asan_mac.cc	/^void AsanCheckDynamicRTPrereqs() {}$/;"	f	namespace:__asan
AsanCheckDynamicRTPrereqs	lib/asan/asan_rtems.cc	/^void AsanCheckDynamicRTPrereqs() {}$/;"	f	namespace:__asan
AsanCheckDynamicRTPrereqs	lib/asan/asan_win.cc	/^void AsanCheckDynamicRTPrereqs() {}$/;"	f	namespace:__asan
AsanCheckFailed	lib/asan/asan_rtl.cc	/^static void AsanCheckFailed(const char *file, int line, const char *cond,$/;"	f	namespace:__asan
AsanCheckIncompatibleRT	lib/asan/asan_fuchsia.cc	/^void AsanCheckIncompatibleRT() {}$/;"	f	namespace:__asan
AsanCheckIncompatibleRT	lib/asan/asan_linux.cc	/^void AsanCheckIncompatibleRT() {$/;"	f	namespace:__asan
AsanCheckIncompatibleRT	lib/asan/asan_linux.cc	/^void AsanCheckIncompatibleRT() {}$/;"	f	namespace:__asan
AsanCheckIncompatibleRT	lib/asan/asan_mac.cc	/^void AsanCheckIncompatibleRT() {}$/;"	f	namespace:__asan
AsanCheckIncompatibleRT	lib/asan/asan_rtems.cc	/^void AsanCheckIncompatibleRT() {}$/;"	f	namespace:__asan
AsanCheckIncompatibleRT	lib/asan/asan_win.cc	/^void AsanCheckIncompatibleRT() {}$/;"	f	namespace:__asan
AsanChunk	lib/asan/asan_allocator.cc	/^struct AsanChunk: ChunkBase {$/;"	s	namespace:__asan	file:
AsanChunkFifoList	lib/asan/asan_allocator.h	/^  AsanChunkFifoList() { clear(); }$/;"	f	class:__asan::AsanChunkFifoList
AsanChunkFifoList	lib/asan/asan_allocator.h	/^  explicit AsanChunkFifoList(LinkerInitialized) { }$/;"	f	class:__asan::AsanChunkFifoList
AsanChunkFifoList	lib/asan/asan_allocator.h	/^class AsanChunkFifoList: public IntrusiveList<AsanChunk> {$/;"	c	namespace:__asan
AsanChunkView	lib/asan/asan_allocator.h	/^  explicit AsanChunkView(AsanChunk *chunk) : chunk_(chunk) {}$/;"	f	class:__asan::AsanChunkView
AsanChunkView	lib/asan/asan_allocator.h	/^class AsanChunkView {$/;"	c	namespace:__asan
AsanDeactivate	lib/asan/asan_activation.cc	/^void AsanDeactivate() {$/;"	f	namespace:__asan
AsanDeactivatedFlags	lib/asan/asan_activation.cc	/^static struct AsanDeactivatedFlags {$/;"	s	namespace:__asan	file:
AsanDie	lib/asan/asan_rtl.cc	/^static void AsanDie() {$/;"	f	namespace:__asan
AsanDlSymNext	lib/asan/asan_linux.cc	/^void *AsanDlSymNext(const char *sym) {$/;"	f	namespace:__asan
AsanDoesNotSupportStaticLinkage	lib/asan/asan_fuchsia.cc	/^void *AsanDoesNotSupportStaticLinkage() { return nullptr; }$/;"	f	namespace:__asan
AsanDoesNotSupportStaticLinkage	lib/asan/asan_linux.cc	/^void *AsanDoesNotSupportStaticLinkage() {$/;"	f	namespace:__asan
AsanDoesNotSupportStaticLinkage	lib/asan/asan_mac.cc	/^void *AsanDoesNotSupportStaticLinkage() {$/;"	f	namespace:__asan
AsanDoesNotSupportStaticLinkage	lib/asan/asan_rtems.cc	/^void *AsanDoesNotSupportStaticLinkage() { return nullptr; }$/;"	f	namespace:__asan
AsanDoesNotSupportStaticLinkage	lib/asan/asan_win.cc	/^void *AsanDoesNotSupportStaticLinkage() {$/;"	f	namespace:__asan
AsanGetStack	lib/asan/asan_debugging.cc	/^uptr AsanGetStack(uptr addr, uptr *trace, u32 size, u32 *thread_id,$/;"	f	namespace:__anon48
AsanInitCaller	lib/asan/tests/asan_noinst_test.cc	/^  AsanInitCaller() {$/;"	f	struct:AsanInitCaller
AsanInitCaller	lib/asan/tests/asan_noinst_test.cc	/^struct AsanInitCaller {$/;"	s	file:
AsanInitFromRtl	lib/asan/asan_rtl.cc	/^void AsanInitFromRtl() {$/;"	f	namespace:__asan
AsanInitInternal	lib/asan/asan_rtl.cc	/^static void AsanInitInternal() {$/;"	f	namespace:__asan
AsanInitializer	lib/asan/asan_rtl.cc	/^  AsanInitializer() {$/;"	f	class:__asan::AsanInitializer
AsanInitializer	lib/asan/asan_rtl.cc	/^class AsanInitializer {$/;"	c	namespace:__asan	file:
AsanInterceptorContext	lib/asan/asan_interceptors_memintrinsics.h	/^struct AsanInterceptorContext {$/;"	s	namespace:__asan
AsanMallocStats	lib/asan/asan_stats.h	/^struct AsanMallocStats {$/;"	s	namespace:__asan
AsanMapUnmapCallback	lib/asan/asan_allocator.h	/^struct AsanMapUnmapCallback {$/;"	s	namespace:__asan
AsanMappingProfile	lib/asan/asan_rtl.cc	/^uptr AsanMappingProfile[kAsanMappingProfileSize];$/;"	m	namespace:__asan	file:
AsanOnDeadlySignal	lib/asan/asan_fuchsia.cc	/^void AsanOnDeadlySignal(int signo, void *siginfo, void *context) {$/;"	f	namespace:__asan
AsanOnDeadlySignal	lib/asan/asan_posix.cc	/^void AsanOnDeadlySignal(int signo, void *siginfo, void *context) {$/;"	f	namespace:__asan
AsanOnDeadlySignal	lib/asan/asan_rtems.cc	/^void AsanOnDeadlySignal(int signo, void *siginfo, void *context) {$/;"	f	namespace:__asan
AsanOnDeadlySignal	lib/asan/asan_win.cc	/^void AsanOnDeadlySignal(int, void *siginfo, void *context) {$/;"	f	namespace:__asan
AsanPoisonOrUnpoisonIntraObjectRedzone	lib/asan/asan_poisoning.cc	/^void AsanPoisonOrUnpoisonIntraObjectRedzone(uptr ptr, uptr size, bool poison) {$/;"	f	namespace:__asan
AsanQuarantine	lib/asan/asan_allocator.cc	/^typedef Quarantine<QuarantineCallback, AsanChunk> AsanQuarantine;$/;"	t	namespace:__asan	file:
AsanSoftRssLimitExceededCallback	lib/asan/asan_allocator.cc	/^void AsanSoftRssLimitExceededCallback(bool limit_exceeded) {$/;"	f	namespace:__asan
AsanStats	lib/asan/asan_stats.cc	/^AsanStats::AsanStats() {$/;"	f	class:__asan::AsanStats
AsanStats	lib/asan/asan_stats.h	/^  explicit AsanStats(LinkerInitialized) { }$/;"	f	struct:__asan::AsanStats
AsanStats	lib/asan/asan_stats.h	/^struct AsanStats {$/;"	s	namespace:__asan
AsanTSDGet	lib/asan/asan_fuchsia.cc	/^void *AsanTSDGet() { return per_thread; }$/;"	f	namespace:__asan
AsanTSDGet	lib/asan/asan_posix.cc	/^void *AsanTSDGet() {$/;"	f	namespace:__asan
AsanTSDGet	lib/asan/asan_rtems.cc	/^void *AsanTSDGet() { return per_thread; }$/;"	f	namespace:__asan
AsanTSDGet	lib/asan/asan_win.cc	/^void *AsanTSDGet() {$/;"	f	namespace:__asan
AsanTSDInit	lib/asan/asan_fuchsia.cc	/^void AsanTSDInit(void (*destructor)(void *tsd)) {$/;"	f	namespace:__asan
AsanTSDInit	lib/asan/asan_posix.cc	/^void AsanTSDInit(void (*destructor)(void *tsd)) {$/;"	f	namespace:__asan
AsanTSDInit	lib/asan/asan_rtems.cc	/^void AsanTSDInit(void (*destructor)(void *tsd)) {$/;"	f	namespace:__asan
AsanTSDInit	lib/asan/asan_win.cc	/^void AsanTSDInit(void (*destructor)(void *tsd)) {$/;"	f	namespace:__asan
AsanTSDSet	lib/asan/asan_fuchsia.cc	/^void AsanTSDSet(void *tsd) { per_thread = tsd; }$/;"	f	namespace:__asan
AsanTSDSet	lib/asan/asan_posix.cc	/^void AsanTSDSet(void *tsd) {$/;"	f	namespace:__asan
AsanTSDSet	lib/asan/asan_rtems.cc	/^void AsanTSDSet(void *tsd) { per_thread = tsd; }$/;"	f	namespace:__asan
AsanTSDSet	lib/asan/asan_win.cc	/^void AsanTSDSet(void *tsd) {$/;"	f	namespace:__asan
AsanThread	lib/asan/asan_thread.h	/^class AsanThread {$/;"	c	namespace:__asan
AsanThreadContext	lib/asan/asan_thread.h	/^  explicit AsanThreadContext(int tid)$/;"	f	class:__asan::AsanThreadContext
AsanThreadContext	lib/asan/asan_thread.h	/^class AsanThreadContext : public ThreadContextBase {$/;"	c	namespace:__asan
AsanThreadIdAndName	lib/asan/asan_descriptions.cc	/^AsanThreadIdAndName::AsanThreadIdAndName(AsanThreadContext *t) {$/;"	f	class:__asan::AsanThreadIdAndName
AsanThreadIdAndName	lib/asan/asan_descriptions.cc	/^AsanThreadIdAndName::AsanThreadIdAndName(u32 tid) {$/;"	f	class:__asan::AsanThreadIdAndName
AsanThreadIdAndName	lib/asan/asan_descriptions.h	/^class AsanThreadIdAndName {$/;"	c	namespace:__asan
AsanThreadLocalMallocStorage	lib/asan/asan_allocator.h	/^  AsanThreadLocalMallocStorage() {}$/;"	f	struct:__asan::AsanThreadLocalMallocStorage
AsanThreadLocalMallocStorage	lib/asan/asan_allocator.h	/^struct AsanThreadLocalMallocStorage {$/;"	s	namespace:__asan
AsanThreadMmapSize	lib/asan/asan_fuchsia.cc	/^static inline size_t AsanThreadMmapSize() {$/;"	f	namespace:__asan
AsmLoad	lib/asan/tests/asan_asm_test.cc	/^U4 AsmLoad(U4 *a) {$/;"	f	namespace:__anon45
AsmStore	lib/asan/tests/asan_asm_test.cc	/^void AsmStore(U4 r, U4 *a) {$/;"	f	namespace:__anon45
AssignCalled	test/BlocksRuntime/objectRRGC.c	/^int AssignCalled = 0;$/;"	v
AssignCalled	test/BlocksRuntime/objectassign.c	/^int AssignCalled = 0;$/;"	v
AsyncInit	test/tsan/static_init5.cc	/^void *AsyncInit(void *p) {$/;"	f
AsyncInit	test/tsan/static_init6.cc	/^void *AsyncInit(void *p) {$/;"	f
AsyncSignalSafeLazyInitFakeStack	lib/asan/asan_thread.cc	/^FakeStack *AsanThread::AsyncSignalSafeLazyInitFakeStack() {$/;"	f	class:__asan::AsanThread
At	lib/tsan/rtl/tsan_ignoreset.cc	/^u32 IgnoreSet::At(uptr i) const {$/;"	f	class:__tsan::IgnoreSet
AtCxaAtexit	lib/asan/asan_interceptors.cc	/^static void AtCxaAtexit(void *unused) {$/;"	f	file:
AtExit	lib/sanitizer_common/tests/sanitizer_allocator_testlib.cc	/^struct AtExit {$/;"	s	namespace:__anon59	file:
AtExit	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^static void AtExit() {$/;"	f	file:
AtExitCtx	lib/tsan/rtl/tsan_interceptors.cc	/^struct AtExitCtx {$/;"	s	namespace:__tsan	file:
AtExitStack	lib/tsan/rtl/tsan_interceptors.cc	/^  Vector<struct AtExitCtx *> AtExitStack;$/;"	m	struct:__tsan::InterceptorContext	file:
Atexit	lib/sanitizer_common/sanitizer_fuchsia.cc	/^int Atexit(void (*function)(void)) { return atexit(function); }$/;"	f	namespace:__sanitizer
Atexit	lib/sanitizer_common/sanitizer_posix_libcdep.cc	/^int Atexit(void (*function)(void)) {$/;"	f	namespace:__sanitizer
Atexit	lib/sanitizer_common/sanitizer_rtems.cc	/^int Atexit(void (*function)(void)) { return atexit(function); }$/;"	f	namespace:__sanitizer
Atexit	lib/sanitizer_common/sanitizer_win.cc	/^int Atexit(void (*function)(void)) {$/;"	f	namespace:__sanitizer
AtomicCAS	lib/tsan/rtl/tsan_interface_atomic.cc	/^static T AtomicCAS(ThreadState *thr, uptr pc,$/;"	f	file:
AtomicCAS	lib/tsan/rtl/tsan_interface_atomic.cc	/^static bool AtomicCAS(ThreadState *thr, uptr pc,$/;"	f	file:
AtomicExchange	lib/tsan/rtl/tsan_interface_atomic.cc	/^static T AtomicExchange(ThreadState *thr, uptr pc, volatile T *a, T v,$/;"	f	file:
AtomicFence	lib/tsan/rtl/tsan_interface_atomic.cc	/^static void AtomicFence(ThreadState *thr, uptr pc, morder mo) {$/;"	f	file:
AtomicFetchAdd	lib/tsan/rtl/tsan_interface_atomic.cc	/^static T AtomicFetchAdd(ThreadState *thr, uptr pc, volatile T *a, T v,$/;"	f	file:
AtomicFetchAnd	lib/tsan/rtl/tsan_interface_atomic.cc	/^static T AtomicFetchAnd(ThreadState *thr, uptr pc, volatile T *a, T v,$/;"	f	file:
AtomicFetchNand	lib/tsan/rtl/tsan_interface_atomic.cc	/^static T AtomicFetchNand(ThreadState *thr, uptr pc, volatile T *a, T v,$/;"	f	file:
AtomicFetchOr	lib/tsan/rtl/tsan_interface_atomic.cc	/^static T AtomicFetchOr(ThreadState *thr, uptr pc, volatile T *a, T v,$/;"	f	file:
AtomicFetchSub	lib/tsan/rtl/tsan_interface_atomic.cc	/^static T AtomicFetchSub(ThreadState *thr, uptr pc, volatile T *a, T v,$/;"	f	file:
AtomicFetchXor	lib/tsan/rtl/tsan_interface_atomic.cc	/^static T AtomicFetchXor(ThreadState *thr, uptr pc, volatile T *a, T v,$/;"	f	file:
AtomicLoad	lib/tsan/rtl/tsan_interface_atomic.cc	/^static T AtomicLoad(ThreadState *thr, uptr pc, const volatile T *a, morder mo) {$/;"	f	file:
AtomicPackedHeader	lib/scudo/scudo_allocator.h	/^typedef atomic_uint64_t AtomicPackedHeader;$/;"	t	namespace:__scudo
AtomicRMW	lib/tsan/rtl/tsan_interface_atomic.cc	/^static T AtomicRMW(ThreadState *thr, uptr pc, volatile T *a, T v, morder mo) {$/;"	f	file:
AtomicStatInc	lib/tsan/rtl/tsan_interface_atomic.cc	/^static void AtomicStatInc(ThreadState *thr, uptr size, morder mo, StatType t) {$/;"	f	file:
AtomicStore	lib/tsan/rtl/tsan_interface_atomic.cc	/^static void AtomicStore(ThreadState *thr, uptr pc, volatile T *a, T v,$/;"	f	file:
AtomicallySetQuarantineFlagIfAllocated	lib/asan/asan_allocator.cc	/^  bool AtomicallySetQuarantineFlagIfAllocated(AsanChunk *m, void *ptr,$/;"	f	struct:__asan::Allocator
AtosSymbolizer	lib/sanitizer_common/sanitizer_symbolizer_mac.cc	/^AtosSymbolizer::AtosSymbolizer(const char *path, LowLevelAllocator *allocator)$/;"	f	class:__sanitizer::AtosSymbolizer
AtosSymbolizer	lib/sanitizer_common/sanitizer_symbolizer_mac.h	/^class AtosSymbolizer : public SymbolizerTool {$/;"	c	namespace:__sanitizer
AtosSymbolizerProcess	lib/sanitizer_common/sanitizer_symbolizer_mac.cc	/^  explicit AtosSymbolizerProcess(const char *path, pid_t parent_pid)$/;"	f	class:__sanitizer::AtosSymbolizerProcess
AtosSymbolizerProcess	lib/sanitizer_common/sanitizer_symbolizer_mac.cc	/^class AtosSymbolizerProcess : public SymbolizerProcess {$/;"	c	namespace:__sanitizer	file:
AttrLoc	lib/ubsan/ubsan_handlers.h	/^  SourceLocation AttrLoc;$/;"	m	struct:__ubsan::NonNullArgData
AttrLoc	lib/ubsan/ubsan_handlers.h	/^  SourceLocation AttrLoc;$/;"	m	struct:__ubsan::NonNullReturnData
AvoidCVE_2016_2143	lib/sanitizer_common/sanitizer_common.h	/^INLINE void AvoidCVE_2016_2143() {}$/;"	f	namespace:__sanitizer
AvoidCVE_2016_2143	lib/sanitizer_common/sanitizer_linux_s390.cc	/^void AvoidCVE_2016_2143() {$/;"	f	namespace:__sanitizer
B	lib/builtins/hexagon/dfaddsub.S	/^		B = #0$/;"	d
B	lib/builtins/hexagon/dfaddsub.S	/^		B = combine(##0x00100000,#0)$/;"	d
B	lib/builtins/hexagon/dfaddsub.S	/^		B = insert(A,#MANTBITS,#0)$/;"	d
B	lib/builtins/hexagon/dfaddsub.S	/^		B = lsr(B,TMP)$/;"	d
B	lib/builtins/hexagon/dfaddsub.S	/^#define B r3:2$/;"	d
B	lib/builtins/hexagon/dfdiv.S	/^		B = #0$/;"	d
B	lib/builtins/hexagon/dfdiv.S	/^		B = #1$/;"	d
B	lib/builtins/hexagon/dfdiv.S	/^		B = asl(B,QL)$/;"	d
B	lib/builtins/hexagon/dfdiv.S	/^		B = combine(##0x7fefffff,#-1)$/;"	d
B	lib/builtins/hexagon/dfdiv.S	/^		B = combine(##0x7ff00000,#0)$/;"	d
B	lib/builtins/hexagon/dfdiv.S	/^		B = extractu(A,#63,#0)$/;"	d
B	lib/builtins/hexagon/dfdiv.S	/^#define B r3:2$/;"	d
B	lib/builtins/hexagon/dffma.S	/^		B = #0$/;"	d
B	lib/builtins/hexagon/dffma.S	/^		B = extractu(ATMP,EXPBA)$/;"	d
B	lib/builtins/hexagon/dffma.S	/^		B = insert(ATMP,#63,#0)$/;"	d
B	lib/builtins/hexagon/dffma.S	/^		B = insert(BTMP,#63,#0)$/;"	d
B	lib/builtins/hexagon/dffma.S	/^		B = lsr(B,#63)$/;"	d
B	lib/builtins/hexagon/dffma.S	/^#define B r3:2$/;"	d
B	lib/builtins/hexagon/dfminmax.S	/^#define B r3:2$/;"	d
B	lib/builtins/hexagon/dfmul.S	/^		B = A$/;"	d
B	lib/builtins/hexagon/dfmul.S	/^		B = insert(BTMP,#63,#0)$/;"	d
B	lib/builtins/hexagon/dfmul.S	/^#define B r3:2$/;"	d
B	lib/fuzzer/FuzzerTracePC.h	/^    T A, B;$/;"	m	struct:fuzzer::TableOfRecentCompares::Pair
B	test/asan/TestCases/init-order-atexit.cc	/^  B() { exit(1); }$/;"	f	class:B
B	test/asan/TestCases/init-order-atexit.cc	/^class B {$/;"	c	file:
B	test/asan/TestCases/initialization-nobug.cc	/^int A = (1 << 1) + (1 << 3) + (1 << 5), B;$/;"	v
B	test/asan/TestCases/pr33372.cc	/^struct B { A a; \/*gap*\/ long b; };$/;"	s	file:
B	test/asan/TestCases/use-after-scope-conversion.cc	/^  B() : p('B') {}$/;"	f	struct:B
B	test/asan/TestCases/use-after-scope-conversion.cc	/^struct B {$/;"	s	file:
B	test/cfi/anon-namespace.cpp	/^struct B : A {$/;"	s	namespace:__anon139	file:
B	test/cfi/bad-cast.cpp	/^struct B : A {$/;"	s	file:
B	test/cfi/bad-split.cpp	/^struct B : public A {$/;"	s	file:
B	test/cfi/base-derived-destructor.cpp	/^class B : public A<B> {$/;"	c	file:
B	test/cfi/cross-dso/icall/diag.cpp	/^struct B {$/;"	s	file:
B	test/cfi/cross-dso/icall/dlopen.cpp	/^struct B {$/;"	s	file:
B	test/cfi/cross-dso/simple-fail.cpp	/^struct B {$/;"	s	file:
B	test/cfi/cross-dso/simple-pass.cpp	/^struct B : public A {$/;"	s	file:
B	test/cfi/multiple-inheritance.cpp	/^struct B {$/;"	s	file:
B	test/cfi/nvcall.cpp	/^struct B {$/;"	s	file:
B	test/cfi/sibling.cpp	/^struct B : A {$/;"	s	file:
B	test/cfi/simple-fail.cpp	/^struct B {$/;"	s	file:
B	test/cfi/simple-pass.cpp	/^struct B {$/;"	s	file:
B	test/cfi/target_uninstrumented.cpp	/^struct B {$/;"	s	file:
B	test/cfi/vdtor.cpp	/^struct B {$/;"	s	file:
B	test/cfi/vtable-may-alias.cpp	/^struct B : A {$/;"	s	file:
B	test/esan/TestCases/struct-simple.cpp	/^struct B {$/;"	s	file:
B	test/fuzzer/LargeTest.cpp	24;"	d	file:
B	test/msan/dtor-multiple-inheritance.cc	/^  B() { y = 10; }$/;"	f	struct:B
B	test/msan/dtor-multiple-inheritance.cc	/^struct B : virtual public A {$/;"	s	file:
B	test/msan/dtor-vtable-multiple-inheritance.cc	/^class B : public virtual A {$/;"	c	file:
B	test/msan/dtor-vtable.cc	/^class B {$/;"	c	file:
B	test/profile/Linux/coverage_ctors.cpp	/^  int B;$/;"	m	struct:Base	file:
B	test/profile/Linux/coverage_dtor.cpp	/^  int B;$/;"	m	struct:Base	file:
B	test/tsan/race_on_barrier.c	/^pthread_barrier_t B;$/;"	v
B	test/tsan/race_on_barrier2.c	/^pthread_barrier_t B;$/;"	v
B	test/tsan/vptr_benign_race.cc	/^struct B : A {$/;"	s	file:
B	test/tsan/vptr_harmful_race.cc	/^struct B : A {$/;"	s	file:
B	test/tsan/vptr_harmful_race2.cc	/^struct B : A {$/;"	s	file:
B	test/tsan/vptr_harmful_race3.cc	/^struct B : A {$/;"	s	file:
B	test/tsan/vptr_harmful_race4.cc	/^struct B : A {$/;"	s	file:
B	test/ubsan/TestCases/TypeCheck/vptr-virtual-base-construction.cpp	/^struct B: virtual A {};$/;"	s	file:
B2	test/cfi/simple-pass.cpp	/^struct B2 : B {$/;"	s	file:
BAD_ACCESS	lib/asan/tests/asan_interface_test.cc	159;"	d	file:
BBB	test/tsan/virtual_inheritance_compile_bug.cc	/^struct BBB: virtual AAA { unsigned long bbb; };  \/\/ NOLINT$/;"	s	file:
BH	lib/builtins/hexagon/dfaddsub.S	/^		BH = ##0x80000000$/;"	d
BH	lib/builtins/hexagon/dfaddsub.S	/^		BH = #1$/;"	d
BH	lib/builtins/hexagon/dfaddsub.S	/^		BH = asl(BH,#31)$/;"	d
BH	lib/builtins/hexagon/dfaddsub.S	/^		BH = togglebit(BH,#31)$/;"	d
BH	lib/builtins/hexagon/dfaddsub.S	/^#define BH r3$/;"	d
BH	lib/builtins/hexagon/dfdiv.S	/^		BH = insert(TMP,#DF_EXPBITS+1,#DF_MANTBITS-32)		\/\/ clear out hidden bit, sign bit$/;"	d
BH	lib/builtins/hexagon/dfdiv.S	/^#define BH r3$/;"	d
BH	lib/builtins/hexagon/dffma.S	/^		BH = USR$/;"	d
BH	lib/builtins/hexagon/dffma.S	/^		BH = convert_df2sf(A)$/;"	d
BH	lib/builtins/hexagon/dffma.S	/^		BH = convert_df2sf(B)$/;"	d
BH	lib/builtins/hexagon/dffma.S	/^		BH = extractu(TMP,#2,#SR_ROUND_OFF)$/;"	d
BH	lib/builtins/hexagon/dffma.S	/^#define BH r3$/;"	d
BH	lib/builtins/hexagon/dfmul.S	/^		BH = extract(BH,#1,#31)$/;"	d
BH	lib/builtins/hexagon/dfmul.S	/^#define BH r3$/;"	d
BIAS	lib/builtins/hexagon/dfaddsub.S	/^#define BIAS 1024$/;"	d
BIAS	lib/builtins/hexagon/dffma.S	/^#define BIAS 1023$/;"	d
BIAS	lib/builtins/hexagon/dfmul.S	/^#define BIAS 1024$/;"	d
BIGB	lib/builtins/hexagon/dfaddsub.S	/^		BIGB = cmp.gtu(EXPB,EXPA)			\/\/ Is B substantially greater than A?$/;"	d
BIGB	lib/builtins/hexagon/dfaddsub.S	/^#define BIGB p2$/;"	d
BIG_ENDIAN	test/ubsan/TestCases/Float/cast-overflow.cpp	19;"	d	file:
BIG_ENDIAN	test/ubsan/TestCases/Float/cast-overflow.cpp	27;"	d	file:
BIG_ENDIAN	test/ubsan/TestCases/Float/cast-overflow.cpp	35;"	d	file:
BIG_ENDIAN	test/ubsan/TestCases/Float/cast-overflow.cpp	44;"	d	file:
BIG_ENDIAN	test/ubsan/TestCases/Float/cast-overflow.cpp	49;"	d	file:
BINGO	test/fuzzer/Bingo.h	1;"	d
BINGO	test/fuzzer/SymbolizeDeadlock.cpp	/^__attribute__((noinline)) void BINGO() {$/;"	f
BL	lib/builtins/hexagon/dfaddsub.S	/^		BL = ##0x7f800001			\/\/ sNAN$/;"	d
BL	lib/builtins/hexagon/dfaddsub.S	/^		BL = convert_df2sf(B)			\/\/ will generate invalid if sNaN$/;"	d
BL	lib/builtins/hexagon/dfaddsub.S	/^#define BL r2$/;"	d
BL	lib/builtins/hexagon/dfdiv.S	/^#define BL r2$/;"	d
BL	lib/builtins/hexagon/dffma.S	/^		BL = #0x0030$/;"	d
BL	lib/builtins/hexagon/dffma.S	/^		BL = BH$/;"	d
BL	lib/builtins/hexagon/dffma.S	/^		BL = convert_df2sf(C)$/;"	d
BL	lib/builtins/hexagon/dffma.S	/^#define BL r2$/;"	d
BL	lib/builtins/hexagon/dfmul.S	/^		BL = convert_df2sf(B)			\/\/ will generate invalid if sNaN$/;"	d
BL	lib/builtins/hexagon/dfmul.S	/^#define BL r2$/;"	d
BLOCK	lib/builtins/arm/clzdi2.S	/^#define BLOCK(shift) \\$/;"	d
BLOCK	lib/builtins/arm/clzsi2.S	/^#define BLOCK(shift) \\$/;"	d
BLOCK_BYREF_CALLER	lib/BlocksRuntime/Block_private.h	/^    BLOCK_BYREF_CALLER      = 128  \/* called from __block (byref) copy\/dispose support routines. *\/$/;"	e	enum:__anon106
BLOCK_EXPORT	lib/BlocksRuntime/Block.h	30;"	d
BLOCK_EXPORT	lib/BlocksRuntime/Block.h	32;"	d
BLOCK_EXPORT	lib/BlocksRuntime/Block_private.h	30;"	d
BLOCK_EXPORT	lib/BlocksRuntime/Block_private.h	32;"	d
BLOCK_FIELD_IS_BLOCK	lib/BlocksRuntime/Block_private.h	/^    BLOCK_FIELD_IS_BLOCK    =  7,  \/* a block variable *\/$/;"	e	enum:__anon106
BLOCK_FIELD_IS_BYREF	lib/BlocksRuntime/Block_private.h	/^    BLOCK_FIELD_IS_BYREF    =  8,  \/* the on stack structure holding the __block variable *\/$/;"	e	enum:__anon106
BLOCK_FIELD_IS_OBJECT	lib/BlocksRuntime/Block_private.h	/^    BLOCK_FIELD_IS_OBJECT   =  3,  \/* id, NSObject, __attribute__((NSObject)), block, ... *\/$/;"	e	enum:__anon106
BLOCK_FIELD_IS_WEAK	lib/BlocksRuntime/Block_private.h	/^    BLOCK_FIELD_IS_WEAK     = 16,  \/* declared __weak, only used in byref copy helpers *\/$/;"	e	enum:__anon106
BLOCK_HAS_COPY_DISPOSE	lib/BlocksRuntime/Block_private.h	/^    BLOCK_HAS_COPY_DISPOSE =  (1 << 25),$/;"	e	enum:__anon105
BLOCK_HAS_COPY_DISPOSE	test/BlocksRuntime/byrefsanity.c	/^    BLOCK_HAS_COPY_DISPOSE =  (1 << 25),$/;"	e	enum:__anon145	file:
BLOCK_HAS_CTOR	lib/BlocksRuntime/Block_private.h	/^    BLOCK_HAS_CTOR =          (1 << 26), \/* Helpers have C++ code. *\/$/;"	e	enum:__anon105
BLOCK_HAS_DESCRIPTOR	lib/BlocksRuntime/Block_private.h	/^    BLOCK_HAS_DESCRIPTOR =    (1 << 29)$/;"	e	enum:__anon105
BLOCK_IS_GC	lib/BlocksRuntime/Block_private.h	/^    BLOCK_IS_GC =             (1 << 27),$/;"	e	enum:__anon105
BLOCK_IS_GC	test/BlocksRuntime/byrefsanity.c	/^    BLOCK_IS_GC =             (1 << 27),$/;"	e	enum:__anon145	file:
BLOCK_IS_GLOBAL	lib/BlocksRuntime/Block_private.h	/^    BLOCK_IS_GLOBAL =         (1 << 28),$/;"	e	enum:__anon105
BLOCK_IS_GLOBAL	test/BlocksRuntime/byrefsanity.c	/^    BLOCK_IS_GLOBAL =         (1 << 28),$/;"	e	enum:__anon145	file:
BLOCK_LENGTH	lib/fuzzer/FuzzerSHA1.cpp	52;"	d	file:
BLOCK_NEEDS_FREE	lib/BlocksRuntime/Block_private.h	/^    BLOCK_NEEDS_FREE =        (1 << 24),$/;"	e	enum:__anon105
BLOCK_NEEDS_FREE	test/BlocksRuntime/byrefsanity.c	/^    BLOCK_NEEDS_FREE =        (1 << 24),$/;"	e	enum:__anon145	file:
BLOCK_NO_COPY	test/BlocksRuntime/byrefsanity.c	/^    BLOCK_NO_COPY =           (1 << 26), \/\/ interim byref: no copies allowed$/;"	e	enum:__anon145	file:
BLOCK_REAL	lib/tsan/rtl/tsan_interceptors.cc	310;"	d	file:
BLOCK_REFCOUNT_MASK	lib/BlocksRuntime/Block_private.h	/^    BLOCK_REFCOUNT_MASK =     (0xffff),$/;"	e	enum:__anon105
BLOCK_REFCOUNT_MASK	test/BlocksRuntime/byrefsanity.c	/^    BLOCK_REFCOUNT_MASK =     (0xffff),$/;"	e	enum:__anon145	file:
BLX	lib/sanitizer_common/sanitizer_linux.cc	1571;"	d	file:
BQ	lib/xray/xray_fdr_logging.cc	/^static BufferQueue *BQ = nullptr;$/;"	m	namespace:__xray	file:
BS	test/asan/TestCases/Linux/stack-overflow-sigbus.cc	/^const int BS = 1024;$/;"	v
BS	test/asan/TestCases/Posix/stack-overflow.cc	/^const int BS = 1024;$/;"	v
BTMP	lib/builtins/hexagon/dfaddsub.S	/^		BTMP = ASR(BTMP,EXPDIFF)$/;"	d
BTMP	lib/builtins/hexagon/dfaddsub.S	/^		BTMP = ATMP$/;"	d
BTMP	lib/builtins/hexagon/dfaddsub.S	/^		BTMP = asl(BTMP,#EXPBITS-2)$/;"	d
BTMP	lib/builtins/hexagon/dfaddsub.S	/^		BTMP = combine(##0x7ff00000,#0)		\/\/ positive infinity$/;"	d
BTMP	lib/builtins/hexagon/dfaddsub.S	/^		BTMP = extractu(B,#63,#0)		\/\/ strip off sign$/;"	d
BTMP	lib/builtins/hexagon/dfaddsub.S	/^		BTMP = extractu(B,#63,#0)$/;"	d
BTMP	lib/builtins/hexagon/dfaddsub.S	/^		BTMP = insert(B,#MANTBITS,#EXPBITS-2)	\/\/ Q1.62$/;"	d
BTMP	lib/builtins/hexagon/dfaddsub.S	/^		BTMP = neg(ATMP)$/;"	d
BTMP	lib/builtins/hexagon/dfaddsub.S	/^		BTMP = neg(BTMP)$/;"	d
BTMP	lib/builtins/hexagon/dfaddsub.S	/^#define BTMP r9:8$/;"	d
BTMP	lib/builtins/hexagon/dffma.S	/^		BTMP = #0$/;"	d
BTMP	lib/builtins/hexagon/dffma.S	/^		BTMP = asl(BTMP,TMP)$/;"	d
BTMP	lib/builtins/hexagon/dffma.S	/^		BTMP = extractu(B,#63,#0)$/;"	d
BTMP	lib/builtins/hexagon/dffma.S	/^		BTMP = insert(B,#MANTBITS,#EXPBITS-3)$/;"	d
BTMP	lib/builtins/hexagon/dffma.S	/^#define BTMP r11:10$/;"	d
BTMP	lib/builtins/hexagon/dffma.S	/^#define BTMP r15:14$/;"	d
BTMP	lib/builtins/hexagon/dfmul.S	/^		BTMP = asl(B,#EXPBITS-1)$/;"	d
BTMP	lib/builtins/hexagon/dfmul.S	/^		BTMP = asl(BTMP,TMP)$/;"	d
BTMP	lib/builtins/hexagon/dfmul.S	/^		BTMP = combine(##0x7ff00000,#0)		\/\/ positive infinity$/;"	d
BTMP	lib/builtins/hexagon/dfmul.S	/^		BTMP = combine(##BIAS+BIAS-4,#0)$/;"	d
BTMP	lib/builtins/hexagon/dfmul.S	/^		BTMP = extractu(B,#63,#0)		\/\/ strip off sign$/;"	d
BTMP	lib/builtins/hexagon/dfmul.S	/^		BTMP = insert(ONE,#2,#62)$/;"	d
BTMP	lib/builtins/hexagon/dfmul.S	/^#define BTMP r5:4$/;"	d
BTMPH	lib/builtins/hexagon/dfaddsub.S	/^#define BTMPH r9$/;"	d
BTMPH	lib/builtins/hexagon/dffma.S	/^		BTMPH = or(BTMPH,PP_ODD_H)$/;"	d
BTMPH	lib/builtins/hexagon/dffma.S	/^#define BTMPH r11$/;"	d
BTMPH	lib/builtins/hexagon/dffma.S	/^#define BTMPH r15$/;"	d
BTMPH	lib/builtins/hexagon/dfmul.S	/^		BTMPH = #0$/;"	d
BTMPH	lib/builtins/hexagon/dfmul.S	/^		BTMPH = #0x030$/;"	d
BTMPH	lib/builtins/hexagon/dfmul.S	/^		BTMPH = #0x7fff$/;"	d
BTMPH	lib/builtins/hexagon/dfmul.S	/^		BTMPH = extractu(TMP,#2,#SR_ROUND_OFF)	\/\/ get rounding mode$/;"	d
BTMPH	lib/builtins/hexagon/dfmul.S	/^		BTMPH = min(BTMPH,TMP)			\/\/ Don't shift more than 63$/;"	d
BTMPH	lib/builtins/hexagon/dfmul.S	/^		BTMPH = sub(#FUDGE,BTMPH)		\/\/ amount to right shift$/;"	d
BTMPH	lib/builtins/hexagon/dfmul.S	/^		BTMPH = sub(EXP0,BTMPH)$/;"	d
BTMPH	lib/builtins/hexagon/dfmul.S	/^#define BTMPH r5$/;"	d
BTMPL	lib/builtins/hexagon/dfaddsub.S	/^#define BTMPL r8$/;"	d
BTMPL	lib/builtins/hexagon/dffma.S	/^#define BTMPL r10$/;"	d
BTMPL	lib/builtins/hexagon/dffma.S	/^#define BTMPL r14$/;"	d
BTMPL	lib/builtins/hexagon/dfmul.S	/^		BTMPL = ##0x7FEFFFFF$/;"	d
BTMPL	lib/builtins/hexagon/dfmul.S	/^		BTMPL = #0	 			\/\/ offset for extract$/;"	d
BTMPL	lib/builtins/hexagon/dfmul.S	/^		BTMPL = #0x0030					\/\/ underflow flag$/;"	d
BTMPL	lib/builtins/hexagon/dfmul.S	/^		BTMPL = USR$/;"	d
BTMPL	lib/builtins/hexagon/dfmul.S	/^#define BTMPL r4$/;"	d
BUILTIN_UNREACHABLE	lib/sanitizer_common/sanitizer_win.cc	37;"	d	file:
BUILTIN_UNREACHABLE	lib/sanitizer_common/sanitizer_win.cc	40;"	d	file:
BUILTIN_UNREACHABLE	lib/sanitizer_common/sanitizer_win.cc	42;"	d	file:
BUILTIN_UNREACHABLE	lib/sanitizer_common/sanitizer_win.cc	44;"	d	file:
BV1	lib/sanitizer_common/tests/sanitizer_bvgraph_test.cc	/^typedef BasicBitVector<u8> BV1;$/;"	t	file:
BV1	lib/sanitizer_common/tests/sanitizer_deadlock_detector_test.cc	/^typedef BasicBitVector<u8> BV1;$/;"	t	file:
BV2	lib/sanitizer_common/tests/sanitizer_bvgraph_test.cc	/^typedef BasicBitVector<> BV2;$/;"	t	file:
BV2	lib/sanitizer_common/tests/sanitizer_deadlock_detector_test.cc	/^typedef BasicBitVector<> BV2;$/;"	t	file:
BV3	lib/sanitizer_common/tests/sanitizer_bvgraph_test.cc	/^typedef TwoLevelBitVector<> BV3;$/;"	t	file:
BV3	lib/sanitizer_common/tests/sanitizer_deadlock_detector_test.cc	/^typedef TwoLevelBitVector<> BV3;$/;"	t	file:
BV4	lib/sanitizer_common/tests/sanitizer_bvgraph_test.cc	/^typedef TwoLevelBitVector<3, BasicBitVector<u8> > BV4;$/;"	t	file:
BV4	lib/sanitizer_common/tests/sanitizer_deadlock_detector_test.cc	/^typedef TwoLevelBitVector<3, BasicBitVector<u8> > BV4;$/;"	t	file:
BVGraph	lib/sanitizer_common/sanitizer_bvgraph.h	/^class BVGraph {$/;"	c	namespace:__sanitizer
BYTE_ORDER	test/ubsan/TestCases/Float/cast-overflow.cpp	18;"	d	file:
BYTE_ORDER	test/ubsan/TestCases/Float/cast-overflow.cpp	24;"	d	file:
BYTE_ORDER	test/ubsan/TestCases/Float/cast-overflow.cpp	38;"	d	file:
BYTE_ORDER	test/ubsan/TestCases/Float/cast-overflow.cpp	40;"	d	file:
BYTE_ORDER	test/ubsan/TestCases/Float/cast-overflow.cpp	43;"	d	file:
BYTE_ORDER	test/ubsan/TestCases/Float/cast-overflow.cpp	48;"	d	file:
B_Foo	test/msan/dtor-vtable.cc	/^  virtual void B_Foo() {}$/;"	f	class:B
B_POS	lib/builtins/hexagon/dfaddsub.S	/^		B_POS = cmp.gt(BH,#-1)$/;"	d
B_POS	lib/builtins/hexagon/dfaddsub.S	/^#define B_POS p3$/;"	d
Backend	lib/scudo/scudo_allocator.cpp	/^  BackendT Backend;$/;"	m	struct:__scudo::Allocator	file:
BackendT	lib/scudo/scudo_allocator.h	/^typedef CombinedAllocator<PrimaryT, AllocatorCacheT, SecondaryT> BackendT;$/;"	t	namespace:__scudo
BackgroundThread	lib/sanitizer_common/sanitizer_common_libcdep.cc	/^void BackgroundThread(void *arg) {$/;"	f	namespace:__sanitizer
BackgroundThread	lib/tsan/rtl/tsan_rtl.cc	/^static void BackgroundThread(void *arg) {$/;"	f	namespace:__tsan
BackingStore	lib/xray/xray_allocator.h	/^  void *BackingStore = nullptr;$/;"	m	struct:__xray::Allocator
Backoff	lib/sanitizer_common/tests/sanitizer_mutex_test.cc	/^  void Backoff() {$/;"	f	class:__sanitizer::TestData
Backoff	lib/tsan/rtl/tsan_mutex.cc	/^  Backoff()$/;"	f	class:__tsan::Backoff
Backoff	lib/tsan/rtl/tsan_mutex.cc	/^class Backoff {$/;"	c	namespace:__tsan	file:
Backoff	lib/tsan/tests/unit/tsan_mutex_test.cc	/^  void Backoff() {$/;"	f	class:__tsan::TestData
Backup	lib/msan/msan.cc	/^void ScopedThreadLocalStateBackup::Backup() {$/;"	f	class:__msan::ScopedThreadLocalStateBackup
BadAlignment	test/asan/TestCases/contiguous_container_crash.cc	/^void BadAlignment() {$/;"	f
BadBounds	test/asan/TestCases/contiguous_container_crash.cc	/^void BadBounds() {$/;"	f
BadClass	test/asan/TestCases/Helpers/initialization-blacklist-extra.cc	/^  BadClass() { value = 0; }$/;"	f	class:badNamespace::BadClass
BadClass	test/asan/TestCases/Helpers/initialization-blacklist-extra.cc	/^class BadClass {$/;"	c	namespace:badNamespace	file:
Bar	test/asan/TestCases/Linux/init-order-dlopen.cc	/^  Bar(int val) : val(val) { printf("Bar::Bar(%d)\\n", val); }$/;"	f	struct:Bar
Bar	test/asan/TestCases/Linux/init-order-dlopen.cc	/^struct Bar {$/;"	s	file:
Bar	test/cfi/two-vcalls.cpp	/^  virtual void Bar() {$/;"	f	class:Base
Bar	test/fuzzer/TwoDifferentBugsTest.cpp	/^void Bar() { Null[2] = 0; }$/;"	f
Base	lib/asan/asan_errors.h	/^    ErrorBase Base;$/;"	m	union:__asan::ErrorDescription::__anon46
Base	test/cfi/two-vcalls.cpp	/^class Base {$/;"	c	file:
Base	test/msan/dtor-base-access.cc	/^  Base(int *y_ptr) {$/;"	f	class:Base
Base	test/msan/dtor-base-access.cc	/^class Base {$/;"	c	file:
Base	test/msan/dtor-derived-class.cc	/^  Base() { x = 5; }$/;"	f	struct:Base
Base	test/msan/dtor-derived-class.cc	/^struct Base {$/;"	s	file:
Base	test/msan/dtor-multiple-inheritance-nontrivial-class-members.cc	/^  Base(int *derived_a, Vector<int> *derived_v1, Vector<int> *derived_v2,$/;"	f	struct:Base
Base	test/msan/dtor-multiple-inheritance-nontrivial-class-members.cc	/^struct Base {$/;"	s	file:
Base	test/profile/Linux/coverage_ctors.cpp	/^  Base() : B(0) {}$/;"	f	struct:Base
Base	test/profile/Linux/coverage_ctors.cpp	/^  Base(Base &&b2) {$/;"	f	struct:Base
Base	test/profile/Linux/coverage_ctors.cpp	/^  Base(const Base &b2) {$/;"	f	struct:Base
Base	test/profile/Linux/coverage_ctors.cpp	/^struct Base {$/;"	s	file:
Base	test/profile/Linux/coverage_dtor.cpp	/^  Base(int B_) : B(B_) {}$/;"	f	struct:Base
Base	test/profile/Linux/coverage_dtor.cpp	/^struct Base {$/;"	s	file:
Base	test/ubsan/TestCases/TypeCheck/Linux/PR33221.cpp	/^class Base {$/;"	c	file:
Base	test/ubsan/TestCases/TypeCheck/PR33221.cpp	/^class Base {$/;"	c	file:
Base64	lib/fuzzer/FuzzerUtil.cpp	/^std::string Base64(const Unit &U) {$/;"	f	namespace:fuzzer
BaseName	lib/sanitizer_common/scripts/cpplint.py	/^  def BaseName(self):$/;"	m	class:FileInfo
BaseSha1	lib/fuzzer/FuzzerInternal.h	/^  uint8_t BaseSha1[kSHA1NumBytes];  \/\/ Checksum of the base unit.$/;"	m	class:fuzzer::Fuzzer
Basename	lib/fuzzer/FuzzerIO.cpp	/^std::string Basename(const std::string &Path, char Separator) {$/;"	f	namespace:fuzzer
BasicBitVector	lib/sanitizer_common/sanitizer_bitvector.h	/^class BasicBitVector {$/;"	c	namespace:__sanitizer
BasicFlags	lib/xray/xray_basic_flags.h	/^struct BasicFlags {$/;"	s	namespace:__xray
BasicLoggingOptions	include/xray/xray_log_interface.h	/^struct BasicLoggingOptions {$/;"	s	namespace:__xray
BasicTest	lib/sanitizer_common/tests/sanitizer_bvgraph_test.cc	/^void BasicTest() {$/;"	f
BeforeFork	lib/hwasan/hwasan_interceptors.cc	/^static void BeforeFork() {$/;"	f	file:
BeforeFork	lib/msan/msan_interceptors.cc	/^static void BeforeFork() {$/;"	f	file:
BeforeInitThread	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^static void *BeforeInitThread(void *param) {$/;"	f	file:
BeforeThreadCreateHook	lib/asan/asan_fuchsia.cc	/^static void *BeforeThreadCreateHook(uptr user_id, bool detached,$/;"	f	namespace:__asan
BeforeThreadCreateHook	lib/asan/asan_rtems.cc	/^static void *BeforeThreadCreateHook(uptr user_id, bool detached,$/;"	f	namespace:__asan
Beg	lib/asan/asan_allocator.cc	/^  uptr Beg() { return reinterpret_cast<uptr>(this) + kChunkHeaderSize; }$/;"	f	struct:__asan::AsanChunk
Beg	lib/asan/asan_allocator.cc	/^uptr AsanChunkView::Beg() const { return chunk_->Beg(); }$/;"	f	class:__asan::AsanChunkView
Beg	lib/hwasan/hwasan_allocator.cc	/^uptr HwasanChunkView::Beg() const {$/;"	f	class:__hwasan::HwasanChunkView
Begin	lib/sanitizer_common/scripts/cpplint.py	/^  def Begin(self, function_name):$/;"	m	class:_FunctionState
Begin	lib/xray/xray_interface_internal.h	/^  const XRaySledEntry *Begin;$/;"	m	struct:XRayFunctionSledIndex
Benchmark	lib/tsan/tests/rtl/tsan_bench.cc	/^static void Benchmark() {$/;"	f	file:
BenignRaceImpl	lib/tsan/rtl/tsan_interface_ann.cc	/^static void BenignRaceImpl($/;"	f	file:
BinConstructor	test/tsan/Linux/check_preinit.cc	/^void BinConstructor() {$/;"	f
BinaryOpOriginTest	lib/msan/tests/msan_test.cc	/^void BinaryOpOriginTest(BinaryOp op) {$/;"	f
BitVector	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  typedef BV BitVector;$/;"	t	class:__sanitizer::DeadlockDetector
Black	lib/sanitizer_common/sanitizer_report_decorator.h	/^  const char *Black()   const { return ansi_ ? "\\033[1m\\033[30m" : ""; }$/;"	f	class:__sanitizer::SanitizerCommonDecorator
Blacklisted_Thread2	test/tsan/blacklist.cc	/^void *Blacklisted_Thread2(void *x) {$/;"	f
Blacklisted_Thread2	test/tsan/blacklist2.cc	/^void *Blacklisted_Thread2(void *x) {$/;"	f
Block	lib/xray/xray_allocator.h	/^  struct Block {$/;"	s	struct:__xray::Allocator
BlockHeader	lib/xray/xray_profile_collector.cc	/^struct BlockHeader {$/;"	s	namespace:__xray::profileCollectorService::__anon27	file:
BlockNum	lib/xray/xray_profile_collector.cc	/^  u32 BlockNum;$/;"	m	struct:__xray::profileCollectorService::__anon27::BlockHeader	file:
BlockSize	lib/xray/xray_profile_collector.cc	/^  u32 BlockSize;$/;"	m	struct:__xray::profileCollectorService::__anon27::BlockHeader	file:
Block_basic	lib/BlocksRuntime/Block_private.h	/^struct Block_basic {$/;"	s
Block_basic2	test/BlocksRuntime/byrefsanity.c	/^struct Block_basic2 {$/;"	s	file:
Block_byref	lib/BlocksRuntime/Block_private.h	/^struct Block_byref {$/;"	s
Block_byref_header	lib/BlocksRuntime/Block_private.h	/^struct Block_byref_header {$/;"	s
Block_copy	lib/BlocksRuntime/Block.h	55;"	d
Block_copy	lib/BlocksRuntime/Block_private.h	/^    void (*Block_copy)(void *dst, void *src);  \/* iff BLOCK_HAS_COPY_DISPOSE *\/$/;"	m	struct:Block_basic
Block_copy	test/BlocksRuntime/byrefsanity.c	/^    void (*Block_copy)(void *dst, void *src);$/;"	m	struct:Block_basic2	file:
Block_descriptor	lib/BlocksRuntime/Block_private.h	/^struct Block_descriptor {$/;"	s
Block_dispose	lib/BlocksRuntime/Block_private.h	/^    void (*Block_dispose)(void *);             \/* iff BLOCK_HAS_COPY_DISPOSE *\/$/;"	m	struct:Block_basic
Block_dispose	test/BlocksRuntime/byrefsanity.c	/^    void (*Block_dispose)(void *);$/;"	m	struct:Block_basic2	file:
Block_flags	lib/BlocksRuntime/Block_private.h	/^    int Block_flags;  \/* int32_t *\/$/;"	m	struct:Block_basic
Block_flags	test/BlocksRuntime/byrefsanity.c	/^    int Block_flags;  \/\/ int32_t$/;"	m	struct:Block_basic2	file:
Block_invoke	lib/BlocksRuntime/Block_private.h	/^    void (*Block_invoke)(void *);$/;"	m	struct:Block_basic
Block_invoke	test/BlocksRuntime/byrefsanity.c	/^    void (*Block_invoke)(void *);$/;"	m	struct:Block_basic2	file:
Block_layout	lib/BlocksRuntime/Block_private.h	/^struct Block_layout {$/;"	s
Block_release	lib/BlocksRuntime/Block.h	56;"	d
Block_size	lib/BlocksRuntime/Block_private.h	/^    int Block_size;  \/* XXX should be packed into Block_flags *\/$/;"	m	struct:Block_basic
Block_size	lib/BlocksRuntime/runtime.c	/^unsigned long int Block_size(void *arg) {$/;"	f
Block_size	test/BlocksRuntime/byrefsanity.c	/^    int Block_size; \/\/ XXX should be packed into Block_flags$/;"	m	struct:Block_basic2	file:
BlockingCall	lib/tsan/rtl/tsan_interceptors.cc	/^  explicit BlockingCall(ThreadState *thr)$/;"	f	struct:BlockingCall
BlockingCall	lib/tsan/rtl/tsan_interceptors.cc	/^struct BlockingCall {$/;"	s	file:
BlockingMutex	lib/sanitizer_common/sanitizer_fuchsia.cc	/^BlockingMutex::BlockingMutex() {$/;"	f	class:__sanitizer::BlockingMutex
BlockingMutex	lib/sanitizer_common/sanitizer_linux.cc	/^BlockingMutex::BlockingMutex() {$/;"	f	class:__sanitizer::BlockingMutex
BlockingMutex	lib/sanitizer_common/sanitizer_mac.cc	/^BlockingMutex::BlockingMutex() {$/;"	f	class:__sanitizer::BlockingMutex
BlockingMutex	lib/sanitizer_common/sanitizer_mutex.h	/^  explicit constexpr BlockingMutex(LinkerInitialized)$/;"	f	class:__sanitizer::BlockingMutex
BlockingMutex	lib/sanitizer_common/sanitizer_mutex.h	/^class BlockingMutex {$/;"	c	namespace:__sanitizer
BlockingMutex	lib/sanitizer_common/sanitizer_rtems.cc	/^BlockingMutex::BlockingMutex() {$/;"	f	class:__sanitizer::BlockingMutex
BlockingMutex	lib/sanitizer_common/sanitizer_solaris.cc	/^BlockingMutex::BlockingMutex() {$/;"	f	class:__sanitizer::BlockingMutex
BlockingMutex	lib/sanitizer_common/sanitizer_win.cc	/^BlockingMutex::BlockingMutex() {$/;"	f	class:__sanitizer::BlockingMutex
BlockingMutexLock	lib/sanitizer_common/sanitizer_mutex.h	/^typedef GenericScopedLock<BlockingMutex> BlockingMutexLock;$/;"	t	namespace:__sanitizer
Blue	lib/sanitizer_common/sanitizer_report_decorator.h	/^  const char *Blue()    const { return ansi_ ? "\\033[1m\\033[34m" : ""; }$/;"	f	class:__sanitizer::SanitizerCommonDecorator
BobTheStruct	test/BlocksRuntime/byrefstruct.c	/^} BobTheStruct;$/;"	t	typeref:struct:__anon144	file:
BobTheStruct	test/BlocksRuntime/large-struct.c	/^} BobTheStruct;$/;"	t	typeref:struct:__anon142	file:
Bold	lib/sanitizer_common/sanitizer_report_decorator.h	/^  const char *Bold() const { return ansi_ ? "\\033[1m" : ""; }$/;"	f	class:__sanitizer::SanitizerCommonDecorator
BorderAccessFunc	lib/asan/tests/asan_benchmarks_test.cc	/^static void BorderAccessFunc(char *x, size_t n_iter) {$/;"	f	file:
Bottom	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^  void *Bottom() const {$/;"	f	class:__sanitizer::ScopedStackSpaceWithGuard
BreakpadSymbolizer	lib/asan/scripts/asan_symbolize.py	/^class BreakpadSymbolizer(Symbolizer):$/;"	c
BreakpadSymbolizerFactory	lib/asan/scripts/asan_symbolize.py	/^def BreakpadSymbolizerFactory(binary):$/;"	f
Broadcast	test/tsan/custom_mutex.h	/^  void Broadcast() {$/;"	f	class:Mutex
Bswap	lib/fuzzer/FuzzerDefs.h	/^inline uint16_t Bswap(uint16_t x) { return __builtin_bswap16(x); }$/;"	f	namespace:fuzzer
Bswap	lib/fuzzer/FuzzerDefs.h	/^inline uint32_t Bswap(uint32_t x) { return __builtin_bswap32(x); }$/;"	f	namespace:fuzzer
Bswap	lib/fuzzer/FuzzerDefs.h	/^inline uint64_t Bswap(uint64_t x) { return __builtin_bswap64(x); }$/;"	f	namespace:fuzzer
Bswap	lib/fuzzer/FuzzerDefs.h	/^inline uint8_t  Bswap(uint8_t x)  { return x; }$/;"	f	namespace:fuzzer
Bucket	lib/sanitizer_common/sanitizer_addrhashmap.h	/^  struct Bucket {$/;"	s	class:__sanitizer::AddrHashMap
Buf	test/esan/Unit/hashtable.cpp	/^  char *Buf;$/;"	m	class:MyData	file:
Buff	lib/xray/xray_buffer_queue.h	/^    Buffer Buff;$/;"	m	struct:__xray::BufferQueue::BufferRep
Buffer	lib/ubsan/ubsan_monitor.h	/^  InternalScopedString Buffer;$/;"	m	struct:__ubsan::UndefinedBehaviorReport
Buffer	lib/xray/xray_buffer_queue.h	/^  struct Buffer {$/;"	s	class:__xray::BufferQueue
BufferCount	lib/xray/xray_buffer_queue.h	/^  size_t BufferCount;$/;"	m	class:__xray::BufferQueue
BufferIOBuffer	lib/profile/InstrProfilingWriter.c	/^static uint8_t BufferIOBuffer[VP_BUFFER_SIZE];$/;"	v	file:
BufferQueue	lib/xray/xray_buffer_queue.cc	/^BufferQueue::BufferQueue(size_t B, size_t N, bool &Success)$/;"	f	class:BufferQueue
BufferQueue	lib/xray/xray_buffer_queue.h	/^class BufferQueue {$/;"	c	namespace:__xray
BufferRep	lib/xray/xray_buffer_queue.h	/^  struct BufferRep {$/;"	s	class:__xray::BufferQueue
BufferSize	lib/xray/xray_buffer_queue.h	/^  size_t BufferSize;$/;"	m	class:__xray::BufferQueue
BufferStart	lib/profile/InstrProfilingInternal.h	/^  uint8_t *BufferStart;$/;"	m	struct:ProfBufferIO
BufferSz	lib/profile/InstrProfilingInternal.h	/^  uint32_t BufferSz;$/;"	m	struct:ProfBufferIO
BufferedStackTrace	lib/sanitizer_common/sanitizer_stacktrace.h	/^  BufferedStackTrace() : StackTrace(trace_buffer, 0), top_frame_bp(0) {}$/;"	f	struct:__sanitizer::BufferedStackTrace
BufferedStackTrace	lib/sanitizer_common/sanitizer_stacktrace.h	/^struct BufferedStackTrace : public StackTrace {$/;"	s	namespace:__sanitizer
Buffers	lib/xray/xray_buffer_queue.cc	/^      Next(Buffers), First(Buffers), LiveBuffers(0) {$/;"	v
Buffers	lib/xray/xray_buffer_queue.h	/^    BufferRep *Buffers = nullptr;$/;"	m	class:__xray::BufferQueue::Iterator
Buffers	lib/xray/xray_buffer_queue.h	/^  BufferRep *Buffers;$/;"	m	class:__xray::BufferQueue
Buildit	test/BlocksRuntime/makefile	/^Buildit ?= ~rc\/bin\/buildit -rootsDirectory $(RootsDirectory) -arch i386 -arch ppc -arch x86_64$/;"	m
BuiltinLongJmpFunc1	lib/asan/tests/asan_test.cc	/^NOINLINE void BuiltinLongJmpFunc1(jmp_buf buf) {$/;"	f
BusyThread	test/tsan/signal_recursive.cc	/^void* BusyThread(void *arg) {$/;"	f
ByteMap	lib/asan/asan_allocator.h	/^  typedef __asan::ByteMap ByteMap;$/;"	t	struct:__asan::AP32
ByteMap	lib/asan/asan_allocator.h	/^typedef FlatByteMap<kNumRegions> ByteMap;$/;"	t	namespace:__asan
ByteMap	lib/asan/asan_allocator.h	/^typedef TwoLevelByteMap<(kNumRegions >> 12), 1 << 12> ByteMap;$/;"	t	namespace:__asan
ByteMap	lib/hwasan/hwasan_allocator.cc	/^  typedef __hwasan::ByteMap ByteMap;$/;"	t	struct:__hwasan::AP32	file:
ByteMap	lib/hwasan/hwasan_allocator.cc	/^typedef TwoLevelByteMap<(kNumRegions >> 12), 1 << 12> ByteMap;$/;"	t	namespace:__hwasan	file:
ByteMap	lib/lsan/lsan_allocator.h	/^  typedef __lsan::ByteMap ByteMap;$/;"	t	struct:__lsan::AP32
ByteMap	lib/lsan/lsan_allocator.h	/^typedef TwoLevelByteMap<(kNumRegions >> 12), 1 << 12> ByteMap;$/;"	t	namespace:__lsan
ByteMap	lib/msan/msan_allocator.cc	/^    typedef __msan::ByteMap ByteMap;$/;"	t	struct:__msan::AP32	file:
ByteMap	lib/msan/msan_allocator.cc	/^  typedef TwoLevelByteMap<(kNumRegions >> 12), 1 << 12> ByteMap;$/;"	t	namespace:__msan	file:
ByteMap	lib/sanitizer_common/sanitizer_allocator_internal.h	/^  typedef __sanitizer::ByteMap ByteMap;$/;"	t	struct:__sanitizer::AP32
ByteMap	lib/sanitizer_common/sanitizer_allocator_internal.h	/^typedef FlatByteMap<kInternalAllocatorNumRegions> ByteMap;$/;"	t	namespace:__sanitizer
ByteMap	lib/sanitizer_common/sanitizer_allocator_internal.h	/^typedef TwoLevelByteMap<(kInternalAllocatorNumRegions >> 12), 1 << 12> ByteMap;$/;"	t	namespace:__sanitizer
ByteMap	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^  typedef typename Params::ByteMap ByteMap;$/;"	t	class:SizeClassAllocator32
ByteMap	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  typedef FlatByteMap<kFlatByteMapSize> ByteMap;$/;"	t	struct:AP32Compact	file:
ByteMap	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  typedef FlatByteMap<kFlatByteMapSize> ByteMap;$/;"	t	struct:AP32SeparateBatches	file:
ByteMap	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  typedef FlatByteMap<kFlatByteMapSize> ByteMap;$/;"	t	struct:AP32WithCallback	file:
ByteMap	lib/tsan/rtl/tsan_rtl.h	/^    MapUnmapCallback> ByteMap;$/;"	t	namespace:__tsan
ByteMap	lib/tsan/rtl/tsan_rtl.h	/^  typedef __tsan::ByteMap ByteMap;$/;"	t	struct:__tsan::AP32
BytesInSizeClass	lib/asan/asan_fake_stack.h	/^  static uptr BytesInSizeClass(uptr class_id) {$/;"	f	class:__asan::FakeStack
C	lib/builtins/hexagon/dffma.S	/^#define C r5:4$/;"	d
C	lib/sanitizer_common/tests/sanitizer_format_interceptor_test.cc	/^static const unsigned C = sizeof(char);$/;"	v	file:
C	test/asan/TestCases/Helpers/init-order-atexit-extra.cc	/^  C() { value = 42; }$/;"	f	class:C
C	test/asan/TestCases/Helpers/init-order-atexit-extra.cc	/^class C {$/;"	c	file:
C	test/asan/TestCases/Posix/new_array_cookie_test.cc	/^struct C {$/;"	s	file:
C	test/asan/TestCases/Posix/new_array_cookie_uaf_test.cc	/^struct C {$/;"	s	file:
C	test/asan/TestCases/Windows/dll_operator_array_new_with_dtor_left_oob.cc	/^struct C {$/;"	s	file:
C	test/asan/TestCases/Windows/operator_array_new_with_dtor_left_oob.cc	/^struct C {$/;"	s	file:
C	test/asan/TestCases/global-location.cc	/^struct C {$/;"	s	file:
C	test/asan/TestCases/use-after-scope-conversion.cc	/^  C(const B &b) : p(&b.p) {} \/\/ NOLINT$/;"	f	struct:C
C	test/asan/TestCases/use-after-scope-conversion.cc	/^  explicit C(const char *c) : p(c) {}$/;"	f	struct:C
C	test/asan/TestCases/use-after-scope-conversion.cc	/^struct C {$/;"	s	file:
C	test/cfi/bad-cast.cpp	/^struct C : A {$/;"	s	file:
C	test/cfi/multiple-inheritance.cpp	/^struct C : A, B {$/;"	s	file:
C	test/cfi/sibling.cpp	/^struct C : A {$/;"	s	file:
C	test/cfi/simple-pass.cpp	/^struct C {$/;"	s	namespace:__anon140	file:
C	test/esan/TestCases/struct-simple.cpp	/^class C {$/;"	c	file:
C	test/fuzzer/LargeTest.cpp	25;"	d	file:
C	test/msan/dtor-multiple-inheritance.cc	/^  C() { z = 15; }$/;"	f	struct:C
C	test/msan/dtor-multiple-inheritance.cc	/^struct C : virtual public A {$/;"	s	file:
C	test/msan/dtor-vtable-multiple-inheritance.cc	/^class C : public B {$/;"	c	file:
C	test/msan/dtor-vtable.cc	/^class C : public A, public B {$/;"	c	file:
C	test/ubsan/TestCases/Misc/nonnull-arg.cpp	/^  C(int *null, __attribute__((nonnull)) int *nonnull)$/;"	f	class:C
C	test/ubsan/TestCases/Misc/nonnull-arg.cpp	/^class C {$/;"	c	file:
C	test/ubsan/TestCases/TypeCheck/vptr-virtual-base-construction.cpp	/^struct C: virtual A { ~C() { n = 0; } };$/;"	s	file:
C1	test/asan/TestCases/Darwin/mixing-global-constructors.cc	/^  C1() {$/;"	f	struct:C1
C1	test/asan/TestCases/Darwin/mixing-global-constructors.cc	/^struct C1 {$/;"	s	file:
C2	test/cfi/simple-pass.cpp	/^struct C2 : C {$/;"	s	namespace:__anon140	file:
CACHE_FRAG_H	lib/esan/cache_frag.h	16;"	d
CALL	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^    CALL,$/;"	e	enum:Event::Type	file:
CALLERPC	lib/tsan/rtl/tsan_external.cc	18;"	d	file:
CALLERPC	lib/tsan/rtl/tsan_interface.cc	19;"	d	file:
CALLERPC	lib/tsan/rtl/tsan_interface_ann.cc	26;"	d	file:
CALLERPC	lib/tsan/rtl/tsan_interface_inl.h	17;"	d
CALL_APSR_H	test/builtins/Unit/arm/call_apsr.h	16;"	d
CALL_WEAK_INTERCEPTOR_HOOK	lib/dfsan/dfsan_custom.cc	46;"	d	file:
CAN_SANITIZE_LEAKS	lib/lsan/lsan_common.h	37;"	d
CAN_SANITIZE_LEAKS	lib/lsan/lsan_common.h	40;"	d
CAN_SANITIZE_LEAKS	lib/lsan/lsan_common.h	43;"	d
CAN_SANITIZE_LEAKS	lib/lsan/lsan_common.h	45;"	d
CAN_SANITIZE_UB	lib/ubsan/ubsan_platform.h	21;"	d
CAN_SANITIZE_UB	lib/ubsan/ubsan_platform.h	23;"	d
CB	lib/fuzzer/FuzzerInternal.h	/^  UserCallback CB;$/;"	m	class:fuzzer::Fuzzer
CB	test/tsan/deadlock_detector_stress_test.cc	/^  struct CB {$/;"	s	class:LockTest	file:
CCC	test/tsan/virtual_inheritance_compile_bug.cc	/^struct CCC: virtual AAA { };$/;"	s	file:
CCDIR	test/BlocksRuntime/makefile	/^CCDIR=\/usr\/bin$/;"	m
CFAllocatorAllocateToGlob	lib/asan/tests/asan_mac_test.cc	/^void *CFAllocatorAllocateToGlob(void *unused) {$/;"	f	namespace:__anon41
CFAllocatorDeallocateFromGlob	lib/asan/tests/asan_mac_test.cc	/^void *CFAllocatorDeallocateFromGlob(void *unused) {$/;"	f	namespace:__anon41
CFAllocator_DoubleFreeOnPthread	lib/asan/tests/asan_mac_test.cc	/^void CFAllocator_DoubleFreeOnPthread() {$/;"	f
CFAllocator_PassMemoryToAnotherThread	lib/asan/tests/asan_mac_test.cc	/^void CFAllocator_PassMemoryToAnotherThread() {$/;"	f	namespace:__anon41
CFDataCreateWithBytesNoCopyFuncTy	lib/builtins/os_version_check.c	/^typedef CFDataRef (*CFDataCreateWithBytesNoCopyFuncTy)(CFAllocatorRef,$/;"	t	file:
CFDictionaryGetValueFuncTy	lib/builtins/os_version_check.c	/^typedef const void *(*CFDictionaryGetValueFuncTy)(CFDictionaryRef,$/;"	t	file:
CFGetTypeIDFuncTy	lib/builtins/os_version_check.c	/^typedef CFTypeID (*CFGetTypeIDFuncTy)(CFTypeRef);$/;"	t	file:
CFICheckFailData	lib/ubsan/ubsan_handlers.h	/^struct CFICheckFailData {$/;"	s	namespace:__ubsan
CFICheckFn	lib/cfi/cfi.cc	/^typedef int (*CFICheckFn)(u64, void *, void *);$/;"	t	namespace:__cfi	file:
CFI_ADJUST_CFA_OFFSET	lib/sanitizer_common/sanitizer_asm.h	25;"	d
CFI_ADJUST_CFA_OFFSET	lib/sanitizer_common/sanitizer_asm.h	37;"	d
CFI_DEF_CFA	lib/sanitizer_common/sanitizer_asm.h	30;"	d
CFI_DEF_CFA	lib/sanitizer_common/sanitizer_asm.h	42;"	d
CFI_DEF_CFA_OFFSET	lib/sanitizer_common/sanitizer_asm.h	26;"	d
CFI_DEF_CFA_OFFSET	lib/sanitizer_common/sanitizer_asm.h	38;"	d
CFI_DEF_CFA_REGISTER	lib/sanitizer_common/sanitizer_asm.h	29;"	d
CFI_DEF_CFA_REGISTER	lib/sanitizer_common/sanitizer_asm.h	41;"	d
CFI_ENDPROC	lib/sanitizer_common/sanitizer_asm.h	24;"	d
CFI_ENDPROC	lib/sanitizer_common/sanitizer_asm.h	36;"	d
CFI_INL_ADJUST_CFA_OFFSET	lib/sanitizer_common/sanitizer_asm.h	21;"	d
CFI_INL_ADJUST_CFA_OFFSET	lib/sanitizer_common/sanitizer_asm.h	34;"	d
CFI_OFFSET	lib/sanitizer_common/sanitizer_asm.h	28;"	d
CFI_OFFSET	lib/sanitizer_common/sanitizer_asm.h	40;"	d
CFI_OFFSET_NUM	lib/fuzzer/FuzzerUtilFuchsia.cpp	159;"	d	file:
CFI_OFFSET_REG	lib/fuzzer/FuzzerUtilFuchsia.cpp	158;"	d	file:
CFI_REL_OFFSET	lib/sanitizer_common/sanitizer_asm.h	27;"	d
CFI_REL_OFFSET	lib/sanitizer_common/sanitizer_asm.h	39;"	d
CFI_RESTORE	lib/sanitizer_common/sanitizer_asm.h	31;"	d
CFI_RESTORE	lib/sanitizer_common/sanitizer_asm.h	43;"	d
CFI_STARTPROC	lib/sanitizer_common/sanitizer_asm.h	23;"	d
CFI_STARTPROC	lib/sanitizer_common/sanitizer_asm.h	35;"	d
CFPropertyListCreateFromXMLDataFuncTy	lib/builtins/os_version_check.c	/^typedef CFPropertyListRef (*CFPropertyListCreateFromXMLDataFuncTy)($/;"	t	file:
CFPropertyListCreateWithDataFuncTy	lib/builtins/os_version_check.c	/^typedef CFPropertyListRef (*CFPropertyListCreateWithDataFuncTy)($/;"	t	file:
CFReleaseFuncTy	lib/builtins/os_version_check.c	/^typedef void (*CFReleaseFuncTy)(CFTypeRef);$/;"	t	file:
CFStringCreateWithCStringNoCopyFuncTy	lib/builtins/os_version_check.c	/^typedef CFStringRef (*CFStringCreateWithCStringNoCopyFuncTy)(CFAllocatorRef,$/;"	t	file:
CFStringGetCStringFuncTy	lib/builtins/os_version_check.c	/^typedef Boolean (*CFStringGetCStringFuncTy)(CFStringRef, char *, CFIndex,$/;"	t	file:
CFStringGetTypeIDFuncTy	lib/builtins/os_version_check.c	/^typedef CFTypeID (*CFStringGetTypeIDFuncTy)(void);$/;"	t	file:
CH	lib/builtins/hexagon/dffma.S	/^		CH = insert(TMP,#EXPBITS,#HI_MANTBITS)$/;"	d
CH	lib/builtins/hexagon/dffma.S	/^#define CH r5$/;"	d
CHECK	lib/sanitizer_common/sanitizer_internal_defs.h	303;"	d
CHECK_ALIGNED	test/asan/TestCases/Windows/aligned_mallocs.cc	6;"	d	file:
CHECK_ALIGNED	test/asan/TestCases/Windows/dll_aligned_mallocs.cc	8;"	d	file:
CHECK_AND_PUSH	test/msan/ifaddrs.cc	19;"	d	file:
CHECK_CALL	test/asan/TestCases/Posix/halt_on_error-signals.c	35;"	d	file:
CHECK_EQ	lib/sanitizer_common/sanitizer_internal_defs.h	304;"	d
CHECK_ERROR	lib/fuzzer/afl/afl_driver.cpp	107;"	d	file:
CHECK_ERROR	test/asan/TestCases/Linux/recvfrom.cc	18;"	d	file:
CHECK_GE	lib/sanitizer_common/sanitizer_internal_defs.h	309;"	d
CHECK_GET_TLS_STATIC_INFO_VERSION	lib/sanitizer_common/sanitizer_linux_libcdep.cc	187;"	d	file:
CHECK_GET_TLS_STATIC_INFO_VERSION	lib/sanitizer_common/sanitizer_linux_libcdep.cc	189;"	d	file:
CHECK_GET_TLS_STATIC_INFO_VERSION	lib/sanitizer_common/sanitizer_linux_libcdep.cc	192;"	d	file:
CHECK_GT	lib/sanitizer_common/sanitizer_internal_defs.h	308;"	d
CHECK_IMPL	lib/sanitizer_common/sanitizer_internal_defs.h	293;"	d
CHECK_LE	lib/sanitizer_common/sanitizer_internal_defs.h	307;"	d
CHECK_LT	lib/sanitizer_common/sanitizer_internal_defs.h	306;"	d
CHECK_NE	lib/sanitizer_common/sanitizer_internal_defs.h	305;"	d
CHECK_NEEDED_LENGTH	lib/sanitizer_common/sanitizer_printf.cc	267;"	d	file:
CHECK_NEEDED_LENGTH	lib/sanitizer_common/sanitizer_printf.cc	292;"	d	file:
CHECK_RANGES_OVERLAP	lib/asan/asan_interceptors_memintrinsics.h	136;"	d
CHECK_SHADOW_STACK	test/tsan/exceptions.cc	145;"	d	file:
CHECK_SIZE_AND_OFFSET	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	2202;"	d
CHECK_SIZE_AND_OFFSET	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	364;"	d
CHECK_SIZE_AND_OFFSET	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	481;"	d
CHECK_SMALL_REGION	lib/asan/asan_poisoning.cc	217;"	d	file:
CHECK_STRUCT_SIZE_AND_OFFSET	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	2210;"	d
CHECK_STRUCT_SIZE_AND_OFFSET	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	372;"	d
CHECK_STRUCT_SIZE_AND_OFFSET	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	489;"	d
CHECK_TYPE_SIZE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	2199;"	d
CHECK_TYPE_SIZE	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	361;"	d
CHECK_TYPE_SIZE	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	478;"	d
CHECK_UNPOISONED	lib/hwasan/hwasan_interceptors.cc	122;"	d	file:
CHECK_UNPOISONED	lib/msan/msan_interceptors.cc	119;"	d	file:
CHECK_UNPOISONED_0	lib/hwasan/hwasan_interceptors.cc	104;"	d	file:
CHECK_UNPOISONED_0	lib/msan/msan_interceptors.cc	100;"	d	file:
CHECK_UNPOISONED_CTX	lib/hwasan/hwasan_interceptors.cc	346;"	d	file:
CHECK_UNPOISONED_CTX	lib/msan/msan_interceptors.cc	1175;"	d	file:
CHECK_UNPOISONED_STRING	lib/msan/msan_interceptors.cc	128;"	d	file:
CHECK_UNPOISONED_STRING_OF_LEN	lib/hwasan/hwasan_interceptors.cc	127;"	d	file:
CHECK_UNPOISONED_STRING_OF_LEN	lib/msan/msan_interceptors.cc	124;"	d	file:
CHUNK_ALLOCATED	lib/asan/asan_allocator.cc	/^  CHUNK_ALLOCATED  = 2,$/;"	e	enum:__asan::__anon51	file:
CHUNK_ALLOCATED	lib/hwasan/hwasan_allocator.cc	/^  CHUNK_ALLOCATED = 2$/;"	e	enum:__hwasan::__anon55	file:
CHUNK_AVAILABLE	lib/asan/asan_allocator.cc	/^  CHUNK_AVAILABLE  = 0,  \/\/ 0 is the default value even if we didn't set it.$/;"	e	enum:__asan::__anon51	file:
CHUNK_FREE	lib/hwasan/hwasan_allocator.cc	/^  CHUNK_FREE = 1,$/;"	e	enum:__hwasan::__anon55	file:
CHUNK_INVALID	lib/hwasan/hwasan_allocator.cc	/^  CHUNK_INVALID = 0,$/;"	e	enum:__hwasan::__anon55	file:
CHUNK_QUARANTINE	lib/asan/asan_allocator.cc	/^  CHUNK_QUARANTINE = 3$/;"	e	enum:__asan::__anon51	file:
CL	lib/builtins/hexagon/dffma.S	/^#define CL r4$/;"	d
CLEAR_FRAME_AND_RETURN	lib/builtins/arm/divmodsi4.S	/^#define CLEAR_FRAME_AND_RETURN \\$/;"	d
CLEAR_FRAME_AND_RETURN	lib/builtins/arm/divsi3.S	/^#define CLEAR_FRAME_AND_RETURN \\$/;"	d
CLEAR_FRAME_AND_RETURN	lib/builtins/arm/modsi3.S	/^#define CLEAR_FRAME_AND_RETURN \\$/;"	d
COMMENT_EXPORT	lib/asan/asan_new_delete.cc	31;"	d	file:
COMMENT_EXPORT	lib/asan/asan_new_delete.cc	47;"	d	file:
COMMON_ACTIVATION_FLAG	lib/asan/asan_activation.cc	37;"	d	file:
COMMON_ACTIVATION_FLAG	lib/asan/asan_activation.cc	41;"	d	file:
COMMON_FLAG	lib/sanitizer_common/sanitizer_flags.cc	108;"	d	file:
COMMON_FLAG	lib/sanitizer_common/sanitizer_flags.cc	111;"	d	file:
COMMON_FLAG	lib/sanitizer_common/sanitizer_flags.cc	26;"	d	file:
COMMON_FLAG	lib/sanitizer_common/sanitizer_flags.cc	28;"	d	file:
COMMON_FLAG	lib/sanitizer_common/sanitizer_flags.h	28;"	d
COMMON_FLAG	lib/sanitizer_common/sanitizer_flags.h	30;"	d
COMMON_INTERCEPTOR_ACQUIRE	lib/esan/esan_interceptors.cpp	103;"	d	file:
COMMON_INTERCEPTOR_ACQUIRE	lib/tsan/rtl/tsan_interceptors.cc	2231;"	d	file:
COMMON_INTERCEPTOR_BLOCK_REAL	lib/asan/asan_interceptors.cc	129;"	d	file:
COMMON_INTERCEPTOR_BLOCK_REAL	lib/esan/esan_interceptors.cpp	150;"	d	file:
COMMON_INTERCEPTOR_BLOCK_REAL	lib/hwasan/hwasan_interceptors.cc	399;"	d	file:
COMMON_INTERCEPTOR_BLOCK_REAL	lib/msan/msan_interceptors.cc	1231;"	d	file:
COMMON_INTERCEPTOR_BLOCK_REAL	lib/tsan/rtl/tsan_interceptors.cc	2258;"	d	file:
COMMON_INTERCEPTOR_COPY_STRING	lib/msan/msan_interceptors.cc	1264;"	d	file:
COMMON_INTERCEPTOR_DIR_ACQUIRE	lib/asan/asan_interceptors.cc	109;"	d	file:
COMMON_INTERCEPTOR_DIR_ACQUIRE	lib/esan/esan_interceptors.cpp	113;"	d	file:
COMMON_INTERCEPTOR_DIR_ACQUIRE	lib/hwasan/hwasan_interceptors.cc	381;"	d	file:
COMMON_INTERCEPTOR_DIR_ACQUIRE	lib/msan/msan_interceptors.cc	1213;"	d	file:
COMMON_INTERCEPTOR_DIR_ACQUIRE	lib/tsan/rtl/tsan_interceptors.cc	2237;"	d	file:
COMMON_INTERCEPTOR_ENTER	lib/asan/asan_interceptors.cc	100;"	d	file:
COMMON_INTERCEPTOR_ENTER	lib/esan/esan_interceptors.cpp	60;"	d	file:
COMMON_INTERCEPTOR_ENTER	lib/hwasan/hwasan_interceptors.cc	374;"	d	file:
COMMON_INTERCEPTOR_ENTER	lib/msan/msan_interceptors.cc	1205;"	d	file:
COMMON_INTERCEPTOR_ENTER	lib/tsan/rtl/tsan_interceptors.cc	2200;"	d	file:
COMMON_INTERCEPTOR_ENTER_NOIGNORE	lib/esan/esan_interceptors.cpp	71;"	d	file:
COMMON_INTERCEPTOR_ENTER_NOIGNORE	lib/tsan/rtl/tsan_interceptors.cc	2206;"	d	file:
COMMON_INTERCEPTOR_FD_ACCESS	lib/esan/esan_interceptors.cpp	128;"	d	file:
COMMON_INTERCEPTOR_FD_ACCESS	lib/tsan/rtl/tsan_interceptors.cc	2246;"	d	file:
COMMON_INTERCEPTOR_FD_ACQUIRE	lib/asan/asan_interceptors.cc	112;"	d	file:
COMMON_INTERCEPTOR_FD_ACQUIRE	lib/esan/esan_interceptors.cpp	118;"	d	file:
COMMON_INTERCEPTOR_FD_ACQUIRE	lib/hwasan/hwasan_interceptors.cc	384;"	d	file:
COMMON_INTERCEPTOR_FD_ACQUIRE	lib/msan/msan_interceptors.cc	1216;"	d	file:
COMMON_INTERCEPTOR_FD_ACQUIRE	lib/tsan/rtl/tsan_interceptors.cc	2240;"	d	file:
COMMON_INTERCEPTOR_FD_RELEASE	lib/asan/asan_interceptors.cc	115;"	d	file:
COMMON_INTERCEPTOR_FD_RELEASE	lib/esan/esan_interceptors.cpp	123;"	d	file:
COMMON_INTERCEPTOR_FD_RELEASE	lib/hwasan/hwasan_interceptors.cc	387;"	d	file:
COMMON_INTERCEPTOR_FD_RELEASE	lib/msan/msan_interceptors.cc	1219;"	d	file:
COMMON_INTERCEPTOR_FD_RELEASE	lib/tsan/rtl/tsan_interceptors.cc	2243;"	d	file:
COMMON_INTERCEPTOR_FD_SOCKET_ACCEPT	lib/asan/asan_interceptors.cc	118;"	d	file:
COMMON_INTERCEPTOR_FD_SOCKET_ACCEPT	lib/esan/esan_interceptors.cpp	133;"	d	file:
COMMON_INTERCEPTOR_FD_SOCKET_ACCEPT	lib/hwasan/hwasan_interceptors.cc	390;"	d	file:
COMMON_INTERCEPTOR_FD_SOCKET_ACCEPT	lib/msan/msan_interceptors.cc	1222;"	d	file:
COMMON_INTERCEPTOR_FD_SOCKET_ACCEPT	lib/tsan/rtl/tsan_interceptors.cc	2249;"	d	file:
COMMON_INTERCEPTOR_FILE_CLOSE	lib/esan/esan_interceptors.cpp	90;"	d	file:
COMMON_INTERCEPTOR_FILE_CLOSE	lib/tsan/rtl/tsan_interceptors.cc	2219;"	d	file:
COMMON_INTERCEPTOR_FILE_OPEN	lib/esan/esan_interceptors.cpp	84;"	d	file:
COMMON_INTERCEPTOR_FILE_OPEN	lib/tsan/rtl/tsan_interceptors.cc	2212;"	d	file:
COMMON_INTERCEPTOR_GET_TLS_RANGE	lib/asan/asan_interceptors.cc	142;"	d	file:
COMMON_INTERCEPTOR_GET_TLS_RANGE	lib/hwasan/hwasan_interceptors.cc	402;"	d	file:
COMMON_INTERCEPTOR_GET_TLS_RANGE	lib/msan/msan_interceptors.cc	1240;"	d	file:
COMMON_INTERCEPTOR_GET_TLS_RANGE	lib/tsan/rtl/tsan_interceptors.cc	2296;"	d	file:
COMMON_INTERCEPTOR_HANDLE_RECVMSG	lib/esan/esan_interceptors.cpp	166;"	d	file:
COMMON_INTERCEPTOR_HANDLE_RECVMSG	lib/tsan/rtl/tsan_interceptors.cc	2291;"	d	file:
COMMON_INTERCEPTOR_INITIALIZE_RANGE	lib/hwasan/hwasan_interceptors.cc	372;"	d	file:
COMMON_INTERCEPTOR_INITIALIZE_RANGE	lib/msan/msan_interceptors.cc	1203;"	d	file:
COMMON_INTERCEPTOR_LIBRARY_LOADED	lib/asan/asan_interceptors.cc	139;"	d	file:
COMMON_INTERCEPTOR_LIBRARY_LOADED	lib/esan/esan_interceptors.cpp	95;"	d	file:
COMMON_INTERCEPTOR_LIBRARY_LOADED	lib/msan/msan_interceptors.cc	1233;"	d	file:
COMMON_INTERCEPTOR_LIBRARY_LOADED	lib/tsan/rtl/tsan_interceptors.cc	2225;"	d	file:
COMMON_INTERCEPTOR_LIBRARY_UNLOADED	lib/asan/asan_interceptors.cc	140;"	d	file:
COMMON_INTERCEPTOR_LIBRARY_UNLOADED	lib/esan/esan_interceptors.cpp	100;"	d	file:
COMMON_INTERCEPTOR_LIBRARY_UNLOADED	lib/tsan/rtl/tsan_interceptors.cc	2228;"	d	file:
COMMON_INTERCEPTOR_MEMCPY_IMPL	lib/asan/asan_interceptors.cc	156;"	d	file:
COMMON_INTERCEPTOR_MEMCPY_IMPL	lib/msan/msan_interceptors.cc	1258;"	d	file:
COMMON_INTERCEPTOR_MEMMOVE_IMPL	lib/asan/asan_interceptors.cc	150;"	d	file:
COMMON_INTERCEPTOR_MEMMOVE_IMPL	lib/msan/msan_interceptors.cc	1253;"	d	file:
COMMON_INTERCEPTOR_MEMSET_IMPL	lib/asan/asan_interceptors.cc	162;"	d	file:
COMMON_INTERCEPTOR_MEMSET_IMPL	lib/hwasan/hwasan_interceptors.cc	410;"	d	file:
COMMON_INTERCEPTOR_MEMSET_IMPL	lib/msan/msan_interceptors.cc	1248;"	d	file:
COMMON_INTERCEPTOR_MMAP_IMPL	lib/esan/esan_interceptors.cpp	178;"	d	file:
COMMON_INTERCEPTOR_MMAP_IMPL	lib/hwasan/hwasan_interceptors.cc	419;"	d	file:
COMMON_INTERCEPTOR_MMAP_IMPL	lib/msan/msan_interceptors.cc	1271;"	d	file:
COMMON_INTERCEPTOR_MMAP_IMPL	lib/tsan/rtl/tsan_interceptors.cc	2283;"	d	file:
COMMON_INTERCEPTOR_MUTEX_INVALID	lib/tsan/rtl/tsan_interceptors.cc	2279;"	d	file:
COMMON_INTERCEPTOR_MUTEX_LOCK	lib/esan/esan_interceptors.cpp	151;"	d	file:
COMMON_INTERCEPTOR_MUTEX_POST_LOCK	lib/tsan/rtl/tsan_interceptors.cc	2267;"	d	file:
COMMON_INTERCEPTOR_MUTEX_PRE_LOCK	lib/tsan/rtl/tsan_interceptors.cc	2263;"	d	file:
COMMON_INTERCEPTOR_MUTEX_REPAIR	lib/esan/esan_interceptors.cpp	161;"	d	file:
COMMON_INTERCEPTOR_MUTEX_REPAIR	lib/tsan/rtl/tsan_interceptors.cc	2275;"	d	file:
COMMON_INTERCEPTOR_MUTEX_UNLOCK	lib/esan/esan_interceptors.cpp	156;"	d	file:
COMMON_INTERCEPTOR_MUTEX_UNLOCK	lib/tsan/rtl/tsan_interceptors.cc	2271;"	d	file:
COMMON_INTERCEPTOR_NOTHING_IS_INITIALIZED	lib/asan/asan_interceptors.cc	141;"	d	file:
COMMON_INTERCEPTOR_NOTHING_IS_INITIALIZED	lib/esan/esan_interceptors.cpp	50;"	d	file:
COMMON_INTERCEPTOR_NOTHING_IS_INITIALIZED	lib/tsan/rtl/tsan_interceptors.cc	158;"	d	file:
COMMON_INTERCEPTOR_ON_DLOPEN	lib/asan/asan_interceptors.cc	132;"	d	file:
COMMON_INTERCEPTOR_ON_EXIT	lib/asan/asan_interceptors.cc	138;"	d	file:
COMMON_INTERCEPTOR_ON_EXIT	lib/esan/esan_interceptors.cpp	82;"	d	file:
COMMON_INTERCEPTOR_ON_EXIT	lib/hwasan/hwasan_interceptors.cc	400;"	d	file:
COMMON_INTERCEPTOR_ON_EXIT	lib/msan/msan_interceptors.cc	1232;"	d	file:
COMMON_INTERCEPTOR_ON_EXIT	lib/tsan/rtl/tsan_interceptors.cc	2260;"	d	file:
COMMON_INTERCEPTOR_READ_RANGE	lib/asan/asan_interceptors.cc	98;"	d	file:
COMMON_INTERCEPTOR_READ_RANGE	lib/esan/esan_interceptors.cpp	77;"	d	file:
COMMON_INTERCEPTOR_READ_RANGE	lib/hwasan/hwasan_interceptors.cc	370;"	d	file:
COMMON_INTERCEPTOR_READ_RANGE	lib/msan/msan_interceptors.cc	1201;"	d	file:
COMMON_INTERCEPTOR_READ_RANGE	lib/sanitizer_common/tests/sanitizer_format_interceptor_test.cc	30;"	d	file:
COMMON_INTERCEPTOR_READ_RANGE	lib/sanitizer_common/tests/sanitizer_ioctl_test.cc	29;"	d	file:
COMMON_INTERCEPTOR_READ_RANGE	lib/tsan/rtl/tsan_interceptors.cc	2195;"	d	file:
COMMON_INTERCEPTOR_READ_WRITE_RANGE	lib/sanitizer_common/tests/sanitizer_format_interceptor_test.cc	24;"	d	file:
COMMON_INTERCEPTOR_RELEASE	lib/esan/esan_interceptors.cpp	108;"	d	file:
COMMON_INTERCEPTOR_RELEASE	lib/tsan/rtl/tsan_interceptors.cc	2234;"	d	file:
COMMON_INTERCEPTOR_SET_PTHREAD_NAME	lib/asan/asan_interceptors.cc	126;"	d	file:
COMMON_INTERCEPTOR_SET_PTHREAD_NAME	lib/esan/esan_interceptors.cpp	144;"	d	file:
COMMON_INTERCEPTOR_SET_PTHREAD_NAME	lib/hwasan/hwasan_interceptors.cc	396;"	d	file:
COMMON_INTERCEPTOR_SET_PTHREAD_NAME	lib/msan/msan_interceptors.cc	1228;"	d	file:
COMMON_INTERCEPTOR_SET_PTHREAD_NAME	lib/tsan/rtl/tsan_interceptors.cc	2255;"	d	file:
COMMON_INTERCEPTOR_SET_THREAD_NAME	lib/asan/asan_interceptors.cc	121;"	d	file:
COMMON_INTERCEPTOR_SET_THREAD_NAME	lib/esan/esan_interceptors.cpp	139;"	d	file:
COMMON_INTERCEPTOR_SET_THREAD_NAME	lib/hwasan/hwasan_interceptors.cc	393;"	d	file:
COMMON_INTERCEPTOR_SET_THREAD_NAME	lib/msan/msan_interceptors.cc	1225;"	d	file:
COMMON_INTERCEPTOR_SET_THREAD_NAME	lib/tsan/rtl/tsan_interceptors.cc	2252;"	d	file:
COMMON_INTERCEPTOR_UNPOISON_PARAM	lib/msan/msan_interceptors.cc	1197;"	d	file:
COMMON_INTERCEPTOR_USER_CALLBACK_END	lib/esan/esan_interceptors.cpp	174;"	d	file:
COMMON_INTERCEPTOR_USER_CALLBACK_END	lib/tsan/rtl/tsan_interceptors.cc	2307;"	d	file:
COMMON_INTERCEPTOR_USER_CALLBACK_START	lib/esan/esan_interceptors.cpp	171;"	d	file:
COMMON_INTERCEPTOR_USER_CALLBACK_START	lib/tsan/rtl/tsan_interceptors.cc	2304;"	d	file:
COMMON_INTERCEPTOR_WRITE_RANGE	lib/asan/asan_interceptors.cc	96;"	d	file:
COMMON_INTERCEPTOR_WRITE_RANGE	lib/esan/esan_interceptors.cpp	74;"	d	file:
COMMON_INTERCEPTOR_WRITE_RANGE	lib/hwasan/hwasan_interceptors.cc	368;"	d	file:
COMMON_INTERCEPTOR_WRITE_RANGE	lib/msan/msan_interceptors.cc	1199;"	d	file:
COMMON_INTERCEPTOR_WRITE_RANGE	lib/sanitizer_common/tests/sanitizer_format_interceptor_test.cc	33;"	d	file:
COMMON_INTERCEPTOR_WRITE_RANGE	lib/sanitizer_common/tests/sanitizer_ioctl_test.cc	35;"	d	file:
COMMON_INTERCEPTOR_WRITE_RANGE	lib/tsan/rtl/tsan_interceptors.cc	2190;"	d	file:
COMMON_INTERCEPT_FUNCTION	lib/asan/asan_interceptors.cc	93;"	d	file:
COMMON_INTERCEPT_FUNCTION	lib/esan/esan_interceptors.cpp	52;"	d	file:
COMMON_INTERCEPT_FUNCTION	lib/hwasan/hwasan_interceptors.cc	365;"	d	file:
COMMON_INTERCEPT_FUNCTION	lib/lsan/lsan_interceptors.cc	423;"	d	file:
COMMON_INTERCEPT_FUNCTION	lib/msan/msan_interceptors.cc	1194;"	d	file:
COMMON_INTERCEPT_FUNCTION	lib/tsan/rtl/tsan_interceptors.cc	2186;"	d	file:
COMMON_INTERCEPT_FUNCTION_VER	lib/asan/asan_interceptors.cc	94;"	d	file:
COMMON_INTERCEPT_FUNCTION_VER	lib/esan/esan_interceptors.cpp	53;"	d	file:
COMMON_INTERCEPT_FUNCTION_VER	lib/hwasan/hwasan_interceptors.cc	366;"	d	file:
COMMON_INTERCEPT_FUNCTION_VER	lib/msan/msan_interceptors.cc	1195;"	d	file:
COMMON_INTERCEPT_FUNCTION_VER	lib/tsan/rtl/tsan_interceptors.cc	2187;"	d	file:
COMMON_MALLOC_CALLOC	lib/asan/asan_malloc_mac.cc	38;"	d	file:
COMMON_MALLOC_CALLOC	lib/lsan/lsan_malloc_mac.cc	37;"	d	file:
COMMON_MALLOC_CALLOC	lib/tsan/rtl/tsan_malloc_mac.cc	39;"	d	file:
COMMON_MALLOC_ENTER	lib/asan/asan_malloc_mac.cc	25;"	d	file:
COMMON_MALLOC_ENTER	lib/lsan/lsan_malloc_mac.cc	24;"	d	file:
COMMON_MALLOC_ENTER	lib/tsan/rtl/tsan_malloc_mac.cc	24;"	d	file:
COMMON_MALLOC_FILL_STATS	lib/asan/asan_malloc_mac.cc	52;"	d	file:
COMMON_MALLOC_FILL_STATS	lib/lsan/lsan_malloc_mac.cc	50;"	d	file:
COMMON_MALLOC_FILL_STATS	lib/tsan/rtl/tsan_malloc_mac.cc	62;"	d	file:
COMMON_MALLOC_FORCE_LOCK	lib/asan/asan_malloc_mac.cc	27;"	d	file:
COMMON_MALLOC_FORCE_LOCK	lib/lsan/lsan_malloc_mac.cc	26;"	d	file:
COMMON_MALLOC_FORCE_LOCK	lib/tsan/rtl/tsan_malloc_mac.cc	26;"	d	file:
COMMON_MALLOC_FORCE_UNLOCK	lib/asan/asan_malloc_mac.cc	28;"	d	file:
COMMON_MALLOC_FORCE_UNLOCK	lib/lsan/lsan_malloc_mac.cc	27;"	d	file:
COMMON_MALLOC_FORCE_UNLOCK	lib/tsan/rtl/tsan_malloc_mac.cc	27;"	d	file:
COMMON_MALLOC_FREE	lib/asan/asan_malloc_mac.cc	47;"	d	file:
COMMON_MALLOC_FREE	lib/lsan/lsan_malloc_mac.cc	46;"	d	file:
COMMON_MALLOC_FREE	lib/tsan/rtl/tsan_malloc_mac.cc	57;"	d	file:
COMMON_MALLOC_MALLOC	lib/asan/asan_malloc_mac.cc	32;"	d	file:
COMMON_MALLOC_MALLOC	lib/lsan/lsan_malloc_mac.cc	31;"	d	file:
COMMON_MALLOC_MALLOC	lib/tsan/rtl/tsan_malloc_mac.cc	31;"	d	file:
COMMON_MALLOC_MEMALIGN	lib/asan/asan_malloc_mac.cc	29;"	d	file:
COMMON_MALLOC_MEMALIGN	lib/lsan/lsan_malloc_mac.cc	28;"	d	file:
COMMON_MALLOC_MEMALIGN	lib/tsan/rtl/tsan_malloc_mac.cc	28;"	d	file:
COMMON_MALLOC_NAMESPACE	lib/asan/asan_malloc_mac.cc	60;"	d	file:
COMMON_MALLOC_NAMESPACE	lib/lsan/lsan_malloc_mac.cc	54;"	d	file:
COMMON_MALLOC_NAMESPACE	lib/tsan/rtl/tsan_malloc_mac.cc	66;"	d	file:
COMMON_MALLOC_POSIX_MEMALIGN	lib/asan/asan_malloc_mac.cc	41;"	d	file:
COMMON_MALLOC_POSIX_MEMALIGN	lib/lsan/lsan_malloc_mac.cc	40;"	d	file:
COMMON_MALLOC_POSIX_MEMALIGN	lib/tsan/rtl/tsan_malloc_mac.cc	43;"	d	file:
COMMON_MALLOC_REALLOC	lib/asan/asan_malloc_mac.cc	35;"	d	file:
COMMON_MALLOC_REALLOC	lib/lsan/lsan_malloc_mac.cc	34;"	d	file:
COMMON_MALLOC_REALLOC	lib/tsan/rtl/tsan_malloc_mac.cc	35;"	d	file:
COMMON_MALLOC_REPORT_UNKNOWN_REALLOC	lib/asan/asan_malloc_mac.cc	57;"	d	file:
COMMON_MALLOC_REPORT_UNKNOWN_REALLOC	lib/lsan/lsan_malloc_mac.cc	51;"	d	file:
COMMON_MALLOC_REPORT_UNKNOWN_REALLOC	lib/tsan/rtl/tsan_malloc_mac.cc	63;"	d	file:
COMMON_MALLOC_SANITIZER_INITIALIZED	lib/asan/asan_malloc_mac.cc	26;"	d	file:
COMMON_MALLOC_SANITIZER_INITIALIZED	lib/lsan/lsan_malloc_mac.cc	25;"	d	file:
COMMON_MALLOC_SANITIZER_INITIALIZED	lib/tsan/rtl/tsan_malloc_mac.cc	25;"	d	file:
COMMON_MALLOC_SIZE	lib/asan/asan_malloc_mac.cc	50;"	d	file:
COMMON_MALLOC_SIZE	lib/lsan/lsan_malloc_mac.cc	48;"	d	file:
COMMON_MALLOC_SIZE	lib/tsan/rtl/tsan_malloc_mac.cc	61;"	d	file:
COMMON_MALLOC_VALLOC	lib/asan/asan_malloc_mac.cc	44;"	d	file:
COMMON_MALLOC_VALLOC	lib/lsan/lsan_malloc_mac.cc	43;"	d	file:
COMMON_MALLOC_VALLOC	lib/tsan/rtl/tsan_malloc_mac.cc	52;"	d	file:
COMMON_MALLOC_ZONE_NAME	lib/asan/asan_malloc_mac.cc	24;"	d	file:
COMMON_MALLOC_ZONE_NAME	lib/lsan/lsan_malloc_mac.cc	23;"	d	file:
COMMON_MALLOC_ZONE_NAME	lib/tsan/rtl/tsan_malloc_mac.cc	23;"	d	file:
COMMON_SYSCALL_ACQUIRE	lib/esan/esan_interceptors.cpp	215;"	d	file:
COMMON_SYSCALL_ACQUIRE	lib/tsan/rtl/tsan_interceptors.cc	2477;"	d	file:
COMMON_SYSCALL_FD_ACQUIRE	lib/esan/esan_interceptors.cpp	227;"	d	file:
COMMON_SYSCALL_FD_ACQUIRE	lib/tsan/rtl/tsan_interceptors.cc	2485;"	d	file:
COMMON_SYSCALL_FD_CLOSE	lib/esan/esan_interceptors.cpp	223;"	d	file:
COMMON_SYSCALL_FD_CLOSE	lib/tsan/rtl/tsan_interceptors.cc	2483;"	d	file:
COMMON_SYSCALL_FD_RELEASE	lib/esan/esan_interceptors.cpp	231;"	d	file:
COMMON_SYSCALL_FD_RELEASE	lib/tsan/rtl/tsan_interceptors.cc	2487;"	d	file:
COMMON_SYSCALL_POST_FORK	lib/esan/esan_interceptors.cpp	238;"	d	file:
COMMON_SYSCALL_POST_FORK	lib/tsan/rtl/tsan_interceptors.cc	2492;"	d	file:
COMMON_SYSCALL_POST_READ_RANGE	lib/asan/asan_interceptors.cc	175;"	d	file:
COMMON_SYSCALL_POST_READ_RANGE	lib/esan/esan_interceptors.cpp	205;"	d	file:
COMMON_SYSCALL_POST_READ_RANGE	lib/hwasan/hwasan_interceptors.cc	436;"	d	file:
COMMON_SYSCALL_POST_READ_RANGE	lib/msan/msan_interceptors.cc	1352;"	d	file:
COMMON_SYSCALL_POST_READ_RANGE	lib/tsan/rtl/tsan_interceptors.cc	2465;"	d	file:
COMMON_SYSCALL_POST_WRITE_RANGE	lib/asan/asan_interceptors.cc	180;"	d	file:
COMMON_SYSCALL_POST_WRITE_RANGE	lib/esan/esan_interceptors.cpp	212;"	d	file:
COMMON_SYSCALL_POST_WRITE_RANGE	lib/hwasan/hwasan_interceptors.cc	441;"	d	file:
COMMON_SYSCALL_POST_WRITE_RANGE	lib/msan/msan_interceptors.cc	1355;"	d	file:
COMMON_SYSCALL_POST_WRITE_RANGE	lib/tsan/rtl/tsan_interceptors.cc	2471;"	d	file:
COMMON_SYSCALL_PRE_FORK	lib/esan/esan_interceptors.cpp	235;"	d	file:
COMMON_SYSCALL_PRE_FORK	lib/tsan/rtl/tsan_interceptors.cc	2489;"	d	file:
COMMON_SYSCALL_PRE_READ_RANGE	lib/asan/asan_interceptors.cc	173;"	d	file:
COMMON_SYSCALL_PRE_READ_RANGE	lib/esan/esan_interceptors.cpp	196;"	d	file:
COMMON_SYSCALL_PRE_READ_RANGE	lib/hwasan/hwasan_interceptors.cc	430;"	d	file:
COMMON_SYSCALL_PRE_READ_RANGE	lib/msan/msan_interceptors.cc	1348;"	d	file:
COMMON_SYSCALL_PRE_READ_RANGE	lib/tsan/rtl/tsan_interceptors.cc	2459;"	d	file:
COMMON_SYSCALL_PRE_WRITE_RANGE	lib/asan/asan_interceptors.cc	174;"	d	file:
COMMON_SYSCALL_PRE_WRITE_RANGE	lib/esan/esan_interceptors.cpp	199;"	d	file:
COMMON_SYSCALL_PRE_WRITE_RANGE	lib/hwasan/hwasan_interceptors.cc	431;"	d	file:
COMMON_SYSCALL_PRE_WRITE_RANGE	lib/msan/msan_interceptors.cc	1349;"	d	file:
COMMON_SYSCALL_PRE_WRITE_RANGE	lib/tsan/rtl/tsan_interceptors.cc	2462;"	d	file:
COMMON_SYSCALL_RELEASE	lib/esan/esan_interceptors.cpp	219;"	d	file:
COMMON_SYSCALL_RELEASE	lib/tsan/rtl/tsan_interceptors.cc	2480;"	d	file:
COMPILERRT_ASSEMBLY_H	lib/builtins/assembly.h	17;"	d
COMPILERRT_DD_HEADER	lib/builtins/ppc/DD.h	2;"	d
COMPILER_CHECK	lib/sanitizer_common/sanitizer_internal_defs.h	336;"	d
COMPILER_RT_ABI	lib/builtins/int_lib.h	36;"	d
COMPILER_RT_ABI	lib/builtins/int_lib.h	38;"	d
COMPILER_RT_ABI	lib/builtins/int_lib.h	41;"	d
COMPILER_RT_ALIAS	lib/builtins/int_lib.h	26;"	d
COMPILER_RT_ALIAS	lib/builtins/int_lib.h	29;"	d
COMPILER_RT_ALIGNAS	lib/profile/InstrProfilingPort.h	17;"	d
COMPILER_RT_ALIGNAS	lib/profile/InstrProfilingPort.h	27;"	d
COMPILER_RT_ALLOCA	lib/profile/InstrProfilingPort.h	22;"	d
COMPILER_RT_ALLOCA	lib/profile/InstrProfilingPort.h	30;"	d
COMPILER_RT_ALWAYS_INLINE	lib/profile/InstrProfilingPort.h	25;"	d
COMPILER_RT_ALWAYS_INLINE	lib/profile/InstrProfilingPort.h	32;"	d
COMPILER_RT_BOOL_CMPXCHG	lib/profile/InstrProfilingPort.h	61;"	d
COMPILER_RT_BOOL_CMPXCHG	lib/profile/InstrProfilingPort.h	68;"	d
COMPILER_RT_BOOL_CMPXCHG	lib/profile/InstrProfilingPort.h	76;"	d
COMPILER_RT_BOOL_CMPXCHG	lib/profile/InstrProfilingPort.h	83;"	d
COMPILER_RT_FTRUNCATE	lib/profile/InstrProfilingPort.h	24;"	d
COMPILER_RT_FTRUNCATE	lib/profile/InstrProfilingPort.h	31;"	d
COMPILER_RT_GETHOSTNAME	lib/profile/InstrProfilingPort.h	49;"	d
COMPILER_RT_GETHOSTNAME	lib/profile/InstrProfilingPort.h	51;"	d
COMPILER_RT_MAX_HOSTLEN	lib/profile/InstrProfilingPort.h	47;"	d
COMPILER_RT_PTR_FETCH_ADD	lib/profile/InstrProfilingPort.h	64;"	d
COMPILER_RT_PTR_FETCH_ADD	lib/profile/InstrProfilingPort.h	71;"	d
COMPILER_RT_PTR_FETCH_ADD	lib/profile/InstrProfilingPort.h	78;"	d
COMPILER_RT_PTR_FETCH_ADD	lib/profile/InstrProfilingPort.h	85;"	d
COMPILER_RT_SECTION	lib/profile/InstrProfilingPort.h	42;"	d
COMPILER_RT_SECTION	lib/profile/InstrProfilingPort.h	44;"	d
COMPILER_RT_SEG	lib/profile/InstrProfilingPort.h	36;"	d
COMPILER_RT_SEG	lib/profile/InstrProfilingPort.h	38;"	d
COMPILER_RT_VISIBILITY	lib/profile/InstrProfilingPort.h	18;"	d
COMPILER_RT_VISIBILITY	lib/profile/InstrProfilingPort.h	28;"	d
COMPILER_RT_WEAK	include/sanitizer/esan_interface.h	26;"	d
COMPILER_RT_WEAK	include/sanitizer/esan_interface.h	28;"	d
COMPILER_RT_WEAK	include/sanitizer/esan_interface.h	30;"	d
COMPILER_RT_WEAK	lib/profile/InstrProfilingPort.h	20;"	d
COMPILER_RT_WEAK	lib/profile/InstrProfilingPort.h	29;"	d
COMPILE_TIME_ASSERT	lib/builtins/int_util.h	28;"	d
COMPILE_TIME_ASSERT1	lib/builtins/int_util.h	29;"	d
COMPILE_TIME_ASSERT2	lib/builtins/int_util.h	30;"	d
COMPLEX_IMAGINARY	lib/builtins/int_types.h	152;"	d
COMPLEX_IMAGINARY	lib/builtins/int_types.h	161;"	d
COMPLEX_REAL	lib/builtins/int_types.h	151;"	d
COMPLEX_REAL	lib/builtins/int_types.h	160;"	d
CONST	test/BlocksRuntime/copyconstructor.C	17;"	d	file:
CONST	test/BlocksRuntime/reference.C	20;"	d	file:
CONSTRUCTOR_ATTRIBUTE	lib/builtins/cpu_model.c	534;"	d	file:
CONSTRUCTOR_ATTRIBUTE	lib/builtins/cpu_model.c	536;"	d	file:
CONSTRUCTOR_ATTRIBUTE	lib/builtins/cpu_model.c	540;"	d	file:
CONST_SECTION	lib/builtins/assembly.h	31;"	d
CONST_SECTION	lib/builtins/assembly.h	45;"	d
CONST_SECTION	lib/builtins/assembly.h	64;"	d
CONST_SECTION	lib/builtins/i386/floatdidf.S	/^CONST_SECTION$/;"	l
CONST_SECTION	lib/builtins/i386/floatundidf.S	/^CONST_SECTION$/;"	l
CONST_SECTION	lib/builtins/i386/floatundisf.S	/^CONST_SECTION$/;"	l
CONST_SECTION	lib/builtins/i386/floatundixf.S	/^CONST_SECTION$/;"	l
CONST_SECTION	lib/builtins/x86_64/floatundidf.S	/^CONST_SECTION$/;"	l
CONST_SECTION	lib/builtins/x86_64/floatundisf.S	/^CONST_SECTION$/;"	l
CONST_SECTION	lib/builtins/x86_64/floatundixf.S	/^CONST_SECTION$/;"	l
CPP_STAT_INC	lib/tsan/rtl/tsan_clock.cc	79;"	d	file:
CPP_STAT_INC	lib/tsan/rtl/tsan_clock.cc	81;"	d	file:
CPU	lib/xray/xray_fdr_logging.cc	/^  unsigned char CPU = 0;$/;"	m	struct:__xray::TSCAndCPU	file:
CPU_SUBTYPE_ARM_V7K	lib/sanitizer_common/sanitizer_procmaps_mac.cc	31;"	d	file:
CPU_SUBTYPE_ARM_V7S	lib/sanitizer_common/sanitizer_procmaps_mac.cc	28;"	d	file:
CPU_SUBTYPE_MAX	lib/builtins/cpu_model.c	/^  CPU_SUBTYPE_MAX$/;"	e	enum:ProcessorSubtypes	file:
CPU_SUBTYPE_X86_64_H	lib/sanitizer_common/sanitizer_procmaps_mac.cc	25;"	d	file:
CPU_TYPE_ARM64	lib/sanitizer_common/sanitizer_procmaps_mac.cc	34;"	d	file:
CPU_TYPE_MAX	lib/builtins/cpu_model.c	/^  CPU_TYPE_MAX$/;"	e	enum:ProcessorTypes	file:
CRAppendCrashLogMessage	lib/sanitizer_common/sanitizer_mac.h	/^INLINE void CRAppendCrashLogMessage(const char *msg) {$/;"	f	namespace:__sanitizer
CRC32Table	lib/scudo/scudo_crc32.h	/^static const u32 CRC32Table[] = {$/;"	m	namespace:__scudo
CRC32_INTRINSIC	lib/scudo/scudo_crc32.h	28;"	d
CRC32_INTRINSIC	lib/scudo/scudo_crc32.h	32;"	d
CRT_HAS_128BIT	lib/builtins/int_types.h	64;"	d
CRT_INFINITY	lib/builtins/int_math.h	35;"	d
CRT_INFINITY	lib/builtins/int_math.h	37;"	d
CRT_INFINITY	lib/builtins/ppc/divtc3.c	9;"	d	file:
CRT_LDBL_128BIT	lib/builtins/fp_lib.h	106;"	d
CTMP	lib/builtins/hexagon/dffma.S	/^		CTMP = #0$/;"	d
CTMP	lib/builtins/hexagon/dffma.S	/^		CTMP = asl(PP_HH,LEFTSHIFT)$/;"	d
CTMP	lib/builtins/hexagon/dffma.S	/^		CTMP = asr(CTMP,RIGHTSHIFT)$/;"	d
CTMP	lib/builtins/hexagon/dffma.S	/^		CTMP = combine(##0x7fefffff,#-1)$/;"	d
CTMP	lib/builtins/hexagon/dffma.S	/^		CTMP = combine(PP_ODD_H,#0)$/;"	d
CTMP	lib/builtins/hexagon/dffma.S	/^		CTMP = extractu(PP_LL,#62,#2)$/;"	d
CTMP	lib/builtins/hexagon/dffma.S	/^		CTMP = insert(C,#MANTBITS,#EXPBITS-3)$/;"	d
CTMP	lib/builtins/hexagon/dffma.S	/^		CTMP = neg(ATMP)$/;"	d
CTMP	lib/builtins/hexagon/dffma.S	/^#define CTMP r11:10$/;"	d
CTMP2	lib/builtins/hexagon/dffma.S	/^		CTMP2 = #0$/;"	d
CTMP2	lib/builtins/hexagon/dffma.S	/^		CTMP2 = lsr(CTMP2,RIGHTSHIFT)$/;"	d
CTMP2	lib/builtins/hexagon/dffma.S	/^#define CTMP2 r7:6$/;"	d
CTMP2H	lib/builtins/hexagon/dffma.S	/^#define CTMP2H r7$/;"	d
CTMP2L	lib/builtins/hexagon/dffma.S	/^#define CTMP2L r6$/;"	d
CTMPH	lib/builtins/hexagon/dffma.S	/^#define CTMPH r11$/;"	d
CTMPL	lib/builtins/hexagon/dffma.S	/^#define CTMPL r10$/;"	d
CURRENT_ID	lib/profile/GCDAProfiling.c	96;"	d	file:
CUR_PC	lib/esan/esan_interceptors.cpp	25;"	d	file:
CUSTOM_EVENT	include/xray/xray_interface.h	/^  CUSTOM_EVENT = 4,$/;"	e	enum:XRayEntryType
CXX_OPERATOR_ATTRIBUTE	lib/asan/asan_new_delete.cc	30;"	d	file:
CXX_OPERATOR_ATTRIBUTE	lib/scudo/scudo_new_delete.cpp	23;"	d	file:
C_Foo	test/msan/dtor-vtable.cc	/^  virtual void C_Foo() {}$/;"	f	class:C
Cachable	lib/tsan/rtl/tsan_clock.cc	/^ALWAYS_INLINE bool SyncClock::Cachable() const {$/;"	f	class:__tsan::SyncClock
Cache	lib/sanitizer_common/sanitizer_quarantine.h	/^  typedef QuarantineCache<Callback> Cache;$/;"	t	class:__sanitizer::Quarantine
Cache	lib/sanitizer_common/tests/sanitizer_quarantine_test.cc	/^typedef QuarantineCache<QuarantineCallback> Cache;$/;"	t	namespace:__sanitizer	file:
Cache	lib/tsan/rtl/tsan_dense_alloc.h	/^  typedef DenseSlabAllocCache Cache;$/;"	t	class:__tsan::DenseSlabAlloc
Cache	test/tsan/static_init2.cc	/^  explicit Cache(int x)$/;"	f	struct:Cache
Cache	test/tsan/static_init2.cc	/^struct Cache {$/;"	s	file:
Cache	test/tsan/static_init3.cc	/^struct Cache {$/;"	s	file:
Cache	test/tsan/static_init4.cc	/^  explicit Cache(int x)$/;"	f	struct:Cache
Cache	test/tsan/static_init4.cc	/^struct Cache {$/;"	s	file:
Cache	test/tsan/static_init5.cc	/^  explicit Cache(int x)$/;"	f	struct:Cache
Cache	test/tsan/static_init5.cc	/^struct Cache {$/;"	s	file:
Cache	test/tsan/static_init6.cc	/^  explicit Cache(int x)$/;"	f	struct:Cache
Cache	test/tsan/static_init6.cc	/^struct Cache {$/;"	s	file:
CacheBinaryName	lib/sanitizer_common/sanitizer_common.cc	/^void CacheBinaryName() {$/;"	f	namespace:__sanitizer
CacheFragInfo	lib/esan/cache_frag.cpp	/^struct CacheFragInfo {$/;"	s	namespace:__esan	file:
CacheLineSize	lib/esan/working_set.cpp	/^static const u32 CacheLineSize = 64;$/;"	m	namespace:__esan	file:
CacheMemoryMappings	lib/sanitizer_common/sanitizer_procmaps_common.cc	/^void MemoryMappingLayout::CacheMemoryMappings() {$/;"	f	class:__sanitizer::MemoryMappingLayout
CacheMemoryMappings	lib/sanitizer_common/sanitizer_procmaps_mac.cc	/^void MemoryMappingLayout::CacheMemoryMappings() {$/;"	f	class:__sanitizer::MemoryMappingLayout
Cache_	lib/scudo/scudo_allocator.cpp	/^  AllocatorCacheT *Cache_;$/;"	m	struct:__scudo::QuarantineCallback	file:
Call	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^void ScopedThread::Call(void(*pc)()) {$/;"	f	class:ScopedThread
CallAtoi	lib/asan/tests/asan_str_test.cc	/^void CallAtoi(const char *nptr) {$/;"	f
CallAtol	lib/asan/tests/asan_str_test.cc	/^void CallAtol(const char *nptr) {$/;"	f
CallAtoll	lib/asan/tests/asan_str_test.cc	/^void CallAtoll(const char *nptr) {$/;"	f
CallCount	lib/xray/tests/unit/profile_collector_test.cc	/^  int64_t CallCount;$/;"	m	struct:__xray::__anon22::Profile	file:
CallCount	lib/xray/xray_function_call_trie.h	/^    int64_t CallCount;$/;"	m	struct:__xray::FunctionCallTrie::Node
CallGetTls	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^void CallGetTls(void* ptr, size_t* size, size_t* align) {$/;"	f	namespace:__sanitizer::__anon98
CallNoReturn	test/asan/TestCases/Linux/swapcontext_annotation.cc	/^__attribute__((noinline)) void CallNoReturn() {$/;"	f
CallOpCode	lib/xray/xray_x86_64.cc	/^static constexpr uint8_t CallOpCode = 0xe8;$/;"	m	namespace:__xray	file:
CallPrintfAndReportCallback	lib/sanitizer_common/sanitizer_printf.cc	/^static void CallPrintfAndReportCallback(const char *str) {$/;"	f	namespace:__sanitizer
CallSeqFourTarget_1	test/profile/Inputs/instrprof-value-prof-evict.c	/^int CallSeqFourTarget_1[] = {1, 1, 1, 2, 2, 2, 2, 0, 0, 3, 0, 0, 3, 0, 0, 3,$/;"	v
CallSeqFourTarget_2	test/profile/Inputs/instrprof-value-prof-evict.c	/^int CallSeqFourTarget_2[] = {0, 0, 3, 0, 0, 3, 0, 0, 3, 0, 0, 3, 0, 0, 3, 0,$/;"	v
CallSeqFourTarget_3	test/profile/Inputs/instrprof-value-prof-evict.c	/^int CallSeqFourTarget_3[] = {0, 3, 0, 0, 1, 3, 0, 0, 0, 2, 0, 0, 3, 3, 0, 3,$/;"	v
CallSeqThreeTarget_1	test/profile/Inputs/instrprof-value-prof-evict.c	/^int CallSeqThreeTarget_1[] = {0, 0, 0, 0, 0, 0, 1, 2, 1};$/;"	v
CallSeqThreeTarget_2	test/profile/Inputs/instrprof-value-prof-evict.c	/^int CallSeqThreeTarget_2[] = {1, 2, 1, 0, 0, 0, 0, 0, 0};$/;"	v
CallSeqThreeTarget_3	test/profile/Inputs/instrprof-value-prof-evict.c	/^int CallSeqThreeTarget_3[] = {1, 0, 0, 2, 0, 0, 0, 1, 0};$/;"	v
CallSeqThreeTarget_4	test/profile/Inputs/instrprof-value-prof-evict.c	/^int CallSeqThreeTarget_4[] = {0, 0, 0, 1, 0, 1, 0, 0, 2};$/;"	v
CallSeqTwoTarget_1	test/profile/Inputs/instrprof-value-prof-evict.c	/^int CallSeqTwoTarget_1[] = {0, 0, 0, 0, 0, 1, 1};$/;"	v
CallSeqTwoTarget_2	test/profile/Inputs/instrprof-value-prof-evict.c	/^int CallSeqTwoTarget_2[] = {1, 1, 0, 0, 0, 0, 0};$/;"	v
CallSeqTwoTarget_3	test/profile/Inputs/instrprof-value-prof-evict.c	/^int CallSeqTwoTarget_3[] = {1, 0, 0, 1, 0, 0, 0};$/;"	v
CallSeqTwoTarget_4	test/profile/Inputs/instrprof-value-prof-evict.c	/^int CallSeqTwoTarget_4[] = {0, 0, 0, 1, 0, 1, 0};$/;"	v
CallStrtol	lib/asan/tests/asan_str_test.cc	/^void CallStrtol(const char *nptr, char **endptr, int base) {$/;"	f
CallStrtoll	lib/asan/tests/asan_str_test.cc	/^void CallStrtoll(const char *nptr, char **endptr, int base) {$/;"	f
CallTouchGlobal	test/tsan/blacklist2.cc	/^void CallTouchGlobal() {$/;"	f
CallUserSignalHandler	lib/tsan/rtl/tsan_interceptors.cc	/^static void CallUserSignalHandler(ThreadState *thr, bool sync, bool acquire,$/;"	f	namespace:__tsan
CallXRayPatchedFunction	lib/xray/xray_trampoline_powerpc64.cc	/^void CallXRayPatchedFunction(int32_t FuncId, XRayEntryType Type) {$/;"	f	namespace:__xray
Callback	lib/sanitizer_common/tests/sanitizer_stoptheworld_test.cc	/^void Callback(const SuspendedThreadsList &suspended_threads_list,$/;"	f	namespace:__sanitizer
Callback	lib/sanitizer_common/tests/sanitizer_stoptheworld_testlib.cc	/^void Callback(const SuspendedThreadsList &suspended_threads_list,$/;"	f	namespace:__anon60
Callback	lib/tsan/dd/dd_rtl.cc	/^Callback::Callback(Thread *thr)$/;"	f	class:__dsan::Callback
Callback	lib/tsan/dd/dd_rtl.h	/^struct Callback : DDCallback {$/;"	s	namespace:__dsan
Callback	lib/tsan/rtl/tsan_rtl_mutex.cc	/^  Callback(ThreadState *thr, uptr pc)$/;"	f	struct:__tsan::Callback
Callback	lib/tsan/rtl/tsan_rtl_mutex.cc	/^struct Callback : DDCallback {$/;"	s	namespace:__tsan	file:
CallbackArgument	lib/sanitizer_common/tests/sanitizer_stoptheworld_test.cc	/^  CallbackArgument()$/;"	f	struct:__sanitizer::CallbackArgument
CallbackArgument	lib/sanitizer_common/tests/sanitizer_stoptheworld_test.cc	/^struct CallbackArgument {$/;"	s	namespace:__sanitizer	file:
CallbackGetProc	lib/tsan/go/tsan_go.cc	/^  CallbackGetProc = 0,$/;"	e	enum:__tsan::__anon14	file:
CallbackSymbolizeCode	lib/tsan/go/tsan_go.cc	/^  CallbackSymbolizeCode = 1,$/;"	e	enum:__tsan::__anon14	file:
CallbackSymbolizeData	lib/tsan/go/tsan_go.cc	/^  CallbackSymbolizeData = 2,$/;"	e	enum:__tsan::__anon14	file:
CalleeAddrs	test/profile/Inputs/instrprof-value-prof-evict.c	/^void *CalleeAddrs[] = {callee_0, callee_1, callee_2, callee_3};$/;"	v
CalleeAddrs	test/profile/instrprof-value-prof-reset.c	/^void *CalleeAddrs[] = {callee_0, callee_1, callee_2, callee_2, callee_2};$/;"	v
CalleeAddrs	test/profile/instrprof-value-prof.c	/^void *CalleeAddrs[] = {FUNC_8_ADDRS(callee)};$/;"	v
Callees	lib/xray/xray_function_call_trie.h	/^    NodeIdPairArray Callees;$/;"	m	struct:__xray::FunctionCallTrie::Node
CallerAddr	test/profile/instrprof-value-prof.c	/^    void *CallerAddr;$/;"	m	struct:CallerInfo	file:
CallerInfo	test/profile/instrprof-value-prof.c	/^typedef struct CallerInfo {$/;"	s	file:
CallerInfo	test/profile/instrprof-value-prof.c	/^} CallerInfo;$/;"	t	typeref:struct:CallerInfo	file:
CallerInfos	test/profile/instrprof-value-prof.c	/^CallerInfo CallerInfos[128];$/;"	v
Calloc	lib/asan/asan_allocator.cc	/^  void *Calloc(uptr nmemb, uptr size, BufferedStackTrace *stack) {$/;"	f	struct:__asan::Allocator
Calloc	lib/lsan/lsan_allocator.cc	/^static void *Calloc(uptr nmemb, uptr size, const StackTrace &stack) {$/;"	f	namespace:__lsan
CallocCalled	test/profile/Inputs/instrprof-alloc.c	/^int CallocCalled = 0;$/;"	v
CanAllocate	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^  static bool CanAllocate(uptr size, uptr alignment) {$/;"	f	class:SizeClassAllocator32
CanAllocate	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  static bool CanAllocate(uptr size, uptr alignment) {$/;"	f	class:SizeClassAllocator64
CanBeAHeapPointer	lib/lsan/lsan_common.cc	/^static inline bool CanBeAHeapPointer(uptr p) {$/;"	f	namespace:__lsan
CanLockAdj	lib/tsan/rtl/tsan_mutex.cc	/^static bool CanLockAdj[MutexTypeCount][MutexTypeCount];$/;"	m	namespace:__tsan	file:
CanLockTab	lib/tsan/rtl/tsan_mutex.cc	/^static MutexType CanLockTab[MutexTypeCount][MutexTypeCount] = {$/;"	m	namespace:__tsan	file:
CanPoisonMemory	lib/asan/asan_poisoning.cc	/^bool CanPoisonMemory() {$/;"	f	namespace:__asan
CanUseVDSO	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^INLINE bool CanUseVDSO() {$/;"	f	namespace:__sanitizer
CanonicalizeAlphabeticalOrder	lib/sanitizer_common/scripts/cpplint.py	/^  def CanonicalizeAlphabeticalOrder(self, header_path):$/;"	m	class:_IncludeState
Capacity	lib/esan/esan_circular_buffer.h	/^  uptr Capacity;$/;"	m	class:__esan::CircularBuffer
Capacity	lib/esan/esan_hashtable.h	/^  u32 Capacity;$/;"	m	class:__esan::HashTable
CatastrophicErrorWrite	lib/sanitizer_common/sanitizer_file.cc	/^void CatastrophicErrorWrite(const char *buffer, uptr length) {$/;"	f	namespace:__sanitizer
CatastrophicErrorWrite	lib/sanitizer_common/sanitizer_fuchsia.cc	/^void CatastrophicErrorWrite(const char *buffer, uptr length) {$/;"	f	namespace:__sanitizer
Cell	lib/sanitizer_common/sanitizer_addrhashmap.h	/^  struct Cell {$/;"	s	class:__sanitizer::AddrHashMap
CfiSlowPathCommon	lib/cfi/cfi.cc	/^ALWAYS_INLINE void CfiSlowPathCommon(u64 CallSiteTypeId, void *Ptr,$/;"	f	namespace:__cfi
ChainOrigin	lib/msan/msan.cc	/^u32 ChainOrigin(u32 id, StackTrace *stack) {$/;"	f	namespace:__msan
ChainSymbolizer	lib/asan/scripts/asan_symbolize.py	/^class ChainSymbolizer(Symbolizer):$/;"	c
ChainedOriginDepotDesc	lib/msan/msan_chained_origin_depot.cc	/^struct ChainedOriginDepotDesc {$/;"	s	namespace:__msan	file:
ChainedOriginDepotGet	lib/msan/msan_chained_origin_depot.cc	/^u32 ChainedOriginDepotGet(u32 id, u32 *other) {$/;"	f	namespace:__msan
ChainedOriginDepotGetStats	lib/msan/msan_chained_origin_depot.cc	/^StackDepotStats *ChainedOriginDepotGetStats() {$/;"	f	namespace:__msan
ChainedOriginDepotLockAll	lib/msan/msan_chained_origin_depot.cc	/^void ChainedOriginDepotLockAll() {$/;"	f	namespace:__msan
ChainedOriginDepotNode	lib/msan/msan_chained_origin_depot.cc	/^struct ChainedOriginDepotNode {$/;"	s	namespace:__msan	file:
ChainedOriginDepotPut	lib/msan/msan_chained_origin_depot.cc	/^bool ChainedOriginDepotPut(u32 here_id, u32 prev_id, u32 *new_id) {$/;"	f	namespace:__msan
ChainedOriginDepotUnlockAll	lib/msan/msan_chained_origin_depot.cc	/^void ChainedOriginDepotUnlockAll() {$/;"	f	namespace:__msan
ChangeBinaryInteger	lib/fuzzer/FuzzerMutate.cpp	/^size_t ChangeBinaryInteger(uint8_t *Data, size_t Size, Random &Rand) {$/;"	f	namespace:fuzzer
ChangeMemoryProtection	lib/interception/interception_win.cc	/^static bool ChangeMemoryProtection($/;"	f	namespace:__interception
Check	lib/sanitizer_common/scripts/cpplint.py	/^  def Check(self, error, filename, linenum):$/;"	m	class:_FunctionState
CheckASLR	lib/sanitizer_common/sanitizer_fuchsia.cc	/^void CheckASLR() {}$/;"	f	namespace:__sanitizer
CheckASLR	lib/sanitizer_common/sanitizer_linux.cc	/^void CheckASLR() {$/;"	f	namespace:__sanitizer
CheckASLR	lib/sanitizer_common/sanitizer_mac.cc	/^void CheckASLR() {$/;"	f	namespace:__sanitizer
CheckASLR	lib/sanitizer_common/sanitizer_rtems.cc	/^void CheckASLR() {}$/;"	f	namespace:__sanitizer
CheckASLR	lib/sanitizer_common/sanitizer_win.cc	/^void CheckASLR() {$/;"	f	namespace:__sanitizer
CheckAccess	lib/sanitizer_common/scripts/cpplint.py	/^def CheckAccess(filename, clean_lines, linenum, nesting_state, error):$/;"	f
CheckAddress	lib/hwasan/hwasan.cc	/^__attribute__((always_inline, nodebug)) static void CheckAddress(uptr p) {$/;"	f	file:
CheckAddressSized	lib/hwasan/hwasan.cc	/^__attribute__((always_inline, nodebug)) static void CheckAddressSized(uptr p,$/;"	f	file:
CheckAlignedAllocAlignmentAndSize	lib/sanitizer_common/sanitizer_allocator_checks.h	/^INLINE bool CheckAlignedAllocAlignmentAndSize(uptr alignment, uptr size) {$/;"	f	namespace:__sanitizer
CheckAltTokens	lib/sanitizer_common/scripts/cpplint.py	/^def CheckAltTokens(filename, clean_lines, linenum, error):$/;"	f
CheckAndProtect	lib/tsan/rtl/tsan_platform_posix.cc	/^void CheckAndProtect() {$/;"	f	namespace:__tsan
CheckAtomicCompareExchange	lib/sanitizer_common/tests/sanitizer_atomic_test.cc	/^void CheckAtomicCompareExchange() {$/;"	f	namespace:__sanitizer
CheckBV	lib/sanitizer_common/tests/sanitizer_bitvector_test.cc	/^static void CheckBV(const BV &bv, const set<uptr> &s) {$/;"	f	file:
CheckBegin	lib/sanitizer_common/scripts/cpplint.py	/^  def CheckBegin(self, filename, clean_lines, linenum, error):$/;"	m	class:_BlockInfo
CheckBegin	lib/sanitizer_common/scripts/cpplint.py	/^  def CheckBegin(self, filename, clean_lines, linenum, error):$/;"	m	class:_ClassInfo
CheckBits	lib/sanitizer_common/scripts/sancov.py	/^def CheckBits(bits):$/;"	f
CheckBraces	lib/sanitizer_common/scripts/cpplint.py	/^def CheckBraces(filename, clean_lines, linenum, error):$/;"	f
CheckCStyleCast	lib/sanitizer_common/scripts/cpplint.py	/^def CheckCStyleCast(filename, linenum, line, raw_line, cast_type, pattern,$/;"	f
CheckCheck	lib/sanitizer_common/scripts/cpplint.py	/^def CheckCheck(filename, clean_lines, linenum, error):$/;"	f
CheckClassFinished	lib/sanitizer_common/scripts/cpplint.py	/^  def CheckClassFinished(self, filename, error):$/;"	m	class:_NestingState
CheckComment	lib/sanitizer_common/scripts/cpplint.py	/^def CheckComment(comment, filename, linenum, error):$/;"	f
CheckConsistency	lib/sanitizer_common/sanitizer_list.h	/^  void CheckConsistency() {$/;"	f	struct:__sanitizer::IntrusiveList
CheckContains	lib/tsan/rtl/tsan_interface_ann.cc	/^static bool CheckContains(ExpectRace *list, uptr addr, uptr size) {$/;"	f	namespace:__tsan
CheckEmptyLoopBody	lib/sanitizer_common/scripts/cpplint.py	/^def CheckEmptyLoopBody(filename, clean_lines, linenum, error):$/;"	f
CheckEnd	lib/sanitizer_common/scripts/cpplint.py	/^  def CheckEnd(self, filename, clean_lines, linenum, error):$/;"	m	class:_BlockInfo
CheckEnd	lib/sanitizer_common/scripts/cpplint.py	/^  def CheckEnd(self, filename, clean_lines, linenum, error):$/;"	m	class:_NamespaceInfo
CheckExitOnSrcPosOrItem	lib/fuzzer/FuzzerLoop.cpp	/^void Fuzzer::CheckExitOnSrcPosOrItem() {$/;"	f	class:fuzzer::Fuzzer
CheckFailed	lib/sanitizer_common/sanitizer_termination.cc	/^void NORETURN CheckFailed(const char *file, int line, const char *cond,$/;"	f	namespace:__sanitizer
CheckFailed	lib/scudo/scudo_termination.cpp	/^void NORETURN CheckFailed(const char *File, int Line, const char *Condition,$/;"	f	namespace:__sanitizer
CheckFailed	lib/ubsan_minimal/ubsan_minimal_handlers.cc	/^void NORETURN CheckFailed(const char *file, int, const char *cond, u64, u64) {$/;"	f	namespace:__sanitizer
CheckFailedCallback	lib/sanitizer_common/sanitizer_termination.cc	/^static CheckFailedCallbackType CheckFailedCallback;$/;"	m	namespace:__sanitizer	file:
CheckFailedCallbackType	lib/sanitizer_common/sanitizer_common.h	/^typedef void (*CheckFailedCallbackType)(const char *, int, const char *,$/;"	t	namespace:__sanitizer
CheckFnPtr	lib/fuzzer/FuzzerExtFunctionsWeak.cpp	/^static void CheckFnPtr(void *FnPtr, const char *FnName, bool WarnIfMissing) {$/;"	f	file:
CheckForCallocOverflow	lib/sanitizer_common/sanitizer_allocator_checks.h	/^INLINE bool CheckForCallocOverflow(uptr size, uptr n) {$/;"	f	namespace:__sanitizer
CheckForCopyright	lib/sanitizer_common/scripts/cpplint.py	/^def CheckForCopyright(filename, lines, error):$/;"	f
CheckForFunctionLengths	lib/sanitizer_common/scripts/cpplint.py	/^def CheckForFunctionLengths(filename, clean_lines, linenum,$/;"	f
CheckForHeaderGuard	lib/sanitizer_common/scripts/cpplint.py	/^def CheckForHeaderGuard(filename, lines, error):$/;"	f
CheckForIncludeWhatYouUse	lib/sanitizer_common/scripts/cpplint.py	/^def CheckForIncludeWhatYouUse(filename, clean_lines, include_state, error,$/;"	f
CheckForInvalidPointerPair	lib/asan/asan_report.cc	/^static INLINE void CheckForInvalidPointerPair(void *p1, void *p2) {$/;"	f	namespace:__asan
CheckForLeaks	lib/lsan/lsan_common.cc	/^static bool CheckForLeaks() {$/;"	f	namespace:__lsan
CheckForLeaksCallback	lib/lsan/lsan_common.cc	/^static void CheckForLeaksCallback(const SuspendedThreadsList &suspended_threads,$/;"	f	namespace:__lsan
CheckForLeaksParam	lib/lsan/lsan_common.cc	/^struct CheckForLeaksParam {$/;"	s	namespace:__lsan	file:
CheckForMultilineCommentsAndStrings	lib/sanitizer_common/scripts/cpplint.py	/^def CheckForMultilineCommentsAndStrings(filename, clean_lines, linenum, error):$/;"	f
CheckForNewlineAtEOF	lib/sanitizer_common/scripts/cpplint.py	/^def CheckForNewlineAtEOF(filename, lines, error):$/;"	f
CheckForNonStandardConstructs	lib/sanitizer_common/scripts/cpplint.py	/^def CheckForNonStandardConstructs(filename, clean_lines, linenum,$/;"	f
CheckForPvallocOverflow	lib/sanitizer_common/sanitizer_allocator_checks.h	/^INLINE bool CheckForPvallocOverflow(uptr size, uptr page_size) {$/;"	f	namespace:__sanitizer
CheckForUnicodeReplacementCharacters	lib/sanitizer_common/scripts/cpplint.py	/^def CheckForUnicodeReplacementCharacters(filename, lines, error):$/;"	f
CheckForUnstableCounters	lib/fuzzer/FuzzerLoop.cpp	/^void Fuzzer::CheckForUnstableCounters(const uint8_t *Data, size_t Size) {$/;"	f	class:fuzzer::Fuzzer
CheckId	lib/tsan/rtl/tsan_sync.h	/^  bool CheckId(u64 uid) const {$/;"	f	struct:__tsan::SyncVar
CheckIncludeLine	lib/sanitizer_common/scripts/cpplint.py	/^def CheckIncludeLine(filename, clean_lines, linenum, include_state, error):$/;"	f
CheckInvalidIncrement	lib/sanitizer_common/scripts/cpplint.py	/^def CheckInvalidIncrement(filename, clean_lines, linenum, error):$/;"	f
CheckKind	lib/ubsan/ubsan_handlers.h	/^  CFITypeCheckKind CheckKind;$/;"	m	struct:__ubsan::CFICheckFailData
CheckLanguage	lib/sanitizer_common/scripts/cpplint.py	/^def CheckLanguage(filename, clean_lines, linenum, file_extension, include_state,$/;"	f
CheckList	lib/sanitizer_common/tests/sanitizer_list_test.cc	/^static void CheckList(List *l, ListItem *i1, ListItem *i2 = 0, ListItem *i3 = 0,$/;"	f	namespace:__sanitizer
CheckLocked	lib/sanitizer_common/sanitizer_fuchsia.cc	/^void BlockingMutex::CheckLocked() {$/;"	f	class:__sanitizer::BlockingMutex
CheckLocked	lib/sanitizer_common/sanitizer_linux.cc	/^void BlockingMutex::CheckLocked() {$/;"	f	class:__sanitizer::BlockingMutex
CheckLocked	lib/sanitizer_common/sanitizer_mac.cc	/^void BlockingMutex::CheckLocked() {$/;"	f	class:__sanitizer::BlockingMutex
CheckLocked	lib/sanitizer_common/sanitizer_mutex.h	/^  void CheckLocked() {$/;"	f	class:__sanitizer::RWMutex
CheckLocked	lib/sanitizer_common/sanitizer_mutex.h	/^  void CheckLocked() {$/;"	f	class:__sanitizer::StaticSpinMutex
CheckLocked	lib/sanitizer_common/sanitizer_rtems.cc	/^void BlockingMutex::CheckLocked() {$/;"	f	class:__sanitizer::BlockingMutex
CheckLocked	lib/sanitizer_common/sanitizer_solaris.cc	/^void BlockingMutex::CheckLocked() {$/;"	f	class:__sanitizer::BlockingMutex
CheckLocked	lib/sanitizer_common/sanitizer_symbolizer_report.cc	/^void ScopedErrorReportLock::CheckLocked() {$/;"	f	class:__sanitizer::ScopedErrorReportLock
CheckLocked	lib/sanitizer_common/sanitizer_thread_registry.h	/^  void CheckLocked() { mtx_.CheckLocked(); }$/;"	f	class:__sanitizer::ThreadRegistry
CheckLocked	lib/sanitizer_common/sanitizer_win.cc	/^void BlockingMutex::CheckLocked() {$/;"	f	class:__sanitizer::BlockingMutex
CheckLocked	lib/tsan/rtl/tsan_mutex.cc	/^void Mutex::CheckLocked() {$/;"	f	class:__tsan::Mutex
CheckLocked	lib/ubsan/ubsan_diag.h	/^  static void CheckLocked() { ScopedErrorReportLock::CheckLocked(); }$/;"	f	class:__ubsan::ScopedReport
CheckMakePairUsesDeduction	lib/sanitizer_common/scripts/cpplint.py	/^def CheckMakePairUsesDeduction(filename, clean_lines, linenum, error):$/;"	f
CheckMemoryLayoutSanity	lib/msan/msan_linux.cc	/^static void CheckMemoryLayoutSanity() {$/;"	f	namespace:__msan
CheckMemoryRangeAvailability	lib/msan/msan_linux.cc	/^static bool CheckMemoryRangeAvailability(uptr beg, uptr size) {$/;"	f	namespace:__msan
CheckNextIncludeOrder	lib/sanitizer_common/scripts/cpplint.py	/^  def CheckNextIncludeOrder(self, header_type):$/;"	m	class:_IncludeState
CheckNoDeepBind	lib/sanitizer_common/sanitizer_linux.cc	/^void CheckNoDeepBind(const char *filename, int flag) {$/;"	f	namespace:__sanitizer
CheckNoDeepBind	lib/sanitizer_common/sanitizer_mac.cc	/^void CheckNoDeepBind(const char *filename, int flag) {$/;"	f	namespace:__sanitizer
CheckNoDeepBind	lib/sanitizer_common/sanitizer_win.cc	/^void CheckNoDeepBind(const char *filename, int flag) {$/;"	f	namespace:__sanitizer
CheckNoLocks	lib/tsan/rtl/tsan_mutex.cc	/^void CheckNoLocks(ThreadState *thr) {$/;"	f	namespace:__tsan
CheckNoLocks	lib/tsan/rtl/tsan_mutex.cc	/^void InternalDeadlockDetector::CheckNoLocks() {$/;"	f	class:__tsan::InternalDeadlockDetector
CheckODRViolationViaIndicator	lib/asan/asan_globals.cc	/^static void CheckODRViolationViaIndicator(const Global *g) {$/;"	f	namespace:__asan
CheckODRViolationViaPoisoning	lib/asan/asan_globals.cc	/^static void CheckODRViolationViaPoisoning(const Global *g) {$/;"	f	namespace:__asan
CheckOptions	lib/asan/asan_allocator.cc	/^  void CheckOptions(const AllocatorOptions &options) const {$/;"	f	struct:__asan::Allocator
CheckPosixMemalignAlignment	lib/sanitizer_common/sanitizer_allocator_checks.h	/^INLINE bool CheckPosixMemalignAlignment(uptr alignment) {$/;"	f	namespace:__sanitizer
CheckPosixThreading	lib/sanitizer_common/scripts/cpplint.py	/^def CheckPosixThreading(filename, clean_lines, linenum, error):$/;"	f
CheckRssLimit	lib/scudo/scudo_allocator.cpp	/^  bool CheckRssLimit;$/;"	m	struct:__scudo::Allocator	file:
CheckSectionSpacing	lib/sanitizer_common/scripts/cpplint.py	/^def CheckSectionSpacing(filename, clean_lines, class_info, linenum, error):$/;"	f
CheckShadowMapping	lib/tsan/rtl/tsan_rtl.cc	/^static void CheckShadowMapping() {$/;"	f	namespace:__tsan
CheckSpacing	lib/sanitizer_common/scripts/cpplint.py	/^def CheckSpacing(filename, clean_lines, linenum, nesting_state, error):$/;"	f
CheckSpacingForFunctionCall	lib/sanitizer_common/scripts/cpplint.py	/^def CheckSpacingForFunctionCall(filename, line, linenum, error):$/;"	f
CheckStack	test/asan/TestCases/throw_call_test.cc	/^void CheckStack() {$/;"	f
CheckStack	test/asan/TestCases/throw_invoke_test.cc	/^void CheckStack() {$/;"	f
CheckStoreLoad	lib/sanitizer_common/tests/sanitizer_atomic_test.cc	/^void CheckStoreLoad() {$/;"	f	namespace:__sanitizer
CheckStyle	lib/sanitizer_common/scripts/cpplint.py	/^def CheckStyle(filename, clean_lines, linenum, file_extension, nesting_state,$/;"	f
CheckSuppressions	lib/sanitizer_common/tests/sanitizer_suppressions_test.cc	/^  void CheckSuppressions(unsigned count, std::vector<const char *> types,$/;"	f	class:__sanitizer::SuppressionContextTest
CheckThreadQuantity	lib/sanitizer_common/tests/sanitizer_thread_registry_test.cc	/^static void CheckThreadQuantity(ThreadRegistry *registry, uptr exp_total,$/;"	f	namespace:__sanitizer
CheckVMASize	lib/sanitizer_common/sanitizer_win.cc	/^void CheckVMASize() {$/;"	f	namespace:__sanitizer
Checksum	lib/scudo/scudo_allocator.h	/^  u64 Checksum          : 16;$/;"	m	struct:__scudo::UnpackedHeader
Child	test/asan/TestCases/Linux/clone_test.cc	/^int Child(void *arg) {$/;"	f
Child	test/asan/TestCases/Linux/swapcontext_annotation.cc	/^void Child(int mode) {$/;"	f
Child	test/asan/TestCases/Linux/swapcontext_test.cc	/^void Child(int mode) {$/;"	f
Child	test/asan/TestCases/Windows/wrong_downcast_on_heap.cc	/^class Child : public Parent {$/;"	c	file:
Child	test/asan/TestCases/Windows/wrong_downcast_on_stack.cc	/^class Child : public Parent {$/;"	c	file:
Child	test/lsan/TestCases/swapcontext.cc	/^void Child() {$/;"	f
ChooseChunk	lib/asan/asan_allocator.cc	/^  AsanChunk *ChooseChunk(uptr addr, AsanChunk *left_chunk,$/;"	f	struct:__asan::Allocator
ChooseExternalSymbolizer	lib/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc	/^static SymbolizerTool *ChooseExternalSymbolizer(LowLevelAllocator *allocator) {$/;"	f	namespace:__sanitizer
ChooseSummaryStack	lib/tsan/rtl/tsan_report.cc	/^static ReportStack *ChooseSummaryStack(const ReportDesc *rep) {$/;"	f	namespace:__tsan
ChooseSymbolizerTools	lib/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc	/^static void ChooseSymbolizerTools(IntrusiveList<SymbolizerTool> *list,$/;"	f	namespace:__sanitizer
ChooseSymbolizerTools	lib/sanitizer_common/sanitizer_symbolizer_win.cc	/^static void ChooseSymbolizerTools(IntrusiveList<SymbolizerTool> *list,$/;"	f	namespace:__sanitizer
ChooseUnitIdxToMutate	lib/fuzzer/FuzzerCorpus.h	/^  size_t ChooseUnitIdxToMutate(Random &Rand) {$/;"	f	class:fuzzer::InputCorpus
ChooseUnitToMutate	lib/fuzzer/FuzzerCorpus.h	/^  InputInfo &ChooseUnitToMutate(Random &Rand) {$/;"	f	class:fuzzer::InputCorpus
Chunk	lib/scudo/scudo_allocator.cpp	/^namespace Chunk {$/;"	n	namespace:__scudo	file:
Chunk	lib/scudo/scudo_allocator.h	/^namespace Chunk {$/;"	n	namespace:__scudo
ChunkAccess	lib/asan/asan_descriptions.h	/^struct ChunkAccess {$/;"	s	namespace:__asan
ChunkBase	lib/asan/asan_allocator.cc	/^struct ChunkBase : ChunkHeader {$/;"	s	namespace:__asan	file:
ChunkCallback	lib/asan/asan_memory_profile.cc	/^static void ChunkCallback(uptr chunk, void *arg) {$/;"	f	namespace:__asan
ChunkHeader	lib/asan/asan_allocator.cc	/^struct ChunkHeader {$/;"	s	namespace:__asan	file:
ChunkMetadata	lib/lsan/lsan_allocator.h	/^struct ChunkMetadata {$/;"	s	namespace:__lsan
ChunkTag	lib/lsan/lsan_common.h	/^enum ChunkTag {$/;"	g	namespace:__lsan
CircularBuffer	lib/esan/esan_circular_buffer.h	/^  CircularBuffer(uptr BufferCapacity) {$/;"	f	class:__esan::CircularBuffer
CircularBuffer	lib/esan/esan_circular_buffer.h	/^  explicit CircularBuffer() {}$/;"	f	class:__esan::CircularBuffer
CircularBuffer	lib/esan/esan_circular_buffer.h	/^class CircularBuffer {$/;"	c	namespace:__esan
CircularBufferSizes	lib/esan/working_set.cpp	/^u32 CircularBufferSizes[NumFreq] = {$/;"	m	namespace:__esan	file:
ClassID	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^  uptr ClassID(uptr size) { return SizeClassMap::ClassID(size); }$/;"	f	class:SizeClassAllocator32
ClassID	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  uptr ClassID(uptr size) { return SizeClassMap::ClassID(size); }$/;"	f	class:SizeClassAllocator64
ClassID	lib/sanitizer_common/sanitizer_allocator_size_class_map.h	/^  static uptr ClassID(uptr size) {$/;"	f	class:SizeClassMap
ClassId	lib/scudo/scudo_allocator.h	/^  u64 ClassId           : 8;$/;"	m	struct:__scudo::UnpackedHeader
ClassIdToSize	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^  static uptr ClassIdToSize(uptr class_id) {$/;"	f	class:SizeClassAllocator32
ClassIdToSize	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  static uptr ClassIdToSize(uptr class_id) {$/;"	f	class:SizeClassAllocator64
ClassWithDestructor	test/tsan/exceptions.cc	/^  ClassWithDestructor() {$/;"	f	class:ClassWithDestructor
ClassWithDestructor	test/tsan/exceptions.cc	/^class ClassWithDestructor {$/;"	c	file:
ClassWithStatic	lib/tsan/tests/rtl/tsan_mop.cc	/^struct ClassWithStatic {$/;"	s	file:
ClassifyAllChunks	lib/lsan/lsan_common.cc	/^static void ClassifyAllChunks(SuspendedThreadsList const &suspended_threads) {$/;"	f	namespace:__lsan
CleanseComments	lib/sanitizer_common/scripts/cpplint.py	/^def CleanseComments(line):$/;"	f
CleanseCrashInput	lib/fuzzer/FuzzerDriver.cpp	/^int CleanseCrashInput(const Vector<std::string> &Args,$/;"	f	namespace:fuzzer
CleansedLines	lib/sanitizer_common/scripts/cpplint.py	/^class CleansedLines(object):$/;"	c
Clear	lib/asan/asan_scariness_score.h	/^  void Clear() {$/;"	f	struct:__asan::ScarinessScoreBase
Clear	lib/asan/asan_stats.cc	/^void AsanStats::Clear() {$/;"	f	class:__asan::AsanStats
Clear	lib/fuzzer/FuzzerDataFlowTrace.h	/^  void Clear() { Traces.clear(); }$/;"	f	class:fuzzer::DataFlowTrace
Clear	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^    void Clear() { count_ = 0; }$/;"	f	struct:SizeClassAllocator32::TransferBatch
Clear	lib/sanitizer_common/sanitizer_lfstack.h	/^  void Clear() {$/;"	f	struct:__sanitizer::LFStack
Clear	lib/sanitizer_common/sanitizer_symbolizer.cc	/^void AddressInfo::Clear() {$/;"	f	class:__sanitizer::AddressInfo
Clear	lib/sanitizer_common/sanitizer_symbolizer.cc	/^void DataInfo::Clear() {$/;"	f	class:__sanitizer::DataInfo
ClearAll	lib/sanitizer_common/sanitizer_symbolizer.cc	/^void SymbolizedStack::ClearAll() {$/;"	f	class:__sanitizer::SymbolizedStack
ClearExtraCounters	lib/fuzzer/FuzzerExtraCounters.cpp	/^void ClearExtraCounters() {  \/\/ hand-written memset, don't asan-ify.$/;"	f	namespace:fuzzer
ClearHistorySize	lib/tsan/rtl/tsan_rtl.h	/^  void ClearHistorySize() {$/;"	f	class:__tsan::FastState
ClearIgnoreBit	lib/tsan/rtl/tsan_rtl.h	/^  void ClearIgnoreBit() { x_ &= ~kIgnoreBit; }$/;"	f	class:__tsan::FastState
ClearInlineCounters	lib/fuzzer/FuzzerTracePC.cpp	/^void TracePC::ClearInlineCounters() {$/;"	f	class:fuzzer::TracePC
ClearShadowForThreadStackAndTLS	lib/asan/asan_thread.cc	/^void AsanThread::ClearShadowForThreadStackAndTLS() {$/;"	f	class:__asan::AsanThread
ClearShadowForThreadStackAndTLS	lib/hwasan/hwasan_thread.cc	/^void HwasanThread::ClearShadowForThreadStackAndTLS() {$/;"	f	class:__hwasan::HwasanThread
ClearShadowForThreadStackAndTLS	lib/msan/msan_thread.cc	/^void MsanThread::ClearShadowForThreadStackAndTLS() {$/;"	f	class:__msan::MsanThread
ClearShadowMemoryForContextStack	lib/asan/asan_interceptors.cc	/^static void ClearShadowMemoryForContextStack(uptr stack, uptr ssize) {$/;"	f	file:
ClientThread	test/tsan/fd_socket_connect_norace.cc	/^void *ClientThread(void *x) {$/;"	f
ClientThread	test/tsan/fd_socket_norace.cc	/^void *ClientThread(void *x) {$/;"	f
ClockBlock	lib/tsan/rtl/tsan_defs.h	/^  ClockBlock() {$/;"	f	struct:__tsan::ClockBlock
ClockBlock	lib/tsan/rtl/tsan_defs.h	/^struct ClockBlock {$/;"	s	namespace:__tsan
ClockElem	lib/tsan/rtl/tsan_defs.h	/^struct ClockElem {$/;"	s	namespace:__tsan
ClockFuzzer	lib/tsan/tests/unit/tsan_clock_test.cc	/^static bool ClockFuzzer(bool printing) {$/;"	f	namespace:__tsan
CloneArgsWithoutX	lib/fuzzer/FuzzerDriver.cpp	/^std::string CloneArgsWithoutX(const Vector<std::string> &Args,$/;"	f	namespace:fuzzer
CloneArgsWithoutX	lib/fuzzer/FuzzerUtil.h	/^inline std::string CloneArgsWithoutX(const Vector<std::string> &Args,$/;"	f	namespace:fuzzer
CloseExpression	lib/sanitizer_common/scripts/cpplint.py	/^def CloseExpression(clean_lines, linenum, pos):$/;"	f
CloseFile	lib/fuzzer/FuzzerIOPosix.cpp	/^int CloseFile(int fd) {$/;"	f	namespace:fuzzer
CloseFile	lib/fuzzer/FuzzerIOWindows.cpp	/^int CloseFile(int Fd) {$/;"	f	namespace:fuzzer
CloseFile	lib/sanitizer_common/sanitizer_posix.cc	/^void CloseFile(fd_t fd) {$/;"	f	namespace:__sanitizer
CloseFile	lib/sanitizer_common/sanitizer_rtems.cc	/^void CloseFile(fd_t fd) {$/;"	f	namespace:__sanitizer
CloseFile	lib/sanitizer_common/sanitizer_win.cc	/^void CloseFile(fd_t fd) {$/;"	f	namespace:__sanitizer
CloseOpenedRange	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^    void CloseOpenedRange() {$/;"	f	class:SizeClassAllocator64::FreePagesRangeTracker
CloseStdout	lib/fuzzer/FuzzerIO.cpp	/^void CloseStdout() {$/;"	f	namespace:fuzzer
Closer	test/tsan/dlclose.cc	/^struct Closer {$/;"	s	file:
CmpDictionaryEntriesDeque	lib/fuzzer/FuzzerMutate.h	/^  DictionaryEntry CmpDictionaryEntriesDeque[kCmpDictionaryEntriesDequeSize];$/;"	m	class:fuzzer::MutationDispatcher
CmpDictionaryEntriesDequeIdx	lib/fuzzer/FuzzerMutate.h	/^  size_t CmpDictionaryEntriesDequeIdx = 0;$/;"	m	class:fuzzer::MutationDispatcher
CmpLibcVersion	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^bool CmpLibcVersion(int major, int minor, int patch) {$/;"	f	namespace:__sanitizer::__anon98
CoPrimes	lib/scudo/scudo_tsd_shared.cpp	/^static u32 CoPrimes[SCUDO_SHARED_TSD_POOL_SIZE];$/;"	m	namespace:__scudo	file:
CollectFeatures	lib/fuzzer/FuzzerTracePC.h	/^void TracePC::CollectFeatures(Callback HandleFeature) const {$/;"	f	class:fuzzer::TracePC
CollectGarbage	test/tsan/signal_recursive.cc	/^static void CollectGarbage(pthread_t thread) {$/;"	f	file:
CollectIgnoredCb	lib/lsan/lsan_common.cc	/^static void CollectIgnoredCb(uptr chunk, void *arg) {$/;"	f	namespace:__lsan
CollectLeaksCb	lib/lsan/lsan_common.cc	/^static void CollectLeaksCb(uptr chunk, void *arg) {$/;"	f	namespace:__lsan
CollectMatchedBenignRaces	lib/tsan/rtl/tsan_interface_ann.cc	/^static void CollectMatchedBenignRaces(Vector<ExpectRace> *matched,$/;"	f	namespace:__tsan
ColorizeReports	lib/sanitizer_common/sanitizer_symbolizer_report.cc	/^bool ColorizeReports() {$/;"	f	namespace:__sanitizer
Column	lib/ubsan/ubsan_value.h	/^  u32 Column;$/;"	m	class:__ubsan::SourceLocation
CombinedAllocator	lib/sanitizer_common/sanitizer_allocator_combined.h	/^class CombinedAllocator {$/;"	c
CombinedAllocator	lib/scudo/scudo_allocator_combined.h	/^class CombinedAllocator {$/;"	c
CombinedOutAndErr	lib/fuzzer/FuzzerCommand.h	/^  bool CombinedOutAndErr;$/;"	m	class:fuzzer::final
Command	lib/fuzzer/FuzzerCommand.h	/^  Command() : CombinedOutAndErr(false) {}$/;"	f	class:fuzzer::final
Command	lib/fuzzer/FuzzerCommand.h	/^  explicit Command(const Command &Other)$/;"	f	class:fuzzer::final
Command	lib/fuzzer/FuzzerCommand.h	/^  explicit Command(const Vector<std::string> &ArgsToAdd)$/;"	f	class:fuzzer::final
CommitBack	lib/asan/asan_allocator.cc	/^  void CommitBack(AsanThreadLocalMallocStorage *ms, BufferedStackTrace *stack) {$/;"	f	struct:__asan::Allocator
CommitBack	lib/asan/asan_allocator.cc	/^void AsanThreadLocalMallocStorage::CommitBack() {$/;"	f	class:__asan::AsanThreadLocalMallocStorage
CommitBack	lib/hwasan/hwasan_allocator.cc	/^void HwasanThreadLocalMallocStorage::CommitBack() {$/;"	f	class:__hwasan::HwasanThreadLocalMallocStorage
CommitBack	lib/msan/msan_allocator.cc	/^void MsanThreadLocalMallocStorage::CommitBack() {$/;"	f	class:__msan::MsanThreadLocalMallocStorage
CommittedSize	lib/scudo/scudo_allocator_secondary.h	/^    uptr CommittedSize;$/;"	m	struct:LargeChunk::Header
CommonFlags	lib/sanitizer_common/sanitizer_flags.h	/^struct CommonFlags {$/;"	s	namespace:__sanitizer
CommonInit	lib/ubsan/ubsan_init.cc	/^static void CommonInit() {$/;"	f	file:
CommonSanitizerReportMutex	lib/sanitizer_common/sanitizer_symbolizer_report.cc	/^static StaticSpinMutex CommonSanitizerReportMutex;$/;"	m	namespace:__sanitizer	file:
CommonStandaloneInit	lib/ubsan/ubsan_init.cc	/^static void CommonStandaloneInit() {$/;"	f	file:
CompactPtrT	lib/sanitizer_common/sanitizer_allocator_local_cache.h	/^  typedef typename Allocator::CompactPtrT CompactPtrT;$/;"	t	struct:SizeClassAllocator64LocalCache
CompactPtrT	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  typedef u32 CompactPtrT;$/;"	t	class:SizeClassAllocator64
CompactPtrToPointer	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  uptr CompactPtrToPointer(uptr base, CompactPtrT ptr32) const {$/;"	f	class:SizeClassAllocator64
CompactSizeClassMap	lib/sanitizer_common/sanitizer_allocator_size_class_map.h	/^typedef SizeClassMap<3, 4, 8, 17, 64, 14> CompactSizeClassMap;$/;"	t
CompareBaseAddress	lib/sanitizer_common/sanitizer_mac.cc	/^static inline bool CompareBaseAddress(const LoadedModule &a,$/;"	f	namespace:__sanitizer
CompareLess	lib/sanitizer_common/sanitizer_common.h	/^struct CompareLess {$/;"	s	namespace:__sanitizer
CompareModulesBase	lib/sanitizer_common/sanitizer_win.cc	/^int CompareModulesBase(const void *pl, const void *pr) {$/;"	f	namespace:__sanitizer::__anon76
CompleteObjectLocator	lib/ubsan/ubsan_type_hash_win.cc	/^struct CompleteObjectLocator {$/;"	s	file:
CompleteObjectLocatorAbs	lib/ubsan/ubsan_type_hash_win.cc	/^struct CompleteObjectLocatorAbs {$/;"	s	file:
ComputeRZLog	lib/asan/asan_allocator.cc	/^  uptr ComputeRZLog(uptr user_requested_size) {$/;"	f	struct:__asan::Allocator
ComputeRegionBeg	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^  uptr ComputeRegionBeg(uptr mem) {$/;"	f	class:SizeClassAllocator32
ComputeRegionId	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^  uptr ComputeRegionId(uptr mem) {$/;"	f	class:SizeClassAllocator32
ComputeSHA1	lib/fuzzer/FuzzerSHA1.cpp	/^void ComputeSHA1(const uint8_t *Data, size_t Len, uint8_t *Out) {$/;"	f	namespace:fuzzer
ComputeUserAlignment	lib/asan/asan_allocator.cc	/^  static uptr ComputeUserAlignment(uptr user_requested_alignment_log) {$/;"	f	struct:__asan::Allocator
ComputeUserRequestedAlignmentLog	lib/asan/asan_allocator.cc	/^  static uptr ComputeUserRequestedAlignmentLog(uptr user_requested_alignment) {$/;"	f	struct:__asan::Allocator
CondContext	lib/tsan/tests/rtl/tsan_posix.cc	/^struct CondContext {$/;"	s	file:
CondMutexUnlockCtx	lib/tsan/rtl/tsan_interceptors.cc	/^struct CondMutexUnlockCtx {$/;"	s	file:
ConfiguredBufferSize	lib/xray/xray_buffer_queue.h	/^  size_t ConfiguredBufferSize() const { return BufferSize; }$/;"	f	class:__xray::BufferQueue
ConfirmPointerHasSurvived	test/lsan/TestCases/stale_stack_leak.cc	/^void ConfirmPointerHasSurvived() {$/;"	f
ConstGlob	lib/asan/tests/asan_test.cc	/^const char ConstGlob[7] = {1, 2, 3, 4, 5, 6, 7};$/;"	v
ConstIterator	lib/sanitizer_common/sanitizer_list.h	/^  typedef IteratorBase<const Item> ConstIterator;$/;"	t	struct:__sanitizer::IntrusiveList
ContainsSameAccess	lib/tsan/rtl/tsan_rtl.cc	/^bool ContainsSameAccess(u64 *s, u64 a, u64 sync_epoch, bool is_write) {$/;"	f	namespace:__tsan
ContainsSameAccessFast	lib/tsan/rtl/tsan_rtl.cc	/^bool ContainsSameAccessFast(u64 *s, u64 a, u64 sync_epoch, bool is_write) {$/;"	f	namespace:__tsan
ContainsSameAccessSlow	lib/tsan/rtl/tsan_rtl.cc	/^bool ContainsSameAccessSlow(u64 *s, u64 a, u64 sync_epoch, bool is_write) {$/;"	f	namespace:__tsan
ContainsThread	lib/sanitizer_common/sanitizer_stoptheworld_mac.cc	/^bool SuspendedThreadsListMac::ContainsThread(thread_t thread) const {$/;"	f	class:__sanitizer::SuspendedThreadsListMac
ContainsTid	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^bool SuspendedThreadsListLinux::ContainsTid(tid_t thread_id) const {$/;"	f	class:__sanitizer::SuspendedThreadsListLinux
ContainsWord	lib/fuzzer/FuzzerDictionary.h	/^  bool ContainsWord(const Word &W) const {$/;"	f	class:fuzzer::Dictionary
Contention	lib/tsan/rtl/tsan_mutex.cc	/^  u64 Contention() const {$/;"	f	class:__tsan::Backoff
Context	lib/esan/cache_frag.cpp	/^struct Context {$/;"	s	namespace:__esan	file:
Context	lib/tsan/dd/dd_rtl.h	/^struct Context {$/;"	s	namespace:__dsan
Context	lib/tsan/rtl/tsan_rtl.cc	/^Context::Context()$/;"	f	class:__tsan::Context
Context	lib/tsan/rtl/tsan_rtl.h	/^struct Context {$/;"	s	namespace:__tsan
ConvertTypeToFlagName	lib/ubsan/ubsan_diag.cc	/^static const char *ConvertTypeToFlagName(ErrorType Type) {$/;"	f	file:
ConvertTypeToString	lib/ubsan/ubsan_diag.cc	/^static const char *ConvertTypeToString(ErrorType Type) {$/;"	f	file:
Cookie	lib/scudo/scudo_allocator.cpp	/^static u32 Cookie;$/;"	m	namespace:__scudo	file:
CopyFdToFd	test/sanitizer_common/TestCases/Linux/decorate_proc_maps.cc	/^bool CopyFdToFd(int in_fd, int out_fd) {$/;"	f
CopyFileToErr	lib/fuzzer/FuzzerIO.cpp	/^void CopyFileToErr(const std::string &Path) {$/;"	f	namespace:fuzzer
CopyFrom	lib/sanitizer_common/sanitizer_flags.cc	/^void CommonFlags::CopyFrom(const CommonFlags &other) {$/;"	f	class:__sanitizer::CommonFlags
CopyInstructions	lib/interception/interception_win.cc	/^static bool CopyInstructions(uptr to, uptr from, size_t size) {$/;"	f	namespace:__interception
CopyMemory	lib/msan/msan_poisoning.cc	/^void CopyMemory(void *dst, const void *src, uptr size, StackTrace *stack) {$/;"	f	namespace:__msan
CopyOrigin	lib/msan/msan_poisoning.cc	/^void CopyOrigin(const void *dst, const void *src, uptr size,$/;"	f	namespace:__msan
CopyPartOf	lib/fuzzer/FuzzerMutate.cpp	/^size_t MutationDispatcher::CopyPartOf(const uint8_t *From, size_t FromSize,$/;"	f	class:fuzzer::MutationDispatcher
CopyShadowAndOrigin	lib/msan/msan_poisoning.cc	/^void CopyShadowAndOrigin(const void *dst, const void *src, uptr size,$/;"	f	namespace:__msan
CopyTo	lib/asan/asan_allocator.cc	/^void AllocatorOptions::CopyTo(Flags *f, CommonFlags *cf) {$/;"	f	class:__asan::AllocatorOptions
CopyToArray	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^    void CopyToArray(void *to_batch[]) const {$/;"	f	struct:SizeClassAllocator32::TransferBatch
CopyTrace	lib/tsan/rtl/tsan_debugging.cc	/^static void CopyTrace(SymbolizedStack *first_frame, void **trace,$/;"	f	file:
Corpus	lib/fuzzer/FuzzerInternal.h	/^  InputCorpus &Corpus;$/;"	m	class:fuzzer::Fuzzer
Corpus	lib/fuzzer/FuzzerMutate.h	/^  const InputCorpus *Corpus = nullptr;$/;"	m	class:fuzzer::MutationDispatcher
CorpusDistribution	lib/fuzzer/FuzzerCorpus.h	/^  std::piecewise_constant_distribution<double> CorpusDistribution;$/;"	m	class:fuzzer::InputCorpus
Count	lib/esan/cache_frag.cpp	/^  u64 Count; \/\/ The total access count of the struct.$/;"	m	struct:__esan::StructCounter	file:
Count	lib/esan/esan_circular_buffer.h	/^  uptr Count;$/;"	m	class:__esan::CircularBuffer
Count	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^    uptr Count() const { return count_; }$/;"	f	struct:SizeClassAllocator32::TransferBatch
Count	lib/sanitizer_common/scripts/cpplint.py	/^  def Count(self):$/;"	m	class:_FunctionState
CountFromData	lib/stats/stats.h	/^inline uptr CountFromData(uptr data) {$/;"	f	namespace:__sanitizer
Counter	lib/fuzzer/FuzzerTracePC.h	/^    uint8_t Counter;$/;"	m	struct:fuzzer::TracePC::UnstableEdge
Counter	test/fuzzer/NthRunCrashTest.cpp	/^static int Counter;$/;"	v	file:
CounterToFeature	lib/fuzzer/FuzzerTracePC.h	/^unsigned CounterToFeature(T Counter) {$/;"	f	namespace:fuzzer
Counters	lib/fuzzer/FuzzerTracePC.cpp	/^uint8_t *TracePC::Counters() const {$/;"	f	class:fuzzer::TracePC
Counters	test/fuzzer/TableLookupTest.cpp	/^static uint8_t Counters[N];$/;"	v	file:
CountersFirst	lib/profile/InstrProfilingPlatformOther.c	/^static uint64_t *CountersFirst = NULL;$/;"	v	file:
CountersLast	lib/profile/InstrProfilingPlatformOther.c	/^static uint64_t *CountersLast = NULL;$/;"	v	file:
CplusV3Demangle	lib/sanitizer_common/sanitizer_symbolizer_libbacktrace.cc	/^char *CplusV3Demangle(const char *name) {$/;"	f	namespace:__sanitizer::__anon99
CplusV3DemangleCallback	lib/sanitizer_common/sanitizer_symbolizer_libbacktrace.cc	/^static void CplusV3DemangleCallback(const char *s, size_t l, void *vdata) {$/;"	f	file:
CplusV3DemangleData	lib/sanitizer_common/sanitizer_symbolizer_libbacktrace.cc	/^struct CplusV3DemangleData {$/;"	s	namespace:__sanitizer::__anon99	file:
CrashCallback	lib/fuzzer/FuzzerLoop.cpp	/^void Fuzzer::CrashCallback() {$/;"	f	class:fuzzer::Fuzzer
CrashHandler	lib/fuzzer/FuzzerUtilFuchsia.cpp	/^void CrashHandler(zx_handle_t *Event) {$/;"	f	namespace:fuzzer::__anon35
CrashHandler	lib/fuzzer/FuzzerUtilPosix.cpp	/^static void CrashHandler(int, siginfo_t *, void *) {$/;"	f	namespace:fuzzer
CrashHandler	lib/fuzzer/FuzzerUtilWindows.cpp	/^static void CrashHandler(int) { Fuzzer::StaticCrashSignalCallback(); }$/;"	f	namespace:fuzzer
CrashOnOverwrittenData	lib/fuzzer/FuzzerLoop.cpp	/^void Fuzzer::CrashOnOverwrittenData() {$/;"	f	class:fuzzer::Fuzzer
CrashOnProcessDetach	test/asan/TestCases/Windows/dll_control_c.cc	/^static void __declspec(noinline) CrashOnProcessDetach() {$/;"	f
CrashResistantMerge	lib/fuzzer/FuzzerMerge.cpp	/^void Fuzzer::CrashResistantMerge(const Vector<std::string> &Args,$/;"	f	class:fuzzer::Fuzzer
CrashResistantMergeInternalStep	lib/fuzzer/FuzzerMerge.cpp	/^void Fuzzer::CrashResistantMergeInternalStep(const std::string &CFPath) {$/;"	f	class:fuzzer::Fuzzer
Create	lib/asan/asan_fake_stack.cc	/^FakeStack *FakeStack::Create(uptr stack_size_log) {$/;"	f	class:__asan::FakeStack
Create	lib/asan/asan_thread.cc	/^AsanThread *AsanThread::Create(thread_callback_t start_routine, void *arg,$/;"	f	class:__asan::AsanThread
Create	lib/fuzzer/FuzzerShmemFuchsia.cpp	/^bool SharedMemoryRegion::Create(const char *Name) {$/;"	f	class:fuzzer::SharedMemoryRegion
Create	lib/fuzzer/FuzzerShmemPosix.cpp	/^bool SharedMemoryRegion::Create(const char *Name) {$/;"	f	class:fuzzer::SharedMemoryRegion
Create	lib/fuzzer/FuzzerShmemWindows.cpp	/^bool SharedMemoryRegion::Create(const char *Name) {$/;"	f	class:fuzzer::SharedMemoryRegion
Create	lib/hwasan/hwasan_thread.cc	/^HwasanThread *HwasanThread::Create(thread_callback_t start_routine,$/;"	f	class:__hwasan::HwasanThread
Create	lib/msan/msan_thread.cc	/^MsanThread *MsanThread::Create(thread_callback_t start_routine,$/;"	f	class:__msan::MsanThread
Create	lib/msan/tests/msan_test.cc	/^   bool Create(void) {$/;"	f	class:TempFstabFile
Create	lib/msan/tests/msan_test.cc	/^std::unique_ptr<SocketAddr> SocketAddr::Create(int family, Args... args) {$/;"	f	class:SocketAddr
Create	lib/sanitizer_common/sanitizer_deadlock_detector1.cc	/^DDetector *DDetector::Create(const DDFlags *flags) {$/;"	f	class:__sanitizer::DDetector
Create	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^DDetector *DDetector::Create(const DDFlags *flags) {$/;"	f	class:__sanitizer::DDetector
Create	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^void ScopedThread::Create(const Mutex &m) {$/;"	f	class:ScopedThread
Create	test/tsan/mutex_annotations.cc	/^  void Create(bool linker_initialized = false) {$/;"	f	class:Mutex
CreateAndDestroyLocksLoop	test/tsan/deadlock_detector_stress_test.cc	/^  void CreateAndDestroyLocksLoop() {$/;"	f	class:LockTest	file:
CreateAndDestroyManyLocks	test/tsan/deadlock_detector_stress_test.cc	/^  void CreateAndDestroyManyLocks() {$/;"	f	class:LockTest	file:
CreateAsanThread	lib/asan/asan_fuchsia.cc	/^static AsanThread *CreateAsanThread(StackTrace *stack, u32 parent_tid,$/;"	f	namespace:__asan
CreateAsanThread	lib/asan/asan_rtems.cc	/^static AsanThread *CreateAsanThread(StackTrace *stack, u32 parent_tid,$/;"	f	namespace:__asan
CreateBatch	lib/sanitizer_common/sanitizer_allocator_local_cache.h	/^  TransferBatch *CreateBatch(uptr class_id, SizeClassAllocator *allocator,$/;"	f	struct:SizeClassAllocator32LocalCache
CreateCache	test/tsan/static_init3.cc	/^Cache *CreateCache() {$/;"	f
CreateCache	test/tsan/static_init4.cc	/^Cache *CreateCache() {$/;"	f
CreateCache	test/tsan/static_init5.cc	/^Cache *CreateCache() {$/;"	f
CreateCache	test/tsan/static_init6.cc	/^Cache *CreateCache() {$/;"	f
CreateChainedOrigin	lib/msan/msan_origin.h	/^  static Origin CreateChainedOrigin(Origin prev, StackTrace *stack) {$/;"	f	class:__msan::Origin
CreateHeapOrigin	lib/msan/msan_origin.h	/^  static Origin CreateHeapOrigin(StackTrace *stack) {$/;"	f	class:__msan::Origin
CreateLockUnlockAndDestroyManyLocks	test/tsan/deadlock_detector_stress_test.cc	/^  void CreateLockUnlockAndDestroyManyLocks() {$/;"	f	class:LockTest	file:
CreateLogicalThread	lib/sanitizer_common/sanitizer_deadlock_detector1.cc	/^DDLogicalThread* DD::CreateLogicalThread(u64 ctx) {$/;"	f	class:__sanitizer::DD
CreateLogicalThread	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^DDLogicalThread* DD::CreateLogicalThread(u64 ctx) {$/;"	f	class:__sanitizer::DD
CreateLogicalThread	lib/sanitizer_common/sanitizer_deadlock_detector_interface.h	/^  virtual DDLogicalThread* CreateLogicalThread(u64 ctx) { return nullptr; }$/;"	f	struct:__sanitizer::DDetector
CreateMainThread	lib/asan/asan_fuchsia.cc	/^AsanThread *CreateMainThread() {$/;"	f	namespace:__asan
CreateMainThread	lib/asan/asan_rtems.cc	/^AsanThread *CreateMainThread() {$/;"	f	namespace:__asan
CreateMainThread	lib/asan/asan_thread.cc	/^AsanThread *CreateMainThread() {$/;"	f	namespace:__asan
CreatePhysicalThread	lib/sanitizer_common/sanitizer_deadlock_detector1.cc	/^DDPhysicalThread* DD::CreatePhysicalThread() {$/;"	f	class:__sanitizer::DD
CreatePhysicalThread	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^DDPhysicalThread* DD::CreatePhysicalThread() {$/;"	f	class:__sanitizer::DD
CreatePhysicalThread	lib/sanitizer_common/sanitizer_deadlock_detector_interface.h	/^  virtual DDPhysicalThread* CreatePhysicalThread() { return nullptr; }$/;"	f	struct:__sanitizer::DDetector
CreateSockAddr	lib/msan/tests/msan_test.cc	/^  std::unique_ptr<SocketAddr> CreateSockAddr(Args... args) const {$/;"	f	class:MemorySanitizerIpTest
CreateSocket	lib/msan/tests/msan_test.cc	/^  int CreateSocket(int socket_type) const {$/;"	f	class:MemorySanitizerIpTest
CreateStackOrigin	lib/msan/msan_origin.h	/^  static Origin CreateStackOrigin(u32 id) {$/;"	f	class:__msan::Origin
CreateThread	lib/sanitizer_common/sanitizer_thread_registry.cc	/^u32 ThreadRegistry::CreateThread(uptr user_id, bool detached, u32 parent_tid,$/;"	f	class:__sanitizer::ThreadRegistry
CreateThreadContext	lib/lsan/lsan_thread.cc	/^static ThreadContextBase *CreateThreadContext(u32 tid) {$/;"	f	namespace:__lsan
CreateThreadContext	lib/tsan/rtl/tsan_rtl.cc	/^static ThreadContextBase *CreateThreadContext(u32 tid) {$/;"	f	namespace:__tsan
CreateThreadContextArgs	lib/asan/asan_thread.h	/^  struct CreateThreadContextArgs {$/;"	s	class:__asan::AsanThreadContext
CreateTwoHighNumberedPipes	lib/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc	/^static bool CreateTwoHighNumberedPipes(int *infd_, int *outfd_) {$/;"	f	namespace:__sanitizer
CrossOver	lib/fuzzer/FuzzerCrossOver.cpp	/^size_t MutationDispatcher::CrossOver(const uint8_t *Data1, size_t Size1,$/;"	f	class:fuzzer::MutationDispatcher
CtrlHandler	lib/fuzzer/FuzzerUtilWindows.cpp	/^BOOL WINAPI CtrlHandler(DWORD dwCtrlType) {$/;"	f	namespace:fuzzer
Ctx	lib/esan/cache_frag.cpp	/^static Context *Ctx;$/;"	m	namespace:__esan	file:
Ctx	test/tsan/cond_race.cc	/^struct Ctx {$/;"	s	file:
CumulativeLocalTime	lib/xray/tests/unit/profile_collector_test.cc	/^  int64_t CumulativeLocalTime;$/;"	m	struct:__xray::__anon22::Profile	file:
CumulativeLocalTime	lib/xray/xray_function_call_trie.h	/^    int64_t CumulativeLocalTime; \/\/ Typically in TSC deltas, not wall-time.$/;"	m	struct:__xray::FunctionCallTrie::Node
CurOffset	lib/profile/InstrProfilingInternal.h	/^  uint32_t CurOffset;$/;"	m	struct:ProfBufferIO
CurWorkingSetBitIdx	lib/esan/working_set.cpp	/^static const u32 CurWorkingSetBitIdx = 0;$/;"	m	namespace:__esan	file:
CurrentDictionaryEntrySequence	lib/fuzzer/FuzzerMutate.h	/^  Vector<DictionaryEntry *> CurrentDictionaryEntrySequence;$/;"	m	class:fuzzer::MutationDispatcher
CurrentError	lib/asan/asan_report.cc	/^  static ErrorDescription &CurrentError() {$/;"	f	class:__asan::ScopedInErrorReport
CurrentFunc	lib/fuzzer/dataflow/DataFlow.cpp	/^static __thread size_t CurrentFunc;$/;"	v	file:
CurrentIndex	lib/scudo/scudo_tsd_shared.cpp	/^static atomic_uint32_t CurrentIndex;$/;"	m	namespace:__scudo	file:
CurrentMode	lib/xray/xray_log_interface.cc	/^static const ModeImpl *CurrentMode = nullptr;$/;"	m	namespace:__xray	file:
CurrentMutatorSequence	lib/fuzzer/FuzzerMutate.h	/^  Vector<Mutator *> CurrentMutatorSequence;$/;"	m	class:fuzzer::MutationDispatcher
CurrentStackId	lib/tsan/rtl/tsan_rtl.cc	/^u32 CurrentStackId(ThreadState *thr, uptr pc) {$/;"	f	namespace:__tsan
CurrentStackTrace	lib/tsan/dd/dd_rtl.cc	/^static u32 CurrentStackTrace(Thread *thr, uptr skip) {$/;"	f	namespace:__dsan
CurrentTSD	lib/scudo/scudo_tsd_shared.cpp	/^THREADLOCAL ScudoTSD *CurrentTSD;$/;"	m	namespace:__scudo	file:
CurrentThreadContext	lib/lsan/lsan_thread.cc	/^ThreadContext *CurrentThreadContext() {$/;"	f	namespace:__lsan
CurrentUBR	lib/ubsan/ubsan_monitor.cc	/^static UndefinedBehaviorReport *CurrentUBR;$/;"	v	file:
CurrentUnitData	lib/fuzzer/FuzzerInternal.h	/^  uint8_t *CurrentUnitData = nullptr;$/;"	m	class:fuzzer::Fuzzer
CurrentUnitSize	lib/fuzzer/FuzzerInternal.h	/^  std::atomic<size_t> CurrentUnitSize;$/;"	m	class:fuzzer::Fuzzer
CurrentVNode	lib/profile/InstrProfilingPlatformDarwin.c	/^COMPILER_RT_VISIBILITY ValueProfNode *CurrentVNode = &VNodesStart;$/;"	v
CurrentVNode	lib/profile/InstrProfilingPlatformLinux.c	/^COMPILER_RT_VISIBILITY ValueProfNode *CurrentVNode = &PROF_VNODES_START;$/;"	v
CurrentVNode	lib/profile/InstrProfilingPlatformOther.c	/^COMPILER_RT_VISIBILITY ValueProfNode *CurrentVNode = 0;$/;"	v
CustomCrossOverInPlaceHere	lib/fuzzer/FuzzerMutate.h	/^  Vector<uint8_t> CustomCrossOverInPlaceHere;$/;"	m	class:fuzzer::MutationDispatcher
Cyan	lib/sanitizer_common/sanitizer_report_decorator.h	/^  const char *Cyan()    const { return ansi_ ? "\\033[1m\\033[36m" : ""; }$/;"	f	class:__sanitizer::SanitizerCommonDecorator
CycleCheck	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^void DD::CycleCheck(DDPhysicalThread *pt, DDLogicalThread *lt,$/;"	f	class:__sanitizer::DD
D	lib/builtins/hexagon/sfsqrt_opt.S	/^    D = HALF$/;"	d
D	lib/builtins/hexagon/sfsqrt_opt.S	/^#define D r2$/;"	d
D	lib/sanitizer_common/tests/sanitizer_format_interceptor_test.cc	/^static const unsigned D = sizeof(double);$/;"	v	file:
D	test/cfi/simple-pass.cpp	/^struct D {$/;"	s	namespace:__anon140	file:
D	test/esan/TestCases/struct-simple.cpp	/^struct D {$/;"	s	file:
D	test/fuzzer/LargeTest.cpp	26;"	d	file:
D	test/msan/dtor-vtable-multiple-inheritance.cc	/^class D {$/;"	c	file:
D	test/ubsan/TestCases/TypeCheck/vptr-virtual-base-construction.cpp	/^struct D: virtual B, virtual C {};$/;"	s	file:
D1	test/asan/TestCases/Linux/sized_delete_test.cc	/^struct D1 {$/;"	s	file:
D2	test/asan/TestCases/Linux/sized_delete_test.cc	/^struct D2 {$/;"	s	file:
D2	test/cfi/simple-pass.cpp	/^struct D2 : D {$/;"	s	namespace:__anon140	file:
DBGHELP_IMPORT	lib/sanitizer_common/sanitizer_symbolizer_win.cc	66;"	d	file:
DBGHELP_IMPORT	lib/sanitizer_common/sanitizer_symbolizer_win.cc	83;"	d	file:
DCHECK	lib/sanitizer_common/sanitizer_internal_defs.h	312;"	d
DCHECK	lib/sanitizer_common/sanitizer_internal_defs.h	320;"	d
DCHECK_EQ	lib/sanitizer_common/sanitizer_internal_defs.h	313;"	d
DCHECK_EQ	lib/sanitizer_common/sanitizer_internal_defs.h	321;"	d
DCHECK_GE	lib/sanitizer_common/sanitizer_internal_defs.h	318;"	d
DCHECK_GE	lib/sanitizer_common/sanitizer_internal_defs.h	326;"	d
DCHECK_GT	lib/sanitizer_common/sanitizer_internal_defs.h	317;"	d
DCHECK_GT	lib/sanitizer_common/sanitizer_internal_defs.h	325;"	d
DCHECK_LE	lib/sanitizer_common/sanitizer_internal_defs.h	316;"	d
DCHECK_LE	lib/sanitizer_common/sanitizer_internal_defs.h	324;"	d
DCHECK_LT	lib/sanitizer_common/sanitizer_internal_defs.h	315;"	d
DCHECK_LT	lib/sanitizer_common/sanitizer_internal_defs.h	323;"	d
DCHECK_NE	lib/sanitizer_common/sanitizer_internal_defs.h	314;"	d
DCHECK_NE	lib/sanitizer_common/sanitizer_internal_defs.h	322;"	d
DD	lib/builtins/ppc/DD.h	/^} DD;$/;"	t	typeref:union:__anon109
DD	lib/sanitizer_common/sanitizer_deadlock_detector1.cc	/^DD::DD(const DDFlags *flags)$/;"	f	class:__sanitizer::DD
DD	lib/sanitizer_common/sanitizer_deadlock_detector1.cc	/^struct DD : public DDetector {$/;"	s	namespace:__sanitizer	file:
DD	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^DD::DD(const DDFlags *flags) : flags(*flags) { free_id.reserve(1024); }$/;"	f	class:__sanitizer::DD
DD	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^struct DD : public DDetector {$/;"	s	namespace:__sanitizer	file:
DD	test/builtins/Unit/ppc/DD.h	/^} DD;$/;"	t	typeref:union:__anon153
DDBV	lib/sanitizer_common/sanitizer_deadlock_detector1.cc	/^typedef TwoLevelBitVector<> DDBV;  \/\/ DeadlockDetector's bit vector.$/;"	t	namespace:__sanitizer	file:
DDCallback	lib/sanitizer_common/sanitizer_deadlock_detector_interface.h	/^struct DDCallback {$/;"	s	namespace:__sanitizer
DDD	test/tsan/virtual_inheritance_compile_bug.cc	/^DDD::DDD()  { }$/;"	f	class:DDD
DDD	test/tsan/virtual_inheritance_compile_bug.cc	/^struct DDD: CCC, BBB { DDD(); };  \/\/ NOLINT$/;"	s	file:
DDFlags	lib/sanitizer_common/sanitizer_deadlock_detector_interface.h	/^struct DDFlags {$/;"	s	namespace:__sanitizer
DDLogicalThread	lib/sanitizer_common/sanitizer_deadlock_detector1.cc	/^struct DDLogicalThread {$/;"	s	namespace:__sanitizer	file:
DDLogicalThread	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^struct DDLogicalThread {$/;"	s	namespace:__sanitizer	file:
DDMutex	lib/sanitizer_common/sanitizer_deadlock_detector_interface.h	/^struct DDMutex {$/;"	s	namespace:__sanitizer
DDMutexInit	lib/tsan/rtl/tsan_rtl_mutex.cc	/^void DDMutexInit(ThreadState *thr, uptr pc, SyncVar *s) {$/;"	f	namespace:__tsan
DDPhysicalThread	lib/sanitizer_common/sanitizer_deadlock_detector1.cc	/^struct DDPhysicalThread {$/;"	s	namespace:__sanitizer	file:
DDPhysicalThread	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^struct DDPhysicalThread {$/;"	s	namespace:__sanitizer	file:
DDReport	lib/sanitizer_common/sanitizer_deadlock_detector_interface.h	/^struct DDReport {$/;"	s	namespace:__sanitizer
DD_RTL_H	lib/tsan/dd/dd_rtl.h	10;"	d
DDetector	lib/sanitizer_common/sanitizer_deadlock_detector_interface.h	/^struct DDetector {$/;"	s	namespace:__sanitizer
DE	lib/fuzzer/FuzzerDictionary.h	/^  DictionaryEntry DE[kMaxDictSize];$/;"	m	class:fuzzer::Dictionary
DEBUG	lib/asan/scripts/asan_symbolize.py	/^DEBUG = False$/;"	v
DECLARE_ASM_READ	lib/asan/tests/asan_asm_test.cc	49;"	d	file:
DECLARE_ASM_READ	lib/asan/tests/asan_asm_test.cc	92;"	d	file:
DECLARE_ASM_REP_MOVS	lib/asan/tests/asan_asm_test.cc	104;"	d	file:
DECLARE_ASM_REP_MOVS	lib/asan/tests/asan_asm_test.cc	61;"	d	file:
DECLARE_ASM_WRITE	lib/asan/tests/asan_asm_test.cc	39;"	d	file:
DECLARE_ASM_WRITE	lib/asan/tests/asan_asm_test.cc	82;"	d	file:
DECLARE_FUNC_ENCODING	lib/builtins/assembly.h	134;"	d
DECLARE_FUNC_ENCODING	lib/builtins/assembly.h	79;"	d
DECLARE_FUNC_ENCODING	lib/builtins/assembly.h	93;"	d
DECLARE_REAL	lib/interception/interception.h	164;"	d
DECLARE_REAL	lib/interception/interception.h	167;"	d
DECLARE_REAL	lib/interception/interception.h	174;"	d
DECLARE_REAL	lib/interception/interception.h	182;"	d
DECLARE_REAL_AND_INTERCEPTOR	lib/interception/interception.h	188;"	d
DECLARE_REAL_AND_INTERCEPTOR	lib/interception/interception.h	192;"	d
DECLARE_SYMBOL_VISIBILITY	lib/builtins/assembly.h	143;"	d
DECLARE_SYMBOL_VISIBILITY	lib/builtins/assembly.h	146;"	d
DECLARE_WEAK_INTERCEPTOR_HOOK	lib/dfsan/dfsan_custom.cc	51;"	d	file:
DECLARE_WRAPPER	lib/interception/interception.h	123;"	d
DECLARE_WRAPPER	lib/interception/interception.h	129;"	d
DECLARE_WRAPPER	lib/interception/interception.h	137;"	d
DECLARE_WRAPPER	lib/interception/interception.h	145;"	d
DECLARE_WRAPPER	lib/interception/interception.h	152;"	d
DECLARE_WRAPPER_WINAPI	lib/interception/interception.h	131;"	d
DECLARE__REAL	lib/sanitizer_common/sanitizer_solaris.cc	45;"	d	file:
DECLARE__REAL_AND_INTERNAL	lib/sanitizer_common/sanitizer_solaris.cc	/^DECLARE__REAL_AND_INTERNAL(int, fork, void) {$/;"	f	namespace:__sanitizer
DECLARE__REAL_AND_INTERNAL	lib/sanitizer_common/sanitizer_solaris.cc	/^DECLARE__REAL_AND_INTERNAL(int, mprotect, void *addr, uptr length, int prot) {$/;"	f	namespace:__sanitizer
DECLARE__REAL_AND_INTERNAL	lib/sanitizer_common/sanitizer_solaris.cc	/^DECLARE__REAL_AND_INTERNAL(uptr, close, fd_t fd) {$/;"	f	namespace:__sanitizer
DECLARE__REAL_AND_INTERNAL	lib/sanitizer_common/sanitizer_solaris.cc	/^DECLARE__REAL_AND_INTERNAL(uptr, dup2, int oldfd, int newfd) {$/;"	f	namespace:__sanitizer
DECLARE__REAL_AND_INTERNAL	lib/sanitizer_common/sanitizer_solaris.cc	/^DECLARE__REAL_AND_INTERNAL(uptr, execve, const char *filename,$/;"	f	namespace:__sanitizer
DECLARE__REAL_AND_INTERNAL	lib/sanitizer_common/sanitizer_solaris.cc	/^DECLARE__REAL_AND_INTERNAL(uptr, fstat, fd_t fd, void *buf) {$/;"	f	namespace:__sanitizer
DECLARE__REAL_AND_INTERNAL	lib/sanitizer_common/sanitizer_solaris.cc	/^DECLARE__REAL_AND_INTERNAL(uptr, ftruncate, fd_t fd, uptr size) {$/;"	f	namespace:__sanitizer
DECLARE__REAL_AND_INTERNAL	lib/sanitizer_common/sanitizer_solaris.cc	/^DECLARE__REAL_AND_INTERNAL(uptr, getdents, fd_t fd, struct linux_dirent *dirp,$/;"	f	namespace:__sanitizer
DECLARE__REAL_AND_INTERNAL	lib/sanitizer_common/sanitizer_solaris.cc	/^DECLARE__REAL_AND_INTERNAL(uptr, getpid, void) {$/;"	f	namespace:__sanitizer
DECLARE__REAL_AND_INTERNAL	lib/sanitizer_common/sanitizer_solaris.cc	/^DECLARE__REAL_AND_INTERNAL(uptr, lseek, fd_t fd, OFF_T offset, int whence) {$/;"	f	namespace:__sanitizer
DECLARE__REAL_AND_INTERNAL	lib/sanitizer_common/sanitizer_solaris.cc	/^DECLARE__REAL_AND_INTERNAL(uptr, lstat, const char *path, void *buf) {$/;"	f	namespace:__sanitizer
DECLARE__REAL_AND_INTERNAL	lib/sanitizer_common/sanitizer_solaris.cc	/^DECLARE__REAL_AND_INTERNAL(uptr, mmap, void *addr, uptr \/*size_t*\/ length,$/;"	f	namespace:__sanitizer
DECLARE__REAL_AND_INTERNAL	lib/sanitizer_common/sanitizer_solaris.cc	/^DECLARE__REAL_AND_INTERNAL(uptr, munmap, void *addr, uptr length) {$/;"	f	namespace:__sanitizer
DECLARE__REAL_AND_INTERNAL	lib/sanitizer_common/sanitizer_solaris.cc	/^DECLARE__REAL_AND_INTERNAL(uptr, read, fd_t fd, void *buf, uptr count) {$/;"	f	namespace:__sanitizer
DECLARE__REAL_AND_INTERNAL	lib/sanitizer_common/sanitizer_solaris.cc	/^DECLARE__REAL_AND_INTERNAL(uptr, readlink, const char *path, char *buf,$/;"	f	namespace:__sanitizer
DECLARE__REAL_AND_INTERNAL	lib/sanitizer_common/sanitizer_solaris.cc	/^DECLARE__REAL_AND_INTERNAL(uptr, rename, const char *oldpath,$/;"	f	namespace:__sanitizer
DECLARE__REAL_AND_INTERNAL	lib/sanitizer_common/sanitizer_solaris.cc	/^DECLARE__REAL_AND_INTERNAL(uptr, sched_yield, void) {$/;"	f	namespace:__sanitizer
DECLARE__REAL_AND_INTERNAL	lib/sanitizer_common/sanitizer_solaris.cc	/^DECLARE__REAL_AND_INTERNAL(uptr, sigprocmask, int how,$/;"	f	namespace:__sanitizer
DECLARE__REAL_AND_INTERNAL	lib/sanitizer_common/sanitizer_solaris.cc	/^DECLARE__REAL_AND_INTERNAL(uptr, stat, const char *path, void *buf) {$/;"	f	namespace:__sanitizer
DECLARE__REAL_AND_INTERNAL	lib/sanitizer_common/sanitizer_solaris.cc	/^DECLARE__REAL_AND_INTERNAL(uptr, unlink, const char *path) {$/;"	f	namespace:__sanitizer
DECLARE__REAL_AND_INTERNAL	lib/sanitizer_common/sanitizer_solaris.cc	/^DECLARE__REAL_AND_INTERNAL(uptr, waitpid, int pid, int *status, int options) {$/;"	f	namespace:__sanitizer
DECLARE__REAL_AND_INTERNAL	lib/sanitizer_common/sanitizer_solaris.cc	/^DECLARE__REAL_AND_INTERNAL(uptr, write, fd_t fd, const void *buf, uptr count) {$/;"	f	namespace:__sanitizer
DECLARE__REAL_AND_INTERNAL	lib/sanitizer_common/sanitizer_solaris.cc	/^DECLARE__REAL_AND_INTERNAL(void, _exit, int exitcode) {$/;"	f	namespace:__sanitizer
DECLARE__REAL_AND_INTERNAL	lib/sanitizer_common/sanitizer_solaris.cc	/^DECLARE__REAL_AND_INTERNAL(void, sigfillset, __sanitizer_sigset_t *set) {$/;"	f	namespace:__sanitizer
DECLARE__REAL_AND_INTERNAL	lib/sanitizer_common/sanitizer_solaris.cc	47;"	d	file:
DEF	test/profile/Inputs/extern_template.cpp	1;"	d	file:
DEF	test/profile/Inputs/extern_template.cpp	3;"	d	file:
DEFINE_AEABI_DCMP	lib/builtins/arm/aeabi_dcmp.S	/^#define DEFINE_AEABI_DCMP(cond)                            \\$/;"	d
DEFINE_AEABI_FCMP	lib/builtins/arm/aeabi_fcmp.S	/^#define DEFINE_AEABI_FCMP(cond)                            \\$/;"	d
DEFINE_AEABI_FUNCTION_ALIAS	lib/builtins/assembly.h	191;"	d
DEFINE_AEABI_FUNCTION_ALIAS	lib/builtins/assembly.h	194;"	d
DEFINE_CODE_STATE	lib/builtins/arm/udivsi3.S	/^DEFINE_CODE_STATE$/;"	l
DEFINE_CODE_STATE	lib/builtins/assembly.h	135;"	d
DEFINE_CODE_STATE	lib/builtins/assembly.h	78;"	d
DEFINE_CODE_STATE	lib/builtins/assembly.h	92;"	d
DEFINE_COMPILERRT_FUNCTION	lib/builtins/assembly.h	149;"	d
DEFINE_COMPILERRT_FUNCTION_ALIAS	lib/builtins/assembly.h	184;"	d
DEFINE_COMPILERRT_PRIVATE_FUNCTION	lib/builtins/assembly.h	167;"	d
DEFINE_COMPILERRT_PRIVATE_FUNCTION_UNMANGLED	lib/builtins/assembly.h	176;"	d
DEFINE_COMPILERRT_THUMB_FUNCTION	lib/builtins/assembly.h	158;"	d
DEFINE_REAL	lib/interception/interception.h	200;"	d
DEFINE_REAL	lib/interception/interception.h	206;"	d
DEFINE_REAL_PTHREAD_FUNCTIONS	lib/sanitizer_common/sanitizer_posix.h	71;"	d
DEFINE_STACK_MALLOC_FREE_WITH_CLASS_ID	lib/asan/asan_fake_stack.cc	223;"	d	file:
DEF_128_FUNCS	test/profile/Inputs/instrprof-value-prof-real.c	9;"	d	file:
DEF_128_FUNCS	test/profile/instrprof-value-prof.c	50;"	d	file:
DEF_16_FUNCS	test/profile/Inputs/instrprof-value-prof-real.c	6;"	d	file:
DEF_16_FUNCS	test/profile/instrprof-value-prof.c	47;"	d	file:
DEF_256_FUNCS	test/profile/Inputs/instrprof-value-prof-real.c	10;"	d	file:
DEF_2_FUNCS	test/profile/Inputs/instrprof-value-prof-real.c	3;"	d	file:
DEF_2_FUNCS	test/profile/instrprof-value-prof.c	44;"	d	file:
DEF_32_FUNCS	test/profile/Inputs/instrprof-value-prof-real.c	7;"	d	file:
DEF_32_FUNCS	test/profile/instrprof-value-prof.c	48;"	d	file:
DEF_4_FUNCS	test/profile/Inputs/instrprof-value-prof-real.c	4;"	d	file:
DEF_4_FUNCS	test/profile/instrprof-value-prof.c	45;"	d	file:
DEF_512_FUNCS	test/profile/Inputs/instrprof-value-prof-real.c	11;"	d	file:
DEF_64_FUNCS	test/profile/Inputs/instrprof-value-prof-real.c	8;"	d	file:
DEF_64_FUNCS	test/profile/instrprof-value-prof.c	49;"	d	file:
DEF_8_FUNCS	test/profile/Inputs/instrprof-value-prof-real.c	5;"	d	file:
DEF_8_FUNCS	test/profile/instrprof-value-prof.c	46;"	d	file:
DEF_FUNC	test/profile/Inputs/instrprof-value-prof-real.c	1;"	d	file:
DEF_FUNC	test/profile/instrprof-value-prof.c	42;"	d	file:
DENOM	lib/builtins/hexagon/dfdiv.S	/^#define DENOM r3:2$/;"	d
DENOMHI	lib/builtins/hexagon/dfdiv.S	/^		DENOMHI = insert(ONE,#DF_EXPBITS+1,#DF_MANTBITS-32)$/;"	d
DENOMHI	lib/builtins/hexagon/dfdiv.S	/^#define DENOMHI r3$/;"	d
DENOMLO	lib/builtins/hexagon/dfdiv.S	/^#define DENOMLO r2$/;"	d
DFCLASS_DENORMAL	lib/builtins/hexagon/dfsqrt.S	/^#define DFCLASS_DENORMAL 0x02$/;"	d
DFCLASS_INFINITE	lib/builtins/hexagon/dfdiv.S	/^#define DFCLASS_INFINITE 0x08$/;"	d
DFCLASS_INFINITE	lib/builtins/hexagon/dfsqrt.S	/^#define DFCLASS_INFINITE 0x08$/;"	d
DFCLASS_NAN	lib/builtins/hexagon/dfsqrt.S	/^#define DFCLASS_NAN      0x10$/;"	d
DFCLASS_NONINFINITE	lib/builtins/hexagon/dfdiv.S	/^#define DFCLASS_NONINFINITE (DFCLASS_NUMBER ^ DFCLASS_INFINITE)$/;"	d
DFCLASS_NONZERO	lib/builtins/hexagon/dfdiv.S	/^#define DFCLASS_NONZERO (DFCLASS_NUMBER ^ DFCLASS_ZERO)$/;"	d
DFCLASS_NORMAL	lib/builtins/hexagon/dfdiv.S	/^#define DFCLASS_NORMAL 0x02$/;"	d
DFCLASS_NORMAL	lib/builtins/hexagon/dfsqrt.S	/^#define DFCLASS_NORMAL   0x02$/;"	d
DFCLASS_NUMBER	lib/builtins/hexagon/dfdiv.S	/^#define DFCLASS_NUMBER 0x0F$/;"	d
DFCLASS_ZERO	lib/builtins/hexagon/dfdiv.S	/^#define DFCLASS_ZERO 0x01$/;"	d
DFCLASS_ZERO	lib/builtins/hexagon/dfsqrt.S	/^#define DFCLASS_ZERO     0x01$/;"	d
DFSAN_FLAG	lib/dfsan/dfsan.cc	366;"	d	file:
DFSAN_FLAG	lib/dfsan/dfsan.cc	368;"	d	file:
DFSAN_FLAG	lib/dfsan/dfsan.cc	372;"	d	file:
DFSAN_FLAG	lib/dfsan/dfsan.cc	375;"	d	file:
DFSAN_FLAG	lib/dfsan/dfsan.h	59;"	d
DFSAN_FLAG	lib/dfsan/dfsan.h	61;"	d
DFSAN_H	lib/dfsan/dfsan.h	16;"	d
DFSAN_INTERFACE_H	include/sanitizer/dfsan_interface.h	15;"	d
DFSAN_PLATFORM_H	lib/dfsan/dfsan_platform.h	16;"	d
DFT	lib/fuzzer/FuzzerInternal.h	/^  DataFlowTrace DFT;$/;"	m	class:fuzzer::Fuzzer
DF_BIAS	lib/builtins/hexagon/dfdiv.S	/^#define DF_BIAS 0x3ff$/;"	d
DF_BIAS	lib/builtins/hexagon/dfsqrt.S	/^#define DF_BIAS 0x3ff$/;"	d
DF_EXPBITS	lib/builtins/hexagon/dfdiv.S	/^#define DF_EXPBITS 11$/;"	d
DF_EXPBITS	lib/builtins/hexagon/dfsqrt.S	/^#define DF_EXPBITS 11$/;"	d
DF_MANTBITS	lib/builtins/hexagon/dfdiv.S	/^#define DF_MANTBITS 52$/;"	d
DF_MANTBITS	lib/builtins/hexagon/dfsqrt.S	/^#define DF_MANTBITS 52$/;"	d
DIR_SEPARATOR	lib/profile/InstrProfilingPort.h	90;"	d
DIR_SEPARATOR	lib/profile/InstrProfilingPort.h	93;"	d
DIR_SEPARATOR_2	lib/profile/InstrProfilingPort.h	91;"	d
DIR_TO_READ	lib/msan/tests/msan_test.cc	116;"	d	file:
DIR_TO_READ	lib/msan/tests/msan_test.cc	122;"	d	file:
DISPATCH_INTERCEPT_B	lib/tsan/rtl/tsan_libdispatch_mac.cc	169;"	d	file:
DISPATCH_INTERCEPT_F	lib/tsan/rtl/tsan_libdispatch_mac.cc	200;"	d	file:
DISPATCH_INTERCEPT_SYNC_B	lib/tsan/rtl/tsan_libdispatch_mac.cc	184;"	d	file:
DISPATCH_INTERCEPT_SYNC_F	lib/tsan/rtl/tsan_libdispatch_mac.cc	213;"	d	file:
DISPATCH_NOESCAPE	lib/tsan/rtl/tsan_libdispatch_mac.cc	30;"	d	file:
DIV_ITER1B	lib/builtins/hexagon/dfdiv.S	/^#define DIV_ITER1B(QSHIFTINSN,QSHIFT,REMSHIFT,EXTRA) \\$/;"	d
DL_Error	lib/ubsan/ubsan_diag.h	/^  DL_Error, \/\/\/< An error.$/;"	e	enum:__ubsan::DiagLevel
DL_INTERNAL_FUNCTION	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^  typedef void (*get_tls_func)(size_t*, size_t*) DL_INTERNAL_FUNCTION;$/;"	t	struct:__sanitizer::__anon98::GetTlsStaticInfoRegparmCall	file:
DL_INTERNAL_FUNCTION	lib/sanitizer_common/sanitizer_linux_libcdep.cc	196;"	d	file:
DL_INTERNAL_FUNCTION	lib/sanitizer_common/sanitizer_linux_libcdep.cc	198;"	d	file:
DL_Note	lib/ubsan/ubsan_diag.h	/^  DL_Note   \/\/\/< A note, attached to a prior diagnostic.$/;"	e	enum:__ubsan::DiagLevel
DOUBLE_PRECISION	lib/builtins/adddf3.c	15;"	d	file:
DOUBLE_PRECISION	lib/builtins/arm/aeabi_drsub.c	10;"	d	file:
DOUBLE_PRECISION	lib/builtins/comparedf2.c	40;"	d	file:
DOUBLE_PRECISION	lib/builtins/divdf3.c	19;"	d	file:
DOUBLE_PRECISION	lib/builtins/fixdfdi.c	11;"	d	file:
DOUBLE_PRECISION	lib/builtins/fixdfsi.c	11;"	d	file:
DOUBLE_PRECISION	lib/builtins/fixdfti.c	14;"	d	file:
DOUBLE_PRECISION	lib/builtins/fixunsdfdi.c	11;"	d	file:
DOUBLE_PRECISION	lib/builtins/fixunsdfsi.c	11;"	d	file:
DOUBLE_PRECISION	lib/builtins/fixunsdfti.c	14;"	d	file:
DOUBLE_PRECISION	lib/builtins/floatsidf.c	16;"	d	file:
DOUBLE_PRECISION	lib/builtins/floatunsidf.c	16;"	d	file:
DOUBLE_PRECISION	lib/builtins/muldf3.c	15;"	d	file:
DOUBLE_PRECISION	lib/builtins/negdf2.c	14;"	d	file:
DOUBLE_PRECISION	lib/builtins/subdf3.c	15;"	d	file:
DO_ASAN_MAPPING_PROFILE	lib/asan/asan_mapping.h	243;"	d
DO_THROW	test/asan/TestCases/uar_and_exceptions.cc	18;"	d	file:
DPrintf	lib/tsan/rtl/tsan_rtl.h	693;"	d
DPrintf	lib/tsan/rtl/tsan_rtl.h	695;"	d
DPrintf2	lib/tsan/rtl/tsan_rtl.h	699;"	d
DPrintf2	lib/tsan/rtl/tsan_rtl.h	701;"	d
DSO1	test/fuzzer/DSO1.cpp	/^int DSO1(int a) {$/;"	f
DSO2	test/fuzzer/DSO2.cpp	/^int DSO2(int a) {$/;"	f
DSOTestExtra	test/fuzzer/DSOTestExtra.cpp	/^int DSOTestExtra(int a) {$/;"	f
DST_DOUBLE	lib/builtins/extendsfdf2.c	12;"	d	file:
DST_DOUBLE	lib/builtins/trunctfdf2.c	15;"	d	file:
DST_HALF	lib/builtins/truncdfhf2.c	11;"	d	file:
DST_HALF	lib/builtins/truncsfhf2.c	11;"	d	file:
DST_QUAD	lib/builtins/extenddftf2.c	16;"	d	file:
DST_QUAD	lib/builtins/extendsftf2.c	16;"	d	file:
DST_REP_C	lib/builtins/fp_extend.h	56;"	d
DST_REP_C	lib/builtins/fp_extend.h	62;"	d
DST_REP_C	lib/builtins/fp_extend.h	68;"	d
DST_REP_C	lib/builtins/fp_trunc.h	44;"	d
DST_REP_C	lib/builtins/fp_trunc.h	50;"	d
DST_REP_C	lib/builtins/fp_trunc.h	56;"	d
DST_SINGLE	lib/builtins/extendhfsf2.c	12;"	d	file:
DST_SINGLE	lib/builtins/truncdfsf2.c	11;"	d	file:
DST_SINGLE	lib/builtins/trunctfsf2.c	15;"	d	file:
DTLS	lib/sanitizer_common/sanitizer_tls_get_addr.h	/^struct DTLS {$/;"	s	namespace:__sanitizer
DTLSInDestruction	lib/sanitizer_common/sanitizer_tls_get_addr.cc	/^bool DTLSInDestruction(DTLS *dtls) {$/;"	f	namespace:__sanitizer
DTLS_Deallocate	lib/sanitizer_common/sanitizer_tls_get_addr.cc	/^static inline void DTLS_Deallocate(DTLS::DTV *dtv, uptr size) {$/;"	f	namespace:__sanitizer
DTLS_Destroy	lib/sanitizer_common/sanitizer_tls_get_addr.cc	/^void DTLS_Destroy() {$/;"	f	namespace:__sanitizer
DTLS_Get	lib/sanitizer_common/sanitizer_tls_get_addr.cc	/^DTLS *DTLS_Get() { return &dtls; }$/;"	f	namespace:__sanitizer
DTLS_Resize	lib/sanitizer_common/sanitizer_tls_get_addr.cc	/^static inline void DTLS_Resize(uptr new_size) {$/;"	f	namespace:__sanitizer
DTLS_SIZE	test/asan/TestCases/Linux/stress_dtls.c	111;"	d	file:
DTLS_on_libc_memalign	lib/sanitizer_common/sanitizer_tls_get_addr.cc	/^void DTLS_on_libc_memalign(void *ptr, uptr size) {$/;"	f	namespace:__sanitizer
DTLS_on_tls_get_addr	lib/sanitizer_common/sanitizer_tls_get_addr.cc	/^DTLS::DTV *DTLS_on_tls_get_addr(void *arg_void, void *res,$/;"	f	namespace:__sanitizer
DTV	lib/sanitizer_common/sanitizer_tls_get_addr.h	/^  struct DTV {$/;"	s	struct:__sanitizer::DTLS
DUMPREG	lib/sanitizer_common/sanitizer_mac.cc	1025;"	d	file:
DUMPREG	lib/sanitizer_common/sanitizer_mac.cc	991;"	d	file:
DUMPREG32	lib/sanitizer_common/sanitizer_mac.cc	1021;"	d	file:
DUMPREG32	lib/sanitizer_common/sanitizer_mac.cc	984;"	d	file:
DUMPREG64	lib/sanitizer_common/sanitizer_mac.cc	1020;"	d	file:
DUMPREG64	lib/sanitizer_common/sanitizer_mac.cc	982;"	d	file:
DUMPREG_	lib/sanitizer_common/sanitizer_mac.cc	1022;"	d	file:
DUMPREG_	lib/sanitizer_common/sanitizer_mac.cc	986;"	d	file:
DUMPREG__	lib/sanitizer_common/sanitizer_mac.cc	1023;"	d	file:
DUMPREG__	lib/sanitizer_common/sanitizer_mac.cc	987;"	d	file:
DUMPREG___	lib/sanitizer_common/sanitizer_mac.cc	1024;"	d	file:
DUMPREG___	lib/sanitizer_common/sanitizer_mac.cc	988;"	d	file:
DWORD	lib/sanitizer_common/sanitizer_internal_defs.h	/^typedef unsigned long DWORD;  \/\/ NOLINT$/;"	t
DWORD_HI	lib/profile/WindowsMMap.c	181;"	d	file:
DWORD_HI	lib/profile/WindowsMMap.c	28;"	d	file:
DWORD_HI	lib/profile/WindowsMMap.c	31;"	d	file:
DWORD_LO	lib/profile/WindowsMMap.c	182;"	d	file:
DWORD_LO	lib/profile/WindowsMMap.c	29;"	d	file:
DWORD_LO	lib/profile/WindowsMMap.c	32;"	d	file:
DW_EH_PE_absptr	lib/builtins/gcc_personality_v0.c	34;"	d	file:
DW_EH_PE_aligned	lib/builtins/gcc_personality_v0.c	48;"	d	file:
DW_EH_PE_datarel	lib/builtins/gcc_personality_v0.c	46;"	d	file:
DW_EH_PE_funcrel	lib/builtins/gcc_personality_v0.c	47;"	d	file:
DW_EH_PE_indirect	lib/builtins/gcc_personality_v0.c	49;"	d	file:
DW_EH_PE_omit	lib/builtins/gcc_personality_v0.c	32;"	d	file:
DW_EH_PE_pcrel	lib/builtins/gcc_personality_v0.c	44;"	d	file:
DW_EH_PE_sdata2	lib/builtins/gcc_personality_v0.c	40;"	d	file:
DW_EH_PE_sdata4	lib/builtins/gcc_personality_v0.c	41;"	d	file:
DW_EH_PE_sdata8	lib/builtins/gcc_personality_v0.c	42;"	d	file:
DW_EH_PE_sleb128	lib/builtins/gcc_personality_v0.c	39;"	d	file:
DW_EH_PE_textrel	lib/builtins/gcc_personality_v0.c	45;"	d	file:
DW_EH_PE_udata2	lib/builtins/gcc_personality_v0.c	36;"	d	file:
DW_EH_PE_udata4	lib/builtins/gcc_personality_v0.c	37;"	d	file:
DW_EH_PE_udata8	lib/builtins/gcc_personality_v0.c	38;"	d	file:
DW_EH_PE_uleb128	lib/builtins/gcc_personality_v0.c	35;"	d	file:
D_Foo	test/msan/dtor-vtable-multiple-inheritance.cc	/^  virtual void D_Foo() {}$/;"	f	class:D
DarwinSymbolizer	lib/asan/scripts/asan_symbolize.py	/^class DarwinSymbolizer(Symbolizer):$/;"	c
Data	include/xray/xray_log_interface.h	/^  const void *Data;$/;"	m	struct:XRayBuffer
Data	lib/esan/esan_circular_buffer.h	/^  T *Data;$/;"	m	class:__esan::CircularBuffer
Data	lib/esan/esan_hashtable.h	/^    DataTy Data;$/;"	m	struct:__esan::HashTable::HashPair
Data	lib/fuzzer/FuzzerDictionary.h	/^  uint8_t Data[kMaxSize];$/;"	m	class:fuzzer::FixedWord
Data	lib/fuzzer/FuzzerShmem.h	/^  uint8_t *Data = nullptr;$/;"	m	class:fuzzer::SharedMemoryRegion
Data	lib/profile/InstrProfilingInternal.h	/^  const void *Data;$/;"	m	struct:ProfDataIOVec
Data	lib/profile/InstrProfilingValue.c	/^  const __llvm_profile_data *Data;$/;"	m	struct:ValueProfRuntimeRecord	file:
Data	lib/tsan/tests/rtl/tsan_mop.cc	/^  static int Data[4];$/;"	m	struct:ClassWithStatic	file:
Data	lib/tsan/tests/rtl/tsan_mop.cc	/^int ClassWithStatic::Data[4];$/;"	m	class:ClassWithStatic	file:
Data	lib/xray/xray_allocator.h	/^    void *Data;$/;"	m	struct:__xray::Allocator::Block
Data	lib/xray/xray_buffer_queue.h	/^    void *Data = nullptr;$/;"	m	struct:__xray::BufferQueue::Buffer
Data	lib/xray/xray_profile_collector.cc	/^  void *Data;$/;"	m	struct:__xray::profileCollectorService::__anon27::ProfileBuffer	file:
Data	lib/xray/xray_segmented_array.h	/^    char Data[1];$/;"	m	struct:__xray::Array::Segment
Data	test/esan/Unit/hashtable.cpp	/^  MyData *Data;$/;"	m	struct:MyDataPayload	file:
Data	test/tsan/atomic_store.cc	/^long long Data;$/;"	v
DataFirst	lib/profile/InstrProfilingPlatformOther.c	/^static const __llvm_profile_data *DataFirst = NULL;$/;"	v	file:
DataFlowTrace	lib/fuzzer/FuzzerDataFlowTrace.h	/^class DataFlowTrace {$/;"	c	namespace:fuzzer
DataFlowTrace	lib/fuzzer/FuzzerOptions.h	/^  std::string DataFlowTrace;$/;"	m	struct:fuzzer::FuzzingOptions
DataFlowTraceForFocusFunction	lib/fuzzer/FuzzerCorpus.h	/^  Vector<uint8_t> DataFlowTraceForFocusFunction;$/;"	m	struct:fuzzer::InputInfo
DataInfo	lib/sanitizer_common/sanitizer_symbolizer.cc	/^DataInfo::DataInfo() {$/;"	f	class:__sanitizer::DataInfo
DataInfo	lib/sanitizer_common/sanitizer_symbolizer.h	/^struct DataInfo {$/;"	s	namespace:__sanitizer
DataLast	lib/profile/InstrProfilingPlatformOther.c	/^static const __llvm_profile_data *DataLast = NULL;$/;"	v	file:
DataSize	lib/sanitizer_common/sanitizer_coverage_fuchsia.cc	/^  size_t DataSize() const { return next_index_ * sizeof(uintptr_t); }$/;"	f	class:__sancov::__anon63::final	file:
Dcomplex	lib/builtins/int_types.h	/^typedef double _Complex Dcomplex;$/;"	t
Dcomplex	lib/builtins/int_types.h	/^typedef struct { double real, imaginary; } Dcomplex;$/;"	t	typeref:struct:__anon125
DeadlockDetector	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^class DeadlockDetector {$/;"	c	namespace:__sanitizer
DeadlockDetectorTLS	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^class DeadlockDetectorTLS {$/;"	c	namespace:__sanitizer
DeallocNewThreadWorker	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^static void *DeallocNewThreadWorker(void *arg) {$/;"	f	file:
Deallocate	lib/asan/asan_allocator.cc	/^  void Deallocate(void *p) {$/;"	f	struct:__asan::QuarantineCallback
Deallocate	lib/asan/asan_allocator.cc	/^  void Deallocate(void *ptr, uptr delete_size, uptr delete_alignment,$/;"	f	struct:__asan::Allocator
Deallocate	lib/asan/asan_fake_stack.h	/^  static void Deallocate(uptr x, uptr class_id) {$/;"	f	class:__asan::FakeStack
Deallocate	lib/lsan/lsan_allocator.cc	/^void Deallocate(void *p) {$/;"	f	namespace:__lsan
Deallocate	lib/sanitizer_common/sanitizer_allocator_combined.h	/^  void Deallocate(AllocatorCache *cache, void *p) {$/;"	f	class:CombinedAllocator
Deallocate	lib/sanitizer_common/sanitizer_allocator_local_cache.h	/^  void Deallocate(SizeClassAllocator *allocator, uptr class_id, void *p) {$/;"	f	struct:SizeClassAllocator32LocalCache
Deallocate	lib/sanitizer_common/sanitizer_allocator_local_cache.h	/^  void Deallocate(SizeClassAllocator *allocator, uptr class_id, void *p) {$/;"	f	struct:SizeClassAllocator64LocalCache
Deallocate	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^  void Deallocate(AllocatorStats *stat, void *p) {$/;"	f	class:LargeMmapAllocator
Deallocate	lib/sanitizer_common/tests/sanitizer_quarantine_test.cc	/^  void Deallocate(void *p) {$/;"	f	struct:__sanitizer::QuarantineCallback
Deallocate	lib/scudo/scudo_allocator.cpp	/^  void Deallocate(void *Ptr) {$/;"	f	struct:__scudo::QuarantineCallback
Deallocate	lib/scudo/scudo_allocator_secondary.h	/^  void Deallocate(AllocatorStats *Stats, void *Ptr) {$/;"	f	class:LargeMmapAllocator
DeallocateBatch	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^  NOINLINE void DeallocateBatch(AllocatorStats *stat, uptr class_id,$/;"	f	class:SizeClassAllocator32
DeallocateCache	lib/sanitizer_common/tests/sanitizer_quarantine_test.cc	/^static void DeallocateCache(Cache *cache) {$/;"	f	namespace:__sanitizer
DeallocateFromLocalPool	lib/asan/asan_malloc_linux.cc	/^static void DeallocateFromLocalPool(const void *ptr) {$/;"	f	file:
DeallocationTypeMismatch	lib/scudo/scudo_allocator.cpp	/^  bool DeallocationTypeMismatch;$/;"	m	struct:__scudo::Allocator	file:
Death	test/sanitizer_common/TestCases/Posix/sanitizer_set_death_callback_test.cc	/^void Death() {$/;"	f
DeathCallback	lib/fuzzer/FuzzerLoop.cpp	/^void Fuzzer::DeathCallback() {$/;"	f	class:fuzzer::Fuzzer
DebugDump	lib/tsan/rtl/tsan_clock.cc	/^void SyncClock::DebugDump(int(*printf)(const char *s, ...)) {$/;"	f	class:__tsan::SyncClock
DebugDump	lib/tsan/rtl/tsan_clock.cc	/^void ThreadClock::DebugDump(int(*printf)(const char *s, ...)) {$/;"	f	class:__tsan::ThreadClock
Decorator	lib/asan/asan_descriptions.h	/^  Decorator() : SanitizerCommonDecorator() {}$/;"	f	class:__asan::Decorator
Decorator	lib/asan/asan_descriptions.h	/^class Decorator : public __sanitizer::SanitizerCommonDecorator {$/;"	c	namespace:__asan
Decorator	lib/hwasan/hwasan_report.cc	/^  Decorator() : SanitizerCommonDecorator() { }$/;"	f	class:__hwasan::Decorator
Decorator	lib/hwasan/hwasan_report.cc	/^class Decorator: public __sanitizer::SanitizerCommonDecorator {$/;"	c	namespace:__hwasan	file:
Decorator	lib/lsan/lsan_common.cc	/^  Decorator() : SanitizerCommonDecorator() { }$/;"	f	class:__lsan::Decorator
Decorator	lib/lsan/lsan_common.cc	/^class Decorator: public __sanitizer::SanitizerCommonDecorator {$/;"	c	namespace:__lsan	file:
Decorator	lib/msan/msan_report.cc	/^  Decorator() : SanitizerCommonDecorator() { }$/;"	f	class:__msan::Decorator
Decorator	lib/msan/msan_report.cc	/^class Decorator: public __sanitizer::SanitizerCommonDecorator {$/;"	c	namespace:__msan	file:
Decorator	lib/tsan/rtl/tsan_report.cc	/^  Decorator() : SanitizerCommonDecorator() { }$/;"	f	class:__tsan::Decorator
Decorator	lib/tsan/rtl/tsan_report.cc	/^class Decorator: public __sanitizer::SanitizerCommonDecorator {$/;"	c	namespace:__tsan	file:
Decorator	lib/ubsan/ubsan_diag.cc	/^  Decorator() : SanitizerCommonDecorator() {}$/;"	f	class:__anon102::Decorator
Decorator	lib/ubsan/ubsan_diag.cc	/^class Decorator : public SanitizerCommonDecorator {$/;"	c	namespace:__anon102	file:
DecreaseTotalMmap	lib/sanitizer_common/sanitizer_common.cc	/^void DecreaseTotalMmap(uptr size) {$/;"	f	namespace:__sanitizer
DeepFree	test/asan/TestCases/deep_stack_uaf.cc	/^struct DeepFree {$/;"	s	file:
DeepFree	test/asan/TestCases/deep_stack_uaf.cc	/^struct DeepFree<0> {$/;"	s	file:
DeepStack	lib/sanitizer_common/tests/standalone_malloc_test.cc	/^struct DeepStack {$/;"	s	file:
DeepStack	lib/sanitizer_common/tests/standalone_malloc_test.cc	/^struct DeepStack<0> {$/;"	s	file:
Default	lib/fuzzer/FuzzerDriver.cpp	/^  int   Default;$/;"	m	struct:fuzzer::FlagDescription	file:
Default	lib/sanitizer_common/sanitizer_report_decorator.h	/^  const char *Default() const { return ansi_ ? "\\033[1m\\033[0m"  : ""; }$/;"	f	class:__sanitizer::SanitizerCommonDecorator
DefaultEqual	lib/esan/esan_hashtable.h	/^template <typename T> struct DefaultEqual {$/;"	s	namespace:__esan
DefaultHash	lib/esan/esan_hashtable.h	/^template <typename T> struct DefaultHash {$/;"	s	namespace:__esan
DefaultLargeMmapAllocatorPtrArray	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^typedef LargeMmapAllocatorPtrArrayDynamic DefaultLargeMmapAllocatorPtrArray;$/;"	t
DefaultLargeMmapAllocatorPtrArray	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^typedef LargeMmapAllocatorPtrArrayStatic DefaultLargeMmapAllocatorPtrArray;$/;"	t
DefaultMutate	lib/fuzzer/FuzzerMutate.cpp	/^size_t MutationDispatcher::DefaultMutate(uint8_t *Data, size_t Size,$/;"	f	class:fuzzer::MutationDispatcher
DefaultMutators	lib/fuzzer/FuzzerMutate.h	/^  Vector<Mutator> DefaultMutators;$/;"	m	class:fuzzer::MutationDispatcher
DefaultProfileName	lib/profile/InstrProfilingFile.c	/^static const char *DefaultProfileName = "default.profraw";$/;"	v	file:
DefaultSizeClassMap	lib/sanitizer_common/sanitizer_allocator_size_class_map.h	/^typedef SizeClassMap<3, 4, 8, 17, 128, 16> DefaultSizeClassMap;$/;"	t
Del	lib/tsan/rtl/tsan_mutexset.cc	/^void MutexSet::Del(u64 id, bool write) {$/;"	f	class:__tsan::MutexSet
Del	lib/tsan/rtl/tsan_mutexset.h	/^void MutexSet::Del(u64 id, bool write) {}$/;"	f	class:__tsan::MutexSet
Del12	test/asan/TestCases/Linux/sized_delete_test.cc	/^void Del12(S12 *x) {$/;"	f
Del12Ar	test/asan/TestCases/Linux/sized_delete_test.cc	/^void Del12Ar(S12 *x) {$/;"	f
Del12ArNoThrow	test/asan/TestCases/Linux/sized_delete_test.cc	/^void Del12ArNoThrow(S12 *x) {$/;"	f
Del12NoThrow	test/asan/TestCases/Linux/sized_delete_test.cc	/^void Del12NoThrow(S12 *x) {$/;"	f
Delete	test/asan/TestCases/Posix/new_array_cookie_uaf_test.cc	/^__attribute__((noinline)) void Delete(C *c) { delete[] c; }$/;"	f
DeleteFakeStack	lib/asan/asan_thread.h	/^  void DeleteFakeStack(int tid) {$/;"	f	class:__asan::AsanThread
DeleteFile	lib/fuzzer/FuzzerCorpus.h	/^  void DeleteFile(const InputInfo &II) {$/;"	f	class:fuzzer::InputCorpus
DeleteInput	lib/fuzzer/FuzzerCorpus.h	/^  void DeleteInput(size_t Idx) {$/;"	f	class:fuzzer::InputCorpus
DeleteSizeMismatch	lib/scudo/scudo_allocator.cpp	/^  bool DeleteSizeMismatch;$/;"	m	struct:__scudo::Allocator	file:
Demangle	lib/sanitizer_common/sanitizer_symbolizer_internal.h	/^  virtual const char *Demangle(const char *name) {$/;"	f	class:__sanitizer::SymbolizerTool
Demangle	lib/sanitizer_common/sanitizer_symbolizer_libbacktrace.cc	/^const char *LibbacktraceSymbolizer::Demangle(const char *name) {$/;"	f	class:__sanitizer::LibbacktraceSymbolizer
Demangle	lib/sanitizer_common/sanitizer_symbolizer_libcdep.cc	/^const char *Symbolizer::Demangle(const char *name) {$/;"	f	class:__sanitizer::Symbolizer
Demangle	lib/sanitizer_common/sanitizer_symbolizer_markup.cc	/^const char *Symbolizer::Demangle(const char *name) {$/;"	f	class:__sanitizer::Symbolizer
Demangle	lib/sanitizer_common/sanitizer_symbolizer_win.cc	/^const char *WinSymbolizerTool::Demangle(const char *name) {$/;"	f	class:__sanitizer::WinSymbolizerTool
DemangleAlloc	lib/sanitizer_common/sanitizer_symbolizer_libbacktrace.cc	/^static char *DemangleAlloc(const char *name, bool always_alloc) {$/;"	f	namespace:__sanitizer
DemangleCXXABI	lib/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc	/^const char *DemangleCXXABI(const char *name) {$/;"	f	namespace:__sanitizer
DemangleFunctionName	lib/sanitizer_common/sanitizer_stacktrace_printer.cc	/^static const char *DemangleFunctionName(const char *function) {$/;"	f	namespace:__sanitizer
DemangleSwift	lib/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc	/^const char *DemangleSwift(const char *name) {$/;"	f	namespace:__sanitizer
DemangleSwiftAndCXX	lib/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc	/^const char *DemangleSwiftAndCXX(const char *name) {$/;"	f	namespace:__sanitizer
DenseSlabAlloc	lib/tsan/rtl/tsan_dense_alloc.h	/^  explicit DenseSlabAlloc(const char *name) {$/;"	f	class:__tsan::DenseSlabAlloc
DenseSlabAlloc	lib/tsan/rtl/tsan_dense_alloc.h	/^class DenseSlabAlloc {$/;"	c	namespace:__tsan
DenseSlabAllocCache	lib/tsan/rtl/tsan_dense_alloc.h	/^class DenseSlabAllocCache {$/;"	c	namespace:__tsan
DequeueBatch	lib/sanitizer_common/sanitizer_quarantine.h	/^  QuarantineBatch *DequeueBatch() {$/;"	f	class:__sanitizer::QuarantineCache
Derived	test/cfi/two-vcalls.cpp	/^class Derived : public Base {$/;"	c	file:
Derived	test/msan/dtor-base-access.cc	/^  Derived():Base(&y) {$/;"	f	class:Derived
Derived	test/msan/dtor-base-access.cc	/^class Derived : public Base {$/;"	c	file:
Derived	test/msan/dtor-derived-class.cc	/^  Derived() { y = 10; }$/;"	f	struct:Derived
Derived	test/msan/dtor-derived-class.cc	/^struct Derived : public Base {$/;"	s	file:
Derived	test/msan/dtor-multiple-inheritance-nontrivial-class-members.cc	/^  Derived()$/;"	f	struct:Derived
Derived	test/msan/dtor-multiple-inheritance-nontrivial-class-members.cc	/^struct Derived : public Base, public Intermediate {$/;"	s	file:
Derived	test/msan/dtor-multiple-inheritance.cc	/^  Derived() { w = 10; }$/;"	f	class:Derived
Derived	test/msan/dtor-multiple-inheritance.cc	/^class Derived : public B, public C {$/;"	c	file:
Derived	test/msan/dtor-trivial-class-members.cc	/^  Derived() {$/;"	f	struct:Derived
Derived	test/msan/dtor-trivial-class-members.cc	/^struct Derived {$/;"	s	file:
Derived	test/profile/Linux/coverage_ctors.cpp	/^struct Derived : public Base {$/;"	s	file:
Derived	test/profile/Linux/coverage_dtor.cpp	/^  Derived(int K) : Base(K) {}$/;"	f	struct:Derived
Derived	test/profile/Linux/coverage_dtor.cpp	/^struct Derived : public Base {$/;"	s	file:
Derived	test/ubsan/TestCases/TypeCheck/Linux/PR33221.cpp	/^class Derived : public Base {$/;"	c	file:
Derived	test/ubsan/TestCases/TypeCheck/PR33221.cpp	/^class Derived : public Base {$/;"	c	file:
Deriver	test/cfi/utils.h	/^  Deriver() {$/;"	f	struct:Deriver
Deriver	test/cfi/utils.h	/^struct Deriver : T {$/;"	s
Deriver	test/cfi/utils.h	/^struct Deriver<T, 0> : T {$/;"	s
Deriver	test/cfi/utils.h	/^struct Deriver<T, 1> : T {$/;"	s
Desc	lib/tsan/rtl/tsan_mutexset.h	/^  struct Desc {$/;"	s	class:__tsan::MutexSet
Describe	lib/sanitizer_common/sanitizer_fuchsia.cc	/^const char *SignalContext::Describe() const { UNIMPLEMENTED(); }$/;"	f	class:__sanitizer::SignalContext
Describe	lib/sanitizer_common/sanitizer_posix.cc	/^const char *SignalContext::Describe() const {$/;"	f	class:__sanitizer::SignalContext
Describe	lib/sanitizer_common/sanitizer_win.cc	/^const char *SignalContext::Describe() const {$/;"	f	class:__sanitizer::SignalContext
DescribeAddressIfGlobal	lib/asan/asan_descriptions.cc	/^bool DescribeAddressIfGlobal(uptr addr, uptr access_size,$/;"	f	namespace:__asan
DescribeAddressIfHeap	lib/asan/asan_descriptions.cc	/^bool DescribeAddressIfHeap(uptr addr, uptr access_size) {$/;"	f	namespace:__asan
DescribeAddressIfShadow	lib/asan/asan_descriptions.cc	/^bool DescribeAddressIfShadow(uptr addr) {$/;"	f	namespace:__asan
DescribeAddressIfStack	lib/asan/asan_descriptions.cc	/^bool DescribeAddressIfStack(uptr addr, uptr access_size) {$/;"	f	namespace:__asan
DescribeAddressRelativeToGlobal	lib/asan/asan_descriptions.cc	/^static void DescribeAddressRelativeToGlobal(uptr addr, uptr access_size,$/;"	f	namespace:__asan
DescribeMemoryRange	lib/msan/msan_report.cc	/^void DescribeMemoryRange(const void *x, uptr size) {$/;"	f	namespace:__msan
DescribeOrigin	lib/msan/msan_report.cc	/^static void DescribeOrigin(u32 id) {$/;"	f	namespace:__msan
DescribePC	lib/fuzzer/FuzzerUtil.cpp	/^std::string DescribePC(const char *SymbolizedFMT, uintptr_t PC) {$/;"	f	namespace:fuzzer
DescribeSignalOrException	lib/sanitizer_common/sanitizer_rtems.cc	/^const char *DescribeSignalOrException(int signo) { UNIMPLEMENTED(); }$/;"	f	namespace:__sanitizer
DescribeStackOrigin	lib/msan/msan_report.cc	/^static void DescribeStackOrigin(const char *so, uptr pc) {$/;"	f	namespace:__msan
DescribeThread	lib/asan/asan_descriptions.cc	/^void DescribeThread(AsanThreadContext *context) {$/;"	f	namespace:__asan
DescribeThread	lib/asan/asan_descriptions.h	/^static inline void DescribeThread(AsanThread *t) {$/;"	f	namespace:__asan
Description	lib/fuzzer/FuzzerDriver.cpp	/^  const char *Description;$/;"	m	struct:fuzzer::FlagDescription	file:
Destroy	lib/asan/asan_fake_stack.cc	/^void FakeStack::Destroy(int tid) {$/;"	f	class:__asan::FakeStack
Destroy	lib/asan/asan_thread.cc	/^void AsanThread::Destroy() {$/;"	f	class:__asan::AsanThread
Destroy	lib/fuzzer/FuzzerShmemFuchsia.cpp	/^bool SharedMemoryRegion::Destroy(const char *Name) {$/;"	f	class:fuzzer::SharedMemoryRegion
Destroy	lib/fuzzer/FuzzerShmemPosix.cpp	/^bool SharedMemoryRegion::Destroy(const char *Name) {$/;"	f	class:fuzzer::SharedMemoryRegion
Destroy	lib/fuzzer/FuzzerShmemWindows.cpp	/^bool SharedMemoryRegion::Destroy(const char *Name) {$/;"	f	class:fuzzer::SharedMemoryRegion
Destroy	lib/hwasan/hwasan_thread.cc	/^void HwasanThread::Destroy() {$/;"	f	class:__hwasan::HwasanThread
Destroy	lib/msan/msan_thread.cc	/^void MsanThread::Destroy() {$/;"	f	class:__msan::MsanThread
Destroy	lib/sanitizer_common/sanitizer_allocator_local_cache.h	/^  void Destroy(SizeClassAllocator *allocator, AllocatorGlobalStats *s) {$/;"	f	struct:SizeClassAllocator32LocalCache
Destroy	lib/sanitizer_common/sanitizer_allocator_local_cache.h	/^  void Destroy(SizeClassAllocator *allocator, AllocatorGlobalStats *s) {$/;"	f	struct:SizeClassAllocator64LocalCache
Destroy	lib/sanitizer_common/sanitizer_common.h	/^  void Destroy() { UnmapOrDie(data_, capacity_bytes_); }$/;"	f	class:__sanitizer::InternalMmapVectorNoCtor
Destroy	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^void Mutex::Destroy() {$/;"	f	class:Mutex
Destroy	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^void ScopedThread::Destroy(const Mutex &m) {$/;"	f	class:ScopedThread
Destroy	test/tsan/mutex_annotations.cc	/^  void Destroy() {$/;"	f	class:Mutex
DestroyAndFree	lib/tsan/rtl/tsan_mman.h	/^void DestroyAndFree(T *&p) {$/;"	f	namespace:__tsan
DestroyBatch	lib/sanitizer_common/sanitizer_allocator_local_cache.h	/^  void DestroyBatch(uptr class_id, SizeClassAllocator *allocator,$/;"	f	struct:SizeClassAllocator32LocalCache
DestroyCache	lib/sanitizer_common/sanitizer_allocator_combined.h	/^  void DestroyCache(AllocatorCache *cache) {$/;"	f	class:CombinedAllocator
DestroyLogicalThread	lib/sanitizer_common/sanitizer_deadlock_detector1.cc	/^void DD::DestroyLogicalThread(DDLogicalThread *lt) {$/;"	f	class:__sanitizer::DD
DestroyLogicalThread	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^void DD::DestroyLogicalThread(DDLogicalThread *lt) {$/;"	f	class:__sanitizer::DD
DestroyLogicalThread	lib/sanitizer_common/sanitizer_deadlock_detector_interface.h	/^  virtual void DestroyLogicalThread(DDLogicalThread *lt) {}$/;"	f	struct:__sanitizer::DDetector
DestroyPhysicalThread	lib/sanitizer_common/sanitizer_deadlock_detector1.cc	/^void DD::DestroyPhysicalThread(DDPhysicalThread *pt) {$/;"	f	class:__sanitizer::DD
DestroyPhysicalThread	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^void DD::DestroyPhysicalThread(DDPhysicalThread *pt) {$/;"	f	class:__sanitizer::DD
DestroyPhysicalThread	lib/sanitizer_common/sanitizer_deadlock_detector_interface.h	/^  virtual void DestroyPhysicalThread(DDPhysicalThread *pt) {}$/;"	f	struct:__sanitizer::DDetector
DestroyThreadState	lib/tsan/rtl/tsan_interceptors.cc	/^void DestroyThreadState() {$/;"	f	namespace:__tsan
Detach	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^void ScopedThread::Detach() {$/;"	f	class:ScopedThread
DetachThread	lib/sanitizer_common/sanitizer_thread_registry.cc	/^void ThreadRegistry::DetachThread(u32 tid, void *arg) {$/;"	f	class:__sanitizer::ThreadRegistry
DetectLeaks	lib/fuzzer/FuzzerOptions.h	/^  bool DetectLeaks = true;$/;"	m	struct:fuzzer::FuzzingOptions
Diag	lib/ubsan/ubsan_diag.h	/^  Diag(Location Loc, DiagLevel Level, ErrorType ET, const char *Message)$/;"	f	class:__ubsan::Diag
Diag	lib/ubsan/ubsan_diag.h	/^class Diag {$/;"	c	namespace:__ubsan
DiagLevel	lib/ubsan/ubsan_diag.h	/^enum DiagLevel {$/;"	g	namespace:__ubsan
Dictionary	lib/fuzzer/FuzzerDictionary.h	/^class Dictionary {$/;"	c	namespace:fuzzer
DictionaryEntry	lib/fuzzer/FuzzerDictionary.h	/^  DictionaryEntry() {}$/;"	f	class:fuzzer::DictionaryEntry
DictionaryEntry	lib/fuzzer/FuzzerDictionary.h	/^  DictionaryEntry(Word W) : W(W) {}$/;"	f	class:fuzzer::DictionaryEntry
DictionaryEntry	lib/fuzzer/FuzzerDictionary.h	/^  DictionaryEntry(Word W, size_t PositionHint) : W(W), PositionHint(PositionHint) {}$/;"	f	class:fuzzer::DictionaryEntry
DictionaryEntry	lib/fuzzer/FuzzerDictionary.h	/^class DictionaryEntry {$/;"	c	namespace:fuzzer
Die	lib/sanitizer_common/sanitizer_termination.cc	/^void NORETURN Die() {$/;"	f	namespace:__sanitizer
Die	lib/scudo/scudo_termination.cpp	/^void NORETURN Die() {$/;"	f	namespace:__sanitizer
DieCallbackType	lib/sanitizer_common/sanitizer_common.h	/^typedef void (*DieCallbackType)(void);$/;"	t	namespace:__sanitizer
Dir2addr	lib/tsan/rtl/tsan_fd.cc	/^uptr Dir2addr(const char *path) {$/;"	f	namespace:__tsan
DirName	lib/fuzzer/FuzzerIOPosix.cpp	/^std::string DirName(const std::string &FileName) {$/;"	f	namespace:fuzzer
DirName	lib/fuzzer/FuzzerIOWindows.cpp	/^std::string DirName(const std::string &FileName) {$/;"	f	namespace:fuzzer
DirPlusFile	lib/fuzzer/FuzzerIO.cpp	/^std::string DirPlusFile(const std::string &DirPath,$/;"	f	namespace:fuzzer
DisableCoreDumperIfNecessary	lib/sanitizer_common/sanitizer_fuchsia.cc	/^void DisableCoreDumperIfNecessary() {}$/;"	f	namespace:__sanitizer
DisableCoreDumperIfNecessary	lib/sanitizer_common/sanitizer_posix_libcdep.cc	/^void DisableCoreDumperIfNecessary() {$/;"	f	namespace:__sanitizer
DisableCoreDumperIfNecessary	lib/sanitizer_common/sanitizer_rtems.cc	/^void DisableCoreDumperIfNecessary() {}$/;"	f	namespace:__sanitizer
DisableCoreDumperIfNecessary	lib/sanitizer_common/sanitizer_win.cc	/^void DisableCoreDumperIfNecessary() {$/;"	f	namespace:__sanitizer
DisableCounterUnderflow	lib/lsan/lsan_common.cc	/^void DisableCounterUnderflow() {$/;"	f	namespace:__lsan
DisableIgnores	lib/tsan/rtl/tsan_interceptors.cc	/^void ScopedInterceptor::DisableIgnores() {$/;"	f	class:ScopedInterceptor
DisableInThisThread	lib/lsan/lsan_common_linux.cc	/^void DisableInThisThread() { disable_counter++; }$/;"	f	namespace:__lsan
DisableInThisThread	lib/lsan/lsan_common_mac.cc	/^void DisableInThisThread() { ++get_tls_val(true)->disable_counter; }$/;"	f	namespace:__lsan
DisabledInThisThread	lib/lsan/lsan_common_linux.cc	/^bool DisabledInThisThread() { return disable_counter > 0; }$/;"	f	namespace:__lsan
DisabledInThisThread	lib/lsan/lsan_common_mac.cc	/^bool DisabledInThisThread() {$/;"	f	namespace:__lsan
DisassembleCmd	lib/fuzzer/FuzzerUtilPosix.cpp	/^std::string DisassembleCmd(const std::string &FileName) {$/;"	f	namespace:fuzzer
DisassembleCmd	lib/fuzzer/FuzzerUtilWindows.cpp	/^std::string DisassembleCmd(const std::string &FileName) {$/;"	f	namespace:fuzzer
DiscardOutput	lib/fuzzer/FuzzerIOPosix.cpp	/^void DiscardOutput(int Fd) {$/;"	f	namespace:fuzzer
DiscardOutput	lib/fuzzer/FuzzerIOWindows.cpp	/^void DiscardOutput(int Fd) {$/;"	f	namespace:fuzzer
DispatchOnceCounter	lib/builtins/os_version_check.c	/^static dispatch_once_t DispatchOnceCounter;$/;"	v	file:
Displace	test/asan/TestCases/Linux/odr_c_test.c	/^__attribute__((aligned(1))) char Displace[105];$/;"	v
DisposeCalled	test/BlocksRuntime/objectRRGC.c	/^int DisposeCalled = 0;$/;"	v
DisposeCalled	test/BlocksRuntime/objectassign.c	/^int DisposeCalled = 0;$/;"	v
Distance	lib/sanitizer_common/sanitizer_stacktrace.cc	/^static uptr Distance(uptr a, uptr b) { return a < b ? b - a : a - b; }$/;"	f	namespace:__sanitizer
DistanceIsWithin2Gig	lib/interception/interception_win.cc	/^static bool DistanceIsWithin2Gig(uptr from, uptr target) {$/;"	f	namespace:__interception
DlAddrSymbolizer	lib/sanitizer_common/sanitizer_symbolizer_mac.h	/^class DlAddrSymbolizer : public SymbolizerTool {$/;"	c	namespace:__sanitizer
DlIteratePhdrData	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^struct DlIteratePhdrData {$/;"	s	namespace:__sanitizer	file:
DllMain	test/asan/TestCases/Windows/dll_control_c.cc	/^BOOL WINAPI DllMain(PVOID h, DWORD reason, PVOID reserved) {$/;"	f
DllMain	test/asan/TestCases/Windows/dll_heap_allocation.cc	/^BOOL WINAPI DllMain(PVOID h, DWORD reason, PVOID reserved) {$/;"	f
DllMain	test/asan/TestCases/Windows/dll_report_globals_symbolization_at_startup.cc	/^BOOL WINAPI DllMain(HMODULE, DWORD reason, LPVOID) {$/;"	f
DllMain	test/asan/TestCases/Windows/report_globals_reload_dll.cc	/^BOOL WINAPI DllMain(HMODULE, DWORD reason, LPVOID) {$/;"	f
DllMain	test/asan/TestCases/Windows/report_globals_vs_freelibrary.cc	/^BOOL WINAPI DllMain(HMODULE, DWORD reason, LPVOID) {$/;"	f
DllThunkCB	lib/sanitizer_common/sanitizer_win_dll_thunk.cc	/^typedef void (*DllThunkCB)();$/;"	t	file:
Do	lib/tsan/rtl/tsan_mutex.cc	/^  bool Do() {$/;"	f	class:__tsan::Backoff
Do64	test/BlocksRuntime/testfilerunner.h	/^    Do64   = (1 << 0),$/;"	e	enum:options
DoAnonymousMmapOrDie	lib/sanitizer_common/sanitizer_fuchsia.cc	/^static void *DoAnonymousMmapOrDie(uptr size, const char *mem_type,$/;"	f	namespace:__sanitizer
DoC99	test/BlocksRuntime/testfilerunner.h	/^    DoC99 = (1 << 12), \/\/ -std=c99$/;"	e	enum:options
DoCPP	test/BlocksRuntime/testfilerunner.h	/^    DoCPP  = (1 << 1),$/;"	e	enum:options
DoCrossOver	lib/fuzzer/FuzzerOptions.h	/^  bool DoCrossOver = true;$/;"	m	struct:fuzzer::FuzzingOptions
DoDashO	test/BlocksRuntime/testfilerunner.h	/^    DoDashO = (1 << 9),$/;"	e	enum:options
DoDashO2	test/BlocksRuntime/testfilerunner.h	/^    DoDashO2 = (1 << 11),$/;"	e	enum:options
DoDashOs	test/BlocksRuntime/testfilerunner.h	/^    DoDashOs = (1 << 10),$/;"	e	enum:options
DoDoubleFree	lib/asan/tests/asan_interface_test.cc	/^static void DoDoubleFree() {$/;"	f	file:
DoGC	test/BlocksRuntime/testfilerunner.h	/^    DoGC   = (1 << 4),$/;"	e	enum:options
DoGCRR	test/BlocksRuntime/testfilerunner.h	/^    DoGCRR = (1 << 7),  \/\/ -fobjc-gc & run GC mode$/;"	e	enum:options
DoIt	test/profile/Inputs/instrprof-comdat.h	/^template <class T> T FOO<T>::DoIt(T ti) { \/\/ HEADER: [[@LINE]]|  2|template$/;"	f	class:FOO
DoLeakCheck	lib/lsan/lsan_common.cc	/^void DoLeakCheck() {$/;"	f	namespace:__lsan
DoMmapFixedOrDie	lib/sanitizer_common/sanitizer_fuchsia.cc	/^static uptr DoMmapFixedOrDie(zx_handle_t vmar, uptr fixed_addr, uptr map_size,$/;"	f	namespace:__sanitizer
DoOBJC	test/BlocksRuntime/testfilerunner.h	/^    DoOBJC = (1 << 3),$/;"	e	enum:options
DoPrintNewPCs	lib/fuzzer/FuzzerTracePC.h	/^  bool DoPrintNewPCs = false;$/;"	m	class:fuzzer::TracePC
DoRR	test/BlocksRuntime/testfilerunner.h	/^    DoRR   = (1 << 5),$/;"	e	enum:options
DoRRGC	test/BlocksRuntime/testfilerunner.h	/^    DoRRGC = (1 << 6),  \/\/ -fobjc-gc but main w\/o so it runs in RR mode$/;"	e	enum:options
DoRecoverableLeakCheck	lib/lsan/lsan_common.cc	/^static int DoRecoverableLeakCheck() {$/;"	f	namespace:__lsan
DoRecoverableLeakCheckVoid	lib/lsan/lsan_common.cc	/^void DoRecoverableLeakCheckVoid() { DoRecoverableLeakCheck(); }$/;"	f	namespace:__lsan
DoRecycle	lib/sanitizer_common/sanitizer_quarantine.h	/^  void NOINLINE DoRecycle(Cache *c, Callback cb) {$/;"	f	class:__sanitizer::Quarantine
DoSEGV	test/sanitizer_common/TestCases/Linux/allow_user_segv.cc	/^int DoSEGV() {$/;"	f
DoStopTheWorld	lib/lsan/lsan_common_linux.cc	/^void DoStopTheWorld(StopTheWorldCallback callback, void *argument) {$/;"	f	namespace:__lsan
DoStopTheWorld	lib/lsan/lsan_common_mac.cc	/^void DoStopTheWorld(StopTheWorldCallback callback, void *argument) {$/;"	f	namespace:__lsan
DoStopTheWorldCallback	lib/lsan/lsan_common_linux.cc	/^static int DoStopTheWorldCallback(struct dl_phdr_info *info, size_t size,$/;"	f	namespace:__lsan
DoStopTheWorldParam	lib/lsan/lsan_common_linux.cc	/^struct DoStopTheWorldParam {$/;"	s	namespace:__lsan	file:
Done	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^    void Done() {$/;"	f	class:SizeClassAllocator64::FreePagesRangeTracker
Done	test/tsan/vptr_benign_race.cc	/^  void Done() {$/;"	f	struct:A
Done	test/tsan/vptr_harmful_race.cc	/^  void Done() {$/;"	f	struct:A
Done	test/tsan/vptr_harmful_race2.cc	/^  void Done() {$/;"	f	struct:A
Done	test/tsan/vptr_harmful_race3.cc	/^  void Done() {$/;"	f	struct:A
DontDumpShadow	lib/tsan/rtl/tsan_platform_posix.cc	/^static void DontDumpShadow(uptr addr, uptr size) {$/;"	f	namespace:__tsan
DontDumpShadowMemory	lib/sanitizer_common/sanitizer_posix_libcdep.cc	/^bool DontDumpShadowMemory(uptr addr, uptr length) {$/;"	f	namespace:__sanitizer
DontDumpShadowMemory	lib/sanitizer_common/sanitizer_win.cc	/^bool DontDumpShadowMemory(uptr addr, uptr length) {$/;"	f	namespace:__sanitizer
DontNeedShadowFor	lib/tsan/rtl/tsan_rtl.cc	/^void DontNeedShadowFor(uptr addr, uptr size) {$/;"	f	namespace:__tsan
DoubleFree	lib/asan/tests/asan_test.cc	/^void DoubleFree() {$/;"	f
DoubleFree	test/asan/TestCases/scariness_score_test.cc	/^void DoubleFree() {$/;"	f
Drain	lib/sanitizer_common/sanitizer_allocator_local_cache.h	/^  NOINLINE void Drain(PerClass *c, SizeClassAllocator *allocator, uptr class_id,$/;"	f	struct:SizeClassAllocator64LocalCache
Drain	lib/sanitizer_common/sanitizer_allocator_local_cache.h	/^  NOINLINE void Drain(PerClass *c, SizeClassAllocator *allocator,$/;"	f	struct:SizeClassAllocator32LocalCache
Drain	lib/sanitizer_common/sanitizer_allocator_local_cache.h	/^  void Drain(SizeClassAllocator *allocator) {$/;"	f	struct:SizeClassAllocator32LocalCache
Drain	lib/sanitizer_common/sanitizer_allocator_local_cache.h	/^  void Drain(SizeClassAllocator *allocator) {$/;"	f	struct:SizeClassAllocator64LocalCache
Drain	lib/sanitizer_common/sanitizer_quarantine.h	/^  void NOINLINE Drain(Cache *c, Callback cb) {$/;"	f	class:__sanitizer::Quarantine
Drain	lib/tsan/rtl/tsan_dense_alloc.h	/^  void Drain(Cache *c) {$/;"	f	class:__tsan::DenseSlabAlloc
DrainAndRecycle	lib/sanitizer_common/sanitizer_quarantine.h	/^  void NOINLINE DrainAndRecycle(Cache *c, Callback cb) {$/;"	f	class:__sanitizer::Quarantine
Dtor	test/asan/TestCases/Posix/tsd_dtor_leak.cc	/^void Dtor(void *tsd) {$/;"	f
Dummy	test/profile/Linux/instrprof-merge-vp.c	/^void *Dummy = &lprofMergeValueProfData;$/;"	v
Dump	lib/sanitizer_common/sanitizer_coverage_fuchsia.cc	/^  void Dump() {$/;"	f	class:__sancov::__anon63::final
Dump	lib/sanitizer_common/sanitizer_coverage_libcdep_new.cc	/^  void Dump() {$/;"	f	class:__sancov::__anon64::TracePcGuardController
DumpAllRegisters	lib/sanitizer_common/sanitizer_fuchsia.cc	/^void SignalContext::DumpAllRegisters(void *context) { UNIMPLEMENTED(); }$/;"	f	class:__sanitizer::SignalContext
DumpAllRegisters	lib/sanitizer_common/sanitizer_linux.cc	/^void SignalContext::DumpAllRegisters(void *context) {$/;"	f	class:__sanitizer::SignalContext
DumpAllRegisters	lib/sanitizer_common/sanitizer_mac.cc	/^void SignalContext::DumpAllRegisters(void *context) {$/;"	f	class:__sanitizer::SignalContext
DumpAllRegisters	lib/sanitizer_common/sanitizer_rtems.cc	/^void SignalContext::DumpAllRegisters(void *context) {}$/;"	f	class:__sanitizer::SignalContext
DumpAllRegisters	lib/sanitizer_common/sanitizer_win.cc	/^void SignalContext::DumpAllRegisters(void *context) {$/;"	f	class:__sanitizer::SignalContext
DumpCoverage	lib/fuzzer/FuzzerOptions.h	/^  bool DumpCoverage = false;$/;"	m	struct:fuzzer::FuzzingOptions
DumpCoverage	lib/fuzzer/FuzzerTracePC.cpp	/^void TracePC::DumpCoverage() {$/;"	f	class:fuzzer::TracePC
DumpCurrentUnit	lib/fuzzer/FuzzerLoop.cpp	/^void Fuzzer::DumpCurrentUnit(const char *Prefix) {$/;"	f	class:fuzzer::Fuzzer
DumpListOfModules	lib/sanitizer_common/sanitizer_procmaps_common.cc	/^void MemoryMappingLayout::DumpListOfModules($/;"	f	class:__sanitizer::MemoryMappingLayout
DumpListOfModules	lib/sanitizer_common/sanitizer_procmaps_mac.cc	/^void MemoryMappingLayout::DumpListOfModules($/;"	f	class:__sanitizer::MemoryMappingLayout
DumpProcessMap	lib/sanitizer_common/sanitizer_fuchsia.cc	/^void DumpProcessMap() {$/;"	f	namespace:__sanitizer
DumpProcessMap	lib/sanitizer_common/sanitizer_posix.cc	/^void DumpProcessMap() {$/;"	f	namespace:__sanitizer
DumpProcessMap	lib/sanitizer_common/sanitizer_rtems.cc	/^void DumpProcessMap() {}$/;"	f	namespace:__sanitizer
DumpProcessMap	lib/sanitizer_common/sanitizer_win.cc	/^void DumpProcessMap() {$/;"	f	namespace:__sanitizer
DupAndCloseStderr	lib/fuzzer/FuzzerIO.cpp	/^void DupAndCloseStderr() {$/;"	f	namespace:fuzzer
DuplicateFile	lib/fuzzer/FuzzerIOPosix.cpp	/^int DuplicateFile(int Fd) {$/;"	f	namespace:fuzzer
DuplicateFile	lib/fuzzer/FuzzerIOWindows.cpp	/^int DuplicateFile(int Fd) {$/;"	f	namespace:fuzzer
DurationFilterMicros	include/xray/xray_log_interface.h	/^  int DurationFilterMicros = 0;$/;"	m	struct:__xray::BasicLoggingOptions
DyldNeedsEnvVariable	lib/sanitizer_common/sanitizer_mac.cc	/^bool DyldNeedsEnvVariable() {$/;"	f	namespace:__sanitizer
DynInitGlobal	lib/asan/asan_globals.cc	/^struct DynInitGlobal {$/;"	s	namespace:__asan	file:
DynRetTestStr	lib/msan/tests/msan_test.cc	/^static char *DynRetTestStr;$/;"	v	file:
DynamicAnnContext	lib/tsan/rtl/tsan_interface_ann.cc	/^  DynamicAnnContext()$/;"	f	struct:__tsan::DynamicAnnContext
DynamicAnnContext	lib/tsan/rtl/tsan_interface_ann.cc	/^struct DynamicAnnContext {$/;"	s	namespace:__tsan	file:
DynamicBufferIOBuffer	lib/profile/InstrProfilingWriter.c	/^COMPILER_RT_VISIBILITY uint8_t *DynamicBufferIOBuffer = 0;$/;"	v
DynamicTypeCacheMissData	lib/ubsan/ubsan_handlers_cxx.h	/^struct DynamicTypeCacheMissData {$/;"	s	namespace:__ubsan
DynamicTypeInfo	lib/ubsan/ubsan_type_hash.h	/^  DynamicTypeInfo(const char *MDTN, sptr Offset, const char *STN)$/;"	f	class:__ubsan::DynamicTypeInfo
DynamicTypeInfo	lib/ubsan/ubsan_type_hash.h	/^class DynamicTypeInfo {$/;"	c	namespace:__ubsan
E	lib/builtins/hexagon/sfsqrt_opt.S	/^    E = R$/;"	d
E	lib/builtins/hexagon/sfsqrt_opt.S	/^#define E r3$/;"	d
E	test/cfi/simple-pass.cpp	/^struct E {$/;"	s	file:
E	test/fuzzer/LargeTest.cpp	27;"	d	file:
E	test/msan/dtor-vtable-multiple-inheritance.cc	/^class E : public virtual A, public virtual D {$/;"	c	file:
E	test/ubsan/TestCases/Misc/enum.cpp	/^enum E { a = 1 } e;$/;"	g	file:
E	test/ubsan/TestCases/Misc/enum.cpp	10;"	d	file:
E2	test/cfi/simple-pass.cpp	/^struct E2 : virtual E {$/;"	s	file:
EF	lib/fuzzer/FuzzerDriver.cpp	/^ExternalFunctions *EF = nullptr;$/;"	m	namespace:fuzzer	file:
EMUTLS_SKIP_DESTRUCTOR_ROUNDS	lib/builtins/emutls.c	26;"	d	file:
EMUTLS_SKIP_DESTRUCTOR_ROUNDS	lib/builtins/emutls.c	28;"	d	file:
EMUTLS_USE_POSIX_MEMALIGN	lib/builtins/emutls.c	53;"	d	file:
ENABLE_FRAME_POINTER	lib/sanitizer_common/sanitizer_internal_defs.h	413;"	d
END	lib/builtins/hexagon/dfaddsub.S	/^#define END(TAG) .size TAG,.-TAG$/;"	d
END	lib/builtins/hexagon/dfdiv.S	/^#define END(TAG) .size TAG,.-TAG$/;"	d
END	lib/builtins/hexagon/dffma.S	/^#define END(TAG) .size TAG,.-TAG$/;"	d
END	lib/builtins/hexagon/dfminmax.S	/^#define END(TAG) .size TAG,.-TAG$/;"	d
END	lib/builtins/hexagon/dfmul.S	/^#define END(TAG) .size TAG,.-TAG$/;"	d
END	lib/builtins/hexagon/dfsqrt.S	/^#define END(TAG) .size TAG,.-TAG$/;"	d
ENDIANNESS_H	test/builtins/Unit/endianness.h	17;"	d
END_COMPILERRT_FUNCTION	lib/builtins/assembly.h	198;"	d
END_COMPILERRT_FUNCTION	lib/builtins/assembly.h	201;"	d
ENOATTR	test/msan/Linux/xattr.cc	18;"	d	file:
ENSURE_ASAN_INITED	lib/asan/asan_interceptors.h	27;"	d
ENSURE_HWASAN_INITED	lib/hwasan/hwasan_interceptors.cc	87;"	d	file:
ENSURE_LSAN_INITED	lib/lsan/lsan.h	38;"	d
ENSURE_LSAN_INITED	lib/lsan/lsan_interceptors.cc	/^  ENSURE_LSAN_INITED;$/;"	m	class:std::align_val_t	file:
ENSURE_MSAN_INITED	lib/msan/msan_interceptors.cc	92;"	d	file:
ENTRY	include/xray/xray_interface.h	/^  ENTRY = 0,$/;"	e	enum:XRayEntryType
EPOLL_CTL_ADD	lib/tsan/rtl/tsan_interceptors.cc	/^const int EPOLL_CTL_ADD = 1;$/;"	v
EQ	lib/fuzzer/tests/FuzzerUnittest.cpp	/^void EQ(const Vector<std::string> &A, const Vector<std::string> &B) {$/;"	f
EQ	lib/fuzzer/tests/FuzzerUnittest.cpp	/^void EQ(const Vector<uint32_t> &A, const Vector<uint32_t> &B) {$/;"	f
EQUAL	test/BlocksRuntime/rettypepromotion.c	/^enum { LESS = -1, EQUAL, GREATER };$/;"	e	enum:__anon146	file:
EQUAL_0	test/builtins/Unit/fp_test.h	/^    LESS_0, LESS_EQUAL_0, EQUAL_0, GREATER_0, GREATER_EQUAL_0, NEQUAL_0$/;"	e	enum:EXPECTED_RESULT
ERROR	lib/builtins/hexagon/dfsqrt.S	/^		ERROR = asl(FRACRAD,#15)$/;"	d
ERROR	lib/builtins/hexagon/dfsqrt.S	/^		ERROR = asl(FRACRAD,#31)		\/\/ for next iter$/;"	d
ERROR	lib/builtins/hexagon/dfsqrt.S	/^		ERROR = asl(FRACRAD,#47)	\/\/ for next iter$/;"	d
ERROR	lib/builtins/hexagon/dfsqrt.S	/^		ERROR = mpyu(ERRORHI,RECIPEST)$/;"	d
ERROR	lib/builtins/hexagon/dfsqrt.S	/^#define ERROR r1:0$/;"	d
ERRORHI	lib/builtins/hexagon/dfsqrt.S	/^#define ERRORHI r1$/;"	d
ERRORLO	lib/builtins/hexagon/dfsqrt.S	/^#define ERRORLO r0$/;"	d
ESAN_FLAG	lib/esan/esan_flags.cpp	29;"	d	file:
ESAN_FLAG	lib/esan/esan_flags.cpp	31;"	d	file:
ESAN_FLAG	lib/esan/esan_flags.cpp	35;"	d	file:
ESAN_FLAG	lib/esan/esan_flags.cpp	38;"	d	file:
ESAN_FLAG	lib/esan/esan_flags.h	25;"	d
ESAN_FLAG	lib/esan/esan_flags.h	27;"	d
ESAN_FLAGS_H	lib/esan/esan_flags.h	16;"	d
ESAN_H	lib/esan/esan.h	27;"	d
ESAN_INTERFACE_INTERNAL_H	lib/esan/esan_interface_internal.h	17;"	d
ESAN_MAYBE_INTERCEPT_CREAT64	lib/esan/esan_interceptors.cpp	307;"	d	file:
ESAN_MAYBE_INTERCEPT_CREAT64	lib/esan/esan_interceptors.cpp	309;"	d	file:
ESAN_MAYBE_INTERCEPT_OPEN64	lib/esan/esan_interceptors.cpp	288;"	d	file:
ESAN_MAYBE_INTERCEPT_OPEN64	lib/esan/esan_interceptors.cpp	290;"	d	file:
ESAN_MAYBE_INTERCEPT_PTHREAD_SIGMASK	lib/esan/esan_interceptors.cpp	408;"	d	file:
ESAN_MAYBE_INTERCEPT_PTHREAD_SIGMASK	lib/esan/esan_interceptors.cpp	410;"	d	file:
ESAN_MAYBE_INTERCEPT_SIGACTION	lib/esan/esan_interceptors.cpp	373;"	d	file:
ESAN_MAYBE_INTERCEPT_SIGNAL	lib/esan/esan_interceptors.cpp	341;"	d	file:
ESAN_MAYBE_INTERCEPT_SIGNAL	lib/esan/esan_interceptors.cpp	344;"	d	file:
ESAN_MAYBE_INTERCEPT_SIGPROCMASK	lib/esan/esan_interceptors.cpp	391;"	d	file:
ESAN_SHADOW_H	lib/esan/esan_shadow.h	16;"	d
ESAN_SIDELINE_H	lib/esan/esan_sideline.h	16;"	d
ESTABLISH_FRAME	lib/builtins/arm/divmodsi4.S	/^#define ESTABLISH_FRAME    \\$/;"	d
ESTABLISH_FRAME	lib/builtins/arm/divsi3.S	/^#define ESTABLISH_FRAME \\$/;"	d
ESTABLISH_FRAME	lib/builtins/arm/divsi3.S	/^ESTABLISH_FRAME$/;"	l
ESTABLISH_FRAME	lib/builtins/arm/modsi3.S	/^#define ESTABLISH_FRAME \\$/;"	d
ET	lib/ubsan/ubsan_diag.h	/^  ErrorType ET;$/;"	m	class:__ubsan::Diag
EVIOC_ABS_MAX	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	480;"	d
EVIOC_ABS_MAX	lib/sanitizer_common/sanitizer_platform_limits_posix.h	992;"	d
EVIOC_EV_MAX	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	479;"	d
EVIOC_EV_MAX	lib/sanitizer_common/sanitizer_platform_limits_posix.h	991;"	d
EXACT	lib/builtins/hexagon/dffma.S	/^		EXACT = cmp.gtu(ONE,STICKIES)$/;"	d
EXACT	lib/builtins/hexagon/dffma.S	/^#define EXACT p2$/;"	d
EXIT	include/xray/xray_interface.h	/^  EXIT = 1,$/;"	e	enum:XRayEntryType
EXP	lib/builtins/hexagon/dfsqrt.S	/^		EXP = add(EXP,#-63)$/;"	d
EXP	lib/builtins/hexagon/dfsqrt.S	/^		EXP = add(EXP,#-DF_BIAS)			\/\/ subtract bias --> signed exp$/;"	d
EXP	lib/builtins/hexagon/dfsqrt.S	/^		EXP = add(EXP,ADJ)				\/\/ add back bias$/;"	d
EXP	lib/builtins/hexagon/dfsqrt.S	/^		EXP = add(clb(A),#-DF_EXPBITS)		\/\/ how much to normalize?$/;"	d
EXP	lib/builtins/hexagon/dfsqrt.S	/^		EXP = asr(EXP,#1)				\/\/ divide signed exp by 2$/;"	d
EXP	lib/builtins/hexagon/dfsqrt.S	/^		EXP = convert_df2sf(A)				\/\/ if sNaN, get invalid$/;"	d
EXP	lib/builtins/hexagon/dfsqrt.S	/^		EXP = extractu(AH,#DF_EXPBITS,#DF_MANTBITS-32)$/;"	d
EXP	lib/builtins/hexagon/dfsqrt.S	/^		EXP = sub(#1,EXP)			\/\/ Form exponent$/;"	d
EXP	lib/builtins/hexagon/dfsqrt.S	/^#define EXP r28$/;"	d
EXP0	lib/builtins/hexagon/dfmul.S	/^		EXP0 = add(EXP0,#-BIAS-58)$/;"	d
EXP0	lib/builtins/hexagon/dfmul.S	/^		EXP0 = extractu(AH,#EXPBITS,#HI_MANTBITS)$/;"	d
EXP0	lib/builtins/hexagon/dfmul.S	/^#define EXP0 r6$/;"	d
EXP1	lib/builtins/hexagon/dfmul.S	/^		EXP1 = add(EXP0,#-BIAS-58)$/;"	d
EXP1	lib/builtins/hexagon/dfmul.S	/^		EXP1 = extractu(AH,#EXPBITS,#HI_MANTBITS)$/;"	d
EXP1	lib/builtins/hexagon/dfmul.S	/^		EXP1 = extractu(BH,#EXPBITS,#HI_MANTBITS)$/;"	d
EXP1	lib/builtins/hexagon/dfmul.S	/^#define EXP1 r7$/;"	d
EXP10	lib/builtins/hexagon/dfmul.S	/^#define EXP10 r7:6$/;"	d
EXPA	lib/builtins/hexagon/dfaddsub.S	/^		EXPA = extractu(AH,#EXPBITS,#HI_MANTBITS)$/;"	d
EXPA	lib/builtins/hexagon/dfaddsub.S	/^#define EXPA r4$/;"	d
EXPA	lib/builtins/hexagon/dfdiv.S	/^		EXPA = #0$/;"	d
EXPA	lib/builtins/hexagon/dfdiv.S	/^		EXPA = add(EXPA,#-QADJ)$/;"	d
EXPA	lib/builtins/hexagon/dfdiv.S	/^		EXPA = add(EXPA,EXPB)$/;"	d
EXPA	lib/builtins/hexagon/dfdiv.S	/^		EXPA = extractu(EXPA,#DF_EXPBITS,#DF_MANTBITS-32)$/;"	d
EXPA	lib/builtins/hexagon/dfdiv.S	/^		EXPA = sub(#FUDGE1,EXPA)			\/\/ we extract post-converted exponent$/;"	d
EXPA	lib/builtins/hexagon/dfdiv.S	/^		EXPA = sub(EXPA,EXPB)$/;"	d
EXPA	lib/builtins/hexagon/dfdiv.S	/^#define EXPA r12$/;"	d
EXPA	lib/builtins/hexagon/dffma.S	/^		EXPA = #0$/;"	d
EXPA	lib/builtins/hexagon/dffma.S	/^		EXPA = add(EXPA,#-62)			\/\/ And adjust exponent of result$/;"	d
EXPA	lib/builtins/hexagon/dffma.S	/^		EXPA = add(EXPA,#-BIAS+(ADJUST))$/;"	d
EXPA	lib/builtins/hexagon/dffma.S	/^		EXPA = add(EXPA,#-BIAS-60)$/;"	d
EXPA	lib/builtins/hexagon/dffma.S	/^		EXPA = add(EXPA,EXPB)		\/\/ how much to shift back right$/;"	d
EXPA	lib/builtins/hexagon/dffma.S	/^		EXPA = add(EXPA,EXPB)$/;"	d
EXPA	lib/builtins/hexagon/dffma.S	/^		EXPA = extractu(AH,#EXPBITS,#HI_MANTBITS)$/;"	d
EXPA	lib/builtins/hexagon/dffma.S	/^		EXPA = sub(#1+5,TMP)			\/\/ Amount to right shift to denormalize$/;"	d
EXPA	lib/builtins/hexagon/dffma.S	/^		EXPA = sub(EXPA,LEFTSHIFT)$/;"	d
EXPA	lib/builtins/hexagon/dffma.S	/^#define EXPA r18$/;"	d
EXPA	lib/builtins/hexagon/dffma.S	/^#define EXPA r6$/;"	d
EXPB	lib/builtins/hexagon/dfaddsub.S	/^		EXPB = #1$/;"	d
EXPB	lib/builtins/hexagon/dfaddsub.S	/^		EXPB = add(EXPA,#-BIAS-60)$/;"	d
EXPB	lib/builtins/hexagon/dfaddsub.S	/^		EXPB = add(EXPB,TMP)$/;"	d
EXPB	lib/builtins/hexagon/dfaddsub.S	/^		EXPB = extractu(BH,#EXPBITS,#HI_MANTBITS)$/;"	d
EXPB	lib/builtins/hexagon/dfaddsub.S	/^		EXPB = extractu(TMP,#2,#SR_ROUND_OFF)	\/\/ rounding bits$/;"	d
EXPB	lib/builtins/hexagon/dfaddsub.S	/^#define EXPB r5$/;"	d
EXPB	lib/builtins/hexagon/dfdiv.S	/^		EXPB = add(clb(PROD),#-1)			\/\/ doesn't need to be added in since$/;"	d
EXPB	lib/builtins/hexagon/dfdiv.S	/^		EXPB = extractu(AH,#DF_EXPBITS,#DF_MANTBITS-32)$/;"	d
EXPB	lib/builtins/hexagon/dfdiv.S	/^		EXPB = extractu(EXPB,#DF_EXPBITS,#DF_MANTBITS-32)$/;"	d
EXPB	lib/builtins/hexagon/dfdiv.S	/^		EXPB = min(EXPA,TMP1)$/;"	d
EXPB	lib/builtins/hexagon/dfdiv.S	/^#define EXPB r13$/;"	d
EXPB	lib/builtins/hexagon/dffma.S	/^		EXPB = add(clb(ATMP),#-2)		\/\/ Amount to left shift to normalize$/;"	d
EXPB	lib/builtins/hexagon/dffma.S	/^		EXPB = extractu(BH,#EXPBITS,#HI_MANTBITS)$/;"	d
EXPB	lib/builtins/hexagon/dffma.S	/^		EXPB = min(EXPA,TMP)$/;"	d
EXPB	lib/builtins/hexagon/dffma.S	/^#define EXPB r19$/;"	d
EXPB	lib/builtins/hexagon/dffma.S	/^#define EXPB r7$/;"	d
EXPBA	lib/builtins/hexagon/dfdiv.S	/^		EXPBA = combine(BH,AH)$/;"	d
EXPBA	lib/builtins/hexagon/dfdiv.S	/^#define EXPBA r13:12$/;"	d
EXPBA	lib/builtins/hexagon/dffma.S	/^		EXPBA = neg(CTMP)$/;"	d
EXPBA	lib/builtins/hexagon/dffma.S	/^#define EXPBA r19:18$/;"	d
EXPBA	lib/builtins/hexagon/dffma.S	/^#define EXPBA r7:6$/;"	d
EXPBITS	lib/builtins/hexagon/dfaddsub.S	/^#define EXPBITS 11$/;"	d
EXPBITS	lib/builtins/hexagon/dffma.S	/^#define EXPBITS 11$/;"	d
EXPBITS	lib/builtins/hexagon/dfmul.S	/^#define EXPBITS 11$/;"	d
EXPB_A	lib/builtins/hexagon/dfaddsub.S	/^#define EXPB_A r5:4$/;"	d
EXPC	lib/builtins/hexagon/dffma.S	/^		EXPC = extractu(CH,#EXPBITS,#HI_MANTBITS)$/;"	d
EXPC	lib/builtins/hexagon/dffma.S	/^		EXPC = sub(EXPA,EXPC)$/;"	d
EXPC	lib/builtins/hexagon/dffma.S	/^#define EXPC r19$/;"	d
EXPCA	lib/builtins/hexagon/dffma.S	/^		EXPCA = memd(r29+#8)$/;"	d
EXPCA	lib/builtins/hexagon/dffma.S	/^#define EXPCA r19:18$/;"	d
EXPDIFF	lib/builtins/hexagon/dfaddsub.S	/^		EXPDIFF = min(EXPDIFF,ZTMPH)		\/\/ If exponent difference >= ~60,$/;"	d
EXPDIFF	lib/builtins/hexagon/dfaddsub.S	/^		EXPDIFF = sub(EXPA,EXPB)$/;"	d
EXPDIFF	lib/builtins/hexagon/dfaddsub.S	/^#define EXPDIFF r15$/;"	d
EXPECTED_RESULT	test/builtins/Unit/fp_test.h	/^enum EXPECTED_RESULT {$/;"	g
EXPECT_HOSTENT_NOT_POISONED	lib/msan/tests/msan_test.cc	1097;"	d	file:
EXPECT_NOT_POISONED	lib/msan/tests/msan_test.cc	187;"	d	file:
EXPECT_NOT_POISONED2	lib/msan/tests/msan_test.cc	188;"	d	file:
EXPECT_ORIGIN	lib/msan/tests/msan_test.cc	153;"	d	file:
EXPECT_POISONED	lib/msan/tests/msan_test.cc	171;"	d	file:
EXPECT_POISONED_O	lib/msan/tests/msan_test.cc	178;"	d	file:
EXPECT_UMR	lib/msan/tests/msan_test.cc	156;"	d	file:
EXPECT_UMR_O	lib/msan/tests/msan_test.cc	163;"	d	file:
EXTRACTAMT	lib/builtins/hexagon/dfaddsub.S	/^#define EXTRACTAMT r15:14$/;"	d
EXTRACTOFF	lib/builtins/hexagon/dfaddsub.S	/^		EXTRACTOFF = #0$/;"	d
EXTRACTOFF	lib/builtins/hexagon/dfaddsub.S	/^#define EXTRACTOFF r14$/;"	d
EXT_FUNC	lib/fuzzer/FuzzerExtFunctions.h	26;"	d
EXT_FUNC	lib/fuzzer/FuzzerExtFunctions.h	31;"	d
EXT_FUNC	lib/fuzzer/FuzzerExtFunctionsDlsym.cpp	42;"	d	file:
EXT_FUNC	lib/fuzzer/FuzzerExtFunctionsDlsym.cpp	47;"	d	file:
EXT_FUNC	lib/fuzzer/FuzzerExtFunctionsDlsymWin.cpp	42;"	d	file:
EXT_FUNC	lib/fuzzer/FuzzerExtFunctionsDlsymWin.cpp	50;"	d	file:
EXT_FUNC	lib/fuzzer/FuzzerExtFunctionsDlsymWin.cpp	53;"	d	file:
EXT_FUNC	lib/fuzzer/FuzzerExtFunctionsDlsymWin.cpp	57;"	d	file:
EXT_FUNC	lib/fuzzer/FuzzerExtFunctionsWeak.cpp	24;"	d	file:
EXT_FUNC	lib/fuzzer/FuzzerExtFunctionsWeak.cpp	29;"	d	file:
EXT_FUNC	lib/fuzzer/FuzzerExtFunctionsWeak.cpp	43;"	d	file:
EXT_FUNC	lib/fuzzer/FuzzerExtFunctionsWeak.cpp	50;"	d	file:
EXT_FUNC	lib/fuzzer/FuzzerExtFunctionsWeakAlias.cpp	21;"	d	file:
EXT_FUNC	lib/fuzzer/FuzzerExtFunctionsWeakAlias.cpp	30;"	d	file:
EXT_FUNC	lib/fuzzer/FuzzerExtFunctionsWeakAlias.cpp	46;"	d	file:
EXT_FUNC	lib/fuzzer/FuzzerExtFunctionsWeakAlias.cpp	51;"	d	file:
EarlyInit	lib/asan/asan_rtems.cc	/^void EarlyInit() {$/;"	f	namespace:__asan
EarlyMalloc	lib/asan/asan_malloc_local.h	/^static INLINE bool EarlyMalloc() {$/;"	f
Edge	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  struct Edge {$/;"	s	class:__sanitizer::DeadlockDetector
ElementsPerSegment	lib/xray/xray_segmented_array.h	/^  static constexpr size_t ElementsPerSegment =$/;"	m	class:__xray::Array
Elf_Ehdr	lib/cfi/cfi.cc	/^typedef ElfW(Ehdr) Elf_Ehdr;$/;"	t	file:
Elf_Phdr	lib/cfi/cfi.cc	/^typedef ElfW(Phdr) Elf_Phdr;$/;"	t	file:
Elf_Phdr	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^typedef ElfW(Phdr) Elf_Phdr;$/;"	t	namespace:__sanitizer	file:
Elf_Phdr	lib/sanitizer_common/sanitizer_linux_libcdep.cc	529;"	d	file:
ElmSize	lib/profile/InstrProfilingInternal.h	/^  size_t ElmSize;$/;"	m	struct:ProfDataIOVec
Empty	lib/sanitizer_common/sanitizer_lfstack.h	/^  bool Empty() const {$/;"	f	struct:__sanitizer::LFStack
Empty	test/msan/dtor-bit-fields.cc	/^struct Empty {$/;"	s	file:
EmptyWord	lib/fuzzer/FuzzerTracePC.h	/^  Word EmptyWord;$/;"	m	struct:fuzzer::MemMemTable
EnableIgnores	lib/tsan/rtl/tsan_interceptors.cc	/^void ScopedInterceptor::EnableIgnores() {$/;"	f	class:ScopedInterceptor
EnableInThisThread	lib/lsan/lsan_common_linux.cc	/^void EnableInThisThread() {$/;"	f	namespace:__lsan
EnableInThisThread	lib/lsan/lsan_common_mac.cc	/^void EnableInThisThread() {$/;"	f	namespace:__lsan
EnableSigprof	test/asan/TestCases/Linux/uar_signals.cc	/^static void EnableSigprof(Sigaction SignalHandler) {$/;"	f	file:
End	lib/asan/asan_allocator.cc	/^uptr AsanChunkView::End() const { return Beg() + UsedSize(); }$/;"	f	class:__asan::AsanChunkView
End	lib/esan/esan_shadow.h	/^  uptr End;$/;"	m	struct:__esan::ApplicationRegion
End	lib/hwasan/hwasan_allocator.cc	/^uptr HwasanChunkView::End() const {$/;"	f	class:__hwasan::HwasanChunkView
End	lib/sanitizer_common/scripts/cpplint.py	/^  def End(self):$/;"	m	class:_FunctionState
End	lib/ubsan/ubsan_diag.h	/^  Location Start, End;$/;"	m	class:__ubsan::Range
End	lib/xray/xray_interface_internal.h	/^  const XRaySledEntry *End;$/;"	m	struct:XRayFunctionSledIndex
EndSymbolizationHook	lib/sanitizer_common/sanitizer_symbolizer.h	/^  typedef void (*EndSymbolizationHook)();$/;"	t	class:__sanitizer::final
EndVNode	lib/profile/InstrProfilingPlatformDarwin.c	/^COMPILER_RT_VISIBILITY ValueProfNode *EndVNode = &VNodesEnd;$/;"	v
EndVNode	lib/profile/InstrProfilingPlatformLinux.c	/^COMPILER_RT_VISIBILITY ValueProfNode *EndVNode = &PROF_VNODES_STOP;$/;"	v
EndVNode	lib/profile/InstrProfilingPlatformOther.c	/^COMPILER_RT_VISIBILITY ValueProfNode *EndVNode = 0;$/;"	v
Enqueue	lib/sanitizer_common/sanitizer_quarantine.h	/^  void Enqueue(Callback cb, void *ptr, uptr size) {$/;"	f	class:__sanitizer::QuarantineCache
EnqueueBatch	lib/sanitizer_common/sanitizer_quarantine.h	/^  void EnqueueBatch(QuarantineBatch *b) {$/;"	f	class:__sanitizer::QuarantineCache
EnqueueStuff	test/BlocksRuntime/dispatch_async.c	/^void EnqueueStuff(dispatch_queue_t q)$/;"	f
EnsureFreeArraySpace	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  bool EnsureFreeArraySpace(RegionInfo *region, uptr region_beg,$/;"	f	class:SizeClassAllocator64
EnsureInterceptorsInitialized	lib/cfi/cfi.cc	/^static void EnsureInterceptorsInitialized() {$/;"	f	file:
EnsureInterceptorsInitialized	lib/safestack/safestack.cc	/^static void EnsureInterceptorsInitialized() {$/;"	f	file:
EnsureMainThreadIDIsCorrect	lib/asan/asan_thread.cc	/^void EnsureMainThreadIDIsCorrect() {$/;"	f	namespace:__asan
EnsureMainThreadIDIsCorrect	lib/asan/asan_thread.cc	/^void EnsureMainThreadIDIsCorrect() {$/;"	f	namespace:__lsan
EnsureMainThreadIDIsCorrect	lib/lsan/lsan_thread.cc	/^void EnsureMainThreadIDIsCorrect() {$/;"	f	namespace:__lsan
EnsureSize	lib/sanitizer_common/sanitizer_vector.h	/^  void EnsureSize(uptr size) {$/;"	f	class:__sanitizer::Vector
EnsureSortedChunks	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^  void EnsureSortedChunks() {$/;"	f	class:LargeMmapAllocator
EnsureSpace	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^  INLINE void EnsureSpace(uptr n) { CHECK_LT(n, kMaxNumChunks); }$/;"	f	class:LargeMmapAllocatorPtrArrayStatic
EnsureSpace	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^  INLINE void EnsureSpace(uptr n) {$/;"	f	class:LargeMmapAllocatorPtrArrayDynamic
EnterInterceptorScope	lib/hwasan/hwasan_thread.h	/^  void EnterInterceptorScope() { in_interceptor_scope_++; }$/;"	f	class:__hwasan::HwasanThread
EnterLoader	lib/cfi/cfi.cc	/^void EnterLoader() {$/;"	f	namespace:__cfi
EnterSignalHandler	lib/hwasan/hwasan_thread.h	/^  void EnterSignalHandler() { in_signal_handler_++; }$/;"	f	class:__hwasan::HwasanThread
EnterSignalHandler	lib/msan/msan_thread.h	/^  void EnterSignalHandler() { in_signal_handler_++; }$/;"	f	class:__msan::MsanThread
EnterSymbolizer	lib/hwasan/hwasan.cc	/^void EnterSymbolizer() {$/;"	f	namespace:__hwasan
EnterSymbolizer	lib/hwasan/hwasan_thread.h	/^  void EnterSymbolizer() { in_symbolizer_++; }$/;"	f	class:__hwasan::HwasanThread
EnterSymbolizer	lib/msan/msan.cc	/^void EnterSymbolizer() { ++is_in_symbolizer; }$/;"	f	namespace:__msan
EnterSymbolizer	lib/tsan/rtl/tsan_symbolize.cc	/^void EnterSymbolizer() {$/;"	f	namespace:__tsan
Entries	lib/esan/esan_hashtable.h	/^  u32 Entries;$/;"	m	class:__esan::HashTable
Entries	lib/xray/xray_interface_internal.h	/^  size_t Entries;$/;"	m	struct:__xray::XRaySledMap
Entry	lib/esan/esan_hashtable.h	/^        *Entry;$/;"	m	class:__esan::HashTable::iterator
EntryTSC	lib/xray/tests/unit/segmented_array_test.cc	/^  uint64_t EntryTSC = 0;$/;"	m	struct:__xray::__anon23::ShadowStackEntry	file:
EntryTSC	lib/xray/xray_function_call_trie.h	/^    uint64_t EntryTSC;$/;"	m	struct:__xray::FunctionCallTrie::ShadowStackEntry
EnvVariable	lib/sanitizer_common/sanitizer_win.cc	/^struct EnvVariable {$/;"	s	namespace:__sanitizer::__anon75	file:
EpochOfLastReadOfOutputCorpus	lib/fuzzer/FuzzerInternal.h	/^  long EpochOfLastReadOfOutputCorpus = 0;$/;"	m	class:fuzzer::Fuzzer
Eq	lib/asan/asan_allocator.h	/^  bool Eq(const AsanChunkView &c) const { return chunk_ == c.chunk_; }$/;"	f	class:__asan::AsanChunkView
Eq	test/fuzzer/StrcmpTest.cpp	/^bool Eq(const uint8_t *Data, size_t Size, const char *Str) {$/;"	f
EqualFunc	lib/esan/esan_hashtable.h	/^  const EqualFuncTy EqualFunc;$/;"	m	class:__esan::HashTable
Error	lib/lsan/lsan_common.cc	/^  const char *Error() { return Red(); }$/;"	f	class:__lsan::Decorator
Error	lib/sanitizer_common/sanitizer_linux.h	/^    Error,$/;"	e	enum:__sanitizer::ThreadLister::Result
Error	lib/sanitizer_common/sanitizer_report_decorator.h	/^  const char *Error() const { return Red(); }$/;"	f	class:__sanitizer::SanitizerCommonDecorator
Error	lib/sanitizer_common/scripts/cpplint.py	/^def Error(filename, linenum, category, confidence, message):$/;"	f
ErrorAction	lib/hwasan/hwasan.cc	/^enum class ErrorAction { Abort, Recover };$/;"	c	file:
ErrorAllocTypeMismatch	lib/asan/asan_errors.h	/^  ErrorAllocTypeMismatch(u32 tid, BufferedStackTrace *stack, uptr addr,$/;"	f	struct:__asan::ErrorAllocTypeMismatch
ErrorAllocTypeMismatch	lib/asan/asan_errors.h	/^struct ErrorAllocTypeMismatch : ErrorBase {$/;"	s	namespace:__asan
ErrorAllocationSizeTooBig	lib/asan/asan_errors.h	/^  ErrorAllocationSizeTooBig(u32 tid, BufferedStackTrace *stack_,$/;"	f	struct:__asan::ErrorAllocationSizeTooBig
ErrorAllocationSizeTooBig	lib/asan/asan_errors.h	/^struct ErrorAllocationSizeTooBig : ErrorBase {$/;"	s	namespace:__asan
ErrorBadParamsToAnnotateContiguousContainer	lib/asan/asan_errors.h	/^  ErrorBadParamsToAnnotateContiguousContainer(u32 tid,$/;"	f	struct:__asan::ErrorBadParamsToAnnotateContiguousContainer
ErrorBadParamsToAnnotateContiguousContainer	lib/asan/asan_errors.h	/^struct ErrorBadParamsToAnnotateContiguousContainer : ErrorBase {$/;"	s	namespace:__asan
ErrorBase	lib/asan/asan_errors.h	/^  ErrorBase(u32 tid_, int initial_score, const char *reason) : tid(tid_) {$/;"	f	struct:__asan::ErrorBase
ErrorBase	lib/asan/asan_errors.h	/^  explicit ErrorBase(u32 tid_) : tid(tid_) {}$/;"	f	struct:__asan::ErrorBase
ErrorBase	lib/asan/asan_errors.h	/^struct ErrorBase {$/;"	s	namespace:__asan
ErrorCallback	lib/sanitizer_common/sanitizer_symbolizer_libbacktrace.cc	/^static void ErrorCallback(void *, const char *, int) {}$/;"	f	file:
ErrorCallocOverflow	lib/asan/asan_errors.h	/^  ErrorCallocOverflow(u32 tid, BufferedStackTrace *stack_, uptr count_,$/;"	f	struct:__asan::ErrorCallocOverflow
ErrorCallocOverflow	lib/asan/asan_errors.h	/^struct ErrorCallocOverflow : ErrorBase {$/;"	s	namespace:__asan
ErrorCode	lib/xray/xray_buffer_queue.h	/^  enum class ErrorCode : unsigned {$/;"	c	class:__xray::BufferQueue
ErrorDeadlySignal	lib/asan/asan_errors.h	/^  ErrorDeadlySignal(u32 tid, const SignalContext &sig)$/;"	f	struct:__asan::ErrorDeadlySignal
ErrorDeadlySignal	lib/asan/asan_errors.h	/^struct ErrorDeadlySignal : ErrorBase {$/;"	s	namespace:__asan
ErrorDescription	lib/asan/asan_errors.h	/^  ErrorDescription() { internal_memset(this, 0, sizeof(*this)); }$/;"	f	struct:__asan::ErrorDescription
ErrorDescription	lib/asan/asan_errors.h	/^  explicit ErrorDescription(LinkerInitialized) {}$/;"	f	struct:__asan::ErrorDescription
ErrorDescription	lib/asan/asan_errors.h	/^struct ErrorDescription {$/;"	s	namespace:__asan
ErrorDoubleFree	lib/asan/asan_errors.h	/^  ErrorDoubleFree(u32 tid, BufferedStackTrace *stack, uptr addr)$/;"	f	struct:__asan::ErrorDoubleFree
ErrorDoubleFree	lib/asan/asan_errors.h	/^struct ErrorDoubleFree : ErrorBase {$/;"	s	namespace:__asan
ErrorExitCode	lib/fuzzer/FuzzerOptions.h	/^  int ErrorExitCode = 77;$/;"	m	struct:fuzzer::FuzzingOptions
ErrorFreeNotMalloced	lib/asan/asan_errors.h	/^  ErrorFreeNotMalloced(u32 tid, BufferedStackTrace *stack, uptr addr)$/;"	f	struct:__asan::ErrorFreeNotMalloced
ErrorFreeNotMalloced	lib/asan/asan_errors.h	/^struct ErrorFreeNotMalloced : ErrorBase {$/;"	s	namespace:__asan
ErrorGeneric	lib/asan/asan_errors.cc	/^ErrorGeneric::ErrorGeneric(u32 tid, uptr pc_, uptr bp_, uptr sp_, uptr addr,$/;"	f	class:__asan::ErrorGeneric
ErrorGeneric	lib/asan/asan_errors.h	/^struct ErrorGeneric : ErrorBase {$/;"	s	namespace:__asan
ErrorInvalidAlignedAllocAlignment	lib/asan/asan_errors.h	/^  ErrorInvalidAlignedAllocAlignment(u32 tid, BufferedStackTrace *stack_,$/;"	f	struct:__asan::ErrorInvalidAlignedAllocAlignment
ErrorInvalidAlignedAllocAlignment	lib/asan/asan_errors.h	/^struct ErrorInvalidAlignedAllocAlignment : ErrorBase {$/;"	s	namespace:__asan
ErrorInvalidAllocationAlignment	lib/asan/asan_errors.h	/^  ErrorInvalidAllocationAlignment(u32 tid, BufferedStackTrace *stack_,$/;"	f	struct:__asan::ErrorInvalidAllocationAlignment
ErrorInvalidAllocationAlignment	lib/asan/asan_errors.h	/^struct ErrorInvalidAllocationAlignment : ErrorBase {$/;"	s	namespace:__asan
ErrorInvalidPointerPair	lib/asan/asan_errors.h	/^  ErrorInvalidPointerPair(u32 tid, uptr pc_, uptr bp_, uptr sp_, uptr p1,$/;"	f	struct:__asan::ErrorInvalidPointerPair
ErrorInvalidPointerPair	lib/asan/asan_errors.h	/^struct ErrorInvalidPointerPair : ErrorBase {$/;"	s	namespace:__asan
ErrorInvalidPosixMemalignAlignment	lib/asan/asan_errors.h	/^  ErrorInvalidPosixMemalignAlignment(u32 tid, BufferedStackTrace *stack_,$/;"	f	struct:__asan::ErrorInvalidPosixMemalignAlignment
ErrorInvalidPosixMemalignAlignment	lib/asan/asan_errors.h	/^struct ErrorInvalidPosixMemalignAlignment : ErrorBase {$/;"	s	namespace:__asan
ErrorKind	lib/asan/asan_errors.h	/^enum ErrorKind {$/;"	g	namespace:__asan
ErrorMallocUsableSizeNotOwned	lib/asan/asan_errors.h	/^  ErrorMallocUsableSizeNotOwned(u32 tid, BufferedStackTrace *stack_, uptr addr)$/;"	f	struct:__asan::ErrorMallocUsableSizeNotOwned
ErrorMallocUsableSizeNotOwned	lib/asan/asan_errors.h	/^struct ErrorMallocUsableSizeNotOwned : ErrorBase {$/;"	s	namespace:__asan
ErrorNewDeleteTypeMismatch	lib/asan/asan_errors.h	/^  ErrorNewDeleteTypeMismatch(u32 tid, BufferedStackTrace *stack, uptr addr,$/;"	f	struct:__asan::ErrorNewDeleteTypeMismatch
ErrorNewDeleteTypeMismatch	lib/asan/asan_errors.h	/^struct ErrorNewDeleteTypeMismatch : ErrorBase {$/;"	s	namespace:__asan
ErrorODRViolation	lib/asan/asan_errors.h	/^  ErrorODRViolation(u32 tid, const __asan_global *g1, u32 stack_id1_,$/;"	f	struct:__asan::ErrorODRViolation
ErrorODRViolation	lib/asan/asan_errors.h	/^struct ErrorODRViolation : ErrorBase {$/;"	s	namespace:__asan
ErrorOutOfMemory	lib/asan/asan_errors.h	/^  ErrorOutOfMemory(u32 tid, BufferedStackTrace *stack_, uptr requested_size_)$/;"	f	struct:__asan::ErrorOutOfMemory
ErrorOutOfMemory	lib/asan/asan_errors.h	/^struct ErrorOutOfMemory : ErrorBase {$/;"	s	namespace:__asan
ErrorPvallocOverflow	lib/asan/asan_errors.h	/^  ErrorPvallocOverflow(u32 tid, BufferedStackTrace *stack_, uptr size_)$/;"	f	struct:__asan::ErrorPvallocOverflow
ErrorPvallocOverflow	lib/asan/asan_errors.h	/^struct ErrorPvallocOverflow : ErrorBase {$/;"	s	namespace:__asan
ErrorReportCallbackOneToZ	test/asan/TestCases/error_report_callback.cc	/^static void ErrorReportCallbackOneToZ(const char *report) {$/;"	f	file:
ErrorRssLimitExceeded	lib/asan/asan_errors.h	/^  ErrorRssLimitExceeded(u32 tid, BufferedStackTrace *stack_)$/;"	f	struct:__asan::ErrorRssLimitExceeded
ErrorRssLimitExceeded	lib/asan/asan_errors.h	/^struct ErrorRssLimitExceeded : ErrorBase {$/;"	s	namespace:__asan
ErrorSanitizerGetAllocatedSizeNotOwned	lib/asan/asan_errors.h	/^  ErrorSanitizerGetAllocatedSizeNotOwned(u32 tid, BufferedStackTrace *stack_,$/;"	f	struct:__asan::ErrorSanitizerGetAllocatedSizeNotOwned
ErrorSanitizerGetAllocatedSizeNotOwned	lib/asan/asan_errors.h	/^struct ErrorSanitizerGetAllocatedSizeNotOwned : ErrorBase {$/;"	s	namespace:__asan
ErrorStringFunctionMemoryRangesOverlap	lib/asan/asan_errors.h	/^  ErrorStringFunctionMemoryRangesOverlap(u32 tid, BufferedStackTrace *stack_,$/;"	f	struct:__asan::ErrorStringFunctionMemoryRangesOverlap
ErrorStringFunctionMemoryRangesOverlap	lib/asan/asan_errors.h	/^struct ErrorStringFunctionMemoryRangesOverlap : ErrorBase {$/;"	s	namespace:__asan
ErrorStringFunctionSizeOverflow	lib/asan/asan_errors.h	/^  ErrorStringFunctionSizeOverflow(u32 tid, BufferedStackTrace *stack_,$/;"	f	struct:__asan::ErrorStringFunctionSizeOverflow
ErrorStringFunctionSizeOverflow	lib/asan/asan_errors.h	/^struct ErrorStringFunctionSizeOverflow : ErrorBase {$/;"	s	namespace:__asan
ErrorType	lib/ubsan/ubsan_diag.h	/^enum class ErrorType {$/;"	c	namespace:__ubsan
EsanDuringInit	lib/esan/esan.cpp	/^bool EsanDuringInit;$/;"	m	namespace:__esan	file:
EsanFlagsDontUseDirectly	lib/esan/esan_flags.cpp	/^Flags EsanFlagsDontUseDirectly;$/;"	m	namespace:__esan	file:
EsanIsInitialized	lib/esan/esan.cpp	/^bool EsanIsInitialized;$/;"	m	namespace:__esan	file:
EsanOptsEnv	lib/esan/esan_flags.cpp	/^static const char EsanOptsEnv[] = "ESAN_OPTIONS";$/;"	m	namespace:__esan	file:
Event	lib/tsan/rtl/tsan_trace.h	/^typedef u64 Event;$/;"	t	namespace:__tsan
Event	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^  Event(Type type, const void *ptr = 0, uptr arg = 0, uptr arg2 = 0)$/;"	f	struct:Event
Event	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^struct Event {$/;"	s	file:
EventType	lib/tsan/rtl/tsan_trace.h	/^enum EventType {$/;"	g	namespace:__tsan
EventTypeFuncEnter	lib/tsan/rtl/tsan_trace.h	/^  EventTypeFuncEnter,$/;"	e	enum:__tsan::EventType
EventTypeFuncExit	lib/tsan/rtl/tsan_trace.h	/^  EventTypeFuncExit,$/;"	e	enum:__tsan::EventType
EventTypeLock	lib/tsan/rtl/tsan_trace.h	/^  EventTypeLock,$/;"	e	enum:__tsan::EventType
EventTypeMop	lib/tsan/rtl/tsan_trace.h	/^  EventTypeMop,$/;"	e	enum:__tsan::EventType
EventTypeRLock	lib/tsan/rtl/tsan_trace.h	/^  EventTypeRLock,$/;"	e	enum:__tsan::EventType
EventTypeRUnlock	lib/tsan/rtl/tsan_trace.h	/^  EventTypeRUnlock$/;"	e	enum:__tsan::EventType
EventTypeUnlock	lib/tsan/rtl/tsan_trace.h	/^  EventTypeUnlock,$/;"	e	enum:__tsan::EventType
ExactArtifactPath	lib/fuzzer/FuzzerOptions.h	/^  std::string ExactArtifactPath;$/;"	m	struct:fuzzer::FuzzingOptions
ExceptionHandler	lib/fuzzer/FuzzerUtilWindows.cpp	/^static LONG CALLBACK ExceptionHandler(PEXCEPTION_POINTERS ExceptionInfo) {$/;"	f	namespace:fuzzer
ExecuteCallback	lib/fuzzer/FuzzerLoop.cpp	/^void Fuzzer::ExecuteCallback(const uint8_t *Data, size_t Size) {$/;"	f	class:fuzzer::Fuzzer
ExecuteCommand	lib/fuzzer/FuzzerUtilDarwin.cpp	/^int ExecuteCommand(const Command &Cmd) {$/;"	f	namespace:fuzzer
ExecuteCommand	lib/fuzzer/FuzzerUtilFuchsia.cpp	/^int ExecuteCommand(const Command &Cmd) {$/;"	f	namespace:fuzzer
ExecuteCommand	lib/fuzzer/FuzzerUtilLinux.cpp	/^int ExecuteCommand(const Command &Cmd) {$/;"	f	namespace:fuzzer
ExecuteCommand	lib/fuzzer/FuzzerUtilWindows.cpp	/^int ExecuteCommand(const Command &Cmd) {$/;"	f	namespace:fuzzer
ExecuteFilesOnyByOne	lib/fuzzer/afl/afl_driver.cpp	/^int ExecuteFilesOnyByOne(int argc, char **argv) {$/;"	f
ExitCallback	lib/fuzzer/FuzzerLoop.cpp	/^void Fuzzer::ExitCallback() {$/;"	f	class:fuzzer::Fuzzer
ExitFromThread	test/lsan/TestCases/Linux/fork_threaded.cc	/^void ExitFromThread() {$/;"	f
ExitLoader	lib/cfi/cfi.cc	/^void ExitLoader() {$/;"	f	namespace:__cfi
ExitOnErr	lib/fuzzer/FuzzerUtilFuchsia.cpp	/^void ExitOnErr(zx_status_t Status, const char *Syscall) {$/;"	f	namespace:fuzzer::__anon35
ExitOnItem	lib/fuzzer/FuzzerOptions.h	/^  std::string ExitOnItem;$/;"	m	struct:fuzzer::FuzzingOptions
ExitOnSrcPos	lib/fuzzer/FuzzerOptions.h	/^  std::string ExitOnSrcPos;$/;"	m	struct:fuzzer::FuzzingOptions
ExitSymbolizer	lib/hwasan/hwasan.cc	/^void ExitSymbolizer() {$/;"	f	namespace:__hwasan
ExitSymbolizer	lib/msan/msan.cc	/^void ExitSymbolizer()  { --is_in_symbolizer; }$/;"	f	namespace:__msan
ExitSymbolizer	lib/tsan/rtl/tsan_symbolize.cc	/^void ExitSymbolizer() {$/;"	f	namespace:__tsan
Expect	lib/tsan/tests/unit/tsan_mutexset_test.cc	/^static void Expect(const MutexSet &mset, uptr i, u64 id, bool write, u64 epoch,$/;"	f	namespace:__tsan
ExpectPoisoned	lib/msan/tests/msan_test.cc	/^void ExpectPoisoned(const T& t) {$/;"	f
ExpectPoisonedWithOrigin	lib/msan/tests/msan_test.cc	/^void ExpectPoisonedWithOrigin(const T& t, unsigned origin) {$/;"	f
ExpectRace	lib/tsan/rtl/tsan_interface_ann.cc	/^struct ExpectRace {$/;"	s	namespace:__tsan	file:
ExpectReport	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^  void ExpectReport(ReportType type) {$/;"	f	struct:Event
ExpectUserHandler	test/asan/TestCases/Linux/preinstalled_signal.cc	/^bool ExpectUserHandler() {$/;"	f
ExpectedProfilingFileHeader	lib/xray/tests/unit/profile_collector_test.cc	/^struct ExpectedProfilingFileHeader {$/;"	s	namespace:__xray::__anon22	file:
ExpectedProfilingVersion	lib/xray/tests/unit/profile_collector_test.cc	/^constexpr uptr ExpectedProfilingVersion = 0x20180424;$/;"	m	namespace:__xray::__anon22	file:
Extension	lib/sanitizer_common/scripts/cpplint.py	/^  def Extension(self):$/;"	m	class:FileInfo
Extents	lib/xray/xray_buffer_queue.h	/^    BufferExtents *Extents;$/;"	m	struct:__xray::BufferQueue::Buffer
ExternalAccess	lib/tsan/rtl/tsan_external.cc	/^void ExternalAccess(void *addr, void *caller_pc, void *tag, AccessFunc access) {$/;"	f	namespace:__tsan
ExternalFunctions	lib/fuzzer/FuzzerExtFunctions.h	/^struct ExternalFunctions {$/;"	s	namespace:fuzzer
ExternalFunctions	lib/fuzzer/FuzzerExtFunctionsDlsym.cpp	/^ExternalFunctions::ExternalFunctions() {$/;"	f	class:fuzzer::ExternalFunctions
ExternalFunctions	lib/fuzzer/FuzzerExtFunctionsDlsymWin.cpp	/^ExternalFunctions::ExternalFunctions() {$/;"	f	class:fuzzer::ExternalFunctions
ExternalFunctions	lib/fuzzer/FuzzerExtFunctionsWeak.cpp	/^ExternalFunctions::ExternalFunctions() {$/;"	f	class:fuzzer::ExternalFunctions
ExternalFunctions	lib/fuzzer/FuzzerExtFunctionsWeakAlias.cpp	/^ExternalFunctions::ExternalFunctions() {$/;"	f	class:fuzzer::ExternalFunctions
ExternalMopDesc	lib/tsan/rtl/tsan_report.cc	/^static const char *ExternalMopDesc(bool first, bool write) {$/;"	f	namespace:__tsan
ExternalWrite	test/tsan/Darwin/external-dups.cc	/^void ExternalWrite(void *addr) {$/;"	f
ExternalWrite	test/tsan/Darwin/external-swift-debugging.cc	/^void ExternalWrite(void *addr) {$/;"	f
ExternalWrite	test/tsan/Darwin/external-swift.cc	/^void ExternalWrite(void *addr) {$/;"	f
ExtraCountersBegin	lib/fuzzer/FuzzerExtraCounters.cpp	/^uint8_t *ExtraCountersBegin() { return &__start___libfuzzer_extra_counters; }$/;"	f	namespace:fuzzer
ExtraCountersEnd	lib/fuzzer/FuzzerExtraCounters.cpp	/^uint8_t *ExtraCountersEnd() { return &__stop___libfuzzer_extra_counters; }$/;"	f	namespace:fuzzer
ExtractInt	lib/sanitizer_common/sanitizer_symbolizer_libcdep.cc	/^const char *ExtractInt(const char *str, const char *delims, int *result) {$/;"	f	namespace:__sanitizer
ExtractRecvmsgFDs	lib/tsan/rtl/tsan_platform_linux.cc	/^int ExtractRecvmsgFDs(void *msgp, int *fds, int nfd) {$/;"	f	namespace:__tsan
ExtractResolvFDs	lib/tsan/rtl/tsan_platform_linux.cc	/^int ExtractResolvFDs(void *state, int *fds, int nfd) {$/;"	f	namespace:__tsan
ExtractTagFromStack	lib/tsan/rtl/tsan_rtl.h	/^void ExtractTagFromStack(StackTraceTy *stack, uptr *tag = nullptr) {$/;"	f	namespace:__tsan
ExtractToken	lib/sanitizer_common/sanitizer_symbolizer_libcdep.cc	/^const char *ExtractToken(const char *str, const char *delims, char **result) {$/;"	f	namespace:__sanitizer
ExtractTokenUpToDelimiter	lib/sanitizer_common/sanitizer_symbolizer_libcdep.cc	/^const char *ExtractTokenUpToDelimiter(const char *str, const char *delimiter,$/;"	f	namespace:__sanitizer
ExtractUptr	lib/sanitizer_common/sanitizer_symbolizer_libcdep.cc	/^const char *ExtractUptr(const char *str, const char *delims, uptr *result) {$/;"	f	namespace:__sanitizer
F	lib/fuzzer/FuzzerLoop.cpp	/^static Fuzzer *F;$/;"	m	namespace:fuzzer	file:
F	lib/sanitizer_common/tests/sanitizer_format_interceptor_test.cc	/^static const unsigned F = sizeof(float);$/;"	v	file:
F	lib/tsan/rtl/tsan_md5.cc	17;"	d	file:
F	test/fuzzer/CallerCalleeTest.cpp	/^typedef void (*F)();$/;"	t	file:
F	test/hwasan/TestCases/check-interface.cc	12;"	d	file:
F	test/tsan/deep_stack1.cc	/^void (*volatile F)();$/;"	v
F	test/tsan/vptr_benign_race.cc	/^  virtual void F() {$/;"	f	struct:A
F	test/tsan/vptr_benign_race.cc	/^  virtual void F() {$/;"	f	struct:B
F	test/tsan/vptr_harmful_race.cc	/^  virtual void F() {$/;"	f	struct:A
F	test/tsan/vptr_harmful_race.cc	/^  virtual void F() {$/;"	f	struct:B
F	test/tsan/vptr_harmful_race2.cc	/^  virtual void F() {$/;"	f	struct:A
F	test/tsan/vptr_harmful_race2.cc	/^  virtual void F() {$/;"	f	struct:B
F	test/tsan/vptr_harmful_race3.cc	/^  virtual void F() {$/;"	f	struct:A
F	test/tsan/vptr_harmful_race3.cc	/^  virtual void F() {$/;"	f	struct:B
F	test/tsan/vptr_harmful_race4.cc	/^  virtual void F() {$/;"	f	struct:A
F	test/tsan/vptr_harmful_race4.cc	/^  virtual void F() {$/;"	f	struct:B
FAILED	include/xray/xray_interface.h	/^  FAILED = 3,$/;"	e	enum:XRayPatchingStatus
FALLTHROUGH_TAIL_CALL	lib/builtins/hexagon/common_entry_exit_abi1.S	/^FALLTHROUGH_TAIL_CALL __restore_r24_through_r27_and_deallocframe_before_tailcall __restore_r24_through_r25_and_deallocframe_before_tailcall$/;"	l
FALLTHROUGH_TAIL_CALL	lib/builtins/hexagon/common_entry_exit_abi1.S	/^FALLTHROUGH_TAIL_CALL __save_r24_through_r27 __save_r24_through_r25$/;"	l
FALLTHROUGH_TAIL_CALL	lib/builtins/hexagon/common_entry_exit_legacy.S	/^FALLTHROUGH_TAIL_CALL __restore_r27_through_r16_and_deallocframe __restore_r27_through_r20_and_deallocframe$/;"	l
FALLTHROUGH_TAIL_CALL	lib/builtins/hexagon/common_entry_exit_legacy.S	/^FALLTHROUGH_TAIL_CALL __restore_r27_through_r16_and_deallocframe_before_sibcall __restore_r27_through_r18_and_deallocframe_before_sibcall$/;"	l
FALLTHROUGH_TAIL_CALL	lib/builtins/hexagon/common_entry_exit_legacy.S	/^FALLTHROUGH_TAIL_CALL __restore_r27_through_r18_and_deallocframe __restore_r27_through_r22_and_deallocframe$/;"	l
FALLTHROUGH_TAIL_CALL	lib/builtins/hexagon/common_entry_exit_legacy.S	/^FALLTHROUGH_TAIL_CALL __restore_r27_through_r18_and_deallocframe_before_sibcall __restore_r27_through_r22_and_deallocframe_before_sibcall$/;"	l
FALLTHROUGH_TAIL_CALL	lib/builtins/hexagon/common_entry_exit_legacy.S	/^FALLTHROUGH_TAIL_CALL __restore_r27_through_r20_and_deallocframe __restore_r27_through_r24_and_deallocframe$/;"	l
FALLTHROUGH_TAIL_CALL	lib/builtins/hexagon/common_entry_exit_legacy.S	/^FALLTHROUGH_TAIL_CALL __restore_r27_through_r20_and_deallocframe_before_sibcall __restore_r27_through_r24_and_deallocframe_before_sibcall$/;"	l
FALLTHROUGH_TAIL_CALL	lib/builtins/hexagon/common_entry_exit_legacy.S	/^FALLTHROUGH_TAIL_CALL __restore_r27_through_r22_and_deallocframe __restore_r27_through_r26_and_deallocframe$/;"	l
FALLTHROUGH_TAIL_CALL	lib/builtins/hexagon/common_entry_exit_legacy.S	/^FALLTHROUGH_TAIL_CALL __restore_r27_through_r22_and_deallocframe_before_sibcall __restore_r27_through_r26_and_deallocframe_before_sibcall$/;"	l
FALLTHROUGH_TAIL_CALL	lib/builtins/hexagon/common_entry_exit_legacy.S	/^FALLTHROUGH_TAIL_CALL __save_r27_through_r16 __save_r27_through_r18$/;"	l
FALLTHROUGH_TAIL_CALL	lib/builtins/hexagon/common_entry_exit_legacy.S	/^FALLTHROUGH_TAIL_CALL __save_r27_through_r18 __save_r27_through_r20$/;"	l
FALLTHROUGH_TAIL_CALL	lib/builtins/hexagon/common_entry_exit_legacy.S	/^FALLTHROUGH_TAIL_CALL __save_r27_through_r20 __save_r27_through_r22$/;"	l
FALLTHROUGH_TAIL_CALL	lib/builtins/hexagon/common_entry_exit_legacy.S	/^FALLTHROUGH_TAIL_CALL __save_r27_through_r22 __save_r27_through_r24$/;"	l
FAST2_ALIAS	lib/builtins/hexagon/dfaddsub.S	/^#define FAST2_ALIAS(TAG) .global __hexagon_fast2_##TAG ; .set __hexagon_fast2_##TAG, __hexagon_##TAG$/;"	d
FAST2_ALIAS	lib/builtins/hexagon/dfdiv.S	/^#define FAST2_ALIAS(TAG) .global __hexagon_fast2_##TAG ; .set __hexagon_fast2_##TAG, __hexagon_##TAG$/;"	d
FAST2_ALIAS	lib/builtins/hexagon/dfmul.S	/^#define FAST2_ALIAS(TAG) .global __hexagon_fast2_##TAG ; .set __hexagon_fast2_##TAG, __hexagon_##TAG$/;"	d
FAST2_ALIAS	lib/builtins/hexagon/dfsqrt.S	/^#define FAST2_ALIAS(TAG) .global __hexagon_fast2_##TAG ; .set __hexagon_fast2_##TAG, __hexagon_##TAG; .type __hexagon_fast2_##TAG,@function$/;"	d
FAST2_ALIAS	lib/builtins/hexagon/sfdiv_opt.S	/^#define FAST2_ALIAS(TAG) .global __hexagon_fast2_##TAG ; .set __hexagon_fast2_##TAG, __hexagon_##TAG$/;"	d
FAST2_ALIAS	lib/builtins/hexagon/sfsqrt_opt.S	/^#define FAST2_ALIAS(TAG) .global __hexagon_fast2_##TAG ; .set __hexagon_fast2_##TAG, __hexagon_##TAG$/;"	d
FAST_ALIAS	lib/builtins/hexagon/dfaddsub.S	/^#define FAST_ALIAS(TAG) .global __hexagon_fast_##TAG ; .set __hexagon_fast_##TAG, __hexagon_##TAG$/;"	d
FAST_ALIAS	lib/builtins/hexagon/dfdiv.S	/^#define FAST_ALIAS(TAG) .global __hexagon_fast_##TAG ; .set __hexagon_fast_##TAG, __hexagon_##TAG$/;"	d
FAST_ALIAS	lib/builtins/hexagon/dfmul.S	/^#define FAST_ALIAS(TAG) .global __hexagon_fast_##TAG ; .set __hexagon_fast_##TAG, __hexagon_##TAG$/;"	d
FAST_ALIAS	lib/builtins/hexagon/dfsqrt.S	/^#define FAST_ALIAS(TAG) .global __hexagon_fast_##TAG ; .set __hexagon_fast_##TAG, __hexagon_##TAG; .type __hexagon_fast_##TAG,@function$/;"	d
FAST_ALIAS	lib/builtins/hexagon/sfdiv_opt.S	/^#define FAST_ALIAS(TAG) .global __hexagon_fast_##TAG ; .set __hexagon_fast_##TAG, __hexagon_##TAG$/;"	d
FAST_ALIAS	lib/builtins/hexagon/sfsqrt_opt.S	/^#define FAST_ALIAS(TAG) .global __hexagon_fast_##TAG ; .set __hexagon_fast_##TAG, __hexagon_##TAG$/;"	d
FDRFlags	lib/xray/xray_fdr_flags.h	/^struct FDRFlags {$/;"	s	namespace:__xray
FDRLoggingOptions	include/xray/xray_log_interface.h	/^struct FDRLoggingOptions {$/;"	s	namespace:__xray
FDROptions	lib/xray/xray_fdr_logging.cc	/^static FDRLoggingOptions FDROptions;$/;"	m	namespace:__xray	file:
FDROptionsMutex	lib/xray/xray_fdr_logging.cc	/^static SpinMutex FDROptionsMutex;$/;"	m	namespace:__xray	file:
FDR_LOG	include/xray/xray_records.h	/^  FDR_LOG = 1,$/;"	e	enum:__xray::FileTypes
FEATURE_AES	lib/builtins/cpu_model.c	/^  FEATURE_AES,$/;"	e	enum:ProcessorFeatures	file:
FEATURE_AVX	lib/builtins/cpu_model.c	/^  FEATURE_AVX,$/;"	e	enum:ProcessorFeatures	file:
FEATURE_AVX2	lib/builtins/cpu_model.c	/^  FEATURE_AVX2,$/;"	e	enum:ProcessorFeatures	file:
FEATURE_AVX5124FMAPS	lib/builtins/cpu_model.c	/^  FEATURE_AVX5124FMAPS,$/;"	e	enum:ProcessorFeatures	file:
FEATURE_AVX5124VNNIW	lib/builtins/cpu_model.c	/^  FEATURE_AVX5124VNNIW,$/;"	e	enum:ProcessorFeatures	file:
FEATURE_AVX512BW	lib/builtins/cpu_model.c	/^  FEATURE_AVX512BW,$/;"	e	enum:ProcessorFeatures	file:
FEATURE_AVX512CD	lib/builtins/cpu_model.c	/^  FEATURE_AVX512CD,$/;"	e	enum:ProcessorFeatures	file:
FEATURE_AVX512DQ	lib/builtins/cpu_model.c	/^  FEATURE_AVX512DQ,$/;"	e	enum:ProcessorFeatures	file:
FEATURE_AVX512ER	lib/builtins/cpu_model.c	/^  FEATURE_AVX512ER,$/;"	e	enum:ProcessorFeatures	file:
FEATURE_AVX512F	lib/builtins/cpu_model.c	/^  FEATURE_AVX512F,$/;"	e	enum:ProcessorFeatures	file:
FEATURE_AVX512IFMA	lib/builtins/cpu_model.c	/^  FEATURE_AVX512IFMA,$/;"	e	enum:ProcessorFeatures	file:
FEATURE_AVX512PF	lib/builtins/cpu_model.c	/^  FEATURE_AVX512PF,$/;"	e	enum:ProcessorFeatures	file:
FEATURE_AVX512VBMI	lib/builtins/cpu_model.c	/^  FEATURE_AVX512VBMI,$/;"	e	enum:ProcessorFeatures	file:
FEATURE_AVX512VL	lib/builtins/cpu_model.c	/^  FEATURE_AVX512VL,$/;"	e	enum:ProcessorFeatures	file:
FEATURE_AVX512VPOPCNTDQ	lib/builtins/cpu_model.c	/^  FEATURE_AVX512VPOPCNTDQ$/;"	e	enum:ProcessorFeatures	file:
FEATURE_BMI	lib/builtins/cpu_model.c	/^  FEATURE_BMI,$/;"	e	enum:ProcessorFeatures	file:
FEATURE_BMI2	lib/builtins/cpu_model.c	/^  FEATURE_BMI2,$/;"	e	enum:ProcessorFeatures	file:
FEATURE_CMOV	lib/builtins/cpu_model.c	/^  FEATURE_CMOV = 0,$/;"	e	enum:ProcessorFeatures	file:
FEATURE_FMA	lib/builtins/cpu_model.c	/^  FEATURE_FMA,$/;"	e	enum:ProcessorFeatures	file:
FEATURE_FMA4	lib/builtins/cpu_model.c	/^  FEATURE_FMA4,$/;"	e	enum:ProcessorFeatures	file:
FEATURE_MMX	lib/builtins/cpu_model.c	/^  FEATURE_MMX,$/;"	e	enum:ProcessorFeatures	file:
FEATURE_PCLMUL	lib/builtins/cpu_model.c	/^  FEATURE_PCLMUL,$/;"	e	enum:ProcessorFeatures	file:
FEATURE_POPCNT	lib/builtins/cpu_model.c	/^  FEATURE_POPCNT,$/;"	e	enum:ProcessorFeatures	file:
FEATURE_SSE	lib/builtins/cpu_model.c	/^  FEATURE_SSE,$/;"	e	enum:ProcessorFeatures	file:
FEATURE_SSE2	lib/builtins/cpu_model.c	/^  FEATURE_SSE2,$/;"	e	enum:ProcessorFeatures	file:
FEATURE_SSE3	lib/builtins/cpu_model.c	/^  FEATURE_SSE3,$/;"	e	enum:ProcessorFeatures	file:
FEATURE_SSE4_1	lib/builtins/cpu_model.c	/^  FEATURE_SSE4_1,$/;"	e	enum:ProcessorFeatures	file:
FEATURE_SSE4_2	lib/builtins/cpu_model.c	/^  FEATURE_SSE4_2,$/;"	e	enum:ProcessorFeatures	file:
FEATURE_SSE4_A	lib/builtins/cpu_model.c	/^  FEATURE_SSE4_A,$/;"	e	enum:ProcessorFeatures	file:
FEATURE_SSSE3	lib/builtins/cpu_model.c	/^  FEATURE_SSSE3,$/;"	e	enum:ProcessorFeatures	file:
FEATURE_XOP	lib/builtins/cpu_model.c	/^  FEATURE_XOP,$/;"	e	enum:ProcessorFeatures	file:
FILE_LEVEL_DIRECTIVE	lib/builtins/assembly.h	29;"	d
FILE_LEVEL_DIRECTIVE	lib/builtins/assembly.h	39;"	d
FILE_LEVEL_DIRECTIVE	lib/builtins/assembly.h	58;"	d
FILE_TO_READ	lib/msan/tests/msan_test.cc	115;"	d	file:
FILE_TO_READ	lib/msan/tests/msan_test.cc	121;"	d	file:
FIRST_32_SECOND_64	lib/sanitizer_common/sanitizer_platform.h	125;"	d
FIRST_32_SECOND_64	lib/sanitizer_common/sanitizer_platform.h	127;"	d
FId	lib/xray/xray_function_call_trie.h	/^    int32_t FId;$/;"	m	struct:__xray::FunctionCallTrie::Node
FId	lib/xray/xray_function_call_trie.h	/^    int32_t FId;$/;"	m	struct:__xray::FunctionCallTrie::NodeIdPair
FNALIAS	lib/builtins/int_lib.h	24;"	d
FNALIAS	lib/builtins/int_lib.h	28;"	d
FOO	test/profile/Inputs/comdat_rename.h	/^  FOO() : a(0), b(0) {}$/;"	f	struct:FOO
FOO	test/profile/Inputs/comdat_rename.h	/^struct FOO {$/;"	s
FOO	test/profile/Inputs/instrprof-comdat.h	/^  FOO() : t(0) {}$/;"	f	class:FOO
FOO	test/profile/Inputs/instrprof-comdat.h	/^template <class T> class FOO {$/;"	c
FOO	test/sanitizer_common/TestCases/Posix/dedup_token_length_test.cc	/^void FOO() {$/;"	f
FOREACH_REGISTER	lib/fuzzer/FuzzerUtilFuchsia.cpp	119;"	d	file:
FOREACH_REGISTER	lib/fuzzer/FuzzerUtilFuchsia.cpp	99;"	d	file:
FORMAT	lib/sanitizer_common/sanitizer_internal_defs.h	212;"	d
FORMAT	lib/sanitizer_common/sanitizer_internal_defs.h	226;"	d
FP	test/profile/Inputs/instrprof-alloc.c	/^void (*FP)();$/;"	v
FP	test/profile/Linux/instrprof-merge-vp.c	/^typedef void (*FP)(void);$/;"	t	file:
FPT	test/profile/Inputs/instrprof-value-prof-evict.c	/^typedef void (*FPT)(void);$/;"	t	file:
FPT	test/profile/Inputs/instrprof-value-prof-real.c	/^typedef void (*FPT)(void);$/;"	t	file:
FPT	test/profile/instrprof-value-prof-reset.c	/^typedef void (*FPT)(void);$/;"	t	file:
FPTR	test/asan/TestCases/Windows/crt_initializers.cc	/^typedef void (*FPTR)();$/;"	t	file:
FP_EXTEND_HEADER	lib/builtins/fp_extend.h	15;"	d
FP_LIB_HEADER	lib/builtins/fp_lib.h	22;"	d
FP_TRUNC_HEADER	lib/builtins/fp_trunc.h	15;"	d
FRACRAD	lib/builtins/hexagon/dfsqrt.S	/^		FRACRAD = A$/;"	d
FRACRAD	lib/builtins/hexagon/dfsqrt.S	/^		FRACRAD = asl(FRACRAD,SHIFTAMT)		\/\/ Move fracrad bits to right place$/;"	d
FRACRAD	lib/builtins/hexagon/dfsqrt.S	/^#define FRACRAD r11:10$/;"	d
FRACRADH	lib/builtins/hexagon/dfsqrt.S	/^		FRACRADH = insert(S_ONE,#DF_EXPBITS+1,#DF_MANTBITS-32)	\/\/ replace upper bits with hidden$/;"	d
FRACRADH	lib/builtins/hexagon/dfsqrt.S	/^#define FRACRADH r11$/;"	d
FRACRADL	lib/builtins/hexagon/dfsqrt.S	/^#define FRACRADL r10$/;"	d
FRAME_SIZE	lib/sanitizer_common/sanitizer_linux.cc	1387;"	d	file:
FRAME_SIZE	test/asan/TestCases/uar_and_exceptions.cc	10;"	d	file:
FRAME_TOC_SAVE_OFFSET	lib/sanitizer_common/sanitizer_linux.cc	1388;"	d	file:
FROM_MALLOC	lib/asan/asan_allocator.h	/^  FROM_MALLOC = 1,  \/\/ Memory block came from malloc, calloc, realloc, etc.$/;"	e	enum:__asan::AllocType
FROM_NEW	lib/asan/asan_allocator.h	/^  FROM_NEW = 2,     \/\/ Memory block came from operator new.$/;"	e	enum:__asan::AllocType
FROM_NEW_BR	lib/asan/asan_allocator.h	/^  FROM_NEW_BR = 3   \/\/ Memory block came from operator new [ ]$/;"	e	enum:__asan::AllocType
FUDGE	lib/builtins/hexagon/dffma.S	/^#define FUDGE 7$/;"	d
FUDGE	lib/builtins/hexagon/dfmul.S	/^#define FUDGE 5$/;"	d
FUDGE1	lib/builtins/hexagon/dfdiv.S	/^#define FUDGE1 7	\/\/ how much to shift right$/;"	d
FUDGE2	lib/builtins/hexagon/dfdiv.S	/^#define FUDGE2 4	\/\/ how many guard\/round to keep at lsbs$/;"	d
FUDGE2	lib/builtins/hexagon/dffma.S	/^#define FUDGE2 3$/;"	d
FUNC	test/asan/TestCases/Linux/preinit_test.cc	/^int FUNC() {$/;"	f
FUNCTION_BEGIN	lib/builtins/hexagon/common_entry_exit_abi1.S	/^FUNCTION_BEGIN __restore_r24_through_r25_and_deallocframe$/;"	l
FUNCTION_BEGIN	lib/builtins/hexagon/common_entry_exit_abi1.S	/^FUNCTION_BEGIN __restore_r24_through_r27_and_deallocframe$/;"	l
FUNCTION_BEGIN	lib/builtins/hexagon/common_entry_exit_abi1.S	/^FUNCTION_BEGIN __restore_r24_through_r27_and_deallocframe_before_tailcall$/;"	l
FUNCTION_BEGIN	lib/builtins/hexagon/common_entry_exit_abi1.S	/^FUNCTION_BEGIN __save_r24_through_r27$/;"	l
FUNCTION_BEGIN	lib/builtins/hexagon/common_entry_exit_abi2.S	/^FUNCTION_BEGIN __deallocframe$/;"	l
FUNCTION_BEGIN	lib/builtins/hexagon/common_entry_exit_abi2.S	/^FUNCTION_BEGIN __restore_r16_through_r17_and_deallocframe$/;"	l
FUNCTION_BEGIN	lib/builtins/hexagon/common_entry_exit_abi2.S	/^FUNCTION_BEGIN __restore_r16_through_r17_and_deallocframe_before_tailcall$/;"	l
FUNCTION_BEGIN	lib/builtins/hexagon/common_entry_exit_abi2.S	/^FUNCTION_BEGIN __restore_r16_through_r19_and_deallocframe$/;"	l
FUNCTION_BEGIN	lib/builtins/hexagon/common_entry_exit_abi2.S	/^FUNCTION_BEGIN __restore_r16_through_r19_and_deallocframe_before_tailcall$/;"	l
FUNCTION_BEGIN	lib/builtins/hexagon/common_entry_exit_abi2.S	/^FUNCTION_BEGIN __restore_r16_through_r21_and_deallocframe$/;"	l
FUNCTION_BEGIN	lib/builtins/hexagon/common_entry_exit_abi2.S	/^FUNCTION_BEGIN __restore_r16_through_r21_and_deallocframe_before_tailcall$/;"	l
FUNCTION_BEGIN	lib/builtins/hexagon/common_entry_exit_abi2.S	/^FUNCTION_BEGIN __restore_r16_through_r23_and_deallocframe$/;"	l
FUNCTION_BEGIN	lib/builtins/hexagon/common_entry_exit_abi2.S	/^FUNCTION_BEGIN __restore_r16_through_r23_and_deallocframe_before_tailcall$/;"	l
FUNCTION_BEGIN	lib/builtins/hexagon/common_entry_exit_abi2.S	/^FUNCTION_BEGIN __restore_r16_through_r25_and_deallocframe$/;"	l
FUNCTION_BEGIN	lib/builtins/hexagon/common_entry_exit_abi2.S	/^FUNCTION_BEGIN __restore_r16_through_r25_and_deallocframe_before_tailcall$/;"	l
FUNCTION_BEGIN	lib/builtins/hexagon/common_entry_exit_abi2.S	/^FUNCTION_BEGIN __restore_r16_through_r27_and_deallocframe$/;"	l
FUNCTION_BEGIN	lib/builtins/hexagon/common_entry_exit_abi2.S	/^FUNCTION_BEGIN __restore_r16_through_r27_and_deallocframe_before_tailcall$/;"	l
FUNCTION_BEGIN	lib/builtins/hexagon/common_entry_exit_abi2.S	/^FUNCTION_BEGIN __save_r16_through_r17$/;"	l
FUNCTION_BEGIN	lib/builtins/hexagon/common_entry_exit_abi2.S	/^FUNCTION_BEGIN __save_r16_through_r19$/;"	l
FUNCTION_BEGIN	lib/builtins/hexagon/common_entry_exit_abi2.S	/^FUNCTION_BEGIN __save_r16_through_r21$/;"	l
FUNCTION_BEGIN	lib/builtins/hexagon/common_entry_exit_abi2.S	/^FUNCTION_BEGIN __save_r16_through_r23$/;"	l
FUNCTION_BEGIN	lib/builtins/hexagon/common_entry_exit_abi2.S	/^FUNCTION_BEGIN __save_r16_through_r25$/;"	l
FUNCTION_BEGIN	lib/builtins/hexagon/common_entry_exit_abi2.S	/^FUNCTION_BEGIN __save_r16_through_r27$/;"	l
FUNCTION_BEGIN	lib/builtins/hexagon/common_entry_exit_legacy.S	/^FUNCTION_BEGIN __restore_r27_through_r16_and_deallocframe$/;"	l
FUNCTION_BEGIN	lib/builtins/hexagon/common_entry_exit_legacy.S	/^FUNCTION_BEGIN __restore_r27_through_r16_and_deallocframe_before_sibcall$/;"	l
FUNCTION_BEGIN	lib/builtins/hexagon/common_entry_exit_legacy.S	/^FUNCTION_BEGIN __restore_r27_through_r18_and_deallocframe$/;"	l
FUNCTION_BEGIN	lib/builtins/hexagon/common_entry_exit_legacy.S	/^FUNCTION_BEGIN __restore_r27_through_r20_and_deallocframe_before_sibcall$/;"	l
FUNCTION_BEGIN	lib/builtins/hexagon/common_entry_exit_legacy.S	/^FUNCTION_BEGIN __save_r27_through_r16$/;"	l
FUNCTION_BEGIN	lib/builtins/hexagon/divdi3.S	/^FUNCTION_BEGIN __hexagon_divdi3$/;"	l
FUNCTION_BEGIN	lib/builtins/hexagon/divsi3.S	/^FUNCTION_BEGIN __hexagon_divsi3$/;"	l
FUNCTION_BEGIN	lib/builtins/hexagon/fabs_opt.S	/^FUNCTION_BEGIN fabs$/;"	l
FUNCTION_BEGIN	lib/builtins/hexagon/fabs_opt.S	/^FUNCTION_BEGIN fabsf$/;"	l
FUNCTION_BEGIN	lib/builtins/hexagon/fma_opt.S	/^FUNCTION_BEGIN fmaf$/;"	l
FUNCTION_BEGIN	lib/builtins/hexagon/fmax_opt.S	/^FUNCTION_BEGIN fmaxf$/;"	l
FUNCTION_BEGIN	lib/builtins/hexagon/fmin_opt.S	/^FUNCTION_BEGIN fminf$/;"	l
FUNCTION_BEGIN	lib/builtins/hexagon/memcpy_likely_aligned.S	/^FUNCTION_BEGIN __hexagon_memcpy_likely_aligned_min32bytes_mult8bytes$/;"	l
FUNCTION_BEGIN	lib/builtins/hexagon/moddi3.S	/^FUNCTION_BEGIN __hexagon_moddi3$/;"	l
FUNCTION_BEGIN	lib/builtins/hexagon/modsi3.S	/^FUNCTION_BEGIN __hexagon_modsi3$/;"	l
FUNCTION_BEGIN	lib/builtins/hexagon/sfdiv_opt.S	/^FUNCTION_BEGIN __hexagon_divsf3$/;"	l
FUNCTION_BEGIN	lib/builtins/hexagon/sfsqrt_opt.S	/^FUNCTION_BEGIN __hexagon_sqrtf$/;"	l
FUNCTION_BEGIN	lib/builtins/hexagon/udivdi3.S	/^FUNCTION_BEGIN __hexagon_udivdi3$/;"	l
FUNCTION_BEGIN	lib/builtins/hexagon/udivmoddi4.S	/^FUNCTION_BEGIN __hexagon_udivmoddi4$/;"	l
FUNCTION_BEGIN	lib/builtins/hexagon/udivmodsi4.S	/^FUNCTION_BEGIN __hexagon_udivmodsi4$/;"	l
FUNCTION_BEGIN	lib/builtins/hexagon/udivsi3.S	/^FUNCTION_BEGIN __hexagon_udivsi3$/;"	l
FUNCTION_BEGIN	lib/builtins/hexagon/umoddi3.S	/^FUNCTION_BEGIN __hexagon_umoddi3$/;"	l
FUNCTION_BEGIN	lib/builtins/hexagon/umodsi3.S	/^FUNCTION_BEGIN __hexagon_umodsi3$/;"	l
FUNCTION_END	lib/builtins/hexagon/common_entry_exit_abi1.S	/^FUNCTION_END __restore_r24_through_r25_and_deallocframe$/;"	l
FUNCTION_END	lib/builtins/hexagon/common_entry_exit_abi1.S	/^FUNCTION_END __restore_r24_through_r25_and_deallocframe_before_tailcall$/;"	l
FUNCTION_END	lib/builtins/hexagon/common_entry_exit_abi1.S	/^FUNCTION_END __restore_r24_through_r27_and_deallocframe$/;"	l
FUNCTION_END	lib/builtins/hexagon/common_entry_exit_abi1.S	/^FUNCTION_END __save_r24_through_r25$/;"	l
FUNCTION_END	lib/builtins/hexagon/common_entry_exit_abi2.S	/^FUNCTION_END __deallocframe$/;"	l
FUNCTION_END	lib/builtins/hexagon/common_entry_exit_abi2.S	/^FUNCTION_END __restore_r16_through_r17_and_deallocframe$/;"	l
FUNCTION_END	lib/builtins/hexagon/common_entry_exit_abi2.S	/^FUNCTION_END __restore_r16_through_r17_and_deallocframe_before_tailcall$/;"	l
FUNCTION_END	lib/builtins/hexagon/common_entry_exit_abi2.S	/^FUNCTION_END __restore_r16_through_r19_and_deallocframe$/;"	l
FUNCTION_END	lib/builtins/hexagon/common_entry_exit_abi2.S	/^FUNCTION_END __restore_r16_through_r19_and_deallocframe_before_tailcall$/;"	l
FUNCTION_END	lib/builtins/hexagon/common_entry_exit_abi2.S	/^FUNCTION_END __restore_r16_through_r21_and_deallocframe$/;"	l
FUNCTION_END	lib/builtins/hexagon/common_entry_exit_abi2.S	/^FUNCTION_END __restore_r16_through_r23_and_deallocframe$/;"	l
FUNCTION_END	lib/builtins/hexagon/common_entry_exit_abi2.S	/^FUNCTION_END __restore_r16_through_r23_and_deallocframe_before_tailcall$/;"	l
FUNCTION_END	lib/builtins/hexagon/common_entry_exit_abi2.S	/^FUNCTION_END __restore_r16_through_r25_and_deallocframe$/;"	l
FUNCTION_END	lib/builtins/hexagon/common_entry_exit_abi2.S	/^FUNCTION_END __restore_r16_through_r25_and_deallocframe_before_tailcall$/;"	l
FUNCTION_END	lib/builtins/hexagon/common_entry_exit_abi2.S	/^FUNCTION_END __restore_r16_through_r27_and_deallocframe$/;"	l
FUNCTION_END	lib/builtins/hexagon/common_entry_exit_abi2.S	/^FUNCTION_END __restore_r16_through_r27_and_deallocframe_before_tailcall$/;"	l
FUNCTION_END	lib/builtins/hexagon/common_entry_exit_abi2.S	/^FUNCTION_END __save_r16_through_r17$/;"	l
FUNCTION_END	lib/builtins/hexagon/common_entry_exit_abi2.S	/^FUNCTION_END __save_r16_through_r19$/;"	l
FUNCTION_END	lib/builtins/hexagon/common_entry_exit_abi2.S	/^FUNCTION_END __save_r16_through_r21$/;"	l
FUNCTION_END	lib/builtins/hexagon/common_entry_exit_abi2.S	/^FUNCTION_END __save_r16_through_r23$/;"	l
FUNCTION_END	lib/builtins/hexagon/common_entry_exit_abi2.S	/^FUNCTION_END __save_r16_through_r25$/;"	l
FUNCTION_END	lib/builtins/hexagon/common_entry_exit_abi2.S	/^FUNCTION_END __save_r16_through_r27$/;"	l
FUNCTION_END	lib/builtins/hexagon/common_entry_exit_legacy.S	/^FUNCTION_END __restore_r27_through_r24_and_deallocframe$/;"	l
FUNCTION_END	lib/builtins/hexagon/common_entry_exit_legacy.S	/^FUNCTION_END __restore_r27_through_r24_and_deallocframe_before_sibcall$/;"	l
FUNCTION_END	lib/builtins/hexagon/common_entry_exit_legacy.S	/^FUNCTION_END __restore_r27_through_r26_and_deallocframe$/;"	l
FUNCTION_END	lib/builtins/hexagon/common_entry_exit_legacy.S	/^FUNCTION_END __restore_r27_through_r26_and_deallocframe_before_sibcall$/;"	l
FUNCTION_END	lib/builtins/hexagon/common_entry_exit_legacy.S	/^FUNCTION_END __save_r27_through_r24$/;"	l
FUNCTION_END	lib/builtins/hexagon/divdi3.S	/^FUNCTION_END __hexagon_divdi3$/;"	l
FUNCTION_END	lib/builtins/hexagon/divsi3.S	/^FUNCTION_END __hexagon_divsi3$/;"	l
FUNCTION_END	lib/builtins/hexagon/fabs_opt.S	/^FUNCTION_END fabs$/;"	l
FUNCTION_END	lib/builtins/hexagon/fabs_opt.S	/^FUNCTION_END fabsf$/;"	l
FUNCTION_END	lib/builtins/hexagon/fma_opt.S	/^FUNCTION_END fmaf$/;"	l
FUNCTION_END	lib/builtins/hexagon/fmax_opt.S	/^FUNCTION_END fmaxf$/;"	l
FUNCTION_END	lib/builtins/hexagon/fmin_opt.S	/^FUNCTION_END fminf$/;"	l
FUNCTION_END	lib/builtins/hexagon/memcpy_likely_aligned.S	/^FUNCTION_END __hexagon_memcpy_likely_aligned_min32bytes_mult8bytes$/;"	l
FUNCTION_END	lib/builtins/hexagon/moddi3.S	/^FUNCTION_END __hexagon_moddi3$/;"	l
FUNCTION_END	lib/builtins/hexagon/modsi3.S	/^FUNCTION_END __hexagon_modsi3$/;"	l
FUNCTION_END	lib/builtins/hexagon/sfdiv_opt.S	/^FUNCTION_END __hexagon_divsf3$/;"	l
FUNCTION_END	lib/builtins/hexagon/sfsqrt_opt.S	/^FUNCTION_END __hexagon_sqrtf$/;"	l
FUNCTION_END	lib/builtins/hexagon/udivdi3.S	/^FUNCTION_END __hexagon_udivdi3$/;"	l
FUNCTION_END	lib/builtins/hexagon/udivmoddi4.S	/^FUNCTION_END __hexagon_udivmoddi4$/;"	l
FUNCTION_END	lib/builtins/hexagon/udivmodsi4.S	/^FUNCTION_END __hexagon_udivmodsi4$/;"	l
FUNCTION_END	lib/builtins/hexagon/udivsi3.S	/^FUNCTION_END __hexagon_udivsi3$/;"	l
FUNCTION_END	lib/builtins/hexagon/umoddi3.S	/^FUNCTION_END __hexagon_umoddi3$/;"	l
FUNCTION_END	lib/builtins/hexagon/umodsi3.S	/^FUNCTION_END __hexagon_umodsi3$/;"	l
FUNCTION_NAME	test/builtins/timing/ashldi3.c	6;"	d	file:
FUNCTION_NAME	test/builtins/timing/ashrdi3.c	6;"	d	file:
FUNCTION_NAME	test/builtins/timing/divdi3.c	6;"	d	file:
FUNCTION_NAME	test/builtins/timing/floatdidf.c	6;"	d	file:
FUNCTION_NAME	test/builtins/timing/floatdisf.c	6;"	d	file:
FUNCTION_NAME	test/builtins/timing/floatdixf.c	6;"	d	file:
FUNCTION_NAME	test/builtins/timing/floatundisf.c	6;"	d	file:
FUNCTION_NAME	test/builtins/timing/floatundixf.c	6;"	d	file:
FUNCTION_NAME	test/builtins/timing/lshrdi3.c	6;"	d	file:
FUNCTION_NAME	test/builtins/timing/moddi3.c	6;"	d	file:
FUNCTION_NAME	test/builtins/timing/modsi3.c	6;"	d	file:
FUNCTION_NAME	test/builtins/timing/muldi3.c	6;"	d	file:
FUNCTION_NAME	test/builtins/timing/negdi2.c	6;"	d	file:
FUNCTION_NAME	test/builtins/timing/udivdi3.c	6;"	d	file:
FUNCTION_NAME	test/builtins/timing/umoddi3.c	6;"	d	file:
FUNC_128_ADDRS	test/profile/Inputs/instrprof-value-prof-real.c	20;"	d	file:
FUNC_128_ADDRS	test/profile/instrprof-value-prof.c	59;"	d	file:
FUNC_16_ADDRS	test/profile/Inputs/instrprof-value-prof-real.c	17;"	d	file:
FUNC_16_ADDRS	test/profile/instrprof-value-prof.c	56;"	d	file:
FUNC_256_ADDRS	test/profile/Inputs/instrprof-value-prof-real.c	21;"	d	file:
FUNC_2_ADDRS	test/profile/Inputs/instrprof-value-prof-real.c	14;"	d	file:
FUNC_2_ADDRS	test/profile/instrprof-value-prof.c	53;"	d	file:
FUNC_32_ADDRS	test/profile/Inputs/instrprof-value-prof-real.c	18;"	d	file:
FUNC_32_ADDRS	test/profile/instrprof-value-prof.c	57;"	d	file:
FUNC_4_ADDRS	test/profile/Inputs/instrprof-value-prof-real.c	15;"	d	file:
FUNC_4_ADDRS	test/profile/instrprof-value-prof.c	54;"	d	file:
FUNC_512_ADDRS	test/profile/Inputs/instrprof-value-prof-real.c	22;"	d	file:
FUNC_64_ADDRS	test/profile/Inputs/instrprof-value-prof-real.c	19;"	d	file:
FUNC_64_ADDRS	test/profile/instrprof-value-prof.c	58;"	d	file:
FUNC_8_ADDRS	test/profile/Inputs/instrprof-value-prof-real.c	16;"	d	file:
FUNC_8_ADDRS	test/profile/instrprof-value-prof.c	55;"	d	file:
FUNC_ADDR	test/profile/Inputs/instrprof-value-prof-real.c	13;"	d	file:
FUNC_ADDR	test/profile/instrprof-value-prof.c	52;"	d	file:
FUNC_TYPE	lib/interception/interception.h	172;"	d
FUTEX_WAIT	lib/sanitizer_common/sanitizer_linux.cc	/^const int FUTEX_WAIT = 0;$/;"	v
FUTEX_WAKE	lib/sanitizer_common/sanitizer_linux.cc	/^const int FUTEX_WAKE = 1;$/;"	v
FUZZER_DEPRECATED_FLAG	lib/fuzzer/FuzzerDriver.cpp	47;"	d	file:
FUZZER_DEPRECATED_FLAG	lib/fuzzer/FuzzerDriver.cpp	52;"	d	file:
FUZZER_DEPRECATED_FLAG	lib/fuzzer/FuzzerDriver.cpp	59;"	d	file:
FUZZER_DEPRECATED_FLAG	lib/fuzzer/FuzzerDriver.cpp	69;"	d	file:
FUZZER_FLAG_INT	lib/fuzzer/FuzzerDriver.cpp	48;"	d	file:
FUZZER_FLAG_INT	lib/fuzzer/FuzzerDriver.cpp	53;"	d	file:
FUZZER_FLAG_INT	lib/fuzzer/FuzzerDriver.cpp	61;"	d	file:
FUZZER_FLAG_INT	lib/fuzzer/FuzzerDriver.cpp	70;"	d	file:
FUZZER_FLAG_STRING	lib/fuzzer/FuzzerDriver.cpp	50;"	d	file:
FUZZER_FLAG_STRING	lib/fuzzer/FuzzerDriver.cpp	55;"	d	file:
FUZZER_FLAG_STRING	lib/fuzzer/FuzzerDriver.cpp	66;"	d	file:
FUZZER_FLAG_STRING	lib/fuzzer/FuzzerDriver.cpp	72;"	d	file:
FUZZER_FLAG_UNSIGNED	lib/fuzzer/FuzzerDriver.cpp	49;"	d	file:
FUZZER_FLAG_UNSIGNED	lib/fuzzer/FuzzerDriver.cpp	54;"	d	file:
FUZZER_FLAG_UNSIGNED	lib/fuzzer/FuzzerDriver.cpp	63;"	d	file:
FUZZER_FLAG_UNSIGNED	lib/fuzzer/FuzzerDriver.cpp	71;"	d	file:
F_LOCK	lib/tsan/rtl/tsan_interceptors.cc	143;"	d	file:
F_TEST	lib/tsan/rtl/tsan_interceptors.cc	145;"	d	file:
F_TLOCK	lib/tsan/rtl/tsan_interceptors.cc	144;"	d	file:
F_ULOCK	lib/tsan/rtl/tsan_interceptors.cc	142;"	d	file:
FakeFrame	lib/asan/asan_fake_stack.h	/^struct FakeFrame {$/;"	s	namespace:__asan
FakeStack	lib/asan/asan_fake_stack.h	/^  FakeStack() { }$/;"	f	class:__asan::FakeStack
FakeStack	lib/asan/asan_fake_stack.h	/^class FakeStack {$/;"	c	namespace:__asan
FallbackTSD	lib/scudo/scudo_tsd_exclusive.cpp	/^ScudoTSD FallbackTSD;$/;"	m	namespace:__scudo	file:
FastPoisonShadow	lib/asan/asan_poisoning.h	/^ALWAYS_INLINE void FastPoisonShadow(uptr aligned_beg, uptr aligned_size,$/;"	f	namespace:__asan
FastPoisonShadowPartialRightRedzone	lib/asan/asan_poisoning.h	/^ALWAYS_INLINE void FastPoisonShadowPartialRightRedzone($/;"	f	namespace:__asan
FastState	lib/tsan/rtl/tsan_rtl.h	/^  FastState(u64 tid, u64 epoch) {$/;"	f	class:__tsan::FastState
FastState	lib/tsan/rtl/tsan_rtl.h	/^  explicit FastState(u64 x)$/;"	f	class:__tsan::FastState
FastState	lib/tsan/rtl/tsan_rtl.h	/^class FastState {$/;"	c	namespace:__tsan
FastThread	test/asan/TestCases/Linux/uar_signals.cc	/^void *FastThread(void *) {$/;"	f
FastUnwindStack	lib/sanitizer_common/sanitizer_stacktrace.cc	/^void BufferedStackTrace::FastUnwindStack(uptr pc, uptr bp, uptr stack_top,$/;"	f	class:__sanitizer::BufferedStackTrace
FastUnwindStack	lib/sanitizer_common/sanitizer_stacktrace_sparc.cc	/^void BufferedStackTrace::FastUnwindStack(uptr pc, uptr bp, uptr stack_top,$/;"	f	class:__sanitizer::BufferedStackTrace
FastUnwindTest	lib/sanitizer_common/tests/sanitizer_stacktrace_test.cc	/^class FastUnwindTest : public ::testing::Test {$/;"	c	namespace:__sanitizer	file:
Fcomplex	lib/builtins/int_types.h	/^typedef float _Complex Fcomplex;$/;"	t
Fcomplex	lib/builtins/int_types.h	/^typedef struct { float real, imaginary; } Fcomplex;$/;"	t	typeref:struct:__anon124
Fd	include/xray/xray_log_interface.h	/^  int Fd = -1;$/;"	m	struct:__xray::FDRLoggingOptions
Fd	lib/xray/tests/unit/fdr_logging_test.cc	/^  int Fd;$/;"	m	struct:__xray::__anon25::ScopedFileCloserAndDeleter	file:
FdAccess	lib/tsan/rtl/tsan_fd.cc	/^void FdAccess(ThreadState *thr, uptr pc, int fd) {$/;"	f	namespace:__tsan
FdAcquire	lib/tsan/rtl/tsan_fd.cc	/^void FdAcquire(ThreadState *thr, uptr pc, int fd) {$/;"	f	namespace:__tsan
FdClose	lib/tsan/rtl/tsan_fd.cc	/^void FdClose(ThreadState *thr, uptr pc, int fd, bool write) {$/;"	f	namespace:__tsan
FdContext	lib/tsan/rtl/tsan_fd.cc	/^struct FdContext {$/;"	s	namespace:__tsan	file:
FdDesc	lib/tsan/rtl/tsan_fd.cc	/^struct FdDesc {$/;"	s	namespace:__tsan	file:
FdDup	lib/tsan/rtl/tsan_fd.cc	/^void FdDup(ThreadState *thr, uptr pc, int oldfd, int newfd, bool write) {$/;"	f	namespace:__tsan
FdEventCreate	lib/tsan/rtl/tsan_fd.cc	/^void FdEventCreate(ThreadState *thr, uptr pc, int fd) {$/;"	f	namespace:__tsan
FdFileCreate	lib/tsan/rtl/tsan_fd.cc	/^void FdFileCreate(ThreadState *thr, uptr pc, int fd) {$/;"	f	namespace:__tsan
FdInit	lib/tsan/rtl/tsan_fd.cc	/^void FdInit() {$/;"	f	namespace:__tsan
FdInotifyCreate	lib/tsan/rtl/tsan_fd.cc	/^void FdInotifyCreate(ThreadState *thr, uptr pc, int fd) {$/;"	f	namespace:__tsan
FdLocation	lib/tsan/rtl/tsan_fd.cc	/^bool FdLocation(uptr addr, int *fd, int *tid, u32 *stack) {$/;"	f	namespace:__tsan
FdOnFork	lib/tsan/rtl/tsan_fd.cc	/^void FdOnFork(ThreadState *thr, uptr pc) {$/;"	f	namespace:__tsan
FdPipeCreate	lib/tsan/rtl/tsan_fd.cc	/^void FdPipeCreate(ThreadState *thr, uptr pc, int rfd, int wfd) {$/;"	f	namespace:__tsan
FdPollCreate	lib/tsan/rtl/tsan_fd.cc	/^void FdPollCreate(ThreadState *thr, uptr pc, int fd) {$/;"	f	namespace:__tsan
FdRelease	lib/tsan/rtl/tsan_fd.cc	/^void FdRelease(ThreadState *thr, uptr pc, int fd) {$/;"	f	namespace:__tsan
FdSignalCreate	lib/tsan/rtl/tsan_fd.cc	/^void FdSignalCreate(ThreadState *thr, uptr pc, int fd) {$/;"	f	namespace:__tsan
FdSocketAccept	lib/tsan/rtl/tsan_fd.cc	/^void FdSocketAccept(ThreadState *thr, uptr pc, int fd, int newfd) {$/;"	f	namespace:__tsan
FdSocketConnect	lib/tsan/rtl/tsan_fd.cc	/^void FdSocketConnect(ThreadState *thr, uptr pc, int fd) {$/;"	f	namespace:__tsan
FdSocketConnecting	lib/tsan/rtl/tsan_fd.cc	/^void FdSocketConnecting(ThreadState *thr, uptr pc, int fd) {$/;"	f	namespace:__tsan
FdSocketCreate	lib/tsan/rtl/tsan_fd.cc	/^void FdSocketCreate(ThreadState *thr, uptr pc, int fd) {$/;"	f	namespace:__tsan
FdSync	lib/tsan/rtl/tsan_fd.cc	/^struct FdSync {$/;"	s	namespace:__tsan	file:
FeatureDebug	lib/fuzzer/FuzzerCorpus.h	/^  static const bool FeatureDebug = false;$/;"	m	class:fuzzer::InputCorpus
Features	lib/fuzzer/FuzzerMerge.h	/^  Vector<uint32_t> Features;$/;"	m	struct:fuzzer::MergeFileInfo
FieldCounters	lib/esan/cache_frag.cpp	/^  u64 *FieldCounters;$/;"	m	struct:__esan::StructInfo	file:
FieldOffset	lib/esan/cache_frag.cpp	/^  u32 *FieldOffset;           \/\/ auxiliary struct field info.$/;"	m	struct:__esan::StructInfo	file:
FieldSize	lib/esan/cache_frag.cpp	/^  u32 *FieldSize;             \/\/ auxiliary struct field info.$/;"	m	struct:__esan::StructInfo	file:
FieldTypeName	lib/esan/cache_frag.cpp	/^  const char **FieldTypeName; \/\/ auxiliary struct field info.$/;"	m	struct:__esan::StructInfo	file:
File	lib/fuzzer/FuzzerIO.h	/^  std::string File;$/;"	m	struct:fuzzer::SizedFile
File2addr	lib/tsan/rtl/tsan_fd.cc	/^uptr File2addr(const char *path) {$/;"	f	namespace:__tsan
FileAccessMode	lib/sanitizer_common/sanitizer_file.h	/^enum FileAccessMode {$/;"	g	namespace:__sanitizer
FileCloser	lib/sanitizer_common/sanitizer_file.h	/^  explicit FileCloser(fd_t fd) : fd(fd) {}$/;"	f	struct:__sanitizer::FileCloser
FileCloser	lib/sanitizer_common/sanitizer_file.h	/^struct FileCloser {$/;"	s	namespace:__sanitizer
FileContents	test/asan/TestCases/Linux/nohugepage_test.cc	/^char FileContents[1 << 16];$/;"	v
FileExists	lib/sanitizer_common/sanitizer_linux.cc	/^bool FileExists(const char *filename) {$/;"	f	namespace:__sanitizer
FileExists	lib/sanitizer_common/sanitizer_mac.cc	/^bool FileExists(const char *filename) {$/;"	f	namespace:__sanitizer
FileExists	lib/sanitizer_common/sanitizer_rtems.cc	/^bool FileExists(const char *filename) {$/;"	f	namespace:__sanitizer
FileExists	lib/sanitizer_common/sanitizer_win.cc	/^bool FileExists(const char *filename) {$/;"	f	namespace:__sanitizer
FileInfo	lib/sanitizer_common/scripts/cpplint.py	/^class FileInfo:$/;"	c
FileName	lib/msan/tests/msan_test.cc	/^   const char* FileName(void) {$/;"	f	class:TempFstabFile
FileSize	lib/fuzzer/FuzzerIOPosix.cpp	/^size_t FileSize(const std::string &Path) {$/;"	f	namespace:fuzzer
FileSizeExceedHandler	lib/fuzzer/FuzzerUtilPosix.cpp	/^static void FileSizeExceedHandler(int, siginfo_t *, void *) {$/;"	f	namespace:fuzzer
FileToString	lib/fuzzer/FuzzerIO.cpp	/^std::string FileToString(const std::string &Path) {$/;"	f	namespace:fuzzer
FileToString	test/asan/TestCases/Linux/nohugepage_test.cc	/^void FileToString(const char *path) {$/;"	f
FileToVector	lib/fuzzer/FuzzerIO.cpp	/^Unit FileToVector(const std::string &Path, size_t MaxSize, bool ExitOnError) {$/;"	f	namespace:fuzzer
FileTypes	include/xray/xray_records.h	/^enum FileTypes {$/;"	g	namespace:__xray
FileWriter	lib/profile/InstrProfilingInternal.h	/^  ProfDataWriter *FileWriter;$/;"	m	struct:ProfBufferIO
Filename	lib/profile/InstrProfilingFile.c	/^  const char *Filename;$/;"	m	struct:lprofFilename	file:
Filename	lib/ubsan/ubsan_value.h	/^  const char *Filename;$/;"	m	class:__ubsan::SourceLocation
Filename	lib/xray/tests/unit/fdr_logging_test.cc	/^  const char *Filename;$/;"	m	struct:__xray::__anon25::ScopedFileCloserAndDeleter	file:
FilenamePat	lib/profile/InstrProfilingFile.c	/^  const char *FilenamePat;$/;"	m	struct:lprofFilename	file:
Files	lib/fuzzer/FuzzerMerge.h	/^  Vector<MergeFileInfo> Files;$/;"	m	struct:fuzzer::Merger
FilesBelongToSameModule	lib/sanitizer_common/scripts/cpplint.py	/^def FilesBelongToSameModule(filename_cc, filename_h):$/;"	f
FillMallocStatistics	lib/asan/asan_stats.cc	/^void FillMallocStatistics(AsanMallocStats *malloc_stats) {$/;"	f	namespace:__asan
FillMemoryProfile	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  static void FillMemoryProfile(uptr start, uptr rss, bool file, uptr *stats,$/;"	f	class:SizeClassAllocator64
FillModuleInfo	lib/sanitizer_common/sanitizer_symbolizer.cc	/^void AddressInfo::FillModuleInfo(const char *mod_name, uptr mod_offset,$/;"	f	class:__sanitizer::AddressInfo
FillProfileCallback	lib/tsan/rtl/tsan_platform_linux.cc	/^void FillProfileCallback(uptr p, uptr rss, bool file,$/;"	f	namespace:__tsan
Finalize	lib/tsan/rtl/tsan_rtl.cc	/^int Finalize(ThreadState *thr) {$/;"	f	namespace:__tsan
Finalizing	lib/xray/xray_buffer_queue.h	/^  atomic_uint8_t Finalizing;$/;"	m	class:__xray::BufferQueue
FindAvailableMemoryRange	lib/sanitizer_common/sanitizer_linux.cc	/^uptr FindAvailableMemoryRange(uptr size, uptr alignment, uptr left_padding,$/;"	f	namespace:__sanitizer
FindAvailableMemoryRange	lib/sanitizer_common/sanitizer_mac.cc	/^uptr FindAvailableMemoryRange(uptr size, uptr alignment, uptr left_padding,$/;"	f	namespace:__sanitizer
FindAvailableMemoryRange	lib/sanitizer_common/sanitizer_win.cc	/^uptr FindAvailableMemoryRange(uptr size, uptr alignment, uptr left_padding,$/;"	f	namespace:__sanitizer
FindDynamicShadowStart	lib/asan/asan_linux.cc	/^uptr FindDynamicShadowStart() {$/;"	f	namespace:__asan
FindDynamicShadowStart	lib/asan/asan_mac.cc	/^uptr FindDynamicShadowStart() {$/;"	f	namespace:__asan
FindDynamicShadowStart	lib/asan/asan_win.cc	/^uptr FindDynamicShadowStart() {$/;"	f	namespace:__asan
FindDynamicShadowStart	lib/hwasan/hwasan_dynamic_shadow.cc	/^uptr FindDynamicShadowStart(uptr shadow_size_bytes) {$/;"	f	namespace:__hwasan
FindEndOfExpressionInLine	lib/sanitizer_common/scripts/cpplint.py	/^def FindEndOfExpressionInLine(line, startpos, depth, startchar, endchar):$/;"	f
FindFirstDSOCallback	lib/asan/asan_linux.cc	/^static int FindFirstDSOCallback(struct dl_phdr_info *info, size_t size,$/;"	f	namespace:__asan
FindHeapChunkByAddress	lib/asan/asan_allocator.cc	/^  AsanChunkView FindHeapChunkByAddress(uptr addr) {$/;"	f	struct:__asan::Allocator
FindHeapChunkByAddress	lib/asan/asan_allocator.cc	/^AsanChunkView FindHeapChunkByAddress(uptr addr) {$/;"	f	namespace:__asan
FindHeapChunkByAddress	lib/hwasan/hwasan_allocator.cc	/^HwasanChunkView FindHeapChunkByAddress(uptr address) {$/;"	f	namespace:__hwasan
FindHeapChunkByAllocBeg	lib/asan/asan_allocator.cc	/^AsanChunkView FindHeapChunkByAllocBeg(uptr addr) {$/;"	f	namespace:__asan
FindInfoForStackVar	lib/asan/asan_debugging.cc	/^static void FindInfoForStackVar(uptr addr, const char *frame_descr, uptr offset,$/;"	f	namespace:__anon48
FindModuleForAddress	lib/sanitizer_common/sanitizer_symbolizer_libcdep.cc	/^const LoadedModule *Symbolizer::FindModuleForAddress(uptr address) {$/;"	f	class:__sanitizer::Symbolizer
FindModuleNameAndOffsetForAddress	lib/sanitizer_common/sanitizer_symbolizer_libcdep.cc	/^bool Symbolizer::FindModuleNameAndOffsetForAddress(uptr address,$/;"	f	class:__sanitizer::Symbolizer
FindNextMatchingAngleBracket	lib/sanitizer_common/scripts/cpplint.py	/^def FindNextMatchingAngleBracket(clean_lines, linenum, init_suffix):$/;"	f
FindNextMultiLineCommentEnd	lib/sanitizer_common/scripts/cpplint.py	/^def FindNextMultiLineCommentEnd(lines, lineix):$/;"	f
FindNextMultiLineCommentStart	lib/sanitizer_common/scripts/cpplint.py	/^def FindNextMultiLineCommentStart(lines, lineix):$/;"	f
FindPathToBinary	lib/sanitizer_common/sanitizer_file.cc	/^char *FindPathToBinary(const char *name) {$/;"	f	namespace:__sanitizer
FindPremappedShadowStart	lib/asan/asan_linux.cc	/^uptr FindPremappedShadowStart() {$/;"	f	namespace:__asan
FindPremappedShadowStart	lib/hwasan/hwasan_dynamic_shadow.cc	/^static uptr FindPremappedShadowStart(uptr shadow_size_bytes) {$/;"	f	namespace:__hwasan
FindPreviousMatchingAngleBracket	lib/sanitizer_common/scripts/cpplint.py	/^def FindPreviousMatchingAngleBracket(clean_lines, linenum, init_prefix):$/;"	f
FindRace	lib/tsan/rtl/tsan_interface_ann.cc	/^static ExpectRace *FindRace(ExpectRace *list, uptr addr, uptr size) {$/;"	f	namespace:__tsan
FindRegistrationSite	lib/asan/asan_globals.cc	/^static u32 FindRegistrationSite(const Global *g) {$/;"	f	namespace:__asan
FindThread	lib/sanitizer_common/sanitizer_thread_registry.cc	/^u32 ThreadRegistry::FindThread(FindThreadCallback cb, void *arg) {$/;"	f	class:__sanitizer::ThreadRegistry
FindThreadByStackAddress	lib/asan/asan_thread.cc	/^AsanThread *FindThreadByStackAddress(uptr addr) {$/;"	f	namespace:__asan
FindThreadByTidLocked	lib/tsan/rtl/tsan_rtl_report.cc	/^static ThreadContext *FindThreadByTidLocked(int tid) {$/;"	f	namespace:__tsan
FindThreadByUid	lib/lsan/lsan_thread.cc	/^static bool FindThreadByUid(ThreadContextBase *tctx, void *arg) {$/;"	f	namespace:__lsan
FindThreadByUid	lib/tsan/rtl/tsan_rtl_thread.cc	/^static bool FindThreadByUid(ThreadContextBase *tctx, void *arg) {$/;"	f	namespace:__tsan
FindThreadByUidLocked	lib/tsan/rtl/tsan_rtl_report.cc	/^static ThreadContext *FindThreadByUidLocked(int unique_id) {$/;"	f	namespace:__tsan
FindThreadByUidLockedCallback	lib/tsan/rtl/tsan_rtl_report.cc	/^static bool FindThreadByUidLockedCallback(ThreadContextBase *tctx, void *arg) {$/;"	f	namespace:__tsan
FindThreadCallback	lib/sanitizer_common/sanitizer_thread_registry.h	/^  typedef bool (*FindThreadCallback)(ThreadContextBase *tctx, void *arg);$/;"	t	class:__sanitizer::ThreadRegistry
FindThreadContextByOsIDLocked	lib/sanitizer_common/sanitizer_thread_registry.cc	/^ThreadContextBase *ThreadRegistry::FindThreadContextByOsIDLocked(tid_t os_id) {$/;"	f	class:__sanitizer::ThreadRegistry
FindThreadContextByOsIdCallback	lib/sanitizer_common/sanitizer_thread_registry.cc	/^static bool FindThreadContextByOsIdCallback(ThreadContextBase *tctx,$/;"	f	namespace:__sanitizer
FindThreadContextLocked	lib/sanitizer_common/sanitizer_thread_registry.cc	/^ThreadRegistry::FindThreadContextLocked(FindThreadCallback cb, void *arg) {$/;"	f	class:__sanitizer::ThreadRegistry
FindUUID	lib/sanitizer_common/sanitizer_procmaps_mac.cc	/^static void FindUUID(const load_command *first_lc, u8 *uuid_output) {$/;"	f	namespace:__sanitizer
FinishSwitchFiber	lib/asan/asan_thread.cc	/^void AsanThread::FinishSwitchFiber(FakeStack *fake_stack_save,$/;"	f	class:__asan::AsanThread
FinishThread	lib/sanitizer_common/sanitizer_thread_registry.cc	/^void ThreadRegistry::FinishThread(u32 tid) {$/;"	f	class:__sanitizer::ThreadRegistry
FiredSuppression	lib/tsan/rtl/tsan_rtl.h	/^struct FiredSuppression {$/;"	s	namespace:__tsan
First	lib/xray/tests/unit/allocator_test.cc	/^  s64 First;$/;"	m	struct:__xray::__anon24::TestData	file:
First	lib/xray/tests/unit/segmented_array_test.cc	/^  s64 First;$/;"	m	struct:__xray::__anon23::TestData	file:
First	lib/xray/xray_buffer_queue.h	/^  BufferRep *First;$/;"	m	class:__xray::BufferQueue
FirstNotProcessedFile	lib/fuzzer/FuzzerMerge.h	/^  size_t FirstNotProcessedFile = 0;$/;"	m	struct:fuzzer::Merger
FirstPC	test/sanitizer_common/TestCases/sanitizer_coverage_inline8bit_counter.cc	/^uintptr_t FirstPC;$/;"	v
FirstPCFlag	test/sanitizer_common/TestCases/sanitizer_coverage_inline8bit_counter.cc	/^uintptr_t FirstPCFlag;$/;"	v
FixedCVE_2016_2143	lib/sanitizer_common/sanitizer_linux_s390.cc	/^static bool FixedCVE_2016_2143() {$/;"	f	namespace:__sanitizer
FixedWord	lib/fuzzer/FuzzerDictionary.h	/^  FixedWord() {}$/;"	f	class:fuzzer::FixedWord
FixedWord	lib/fuzzer/FuzzerDictionary.h	/^  FixedWord(const uint8_t *B, uint8_t S) { Set(B, S); }$/;"	f	class:fuzzer::FixedWord
FixedWord	lib/fuzzer/FuzzerDictionary.h	/^template <size_t kMaxSizeT> class FixedWord {$/;"	c	namespace:fuzzer
Flag	lib/sanitizer_common/sanitizer_flag_parser.h	/^  struct Flag {$/;"	s	class:__sanitizer::FlagParser
FlagDescription	lib/fuzzer/FuzzerDriver.cpp	/^struct FlagDescription {$/;"	s	namespace:fuzzer	file:
FlagHandler	lib/sanitizer_common/sanitizer_flag_parser.h	/^  explicit FlagHandler(T *t) : t_(t) {}$/;"	f	class:__sanitizer::FlagHandler
FlagHandler	lib/sanitizer_common/sanitizer_flag_parser.h	/^class FlagHandler : public FlagHandlerBase {$/;"	c	namespace:__sanitizer
FlagHandlerBase	lib/sanitizer_common/sanitizer_flag_parser.h	/^class FlagHandlerBase {$/;"	c	namespace:__sanitizer
FlagHandlerInclude	lib/sanitizer_common/sanitizer_flags.cc	/^  explicit FlagHandlerInclude(FlagParser *parser, bool ignore_missing)$/;"	f	class:__sanitizer::FlagHandlerInclude
FlagHandlerInclude	lib/sanitizer_common/sanitizer_flags.cc	/^class FlagHandlerInclude : public FlagHandlerBase {$/;"	c	namespace:__sanitizer	file:
FlagHandlerKeepGoing	lib/msan/msan.cc	/^  explicit FlagHandlerKeepGoing(bool *halt_on_error)$/;"	f	class:__msan::FlagHandlerKeepGoing
FlagHandlerKeepGoing	lib/msan/msan.cc	/^class FlagHandlerKeepGoing : public FlagHandlerBase {$/;"	c	namespace:__msan	file:
FlagParser	lib/sanitizer_common/sanitizer_flag_parser.cc	/^FlagParser::FlagParser() : n_flags_(0), buf_(nullptr), pos_(0) {$/;"	f	class:__sanitizer::FlagParser
FlagParser	lib/sanitizer_common/sanitizer_flag_parser.h	/^class FlagParser {$/;"	c	namespace:__sanitizer
FlagValue	lib/fuzzer/FuzzerDriver.cpp	/^static const char *FlagValue(const char *Param, const char *Name) {$/;"	f	namespace:fuzzer
Flags	lib/asan/asan_flags.h	/^struct Flags {$/;"	s	namespace:__asan
Flags	lib/dfsan/dfsan.h	/^struct Flags {$/;"	s	namespace:__dfsan
Flags	lib/esan/esan_flags.h	/^class Flags {$/;"	c	namespace:__esan
Flags	lib/fuzzer/FuzzerDriver.cpp	/^} Flags;$/;"	m	namespace:fuzzer	typeref:struct:fuzzer::__anon37	file:
Flags	lib/hwasan/hwasan_flags.h	/^struct Flags {$/;"	s	namespace:__hwasan
Flags	lib/lsan/lsan_common.h	/^struct Flags {$/;"	s	namespace:__lsan
Flags	lib/msan/msan_flags.h	/^struct Flags {$/;"	s	namespace:__msan
Flags	lib/scudo/scudo_flags.h	/^struct Flags {$/;"	s	namespace:__scudo
Flags	lib/tsan/dd/dd_rtl.h	/^typedef DDFlags Flags;$/;"	t	namespace:__dsan
Flags	lib/tsan/rtl/tsan_flags.h	/^struct Flags : DDFlags {$/;"	s	namespace:__tsan
Flags	lib/ubsan/ubsan_flags.h	/^struct Flags {$/;"	s	namespace:__ubsan
Flags	lib/xray/xray_flags.h	/^struct Flags {$/;"	s	namespace:__xray
Flags	test/fuzzer/FlagsTest.cpp	/^static std::vector<std::string> Flags;$/;"	v	file:
FlagsOffset	lib/asan/asan_fake_stack.h	/^  static uptr FlagsOffset(uptr stack_size_log, uptr class_id) {$/;"	f	class:__asan::FakeStack
FlatByteMap	lib/sanitizer_common/sanitizer_allocator_bytemap.h	/^class FlatByteMap {$/;"	c
Float	lib/ubsan/ubsan_diag.h	/^      FloatMax Float;$/;"	m	union:__ubsan::Diag::Arg::__anon104
FloatCastOverflowData	lib/ubsan/ubsan_handlers.h	/^struct FloatCastOverflowData {$/;"	s	namespace:__ubsan
FloatCastOverflowDataV2	lib/ubsan/ubsan_handlers.h	/^struct FloatCastOverflowDataV2 {$/;"	s	namespace:__ubsan
FloatMax	lib/ubsan/ubsan_value.h	/^typedef long double FloatMax;$/;"	t	namespace:__ubsan
FloodFillTag	lib/lsan/lsan_common.cc	/^static void FloodFillTag(Frontier *frontier, ChunkTag tag) {$/;"	f	namespace:__lsan
Flush	lib/sanitizer_common/sanitizer_symbolizer_internal.h	/^  virtual void Flush() {}$/;"	f	class:__sanitizer::SymbolizerTool
Flush	lib/sanitizer_common/sanitizer_symbolizer_libcdep.cc	/^void Symbolizer::Flush() {$/;"	f	class:__sanitizer::Symbolizer
FlushCache	lib/tsan/rtl/tsan_dense_alloc.h	/^  void FlushCache(Cache *c) {$/;"	f	class:__tsan::DenseSlabAlloc
FlushDirty	lib/tsan/rtl/tsan_clock.cc	/^void SyncClock::FlushDirty() {$/;"	f	class:__tsan::SyncClock
FlushShadowMemory	lib/tsan/rtl/tsan_platform_linux.cc	/^void FlushShadowMemory() {$/;"	f	namespace:__tsan
FlushShadowMemory	lib/tsan/rtl/tsan_platform_mac.cc	/^void FlushShadowMemory() {$/;"	f	namespace:__tsan
FlushShadowMemory	lib/tsan/rtl/tsan_platform_windows.cc	/^void FlushShadowMemory() {$/;"	f	namespace:__tsan
FlushShadowMemoryCallback	lib/tsan/rtl/tsan_platform_linux.cc	/^void FlushShadowMemoryCallback($/;"	f	namespace:__tsan
FlushStreams	lib/tsan/rtl/tsan_interceptors.cc	/^static void FlushStreams() {$/;"	f	file:
FlushToDeadThreadStats	lib/asan/asan_stats.cc	/^void FlushToDeadThreadStats(AsanStats *stats) {$/;"	f	namespace:__asan
FlushUnneededASanShadowMemory	lib/asan/asan_poisoning.cc	/^void FlushUnneededASanShadowMemory(uptr p, uptr size) {$/;"	f	namespace:__asan
Fn	lib/fuzzer/FuzzerMutate.h	/^    size_t (MutationDispatcher::*Fn)(uint8_t *Data, size_t Size, size_t Max);$/;"	m	struct:fuzzer::MutationDispatcher::Mutator
Fn	test/asan/TestCases/Linux/activation-options.cc	/^typedef void (*Fn)();$/;"	t	file:
Fn	test/asan/TestCases/Posix/start-deactivated.cc	/^typedef void (*Fn)();$/;"	t	file:
FocusFunction	lib/fuzzer/FuzzerOptions.h	/^  std::string FocusFunction;$/;"	m	struct:fuzzer::FuzzingOptions
FocusFunction	lib/fuzzer/FuzzerTracePC.h	/^  std::pair<size_t, size_t> FocusFunction = {-1, -1};  \/\/ Module and PC IDs.$/;"	m	class:fuzzer::TracePC
Foo	test/asan/TestCases/Linux/init-order-dlopen.cc	/^  Foo() : val(42) { printf("Foo::Foo()\\n"); }$/;"	f	struct:Foo
Foo	test/asan/TestCases/Linux/init-order-dlopen.cc	/^struct Foo {$/;"	s	file:
Foo	test/asan/TestCases/Posix/new_array_cookie_with_new_from_class.cc	/^struct Foo {$/;"	s	file:
Foo	test/asan/TestCases/intra-object-overflow.cc	/^  Foo() : pre1(1), pre2(2), post1(3), post2(4) {$/;"	f	class:Foo
Foo	test/asan/TestCases/intra-object-overflow.cc	/^class Foo {$/;"	c	file:
Foo	test/cfi/two-vcalls.cpp	/^  virtual void Foo() {$/;"	f	class:Base
Foo	test/fuzzer/ShrinkControlFlowTest.cpp	/^void Foo() {$/;"	f
Foo	test/fuzzer/TwoDifferentBugsTest.cpp	/^void Foo() { Null[1] = 0; }$/;"	f
Foo	test/ubsan/TestCases/TypeCheck/vptr-virtual-base.cpp	/^struct Foo { virtual int f() { return 0; } };$/;"	s	file:
FooBarBaz	test/sanitizer_common/TestCases/Darwin/print-stack-trace.cc	/^static inline void FooBarBaz() {$/;"	f	file:
FooBarBaz	test/sanitizer_common/TestCases/print-stack-trace.cc	/^static inline void FooBarBaz() {$/;"	f	file:
FooBarBaz	test/ubsan/TestCases/Misc/Linux/print_stack_trace.cc	/^static inline void FooBarBaz() {$/;"	f	file:
FooRun	test/msan/mul_by_const.cc	/^void FooRun(S s) {$/;"	f
ForEach	lib/fuzzer/FuzzerValueBitMap.h	/^  void ForEach(Callback CB) const {$/;"	f	struct:fuzzer::ValueBitMap
ForEachChunk	lib/asan/asan_allocator.cc	/^void ForEachChunk(ForEachChunkCallback callback, void *arg) {$/;"	f	namespace:__lsan
ForEachChunk	lib/lsan/lsan_allocator.cc	/^void ForEachChunk(ForEachChunkCallback callback, void *arg) {$/;"	f	namespace:__lsan
ForEachChunk	lib/sanitizer_common/sanitizer_allocator_combined.h	/^  void ForEachChunk(ForEachChunkCallback callback, void *arg) {$/;"	f	class:CombinedAllocator
ForEachChunk	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^  void ForEachChunk(ForEachChunkCallback callback, void *arg) {$/;"	f	class:SizeClassAllocator32
ForEachChunk	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  void ForEachChunk(ForEachChunkCallback callback, void *arg) {$/;"	f	class:SizeClassAllocator64
ForEachChunk	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^  void ForEachChunk(ForEachChunkCallback callback, void *arg) {$/;"	f	class:LargeMmapAllocator
ForEachChunkCallback	lib/sanitizer_common/sanitizer_allocator.h	/^typedef void (*ForEachChunkCallback)(uptr chunk, void *arg);$/;"	t	namespace:__sanitizer
ForEachExtraStackRange	lib/asan/asan_thread.cc	/^void ForEachExtraStackRange(tid_t os_id, RangeIteratorCallback callback,$/;"	f	namespace:__lsan
ForEachExtraStackRange	lib/lsan/lsan_thread.cc	/^void ForEachExtraStackRange(tid_t os_id, RangeIteratorCallback callback,$/;"	f	namespace:__lsan
ForEachExtraStackRangeCb	lib/lsan/lsan_common.cc	/^void ForEachExtraStackRangeCb(uptr begin, uptr end, void* arg) {$/;"	f	namespace:__lsan
ForEachFakeFrame	lib/asan/asan_fake_stack.cc	/^void FakeStack::ForEachFakeFrame(RangeIteratorCallback callback, void *arg) {$/;"	f	class:__asan::FakeStack
ForEachMappedRegion	lib/sanitizer_common/sanitizer_linux.cc	/^void ForEachMappedRegion(link_map *map, void (*cb)(const void *, uptr)) {$/;"	f	namespace:__sanitizer
ForEachNonZeroByte	lib/fuzzer/FuzzerTracePC.h	/^void ForEachNonZeroByte(const uint8_t *Begin, const uint8_t *End,$/;"	f	namespace:fuzzer
ForEachObservedPC	lib/fuzzer/FuzzerTracePC.h	/^  void ForEachObservedPC(CallBack CB) {$/;"	f	class:fuzzer::TracePC
ForceLock	lib/asan/asan_allocator.cc	/^  void ForceLock() {$/;"	f	struct:__asan::Allocator
ForceLock	lib/sanitizer_common/sanitizer_allocator_combined.h	/^  void ForceLock() {$/;"	f	class:CombinedAllocator
ForceLock	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^  void ForceLock() {$/;"	f	class:SizeClassAllocator32
ForceLock	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  void ForceLock() {$/;"	f	class:SizeClassAllocator64
ForceLock	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^  void ForceLock() {$/;"	f	class:LargeMmapAllocator
ForceReleaseToOS	lib/sanitizer_common/sanitizer_allocator_combined.h	/^  void ForceReleaseToOS() {$/;"	f	class:CombinedAllocator
ForceReleaseToOS	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^  void ForceReleaseToOS() {$/;"	f	class:SizeClassAllocator32
ForceReleaseToOS	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  void ForceReleaseToOS() {$/;"	f	class:SizeClassAllocator64
ForceUnlock	lib/asan/asan_allocator.cc	/^  void ForceUnlock() {$/;"	f	struct:__asan::Allocator
ForceUnlock	lib/sanitizer_common/sanitizer_allocator_combined.h	/^  void ForceUnlock() {$/;"	f	class:CombinedAllocator
ForceUnlock	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^  void ForceUnlock() {$/;"	f	class:SizeClassAllocator32
ForceUnlock	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  void ForceUnlock() {$/;"	f	class:SizeClassAllocator64
ForceUnlock	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^  void ForceUnlock() {$/;"	f	class:LargeMmapAllocator
ForkBefore	lib/tsan/rtl/tsan_rtl.cc	/^void ForkBefore(ThreadState *thr, uptr pc) {$/;"	f	namespace:__tsan
ForkChildAfter	lib/tsan/rtl/tsan_rtl.cc	/^void ForkChildAfter(ThreadState *thr, uptr pc) {$/;"	f	namespace:__tsan
ForkParentAfter	lib/tsan/rtl/tsan_rtl.cc	/^void ForkParentAfter(ThreadState *thr, uptr pc) {$/;"	f	namespace:__tsan
FormatAndSendCommand	lib/sanitizer_common/sanitizer_symbolizer_libcdep.cc	/^const char *LLVMSymbolizer::FormatAndSendCommand(bool is_data,$/;"	f	class:__sanitizer::LLVMSymbolizer
FormatUUID	lib/sanitizer_common/sanitizer_mac.cc	/^void FormatUUID(char *out, uptr size, const u8 *uuid) {$/;"	f	namespace:__sanitizer
Formatter	lib/dfsan/dfsan_custom.cc	/^  Formatter(char *str_, const char *fmt_, size_t size_)$/;"	f	struct:Formatter
Formatter	lib/dfsan/dfsan_custom.cc	/^struct Formatter {$/;"	s	file:
Fps	test/profile/Linux/instrprof-merge-vp.c	/^FP Fps[3] = {callee1, callee2, callee3};$/;"	v
Frame0	test/asan/TestCases/stack-oob-frames.cc	/^NOINLINE static void Frame0(int frame, char *a, char *b, char *c) {$/;"	f	file:
Frame1	test/asan/TestCases/stack-oob-frames.cc	/^NOINLINE static void Frame1(int frame, char *a, char *b) {$/;"	f	file:
Frame2	test/asan/TestCases/stack-oob-frames.cc	/^NOINLINE static void Frame2(int frame, char *a) {$/;"	f	file:
Frame3	test/asan/TestCases/stack-oob-frames.cc	/^NOINLINE static void Frame3(int frame) {$/;"	f	file:
FrameIsInternal	lib/tsan/rtl/tsan_report.cc	/^static bool FrameIsInternal(const SymbolizedStack *frame) {$/;"	f	namespace:__tsan
Free	lib/tsan/rtl/tsan_dense_alloc.h	/^  void Free(Cache *c, IndexT idx) {$/;"	f	class:__tsan::DenseSlabAlloc
FreeBlock	lib/tsan/rtl/tsan_sync.cc	/^uptr MetaMap::FreeBlock(Processor *proc, uptr p) {$/;"	f	class:__tsan::MetaMap
FreeHook	lib/fuzzer/FuzzerLoop.cpp	/^void FreeHook(const volatile void *ptr) {$/;"	f	namespace:fuzzer
FreeHook	lib/profile/InstrProfilingWriter.c	/^COMPILER_RT_VISIBILITY void (*FreeHook)(void *) = NULL;$/;"	v
FreeHook1	test/sanitizer_common/TestCases/malloc_hook.cc	/^void FreeHook1(const volatile void *ptr) { WRITE("FH1\\n"); }$/;"	f
FreeHook2	test/sanitizer_common/TestCases/malloc_hook.cc	/^void FreeHook2(const volatile void *ptr) { WRITE("FH2\\n"); }$/;"	f
FreePagesRangeTracker	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^    explicit FreePagesRangeTracker(MemoryMapperT* mapper)$/;"	f	class:SizeClassAllocator64::FreePagesRangeTracker
FreePagesRangeTracker	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  class FreePagesRangeTracker {$/;"	c	class:SizeClassAllocator64
FreeRange	lib/tsan/rtl/tsan_sync.cc	/^bool MetaMap::FreeRange(Processor *proc, uptr p, uptr sz) {$/;"	f	class:__tsan::MetaMap
FreeThread	test/asan/TestCases/Posix/deep_thread_stack.cc	/^void *FreeThread(void *arg) {$/;"	f
FreeTid	lib/asan/asan_allocator.cc	/^uptr AsanChunkView::FreeTid() const { return chunk_->free_tid; }$/;"	f	class:__asan::AsanChunkView
FreedBytes	lib/scudo/scudo_allocator_secondary.h	/^  uptr FreedBytes;$/;"	m	class:LargeMmapAllocator
Freelist	lib/xray/xray_segmented_array.h	/^  SegmentBase *Freelist = &SentinelSegment;$/;"	m	class:__xray::Array
Frees	lib/fuzzer/FuzzerLoop.cpp	/^  std::atomic<size_t> Frees;$/;"	m	struct:fuzzer::MallocFreeTracer	file:
Freq	lib/esan/esan_sideline.h	/^  u32 Freq;$/;"	m	class:__esan::SidelineThread
FromPrimary	lib/sanitizer_common/sanitizer_allocator_combined.h	/^  bool FromPrimary(void *p) {$/;"	f	class:CombinedAllocator
FromRawId	lib/msan/msan_origin.h	/^  static Origin FromRawId(u32 id) {$/;"	f	class:__msan::Origin
FromType	lib/ubsan/ubsan_handlers.h	/^  const TypeDescriptor &FromType;$/;"	m	struct:__ubsan::FloatCastOverflowData
FromType	lib/ubsan/ubsan_handlers.h	/^  const TypeDescriptor &FromType;$/;"	m	struct:__ubsan::FloatCastOverflowDataV2
FromType	lib/ubsan/ubsan_handlers.h	/^  const TypeDescriptor &FromType;$/;"	m	struct:__ubsan::ImplicitConversionData
FromUnrecoverableHandler	lib/ubsan/ubsan_diag.h	/^  bool FromUnrecoverableHandler;$/;"	m	struct:__ubsan::ReportOptions
Frontier	lib/lsan/lsan_common.h	/^typedef InternalMmapVector<uptr> Frontier;$/;"	t	namespace:__lsan
FullName	lib/sanitizer_common/scripts/cpplint.py	/^  def FullName(self):$/;"	m	class:FileInfo
Func	test/asan/TestCases/uar_and_exceptions.cc	/^void Func(int depth) {$/;"	f
Func1	test/asan/TestCases/Posix/stack-use-after-return.cc	/^char *Func1() {$/;"	f
Func1	test/fuzzer/ThreeFunctionsTest.cpp	/^bool Func1(const uint8_t *Data, size_t Size) {$/;"	f
Func2	test/asan/TestCases/Posix/stack-use-after-return.cc	/^void Func2(char *x) {$/;"	f
Func2	test/fuzzer/ThreeFunctionsTest.cpp	/^bool Func2(const uint8_t *Data, size_t Size) {$/;"	f
FuncArg	lib/esan/esan_sideline.h	/^  void *FuncArg;$/;"	m	class:__esan::SidelineThread
FuncEntry	lib/tsan/rtl/tsan_rtl.cc	/^void FuncEntry(ThreadState *thr, uptr pc) {$/;"	f	namespace:__tsan
FuncExit	lib/tsan/rtl/tsan_rtl.cc	/^void FuncExit(ThreadState *thr) {$/;"	f	namespace:__tsan
FuncLabels	lib/fuzzer/dataflow/DataFlow.cpp	/^static dfsan_label *FuncLabels;  \/\/ Array of NumFuncs elements.$/;"	v	file:
FuncWithStack	lib/asan/tests/asan_test.cc	/^NOINLINE static void FuncWithStack() {$/;"	f	file:
FuncsBeg	lib/fuzzer/dataflow/DataFlow.cpp	/^static const uintptr_t *FuncsBeg;$/;"	v	file:
Function	lib/xray/xray_fdr_log_records.h	/^enum class RecordType : uint8_t { Function, Metadata };$/;"	m	class:RecordType
Function	lib/xray/xray_interface_internal.h	/^  uint64_t Function;$/;"	m	struct:XRaySledEntry
FunctionA	test/fuzzer/PrintFuncTest.cpp	/^void FunctionA(const uint8_t *Data, size_t Size) {$/;"	f
FunctionB	test/fuzzer/PrintFuncTest.cpp	/^void FunctionB(const uint8_t *Data, size_t Size) {$/;"	f
FunctionC	test/fuzzer/PrintFuncTest.cpp	/^void FunctionC(const uint8_t *Data, size_t Size) {$/;"	f
FunctionCallTrie	lib/xray/xray_function_call_trie.h	/^  explicit FunctionCallTrie(const Allocators &A)$/;"	f	class:__xray::FunctionCallTrie
FunctionCallTrie	lib/xray/xray_function_call_trie.h	/^class FunctionCallTrie {$/;"	c	namespace:__xray
FunctionEntry_end	lib/xray/xray_trampoline_mips.S	/^FunctionEntry_end:$/;"	l
FunctionEntry_end	lib/xray/xray_trampoline_mips64.S	/^FunctionEntry_end:$/;"	l
FunctionEntry_restore	lib/xray/xray_trampoline_AArch64.S	/^FunctionEntry_restore:$/;"	l
FunctionEntry_restore	lib/xray/xray_trampoline_arm.S	/^FunctionEntry_restore:$/;"	l
FunctionEntry_restore	lib/xray/xray_trampoline_mips.S	/^FunctionEntry_restore:$/;"	l
FunctionEntry_restore	lib/xray/xray_trampoline_mips64.S	/^FunctionEntry_restore:$/;"	l
FunctionExit_end	lib/xray/xray_trampoline_mips.S	/^FunctionExit_end:$/;"	l
FunctionExit_end	lib/xray/xray_trampoline_mips64.S	/^FunctionExit_end:$/;"	l
FunctionExit_restore	lib/xray/xray_trampoline_AArch64.S	/^FunctionExit_restore:$/;"	l
FunctionExit_restore	lib/xray/xray_trampoline_arm.S	/^FunctionExit_restore:$/;"	l
FunctionExit_restore	lib/xray/xray_trampoline_mips.S	/^FunctionExit_restore:$/;"	l
FunctionExit_restore	lib/xray/xray_trampoline_mips64.S	/^FunctionExit_restore:$/;"	l
FunctionHasPadding	lib/interception/interception_win.cc	/^static bool FunctionHasPadding(uptr address, uptr size) {$/;"	f	namespace:__interception
FunctionHasPrefix	lib/interception/interception_win.cc	/^static bool FunctionHasPrefix(uptr address, const T &pattern) {$/;"	f	namespace:__interception
FunctionPrefixDetour	lib/interception/tests/interception_win_test.cc	/^  FunctionPrefixDetour,$/;"	e	enum:__interception::__anon12::FunctionPrefixKind	file:
FunctionPrefixHotPatch	lib/interception/tests/interception_win_test.cc	/^  FunctionPrefixHotPatch,$/;"	e	enum:__interception::__anon12::FunctionPrefixKind	file:
FunctionPrefixKind	lib/interception/tests/interception_win_test.cc	/^enum FunctionPrefixKind {$/;"	g	namespace:__interception::__anon12	file:
FunctionPrefixNone	lib/interception/tests/interception_win_test.cc	/^  FunctionPrefixNone,$/;"	e	enum:__interception::__anon12::FunctionPrefixKind	file:
FunctionPrefixPadding	lib/interception/tests/interception_win_test.cc	/^  FunctionPrefixPadding,$/;"	e	enum:__interception::__anon12::FunctionPrefixKind	file:
FunctionRecSize	lib/xray/xray_fdr_logging.cc	/^static constexpr auto FunctionRecSize = sizeof(FunctionRecord);$/;"	m	namespace:__xray	file:
FunctionTailExit_restore	lib/xray/xray_trampoline_AArch64.S	/^FunctionTailExit_restore:$/;"	l
FunctionTailExit_restore	lib/xray/xray_trampoline_arm.S	/^FunctionTailExit_restore:$/;"	l
FunctionTypeMismatchData	lib/ubsan/ubsan_handlers.h	/^struct FunctionTypeMismatchData {$/;"	s	namespace:__ubsan
FunctionWithLargeStack	lib/asan/tests/asan_benchmarks_test.cc	/^static void FunctionWithLargeStack() {$/;"	f	file:
Functions	lib/xray/xray_interface_internal.h	/^  size_t Functions;$/;"	m	struct:__xray::XRaySledMap
Functions	test/asan/TestCases/Linux/stress_dtls.c	/^f_t Functions[MAX_N_FUNCTIONS];$/;"	v
Fuzzer	lib/fuzzer/FuzzerInternal.h	/^class Fuzzer {$/;"	c	namespace:fuzzer
Fuzzer	lib/fuzzer/FuzzerLoop.cpp	/^Fuzzer::Fuzzer(UserCallback CB, InputCorpus &Corpus, MutationDispatcher &MD,$/;"	f	class:fuzzer::Fuzzer
FuzzerDriver	lib/fuzzer/FuzzerDriver.cpp	/^int FuzzerDriver(int *argc, char ***argv, UserCallback Callback) {$/;"	f	namespace:fuzzer
FuzzingOptions	lib/fuzzer/FuzzerOptions.h	/^struct FuzzingOptions {$/;"	s	namespace:fuzzer
G	lib/tsan/rtl/tsan_md5.cc	18;"	d	file:
G	test/asan/TestCases/Linux/asan_prelink_test.cc	/^int G;$/;"	v
G	test/asan/TestCases/Linux/odr-violation.cc	/^namespace foo { char G[SZ]; }$/;"	m	namespace:foo	file:
G	test/asan/TestCases/Posix/coverage.cc	/^int G[4];$/;"	v
G	test/tsan/tsan-vs-gvn.cc	/^int G;$/;"	v
GC	lib/asan/asan_fake_stack.cc	/^NOINLINE void FakeStack::GC(uptr real_stack) {$/;"	f	class:__asan::FakeStack
GET	lib/tsan/rtl/tsan_md5.cc	29;"	d	file:
GET_ASAN_BLOCK	lib/asan/asan_mac.cc	283;"	d	file:
GET_CALLER_PC	lib/sanitizer_common/sanitizer_internal_defs.h	378;"	d
GET_CALLER_PC	lib/sanitizer_common/sanitizer_internal_defs.h	381;"	d
GET_CALLER_PC	lib/sanitizer_common/sanitizer_internal_defs.h	392;"	d
GET_CALLER_PC_BP	lib/sanitizer_common/sanitizer_stacktrace.h	136;"	d
GET_CALLER_PC_BP_SP	lib/sanitizer_common/sanitizer_stacktrace.h	130;"	d
GET_CURRENT_FRAME	lib/sanitizer_common/sanitizer_internal_defs.h	383;"	d
GET_CURRENT_FRAME	lib/sanitizer_common/sanitizer_internal_defs.h	394;"	d
GET_CURRENT_PC_BP_SP	lib/sanitizer_common/sanitizer_stacktrace.h	142;"	d
GET_FATAL_STACK_TRACE_HERE	lib/hwasan/hwasan.h	119;"	d
GET_FATAL_STACK_TRACE_HERE	lib/msan/msan.h	360;"	d
GET_FATAL_STACK_TRACE_PC_BP	lib/hwasan/hwasan.h	113;"	d
GET_FATAL_STACK_TRACE_PC_BP	lib/msan/msan.h	354;"	d
GET_LINK_MAP_BY_DLOPEN_HANDLE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	27;"	d
GET_LINK_MAP_BY_DLOPEN_HANDLE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	30;"	d
GET_LINK_MAP_BY_DLOPEN_HANDLE	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	27;"	d
GET_LINK_MAP_BY_DLOPEN_HANDLE	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	30;"	d
GET_LINK_MAP_BY_DLOPEN_HANDLE	lib/sanitizer_common/sanitizer_platform_limits_posix.h	26;"	d
GET_LINK_MAP_BY_DLOPEN_HANDLE	lib/sanitizer_common/sanitizer_platform_limits_posix.h	32;"	d
GET_LSAN_BLOCK	lib/lsan/lsan_mac.cc	150;"	d	file:
GET_MALLOC_STACK_TRACE	lib/hwasan/hwasan.h	106;"	d
GET_MALLOC_STACK_TRACE	lib/msan/msan.h	329;"	d
GET_QUEUE_SYNC_VARS	lib/tsan/rtl/tsan_libdispatch_mac.cc	106;"	d	file:
GET_REPORT_OPTIONS	lib/ubsan/ubsan_diag.h	234;"	d
GET_SEM_VALUE	test/sanitizer_common/TestCases/Linux/sem_init_glibc.cc	34;"	d	file:
GET_SEM_VALUE	test/sanitizer_common/TestCases/Linux/sem_init_glibc.cc	36;"	d	file:
GET_STACK_TRACE	lib/asan/asan_stack.h	64;"	d
GET_STACK_TRACE	lib/lsan/lsan.h	19;"	d
GET_STACK_TRACE_CHECK_HERE	lib/asan/asan_stack.h	91;"	d
GET_STACK_TRACE_FATAL	lib/asan/asan_stack.h	78;"	d
GET_STACK_TRACE_FATAL	lib/lsan/lsan.h	24;"	d
GET_STACK_TRACE_FATAL	lib/tsan/rtl/tsan_rtl.h	653;"	d
GET_STACK_TRACE_FATAL_HERE	lib/asan/asan_stack.h	88;"	d
GET_STACK_TRACE_FREE	lib/asan/asan_stack.h	100;"	d
GET_STACK_TRACE_MALLOC	lib/asan/asan_stack.h	97;"	d
GET_STACK_TRACE_MALLOC	lib/lsan/lsan.h	27;"	d
GET_STACK_TRACE_MALLOC	lib/lsan/lsan_interceptors.cc	/^  GET_STACK_TRACE_MALLOC;$/;"	m	class:std::align_val_t	file:
GET_STACK_TRACE_SIGNAL	lib/asan/asan_stack.h	83;"	d
GET_STACK_TRACE_THREAD	lib/asan/asan_stack.h	94;"	d
GET_STACK_TRACE_THREAD	lib/lsan/lsan.h	31;"	d
GET_STORE_STACK_TRACE	lib/msan/msan.h	351;"	d
GET_STORE_STACK_TRACE_PC_BP	lib/msan/msan.h	340;"	d
GE_EQUAL	lib/builtins/comparedf2.c	/^    GE_EQUAL     =  0,$/;"	e	enum:GE_RESULT	file:
GE_EQUAL	lib/builtins/comparesf2.c	/^    GE_EQUAL     =  0,$/;"	e	enum:GE_RESULT	file:
GE_EQUAL	lib/builtins/comparetf2.c	/^    GE_EQUAL     =  0,$/;"	e	enum:GE_RESULT	file:
GE_GREATER	lib/builtins/comparedf2.c	/^    GE_GREATER   =  1,$/;"	e	enum:GE_RESULT	file:
GE_GREATER	lib/builtins/comparesf2.c	/^    GE_GREATER   =  1,$/;"	e	enum:GE_RESULT	file:
GE_GREATER	lib/builtins/comparetf2.c	/^    GE_GREATER   =  1,$/;"	e	enum:GE_RESULT	file:
GE_LESS	lib/builtins/comparedf2.c	/^    GE_LESS      = -1,$/;"	e	enum:GE_RESULT	file:
GE_LESS	lib/builtins/comparesf2.c	/^    GE_LESS      = -1,$/;"	e	enum:GE_RESULT	file:
GE_LESS	lib/builtins/comparetf2.c	/^    GE_LESS      = -1,$/;"	e	enum:GE_RESULT	file:
GE_RESULT	lib/builtins/comparedf2.c	/^enum GE_RESULT {$/;"	g	file:
GE_RESULT	lib/builtins/comparesf2.c	/^enum GE_RESULT {$/;"	g	file:
GE_RESULT	lib/builtins/comparetf2.c	/^enum GE_RESULT {$/;"	g	file:
GE_UNORDERED	lib/builtins/comparedf2.c	/^    GE_UNORDERED = -1   \/\/ Note: different from LE_UNORDERED$/;"	e	enum:GE_RESULT	file:
GE_UNORDERED	lib/builtins/comparesf2.c	/^    GE_UNORDERED = -1   \/\/ Note: different from LE_UNORDERED$/;"	e	enum:GE_RESULT	file:
GE_UNORDERED	lib/builtins/comparetf2.c	/^    GE_UNORDERED = -1   \/\/ Note: different from LE_UNORDERED$/;"	e	enum:GE_RESULT	file:
GLOB	lib/asan/tests/asan_mac_test.cc	/^void *GLOB;$/;"	m	namespace:__anon41	file:
GLOB	test/asan/TestCases/Posix/asan-symbolize-sanity-test.cc	/^int GLOB[10] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0};$/;"	v
GLOB	test/asan/TestCases/Posix/shared-lib-test.cc	/^int GLOB[10] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0};$/;"	v
GLOB	test/tsan/load_shared_lib.cc	/^int GLOB = 0;$/;"	v
GLOB	test/tsan/write_in_reader_lock.cc	/^int GLOB;$/;"	v
GLOBAL_VAR_ABC	test/sanitizer_common/TestCases/symbolize_pc.cc	/^int GLOBAL_VAR_ABC;$/;"	v
GLOB_SHARED	test/tsan/load_shared_lib.cc	/^int GLOB_SHARED = 0;$/;"	v
GLUE	lib/builtins/assembly.h	139;"	d
GLUE2	lib/builtins/assembly.h	138;"	d
GOOD_ACCESS	lib/asan/tests/asan_interface_test.cc	156;"	d	file:
GREATER	test/BlocksRuntime/rettypepromotion.c	/^enum { LESS = -1, EQUAL, GREATER };$/;"	e	enum:__anon146	file:
GREATER_0	test/builtins/Unit/fp_test.h	/^    LESS_0, LESS_EQUAL_0, EQUAL_0, GREATER_0, GREATER_EQUAL_0, NEQUAL_0$/;"	e	enum:EXPECTED_RESULT
GREATER_EQUAL_0	test/builtins/Unit/fp_test.h	/^    LESS_0, LESS_EQUAL_0, EQUAL_0, GREATER_0, GREATER_EQUAL_0, NEQUAL_0$/;"	e	enum:EXPECTED_RESULT
GRND_NONBLOCK	lib/sanitizer_common/sanitizer_linux.cc	142;"	d	file:
GTEST_NO_LLVM_RAW_OSTREAM	lib/fuzzer/tests/FuzzerUnittest.cpp	9;"	d	file:
GarbageThread	lib/tsan/benchmarks/vts_many_threads_bench.cc	/^void* GarbageThread(void *unused) {$/;"	f
GenerateRandomTag	lib/hwasan/hwasan_thread.cc	/^tag_t HwasanThread::GenerateRandomTag() {$/;"	f	class:__hwasan::HwasanThread
GenericScopedLock	lib/sanitizer_common/sanitizer_mutex.h	/^  explicit GenericScopedLock(MutexType *mu)$/;"	f	class:__sanitizer::GenericScopedLock
GenericScopedLock	lib/sanitizer_common/sanitizer_mutex.h	/^class GenericScopedLock {$/;"	c	namespace:__sanitizer
GenericScopedReadLock	lib/sanitizer_common/sanitizer_mutex.h	/^  explicit GenericScopedReadLock(MutexType *mu)$/;"	f	class:__sanitizer::GenericScopedReadLock
GenericScopedReadLock	lib/sanitizer_common/sanitizer_mutex.h	/^class GenericScopedReadLock {$/;"	c	namespace:__sanitizer
Get	lib/fuzzer/FuzzerDataFlowTrace.h	/^  const Vector<uint8_t> *Get(const std::string &InputSha1) const {$/;"	f	class:fuzzer::DataFlowTrace
Get	lib/fuzzer/FuzzerTracePC.h	/^  Pair Get(size_t I) { return Table[I % kSize]; }$/;"	f	struct:fuzzer::TableOfRecentCompares
Get	lib/fuzzer/FuzzerTracePC.h	/^  const Word &Get(size_t Idx) {$/;"	f	struct:fuzzer::MemMemTable
Get	lib/fuzzer/FuzzerValueBitMap.h	/^  inline bool Get(uintptr_t Idx) {$/;"	f	struct:fuzzer::ValueBitMap
Get	lib/sanitizer_common/sanitizer_allocator_bytemap.h	/^  u8 *Get(uptr idx) const {$/;"	f	class:TwoLevelByteMap
Get	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^    uptr Get(uptr i) const {$/;"	f	class:SizeClassAllocator64::PackedCounterArray
Get	lib/sanitizer_common/sanitizer_allocator_stats.h	/^  uptr Get(AllocatorStat i) const {$/;"	f	class:AllocatorStats
Get	lib/sanitizer_common/sanitizer_allocator_stats.h	/^  void Get(AllocatorStatCounters s) const {$/;"	f	class:AllocatorGlobalStats
Get	lib/sanitizer_common/sanitizer_stackdepot.cc	/^StackTrace StackDepotReverseMap::Get(u32 id) {$/;"	f	class:__sanitizer::StackDepotReverseMap
Get	lib/sanitizer_common/sanitizer_stackdepotbase.h	/^StackDepotBase<Node, kReservedBits, kTabSizeLog>::Get(u32 id) {$/;"	f	class:__sanitizer::StackDepotBase
Get	lib/tsan/rtl/tsan_mutexset.cc	/^MutexSet::Desc MutexSet::Get(uptr i) const {$/;"	f	class:__tsan::MutexSet
Get	lib/tsan/rtl/tsan_mutexset.h	/^MutexSet::Desc MutexSet::Get(uptr i) const { return Desc(); }$/;"	f	class:__tsan::MutexSet
GetAccessInfo	lib/hwasan/hwasan_linux.cc	/^static AccessInfo GetAccessInfo(siginfo_t *info, ucontext_t *uc) {$/;"	f	namespace:__hwasan
GetAccessToHeapChunkInformation	lib/asan/asan_descriptions.cc	/^static void GetAccessToHeapChunkInformation(ChunkAccess *descr,$/;"	f	namespace:__asan
GetAccumulatedStats	lib/asan/asan_stats.cc	/^static void GetAccumulatedStats(AsanStats *stats) {$/;"	f	namespace:__asan
GetActuallyAllocatedSize	lib/sanitizer_common/sanitizer_allocator_combined.h	/^  uptr GetActuallyAllocatedSize(void *p) {$/;"	f	class:CombinedAllocator
GetActuallyAllocatedSize	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^  uptr GetActuallyAllocatedSize(void *p) {$/;"	f	class:SizeClassAllocator32
GetActuallyAllocatedSize	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  uptr GetActuallyAllocatedSize(void *p) {$/;"	f	class:SizeClassAllocator64
GetActuallyAllocatedSize	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^  uptr GetActuallyAllocatedSize(void *p) {$/;"	f	class:LargeMmapAllocator
GetActuallyAllocatedSize	lib/scudo/scudo_allocator_secondary.h	/^  static uptr GetActuallyAllocatedSize(void *Ptr) {$/;"	f	class:LargeMmapAllocator
GetAddress	lib/sanitizer_common/sanitizer_posix.cc	/^uptr SignalContext::GetAddress() const {$/;"	f	class:__sanitizer::SignalContext
GetAddress	lib/sanitizer_common/sanitizer_win.cc	/^uptr SignalContext::GetAddress() const {$/;"	f	class:__sanitizer::SignalContext
GetAddressFromPointer	lib/hwasan/hwasan.h	/^static inline uptr GetAddressFromPointer(uptr p) {$/;"	f
GetAddressFromPointer	lib/hwasan/hwasan.h	/^static inline void * GetAddressFromPointer(const void *p) {$/;"	f
GetAllocStack	lib/asan/asan_allocator.cc	/^StackTrace AsanChunkView::GetAllocStack() const {$/;"	f	class:__asan::AsanChunkView
GetAllocStackId	lib/asan/asan_allocator.cc	/^u32 AsanChunkView::GetAllocStackId() const { return chunk_->alloc_context_id; }$/;"	f	class:__asan::AsanChunkView
GetAllocStackId	lib/hwasan/hwasan_allocator.cc	/^u32 HwasanChunkView::GetAllocStackId() const {$/;"	f	class:__hwasan::HwasanChunkView
GetAllocType	lib/asan/asan_allocator.cc	/^AllocType AsanChunkView::GetAllocType() const {$/;"	f	class:__asan::AsanChunkView
GetAllocatorCache	lib/asan/asan_allocator.cc	/^AllocatorCache *GetAllocatorCache(AsanThreadLocalMallocStorage *ms) {$/;"	f	namespace:__asan
GetAllocatorCache	lib/hwasan/hwasan_allocator.cc	/^AllocatorCache *GetAllocatorCache(HwasanThreadLocalMallocStorage *ms) {$/;"	f	namespace:__hwasan
GetAllocatorCache	lib/lsan/lsan_common_mac.cc	/^AllocatorCache *GetAllocatorCache() { return &get_tls_val(true)->cache; }$/;"	f	namespace:__lsan
GetAllocatorCache	lib/lsan/lsan_linux.cc	/^AllocatorCache *GetAllocatorCache() { return &allocator_cache; }$/;"	f	namespace:__lsan
GetAllocatorCache	lib/msan/msan_allocator.cc	/^AllocatorCache *GetAllocatorCache(MsanThreadLocalMallocStorage *ms) {$/;"	f	namespace:__msan
GetAllocatorCacheRange	lib/lsan/lsan_allocator.cc	/^void GetAllocatorCacheRange(uptr *begin, uptr *end) {$/;"	f	namespace:__lsan
GetAllocatorGlobalRange	lib/asan/asan_allocator.cc	/^void GetAllocatorGlobalRange(uptr *begin, uptr *end) {$/;"	f	namespace:__lsan
GetAllocatorGlobalRange	lib/lsan/lsan_allocator.cc	/^void GetAllocatorGlobalRange(uptr *begin, uptr *end) {$/;"	f	namespace:__lsan
GetAllocatorOptions	lib/asan/asan_allocator.cc	/^void GetAllocatorOptions(AllocatorOptions *options) {$/;"	f	namespace:__asan
GetAndLock	lib/tsan/rtl/tsan_sync.cc	/^SyncVar* MetaMap::GetAndLock(ThreadState *thr, uptr pc,$/;"	f	class:__tsan::MetaMap
GetArgV	lib/sanitizer_common/sanitizer_symbolizer_internal.h	/^  virtual void GetArgV(const char *path_to_binary,$/;"	f	class:__sanitizer::SymbolizerProcess
GetArgsAndEnv	lib/sanitizer_common/sanitizer_linux.cc	/^static void GetArgsAndEnv(char ***argv, char ***envp) {$/;"	f	namespace:__sanitizer
GetArgsAndEnv	lib/sanitizer_common/sanitizer_openbsd.cc	/^static void GetArgsAndEnv(char ***argv, char ***envp) {$/;"	f	namespace:__sanitizer
GetArgv	lib/sanitizer_common/sanitizer_fuchsia.cc	/^char **GetArgv() { return StoredArgv; }$/;"	f	namespace:__sanitizer
GetArgv	lib/sanitizer_common/sanitizer_linux.cc	/^char **GetArgv() {$/;"	f	namespace:__sanitizer
GetArgv	lib/sanitizer_common/sanitizer_mac.cc	/^char **GetArgv() {$/;"	f	namespace:__sanitizer
GetArgv	lib/sanitizer_common/sanitizer_openbsd.cc	/^char **GetArgv() {$/;"	f	namespace:__sanitizer
GetArgv	lib/sanitizer_common/sanitizer_rtems.cc	/^char **GetArgv() { return nullptr; }$/;"	f	namespace:__sanitizer
GetArgv	lib/sanitizer_common/sanitizer_win.cc	/^char **GetArgv() {$/;"	f	namespace:__sanitizer
GetAsanChunk	lib/asan/asan_allocator.cc	/^  AsanChunk *GetAsanChunk(void *alloc_beg) {$/;"	f	struct:__asan::Allocator
GetAsanChunkByAddr	lib/asan/asan_allocator.cc	/^  AsanChunk *GetAsanChunkByAddr(uptr p) {$/;"	f	struct:__asan::Allocator
GetAsanChunkByAddrFastLocked	lib/asan/asan_allocator.cc	/^  AsanChunk *GetAsanChunkByAddrFastLocked(uptr p) {$/;"	f	struct:__asan::Allocator
GetAsanThreadByOsIDLocked	lib/asan/asan_thread.cc	/^__asan::AsanThread *GetAsanThreadByOsIDLocked(tid_t os_id) {$/;"	f	namespace:__asan
GetAsanThreadContext	lib/asan/asan_thread.cc	/^static ThreadContextBase *GetAsanThreadContext(u32 tid) {$/;"	f	namespace:__asan
GetAvailableIpSocketFamilies	lib/msan/tests/msan_test.cc	/^std::vector<int> GetAvailableIpSocketFamilies() {$/;"	f
GetBlock	lib/tsan/rtl/tsan_sync.cc	/^MBlock* MetaMap::GetBlock(uptr p) {$/;"	f	class:__tsan::MetaMap
GetBlockBegin	lib/sanitizer_common/sanitizer_allocator_combined.h	/^  void *GetBlockBegin(const void *p) {$/;"	f	class:CombinedAllocator
GetBlockBegin	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^  void *GetBlockBegin(const void *p) {$/;"	f	class:SizeClassAllocator32
GetBlockBegin	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  void *GetBlockBegin(const void *p) {$/;"	f	class:SizeClassAllocator64
GetBlockBegin	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^  void *GetBlockBegin(const void *ptr) {$/;"	f	class:LargeMmapAllocator
GetBlockBeginFastLocked	lib/sanitizer_common/sanitizer_allocator_combined.h	/^  void *GetBlockBeginFastLocked(void *p) {$/;"	f	class:CombinedAllocator
GetBlockBeginFastLocked	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^  void *GetBlockBeginFastLocked(void *ptr) {$/;"	f	class:LargeMmapAllocator
GetByteArray	lib/fuzzer/FuzzerShmem.h	/^  uint8_t *GetByteArray() { return GetData() + sizeof(size_t); }$/;"	f	class:fuzzer::SharedMemoryRegion
GetCacheSize	lib/sanitizer_common/sanitizer_quarantine.h	/^  uptr GetCacheSize() const {$/;"	f	class:__sanitizer::Quarantine
GetCallerPC	lib/lsan/lsan_common.cc	/^static uptr GetCallerPC(u32 stack_id, StackDepotReverseMap *map) {$/;"	f	namespace:__lsan
GetCanonicFrame	lib/sanitizer_common/sanitizer_stacktrace.cc	/^static inline uhwptr *GetCanonicFrame(uptr bp,$/;"	f	namespace:__sanitizer
GetChunkIdx	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  uptr GetChunkIdx(uptr chunk, uptr size) const {$/;"	f	class:SizeClassAllocator64
GetCodeRangeForFile	lib/sanitizer_common/sanitizer_posix.cc	/^bool GetCodeRangeForFile(const char *module, uptr *start, uptr *end) {$/;"	f	namespace:__sanitizer
GetCount	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^    u64 GetCount() const {$/;"	f	class:SizeClassAllocator64::PackedCounterArray
GetCoverageFilename	lib/sanitizer_common/sanitizer_coverage_libcdep_new.cc	/^static void GetCoverageFilename(char* path, const char* name,$/;"	f	namespace:__sancov::__anon64
GetCurrentPc	lib/sanitizer_common/sanitizer_stacktrace.cc	/^uptr StackTrace::GetCurrentPc() {$/;"	f	class:__sanitizer::StackTrace
GetCurrentThread	lib/asan/asan_thread.cc	/^AsanThread *GetCurrentThread() {$/;"	f	namespace:__asan
GetCurrentThread	lib/hwasan/hwasan_linux.cc	/^HwasanThread *GetCurrentThread() {$/;"	f	namespace:__hwasan
GetCurrentThread	lib/lsan/lsan_common_mac.cc	/^u32 GetCurrentThread() {$/;"	f	namespace:__lsan
GetCurrentThread	lib/lsan/lsan_linux.cc	/^u32 GetCurrentThread() { return current_thread_tid; }$/;"	f	namespace:__lsan
GetCurrentThread	lib/msan/msan_linux.cc	/^MsanThread *GetCurrentThread() {$/;"	f	namespace:__msan
GetCurrentThreadStats	lib/asan/asan_stats.cc	/^AsanStats &GetCurrentThreadStats() {$/;"	f	namespace:__asan
GetCurrentTidOrInvalid	lib/asan/asan_thread.cc	/^u32 GetCurrentTidOrInvalid() {$/;"	f	namespace:__asan
GetCurrentUnitInFuzzingThead	lib/fuzzer/FuzzerLoop.cpp	/^size_t Fuzzer::GetCurrentUnitInFuzzingThead(const uint8_t **Data) const {$/;"	f	class:fuzzer::Fuzzer
GetData	lib/fuzzer/FuzzerShmem.h	/^  uint8_t *GetData() { return Data; }$/;"	f	class:fuzzer::SharedMemoryRegion
GetDedupTokenFromFile	lib/fuzzer/FuzzerDriver.cpp	/^static std::string GetDedupTokenFromFile(const std::string &Path) {$/;"	f	namespace:fuzzer
GetDescription	lib/asan/asan_scariness_score.h	/^  const char *GetDescription() const { return descr; }$/;"	f	struct:__asan::ScarinessScoreBase
GetDestroyed	lib/sanitizer_common/sanitizer_thread_registry.cc	/^bool ThreadContextBase::GetDestroyed() {$/;"	f	class:__sanitizer::ThreadContextBase
GetEnv	lib/sanitizer_common/sanitizer_fuchsia.cc	/^const char *GetEnv(const char *name) {$/;"	f	namespace:__sanitizer
GetEnv	lib/sanitizer_common/sanitizer_linux.cc	/^const char *GetEnv(const char *name) {$/;"	f	namespace:__sanitizer
GetEnv	lib/sanitizer_common/sanitizer_mac.cc	/^const char *GetEnv(const char *name) {$/;"	f	namespace:__sanitizer
GetEnv	lib/sanitizer_common/sanitizer_rtems.cc	/^const char *GetEnv(const char *name) {$/;"	f	namespace:__sanitizer
GetEnv	lib/sanitizer_common/sanitizer_win.cc	/^const char *GetEnv(const char *name) {$/;"	f	namespace:__sanitizer
GetEnviron	lib/sanitizer_common/sanitizer_mac.cc	/^char **GetEnviron() {$/;"	f	namespace:__sanitizer
GetEpoch	lib/fuzzer/FuzzerIO.cpp	/^long GetEpoch(const std::string &Path) {$/;"	f	namespace:fuzzer
GetFakeStack	lib/asan/asan_fake_stack.cc	/^static FakeStack *GetFakeStack() {$/;"	f	namespace:__asan
GetFakeStackFast	lib/asan/asan_fake_stack.cc	/^static FakeStack *GetFakeStackFast() {$/;"	f	namespace:__asan
GetFeature	lib/fuzzer/FuzzerCorpus.h	/^  size_t GetFeature(size_t Idx) const { return InputSizesPerFeature[Idx]; }$/;"	f	class:fuzzer::InputCorpus
GetFirstValueProfRecord	lib/profile/InstrProfilingInternal.h	/^  struct ValueProfRecord *(*GetFirstValueProfRecord)(struct ValueProfData *);$/;"	m	struct:VPDataReaderType	typeref:struct:VPDataReaderType::GetFirstValueProfRecord
GetFlag	lib/ubsan/ubsan_flags.cc	/^static const char *GetFlag(const char *flag) {$/;"	f	namespace:__ubsan
GetFlags	lib/asan/asan_fake_stack.h	/^  u8 *GetFlags(uptr stack_size_log, uptr class_id) {$/;"	f	class:__asan::FakeStack
GetFnPtr	lib/fuzzer/FuzzerExtFunctionsDlsym.cpp	/^static T GetFnPtr(const char *FnName, bool WarnIfMissing) {$/;"	f	file:
GetFnPtr	lib/fuzzer/FuzzerExtFunctionsWeakAlias.cpp	/^static T *GetFnPtr(T *Fun, T *FunDef, const char *FnName, bool WarnIfMissing) {$/;"	f	file:
GetFrame	lib/asan/asan_fake_stack.h	/^  u8 *GetFrame(uptr stack_size_log, uptr class_id, uptr pos) {$/;"	f	class:__asan::FakeStack
GetFreeArray	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  CompactPtrT *GetFreeArray(uptr region_beg) const {$/;"	f	class:SizeClassAllocator64
GetFreeStack	lib/asan/asan_allocator.cc	/^StackTrace AsanChunkView::GetFreeStack() const {$/;"	f	class:__asan::AsanChunkView
GetFreeStackId	lib/asan/asan_allocator.cc	/^u32 AsanChunkView::GetFreeStackId() const { return chunk_->free_context_id; }$/;"	f	class:__asan::AsanChunkView
GetFreeStackId	lib/hwasan/hwasan_allocator.cc	/^u32 HwasanChunkView::GetFreeStackId() const {$/;"	f	class:__hwasan::HwasanChunkView
GetFreedAndReset	lib/tsan/rtl/tsan_rtl.h	/^  bool GetFreedAndReset() {$/;"	f	class:__tsan::Shadow
GetFromAllocator	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  NOINLINE bool GetFromAllocator(AllocatorStats *stat, uptr class_id,$/;"	f	class:SizeClassAllocator64
GetFuncAddrVer	lib/interception/interception_linux.cc	/^void *GetFuncAddrVer(const char *func_name, const char *ver) {$/;"	f	namespace:__interception
GetGlobalAddressInformation	lib/asan/asan_descriptions.cc	/^bool GetGlobalAddressInformation(uptr addr, uptr access_size,$/;"	f	namespace:__asan
GetGlobalsForAddress	lib/asan/asan_globals.cc	/^int GetGlobalsForAddress(uptr addr, Global *globals, u32 *reg_sites,$/;"	f	namespace:__asan
GetHandleFromFd	lib/fuzzer/FuzzerIOPosix.cpp	/^intptr_t GetHandleFromFd(int fd) {$/;"	f	namespace:fuzzer
GetHandleFromFd	lib/fuzzer/FuzzerIOWindows.cpp	/^intptr_t GetHandleFromFd(int fd) {$/;"	f	namespace:fuzzer
GetHandleSignalMode	lib/sanitizer_common/sanitizer_linux.cc	/^HandleSignalMode GetHandleSignalMode(int signum) {$/;"	f	namespace:__sanitizer
GetHandleSignalMode	lib/sanitizer_common/sanitizer_mac.cc	/^HandleSignalMode GetHandleSignalMode(int signum) {$/;"	f	namespace:__sanitizer
GetHandleSignalMode	lib/sanitizer_common/sanitizer_win.cc	/^HandleSignalMode GetHandleSignalMode(int signum) {$/;"	f	namespace:__sanitizer
GetHandleSignalModeImpl	lib/sanitizer_common/sanitizer_linux.cc	/^static HandleSignalMode GetHandleSignalModeImpl(int signum) {$/;"	f	namespace:__sanitizer
GetHandleSignalModeImpl	lib/sanitizer_common/sanitizer_mac.cc	/^static HandleSignalMode GetHandleSignalModeImpl(int signum) {$/;"	f	namespace:__sanitizer
GetHeader	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^  Header *GetHeader(const void *p) {$/;"	f	class:LargeMmapAllocator
GetHeader	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^  Header *GetHeader(uptr p) {$/;"	f	class:LargeMmapAllocator
GetHeaderGuardCPPVariable	lib/sanitizer_common/scripts/cpplint.py	/^def GetHeaderGuardCPPVariable(filename):$/;"	f
GetHeapAddressInformation	lib/asan/asan_descriptions.cc	/^bool GetHeapAddressInformation(uptr addr, uptr access_size,$/;"	f	namespace:__asan
GetHeapAddressInformation	lib/hwasan/hwasan_report.cc	/^bool GetHeapAddressInformation(uptr addr, uptr access_size,$/;"	f	namespace:__hwasan
GetHighMemEnd	lib/hwasan/hwasan_linux.cc	/^static uptr GetHighMemEnd() {$/;"	f	namespace:__hwasan
GetHistorySize	lib/tsan/rtl/tsan_rtl.h	/^  int GetHistorySize() const {$/;"	f	class:__tsan::FastState
GetId	lib/tsan/rtl/tsan_sync.h	/^  u64 GetId() const {$/;"	f	struct:__tsan::SyncVar
GetIfExistsAndLock	lib/tsan/rtl/tsan_sync.cc	/^SyncVar* MetaMap::GetIfExistsAndLock(uptr addr, bool write_lock) {$/;"	f	class:__tsan::MetaMap
GetIgnoreBit	lib/tsan/rtl/tsan_rtl.h	/^  bool GetIgnoreBit() const { return (s64)x_ < 0; }$/;"	f	class:__tsan::FastState
GetInstructionSize	lib/interception/interception_win.cc	/^static size_t GetInstructionSize(uptr address, size_t* rel_offset = nullptr) {$/;"	f	namespace:__interception
GetInstrumentedPCs	lib/sanitizer_common/scripts/sancov.py	/^def GetInstrumentedPCs(binary):$/;"	f
GetKernelAreaSize	lib/sanitizer_common/sanitizer_linux.cc	/^static uptr GetKernelAreaSize() {$/;"	f	namespace:__sanitizer
GetLibcVersion	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^__attribute__((unused)) static bool GetLibcVersion(int *major, int *minor,$/;"	f	namespace:__sanitizer
GetLineWidth	lib/sanitizer_common/scripts/cpplint.py	/^def GetLineWidth(line):$/;"	f
GetLinker	lib/lsan/lsan_common_linux.cc	/^LoadedModule *GetLinker() { return linker; }$/;"	f	namespace:__lsan
GetLinker	lib/lsan/lsan_common_mac.cc	/^LoadedModule *GetLinker() { return nullptr; }$/;"	f	namespace:__lsan
GetLsb	lib/tsan/rtl/tsan_defs.h	/^T GetLsb(T v, int bits) {$/;"	f	namespace:__tsan
GetMD	lib/fuzzer/FuzzerInternal.h	/^  MutationDispatcher &GetMD() { return MD; }$/;"	f	class:fuzzer::Fuzzer
GetMacosVersion	lib/sanitizer_common/sanitizer_mac.cc	/^MacosVersion GetMacosVersion() {$/;"	f	namespace:__sanitizer
GetMacosVersionInternal	lib/sanitizer_common/sanitizer_mac.cc	/^MacosVersion GetMacosVersionInternal() {$/;"	f	namespace:__sanitizer
GetMallocContextSize	lib/asan/asan_stack.cc	/^u32 GetMallocContextSize() {$/;"	f	namespace:__asan
GetMallocUsableSize	lib/lsan/lsan_allocator.cc	/^uptr GetMallocUsableSize(const void *p) {$/;"	f	namespace:__lsan
GetMatched	lib/sanitizer_common/sanitizer_suppressions.cc	/^void SuppressionContext::GetMatched($/;"	f	class:__sanitizer::SuppressionContext
GetMaxAliveThreads	lib/sanitizer_common/sanitizer_thread_registry.cc	/^uptr ThreadRegistry::GetMaxAliveThreads() {$/;"	f	class:__sanitizer::ThreadRegistry
GetMaxSize	lib/fuzzer/FuzzerDictionary.h	/^  static size_t GetMaxSize() { return kMaxSize; }$/;"	f	class:fuzzer::FixedWord
GetMaxStackOffset	lib/fuzzer/FuzzerTracePC.cpp	/^uintptr_t TracePC::GetMaxStackOffset() const {$/;"	f	class:fuzzer::TracePC
GetMaxUserVirtualAddress	lib/sanitizer_common/sanitizer_fuchsia.cc	/^uptr GetMaxUserVirtualAddress() {$/;"	f	namespace:__sanitizer
GetMaxUserVirtualAddress	lib/sanitizer_common/sanitizer_linux.cc	/^uptr GetMaxUserVirtualAddress() {$/;"	f	namespace:__sanitizer
GetMaxUserVirtualAddress	lib/sanitizer_common/sanitizer_mac.cc	/^uptr GetMaxUserVirtualAddress() {$/;"	f	namespace:__sanitizer
GetMaxUserVirtualAddress	lib/sanitizer_common/sanitizer_win.cc	/^uptr GetMaxUserVirtualAddress() {$/;"	f	namespace:__sanitizer
GetMaxVirtualAddress	lib/sanitizer_common/sanitizer_fuchsia.cc	/^uptr GetMaxVirtualAddress() { return GetMaxUserVirtualAddress(); }$/;"	f	namespace:__sanitizer
GetMaxVirtualAddress	lib/sanitizer_common/sanitizer_linux.cc	/^uptr GetMaxVirtualAddress() {$/;"	f	namespace:__sanitizer
GetMaxVirtualAddress	lib/sanitizer_common/sanitizer_mac.cc	/^uptr GetMaxVirtualAddress() {$/;"	f	namespace:__sanitizer
GetMaxVirtualAddress	lib/sanitizer_common/sanitizer_rtems.cc	/^uptr GetMaxVirtualAddress() {$/;"	f	namespace:__sanitizer
GetMaxVirtualAddress	lib/sanitizer_common/sanitizer_win.cc	/^uptr GetMaxVirtualAddress() {$/;"	f	namespace:__sanitizer
GetMemoryProfile	lib/sanitizer_common/sanitizer_fuchsia.cc	/^void GetMemoryProfile(fill_profile_f cb, uptr *stats, uptr stats_size) {}$/;"	f	namespace:__sanitizer
GetMemoryProfile	lib/sanitizer_common/sanitizer_mac.cc	/^void GetMemoryProfile(fill_profile_f cb, uptr *stats, uptr stats_size) { }$/;"	f	namespace:__sanitizer
GetMemoryProfile	lib/sanitizer_common/sanitizer_procmaps_common.cc	/^void GetMemoryProfile(fill_profile_f cb, uptr *stats, uptr stats_size) {$/;"	f	namespace:__sanitizer
GetMemoryProfile	lib/sanitizer_common/sanitizer_win.cc	/^void GetMemoryProfile(fill_profile_f cb, uptr *stats, uptr stats_size) { }$/;"	f	namespace:__sanitizer
GetMetaData	lib/sanitizer_common/sanitizer_allocator_combined.h	/^  void *GetMetaData(const void *p) {$/;"	f	class:CombinedAllocator
GetMetaData	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^  void *GetMetaData(const void *p) {$/;"	f	class:SizeClassAllocator32
GetMetaData	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  void *GetMetaData(const void *p) {$/;"	f	class:SizeClassAllocator64
GetMetaData	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^  void *GetMetaData(const void *p) {$/;"	f	class:LargeMmapAllocator
GetMetadataEnd	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  uptr GetMetadataEnd(uptr region_beg) const {$/;"	f	class:SizeClassAllocator64
GetMmapGranularity	lib/interception/interception_win.cc	/^static uptr GetMmapGranularity() {$/;"	f	namespace:__interception
GetMmapGranularity	lib/sanitizer_common/sanitizer_fuchsia.cc	/^uptr GetMmapGranularity() { return PAGE_SIZE; }$/;"	f	namespace:__sanitizer
GetMmapGranularity	lib/sanitizer_common/sanitizer_posix.cc	/^uptr GetMmapGranularity() {$/;"	f	namespace:__sanitizer
GetMmapGranularity	lib/sanitizer_common/sanitizer_rtems.cc	/^uptr GetMmapGranularity() { return GetPageSize(); }$/;"	f	namespace:__sanitizer
GetMmapGranularity	lib/sanitizer_common/sanitizer_win.cc	/^uptr GetMmapGranularity() {$/;"	f	namespace:__sanitizer
GetModuleAndOffsetForPc	lib/sanitizer_common/sanitizer_stacktrace_libcdep.cc	/^static int GetModuleAndOffsetForPc(uptr pc, char *module_name,$/;"	f	namespace:__sanitizer
GetModuleName	lib/fuzzer/FuzzerTracePC.cpp	/^static std::string GetModuleName(uintptr_t PC) {$/;"	f	namespace:fuzzer
GetModuleNameAndOffsetForPC	lib/sanitizer_common/sanitizer_symbolizer_libcdep.cc	/^bool Symbolizer::GetModuleNameAndOffsetForPC(uptr pc, const char **module_name,$/;"	f	class:__sanitizer::Symbolizer
GetModuleNameAndOffsetForPC	lib/sanitizer_common/sanitizer_symbolizer_markup.cc	/^bool Symbolizer::GetModuleNameAndOffsetForPC(uptr pc, const char **module_name,$/;"	f	class:__sanitizer::Symbolizer
GetModuleNameForPc	lib/sanitizer_common/sanitizer_symbolizer.h	/^  const char *GetModuleNameForPc(uptr pc) {$/;"	f	class:__sanitizer::final
GetNamedMappingFd	lib/sanitizer_common/sanitizer_posix_libcdep.cc	/^int GetNamedMappingFd(const char *name, uptr size) {$/;"	f	namespace:__sanitizer
GetNextInstructionPc	lib/fuzzer/FuzzerTracePC.cpp	/^inline ALWAYS_INLINE uintptr_t GetNextInstructionPc(uintptr_t PC) {$/;"	f	namespace:fuzzer
GetNextInstructionPc	lib/sanitizer_common/sanitizer_stacktrace.cc	/^uptr StackTrace::GetNextInstructionPc(uptr pc) {$/;"	f	class:__sanitizer::StackTrace
GetNumPCs	lib/fuzzer/FuzzerTracePC.h	/^  size_t GetNumPCs() const {$/;"	f	class:fuzzer::TracePC
GetNumValueDataForSite	lib/profile/InstrProfilingInternal.h	/^  uint32_t (*GetNumValueDataForSite)(uint32_t VK, uint32_t Site);$/;"	m	struct:VPDataReaderType
GetNumberOfCPUs	lib/sanitizer_common/sanitizer_fuchsia.cc	/^u32 GetNumberOfCPUs() {$/;"	f	namespace:__sanitizer
GetNumberOfCPUs	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^u32 GetNumberOfCPUs() {$/;"	f	namespace:__sanitizer
GetNumberOfCPUs	lib/sanitizer_common/sanitizer_mac.cc	/^u32 GetNumberOfCPUs() {$/;"	f	namespace:__sanitizer
GetNumberOfCPUs	lib/sanitizer_common/sanitizer_win.cc	/^u32 GetNumberOfCPUs() {$/;"	f	namespace:__sanitizer
GetNumberOfCPUsCached	lib/sanitizer_common/sanitizer_common.h	/^INLINE u32 GetNumberOfCPUsCached() {$/;"	f	namespace:__sanitizer
GetNumberOfThreads	lib/sanitizer_common/sanitizer_thread_registry.cc	/^void ThreadRegistry::GetNumberOfThreads(uptr *total, uptr *running,$/;"	f	class:__sanitizer::ThreadRegistry
GetObjectTypeFromTag	lib/tsan/rtl/tsan_external.cc	/^const char *GetObjectTypeFromTag(uptr tag) {$/;"	f	namespace:__tsan
GetOptions	lib/asan/asan_allocator.cc	/^  void GetOptions(AllocatorOptions *options) const {$/;"	f	struct:__asan::Allocator
GetOrCreate	lib/sanitizer_common/sanitizer_allocator_bytemap.h	/^  u8 *GetOrCreate(uptr idx) {$/;"	f	class:TwoLevelByteMap
GetOrCreateAndLock	lib/tsan/rtl/tsan_sync.cc	/^SyncVar* MetaMap::GetOrCreateAndLock(ThreadState *thr, uptr pc,$/;"	f	class:__tsan::MetaMap
GetOrInit	lib/sanitizer_common/sanitizer_symbolizer_libcdep.cc	/^Symbolizer *Symbolizer::GetOrInit() {$/;"	f	class:__sanitizer::Symbolizer
GetOriginIfPoisoned	lib/msan/msan_poisoning.cc	/^u32 GetOriginIfPoisoned(uptr addr, uptr size) {$/;"	f	namespace:__msan
GetOwnedCopy	lib/sanitizer_common/sanitizer_symbolizer.cc	/^const char *Symbolizer::ModuleNameOwner::GetOwnedCopy(const char *str) {$/;"	f	class:__sanitizer::Symbolizer::ModuleNameOwner
GetPC	lib/fuzzer/FuzzerTracePC.h	/^  uintptr_t GetPC(size_t Idx) {$/;"	f	class:fuzzer::TracePC
GetPageSize	lib/msan/tests/msan_test.cc	/^static uintptr_t GetPageSize() {$/;"	f	file:
GetPageSize	lib/sanitizer_common/sanitizer_fuchsia.cc	/^uptr GetPageSize() { return PAGE_SIZE; }$/;"	f	namespace:__sanitizer
GetPageSize	lib/sanitizer_common/sanitizer_linux.cc	/^uptr GetPageSize() {$/;"	f	namespace:__sanitizer
GetPageSize	lib/sanitizer_common/sanitizer_mac.cc	/^uptr GetPageSize() {$/;"	f	namespace:__sanitizer
GetPageSize	lib/sanitizer_common/sanitizer_rtems.cc	/^uptr GetPageSize() { return getpagesize(); }$/;"	f	namespace:__sanitizer
GetPageSize	lib/sanitizer_common/sanitizer_win.cc	/^uptr GetPageSize() {$/;"	f	namespace:__sanitizer
GetPageSizeCached	lib/sanitizer_common/sanitizer_common.h	/^INLINE uptr GetPageSizeCached() {$/;"	f	namespace:__sanitizer
GetPathAssumingFileIsRelativeToExec	lib/sanitizer_common/sanitizer_suppressions.cc	/^static bool GetPathAssumingFileIsRelativeToExec(const char *file_path,$/;"	f	namespace:__sanitizer
GetPathToLoadable	lib/msan/tests/msan_test.cc	/^static void GetPathToLoadable(char *buf, size_t sz) {$/;"	f	file:
GetPcSpBp	lib/sanitizer_common/sanitizer_linux.cc	/^static void GetPcSpBp(void *context, uptr *pc, uptr *sp, uptr *bp) {$/;"	f	namespace:__sanitizer
GetPcSpBp	lib/sanitizer_common/sanitizer_mac.cc	/^static void GetPcSpBp(void *context, uptr *pc, uptr *sp, uptr *bp) {$/;"	f	namespace:__sanitizer
GetPeakRSSMb	lib/fuzzer/FuzzerUtilFuchsia.cpp	/^size_t GetPeakRSSMb() {$/;"	f	namespace:fuzzer
GetPeakRSSMb	lib/fuzzer/FuzzerUtilPosix.cpp	/^size_t GetPeakRSSMb() {$/;"	f	namespace:fuzzer
GetPeakRSSMb	lib/fuzzer/FuzzerUtilWindows.cpp	/^size_t GetPeakRSSMb() {$/;"	f	namespace:fuzzer
GetPeakRSSMb	lib/fuzzer/afl/afl_driver.cpp	/^size_t GetPeakRSSMb() {$/;"	f
GetPid	lib/fuzzer/FuzzerUtilFuchsia.cpp	/^unsigned long GetPid() {$/;"	f	namespace:fuzzer
GetPid	lib/fuzzer/FuzzerUtilPosix.cpp	/^unsigned long GetPid() { return (unsigned long)getpid(); }$/;"	f	namespace:fuzzer
GetPid	lib/fuzzer/FuzzerUtilWindows.cpp	/^unsigned long GetPid() { return GetCurrentProcessId(); }$/;"	f	namespace:fuzzer
GetPoisoned	lib/msan/tests/msan_test.cc	/^T *GetPoisoned(int i = 0, T val = 0) {$/;"	f
GetPoisonedO	lib/msan/tests/msan_test.cc	/^T *GetPoisonedO(int i, U4 origin, T val = 0) {$/;"	f
GetPoisonedZero	lib/msan/tests/msan_test.cc	/^NOINLINE static int GetPoisonedZero() {$/;"	f	file:
GetPositionHint	lib/fuzzer/FuzzerDictionary.h	/^  size_t GetPositionHint() const {$/;"	f	class:fuzzer::DictionaryEntry
GetPreferredBase	lib/sanitizer_common/sanitizer_win.cc	/^static uptr GetPreferredBase(const char *modname) {$/;"	f	namespace:__sanitizer
GetPreviousInstructionPc	lib/fuzzer/FuzzerTracePC.cpp	/^inline ALWAYS_INLINE uintptr_t GetPreviousInstructionPc(uintptr_t PC) {$/;"	f	namespace:fuzzer
GetPreviousInstructionPc	lib/sanitizer_common/sanitizer_stacktrace.h	/^uptr StackTrace::GetPreviousInstructionPc(uptr pc) {$/;"	f	class:__sanitizer::StackTrace
GetPreviousNonBlankLine	lib/sanitizer_common/scripts/cpplint.py	/^def GetPreviousNonBlankLine(clean_lines, linenum):$/;"	f
GetPrintableStringForLabel	lib/fuzzer/dataflow/DataFlow.cpp	/^static char *GetPrintableStringForLabel(dfsan_label L) {$/;"	f	file:
GetProcessName	lib/sanitizer_common/sanitizer_common.cc	/^const char *GetProcessName() {$/;"	f	namespace:__sanitizer
GetProgramPath	lib/msan/tests/msan_test.cc	/^static void GetProgramPath(char *buf, size_t sz) {$/;"	f	file:
GetPthreadDestructorIterations	lib/sanitizer_common/sanitizer_common.h	/^INLINE uptr GetPthreadDestructorIterations() {$/;"	f	namespace:__sanitizer
GetPwd	lib/sanitizer_common/sanitizer_posix.cc	/^const char *GetPwd() {$/;"	f	namespace:__sanitizer
GetPwd	lib/sanitizer_common/sanitizer_win.cc	/^const char *GetPwd() {$/;"	f	namespace:__sanitizer
GetQuarantineCache	lib/asan/asan_allocator.cc	/^QuarantineCache *GetQuarantineCache(AsanThreadLocalMallocStorage *ms) {$/;"	f	namespace:__asan
GetRSS	lib/sanitizer_common/sanitizer_fuchsia.cc	/^uptr GetRSS() { UNIMPLEMENTED(); }$/;"	f	namespace:__sanitizer
GetRSS	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^uptr GetRSS() {$/;"	f	namespace:__sanitizer
GetRSS	lib/sanitizer_common/sanitizer_mac.cc	/^uptr GetRSS() {$/;"	f	namespace:__sanitizer
GetRSS	lib/sanitizer_common/sanitizer_win.cc	/^uptr GetRSS() {$/;"	f	namespace:__sanitizer
GetRSSFromGetrusage	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^static uptr GetRSSFromGetrusage() {$/;"	f	namespace:__sanitizer
GetRand	lib/fuzzer/FuzzerMutate.h	/^  Random &GetRand() { return Rand; }$/;"	f	class:fuzzer::MutationDispatcher
GetRandom	lib/sanitizer_common/sanitizer_fuchsia.cc	/^bool GetRandom(void *buffer, uptr length, bool blocking) {$/;"	f	namespace:__sanitizer
GetRandom	lib/sanitizer_common/sanitizer_linux.cc	/^bool GetRandom(void *buffer, uptr length, bool blocking) {$/;"	f	namespace:__sanitizer
GetRandom	lib/sanitizer_common/sanitizer_mac.cc	/^bool GetRandom(void *buffer, uptr length, bool blocking) {$/;"	f	namespace:__sanitizer
GetRandom	lib/sanitizer_common/sanitizer_win.cc	/^bool GetRandom(void *buffer, uptr length, bool blocking) {$/;"	f	namespace:__sanitizer
GetRealFunctionAddress	lib/interception/interception_linux.cc	/^bool GetRealFunctionAddress(const char *func_name, uptr *func_addr,$/;"	f	namespace:__interception
GetRegionBegin	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  uptr GetRegionBegin(const void *p) {$/;"	f	class:SizeClassAllocator64
GetRegionBeginBySizeClass	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  uptr GetRegionBeginBySizeClass(uptr class_id) const {$/;"	f	class:SizeClassAllocator64
GetRegionInfo	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  RegionInfo *GetRegionInfo(uptr class_id) const {$/;"	f	class:SizeClassAllocator64
GetRegistersAndSP	lib/sanitizer_common/sanitizer_stoptheworld.h	/^  virtual PtraceRegistersStatus GetRegistersAndSP(uptr index, uptr *buffer,$/;"	f	class:__sanitizer::SuspendedThreadsList
GetRegistersAndSP	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^PtraceRegistersStatus SuspendedThreadsListLinux::GetRegistersAndSP($/;"	f	class:__sanitizer::SuspendedThreadsListLinux
GetRegistersAndSP	lib/sanitizer_common/sanitizer_stoptheworld_mac.cc	/^PtraceRegistersStatus SuspendedThreadsListMac::GetRegistersAndSP($/;"	f	class:__sanitizer::SuspendedThreadsListMac
GetReleasedBytes	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^    uptr GetReleasedBytes() const {$/;"	f	class:SizeClassAllocator64::MemoryMapper
GetReleasedRangesCount	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^    uptr GetReleasedRangesCount() const {$/;"	f	class:SizeClassAllocator64::MemoryMapper
GetReport	lib/sanitizer_common/sanitizer_deadlock_detector1.cc	/^DDReport *DD::GetReport(DDCallback *cb) {$/;"	f	class:__sanitizer::DD
GetReport	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^DDReport *DD::GetReport(DDCallback *cb) {$/;"	f	class:__sanitizer::DD
GetReport	lib/sanitizer_common/sanitizer_deadlock_detector_interface.h	/^  virtual DDReport *GetReport(DDCallback *cb) { return nullptr; }$/;"	f	struct:__sanitizer::DDetector
GetReport	lib/tsan/rtl/tsan_rtl_report.cc	/^const ReportDesc *ScopedReportBase::GetReport() const { return rep_; }$/;"	f	class:__tsan::ScopedReportBase
GetReportHeaderFromTag	lib/tsan/rtl/tsan_external.cc	/^const char *GetReportHeaderFromTag(uptr tag) {$/;"	f	namespace:__tsan
GetRootRegions	lib/lsan/lsan_common.cc	/^InternalMmapVector<RootRegion> const *GetRootRegions() { return root_regions; }$/;"	f	namespace:__lsan
GetRss	lib/sanitizer_common/tests/sanitizer_allocator_testlib.cc	/^static size_t GetRss() {$/;"	f	namespace:__anon59
GetSanititizerToolName	lib/ubsan/ubsan_init.cc	/^const char *__ubsan::GetSanititizerToolName() {$/;"	f	class:__ubsan
GetScore	lib/asan/asan_scariness_score.h	/^  int GetScore() const { return score; }$/;"	f	struct:__asan::ScarinessScoreBase
GetSeparator	lib/fuzzer/FuzzerIOPosix.cpp	/^char GetSeparator() {$/;"	f	namespace:fuzzer
GetSeparator	lib/fuzzer/FuzzerIOWindows.cpp	/^char GetSeparator() {$/;"	f	namespace:fuzzer
GetShadow	lib/cfi/cfi.cc	/^uptr GetShadow() {$/;"	f	namespace:__cfi
GetShadowAddressInformation	lib/asan/asan_descriptions.cc	/^bool GetShadowAddressInformation(uptr addr, ShadowAddressDescription *descr) {$/;"	f	namespace:__asan
GetShadowKind	lib/asan/asan_descriptions.cc	/^static bool GetShadowKind(uptr addr, ShadowKind *shadow_kind) {$/;"	f	namespace:__asan
GetShadowSize	lib/cfi/cfi.cc	/^uptr GetShadowSize() {$/;"	f	namespace:__cfi
GetSize	lib/sanitizer_common/sanitizer_quarantine.h	/^  uptr GetSize() const { return atomic_load_relaxed(&max_size_); }$/;"	f	class:__sanitizer::Quarantine
GetSizeClass	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^  uptr GetSizeClass(const void *p) {$/;"	f	class:SizeClassAllocator32
GetSizeClass	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  uptr GetSizeClass(const void *p) {$/;"	f	class:SizeClassAllocator64
GetSizeClassInfo	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^  SizeClassInfo *GetSizeClassInfo(uptr class_id) {$/;"	f	class:SizeClassAllocator32
GetSizeFromHdr	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^int GetSizeFromHdr(struct dl_phdr_info *info, size_t size, void *data) {$/;"	f	namespace:__sanitizer
GetSizedFilesFromDir	lib/fuzzer/FuzzerIO.cpp	/^void GetSizedFilesFromDir(const std::string &Dir, Vector<SizedFile> *V) {$/;"	f	namespace:fuzzer
GetStackAddressInformation	lib/asan/asan_descriptions.cc	/^bool GetStackAddressInformation(uptr addr, uptr access_size,$/;"	f	namespace:__asan
GetStackBounds	lib/asan/asan_thread.cc	/^inline AsanThread::StackBounds AsanThread::GetStackBounds() const {$/;"	f	class:__asan::AsanThread
GetStackFrameAccessByAddr	lib/asan/asan_thread.cc	/^bool AsanThread::GetStackFrameAccessByAddr(uptr addr,$/;"	f	class:__asan::AsanThread
GetStackOriginDescr	lib/msan/msan.cc	/^const char *GetStackOriginDescr(u32 id, uptr *pc) {$/;"	f	namespace:__msan
GetStackSizeLimitInBytes	lib/sanitizer_common/sanitizer_posix_libcdep.cc	/^uptr GetStackSizeLimitInBytes() {$/;"	f	namespace:__sanitizer
GetStackTrace	lib/asan/asan_stack.h	/^void GetStackTrace(BufferedStackTrace *stack, uptr max_depth, uptr pc, uptr bp,$/;"	f	namespace:__asan
GetStackTrace	lib/hwasan/hwasan.cc	/^void GetStackTrace(BufferedStackTrace *stack, uptr max_s, uptr pc, uptr bp,$/;"	f	namespace:__hwasan
GetStackTrace	lib/lsan/lsan.h	/^void GetStackTrace(__sanitizer::BufferedStackTrace *stack,$/;"	f	namespace:__lsan
GetStackTrace	lib/msan/msan.cc	/^void GetStackTrace(BufferedStackTrace *stack, uptr max_s, uptr pc, uptr bp,$/;"	f	namespace:__msan
GetStackTrace	lib/ubsan/ubsan_diag.cc	/^void __ubsan::GetStackTrace(BufferedStackTrace *stack, uptr max_depth, uptr pc,$/;"	f	class:__ubsan
GetStackTraceFromId	lib/asan/asan_allocator.cc	/^static StackTrace GetStackTraceFromId(u32 id) {$/;"	f	namespace:__asan
GetStackTraceFromId	lib/asan/asan_descriptions.cc	/^static StackTrace GetStackTraceFromId(u32 id) {$/;"	f	namespace:__asan
GetStackTraceFromId	lib/hwasan/hwasan_report.cc	/^static StackTrace GetStackTraceFromId(u32 id) {$/;"	f	namespace:__hwasan
GetStackVariableShadowStart	lib/asan/asan_thread.cc	/^uptr AsanThread::GetStackVariableShadowStart(uptr addr) {$/;"	f	class:__asan::AsanThread
GetStats	lib/sanitizer_common/sanitizer_allocator_combined.h	/^  void GetStats(AllocatorStatCounters s) const {$/;"	f	class:CombinedAllocator
GetStats	lib/sanitizer_common/sanitizer_stackdepotbase.h	/^  StackDepotStats *GetStats() { return &stats; }$/;"	f	class:__sanitizer::StackDepotBase
GetSuccessCount	lib/fuzzer/FuzzerDictionary.h	/^  size_t GetSuccessCount() const {return SuccessCount; }$/;"	f	class:fuzzer::DictionaryEntry
GetSuppressionContext	lib/lsan/lsan_common.cc	/^static SuppressionContext *GetSuppressionContext() {$/;"	f	namespace:__lsan
GetSuppressionForAddr	lib/lsan/lsan_common.cc	/^static Suppression *GetSuppressionForAddr(uptr addr) {$/;"	f	namespace:__lsan
GetSuppressionForStack	lib/lsan/lsan_common.cc	/^static Suppression *GetSuppressionForStack(u32 stack_trace_id) {$/;"	f	namespace:__lsan
GetTLSFakeStack	lib/asan/asan_fake_stack.cc	/^FakeStack *GetTLSFakeStack() { return 0; }$/;"	f	namespace:__asan
GetTLSFakeStack	lib/asan/asan_fake_stack.cc	/^FakeStack *GetTLSFakeStack() {$/;"	f	namespace:__asan
GetTagData	lib/tsan/rtl/tsan_external.cc	/^static TagData *GetTagData(uptr tag) {$/;"	f	namespace:__tsan
GetTagFromPointer	lib/hwasan/hwasan.h	/^static inline tag_t GetTagFromPointer(uptr p) {$/;"	f
GetTargetQueueFromQueue	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^static dispatch_queue_t GetTargetQueueFromQueue(dispatch_queue_t q) {$/;"	f	namespace:__tsan
GetTargetQueueFromSource	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^static dispatch_queue_t GetTargetQueueFromSource(dispatch_source_t source) {$/;"	f	namespace:__tsan
GetTaskInfoMaxAddress	lib/sanitizer_common/sanitizer_mac.cc	/^uptr GetTaskInfoMaxAddress() {$/;"	f	namespace:__sanitizer
GetThread	lib/sanitizer_common/sanitizer_stoptheworld_mac.cc	/^thread_t SuspendedThreadsListMac::GetThread(uptr index) const {$/;"	f	class:__sanitizer::SuspendedThreadsListMac
GetThreadContext	lib/sanitizer_common/tests/sanitizer_thread_registry_test.cc	/^static ThreadContextBase *GetThreadContext(u32 tid) {$/;"	f	namespace:__sanitizer
GetThreadContextByTidLocked	lib/asan/asan_thread.cc	/^AsanThreadContext *GetThreadContextByTidLocked(u32 tid) {$/;"	f	namespace:__asan
GetThreadID	lib/sanitizer_common/sanitizer_stoptheworld.h	/^  virtual tid_t GetThreadID(uptr index) const { UNIMPLEMENTED(); }$/;"	f	class:__sanitizer::SuspendedThreadsList
GetThreadID	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^tid_t SuspendedThreadsListLinux::GetThreadID(uptr index) const {$/;"	f	class:__sanitizer::SuspendedThreadsListLinux
GetThreadID	lib/sanitizer_common/sanitizer_stoptheworld_mac.cc	/^tid_t SuspendedThreadsListMac::GetThreadID(uptr index) const {$/;"	f	class:__sanitizer::SuspendedThreadsListMac
GetThreadLocked	lib/sanitizer_common/sanitizer_thread_registry.h	/^  ThreadContextBase *GetThreadLocked(u32 tid) {$/;"	f	class:__sanitizer::ThreadRegistry
GetThreadRangesLocked	lib/asan/asan_thread.cc	/^bool GetThreadRangesLocked(tid_t os_id, uptr *stack_begin, uptr *stack_end,$/;"	f	namespace:__lsan
GetThreadRangesLocked	lib/lsan/lsan_thread.cc	/^bool GetThreadRangesLocked(tid_t os_id, uptr *stack_begin, uptr *stack_end,$/;"	f	namespace:__lsan
GetThreadRegistryLocked	lib/asan/asan_thread.cc	/^ThreadRegistry *GetThreadRegistryLocked() {$/;"	f	namespace:__lsan
GetThreadRegistryLocked	lib/lsan/lsan_thread.cc	/^ThreadRegistry *GetThreadRegistryLocked() {$/;"	f	namespace:__lsan
GetThreadSelf	lib/sanitizer_common/sanitizer_fuchsia.cc	/^uptr GetThreadSelf() { return reinterpret_cast<uptr>(thrd_current()); }$/;"	f	namespace:__sanitizer
GetThreadSelf	lib/sanitizer_common/sanitizer_posix_libcdep.cc	/^uptr GetThreadSelf() {$/;"	f	namespace:__sanitizer
GetThreadSelf	lib/sanitizer_common/sanitizer_rtems.cc	/^uptr GetThreadSelf() { return static_cast<uptr>(pthread_self()); }$/;"	f	namespace:__sanitizer
GetThreadSelf	lib/sanitizer_common/sanitizer_win.cc	/^uptr GetThreadSelf() {$/;"	f	namespace:__sanitizer
GetThreadStackAndTls	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^void GetThreadStackAndTls(bool main, uptr *stk_addr, uptr *stk_size,$/;"	f	namespace:__sanitizer
GetThreadStackAndTls	lib/sanitizer_common/sanitizer_mac.cc	/^void GetThreadStackAndTls(bool main, uptr *stk_addr, uptr *stk_size,$/;"	f	namespace:__sanitizer
GetThreadStackAndTls	lib/sanitizer_common/sanitizer_rtems.cc	/^void GetThreadStackAndTls(bool main, uptr *stk_addr, uptr *stk_size,$/;"	f	namespace:__sanitizer
GetThreadStackAndTls	lib/sanitizer_common/sanitizer_win.cc	/^void GetThreadStackAndTls(bool main, uptr *stk_addr, uptr *stk_size,$/;"	f	namespace:__sanitizer
GetThreadStackTopAndBottom	lib/sanitizer_common/sanitizer_fuchsia.cc	/^void GetThreadStackTopAndBottom(bool, uptr *stack_top, uptr *stack_bottom) {$/;"	f	namespace:__sanitizer
GetThreadStackTopAndBottom	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^void GetThreadStackTopAndBottom(bool at_initialization, uptr *stack_top,$/;"	f	namespace:__sanitizer
GetThreadStackTopAndBottom	lib/sanitizer_common/sanitizer_mac.cc	/^void GetThreadStackTopAndBottom(bool at_initialization, uptr *stack_top,$/;"	f	namespace:__sanitizer
GetThreadStackTopAndBottom	lib/sanitizer_common/sanitizer_rtems.cc	/^void GetThreadStackTopAndBottom(bool at_initialization,$/;"	f	namespace:__sanitizer
GetThreadStackTopAndBottom	lib/sanitizer_common/sanitizer_win.cc	/^void GetThreadStackTopAndBottom(bool at_initialization, uptr *stack_top,$/;"	f	namespace:__sanitizer
GetThreadTrace	lib/tsan/rtl/tsan_platform.h	/^uptr GetThreadTrace(int tid) {$/;"	f	namespace:__tsan
GetThreadTraceHeader	lib/tsan/rtl/tsan_platform.h	/^uptr GetThreadTraceHeader(int tid) {$/;"	f	namespace:__tsan
GetThreadTraceHeaderImpl	lib/tsan/rtl/tsan_platform.h	/^uptr GetThreadTraceHeaderImpl(int tid) {$/;"	f	namespace:__tsan
GetThreadTraceImpl	lib/tsan/rtl/tsan_platform.h	/^uptr GetThreadTraceImpl(int tid) {$/;"	f	namespace:__tsan
GetTid	lib/sanitizer_common/sanitizer_fuchsia.cc	/^tid_t GetTid() { return GetThreadSelf(); }$/;"	f	namespace:__sanitizer
GetTid	lib/sanitizer_common/sanitizer_linux.cc	/^tid_t GetTid() {$/;"	f	namespace:__sanitizer
GetTid	lib/sanitizer_common/sanitizer_mac.cc	/^tid_t GetTid() {$/;"	f	namespace:__sanitizer
GetTid	lib/sanitizer_common/sanitizer_rtems.cc	/^tid_t GetTid() { return GetThreadSelf(); }$/;"	f	namespace:__sanitizer
GetTid	lib/sanitizer_common/sanitizer_win.cc	/^tid_t GetTid() {$/;"	f	namespace:__sanitizer
GetTls	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^static void GetTls(uptr *addr, uptr *size) {$/;"	f	namespace:__sanitizer
GetTls	test/msan/dtls_test.c	/^get_t GetTls;$/;"	v
GetTls	test/msan/dtls_test.c	/^long *GetTls() {$/;"	f
GetTls	test/tsan/dtls.c	/^get_t GetTls;$/;"	v
GetTls	test/tsan/dtls.c	/^long *GetTls() {$/;"	f
GetTlsSize	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^uptr GetTlsSize() {$/;"	f	namespace:__sanitizer
GetTlsSize	lib/sanitizer_common/sanitizer_mac.cc	/^uptr GetTlsSize() {$/;"	f	namespace:__sanitizer
GetTlsSize	lib/sanitizer_common/sanitizer_win.cc	/^uptr GetTlsSize() {$/;"	f	namespace:__sanitizer
GetTlsStaticInfoCall	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^struct GetTlsStaticInfoCall {$/;"	s	namespace:__sanitizer::__anon98	file:
GetTlsStaticInfoRegparmCall	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^struct GetTlsStaticInfoRegparmCall {$/;"	s	namespace:__sanitizer::__anon98	file:
GetTotalPCCoverage	lib/fuzzer/FuzzerTracePC.cpp	/^size_t TracePC::GetTotalPCCoverage() {$/;"	f	class:fuzzer::TracePC
GetTracePos	lib/tsan/rtl/tsan_rtl.h	/^  u64 GetTracePos() const {$/;"	f	class:__tsan::FastState
GetType	lib/sanitizer_common/sanitizer_posix.cc	/^int SignalContext::GetType() const {$/;"	f	class:__sanitizer::SignalContext
GetType	lib/sanitizer_common/sanitizer_win.cc	/^int SignalContext::GetType() const {$/;"	f	class:__sanitizer::SignalContext
GetTypes	lib/sanitizer_common/symbolizer/sanitizer_wrappers.cc	/^struct GetTypes<R(Args...)> {$/;"	s	namespace:__anon88	file:
GetUid	lib/sanitizer_common/sanitizer_posix_libcdep.cc	/^u32 GetUid() {$/;"	f	namespace:__sanitizer
GetUid	lib/sanitizer_common/sanitizer_win.cc	/^u32 GetUid() {$/;"	f	namespace:__sanitizer
GetUseCount	lib/fuzzer/FuzzerDictionary.h	/^  size_t GetUseCount() const { return UseCount; }$/;"	f	class:fuzzer::DictionaryEntry
GetUser	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^  void *GetUser(Header *h) {$/;"	f	class:LargeMmapAllocator
GetUserBegin	lib/asan/asan_allocator.cc	/^uptr GetUserBegin(uptr chunk) {$/;"	f	namespace:__lsan
GetUserBegin	lib/lsan/lsan_allocator.cc	/^uptr GetUserBegin(uptr chunk) {$/;"	f	namespace:__lsan
GetUserRegion	lib/tsan/rtl/tsan_platform.h	/^bool GetUserRegion(int i, uptr *start, uptr *end) {$/;"	f	namespace:__tsan
GetValueData	lib/profile/InstrProfilingInternal.h	/^  struct ValueProfNode *(*GetValueData)(uint32_t ValueKind, uint32_t Site,$/;"	m	struct:VPDataReaderType	typeref:struct:VPDataReaderType::GetValueData
GetValueProfDataSize	lib/profile/InstrProfilingInternal.h	/^  uint32_t (*GetValueProfDataSize)(void);$/;"	m	struct:VPDataReaderType
GetValueProfRecordHeaderSize	lib/profile/InstrProfilingInternal.h	/^  uint32_t (*GetValueProfRecordHeaderSize)(uint32_t NumSites);$/;"	m	struct:VPDataReaderType
GetW	lib/fuzzer/FuzzerDictionary.h	/^  const Word &GetW() const { return W; }$/;"	f	class:fuzzer::DictionaryEntry
GetWriteFlag	lib/sanitizer_common/sanitizer_linux.cc	/^SignalContext::WriteFlag SignalContext::GetWriteFlag() const {$/;"	f	class:__sanitizer::SignalContext
GetWriteFlag	lib/sanitizer_common/sanitizer_mac.cc	/^SignalContext::WriteFlag SignalContext::GetWriteFlag() const {$/;"	f	class:__sanitizer::SignalContext
GetWriteFlag	lib/sanitizer_common/sanitizer_win.cc	/^SignalContext::WriteFlag SignalContext::GetWriteFlag() const {$/;"	f	class:__sanitizer::SignalContext
Glibc_2_19_tls_header	lib/sanitizer_common/sanitizer_tls_get_addr.cc	/^struct Glibc_2_19_tls_header {$/;"	s	namespace:__sanitizer	file:
Global	lib/asan/asan_globals.cc	/^typedef __asan_global Global;$/;"	t	namespace:__asan	file:
Global	lib/asan/tests/asan_str_test.cc	/^  Global,$/;"	m	class:__anon40::OOBKind	file:
Global	test/BlocksRuntime/nestedimport.c	/^int Global = 0;$/;"	v
Global	test/BlocksRuntime/voidarg.c	/^int Global;$/;"	v
Global	test/tsan/Darwin/osspinlock-norace.cc	/^int Global;$/;"	v
Global	test/tsan/aligned_vs_unaligned_race.cc	/^uint64_t Global[2];$/;"	v
Global	test/tsan/annotate_happens_before.cc	/^int Global;$/;"	v
Global	test/tsan/atomic_stack.cc	/^int Global;$/;"	v
Global	test/tsan/benign_race.cc	/^int Global;$/;"	v
Global	test/tsan/blacklist.cc	/^int Global;$/;"	v
Global	test/tsan/blacklist2.cc	/^int Global;$/;"	v
Global	test/tsan/default_options.cc	/^int Global;$/;"	v
Global	test/tsan/ignore_race.cc	/^int Global;$/;"	v
Global	test/tsan/ignore_sync.cc	/^int Global;$/;"	v
Global	test/tsan/mutexset1.cc	/^int Global;$/;"	v
Global	test/tsan/mutexset2.cc	/^int Global;$/;"	v
Global	test/tsan/mutexset3.cc	/^int Global;$/;"	v
Global	test/tsan/mutexset4.cc	/^int Global;$/;"	v
Global	test/tsan/mutexset5.cc	/^int Global;$/;"	v
Global	test/tsan/mutexset6.cc	/^int Global;$/;"	v
Global	test/tsan/mutexset7.cc	/^int Global;$/;"	v
Global	test/tsan/mutexset8.cc	/^int Global;$/;"	v
Global	test/tsan/race_on_barrier.c	/^int Global;$/;"	v
Global	test/tsan/race_on_barrier2.c	/^int Global;$/;"	v
Global	test/tsan/race_on_mutex.c	/^int Global;$/;"	v
Global	test/tsan/race_top_suppression.cc	/^int Global;$/;"	v
Global	test/tsan/race_top_suppression1.cc	/^int Global;$/;"	v
Global	test/tsan/restore_stack.cc	/^int Global;$/;"	v
Global	test/tsan/simple_race.c	/^int Global;$/;"	v
Global	test/tsan/simple_race.cc	/^int Global;$/;"	v
Global	test/tsan/simple_stack.c	/^int Global;$/;"	v
Global	test/tsan/simple_stack2.cc	/^int Global;$/;"	v
Global	test/tsan/suppressions_race.cc	/^int Global;$/;"	v
Global	test/tsan/suppressions_race2.cc	/^int Global;$/;"	v
Global	test/tsan/thread_name.cc	/^int Global;$/;"	v
Global	test/tsan/thread_name2.cc	/^long long Global;$/;"	v
Global	test/tsan/tiny_race.c	/^int Global;$/;"	v
GlobalAddressDescription	lib/asan/asan_descriptions.h	/^struct GlobalAddressDescription {$/;"	s	namespace:__asan
GlobalAllocators	lib/xray/xray_profile_collector.cc	/^FunctionCallTrie::Allocators *GlobalAllocators = nullptr;$/;"	m	namespace:__xray::profileCollectorService::__anon27	file:
GlobalData	test/tsan/Darwin/symbolizer-atos.cc	/^int GlobalData[10];$/;"	v
GlobalData	test/tsan/Darwin/symbolizer-dladdr.cc	/^int GlobalData[10];$/;"	v
GlobalData	test/tsan/global_race.cc	/^int GlobalData[10];$/;"	v
GlobalFilename	lib/asan/asan_globals.cc	/^static const char *GlobalFilename(const __asan_global &g) {$/;"	f	namespace:__asan
GlobalInitialized	lib/scudo/scudo_tsd_exclusive.cpp	/^static pthread_once_t GlobalInitialized = PTHREAD_ONCE_INIT;$/;"	m	namespace:__scudo	file:
GlobalInitialized	lib/scudo/scudo_tsd_shared.cpp	/^static pthread_once_t GlobalInitialized = PTHREAD_ONCE_INIT;$/;"	m	namespace:__scudo	file:
GlobalMajor	lib/builtins/os_version_check.c	/^static int32_t GlobalMajor, GlobalMinor, GlobalSubminor;$/;"	v	file:
GlobalMinor	lib/builtins/os_version_check.c	/^static int32_t GlobalMajor, GlobalMinor, GlobalSubminor;$/;"	v	file:
GlobalMutex	lib/xray/xray_profile_collector.cc	/^SpinMutex GlobalMutex;$/;"	m	namespace:__xray::profileCollectorService::__anon27	file:
GlobalOptions	lib/xray/xray_basic_logging.cc	/^BasicLoggingOptions GlobalOptions;$/;"	m	namespace:__xray	file:
GlobalPollerStarter	test/asan/TestCases/Posix/init-order-pthread-create.cc	/^  GlobalPollerStarter() {$/;"	f	struct:GlobalPollerStarter
GlobalPollerStarter	test/asan/TestCases/Posix/init-order-pthread-create.cc	/^struct GlobalPollerStarter {$/;"	s	file:
GlobalProc	lib/tsan/rtl/tsan_mman.cc	/^  GlobalProc()$/;"	f	struct:__tsan::GlobalProc
GlobalProc	lib/tsan/rtl/tsan_mman.cc	/^struct GlobalProc {$/;"	s	namespace:__tsan	file:
GlobalPtr	test/asan/TestCases/Linux/malloc-in-qsort.cc	/^int *GlobalPtr;$/;"	v
GlobalRegistrationSite	lib/asan/asan_globals.cc	/^struct GlobalRegistrationSite {$/;"	s	namespace:__asan	file:
GlobalRegistrationSiteVector	lib/asan/asan_globals.cc	/^typedef InternalMmapVector<GlobalRegistrationSite> GlobalRegistrationSiteVector;$/;"	t	namespace:__asan	file:
GlobalSubminor	lib/builtins/os_version_check.c	/^static int32_t GlobalMajor, GlobalMinor, GlobalSubminor;$/;"	v	file:
GlobalSymbolState	lib/asan/asan_globals.cc	/^enum GlobalSymbolState {$/;"	g	namespace:__asan	file:
GlobalXRayImpl	lib/xray/xray_log_interface.cc	/^static XRayLogImpl *GlobalXRayImpl = nullptr;$/;"	m	namespace:__xray	file:
GlobalsTest	lib/asan/tests/asan_globals_test.cc	/^int GlobalsTest(int zero) {$/;"	f
GracefulExitHandler	lib/fuzzer/FuzzerUtilPosix.cpp	/^static void GracefulExitHandler(int, siginfo_t *, void *) {$/;"	f	namespace:fuzzer
GracefulExitRequested	lib/fuzzer/FuzzerInternal.h	/^  bool GracefulExitRequested = false;$/;"	m	class:fuzzer::Fuzzer
Green	lib/sanitizer_common/sanitizer_report_decorator.h	/^  const char *Green()   const { return ansi_ ? "\\033[1m\\033[32m" : ""; }$/;"	f	class:__sanitizer::SanitizerCommonDecorator
GrowShadowStack	lib/tsan/rtl/tsan_rtl.cc	/^void GrowShadowStack(ThreadState *thr) {$/;"	f	namespace:__tsan
H	lib/builtins/hexagon/sfsqrt_opt.S	/^#define H r1$/;"	d
H	lib/tsan/rtl/tsan_md5.cc	19;"	d	file:
HACKY_CALL	lib/tsan/rtl/tsan_rtl.h	821;"	d
HACKY_CALL	lib/tsan/rtl/tsan_rtl.h	830;"	d
HALF	lib/builtins/hexagon/sfsqrt_opt.S	/^    HALF = ##0x3f000000   \/\/ 0.5$/;"	d
HALF	lib/builtins/hexagon/sfsqrt_opt.S	/^#define HALF r4$/;"	d
HANDLER	lib/ubsan_minimal/ubsan_minimal_handlers.cc	93;"	d	file:
HANDLER_NORECOVER	lib/ubsan_minimal/ubsan_minimal_handlers.cc	87;"	d	file:
HANDLER_RECOVER	lib/ubsan_minimal/ubsan_minimal_handlers.cc	81;"	d	file:
HANDLE_EINTR	lib/sanitizer_common/sanitizer_internal_defs.h	404;"	d
HASH_LENGTH	lib/fuzzer/FuzzerSHA1.cpp	51;"	d	file:
HAVE_INT128_T	lib/ubsan/ubsan_value.h	24;"	d
HAVE_INT128_T	lib/ubsan/ubsan_value.h	26;"	d
HAVE_RPC_XDR_H	lib/sanitizer_common/sanitizer_platform.h	275;"	d
HAVE_SYSCONF	lib/builtins/enable_execute_stack.c	21;"	d	file:
HAVE_TIRPC_RPC_XDR_H	lib/sanitizer_common/sanitizer_platform.h	276;"	d
HH	lib/builtins/hexagon/dfsqrt.S	/^		HH = mpyu(ROOTHI,ROOTHI)$/;"	d
HH	lib/builtins/hexagon/dfsqrt.S	/^#define HH r7:6$/;"	d
HIDDEN	lib/builtins/assembly.h	26;"	d
HIDDEN	lib/builtins/assembly.h	37;"	d
HIDDEN	lib/builtins/assembly.h	56;"	d
HI_MANTBITS	lib/builtins/hexagon/dfaddsub.S	/^#define HI_MANTBITS 20$/;"	d
HI_MANTBITS	lib/builtins/hexagon/dffma.S	/^#define HI_MANTBITS 20$/;"	d
HI_MANTBITS	lib/builtins/hexagon/dfmul.S	/^#define HI_MANTBITS 20$/;"	d
HL	lib/builtins/hexagon/dfsqrt.S	/^		HL = mpyu(ROOTHI,ROOTLO)$/;"	d
HL	lib/builtins/hexagon/dfsqrt.S	/^#define HL r3:2$/;"	d
HOOK	lib/fuzzer/dataflow/DataFlow.cpp	201;"	d	file:
HUGE	test/builtins/Unit/ppc/fixtfdi_test.c	11;"	d	file:
HUGE	test/builtins/Unit/ppc/qadd_test.c	28;"	d	file:
HUGE	test/builtins/Unit/ppc/qdiv_test.c	28;"	d	file:
HUGE	test/builtins/Unit/ppc/qmul_test.c	28;"	d	file:
HUGE	test/builtins/Unit/ppc/qsub_test.c	28;"	d	file:
HWASAN_ALLOCATOR_H	lib/hwasan/hwasan_allocator.h	15;"	d
HWASAN_CONTAINS_UBSAN	lib/hwasan/hwasan.h	30;"	d
HWASAN_FIXED_MAPPING	lib/hwasan/hwasan_mapping.h	57;"	d
HWASAN_FIXED_MAPPING	lib/hwasan/hwasan_mapping.h	59;"	d
HWASAN_FLAG	lib/hwasan/hwasan.cc	65;"	d	file:
HWASAN_FLAG	lib/hwasan/hwasan.cc	67;"	d	file:
HWASAN_FLAG	lib/hwasan/hwasan.cc	71;"	d	file:
HWASAN_FLAG	lib/hwasan/hwasan.cc	74;"	d	file:
HWASAN_FLAG	lib/hwasan/hwasan_flags.h	19;"	d
HWASAN_FLAG	lib/hwasan/hwasan_flags.h	21;"	d
HWASAN_FLAGS_H	lib/hwasan/hwasan_flags.h	14;"	d
HWASAN_FREE_HOOK	lib/hwasan/hwasan.h	154;"	d
HWASAN_H	lib/hwasan/hwasan.h	16;"	d
HWASAN_INTERCEPT_FUNC	lib/hwasan/hwasan_interceptors.cc	352;"	d	file:
HWASAN_INTERCEPT_FUNC_VER	lib/hwasan/hwasan_interceptors.cc	358;"	d	file:
HWASAN_INTERFACE_INTERNAL_H	lib/hwasan/hwasan_interface_internal.h	16;"	d
HWASAN_MALLOC_HOOK	lib/hwasan/hwasan.h	147;"	d
HWASAN_MAPPING_H	lib/hwasan/hwasan_mapping.h	16;"	d
HWASAN_MAYBE_INTERCEPT_CFREE	lib/hwasan/hwasan_interceptors.cc	189;"	d	file:
HWASAN_MAYBE_INTERCEPT_CFREE	lib/hwasan/hwasan_interceptors.cc	191;"	d	file:
HWASAN_MAYBE_INTERCEPT_MALLINFO	lib/hwasan/hwasan_interceptors.cc	211;"	d	file:
HWASAN_MAYBE_INTERCEPT_MALLINFO	lib/hwasan/hwasan_interceptors.cc	213;"	d	file:
HWASAN_MAYBE_INTERCEPT_MALLOC_STATS	lib/hwasan/hwasan_interceptors.cc	229;"	d	file:
HWASAN_MAYBE_INTERCEPT_MALLOC_STATS	lib/hwasan/hwasan_interceptors.cc	231;"	d	file:
HWASAN_MAYBE_INTERCEPT_MALLOPT	lib/hwasan/hwasan_interceptors.cc	220;"	d	file:
HWASAN_MAYBE_INTERCEPT_MALLOPT	lib/hwasan/hwasan_interceptors.cc	222;"	d	file:
HWASAN_MAYBE_INTERCEPT_MEMALIGN	lib/hwasan/hwasan_interceptors.cc	144;"	d	file:
HWASAN_MAYBE_INTERCEPT_MEMALIGN	lib/hwasan/hwasan_interceptors.cc	146;"	d	file:
HWASAN_MAYBE_INTERCEPT_PVALLOC	lib/hwasan/hwasan_interceptors.cc	172;"	d	file:
HWASAN_MAYBE_INTERCEPT_PVALLOC	lib/hwasan/hwasan_interceptors.cc	174;"	d	file:
HWASAN_POISONING_H	lib/hwasan/hwasan_poisoning.h	15;"	d
HWASAN_PREMAP_SHADOW	lib/hwasan/hwasan_mapping.h	64;"	d
HWASAN_PREMAP_SHADOW	lib/hwasan/hwasan_mapping.h	67;"	d
HWASAN_PREMAP_SHADOW_H	lib/hwasan/hwasan_dynamic_shadow.h	17;"	d
HWASAN_READ_RANGE	lib/hwasan/hwasan_interceptors.cc	96;"	d	file:
HWASAN_REPLACE_OPERATORS_NEW_AND_DELETE	lib/hwasan/hwasan.h	26;"	d
HWASAN_REPORT_H	lib/hwasan/hwasan_report.h	17;"	d
HWASAN_THREAD_H	lib/hwasan/hwasan_thread.h	15;"	d
HWASAN_WRITE_RANGE	lib/hwasan/hwasan_interceptors.cc	98;"	d	file:
HWAsanCheckFailed	lib/hwasan/hwasan.cc	/^static void HWAsanCheckFailed(const char *file, int line, const char *cond,$/;"	f	namespace:__hwasan
HWCAP_CRC32	lib/scudo/scudo_utils.cpp	87;"	d	file:
Handle	lib/msan/msan_chained_origin_depot.cc	/^    Handle() : node_(nullptr) {}$/;"	f	struct:__msan::ChainedOriginDepotNode::Handle
Handle	lib/msan/msan_chained_origin_depot.cc	/^    explicit Handle(ChainedOriginDepotNode *node) : node_(node) {}$/;"	f	struct:__msan::ChainedOriginDepotNode::Handle
Handle	lib/msan/msan_chained_origin_depot.cc	/^  struct Handle {$/;"	s	struct:__msan::ChainedOriginDepotNode	file:
Handle	lib/sanitizer_common/sanitizer_addrhashmap.h	/^  class Handle {$/;"	c	class:__sanitizer::AddrHashMap
Handle	lib/sanitizer_common/sanitizer_addrhashmap.h	/^AddrHashMap<T, kSize>::Handle::Handle(AddrHashMap<T, kSize> *map, uptr addr) {$/;"	f	class:__sanitizer::AddrHashMap::Handle
Handle	lib/sanitizer_common/sanitizer_addrhashmap.h	/^AddrHashMap<T, kSize>::Handle::Handle(AddrHashMap<T, kSize> *map, uptr addr,$/;"	f	class:__sanitizer::AddrHashMap::Handle
HandleAbrt	lib/fuzzer/FuzzerOptions.h	/^  bool HandleAbrt = false;$/;"	m	struct:fuzzer::FuzzingOptions
HandleBus	lib/fuzzer/FuzzerOptions.h	/^  bool HandleBus = false;$/;"	m	struct:fuzzer::FuzzingOptions
HandleCallerCallee	lib/fuzzer/FuzzerTracePC.cpp	/^void TracePC::HandleCallerCallee(uintptr_t Caller, uintptr_t Callee) {$/;"	f	class:fuzzer::TracePC
HandleCmp	lib/fuzzer/FuzzerTracePC.cpp	/^void TracePC::HandleCmp(uintptr_t PC, T Arg1, T Arg2) {$/;"	f	class:fuzzer::TracePC
HandleDeadlySignal	lib/sanitizer_common/sanitizer_symbolizer_report.cc	/^void HandleDeadlySignal(void *siginfo, void *context, u32 tid,$/;"	f	namespace:__sanitizer
HandleDynamicTypeCacheMiss	lib/ubsan/ubsan_handlers_cxx.cc	/^static bool HandleDynamicTypeCacheMiss($/;"	f	file:
HandleEvent	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^void ScopedThread::Impl::HandleEvent(Event *ev) {$/;"	f	class:ScopedThread::Impl
HandleExit	lib/asan/asan_rtems.cc	/^static void HandleExit() {$/;"	f	namespace:__asan
HandleFpe	lib/fuzzer/FuzzerOptions.h	/^  bool HandleFpe = false;$/;"	m	struct:fuzzer::FuzzingOptions
HandleIll	lib/fuzzer/FuzzerOptions.h	/^  bool HandleIll = false;$/;"	m	struct:fuzzer::FuzzingOptions
HandleInit	lib/fuzzer/FuzzerTracePC.cpp	/^void TracePC::HandleInit(uint32_t *Start, uint32_t *Stop) {$/;"	f	class:fuzzer::TracePC
HandleInline8bitCountersInit	lib/fuzzer/FuzzerTracePC.cpp	/^void TracePC::HandleInline8bitCountersInit(uint8_t *Start, uint8_t *Stop) {$/;"	f	class:fuzzer::TracePC
HandleInt	lib/fuzzer/FuzzerOptions.h	/^  bool HandleInt = false;$/;"	m	struct:fuzzer::FuzzingOptions
HandleLeaks	lib/lsan/lsan_common_linux.cc	/^void HandleLeaks() {$/;"	f	namespace:__lsan
HandleLeaks	lib/lsan/lsan_common_mac.cc	/^void HandleLeaks() {}$/;"	f	namespace:__lsan
HandleMalloc	lib/fuzzer/FuzzerLoop.cpp	/^void Fuzzer::HandleMalloc(size_t Size) {$/;"	f	class:fuzzer::Fuzzer
HandleNoReturn	lib/asan/asan_fake_stack.cc	/^void FakeStack::HandleNoReturn() {$/;"	f	class:__asan::FakeStack
HandlePCsInit	lib/fuzzer/FuzzerTracePC.cpp	/^void TracePC::HandlePCsInit(const uintptr_t *Start, const uintptr_t *Stop) {$/;"	f	class:fuzzer::TracePC
HandleRace	lib/tsan/rtl/tsan_rtl.cc	/^void HandleRace(ThreadState *thr, u64 *shadow_mem,$/;"	f	namespace:__tsan
HandleRacyStacks	lib/tsan/rtl/tsan_rtl_report.cc	/^static bool HandleRacyStacks(ThreadState *thr, VarSizeStackTrace traces[2],$/;"	f	namespace:__tsan
HandleRecvmsg	lib/tsan/rtl/tsan_interceptors.cc	/^static void HandleRecvmsg(ThreadState *thr, uptr pc,$/;"	f	file:
HandleSegv	lib/fuzzer/FuzzerOptions.h	/^  bool HandleSegv = false;$/;"	m	struct:fuzzer::FuzzingOptions
HandleSignalMode	lib/sanitizer_common/sanitizer_flags.h	/^enum HandleSignalMode {$/;"	g	namespace:__sanitizer
HandleTerm	lib/fuzzer/FuzzerOptions.h	/^  bool HandleTerm = false;$/;"	m	struct:fuzzer::FuzzingOptions
HandleUnstable	lib/fuzzer/FuzzerOptions.h	/^  int HandleUnstable = 0;$/;"	m	struct:fuzzer::FuzzingOptions
HandleUnstableOptions	lib/fuzzer/FuzzerTracePC.h	/^  enum HandleUnstableOptions {$/;"	g	class:fuzzer::TracePC
HandleUsr1	lib/fuzzer/FuzzerOptions.h	/^  bool HandleUsr1 = false;$/;"	m	struct:fuzzer::FuzzingOptions
HandleUsr2	lib/fuzzer/FuzzerOptions.h	/^  bool HandleUsr2 = false;$/;"	m	struct:fuzzer::FuzzingOptions
HandleXfsz	lib/fuzzer/FuzzerOptions.h	/^  bool HandleXfsz = false;$/;"	m	struct:fuzzer::FuzzingOptions
HandlerOpt	lib/fuzzer/FuzzerUtilWindows.cpp	/^static const FuzzingOptions* HandlerOpt = nullptr;$/;"	m	namespace:fuzzer	file:
HappensBefore	lib/tsan/rtl/tsan_rtl.cc	/^static inline bool HappensBefore(Shadow old, ThreadState *thr) {$/;"	f	namespace:__tsan
HardRssLimitMb	lib/scudo/scudo_allocator.cpp	/^  uptr HardRssLimitMb;$/;"	m	struct:__scudo::Allocator	file:
HasElement	lib/sanitizer_common/tests/sanitizer_linux_test.cc	/^static bool HasElement(const std::vector<tid_t> &vector, tid_t element) {$/;"	f	namespace:__sanitizer
HasFocusFunction	lib/fuzzer/FuzzerCorpus.h	/^  bool HasFocusFunction = false;$/;"	m	struct:fuzzer::InputInfo
HasMoreMallocsThanFrees	lib/fuzzer/FuzzerInternal.h	/^  bool HasMoreMallocsThanFrees = false;$/;"	m	class:fuzzer::Fuzzer
HasName	lib/sanitizer_common/tests/sanitizer_thread_registry_test.cc	/^static bool HasName(ThreadContextBase *tctx, void *arg) {$/;"	f	namespace:__sanitizer
HasPositionHint	lib/fuzzer/FuzzerDictionary.h	/^  bool HasPositionHint() const { return PositionHint != std::numeric_limits<size_t>::max(); }$/;"	f	class:fuzzer::DictionaryEntry
HasReportedLeaks	lib/lsan/lsan_common.cc	/^bool HasReportedLeaks() { return has_reported_leaks; }$/;"	f	namespace:__lsan
HasSuppressionType	lib/sanitizer_common/sanitizer_suppressions.cc	/^bool SuppressionContext::HasSuppressionType(const char *type) const {$/;"	f	class:__sanitizer::SuppressionContext
HasUid	lib/sanitizer_common/tests/sanitizer_thread_registry_test.cc	/^static bool HasUid(ThreadContextBase *tctx, void *arg) {$/;"	f	namespace:__sanitizer
HasUnit	lib/fuzzer/FuzzerCorpus.h	/^  bool HasUnit(const Unit &U) { return Hashes.count(Hash(U)); }$/;"	f	class:fuzzer::InputCorpus
HasUnit	lib/fuzzer/FuzzerCorpus.h	/^  bool HasUnit(const std::string &H) { return Hashes.count(H); }$/;"	f	class:fuzzer::InputCorpus
Hash	lib/fuzzer/FuzzerSHA1.cpp	/^std::string Hash(const Unit &U) {$/;"	f	namespace:fuzzer
HashAlgorithm	lib/scudo/scudo_allocator.cpp	/^static atomic_uint8_t HashAlgorithm = { CRC32Software };$/;"	m	namespace:__scudo	file:
HashEntry	lib/esan/esan_hashtable.h	/^  struct HashEntry {$/;"	s	class:__esan::HashTable
HashFunc	lib/esan/esan_hashtable.h	/^  const HashFuncTy HashFunc;$/;"	m	class:__esan::HashTable
HashPair	lib/esan/esan_hashtable.h	/^    HashPair(KeyTy Key, DataTy Data) : Key(Key), Data(Data) {}$/;"	f	struct:__esan::HashTable::HashPair
HashPair	lib/esan/esan_hashtable.h	/^  struct HashPair {$/;"	s	class:__esan::HashTable
HashTable	lib/esan/esan_hashtable.h	/^HashTable<KeyTy, DataTy, ExternalLock, HashFuncTy, EqualFuncTy>::HashTable($/;"	f	class:__esan::HashTable
HashTable	lib/esan/esan_hashtable.h	/^class HashTable {$/;"	c	namespace:__esan
HashValue	lib/ubsan/ubsan_type_hash.h	/^typedef uptr HashValue;$/;"	t	namespace:__ubsan
Hashes	lib/fuzzer/FuzzerCorpus.h	/^  std::unordered_set<std::string> Hashes;$/;"	m	class:fuzzer::InputCorpus
HaveStackTraceBasedSuppressions	lib/asan/asan_suppressions.cc	/^bool HaveStackTraceBasedSuppressions() {$/;"	f	namespace:__asan
Head	lib/xray/xray_segmented_array.h	/^  SegmentBase *Head = &SentinelSegment;$/;"	m	class:__xray::Array
Header	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^  struct Header {$/;"	s	class:LargeMmapAllocator
Header	lib/scudo/scudo_allocator_secondary.h	/^  struct Header {$/;"	s	namespace:LargeChunk
HeadersSize	lib/scudo/scudo_allocator_secondary.h	/^  static constexpr uptr HeadersSize =$/;"	m	class:LargeMmapAllocator
Heap	lib/asan/tests/asan_str_test.cc	/^  Heap,$/;"	m	class:__anon40::OOBKind	file:
HeapAddressDescription	lib/asan/asan_descriptions.h	/^struct HeapAddressDescription {$/;"	s	namespace:__asan
HeapAddressDescription	lib/hwasan/hwasan_report.cc	/^struct HeapAddressDescription {$/;"	s	namespace:__hwasan	file:
HeapBuferOverflow	test/asan/TestCases/scariness_score_test.cc	/^void HeapBuferOverflow(int Idx, ReadOrWrite w) {$/;"	f
HeapEnd	lib/tsan/rtl/tsan_rtl.h	/^uptr ALWAYS_INLINE HeapEnd() {$/;"	f	namespace:__tsan
HeapMemBeg	lib/tsan/rtl/tsan_platform.h	/^uptr HeapMemBeg(void) {$/;"	f	namespace:__tsan
HeapMemEnd	lib/tsan/rtl/tsan_platform.h	/^uptr HeapMemEnd(void) {$/;"	f	namespace:__tsan
HeapProfile	lib/asan/asan_memory_profile.cc	/^  HeapProfile() { allocations_.reserve(1024); }$/;"	f	class:__asan::HeapProfile
HeapProfile	lib/asan/asan_memory_profile.cc	/^class HeapProfile {$/;"	c	namespace:__asan	file:
HeapUseAfterFree	test/asan/TestCases/scariness_score_test.cc	/^void HeapUseAfterFree(int Idx, ReadOrWrite w) {$/;"	f
HiAppMemBeg	lib/tsan/rtl/tsan_platform.h	/^uptr HiAppMemBeg(void) {$/;"	f	namespace:__tsan
HiAppMemEnd	lib/tsan/rtl/tsan_platform.h	/^uptr HiAppMemEnd(void) {$/;"	f	namespace:__tsan
Highlight	lib/ubsan/ubsan_diag.cc	/^  const char *Highlight() const { return Green(); }$/;"	f	class:__anon102::Decorator
Hostname	lib/profile/InstrProfilingFile.c	/^  char Hostname[COMPILER_RT_MAX_HOSTLEN];$/;"	m	struct:lprofFilename	file:
HwasanAllocate	lib/hwasan/hwasan_allocator.cc	/^static void *HwasanAllocate(StackTrace *stack, uptr size, uptr alignment,$/;"	f	namespace:__hwasan
HwasanAllocatorInit	lib/hwasan/hwasan_allocator.cc	/^void HwasanAllocatorInit() {$/;"	f	namespace:__hwasan
HwasanAtExit	lib/hwasan/hwasan_linux.cc	/^static void HwasanAtExit(void) {$/;"	f	namespace:__hwasan
HwasanCalloc	lib/hwasan/hwasan_allocator.cc	/^void *HwasanCalloc(StackTrace *stack, uptr nmemb, uptr size) {$/;"	f	namespace:__hwasan
HwasanChunkView	lib/hwasan/hwasan_allocator.h	/^  HwasanChunkView() : block_(0), metadata_(nullptr) {}$/;"	f	class:__hwasan::HwasanChunkView
HwasanChunkView	lib/hwasan/hwasan_allocator.h	/^  HwasanChunkView(uptr block, Metadata *metadata)$/;"	f	class:__hwasan::HwasanChunkView
HwasanChunkView	lib/hwasan/hwasan_allocator.h	/^class HwasanChunkView {$/;"	c	namespace:__hwasan
HwasanDeallocate	lib/hwasan/hwasan_allocator.cc	/^void HwasanDeallocate(StackTrace *stack, void *user_ptr) {$/;"	f	namespace:__hwasan
HwasanInterceptorContext	lib/hwasan/hwasan_interceptors.cc	/^struct HwasanInterceptorContext {$/;"	s	file:
HwasanMapUnmapCallback	lib/hwasan/hwasan_allocator.cc	/^struct HwasanMapUnmapCallback {$/;"	s	namespace:__hwasan	file:
HwasanOnDeadlySignal	lib/hwasan/hwasan_linux.cc	/^void HwasanOnDeadlySignal(int signo, void *info, void *context) {$/;"	f	namespace:__hwasan
HwasanOnSIGTRAP	lib/hwasan/hwasan_linux.cc	/^static bool HwasanOnSIGTRAP(int signo, siginfo_t *info, ucontext_t *uc) {$/;"	f	namespace:__hwasan
HwasanReallocate	lib/hwasan/hwasan_allocator.cc	/^void *HwasanReallocate(StackTrace *stack, void *user_old_p, uptr new_size,$/;"	f	namespace:__hwasan
HwasanTSDDtor	lib/hwasan/hwasan_linux.cc	/^void HwasanTSDDtor(void *tsd) {$/;"	f	namespace:__hwasan
HwasanTSDInit	lib/hwasan/hwasan_linux.cc	/^void HwasanTSDInit(void (*destructor)(void *tsd)) {$/;"	f	namespace:__hwasan
HwasanThread	lib/hwasan/hwasan_thread.h	/^class HwasanThread {$/;"	c	namespace:__hwasan
HwasanThreadLocalMallocStorage	lib/hwasan/hwasan_allocator.h	/^  HwasanThreadLocalMallocStorage() {}$/;"	f	struct:__hwasan::HwasanThreadLocalMallocStorage
HwasanThreadLocalMallocStorage	lib/hwasan/hwasan_allocator.h	/^struct HwasanThreadLocalMallocStorage {$/;"	s	namespace:__hwasan
HwasanThreadStartFunc	lib/hwasan/hwasan_interceptors.cc	/^static void *HwasanThreadStartFunc(void *arg) {$/;"	f	file:
I	lib/sanitizer_common/tests/sanitizer_format_interceptor_test.cc	/^static const unsigned I = sizeof(int);$/;"	v	file:
I	lib/tsan/rtl/tsan_md5.cc	20;"	d	file:
I386_FREEBSD	lib/profile/GCDAProfiling.c	39;"	d	file:
I386_FREEBSD	lib/profile/GCDAProfiling.c	41;"	d	file:
IAmServer	lib/fuzzer/FuzzerShmem.h	/^  bool IAmServer;$/;"	m	class:fuzzer::SharedMemoryRegion
IMM	lib/builtins/arm/udivmodsi4.S	/^#define	IMM	#$/;"	d
IMM	lib/builtins/arm/udivsi3.S	/^#define	IMM	#$/;"	d
IMM	lib/builtins/arm/umodsi3.S	/^#define	IMM	#$/;"	d
IMPL_COMPILER_ASSERT	lib/sanitizer_common/sanitizer_internal_defs.h	341;"	d
IMPL_PASTE	lib/sanitizer_common/sanitizer_internal_defs.h	340;"	d
IN	test/fuzzer/OnlySomeBytesTest.cpp	/^typedef const uint8_t *IN;$/;"	t	file:
INCLUDED_FROM_ASAN_TEST_UTILS_H	lib/asan/tests/asan_test_utils.h	18;"	d
INCLUDED_FROM_ASAN_TEST_UTILS_H	lib/asan/tests/asan_test_utils.h	20;"	d
INCLUDED_FROM_INTERCEPTION_LIB	lib/interception/interception.h	275;"	d
INCLUDED_FROM_INTERCEPTION_LIB	lib/interception/interception.h	296;"	d
INCLUDED_FROM_SANITIZER_TEST_UTILS_H	lib/sanitizer_common/tests/sanitizer_test_utils.h	27;"	d
INCLUDED_FROM_SANITIZER_TEST_UTILS_H	lib/sanitizer_common/tests/sanitizer_test_utils.h	29;"	d
INDIRECT_CALLSITE	test/profile/Inputs/instrprof-value-prof-evict.c	56;"	d	file:
INFINITY	test/builtins/Unit/ppc/fixtfdi_test.c	10;"	d	file:
INFINITY	test/builtins/Unit/ppc/qadd_test.c	27;"	d	file:
INFINITY	test/builtins/Unit/ppc/qdiv_test.c	27;"	d	file:
INFINITY	test/builtins/Unit/ppc/qmul_test.c	27;"	d	file:
INFINITY	test/builtins/Unit/ppc/qsub_test.c	27;"	d	file:
INLINE	lib/msan/tests/msan_test.cc	143;"	d	file:
INLINE	lib/sanitizer_common/sanitizer_internal_defs.h	199;"	d
INLINE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	110;"	d	file:
INPUT_SIZE	test/builtins/timing/ashldi3.c	5;"	d	file:
INPUT_SIZE	test/builtins/timing/ashrdi3.c	5;"	d	file:
INPUT_SIZE	test/builtins/timing/divdi3.c	5;"	d	file:
INPUT_SIZE	test/builtins/timing/floatdidf.c	5;"	d	file:
INPUT_SIZE	test/builtins/timing/floatdisf.c	5;"	d	file:
INPUT_SIZE	test/builtins/timing/floatdixf.c	5;"	d	file:
INPUT_SIZE	test/builtins/timing/floatundidf.c	15;"	d	file:
INPUT_SIZE	test/builtins/timing/floatundisf.c	5;"	d	file:
INPUT_SIZE	test/builtins/timing/floatundixf.c	5;"	d	file:
INPUT_SIZE	test/builtins/timing/lshrdi3.c	5;"	d	file:
INPUT_SIZE	test/builtins/timing/moddi3.c	5;"	d	file:
INPUT_SIZE	test/builtins/timing/modsi3.c	5;"	d	file:
INPUT_SIZE	test/builtins/timing/muldi3.c	5;"	d	file:
INPUT_SIZE	test/builtins/timing/negdi2.c	5;"	d	file:
INPUT_SIZE	test/builtins/timing/udivdi3.c	5;"	d	file:
INPUT_SIZE	test/builtins/timing/umoddi3.c	5;"	d	file:
INPUT_TYPE	test/builtins/timing/ashldi3.c	4;"	d	file:
INPUT_TYPE	test/builtins/timing/ashrdi3.c	4;"	d	file:
INPUT_TYPE	test/builtins/timing/divdi3.c	4;"	d	file:
INPUT_TYPE	test/builtins/timing/floatdidf.c	4;"	d	file:
INPUT_TYPE	test/builtins/timing/floatdisf.c	4;"	d	file:
INPUT_TYPE	test/builtins/timing/floatdixf.c	4;"	d	file:
INPUT_TYPE	test/builtins/timing/floatundisf.c	4;"	d	file:
INPUT_TYPE	test/builtins/timing/floatundixf.c	4;"	d	file:
INPUT_TYPE	test/builtins/timing/lshrdi3.c	4;"	d	file:
INPUT_TYPE	test/builtins/timing/moddi3.c	4;"	d	file:
INPUT_TYPE	test/builtins/timing/modsi3.c	4;"	d	file:
INPUT_TYPE	test/builtins/timing/muldi3.c	4;"	d	file:
INPUT_TYPE	test/builtins/timing/negdi2.c	4;"	d	file:
INPUT_TYPE	test/builtins/timing/udivdi3.c	4;"	d	file:
INPUT_TYPE	test/builtins/timing/umoddi3.c	4;"	d	file:
INSTR_PROF_COMMON_API_IMPL	lib/profile/InstrProfilingValue.c	20;"	d	file:
INSTR_PROF_DATA	lib/profile/InstrProfiling.h	26;"	d
INSTR_PROF_DEFAULT_NUM_VAL_PER_SITE	lib/profile/InstrProfilingValue.c	27;"	d	file:
INSTR_PROF_MAX_VP_WARNS	lib/profile/InstrProfilingValue.c	26;"	d	file:
INSTR_PROF_PROFILE_NAME_VAR	lib/profile/InstrProfilingNameVar.c	/^COMPILER_RT_WEAK char INSTR_PROF_PROFILE_NAME_VAR[1] = {0};$/;"	v
INSTR_PROF_PROFILE_RUNTIME_VAR	lib/profile/InstrProfilingRuntime.cc	/^COMPILER_RT_VISIBILITY int INSTR_PROF_PROFILE_RUNTIME_VAR;$/;"	v
INSTR_PROF_RAW_HEADER	lib/profile/InstrProfiling.h	31;"	d
INSTR_PROF_RAW_HEADER	lib/profile/InstrProfilingWriter.c	273;"	d	file:
INSTR_PROF_RAW_VERSION_VAR	lib/profile/InstrProfiling.c	/^COMPILER_RT_WEAK uint64_t INSTR_PROF_RAW_VERSION_VAR = INSTR_PROF_RAW_VERSION;$/;"	v
INSTR_PROF_VALUE_NODE	lib/profile/InstrProfiling.h	37;"	d
INSTR_PROF_VALUE_PROF_DATA	lib/profile/InstrProfiling.c	18;"	d	file:
INSTR_PROF_VALUE_PROF_DATA	lib/profile/InstrProfilingMerge.c	17;"	d	file:
INSTR_PROF_VALUE_PROF_DATA	lib/profile/InstrProfilingMergeFile.c	19;"	d	file:
INSTR_PROF_VALUE_PROF_DATA	lib/profile/InstrProfilingValue.c	19;"	d	file:
INSTR_PROF_VALUE_PROF_DATA	lib/profile/InstrProfilingWriter.c	19;"	d	file:
INSTR_PROF_VISIBILITY	lib/profile/InstrProfiling.h	15;"	d
INSTR_PROF_VNODE_POOL_SIZE	lib/profile/InstrProfilingValue.c	28;"	d	file:
INT32_MAX	lib/sanitizer_common/sanitizer_internal_defs.h	357;"	d
INT32_MAX	lib/sanitizer_common/sanitizer_internal_defs.h	358;"	d
INT32_MIN	lib/sanitizer_common/sanitizer_internal_defs.h	355;"	d
INT32_MIN	lib/sanitizer_common/sanitizer_internal_defs.h	356;"	d
INT64_MAX	lib/sanitizer_common/sanitizer_internal_defs.h	363;"	d
INT64_MAX	lib/sanitizer_common/sanitizer_internal_defs.h	364;"	d
INT64_MIN	lib/sanitizer_common/sanitizer_internal_defs.h	361;"	d
INT64_MIN	lib/sanitizer_common/sanitizer_internal_defs.h	362;"	d
INTEL_BONNELL	lib/builtins/cpu_model.c	/^  INTEL_BONNELL = 1,$/;"	e	enum:ProcessorTypes	file:
INTEL_CORE2	lib/builtins/cpu_model.c	/^  INTEL_CORE2,$/;"	e	enum:ProcessorTypes	file:
INTEL_COREI7	lib/builtins/cpu_model.c	/^  INTEL_COREI7,$/;"	e	enum:ProcessorTypes	file:
INTEL_COREI7_BROADWELL	lib/builtins/cpu_model.c	/^  INTEL_COREI7_BROADWELL,$/;"	e	enum:ProcessorSubtypes	file:
INTEL_COREI7_CANNONLAKE	lib/builtins/cpu_model.c	/^  INTEL_COREI7_CANNONLAKE,$/;"	e	enum:ProcessorSubtypes	file:
INTEL_COREI7_HASWELL	lib/builtins/cpu_model.c	/^  INTEL_COREI7_HASWELL,$/;"	e	enum:ProcessorSubtypes	file:
INTEL_COREI7_IVYBRIDGE	lib/builtins/cpu_model.c	/^  INTEL_COREI7_IVYBRIDGE,$/;"	e	enum:ProcessorSubtypes	file:
INTEL_COREI7_NEHALEM	lib/builtins/cpu_model.c	/^  INTEL_COREI7_NEHALEM = 1,$/;"	e	enum:ProcessorSubtypes	file:
INTEL_COREI7_SANDYBRIDGE	lib/builtins/cpu_model.c	/^  INTEL_COREI7_SANDYBRIDGE,$/;"	e	enum:ProcessorSubtypes	file:
INTEL_COREI7_SKYLAKE	lib/builtins/cpu_model.c	/^  INTEL_COREI7_SKYLAKE,$/;"	e	enum:ProcessorSubtypes	file:
INTEL_COREI7_SKYLAKE_AVX512	lib/builtins/cpu_model.c	/^  INTEL_COREI7_SKYLAKE_AVX512,$/;"	e	enum:ProcessorSubtypes	file:
INTEL_COREI7_WESTMERE	lib/builtins/cpu_model.c	/^  INTEL_COREI7_WESTMERE,$/;"	e	enum:ProcessorSubtypes	file:
INTEL_KNL	lib/builtins/cpu_model.c	/^  INTEL_KNL,$/;"	e	enum:ProcessorTypes	file:
INTEL_KNM	lib/builtins/cpu_model.c	/^  INTEL_KNM,$/;"	e	enum:ProcessorTypes	file:
INTEL_SILVERMONT	lib/builtins/cpu_model.c	/^  INTEL_SILVERMONT,$/;"	e	enum:ProcessorTypes	file:
INTERCEPTION_H	lib/interception/interception.h	16;"	d
INTERCEPTION_LINUX_H	lib/interception/interception_linux.h	23;"	d
INTERCEPTION_MAC_H	lib/interception/interception_mac.h	22;"	d
INTERCEPTION_WIN_H	lib/interception/interception_win.h	22;"	d
INTERCEPTOR	lib/asan/asan_interceptors.cc	/^INTERCEPTOR(_Unwind_Reason_Code, _Unwind_RaiseException,$/;"	f
INTERCEPTOR	lib/asan/asan_interceptors.cc	/^INTERCEPTOR(_Unwind_Reason_Code, _Unwind_SjLj_RaiseException,$/;"	f
INTERCEPTOR	lib/asan/asan_interceptors.cc	/^INTERCEPTOR(char*, __strdup, const char *s) {$/;"	f
INTERCEPTOR	lib/asan/asan_interceptors.cc	/^INTERCEPTOR(char*, strcat, char *to, const char *from) {  \/\/ NOLINT$/;"	f
INTERCEPTOR	lib/asan/asan_interceptors.cc	/^INTERCEPTOR(char*, strcpy, char *to, const char *from) {  \/\/ NOLINT$/;"	f
INTERCEPTOR	lib/asan/asan_interceptors.cc	/^INTERCEPTOR(char*, strdup, const char *s) {$/;"	f
INTERCEPTOR	lib/asan/asan_interceptors.cc	/^INTERCEPTOR(char*, strncat, char *to, const char *from, uptr size) {$/;"	f
INTERCEPTOR	lib/asan/asan_interceptors.cc	/^INTERCEPTOR(char*, strncpy, char *to, const char *from, uptr size) {$/;"	f
INTERCEPTOR	lib/asan/asan_interceptors.cc	/^INTERCEPTOR(int, __cxa_atexit, void (*func)(void *), void *arg,$/;"	f
INTERCEPTOR	lib/asan/asan_interceptors.cc	/^INTERCEPTOR(int, atoi, const char *nptr) {$/;"	f
INTERCEPTOR	lib/asan/asan_interceptors.cc	/^INTERCEPTOR(int, pthread_create, void *thread,$/;"	f
INTERCEPTOR	lib/asan/asan_interceptors.cc	/^INTERCEPTOR(int, pthread_join, void *t, void **arg) {$/;"	f
INTERCEPTOR	lib/asan/asan_interceptors.cc	/^INTERCEPTOR(int, swapcontext, struct ucontext_t *oucp,$/;"	f
INTERCEPTOR	lib/asan/asan_interceptors.cc	/^INTERCEPTOR(long long, atoll, const char *nptr) {  \/\/ NOLINT$/;"	f
INTERCEPTOR	lib/asan/asan_interceptors.cc	/^INTERCEPTOR(long long, strtoll, const char *nptr,  \/\/ NOLINT$/;"	f
INTERCEPTOR	lib/asan/asan_interceptors.cc	/^INTERCEPTOR(long, atol, const char *nptr) {  \/\/ NOLINT$/;"	f
INTERCEPTOR	lib/asan/asan_interceptors.cc	/^INTERCEPTOR(long, strtol, const char *nptr,  \/\/ NOLINT$/;"	f
INTERCEPTOR	lib/asan/asan_interceptors.cc	/^INTERCEPTOR(void, __cxa_rethrow_primary_exception, void *a) {$/;"	f
INTERCEPTOR	lib/asan/asan_interceptors.cc	/^INTERCEPTOR(void, __cxa_throw, void *a, void *b, void *c) {$/;"	f
INTERCEPTOR	lib/asan/asan_interceptors.cc	/^INTERCEPTOR(void, __longjmp_chk, void *env, int val) {$/;"	f
INTERCEPTOR	lib/asan/asan_interceptors.cc	/^INTERCEPTOR(void, _longjmp, void *env, int val) {$/;"	f
INTERCEPTOR	lib/asan/asan_interceptors.cc	/^INTERCEPTOR(void, longjmp, void *env, int val) {$/;"	f
INTERCEPTOR	lib/asan/asan_interceptors.cc	/^INTERCEPTOR(void, siglongjmp, void *env, int val) {$/;"	f
INTERCEPTOR	lib/asan/asan_mac.cc	/^INTERCEPTOR(void, dispatch_after,$/;"	f
INTERCEPTOR	lib/asan/asan_mac.cc	/^INTERCEPTOR(void, dispatch_after_f, dispatch_time_t when,$/;"	f
INTERCEPTOR	lib/asan/asan_mac.cc	/^INTERCEPTOR(void, dispatch_async,$/;"	f
INTERCEPTOR	lib/asan/asan_mac.cc	/^INTERCEPTOR(void, dispatch_group_async,$/;"	f
INTERCEPTOR	lib/asan/asan_mac.cc	/^INTERCEPTOR(void, dispatch_group_async_f, dispatch_group_t group,$/;"	f
INTERCEPTOR	lib/asan/asan_mac.cc	/^INTERCEPTOR(void, dispatch_source_set_cancel_handler,$/;"	f
INTERCEPTOR	lib/asan/asan_mac.cc	/^INTERCEPTOR(void, dispatch_source_set_event_handler,$/;"	f
INTERCEPTOR	lib/asan/asan_malloc_linux.cc	/^INTERCEPTOR(int, mallopt, int cmd, int value) {$/;"	f
INTERCEPTOR	lib/asan/asan_malloc_linux.cc	/^INTERCEPTOR(int, posix_memalign, void **memptr, uptr alignment, uptr size) {$/;"	f
INTERCEPTOR	lib/asan/asan_malloc_linux.cc	/^INTERCEPTOR(struct fake_mallinfo, mallinfo, void) {$/;"	f
INTERCEPTOR	lib/asan/asan_malloc_linux.cc	/^INTERCEPTOR(uptr, malloc_usable_size, void *ptr) {$/;"	f
INTERCEPTOR	lib/asan/asan_malloc_linux.cc	/^INTERCEPTOR(void*, __libc_memalign, uptr boundary, uptr size) {$/;"	f
INTERCEPTOR	lib/asan/asan_malloc_linux.cc	/^INTERCEPTOR(void*, aligned_alloc, uptr boundary, uptr size) {$/;"	f
INTERCEPTOR	lib/asan/asan_malloc_linux.cc	/^INTERCEPTOR(void*, calloc, uptr nmemb, uptr size) {$/;"	f
INTERCEPTOR	lib/asan/asan_malloc_linux.cc	/^INTERCEPTOR(void*, malloc, uptr size) {$/;"	f
INTERCEPTOR	lib/asan/asan_malloc_linux.cc	/^INTERCEPTOR(void*, memalign, uptr boundary, uptr size) {$/;"	f
INTERCEPTOR	lib/asan/asan_malloc_linux.cc	/^INTERCEPTOR(void*, pvalloc, uptr size) {$/;"	f
INTERCEPTOR	lib/asan/asan_malloc_linux.cc	/^INTERCEPTOR(void*, realloc, void *ptr, uptr size) {$/;"	f
INTERCEPTOR	lib/asan/asan_malloc_linux.cc	/^INTERCEPTOR(void*, valloc, uptr size) {$/;"	f
INTERCEPTOR	lib/asan/asan_malloc_linux.cc	/^INTERCEPTOR(void, cfree, void *ptr) {$/;"	f
INTERCEPTOR	lib/asan/asan_malloc_linux.cc	/^INTERCEPTOR(void, free, void *ptr) {$/;"	f
INTERCEPTOR	lib/asan/asan_malloc_linux.cc	/^INTERCEPTOR(void, malloc_stats, void) {$/;"	f
INTERCEPTOR	lib/asan/asan_new_delete.cc	/^INTERCEPTOR(void, _ZdaPv, void *ptr)$/;"	f
INTERCEPTOR	lib/asan/asan_new_delete.cc	/^INTERCEPTOR(void, _ZdaPvRKSt9nothrow_t, void *ptr, std::nothrow_t const&)$/;"	f
INTERCEPTOR	lib/asan/asan_new_delete.cc	/^INTERCEPTOR(void, _ZdlPv, void *ptr)$/;"	f
INTERCEPTOR	lib/asan/asan_new_delete.cc	/^INTERCEPTOR(void, _ZdlPvRKSt9nothrow_t, void *ptr, std::nothrow_t const&)$/;"	f
INTERCEPTOR	lib/asan/asan_win.cc	/^INTERCEPTOR(int, _except_handler3, void *a, void *b, void *c, void *d) {$/;"	f
INTERCEPTOR	lib/asan/asan_win.cc	/^INTERCEPTOR(int, _except_handler4, void *a, void *b, void *c, void *d) {$/;"	f
INTERCEPTOR	lib/asan/asan_win_dll_thunk.cc	/^INTERCEPTOR(int, _except_handler4, void *a, void *b, void *c, void *d) {$/;"	f
INTERCEPTOR	lib/cfi/cfi.cc	/^INTERCEPTOR(int, dlclose, void *handle) {$/;"	f
INTERCEPTOR	lib/cfi/cfi.cc	/^INTERCEPTOR(void*, dlopen, const char *filename, int flag) {$/;"	f
INTERCEPTOR	lib/dfsan/dfsan_interceptors.cc	/^INTERCEPTOR(void *, mmap, void *addr, SIZE_T length, int prot, int flags,$/;"	f
INTERCEPTOR	lib/dfsan/dfsan_interceptors.cc	/^INTERCEPTOR(void *, mmap64, void *addr, SIZE_T length, int prot, int flags,$/;"	f
INTERCEPTOR	lib/esan/esan_interceptors.cpp	/^INTERCEPTOR(char *, strcpy, char *dst, const char *src) { \/\/ NOLINT$/;"	f
INTERCEPTOR	lib/esan/esan_interceptors.cpp	/^INTERCEPTOR(char *, strncpy, char *dst, char *src, uptr n) {$/;"	f
INTERCEPTOR	lib/esan/esan_interceptors.cpp	/^INTERCEPTOR(int, creat, const char *name, int mode) {$/;"	f
INTERCEPTOR	lib/esan/esan_interceptors.cpp	/^INTERCEPTOR(int, creat64, const char *name, int mode) {$/;"	f
INTERCEPTOR	lib/esan/esan_interceptors.cpp	/^INTERCEPTOR(int, open, const char *name, int flags, int mode) {$/;"	f
INTERCEPTOR	lib/esan/esan_interceptors.cpp	/^INTERCEPTOR(int, open64, const char *name, int flags, int mode) {$/;"	f
INTERCEPTOR	lib/esan/esan_interceptors.cpp	/^INTERCEPTOR(int, pthread_sigmask, int how, __sanitizer_sigset_t *set,$/;"	f
INTERCEPTOR	lib/esan/esan_interceptors.cpp	/^INTERCEPTOR(int, rmdir, char *path) {$/;"	f
INTERCEPTOR	lib/esan/esan_interceptors.cpp	/^INTERCEPTOR(int, sigaction, int signum, const struct sigaction *act,$/;"	f
INTERCEPTOR	lib/esan/esan_interceptors.cpp	/^INTERCEPTOR(int, sigprocmask, int how, __sanitizer_sigset_t *set,$/;"	f
INTERCEPTOR	lib/esan/esan_interceptors.cpp	/^INTERCEPTOR(int, unlink, char *path) {$/;"	f
INTERCEPTOR	lib/esan/esan_interceptors.cpp	/^INTERCEPTOR(signal_handler_t, signal, int signum, signal_handler_t handler) {$/;"	f
INTERCEPTOR	lib/esan/esan_interceptors.cpp	/^INTERCEPTOR(void*, calloc, uptr size, uptr n) {$/;"	f
INTERCEPTOR	lib/esan/esan_interceptors.cpp	/^INTERCEPTOR(void*, malloc, uptr size) {$/;"	f
INTERCEPTOR	lib/esan/esan_interceptors.cpp	/^INTERCEPTOR(void, free, void *p) {$/;"	f
INTERCEPTOR	lib/hwasan/hwasan_interceptors.cc	/^INTERCEPTOR(int, fork, void) {$/;"	f
INTERCEPTOR	lib/hwasan/hwasan_interceptors.cc	/^INTERCEPTOR(int, mallopt, int cmd, int value) {$/;"	f
INTERCEPTOR	lib/hwasan/hwasan_interceptors.cc	/^INTERCEPTOR(int, posix_memalign, void **memptr, SIZE_T alignment, SIZE_T size) {$/;"	f
INTERCEPTOR	lib/hwasan/hwasan_interceptors.cc	/^INTERCEPTOR(int, pthread_create, void *th, void *attr, void *(*callback)(void*),$/;"	f
INTERCEPTOR	lib/hwasan/hwasan_interceptors.cc	/^INTERCEPTOR(uptr, malloc_usable_size, void *ptr) {$/;"	f
INTERCEPTOR	lib/hwasan/hwasan_interceptors.cc	/^INTERCEPTOR(void *, __libc_memalign, SIZE_T alignment, SIZE_T size) {$/;"	f
INTERCEPTOR	lib/hwasan/hwasan_interceptors.cc	/^INTERCEPTOR(void *, aligned_alloc, SIZE_T alignment, SIZE_T size) {$/;"	f
INTERCEPTOR	lib/hwasan/hwasan_interceptors.cc	/^INTERCEPTOR(void *, calloc, SIZE_T nmemb, SIZE_T size) {$/;"	f
INTERCEPTOR	lib/hwasan/hwasan_interceptors.cc	/^INTERCEPTOR(void *, malloc, SIZE_T size) {$/;"	f
INTERCEPTOR	lib/hwasan/hwasan_interceptors.cc	/^INTERCEPTOR(void *, memalign, SIZE_T alignment, SIZE_T size) {$/;"	f
INTERCEPTOR	lib/hwasan/hwasan_interceptors.cc	/^INTERCEPTOR(void *, pvalloc, SIZE_T size) {$/;"	f
INTERCEPTOR	lib/hwasan/hwasan_interceptors.cc	/^INTERCEPTOR(void *, realloc, void *ptr, SIZE_T size) {$/;"	f
INTERCEPTOR	lib/hwasan/hwasan_interceptors.cc	/^INTERCEPTOR(void *, valloc, SIZE_T size) {$/;"	f
INTERCEPTOR	lib/hwasan/hwasan_interceptors.cc	/^INTERCEPTOR(void, cfree, void *ptr) {$/;"	f
INTERCEPTOR	lib/hwasan/hwasan_interceptors.cc	/^INTERCEPTOR(void, free, void *ptr) {$/;"	f
INTERCEPTOR	lib/hwasan/hwasan_interceptors.cc	/^INTERCEPTOR(void, mallinfo, __sanitizer_mallinfo *sret) {$/;"	f
INTERCEPTOR	lib/hwasan/hwasan_interceptors.cc	/^INTERCEPTOR(void, malloc_stats, void) {$/;"	f
INTERCEPTOR	lib/interception/interception.h	214;"	d
INTERCEPTOR	lib/interception/interception.h	221;"	d
INTERCEPTOR	lib/interception/interception.h	240;"	d
INTERCEPTOR	lib/interception/tests/interception_linux_test.cc	/^INTERCEPTOR(int, isdigit, int d) {$/;"	f
INTERCEPTOR	lib/lsan/lsan_interceptors.cc	/^INTERCEPTOR(int, mallopt, int cmd, int value) {$/;"	f	namespace:std
INTERCEPTOR	lib/lsan/lsan_interceptors.cc	/^INTERCEPTOR(int, mcheck, void (*abortfunc)(int mstatus)) {$/;"	f	namespace:std
INTERCEPTOR	lib/lsan/lsan_interceptors.cc	/^INTERCEPTOR(int, mcheck_pedantic, void (*abortfunc)(int mstatus)) {$/;"	f	namespace:std
INTERCEPTOR	lib/lsan/lsan_interceptors.cc	/^INTERCEPTOR(int, mprobe, void *ptr) {$/;"	f	namespace:std
INTERCEPTOR	lib/lsan/lsan_interceptors.cc	/^INTERCEPTOR(int, posix_memalign, void **memptr, uptr alignment, uptr size) {$/;"	f	namespace:std
INTERCEPTOR	lib/lsan/lsan_interceptors.cc	/^INTERCEPTOR(int, pthread_create, void *th, void *attr,$/;"	f	namespace:std
INTERCEPTOR	lib/lsan/lsan_interceptors.cc	/^INTERCEPTOR(int, pthread_join, void *th, void **ret) {$/;"	f	namespace:std
INTERCEPTOR	lib/lsan/lsan_interceptors.cc	/^INTERCEPTOR(struct fake_mallinfo, mallinfo, void) {$/;"	f	namespace:std
INTERCEPTOR	lib/lsan/lsan_interceptors.cc	/^INTERCEPTOR(uptr, malloc_usable_size, void *ptr) {$/;"	f	namespace:std
INTERCEPTOR	lib/lsan/lsan_interceptors.cc	/^INTERCEPTOR(void *, _Znam, size_t size)$/;"	f	namespace:std
INTERCEPTOR	lib/lsan/lsan_interceptors.cc	/^INTERCEPTOR(void *, _ZnamRKSt9nothrow_t, size_t size, std::nothrow_t const&)$/;"	f	namespace:std
INTERCEPTOR	lib/lsan/lsan_interceptors.cc	/^INTERCEPTOR(void *, _Znwm, size_t size)$/;"	f	namespace:std
INTERCEPTOR	lib/lsan/lsan_interceptors.cc	/^INTERCEPTOR(void *, _ZnwmRKSt9nothrow_t, size_t size, std::nothrow_t const&)$/;"	f	namespace:std
INTERCEPTOR	lib/lsan/lsan_interceptors.cc	/^INTERCEPTOR(void *, __libc_memalign, uptr alignment, uptr size) {$/;"	f	namespace:std
INTERCEPTOR	lib/lsan/lsan_interceptors.cc	/^INTERCEPTOR(void*, aligned_alloc, uptr alignment, uptr size) {$/;"	f	namespace:std
INTERCEPTOR	lib/lsan/lsan_interceptors.cc	/^INTERCEPTOR(void*, calloc, uptr nmemb, uptr size) {$/;"	f	namespace:std
INTERCEPTOR	lib/lsan/lsan_interceptors.cc	/^INTERCEPTOR(void*, memalign, uptr alignment, uptr size) {$/;"	f	namespace:std
INTERCEPTOR	lib/lsan/lsan_interceptors.cc	/^INTERCEPTOR(void*, pvalloc, uptr size) {$/;"	f	namespace:std
INTERCEPTOR	lib/lsan/lsan_interceptors.cc	/^INTERCEPTOR(void*, realloc, void *q, uptr size) {$/;"	f	namespace:std
INTERCEPTOR	lib/lsan/lsan_interceptors.cc	/^INTERCEPTOR(void*, valloc, uptr size) {$/;"	f	namespace:std
INTERCEPTOR	lib/lsan/lsan_interceptors.cc	/^INTERCEPTOR(void, _ZdaPv, void *ptr)$/;"	f	namespace:std
INTERCEPTOR	lib/lsan/lsan_interceptors.cc	/^INTERCEPTOR(void, _ZdaPvRKSt9nothrow_t, void *ptr, std::nothrow_t const&)$/;"	f	namespace:std
INTERCEPTOR	lib/lsan/lsan_interceptors.cc	/^INTERCEPTOR(void, _ZdlPv, void *ptr)$/;"	f	namespace:std
INTERCEPTOR	lib/lsan/lsan_interceptors.cc	/^INTERCEPTOR(void, _ZdlPvRKSt9nothrow_t, void *ptr, std::nothrow_t const&)$/;"	f	namespace:std
INTERCEPTOR	lib/lsan/lsan_interceptors.cc	/^INTERCEPTOR(void, _exit, int status) {$/;"	f	namespace:std
INTERCEPTOR	lib/lsan/lsan_interceptors.cc	/^INTERCEPTOR(void, _lwp_exit) {$/;"	f	namespace:std
INTERCEPTOR	lib/lsan/lsan_interceptors.cc	/^INTERCEPTOR(void, free, void *p) {$/;"	f	namespace:std
INTERCEPTOR	lib/lsan/lsan_interceptors.cc	/^INTERCEPTOR(void, thr_exit, tid_t *state) {$/;"	f	namespace:std
INTERCEPTOR	lib/lsan/lsan_mac.cc	/^INTERCEPTOR(void, dispatch_after, dispatch_time_t when, dispatch_queue_t queue,$/;"	f
INTERCEPTOR	lib/lsan/lsan_mac.cc	/^INTERCEPTOR(void, dispatch_after_f, dispatch_time_t when, dispatch_queue_t dq,$/;"	f
INTERCEPTOR	lib/lsan/lsan_mac.cc	/^INTERCEPTOR(void, dispatch_async, dispatch_queue_t dq, void (^work)(void)) {$/;"	f
INTERCEPTOR	lib/lsan/lsan_mac.cc	/^INTERCEPTOR(void, dispatch_group_async, dispatch_group_t dg,$/;"	f
INTERCEPTOR	lib/lsan/lsan_mac.cc	/^INTERCEPTOR(void, dispatch_group_async_f, dispatch_group_t group,$/;"	f
INTERCEPTOR	lib/lsan/lsan_mac.cc	/^INTERCEPTOR(void, dispatch_source_set_cancel_handler, dispatch_source_t ds,$/;"	f
INTERCEPTOR	lib/lsan/lsan_mac.cc	/^INTERCEPTOR(void, dispatch_source_set_event_handler, dispatch_source_t ds,$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(SIZE_T, __strftime_l, char *s, SIZE_T max, const char *format,$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(SIZE_T, __wcsftime_l, wchar_t *s, SIZE_T max, const wchar_t *format,$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(SIZE_T, fread_unlocked, void *ptr, SIZE_T size, SIZE_T nmemb,$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(SIZE_T, mbrtowc, wchar_t *dest, const char *src, SIZE_T n,$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(SIZE_T, strftime, char *s, SIZE_T max, const char *format,$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(SIZE_T, strftime_l, char *s, SIZE_T max, const char *format,$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(SIZE_T, wcsftime, wchar_t *s, SIZE_T max, const wchar_t *format,$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(SIZE_T, wcsftime_l, wchar_t *s, SIZE_T max, const wchar_t *format,$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(char *, __strdup, char *src) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(char *, dlerror, int fake) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(char *, fcvt, double x, int a, int *b, int *c) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(char *, fgets_unlocked, char *s, int size, void *stream) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(char *, gcvt, double number, SIZE_T ndigit, char *buf) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(char *, getenv, char *name) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(char *, stpcpy, char *dest, const char *src) {  \/\/ NOLINT$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(char *, strcat, char *dest, const char *src) {  \/\/ NOLINT$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(char *, strcpy, char *dest, const char *src) {  \/\/ NOLINT$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(char *, strdup, char *src) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(char *, strncat, char *dest, const char *src, SIZE_T n) {  \/\/ NOLINT$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(char *, strncpy, char *dest, const char *src, SIZE_T n) {  \/\/ NOLINT$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(int, __cxa_atexit, void (*func)(void *), void *arg,$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(int, __fxstat, int magic, int fd, void *buf) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(int, __fxstat64, int magic, int fd, void *buf) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(int, __fxstatat, int magic, int fd, char *pathname, void *buf,$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(int, __fxstatat64, int magic, int fd, char *pathname, void *buf,$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(int, __xuname, int size, void *utsname) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(int, dl_iterate_phdr, dl_iterate_phdr_cb callback, void *data) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(int, dladdr, void *addr, dlinfo *info) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(int, epoll_pwait, int epfd, void *events, int maxevents,$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(int, epoll_wait, int epfd, void *events, int maxevents,$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(int, fork, void) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(int, forkpty, int *amaster, char *name, const void *termp,$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(int, fstat, int fd, void *buf) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(int, fstatat, int fd, char *pathname, void *buf, int flags) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(int, gethostname, char *name, SIZE_T len) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(int, getrlimit, int resource, void *rlim) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(int, getrlimit64, int resource, void *rlim) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(int, getrusage, int who, void *usage) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(int, gettimeofday, void *tv, void *tz) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(int, mallopt, int cmd, int value) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(int, mbtowc, wchar_t *dest, const char *src, SIZE_T n) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(int, openpty, int *amaster, int *aslave, char *name,$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(int, pipe, int pipefd[2]) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(int, pipe2, int pipefd[2], int flags) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(int, posix_memalign, void **memptr, SIZE_T alignment, SIZE_T size) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(int, prlimit, int pid, int resource, void *new_rlimit,$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(int, prlimit64, int pid, int resource, void *new_rlimit,$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(int, pthread_create, void *th, void *attr, void *(*callback)(void*),$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(int, pthread_join, void *th, void **retval) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(int, pthread_key_create, __sanitizer_pthread_key_t *key,$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(int, putenv, char *string) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(int, setenv, const char *name, const char *value, int overwrite) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(int, socketpair, int domain, int type, int protocol, int sv[2]) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(int, swprintf, void *str, uptr size, void *format, ...) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(int, uname, struct utsname *utsname) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(int, vswprintf, void *str, uptr size, void *format, va_list ap) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(int, wcscmp, const wchar_t *s1, const wchar_t *s2) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(uptr, malloc_usable_size, void *ptr) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(void *, __libc_memalign, SIZE_T alignment, SIZE_T size) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(void *, aligned_alloc, SIZE_T alignment, SIZE_T size) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(void *, bcopy, const void *src, void *dest, SIZE_T n) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(void *, calloc, SIZE_T nmemb, SIZE_T size) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(void *, malloc, SIZE_T size) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(void *, memalign, SIZE_T alignment, SIZE_T size) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(void *, memccpy, void *dest, const void *src, int c, SIZE_T n) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(void *, mempcpy, void *dest, const void *src, SIZE_T n) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(void *, pvalloc, SIZE_T size) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(void *, realloc, void *ptr, SIZE_T size) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(void *, shmat, int shmid, const void *shmaddr, int shmflg) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(void *, valloc, SIZE_T size) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(void, cfree, void *ptr) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(void, free, void *ptr) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(void, mallinfo, __sanitizer_mallinfo *sret) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(void, malloc_stats, void) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(void, tzset, int fake) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(wchar_t *, wcschr, void *s, wchar_t wc, void *ps) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(wchar_t *, wcscpy, wchar_t *dest, const wchar_t *src) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(wchar_t *, wcsncpy, wchar_t *dest, const wchar_t *src,$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(wchar_t *, wmemcpy, wchar_t *dest, const wchar_t *src, SIZE_T n) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(wchar_t *, wmemmove, wchar_t *dest, const wchar_t *src, SIZE_T n) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(wchar_t *, wmempcpy, wchar_t *dest, const wchar_t *src, SIZE_T n) {$/;"	f
INTERCEPTOR	lib/msan/msan_interceptors.cc	/^INTERCEPTOR(wchar_t *, wmemset, wchar_t *s, wchar_t c, SIZE_T n) {$/;"	f
INTERCEPTOR	lib/safestack/safestack.cc	/^INTERCEPTOR(int, pthread_create, pthread_t *thread,$/;"	f
INTERCEPTOR	lib/tsan/dd/dd_interceptors.cc	/^INTERCEPTOR(SSIZE_T, pread, int fd, void *ptr, SIZE_T count, OFF_T offset) {$/;"	f
INTERCEPTOR	lib/tsan/dd/dd_interceptors.cc	/^INTERCEPTOR(SSIZE_T, read, int fd, void *ptr, SIZE_T count) {$/;"	f
INTERCEPTOR	lib/tsan/dd/dd_interceptors.cc	/^INTERCEPTOR(char*, realpath, const char *path, char *resolved_path) {$/;"	f
INTERCEPTOR	lib/tsan/dd/dd_interceptors.cc	/^INTERCEPTOR(int, pthread_cond_broadcast, pthread_cond_t *c) {$/;"	f
INTERCEPTOR	lib/tsan/dd/dd_interceptors.cc	/^INTERCEPTOR(int, pthread_cond_destroy, pthread_cond_t *c) {$/;"	f
INTERCEPTOR	lib/tsan/dd/dd_interceptors.cc	/^INTERCEPTOR(int, pthread_cond_init, pthread_cond_t *c,$/;"	f
INTERCEPTOR	lib/tsan/dd/dd_interceptors.cc	/^INTERCEPTOR(int, pthread_cond_signal, pthread_cond_t *c) {$/;"	f
INTERCEPTOR	lib/tsan/dd/dd_interceptors.cc	/^INTERCEPTOR(int, pthread_cond_timedwait, pthread_cond_t *c, pthread_mutex_t *m,$/;"	f
INTERCEPTOR	lib/tsan/dd/dd_interceptors.cc	/^INTERCEPTOR(int, pthread_cond_wait, pthread_cond_t *c, pthread_mutex_t *m) {$/;"	f
INTERCEPTOR	lib/tsan/dd/dd_interceptors.cc	/^INTERCEPTOR(int, pthread_mutex_destroy, pthread_mutex_t *m) {$/;"	f
INTERCEPTOR	lib/tsan/dd/dd_interceptors.cc	/^INTERCEPTOR(int, pthread_mutex_lock, pthread_mutex_t *m) {$/;"	f
INTERCEPTOR	lib/tsan/dd/dd_interceptors.cc	/^INTERCEPTOR(int, pthread_mutex_trylock, pthread_mutex_t *m) {$/;"	f
INTERCEPTOR	lib/tsan/dd/dd_interceptors.cc	/^INTERCEPTOR(int, pthread_mutex_unlock, pthread_mutex_t *m) {$/;"	f
INTERCEPTOR	lib/tsan/dd/dd_interceptors.cc	/^INTERCEPTOR(int, pthread_rwlock_destroy, pthread_rwlock_t *m) {$/;"	f
INTERCEPTOR	lib/tsan/dd/dd_interceptors.cc	/^INTERCEPTOR(int, pthread_rwlock_rdlock, pthread_rwlock_t *m) {$/;"	f
INTERCEPTOR	lib/tsan/dd/dd_interceptors.cc	/^INTERCEPTOR(int, pthread_rwlock_timedrdlock, pthread_rwlock_t *m,$/;"	f
INTERCEPTOR	lib/tsan/dd/dd_interceptors.cc	/^INTERCEPTOR(int, pthread_rwlock_timedwrlock, pthread_rwlock_t *m,$/;"	f
INTERCEPTOR	lib/tsan/dd/dd_interceptors.cc	/^INTERCEPTOR(int, pthread_rwlock_tryrdlock, pthread_rwlock_t *m) {$/;"	f
INTERCEPTOR	lib/tsan/dd/dd_interceptors.cc	/^INTERCEPTOR(int, pthread_rwlock_trywrlock, pthread_rwlock_t *m) {$/;"	f
INTERCEPTOR	lib/tsan/dd/dd_interceptors.cc	/^INTERCEPTOR(int, pthread_rwlock_unlock, pthread_rwlock_t *m) {$/;"	f
INTERCEPTOR	lib/tsan/dd/dd_interceptors.cc	/^INTERCEPTOR(int, pthread_rwlock_wrlock, pthread_rwlock_t *m) {$/;"	f
INTERCEPTOR	lib/tsan/dd/dd_interceptors.cc	/^INTERCEPTOR(int, pthread_spin_destroy, pthread_spinlock_t *m) {$/;"	f
INTERCEPTOR	lib/tsan/dd/dd_interceptors.cc	/^INTERCEPTOR(int, pthread_spin_lock, pthread_spinlock_t *m) {$/;"	f
INTERCEPTOR	lib/tsan/dd/dd_interceptors.cc	/^INTERCEPTOR(int, pthread_spin_trylock, pthread_spinlock_t *m) {$/;"	f
INTERCEPTOR	lib/tsan/dd/dd_interceptors.cc	/^INTERCEPTOR(int, pthread_spin_unlock, pthread_spinlock_t *m) {$/;"	f
INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^INTERCEPTOR(int, pthread_cond_broadcast, void *c) {$/;"	f
INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^INTERCEPTOR(int, pthread_cond_destroy, void *c) {$/;"	f
INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^INTERCEPTOR(int, pthread_cond_init, void *c, void *a) {$/;"	f
INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^INTERCEPTOR(int, pthread_cond_signal, void *c) {$/;"	f
INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^INTERCEPTOR(int, pthread_cond_timedwait, void *c, void *m, void *abstime) {$/;"	f
INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^INTERCEPTOR(int, pthread_cond_timedwait_relative_np, void *c, void *m,$/;"	f
INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^INTERCEPTOR(int, pthread_cond_wait, void *c, void *m) {$/;"	f
INTERCEPTORS_STRTO	lib/msan/msan_interceptors.cc	417;"	d	file:
INTERCEPTORS_STRTO	lib/msan/msan_interceptors.cc	426;"	d	file:
INTERCEPTORS_STRTO_BASE	lib/msan/msan_interceptors.cc	421;"	d	file:
INTERCEPTORS_STRTO_BASE	lib/msan/msan_interceptors.cc	432;"	d	file:
INTERCEPTOR_ATTRIBUTE	lib/interception/interception.h	122;"	d
INTERCEPTOR_ATTRIBUTE	lib/interception/interception.h	128;"	d
INTERCEPTOR_ATTRIBUTE	lib/interception/interception.h	136;"	d
INTERCEPTOR_ATTRIBUTE	lib/interception/interception.h	141;"	d
INTERCEPTOR_ATTRIBUTE	lib/interception/interception.h	151;"	d
INTERCEPTOR_ATTRIBUTE	lib/interception/interception.h	162;"	d
INTERCEPTOR_STRFTIME_BODY	lib/msan/msan_interceptors.cc	488;"	d	file:
INTERCEPTOR_STRTO	lib/msan/msan_interceptors.cc	393;"	d	file:
INTERCEPTOR_STRTO_BASE	lib/msan/msan_interceptors.cc	398;"	d	file:
INTERCEPTOR_STRTO_BASE_LOC	lib/msan/msan_interceptors.cc	410;"	d	file:
INTERCEPTOR_STRTO_BODY	lib/msan/msan_interceptors.cc	387;"	d	file:
INTERCEPTOR_STRTO_LOC	lib/msan/msan_interceptors.cc	404;"	d	file:
INTERCEPTOR_WINAPI	lib/asan/asan_malloc_win.cc	/^INTERCEPTOR_WINAPI(BOOL, HeapFree, HANDLE hHeap, DWORD dwFlags, LPVOID lpMem) {$/;"	f
INTERCEPTOR_WINAPI	lib/asan/asan_malloc_win.cc	/^INTERCEPTOR_WINAPI(LPVOID, HeapAlloc, HANDLE hHeap, DWORD dwFlags,$/;"	f
INTERCEPTOR_WINAPI	lib/asan/asan_malloc_win.cc	/^INTERCEPTOR_WINAPI(LPVOID, HeapReAlloc, HANDLE hHeap, DWORD dwFlags,$/;"	f
INTERCEPTOR_WINAPI	lib/asan/asan_malloc_win.cc	/^INTERCEPTOR_WINAPI(SIZE_T, HeapSize, HANDLE hHeap, DWORD dwFlags,$/;"	f
INTERCEPTOR_WINAPI	lib/asan/asan_win.cc	/^INTERCEPTOR_WINAPI(DWORD, CreateThread,$/;"	f
INTERCEPTOR_WINAPI	lib/asan/asan_win.cc	/^INTERCEPTOR_WINAPI(LPTOP_LEVEL_EXCEPTION_FILTER, SetUnhandledExceptionFilter,$/;"	f
INTERCEPTOR_WINAPI	lib/asan/asan_win.cc	/^INTERCEPTOR_WINAPI(int, __C_specific_handler, void *a, void *b, void *c, void *d) {  \/\/ NOLINT$/;"	f
INTERCEPTOR_WINAPI	lib/asan/asan_win.cc	/^INTERCEPTOR_WINAPI(void, RaiseException, void *a, void *b, void *c, void *d) {$/;"	f
INTERCEPTOR_WINAPI	lib/asan/asan_win.cc	/^INTERCEPTOR_WINAPI(void, RtlRaiseException, EXCEPTION_RECORD *ExceptionRecord) {$/;"	f
INTERCEPTOR_WINAPI	lib/interception/interception.h	252;"	d
INTERCEPTOR_WITH_SUFFIX	lib/interception/interception.h	229;"	d
INTERCEPTOR_WITH_SUFFIX	lib/interception/interception.h	243;"	d
INTERCEPTOR_ZZZ	lib/interception/interception.h	234;"	d
INTERCEPT_DISPATCH_X_F_3	lib/asan/asan_mac.cc	226;"	d	file:
INTERCEPT_DISPATCH_X_F_3	lib/lsan/lsan_mac.cc	111;"	d	file:
INTERCEPT_FUNCTION	lib/interception/interception.h	281;"	d
INTERCEPT_FUNCTION_DLLIMPORT	lib/interception/interception_win.h	78;"	d
INTERCEPT_FUNCTION_LINUX_OR_FREEBSD	lib/interception/interception_linux.h	32;"	d
INTERCEPT_FUNCTION_MAC	lib/interception/interception_mac.h	24;"	d
INTERCEPT_FUNCTION_VER	lib/interception/interception.h	282;"	d
INTERCEPT_FUNCTION_VER_LINUX_OR_FREEBSD	lib/interception/interception_linux.h	40;"	d
INTERCEPT_FUNCTION_VER_MAC	lib/interception/interception_mac.h	25;"	d
INTERCEPT_FUNCTION_VER_WIN	lib/interception/interception_win.h	76;"	d
INTERCEPT_FUNCTION_WIN	lib/interception/interception_win.h	65;"	d
INTERCEPT_LIBRARY_FUNCTION	lib/sanitizer_common/sanitizer_win_dll_thunk.h	86;"	d
INTERCEPT_OR_DIE	lib/sanitizer_common/sanitizer_win_dll_thunk.h	31;"	d
INTERCEPT_SANITIZER_FUNCTION	lib/sanitizer_common/sanitizer_win_dll_thunk.h	54;"	d
INTERCEPT_SANITIZER_WEAK_FUNCTION	lib/sanitizer_common/sanitizer_win_dll_thunk.h	69;"	d
INTERCEPT_SANITIZER_WEAK_FUNCTION	lib/sanitizer_common/sanitizer_win_weak_interception.h	25;"	d
INTERCEPT_STRTO	lib/msan/msan_interceptors.cc	457;"	d	file:
INTERCEPT_UCRT_FUNCTION	lib/asan/asan_malloc_win.cc	239;"	d	file:
INTERCEPT_UCRT_FUNCTION	lib/asan/asan_malloc_win.cc	247;"	d	file:
INTERCEPT_WEAK	lib/sanitizer_common/sanitizer_win_weak_interception.h	23;"	d
INTERCEPT_WHEN_POSSIBLE	lib/sanitizer_common/sanitizer_win_dll_thunk.h	42;"	d
INTERCEPT_WRAP_V_V	lib/sanitizer_common/sanitizer_win_dll_thunk.h	92;"	d
INTERCEPT_WRAP_V_W	lib/sanitizer_common/sanitizer_win_dll_thunk.h	100;"	d
INTERCEPT_WRAP_V_WW	lib/sanitizer_common/sanitizer_win_dll_thunk.h	108;"	d
INTERCEPT_WRAP_V_WWW	lib/sanitizer_common/sanitizer_win_dll_thunk.h	116;"	d
INTERCEPT_WRAP_W_V	lib/sanitizer_common/sanitizer_win_dll_thunk.h	124;"	d
INTERCEPT_WRAP_W_W	lib/sanitizer_common/sanitizer_win_dll_thunk.h	132;"	d
INTERCEPT_WRAP_W_WW	lib/sanitizer_common/sanitizer_win_dll_thunk.h	140;"	d
INTERCEPT_WRAP_W_WWW	lib/sanitizer_common/sanitizer_win_dll_thunk.h	148;"	d
INTERCEPT_WRAP_W_WWWW	lib/sanitizer_common/sanitizer_win_dll_thunk.h	156;"	d
INTERCEPT_WRAP_W_WWWWW	lib/sanitizer_common/sanitizer_win_dll_thunk.h	164;"	d
INTERCEPT_WRAP_W_WWWWWW	lib/sanitizer_common/sanitizer_win_dll_thunk.h	173;"	d
INTERFACE	lib/ubsan_minimal/ubsan_minimal_handlers.cc	77;"	d	file:
INTERFACE_ATTRIBUTE	lib/sanitizer_common/sanitizer_internal_defs.h	200;"	d
INTERFACE_ATTRIBUTE	lib/tsan/rtl/tsan_interface_java.h	28;"	d
INTERFACE_ATTRIBUTE	lib/tsan/rtl/tsan_interface_java.h	98;"	d
INTERFACE_FUNCTION	lib/asan/asan_win_dll_thunk.cc	26;"	d	file:
INTERFACE_FUNCTION	lib/asan/asan_win_dynamic_runtime_thunk.cc	31;"	d	file:
INTERFACE_FUNCTION	lib/asan/asan_win_weak_interception.cc	20;"	d	file:
INTERFACE_FUNCTION	lib/sanitizer_common/sanitizer_coverage_win_dll_thunk.cc	18;"	d	file:
INTERFACE_FUNCTION	lib/sanitizer_common/sanitizer_coverage_win_dynamic_runtime_thunk.cc	18;"	d	file:
INTERFACE_FUNCTION	lib/sanitizer_common/sanitizer_coverage_win_weak_interception.cc	21;"	d	file:
INTERFACE_FUNCTION	lib/sanitizer_common/sanitizer_win_dll_thunk.cc	54;"	d	file:
INTERFACE_FUNCTION	lib/sanitizer_common/sanitizer_win_dynamic_runtime_thunk.cc	18;"	d	file:
INTERFACE_FUNCTION	lib/sanitizer_common/sanitizer_win_weak_interception.cc	53;"	d	file:
INTERFACE_FUNCTION	lib/ubsan/ubsan_win_dll_thunk.cc	18;"	d	file:
INTERFACE_FUNCTION	lib/ubsan/ubsan_win_dynamic_runtime_thunk.cc	18;"	d	file:
INTERFACE_FUNCTION	lib/ubsan/ubsan_win_weak_interception.cc	21;"	d	file:
INTERFACE_WEAK_FUNCTION	lib/asan/asan_win_dll_thunk.cc	27;"	d	file:
INTERFACE_WEAK_FUNCTION	lib/asan/asan_win_dynamic_runtime_thunk.cc	32;"	d	file:
INTERFACE_WEAK_FUNCTION	lib/asan/asan_win_weak_interception.cc	21;"	d	file:
INTERFACE_WEAK_FUNCTION	lib/sanitizer_common/sanitizer_coverage_win_dll_thunk.cc	19;"	d	file:
INTERFACE_WEAK_FUNCTION	lib/sanitizer_common/sanitizer_coverage_win_dynamic_runtime_thunk.cc	19;"	d	file:
INTERFACE_WEAK_FUNCTION	lib/sanitizer_common/sanitizer_coverage_win_weak_interception.cc	22;"	d	file:
INTERFACE_WEAK_FUNCTION	lib/sanitizer_common/sanitizer_win_dll_thunk.cc	55;"	d	file:
INTERFACE_WEAK_FUNCTION	lib/sanitizer_common/sanitizer_win_dynamic_runtime_thunk.cc	19;"	d	file:
INTERFACE_WEAK_FUNCTION	lib/sanitizer_common/sanitizer_win_weak_interception.cc	54;"	d	file:
INTERFACE_WEAK_FUNCTION	lib/ubsan/ubsan_win_dll_thunk.cc	19;"	d	file:
INTERFACE_WEAK_FUNCTION	lib/ubsan/ubsan_win_dynamic_runtime_thunk.cc	19;"	d	file:
INTERFACE_WEAK_FUNCTION	lib/ubsan/ubsan_win_weak_interception.cc	22;"	d	file:
INTERPOSER	lib/interception/interception.h	103;"	d
INTERPOSER_2	lib/interception/interception.h	113;"	d
INTMAX_T	lib/interception/interception.h	/^typedef __sanitizer::s64     INTMAX_T;$/;"	t
INT_ENDIANNESS_H	lib/builtins/int_endianness.h	17;"	d
INT_LIB_H	lib/builtins/int_lib.h	17;"	d
INT_MATH_H	lib/builtins/int_math.h	22;"	d
INT_TYPES_H	lib/builtins/int_types.h	19;"	d
INT_UTIL_H	lib/builtins/int_util.h	20;"	d
INVALID	lib/msan/msan.h	/^    INVALID, APP, SHADOW, ORIGIN$/;"	e	enum:MappingDesc::Type
IOCTL_AFM_ADDFMAP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_AFM_ADDFMAP = AFM_ADDFMAP;$/;"	m	namespace:__sanitizer	file:
IOCTL_AFM_CLEANFMAP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_AFM_CLEANFMAP = AFM_CLEANFMAP;$/;"	m	namespace:__sanitizer	file:
IOCTL_AFM_DELFMAP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_AFM_DELFMAP = AFM_DELFMAP;$/;"	m	namespace:__sanitizer	file:
IOCTL_AFM_GETFMAP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_AFM_GETFMAP = AFM_GETFMAP;$/;"	m	namespace:__sanitizer	file:
IOCTL_AGPIOC_ACQUIRE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_AGPIOC_ACQUIRE = AGPIOC_ACQUIRE;$/;"	m	namespace:__sanitizer	file:
IOCTL_AGPIOC_ALLOCATE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_AGPIOC_ALLOCATE = AGPIOC_ALLOCATE;$/;"	m	namespace:__sanitizer	file:
IOCTL_AGPIOC_BIND	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_AGPIOC_BIND = AGPIOC_BIND;$/;"	m	namespace:__sanitizer	file:
IOCTL_AGPIOC_DEALLOCATE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_AGPIOC_DEALLOCATE = AGPIOC_DEALLOCATE;$/;"	m	namespace:__sanitizer	file:
IOCTL_AGPIOC_INFO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_AGPIOC_INFO = AGPIOC_INFO;$/;"	m	namespace:__sanitizer	file:
IOCTL_AGPIOC_RELEASE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_AGPIOC_RELEASE = AGPIOC_RELEASE;$/;"	m	namespace:__sanitizer	file:
IOCTL_AGPIOC_SETUP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_AGPIOC_SETUP = AGPIOC_SETUP;$/;"	m	namespace:__sanitizer	file:
IOCTL_AGPIOC_UNBIND	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_AGPIOC_UNBIND = AGPIOC_UNBIND;$/;"	m	namespace:__sanitizer	file:
IOCTL_ALTQGTYPE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_ALTQGTYPE = ALTQGTYPE;$/;"	m	namespace:__sanitizer	file:
IOCTL_ALTQTBRGET	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_ALTQTBRGET = ALTQTBRGET;$/;"	m	namespace:__sanitizer	file:
IOCTL_ALTQTBRSET	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_ALTQTBRSET = ALTQTBRSET;$/;"	m	namespace:__sanitizer	file:
IOCTL_AMR_IO_COMMAND	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_AMR_IO_COMMAND = AMR_IO_COMMAND;$/;"	m	namespace:__sanitizer	file:
IOCTL_AMR_IO_VERSION	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_AMR_IO_VERSION = AMR_IO_VERSION;$/;"	m	namespace:__sanitizer	file:
IOCTL_APM_IOC_DEV_CTL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_APM_IOC_DEV_CTL = APM_IOC_DEV_CTL;$/;"	m	namespace:__sanitizer	file:
IOCTL_APM_IOC_GETPOWER	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_APM_IOC_GETPOWER = APM_IOC_GETPOWER;$/;"	m	namespace:__sanitizer	file:
IOCTL_APM_IOC_NEXTEVENT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_APM_IOC_NEXTEVENT = APM_IOC_NEXTEVENT;$/;"	m	namespace:__sanitizer	file:
IOCTL_APM_IOC_REJECT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_APM_IOC_REJECT = APM_IOC_REJECT;$/;"	m	namespace:__sanitizer	file:
IOCTL_APM_IOC_STANDBY	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_APM_IOC_STANDBY = APM_IOC_STANDBY;$/;"	m	namespace:__sanitizer	file:
IOCTL_APM_IOC_SUSPEND	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_APM_IOC_SUSPEND = APM_IOC_SUSPEND;$/;"	m	namespace:__sanitizer	file:
IOCTL_ATABUSIODETACH	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_ATABUSIODETACH = ATABUSIODETACH;$/;"	m	namespace:__sanitizer	file:
IOCTL_ATABUSIORESET	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_ATABUSIORESET = ATABUSIORESET;$/;"	m	namespace:__sanitizer	file:
IOCTL_ATABUSIOSCAN	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_ATABUSIOSCAN = ATABUSIOSCAN;$/;"	m	namespace:__sanitizer	file:
IOCTL_ATAIOCCOMMAND	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_ATAIOCCOMMAND = ATAIOCCOMMAND;$/;"	m	namespace:__sanitizer	file:
IOCTL_AUDIO_DRAIN	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_AUDIO_DRAIN = AUDIO_DRAIN;$/;"	m	namespace:__sanitizer	file:
IOCTL_AUDIO_FLUSH	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_AUDIO_FLUSH = AUDIO_FLUSH;$/;"	m	namespace:__sanitizer	file:
IOCTL_AUDIO_GETBUFINFO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_AUDIO_GETBUFINFO = AUDIO_GETBUFINFO;$/;"	m	namespace:__sanitizer	file:
IOCTL_AUDIO_GETCHAN	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_AUDIO_GETCHAN = AUDIO_GETCHAN;$/;"	m	namespace:__sanitizer	file:
IOCTL_AUDIO_GETDEV	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_AUDIO_GETDEV = AUDIO_GETDEV;$/;"	m	namespace:__sanitizer	file:
IOCTL_AUDIO_GETENC	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_AUDIO_GETENC = AUDIO_GETENC;$/;"	m	namespace:__sanitizer	file:
IOCTL_AUDIO_GETFD	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_AUDIO_GETFD = AUDIO_GETFD;$/;"	m	namespace:__sanitizer	file:
IOCTL_AUDIO_GETINFO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_AUDIO_GETINFO = AUDIO_GETINFO;$/;"	m	namespace:__sanitizer	file:
IOCTL_AUDIO_GETIOFFS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_AUDIO_GETIOFFS = AUDIO_GETIOFFS;$/;"	m	namespace:__sanitizer	file:
IOCTL_AUDIO_GETOOFFS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_AUDIO_GETOOFFS = AUDIO_GETOOFFS;$/;"	m	namespace:__sanitizer	file:
IOCTL_AUDIO_GETPROPS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_AUDIO_GETPROPS = AUDIO_GETPROPS;$/;"	m	namespace:__sanitizer	file:
IOCTL_AUDIO_MIXER_DEVINFO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_AUDIO_MIXER_DEVINFO = AUDIO_MIXER_DEVINFO;$/;"	m	namespace:__sanitizer	file:
IOCTL_AUDIO_MIXER_READ	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_AUDIO_MIXER_READ = AUDIO_MIXER_READ;$/;"	m	namespace:__sanitizer	file:
IOCTL_AUDIO_MIXER_WRITE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_AUDIO_MIXER_WRITE = AUDIO_MIXER_WRITE;$/;"	m	namespace:__sanitizer	file:
IOCTL_AUDIO_PERROR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_AUDIO_PERROR = AUDIO_PERROR;$/;"	m	namespace:__sanitizer	file:
IOCTL_AUDIO_RERROR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_AUDIO_RERROR = AUDIO_RERROR;$/;"	m	namespace:__sanitizer	file:
IOCTL_AUDIO_SETCHAN	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_AUDIO_SETCHAN = AUDIO_SETCHAN;$/;"	m	namespace:__sanitizer	file:
IOCTL_AUDIO_SETFD	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_AUDIO_SETFD = AUDIO_SETFD;$/;"	m	namespace:__sanitizer	file:
IOCTL_AUDIO_SETINFO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_AUDIO_SETINFO = AUDIO_SETINFO;$/;"	m	namespace:__sanitizer	file:
IOCTL_AUDIO_WSEEK	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_AUDIO_WSEEK = AUDIO_WSEEK;$/;"	m	namespace:__sanitizer	file:
IOCTL_BIOCALARM	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_BIOCALARM = BIOCALARM;$/;"	m	namespace:__sanitizer	file:
IOCTL_BIOCBLINK	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_BIOCBLINK = BIOCBLINK;$/;"	m	namespace:__sanitizer	file:
IOCTL_BIOCDISK	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_BIOCDISK = BIOCDISK;$/;"	m	namespace:__sanitizer	file:
IOCTL_BIOCDISK_NOVOL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_BIOCDISK_NOVOL = BIOCDISK_NOVOL;$/;"	m	namespace:__sanitizer	file:
IOCTL_BIOCFLUSH	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_BIOCFLUSH = BIOCFLUSH;$/;"	m	namespace:__sanitizer	file:
IOCTL_BIOCGBLEN	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_BIOCGBLEN = BIOCGBLEN;$/;"	m	namespace:__sanitizer	file:
IOCTL_BIOCGDLT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_BIOCGDLT = BIOCGDLT;$/;"	m	namespace:__sanitizer	file:
IOCTL_BIOCGDLTLIST	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_BIOCGDLTLIST = BIOCGDLTLIST;$/;"	m	namespace:__sanitizer	file:
IOCTL_BIOCGETIF	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_BIOCGETIF = BIOCGETIF;$/;"	m	namespace:__sanitizer	file:
IOCTL_BIOCGFEEDBACK	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_BIOCGFEEDBACK = BIOCGFEEDBACK;$/;"	m	namespace:__sanitizer	file:
IOCTL_BIOCGHDRCMPLT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_BIOCGHDRCMPLT = BIOCGHDRCMPLT;$/;"	m	namespace:__sanitizer	file:
IOCTL_BIOCGRTIMEOUT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_BIOCGRTIMEOUT = BIOCGRTIMEOUT;$/;"	m	namespace:__sanitizer	file:
IOCTL_BIOCGSEESENT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_BIOCGSEESENT = BIOCGSEESENT;$/;"	m	namespace:__sanitizer	file:
IOCTL_BIOCGSTATS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_BIOCGSTATS = BIOCGSTATS;$/;"	m	namespace:__sanitizer	file:
IOCTL_BIOCGSTATSOLD	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_BIOCGSTATSOLD = BIOCGSTATSOLD;$/;"	m	namespace:__sanitizer	file:
IOCTL_BIOCIMMEDIATE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_BIOCIMMEDIATE = BIOCIMMEDIATE;$/;"	m	namespace:__sanitizer	file:
IOCTL_BIOCINQ	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_BIOCINQ = BIOCINQ;$/;"	m	namespace:__sanitizer	file:
IOCTL_BIOCLOCATE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_BIOCLOCATE = BIOCLOCATE;$/;"	m	namespace:__sanitizer	file:
IOCTL_BIOCPROMISC	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_BIOCPROMISC = BIOCPROMISC;$/;"	m	namespace:__sanitizer	file:
IOCTL_BIOCSBLEN	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_BIOCSBLEN = BIOCSBLEN;$/;"	m	namespace:__sanitizer	file:
IOCTL_BIOCSDLT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_BIOCSDLT = BIOCSDLT;$/;"	m	namespace:__sanitizer	file:
IOCTL_BIOCSETF	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_BIOCSETF = BIOCSETF;$/;"	m	namespace:__sanitizer	file:
IOCTL_BIOCSETIF	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_BIOCSETIF = BIOCSETIF;$/;"	m	namespace:__sanitizer	file:
IOCTL_BIOCSETSTATE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_BIOCSETSTATE = BIOCSETSTATE;$/;"	m	namespace:__sanitizer	file:
IOCTL_BIOCSFEEDBACK	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_BIOCSFEEDBACK = BIOCSFEEDBACK;$/;"	m	namespace:__sanitizer	file:
IOCTL_BIOCSHDRCMPLT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_BIOCSHDRCMPLT = BIOCSHDRCMPLT;$/;"	m	namespace:__sanitizer	file:
IOCTL_BIOCSRTIMEOUT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_BIOCSRTIMEOUT = BIOCSRTIMEOUT;$/;"	m	namespace:__sanitizer	file:
IOCTL_BIOCSSEESENT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_BIOCSSEESENT = BIOCSSEESENT;$/;"	m	namespace:__sanitizer	file:
IOCTL_BIOCSTCPF	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_BIOCSTCPF = BIOCSTCPF;$/;"	m	namespace:__sanitizer	file:
IOCTL_BIOCSUDPF	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_BIOCSUDPF = BIOCSUDPF;$/;"	m	namespace:__sanitizer	file:
IOCTL_BIOCVERSION	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_BIOCVERSION = BIOCVERSION;$/;"	m	namespace:__sanitizer	file:
IOCTL_BIOCVOL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_BIOCVOL = BIOCVOL;$/;"	m	namespace:__sanitizer	file:
IOCTL_BIOCVOLOPS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_BIOCVOLOPS = BIOCVOLOPS;$/;"	m	namespace:__sanitizer	file:
IOCTL_BLKFLSBUF	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_BLKFLSBUF = BLKFLSBUF;$/;"	m	namespace:__sanitizer	file:
IOCTL_BLKGETSIZE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_BLKGETSIZE = BLKGETSIZE;$/;"	m	namespace:__sanitizer	file:
IOCTL_BLKRAGET	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_BLKRAGET = BLKRAGET;$/;"	m	namespace:__sanitizer	file:
IOCTL_BLKRASET	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_BLKRASET = BLKRASET;$/;"	m	namespace:__sanitizer	file:
IOCTL_BLKROGET	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_BLKROGET = BLKROGET;$/;"	m	namespace:__sanitizer	file:
IOCTL_BLKROSET	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_BLKROSET = BLKROSET;$/;"	m	namespace:__sanitizer	file:
IOCTL_BLKRRPART	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_BLKRRPART = BLKRRPART;$/;"	m	namespace:__sanitizer	file:
IOCTL_BLUE_CONFIG	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_BLUE_CONFIG = BLUE_CONFIG;$/;"	m	namespace:__sanitizer	file:
IOCTL_BLUE_DISABLE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_BLUE_DISABLE = BLUE_DISABLE;$/;"	m	namespace:__sanitizer	file:
IOCTL_BLUE_ENABLE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_BLUE_ENABLE = BLUE_ENABLE;$/;"	m	namespace:__sanitizer	file:
IOCTL_BLUE_GETSTATS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_BLUE_GETSTATS = BLUE_GETSTATS;$/;"	m	namespace:__sanitizer	file:
IOCTL_BLUE_IF_ATTACH	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_BLUE_IF_ATTACH = BLUE_IF_ATTACH;$/;"	m	namespace:__sanitizer	file:
IOCTL_BLUE_IF_DETACH	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_BLUE_IF_DETACH = BLUE_IF_DETACH;$/;"	m	namespace:__sanitizer	file:
IOCTL_BTDEV_ATTACH	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_BTDEV_ATTACH = BTDEV_ATTACH;$/;"	m	namespace:__sanitizer	file:
IOCTL_BTDEV_DETACH	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_BTDEV_DETACH = BTDEV_DETACH;$/;"	m	namespace:__sanitizer	file:
IOCTL_BTSCO_GETINFO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_BTSCO_GETINFO = BTSCO_GETINFO;$/;"	m	namespace:__sanitizer	file:
IOCTL_CBQ_ADD_CLASS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CBQ_ADD_CLASS = CBQ_ADD_CLASS;$/;"	m	namespace:__sanitizer	file:
IOCTL_CBQ_ADD_FILTER	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CBQ_ADD_FILTER = CBQ_ADD_FILTER;$/;"	m	namespace:__sanitizer	file:
IOCTL_CBQ_CLEAR_HIERARCHY	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CBQ_CLEAR_HIERARCHY = CBQ_CLEAR_HIERARCHY;$/;"	m	namespace:__sanitizer	file:
IOCTL_CBQ_DEL_CLASS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CBQ_DEL_CLASS = CBQ_DEL_CLASS;$/;"	m	namespace:__sanitizer	file:
IOCTL_CBQ_DEL_FILTER	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CBQ_DEL_FILTER = CBQ_DEL_FILTER;$/;"	m	namespace:__sanitizer	file:
IOCTL_CBQ_DISABLE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CBQ_DISABLE = CBQ_DISABLE;$/;"	m	namespace:__sanitizer	file:
IOCTL_CBQ_ENABLE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CBQ_ENABLE = CBQ_ENABLE;$/;"	m	namespace:__sanitizer	file:
IOCTL_CBQ_GETSTATS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CBQ_GETSTATS = CBQ_GETSTATS;$/;"	m	namespace:__sanitizer	file:
IOCTL_CBQ_IF_ATTACH	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CBQ_IF_ATTACH = CBQ_IF_ATTACH;$/;"	m	namespace:__sanitizer	file:
IOCTL_CBQ_IF_DETACH	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CBQ_IF_DETACH = CBQ_IF_DETACH;$/;"	m	namespace:__sanitizer	file:
IOCTL_CBQ_MODIFY_CLASS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CBQ_MODIFY_CLASS = CBQ_MODIFY_CLASS;$/;"	m	namespace:__sanitizer	file:
IOCTL_CCDIOCCLR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CCDIOCCLR = CCDIOCCLR;$/;"	m	namespace:__sanitizer	file:
IOCTL_CCDIOCSET	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CCDIOCSET = CCDIOCSET;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDIOCALLOW	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CDIOCALLOW = CDIOCALLOW;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDIOCCLOSE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CDIOCCLOSE = CDIOCCLOSE;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDIOCCLRDEBUG	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CDIOCCLRDEBUG = CDIOCCLRDEBUG;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDIOCEJECT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CDIOCEJECT = CDIOCEJECT;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDIOCGETVOL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CDIOCGETVOL = CDIOCGETVOL;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDIOCLOADUNLOAD	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CDIOCLOADUNLOAD = CDIOCLOADUNLOAD;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDIOCPAUSE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CDIOCPAUSE = CDIOCPAUSE;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDIOCPLAYBLOCKS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CDIOCPLAYBLOCKS = CDIOCPLAYBLOCKS;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDIOCPLAYMSF	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CDIOCPLAYMSF = CDIOCPLAYMSF;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDIOCPLAYTRACKS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CDIOCPLAYTRACKS = CDIOCPLAYTRACKS;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDIOCPREVENT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CDIOCPREVENT = CDIOCPREVENT;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDIOCREADSUBCHANNEL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CDIOCREADSUBCHANNEL = CDIOCREADSUBCHANNEL;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDIOCRESET	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CDIOCRESET = CDIOCRESET;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDIOCRESUME	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CDIOCRESUME = CDIOCRESUME;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDIOCSETDEBUG	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CDIOCSETDEBUG = CDIOCSETDEBUG;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDIOCSETLEFT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CDIOCSETLEFT = CDIOCSETLEFT;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDIOCSETMONO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CDIOCSETMONO = CDIOCSETMONO;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDIOCSETMUTE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CDIOCSETMUTE = CDIOCSETMUTE;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDIOCSETPATCH	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CDIOCSETPATCH = CDIOCSETPATCH;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDIOCSETRIGHT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CDIOCSETRIGHT = CDIOCSETRIGHT;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDIOCSETSTEREO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CDIOCSETSTEREO = CDIOCSETSTEREO;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDIOCSETVOL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CDIOCSETVOL = CDIOCSETVOL;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDIOCSTART	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CDIOCSTART = CDIOCSTART;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDIOCSTOP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CDIOCSTOP = CDIOCSTOP;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDIOREADMSADDR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CDIOREADMSADDR = CDIOREADMSADDR;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDIOREADTOCENTRIES	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CDIOREADTOCENTRIES = CDIOREADTOCENTRIES;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDIOREADTOCHEADER	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CDIOREADTOCHEADER = CDIOREADTOCHEADER;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDNR_ADD_ELEM	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CDNR_ADD_ELEM = CDNR_ADD_ELEM;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDNR_ADD_FILTER	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CDNR_ADD_FILTER = CDNR_ADD_FILTER;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDNR_ADD_TBM	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CDNR_ADD_TBM = CDNR_ADD_TBM;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDNR_ADD_TCM	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CDNR_ADD_TCM = CDNR_ADD_TCM;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDNR_ADD_TSW	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CDNR_ADD_TSW = CDNR_ADD_TSW;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDNR_DEL_ELEM	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CDNR_DEL_ELEM = CDNR_DEL_ELEM;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDNR_DEL_FILTER	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CDNR_DEL_FILTER = CDNR_DEL_FILTER;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDNR_DISABLE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CDNR_DISABLE = CDNR_DISABLE;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDNR_ENABLE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CDNR_ENABLE = CDNR_ENABLE;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDNR_GETSTATS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CDNR_GETSTATS = CDNR_GETSTATS;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDNR_IF_ATTACH	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CDNR_IF_ATTACH = CDNR_IF_ATTACH;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDNR_IF_DETACH	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CDNR_IF_DETACH = CDNR_IF_DETACH;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDNR_MOD_TBM	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CDNR_MOD_TBM = CDNR_MOD_TBM;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDNR_MOD_TCM	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CDNR_MOD_TCM = CDNR_MOD_TCM;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDNR_MOD_TSW	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CDNR_MOD_TSW = CDNR_MOD_TSW;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDNR_TBM_STATS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CDNR_TBM_STATS = CDNR_TBM_STATS;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDNR_TCM_STATS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CDNR_TCM_STATS = CDNR_TCM_STATS;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDROMAUDIOBUFSIZ	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_CDROMAUDIOBUFSIZ = CDROMAUDIOBUFSIZ;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDROMEJECT	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_CDROMEJECT = CDROMEJECT;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDROMEJECT_SW	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_CDROMEJECT_SW = CDROMEJECT_SW;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDROMMULTISESSION	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_CDROMMULTISESSION = CDROMMULTISESSION;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDROMPAUSE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_CDROMPAUSE = CDROMPAUSE;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDROMPLAYMSF	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_CDROMPLAYMSF = CDROMPLAYMSF;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDROMPLAYTRKIND	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_CDROMPLAYTRKIND = CDROMPLAYTRKIND;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDROMREADAUDIO	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_CDROMREADAUDIO = CDROMREADAUDIO;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDROMREADCOOKED	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_CDROMREADCOOKED = CDROMREADCOOKED;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDROMREADMODE1	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_CDROMREADMODE1 = CDROMREADMODE1;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDROMREADMODE2	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_CDROMREADMODE2 = CDROMREADMODE2;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDROMREADRAW	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_CDROMREADRAW = CDROMREADRAW;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDROMREADTOCENTRY	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_CDROMREADTOCENTRY = CDROMREADTOCENTRY;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDROMREADTOCHDR	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_CDROMREADTOCHDR = CDROMREADTOCHDR;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDROMRESET	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_CDROMRESET = CDROMRESET;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDROMRESUME	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_CDROMRESUME = CDROMRESUME;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDROMSEEK	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_CDROMSEEK = CDROMSEEK;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDROMSTART	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_CDROMSTART = CDROMSTART;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDROMSTOP	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_CDROMSTOP = CDROMSTOP;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDROMSUBCHNL	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_CDROMSUBCHNL = CDROMSUBCHNL;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDROMVOLCTRL	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_CDROMVOLCTRL = CDROMVOLCTRL;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDROMVOLREAD	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_CDROMVOLREAD = CDROMVOLREAD;$/;"	m	namespace:__sanitizer	file:
IOCTL_CDROM_GET_UPC	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_CDROM_GET_UPC = CDROM_GET_UPC;$/;"	m	namespace:__sanitizer	file:
IOCTL_CEC_GET_LOG_ADDRS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CEC_GET_LOG_ADDRS = CEC_GET_LOG_ADDRS;$/;"	m	namespace:__sanitizer	file:
IOCTL_CEC_GET_PHYS_ADDR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CEC_GET_PHYS_ADDR = CEC_GET_PHYS_ADDR;$/;"	m	namespace:__sanitizer	file:
IOCTL_CEC_GET_VENDOR_ID	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CEC_GET_VENDOR_ID = CEC_GET_VENDOR_ID;$/;"	m	namespace:__sanitizer	file:
IOCTL_CEC_SET_LOG_ADDRS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CEC_SET_LOG_ADDRS = CEC_SET_LOG_ADDRS;$/;"	m	namespace:__sanitizer	file:
IOCTL_CGDIOCCLR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CGDIOCCLR = CGDIOCCLR;$/;"	m	namespace:__sanitizer	file:
IOCTL_CGDIOCGET	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CGDIOCGET = CGDIOCGET;$/;"	m	namespace:__sanitizer	file:
IOCTL_CGDIOCSET	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CGDIOCSET = CGDIOCSET;$/;"	m	namespace:__sanitizer	file:
IOCTL_CHIOEXCHANGE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CHIOEXCHANGE = CHIOEXCHANGE;$/;"	m	namespace:__sanitizer	file:
IOCTL_CHIOGPARAMS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CHIOGPARAMS = CHIOGPARAMS;$/;"	m	namespace:__sanitizer	file:
IOCTL_CHIOGPICKER	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CHIOGPICKER = CHIOGPICKER;$/;"	m	namespace:__sanitizer	file:
IOCTL_CHIOGSTATUS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CHIOGSTATUS = CHIOGSTATUS;$/;"	m	namespace:__sanitizer	file:
IOCTL_CHIOIELEM	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CHIOIELEM = CHIOIELEM;$/;"	m	namespace:__sanitizer	file:
IOCTL_CHIOMOVE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CHIOMOVE = CHIOMOVE;$/;"	m	namespace:__sanitizer	file:
IOCTL_CHIOPOSITION	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CHIOPOSITION = CHIOPOSITION;$/;"	m	namespace:__sanitizer	file:
IOCTL_CHIOSPICKER	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CHIOSPICKER = CHIOSPICKER;$/;"	m	namespace:__sanitizer	file:
IOCTL_CHIOSVOLTAG	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CHIOSVOLTAG = CHIOSVOLTAG;$/;"	m	namespace:__sanitizer	file:
IOCTL_CIOCASYMFEAT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CIOCASYMFEAT = CIOCASYMFEAT;$/;"	m	namespace:__sanitizer	file:
IOCTL_CIOCCRYPT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CIOCCRYPT = CIOCCRYPT;$/;"	m	namespace:__sanitizer	file:
IOCTL_CIOCFSESSION	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CIOCFSESSION = CIOCFSESSION;$/;"	m	namespace:__sanitizer	file:
IOCTL_CIOCGSESSION	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CIOCGSESSION = CIOCGSESSION;$/;"	m	namespace:__sanitizer	file:
IOCTL_CIOCKEY	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CIOCKEY = CIOCKEY;$/;"	m	namespace:__sanitizer	file:
IOCTL_CIOCNCRYPTM	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CIOCNCRYPTM = CIOCNCRYPTM;$/;"	m	namespace:__sanitizer	file:
IOCTL_CIOCNCRYPTRET	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CIOCNCRYPTRET = CIOCNCRYPTRET;$/;"	m	namespace:__sanitizer	file:
IOCTL_CIOCNCRYPTRETM	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CIOCNCRYPTRETM = CIOCNCRYPTRETM;$/;"	m	namespace:__sanitizer	file:
IOCTL_CIOCNFKEYM	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CIOCNFKEYM = CIOCNFKEYM;$/;"	m	namespace:__sanitizer	file:
IOCTL_CIOCNFSESSION	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CIOCNFSESSION = CIOCNFSESSION;$/;"	m	namespace:__sanitizer	file:
IOCTL_CIOCNGSESSION	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CIOCNGSESSION = CIOCNGSESSION;$/;"	m	namespace:__sanitizer	file:
IOCTL_CLOCKCTL_ADJTIME	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CLOCKCTL_ADJTIME = CLOCKCTL_ADJTIME;$/;"	m	namespace:__sanitizer	file:
IOCTL_CLOCKCTL_CLOCK_SETTIME	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CLOCKCTL_CLOCK_SETTIME = CLOCKCTL_CLOCK_SETTIME;$/;"	m	namespace:__sanitizer	file:
IOCTL_CLOCKCTL_NTP_ADJTIME	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CLOCKCTL_NTP_ADJTIME = CLOCKCTL_NTP_ADJTIME;$/;"	m	namespace:__sanitizer	file:
IOCTL_CLOCKCTL_SETTIMEOFDAY	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CLOCKCTL_SETTIMEOFDAY = CLOCKCTL_SETTIMEOFDAY;$/;"	m	namespace:__sanitizer	file:
IOCTL_CONS_GETVERS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CONS_GETVERS = CONS_GETVERS;$/;"	m	namespace:__sanitizer	file:
IOCTL_CRIOGET	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_CRIOGET = CRIOGET;$/;"	m	namespace:__sanitizer	file:
IOCTL_CYGETDEFTHRESH	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_CYGETDEFTHRESH = CYGETDEFTHRESH;$/;"	m	namespace:__sanitizer	file:
IOCTL_CYGETDEFTIMEOUT	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_CYGETDEFTIMEOUT = CYGETDEFTIMEOUT;$/;"	m	namespace:__sanitizer	file:
IOCTL_CYGETMON	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_CYGETMON = CYGETMON;$/;"	m	namespace:__sanitizer	file:
IOCTL_CYGETTHRESH	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_CYGETTHRESH = CYGETTHRESH;$/;"	m	namespace:__sanitizer	file:
IOCTL_CYGETTIMEOUT	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_CYGETTIMEOUT = CYGETTIMEOUT;$/;"	m	namespace:__sanitizer	file:
IOCTL_CYSETDEFTHRESH	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_CYSETDEFTHRESH = CYSETDEFTHRESH;$/;"	m	namespace:__sanitizer	file:
IOCTL_CYSETDEFTIMEOUT	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_CYSETDEFTIMEOUT = CYSETDEFTIMEOUT;$/;"	m	namespace:__sanitizer	file:
IOCTL_CYSETTHRESH	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_CYSETTHRESH = CYSETTHRESH;$/;"	m	namespace:__sanitizer	file:
IOCTL_CYSETTIMEOUT	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_CYSETTIMEOUT = CYSETTIMEOUT;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCADDADDR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCADDADDR = DIOCADDADDR;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCADDALTQ	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCADDALTQ = DIOCADDALTQ;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCADDRULE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCADDRULE = DIOCADDRULE;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCADDSTATE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCADDSTATE = DIOCADDSTATE;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCADDSTATES	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCADDSTATES = DIOCADDSTATES;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCAWEDGE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCAWEDGE = DIOCAWEDGE;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCBEGINADDRS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCBEGINADDRS = DIOCBEGINADDRS;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCBSFLUSH	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCBSFLUSH = DIOCBSFLUSH;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCBSLIST	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCBSLIST = DIOCBSLIST;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCCACHESYNC	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCCACHESYNC = DIOCCACHESYNC;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCCHANGEADDR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCCHANGEADDR = DIOCCHANGEADDR;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCCHANGEALTQ	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCCHANGEALTQ = DIOCCHANGEALTQ;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCCHANGERULE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCCHANGERULE = DIOCCHANGERULE;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCCLRIFFLAG	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCCLRIFFLAG = DIOCCLRIFFLAG;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCCLRLABEL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCCLRLABEL = DIOCCLRLABEL;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCCLRRULECTRS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCCLRRULECTRS = DIOCCLRRULECTRS;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCCLRSRCNODES	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCCLRSRCNODES = DIOCCLRSRCNODES;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCCLRSTATES	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCCLRSTATES = DIOCCLRSTATES;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCCLRSTATUS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCCLRSTATUS = DIOCCLRSTATUS;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCDWEDGE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCDWEDGE = DIOCDWEDGE;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCEJECT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCEJECT = DIOCEJECT;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCGCACHE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCGCACHE = DIOCGCACHE;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCGDEFLABEL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCGDEFLABEL = DIOCGDEFLABEL;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCGDINFO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCGDINFO = DIOCGDINFO;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCGDISKINFO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCGDISKINFO = DIOCGDISKINFO;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCGETADDR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCGETADDR = DIOCGETADDR;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCGETADDRS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCGETADDRS = DIOCGETADDRS;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCGETALTQ	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCGETALTQ = DIOCGETALTQ;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCGETALTQS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCGETALTQS = DIOCGETALTQS;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCGETLIMIT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCGETLIMIT = DIOCGETLIMIT;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCGETQSTATS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCGETQSTATS = DIOCGETQSTATS;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCGETRULE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCGETRULE = DIOCGETRULE;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCGETRULES	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCGETRULES = DIOCGETRULES;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCGETRULESET	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCGETRULESET = DIOCGETRULESET;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCGETRULESETS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCGETRULESETS = DIOCGETRULESETS;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCGETSRCNODES	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCGETSRCNODES = DIOCGETSRCNODES;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCGETSTATE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCGETSTATE = DIOCGETSTATE;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCGETSTATES	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCGETSTATES = DIOCGETSTATES;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCGETSTATUS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCGETSTATUS = DIOCGETSTATUS;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCGETTIMEOUT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCGETTIMEOUT = DIOCGETTIMEOUT;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCGMEDIASIZE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCGMEDIASIZE = DIOCGMEDIASIZE;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCGSECTORSIZE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCGSECTORSIZE = DIOCGSECTORSIZE;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCGSTRATEGY	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCGSTRATEGY = DIOCGSTRATEGY;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCGWEDGEINFO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCGWEDGEINFO = DIOCGWEDGEINFO;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCIGETIFACES	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCIGETIFACES = DIOCIGETIFACES;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCKILLSRCNODES	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCKILLSRCNODES = DIOCKILLSRCNODES;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCKILLSTATES	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCKILLSTATES = DIOCKILLSTATES;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCKLABEL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCKLABEL = DIOCKLABEL;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCLOCK	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCLOCK = DIOCLOCK;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCLWEDGES	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCLWEDGES = DIOCLWEDGES;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCMWEDGES	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCMWEDGES = DIOCMWEDGES;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCNATLOOK	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCNATLOOK = DIOCNATLOOK;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCOSFPADD	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCOSFPADD = DIOCOSFPADD;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCOSFPFLUSH	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCOSFPFLUSH = DIOCOSFPFLUSH;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCOSFPGET	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCOSFPGET = DIOCOSFPGET;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCRADDADDRS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCRADDADDRS = DIOCRADDADDRS;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCRADDTABLES	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCRADDTABLES = DIOCRADDTABLES;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCRCLRADDRS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCRCLRADDRS = DIOCRCLRADDRS;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCRCLRASTATS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCRCLRASTATS = DIOCRCLRASTATS;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCRCLRTABLES	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCRCLRTABLES = DIOCRCLRTABLES;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCRCLRTSTATS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCRCLRTSTATS = DIOCRCLRTSTATS;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCRDELADDRS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCRDELADDRS = DIOCRDELADDRS;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCRDELTABLES	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCRDELTABLES = DIOCRDELTABLES;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCRFORMAT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCRFORMAT = DIOCRFORMAT;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCRGETADDRS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCRGETADDRS = DIOCRGETADDRS;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCRGETASTATS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCRGETASTATS = DIOCRGETASTATS;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCRGETTABLES	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCRGETTABLES = DIOCRGETTABLES;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCRGETTSTATS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCRGETTSTATS = DIOCRGETTSTATS;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCRINADEFINE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCRINADEFINE = DIOCRINADEFINE;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCRSETADDRS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCRSETADDRS = DIOCRSETADDRS;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCRSETTFLAGS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCRSETTFLAGS = DIOCRSETTFLAGS;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCRTSTADDRS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCRTSTADDRS = DIOCRTSTADDRS;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCSBAD	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCSBAD = DIOCSBAD;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCSCACHE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCSCACHE = DIOCSCACHE;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCSDINFO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCSDINFO = DIOCSDINFO;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCSETDEBUG	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCSETDEBUG = DIOCSETDEBUG;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCSETHOSTID	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCSETHOSTID = DIOCSETHOSTID;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCSETIFFLAG	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCSETIFFLAG = DIOCSETIFFLAG;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCSETLCK	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCSETLCK = DIOCSETLCK;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCSETLIMIT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCSETLIMIT = DIOCSETLIMIT;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCSETSTATUSIF	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCSETSTATUSIF = DIOCSETSTATUSIF;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCSETTIMEOUT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCSETTIMEOUT = DIOCSETTIMEOUT;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCSRETRIES	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCSRETRIES = DIOCSRETRIES;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCSSTEP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCSSTEP = DIOCSSTEP;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCSSTRATEGY	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCSSTRATEGY = DIOCSSTRATEGY;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCSTART	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCSTART = DIOCSTART;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCSTARTALTQ	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCSTARTALTQ = DIOCSTARTALTQ;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCSTOP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCSTOP = DIOCSTOP;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCSTOPALTQ	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCSTOPALTQ = DIOCSTOPALTQ;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCTUR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCTUR = DIOCTUR;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCWDINFO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCWDINFO = DIOCWDINFO;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCWFORMAT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCWFORMAT = DIOCWFORMAT;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCWLABEL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCWLABEL = DIOCWLABEL;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCXBEGIN	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCXBEGIN = DIOCXBEGIN;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCXCOMMIT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCXCOMMIT = DIOCXCOMMIT;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOCXROLLBACK	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOCXROLLBACK = DIOCXROLLBACK;$/;"	m	namespace:__sanitizer	file:
IOCTL_DIOSXDCMD	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DIOSXDCMD = DIOSXDCMD;$/;"	m	namespace:__sanitizer	file:
IOCTL_DMIO_SETFUNC	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DMIO_SETFUNC = DMIO_SETFUNC;$/;"	m	namespace:__sanitizer	file:
IOCTL_DMX_ADD_PID	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DMX_ADD_PID = DMX_ADD_PID;$/;"	m	namespace:__sanitizer	file:
IOCTL_DMX_GET_CAPS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DMX_GET_CAPS = DMX_GET_CAPS;$/;"	m	namespace:__sanitizer	file:
IOCTL_DMX_GET_STC	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DMX_GET_STC = DMX_GET_STC;$/;"	m	namespace:__sanitizer	file:
IOCTL_DMX_REMOVE_PID	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DMX_REMOVE_PID = DMX_REMOVE_PID;$/;"	m	namespace:__sanitizer	file:
IOCTL_DMX_SET_BUFFER_SIZE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DMX_SET_BUFFER_SIZE = DMX_SET_BUFFER_SIZE;$/;"	m	namespace:__sanitizer	file:
IOCTL_DMX_SET_FILTER	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DMX_SET_FILTER = DMX_SET_FILTER;$/;"	m	namespace:__sanitizer	file:
IOCTL_DMX_SET_PES_FILTER	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DMX_SET_PES_FILTER = DMX_SET_PES_FILTER;$/;"	m	namespace:__sanitizer	file:
IOCTL_DMX_SET_SOURCE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DMX_SET_SOURCE = DMX_SET_SOURCE;$/;"	m	namespace:__sanitizer	file:
IOCTL_DMX_START	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DMX_START = DMX_START;$/;"	m	namespace:__sanitizer	file:
IOCTL_DMX_STOP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DMX_STOP = DMX_STOP;$/;"	m	namespace:__sanitizer	file:
IOCTL_DRVCTLCOMMAND	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DRVCTLCOMMAND = DRVCTLCOMMAND;$/;"	m	namespace:__sanitizer	file:
IOCTL_DRVDETACHDEV	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DRVDETACHDEV = DRVDETACHDEV;$/;"	m	namespace:__sanitizer	file:
IOCTL_DRVGETEVENT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DRVGETEVENT = DRVGETEVENT;$/;"	m	namespace:__sanitizer	file:
IOCTL_DRVLISTDEV	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DRVLISTDEV = DRVLISTDEV;$/;"	m	namespace:__sanitizer	file:
IOCTL_DRVRESCANBUS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DRVRESCANBUS = DRVRESCANBUS;$/;"	m	namespace:__sanitizer	file:
IOCTL_DRVRESUMEDEV	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DRVRESUMEDEV = DRVRESUMEDEV;$/;"	m	namespace:__sanitizer	file:
IOCTL_DRVSUSPENDDEV	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DRVSUSPENDDEV = DRVSUSPENDDEV;$/;"	m	namespace:__sanitizer	file:
IOCTL_DVD_AUTH	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DVD_AUTH = DVD_AUTH;$/;"	m	namespace:__sanitizer	file:
IOCTL_DVD_READ_STRUCT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DVD_READ_STRUCT = DVD_READ_STRUCT;$/;"	m	namespace:__sanitizer	file:
IOCTL_DVD_WRITE_STRUCT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_DVD_WRITE_STRUCT = DVD_WRITE_STRUCT;$/;"	m	namespace:__sanitizer	file:
IOCTL_ENVSYS_GETDICTIONARY	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_ENVSYS_GETDICTIONARY = ENVSYS_GETDICTIONARY;$/;"	m	namespace:__sanitizer	file:
IOCTL_ENVSYS_GTREDATA	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_ENVSYS_GTREDATA = ENVSYS_GTREDATA;$/;"	m	namespace:__sanitizer	file:
IOCTL_ENVSYS_GTREINFO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_ENVSYS_GTREINFO = ENVSYS_GTREINFO;$/;"	m	namespace:__sanitizer	file:
IOCTL_ENVSYS_REMOVEPROPS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_ENVSYS_REMOVEPROPS = ENVSYS_REMOVEPROPS;$/;"	m	namespace:__sanitizer	file:
IOCTL_ENVSYS_SETDICTIONARY	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_ENVSYS_SETDICTIONARY = ENVSYS_SETDICTIONARY;$/;"	m	namespace:__sanitizer	file:
IOCTL_EQL_EMANCIPATE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_EQL_EMANCIPATE = EQL_EMANCIPATE;$/;"	m	namespace:__sanitizer	file:
IOCTL_EQL_ENSLAVE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_EQL_ENSLAVE = EQL_ENSLAVE;$/;"	m	namespace:__sanitizer	file:
IOCTL_EQL_GETMASTRCFG	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_EQL_GETMASTRCFG = EQL_GETMASTRCFG;$/;"	m	namespace:__sanitizer	file:
IOCTL_EQL_GETSLAVECFG	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_EQL_GETSLAVECFG = EQL_GETSLAVECFG;$/;"	m	namespace:__sanitizer	file:
IOCTL_EQL_SETMASTRCFG	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_EQL_SETMASTRCFG = EQL_SETMASTRCFG;$/;"	m	namespace:__sanitizer	file:
IOCTL_EQL_SETSLAVECFG	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_EQL_SETSLAVECFG = EQL_SETSLAVECFG;$/;"	m	namespace:__sanitizer	file:
IOCTL_EVIOCGABS	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_EVIOCGABS = EVIOCGABS(0);$/;"	m	namespace:__sanitizer	file:
IOCTL_EVIOCGBIT	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_EVIOCGBIT = EVIOCGBIT(0, 0);$/;"	m	namespace:__sanitizer	file:
IOCTL_EVIOCGEFFECTS	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_EVIOCGEFFECTS = EVIOCGEFFECTS;$/;"	m	namespace:__sanitizer	file:
IOCTL_EVIOCGID	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_EVIOCGID = EVIOCGID;$/;"	m	namespace:__sanitizer	file:
IOCTL_EVIOCGKEY	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_EVIOCGKEY = EVIOCGKEY(0);$/;"	m	namespace:__sanitizer	file:
IOCTL_EVIOCGKEYCODE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_EVIOCGKEYCODE = EVIOCGKEYCODE;$/;"	m	namespace:__sanitizer	file:
IOCTL_EVIOCGKEYCODE_V2	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_EVIOCGKEYCODE_V2 = EVIOCGKEYCODE_V2;$/;"	m	namespace:__sanitizer	file:
IOCTL_EVIOCGKEYCODE_V2	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_EVIOCGKEYCODE_V2 = IOCTL_NOT_PRESENT;$/;"	m	namespace:__sanitizer	file:
IOCTL_EVIOCGLED	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_EVIOCGLED = EVIOCGLED(0);$/;"	m	namespace:__sanitizer	file:
IOCTL_EVIOCGNAME	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_EVIOCGNAME = EVIOCGNAME(0);$/;"	m	namespace:__sanitizer	file:
IOCTL_EVIOCGPHYS	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_EVIOCGPHYS = EVIOCGPHYS(0);$/;"	m	namespace:__sanitizer	file:
IOCTL_EVIOCGPROP	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_EVIOCGPROP = EVIOCGPROP(0);$/;"	m	namespace:__sanitizer	file:
IOCTL_EVIOCGPROP	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_EVIOCGPROP = IOCTL_NOT_PRESENT;$/;"	m	namespace:__sanitizer	file:
IOCTL_EVIOCGRAB	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_EVIOCGRAB = EVIOCGRAB;$/;"	m	namespace:__sanitizer	file:
IOCTL_EVIOCGREP	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_EVIOCGREP = EVIOCGREP;$/;"	m	namespace:__sanitizer	file:
IOCTL_EVIOCGSND	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_EVIOCGSND = EVIOCGSND(0);$/;"	m	namespace:__sanitizer	file:
IOCTL_EVIOCGSW	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_EVIOCGSW = EVIOCGSW(0);$/;"	m	namespace:__sanitizer	file:
IOCTL_EVIOCGUNIQ	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_EVIOCGUNIQ = EVIOCGUNIQ(0);$/;"	m	namespace:__sanitizer	file:
IOCTL_EVIOCGVERSION	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_EVIOCGVERSION = EVIOCGVERSION;$/;"	m	namespace:__sanitizer	file:
IOCTL_EVIOCRMFF	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_EVIOCRMFF = EVIOCRMFF;$/;"	m	namespace:__sanitizer	file:
IOCTL_EVIOCSABS	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_EVIOCSABS = EVIOCSABS(0);$/;"	m	namespace:__sanitizer	file:
IOCTL_EVIOCSFF	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_EVIOCSFF = EVIOCSFF;$/;"	m	namespace:__sanitizer	file:
IOCTL_EVIOCSKEYCODE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_EVIOCSKEYCODE = EVIOCSKEYCODE;$/;"	m	namespace:__sanitizer	file:
IOCTL_EVIOCSKEYCODE_V2	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_EVIOCSKEYCODE_V2 = EVIOCSKEYCODE_V2;$/;"	m	namespace:__sanitizer	file:
IOCTL_EVIOCSKEYCODE_V2	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_EVIOCSKEYCODE_V2 = IOCTL_NOT_PRESENT;$/;"	m	namespace:__sanitizer	file:
IOCTL_EVIOCSREP	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_EVIOCSREP = EVIOCSREP;$/;"	m	namespace:__sanitizer	file:
IOCTL_FBIOGATTR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FBIOGATTR = FBIOGATTR;$/;"	m	namespace:__sanitizer	file:
IOCTL_FBIOGCURMAX	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FBIOGCURMAX = FBIOGCURMAX;$/;"	m	namespace:__sanitizer	file:
IOCTL_FBIOGCURPOS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FBIOGCURPOS = FBIOGCURPOS;$/;"	m	namespace:__sanitizer	file:
IOCTL_FBIOGCURSOR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FBIOGCURSOR = FBIOGCURSOR;$/;"	m	namespace:__sanitizer	file:
IOCTL_FBIOGETCMAP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FBIOGETCMAP = FBIOGETCMAP;$/;"	m	namespace:__sanitizer	file:
IOCTL_FBIOGTYPE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FBIOGTYPE = FBIOGTYPE;$/;"	m	namespace:__sanitizer	file:
IOCTL_FBIOGVIDEO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FBIOGVIDEO = FBIOGVIDEO;$/;"	m	namespace:__sanitizer	file:
IOCTL_FBIOPUTCMAP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FBIOPUTCMAP = FBIOPUTCMAP;$/;"	m	namespace:__sanitizer	file:
IOCTL_FBIOSCURPOS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FBIOSCURPOS = FBIOSCURPOS;$/;"	m	namespace:__sanitizer	file:
IOCTL_FBIOSCURSOR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FBIOSCURSOR = FBIOSCURSOR;$/;"	m	namespace:__sanitizer	file:
IOCTL_FBIOSVIDEO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FBIOSVIDEO = FBIOSVIDEO;$/;"	m	namespace:__sanitizer	file:
IOCTL_FDCLRPRM	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_FDCLRPRM = FDCLRPRM;$/;"	m	namespace:__sanitizer	file:
IOCTL_FDDEFPRM	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_FDDEFPRM = FDDEFPRM;$/;"	m	namespace:__sanitizer	file:
IOCTL_FDFLUSH	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_FDFLUSH = FDFLUSH;$/;"	m	namespace:__sanitizer	file:
IOCTL_FDFMTBEG	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_FDFMTBEG = FDFMTBEG;$/;"	m	namespace:__sanitizer	file:
IOCTL_FDFMTEND	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_FDFMTEND = FDFMTEND;$/;"	m	namespace:__sanitizer	file:
IOCTL_FDFMTTRK	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_FDFMTTRK = FDFMTTRK;$/;"	m	namespace:__sanitizer	file:
IOCTL_FDGETDRVPRM	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_FDGETDRVPRM = FDGETDRVPRM;$/;"	m	namespace:__sanitizer	file:
IOCTL_FDGETDRVSTAT	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_FDGETDRVSTAT = FDGETDRVSTAT;$/;"	m	namespace:__sanitizer	file:
IOCTL_FDGETDRVTYP	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_FDGETDRVTYP = FDGETDRVTYP;$/;"	m	namespace:__sanitizer	file:
IOCTL_FDGETFDCSTAT	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_FDGETFDCSTAT = FDGETFDCSTAT;$/;"	m	namespace:__sanitizer	file:
IOCTL_FDGETMAXERRS	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_FDGETMAXERRS = FDGETMAXERRS;$/;"	m	namespace:__sanitizer	file:
IOCTL_FDGETPRM	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_FDGETPRM = FDGETPRM;$/;"	m	namespace:__sanitizer	file:
IOCTL_FDIOCFORMAT_TRACK	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FDIOCFORMAT_TRACK = FDIOCFORMAT_TRACK;$/;"	m	namespace:__sanitizer	file:
IOCTL_FDIOCGETFORMAT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FDIOCGETFORMAT = FDIOCGETFORMAT;$/;"	m	namespace:__sanitizer	file:
IOCTL_FDIOCGETOPTS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FDIOCGETOPTS = FDIOCGETOPTS;$/;"	m	namespace:__sanitizer	file:
IOCTL_FDIOCSETFORMAT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FDIOCSETFORMAT = FDIOCSETFORMAT;$/;"	m	namespace:__sanitizer	file:
IOCTL_FDIOCSETOPTS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FDIOCSETOPTS = FDIOCSETOPTS;$/;"	m	namespace:__sanitizer	file:
IOCTL_FDMSGOFF	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_FDMSGOFF = FDMSGOFF;$/;"	m	namespace:__sanitizer	file:
IOCTL_FDMSGON	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_FDMSGON = FDMSGON;$/;"	m	namespace:__sanitizer	file:
IOCTL_FDPOLLDRVSTAT	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_FDPOLLDRVSTAT = FDPOLLDRVSTAT;$/;"	m	namespace:__sanitizer	file:
IOCTL_FDRAWCMD	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_FDRAWCMD = FDRAWCMD;$/;"	m	namespace:__sanitizer	file:
IOCTL_FDRESET	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_FDRESET = FDRESET;$/;"	m	namespace:__sanitizer	file:
IOCTL_FDSETDRVPRM	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_FDSETDRVPRM = FDSETDRVPRM;$/;"	m	namespace:__sanitizer	file:
IOCTL_FDSETEMSGTRESH	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_FDSETEMSGTRESH = FDSETEMSGTRESH;$/;"	m	namespace:__sanitizer	file:
IOCTL_FDSETMAXERRS	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_FDSETMAXERRS = FDSETMAXERRS;$/;"	m	namespace:__sanitizer	file:
IOCTL_FDSETPRM	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_FDSETPRM = FDSETPRM;$/;"	m	namespace:__sanitizer	file:
IOCTL_FDTWADDLE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_FDTWADDLE = FDTWADDLE;$/;"	m	namespace:__sanitizer	file:
IOCTL_FDWERRORCLR	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_FDWERRORCLR = FDWERRORCLR;$/;"	m	namespace:__sanitizer	file:
IOCTL_FDWERRORGET	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_FDWERRORGET = FDWERRORGET;$/;"	m	namespace:__sanitizer	file:
IOCTL_FE_DISEQC_RECV_SLAVE_REPLY	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FE_DISEQC_RECV_SLAVE_REPLY = FE_DISEQC_RECV_SLAVE_REPLY;$/;"	m	namespace:__sanitizer	file:
IOCTL_FE_DISEQC_RESET_OVERLOAD	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FE_DISEQC_RESET_OVERLOAD = FE_DISEQC_RESET_OVERLOAD;$/;"	m	namespace:__sanitizer	file:
IOCTL_FE_DISEQC_SEND_BURST	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FE_DISEQC_SEND_BURST = FE_DISEQC_SEND_BURST;$/;"	m	namespace:__sanitizer	file:
IOCTL_FE_DISEQC_SEND_MASTER_CMD	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FE_DISEQC_SEND_MASTER_CMD = FE_DISEQC_SEND_MASTER_CMD;$/;"	m	namespace:__sanitizer	file:
IOCTL_FE_DISHNETWORK_SEND_LEGACY_CMD	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FE_DISHNETWORK_SEND_LEGACY_CMD = FE_DISHNETWORK_SEND_LEGACY_CMD;$/;"	m	namespace:__sanitizer	file:
IOCTL_FE_ENABLE_HIGH_LNB_VOLTAGE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FE_ENABLE_HIGH_LNB_VOLTAGE = FE_ENABLE_HIGH_LNB_VOLTAGE;$/;"	m	namespace:__sanitizer	file:
IOCTL_FE_GET_EVENT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FE_GET_EVENT = FE_GET_EVENT;$/;"	m	namespace:__sanitizer	file:
IOCTL_FE_GET_FRONTEND	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FE_GET_FRONTEND = FE_GET_FRONTEND;$/;"	m	namespace:__sanitizer	file:
IOCTL_FE_GET_INFO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FE_GET_INFO = FE_GET_INFO;$/;"	m	namespace:__sanitizer	file:
IOCTL_FE_READ_BER	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FE_READ_BER = FE_READ_BER;$/;"	m	namespace:__sanitizer	file:
IOCTL_FE_READ_SIGNAL_STRENGTH	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FE_READ_SIGNAL_STRENGTH = FE_READ_SIGNAL_STRENGTH;$/;"	m	namespace:__sanitizer	file:
IOCTL_FE_READ_SNR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FE_READ_SNR = FE_READ_SNR;$/;"	m	namespace:__sanitizer	file:
IOCTL_FE_READ_STATUS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FE_READ_STATUS = FE_READ_STATUS;$/;"	m	namespace:__sanitizer	file:
IOCTL_FE_READ_UNCORRECTED_BLOCKS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FE_READ_UNCORRECTED_BLOCKS = FE_READ_UNCORRECTED_BLOCKS;$/;"	m	namespace:__sanitizer	file:
IOCTL_FE_SET_FRONTEND	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FE_SET_FRONTEND = FE_SET_FRONTEND;$/;"	m	namespace:__sanitizer	file:
IOCTL_FE_SET_FRONTEND_TUNE_MODE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FE_SET_FRONTEND_TUNE_MODE = FE_SET_FRONTEND_TUNE_MODE;$/;"	m	namespace:__sanitizer	file:
IOCTL_FE_SET_TONE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FE_SET_TONE = FE_SET_TONE;$/;"	m	namespace:__sanitizer	file:
IOCTL_FE_SET_VOLTAGE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FE_SET_VOLTAGE = FE_SET_VOLTAGE;$/;"	m	namespace:__sanitizer	file:
IOCTL_FIFOQ_CONFIG	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FIFOQ_CONFIG = FIFOQ_CONFIG;$/;"	m	namespace:__sanitizer	file:
IOCTL_FIFOQ_DISABLE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FIFOQ_DISABLE = FIFOQ_DISABLE;$/;"	m	namespace:__sanitizer	file:
IOCTL_FIFOQ_ENABLE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FIFOQ_ENABLE = FIFOQ_ENABLE;$/;"	m	namespace:__sanitizer	file:
IOCTL_FIFOQ_GETSTATS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FIFOQ_GETSTATS = FIFOQ_GETSTATS;$/;"	m	namespace:__sanitizer	file:
IOCTL_FIFOQ_IF_ATTACH	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FIFOQ_IF_ATTACH = FIFOQ_IF_ATTACH;$/;"	m	namespace:__sanitizer	file:
IOCTL_FIFOQ_IF_DETACH	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FIFOQ_IF_DETACH = FIFOQ_IF_DETACH;$/;"	m	namespace:__sanitizer	file:
IOCTL_FILEMON_SET_FD	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FILEMON_SET_FD = FILEMON_SET_FD;$/;"	m	namespace:__sanitizer	file:
IOCTL_FILEMON_SET_PID	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FILEMON_SET_PID = FILEMON_SET_PID;$/;"	m	namespace:__sanitizer	file:
IOCTL_FIOASYNC	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FIOASYNC = FIOASYNC;$/;"	m	namespace:__sanitizer	file:
IOCTL_FIOASYNC	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_FIOASYNC = FIOASYNC;$/;"	m	namespace:__sanitizer	file:
IOCTL_FIOASYNC	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned IOCTL_FIOASYNC = FIOASYNC;$/;"	m	namespace:__sanitizer	file:
IOCTL_FIOCLEX	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FIOCLEX = FIOCLEX;$/;"	m	namespace:__sanitizer	file:
IOCTL_FIOCLEX	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_FIOCLEX = FIOCLEX;$/;"	m	namespace:__sanitizer	file:
IOCTL_FIOCLEX	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned IOCTL_FIOCLEX = FIOCLEX;$/;"	m	namespace:__sanitizer	file:
IOCTL_FIOGETBMAP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FIOGETBMAP = FIOGETBMAP;$/;"	m	namespace:__sanitizer	file:
IOCTL_FIOGETOWN	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FIOGETOWN = FIOGETOWN;$/;"	m	namespace:__sanitizer	file:
IOCTL_FIOGETOWN	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_FIOGETOWN = FIOGETOWN;$/;"	m	namespace:__sanitizer	file:
IOCTL_FIOGETOWN	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned IOCTL_FIOGETOWN = FIOGETOWN;$/;"	m	namespace:__sanitizer	file:
IOCTL_FIONBIO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FIONBIO = FIONBIO;$/;"	m	namespace:__sanitizer	file:
IOCTL_FIONBIO	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_FIONBIO = FIONBIO;$/;"	m	namespace:__sanitizer	file:
IOCTL_FIONBIO	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned IOCTL_FIONBIO = FIONBIO;$/;"	m	namespace:__sanitizer	file:
IOCTL_FIONCLEX	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FIONCLEX = FIONCLEX;$/;"	m	namespace:__sanitizer	file:
IOCTL_FIONCLEX	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_FIONCLEX = FIONCLEX;$/;"	m	namespace:__sanitizer	file:
IOCTL_FIONCLEX	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned IOCTL_FIONCLEX = FIONCLEX;$/;"	m	namespace:__sanitizer	file:
IOCTL_FIONREAD	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FIONREAD = FIONREAD;$/;"	m	namespace:__sanitizer	file:
IOCTL_FIONSPACE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FIONSPACE = FIONSPACE;$/;"	m	namespace:__sanitizer	file:
IOCTL_FIONWRITE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FIONWRITE = FIONWRITE;$/;"	m	namespace:__sanitizer	file:
IOCTL_FIOSETOWN	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FIOSETOWN = FIOSETOWN;$/;"	m	namespace:__sanitizer	file:
IOCTL_FIOSETOWN	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_FIOSETOWN = FIOSETOWN;$/;"	m	namespace:__sanitizer	file:
IOCTL_FIOSETOWN	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned IOCTL_FIOSETOWN = FIOSETOWN;$/;"	m	namespace:__sanitizer	file:
IOCTL_FSSIOCCLR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FSSIOCCLR = FSSIOCCLR;$/;"	m	namespace:__sanitizer	file:
IOCTL_FSSIOCGET	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FSSIOCGET = FSSIOCGET;$/;"	m	namespace:__sanitizer	file:
IOCTL_FSSIOCSET	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FSSIOCSET = FSSIOCSET;$/;"	m	namespace:__sanitizer	file:
IOCTL_FSSIOFGET	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FSSIOFGET = FSSIOFGET;$/;"	m	namespace:__sanitizer	file:
IOCTL_FSSIOFSET	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_FSSIOFSET = FSSIOFSET;$/;"	m	namespace:__sanitizer	file:
IOCTL_FS_IOC_GETFLAGS	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_FS_IOC_GETFLAGS = FS_IOC_GETFLAGS;$/;"	m	namespace:__sanitizer	file:
IOCTL_FS_IOC_GETVERSION	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_FS_IOC_GETVERSION = FS_IOC_GETVERSION;$/;"	m	namespace:__sanitizer	file:
IOCTL_FS_IOC_SETFLAGS	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_FS_IOC_SETFLAGS = FS_IOC_SETFLAGS;$/;"	m	namespace:__sanitizer	file:
IOCTL_FS_IOC_SETVERSION	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_FS_IOC_SETVERSION = FS_IOC_SETVERSION;$/;"	m	namespace:__sanitizer	file:
IOCTL_GDT_IOCTL_CTRCNT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_GDT_IOCTL_CTRCNT = GDT_IOCTL_CTRCNT;$/;"	m	namespace:__sanitizer	file:
IOCTL_GDT_IOCTL_CTRTYPE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_GDT_IOCTL_CTRTYPE = GDT_IOCTL_CTRTYPE;$/;"	m	namespace:__sanitizer	file:
IOCTL_GDT_IOCTL_DRVERS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_GDT_IOCTL_DRVERS = GDT_IOCTL_DRVERS;$/;"	m	namespace:__sanitizer	file:
IOCTL_GDT_IOCTL_EVENT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_GDT_IOCTL_EVENT = GDT_IOCTL_EVENT;$/;"	m	namespace:__sanitizer	file:
IOCTL_GDT_IOCTL_GENERAL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_GDT_IOCTL_GENERAL = GDT_IOCTL_GENERAL;$/;"	m	namespace:__sanitizer	file:
IOCTL_GDT_IOCTL_OSVERS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_GDT_IOCTL_OSVERS = GDT_IOCTL_OSVERS;$/;"	m	namespace:__sanitizer	file:
IOCTL_GDT_IOCTL_RESCAN	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_GDT_IOCTL_RESCAN = GDT_IOCTL_RESCAN;$/;"	m	namespace:__sanitizer	file:
IOCTL_GDT_IOCTL_STATIST	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_GDT_IOCTL_STATIST = GDT_IOCTL_STATIST;$/;"	m	namespace:__sanitizer	file:
IOCTL_GIO_CMAP	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_GIO_CMAP = GIO_CMAP;$/;"	m	namespace:__sanitizer	file:
IOCTL_GIO_FONT	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_GIO_FONT = GIO_FONT;$/;"	m	namespace:__sanitizer	file:
IOCTL_GIO_SCRNMAP	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_GIO_SCRNMAP = GIO_SCRNMAP;$/;"	m	namespace:__sanitizer	file:
IOCTL_GIO_UNIMAP	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_GIO_UNIMAP = GIO_UNIMAP;$/;"	m	namespace:__sanitizer	file:
IOCTL_GIO_UNISCRNMAP	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_GIO_UNISCRNMAP = GIO_UNISCRNMAP;$/;"	m	namespace:__sanitizer	file:
IOCTL_GPIOATTACH	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_GPIOATTACH = GPIOATTACH;$/;"	m	namespace:__sanitizer	file:
IOCTL_GPIOINFO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_GPIOINFO = GPIOINFO;$/;"	m	namespace:__sanitizer	file:
IOCTL_GPIOREAD	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_GPIOREAD = GPIOREAD;$/;"	m	namespace:__sanitizer	file:
IOCTL_GPIOSET	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_GPIOSET = GPIOSET;$/;"	m	namespace:__sanitizer	file:
IOCTL_GPIOTOGGLE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_GPIOTOGGLE = GPIOTOGGLE;$/;"	m	namespace:__sanitizer	file:
IOCTL_GPIOUNSET	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_GPIOUNSET = GPIOUNSET;$/;"	m	namespace:__sanitizer	file:
IOCTL_GPIOWRITE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_GPIOWRITE = GPIOWRITE;$/;"	m	namespace:__sanitizer	file:
IOCTL_GREDSOCK	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_GREDSOCK = GREDSOCK;$/;"	m	namespace:__sanitizer	file:
IOCTL_GREGADDRD	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_GREGADDRD = GREGADDRD;$/;"	m	namespace:__sanitizer	file:
IOCTL_GREGADDRS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_GREGADDRS = GREGADDRS;$/;"	m	namespace:__sanitizer	file:
IOCTL_GREGPROTO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_GREGPROTO = GREGPROTO;$/;"	m	namespace:__sanitizer	file:
IOCTL_GRESADDRD	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_GRESADDRD = GRESADDRD;$/;"	m	namespace:__sanitizer	file:
IOCTL_GRESADDRS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_GRESADDRS = GRESADDRS;$/;"	m	namespace:__sanitizer	file:
IOCTL_GRESPROTO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_GRESPROTO = GRESPROTO;$/;"	m	namespace:__sanitizer	file:
IOCTL_GRESSOCK	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_GRESSOCK = GRESSOCK;$/;"	m	namespace:__sanitizer	file:
IOCTL_HDAUDIO_AFG_CODEC_INFO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_HDAUDIO_AFG_CODEC_INFO = HDAUDIO_AFG_CODEC_INFO;$/;"	m	namespace:__sanitizer	file:
IOCTL_HDAUDIO_AFG_WIDGET_INFO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_HDAUDIO_AFG_WIDGET_INFO = HDAUDIO_AFG_WIDGET_INFO;$/;"	m	namespace:__sanitizer	file:
IOCTL_HDAUDIO_FGRP_CODEC_INFO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_HDAUDIO_FGRP_CODEC_INFO = HDAUDIO_FGRP_CODEC_INFO;$/;"	m	namespace:__sanitizer	file:
IOCTL_HDAUDIO_FGRP_GETCONFIG	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_HDAUDIO_FGRP_GETCONFIG = HDAUDIO_FGRP_GETCONFIG;$/;"	m	namespace:__sanitizer	file:
IOCTL_HDAUDIO_FGRP_INFO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_HDAUDIO_FGRP_INFO = HDAUDIO_FGRP_INFO;$/;"	m	namespace:__sanitizer	file:
IOCTL_HDAUDIO_FGRP_SETCONFIG	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_HDAUDIO_FGRP_SETCONFIG = HDAUDIO_FGRP_SETCONFIG;$/;"	m	namespace:__sanitizer	file:
IOCTL_HDAUDIO_FGRP_WIDGET_INFO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_HDAUDIO_FGRP_WIDGET_INFO = HDAUDIO_FGRP_WIDGET_INFO;$/;"	m	namespace:__sanitizer	file:
IOCTL_HDIO_DRIVE_CMD	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_HDIO_DRIVE_CMD = HDIO_DRIVE_CMD;$/;"	m	namespace:__sanitizer	file:
IOCTL_HDIO_GETGEO	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_HDIO_GETGEO = HDIO_GETGEO;$/;"	m	namespace:__sanitizer	file:
IOCTL_HDIO_GET_32BIT	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_HDIO_GET_32BIT = HDIO_GET_32BIT;$/;"	m	namespace:__sanitizer	file:
IOCTL_HDIO_GET_DMA	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_HDIO_GET_DMA = HDIO_GET_DMA;$/;"	m	namespace:__sanitizer	file:
IOCTL_HDIO_GET_IDENTITY	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_HDIO_GET_IDENTITY = HDIO_GET_IDENTITY;$/;"	m	namespace:__sanitizer	file:
IOCTL_HDIO_GET_KEEPSETTINGS	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_HDIO_GET_KEEPSETTINGS = HDIO_GET_KEEPSETTINGS;$/;"	m	namespace:__sanitizer	file:
IOCTL_HDIO_GET_MULTCOUNT	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_HDIO_GET_MULTCOUNT = HDIO_GET_MULTCOUNT;$/;"	m	namespace:__sanitizer	file:
IOCTL_HDIO_GET_NOWERR	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_HDIO_GET_NOWERR = HDIO_GET_NOWERR;$/;"	m	namespace:__sanitizer	file:
IOCTL_HDIO_GET_UNMASKINTR	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_HDIO_GET_UNMASKINTR = HDIO_GET_UNMASKINTR;$/;"	m	namespace:__sanitizer	file:
IOCTL_HDIO_SET_32BIT	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_HDIO_SET_32BIT = HDIO_SET_32BIT;$/;"	m	namespace:__sanitizer	file:
IOCTL_HDIO_SET_DMA	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_HDIO_SET_DMA = HDIO_SET_DMA;$/;"	m	namespace:__sanitizer	file:
IOCTL_HDIO_SET_KEEPSETTINGS	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_HDIO_SET_KEEPSETTINGS = HDIO_SET_KEEPSETTINGS;$/;"	m	namespace:__sanitizer	file:
IOCTL_HDIO_SET_MULTCOUNT	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_HDIO_SET_MULTCOUNT = HDIO_SET_MULTCOUNT;$/;"	m	namespace:__sanitizer	file:
IOCTL_HDIO_SET_NOWERR	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_HDIO_SET_NOWERR = HDIO_SET_NOWERR;$/;"	m	namespace:__sanitizer	file:
IOCTL_HDIO_SET_UNMASKINTR	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_HDIO_SET_UNMASKINTR = HDIO_SET_UNMASKINTR;$/;"	m	namespace:__sanitizer	file:
IOCTL_HFSC_ADD_CLASS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_HFSC_ADD_CLASS = HFSC_ADD_CLASS;$/;"	m	namespace:__sanitizer	file:
IOCTL_HFSC_ADD_FILTER	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_HFSC_ADD_FILTER = HFSC_ADD_FILTER;$/;"	m	namespace:__sanitizer	file:
IOCTL_HFSC_CLEAR_HIERARCHY	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_HFSC_CLEAR_HIERARCHY = HFSC_CLEAR_HIERARCHY;$/;"	m	namespace:__sanitizer	file:
IOCTL_HFSC_DEL_CLASS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_HFSC_DEL_CLASS = HFSC_DEL_CLASS;$/;"	m	namespace:__sanitizer	file:
IOCTL_HFSC_DEL_FILTER	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_HFSC_DEL_FILTER = HFSC_DEL_FILTER;$/;"	m	namespace:__sanitizer	file:
IOCTL_HFSC_DISABLE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_HFSC_DISABLE = HFSC_DISABLE;$/;"	m	namespace:__sanitizer	file:
IOCTL_HFSC_ENABLE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_HFSC_ENABLE = HFSC_ENABLE;$/;"	m	namespace:__sanitizer	file:
IOCTL_HFSC_GETSTATS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_HFSC_GETSTATS = HFSC_GETSTATS;$/;"	m	namespace:__sanitizer	file:
IOCTL_HFSC_IF_ATTACH	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_HFSC_IF_ATTACH = HFSC_IF_ATTACH;$/;"	m	namespace:__sanitizer	file:
IOCTL_HFSC_IF_DETACH	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_HFSC_IF_DETACH = HFSC_IF_DETACH;$/;"	m	namespace:__sanitizer	file:
IOCTL_HFSC_MOD_CLASS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_HFSC_MOD_CLASS = HFSC_MOD_CLASS;$/;"	m	namespace:__sanitizer	file:
IOCTL_HPCFBIO_GCONF	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_HPCFBIO_GCONF = HPCFBIO_GCONF;$/;"	m	namespace:__sanitizer	file:
IOCTL_HPCFBIO_GDSPCONF	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_HPCFBIO_GDSPCONF = HPCFBIO_GDSPCONF;$/;"	m	namespace:__sanitizer	file:
IOCTL_HPCFBIO_GOP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_HPCFBIO_GOP = HPCFBIO_GOP;$/;"	m	namespace:__sanitizer	file:
IOCTL_HPCFBIO_SCONF	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_HPCFBIO_SCONF = HPCFBIO_SCONF;$/;"	m	namespace:__sanitizer	file:
IOCTL_HPCFBIO_SDSPCONF	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_HPCFBIO_SDSPCONF = HPCFBIO_SDSPCONF;$/;"	m	namespace:__sanitizer	file:
IOCTL_HPCFBIO_SOP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_HPCFBIO_SOP = HPCFBIO_SOP;$/;"	m	namespace:__sanitizer	file:
IOCTL_IOC_CPU_GETCOUNT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_IOC_CPU_GETCOUNT = IOC_CPU_GETCOUNT;$/;"	m	namespace:__sanitizer	file:
IOCTL_IOC_CPU_GETSTATE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_IOC_CPU_GETSTATE = IOC_CPU_GETSTATE;$/;"	m	namespace:__sanitizer	file:
IOCTL_IOC_CPU_MAPID	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_IOC_CPU_MAPID = IOC_CPU_MAPID;$/;"	m	namespace:__sanitizer	file:
IOCTL_IOC_CPU_SETSTATE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_IOC_CPU_SETSTATE = IOC_CPU_SETSTATE;$/;"	m	namespace:__sanitizer	file:
IOCTL_IOC_CPU_UCODE_APPLY	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_IOC_CPU_UCODE_APPLY = IOC_CPU_UCODE_APPLY;$/;"	m	namespace:__sanitizer	file:
IOCTL_IOC_CPU_UCODE_GET_VERSION	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_IOC_CPU_UCODE_GET_VERSION = IOC_CPU_UCODE_GET_VERSION;$/;"	m	namespace:__sanitizer	file:
IOCTL_IOC_LOCKSTAT_DISABLE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_IOC_LOCKSTAT_DISABLE = IOC_LOCKSTAT_DISABLE;$/;"	m	namespace:__sanitizer	file:
IOCTL_IOC_LOCKSTAT_ENABLE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_IOC_LOCKSTAT_ENABLE = IOC_LOCKSTAT_ENABLE;$/;"	m	namespace:__sanitizer	file:
IOCTL_IOC_LOCKSTAT_GVERSION	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_IOC_LOCKSTAT_GVERSION = IOC_LOCKSTAT_GVERSION;$/;"	m	namespace:__sanitizer	file:
IOCTL_IOC_NPF_CONN_LOOKUP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_IOC_NPF_CONN_LOOKUP = IOC_NPF_CONN_LOOKUP;$/;"	m	namespace:__sanitizer	file:
IOCTL_IOC_NPF_LOAD	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_IOC_NPF_LOAD = IOC_NPF_LOAD;$/;"	m	namespace:__sanitizer	file:
IOCTL_IOC_NPF_RULE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_IOC_NPF_RULE = IOC_NPF_RULE;$/;"	m	namespace:__sanitizer	file:
IOCTL_IOC_NPF_SAVE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_IOC_NPF_SAVE = IOC_NPF_SAVE;$/;"	m	namespace:__sanitizer	file:
IOCTL_IOC_NPF_STATS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_IOC_NPF_STATS = IOC_NPF_STATS;$/;"	m	namespace:__sanitizer	file:
IOCTL_IOC_NPF_SWITCH	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_IOC_NPF_SWITCH = IOC_NPF_SWITCH;$/;"	m	namespace:__sanitizer	file:
IOCTL_IOC_NPF_TABLE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_IOC_NPF_TABLE = IOC_NPF_TABLE;$/;"	m	namespace:__sanitizer	file:
IOCTL_IOC_NPF_VERSION	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_IOC_NPF_VERSION = IOC_NPF_VERSION;$/;"	m	namespace:__sanitizer	file:
IOCTL_IOPIOCGLCT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_IOPIOCGLCT = IOPIOCGLCT;$/;"	m	namespace:__sanitizer	file:
IOCTL_IOPIOCGSTATUS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_IOPIOCGSTATUS = IOPIOCGSTATUS;$/;"	m	namespace:__sanitizer	file:
IOCTL_IOPIOCGTIDMAP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_IOPIOCGTIDMAP = IOPIOCGTIDMAP;$/;"	m	namespace:__sanitizer	file:
IOCTL_IOPIOCPT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_IOPIOCPT = IOPIOCPT;$/;"	m	namespace:__sanitizer	file:
IOCTL_IOPIOCRECONFIG	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_IOPIOCRECONFIG = IOPIOCRECONFIG;$/;"	m	namespace:__sanitizer	file:
IOCTL_IRDA_GET_SPEEDMASK	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_IRDA_GET_SPEEDMASK = IRDA_GET_SPEEDMASK;$/;"	m	namespace:__sanitizer	file:
IOCTL_IRDA_GET_TURNAROUNDMASK	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_IRDA_GET_TURNAROUNDMASK = IRDA_GET_TURNAROUNDMASK;$/;"	m	namespace:__sanitizer	file:
IOCTL_IRDA_RESET_PARAMS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_IRDA_RESET_PARAMS = IRDA_RESET_PARAMS;$/;"	m	namespace:__sanitizer	file:
IOCTL_IRDA_SET_PARAMS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_IRDA_SET_PARAMS = IRDA_SET_PARAMS;$/;"	m	namespace:__sanitizer	file:
IOCTL_IRFRAMETTY_GET_DEVICE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_IRFRAMETTY_GET_DEVICE = IRFRAMETTY_GET_DEVICE;$/;"	m	namespace:__sanitizer	file:
IOCTL_IRFRAMETTY_GET_DONGLE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_IRFRAMETTY_GET_DONGLE = IRFRAMETTY_GET_DONGLE;$/;"	m	namespace:__sanitizer	file:
IOCTL_IRFRAMETTY_SET_DONGLE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_IRFRAMETTY_SET_DONGLE = IRFRAMETTY_SET_DONGLE;$/;"	m	namespace:__sanitizer	file:
IOCTL_ISCSI_ADD_CONNECTION	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_ISCSI_ADD_CONNECTION = ISCSI_ADD_CONNECTION;$/;"	m	namespace:__sanitizer	file:
IOCTL_ISCSI_CONNECTION_STATUS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_ISCSI_CONNECTION_STATUS = ISCSI_CONNECTION_STATUS;$/;"	m	namespace:__sanitizer	file:
IOCTL_ISCSI_DEREGISTER_EVENT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_ISCSI_DEREGISTER_EVENT = ISCSI_DEREGISTER_EVENT;$/;"	m	namespace:__sanitizer	file:
IOCTL_ISCSI_GET_VERSION	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_ISCSI_GET_VERSION = ISCSI_GET_VERSION;$/;"	m	namespace:__sanitizer	file:
IOCTL_ISCSI_IO_COMMAND	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_ISCSI_IO_COMMAND = ISCSI_IO_COMMAND;$/;"	m	namespace:__sanitizer	file:
IOCTL_ISCSI_LOGIN	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_ISCSI_LOGIN = ISCSI_LOGIN;$/;"	m	namespace:__sanitizer	file:
IOCTL_ISCSI_LOGOUT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_ISCSI_LOGOUT = ISCSI_LOGOUT;$/;"	m	namespace:__sanitizer	file:
IOCTL_ISCSI_POLL_EVENT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_ISCSI_POLL_EVENT = ISCSI_POLL_EVENT;$/;"	m	namespace:__sanitizer	file:
IOCTL_ISCSI_REGISTER_EVENT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_ISCSI_REGISTER_EVENT = ISCSI_REGISTER_EVENT;$/;"	m	namespace:__sanitizer	file:
IOCTL_ISCSI_REMOVE_CONNECTION	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_ISCSI_REMOVE_CONNECTION = ISCSI_REMOVE_CONNECTION;$/;"	m	namespace:__sanitizer	file:
IOCTL_ISCSI_RESTORE_CONNECTION	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_ISCSI_RESTORE_CONNECTION = ISCSI_RESTORE_CONNECTION;$/;"	m	namespace:__sanitizer	file:
IOCTL_ISCSI_SEND_TARGETS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_ISCSI_SEND_TARGETS = ISCSI_SEND_TARGETS;$/;"	m	namespace:__sanitizer	file:
IOCTL_ISCSI_SET_NODE_NAME	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_ISCSI_SET_NODE_NAME = ISCSI_SET_NODE_NAME;$/;"	m	namespace:__sanitizer	file:
IOCTL_ISCSI_WAIT_EVENT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_ISCSI_WAIT_EVENT = ISCSI_WAIT_EVENT;$/;"	m	namespace:__sanitizer	file:
IOCTL_ISP_CLR_STATS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_ISP_CLR_STATS = ISP_CLR_STATS;$/;"	m	namespace:__sanitizer	file:
IOCTL_ISP_FC_GETDINFO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_ISP_FC_GETDINFO = ISP_FC_GETDINFO;$/;"	m	namespace:__sanitizer	file:
IOCTL_ISP_FC_GETDLIST	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_ISP_FC_GETDLIST = ISP_FC_GETDLIST;$/;"	m	namespace:__sanitizer	file:
IOCTL_ISP_FC_GETHINFO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_ISP_FC_GETHINFO = ISP_FC_GETHINFO;$/;"	m	namespace:__sanitizer	file:
IOCTL_ISP_FC_LIP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_ISP_FC_LIP = ISP_FC_LIP;$/;"	m	namespace:__sanitizer	file:
IOCTL_ISP_FORCE_CRASH_DUMP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_ISP_FORCE_CRASH_DUMP = ISP_FORCE_CRASH_DUMP;$/;"	m	namespace:__sanitizer	file:
IOCTL_ISP_GETROLE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_ISP_GETROLE = ISP_GETROLE;$/;"	m	namespace:__sanitizer	file:
IOCTL_ISP_GET_FW_CRASH_DUMP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_ISP_GET_FW_CRASH_DUMP = ISP_GET_FW_CRASH_DUMP;$/;"	m	namespace:__sanitizer	file:
IOCTL_ISP_GET_STATS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_ISP_GET_STATS = ISP_GET_STATS;$/;"	m	namespace:__sanitizer	file:
IOCTL_ISP_RESCAN	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_ISP_RESCAN = ISP_RESCAN;$/;"	m	namespace:__sanitizer	file:
IOCTL_ISP_RESETHBA	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_ISP_RESETHBA = ISP_RESETHBA;$/;"	m	namespace:__sanitizer	file:
IOCTL_ISP_SDBLEV	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_ISP_SDBLEV = ISP_SDBLEV;$/;"	m	namespace:__sanitizer	file:
IOCTL_ISP_SETROLE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_ISP_SETROLE = ISP_SETROLE;$/;"	m	namespace:__sanitizer	file:
IOCTL_ISP_TSK_MGMT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_ISP_TSK_MGMT = ISP_TSK_MGMT;$/;"	m	namespace:__sanitizer	file:
IOCTL_ISV_CMD	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_ISV_CMD = ISV_CMD;$/;"	m	namespace:__sanitizer	file:
IOCTL_JOBS_ADD_CLASS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_JOBS_ADD_CLASS = JOBS_ADD_CLASS;$/;"	m	namespace:__sanitizer	file:
IOCTL_JOBS_ADD_FILTER	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_JOBS_ADD_FILTER = JOBS_ADD_FILTER;$/;"	m	namespace:__sanitizer	file:
IOCTL_JOBS_CLEAR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_JOBS_CLEAR = JOBS_CLEAR;$/;"	m	namespace:__sanitizer	file:
IOCTL_JOBS_DEL_CLASS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_JOBS_DEL_CLASS = JOBS_DEL_CLASS;$/;"	m	namespace:__sanitizer	file:
IOCTL_JOBS_DEL_FILTER	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_JOBS_DEL_FILTER = JOBS_DEL_FILTER;$/;"	m	namespace:__sanitizer	file:
IOCTL_JOBS_DISABLE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_JOBS_DISABLE = JOBS_DISABLE;$/;"	m	namespace:__sanitizer	file:
IOCTL_JOBS_ENABLE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_JOBS_ENABLE = JOBS_ENABLE;$/;"	m	namespace:__sanitizer	file:
IOCTL_JOBS_GETSTATS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_JOBS_GETSTATS = JOBS_GETSTATS;$/;"	m	namespace:__sanitizer	file:
IOCTL_JOBS_IF_ATTACH	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_JOBS_IF_ATTACH = JOBS_IF_ATTACH;$/;"	m	namespace:__sanitizer	file:
IOCTL_JOBS_IF_DETACH	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_JOBS_IF_DETACH = JOBS_IF_DETACH;$/;"	m	namespace:__sanitizer	file:
IOCTL_JOBS_MOD_CLASS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_JOBS_MOD_CLASS = JOBS_MOD_CLASS;$/;"	m	namespace:__sanitizer	file:
IOCTL_JOY_GETTIMEOUT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_JOY_GETTIMEOUT = JOY_GETTIMEOUT;$/;"	m	namespace:__sanitizer	file:
IOCTL_JOY_GET_X_OFFSET	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_JOY_GET_X_OFFSET = JOY_GET_X_OFFSET;$/;"	m	namespace:__sanitizer	file:
IOCTL_JOY_GET_Y_OFFSET	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_JOY_GET_Y_OFFSET = JOY_GET_Y_OFFSET;$/;"	m	namespace:__sanitizer	file:
IOCTL_JOY_SETTIMEOUT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_JOY_SETTIMEOUT = JOY_SETTIMEOUT;$/;"	m	namespace:__sanitizer	file:
IOCTL_JOY_SET_X_OFFSET	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_JOY_SET_X_OFFSET = JOY_SET_X_OFFSET;$/;"	m	namespace:__sanitizer	file:
IOCTL_JOY_SET_Y_OFFSET	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_JOY_SET_Y_OFFSET = JOY_SET_Y_OFFSET;$/;"	m	namespace:__sanitizer	file:
IOCTL_KDADDIO	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_KDADDIO = KDADDIO;$/;"	m	namespace:__sanitizer	file:
IOCTL_KDDELIO	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_KDDELIO = KDDELIO;$/;"	m	namespace:__sanitizer	file:
IOCTL_KDDISABIO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_KDDISABIO = KDDISABIO;$/;"	m	namespace:__sanitizer	file:
IOCTL_KDDISABIO	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_KDDISABIO = KDDISABIO;$/;"	m	namespace:__sanitizer	file:
IOCTL_KDENABIO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_KDENABIO = KDENABIO;$/;"	m	namespace:__sanitizer	file:
IOCTL_KDENABIO	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_KDENABIO = KDENABIO;$/;"	m	namespace:__sanitizer	file:
IOCTL_KDGETKBENT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_KDGETKBENT = KDGETKBENT;$/;"	m	namespace:__sanitizer	file:
IOCTL_KDGETKEYCODE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_KDGETKEYCODE = KDGETKEYCODE;$/;"	m	namespace:__sanitizer	file:
IOCTL_KDGETLED	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_KDGETLED = KDGETLED;$/;"	m	namespace:__sanitizer	file:
IOCTL_KDGETLED	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_KDGETLED = KDGETLED;$/;"	m	namespace:__sanitizer	file:
IOCTL_KDGETMODE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_KDGETMODE = KDGETMODE;$/;"	m	namespace:__sanitizer	file:
IOCTL_KDGKBDIACR	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_KDGKBDIACR = KDGKBDIACR;$/;"	m	namespace:__sanitizer	file:
IOCTL_KDGKBENT	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_KDGKBENT = KDGKBENT;$/;"	m	namespace:__sanitizer	file:
IOCTL_KDGKBLED	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_KDGKBLED = KDGKBLED;$/;"	m	namespace:__sanitizer	file:
IOCTL_KDGKBMETA	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_KDGKBMETA = KDGKBMETA;$/;"	m	namespace:__sanitizer	file:
IOCTL_KDGKBMODE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_KDGKBMODE = KDGKBMODE;$/;"	m	namespace:__sanitizer	file:
IOCTL_KDGKBMODE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_KDGKBMODE = KDGKBMODE;$/;"	m	namespace:__sanitizer	file:
IOCTL_KDGKBSENT	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_KDGKBSENT = KDGKBSENT;$/;"	m	namespace:__sanitizer	file:
IOCTL_KDGKBTYPE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_KDGKBTYPE = KDGKBTYPE;$/;"	m	namespace:__sanitizer	file:
IOCTL_KDGKBTYPE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_KDGKBTYPE = KDGKBTYPE;$/;"	m	namespace:__sanitizer	file:
IOCTL_KDMAPDISP	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_KDMAPDISP = KDMAPDISP;$/;"	m	namespace:__sanitizer	file:
IOCTL_KDMKTONE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_KDMKTONE = KDMKTONE;$/;"	m	namespace:__sanitizer	file:
IOCTL_KDMKTONE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_KDMKTONE = KDMKTONE;$/;"	m	namespace:__sanitizer	file:
IOCTL_KDSETKEYCODE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_KDSETKEYCODE = KDSETKEYCODE;$/;"	m	namespace:__sanitizer	file:
IOCTL_KDSETLED	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_KDSETLED = KDSETLED;$/;"	m	namespace:__sanitizer	file:
IOCTL_KDSETLED	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_KDSETLED = KDSETLED;$/;"	m	namespace:__sanitizer	file:
IOCTL_KDSETMODE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_KDSETMODE = KDSETMODE;$/;"	m	namespace:__sanitizer	file:
IOCTL_KDSETMODE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_KDSETMODE = KDSETMODE;$/;"	m	namespace:__sanitizer	file:
IOCTL_KDSETRAD	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_KDSETRAD = KDSETRAD;$/;"	m	namespace:__sanitizer	file:
IOCTL_KDSIGACCEPT	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_KDSIGACCEPT = KDSIGACCEPT;$/;"	m	namespace:__sanitizer	file:
IOCTL_KDSKBDIACR	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_KDSKBDIACR = KDSKBDIACR;$/;"	m	namespace:__sanitizer	file:
IOCTL_KDSKBENT	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_KDSKBENT = KDSKBENT;$/;"	m	namespace:__sanitizer	file:
IOCTL_KDSKBLED	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_KDSKBLED = KDSKBLED;$/;"	m	namespace:__sanitizer	file:
IOCTL_KDSKBMETA	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_KDSKBMETA = KDSKBMETA;$/;"	m	namespace:__sanitizer	file:
IOCTL_KDSKBMODE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_KDSKBMODE = KDSKBMODE;$/;"	m	namespace:__sanitizer	file:
IOCTL_KDSKBMODE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_KDSKBMODE = KDSKBMODE;$/;"	m	namespace:__sanitizer	file:
IOCTL_KDSKBSENT	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_KDSKBSENT = KDSKBSENT;$/;"	m	namespace:__sanitizer	file:
IOCTL_KDUNMAPDISP	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_KDUNMAPDISP = KDUNMAPDISP;$/;"	m	namespace:__sanitizer	file:
IOCTL_KFILTER_BYFILTER	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_KFILTER_BYFILTER = KFILTER_BYFILTER;$/;"	m	namespace:__sanitizer	file:
IOCTL_KFILTER_BYNAME	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_KFILTER_BYNAME = KFILTER_BYNAME;$/;"	m	namespace:__sanitizer	file:
IOCTL_KIOCCMD	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_KIOCCMD = KIOCCMD;$/;"	m	namespace:__sanitizer	file:
IOCTL_KIOCGETKEY	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_KIOCGETKEY = KIOCGETKEY;$/;"	m	namespace:__sanitizer	file:
IOCTL_KIOCGKEY	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_KIOCGKEY = KIOCGKEY;$/;"	m	namespace:__sanitizer	file:
IOCTL_KIOCGLED	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_KIOCGLED = KIOCGLED;$/;"	m	namespace:__sanitizer	file:
IOCTL_KIOCGSIZE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_KIOCGSIZE = KIOCGSIZE;$/;"	m	namespace:__sanitizer	file:
IOCTL_KIOCGSYMBOL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_KIOCGSYMBOL = KIOCGSYMBOL;$/;"	m	namespace:__sanitizer	file:
IOCTL_KIOCGTRANS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_KIOCGTRANS = KIOCGTRANS;$/;"	m	namespace:__sanitizer	file:
IOCTL_KIOCGVALUE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_KIOCGVALUE = KIOCGVALUE;$/;"	m	namespace:__sanitizer	file:
IOCTL_KIOCLAYOUT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_KIOCLAYOUT = KIOCLAYOUT;$/;"	m	namespace:__sanitizer	file:
IOCTL_KIOCSDIRECT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_KIOCSDIRECT = KIOCSDIRECT;$/;"	m	namespace:__sanitizer	file:
IOCTL_KIOCSETKEY	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_KIOCSETKEY = KIOCSETKEY;$/;"	m	namespace:__sanitizer	file:
IOCTL_KIOCSKEY	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_KIOCSKEY = KIOCSKEY;$/;"	m	namespace:__sanitizer	file:
IOCTL_KIOCSLED	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_KIOCSLED = KIOCSLED;$/;"	m	namespace:__sanitizer	file:
IOCTL_KIOCSOUND	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_KIOCSOUND = KIOCSOUND;$/;"	m	namespace:__sanitizer	file:
IOCTL_KIOCTRANS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_KIOCTRANS = KIOCTRANS;$/;"	m	namespace:__sanitizer	file:
IOCTL_KIOCTYPE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_KIOCTYPE = KIOCTYPE;$/;"	m	namespace:__sanitizer	file:
IOCTL_KTTCP_IO_RECV	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_KTTCP_IO_RECV = KTTCP_IO_RECV;$/;"	m	namespace:__sanitizer	file:
IOCTL_KTTCP_IO_SEND	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_KTTCP_IO_SEND = KTTCP_IO_SEND;$/;"	m	namespace:__sanitizer	file:
IOCTL_LPABORT	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_LPABORT = LPABORT;$/;"	m	namespace:__sanitizer	file:
IOCTL_LPABORTOPEN	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_LPABORTOPEN = LPABORTOPEN;$/;"	m	namespace:__sanitizer	file:
IOCTL_LPCAREFUL	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_LPCAREFUL = LPCAREFUL;$/;"	m	namespace:__sanitizer	file:
IOCTL_LPCHAR	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_LPCHAR = LPCHAR;$/;"	m	namespace:__sanitizer	file:
IOCTL_LPGETIRQ	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_LPGETIRQ = LPGETIRQ;$/;"	m	namespace:__sanitizer	file:
IOCTL_LPGETSTATUS	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_LPGETSTATUS = LPGETSTATUS;$/;"	m	namespace:__sanitizer	file:
IOCTL_LPRESET	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_LPRESET = LPRESET;$/;"	m	namespace:__sanitizer	file:
IOCTL_LPSETIRQ	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_LPSETIRQ = LPSETIRQ;$/;"	m	namespace:__sanitizer	file:
IOCTL_LPTIME	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_LPTIME = LPTIME;$/;"	m	namespace:__sanitizer	file:
IOCTL_LPWAIT	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_LPWAIT = LPWAIT;$/;"	m	namespace:__sanitizer	file:
IOCTL_LUACREATE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_LUACREATE = LUACREATE;$/;"	m	namespace:__sanitizer	file:
IOCTL_LUADESTROY	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_LUADESTROY = LUADESTROY;$/;"	m	namespace:__sanitizer	file:
IOCTL_LUAINFO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_LUAINFO = LUAINFO;$/;"	m	namespace:__sanitizer	file:
IOCTL_LUALOAD	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_LUALOAD = LUALOAD;$/;"	m	namespace:__sanitizer	file:
IOCTL_LUAREQUIRE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_LUAREQUIRE = LUAREQUIRE;$/;"	m	namespace:__sanitizer	file:
IOCTL_MBPPIOCGPARAM	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_MBPPIOCGPARAM = MBPPIOCGPARAM;$/;"	m	namespace:__sanitizer	file:
IOCTL_MBPPIOCGSTAT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_MBPPIOCGSTAT = MBPPIOCGSTAT;$/;"	m	namespace:__sanitizer	file:
IOCTL_MBPPIOCSPARAM	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_MBPPIOCSPARAM = MBPPIOCSPARAM;$/;"	m	namespace:__sanitizer	file:
IOCTL_MD_GETCONF	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_MD_GETCONF = MD_GETCONF;$/;"	m	namespace:__sanitizer	file:
IOCTL_MD_SETCONF	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_MD_SETCONF = MD_SETCONF;$/;"	m	namespace:__sanitizer	file:
IOCTL_METEORCAPFRM	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_METEORCAPFRM = METEORCAPFRM;$/;"	m	namespace:__sanitizer	file:
IOCTL_METEORCAPTUR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_METEORCAPTUR = METEORCAPTUR;$/;"	m	namespace:__sanitizer	file:
IOCTL_METEORGACTPIXFMT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_METEORGACTPIXFMT = METEORGACTPIXFMT;$/;"	m	namespace:__sanitizer	file:
IOCTL_METEORGBRIG	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_METEORGBRIG = METEORGBRIG;$/;"	m	namespace:__sanitizer	file:
IOCTL_METEORGCHCV	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_METEORGCHCV = METEORGCHCV;$/;"	m	namespace:__sanitizer	file:
IOCTL_METEORGCONT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_METEORGCONT = METEORGCONT;$/;"	m	namespace:__sanitizer	file:
IOCTL_METEORGCOUNT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_METEORGCOUNT = METEORGCOUNT;$/;"	m	namespace:__sanitizer	file:
IOCTL_METEORGCSAT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_METEORGCSAT = METEORGCSAT;$/;"	m	namespace:__sanitizer	file:
IOCTL_METEORGETGEO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_METEORGETGEO = METEORGETGEO;$/;"	m	namespace:__sanitizer	file:
IOCTL_METEORGFMT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_METEORGFMT = METEORGFMT;$/;"	m	namespace:__sanitizer	file:
IOCTL_METEORGFPS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_METEORGFPS = METEORGFPS;$/;"	m	namespace:__sanitizer	file:
IOCTL_METEORGHUE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_METEORGHUE = METEORGHUE;$/;"	m	namespace:__sanitizer	file:
IOCTL_METEORGHWS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_METEORGHWS = METEORGHWS;$/;"	m	namespace:__sanitizer	file:
IOCTL_METEORGINPUT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_METEORGINPUT = METEORGINPUT;$/;"	m	namespace:__sanitizer	file:
IOCTL_METEORGSIGNAL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_METEORGSIGNAL = METEORGSIGNAL;$/;"	m	namespace:__sanitizer	file:
IOCTL_METEORGSUPPIXFMT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_METEORGSUPPIXFMT = METEORGSUPPIXFMT;$/;"	m	namespace:__sanitizer	file:
IOCTL_METEORGTS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_METEORGTS = METEORGTS;$/;"	m	namespace:__sanitizer	file:
IOCTL_METEORGVIDEO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_METEORGVIDEO = METEORGVIDEO;$/;"	m	namespace:__sanitizer	file:
IOCTL_METEORGVWS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_METEORGVWS = METEORGVWS;$/;"	m	namespace:__sanitizer	file:
IOCTL_METEORSACTPIXFMT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_METEORSACTPIXFMT = METEORSACTPIXFMT;$/;"	m	namespace:__sanitizer	file:
IOCTL_METEORSBRIG	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_METEORSBRIG = METEORSBRIG;$/;"	m	namespace:__sanitizer	file:
IOCTL_METEORSCHCV	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_METEORSCHCV = METEORSCHCV;$/;"	m	namespace:__sanitizer	file:
IOCTL_METEORSCONT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_METEORSCONT = METEORSCONT;$/;"	m	namespace:__sanitizer	file:
IOCTL_METEORSCOUNT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_METEORSCOUNT = METEORSCOUNT;$/;"	m	namespace:__sanitizer	file:
IOCTL_METEORSCSAT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_METEORSCSAT = METEORSCSAT;$/;"	m	namespace:__sanitizer	file:
IOCTL_METEORSETGEO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_METEORSETGEO = METEORSETGEO;$/;"	m	namespace:__sanitizer	file:
IOCTL_METEORSFMT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_METEORSFMT = METEORSFMT;$/;"	m	namespace:__sanitizer	file:
IOCTL_METEORSFPS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_METEORSFPS = METEORSFPS;$/;"	m	namespace:__sanitizer	file:
IOCTL_METEORSHUE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_METEORSHUE = METEORSHUE;$/;"	m	namespace:__sanitizer	file:
IOCTL_METEORSHWS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_METEORSHWS = METEORSHWS;$/;"	m	namespace:__sanitizer	file:
IOCTL_METEORSINPUT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_METEORSINPUT = METEORSINPUT;$/;"	m	namespace:__sanitizer	file:
IOCTL_METEORSSIGNAL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_METEORSSIGNAL = METEORSSIGNAL;$/;"	m	namespace:__sanitizer	file:
IOCTL_METEORSTATUS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_METEORSTATUS = METEORSTATUS;$/;"	m	namespace:__sanitizer	file:
IOCTL_METEORSTS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_METEORSTS = METEORSTS;$/;"	m	namespace:__sanitizer	file:
IOCTL_METEORSVIDEO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_METEORSVIDEO = METEORSVIDEO;$/;"	m	namespace:__sanitizer	file:
IOCTL_METEORSVWS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_METEORSVWS = METEORSVWS;$/;"	m	namespace:__sanitizer	file:
IOCTL_MIDI_MPUCMD	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_MIDI_MPUCMD = MIDI_MPUCMD;$/;"	m	namespace:__sanitizer	file:
IOCTL_MIDI_MPUMODE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_MIDI_MPUMODE = MIDI_MPUMODE;$/;"	m	namespace:__sanitizer	file:
IOCTL_MIDI_PRETIME	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_MIDI_PRETIME = MIDI_PRETIME;$/;"	m	namespace:__sanitizer	file:
IOCTL_MLXD_CHECKASYNC	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_MLXD_CHECKASYNC = MLXD_CHECKASYNC;$/;"	m	namespace:__sanitizer	file:
IOCTL_MLXD_DETACH	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_MLXD_DETACH = MLXD_DETACH;$/;"	m	namespace:__sanitizer	file:
IOCTL_MLXD_STATUS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_MLXD_STATUS = MLXD_STATUS;$/;"	m	namespace:__sanitizer	file:
IOCTL_MLX_COMMAND	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_MLX_COMMAND = MLX_COMMAND;$/;"	m	namespace:__sanitizer	file:
IOCTL_MLX_GET_CINFO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_MLX_GET_CINFO = MLX_GET_CINFO;$/;"	m	namespace:__sanitizer	file:
IOCTL_MLX_GET_SYSDRIVE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_MLX_GET_SYSDRIVE = MLX_GET_SYSDRIVE;$/;"	m	namespace:__sanitizer	file:
IOCTL_MLX_PAUSE_CHANNEL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_MLX_PAUSE_CHANNEL = MLX_PAUSE_CHANNEL;$/;"	m	namespace:__sanitizer	file:
IOCTL_MLX_REBUILDASYNC	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_MLX_REBUILDASYNC = MLX_REBUILDASYNC;$/;"	m	namespace:__sanitizer	file:
IOCTL_MLX_REBUILDSTAT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_MLX_REBUILDSTAT = MLX_REBUILDSTAT;$/;"	m	namespace:__sanitizer	file:
IOCTL_MLX_RESCAN_DRIVES	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_MLX_RESCAN_DRIVES = MLX_RESCAN_DRIVES;$/;"	m	namespace:__sanitizer	file:
IOCTL_MLYIO_COMMAND	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_MLYIO_COMMAND = MLYIO_COMMAND;$/;"	m	namespace:__sanitizer	file:
IOCTL_MLYIO_HEALTH	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_MLYIO_HEALTH = MLYIO_HEALTH;$/;"	m	namespace:__sanitizer	file:
IOCTL_MTIOCEEOT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_MTIOCEEOT = MTIOCEEOT;$/;"	m	namespace:__sanitizer	file:
IOCTL_MTIOCGET	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_MTIOCGET = MTIOCGET;$/;"	m	namespace:__sanitizer	file:
IOCTL_MTIOCGET	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_MTIOCGET = MTIOCGET;$/;"	m	namespace:__sanitizer	file:
IOCTL_MTIOCGET	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned IOCTL_MTIOCGET = MTIOCGET;$/;"	m	namespace:__sanitizer	file:
IOCTL_MTIOCGETCONFIG	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_MTIOCGETCONFIG = MTIOCGETCONFIG;$/;"	m	namespace:__sanitizer	file:
IOCTL_MTIOCHLOCATE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_MTIOCHLOCATE = MTIOCHLOCATE;$/;"	m	namespace:__sanitizer	file:
IOCTL_MTIOCIEOT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_MTIOCIEOT = MTIOCIEOT;$/;"	m	namespace:__sanitizer	file:
IOCTL_MTIOCPOS	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_MTIOCPOS = MTIOCPOS;$/;"	m	namespace:__sanitizer	file:
IOCTL_MTIOCRDHPOS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_MTIOCRDHPOS = MTIOCRDHPOS;$/;"	m	namespace:__sanitizer	file:
IOCTL_MTIOCRDSPOS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_MTIOCRDSPOS = MTIOCRDSPOS;$/;"	m	namespace:__sanitizer	file:
IOCTL_MTIOCSETCONFIG	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_MTIOCSETCONFIG = MTIOCSETCONFIG;$/;"	m	namespace:__sanitizer	file:
IOCTL_MTIOCSLOCATE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_MTIOCSLOCATE = MTIOCSLOCATE;$/;"	m	namespace:__sanitizer	file:
IOCTL_MTIOCTOP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_MTIOCTOP = MTIOCTOP;$/;"	m	namespace:__sanitizer	file:
IOCTL_MTIOCTOP	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_MTIOCTOP = MTIOCTOP;$/;"	m	namespace:__sanitizer	file:
IOCTL_MTIOCTOP	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned IOCTL_MTIOCTOP = MTIOCTOP;$/;"	m	namespace:__sanitizer	file:
IOCTL_NETBSD_DM_IOCTL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_NETBSD_DM_IOCTL = NETBSD_DM_IOCTL;$/;"	m	namespace:__sanitizer	file:
IOCTL_NOT_PRESENT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^const unsigned IOCTL_NOT_PRESENT = 0;$/;"	m	namespace:__sanitizer	file:
IOCTL_NOT_PRESENT	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  const unsigned IOCTL_NOT_PRESENT = 0;$/;"	m	namespace:__sanitizer	file:
IOCTL_NOT_PRESENT	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  const unsigned IOCTL_NOT_PRESENT = 0;$/;"	m	namespace:__sanitizer	file:
IOCTL_NVME_PASSTHROUGH_CMD	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_NVME_PASSTHROUGH_CMD = NVME_PASSTHROUGH_CMD;$/;"	m	namespace:__sanitizer	file:
IOCTL_OAPM_IOC_GETPOWER	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_OAPM_IOC_GETPOWER = OAPM_IOC_GETPOWER;$/;"	m	namespace:__sanitizer	file:
IOCTL_OCHIOGSTATUS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_OCHIOGSTATUS = OCHIOGSTATUS;$/;"	m	namespace:__sanitizer	file:
IOCTL_ODIOCEJECT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_ODIOCEJECT = ODIOCEJECT;$/;"	m	namespace:__sanitizer	file:
IOCTL_OFIOCFINDDEVICE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_OFIOCFINDDEVICE = OFIOCFINDDEVICE;$/;"	m	namespace:__sanitizer	file:
IOCTL_OFIOCGET	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_OFIOCGET = OFIOCGET;$/;"	m	namespace:__sanitizer	file:
IOCTL_OFIOCGETCHILD	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_OFIOCGETCHILD = OFIOCGETCHILD;$/;"	m	namespace:__sanitizer	file:
IOCTL_OFIOCGETNEXT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_OFIOCGETNEXT = OFIOCGETNEXT;$/;"	m	namespace:__sanitizer	file:
IOCTL_OFIOCGETOPTNODE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_OFIOCGETOPTNODE = OFIOCGETOPTNODE;$/;"	m	namespace:__sanitizer	file:
IOCTL_OFIOCNEXTPROP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_OFIOCNEXTPROP = OFIOCNEXTPROP;$/;"	m	namespace:__sanitizer	file:
IOCTL_OFIOCSET	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_OFIOCSET = OFIOCSET;$/;"	m	namespace:__sanitizer	file:
IOCTL_OFIOGETBMAP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_OFIOGETBMAP = OFIOGETBMAP;$/;"	m	namespace:__sanitizer	file:
IOCTL_OKIOCGSYMBOL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_OKIOCGSYMBOL = OKIOCGSYMBOL;$/;"	m	namespace:__sanitizer	file:
IOCTL_OKIOCGVALUE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_OKIOCGVALUE = OKIOCGVALUE;$/;"	m	namespace:__sanitizer	file:
IOCTL_OSCIOCIDENTIFY	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_OSCIOCIDENTIFY = OSCIOCIDENTIFY;$/;"	m	namespace:__sanitizer	file:
IOCTL_OSS_GETVERSION	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_OSS_GETVERSION = OSS_GETVERSION;$/;"	m	namespace:__sanitizer	file:
IOCTL_OTIOCCONS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_OTIOCCONS = OTIOCCONS;$/;"	m	namespace:__sanitizer	file:
IOCTL_PCI_IOC_BDF_CFGREAD	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PCI_IOC_BDF_CFGREAD = PCI_IOC_BDF_CFGREAD;$/;"	m	namespace:__sanitizer	file:
IOCTL_PCI_IOC_BDF_CFGWRITE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PCI_IOC_BDF_CFGWRITE = PCI_IOC_BDF_CFGWRITE;$/;"	m	namespace:__sanitizer	file:
IOCTL_PCI_IOC_BUSINFO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PCI_IOC_BUSINFO = PCI_IOC_BUSINFO;$/;"	m	namespace:__sanitizer	file:
IOCTL_PCI_IOC_CFGREAD	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PCI_IOC_CFGREAD = PCI_IOC_CFGREAD;$/;"	m	namespace:__sanitizer	file:
IOCTL_PCI_IOC_CFGWRITE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PCI_IOC_CFGWRITE = PCI_IOC_CFGWRITE;$/;"	m	namespace:__sanitizer	file:
IOCTL_PCI_IOC_DRVNAME	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PCI_IOC_DRVNAME = PCI_IOC_DRVNAME;$/;"	m	namespace:__sanitizer	file:
IOCTL_PCI_IOC_DRVNAMEONBUS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PCI_IOC_DRVNAMEONBUS = PCI_IOC_DRVNAMEONBUS;$/;"	m	namespace:__sanitizer	file:
IOCTL_PIO_CMAP	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_PIO_CMAP = PIO_CMAP;$/;"	m	namespace:__sanitizer	file:
IOCTL_PIO_FONT	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_PIO_FONT = PIO_FONT;$/;"	m	namespace:__sanitizer	file:
IOCTL_PIO_SCRNMAP	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_PIO_SCRNMAP = PIO_SCRNMAP;$/;"	m	namespace:__sanitizer	file:
IOCTL_PIO_UNIMAP	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_PIO_UNIMAP = PIO_UNIMAP;$/;"	m	namespace:__sanitizer	file:
IOCTL_PIO_UNIMAPCLR	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_PIO_UNIMAPCLR = PIO_UNIMAPCLR;$/;"	m	namespace:__sanitizer	file:
IOCTL_PIO_UNISCRNMAP	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_PIO_UNISCRNMAP = PIO_UNISCRNMAP;$/;"	m	namespace:__sanitizer	file:
IOCTL_POWER_EVENT_RECVDICT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_POWER_EVENT_RECVDICT = POWER_EVENT_RECVDICT;$/;"	m	namespace:__sanitizer	file:
IOCTL_POWER_IOC_GET_TYPE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_POWER_IOC_GET_TYPE = POWER_IOC_GET_TYPE;$/;"	m	namespace:__sanitizer	file:
IOCTL_POWER_IOC_GET_TYPE_WITH_LOSSAGE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_POWER_IOC_GET_TYPE_WITH_LOSSAGE =$/;"	m	namespace:__sanitizer	file:
IOCTL_PPPIOCGASYNCMAP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PPPIOCGASYNCMAP = PPPIOCGASYNCMAP;$/;"	m	namespace:__sanitizer	file:
IOCTL_PPPIOCGASYNCMAP	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_PPPIOCGASYNCMAP = PPPIOCGASYNCMAP;$/;"	m	namespace:__sanitizer	file:
IOCTL_PPPIOCGDEBUG	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_PPPIOCGDEBUG = PPPIOCGDEBUG;$/;"	m	namespace:__sanitizer	file:
IOCTL_PPPIOCGFLAGS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PPPIOCGFLAGS = PPPIOCGFLAGS;$/;"	m	namespace:__sanitizer	file:
IOCTL_PPPIOCGFLAGS	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_PPPIOCGFLAGS = PPPIOCGFLAGS;$/;"	m	namespace:__sanitizer	file:
IOCTL_PPPIOCGIDLE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PPPIOCGIDLE = PPPIOCGIDLE;$/;"	m	namespace:__sanitizer	file:
IOCTL_PPPIOCGMRU	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PPPIOCGMRU = PPPIOCGMRU;$/;"	m	namespace:__sanitizer	file:
IOCTL_PPPIOCGMTU	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PPPIOCGMTU = PPPIOCGMTU;$/;"	m	namespace:__sanitizer	file:
IOCTL_PPPIOCGNPMODE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PPPIOCGNPMODE = PPPIOCGNPMODE;$/;"	m	namespace:__sanitizer	file:
IOCTL_PPPIOCGRASYNCMAP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PPPIOCGRASYNCMAP = PPPIOCGRASYNCMAP;$/;"	m	namespace:__sanitizer	file:
IOCTL_PPPIOCGRAWIN	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PPPIOCGRAWIN = PPPIOCGRAWIN;$/;"	m	namespace:__sanitizer	file:
IOCTL_PPPIOCGUNIT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PPPIOCGUNIT = PPPIOCGUNIT;$/;"	m	namespace:__sanitizer	file:
IOCTL_PPPIOCGUNIT	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_PPPIOCGUNIT = PPPIOCGUNIT;$/;"	m	namespace:__sanitizer	file:
IOCTL_PPPIOCGXASYNCMAP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PPPIOCGXASYNCMAP = PPPIOCGXASYNCMAP;$/;"	m	namespace:__sanitizer	file:
IOCTL_PPPIOCGXASYNCMAP	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_PPPIOCGXASYNCMAP = PPPIOCGXASYNCMAP;$/;"	m	namespace:__sanitizer	file:
IOCTL_PPPIOCSASYNCMAP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PPPIOCSASYNCMAP = PPPIOCSASYNCMAP;$/;"	m	namespace:__sanitizer	file:
IOCTL_PPPIOCSASYNCMAP	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_PPPIOCSASYNCMAP = PPPIOCSASYNCMAP;$/;"	m	namespace:__sanitizer	file:
IOCTL_PPPIOCSCOMPRESS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PPPIOCSCOMPRESS = PPPIOCSCOMPRESS;$/;"	m	namespace:__sanitizer	file:
IOCTL_PPPIOCSDEBUG	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_PPPIOCSDEBUG = PPPIOCSDEBUG;$/;"	m	namespace:__sanitizer	file:
IOCTL_PPPIOCSFLAGS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PPPIOCSFLAGS = PPPIOCSFLAGS;$/;"	m	namespace:__sanitizer	file:
IOCTL_PPPIOCSFLAGS	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_PPPIOCSFLAGS = PPPIOCSFLAGS;$/;"	m	namespace:__sanitizer	file:
IOCTL_PPPIOCSMAXCID	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PPPIOCSMAXCID = PPPIOCSMAXCID;$/;"	m	namespace:__sanitizer	file:
IOCTL_PPPIOCSMAXCID	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_PPPIOCSMAXCID = PPPIOCSMAXCID;$/;"	m	namespace:__sanitizer	file:
IOCTL_PPPIOCSMRU	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PPPIOCSMRU = PPPIOCSMRU;$/;"	m	namespace:__sanitizer	file:
IOCTL_PPPIOCSMRU	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_PPPIOCSMRU = PPPIOCSMRU;$/;"	m	namespace:__sanitizer	file:
IOCTL_PPPIOCSMTU	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PPPIOCSMTU = PPPIOCSMTU;$/;"	m	namespace:__sanitizer	file:
IOCTL_PPPIOCSNPMODE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PPPIOCSNPMODE = PPPIOCSNPMODE;$/;"	m	namespace:__sanitizer	file:
IOCTL_PPPIOCSRASYNCMAP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PPPIOCSRASYNCMAP = PPPIOCSRASYNCMAP;$/;"	m	namespace:__sanitizer	file:
IOCTL_PPPIOCSXASYNCMAP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PPPIOCSXASYNCMAP = PPPIOCSXASYNCMAP;$/;"	m	namespace:__sanitizer	file:
IOCTL_PPPIOCSXASYNCMAP	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_PPPIOCSXASYNCMAP = PPPIOCSXASYNCMAP;$/;"	m	namespace:__sanitizer	file:
IOCTL_PPPIOCXFERUNIT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PPPIOCXFERUNIT = PPPIOCXFERUNIT;$/;"	m	namespace:__sanitizer	file:
IOCTL_PPPOEGETPARMS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PPPOEGETPARMS = PPPOEGETPARMS;$/;"	m	namespace:__sanitizer	file:
IOCTL_PPPOEGETSESSION	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PPPOEGETSESSION = PPPOEGETSESSION;$/;"	m	namespace:__sanitizer	file:
IOCTL_PPPOESETPARMS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PPPOESETPARMS = PPPOESETPARMS;$/;"	m	namespace:__sanitizer	file:
IOCTL_PPS_IOC_CREATE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PPS_IOC_CREATE = PPS_IOC_CREATE;$/;"	m	namespace:__sanitizer	file:
IOCTL_PPS_IOC_DESTROY	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PPS_IOC_DESTROY = PPS_IOC_DESTROY;$/;"	m	namespace:__sanitizer	file:
IOCTL_PPS_IOC_FETCH	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PPS_IOC_FETCH = PPS_IOC_FETCH;$/;"	m	namespace:__sanitizer	file:
IOCTL_PPS_IOC_GETCAP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PPS_IOC_GETCAP = PPS_IOC_GETCAP;$/;"	m	namespace:__sanitizer	file:
IOCTL_PPS_IOC_GETPARAMS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PPS_IOC_GETPARAMS = PPS_IOC_GETPARAMS;$/;"	m	namespace:__sanitizer	file:
IOCTL_PPS_IOC_KCBIND	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PPS_IOC_KCBIND = PPS_IOC_KCBIND;$/;"	m	namespace:__sanitizer	file:
IOCTL_PPS_IOC_SETPARAMS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PPS_IOC_SETPARAMS = PPS_IOC_SETPARAMS;$/;"	m	namespace:__sanitizer	file:
IOCTL_PRIQ_ADD_CLASS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PRIQ_ADD_CLASS = PRIQ_ADD_CLASS;$/;"	m	namespace:__sanitizer	file:
IOCTL_PRIQ_ADD_FILTER	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PRIQ_ADD_FILTER = PRIQ_ADD_FILTER;$/;"	m	namespace:__sanitizer	file:
IOCTL_PRIQ_CLEAR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PRIQ_CLEAR = PRIQ_CLEAR;$/;"	m	namespace:__sanitizer	file:
IOCTL_PRIQ_DEL_CLASS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PRIQ_DEL_CLASS = PRIQ_DEL_CLASS;$/;"	m	namespace:__sanitizer	file:
IOCTL_PRIQ_DEL_FILTER	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PRIQ_DEL_FILTER = PRIQ_DEL_FILTER;$/;"	m	namespace:__sanitizer	file:
IOCTL_PRIQ_DISABLE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PRIQ_DISABLE = PRIQ_DISABLE;$/;"	m	namespace:__sanitizer	file:
IOCTL_PRIQ_ENABLE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PRIQ_ENABLE = PRIQ_ENABLE;$/;"	m	namespace:__sanitizer	file:
IOCTL_PRIQ_GETSTATS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PRIQ_GETSTATS = PRIQ_GETSTATS;$/;"	m	namespace:__sanitizer	file:
IOCTL_PRIQ_IF_ATTACH	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PRIQ_IF_ATTACH = PRIQ_IF_ATTACH;$/;"	m	namespace:__sanitizer	file:
IOCTL_PRIQ_IF_DETACH	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PRIQ_IF_DETACH = PRIQ_IF_DETACH;$/;"	m	namespace:__sanitizer	file:
IOCTL_PRIQ_MOD_CLASS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PRIQ_MOD_CLASS = PRIQ_MOD_CLASS;$/;"	m	namespace:__sanitizer	file:
IOCTL_PTIOCFREEBSD	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PTIOCFREEBSD = PTIOCFREEBSD;$/;"	m	namespace:__sanitizer	file:
IOCTL_PTIOCLINUX	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PTIOCLINUX = PTIOCLINUX;$/;"	m	namespace:__sanitizer	file:
IOCTL_PTIOCNETBSD	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PTIOCNETBSD = PTIOCNETBSD;$/;"	m	namespace:__sanitizer	file:
IOCTL_PTIOCSUNOS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PTIOCSUNOS = PTIOCSUNOS;$/;"	m	namespace:__sanitizer	file:
IOCTL_PTIOCULTRIX	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_PTIOCULTRIX = PTIOCULTRIX;$/;"	m	namespace:__sanitizer	file:
IOCTL_RADIO_GETFREQ	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RADIO_GETFREQ = RADIO_GETFREQ;$/;"	m	namespace:__sanitizer	file:
IOCTL_RADIO_GETMODE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RADIO_GETMODE = RADIO_GETMODE;$/;"	m	namespace:__sanitizer	file:
IOCTL_RADIO_SETFREQ	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RADIO_SETFREQ = RADIO_SETFREQ;$/;"	m	namespace:__sanitizer	file:
IOCTL_RADIO_SETMODE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RADIO_SETMODE = RADIO_SETMODE;$/;"	m	namespace:__sanitizer	file:
IOCTL_RAIDFRAME_ABORT_SPARET_WAIT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RAIDFRAME_ABORT_SPARET_WAIT = RAIDFRAME_ABORT_SPARET_WAIT;$/;"	m	namespace:__sanitizer	file:
IOCTL_RAIDFRAME_ADD_HOT_SPARE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RAIDFRAME_ADD_HOT_SPARE = RAIDFRAME_ADD_HOT_SPARE;$/;"	m	namespace:__sanitizer	file:
IOCTL_RAIDFRAME_CHECK_COPYBACK_STATUS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RAIDFRAME_CHECK_COPYBACK_STATUS =$/;"	m	namespace:__sanitizer	file:
IOCTL_RAIDFRAME_CHECK_COPYBACK_STATUS_EXT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RAIDFRAME_CHECK_COPYBACK_STATUS_EXT =$/;"	m	namespace:__sanitizer	file:
IOCTL_RAIDFRAME_CHECK_PARITY	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RAIDFRAME_CHECK_PARITY = RAIDFRAME_CHECK_PARITY;$/;"	m	namespace:__sanitizer	file:
IOCTL_RAIDFRAME_CHECK_PARITYREWRITE_STATUS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RAIDFRAME_CHECK_PARITYREWRITE_STATUS =$/;"	m	namespace:__sanitizer	file:
IOCTL_RAIDFRAME_CHECK_PARITYREWRITE_STATUS_EXT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RAIDFRAME_CHECK_PARITYREWRITE_STATUS_EXT =$/;"	m	namespace:__sanitizer	file:
IOCTL_RAIDFRAME_CHECK_RECON_STATUS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RAIDFRAME_CHECK_RECON_STATUS = RAIDFRAME_CHECK_RECON_STATUS;$/;"	m	namespace:__sanitizer	file:
IOCTL_RAIDFRAME_CHECK_RECON_STATUS_EXT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RAIDFRAME_CHECK_RECON_STATUS_EXT =$/;"	m	namespace:__sanitizer	file:
IOCTL_RAIDFRAME_CONFIGURE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RAIDFRAME_CONFIGURE = RAIDFRAME_CONFIGURE;$/;"	m	namespace:__sanitizer	file:
IOCTL_RAIDFRAME_COPYBACK	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RAIDFRAME_COPYBACK = RAIDFRAME_COPYBACK;$/;"	m	namespace:__sanitizer	file:
IOCTL_RAIDFRAME_DELETE_COMPONENT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RAIDFRAME_DELETE_COMPONENT = RAIDFRAME_DELETE_COMPONENT;$/;"	m	namespace:__sanitizer	file:
IOCTL_RAIDFRAME_FAIL_DISK	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RAIDFRAME_FAIL_DISK = RAIDFRAME_FAIL_DISK;$/;"	m	namespace:__sanitizer	file:
IOCTL_RAIDFRAME_GET_COMPONENT_LABEL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RAIDFRAME_GET_COMPONENT_LABEL = RAIDFRAME_GET_COMPONENT_LABEL;$/;"	m	namespace:__sanitizer	file:
IOCTL_RAIDFRAME_GET_INFO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RAIDFRAME_GET_INFO = RAIDFRAME_GET_INFO;$/;"	m	namespace:__sanitizer	file:
IOCTL_RAIDFRAME_GET_SIZE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RAIDFRAME_GET_SIZE = RAIDFRAME_GET_SIZE;$/;"	m	namespace:__sanitizer	file:
IOCTL_RAIDFRAME_INCORPORATE_HOT_SPARE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RAIDFRAME_INCORPORATE_HOT_SPARE =$/;"	m	namespace:__sanitizer	file:
IOCTL_RAIDFRAME_INIT_LABELS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RAIDFRAME_INIT_LABELS = RAIDFRAME_INIT_LABELS;$/;"	m	namespace:__sanitizer	file:
IOCTL_RAIDFRAME_KEEP_ACCTOTALS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RAIDFRAME_KEEP_ACCTOTALS = RAIDFRAME_KEEP_ACCTOTALS;$/;"	m	namespace:__sanitizer	file:
IOCTL_RAIDFRAME_PARITYMAP_GET_DISABLE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RAIDFRAME_PARITYMAP_GET_DISABLE =$/;"	m	namespace:__sanitizer	file:
IOCTL_RAIDFRAME_PARITYMAP_SET_DISABLE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RAIDFRAME_PARITYMAP_SET_DISABLE =$/;"	m	namespace:__sanitizer	file:
IOCTL_RAIDFRAME_PARITYMAP_SET_PARAMS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RAIDFRAME_PARITYMAP_SET_PARAMS = RAIDFRAME_PARITYMAP_SET_PARAMS;$/;"	m	namespace:__sanitizer	file:
IOCTL_RAIDFRAME_PARITYMAP_STATUS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RAIDFRAME_PARITYMAP_STATUS = RAIDFRAME_PARITYMAP_STATUS;$/;"	m	namespace:__sanitizer	file:
IOCTL_RAIDFRAME_REBUILD_IN_PLACE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RAIDFRAME_REBUILD_IN_PLACE = RAIDFRAME_REBUILD_IN_PLACE;$/;"	m	namespace:__sanitizer	file:
IOCTL_RAIDFRAME_REMOVE_HOT_SPARE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RAIDFRAME_REMOVE_HOT_SPARE = RAIDFRAME_REMOVE_HOT_SPARE;$/;"	m	namespace:__sanitizer	file:
IOCTL_RAIDFRAME_RESET_ACCTOTALS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RAIDFRAME_RESET_ACCTOTALS = RAIDFRAME_RESET_ACCTOTALS;$/;"	m	namespace:__sanitizer	file:
IOCTL_RAIDFRAME_REWRITEPARITY	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RAIDFRAME_REWRITEPARITY = RAIDFRAME_REWRITEPARITY;$/;"	m	namespace:__sanitizer	file:
IOCTL_RAIDFRAME_SEND_SPARET	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RAIDFRAME_SEND_SPARET = RAIDFRAME_SEND_SPARET;$/;"	m	namespace:__sanitizer	file:
IOCTL_RAIDFRAME_SET_AUTOCONFIG	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RAIDFRAME_SET_AUTOCONFIG = RAIDFRAME_SET_AUTOCONFIG;$/;"	m	namespace:__sanitizer	file:
IOCTL_RAIDFRAME_SET_COMPONENT_LABEL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RAIDFRAME_SET_COMPONENT_LABEL = RAIDFRAME_SET_COMPONENT_LABEL;$/;"	m	namespace:__sanitizer	file:
IOCTL_RAIDFRAME_SET_LAST_UNIT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RAIDFRAME_SET_LAST_UNIT = RAIDFRAME_SET_LAST_UNIT;$/;"	m	namespace:__sanitizer	file:
IOCTL_RAIDFRAME_SET_ROOT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RAIDFRAME_SET_ROOT = RAIDFRAME_SET_ROOT;$/;"	m	namespace:__sanitizer	file:
IOCTL_RAIDFRAME_SHUTDOWN	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RAIDFRAME_SHUTDOWN = RAIDFRAME_SHUTDOWN;$/;"	m	namespace:__sanitizer	file:
IOCTL_RAIDFRAME_SPARET_WAIT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RAIDFRAME_SPARET_WAIT = RAIDFRAME_SPARET_WAIT;$/;"	m	namespace:__sanitizer	file:
IOCTL_RAIDFRAME_START_ATRACE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RAIDFRAME_START_ATRACE = RAIDFRAME_START_ATRACE;$/;"	m	namespace:__sanitizer	file:
IOCTL_RAIDFRAME_STOP_ATRACE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RAIDFRAME_STOP_ATRACE = RAIDFRAME_STOP_ATRACE;$/;"	m	namespace:__sanitizer	file:
IOCTL_RAIDFRAME_TUR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RAIDFRAME_TUR = RAIDFRAME_TUR;$/;"	m	namespace:__sanitizer	file:
IOCTL_RED_CONFIG	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RED_CONFIG = RED_CONFIG;$/;"	m	namespace:__sanitizer	file:
IOCTL_RED_DISABLE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RED_DISABLE = RED_DISABLE;$/;"	m	namespace:__sanitizer	file:
IOCTL_RED_ENABLE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RED_ENABLE = RED_ENABLE;$/;"	m	namespace:__sanitizer	file:
IOCTL_RED_GETSTATS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RED_GETSTATS = RED_GETSTATS;$/;"	m	namespace:__sanitizer	file:
IOCTL_RED_IF_ATTACH	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RED_IF_ATTACH = RED_IF_ATTACH;$/;"	m	namespace:__sanitizer	file:
IOCTL_RED_IF_DETACH	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RED_IF_DETACH = RED_IF_DETACH;$/;"	m	namespace:__sanitizer	file:
IOCTL_RED_SETDEFAULTS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RED_SETDEFAULTS = RED_SETDEFAULTS;$/;"	m	namespace:__sanitizer	file:
IOCTL_REMOTE_GETKEY	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_REMOTE_GETKEY = REMOTE_GETKEY;$/;"	m	namespace:__sanitizer	file:
IOCTL_RIOCGINFO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RIOCGINFO = RIOCGINFO;$/;"	m	namespace:__sanitizer	file:
IOCTL_RIOCSINFO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RIOCSINFO = RIOCSINFO;$/;"	m	namespace:__sanitizer	file:
IOCTL_RIOCSSRCH	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RIOCSSRCH = RIOCSSRCH;$/;"	m	namespace:__sanitizer	file:
IOCTL_RIO_CONFIG	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RIO_CONFIG = RIO_CONFIG;$/;"	m	namespace:__sanitizer	file:
IOCTL_RIO_DISABLE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RIO_DISABLE = RIO_DISABLE;$/;"	m	namespace:__sanitizer	file:
IOCTL_RIO_ENABLE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RIO_ENABLE = RIO_ENABLE;$/;"	m	namespace:__sanitizer	file:
IOCTL_RIO_GETSTATS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RIO_GETSTATS = RIO_GETSTATS;$/;"	m	namespace:__sanitizer	file:
IOCTL_RIO_IF_ATTACH	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RIO_IF_ATTACH = RIO_IF_ATTACH;$/;"	m	namespace:__sanitizer	file:
IOCTL_RIO_IF_DETACH	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RIO_IF_DETACH = RIO_IF_DETACH;$/;"	m	namespace:__sanitizer	file:
IOCTL_RIO_SETDEFAULTS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RIO_SETDEFAULTS = RIO_SETDEFAULTS;$/;"	m	namespace:__sanitizer	file:
IOCTL_RNDADDDATA	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RNDADDDATA = RNDADDDATA;$/;"	m	namespace:__sanitizer	file:
IOCTL_RNDCTL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RNDCTL = RNDCTL;$/;"	m	namespace:__sanitizer	file:
IOCTL_RNDGETENTCNT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RNDGETENTCNT = RNDGETENTCNT;$/;"	m	namespace:__sanitizer	file:
IOCTL_RNDGETESTNAME	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RNDGETESTNAME = RNDGETESTNAME;$/;"	m	namespace:__sanitizer	file:
IOCTL_RNDGETESTNUM	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RNDGETESTNUM = RNDGETESTNUM;$/;"	m	namespace:__sanitizer	file:
IOCTL_RNDGETPOOLSTAT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RNDGETPOOLSTAT = RNDGETPOOLSTAT;$/;"	m	namespace:__sanitizer	file:
IOCTL_RNDGETSRCNAME	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RNDGETSRCNAME = RNDGETSRCNAME;$/;"	m	namespace:__sanitizer	file:
IOCTL_RNDGETSRCNUM	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_RNDGETSRCNUM = RNDGETSRCNUM;$/;"	m	namespace:__sanitizer	file:
IOCTL_SATIOGID	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SATIOGID = SATIOGID;$/;"	m	namespace:__sanitizer	file:
IOCTL_SATIORESET	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SATIORESET = SATIORESET;$/;"	m	namespace:__sanitizer	file:
IOCTL_SATIOSBUFSIZE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SATIOSBUFSIZE = SATIOSBUFSIZE;$/;"	m	namespace:__sanitizer	file:
IOCTL_SCBUSACCEL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SCBUSACCEL = SCBUSACCEL;$/;"	m	namespace:__sanitizer	file:
IOCTL_SCBUSIODETACH	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SCBUSIODETACH = SCBUSIODETACH;$/;"	m	namespace:__sanitizer	file:
IOCTL_SCBUSIOLLSCAN	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SCBUSIOLLSCAN = SCBUSIOLLSCAN;$/;"	m	namespace:__sanitizer	file:
IOCTL_SCBUSIORESET	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SCBUSIORESET = SCBUSIORESET;$/;"	m	namespace:__sanitizer	file:
IOCTL_SCBUSIOSCAN	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SCBUSIOSCAN = SCBUSIOSCAN;$/;"	m	namespace:__sanitizer	file:
IOCTL_SCIOCCOMMAND	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SCIOCCOMMAND = SCIOCCOMMAND;$/;"	m	namespace:__sanitizer	file:
IOCTL_SCIOCDEBUG	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SCIOCDEBUG = SCIOCDEBUG;$/;"	m	namespace:__sanitizer	file:
IOCTL_SCIOCDECONFIG	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SCIOCDECONFIG = SCIOCDECONFIG;$/;"	m	namespace:__sanitizer	file:
IOCTL_SCIOCGET	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SCIOCGET = SCIOCGET;$/;"	m	namespace:__sanitizer	file:
IOCTL_SCIOCIDENTIFY	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SCIOCIDENTIFY = SCIOCIDENTIFY;$/;"	m	namespace:__sanitizer	file:
IOCTL_SCIOCRECONFIG	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SCIOCRECONFIG = SCIOCRECONFIG;$/;"	m	namespace:__sanitizer	file:
IOCTL_SCIOCRESET	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SCIOCRESET = SCIOCRESET;$/;"	m	namespace:__sanitizer	file:
IOCTL_SCIOCRESTART	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SCIOCRESTART = SCIOCRESTART;$/;"	m	namespace:__sanitizer	file:
IOCTL_SCIOCSET	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SCIOCSET = SCIOCSET;$/;"	m	namespace:__sanitizer	file:
IOCTL_SCIOC_USE_ADF	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SCIOC_USE_ADF = SCIOC_USE_ADF;$/;"	m	namespace:__sanitizer	file:
IOCTL_SCSI_IOCTL_GET_IDLUN	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SCSI_IOCTL_GET_IDLUN = SCSI_IOCTL_GET_IDLUN;$/;"	m	namespace:__sanitizer	file:
IOCTL_SCSI_IOCTL_PROBE_HOST	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SCSI_IOCTL_PROBE_HOST = SCSI_IOCTL_PROBE_HOST;$/;"	m	namespace:__sanitizer	file:
IOCTL_SCSI_IOCTL_TAGGED_DISABLE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SCSI_IOCTL_TAGGED_DISABLE = SCSI_IOCTL_TAGGED_DISABLE;$/;"	m	namespace:__sanitizer	file:
IOCTL_SCSI_IOCTL_TAGGED_ENABLE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SCSI_IOCTL_TAGGED_ENABLE = SCSI_IOCTL_TAGGED_ENABLE;$/;"	m	namespace:__sanitizer	file:
IOCTL_SEQUENCER_CTRLRATE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SEQUENCER_CTRLRATE = SEQUENCER_CTRLRATE;$/;"	m	namespace:__sanitizer	file:
IOCTL_SEQUENCER_GETINCOUNT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SEQUENCER_GETINCOUNT = SEQUENCER_GETINCOUNT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SEQUENCER_GETOUTCOUNT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SEQUENCER_GETOUTCOUNT = SEQUENCER_GETOUTCOUNT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SEQUENCER_GETTIME	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SEQUENCER_GETTIME = SEQUENCER_GETTIME;$/;"	m	namespace:__sanitizer	file:
IOCTL_SEQUENCER_INFO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SEQUENCER_INFO = SEQUENCER_INFO;$/;"	m	namespace:__sanitizer	file:
IOCTL_SEQUENCER_MEMAVL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SEQUENCER_MEMAVL = SEQUENCER_MEMAVL;$/;"	m	namespace:__sanitizer	file:
IOCTL_SEQUENCER_NRMIDIS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SEQUENCER_NRMIDIS = SEQUENCER_NRMIDIS;$/;"	m	namespace:__sanitizer	file:
IOCTL_SEQUENCER_NRSYNTHS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SEQUENCER_NRSYNTHS = SEQUENCER_NRSYNTHS;$/;"	m	namespace:__sanitizer	file:
IOCTL_SEQUENCER_OUTOFBAND	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SEQUENCER_OUTOFBAND = SEQUENCER_OUTOFBAND;$/;"	m	namespace:__sanitizer	file:
IOCTL_SEQUENCER_PANIC	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SEQUENCER_PANIC = SEQUENCER_PANIC;$/;"	m	namespace:__sanitizer	file:
IOCTL_SEQUENCER_RESET	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SEQUENCER_RESET = SEQUENCER_RESET;$/;"	m	namespace:__sanitizer	file:
IOCTL_SEQUENCER_RESETSAMPLES	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SEQUENCER_RESETSAMPLES = SEQUENCER_RESETSAMPLES;$/;"	m	namespace:__sanitizer	file:
IOCTL_SEQUENCER_SYNC	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SEQUENCER_SYNC = SEQUENCER_SYNC;$/;"	m	namespace:__sanitizer	file:
IOCTL_SEQUENCER_THRESHOLD	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SEQUENCER_THRESHOLD = SEQUENCER_THRESHOLD;$/;"	m	namespace:__sanitizer	file:
IOCTL_SEQUENCER_TMR_CONTINUE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SEQUENCER_TMR_CONTINUE = SEQUENCER_TMR_CONTINUE;$/;"	m	namespace:__sanitizer	file:
IOCTL_SEQUENCER_TMR_METRONOME	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SEQUENCER_TMR_METRONOME = SEQUENCER_TMR_METRONOME;$/;"	m	namespace:__sanitizer	file:
IOCTL_SEQUENCER_TMR_SELECT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SEQUENCER_TMR_SELECT = SEQUENCER_TMR_SELECT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SEQUENCER_TMR_SOURCE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SEQUENCER_TMR_SOURCE = SEQUENCER_TMR_SOURCE;$/;"	m	namespace:__sanitizer	file:
IOCTL_SEQUENCER_TMR_START	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SEQUENCER_TMR_START = SEQUENCER_TMR_START;$/;"	m	namespace:__sanitizer	file:
IOCTL_SEQUENCER_TMR_STOP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SEQUENCER_TMR_STOP = SEQUENCER_TMR_STOP;$/;"	m	namespace:__sanitizer	file:
IOCTL_SEQUENCER_TMR_TEMPO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SEQUENCER_TMR_TEMPO = SEQUENCER_TMR_TEMPO;$/;"	m	namespace:__sanitizer	file:
IOCTL_SEQUENCER_TMR_TIMEBASE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SEQUENCER_TMR_TIMEBASE = SEQUENCER_TMR_TIMEBASE;$/;"	m	namespace:__sanitizer	file:
IOCTL_SESIOC_GETENCSTAT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SESIOC_GETENCSTAT = SESIOC_GETENCSTAT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SESIOC_GETNOBJ	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SESIOC_GETNOBJ = SESIOC_GETNOBJ;$/;"	m	namespace:__sanitizer	file:
IOCTL_SESIOC_GETOBJMAP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SESIOC_GETOBJMAP = SESIOC_GETOBJMAP;$/;"	m	namespace:__sanitizer	file:
IOCTL_SESIOC_GETOBJSTAT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SESIOC_GETOBJSTAT = SESIOC_GETOBJSTAT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SESIOC_GETTEXT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SESIOC_GETTEXT = SESIOC_GETTEXT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SESIOC_INIT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SESIOC_INIT = SESIOC_INIT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SESIOC_SETENCSTAT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SESIOC_SETENCSTAT = SESIOC_SETENCSTAT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SESIOC_SETOBJSTAT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SESIOC_SETOBJSTAT = SESIOC_SETOBJSTAT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCAADDRCTL_POLICY	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCAADDRCTL_POLICY = SIOCAADDRCTL_POLICY;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCADDMULTI	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCADDMULTI = SIOCADDMULTI;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCADDMULTI	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCADDMULTI = SIOCADDMULTI;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCADDMULTI	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned IOCTL_SIOCADDMULTI = SIOCADDMULTI;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCADDRT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCADDRT = SIOCADDRT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCADDRT	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCADDRT = SIOCADDRT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCADNAT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCADNAT = SIOCADNAT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCAIFADDR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCAIFADDR = SIOCAIFADDR;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCAIPXITFCRT	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCAIPXITFCRT = SIOCAIPXITFCRT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCAIPXPRISLT	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCAIPXPRISLT = SIOCAIPXPRISLT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCALIFADDR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCALIFADDR = SIOCALIFADDR;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCATMARK	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCATMARK = SIOCATMARK;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCATMARK	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCATMARK = SIOCATMARK;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCATMARK	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned IOCTL_SIOCATMARK = SIOCATMARK;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCATMDIS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCATMDIS = SIOCATMDIS;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCATMENA	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCATMENA = SIOCATMENA;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCAX25ADDUID	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCAX25ADDUID = SIOCAX25ADDUID;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCAX25DELUID	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCAX25DELUID = SIOCAX25DELUID;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCAX25GETPARMS	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCAX25GETPARMS = SIOCAX25GETPARMS;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCAX25GETUID	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCAX25GETUID = SIOCAX25GETUID;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCAX25NOUID	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCAX25NOUID = SIOCAX25NOUID;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCAX25SETPARMS	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCAX25SETPARMS = SIOCAX25SETPARMS;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCBTDUMP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCBTDUMP = SIOCBTDUMP;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCDADDRCTL_POLICY	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCDADDRCTL_POLICY = SIOCDADDRCTL_POLICY;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCDARP	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCDARP = SIOCDARP;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCDELMULTI	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCDELMULTI = SIOCDELMULTI;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCDELMULTI	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCDELMULTI = SIOCDELMULTI;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCDELMULTI	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned IOCTL_SIOCDELMULTI = SIOCDELMULTI;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCDELRT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCDELRT = SIOCDELRT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCDELRT	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCDELRT = SIOCDELRT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCDEVPLIP	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCDEVPLIP = SIOCDEVPLIP;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCDIFADDR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCDIFADDR = SIOCDIFADDR;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCDIFPHYADDR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCDIFPHYADDR = SIOCDIFPHYADDR;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCDLIFADDR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCDLIFADDR = SIOCDLIFADDR;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCDRARP	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCDRARP = SIOCDRARP;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGARP	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCGARP = SIOCGARP;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGATHDIAG	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCGATHDIAG = SIOCGATHDIAG;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGATHSTATS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCGATHSTATS = SIOCGATHSTATS;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGBTFEAT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCGBTFEAT = SIOCGBTFEAT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGBTINFO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCGBTINFO = SIOCGBTINFO;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGBTINFOA	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCGBTINFOA = SIOCGBTINFOA;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGBTSTATS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCGBTSTATS = SIOCGBTSTATS;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGCNWDOMAIN	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCGCNWDOMAIN = SIOCGCNWDOMAIN;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGCNWSTATS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCGCNWSTATS = SIOCGCNWSTATS;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGCNWSTATUS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCGCNWSTATUS = SIOCGCNWSTATUS;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGCNWTRAIL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCGCNWTRAIL = SIOCGCNWTRAIL;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGDRVSPEC	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCGDRVSPEC = SIOCGDRVSPEC;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGETHERCAP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCGETHERCAP = SIOCGETHERCAP;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGETPFSYNC	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCGETPFSYNC = SIOCGETPFSYNC;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGETSGCNT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCGETSGCNT = SIOCGETSGCNT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGETSGCNT	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCGETSGCNT = SIOCGETSGCNT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGETVIFCNT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCGETVIFCNT = SIOCGETVIFCNT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGETVIFCNT	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCGETVIFCNT = SIOCGETVIFCNT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGHIWAT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCGHIWAT = SIOCGHIWAT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGIFADDR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCGIFADDR = SIOCGIFADDR;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGIFADDR	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCGIFADDR = SIOCGIFADDR;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGIFADDR	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned IOCTL_SIOCGIFADDR = SIOCGIFADDR;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGIFADDRPREF	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCGIFADDRPREF = SIOCGIFADDRPREF;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGIFAFLAG_IN	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCGIFAFLAG_IN = SIOCGIFAFLAG_IN;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGIFALIAS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCGIFALIAS = SIOCGIFALIAS;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGIFBRDADDR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCGIFBRDADDR = SIOCGIFBRDADDR;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGIFBRDADDR	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCGIFBRDADDR = SIOCGIFBRDADDR;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGIFBRDADDR	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned IOCTL_SIOCGIFBRDADDR = SIOCGIFBRDADDR;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGIFCAP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCGIFCAP = SIOCGIFCAP;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGIFCONF	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCGIFCONF = SIOCGIFCONF;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGIFCONF	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCGIFCONF = SIOCGIFCONF;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGIFCONF	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned IOCTL_SIOCGIFCONF = SIOCGIFCONF;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGIFDATA	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCGIFDATA = SIOCGIFDATA;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGIFDLT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCGIFDLT = SIOCGIFDLT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGIFDSTADDR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCGIFDSTADDR = SIOCGIFDSTADDR;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGIFDSTADDR	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCGIFDSTADDR = SIOCGIFDSTADDR;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGIFDSTADDR	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned IOCTL_SIOCGIFDSTADDR = SIOCGIFDSTADDR;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGIFENCAP	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCGIFENCAP = SIOCGIFENCAP;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGIFFLAGS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCGIFFLAGS = SIOCGIFFLAGS;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGIFFLAGS	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCGIFFLAGS = SIOCGIFFLAGS;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGIFFLAGS	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned IOCTL_SIOCGIFFLAGS = SIOCGIFFLAGS;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGIFGENERIC	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCGIFGENERIC = SIOCGIFGENERIC;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGIFHWADDR	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCGIFHWADDR = SIOCGIFHWADDR;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGIFINDEX	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCGIFINDEX = SIOCGIFINDEX;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGIFMAP	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCGIFMAP = SIOCGIFMAP;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGIFMEDIA	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCGIFMEDIA = SIOCGIFMEDIA;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGIFMEM	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCGIFMEM = SIOCGIFMEM;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGIFMETRIC	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCGIFMETRIC = SIOCGIFMETRIC;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGIFMETRIC	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCGIFMETRIC = SIOCGIFMETRIC;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGIFMETRIC	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned IOCTL_SIOCGIFMETRIC = SIOCGIFMETRIC;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGIFMTU	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCGIFMTU = SIOCGIFMTU;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGIFMTU	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCGIFMTU = SIOCGIFMTU;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGIFMTU	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned IOCTL_SIOCGIFMTU = SIOCGIFMTU;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGIFNAME	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCGIFNAME = SIOCGIFNAME;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGIFNETMASK	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCGIFNETMASK = SIOCGIFNETMASK;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGIFNETMASK	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCGIFNETMASK = SIOCGIFNETMASK;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGIFNETMASK	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned IOCTL_SIOCGIFNETMASK = SIOCGIFNETMASK;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGIFPDSTADDR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCGIFPDSTADDR = SIOCGIFPDSTADDR;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGIFPSRCADDR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCGIFPSRCADDR = SIOCGIFPSRCADDR;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGIFSLAVE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCGIFSLAVE = SIOCGIFSLAVE;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGLIFADDR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCGLIFADDR = SIOCGLIFADDR;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGLIFPHYADDR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCGLIFPHYADDR = SIOCGLIFPHYADDR;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGLINKSTR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCGLINKSTR = SIOCGLINKSTR;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGLOWAT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCGLOWAT = SIOCGLOWAT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGNATL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCGNATL = SIOCGNATL;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGNATS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCGNATS = SIOCGNATS;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGPGRP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCGPGRP = SIOCGPGRP;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGPGRP	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCGPGRP = SIOCGPGRP;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGPGRP	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned IOCTL_SIOCGPGRP = SIOCGPGRP;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGPPPCSTATS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCGPPPCSTATS = SIOCGPPPCSTATS;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGPPPSTATS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCGPPPSTATS = SIOCGPPPSTATS;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGPVCSIF	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCGPVCSIF = SIOCGPVCSIF;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGPVCTX	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCGPVCTX = SIOCGPVCTX;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGRARP	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCGRARP = SIOCGRARP;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGRAYSIGLEV	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCGRAYSIGLEV = SIOCGRAYSIGLEV;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGSTAMP	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCGSTAMP = SIOCGSTAMP;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCGVH	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCGVH = SIOCGVH;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCIFCREATE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCIFCREATE = SIOCIFCREATE;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCIFDESTROY	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCIFDESTROY = SIOCIFDESTROY;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCIFGCLONERS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCIFGCLONERS = SIOCIFGCLONERS;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCINITIFADDR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCINITIFADDR = SIOCINITIFADDR;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCIPXCFGDATA	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCIPXCFGDATA = SIOCIPXCFGDATA;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCNBTINFO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCNBTINFO = SIOCNBTINFO;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCNRDECOBS	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCNRDECOBS = SIOCNRDECOBS;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCNRGETPARMS	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCNRGETPARMS = SIOCNRGETPARMS;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCNRRTCTL	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCNRRTCTL = SIOCNRRTCTL;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCNRSETPARMS	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCNRSETPARMS = SIOCNRSETPARMS;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCPURGENAT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCPURGENAT = SIOCPURGENAT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCRAWATM	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCRAWATM = SIOCRAWATM;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCRMNAT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCRMNAT = SIOCRMNAT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSARP	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCSARP = SIOCSARP;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSBTFLAGS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCSBTFLAGS = SIOCSBTFLAGS;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSBTPOLICY	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCSBTPOLICY = SIOCSBTPOLICY;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSBTPTYPE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCSBTPTYPE = SIOCSBTPTYPE;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSBTSCOMTU	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCSBTSCOMTU = SIOCSBTSCOMTU;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSCNWDOMAIN	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCSCNWDOMAIN = SIOCSCNWDOMAIN;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSCNWKEY	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCSCNWKEY = SIOCSCNWKEY;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSDRVSPEC	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCSDRVSPEC = SIOCSDRVSPEC;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSETPFSYNC	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCSETPFSYNC = SIOCSETPFSYNC;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSHIWAT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCSHIWAT = SIOCSHIWAT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSIFADDR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCSIFADDR = SIOCSIFADDR;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSIFADDR	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCSIFADDR = SIOCSIFADDR;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSIFADDR	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned IOCTL_SIOCSIFADDR = SIOCSIFADDR;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSIFADDRPREF	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCSIFADDRPREF = SIOCSIFADDRPREF;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSIFBRDADDR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCSIFBRDADDR = SIOCSIFBRDADDR;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSIFBRDADDR	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCSIFBRDADDR = SIOCSIFBRDADDR;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSIFBRDADDR	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned IOCTL_SIOCSIFBRDADDR = SIOCSIFBRDADDR;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSIFCAP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCSIFCAP = SIOCSIFCAP;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSIFDSTADDR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCSIFDSTADDR = SIOCSIFDSTADDR;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSIFDSTADDR	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCSIFDSTADDR = SIOCSIFDSTADDR;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSIFDSTADDR	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned IOCTL_SIOCSIFDSTADDR = SIOCSIFDSTADDR;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSIFENCAP	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCSIFENCAP = SIOCSIFENCAP;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSIFFLAGS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCSIFFLAGS = SIOCSIFFLAGS;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSIFFLAGS	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCSIFFLAGS = SIOCSIFFLAGS;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSIFFLAGS	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned IOCTL_SIOCSIFFLAGS = SIOCSIFFLAGS;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSIFGENERIC	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCSIFGENERIC = SIOCSIFGENERIC;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSIFHWADDR	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCSIFHWADDR = SIOCSIFHWADDR;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSIFINFO_FLAGS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCSIFINFO_FLAGS = SIOCSIFINFO_FLAGS;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSIFLINK	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCSIFLINK = SIOCSIFLINK;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSIFMAP	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCSIFMAP = SIOCSIFMAP;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSIFMEDIA	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCSIFMEDIA = SIOCSIFMEDIA;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSIFMEM	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCSIFMEM = SIOCSIFMEM;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSIFMETRIC	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCSIFMETRIC = SIOCSIFMETRIC;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSIFMETRIC	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCSIFMETRIC = SIOCSIFMETRIC;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSIFMETRIC	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned IOCTL_SIOCSIFMETRIC = SIOCSIFMETRIC;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSIFMTU	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCSIFMTU = SIOCSIFMTU;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSIFMTU	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCSIFMTU = SIOCSIFMTU;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSIFMTU	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned IOCTL_SIOCSIFMTU = SIOCSIFMTU;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSIFNETMASK	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCSIFNETMASK = SIOCSIFNETMASK;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSIFNETMASK	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCSIFNETMASK = SIOCSIFNETMASK;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSIFNETMASK	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned IOCTL_SIOCSIFNETMASK = SIOCSIFNETMASK;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSIFPHYADDR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCSIFPHYADDR = SIOCSIFPHYADDR;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSIFSLAVE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCSIFSLAVE = SIOCSIFSLAVE;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSLIFPHYADDR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCSLIFPHYADDR = SIOCSLIFPHYADDR;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSLINKSTR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCSLINKSTR = SIOCSLINKSTR;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSLOWAT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCSLOWAT = SIOCSLOWAT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSPGRP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCSPGRP = SIOCSPGRP;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSPGRP	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCSPGRP = SIOCSPGRP;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSPGRP	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned IOCTL_SIOCSPGRP = SIOCSPGRP;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSPVCSIF	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCSPVCSIF = SIOCSPVCSIF;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSPVCTX	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCSPVCTX = SIOCSPVCTX;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSRARP	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SIOCSRARP = SIOCSRARP;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCSVH	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCSVH = SIOCSVH;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCZBTSTATS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCZBTSTATS = SIOCZBTSTATS;$/;"	m	namespace:__sanitizer	file:
IOCTL_SIOCZIFDATA	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SIOCZIFDATA = SIOCZIFDATA;$/;"	m	namespace:__sanitizer	file:
IOCTL_SLIOCGUNIT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SLIOCGUNIT = SLIOCGUNIT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SMBIOC_LOOKUP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SMBIOC_LOOKUP = SMBIOC_LOOKUP;$/;"	m	namespace:__sanitizer	file:
IOCTL_SMBIOC_OPENSESSION	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SMBIOC_OPENSESSION = SMBIOC_OPENSESSION;$/;"	m	namespace:__sanitizer	file:
IOCTL_SMBIOC_OPENSHARE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SMBIOC_OPENSHARE = SMBIOC_OPENSHARE;$/;"	m	namespace:__sanitizer	file:
IOCTL_SMBIOC_READ	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SMBIOC_READ = SMBIOC_READ;$/;"	m	namespace:__sanitizer	file:
IOCTL_SMBIOC_REQUEST	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SMBIOC_REQUEST = SMBIOC_REQUEST;$/;"	m	namespace:__sanitizer	file:
IOCTL_SMBIOC_SETFLAGS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SMBIOC_SETFLAGS = SMBIOC_SETFLAGS;$/;"	m	namespace:__sanitizer	file:
IOCTL_SMBIOC_WRITE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SMBIOC_WRITE = SMBIOC_WRITE;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_AUDIOINFO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SNDCTL_AUDIOINFO = SNDCTL_AUDIOINFO;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_COPR_HALT	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_COPR_HALT = IOCTL_NOT_PRESENT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_COPR_HALT	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_COPR_HALT = SNDCTL_COPR_HALT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_COPR_LOAD	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_COPR_LOAD = IOCTL_NOT_PRESENT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_COPR_LOAD	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_COPR_LOAD = SNDCTL_COPR_LOAD;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_COPR_RCODE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_COPR_RCODE = IOCTL_NOT_PRESENT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_COPR_RCODE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_COPR_RCODE = SNDCTL_COPR_RCODE;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_COPR_RCVMSG	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_COPR_RCVMSG = IOCTL_NOT_PRESENT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_COPR_RCVMSG	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_COPR_RCVMSG = SNDCTL_COPR_RCVMSG;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_COPR_RDATA	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_COPR_RDATA = IOCTL_NOT_PRESENT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_COPR_RDATA	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_COPR_RDATA = SNDCTL_COPR_RDATA;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_COPR_RESET	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_COPR_RESET = IOCTL_NOT_PRESENT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_COPR_RESET	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_COPR_RESET = SNDCTL_COPR_RESET;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_COPR_RUN	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_COPR_RUN = IOCTL_NOT_PRESENT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_COPR_RUN	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_COPR_RUN = SNDCTL_COPR_RUN;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_COPR_SENDMSG	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_COPR_SENDMSG = IOCTL_NOT_PRESENT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_COPR_SENDMSG	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_COPR_SENDMSG = SNDCTL_COPR_SENDMSG;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_COPR_WCODE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_COPR_WCODE = IOCTL_NOT_PRESENT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_COPR_WCODE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_COPR_WCODE = SNDCTL_COPR_WCODE;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_COPR_WDATA	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_COPR_WDATA = IOCTL_NOT_PRESENT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_COPR_WDATA	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_COPR_WDATA = SNDCTL_COPR_WDATA;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_DSP_CHANNELS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SNDCTL_DSP_CHANNELS = SNDCTL_DSP_CHANNELS;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_DSP_GETBLKSIZE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SNDCTL_DSP_GETBLKSIZE = SNDCTL_DSP_GETBLKSIZE;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_DSP_GETBLKSIZE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_DSP_GETBLKSIZE = SNDCTL_DSP_GETBLKSIZE;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_DSP_GETCAPS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SNDCTL_DSP_GETCAPS = SNDCTL_DSP_GETCAPS;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_DSP_GETFMTS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SNDCTL_DSP_GETFMTS = SNDCTL_DSP_GETFMTS;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_DSP_GETFMTS	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_DSP_GETFMTS = SNDCTL_DSP_GETFMTS;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_DSP_GETIPTR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SNDCTL_DSP_GETIPTR = SNDCTL_DSP_GETIPTR;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_DSP_GETISPACE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SNDCTL_DSP_GETISPACE = SNDCTL_DSP_GETISPACE;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_DSP_GETISPACE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_DSP_GETISPACE = SNDCTL_DSP_GETISPACE;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_DSP_GETODELAY	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SNDCTL_DSP_GETODELAY = SNDCTL_DSP_GETODELAY;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_DSP_GETOPTR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SNDCTL_DSP_GETOPTR = SNDCTL_DSP_GETOPTR;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_DSP_GETOSPACE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SNDCTL_DSP_GETOSPACE = SNDCTL_DSP_GETOSPACE;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_DSP_GETOSPACE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_DSP_GETOSPACE = SNDCTL_DSP_GETOSPACE;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_DSP_GETPLAYVOL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SNDCTL_DSP_GETPLAYVOL = SNDCTL_DSP_GETPLAYVOL;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_DSP_GETRECVOL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SNDCTL_DSP_GETRECVOL = SNDCTL_DSP_GETRECVOL;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_DSP_GETTRIGGER	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SNDCTL_DSP_GETTRIGGER = SNDCTL_DSP_GETTRIGGER;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_DSP_MAPINBUF	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SNDCTL_DSP_MAPINBUF = SNDCTL_DSP_MAPINBUF;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_DSP_MAPOUTBUF	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SNDCTL_DSP_MAPOUTBUF = SNDCTL_DSP_MAPOUTBUF;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_DSP_NONBLOCK	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SNDCTL_DSP_NONBLOCK = SNDCTL_DSP_NONBLOCK;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_DSP_NONBLOCK	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_DSP_NONBLOCK = SNDCTL_DSP_NONBLOCK;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_DSP_POST	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SNDCTL_DSP_POST = SNDCTL_DSP_POST;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_DSP_POST	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_DSP_POST = SNDCTL_DSP_POST;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_DSP_PROFILE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SNDCTL_DSP_PROFILE = SNDCTL_DSP_PROFILE;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_DSP_RESET	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SNDCTL_DSP_RESET = SNDCTL_DSP_RESET;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_DSP_RESET	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_DSP_RESET = SNDCTL_DSP_RESET;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_DSP_SETDUPLEX	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SNDCTL_DSP_SETDUPLEX = SNDCTL_DSP_SETDUPLEX;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_DSP_SETFMT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SNDCTL_DSP_SETFMT = SNDCTL_DSP_SETFMT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_DSP_SETFMT	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_DSP_SETFMT = SNDCTL_DSP_SETFMT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_DSP_SETFRAGMENT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SNDCTL_DSP_SETFRAGMENT = SNDCTL_DSP_SETFRAGMENT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_DSP_SETFRAGMENT	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_DSP_SETFRAGMENT = SNDCTL_DSP_SETFRAGMENT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_DSP_SETPLAYVOL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SNDCTL_DSP_SETPLAYVOL = SNDCTL_DSP_SETPLAYVOL;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_DSP_SETRECVOL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SNDCTL_DSP_SETRECVOL = SNDCTL_DSP_SETRECVOL;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_DSP_SETSYNCRO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SNDCTL_DSP_SETSYNCRO = SNDCTL_DSP_SETSYNCRO;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_DSP_SETTRIGGER	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SNDCTL_DSP_SETTRIGGER = SNDCTL_DSP_SETTRIGGER;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_DSP_SILENCE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SNDCTL_DSP_SILENCE = SNDCTL_DSP_SILENCE;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_DSP_SKIP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SNDCTL_DSP_SKIP = SNDCTL_DSP_SKIP;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_DSP_SPEED	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SNDCTL_DSP_SPEED = SNDCTL_DSP_SPEED;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_DSP_SPEED	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_DSP_SPEED = SNDCTL_DSP_SPEED;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_DSP_STEREO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SNDCTL_DSP_STEREO = SNDCTL_DSP_STEREO;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_DSP_STEREO	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_DSP_STEREO = SNDCTL_DSP_STEREO;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_DSP_SUBDIVIDE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SNDCTL_DSP_SUBDIVIDE = SNDCTL_DSP_SUBDIVIDE;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_DSP_SUBDIVIDE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_DSP_SUBDIVIDE = SNDCTL_DSP_SUBDIVIDE;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_DSP_SYNC	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SNDCTL_DSP_SYNC = SNDCTL_DSP_SYNC;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_DSP_SYNC	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_DSP_SYNC = SNDCTL_DSP_SYNC;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_ENGINEINFO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SNDCTL_ENGINEINFO = SNDCTL_ENGINEINFO;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_FM_4OP_ENABLE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_FM_4OP_ENABLE = SNDCTL_FM_4OP_ENABLE;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_FM_LOAD_INSTR	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_FM_LOAD_INSTR = SNDCTL_FM_LOAD_INSTR;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_MIDI_INFO	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_MIDI_INFO = SNDCTL_MIDI_INFO;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_MIDI_PRETIME	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_MIDI_PRETIME = SNDCTL_MIDI_PRETIME;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_SEQ_CTRLRATE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_SEQ_CTRLRATE = SNDCTL_SEQ_CTRLRATE;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_SEQ_GETINCOUNT	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_SEQ_GETINCOUNT = SNDCTL_SEQ_GETINCOUNT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_SEQ_GETOUTCOUNT	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_SEQ_GETOUTCOUNT = SNDCTL_SEQ_GETOUTCOUNT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_SEQ_NRMIDIS	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_SEQ_NRMIDIS = SNDCTL_SEQ_NRMIDIS;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_SEQ_NRSYNTHS	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_SEQ_NRSYNTHS = SNDCTL_SEQ_NRSYNTHS;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_SEQ_OUTOFBAND	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_SEQ_OUTOFBAND = SNDCTL_SEQ_OUTOFBAND;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_SEQ_PANIC	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_SEQ_PANIC = SNDCTL_SEQ_PANIC;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_SEQ_PERCMODE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_SEQ_PERCMODE = SNDCTL_SEQ_PERCMODE;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_SEQ_RESET	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_SEQ_RESET = SNDCTL_SEQ_RESET;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_SEQ_RESETSAMPLES	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_SEQ_RESETSAMPLES = SNDCTL_SEQ_RESETSAMPLES;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_SEQ_SYNC	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_SEQ_SYNC = SNDCTL_SEQ_SYNC;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_SEQ_TESTMIDI	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_SEQ_TESTMIDI = SNDCTL_SEQ_TESTMIDI;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_SEQ_THRESHOLD	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_SEQ_THRESHOLD = SNDCTL_SEQ_THRESHOLD;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_SYNTH_INFO	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_SYNTH_INFO = SNDCTL_SYNTH_INFO;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_SYNTH_MEMAVL	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_SYNTH_MEMAVL = SNDCTL_SYNTH_MEMAVL;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_SYSINFO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SNDCTL_SYSINFO = SNDCTL_SYSINFO;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_TMR_CONTINUE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_TMR_CONTINUE = SNDCTL_TMR_CONTINUE;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_TMR_METRONOME	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_TMR_METRONOME = SNDCTL_TMR_METRONOME;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_TMR_SELECT	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_TMR_SELECT = SNDCTL_TMR_SELECT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_TMR_SOURCE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_TMR_SOURCE = SNDCTL_TMR_SOURCE;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_TMR_START	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_TMR_START = SNDCTL_TMR_START;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_TMR_STOP	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_TMR_STOP = SNDCTL_TMR_STOP;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_TMR_TEMPO	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_TMR_TEMPO = SNDCTL_TMR_TEMPO;$/;"	m	namespace:__sanitizer	file:
IOCTL_SNDCTL_TMR_TIMEBASE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SNDCTL_TMR_TIMEBASE = SNDCTL_TMR_TIMEBASE;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_MIXER_INFO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SOUND_MIXER_INFO = SOUND_MIXER_INFO;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_MIXER_READ_ALTPCM	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_MIXER_READ_ALTPCM = SOUND_MIXER_READ_ALTPCM;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_MIXER_READ_BASS	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_MIXER_READ_BASS = SOUND_MIXER_READ_BASS;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_MIXER_READ_CAPS	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_MIXER_READ_CAPS = SOUND_MIXER_READ_CAPS;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_MIXER_READ_CD	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_MIXER_READ_CD = SOUND_MIXER_READ_CD;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_MIXER_READ_DEVMASK	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_MIXER_READ_DEVMASK = SOUND_MIXER_READ_DEVMASK;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_MIXER_READ_ENHANCE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_MIXER_READ_ENHANCE = SOUND_MIXER_READ_ENHANCE;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_MIXER_READ_IGAIN	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_MIXER_READ_IGAIN = SOUND_MIXER_READ_IGAIN;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_MIXER_READ_IMIX	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_MIXER_READ_IMIX = SOUND_MIXER_READ_IMIX;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_MIXER_READ_LINE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_MIXER_READ_LINE = SOUND_MIXER_READ_LINE;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_MIXER_READ_LINE1	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_MIXER_READ_LINE1 = SOUND_MIXER_READ_LINE1;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_MIXER_READ_LINE2	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_MIXER_READ_LINE2 = SOUND_MIXER_READ_LINE2;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_MIXER_READ_LINE3	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_MIXER_READ_LINE3 = SOUND_MIXER_READ_LINE3;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_MIXER_READ_LOUD	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_MIXER_READ_LOUD = SOUND_MIXER_READ_LOUD;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_MIXER_READ_MIC	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_MIXER_READ_MIC = SOUND_MIXER_READ_MIC;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_MIXER_READ_MUTE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_MIXER_READ_MUTE = SOUND_MIXER_READ_MUTE;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_MIXER_READ_OGAIN	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_MIXER_READ_OGAIN = SOUND_MIXER_READ_OGAIN;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_MIXER_READ_PCM	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_MIXER_READ_PCM = SOUND_MIXER_READ_PCM;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_MIXER_READ_RECLEV	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_MIXER_READ_RECLEV = SOUND_MIXER_READ_RECLEV;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_MIXER_READ_RECMASK	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_MIXER_READ_RECMASK = SOUND_MIXER_READ_RECMASK;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_MIXER_READ_RECSRC	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_MIXER_READ_RECSRC = SOUND_MIXER_READ_RECSRC;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_MIXER_READ_SPEAKER	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_MIXER_READ_SPEAKER = SOUND_MIXER_READ_SPEAKER;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_MIXER_READ_STEREODEVS	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_MIXER_READ_STEREODEVS = SOUND_MIXER_READ_STEREODEVS;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_MIXER_READ_SYNTH	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_MIXER_READ_SYNTH = SOUND_MIXER_READ_SYNTH;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_MIXER_READ_TREBLE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_MIXER_READ_TREBLE = SOUND_MIXER_READ_TREBLE;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_MIXER_READ_VOLUME	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_MIXER_READ_VOLUME = SOUND_MIXER_READ_VOLUME;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_MIXER_WRITE_ALTPCM	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_MIXER_WRITE_ALTPCM = SOUND_MIXER_WRITE_ALTPCM;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_MIXER_WRITE_BASS	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_MIXER_WRITE_BASS = SOUND_MIXER_WRITE_BASS;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_MIXER_WRITE_CD	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_MIXER_WRITE_CD = SOUND_MIXER_WRITE_CD;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_MIXER_WRITE_ENHANCE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_MIXER_WRITE_ENHANCE = SOUND_MIXER_WRITE_ENHANCE;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_MIXER_WRITE_IGAIN	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_MIXER_WRITE_IGAIN = SOUND_MIXER_WRITE_IGAIN;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_MIXER_WRITE_IMIX	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_MIXER_WRITE_IMIX = SOUND_MIXER_WRITE_IMIX;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_MIXER_WRITE_LINE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_MIXER_WRITE_LINE = SOUND_MIXER_WRITE_LINE;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_MIXER_WRITE_LINE1	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_MIXER_WRITE_LINE1 = SOUND_MIXER_WRITE_LINE1;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_MIXER_WRITE_LINE2	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_MIXER_WRITE_LINE2 = SOUND_MIXER_WRITE_LINE2;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_MIXER_WRITE_LINE3	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_MIXER_WRITE_LINE3 = SOUND_MIXER_WRITE_LINE3;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_MIXER_WRITE_LOUD	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_MIXER_WRITE_LOUD = SOUND_MIXER_WRITE_LOUD;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_MIXER_WRITE_MIC	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_MIXER_WRITE_MIC = SOUND_MIXER_WRITE_MIC;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_MIXER_WRITE_MUTE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_MIXER_WRITE_MUTE = SOUND_MIXER_WRITE_MUTE;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_MIXER_WRITE_OGAIN	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_MIXER_WRITE_OGAIN = SOUND_MIXER_WRITE_OGAIN;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_MIXER_WRITE_PCM	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_MIXER_WRITE_PCM = SOUND_MIXER_WRITE_PCM;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_MIXER_WRITE_RECLEV	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_MIXER_WRITE_RECLEV = SOUND_MIXER_WRITE_RECLEV;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_MIXER_WRITE_RECSRC	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_MIXER_WRITE_RECSRC = SOUND_MIXER_WRITE_RECSRC;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_MIXER_WRITE_SPEAKER	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_MIXER_WRITE_SPEAKER = SOUND_MIXER_WRITE_SPEAKER;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_MIXER_WRITE_SYNTH	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_MIXER_WRITE_SYNTH = SOUND_MIXER_WRITE_SYNTH;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_MIXER_WRITE_TREBLE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_MIXER_WRITE_TREBLE = SOUND_MIXER_WRITE_TREBLE;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_MIXER_WRITE_VOLUME	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_MIXER_WRITE_VOLUME = SOUND_MIXER_WRITE_VOLUME;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_OLD_MIXER_INFO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SOUND_OLD_MIXER_INFO = SOUND_OLD_MIXER_INFO;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_PCM_READ_BITS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SOUND_PCM_READ_BITS = SOUND_PCM_READ_BITS;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_PCM_READ_BITS	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_PCM_READ_BITS = IOCTL_NOT_PRESENT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_PCM_READ_BITS	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_PCM_READ_BITS = SOUND_PCM_READ_BITS;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_PCM_READ_CHANNELS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SOUND_PCM_READ_CHANNELS = SOUND_PCM_READ_CHANNELS;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_PCM_READ_CHANNELS	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_PCM_READ_CHANNELS = IOCTL_NOT_PRESENT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_PCM_READ_CHANNELS	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_PCM_READ_CHANNELS = SOUND_PCM_READ_CHANNELS;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_PCM_READ_FILTER	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SOUND_PCM_READ_FILTER = SOUND_PCM_READ_FILTER;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_PCM_READ_FILTER	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_PCM_READ_FILTER = IOCTL_NOT_PRESENT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_PCM_READ_FILTER	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_PCM_READ_FILTER = SOUND_PCM_READ_FILTER;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_PCM_READ_RATE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SOUND_PCM_READ_RATE = SOUND_PCM_READ_RATE;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_PCM_READ_RATE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_PCM_READ_RATE = IOCTL_NOT_PRESENT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_PCM_READ_RATE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_PCM_READ_RATE = SOUND_PCM_READ_RATE;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_PCM_WRITE_CHANNELS	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_PCM_WRITE_CHANNELS = IOCTL_NOT_PRESENT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_PCM_WRITE_CHANNELS	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_PCM_WRITE_CHANNELS = SOUND_PCM_WRITE_CHANNELS;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_PCM_WRITE_FILTER	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SOUND_PCM_WRITE_FILTER = SOUND_PCM_WRITE_FILTER;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_PCM_WRITE_FILTER	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_PCM_WRITE_FILTER = IOCTL_NOT_PRESENT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SOUND_PCM_WRITE_FILTER	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_SOUND_PCM_WRITE_FILTER = SOUND_PCM_WRITE_FILTER;$/;"	m	namespace:__sanitizer	file:
IOCTL_SPKRGETVOL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SPKRGETVOL = SPKRGETVOL;$/;"	m	namespace:__sanitizer	file:
IOCTL_SPKRSETVOL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SPKRSETVOL = SPKRSETVOL;$/;"	m	namespace:__sanitizer	file:
IOCTL_SPKRTONE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SPKRTONE = SPKRTONE;$/;"	m	namespace:__sanitizer	file:
IOCTL_SPKRTUNE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SPKRTUNE = SPKRTUNE;$/;"	m	namespace:__sanitizer	file:
IOCTL_SPPPGETAUTHCFG	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SPPPGETAUTHCFG = SPPPGETAUTHCFG;$/;"	m	namespace:__sanitizer	file:
IOCTL_SPPPGETAUTHFAILURES	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SPPPGETAUTHFAILURES = SPPPGETAUTHFAILURES;$/;"	m	namespace:__sanitizer	file:
IOCTL_SPPPGETDNSADDRS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SPPPGETDNSADDRS = SPPPGETDNSADDRS;$/;"	m	namespace:__sanitizer	file:
IOCTL_SPPPGETDNSOPTS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SPPPGETDNSOPTS = SPPPGETDNSOPTS;$/;"	m	namespace:__sanitizer	file:
IOCTL_SPPPGETIDLETO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SPPPGETIDLETO = SPPPGETIDLETO;$/;"	m	namespace:__sanitizer	file:
IOCTL_SPPPGETKEEPALIVE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SPPPGETKEEPALIVE = SPPPGETKEEPALIVE;$/;"	m	namespace:__sanitizer	file:
IOCTL_SPPPGETLCPCFG	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SPPPGETLCPCFG = SPPPGETLCPCFG;$/;"	m	namespace:__sanitizer	file:
IOCTL_SPPPGETSTATUS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SPPPGETSTATUS = SPPPGETSTATUS;$/;"	m	namespace:__sanitizer	file:
IOCTL_SPPPGETSTATUSNCP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SPPPGETSTATUSNCP = SPPPGETSTATUSNCP;$/;"	m	namespace:__sanitizer	file:
IOCTL_SPPPSETAUTHCFG	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SPPPSETAUTHCFG = SPPPSETAUTHCFG;$/;"	m	namespace:__sanitizer	file:
IOCTL_SPPPSETAUTHFAILURE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SPPPSETAUTHFAILURE = SPPPSETAUTHFAILURE;$/;"	m	namespace:__sanitizer	file:
IOCTL_SPPPSETDNSOPTS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SPPPSETDNSOPTS = SPPPSETDNSOPTS;$/;"	m	namespace:__sanitizer	file:
IOCTL_SPPPSETIDLETO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SPPPSETIDLETO = SPPPSETIDLETO;$/;"	m	namespace:__sanitizer	file:
IOCTL_SPPPSETKEEPALIVE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SPPPSETKEEPALIVE = SPPPSETKEEPALIVE;$/;"	m	namespace:__sanitizer	file:
IOCTL_SPPPSETLCPCFG	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SPPPSETLCPCFG = SPPPSETLCPCFG;$/;"	m	namespace:__sanitizer	file:
IOCTL_SRT_DEBUG	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SRT_DEBUG = SRT_DEBUG;$/;"	m	namespace:__sanitizer	file:
IOCTL_SRT_DELRT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SRT_DELRT = SRT_DELRT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SRT_GETNRT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SRT_GETNRT = SRT_GETNRT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SRT_GETRT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SRT_GETRT = SRT_GETRT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SRT_GFLAGS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SRT_GFLAGS = SRT_GFLAGS;$/;"	m	namespace:__sanitizer	file:
IOCTL_SRT_SETRT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SRT_SETRT = SRT_SETRT;$/;"	m	namespace:__sanitizer	file:
IOCTL_SRT_SFLAGS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SRT_SFLAGS = SRT_SFLAGS;$/;"	m	namespace:__sanitizer	file:
IOCTL_SRT_SGFLAGS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SRT_SGFLAGS = SRT_SGFLAGS;$/;"	m	namespace:__sanitizer	file:
IOCTL_STICIO_GXINFO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_STICIO_GXINFO = STICIO_GXINFO;$/;"	m	namespace:__sanitizer	file:
IOCTL_STICIO_RESET	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_STICIO_RESET = STICIO_RESET;$/;"	m	namespace:__sanitizer	file:
IOCTL_STICIO_STARTQ	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_STICIO_STARTQ = STICIO_STARTQ;$/;"	m	namespace:__sanitizer	file:
IOCTL_STICIO_STOPQ	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_STICIO_STOPQ = STICIO_STOPQ;$/;"	m	namespace:__sanitizer	file:
IOCTL_SUN_DKIOCGGEOM	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SUN_DKIOCGGEOM = SUN_DKIOCGGEOM;$/;"	m	namespace:__sanitizer	file:
IOCTL_SUN_DKIOCGPART	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SUN_DKIOCGPART = SUN_DKIOCGPART;$/;"	m	namespace:__sanitizer	file:
IOCTL_SUN_DKIOCINFO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_SUN_DKIOCINFO = SUN_DKIOCINFO;$/;"	m	namespace:__sanitizer	file:
IOCTL_TAPGIFNAME	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TAPGIFNAME = TAPGIFNAME;$/;"	m	namespace:__sanitizer	file:
IOCTL_TCFLSH	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_TCFLSH = TCFLSH;$/;"	m	namespace:__sanitizer	file:
IOCTL_TCGETA	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_TCGETA = TCGETA;$/;"	m	namespace:__sanitizer	file:
IOCTL_TCGETS	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_TCGETS = TCGETS;$/;"	m	namespace:__sanitizer	file:
IOCTL_TCSBRK	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_TCSBRK = TCSBRK;$/;"	m	namespace:__sanitizer	file:
IOCTL_TCSBRKP	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_TCSBRKP = TCSBRKP;$/;"	m	namespace:__sanitizer	file:
IOCTL_TCSETA	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_TCSETA = TCSETA;$/;"	m	namespace:__sanitizer	file:
IOCTL_TCSETAF	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_TCSETAF = TCSETAF;$/;"	m	namespace:__sanitizer	file:
IOCTL_TCSETAW	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_TCSETAW = TCSETAW;$/;"	m	namespace:__sanitizer	file:
IOCTL_TCSETS	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_TCSETS = TCSETS;$/;"	m	namespace:__sanitizer	file:
IOCTL_TCSETSF	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_TCSETSF = TCSETSF;$/;"	m	namespace:__sanitizer	file:
IOCTL_TCSETSW	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_TCSETSW = TCSETSW;$/;"	m	namespace:__sanitizer	file:
IOCTL_TCXONC	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_TCXONC = TCXONC;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCCBRK	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCCBRK = TIOCCBRK;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCCDTR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCCDTR = TIOCCDTR;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCCONS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCCONS = TIOCCONS;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCCONS	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_TIOCCONS = TIOCCONS;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCDCDTIMESTAMP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCDCDTIMESTAMP = TIOCDCDTIMESTAMP;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCDRAIN	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCDRAIN = TIOCDRAIN;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCEXCL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCEXCL = TIOCEXCL;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCEXCL	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_TIOCEXCL = TIOCEXCL;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCEXCL	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned IOCTL_TIOCEXCL = TIOCEXCL;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCEXT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCEXT = TIOCEXT;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCFLUSH	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCFLUSH = TIOCFLUSH;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCGETA	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCGETA = TIOCGETA;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCGETC	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCGETC = TIOCGETC;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCGETD	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCGETD = TIOCGETD;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCGETD	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_TIOCGETD = TIOCGETD;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCGETD	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned IOCTL_TIOCGETD = TIOCGETD;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCGETP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCGETP = TIOCGETP;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCGFLAGS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCGFLAGS = TIOCGFLAGS;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCGLCKTRMIOS	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_TIOCGLCKTRMIOS = TIOCGLCKTRMIOS;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCGLINED	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCGLINED = TIOCGLINED;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCGLTC	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCGLTC = TIOCGLTC;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCGPGRP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCGPGRP = TIOCGPGRP;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCGPGRP	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_TIOCGPGRP = TIOCGPGRP;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCGPGRP	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned IOCTL_TIOCGPGRP = TIOCGPGRP;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCGQSIZE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCGQSIZE = TIOCGQSIZE;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCGRANTPT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCGRANTPT = TIOCGRANTPT;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCGSERIAL	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_TIOCGSERIAL = TIOCGSERIAL;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCGSID	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCGSID = TIOCGSID;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCGSOFTCAR	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_TIOCGSOFTCAR = TIOCGSOFTCAR;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCGWINSZ	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCGWINSZ = TIOCGWINSZ;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCGWINSZ	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_TIOCGWINSZ = TIOCGWINSZ;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCGWINSZ	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned IOCTL_TIOCGWINSZ = TIOCGWINSZ;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCHPCL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCHPCL = TIOCHPCL;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCINQ	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_TIOCINQ = TIOCINQ;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCLBIC	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCLBIC = TIOCLBIC;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCLBIS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCLBIS = TIOCLBIS;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCLGET	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCLGET = TIOCLGET;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCLINUX	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_TIOCLINUX = TIOCLINUX;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCLSET	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCLSET = TIOCLSET;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCMBIC	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCMBIC = TIOCMBIC;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCMBIC	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_TIOCMBIC = TIOCMBIC;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCMBIC	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned IOCTL_TIOCMBIC = TIOCMBIC;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCMBIS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCMBIS = TIOCMBIS;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCMBIS	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_TIOCMBIS = TIOCMBIS;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCMBIS	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned IOCTL_TIOCMBIS = TIOCMBIS;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCMGET	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCMGET = TIOCMGET;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCMGET	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_TIOCMGET = TIOCMGET;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCMGET	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned IOCTL_TIOCMGET = TIOCMGET;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCMSET	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCMSET = TIOCMSET;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCMSET	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_TIOCMSET = TIOCMSET;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCMSET	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned IOCTL_TIOCMSET = TIOCMSET;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCNOTTY	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCNOTTY = TIOCNOTTY;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCNOTTY	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_TIOCNOTTY = TIOCNOTTY;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCNOTTY	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned IOCTL_TIOCNOTTY = TIOCNOTTY;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCNXCL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCNXCL = TIOCNXCL;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCNXCL	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_TIOCNXCL = TIOCNXCL;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCNXCL	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned IOCTL_TIOCNXCL = TIOCNXCL;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCOUTQ	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCOUTQ = TIOCOUTQ;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCOUTQ	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_TIOCOUTQ = TIOCOUTQ;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCOUTQ	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned IOCTL_TIOCOUTQ = TIOCOUTQ;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCPKT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCPKT = TIOCPKT;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCPKT	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_TIOCPKT = TIOCPKT;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCPKT	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned IOCTL_TIOCPKT = TIOCPKT;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCPTMGET	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCPTMGET = TIOCPTMGET;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCPTSNAME	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCPTSNAME = TIOCPTSNAME;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCRCVFRAME	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCRCVFRAME = TIOCRCVFRAME;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCREMOTE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCREMOTE = TIOCREMOTE;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCSBRK	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCSBRK = TIOCSBRK;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCSCTTY	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCSCTTY = TIOCSCTTY;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCSCTTY	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_TIOCSCTTY = TIOCSCTTY;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCSCTTY	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned IOCTL_TIOCSCTTY = TIOCSCTTY;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCSDTR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCSDTR = TIOCSDTR;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCSERCONFIG	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_TIOCSERCONFIG = TIOCSERCONFIG;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCSERGETLSR	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_TIOCSERGETLSR = TIOCSERGETLSR;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCSERGETMULTI	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_TIOCSERGETMULTI = TIOCSERGETMULTI;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCSERGWILD	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_TIOCSERGWILD = TIOCSERGWILD;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCSERSETMULTI	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_TIOCSERSETMULTI = TIOCSERSETMULTI;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCSERSWILD	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_TIOCSERSWILD = TIOCSERSWILD;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCSETA	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCSETA = TIOCSETA;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCSETAF	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCSETAF = TIOCSETAF;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCSETAW	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCSETAW = TIOCSETAW;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCSETC	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCSETC = TIOCSETC;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCSETD	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCSETD = TIOCSETD;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCSETD	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_TIOCSETD = TIOCSETD;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCSETD	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned IOCTL_TIOCSETD = TIOCSETD;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCSETN	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCSETN = TIOCSETN;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCSETP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCSETP = TIOCSETP;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCSFLAGS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCSFLAGS = TIOCSFLAGS;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCSIG	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCSIG = TIOCSIG;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCSLCKTRMIOS	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_TIOCSLCKTRMIOS = TIOCSLCKTRMIOS;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCSLINED	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCSLINED = TIOCSLINED;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCSLTC	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCSLTC = TIOCSLTC;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCSPGRP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCSPGRP = TIOCSPGRP;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCSPGRP	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_TIOCSPGRP = TIOCSPGRP;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCSPGRP	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned IOCTL_TIOCSPGRP = TIOCSPGRP;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCSQSIZE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCSQSIZE = TIOCSQSIZE;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCSSERIAL	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_TIOCSSERIAL = TIOCSSERIAL;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCSSOFTCAR	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_TIOCSSOFTCAR = TIOCSSOFTCAR;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCSTART	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCSTART = TIOCSTART;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCSTAT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCSTAT = TIOCSTAT;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCSTI	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCSTI = TIOCSTI;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCSTI	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_TIOCSTI = TIOCSTI;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCSTI	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned IOCTL_TIOCSTI = TIOCSTI;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCSTOP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCSTOP = TIOCSTOP;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCSWINSZ	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCSWINSZ = TIOCSWINSZ;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCSWINSZ	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_TIOCSWINSZ = TIOCSWINSZ;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCSWINSZ	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned IOCTL_TIOCSWINSZ = TIOCSWINSZ;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCUCNTL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCUCNTL = TIOCUCNTL;$/;"	m	namespace:__sanitizer	file:
IOCTL_TIOCXMTFRAME	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TIOCXMTFRAME = TIOCXMTFRAME;$/;"	m	namespace:__sanitizer	file:
IOCTL_TUNGDEBUG	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TUNGDEBUG = TUNGDEBUG;$/;"	m	namespace:__sanitizer	file:
IOCTL_TUNGIFHEAD	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TUNGIFHEAD = TUNGIFHEAD;$/;"	m	namespace:__sanitizer	file:
IOCTL_TUNSDEBUG	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TUNSDEBUG = TUNSDEBUG;$/;"	m	namespace:__sanitizer	file:
IOCTL_TUNSIFHEAD	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TUNSIFHEAD = TUNSIFHEAD;$/;"	m	namespace:__sanitizer	file:
IOCTL_TUNSIFMODE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TUNSIFMODE = TUNSIFMODE;$/;"	m	namespace:__sanitizer	file:
IOCTL_TUNSLMODE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TUNSLMODE = TUNSLMODE;$/;"	m	namespace:__sanitizer	file:
IOCTL_TVTUNER_GETAFC	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TVTUNER_GETAFC = TVTUNER_GETAFC;$/;"	m	namespace:__sanitizer	file:
IOCTL_TVTUNER_GETCHNL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TVTUNER_GETCHNL = TVTUNER_GETCHNL;$/;"	m	namespace:__sanitizer	file:
IOCTL_TVTUNER_GETCHNLSET	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TVTUNER_GETCHNLSET = TVTUNER_GETCHNLSET;$/;"	m	namespace:__sanitizer	file:
IOCTL_TVTUNER_GETFREQ	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TVTUNER_GETFREQ = TVTUNER_GETFREQ;$/;"	m	namespace:__sanitizer	file:
IOCTL_TVTUNER_GETSTATUS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TVTUNER_GETSTATUS = TVTUNER_GETSTATUS;$/;"	m	namespace:__sanitizer	file:
IOCTL_TVTUNER_GETTYPE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TVTUNER_GETTYPE = TVTUNER_GETTYPE;$/;"	m	namespace:__sanitizer	file:
IOCTL_TVTUNER_SETAFC	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TVTUNER_SETAFC = TVTUNER_SETAFC;$/;"	m	namespace:__sanitizer	file:
IOCTL_TVTUNER_SETCHNL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TVTUNER_SETCHNL = TVTUNER_SETCHNL;$/;"	m	namespace:__sanitizer	file:
IOCTL_TVTUNER_SETFREQ	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TVTUNER_SETFREQ = TVTUNER_SETFREQ;$/;"	m	namespace:__sanitizer	file:
IOCTL_TVTUNER_SETTYPE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TVTUNER_SETTYPE = TVTUNER_SETTYPE;$/;"	m	namespace:__sanitizer	file:
IOCTL_TWEIO_ADD_UNIT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TWEIO_ADD_UNIT = TWEIO_ADD_UNIT;$/;"	m	namespace:__sanitizer	file:
IOCTL_TWEIO_AEN_POLL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TWEIO_AEN_POLL = TWEIO_AEN_POLL;$/;"	m	namespace:__sanitizer	file:
IOCTL_TWEIO_AEN_WAIT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TWEIO_AEN_WAIT = TWEIO_AEN_WAIT;$/;"	m	namespace:__sanitizer	file:
IOCTL_TWEIO_COMMAND	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TWEIO_COMMAND = TWEIO_COMMAND;$/;"	m	namespace:__sanitizer	file:
IOCTL_TWEIO_DEL_UNIT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TWEIO_DEL_UNIT = TWEIO_DEL_UNIT;$/;"	m	namespace:__sanitizer	file:
IOCTL_TWEIO_GET_PARAM	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TWEIO_GET_PARAM = TWEIO_GET_PARAM;$/;"	m	namespace:__sanitizer	file:
IOCTL_TWEIO_RESET	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TWEIO_RESET = TWEIO_RESET;$/;"	m	namespace:__sanitizer	file:
IOCTL_TWEIO_SET_PARAM	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TWEIO_SET_PARAM = TWEIO_SET_PARAM;$/;"	m	namespace:__sanitizer	file:
IOCTL_TWEIO_STATS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_TWEIO_STATS = TWEIO_STATS;$/;"	m	namespace:__sanitizer	file:
IOCTL_UKYOPON_IDENTIFY	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_UKYOPON_IDENTIFY = UKYOPON_IDENTIFY;$/;"	m	namespace:__sanitizer	file:
IOCTL_URIO_RECV_COMMAND	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_URIO_RECV_COMMAND = URIO_RECV_COMMAND;$/;"	m	namespace:__sanitizer	file:
IOCTL_URIO_SEND_COMMAND	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_URIO_SEND_COMMAND = URIO_SEND_COMMAND;$/;"	m	namespace:__sanitizer	file:
IOCTL_USB_DEVICEINFO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_USB_DEVICEINFO = USB_DEVICEINFO;$/;"	m	namespace:__sanitizer	file:
IOCTL_USB_DEVICEINFO_OLD	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_USB_DEVICEINFO_OLD = USB_DEVICEINFO_OLD;$/;"	m	namespace:__sanitizer	file:
IOCTL_USB_DEVICESTATS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_USB_DEVICESTATS = USB_DEVICESTATS;$/;"	m	namespace:__sanitizer	file:
IOCTL_USB_DISCOVER	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_USB_DISCOVER = USB_DISCOVER;$/;"	m	namespace:__sanitizer	file:
IOCTL_USB_DO_REQUEST	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_USB_DO_REQUEST = USB_DO_REQUEST;$/;"	m	namespace:__sanitizer	file:
IOCTL_USB_GET_ALTINTERFACE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_USB_GET_ALTINTERFACE = USB_GET_ALTINTERFACE;$/;"	m	namespace:__sanitizer	file:
IOCTL_USB_GET_CM_OVER_DATA	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_USB_GET_CM_OVER_DATA = USB_GET_CM_OVER_DATA;$/;"	m	namespace:__sanitizer	file:
IOCTL_USB_GET_CONFIG	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_USB_GET_CONFIG = USB_GET_CONFIG;$/;"	m	namespace:__sanitizer	file:
IOCTL_USB_GET_CONFIG_DESC	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_USB_GET_CONFIG_DESC = USB_GET_CONFIG_DESC;$/;"	m	namespace:__sanitizer	file:
IOCTL_USB_GET_DEVICEINFO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_USB_GET_DEVICEINFO = USB_GET_DEVICEINFO;$/;"	m	namespace:__sanitizer	file:
IOCTL_USB_GET_DEVICEINFO_OLD	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_USB_GET_DEVICEINFO_OLD = USB_GET_DEVICEINFO_OLD;$/;"	m	namespace:__sanitizer	file:
IOCTL_USB_GET_DEVICE_DESC	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_USB_GET_DEVICE_DESC = USB_GET_DEVICE_DESC;$/;"	m	namespace:__sanitizer	file:
IOCTL_USB_GET_ENDPOINT_DESC	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_USB_GET_ENDPOINT_DESC = USB_GET_ENDPOINT_DESC;$/;"	m	namespace:__sanitizer	file:
IOCTL_USB_GET_FULL_DESC	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_USB_GET_FULL_DESC = USB_GET_FULL_DESC;$/;"	m	namespace:__sanitizer	file:
IOCTL_USB_GET_INTERFACE_DESC	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_USB_GET_INTERFACE_DESC = USB_GET_INTERFACE_DESC;$/;"	m	namespace:__sanitizer	file:
IOCTL_USB_GET_NO_ALT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_USB_GET_NO_ALT = USB_GET_NO_ALT;$/;"	m	namespace:__sanitizer	file:
IOCTL_USB_GET_REPORT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_USB_GET_REPORT = USB_GET_REPORT;$/;"	m	namespace:__sanitizer	file:
IOCTL_USB_GET_REPORT_DESC	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_USB_GET_REPORT_DESC = USB_GET_REPORT_DESC;$/;"	m	namespace:__sanitizer	file:
IOCTL_USB_GET_REPORT_ID	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_USB_GET_REPORT_ID = USB_GET_REPORT_ID;$/;"	m	namespace:__sanitizer	file:
IOCTL_USB_GET_STRING_DESC	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_USB_GET_STRING_DESC = USB_GET_STRING_DESC;$/;"	m	namespace:__sanitizer	file:
IOCTL_USB_REQUEST	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_USB_REQUEST = USB_REQUEST;$/;"	m	namespace:__sanitizer	file:
IOCTL_USB_SETDEBUG	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_USB_SETDEBUG = USB_SETDEBUG;$/;"	m	namespace:__sanitizer	file:
IOCTL_USB_SET_ALTINTERFACE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_USB_SET_ALTINTERFACE = USB_SET_ALTINTERFACE;$/;"	m	namespace:__sanitizer	file:
IOCTL_USB_SET_BULK_RA	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_USB_SET_BULK_RA = USB_SET_BULK_RA;$/;"	m	namespace:__sanitizer	file:
IOCTL_USB_SET_BULK_RA_OPT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_USB_SET_BULK_RA_OPT = USB_SET_BULK_RA_OPT;$/;"	m	namespace:__sanitizer	file:
IOCTL_USB_SET_BULK_WB	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_USB_SET_BULK_WB = USB_SET_BULK_WB;$/;"	m	namespace:__sanitizer	file:
IOCTL_USB_SET_BULK_WB_OPT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_USB_SET_BULK_WB_OPT = USB_SET_BULK_WB_OPT;$/;"	m	namespace:__sanitizer	file:
IOCTL_USB_SET_CM_OVER_DATA	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_USB_SET_CM_OVER_DATA = USB_SET_CM_OVER_DATA;$/;"	m	namespace:__sanitizer	file:
IOCTL_USB_SET_CONFIG	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_USB_SET_CONFIG = USB_SET_CONFIG;$/;"	m	namespace:__sanitizer	file:
IOCTL_USB_SET_IMMED	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_USB_SET_IMMED = USB_SET_IMMED;$/;"	m	namespace:__sanitizer	file:
IOCTL_USB_SET_REPORT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_USB_SET_REPORT = USB_SET_REPORT;$/;"	m	namespace:__sanitizer	file:
IOCTL_USB_SET_SHORT_XFER	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_USB_SET_SHORT_XFER = USB_SET_SHORT_XFER;$/;"	m	namespace:__sanitizer	file:
IOCTL_USB_SET_TIMEOUT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_USB_SET_TIMEOUT = USB_SET_TIMEOUT;$/;"	m	namespace:__sanitizer	file:
IOCTL_UTOPPYIOCANCEL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_UTOPPYIOCANCEL = UTOPPYIOCANCEL;$/;"	m	namespace:__sanitizer	file:
IOCTL_UTOPPYIODELETE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_UTOPPYIODELETE = UTOPPYIODELETE;$/;"	m	namespace:__sanitizer	file:
IOCTL_UTOPPYIOMKDIR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_UTOPPYIOMKDIR = UTOPPYIOMKDIR;$/;"	m	namespace:__sanitizer	file:
IOCTL_UTOPPYIOREADDIR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_UTOPPYIOREADDIR = UTOPPYIOREADDIR;$/;"	m	namespace:__sanitizer	file:
IOCTL_UTOPPYIOREADFILE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_UTOPPYIOREADFILE = UTOPPYIOREADFILE;$/;"	m	namespace:__sanitizer	file:
IOCTL_UTOPPYIOREBOOT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_UTOPPYIOREBOOT = UTOPPYIOREBOOT;$/;"	m	namespace:__sanitizer	file:
IOCTL_UTOPPYIORENAME	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_UTOPPYIORENAME = UTOPPYIORENAME;$/;"	m	namespace:__sanitizer	file:
IOCTL_UTOPPYIOSTATS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_UTOPPYIOSTATS = UTOPPYIOSTATS;$/;"	m	namespace:__sanitizer	file:
IOCTL_UTOPPYIOTURBO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_UTOPPYIOTURBO = UTOPPYIOTURBO;$/;"	m	namespace:__sanitizer	file:
IOCTL_UTOPPYIOWRITEFILE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_UTOPPYIOWRITEFILE = UTOPPYIOWRITEFILE;$/;"	m	namespace:__sanitizer	file:
IOCTL_VERIEXEC_DELETE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VERIEXEC_DELETE = VERIEXEC_DELETE;$/;"	m	namespace:__sanitizer	file:
IOCTL_VERIEXEC_DUMP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VERIEXEC_DUMP = VERIEXEC_DUMP;$/;"	m	namespace:__sanitizer	file:
IOCTL_VERIEXEC_FLUSH	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VERIEXEC_FLUSH = VERIEXEC_FLUSH;$/;"	m	namespace:__sanitizer	file:
IOCTL_VERIEXEC_LOAD	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VERIEXEC_LOAD = VERIEXEC_LOAD;$/;"	m	namespace:__sanitizer	file:
IOCTL_VERIEXEC_QUERY	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VERIEXEC_QUERY = VERIEXEC_QUERY;$/;"	m	namespace:__sanitizer	file:
IOCTL_VERIEXEC_TABLESIZE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VERIEXEC_TABLESIZE = VERIEXEC_TABLESIZE;$/;"	m	namespace:__sanitizer	file:
IOCTL_VGAPCVTID	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VGAPCVTID = VGAPCVTID;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_CROPCAP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_CROPCAP = VIDIOC_CROPCAP;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_DQBUF	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_DQBUF = VIDIOC_DQBUF;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_ENUMAUDIO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_ENUMAUDIO = VIDIOC_ENUMAUDIO;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_ENUMAUDOUT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_ENUMAUDOUT = VIDIOC_ENUMAUDOUT;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_ENUMINPUT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_ENUMINPUT = VIDIOC_ENUMINPUT;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_ENUMOUTPUT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_ENUMOUTPUT = VIDIOC_ENUMOUTPUT;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_ENUMSTD	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_ENUMSTD = VIDIOC_ENUMSTD;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_ENUM_FMT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_ENUM_FMT = VIDIOC_ENUM_FMT;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_ENUM_FRAMEINTERVALS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_ENUM_FRAMEINTERVALS = VIDIOC_ENUM_FRAMEINTERVALS;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_ENUM_FRAMESIZES	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_ENUM_FRAMESIZES = VIDIOC_ENUM_FRAMESIZES;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_G_AUDIO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_G_AUDIO = VIDIOC_G_AUDIO;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_G_AUDOUT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_G_AUDOUT = VIDIOC_G_AUDOUT;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_G_CROP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_G_CROP = VIDIOC_G_CROP;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_G_CTRL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_G_CTRL = VIDIOC_G_CTRL;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_G_FBUF	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_G_FBUF = VIDIOC_G_FBUF;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_G_FMT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_G_FMT = VIDIOC_G_FMT;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_G_FREQUENCY	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_G_FREQUENCY = VIDIOC_G_FREQUENCY;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_G_INPUT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_G_INPUT = VIDIOC_G_INPUT;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_G_JPEGCOMP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_G_JPEGCOMP = VIDIOC_G_JPEGCOMP;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_G_MODULATOR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_G_MODULATOR = VIDIOC_G_MODULATOR;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_G_OUTPUT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_G_OUTPUT = VIDIOC_G_OUTPUT;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_G_PARM	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_G_PARM = VIDIOC_G_PARM;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_G_PRIORITY	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_G_PRIORITY = VIDIOC_G_PRIORITY;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_G_STD	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_G_STD = VIDIOC_G_STD;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_G_TUNER	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_G_TUNER = VIDIOC_G_TUNER;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_OVERLAY	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_OVERLAY = VIDIOC_OVERLAY;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_QBUF	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_QBUF = VIDIOC_QBUF;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_QUERYBUF	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_QUERYBUF = VIDIOC_QUERYBUF;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_QUERYCAP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_QUERYCAP = VIDIOC_QUERYCAP;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_QUERYCTRL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_QUERYCTRL = VIDIOC_QUERYCTRL;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_QUERYMENU	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_QUERYMENU = VIDIOC_QUERYMENU;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_QUERYSTD	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_QUERYSTD = VIDIOC_QUERYSTD;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_REQBUFS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_REQBUFS = VIDIOC_REQBUFS;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_RESERVED	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_RESERVED = VIDIOC_RESERVED;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_STREAMOFF	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_STREAMOFF = VIDIOC_STREAMOFF;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_STREAMON	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_STREAMON = VIDIOC_STREAMON;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_S_AUDIO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_S_AUDIO = VIDIOC_S_AUDIO;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_S_AUDOUT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_S_AUDOUT = VIDIOC_S_AUDOUT;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_S_CROP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_S_CROP = VIDIOC_S_CROP;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_S_CTRL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_S_CTRL = VIDIOC_S_CTRL;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_S_FBUF	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_S_FBUF = VIDIOC_S_FBUF;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_S_FMT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_S_FMT = VIDIOC_S_FMT;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_S_FREQUENCY	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_S_FREQUENCY = VIDIOC_S_FREQUENCY;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_S_INPUT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_S_INPUT = VIDIOC_S_INPUT;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_S_JPEGCOMP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_S_JPEGCOMP = VIDIOC_S_JPEGCOMP;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_S_MODULATOR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_S_MODULATOR = VIDIOC_S_MODULATOR;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_S_OUTPUT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_S_OUTPUT = VIDIOC_S_OUTPUT;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_S_PARM	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_S_PARM = VIDIOC_S_PARM;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_S_PRIORITY	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_S_PRIORITY = VIDIOC_S_PRIORITY;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_S_STD	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_S_STD = VIDIOC_S_STD;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_S_TUNER	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_S_TUNER = VIDIOC_S_TUNER;$/;"	m	namespace:__sanitizer	file:
IOCTL_VIDIOC_TRY_FMT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VIDIOC_TRY_FMT = VIDIOC_TRY_FMT;$/;"	m	namespace:__sanitizer	file:
IOCTL_VNDIOCCLR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VNDIOCCLR = VNDIOCCLR;$/;"	m	namespace:__sanitizer	file:
IOCTL_VNDIOCGET	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VNDIOCGET = VNDIOCGET;$/;"	m	namespace:__sanitizer	file:
IOCTL_VNDIOCSET	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VNDIOCSET = VNDIOCSET;$/;"	m	namespace:__sanitizer	file:
IOCTL_VT_ACTIVATE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VT_ACTIVATE = VT_ACTIVATE;$/;"	m	namespace:__sanitizer	file:
IOCTL_VT_ACTIVATE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_VT_ACTIVATE = VT_ACTIVATE;$/;"	m	namespace:__sanitizer	file:
IOCTL_VT_DISALLOCATE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_VT_DISALLOCATE = VT_DISALLOCATE;$/;"	m	namespace:__sanitizer	file:
IOCTL_VT_GETACTIVE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VT_GETACTIVE = VT_GETACTIVE;$/;"	m	namespace:__sanitizer	file:
IOCTL_VT_GETMODE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VT_GETMODE = VT_GETMODE;$/;"	m	namespace:__sanitizer	file:
IOCTL_VT_GETMODE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_VT_GETMODE = VT_GETMODE;$/;"	m	namespace:__sanitizer	file:
IOCTL_VT_GETSTATE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VT_GETSTATE = VT_GETSTATE;$/;"	m	namespace:__sanitizer	file:
IOCTL_VT_GETSTATE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_VT_GETSTATE = VT_GETSTATE;$/;"	m	namespace:__sanitizer	file:
IOCTL_VT_OPENQRY	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VT_OPENQRY = VT_OPENQRY;$/;"	m	namespace:__sanitizer	file:
IOCTL_VT_OPENQRY	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_VT_OPENQRY = VT_OPENQRY;$/;"	m	namespace:__sanitizer	file:
IOCTL_VT_RELDISP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VT_RELDISP = VT_RELDISP;$/;"	m	namespace:__sanitizer	file:
IOCTL_VT_RELDISP	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_VT_RELDISP = VT_RELDISP;$/;"	m	namespace:__sanitizer	file:
IOCTL_VT_RESIZE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_VT_RESIZE = VT_RESIZE;$/;"	m	namespace:__sanitizer	file:
IOCTL_VT_RESIZEX	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_VT_RESIZEX = VT_RESIZEX;$/;"	m	namespace:__sanitizer	file:
IOCTL_VT_SENDSIG	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_VT_SENDSIG = VT_SENDSIG;$/;"	m	namespace:__sanitizer	file:
IOCTL_VT_SETMODE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VT_SETMODE = VT_SETMODE;$/;"	m	namespace:__sanitizer	file:
IOCTL_VT_SETMODE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_VT_SETMODE = VT_SETMODE;$/;"	m	namespace:__sanitizer	file:
IOCTL_VT_WAITACTIVE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VT_WAITACTIVE = VT_WAITACTIVE;$/;"	m	namespace:__sanitizer	file:
IOCTL_VT_WAITACTIVE	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned IOCTL_VT_WAITACTIVE = VT_WAITACTIVE;$/;"	m	namespace:__sanitizer	file:
IOCTL_VUIDGFORMAT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VUIDGFORMAT = VUIDGFORMAT;$/;"	m	namespace:__sanitizer	file:
IOCTL_VUIDSFORMAT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_VUIDSFORMAT = VUIDSFORMAT;$/;"	m	namespace:__sanitizer	file:
IOCTL_WDOGIOC_GMODE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WDOGIOC_GMODE = WDOGIOC_GMODE;$/;"	m	namespace:__sanitizer	file:
IOCTL_WDOGIOC_GTICKLER	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WDOGIOC_GTICKLER = WDOGIOC_GTICKLER;$/;"	m	namespace:__sanitizer	file:
IOCTL_WDOGIOC_GWDOGS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WDOGIOC_GWDOGS = WDOGIOC_GWDOGS;$/;"	m	namespace:__sanitizer	file:
IOCTL_WDOGIOC_SMODE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WDOGIOC_SMODE = WDOGIOC_SMODE;$/;"	m	namespace:__sanitizer	file:
IOCTL_WDOGIOC_TICKLE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WDOGIOC_TICKLE = WDOGIOC_TICKLE;$/;"	m	namespace:__sanitizer	file:
IOCTL_WDOGIOC_WHICH	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WDOGIOC_WHICH = WDOGIOC_WHICH;$/;"	m	namespace:__sanitizer	file:
IOCTL_WFQ_CONFIG	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WFQ_CONFIG = WFQ_CONFIG;$/;"	m	namespace:__sanitizer	file:
IOCTL_WFQ_DISABLE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WFQ_DISABLE = WFQ_DISABLE;$/;"	m	namespace:__sanitizer	file:
IOCTL_WFQ_ENABLE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WFQ_ENABLE = WFQ_ENABLE;$/;"	m	namespace:__sanitizer	file:
IOCTL_WFQ_GET_QID	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WFQ_GET_QID = WFQ_GET_QID;$/;"	m	namespace:__sanitizer	file:
IOCTL_WFQ_GET_STATS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WFQ_GET_STATS = WFQ_GET_STATS;$/;"	m	namespace:__sanitizer	file:
IOCTL_WFQ_IF_ATTACH	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WFQ_IF_ATTACH = WFQ_IF_ATTACH;$/;"	m	namespace:__sanitizer	file:
IOCTL_WFQ_IF_DETACH	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WFQ_IF_DETACH = WFQ_IF_DETACH;$/;"	m	namespace:__sanitizer	file:
IOCTL_WFQ_SET_WEIGHT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WFQ_SET_WEIGHT = WFQ_SET_WEIGHT;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSDISPLAYIO_ADDSCREEN	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSDISPLAYIO_ADDSCREEN = WSDISPLAYIO_ADDSCREEN;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSDISPLAYIO_DELSCREEN	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSDISPLAYIO_DELSCREEN = WSDISPLAYIO_DELSCREEN;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSDISPLAYIO_DGSCROLL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSDISPLAYIO_DGSCROLL = WSDISPLAYIO_DGSCROLL;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSDISPLAYIO_DOBLIT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSDISPLAYIO_DOBLIT = WSDISPLAYIO_DOBLIT;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSDISPLAYIO_DSSCROLL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSDISPLAYIO_DSSCROLL = WSDISPLAYIO_DSSCROLL;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSDISPLAYIO_GBORDER	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSDISPLAYIO_GBORDER = WSDISPLAYIO_GBORDER;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSDISPLAYIO_GCURMAX	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSDISPLAYIO_GCURMAX = WSDISPLAYIO_GCURMAX;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSDISPLAYIO_GCURPOS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSDISPLAYIO_GCURPOS = WSDISPLAYIO_GCURPOS;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSDISPLAYIO_GCURSOR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSDISPLAYIO_GCURSOR = WSDISPLAYIO_GCURSOR;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSDISPLAYIO_GETACTIVESCREEN	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSDISPLAYIO_GETACTIVESCREEN = WSDISPLAYIO_GETACTIVESCREEN;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSDISPLAYIO_GETCMAP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSDISPLAYIO_GETCMAP = WSDISPLAYIO_GETCMAP;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSDISPLAYIO_GETPARAM	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSDISPLAYIO_GETPARAM = WSDISPLAYIO_GETPARAM;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSDISPLAYIO_GETWSCHAR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSDISPLAYIO_GETWSCHAR = WSDISPLAYIO_GETWSCHAR;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSDISPLAYIO_GET_BUSID	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSDISPLAYIO_GET_BUSID = WSDISPLAYIO_GET_BUSID;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSDISPLAYIO_GET_EDID	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSDISPLAYIO_GET_EDID = WSDISPLAYIO_GET_EDID;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSDISPLAYIO_GET_FBINFO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSDISPLAYIO_GET_FBINFO = WSDISPLAYIO_GET_FBINFO;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSDISPLAYIO_GINFO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSDISPLAYIO_GINFO = WSDISPLAYIO_GINFO;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSDISPLAYIO_GMODE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSDISPLAYIO_GMODE = WSDISPLAYIO_GMODE;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSDISPLAYIO_GMSGATTRS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSDISPLAYIO_GMSGATTRS = WSDISPLAYIO_GMSGATTRS;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSDISPLAYIO_GTYPE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSDISPLAYIO_GTYPE = WSDISPLAYIO_GTYPE;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSDISPLAYIO_GVIDEO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSDISPLAYIO_GVIDEO = WSDISPLAYIO_GVIDEO;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSDISPLAYIO_LDFONT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSDISPLAYIO_LDFONT = WSDISPLAYIO_LDFONT;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSDISPLAYIO_LINEBYTES	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSDISPLAYIO_LINEBYTES = WSDISPLAYIO_LINEBYTES;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSDISPLAYIO_PUTCMAP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSDISPLAYIO_PUTCMAP = WSDISPLAYIO_PUTCMAP;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSDISPLAYIO_PUTWSCHAR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSDISPLAYIO_PUTWSCHAR = WSDISPLAYIO_PUTWSCHAR;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSDISPLAYIO_SBORDER	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSDISPLAYIO_SBORDER = WSDISPLAYIO_SBORDER;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSDISPLAYIO_SCURPOS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSDISPLAYIO_SCURPOS = WSDISPLAYIO_SCURPOS;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSDISPLAYIO_SCURSOR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSDISPLAYIO_SCURSOR = WSDISPLAYIO_SCURSOR;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSDISPLAYIO_SETPARAM	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSDISPLAYIO_SETPARAM = WSDISPLAYIO_SETPARAM;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSDISPLAYIO_SETVERSION	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSDISPLAYIO_SETVERSION = WSDISPLAYIO_SETVERSION;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSDISPLAYIO_SET_POLLING	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSDISPLAYIO_SET_POLLING = WSDISPLAYIO_SET_POLLING;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSDISPLAYIO_SFONT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSDISPLAYIO_SFONT = WSDISPLAYIO_SFONT;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSDISPLAYIO_SMODE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSDISPLAYIO_SMODE = WSDISPLAYIO_SMODE;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSDISPLAYIO_SMSGATTRS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSDISPLAYIO_SMSGATTRS = WSDISPLAYIO_SMSGATTRS;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSDISPLAYIO_SPROGRESS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSDISPLAYIO_SPROGRESS = WSDISPLAYIO_SPROGRESS;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSDISPLAYIO_SSPLASH	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSDISPLAYIO_SSPLASH = WSDISPLAYIO_SSPLASH;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSDISPLAYIO_SVIDEO	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSDISPLAYIO_SVIDEO = WSDISPLAYIO_SVIDEO;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSDISPLAYIO_WAITBLIT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSDISPLAYIO_WAITBLIT = WSDISPLAYIO_WAITBLIT;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSKBDIO_BELL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSKBDIO_BELL = WSKBDIO_BELL;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSKBDIO_COMPLEXBELL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSKBDIO_COMPLEXBELL = WSKBDIO_COMPLEXBELL;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSKBDIO_GETBELL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSKBDIO_GETBELL = WSKBDIO_GETBELL;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSKBDIO_GETDEFAULTBELL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSKBDIO_GETDEFAULTBELL = WSKBDIO_GETDEFAULTBELL;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSKBDIO_GETDEFAULTKEYREPEAT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSKBDIO_GETDEFAULTKEYREPEAT = WSKBDIO_GETDEFAULTKEYREPEAT;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSKBDIO_GETENCODING	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSKBDIO_GETENCODING = WSKBDIO_GETENCODING;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSKBDIO_GETKEYCLICK	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSKBDIO_GETKEYCLICK = WSKBDIO_GETKEYCLICK;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSKBDIO_GETKEYREPEAT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSKBDIO_GETKEYREPEAT = WSKBDIO_GETKEYREPEAT;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSKBDIO_GETLEDS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSKBDIO_GETLEDS = WSKBDIO_GETLEDS;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSKBDIO_GETMAP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSKBDIO_GETMAP = WSKBDIO_GETMAP;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSKBDIO_GETMODE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSKBDIO_GETMODE = WSKBDIO_GETMODE;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSKBDIO_GETSCROLL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSKBDIO_GETSCROLL = WSKBDIO_GETSCROLL;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSKBDIO_GTYPE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSKBDIO_GTYPE = WSKBDIO_GTYPE;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSKBDIO_SETBELL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSKBDIO_SETBELL = WSKBDIO_SETBELL;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSKBDIO_SETDEFAULTBELL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSKBDIO_SETDEFAULTBELL = WSKBDIO_SETDEFAULTBELL;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSKBDIO_SETDEFAULTKEYREPEAT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSKBDIO_SETDEFAULTKEYREPEAT = WSKBDIO_SETDEFAULTKEYREPEAT;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSKBDIO_SETENCODING	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSKBDIO_SETENCODING = WSKBDIO_SETENCODING;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSKBDIO_SETKEYCLICK	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSKBDIO_SETKEYCLICK = WSKBDIO_SETKEYCLICK;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSKBDIO_SETKEYREPEAT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSKBDIO_SETKEYREPEAT = WSKBDIO_SETKEYREPEAT;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSKBDIO_SETLEDS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSKBDIO_SETLEDS = WSKBDIO_SETLEDS;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSKBDIO_SETMAP	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSKBDIO_SETMAP = WSKBDIO_SETMAP;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSKBDIO_SETMODE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSKBDIO_SETMODE = WSKBDIO_SETMODE;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSKBDIO_SETSCROLL	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSKBDIO_SETSCROLL = WSKBDIO_SETSCROLL;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSKBDIO_SETVERSION	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSKBDIO_SETVERSION = WSKBDIO_SETVERSION;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSMOUSEIO_GCALIBCOORDS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSMOUSEIO_GCALIBCOORDS = WSMOUSEIO_GCALIBCOORDS;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSMOUSEIO_GETID	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSMOUSEIO_GETID = WSMOUSEIO_GETID;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSMOUSEIO_GETREPEAT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSMOUSEIO_GETREPEAT = WSMOUSEIO_GETREPEAT;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSMOUSEIO_GTYPE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSMOUSEIO_GTYPE = WSMOUSEIO_GTYPE;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSMOUSEIO_SCALIBCOORDS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSMOUSEIO_SCALIBCOORDS = WSMOUSEIO_SCALIBCOORDS;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSMOUSEIO_SETREPEAT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSMOUSEIO_SETREPEAT = WSMOUSEIO_SETREPEAT;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSMOUSEIO_SETVERSION	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSMOUSEIO_SETVERSION = WSMOUSEIO_SETVERSION;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSMOUSEIO_SRATE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSMOUSEIO_SRATE = WSMOUSEIO_SRATE;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSMOUSEIO_SRES	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSMOUSEIO_SRES = WSMOUSEIO_SRES;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSMOUSEIO_SSCALE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSMOUSEIO_SSCALE = WSMOUSEIO_SSCALE;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSMUXIO_ADD_DEVICE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSMUXIO_ADD_DEVICE = WSMUXIO_ADD_DEVICE;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSMUXIO_INJECTEVENT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSMUXIO_INJECTEVENT = WSMUXIO_INJECTEVENT;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSMUXIO_LIST_DEVICES	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSMUXIO_LIST_DEVICES = WSMUXIO_LIST_DEVICES;$/;"	m	namespace:__sanitizer	file:
IOCTL_WSMUXIO_REMOVE_DEVICE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WSMUXIO_REMOVE_DEVICE = WSMUXIO_REMOVE_DEVICE;$/;"	m	namespace:__sanitizer	file:
IOCTL_WTQICMD	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL_WTQICMD = WTQICMD;$/;"	m	namespace:__sanitizer	file:
IOCTL__O_WSDISPLAYIO_SETKEYBOARD	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned IOCTL__O_WSDISPLAYIO_SETKEYBOARD = _O_WSDISPLAYIO_SETKEYBOARD;$/;"	m	namespace:__sanitizer	file:
IOC_DIR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	482;"	d
IOC_DIR	lib/sanitizer_common/sanitizer_platform_limits_posix.h	994;"	d
IOC_DIR	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	401;"	d
IOC_DIRBITS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	466;"	d
IOC_DIRBITS	lib/sanitizer_common/sanitizer_platform_limits_posix.h	969;"	d
IOC_DIRBITS	lib/sanitizer_common/sanitizer_platform_limits_posix.h	975;"	d
IOC_DIRBITS	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	386;"	d
IOC_DIRMASK	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	473;"	d
IOC_DIRMASK	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	474;"	d
IOC_DIRMASK	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	114;"	d	file:
IOC_DIRMASK	lib/sanitizer_common/sanitizer_platform_limits_posix.h	984;"	d
IOC_DIRMASK	lib/sanitizer_common/sanitizer_platform_limits_posix.h	986;"	d
IOC_DIRMASK	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	395;"	d
IOC_DIRSHIFT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	478;"	d
IOC_DIRSHIFT	lib/sanitizer_common/sanitizer_platform_limits_posix.h	990;"	d
IOC_DIRSHIFT	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	399;"	d
IOC_NONE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	467;"	d
IOC_NONE	lib/sanitizer_common/sanitizer_platform_limits_posix.h	970;"	d
IOC_NONE	lib/sanitizer_common/sanitizer_platform_limits_posix.h	976;"	d
IOC_NONE	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	387;"	d
IOC_NONE	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	388;"	d
IOC_NR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	484;"	d
IOC_NR	lib/sanitizer_common/sanitizer_platform_limits_posix.h	996;"	d
IOC_NR	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	403;"	d
IOC_NRBITS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	463;"	d
IOC_NRBITS	lib/sanitizer_common/sanitizer_platform_limits_posix.h	964;"	d
IOC_NRBITS	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	383;"	d
IOC_NRMASK	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	470;"	d
IOC_NRMASK	lib/sanitizer_common/sanitizer_platform_limits_posix.h	980;"	d
IOC_NRMASK	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	392;"	d
IOC_NRSHIFT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	475;"	d
IOC_NRSHIFT	lib/sanitizer_common/sanitizer_platform_limits_posix.h	987;"	d
IOC_NRSHIFT	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	396;"	d
IOC_READ	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	469;"	d
IOC_READ	lib/sanitizer_common/sanitizer_platform_limits_posix.h	972;"	d
IOC_READ	lib/sanitizer_common/sanitizer_platform_limits_posix.h	978;"	d
IOC_READ	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	389;"	d
IOC_SIZE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	485;"	d
IOC_SIZE	lib/sanitizer_common/sanitizer_platform_limits_posix.h	1002;"	d
IOC_SIZE	lib/sanitizer_common/sanitizer_platform_limits_posix.h	1005;"	d
IOC_SIZE	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	409;"	d
IOC_SIZE	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	412;"	d
IOC_SIZEBITS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	465;"	d
IOC_SIZEBITS	lib/sanitizer_common/sanitizer_platform_limits_posix.h	968;"	d
IOC_SIZEBITS	lib/sanitizer_common/sanitizer_platform_limits_posix.h	974;"	d
IOC_SIZEBITS	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	385;"	d
IOC_SIZEMASK	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	472;"	d
IOC_SIZEMASK	lib/sanitizer_common/sanitizer_platform_limits_posix.h	982;"	d
IOC_SIZEMASK	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	394;"	d
IOC_SIZESHIFT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	477;"	d
IOC_SIZESHIFT	lib/sanitizer_common/sanitizer_platform_limits_posix.h	989;"	d
IOC_SIZESHIFT	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	398;"	d
IOC_TYPE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	483;"	d
IOC_TYPE	lib/sanitizer_common/sanitizer_platform_limits_posix.h	995;"	d
IOC_TYPE	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	402;"	d
IOC_TYPEBITS	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	464;"	d
IOC_TYPEBITS	lib/sanitizer_common/sanitizer_platform_limits_posix.h	965;"	d
IOC_TYPEBITS	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	384;"	d
IOC_TYPEMASK	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	471;"	d
IOC_TYPEMASK	lib/sanitizer_common/sanitizer_platform_limits_posix.h	981;"	d
IOC_TYPEMASK	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	393;"	d
IOC_TYPESHIFT	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	476;"	d
IOC_TYPESHIFT	lib/sanitizer_common/sanitizer_platform_limits_posix.h	988;"	d
IOC_TYPESHIFT	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	397;"	d
IOC_WRITE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	468;"	d
IOC_WRITE	lib/sanitizer_common/sanitizer_platform_limits_posix.h	971;"	d
IOC_WRITE	lib/sanitizer_common/sanitizer_platform_limits_posix.h	977;"	d
IOC_WRITE	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	390;"	d
IS_DIR_SEPARATOR	lib/profile/InstrProfilingPort.h	97;"	d
IS_DIR_SEPARATOR	lib/profile/InstrProfilingPort.h	99;"	d
IS_FROM_LOCAL_POOL	lib/asan/asan_malloc_local.h	35;"	d
IS_FROM_LOCAL_POOL	lib/asan/asan_malloc_local.h	40;"	d
IS_LOCK_FREE_1	lib/builtins/atomic.c	128;"	d	file:
IS_LOCK_FREE_16	lib/builtins/atomic.c	132;"	d	file:
IS_LOCK_FREE_2	lib/builtins/atomic.c	129;"	d	file:
IS_LOCK_FREE_4	lib/builtins/atomic.c	130;"	d	file:
IS_LOCK_FREE_8	lib/builtins/atomic.c	131;"	d	file:
IT	lib/builtins/assembly.h	82;"	d
IT	lib/builtins/assembly.h	87;"	d
IT	lib/builtins/assembly.h	94;"	d
ITE	lib/builtins/assembly.h	84;"	d
ITE	lib/builtins/assembly.h	89;"	d
ITE	lib/builtins/assembly.h	96;"	d
ITT	lib/builtins/assembly.h	83;"	d
ITT	lib/builtins/assembly.h	88;"	d
ITT	lib/builtins/assembly.h	95;"	d
Id	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^  explicit Id(u32 id = 0, u32 seq = 0)$/;"	f	struct:__sanitizer::Id
Id	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^struct Id {$/;"	s	namespace:__sanitizer	file:
IdComparator	lib/sanitizer_common/sanitizer_stackdepot.cc	/^bool StackDepotReverseMap::IdDescPair::IdComparator($/;"	f	class:__sanitizer::StackDepotReverseMap::IdDescPair
IdDescPair	lib/sanitizer_common/sanitizer_stackdepot.h	/^  struct IdDescPair {$/;"	s	class:__sanitizer::StackDepotReverseMap
Ident	lib/sanitizer_common/tests/sanitizer_test_utils.h	/^static T Ident(T t) {$/;"	f
Ident	test/asan/TestCases/Posix/stack-use-after-return.cc	/^char *Ident(char *x) {$/;"	f
IdentityFunction	lib/interception/tests/interception_win_test.cc	/^typedef int (*IdentityFunction)(int);$/;"	t	namespace:__interception::__anon12	file:
Idx	lib/esan/esan_hashtable.h	/^    int Idx;$/;"	m	class:__esan::HashTable::iterator
IgnoreNoninstrumentedModules	lib/sanitizer_common/sanitizer_libignore.h	/^  void IgnoreNoninstrumentedModules(bool enable) {$/;"	f	class:__sanitizer::LibIgnore
IgnoreObjectLocked	lib/asan/asan_allocator.cc	/^IgnoreObjectResult IgnoreObjectLocked(const void *p) {$/;"	f	namespace:__lsan
IgnoreObjectLocked	lib/lsan/lsan_allocator.cc	/^IgnoreObjectResult IgnoreObjectLocked(const void *p) {$/;"	f	namespace:__lsan
IgnoreObjectResult	lib/lsan/lsan_common.h	/^enum IgnoreObjectResult {$/;"	g	namespace:__lsan
IgnoreSet	lib/tsan/rtl/tsan_ignoreset.cc	/^IgnoreSet::IgnoreSet()$/;"	f	class:__tsan::IgnoreSet
IgnoreSet	lib/tsan/rtl/tsan_ignoreset.h	/^class IgnoreSet {$/;"	c	namespace:__tsan
ImitateTlsWrite	lib/tsan/rtl/tsan_platform_linux.cc	/^void ImitateTlsWrite(ThreadState *thr, uptr tls_addr, uptr tls_size) {$/;"	f	namespace:__tsan
ImitateTlsWrite	lib/tsan/rtl/tsan_platform_mac.cc	/^void ImitateTlsWrite(ThreadState *thr, uptr tls_addr, uptr tls_size) {$/;"	f	namespace:__tsan
Impl	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^struct ScopedThread::Impl {$/;"	s	class:ScopedThread	file:
Impl	lib/xray/xray_log_interface.cc	/^  XRayLogImpl Impl;$/;"	m	struct:__xray::ModeImpl	file:
ImplicitConversionData	lib/ubsan/ubsan_handlers.h	/^struct ImplicitConversionData {$/;"	s	namespace:__ubsan
InFuzzingThread	lib/fuzzer/FuzzerInternal.h	/^  bool InFuzzingThread() const { return IsMyThread; }$/;"	f	class:fuzzer::Fuzzer
InInterceptorScope	lib/hwasan/hwasan_thread.h	/^  bool InInterceptorScope() { return in_interceptor_scope_; }$/;"	f	class:__hwasan::HwasanThread
InNamespaceBody	lib/sanitizer_common/scripts/cpplint.py	/^  def InNamespaceBody(self):$/;"	m	class:_NestingState
InSignalHandler	lib/hwasan/hwasan_thread.h	/^  bool InSignalHandler() { return in_signal_handler_; }$/;"	f	class:__hwasan::HwasanThread
InSignalHandler	lib/msan/msan_thread.h	/^  bool InSignalHandler() { return in_signal_handler_; }$/;"	f	class:__msan::MsanThread
InSymbolizer	lib/hwasan/hwasan_thread.h	/^  bool InSymbolizer() { return in_symbolizer_; }$/;"	f	class:__hwasan::HwasanThread
Inc	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^    void Inc(uptr i) const {$/;"	f	class:SizeClassAllocator64::PackedCounterArray
IncRange	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^    void IncRange(uptr from, uptr to) const {$/;"	f	class:SizeClassAllocator64::PackedCounterArray
IncSuccessCount	lib/fuzzer/FuzzerDictionary.h	/^  void IncSuccessCount() { SuccessCount++; }$/;"	f	class:fuzzer::DictionaryEntry
IncUseCount	lib/fuzzer/FuzzerDictionary.h	/^  void IncUseCount() { UseCount++; }$/;"	f	class:fuzzer::DictionaryEntry
Includes	lib/sanitizer_common/tests/sanitizer_linux_test.cc	/^static bool Includes(std::vector<tid_t> first, std::vector<tid_t> second) {$/;"	f	namespace:__sanitizer
Incomplete	lib/sanitizer_common/sanitizer_linux.h	/^    Incomplete,$/;"	e	enum:__sanitizer::ThreadLister::Result
IncreaseTotalMmap	lib/sanitizer_common/sanitizer_common.cc	/^void IncreaseTotalMmap(uptr size) {$/;"	f	namespace:__sanitizer
IncrementEpoch	lib/tsan/rtl/tsan_rtl.h	/^  void IncrementEpoch() {$/;"	f	class:__tsan::FastState
IncrementErrorCount	lib/sanitizer_common/scripts/cpplint.py	/^  def IncrementErrorCount(self, category):$/;"	m	class:_CppLintState
IncrementerThread	lib/sanitizer_common/tests/sanitizer_stoptheworld_test.cc	/^void *IncrementerThread(void *argument) {$/;"	f	namespace:__sanitizer
IndexT	lib/tsan/rtl/tsan_dense_alloc.h	/^  typedef typename Cache::IndexT IndexT;$/;"	t	class:__tsan::DenseSlabAlloc
IndexT	lib/tsan/rtl/tsan_dense_alloc.h	/^  typedef u32 IndexT;$/;"	t	class:__tsan::DenseSlabAllocCache
IndexType	lib/ubsan/ubsan_handlers.h	/^  const TypeDescriptor &IndexType;$/;"	m	struct:__ubsan::OutOfBoundsData
Inf	test/ubsan/TestCases/Float/cast-overflow.cpp	/^float Inf;$/;"	v
Init	lib/asan/asan_descriptions.cc	/^void AsanThreadIdAndName::Init(u32 tid, const char *tname) {$/;"	f	class:__asan::AsanThreadIdAndName
Init	lib/asan/asan_thread.cc	/^void AsanThread::Init(const InitOptions *options) {$/;"	f	class:__asan::AsanThread
Init	lib/fuzzer/FuzzerDataFlowTrace.cpp	/^void DataFlowTrace::Init(const std::string &DirPath,$/;"	f	class:fuzzer::DataFlowTrace
Init	lib/hwasan/hwasan_thread.cc	/^void HwasanThread::Init() {$/;"	f	class:__hwasan::HwasanThread
Init	lib/msan/msan_thread.cc	/^void MsanThread::Init() {$/;"	f	class:__msan::MsanThread
Init	lib/sanitizer_common/sanitizer_allocator_bytemap.h	/^  void Init() {$/;"	f	class:FlatByteMap
Init	lib/sanitizer_common/sanitizer_allocator_bytemap.h	/^  void Init() {$/;"	f	class:TwoLevelByteMap
Init	lib/sanitizer_common/sanitizer_allocator_combined.h	/^  void Init(s32 release_to_os_interval_ms) {$/;"	f	class:CombinedAllocator
Init	lib/sanitizer_common/sanitizer_allocator_local_cache.h	/^  void Init(AllocatorGlobalStats *s) {$/;"	f	struct:SizeClassAllocator32LocalCache
Init	lib/sanitizer_common/sanitizer_allocator_local_cache.h	/^  void Init(AllocatorGlobalStats *s) {$/;"	f	struct:SizeClassAllocator64LocalCache
Init	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^  void Init(s32 release_to_os_interval_ms) {$/;"	f	class:SizeClassAllocator32
Init	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  void Init(s32 release_to_os_interval_ms) {$/;"	f	class:SizeClassAllocator64
Init	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^  INLINE void *Init() { return &p_[0]; }$/;"	f	class:LargeMmapAllocatorPtrArrayStatic
Init	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^  INLINE void *Init() {$/;"	f	class:LargeMmapAllocatorPtrArrayDynamic
Init	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^  void Init() {$/;"	f	class:LargeMmapAllocator
Init	lib/sanitizer_common/sanitizer_allocator_stats.h	/^  void Init() {$/;"	f	class:AllocatorGlobalStats
Init	lib/sanitizer_common/sanitizer_allocator_stats.h	/^  void Init() {$/;"	f	class:AllocatorStats
Init	lib/sanitizer_common/sanitizer_fuchsia.cc	/^uptr ReservedAddressRange::Init(uptr init_size, const char *name,$/;"	f	class:__sanitizer::ReservedAddressRange
Init	lib/sanitizer_common/sanitizer_mutex.h	/^  void Init() {$/;"	f	class:__sanitizer::StaticSpinMutex
Init	lib/sanitizer_common/sanitizer_posix_libcdep.cc	/^uptr ReservedAddressRange::Init(uptr size, const char *name, uptr fixed_addr) {$/;"	f	class:__sanitizer::ReservedAddressRange
Init	lib/sanitizer_common/sanitizer_quarantine.h	/^  void Init(uptr size, uptr cache_size) {$/;"	f	class:__sanitizer::Quarantine
Init	lib/sanitizer_common/sanitizer_stacktrace.cc	/^void BufferedStackTrace::Init(const uptr *pcs, uptr cnt, uptr extra_top_pc) {$/;"	f	class:__sanitizer::BufferedStackTrace
Init	lib/sanitizer_common/sanitizer_win.cc	/^uptr ReservedAddressRange::Init(uptr size, const char *name, uptr fixed_addr) {$/;"	f	class:__sanitizer::ReservedAddressRange
Init	lib/scudo/scudo_allocator_secondary.h	/^  void Init() {$/;"	f	class:LargeMmapAllocator
Init	lib/tsan/rtl/tsan_stack_trace.cc	/^void VarSizeStackTrace::Init(const uptr *pcs, uptr cnt, uptr extra_top_pc) {$/;"	f	class:__tsan::VarSizeStackTrace
Init	lib/tsan/rtl/tsan_sync.cc	/^void SyncVar::Init(ThreadState *thr, uptr pc, uptr addr, u64 uid) {$/;"	f	class:__tsan::SyncVar
Init	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^void Mutex::Init() {$/;"	f	class:Mutex
Init	test/asan/TestCases/Linux/preinstalled_signal.cc	/^static void Init() {$/;"	f	file:
Init	test/tsan/deadlock_detector_stress_test.cc	/^  void Init(size_t n) {$/;"	f	class:LockTest
Init	test/tsan/signal_recursive.cc	/^static void Init() {$/;"	f	file:
InitAllocators	lib/xray/xray_function_call_trie.h	/^  static Allocators InitAllocators() {$/;"	f	class:__xray::FunctionCallTrie
InitAllocatorsCustom	lib/xray/xray_function_call_trie.h	/^  static Allocators InitAllocatorsCustom(uptr Max) {$/;"	f	class:__xray::FunctionCallTrie
InitAsPlugin	lib/ubsan/ubsan_init.cc	/^void __ubsan::InitAsPlugin() {$/;"	f	class:__ubsan
InitAsStandalone	lib/ubsan/ubsan_init.cc	/^void __ubsan::InitAsStandalone() {$/;"	f	class:__ubsan
InitAsStandaloneIfNecessary	lib/ubsan/ubsan_init.cc	/^void __ubsan::InitAsStandaloneIfNecessary() { return InitAsStandalone(); }$/;"	f	class:__ubsan
InitCache	lib/sanitizer_common/sanitizer_allocator_combined.h	/^  void InitCache(AllocatorCache *cache) {$/;"	f	class:CombinedAllocator
InitCache	lib/sanitizer_common/sanitizer_allocator_local_cache.h	/^  void InitCache(PerClass *c) {$/;"	f	struct:SizeClassAllocator32LocalCache
InitCache	lib/sanitizer_common/sanitizer_allocator_local_cache.h	/^  void InitCache(PerClass *c) {$/;"	f	struct:SizeClassAllocator64LocalCache
InitCache	lib/tsan/rtl/tsan_dense_alloc.h	/^  void InitCache(Cache *c) {$/;"	f	class:__tsan::DenseSlabAlloc
InitCommonLsan	lib/lsan/lsan_common.cc	/^void InitCommonLsan() {$/;"	f	namespace:__lsan
InitDataSeg	lib/tsan/dd/dd_interceptors.cc	/^static void InitDataSeg() {$/;"	f	namespace:__dsan
InitHeadAndTail	lib/xray/xray_segmented_array.h	/^  Segment *InitHeadAndTail() {$/;"	f	class:__xray::Array
InitLinkerInitialized	lib/asan/asan_allocator.cc	/^  void InitLinkerInitialized(const AllocatorOptions &options) {$/;"	f	struct:__asan::Allocator
InitLinkerInitialized	lib/sanitizer_common/sanitizer_allocator_combined.h	/^  void InitLinkerInitialized(s32 release_to_os_interval_ms) {$/;"	f	class:CombinedAllocator
InitLinkerInitialized	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^  void InitLinkerInitialized() {$/;"	f	class:LargeMmapAllocator
InitLinkerInitialized	lib/sanitizer_common/sanitizer_allocator_stats.h	/^  void InitLinkerInitialized() {$/;"	f	class:AllocatorGlobalStats
InitLinkerInitialized	lib/sanitizer_common/sanitizer_allocator_stats.h	/^  void InitLinkerInitialized() {}$/;"	f	class:AllocatorStats
InitList	lib/tsan/rtl/tsan_interface_ann.cc	/^static void InitList(ExpectRace *list) {$/;"	f	namespace:__tsan
InitOptions	lib/asan/asan_fuchsia.cc	/^struct AsanThread::InitOptions {$/;"	s	class:__asan::AsanThread	file:
InitOptions	lib/asan/asan_rtems.cc	/^struct AsanThread::InitOptions {$/;"	s	class:__asan::AsanThread	file:
InitPcSpBp	lib/sanitizer_common/sanitizer_linux.cc	/^void SignalContext::InitPcSpBp() { GetPcSpBp(context, &pc, &sp, &bp); }$/;"	f	class:__sanitizer::SignalContext
InitPcSpBp	lib/sanitizer_common/sanitizer_mac.cc	/^void SignalContext::InitPcSpBp() { GetPcSpBp(context, &pc, &sp, &bp); }$/;"	f	class:__sanitizer::SignalContext
InitPcSpBp	lib/sanitizer_common/sanitizer_win.cc	/^void SignalContext::InitPcSpBp() {$/;"	f	class:__sanitizer::SignalContext
InitRTRecord	lib/profile/InstrProfilingInternal.h	/^  uint32_t (*InitRTRecord)(const __llvm_profile_data *Data,$/;"	m	struct:VPDataReaderType
InitShadow	lib/cfi/cfi.cc	/^void InitShadow() {$/;"	f	namespace:__cfi
InitShadow	lib/hwasan/hwasan_linux.cc	/^bool InitShadow() {$/;"	f	namespace:__hwasan
InitShadow	lib/msan/msan_linux.cc	/^bool InitShadow(bool init_origins) {$/;"	f	namespace:__msan
InitThread	lib/tsan/dd/dd_interceptors.cc	/^static bool InitThread() {$/;"	f	file:
InitTlsSize	lib/sanitizer_common/sanitizer_fuchsia.cc	/^void InitTlsSize() {}$/;"	f	namespace:__sanitizer
InitTlsSize	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^void InitTlsSize() { }$/;"	f	namespace:__sanitizer
InitTlsSize	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^void InitTlsSize() {$/;"	f	namespace:__sanitizer
InitTlsSize	lib/sanitizer_common/sanitizer_mac.cc	/^void InitTlsSize() {$/;"	f	namespace:__sanitizer
InitTlsSize	lib/sanitizer_common/sanitizer_rtems.cc	/^void InitTlsSize() {}$/;"	f	namespace:__sanitizer
InitTlsSize	lib/sanitizer_common/sanitizer_win.cc	/^void InitTlsSize() {$/;"	f	namespace:__sanitizer
InitTracePcGuard	lib/sanitizer_common/sanitizer_coverage_fuchsia.cc	/^  void InitTracePcGuard(u32 *start, u32 *end) {$/;"	f	class:__sancov::__anon63::final
InitTracePcGuard	lib/sanitizer_common/sanitizer_coverage_libcdep_new.cc	/^  void InitTracePcGuard(u32* start, u32* end) {$/;"	f	class:__sancov::__anon64::TracePcGuardController
InitialStack	lib/fuzzer/FuzzerTracePC.h	/^  uintptr_t InitialStack;$/;"	m	class:fuzzer::TracePC
Initialize	lib/sanitizer_common/sanitizer_common.h	/^  void Initialize(uptr initial_capacity) {$/;"	f	class:__sanitizer::InternalMmapVectorNoCtor
Initialize	lib/sanitizer_common/sanitizer_coverage_libcdep_new.cc	/^  void Initialize() {$/;"	f	class:__sancov::__anon64::TracePcGuardController
Initialize	lib/tsan/dd/dd_rtl.cc	/^void Initialize() {$/;"	f	namespace:__dsan
Initialize	lib/tsan/rtl/tsan_rtl.cc	/^void Initialize(ThreadState *thr) {$/;"	f	namespace:__tsan
InitializeAllocator	lib/asan/asan_allocator.cc	/^void InitializeAllocator(const AllocatorOptions &options) {$/;"	f	namespace:__asan
InitializeAllocator	lib/lsan/lsan_allocator.cc	/^void InitializeAllocator() {$/;"	f	namespace:__lsan
InitializeAllocator	lib/tsan/rtl/tsan_mman.cc	/^void InitializeAllocator() {$/;"	f	namespace:__tsan
InitializeAllocatorLate	lib/tsan/rtl/tsan_mman.cc	/^void InitializeAllocatorLate() {$/;"	f	namespace:__tsan
InitializeAsanInterceptors	lib/asan/asan_fuchsia.cc	/^void InitializeAsanInterceptors() {}$/;"	f	namespace:__asan
InitializeAsanInterceptors	lib/asan/asan_interceptors.cc	/^void InitializeAsanInterceptors() {$/;"	f	namespace:__asan
InitializeAsanInterceptors	lib/asan/asan_rtems.cc	/^void InitializeAsanInterceptors() {}$/;"	f	namespace:__asan
InitializeClonedVariables	lib/asan/asan_win_dynamic_runtime_thunk.cc	/^static int InitializeClonedVariables() {$/;"	f	file:
InitializeCommonFlags	lib/sanitizer_common/sanitizer_flags.cc	/^void InitializeCommonFlags(CommonFlags *cf) {$/;"	f	namespace:__sanitizer
InitializeCoverage	lib/sanitizer_common/sanitizer_coverage_fuchsia.cc	/^void InitializeCoverage(bool enabled, const char *dir) {$/;"	f	namespace:__sanitizer
InitializeCoverage	lib/sanitizer_common/sanitizer_coverage_libcdep_new.cc	/^void InitializeCoverage(bool enabled, const char *dir) {$/;"	f	namespace:__sanitizer
InitializeDbgHelpIfNeeded	lib/sanitizer_common/sanitizer_symbolizer_win.cc	/^void InitializeDbgHelpIfNeeded() {$/;"	f	namespace:__sanitizer
InitializeDeadlySignals	lib/ubsan/ubsan_signals_standalone.cc	/^void InitializeDeadlySignals() {$/;"	f	namespace:__ubsan
InitializeDeadlySignals	lib/ubsan/ubsan_signals_standalone.cc	/^void InitializeDeadlySignals() {}$/;"	f	namespace:__ubsan
InitializeDynamicAnnotations	lib/tsan/go/tsan_go.cc	/^void InitializeDynamicAnnotations() {$/;"	f	namespace:__tsan
InitializeDynamicAnnotations	lib/tsan/rtl/tsan_interface_ann.cc	/^void InitializeDynamicAnnotations() {$/;"	f	namespace:__tsan
InitializeFlags	lib/asan/asan_flags.cc	/^void InitializeFlags() {$/;"	f	namespace:__asan
InitializeFlags	lib/cfi/cfi.cc	/^void InitializeFlags() {$/;"	f	namespace:__cfi
InitializeFlags	lib/dfsan/dfsan.cc	/^static void InitializeFlags() {$/;"	f	file:
InitializeFlags	lib/hwasan/hwasan.cc	/^static void InitializeFlags() {$/;"	f	namespace:__hwasan
InitializeFlags	lib/lsan/lsan.cc	/^static void InitializeFlags() {$/;"	f	file:
InitializeFlags	lib/msan/msan.cc	/^static void InitializeFlags() {$/;"	f	namespace:__msan
InitializeFlags	lib/tsan/dd/dd_rtl.cc	/^static void InitializeFlags() {$/;"	f	namespace:__dsan
InitializeFlags	lib/tsan/rtl/tsan_flags.cc	/^void InitializeFlags(Flags *f, const char *env) {$/;"	f	namespace:__tsan
InitializeFlags	lib/ubsan/ubsan_flags.cc	/^void InitializeFlags() {$/;"	f	namespace:__ubsan
InitializeHighMemEnd	lib/asan/asan_rtl.cc	/^static void InitializeHighMemEnd() {$/;"	f	namespace:__asan
InitializeInterceptors	lib/dfsan/dfsan_interceptors.cc	/^void InitializeInterceptors() {$/;"	f	namespace:__dfsan
InitializeInterceptors	lib/hwasan/hwasan_interceptors.cc	/^void InitializeInterceptors() {$/;"	f	namespace:__hwasan
InitializeInterceptors	lib/lsan/lsan_interceptors.cc	/^void InitializeInterceptors() {$/;"	f	namespace:std::__lsan
InitializeInterceptors	lib/msan/msan_interceptors.cc	/^void InitializeInterceptors() {$/;"	f	namespace:__msan
InitializeInterceptors	lib/tsan/dd/dd_interceptors.cc	/^void InitializeInterceptors() {$/;"	f	namespace:__dsan
InitializeInterceptors	lib/tsan/go/tsan_go.cc	/^void InitializeInterceptors() {$/;"	f	namespace:__tsan
InitializeInterceptors	lib/tsan/rtl/tsan_interceptors.cc	/^void InitializeInterceptors() {$/;"	f	namespace:__tsan
InitializeLibIgnore	lib/tsan/rtl/tsan_interceptors.cc	/^void InitializeLibIgnore() {$/;"	f	namespace:__tsan
InitializeLibrary	test/tsan/Darwin/external-lib.cc	/^void InitializeLibrary() {$/;"	f
InitializeMutex	lib/tsan/rtl/tsan_mutex.cc	/^void InitializeMutex() {$/;"	f	namespace:__tsan
InitializePlatform	lib/tsan/rtl/tsan_platform_linux.cc	/^void InitializePlatform() {$/;"	f	namespace:__tsan
InitializePlatform	lib/tsan/rtl/tsan_platform_mac.cc	/^void InitializePlatform() {$/;"	f	namespace:__tsan
InitializePlatform	lib/tsan/rtl/tsan_platform_windows.cc	/^void InitializePlatform() {$/;"	f	namespace:__tsan
InitializePlatformEarly	lib/dfsan/dfsan.cc	/^static void InitializePlatformEarly() {$/;"	f	file:
InitializePlatformEarly	lib/tsan/rtl/tsan_platform_linux.cc	/^void InitializePlatformEarly() {$/;"	f	namespace:__tsan
InitializePlatformEarly	lib/tsan/rtl/tsan_platform_mac.cc	/^void InitializePlatformEarly() {$/;"	f	namespace:__tsan
InitializePlatformEarly	lib/tsan/rtl/tsan_platform_windows.cc	/^void InitializePlatformEarly() {$/;"	f	namespace:__tsan
InitializePlatformExceptionHandlers	lib/asan/asan_fuchsia.cc	/^void InitializePlatformExceptionHandlers() {}$/;"	f	namespace:__asan
InitializePlatformExceptionHandlers	lib/asan/asan_linux.cc	/^void InitializePlatformExceptionHandlers() {}$/;"	f	namespace:__asan
InitializePlatformExceptionHandlers	lib/asan/asan_mac.cc	/^void InitializePlatformExceptionHandlers() {}$/;"	f	namespace:__asan
InitializePlatformExceptionHandlers	lib/asan/asan_rtems.cc	/^void InitializePlatformExceptionHandlers() {}$/;"	f	namespace:__asan
InitializePlatformExceptionHandlers	lib/asan/asan_win.cc	/^void InitializePlatformExceptionHandlers() {$/;"	f	namespace:__asan
InitializePlatformInterceptors	lib/asan/asan_linux.cc	/^void InitializePlatformInterceptors() {}$/;"	f	namespace:__asan
InitializePlatformInterceptors	lib/asan/asan_mac.cc	/^void InitializePlatformInterceptors() {}$/;"	f	namespace:__asan
InitializePlatformInterceptors	lib/asan/asan_rtems.cc	/^void InitializePlatformInterceptors() {}$/;"	f	namespace:__asan
InitializePlatformInterceptors	lib/asan/asan_win.cc	/^void InitializePlatformInterceptors() {$/;"	f	namespace:__asan
InitializePlatformSpecificModules	lib/lsan/lsan_common_linux.cc	/^void InitializePlatformSpecificModules() {$/;"	f	namespace:__lsan
InitializePlatformSpecificModules	lib/lsan/lsan_common_mac.cc	/^void InitializePlatformSpecificModules() {}$/;"	f	namespace:__lsan
InitializeRootRegions	lib/lsan/lsan_common.cc	/^void InitializeRootRegions() {$/;"	f	namespace:__lsan
InitializeSancovFlags	lib/sanitizer_common/sancov_flags.cc	/^void InitializeSancovFlags() {$/;"	f	namespace:__sancov
InitializeShadowBaseAddress	lib/hwasan/hwasan_linux.cc	/^static void InitializeShadowBaseAddress(uptr shadow_size_bytes) {$/;"	f	namespace:__hwasan
InitializeShadowMemory	lib/asan/asan_fuchsia.cc	/^void InitializeShadowMemory() {$/;"	f	namespace:__asan
InitializeShadowMemory	lib/asan/asan_rtems.cc	/^void InitializeShadowMemory() {$/;"	f	namespace:__asan
InitializeShadowMemory	lib/asan/asan_shadow_setup.cc	/^void InitializeShadowMemory() {$/;"	f	namespace:__asan
InitializeShadowMemory	lib/tsan/rtl/tsan_platform_posix.cc	/^void InitializeShadowMemory() {$/;"	f	namespace:__tsan
InitializeShadowMemoryPlatform	lib/tsan/rtl/tsan_platform_linux.cc	/^void InitializeShadowMemoryPlatform() {$/;"	f	namespace:__tsan
InitializeShadowMemoryPlatform	lib/tsan/rtl/tsan_platform_mac.cc	/^void InitializeShadowMemoryPlatform() { }$/;"	f	namespace:__tsan
InitializeSuppressions	lib/asan/asan_suppressions.cc	/^void InitializeSuppressions() {$/;"	f	namespace:__asan
InitializeSuppressions	lib/lsan/lsan_common.cc	/^void InitializeSuppressions() {$/;"	f	namespace:__lsan
InitializeSuppressions	lib/tsan/rtl/tsan_suppressions.cc	/^void InitializeSuppressions() {$/;"	f	namespace:__tsan
InitializeSuppressions	lib/ubsan/ubsan_diag.cc	/^void __ubsan::InitializeSuppressions() {$/;"	f	class:__ubsan
InitializeSwiftDemangler	lib/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc	/^static void InitializeSwiftDemangler() {$/;"	f	namespace:__sanitizer
InitializeThreadRegistry	lib/lsan/lsan_thread.cc	/^void InitializeThreadRegistry() {$/;"	f	namespace:__lsan
InitializeUnstableCounters	lib/fuzzer/FuzzerTracePC.cpp	/^void TracePC::InitializeUnstableCounters() {$/;"	f	class:fuzzer::TracePC
Initializer	lib/ubsan/ubsan_diag.cc	/^ScopedReport::Initializer::Initializer() { InitAsStandaloneIfNecessary(); }$/;"	f	class:ScopedReport::Initializer
Initializer	lib/ubsan/ubsan_diag.h	/^  struct Initializer {$/;"	s	class:__ubsan::ScopedReport
InnermostClass	lib/sanitizer_common/scripts/cpplint.py	/^  def InnermostClass(self):$/;"	m	class:_NestingState
InputCorpus	lib/fuzzer/FuzzerCorpus.h	/^  InputCorpus(const std::string &OutputCorpus) : OutputCorpus(OutputCorpus) {$/;"	f	class:fuzzer::InputCorpus
InputCorpus	lib/fuzzer/FuzzerCorpus.h	/^class InputCorpus {$/;"	c	namespace:fuzzer
InputInfo	lib/fuzzer/FuzzerCorpus.h	/^struct InputInfo {$/;"	s	namespace:fuzzer
InputLen	lib/fuzzer/dataflow/DataFlow.cpp	/^static size_t InputLen;$/;"	v	file:
InputSizesPerFeature	lib/fuzzer/FuzzerCorpus.h	/^  uint32_t InputSizesPerFeature[kFeatureSetSize];$/;"	m	class:fuzzer::InputCorpus
Inputs	lib/fuzzer/FuzzerCorpus.h	/^  Vector<InputInfo*> Inputs;$/;"	m	class:fuzzer::InputCorpus
Inputs	lib/fuzzer/FuzzerDriver.cpp	/^static Vector<std::string> *Inputs;$/;"	m	namespace:fuzzer	file:
Insert	lib/asan/asan_memory_profile.cc	/^  void Insert(u32 id, uptr size) {$/;"	f	class:__asan::HeapProfile	file:
Insert	lib/fuzzer/FuzzerTracePC.h	/^  void Insert(size_t Idx, const T &Arg1, const T &Arg2) {$/;"	f	struct:fuzzer::TableOfRecentCompares
InsertPartOf	lib/fuzzer/FuzzerMutate.cpp	/^size_t MutationDispatcher::InsertPartOf(const uint8_t *From, size_t FromSize,$/;"	f	class:fuzzer::MutationDispatcher
InsertShadowStackFrameForTag	lib/tsan/rtl/tsan_external.cc	/^void InsertShadowStackFrameForTag(ThreadState *thr, uptr tag) {$/;"	f	namespace:__tsan
Install	lib/cfi/cfi.cc	/^void ShadowBuilder::Install() {$/;"	f	class:__cfi::ShadowBuilder
InstallAtExitHandler	lib/hwasan/hwasan_linux.cc	/^void InstallAtExitHandler() {$/;"	f	namespace:__hwasan
InstallAtExitHandler	lib/msan/msan_linux.cc	/^void InstallAtExitHandler() {$/;"	f	namespace:__msan
InstallDeadlySignalHandlers	lib/sanitizer_common/sanitizer_fuchsia.cc	/^void InstallDeadlySignalHandlers(SignalHandlerType handler) {}$/;"	f	namespace:__sanitizer
InstallDeadlySignalHandlers	lib/sanitizer_common/sanitizer_posix_libcdep.cc	/^void InstallDeadlySignalHandlers(SignalHandlerType handler) {$/;"	f	namespace:__sanitizer
InstallDeadlySignalHandlers	lib/sanitizer_common/sanitizer_rtems.cc	/^void InstallDeadlySignalHandlers(SignalHandlerType handler) {}$/;"	f	namespace:__sanitizer
InstallDeadlySignalHandlers	lib/sanitizer_common/sanitizer_win.cc	/^void InstallDeadlySignalHandlers(SignalHandlerType handler) {$/;"	f	namespace:__sanitizer
InstallHandler	test/sanitizer_common/TestCases/Linux/allow_user_segv.cc	/^bool InstallHandler(int signum, struct sigaction *original_sigaction) {$/;"	f
InstallMallocFreeHooks	lib/sanitizer_common/sanitizer_common.cc	/^static int InstallMallocFreeHooks(void (*malloc_hook)(const void *, uptr),$/;"	f	namespace:__sanitizer
IntFlag	lib/fuzzer/FuzzerDriver.cpp	/^  int   *IntFlag;$/;"	m	struct:fuzzer::FlagDescription	file:
IntHolder	test/asan/TestCases/use-after-scope-dtor-order.cc	/^  explicit IntHolder(int *val = 0) : val_(val) { }$/;"	f	struct:IntHolder
IntHolder	test/asan/TestCases/use-after-scope-dtor-order.cc	/^struct IntHolder {$/;"	s	file:
IntHolder	test/asan/TestCases/use-after-scope-temp.cc	/^struct IntHolder {$/;"	s	file:
IntHolder	test/asan/TestCases/use-after-scope-temp2.cc	/^struct IntHolder {$/;"	s	file:
IntPtrT	lib/profile/InstrProfiling.h	/^typedef void *IntPtrT;$/;"	t
Integer	test/asan/TestCases/initialization-constexpr.cc	/^  constexpr Integer(int x = 0) : value(x) {}$/;"	f	class:Integer
Integer	test/asan/TestCases/initialization-constexpr.cc	/^class Integer {$/;"	c	file:
InterceptCB	lib/sanitizer_common/sanitizer_win_weak_interception.cc	/^typedef void (*InterceptCB)();$/;"	t	file:
InterceptedRealFunction	lib/interception/tests/interception_win_test.cc	/^IdentityFunction InterceptedRealFunction;$/;"	m	namespace:__interception::__anon12	file:
InterceptionFailed	lib/interception/interception_win.cc	/^static void InterceptionFailed() {$/;"	f	namespace:__interception
InterceptorContext	lib/tsan/rtl/tsan_interceptors.cc	/^  InterceptorContext()$/;"	f	struct:__tsan::InterceptorContext
InterceptorContext	lib/tsan/rtl/tsan_interceptors.cc	/^struct InterceptorContext {$/;"	s	namespace:__tsan	file:
InterceptorFunction	lib/interception/tests/interception_win_test.cc	/^int InterceptorFunction(int x) {$/;"	f	namespace:__interception::__anon12
InterceptorFunctionCalled	lib/interception/tests/interception_linux_test.cc	/^static int InterceptorFunctionCalled;$/;"	v	file:
InterceptorFunctionCalled	lib/interception/tests/interception_win_test.cc	/^int InterceptorFunctionCalled;$/;"	m	namespace:__interception::__anon12	file:
InterceptorScope	lib/hwasan/hwasan_interceptors.cc	/^  InterceptorScope() {$/;"	f	struct:InterceptorScope
InterceptorScope	lib/hwasan/hwasan_interceptors.cc	/^struct InterceptorScope {$/;"	s	file:
InterceptorScope	lib/msan/msan_interceptors.cc	/^  InterceptorScope() { ++in_interceptor_scope; }$/;"	f	struct:InterceptorScope
InterceptorScope	lib/msan/msan_interceptors.cc	/^struct InterceptorScope {$/;"	s	file:
InterestingDLLsAvailable	lib/interception/interception_win.cc	/^static void **InterestingDLLsAvailable() {$/;"	f	namespace:__interception
Intermediate	test/msan/dtor-multiple-inheritance-nontrivial-class-members.cc	/^  Intermediate() { intermediate_a = 5; }$/;"	f	struct:Intermediate
Intermediate	test/msan/dtor-multiple-inheritance-nontrivial-class-members.cc	/^struct Intermediate : virtual public VirtualBase {$/;"	s	file:
InternalAlloc	lib/sanitizer_common/sanitizer_allocator.cc	/^void *InternalAlloc(uptr size, InternalAllocatorCache *cache, uptr alignment) {$/;"	f	namespace:__sanitizer
InternalAllocator	lib/sanitizer_common/sanitizer_allocator_internal.h	/^                          SecondaryInternalAllocator> InternalAllocator;$/;"	t	namespace:__sanitizer
InternalAllocatorCache	lib/sanitizer_common/sanitizer_allocator_internal.h	/^    InternalAllocatorCache;$/;"	t	namespace:__sanitizer
InternalCalloc	lib/sanitizer_common/sanitizer_allocator.cc	/^void *InternalCalloc(uptr count, uptr size, InternalAllocatorCache *cache) {$/;"	f	namespace:__sanitizer
InternalDeadlockDetector	lib/tsan/rtl/tsan_mutex.cc	/^InternalDeadlockDetector::InternalDeadlockDetector() {$/;"	f	class:__tsan::InternalDeadlockDetector
InternalDeadlockDetector	lib/tsan/rtl/tsan_mutex.h	/^class InternalDeadlockDetector {$/;"	c	namespace:__tsan
InternalDieCallbacks	lib/sanitizer_common/sanitizer_termination.cc	/^static DieCallbackType InternalDieCallbacks[kMaxNumOfInternalDieCallbacks];$/;"	m	namespace:__sanitizer	file:
InternalFree	lib/sanitizer_common/sanitizer_allocator.cc	/^void InternalFree(void *addr, InternalAllocatorCache *cache) {$/;"	f	namespace:__sanitizer
InternalGetProcAddress	lib/interception/interception_win.cc	/^uptr InternalGetProcAddress(void *module, const char *func_name) {$/;"	f	namespace:__interception
InternalLowerBound	lib/sanitizer_common/sanitizer_common.h	/^uptr InternalLowerBound(const Container &v, uptr first, uptr last,$/;"	f	namespace:__sanitizer
InternalMmapVector	lib/sanitizer_common/sanitizer_common.h	/^  InternalMmapVector() { InternalMmapVectorNoCtor<T>::Initialize(1); }$/;"	f	class:__sanitizer::InternalMmapVector
InternalMmapVector	lib/sanitizer_common/sanitizer_common.h	/^  explicit InternalMmapVector(uptr cnt) {$/;"	f	class:__sanitizer::InternalMmapVector
InternalMmapVector	lib/sanitizer_common/sanitizer_common.h	/^class InternalMmapVector : public InternalMmapVectorNoCtor<T> {$/;"	c	namespace:__sanitizer
InternalMmapVectorNoCtor	lib/sanitizer_common/sanitizer_common.h	/^class InternalMmapVectorNoCtor {$/;"	c	namespace:__sanitizer
InternalRealloc	lib/sanitizer_common/sanitizer_allocator.cc	/^void *InternalRealloc(void *addr, uptr size, InternalAllocatorCache *cache) {$/;"	f	namespace:__sanitizer
InternalScopedString	lib/sanitizer_common/sanitizer_common.h	/^  explicit InternalScopedString(uptr max_length)$/;"	f	class:__sanitizer::InternalScopedString
InternalScopedString	lib/sanitizer_common/sanitizer_common.h	/^class InternalScopedString : public InternalMmapVector<char> {$/;"	c	namespace:__sanitizer
InternalSigaction	test/asan/TestCases/Linux/preinstalled_signal.cc	/^int InternalSigaction(int sig, KernelSigaction *act, KernelSigaction *oact) {$/;"	f
InternalSizeClassMap	lib/sanitizer_common/sanitizer_allocator_internal.h	/^typedef CompactSizeClassMap InternalSizeClassMap;$/;"	t	namespace:__sanitizer
InternalStrnlen	lib/fuzzer/FuzzerTracePC.cpp	/^static size_t InternalStrnlen(const char *S, size_t MaxLen) {$/;"	f	namespace:fuzzer
InternalStrnlen2	lib/fuzzer/FuzzerTracePC.cpp	/^static size_t InternalStrnlen2(const char *S1, const char *S2) {$/;"	f	namespace:fuzzer
InternalSymbolizer	lib/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc	/^  InternalSymbolizer() { }$/;"	f	class:__sanitizer::InternalSymbolizer	file:
InternalSymbolizer	lib/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc	/^class InternalSymbolizer : public SymbolizerTool {$/;"	c	namespace:__sanitizer	file:
InterruptCallback	lib/fuzzer/FuzzerLoop.cpp	/^void Fuzzer::InterruptCallback() {$/;"	f	class:fuzzer::Fuzzer
InterruptHandler	lib/fuzzer/FuzzerUtilFuchsia.cpp	/^void InterruptHandler() {$/;"	f	namespace:fuzzer::__anon35
InterruptHandler	lib/fuzzer/FuzzerUtilPosix.cpp	/^static void InterruptHandler(int, siginfo_t *, void *) {$/;"	f	namespace:fuzzer
Intervals	lib/fuzzer/FuzzerCorpus.h	/^  Vector<double> Intervals;$/;"	m	class:fuzzer::InputCorpus
IntervalsAreSeparate	lib/sanitizer_common/sanitizer_posix.cc	/^static inline bool IntervalsAreSeparate(uptr start1, uptr end1,$/;"	f	namespace:__sanitizer
IntrusiveList	lib/sanitizer_common/sanitizer_list.h	/^struct IntrusiveList {$/;"	s	namespace:__sanitizer
InvalidBuiltinData	lib/ubsan/ubsan_handlers.h	/^struct InvalidBuiltinData {$/;"	s	namespace:__ubsan
InvalidPCParam	lib/lsan/lsan_common.cc	/^struct InvalidPCParam {$/;"	s	namespace:__lsan	file:
InvalidValueData	lib/ubsan/ubsan_handlers.h	/^struct InvalidValueData {$/;"	s	namespace:__ubsan
InvalidateModuleList	lib/sanitizer_common/sanitizer_symbolizer.cc	/^void Symbolizer::InvalidateModuleList() {$/;"	f	class:__sanitizer::Symbolizer
IoctlInit	lib/sanitizer_common/tests/sanitizer_ioctl_test.cc	/^  IoctlInit() {$/;"	f	struct:IoctlInit
IoctlInit	lib/sanitizer_common/tests/sanitizer_ioctl_test.cc	/^static struct IoctlInit {$/;"	s	file:
IsARMABIArrayCookie	lib/lsan/lsan_common.h	/^static inline bool IsARMABIArrayCookie(uptr chunk_beg, uptr chunk_size,$/;"	f	namespace:__lsan
IsASCII	lib/asan/asan_globals.cc	/^static bool IsASCII(unsigned char c) { return \/*0x00 <= c &&*\/ c <= 0x7F; }$/;"	f	namespace:__asan
IsASCII	lib/fuzzer/FuzzerUtil.cpp	/^bool IsASCII(const Unit &U) { return IsASCII(U.data(), U.size()); }$/;"	f	namespace:fuzzer
IsASCII	lib/fuzzer/FuzzerUtil.cpp	/^bool IsASCII(const uint8_t *Data, size_t Size) {$/;"	f	namespace:fuzzer
IsAbsolutePath	lib/sanitizer_common/sanitizer_posix.cc	/^bool IsAbsolutePath(const char *path) {$/;"	f	namespace:__sanitizer
IsAbsolutePath	lib/sanitizer_common/sanitizer_rtems.cc	/^bool IsAbsolutePath(const char *path) {$/;"	f	namespace:__sanitizer
IsAbsolutePath	lib/sanitizer_common/sanitizer_win.cc	/^bool IsAbsolutePath(const char *path) {$/;"	f	namespace:__sanitizer
IsAccessibleMemoryRange	lib/sanitizer_common/sanitizer_fuchsia.cc	/^bool IsAccessibleMemoryRange(uptr beg, uptr size) {$/;"	f	namespace:__sanitizer
IsAccessibleMemoryRange	lib/sanitizer_common/sanitizer_posix_libcdep.cc	/^bool IsAccessibleMemoryRange(uptr beg, uptr size) {$/;"	f	namespace:__sanitizer
IsAccessibleMemoryRange	lib/sanitizer_common/sanitizer_rtems.cc	/^bool IsAccessibleMemoryRange(uptr beg, uptr size) {$/;"	f	namespace:__sanitizer
IsAccessibleMemoryRange	lib/sanitizer_common/sanitizer_win.cc	/^bool IsAccessibleMemoryRange(uptr beg, uptr size) {$/;"	f	namespace:__sanitizer
IsAcqRelOrder	lib/tsan/rtl/tsan_interface_atomic.cc	/^static bool IsAcqRelOrder(morder mo) {$/;"	f	file:
IsAcquireOrder	lib/tsan/rtl/tsan_interface_atomic.cc	/^static bool IsAcquireOrder(morder mo) {$/;"	f	file:
IsAddressNearGlobal	lib/asan/asan_globals.cc	/^static bool IsAddressNearGlobal(uptr addr, const __asan_global &g) {$/;"	f	namespace:__asan
IsAligned	lib/sanitizer_common/sanitizer_common.h	/^INLINE bool IsAligned(uptr a, uptr alignment) {$/;"	f	namespace:__sanitizer
IsAlive	lib/sanitizer_common/sanitizer_linux.cc	/^bool ThreadLister::IsAlive(int tid) {$/;"	f	class:__sanitizer::ThreadLister
IsAllocated	lib/asan/asan_allocator.cc	/^bool AsanChunkView::IsAllocated() const {$/;"	f	class:__asan::AsanChunkView
IsAllocated	lib/hwasan/hwasan_allocator.cc	/^bool HwasanChunkView::IsAllocated() const {$/;"	f	class:__hwasan::HwasanChunkView
IsAllocated	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^    bool IsAllocated() const {$/;"	f	class:SizeClassAllocator64::PackedCounterArray
IsAllocatorOutOfMemory	lib/sanitizer_common/sanitizer_allocator.cc	/^bool IsAllocatorOutOfMemory() {$/;"	f	namespace:__sanitizer
IsAlreadyAcquired	lib/tsan/rtl/tsan_clock.cc	/^bool ThreadClock::IsAlreadyAcquired(const SyncClock *src) const {$/;"	f	class:__tsan::ThreadClock
IsAppMem	lib/tsan/rtl/tsan_platform.h	/^bool IsAppMem(uptr mem) {$/;"	f	namespace:__tsan
IsAppMemImpl	lib/tsan/rtl/tsan_platform.h	/^bool IsAppMemImpl(uptr mem) {$/;"	f	namespace:__tsan
IsAppNotRodata	lib/tsan/rtl/tsan_interceptors.cc	/^static bool IsAppNotRodata(uptr addr) {$/;"	f	file:
IsAtomic	lib/tsan/rtl/tsan_rtl.h	/^  bool IsAtomic() const {$/;"	f	class:__tsan::Shadow
IsBlankLine	lib/sanitizer_common/scripts/cpplint.py	/^def IsBlankLine(line):$/;"	f
IsBothReadsOrAtomic	lib/tsan/rtl/tsan_rtl.h	/^  bool ALWAYS_INLINE IsBothReadsOrAtomic(bool kIsWrite, bool kIsAtomic) const {$/;"	f	class:__tsan::Shadow
IsClient	lib/fuzzer/FuzzerShmem.h	/^  bool IsClient() const { return Data && !IAmServer; }$/;"	f	class:fuzzer::SharedMemoryRegion
IsCppString	lib/sanitizer_common/scripts/cpplint.py	/^def IsCppString(line):$/;"	f
IsDecimal	lib/sanitizer_common/sanitizer_procmaps_common.cc	/^bool IsDecimal(char c) {$/;"	f	namespace:__sanitizer
IsDigit	lib/sanitizer_common/sanitizer_common.h	/^INLINE bool IsDigit(int c) {$/;"	f	namespace:__sanitizer
IsDirectory	lib/fuzzer/FuzzerIOPosix.cpp	/^static bool IsDirectory(const std::string &Path) {$/;"	f	namespace:fuzzer
IsDisabled	lib/fuzzer/FuzzerLoop.cpp	/^  bool IsDisabled() const {$/;"	f	class:fuzzer::TraceLock
IsDynamicRTName	lib/asan/asan_linux.cc	/^static bool IsDynamicRTName(const char *libname) {$/;"	f	namespace:__asan
IsErrorSuppressedByNolint	lib/sanitizer_common/scripts/cpplint.py	/^def IsErrorSuppressedByNolint(category, linenum):$/;"	f
IsExecutable	lib/sanitizer_common/sanitizer_procmaps.h	/^  bool IsExecutable() const { return protection & kProtectionExecute; }$/;"	f	class:__sanitizer::MemoryMappedSegment
IsExpectedReport	lib/tsan/go/tsan_go.cc	/^bool IsExpectedReport(uptr addr, uptr size) {$/;"	f	namespace:__tsan
IsExpectedReport	lib/tsan/rtl/tsan_interface_ann.cc	/^bool IsExpectedReport(uptr addr, uptr size) {$/;"	f	namespace:__tsan
IsFeatureNew	lib/fuzzer/FuzzerCorpus.h	/^  bool IsFeatureNew(size_t Idx, uint32_t NewSize, bool Shrink) {$/;"	f	class:fuzzer::InputCorpus
IsFile	lib/fuzzer/FuzzerIOPosix.cpp	/^bool IsFile(const std::string &Path) {$/;"	f	namespace:fuzzer
IsFile	lib/fuzzer/FuzzerIOWindows.cpp	/^bool IsFile(const std::string &Path) {$/;"	f	namespace:fuzzer
IsFile	lib/fuzzer/FuzzerIOWindows.cpp	/^static bool IsFile(const std::string &Path, const DWORD &FileAttributes) {$/;"	f	namespace:fuzzer
IsFiredSuppression	lib/tsan/rtl/tsan_rtl_report.cc	/^bool IsFiredSuppression(Context *ctx, ReportType type, StackTrace trace) {$/;"	f	namespace:__tsan
IsFiredSuppression	lib/tsan/rtl/tsan_rtl_report.cc	/^static bool IsFiredSuppression(Context *ctx, ReportType type, uptr addr) {$/;"	f	namespace:__tsan
IsFlagSet	lib/tsan/rtl/tsan_sync.h	/^  bool IsFlagSet(u32 f) const {$/;"	f	struct:__tsan::SyncVar
IsFreed	lib/tsan/rtl/tsan_rtl.h	/^  bool IsFreed() const {$/;"	f	class:__tsan::Shadow
IsFromLocalPool	lib/asan/asan_malloc_linux.cc	/^bool IsFromLocalPool(const void *ptr) {$/;"	f
IsHandledDeadlyException	lib/sanitizer_common/sanitizer_win.cc	/^bool IsHandledDeadlyException(DWORD exceptionCode) {$/;"	f	namespace:__sanitizer
IsHex	lib/sanitizer_common/sanitizer_procmaps_common.cc	/^bool IsHex(char c) {$/;"	f	namespace:__sanitizer
IsIgnored	lib/sanitizer_common/sanitizer_libignore.h	/^inline bool LibIgnore::IsIgnored(uptr pc, bool *pc_in_ignored_lib) const {$/;"	f	class:__sanitizer::LibIgnore
IsInAlphabeticalOrder	lib/sanitizer_common/scripts/cpplint.py	/^  def IsInAlphabeticalOrder(self, header_path):$/;"	m	class:_IncludeState
IsInDlsymAllocPool	lib/asan/asan_malloc_linux.cc	/^static INLINE bool IsInDlsymAllocPool(const void *ptr) {$/;"	f	file:
IsInDlsymAllocPool	lib/hwasan/hwasan_interceptors.cc	/^static bool IsInDlsymAllocPool(const void *ptr) {$/;"	f	file:
IsInDlsymAllocPool	lib/msan/msan_interceptors.cc	/^static bool IsInDlsymAllocPool(const void *ptr) {$/;"	f	file:
IsInInterceptorScope	lib/hwasan/hwasan_interceptors.cc	/^bool IsInInterceptorScope() {$/;"	f
IsInInterceptorScope	lib/msan/msan_interceptors.cc	/^bool IsInInterceptorScope() {$/;"	f
IsInRange	lib/sanitizer_common/sanitizer_libignore.h	/^  inline bool IsInRange(uptr pc, const LibCodeRange &range) const {$/;"	f	class:__sanitizer::LibIgnore
IsInStackOrTls	lib/tsan/rtl/tsan_rtl_report.cc	/^static bool IsInStackOrTls(ThreadContextBase *tctx_base, void *arg) {$/;"	f	namespace:__tsan
IsInSymbolizer	lib/hwasan/hwasan.cc	/^bool IsInSymbolizer() {$/;"	f	namespace:__hwasan
IsInSymbolizer	lib/msan/msan.cc	/^bool IsInSymbolizer() { return is_in_symbolizer; }$/;"	f	namespace:__msan
IsInterceptorSuppressed	lib/asan/asan_suppressions.cc	/^bool IsInterceptorSuppressed(const char *interceptor_name) {$/;"	f	namespace:__asan
IsInterestingCoverageFile	lib/fuzzer/FuzzerIOPosix.cpp	/^bool IsInterestingCoverageFile(const std::string &FileName) {$/;"	f	namespace:fuzzer
IsInterestingCoverageFile	lib/fuzzer/FuzzerIOWindows.cpp	/^bool IsInterestingCoverageFile(const std::string &FileName) {$/;"	f	namespace:fuzzer
IsInvalidPointerPair	lib/asan/asan_report.cc	/^static bool IsInvalidPointerPair(uptr a1, uptr a2) {$/;"	f	namespace:__asan
IsItaniumABIArrayCookie	lib/lsan/lsan_common.h	/^static inline bool IsItaniumABIArrayCookie(uptr chunk_beg, uptr chunk_size,$/;"	f	namespace:__lsan
IsLinker	lib/lsan/lsan_common_linux.cc	/^static bool IsLinker(const LoadedModule& module) {$/;"	f	namespace:__lsan
IsLoadOrder	lib/tsan/rtl/tsan_interface_atomic.cc	/^static bool IsLoadOrder(morder mo) {$/;"	f	file:
IsMainThread	lib/hwasan/hwasan_thread.h	/^  bool IsMainThread() { return start_routine_ == nullptr; }$/;"	f	class:__hwasan::HwasanThread
IsMainThread	lib/msan/msan_thread.h	/^  bool IsMainThread() { return start_routine_ == nullptr; }$/;"	f	class:__msan::MsanThread
IsMemoryAccess	lib/sanitizer_common/sanitizer_posix.cc	/^bool SignalContext::IsMemoryAccess() const {$/;"	f	class:__sanitizer::SignalContext
IsMemoryAccess	lib/sanitizer_common/sanitizer_win.cc	/^bool SignalContext::IsMemoryAccess() const {$/;"	f	class:__sanitizer::SignalContext
IsMemoryPadding	lib/interception/interception_win.cc	/^static bool IsMemoryPadding(uptr address, uptr size) {$/;"	f	namespace:__interception
IsMetaMem	lib/tsan/rtl/tsan_platform.h	/^bool IsMetaMem(uptr mem) {$/;"	f	namespace:__tsan
IsMetaMemImpl	lib/tsan/rtl/tsan_platform.h	/^bool IsMetaMemImpl(uptr mem) {$/;"	f	namespace:__tsan
IsModuleInstrumented	lib/sanitizer_common/sanitizer_procmaps_mac.cc	/^static bool IsModuleInstrumented(const load_command *first_lc) {$/;"	f	namespace:__sanitizer
IsMyThread	lib/fuzzer/FuzzerInternal.h	/^  static thread_local bool IsMyThread;$/;"	m	class:fuzzer::Fuzzer
IsMyThread	lib/fuzzer/FuzzerLoop.cpp	/^thread_local bool Fuzzer::IsMyThread;$/;"	m	class:fuzzer::Fuzzer	file:
IsODRViolationSuppressed	lib/asan/asan_suppressions.cc	/^bool IsODRViolationSuppressed(const char *global_var_name) {$/;"	f	namespace:__asan
IsOneOf	lib/sanitizer_common/sanitizer_procmaps_linux.cc	/^static bool IsOneOf(char c, char c1, char c2) {$/;"	f	namespace:__sanitizer
IsPCSuppressed	lib/ubsan/ubsan_diag.cc	/^bool __ubsan::IsPCSuppressed(ErrorType ET, uptr PC, const char *Filename) {$/;"	f	class:__ubsan
IsPathSeparator	lib/sanitizer_common/sanitizer_posix.cc	/^bool IsPathSeparator(const char c) {$/;"	f	namespace:__sanitizer
IsPathSeparator	lib/sanitizer_common/sanitizer_rtems.cc	/^bool IsPathSeparator(const char c) {$/;"	f	namespace:__sanitizer
IsPathSeparator	lib/sanitizer_common/sanitizer_win.cc	/^bool IsPathSeparator(const char c) {$/;"	f	namespace:__sanitizer
IsPcInstrumented	lib/sanitizer_common/sanitizer_libignore.h	/^inline bool LibIgnore::IsPcInstrumented(uptr pc) const {$/;"	f	class:__sanitizer::LibIgnore
IsPowerOfTwo	lib/sanitizer_common/sanitizer_common.h	/^INLINE bool IsPowerOfTwo(uptr x) {$/;"	f	namespace:__sanitizer
IsPremapShadowAvailable	lib/hwasan/hwasan_dynamic_shadow.cc	/^static bool IsPremapShadowAvailable() {$/;"	f	namespace:__hwasan
IsProcessRunning	lib/sanitizer_common/sanitizer_posix_libcdep.cc	/^bool IsProcessRunning(pid_t pid) {$/;"	f	namespace:__sanitizer
IsProcessRunning	lib/sanitizer_common/sanitizer_win.cc	/^bool IsProcessRunning(pid_t pid) {$/;"	f	namespace:__sanitizer
IsQuarantined	lib/asan/asan_allocator.cc	/^bool AsanChunkView::IsQuarantined() const {$/;"	f	class:__asan::AsanChunkView
IsQueueSerial	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^static bool IsQueueSerial(dispatch_queue_t q) {$/;"	f	namespace:__tsan
IsRWNotWeaker	lib/tsan/rtl/tsan_rtl.h	/^  bool ALWAYS_INLINE IsRWNotWeaker(bool kIsWrite, bool kIsAtomic) const {$/;"	f	class:__tsan::Shadow
IsRWWeakerOrEqual	lib/tsan/rtl/tsan_rtl.h	/^  bool ALWAYS_INLINE IsRWWeakerOrEqual(bool kIsWrite, bool kIsAtomic) const {$/;"	f	class:__tsan::Shadow
IsRead	lib/tsan/rtl/tsan_rtl.h	/^  bool ALWAYS_INLINE IsRead() const { return x_ & kReadBit; }$/;"	f	class:__tsan::Shadow
IsReadable	lib/sanitizer_common/sanitizer_procmaps.h	/^  bool IsReadable() const { return protection & kProtectionRead; }$/;"	f	class:__sanitizer::MemoryMappedSegment
IsRegionExhausted	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  bool IsRegionExhausted(RegionInfo *region, uptr class_id,$/;"	f	class:SizeClassAllocator64
IsReleaseOrder	lib/tsan/rtl/tsan_interface_atomic.cc	/^static bool IsReleaseOrder(morder mo) {$/;"	f	file:
IsSameModule	lib/sanitizer_common/sanitizer_symbolizer_libcdep.cc	/^static bool IsSameModule(const char* path) {$/;"	f	namespace:__sanitizer
IsSeparator	lib/fuzzer/FuzzerIOWindows.cpp	/^static bool IsSeparator(char C) {$/;"	f	namespace:fuzzer
IsServer	lib/fuzzer/FuzzerShmem.h	/^  bool IsServer() const { return Data && IAmServer; }$/;"	f	class:fuzzer::SharedMemoryRegion
IsShadowMem	lib/tsan/rtl/tsan_platform.h	/^bool IsShadowMem(uptr mem) {$/;"	f	namespace:__tsan
IsShadowMemImpl	lib/tsan/rtl/tsan_platform.h	/^bool IsShadowMemImpl(uptr mem) {$/;"	f	namespace:__tsan
IsShared	lib/sanitizer_common/sanitizer_procmaps.h	/^  bool IsShared() const { return protection & kProtectionShared; }$/;"	f	class:__sanitizer::MemoryMappedSegment
IsShared	lib/tsan/rtl/tsan_clock.cc	/^bool SyncClock::IsShared() const {$/;"	f	class:__tsan::SyncClock
IsSorted	lib/sanitizer_common/tests/sanitizer_common_test.cc	/^static bool IsSorted(const uptr *array, uptr n) {$/;"	f	namespace:__sanitizer
IsSource	lib/sanitizer_common/scripts/cpplint.py	/^  def IsSource(self):$/;"	m	class:FileInfo
IsSpace	lib/sanitizer_common/sanitizer_common.h	/^INLINE bool IsSpace(int c) {$/;"	f	namespace:__sanitizer
IsSpecialCaseOfOperatorNew0	lib/lsan/lsan_common.h	/^inline bool IsSpecialCaseOfOperatorNew0(uptr chunk_beg, uptr chunk_size,$/;"	f	namespace:__lsan
IsStackOverflow	lib/sanitizer_common/sanitizer_fuchsia.cc	/^bool SignalContext::IsStackOverflow() const { return false; }$/;"	f	class:__sanitizer::SignalContext
IsStackOverflow	lib/sanitizer_common/sanitizer_posix_libcdep.cc	/^bool SignalContext::IsStackOverflow() const {$/;"	f	class:__sanitizer::SignalContext
IsStackOverflow	lib/sanitizer_common/sanitizer_win.cc	/^bool SignalContext::IsStackOverflow() const {$/;"	f	class:__sanitizer::SignalContext
IsStackTraceSuppressed	lib/asan/asan_suppressions.cc	/^bool IsStackTraceSuppressed(const StackTrace *stack) {$/;"	f	namespace:__asan
IsStateDetached	lib/sanitizer_common/sanitizer_posix_libcdep.cc	/^bool IsStateDetached(int state) {$/;"	f	namespace:__sanitizer
IsStoreOrder	lib/tsan/rtl/tsan_interface_atomic.cc	/^static bool IsStoreOrder(morder mo) {$/;"	f	file:
IsSuppressed	lib/tsan/rtl/tsan_suppressions.cc	/^static uptr IsSuppressed(const char *stype, const AddressInfo &info,$/;"	f	namespace:__tsan
IsSuppressed	lib/tsan/rtl/tsan_suppressions.cc	/^uptr IsSuppressed(ReportType typ, const ReportLocation *loc, Suppression **sp) {$/;"	f	namespace:__tsan
IsSuppressed	lib/tsan/rtl/tsan_suppressions.cc	/^uptr IsSuppressed(ReportType typ, const ReportStack *stack, Suppression **sp) {$/;"	f	namespace:__tsan
IsSystemHeapAddress	lib/asan/asan_linux.cc	/^bool IsSystemHeapAddress (uptr addr) { return false; }$/;"	f	namespace:__asan
IsSystemHeapAddress	lib/asan/asan_mac.cc	/^bool IsSystemHeapAddress (uptr addr) { return false; }$/;"	f	namespace:__asan
IsSystemHeapAddress	lib/asan/asan_win.cc	/^bool IsSystemHeapAddress(uptr addr) {$/;"	f	namespace:__asan
IsTaggedObjCPointer	lib/tsan/rtl/tsan_interceptors_mac.cc	/^static bool IsTaggedObjCPointer(void *obj) {$/;"	f	namespace:__tsan
IsThreadStackOrTls	lib/tsan/rtl/tsan_rtl_report.cc	/^ThreadContext *IsThreadStackOrTls(uptr addr, bool *is_stack) {$/;"	f	namespace:__tsan
IsUnstable	lib/fuzzer/FuzzerTracePC.h	/^    bool IsUnstable;$/;"	m	struct:fuzzer::TracePC::UnstableEdge
IsValid	lib/asan/asan_allocator.cc	/^bool AsanChunkView::IsValid() const {$/;"	f	class:__asan::AsanChunkView
IsValid	lib/asan/asan_errors.h	/^  bool IsValid() { return kind != kErrorKindInvalid; }$/;"	f	struct:__asan::ErrorDescription
IsValid	lib/hwasan/hwasan_allocator.cc	/^bool HwasanChunkView::IsValid() const {$/;"	f	class:__hwasan::HwasanChunkView
IsValidFrame	lib/sanitizer_common/sanitizer_stacktrace.h	/^static inline bool IsValidFrame(uptr frame, uptr stack_top, uptr stack_bottom) {$/;"	f	namespace:__sanitizer
IsVptrCheckSuppressed	lib/ubsan/ubsan_diag.cc	/^bool __ubsan::IsVptrCheckSuppressed(const char *TypeName) {$/;"	f	class:__ubsan
IsWritable	lib/sanitizer_common/sanitizer_procmaps.h	/^  bool IsWritable() const { return protection & kProtectionWrite; }$/;"	f	class:__sanitizer::MemoryMappedSegment
IsWrite	lib/tsan/rtl/tsan_rtl.h	/^  bool ALWAYS_INLINE IsWrite() const { return !IsRead(); }$/;"	f	class:__tsan::Shadow
IsZero	lib/tsan/rtl/tsan_rtl.h	/^  bool IsZero() const {$/;"	f	class:__tsan::Shadow
Isa	test/asan/TestCases/Darwin/scribble.cc	/^struct Isa {$/;"	s	file:
IssueKind	lib/ubsan/ubsan_monitor.h	/^  const char *IssueKind;$/;"	m	struct:__ubsan::UndefinedBehaviorReport
IterateCoveredFunctions	lib/fuzzer/FuzzerTracePC.cpp	/^void TracePC::IterateCoveredFunctions(CallBack CB) {$/;"	f	class:fuzzer::TracePC
IterateInline8bitCounters	lib/fuzzer/FuzzerTracePC.cpp	/^void TracePC::IterateInline8bitCounters(CallBack CB) const {$/;"	f	class:fuzzer::TracePC
IterationTestCallback	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^void IterationTestCallback(uptr chunk, void *arg) {$/;"	f
Iterator	lib/sanitizer_common/sanitizer_bitvector.h	/^    Iterator() { }$/;"	f	class:__sanitizer::BasicBitVector::Iterator
Iterator	lib/sanitizer_common/sanitizer_bitvector.h	/^    Iterator() { }$/;"	f	class:__sanitizer::TwoLevelBitVector::Iterator
Iterator	lib/sanitizer_common/sanitizer_bitvector.h	/^    explicit Iterator(const BasicBitVector &bv) : bv_(bv) {}$/;"	f	class:__sanitizer::BasicBitVector::Iterator
Iterator	lib/sanitizer_common/sanitizer_bitvector.h	/^    explicit Iterator(const TwoLevelBitVector &bv) : bv_(bv), i0_(0), i1_(0) {$/;"	f	class:__sanitizer::TwoLevelBitVector::Iterator
Iterator	lib/sanitizer_common/sanitizer_bitvector.h	/^  class Iterator {$/;"	c	class:__sanitizer::BasicBitVector
Iterator	lib/sanitizer_common/sanitizer_bitvector.h	/^  class Iterator {$/;"	c	class:__sanitizer::TwoLevelBitVector
Iterator	lib/sanitizer_common/sanitizer_list.h	/^  typedef IteratorBase<Item> Iterator;$/;"	t	struct:__sanitizer::IntrusiveList
Iterator	lib/xray/xray_buffer_queue.h	/^    Iterator(BufferRep *Root, size_t O, size_t M)$/;"	f	class:__xray::BufferQueue::Iterator
Iterator	lib/xray/xray_buffer_queue.h	/^  template <class T> class Iterator {$/;"	c	class:__xray::BufferQueue
Iterator	lib/xray/xray_segmented_array.h	/^    Iterator(SegmentBase *IS, size_t Off, size_t S)$/;"	f	class:__xray::Array::Iterator
Iterator	lib/xray/xray_segmented_array.h	/^  template <class U> class Iterator {$/;"	c	class:__xray::Array
IteratorBase	lib/sanitizer_common/sanitizer_list.h	/^    explicit IteratorBase(ItemTy *current) : current_(current) {}$/;"	f	class:__sanitizer::IntrusiveList::IteratorBase
IteratorBase	lib/sanitizer_common/sanitizer_list.h	/^  class IteratorBase {$/;"	c	struct:__sanitizer::IntrusiveList
JMP	lib/builtins/assembly.h	112;"	d
JMP	lib/builtins/assembly.h	115;"	d
JMPc	lib/builtins/assembly.h	113;"	d
JMPc	lib/builtins/assembly.h	116;"	d
JavaContext	lib/tsan/rtl/tsan_interface_java.cc	/^  JavaContext(jptr heap_begin, jptr heap_size)$/;"	f	struct:__tsan::JavaContext
JavaContext	lib/tsan/rtl/tsan_interface_java.cc	/^struct JavaContext {$/;"	s	namespace:__tsan	file:
Jmp15Seq	lib/xray/xray_x86_64.cc	/^static constexpr uint16_t Jmp15Seq = 0x0feb;$/;"	m	namespace:__xray	file:
Jmp20Seq	lib/xray/xray_x86_64.cc	/^static constexpr uint16_t Jmp20Seq = 0x14eb;$/;"	m	namespace:__xray	file:
Jmp9Seq	lib/xray/xray_x86_64.cc	/^static constexpr uint16_t Jmp9Seq = 0x09eb;$/;"	m	namespace:__xray	file:
JmpBuf	lib/tsan/rtl/tsan_rtl.h	/^struct JmpBuf {$/;"	s	namespace:__tsan
JmpBufGarbageCollect	lib/tsan/rtl/tsan_interceptors.cc	/^static void JmpBufGarbageCollect(ThreadState *thr, uptr sp) {$/;"	f	file:
JmpOpCode	lib/xray/xray_x86_64.cc	/^static constexpr uint8_t JmpOpCode = 0xe9;$/;"	m	namespace:__xray	file:
JoinThread	lib/sanitizer_common/sanitizer_thread_registry.cc	/^void ThreadRegistry::JoinThread(u32 tid, void *arg) {$/;"	f	class:__sanitizer::ThreadRegistry
JumpOverInstNum	lib/xray/xray_powerpc64.cc	/^constexpr unsigned long long JumpOverInstNum = 7;$/;"	m	namespace:__anon32	file:
KKK	test/asan/TestCases/pr33372.cc	/^const char KKK[] = {1, 1, 2};$/;"	v
KVME_PROT_EXEC	lib/sanitizer_common/sanitizer_procmaps_bsd.cc	35;"	d	file:
KVME_PROT_READ	lib/sanitizer_common/sanitizer_procmaps_bsd.cc	33;"	d	file:
KVME_PROT_WRITE	lib/sanitizer_common/sanitizer_procmaps_bsd.cc	34;"	d	file:
KernelSigaction	test/asan/TestCases/Linux/preinstalled_signal.cc	/^struct KernelSigaction {$/;"	s	file:
Key	lib/esan/esan_hashtable.h	/^    KeyTy Key;$/;"	m	struct:__esan::HashTable::HashEntry
Key	lib/esan/esan_hashtable.h	/^    KeyTy Key;$/;"	m	struct:__esan::HashTable::HashPair
Key	lib/xray/xray_fdr_logging.cc	/^static pthread_key_t Key;$/;"	m	namespace:__xray	file:
KillAllThreads	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^void ThreadSuspender::KillAllThreads() {$/;"	f	class:__sanitizer::ThreadSuspender
Kind	lib/ubsan/ubsan_diag.h	/^    ArgKind Kind;$/;"	m	struct:__ubsan::Diag::Arg
Kind	lib/ubsan/ubsan_diag.h	/^  LocationKind Kind;$/;"	m	class:__ubsan::Location
Kind	lib/ubsan/ubsan_handlers.h	/^  \/* ImplicitConversionCheckKind *\/ unsigned char Kind;$/;"	m	struct:__ubsan::ImplicitConversionData
Kind	lib/ubsan/ubsan_handlers.h	/^  unsigned char Kind;$/;"	m	struct:__ubsan::InvalidBuiltinData
Kind	lib/ubsan/ubsan_value.h	/^  enum Kind {$/;"	g	class:__ubsan::TypeDescriptor
Kind	lib/xray/xray_interface_internal.h	/^  unsigned char Kind;$/;"	m	struct:XRaySledEntry
L	lib/sanitizer_common/tests/sanitizer_format_interceptor_test.cc	/^static const unsigned L = sizeof(long);$/;"	v	file:
L	test/tsan/deadlock_detector_stress_test.cc	/^  void L(size_t i) {$/;"	f	class:LockTest
LC	lib/sanitizer_common/tests/sanitizer_format_interceptor_test.cc	/^static const unsigned LC = sizeof(wchar_t);$/;"	v	file:
LD	lib/sanitizer_common/tests/sanitizer_format_interceptor_test.cc	/^static const unsigned LD = sizeof(long double);$/;"	v	file:
LEFTSHIFT	lib/builtins/hexagon/dffma.S	/^		LEFTSHIFT = #0$/;"	d
LEFTSHIFT	lib/builtins/hexagon/dffma.S	/^		LEFTSHIFT = add(clb(PP_HH),#-2)$/;"	d
LEFTSHIFT	lib/builtins/hexagon/dffma.S	/^		LEFTSHIFT = sub(#64,RIGHTSHIFT)$/;"	d
LEFTSHIFT	lib/builtins/hexagon/dffma.S	/^#define LEFTSHIFT r12$/;"	d
LESS	test/BlocksRuntime/rettypepromotion.c	/^enum { LESS = -1, EQUAL, GREATER };$/;"	e	enum:__anon146	file:
LESS_0	test/builtins/Unit/fp_test.h	/^    LESS_0, LESS_EQUAL_0, EQUAL_0, GREATER_0, GREATER_EQUAL_0, NEQUAL_0$/;"	e	enum:EXPECTED_RESULT
LESS_EQUAL_0	test/builtins/Unit/fp_test.h	/^    LESS_0, LESS_EQUAL_0, EQUAL_0, GREATER_0, GREATER_EQUAL_0, NEQUAL_0$/;"	e	enum:EXPECTED_RESULT
LE_EQUAL	lib/builtins/comparedf2.c	/^    LE_EQUAL     =  0,$/;"	e	enum:LE_RESULT	file:
LE_EQUAL	lib/builtins/comparesf2.c	/^    LE_EQUAL     =  0,$/;"	e	enum:LE_RESULT	file:
LE_EQUAL	lib/builtins/comparetf2.c	/^    LE_EQUAL     =  0,$/;"	e	enum:LE_RESULT	file:
LE_GREATER	lib/builtins/comparedf2.c	/^    LE_GREATER   =  1,$/;"	e	enum:LE_RESULT	file:
LE_GREATER	lib/builtins/comparesf2.c	/^    LE_GREATER   =  1,$/;"	e	enum:LE_RESULT	file:
LE_GREATER	lib/builtins/comparetf2.c	/^    LE_GREATER   =  1,$/;"	e	enum:LE_RESULT	file:
LE_LESS	lib/builtins/comparedf2.c	/^    LE_LESS      = -1,$/;"	e	enum:LE_RESULT	file:
LE_LESS	lib/builtins/comparesf2.c	/^    LE_LESS      = -1,$/;"	e	enum:LE_RESULT	file:
LE_LESS	lib/builtins/comparetf2.c	/^    LE_LESS      = -1,$/;"	e	enum:LE_RESULT	file:
LE_RESULT	lib/builtins/comparedf2.c	/^enum LE_RESULT {$/;"	g	file:
LE_RESULT	lib/builtins/comparesf2.c	/^enum LE_RESULT {$/;"	g	file:
LE_RESULT	lib/builtins/comparetf2.c	/^enum LE_RESULT {$/;"	g	file:
LE_UNORDERED	lib/builtins/comparedf2.c	/^    LE_UNORDERED =  1$/;"	e	enum:LE_RESULT	file:
LE_UNORDERED	lib/builtins/comparesf2.c	/^    LE_UNORDERED =  1$/;"	e	enum:LE_RESULT	file:
LE_UNORDERED	lib/builtins/comparetf2.c	/^    LE_UNORDERED =  1$/;"	e	enum:LE_RESULT	file:
LFStack	lib/sanitizer_common/sanitizer_lfstack.h	/^struct LFStack {$/;"	s	namespace:__sanitizer
LHSType	lib/ubsan/ubsan_handlers.h	/^  const TypeDescriptor &LHSType;$/;"	m	struct:__ubsan::ShiftOutOfBoundsData
LIBFUZZER_APPLE	lib/fuzzer/FuzzerDefs.h	26;"	d
LIBFUZZER_APPLE	lib/fuzzer/FuzzerDefs.h	34;"	d
LIBFUZZER_APPLE	lib/fuzzer/FuzzerDefs.h	42;"	d
LIBFUZZER_APPLE	lib/fuzzer/FuzzerDefs.h	50;"	d
LIBFUZZER_APPLE	lib/fuzzer/FuzzerDefs.h	58;"	d
LIBFUZZER_APPLE	lib/fuzzer/FuzzerDefs.h	66;"	d
LIBFUZZER_APPLE	lib/fuzzer/FuzzerDefs.h	74;"	d
LIBFUZZER_APPLE	lib/fuzzer/afl/afl_driver.cpp	70;"	d	file:
LIBFUZZER_APPLE	lib/fuzzer/afl/afl_driver.cpp	76;"	d	file:
LIBFUZZER_APPLE	lib/fuzzer/afl/afl_driver.cpp	82;"	d	file:
LIBFUZZER_APPLE	lib/fuzzer/afl/afl_driver.cpp	88;"	d	file:
LIBFUZZER_APPLE	lib/fuzzer/afl/afl_driver.cpp	94;"	d	file:
LIBFUZZER_FREEBSD	lib/fuzzer/FuzzerDefs.h	30;"	d
LIBFUZZER_FREEBSD	lib/fuzzer/FuzzerDefs.h	38;"	d
LIBFUZZER_FREEBSD	lib/fuzzer/FuzzerDefs.h	46;"	d
LIBFUZZER_FREEBSD	lib/fuzzer/FuzzerDefs.h	54;"	d
LIBFUZZER_FREEBSD	lib/fuzzer/FuzzerDefs.h	62;"	d
LIBFUZZER_FREEBSD	lib/fuzzer/FuzzerDefs.h	70;"	d
LIBFUZZER_FREEBSD	lib/fuzzer/FuzzerDefs.h	78;"	d
LIBFUZZER_FREEBSD	lib/fuzzer/afl/afl_driver.cpp	72;"	d	file:
LIBFUZZER_FREEBSD	lib/fuzzer/afl/afl_driver.cpp	78;"	d	file:
LIBFUZZER_FREEBSD	lib/fuzzer/afl/afl_driver.cpp	84;"	d	file:
LIBFUZZER_FREEBSD	lib/fuzzer/afl/afl_driver.cpp	90;"	d	file:
LIBFUZZER_FREEBSD	lib/fuzzer/afl/afl_driver.cpp	96;"	d	file:
LIBFUZZER_FUCHSIA	lib/fuzzer/FuzzerDefs.h	27;"	d
LIBFUZZER_FUCHSIA	lib/fuzzer/FuzzerDefs.h	35;"	d
LIBFUZZER_FUCHSIA	lib/fuzzer/FuzzerDefs.h	43;"	d
LIBFUZZER_FUCHSIA	lib/fuzzer/FuzzerDefs.h	51;"	d
LIBFUZZER_FUCHSIA	lib/fuzzer/FuzzerDefs.h	59;"	d
LIBFUZZER_FUCHSIA	lib/fuzzer/FuzzerDefs.h	67;"	d
LIBFUZZER_FUCHSIA	lib/fuzzer/FuzzerDefs.h	75;"	d
LIBFUZZER_LINUX	lib/fuzzer/FuzzerDefs.h	28;"	d
LIBFUZZER_LINUX	lib/fuzzer/FuzzerDefs.h	36;"	d
LIBFUZZER_LINUX	lib/fuzzer/FuzzerDefs.h	44;"	d
LIBFUZZER_LINUX	lib/fuzzer/FuzzerDefs.h	52;"	d
LIBFUZZER_LINUX	lib/fuzzer/FuzzerDefs.h	60;"	d
LIBFUZZER_LINUX	lib/fuzzer/FuzzerDefs.h	68;"	d
LIBFUZZER_LINUX	lib/fuzzer/FuzzerDefs.h	76;"	d
LIBFUZZER_LINUX	lib/fuzzer/afl/afl_driver.cpp	69;"	d	file:
LIBFUZZER_LINUX	lib/fuzzer/afl/afl_driver.cpp	75;"	d	file:
LIBFUZZER_LINUX	lib/fuzzer/afl/afl_driver.cpp	81;"	d	file:
LIBFUZZER_LINUX	lib/fuzzer/afl/afl_driver.cpp	87;"	d	file:
LIBFUZZER_LINUX	lib/fuzzer/afl/afl_driver.cpp	93;"	d	file:
LIBFUZZER_NETBSD	lib/fuzzer/FuzzerDefs.h	29;"	d
LIBFUZZER_NETBSD	lib/fuzzer/FuzzerDefs.h	37;"	d
LIBFUZZER_NETBSD	lib/fuzzer/FuzzerDefs.h	45;"	d
LIBFUZZER_NETBSD	lib/fuzzer/FuzzerDefs.h	53;"	d
LIBFUZZER_NETBSD	lib/fuzzer/FuzzerDefs.h	61;"	d
LIBFUZZER_NETBSD	lib/fuzzer/FuzzerDefs.h	69;"	d
LIBFUZZER_NETBSD	lib/fuzzer/FuzzerDefs.h	77;"	d
LIBFUZZER_NETBSD	lib/fuzzer/afl/afl_driver.cpp	71;"	d	file:
LIBFUZZER_NETBSD	lib/fuzzer/afl/afl_driver.cpp	77;"	d	file:
LIBFUZZER_NETBSD	lib/fuzzer/afl/afl_driver.cpp	83;"	d	file:
LIBFUZZER_NETBSD	lib/fuzzer/afl/afl_driver.cpp	89;"	d	file:
LIBFUZZER_NETBSD	lib/fuzzer/afl/afl_driver.cpp	95;"	d	file:
LIBFUZZER_OPENBSD	lib/fuzzer/FuzzerDefs.h	31;"	d
LIBFUZZER_OPENBSD	lib/fuzzer/FuzzerDefs.h	39;"	d
LIBFUZZER_OPENBSD	lib/fuzzer/FuzzerDefs.h	47;"	d
LIBFUZZER_OPENBSD	lib/fuzzer/FuzzerDefs.h	55;"	d
LIBFUZZER_OPENBSD	lib/fuzzer/FuzzerDefs.h	63;"	d
LIBFUZZER_OPENBSD	lib/fuzzer/FuzzerDefs.h	71;"	d
LIBFUZZER_OPENBSD	lib/fuzzer/FuzzerDefs.h	79;"	d
LIBFUZZER_OPENBSD	lib/fuzzer/afl/afl_driver.cpp	73;"	d	file:
LIBFUZZER_OPENBSD	lib/fuzzer/afl/afl_driver.cpp	79;"	d	file:
LIBFUZZER_OPENBSD	lib/fuzzer/afl/afl_driver.cpp	85;"	d	file:
LIBFUZZER_OPENBSD	lib/fuzzer/afl/afl_driver.cpp	91;"	d	file:
LIBFUZZER_OPENBSD	lib/fuzzer/afl/afl_driver.cpp	97;"	d	file:
LIBFUZZER_POSIX	lib/fuzzer/FuzzerDefs.h	89;"	d
LIBFUZZER_WINDOWS	lib/fuzzer/FuzzerDefs.h	32;"	d
LIBFUZZER_WINDOWS	lib/fuzzer/FuzzerDefs.h	40;"	d
LIBFUZZER_WINDOWS	lib/fuzzer/FuzzerDefs.h	48;"	d
LIBFUZZER_WINDOWS	lib/fuzzer/FuzzerDefs.h	56;"	d
LIBFUZZER_WINDOWS	lib/fuzzer/FuzzerDefs.h	64;"	d
LIBFUZZER_WINDOWS	lib/fuzzer/FuzzerDefs.h	72;"	d
LIBFUZZER_WINDOWS	lib/fuzzer/FuzzerDefs.h	80;"	d
LIBNAME	test/builtins/timing/ashldi3.c	9;"	d	file:
LIBNAME	test/builtins/timing/ashrdi3.c	9;"	d	file:
LIBNAME	test/builtins/timing/divdi3.c	9;"	d	file:
LIBNAME	test/builtins/timing/floatdidf.c	9;"	d	file:
LIBNAME	test/builtins/timing/floatdisf.c	9;"	d	file:
LIBNAME	test/builtins/timing/floatdixf.c	9;"	d	file:
LIBNAME	test/builtins/timing/floatundidf.c	5;"	d	file:
LIBNAME	test/builtins/timing/floatundisf.c	9;"	d	file:
LIBNAME	test/builtins/timing/floatundixf.c	9;"	d	file:
LIBNAME	test/builtins/timing/lshrdi3.c	9;"	d	file:
LIBNAME	test/builtins/timing/moddi3.c	9;"	d	file:
LIBNAME	test/builtins/timing/modsi3.c	9;"	d	file:
LIBNAME	test/builtins/timing/muldi3.c	9;"	d	file:
LIBNAME	test/builtins/timing/negdi2.c	9;"	d	file:
LIBNAME	test/builtins/timing/udivdi3.c	9;"	d	file:
LIBNAME	test/builtins/timing/umoddi3.c	9;"	d	file:
LIBSTRING	test/builtins/timing/ashldi3.c	12;"	d	file:
LIBSTRING	test/builtins/timing/ashrdi3.c	12;"	d	file:
LIBSTRING	test/builtins/timing/divdi3.c	12;"	d	file:
LIBSTRING	test/builtins/timing/floatdidf.c	12;"	d	file:
LIBSTRING	test/builtins/timing/floatdisf.c	12;"	d	file:
LIBSTRING	test/builtins/timing/floatdixf.c	12;"	d	file:
LIBSTRING	test/builtins/timing/floatundidf.c	8;"	d	file:
LIBSTRING	test/builtins/timing/floatundisf.c	12;"	d	file:
LIBSTRING	test/builtins/timing/floatundixf.c	12;"	d	file:
LIBSTRING	test/builtins/timing/lshrdi3.c	12;"	d	file:
LIBSTRING	test/builtins/timing/moddi3.c	12;"	d	file:
LIBSTRING	test/builtins/timing/modsi3.c	12;"	d	file:
LIBSTRING	test/builtins/timing/muldi3.c	12;"	d	file:
LIBSTRING	test/builtins/timing/negdi2.c	12;"	d	file:
LIBSTRING	test/builtins/timing/udivdi3.c	12;"	d	file:
LIBSTRING	test/builtins/timing/umoddi3.c	12;"	d	file:
LIBSTRINGX	test/builtins/timing/ashldi3.c	13;"	d	file:
LIBSTRINGX	test/builtins/timing/ashrdi3.c	13;"	d	file:
LIBSTRINGX	test/builtins/timing/divdi3.c	13;"	d	file:
LIBSTRINGX	test/builtins/timing/floatdidf.c	13;"	d	file:
LIBSTRINGX	test/builtins/timing/floatdisf.c	13;"	d	file:
LIBSTRINGX	test/builtins/timing/floatdixf.c	13;"	d	file:
LIBSTRINGX	test/builtins/timing/floatundidf.c	9;"	d	file:
LIBSTRINGX	test/builtins/timing/floatundisf.c	13;"	d	file:
LIBSTRINGX	test/builtins/timing/floatundixf.c	13;"	d	file:
LIBSTRINGX	test/builtins/timing/lshrdi3.c	13;"	d	file:
LIBSTRINGX	test/builtins/timing/moddi3.c	13;"	d	file:
LIBSTRINGX	test/builtins/timing/modsi3.c	13;"	d	file:
LIBSTRINGX	test/builtins/timing/muldi3.c	13;"	d	file:
LIBSTRINGX	test/builtins/timing/negdi2.c	13;"	d	file:
LIBSTRINGX	test/builtins/timing/udivdi3.c	13;"	d	file:
LIBSTRINGX	test/builtins/timing/umoddi3.c	13;"	d	file:
LIBSTRINGXX	test/builtins/timing/ashldi3.c	14;"	d	file:
LIBSTRINGXX	test/builtins/timing/ashrdi3.c	14;"	d	file:
LIBSTRINGXX	test/builtins/timing/divdi3.c	14;"	d	file:
LIBSTRINGXX	test/builtins/timing/floatdidf.c	14;"	d	file:
LIBSTRINGXX	test/builtins/timing/floatdisf.c	14;"	d	file:
LIBSTRINGXX	test/builtins/timing/floatdixf.c	14;"	d	file:
LIBSTRINGXX	test/builtins/timing/floatundidf.c	10;"	d	file:
LIBSTRINGXX	test/builtins/timing/floatundisf.c	14;"	d	file:
LIBSTRINGXX	test/builtins/timing/floatundixf.c	14;"	d	file:
LIBSTRINGXX	test/builtins/timing/lshrdi3.c	14;"	d	file:
LIBSTRINGXX	test/builtins/timing/moddi3.c	14;"	d	file:
LIBSTRINGXX	test/builtins/timing/modsi3.c	14;"	d	file:
LIBSTRINGXX	test/builtins/timing/muldi3.c	14;"	d	file:
LIBSTRINGXX	test/builtins/timing/negdi2.c	14;"	d	file:
LIBSTRINGXX	test/builtins/timing/udivdi3.c	14;"	d	file:
LIBSTRINGXX	test/builtins/timing/umoddi3.c	14;"	d	file:
LIKELY	lib/sanitizer_common/sanitizer_internal_defs.h	216;"	d
LIKELY	lib/sanitizer_common/sanitizer_internal_defs.h	230;"	d
LINEARIZE_MEM	lib/msan/msan.h	180;"	d
LINEARIZE_MEM	lib/msan/msan.h	201;"	d
LINKER_INITIALIZED	lib/sanitizer_common/sanitizer_internal_defs.h	/^enum LinkerInitialized { LINKER_INITIALIZED = 0 };$/;"	e	enum:__sanitizer::LinkerInitialized
LITTLE_ENDIAN	test/ubsan/TestCases/Float/cast-overflow.cpp	20;"	d	file:
LITTLE_ENDIAN	test/ubsan/TestCases/Float/cast-overflow.cpp	30;"	d	file:
LITTLE_ENDIAN	test/ubsan/TestCases/Float/cast-overflow.cpp	36;"	d	file:
LITTLE_ENDIAN	test/ubsan/TestCases/Float/cast-overflow.cpp	45;"	d	file:
LITTLE_ENDIAN	test/ubsan/TestCases/Float/cast-overflow.cpp	50;"	d	file:
LK_Memory	lib/ubsan/ubsan_diag.h	/^  enum LocationKind { LK_Null, LK_Source, LK_Memory, LK_Symbolized };$/;"	e	enum:__ubsan::Location::LocationKind
LK_Null	lib/ubsan/ubsan_diag.h	/^  enum LocationKind { LK_Null, LK_Source, LK_Memory, LK_Symbolized };$/;"	e	enum:__ubsan::Location::LocationKind
LK_Source	lib/ubsan/ubsan_diag.h	/^  enum LocationKind { LK_Null, LK_Source, LK_Memory, LK_Symbolized };$/;"	e	enum:__ubsan::Location::LocationKind
LK_Symbolized	lib/ubsan/ubsan_diag.h	/^  enum LocationKind { LK_Null, LK_Source, LK_Memory, LK_Symbolized };$/;"	e	enum:__ubsan::Location::LocationKind
LL	lib/builtins/hexagon/dfsqrt.S	/^		LL = mpyu(ROOTLO,ROOTLO)$/;"	d
LL	lib/builtins/hexagon/dfsqrt.S	/^#define LL r5:4$/;"	d
LL	lib/sanitizer_common/tests/sanitizer_format_interceptor_test.cc	/^static const unsigned LL = sizeof(long long);$/;"	v	file:
LLVMFuzzerAnnounceOutput	lib/fuzzer/FuzzerLoop.cpp	/^LLVMFuzzerAnnounceOutput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerCustomCrossOver	test/fuzzer/CustomCrossOverAndMutateTest.cpp	/^extern "C" size_t LLVMFuzzerCustomCrossOver(const uint8_t *Data1, size_t Size1,$/;"	f
LLVMFuzzerCustomCrossOver	test/fuzzer/CustomCrossOverTest.cpp	/^extern "C" size_t LLVMFuzzerCustomCrossOver(const uint8_t *Data1, size_t Size1,$/;"	f
LLVMFuzzerCustomMutator	test/fuzzer/CustomMutatorTest.cpp	/^extern "C" size_t LLVMFuzzerCustomMutator(uint8_t *Data, size_t Size,$/;"	f
LLVMFuzzerInitialize	test/fuzzer/AFLDriverTest.cpp	/^extern "C" int LLVMFuzzerInitialize(int *argc, char ***argv) {$/;"	f
LLVMFuzzerInitialize	test/fuzzer/BogusInitializeTest.cpp	/^extern "C" int LLVMFuzzerInitialize(int *argc, char ***argv) {$/;"	f
LLVMFuzzerInitialize	test/fuzzer/FlagsTest.cpp	/^extern "C" int LLVMFuzzerInitialize(int *Argc, char ***Argv) {$/;"	f
LLVMFuzzerInitialize	test/fuzzer/InitializeTest.cpp	/^extern "C" int LLVMFuzzerInitialize(int *argc, char ***argv) {$/;"	f
LLVMFuzzerMutate	lib/fuzzer/FuzzerLoop.cpp	/^LLVMFuzzerMutate(uint8_t *Data, size_t Size, size_t MaxSize) {$/;"	f
LLVMFuzzerMutate	lib/fuzzer/afl/afl_driver.cpp	/^extern "C" size_t LLVMFuzzerMutate(uint8_t *Data, size_t Size, size_t MaxSize) {$/;"	f
LLVMFuzzerTestOneInput	lib/fuzzer/tests/FuzzerUnittest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/AFLDriverTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/AbsNegAndConstant64Test.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/AbsNegAndConstantTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/AccumulateAllocationsTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/AcquireCrashStateTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/BadStrcmpTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/BogusInitializeTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/BufferOverflowOnInput.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/CallerCalleeTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/CleanseTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/CounterTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/CustomCrossOverAndMutateTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/CustomCrossOverTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/CustomMutatorTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/CxxStringEqTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/DSOTestMain.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/DeepRecursionTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/DivTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/EmptyTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/EquivalenceATest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/EquivalenceBTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/ExplodeDFSanLabelsTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/FlagsTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/FourIndependentBranchesTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/FullCoverageSetTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/GcSectionsTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/ImplicitIntegerTruncationTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/InitializeTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/LargeTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/LeakTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/LeakTimeoutTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/LoadTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/Memcmp64BytesTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/MemcmpTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/NotinstrumentedTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/NthRunCrashTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/NullDerefOnEmptyTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/NullDerefTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/OneHugeAllocTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/OnlySomeBytesTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/OutOfMemorySingleLargeMallocTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/OutOfMemoryTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/OverwriteInputTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/PrintFuncTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/PrintUnstableStatsTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/RepeatedBytesTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/RepeatedMemcmp.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/ShrinkControlFlowSimpleTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/ShrinkControlFlowTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/ShrinkValueProfileTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/SignedIntOverflowTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/SimpleCmpTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/SimpleDictionaryTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/SimpleHashTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/SimpleTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/SimpleTestStdio.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/SimpleThreadedTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/SingleByteInputTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/SingleMemcmpTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/SingleStrcmpTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/SingleStrncmpTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/SleepOneSecondTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/SpamyTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/StrcmpTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/StrncmpOOBTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/StrncmpTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/StrstrTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/SwapCmpTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/Switch2Test.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/SwitchTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/SymbolizeDeadlock.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/TableLookupTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/ThreadedLeakTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/ThreadedTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/ThreeBytes.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/ThreeFunctionsTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/TimeoutEmptyTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/TimeoutTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/TraceMallocTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/TraceMallocThreadedTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/TwoDifferentBugsTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/UninitializedStrlen.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	test/fuzzer/UseAfterDtor.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMSymbolizer	lib/asan/scripts/asan_symbolize.py	/^class LLVMSymbolizer(Symbolizer):$/;"	c
LLVMSymbolizer	lib/sanitizer_common/sanitizer_symbolizer_internal.h	/^class LLVMSymbolizer : public SymbolizerTool {$/;"	c	namespace:__sanitizer
LLVMSymbolizer	lib/sanitizer_common/sanitizer_symbolizer_libcdep.cc	/^LLVMSymbolizer::LLVMSymbolizer(const char *path, LowLevelAllocator *allocator)$/;"	f	class:__sanitizer::LLVMSymbolizer
LLVMSymbolizerFactory	lib/asan/scripts/asan_symbolize.py	/^def LLVMSymbolizerFactory(system, default_arch, dsym_hints=[]):$/;"	f
LLVMSymbolizerProcess	lib/sanitizer_common/sanitizer_symbolizer_libcdep.cc	/^  explicit LLVMSymbolizerProcess(const char *path) : SymbolizerProcess(path) {}$/;"	f	class:__sanitizer::LLVMSymbolizerProcess
LLVMSymbolizerProcess	lib/sanitizer_common/sanitizer_symbolizer_libcdep.cc	/^class LLVMSymbolizerProcess : public SymbolizerProcess {$/;"	c	namespace:__sanitizer	file:
LLVM_FUZZER_COMMAND_H	lib/fuzzer/FuzzerCommand.h	14;"	d
LLVM_FUZZER_CORPUS	lib/fuzzer/FuzzerCorpus.h	13;"	d
LLVM_FUZZER_DATA_FLOW_TRACE	lib/fuzzer/FuzzerDataFlowTrace.h	30;"	d
LLVM_FUZZER_DEFS_H	lib/fuzzer/FuzzerDefs.h	13;"	d
LLVM_FUZZER_DICTIONARY_H	lib/fuzzer/FuzzerDictionary.h	13;"	d
LLVM_FUZZER_EXT_FUNCTIONS_H	lib/fuzzer/FuzzerExtFunctions.h	13;"	d
LLVM_FUZZER_INTERFACE_H	lib/fuzzer/FuzzerInterface.h	20;"	d
LLVM_FUZZER_INTERNAL_H	lib/fuzzer/FuzzerInternal.h	13;"	d
LLVM_FUZZER_IO_H	lib/fuzzer/FuzzerIO.h	13;"	d
LLVM_FUZZER_MERGE_H	lib/fuzzer/FuzzerMerge.h	41;"	d
LLVM_FUZZER_MUTATE_H	lib/fuzzer/FuzzerMutate.h	13;"	d
LLVM_FUZZER_OPTIONS_H	lib/fuzzer/FuzzerOptions.h	12;"	d
LLVM_FUZZER_RANDOM_H	lib/fuzzer/FuzzerRandom.h	13;"	d
LLVM_FUZZER_SHA1_H	lib/fuzzer/FuzzerSHA1.h	13;"	d
LLVM_FUZZER_SHMEM_H	lib/fuzzer/FuzzerShmem.h	13;"	d
LLVM_FUZZER_TRACE_PC	lib/fuzzer/FuzzerTracePC.h	13;"	d
LLVM_FUZZER_UTIL_H	lib/fuzzer/FuzzerUtil.h	13;"	d
LLVM_FUZZER_VALUE_BIT_MAP_H	lib/fuzzer/FuzzerValueBitMap.h	13;"	d
LLVM_SYMBOLIZER_GET_FUNC	lib/sanitizer_common/symbolizer/sanitizer_wrappers.cc	59;"	d	file:
LLVM_SYMBOLIZER_INTERCEPTOR1	lib/sanitizer_common/symbolizer/sanitizer_wrappers.cc	64;"	d	file:
LLVM_SYMBOLIZER_INTERCEPTOR2	lib/sanitizer_common/symbolizer/sanitizer_wrappers.cc	72;"	d	file:
LLVM_SYMBOLIZER_INTERCEPTOR3	lib/sanitizer_common/symbolizer/sanitizer_wrappers.cc	82;"	d	file:
LLVM_SYMBOLIZER_INTERCEPTOR4	lib/sanitizer_common/symbolizer/sanitizer_wrappers.cc	94;"	d	file:
LOCAL_LABEL	lib/builtins/assembly.h	27;"	d
LOCAL_LABEL	lib/builtins/assembly.h	38;"	d
LOCAL_LABEL	lib/builtins/assembly.h	57;"	d
LOCK	test/sanitizer_common/TestCases/Linux/pthread_mutex.cc	10;"	d	file:
LOCK	test/sanitizer_common/TestCases/Linux/pthread_mutex.cc	13;"	d	file:
LOCK_EX	lib/profile/WindowsMMap.h	44;"	d
LOCK_FREE_ACTION	lib/builtins/atomic.c	163;"	d	file:
LOCK_FREE_ACTION	lib/builtins/atomic.c	167;"	d	file:
LOCK_FREE_ACTION	lib/builtins/atomic.c	177;"	d	file:
LOCK_FREE_ACTION	lib/builtins/atomic.c	181;"	d	file:
LOCK_FREE_ACTION	lib/builtins/atomic.c	195;"	d	file:
LOCK_FREE_ACTION	lib/builtins/atomic.c	199;"	d	file:
LOCK_FREE_ACTION	lib/builtins/atomic.c	215;"	d	file:
LOCK_FREE_ACTION	lib/builtins/atomic.c	220;"	d	file:
LOCK_FREE_CASES	lib/builtins/atomic.c	136;"	d	file:
LOCK_NB	lib/profile/WindowsMMap.h	45;"	d
LOCK_SH	lib/profile/WindowsMMap.h	43;"	d
LOCK_UN	lib/profile/WindowsMMap.h	46;"	d
LOG_ARGS_ENTRY	include/xray/xray_interface.h	/^  LOG_ARGS_ENTRY = 3,$/;"	e	enum:XRayEntryType
LOG_POINTERS	lib/lsan/lsan_common.cc	58;"	d	file:
LOG_THREADS	lib/lsan/lsan_common.cc	63;"	d	file:
LOWORDER	lib/builtins/ppc/DD.h	19;"	d
LSAN_ALLOCATOR_H	lib/lsan/lsan_allocator.h	16;"	d
LSAN_COMMON_H	lib/lsan/lsan_common.h	16;"	d
LSAN_FLAG	lib/lsan/lsan_common.cc	46;"	d	file:
LSAN_FLAG	lib/lsan/lsan_common.cc	48;"	d	file:
LSAN_FLAG	lib/lsan/lsan_common.cc	52;"	d	file:
LSAN_FLAG	lib/lsan/lsan_common.cc	55;"	d	file:
LSAN_FLAG	lib/lsan/lsan_common.h	67;"	d
LSAN_FLAG	lib/lsan/lsan_common.h	69;"	d
LSAN_MAYBE_INTERCEPT_ALIGNED_ALLOC	lib/lsan/lsan_interceptors.cc	127;"	d	file:
LSAN_MAYBE_INTERCEPT_ALIGNED_ALLOC	lib/lsan/lsan_interceptors.cc	129;"	d	file:
LSAN_MAYBE_INTERCEPT_CFREE	lib/lsan/lsan_interceptors.cc	177;"	d	file:
LSAN_MAYBE_INTERCEPT_CFREE	lib/lsan/lsan_interceptors.cc	179;"	d	file:
LSAN_MAYBE_INTERCEPT_MALLINFO	lib/lsan/lsan_interceptors.cc	153;"	d	file:
LSAN_MAYBE_INTERCEPT_MALLINFO	lib/lsan/lsan_interceptors.cc	160;"	d	file:
LSAN_MAYBE_INTERCEPT_MALLOC_USABLE_SIZE	lib/lsan/lsan_interceptors.cc	137;"	d	file:
LSAN_MAYBE_INTERCEPT_MALLOC_USABLE_SIZE	lib/lsan/lsan_interceptors.cc	140;"	d	file:
LSAN_MAYBE_INTERCEPT_MALLOPT	lib/lsan/lsan_interceptors.cc	158;"	d	file:
LSAN_MAYBE_INTERCEPT_MALLOPT	lib/lsan/lsan_interceptors.cc	161;"	d	file:
LSAN_MAYBE_INTERCEPT_MEMALIGN	lib/lsan/lsan_interceptors.cc	106;"	d	file:
LSAN_MAYBE_INTERCEPT_MEMALIGN	lib/lsan/lsan_interceptors.cc	117;"	d	file:
LSAN_MAYBE_INTERCEPT_PVALLOC	lib/lsan/lsan_interceptors.cc	170;"	d	file:
LSAN_MAYBE_INTERCEPT_PVALLOC	lib/lsan/lsan_interceptors.cc	172;"	d	file:
LSAN_MAYBE_INTERCEPT_THR_EXIT	lib/lsan/lsan_interceptors.cc	338;"	d	file:
LSAN_MAYBE_INTERCEPT_THR_EXIT	lib/lsan/lsan_interceptors.cc	340;"	d	file:
LSAN_MAYBE_INTERCEPT__LWP_EXIT	lib/lsan/lsan_interceptors.cc	327;"	d	file:
LSAN_MAYBE_INTERCEPT__LWP_EXIT	lib/lsan/lsan_interceptors.cc	329;"	d	file:
LSAN_MAYBE_INTERCEPT___LIBC_MEMALIGN	lib/lsan/lsan_interceptors.cc	115;"	d	file:
LSAN_MAYBE_INTERCEPT___LIBC_MEMALIGN	lib/lsan/lsan_interceptors.cc	118;"	d	file:
LSAN_THREAD_H	lib/lsan/lsan_thread.h	16;"	d
LSanTestLeakingFunc	test/lsan/TestCases/print_suppressions.cc	/^void LSanTestLeakingFunc() {$/;"	f
LSanTestLeakingFunc	test/lsan/TestCases/suppressions_default.cc	/^void LSanTestLeakingFunc() {$/;"	f
LSanTestLeakingFunc	test/lsan/TestCases/suppressions_file.cc	/^void LSanTestLeakingFunc() {$/;"	f
LabelSeen	lib/fuzzer/dataflow/DataFlow.cpp	/^static bool LabelSeen[1 << 8 * sizeof(dfsan_label)];$/;"	v	file:
Large	test/fuzzer/ImplicitIntegerTruncationTest.cpp	/^static unsigned char Large = UINT8_MAX;$/;"	v	file:
Large	test/fuzzer/SignedIntOverflowTest.cpp	/^static int Large = INT_MAX;$/;"	v	file:
LargeChunk	lib/scudo/scudo_allocator_secondary.h	/^namespace LargeChunk {$/;"	n
LargeData	test/profile/instrprof-bufferio.c	/^char LargeData[10 * 1024];$/;"	v
LargeFunction	lib/asan/tests/asan_test.cc	/^NOINLINE static int LargeFunction(bool do_bad_access) {$/;"	f	file:
LargeFunction	test/asan/TestCases/large_func_test.cc	/^static void LargeFunction(int *x, int zero) {$/;"	f	file:
LargeMmapAllocator	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^class LargeMmapAllocator {$/;"	c
LargeMmapAllocator	lib/scudo/scudo_allocator_secondary.h	/^class LargeMmapAllocator {$/;"	c
LargeMmapAllocatorPtrArrayDynamic	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^class LargeMmapAllocatorPtrArrayDynamic {$/;"	c
LargeMmapAllocatorPtrArrayStatic	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^class LargeMmapAllocatorPtrArrayStatic {$/;"	c
LargeRetTest	lib/msan/tests/msan_test.cc	/^LargeStruct LargeRetTest() {$/;"	f
LargeStruct	lib/asan/tests/asan_test.cc	/^struct LargeStruct {$/;"	s	file:
LargeStruct	lib/msan/tests/msan_test.cc	/^struct LargeStruct {$/;"	s	file:
LargestSize	lib/scudo/scudo_allocator_secondary.h	/^  uptr LargestSize;$/;"	m	class:LargeMmapAllocator
LastAllocatorPurgeAttemptTime	lib/fuzzer/FuzzerInternal.h	/^  system_clock::time_point LastAllocatorPurgeAttemptTime = system_clock::now();$/;"	m	class:fuzzer::Fuzzer
LastCorpusUpdateRun	lib/fuzzer/FuzzerInternal.h	/^  size_t LastCorpusUpdateRun = 0;$/;"	m	class:fuzzer::Fuzzer
LastFailure	lib/fuzzer/FuzzerMerge.h	/^  std::string LastFailure;$/;"	m	struct:fuzzer::Merger
LateInitialize	lib/sanitizer_common/sanitizer_symbolizer_markup.cc	/^void Symbolizer::LateInitialize() { Symbolizer::GetOrInit(); }$/;"	f	class:__sanitizer::Symbolizer
LateInitialize	lib/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc	/^void Symbolizer::LateInitialize() {$/;"	f	class:__sanitizer::Symbolizer
LateInitialize	lib/sanitizer_common/sanitizer_symbolizer_win.cc	/^void Symbolizer::LateInitialize() {$/;"	f	class:__sanitizer::Symbolizer
Lcomplex	lib/builtins/int_types.h	/^typedef long double _Complex Lcomplex;$/;"	t
Lcomplex	lib/builtins/int_types.h	/^typedef struct { long double real, imaginary; } Lcomplex;$/;"	t	typeref:struct:__anon126
Leak	lib/lsan/lsan_common.cc	/^  const char *Leak() { return Blue(); }$/;"	f	class:__lsan::Decorator
Leak	lib/lsan/lsan_common.h	/^struct Leak {$/;"	s	namespace:__lsan
Leak	test/sanitizer_common/TestCases/Posix/sanitizer_set_death_callback_test.cc	/^void Leak() {$/;"	f
LeakComparator	lib/lsan/lsan_common.cc	/^static bool LeakComparator(const Leak &leak1, const Leak &leak2) {$/;"	f	namespace:__lsan
LeakReport	lib/lsan/lsan_common.h	/^  LeakReport() {}$/;"	f	class:__lsan::LeakReport
LeakReport	lib/lsan/lsan_common.h	/^class LeakReport {$/;"	c	namespace:__lsan
LeakStack	test/asan/TestCases/heavy_uar_test.cc	/^char *LeakStack() {$/;"	f
LeakStack	test/asan/TestCases/scariness_score_test.cc	/^T *LeakStack() {$/;"	f
LeakedObject	lib/lsan/lsan_common.h	/^struct LeakedObject {$/;"	s	namespace:__lsan
LeakyGlobal	test/lsan/TestCases/do_leak_check_override.cc	/^  LeakyGlobal() {$/;"	f	struct:LeakyGlobal
LeakyGlobal	test/lsan/TestCases/do_leak_check_override.cc	/^struct LeakyGlobal {$/;"	s	file:
LeakyResetEnv	lib/sanitizer_common/sanitizer_mac.cc	/^void LeakyResetEnv(const char *name, const char *name_value) {$/;"	f	namespace:__sanitizer
LeastSignificantSetBitIndex	lib/sanitizer_common/sanitizer_common.h	/^INLINE uptr LeastSignificantSetBitIndex(uptr x) {$/;"	f	namespace:__sanitizer
LeaveInterceptorScope	lib/hwasan/hwasan_thread.h	/^  void LeaveInterceptorScope() { in_interceptor_scope_--; }$/;"	f	class:__hwasan::HwasanThread
LeaveSignalHandler	lib/hwasan/hwasan_thread.h	/^  void LeaveSignalHandler() { in_signal_handler_--; }$/;"	f	class:__hwasan::HwasanThread
LeaveSignalHandler	lib/msan/msan_thread.h	/^  void LeaveSignalHandler() { in_signal_handler_--; }$/;"	f	class:__msan::MsanThread
LeaveSymbolizer	lib/hwasan/hwasan_thread.h	/^  void LeaveSymbolizer() { in_symbolizer_--; }$/;"	f	class:__hwasan::HwasanThread
LeftOOBAccessMessage	lib/asan/tests/asan_test.cc	/^string LeftOOBAccessMessage(int oob_distance) {$/;"	f
LeftOOBErrorMessage	lib/asan/tests/asan_test.cc	/^string LeftOOBErrorMessage(int oob_distance, bool is_write) {$/;"	f
LeftOOBReadMessage	lib/asan/tests/asan_str_test.cc	/^string LeftOOBReadMessage(OOBKind oob_kind, int oob_distance) {$/;"	f	namespace:__anon40
LeftOOBReadMessage	lib/asan/tests/asan_test.cc	/^string LeftOOBReadMessage(int oob_distance) {$/;"	f
LeftOOBWriteMessage	lib/asan/tests/asan_test.cc	/^string LeftOOBWriteMessage(int oob_distance) {$/;"	f
LenControl	lib/fuzzer/FuzzerOptions.h	/^  size_t LenControl = 1000;$/;"	m	struct:fuzzer::FuzzingOptions
Level	lib/ubsan/ubsan_diag.h	/^  DiagLevel Level;$/;"	m	class:__ubsan::Diag
Lib	lib/sanitizer_common/sanitizer_libignore.h	/^  struct Lib {$/;"	s	class:__sanitizer::LibIgnore
LibCodeRange	lib/sanitizer_common/sanitizer_libignore.h	/^  struct LibCodeRange {$/;"	s	class:__sanitizer::LibIgnore
LibConstructor	test/tsan/Linux/check_preinit.cc	/^void LibConstructor() {$/;"	f
LibIgnore	lib/sanitizer_common/sanitizer_libignore.cc	/^LibIgnore::LibIgnore(LinkerInitialized) {$/;"	f	class:__sanitizer::LibIgnore
LibIgnore	lib/sanitizer_common/sanitizer_libignore.h	/^class LibIgnore {$/;"	c	namespace:__sanitizer
LibbacktraceSymbolizer	lib/sanitizer_common/sanitizer_symbolizer_libbacktrace.h	/^  explicit LibbacktraceSymbolizer(void *state) : state_(state) {}$/;"	f	class:__sanitizer::LibbacktraceSymbolizer
LibbacktraceSymbolizer	lib/sanitizer_common/sanitizer_symbolizer_libbacktrace.h	/^class LibbacktraceSymbolizer : public SymbolizerTool {$/;"	c	namespace:__sanitizer
LibraryNameIs	lib/sanitizer_common/sanitizer_linux.cc	/^bool LibraryNameIs(const char *full_name, const char *base_name) {$/;"	f	namespace:__sanitizer
LibsystemPath	test/BlocksRuntime/makefile	/^LibsystemPath ?= ~rc\/Software\/SnowLeopard\/Projects\/Libsystem\/Libsystem-$(LibsystemVersion)$/;"	m
LibsystemRootPath	test/BlocksRuntime/makefile	/^LibsystemRootPath ?= $(RootsDirectory)\/Libsystem-$(LibsystemVersion).roots\/Libsystem-$(LibsystemVersion)~dst\/usr\/lib\/$/;"	m
LibsystemTmpPath	test/BlocksRuntime/makefile	/^LibsystemTmpPath ?= $(RootsDirectory)\/Libsystem-$(LibsystemVersion)$/;"	m
LibsystemVersion	test/BlocksRuntime/makefile	/^LibsystemVersion ?= 121$/;"	m
LimitStackAndReexec	test/asan/TestCases/Linux/stack-overflow-recovery-mode.cc	/^void LimitStackAndReexec(int argc, char **argv) {$/;"	f
LimitStackAndReexec	test/asan/TestCases/Linux/stack-overflow-sigbus.cc	/^void LimitStackAndReexec(int argc, char **argv) {$/;"	f
LimitStackAndReexec	test/asan/TestCases/Posix/stack-overflow.cc	/^void LimitStackAndReexec(int argc, char **argv) {$/;"	f
Line	lib/ubsan/ubsan_value.h	/^  u32 Line;$/;"	m	class:__ubsan::SourceLocation
Link	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^  explicit Link(u32 id = 0, u32 seq = 0, u32 tid = 0, u32 s0 = 0, u32 s1 = 0)$/;"	f	struct:__sanitizer::Link
Link	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^struct Link {$/;"	s	namespace:__sanitizer	file:
LinkerInitialized	lib/sanitizer_common/sanitizer_internal_defs.h	/^enum LinkerInitialized { LINKER_INITIALIZED = 0 };$/;"	g	namespace:__sanitizer
LintFile	lib/sanitizer_common/scripts/litlint.py	/^def LintFile(p):$/;"	f
LintLine	lib/sanitizer_common/scripts/litlint.py	/^def LintLine(s):$/;"	f
List	lib/sanitizer_common/sanitizer_quarantine.h	/^  typedef IntrusiveList<QuarantineBatch> List;$/;"	t	class:__sanitizer::QuarantineCache
List	lib/sanitizer_common/tests/sanitizer_list_test.cc	/^typedef IntrusiveList<ListItem> List;$/;"	t	namespace:__sanitizer	file:
ListFilesInDirRecursive	lib/fuzzer/FuzzerIOPosix.cpp	/^void ListFilesInDirRecursive(const std::string &Dir, long *Epoch,$/;"	f	namespace:fuzzer
ListFilesInDirRecursive	lib/fuzzer/FuzzerIOWindows.cpp	/^void ListFilesInDirRecursive(const std::string &Dir, long *Epoch,$/;"	f	namespace:fuzzer
ListItem	lib/sanitizer_common/tests/sanitizer_list_test.cc	/^struct ListItem {$/;"	s	namespace:__sanitizer	file:
ListOfGlobals	lib/asan/asan_globals.cc	/^struct ListOfGlobals {$/;"	s	namespace:__asan	file:
ListOfModules	lib/sanitizer_common/sanitizer_common.h	/^  ListOfModules() : initialized(false) {}$/;"	f	class:__sanitizer::ListOfModules
ListOfModules	lib/sanitizer_common/sanitizer_common.h	/^class ListOfModules {$/;"	c	namespace:__sanitizer
ListThreads	lib/sanitizer_common/sanitizer_linux.cc	/^ThreadLister::Result ThreadLister::ListThreads($/;"	f	class:__sanitizer::ThreadLister
LiveBuffers	lib/xray/xray_buffer_queue.h	/^  size_t LiveBuffers;$/;"	m	class:__xray::BufferQueue
LoAppMemBeg	lib/tsan/rtl/tsan_platform.h	/^uptr LoAppMemBeg(void) {$/;"	f	namespace:__tsan
LoAppMemEnd	lib/tsan/rtl/tsan_platform.h	/^uptr LoAppMemEnd(void) {$/;"	f	namespace:__tsan
Load	lib/hwasan/hwasan.cc	/^enum class AccessType { Load, Store };$/;"	m	class:AccessType	file:
LoadActiveCode	lib/interception/tests/interception_win_test.cc	/^static void LoadActiveCode($/;"	f	namespace:__interception::__anon12
LoadFromCache	lib/sanitizer_common/sanitizer_procmaps_common.cc	/^void MemoryMappingLayout::LoadFromCache() {$/;"	f	class:__sanitizer::MemoryMappingLayout
LoadFromCache	lib/sanitizer_common/sanitizer_procmaps_mac.cc	/^void MemoryMappingLayout::LoadFromCache() {$/;"	f	class:__sanitizer::MemoryMappingLayout
LoadShadow	lib/tsan/rtl/tsan_rtl.cc	/^Shadow LoadShadow(u64 *p) {$/;"	f	namespace:__tsan
LoadedModule	lib/sanitizer_common/sanitizer_common.h	/^  LoadedModule()$/;"	f	class:__sanitizer::LoadedModule
LoadedModule	lib/sanitizer_common/sanitizer_common.h	/^class LoadedModule {$/;"	c	namespace:__sanitizer
Loc	lib/ubsan/ubsan_diag.h	/^  Location Loc;$/;"	m	class:__ubsan::Diag
Loc	lib/ubsan/ubsan_handlers.h	/^  SourceLocation Loc;$/;"	m	struct:__ubsan::CFICheckFailData
Loc	lib/ubsan/ubsan_handlers.h	/^  SourceLocation Loc;$/;"	m	struct:__ubsan::FloatCastOverflowDataV2
Loc	lib/ubsan/ubsan_handlers.h	/^  SourceLocation Loc;$/;"	m	struct:__ubsan::FunctionTypeMismatchData
Loc	lib/ubsan/ubsan_handlers.h	/^  SourceLocation Loc;$/;"	m	struct:__ubsan::ImplicitConversionData
Loc	lib/ubsan/ubsan_handlers.h	/^  SourceLocation Loc;$/;"	m	struct:__ubsan::InvalidBuiltinData
Loc	lib/ubsan/ubsan_handlers.h	/^  SourceLocation Loc;$/;"	m	struct:__ubsan::InvalidValueData
Loc	lib/ubsan/ubsan_handlers.h	/^  SourceLocation Loc;$/;"	m	struct:__ubsan::NonNullArgData
Loc	lib/ubsan/ubsan_handlers.h	/^  SourceLocation Loc;$/;"	m	struct:__ubsan::OutOfBoundsData
Loc	lib/ubsan/ubsan_handlers.h	/^  SourceLocation Loc;$/;"	m	struct:__ubsan::OverflowData
Loc	lib/ubsan/ubsan_handlers.h	/^  SourceLocation Loc;$/;"	m	struct:__ubsan::PointerOverflowData
Loc	lib/ubsan/ubsan_handlers.h	/^  SourceLocation Loc;$/;"	m	struct:__ubsan::ShiftOutOfBoundsData
Loc	lib/ubsan/ubsan_handlers.h	/^  SourceLocation Loc;$/;"	m	struct:__ubsan::TypeMismatchData
Loc	lib/ubsan/ubsan_handlers.h	/^  SourceLocation Loc;$/;"	m	struct:__ubsan::UnreachableData
Loc	lib/ubsan/ubsan_handlers.h	/^  SourceLocation Loc;$/;"	m	struct:__ubsan::VLABoundData
Loc	lib/ubsan/ubsan_handlers_cxx.h	/^  SourceLocation Loc;$/;"	m	struct:__ubsan::DynamicTypeCacheMissData
Loc	lib/ubsan/ubsan_monitor.h	/^  Location &Loc;$/;"	m	struct:__ubsan::UndefinedBehaviorReport
LocatePcInTrace	lib/sanitizer_common/sanitizer_stacktrace.cc	/^uptr BufferedStackTrace::LocatePcInTrace(uptr pc) {$/;"	f	class:__sanitizer::BufferedStackTrace
Location	lib/asan/asan_descriptions.h	/^  const char *Location() { return Green(); }$/;"	f	class:__asan::Decorator
Location	lib/tsan/rtl/tsan_report.cc	/^  const char *Location()   { return Green(); }$/;"	f	class:__tsan::Decorator
Location	lib/ubsan/ubsan_diag.h	/^  Location() : Kind(LK_Null) {}$/;"	f	class:__ubsan::Location
Location	lib/ubsan/ubsan_diag.h	/^  Location(MemoryLocation Loc) :$/;"	f	class:__ubsan::Location
Location	lib/ubsan/ubsan_diag.h	/^  Location(SourceLocation Loc) :$/;"	f	class:__ubsan::Location
Location	lib/ubsan/ubsan_diag.h	/^  Location(const SymbolizedStackHolder &Stack) :$/;"	f	class:__ubsan::Location
Location	lib/ubsan/ubsan_diag.h	/^class Location {$/;"	c	namespace:__ubsan
LocationKind	lib/ubsan/ubsan_diag.h	/^  enum LocationKind { LK_Null, LK_Source, LK_Memory, LK_Symbolized };$/;"	g	class:__ubsan::Location
Lock	lib/builtins/atomic.c	/^typedef OSSpinLock Lock;$/;"	t	file:
Lock	lib/builtins/atomic.c	/^typedef _Atomic(uintptr_t) Lock;$/;"	t	file:
Lock	lib/builtins/atomic.c	/^typedef struct _usem Lock;$/;"	t	typeref:struct:_usem	file:
Lock	lib/fuzzer/FuzzerLoop.cpp	/^  std::lock_guard<std::recursive_mutex> Lock;$/;"	m	class:fuzzer::TraceLock	file:
Lock	lib/sanitizer_common/sanitizer_fuchsia.cc	/^void BlockingMutex::Lock() {$/;"	f	class:__sanitizer::BlockingMutex
Lock	lib/sanitizer_common/sanitizer_linux.cc	/^void BlockingMutex::Lock() {$/;"	f	class:__sanitizer::BlockingMutex
Lock	lib/sanitizer_common/sanitizer_mac.cc	/^void BlockingMutex::Lock() {$/;"	f	class:__sanitizer::BlockingMutex
Lock	lib/sanitizer_common/sanitizer_mutex.h	/^  void Lock() {$/;"	f	class:__sanitizer::RWMutex
Lock	lib/sanitizer_common/sanitizer_mutex.h	/^  void Lock() {$/;"	f	class:__sanitizer::StaticSpinMutex
Lock	lib/sanitizer_common/sanitizer_rtems.cc	/^void BlockingMutex::Lock() {$/;"	f	class:__sanitizer::BlockingMutex
Lock	lib/sanitizer_common/sanitizer_solaris.cc	/^void BlockingMutex::Lock() {$/;"	f	class:__sanitizer::BlockingMutex
Lock	lib/sanitizer_common/sanitizer_thread_registry.h	/^  void Lock() { mtx_.Lock(); }$/;"	f	class:__sanitizer::ThreadRegistry
Lock	lib/sanitizer_common/sanitizer_win.cc	/^void BlockingMutex::Lock() {$/;"	f	class:__sanitizer::BlockingMutex
Lock	lib/sanitizer_common/tests/sanitizer_mutex_test.cc	/^  typedef GenericScopedLock<MutexType> Lock;$/;"	t	class:__sanitizer::TestData	file:
Lock	lib/tsan/benchmarks/vts_many_threads_bench.cc	/^  void Lock() { pthread_mutex_lock(&m_); }$/;"	f	class:Mutex
Lock	lib/tsan/rtl/tsan_mutex.cc	/^void InternalDeadlockDetector::Lock(MutexType t) {$/;"	f	class:__tsan::InternalDeadlockDetector
Lock	lib/tsan/rtl/tsan_mutex.cc	/^void Mutex::Lock() {$/;"	f	class:__tsan::Mutex
Lock	lib/tsan/rtl/tsan_mutex.h	/^typedef GenericScopedLock<Mutex> Lock;$/;"	t	namespace:__tsan
Lock	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^void Mutex::Lock() {$/;"	f	class:Mutex
Lock	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^void ScopedThread::Lock(const Mutex &m) {$/;"	f	class:ScopedThread
Lock	lib/tsan/tests/unit/tsan_mutex_test.cc	/^  typedef GenericScopedLock<MutexType> Lock;$/;"	t	class:__tsan::TestData	file:
Lock	test/tsan/custom_mutex.h	/^  void Lock() {$/;"	f	class:Mutex
Lock	test/tsan/mutex_annotations.cc	/^  void Lock() {$/;"	f	class:Mutex
Lock1_Loop	test/tsan/deadlock_detector_stress_test.cc	/^  void Lock1_Loop(size_t i, size_t n_iter) {$/;"	f	class:LockTest	file:
Lock1_Loop_0	test/tsan/deadlock_detector_stress_test.cc	/^  void Lock1_Loop_0() { Lock1_Loop(0, iter_count); }$/;"	f	class:LockTest	file:
Lock1_Loop_1	test/tsan/deadlock_detector_stress_test.cc	/^  void Lock1_Loop_1() { Lock1_Loop(10, iter_count); }$/;"	f	class:LockTest	file:
Lock1_Loop_2	test/tsan/deadlock_detector_stress_test.cc	/^  void Lock1_Loop_2() { Lock1_Loop(20, iter_count); }$/;"	f	class:LockTest	file:
Lock2	test/tsan/deadlock_detector_stress_test.cc	/^  void Lock2(size_t l1, size_t l2) { L(l1); L(l2); U(l2); U(l1); }$/;"	f	class:LockTest	file:
LockAll	lib/sanitizer_common/sanitizer_stackdepotbase.h	/^void StackDepotBase<Node, kReservedBits, kTabSizeLog>::LockAll() {$/;"	f	class:__sanitizer::StackDepotBase
LockAllocator	lib/asan/asan_allocator.cc	/^void LockAllocator() {$/;"	f	namespace:__lsan
LockAllocator	lib/lsan/lsan_allocator.cc	/^void LockAllocator() {$/;"	f	namespace:__lsan
LockImpl	test/tsan/custom_mutex.h	/^  void LockImpl(bool prof = true) {$/;"	f	class:Mutex
LockSlow	lib/sanitizer_common/sanitizer_mutex.h	/^  void NOINLINE LockSlow() {$/;"	f	class:__sanitizer::RWMutex
LockSlow	lib/sanitizer_common/sanitizer_mutex.h	/^  void NOINLINE LockSlow() {$/;"	f	class:__sanitizer::StaticSpinMutex
LockTest	test/tsan/deadlock_detector_stress_test.cc	/^  LockTest() : n_(), locks_() {}$/;"	f	class:LockTest
LockTest	test/tsan/deadlock_detector_stress_test.cc	/^class LockTest {$/;"	c	file:
LockThreadRegistry	lib/asan/asan_thread.cc	/^void LockThreadRegistry() {$/;"	f	namespace:__lsan
LockThreadRegistry	lib/lsan/lsan_thread.cc	/^void LockThreadRegistry() {$/;"	f	namespace:__lsan
LockType	test/tsan/deadlock_detector_stress_test.cc	16;"	d	file:
LockWithContext	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  struct LockWithContext {$/;"	s	class:__sanitizer::DeadlockDetectorTLS
Lock_0_1	test/tsan/deadlock_detector_stress_test.cc	/^  void Lock_0_1() {$/;"	f	class:LockTest	file:
Lock_1_0	test/tsan/deadlock_detector_stress_test.cc	/^  void Lock_1_0() {$/;"	f	class:LockTest	file:
Log	lib/fuzzer/FuzzerUtil.h	/^inline uint32_t Log(uint32_t X) { return 32 - __builtin_clz(X) - 1; }$/;"	f	namespace:fuzzer
Log2	lib/sanitizer_common/sanitizer_common.h	/^INLINE uptr Log2(uptr x) {$/;"	f	namespace:__sanitizer
LogAlignment	lib/ubsan/ubsan_handlers.h	/^  unsigned char LogAlignment;$/;"	m	struct:__ubsan::TypeMismatchData
LogFlushStatus	lib/xray/xray_fdr_logging.cc	/^static atomic_sint32_t LogFlushStatus = {$/;"	m	namespace:__xray	file:
LogFullErrorReport	lib/sanitizer_common/sanitizer_common.h	/^INLINE void LogFullErrorReport(const char *buffer) {}$/;"	f	namespace:__sanitizer
LogFullErrorReport	lib/sanitizer_common/sanitizer_mac.cc	/^void LogFullErrorReport(const char *buffer) {$/;"	f	namespace:__sanitizer
LogMessageOnPrintf	lib/sanitizer_common/sanitizer_common.h	/^INLINE void LogMessageOnPrintf(const char *str) {}$/;"	f	namespace:__sanitizer
LogMessageOnPrintf	lib/sanitizer_common/sanitizer_common_nolibc.cc	/^void LogMessageOnPrintf(const char *str) {}$/;"	f	namespace:__sanitizer
LogMessageOnPrintf	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^void LogMessageOnPrintf(const char *str) {$/;"	f	namespace:__sanitizer
LogMessageOnPrintf	lib/sanitizer_common/sanitizer_mac.cc	/^void LogMessageOnPrintf(const char *str) {$/;"	f	namespace:__sanitizer
LogMutex	lib/xray/xray_basic_logging.cc	/^SpinMutex LogMutex;$/;"	m	namespace:__xray	file:
Logger	test/tsan/atexit.cc	/^  Logger() {$/;"	f	class:Logger
Logger	test/tsan/atexit.cc	/^class Logger {$/;"	c	file:
LoggingStatus	lib/xray/xray_fdr_logging.cc	/^atomic_sint32_t LoggingStatus = {XRayLogInitStatus::XRAY_LOG_UNINITIALIZED};$/;"	m	namespace:__xray	file:
LongCycle	lib/sanitizer_common/tests/sanitizer_bvgraph_test.cc	/^void LongCycle() {$/;"	f
LongJmp	lib/tsan/rtl/tsan_interceptors.cc	/^static void LongJmp(ThreadState *thr, uptr *env) {$/;"	f	file:
LongJmpFunc1	lib/asan/tests/asan_test.cc	/^NOINLINE void LongJmpFunc1(jmp_buf buf) {$/;"	f
LongJump	test/asan/TestCases/Linux/swapcontext_annotation.cc	/^__attribute__((noinline, noreturn)) void LongJump(jmp_buf env) {$/;"	f
LongStruct	lib/msan/tests/msan_test.cc	/^struct LongStruct {$/;"	s	file:
LookupSymbolFromMain	lib/stats/stats_client.cc	/^void *LookupSymbolFromMain(const char *name) {$/;"	f	namespace:__anon2
Loop	lib/fuzzer/FuzzerLoop.cpp	/^void Fuzzer::Loop(const Vector<std::string> &CorpusDirs) {$/;"	f	class:fuzzer::Fuzzer
LooseMemeq	lib/fuzzer/FuzzerLoop.cpp	/^static bool LooseMemeq(const uint8_t *A, const uint8_t *B, size_t Size) {$/;"	f	namespace:fuzzer
LotsOfStackReuse	lib/asan/tests/asan_test.cc	/^static void LotsOfStackReuse() {$/;"	f	file:
LowLevelAllocateCallback	lib/sanitizer_common/sanitizer_common.h	/^typedef void (*LowLevelAllocateCallback)(uptr ptr, uptr size);$/;"	t	namespace:__sanitizer
LowLevelAllocator	lib/sanitizer_common/sanitizer_common.h	/^class LowLevelAllocator {$/;"	c	namespace:__sanitizer
LsanMetadata	lib/asan/asan_allocator.cc	/^LsanMetadata::LsanMetadata(uptr chunk) {$/;"	f	class:__lsan::LsanMetadata
LsanMetadata	lib/lsan/lsan_allocator.cc	/^LsanMetadata::LsanMetadata(uptr chunk) {$/;"	f	class:__lsan::LsanMetadata
LsanMetadata	lib/lsan/lsan_common.h	/^class LsanMetadata {$/;"	c	namespace:__lsan
LsanOnDeadlySignal	lib/lsan/lsan.cc	/^static void LsanOnDeadlySignal(int signo, void *siginfo, void *context) {$/;"	f	file:
M	lib/sanitizer_common/sanitizer_allocator_size_class_map.h	/^  static const uptr M = (1 << S) - 1;$/;"	m	class:SizeClassMap
M	test/profile/Inputs/extern_template.h	/^  T M;$/;"	m	struct:Test
MACOS_VERSION_LEOPARD	lib/sanitizer_common/sanitizer_mac.h	/^  MACOS_VERSION_LEOPARD,$/;"	e	enum:__sanitizer::MacosVersion
MACOS_VERSION_LION	lib/sanitizer_common/sanitizer_mac.h	/^  MACOS_VERSION_LION,$/;"	e	enum:__sanitizer::MacosVersion
MACOS_VERSION_MAVERICKS	lib/sanitizer_common/sanitizer_mac.h	/^  MACOS_VERSION_MAVERICKS,$/;"	e	enum:__sanitizer::MacosVersion
MACOS_VERSION_MOUNTAIN_LION	lib/sanitizer_common/sanitizer_mac.h	/^  MACOS_VERSION_MOUNTAIN_LION,$/;"	e	enum:__sanitizer::MacosVersion
MACOS_VERSION_SNOW_LEOPARD	lib/sanitizer_common/sanitizer_mac.h	/^  MACOS_VERSION_SNOW_LEOPARD,$/;"	e	enum:__sanitizer::MacosVersion
MACOS_VERSION_UNINITIALIZED	lib/sanitizer_common/sanitizer_mac.h	/^  MACOS_VERSION_UNINITIALIZED = 0,$/;"	e	enum:__sanitizer::MacosVersion
MACOS_VERSION_UNKNOWN	lib/sanitizer_common/sanitizer_mac.h	/^  MACOS_VERSION_UNKNOWN,$/;"	e	enum:__sanitizer::MacosVersion
MACOS_VERSION_UNKNOWN_NEWER	lib/sanitizer_common/sanitizer_mac.h	/^  MACOS_VERSION_UNKNOWN_NEWER$/;"	e	enum:__sanitizer::MacosVersion
MACOS_VERSION_YOSEMITE	lib/sanitizer_common/sanitizer_mac.h	/^  MACOS_VERSION_YOSEMITE,$/;"	e	enum:__sanitizer::MacosVersion
MANTBITS	lib/builtins/hexagon/dfaddsub.S	/^#define MANTBITS 52$/;"	d
MANTBITS	lib/builtins/hexagon/dffma.S	/^#define MANTBITS 52$/;"	d
MANTBITS	lib/builtins/hexagon/dfmul.S	/^#define MANTBITS 52$/;"	d
MANTISSA_TO_INT_BIAS	lib/builtins/hexagon/dfaddsub.S	/^#define MANTISSA_TO_INT_BIAS 52$/;"	d
MANTISSA_TO_INT_BIAS	lib/builtins/hexagon/dfmul.S	/^#define MANTISSA_TO_INT_BIAS 52$/;"	d
MAPPING_APP_ADDR	lib/dfsan/dfsan_platform.h	/^  MAPPING_APP_ADDR,$/;"	e	enum:__dfsan::MappingType
MAPPING_APP_BEG	lib/tsan/rtl/tsan_platform.h	/^  MAPPING_APP_BEG,$/;"	e	enum:__tsan::MappingType
MAPPING_APP_END	lib/tsan/rtl/tsan_platform.h	/^  MAPPING_APP_END,$/;"	e	enum:__tsan::MappingType
MAPPING_HEAP_BEG	lib/tsan/rtl/tsan_platform.h	/^  MAPPING_HEAP_BEG,$/;"	e	enum:__tsan::MappingType
MAPPING_HEAP_END	lib/tsan/rtl/tsan_platform.h	/^  MAPPING_HEAP_END,$/;"	e	enum:__tsan::MappingType
MAPPING_HI_APP_BEG	lib/tsan/rtl/tsan_platform.h	/^  MAPPING_HI_APP_BEG,$/;"	e	enum:__tsan::MappingType
MAPPING_HI_APP_END	lib/tsan/rtl/tsan_platform.h	/^  MAPPING_HI_APP_END,$/;"	e	enum:__tsan::MappingType
MAPPING_LO_APP_BEG	lib/tsan/rtl/tsan_platform.h	/^  MAPPING_LO_APP_BEG,$/;"	e	enum:__tsan::MappingType
MAPPING_LO_APP_END	lib/tsan/rtl/tsan_platform.h	/^  MAPPING_LO_APP_END,$/;"	e	enum:__tsan::MappingType
MAPPING_META_SHADOW_BEG	lib/tsan/rtl/tsan_platform.h	/^  MAPPING_META_SHADOW_BEG,$/;"	e	enum:__tsan::MappingType
MAPPING_META_SHADOW_END	lib/tsan/rtl/tsan_platform.h	/^  MAPPING_META_SHADOW_END,$/;"	e	enum:__tsan::MappingType
MAPPING_MID_APP_BEG	lib/tsan/rtl/tsan_platform.h	/^  MAPPING_MID_APP_BEG,$/;"	e	enum:__tsan::MappingType
MAPPING_MID_APP_END	lib/tsan/rtl/tsan_platform.h	/^  MAPPING_MID_APP_END,$/;"	e	enum:__tsan::MappingType
MAPPING_SHADOW_ADDR	lib/dfsan/dfsan_platform.h	/^  MAPPING_SHADOW_ADDR,$/;"	e	enum:__dfsan::MappingType
MAPPING_SHADOW_BEG	lib/tsan/rtl/tsan_platform.h	/^  MAPPING_SHADOW_BEG,$/;"	e	enum:__tsan::MappingType
MAPPING_SHADOW_END	lib/tsan/rtl/tsan_platform.h	/^  MAPPING_SHADOW_END,$/;"	e	enum:__tsan::MappingType
MAPPING_SHADOW_MASK	lib/dfsan/dfsan_platform.h	/^  MAPPING_SHADOW_MASK$/;"	e	enum:__dfsan::MappingType
MAPPING_TRACE_BEG	lib/tsan/rtl/tsan_platform.h	/^  MAPPING_TRACE_BEG,$/;"	e	enum:__tsan::MappingType
MAPPING_TRACE_END	lib/tsan/rtl/tsan_platform.h	/^  MAPPING_TRACE_END,$/;"	e	enum:__tsan::MappingType
MAPPING_UNION_TABLE_ADDR	lib/dfsan/dfsan_platform.h	/^  MAPPING_UNION_TABLE_ADDR,$/;"	e	enum:__dfsan::MappingType
MAPPING_VDSO_BEG	lib/tsan/rtl/tsan_platform.h	/^  MAPPING_VDSO_BEG,$/;"	e	enum:__tsan::MappingType
MAP_32BIT	test/tsan/ignore_lib5.cc	33;"	d	file:
MAP_ANON	lib/profile/WindowsMMap.h	30;"	d
MAP_ANONYMOUS	lib/profile/WindowsMMap.h	29;"	d
MAP_FAILED	lib/profile/WindowsMMap.h	31;"	d
MAP_FAILED	lib/tsan/rtl/tsan_interceptors.cc	/^void *const MAP_FAILED = (void*)-1;$/;"	v
MAP_FILE	lib/profile/InstrProfilingPort.h	113;"	d
MAP_FILE	lib/profile/WindowsMMap.h	26;"	d
MAP_FILE	test/asan/TestCases/Posix/asan-sigbus.cpp	20;"	d	file:
MAP_FIXED	lib/tsan/rtl/tsan_interceptors.cc	/^const int MAP_FIXED = 0x10;$/;"	v
MAP_NORESERVE	lib/sanitizer_common/sanitizer_posix.cc	33;"	d	file:
MAP_NORESERVE	lib/sanitizer_common/sanitizer_posix.cc	34;"	d	file:
MAP_NORESERVE	lib/sanitizer_common/sanitizer_posix_libcdep.cc	44;"	d	file:
MAP_NORESERVE	lib/sanitizer_common/sanitizer_posix_libcdep.cc	45;"	d	file:
MAP_NORESERVE	lib/xray/xray_allocator.h	30;"	d
MAP_NORESERVE	lib/xray/xray_buffer_queue.cc	24;"	d	file:
MAP_NORESERVE	test/asan/TestCases/Posix/dlclose-test.cc	39;"	d	file:
MAP_NORESERVE	test/asan/TestCases/Posix/dlclose-test.cc	40;"	d	file:
MAP_NORESERVE	test/tsan/mmap_large.cc	10;"	d	file:
MAP_NORESERVE	test/tsan/mmap_large.cc	11;"	d	file:
MAP_PRIVATE	lib/profile/WindowsMMap.h	28;"	d
MAP_SHARED	lib/profile/WindowsMMap.h	27;"	d
MAX_N_FUNCTIONS	test/asan/TestCases/Linux/stress_dtls.c	55;"	d	file:
MAX_PID_SIZE	lib/profile/InstrProfilingFile.c	65;"	d	file:
MAYBE_StrDupOOBTest	lib/asan/tests/asan_str_test.cc	137;"	d	file:
MAYBE_StrDupOOBTest	lib/asan/tests/asan_str_test.cc	139;"	d	file:
MBlock	lib/tsan/rtl/tsan_defs.h	/^struct MBlock {$/;"	s	namespace:__tsan
MBlockAtExit	lib/tsan/rtl/tsan_mman.h	/^  MBlockAtExit,$/;"	e	enum:__tsan::MBlockType
MBlockClock	lib/tsan/rtl/tsan_mman.h	/^  MBlockClock,$/;"	e	enum:__tsan::MBlockType
MBlockDeadInfo	lib/tsan/rtl/tsan_mman.h	/^  MBlockDeadInfo,$/;"	e	enum:__tsan::MBlockType
MBlockExpectRace	lib/tsan/rtl/tsan_mman.h	/^  MBlockExpectRace,$/;"	e	enum:__tsan::MBlockType
MBlockFlag	lib/tsan/rtl/tsan_mman.h	/^  MBlockFlag,$/;"	e	enum:__tsan::MBlockType
MBlockJmpBuf	lib/tsan/rtl/tsan_mman.h	/^  MBlockJmpBuf,$/;"	e	enum:__tsan::MBlockType
MBlockRacyAddresses	lib/tsan/rtl/tsan_mman.h	/^  MBlockRacyAddresses,$/;"	e	enum:__tsan::MBlockType
MBlockRacyStacks	lib/tsan/rtl/tsan_mman.h	/^  MBlockRacyStacks,$/;"	e	enum:__tsan::MBlockType
MBlockReport	lib/tsan/rtl/tsan_mman.h	/^  MBlockReport,$/;"	e	enum:__tsan::MBlockType
MBlockReportLoc	lib/tsan/rtl/tsan_mman.h	/^  MBlockReportLoc,$/;"	e	enum:__tsan::MBlockType
MBlockReportMop	lib/tsan/rtl/tsan_mman.h	/^  MBlockReportMop,$/;"	e	enum:__tsan::MBlockType
MBlockReportMutex	lib/tsan/rtl/tsan_mman.h	/^  MBlockReportMutex,$/;"	e	enum:__tsan::MBlockType
MBlockReportStack	lib/tsan/rtl/tsan_mman.h	/^  MBlockReportStack,$/;"	e	enum:__tsan::MBlockType
MBlockReportThread	lib/tsan/rtl/tsan_mman.h	/^  MBlockReportThread,$/;"	e	enum:__tsan::MBlockType
MBlockScopedBuf	lib/tsan/rtl/tsan_mman.h	/^  MBlockScopedBuf,$/;"	e	enum:__tsan::MBlockType
MBlockShadowStack	lib/tsan/rtl/tsan_mman.h	/^  MBlockShadowStack,$/;"	e	enum:__tsan::MBlockType
MBlockSignal	lib/tsan/rtl/tsan_mman.h	/^  MBlockSignal,$/;"	e	enum:__tsan::MBlockType
MBlockStackTrace	lib/tsan/rtl/tsan_mman.h	/^  MBlockStackTrace,$/;"	e	enum:__tsan::MBlockType
MBlockString	lib/tsan/rtl/tsan_mman.h	/^  MBlockString,$/;"	e	enum:__tsan::MBlockType
MBlockSuppression	lib/tsan/rtl/tsan_mman.h	/^  MBlockSuppression,$/;"	e	enum:__tsan::MBlockType
MBlockSync	lib/tsan/rtl/tsan_mman.h	/^  MBlockSync,$/;"	e	enum:__tsan::MBlockType
MBlockThreadContex	lib/tsan/rtl/tsan_mman.h	/^  MBlockThreadContex,$/;"	e	enum:__tsan::MBlockType
MBlockType	lib/tsan/rtl/tsan_mman.h	/^enum MBlockType {$/;"	g	namespace:__tsan
MBlockTypeCount	lib/tsan/rtl/tsan_mman.h	/^  MBlockTypeCount$/;"	e	enum:__tsan::MBlockType
MCHECK_OK	test/sanitizer_common/TestCases/Linux/mprobe.cc	9;"	d	file:
MD	lib/fuzzer/FuzzerInternal.h	/^  MutationDispatcher &MD;$/;"	m	class:fuzzer::Fuzzer
MD5Hash	lib/tsan/rtl/tsan_defs.h	/^struct MD5Hash {$/;"	s	namespace:__tsan
MD5_CTX	lib/tsan/rtl/tsan_md5.cc	/^} MD5_CTX;$/;"	t	namespace:__tsan	typeref:struct:__tsan::__anon18	file:
MD5_Final	lib/tsan/rtl/tsan_md5.cc	/^void MD5_Final(unsigned char *result, MD5_CTX *ctx) {$/;"	f	namespace:__tsan
MD5_Init	lib/tsan/rtl/tsan_md5.cc	/^void MD5_Init(MD5_CTX *ctx) {$/;"	f	namespace:__tsan
MD5_Update	lib/tsan/rtl/tsan_md5.cc	/^void MD5_Update(MD5_CTX *ctx, const void *data, ulong_t size) {$/;"	f	namespace:__tsan
MD5_u32plus	lib/tsan/rtl/tsan_md5.cc	/^typedef unsigned int MD5_u32plus;$/;"	t	namespace:__tsan	file:
MEMCPY	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^    MEMCPY,$/;"	e	enum:Event::Type	file:
MEMSET	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^    MEMSET$/;"	e	enum:Event::Type	file:
MEM_IS_APP	lib/hwasan/hwasan_mapping.h	77;"	d
MEM_IS_APP	lib/msan/msan.h	267;"	d
MEM_IS_ORIGIN	lib/msan/msan.h	269;"	d
MEM_IS_SHADOW	lib/msan/msan.h	268;"	d
MEM_TO_ORIGIN	lib/msan/msan.h	249;"	d
MEM_TO_SHADOW	lib/asan/asan_mapping_myriad.h	18;"	d
MEM_TO_SHADOW	lib/hwasan/hwasan_mapping.h	72;"	d
MEM_TO_SHADOW	lib/msan/msan.h	159;"	d
MEM_TO_SHADOW	lib/msan/msan.h	182;"	d
MEM_TO_SHADOW	lib/msan/msan.h	203;"	d
MEM_TO_SHADOW	lib/msan/msan.h	218;"	d
MEM_TO_SHADOW	lib/msan/msan.h	239;"	d
MEM_TO_SHADOW	lib/msan/msan.h	64;"	d
MEM_TO_SHADOW_SIZE	lib/hwasan/hwasan_mapping.h	75;"	d
MFHooks	lib/sanitizer_common/sanitizer_common.cc	/^static MallocFreeHook MFHooks[kMaxMallocFreeHooks];$/;"	m	namespace:__sanitizer	file:
MINMAX_4	lib/builtins/arm/sync-ops.h	51;"	d
MINMAX_8	lib/builtins/arm/sync-ops.h	57;"	d
MISSING	lib/msan/msan_report.cc	/^  static const int MISSING = -2;$/;"	m	class:__msan::OriginSet	file:
MMT	lib/fuzzer/FuzzerTracePC.h	/^  MemMemTable<1024> MMT;$/;"	m	class:fuzzer::TracePC
MProtectHelper	lib/xray/xray_interface.cc	/^class MProtectHelper {$/;"	c	namespace:__xray	file:
MProtectLen	lib/xray/xray_interface.cc	/^  std::size_t MProtectLen;$/;"	m	class:__xray::MProtectHelper	file:
MSAN_ALLOCATOR_H	lib/msan/msan_allocator.h	15;"	d
MSAN_CHAINED_ORIGIN_DEPOT_H	lib/msan/msan_chained_origin_depot.h	13;"	d
MSAN_CONTAINS_UBSAN	lib/msan/msan.h	30;"	d
MSAN_FLAG	lib/msan/msan.cc	102;"	d	file:
MSAN_FLAG	lib/msan/msan.cc	104;"	d	file:
MSAN_FLAG	lib/msan/msan.cc	125;"	d	file:
MSAN_FLAG	lib/msan/msan.cc	128;"	d	file:
MSAN_FLAG	lib/msan/msan_flags.h	19;"	d
MSAN_FLAG	lib/msan/msan_flags.h	21;"	d
MSAN_FLAGS_H	lib/msan/msan_flags.h	14;"	d
MSAN_FREE_HOOK	lib/msan/msan.h	394;"	d
MSAN_H	lib/msan/msan.h	16;"	d
MSAN_HAS_M128	lib/msan/tests/msan_test.cc	105;"	d	file:
MSAN_HAS_M128	lib/msan/tests/msan_test.cc	107;"	d	file:
MSAN_INTERCEPT_FSTATAT	lib/msan/msan_interceptors.cc	703;"	d	file:
MSAN_INTERCEPT_FSTATAT	lib/msan/msan_interceptors.cc	712;"	d	file:
MSAN_INTERCEPT_FUNC	lib/msan/msan_interceptors.cc	1181;"	d	file:
MSAN_INTERCEPT_FUNC_VER	lib/msan/msan_interceptors.cc	1187;"	d	file:
MSAN_INTERCEPT_UNAME	lib/msan/msan_interceptors.cc	829;"	d	file:
MSAN_INTERCEPT_UNAME	lib/msan/msan_interceptors.cc	838;"	d	file:
MSAN_INTERFACE_H	include/sanitizer/msan_interface.h	15;"	d
MSAN_INTERFACE_INTERNAL_H	lib/msan/msan_interface_internal.h	16;"	d
MSAN_MALLOC_HOOK	lib/msan/msan.h	386;"	d
MSAN_MAYBE_INTERCEPT_CFREE	lib/msan/msan_interceptors.cc	232;"	d	file:
MSAN_MAYBE_INTERCEPT_CFREE	lib/msan/msan_interceptors.cc	234;"	d	file:
MSAN_MAYBE_INTERCEPT_EPOLL_PWAIT	lib/msan/msan_interceptors.cc	878;"	d	file:
MSAN_MAYBE_INTERCEPT_EPOLL_PWAIT	lib/msan/msan_interceptors.cc	880;"	d	file:
MSAN_MAYBE_INTERCEPT_EPOLL_WAIT	lib/msan/msan_interceptors.cc	863;"	d	file:
MSAN_MAYBE_INTERCEPT_EPOLL_WAIT	lib/msan/msan_interceptors.cc	865;"	d	file:
MSAN_MAYBE_INTERCEPT_FCVT	lib/msan/msan_interceptors.cc	616;"	d	file:
MSAN_MAYBE_INTERCEPT_FCVT	lib/msan/msan_interceptors.cc	618;"	d	file:
MSAN_MAYBE_INTERCEPT_FGETS_UNLOCKED	lib/msan/msan_interceptors.cc	762;"	d	file:
MSAN_MAYBE_INTERCEPT_FGETS_UNLOCKED	lib/msan/msan_interceptors.cc	764;"	d	file:
MSAN_MAYBE_INTERCEPT_FORKPTY	lib/msan/msan_interceptors.cc	1155;"	d	file:
MSAN_MAYBE_INTERCEPT_FORKPTY	lib/msan/msan_interceptors.cc	1157;"	d	file:
MSAN_MAYBE_INTERCEPT_FREAD_UNLOCKED	lib/msan/msan_interceptors.cc	140;"	d	file:
MSAN_MAYBE_INTERCEPT_FREAD_UNLOCKED	lib/msan/msan_interceptors.cc	142;"	d	file:
MSAN_MAYBE_INTERCEPT_FSTAT	lib/msan/msan_interceptors.cc	665;"	d	file:
MSAN_MAYBE_INTERCEPT_FSTAT	lib/msan/msan_interceptors.cc	667;"	d	file:
MSAN_MAYBE_INTERCEPT_GCVT	lib/msan/msan_interceptors.cc	356;"	d	file:
MSAN_MAYBE_INTERCEPT_GCVT	lib/msan/msan_interceptors.cc	358;"	d	file:
MSAN_MAYBE_INTERCEPT_GETRLIMIT64	lib/msan/msan_interceptors.cc	808;"	d	file:
MSAN_MAYBE_INTERCEPT_GETRLIMIT64	lib/msan/msan_interceptors.cc	812;"	d	file:
MSAN_MAYBE_INTERCEPT_MALLINFO	lib/msan/msan_interceptors.cc	261;"	d	file:
MSAN_MAYBE_INTERCEPT_MALLINFO	lib/msan/msan_interceptors.cc	263;"	d	file:
MSAN_MAYBE_INTERCEPT_MALLOC_STATS	lib/msan/msan_interceptors.cc	279;"	d	file:
MSAN_MAYBE_INTERCEPT_MALLOC_STATS	lib/msan/msan_interceptors.cc	281;"	d	file:
MSAN_MAYBE_INTERCEPT_MALLOC_USABLE_SIZE	lib/msan/msan_interceptors.cc	241;"	d	file:
MSAN_MAYBE_INTERCEPT_MALLOC_USABLE_SIZE	lib/msan/msan_interceptors.cc	244;"	d	file:
MSAN_MAYBE_INTERCEPT_MALLOPT	lib/msan/msan_interceptors.cc	270;"	d	file:
MSAN_MAYBE_INTERCEPT_MALLOPT	lib/msan/msan_interceptors.cc	272;"	d	file:
MSAN_MAYBE_INTERCEPT_MEMALIGN	lib/msan/msan_interceptors.cc	182;"	d	file:
MSAN_MAYBE_INTERCEPT_MEMALIGN	lib/msan/msan_interceptors.cc	184;"	d	file:
MSAN_MAYBE_INTERCEPT_MEMPCPY	lib/msan/msan_interceptors.cc	149;"	d	file:
MSAN_MAYBE_INTERCEPT_MEMPCPY	lib/msan/msan_interceptors.cc	151;"	d	file:
MSAN_MAYBE_INTERCEPT_OPENPTY	lib/msan/msan_interceptors.cc	1138;"	d	file:
MSAN_MAYBE_INTERCEPT_OPENPTY	lib/msan/msan_interceptors.cc	1140;"	d	file:
MSAN_MAYBE_INTERCEPT_PRLIMIT	lib/msan/msan_interceptors.cc	809;"	d	file:
MSAN_MAYBE_INTERCEPT_PRLIMIT	lib/msan/msan_interceptors.cc	813;"	d	file:
MSAN_MAYBE_INTERCEPT_PRLIMIT64	lib/msan/msan_interceptors.cc	810;"	d	file:
MSAN_MAYBE_INTERCEPT_PRLIMIT64	lib/msan/msan_interceptors.cc	814;"	d	file:
MSAN_MAYBE_INTERCEPT_PVALLOC	lib/msan/msan_interceptors.cc	215;"	d	file:
MSAN_MAYBE_INTERCEPT_PVALLOC	lib/msan/msan_interceptors.cc	217;"	d	file:
MSAN_MAYBE_INTERCEPT_STPCPY	lib/msan/msan_interceptors.cc	316;"	d	file:
MSAN_MAYBE_INTERCEPT_STPCPY	lib/msan/msan_interceptors.cc	318;"	d	file:
MSAN_MAYBE_INTERCEPT_WMEMPCPY	lib/msan/msan_interceptors.cc	570;"	d	file:
MSAN_MAYBE_INTERCEPT_WMEMPCPY	lib/msan/msan_interceptors.cc	572;"	d	file:
MSAN_MAYBE_INTERCEPT___FXSTAT	lib/msan/msan_interceptors.cc	678;"	d	file:
MSAN_MAYBE_INTERCEPT___FXSTAT	lib/msan/msan_interceptors.cc	680;"	d	file:
MSAN_MAYBE_INTERCEPT___FXSTAT64	lib/msan/msan_interceptors.cc	691;"	d	file:
MSAN_MAYBE_INTERCEPT___FXSTAT64	lib/msan/msan_interceptors.cc	693;"	d	file:
MSAN_MAYBE_INTERCEPT___FXSTATAT64	lib/msan/msan_interceptors.cc	723;"	d	file:
MSAN_MAYBE_INTERCEPT___FXSTATAT64	lib/msan/msan_interceptors.cc	725;"	d	file:
MSAN_MAYBE_INTERCEPT___LIBC_MEMALIGN	lib/msan/msan_interceptors.cc	200;"	d	file:
MSAN_MAYBE_INTERCEPT___LIBC_MEMALIGN	lib/msan/msan_interceptors.cc	202;"	d	file:
MSAN_MAYBE_INTERCEPT___STRDUP	lib/msan/msan_interceptors.cc	343;"	d	file:
MSAN_MAYBE_INTERCEPT___STRDUP	lib/msan/msan_interceptors.cc	345;"	d	file:
MSAN_MAYBE_INTERCEPT___STRFTIME_L	lib/msan/msan_interceptors.cc	511;"	d	file:
MSAN_MAYBE_INTERCEPT___STRFTIME_L	lib/msan/msan_interceptors.cc	513;"	d	file:
MSAN_MAYBE_INTERCEPT___WCSFTIME_L	lib/msan/msan_interceptors.cc	533;"	d	file:
MSAN_MAYBE_INTERCEPT___WCSFTIME_L	lib/msan/msan_interceptors.cc	535;"	d	file:
MSAN_MAYBE_STORE_ORIGIN	lib/msan/msan.cc	333;"	d	file:
MSAN_MAYBE_WARNING	lib/msan/msan.cc	315;"	d	file:
MSAN_ORIGIN_H	lib/msan/msan_origin.h	13;"	d
MSAN_POISONING_H	lib/msan/msan_poisoning.h	15;"	d
MSAN_REPLACE_OPERATORS_NEW_AND_DELETE	lib/msan/msan.h	26;"	d
MSAN_REPORT_H	lib/msan/msan_report.h	17;"	d
MSAN_TEST_CONFIG_H	lib/msan/tests/msan_test_config.h	16;"	d
MSAN_TEST_PRLIMIT	lib/msan/tests/msan_test.cc	3028;"	d	file:
MSAN_TEST_PRLIMIT	lib/msan/tests/msan_test.cc	3030;"	d	file:
MSAN_TEST_PRLIMIT	lib/msan/tests/msan_test.cc	3032;"	d	file:
MSAN_THREAD_H	lib/msan/msan_thread.h	15;"	d
MSC_PREREQ	lib/sanitizer_common/sanitizer_platform.h	285;"	d
MSC_PREREQ	lib/sanitizer_common/sanitizer_platform.h	287;"	d
MS_ASYNC	lib/profile/WindowsMMap.h	36;"	d
MS_INVALIDATE	lib/profile/WindowsMMap.h	37;"	d
MS_SYNC	lib/profile/WindowsMMap.h	38;"	d
MSanAtExitRecord	lib/msan/msan_interceptors.cc	/^struct MSanAtExitRecord {$/;"	s	file:
MSanAtExitWrapper	lib/msan/msan_interceptors.cc	/^void MSanAtExitWrapper(void *arg) {$/;"	f
MSanInterceptorContext	lib/msan/msan_interceptors.cc	/^struct MSanInterceptorContext {$/;"	s	file:
MUL	lib/msan/tests/msan_test.cc	/^template<class T> INLINE T MUL(const T &a, const T&b) { return a * b; }$/;"	f
MUST_FAULT	test/tsan/signal_longjmp.cc	35;"	d	file:
MUTEX_CREATE	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^    MUTEX_CREATE,$/;"	e	enum:Event::Type	file:
MUTEX_DESTROY	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^    MUTEX_DESTROY,$/;"	e	enum:Event::Type	file:
MUTEX_LOCK	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^    MUTEX_LOCK,$/;"	e	enum:Event::Type	file:
MUTEX_READLOCK	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^    MUTEX_READLOCK,$/;"	e	enum:Event::Type	file:
MUTEX_READUNLOCK	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^    MUTEX_READUNLOCK,$/;"	e	enum:Event::Type	file:
MUTEX_TRYLOCK	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^    MUTEX_TRYLOCK,$/;"	e	enum:Event::Type	file:
MUTEX_TRYREADLOCK	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^    MUTEX_TRYREADLOCK,$/;"	e	enum:Event::Type	file:
MUTEX_UNLOCK	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^    MUTEX_UNLOCK,$/;"	e	enum:Event::Type	file:
MacosVersion	lib/sanitizer_common/sanitizer_mac.h	/^enum MacosVersion {$/;"	g	namespace:__sanitizer
Magenta	lib/sanitizer_common/sanitizer_report_decorator.h	/^  const char *Magenta() const { return ansi_ ? "\\033[1m\\033[35m" : ""; }$/;"	f	class:__sanitizer::SanitizerCommonDecorator
Magic	lib/sanitizer_common/sanitizer_coverage_libcdep_new.cc	/^static const u64 Magic = SANITIZER_WORDSIZE == 64 ? Magic64 : Magic32;$/;"	m	namespace:__sancov::__anon64	file:
Magic32	lib/sanitizer_common/sanitizer_coverage_libcdep_new.cc	/^static const u64 Magic32 = 0xC0BFFFFFFFFFFF32ULL;$/;"	m	namespace:__sancov::__anon64	file:
Magic64	lib/sanitizer_common/sanitizer_coverage_fuchsia.cc	/^constexpr u64 Magic64 = 0xC0BFFFFFFFFFFF64ULL;$/;"	m	namespace:__sancov::__anon63	file:
Magic64	lib/sanitizer_common/sanitizer_coverage_libcdep_new.cc	/^static const u64 Magic64 = 0xC0BFFFFFFFFFFF64ULL;$/;"	m	namespace:__sancov::__anon64	file:
MagicBytes	lib/xray/tests/unit/profile_collector_test.cc	/^  const u64 MagicBytes = 0x7872617970726f66; \/\/ Identifier for XRay profiling$/;"	m	struct:__xray::__anon22::ExpectedProfilingFileHeader	file:
MagicBytes	lib/xray/xray_profile_collector.cc	/^  const u64 MagicBytes = XRayMagicBytes;$/;"	m	struct:__xray::profileCollectorService::__anon27::XRayProfilingFileHeader	file:
MagicForBits	lib/sanitizer_common/scripts/sancov.py	/^def MagicForBits(bits):$/;"	f
MainEntered	test/profile/Inputs/instrprof-alloc.c	/^int MainEntered = 0;$/;"	v
MainThread	lib/tsan/tests/rtl/tsan_test_util.h	/^  MainThread()$/;"	f	class:MainThread
MainThread	lib/tsan/tests/rtl/tsan_test_util.h	/^class MainThread : public ScopedThread {$/;"	c
MainThreadStackBase	lib/sanitizer_common/sanitizer_fuchsia.cc	/^uptr MainThreadStackBase, MainThreadStackSize;$/;"	m	namespace:__sanitizer	file:
MainThreadStackBase	lib/sanitizer_common/sanitizer_rtems.cc	/^uptr MainThreadStackBase, MainThreadStackSize;$/;"	m	namespace:__sanitizer	file:
MainThreadStackSize	lib/sanitizer_common/sanitizer_fuchsia.cc	/^uptr MainThreadStackBase, MainThreadStackSize;$/;"	m	namespace:__sanitizer	file:
MainThreadStackSize	lib/sanitizer_common/sanitizer_rtems.cc	/^uptr MainThreadStackBase, MainThreadStackSize;$/;"	m	namespace:__sanitizer	file:
MainThreadTlsBase	lib/sanitizer_common/sanitizer_rtems.cc	/^uptr MainThreadTlsBase, MainThreadTlsSize;$/;"	m	namespace:__sanitizer	file:
MainThreadTlsSize	lib/sanitizer_common/sanitizer_rtems.cc	/^uptr MainThreadTlsBase, MainThreadTlsSize;$/;"	m	namespace:__sanitizer	file:
MakeDictionaryEntryFromCMP	lib/fuzzer/FuzzerMutate.cpp	/^DictionaryEntry MutationDispatcher::MakeDictionaryEntryFromCMP($/;"	f	class:fuzzer::MutationDispatcher
MakeShadowValid	lib/asan/tests/asan_interface_test.cc	/^static void MakeShadowValid(bool *shadow, int length, int granularity) {$/;"	f	file:
MakeTrampoline	lib/fuzzer/FuzzerUtilFuchsia.cpp	/^void MakeTrampoline() {$/;"	f	namespace:fuzzer::__anon35
MallocAndMemsetString	lib/asan/tests/asan_test.cc	/^char* MallocAndMemsetString(size_t size) {$/;"	f
MallocAndMemsetString	lib/asan/tests/asan_test.cc	/^char* MallocAndMemsetString(size_t size, char ch) {$/;"	f
MallocCalled	test/profile/Inputs/instrprof-alloc.c	/^int MallocCalled = 0;$/;"	v
MallocDebugK	lib/asan/asan_malloc_linux.cc	/^struct MallocDebugK {$/;"	s	file:
MallocDebugL	lib/asan/asan_malloc_linux.cc	/^struct MallocDebugL {$/;"	s	file:
MallocFreeHook	lib/sanitizer_common/sanitizer_common.cc	/^struct MallocFreeHook {$/;"	s	namespace:__sanitizer	file:
MallocFreeTracer	lib/fuzzer/FuzzerLoop.cpp	/^struct MallocFreeTracer {$/;"	s	namespace:fuzzer	file:
MallocHook	lib/fuzzer/FuzzerLoop.cpp	/^void MallocHook(const volatile void *ptr, size_t size) {$/;"	f	namespace:fuzzer
MallocHook1	test/sanitizer_common/TestCases/malloc_hook.cc	/^void MallocHook1(const volatile void *ptr, size_t sz) { WRITE("MH1\\n"); }$/;"	f
MallocHook2	test/sanitizer_common/TestCases/malloc_hook.cc	/^void MallocHook2(const volatile void *ptr, size_t sz) { WRITE("MH2\\n"); }$/;"	f
MallocIntrospectionLockForker	lib/asan/tests/asan_mac_test.cc	/^void *MallocIntrospectionLockForker(void *_) {$/;"	f
MallocIntrospectionLockWorker	lib/asan/tests/asan_mac_test.cc	/^void *MallocIntrospectionLockWorker(void *_) {$/;"	f
MallocLimitMb	lib/fuzzer/FuzzerOptions.h	/^  int MallocLimitMb = 0;$/;"	m	struct:fuzzer::FuzzingOptions
MallocReleaseStress	test/asan/TestCases/Linux/release_to_os_test.cc	/^void MallocReleaseStress() {$/;"	f
MallocStress	lib/asan/tests/asan_noinst_test.cc	/^static void MallocStress(size_t n) {$/;"	f	file:
MallocThread	lib/sanitizer_common/tests/standalone_malloc_test.cc	/^static void *MallocThread(void *t) {$/;"	f	file:
Mallocs	lib/fuzzer/FuzzerLoop.cpp	/^  std::atomic<size_t> Mallocs;$/;"	m	struct:fuzzer::MallocFreeTracer	file:
ManualDictionary	lib/fuzzer/FuzzerMutate.h	/^  Dictionary ManualDictionary;$/;"	m	class:fuzzer::MutationDispatcher
ManyAccessFunc	lib/asan/tests/asan_benchmarks_test.cc	/^static void ManyAccessFunc(T *x, size_t n_elements, size_t n_iter) {$/;"	f	file:
ManyThreadsWithStatsWorker	lib/asan/tests/asan_interface_test.cc	/^static void *ManyThreadsWithStatsWorker(void *arg) {$/;"	f	file:
ManyThreadsWorker	lib/asan/tests/asan_test.cc	/^void *ManyThreadsWorker(void *a) {$/;"	f
Map	lib/fuzzer/FuzzerShmemPosix.cpp	/^bool SharedMemoryRegion::Map(int fd) {$/;"	f	class:fuzzer::SharedMemoryRegion
Map	lib/fuzzer/FuzzerShmemWindows.cpp	/^bool SharedMemoryRegion::Map(int fd) {$/;"	f	class:fuzzer::SharedMemoryRegion
Map	lib/fuzzer/FuzzerValueBitMap.h	/^  uintptr_t Map[kMapSizeInWords] __attribute__((aligned(512)));$/;"	m	struct:fuzzer::ValueBitMap
Map	lib/sanitizer_common/sanitizer_fuchsia.cc	/^uptr ReservedAddressRange::Map(uptr fixed_addr, uptr map_size) {$/;"	f	class:__sanitizer::ReservedAddressRange
Map	lib/sanitizer_common/sanitizer_posix_libcdep.cc	/^uptr ReservedAddressRange::Map(uptr fixed_addr, uptr size) {$/;"	f	class:__sanitizer::ReservedAddressRange
Map	lib/sanitizer_common/sanitizer_win.cc	/^uptr ReservedAddressRange::Map(uptr fixed_addr, uptr size) {$/;"	f	class:__sanitizer::ReservedAddressRange
Map	lib/tsan/rtl/tsan_dense_alloc.h	/^  T *Map(IndexT idx) {$/;"	f	class:__tsan::DenseSlabAlloc
Map	lib/xray/tests/unit/fdr_logging_test.cc	/^  void *Map = nullptr;$/;"	m	struct:__xray::__anon25::ScopedFileCloserAndDeleter	file:
MapDynamicShadow	lib/hwasan/hwasan_dynamic_shadow.cc	/^static uptr MapDynamicShadow(uptr shadow_size_bytes) {$/;"	f	namespace:__hwasan
MapFileToMemory	lib/sanitizer_common/sanitizer_posix.cc	/^void *MapFileToMemory(const char *file_name, uptr *buff_size) {$/;"	f	namespace:__sanitizer
MapFileToMemory	lib/sanitizer_common/sanitizer_win.cc	/^void *MapFileToMemory(const char *file_name, uptr *buff_size) {$/;"	f	namespace:__sanitizer
MapOrDie	lib/sanitizer_common/sanitizer_fuchsia.cc	/^uptr ReservedAddressRange::MapOrDie(uptr fixed_addr, uptr map_size) {$/;"	f	class:__sanitizer::ReservedAddressRange
MapOrDie	lib/sanitizer_common/sanitizer_posix_libcdep.cc	/^uptr ReservedAddressRange::MapOrDie(uptr fixed_addr, uptr size) {$/;"	f	class:__sanitizer::ReservedAddressRange
MapOrDie	lib/sanitizer_common/sanitizer_win.cc	/^uptr ReservedAddressRange::MapOrDie(uptr fixed_addr, uptr size) {$/;"	f	class:__sanitizer::ReservedAddressRange
MapPackedCounterArrayBuffer	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^    uptr MapPackedCounterArrayBuffer(uptr buffer_size) {$/;"	f	class:SizeClassAllocator64::MemoryMapper
MapPackedCounterArrayBuffer	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  uptr MapPackedCounterArrayBuffer(uptr buffer_size) {$/;"	f	class:NoMemoryMapper
MapPackedCounterArrayBuffer	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  uptr MapPackedCounterArrayBuffer(uptr buffer_size) {$/;"	f	class:RedZoneMemoryMapper
MapPackedCounterArrayBuffer	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  uptr MapPackedCounterArrayBuffer(uptr buffer_size) {$/;"	f	class:ReleasedPagesTrackingMemoryMapper
MapRodata	lib/tsan/rtl/tsan_platform_linux.cc	/^static void MapRodata() {$/;"	f	namespace:__tsan
MapShadow	lib/tsan/rtl/tsan_rtl.cc	/^void MapShadow(uptr addr, uptr size) {$/;"	f	namespace:__tsan
MapThreadTrace	lib/tsan/rtl/tsan_rtl.cc	/^void MapThreadTrace(uptr addr, uptr size, const char *name) {$/;"	f	namespace:__tsan
MapUnmapCallback	lib/asan/asan_allocator.h	/^  typedef AsanMapUnmapCallback MapUnmapCallback;$/;"	t	struct:__asan::AP32
MapUnmapCallback	lib/asan/asan_allocator.h	/^  typedef AsanMapUnmapCallback MapUnmapCallback;$/;"	t	struct:__asan::AP64
MapUnmapCallback	lib/hwasan/hwasan_allocator.cc	/^  typedef HwasanMapUnmapCallback MapUnmapCallback;$/;"	t	struct:__hwasan::AP32	file:
MapUnmapCallback	lib/lsan/lsan_allocator.h	/^  typedef NoOpMapUnmapCallback MapUnmapCallback;$/;"	t	struct:__lsan::AP32
MapUnmapCallback	lib/lsan/lsan_allocator.h	/^  typedef NoOpMapUnmapCallback MapUnmapCallback;$/;"	t	struct:__lsan::AP64
MapUnmapCallback	lib/msan/msan_allocator.cc	/^    typedef MsanMapUnmapCallback MapUnmapCallback;$/;"	t	struct:__msan::AP32	file:
MapUnmapCallback	lib/msan/msan_allocator.cc	/^    typedef MsanMapUnmapCallback MapUnmapCallback;$/;"	t	struct:__msan::AP64	file:
MapUnmapCallback	lib/sanitizer_common/sanitizer_allocator_internal.h	/^  typedef NoOpMapUnmapCallback MapUnmapCallback;$/;"	t	struct:__sanitizer::AP32
MapUnmapCallback	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^  typedef typename Params::MapUnmapCallback MapUnmapCallback;$/;"	t	class:SizeClassAllocator32
MapUnmapCallback	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  typedef typename Params::MapUnmapCallback MapUnmapCallback;$/;"	t	class:SizeClassAllocator64
MapUnmapCallback	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  typedef NoOpMapUnmapCallback MapUnmapCallback;$/;"	t	struct:AP32Compact	file:
MapUnmapCallback	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  typedef NoOpMapUnmapCallback MapUnmapCallback;$/;"	t	struct:AP32SeparateBatches	file:
MapUnmapCallback	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  typedef NoOpMapUnmapCallback MapUnmapCallback;$/;"	t	struct:AP64	file:
MapUnmapCallback	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  typedef NoOpMapUnmapCallback MapUnmapCallback;$/;"	t	struct:AP64Compact	file:
MapUnmapCallback	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  typedef NoOpMapUnmapCallback MapUnmapCallback;$/;"	t	struct:AP64Dyn	file:
MapUnmapCallback	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  typedef NoOpMapUnmapCallback MapUnmapCallback;$/;"	t	struct:AP64VeryCompact	file:
MapUnmapCallback	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  typedef NoOpMapUnmapCallback MapUnmapCallback;$/;"	t	struct:AP64_SpecialSizeClassMap	file:
MapUnmapCallback	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  typedef TestMapUnmapCallback MapUnmapCallback;$/;"	t	struct:AP32WithCallback	file:
MapUnmapCallback	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  typedef TestMapUnmapCallback MapUnmapCallback;$/;"	t	struct:AP64WithCallback	file:
MapUnmapCallback	lib/sanitizer_common/tests/sanitizer_allocator_testlib.cc	/^  typedef NoOpMapUnmapCallback MapUnmapCallback;$/;"	t	struct:__AP64	file:
MapUnmapCallback	lib/scudo/scudo_allocator.h	/^  typedef NoOpMapUnmapCallback MapUnmapCallback;$/;"	t	struct:__scudo::AP64
MapUnmapCallback	lib/tsan/rtl/tsan_mman.cc	/^struct MapUnmapCallback {$/;"	s	namespace:__tsan	file:
MapUnmapCallback	lib/tsan/rtl/tsan_rtl.h	/^  typedef __tsan::MapUnmapCallback MapUnmapCallback;$/;"	t	struct:__tsan::AP32
MapUnmapCallback	lib/tsan/rtl/tsan_rtl.h	/^  typedef __tsan::MapUnmapCallback MapUnmapCallback;$/;"	t	struct:__tsan::AP64
MapWithCallback	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^  void *MapWithCallback(uptr size) {$/;"	f	class:SizeClassAllocator32
MapWithCallback	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  bool MapWithCallback(uptr beg, uptr size) {$/;"	f	class:SizeClassAllocator64
MapWithCallbackOrDie	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  void MapWithCallbackOrDie(uptr beg, uptr size) {$/;"	f	class:SizeClassAllocator64
MapWritableFileToMemory	lib/sanitizer_common/sanitizer_posix.cc	/^void *MapWritableFileToMemory(void *addr, uptr size, fd_t fd, OFF_T offset) {$/;"	f	namespace:__sanitizer
MapWritableFileToMemory	lib/sanitizer_common/sanitizer_win.cc	/^void *MapWritableFileToMemory(void *addr, uptr size, fd_t fd, OFF_T offset) {$/;"	f	namespace:__sanitizer
Mapping	lib/dfsan/dfsan_platform.h	/^struct Mapping {$/;"	s	namespace:__dfsan
Mapping	lib/esan/esan.cpp	/^ShadowMapping Mapping;$/;"	m	namespace:__esan	file:
Mapping	lib/tsan/rtl/tsan_platform.h	/^struct Mapping {$/;"	s	namespace:__tsan
MappingArchImpl	lib/dfsan/dfsan_platform.h	/^uptr MappingArchImpl(void) {$/;"	f	namespace:__dfsan
MappingArchImpl	lib/tsan/rtl/tsan_platform.h	/^uptr MappingArchImpl(void) {$/;"	f	namespace:__tsan
MappingDesc	lib/msan/msan.h	/^struct MappingDesc {$/;"	s
MappingImpl	lib/dfsan/dfsan_platform.h	/^uptr MappingImpl(void) {$/;"	f	namespace:__dfsan
MappingImpl	lib/tsan/rtl/tsan_platform.h	/^uptr MappingImpl(void) {$/;"	f	namespace:__tsan
MappingSize	lib/sanitizer_common/sanitizer_coverage_fuchsia.cc	/^  static constexpr size_t MappingSize = sizeof(uptr) << 32;$/;"	m	class:__sancov::__anon63::final	file:
MappingType	lib/dfsan/dfsan_platform.h	/^enum MappingType {$/;"	g	namespace:__dfsan
MappingType	lib/tsan/rtl/tsan_platform.h	/^enum MappingType {$/;"	g	namespace:__tsan
MarkAsFreed	lib/tsan/rtl/tsan_rtl.h	/^  void MarkAsFreed() {$/;"	f	class:__tsan::Shadow
MarkIndirectlyLeakedCb	lib/lsan/lsan_common.cc	/^static void MarkIndirectlyLeakedCb(uptr chunk, void *arg) {$/;"	f	namespace:__lsan
MarkInvalidPCCb	lib/lsan/lsan_common.cc	/^static void MarkInvalidPCCb(uptr chunk, void *arg) {$/;"	f	namespace:__lsan
MarkUidAsPresent	lib/sanitizer_common/tests/sanitizer_thread_registry_test.cc	/^static void MarkUidAsPresent(ThreadContextBase *tctx, void *arg) {$/;"	f	namespace:__sanitizer
Mask	lib/esan/esan_shadow.h	/^    static const uptr Mask = 0x0000000fffffffffu;$/;"	m	struct:__esan::ShadowMapping::ShadowMemoryMask40
Mask	lib/esan/esan_shadow.h	/^    static const uptr Mask = 0x00000fffffffffffu;$/;"	m	struct:__esan::ShadowMapping::ShadowMemoryMask47
Match	lib/sanitizer_common/sanitizer_suppressions.cc	/^bool SuppressionContext::Match(const char *str, const char *type,$/;"	f	class:__sanitizer::SuppressionContext
Match	lib/sanitizer_common/scripts/cpplint.py	/^def Match(pattern, s):$/;"	f
Max	lib/fuzzer/FuzzerDefs.h	/^template <class T> T Max(T a, T b) { return a > b ? a : b; }$/;"	f	namespace:fuzzer
Max	lib/sanitizer_common/sanitizer_common.h	/^template<class T> T Max(T a, T b) { return a > b ? a : b; }$/;"	f	namespace:__sanitizer
Max	lib/xray/xray_buffer_queue.h	/^    size_t Max = 0;$/;"	m	class:__xray::BufferQueue::Iterator
MaxAccumBitIdx	lib/esan/working_set.cpp	/^static const u32 MaxAccumBitIdx = 6;$/;"	m	namespace:__esan	file:
MaxAlignment	lib/scudo/scudo_allocator.h	/^const uptr MaxAlignment = 1 << MaxAlignmentLog;$/;"	m	namespace:__scudo
MaxAlignmentLog	lib/scudo/scudo_allocator.h	/^const uptr MaxAlignmentLog = 24;  \/\/ 16 MB$/;"	m	namespace:__scudo
MaxAllowedMallocSize	lib/scudo/scudo_allocator.cpp	/^  static const uptr MaxAllowedMallocSize =$/;"	m	struct:__scudo::Allocator	file:
MaxArgs	lib/ubsan/ubsan_diag.h	/^  static const unsigned MaxArgs = 8;$/;"	m	class:__ubsan::Diag
MaxCached	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^    static uptr MaxCached(uptr size) {$/;"	f	struct:SizeClassAllocator32::TransferBatch
MaxCachedHint	lib/sanitizer_common/sanitizer_allocator_size_class_map.h	/^  static uptr MaxCachedHint(uptr size) {$/;"	f	class:SizeClassMap
MaxInputLen	lib/fuzzer/FuzzerInternal.h	/^  size_t MaxInputLen = 0;$/;"	m	class:fuzzer::Fuzzer
MaxInputSize	lib/fuzzer/FuzzerCorpus.h	/^  size_t MaxInputSize() const {$/;"	f	class:fuzzer::InputCorpus
MaxLen	lib/fuzzer/FuzzerOptions.h	/^  size_t MaxLen = 0;$/;"	m	struct:fuzzer::FuzzingOptions
MaxMutationLen	lib/fuzzer/FuzzerInternal.h	/^  size_t MaxMutationLen = 0;$/;"	m	class:fuzzer::Fuzzer
MaxNumberOfRuns	lib/fuzzer/FuzzerOptions.h	/^  size_t MaxNumberOfRuns = -1L;$/;"	m	struct:fuzzer::FuzzingOptions
MaxRanges	lib/ubsan/ubsan_diag.h	/^  static const unsigned MaxRanges = 1;$/;"	m	class:__ubsan::Diag
MaxStackDepth	include/xray/xray_log_interface.h	/^  size_t MaxStackDepth = 0;$/;"	m	struct:__xray::BasicLoggingOptions
MaxStackSize	lib/esan/esan_shadow.h	/^static const uptr MaxStackSize = (1ULL << 40) - 4096;$/;"	m	namespace:__esan
MaxTotalTimeSec	lib/fuzzer/FuzzerOptions.h	/^  int MaxTotalTimeSec = 0;$/;"	m	struct:fuzzer::FuzzingOptions
MayDeleteFile	lib/fuzzer/FuzzerCorpus.h	/^  bool MayDeleteFile = false;$/;"	m	struct:fuzzer::InputInfo
MaybeCallAsanDefaultOptions	lib/asan/asan_flags.cc	/^static const char *MaybeCallAsanDefaultOptions() {$/;"	f	namespace:__asan
MaybeCallLsanDefaultOptions	lib/lsan/lsan_common.cc	/^const char *MaybeCallLsanDefaultOptions() {$/;"	f	namespace:__lsan
MaybeCallSancovDefaultOptions	lib/sanitizer_common/sancov_flags.cc	/^static const char *MaybeCallSancovDefaultOptions() {$/;"	f	namespace:__sancov
MaybeCallUbsanDefaultOptions	lib/ubsan/ubsan_flags.cc	/^const char *MaybeCallUbsanDefaultOptions() {$/;"	f	namespace:__ubsan
MaybeDemangleGlobalName	lib/asan/asan_globals.cc	/^const char *MaybeDemangleGlobalName(const char *name) {$/;"	f	namespace:__asan
MaybeDumpInstructionBytes	lib/sanitizer_common/sanitizer_symbolizer_report.cc	/^static void MaybeDumpInstructionBytes(uptr pc) {$/;"	f	namespace:__sanitizer
MaybeDumpRegisters	lib/sanitizer_common/sanitizer_symbolizer_report.cc	/^static void MaybeDumpRegisters(void *context) {$/;"	f	namespace:__sanitizer
MaybeExitGracefully	lib/fuzzer/FuzzerLoop.cpp	/^void Fuzzer::MaybeExitGracefully() {$/;"	f	class:fuzzer::Fuzzer
MaybeInDlsym	lib/asan/asan_malloc_linux.cc	/^static INLINE bool MaybeInDlsym() {$/;"	f	file:
MaybeInit	test/sanitizer_common/TestCases/Posix/sanitizer_set_death_callback_test.cc	/^void MaybeInit(int *uninitialized) {$/;"	f
MaybeInstallSigaction	lib/sanitizer_common/sanitizer_posix_libcdep.cc	/^static void MaybeInstallSigaction(int signum,$/;"	f	namespace:__sanitizer
MaybePrintStackTrace	lib/ubsan/ubsan_diag.cc	/^static void MaybePrintStackTrace(uptr pc, uptr bp) {$/;"	f	file:
MaybeRealStrnlen	lib/asan/asan_interceptors.cc	/^static inline uptr MaybeRealStrnlen(const char *s, uptr maxlen) {$/;"	f	namespace:__asan
MaybeReexec	lib/sanitizer_common/sanitizer_fuchsia.cc	/^void MaybeReexec() {}$/;"	f	namespace:__sanitizer
MaybeReexec	lib/sanitizer_common/sanitizer_linux.cc	/^void MaybeReexec() {$/;"	f	namespace:__sanitizer
MaybeReexec	lib/sanitizer_common/sanitizer_mac.cc	/^void MaybeReexec() {$/;"	f	namespace:__sanitizer
MaybeReexec	lib/sanitizer_common/sanitizer_rtems.cc	/^void MaybeReexec() {}$/;"	f	namespace:__sanitizer
MaybeReexec	lib/sanitizer_common/sanitizer_win.cc	/^void MaybeReexec() {$/;"	f	namespace:__sanitizer
MaybeReleaseToOS	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  void MaybeReleaseToOS(uptr class_id, bool force) {$/;"	f	class:SizeClassAllocator64
MaybeReportErrorSummary	lib/ubsan/ubsan_diag.cc	/^static void MaybeReportErrorSummary(Location Loc, ErrorType Type) {$/;"	f	file:
MaybeReportLinuxPIEBug	lib/asan/asan_shadow_setup.cc	/^static void MaybeReportLinuxPIEBug() {$/;"	f	namespace:__asan
MaybeReportNonExecRegion	lib/sanitizer_common/sanitizer_symbolizer_report.cc	/^static void MaybeReportNonExecRegion(uptr pc) {$/;"	f	namespace:__sanitizer
MaybeReportThreadLeak	lib/tsan/rtl/tsan_rtl_thread.cc	/^static void MaybeReportThreadLeak(ThreadContextBase *tctx_base, void *arg) {$/;"	f	namespace:__tsan
MaybeSpawnBackgroundThread	lib/tsan/rtl/tsan_rtl.cc	/^void MaybeSpawnBackgroundThread() {$/;"	f	namespace:__tsan
MaybeStartBackgroudThread	lib/sanitizer_common/sanitizer_common_libcdep.cc	/^void MaybeStartBackgroudThread() {$/;"	f	namespace:__sanitizer
MaybeUseAsanDefaultOptionsCompileDefinition	lib/asan/asan_flags.cc	/^static const char *MaybeUseAsanDefaultOptionsCompileDefinition() {$/;"	f	namespace:__asan
MediumData	test/profile/instrprof-bufferio.c	/^const char *MediumData =$/;"	v
MemCount	lib/tsan/rtl/tsan_platform_linux.cc	/^  MemCount  = 8,$/;"	e	enum:__tsan::__anon15	file:
MemCpyTest	lib/msan/tests/msan_test.cc	/^void MemCpyTest() {$/;"	f
MemCpyThread	test/tsan/inlined_memcpy_race.cc	/^void *MemCpyThread(void *a) {$/;"	f
MemCpyWrapper	lib/asan/tests/asan_mem_test.cc	/^class MemCpyWrapper {$/;"	c	file:
MemFile	lib/tsan/rtl/tsan_platform_linux.cc	/^  MemFile   = 3,$/;"	e	enum:__tsan::__anon15	file:
MemHeap	lib/tsan/rtl/tsan_platform_linux.cc	/^  MemHeap   = 6,$/;"	e	enum:__tsan::__anon15	file:
MemIsApp	lib/hwasan/hwasan_linux.cc	/^bool MemIsApp(uptr p) {$/;"	f	namespace:__hwasan
MemLoc	lib/tsan/tests/rtl/tsan_test_util.h	/^  explicit MemLoc(void *const real_addr) : loc_(real_addr) { }$/;"	f	class:MemLoc
MemLoc	lib/tsan/tests/rtl/tsan_test_util.h	/^class MemLoc {$/;"	c
MemLoc	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^MemLoc::MemLoc(int offset_from_aligned)$/;"	f	class:MemLoc
MemMemTable	lib/fuzzer/FuzzerTracePC.h	/^struct MemMemTable {$/;"	s	namespace:fuzzer
MemMemWords	lib/fuzzer/FuzzerTracePC.h	/^  Word MemMemWords[kSize];$/;"	m	struct:fuzzer::MemMemTable
MemMeta	lib/tsan/rtl/tsan_platform_linux.cc	/^  MemMeta   = 2,$/;"	e	enum:__tsan::__anon15	file:
MemMmap	lib/tsan/rtl/tsan_platform_linux.cc	/^  MemMmap   = 4,$/;"	e	enum:__tsan::__anon15	file:
MemMoveThread	test/tsan/inlined_memcpy_race2.cc	/^void *MemMoveThread(void *a) {$/;"	f
MemMoveWrapper	lib/asan/tests/asan_mem_test.cc	/^class MemMoveWrapper {$/;"	c	file:
MemOther	lib/tsan/rtl/tsan_platform_linux.cc	/^  MemOther  = 7,$/;"	e	enum:__tsan::__anon15	file:
MemSetOOBTestTemplate	lib/asan/tests/asan_mem_test.cc	/^void MemSetOOBTestTemplate(size_t length) {$/;"	f
MemSetThread	test/tsan/inlined_memcpy_race.cc	/^void *MemSetThread(void *a) {$/;"	f
MemSetThread	test/tsan/inlined_memcpy_race2.cc	/^void *MemSetThread(void *a) {$/;"	f
MemShadow	lib/tsan/rtl/tsan_platform_linux.cc	/^  MemShadow = 1,$/;"	e	enum:__tsan::__anon15	file:
MemToMeta	lib/tsan/rtl/tsan_platform.h	/^u32 *MemToMeta(uptr x) {$/;"	f	namespace:__tsan
MemToMetaImpl	lib/tsan/rtl/tsan_platform.h	/^u32 *MemToMetaImpl(uptr x) {$/;"	f	namespace:__tsan
MemToShadow	lib/asan/asan_mapping.h	/^static inline uptr MemToShadow(uptr p) {$/;"	f	namespace:__asan
MemToShadow	lib/cfi/cfi.cc	/^uint16_t *MemToShadow(uptr x, uptr shadow_base) {$/;"	f	namespace:__cfi
MemToShadow	lib/tsan/rtl/tsan_platform.h	/^uptr MemToShadow(uptr x) {$/;"	f	namespace:__tsan
MemToShadowImpl	lib/tsan/rtl/tsan_platform.h	/^uptr MemToShadowImpl(uptr x) {$/;"	f	namespace:__tsan
MemToShadowOffset	lib/cfi/cfi.cc	/^uptr MemToShadowOffset(uptr x) {$/;"	f	namespace:__cfi
MemTotal	lib/tsan/rtl/tsan_platform_linux.cc	/^  MemTotal  = 0,$/;"	e	enum:__tsan::__anon15	file:
MemTrace	lib/tsan/rtl/tsan_platform_linux.cc	/^  MemTrace  = 5,$/;"	e	enum:__tsan::__anon15	file:
MemTransferOOBTestTemplate	lib/asan/tests/asan_mem_test.cc	/^void MemTransferOOBTestTemplate(size_t length) {$/;"	f
MemalignFromLocalPool	lib/asan/asan_malloc_linux.cc	/^void* MemalignFromLocalPool(uptr alignment, uptr size) {$/;"	f
MemalignRun	lib/asan/tests/asan_test.cc	/^void MemalignRun(size_t align, size_t size, int idx) {$/;"	f
Memcpy	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^void ScopedThread::Memcpy(void *dst, const void *src, int size,$/;"	f	class:ScopedThread
MemoryAccess	lib/tsan/rtl/tsan_rtl.cc	/^void MemoryAccess(ThreadState *thr, uptr pc, uptr addr,$/;"	f	namespace:__tsan
MemoryAccessImpl	lib/tsan/rtl/tsan_rtl.cc	/^void MemoryAccessImpl(ThreadState *thr, uptr addr,$/;"	f	namespace:__tsan
MemoryAccessImpl1	lib/tsan/rtl/tsan_rtl.cc	/^void MemoryAccessImpl1(ThreadState *thr, uptr addr,$/;"	f	namespace:__tsan
MemoryAccessRange	lib/tsan/rtl/tsan_rtl_thread.cc	/^void MemoryAccessRange(ThreadState *thr, uptr pc, uptr addr,$/;"	f	namespace:__tsan
MemoryByte	lib/sanitizer_common/sanitizer_report_decorator.h	/^  const char *MemoryByte() const { return Magenta(); }$/;"	f	class:__sanitizer::SanitizerCommonDecorator
MemoryLoc	lib/ubsan/ubsan_diag.h	/^  MemoryLocation MemoryLoc;$/;"	m	class:__ubsan::Location
MemoryLocation	lib/ubsan/ubsan_diag.h	/^typedef uptr MemoryLocation;$/;"	t	namespace:__ubsan
MemoryMappedSegment	lib/sanitizer_common/sanitizer_procmaps.h	/^  MemoryMappedSegment(char *buff = nullptr, uptr size = 0)$/;"	f	class:__sanitizer::MemoryMappedSegment
MemoryMappedSegment	lib/sanitizer_common/sanitizer_procmaps.h	/^class MemoryMappedSegment {$/;"	c	namespace:__sanitizer
MemoryMappedSegmentData	lib/sanitizer_common/sanitizer_procmaps_mac.cc	/^struct MemoryMappedSegmentData {$/;"	s	namespace:__sanitizer	file:
MemoryMapper	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^    MemoryMapper(const ThisT& base_allocator, uptr class_id)$/;"	f	class:SizeClassAllocator64::MemoryMapper
MemoryMapper	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  class MemoryMapper {$/;"	c	class:SizeClassAllocator64
MemoryMappingLayout	lib/sanitizer_common/sanitizer_procmaps.h	/^class MemoryMappingLayout {$/;"	c	namespace:__sanitizer
MemoryMappingLayout	lib/sanitizer_common/sanitizer_procmaps_common.cc	/^MemoryMappingLayout::MemoryMappingLayout(bool cache_enabled) {$/;"	f	class:__sanitizer::MemoryMappingLayout
MemoryMappingLayout	lib/sanitizer_common/sanitizer_procmaps_mac.cc	/^MemoryMappingLayout::MemoryMappingLayout(bool cache_enabled) {$/;"	f	class:__sanitizer::MemoryMappingLayout
MemoryMappingLayoutData	lib/sanitizer_common/sanitizer_linux.h	/^struct MemoryMappingLayoutData {$/;"	s	namespace:__sanitizer
MemoryMappingLayoutData	lib/sanitizer_common/sanitizer_mac.h	/^struct MemoryMappingLayoutData {$/;"	s	namespace:__sanitizer
MemoryProfileCB	lib/asan/asan_memory_profile.cc	/^static void MemoryProfileCB(const SuspendedThreadsList &suspended_threads_list,$/;"	f	namespace:__asan
MemoryProfiler	lib/tsan/rtl/tsan_rtl.cc	/^static void MemoryProfiler(Context *ctx, fd_t fd, int i) {$/;"	f	namespace:__tsan
MemoryRangeFreed	lib/tsan/rtl/tsan_rtl.cc	/^void MemoryRangeFreed(ThreadState *thr, uptr pc, uptr addr, uptr size) {$/;"	f	namespace:__tsan
MemoryRangeImitateWrite	lib/tsan/rtl/tsan_rtl.cc	/^void MemoryRangeImitateWrite(ThreadState *thr, uptr pc, uptr addr, uptr size) {$/;"	f	namespace:__tsan
MemoryRangeIsAvailable	lib/sanitizer_common/sanitizer_posix.cc	/^bool MemoryRangeIsAvailable(uptr range_start, uptr range_end) {$/;"	f	namespace:__sanitizer
MemoryRangeIsAvailable	lib/sanitizer_common/sanitizer_win.cc	/^bool MemoryRangeIsAvailable(uptr range_start, uptr range_end) {$/;"	f	namespace:__sanitizer
MemoryRangeSet	lib/tsan/rtl/tsan_rtl.cc	/^static void MemoryRangeSet(ThreadState *thr, uptr pc, uptr addr, uptr size,$/;"	f	namespace:__tsan
MemoryRead	lib/tsan/rtl/tsan_rtl.h	/^void ALWAYS_INLINE MemoryRead(ThreadState *thr, uptr pc,$/;"	f	namespace:__tsan
MemoryReadAtomic	lib/tsan/rtl/tsan_rtl.h	/^void ALWAYS_INLINE MemoryReadAtomic(ThreadState *thr, uptr pc,$/;"	f	namespace:__tsan
MemoryResetRange	lib/tsan/rtl/tsan_rtl.cc	/^void MemoryResetRange(ThreadState *thr, uptr pc, uptr addr, uptr size) {$/;"	f	namespace:__tsan
MemorySanitizerIpTest	lib/msan/tests/msan_test.cc	/^class MemorySanitizerIpTest : public ::testing::TestWithParam<int> {$/;"	c	file:
MemoryWrite	lib/tsan/rtl/tsan_rtl.h	/^void ALWAYS_INLINE MemoryWrite(ThreadState *thr, uptr pc,$/;"	f	namespace:__tsan
MemoryWriteAtomic	lib/tsan/rtl/tsan_rtl.h	/^void ALWAYS_INLINE MemoryWriteAtomic(ThreadState *thr, uptr pc,$/;"	f	namespace:__tsan
Memset	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^void ScopedThread::Memset(void *dst, int val, int size,$/;"	f	class:ScopedThread
Merge	lib/fuzzer/FuzzerMerge.cpp	/^size_t Merger::Merge(const Set<uint32_t> &InitialFeatures,$/;"	f	class:fuzzer::Merger
Merge	lib/fuzzer/FuzzerMerge.h	/^  size_t Merge(Vector<std::string> *NewFiles) {$/;"	f	struct:fuzzer::Merger
Merge	lib/fuzzer/scripts/merge_data_flow.py	/^def Merge(a, b):$/;"	f
Merge	lib/fuzzer/tests/FuzzerUnittest.cpp	/^static void Merge(const std::string &Input,$/;"	f	file:
Merge	lib/sanitizer_common/scripts/sancov.py	/^def Merge(files):$/;"	f
MergeAndPrint	lib/sanitizer_common/scripts/sancov.py	/^def MergeAndPrint(files):$/;"	f
MergeBatches	lib/sanitizer_common/sanitizer_quarantine.h	/^  void MergeBatches(QuarantineCache *to_deallocate) {$/;"	f	class:__sanitizer::QuarantineCache
MergeFileInfo	lib/fuzzer/FuzzerMerge.h	/^struct MergeFileInfo {$/;"	s	namespace:fuzzer
MergeFrom	lib/asan/asan_stats.cc	/^void AsanStats::MergeFrom(const AsanStats *stats) {$/;"	f	class:__asan::AsanStats
MergePoolSize	lib/profile/InstrProfilingFile.c	/^  unsigned MergePoolSize;$/;"	m	struct:lprofFilename	file:
MergeThreadStats	lib/asan/asan_stats.cc	/^static void MergeThreadStats(ThreadContextBase *tctx_base, void *arg) {$/;"	f	namespace:__asan
Merger	lib/fuzzer/FuzzerMerge.h	/^struct Merger {$/;"	s	namespace:fuzzer
Message	lib/ubsan/ubsan_diag.h	/^  const char *Message;$/;"	m	class:__ubsan::Diag
MetaMap	lib/tsan/rtl/tsan_sync.cc	/^MetaMap::MetaMap()$/;"	f	class:__tsan::MetaMap
MetaMap	lib/tsan/rtl/tsan_sync.h	/^class MetaMap {$/;"	c	namespace:__tsan
MetaShadowBeg	lib/tsan/rtl/tsan_platform.h	/^uptr MetaShadowBeg(void) {$/;"	f	namespace:__tsan
MetaShadowEnd	lib/tsan/rtl/tsan_platform.h	/^uptr MetaShadowEnd(void) {$/;"	f	namespace:__tsan
Metadata	lib/hwasan/hwasan_allocator.cc	/^struct Metadata {$/;"	s	namespace:__hwasan	file:
Metadata	lib/lsan/lsan_allocator.cc	/^static ChunkMetadata *Metadata(const void *p) {$/;"	f	namespace:__lsan
Metadata	lib/msan/msan_allocator.cc	/^struct Metadata {$/;"	s	namespace:__msan	file:
MetadataRecSize	lib/xray/xray_fdr_logging.cc	/^static constexpr auto MetadataRecSize = sizeof(MetadataRecord);$/;"	m	namespace:__xray	file:
MidAppMemBeg	lib/tsan/rtl/tsan_platform.h	/^uptr MidAppMemBeg(void) {$/;"	f	namespace:__tsan
MidAppMemEnd	lib/tsan/rtl/tsan_platform.h	/^uptr MidAppMemEnd(void) {$/;"	f	namespace:__tsan
Min	lib/fuzzer/FuzzerDefs.h	/^template <class T> T Min(T a, T b) { return a < b ? a : b; }$/;"	f	namespace:fuzzer
Min	lib/sanitizer_common/sanitizer_common.h	/^template<class T> T Min(T a, T b) { return a < b ? a : b; }$/;"	f	namespace:__sanitizer
MinAlignment	lib/scudo/scudo_allocator.h	/^const uptr MinAlignment = 1 << MinAlignmentLog;$/;"	m	namespace:__scudo
MinAlignmentLog	lib/scudo/scudo_allocator.h	/^const uptr MinAlignmentLog = FIRST_32_SECOND_64(3, 4);$/;"	m	namespace:__scudo
MinUnstable	lib/fuzzer/FuzzerTracePC.h	/^    MinUnstable = 1,$/;"	e	enum:fuzzer::TracePC::HandleUnstableOptions
MiniStruct	test/BlocksRuntime/small-struct.c	/^} MiniStruct;$/;"	t	typeref:struct:__anon143	file:
MinimizeCrashInput	lib/fuzzer/FuzzerDriver.cpp	/^int MinimizeCrashInput(const Vector<std::string> &Args,$/;"	f	namespace:fuzzer
MinimizeCrashInputInternalStep	lib/fuzzer/FuzzerDriver.cpp	/^int MinimizeCrashInputInternalStep(Fuzzer *F, InputCorpus *Corpus) {$/;"	f	namespace:fuzzer
MinimizeCrashLoop	lib/fuzzer/FuzzerLoop.cpp	/^void Fuzzer::MinimizeCrashLoop(const Unit &U) {$/;"	f	class:fuzzer::Fuzzer
MismatchOrNewDeleteTypeStr	lib/asan/tests/asan_test.cc	/^static string MismatchOrNewDeleteTypeStr(const string &mismatch_str) {$/;"	f	file:
MismatchStr	lib/asan/tests/asan_test.cc	/^static string MismatchStr(const string &str) {$/;"	f	file:
MmapAlignedOrDieOnFatalError	lib/sanitizer_common/sanitizer_fuchsia.cc	/^void *MmapAlignedOrDieOnFatalError(uptr size, uptr alignment,$/;"	f	namespace:__sanitizer
MmapAlignedOrDieOnFatalError	lib/sanitizer_common/sanitizer_posix.cc	/^void *MmapAlignedOrDieOnFatalError(uptr size, uptr alignment,$/;"	f	namespace:__sanitizer
MmapAlignedOrDieOnFatalError	lib/sanitizer_common/sanitizer_rtems.cc	/^void *MmapAlignedOrDieOnFatalError(uptr size, uptr alignment,$/;"	f	namespace:__sanitizer
MmapAlignedOrDieOnFatalError	lib/sanitizer_common/sanitizer_win.cc	/^void *MmapAlignedOrDieOnFatalError(uptr size, uptr alignment,$/;"	f	namespace:__sanitizer
MmapFixedImpl	lib/sanitizer_common/sanitizer_posix.cc	/^void *MmapFixedImpl(uptr fixed_addr, uptr size, bool tolerate_enomem) {$/;"	f	namespace:__sanitizer
MmapFixedNoAccess	lib/sanitizer_common/sanitizer_fuchsia.cc	/^void *MmapFixedNoAccess(uptr fixed_addr, uptr size, const char *name) {$/;"	f	namespace:__sanitizer
MmapFixedNoAccess	lib/sanitizer_common/sanitizer_posix_libcdep.cc	/^void *MmapFixedNoAccess(uptr fixed_addr, uptr size, const char *name) {$/;"	f	namespace:__sanitizer
MmapFixedNoAccess	lib/sanitizer_common/sanitizer_win.cc	/^void *MmapFixedNoAccess(uptr fixed_addr, uptr size, const char *name) {$/;"	f	namespace:__sanitizer
MmapFixedNoReserve	lib/sanitizer_common/sanitizer_posix_libcdep.cc	/^bool MmapFixedNoReserve(uptr fixed_addr, uptr size, const char *name) {$/;"	f	namespace:__sanitizer
MmapFixedNoReserve	lib/sanitizer_common/sanitizer_win.cc	/^bool MmapFixedNoReserve(uptr fixed_addr, uptr size, const char *name) {$/;"	f	namespace:__sanitizer
MmapFixedOrDie	lib/sanitizer_common/sanitizer_posix.cc	/^void *MmapFixedOrDie(uptr fixed_addr, uptr size) {$/;"	f	namespace:__sanitizer
MmapFixedOrDie	lib/sanitizer_common/sanitizer_win.cc	/^void *MmapFixedOrDie(uptr fixed_addr, uptr size) {$/;"	f	namespace:__sanitizer
MmapFixedOrDieOnFatalError	lib/sanitizer_common/sanitizer_posix.cc	/^void *MmapFixedOrDieOnFatalError(uptr fixed_addr, uptr size) {$/;"	f	namespace:__sanitizer
MmapFixedOrDieOnFatalError	lib/sanitizer_common/sanitizer_win.cc	/^void *MmapFixedOrDieOnFatalError(uptr fixed_addr, uptr size) {$/;"	f	namespace:__sanitizer
MmapNoAccess	lib/sanitizer_common/sanitizer_posix_libcdep.cc	/^void *MmapNoAccess(uptr size) {$/;"	f	namespace:__sanitizer
MmapNoAccess	lib/sanitizer_common/sanitizer_win.cc	/^void *MmapNoAccess(uptr size) {$/;"	f	namespace:__sanitizer
MmapNoReserveOrDie	lib/sanitizer_common/sanitizer_fuchsia.cc	/^void *MmapNoReserveOrDie(uptr size, const char *mem_type) {$/;"	f	namespace:__sanitizer
MmapNoReserveOrDie	lib/sanitizer_common/sanitizer_posix.cc	/^void *MmapNoReserveOrDie(uptr size, const char *mem_type) {$/;"	f	namespace:__sanitizer
MmapNoReserveOrDie	lib/sanitizer_common/sanitizer_rtems.cc	/^void *MmapNoReserveOrDie(uptr size, const char *mem_type) {$/;"	f	namespace:__sanitizer
MmapNoReserveOrDie	lib/sanitizer_common/sanitizer_win.cc	/^void *MmapNoReserveOrDie(uptr size, const char *mem_type) {$/;"	f	namespace:__sanitizer
MmapOrDie	lib/sanitizer_common/sanitizer_fuchsia.cc	/^void *MmapOrDie(uptr size, const char *mem_type, bool raw_report) {$/;"	f	namespace:__sanitizer
MmapOrDie	lib/sanitizer_common/sanitizer_posix.cc	/^void *MmapOrDie(uptr size, const char *mem_type, bool raw_report) {$/;"	f	namespace:__sanitizer
MmapOrDie	lib/sanitizer_common/sanitizer_rtems.cc	/^void *MmapOrDie(uptr size, const char *mem_type, bool raw_report) {$/;"	f	namespace:__sanitizer
MmapOrDie	lib/sanitizer_common/sanitizer_win.cc	/^void *MmapOrDie(uptr size, const char *mem_type, bool raw_report) {$/;"	f	namespace:__sanitizer
MmapOrDieOnFatalError	lib/sanitizer_common/sanitizer_fuchsia.cc	/^void *MmapOrDieOnFatalError(uptr size, const char *mem_type) {$/;"	f	namespace:__sanitizer
MmapOrDieOnFatalError	lib/sanitizer_common/sanitizer_posix.cc	/^void *MmapOrDieOnFatalError(uptr size, const char *mem_type) {$/;"	f	namespace:__sanitizer
MmapOrDieOnFatalError	lib/sanitizer_common/sanitizer_rtems.cc	/^void *MmapOrDieOnFatalError(uptr size, const char *mem_type) {$/;"	f	namespace:__sanitizer
MmapOrDieOnFatalError	lib/sanitizer_common/sanitizer_win.cc	/^void *MmapOrDieOnFatalError(uptr size, const char *mem_type) {$/;"	f	namespace:__sanitizer
MmapOrDieQuietly	lib/sanitizer_common/sanitizer_common.h	/^INLINE void *MmapOrDieQuietly(uptr size, const char *mem_type) {$/;"	f	namespace:__sanitizer
Mode	lib/xray/xray_log_interface.cc	/^  const char *Mode;$/;"	m	struct:__xray::ModeImpl	file:
ModeImpl	lib/xray/xray_log_interface.cc	/^struct ModeImpl {$/;"	s	namespace:__xray	file:
ModeImpls	lib/xray/xray_log_interface.cc	/^static ModeImpl *ModeImpls = &SentinelModeImpl;$/;"	m	namespace:__xray	file:
Module	lib/fuzzer/FuzzerTracePC.h	/^  struct Module {$/;"	s	class:fuzzer::TracePC
ModuleArch	lib/sanitizer_common/sanitizer_common.h	/^enum ModuleArch {$/;"	g	namespace:__sanitizer
ModuleArchFromCpuType	lib/sanitizer_common/sanitizer_procmaps_mac.cc	/^ModuleArch ModuleArchFromCpuType(cpu_type_t cputype, cpu_subtype_t cpusubtype) {$/;"	f	namespace:__sanitizer
ModuleArchToString	lib/sanitizer_common/sanitizer_common.h	/^inline const char *ModuleArchToString(ModuleArch arch) {$/;"	f	namespace:__sanitizer
ModuleCounters	lib/fuzzer/FuzzerTracePC.h	/^  struct { uint8_t *Start, *Stop; } ModuleCounters[4096];$/;"	m	class:fuzzer::TracePC	typeref:struct:fuzzer::TracePC::__anon33
ModuleInfo	lib/sanitizer_common/sanitizer_win.cc	/^struct ModuleInfo {$/;"	s	namespace:__sanitizer::__anon76	file:
ModuleNameOwner	lib/sanitizer_common/sanitizer_symbolizer.h	/^    explicit ModuleNameOwner(BlockingMutex *synchronized_by)$/;"	f	class:__sanitizer::final::ModuleNameOwner
ModuleNameOwner	lib/sanitizer_common/sanitizer_symbolizer.h	/^  class ModuleNameOwner {$/;"	c	class:__sanitizer::final
ModulePCTable	lib/fuzzer/FuzzerTracePC.h	/^  struct { const PCTableEntry *Start, *Stop; } ModulePCTable[4096];$/;"	m	class:fuzzer::TracePC	typeref:struct:fuzzer::TracePC::__anon34
Modules	lib/fuzzer/FuzzerTracePC.h	/^  Module Modules[4096];$/;"	m	class:fuzzer::TracePC
ModuloNumberOfFrames	lib/asan/asan_fake_stack.h	/^  static uptr ModuloNumberOfFrames(uptr stack_size_log, uptr class_id, uptr n) {$/;"	f	class:__asan::FakeStack
MonotonicNanoTime	lib/sanitizer_common/sanitizer_fuchsia.cc	/^u64 MonotonicNanoTime() { return _zx_clock_get(ZX_CLOCK_MONOTONIC); }$/;"	f	namespace:__sanitizer
MonotonicNanoTime	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^u64 MonotonicNanoTime() {$/;"	f	namespace:__sanitizer
MonotonicNanoTime	lib/sanitizer_common/sanitizer_mac.cc	/^u64 MonotonicNanoTime() {$/;"	f	namespace:__sanitizer
MonotonicNanoTime	lib/sanitizer_common/sanitizer_win.cc	/^u64 MonotonicNanoTime() { return NanoTime(); }$/;"	f	namespace:__sanitizer
MopDesc	lib/tsan/rtl/tsan_report.cc	/^static const char *MopDesc(bool first, bool write, bool atomic) {$/;"	f	namespace:__tsan
MostDerivedTypeName	lib/ubsan/ubsan_type_hash.h	/^  const char *MostDerivedTypeName;$/;"	m	class:__ubsan::DynamicTypeInfo
MostSignificantSetBitIndex	lib/sanitizer_common/sanitizer_common.h	/^INLINE uptr MostSignificantSetBitIndex(uptr x) {$/;"	f	namespace:__sanitizer
MovR10Seq	lib/xray/xray_x86_64.cc	/^static constexpr uint16_t MovR10Seq = 0xba41;$/;"	m	namespace:__xray	file:
MoveMemory	lib/tsan/rtl/tsan_sync.cc	/^void MetaMap::MoveMemory(uptr src, uptr dst, uptr sz) {$/;"	f	class:__tsan::MetaMap
MoveShadowAndOrigin	lib/msan/msan_poisoning.cc	/^void MoveShadowAndOrigin(const void *dst, const void *src, uptr size,$/;"	f	namespace:__msan
MprotectMallocZones	lib/sanitizer_common/sanitizer_mac.cc	/^void MprotectMallocZones(void *addr, int prot) {$/;"	f	namespace:__sanitizer
MprotectMallocZones	lib/sanitizer_common/sanitizer_posix.cc	/^void MprotectMallocZones(void *addr, int prot) {}$/;"	f	namespace:__sanitizer
MprotectNoAccess	lib/sanitizer_common/sanitizer_posix.cc	/^bool MprotectNoAccess(uptr addr, uptr size) {$/;"	f	namespace:__sanitizer
MprotectNoAccess	lib/sanitizer_common/sanitizer_win.cc	/^bool MprotectNoAccess(uptr addr, uptr size) {$/;"	f	namespace:__sanitizer
MprotectReadOnly	lib/sanitizer_common/sanitizer_posix.cc	/^bool MprotectReadOnly(uptr addr, uptr size) {$/;"	f	namespace:__sanitizer
MsanAllocate	lib/msan/msan_allocator.cc	/^static void *MsanAllocate(StackTrace *stack, uptr size, uptr alignment,$/;"	f	namespace:__msan
MsanAllocatorInit	lib/msan/msan_allocator.cc	/^void MsanAllocatorInit() {$/;"	f	namespace:__msan
MsanAtExit	lib/msan/msan_linux.cc	/^static void MsanAtExit(void) {$/;"	f	namespace:__msan
MsanCalloc	lib/msan/msan_allocator.cc	/^void *MsanCalloc(StackTrace *stack, uptr nmemb, uptr size) {$/;"	f	namespace:__msan
MsanCheckFailed	lib/msan/msan.cc	/^static void MsanCheckFailed(const char *file, int line, const char *cond,$/;"	f	file:
MsanDeallocate	lib/msan/msan_allocator.cc	/^void MsanDeallocate(StackTrace *stack, void *p) {$/;"	f	namespace:__msan
MsanMapUnmapCallback	lib/msan/msan_allocator.cc	/^struct MsanMapUnmapCallback {$/;"	s	namespace:__msan	file:
MsanOnDeadlySignal	lib/msan/msan.cc	/^static void MsanOnDeadlySignal(int signo, void *siginfo, void *context) {$/;"	f	file:
MsanReallocate	lib/msan/msan_allocator.cc	/^void *MsanReallocate(StackTrace *stack, void *old_p, uptr new_size,$/;"	f	namespace:__msan
MsanTSDDtor	lib/msan/msan_linux.cc	/^void MsanTSDDtor(void *tsd) {$/;"	f	namespace:__msan
MsanTSDInit	lib/msan/msan_linux.cc	/^void MsanTSDInit(void (*destructor)(void *tsd)) {$/;"	f	namespace:__msan
MsanThread	lib/msan/msan_thread.h	/^class MsanThread {$/;"	c	namespace:__msan
MsanThreadLocalMallocStorage	lib/msan/msan_allocator.h	/^  MsanThreadLocalMallocStorage() {}$/;"	f	struct:__msan::MsanThreadLocalMallocStorage
MsanThreadLocalMallocStorage	lib/msan/msan_allocator.h	/^struct MsanThreadLocalMallocStorage {$/;"	s	namespace:__msan
MsanThreadStartFunc	lib/msan/msan_interceptors.cc	/^static void *MsanThreadStartFunc(void *arg) {$/;"	f	file:
Mtx	test/tsan/race_on_mutex.c	/^pthread_mutex_t Mtx;$/;"	v
MtxLocked	lib/sanitizer_common/sanitizer_linux.cc	/^  MtxLocked = 1,$/;"	e	enum:__sanitizer::MutexState	file:
MtxLocked	lib/sanitizer_common/sanitizer_rtems.cc	/^enum MutexState { MtxUnlocked = 0, MtxLocked = 1, MtxSleeping = 2 };$/;"	e	enum:__sanitizer::MutexState	file:
MtxSleeping	lib/sanitizer_common/sanitizer_linux.cc	/^  MtxSleeping = 2$/;"	e	enum:__sanitizer::MutexState	file:
MtxSleeping	lib/sanitizer_common/sanitizer_rtems.cc	/^enum MutexState { MtxUnlocked = 0, MtxLocked = 1, MtxSleeping = 2 };$/;"	e	enum:__sanitizer::MutexState	file:
MtxUnlocked	lib/sanitizer_common/sanitizer_linux.cc	/^  MtxUnlocked = 0,$/;"	e	enum:__sanitizer::MutexState	file:
MtxUnlocked	lib/sanitizer_common/sanitizer_rtems.cc	/^enum MutexState { MtxUnlocked = 0, MtxLocked = 1, MtxSleeping = 2 };$/;"	e	enum:__sanitizer::MutexState	file:
Mu	lib/fuzzer/FuzzerDriver.cpp	/^static std::mutex Mu;$/;"	m	namespace:fuzzer	file:
MustCleanup	lib/xray/xray_interface.cc	/^        MustCleanup(false) {}$/;"	f	class:__xray::MProtectHelper
MustCleanup	lib/xray/xray_interface.cc	/^  bool MustCleanup;$/;"	m	class:__xray::MProtectHelper	file:
Mutate	lib/fuzzer/FuzzerMutate.cpp	/^size_t MutationDispatcher::Mutate(uint8_t *Data, size_t Size, size_t MaxSize) {$/;"	f	class:fuzzer::MutationDispatcher
MutateAndTestOne	lib/fuzzer/FuzzerLoop.cpp	/^void Fuzzer::MutateAndTestOne() {$/;"	f	class:fuzzer::Fuzzer
MutateDepth	lib/fuzzer/FuzzerOptions.h	/^  int MutateDepth = 5;$/;"	m	struct:fuzzer::FuzzingOptions
MutateImpl	lib/fuzzer/FuzzerMutate.cpp	/^size_t MutationDispatcher::MutateImpl(uint8_t *Data, size_t Size,$/;"	f	class:fuzzer::MutationDispatcher
MutateInPlaceHere	lib/fuzzer/FuzzerMutate.h	/^  Vector<uint8_t> MutateInPlaceHere;$/;"	m	class:fuzzer::MutationDispatcher
MutateWithMask	lib/fuzzer/FuzzerMutate.cpp	/^size_t MutationDispatcher::MutateWithMask(uint8_t *Data, size_t Size,$/;"	f	class:fuzzer::MutationDispatcher
MutateWithMaskTemp	lib/fuzzer/FuzzerMutate.h	/^  Vector<uint8_t> MutateWithMaskTemp;$/;"	m	class:fuzzer::MutationDispatcher
Mutate_AddWordFromManualDictionary	lib/fuzzer/FuzzerMutate.cpp	/^size_t MutationDispatcher::Mutate_AddWordFromManualDictionary(uint8_t *Data,$/;"	f	class:fuzzer::MutationDispatcher
Mutate_AddWordFromPersistentAutoDictionary	lib/fuzzer/FuzzerMutate.cpp	/^size_t MutationDispatcher::Mutate_AddWordFromPersistentAutoDictionary($/;"	f	class:fuzzer::MutationDispatcher
Mutate_AddWordFromTORC	lib/fuzzer/FuzzerMutate.cpp	/^size_t MutationDispatcher::Mutate_AddWordFromTORC($/;"	f	class:fuzzer::MutationDispatcher
Mutate_ChangeASCIIInteger	lib/fuzzer/FuzzerMutate.cpp	/^size_t MutationDispatcher::Mutate_ChangeASCIIInteger(uint8_t *Data, size_t Size,$/;"	f	class:fuzzer::MutationDispatcher
Mutate_ChangeBinaryInteger	lib/fuzzer/FuzzerMutate.cpp	/^size_t MutationDispatcher::Mutate_ChangeBinaryInteger(uint8_t *Data,$/;"	f	class:fuzzer::MutationDispatcher
Mutate_ChangeBit	lib/fuzzer/FuzzerMutate.cpp	/^size_t MutationDispatcher::Mutate_ChangeBit(uint8_t *Data, size_t Size,$/;"	f	class:fuzzer::MutationDispatcher
Mutate_ChangeByte	lib/fuzzer/FuzzerMutate.cpp	/^size_t MutationDispatcher::Mutate_ChangeByte(uint8_t *Data, size_t Size,$/;"	f	class:fuzzer::MutationDispatcher
Mutate_CopyPart	lib/fuzzer/FuzzerMutate.cpp	/^size_t MutationDispatcher::Mutate_CopyPart(uint8_t *Data, size_t Size,$/;"	f	class:fuzzer::MutationDispatcher
Mutate_CrossOver	lib/fuzzer/FuzzerMutate.cpp	/^size_t MutationDispatcher::Mutate_CrossOver(uint8_t *Data, size_t Size,$/;"	f	class:fuzzer::MutationDispatcher
Mutate_Custom	lib/fuzzer/FuzzerMutate.cpp	/^size_t MutationDispatcher::Mutate_Custom(uint8_t *Data, size_t Size,$/;"	f	class:fuzzer::MutationDispatcher
Mutate_CustomCrossOver	lib/fuzzer/FuzzerMutate.cpp	/^size_t MutationDispatcher::Mutate_CustomCrossOver(uint8_t *Data, size_t Size,$/;"	f	class:fuzzer::MutationDispatcher
Mutate_EraseBytes	lib/fuzzer/FuzzerMutate.cpp	/^size_t MutationDispatcher::Mutate_EraseBytes(uint8_t *Data, size_t Size,$/;"	f	class:fuzzer::MutationDispatcher
Mutate_InsertByte	lib/fuzzer/FuzzerMutate.cpp	/^size_t MutationDispatcher::Mutate_InsertByte(uint8_t *Data, size_t Size,$/;"	f	class:fuzzer::MutationDispatcher
Mutate_InsertRepeatedBytes	lib/fuzzer/FuzzerMutate.cpp	/^size_t MutationDispatcher::Mutate_InsertRepeatedBytes(uint8_t *Data,$/;"	f	class:fuzzer::MutationDispatcher
Mutate_ShuffleBytes	lib/fuzzer/FuzzerMutate.cpp	/^size_t MutationDispatcher::Mutate_ShuffleBytes(uint8_t *Data, size_t Size,$/;"	f	class:fuzzer::MutationDispatcher
MutationDispatcher	lib/fuzzer/FuzzerMutate.cpp	/^MutationDispatcher::MutationDispatcher(Random &Rand,$/;"	f	class:fuzzer::MutationDispatcher
MutationDispatcher	lib/fuzzer/FuzzerMutate.h	/^class MutationDispatcher {$/;"	c	namespace:fuzzer
Mutator	lib/fuzzer/FuzzerMutate.h	/^  struct Mutator {$/;"	s	class:fuzzer::MutationDispatcher
Mutator	lib/fuzzer/tests/FuzzerUnittest.cpp	/^typedef size_t (MutationDispatcher::*Mutator)(uint8_t *Data, size_t Size,$/;"	t	file:
Mutators	lib/fuzzer/FuzzerMutate.h	/^  Vector<Mutator> Mutators;$/;"	m	class:fuzzer::MutationDispatcher
Mutex	lib/esan/esan_hashtable.h	/^  BlockingMutex Mutex;$/;"	m	class:__esan::HashTable
Mutex	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^struct Mutex {$/;"	s	namespace:__sanitizer	file:
Mutex	lib/tsan/benchmarks/vts_many_threads_bench.cc	/^  Mutex()  { pthread_mutex_init(&m_, NULL); }$/;"	f	class:Mutex
Mutex	lib/tsan/benchmarks/vts_many_threads_bench.cc	/^class __attribute__((aligned(64))) Mutex {$/;"	c	file:
Mutex	lib/tsan/dd/dd_rtl.h	/^struct Mutex {$/;"	s	namespace:__dsan
Mutex	lib/tsan/rtl/tsan_mutex.cc	/^Mutex::Mutex(MutexType type, StatType stat_type) {$/;"	f	class:__tsan::Mutex
Mutex	lib/tsan/rtl/tsan_mutex.h	/^class Mutex {$/;"	c	namespace:__tsan
Mutex	lib/tsan/rtl/tsan_report.cc	/^  const char *Mutex()   { return Magenta(); }$/;"	f	class:__tsan::Decorator
Mutex	lib/tsan/tests/rtl/tsan_test_util.h	/^class Mutex {$/;"	c
Mutex	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^Mutex::Mutex(Type type)$/;"	f	class:Mutex
Mutex	lib/xray/xray_buffer_queue.h	/^  SpinMutex Mutex;$/;"	m	class:__xray::BufferQueue
Mutex	test/tsan/custom_mutex.h	/^  Mutex(bool prof, unsigned create_flags, unsigned destroy_flags=0)$/;"	f	class:Mutex
Mutex	test/tsan/custom_mutex.h	/^class Mutex {$/;"	c
Mutex	test/tsan/ignore_sync.cc	/^pthread_mutex_t Mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v
Mutex	test/tsan/mutex_annotations.cc	/^class Mutex {$/;"	c	file:
Mutex	test/tsan/real_deadlock_detector_stress_test.cc	/^struct Mutex {$/;"	s	file:
MutexAfterLock	lib/sanitizer_common/sanitizer_deadlock_detector1.cc	/^void DD::MutexAfterLock(DDCallback *cb, DDMutex *m, bool wlock, bool trylock) {$/;"	f	class:__sanitizer::DD
MutexAfterLock	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^void DD::MutexAfterLock(DDCallback *cb, DDMutex *m, bool wlock,$/;"	f	class:__sanitizer::DD
MutexAfterLock	lib/sanitizer_common/sanitizer_deadlock_detector_interface.h	/^  virtual void MutexAfterLock(DDCallback *cb, DDMutex *m, bool wlock,$/;"	f	struct:__sanitizer::DDetector
MutexAfterLock	lib/tsan/dd/dd_rtl.cc	/^void MutexAfterLock(Thread *thr, uptr m, bool writelock, bool trylock) {$/;"	f	namespace:__dsan
MutexBeforeLock	lib/sanitizer_common/sanitizer_deadlock_detector1.cc	/^void DD::MutexBeforeLock(DDCallback *cb,$/;"	f	class:__sanitizer::DD
MutexBeforeLock	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^void DD::MutexBeforeLock(DDCallback *cb, DDMutex *m, bool wlock) {$/;"	f	class:__sanitizer::DD
MutexBeforeLock	lib/sanitizer_common/sanitizer_deadlock_detector_interface.h	/^  virtual void MutexBeforeLock(DDCallback *cb, DDMutex *m, bool wlock) {}$/;"	f	struct:__sanitizer::DDetector
MutexBeforeLock	lib/tsan/dd/dd_rtl.cc	/^void MutexBeforeLock(Thread *thr, uptr m, bool writelock) {$/;"	f	namespace:__dsan
MutexBeforeUnlock	lib/sanitizer_common/sanitizer_deadlock_detector1.cc	/^void DD::MutexBeforeUnlock(DDCallback *cb, DDMutex *m, bool wlock) {$/;"	f	class:__sanitizer::DD
MutexBeforeUnlock	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^void DD::MutexBeforeUnlock(DDCallback *cb, DDMutex *m, bool wlock) {$/;"	f	class:__sanitizer::DD
MutexBeforeUnlock	lib/sanitizer_common/sanitizer_deadlock_detector_interface.h	/^  virtual void MutexBeforeUnlock(DDCallback *cb, DDMutex *m, bool wlock) {}$/;"	f	struct:__sanitizer::DDetector
MutexBeforeUnlock	lib/tsan/dd/dd_rtl.cc	/^void MutexBeforeUnlock(Thread *thr, uptr m, bool writelock) {$/;"	f	namespace:__dsan
MutexCreate	lib/tsan/rtl/tsan_rtl_mutex.cc	/^void MutexCreate(ThreadState *thr, uptr pc, uptr addr, u32 flagz) {$/;"	f	namespace:__tsan
MutexCreationFlagMask	lib/tsan/rtl/tsan_sync.h	/^  MutexCreationFlagMask        = MutexFlagLinkerInit |$/;"	e	enum:__tsan::MutexFlags
MutexDestroy	lib/sanitizer_common/sanitizer_deadlock_detector1.cc	/^void DD::MutexDestroy(DDCallback *cb,$/;"	f	class:__sanitizer::DD
MutexDestroy	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^void DD::MutexDestroy(DDCallback *cb, DDMutex *m) {$/;"	f	class:__sanitizer::DD
MutexDestroy	lib/sanitizer_common/sanitizer_deadlock_detector_interface.h	/^  virtual void MutexDestroy(DDCallback *cb, DDMutex *m) {}$/;"	f	struct:__sanitizer::DDetector
MutexDestroy	lib/tsan/dd/dd_rtl.cc	/^void MutexDestroy(Thread *thr, uptr m) {$/;"	f	namespace:__dsan
MutexDestroy	lib/tsan/rtl/tsan_rtl_mutex.cc	/^void MutexDestroy(ThreadState *thr, uptr pc, uptr addr, u32 flagz) {$/;"	f	namespace:__tsan
MutexEnsureID	lib/sanitizer_common/sanitizer_deadlock_detector1.cc	/^void DD::MutexEnsureID(DDLogicalThread *lt, DDMutex *m) {$/;"	f	class:__sanitizer::DD
MutexFlagBroken	lib/tsan/rtl/tsan_sync.h	/^  MutexFlagBroken              = 1 << 30,$/;"	e	enum:__tsan::MutexFlags
MutexFlagDoPreLockOnPostLock	lib/tsan/rtl/tsan_sync.h	/^  MutexFlagDoPreLockOnPostLock = 1 << 29,$/;"	e	enum:__tsan::MutexFlags
MutexFlagLinkerInit	lib/tsan/rtl/tsan_sync.h	/^  MutexFlagLinkerInit          = 1 << 0, \/\/ __tsan_mutex_linker_init$/;"	e	enum:__tsan::MutexFlags
MutexFlagNotStatic	lib/tsan/rtl/tsan_sync.h	/^  MutexFlagNotStatic           = 1 << 8, \/\/ __tsan_mutex_not_static$/;"	e	enum:__tsan::MutexFlags
MutexFlagReadLock	lib/tsan/rtl/tsan_sync.h	/^  MutexFlagReadLock            = 1 << 3, \/\/ __tsan_mutex_read_lock$/;"	e	enum:__tsan::MutexFlags
MutexFlagReadReentrant	lib/tsan/rtl/tsan_sync.h	/^  MutexFlagReadReentrant       = 1 << 2, \/\/ __tsan_mutex_read_reentrant$/;"	e	enum:__tsan::MutexFlags
MutexFlagRecursiveLock	lib/tsan/rtl/tsan_sync.h	/^  MutexFlagRecursiveLock       = 1 << 6, \/\/ __tsan_mutex_recursive_lock$/;"	e	enum:__tsan::MutexFlags
MutexFlagRecursiveUnlock	lib/tsan/rtl/tsan_sync.h	/^  MutexFlagRecursiveUnlock     = 1 << 7, \/\/ __tsan_mutex_recursive_unlock$/;"	e	enum:__tsan::MutexFlags
MutexFlagTryLock	lib/tsan/rtl/tsan_sync.h	/^  MutexFlagTryLock             = 1 << 4, \/\/ __tsan_mutex_try_lock$/;"	e	enum:__tsan::MutexFlags
MutexFlagTryLockFailed	lib/tsan/rtl/tsan_sync.h	/^  MutexFlagTryLockFailed       = 1 << 5, \/\/ __tsan_mutex_try_lock_failed$/;"	e	enum:__tsan::MutexFlags
MutexFlagWriteReentrant	lib/tsan/rtl/tsan_sync.h	/^  MutexFlagWriteReentrant      = 1 << 1, \/\/ __tsan_mutex_write_reentrant$/;"	e	enum:__tsan::MutexFlags
MutexFlags	lib/tsan/rtl/tsan_sync.h	/^enum MutexFlags {$/;"	g	namespace:__tsan
MutexHashMap	lib/tsan/dd/dd_rtl.h	/^typedef AddrHashMap<Mutex, 31051> MutexHashMap;$/;"	t	namespace:__dsan
MutexInit	lib/sanitizer_common/sanitizer_deadlock_detector1.cc	/^void DD::MutexInit(DDCallback *cb, DDMutex *m) {$/;"	f	class:__sanitizer::DD
MutexInit	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^void DD::MutexInit(DDCallback *cb, DDMutex *m) {$/;"	f	class:__sanitizer::DD
MutexInit	lib/sanitizer_common/sanitizer_deadlock_detector_interface.h	/^  virtual void MutexInit(DDCallback *cb, DDMutex *m) {}$/;"	f	struct:__sanitizer::DDetector
MutexInvalidAccess	lib/tsan/rtl/tsan_rtl_mutex.cc	/^void MutexInvalidAccess(ThreadState *thr, uptr pc, uptr addr) {$/;"	f	namespace:__tsan
MutexPostLock	lib/tsan/rtl/tsan_rtl_mutex.cc	/^void MutexPostLock(ThreadState *thr, uptr pc, uptr addr, u32 flagz, int rec) {$/;"	f	namespace:__tsan
MutexPostReadLock	lib/tsan/rtl/tsan_rtl_mutex.cc	/^void MutexPostReadLock(ThreadState *thr, uptr pc, uptr addr, u32 flagz) {$/;"	f	namespace:__tsan
MutexPreLock	lib/tsan/rtl/tsan_rtl_mutex.cc	/^void MutexPreLock(ThreadState *thr, uptr pc, uptr addr, u32 flagz) {$/;"	f	namespace:__tsan
MutexPreReadLock	lib/tsan/rtl/tsan_rtl_mutex.cc	/^void MutexPreReadLock(ThreadState *thr, uptr pc, uptr addr, u32 flagz) {$/;"	f	namespace:__tsan
MutexReadOrWriteUnlock	lib/tsan/rtl/tsan_rtl_mutex.cc	/^void MutexReadOrWriteUnlock(ThreadState *thr, uptr pc, uptr addr) {$/;"	f	namespace:__tsan
MutexReadUnlock	lib/tsan/rtl/tsan_rtl_mutex.cc	/^void MutexReadUnlock(ThreadState *thr, uptr pc, uptr addr) {$/;"	f	namespace:__tsan
MutexRepair	lib/tsan/rtl/tsan_rtl_mutex.cc	/^void MutexRepair(ThreadState *thr, uptr pc, uptr addr) {$/;"	f	namespace:__tsan
MutexSet	lib/tsan/rtl/tsan_mutexset.cc	/^MutexSet::MutexSet() {$/;"	f	class:__tsan::MutexSet
MutexSet	lib/tsan/rtl/tsan_mutexset.h	/^MutexSet::MutexSet() {}$/;"	f	class:__tsan::MutexSet
MutexSet	lib/tsan/rtl/tsan_mutexset.h	/^class MutexSet {$/;"	c	namespace:__tsan
MutexState	lib/sanitizer_common/sanitizer_linux.cc	/^enum MutexState {$/;"	g	namespace:__sanitizer	file:
MutexState	lib/sanitizer_common/sanitizer_rtems.cc	/^enum MutexState { MtxUnlocked = 0, MtxLocked = 1, MtxSleeping = 2 };$/;"	g	namespace:__sanitizer	file:
MutexType	lib/tsan/rtl/tsan_mutex.h	/^enum MutexType {$/;"	g	namespace:__tsan
MutexTypeAnnotations	lib/tsan/rtl/tsan_mutex.h	/^  MutexTypeAnnotations,$/;"	e	enum:__tsan::MutexType
MutexTypeAtExit	lib/tsan/rtl/tsan_mutex.h	/^  MutexTypeAtExit,$/;"	e	enum:__tsan::MutexType
MutexTypeCount	lib/tsan/rtl/tsan_mutex.h	/^  MutexTypeCount$/;"	e	enum:__tsan::MutexType
MutexTypeDDetector	lib/tsan/rtl/tsan_mutex.h	/^  MutexTypeDDetector,$/;"	e	enum:__tsan::MutexType
MutexTypeFired	lib/tsan/rtl/tsan_mutex.h	/^  MutexTypeFired,$/;"	e	enum:__tsan::MutexType
MutexTypeGlobalProc	lib/tsan/rtl/tsan_mutex.h	/^  MutexTypeGlobalProc,$/;"	e	enum:__tsan::MutexType
MutexTypeInvalid	lib/tsan/rtl/tsan_mutex.h	/^  MutexTypeInvalid,$/;"	e	enum:__tsan::MutexType
MutexTypeJavaMBlock	lib/tsan/rtl/tsan_mutex.h	/^  MutexTypeJavaMBlock,$/;"	e	enum:__tsan::MutexType
MutexTypeLeaf	lib/tsan/rtl/tsan_mutex.cc	/^const MutexType MutexTypeLeaf = (MutexType)-1;$/;"	m	namespace:__tsan	file:
MutexTypeMBlock	lib/tsan/rtl/tsan_mutex.h	/^  MutexTypeMBlock,$/;"	e	enum:__tsan::MutexType
MutexTypeRacy	lib/tsan/rtl/tsan_mutex.h	/^  MutexTypeRacy,$/;"	e	enum:__tsan::MutexType
MutexTypeReport	lib/tsan/rtl/tsan_mutex.h	/^  MutexTypeReport,$/;"	e	enum:__tsan::MutexType
MutexTypeSlab	lib/tsan/rtl/tsan_mutex.h	/^  MutexTypeSlab,$/;"	e	enum:__tsan::MutexType
MutexTypeSyncTab	lib/tsan/rtl/tsan_mutex.h	/^  MutexTypeSyncTab,$/;"	e	enum:__tsan::MutexType
MutexTypeSyncVar	lib/tsan/rtl/tsan_mutex.h	/^  MutexTypeSyncVar,$/;"	e	enum:__tsan::MutexType
MutexTypeThreads	lib/tsan/rtl/tsan_mutex.h	/^  MutexTypeThreads,$/;"	e	enum:__tsan::MutexType
MutexTypeTrace	lib/tsan/rtl/tsan_mutex.h	/^  MutexTypeTrace,$/;"	e	enum:__tsan::MutexType
MutexUnlock	lib/tsan/rtl/tsan_rtl_mutex.cc	/^int MutexUnlock(ThreadState *thr, uptr pc, uptr addr, u32 flagz) {$/;"	f	namespace:__tsan
MyClass	test/asan/TestCases/Darwin/dladdr-demangling.cc	/^class MyClass {$/;"	c	file:
MyClass	test/asan/TestCases/Darwin/scribble.cc	/^struct MyClass {$/;"	s	file:
MyData	test/esan/Unit/hashtable.cpp	/^  MyData(const char *Str) : RefCount(0) { Buf = strdup(Str); }$/;"	f	class:MyData
MyData	test/esan/Unit/hashtable.cpp	/^class MyData {$/;"	c	file:
MyDataPayload	test/esan/Unit/hashtable.cpp	/^  MyDataPayload() : Data(nullptr) {}$/;"	f	struct:MyDataPayload
MyDataPayload	test/esan/Unit/hashtable.cpp	/^  MyDataPayload(const MyDataPayload &Copy) {$/;"	f	struct:MyDataPayload
MyDataPayload	test/esan/Unit/hashtable.cpp	/^  explicit MyDataPayload(MyData *Data) : Data(Data) { ++Data->RefCount; }$/;"	f	struct:MyDataPayload
MyDataPayload	test/esan/Unit/hashtable.cpp	/^struct MyDataPayload {$/;"	s	file:
MyDeathCallback	lib/asan/tests/asan_interface_test.cc	/^static void MyDeathCallback() {$/;"	f	file:
MyHandler	test/tsan/signal_errno.cc	/^static void MyHandler(int, siginfo_t *s, void *c) {$/;"	f	file:
MyMatch	lib/sanitizer_common/tests/sanitizer_suppressions_test.cc	/^static bool MyMatch(const char *templ, const char *func) {$/;"	f	namespace:__sanitizer
MyObject	test/tsan/Darwin/external-lib.cc	/^struct MyObject {$/;"	s	file:
MyObjectRef	test/tsan/Darwin/external-lib.cc	/^typedef MyObject *MyObjectRef;$/;"	t	file:
MyObjectRef	test/tsan/Darwin/external-noninstrumented-module.cc	/^typedef MyObject *MyObjectRef;$/;"	t	file:
MyObjectRef	test/tsan/Darwin/external.cc	/^typedef MyObject *MyObjectRef;$/;"	t	file:
MyQsort	test/asan/TestCases/Linux/malloc-in-qsort.cc	/^void MyQsort(char *a, size_t size) {$/;"	f
MyQsort	test/asan/TestCases/Linux/overflow-in-qsort.cc	/^void MyQsort(char *a, size_t size) {$/;"	f
MySleep	test/tsan/sleep_sync.cc	/^void MySleep() {$/;"	f
MyStol	lib/fuzzer/FuzzerDriver.cpp	/^static long MyStol(const char *Str) {$/;"	f	namespace:fuzzer
MyStruct	test/BlocksRuntime/josh.C	/^struct MyStruct {$/;"	s	file:
MyStruct	test/BlocksRuntime/objectRRGC.c	/^struct MyStruct {$/;"	s	file:
MyStruct	test/BlocksRuntime/objectassign.c	/^struct MyStruct {$/;"	s	file:
MyStruct_t	test/BlocksRuntime/objectRRGC.c	/^typedef struct MyStruct *__attribute__((NSObject)) MyStruct_t;$/;"	t	typeref:struct:MyStruct	file:
MyStruct_t	test/BlocksRuntime/objectassign.c	/^typedef struct MyStruct *__attribute__((NSObject)) MyStruct_t;$/;"	t	typeref:struct:MyStruct	file:
N	lib/asan/tests/asan_racy_double_free_test.cc	/^const int N = 1000;$/;"	v
N	test/fuzzer/OnlySomeBytesTest.cpp	/^const size_t N = 2048;$/;"	v
N	test/fuzzer/TableLookupTest.cpp	/^const size_t N = 1 << 12;$/;"	v
N	test/tsan/atexit2.cc	/^const int N = 10000;$/;"	v
N	test/tsan/deep_stack1.cc	/^volatile int N;$/;"	v
N	test/tsan/suppress_same_stacks.cc	/^volatile int N;  \/\/ Prevent loop unrolling.$/;"	v
N1	test/profile/Inputs/instrprof-visibility-helper.cpp	/^namespace N1 {$/;"	n	file:
N1	test/profile/instrprof-visibility.cpp	/^namespace N1 {$/;"	n	file:
NAIVE_LOG	include/xray/xray_records.h	/^  NAIVE_LOG = 0,$/;"	e	enum:__xray::FileTypes
NDEBUG	test/tsan/deadlock_detector_stress_test.cc	11;"	d	file:
NDEBUG	test/tsan/sigsuspend.cc	5;"	d	file:
NEED_TLS_GET_ADDR	lib/tsan/rtl/tsan_interceptors.cc	2182;"	d	file:
NEQUAL_0	test/builtins/Unit/fp_test.h	/^    LESS_0, LESS_EQUAL_0, EQUAL_0, GREATER_0, GREATER_EQUAL_0, NEQUAL_0$/;"	e	enum:EXPECTED_RESULT
NEW_EXPA	lib/builtins/hexagon/dffma.S	/^		NEW_EXPA = add(EXPA,NEW_EXPB)$/;"	d
NEW_EXPA	lib/builtins/hexagon/dffma.S	/^#define NEW_EXPA r6$/;"	d
NEW_EXPB	lib/builtins/hexagon/dffma.S	/^		NEW_EXPB = extractu(AH,#EXPBITS,#HI_MANTBITS)$/;"	d
NEW_EXPB	lib/builtins/hexagon/dffma.S	/^#define NEW_EXPB r7$/;"	d
NOEXCEPT	lib/sanitizer_common/sanitizer_internal_defs.h	250;"	d
NOEXCEPT	lib/sanitizer_common/sanitizer_internal_defs.h	252;"	d
NOGDI	lib/sanitizer_common/sanitizer_unwind_win.cc	18;"	d	file:
NOGDI	lib/sanitizer_common/sanitizer_win.cc	19;"	d	file:
NOINLINE	lib/builtins/int_lib.h	48;"	d
NOINLINE	lib/builtins/int_lib.h	53;"	d
NOINLINE	lib/msan/tests/msan_test.cc	142;"	d	file:
NOINLINE	lib/sanitizer_common/sanitizer_internal_defs.h	213;"	d
NOINLINE	lib/sanitizer_common/sanitizer_internal_defs.h	227;"	d
NOINLINE	lib/sanitizer_common/tests/sanitizer_test_utils.h	35;"	d
NOINLINE	lib/sanitizer_common/tests/sanitizer_test_utils.h	37;"	d
NOINLINE	test/asan/TestCases/stack-oob-frames.cc	7;"	d	file:
NOINLINE	test/tsan/unaligned_race.cc	5;"	d	file:
NOMINMAX	lib/sanitizer_common/tests/sanitizer_libc_test.cc	21;"	d	file:
NOMINMAX	lib/sanitizer_common/tests/sanitizer_libc_test.cc	23;"	d	file:
NORETURN	lib/builtins/int_lib.h	49;"	d
NORETURN	lib/builtins/int_lib.h	54;"	d
NORETURN	lib/sanitizer_common/sanitizer_internal_defs.h	214;"	d
NORETURN	lib/sanitizer_common/sanitizer_internal_defs.h	228;"	d
NORMAL	include/xray/xray_records.h	/^  NORMAL = 0,$/;"	e	enum:__xray::RecordTypes
NORMAL	lib/builtins/hexagon/dfaddsub.S	/^		NORMAL = dfclass(A,#2)$/;"	d
NORMAL	lib/builtins/hexagon/dfaddsub.S	/^		NORMAL = dfclass(B,#2)$/;"	d
NORMAL	lib/builtins/hexagon/dfaddsub.S	/^#define NORMAL p3$/;"	d
NORMAL	lib/builtins/hexagon/dfdiv.S	/^		NORMAL = dfclass(A,#DFCLASS_NORMAL)$/;"	d
NORMAL	lib/builtins/hexagon/dfdiv.S	/^		NORMAL = dfclass(B,#DFCLASS_NORMAL)$/;"	d
NORMAL	lib/builtins/hexagon/dfdiv.S	/^#define NORMAL p2$/;"	d
NORMAL	lib/builtins/hexagon/dfsqrt.S	/^		NORMAL = cmp.gt(AH,#-1)				\/\/ and positive?$/;"	d
NORMAL	lib/builtins/hexagon/dfsqrt.S	/^		NORMAL = dfclass(A,#DFCLASS_NORMAL)		\/\/ Is it normal$/;"	d
NORMAL	lib/builtins/hexagon/dfsqrt.S	/^#define NORMAL p2$/;"	d
NOT_HERE_BEFORE_10_6	lib/builtins/apple_versioning.c	16;"	d	file:
NOT_HERE_BEFORE_10_6	lib/builtins/apple_versioning.c	27;"	d	file:
NOT_HERE_IN_10_8_AND_EARLIER	lib/builtins/apple_versioning.c	17;"	d	file:
NOT_HERE_IN_10_8_AND_EARLIER	lib/builtins/apple_versioning.c	32;"	d	file:
NOT_HERE_UNTIL_AFTER_4_3	lib/builtins/apple_versioning.c	206;"	d	file:
NOT_INITIALIZED	include/xray/xray_interface.h	/^  NOT_INITIALIZED = 0,$/;"	e	enum:XRayPatchingStatus
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/adddf3vfp.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/addsf3.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/addsf3vfp.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/aeabi_cdcmp.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/aeabi_cfcmp.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/aeabi_dcmp.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/aeabi_fcmp.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/aeabi_idivmod.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/aeabi_ldivmod.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/aeabi_memcmp.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/aeabi_memcpy.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/aeabi_memmove.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/aeabi_memset.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/aeabi_uidivmod.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/aeabi_uldivmod.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/bswapdi2.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/bswapsi2.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/clzdi2.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/clzsi2.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/comparesf2.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/divdf3vfp.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/divmodsi4.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/divsf3vfp.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/divsi3.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/eqdf2vfp.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/eqsf2vfp.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/extendsfdf2vfp.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/fixdfsivfp.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/fixsfsivfp.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/fixunsdfsivfp.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/fixunssfsivfp.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/floatsidfvfp.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/floatsisfvfp.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/floatunssidfvfp.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/floatunssisfvfp.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/gedf2vfp.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/gesf2vfp.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/gtdf2vfp.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/gtsf2vfp.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/ledf2vfp.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/lesf2vfp.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/ltdf2vfp.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/ltsf2vfp.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/modsi3.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/muldf3vfp.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/mulsf3vfp.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/nedf2vfp.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/negdf2vfp.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/negsf2vfp.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/nesf2vfp.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/restore_vfp_d8_d15_regs.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/save_vfp_d8_d15_regs.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/subdf3vfp.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/subsf3vfp.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/switch16.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/switch32.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/switch8.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/switchu8.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/sync_fetch_and_add_4.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/sync_fetch_and_add_8.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/sync_fetch_and_and_4.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/sync_fetch_and_and_8.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/sync_fetch_and_max_4.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/sync_fetch_and_max_8.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/sync_fetch_and_min_4.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/sync_fetch_and_min_8.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/sync_fetch_and_nand_4.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/sync_fetch_and_nand_8.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/sync_fetch_and_or_4.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/sync_fetch_and_or_8.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/sync_fetch_and_sub_4.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/sync_fetch_and_sub_8.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/sync_fetch_and_umax_4.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/sync_fetch_and_umax_8.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/sync_fetch_and_umin_4.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/sync_fetch_and_umin_8.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/sync_fetch_and_xor_4.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/sync_fetch_and_xor_8.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/sync_synchronize.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/truncdfsf2vfp.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/udivmodsi4.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/udivsi3.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/umodsi3.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/unorddf2vfp.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/arm/unordsf2vfp.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/assembly.h	33;"	d
NO_EXEC_STACK_DIRECTIVE	lib/builtins/assembly.h	49;"	d
NO_EXEC_STACK_DIRECTIVE	lib/builtins/assembly.h	51;"	d
NO_EXEC_STACK_DIRECTIVE	lib/builtins/assembly.h	66;"	d
NO_EXEC_STACK_DIRECTIVE	lib/builtins/i386/ashldi3.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/i386/ashrdi3.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/i386/divdi3.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/i386/floatdidf.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/i386/floatdisf.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/i386/floatdixf.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/i386/floatundidf.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/i386/floatundisf.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/i386/floatundixf.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/i386/lshrdi3.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/i386/moddi3.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/i386/muldi3.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/i386/udivdi3.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/i386/umoddi3.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/ppc/restFP.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/ppc/saveFP.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/x86_64/floatundidf.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/x86_64/floatundisf.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/builtins/x86_64/floatundixf.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/xray/xray_trampoline_AArch64.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/xray/xray_trampoline_arm.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	lib/xray/xray_trampoline_x86_64.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXTERN	test/profile/instrprof-visibility.cpp	11;"	d	file:
NO_EXTERN	test/profile/instrprof-visibility.cpp	9;"	d	file:
NO_OVERFLOW	test/msan/param_tls_limit.cc	21;"	d	file:
NO_OVF_UNF	lib/builtins/hexagon/dfdiv.S	/^		NO_OVF_UNF = !cmp.gt(EXPA,QL)$/;"	d
NO_OVF_UNF	lib/builtins/hexagon/dfdiv.S	/^		NO_OVF_UNF = cmp.gt(EXPA,QH)$/;"	d
NO_OVF_UNF	lib/builtins/hexagon/dfdiv.S	/^#define NO_OVF_UNF p1$/;"	d
NO_SANITIZE_MEMORY	lib/fuzzer/FuzzerLoop.cpp	31;"	d	file:
NO_SANITIZE_MEMORY	lib/fuzzer/FuzzerLoop.cpp	34;"	d	file:
NO_SANITIZE_MEMORY	lib/fuzzer/FuzzerLoop.cpp	35;"	d	file:
NO_STICKIES	lib/builtins/hexagon/dfaddsub.S	/^		NO_STICKIES = cmp.eq(ATMP2,ZERO)$/;"	d
NO_STICKIES	lib/builtins/hexagon/dfaddsub.S	/^#define NO_STICKIES p1$/;"	d
NO_WEAK	test/profile/instrprof-visibility.cpp	12;"	d	file:
NO_WEAK	test/profile/instrprof-visibility.cpp	8;"	d	file:
NS	test/profile/instrprof-value-prof.c	/^    uint32_t NS; \/* Number value sites. *\/$/;"	m	struct:CallerInfo	file:
NUMBER_OF_BLOCKS	test/BlocksRuntime/copy-block-literal-rdar6439600.c	12;"	d	file:
NUM_ITER	test/asan/TestCases/uar_and_exceptions.cc	14;"	d	file:
NUM_THREADS	test/lsan/TestCases/many_tls_keys.cc	/^static const int NUM_THREADS = 10;$/;"	v	file:
NaN	test/builtins/Unit/divdc3_test.c	/^enum {zero, non_zero, inf, NaN, non_zero_nan};$/;"	e	enum:__anon149	file:
NaN	test/builtins/Unit/divsc3_test.c	/^enum {zero, non_zero, inf, NaN, non_zero_nan};$/;"	e	enum:__anon151	file:
NaN	test/builtins/Unit/divtc3_test.c	/^enum {zero, non_zero, inf, NaN, non_zero_nan};$/;"	e	enum:__anon148	file:
NaN	test/builtins/Unit/divxc3_test.c	/^enum {zero, non_zero, inf, NaN, non_zero_nan};$/;"	e	enum:__anon155	file:
NaN	test/builtins/Unit/muldc3_test.c	/^enum {zero, non_zero, inf, NaN, non_zero_nan};$/;"	e	enum:__anon147	file:
NaN	test/builtins/Unit/mulsc3_test.c	/^enum {zero, non_zero, inf, NaN, non_zero_nan};$/;"	e	enum:__anon157	file:
NaN	test/builtins/Unit/multc3_test.c	/^enum {zero, non_zero, inf, NaN, non_zero_nan};$/;"	e	enum:__anon150	file:
NaN	test/builtins/Unit/mulxc3_test.c	/^enum {zero, non_zero, inf, NaN, non_zero_nan};$/;"	e	enum:__anon156	file:
NaN	test/ubsan/TestCases/Float/cast-overflow.cpp	/^float NaN;$/;"	v
Name	lib/fuzzer/FuzzerDriver.cpp	/^  const char *Name;$/;"	m	struct:fuzzer::FlagDescription	file:
Name	lib/fuzzer/FuzzerMerge.h	/^  std::string Name;$/;"	m	struct:fuzzer::MergeFileInfo
Name	lib/fuzzer/FuzzerMutate.h	/^    const char *Name;$/;"	m	struct:fuzzer::MutationDispatcher::Mutator
Name	lib/hwasan/hwasan_report.cc	/^  const char *Name() const { return Green(); }$/;"	f	class:__hwasan::Decorator
Name	lib/msan/msan_report.cc	/^  const char *Name() const { return Green(); }$/;"	f	class:__msan::Decorator
Name	lib/ubsan/ubsan_diag.h	/^  const char *Name;$/;"	m	class:__ubsan::TypeName
NamesFirst	lib/profile/InstrProfilingPlatformOther.c	/^static const char *NamesFirst = NULL;$/;"	v	file:
NamesLast	lib/profile/InstrProfilingPlatformOther.c	/^static const char *NamesLast = NULL;$/;"	v	file:
NanoTime	lib/sanitizer_common/sanitizer_fuchsia.cc	/^u64 NanoTime() { return _zx_clock_get(ZX_CLOCK_UTC); }$/;"	f	namespace:__sanitizer
NanoTime	lib/sanitizer_common/sanitizer_linux.cc	/^u64 NanoTime() {$/;"	f	namespace:__sanitizer
NanoTime	lib/sanitizer_common/sanitizer_mac.cc	/^u64 NanoTime() {$/;"	f	namespace:__sanitizer
NanoTime	lib/sanitizer_common/sanitizer_solaris.cc	/^u64 NanoTime() {$/;"	f	namespace:__sanitizer
NanoTime	lib/sanitizer_common/sanitizer_win.cc	/^u64 NanoTime() {$/;"	f	namespace:__sanitizer
NanosecondsPerSecond	lib/xray/xray_tsc.h	/^static constexpr uint64_t NanosecondsPerSecond = 1000ULL * 1000 * 1000;$/;"	m	namespace:__xray
New	lib/sanitizer_common/sanitizer_symbolizer.cc	/^SymbolizedStack *SymbolizedStack::New(uptr addr) {$/;"	f	class:__sanitizer::SymbolizedStack
New	lib/tsan/rtl/tsan_report.cc	/^ReportLocation *ReportLocation::New(ReportLocationType type) {$/;"	f	class:__tsan::ReportLocation
New	lib/tsan/rtl/tsan_report.cc	/^ReportStack *ReportStack::New() {$/;"	f	class:__tsan::ReportStack
NewSegment	lib/xray/xray_segmented_array.h	/^  Segment *NewSegment() {$/;"	f	class:__xray::Array
NewThreadParams	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^struct NewThreadParams {$/;"	s	file:
Next	lib/esan/esan_hashtable.h	/^    HashEntry *Next;$/;"	m	struct:__esan::HashTable::HashEntry
Next	lib/sanitizer_common/sanitizer_procmaps_bsd.cc	/^bool MemoryMappingLayout::Next(MemoryMappedSegment *segment) {$/;"	f	class:__sanitizer::MemoryMappingLayout
Next	lib/sanitizer_common/sanitizer_procmaps_linux.cc	/^bool MemoryMappingLayout::Next(MemoryMappedSegment *segment) {$/;"	f	class:__sanitizer::MemoryMappingLayout
Next	lib/sanitizer_common/sanitizer_procmaps_mac.cc	/^bool MemoryMappingLayout::Next(MemoryMappedSegment *segment) {$/;"	f	class:__sanitizer::MemoryMappingLayout
Next	lib/sanitizer_common/sanitizer_procmaps_solaris.cc	/^bool MemoryMappingLayout::Next(MemoryMappedSegment *segment) {$/;"	f	class:__sanitizer::MemoryMappingLayout
Next	lib/tsan/rtl/tsan_clock.cc	/^void SyncClock::Iter::Next() {$/;"	f	class:__tsan::SyncClock::Iter
Next	lib/xray/xray_buffer_queue.h	/^  BufferRep *Next;$/;"	m	class:__xray::BufferQueue
Next	lib/xray/xray_log_interface.cc	/^  ModeImpl *Next;$/;"	m	struct:__xray::ModeImpl	file:
Next	lib/xray/xray_segmented_array.h	/^    SegmentBase *Next;$/;"	m	struct:__xray::Array::SegmentBase
NextChild	test/asan/TestCases/Linux/swapcontext_annotation.cc	/^void NextChild() {$/;"	f
NextCommand	lib/sanitizer_common/sanitizer_procmaps_mac.cc	/^static const load_command *NextCommand(const load_command *lc) {$/;"	f	namespace:__sanitizer
NextPage	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^    void NextPage(bool freed) {$/;"	f	class:SizeClassAllocator64::FreePagesRangeTracker
NextSectionLoad	lib/sanitizer_common/sanitizer_procmaps_mac.cc	/^static void NextSectionLoad(LoadedModule *module, MemoryMappedSegmentData *data,$/;"	f	namespace:__sanitizer
NextSegmentLoad	lib/sanitizer_common/sanitizer_procmaps_mac.cc	/^static bool NextSegmentLoad(MemoryMappedSegment *segment,$/;"	f	namespace:__sanitizer
NoExtension	lib/sanitizer_common/scripts/cpplint.py	/^  def NoExtension(self):$/;"	m	class:FileInfo
NoHugePagesInRegion	lib/sanitizer_common/sanitizer_posix_libcdep.cc	/^bool NoHugePagesInRegion(uptr addr, uptr size) {$/;"	f	namespace:__sanitizer
NoHugePagesInRegion	lib/sanitizer_common/sanitizer_win.cc	/^bool NoHugePagesInRegion(uptr addr, uptr size) {$/;"	f	namespace:__sanitizer
NoHugePagesInShadow	lib/tsan/rtl/tsan_platform_posix.cc	/^static void NoHugePagesInShadow(uptr addr, uptr size) {$/;"	f	namespace:__tsan
NoMemoryMapper	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  NoMemoryMapper() : last_request_buffer_size(0) {}$/;"	f	class:NoMemoryMapper
NoMemoryMapper	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^class NoMemoryMapper {$/;"	c	file:
NoOpMapUnmapCallback	lib/sanitizer_common/sanitizer_allocator.h	/^struct NoOpMapUnmapCallback {$/;"	s	namespace:__sanitizer
NoSanitizeAddress	lib/asan/tests/asan_test.cc	/^static void NoSanitizeAddress() {$/;"	f	file:
NoTsanAtomicCAS	lib/tsan/rtl/tsan_interface_atomic.cc	/^static T NoTsanAtomicCAS(volatile T *a, T c, T v, morder mo, morder fmo) {$/;"	f	file:
NoTsanAtomicCAS	lib/tsan/rtl/tsan_interface_atomic.cc	/^static bool NoTsanAtomicCAS(volatile T *a, T *c, T v, morder mo, morder fmo) {$/;"	f	file:
NoTsanAtomicCAS	lib/tsan/rtl/tsan_interface_atomic.cc	/^static bool NoTsanAtomicCAS(volatile a128 *a, a128 *c, a128 v,$/;"	f	file:
NoTsanAtomicExchange	lib/tsan/rtl/tsan_interface_atomic.cc	/^static T NoTsanAtomicExchange(volatile T *a, T v, morder mo) {$/;"	f	file:
NoTsanAtomicFence	lib/tsan/rtl/tsan_interface_atomic.cc	/^static void NoTsanAtomicFence(morder mo) {$/;"	f	file:
NoTsanAtomicFetchAdd	lib/tsan/rtl/tsan_interface_atomic.cc	/^static T NoTsanAtomicFetchAdd(volatile T *a, T v, morder mo) {$/;"	f	file:
NoTsanAtomicFetchAnd	lib/tsan/rtl/tsan_interface_atomic.cc	/^static T NoTsanAtomicFetchAnd(volatile T *a, T v, morder mo) {$/;"	f	file:
NoTsanAtomicFetchNand	lib/tsan/rtl/tsan_interface_atomic.cc	/^static T NoTsanAtomicFetchNand(volatile T *a, T v, morder mo) {$/;"	f	file:
NoTsanAtomicFetchOr	lib/tsan/rtl/tsan_interface_atomic.cc	/^static T NoTsanAtomicFetchOr(volatile T *a, T v, morder mo) {$/;"	f	file:
NoTsanAtomicFetchSub	lib/tsan/rtl/tsan_interface_atomic.cc	/^static T NoTsanAtomicFetchSub(volatile T *a, T v, morder mo) {$/;"	f	file:
NoTsanAtomicFetchXor	lib/tsan/rtl/tsan_interface_atomic.cc	/^static T NoTsanAtomicFetchXor(volatile T *a, T v, morder mo) {$/;"	f	file:
NoTsanAtomicLoad	lib/tsan/rtl/tsan_interface_atomic.cc	/^static T NoTsanAtomicLoad(const volatile T *a, morder mo) {$/;"	f	file:
NoTsanAtomicLoad	lib/tsan/rtl/tsan_interface_atomic.cc	/^static a128 NoTsanAtomicLoad(const volatile a128 *a, morder mo) {$/;"	f	file:
NoTsanAtomicStore	lib/tsan/rtl/tsan_interface_atomic.cc	/^static void NoTsanAtomicStore(volatile T *a, T v, morder mo) {$/;"	f	file:
NoTsanAtomicStore	lib/tsan/rtl/tsan_interface_atomic.cc	/^static void NoTsanAtomicStore(volatile a128 *a, a128 v, morder mo) {$/;"	f	file:
Node	lib/xray/xray_function_call_trie.h	/^    Node(Node *P, NodeIdPairAllocatorType &A, int64_t CC, int64_t CLT,$/;"	f	struct:__xray::FunctionCallTrie::Node
Node	lib/xray/xray_function_call_trie.h	/^  struct Node {$/;"	s	class:__xray::FunctionCallTrie
Node	lib/xray/xray_profile_collector.cc	/^  const FunctionCallTrie::Node *Node = nullptr;$/;"	m	struct:__xray::profileCollectorService::ProfileRecord	file:
NodeIdPair	lib/xray/xray_function_call_trie.h	/^    NodeIdPair(Node *N, int32_t F) : NodePtr(N), FId(F) {}$/;"	f	struct:__xray::FunctionCallTrie::NodeIdPair
NodeIdPair	lib/xray/xray_function_call_trie.h	/^  struct NodeIdPair {$/;"	s	class:__xray::FunctionCallTrie
NodeIdPairAllocator	lib/xray/xray_function_call_trie.h	/^    NodeIdPairAllocatorType *NodeIdPairAllocator = nullptr;$/;"	m	struct:__xray::FunctionCallTrie::Allocators
NodeIdPairAllocator	lib/xray/xray_function_call_trie.h	/^  NodeIdPairAllocatorType *NodeIdPairAllocator = nullptr;$/;"	m	class:__xray::FunctionCallTrie
NodePtr	lib/xray/tests/unit/segmented_array_test.cc	/^  uint64_t *NodePtr = nullptr;$/;"	m	struct:__xray::__anon23::ShadowStackEntry	file:
NodePtr	lib/xray/xray_function_call_trie.h	/^    Node *NodePtr;$/;"	m	struct:__xray::FunctionCallTrie::NodeIdPair
NodePtr	lib/xray/xray_function_call_trie.h	/^    Node *NodePtr;$/;"	m	struct:__xray::FunctionCallTrie::ShadowStackEntry
Nodes	lib/xray/xray_function_call_trie.h	/^  NodeArray Nodes;$/;"	m	class:__xray::FunctionCallTrie
NodesKind	lib/profile/InstrProfilingValue.c	/^  ValueProfNode **NodesKind[IPVK_Last + 1];$/;"	m	struct:ValueProfRuntimeRecord	file:
NonConstSpaceBeg	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  uptr NonConstSpaceBeg;$/;"	m	class:SizeClassAllocator64
NonInstrumentedModule	test/tsan/Darwin/external-noninstrumented-module.cc	/^extern "C" void NonInstrumentedModule() {$/;"	f
NonNullArgData	lib/ubsan/ubsan_handlers.h	/^struct NonNullArgData {$/;"	s	namespace:__ubsan
NonNullReturnData	lib/ubsan/ubsan_handlers.h	/^struct NonNullReturnData {$/;"	s	namespace:__ubsan
NonTrivial	test/msan/dtor-trivial.cpp	/^struct NonTrivial {$/;"	s	file:
NopwSeq	lib/xray/xray_x86_64.cc	/^static constexpr uint16_t NopwSeq = 0x9066;$/;"	m	namespace:__xray	file:
Normal	lib/tsan/tests/rtl/tsan_test_util.h	/^    Normal,$/;"	e	enum:Mutex::Type
NotABool	test/ubsan/TestCases/Misc/bool.cpp	/^unsigned char NotABool = 123;$/;"	v
NotEnoughMemory	lib/xray/xray_buffer_queue.h	/^    NotEnoughMemory,$/;"	m	class:__xray::BufferQueue::ErrorCode
Note	lib/ubsan/ubsan_diag.cc	/^  const char *Note() const { return Black(); }$/;"	f	class:__anon102::Decorator
Null	test/fuzzer/NullDerefOnEmptyTest.cpp	/^static volatile int *Null = 0;$/;"	v	file:
Null	test/fuzzer/NullDerefTest.cpp	/^static volatile int *Null = 0;$/;"	v	file:
Null	test/fuzzer/TwoDifferentBugsTest.cpp	/^static volatile int *Null = 0;$/;"	v	file:
NullDeref	test/asan/TestCases/Windows/dll_null_deref.cc	/^static void NullDeref(int *ptr) {$/;"	f	file:
NullDeref	test/asan/TestCases/Windows/null_deref.cc	/^static void NullDeref(int *ptr) {$/;"	f	file:
NullDeref	test/asan/TestCases/Windows/null_deref_multiple_dlls.cc	/^static void NullDeref(int *ptr) {$/;"	f	file:
NullDeref	test/asan/TestCases/null_deref.cc	/^void NullDeref(int *ptr) {$/;"	f	file:
NumActiveUnits	lib/fuzzer/FuzzerCorpus.h	/^  size_t NumActiveUnits() const {$/;"	f	class:fuzzer::InputCorpus
NumAddedFeatures	lib/fuzzer/FuzzerCorpus.h	/^  size_t NumAddedFeatures = 0;$/;"	m	class:fuzzer::InputCorpus
NumAllocatedPointers	test/fuzzer/AccumulateAllocationsTest.cpp	/^int NumAllocatedPointers = 0;$/;"	v
NumAppRegions	lib/esan/esan_shadow.h	/^static const u32 NumAppRegions = sizeof(AppRegions)\/sizeof(AppRegions[0]);$/;"	m	namespace:__esan
NumArgs	lib/ubsan/ubsan_diag.h	/^  unsigned NumArgs;$/;"	m	class:__ubsan::Diag
NumElm	lib/profile/InstrProfilingInternal.h	/^  size_t NumElm;$/;"	m	struct:ProfDataIOVec
NumExecutedMutations	lib/fuzzer/FuzzerCorpus.h	/^  size_t NumExecutedMutations = 0;$/;"	m	struct:fuzzer::InputInfo
NumFeatureUpdates	lib/fuzzer/FuzzerCorpus.h	/^  size_t NumFeatureUpdates() const { return NumUpdatedFeatures; }$/;"	f	class:fuzzer::InputCorpus
NumFeatures	lib/fuzzer/FuzzerCorpus.h	/^  size_t NumFeatures = 0;$/;"	m	struct:fuzzer::InputInfo
NumFeatures	lib/fuzzer/FuzzerCorpus.h	/^  size_t NumFeatures() const { return NumAddedFeatures; }$/;"	f	class:fuzzer::InputCorpus
NumFields	lib/esan/cache_frag.cpp	/^  u32 NumFields;$/;"	m	struct:__esan::StructInfo	file:
NumFilesInFirstCorpus	lib/fuzzer/FuzzerMerge.h	/^  size_t NumFilesInFirstCorpus = 0;$/;"	m	struct:fuzzer::Merger
NumFreq	lib/esan/working_set.cpp	/^static const u32 NumFreq = 8; \/\/ One for each bit of our shadow bytes.$/;"	m	namespace:__esan	file:
NumFuncs	lib/fuzzer/dataflow/DataFlow.cpp	/^static size_t NumFuncs;$/;"	v	file:
NumGuards	lib/fuzzer/FuzzerTracePC.h	/^  size_t NumGuards;  \/\/ linker-initialized.$/;"	m	class:fuzzer::TracePC
NumHosts	lib/profile/InstrProfilingFile.c	/^  unsigned NumHosts;$/;"	m	struct:lprofFilename	file:
NumInline8bitCounters	lib/fuzzer/FuzzerTracePC.h	/^  size_t NumInline8bitCounters;$/;"	m	class:fuzzer::TracePC
NumInputsThatTouchFocusFunction	lib/fuzzer/FuzzerCorpus.h	/^  size_t NumInputsThatTouchFocusFunction() {$/;"	f	class:fuzzer::InputCorpus
NumInputsWithDataFlowTrace	lib/fuzzer/FuzzerCorpus.h	/^  size_t NumInputsWithDataFlowTrace() {$/;"	f	class:fuzzer::InputCorpus
NumLines	lib/sanitizer_common/scripts/cpplint.py	/^  def NumLines(self):$/;"	m	class:CleansedLines
NumModules	lib/fuzzer/FuzzerTracePC.h	/^  size_t NumModules;  \/\/ linker-initialized.$/;"	m	class:fuzzer::TracePC
NumModulesWithInline8bitCounters	lib/fuzzer/FuzzerTracePC.h	/^  size_t NumModulesWithInline8bitCounters;  \/\/ linker-initialized.$/;"	m	class:fuzzer::TracePC
NumPCTables	lib/fuzzer/FuzzerTracePC.h	/^  size_t NumPCTables;$/;"	m	class:fuzzer::TracePC
NumPCsInPCTables	lib/fuzzer/FuzzerTracePC.h	/^  size_t NumPCsInPCTables;$/;"	m	class:fuzzer::TracePC
NumPids	lib/profile/InstrProfilingFile.c	/^  unsigned NumPids;$/;"	m	struct:lprofFilename	file:
NumPrintNewFuncs	lib/fuzzer/FuzzerTracePC.h	/^  size_t NumPrintNewFuncs = 0;$/;"	m	class:fuzzer::TracePC
NumRanges	lib/ubsan/ubsan_diag.h	/^  unsigned NumRanges;$/;"	m	class:__ubsan::Diag
NumStackOriginDescrs	lib/msan/msan.cc	/^static atomic_uint32_t NumStackOriginDescrs;$/;"	m	namespace:__msan	file:
NumStructs	lib/esan/cache_frag.cpp	/^  u32 NumStructs;$/;"	m	struct:__esan::CacheFragInfo	file:
NumStructs	lib/esan/cache_frag.cpp	/^  u32 NumStructs;$/;"	m	struct:__esan::Context	file:
NumSuccessfullMutations	lib/fuzzer/FuzzerCorpus.h	/^  size_t NumSuccessfullMutations = 0;$/;"	m	struct:fuzzer::InputInfo
NumUpdatedFeatures	lib/fuzzer/FuzzerCorpus.h	/^  size_t NumUpdatedFeatures = 0;$/;"	m	class:fuzzer::InputCorpus
NumberOfAllocs	lib/scudo/scudo_allocator_secondary.h	/^  u32 NumberOfAllocs;$/;"	m	class:LargeMmapAllocator
NumberOfCPUsCached	lib/sanitizer_common/sanitizer_common.cc	/^u32 NumberOfCPUsCached;$/;"	m	namespace:__sanitizer	file:
NumberOfCoPrimes	lib/scudo/scudo_tsd_shared.cpp	/^static u32 NumberOfCoPrimes = 0;$/;"	m	namespace:__scudo	file:
NumberOfCpuCores	lib/fuzzer/FuzzerUtil.cpp	/^unsigned NumberOfCpuCores() {$/;"	f	namespace:fuzzer
NumberOfFrames	lib/asan/asan_fake_stack.h	/^  static uptr NumberOfFrames(uptr stack_size_log, uptr class_id) {$/;"	f	class:__asan::FakeStack
NumberOfFrees	lib/scudo/scudo_allocator_secondary.h	/^  u32 NumberOfFrees;$/;"	m	class:LargeMmapAllocator
NumberOfLeakDetectionAttempts	lib/fuzzer/FuzzerInternal.h	/^  size_t NumberOfLeakDetectionAttempts = 0;$/;"	m	class:fuzzer::Fuzzer
NumberOfNewUnitsAdded	lib/fuzzer/FuzzerInternal.h	/^  size_t NumberOfNewUnitsAdded = 0;$/;"	m	class:fuzzer::Fuzzer
NumberOfTSDs	lib/scudo/scudo_tsd_shared.cpp	/^static u32 NumberOfTSDs;$/;"	m	namespace:__scudo	file:
O	test/asan/TestCases/Linux/preinit_test.cc	/^template <class> struct O {$/;"	s	file:
OFF64_T	lib/interception/interception.h	/^typedef __sanitizer::OFF64_T OFF64_T;$/;"	t
OFF64_T	lib/sanitizer_common/sanitizer_internal_defs.h	/^typedef u64  OFF64_T;$/;"	t	namespace:__sanitizer
OFF_T	lib/interception/interception.h	/^typedef __sanitizer::OFF_T   OFF_T;$/;"	t
OFF_T	lib/sanitizer_common/sanitizer_internal_defs.h	/^typedef u64 OFF_T;$/;"	t	namespace:__sanitizer
OFF_T	lib/sanitizer_common/sanitizer_internal_defs.h	/^typedef uptr OFF_T;$/;"	t	namespace:__sanitizer
OFF_T	lib/sanitizer_common/symbolizer/sanitizer_wrappers.cc	25;"	d	file:
OFF_T	lib/sanitizer_common/symbolizer/sanitizer_wrappers.cc	27;"	d	file:
ONE	lib/builtins/hexagon/dfdiv.S	/^		ONE = #1$/;"	d
ONE	lib/builtins/hexagon/dfdiv.S	/^#define ONE r28$/;"	d
ONE	lib/builtins/hexagon/dffma.S	/^		ONE = #1$/;"	d
ONE	lib/builtins/hexagon/dffma.S	/^#define ONE r15:14$/;"	d
ONE	lib/builtins/hexagon/dfmul.S	/^		ONE = #1$/;"	d
ONE	lib/builtins/hexagon/dfmul.S	/^#define ONE r9:8$/;"	d
ONE	lib/builtins/hexagon/dfsqrt.S	/^		ONE = #1$/;"	d
ONE	lib/builtins/hexagon/dfsqrt.S	/^		ONE = add(ROOT,ONE)$/;"	d
ONE	lib/builtins/hexagon/dfsqrt.S	/^#define ONE r7:6$/;"	d
ONGOING	include/xray/xray_interface.h	/^  ONGOING = 2,$/;"	e	enum:XRayPatchingStatus
OOBKind	lib/asan/tests/asan_str_test.cc	/^enum class OOBKind {$/;"	c	namespace:__anon40	file:
OOBTest	lib/asan/tests/asan_oob_test.cc	/^void OOBTest() {$/;"	f
OPERATOR_DELETE_BODY	lib/asan/asan_new_delete.cc	144;"	d	file:
OPERATOR_DELETE_BODY	lib/hwasan/hwasan_new_delete.cc	52;"	d	file:
OPERATOR_DELETE_BODY	lib/lsan/lsan_interceptors.cc	211;"	d	file:
OPERATOR_DELETE_BODY	lib/msan/msan_new_delete.cc	70;"	d	file:
OPERATOR_DELETE_BODY	lib/scudo/scudo_new_delete.cpp	64;"	d	file:
OPERATOR_DELETE_BODY	lib/tsan/rtl/tsan_new_delete.cc	116;"	d	file:
OPERATOR_DELETE_BODY_ALIGN	lib/asan/asan_new_delete.cc	154;"	d	file:
OPERATOR_DELETE_BODY_ALIGN	lib/scudo/scudo_new_delete.cpp	68;"	d	file:
OPERATOR_DELETE_BODY_SIZE	lib/asan/asan_new_delete.cc	149;"	d	file:
OPERATOR_DELETE_BODY_SIZE	lib/scudo/scudo_new_delete.cpp	66;"	d	file:
OPERATOR_DELETE_BODY_SIZE_ALIGN	lib/asan/asan_new_delete.cc	159;"	d	file:
OPERATOR_DELETE_BODY_SIZE_ALIGN	lib/scudo/scudo_new_delete.cpp	70;"	d	file:
OPERATOR_NEW_BODY	lib/asan/asan_new_delete.cc	75;"	d	file:
OPERATOR_NEW_BODY	lib/hwasan/hwasan_new_delete.cc	33;"	d	file:
OPERATOR_NEW_BODY	lib/lsan/lsan_interceptors.cc	198;"	d	file:
OPERATOR_NEW_BODY	lib/msan/msan_new_delete.cc	34;"	d	file:
OPERATOR_NEW_BODY	lib/scudo/scudo_new_delete.cpp	36;"	d	file:
OPERATOR_NEW_BODY	lib/tsan/rtl/tsan_new_delete.cc	32;"	d	file:
OPERATOR_NEW_BODY_ALIGN	lib/asan/asan_new_delete.cc	85;"	d	file:
OPERATOR_NEW_BODY_ALIGN	lib/lsan/lsan_interceptors.cc	204;"	d	file:
OPERATOR_NEW_BODY_ALIGN	lib/msan/msan_new_delete.cc	39;"	d	file:
OPERATOR_NEW_BODY_ALIGN	lib/scudo/scudo_new_delete.cpp	32;"	d	file:
OPERATOR_NEW_BODY_ALIGN	lib/tsan/rtl/tsan_new_delete.cc	47;"	d	file:
OPTIMISED_CASE	lib/builtins/atomic.c	247;"	d	file:
OPTIMISED_CASE	lib/builtins/atomic.c	258;"	d	file:
OPTIMISED_CASE	lib/builtins/atomic.c	260;"	d	file:
OPTIMISED_CASE	lib/builtins/atomic.c	273;"	d	file:
OPTIMISED_CASE	lib/builtins/atomic.c	275;"	d	file:
OPTIMISED_CASE	lib/builtins/atomic.c	287;"	d	file:
OPTIMISED_CASE	lib/builtins/atomic.c	289;"	d	file:
OPTIMISED_CASE	lib/builtins/atomic.c	307;"	d	file:
OPTIMISED_CASE	lib/builtins/atomic.c	324;"	d	file:
OPTIMISED_CASE	lib/builtins/atomic.c	326;"	d	file:
OPTIMISED_CASE	lib/builtins/atomic.c	327;"	d	file:
OPTIMISED_CASE	lib/builtins/atomic.c	329;"	d	file:
OPTIMISED_CASE	lib/builtins/atomic.c	330;"	d	file:
OPTIMISED_CASE	lib/builtins/atomic.c	332;"	d	file:
OPTIMISED_CASE	lib/builtins/atomic.c	333;"	d	file:
OPTIMISED_CASE	lib/builtins/atomic.c	335;"	d	file:
OPTIMISED_CASE	lib/builtins/atomic.c	336;"	d	file:
OPTIMISED_CASE	lib/builtins/atomic.c	338;"	d	file:
OPTIMISED_CASES	lib/builtins/atomic.c	233;"	d	file:
OPTIMISED_CASES	lib/builtins/atomic.c	240;"	d	file:
OR	lib/msan/tests/msan_test.cc	/^template<class T> INLINE T OR (const T &a, const T&b) { return a | b; }$/;"	f
ORIGIN	lib/msan/msan.h	/^    INVALID, APP, SHADOW, ORIGIN$/;"	e	enum:MappingDesc::Type
OSATOMIC_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors_mac.cc	41;"	d	file:
OSATOMIC_INTERCEPTORS_ARITHMETIC	lib/tsan/rtl/tsan_interceptors_mac.cc	66;"	d	file:
OSATOMIC_INTERCEPTORS_BITOP	lib/tsan/rtl/tsan_interceptors_mac.cc	135;"	d	file:
OSATOMIC_INTERCEPTORS_BITWISE	lib/tsan/rtl/tsan_interceptors_mac.cc	76;"	d	file:
OSATOMIC_INTERCEPTORS_CAS	lib/tsan/rtl/tsan_interceptors_mac.cc	99;"	d	file:
OSATOMIC_INTERCEPTOR_BITOP	lib/tsan/rtl/tsan_interceptors_mac.cc	125;"	d	file:
OSATOMIC_INTERCEPTOR_MINUS_1	lib/tsan/rtl/tsan_interceptors_mac.cc	59;"	d	file:
OSATOMIC_INTERCEPTOR_PLUS_1	lib/tsan/rtl/tsan_interceptors_mac.cc	53;"	d	file:
OSATOMIC_INTERCEPTOR_PLUS_X	lib/tsan/rtl/tsan_interceptors_mac.cc	47;"	d	file:
OSAtomicCompareAndSwapInt	lib/BlocksRuntime/runtime.c	/^static __inline bool OSAtomicCompareAndSwapInt(int oldi, int newi, int volatile *dst) {$/;"	f	file:
OSAtomicCompareAndSwapLong	lib/BlocksRuntime/runtime.c	/^static __inline bool OSAtomicCompareAndSwapLong(long oldl, long newl, long volatile *dst) {$/;"	f	file:
OSSpinLock	test/tsan/Darwin/osspinlock-norace.cc	/^typedef int32_t OSSpinLock;$/;"	t	file:
OVERFLOW	lib/msan/msan_report.cc	/^  static const int OVERFLOW = -1;$/;"	m	class:__msan::OriginSet	file:
OVERFLOW	test/msan/param_tls_limit.cc	19;"	d	file:
OVERFLOW	test/ubsan_minimal/TestCases/recover-dedup-limit.cpp	5;"	d	file:
OVERRIDE_FUNCTION	lib/interception/interception.h	247;"	d
O_BINARY	lib/profile/InstrProfilingPort.h	117;"	d
ObjectCreate	test/tsan/Darwin/external-lib.cc	/^MyObject *ObjectCreate() {$/;"	f
ObjectRead	test/tsan/Darwin/external-lib.cc	/^long ObjectRead(MyObject *ref) {$/;"	f
ObjectWrite	test/tsan/Darwin/external-lib.cc	/^void ObjectWrite(MyObject *ref, long val) {$/;"	f
ObjectWriteAnother	test/tsan/Darwin/external-lib.cc	/^void ObjectWriteAnother(MyObject *ref, long val) {$/;"	f
ObservedFocusFunction	lib/fuzzer/FuzzerTracePC.cpp	/^bool TracePC::ObservedFocusFunction() {$/;"	f	class:fuzzer::TracePC
ObservedFuncs	lib/fuzzer/FuzzerTracePC.h	/^  std::unordered_map<uintptr_t, uintptr_t> ObservedFuncs;  \/\/ PC => Counter.$/;"	m	class:fuzzer::TracePC
ObservedPCs	lib/fuzzer/FuzzerTracePC.h	/^  Set<uintptr_t> ObservedPCs;$/;"	m	class:fuzzer::TracePC
ObtainCurrentStack	lib/tsan/rtl/tsan_rtl.h	/^void ObtainCurrentStack(ThreadState *thr, uptr toppc, StackTraceTy *stack,$/;"	f	namespace:__tsan
Offset	lib/esan/esan_shadow.h	/^  uptr Offset;$/;"	m	class:__esan::ShadowMapping
Offset	lib/scudo/scudo_allocator.h	/^  u64 Offset            : 16;  \/\/ Offset from the beginning of the backend$/;"	m	struct:__scudo::UnpackedHeader
Offset	lib/ubsan/ubsan_type_hash.h	/^  sptr Offset;$/;"	m	class:__ubsan::DynamicTypeInfo
Offset	lib/ubsan/ubsan_type_hash_itanium.cc	/^  sptr Offset;$/;"	m	struct:__anon103::VtablePrefix	file:
Offset	lib/xray/xray_buffer_queue.h	/^    size_t Offset = 0;$/;"	m	class:__xray::BufferQueue::Iterator
Offset	lib/xray/xray_segmented_array.h	/^    size_t Offset = 0;$/;"	m	class:__xray::Array::Iterator
Offset	test/ubsan/TestCases/TypeCheck/vptr-corrupted-vtable-itanium.cpp	/^  signed long Offset;$/;"	m	struct:VtablePrefix	file:
Ok	lib/sanitizer_common/sanitizer_linux.h	/^    Ok,$/;"	e	enum:__sanitizer::ThreadLister::Result
Ok	lib/xray/xray_buffer_queue.h	/^    Ok,$/;"	m	class:__xray::BufferQueue::ErrorCode
OldBlockedSignalsSet	lib/fuzzer/FuzzerUtilDarwin.cpp	/^static sigset_t OldBlockedSignalsSet;$/;"	m	namespace:fuzzer	file:
OldSigIntAction	lib/fuzzer/FuzzerUtilDarwin.cpp	/^static struct sigaction OldSigIntAction;$/;"	m	namespace:fuzzer	typeref:struct:fuzzer::sigaction	file:
OldSigQuitAction	lib/fuzzer/FuzzerUtilDarwin.cpp	/^static struct sigaction OldSigQuitAction;$/;"	m	namespace:fuzzer	typeref:struct:fuzzer::sigaction	file:
OnCreated	lib/asan/asan_thread.cc	/^void AsanThreadContext::OnCreated(void *arg) {$/;"	f	class:__asan::AsanThreadContext
OnCreated	lib/sanitizer_common/sanitizer_thread_registry.h	/^  virtual void OnCreated(void *arg) {}$/;"	f	class:__sanitizer::ThreadContextBase
OnCreated	lib/sanitizer_common/tests/sanitizer_thread_registry_test.cc	/^  void OnCreated(void *arg) {$/;"	f	class:__sanitizer::__anon61::TestThreadContext
OnCreated	lib/tsan/rtl/tsan_rtl_thread.cc	/^void ThreadContext::OnCreated(void *arg) {$/;"	f	class:__tsan::ThreadContext
OnCreatedArgs	lib/tsan/rtl/tsan_rtl_thread.cc	/^struct OnCreatedArgs {$/;"	s	namespace:__tsan	file:
OnDead	lib/sanitizer_common/sanitizer_thread_registry.h	/^  virtual void OnDead() {}$/;"	f	class:__sanitizer::ThreadContextBase
OnDead	lib/tsan/rtl/tsan_rtl_thread.cc	/^void ThreadContext::OnDead() {$/;"	f	class:__tsan::ThreadContext
OnDetached	lib/sanitizer_common/sanitizer_thread_registry.h	/^  virtual void OnDetached(void *arg) {}$/;"	f	class:__sanitizer::ThreadContextBase
OnDetached	lib/tsan/rtl/tsan_rtl_thread.cc	/^void ThreadContext::OnDetached(void *arg) {$/;"	f	class:__tsan::ThreadContext
OnExit	lib/asan/asan_interceptors.cc	/^int OnExit() {$/;"	f	namespace:__asan
OnExit	lib/hwasan/hwasan_interceptors.cc	/^int OnExit() {$/;"	f	namespace:__hwasan
OnExit	lib/msan/msan_interceptors.cc	/^int OnExit() {$/;"	f	namespace:__msan
OnExit	lib/tsan/rtl/tsan_interceptors.cc	/^static int OnExit(ThreadState *thr) {$/;"	f	file:
OnFinalize	lib/tsan/rtl/tsan_rtl.cc	/^bool OnFinalize(bool failed) {$/;"	f	namespace:__tsan
OnFinished	lib/asan/asan_thread.cc	/^void AsanThreadContext::OnFinished() {$/;"	f	class:__asan::AsanThreadContext
OnFinished	lib/lsan/lsan_thread.cc	/^void ThreadContext::OnFinished() {$/;"	f	class:__lsan::ThreadContext
OnFinished	lib/sanitizer_common/sanitizer_thread_registry.h	/^  virtual void OnFinished() {}$/;"	f	class:__sanitizer::ThreadContextBase
OnFinished	lib/tsan/rtl/tsan_rtl_thread.cc	/^void ThreadContext::OnFinished() {$/;"	f	class:__tsan::ThreadContext
OnFree	lib/asan/asan_fake_stack.cc	/^ALWAYS_INLINE void OnFree(uptr ptr, uptr class_id, uptr size) {$/;"	f	namespace:__asan
OnInitialize	lib/tsan/rtl/tsan_rtl.cc	/^void OnInitialize() {}$/;"	f	namespace:__tsan
OnInitialize	test/tsan/Linux/check_preinit.cc	/^void OnInitialize() {$/;"	f	namespace:__tsan
OnJoined	lib/sanitizer_common/sanitizer_thread_registry.h	/^  virtual void OnJoined(void *arg) {}$/;"	f	class:__sanitizer::ThreadContextBase
OnJoined	lib/sanitizer_common/tests/sanitizer_thread_registry_test.cc	/^  void OnJoined(void *arg) {$/;"	f	class:__sanitizer::__anon61::TestThreadContext
OnJoined	lib/tsan/rtl/tsan_rtl_thread.cc	/^void ThreadContext::OnJoined(void *arg) {$/;"	f	class:__tsan::ThreadContext
OnLibraryLoaded	lib/sanitizer_common/sanitizer_libignore.cc	/^void LibIgnore::OnLibraryLoaded(const char *name) {$/;"	f	class:__sanitizer::LibIgnore
OnLibraryUnloaded	lib/sanitizer_common/sanitizer_libignore.cc	/^void LibIgnore::OnLibraryUnloaded() {$/;"	f	class:__sanitizer::LibIgnore
OnLowLevelAllocate	lib/asan/asan_rtl.cc	/^static void OnLowLevelAllocate(uptr ptr, uptr size) {$/;"	f	namespace:__asan
OnMalloc	lib/asan/asan_fake_stack.cc	/^ALWAYS_INLINE uptr OnMalloc(uptr class_id, uptr size) {$/;"	f	namespace:__asan
OnMap	lib/asan/asan_allocator.cc	/^void AsanMapUnmapCallback::OnMap(uptr p, uptr size) const {$/;"	f	class:__asan::AsanMapUnmapCallback
OnMap	lib/hwasan/hwasan_allocator.cc	/^  void OnMap(uptr p, uptr size) const {}$/;"	f	struct:__hwasan::HwasanMapUnmapCallback
OnMap	lib/msan/msan_allocator.cc	/^  void OnMap(uptr p, uptr size) const {}$/;"	f	struct:__msan::MsanMapUnmapCallback
OnMap	lib/sanitizer_common/sanitizer_allocator.h	/^  void OnMap(uptr p, uptr size) const { }$/;"	f	struct:__sanitizer::NoOpMapUnmapCallback
OnMap	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  void OnMap(uptr p, uptr size) const { map_count++; }$/;"	f	struct:TestMapUnmapCallback
OnMap	lib/tsan/rtl/tsan_mman.cc	/^  void OnMap(uptr p, uptr size) const { }$/;"	f	struct:__tsan::MapUnmapCallback
OnProcIdle	lib/tsan/rtl/tsan_sync.cc	/^void MetaMap::OnProcIdle(Processor *proc) {$/;"	f	class:__tsan::MetaMap
OnReport	lib/tsan/rtl/tsan_rtl_report.cc	/^bool OnReport(const ReportDesc *rep, bool suppressed) {$/;"	f	namespace:__tsan
OnReport	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^bool OnReport(const ReportDesc *rep, bool suppressed) {$/;"	f	namespace:__tsan
OnReset	lib/sanitizer_common/sanitizer_thread_registry.h	/^  virtual void OnReset() {}$/;"	f	class:__sanitizer::ThreadContextBase
OnReset	lib/tsan/rtl/tsan_rtl_thread.cc	/^void ThreadContext::OnReset() {$/;"	f	class:__tsan::ThreadContext
OnStackUnwind	lib/asan/asan_errors.cc	/^static void OnStackUnwind(const SignalContext &sig,$/;"	f	namespace:__asan
OnStackUnwind	lib/hwasan/hwasan_linux.cc	/^static void OnStackUnwind(const SignalContext &sig, const void *,$/;"	f	namespace:__hwasan
OnStackUnwind	lib/lsan/lsan.cc	/^static void OnStackUnwind(const SignalContext &sig, const void *,$/;"	f	file:
OnStackUnwind	lib/msan/msan.cc	/^static void OnStackUnwind(const SignalContext &sig, const void *,$/;"	f	file:
OnStackUnwind	lib/tsan/rtl/tsan_rtl.cc	/^static void OnStackUnwind(const SignalContext &sig, const void *,$/;"	f	namespace:__tsan
OnStackUnwind	lib/ubsan/ubsan_signals_standalone.cc	/^static void OnStackUnwind(const SignalContext &sig, const void *,$/;"	f	namespace:__ubsan
OnStarted	lib/lsan/lsan_thread.cc	/^void ThreadContext::OnStarted(void *arg) {$/;"	f	class:__lsan::ThreadContext
OnStarted	lib/sanitizer_common/sanitizer_thread_registry.h	/^  virtual void OnStarted(void *arg) {}$/;"	f	class:__sanitizer::ThreadContextBase
OnStarted	lib/sanitizer_common/tests/sanitizer_thread_registry_test.cc	/^  void OnStarted(void *arg) {$/;"	f	class:__sanitizer::__anon61::TestThreadContext
OnStarted	lib/tsan/rtl/tsan_rtl_thread.cc	/^void ThreadContext::OnStarted(void *arg) {$/;"	f	class:__tsan::ThreadContext
OnStartedArgs	lib/lsan/lsan_thread.cc	/^struct OnStartedArgs {$/;"	s	namespace:__lsan	file:
OnStartedArgs	lib/tsan/rtl/tsan_rtl_thread.cc	/^struct OnStartedArgs {$/;"	s	namespace:__tsan	file:
OnUnmap	lib/asan/asan_allocator.cc	/^void AsanMapUnmapCallback::OnUnmap(uptr p, uptr size) const {$/;"	f	class:__asan::AsanMapUnmapCallback
OnUnmap	lib/hwasan/hwasan_allocator.cc	/^  void OnUnmap(uptr p, uptr size) const {$/;"	f	struct:__hwasan::HwasanMapUnmapCallback
OnUnmap	lib/msan/msan_allocator.cc	/^  void OnUnmap(uptr p, uptr size) const {$/;"	f	struct:__msan::MsanMapUnmapCallback
OnUnmap	lib/sanitizer_common/sanitizer_allocator.h	/^  void OnUnmap(uptr p, uptr size) const { }$/;"	f	struct:__sanitizer::NoOpMapUnmapCallback
OnUnmap	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  void OnUnmap(uptr p, uptr size) const { unmap_count++; }$/;"	f	struct:TestMapUnmapCallback
OnUnmap	lib/tsan/rtl/tsan_mman.cc	/^  void OnUnmap(uptr p, uptr size) const {$/;"	f	struct:__tsan::MapUnmapCallback
OnUserAlloc	lib/tsan/rtl/tsan_mman.cc	/^void OnUserAlloc(ThreadState *thr, uptr pc, uptr p, uptr sz, bool write) {$/;"	f	namespace:__tsan
OnUserFree	lib/tsan/rtl/tsan_mman.cc	/^void OnUserFree(ThreadState *thr, uptr pc, uptr p, bool write) {$/;"	f	namespace:__tsan
OnlyASCII	lib/fuzzer/FuzzerOptions.h	/^  bool OnlyASCII = false;$/;"	m	struct:fuzzer::FuzzingOptions
Open	lib/fuzzer/FuzzerShmemFuchsia.cpp	/^bool SharedMemoryRegion::Open(const char *Name) {$/;"	f	class:fuzzer::SharedMemoryRegion
Open	lib/fuzzer/FuzzerShmemPosix.cpp	/^bool SharedMemoryRegion::Open(const char *Name) {$/;"	f	class:fuzzer::SharedMemoryRegion
Open	lib/fuzzer/FuzzerShmemWindows.cpp	/^bool SharedMemoryRegion::Open(const char *Name) {$/;"	f	class:fuzzer::SharedMemoryRegion
OpenFile	lib/fuzzer/FuzzerIOPosix.cpp	/^FILE* OpenFile(int Fd, const char* Mode) {$/;"	f	namespace:fuzzer
OpenFile	lib/fuzzer/FuzzerIOWindows.cpp	/^FILE* OpenFile(int Fd, const char* Mode) {$/;"	f	namespace:fuzzer
OpenFile	lib/sanitizer_common/sanitizer_coverage_libcdep_new.cc	/^static fd_t OpenFile(const char* path) {$/;"	f	namespace:__sancov::__anon64
OpenFile	lib/sanitizer_common/sanitizer_posix.cc	/^fd_t OpenFile(const char *filename, FileAccessMode mode, error_t *errno_p) {$/;"	f	namespace:__sanitizer
OpenFile	lib/sanitizer_common/sanitizer_rtems.cc	/^fd_t OpenFile(const char *filename, FileAccessMode mode, error_t *errno_p) {$/;"	f	namespace:__sanitizer
OpenFile	lib/sanitizer_common/sanitizer_solaris.cc	/^uptr OpenFile(const char *filename, bool write) {$/;"	f	namespace:__sanitizer
OpenFile	lib/sanitizer_common/sanitizer_win.cc	/^fd_t OpenFile(const char *filename, FileAccessMode mode, error_t *last_error) {$/;"	f	namespace:__sanitizer
OpenProcessPipe	lib/fuzzer/FuzzerUtilPosix.cpp	/^FILE *OpenProcessPipe(const char *Command, const char *Mode) {$/;"	f	namespace:fuzzer
OpenProcessPipe	lib/fuzzer/FuzzerUtilWindows.cpp	/^FILE *OpenProcessPipe(const char *Command, const char *Mode) {$/;"	f	namespace:fuzzer
OpenStatsFile	lib/stats/stats.cc	/^void OpenStatsFile(const char *path_env) {$/;"	f	namespace:__anon3
Options	lib/fuzzer/FuzzerInternal.h	/^  FuzzingOptions Options;$/;"	m	class:fuzzer::Fuzzer
Options	lib/fuzzer/FuzzerMutate.h	/^  const FuzzingOptions Options;$/;"	m	class:fuzzer::MutationDispatcher
Options	test/xray/TestCases/Posix/logging-modes.cc	/^static constexpr char Options[] = "additional_flags";$/;"	v	file:
Opts	lib/ubsan/ubsan_diag.h	/^  ReportOptions Opts;$/;"	m	class:__ubsan::ScopedReport
Origin	lib/hwasan/hwasan_report.cc	/^  const char *Origin() const { return Magenta(); }$/;"	f	class:__hwasan::Decorator
Origin	lib/msan/msan_origin.h	/^  explicit Origin(u32 raw_id) : raw_id_(raw_id) {}$/;"	f	class:__msan::Origin
Origin	lib/msan/msan_origin.h	/^class Origin {$/;"	c	namespace:__msan
Origin	lib/msan/msan_report.cc	/^  const char *Origin() const { return Magenta(); }$/;"	f	class:__msan::Decorator
OriginSet	lib/msan/msan_report.cc	/^  OriginSet() : next_id_(0) {}$/;"	f	class:__msan::OriginSet
OriginSet	lib/msan/msan_report.cc	/^class OriginSet {$/;"	c	namespace:__msan	file:
Other	lib/fuzzer/FuzzerCommand.h	/^  Command &operator=(Command &&Other) = delete;$/;"	m	class:fuzzer::final
Other	lib/fuzzer/FuzzerCommand.h	/^  Command(Command &&Other) = delete;$/;"	m	class:fuzzer::final
OutOfBoundsData	lib/ubsan/ubsan_handlers.h	/^struct OutOfBoundsData {$/;"	s	namespace:__ubsan
OutOfNodesWarnings	lib/profile/InstrProfilingValue.c	/^static int OutOfNodesWarnings = 0;$/;"	v	file:
OutputCorpus	lib/fuzzer/FuzzerCorpus.h	/^  std::string OutputCorpus;$/;"	m	class:fuzzer::InputCorpus
OutputCorpus	lib/fuzzer/FuzzerOptions.h	/^  std::string OutputCorpus;$/;"	m	struct:fuzzer::FuzzingOptions
OutputFile	lib/fuzzer/FuzzerCommand.h	/^  std::string OutputFile;$/;"	m	class:fuzzer::final
OutputFile	lib/fuzzer/FuzzerIO.cpp	/^static FILE *OutputFile = stderr;$/;"	m	namespace:fuzzer	file:
OutputReport	lib/tsan/rtl/tsan_rtl_report.cc	/^bool OutputReport(ThreadState *thr, const ScopedReport &srep) {$/;"	f	namespace:__tsan
OverflowData	lib/ubsan/ubsan_handlers.h	/^struct OverflowData {$/;"	s	namespace:__ubsan
OverheadSize	lib/sanitizer_common/sanitizer_quarantine.h	/^  uptr OverheadSize() const {$/;"	f	class:__sanitizer::QuarantineCache
OverlapErrorMessage	lib/asan/tests/asan_str_test.cc	/^static string OverlapErrorMessage(const string &func) {$/;"	f	file:
OverrideCommonFlags	lib/sanitizer_common/sanitizer_flags.h	/^inline void OverrideCommonFlags(const CommonFlags &cf) {$/;"	f	namespace:__sanitizer
OverrideFromActivationFlags	lib/asan/asan_activation.cc	/^  void OverrideFromActivationFlags() {$/;"	f	struct:__asan::AsanDeactivatedFlags
OverrideFunction	lib/interception/interception_win.cc	/^bool OverrideFunction($/;"	f	namespace:__interception
OverrideFunctionWithDetour	lib/interception/interception_win.cc	/^bool OverrideFunctionWithDetour($/;"	f	namespace:__interception
OverrideFunctionWithHotPatch	lib/interception/interception_win.cc	/^bool OverrideFunctionWithHotPatch($/;"	f	namespace:__interception
OverrideFunctionWithRedirectJump	lib/interception/interception_win.cc	/^bool OverrideFunctionWithRedirectJump($/;"	f	namespace:__interception
OverrideFunctionWithTrampoline	lib/interception/interception_win.cc	/^bool OverrideFunctionWithTrampoline($/;"	f	namespace:__interception
OverrideImportedFunction	lib/interception/interception_win.cc	/^bool OverrideImportedFunction(const char *module_to_patch,$/;"	f	namespace:__interception
OwnFileWriter	lib/profile/InstrProfilingInternal.h	/^  uint32_t OwnFileWriter;$/;"	m	struct:ProfBufferIO
OwnedBuffers	lib/xray/xray_buffer_queue.h	/^  void **OwnedBuffers;$/;"	m	class:__xray::BufferQueue
OwnsFilenamePat	lib/profile/InstrProfilingFile.c	/^  unsigned OwnsFilenamePat;$/;"	m	struct:lprofFilename	file:
P	lib/sanitizer_common/tests/sanitizer_format_interceptor_test.cc	/^static const unsigned P = sizeof(char *);$/;"	v	file:
P	test/tsan/static_init1.cc	/^struct P {$/;"	s	file:
PAGE_SIZE	lib/builtins/aarch64/chkstk.S	/^#define PAGE_SIZE 4096$/;"	d
PAGE_SIZE	lib/builtins/arm/chkstk.S	/^#define PAGE_SIZE 4096$/;"	d
PARTIAL_OVERFLOW	test/msan/param_tls_limit.cc	26;"	d	file:
PARTIAL_OVERFLOW	test/msan/param_tls_limit.cc	30;"	d	file:
PC	lib/fuzzer/FuzzerTracePC.h	/^    uintptr_t PC, PCFlags;$/;"	m	struct:fuzzer::TracePC::PCTableEntry
PC	lib/sanitizer_common/tests/sanitizer_stacktrace_test.cc	/^static uptr PC(uptr idx) {$/;"	f	namespace:__sanitizer
PCFlags	lib/fuzzer/FuzzerTracePC.h	/^    uintptr_t PC, PCFlags;$/;"	m	struct:fuzzer::TracePC::PCTableEntry
PCTableEntry	lib/fuzzer/FuzzerTracePC.h	/^  struct PCTableEntry {$/;"	s	class:fuzzer::TracePC
PCs	lib/fuzzer/FuzzerTracePC.cpp	/^uintptr_t *TracePC::PCs() const {$/;"	f	class:fuzzer::TracePC
PID	lib/xray/tests/unit/profile_collector_test.cc	/^  u64 PID = 0;$/;"	m	struct:__xray::__anon22::ExpectedProfilingFileHeader	file:
PID	lib/xray/xray_profile_collector.cc	/^  u64 PID = 0;       \/\/ Process ID.$/;"	m	struct:__xray::profileCollectorService::__anon27::XRayProfilingFileHeader	file:
PNS	lib/profile/InstrProfilingFile.c	/^  ProfileNameSpecifier PNS;$/;"	m	struct:lprofFilename	file:
PNS_command_line	lib/profile/InstrProfilingFile.c	/^  PNS_command_line,$/;"	e	enum:ProfileNameSpecifier	file:
PNS_default	lib/profile/InstrProfilingFile.c	/^  PNS_default,$/;"	e	enum:ProfileNameSpecifier	file:
PNS_environment	lib/profile/InstrProfilingFile.c	/^  PNS_environment,$/;"	e	enum:ProfileNameSpecifier	file:
PNS_runtime_api	lib/profile/InstrProfilingFile.c	/^  PNS_runtime_api$/;"	e	enum:ProfileNameSpecifier	file:
PNS_unknown	lib/profile/InstrProfilingFile.c	/^  PNS_unknown = 0,$/;"	e	enum:ProfileNameSpecifier	file:
POP_PC	lib/builtins/assembly.h	121;"	d
POP_PC	lib/builtins/assembly.h	123;"	d
PO_B20	lib/xray/xray_arm.cc	/^  PO_B20 = 0xEA000005       \/\/ B #20$/;"	m	class:__xray::PatchOpcodes	file:
PO_B32	lib/xray/xray_AArch64.cc	/^  PO_B32 = 0x14000008              \/\/ B #32$/;"	m	class:__xray::PatchOpcodes	file:
PO_BlrX16	lib/xray/xray_AArch64.cc	/^  PO_BlrX16 = 0xD63F0200,          \/\/ BLR X16$/;"	m	class:__xray::PatchOpcodes	file:
PO_BlxIp	lib/xray/xray_arm.cc	/^  PO_BlxIp = 0xE12FFF3C,    \/\/ BLX ip$/;"	m	class:__xray::PatchOpcodes	file:
PO_LdpX0X30SP_16	lib/xray/xray_AArch64.cc	/^  PO_LdpX0X30SP_16 = 0xA8C17BE0,   \/\/ LDP X0, X30, [SP], #16$/;"	m	class:__xray::PatchOpcodes	file:
PO_LdrW0_12	lib/xray/xray_AArch64.cc	/^  PO_LdrW0_12 = 0x18000060,        \/\/ LDR W0, #12$/;"	m	class:__xray::PatchOpcodes	file:
PO_LdrX16_12	lib/xray/xray_AArch64.cc	/^  PO_LdrX16_12 = 0x58000070,       \/\/ LDR X16, #12$/;"	m	class:__xray::PatchOpcodes	file:
PO_PopR0Lr	lib/xray/xray_arm.cc	/^  PO_PopR0Lr = 0xE8BD4001,  \/\/ POP {r0, lr}$/;"	m	class:__xray::PatchOpcodes	file:
PO_PushR0Lr	lib/xray/xray_arm.cc	/^  PO_PushR0Lr = 0xE92D4001, \/\/ PUSH {r0, lr}$/;"	m	class:__xray::PatchOpcodes	file:
PO_StpX0X30SP_m16e	lib/xray/xray_AArch64.cc	/^  PO_StpX0X30SP_m16e = 0xA9BF7BE0, \/\/ STP X0, X30, [SP, #-16]!$/;"	m	class:__xray::PatchOpcodes	file:
PP_HH	lib/builtins/hexagon/dffma.S	/^		PP_HH = add(CTMP,PP_HH,P_CARRY):carry$/;"	d
PP_HH	lib/builtins/hexagon/dffma.S	/^		PP_HH = combine(#0,PP_ODD_H)$/;"	d
PP_HH	lib/builtins/hexagon/dffma.S	/^		PP_HH = insert(CTMP,#62,#0)		\/\/ Then shift 63$/;"	d
PP_HH	lib/builtins/hexagon/dffma.S	/^		PP_HH = memd(r29+#0)$/;"	d
PP_HH	lib/builtins/hexagon/dffma.S	/^#define PP_HH r17:16$/;"	d
PP_HH	lib/builtins/hexagon/dfmul.S	/^		PP_HH = ATMP$/;"	d
PP_HH	lib/builtins/hexagon/dfmul.S	/^		PP_HH = asr(PP_HH,BTMPH)$/;"	d
PP_HH	lib/builtins/hexagon/dfmul.S	/^		PP_HH = mpyu(ATMPH,BTMPH)$/;"	d
PP_HH	lib/builtins/hexagon/dfmul.S	/^#define PP_HH r11:10$/;"	d
PP_HH_H	lib/builtins/hexagon/dffma.S	/^#define PP_HH_H r17$/;"	d
PP_HH_H	lib/builtins/hexagon/dfmul.S	/^		PP_HH_H = setbit(PP_HH_H,#HI_MANTBITS+3)	\/\/ Add back in a bit so we can use convert instruction$/;"	d
PP_HH_H	lib/builtins/hexagon/dfmul.S	/^#define PP_HH_H r11$/;"	d
PP_HH_L	lib/builtins/hexagon/dffma.S	/^#define PP_HH_L r16$/;"	d
PP_HH_L	lib/builtins/hexagon/dfmul.S	/^#define PP_HH_L r10$/;"	d
PP_HH_TMP	lib/builtins/hexagon/dffma.S	/^		PP_HH_TMP = #0$/;"	d
PP_HH_TMP	lib/builtins/hexagon/dffma.S	/^		PP_HH_TMP = sub(PP_HH_TMP,PP_HH,PROD_NEG):carry$/;"	d
PP_HH_TMP	lib/builtins/hexagon/dffma.S	/^#define PP_HH_TMP r15:14$/;"	d
PP_LL	lib/builtins/hexagon/dffma.S	/^		PP_LL = add(CTMP2,PP_LL,P_CARRY):carry	\/\/ use the carry to add the sticky$/;"	d
PP_LL	lib/builtins/hexagon/dffma.S	/^		PP_LL = asl(PP_LL,#62)$/;"	d
PP_LL	lib/builtins/hexagon/dffma.S	/^		PP_LL = combine(PP_ODD_L,PP_LL_L)$/;"	d
PP_LL	lib/builtins/hexagon/dffma.S	/^		PP_LL = mpyu(ATMPL,BTMPL)$/;"	d
PP_LL	lib/builtins/hexagon/dffma.S	/^#define PP_LL r9:8$/;"	d
PP_LL	lib/builtins/hexagon/dfmul.S	/^		PP_LL = extractu(PP_HH,BTMP)$/;"	d
PP_LL	lib/builtins/hexagon/dfmul.S	/^		PP_LL = mpyu(ATMPL,BTMPL)$/;"	d
PP_LL	lib/builtins/hexagon/dfmul.S	/^		PP_LL = neg(PP_HH)$/;"	d
PP_LL	lib/builtins/hexagon/dfmul.S	/^#define PP_LL r15:14$/;"	d
PP_LL_H	lib/builtins/hexagon/dffma.S	/^#define PP_LL_H r9$/;"	d
PP_LL_H	lib/builtins/hexagon/dfmul.S	/^#define PP_LL_H r15$/;"	d
PP_LL_L	lib/builtins/hexagon/dffma.S	/^#define PP_LL_L r8$/;"	d
PP_LL_L	lib/builtins/hexagon/dfmul.S	/^		PP_LL_L = extractu(TMP,#2,#SR_ROUND_OFF)	\/\/ rounding bits$/;"	d
PP_LL_L	lib/builtins/hexagon/dfmul.S	/^#define PP_LL_L r14$/;"	d
PP_LL_TMP	lib/builtins/hexagon/dffma.S	/^		PP_LL_TMP = #0$/;"	d
PP_LL_TMP	lib/builtins/hexagon/dffma.S	/^		PP_LL_TMP = sub(PP_LL_TMP,PP_LL,PROD_NEG):carry$/;"	d
PP_LL_TMP	lib/builtins/hexagon/dffma.S	/^#define PP_LL_TMP r7:6$/;"	d
PP_ODD	lib/builtins/hexagon/dffma.S	/^		PP_ODD = combine(#0,PP_LL_H)$/;"	d
PP_ODD	lib/builtins/hexagon/dffma.S	/^#define PP_ODD r7:6$/;"	d
PP_ODD	lib/builtins/hexagon/dfmul.S	/^		PP_ODD = mpyu(BTMPL,ATMPH)$/;"	d
PP_ODD	lib/builtins/hexagon/dfmul.S	/^#define PP_ODD r7:6$/;"	d
PP_ODD_H	lib/builtins/hexagon/dffma.S	/^		PP_ODD_H = ##0x10000000$/;"	d
PP_ODD_H	lib/builtins/hexagon/dffma.S	/^#define PP_ODD_H r7$/;"	d
PP_ODD_H	lib/builtins/hexagon/dfmul.S	/^#define PP_ODD_H r7$/;"	d
PP_ODD_L	lib/builtins/hexagon/dffma.S	/^#define PP_ODD_L r6$/;"	d
PP_ODD_L	lib/builtins/hexagon/dfmul.S	/^#define PP_ODD_L r6$/;"	d
PREFETCH	lib/sanitizer_common/sanitizer_internal_defs.h	218;"	d
PREFETCH	lib/sanitizer_common/sanitizer_internal_defs.h	234;"	d
PREFETCH	lib/sanitizer_common/sanitizer_internal_defs.h	236;"	d
PRINT_CURRENT_STACK	lib/asan/asan_stack.h	102;"	d
PRINT_CURRENT_STACK_CHECK	lib/asan/asan_stack.h	108;"	d
PRINT_CURRENT_STACK_CHECK	lib/hwasan/hwasan.h	122;"	d
PRINT_CURRENT_STACK_CHECK	lib/msan/msan.h	363;"	d
PRINT_REG_FP	test/asan/TestCases/Linux/ptrace.cc	30;"	d	file:
PRINT_REG_FP	test/asan/TestCases/Linux/ptrace.cc	37;"	d	file:
PRINT_REG_FP	test/asan/TestCases/Linux/ptrace.cc	44;"	d	file:
PRINT_REG_FP	test/asan/TestCases/Linux/ptrace.cc	51;"	d	file:
PRINT_REG_FP	test/asan/TestCases/Linux/ptrace.cc	60;"	d	file:
PRINT_REG_FP	test/asan/TestCases/Linux/ptrace.cc	67;"	d	file:
PRINT_REG_PC	test/asan/TestCases/Linux/ptrace.cc	29;"	d	file:
PRINT_REG_PC	test/asan/TestCases/Linux/ptrace.cc	36;"	d	file:
PRINT_REG_PC	test/asan/TestCases/Linux/ptrace.cc	43;"	d	file:
PRINT_REG_PC	test/asan/TestCases/Linux/ptrace.cc	50;"	d	file:
PRINT_REG_PC	test/asan/TestCases/Linux/ptrace.cc	59;"	d	file:
PRINT_REG_PC	test/asan/TestCases/Linux/ptrace.cc	66;"	d	file:
PROD	lib/builtins/hexagon/dfdiv.S	/^		PROD = abs(Q)$/;"	d
PROD	lib/builtins/hexagon/dfdiv.S	/^		PROD = asl(PROD,EXPB)$/;"	d
PROD	lib/builtins/hexagon/dfdiv.S	/^		PROD = combine(##0x7ff00000,#0)$/;"	d
PROD	lib/builtins/hexagon/dfdiv.S	/^		PROD = extractu(B,#SF_MANTBITS,#DF_MANTBITS-SF_MANTBITS)$/;"	d
PROD	lib/builtins/hexagon/dfdiv.S	/^		PROD = extractu(DENOM,#SF_MANTBITS,#DF_MANTBITS-SF_MANTBITS)$/;"	d
PROD	lib/builtins/hexagon/dfdiv.S	/^		PROD = lsr(PROD,EXPB)					\/\/ shift out bits$/;"	d
PROD	lib/builtins/hexagon/dfdiv.S	/^		PROD = mpyu(RECIPEST,REMHI); \\$/;"	d
PROD	lib/builtins/hexagon/dfdiv.S	/^		PROD = neg(Q)$/;"	d
PROD	lib/builtins/hexagon/dfdiv.S	/^#define PROD r7:6$/;"	d
PROD	lib/builtins/hexagon/dfsqrt.S	/^		PROD = asl(FRACRAD,SHIFTAMT)		\/\/ fracrad<<(2+exp1)$/;"	d
PROD	lib/builtins/hexagon/dfsqrt.S	/^		PROD = extractu(A,#SF_MANTBITS+1,#DF_MANTBITS-SF_MANTBITS)$/;"	d
PROD	lib/builtins/hexagon/dfsqrt.S	/^		PROD = mpyu(ROOTHI,ROOTHI)$/;"	d
PROD	lib/builtins/hexagon/dfsqrt.S	/^		PROD = mpyu(ROOTHI,ROOTLO)$/;"	d
PROD	lib/builtins/hexagon/dfsqrt.S	/^		PROD = mpyu(ROOTLO,ROOTLO)$/;"	d
PROD	lib/builtins/hexagon/dfsqrt.S	/^#define PROD r15:14$/;"	d
PRODHI	lib/builtins/hexagon/dfdiv.S	/^		PRODHI = setbit(PRODHI,#DF_MANTBITS-32+FUDGE2)$/;"	d
PRODHI	lib/builtins/hexagon/dfdiv.S	/^#define PRODHI r7$/;"	d
PRODHI	lib/builtins/hexagon/dfsqrt.S	/^#define PRODHI r15$/;"	d
PRODLO	lib/builtins/hexagon/dfdiv.S	/^		PRODLO = # ## 0; \\$/;"	d
PRODLO	lib/builtins/hexagon/dfdiv.S	/^#define PRODLO r6$/;"	d
PRODLO	lib/builtins/hexagon/dfsqrt.S	/^#define PRODLO r14$/;"	d
PROD_NEG	lib/builtins/hexagon/dffma.S	/^		PROD_NEG = !cmp.gt(TMP,#-1)$/;"	d
PROD_NEG	lib/builtins/hexagon/dffma.S	/^#define PROD_NEG p3$/;"	d
PROFILE_ASAN_MAPPING	lib/asan/asan_mapping.h	246;"	d
PROFILE_ASAN_MAPPING	lib/asan/asan_mapping.h	248;"	d
PROFILE_INSTRPROFILINGUTIL_H	lib/profile/InstrProfilingUtil.h	11;"	d
PROFILE_INSTRPROFILING_H_	lib/profile/InstrProfiling.h	11;"	d
PROFILE_INSTRPROFILING_INTERNALH_	lib/profile/InstrProfilingInternal.h	11;"	d
PROFILE_INSTRPROFILING_PORT_H_	lib/profile/InstrProfilingPort.h	14;"	d
PROFILE_INSTRPROFILING_WINDOWS_MMAP_H	lib/profile/WindowsMMap.h	11;"	d
PROF_CNTS_START	lib/profile/InstrProfilingPlatformLinux.c	21;"	d	file:
PROF_CNTS_STOP	lib/profile/InstrProfilingPlatformLinux.c	22;"	d	file:
PROF_DATA_START	lib/profile/InstrProfilingPlatformLinux.c	17;"	d	file:
PROF_DATA_STOP	lib/profile/InstrProfilingPlatformLinux.c	18;"	d	file:
PROF_ERR	lib/profile/InstrProfilingPort.h	103;"	d
PROF_NAME_START	lib/profile/InstrProfilingPlatformLinux.c	19;"	d	file:
PROF_NAME_STOP	lib/profile/InstrProfilingPlatformLinux.c	20;"	d	file:
PROF_NOTE	lib/profile/InstrProfilingPort.h	109;"	d
PROF_VNODES_START	lib/profile/InstrProfilingPlatformLinux.c	23;"	d	file:
PROF_VNODES_STOP	lib/profile/InstrProfilingPlatformLinux.c	24;"	d	file:
PROF_WARN	lib/profile/InstrProfilingPort.h	106;"	d
PROT_EXEC	lib/profile/WindowsMMap.h	24;"	d
PROT_READ	lib/profile/WindowsMMap.h	22;"	d
PROT_WRITE	lib/profile/WindowsMMap.h	23;"	d
PR_SET_PTRACER	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	65;"	d	file:
PTHREAD_ABI_BASE	lib/tsan/rtl/tsan_interceptors.cc	80;"	d	file:
PTHREAD_ABI_BASE	lib/tsan/rtl/tsan_interceptors.cc	82;"	d	file:
PTHREAD_BARRIER_SERIAL_THREAD	lib/tsan/rtl/tsan_interceptors.cc	/^const int PTHREAD_BARRIER_SERIAL_THREAD = -1;$/;"	v
PTHREAD_BARRIER_SERIAL_THREAD	lib/tsan/rtl/tsan_interceptors.cc	/^const int PTHREAD_BARRIER_SERIAL_THREAD = 1234567;$/;"	v
PTHREAD_CREATE	lib/sanitizer_common/tests/sanitizer_pthread_wrappers.h	/^inline void PTHREAD_CREATE(pthread_t *thread, void *attr,$/;"	f
PTHREAD_CREATE	lib/sanitizer_common/tests/sanitizer_pthread_wrappers.h	26;"	d
PTHREAD_INTROSPECTION_THREAD_CREATE	lib/tsan/rtl/tsan_platform_mac.cc	/^static const uptr PTHREAD_INTROSPECTION_THREAD_CREATE = 1;$/;"	m	namespace:__tsan	file:
PTHREAD_INTROSPECTION_THREAD_TERMINATE	lib/tsan/rtl/tsan_platform_mac.cc	/^static const uptr PTHREAD_INTROSPECTION_THREAD_TERMINATE = 3;$/;"	m	namespace:__tsan	file:
PTHREAD_JOIN	lib/sanitizer_common/tests/sanitizer_pthread_wrappers.h	/^inline void PTHREAD_JOIN(pthread_t thread, void **value_ptr) {$/;"	f
PTHREAD_JOIN	lib/sanitizer_common/tests/sanitizer_pthread_wrappers.h	27;"	d
PTHREAD_KEY_2NDLEVEL_SIZE	test/lsan/TestCases/Linux/use_tls_pthread_specific_dynamic.cc	/^const unsigned PTHREAD_KEY_2NDLEVEL_SIZE = 32;$/;"	v
PTHREAD_KEY_2NDLEVEL_SIZE	test/lsan/TestCases/Linux/use_tls_pthread_specific_static.cc	/^const unsigned PTHREAD_KEY_2NDLEVEL_SIZE = 32;$/;"	v
PTHREAD_KEY_INVALID	test/lsan/TestCases/many_tls_keys.cc	/^static const int PTHREAD_KEY_INVALID = 0xffffffff;$/;"	v	file:
PTHREAD_MUTEX_RECURSIVE	lib/tsan/rtl/tsan_interceptors.cc	/^const int PTHREAD_MUTEX_RECURSIVE = 1;$/;"	v
PTHREAD_MUTEX_RECURSIVE	lib/tsan/rtl/tsan_interceptors.cc	/^const int PTHREAD_MUTEX_RECURSIVE = 2;$/;"	v
PTHREAD_MUTEX_RECURSIVE_NP	lib/tsan/rtl/tsan_interceptors.cc	/^const int PTHREAD_MUTEX_RECURSIVE_NP = 1;$/;"	v
PTHREAD_MUTEX_RECURSIVE_NP	lib/tsan/rtl/tsan_interceptors.cc	/^const int PTHREAD_MUTEX_RECURSIVE_NP = 2;$/;"	v
PTR	test/asan/TestCases/debug_mapping.cc	10;"	d	file:
PTR	test/asan/TestCases/debug_mapping.cc	12;"	d	file:
PTR	test/asan/TestCases/debug_stacks.cc	11;"	d	file:
PTR	test/asan/TestCases/debug_stacks.cc	9;"	d	file:
PTRDIFF_T	lib/interception/interception.h	/^typedef __sanitizer::sptr    PTRDIFF_T;$/;"	t
PTR_FMT	test/asan/TestCases/debug_double_free.cc	14;"	d	file:
PTR_FMT	test/asan/TestCases/debug_double_free.cc	16;"	d	file:
PTR_FMT	test/asan/TestCases/debug_double_free.cc	20;"	d	file:
PTR_FMT	test/asan/TestCases/debug_double_free.cc	22;"	d	file:
PTR_FMT	test/asan/TestCases/debug_report.cc	29;"	d	file:
PTR_FMT	test/asan/TestCases/debug_report.cc	31;"	d	file:
PTR_FMT	test/asan/TestCases/debug_report.cc	35;"	d	file:
PTR_FMT	test/asan/TestCases/debug_report.cc	37;"	d	file:
PTR_TO_REAL	lib/interception/interception.h	170;"	d
PThreadKey	lib/scudo/scudo_tsd_exclusive.cpp	/^static pthread_key_t PThreadKey;$/;"	m	namespace:__scudo	file:
PThreadKey	lib/scudo/scudo_tsd_shared.cpp	/^pthread_key_t PThreadKey;$/;"	m	namespace:__scudo	file:
PThreadKey	lib/xray/xray_basic_logging.cc	/^static pthread_key_t PThreadKey;$/;"	m	namespace:__xray	file:
P_CARRY	lib/builtins/hexagon/dffma.S	/^		P_CARRY = cmp.gtu(STICKIES,ZERO)	\/\/ If we have sticky bits from C shift$/;"	d
P_CARRY	lib/builtins/hexagon/dffma.S	/^#define P_CARRY p3$/;"	d
P_CARRY0	lib/builtins/hexagon/dfsqrt.S	/^		P_CARRY0 = cmp.eq(r0,r0)$/;"	d
P_CARRY0	lib/builtins/hexagon/dfsqrt.S	/^#define P_CARRY0 p1$/;"	d
P_CARRY1	lib/builtins/hexagon/dfsqrt.S	/^		P_CARRY1 = cmp.eq(r0,r0)$/;"	d
P_CARRY1	lib/builtins/hexagon/dfsqrt.S	/^#define P_CARRY1 p2$/;"	d
P_CARRY2	lib/builtins/hexagon/dfsqrt.S	/^		P_CARRY2 = cmp.eq(r0,r0)$/;"	d
P_CARRY2	lib/builtins/hexagon/dfsqrt.S	/^#define P_CARRY2 p3$/;"	d
P_EXP1	lib/builtins/hexagon/dfsqrt.S	/^		P_EXP1 = cmp.gtu(SHIFTAMT,#0)$/;"	d
P_EXP1	lib/builtins/hexagon/dfsqrt.S	/^#define P_EXP1 p1$/;"	d
P_INF	lib/builtins/hexagon/dfdiv.S	/^		P_INF = dfclass(A,#DFCLASS_INFINITE)$/;"	d
P_INF	lib/builtins/hexagon/dfdiv.S	/^		P_INF = dfclass(A,#DFCLASS_NONINFINITE)	\/\/ non-infinite$/;"	d
P_INF	lib/builtins/hexagon/dfdiv.S	/^		P_INF = dfclass(B,#DFCLASS_INFINITE)$/;"	d
P_INF	lib/builtins/hexagon/dfdiv.S	/^		P_INF = dfclass(B,#DFCLASS_NONZERO)	\/\/ nonzero$/;"	d
P_INF	lib/builtins/hexagon/dfdiv.S	/^#define P_INF p1$/;"	d
P_NEG	lib/builtins/hexagon/dfsqrt.S	/^#define P_NEG p1$/;"	d
P_TMP	lib/builtins/hexagon/dfdiv.S	/^		P_TMP = bitsclr(PRODLO,#(1<<FUDGE2)-1)$/;"	d
P_TMP	lib/builtins/hexagon/dfdiv.S	/^		P_TMP = bitsset(PRODHI,TMP)		\/\/ but a bunch of bits set in the unrounded abs(quotient)?$/;"	d
P_TMP	lib/builtins/hexagon/dfdiv.S	/^		P_TMP = cmp.eq(REM,TMPPAIR)$/;"	d
P_TMP	lib/builtins/hexagon/dfdiv.S	/^		P_TMP = cmp.gt(EXPA,##DF_BIAS+DF_BIAS)		\/\/ overflow$/;"	d
P_TMP	lib/builtins/hexagon/dfdiv.S	/^		P_TMP = cmp.gt(EXPA,#0)$/;"	d
P_TMP	lib/builtins/hexagon/dfdiv.S	/^		P_TMP = cmp.gtu(B,TMPPAIR)$/;"	d
P_TMP	lib/builtins/hexagon/dfdiv.S	/^		P_TMP = cmp.gtu(DENOM,REM)$/;"	d
P_TMP	lib/builtins/hexagon/dfdiv.S	/^		P_TMP = dfclass(A,#DFCLASS_NORMAL)$/;"	d
P_TMP	lib/builtins/hexagon/dfdiv.S	/^		P_TMP = dfclass(A,#DFCLASS_NUMBER)$/;"	d
P_TMP	lib/builtins/hexagon/dfdiv.S	/^		P_TMP = dfclass(B,#DFCLASS_NUMBER)$/;"	d
P_TMP	lib/builtins/hexagon/dfdiv.S	/^		P_TMP = dfcmp.eq(TMPPAIR,B)		\/\/ Is everything zero in the rounded value...$/;"	d
P_TMP	lib/builtins/hexagon/dfdiv.S	/^#define P_TMP p0$/;"	d
P_TMP	lib/builtins/hexagon/dffma.S	/^		P_TMP = !cmp.gt(EXPA,TMP)$/;"	d
P_TMP	lib/builtins/hexagon/dffma.S	/^		P_TMP = !cmp.gt(TMP,#-1)$/;"	d
P_TMP	lib/builtins/hexagon/dffma.S	/^		P_TMP = cmp.gt(CH,#-1)$/;"	d
P_TMP	lib/builtins/hexagon/dffma.S	/^		P_TMP = cmp.gt(EXPA,#1)$/;"	d
P_TMP	lib/builtins/hexagon/dffma.S	/^		P_TMP = cmp.gt(EXPC,#63)$/;"	d
P_TMP	lib/builtins/hexagon/dffma.S	/^		P_TMP = cmp.gtu(ONE,CTMP)		\/\/ is result true zero?$/;"	d
P_TMP	lib/builtins/hexagon/dffma.S	/^		P_TMP = dfclass(A,#2)$/;"	d
P_TMP	lib/builtins/hexagon/dffma.S	/^		P_TMP = dfclass(B,#2)$/;"	d
P_TMP	lib/builtins/hexagon/dffma.S	/^		P_TMP = dfclass(C,#2)$/;"	d
P_TMP	lib/builtins/hexagon/dffma.S	/^#define P_TMP p0$/;"	d
P_TMP	lib/builtins/hexagon/dfsqrt.S	/^		P_TMP = cmp.eq(REM_LO,ZERO)			\/\/ is the low part zero$/;"	d
P_TMP	lib/builtins/hexagon/dfsqrt.S	/^		P_TMP = cmp.gt(AH,#-1)$/;"	d
P_TMP	lib/builtins/hexagon/dfsqrt.S	/^		P_TMP = dfclass(A,#DFCLASS_INFINITE)$/;"	d
P_TMP	lib/builtins/hexagon/dfsqrt.S	/^		P_TMP = dfclass(A,#DFCLASS_NAN)$/;"	d
P_TMP	lib/builtins/hexagon/dfsqrt.S	/^		P_TMP = dfclass(A,#DFCLASS_ZERO)			\/\/ zero?$/;"	d
P_TMP	lib/builtins/hexagon/dfsqrt.S	/^#define P_TMP p0$/;"	d
P_TMP2	lib/builtins/hexagon/dfdiv.S	/^		P_TMP2 = dfclass(B,#DFCLASS_NORMAL)$/;"	d
P_TMP2	lib/builtins/hexagon/dfdiv.S	/^#define P_TMP2 p1$/;"	d
P_ZERO	lib/builtins/hexagon/dfdiv.S	/^		P_ZERO = dfclass(A,#DFCLASS_NONZERO)		\/\/ nonzero$/;"	d
P_ZERO	lib/builtins/hexagon/dfdiv.S	/^		P_ZERO = dfclass(A,#DFCLASS_ZERO)$/;"	d
P_ZERO	lib/builtins/hexagon/dfdiv.S	/^		P_ZERO = dfclass(B,#DFCLASS_NONINFINITE)	\/\/ non-infinite$/;"	d
P_ZERO	lib/builtins/hexagon/dfdiv.S	/^		P_ZERO = dfclass(B,#DFCLASS_ZERO)$/;"	d
P_ZERO	lib/builtins/hexagon/dfdiv.S	/^#define P_ZERO p2$/;"	d
Packed	test/msan/dtor-bit-fields.cc	/^struct Packed {$/;"	s	file:
Packed5	lib/asan/tests/asan_test.cc	/^struct Packed5 {$/;"	s	file:
PackedCounterArray	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^    PackedCounterArray(u64 num_counters, u64 max_value, MemoryMapperT *mapper)$/;"	f	class:SizeClassAllocator64::PackedCounterArray
PackedCounterArray	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  class PackedCounterArray {$/;"	c	class:SizeClassAllocator64
PackedHeader	lib/scudo/scudo_allocator.h	/^typedef u64 PackedHeader;$/;"	t	namespace:__scudo
Padding	lib/xray/xray_interface_internal.h	/^  unsigned char Padding[13]; \/\/ Need 32 bytes$/;"	m	struct:XRaySledEntry
PageAlignedAddr	lib/xray/xray_interface.cc	/^  void *PageAlignedAddr;$/;"	m	class:__xray::MProtectHelper	file:
PageSizeCached	lib/sanitizer_common/sanitizer_common.cc	/^uptr PageSizeCached;$/;"	m	namespace:__sanitizer	file:
Pair	lib/fuzzer/FuzzerTracePC.h	/^  struct Pair {$/;"	s	struct:fuzzer::TableOfRecentCompares
ParamOriginTest	lib/msan/tests/msan_test.cc	/^NOINLINE void ParamOriginTest(int param, U4 origin) {$/;"	f
Parent	lib/xray/xray_function_call_trie.h	/^    Node *Parent;$/;"	m	struct:__xray::FunctionCallTrie::Node
Parent	test/asan/TestCases/Windows/wrong_downcast_on_heap.cc	/^class Parent {$/;"	c	file:
Parent	test/asan/TestCases/Windows/wrong_downcast_on_stack.cc	/^class Parent {$/;"	c	file:
Parse	lib/fuzzer/FuzzerMerge.cpp	/^bool Merger::Parse(const std::string &Str, bool ParseCoverage) {$/;"	f	class:fuzzer::Merger
Parse	lib/fuzzer/FuzzerMerge.cpp	/^bool Merger::Parse(std::istream &IS, bool ParseCoverage) {$/;"	f	class:fuzzer::Merger
Parse	lib/sanitizer_common/sanitizer_flag_parser.h	/^  virtual bool Parse(const char *value) { return false; }$/;"	f	class:__sanitizer::FlagHandlerBase
Parse	lib/sanitizer_common/sanitizer_flag_parser.h	/^inline bool FlagHandler<HandleSignalMode>::Parse(const char *value) {$/;"	f	class:__sanitizer::FlagHandler
Parse	lib/sanitizer_common/sanitizer_flag_parser.h	/^inline bool FlagHandler<bool>::Parse(const char *value) {$/;"	f	class:__sanitizer::FlagHandler
Parse	lib/sanitizer_common/sanitizer_flag_parser.h	/^inline bool FlagHandler<const char *>::Parse(const char *value) {$/;"	f	class:__sanitizer::FlagHandler
Parse	lib/sanitizer_common/sanitizer_flag_parser.h	/^inline bool FlagHandler<int>::Parse(const char *value) {$/;"	f	class:__sanitizer::FlagHandler
Parse	lib/sanitizer_common/sanitizer_flag_parser.h	/^inline bool FlagHandler<uptr>::Parse(const char *value) {$/;"	f	class:__sanitizer::FlagHandler
Parse	lib/sanitizer_common/sanitizer_suppressions.cc	/^void SuppressionContext::Parse(const char *str) {$/;"	f	class:__sanitizer::SuppressionContext
ParseArguments	lib/sanitizer_common/scripts/cpplint.py	/^def ParseArguments(args):$/;"	f
ParseBlockHeader	lib/xray/tests/unit/profile_collector_test.cc	/^std::tuple<u32, u32, u64> ParseBlockHeader(XRayBuffer B) {$/;"	f	namespace:__xray::__anon22
ParseBool	lib/sanitizer_common/sanitizer_flag_parser.h	/^inline bool ParseBool(const char *value, bool *b) {$/;"	f	namespace:__sanitizer
ParseCommandOutput	lib/sanitizer_common/sanitizer_symbolizer_mac.cc	/^static bool ParseCommandOutput(const char *str, uptr addr, char **out_name,$/;"	f	namespace:__sanitizer
ParseCustomString	lib/fuzzer/FuzzerIOWindows.cpp	/^static size_t ParseCustomString(const std::string &Ref, size_t Offset,$/;"	f	namespace:fuzzer
ParseDecimal	lib/sanitizer_common/sanitizer_procmaps_common.cc	/^uptr ParseDecimal(const char **p) {$/;"	f	namespace:__sanitizer
ParseDictionaryFile	lib/fuzzer/FuzzerUtil.cpp	/^bool ParseDictionaryFile(const std::string &Text, Vector<Unit> *Units) {$/;"	f	namespace:fuzzer
ParseDir	lib/fuzzer/FuzzerIOWindows.cpp	/^static size_t ParseDir(const std::string &FileName, const size_t Offset) {$/;"	f	namespace:fuzzer
ParseDrive	lib/fuzzer/FuzzerIOWindows.cpp	/^static size_t ParseDrive(const std::string &FileName, const size_t Offset,$/;"	f	namespace:fuzzer
ParseFile	lib/sanitizer_common/sanitizer_flag_parser.cc	/^bool FlagParser::ParseFile(const char *path, bool ignore_missing) {$/;"	f	class:__sanitizer::FlagParser
ParseFileLineInfo	lib/sanitizer_common/sanitizer_symbolizer_libcdep.cc	/^static const char *ParseFileLineInfo(AddressInfo *info, const char *str) {$/;"	f	namespace:__sanitizer
ParseFileName	lib/fuzzer/FuzzerIOWindows.cpp	/^static size_t ParseFileName(const std::string &FileName, const size_t Offset) {$/;"	f	namespace:fuzzer
ParseFlags	lib/fuzzer/FuzzerDriver.cpp	/^static void ParseFlags(const Vector<std::string> &Args) {$/;"	f	namespace:fuzzer
ParseFrameDescription	lib/asan/asan_report.cc	/^bool ParseFrameDescription(const char *frame_descr,$/;"	f	namespace:__asan
ParseFromFile	lib/sanitizer_common/sanitizer_suppressions.cc	/^void SuppressionContext::ParseFromFile(const char *filename) {$/;"	f	class:__sanitizer::SuppressionContext
ParseHex	lib/sanitizer_common/sanitizer_procmaps_common.cc	/^uptr ParseHex(const char **p) {$/;"	f	namespace:__sanitizer
ParseLocation	lib/fuzzer/FuzzerIOWindows.cpp	/^static size_t ParseLocation(const std::string &FileName) {$/;"	f	namespace:fuzzer
ParseNolintSuppressions	lib/sanitizer_common/scripts/cpplint.py	/^def ParseNolintSuppressions(filename, raw_line, linenum, error):$/;"	f
ParseNumber	lib/sanitizer_common/sanitizer_procmaps_common.cc	/^static uptr ParseNumber(const char **p, int base) {$/;"	f	namespace:__sanitizer
ParseOneDictionaryEntry	lib/fuzzer/FuzzerUtil.cpp	/^bool ParseOneDictionaryEntry(const std::string &Str, Unit *U) {$/;"	f	namespace:fuzzer
ParseOneFlag	lib/fuzzer/FuzzerDriver.cpp	/^static bool ParseOneFlag(const char *Param) {$/;"	f	namespace:fuzzer
ParseOrExit	lib/fuzzer/FuzzerMerge.cpp	/^void Merger::ParseOrExit(std::istream &IS, bool ParseCoverage) {$/;"	f	class:fuzzer::Merger
ParseProfile	lib/xray/tests/unit/profile_collector_test.cc	/^std::tuple<Profile, const char *> ParseProfile(const char *P) {$/;"	f	namespace:__xray::__anon22
ParseServerAndShare	lib/fuzzer/FuzzerIOWindows.cpp	/^static size_t ParseServerAndShare(const std::string &FileName,$/;"	f	namespace:fuzzer
ParseString	lib/sanitizer_common/sanitizer_flag_parser.cc	/^void FlagParser::ParseString(const char *s) {$/;"	f	class:__sanitizer::FlagParser
ParseSummary	lib/fuzzer/FuzzerMerge.cpp	/^Set<uint32_t> Merger::ParseSummary(std::istream &IS) {$/;"	f	class:fuzzer::Merger
ParseSymbolizeDataOutput	lib/sanitizer_common/sanitizer_symbolizer_libcdep.cc	/^void ParseSymbolizeDataOutput(const char *str, DataInfo *info) {$/;"	f	namespace:__sanitizer
ParseSymbolizePCOutput	lib/sanitizer_common/sanitizer_symbolizer_libcdep.cc	/^void ParseSymbolizePCOutput(const char *str, SymbolizedStack *res) {$/;"	f	namespace:__sanitizer
PatchOpcodes	lib/xray/xray_AArch64.cc	/^enum class PatchOpcodes : uint32_t {$/;"	c	namespace:__xray	file:
PatchOpcodes	lib/xray/xray_arm.cc	/^enum class PatchOpcodes : uint32_t {$/;"	c	namespace:__xray	file:
Path	lib/fuzzer/FuzzerShmemPosix.cpp	/^std::string SharedMemoryRegion::Path(const char *Name) {$/;"	f	class:fuzzer::SharedMemoryRegion
Path	lib/fuzzer/FuzzerShmemWindows.cpp	/^std::string SharedMemoryRegion::Path(const char *Name) {$/;"	f	class:fuzzer::SharedMemoryRegion
Path	lib/xray/tests/unit/profile_collector_test.cc	/^  std::vector<int32_t> Path;$/;"	m	struct:__xray::__anon22::Profile	file:
Payload	lib/esan/esan_hashtable.h	/^    DataTy Payload;$/;"	m	struct:__esan::HashTable::HashEntry
PerClass	lib/sanitizer_common/sanitizer_allocator_local_cache.h	/^  struct PerClass {$/;"	s	struct:SizeClassAllocator32LocalCache
PerClass	lib/sanitizer_common/sanitizer_allocator_local_cache.h	/^  struct PerClass {$/;"	s	struct:SizeClassAllocator64LocalCache
PersistentAlloc	lib/sanitizer_common/sanitizer_persistent_allocator.h	/^inline void *PersistentAlloc(uptr sz) {$/;"	f	namespace:__sanitizer
PersistentAllocator	lib/sanitizer_common/sanitizer_persistent_allocator.h	/^class PersistentAllocator {$/;"	c	namespace:__sanitizer
PersistentAutoDictionary	lib/fuzzer/FuzzerMutate.h	/^  Dictionary PersistentAutoDictionary;$/;"	m	class:fuzzer::MutationDispatcher
PidChars	lib/profile/InstrProfilingFile.c	/^  char PidChars[MAX_PID_SIZE];$/;"	m	struct:lprofFilename	file:
PlatformDemangle	lib/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc	/^const char *Symbolizer::PlatformDemangle(const char *name) {$/;"	f	class:__sanitizer::Symbolizer
PlatformDemangle	lib/sanitizer_common/sanitizer_symbolizer_win.cc	/^const char *Symbolizer::PlatformDemangle(const char *name) {$/;"	f	class:__sanitizer::Symbolizer
PlatformHasDifferentMemcpyAndMemmove	lib/sanitizer_common/sanitizer_mac.cc	/^bool PlatformHasDifferentMemcpyAndMemmove() {$/;"	f	namespace:__sanitizer
PlatformInit	lib/sanitizer_common/sanitizer_symbolizer_markup.cc	/^Symbolizer *Symbolizer::PlatformInit() {$/;"	f	class:__sanitizer::Symbolizer
PlatformInit	lib/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc	/^Symbolizer *Symbolizer::PlatformInit() {$/;"	f	class:__sanitizer::Symbolizer
PlatformInit	lib/sanitizer_common/sanitizer_symbolizer_win.cc	/^Symbolizer *Symbolizer::PlatformInit() {$/;"	f	class:__sanitizer::Symbolizer
PlatformPrepareForSandboxing	lib/sanitizer_common/sanitizer_fuchsia.cc	/^void PlatformPrepareForSandboxing(__sanitizer_sandbox_arguments *args) {}$/;"	f	namespace:__sanitizer
PlatformPrepareForSandboxing	lib/sanitizer_common/sanitizer_posix_libcdep.cc	/^void PlatformPrepareForSandboxing(__sanitizer_sandbox_arguments *args) {$/;"	f	namespace:__sanitizer
PlatformPrepareForSandboxing	lib/sanitizer_common/sanitizer_win.cc	/^void PlatformPrepareForSandboxing(__sanitizer_sandbox_arguments *args) {}$/;"	f	namespace:__sanitizer
PlatformTSDDtor	lib/asan/asan_fuchsia.cc	/^void PlatformTSDDtor(void *tsd) { UNREACHABLE(__func__); }$/;"	f	namespace:__asan
PlatformTSDDtor	lib/asan/asan_posix.cc	/^void PlatformTSDDtor(void *tsd) {$/;"	f	namespace:__asan
PlatformTSDDtor	lib/asan/asan_rtems.cc	/^void PlatformTSDDtor(void *tsd) { UNREACHABLE(__func__); }$/;"	f	namespace:__asan
PlatformTSDDtor	lib/asan/asan_win.cc	/^void PlatformTSDDtor(void *tsd) {$/;"	f	namespace:__asan
Pointer	lib/ubsan/ubsan_diag.h	/^      const void *Pointer;$/;"	m	union:__ubsan::Diag::Arg::__anon104
PointerIsMine	lib/sanitizer_common/sanitizer_allocator_combined.h	/^  bool PointerIsMine(void *p) {$/;"	f	class:CombinedAllocator
PointerIsMine	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^  bool PointerIsMine(const void *p) {$/;"	f	class:SizeClassAllocator32
PointerIsMine	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  bool PointerIsMine(const void *p) {$/;"	f	class:SizeClassAllocator64
PointerIsMine	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^  bool PointerIsMine(const void *p) {$/;"	f	class:LargeMmapAllocator
PointerOverflowData	lib/ubsan/ubsan_handlers.h	/^struct PointerOverflowData {$/;"	s	namespace:__ubsan
PointerToCallAtoi	lib/asan/tests/asan_str_test.cc	/^typedef void(*PointerToCallAtoi)(const char*);$/;"	t	file:
PointerToCallStrtol	lib/asan/tests/asan_str_test.cc	/^typedef void(*PointerToCallStrtol)(const char*, char**, int);$/;"	t	file:
PointerToCompactPtr	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  CompactPtrT PointerToCompactPtr(uptr base, uptr ptr) const {$/;"	f	class:SizeClassAllocator64
PointerToStrChr1	lib/asan/tests/asan_str_test.cc	/^typedef char*(*PointerToStrChr1)(const char*, int);$/;"	t	file:
PointerToStrChr2	lib/asan/tests/asan_str_test.cc	/^typedef char*(*PointerToStrChr2)(char*, int);$/;"	t	file:
PointerToStrCmp	lib/asan/tests/asan_str_test.cc	/^typedef int(*PointerToStrCmp)(const char*, const char*);$/;"	t	file:
PointerToStrNCmp	lib/asan/tests/asan_str_test.cc	/^typedef int(*PointerToStrNCmp)(const char*, const char*, size_t);$/;"	t	file:
PointsInsideTheSameVariable	lib/asan/asan_descriptions.cc	/^bool GlobalAddressDescription::PointsInsideTheSameVariable($/;"	f	class:__asan::GlobalAddressDescription
PointsIntoChunk	lib/asan/asan_allocator.cc	/^uptr PointsIntoChunk(void* p) {$/;"	f	namespace:__lsan
PointsIntoChunk	lib/lsan/lsan_allocator.cc	/^uptr PointsIntoChunk(void* p) {$/;"	f	namespace:__lsan
PoisonAlignedStackMemory	lib/asan/asan_poisoning.cc	/^static void PoisonAlignedStackMemory(uptr addr, uptr size, bool do_poison) {$/;"	f	file:
PoisonAll	lib/asan/asan_fake_stack.cc	/^void FakeStack::PoisonAll(u8 magic) {$/;"	f	class:__asan::FakeStack
PoisonMemory	lib/msan/msan_poisoning.cc	/^void PoisonMemory(const void *dst, uptr size, StackTrace *stack) {$/;"	f	namespace:__msan
PoisonRedZones	lib/asan/asan_globals.cc	/^ALWAYS_INLINE void PoisonRedZones(const Global &g) {$/;"	f	namespace:__asan
PoisonShadow	lib/asan/asan_poisoning.cc	/^void PoisonShadow(uptr addr, uptr size, u8 value) {$/;"	f	namespace:__asan
PoisonShadowForGlobal	lib/asan/asan_globals.cc	/^ALWAYS_INLINE void PoisonShadowForGlobal(const Global *g, u8 value) {$/;"	f	namespace:__asan
PoisonShadowPartialRightRedzone	lib/asan/asan_poisoning.cc	/^void PoisonShadowPartialRightRedzone(uptr addr,$/;"	f	namespace:__asan
PoisonStack	test/msan/Linux/fopencookie.cc	/^void PoisonStack() { char a[8192]; }$/;"	f
Poisoned	lib/msan/tests/msan_test.cc	/^T Poisoned(T v = 0, T s = (T)(-1)) {$/;"	f
Pop	lib/sanitizer_common/sanitizer_lfstack.h	/^  T *Pop() {$/;"	f	struct:__sanitizer::LFStack
PopBack	lib/sanitizer_common/sanitizer_vector.h	/^  void PopBack() {$/;"	f	class:__sanitizer::Vector
PopStackFrames	lib/sanitizer_common/sanitizer_stacktrace.cc	/^void BufferedStackTrace::PopStackFrames(uptr count) {$/;"	f	class:__sanitizer::BufferedStackTrace
PopulateBatches	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^  bool PopulateBatches(AllocatorCache *c, SizeClassInfo *sci, uptr class_id,$/;"	f	class:SizeClassAllocator32
PopulateFreeArray	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  NOINLINE bool PopulateFreeArray(AllocatorStats *stat, uptr class_id,$/;"	f	class:SizeClassAllocator64
PopulateFreeList	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^  bool PopulateFreeList(AllocatorStats *stat, AllocatorCache *c,$/;"	f	class:SizeClassAllocator32
PositionHint	lib/fuzzer/FuzzerDictionary.h	/^  size_t PositionHint = std::numeric_limits<size_t>::max();$/;"	m	class:fuzzer::DictionaryEntry
PosixMemalignFromLocalPool	lib/asan/asan_malloc_linux.cc	/^static int PosixMemalignFromLocalPool(void **memptr, uptr alignment,$/;"	f	file:
Post	lib/fuzzer/FuzzerShmemFuchsia.cpp	/^void SharedMemoryRegion::Post(int Idx) {}$/;"	f	class:fuzzer::SharedMemoryRegion
Post	lib/fuzzer/FuzzerShmemPosix.cpp	/^void SharedMemoryRegion::Post(int Idx) {$/;"	f	class:fuzzer::SharedMemoryRegion
Post	lib/fuzzer/FuzzerShmemWindows.cpp	/^void SharedMemoryRegion::Post(int Idx) {$/;"	f	class:fuzzer::SharedMemoryRegion
PostClient	lib/fuzzer/FuzzerShmem.h	/^  void PostClient() {Post(1);}$/;"	f	class:fuzzer::SharedMemoryRegion
PostServer	lib/fuzzer/FuzzerShmem.h	/^  void PostServer() {Post(0);}$/;"	f	class:fuzzer::SharedMemoryRegion
PreInitAsStandalone	lib/ubsan/ubsan_init_standalone_preinit.cc	/^static void PreInitAsStandalone() {$/;"	f	namespace:__ubsan
PreferSmall	lib/fuzzer/FuzzerOptions.h	/^  bool PreferSmall = true;$/;"	m	struct:fuzzer::FuzzingOptions
PremapShadow	lib/asan/asan_premap_shadow.cc	/^uptr PremapShadow() {$/;"	f	namespace:__asan
PremapShadow	lib/hwasan/hwasan_dynamic_shadow.cc	/^static uptr PremapShadow() {$/;"	f	namespace:__hwasan
PremapShadowFailed	lib/asan/asan_premap_shadow.cc	/^bool PremapShadowFailed() {$/;"	f	namespace:__asan
PremapShadowSize	lib/asan/asan_premap_shadow.cc	/^uptr PremapShadowSize() {$/;"	f	namespace:__asan
PremapShadowSize	lib/hwasan/hwasan_dynamic_shadow.cc	/^static uptr PremapShadowSize() {$/;"	f	namespace:__hwasan
Prev	lib/xray/xray_segmented_array.h	/^    SegmentBase *Prev;$/;"	m	struct:__xray::Array::SegmentBase
Primary	lib/scudo/scudo_allocator_combined.h	/^  PrimaryAllocator Primary;$/;"	m	class:CombinedAllocator
PrimaryAllocator	lib/asan/asan_allocator.h	/^typedef SizeClassAllocator32<AP32> PrimaryAllocator;$/;"	t	namespace:__asan
PrimaryAllocator	lib/asan/asan_allocator.h	/^typedef SizeClassAllocator64<AP64> PrimaryAllocator;$/;"	t	namespace:__asan
PrimaryAllocator	lib/hwasan/hwasan_allocator.cc	/^typedef SizeClassAllocator32<AP32> PrimaryAllocator;$/;"	t	namespace:__hwasan	file:
PrimaryAllocator	lib/lsan/lsan_allocator.h	/^typedef SizeClassAllocator32<AP32> PrimaryAllocator;$/;"	t	namespace:__lsan
PrimaryAllocator	lib/lsan/lsan_allocator.h	/^typedef SizeClassAllocator64<AP64> PrimaryAllocator;$/;"	t	namespace:__lsan
PrimaryAllocator	lib/msan/msan_allocator.cc	/^  typedef SizeClassAllocator32<AP32> PrimaryAllocator;$/;"	t	namespace:__msan	file:
PrimaryAllocator	lib/msan/msan_allocator.cc	/^  typedef SizeClassAllocator64<AP64> PrimaryAllocator;$/;"	t	namespace:__msan	file:
PrimaryAllocator	lib/sanitizer_common/tests/sanitizer_allocator_testlib.cc	/^typedef SizeClassAllocator64<__AP64> PrimaryAllocator;$/;"	t	namespace:__anon59	file:
PrimaryAllocator	lib/tsan/rtl/tsan_rtl.h	/^typedef SizeClassAllocator32<AP32> PrimaryAllocator;$/;"	t	namespace:__tsan
PrimaryAllocator	lib/tsan/rtl/tsan_rtl.h	/^typedef SizeClassAllocator64<AP64> PrimaryAllocator;$/;"	t	namespace:__tsan
PrimaryAllocatorName	lib/sanitizer_common/sanitizer_allocator.cc	/^const char *PrimaryAllocatorName = "SizeClassAllocator";$/;"	m	namespace:__sanitizer	file:
PrimaryInternalAllocator	lib/sanitizer_common/sanitizer_allocator_internal.h	/^typedef SizeClassAllocator32<AP32> PrimaryInternalAllocator;$/;"	t	namespace:__sanitizer
PrimaryT	lib/scudo/scudo_allocator.h	/^typedef SizeClassAllocator64<AP64> PrimaryT;$/;"	t	namespace:__scudo
Print	lib/asan/asan_activation.cc	/^  void Print() {$/;"	f	struct:__asan::AsanDeactivatedFlags
Print	lib/asan/asan_descriptions.cc	/^void GlobalAddressDescription::Print(const char *bug_type) const {$/;"	f	class:__asan::GlobalAddressDescription
Print	lib/asan/asan_descriptions.cc	/^void HeapAddressDescription::Print() const {$/;"	f	class:__asan::HeapAddressDescription
Print	lib/asan/asan_descriptions.cc	/^void ShadowAddressDescription::Print() const {$/;"	f	class:__asan::ShadowAddressDescription
Print	lib/asan/asan_descriptions.cc	/^void StackAddressDescription::Print() const {$/;"	f	class:__asan::StackAddressDescription
Print	lib/asan/asan_descriptions.h	/^  void Print(const char *bug_descr = nullptr) const {$/;"	f	class:__asan::AddressDescription
Print	lib/asan/asan_errors.cc	/^void ErrorAllocTypeMismatch::Print() {$/;"	f	class:__asan::ErrorAllocTypeMismatch
Print	lib/asan/asan_errors.cc	/^void ErrorAllocationSizeTooBig::Print() {$/;"	f	class:__asan::ErrorAllocationSizeTooBig
Print	lib/asan/asan_errors.cc	/^void ErrorBadParamsToAnnotateContiguousContainer::Print() {$/;"	f	class:__asan::ErrorBadParamsToAnnotateContiguousContainer
Print	lib/asan/asan_errors.cc	/^void ErrorCallocOverflow::Print() {$/;"	f	class:__asan::ErrorCallocOverflow
Print	lib/asan/asan_errors.cc	/^void ErrorDeadlySignal::Print() {$/;"	f	class:__asan::ErrorDeadlySignal
Print	lib/asan/asan_errors.cc	/^void ErrorDoubleFree::Print() {$/;"	f	class:__asan::ErrorDoubleFree
Print	lib/asan/asan_errors.cc	/^void ErrorFreeNotMalloced::Print() {$/;"	f	class:__asan::ErrorFreeNotMalloced
Print	lib/asan/asan_errors.cc	/^void ErrorGeneric::Print() {$/;"	f	class:__asan::ErrorGeneric
Print	lib/asan/asan_errors.cc	/^void ErrorInvalidAlignedAllocAlignment::Print() {$/;"	f	class:__asan::ErrorInvalidAlignedAllocAlignment
Print	lib/asan/asan_errors.cc	/^void ErrorInvalidAllocationAlignment::Print() {$/;"	f	class:__asan::ErrorInvalidAllocationAlignment
Print	lib/asan/asan_errors.cc	/^void ErrorInvalidPointerPair::Print() {$/;"	f	class:__asan::ErrorInvalidPointerPair
Print	lib/asan/asan_errors.cc	/^void ErrorInvalidPosixMemalignAlignment::Print() {$/;"	f	class:__asan::ErrorInvalidPosixMemalignAlignment
Print	lib/asan/asan_errors.cc	/^void ErrorMallocUsableSizeNotOwned::Print() {$/;"	f	class:__asan::ErrorMallocUsableSizeNotOwned
Print	lib/asan/asan_errors.cc	/^void ErrorNewDeleteTypeMismatch::Print() {$/;"	f	class:__asan::ErrorNewDeleteTypeMismatch
Print	lib/asan/asan_errors.cc	/^void ErrorODRViolation::Print() {$/;"	f	class:__asan::ErrorODRViolation
Print	lib/asan/asan_errors.cc	/^void ErrorOutOfMemory::Print() {$/;"	f	class:__asan::ErrorOutOfMemory
Print	lib/asan/asan_errors.cc	/^void ErrorPvallocOverflow::Print() {$/;"	f	class:__asan::ErrorPvallocOverflow
Print	lib/asan/asan_errors.cc	/^void ErrorRssLimitExceeded::Print() {$/;"	f	class:__asan::ErrorRssLimitExceeded
Print	lib/asan/asan_errors.cc	/^void ErrorSanitizerGetAllocatedSizeNotOwned::Print() {$/;"	f	class:__asan::ErrorSanitizerGetAllocatedSizeNotOwned
Print	lib/asan/asan_errors.cc	/^void ErrorStringFunctionMemoryRangesOverlap::Print() {$/;"	f	class:__asan::ErrorStringFunctionMemoryRangesOverlap
Print	lib/asan/asan_errors.cc	/^void ErrorStringFunctionSizeOverflow::Print() {$/;"	f	class:__asan::ErrorStringFunctionSizeOverflow
Print	lib/asan/asan_errors.h	/^  void Print() {$/;"	f	struct:__asan::ErrorDescription
Print	lib/asan/asan_memory_profile.cc	/^  void Print(uptr top_percent, uptr max_number_of_contexts) {$/;"	f	class:__asan::HeapProfile
Print	lib/asan/asan_scariness_score.h	/^  void Print() const {$/;"	f	struct:__asan::ScarinessScoreBase
Print	lib/asan/asan_stats.cc	/^void AsanStats::Print() {$/;"	f	class:__asan::AsanStats
Print	lib/fuzzer/FuzzerDictionary.h	/^  void Print(const char *PrintAfter = "\\n") {$/;"	f	class:fuzzer::DictionaryEntry
Print	lib/fuzzer/FuzzerUtil.cpp	/^void Print(const Unit &v, const char *PrintAfter) {$/;"	f	namespace:fuzzer
Print	lib/hwasan/hwasan_report.cc	/^  void Print() const {$/;"	f	struct:__hwasan::HeapAddressDescription
Print	lib/sanitizer_common/sanitizer_allocator_size_class_map.h	/^  static void Print() {$/;"	f	class:SizeClassMap
Print	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  void Print() {$/;"	f	class:__sanitizer::DeadlockDetector
Print	lib/sanitizer_common/sanitizer_stacktrace_libcdep.cc	/^void StackTrace::Print() const {$/;"	f	class:__sanitizer::StackTrace
Print	lib/sanitizer_common/tests/sanitizer_bitvector_test.cc	/^void Print(const BV &bv) {$/;"	f
Print	lib/sanitizer_common/tests/sanitizer_bitvector_test.cc	/^void Print(const set<uptr> &s) {$/;"	f
PrintASCII	lib/fuzzer/FuzzerMutate.cpp	/^static void PrintASCII(const Word &W, const char *PrintAfter) {$/;"	f	namespace:fuzzer
PrintASCII	lib/fuzzer/FuzzerUtil.cpp	/^void PrintASCII(const Unit &U, const char *PrintAfter) {$/;"	f	namespace:fuzzer
PrintASCII	lib/fuzzer/FuzzerUtil.cpp	/^void PrintASCII(const uint8_t *Data, size_t Size, const char *PrintAfter) {$/;"	f	namespace:fuzzer
PrintASCIIByte	lib/fuzzer/FuzzerUtil.cpp	/^void PrintASCIIByte(uint8_t Byte) {$/;"	f	namespace:fuzzer
PrintAccessAndVarIntersection	lib/asan/asan_descriptions.cc	/^static void PrintAccessAndVarIntersection(const StackVarDescr &var, uptr addr,$/;"	f	namespace:__asan
PrintAccumulatedStats	lib/asan/asan_stats.cc	/^static void PrintAccumulatedStats() {$/;"	f	namespace:__asan
PrintAddressDescription	lib/asan/asan_descriptions.cc	/^void PrintAddressDescription(uptr addr, uptr access_size,$/;"	f	namespace:__asan
PrintAddressDescription	lib/hwasan/hwasan_report.cc	/^void PrintAddressDescription(uptr addr, uptr access_size) {$/;"	f	namespace:__hwasan
PrintAddressSpaceLayout	lib/asan/asan_rtl.cc	/^void PrintAddressSpaceLayout() {$/;"	f	namespace:__asan
PrintAddressSpaceLayout	lib/hwasan/hwasan_linux.cc	/^static void PrintAddressSpaceLayout() {$/;"	f	namespace:__hwasan
PrintCategories	lib/sanitizer_common/scripts/cpplint.py	/^def PrintCategories():$/;"	f
PrintCmdline	lib/sanitizer_common/sanitizer_common.cc	/^void PrintCmdline() {$/;"	f	namespace:__sanitizer
PrintContainerOverflowHint	lib/asan/asan_errors.cc	/^static void PrintContainerOverflowHint() {$/;"	f	namespace:__asan
PrintCorpus	lib/fuzzer/FuzzerCorpus.h	/^  void PrintCorpus() {$/;"	f	class:fuzzer::InputCorpus
PrintCorpusStats	lib/fuzzer/FuzzerOptions.h	/^  bool PrintCorpusStats = false;$/;"	m	struct:fuzzer::FuzzingOptions
PrintCoverage	lib/fuzzer/FuzzerOptions.h	/^  bool PrintCoverage = false;$/;"	m	struct:fuzzer::FuzzingOptions
PrintCoverage	lib/fuzzer/FuzzerTracePC.cpp	/^void TracePC::PrintCoverage() {$/;"	f	class:fuzzer::TracePC
PrintCurrentStack	lib/tsan/rtl/tsan_rtl_report.cc	/^void PrintCurrentStack(ThreadState *thr, uptr pc) {$/;"	f	namespace:__tsan
PrintCurrentStackSlow	lib/tsan/rtl/tsan_rtl_report.cc	/^void PrintCurrentStackSlow(uptr pc) {$/;"	f	namespace:__tsan
PrintDataFlow	lib/fuzzer/dataflow/DataFlow.cpp	/^static void PrintDataFlow(FILE *Out) {$/;"	f	file:
PrintErrorCounts	lib/sanitizer_common/scripts/cpplint.py	/^  def PrintErrorCounts(self):$/;"	m	class:_CppLintState
PrintFeatureSet	lib/fuzzer/FuzzerCorpus.h	/^  void PrintFeatureSet() {$/;"	f	class:fuzzer::InputCorpus
PrintFeatureSet	lib/fuzzer/FuzzerCorpus.h	/^  void PrintFeatureSet(const Vector<uint32_t> &FeatureSet) {$/;"	f	class:fuzzer::InputCorpus
PrintFiles	lib/sanitizer_common/scripts/sancov.py	/^def PrintFiles(files):$/;"	f
PrintFinalStats	lib/fuzzer/FuzzerLoop.cpp	/^void Fuzzer::PrintFinalStats() {$/;"	f	class:fuzzer::Fuzzer
PrintFinalStats	lib/fuzzer/FuzzerOptions.h	/^  bool PrintFinalStats = false;$/;"	m	struct:fuzzer::FuzzingOptions
PrintFlagDescriptions	lib/sanitizer_common/sanitizer_flag_parser.cc	/^void FlagParser::PrintFlagDescriptions() {$/;"	f	class:__sanitizer::FlagParser
PrintFunctions	lib/fuzzer/dataflow/DataFlow.cpp	/^static int PrintFunctions() {$/;"	f	file:
PrintGlobalLocation	lib/asan/asan_globals.cc	/^void PrintGlobalLocation(InternalScopedString *str, const __asan_global &g) {$/;"	f	namespace:__asan
PrintGlobalNameIfASCII	lib/asan/asan_globals.cc	/^void PrintGlobalNameIfASCII(InternalScopedString *str, const __asan_global &g) {$/;"	f	namespace:__asan
PrintGraph	lib/sanitizer_common/tests/sanitizer_bvgraph_test.cc	/^void PrintGraph(const G &g) {$/;"	f
PrintHeapChunkAccess	lib/asan/asan_descriptions.cc	/^static void PrintHeapChunkAccess(uptr addr, const ChunkAccess &descr) {$/;"	f	namespace:__asan
PrintHelp	lib/fuzzer/FuzzerDriver.cpp	/^static void PrintHelp() {$/;"	f	namespace:fuzzer
PrintHexArray	lib/fuzzer/FuzzerUtil.cpp	/^void PrintHexArray(const uint8_t *Data, size_t Size,$/;"	f	namespace:fuzzer
PrintHintAllocatorCannotReturnNull	lib/sanitizer_common/sanitizer_allocator.cc	/^void PrintHintAllocatorCannotReturnNull() {$/;"	f	namespace:__sanitizer
PrintInternalAllocatorStats	lib/asan/asan_allocator.cc	/^void PrintInternalAllocatorStats() {$/;"	f	namespace:__asan
PrintLeakedObjectsForLeak	lib/lsan/lsan_common.cc	/^void LeakReport::PrintLeakedObjectsForLeak(uptr index) {$/;"	f	class:__lsan::LeakReport
PrintLegend	lib/asan/asan_errors.cc	/^static void PrintLegend(InternalScopedString *str) {$/;"	f	namespace:__asan
PrintLocation	lib/tsan/rtl/tsan_report.cc	/^static void PrintLocation(const ReportLocation *loc) {$/;"	f	namespace:__tsan
PrintMallocStatsArray	lib/asan/asan_stats.cc	/^static void PrintMallocStatsArray(const char *prefix,$/;"	f	namespace:__asan
PrintMatchedBenignRaces	lib/tsan/rtl/tsan_interface_ann.cc	/^void PrintMatchedBenignRaces() {$/;"	f	namespace:__tsan
PrintMatchedSuppressions	lib/lsan/lsan_common.cc	/^static void PrintMatchedSuppressions() {$/;"	f	namespace:__lsan
PrintMatchedSuppressions	lib/tsan/rtl/tsan_suppressions.cc	/^void PrintMatchedSuppressions() {$/;"	f	namespace:__tsan
PrintMemoryByte	lib/asan/asan_report.cc	/^void PrintMemoryByte(InternalScopedString *str, const char *before, u8 byte,$/;"	f	namespace:__asan
PrintMemoryByte	lib/sanitizer_common/sanitizer_symbolizer_report.cc	/^static void PrintMemoryByte(InternalScopedString *str, const char *before,$/;"	f	namespace:__sanitizer
PrintMemoryProfile	lib/fuzzer/FuzzerUtil.cpp	/^void PrintMemoryProfile() {$/;"	f	namespace:fuzzer
PrintMemorySnippet	lib/ubsan/ubsan_diag.cc	/^static void PrintMemorySnippet(const Decorator &Decor, MemoryLocation Loc,$/;"	f	file:
PrintMissing	lib/sanitizer_common/scripts/sancov.py	/^def PrintMissing(binary):$/;"	f
PrintModuleInfo	lib/fuzzer/FuzzerTracePC.cpp	/^void TracePC::PrintModuleInfo() {$/;"	f	class:fuzzer::TracePC
PrintModuleMap	lib/sanitizer_common/sanitizer_fuchsia.cc	/^void PrintModuleMap() {}$/;"	f	namespace:__sanitizer
PrintModuleMap	lib/sanitizer_common/sanitizer_linux.cc	/^void PrintModuleMap() { }$/;"	f	namespace:__sanitizer
PrintModuleMap	lib/sanitizer_common/sanitizer_mac.cc	/^void PrintModuleMap() {$/;"	f	namespace:__sanitizer
PrintModuleMap	lib/sanitizer_common/sanitizer_rtems.cc	/^void PrintModuleMap() {}$/;"	f	namespace:__sanitizer
PrintModuleMap	lib/sanitizer_common/sanitizer_win.cc	/^void PrintModuleMap() { }$/;"	f	namespace:__sanitizer
PrintMop	lib/tsan/rtl/tsan_report.cc	/^static void PrintMop(const ReportMop *mop, bool first) {$/;"	f	namespace:__tsan
PrintMutationSequence	lib/fuzzer/FuzzerMutate.cpp	/^void MutationDispatcher::PrintMutationSequence() {$/;"	f	class:fuzzer::MutationDispatcher
PrintMutationStats	lib/fuzzer/FuzzerMutate.cpp	/^void MutationDispatcher::PrintMutationStats() {$/;"	f	class:fuzzer::MutationDispatcher
PrintMutationStats	lib/fuzzer/FuzzerOptions.h	/^  bool PrintMutationStats = false;$/;"	m	struct:fuzzer::FuzzingOptions
PrintMutex	lib/tsan/rtl/tsan_report.cc	/^static void PrintMutex(const ReportMutex *rm) {$/;"	f	namespace:__tsan
PrintMutexSet	lib/tsan/rtl/tsan_report.cc	/^static void PrintMutexSet(Vector<ReportMopMutex> const& mset) {$/;"	f	namespace:__tsan
PrintMutexShort	lib/tsan/rtl/tsan_report.cc	/^static void PrintMutexShort(const ReportMutex *rm, const char *after) {$/;"	f	namespace:__tsan
PrintMutexShortWithAddress	lib/tsan/rtl/tsan_report.cc	/^static void PrintMutexShortWithAddress(const ReportMutex *rm,$/;"	f	namespace:__tsan
PrintNEW	lib/fuzzer/FuzzerOptions.h	/^  bool PrintNEW = true; \/\/ Print a status line when new units are found;$/;"	m	struct:fuzzer::FuzzingOptions
PrintNewCovFuncs	lib/fuzzer/FuzzerOptions.h	/^  int PrintNewCovFuncs = 0;$/;"	m	struct:fuzzer::FuzzingOptions
PrintNewCovPcs	lib/fuzzer/FuzzerOptions.h	/^  bool PrintNewCovPcs = false;$/;"	m	struct:fuzzer::FuzzingOptions
PrintOnce	test/fuzzer/SimpleCmpTest.cpp	/^bool PrintOnce(int Line) {$/;"	f
PrintPC	lib/fuzzer/FuzzerUtil.cpp	/^void PrintPC(const char *SymbolizedFMT, const char *FallbackFMT, uintptr_t PC) {$/;"	f	namespace:fuzzer
PrintPulseAndReportSlowInput	lib/fuzzer/FuzzerLoop.cpp	/^void Fuzzer::PrintPulseAndReportSlowInput(const uint8_t *Data, size_t Size) {$/;"	f	class:fuzzer::Fuzzer
PrintRange	lib/hwasan/hwasan_linux.cc	/^static void PrintRange(uptr start, uptr end, const char *name) {$/;"	f	namespace:__hwasan
PrintRecommendedDictionary	lib/fuzzer/FuzzerMutate.cpp	/^void MutationDispatcher::PrintRecommendedDictionary() {$/;"	f	class:fuzzer::MutationDispatcher
PrintReport	lib/tsan/rtl/tsan_report.cc	/^void PrintReport(const ReportDesc *rep) {$/;"	f	namespace:__tsan
PrintReportForLeak	lib/lsan/lsan_common.cc	/^void LeakReport::PrintReportForLeak(uptr index) {$/;"	f	class:__lsan::LeakReport
PrintRes	lib/tsan/check_analyze.sh	/^PrintRes() {$/;"	f
PrintShadow	lib/asan/tests/asan_noinst_test.cc	/^static void PrintShadow(const char *tag, uptr ptr, size_t size) {$/;"	f	file:
PrintShadowByte	lib/asan/asan_errors.cc	/^static void PrintShadowByte(InternalScopedString *str, const char *before,$/;"	f	namespace:__asan
PrintShadowBytes	lib/asan/asan_errors.cc	/^static void PrintShadowBytes(InternalScopedString *str, const char *before,$/;"	f	namespace:__asan
PrintShadowMemoryForAddress	lib/asan/asan_errors.cc	/^static void PrintShadowMemoryForAddress(uptr addr) {$/;"	f	namespace:__asan
PrintSimple	lib/asan/asan_scariness_score.h	/^  static void PrintSimple(int score, const char *descr) {$/;"	f	struct:__asan::ScarinessScoreBase
PrintSleep	lib/tsan/rtl/tsan_report.cc	/^static void PrintSleep(const ReportStack *s) {$/;"	f	namespace:__tsan
PrintStack	lib/fuzzer/scripts/unbalanced_allocs.py	/^def PrintStack(line, stack):$/;"	f
PrintStack	lib/tsan/rtl/tsan_report.cc	/^void PrintStack(const ReportStack *ent) {$/;"	f	namespace:__tsan
PrintStackTrace	lib/fuzzer/FuzzerUtil.cpp	/^void PrintStackTrace() {$/;"	f	namespace:fuzzer
PrintStackTrace	lib/tsan/dd/dd_rtl.cc	/^static void PrintStackTrace(Thread *thr, u32 stk) {$/;"	f	namespace:__dsan
PrintStackTraceById	lib/lsan/lsan_common.cc	/^static void PrintStackTraceById(u32 stack_trace_id) {$/;"	f	namespace:__lsan
PrintStats	lib/asan/asan_allocator.cc	/^  void PrintStats() {$/;"	f	struct:__asan::Allocator
PrintStats	lib/fuzzer/FuzzerCorpus.h	/^  void PrintStats() {$/;"	f	class:fuzzer::InputCorpus
PrintStats	lib/fuzzer/FuzzerLoop.cpp	/^void Fuzzer::PrintStats(const char *Where, const char *End, size_t Units) {$/;"	f	class:fuzzer::Fuzzer
PrintStats	lib/sanitizer_common/sanitizer_allocator_combined.h	/^  void PrintStats() {$/;"	f	class:CombinedAllocator
PrintStats	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^  void PrintStats() {}$/;"	f	class:SizeClassAllocator32
PrintStats	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  void PrintStats() {$/;"	f	class:SizeClassAllocator64
PrintStats	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  void PrintStats(uptr class_id, uptr rss) {$/;"	f	class:SizeClassAllocator64
PrintStats	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^  void PrintStats() {$/;"	f	class:LargeMmapAllocator
PrintStats	lib/sanitizer_common/sanitizer_quarantine.h	/^  void PrintStats() const {$/;"	f	class:__sanitizer::Quarantine
PrintStats	lib/sanitizer_common/sanitizer_quarantine.h	/^  void PrintStats() const {$/;"	f	class:__sanitizer::QuarantineCache
PrintStats	lib/scudo/scudo_allocator_secondary.h	/^  void PrintStats() {$/;"	f	class:LargeMmapAllocator
PrintStatusForNewUnit	lib/fuzzer/FuzzerLoop.cpp	/^void Fuzzer::PrintStatusForNewUnit(const Unit &U, const char *Text) {$/;"	f	class:fuzzer::Fuzzer
PrintString	lib/asan/tests/asan_exceptions_test.cc	/^  void PrintString(const std::string& msg) const {$/;"	f	class:Action
PrintStuff	test/asan/TestCases/Linux/stress_dtls.c	/^void *PrintStuff(void *unused) {$/;"	f
PrintSummary	lib/fuzzer/FuzzerMerge.cpp	/^void Merger::PrintSummary(std::ostream &OS) {$/;"	f	class:fuzzer::Merger
PrintSummary	lib/lsan/lsan_common.cc	/^void LeakReport::PrintSummary() {$/;"	f	class:__lsan::LeakReport
PrintThread	lib/tsan/rtl/tsan_report.cc	/^static void PrintThread(const ReportThread *rt) {$/;"	f	namespace:__tsan
PrintUnit	lib/fuzzer/FuzzerCorpus.h	/^  void PrintUnit(const Unit &U) {$/;"	f	class:fuzzer::InputCorpus
PrintUnstableStats	lib/fuzzer/FuzzerOptions.h	/^  bool PrintUnstableStats = false;$/;"	m	struct:fuzzer::FuzzingOptions
PrintUnstableStats	lib/fuzzer/FuzzerTracePC.cpp	/^void TracePC::PrintUnstableStats() {$/;"	f	class:fuzzer::TracePC
PrintUsage	lib/sanitizer_common/scripts/cpplint.py	/^def PrintUsage(message):$/;"	f
PrintWarning	lib/hwasan/hwasan.cc	/^void PrintWarning(uptr pc, uptr bp) {$/;"	f	namespace:__hwasan
PrintWarning	lib/msan/msan.cc	/^void PrintWarning(uptr pc, uptr bp) {$/;"	f	namespace:__msan
PrintWarningWithOrigin	lib/msan/msan.cc	/^void PrintWarningWithOrigin(uptr pc, uptr bp, u32 origin) {$/;"	f	namespace:__msan
PrintZoneForPointer	lib/asan/asan_report.cc	/^static void PrintZoneForPointer(uptr ptr, uptr zone_ptr,$/;"	f	namespace:__asan
PrintableStringForLabel	lib/fuzzer/dataflow/DataFlow.cpp	/^static char *PrintableStringForLabel;  \/\/ InputLen + 2 bytes.$/;"	v	file:
Printf	lib/fuzzer/FuzzerIO.cpp	/^void Printf(const char *Fmt, ...) {$/;"	f	namespace:fuzzer
Printf	lib/sanitizer_common/sanitizer_printf.cc	/^void Printf(const char *format, ...) {$/;"	f	namespace:__sanitizer
PrintfAndReportCallback	lib/sanitizer_common/sanitizer_printf.cc	/^static void (*PrintfAndReportCallback)(const char *);$/;"	m	namespace:__sanitizer	file:
ProcCreate	lib/tsan/rtl/tsan_rtl_proc.cc	/^Processor *ProcCreate() {$/;"	f	namespace:__tsan
ProcDestroy	lib/tsan/rtl/tsan_rtl_proc.cc	/^void ProcDestroy(Processor *proc) {$/;"	f	namespace:__tsan
ProcSelfMapsBuff	lib/sanitizer_common/sanitizer_linux.h	/^struct ProcSelfMapsBuff {$/;"	s	namespace:__sanitizer
ProcUnwire	lib/tsan/rtl/tsan_rtl_proc.cc	/^void ProcUnwire(Processor *proc, ThreadState *thr) {$/;"	f	namespace:__tsan
ProcWire	lib/tsan/rtl/tsan_rtl_proc.cc	/^void ProcWire(Processor *proc, ThreadState *thr) {$/;"	f	namespace:__tsan
ProcessChunk	lib/asan/asan_memory_profile.cc	/^  void ProcessChunk(const AsanChunkView &cv) {$/;"	f	class:__asan::HeapProfile
ProcessFile	lib/fuzzer/scripts/unbalanced_allocs.py	/^def ProcessFile(f):$/;"	f
ProcessFile	lib/sanitizer_common/scripts/cpplint.py	/^def ProcessFile(filename, vlevel, extra_check_functions=[]):$/;"	f
ProcessFileData	lib/sanitizer_common/scripts/cpplint.py	/^def ProcessFileData(filename, file_extension, lines, error,$/;"	f
ProcessFree	lib/fuzzer/scripts/unbalanced_allocs.py	/^def ProcessFree(line, f, allocs):$/;"	f
ProcessGlobalRegions	lib/lsan/lsan_common_linux.cc	/^void ProcessGlobalRegions(Frontier *frontier) {$/;"	f	namespace:__lsan
ProcessGlobalRegions	lib/lsan/lsan_common_mac.cc	/^void ProcessGlobalRegions(Frontier *frontier) {$/;"	f	namespace:__lsan
ProcessGlobalRegionsCallback	lib/lsan/lsan_common_linux.cc	/^static int ProcessGlobalRegionsCallback(struct dl_phdr_info *info, size_t size,$/;"	f	namespace:__lsan
ProcessLine	lib/sanitizer_common/scripts/cpplint.py	/^def ProcessLine(filename, file_extension, clean_lines, line,$/;"	f
ProcessMalloc	lib/fuzzer/scripts/unbalanced_allocs.py	/^def ProcessMalloc(line, f, allocs):$/;"	f
ProcessPC	lib/lsan/lsan_common.cc	/^void ProcessPC(Frontier *frontier) {$/;"	f	namespace:__lsan
ProcessPendingSignals	lib/tsan/rtl/tsan_interceptors.cc	/^void ProcessPendingSignals(ThreadState *thr) {$/;"	f	namespace:__tsan
ProcessPlatformSpecificAllocations	lib/lsan/lsan_common_linux.cc	/^void ProcessPlatformSpecificAllocations(Frontier *frontier) {}$/;"	f	namespace:__lsan
ProcessPlatformSpecificAllocations	lib/lsan/lsan_common_mac.cc	/^void ProcessPlatformSpecificAllocations(Frontier *frontier) {$/;"	f	namespace:__lsan
ProcessRootRegion	lib/lsan/lsan_common.cc	/^static void ProcessRootRegion(Frontier *frontier,$/;"	f	namespace:__lsan
ProcessRootRegions	lib/lsan/lsan_common.cc	/^static void ProcessRootRegions(Frontier *frontier) {$/;"	f	namespace:__lsan
ProcessRun	lib/fuzzer/scripts/unbalanced_allocs.py	/^def ProcessRun(line, f):$/;"	f
ProcessStack	lib/fuzzer/scripts/unbalanced_allocs.py	/^def ProcessStack(line, f):$/;"	f
ProcessStartTime	lib/fuzzer/FuzzerInternal.h	/^  system_clock::time_point ProcessStartTime = system_clock::now();$/;"	m	class:fuzzer::Fuzzer
ProcessThreads	lib/lsan/lsan_common.cc	/^static void ProcessThreads(SuspendedThreadsList const &suspended_threads,$/;"	f	namespace:__lsan
Processor	lib/tsan/rtl/tsan_rtl.h	/^struct Processor {$/;"	s	namespace:__tsan
ProcessorFeatures	lib/builtins/cpu_model.c	/^enum ProcessorFeatures {$/;"	g	file:
ProcessorSubtypes	lib/builtins/cpu_model.c	/^enum ProcessorSubtypes {$/;"	g	file:
ProcessorTypes	lib/builtins/cpu_model.c	/^enum ProcessorTypes {$/;"	g	file:
ProcessorVendors	lib/builtins/cpu_model.c	/^enum ProcessorVendors {$/;"	g	file:
Prof	test/tsan/custom_mutex.h	/^  void Prof() {$/;"	f	class:Mutex
ProfBufferIO	lib/profile/InstrProfilingInternal.h	/^typedef struct ProfBufferIO {$/;"	s
ProfBufferIO	lib/profile/InstrProfilingInternal.h	/^} ProfBufferIO;$/;"	t	typeref:struct:ProfBufferIO
ProfBufferIO	test/profile/instrprof-bufferio.c	/^typedef struct ProfBufferIO ProfBufferIO;$/;"	t	typeref:struct:ProfBufferIO	file:
ProfDataIOVec	lib/profile/InstrProfilingInternal.h	/^typedef struct ProfDataIOVec {$/;"	s
ProfDataIOVec	lib/profile/InstrProfilingInternal.h	/^} ProfDataIOVec;$/;"	t	typeref:struct:ProfDataIOVec
ProfDataWriter	lib/profile/InstrProfilingInternal.h	/^typedef struct ProfDataWriter {$/;"	s
ProfDataWriter	lib/profile/InstrProfilingInternal.h	/^} ProfDataWriter;$/;"	t	typeref:struct:ProfDataWriter
Profile	lib/xray/tests/unit/profile_collector_test.cc	/^struct Profile {$/;"	s	namespace:__xray::__anon22	file:
ProfileBuffer	lib/xray/xray_profile_collector.cc	/^struct ProfileBuffer {$/;"	s	namespace:__xray::profileCollectorService::__anon27	file:
ProfileBuffers	lib/xray/xray_profile_collector.cc	/^Vector<ProfileBuffer> *ProfileBuffers = nullptr;$/;"	m	namespace:__xray::profileCollectorService::__anon27	file:
ProfileDumped	lib/profile/InstrProfiling.c	/^static unsigned ProfileDumped = 0;$/;"	v	file:
ProfileFlushStatus	lib/xray/xray_profiling.cc	/^atomic_sint32_t ProfileFlushStatus = {$/;"	m	namespace:__xray	file:
ProfileNameSpecifier	lib/profile/InstrProfilingFile.c	/^typedef enum ProfileNameSpecifier {$/;"	g	file:
ProfileNameSpecifier	lib/profile/InstrProfilingFile.c	/^} ProfileNameSpecifier;$/;"	t	typeref:enum:ProfileNameSpecifier	file:
ProfilePathPrefix	lib/profile/InstrProfilingFile.c	/^  const char *ProfilePathPrefix;$/;"	m	struct:lprofFilename	file:
ProfileRecord	lib/xray/xray_profile_collector.cc	/^  ProfileRecord(PathAllocator &A, const FunctionCallTrie::Node *N)$/;"	f	struct:__xray::profileCollectorService::ProfileRecord
ProfileRecord	lib/xray/xray_profile_collector.cc	/^struct ProfileRecord {$/;"	s	namespace:__xray::profileCollectorService	file:
ProfileSinkName	lib/profile/InstrProfilingPlatformFuchsia.c	/^static const char ProfileSinkName[] = "llvm-profile";$/;"	v	file:
ProfilerFlags	lib/xray/xray_profiling_flags.h	/^struct ProfilerFlags {$/;"	s	namespace:__xray
ProfilerLogFlushStatus	lib/xray/xray_profiling.cc	/^atomic_sint32_t ProfilerLogFlushStatus = {$/;"	m	namespace:__xray::__anon29	file:
ProfilerLogStatus	lib/xray/xray_profiling.cc	/^atomic_sint32_t ProfilerLogStatus = {XRayLogInitStatus::XRAY_LOG_UNINITIALIZED};$/;"	m	namespace:__xray::__anon29	file:
ProfilerOptionsMutex	lib/xray/xray_profiling.cc	/^SpinMutex ProfilerOptionsMutex;$/;"	m	namespace:__xray::__anon29	file:
ProfilingKey	lib/xray/xray_profiling.cc	/^static pthread_key_t ProfilingKey;$/;"	m	namespace:__xray::__anon29	file:
ProgName	lib/fuzzer/FuzzerDriver.cpp	/^static std::string *ProgName;$/;"	m	namespace:fuzzer	file:
ProtectGap	lib/asan/asan_shadow_setup.cc	/^static void ProtectGap(uptr addr, uptr size) {$/;"	f	namespace:__asan
ProtectGap	lib/hwasan/hwasan_linux.cc	/^static void ProtectGap(uptr addr, uptr size) {$/;"	f	namespace:__hwasan
ProtectMemoryRange	lib/msan/msan_linux.cc	/^static bool ProtectMemoryRange(uptr beg, uptr size, const char *name) {$/;"	f	namespace:__msan
ProtectRange	lib/tsan/rtl/tsan_platform_posix.cc	/^static void ProtectRange(uptr beg, uptr end) {$/;"	f	namespace:__tsan
PthreadExit	lib/asan/tests/asan_test.cc	/^static void *PthreadExit(void *a) {$/;"	f	file:
PthreadHelperCreateThreadInfo	lib/sanitizer_common/tests/sanitizer_pthread_wrappers.h	/^struct PthreadHelperCreateThreadInfo {$/;"	s
PthreadHelperThreadProc	lib/sanitizer_common/tests/sanitizer_pthread_wrappers.h	/^inline DWORD WINAPI PthreadHelperThreadProc(void *arg) {$/;"	f
PthreadMutex	test/tsan/deadlock_detector_stress_test.cc	/^  explicit PthreadMutex(bool recursive = false) {$/;"	f	class:PthreadMutex
PthreadMutex	test/tsan/deadlock_detector_stress_test.cc	/^class PthreadMutex {$/;"	c	file:
PthreadRWLock	test/tsan/deadlock_detector_stress_test.cc	/^  PthreadRWLock() { assert(0 == pthread_rwlock_init(&mu_, 0)); }$/;"	f	class:PthreadRWLock
PthreadRWLock	test/tsan/deadlock_detector_stress_test.cc	/^class PthreadRWLock {$/;"	c	file:
PthreadRecursiveMutex	test/tsan/deadlock_detector_stress_test.cc	/^  PthreadRecursiveMutex() : PthreadMutex(true) { }$/;"	f	class:PthreadRecursiveMutex
PthreadRecursiveMutex	test/tsan/deadlock_detector_stress_test.cc	/^class PthreadRecursiveMutex : public PthreadMutex {$/;"	c	file:
PthreadSpinLock	test/tsan/deadlock_detector_stress_test.cc	/^  PthreadSpinLock() { assert(0 == pthread_spin_init(&mu_, 0)); }$/;"	f	class:PthreadSpinLock
PthreadSpinLock	test/tsan/deadlock_detector_stress_test.cc	/^class PthreadSpinLock : public PthreadMutex { };$/;"	c	file:
PthreadSpinLock	test/tsan/deadlock_detector_stress_test.cc	/^class PthreadSpinLock {$/;"	c	file:
Ptr	test/asan/TestCases/use-after-scope-types.cc	/^template <class T, size_t N> struct Ptr<T[N]> {$/;"	s	file:
Ptr	test/asan/TestCases/use-after-scope-types.cc	/^template <class T> struct Ptr {$/;"	s	file:
Ptr	test/fuzzer/TraceMallocTest.cpp	/^int *Ptr;$/;"	v
PtrToNodeT	lib/profile/InstrProfiling.h	/^typedef struct ValueProfNode * PtrToNodeT;$/;"	t	typeref:struct:ValueProfNode
PtraceRegistersStatus	lib/sanitizer_common/sanitizer_stoptheworld.h	/^enum PtraceRegistersStatus {$/;"	g	namespace:__sanitizer
PulseThread	lib/fuzzer/FuzzerDriver.cpp	/^static void PulseThread() {$/;"	f	namespace:fuzzer
Purge	lib/asan/asan_allocator.cc	/^  void Purge(BufferedStackTrace *stack) {$/;"	f	struct:__asan::Allocator
PurgeAllocator	lib/fuzzer/FuzzerLoop.cpp	/^void Fuzzer::PurgeAllocator() {$/;"	f	class:fuzzer::Fuzzer
PurgeAllocatorIntervalSec	lib/fuzzer/FuzzerOptions.h	/^  int PurgeAllocatorIntervalSec = 1;$/;"	m	struct:fuzzer::FuzzingOptions
Push	lib/sanitizer_common/sanitizer_lfstack.h	/^  void Push(T *p) {$/;"	f	struct:__sanitizer::LFStack
PushBack	lib/sanitizer_common/sanitizer_vector.h	/^  T *PushBack() {$/;"	f	class:__sanitizer::Vector
PushBack	lib/sanitizer_common/sanitizer_vector.h	/^  T *PushBack(const T& v) {$/;"	f	class:__sanitizer::Vector
Put	lib/sanitizer_common/sanitizer_quarantine.h	/^  void Put(Cache *c, Callback cb, Node *ptr, uptr size) {$/;"	f	class:__sanitizer::Quarantine
Put	lib/sanitizer_common/sanitizer_stackdepotbase.h	/^StackDepotBase<Node, kReservedBits, kTabSizeLog>::Put(args_type args,$/;"	f	class:__sanitizer::StackDepotBase
PutPointerOnStaleStack	test/lsan/TestCases/stale_stack_leak.cc	/^void *PutPointerOnStaleStack(void *p) {$/;"	f
Q	lib/builtins/hexagon/dfdiv.S	/^		Q = #0$/;"	d
Q	lib/builtins/hexagon/dfdiv.S	/^		Q = add(Q,PROD)$/;"	d
Q	lib/builtins/hexagon/dfdiv.S	/^		Q = neg(PROD)$/;"	d
Q	lib/builtins/hexagon/dfdiv.S	/^#define Q r5:4$/;"	d
Q6_ALIAS	lib/builtins/hexagon/dfaddsub.S	/^#define Q6_ALIAS(TAG) .global __qdsp_##TAG ; .set __qdsp_##TAG, __hexagon_##TAG$/;"	d
Q6_ALIAS	lib/builtins/hexagon/dfdiv.S	/^#define Q6_ALIAS(TAG) .global __qdsp_##TAG ; .set __qdsp_##TAG, __hexagon_##TAG$/;"	d
Q6_ALIAS	lib/builtins/hexagon/dffma.S	/^#define Q6_ALIAS(TAG) .global __qdsp_##TAG ; .set __qdsp_##TAG, __hexagon_##TAG$/;"	d
Q6_ALIAS	lib/builtins/hexagon/dfminmax.S	/^#define Q6_ALIAS(TAG) .global __qdsp_##TAG ; .set __qdsp_##TAG, __hexagon_##TAG$/;"	d
Q6_ALIAS	lib/builtins/hexagon/dfmul.S	/^#define Q6_ALIAS(TAG) .global __qdsp_##TAG ; .set __qdsp_##TAG, __hexagon_##TAG$/;"	d
Q6_ALIAS	lib/builtins/hexagon/dfsqrt.S	/^#define Q6_ALIAS(TAG) .global __qdsp_##TAG ; .set __qdsp_##TAG, __hexagon_##TAG; .type __qdsp_##TAG,@function$/;"	d
Q6_ALIAS	lib/builtins/hexagon/sfdiv_opt.S	/^#define Q6_ALIAS(TAG) .global __qdsp_##TAG ; .set __qdsp_##TAG, __hexagon_##TAG$/;"	d
Q6_ALIAS	lib/builtins/hexagon/sfsqrt_opt.S	/^#define Q6_ALIAS(TAG) .global __qdsp_##TAG ; .set __qdsp_##TAG, __hexagon_##TAG$/;"	d
QADJ	lib/builtins/hexagon/dfdiv.S	/^#define QADJ 61$/;"	d
QH	lib/builtins/hexagon/dfdiv.S	/^		QH = #-DF_BIAS+1$/;"	d
QH	lib/builtins/hexagon/dfdiv.S	/^		QH = add(clb(A),#-DF_EXPBITS)$/;"	d
QH	lib/builtins/hexagon/dfdiv.S	/^		QH = convert_df2sf(A)	\/\/ get possible invalid exceptions$/;"	d
QH	lib/builtins/hexagon/dfdiv.S	/^		QH = extractu(TMP,#2,#SR_ROUND_OFF)$/;"	d
QH	lib/builtins/hexagon/dfdiv.S	/^#define QH r5$/;"	d
QL	lib/builtins/hexagon/dfdiv.S	/^		QL = #DF_BIAS-1$/;"	d
QL	lib/builtins/hexagon/dfdiv.S	/^		QL = QH$/;"	d
QL	lib/builtins/hexagon/dfdiv.S	/^		QL = add(clb(B),#-DF_EXPBITS)$/;"	d
QL	lib/builtins/hexagon/dfdiv.S	/^		QL = convert_df2sf(B)$/;"	d
QL	lib/builtins/hexagon/dfdiv.S	/^#define QL r4$/;"	d
QNAN	test/builtins/Unit/ppc/fixtfdi_test.c	12;"	d	file:
QNAN	test/builtins/Unit/ppc/qadd_test.c	29;"	d	file:
QNAN	test/builtins/Unit/ppc/qdiv_test.c	29;"	d	file:
QNAN	test/builtins/Unit/ppc/qmul_test.c	29;"	d	file:
QNAN	test/builtins/Unit/ppc/qsub_test.c	29;"	d	file:
QUAD_PRECISION	lib/builtins/addtf3.c	15;"	d	file:
QUAD_PRECISION	lib/builtins/comparetf2.c	40;"	d	file:
QUAD_PRECISION	lib/builtins/divtf3.c	19;"	d	file:
QUAD_PRECISION	lib/builtins/extenddftf2.c	11;"	d	file:
QUAD_PRECISION	lib/builtins/extendsftf2.c	11;"	d	file:
QUAD_PRECISION	lib/builtins/fixtfdi.c	11;"	d	file:
QUAD_PRECISION	lib/builtins/fixtfsi.c	11;"	d	file:
QUAD_PRECISION	lib/builtins/fixtfti.c	11;"	d	file:
QUAD_PRECISION	lib/builtins/fixunstfdi.c	11;"	d	file:
QUAD_PRECISION	lib/builtins/fixunstfsi.c	11;"	d	file:
QUAD_PRECISION	lib/builtins/fixunstfti.c	11;"	d	file:
QUAD_PRECISION	lib/builtins/floatditf.c	16;"	d	file:
QUAD_PRECISION	lib/builtins/floatsitf.c	16;"	d	file:
QUAD_PRECISION	lib/builtins/floattitf.c	16;"	d	file:
QUAD_PRECISION	lib/builtins/floatunditf.c	16;"	d	file:
QUAD_PRECISION	lib/builtins/floatunsitf.c	16;"	d	file:
QUAD_PRECISION	lib/builtins/floatuntitf.c	16;"	d	file:
QUAD_PRECISION	lib/builtins/multf3.c	15;"	d	file:
QUAD_PRECISION	lib/builtins/subtf3.c	15;"	d	file:
QUAD_PRECISION	lib/builtins/trunctfdf2.c	10;"	d	file:
QUAD_PRECISION	lib/builtins/trunctfsf2.c	10;"	d	file:
QUAD_PRECISION	test/builtins/Unit/floattitf_test.c	15;"	d	file:
QUAD_PRECISION	test/builtins/Unit/floatuntitf_test.c	15;"	d	file:
Q_POSITIVE	lib/builtins/hexagon/dfdiv.S	/^		Q_POSITIVE = cmp.gt(SIGN,#-1)$/;"	d
Q_POSITIVE	lib/builtins/hexagon/dfdiv.S	/^#define Q_POSITIVE p3$/;"	d
QsortCallback	test/asan/TestCases/Linux/malloc-in-qsort.cc	/^int QsortCallback(const void *a, const void *b) {$/;"	f
QsortCallback	test/asan/TestCases/Linux/overflow-in-qsort.cc	/^int QsortCallback(const void *a, const void *b) {$/;"	f
Quarantine	lib/sanitizer_common/sanitizer_quarantine.h	/^  explicit Quarantine(LinkerInitialized)$/;"	f	class:__sanitizer::Quarantine
Quarantine	lib/sanitizer_common/sanitizer_quarantine.h	/^class Quarantine {$/;"	c	namespace:__sanitizer
Quarantine	lib/scudo/scudo_allocator.cpp	/^  QuarantineT Quarantine;$/;"	m	struct:__scudo::Allocator	file:
QuarantineBatch	lib/sanitizer_common/sanitizer_quarantine.h	/^struct QuarantineBatch {$/;"	s	namespace:__sanitizer
QuarantineCache	lib/asan/asan_allocator.cc	/^typedef AsanQuarantine::Cache QuarantineCache;$/;"	t	namespace:__asan	file:
QuarantineCache	lib/sanitizer_common/sanitizer_quarantine.h	/^  QuarantineCache()$/;"	f	class:__sanitizer::QuarantineCache
QuarantineCache	lib/sanitizer_common/sanitizer_quarantine.h	/^  explicit QuarantineCache(LinkerInitialized) {$/;"	f	class:__sanitizer::QuarantineCache
QuarantineCache	lib/sanitizer_common/sanitizer_quarantine.h	/^class QuarantineCache {$/;"	c	namespace:__sanitizer
QuarantineCacheT	lib/scudo/scudo_allocator.cpp	/^typedef QuarantineT::Cache QuarantineCacheT;$/;"	t	namespace:__scudo	file:
QuarantineCallback	lib/asan/asan_allocator.cc	/^  QuarantineCallback(AllocatorCache *cache, BufferedStackTrace *stack)$/;"	f	struct:__asan::QuarantineCallback
QuarantineCallback	lib/asan/asan_allocator.cc	/^struct QuarantineCallback {$/;"	s	namespace:__asan	file:
QuarantineCallback	lib/sanitizer_common/tests/sanitizer_quarantine_test.cc	/^struct QuarantineCallback {$/;"	s	namespace:__sanitizer	file:
QuarantineCallback	lib/scudo/scudo_allocator.cpp	/^  explicit QuarantineCallback(AllocatorCacheT *Cache)$/;"	f	struct:__scudo::QuarantineCallback
QuarantineCallback	lib/scudo/scudo_allocator.cpp	/^struct QuarantineCallback {$/;"	s	namespace:__scudo	file:
QuarantineChunk	lib/asan/asan_allocator.cc	/^  void QuarantineChunk(AsanChunk *m, void *ptr, BufferedStackTrace *stack) {$/;"	f	struct:__asan::Allocator
QuarantineChunksUpToSize	lib/scudo/scudo_allocator.cpp	/^  u32 QuarantineChunksUpToSize;$/;"	m	struct:__scudo::Allocator	file:
QuarantinePop	lib/sanitizer_common/sanitizer_thread_registry.cc	/^ThreadContextBase *ThreadRegistry::QuarantinePop() {$/;"	f	class:__sanitizer::ThreadRegistry
QuarantinePush	lib/sanitizer_common/sanitizer_thread_registry.cc	/^void ThreadRegistry::QuarantinePush(ThreadContextBase *tctx) {$/;"	f	class:__sanitizer::ThreadRegistry
QuarantineT	lib/scudo/scudo_allocator.cpp	/^typedef Quarantine<QuarantineCallback, void> QuarantineT;$/;"	t	namespace:__scudo	file:
QueueFinalizing	lib/xray/xray_buffer_queue.h	/^    QueueFinalizing,$/;"	m	class:__xray::BufferQueue::ErrorCode
QuickCheckForUnpoisonedRegion	lib/asan/asan_interceptors_memintrinsics.h	/^static inline bool QuickCheckForUnpoisonedRegion(uptr beg, uptr size) {$/;"	f	namespace:__asan
R	lib/builtins/hexagon/sfsqrt_opt.S	/^    R = sffixupr(RIN)$/;"	d
R	lib/builtins/hexagon/sfsqrt_opt.S	/^#define R r5$/;"	d
RAW_ADDR	lib/asan/asan_mapping_myriad.h	17;"	d
RAW_CHECK	lib/sanitizer_common/sanitizer_internal_defs.h	291;"	d
RAW_CHECK_MSG	lib/sanitizer_common/sanitizer_internal_defs.h	284;"	d
RAY_DO_SIGLEV	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	90;"	d	file:
READ	lib/sanitizer_common/sanitizer_common.h	/^  enum WriteFlag { UNKNOWN, READ, WRITE } write_flag;$/;"	e	enum:__sanitizer::SignalContext::WriteFlag
READ	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^    READ,$/;"	e	enum:Event::Type	file:
READ_STRING	lib/tsan/rtl/tsan_interceptors.cc	307;"	d	file:
READ_STRING_OF_LEN	lib/tsan/rtl/tsan_interceptors.cc	303;"	d	file:
READ_TEST	lib/asan/tests/asan_test.cc	808;"	d	file:
REAL	lib/interception/interception.h	163;"	d
REAL	lib/interception/interception.h	166;"	d
REAL	lib/interception/interception.h	171;"	d
REAL	lib/interception/interception.h	181;"	d
RECIPEST	lib/builtins/hexagon/dfdiv.S	/^		RECIPEST = ##0x00800000 << RECIPEST_SHIFT$/;"	d
RECIPEST	lib/builtins/hexagon/dfdiv.S	/^		RECIPEST = add(RECIPEST,#((-3) << RECIPEST_SHIFT))$/;"	d
RECIPEST	lib/builtins/hexagon/dfdiv.S	/^		RECIPEST = insert(SFRECIP,#SF_MANTBITS,#RECIPEST_SHIFT)$/;"	d
RECIPEST	lib/builtins/hexagon/dfdiv.S	/^#define RECIPEST r13$/;"	d
RECIPEST	lib/builtins/hexagon/dfsqrt.S	/^		RECIPEST = asl(SF_H,SHIFTAMT)$/;"	d
RECIPEST	lib/builtins/hexagon/dfsqrt.S	/^#define RECIPEST r8$/;"	d
RECIPEST_SHIFT	lib/builtins/hexagon/dfdiv.S	/^#define RECIPEST_SHIFT 3$/;"	d
RECOVERABLE	lib/ubsan/ubsan_handlers.h	31;"	d
REGISTERED	lib/asan/asan_globals.cc	/^  REGISTERED = 1$/;"	e	enum:__asan::GlobalSymbolState	file:
REGISTERS_AVAILABLE	lib/sanitizer_common/sanitizer_stoptheworld.h	/^  REGISTERS_AVAILABLE = 1$/;"	e	enum:__sanitizer::PtraceRegistersStatus
REGISTERS_UNAVAILABLE	lib/sanitizer_common/sanitizer_stoptheworld.h	/^  REGISTERS_UNAVAILABLE = 0,$/;"	e	enum:__sanitizer::PtraceRegistersStatus
REGISTERS_UNAVAILABLE_FATAL	lib/sanitizer_common/sanitizer_stoptheworld.h	/^  REGISTERS_UNAVAILABLE_FATAL = -1,$/;"	e	enum:__sanitizer::PtraceRegistersStatus
REG_IP	test/asan/TestCases/Linux/ptrace.cc	25;"	d	file:
REG_IP	test/asan/TestCases/Linux/ptrace.cc	27;"	d	file:
REG_SP	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	475;"	d	file:
REG_SP	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	479;"	d	file:
REG_SP	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	484;"	d	file:
REG_SP	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	486;"	d	file:
REG_SP	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	491;"	d	file:
REG_SP	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	496;"	d	file:
REG_SP	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	498;"	d	file:
REG_SP	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	503;"	d	file:
REG_SP	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	508;"	d	file:
REL_ADDR	lib/builtins/i386/floatdidf.S	/^#define REL_ADDR(_a)	(_a)-0b(%eax)$/;"	d
REL_ADDR	lib/builtins/i386/floatundidf.S	/^#define REL_ADDR(_a)	(_a)-0b(%eax)$/;"	d
REL_ADDR	lib/builtins/i386/floatundixf.S	/^#define REL_ADDR(_a)	(_a)-0b(%eax)$/;"	d
REL_ADDR	lib/builtins/x86_64/floatundidf.S	/^#define REL_ADDR(_a)	(_a)(%rip)$/;"	d
REL_ADDR	lib/builtins/x86_64/floatundisf.S	/^#define REL_ADDR(_a)	(_a)(%rip)$/;"	d
REL_ADDR	lib/builtins/x86_64/floatundixf.S	/^#define REL_ADDR(_a)	(_a)(%rip)$/;"	d
REM	lib/builtins/hexagon/dfdiv.S	/^		REM = asl(REM,# ## ( REMSHIFT )); \\$/;"	d
REM	lib/builtins/hexagon/dfdiv.S	/^#define REM r1:0$/;"	d
REMHI	lib/builtins/hexagon/dfdiv.S	/^		REMHI = insert(ONE,#DF_EXPBITS+1,#DF_MANTBITS-32)$/;"	d
REMHI	lib/builtins/hexagon/dfdiv.S	/^#define REMHI r1$/;"	d
REMLO	lib/builtins/hexagon/dfdiv.S	/^#define REMLO r0$/;"	d
REMSUB2	lib/builtins/hexagon/dfdiv.S	/^		REMSUB2 = mpyu(PRODHI,DENOMHI); \\$/;"	d
REMSUB2	lib/builtins/hexagon/dfdiv.S	/^#define REMSUB2 r15:14$/;"	d
REM_HI	lib/builtins/hexagon/dfsqrt.S	/^		REM_HI = #0$/;"	d
REM_HI	lib/builtins/hexagon/dfsqrt.S	/^		REM_HI = sub(FRACRAD,HH,P_CARRY0):carry$/;"	d
REM_HI	lib/builtins/hexagon/dfsqrt.S	/^#define REM_HI r15:14$/;"	d
REM_HI_HI	lib/builtins/hexagon/dfsqrt.S	/^#define REM_HI_HI r15$/;"	d
REM_HI_TMP	lib/builtins/hexagon/dfsqrt.S	/^		REM_HI_TMP = sub(REM_HI,ZERO,P_CARRY1):carry$/;"	d
REM_HI_TMP	lib/builtins/hexagon/dfsqrt.S	/^		REM_HI_TMP = sub(REM_HI,ZERO,P_CARRY2):carry$/;"	d
REM_HI_TMP	lib/builtins/hexagon/dfsqrt.S	/^#define REM_HI_TMP r3:2$/;"	d
REM_HI_TMP_HI	lib/builtins/hexagon/dfsqrt.S	/^#define REM_HI_TMP_HI r3$/;"	d
REM_LO	lib/builtins/hexagon/dfsqrt.S	/^		REM_LO = #0$/;"	d
REM_LO	lib/builtins/hexagon/dfsqrt.S	/^		REM_LO = sub(REM_LO,LL,P_CARRY0):carry$/;"	d
REM_LO	lib/builtins/hexagon/dfsqrt.S	/^#define REM_LO r1:0$/;"	d
REM_LO_TMP	lib/builtins/hexagon/dfsqrt.S	/^		REM_LO_TMP = sub(REM_LO,TWOROOT_LO,P_CARRY1):carry$/;"	d
REM_LO_TMP	lib/builtins/hexagon/dfsqrt.S	/^		REM_LO_TMP = sub(REM_LO,TWOROOT_LO,P_CARRY2):carry$/;"	d
REM_LO_TMP	lib/builtins/hexagon/dfsqrt.S	/^#define REM_LO_TMP r5:4$/;"	d
REP_C	lib/builtins/fp_lib.h	110;"	d
REP_C	lib/builtins/fp_lib.h	46;"	d
REP_C	lib/builtins/fp_lib.h	66;"	d
RET	lib/builtins/hexagon/dfsqrt.S	/^		RET = convert_ud2df(ROOT)			\/\/ set up mantissa, maybe set inexact flag$/;"	d
RET	lib/builtins/hexagon/dfsqrt.S	/^#define RET r1:0$/;"	d
RETHI	lib/builtins/hexagon/dfsqrt.S	/^#define RETHI r1$/;"	d
RETURN	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^    RETURN,$/;"	e	enum:Event::Type	file:
RETURN_OR_SET_ERRNO	lib/sanitizer_common/symbolizer/sanitizer_wrappers.cc	113;"	d	file:
RHSType	lib/ubsan/ubsan_handlers.h	/^  const TypeDescriptor &RHSType;$/;"	m	struct:__ubsan::ShiftOutOfBoundsData
RIGHTLEFTSHIFT	lib/builtins/hexagon/dffma.S	/^#define RIGHTLEFTSHIFT r13:12$/;"	d
RIGHTSHIFT	lib/builtins/hexagon/dffma.S	/^		RIGHTSHIFT = min(EXPC,TMP)$/;"	d
RIGHTSHIFT	lib/builtins/hexagon/dffma.S	/^		RIGHTSHIFT = sub(#64,LEFTSHIFT)$/;"	d
RIGHTSHIFT	lib/builtins/hexagon/dffma.S	/^#define RIGHTSHIFT r13$/;"	d
RIN	lib/builtins/hexagon/sfsqrt_opt.S	/^#define RIN r0$/;"	d
RL	test/tsan/deadlock_detector_stress_test.cc	/^  void RL(size_t i) {$/;"	f	class:LockTest
RLIMIT_AS	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	34;"	d
ROOT	lib/builtins/hexagon/dfsqrt.S	/^		ROOT = mpyu(RECIPEST,PRODHI)		\/\/ root = mpyu_full(recipest,hi(fracrad<<(2+exp1)))$/;"	d
ROOT	lib/builtins/hexagon/dfsqrt.S	/^#define ROOT r13:12$/;"	d
ROOTHI	lib/builtins/hexagon/dfsqrt.S	/^#define ROOTHI r13$/;"	d
ROOTLO	lib/builtins/hexagon/dfsqrt.S	/^#define ROOTLO r12$/;"	d
RTRecord	lib/profile/InstrProfilingValue.c	/^static ValueProfRuntimeRecord RTRecord;$/;"	v	file:
RTRecordClosure	lib/profile/InstrProfilingValue.c	/^static ValueProfRecordClosure RTRecordClosure = {$/;"	v	file:
RU	test/tsan/deadlock_detector_stress_test.cc	/^  void RU(size_t i) {$/;"	f	class:LockTest
RVAPtr	lib/interception/interception_win.cc	/^  RVAPtr(void *module, uptr rva)$/;"	f	class:__interception::__anon13::RVAPtr
RVAPtr	lib/interception/interception_win.cc	/^template <typename T> class RVAPtr {$/;"	c	namespace:__interception::__anon13	file:
RW	lib/tsan/tests/rtl/tsan_test_util.h	/^    RW,$/;"	e	enum:Mutex::Type
RWMutex	lib/sanitizer_common/sanitizer_mutex.h	/^  RWMutex() {$/;"	f	class:__sanitizer::RWMutex
RWMutex	lib/sanitizer_common/sanitizer_mutex.h	/^class RWMutex {$/;"	c	namespace:__sanitizer
RWMutexLock	lib/sanitizer_common/sanitizer_mutex.h	/^typedef GenericScopedLock<RWMutex> RWMutexLock;$/;"	t	namespace:__sanitizer
RWMutexReadLock	lib/sanitizer_common/sanitizer_mutex.h	/^typedef GenericScopedReadLock<RWMutex> RWMutexReadLock;$/;"	t	namespace:__sanitizer
RZ	test/asan/TestCases/alloca_vla_interact.cc	22;"	d	file:
RZLog2Size	lib/asan/asan_allocator.cc	/^static u32 RZLog2Size(u32 rz_log) {$/;"	f	namespace:__asan
RZSize2Log	lib/asan/asan_allocator.cc	/^static u32 RZSize2Log(u32 rz_size) {$/;"	f	namespace:__asan
RaceBetweenAtomicAndFree	lib/tsan/rtl/tsan_rtl_report.cc	/^static bool RaceBetweenAtomicAndFree(ThreadState *thr) {$/;"	f	namespace:__tsan
RaceThread	test/tsan/debug_alloc_stack.cc	/^void *RaceThread(void *context) {$/;"	f
RacyAddress	lib/tsan/rtl/tsan_rtl.h	/^struct RacyAddress {$/;"	s	namespace:__tsan
RacyGlobal	test/tsan/suppressions_global.cc	/^int RacyGlobal;$/;"	v
RacyStacks	lib/tsan/rtl/tsan_rtl.h	/^struct RacyStacks {$/;"	s	namespace:__tsan
Rand	lib/fuzzer/FuzzerMutate.h	/^  Random &Rand;$/;"	m	class:fuzzer::MutationDispatcher
Rand	lib/fuzzer/FuzzerRandom.h	/^  size_t Rand() { return this->operator()(); }$/;"	f	class:fuzzer::Random
Rand	lib/sanitizer_common/sanitizer_allocator.h	/^INLINE u32 Rand(u32 *state) {  \/\/ ANSI C linear congruential PRNG.$/;"	f	namespace:__sanitizer
RandBool	lib/fuzzer/FuzzerRandom.h	/^  size_t RandBool() { return Rand() % 2; }$/;"	f	class:fuzzer::Random
RandCh	lib/fuzzer/FuzzerMutate.cpp	/^static char RandCh(Random &Rand) {$/;"	f	namespace:fuzzer
RandN	lib/sanitizer_common/sanitizer_allocator.h	/^INLINE u32 RandN(u32 *state, u32 n) { return Rand(state) % n; }  \/\/ [0, n)$/;"	f	namespace:__sanitizer
Random	lib/fuzzer/FuzzerRandom.h	/^  Random(unsigned int seed) : std::mt19937(seed) {}$/;"	f	class:fuzzer::Random
Random	lib/fuzzer/FuzzerRandom.h	/^class Random : public std::mt19937 {$/;"	c	namespace:fuzzer
RandomSeed	lib/hwasan/hwasan_thread.cc	/^static u32 RandomSeed() {$/;"	f	namespace:__hwasan
RandomShuffle	lib/sanitizer_common/sanitizer_allocator.h	/^INLINE void RandomShuffle(T *a, u32 n, u32 *rand_state) {$/;"	f	namespace:__sanitizer
Range	lib/ubsan/ubsan_diag.h	/^  Range() : Start(), End(), Text() {}$/;"	f	class:__ubsan::Range
Range	lib/ubsan/ubsan_diag.h	/^  Range(MemoryLocation Start, MemoryLocation End, const char *Text)$/;"	f	class:__ubsan::Range
Range	lib/ubsan/ubsan_diag.h	/^class Range {$/;"	c	namespace:__ubsan
RangeIteratorCallback	lib/sanitizer_common/sanitizer_common.h	/^typedef void (*RangeIteratorCallback)(uptr begin, uptr end, void *arg);$/;"	t	namespace:__sanitizer
RangeRecorder	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  RangeRecorder()$/;"	f	class:RangeRecorder
RangeRecorder	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^class RangeRecorder {$/;"	c	file:
Ranges	lib/ubsan/ubsan_diag.h	/^  Range Ranges[MaxRanges];$/;"	m	class:__ubsan::Diag
RangesOverlap	lib/asan/asan_interceptors_memintrinsics.h	/^static inline bool RangesOverlap(const char *offset1, uptr length1,$/;"	f	namespace:__asan
Ratio	lib/esan/cache_frag.cpp	/^  u64 Ratio; \/\/ Difference ratio for the struct layout access.$/;"	m	struct:__esan::StructCounter	file:
RawInternalAlloc	lib/sanitizer_common/sanitizer_allocator.cc	/^static void *RawInternalAlloc(uptr size, InternalAllocatorCache *cache,$/;"	f	namespace:__sanitizer
RawInternalFree	lib/sanitizer_common/sanitizer_allocator.cc	/^static void RawInternalFree(void *ptr, InternalAllocatorCache *cache) {$/;"	f	namespace:__sanitizer
RawInternalRealloc	lib/sanitizer_common/sanitizer_allocator.cc	/^static void *RawInternalRealloc(void *ptr, uptr size,$/;"	f	namespace:__sanitizer
RawPrint	lib/fuzzer/FuzzerIOPosix.cpp	/^void RawPrint(const char *Str) {$/;"	f	namespace:fuzzer
RawPrint	lib/fuzzer/FuzzerIOWindows.cpp	/^void RawPrint(const char *Str) {$/;"	f	namespace:fuzzer
RawUnpack	lib/sanitizer_common/scripts/sancov.py	/^def RawUnpack(files):$/;"	f
RawWrite	lib/sanitizer_common/sanitizer_file.cc	/^void RawWrite(const char *buffer) {$/;"	f	namespace:__sanitizer
RawWrite	lib/sanitizer_common/sanitizer_fuchsia.cc	/^void RawWrite(const char *buffer) {$/;"	f	namespace:__sanitizer
RdOnly	lib/sanitizer_common/sanitizer_file.h	/^  RdOnly,$/;"	e	enum:__sanitizer::FileAccessMode
RdWr	lib/sanitizer_common/sanitizer_file.h	/^  RdWr$/;"	e	enum:__sanitizer::FileAccessMode
ReExec	lib/sanitizer_common/sanitizer_linux.cc	/^void ReExec() {$/;"	f	namespace:__sanitizer
ReExec	lib/sanitizer_common/sanitizer_mac.cc	/^void ReExec() {$/;"	f	namespace:__sanitizer
ReExec	lib/sanitizer_common/sanitizer_openbsd.cc	/^void ReExec() {$/;"	f	namespace:__sanitizer
ReExec	lib/sanitizer_common/sanitizer_win.cc	/^void ReExec() {$/;"	f	namespace:__sanitizer
ReInitialize	lib/asan/asan_allocator.cc	/^  void ReInitialize(const AllocatorOptions &options) {$/;"	f	struct:__asan::Allocator
ReInitializeAllocator	lib/asan/asan_allocator.cc	/^void ReInitializeAllocator(const AllocatorOptions &options) {$/;"	f	namespace:__asan
RePoisonChunk	lib/asan/asan_allocator.cc	/^  void RePoisonChunk(uptr chunk) {$/;"	f	struct:__asan::Allocator
ReachedEndOfOutput	lib/sanitizer_common/sanitizer_symbolizer_internal.h	/^  virtual bool ReachedEndOfOutput(const char *buffer, uptr length) const {$/;"	f	class:__sanitizer::SymbolizerProcess
ReachedEndOfOutput	lib/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc	/^bool Addr2LineProcess::ReachedEndOfOutput(const char *buffer,$/;"	f	class:__sanitizer::Addr2LineProcess
Read	lib/tsan/tests/rtl/tsan_test_util.h	/^  void Read(const MemLoc &ml, int size, bool expect_race = false) {$/;"	f	class:ScopedThread
Read	lib/tsan/tests/unit/tsan_mutex_test.cc	/^  void Read() {$/;"	f	class:__tsan::TestData
Read	test/asan/TestCases/Darwin/segv_read_write.c	/^__attribute__((noinline)) void Read(int *ptr) { sink = *ptr; }$/;"	f
Read	test/asan/TestCases/Linux/segv_read_write.c	/^__attribute__((noinline)) void Read(int *ptr) { sink = *ptr; }$/;"	f
Read	test/asan/TestCases/Windows/crash_read_write.cc	/^__attribute__((noinline)) void Read(int *ptr) { sink = *ptr; }$/;"	f
Read	test/asan/TestCases/scariness_score_test.cc	/^enum ReadOrWrite { Read = 0, Write = 1 };$/;"	e	enum:ReadOrWrite	file:
Read1	lib/tsan/tests/rtl/tsan_test_util.h	/^  void Read1(const MemLoc &ml, bool expect_race = false) {$/;"	f	class:ScopedThread
Read2	lib/tsan/tests/rtl/tsan_test_util.h	/^  void Read2(const MemLoc &ml, bool expect_race = false) {$/;"	f	class:ScopedThread
Read4	lib/tsan/tests/rtl/tsan_test_util.h	/^  void Read4(const MemLoc &ml, bool expect_race = false) {$/;"	f	class:ScopedThread
Read8	lib/tsan/tests/rtl/tsan_test_util.h	/^  void Read8(const MemLoc &ml, bool expect_race = false) {$/;"	f	class:ScopedThread
ReadAndExecuteSeedCorpora	lib/fuzzer/FuzzerLoop.cpp	/^void Fuzzer::ReadAndExecuteSeedCorpora(const Vector<std::string> &CorpusDirs) {$/;"	f	class:fuzzer::Fuzzer
ReadBinaryName	lib/sanitizer_common/sanitizer_fuchsia.cc	/^uptr ReadBinaryName(\/*out*\/ char *buf, uptr buf_len) {$/;"	f	namespace:__sanitizer
ReadBinaryName	lib/sanitizer_common/sanitizer_linux.cc	/^uptr ReadBinaryName(\/*out*\/char *buf, uptr buf_len) {$/;"	f	namespace:__sanitizer
ReadBinaryName	lib/sanitizer_common/sanitizer_mac.cc	/^uptr ReadBinaryName(\/*out*\/char *buf, uptr buf_len) {$/;"	f	namespace:__sanitizer
ReadBinaryName	lib/sanitizer_common/sanitizer_openbsd.cc	/^uptr ReadBinaryName(\/*out*\/char *buf, uptr buf_len) {$/;"	f	namespace:__sanitizer
ReadBinaryName	lib/sanitizer_common/sanitizer_rtems.cc	/^uptr ReadBinaryName(\/*out*\/char *buf, uptr buf_len) {$/;"	f	namespace:__sanitizer
ReadBinaryName	lib/sanitizer_common/sanitizer_win.cc	/^uptr ReadBinaryName(\/*out*\/char *buf, uptr buf_len) {$/;"	f	namespace:__sanitizer
ReadBinaryNameCached	lib/sanitizer_common/sanitizer_common.cc	/^uptr ReadBinaryNameCached(\/*out*\/char *buf, uptr buf_len) {$/;"	f	namespace:__sanitizer
ReadByteArraySize	lib/fuzzer/FuzzerShmem.h	/^  size_t ReadByteArraySize() {$/;"	f	class:fuzzer::SharedMemoryRegion
ReadContextStack	lib/asan/asan_linux.cc	/^void ReadContextStack(void *context, uptr *stack, uptr *ssize) {$/;"	f	namespace:__asan
ReadContextStack	lib/asan/asan_mac.cc	/^void ReadContextStack(void *context, uptr *stack, uptr *ssize) {$/;"	f	namespace:__asan
ReadContextStack	lib/asan/asan_win.cc	/^void ReadContextStack(void *context, uptr *stack, uptr *ssize) {$/;"	f	namespace:__asan
ReadDirToVectorOfUnits	lib/fuzzer/FuzzerIO.cpp	/^void ReadDirToVectorOfUnits(const char *Path, Vector<Unit> *V,$/;"	f	namespace:fuzzer
ReadFileToBuffer	lib/sanitizer_common/sanitizer_file.cc	/^bool ReadFileToBuffer(const char *file_name, char **buff, uptr *buff_size,$/;"	f	namespace:__sanitizer
ReadFileToBuffer	lib/sanitizer_common/sanitizer_fuchsia.cc	/^bool ReadFileToBuffer(const char *file_name, char **buff, uptr *buff_size,$/;"	f	namespace:__sanitizer
ReadFileToVector	lib/sanitizer_common/sanitizer_file.cc	/^bool ReadFileToVector(const char *file_name,$/;"	f	namespace:__sanitizer
ReadFromFile	lib/sanitizer_common/sanitizer_posix.cc	/^bool ReadFromFile(fd_t fd, void *buff, uptr buff_size, uptr *bytes_read,$/;"	f	namespace:__sanitizer
ReadFromFile	lib/sanitizer_common/sanitizer_rtems.cc	/^bool ReadFromFile(fd_t fd, void *buff, uptr buff_size, uptr *bytes_read,$/;"	f	namespace:__sanitizer
ReadFromFile	lib/sanitizer_common/sanitizer_win.cc	/^bool ReadFromFile(fd_t fd, void *buff, uptr buff_size, uptr *bytes_read,$/;"	f	namespace:__sanitizer
ReadFromSymbolizer	lib/sanitizer_common/sanitizer_symbolizer_libcdep.cc	/^bool SymbolizerProcess::ReadFromSymbolizer(char *buffer, uptr max_length) {$/;"	f	class:__sanitizer::SymbolizerProcess
ReadLock	lib/sanitizer_common/sanitizer_mutex.h	/^  void ReadLock() {$/;"	f	class:__sanitizer::RWMutex
ReadLock	lib/tsan/rtl/tsan_mutex.cc	/^void Mutex::ReadLock() {$/;"	f	class:__tsan::Mutex
ReadLock	lib/tsan/rtl/tsan_mutex.h	/^typedef GenericScopedReadLock<Mutex> ReadLock;$/;"	t	namespace:__tsan
ReadLock	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^void Mutex::ReadLock() {$/;"	f	class:Mutex
ReadLock	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^void ScopedThread::ReadLock(const Mutex &m) {$/;"	f	class:ScopedThread
ReadLockSlow	lib/sanitizer_common/sanitizer_mutex.h	/^  void NOINLINE ReadLockSlow() {$/;"	f	class:__sanitizer::RWMutex
ReadLongProcessName	lib/sanitizer_common/sanitizer_fuchsia.cc	/^uptr ReadLongProcessName(\/*out*\/ char *buf, uptr buf_len) {$/;"	f	namespace:__sanitizer
ReadLongProcessName	lib/sanitizer_common/sanitizer_linux.cc	/^uptr ReadLongProcessName(\/*out*\/ char *buf, uptr buf_len) {$/;"	f	namespace:__sanitizer
ReadLongProcessName	lib/sanitizer_common/sanitizer_mac.cc	/^uptr ReadLongProcessName(\/*out*\/char *buf, uptr buf_len) {$/;"	f	namespace:__sanitizer
ReadLongProcessName	lib/sanitizer_common/sanitizer_rtems.cc	/^uptr ReadLongProcessName(\/*out*\/ char *buf, uptr buf_len) {$/;"	f	namespace:__sanitizer
ReadLongProcessName	lib/sanitizer_common/sanitizer_win.cc	/^uptr ReadLongProcessName(\/*out*\/char *buf, uptr buf_len) {$/;"	f	namespace:__sanitizer
ReadMagicAndReturnBitness	lib/sanitizer_common/scripts/sancov.py	/^def ReadMagicAndReturnBitness(f, path):$/;"	f
ReadNullSepFileToArray	lib/sanitizer_common/sanitizer_linux.cc	/^static void ReadNullSepFileToArray(const char *path, char ***arr,$/;"	f	namespace:__sanitizer
ReadOneFile	lib/sanitizer_common/scripts/sancov.py	/^def ReadOneFile(path):$/;"	f
ReadOrWrite	test/asan/TestCases/scariness_score_test.cc	/^enum ReadOrWrite { Read = 0, Write = 1 };$/;"	g	file:
ReadProcMaps	lib/sanitizer_common/sanitizer_procmaps_bsd.cc	/^void ReadProcMaps(ProcSelfMapsBuff *proc_maps) {$/;"	f	namespace:__sanitizer
ReadProcMaps	lib/sanitizer_common/sanitizer_procmaps_linux.cc	/^void ReadProcMaps(ProcSelfMapsBuff *proc_maps) {$/;"	f	namespace:__sanitizer
ReadProcMaps	lib/sanitizer_common/sanitizer_procmaps_solaris.cc	/^void ReadProcMaps(ProcSelfMapsBuff *proc_maps) {$/;"	f	namespace:__sanitizer
ReadProcessName	lib/sanitizer_common/sanitizer_common.cc	/^static uptr ReadProcessName(\/*out*\/ char *buf, uptr buf_len) {$/;"	f	namespace:__sanitizer
ReadShadowRss	test/asan/TestCases/Linux/nohugepage_test.cc	/^long ReadShadowRss() {$/;"	f
ReadTidsToVector	lib/sanitizer_common/tests/sanitizer_linux_test.cc	/^static std::vector<tid_t> ReadTidsToVector(ThreadLister *thread_lister) {$/;"	f	namespace:__sanitizer
ReadUnlock	lib/sanitizer_common/sanitizer_mutex.h	/^  void ReadUnlock() {$/;"	f	class:__sanitizer::RWMutex
ReadUnlock	lib/tsan/rtl/tsan_mutex.cc	/^void Mutex::ReadUnlock() {$/;"	f	class:__tsan::Mutex
ReadUnlock	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^void Mutex::ReadUnlock() {$/;"	f	class:Mutex
ReadUnlock	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^void ScopedThread::ReadUnlock(const Mutex &m) {$/;"	f	class:ScopedThread
Realloc	lib/sanitizer_common/sanitizer_common.h	/^  void Realloc(uptr new_capacity) {$/;"	f	class:__sanitizer::InternalMmapVectorNoCtor
ReallocFromLocalPool	lib/asan/asan_malloc_linux.cc	/^static void *ReallocFromLocalPool(void *ptr, uptr size) {$/;"	f	file:
Reallocate	lib/asan/asan_allocator.cc	/^  void *Reallocate(void *old_ptr, uptr new_size, BufferedStackTrace *stack) {$/;"	f	struct:__asan::Allocator
Reallocate	lib/lsan/lsan_allocator.cc	/^void *Reallocate(const StackTrace &stack, void *p, uptr new_size,$/;"	f	namespace:__lsan
Reallocate	lib/sanitizer_common/sanitizer_allocator_combined.h	/^  void *Reallocate(AllocatorCache *cache, void *p, uptr new_size,$/;"	f	class:CombinedAllocator
ReallyThrow	test/asan/TestCases/throw_call_test.cc	/^void ReallyThrow() {$/;"	f
ReallyThrow	test/asan/TestCases/throw_invoke_test.cc	/^void ReallyThrow() {$/;"	f
RecordInitialStack	lib/fuzzer/FuzzerTracePC.cpp	/^void TracePC::RecordInitialStack() {$/;"	f	class:fuzzer::TracePC
RecordSuccessfulMutationSequence	lib/fuzzer/FuzzerMutate.cpp	/^void MutationDispatcher::RecordSuccessfulMutationSequence() {$/;"	f	class:fuzzer::MutationDispatcher
RecordType	lib/xray/xray_fdr_log_records.h	/^enum class RecordType : uint8_t { Function, Metadata };$/;"	c
RecordTypes	include/xray/xray_records.h	/^enum RecordTypes {$/;"	g	namespace:__xray
RecordUsefulMutations	lib/fuzzer/FuzzerMutate.cpp	/^void MutationDispatcher::RecordUsefulMutations() {$/;"	f	class:fuzzer::MutationDispatcher
RecursionGuard	lib/xray/xray_recursion_guard.h	/^  explicit inline RecursionGuard(atomic_uint8_t &R)$/;"	f	class:__xray::RecursionGuard
RecursionGuard	lib/xray/xray_recursion_guard.h	/^class RecursionGuard {$/;"	c	namespace:__xray
Recursive	test/fuzzer/DeepRecursionTest.cpp	/^void Recursive(const uint8_t *Data, size_t Size, int Depth) {$/;"	f
RecursiveFunc	test/asan/TestCases/Posix/deep_call_stack.cc	/^void RecursiveFunc(int depth, int *ptr) {$/;"	f
RecursiveFunction	lib/asan/tests/asan_fake_stack_test.cc	/^static void RecursiveFunction(FakeStack *fs, int depth) {$/;"	f	namespace:__asan
RecursiveFunction	test/asan/TestCases/Linux/uar_signals.cc	/^void RecursiveFunction(int depth) {$/;"	f
RecursiveFunctionWithStackFrame	test/asan/TestCases/heavy_uar_test.cc	/^void RecursiveFunctionWithStackFrame(int depth) {$/;"	f
RecursiveMalloc	lib/msan/tests/msan_test.cc	/^NOINLINE void RecursiveMalloc(int depth) {$/;"	f
RecursiveTemplateFunction	test/sanitizer_common/TestCases/symbolize_stack.cc	/^__attribute__((noinline)) void A<0>::RecursiveTemplateFunction(const T &) {$/;"	f	class:A
RecursiveTemplateFunction	test/sanitizer_common/TestCases/symbolize_stack.cc	/^__attribute__((noinline)) void A<N>::RecursiveTemplateFunction(const T &) {$/;"	f	class:A
Recycle	lib/asan/asan_allocator.cc	/^  void Recycle(AsanChunk *m) {$/;"	f	struct:__asan::QuarantineCallback
Recycle	lib/sanitizer_common/sanitizer_quarantine.h	/^  void NOINLINE Recycle(uptr min_size, Callback cb) {$/;"	f	class:__sanitizer::Quarantine
Recycle	lib/sanitizer_common/tests/sanitizer_quarantine_test.cc	/^  void Recycle(void *m) {}$/;"	f	struct:__sanitizer::QuarantineCallback
Recycle	lib/scudo/scudo_allocator.cpp	/^  void Recycle(void *Ptr) {$/;"	f	struct:__scudo::QuarantineCallback
Red	lib/sanitizer_common/sanitizer_report_decorator.h	/^  const char *Red()     const { return ansi_ ? "\\033[1m\\033[31m" : ""; }$/;"	f	class:__sanitizer::SanitizerCommonDecorator
RedZoneMemoryMapper	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  RedZoneMemoryMapper() {$/;"	f	class:RedZoneMemoryMapper
RedZoneMemoryMapper	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^class RedZoneMemoryMapper {$/;"	c	file:
ReduceDepth	lib/fuzzer/FuzzerOptions.h	/^  bool ReduceDepth = false;$/;"	m	struct:fuzzer::FuzzingOptions
ReduceInputs	lib/fuzzer/FuzzerOptions.h	/^  bool ReduceInputs = false;$/;"	m	struct:fuzzer::FuzzingOptions
Reduced	lib/fuzzer/FuzzerCorpus.h	/^  bool Reduced = false;$/;"	m	struct:fuzzer::InputInfo
ReexecDisabled	lib/asan/tests/asan_test_main.cc	/^bool ReexecDisabled() {$/;"	f	namespace:__sanitizer
ReexecDisabled	lib/sanitizer_common/sanitizer_mac.cc	/^bool ReexecDisabled() {$/;"	f	namespace:__sanitizer
ReexecDisabled	lib/tsan/tests/rtl/tsan_test.cc	/^bool ReexecDisabled() {$/;"	f	namespace:__sanitizer
ReexecDisabled	lib/tsan/tests/unit/tsan_unit_test_main.cc	/^bool ReexecDisabled() {$/;"	f	namespace:__sanitizer
RefCount	test/esan/Unit/hashtable.cpp	/^  int RefCount;$/;"	m	class:MyData	file:
Refill	lib/sanitizer_common/sanitizer_allocator_local_cache.h	/^  NOINLINE bool Refill(PerClass *c, SizeClassAllocator *allocator,$/;"	f	struct:SizeClassAllocator32LocalCache
Refill	lib/sanitizer_common/sanitizer_allocator_local_cache.h	/^  NOINLINE bool Refill(PerClass *c, SizeClassAllocator *allocator,$/;"	f	struct:SizeClassAllocator64LocalCache
Refill	lib/tsan/rtl/tsan_dense_alloc.h	/^  void Refill(Cache *c) {$/;"	f	class:__tsan::DenseSlabAlloc
RefreshModules	lib/sanitizer_common/sanitizer_symbolizer_libcdep.cc	/^void Symbolizer::RefreshModules() {$/;"	f	class:__sanitizer::Symbolizer
RegionMemUsage	lib/tsan/rtl/tsan_platform_mac.cc	/^static void RegionMemUsage(uptr start, uptr end, uptr *res, uptr *dirty) {$/;"	f	namespace:__tsan
Register	lib/sanitizer_common/sanitizer_allocator_stats.h	/^  void Register(AllocatorStats *s) {$/;"	f	class:AllocatorGlobalStats
RegisterActivationFlags	lib/asan/asan_activation.cc	/^  void RegisterActivationFlags(FlagParser *parser, Flags *f, CommonFlags *cf) {$/;"	f	struct:__asan::AsanDeactivatedFlags
RegisterAllocation	lib/lsan/lsan_allocator.cc	/^static void RegisterAllocation(const StackTrace &stack, void *p, uptr size) {$/;"	f	namespace:__lsan
RegisterAsanFlags	lib/asan/asan_flags.cc	/^static void RegisterAsanFlags(FlagParser *parser, Flags *f) {$/;"	f	namespace:__asan
RegisterCommonFlags	lib/sanitizer_common/sanitizer_flags.cc	/^void RegisterCommonFlags(FlagParser *parser, CommonFlags *cf) {$/;"	f	namespace:__sanitizer
RegisterCount	lib/sanitizer_common/sanitizer_stoptheworld.h	/^  virtual uptr RegisterCount() const { UNIMPLEMENTED(); }$/;"	f	class:__sanitizer::SuspendedThreadsList
RegisterCount	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^uptr SuspendedThreadsListLinux::RegisterCount() const {$/;"	f	class:__sanitizer::SuspendedThreadsListLinux
RegisterCount	lib/sanitizer_common/sanitizer_stoptheworld_mac.cc	/^uptr SuspendedThreadsListMac::RegisterCount() const {$/;"	f	class:__sanitizer::SuspendedThreadsListMac
RegisterDeallocation	lib/lsan/lsan_allocator.cc	/^static void RegisterDeallocation(void *p) {$/;"	f	namespace:__lsan
RegisterDfsanFlags	lib/dfsan/dfsan.cc	/^static void RegisterDfsanFlags(FlagParser *parser, Flags *f) {$/;"	f	file:
RegisterFlag	lib/sanitizer_common/sanitizer_flag_parser.h	/^static void RegisterFlag(FlagParser *parser, const char *name, const char *desc,$/;"	f	namespace:__sanitizer
RegisterGlobal	lib/asan/asan_globals.cc	/^static void RegisterGlobal(const Global *g) {$/;"	f	namespace:__asan
RegisterHandler	lib/sanitizer_common/sanitizer_flag_parser.cc	/^void FlagParser::RegisterHandler(const char *name, FlagHandlerBase *handler,$/;"	f	class:__sanitizer::FlagParser
RegisterHwasanFlags	lib/hwasan/hwasan.cc	/^static void RegisterHwasanFlags(FlagParser *parser, Flags *f) {$/;"	f	namespace:__hwasan
RegisterIncludeFlags	lib/sanitizer_common/sanitizer_flags.cc	/^void RegisterIncludeFlags(FlagParser *parser, CommonFlags *cf) {$/;"	f	namespace:__sanitizer
RegisterLsanFlags	lib/lsan/lsan_common.cc	/^void RegisterLsanFlags(FlagParser *parser, Flags *f) {$/;"	f	namespace:__lsan
RegisterMsanFlags	lib/msan/msan.cc	/^static void RegisterMsanFlags(FlagParser *parser, Flags *f) {$/;"	f	namespace:__msan
RegisterRuntime	lib/profile/InstrProfilingRuntime.cc	/^  RegisterRuntime() {$/;"	f	class:__anon38::RegisterRuntime
RegisterRuntime	lib/profile/InstrProfilingRuntime.cc	/^class RegisterRuntime {$/;"	c	namespace:__anon38	file:
RegisterSanStats	lib/stats/stats_client.cc	/^  RegisterSanStats() {$/;"	f	struct:__anon2::RegisterSanStats
RegisterSanStats	lib/stats/stats_client.cc	/^struct RegisterSanStats {$/;"	s	namespace:__anon2	file:
RegisterSancovFlags	lib/sanitizer_common/sancov_flags.cc	/^static void RegisterSancovFlags(FlagParser *parser, SancovFlags *f) {$/;"	f	namespace:__sancov
RegisterScudoFlags	lib/scudo/scudo_flags.cpp	/^static void RegisterScudoFlags(FlagParser *parser, Flags *f) {$/;"	f	namespace:__scudo
RegisterTsanFlags	lib/tsan/rtl/tsan_flags.cc	/^void RegisterTsanFlags(FlagParser *parser, Flags *f) {$/;"	f	namespace:__tsan
RegisterUbsanFlags	lib/ubsan/ubsan_flags.cc	/^void RegisterUbsanFlags(FlagParser *parser, Flags *f) {$/;"	f	namespace:__ubsan
RegisterUndefinedBehaviorReport	lib/ubsan/ubsan_monitor.cc	/^void __ubsan::RegisterUndefinedBehaviorReport(UndefinedBehaviorReport *UBR) {$/;"	f	class:__ubsan
Registration	lib/profile/InstrProfilingRuntime.cc	/^RegisterRuntime Registration;$/;"	m	namespace:__anon38	file:
RegularWrite	test/tsan/Darwin/external-swift.cc	/^void RegularWrite(void *addr) {$/;"	f
Release	lib/tsan/rtl/tsan_rtl_mutex.cc	/^void Release(ThreadState *thr, uptr pc, uptr addr) {$/;"	f	namespace:__tsan
ReleaseFreeMemoryToOS	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  static void ReleaseFreeMemoryToOS(CompactPtrT *free_array,$/;"	f	class:SizeClassAllocator64
ReleaseImpl	lib/tsan/rtl/tsan_rtl_mutex.cc	/^void ReleaseImpl(ThreadState *thr, uptr pc, SyncClock *c) {$/;"	f	namespace:__tsan
ReleaseMemoryPagesToOS	lib/sanitizer_common/sanitizer_fuchsia.cc	/^void ReleaseMemoryPagesToOS(uptr beg, uptr end) {}$/;"	f	namespace:__sanitizer
ReleaseMemoryPagesToOS	lib/sanitizer_common/sanitizer_posix_libcdep.cc	/^void ReleaseMemoryPagesToOS(uptr beg, uptr end) {$/;"	f	namespace:__sanitizer
ReleaseMemoryPagesToOS	lib/sanitizer_common/sanitizer_rtems.cc	/^void ReleaseMemoryPagesToOS(uptr beg, uptr end) {}$/;"	f	namespace:__sanitizer
ReleaseMemoryPagesToOS	lib/sanitizer_common/sanitizer_win.cc	/^void ReleaseMemoryPagesToOS(uptr beg, uptr end) {$/;"	f	namespace:__sanitizer
ReleasePageRangeToOS	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^    void ReleasePageRangeToOS(CompactPtrT from, CompactPtrT to) {$/;"	f	class:SizeClassAllocator64::MemoryMapper
ReleasePageRangeToOS	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  void ReleasePageRangeToOS(u32 from, u32 to) {$/;"	f	class:RangeRecorder
ReleasePageRangeToOS	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  void ReleasePageRangeToOS(u32 from, u32 to) {$/;"	f	class:ReleasedPagesTrackingMemoryMapper
ReleaseStore	lib/tsan/rtl/tsan_clock.cc	/^void ThreadClock::ReleaseStore(ClockCache *c, SyncClock *dst) {$/;"	f	class:__tsan::ThreadClock
ReleaseStore	lib/tsan/rtl/tsan_rtl_mutex.cc	/^void ReleaseStore(ThreadState *thr, uptr pc, uptr addr) {$/;"	f	namespace:__tsan
ReleaseStore	lib/tsan/tests/unit/tsan_clock_test.cc	/^  void ReleaseStore(SimpleSyncClock *dst) const {$/;"	f	struct:__tsan::SimpleThreadClock
ReleaseStoreImpl	lib/tsan/rtl/tsan_rtl_mutex.cc	/^void ReleaseStoreImpl(ThreadState *thr, uptr pc, SyncClock *c) {$/;"	f	namespace:__tsan
ReleaseToOSIntervalMs	lib/sanitizer_common/sanitizer_allocator_combined.h	/^  s32 ReleaseToOSIntervalMs() const {$/;"	f	class:CombinedAllocator
ReleaseToOSIntervalMs	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^  s32 ReleaseToOSIntervalMs() const {$/;"	f	class:SizeClassAllocator32
ReleaseToOSIntervalMs	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  s32 ReleaseToOSIntervalMs() const {$/;"	f	class:SizeClassAllocator64
ReleaseToOsInfo	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  struct ReleaseToOsInfo {$/;"	s	class:SizeClassAllocator64
ReleasedPagesTrackingMemoryMapper	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^class ReleasedPagesTrackingMemoryMapper {$/;"	c	file:
ReloadIntervalSec	lib/fuzzer/FuzzerOptions.h	/^  int ReloadIntervalSec = 1;$/;"	m	struct:fuzzer::FuzzingOptions
Remove	lib/tsan/rtl/tsan_mutexset.cc	/^void MutexSet::Remove(u64 id) {$/;"	f	class:__tsan::MutexSet
Remove	lib/tsan/rtl/tsan_mutexset.h	/^void MutexSet::Remove(u64 id) {}$/;"	f	class:__tsan::MutexSet
RemoveANSIEscapeSequencesFromString	lib/sanitizer_common/sanitizer_common.cc	/^void RemoveANSIEscapeSequencesFromString(char *str) {$/;"	f	namespace:__sanitizer
RemoveDieCallback	lib/sanitizer_common/sanitizer_termination.cc	/^bool RemoveDieCallback(DieCallbackType callback) {$/;"	f	namespace:__sanitizer
RemoveDieCallback	lib/scudo/scudo_termination.cpp	/^bool RemoveDieCallback(DieCallbackType Callback) { return true; }$/;"	f	namespace:__sanitizer
RemoveEdges	lib/sanitizer_common/tests/sanitizer_bvgraph_test.cc	/^void RemoveEdges() {$/;"	f
RemoveFile	lib/fuzzer/FuzzerIOPosix.cpp	/^void RemoveFile(const std::string &Path) {$/;"	f	namespace:fuzzer
RemoveFile	lib/fuzzer/FuzzerIOWindows.cpp	/^void RemoveFile(const std::string &Path) {$/;"	f	namespace:fuzzer
RemoveMultiLineComments	lib/sanitizer_common/scripts/cpplint.py	/^def RemoveMultiLineComments(filename, lines, error):$/;"	f
RemoveMultiLineCommentsFromRange	lib/sanitizer_common/scripts/cpplint.py	/^def RemoveMultiLineCommentsFromRange(lines, begin, end):$/;"	f
RemovePos	lib/tsan/rtl/tsan_mutexset.cc	/^void MutexSet::RemovePos(uptr i) {$/;"	f	class:__tsan::MutexSet
RemovePos	lib/tsan/rtl/tsan_mutexset.h	/^void MutexSet::RemovePos(uptr i) {}$/;"	f	class:__tsan::MutexSet
RenameFile	lib/sanitizer_common/sanitizer_posix.cc	/^bool RenameFile(const char *oldpath, const char *newpath, error_t *error_p) {$/;"	f	namespace:__sanitizer
RenameFile	lib/sanitizer_common/sanitizer_rtems.cc	/^bool RenameFile(const char *oldpath, const char *newpath, error_t *error_p) {$/;"	f	namespace:__sanitizer
RenameFile	lib/sanitizer_common/sanitizer_win.cc	/^bool RenameFile(const char *oldpath, const char *newpath, error_t *error_p) {$/;"	f	namespace:__sanitizer
RenderData	lib/sanitizer_common/sanitizer_stacktrace_printer.cc	/^void RenderData(InternalScopedString *buffer, const char *format,$/;"	f	namespace:__sanitizer
RenderData	lib/sanitizer_common/sanitizer_symbolizer_markup.cc	/^void RenderData(InternalScopedString *buffer, const char *format,$/;"	f	namespace:__sanitizer
RenderFrame	lib/sanitizer_common/sanitizer_stacktrace_printer.cc	/^void RenderFrame(InternalScopedString *buffer, const char *format, int frame_no,$/;"	f	namespace:__sanitizer
RenderFrame	lib/sanitizer_common/sanitizer_symbolizer_markup.cc	/^void RenderFrame(InternalScopedString *buffer, const char *format, int frame_no,$/;"	f	namespace:__sanitizer
RenderHex	lib/ubsan/ubsan_diag.cc	/^static void RenderHex(InternalScopedString *Buffer, UIntMax Val) {$/;"	f	file:
RenderLocation	lib/ubsan/ubsan_diag.cc	/^static void RenderLocation(InternalScopedString *Buffer, Location Loc) {$/;"	f	file:
RenderModuleLocation	lib/sanitizer_common/sanitizer_stacktrace_printer.cc	/^void RenderModuleLocation(InternalScopedString *buffer, const char *module,$/;"	f	namespace:__sanitizer
RenderSourceLocation	lib/sanitizer_common/sanitizer_stacktrace_printer.cc	/^void RenderSourceLocation(InternalScopedString *buffer, const char *file,$/;"	f	namespace:__sanitizer
RenderText	lib/ubsan/ubsan_diag.cc	/^static void RenderText(InternalScopedString *Buffer, const char *Message,$/;"	f	file:
ReopenIfNecessary	lib/sanitizer_common/sanitizer_file.cc	/^void ReportFile::ReopenIfNecessary() {$/;"	f	class:__sanitizer::ReportFile
Replace	lib/fuzzer/FuzzerCorpus.h	/^  void Replace(InputInfo *II, const Unit &U) {$/;"	f	class:fuzzer::InputCorpus
ReplaceSystemMalloc	lib/asan/asan_malloc_linux.cc	/^void ReplaceSystemMalloc() {$/;"	f	namespace:__asan
ReplaceSystemMalloc	lib/asan/asan_malloc_win.cc	/^void ReplaceSystemMalloc() {$/;"	f	namespace:__asan
ReplaceSystemMalloc	lib/lsan/lsan_linux.cc	/^void ReplaceSystemMalloc() {}$/;"	f	namespace:__lsan
ReplaceSystemMalloc	lib/tsan/rtl/tsan_platform_linux.cc	/^void ReplaceSystemMalloc() { }$/;"	f	namespace:__tsan
ReplaceableCheck	lib/sanitizer_common/scripts/cpplint.py	/^def ReplaceableCheck(operator, macro, line):$/;"	f
Report	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^void DD::Report(DDPhysicalThread *pt, DDLogicalThread *lt, int npath) {$/;"	f	class:__sanitizer::DD
Report	lib/sanitizer_common/sanitizer_flag_parser.cc	/^  void Report() {$/;"	f	class:__sanitizer::UnknownFlags
Report	lib/sanitizer_common/sanitizer_printf.cc	/^void Report(const char *format, ...) {$/;"	f	namespace:__sanitizer
ReportAllocTypeMismatch	lib/asan/asan_report.cc	/^void ReportAllocTypeMismatch(uptr addr, BufferedStackTrace *free_stack,$/;"	f	namespace:__asan
ReportAllocationSizeTooBig	lib/asan/asan_report.cc	/^void ReportAllocationSizeTooBig(uptr user_size, uptr total_size, uptr max_size,$/;"	f	namespace:__asan
ReportAllocationSizeTooBig	lib/lsan/lsan_allocator.cc	/^static void *ReportAllocationSizeTooBig(uptr size, const StackTrace &stack) {$/;"	f	namespace:__lsan
ReportAllocationSizeTooBig	lib/sanitizer_common/sanitizer_allocator_report.cc	/^void NORETURN ReportAllocationSizeTooBig(uptr user_size, uptr max_size,$/;"	f	namespace:__sanitizer
ReportAtExitStatistics	lib/msan/msan_report.cc	/^void ReportAtExitStatistics() {$/;"	f	namespace:__msan
ReportBadParamsToAnnotateContiguousContainer	lib/asan/asan_report.cc	/^void ReportBadParamsToAnnotateContiguousContainer(uptr beg, uptr end,$/;"	f	namespace:__asan
ReportCallocOverflow	lib/asan/asan_report.cc	/^void ReportCallocOverflow(uptr count, uptr size, BufferedStackTrace *stack) {$/;"	f	namespace:__asan
ReportCallocOverflow	lib/sanitizer_common/sanitizer_allocator_report.cc	/^void NORETURN ReportCallocOverflow(uptr count, uptr size,$/;"	f	namespace:__sanitizer
ReportDeadlock	lib/sanitizer_common/sanitizer_deadlock_detector1.cc	/^void DD::ReportDeadlock(DDCallback *cb, DDMutex *m) {$/;"	f	class:__sanitizer::DD
ReportDeadlock	lib/tsan/dd/dd_rtl.cc	/^static void ReportDeadlock(Thread *thr, DDReport *rep) {$/;"	f	namespace:__dsan
ReportDeadlock	lib/tsan/rtl/tsan_rtl_mutex.cc	/^void ReportDeadlock(ThreadState *thr, uptr pc, DDReport *r) {$/;"	f	namespace:__tsan
ReportDeadlySignal	lib/asan/asan_report.cc	/^void ReportDeadlySignal(const SignalContext &sig) {$/;"	f	namespace:__asan
ReportDeadlySignal	lib/sanitizer_common/sanitizer_symbolizer_markup.cc	/^void ReportDeadlySignal(const SignalContext &sig, u32 tid,$/;"	f	namespace:__sanitizer
ReportDeadlySignal	lib/sanitizer_common/sanitizer_symbolizer_report.cc	/^void ReportDeadlySignal(const SignalContext &sig, u32 tid,$/;"	f	namespace:__sanitizer
ReportDeadlySignalImpl	lib/sanitizer_common/sanitizer_symbolizer_report.cc	/^static void ReportDeadlySignalImpl(const SignalContext &sig, u32 tid,$/;"	f	namespace:__sanitizer
ReportDesc	lib/tsan/rtl/tsan_report.cc	/^ReportDesc::ReportDesc()$/;"	f	class:__tsan::ReportDesc
ReportDesc	lib/tsan/rtl/tsan_report.h	/^class ReportDesc {$/;"	c	namespace:__tsan
ReportDoubleFree	lib/asan/asan_report.cc	/^void ReportDoubleFree(uptr addr, BufferedStackTrace *free_stack) {$/;"	f	namespace:__asan
ReportError	lib/asan/asan_report.cc	/^  void ReportError(const ErrorDescription &description) {$/;"	f	class:__asan::ScopedInErrorReport
ReportErrorSummary	lib/sanitizer_common/sanitizer_common.cc	/^void ReportErrorSummary(const char *error_message, const char *alt_tool_name) {$/;"	f	namespace:__sanitizer
ReportErrorSummary	lib/sanitizer_common/sanitizer_symbolizer_report.cc	/^void ReportErrorSummary(const char *error_type, const AddressInfo &info,$/;"	f	namespace:__sanitizer
ReportErrorSummary	lib/sanitizer_common/sanitizer_symbolizer_report.cc	/^void ReportErrorSummary(const char *error_type, const StackTrace *stack,$/;"	f	namespace:__sanitizer
ReportErrors	include/xray/xray_log_interface.h	/^  bool ReportErrors = false;$/;"	m	struct:__xray::FDRLoggingOptions
ReportExpectedUMRNotFound	lib/msan/msan_report.cc	/^void ReportExpectedUMRNotFound(StackTrace *stack) {$/;"	f	namespace:__msan
ReportFile	lib/sanitizer_common/sanitizer_file.h	/^struct ReportFile {$/;"	s	namespace:__sanitizer
ReportFreeNotMalloced	lib/asan/asan_report.cc	/^void ReportFreeNotMalloced(uptr addr, BufferedStackTrace *free_stack) {$/;"	f	namespace:__asan
ReportGenericError	lib/asan/asan_report.cc	/^void ReportGenericError(uptr pc, uptr bp, uptr sp, uptr addr, bool is_write,$/;"	f	namespace:__asan
ReportGlobal	lib/asan/asan_globals.cc	/^static void ReportGlobal(const Global &g, const char *prefix) {$/;"	f	namespace:__asan
ReportIfNotSuspended	lib/lsan/lsan_common.cc	/^static void ReportIfNotSuspended(ThreadContextBase *tctx, void *arg) {$/;"	f	namespace:__lsan
ReportIgnoresEnabled	lib/tsan/rtl/tsan_rtl_thread.cc	/^static void ReportIgnoresEnabled(ThreadContext *tctx, IgnoreSet *set) {$/;"	f	namespace:__tsan
ReportIncompatibleRT	lib/asan/asan_linux.cc	/^static void ReportIncompatibleRT() {$/;"	f	namespace:__asan
ReportInternalAllocatorOutOfMemory	lib/sanitizer_common/sanitizer_allocator.cc	/^static void NORETURN ReportInternalAllocatorOutOfMemory(uptr requested_size) {$/;"	f	namespace:__sanitizer
ReportInvalidAccess	lib/hwasan/hwasan_report.cc	/^void ReportInvalidAccess(StackTrace *stack, u32 origin) {$/;"	f	namespace:__hwasan
ReportInvalidAccessInsideAddressRange	lib/hwasan/hwasan_report.cc	/^void ReportInvalidAccessInsideAddressRange(const char *what, const void *start,$/;"	f	namespace:__hwasan
ReportInvalidAlignedAllocAlignment	lib/asan/asan_report.cc	/^void ReportInvalidAlignedAllocAlignment(uptr size, uptr alignment,$/;"	f	namespace:__asan
ReportInvalidAlignedAllocAlignment	lib/sanitizer_common/sanitizer_allocator_report.cc	/^void NORETURN ReportInvalidAlignedAllocAlignment(uptr size, uptr alignment,$/;"	f	namespace:__sanitizer
ReportInvalidAllocationAlignment	lib/asan/asan_report.cc	/^void ReportInvalidAllocationAlignment(uptr alignment,$/;"	f	namespace:__asan
ReportInvalidAllocationAlignment	lib/sanitizer_common/sanitizer_allocator_report.cc	/^void NORETURN ReportInvalidAllocationAlignment(uptr alignment,$/;"	f	namespace:__sanitizer
ReportInvalidFree	lib/asan/asan_allocator.cc	/^  void ReportInvalidFree(void *ptr, u8 chunk_state, BufferedStackTrace *stack) {$/;"	f	struct:__asan::Allocator
ReportInvalidPointerPair	lib/asan/asan_report.cc	/^static NOINLINE void ReportInvalidPointerPair(uptr pc, uptr bp, uptr sp,$/;"	f	namespace:__asan
ReportInvalidPosixMemalignAlignment	lib/asan/asan_report.cc	/^void ReportInvalidPosixMemalignAlignment(uptr alignment,$/;"	f	namespace:__asan
ReportInvalidPosixMemalignAlignment	lib/sanitizer_common/sanitizer_allocator_report.cc	/^void NORETURN ReportInvalidPosixMemalignAlignment(uptr alignment,$/;"	f	namespace:__sanitizer
ReportLocation	lib/tsan/rtl/tsan_report.cc	/^ReportLocation::ReportLocation(ReportLocationType type)$/;"	f	class:__tsan::ReportLocation
ReportLocation	lib/tsan/rtl/tsan_report.h	/^struct ReportLocation {$/;"	s	namespace:__tsan
ReportLocationFD	lib/tsan/rtl/tsan_report.h	/^  ReportLocationFD$/;"	e	enum:__tsan::ReportLocationType
ReportLocationGlobal	lib/tsan/rtl/tsan_report.h	/^  ReportLocationGlobal,$/;"	e	enum:__tsan::ReportLocationType
ReportLocationHeap	lib/tsan/rtl/tsan_report.h	/^  ReportLocationHeap,$/;"	e	enum:__tsan::ReportLocationType
ReportLocationStack	lib/tsan/rtl/tsan_report.h	/^  ReportLocationStack,$/;"	e	enum:__tsan::ReportLocationType
ReportLocationTLS	lib/tsan/rtl/tsan_report.h	/^  ReportLocationTLS,$/;"	e	enum:__tsan::ReportLocationType
ReportLocationType	lib/tsan/rtl/tsan_report.h	/^enum ReportLocationType {$/;"	g	namespace:__tsan
ReportLocationTypeDescription	lib/tsan/rtl/tsan_debugging.cc	/^static const char *ReportLocationTypeDescription(ReportLocationType typ) {$/;"	f	file:
ReportMacMzReallocUnknown	lib/asan/asan_report.cc	/^void ReportMacMzReallocUnknown(uptr addr, uptr zone_ptr, const char *zone_name,$/;"	f	namespace:__asan
ReportMallocUsableSizeNotOwned	lib/asan/asan_report.cc	/^void ReportMallocUsableSizeNotOwned(uptr addr, BufferedStackTrace *stack) {$/;"	f	namespace:__asan
ReportMapRange	lib/msan/msan_linux.cc	/^void ReportMapRange(const char *descr, uptr beg, uptr size) {$/;"	f	namespace:__msan
ReportMissedExpectedRace	lib/tsan/rtl/tsan_interface_ann.cc	/^static void ReportMissedExpectedRace(ExpectRace *race) {$/;"	f	namespace:__tsan
ReportMmapFailureAndDie	lib/sanitizer_common/sanitizer_common.cc	/^void NORETURN ReportMmapFailureAndDie(uptr size, const char *mem_type,$/;"	f	namespace:__sanitizer
ReportMmapWriteExec	lib/sanitizer_common/sanitizer_symbolizer_report.cc	/^void ReportMmapWriteExec(int prot) {$/;"	f	namespace:__sanitizer
ReportMop	lib/tsan/rtl/tsan_report.cc	/^ReportMop::ReportMop()$/;"	f	class:__tsan::ReportMop
ReportMop	lib/tsan/rtl/tsan_report.h	/^struct ReportMop {$/;"	s	namespace:__tsan
ReportMopMutex	lib/tsan/rtl/tsan_report.h	/^struct ReportMopMutex {$/;"	s	namespace:__tsan
ReportMutex	lib/tsan/rtl/tsan_report.h	/^struct ReportMutex {$/;"	s	namespace:__tsan
ReportMutexMisuse	lib/tsan/rtl/tsan_rtl_mutex.cc	/^static void ReportMutexMisuse(ThreadState *thr, uptr pc, ReportType typ,$/;"	f	namespace:__tsan
ReportNewCoverage	lib/fuzzer/FuzzerLoop.cpp	/^void Fuzzer::ReportNewCoverage(InputInfo *II, const Unit &U) {$/;"	f	class:fuzzer::Fuzzer
ReportNewDeleteTypeMismatch	lib/asan/asan_report.cc	/^void ReportNewDeleteTypeMismatch(uptr addr, uptr delete_size,$/;"	f	namespace:__asan
ReportODRViolation	lib/asan/asan_report.cc	/^void ReportODRViolation(const __asan_global *g1, u32 stack_id1,$/;"	f	namespace:__asan
ReportOptions	lib/ubsan/ubsan_diag.h	/^struct ReportOptions {$/;"	s	namespace:__ubsan
ReportOutOfMemory	lib/asan/asan_report.cc	/^void ReportOutOfMemory(uptr requested_size, BufferedStackTrace *stack) {$/;"	f	namespace:__asan
ReportOutOfMemory	lib/sanitizer_common/sanitizer_allocator_report.cc	/^void NORETURN ReportOutOfMemory(uptr requested_size, const StackTrace *stack) {$/;"	f	namespace:__sanitizer
ReportPvallocOverflow	lib/asan/asan_report.cc	/^void ReportPvallocOverflow(uptr size, BufferedStackTrace *stack) {$/;"	f	namespace:__asan
ReportPvallocOverflow	lib/sanitizer_common/sanitizer_allocator_report.cc	/^void NORETURN ReportPvallocOverflow(uptr size, const StackTrace *stack) {$/;"	f	namespace:__sanitizer
ReportRace	lib/tsan/rtl/tsan_rtl_report.cc	/^void ReportRace(ThreadState *thr) {$/;"	f	namespace:__tsan
ReportRssLimitExceeded	lib/asan/asan_report.cc	/^void ReportRssLimitExceeded(BufferedStackTrace *stack) {$/;"	f	namespace:__asan
ReportSanitizerGetAllocatedSizeNotOwned	lib/asan/asan_report.cc	/^void ReportSanitizerGetAllocatedSizeNotOwned(uptr addr,$/;"	f	namespace:__asan
ReportSlowUnits	lib/fuzzer/FuzzerOptions.h	/^  int ReportSlowUnits = 10;$/;"	m	struct:fuzzer::FuzzingOptions
ReportStack	lib/tsan/rtl/tsan_report.cc	/^ReportStack::ReportStack() : frames(nullptr), suppressable(false) {}$/;"	f	class:__tsan::ReportStack
ReportStack	lib/tsan/rtl/tsan_report.h	/^struct ReportStack {$/;"	s	namespace:__tsan
ReportStackOverflowImpl	lib/sanitizer_common/sanitizer_symbolizer_report.cc	/^static void ReportStackOverflowImpl(const SignalContext &sig, u32 tid,$/;"	f	namespace:__sanitizer
ReportStats	lib/hwasan/hwasan_report.cc	/^void ReportStats() {}$/;"	f	namespace:__hwasan
ReportStats	lib/msan/msan_report.cc	/^void ReportStats() {$/;"	f	namespace:__msan
ReportStringFunctionMemoryRangesOverlap	lib/asan/asan_report.cc	/^void ReportStringFunctionMemoryRangesOverlap(const char *function,$/;"	f	namespace:__asan
ReportStringFunctionSizeOverflow	lib/asan/asan_report.cc	/^void ReportStringFunctionSizeOverflow(uptr offset, uptr size,$/;"	f	namespace:__asan
ReportSupportsColors	lib/sanitizer_common/sanitizer_symbolizer_report.cc	/^static INLINE bool ReportSupportsColors() { return true; }$/;"	f	namespace:__sanitizer
ReportSupportsColors	lib/sanitizer_common/sanitizer_symbolizer_report.cc	/^static INLINE bool ReportSupportsColors() {$/;"	f	namespace:__sanitizer
ReportTagMismatch	lib/hwasan/hwasan_report.cc	/^void ReportTagMismatch(StackTrace *stack, uptr addr, uptr access_size,$/;"	f	namespace:__hwasan
ReportThread	lib/tsan/rtl/tsan_report.h	/^struct ReportThread {$/;"	s	namespace:__tsan
ReportTopLeaks	lib/lsan/lsan_common.cc	/^void LeakReport::ReportTopLeaks(uptr num_leaks_to_report) {$/;"	f	class:__lsan::LeakReport
ReportType	lib/tsan/rtl/tsan_report.h	/^enum ReportType {$/;"	g	namespace:__tsan
ReportTypeDeadlock	lib/tsan/rtl/tsan_report.h	/^  ReportTypeDeadlock$/;"	e	enum:__tsan::ReportType
ReportTypeDescription	lib/tsan/rtl/tsan_debugging.cc	/^static const char *ReportTypeDescription(ReportType typ) {$/;"	f	file:
ReportTypeErrnoInSignal	lib/tsan/rtl/tsan_report.h	/^  ReportTypeErrnoInSignal,$/;"	e	enum:__tsan::ReportType
ReportTypeExternalRace	lib/tsan/rtl/tsan_report.h	/^  ReportTypeExternalRace,$/;"	e	enum:__tsan::ReportType
ReportTypeMutexBadReadLock	lib/tsan/rtl/tsan_report.h	/^  ReportTypeMutexBadReadLock,$/;"	e	enum:__tsan::ReportType
ReportTypeMutexBadReadUnlock	lib/tsan/rtl/tsan_report.h	/^  ReportTypeMutexBadReadUnlock,$/;"	e	enum:__tsan::ReportType
ReportTypeMutexBadUnlock	lib/tsan/rtl/tsan_report.h	/^  ReportTypeMutexBadUnlock,$/;"	e	enum:__tsan::ReportType
ReportTypeMutexDestroyLocked	lib/tsan/rtl/tsan_report.h	/^  ReportTypeMutexDestroyLocked,$/;"	e	enum:__tsan::ReportType
ReportTypeMutexDoubleLock	lib/tsan/rtl/tsan_report.h	/^  ReportTypeMutexDoubleLock,$/;"	e	enum:__tsan::ReportType
ReportTypeMutexInvalidAccess	lib/tsan/rtl/tsan_report.h	/^  ReportTypeMutexInvalidAccess,$/;"	e	enum:__tsan::ReportType
ReportTypeRace	lib/tsan/rtl/tsan_report.h	/^  ReportTypeRace,$/;"	e	enum:__tsan::ReportType
ReportTypeSignalUnsafe	lib/tsan/rtl/tsan_report.h	/^  ReportTypeSignalUnsafe,$/;"	e	enum:__tsan::ReportType
ReportTypeString	lib/tsan/rtl/tsan_report.cc	/^static const char *ReportTypeString(ReportType typ, uptr tag) {$/;"	f	namespace:__tsan
ReportTypeThreadLeak	lib/tsan/rtl/tsan_report.h	/^  ReportTypeThreadLeak,$/;"	e	enum:__tsan::ReportType
ReportTypeUseAfterFree	lib/tsan/rtl/tsan_report.h	/^  ReportTypeUseAfterFree,$/;"	e	enum:__tsan::ReportType
ReportTypeVptrRace	lib/tsan/rtl/tsan_report.h	/^  ReportTypeVptrRace,$/;"	e	enum:__tsan::ReportType
ReportTypeVptrUseAfterFree	lib/tsan/rtl/tsan_report.h	/^  ReportTypeVptrUseAfterFree,$/;"	e	enum:__tsan::ReportType
ReportUMR	lib/msan/msan_report.cc	/^void ReportUMR(StackTrace *stack, u32 origin) {$/;"	f	namespace:__msan
ReportUMRInsideAddressRange	lib/msan/msan_report.cc	/^void ReportUMRInsideAddressRange(const char *what, const void *start, uptr size,$/;"	f	namespace:__msan
ReportUnrecognizedFlags	lib/sanitizer_common/sanitizer_flag_parser.cc	/^void ReportUnrecognizedFlags() {$/;"	f	namespace:__sanitizer
ReportUnsuspendedThreads	lib/lsan/lsan_common.cc	/^static void ReportUnsuspendedThreads($/;"	f	namespace:__lsan
RepositoryName	lib/sanitizer_common/scripts/cpplint.py	/^  def RepositoryName(self):$/;"	m	class:FileInfo
RequiredSize	lib/asan/asan_fake_stack.h	/^  static uptr RequiredSize(uptr stack_size_log) {$/;"	f	class:__asan::FakeStack
RereadOutputCorpus	lib/fuzzer/FuzzerLoop.cpp	/^void Fuzzer::RereadOutputCorpus(size_t MaxSize) {$/;"	f	class:fuzzer::Fuzzer
ReserveShadowMemoryRange	lib/asan/asan_shadow_setup.cc	/^void ReserveShadowMemoryRange(uptr beg, uptr end, const char *name) {$/;"	f	namespace:__asan
ReserveShadowMemoryRange	lib/hwasan/hwasan_linux.cc	/^static void ReserveShadowMemoryRange(uptr beg, uptr end, const char *name) {$/;"	f	namespace:__hwasan
ReservedAddressRange	lib/sanitizer_common/sanitizer_common.h	/^class ReservedAddressRange {$/;"	c	namespace:__sanitizer
Reset	lib/fuzzer/FuzzerValueBitMap.h	/^  void Reset() { memset(Map, 0, sizeof(Map)); }$/;"	f	struct:fuzzer::ValueBitMap
Reset	lib/sanitizer_common/sanitizer_coverage_libcdep_new.cc	/^  void Reset() {$/;"	f	class:__sancov::__anon64::TracePcGuardController
Reset	lib/sanitizer_common/sanitizer_procmaps_common.cc	/^void MemoryMappingLayout::Reset() {$/;"	f	class:__sanitizer::MemoryMappingLayout
Reset	lib/sanitizer_common/sanitizer_procmaps_mac.cc	/^void MemoryMappingLayout::Reset() {$/;"	f	class:__sanitizer::MemoryMappingLayout
Reset	lib/sanitizer_common/sanitizer_stacktrace.h	/^  void Reset() {$/;"	f	struct:__sanitizer::BufferedStackTrace
Reset	lib/sanitizer_common/sanitizer_thread_registry.cc	/^void ThreadContextBase::Reset() {$/;"	f	class:__sanitizer::ThreadContextBase
Reset	lib/sanitizer_common/sanitizer_vector.h	/^  void Reset() {$/;"	f	class:__sanitizer::Vector
Reset	lib/tsan/rtl/tsan_clock.cc	/^void SyncClock::Reset(ClockCache *c) {$/;"	f	class:__tsan::SyncClock
Reset	lib/tsan/rtl/tsan_ignoreset.cc	/^void IgnoreSet::Reset() {$/;"	f	class:__tsan::IgnoreSet
Reset	lib/tsan/rtl/tsan_sync.cc	/^void SyncVar::Reset(Processor *proc) {$/;"	f	class:__tsan::SyncVar
Reset	lib/tsan/tests/unit/tsan_clock_test.cc	/^  void Reset() {$/;"	f	struct:__tsan::SimpleSyncClock
ResetCached	lib/tsan/rtl/tsan_clock.cc	/^void ThreadClock::ResetCached(ClockCache *c) {$/;"	f	class:__tsan::ThreadClock
ResetErrorCounts	lib/sanitizer_common/scripts/cpplint.py	/^  def ResetErrorCounts(self):$/;"	m	class:_CppLintState
ResetImpl	lib/tsan/rtl/tsan_clock.cc	/^void SyncClock::ResetImpl() {$/;"	f	class:__tsan::SyncClock
ResetMaps	lib/fuzzer/FuzzerTracePC.h	/^  void ResetMaps() {$/;"	f	class:fuzzer::TracePC
ResetNolintSuppressions	lib/sanitizer_common/scripts/cpplint.py	/^def ResetNolintSuppressions():$/;"	f
ResetRange	lib/tsan/rtl/tsan_sync.cc	/^void MetaMap::ResetRange(Processor *proc, uptr p, uptr sz) {$/;"	f	class:__tsan::MetaMap
ResetShadowMemory	lib/asan/asan_rtems.cc	/^static void ResetShadowMemory() {$/;"	f	namespace:__asan
ResetTagsCb	lib/lsan/lsan_common.cc	/^static void ResetTagsCb(uptr chunk, void *arg) {$/;"	f	namespace:__lsan
Resize	lib/sanitizer_common/sanitizer_vector.h	/^  void Resize(uptr size) {$/;"	f	class:__sanitizer::Vector
Resize	lib/tsan/rtl/tsan_clock.cc	/^void SyncClock::Resize(ClockCache *c, uptr nclk) {$/;"	f	class:__tsan::SyncClock
ResizeBuffer	lib/tsan/rtl/tsan_stack_trace.cc	/^void VarSizeStackTrace::ResizeBuffer(uptr new_size) {$/;"	f	class:__tsan::VarSizeStackTrace
ResizeFactor	lib/esan/esan_hashtable.h	/^  const u32 ResizeFactor;$/;"	m	class:__esan::HashTable
Restart	lib/sanitizer_common/sanitizer_symbolizer_libcdep.cc	/^bool SymbolizerProcess::Restart() {$/;"	f	class:__sanitizer::SymbolizerProcess
RestartHandler	test/tsan/signal_recursive.cc	/^static void RestartHandler(int sig) {$/;"	f	file:
Restore	lib/msan/msan.cc	/^void ScopedThreadLocalStateBackup::Restore() {$/;"	f	class:__msan::ScopedThreadLocalStateBackup
RestoreMemoryProtection	lib/interception/interception_win.cc	/^static bool RestoreMemoryProtection($/;"	f	namespace:__interception
RestoreStack	lib/tsan/rtl/tsan_rtl_report.cc	/^void RestoreStack(int tid, const u64 epoch, VarSizeStackTrace *stk,$/;"	f	namespace:__tsan
RestrictMemoryToMaxAddress	lib/sanitizer_common/sanitizer_mac_libcdep.cc	/^void RestrictMemoryToMaxAddress(uptr max_address) {$/;"	f	namespace:__sanitizer
Result	lib/sanitizer_common/sanitizer_linux.h	/^  enum Result {$/;"	g	class:__sanitizer::ThreadLister
ResumeAllThreads	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^void ThreadSuspender::ResumeAllThreads() {$/;"	f	class:__sanitizer::ThreadSuspender
RetOpCode	lib/xray/xray_x86_64.cc	/^static constexpr uint8_t RetOpCode = 0xc3;$/;"	m	namespace:__xray	file:
Return	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^void ScopedThread::Return() {$/;"	f	class:ScopedThread
ReturnLongStruct1	lib/msan/tests/msan_test.cc	/^NOINLINE LongStruct ReturnLongStruct1() {$/;"	f
ReturnLongStruct2	lib/msan/tests/msan_test.cc	/^NOINLINE LongStruct ReturnLongStruct2() {$/;"	f
ReturnNullptrOnOOMOrDie	lib/sanitizer_common/sanitizer_win.cc	/^static void *ReturnNullptrOnOOMOrDie(uptr size, const char *mem_type,$/;"	f	namespace:__sanitizer
ReturnPoisoned	lib/msan/tests/msan_test.cc	/^template<class T> NOINLINE T ReturnPoisoned() { return *GetPoisoned<T>(); }$/;"	f
ReturnStruct	lib/msan/tests/msan_test.cc	/^NOINLINE T ReturnStruct() {$/;"	f
ReturnStructWithHole	lib/msan/tests/msan_test.cc	/^NOINLINE StructWithHole ReturnStructWithHole() {$/;"	f
ReturnToAllocator	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  NOINLINE void ReturnToAllocator(AllocatorStats *stat, uptr class_id,$/;"	f	class:SizeClassAllocator64
ReturnsPointerToALocalObject	lib/asan/tests/asan_test.cc	/^int *ReturnsPointerToALocalObject() {$/;"	f
RetvalOriginTest	lib/msan/tests/msan_test.cc	/^NOINLINE int RetvalOriginTest(U4 origin) {$/;"	f
ReverseOrder	lib/tsan/rtl/tsan_stack_trace.cc	/^void VarSizeStackTrace::ReverseOrder() {$/;"	f	class:__tsan::VarSizeStackTrace
RightOOBErrorMessage	lib/asan/tests/asan_test.cc	/^string RightOOBErrorMessage(int oob_distance, bool is_write) {$/;"	f
RightOOBReadMessage	lib/asan/tests/asan_str_test.cc	/^string RightOOBReadMessage(OOBKind oob_kind, int oob_distance) {$/;"	f	namespace:__anon40
RightOOBReadMessage	lib/asan/tests/asan_test.cc	/^string RightOOBReadMessage(int oob_distance) {$/;"	f
RightOOBWriteMessage	lib/asan/tests/asan_test.cc	/^string RightOOBWriteMessage(int oob_distance) {$/;"	f
RootAllocator	lib/xray/xray_function_call_trie.h	/^    RootAllocatorType *RootAllocator = nullptr;$/;"	m	struct:__xray::FunctionCallTrie::Allocators
RootRegion	lib/lsan/lsan_common.h	/^struct RootRegion {$/;"	s	namespace:__lsan
Roots	lib/xray/xray_function_call_trie.h	/^  RootArray Roots;$/;"	m	class:__xray::FunctionCallTrie
RootsDirectory	test/BlocksRuntime/makefile	/^RootsDirectory ?= \/tmp\/$/;"	m
RoundDown	lib/tsan/rtl/tsan_defs.h	/^T RoundDown(T p, u64 align) {$/;"	f	namespace:__tsan
RoundDownTo	lib/sanitizer_common/sanitizer_common.h	/^INLINE uptr RoundDownTo(uptr x, uptr boundary) {$/;"	f	namespace:__sanitizer
RoundUp	lib/tsan/rtl/tsan_defs.h	/^T RoundUp(T p, u64 align) {$/;"	f	namespace:__tsan
RoundUp	test/tsan/deep_stack1.cc	/^static size_t RoundUp(size_t n, size_t to) {$/;"	f	file:
RoundUpMapSize	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^  uptr RoundUpMapSize(uptr size) {$/;"	f	class:LargeMmapAllocator
RoundUpTo	lib/interception/interception_win.cc	/^static uptr RoundUpTo(uptr size, uptr boundary) {$/;"	f	namespace:__interception
RoundUpTo	lib/sanitizer_common/sanitizer_common.h	/^INLINE uptr RoundUpTo(uptr size, uptr boundary) {$/;"	f	namespace:__sanitizer
RoundUpTo	lib/scudo/scudo_allocator.h	/^constexpr uptr RoundUpTo(uptr Size, uptr Boundary) {$/;"	f	namespace:__scudo
RoundUpToInstrBoundary	lib/interception/interception_win.cc	/^static size_t RoundUpToInstrBoundary(size_t size, uptr address) {$/;"	f	namespace:__interception
RoundUpToPowerOfTwo	lib/sanitizer_common/sanitizer_common.h	/^INLINE uptr RoundUpToPowerOfTwo(uptr size) {$/;"	f	namespace:__sanitizer
RssLastCheckedAtNS	lib/scudo/scudo_allocator.cpp	/^  atomic_uint64_t RssLastCheckedAtNS;$/;"	m	struct:__scudo::Allocator	file:
RssLimitCallback	lib/fuzzer/FuzzerLoop.cpp	/^void Fuzzer::RssLimitCallback() {$/;"	f	class:fuzzer::Fuzzer
RssLimitExceeded	lib/asan/asan_allocator.cc	/^  bool RssLimitExceeded() {$/;"	f	struct:__asan::Allocator
RssLimitExceeded	lib/scudo/scudo_allocator.cpp	/^  atomic_uint8_t RssLimitExceeded;$/;"	m	struct:__scudo::Allocator	file:
RssLimitMb	lib/fuzzer/FuzzerOptions.h	/^  int RssLimitMb = 0;$/;"	m	struct:fuzzer::FuzzingOptions
RssThread	lib/fuzzer/FuzzerDriver.cpp	/^static void RssThread(Fuzzer *F, size_t RssLimitMb) {$/;"	f	namespace:fuzzer
Run	lib/tsan/benchmarks/mini_bench_local.cc	/^void Run(int idx) {$/;"	f
Run	lib/tsan/benchmarks/mini_bench_shared.cc	/^void Run(int idx) {$/;"	f
Run	test/asan/TestCases/Linux/swapcontext_annotation.cc	/^int Run(int arg, int mode, char *child_stack) {$/;"	f
Run	test/asan/TestCases/Linux/swapcontext_test.cc	/^int Run(int arg, int mode, char *child_stack) {$/;"	f
RunAddEdgesTest	lib/sanitizer_common/tests/sanitizer_bvgraph_test.cc	/^void RunAddEdgesTest() {$/;"	f
RunAtexit	lib/sanitizer_common/sanitizer_win.cc	/^static int RunAtexit() {$/;"	f	namespace:__sanitizer
RunAtoiOOBTest	lib/asan/tests/asan_str_test.cc	/^void RunAtoiOOBTest(PointerToCallAtoi Atoi) {$/;"	f
RunBasicTest	lib/sanitizer_common/tests/sanitizer_deadlock_detector_test.cc	/^void RunBasicTest() {$/;"	f
RunCallbackForEachThreadLocked	lib/sanitizer_common/sanitizer_thread_registry.cc	/^void ThreadRegistry::RunCallbackForEachThreadLocked(ThreadCallback cb,$/;"	f	class:__sanitizer::ThreadRegistry
RunCorrectEpochFlush	lib/sanitizer_common/tests/sanitizer_deadlock_detector_test.cc	/^void RunCorrectEpochFlush() {$/;"	f
RunFreeHooks	lib/sanitizer_common/sanitizer_common.cc	/^void RunFreeHooks(const void *ptr) {$/;"	f	namespace:__sanitizer
RunInMultipleProcesses	lib/fuzzer/FuzzerDriver.cpp	/^static int RunInMultipleProcesses(const Vector<std::string> &Args,$/;"	f	namespace:fuzzer
RunLockContextTest	lib/sanitizer_common/tests/sanitizer_deadlock_detector_test.cc	/^void RunLockContextTest() {$/;"	f
RunMallocHooks	lib/sanitizer_common/sanitizer_common.cc	/^void RunMallocHooks(const void *ptr, uptr size) {$/;"	f	namespace:__sanitizer
RunMultipleEpochsTest	lib/sanitizer_common/tests/sanitizer_deadlock_detector_test.cc	/^void RunMultipleEpochsTest() {$/;"	f
RunOnDestruction	lib/fuzzer/FuzzerUtilFuchsia.cpp	/^  explicit RunOnDestruction(Fn fn) : fn_(fn) {}$/;"	f	class:fuzzer::RunOnDestruction
RunOnDestruction	lib/fuzzer/FuzzerUtilFuchsia.cpp	/^class RunOnDestruction {$/;"	c	namespace:fuzzer	file:
RunOnDestruction	lib/sanitizer_common/sanitizer_common.h	/^  explicit RunOnDestruction(Fn fn) : fn_(fn) {}$/;"	f	class:__sanitizer::RunOnDestruction
RunOnDestruction	lib/sanitizer_common/sanitizer_common.h	/^class RunOnDestruction {$/;"	c	namespace:__sanitizer
RunOnFirstLockTest	lib/sanitizer_common/tests/sanitizer_deadlock_detector_test.cc	/^void RunOnFirstLockTest() {$/;"	f
RunOne	lib/fuzzer/FuzzerLoop.cpp	/^bool Fuzzer::RunOne(const uint8_t *Data, size_t Size, bool MayDeleteFile,$/;"	f	class:fuzzer::Fuzzer
RunOneTest	lib/fuzzer/FuzzerDriver.cpp	/^int RunOneTest(Fuzzer *F, const char *InputFilePath, size_t MaxLen) {$/;"	f	namespace:fuzzer
RunRecusriveLockTest	lib/sanitizer_common/tests/sanitizer_deadlock_detector_test.cc	/^void RunRecusriveLockTest() {$/;"	f
RunRemoveEdgesTest	lib/sanitizer_common/tests/sanitizer_deadlock_detector_test.cc	/^void RunRemoveEdgesTest() {$/;"	f
RunRemoveNodeTest	lib/sanitizer_common/tests/sanitizer_deadlock_detector_test.cc	/^void RunRemoveNodeTest() {$/;"	f
RunStrChrTest	lib/asan/tests/asan_str_test.cc	/^UNUSED static void RunStrChrTest(PointerToStrChr1 StrChr, ...) {$/;"	f	file:
RunStrChrTest	lib/asan/tests/asan_str_test.cc	/^UNUSED static void RunStrChrTest(PointerToStrChr2 StrChr, int) {$/;"	f	file:
RunStrChrTestImpl	lib/asan/tests/asan_str_test.cc	/^static void RunStrChrTestImpl(StrChrFn *StrChr) {$/;"	f	file:
RunStrCmpTest	lib/asan/tests/asan_str_test.cc	/^void RunStrCmpTest(PointerToStrCmp StrCmp) {$/;"	f
RunStrNCmpTest	lib/asan/tests/asan_str_test.cc	/^void RunStrNCmpTest(PointerToStrNCmp StrNCmp) {$/;"	f
RunStrtolOOBTest	lib/asan/tests/asan_str_test.cc	/^void RunStrtolOOBTest(PointerToCallStrtol Strtol) {$/;"	f
RunThread	lib/sanitizer_common/sanitizer_stoptheworld_mac.cc	/^void RunThread(void *arg) {$/;"	f	namespace:__sanitizer
RunThread	lib/sanitizer_common/tests/sanitizer_thread_registry_test.cc	/^void *RunThread(void *arg) {$/;"	f	namespace:__sanitizer
RunThread	test/asan/TestCases/Posix/deep_thread_stack.cc	/^void RunThread(callback_type function) {$/;"	f
RunThreadArgs	lib/sanitizer_common/sanitizer_stoptheworld_mac.cc	/^struct RunThreadArgs {$/;"	s	namespace:__sanitizer	file:
RunThreadArgs	lib/sanitizer_common/tests/sanitizer_thread_registry_test.cc	/^struct RunThreadArgs {$/;"	s	namespace:__sanitizer::__anon61	file:
RunThreads	test/tsan/deadlock_detector_stress_test.cc	/^  void RunThreads(void (LockTest::*f1)(), void (LockTest::*f2)(),$/;"	f	class:LockTest	file:
RunTryLockTest	lib/sanitizer_common/tests/sanitizer_deadlock_detector_test.cc	/^void RunTryLockTest() {$/;"	f
RunnerThread	test/asan/TestCases/Posix/deep_thread_stack.cc	/^void *RunnerThread(void *function) {$/;"	f
Running	lib/xray/xray_recursion_guard.h	/^  atomic_uint8_t &Running;$/;"	m	class:__xray::RecursionGuard
RunningOnValgrind	lib/tsan/rtl/tsan_interface_ann.cc	/^int INTERFACE_ATTRIBUTE RunningOnValgrind() {$/;"	f
RunningUserCallback	lib/fuzzer/FuzzerLoop.cpp	/^bool RunningUserCallback = false;$/;"	m	namespace:fuzzer	file:
S	lib/builtins/hexagon/sfsqrt_opt.S	/^#define S r0$/;"	d
S	lib/msan/tests/msan_test.cc	/^struct S {$/;"	s	namespace:__anon9	file:
S	lib/sanitizer_common/sanitizer_allocator_size_class_map.h	/^  static const uptr S = kNumBits - 1;$/;"	m	class:SizeClassMap
S	lib/sanitizer_common/tests/sanitizer_format_interceptor_test.cc	/^static const unsigned S = sizeof(short);$/;"	v	file:
S	lib/xray/xray_segmented_array.h	/^    SegmentBase *S = &SentinelSegment;$/;"	m	class:__xray::Array::Iterator
S	test/asan/TestCases/Windows/bitfield.cc	/^} S;$/;"	t	typeref:struct:_S	file:
S	test/asan/TestCases/Windows/bitfield_uaf.cc	/^} S;$/;"	t	typeref:struct:_S	file:
S	test/asan/TestCases/speculative_load.cc	/^  S() {$/;"	f	struct:S
S	test/asan/TestCases/speculative_load.cc	/^struct S {$/;"	s	file:
S	test/cfi/mfcall.cpp	/^struct S : SBase1, SBase2 {$/;"	s	file:
S	test/esan/TestCases/struct-simple.cpp	/^struct S {$/;"	s	file:
S	test/msan/mul_by_const.cc	/^  S(int a0) : a(a0) {}$/;"	f	struct:S
S	test/msan/mul_by_const.cc	/^struct S {$/;"	s	file:
S	test/msan/param_tls_limit.cc	/^struct S {$/;"	s	file:
S	test/tsan/tsan-vs-gvn.cc	/^} S;$/;"	v	typeref:struct:__anon130
S	test/ubsan/TestCases/TypeCheck/misaligned.cpp	/^  S() {}$/;"	f	struct:S
S	test/ubsan/TestCases/TypeCheck/misaligned.cpp	/^struct S {$/;"	s	file:
S	test/ubsan/TestCases/TypeCheck/null.cpp	/^struct S {$/;"	s	file:
S	test/ubsan/TestCases/TypeCheck/vptr-corrupted-vtable-itanium.cpp	/^  S() {}$/;"	f	struct:S
S	test/ubsan/TestCases/TypeCheck/vptr-corrupted-vtable-itanium.cpp	/^struct S {$/;"	s	file:
S	test/ubsan/TestCases/TypeCheck/vptr-virtual-base.cpp	/^struct S { virtual int f() { return 0; } };$/;"	s	file:
S	test/ubsan/TestCases/TypeCheck/vptr.cpp	/^  S() : a(0) {}$/;"	f	struct:S
S	test/ubsan/TestCases/TypeCheck/vptr.cpp	/^struct S {$/;"	s	file:
S1	lib/msan/tests/msan_test.cc	/^typedef   signed char      S1;$/;"	t	file:
S1	test/cfi/cross-dso-diagnostic.cpp	/^struct S1 {$/;"	s	file:
S1	test/ubsan/TestCases/Misc/nullability.c	/^struct S1 {$/;"	s	file:
S12	test/asan/TestCases/Linux/aligned_delete_test.cc	/^struct S12 { int a, b, c; };$/;"	s	file:
S12	test/asan/TestCases/Linux/sized_delete_test.cc	/^struct S12 {$/;"	s	file:
S12	test/sanitizer_common/TestCases/Linux/new_delete_test.cc	/^struct S12 { int a, b, c; };$/;"	s	file:
S12	test/scudo/aligned-new.cpp	/^struct S12 { int a, b, c; };$/;"	s	file:
S2	lib/msan/tests/msan_test.cc	/^typedef   signed short     S2;  \/\/ NOLINT$/;"	t	file:
S20	test/asan/TestCases/Linux/sized_delete_test.cc	/^struct S20 {$/;"	s	file:
S32	test/asan/TestCases/scariness_score_test.cc	/^struct S32 {$/;"	s	file:
S4	lib/msan/tests/msan_test.cc	/^typedef   signed int       S4;$/;"	t	file:
S8	lib/msan/tests/msan_test.cc	/^typedef   signed long long S8;  \/\/ NOLINT$/;"	t	file:
SANCOV_FLAG	lib/sanitizer_common/sancov_flags.cc	29;"	d	file:
SANCOV_FLAG	lib/sanitizer_common/sancov_flags.cc	31;"	d	file:
SANCOV_FLAG	lib/sanitizer_common/sancov_flags.cc	35;"	d	file:
SANCOV_FLAG	lib/sanitizer_common/sancov_flags.cc	38;"	d	file:
SANCOV_FLAG	lib/sanitizer_common/sancov_flags.h	22;"	d
SANCOV_FLAG	lib/sanitizer_common/sancov_flags.h	24;"	d
SANCOV_FLAGS_H	lib/sanitizer_common/sancov_flags.h	14;"	d
SANITIZER_ADDRHASHMAP_H	lib/sanitizer_common/sanitizer_addrhashmap.h	15;"	d
SANITIZER_ALLOCATOR_CHECKS_H	lib/sanitizer_common/sanitizer_allocator_checks.h	16;"	d
SANITIZER_ALLOCATOR_H	lib/sanitizer_common/sanitizer_allocator.h	15;"	d
SANITIZER_ALLOCATOR_INTERFACE_H	include/sanitizer/allocator_interface.h	13;"	d
SANITIZER_ALLOCATOR_INTERFACE_H	lib/sanitizer_common/sanitizer_allocator_interface.h	15;"	d
SANITIZER_ALLOCATOR_INTERNAL_H	lib/sanitizer_common/sanitizer_allocator_internal.h	15;"	d
SANITIZER_ALLOCATOR_REPORT_H	lib/sanitizer_common/sanitizer_allocator_report.h	16;"	d
SANITIZER_ANDROID	lib/sanitizer_common/sanitizer_platform.h	97;"	d
SANITIZER_ANDROID	lib/sanitizer_common/sanitizer_platform.h	99;"	d
SANITIZER_ANDROID_LOG_INFO	lib/sanitizer_common/sanitizer_linux_libcdep.cc	725;"	d	file:
SANITIZER_ARM	lib/sanitizer_common/sanitizer_platform.h	200;"	d
SANITIZER_ARM	lib/sanitizer_common/sanitizer_platform.h	202;"	d
SANITIZER_ASAN_INTERFACE_H	include/sanitizer/asan_interface.h	15;"	d
SANITIZER_ATOMIC_CLANG_H	lib/sanitizer_common/sanitizer_atomic_clang.h	16;"	d
SANITIZER_ATOMIC_CLANG_MIPS_H	lib/sanitizer_common/sanitizer_atomic_clang_mips.h	16;"	d
SANITIZER_ATOMIC_CLANG_OTHER_H	lib/sanitizer_common/sanitizer_atomic_clang_other.h	16;"	d
SANITIZER_ATOMIC_CLANG_X86_H	lib/sanitizer_common/sanitizer_atomic_clang_x86.h	16;"	d
SANITIZER_ATOMIC_H	lib/sanitizer_common/sanitizer_atomic.h	15;"	d
SANITIZER_ATOMIC_MSVC_H	lib/sanitizer_common/sanitizer_atomic_msvc.h	16;"	d
SANITIZER_BITVECTOR_H	lib/sanitizer_common/sanitizer_bitvector.h	15;"	d
SANITIZER_BVGRAPH_H	lib/sanitizer_common/sanitizer_bvgraph.h	16;"	d
SANITIZER_CACHE_LINE_SIZE	lib/sanitizer_common/sanitizer_platform.h	328;"	d
SANITIZER_CACHE_LINE_SIZE	lib/sanitizer_common/sanitizer_platform.h	330;"	d
SANITIZER_CAN_FAST_UNWIND	lib/sanitizer_common/sanitizer_stacktrace.h	23;"	d
SANITIZER_CAN_FAST_UNWIND	lib/sanitizer_common/sanitizer_stacktrace.h	25;"	d
SANITIZER_CAN_FAST_UNWIND	lib/sanitizer_common/sanitizer_stacktrace.h	27;"	d
SANITIZER_CAN_FAST_UNWIND	lib/sanitizer_common/sanitizer_stacktrace.h	29;"	d
SANITIZER_CAN_SLOW_UNWIND	lib/sanitizer_common/sanitizer_stacktrace.h	36;"	d
SANITIZER_CAN_SLOW_UNWIND	lib/sanitizer_common/sanitizer_stacktrace.h	38;"	d
SANITIZER_CAN_USE_ALLOCATOR64	lib/sanitizer_common/sanitizer_platform.h	224;"	d
SANITIZER_CAN_USE_ALLOCATOR64	lib/sanitizer_common/sanitizer_platform.h	226;"	d
SANITIZER_CAN_USE_ALLOCATOR64	lib/sanitizer_common/sanitizer_platform.h	228;"	d
SANITIZER_CAN_USE_PREINIT_ARRAY	lib/sanitizer_common/sanitizer_internal_defs.h	110;"	d
SANITIZER_CAN_USE_PREINIT_ARRAY	lib/sanitizer_common/sanitizer_internal_defs.h	114;"	d
SANITIZER_CAN_USE_PREINIT_ARRAY	lib/sanitizer_common/sanitizer_internal_defs.h	116;"	d
SANITIZER_COMMON_H	lib/sanitizer_common/sanitizer_common.h	17;"	d
SANITIZER_COMMON_INTERFACE_DEFS_H	include/sanitizer/common_interface_defs.h	14;"	d
SANITIZER_COVERAG_INTERFACE_H	include/sanitizer/coverage_interface.h	14;"	d
SANITIZER_CP_DEMANGLE	lib/sanitizer_common/sanitizer_symbolizer_libbacktrace.h	27;"	d
SANITIZER_DEADLOCK_DETECTOR_H	lib/sanitizer_common/sanitizer_deadlock_detector.h	27;"	d
SANITIZER_DEADLOCK_DETECTOR_INTERFACE_H	lib/sanitizer_common/sanitizer_deadlock_detector_interface.h	17;"	d
SANITIZER_DEADLOCK_DETECTOR_VERSION	lib/sanitizer_common/sanitizer_deadlock_detector_interface.h	20;"	d
SANITIZER_DEBUG	lib/sanitizer_common/sanitizer_internal_defs.h	19;"	d
SANITIZER_DEFS_H	lib/sanitizer_common/sanitizer_internal_defs.h	14;"	d
SANITIZER_ERRNO_CODES_H	lib/sanitizer_common/sanitizer_errno_codes.h	21;"	d
SANITIZER_ERRNO_H	lib/sanitizer_common/sanitizer_errno.h	20;"	d
SANITIZER_ESAN_INTERFACE_H	include/sanitizer/esan_interface.h	15;"	d
SANITIZER_FILE_H	lib/sanitizer_common/sanitizer_file.h	17;"	d
SANITIZER_FLAGS_H	lib/sanitizer_common/sanitizer_flags.h	15;"	d
SANITIZER_FLAG_REGISTRY_H	lib/sanitizer_common/sanitizer_flag_parser.h	15;"	d
SANITIZER_FREEBSD	lib/sanitizer_common/sanitizer_platform.h	30;"	d
SANITIZER_FREEBSD	lib/sanitizer_common/sanitizer_platform.h	32;"	d
SANITIZER_FREEBSD_H	lib/sanitizer_common/sanitizer_freebsd.h	16;"	d
SANITIZER_FREE_HOOK	lib/sanitizer_common/tests/sanitizer_allocator_testlib.cc	34;"	d	file:
SANITIZER_FUCHSIA	lib/sanitizer_common/sanitizer_platform.h	103;"	d
SANITIZER_FUCHSIA	lib/sanitizer_common/sanitizer_platform.h	105;"	d
SANITIZER_FUCHSIA_H	lib/sanitizer_common/sanitizer_fuchsia.h	14;"	d
SANITIZER_GETAUXVAL_H	lib/sanitizer_common/sanitizer_getauxval.h	17;"	d
SANITIZER_GET_C_LOCALE	lib/asan/tests/asan_test.cc	19;"	d	file:
SANITIZER_GET_C_LOCALE	lib/asan/tests/asan_test.cc	22;"	d	file:
SANITIZER_GET_C_LOCALE	lib/asan/tests/asan_test.cc	24;"	d	file:
SANITIZER_GO	lib/sanitizer_common/sanitizer_platform.h	305;"	d
SANITIZER_HAS_STRUCT_FILE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	429;"	d
SANITIZER_HAS_STRUCT_FILE	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	333;"	d
SANITIZER_HAS_STRUCT_FILE	lib/sanitizer_common/sanitizer_platform_limits_posix.h	872;"	d
SANITIZER_HAS_STRUCT_FILE	lib/sanitizer_common/sanitizer_platform_limits_posix.h	875;"	d
SANITIZER_HAS_STRUCT_FILE	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	358;"	d
SANITIZER_HWASAN_INTERFACE_H	include/sanitizer/hwasan_interface.h	15;"	d
SANITIZER_IMPORT_INTERFACE	lib/asan/asan_win_dynamic_runtime_thunk.cc	25;"	d	file:
SANITIZER_IMPORT_INTERFACE	lib/sanitizer_common/sanitizer_coverage_win_dynamic_runtime_thunk.cc	15;"	d	file:
SANITIZER_IMPORT_INTERFACE	lib/sanitizer_common/sanitizer_win_dynamic_runtime_thunk.cc	15;"	d	file:
SANITIZER_IMPORT_INTERFACE	lib/ubsan/ubsan_win_dynamic_runtime_thunk.cc	15;"	d	file:
SANITIZER_INTERCEPTOR_HOOKS	lib/sanitizer_common/sanitizer_platform_interceptors.h	440;"	d
SANITIZER_INTERCEPT_ACCEPT	lib/sanitizer_common/sanitizer_platform_interceptors.h	238;"	d
SANITIZER_INTERCEPT_ACCEPT4	lib/sanitizer_common/sanitizer_platform_interceptors.h	239;"	d
SANITIZER_INTERCEPT_ACCESS	lib/sanitizer_common/sanitizer_platform_interceptors.h	487;"	d
SANITIZER_INTERCEPT_ACCT	lib/sanitizer_common/sanitizer_platform_interceptors.h	482;"	d
SANITIZER_INTERCEPT_AEABI_MEM	lib/sanitizer_common/sanitizer_platform_interceptors.h	399;"	d
SANITIZER_INTERCEPT_AEABI_MEM	lib/sanitizer_common/sanitizer_platform_interceptors.h	401;"	d
SANITIZER_INTERCEPT_ALIGNED_ALLOC	lib/sanitizer_common/sanitizer_platform_interceptors.h	475;"	d
SANITIZER_INTERCEPT_BACKTRACE	lib/sanitizer_common/sanitizer_platform_interceptors.h	307;"	d
SANITIZER_INTERCEPT_BSD_SIGNAL	lib/sanitizer_common/sanitizer_platform_interceptors.h	480;"	d
SANITIZER_INTERCEPT_CANONICALIZE_FILE_NAME	lib/sanitizer_common/sanitizer_platform_interceptors.h	281;"	d
SANITIZER_INTERCEPT_CAPGET	lib/sanitizer_common/sanitizer_platform_interceptors.h	397;"	d
SANITIZER_INTERCEPT_CFREE	lib/sanitizer_common/sanitizer_platform_interceptors.h	472;"	d
SANITIZER_INTERCEPT_CLOCK_GETTIME	lib/sanitizer_common/sanitizer_platform_interceptors.h	215;"	d
SANITIZER_INTERCEPT_CONFSTR	lib/sanitizer_common/sanitizer_platform_interceptors.h	283;"	d
SANITIZER_INTERCEPT_CTERMID	lib/sanitizer_common/sanitizer_platform_interceptors.h	436;"	d
SANITIZER_INTERCEPT_CTERMID_R	lib/sanitizer_common/sanitizer_platform_interceptors.h	438;"	d
SANITIZER_INTERCEPT_DEVNAME	lib/sanitizer_common/sanitizer_platform_interceptors.h	506;"	d
SANITIZER_INTERCEPT_DEVNAME_R	lib/sanitizer_common/sanitizer_platform_interceptors.h	507;"	d
SANITIZER_INTERCEPT_DLOPEN_DLCLOSE	lib/sanitizer_common/sanitizer_platform_interceptors.h	419;"	d
SANITIZER_INTERCEPT_DRAND48_R	lib/sanitizer_common/sanitizer_platform_interceptors.h	362;"	d
SANITIZER_INTERCEPT_ETHER_HOST	lib/sanitizer_common/sanitizer_platform_interceptors.h	320;"	d
SANITIZER_INTERCEPT_ETHER_NTOA_ATON	lib/sanitizer_common/sanitizer_platform_interceptors.h	319;"	d
SANITIZER_INTERCEPT_ETHER_R	lib/sanitizer_common/sanitizer_platform_interceptors.h	322;"	d
SANITIZER_INTERCEPT_EVENTFD_READ_WRITE	lib/sanitizer_common/sanitizer_platform_interceptors.h	444;"	d
SANITIZER_INTERCEPT_FACCESSAT	lib/sanitizer_common/sanitizer_platform_interceptors.h	488;"	d
SANITIZER_INTERCEPT_FCLOSE	lib/sanitizer_common/sanitizer_platform_interceptors.h	416;"	d
SANITIZER_INTERCEPT_FFLUSH	lib/sanitizer_common/sanitizer_platform_interceptors.h	415;"	d
SANITIZER_INTERCEPT_FGETLN	lib/sanitizer_common/sanitizer_platform_interceptors.h	508;"	d
SANITIZER_INTERCEPT_FGETPWENT	lib/sanitizer_common/sanitizer_platform_interceptors.h	210;"	d
SANITIZER_INTERCEPT_FGETPWENT	lib/tsan/rtl/tsan_interceptors.cc	2177;"	d	file:
SANITIZER_INTERCEPT_FGETS	lib/sanitizer_common/sanitizer_platform_interceptors.h	167;"	d
SANITIZER_INTERCEPT_FOPEN	lib/sanitizer_common/sanitizer_platform_interceptors.h	410;"	d
SANITIZER_INTERCEPT_FOPEN64	lib/sanitizer_common/sanitizer_platform_interceptors.h	411;"	d
SANITIZER_INTERCEPT_FOPENCOOKIE	lib/sanitizer_common/sanitizer_platform_interceptors.h	429;"	d
SANITIZER_INTERCEPT_FPUTS	lib/sanitizer_common/sanitizer_platform_interceptors.h	168;"	d
SANITIZER_INTERCEPT_FREAD	lib/sanitizer_common/sanitizer_platform_interceptors.h	165;"	d
SANITIZER_INTERCEPT_FREXP	lib/sanitizer_common/sanitizer_platform_interceptors.h	200;"	d
SANITIZER_INTERCEPT_FREXPF_FREXPL	lib/sanitizer_common/sanitizer_platform_interceptors.h	201;"	d
SANITIZER_INTERCEPT_FTIME	lib/sanitizer_common/sanitizer_platform_interceptors.h	404;"	d
SANITIZER_INTERCEPT_FWRITE	lib/sanitizer_common/sanitizer_platform_interceptors.h	166;"	d
SANITIZER_INTERCEPT_GETADDRINFO	lib/sanitizer_common/sanitizer_platform_interceptors.h	224;"	d
SANITIZER_INTERCEPT_GETADDRINFO	lib/tsan/rtl/tsan_interceptors.cc	2167;"	d	file:
SANITIZER_INTERCEPT_GETCWD	lib/sanitizer_common/sanitizer_platform_interceptors.h	262;"	d
SANITIZER_INTERCEPT_GETGROUPLIST	lib/sanitizer_common/sanitizer_platform_interceptors.h	489;"	d
SANITIZER_INTERCEPT_GETGROUPS	lib/sanitizer_common/sanitizer_platform_interceptors.h	294;"	d
SANITIZER_INTERCEPT_GETHOSTBYADDR_R	lib/sanitizer_common/sanitizer_platform_interceptors.h	233;"	d
SANITIZER_INTERCEPT_GETHOSTBYNAME	lib/sanitizer_common/sanitizer_platform_interceptors.h	227;"	d
SANITIZER_INTERCEPT_GETHOSTBYNAME2	lib/sanitizer_common/sanitizer_platform_interceptors.h	228;"	d
SANITIZER_INTERCEPT_GETHOSTBYNAME2_R	lib/sanitizer_common/sanitizer_platform_interceptors.h	231;"	d
SANITIZER_INTERCEPT_GETHOSTBYNAME_R	lib/sanitizer_common/sanitizer_platform_interceptors.h	229;"	d
SANITIZER_INTERCEPT_GETHOSTENT_R	lib/sanitizer_common/sanitizer_platform_interceptors.h	235;"	d
SANITIZER_INTERCEPT_GETIFADDRS	lib/sanitizer_common/sanitizer_platform_interceptors.h	391;"	d
SANITIZER_INTERCEPT_GETITIMER	lib/sanitizer_common/sanitizer_platform_interceptors.h	217;"	d
SANITIZER_INTERCEPT_GETLINE	lib/sanitizer_common/sanitizer_platform_interceptors.h	371;"	d
SANITIZER_INTERCEPT_GETLOADAVG	lib/sanitizer_common/sanitizer_platform_interceptors.h	459;"	d
SANITIZER_INTERCEPT_GETMNTENT	lib/sanitizer_common/sanitizer_platform_interceptors.h	309;"	d
SANITIZER_INTERCEPT_GETMNTENT_R	lib/sanitizer_common/sanitizer_platform_interceptors.h	310;"	d
SANITIZER_INTERCEPT_GETNAMEINFO	lib/sanitizer_common/sanitizer_platform_interceptors.h	225;"	d
SANITIZER_INTERCEPT_GETPASS	lib/sanitizer_common/sanitizer_platform_interceptors.h	424;"	d
SANITIZER_INTERCEPT_GETPEERNAME	lib/sanitizer_common/sanitizer_platform_interceptors.h	247;"	d
SANITIZER_INTERCEPT_GETPWENT	lib/sanitizer_common/sanitizer_platform_interceptors.h	207;"	d
SANITIZER_INTERCEPT_GETPWENT	lib/tsan/rtl/tsan_interceptors.cc	2175;"	d	file:
SANITIZER_INTERCEPT_GETPWENT_R	lib/sanitizer_common/sanitizer_platform_interceptors.h	211;"	d
SANITIZER_INTERCEPT_GETPWENT_R	lib/tsan/rtl/tsan_interceptors.cc	2176;"	d	file:
SANITIZER_INTERCEPT_GETPWNAM_AND_FRIENDS	lib/sanitizer_common/sanitizer_platform_interceptors.h	203;"	d
SANITIZER_INTERCEPT_GETPWNAM_AND_FRIENDS	lib/tsan/rtl/tsan_interceptors.cc	2178;"	d	file:
SANITIZER_INTERCEPT_GETPWNAM_R_AND_FRIENDS	lib/sanitizer_common/sanitizer_platform_interceptors.h	204;"	d
SANITIZER_INTERCEPT_GETPWNAM_R_AND_FRIENDS	lib/tsan/rtl/tsan_interceptors.cc	2179;"	d	file:
SANITIZER_INTERCEPT_GETRESID	lib/sanitizer_common/sanitizer_platform_interceptors.h	390;"	d
SANITIZER_INTERCEPT_GETSOCKNAME	lib/sanitizer_common/sanitizer_platform_interceptors.h	226;"	d
SANITIZER_INTERCEPT_GETSOCKOPT	lib/sanitizer_common/sanitizer_platform_interceptors.h	237;"	d
SANITIZER_INTERCEPT_GETXATTR	lib/sanitizer_common/sanitizer_platform_interceptors.h	389;"	d
SANITIZER_INTERCEPT_GET_CURRENT_DIR_NAME	lib/sanitizer_common/sanitizer_platform_interceptors.h	263;"	d
SANITIZER_INTERCEPT_GID_FROM_GROUP	lib/sanitizer_common/sanitizer_platform_interceptors.h	486;"	d
SANITIZER_INTERCEPT_GLOB	lib/sanitizer_common/sanitizer_platform_interceptors.h	219;"	d
SANITIZER_INTERCEPT_GLOB64	lib/sanitizer_common/sanitizer_platform_interceptors.h	220;"	d
SANITIZER_INTERCEPT_GROUP_FROM_GID	lib/sanitizer_common/sanitizer_platform_interceptors.h	485;"	d
SANITIZER_INTERCEPT_ICONV	lib/sanitizer_common/sanitizer_platform_interceptors.h	366;"	d
SANITIZER_INTERCEPT_IF_INDEXTONAME	lib/sanitizer_common/sanitizer_platform_interceptors.h	394;"	d
SANITIZER_INTERCEPT_INET	lib/sanitizer_common/sanitizer_platform_interceptors.h	222;"	d
SANITIZER_INTERCEPT_INET_ATON	lib/sanitizer_common/sanitizer_platform_interceptors.h	249;"	d
SANITIZER_INTERCEPT_INITGROUPS	lib/sanitizer_common/sanitizer_platform_interceptors.h	318;"	d
SANITIZER_INTERCEPT_IOCTL	lib/sanitizer_common/sanitizer_platform_interceptors.h	248;"	d
SANITIZER_INTERCEPT_ISOC99_PRINTF	lib/sanitizer_common/sanitizer_platform_interceptors.h	194;"	d
SANITIZER_INTERCEPT_ISOC99_SCANF	lib/sanitizer_common/sanitizer_platform_interceptors.h	189;"	d
SANITIZER_INTERCEPT_LGAMMA	lib/sanitizer_common/sanitizer_platform_interceptors.h	359;"	d
SANITIZER_INTERCEPT_LGAMMAL_R	lib/sanitizer_common/sanitizer_platform_interceptors.h	361;"	d
SANITIZER_INTERCEPT_LGAMMA_R	lib/sanitizer_common/sanitizer_platform_interceptors.h	360;"	d
SANITIZER_INTERCEPT_LIBIO_INTERNALS	lib/sanitizer_common/sanitizer_platform_interceptors.h	409;"	d
SANITIZER_INTERCEPT_LISTXATTR	lib/sanitizer_common/sanitizer_platform_interceptors.h	388;"	d
SANITIZER_INTERCEPT_LOCALTIME_AND_FRIENDS	lib/sanitizer_common/sanitizer_platform_interceptors.h	185;"	d
SANITIZER_INTERCEPT_LSTAT	lib/sanitizer_common/sanitizer_platform_interceptors.h	448;"	d
SANITIZER_INTERCEPT_MALLOC_USABLE_SIZE	lib/sanitizer_common/sanitizer_platform_interceptors.h	476;"	d
SANITIZER_INTERCEPT_MALLOPT_AND_MALLINFO	lib/sanitizer_common/sanitizer_platform_interceptors.h	464;"	d
SANITIZER_INTERCEPT_MBSNRTOWCS	lib/sanitizer_common/sanitizer_platform_interceptors.h	266;"	d
SANITIZER_INTERCEPT_MBSTOWCS	lib/sanitizer_common/sanitizer_platform_interceptors.h	265;"	d
SANITIZER_INTERCEPT_MCHECK_MPROBE	lib/sanitizer_common/sanitizer_platform_interceptors.h	477;"	d
SANITIZER_INTERCEPT_MEMALIGN	lib/sanitizer_common/sanitizer_platform_interceptors.h	467;"	d
SANITIZER_INTERCEPT_MEMCHR	lib/sanitizer_common/sanitizer_platform_interceptors.h	156;"	d
SANITIZER_INTERCEPT_MEMCMP	lib/sanitizer_common/sanitizer_platform_interceptors.h	144;"	d
SANITIZER_INTERCEPT_MEMCPY	lib/sanitizer_common/sanitizer_platform_interceptors.h	143;"	d
SANITIZER_INTERCEPT_MEMMEM	lib/sanitizer_common/sanitizer_platform_interceptors.h	155;"	d
SANITIZER_INTERCEPT_MEMMOVE	lib/sanitizer_common/sanitizer_platform_interceptors.h	142;"	d
SANITIZER_INTERCEPT_MEMRCHR	lib/sanitizer_common/sanitizer_platform_interceptors.h	157;"	d
SANITIZER_INTERCEPT_MEMSET	lib/sanitizer_common/sanitizer_platform_interceptors.h	141;"	d
SANITIZER_INTERCEPT_MINCORE	lib/sanitizer_common/sanitizer_platform_interceptors.h	433;"	d
SANITIZER_INTERCEPT_MLOCKX	lib/sanitizer_common/sanitizer_platform_interceptors.h	428;"	d
SANITIZER_INTERCEPT_MMAP	lib/sanitizer_common/sanitizer_platform_interceptors.h	462;"	d
SANITIZER_INTERCEPT_MMAP64	lib/sanitizer_common/sanitizer_platform_interceptors.h	463;"	d
SANITIZER_INTERCEPT_MODF	lib/sanitizer_common/sanitizer_platform_interceptors.h	242;"	d
SANITIZER_INTERCEPT_NAME_TO_HANDLE_AT	lib/sanitizer_common/sanitizer_platform_interceptors.h	493;"	d
SANITIZER_INTERCEPT_NETENT	lib/sanitizer_common/sanitizer_platform_interceptors.h	512;"	d
SANITIZER_INTERCEPT_OBSTACK	lib/sanitizer_common/sanitizer_platform_interceptors.h	414;"	d
SANITIZER_INTERCEPT_OPEN_BY_HANDLE_AT	lib/sanitizer_common/sanitizer_platform_interceptors.h	494;"	d
SANITIZER_INTERCEPT_OPEN_MEMSTREAM	lib/sanitizer_common/sanitizer_platform_interceptors.h	412;"	d
SANITIZER_INTERCEPT_PACCEPT	lib/sanitizer_common/sanitizer_platform_interceptors.h	241;"	d
SANITIZER_INTERCEPT_POLL	lib/sanitizer_common/sanitizer_platform_interceptors.h	295;"	d
SANITIZER_INTERCEPT_PPOLL	lib/sanitizer_common/sanitizer_platform_interceptors.h	296;"	d
SANITIZER_INTERCEPT_PRCTL	lib/sanitizer_common/sanitizer_platform_interceptors.h	183;"	d
SANITIZER_INTERCEPT_PREAD	lib/sanitizer_common/sanitizer_platform_interceptors.h	161;"	d
SANITIZER_INTERCEPT_PREAD64	lib/sanitizer_common/sanitizer_platform_interceptors.h	171;"	d
SANITIZER_INTERCEPT_PREADV	lib/sanitizer_common/sanitizer_platform_interceptors.h	177;"	d
SANITIZER_INTERCEPT_PREADV64	lib/sanitizer_common/sanitizer_platform_interceptors.h	180;"	d
SANITIZER_INTERCEPT_PRINTF	lib/sanitizer_common/sanitizer_platform_interceptors.h	192;"	d
SANITIZER_INTERCEPT_PRINTF	lib/sanitizer_common/tests/sanitizer_format_interceptor_test.cc	36;"	d	file:
SANITIZER_INTERCEPT_PRINTF_L	lib/sanitizer_common/sanitizer_platform_interceptors.h	193;"	d
SANITIZER_INTERCEPT_PROCESS_VM_READV	lib/sanitizer_common/sanitizer_platform_interceptors.h	435;"	d
SANITIZER_INTERCEPT_PROTOENT	lib/sanitizer_common/sanitizer_platform_interceptors.h	511;"	d
SANITIZER_INTERCEPT_PTHREAD_ATTR_GET	lib/sanitizer_common/sanitizer_platform_interceptors.h	328;"	d
SANITIZER_INTERCEPT_PTHREAD_ATTR_GETAFFINITY_NP	lib/sanitizer_common/sanitizer_platform_interceptors.h	331;"	d
SANITIZER_INTERCEPT_PTHREAD_ATTR_GETINHERITSCHED	lib/sanitizer_common/sanitizer_platform_interceptors.h	329;"	d
SANITIZER_INTERCEPT_PTHREAD_ATTR_GET_SCHED	lib/sanitizer_common/sanitizer_platform_interceptors.h	332;"	d
SANITIZER_INTERCEPT_PTHREAD_BARRIERATTR_GETPSHARED	lib/sanitizer_common/sanitizer_platform_interceptors.h	350;"	d
SANITIZER_INTERCEPT_PTHREAD_CONDATTR_GETCLOCK	lib/sanitizer_common/sanitizer_platform_interceptors.h	348;"	d
SANITIZER_INTERCEPT_PTHREAD_CONDATTR_GETPSHARED	lib/sanitizer_common/sanitizer_platform_interceptors.h	346;"	d
SANITIZER_INTERCEPT_PTHREAD_GETNAME_NP	lib/sanitizer_common/sanitizer_platform_interceptors.h	382;"	d
SANITIZER_INTERCEPT_PTHREAD_GETSCHEDPARAM	lib/sanitizer_common/sanitizer_platform_interceptors.h	223;"	d
SANITIZER_INTERCEPT_PTHREAD_MUTEX	lib/sanitizer_common/sanitizer_platform_interceptors.h	377;"	d
SANITIZER_INTERCEPT_PTHREAD_MUTEXATTR_GETPRIOCEILING	lib/sanitizer_common/sanitizer_platform_interceptors.h	338;"	d
SANITIZER_INTERCEPT_PTHREAD_MUTEXATTR_GETPROTOCOL	lib/sanitizer_common/sanitizer_platform_interceptors.h	336;"	d
SANITIZER_INTERCEPT_PTHREAD_MUTEXATTR_GETPSHARED	lib/sanitizer_common/sanitizer_platform_interceptors.h	333;"	d
SANITIZER_INTERCEPT_PTHREAD_MUTEXATTR_GETROBUST	lib/sanitizer_common/sanitizer_platform_interceptors.h	340;"	d
SANITIZER_INTERCEPT_PTHREAD_MUTEXATTR_GETROBUST_NP	lib/sanitizer_common/sanitizer_platform_interceptors.h	342;"	d
SANITIZER_INTERCEPT_PTHREAD_MUTEXATTR_GETTYPE	lib/sanitizer_common/sanitizer_platform_interceptors.h	335;"	d
SANITIZER_INTERCEPT_PTHREAD_RWLOCKATTR_GETKIND_NP	lib/sanitizer_common/sanitizer_platform_interceptors.h	345;"	d
SANITIZER_INTERCEPT_PTHREAD_RWLOCKATTR_GETPSHARED	lib/sanitizer_common/sanitizer_platform_interceptors.h	343;"	d
SANITIZER_INTERCEPT_PTHREAD_SETCANCEL	lib/sanitizer_common/sanitizer_platform_interceptors.h	432;"	d
SANITIZER_INTERCEPT_PTHREAD_SETNAME_NP	lib/sanitizer_common/sanitizer_platform_interceptors.h	380;"	d
SANITIZER_INTERCEPT_PTRACE	lib/sanitizer_common/sanitizer_platform_interceptors.h	257;"	d
SANITIZER_INTERCEPT_PTRACE	lib/sanitizer_common/sanitizer_platform_interceptors.h	259;"	d
SANITIZER_INTERCEPT_PUTS	lib/sanitizer_common/sanitizer_platform_interceptors.h	169;"	d
SANITIZER_INTERCEPT_PVALLOC	lib/sanitizer_common/sanitizer_platform_interceptors.h	469;"	d
SANITIZER_INTERCEPT_PWRITE	lib/sanitizer_common/sanitizer_platform_interceptors.h	163;"	d
SANITIZER_INTERCEPT_PWRITE64	lib/sanitizer_common/sanitizer_platform_interceptors.h	172;"	d
SANITIZER_INTERCEPT_PWRITEV	lib/sanitizer_common/sanitizer_platform_interceptors.h	179;"	d
SANITIZER_INTERCEPT_PWRITEV64	lib/sanitizer_common/sanitizer_platform_interceptors.h	181;"	d
SANITIZER_INTERCEPT_RANDOM_R	lib/sanitizer_common/sanitizer_platform_interceptors.h	327;"	d
SANITIZER_INTERCEPT_RAND_R	lib/sanitizer_common/sanitizer_platform_interceptors.h	363;"	d
SANITIZER_INTERCEPT_READ	lib/sanitizer_common/sanitizer_platform_interceptors.h	160;"	d
SANITIZER_INTERCEPT_READDIR	lib/sanitizer_common/sanitizer_platform_interceptors.h	251;"	d
SANITIZER_INTERCEPT_READDIR64	lib/sanitizer_common/sanitizer_platform_interceptors.h	252;"	d
SANITIZER_INTERCEPT_READLINK	lib/sanitizer_common/sanitizer_platform_interceptors.h	496;"	d
SANITIZER_INTERCEPT_READLINKAT	lib/sanitizer_common/sanitizer_platform_interceptors.h	503;"	d
SANITIZER_INTERCEPT_READV	lib/sanitizer_common/sanitizer_platform_interceptors.h	174;"	d
SANITIZER_INTERCEPT_REALPATH	lib/esan/esan_interceptors.cpp	45;"	d	file:
SANITIZER_INTERCEPT_REALPATH	lib/sanitizer_common/sanitizer_platform_interceptors.h	280;"	d
SANITIZER_INTERCEPT_RECVMMSG	lib/sanitizer_common/sanitizer_platform_interceptors.h	245;"	d
SANITIZER_INTERCEPT_RECVMSG	lib/sanitizer_common/sanitizer_platform_interceptors.h	243;"	d
SANITIZER_INTERCEPT_RECV_RECVFROM	lib/sanitizer_common/sanitizer_platform_interceptors.h	442;"	d
SANITIZER_INTERCEPT_REMQUO	lib/sanitizer_common/sanitizer_platform_interceptors.h	358;"	d
SANITIZER_INTERCEPT_SCANDIR	lib/sanitizer_common/sanitizer_platform_interceptors.h	291;"	d
SANITIZER_INTERCEPT_SCANDIR64	lib/sanitizer_common/sanitizer_platform_interceptors.h	293;"	d
SANITIZER_INTERCEPT_SCANF	lib/sanitizer_common/sanitizer_platform_interceptors.h	188;"	d
SANITIZER_INTERCEPT_SCHED_GETAFFINITY	lib/sanitizer_common/sanitizer_platform_interceptors.h	286;"	d
SANITIZER_INTERCEPT_SCHED_GETPARAM	lib/sanitizer_common/sanitizer_platform_interceptors.h	287;"	d
SANITIZER_INTERCEPT_SEM	lib/sanitizer_common/sanitizer_platform_interceptors.h	430;"	d
SANITIZER_INTERCEPT_SENDMMSG	lib/sanitizer_common/sanitizer_platform_interceptors.h	246;"	d
SANITIZER_INTERCEPT_SENDMSG	lib/sanitizer_common/sanitizer_platform_interceptors.h	244;"	d
SANITIZER_INTERCEPT_SEND_SENDTO	lib/sanitizer_common/sanitizer_platform_interceptors.h	443;"	d
SANITIZER_INTERCEPT_SETLOCALE	lib/sanitizer_common/sanitizer_platform_interceptors.h	261;"	d
SANITIZER_INTERCEPT_SETPWENT	lib/sanitizer_common/sanitizer_platform_interceptors.h	213;"	d
SANITIZER_INTERCEPT_SHMCTL	lib/sanitizer_common/sanitizer_platform_interceptors.h	323;"	d
SANITIZER_INTERCEPT_SIGNAL_AND_SIGACTION	lib/sanitizer_common/sanitizer_platform_interceptors.h	479;"	d
SANITIZER_INTERCEPT_SIGPENDING	lib/sanitizer_common/sanitizer_platform_interceptors.h	305;"	d
SANITIZER_INTERCEPT_SIGPROCMASK	lib/esan/esan_interceptors.cpp	48;"	d	file:
SANITIZER_INTERCEPT_SIGPROCMASK	lib/sanitizer_common/sanitizer_platform_interceptors.h	306;"	d
SANITIZER_INTERCEPT_SIGSETOPS	lib/sanitizer_common/sanitizer_platform_interceptors.h	303;"	d
SANITIZER_INTERCEPT_SIGTIMEDWAIT	lib/sanitizer_common/sanitizer_platform_interceptors.h	302;"	d
SANITIZER_INTERCEPT_SIGWAIT	lib/sanitizer_common/sanitizer_platform_interceptors.h	300;"	d
SANITIZER_INTERCEPT_SIGWAITINFO	lib/sanitizer_common/sanitizer_platform_interceptors.h	301;"	d
SANITIZER_INTERCEPT_SINCOS	lib/sanitizer_common/sanitizer_platform_interceptors.h	357;"	d
SANITIZER_INTERCEPT_STAT	lib/sanitizer_common/sanitizer_platform_interceptors.h	446;"	d
SANITIZER_INTERCEPT_STATFS	lib/sanitizer_common/sanitizer_platform_interceptors.h	311;"	d
SANITIZER_INTERCEPT_STATFS64	lib/sanitizer_common/sanitizer_platform_interceptors.h	313;"	d
SANITIZER_INTERCEPT_STATVFS	lib/sanitizer_common/sanitizer_platform_interceptors.h	315;"	d
SANITIZER_INTERCEPT_STATVFS64	lib/sanitizer_common/sanitizer_platform_interceptors.h	317;"	d
SANITIZER_INTERCEPT_STRCASECMP	lib/sanitizer_common/sanitizer_platform_interceptors.h	140;"	d
SANITIZER_INTERCEPT_STRCASESTR	lib/sanitizer_common/sanitizer_platform_interceptors.h	132;"	d
SANITIZER_INTERCEPT_STRCHR	lib/sanitizer_common/sanitizer_platform_interceptors.h	134;"	d
SANITIZER_INTERCEPT_STRCHRNUL	lib/sanitizer_common/sanitizer_platform_interceptors.h	135;"	d
SANITIZER_INTERCEPT_STRCMP	lib/sanitizer_common/sanitizer_platform_interceptors.h	130;"	d
SANITIZER_INTERCEPT_STRERROR	lib/sanitizer_common/sanitizer_platform_interceptors.h	288;"	d
SANITIZER_INTERCEPT_STRERROR_R	lib/sanitizer_common/sanitizer_platform_interceptors.h	289;"	d
SANITIZER_INTERCEPT_STRLCPY	lib/sanitizer_common/sanitizer_platform_interceptors.h	490;"	d
SANITIZER_INTERCEPT_STRLEN	lib/sanitizer_common/sanitizer_platform_interceptors.h	128;"	d
SANITIZER_INTERCEPT_STRMODE	lib/sanitizer_common/sanitizer_platform_interceptors.h	509;"	d
SANITIZER_INTERCEPT_STRNDUP	lib/sanitizer_common/sanitizer_platform_interceptors.h	145;"	d
SANITIZER_INTERCEPT_STRNLEN	lib/sanitizer_common/sanitizer_platform_interceptors.h	129;"	d
SANITIZER_INTERCEPT_STRPBRK	lib/sanitizer_common/sanitizer_platform_interceptors.h	138;"	d
SANITIZER_INTERCEPT_STRPTIME	lib/sanitizer_common/sanitizer_platform_interceptors.h	186;"	d
SANITIZER_INTERCEPT_STRRCHR	lib/sanitizer_common/sanitizer_platform_interceptors.h	136;"	d
SANITIZER_INTERCEPT_STRSPN	lib/sanitizer_common/sanitizer_platform_interceptors.h	137;"	d
SANITIZER_INTERCEPT_STRSTR	lib/sanitizer_common/sanitizer_platform_interceptors.h	131;"	d
SANITIZER_INTERCEPT_STRTOIMAX	lib/sanitizer_common/sanitizer_platform_interceptors.h	264;"	d
SANITIZER_INTERCEPT_STRTOK	lib/sanitizer_common/sanitizer_platform_interceptors.h	133;"	d
SANITIZER_INTERCEPT_STRXFRM	lib/sanitizer_common/sanitizer_platform_interceptors.h	269;"	d
SANITIZER_INTERCEPT_SYSINFO	lib/sanitizer_common/sanitizer_platform_interceptors.h	250;"	d
SANITIZER_INTERCEPT_TCGETATTR	lib/sanitizer_common/sanitizer_platform_interceptors.h	279;"	d
SANITIZER_INTERCEPT_TEMPNAM	lib/sanitizer_common/sanitizer_platform_interceptors.h	356;"	d
SANITIZER_INTERCEPT_TEXTDOMAIN	lib/sanitizer_common/sanitizer_platform_interceptors.h	139;"	d
SANITIZER_INTERCEPT_THR_EXIT	lib/sanitizer_common/sanitizer_platform_interceptors.h	352;"	d
SANITIZER_INTERCEPT_TIME	lib/sanitizer_common/sanitizer_platform_interceptors.h	218;"	d
SANITIZER_INTERCEPT_TIMERFD	lib/sanitizer_common/sanitizer_platform_interceptors.h	426;"	d
SANITIZER_INTERCEPT_TIMES	lib/sanitizer_common/sanitizer_platform_interceptors.h	368;"	d
SANITIZER_INTERCEPT_TLS_GET_ADDR	lib/esan/esan_interceptors.cpp	40;"	d	file:
SANITIZER_INTERCEPT_TLS_GET_ADDR	lib/sanitizer_common/sanitizer_platform_interceptors.h	385;"	d
SANITIZER_INTERCEPT_TLS_GET_ADDR	lib/tsan/rtl/tsan_interceptors.cc	2184;"	d	file:
SANITIZER_INTERCEPT_TMPNAM	lib/sanitizer_common/sanitizer_platform_interceptors.h	353;"	d
SANITIZER_INTERCEPT_TMPNAM_R	lib/sanitizer_common/sanitizer_platform_interceptors.h	354;"	d
SANITIZER_INTERCEPT_TSEARCH	lib/sanitizer_common/sanitizer_platform_interceptors.h	407;"	d
SANITIZER_INTERCEPT_TTYENT	lib/sanitizer_common/sanitizer_platform_interceptors.h	510;"	d
SANITIZER_INTERCEPT_TTYNAME_R	lib/sanitizer_common/sanitizer_platform_interceptors.h	355;"	d
SANITIZER_INTERCEPT_UID_FROM_USER	lib/sanitizer_common/sanitizer_platform_interceptors.h	484;"	d
SANITIZER_INTERCEPT_USER_FROM_UID	lib/sanitizer_common/sanitizer_platform_interceptors.h	483;"	d
SANITIZER_INTERCEPT_UTMP	lib/sanitizer_common/sanitizer_platform_interceptors.h	454;"	d
SANITIZER_INTERCEPT_UTMPX	lib/sanitizer_common/sanitizer_platform_interceptors.h	456;"	d
SANITIZER_INTERCEPT_WAIT	lib/sanitizer_common/sanitizer_platform_interceptors.h	221;"	d
SANITIZER_INTERCEPT_WCRTOMB	lib/sanitizer_common/sanitizer_platform_interceptors.h	276;"	d
SANITIZER_INTERCEPT_WCSCAT	lib/sanitizer_common/sanitizer_platform_interceptors.h	478;"	d
SANITIZER_INTERCEPT_WCSNRTOMBS	lib/sanitizer_common/sanitizer_platform_interceptors.h	273;"	d
SANITIZER_INTERCEPT_WCSTOMBS	lib/sanitizer_common/sanitizer_platform_interceptors.h	268;"	d
SANITIZER_INTERCEPT_WCSXFRM	lib/sanitizer_common/sanitizer_platform_interceptors.h	271;"	d
SANITIZER_INTERCEPT_WORDEXP	lib/sanitizer_common/sanitizer_platform_interceptors.h	297;"	d
SANITIZER_INTERCEPT_WRITE	lib/sanitizer_common/sanitizer_platform_interceptors.h	162;"	d
SANITIZER_INTERCEPT_WRITEV	lib/sanitizer_common/sanitizer_platform_interceptors.h	175;"	d
SANITIZER_INTERCEPT_XDR	lib/sanitizer_common/sanitizer_platform_interceptors.h	406;"	d
SANITIZER_INTERCEPT_XPG_STRERROR_R	lib/sanitizer_common/sanitizer_platform_interceptors.h	290;"	d
SANITIZER_INTERCEPT__EXIT	lib/sanitizer_common/sanitizer_platform_interceptors.h	374;"	d
SANITIZER_INTERCEPT___BZERO	lib/sanitizer_common/sanitizer_platform_interceptors.h	403;"	d
SANITIZER_INTERCEPT___LIBC_MUTEX	lib/sanitizer_common/sanitizer_platform_interceptors.h	379;"	d
SANITIZER_INTERCEPT___LXSTAT	lib/sanitizer_common/sanitizer_platform_interceptors.h	451;"	d
SANITIZER_INTERCEPT___LXSTAT64	lib/sanitizer_common/sanitizer_platform_interceptors.h	452;"	d
SANITIZER_INTERCEPT___PRINTF_CHK	lib/sanitizer_common/sanitizer_platform_interceptors.h	197;"	d
SANITIZER_INTERCEPT___PTHREAD_MUTEX	lib/sanitizer_common/sanitizer_platform_interceptors.h	378;"	d
SANITIZER_INTERCEPT___STRNDUP	lib/sanitizer_common/sanitizer_platform_interceptors.h	146;"	d
SANITIZER_INTERCEPT___STRXFRM_L	lib/sanitizer_common/sanitizer_platform_interceptors.h	270;"	d
SANITIZER_INTERCEPT___WCSXFRM_L	lib/sanitizer_common/sanitizer_platform_interceptors.h	272;"	d
SANITIZER_INTERCEPT___XSTAT	lib/sanitizer_common/sanitizer_platform_interceptors.h	449;"	d
SANITIZER_INTERCEPT___XSTAT64	lib/sanitizer_common/sanitizer_platform_interceptors.h	450;"	d
SANITIZER_INTERFACE_ATTRIBUTE	lib/sanitizer_common/sanitizer_internal_defs.h	28;"	d
SANITIZER_INTERFACE_ATTRIBUTE	lib/sanitizer_common/sanitizer_internal_defs.h	30;"	d
SANITIZER_INTERFACE_ATTRIBUTE	lib/sanitizer_common/sanitizer_internal_defs.h	34;"	d
SANITIZER_INTERFACE_ATTRIBUTE	lib/sanitizer_common/sanitizer_internal_defs.h	37;"	d
SANITIZER_INTERFACE_INTERNAL_H	lib/sanitizer_common/sanitizer_interface_internal.h	19;"	d
SANITIZER_INTERFACE_WEAK_DEF	lib/asan/asan_allocator.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_free_hook, void *ptr) {$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/asan/asan_allocator.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_malloc_hook,$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/asan/asan_flags.cc	/^SANITIZER_INTERFACE_WEAK_DEF(const char*, __asan_default_options, void) {$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/asan/asan_report.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __asan_on_error, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/asan/asan_suppressions.cc	/^SANITIZER_INTERFACE_WEAK_DEF(const char *, __asan_default_suppressions, void) {$/;"	f	namespace:__asan
SANITIZER_INTERFACE_WEAK_DEF	lib/dfsan/dfsan_custom.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __dfsw___sanitizer_cov_trace_cmp, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/dfsan/dfsan_custom.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __dfsw___sanitizer_cov_trace_cmp1, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/dfsan/dfsan_custom.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __dfsw___sanitizer_cov_trace_cmp2, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/dfsan/dfsan_custom.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __dfsw___sanitizer_cov_trace_cmp4, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/dfsan/dfsan_custom.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __dfsw___sanitizer_cov_trace_cmp8, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/dfsan/dfsan_custom.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __dfsw___sanitizer_cov_trace_const_cmp1,$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/dfsan/dfsan_custom.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __dfsw___sanitizer_cov_trace_const_cmp2,$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/dfsan/dfsan_custom.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __dfsw___sanitizer_cov_trace_const_cmp4,$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/dfsan/dfsan_custom.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __dfsw___sanitizer_cov_trace_const_cmp8,$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/dfsan/dfsan_custom.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __dfsw___sanitizer_cov_trace_switch, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/dfsan/dfsan_custom.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_pcs_init, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/dfsan/dfsan_custom.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_pc_guard, u32 *) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/dfsan/dfsan_custom.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_pc_guard_init, u32 *,$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/dfsan/dfsan_custom.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_pc_indir, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/sanitizer_common/sancov_flags.cc	/^SANITIZER_INTERFACE_WEAK_DEF(const char*, __sancov_default_options, void) {$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/sanitizer_common/sanitizer_common.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_report_error_summary,$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/sanitizer_common/sanitizer_common_libcdep.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_sandbox_on_notify,$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/sanitizer_common/sanitizer_coverage_fuchsia.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_cmp, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/sanitizer_common/sanitizer_coverage_fuchsia.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_cmp1, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/sanitizer_common/sanitizer_coverage_fuchsia.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_cmp2, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/sanitizer_common/sanitizer_coverage_fuchsia.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_cmp4, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/sanitizer_common/sanitizer_coverage_fuchsia.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_cmp8, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/sanitizer_common/sanitizer_coverage_fuchsia.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_const_cmp1, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/sanitizer_common/sanitizer_coverage_fuchsia.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_const_cmp2, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/sanitizer_common/sanitizer_coverage_fuchsia.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_const_cmp4, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/sanitizer_common/sanitizer_coverage_fuchsia.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_const_cmp8, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/sanitizer_common/sanitizer_coverage_fuchsia.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_div4, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/sanitizer_common/sanitizer_coverage_fuchsia.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_div8, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/sanitizer_common/sanitizer_coverage_fuchsia.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_gep, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/sanitizer_common/sanitizer_coverage_fuchsia.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_pc_guard, u32 *guard) {$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/sanitizer_common/sanitizer_coverage_fuchsia.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_pc_guard_init,$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/sanitizer_common/sanitizer_coverage_fuchsia.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_pc_indir, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/sanitizer_common/sanitizer_coverage_fuchsia.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_switch, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/sanitizer_common/sanitizer_coverage_libcdep_new.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_8bit_counters_init, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/sanitizer_common/sanitizer_coverage_libcdep_new.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_pcs_init, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/sanitizer_common/sanitizer_coverage_libcdep_new.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_cmp, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/sanitizer_common/sanitizer_coverage_libcdep_new.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_cmp1, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/sanitizer_common/sanitizer_coverage_libcdep_new.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_cmp2, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/sanitizer_common/sanitizer_coverage_libcdep_new.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_cmp4, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/sanitizer_common/sanitizer_coverage_libcdep_new.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_cmp8, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/sanitizer_common/sanitizer_coverage_libcdep_new.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_const_cmp1, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/sanitizer_common/sanitizer_coverage_libcdep_new.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_const_cmp2, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/sanitizer_common/sanitizer_coverage_libcdep_new.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_const_cmp4, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/sanitizer_common/sanitizer_coverage_libcdep_new.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_const_cmp8, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/sanitizer_common/sanitizer_coverage_libcdep_new.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_div4, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/sanitizer_common/sanitizer_coverage_libcdep_new.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_div8, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/sanitizer_common/sanitizer_coverage_libcdep_new.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_gep, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/sanitizer_common/sanitizer_coverage_libcdep_new.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_pc_guard, u32* guard) {$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/sanitizer_common/sanitizer_coverage_libcdep_new.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_pc_guard_init,$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/sanitizer_common/sanitizer_coverage_libcdep_new.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_pc_indir, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/sanitizer_common/sanitizer_coverage_libcdep_new.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_switch, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/sanitizer_common/sanitizer_internal_defs.h	61;"	d
SANITIZER_INTERFACE_WEAK_DEF	lib/sanitizer_common/sanitizer_internal_defs.h	64;"	d
SANITIZER_INTERFACE_WEAK_DEF	lib/sanitizer_common/sanitizer_printf.cc	/^SANITIZER_INTERFACE_WEAK_DEF(void, OnPrint, const char *str) {$/;"	f	namespace:__sanitizer
SANITIZER_INTERFACE_WEAK_DEF	lib/scudo/scudo_allocator.cpp	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_free_hook, void *Ptr) {$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/scudo/scudo_allocator.cpp	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_malloc_hook,$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/scudo/scudo_flags.cpp	/^SANITIZER_INTERFACE_WEAK_DEF(const char*, __scudo_default_options, void) {$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	lib/ubsan/ubsan_flags.cc	/^SANITIZER_INTERFACE_WEAK_DEF(const char *, __ubsan_default_options, void) {$/;"	f
SANITIZER_IOS	lib/sanitizer_common/sanitizer_platform.h	57;"	d
SANITIZER_IOS	lib/sanitizer_common/sanitizer_platform.h	59;"	d
SANITIZER_IOS	lib/sanitizer_common/sanitizer_platform.h	68;"	d
SANITIZER_IOSSIM	lib/sanitizer_common/sanitizer_platform.h	62;"	d
SANITIZER_IOSSIM	lib/sanitizer_common/sanitizer_platform.h	64;"	d
SANITIZER_IOSSIM	lib/sanitizer_common/sanitizer_platform.h	69;"	d
SANITIZER_LFSTACK_H	lib/sanitizer_common/sanitizer_lfstack.h	18;"	d
SANITIZER_LIBBACKTRACE	lib/sanitizer_common/sanitizer_symbolizer_libbacktrace.cc	30;"	d	file:
SANITIZER_LIBBACKTRACE	lib/sanitizer_common/sanitizer_symbolizer_libbacktrace.h	23;"	d
SANITIZER_LIBC_H	lib/sanitizer_common/sanitizer_libc.h	18;"	d
SANITIZER_LIBIGNORE_H	lib/sanitizer_common/sanitizer_libignore.h	18;"	d
SANITIZER_LINUX	lib/sanitizer_common/sanitizer_platform.h	24;"	d
SANITIZER_LINUX	lib/sanitizer_common/sanitizer_platform.h	26;"	d
SANITIZER_LINUX_H	lib/sanitizer_common/sanitizer_linux.h	14;"	d
SANITIZER_LINUX_SYSCALL_HOOKS_H	include/sanitizer/linux_syscall_hooks.h	22;"	d
SANITIZER_LINUX_USES_64BIT_SYSCALLS	lib/sanitizer_common/sanitizer_linux.cc	126;"	d	file:
SANITIZER_LINUX_USES_64BIT_SYSCALLS	lib/sanitizer_common/sanitizer_linux.cc	128;"	d	file:
SANITIZER_LIST_H	lib/sanitizer_common/sanitizer_list.h	16;"	d
SANITIZER_LSAN_INTERFACE_H	include/sanitizer/lsan_interface.h	15;"	d
SANITIZER_MAC	lib/sanitizer_common/sanitizer_platform.h	54;"	d
SANITIZER_MAC	lib/sanitizer_common/sanitizer_platform.h	67;"	d
SANITIZER_MAC_H	lib/sanitizer_common/sanitizer_mac.h	14;"	d
SANITIZER_MADVISE_DONTNEED	lib/sanitizer_common/sanitizer_platform.h	320;"	d
SANITIZER_MADVISE_DONTNEED	lib/sanitizer_common/sanitizer_platform.h	322;"	d
SANITIZER_MALLOC_HOOK	lib/sanitizer_common/tests/sanitizer_allocator_testlib.cc	30;"	d	file:
SANITIZER_MIPS	lib/sanitizer_common/sanitizer_platform.h	137;"	d
SANITIZER_MIPS	lib/sanitizer_common/sanitizer_platform.h	146;"	d
SANITIZER_MIPS32	lib/sanitizer_common/sanitizer_platform.h	139;"	d
SANITIZER_MIPS32	lib/sanitizer_common/sanitizer_platform.h	142;"	d
SANITIZER_MIPS32	lib/sanitizer_common/sanitizer_platform.h	147;"	d
SANITIZER_MIPS64	lib/sanitizer_common/sanitizer_platform.h	140;"	d
SANITIZER_MIPS64	lib/sanitizer_common/sanitizer_platform.h	143;"	d
SANITIZER_MIPS64	lib/sanitizer_common/sanitizer_platform.h	148;"	d
SANITIZER_MMAP_RANGE_SIZE	lib/sanitizer_common/sanitizer_platform.h	236;"	d
SANITIZER_MMAP_RANGE_SIZE	lib/sanitizer_common/sanitizer_platform.h	238;"	d
SANITIZER_MMAP_RANGE_SIZE	lib/sanitizer_common/sanitizer_platform.h	240;"	d
SANITIZER_MUTEX_H	lib/sanitizer_common/sanitizer_mutex.h	15;"	d
SANITIZER_MYRIAD2	lib/sanitizer_common/sanitizer_platform.h	212;"	d
SANITIZER_MYRIAD2	lib/sanitizer_common/sanitizer_platform.h	214;"	d
SANITIZER_NETBSD	lib/sanitizer_common/sanitizer_platform.h	36;"	d
SANITIZER_NETBSD	lib/sanitizer_common/sanitizer_platform.h	38;"	d
SANITIZER_NETBSD_SYSCALL_HOOKS_H	include/sanitizer/netbsd_syscall_hooks.h	29;"	d
SANITIZER_NLDBL_VERSION	lib/sanitizer_common/sanitizer_platform.h	301;"	d
SANITIZER_NON_UNIQUE_TYPEINFO	lib/sanitizer_common/sanitizer_platform.h	291;"	d
SANITIZER_NON_UNIQUE_TYPEINFO	lib/sanitizer_common/sanitizer_platform.h	293;"	d
SANITIZER_OPENBSD	lib/sanitizer_common/sanitizer_platform.h	42;"	d
SANITIZER_OPENBSD	lib/sanitizer_common/sanitizer_platform.h	44;"	d
SANITIZER_OS_TRACE	lib/sanitizer_common/sanitizer_mac.cc	41;"	d	file:
SANITIZER_OS_TRACE	lib/sanitizer_common/sanitizer_mac.cc	44;"	d	file:
SANITIZER_PERSISTENT_ALLOCATOR_H	lib/sanitizer_common/sanitizer_persistent_allocator.h	15;"	d
SANITIZER_PLACEMENT_NEW_H	lib/sanitizer_common/sanitizer_placement_new.h	17;"	d
SANITIZER_PLATFORM_H	lib/sanitizer_common/sanitizer_platform.h	14;"	d
SANITIZER_PLATFORM_INTERCEPTORS_H	lib/sanitizer_common/sanitizer_platform_interceptors.h	15;"	d
SANITIZER_PLATFORM_LIMITS_NETBSD_H	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	16;"	d
SANITIZER_PLATFORM_LIMITS_OPENBSD_H	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	16;"	d
SANITIZER_PLATFORM_LIMITS_POSIX_H	lib/sanitizer_common/sanitizer_platform_limits_posix.h	16;"	d
SANITIZER_PLATFORM_LIMITS_SOLARIS_H	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	16;"	d
SANITIZER_POINTER_FORMAT_LENGTH	lib/sanitizer_common/sanitizer_platform.h	268;"	d
SANITIZER_POINTER_FORMAT_LENGTH	lib/sanitizer_common/sanitizer_platform.h	270;"	d
SANITIZER_POSIX	lib/sanitizer_common/sanitizer_platform.h	114;"	d
SANITIZER_POSIX_H	lib/sanitizer_common/sanitizer_posix.h	14;"	d
SANITIZER_PPC	lib/sanitizer_common/sanitizer_platform.h	167;"	d
SANITIZER_PPC	lib/sanitizer_common/sanitizer_platform.h	192;"	d
SANITIZER_PPC32	lib/sanitizer_common/sanitizer_platform.h	169;"	d
SANITIZER_PPC32	lib/sanitizer_common/sanitizer_platform.h	186;"	d
SANITIZER_PPC32	lib/sanitizer_common/sanitizer_platform.h	193;"	d
SANITIZER_PPC64	lib/sanitizer_common/sanitizer_platform.h	170;"	d
SANITIZER_PPC64	lib/sanitizer_common/sanitizer_platform.h	187;"	d
SANITIZER_PPC64	lib/sanitizer_common/sanitizer_platform.h	194;"	d
SANITIZER_PPC64V1	lib/sanitizer_common/sanitizer_platform.h	179;"	d
SANITIZER_PPC64V1	lib/sanitizer_common/sanitizer_platform.h	182;"	d
SANITIZER_PPC64V1	lib/sanitizer_common/sanitizer_platform.h	188;"	d
SANITIZER_PPC64V1	lib/sanitizer_common/sanitizer_platform.h	195;"	d
SANITIZER_PPC64V2	lib/sanitizer_common/sanitizer_platform.h	180;"	d
SANITIZER_PPC64V2	lib/sanitizer_common/sanitizer_platform.h	183;"	d
SANITIZER_PPC64V2	lib/sanitizer_common/sanitizer_platform.h	189;"	d
SANITIZER_PPC64V2	lib/sanitizer_common/sanitizer_platform.h	196;"	d
SANITIZER_PROCMAPS_H	lib/sanitizer_common/sanitizer_procmaps.h	15;"	d
SANITIZER_PTHREAD_WRAPPERS_H	lib/sanitizer_common/tests/sanitizer_pthread_wrappers.h	19;"	d
SANITIZER_QUARANTINE_H	lib/sanitizer_common/sanitizer_quarantine.h	18;"	d
SANITIZER_REPORT_DECORATOR_H	lib/sanitizer_common/sanitizer_report_decorator.h	18;"	d
SANITIZER_RTEMS	lib/sanitizer_common/sanitizer_platform.h	109;"	d
SANITIZER_RTEMS	lib/sanitizer_common/sanitizer_platform.h	111;"	d
SANITIZER_RTEMS_H	lib/sanitizer_common/sanitizer_rtems.h	14;"	d
SANITIZER_S390	lib/sanitizer_common/sanitizer_platform.h	152;"	d
SANITIZER_S390	lib/sanitizer_common/sanitizer_platform.h	161;"	d
SANITIZER_S390_31	lib/sanitizer_common/sanitizer_platform.h	154;"	d
SANITIZER_S390_31	lib/sanitizer_common/sanitizer_platform.h	157;"	d
SANITIZER_S390_31	lib/sanitizer_common/sanitizer_platform.h	162;"	d
SANITIZER_S390_64	lib/sanitizer_common/sanitizer_platform.h	155;"	d
SANITIZER_S390_64	lib/sanitizer_common/sanitizer_platform.h	158;"	d
SANITIZER_S390_64	lib/sanitizer_common/sanitizer_platform.h	163;"	d
SANITIZER_SCUDO_INTERFACE_H_	include/sanitizer/scudo_interface.h	14;"	d
SANITIZER_SOLARIS	lib/sanitizer_common/sanitizer_platform.h	48;"	d
SANITIZER_SOLARIS	lib/sanitizer_common/sanitizer_platform.h	50;"	d
SANITIZER_SOLARIS32	lib/sanitizer_common/sanitizer_platform.h	206;"	d
SANITIZER_SOLARIS32	lib/sanitizer_common/sanitizer_platform.h	208;"	d
SANITIZER_STACKDEPOTBASE_H	lib/sanitizer_common/sanitizer_stackdepotbase.h	15;"	d
SANITIZER_STACKDEPOT_H	lib/sanitizer_common/sanitizer_stackdepot.h	15;"	d
SANITIZER_STACKTRACE_H	lib/sanitizer_common/sanitizer_stacktrace.h	14;"	d
SANITIZER_STACKTRACE_PRINTER_H	lib/sanitizer_common/sanitizer_stacktrace_printer.h	14;"	d
SANITIZER_STATS_STATS_H	lib/stats/stats.h	15;"	d
SANITIZER_STOPTHEWORLD_H	lib/sanitizer_common/sanitizer_stoptheworld.h	15;"	d
SANITIZER_STRINGIFY	lib/sanitizer_common/sanitizer_internal_defs.h	23;"	d
SANITIZER_STRINGIFY_	lib/sanitizer_common/sanitizer_internal_defs.h	22;"	d
SANITIZER_SUPPORTS_WEAK_HOOKS	lib/sanitizer_common/sanitizer_internal_defs.h	73;"	d
SANITIZER_SUPPORTS_WEAK_HOOKS	lib/sanitizer_common/sanitizer_internal_defs.h	79;"	d
SANITIZER_SUPPORTS_WEAK_HOOKS	lib/sanitizer_common/sanitizer_internal_defs.h	81;"	d
SANITIZER_SUPPRESSIONS_H	lib/sanitizer_common/sanitizer_suppressions.h	14;"	d
SANITIZER_SUPPRESS_LEAK_ON_PTHREAD_EXIT	lib/sanitizer_common/sanitizer_platform.h	313;"	d
SANITIZER_SUPPRESS_LEAK_ON_PTHREAD_EXIT	lib/sanitizer_common/sanitizer_platform.h	315;"	d
SANITIZER_SYMBOLIZER_FUCHSIA_H	lib/sanitizer_common/sanitizer_symbolizer_fuchsia.h	15;"	d
SANITIZER_SYMBOLIZER_H	lib/sanitizer_common/sanitizer_symbolizer.h	20;"	d
SANITIZER_SYMBOLIZER_INTERNAL_H	lib/sanitizer_common/sanitizer_symbolizer_internal.h	15;"	d
SANITIZER_SYMBOLIZER_LIBBACKTRACE_H	lib/sanitizer_common/sanitizer_symbolizer_libbacktrace.h	15;"	d
SANITIZER_SYMBOLIZER_MAC_H	lib/sanitizer_common/sanitizer_symbolizer_mac.h	16;"	d
SANITIZER_SYMBOLIZER_MARKUP	lib/sanitizer_common/sanitizer_platform.h	335;"	d
SANITIZER_SYMBOLIZER_MARKUP	lib/sanitizer_common/sanitizer_platform.h	337;"	d
SANITIZER_SYMBOLIZER_RTEMS_H	lib/sanitizer_common/sanitizer_symbolizer_rtems.h	15;"	d
SANITIZER_SYMBOLIZER_WIN_H	lib/sanitizer_common/sanitizer_dbghelp.h	16;"	d
SANITIZER_TEST_CONFIG_H	lib/sanitizer_common/tests/sanitizer_test_config.h	18;"	d
SANITIZER_TEST_HAS_MALLOC_USABLE_SIZE	lib/sanitizer_common/tests/sanitizer_test_utils.h	115;"	d
SANITIZER_TEST_HAS_MALLOC_USABLE_SIZE	lib/sanitizer_common/tests/sanitizer_test_utils.h	118;"	d
SANITIZER_TEST_HAS_MEMALIGN	lib/sanitizer_common/tests/sanitizer_test_utils.h	106;"	d
SANITIZER_TEST_HAS_MEMALIGN	lib/sanitizer_common/tests/sanitizer_test_utils.h	108;"	d
SANITIZER_TEST_HAS_POSIX_MEMALIGN	lib/sanitizer_common/tests/sanitizer_test_utils.h	101;"	d
SANITIZER_TEST_HAS_POSIX_MEMALIGN	lib/sanitizer_common/tests/sanitizer_test_utils.h	99;"	d
SANITIZER_TEST_HAS_PRINTF_L	lib/sanitizer_common/tests/sanitizer_test_utils.h	128;"	d
SANITIZER_TEST_HAS_PRINTF_L	lib/sanitizer_common/tests/sanitizer_test_utils.h	130;"	d
SANITIZER_TEST_HAS_PVALLOC	lib/sanitizer_common/tests/sanitizer_test_utils.h	114;"	d
SANITIZER_TEST_HAS_PVALLOC	lib/sanitizer_common/tests/sanitizer_test_utils.h	117;"	d
SANITIZER_TEST_HAS_STRNDUP	lib/sanitizer_common/tests/sanitizer_test_utils.h	134;"	d
SANITIZER_TEST_HAS_STRNDUP	lib/sanitizer_common/tests/sanitizer_test_utils.h	136;"	d
SANITIZER_TEST_HAS_STRNLEN	lib/sanitizer_common/tests/sanitizer_test_utils.h	122;"	d
SANITIZER_TEST_HAS_STRNLEN	lib/sanitizer_common/tests/sanitizer_test_utils.h	124;"	d
SANITIZER_TEST_UTILS_H	lib/sanitizer_common/tests/sanitizer_test_utils.h	16;"	d
SANITIZER_THREAD_REGISTRY_H	lib/sanitizer_common/sanitizer_thread_registry.h	16;"	d
SANITIZER_TLS_GET_ADDR_H	lib/sanitizer_common/sanitizer_tls_get_addr.h	30;"	d
SANITIZER_TLS_INITIAL_EXEC_ATTRIBUTE	lib/sanitizer_common/sanitizer_internal_defs.h	44;"	d
SANITIZER_TLS_INITIAL_EXEC_ATTRIBUTE	lib/sanitizer_common/sanitizer_internal_defs.h	47;"	d
SANITIZER_TSAN_INTERFACE_H	include/sanitizer/tsan_interface.h	15;"	d
SANITIZER_TVOS	lib/sanitizer_common/sanitizer_platform.h	79;"	d
SANITIZER_TVOS	lib/sanitizer_common/sanitizer_platform.h	81;"	d
SANITIZER_USES_CANONICAL_LINUX_SYSCALLS	lib/sanitizer_common/sanitizer_platform.h	248;"	d
SANITIZER_USES_CANONICAL_LINUX_SYSCALLS	lib/sanitizer_common/sanitizer_platform.h	250;"	d
SANITIZER_USES_UID16_SYSCALLS	lib/sanitizer_common/sanitizer_platform.h	262;"	d
SANITIZER_USES_UID16_SYSCALLS	lib/sanitizer_common/sanitizer_platform.h	264;"	d
SANITIZER_USE_GETAUXVAL	lib/sanitizer_common/sanitizer_getauxval.h	31;"	d
SANITIZER_USE_GETAUXVAL	lib/sanitizer_common/sanitizer_getauxval.h	33;"	d
SANITIZER_USE_GETENTROPY	lib/sanitizer_common/sanitizer_linux.cc	150;"	d	file:
SANITIZER_USE_GETENTROPY	lib/sanitizer_common/sanitizer_linux.cc	152;"	d	file:
SANITIZER_USE_GETRANDOM	lib/sanitizer_common/sanitizer_linux.cc	144;"	d	file:
SANITIZER_USE_GETRANDOM	lib/sanitizer_common/sanitizer_linux.cc	146;"	d	file:
SANITIZER_VECTOR_H	lib/sanitizer_common/sanitizer_vector.h	17;"	d
SANITIZER_WATCHOS	lib/sanitizer_common/sanitizer_platform.h	73;"	d
SANITIZER_WATCHOS	lib/sanitizer_common/sanitizer_platform.h	75;"	d
SANITIZER_WEAK_ATTRIBUTE	lib/sanitizer_common/sanitizer_internal_defs.h	32;"	d
SANITIZER_WEAK_ATTRIBUTE	lib/sanitizer_common/sanitizer_internal_defs.h	35;"	d
SANITIZER_WEAK_ATTRIBUTE	lib/sanitizer_common/sanitizer_internal_defs.h	38;"	d
SANITIZER_WEAK_ATTRIBUTE	lib/sanitizer_common/sanitizer_mac.cc	/^                        off_t off) SANITIZER_WEAK_ATTRIBUTE;$/;"	m	namespace:__sanitizer	file:
SANITIZER_WEAK_ATTRIBUTE	lib/sanitizer_common/sanitizer_mac.cc	/^extern "C" int __munmap(void *, size_t) SANITIZER_WEAK_ATTRIBUTE;$/;"	m	namespace:__sanitizer	file:
SANITIZER_WEAK_ATTRIBUTE	lib/sanitizer_common/sanitizer_mac.cc	/^extern "C" pid_t __fork(void) SANITIZER_WEAK_ATTRIBUTE;$/;"	m	namespace:__sanitizer	file:
SANITIZER_WEAK_CXX_DEFAULT_IMPL	lib/sanitizer_common/sanitizer_internal_defs.h	203;"	d
SANITIZER_WEAK_DEFAULT_IMPL	lib/sanitizer_common/sanitizer_internal_defs.h	201;"	d
SANITIZER_WINDOWS	lib/sanitizer_common/sanitizer_platform.h	85;"	d
SANITIZER_WINDOWS	lib/sanitizer_common/sanitizer_platform.h	87;"	d
SANITIZER_WINDOWS64	lib/sanitizer_common/sanitizer_platform.h	91;"	d
SANITIZER_WINDOWS64	lib/sanitizer_common/sanitizer_platform.h	93;"	d
SANITIZER_WIN_DEFS_H	lib/sanitizer_common/sanitizer_win_defs.h	14;"	d
SANITIZER_WIN_DLL_THUNK_H	lib/sanitizer_common/sanitizer_win_dll_thunk.h	15;"	d
SANITIZER_WIN_H	lib/sanitizer_common/sanitizer_win.h	14;"	d
SANITIZER_WIN_WEAK_INTERCEPTION_H	lib/sanitizer_common/sanitizer_win_weak_interception.h	13;"	d
SANITIZER_WORDSIZE	lib/sanitizer_common/sanitizer_platform.h	119;"	d
SANITIZER_WORDSIZE	lib/sanitizer_common/sanitizer_platform.h	121;"	d
SANITIZER_WORDSIZE	lib/sanitizer_common/tests/sanitizer_test_utils.h	62;"	d
SANITIZER_WORDSIZE	lib/sanitizer_common/tests/sanitizer_test_utils.h	64;"	d
SANITIZER_WORDSIZE	test/msan/test.h	2;"	d
SANITIZER_WORDSIZE	test/msan/test.h	4;"	d
SANITIZER_X32	lib/sanitizer_common/sanitizer_platform.h	131;"	d
SANITIZER_X32	lib/sanitizer_common/sanitizer_platform.h	133;"	d
SA_RESTORER	lib/sanitizer_common/sanitizer_linux.cc	793;"	d	file:
SA_SIGINFO	lib/tsan/rtl/tsan_interceptors.cc	/^const int SA_SIGINFO = 0x40;$/;"	v
SA_SIGINFO	lib/tsan/rtl/tsan_interceptors.cc	/^const int SA_SIGINFO = 4;$/;"	v
SA_SIGINFO	lib/tsan/rtl/tsan_interceptors.cc	/^const int SA_SIGINFO = 8;$/;"	v
SBase1	test/cfi/mfcall.cpp	/^struct SBase1 {$/;"	s	file:
SBase2	test/cfi/mfcall.cpp	/^struct SBase2 {$/;"	s	file:
SCANF_ARGS_MAX	lib/sanitizer_common/tests/sanitizer_format_interceptor_test.cc	/^static const unsigned SCANF_ARGS_MAX = 16;$/;"	v	file:
SCOPED_ANNOTATION	lib/tsan/rtl/tsan_interface_ann.cc	60;"	d	file:
SCOPED_ANNOTATION_RET	lib/tsan/rtl/tsan_interface_ann.cc	48;"	d	file:
SCOPED_ATOMIC	lib/tsan/rtl/tsan_interface_atomic.cc	476;"	d	file:
SCOPED_INTERCEPTOR_RAW	lib/tsan/rtl/tsan_interceptors.h	26;"	d
SCOPED_JAVA_FUNC	lib/tsan/rtl/tsan_interface_java.cc	61;"	d	file:
SCOPED_TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.h	34;"	d
SCOPED_TSAN_INTERCEPTOR_USER_CALLBACK_END	lib/tsan/rtl/tsan_interceptors.h	47;"	d
SCOPED_TSAN_INTERCEPTOR_USER_CALLBACK_START	lib/tsan/rtl/tsan_interceptors.h	44;"	d
SCUDO_ALLOCATOR_COMBINED_H_	lib/scudo/scudo_allocator_combined.h	16;"	d
SCUDO_ALLOCATOR_H_	lib/scudo/scudo_allocator.h	15;"	d
SCUDO_ALLOCATOR_SECONDARY_H_	lib/scudo/scudo_allocator_secondary.h	18;"	d
SCUDO_CAN_USE_HOOKS	lib/scudo/scudo_platform.h	62;"	d
SCUDO_CAN_USE_HOOKS	lib/scudo/scudo_platform.h	64;"	d
SCUDO_CAN_USE_PUBLIC_INTERFACE	lib/scudo/scudo_platform.h	55;"	d
SCUDO_CRC32_H_	lib/scudo/scudo_crc32.h	15;"	d
SCUDO_ERRORS_H_	lib/scudo/scudo_errors.h	15;"	d
SCUDO_FLAG	lib/scudo/scudo_flags.cpp	26;"	d	file:
SCUDO_FLAG	lib/scudo/scudo_flags.cpp	28;"	d	file:
SCUDO_FLAG	lib/scudo/scudo_flags.cpp	32;"	d	file:
SCUDO_FLAG	lib/scudo/scudo_flags.cpp	35;"	d	file:
SCUDO_FLAG	lib/scudo/scudo_flags.h	20;"	d
SCUDO_FLAG	lib/scudo/scudo_flags.h	22;"	d
SCUDO_FLAGS_H_	lib/scudo/scudo_flags.h	15;"	d
SCUDO_INTERFACE_INTERNAL_H_	lib/scudo/scudo_interface_internal.h	15;"	d
SCUDO_PLATFORM_H_	lib/scudo/scudo_platform.h	16;"	d
SCUDO_SHARED_TSD_POOL_SIZE	lib/scudo/scudo_platform.h	47;"	d
SCUDO_SHARED_TSD_POOL_SIZE	lib/scudo/scudo_platform.h	49;"	d
SCUDO_SIZE_CLASS_MAP	lib/scudo/scudo_platform.h	83;"	d
SCUDO_TSD_EXCLUSIVE	lib/scudo/scudo_platform.h	30;"	d
SCUDO_TSD_EXCLUSIVE	lib/scudo/scudo_platform.h	33;"	d
SCUDO_TSD_EXCLUSIVE_SUPPORTED	lib/scudo/scudo_platform.h	24;"	d
SCUDO_TSD_H_	lib/scudo/scudo_tsd.h	17;"	d
SCUDO_UTILS_H_	lib/scudo/scudo_utils.h	15;"	d
SEHHandler	lib/asan/asan_win.cc	/^static long WINAPI SEHHandler(EXCEPTION_POINTERS *info) {$/;"	f	file:
SEHHandler	test/asan/TestCases/Windows/user-exception.cc	/^static long WINAPI SEHHandler(EXCEPTION_POINTERS *info) {$/;"	f	file:
SEPARATOR	lib/builtins/assembly.h	20;"	d
SEPARATOR	lib/builtins/assembly.h	22;"	d
SET	lib/tsan/rtl/tsan_md5.cc	27;"	d	file:
SFDEN	lib/builtins/hexagon/dfdiv.S	/^		SFDEN = or(SFONE,PRODLO)$/;"	d
SFDEN	lib/builtins/hexagon/dfdiv.S	/^#define SFDEN r9$/;"	d
SFERROR	lib/builtins/hexagon/dfdiv.S	/^		SFERROR = and(SFONE,#-2)$/;"	d
SFERROR	lib/builtins/hexagon/dfdiv.S	/^#define SFERROR r10$/;"	d
SFHALF	lib/builtins/hexagon/dfsqrt.S	/^		SFHALF = ##0x3f000004						\/\/ form half constant$/;"	d
SFHALF	lib/builtins/hexagon/dfsqrt.S	/^		SFHALF = and(SFHALF,#-16)$/;"	d
SFHALF	lib/builtins/hexagon/dfsqrt.S	/^#define SFHALF r5$/;"	d
SFHALF_SONE	lib/builtins/hexagon/dfsqrt.S	/^		SFHALF_SONE = combine(##0x3f000004,#1)$/;"	d
SFHALF_SONE	lib/builtins/hexagon/dfsqrt.S	/^#define SFHALF_SONE r5:4$/;"	d
SFONE	lib/builtins/hexagon/dfdiv.S	/^		SFONE = ##0x3f800001$/;"	d
SFONE	lib/builtins/hexagon/dfdiv.S	/^#define SFONE r8$/;"	d
SFRAD	lib/builtins/hexagon/dfsqrt.S	/^		SFRAD = or(SFHALF,PRODLO)$/;"	d
SFRAD	lib/builtins/hexagon/dfsqrt.S	/^		SFRAD = or(SFHALF,TMPLO)			\/\/ form sf value$/;"	d
SFRAD	lib/builtins/hexagon/dfsqrt.S	/^#define SFRAD r9$/;"	d
SFRECIP	lib/builtins/hexagon/dfdiv.S	/^#define SFRECIP r11$/;"	d
SFSH	lib/builtins/hexagon/dfsqrt.S	/^		SFSH = #0$/;"	d
SFSH	lib/builtins/hexagon/dfsqrt.S	/^#define SFSH r3:2$/;"	d
SF_D	lib/builtins/hexagon/dfsqrt.S	/^		SF_D = SFHALF$/;"	d
SF_D	lib/builtins/hexagon/dfsqrt.S	/^#define SF_D r6$/;"	d
SF_E	lib/builtins/hexagon/dfsqrt.S	/^#define SF_E r7$/;"	d
SF_EXPBITS	lib/builtins/hexagon/dfdiv.S	/^#define SF_EXPBITS 8$/;"	d
SF_EXPBITS	lib/builtins/hexagon/dfsqrt.S	/^#define SF_EXPBITS 8$/;"	d
SF_H	lib/builtins/hexagon/dfsqrt.S	/^		SF_H = add(SF_H,##0x00800000 - 3)$/;"	d
SF_H	lib/builtins/hexagon/dfsqrt.S	/^		SF_H = and(SF_H,##0x007fffff)$/;"	d
SF_H	lib/builtins/hexagon/dfsqrt.S	/^#define SF_H r2$/;"	d
SF_MANTBITS	lib/builtins/hexagon/dfdiv.S	/^#define SF_MANTBITS 23$/;"	d
SF_MANTBITS	lib/builtins/hexagon/dfsqrt.S	/^#define SF_MANTBITS 23$/;"	d
SF_S	lib/builtins/hexagon/dfsqrt.S	/^#define SF_S r3$/;"	d
SHA1_K0	lib/fuzzer/FuzzerSHA1.cpp	80;"	d	file:
SHA1_K20	lib/fuzzer/FuzzerSHA1.cpp	81;"	d	file:
SHA1_K40	lib/fuzzer/FuzzerSHA1.cpp	82;"	d	file:
SHA1_K60	lib/fuzzer/FuzzerSHA1.cpp	83;"	d	file:
SHADOW	lib/msan/msan.h	/^    INVALID, APP, SHADOW, ORIGIN$/;"	e	enum:MappingDesc::Type
SHADOW_GRANULARITY	lib/asan/asan_mapping.h	241;"	d
SHADOW_GRANULARITY	lib/hwasan/hwasan_mapping.h	70;"	d
SHADOW_OFFSET	lib/asan/asan_mapping.h	184;"	d
SHADOW_OFFSET	lib/asan/asan_mapping.h	187;"	d
SHADOW_OFFSET	lib/asan/asan_mapping.h	189;"	d
SHADOW_OFFSET	lib/asan/asan_mapping.h	191;"	d
SHADOW_OFFSET	lib/asan/asan_mapping.h	193;"	d
SHADOW_OFFSET	lib/asan/asan_mapping.h	195;"	d
SHADOW_OFFSET	lib/asan/asan_mapping.h	198;"	d
SHADOW_OFFSET	lib/asan/asan_mapping.h	200;"	d
SHADOW_OFFSET	lib/asan/asan_mapping.h	203;"	d
SHADOW_OFFSET	lib/asan/asan_mapping.h	205;"	d
SHADOW_OFFSET	lib/asan/asan_mapping.h	210;"	d
SHADOW_OFFSET	lib/asan/asan_mapping.h	212;"	d
SHADOW_OFFSET	lib/asan/asan_mapping.h	215;"	d
SHADOW_OFFSET	lib/asan/asan_mapping.h	217;"	d
SHADOW_OFFSET	lib/asan/asan_mapping.h	219;"	d
SHADOW_OFFSET	lib/asan/asan_mapping.h	221;"	d
SHADOW_OFFSET	lib/asan/asan_mapping.h	223;"	d
SHADOW_OFFSET	lib/asan/asan_mapping.h	225;"	d
SHADOW_OFFSET	lib/asan/asan_mapping.h	227;"	d
SHADOW_OFFSET	lib/asan/asan_mapping.h	229;"	d
SHADOW_OFFSET	lib/asan/asan_mapping.h	231;"	d
SHADOW_OFFSET	lib/hwasan/hwasan_mapping.h	63;"	d
SHADOW_OFFSET	lib/hwasan/hwasan_mapping.h	66;"	d
SHADOW_SCALE	lib/asan/asan_mapping.h	181;"	d
SHADOW_TO_MEM	lib/hwasan/hwasan_mapping.h	73;"	d
SHADOW_TO_ORIGIN	lib/msan/msan.h	160;"	d
SHADOW_TO_ORIGIN	lib/msan/msan.h	183;"	d
SHADOW_TO_ORIGIN	lib/msan/msan.h	204;"	d
SHADOW_TO_ORIGIN	lib/msan/msan.h	219;"	d
SHADOW_TO_ORIGIN	lib/msan/msan.h	240;"	d
SHADOW_TO_ORIGIN	lib/msan/msan.h	65;"	d
SHA_BIG_ENDIAN	lib/fuzzer/FuzzerSHA1.cpp	34;"	d	file:
SHIFTAMT	lib/builtins/hexagon/dfsqrt.S	/^		SHIFTAMT = add(SHIFTAMT,#16)$/;"	d
SHIFTAMT	lib/builtins/hexagon/dfsqrt.S	/^		SHIFTAMT = and(EXP,#1)$/;"	d
SHIFTAMT	lib/builtins/hexagon/dfsqrt.S	/^		SHIFTAMT = mux(P_EXP1,#15-(1+1),#15-(1+0))$/;"	d
SHIFTAMT	lib/builtins/hexagon/dfsqrt.S	/^		SHIFTAMT = mux(P_EXP1,#3,#2)$/;"	d
SHIFTAMT	lib/builtins/hexagon/dfsqrt.S	/^		SHIFTAMT = mux(P_EXP1,#7,#8)$/;"	d
SHIFTAMT	lib/builtins/hexagon/dfsqrt.S	/^		SHIFTAMT = mux(P_EXP1,#8,#9)$/;"	d
SHIFTAMT	lib/builtins/hexagon/dfsqrt.S	/^#define SHIFTAMT r9$/;"	d
SHUF	lib/tsan/rtl/tsan_rtl.cc	724;"	d	file:
SHUTDOWN	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^    SHUTDOWN,$/;"	e	enum:Event::Type	file:
SIGABRT	lib/tsan/rtl/tsan_interceptors.cc	/^const int SIGABRT = 6;$/;"	v
SIGACTION_SYMNAME	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	2216;"	d
SIGACTION_SYMNAME	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	378;"	d
SIGBUS	lib/tsan/rtl/tsan_interceptors.cc	/^const int SIGBUS = 10;$/;"	v
SIGBUS	lib/tsan/rtl/tsan_interceptors.cc	/^const int SIGBUS = 7;$/;"	v
SIGFPE	lib/tsan/rtl/tsan_interceptors.cc	/^const int SIGFPE = 8;$/;"	v
SIGILL	lib/tsan/rtl/tsan_interceptors.cc	/^const int SIGILL = 4;$/;"	v
SIGLEN	lib/profile/InstrProfilingFile.c	416;"	d	file:
SIGN	lib/builtins/hexagon/dfdiv.S	/^		SIGN = xor(AH,BH)$/;"	d
SIGN	lib/builtins/hexagon/dfdiv.S	/^#define SIGN r28$/;"	d
SIGNAL_INTERCEPTOR_SIGACTION_IMPL	lib/msan/msan_interceptors.cc	1284;"	d	file:
SIGNAL_INTERCEPTOR_SIGACTION_IMPL	lib/tsan/rtl/tsan_interceptors.cc	2317;"	d	file:
SIGNAL_INTERCEPTOR_SIGNAL_IMPL	lib/msan/msan_interceptors.cc	1287;"	d	file:
SIGNAL_INTERCEPTOR_SIGNAL_IMPL	lib/tsan/rtl/tsan_interceptors.cc	2320;"	d	file:
SIGNAL_TO_HANDLE	test/tsan/signal_longjmp.cc	18;"	d	file:
SIGNAL_TO_HANDLE	test/tsan/signal_longjmp.cc	20;"	d	file:
SIGPIPE	lib/tsan/rtl/tsan_interceptors.cc	/^const int SIGPIPE = 13;$/;"	v
SIGSEGV	lib/tsan/rtl/tsan_interceptors.cc	/^const int SIGSEGV = 11;$/;"	v
SIGSYS	lib/tsan/rtl/tsan_interceptors.cc	/^const int SIGSYS = 12;$/;"	v
SIGSYS	lib/tsan/rtl/tsan_interceptors.cc	/^const int SIGSYS = 31;$/;"	v
SIGTERM	lib/tsan/rtl/tsan_interceptors.cc	/^const int SIGTERM = 15;$/;"	v
SIG_AMD	lib/builtins/cpu_model.c	/^  SIG_AMD = 0x68747541 \/* Auth *\/$/;"	e	enum:VendorSignatures	file:
SIG_INTEL	lib/builtins/cpu_model.c	/^  SIG_INTEL = 0x756e6547 \/* Genu *\/,$/;"	e	enum:VendorSignatures	file:
SIG_SETMASK	lib/tsan/rtl/tsan_interceptors.cc	/^const int SIG_SETMASK = 2;$/;"	v
SIG_SETMASK	lib/tsan/rtl/tsan_interceptors.cc	/^const int SIG_SETMASK = 3;$/;"	v
SINGLE_PRECISION	lib/builtins/addsf3.c	15;"	d	file:
SINGLE_PRECISION	lib/builtins/arm/aeabi_frsub.c	10;"	d	file:
SINGLE_PRECISION	lib/builtins/comparesf2.c	40;"	d	file:
SINGLE_PRECISION	lib/builtins/divsf3.c	19;"	d	file:
SINGLE_PRECISION	lib/builtins/fixsfdi.c	11;"	d	file:
SINGLE_PRECISION	lib/builtins/fixsfsi.c	11;"	d	file:
SINGLE_PRECISION	lib/builtins/fixsfti.c	14;"	d	file:
SINGLE_PRECISION	lib/builtins/fixunssfdi.c	11;"	d	file:
SINGLE_PRECISION	lib/builtins/fixunssfsi.c	15;"	d	file:
SINGLE_PRECISION	lib/builtins/fixunssfti.c	15;"	d	file:
SINGLE_PRECISION	lib/builtins/floatsisf.c	16;"	d	file:
SINGLE_PRECISION	lib/builtins/floatunsisf.c	16;"	d	file:
SINGLE_PRECISION	lib/builtins/mulsf3.c	15;"	d	file:
SINGLE_PRECISION	lib/builtins/negsf2.c	14;"	d	file:
SINGLE_PRECISION	lib/builtins/subsf3.c	15;"	d	file:
SIZEOF_STRUCT_USTAT	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	260;"	d	file:
SIZEOF_STRUCT_USTAT	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	263;"	d	file:
SIZE_CLASS_MAP_TYPE	lib/scudo/scudo_platform.h	86;"	d
SIZE_CLASS_MAP_TYPE_	lib/scudo/scudo_platform.h	87;"	d
SIZE_CLASS_MAP_TYPE__	lib/scudo/scudo_platform.h	88;"	d
SIZE_T	lib/interception/interception.h	/^typedef __sanitizer::uptr    SIZE_T;$/;"	t
SI_ANDROID	lib/sanitizer_common/sanitizer_platform_interceptors.h	49;"	d
SI_ANDROID	lib/sanitizer_common/sanitizer_platform_interceptors.h	51;"	d
SI_FREEBSD	lib/sanitizer_common/sanitizer_platform_interceptors.h	55;"	d
SI_FREEBSD	lib/sanitizer_common/sanitizer_platform_interceptors.h	57;"	d
SI_IOS	lib/sanitizer_common/sanitizer_platform_interceptors.h	87;"	d
SI_IOS	lib/sanitizer_common/sanitizer_platform_interceptors.h	89;"	d
SI_LINUX	lib/sanitizer_common/sanitizer_platform_interceptors.h	73;"	d
SI_LINUX	lib/sanitizer_common/sanitizer_platform_interceptors.h	75;"	d
SI_LINUX_NOT_ANDROID	lib/sanitizer_common/sanitizer_platform_interceptors.h	43;"	d
SI_LINUX_NOT_ANDROID	lib/sanitizer_common/sanitizer_platform_interceptors.h	45;"	d
SI_LINUX_NOT_FREEBSD	lib/sanitizer_common/sanitizer_platform_interceptors.h	123;"	d
SI_LINUX_NOT_FREEBSD	lib/sanitizer_common/sanitizer_platform_interceptors.h	125;"	d
SI_MAC	lib/sanitizer_common/sanitizer_platform_interceptors.h	79;"	d
SI_MAC	lib/sanitizer_common/sanitizer_platform_interceptors.h	82;"	d
SI_MAC_DEPLOYMENT_BELOW_10_10	lib/sanitizer_common/sanitizer_platform_interceptors.h	499;"	d
SI_MAC_DEPLOYMENT_BELOW_10_10	lib/sanitizer_common/sanitizer_platform_interceptors.h	501;"	d
SI_MAC_DEPLOYMENT_BELOW_10_7	lib/sanitizer_common/sanitizer_platform_interceptors.h	149;"	d
SI_MAC_DEPLOYMENT_BELOW_10_7	lib/sanitizer_common/sanitizer_platform_interceptors.h	151;"	d
SI_NETBSD	lib/sanitizer_common/sanitizer_platform_interceptors.h	61;"	d
SI_NETBSD	lib/sanitizer_common/sanitizer_platform_interceptors.h	63;"	d
SI_NOT_FUCHSIA	lib/sanitizer_common/sanitizer_platform_interceptors.h	93;"	d
SI_NOT_FUCHSIA	lib/sanitizer_common/sanitizer_platform_interceptors.h	95;"	d
SI_NOT_MAC	lib/sanitizer_common/sanitizer_platform_interceptors.h	80;"	d
SI_NOT_MAC	lib/sanitizer_common/sanitizer_platform_interceptors.h	83;"	d
SI_NOT_RTEMS	lib/sanitizer_common/sanitizer_platform_interceptors.h	101;"	d
SI_NOT_RTEMS	lib/sanitizer_common/sanitizer_platform_interceptors.h	99;"	d
SI_OPENBSD	lib/sanitizer_common/sanitizer_platform_interceptors.h	67;"	d
SI_OPENBSD	lib/sanitizer_common/sanitizer_platform_interceptors.h	69;"	d
SI_POSIX	lib/sanitizer_common/sanitizer_platform_interceptors.h	20;"	d
SI_POSIX	lib/sanitizer_common/sanitizer_platform_interceptors.h	22;"	d
SI_POSIX_NOT_MAC	lib/sanitizer_common/sanitizer_platform_interceptors.h	117;"	d
SI_POSIX_NOT_MAC	lib/sanitizer_common/sanitizer_platform_interceptors.h	119;"	d
SI_SOLARIS	lib/sanitizer_common/sanitizer_platform_interceptors.h	105;"	d
SI_SOLARIS	lib/sanitizer_common/sanitizer_platform_interceptors.h	107;"	d
SI_SOLARIS32	lib/sanitizer_common/sanitizer_platform_interceptors.h	111;"	d
SI_SOLARIS32	lib/sanitizer_common/sanitizer_platform_interceptors.h	113;"	d
SI_WINDOWS	lib/sanitizer_common/sanitizer_platform_interceptors.h	26;"	d
SI_WINDOWS	lib/sanitizer_common/sanitizer_platform_interceptors.h	28;"	d
SInt	lib/ubsan/ubsan_diag.h	/^      SIntMax SInt;$/;"	m	union:__ubsan::Diag::Arg::__anon104
SIntMax	lib/ubsan/ubsan_value.h	/^typedef s128 SIntMax;$/;"	t	namespace:__ubsan
SMALLPRESTACKSIZE	lib/msan/tests/msan_test.cc	3258;"	d	file:
SMALLPRESTACKSIZE	lib/msan/tests/msan_test.cc	3261;"	d	file:
SMALLSTACKSIZE	lib/msan/tests/msan_test.cc	3257;"	d	file:
SMALLSTACKSIZE	lib/msan/tests/msan_test.cc	3260;"	d	file:
SMR	lib/fuzzer/FuzzerLoop.cpp	/^SharedMemoryRegion SMR;$/;"	m	namespace:fuzzer	file:
SO_NAME	test/asan/TestCases/Linux/stress_dtls.c	/^void **SO_NAME() {$/;"	f
SPINLOCK_COUNT	lib/builtins/atomic.c	44;"	d	file:
SPINLOCK_MASK	lib/builtins/atomic.c	/^static const long SPINLOCK_MASK = SPINLOCK_COUNT - 1;$/;"	v	file:
SP_REG	lib/sanitizer_common/sanitizer_stoptheworld_mac.cc	105;"	d	file:
SP_REG	lib/sanitizer_common/sanitizer_stoptheworld_mac.cc	91;"	d	file:
SP_REG	lib/sanitizer_common/sanitizer_stoptheworld_mac.cc	97;"	d	file:
SP_REG	lib/sanitizer_common/sanitizer_stoptheworld_mac.cc	99;"	d	file:
SRC_DOUBLE	lib/builtins/extenddftf2.c	15;"	d	file:
SRC_DOUBLE	lib/builtins/truncdfhf2.c	10;"	d	file:
SRC_DOUBLE	lib/builtins/truncdfsf2.c	10;"	d	file:
SRC_HALF	lib/builtins/extendhfsf2.c	11;"	d	file:
SRC_QUAD	lib/builtins/trunctfdf2.c	14;"	d	file:
SRC_QUAD	lib/builtins/trunctfsf2.c	14;"	d	file:
SRC_REP_C	lib/builtins/fp_extend.h	22;"	d
SRC_REP_C	lib/builtins/fp_extend.h	29;"	d
SRC_REP_C	lib/builtins/fp_extend.h	45;"	d
SRC_REP_C	lib/builtins/fp_trunc.h	22;"	d
SRC_REP_C	lib/builtins/fp_trunc.h	28;"	d
SRC_REP_C	lib/builtins/fp_trunc.h	34;"	d
SRC_SINGLE	lib/builtins/extendsfdf2.c	11;"	d	file:
SRC_SINGLE	lib/builtins/extendsftf2.c	15;"	d	file:
SRC_SINGLE	lib/builtins/truncsfhf2.c	10;"	d	file:
SR_BIT_INEXACT	lib/builtins/hexagon/dfaddsub.S	/^#define SR_BIT_INEXACT 5$/;"	d
SR_ROUND_OFF	lib/builtins/hexagon/dfaddsub.S	/^#define SR_ROUND_OFF 22$/;"	d
SR_ROUND_OFF	lib/builtins/hexagon/dfdiv.S	/^#define SR_ROUND_OFF 22$/;"	d
SR_ROUND_OFF	lib/builtins/hexagon/dffma.S	/^#define SR_ROUND_OFF 22$/;"	d
SR_ROUND_OFF	lib/builtins/hexagon/dfmul.S	/^#define SR_ROUND_OFF 22$/;"	d
SSIZE_T	lib/interception/interception.h	/^typedef __sanitizer::sptr    SSIZE_T;$/;"	t
SSS1	lib/msan/tests/msan_test.cc	/^struct SSS1 {$/;"	s	file:
SSS2	lib/msan/tests/msan_test.cc	/^struct SSS2 {$/;"	s	file:
SSS3	lib/msan/tests/msan_test.cc	/^struct SSS3 {$/;"	s	file:
SSS4	lib/msan/tests/msan_test.cc	/^struct SSS4 {$/;"	s	file:
SSS5	lib/msan/tests/msan_test.cc	/^struct SSS5 {$/;"	s	file:
SSS6	lib/msan/tests/msan_test.cc	/^struct SSS6 {$/;"	s	file:
SSS7	lib/msan/tests/msan_test.cc	/^struct SSS7 {$/;"	s	file:
SSS8	lib/msan/tests/msan_test.cc	/^struct SSS8 {$/;"	s	file:
STACKSPACE	lib/builtins/hexagon/dffma.S	/^#define STACKSPACE 32$/;"	d
STACK_TRACE_TAG_POISON	lib/hwasan/hwasan.h	/^const int STACK_TRACE_TAG_POISON = StackTrace::TAG_CUSTOM + 1;$/;"	m	namespace:__hwasan
STACK_TRACE_TAG_POISON	lib/msan/msan.h	/^const int STACK_TRACE_TAG_POISON = StackTrace::TAG_CUSTOM + 1;$/;"	m	namespace:__msan
STAT	lib/sanitizer_common/symbolizer/sanitizer_wrappers.cc	140;"	d	file:
STDCXX_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^STDCXX_INTERCEPTOR(int, __cxa_guard_acquire, atomic_uint32_t *g) {$/;"	f
STDCXX_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^STDCXX_INTERCEPTOR(void, __cxa_guard_abort, atomic_uint32_t *g) {$/;"	f
STDCXX_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^STDCXX_INTERCEPTOR(void, __cxa_guard_release, atomic_uint32_t *g) {$/;"	f
STDCXX_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	857;"	d	file:
STDCXX_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	859;"	d	file:
STDCXX_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors_mac.cc	/^STDCXX_INTERCEPTOR(bool, _ZNSt3__114__shared_count16__release_sharedEv,$/;"	f	namespace:__tsan
STDCXX_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors_mac.cc	/^STDCXX_INTERCEPTOR(void, _ZNSt3__111__call_onceERVmPvPFvS2_E, void *flag,$/;"	f	namespace:__tsan
STDCXX_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors_mac.cc	/^STDCXX_INTERCEPTOR(void, _ZNSt3__119__shared_weak_count16__release_sharedEv,$/;"	f	namespace:__tsan
STDCXX_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors_mac.cc	336;"	d	file:
STEP	lib/tsan/rtl/tsan_md5.cc	22;"	d	file:
STICKIES	lib/builtins/hexagon/dffma.S	/^		STICKIES = #0$/;"	d
STICKIES	lib/builtins/hexagon/dffma.S	/^		STICKIES = extract(CTMP2,RIGHTLEFTSHIFT)$/;"	d
STICKIES	lib/builtins/hexagon/dffma.S	/^#define STICKIES r5:4$/;"	d
STICKIESH	lib/builtins/hexagon/dffma.S	/^#define STICKIESH r5$/;"	d
STICKIESL	lib/builtins/hexagon/dffma.S	/^#define STICKIESL r4$/;"	d
STICKY	lib/builtins/i386/floatundisf.S	/^#define			STICKY			sticky-0b(%ecx,%eax,8)$/;"	d
STRINGIFY	lib/sanitizer_common/sanitizer_win_defs.h	35;"	d
STRINGIFY_	lib/sanitizer_common/sanitizer_win_defs.h	34;"	d
STRING_OR_NULL	test/sanitizer_common/TestCases/NetBSD/netent.cc	9;"	d	file:
STRING_OR_NULL	test/sanitizer_common/TestCases/NetBSD/protoent.cc	7;"	d	file:
STRING_OR_NULL	test/sanitizer_common/TestCases/NetBSD/ttyent.cc	7;"	d	file:
SUB	lib/msan/tests/msan_test.cc	/^template<class T> INLINE T SUB(const T &a, const T&b) { return a - b; }$/;"	f
SUBFILE_TO_READ	lib/msan/tests/msan_test.cc	117;"	d	file:
SUBFILE_TO_READ	lib/msan/tests/msan_test.cc	123;"	d	file:
SUCCESS	include/xray/xray_interface.h	/^  SUCCESS = 1,$/;"	e	enum:XRayPatchingStatus
SUPERUSER_GROUP	lib/msan/tests/msan_test.cc	119;"	d	file:
SUPERUSER_GROUP	lib/msan/tests/msan_test.cc	125;"	d	file:
SWAP	lib/builtins/hexagon/dffma.S	/^		SWAP = cmp.gt(EXPC,EXPA)	\/\/ If C >> PP$/;"	d
SWAP	lib/builtins/hexagon/dffma.S	/^#define SWAP p1$/;"	d
SYMBOL_IS_FUNC	lib/builtins/assembly.h	30;"	d
SYMBOL_IS_FUNC	lib/builtins/assembly.h	41;"	d
SYMBOL_IS_FUNC	lib/builtins/assembly.h	43;"	d
SYMBOL_IS_FUNC	lib/builtins/assembly.h	59;"	d
SYMBOL_NAME	lib/builtins/assembly.h	140;"	d
SYMLINK_TO_READ	lib/msan/tests/msan_test.cc	118;"	d	file:
SYMLINK_TO_READ	lib/msan/tests/msan_test.cc	124;"	d	file:
SYNC_OP_4	lib/builtins/arm/sync-ops.h	18;"	d
SYNC_OP_8	lib/builtins/arm/sync-ops.h	34;"	d
SZ	test/asan/TestCases/Linux/odr-violation.cc	37;"	d	file:
S_ONE	lib/builtins/hexagon/dffma.S	/^#define S_ONE r14$/;"	d
S_ONE	lib/builtins/hexagon/dfmul.S	/^#define S_ONE r8$/;"	d
S_ONE	lib/builtins/hexagon/dfsqrt.S	/^		S_ONE = #1$/;"	d
S_ONE	lib/builtins/hexagon/dfsqrt.S	/^#define S_ONE r2$/;"	d
S_ONE	lib/builtins/hexagon/dfsqrt.S	/^#define S_ONE r4$/;"	d
S_ZERO	lib/builtins/hexagon/dffma.S	/^#define S_ZERO r15$/;"	d
S_ZERO	lib/builtins/hexagon/dfmul.S	/^#define S_ZERO r9$/;"	d
S_int	test/cfi/mfcall.cpp	/^typedef int (S::*S_int)();$/;"	t	file:
S_void	test/cfi/mfcall.cpp	/^typedef void (S::*S_void)();$/;"	t	file:
SancovFlags	lib/sanitizer_common/sancov_flags.h	/^struct SancovFlags {$/;"	s	namespace:__sancov
SanitizerBreakOptimization	lib/sanitizer_common/sanitizer_common.h	/^static inline void SanitizerBreakOptimization(void *arg) {$/;"	f	namespace:__sanitizer
SanitizerCommonDecorator	lib/sanitizer_common/sanitizer_report_decorator.h	/^  SanitizerCommonDecorator() : ansi_(ColorizeReports()) {}$/;"	f	class:__sanitizer::SanitizerCommonDecorator
SanitizerCommonDecorator	lib/sanitizer_common/sanitizer_report_decorator.h	/^class SanitizerCommonDecorator {$/;"	c	namespace:__sanitizer
SanitizerCommonFileTest	lib/sanitizer_common/tests/sanitizer_libc_test.cc	/^class SanitizerCommonFileTest : public ::testing::TestWithParam<uptr> {$/;"	c	file:
SanitizerDumpCoverage	lib/sanitizer_common/sanitizer_coverage_libcdep_new.cc	/^static void SanitizerDumpCoverage(const uptr* unsorted_pcs, uptr len) {$/;"	f	namespace:__sancov::__anon64
SanitizerInitializeUnwinder	lib/sanitizer_common/sanitizer_common.h	/^INLINE void SanitizerInitializeUnwinder() {}$/;"	f	namespace:__sanitizer
SanitizerInitializeUnwinder	lib/sanitizer_common/sanitizer_unwind_linux_libcdep.cc	/^void SanitizerInitializeUnwinder() {$/;"	f	namespace:__sanitizer
SanitizerToolName	lib/sanitizer_common/sanitizer_common.cc	/^const char *SanitizerToolName = "SanitizerTool";$/;"	m	namespace:__sanitizer	file:
SaveArtifacts	lib/fuzzer/FuzzerOptions.h	/^  bool SaveArtifacts = true;$/;"	m	struct:fuzzer::FuzzingOptions
SaveRegistersInStack	test/tsan/signal_recursive.cc	/^static void SaveRegistersInStack() {$/;"	f	file:
SavedFlagPtr	lib/asan/asan_fake_stack.h	/^  static u8 **SavedFlagPtr(uptr x, uptr class_id) {$/;"	f	class:__asan::FakeStack
Scale	lib/esan/esan_shadow.h	/^  uptr Scale;$/;"	m	class:__esan::ShadowMapping
ScanGlobalRange	lib/lsan/lsan_common.cc	/^void ScanGlobalRange(uptr begin, uptr end, Frontier *frontier) {$/;"	f	namespace:__lsan
ScanRangeForPointers	lib/lsan/lsan_common.cc	/^void ScanRangeForPointers(uptr begin, uptr end,$/;"	f	namespace:__lsan
ScanRootRegion	lib/lsan/lsan_common.cc	/^void ScanRootRegion(Frontier *frontier, const RootRegion &root_region,$/;"	f	namespace:__lsan
Scare	lib/asan/asan_scariness_score.h	/^  void Scare(int add_to_score, const char *reason) {$/;"	f	struct:__asan::ScarinessScoreBase
ScarinessScore	lib/asan/asan_scariness_score.h	/^  ScarinessScore() {$/;"	f	struct:__asan::ScarinessScore
ScarinessScore	lib/asan/asan_scariness_score.h	/^struct ScarinessScore : ScarinessScoreBase {$/;"	s	namespace:__asan
ScarinessScoreBase	lib/asan/asan_scariness_score.h	/^struct ScarinessScoreBase {$/;"	s	namespace:__asan
ScheduleUnregisterGlobals	lib/asan/asan_win_dynamic_runtime_thunk.cc	/^int ScheduleUnregisterGlobals() {$/;"	f	namespace:__anon49
ScopedAllocatorErrorReport	lib/sanitizer_common/sanitizer_allocator_report.cc	/^  ScopedAllocatorErrorReport(const char *error_summary_,$/;"	f	class:__sanitizer::ScopedAllocatorErrorReport
ScopedAllocatorErrorReport	lib/sanitizer_common/sanitizer_allocator_report.cc	/^class ScopedAllocatorErrorReport {$/;"	c	namespace:__sanitizer	file:
ScopedAnnotation	lib/tsan/rtl/tsan_interface_ann.cc	/^  ScopedAnnotation(ThreadState *thr, const char *aname, uptr pc)$/;"	f	class:__tsan::ScopedAnnotation
ScopedAnnotation	lib/tsan/rtl/tsan_interface_ann.cc	/^class ScopedAnnotation {$/;"	c	namespace:__tsan	file:
ScopedAtomic	lib/tsan/rtl/tsan_interface_atomic.cc	/^  ScopedAtomic(ThreadState *thr, uptr pc, const volatile void *a,$/;"	f	class:ScopedAtomic
ScopedAtomic	lib/tsan/rtl/tsan_interface_atomic.cc	/^class ScopedAtomic {$/;"	c	file:
ScopedDD	lib/sanitizer_common/tests/sanitizer_deadlock_detector_test.cc	/^  ScopedDD() {$/;"	f	struct:ScopedDD
ScopedDD	lib/sanitizer_common/tests/sanitizer_deadlock_detector_test.cc	/^struct ScopedDD {$/;"	s	file:
ScopedDisableMsanInterceptorChecks	lib/fuzzer/FuzzerInternal.h	/^  ScopedDisableMsanInterceptorChecks() {$/;"	f	struct:fuzzer::ScopedDisableMsanInterceptorChecks
ScopedDisableMsanInterceptorChecks	lib/fuzzer/FuzzerInternal.h	/^struct ScopedDisableMsanInterceptorChecks {$/;"	s	namespace:fuzzer
ScopedDisabler	include/sanitizer/lsan_interface.h	/^  ScopedDisabler() { __lsan_disable(); }$/;"	f	class:__lsan::ScopedDisabler
ScopedDisabler	include/sanitizer/lsan_interface.h	/^class ScopedDisabler {$/;"	c	namespace:__lsan
ScopedEnableMsanInterceptorChecks	lib/fuzzer/FuzzerInternal.h	/^  ScopedEnableMsanInterceptorChecks() {$/;"	f	struct:fuzzer::ScopedEnableMsanInterceptorChecks
ScopedEnableMsanInterceptorChecks	lib/fuzzer/FuzzerInternal.h	/^struct ScopedEnableMsanInterceptorChecks {$/;"	s	namespace:fuzzer
ScopedErrorReportLock	lib/sanitizer_common/sanitizer_common.h	/^class ScopedErrorReportLock {$/;"	c	namespace:__sanitizer
ScopedErrorReportLock	lib/sanitizer_common/sanitizer_symbolizer_report.cc	/^ScopedErrorReportLock::ScopedErrorReportLock() {$/;"	f	class:__sanitizer::ScopedErrorReportLock
ScopedFileCloserAndDeleter	lib/xray/tests/unit/fdr_logging_test.cc	/^  explicit ScopedFileCloserAndDeleter(int Fd, const char *Filename)$/;"	f	struct:__xray::__anon25::ScopedFileCloserAndDeleter
ScopedFileCloserAndDeleter	lib/xray/tests/unit/fdr_logging_test.cc	/^struct ScopedFileCloserAndDeleter {$/;"	s	namespace:__xray::__anon25	file:
ScopedGlobalProcessor	lib/tsan/rtl/tsan_mman.cc	/^ScopedGlobalProcessor::ScopedGlobalProcessor() {$/;"	f	class:__tsan::ScopedGlobalProcessor
ScopedGlobalProcessor	lib/tsan/rtl/tsan_rtl.h	/^struct ScopedGlobalProcessor {$/;"	s	namespace:__tsan
ScopedHandle	lib/sanitizer_common/sanitizer_symbolizer_win.cc	/^  ScopedHandle() : h_(nullptr) {}$/;"	f	struct:__sanitizer::__anon78::ScopedHandle
ScopedHandle	lib/sanitizer_common/sanitizer_symbolizer_win.cc	/^  explicit ScopedHandle(HANDLE h) : h_(h) {}$/;"	f	struct:__sanitizer::__anon78::ScopedHandle
ScopedHandle	lib/sanitizer_common/sanitizer_symbolizer_win.cc	/^struct ScopedHandle {$/;"	s	namespace:__sanitizer::__anon78	file:
ScopedIgnoreInterceptors	lib/tsan/rtl/tsan_rtl.h	/^  ScopedIgnoreInterceptors() {$/;"	f	struct:__tsan::ScopedIgnoreInterceptors
ScopedIgnoreInterceptors	lib/tsan/rtl/tsan_rtl.h	/^struct ScopedIgnoreInterceptors {$/;"	s	namespace:__tsan
ScopedInErrorReport	lib/asan/asan_report.cc	/^  explicit ScopedInErrorReport(bool fatal = false)$/;"	f	class:__asan::ScopedInErrorReport
ScopedInErrorReport	lib/asan/asan_report.cc	/^class ScopedInErrorReport {$/;"	c	namespace:__asan	file:
ScopedInterceptor	lib/tsan/rtl/tsan_interceptors.cc	/^ScopedInterceptor::ScopedInterceptor(ThreadState *thr, const char *fname,$/;"	f	class:ScopedInterceptor
ScopedInterceptor	lib/tsan/rtl/tsan_interceptors.h	/^class ScopedInterceptor {$/;"	c	namespace:__tsan
ScopedInterceptorDisabler	lib/lsan/lsan_common.h	/^  ScopedInterceptorDisabler() { DisableInThisThread(); }$/;"	f	struct:__lsan::ScopedInterceptorDisabler
ScopedInterceptorDisabler	lib/lsan/lsan_common.h	/^struct ScopedInterceptorDisabler {$/;"	s	namespace:__lsan
ScopedJavaFunc	lib/tsan/rtl/tsan_interface_java.cc	/^  ScopedJavaFunc(ThreadState *thr, uptr pc)$/;"	f	class:__tsan::ScopedJavaFunc
ScopedJavaFunc	lib/tsan/rtl/tsan_interface_java.cc	/^class ScopedJavaFunc {$/;"	c	namespace:__tsan	file:
ScopedReport	lib/tsan/rtl/tsan_rtl.h	/^class ScopedReport : public ScopedReportBase {$/;"	c	namespace:__tsan
ScopedReport	lib/tsan/rtl/tsan_rtl_report.cc	/^ScopedReport::ScopedReport(ReportType typ, uptr tag)$/;"	f	class:__tsan::ScopedReport
ScopedReport	lib/ubsan/ubsan_diag.cc	/^ScopedReport::ScopedReport(ReportOptions Opts, Location SummaryLoc,$/;"	f	class:ScopedReport
ScopedReport	lib/ubsan/ubsan_diag.h	/^class ScopedReport {$/;"	c	namespace:__ubsan
ScopedReportBase	lib/tsan/rtl/tsan_rtl.h	/^class ScopedReportBase {$/;"	c	namespace:__tsan
ScopedReportBase	lib/tsan/rtl/tsan_rtl_report.cc	/^ScopedReportBase::ScopedReportBase(ReportType typ, uptr tag) {$/;"	f	class:__tsan::ScopedReportBase
ScopedSetTracerPID	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^  explicit ScopedSetTracerPID(uptr tracer_pid) {$/;"	f	struct:__sanitizer::ScopedSetTracerPID
ScopedSetTracerPID	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^struct ScopedSetTracerPID {$/;"	s	namespace:__sanitizer	file:
ScopedStackSpaceWithGuard	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^  explicit ScopedStackSpaceWithGuard(uptr stack_size) {$/;"	f	class:__sanitizer::ScopedStackSpaceWithGuard
ScopedStackSpaceWithGuard	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^class ScopedStackSpaceWithGuard {$/;"	c	namespace:__sanitizer	file:
ScopedSyscall	lib/tsan/rtl/tsan_interceptors.cc	/^  explicit ScopedSyscall(ThreadState *thr)$/;"	f	struct:ScopedSyscall
ScopedSyscall	lib/tsan/rtl/tsan_interceptors.cc	/^struct ScopedSyscall {$/;"	s	file:
ScopedThread	lib/tsan/tests/rtl/tsan_test_util.h	/^class ScopedThread {$/;"	c
ScopedThread	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^ScopedThread::ScopedThread(bool detached, bool main) {$/;"	f	class:ScopedThread
ScopedThreadCallback	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^void *ScopedThread::Impl::ScopedThreadCallback(void *arg) {$/;"	f	class:ScopedThread::Impl
ScopedThreadLocalStateBackup	lib/hwasan/hwasan.h	/^  ScopedThreadLocalStateBackup() { Backup(); }$/;"	f	class:__hwasan::ScopedThreadLocalStateBackup
ScopedThreadLocalStateBackup	lib/hwasan/hwasan.h	/^class ScopedThreadLocalStateBackup {$/;"	c	namespace:__hwasan
ScopedThreadLocalStateBackup	lib/msan/msan.h	/^  ScopedThreadLocalStateBackup() { Backup(); }$/;"	f	class:__msan::ScopedThreadLocalStateBackup
ScopedThreadLocalStateBackup	lib/msan/msan.h	/^class ScopedThreadLocalStateBackup {$/;"	c	namespace:__msan
ScopedUnwinding	lib/asan/asan_thread.h	/^  explicit ScopedUnwinding(AsanThread *t) : thread(t) {$/;"	f	class:__asan::ScopedUnwinding
ScopedUnwinding	lib/asan/asan_thread.h	/^class ScopedUnwinding {$/;"	c	namespace:__asan
ScudoFlags	lib/scudo/scudo_flags.cpp	/^static Flags ScudoFlags;  \/\/ Use via getFlags().$/;"	m	namespace:__scudo	file:
ScudoThreadState	lib/scudo/scudo_tsd_exclusive.cpp	/^THREADLOCAL ThreadState ScudoThreadState = ThreadNotInitialized;$/;"	m	namespace:__scudo	file:
Search	lib/sanitizer_common/scripts/cpplint.py	/^def Search(pattern, s):$/;"	f
SearchForModule	lib/sanitizer_common/sanitizer_symbolizer_libcdep.cc	/^static const LoadedModule *SearchForModule(const ListOfModules &modules,$/;"	f	namespace:__sanitizer
SearchMemory	lib/fuzzer/FuzzerUtilFuchsia.cpp	/^const void *SearchMemory(const void *Data, size_t DataLen, const void *Patt,$/;"	f	namespace:fuzzer
SearchMemory	lib/fuzzer/FuzzerUtilPosix.cpp	/^const void *SearchMemory(const void *Data, size_t DataLen, const void *Patt,$/;"	f	namespace:fuzzer
SearchMemory	lib/fuzzer/FuzzerUtilWindows.cpp	/^const void *SearchMemory(const void *Data, size_t DataLen, const void *Patt,$/;"	f	namespace:fuzzer
SearchRegexCmd	lib/fuzzer/FuzzerUtilPosix.cpp	/^std::string SearchRegexCmd(const std::string &Regex) {$/;"	f	namespace:fuzzer
SearchRegexCmd	lib/fuzzer/FuzzerUtilWindows.cpp	/^std::string SearchRegexCmd(const std::string &Regex) {$/;"	f	namespace:fuzzer
Second	lib/xray/tests/unit/allocator_test.cc	/^  s64 Second;$/;"	m	struct:__xray::__anon24::TestData	file:
Second	lib/xray/tests/unit/segmented_array_test.cc	/^  s64 Second;$/;"	m	struct:__xray::__anon23::TestData	file:
Secondary	lib/scudo/scudo_allocator_combined.h	/^  SecondaryAllocator Secondary;$/;"	m	class:CombinedAllocator
SecondaryAllocator	lib/asan/asan_allocator.h	/^typedef LargeMmapAllocator<AsanMapUnmapCallback> SecondaryAllocator;$/;"	t	namespace:__asan
SecondaryAllocator	lib/hwasan/hwasan_allocator.cc	/^typedef LargeMmapAllocator<HwasanMapUnmapCallback> SecondaryAllocator;$/;"	t	namespace:__hwasan	file:
SecondaryAllocator	lib/lsan/lsan_allocator.cc	/^typedef LargeMmapAllocator<> SecondaryAllocator;$/;"	t	namespace:__lsan	file:
SecondaryAllocator	lib/msan/msan_allocator.cc	/^typedef LargeMmapAllocator<MsanMapUnmapCallback> SecondaryAllocator;$/;"	t	namespace:__msan	file:
SecondaryAllocator	lib/sanitizer_common/tests/sanitizer_allocator_testlib.cc	/^typedef LargeMmapAllocator<> SecondaryAllocator;$/;"	t	namespace:__anon59	file:
SecondaryAllocator	lib/tsan/rtl/tsan_rtl.h	/^typedef LargeMmapAllocator<MapUnmapCallback> SecondaryAllocator;$/;"	t	namespace:__tsan
SecondaryAllocatorName	lib/sanitizer_common/sanitizer_allocator.cc	/^const char *SecondaryAllocatorName = "LargeMmapAllocator";$/;"	m	namespace:__sanitizer	file:
SecondaryInternalAllocator	lib/sanitizer_common/sanitizer_allocator_internal.h	/^    SecondaryInternalAllocator;$/;"	t	namespace:__sanitizer
SecondaryT	lib/scudo/scudo_allocator.h	/^typedef LargeMmapAllocator SecondaryT;$/;"	t	namespace:__scudo
SeedLargeBuffer	test/fuzzer/BufferOverflowOnInput.cpp	/^static volatile bool SeedLargeBuffer;$/;"	v	file:
SeenOpenBrace	lib/sanitizer_common/scripts/cpplint.py	/^  def SeenOpenBrace(self):$/;"	m	class:_NestingState
Segment	lib/xray/xray_segmented_array.h	/^  struct Segment : SegmentBase {$/;"	s	class:__xray::Array
SegmentBase	lib/xray/xray_segmented_array.h	/^  struct SegmentBase {$/;"	s	class:__xray::Array
SegmentSize	lib/xray/xray_segmented_array.h	/^  static constexpr size_t SegmentSize =$/;"	m	class:__xray::Array
SegvCallback	lib/sanitizer_common/tests/sanitizer_stoptheworld_test.cc	/^static void SegvCallback(const SuspendedThreadsList &suspended_threads_list,$/;"	f	namespace:__sanitizer
Self	test/asan/TestCases/use-after-scope-temp2.cc	/^  const IntHolder& Self() const {$/;"	f	struct:IntHolder
SemName	lib/fuzzer/FuzzerShmemPosix.cpp	/^std::string SharedMemoryRegion::SemName(const char *Name, int Idx) {$/;"	f	class:fuzzer::SharedMemoryRegion
SemName	lib/fuzzer/FuzzerShmemWindows.cpp	/^std::string SharedMemoryRegion::SemName(const char *Name, int Idx) {$/;"	f	class:fuzzer::SharedMemoryRegion
Semaphore	lib/fuzzer/FuzzerShmem.h	/^  void *Semaphore[2];$/;"	m	class:fuzzer::SharedMemoryRegion
SendCommand	lib/sanitizer_common/sanitizer_symbolizer_libcdep.cc	/^const char *SymbolizerProcess::SendCommand(const char *command) {$/;"	f	class:__sanitizer::SymbolizerProcess
SendCommand	lib/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc	/^  const char *SendCommand(const char *module_name, uptr module_offset) {$/;"	f	class:__sanitizer::Addr2LinePool	file:
SendCommandImpl	lib/sanitizer_common/sanitizer_symbolizer_libcdep.cc	/^const char *SymbolizerProcess::SendCommandImpl(const char *command) {$/;"	f	class:__sanitizer::SymbolizerProcess
SentinelSegment	lib/xray/xray_segmented_array.h	/^  static SegmentBase SentinelSegment;$/;"	m	class:__xray::Array
Separator	test/fuzzer/CustomCrossOverTest.cpp	/^static const char *Separator = "-########-";$/;"	v	file:
Set	lib/fuzzer/FuzzerDictionary.h	/^  void Set(const uint8_t *B, uint8_t S) {$/;"	f	class:fuzzer::FixedWord
Set	lib/sanitizer_common/sanitizer_allocator_stats.h	/^  void Set(AllocatorStat i, uptr v) {$/;"	f	class:AllocatorStats
SetAbortMessage	lib/sanitizer_common/sanitizer_common.h	/^INLINE void SetAbortMessage(const char *) {}$/;"	f	namespace:__sanitizer
SetAbortMessage	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^void SetAbortMessage(const char *str) {$/;"	f	namespace:__sanitizer
SetAbortMessage	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^void SetAbortMessage(const char *str) {}$/;"	f	namespace:__sanitizer
SetAddr0AndSizeLog	lib/tsan/rtl/tsan_rtl.h	/^  void SetAddr0AndSizeLog(u64 addr0, unsigned kAccessSizeLog) {$/;"	f	class:__tsan::Shadow
SetAddressSpaceUnlimited	lib/sanitizer_common/sanitizer_posix_libcdep.cc	/^void SetAddressSpaceUnlimited() {$/;"	f	namespace:__sanitizer
SetAddressSpaceUnlimited	lib/sanitizer_common/sanitizer_win.cc	/^void SetAddressSpaceUnlimited() {$/;"	f	namespace:__sanitizer
SetAllocatorMayReturnNull	lib/sanitizer_common/sanitizer_allocator.cc	/^void SetAllocatorMayReturnNull(bool may_return_null) {$/;"	f	namespace:__sanitizer
SetAllocatorOutOfMemory	lib/sanitizer_common/sanitizer_allocator.cc	/^void SetAllocatorOutOfMemory() {$/;"	f	namespace:__sanitizer
SetAlternateSignalStack	lib/sanitizer_common/sanitizer_fuchsia.cc	/^void SetAlternateSignalStack() {}$/;"	f	namespace:__sanitizer
SetAlternateSignalStack	lib/sanitizer_common/sanitizer_posix_libcdep.cc	/^void SetAlternateSignalStack() {$/;"	f	namespace:__sanitizer
SetAlternateSignalStack	lib/sanitizer_common/sanitizer_rtems.cc	/^void SetAlternateSignalStack() {}$/;"	f	namespace:__sanitizer
SetAlternateSignalStack	lib/sanitizer_common/sanitizer_win.cc	/^void SetAlternateSignalStack() {$/;"	f	namespace:__sanitizer
SetAtomic	lib/tsan/rtl/tsan_rtl.h	/^  void SetAtomic(bool kIsAtomic) {$/;"	f	class:__tsan::Shadow
SetBytesForLabel	lib/fuzzer/dataflow/DataFlow.cpp	/^void SetBytesForLabel(dfsan_label L, char *Bytes) {$/;"	f
SetCanPoisonMemory	lib/asan/asan_poisoning.cc	/^void SetCanPoisonMemory(bool value) {$/;"	f	namespace:__asan
SetCheckFailedCallback	lib/sanitizer_common/sanitizer_termination.cc	/^void SetCheckFailedCallback(CheckFailedCallbackType callback) {$/;"	f	namespace:__sanitizer
SetCheckFailedCallback	lib/scudo/scudo_termination.cpp	/^void SetCheckFailedCallback(CheckFailedCallbackType callback) {}$/;"	f	namespace:__sanitizer
SetCommonFlagsDefaults	lib/sanitizer_common/sanitizer_flags.h	/^inline void SetCommonFlagsDefaults() {$/;"	f	namespace:__sanitizer
SetCorpus	lib/fuzzer/FuzzerMutate.h	/^  void SetCorpus(const InputCorpus *Corpus) { this->Corpus = Corpus; }$/;"	f	class:fuzzer::MutationDispatcher
SetCount	lib/tsan/rtl/tsan_rtl_report.cc	/^void ScopedReportBase::SetCount(int count) { rep_->count = count; }$/;"	f	class:__tsan::ScopedReportBase
SetCountingStyle	lib/sanitizer_common/scripts/cpplint.py	/^  def SetCountingStyle(self, counting_style):$/;"	m	class:_CppLintState
SetCreated	lib/sanitizer_common/sanitizer_thread_registry.cc	/^void ThreadContextBase::SetCreated(uptr _user_id, u64 _unique_id,$/;"	f	class:__sanitizer::ThreadContextBase
SetCurrentThread	lib/asan/asan_thread.cc	/^void SetCurrentThread(AsanThread *t) {$/;"	f	namespace:__asan
SetCurrentThread	lib/hwasan/hwasan_linux.cc	/^void SetCurrentThread(HwasanThread *t) {$/;"	f	namespace:__hwasan
SetCurrentThread	lib/lsan/lsan_common_mac.cc	/^void SetCurrentThread(u32 tid) { get_tls_val(true)->current_thread_id = tid; }$/;"	f	namespace:__lsan
SetCurrentThread	lib/lsan/lsan_linux.cc	/^void SetCurrentThread(u32 tid) { current_thread_tid = tid; }$/;"	f	namespace:__lsan
SetCurrentThread	lib/msan/msan_linux.cc	/^void SetCurrentThread(MsanThread *t) {$/;"	f	namespace:__msan
SetDead	lib/sanitizer_common/sanitizer_thread_registry.cc	/^void ThreadContextBase::SetDead() {$/;"	f	class:__sanitizer::ThreadContextBase
SetDefaults	lib/asan/asan_flags.cc	/^void Flags::SetDefaults() {$/;"	f	class:__asan::Flags
SetDefaults	lib/dfsan/dfsan.cc	/^void Flags::SetDefaults() {$/;"	f	class:Flags
SetDefaults	lib/hwasan/hwasan.cc	/^void Flags::SetDefaults() {$/;"	f	class:__hwasan::Flags
SetDefaults	lib/lsan/lsan_common.cc	/^void Flags::SetDefaults() {$/;"	f	class:__lsan::Flags
SetDefaults	lib/msan/msan.cc	/^void Flags::SetDefaults() {$/;"	f	class:__msan::Flags
SetDefaults	lib/sanitizer_common/sancov_flags.cc	/^void SancovFlags::SetDefaults() {$/;"	f	class:__sancov::SancovFlags
SetDefaults	lib/sanitizer_common/sanitizer_flags.cc	/^void CommonFlags::SetDefaults() {$/;"	f	class:__sanitizer::CommonFlags
SetDefaults	lib/tsan/rtl/tsan_flags.cc	/^void Flags::SetDefaults() {$/;"	f	class:__tsan::Flags
SetDefaults	lib/ubsan/ubsan_flags.cc	/^void Flags::SetDefaults() {$/;"	f	class:__ubsan::Flags
SetDestroyed	lib/sanitizer_common/sanitizer_thread_registry.cc	/^void ThreadContextBase::SetDestroyed() {$/;"	f	class:__sanitizer::ThreadContextBase
SetEnv	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^bool SetEnv(const char *name, const char *value) {$/;"	f	namespace:__sanitizer
SetErrnoOnNull	lib/sanitizer_common/sanitizer_allocator_checks.h	/^INLINE void *SetErrnoOnNull(void *ptr) {$/;"	f	namespace:__sanitizer
SetErrnoToENOMEM	lib/sanitizer_common/sanitizer_allocator_checks.cc	/^void SetErrnoToENOMEM() {$/;"	f	namespace:__sanitizer
SetFilters	lib/sanitizer_common/scripts/cpplint.py	/^  def SetFilters(self, filters):$/;"	m	class:_CppLintState
SetFinished	lib/sanitizer_common/sanitizer_thread_registry.cc	/^void ThreadContextBase::SetFinished() {$/;"	f	class:__sanitizer::ThreadContextBase
SetFlags	lib/tsan/rtl/tsan_sync.h	/^  void SetFlags(u32 f) {$/;"	f	struct:__tsan::SyncVar
SetFocusFunction	lib/fuzzer/FuzzerTracePC.cpp	/^void TracePC::SetFocusFunction(const std::string &FuncName) {$/;"	f	class:fuzzer::TracePC
SetFrom	lib/asan/asan_allocator.cc	/^void AllocatorOptions::SetFrom(const Flags *f, const CommonFlags *cf) {$/;"	f	class:__asan::AllocatorOptions
SetFromArray	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^    void SetFromArray(void *batch[], uptr count) {$/;"	f	struct:SizeClassAllocator32::TransferBatch
SetHistorySize	lib/tsan/rtl/tsan_rtl.h	/^  void SetHistorySize(int hs) {$/;"	f	class:__tsan::FastState
SetIgnoreBit	lib/tsan/rtl/tsan_rtl.h	/^  void SetIgnoreBit() { x_ |= kIgnoreBit; }$/;"	f	class:__tsan::FastState
SetJmp	lib/tsan/rtl/tsan_interceptors.cc	/^static void SetJmp(ThreadState *thr, uptr sp, uptr mangled_sp) {$/;"	f	file:
SetJoined	lib/sanitizer_common/sanitizer_thread_registry.cc	/^void ThreadContextBase::SetJoined(void *arg) {$/;"	f	class:__sanitizer::ThreadContextBase
SetList	lib/sanitizer_common/tests/sanitizer_list_test.cc	/^static void SetList(List *l, ListItem *x = 0,$/;"	f	namespace:__sanitizer
SetLowLevelAllocateCallback	lib/sanitizer_common/sanitizer_allocator.cc	/^void SetLowLevelAllocateCallback(LowLevelAllocateCallback callback) {$/;"	f	namespace:__sanitizer
SetLowLevelAllocateMinAlignment	lib/sanitizer_common/sanitizer_allocator.cc	/^void SetLowLevelAllocateMinAlignment(uptr alignment) {$/;"	f	namespace:__sanitizer
SetMallocContextSize	lib/asan/asan_stack.cc	/^void SetMallocContextSize(u32 size) {$/;"	f	namespace:__asan
SetMaxInputLen	lib/fuzzer/FuzzerLoop.cpp	/^void Fuzzer::SetMaxInputLen(size_t MaxInputLen) {$/;"	f	class:fuzzer::Fuzzer
SetMaxMutationLen	lib/fuzzer/FuzzerLoop.cpp	/^void Fuzzer::SetMaxMutationLen(size_t MaxMutationLen) {$/;"	f	class:fuzzer::Fuzzer
SetName	lib/sanitizer_common/sanitizer_thread_registry.cc	/^void ThreadContextBase::SetName(const char *new_name) {$/;"	f	class:__sanitizer::ThreadContextBase
SetOrigin	lib/msan/msan_poisoning.cc	/^void SetOrigin(const void *dst, uptr size, u32 origin) {$/;"	f	namespace:__msan
SetOriginIfPoisoned	lib/msan/msan_poisoning.cc	/^void SetOriginIfPoisoned(uptr addr, uptr src_shadow, uptr size,$/;"	f	namespace:__msan
SetOutputFormat	lib/sanitizer_common/scripts/cpplint.py	/^  def SetOutputFormat(self, output_format):$/;"	m	class:_CppLintState
SetPrintNewFuncs	lib/fuzzer/FuzzerTracePC.h	/^  void SetPrintNewFuncs(size_t P) { NumPrintNewFuncs = P; }$/;"	f	class:fuzzer::TracePC
SetPrintNewPCs	lib/fuzzer/FuzzerTracePC.h	/^  void SetPrintNewPCs(bool P) { DoPrintNewPCs = P; }$/;"	f	class:fuzzer::TracePC
SetPrintfAndReportCallback	lib/sanitizer_common/sanitizer_printf.cc	/^void SetPrintfAndReportCallback(void (*callback)(const char *)) {$/;"	f	namespace:__sanitizer
SetReleaseToOSIntervalMs	lib/sanitizer_common/sanitizer_allocator_combined.h	/^  void SetReleaseToOSIntervalMs(s32 release_to_os_interval_ms) {$/;"	f	class:CombinedAllocator
SetReleaseToOSIntervalMs	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^  void SetReleaseToOSIntervalMs(s32 release_to_os_interval_ms) {$/;"	f	class:SizeClassAllocator32
SetReleaseToOSIntervalMs	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  void SetReleaseToOSIntervalMs(s32 release_to_os_interval_ms) {$/;"	f	class:SizeClassAllocator64
SetReportPath	lib/sanitizer_common/sanitizer_file.cc	/^void ReportFile::SetReportPath(const char *path) {$/;"	f	class:__sanitizer::ReportFile
SetRssLimitExceeded	lib/asan/asan_allocator.cc	/^  void SetRssLimitExceeded(bool limit_exceeded) {$/;"	f	struct:__asan::Allocator
SetSEHFilter	lib/asan/asan_win_dynamic_runtime_thunk.cc	/^static int SetSEHFilter() { return __asan_set_seh_filter(); }$/;"	f	file:
SetSandboxingCallback	lib/sanitizer_common/sanitizer_common_libcdep.cc	/^void SetSandboxingCallback(void (*f)()) {$/;"	f	namespace:__sanitizer
SetShadow	lib/asan/asan_fake_stack.cc	/^ALWAYS_INLINE void SetShadow(uptr ptr, uptr size, uptr class_id, u64 magic) {$/;"	f	namespace:__asan
SetShadow	lib/msan/msan_poisoning.cc	/^void SetShadow(const void *ptr, uptr size, u8 value) {$/;"	f	namespace:__msan
SetShadowSize	lib/cfi/cfi.cc	/^void SetShadowSize(uptr size) {$/;"	f	namespace:__cfi
SetSigaction	lib/fuzzer/FuzzerUtilPosix.cpp	/^static void SetSigaction(int signum,$/;"	f	namespace:fuzzer
SetSigaction	lib/fuzzer/afl/afl_driver.cpp	/^static void SetSigaction(int signum,$/;"	f	file:
SetSignalHandler	lib/fuzzer/FuzzerUtilFuchsia.cpp	/^void SetSignalHandler(const FuzzingOptions &Options) {$/;"	f	namespace:fuzzer
SetSignalHandler	lib/fuzzer/FuzzerUtilPosix.cpp	/^void SetSignalHandler(const FuzzingOptions& Options) {$/;"	f	namespace:fuzzer
SetSignalHandler	lib/fuzzer/FuzzerUtilWindows.cpp	/^void SetSignalHandler(const FuzzingOptions& Options) {$/;"	f	namespace:fuzzer
SetSoftRssLimitExceededCallback	lib/sanitizer_common/sanitizer_common_libcdep.cc	/^void SetSoftRssLimitExceededCallback(void (*Callback)(bool exceeded)) {$/;"	f	namespace:__sanitizer
SetStackSizeLimitInBytes	lib/sanitizer_common/sanitizer_posix_libcdep.cc	/^void SetStackSizeLimitInBytes(uptr limit) {$/;"	f	namespace:__sanitizer
SetStackSizeLimitInBytes	lib/sanitizer_common/sanitizer_win.cc	/^void SetStackSizeLimitInBytes(uptr limit) {$/;"	f	namespace:__sanitizer
SetStarted	lib/sanitizer_common/sanitizer_thread_registry.cc	/^void ThreadContextBase::SetStarted(tid_t _os_id, bool _workerthread,$/;"	f	class:__sanitizer::ThreadContextBase
SetTLSFakeStack	lib/asan/asan_fake_stack.cc	/^void SetTLSFakeStack(FakeStack *fs) { }$/;"	f	namespace:__asan
SetTLSFakeStack	lib/asan/asan_fake_stack.cc	/^void SetTLSFakeStack(FakeStack *fs) {$/;"	f	namespace:__asan
SetThreadName	lib/asan/asan_interceptors.cc	/^void SetThreadName(const char *name) {$/;"	f	namespace:__asan
SetThreadName	lib/sanitizer_common/sanitizer_thread_registry.cc	/^void ThreadRegistry::SetThreadName(u32 tid, const char *name) {$/;"	f	class:__sanitizer::ThreadRegistry
SetThreadNameByUserId	lib/sanitizer_common/sanitizer_thread_registry.cc	/^void ThreadRegistry::SetThreadNameByUserId(uptr user_id, const char *name) {$/;"	f	class:__sanitizer::ThreadRegistry
SetThreadStackAndTls	lib/asan/asan_fuchsia.cc	/^void AsanThread::SetThreadStackAndTls(const AsanThread::InitOptions *options) {$/;"	f	class:__asan::AsanThread
SetThreadStackAndTls	lib/asan/asan_rtems.cc	/^void AsanThread::SetThreadStackAndTls(const AsanThread::InitOptions *options) {$/;"	f	class:__asan::AsanThread
SetThreadStackAndTls	lib/asan/asan_thread.cc	/^void AsanThread::SetThreadStackAndTls(const InitOptions *options) {$/;"	f	class:__asan::AsanThread
SetThreadStackAndTls	lib/hwasan/hwasan_thread.cc	/^void HwasanThread::SetThreadStackAndTls() {$/;"	f	class:__hwasan::HwasanThread
SetThreadStackAndTls	lib/msan/msan_thread.cc	/^void MsanThread::SetThreadStackAndTls() {$/;"	f	class:__msan::MsanThread
SetTimer	lib/fuzzer/FuzzerUtilPosix.cpp	/^void SetTimer(int Seconds) {$/;"	f	namespace:fuzzer
SetTimer	lib/fuzzer/FuzzerUtilWindows.cpp	/^  void SetTimer(int Seconds) {$/;"	f	class:fuzzer::TimerQ
SetUp	lib/sanitizer_common/tests/sanitizer_linux_test.cc	/^  virtual void SetUp() {$/;"	f	class:__sanitizer::ThreadListerTest
SetUp	lib/sanitizer_common/tests/sanitizer_stacktrace_test.cc	/^void FastUnwindTest::SetUp() {$/;"	f	class:__sanitizer::FastUnwindTest
SetUseCounters	lib/fuzzer/FuzzerTracePC.h	/^  void SetUseCounters(bool UC) { UseCounters = UC; }$/;"	f	class:fuzzer::TracePC
SetUseValueProfileMask	lib/fuzzer/FuzzerTracePC.h	/^  void SetUseValueProfileMask(uint32_t VPMask) { UseValueProfileMask = VPMask; }$/;"	f	class:fuzzer::TracePC
SetUserDieCallback	lib/sanitizer_common/sanitizer_termination.cc	/^void SetUserDieCallback(DieCallbackType callback) {$/;"	f	namespace:__sanitizer
SetUserDieCallback	lib/scudo/scudo_termination.cpp	/^void SetUserDieCallback(DieCallbackType Callback) {}$/;"	f	namespace:__sanitizer
SetVerboseLevel	lib/sanitizer_common/scripts/cpplint.py	/^  def SetVerboseLevel(self, level):$/;"	m	class:_CppLintState
SetVerbosity	lib/sanitizer_common/sanitizer_common.h	/^INLINE void SetVerbosity(int verbosity) {$/;"	f	namespace:__sanitizer
SetWrite	lib/tsan/rtl/tsan_rtl.h	/^  void SetWrite(unsigned kAccessIsWrite) {$/;"	f	class:__tsan::Shadow
Setup	lib/sanitizer_common/sanitizer_coverage_fuchsia.cc	/^  u32 Setup(u32 num_guards) {$/;"	f	class:__sancov::__anon63::final	file:
Sha1	lib/fuzzer/FuzzerCorpus.h	/^  uint8_t Sha1[kSHA1NumBytes];  \/\/ Checksum.$/;"	m	struct:fuzzer::InputInfo
Sha1ToString	lib/fuzzer/FuzzerSHA1.cpp	/^std::string Sha1ToString(const uint8_t Sha1[kSHA1NumBytes]) {$/;"	f	namespace:fuzzer
Shadow	lib/tsan/rtl/tsan_rtl.h	/^  explicit Shadow(const FastState &s)$/;"	f	class:__tsan::Shadow
Shadow	lib/tsan/rtl/tsan_rtl.h	/^  explicit Shadow(u64 x)$/;"	f	class:__tsan::Shadow
Shadow	lib/tsan/rtl/tsan_rtl.h	/^class Shadow : public FastState {$/;"	c	namespace:__tsan
ShadowAccessedVal	lib/esan/working_set.cpp	/^static const byte ShadowAccessedVal =$/;"	m	namespace:__esan	file:
ShadowAddr	lib/dfsan/dfsan_platform.h	/^uptr ShadowAddr() {$/;"	f	namespace:__dfsan
ShadowAddressDescription	lib/asan/asan_descriptions.h	/^struct ShadowAddressDescription {$/;"	s	namespace:__asan
ShadowBeg	lib/tsan/rtl/tsan_platform.h	/^uptr ShadowBeg(void) {$/;"	f	namespace:__tsan
ShadowBounds	lib/sanitizer_common/sanitizer_fuchsia.cc	/^sanitizer_shadow_bounds_t ShadowBounds;$/;"	m	namespace:__sanitizer	file:
ShadowBuilder	lib/cfi/cfi.cc	/^class ShadowBuilder {$/;"	c	namespace:__cfi	file:
ShadowByte	lib/asan/asan_descriptions.h	/^  const char *ShadowByte(u8 byte) {$/;"	f	class:__asan::Decorator
ShadowEnd	lib/tsan/rtl/tsan_platform.h	/^uptr ShadowEnd(void) {$/;"	f	namespace:__tsan
ShadowExceptionHandler	lib/asan/asan_win.cc	/^ShadowExceptionHandler(PEXCEPTION_POINTERS exception_pointers) {$/;"	f	namespace:__asan
ShadowMapping	lib/esan/esan_shadow.h	/^class ShadowMapping {$/;"	c	namespace:__esan
ShadowMask	lib/dfsan/dfsan_platform.h	/^uptr ShadowMask() {$/;"	f	namespace:__dfsan
ShadowMemoryMask40	lib/esan/esan_shadow.h	/^  struct ShadowMemoryMask40 {$/;"	s	class:__esan::ShadowMapping
ShadowMemoryMask47	lib/esan/esan_shadow.h	/^  struct ShadowMemoryMask47 {$/;"	s	class:__esan::ShadowMapping
ShadowMergedWithPrev	lib/esan/esan_shadow.h	/^  bool ShadowMergedWithPrev;$/;"	m	struct:__esan::ApplicationRegion
ShadowNames	lib/asan/asan_descriptions.h	/^static const char *const ShadowNames[] = {"low shadow", "shadow gap",$/;"	m	namespace:__asan
ShadowScale	lib/esan/esan.cpp	/^static const uptr ShadowScale[] = {$/;"	m	namespace:__esan	file:
ShadowSegmentEndpoint	lib/asan/asan_poisoning.cc	/^  explicit ShadowSegmentEndpoint(uptr address) {$/;"	f	struct:__asan::ShadowSegmentEndpoint
ShadowSegmentEndpoint	lib/asan/asan_poisoning.cc	/^struct ShadowSegmentEndpoint {$/;"	s	namespace:__asan	file:
ShadowStack	lib/xray/xray_function_call_trie.h	/^  ShadowStackArray ShadowStack;$/;"	m	class:__xray::FunctionCallTrie
ShadowStackAllocator	lib/xray/xray_function_call_trie.h	/^    ShadowStackAllocatorType *ShadowStackAllocator = nullptr;$/;"	m	struct:__xray::FunctionCallTrie::Allocators
ShadowStackEntry	lib/xray/tests/unit/segmented_array_test.cc	/^  ShadowStackEntry(uint64_t T, uint64_t *N) : EntryTSC(T), NodePtr(N) {}$/;"	f	struct:__xray::__anon23::ShadowStackEntry
ShadowStackEntry	lib/xray/tests/unit/segmented_array_test.cc	/^struct ShadowStackEntry {$/;"	s	namespace:__xray::__anon23	file:
ShadowStackEntry	lib/xray/xray_function_call_trie.h	/^    ShadowStackEntry(uint64_t T, Node *N) : EntryTSC{T}, NodePtr{N} {}$/;"	f	struct:__xray::FunctionCallTrie::ShadowStackEntry
ShadowStackEntry	lib/xray/xray_function_call_trie.h	/^  struct ShadowStackEntry {$/;"	s	class:__xray::FunctionCallTrie
ShadowToMem	lib/tsan/rtl/tsan_platform.h	/^uptr ShadowToMem(uptr s) {$/;"	f	namespace:__tsan
ShadowToMemImpl	lib/tsan/rtl/tsan_platform.h	/^uptr ShadowToMemImpl(uptr s) {$/;"	f	namespace:__tsan
ShadowValue	lib/cfi/cfi.cc	/^  explicit ShadowValue(uptr addr, uint16_t v) : addr(addr), v(v) {}$/;"	f	class:__cfi::ShadowValue	file:
ShadowValue	lib/cfi/cfi.cc	/^class ShadowValue {$/;"	c	namespace:__cfi	file:
SharedInitCode	lib/asan/asan_allocator.cc	/^  void SharedInitCode(const AllocatorOptions &options) {$/;"	f	struct:__asan::Allocator
SharedMemoryRegion	lib/fuzzer/FuzzerShmem.h	/^class SharedMemoryRegion {$/;"	c	namespace:fuzzer
SharedPrintfCode	lib/sanitizer_common/sanitizer_printf.cc	/^static void NOINLINE SharedPrintfCode(bool append_pid, const char *format,$/;"	f	namespace:__sanitizer
SharedPrintfCodeNoBuffer	lib/sanitizer_common/sanitizer_printf.cc	/^static void NOINLINE SharedPrintfCodeNoBuffer(bool append_pid,$/;"	f	namespace:__sanitizer
ShiftOutOfBoundsData	lib/ubsan/ubsan_handlers.h	/^struct ShiftOutOfBoundsData {$/;"	s	namespace:__ubsan
ShortSwitch	test/fuzzer/SwitchTest.cpp	/^bool ShortSwitch(const uint8_t *Data, size_t Size) {$/;"	f
ShortestPath	lib/sanitizer_common/tests/sanitizer_bvgraph_test.cc	/^void ShortestPath() {$/;"	f
ShouldLogAfterPrintf	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^static bool ShouldLogAfterPrintf() { return true; }$/;"	f	namespace:__sanitizer
ShouldLogAfterPrintf	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^static bool ShouldLogAfterPrintf() {$/;"	f	namespace:__sanitizer
ShowStatsAndAbort	lib/asan/asan_rtl.cc	/^void ShowStatsAndAbort() {$/;"	f	namespace:__asan
Shrink	lib/fuzzer/FuzzerOptions.h	/^  bool Shrink = false;$/;"	m	struct:fuzzer::FuzzingOptions
ShuffleAtStartUp	lib/fuzzer/FuzzerOptions.h	/^  bool ShuffleAtStartUp = true;$/;"	m	struct:fuzzer::FuzzingOptions
SidelineExit	lib/esan/esan_sideline.h	/^  atomic_uintptr_t SidelineExit;$/;"	m	class:__esan::SidelineThread
SidelineFunc	lib/esan/esan_sideline.h	/^typedef void (*SidelineFunc)(void *Arg);$/;"	t	namespace:__esan
SidelineId	lib/esan/esan_sideline.h	/^  uptr SidelineId;$/;"	m	class:__esan::SidelineThread
SidelineIdUninitialized	lib/esan/esan_sideline_linux.cpp	/^static const uptr SidelineIdUninitialized = 1;$/;"	m	namespace:__esan	file:
SidelineStackSize	lib/esan/esan_sideline_linux.cpp	/^static const int SidelineStackSize = 4*1024;$/;"	m	namespace:__esan	file:
SidelineThread	lib/esan/esan_sideline.h	/^  SidelineThread() {}$/;"	f	class:__esan::SidelineThread
SidelineThread	lib/esan/esan_sideline.h	/^class SidelineThread {$/;"	c	namespace:__esan
SigAction	test/asan/TestCases/Linux/preinstalled_signal.cc	/^void SigAction(int, siginfo_t *, void *) { handler = "TestSigAction"; }$/;"	f
SigAltStackSize	lib/esan/esan_sideline_linux.cpp	/^static const int SigAltStackSize = 4*1024;$/;"	m	namespace:__esan	file:
SigCtx	lib/tsan/rtl/tsan_interceptors.cc	/^static ThreadSignalContext *SigCtx(ThreadState *thr) {$/;"	f	file:
SigHandler	test/asan/TestCases/Linux/preinstalled_signal.cc	/^void SigHandler(int signum) { handler = "TestSigHandler"; }$/;"	f
SigLongJmpFunc1	lib/asan/tests/asan_test.cc	/^NOINLINE void SigLongJmpFunc1(sigjmp_buf buf) {$/;"	f
SigTrap	lib/hwasan/hwasan.cc	/^static void SigTrap(uptr p) {$/;"	f	file:
Sigaction	test/asan/TestCases/Linux/uar_signals.cc	/^typedef void (*Sigaction)(int, siginfo_t *, void *);$/;"	t	file:
SigactionHandler	lib/msan/tests/msan_test.cc	/^void SigactionHandler(int signo, siginfo_t* si, void* uc) {$/;"	f	namespace:__anon6
SigactionHandler	test/esan/TestCases/workingset-signal-posix.cpp	/^static void SigactionHandler(int Sig, siginfo_t *Info, void *Ctx) {$/;"	f	file:
SignalAction	lib/msan/msan_interceptors.cc	/^static void SignalAction(int signo, void *si, void *uc) {$/;"	f	file:
SignalCond	lib/msan/tests/msan_test.cc	/^void *SignalCond(void *param) {$/;"	f	namespace:__anon7
SignalCondArg	lib/msan/tests/msan_test.cc	/^struct SignalCondArg {$/;"	s	namespace:__anon7	file:
SignalContext	lib/sanitizer_common/sanitizer_common.h	/^  SignalContext(void *siginfo, void *context)$/;"	f	struct:__sanitizer::SignalContext
SignalContext	lib/sanitizer_common/sanitizer_common.h	/^struct SignalContext {$/;"	s	namespace:__sanitizer
SignalDesc	lib/tsan/rtl/tsan_interceptors.cc	/^struct SignalDesc {$/;"	s	namespace:__tsan	file:
SignalHandler	lib/msan/msan_interceptors.cc	/^static void SignalHandler(int signo) {$/;"	f	file:
SignalHandler	test/asan/TestCases/Linux/uar_signals.cc	/^void SignalHandler(int, siginfo_t*, void*) {$/;"	f
SignalHandler	test/esan/TestCases/workingset-signal-posix.cpp	/^static void SignalHandler(int Sig) {$/;"	f	file:
SignalHandler	test/msan/chained_origin_with_signals.cc	/^void SignalHandler(int signo) {$/;"	f
SignalHandler	test/msan/signal_stress_test.cc	/^void SignalHandler(int signo) {$/;"	f
SignalHandlerScope	lib/msan/msan_interceptors.cc	/^  SignalHandlerScope() {$/;"	f	class:SignalHandlerScope
SignalHandlerScope	lib/msan/msan_interceptors.cc	/^class SignalHandlerScope {$/;"	c	file:
SignalHandlerType	lib/sanitizer_common/sanitizer_common.h	/^typedef void (*SignalHandlerType)(int, void *, void *);$/;"	t	namespace:__sanitizer
SignalMutex	lib/fuzzer/FuzzerUtilDarwin.cpp	/^static std::mutex SignalMutex;$/;"	m	namespace:fuzzer	file:
SignalSafeGetOrAllocate	lib/tsan/rtl/tsan_platform_mac.cc	/^static void *SignalSafeGetOrAllocate(uptr *dst, uptr size) {$/;"	f	namespace:__tsan
SignalUnsafeCall	lib/tsan/rtl/tsan_mman.cc	/^static void SignalUnsafeCall(ThreadState *thr, uptr pc) {$/;"	f	namespace:__tsan
Simple	test/fuzzer/UseAfterDtor.cpp	/^  Simple() {$/;"	f	struct:Simple
Simple	test/fuzzer/UseAfterDtor.cpp	/^struct Simple {$/;"	s	file:
Simple	test/msan/dtor-bit-fields.cc	/^struct Simple {$/;"	s	file:
Simple	test/msan/dtor-member.cc	/^  Simple() {$/;"	f	struct:Simple
Simple	test/msan/dtor-member.cc	/^struct Simple {$/;"	s	file:
Simple	test/msan/use-after-dtor.cc	/^  Simple() {$/;"	f	struct:Simple
Simple	test/msan/use-after-dtor.cc	/^struct Simple {$/;"	s	file:
SimpleBugOnSTack	lib/asan/tests/asan_test.cc	/^void *SimpleBugOnSTack(void *x = 0) {$/;"	f
SimpleFastHash	lib/fuzzer/FuzzerUtil.cpp	/^size_t SimpleFastHash(const uint8_t *Data, size_t Size) {$/;"	f	namespace:fuzzer
SimpleGraph	lib/sanitizer_common/tests/sanitizer_bvgraph_test.cc	/^class SimpleGraph {$/;"	c	file:
SimpleSink	test/fuzzer/UseAfterDtor.cpp	/^Simple *volatile SimpleSink;$/;"	v
SimpleSyncClock	lib/tsan/tests/unit/tsan_clock_test.cc	/^  SimpleSyncClock() {$/;"	f	struct:__tsan::SimpleSyncClock
SimpleSyncClock	lib/tsan/tests/unit/tsan_clock_test.cc	/^struct SimpleSyncClock {$/;"	s	namespace:__tsan	file:
SimpleThreadClock	lib/tsan/tests/unit/tsan_clock_test.cc	/^  explicit SimpleThreadClock(unsigned tid) {$/;"	f	struct:__tsan::SimpleThreadClock
SimpleThreadClock	lib/tsan/tests/unit/tsan_clock_test.cc	/^struct SimpleThreadClock {$/;"	s	namespace:__tsan	file:
SimpleThread_threadfn	lib/msan/tests/msan_test.cc	/^static void *SimpleThread_threadfn(void* data) {$/;"	f	file:
Sink	test/fuzzer/BadStrcmpTest.cpp	/^static volatile int Sink;$/;"	v	file:
Sink	test/fuzzer/CustomMutatorTest.cpp	/^static volatile int Sink;$/;"	v	file:
Sink	test/fuzzer/CxxStringEqTest.cpp	/^static volatile int Sink;$/;"	v	file:
Sink	test/fuzzer/DeepRecursionTest.cpp	/^static volatile int Sink;$/;"	v	file:
Sink	test/fuzzer/DivTest.cpp	/^static volatile int Sink;$/;"	v	file:
Sink	test/fuzzer/ImplicitIntegerTruncationTest.cpp	/^static volatile int Sink;$/;"	v	file:
Sink	test/fuzzer/LeakTest.cpp	/^static void * volatile Sink;$/;"	v	file:
Sink	test/fuzzer/LeakTimeoutTest.cpp	/^static volatile int *Sink;$/;"	v	file:
Sink	test/fuzzer/LoadTest.cpp	/^static volatile int Sink;$/;"	v	file:
Sink	test/fuzzer/NullDerefTest.cpp	/^static volatile int Sink;$/;"	v	file:
Sink	test/fuzzer/ShrinkControlFlowSimpleTest.cpp	/^static volatile int Sink;$/;"	v	file:
Sink	test/fuzzer/ShrinkControlFlowTest.cpp	/^static volatile int Sink;$/;"	v	file:
Sink	test/fuzzer/ShrinkValueProfileTest.cpp	/^static volatile uint32_t Sink;$/;"	v	file:
Sink	test/fuzzer/SignedIntOverflowTest.cpp	/^static volatile int Sink;$/;"	v	file:
Sink	test/fuzzer/SimpleTest.cpp	/^static volatile int Sink;$/;"	v	file:
Sink	test/fuzzer/SimpleTestStdio.cpp	/^static volatile int Sink;$/;"	v	file:
Sink	test/fuzzer/StrncmpOOBTest.cpp	/^static volatile int Sink;$/;"	v	file:
Sink	test/fuzzer/SwitchTest.cpp	/^static volatile int Sink;$/;"	v	file:
Sink	test/fuzzer/SymbolizeDeadlock.cpp	/^volatile unsigned Sink = 0;$/;"	v
Sink	test/fuzzer/ThreadedLeakTest.cpp	/^static int * volatile Sink;$/;"	v	file:
Sink	test/fuzzer/TimeoutTest.cpp	/^static volatile int Sink;$/;"	v	file:
Sink	test/fuzzer/UninitializedStrlen.cpp	/^volatile size_t Sink;$/;"	v
SinkPtr	test/fuzzer/OneHugeAllocTest.cpp	/^static volatile char *SinkPtr;$/;"	v	file:
SinkPtr	test/fuzzer/OutOfMemorySingleLargeMallocTest.cpp	/^static volatile char *SinkPtr;$/;"	v	file:
SinkPtr	test/fuzzer/OutOfMemoryTest.cpp	/^static volatile char *SinkPtr;$/;"	v	file:
SiteCountArray	lib/profile/InstrProfilingValue.c	/^  uint8_t **SiteCountArray;$/;"	m	struct:ValueProfRuntimeRecord	file:
Size	include/xray/xray_log_interface.h	/^  size_t Size;$/;"	m	struct:XRayBuffer
Size	lib/esan/cache_frag.cpp	/^  u32 Size;$/;"	m	struct:__esan::StructInfo	file:
Size	lib/fuzzer/FuzzerDictionary.h	/^  size_t Size = 0;$/;"	m	class:fuzzer::Dictionary
Size	lib/fuzzer/FuzzerDictionary.h	/^  uint8_t Size = 0;$/;"	m	class:fuzzer::FixedWord
Size	lib/fuzzer/FuzzerIO.h	/^  size_t Size;$/;"	m	struct:fuzzer::SizedFile
Size	lib/fuzzer/FuzzerMerge.h	/^  size_t Size = 0;$/;"	m	struct:fuzzer::MergeFileInfo
Size	lib/sanitizer_common/sanitizer_allocator_size_class_map.h	/^  static uptr Size(uptr class_id) {$/;"	f	class:SizeClassMap
Size	lib/sanitizer_common/sanitizer_quarantine.h	/^  uptr Size() const {$/;"	f	class:__sanitizer::QuarantineCache
Size	lib/sanitizer_common/sanitizer_vector.h	/^  uptr Size() const {$/;"	f	class:__sanitizer::Vector
Size	lib/scudo/scudo_allocator_secondary.h	/^    uptr Size;$/;"	m	struct:LargeChunk::Header
Size	lib/tsan/rtl/tsan_ignoreset.cc	/^uptr IgnoreSet::Size() const {$/;"	f	class:__tsan::IgnoreSet
Size	lib/tsan/rtl/tsan_mutexset.cc	/^uptr MutexSet::Size() const {$/;"	f	class:__tsan::MutexSet
Size	lib/tsan/rtl/tsan_mutexset.h	/^uptr MutexSet::Size() const { return 0; }$/;"	f	class:__tsan::MutexSet
Size	lib/xray/tests/unit/fdr_logging_test.cc	/^  size_t Size = 0;$/;"	m	struct:__xray::__anon25::ScopedFileCloserAndDeleter	file:
Size	lib/xray/xray_allocator.h	/^    static constexpr auto Size = nearest_boundary(N, kCacheLineSize);$/;"	m	struct:__xray::Allocator::Block
Size	lib/xray/xray_buffer_queue.h	/^    size_t Size = 0;$/;"	m	struct:__xray::BufferQueue::Buffer
Size	lib/xray/xray_profile_collector.cc	/^  size_t Size;$/;"	m	struct:__xray::profileCollectorService::__anon27::ProfileBuffer	file:
Size	lib/xray/xray_segmented_array.h	/^                              Size(O.Size) {$/;"	f	class:__xray::Array
Size	lib/xray/xray_segmented_array.h	/^    size_t Size = 0;$/;"	m	class:__xray::Array::Iterator
Size	lib/xray/xray_segmented_array.h	/^  size_t Size = 0;$/;"	m	class:__xray::Array
SizeAdd	lib/sanitizer_common/sanitizer_quarantine.h	/^  void SizeAdd(uptr add) {$/;"	f	class:__sanitizer::QuarantineCache
SizeClassAllocator32	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^class SizeClassAllocator32 {$/;"	c
SizeClassAllocator32FlagMasks	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^struct SizeClassAllocator32FlagMasks {  \/\/  Bit masks.$/;"	s
SizeClassAllocator32LocalCache	lib/sanitizer_common/sanitizer_allocator_local_cache.h	/^struct SizeClassAllocator32LocalCache {$/;"	s
SizeClassAllocator64	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^class SizeClassAllocator64 {$/;"	c
SizeClassAllocator64FlagMasks	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^struct SizeClassAllocator64FlagMasks {  \/\/  Bit masks.$/;"	s
SizeClassAllocator64LocalCache	lib/sanitizer_common/sanitizer_allocator_local_cache.h	/^struct SizeClassAllocator64LocalCache {$/;"	s
SizeClassAllocatorGetBlockBeginStress	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^void SizeClassAllocatorGetBlockBeginStress(u64 TotalSize) {$/;"	f
SizeClassAllocatorLocalCache	lib/sanitizer_common/sanitizer_allocator_local_cache.h	/^struct SizeClassAllocatorLocalCache$/;"	s
SizeClassAllocatorMetadataStress	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^void SizeClassAllocatorMetadataStress() {$/;"	f
SizeClassMap	lib/asan/asan_allocator.h	/^  typedef __asan::SizeClassMap SizeClassMap;$/;"	t	struct:__asan::AP32
SizeClassMap	lib/asan/asan_allocator.h	/^  typedef __asan::SizeClassMap SizeClassMap;$/;"	t	struct:__asan::AP64
SizeClassMap	lib/asan/asan_allocator.h	/^typedef CompactSizeClassMap SizeClassMap;$/;"	t	namespace:__asan
SizeClassMap	lib/asan/asan_allocator.h	/^typedef DefaultSizeClassMap SizeClassMap;$/;"	t	namespace:__asan
SizeClassMap	lib/asan/asan_allocator.h	/^typedef VeryCompactSizeClassMap SizeClassMap;$/;"	t	namespace:__asan
SizeClassMap	lib/hwasan/hwasan_allocator.cc	/^  typedef __sanitizer::CompactSizeClassMap SizeClassMap;$/;"	t	struct:__hwasan::AP32	file:
SizeClassMap	lib/lsan/lsan_allocator.h	/^  typedef DefaultSizeClassMap SizeClassMap;$/;"	t	struct:__lsan::AP64
SizeClassMap	lib/lsan/lsan_allocator.h	/^  typedef __sanitizer::CompactSizeClassMap SizeClassMap;$/;"	t	struct:__lsan::AP32
SizeClassMap	lib/msan/msan_allocator.cc	/^    typedef DefaultSizeClassMap SizeClassMap;$/;"	t	struct:__msan::AP64	file:
SizeClassMap	lib/msan/msan_allocator.cc	/^    typedef __sanitizer::CompactSizeClassMap SizeClassMap;$/;"	t	struct:__msan::AP32	file:
SizeClassMap	lib/sanitizer_common/sanitizer_allocator_internal.h	/^  typedef InternalSizeClassMap SizeClassMap;$/;"	t	struct:__sanitizer::AP32
SizeClassMap	lib/sanitizer_common/sanitizer_allocator_local_cache.h	/^  typedef typename Allocator::SizeClassMapT SizeClassMap;$/;"	t	struct:SizeClassAllocator32LocalCache
SizeClassMap	lib/sanitizer_common/sanitizer_allocator_local_cache.h	/^  typedef typename Allocator::SizeClassMapT SizeClassMap;$/;"	t	struct:SizeClassAllocator64LocalCache
SizeClassMap	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^  typedef typename Params::SizeClassMap SizeClassMap;$/;"	t	class:SizeClassAllocator32
SizeClassMap	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  typedef typename Params::SizeClassMap SizeClassMap;$/;"	t	class:SizeClassAllocator64
SizeClassMap	lib/sanitizer_common/sanitizer_allocator_size_class_map.h	/^class SizeClassMap {$/;"	c
SizeClassMap	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  typedef ::SizeClassMap SizeClassMap;$/;"	t	struct:AP64	file:
SizeClassMap	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  typedef ::SizeClassMap SizeClassMap;$/;"	t	struct:AP64Dyn	file:
SizeClassMap	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  typedef ::SizeClassMap SizeClassMap;$/;"	t	struct:AP64WithCallback	file:
SizeClassMap	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  typedef CompactSizeClassMap SizeClassMap;$/;"	t	struct:AP32Compact	file:
SizeClassMap	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  typedef CompactSizeClassMap SizeClassMap;$/;"	t	struct:AP32WithCallback	file:
SizeClassMap	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  typedef CompactSizeClassMap SizeClassMap;$/;"	t	struct:AP64Compact	file:
SizeClassMap	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  typedef DefaultSizeClassMap SizeClassMap;$/;"	t	struct:AP32SeparateBatches	file:
SizeClassMap	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  typedef SpecialSizeClassMap SizeClassMap;$/;"	t	struct:AP64_SpecialSizeClassMap	file:
SizeClassMap	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  typedef VeryCompactSizeClassMap SizeClassMap;$/;"	t	struct:AP64VeryCompact	file:
SizeClassMap	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^typedef DefaultSizeClassMap SizeClassMap;$/;"	t	file:
SizeClassMap	lib/sanitizer_common/tests/sanitizer_allocator_testlib.cc	/^  typedef CompactSizeClassMap SizeClassMap;$/;"	t	struct:__AP64	file:
SizeClassMap	lib/scudo/scudo_allocator.h	/^  typedef __scudo::SizeClassMap SizeClassMap;$/;"	t	struct:__scudo::AP64
SizeClassMap	lib/scudo/scudo_platform.h	/^typedef SIZE_CLASS_MAP_TYPE SizeClassMap;$/;"	t	namespace:__scudo
SizeClassMap	lib/tsan/rtl/tsan_rtl.h	/^  typedef DefaultSizeClassMap SizeClassMap;$/;"	t	struct:__tsan::AP64
SizeClassMap	lib/tsan/rtl/tsan_rtl.h	/^  typedef __sanitizer::CompactSizeClassMap SizeClassMap;$/;"	t	struct:__tsan::AP32
SizeClassMapT	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^  typedef SizeClassMap SizeClassMapT;$/;"	t	class:SizeClassAllocator32
SizeClassMapT	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  typedef SizeClassMap SizeClassMapT;$/;"	t	class:SizeClassAllocator64
SizeInBits	lib/fuzzer/FuzzerValueBitMap.h	/^  size_t SizeInBits() const { return kMapSizeInBits; }$/;"	f	struct:fuzzer::ValueBitMap
SizeInBytes	lib/fuzzer/FuzzerCorpus.h	/^  size_t SizeInBytes() const {$/;"	f	class:fuzzer::InputCorpus
SizeLog	lib/tsan/rtl/tsan_interface_atomic.cc	/^static int SizeLog() {$/;"	f	file:
SizeOrUnusedBytes	lib/scudo/scudo_allocator.h	/^  u64 SizeOrUnusedBytes : 20;  \/\/ Size for Primary backed allocations, amount of$/;"	m	struct:__scudo::UnpackedHeader
SizePerFreq	lib/esan/working_set.cpp	/^CircularBuffer<u32> SizePerFreq[NumFreq];$/;"	m	namespace:__esan	file:
SizeRequiredForFlags	lib/asan/asan_fake_stack.h	/^  static uptr SizeRequiredForFlags(uptr stack_size_log) {$/;"	f	class:__asan::FakeStack
SizeRequiredForFrames	lib/asan/asan_fake_stack.h	/^  static uptr SizeRequiredForFrames(uptr stack_size_log) {$/;"	f	class:__asan::FakeStack
SizeSub	lib/sanitizer_common/sanitizer_quarantine.h	/^  void SizeSub(uptr sub) {$/;"	f	class:__sanitizer::QuarantineCache
SizedFile	lib/fuzzer/FuzzerIO.h	/^struct SizedFile {$/;"	s	namespace:fuzzer
SizedStackTest	lib/asan/tests/asan_test.cc	/^NOINLINE void SizedStackTest() {$/;"	f
SkipTsanInternalFrames	lib/tsan/rtl/tsan_report.cc	/^static SymbolizedStack *SkipTsanInternalFrames(SymbolizedStack *frames) {$/;"	f	namespace:__tsan
Sleds	lib/xray/xray_interface_internal.h	/^  const XRaySledEntry *Sleds;$/;"	m	struct:__xray::XRaySledMap
SledsIndex	lib/xray/xray_interface_internal.h	/^  const XRayFunctionSledIndex *SledsIndex;$/;"	m	struct:__xray::XRaySledMap
Sleep	lib/tsan/rtl/tsan_report.cc	/^  const char *Sleep()   { return Yellow(); }$/;"	f	class:__tsan::Decorator
SleepForMillis	lib/sanitizer_common/sanitizer_fuchsia.cc	/^void SleepForMillis(int millis) { internal_nanosleep(ZX_MSEC(millis)); }$/;"	f	namespace:__sanitizer
SleepForMillis	lib/sanitizer_common/sanitizer_posix_libcdep.cc	/^void SleepForMillis(int millis) {$/;"	f	namespace:__sanitizer
SleepForMillis	lib/sanitizer_common/sanitizer_rtems.cc	/^void SleepForMillis(int millis) { usleep(millis * 1000); }$/;"	f	namespace:__sanitizer
SleepForMillis	lib/sanitizer_common/sanitizer_win.cc	/^void SleepForMillis(int millis) {$/;"	f	namespace:__sanitizer
SleepForSeconds	lib/sanitizer_common/sanitizer_common_nolibc.cc	/^void SleepForSeconds(int seconds) { internal_sleep(seconds); }$/;"	f	namespace:__sanitizer
SleepForSeconds	lib/sanitizer_common/sanitizer_fuchsia.cc	/^void SleepForSeconds(int seconds) { internal_sleep(seconds); }$/;"	f	namespace:__sanitizer
SleepForSeconds	lib/sanitizer_common/sanitizer_posix_libcdep.cc	/^void SleepForSeconds(int seconds) {$/;"	f	namespace:__sanitizer
SleepForSeconds	lib/sanitizer_common/sanitizer_rtems.cc	/^void SleepForSeconds(int seconds) { sleep(seconds); }$/;"	f	namespace:__sanitizer
SleepForSeconds	lib/sanitizer_common/sanitizer_win.cc	/^void SleepForSeconds(int seconds) {$/;"	f	namespace:__sanitizer
SleepSeconds	lib/fuzzer/FuzzerUtilFuchsia.cpp	/^void SleepSeconds(int Seconds) {$/;"	f	namespace:fuzzer
SleepSeconds	lib/fuzzer/FuzzerUtilPosix.cpp	/^void SleepSeconds(int Seconds) {$/;"	f	namespace:fuzzer
SleepSeconds	lib/fuzzer/FuzzerUtilWindows.cpp	/^void SleepSeconds(int Seconds) { Sleep(Seconds * 1000); }$/;"	f	namespace:fuzzer
SlowThread	test/asan/TestCases/Linux/uar_signals.cc	/^void *SlowThread(void *) {$/;"	f
SlowUnwindStack	lib/sanitizer_common/sanitizer_symbolizer_markup.cc	/^void BufferedStackTrace::SlowUnwindStack(uptr pc, u32 max_depth) {$/;"	f	class:__sanitizer::BufferedStackTrace
SlowUnwindStack	lib/sanitizer_common/sanitizer_unwind_linux_libcdep.cc	/^void BufferedStackTrace::SlowUnwindStack(uptr pc, u32 max_depth) {$/;"	f	class:__sanitizer::BufferedStackTrace
SlowUnwindStack	lib/sanitizer_common/sanitizer_unwind_win.cc	/^void BufferedStackTrace::SlowUnwindStack(uptr pc, u32 max_depth) {$/;"	f	class:BufferedStackTrace
SlowUnwindStackWithContext	lib/sanitizer_common/sanitizer_symbolizer_markup.cc	/^void BufferedStackTrace::SlowUnwindStackWithContext(uptr pc, void *context,$/;"	f	class:__sanitizer::BufferedStackTrace
SlowUnwindStackWithContext	lib/sanitizer_common/sanitizer_unwind_linux_libcdep.cc	/^void BufferedStackTrace::SlowUnwindStackWithContext(uptr pc, void *context,$/;"	f	class:__sanitizer::BufferedStackTrace
SlowUnwindStackWithContext	lib/sanitizer_common/sanitizer_unwind_win.cc	/^void BufferedStackTrace::SlowUnwindStackWithContext(uptr pc, void *context,$/;"	f	class:BufferedStackTrace
SmallData	test/profile/instrprof-bufferio.c	/^const char *SmallData = "ABC\\n";$/;"	v
SmallStackThread_threadfn	lib/msan/tests/msan_test.cc	/^static void *SmallStackThread_threadfn(void* data) {$/;"	f	file:
SmallestElementPerFeature	lib/fuzzer/FuzzerCorpus.h	/^  uint32_t SmallestElementPerFeature[kFeatureSetSize];$/;"	m	class:fuzzer::InputCorpus
SnapshotNum	lib/esan/working_set.cpp	/^static u32 SnapshotNum;$/;"	m	namespace:__esan	file:
SocketAddr	lib/msan/tests/msan_test.cc	/^class SocketAddr {$/;"	c	file:
SocketAddr4	lib/msan/tests/msan_test.cc	/^  SocketAddr4() { EXPECT_POISONED(sai_); }$/;"	f	class:SocketAddr4
SocketAddr4	lib/msan/tests/msan_test.cc	/^  explicit SocketAddr4(uint16_t port) {$/;"	f	class:SocketAddr4
SocketAddr4	lib/msan/tests/msan_test.cc	/^class SocketAddr4 : public SocketAddr {$/;"	c	file:
SocketAddr6	lib/msan/tests/msan_test.cc	/^  SocketAddr6() { EXPECT_POISONED(sai_); }$/;"	f	class:SocketAddr6
SocketAddr6	lib/msan/tests/msan_test.cc	/^  explicit SocketAddr6(uint16_t port) {$/;"	f	class:SocketAddr6
SocketAddr6	lib/msan/tests/msan_test.cc	/^class SocketAddr6 : public SocketAddr {$/;"	c	file:
SoftRssLimitExceededCallback	lib/sanitizer_common/sanitizer_common_libcdep.cc	/^static void (*SoftRssLimitExceededCallback)(bool exceeded);$/;"	m	namespace:__sanitizer	file:
SoftRssLimitMb	lib/scudo/scudo_allocator.cpp	/^  uptr SoftRssLimitMb;$/;"	m	struct:__scudo::Allocator	file:
Sort	lib/sanitizer_common/sanitizer_common.h	/^void Sort(T *v, uptr size, Compare comp = {}) {$/;"	f	namespace:__sanitizer
SourceLoc	lib/ubsan/ubsan_diag.h	/^  SourceLocation SourceLoc;$/;"	m	class:__ubsan::Location
SourceLocation	lib/ubsan/ubsan_value.h	/^  SourceLocation() : Filename(), Line(), Column() {}$/;"	f	class:__ubsan::SourceLocation
SourceLocation	lib/ubsan/ubsan_value.h	/^  SourceLocation(const char *Filename, unsigned Line, unsigned Column)$/;"	f	class:__ubsan::SourceLocation
SourceLocation	lib/ubsan/ubsan_value.h	/^class SourceLocation {$/;"	c	namespace:__ubsan
SpaceBeg	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  uptr SpaceBeg() const {$/;"	f	class:SizeClassAllocator64
SpaceEnd	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  uptr SpaceEnd() const { return  SpaceBeg() + kSpaceSize; }$/;"	f	class:SizeClassAllocator64
SpawnThread	lib/sanitizer_common/tests/sanitizer_posix_test.cc	/^static void SpawnThread(uptr iteration) {$/;"	f	namespace:__sanitizer
SpawnTidReporter	lib/sanitizer_common/tests/sanitizer_linux_test.cc	/^void ThreadListerTest::SpawnTidReporter(pthread_t *pthread_id, tid_t *tid) {$/;"	f	class:__sanitizer::ThreadListerTest
SpecialSizeClassMap	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^typedef SizeClassMap<3, 4, 8, 63, 128, 16> SpecialSizeClassMap;$/;"	t	file:
Spin	lib/tsan/tests/rtl/tsan_test_util.h	/^    Spin$/;"	e	enum:Mutex::Type
SpinMutex	lib/sanitizer_common/sanitizer_mutex.h	/^  SpinMutex() {$/;"	f	class:__sanitizer::SpinMutex
SpinMutex	lib/sanitizer_common/sanitizer_mutex.h	/^class SpinMutex : public StaticSpinMutex {$/;"	c	namespace:__sanitizer
SpinMutexLock	lib/sanitizer_common/sanitizer_mutex.h	/^typedef GenericScopedLock<StaticSpinMutex> SpinMutexLock;$/;"	t	namespace:__sanitizer
Split	lib/sanitizer_common/scripts/cpplint.py	/^  def Split(self):$/;"	m	class:FileInfo
SplitBefore	lib/fuzzer/FuzzerUtil.h	/^inline std::pair<std::string, std::string> SplitBefore(std::string X,$/;"	f	namespace:fuzzer
SplitId	lib/tsan/rtl/tsan_sync.h	/^  static uptr SplitId(u64 id, u64 *uid) {$/;"	f	struct:__tsan::SyncVar
Src	lib/esan/esan_hashtable.h	/^    iterator &operator=(const iterator &Src) = default;$/;"	m	class:__esan::HashTable::iterator
Src	lib/esan/esan_hashtable.h	/^    iterator(const iterator &Src) = default;$/;"	m	class:__esan::HashTable::iterator
Stack	lib/asan/tests/asan_str_test.cc	/^  Stack,$/;"	m	class:__anon40::OOBKind	file:
Stack	lib/esan/esan_sideline.h	/^  char *Stack;$/;"	m	class:__esan::SidelineThread
Stack	lib/ubsan/ubsan_diag.h	/^  SymbolizedStack *Stack;$/;"	m	class:__ubsan::SymbolizedStackHolder
StackAddressDescription	lib/asan/asan_descriptions.h	/^struct StackAddressDescription {$/;"	s	namespace:__asan
StackBounds	lib/asan/asan_thread.h	/^  struct StackBounds {$/;"	s	class:__asan::AsanThread
StackBufferOverflow	test/asan/TestCases/scariness_score_test.cc	/^void StackBufferOverflow(int Idx, ReadOrWrite w) {$/;"	f
StackDepot	lib/sanitizer_common/sanitizer_stackdepot.cc	/^    StackDepot;$/;"	t	namespace:__sanitizer	file:
StackDepotBase	lib/sanitizer_common/sanitizer_stackdepotbase.h	/^class StackDepotBase {$/;"	c	namespace:__sanitizer
StackDepotGet	lib/sanitizer_common/sanitizer_stackdepot.cc	/^StackTrace StackDepotGet(u32 id) {$/;"	f	namespace:__sanitizer
StackDepotGetStats	lib/sanitizer_common/sanitizer_common_libcdep.cc	/^SANITIZER_WEAK_ATTRIBUTE StackDepotStats *StackDepotGetStats() {$/;"	f	namespace:__sanitizer
StackDepotGetStats	lib/sanitizer_common/sanitizer_stackdepot.cc	/^StackDepotStats *StackDepotGetStats() {$/;"	f	namespace:__sanitizer
StackDepotHandle	lib/sanitizer_common/sanitizer_stackdepot.h	/^  StackDepotHandle() : node_(nullptr) {}$/;"	f	struct:__sanitizer::StackDepotHandle
StackDepotHandle	lib/sanitizer_common/sanitizer_stackdepot.h	/^  explicit StackDepotHandle(StackDepotNode *node) : node_(node) {}$/;"	f	struct:__sanitizer::StackDepotHandle
StackDepotHandle	lib/sanitizer_common/sanitizer_stackdepot.h	/^struct StackDepotHandle {$/;"	s	namespace:__sanitizer
StackDepotLockAll	lib/sanitizer_common/sanitizer_stackdepot.cc	/^void StackDepotLockAll() {$/;"	f	namespace:__sanitizer
StackDepotNode	lib/sanitizer_common/sanitizer_stackdepot.cc	/^struct StackDepotNode {$/;"	s	namespace:__sanitizer	file:
StackDepotPut	lib/sanitizer_common/sanitizer_stackdepot.cc	/^u32 StackDepotPut(StackTrace stack) {$/;"	f	namespace:__sanitizer
StackDepotPut_WithHandle	lib/sanitizer_common/sanitizer_stackdepot.cc	/^StackDepotHandle StackDepotPut_WithHandle(StackTrace stack) {$/;"	f	namespace:__sanitizer
StackDepotReverseMap	lib/sanitizer_common/sanitizer_stackdepot.cc	/^StackDepotReverseMap::StackDepotReverseMap() {$/;"	f	class:__sanitizer::StackDepotReverseMap
StackDepotReverseMap	lib/sanitizer_common/sanitizer_stackdepot.h	/^class StackDepotReverseMap {$/;"	c	namespace:__sanitizer
StackDepotStats	lib/sanitizer_common/sanitizer_common.h	/^struct StackDepotStats {$/;"	s	namespace:__sanitizer
StackDepotUnlockAll	lib/sanitizer_common/sanitizer_stackdepot.cc	/^void StackDepotUnlockAll() {$/;"	f	namespace:__sanitizer
StackFrameAccess	lib/asan/asan_thread.h	/^  struct StackFrameAccess {$/;"	s	class:__asan::AsanThread
StackOriginDescr	lib/msan/msan.cc	/^static const char *StackOriginDescr[kNumStackOriginDescrs];$/;"	m	namespace:__msan	file:
StackOriginPC	lib/msan/msan.cc	/^static uptr StackOriginPC[kNumStackOriginDescrs];$/;"	m	namespace:__msan	file:
StackOverflow	test/asan/TestCases/scariness_score_test.cc	/^void StackOverflow(int Idx) {$/;"	f
StackReuseAndException	lib/asan/tests/asan_test.cc	/^NOINLINE static void StackReuseAndException() {$/;"	f	file:
StackSizeIsUnlimited	lib/sanitizer_common/sanitizer_posix_libcdep.cc	/^bool StackSizeIsUnlimited() {$/;"	f	namespace:__sanitizer
StackSizeIsUnlimited	lib/sanitizer_common/sanitizer_win.cc	/^bool StackSizeIsUnlimited() {$/;"	f	namespace:__sanitizer
StackStressFunc	lib/msan/tests/msan_test.cc	/^NOINLINE void StackStressFunc() {$/;"	f
StackStripMain	lib/tsan/rtl/tsan_rtl_report.cc	/^static void StackStripMain(SymbolizedStack *frames) {$/;"	f	namespace:__tsan
StackTestFunc	lib/msan/tests/msan_test.cc	/^NOINLINE void StackTestFunc() {$/;"	f
StackTrace	lib/sanitizer_common/sanitizer_stacktrace.h	/^  StackTrace() : trace(nullptr), size(0), tag(0) {}$/;"	f	struct:__sanitizer::StackTrace
StackTrace	lib/sanitizer_common/sanitizer_stacktrace.h	/^  StackTrace(const uptr *trace, u32 size) : trace(trace), size(size), tag(0) {}$/;"	f	struct:__sanitizer::StackTrace
StackTrace	lib/sanitizer_common/sanitizer_stacktrace.h	/^  StackTrace(const uptr *trace, u32 size, u32 tag)$/;"	f	struct:__sanitizer::StackTrace
StackTrace	lib/sanitizer_common/sanitizer_stacktrace.h	/^struct StackTrace {$/;"	s	namespace:__sanitizer
StackUseAfterReturn	test/asan/TestCases/scariness_score_test.cc	/^void StackUseAfterReturn(int Idx, ReadOrWrite w) {$/;"	f
StackVarDescr	lib/asan/asan_report.h	/^struct StackVarDescr {$/;"	s	namespace:__asan
StackWalk64	lib/sanitizer_common/sanitizer_dbghelp.h	/^extern decltype(::StackWalk64) *StackWalk64;$/;"	m	namespace:__sanitizer
StackWalk64	lib/sanitizer_common/sanitizer_symbolizer_win.cc	/^decltype(::StackWalk64) *StackWalk64;$/;"	m	namespace:__sanitizer	file:
Start	lib/cfi/cfi.cc	/^void ShadowBuilder::Start() {$/;"	f	class:__cfi::ShadowBuilder
Start	lib/esan/esan_shadow.h	/^  uptr Start;$/;"	m	struct:__esan::ApplicationRegion
Start	lib/fuzzer/FuzzerLoop.cpp	/^  void Start(int TraceLevel) {$/;"	f	struct:fuzzer::MallocFreeTracer
Start	lib/fuzzer/FuzzerTracePC.h	/^    uint32_t *Start, *Stop;$/;"	m	struct:fuzzer::TracePC::Module
Start	lib/fuzzer/FuzzerTracePC.h	/^  struct { const PCTableEntry *Start, *Stop; } ModulePCTable[4096];$/;"	m	struct:fuzzer::TracePC::__anon34
Start	lib/fuzzer/FuzzerTracePC.h	/^  struct { uint8_t *Start, *Stop; } ModuleCounters[4096];$/;"	m	struct:fuzzer::TracePC::__anon33
Start	lib/ubsan/ubsan_diag.h	/^  Location Start, End;$/;"	m	class:__ubsan::Range
Start	test/sanitizer_common/TestCases/Linux/pthread_mutex.cc	/^static void *Start(void *arg) {$/;"	f	file:
StartBackgroundThread	lib/tsan/rtl/tsan_rtl.cc	/^static void StartBackgroundThread() {$/;"	f	namespace:__tsan
StartIdx	lib/esan/esan_circular_buffer.h	/^  uptr StartIdx;$/;"	m	class:__esan::CircularBuffer
StartMutationSequence	lib/fuzzer/FuzzerMutate.cpp	/^void MutationDispatcher::StartMutationSequence() {$/;"	f	class:fuzzer::MutationDispatcher
StartReportDeadlySignal	lib/sanitizer_common/sanitizer_symbolizer_markup.cc	/^void StartReportDeadlySignal() {}$/;"	f	namespace:__sanitizer
StartReportDeadlySignal	lib/sanitizer_common/sanitizer_symbolizer_report.cc	/^void StartReportDeadlySignal() {$/;"	f	namespace:__sanitizer
StartRssThread	lib/fuzzer/FuzzerDriver.cpp	/^static void StartRssThread(Fuzzer *F, size_t RssLimitMb) {$/;"	f	namespace:fuzzer
StartSubprocess	lib/sanitizer_common/sanitizer_posix_libcdep.cc	/^pid_t StartSubprocess(const char *program, const char *const argv[],$/;"	f	namespace:__sanitizer
StartSubprocess	lib/sanitizer_common/sanitizer_win.cc	/^pid_t StartSubprocess(const char *program, const char *const argv[],$/;"	f	namespace:__sanitizer
StartSwitchFiber	lib/asan/asan_thread.cc	/^void AsanThread::StartSwitchFiber(FakeStack **fake_stack_save, uptr bottom,$/;"	f	class:__asan::AsanThread
StartSymbolizationHook	lib/sanitizer_common/sanitizer_symbolizer.h	/^  typedef void (*StartSymbolizationHook)();$/;"	t	class:__sanitizer::final
StartSymbolizerSubprocess	lib/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc	/^bool SymbolizerProcess::StartSymbolizerSubprocess() {$/;"	f	class:__sanitizer::SymbolizerProcess
StartSymbolizerSubprocess	lib/sanitizer_common/sanitizer_symbolizer_win.cc	/^bool SymbolizerProcess::StartSymbolizerSubprocess() {$/;"	f	class:__sanitizer::SymbolizerProcess
StartThread	lib/sanitizer_common/sanitizer_thread_registry.cc	/^void ThreadRegistry::StartThread(u32 tid, tid_t os_id, bool workerthread,$/;"	f	class:__sanitizer::ThreadRegistry
StartThread	test/tsan/simple_stack.c	/^void StartThread(pthread_t *t, void *(*f)(void*)) {$/;"	f
StartWorld	test/tsan/signal_recursive.cc	/^static void StartWorld(pthread_t thread) {$/;"	f	file:
StatAggregate	lib/tsan/rtl/tsan_stat.cc	/^void StatAggregate(u64 *dst, u64 *src) {$/;"	f	namespace:__tsan
StatAnnotateBenignRace	lib/tsan/rtl/tsan_stat.h	/^  StatAnnotateBenignRace,$/;"	e	enum:__tsan::StatType
StatAnnotateBenignRaceSized	lib/tsan/rtl/tsan_stat.h	/^  StatAnnotateBenignRaceSized,$/;"	e	enum:__tsan::StatType
StatAnnotateCondVarSignal	lib/tsan/rtl/tsan_stat.h	/^  StatAnnotateCondVarSignal,$/;"	e	enum:__tsan::StatType
StatAnnotateCondVarSignalAll	lib/tsan/rtl/tsan_stat.h	/^  StatAnnotateCondVarSignalAll,$/;"	e	enum:__tsan::StatType
StatAnnotateCondVarWait	lib/tsan/rtl/tsan_stat.h	/^  StatAnnotateCondVarWait,$/;"	e	enum:__tsan::StatType
StatAnnotateEnableRaceDetection	lib/tsan/rtl/tsan_stat.h	/^  StatAnnotateEnableRaceDetection,$/;"	e	enum:__tsan::StatType
StatAnnotateExpectRace	lib/tsan/rtl/tsan_stat.h	/^  StatAnnotateExpectRace,$/;"	e	enum:__tsan::StatType
StatAnnotateFlushExpectedRaces	lib/tsan/rtl/tsan_stat.h	/^  StatAnnotateFlushExpectedRaces,$/;"	e	enum:__tsan::StatType
StatAnnotateFlushState	lib/tsan/rtl/tsan_stat.h	/^  StatAnnotateFlushState,$/;"	e	enum:__tsan::StatType
StatAnnotateHappensAfter	lib/tsan/rtl/tsan_stat.h	/^  StatAnnotateHappensAfter,$/;"	e	enum:__tsan::StatType
StatAnnotateHappensBefore	lib/tsan/rtl/tsan_stat.h	/^  StatAnnotateHappensBefore,$/;"	e	enum:__tsan::StatType
StatAnnotateIgnoreReadsBegin	lib/tsan/rtl/tsan_stat.h	/^  StatAnnotateIgnoreReadsBegin,$/;"	e	enum:__tsan::StatType
StatAnnotateIgnoreReadsEnd	lib/tsan/rtl/tsan_stat.h	/^  StatAnnotateIgnoreReadsEnd,$/;"	e	enum:__tsan::StatType
StatAnnotateIgnoreSyncBegin	lib/tsan/rtl/tsan_stat.h	/^  StatAnnotateIgnoreSyncBegin,$/;"	e	enum:__tsan::StatType
StatAnnotateIgnoreSyncEnd	lib/tsan/rtl/tsan_stat.h	/^  StatAnnotateIgnoreSyncEnd,$/;"	e	enum:__tsan::StatType
StatAnnotateIgnoreWritesBegin	lib/tsan/rtl/tsan_stat.h	/^  StatAnnotateIgnoreWritesBegin,$/;"	e	enum:__tsan::StatType
StatAnnotateIgnoreWritesEnd	lib/tsan/rtl/tsan_stat.h	/^  StatAnnotateIgnoreWritesEnd,$/;"	e	enum:__tsan::StatType
StatAnnotateMutexIsNotPHB	lib/tsan/rtl/tsan_stat.h	/^  StatAnnotateMutexIsNotPHB,$/;"	e	enum:__tsan::StatType
StatAnnotateMutexIsUsedAsCondVar	lib/tsan/rtl/tsan_stat.h	/^  StatAnnotateMutexIsUsedAsCondVar,$/;"	e	enum:__tsan::StatType
StatAnnotateNewMemory	lib/tsan/rtl/tsan_stat.h	/^  StatAnnotateNewMemory,$/;"	e	enum:__tsan::StatType
StatAnnotateNoOp	lib/tsan/rtl/tsan_stat.h	/^  StatAnnotateNoOp,$/;"	e	enum:__tsan::StatType
StatAnnotatePCQCreate	lib/tsan/rtl/tsan_stat.h	/^  StatAnnotatePCQCreate,$/;"	e	enum:__tsan::StatType
StatAnnotatePCQDestroy	lib/tsan/rtl/tsan_stat.h	/^  StatAnnotatePCQDestroy,$/;"	e	enum:__tsan::StatType
StatAnnotatePCQGet	lib/tsan/rtl/tsan_stat.h	/^  StatAnnotatePCQGet,$/;"	e	enum:__tsan::StatType
StatAnnotatePCQPut	lib/tsan/rtl/tsan_stat.h	/^  StatAnnotatePCQPut,$/;"	e	enum:__tsan::StatType
StatAnnotatePublishMemoryRange	lib/tsan/rtl/tsan_stat.h	/^  StatAnnotatePublishMemoryRange,$/;"	e	enum:__tsan::StatType
StatAnnotateRWLockAcquired	lib/tsan/rtl/tsan_stat.h	/^  StatAnnotateRWLockAcquired,$/;"	e	enum:__tsan::StatType
StatAnnotateRWLockCreate	lib/tsan/rtl/tsan_stat.h	/^  StatAnnotateRWLockCreate,$/;"	e	enum:__tsan::StatType
StatAnnotateRWLockCreateStatic	lib/tsan/rtl/tsan_stat.h	/^  StatAnnotateRWLockCreateStatic,$/;"	e	enum:__tsan::StatType
StatAnnotateRWLockDestroy	lib/tsan/rtl/tsan_stat.h	/^  StatAnnotateRWLockDestroy,$/;"	e	enum:__tsan::StatType
StatAnnotateRWLockReleased	lib/tsan/rtl/tsan_stat.h	/^  StatAnnotateRWLockReleased,$/;"	e	enum:__tsan::StatType
StatAnnotateThreadName	lib/tsan/rtl/tsan_stat.h	/^  StatAnnotateThreadName,$/;"	e	enum:__tsan::StatType
StatAnnotateTraceMemory	lib/tsan/rtl/tsan_stat.h	/^  StatAnnotateTraceMemory,$/;"	e	enum:__tsan::StatType
StatAnnotateUnpublishMemoryRange	lib/tsan/rtl/tsan_stat.h	/^  StatAnnotateUnpublishMemoryRange,$/;"	e	enum:__tsan::StatType
StatAnnotation	lib/tsan/rtl/tsan_stat.h	/^  StatAnnotation,$/;"	e	enum:__tsan::StatType
StatAtomic	lib/tsan/rtl/tsan_stat.h	/^  StatAtomic,$/;"	e	enum:__tsan::StatType
StatAtomic1	lib/tsan/rtl/tsan_stat.h	/^  StatAtomic1,$/;"	e	enum:__tsan::StatType
StatAtomic16	lib/tsan/rtl/tsan_stat.h	/^  StatAtomic16,$/;"	e	enum:__tsan::StatType
StatAtomic2	lib/tsan/rtl/tsan_stat.h	/^  StatAtomic2,$/;"	e	enum:__tsan::StatType
StatAtomic4	lib/tsan/rtl/tsan_stat.h	/^  StatAtomic4,$/;"	e	enum:__tsan::StatType
StatAtomic8	lib/tsan/rtl/tsan_stat.h	/^  StatAtomic8,$/;"	e	enum:__tsan::StatType
StatAtomicAcq_Rel	lib/tsan/rtl/tsan_stat.h	/^  StatAtomicAcq_Rel,$/;"	e	enum:__tsan::StatType
StatAtomicAcquire	lib/tsan/rtl/tsan_stat.h	/^  StatAtomicAcquire,$/;"	e	enum:__tsan::StatType
StatAtomicCAS	lib/tsan/rtl/tsan_stat.h	/^  StatAtomicCAS,$/;"	e	enum:__tsan::StatType
StatAtomicConsume	lib/tsan/rtl/tsan_stat.h	/^  StatAtomicConsume,$/;"	e	enum:__tsan::StatType
StatAtomicExchange	lib/tsan/rtl/tsan_stat.h	/^  StatAtomicExchange,$/;"	e	enum:__tsan::StatType
StatAtomicFence	lib/tsan/rtl/tsan_stat.h	/^  StatAtomicFence,$/;"	e	enum:__tsan::StatType
StatAtomicFetchAdd	lib/tsan/rtl/tsan_stat.h	/^  StatAtomicFetchAdd,$/;"	e	enum:__tsan::StatType
StatAtomicFetchAnd	lib/tsan/rtl/tsan_stat.h	/^  StatAtomicFetchAnd,$/;"	e	enum:__tsan::StatType
StatAtomicFetchNand	lib/tsan/rtl/tsan_stat.h	/^  StatAtomicFetchNand,$/;"	e	enum:__tsan::StatType
StatAtomicFetchOr	lib/tsan/rtl/tsan_stat.h	/^  StatAtomicFetchOr,$/;"	e	enum:__tsan::StatType
StatAtomicFetchSub	lib/tsan/rtl/tsan_stat.h	/^  StatAtomicFetchSub,$/;"	e	enum:__tsan::StatType
StatAtomicFetchXor	lib/tsan/rtl/tsan_stat.h	/^  StatAtomicFetchXor,$/;"	e	enum:__tsan::StatType
StatAtomicLoad	lib/tsan/rtl/tsan_stat.h	/^  StatAtomicLoad,$/;"	e	enum:__tsan::StatType
StatAtomicRelaxed	lib/tsan/rtl/tsan_stat.h	/^  StatAtomicRelaxed,$/;"	e	enum:__tsan::StatType
StatAtomicRelease	lib/tsan/rtl/tsan_stat.h	/^  StatAtomicRelease,$/;"	e	enum:__tsan::StatType
StatAtomicSeq_Cst	lib/tsan/rtl/tsan_stat.h	/^  StatAtomicSeq_Cst,$/;"	e	enum:__tsan::StatType
StatAtomicStore	lib/tsan/rtl/tsan_stat.h	/^  StatAtomicStore,$/;"	e	enum:__tsan::StatType
StatClockAcquire	lib/tsan/rtl/tsan_stat.h	/^  StatClockAcquire,$/;"	e	enum:__tsan::StatType
StatClockAcquireEmpty	lib/tsan/rtl/tsan_stat.h	/^  StatClockAcquireEmpty,$/;"	e	enum:__tsan::StatType
StatClockAcquireFastRelease	lib/tsan/rtl/tsan_stat.h	/^  StatClockAcquireFastRelease,$/;"	e	enum:__tsan::StatType
StatClockAcquireFull	lib/tsan/rtl/tsan_stat.h	/^  StatClockAcquireFull,$/;"	e	enum:__tsan::StatType
StatClockAcquireRelease	lib/tsan/rtl/tsan_stat.h	/^  StatClockAcquireRelease,$/;"	e	enum:__tsan::StatType
StatClockAcquiredSomething	lib/tsan/rtl/tsan_stat.h	/^  StatClockAcquiredSomething,$/;"	e	enum:__tsan::StatType
StatClockRelease	lib/tsan/rtl/tsan_stat.h	/^  StatClockRelease,$/;"	e	enum:__tsan::StatType
StatClockReleaseAcquired	lib/tsan/rtl/tsan_stat.h	/^  StatClockReleaseAcquired,$/;"	e	enum:__tsan::StatType
StatClockReleaseClearTail	lib/tsan/rtl/tsan_stat.h	/^  StatClockReleaseClearTail,$/;"	e	enum:__tsan::StatType
StatClockReleaseFast	lib/tsan/rtl/tsan_stat.h	/^  StatClockReleaseFast,$/;"	e	enum:__tsan::StatType
StatClockReleaseFull	lib/tsan/rtl/tsan_stat.h	/^  StatClockReleaseFull,$/;"	e	enum:__tsan::StatType
StatClockReleaseResize	lib/tsan/rtl/tsan_stat.h	/^  StatClockReleaseResize,$/;"	e	enum:__tsan::StatType
StatClockReleaseSlow	lib/tsan/rtl/tsan_stat.h	/^  StatClockReleaseSlow,$/;"	e	enum:__tsan::StatType
StatClockStore	lib/tsan/rtl/tsan_stat.h	/^  StatClockStore,$/;"	e	enum:__tsan::StatType
StatClockStoreFast	lib/tsan/rtl/tsan_stat.h	/^  StatClockStoreFast,$/;"	e	enum:__tsan::StatType
StatClockStoreFull	lib/tsan/rtl/tsan_stat.h	/^  StatClockStoreFull,$/;"	e	enum:__tsan::StatType
StatClockStoreResize	lib/tsan/rtl/tsan_stat.h	/^  StatClockStoreResize,$/;"	e	enum:__tsan::StatType
StatClockStoreTail	lib/tsan/rtl/tsan_stat.h	/^  StatClockStoreTail,$/;"	e	enum:__tsan::StatType
StatCnt	lib/tsan/rtl/tsan_stat.h	/^  StatCnt$/;"	e	enum:__tsan::StatType
StatEvents	lib/tsan/rtl/tsan_stat.h	/^  StatEvents,$/;"	e	enum:__tsan::StatType
StatFuncEnter	lib/tsan/rtl/tsan_stat.h	/^  StatFuncEnter,$/;"	e	enum:__tsan::StatType
StatFuncExit	lib/tsan/rtl/tsan_stat.h	/^  StatFuncExit,$/;"	e	enum:__tsan::StatType
StatInc	lib/tsan/rtl/tsan_rtl.h	/^void ALWAYS_INLINE StatInc(ThreadState *thr, StatType typ, u64 n = 1) {$/;"	f	namespace:__tsan
StatInfo	lib/stats/stats.h	/^struct StatInfo {$/;"	s	namespace:__sanitizer
StatModule	lib/stats/stats.h	/^struct StatModule {$/;"	s	namespace:__sanitizer
StatMop	lib/tsan/rtl/tsan_stat.h	/^  StatMop,$/;"	e	enum:__tsan::StatType
StatMop1	lib/tsan/rtl/tsan_stat.h	/^  StatMop1,  \/\/ These must be consequtive.$/;"	e	enum:__tsan::StatType
StatMop2	lib/tsan/rtl/tsan_stat.h	/^  StatMop2,$/;"	e	enum:__tsan::StatType
StatMop4	lib/tsan/rtl/tsan_stat.h	/^  StatMop4,$/;"	e	enum:__tsan::StatType
StatMop8	lib/tsan/rtl/tsan_stat.h	/^  StatMop8,$/;"	e	enum:__tsan::StatType
StatMopIgnored	lib/tsan/rtl/tsan_stat.h	/^  StatMopIgnored,$/;"	e	enum:__tsan::StatType
StatMopRange	lib/tsan/rtl/tsan_stat.h	/^  StatMopRange,$/;"	e	enum:__tsan::StatType
StatMopRangeRodata	lib/tsan/rtl/tsan_stat.h	/^  StatMopRangeRodata,$/;"	e	enum:__tsan::StatType
StatMopRead	lib/tsan/rtl/tsan_stat.h	/^  StatMopRead,$/;"	e	enum:__tsan::StatType
StatMopRodata	lib/tsan/rtl/tsan_stat.h	/^  StatMopRodata,$/;"	e	enum:__tsan::StatType
StatMopSame	lib/tsan/rtl/tsan_stat.h	/^  StatMopSame,$/;"	e	enum:__tsan::StatType
StatMopWrite	lib/tsan/rtl/tsan_stat.h	/^  StatMopWrite,$/;"	e	enum:__tsan::StatType
StatMtxAnnotations	lib/tsan/rtl/tsan_stat.h	/^  StatMtxAnnotations,$/;"	e	enum:__tsan::StatType
StatMtxAtExit	lib/tsan/rtl/tsan_stat.h	/^  StatMtxAtExit,$/;"	e	enum:__tsan::StatType
StatMtxDeadlockDetector	lib/tsan/rtl/tsan_stat.h	/^  StatMtxDeadlockDetector,$/;"	e	enum:__tsan::StatType
StatMtxFD	lib/tsan/rtl/tsan_stat.h	/^  StatMtxFD,$/;"	e	enum:__tsan::StatType
StatMtxFired	lib/tsan/rtl/tsan_stat.h	/^  StatMtxFired,$/;"	e	enum:__tsan::StatType
StatMtxGlobalProc	lib/tsan/rtl/tsan_stat.h	/^  StatMtxGlobalProc,$/;"	e	enum:__tsan::StatType
StatMtxMBlock	lib/tsan/rtl/tsan_stat.h	/^  StatMtxMBlock,$/;"	e	enum:__tsan::StatType
StatMtxRacy	lib/tsan/rtl/tsan_stat.h	/^  StatMtxRacy,$/;"	e	enum:__tsan::StatType
StatMtxReport	lib/tsan/rtl/tsan_stat.h	/^  StatMtxReport,$/;"	e	enum:__tsan::StatType
StatMtxSlab	lib/tsan/rtl/tsan_stat.h	/^  StatMtxSlab,$/;"	e	enum:__tsan::StatType
StatMtxSyncTab	lib/tsan/rtl/tsan_stat.h	/^  StatMtxSyncTab,$/;"	e	enum:__tsan::StatType
StatMtxSyncVar	lib/tsan/rtl/tsan_stat.h	/^  StatMtxSyncVar,$/;"	e	enum:__tsan::StatType
StatMtxThreads	lib/tsan/rtl/tsan_stat.h	/^  StatMtxThreads,$/;"	e	enum:__tsan::StatType
StatMtxTotal	lib/tsan/rtl/tsan_stat.h	/^  StatMtxTotal,$/;"	e	enum:__tsan::StatType
StatMtxTrace	lib/tsan/rtl/tsan_stat.h	/^  StatMtxTrace,$/;"	e	enum:__tsan::StatType
StatMutexCreate	lib/tsan/rtl/tsan_stat.h	/^  StatMutexCreate,$/;"	e	enum:__tsan::StatType
StatMutexDestroy	lib/tsan/rtl/tsan_stat.h	/^  StatMutexDestroy,$/;"	e	enum:__tsan::StatType
StatMutexLock	lib/tsan/rtl/tsan_stat.h	/^  StatMutexLock,$/;"	e	enum:__tsan::StatType
StatMutexReadLock	lib/tsan/rtl/tsan_stat.h	/^  StatMutexReadLock,$/;"	e	enum:__tsan::StatType
StatMutexReadUnlock	lib/tsan/rtl/tsan_stat.h	/^  StatMutexReadUnlock,$/;"	e	enum:__tsan::StatType
StatMutexRecLock	lib/tsan/rtl/tsan_stat.h	/^  StatMutexRecLock,$/;"	e	enum:__tsan::StatType
StatMutexRecUnlock	lib/tsan/rtl/tsan_stat.h	/^  StatMutexRecUnlock,$/;"	e	enum:__tsan::StatType
StatMutexUnlock	lib/tsan/rtl/tsan_stat.h	/^  StatMutexUnlock,$/;"	e	enum:__tsan::StatType
StatOutput	lib/tsan/rtl/tsan_stat.cc	/^void StatOutput(u64 *stat) {$/;"	f	namespace:__tsan
StatSet	lib/tsan/rtl/tsan_rtl.h	/^void ALWAYS_INLINE StatSet(ThreadState *thr, StatType typ, u64 n) {$/;"	f	namespace:__tsan
StatShadowAnotherThread	lib/tsan/rtl/tsan_stat.h	/^  StatShadowAnotherThread,$/;"	e	enum:__tsan::StatType
StatShadowIntersect	lib/tsan/rtl/tsan_stat.h	/^  StatShadowIntersect,$/;"	e	enum:__tsan::StatType
StatShadowNonZero	lib/tsan/rtl/tsan_stat.h	/^  StatShadowNonZero,  \/\/ Derived.$/;"	e	enum:__tsan::StatType
StatShadowNotIntersect	lib/tsan/rtl/tsan_stat.h	/^  StatShadowNotIntersect,$/;"	e	enum:__tsan::StatType
StatShadowProcessed	lib/tsan/rtl/tsan_stat.h	/^  StatShadowProcessed,$/;"	e	enum:__tsan::StatType
StatShadowReplace	lib/tsan/rtl/tsan_stat.h	/^  StatShadowReplace,$/;"	e	enum:__tsan::StatType
StatShadowSameSize	lib/tsan/rtl/tsan_stat.h	/^  StatShadowSameSize,$/;"	e	enum:__tsan::StatType
StatShadowSameThread	lib/tsan/rtl/tsan_stat.h	/^  StatShadowSameThread,$/;"	e	enum:__tsan::StatType
StatShadowZero	lib/tsan/rtl/tsan_stat.h	/^  StatShadowZero,$/;"	e	enum:__tsan::StatType
StatSyncAcquire	lib/tsan/rtl/tsan_stat.h	/^  StatSyncAcquire,$/;"	e	enum:__tsan::StatType
StatSyncCreated	lib/tsan/rtl/tsan_stat.h	/^  StatSyncCreated,$/;"	e	enum:__tsan::StatType
StatSyncDestroyed	lib/tsan/rtl/tsan_stat.h	/^  StatSyncDestroyed,$/;"	e	enum:__tsan::StatType
StatSyncRelease	lib/tsan/rtl/tsan_stat.h	/^  StatSyncRelease,$/;"	e	enum:__tsan::StatType
StatThreadCreate	lib/tsan/rtl/tsan_stat.h	/^  StatThreadCreate,$/;"	e	enum:__tsan::StatType
StatThreadFinish	lib/tsan/rtl/tsan_stat.h	/^  StatThreadFinish,$/;"	e	enum:__tsan::StatType
StatThreadMaxAlive	lib/tsan/rtl/tsan_stat.h	/^  StatThreadMaxAlive,$/;"	e	enum:__tsan::StatType
StatThreadMaxTid	lib/tsan/rtl/tsan_stat.h	/^  StatThreadMaxTid,$/;"	e	enum:__tsan::StatType
StatThreadReuse	lib/tsan/rtl/tsan_stat.h	/^  StatThreadReuse,$/;"	e	enum:__tsan::StatType
StatType	lib/tsan/rtl/tsan_stat.h	/^enum StatType {$/;"	g	namespace:__tsan
Stat__tsan_mutex_create	lib/tsan/rtl/tsan_stat.h	/^  Stat__tsan_mutex_create,$/;"	e	enum:__tsan::StatType
Stat__tsan_mutex_destroy	lib/tsan/rtl/tsan_stat.h	/^  Stat__tsan_mutex_destroy,$/;"	e	enum:__tsan::StatType
Stat__tsan_mutex_post_divert	lib/tsan/rtl/tsan_stat.h	/^  Stat__tsan_mutex_post_divert,$/;"	e	enum:__tsan::StatType
Stat__tsan_mutex_post_lock	lib/tsan/rtl/tsan_stat.h	/^  Stat__tsan_mutex_post_lock,$/;"	e	enum:__tsan::StatType
Stat__tsan_mutex_post_signal	lib/tsan/rtl/tsan_stat.h	/^  Stat__tsan_mutex_post_signal,$/;"	e	enum:__tsan::StatType
Stat__tsan_mutex_post_unlock	lib/tsan/rtl/tsan_stat.h	/^  Stat__tsan_mutex_post_unlock,$/;"	e	enum:__tsan::StatType
Stat__tsan_mutex_pre_divert	lib/tsan/rtl/tsan_stat.h	/^  Stat__tsan_mutex_pre_divert,$/;"	e	enum:__tsan::StatType
Stat__tsan_mutex_pre_lock	lib/tsan/rtl/tsan_stat.h	/^  Stat__tsan_mutex_pre_lock,$/;"	e	enum:__tsan::StatType
Stat__tsan_mutex_pre_signal	lib/tsan/rtl/tsan_stat.h	/^  Stat__tsan_mutex_pre_signal,$/;"	e	enum:__tsan::StatType
Stat__tsan_mutex_pre_unlock	lib/tsan/rtl/tsan_stat.h	/^  Stat__tsan_mutex_pre_unlock,$/;"	e	enum:__tsan::StatType
State	lib/scudo/scudo_allocator.h	/^  u64 State             : 2;   \/\/ available, allocated, or quarantined$/;"	m	struct:__scudo::UnpackedHeader
StaticAlarmCallback	lib/fuzzer/FuzzerLoop.cpp	/^void Fuzzer::StaticAlarmCallback() {$/;"	f	class:fuzzer::Fuzzer
StaticConstGlob	lib/asan/tests/asan_test.cc	/^static const char StaticConstGlob[3] = {9, 8, 7};$/;"	v	file:
StaticCrashHandler	lib/fuzzer/FuzzerUtilFuchsia.cpp	/^static void StaticCrashHandler() {$/;"	f	namespace:fuzzer::__anon35
StaticCrashSignalCallback	lib/fuzzer/FuzzerLoop.cpp	/^void Fuzzer::StaticCrashSignalCallback() {$/;"	f	class:fuzzer::Fuzzer
StaticDeathCallback	lib/fuzzer/FuzzerLoop.cpp	/^void Fuzzer::StaticDeathCallback() {$/;"	f	class:fuzzer::Fuzzer
StaticExitCallback	lib/fuzzer/FuzzerLoop.cpp	/^void Fuzzer::StaticExitCallback() {$/;"	f	class:fuzzer::Fuzzer
StaticFileSizeExceedCallback	lib/fuzzer/FuzzerLoop.cpp	/^void Fuzzer::StaticFileSizeExceedCallback() {$/;"	f	class:fuzzer::Fuzzer
StaticGracefulExitCallback	lib/fuzzer/FuzzerLoop.cpp	/^void Fuzzer::StaticGracefulExitCallback() {$/;"	f	class:fuzzer::Fuzzer
StaticInit	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^void Mutex::StaticInit() {$/;"	f	class:Mutex
StaticInterruptCallback	lib/fuzzer/FuzzerLoop.cpp	/^void Fuzzer::StaticInterruptCallback() {$/;"	f	class:fuzzer::Fuzzer
StaticSpinMutex	lib/sanitizer_common/sanitizer_mutex.h	/^class StaticSpinMutex {$/;"	c	namespace:__sanitizer
Stats	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  struct Stats {$/;"	s	class:SizeClassAllocator64
Stats	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^  struct Stats {$/;"	s	class:LargeMmapAllocator
Stats	lib/scudo/scudo_allocator_combined.h	/^  AllocatorGlobalStats Stats;$/;"	m	class:CombinedAllocator
StatsMutex	lib/scudo/scudo_allocator_secondary.h	/^  StaticSpinMutex StatsMutex;$/;"	m	class:LargeMmapAllocator
Stop	lib/fuzzer/FuzzerLoop.cpp	/^  bool Stop() {$/;"	f	struct:fuzzer::MallocFreeTracer
Stop	lib/fuzzer/FuzzerTracePC.h	/^    uint32_t *Start, *Stop;$/;"	m	struct:fuzzer::TracePC::Module
Stop	lib/fuzzer/FuzzerTracePC.h	/^  struct { const PCTableEntry *Start, *Stop; } ModulePCTable[4096];$/;"	m	struct:fuzzer::TracePC::__anon34
Stop	lib/fuzzer/FuzzerTracePC.h	/^  struct { uint8_t *Start, *Stop; } ModuleCounters[4096];$/;"	m	struct:fuzzer::TracePC::__anon33
StopBackgroundThread	lib/tsan/rtl/tsan_rtl.cc	/^static void StopBackgroundThread() {$/;"	f	namespace:__tsan
StopInitOrderChecking	lib/asan/asan_globals.cc	/^void StopInitOrderChecking() {$/;"	f	namespace:__asan
StopTheWorld	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^void StopTheWorld(StopTheWorldCallback callback, void *argument) {$/;"	f	namespace:__sanitizer
StopTheWorld	lib/sanitizer_common/sanitizer_stoptheworld_mac.cc	/^void StopTheWorld(StopTheWorldCallback callback, void *argument) {$/;"	f	namespace:__sanitizer
StopTheWorldCallback	lib/sanitizer_common/sanitizer_stoptheworld.h	/^typedef void (*StopTheWorldCallback)($/;"	t	namespace:__sanitizer
StopTheWorldScope	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^  StopTheWorldScope() {$/;"	f	class:__sanitizer::StopTheWorldScope
StopTheWorldScope	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^class StopTheWorldScope {$/;"	c	namespace:__sanitizer	file:
StopTheWorldTestLibConstructor	lib/sanitizer_common/tests/sanitizer_stoptheworld_testlib.cc	/^__attribute__((constructor)) void StopTheWorldTestLibConstructor(void) {$/;"	f	namespace:__anon60
StopWorld	test/tsan/signal_recursive.cc	/^static void StopWorld(pthread_t thread) {$/;"	f	file:
Store	test/asan/TestCases/use-after-scope-types.cc	/^  void Store(T *ptr) { t = ptr; }$/;"	f	struct:Ptr
Store	test/asan/TestCases/use-after-scope-types.cc	/^  void Store(Type *ptr) { t = *ptr; }$/;"	f	struct:Ptr
StoreIfNotYetStored	lib/tsan/rtl/tsan_rtl.cc	/^void StoreIfNotYetStored(u64 *sp, u64 *s) {$/;"	f	namespace:__tsan
StoreShadow	lib/tsan/rtl/tsan_rtl.cc	/^void StoreShadow(u64 *sp, u64 s) {$/;"	f	namespace:__tsan
StoreTo	lib/asan/asan_descriptions.h	/^  void StoreTo(AddressDescriptionData *dst) const { *dst = data; }$/;"	f	class:__asan::AddressDescription
StoreToTLS	test/lsan/TestCases/Linux/use_tls_dynamic.cc	/^extern "C" void **StoreToTLS(void *p) {$/;"	f
StoredArgv	lib/sanitizer_common/sanitizer_fuchsia.cc	/^char **StoredArgv;$/;"	m	namespace:__sanitizer	file:
StoredEnviron	lib/sanitizer_common/sanitizer_fuchsia.cc	/^char **StoredEnviron;$/;"	m	namespace:__sanitizer	file:
StoredRange	lib/scudo/scudo_allocator_secondary.h	/^    ReservedAddressRange StoredRange;$/;"	m	struct:LargeChunk::Header
StrFlag	lib/fuzzer/FuzzerDriver.cpp	/^  const char **StrFlag;$/;"	m	struct:fuzzer::FlagDescription	file:
StrLenOOBTestTemplate	lib/asan/tests/asan_str_test.cc	/^void StrLenOOBTestTemplate(char *str, size_t length, OOBKind oob_kind) {$/;"	f
String	lib/ubsan/ubsan_diag.h	/^      const char *String;$/;"	m	union:__ubsan::Diag::Arg::__anon104
StripFunctionName	lib/sanitizer_common/sanitizer_stacktrace_printer.cc	/^static const char *StripFunctionName(const char *function, const char *prefix) {$/;"	f	namespace:__sanitizer
StripModuleName	lib/sanitizer_common/sanitizer_common.cc	/^const char *StripModuleName(const char *module) {$/;"	f	namespace:__sanitizer
StripPathPrefix	lib/sanitizer_common/sanitizer_common.cc	/^const char *StripPathPrefix(const char *filepath,$/;"	f	namespace:__sanitizer
StripPrefix	lib/sanitizer_common/sanitizer_suppressions.cc	/^static const char *StripPrefix(const char *str, const char *prefix) {$/;"	f	namespace:__sanitizer
Struct	lib/esan/cache_frag.cpp	/^  StructInfo *Struct;$/;"	m	struct:__esan::StructCounter	file:
StructByVal	lib/msan/tests/msan_test.cc	/^struct StructByVal {$/;"	s	file:
StructByValTestFunc	lib/msan/tests/msan_test.cc	/^NOINLINE void StructByValTestFunc(struct StructByVal s) {$/;"	f
StructByValTestFunc1	lib/msan/tests/msan_test.cc	/^NOINLINE void StructByValTestFunc1(struct StructByVal s) {$/;"	f
StructByValTestFunc2	lib/msan/tests/msan_test.cc	/^NOINLINE void StructByValTestFunc2(int z, struct StructByVal s) {$/;"	f
StructCounter	lib/esan/cache_frag.cpp	/^struct StructCounter {$/;"	s	namespace:__esan	file:
StructHashMap	lib/esan/cache_frag.cpp	/^typedef AddrHashMap<StructCounter, 31051> StructHashMap;$/;"	t	namespace:__esan	file:
StructInfo	lib/esan/cache_frag.cpp	/^struct StructInfo {$/;"	s	namespace:__esan	file:
StructMap	lib/esan/cache_frag.cpp	/^  StructHashMap StructMap;$/;"	m	struct:__esan::Context	file:
StructName	lib/esan/cache_frag.cpp	/^  const char *StructName;$/;"	m	struct:__esan::StructInfo	file:
StructWithBitField	lib/asan/tests/asan_test.cc	/^struct StructWithBitField {$/;"	s	file:
StructWithBitFields_8_24	lib/asan/tests/asan_test.cc	/^struct StructWithBitFields_8_24 {$/;"	s	file:
StructWithDtor	lib/msan/tests/msan_test.cc	/^struct StructWithDtor {$/;"	s	file:
StructWithDtor	test/asan/TestCases/initialization-nobug.cc	/^struct StructWithDtor {$/;"	s	file:
StructWithHole	lib/msan/tests/msan_test.cc	/^struct StructWithHole {$/;"	s	file:
Structs	lib/esan/cache_frag.cpp	/^  StructInfo *Structs;$/;"	m	struct:__esan::CacheFragInfo	file:
Sub	lib/sanitizer_common/sanitizer_allocator_stats.h	/^  void Sub(AllocatorStat i, uptr v) {$/;"	f	class:AllocatorStats
SubWorker	test/tsan/mmap_stress.cc	/^void *SubWorker(void *arg) {$/;"	f
SubobjectTypeName	lib/ubsan/ubsan_type_hash.h	/^  const char *SubobjectTypeName;$/;"	m	class:__ubsan::DynamicTypeInfo
SubstituteForFlagValue	lib/sanitizer_common/sanitizer_flags.cc	/^void SubstituteForFlagValue(const char *s, char *out, uptr out_size) {$/;"	f	namespace:__sanitizer
SuccessCount	lib/fuzzer/FuzzerDictionary.h	/^  size_t SuccessCount = 0;$/;"	m	class:fuzzer::DictionaryEntry
SummaryLoc	lib/ubsan/ubsan_diag.h	/^  Location SummaryLoc;$/;"	m	class:__ubsan::ScopedReport
SupportsColoredOutput	lib/sanitizer_common/sanitizer_posix_libcdep.cc	/^bool SupportsColoredOutput(fd_t fd) {$/;"	f	namespace:__sanitizer
SupportsColoredOutput	lib/sanitizer_common/sanitizer_rtems.cc	/^bool SupportsColoredOutput(fd_t fd) { return false; }$/;"	f	namespace:__sanitizer
SupportsColoredOutput	lib/sanitizer_common/sanitizer_win.cc	/^bool SupportsColoredOutput(fd_t fd) {$/;"	f	namespace:__sanitizer
SupportsColors	lib/sanitizer_common/sanitizer_symbolizer_report.cc	/^bool ReportFile::SupportsColors() {$/;"	f	class:__sanitizer::ReportFile
SuppressErrorReport	lib/asan/asan_report.cc	/^static bool SuppressErrorReport(uptr pc) {$/;"	f	namespace:__asan
Suppression	lib/sanitizer_common/sanitizer_suppressions.h	/^  Suppression() { internal_memset(this, 0, sizeof(*this)); }$/;"	f	struct:__sanitizer::Suppression
Suppression	lib/sanitizer_common/sanitizer_suppressions.h	/^struct Suppression {$/;"	s	namespace:__sanitizer
SuppressionAt	lib/sanitizer_common/sanitizer_suppressions.cc	/^const Suppression *SuppressionContext::SuppressionAt(uptr i) const {$/;"	f	class:__sanitizer::SuppressionContext
SuppressionContext	lib/sanitizer_common/sanitizer_suppressions.cc	/^SuppressionContext::SuppressionContext(const char *suppression_types[],$/;"	f	class:__sanitizer::SuppressionContext
SuppressionContext	lib/sanitizer_common/sanitizer_suppressions.h	/^class SuppressionContext {$/;"	c	namespace:__sanitizer
SuppressionContextTest	lib/sanitizer_common/tests/sanitizer_suppressions_test.cc	/^  SuppressionContextTest()$/;"	f	class:__sanitizer::SuppressionContextTest
SuppressionContextTest	lib/sanitizer_common/tests/sanitizer_suppressions_test.cc	/^class SuppressionContextTest : public ::testing::Test {$/;"	c	namespace:__sanitizer	file:
SuppressionCount	lib/sanitizer_common/sanitizer_suppressions.cc	/^uptr SuppressionContext::SuppressionCount() const {$/;"	f	class:__sanitizer::SuppressionContext
Suppressions	lib/tsan/rtl/tsan_suppressions.cc	/^SuppressionContext *Suppressions() {$/;"	f	namespace:__tsan
SuspendAllThreads	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^bool ThreadSuspender::SuspendAllThreads() {$/;"	f	class:__sanitizer::ThreadSuspender
SuspendHandler	test/tsan/signal_recursive.cc	/^static void SuspendHandler(int sig) {$/;"	f	file:
SuspendThread	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^bool ThreadSuspender::SuspendThread(tid_t tid) {$/;"	f	class:__sanitizer::ThreadSuspender
SuspendedThreadInfo	lib/sanitizer_common/sanitizer_stoptheworld_mac.cc	/^} SuspendedThreadInfo;$/;"	t	namespace:__sanitizer	typeref:struct:__sanitizer::__anon101	file:
SuspendedThreadsList	lib/sanitizer_common/sanitizer_stoptheworld.h	/^class SuspendedThreadsList {$/;"	c	namespace:__sanitizer
SuspendedThreadsListLinux	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^  SuspendedThreadsListLinux() { thread_ids_.reserve(1024); }$/;"	f	class:__sanitizer::SuspendedThreadsListLinux
SuspendedThreadsListLinux	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^class SuspendedThreadsListLinux : public SuspendedThreadsList {$/;"	c	namespace:__sanitizer	file:
SuspendedThreadsListMac	lib/sanitizer_common/sanitizer_stoptheworld_mac.cc	/^  SuspendedThreadsListMac() : threads_(1024) {}$/;"	f	class:__sanitizer::SuspendedThreadsListMac
SuspendedThreadsListMac	lib/sanitizer_common/sanitizer_stoptheworld_mac.cc	/^class SuspendedThreadsListMac : public SuspendedThreadsList {$/;"	c	namespace:__sanitizer	file:
SuspenderThread	lib/sanitizer_common/tests/sanitizer_stoptheworld_testlib.cc	/^void *SuspenderThread(void *argument) {$/;"	f	namespace:__anon60
SwallowCache	lib/sanitizer_common/sanitizer_allocator_combined.h	/^  void SwallowCache(AllocatorCache *cache) {$/;"	f	class:CombinedAllocator
Swap	lib/sanitizer_common/sanitizer_common.h	/^template<class T> void Swap(T& a, T& b) {$/;"	f	namespace:__sanitizer
Switch	test/fuzzer/Switch2Test.cpp	/^int Switch(int a) {$/;"	f
Switch	test/fuzzer/SwitchTest.cpp	/^bool Switch(const uint8_t *Data, size_t Size) {$/;"	f
SymCleanup	lib/sanitizer_common/sanitizer_dbghelp.h	/^extern decltype(::SymCleanup) *SymCleanup;$/;"	m	namespace:__sanitizer
SymCleanup	lib/sanitizer_common/sanitizer_symbolizer_win.cc	/^decltype(::SymCleanup) *SymCleanup;$/;"	m	namespace:__sanitizer	file:
SymFromAddr	lib/sanitizer_common/sanitizer_dbghelp.h	/^extern decltype(::SymFromAddr) *SymFromAddr;$/;"	m	namespace:__sanitizer
SymFromAddr	lib/sanitizer_common/sanitizer_symbolizer_win.cc	/^decltype(::SymFromAddr) *SymFromAddr;$/;"	m	namespace:__sanitizer	file:
SymFunctionTableAccess64	lib/sanitizer_common/sanitizer_dbghelp.h	/^extern decltype(::SymFunctionTableAccess64) *SymFunctionTableAccess64;$/;"	m	namespace:__sanitizer
SymFunctionTableAccess64	lib/sanitizer_common/sanitizer_symbolizer_win.cc	/^decltype(::SymFunctionTableAccess64) *SymFunctionTableAccess64;$/;"	m	namespace:__sanitizer	file:
SymGetLineFromAddr64	lib/sanitizer_common/sanitizer_dbghelp.h	/^extern decltype(::SymGetLineFromAddr64) *SymGetLineFromAddr64;$/;"	m	namespace:__sanitizer
SymGetLineFromAddr64	lib/sanitizer_common/sanitizer_symbolizer_win.cc	/^decltype(::SymGetLineFromAddr64) *SymGetLineFromAddr64;$/;"	m	namespace:__sanitizer	file:
SymGetModuleBase64	lib/sanitizer_common/sanitizer_dbghelp.h	/^extern decltype(::SymGetModuleBase64) *SymGetModuleBase64;$/;"	m	namespace:__sanitizer
SymGetModuleBase64	lib/sanitizer_common/sanitizer_symbolizer_win.cc	/^decltype(::SymGetModuleBase64) *SymGetModuleBase64;$/;"	m	namespace:__sanitizer	file:
SymGetSearchPathW	lib/sanitizer_common/sanitizer_dbghelp.h	/^extern decltype(::SymGetSearchPathW) *SymGetSearchPathW;$/;"	m	namespace:__sanitizer
SymGetSearchPathW	lib/sanitizer_common/sanitizer_symbolizer_win.cc	/^decltype(::SymGetSearchPathW) *SymGetSearchPathW;$/;"	m	namespace:__sanitizer	file:
SymInitialize	lib/sanitizer_common/sanitizer_dbghelp.h	/^extern decltype(::SymInitialize) *SymInitialize;$/;"	m	namespace:__sanitizer
SymInitialize	lib/sanitizer_common/sanitizer_symbolizer_win.cc	/^decltype(::SymInitialize) *SymInitialize;$/;"	m	namespace:__sanitizer	file:
SymSetOptions	lib/sanitizer_common/sanitizer_dbghelp.h	/^extern decltype(::SymSetOptions) *SymSetOptions;$/;"	m	namespace:__sanitizer
SymSetOptions	lib/sanitizer_common/sanitizer_symbolizer_win.cc	/^decltype(::SymSetOptions) *SymSetOptions;$/;"	m	namespace:__sanitizer	file:
SymSetSearchPathW	lib/sanitizer_common/sanitizer_dbghelp.h	/^extern decltype(::SymSetSearchPathW) *SymSetSearchPathW;$/;"	m	namespace:__sanitizer
SymSetSearchPathW	lib/sanitizer_common/sanitizer_symbolizer_win.cc	/^decltype(::SymSetSearchPathW) *SymSetSearchPathW;$/;"	m	namespace:__sanitizer	file:
SymbolizationLoop	lib/asan/scripts/asan_symbolize.py	/^class SymbolizationLoop(object):$/;"	c
SymbolizeCallback	lib/sanitizer_common/sanitizer_stacktrace.h	/^  typedef bool (*SymbolizeCallback)(const void *pc, char *out_buffer,$/;"	t	struct:__sanitizer::StackTrace
SymbolizeCaller	test/sanitizer_common/TestCases/symbolize_pc.cc	/^void SymbolizeCaller() {$/;"	f
SymbolizeCode	lib/tsan/go/tsan_go.cc	/^SymbolizedStack *SymbolizeCode(uptr addr) {$/;"	f	namespace:__tsan
SymbolizeCode	lib/tsan/rtl/tsan_symbolize.cc	/^SymbolizedStack *SymbolizeCode(uptr addr) {$/;"	f	namespace:__tsan
SymbolizeCodeCallback	lib/sanitizer_common/sanitizer_symbolizer_libbacktrace.cc	/^static void SymbolizeCodeCallback(void *vdata, uintptr_t addr,$/;"	f	file:
SymbolizeCodeCallbackArg	lib/sanitizer_common/sanitizer_symbolizer_libbacktrace.cc	/^struct SymbolizeCodeCallbackArg {$/;"	s	namespace:__sanitizer::__anon99	file:
SymbolizeCodeContext	lib/tsan/go/tsan_go.cc	/^struct SymbolizeCodeContext {$/;"	s	namespace:__tsan	file:
SymbolizeCodePCInfoCallback	lib/sanitizer_common/sanitizer_symbolizer_libbacktrace.cc	/^static int SymbolizeCodePCInfoCallback(void *vdata, uintptr_t addr,$/;"	f	file:
SymbolizeData	lib/sanitizer_common/sanitizer_symbolizer_internal.h	/^  virtual bool SymbolizeData(uptr addr, DataInfo *info) {$/;"	f	class:__sanitizer::SymbolizerTool
SymbolizeData	lib/sanitizer_common/sanitizer_symbolizer_libbacktrace.cc	/^bool LibbacktraceSymbolizer::SymbolizeData(uptr addr, DataInfo *info) {$/;"	f	class:__sanitizer::LibbacktraceSymbolizer
SymbolizeData	lib/sanitizer_common/sanitizer_symbolizer_libcdep.cc	/^bool LLVMSymbolizer::SymbolizeData(uptr addr, DataInfo *info) {$/;"	f	class:__sanitizer::LLVMSymbolizer
SymbolizeData	lib/sanitizer_common/sanitizer_symbolizer_libcdep.cc	/^bool Symbolizer::SymbolizeData(uptr addr, DataInfo *info) {$/;"	f	class:__sanitizer::Symbolizer
SymbolizeData	lib/sanitizer_common/sanitizer_symbolizer_mac.cc	/^bool AtosSymbolizer::SymbolizeData(uptr addr, DataInfo *info) {$/;"	f	class:__sanitizer::AtosSymbolizer
SymbolizeData	lib/sanitizer_common/sanitizer_symbolizer_mac.cc	/^bool DlAddrSymbolizer::SymbolizeData(uptr addr, DataInfo *datainfo) {$/;"	f	class:__sanitizer::DlAddrSymbolizer
SymbolizeData	lib/sanitizer_common/sanitizer_symbolizer_markup.cc	/^bool Symbolizer::SymbolizeData(uptr addr, DataInfo *info) {$/;"	f	class:__sanitizer::Symbolizer
SymbolizeData	lib/tsan/go/tsan_go.cc	/^ReportLocation *SymbolizeData(uptr addr) {$/;"	f	namespace:__tsan
SymbolizeData	lib/tsan/rtl/tsan_symbolize.cc	/^ReportLocation *SymbolizeData(uptr addr) {$/;"	f	namespace:__tsan
SymbolizeData	test/sanitizer_common/TestCases/symbolize_pc.cc	/^void SymbolizeData() {$/;"	f
SymbolizeDataCallback	lib/sanitizer_common/sanitizer_symbolizer_libbacktrace.cc	/^static void SymbolizeDataCallback(void *vdata, uintptr_t, const char *symname,$/;"	f	file:
SymbolizeDataContext	lib/tsan/go/tsan_go.cc	/^struct SymbolizeDataContext {$/;"	s	namespace:__tsan	file:
SymbolizeFlush	lib/tsan/rtl/tsan_symbolize.cc	/^void SymbolizeFlush() {$/;"	f	namespace:__tsan
SymbolizeMutex	lib/fuzzer/FuzzerUtil.cpp	/^static std::mutex SymbolizeMutex;$/;"	m	namespace:fuzzer	file:
SymbolizePC	lib/sanitizer_common/sanitizer_symbolizer_internal.h	/^  virtual bool SymbolizePC(uptr addr, SymbolizedStack *stack) {$/;"	f	class:__sanitizer::SymbolizerTool
SymbolizePC	lib/sanitizer_common/sanitizer_symbolizer_libbacktrace.cc	/^bool LibbacktraceSymbolizer::SymbolizePC(uptr addr, SymbolizedStack *stack) {$/;"	f	class:__sanitizer::LibbacktraceSymbolizer
SymbolizePC	lib/sanitizer_common/sanitizer_symbolizer_libcdep.cc	/^SymbolizedStack *Symbolizer::SymbolizePC(uptr addr) {$/;"	f	class:__sanitizer::Symbolizer
SymbolizePC	lib/sanitizer_common/sanitizer_symbolizer_libcdep.cc	/^bool LLVMSymbolizer::SymbolizePC(uptr addr, SymbolizedStack *stack) {$/;"	f	class:__sanitizer::LLVMSymbolizer
SymbolizePC	lib/sanitizer_common/sanitizer_symbolizer_mac.cc	/^bool AtosSymbolizer::SymbolizePC(uptr addr, SymbolizedStack *stack) {$/;"	f	class:__sanitizer::AtosSymbolizer
SymbolizePC	lib/sanitizer_common/sanitizer_symbolizer_mac.cc	/^bool DlAddrSymbolizer::SymbolizePC(uptr addr, SymbolizedStack *stack) {$/;"	f	class:__sanitizer::DlAddrSymbolizer
SymbolizePC	lib/sanitizer_common/sanitizer_symbolizer_markup.cc	/^SymbolizedStack *Symbolizer::SymbolizePC(uptr addr) {$/;"	f	class:__sanitizer::Symbolizer
SymbolizePC	lib/sanitizer_common/sanitizer_symbolizer_win.cc	/^bool WinSymbolizerTool::SymbolizePC(uptr addr, SymbolizedStack *frame) {$/;"	f	class:__sanitizer::WinSymbolizerTool
SymbolizeStack	lib/tsan/rtl/tsan_rtl_report.cc	/^static ReportStack *SymbolizeStack(StackTrace trace) {$/;"	f	namespace:__tsan
SymbolizeStackId	lib/tsan/rtl/tsan_rtl_report.cc	/^ReportStack *SymbolizeStackId(u32 stack_id) {$/;"	f	namespace:__tsan
SymbolizedLoc	lib/ubsan/ubsan_diag.h	/^  const SymbolizedStack *SymbolizedLoc;  \/\/ Not owned.$/;"	m	class:__ubsan::Location
SymbolizedStack	lib/sanitizer_common/sanitizer_symbolizer.cc	/^SymbolizedStack::SymbolizedStack() : next(nullptr), info() {}$/;"	f	class:__sanitizer::SymbolizedStack
SymbolizedStack	lib/sanitizer_common/sanitizer_symbolizer.h	/^struct SymbolizedStack {$/;"	s	namespace:__sanitizer
SymbolizedStackBuilder	lib/tsan/rtl/tsan_symbolize.cc	/^struct SymbolizedStackBuilder {$/;"	s	namespace:__tsan	file:
SymbolizedStackHolder	lib/ubsan/ubsan_diag.h	/^  explicit SymbolizedStackHolder(SymbolizedStack *Stack = nullptr)$/;"	f	class:__ubsan::SymbolizedStackHolder
SymbolizedStackHolder	lib/ubsan/ubsan_diag.h	/^class SymbolizedStackHolder {$/;"	c	namespace:__ubsan
Symbolizer	lib/asan/scripts/asan_symbolize.py	/^class Symbolizer(object):$/;"	c
Symbolizer	lib/sanitizer_common/sanitizer_symbolizer.cc	/^Symbolizer::Symbolizer(IntrusiveList<SymbolizerTool> tools)$/;"	f	class:__sanitizer::Symbolizer
SymbolizerProcess	lib/sanitizer_common/sanitizer_symbolizer_internal.h	/^class SymbolizerProcess {$/;"	c	namespace:__sanitizer
SymbolizerProcess	lib/sanitizer_common/sanitizer_symbolizer_libcdep.cc	/^SymbolizerProcess::SymbolizerProcess(const char *path, bool use_forkpty)$/;"	f	class:__sanitizer::SymbolizerProcess
SymbolizerScope	lib/hwasan/hwasan.h	/^  SymbolizerScope() { EnterSymbolizer(); }$/;"	f	struct:__hwasan::SymbolizerScope
SymbolizerScope	lib/hwasan/hwasan.h	/^struct SymbolizerScope {$/;"	s	namespace:__hwasan
SymbolizerScope	lib/msan/msan.h	/^  SymbolizerScope() { EnterSymbolizer(); }$/;"	f	struct:__msan::SymbolizerScope
SymbolizerScope	lib/msan/msan.h	/^struct SymbolizerScope {$/;"	s	namespace:__msan
SymbolizerScope	lib/sanitizer_common/sanitizer_symbolizer.cc	/^Symbolizer::SymbolizerScope::SymbolizerScope(const Symbolizer *sym)$/;"	f	class:__sanitizer::Symbolizer::SymbolizerScope
SymbolizerScope	lib/sanitizer_common/sanitizer_symbolizer.h	/^  class SymbolizerScope {$/;"	c	class:__sanitizer::final
SymbolizerTool	lib/sanitizer_common/sanitizer_symbolizer_internal.h	/^  SymbolizerTool() : next(nullptr) { }$/;"	f	class:__sanitizer::SymbolizerTool
SymbolizerTool	lib/sanitizer_common/sanitizer_symbolizer_internal.h	/^class SymbolizerTool {$/;"	c	namespace:__sanitizer
Sync	test/tsan/atomic_store.cc	/^long long Sync;$/;"	v
SyncAddressForObjCObject	lib/tsan/rtl/tsan_interceptors_mac.cc	/^static uptr SyncAddressForObjCObject(void *obj) {$/;"	f	namespace:__tsan
SyncAddressForTaggedPointer	lib/tsan/rtl/tsan_interceptors_mac.cc	/^static uptr SyncAddressForTaggedPointer(void *obj) {$/;"	f	namespace:__tsan
SyncClock	lib/tsan/rtl/tsan_clock.cc	/^SyncClock::SyncClock() {$/;"	f	class:__tsan::SyncClock
SyncVar	lib/tsan/rtl/tsan_sync.cc	/^SyncVar::SyncVar()$/;"	f	class:__tsan::SyncVar
SyncVar	lib/tsan/rtl/tsan_sync.h	/^struct SyncVar {$/;"	s	namespace:__tsan
SystemSymbolizerFactory	lib/asan/scripts/asan_symbolize.py	/^def SystemSymbolizerFactory(system, addr, binary, arch):$/;"	f
SystemVMA	test/msan/test.h	/^unsigned long SystemVMA () {$/;"	f
T	lib/sanitizer_common/tests/sanitizer_mutex_test.cc	/^  typedef u64 T;$/;"	t	class:__sanitizer::TestData	file:
T	lib/tsan/tests/unit/tsan_mutex_test.cc	/^  typedef u64 T;$/;"	t	class:__tsan::TestData	file:
T	test/cfi/mfcall.cpp	/^struct T {$/;"	s	file:
T	test/lsan/TestCases/new_array_with_dtor_0.cc	/^struct T {$/;"	s	file:
T	test/tsan/atomic_norace.cc	/^typedef long long T;$/;"	t	file:
T	test/tsan/atomic_race.cc	/^typedef long long T;$/;"	t	file:
T	test/tsan/deadlock_detector_stress_test.cc	/^  bool T(size_t i) {$/;"	f	class:LockTest
T	test/ubsan/TestCases/TypeCheck/misaligned.cpp	/^struct T : S {$/;"	s	file:
T	test/ubsan/TestCases/TypeCheck/null.cpp	/^struct T {$/;"	s	file:
T	test/ubsan/TestCases/TypeCheck/vptr-virtual-base.cpp	/^struct T : virtual S {};$/;"	s	file:
T	test/ubsan/TestCases/TypeCheck/vptr.cpp	/^  T() : b(0) {}$/;"	f	struct:T
T	test/ubsan/TestCases/TypeCheck/vptr.cpp	/^struct T : S {$/;"	s	file:
TAG_ALLOC	lib/sanitizer_common/sanitizer_stacktrace.h	/^  static const int TAG_ALLOC = 1;$/;"	m	struct:__sanitizer::StackTrace
TAG_CUSTOM	lib/sanitizer_common/sanitizer_stacktrace.h	/^  static const int TAG_CUSTOM = 100; \/\/ Tool specific tags start here.$/;"	m	struct:__sanitizer::StackTrace
TAG_DEALLOC	lib/sanitizer_common/sanitizer_stacktrace.h	/^  static const int TAG_DEALLOC = 2;$/;"	m	struct:__sanitizer::StackTrace
TAG_UNKNOWN	lib/sanitizer_common/sanitizer_stacktrace.h	/^  static const int TAG_UNKNOWN = 0;$/;"	m	struct:__sanitizer::StackTrace
TAIL	include/xray/xray_interface.h	/^  TAIL = 2,$/;"	e	enum:XRayEntryType
TEST	lib/asan/tests/asan_asm_test.cc	/^TEST(AddressSanitizer, asm_flags) {$/;"	f
TEST	lib/asan/tests/asan_asm_test.cc	/^TEST(AddressSanitizer, asm_load_store) {$/;"	f
TEST	lib/asan/tests/asan_asm_test.cc	/^TEST(AddressSanitizer, asm_rep_movs) {$/;"	f
TEST	lib/asan/tests/asan_asm_test.cc	/^TEST(AddressSanitizer, asm_rw) {$/;"	f
TEST	lib/asan/tests/asan_benchmarks_test.cc	/^TEST(AddressSanitizer, BorderAccessBenchmark) {$/;"	f
TEST	lib/asan/tests/asan_benchmarks_test.cc	/^TEST(AddressSanitizer, FakeStackBenchmark) {$/;"	f
TEST	lib/asan/tests/asan_benchmarks_test.cc	/^TEST(AddressSanitizer, ManyAccessBenchmark) {$/;"	f
TEST	lib/asan/tests/asan_fake_stack_test.cc	/^TEST(FakeStack, Allocate) {$/;"	f	namespace:__asan
TEST	lib/asan/tests/asan_fake_stack_test.cc	/^TEST(FakeStack, CreateDestroy) {$/;"	f	namespace:__asan
TEST	lib/asan/tests/asan_fake_stack_test.cc	/^TEST(FakeStack, FlagsOffset) {$/;"	f	namespace:__asan
TEST	lib/asan/tests/asan_fake_stack_test.cc	/^TEST(FakeStack, FlagsSize) {$/;"	f	namespace:__asan
TEST	lib/asan/tests/asan_fake_stack_test.cc	/^TEST(FakeStack, GetFrame) {$/;"	f	namespace:__asan
TEST	lib/asan/tests/asan_fake_stack_test.cc	/^TEST(FakeStack, ModuloNumberOfFrames) {$/;"	f	namespace:__asan
TEST	lib/asan/tests/asan_fake_stack_test.cc	/^TEST(FakeStack, RecursiveStressTest) {$/;"	f	namespace:__asan
TEST	lib/asan/tests/asan_fake_stack_test.cc	/^TEST(FakeStack, RequiredSize) {$/;"	f	namespace:__asan
TEST	lib/asan/tests/asan_interface_test.cc	/^TEST(AddressSanitizerInterface, DISABLED_InvalidPoisonAndUnpoisonCallsTest) {$/;"	f
TEST	lib/asan/tests/asan_interface_test.cc	/^TEST(AddressSanitizerInterface, DISABLED_StressLargeMemset) {$/;"	f
TEST	lib/asan/tests/asan_interface_test.cc	/^TEST(AddressSanitizerInterface, DISABLED_StressSmallMemset) {$/;"	f
TEST	lib/asan/tests/asan_interface_test.cc	/^TEST(AddressSanitizerInterface, DeathCallbackTest) {$/;"	f
TEST	lib/asan/tests/asan_interface_test.cc	/^TEST(AddressSanitizerInterface, GetAllocatedSizeAndOwnershipTest) {$/;"	f
TEST	lib/asan/tests/asan_interface_test.cc	/^TEST(AddressSanitizerInterface, GetCurrentAllocatedBytesTest) {$/;"	f
TEST	lib/asan/tests/asan_interface_test.cc	/^TEST(AddressSanitizerInterface, GetEstimatedAllocatedSize) {$/;"	f
TEST	lib/asan/tests/asan_interface_test.cc	/^TEST(AddressSanitizerInterface, GetHeapSizeTest) {$/;"	f
TEST	lib/asan/tests/asan_interface_test.cc	/^TEST(AddressSanitizerInterface, GetOwnershipStressTest) {$/;"	f
TEST	lib/asan/tests/asan_interface_test.cc	/^TEST(AddressSanitizerInterface, GlobalRedzones) {$/;"	f
TEST	lib/asan/tests/asan_interface_test.cc	/^TEST(AddressSanitizerInterface, HandleNoReturnTest) {$/;"	f
TEST	lib/asan/tests/asan_interface_test.cc	/^TEST(AddressSanitizerInterface, ManyThreadsWithStatsStressTest) {$/;"	f
TEST	lib/asan/tests/asan_interface_test.cc	/^TEST(AddressSanitizerInterface, OverlappingPoisonMemoryRegionTest) {$/;"	f
TEST	lib/asan/tests/asan_interface_test.cc	/^TEST(AddressSanitizerInterface, PoisonedRegion) {$/;"	f
TEST	lib/asan/tests/asan_interface_test.cc	/^TEST(AddressSanitizerInterface, PoisoningStressTest) {$/;"	f
TEST	lib/asan/tests/asan_interface_test.cc	/^TEST(AddressSanitizerInterface, PushAndPopWithPoisoningTest) {$/;"	f
TEST	lib/asan/tests/asan_interface_test.cc	/^TEST(AddressSanitizerInterface, SimplePoisonMemoryRegionTest) {$/;"	f
TEST	lib/asan/tests/asan_internal_interface_test.cc	/^TEST(AddressSanitizerInternalInterface, SetShadow) {$/;"	f
TEST	lib/asan/tests/asan_mac_test.cc	/^TEST(AddressSanitizerMac, CFAllocatorDefaultDoubleFree) {$/;"	f
TEST	lib/asan/tests/asan_mac_test.cc	/^TEST(AddressSanitizerMac, CFAllocatorDefaultDoubleFree_ChildPhread) {$/;"	f
TEST	lib/asan/tests/asan_mac_test.cc	/^TEST(AddressSanitizerMac, CFAllocatorMallocDoubleFree) {$/;"	f
TEST	lib/asan/tests/asan_mac_test.cc	/^TEST(AddressSanitizerMac, CFAllocator_PassMemoryToAnotherThread) {$/;"	f	namespace:__anon41
TEST	lib/asan/tests/asan_mac_test.cc	/^TEST(AddressSanitizerMac, CFStringCreateCopy) {$/;"	f
TEST	lib/asan/tests/asan_mac_test.cc	/^TEST(AddressSanitizerMac, DISABLED_CFAllocatorMallocZoneDoubleFree) {$/;"	f
TEST	lib/asan/tests/asan_mac_test.cc	/^TEST(AddressSanitizerMac, DISABLED_CFAllocatorSystemDefaultDoubleFree) {$/;"	f
TEST	lib/asan/tests/asan_mac_test.cc	/^TEST(AddressSanitizerMac, DISABLED_TSDWorkqueueTest) {$/;"	f
TEST	lib/asan/tests/asan_mac_test.cc	/^TEST(AddressSanitizerMac, GCDDispatchAfter) {$/;"	f
TEST	lib/asan/tests/asan_mac_test.cc	/^TEST(AddressSanitizerMac, GCDDispatchAsync) {$/;"	f
TEST	lib/asan/tests/asan_mac_test.cc	/^TEST(AddressSanitizerMac, GCDDispatchSync) {$/;"	f
TEST	lib/asan/tests/asan_mac_test.cc	/^TEST(AddressSanitizerMac, GCDGroupAsync) {$/;"	f
TEST	lib/asan/tests/asan_mac_test.cc	/^TEST(AddressSanitizerMac, GCDReuseWqthreadsAsync) {$/;"	f
TEST	lib/asan/tests/asan_mac_test.cc	/^TEST(AddressSanitizerMac, GCDReuseWqthreadsSync) {$/;"	f
TEST	lib/asan/tests/asan_mac_test.cc	/^TEST(AddressSanitizerMac, GCDSourceCancel) {$/;"	f
TEST	lib/asan/tests/asan_mac_test.cc	/^TEST(AddressSanitizerMac, GCDSourceEvent) {$/;"	f
TEST	lib/asan/tests/asan_mac_test.cc	/^TEST(AddressSanitizerMac, MallocIntrospectionLock) {$/;"	f
TEST	lib/asan/tests/asan_mac_test.cc	/^TEST(AddressSanitizerMac, Mstats) {$/;"	f
TEST	lib/asan/tests/asan_mac_test.cc	/^TEST(AddressSanitizerMac, NSObjectOOB) {$/;"	f
TEST	lib/asan/tests/asan_mac_test.cc	/^TEST(AddressSanitizerMac, NSURLDeallocation) {$/;"	f
TEST	lib/asan/tests/asan_mem_test.cc	/^TEST(AddressSanitizer, LargeOOBInMemset) {$/;"	f
TEST	lib/asan/tests/asan_mem_test.cc	/^TEST(AddressSanitizer, MemCmpOOBTest) {$/;"	f
TEST	lib/asan/tests/asan_mem_test.cc	/^TEST(AddressSanitizer, MemCpyOOBTest) {$/;"	f
TEST	lib/asan/tests/asan_mem_test.cc	/^TEST(AddressSanitizer, MemMoveOOBTest) {$/;"	f
TEST	lib/asan/tests/asan_mem_test.cc	/^TEST(AddressSanitizer, MemSetOOBTest) {$/;"	f
TEST	lib/asan/tests/asan_noinst_test.cc	/^TEST(AddressSanitizer, DISABLED_InternalPrintShadow) {$/;"	f
TEST	lib/asan/tests/asan_noinst_test.cc	/^TEST(AddressSanitizer, InternalSimpleDeathTest) {$/;"	f
TEST	lib/asan/tests/asan_noinst_test.cc	/^TEST(AddressSanitizer, LoadStoreCallbacks) {$/;"	f
TEST	lib/asan/tests/asan_noinst_test.cc	/^TEST(AddressSanitizer, NoInstMallocTest) {$/;"	f
TEST	lib/asan/tests/asan_noinst_test.cc	/^TEST(AddressSanitizer, QuarantineTest) {$/;"	f
TEST	lib/asan/tests/asan_noinst_test.cc	/^TEST(AddressSanitizer, ShadowRegionIsPoisonedTest) {$/;"	f
TEST	lib/asan/tests/asan_noinst_test.cc	/^TEST(AddressSanitizer, ThreadedMallocStressTest) {$/;"	f
TEST	lib/asan/tests/asan_noinst_test.cc	/^TEST(AddressSanitizer, ThreadedOneSizeMallocStressTest) {$/;"	f
TEST	lib/asan/tests/asan_noinst_test.cc	/^TEST(AddressSanitizer, ThreadedQuarantineTest) {$/;"	f
TEST	lib/asan/tests/asan_oob_test.cc	/^TEST(AddressSanitizer, DISABLED_DemoOOBLeftHigh) {$/;"	f
TEST	lib/asan/tests/asan_oob_test.cc	/^TEST(AddressSanitizer, DISABLED_DemoOOBLeftLow) {$/;"	f
TEST	lib/asan/tests/asan_oob_test.cc	/^TEST(AddressSanitizer, DISABLED_DemoOOBRightHigh) {$/;"	f
TEST	lib/asan/tests/asan_oob_test.cc	/^TEST(AddressSanitizer, DISABLED_DemoOOBRightLow) {$/;"	f
TEST	lib/asan/tests/asan_oob_test.cc	/^TEST(AddressSanitizer, LargeOOBRightTest) {$/;"	f
TEST	lib/asan/tests/asan_oob_test.cc	/^TEST(AddressSanitizer, OOBRightTest) {$/;"	f
TEST	lib/asan/tests/asan_oob_test.cc	/^TEST(AddressSanitizer, OOB_char) {$/;"	f
TEST	lib/asan/tests/asan_oob_test.cc	/^TEST(AddressSanitizer, OOB_int) {$/;"	f
TEST	lib/asan/tests/asan_str_test.cc	/^TEST(AddressSanitizer, AtoiAndFriendsOOBTest) {$/;"	f
TEST	lib/asan/tests/asan_str_test.cc	/^TEST(AddressSanitizer, MAYBE_StrDupOOBTest) {$/;"	f
TEST	lib/asan/tests/asan_str_test.cc	/^TEST(AddressSanitizer, MAYBE_StrNDupOOBTest) {$/;"	f
TEST	lib/asan/tests/asan_str_test.cc	/^TEST(AddressSanitizer, StrArgsOverlapTest) {$/;"	f
TEST	lib/asan/tests/asan_str_test.cc	/^TEST(AddressSanitizer, StrCaseCmpOOBTest) {$/;"	f
TEST	lib/asan/tests/asan_str_test.cc	/^TEST(AddressSanitizer, StrCatOOBTest) {$/;"	f
TEST	lib/asan/tests/asan_str_test.cc	/^TEST(AddressSanitizer, StrChrAndIndexOOBTest) {$/;"	f
TEST	lib/asan/tests/asan_str_test.cc	/^TEST(AddressSanitizer, StrCmpAndFriendsLogicTest) {$/;"	f
TEST	lib/asan/tests/asan_str_test.cc	/^TEST(AddressSanitizer, StrCmpOOBTest) {$/;"	f
TEST	lib/asan/tests/asan_str_test.cc	/^TEST(AddressSanitizer, StrCpyOOBTest) {$/;"	f
TEST	lib/asan/tests/asan_str_test.cc	/^TEST(AddressSanitizer, StrLenOOBTest) {$/;"	f
TEST	lib/asan/tests/asan_str_test.cc	/^TEST(AddressSanitizer, StrNCaseCmpOOBTest) {$/;"	f
TEST	lib/asan/tests/asan_str_test.cc	/^TEST(AddressSanitizer, StrNCatOOBTest) {$/;"	f
TEST	lib/asan/tests/asan_str_test.cc	/^TEST(AddressSanitizer, StrNCmpOOBTest) {$/;"	f
TEST	lib/asan/tests/asan_str_test.cc	/^TEST(AddressSanitizer, StrNCpyOOBTest) {$/;"	f
TEST	lib/asan/tests/asan_str_test.cc	/^TEST(AddressSanitizer, StrNLenOOBTest) {$/;"	f
TEST	lib/asan/tests/asan_str_test.cc	/^TEST(AddressSanitizer, StrtolOOBTest) {$/;"	f
TEST	lib/asan/tests/asan_str_test.cc	/^TEST(AddressSanitizer, StrtollOOBTest) {$/;"	f
TEST	lib/asan/tests/asan_str_test.cc	/^TEST(AddressSanitizer, WcsLenTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, AllocDeallocMismatch) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, AttributeNoSanitizeAddressTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, BitFieldNegativeTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, BitFieldPositiveTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, BufferOverflowAfterManyFrees) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, BuiltinLongJmpTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, CallocReturnsZeroMem) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, CallocTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, CxxExceptionTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, DISABLED_DemoDoubleFreeTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, DISABLED_DemoFunctionStaticTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, DISABLED_DemoNullDerefTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, DISABLED_DemoOOM) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, DISABLED_DemoStackTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, DISABLED_DemoThreadStackTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, DISABLED_DemoThreadedTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, DISABLED_DemoTooMuchMemoryTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, DISABLED_DemoUAFHigh) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, DISABLED_DemoUAFLowIn) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, DISABLED_DemoUAFLowLeft) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, DISABLED_DemoUAFLowRight) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, DISABLED_LargeFunctionSymbolizeTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, DISABLED_MallocFreeUnwindAndSymbolizeTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, DISABLED_MemIntrinsicUnalignedAccessTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, DISABLED_StressStackReuseAndExceptionsTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, DISABLED_TSDTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, DoubleFreeTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, FileNameInGlobalReportTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, GlobalStringConstTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, GlobalTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, HasFeatureAddressSanitizerTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, HugeMallocTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, IgnoreTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, LargeMallocTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, LargeStructCopyTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, LocalReferenceReturnTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, LongDoubleNegativeTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, LongJmpTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, MallocUsableSizeTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, ManyStackObjectsTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, ManyThreadsTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, MlockTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, PthreadExitTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, PvallocTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, ReallocFreedPointerTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, ReallocInvalidPointerTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, ReallocTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, ShadowGapTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, SigLongJmpTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, SignalTest) {$/;"	f	namespace:__anon39
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, SimpleDeathTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, SimpleStackTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, Store128Test) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, StrDupTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, StressStackReuseTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, ThreadNamesTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, ThreadStackReuseTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, ThreadedStressStackReuseTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, ThreadedTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, UAF_Packed5) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, UAF_char) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, UAF_long_double) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, UnderscopeLongJmpTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, UseThenFreeThenUseTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, VallocTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, VariousMallocsTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, WildAddressTest) {$/;"	f	namespace:__anon39
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, WrongFreeTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, ZeroSizeMallocTest) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, memalign) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, pread) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, pread64) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, pthread_getschedparam) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, read) {$/;"	f
TEST	lib/asan/tests/asan_test.cc	/^TEST(AddressSanitizer, snprintf_l) {$/;"	f
TEST	lib/fuzzer/tests/FuzzerUnittest.cpp	/^TEST(Corpus, Distribution) {$/;"	f
TEST	lib/fuzzer/tests/FuzzerUnittest.cpp	/^TEST(Fuzzer, Basename) {$/;"	f
TEST	lib/fuzzer/tests/FuzzerUnittest.cpp	/^TEST(Fuzzer, CrossOver) {$/;"	f
TEST	lib/fuzzer/tests/FuzzerUnittest.cpp	/^TEST(Fuzzer, ForEachNonZeroByte) {$/;"	f
TEST	lib/fuzzer/tests/FuzzerUnittest.cpp	/^TEST(Fuzzer, Hash) {$/;"	f
TEST	lib/fuzzer/tests/FuzzerUnittest.cpp	/^TEST(FuzzerCommand, Create) {$/;"	f
TEST	lib/fuzzer/tests/FuzzerUnittest.cpp	/^TEST(FuzzerCommand, ModifyArguments) {$/;"	f
TEST	lib/fuzzer/tests/FuzzerUnittest.cpp	/^TEST(FuzzerCommand, ModifyFlags) {$/;"	f
TEST	lib/fuzzer/tests/FuzzerUnittest.cpp	/^TEST(FuzzerCommand, SetOutput) {$/;"	f
TEST	lib/fuzzer/tests/FuzzerUnittest.cpp	/^TEST(FuzzerDictionary, ParseDictionaryFile) {$/;"	f
TEST	lib/fuzzer/tests/FuzzerUnittest.cpp	/^TEST(FuzzerDictionary, ParseOneDictionaryEntry) {$/;"	f
TEST	lib/fuzzer/tests/FuzzerUnittest.cpp	/^TEST(FuzzerMutate, AddWordFromDictionary1) {$/;"	f
TEST	lib/fuzzer/tests/FuzzerUnittest.cpp	/^TEST(FuzzerMutate, AddWordFromDictionary2) {$/;"	f
TEST	lib/fuzzer/tests/FuzzerUnittest.cpp	/^TEST(FuzzerMutate, ChangeASCIIInteger1) {$/;"	f
TEST	lib/fuzzer/tests/FuzzerUnittest.cpp	/^TEST(FuzzerMutate, ChangeASCIIInteger2) {$/;"	f
TEST	lib/fuzzer/tests/FuzzerUnittest.cpp	/^TEST(FuzzerMutate, ChangeBinaryInteger1) {$/;"	f
TEST	lib/fuzzer/tests/FuzzerUnittest.cpp	/^TEST(FuzzerMutate, ChangeBinaryInteger2) {$/;"	f
TEST	lib/fuzzer/tests/FuzzerUnittest.cpp	/^TEST(FuzzerMutate, ChangeBit1) {$/;"	f
TEST	lib/fuzzer/tests/FuzzerUnittest.cpp	/^TEST(FuzzerMutate, ChangeBit2) {$/;"	f
TEST	lib/fuzzer/tests/FuzzerUnittest.cpp	/^TEST(FuzzerMutate, ChangeByte1) {$/;"	f
TEST	lib/fuzzer/tests/FuzzerUnittest.cpp	/^TEST(FuzzerMutate, ChangeByte2) {$/;"	f
TEST	lib/fuzzer/tests/FuzzerUnittest.cpp	/^TEST(FuzzerMutate, CopyPart1) {$/;"	f
TEST	lib/fuzzer/tests/FuzzerUnittest.cpp	/^TEST(FuzzerMutate, CopyPart2) {$/;"	f
TEST	lib/fuzzer/tests/FuzzerUnittest.cpp	/^TEST(FuzzerMutate, CopyPartNoInsertAtMaxSize) {$/;"	f
TEST	lib/fuzzer/tests/FuzzerUnittest.cpp	/^TEST(FuzzerMutate, EraseBytes1) {$/;"	f
TEST	lib/fuzzer/tests/FuzzerUnittest.cpp	/^TEST(FuzzerMutate, EraseBytes2) {$/;"	f
TEST	lib/fuzzer/tests/FuzzerUnittest.cpp	/^TEST(FuzzerMutate, InsertByte1) {$/;"	f
TEST	lib/fuzzer/tests/FuzzerUnittest.cpp	/^TEST(FuzzerMutate, InsertByte2) {$/;"	f
TEST	lib/fuzzer/tests/FuzzerUnittest.cpp	/^TEST(FuzzerMutate, InsertRepeatedBytes1) {$/;"	f
TEST	lib/fuzzer/tests/FuzzerUnittest.cpp	/^TEST(FuzzerMutate, InsertRepeatedBytes2) {$/;"	f
TEST	lib/fuzzer/tests/FuzzerUnittest.cpp	/^TEST(FuzzerMutate, ShuffleBytes1) {$/;"	f
TEST	lib/fuzzer/tests/FuzzerUnittest.cpp	/^TEST(FuzzerMutate, ShuffleBytes2) {$/;"	f
TEST	lib/fuzzer/tests/FuzzerUnittest.cpp	/^TEST(FuzzerUtil, Base64) {$/;"	f
TEST	lib/fuzzer/tests/FuzzerUnittest.cpp	/^TEST(Merge, Bad) {$/;"	f
TEST	lib/fuzzer/tests/FuzzerUnittest.cpp	/^TEST(Merge, Good) {$/;"	f
TEST	lib/fuzzer/tests/FuzzerUnittest.cpp	/^TEST(Merge, Merge) {$/;"	f
TEST	lib/interception/tests/interception_linux_test.cc	/^TEST(Interception, Basic) {$/;"	f	namespace:__interception
TEST	lib/interception/tests/interception_linux_test.cc	/^TEST(Interception, GetRealFunctionAddress) {$/;"	f	namespace:__interception
TEST	lib/interception/tests/interception_win_test.cc	/^TEST(Interception, EmptyExportTable) {$/;"	f	namespace:__interception
TEST	lib/interception/tests/interception_win_test.cc	/^TEST(Interception, InternalGetProcAddress) {$/;"	f	namespace:__interception
TEST	lib/interception/tests/interception_win_test.cc	/^TEST(Interception, OverrideFunction) {$/;"	f	namespace:__interception
TEST	lib/interception/tests/interception_win_test.cc	/^TEST(Interception, OverrideFunctionMultiplePatchingIsFailing) {$/;"	f	namespace:__interception
TEST	lib/interception/tests/interception_win_test.cc	/^TEST(Interception, OverrideFunctionTwice) {$/;"	f	namespace:__interception
TEST	lib/interception/tests/interception_win_test.cc	/^TEST(Interception, OverrideFunctionWithDetour) {$/;"	f	namespace:__interception
TEST	lib/interception/tests/interception_win_test.cc	/^TEST(Interception, OverrideFunctionWithHotPatch) {$/;"	f	namespace:__interception
TEST	lib/interception/tests/interception_win_test.cc	/^TEST(Interception, OverrideFunctionWithRedirectJump) {$/;"	f	namespace:__interception
TEST	lib/interception/tests/interception_win_test.cc	/^TEST(Interception, OverrideFunctionWithTrampoline) {$/;"	f	namespace:__interception
TEST	lib/interception/tests/interception_win_test.cc	/^TEST(Interception, PatchableFunction) {$/;"	f	namespace:__interception
TEST	lib/interception/tests/interception_win_test.cc	/^TEST(Interception, PatchableFunctionPadding) {$/;"	f	namespace:__interception
TEST	lib/interception/tests/interception_win_test.cc	/^TEST(Interception, PatchableFunctionWithDetour) {$/;"	f	namespace:__interception
TEST	lib/interception/tests/interception_win_test.cc	/^TEST(Interception, PatchableFunctionWithHotPatch) {$/;"	f	namespace:__interception
TEST	lib/interception/tests/interception_win_test.cc	/^TEST(Interception, PatchableFunctionWithRedirectJump) {$/;"	f	namespace:__interception
TEST	lib/interception/tests/interception_win_test.cc	/^TEST(Interception, PatchableFunctionWithTrampoline) {$/;"	f	namespace:__interception
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, AndOr) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, ArgTest) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, CallAndRet) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, Calloc) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, CallocReturnsZeroMem) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, DISABLED_MallocNoIdent) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, DISABLED_StackStressTest) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, DISABLED_ioctl) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, DynMem) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, DynRet) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, DynRet1) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, FloatingPointTest) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, ICmpRelational) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, ICmpVectorRelational) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, IntStruct3) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, Invoke) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, LargeAllocatorUnpoisonsOnFree) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, LargeRet) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, LoadFromDirtyAddress) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, LongStruct) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, Malloc) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, MallocUsableSizeTest) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, MlockTest) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, NegativeTest1) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, Not) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, Phi1) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, Phi2) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, PositiveTest1) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, Realloc) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, Select) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, SelectPartial) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, Shift) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, SignedCompareWithZero) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, SimpleThread) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, SmallPreAllocatedStackThread) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, SmallStackThread) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, StackTest) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, StoreToDirtyAddress) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, StructByVal) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, StructWithHole) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, UnalignedLoad) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, UnalignedStore16) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, UnalignedStore16_precise) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, UnalignedStore16_precise2) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, UnalignedStore32) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, UnalignedStore64) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, UnalignedStore64_precise) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, UnalignedStore64_precise2) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, VAArgCopy) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, VAArgManyFixTest) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, VAArgManyTest) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, VAArgOverflow) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, VAArgPass) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, VAArgPtr) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, VAArgStructByVal) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, VAArgTLSOverwrite) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, VAArgTest) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, VolatileBitfield) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, asprintf) {  \/\/ NOLINT$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, bcopy) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, bind_getsockname) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, canonicalize_file_name) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, clock_getres) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, clock_gettime) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, confstr) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, dl_iterate_phdr) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, dladdr) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, dlopen) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, dlopenFailed) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, drand48_r) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, ether) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, fcvt) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, fcvt_long) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, fgetgrent) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, fgetgrent_r) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, fgetpwent) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, fread) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, frexp) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, fstatat) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, fstatvfs) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, get_current_dir_name) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, getaddrinfo) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, getcwd) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, getcwd_gnu) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, getgrent) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, getgrent_r) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, getgrnam_r) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, getgroups) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, getgroups_negative) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, getgroups_zero) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, gethostbyaddr) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, gethostbyaddr_r) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, gethostbyname) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, gethostbyname2) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, gethostbyname2_r) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, gethostbyname_r) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, gethostbyname_r_bad_host_name) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, gethostbyname_r_erange) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, gethostent) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, gethostent_r) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, gethostname) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, getitimer) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, getmntent) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, getmntent_r) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, getnameinfo) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, getpwent) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, getpwent_r) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, getpwnam_r) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, getpwnam_r_positive) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, getpwuid) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, getpwuid_r) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, getrlimit) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, getrusage) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, getsockopt) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, gettimeofday) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, inet_aton) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, inet_pton) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, lgamma) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, lgamma_r) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, lgammaf) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, lgammaf_r) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, lgammal) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, lgammal_r) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, localtime) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, localtime_r) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, lrand48_r) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, m128) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, mbrtowc) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, mbstowcs) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, mbtowc) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, memalign) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, memccpy_match) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, memccpy_match_positive) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, memccpy_nomatch) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, memccpy_nomatch_positive) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, memchr) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, memcpy) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, memcpy_unaligned) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, memmove) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, memrchr) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, mmap) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, modf) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, modff) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, modfl) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, opendir) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, overlap_memmove) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, pipe) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, pipe2) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, poll) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, poll_positive) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, posix_memalign) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, ppoll) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, pread) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, preadv) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, pthread_attr_get) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, pthread_cond_wait) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, pthread_getschedparam) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, pthread_key_create) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, ptrtoint) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, putenv) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, pvalloc) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, random_r) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, read) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, readdir) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, readdir_r) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, readlink) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, readlinkat) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, readv) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, realpath) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, realpath_null) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, remquo) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, remquof) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, remquol) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, scanf) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, sched_getaffinity) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, setenv) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, setitimer_null) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, shmat) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, shmctl) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, sigaction) {$/;"	f	namespace:__anon6
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, sigemptyset) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, sigfillset) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, sigpending) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, sigprocmask) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, sincos) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, sincosf) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, sincosl) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, snprintf) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, socketpair) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, sprintf) {  \/\/ NOLINT$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, stat) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, statfs) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, statvfs) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, stmxcsr_ldmxcsr) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, stpcpy) {  \/\/ NOLINT$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, strcat) {  \/\/ NOLINT$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, strcmp) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, strcpy) {  \/\/ NOLINT$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, strdup) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, strerror) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, strerror_r) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, strncat) {  \/\/ NOLINT$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, strncat_overflow) {  \/\/ NOLINT$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, strncpy) {  \/\/ NOLINT$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, strndup) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, strndup_short) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, strptime) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, strtoimax) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, strtoumax) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, swprintf) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, sysinfo) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, tempnam) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, time) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, tmpnam) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, uname) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, valloc) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, wcrtomb) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, wcscat) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, wcsftime) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, wcsncat) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, wcsnrtombs) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, wcsrtombs) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, wcstombs) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, wmemset) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizer, wordexp) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizerAllocator, get_allocated_size_and_ownership) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizerAllocator, get_estimated_allocated_size) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizerOrigins, BinaryOp) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizerOrigins, DIV) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizerOrigins, EQ) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizerOrigins, InitializedStoreDoesNotChangeOrigin) {$/;"	f	namespace:__anon9
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizerOrigins, Invoke) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizerOrigins, LargeMemCpy) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizerOrigins, Param) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizerOrigins, Retval) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizerOrigins, SHIFT) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizerOrigins, Select) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizerOrigins, SetGet) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizerOrigins, SmallMemCpy) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizerOrigins, StoreIntrinsic) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizerOrigins, Unary) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizerOrigins, strlen) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizerOrigins, wcslen) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizerSanity, PoisonInMalloc) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(MemorySanitizerStress, DISABLED_MallocStackTrace) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(VectorCmpTest, builtin_ia32_ucomisdlt) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(VectorCmpTest, mm_cmpneq_ps) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(VectorCmpTest, mm_cmpneq_sd) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(VectorMaddTest, mmx_pmadd_wd) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(VectorPackTest, mmx_packuswb) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(VectorPackTest, sse2_packssdw_128) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(VectorSadTest, sse2_psad_bw) {$/;"	f
TEST	lib/msan/tests/msan_test.cc	/^TEST(VectorShiftTest, avx2_left) {$/;"	f	namespace:__anon8
TEST	lib/msan/tests/msan_test.cc	/^TEST(VectorShiftTest, sse2_left) {$/;"	f	namespace:__anon8
TEST	lib/msan/tests/msan_test.cc	/^TEST(VectorShiftTest, sse2_left_by_uninit) {$/;"	f	namespace:__anon8
TEST	lib/msan/tests/msan_test.cc	/^TEST(VectorShiftTest, sse2_left_scalar) {$/;"	f	namespace:__anon8
TEST	lib/msan/tests/msan_test.cc	/^TEST(VectorShiftTest, sse2_left_scalar_by_uninit) {$/;"	f	namespace:__anon8
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(Allocator, AllocatorCacheDeallocNewThread) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(Allocator, Basic) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(Allocator, LargeAlloc) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(Allocator, ScopedBuffer) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(Allocator, Stress) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(SanitizerCommon, AllocatorLeakTest) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(SanitizerCommon, CombinedAllocator32Compact) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(SanitizerCommon, CombinedAllocator64) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(SanitizerCommon, CombinedAllocator64Compact) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(SanitizerCommon, CombinedAllocator64Dynamic) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(SanitizerCommon, CombinedAllocator64VeryCompact) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(SanitizerCommon, CompactSizeClassMap) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(SanitizerCommon, DefaultSizeClassMap) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(SanitizerCommon, InternalSizeClassMap) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(SanitizerCommon, LargeMmapAllocator) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(SanitizerCommon, LargeMmapAllocatorBlockBegin) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(SanitizerCommon, LargeMmapAllocatorIteration) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(SanitizerCommon, LargeMmapAllocatorMapUnmapCallback) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(SanitizerCommon, SizeClassAllocator32Compact) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(SanitizerCommon, SizeClassAllocator32CompactGetBlockBegin) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(SanitizerCommon, SizeClassAllocator32CompactLocalCache) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(SanitizerCommon, SizeClassAllocator32CompactMetadataStress) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(SanitizerCommon, SizeClassAllocator32Iteration) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(SanitizerCommon, SizeClassAllocator32MapUnmapCallback) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(SanitizerCommon, SizeClassAllocator32SeparateBatches) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(SanitizerCommon, SizeClassAllocator64) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(SanitizerCommon, SizeClassAllocator64Compact) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(SanitizerCommon, SizeClassAllocator64CompactGetBlockBegin) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(SanitizerCommon, SizeClassAllocator64CompactLocalCache) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(SanitizerCommon, SizeClassAllocator64CompactMetadataStress) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(SanitizerCommon, SizeClassAllocator64CompactReleaseFreeMemoryToOS) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(SanitizerCommon, SizeClassAllocator64Dynamic) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(SanitizerCommon, SizeClassAllocator64DynamicGetBlockBegin) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(SanitizerCommon, SizeClassAllocator64DynamicIteration) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(SanitizerCommon, SizeClassAllocator64DynamicLocalCache) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(SanitizerCommon, SizeClassAllocator64DynamicMetadataStress) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(SanitizerCommon, SizeClassAllocator64FreePagesRangeTracker) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(SanitizerCommon, SizeClassAllocator64GetBlockBegin) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(SanitizerCommon, SizeClassAllocator64Iteration) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(SanitizerCommon, SizeClassAllocator64LocalCache) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(SanitizerCommon, SizeClassAllocator64MapUnmapCallback) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(SanitizerCommon, SizeClassAllocator64MetadataStress) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(SanitizerCommon, SizeClassAllocator64Overflow) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(SanitizerCommon, SizeClassAllocator64PackedCounterArray) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(SanitizerCommon, SizeClassAllocator64PopulateFreeListOOM) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(SanitizerCommon, SizeClassAllocator64ReleaseFreeMemoryToOS) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(SanitizerCommon, SizeClassAllocator64VeryCompact) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(SanitizerCommon, SizeClassAllocator64VeryCompactGetBlockBegin) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(SanitizerCommon, SizeClassAllocator64VeryCompactLocalCache) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(SanitizerCommon, SizeClassAllocator64VeryCompactReleaseFreeMemoryToOS) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(SanitizerCommon, TwoLevelByteMap) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^TEST(SanitizerCommon, VeryCompactSizeClassMap) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_atomic_test.cc	/^TEST(SanitizerCommon, AtomicCompareExchangeTest) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_atomic_test.cc	/^TEST(SanitizerCommon, AtomicStoreLoad) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_bitvector_test.cc	/^TEST(SanitizerCommon, BasicBitVector) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_bitvector_test.cc	/^TEST(SanitizerCommon, TwoLevelBitVector) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_bvgraph_test.cc	/^TEST(BVGraph, AddEdgesTest) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_bvgraph_test.cc	/^TEST(BVGraph, BasicTest) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_bvgraph_test.cc	/^TEST(BVGraph, LongCycle) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_bvgraph_test.cc	/^TEST(BVGraph, RemoveEdges) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_bvgraph_test.cc	/^TEST(BVGraph, ShortestPath) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_bvgraph_test.cc	/^TEST(BVGraph, isReachable) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_common_test.cc	/^TEST(SanitizerCommon, FindPathToBinary) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_common_test.cc	/^TEST(SanitizerCommon, GetRandom) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_common_test.cc	/^TEST(SanitizerCommon, InternalLowerBound) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_common_test.cc	/^TEST(SanitizerCommon, InternalLowerBoundVsStdLowerBound) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_common_test.cc	/^TEST(SanitizerCommon, InternalMmapVector) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_common_test.cc	/^TEST(SanitizerCommon, InternalMmapVectorEq) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_common_test.cc	/^TEST(SanitizerCommon, InternalMmapVectorReize) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_common_test.cc	/^TEST(SanitizerCommon, InternalMmapVectorRoundUpCapacity) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_common_test.cc	/^TEST(SanitizerCommon, InternalMmapVectorSwap) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_common_test.cc	/^TEST(SanitizerCommon, InternalScopedString) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_common_test.cc	/^TEST(SanitizerCommon, MmapAlignedOrDieOnFatalError) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_common_test.cc	/^TEST(SanitizerCommon, RemoveANSIEscapeSequencesFromString) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_common_test.cc	/^TEST(SanitizerCommon, ReservedAddressRangeInit) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_common_test.cc	/^TEST(SanitizerCommon, ReservedAddressRangeMap) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_common_test.cc	/^TEST(SanitizerCommon, ReservedAddressRangeUnmap) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_common_test.cc	/^TEST(SanitizerCommon, SortTest) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_common_test.cc	/^TEST(SanitizerCommon, StripPathPrefix) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_common_test.cc	/^TEST(SanitizerCommon, ThreadStackTlsMain) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_common_test.cc	/^TEST(SanitizerCommon, ThreadStackTlsWorker) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_deadlock_detector_test.cc	/^TEST(DeadlockDetector, BasicTest) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_deadlock_detector_test.cc	/^TEST(DeadlockDetector, CorrectEpochFlush) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_deadlock_detector_test.cc	/^TEST(DeadlockDetector, LockContextTest) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_deadlock_detector_test.cc	/^TEST(DeadlockDetector, MultipleEpochsTest) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_deadlock_detector_test.cc	/^TEST(DeadlockDetector, RecusriveLockTest) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_deadlock_detector_test.cc	/^TEST(DeadlockDetector, RemoveEdgesTest) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_deadlock_detector_test.cc	/^TEST(DeadlockDetector, RemoveNodeTest) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_deadlock_detector_test.cc	/^TEST(DeadlockDetector, TryLockTest) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_deadlock_detector_test.cc	/^TEST(DeadlockDetector, onFirstLockTest) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_flags_test.cc	/^TEST(SanitizerCommon, BooleanFlags) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_flags_test.cc	/^TEST(SanitizerCommon, CommonFlags) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_flags_test.cc	/^TEST(SanitizerCommon, CommonSuffixFlags) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_flags_test.cc	/^TEST(SanitizerCommon, HandleSignalMode) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_flags_test.cc	/^TEST(SanitizerCommon, IntFlags) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_flags_test.cc	/^TEST(SanitizerCommon, MultipleFlags) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_flags_test.cc	/^TEST(SanitizerCommon, StrFlags) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_format_interceptor_test.cc	/^TEST(SanitizerCommonInterceptors, Printf) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_format_interceptor_test.cc	/^TEST(SanitizerCommonInterceptors, Scanf) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_ioctl_test.cc	/^TEST(SanitizerIoctl, Fixup) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_ioctl_test.cc	/^TEST(SanitizerIoctl, KVM_GET_LAPIC) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_ioctl_test.cc	/^TEST(SanitizerIoctl, KVM_GET_MP_STATE) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_ioctl_test.cc	/^TEST(SanitizerIoctl, KVM_GET_MSR_INDEX_LIST) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_libc_test.cc	/^TEST(SanitizerCommon, FileOps) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_libc_test.cc	/^TEST(SanitizerCommon, InternalMemmoveRegression) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_libc_test.cc	/^TEST(SanitizerCommon, InternalMmapWithOffset) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_libc_test.cc	/^TEST(SanitizerCommon, InternalStrFunctions) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_libc_test.cc	/^TEST(SanitizerCommon, mem_is_zero) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_linux_test.cc	/^TEST(SanitizerCommon, LibraryNameIs) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_linux_test.cc	/^TEST(SanitizerCommon, SetEnvTest) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_linux_test.cc	/^TEST(SanitizerCommon, StartSubprocessTest) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_linux_test.cc	/^TEST(SanitizerLinux, ThreadDescriptorSize) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_linux_test.cc	/^TEST(SanitizerLinux, ThreadSelfOffset) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_linux_test.cc	/^TEST(SanitizerLinux, ThreadSelfTest) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_list_test.cc	/^TEST(SanitizerCommon, IntrusiveList) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_list_test.cc	/^TEST(SanitizerCommon, IntrusiveListAppendEmpty) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_mutex_test.cc	/^TEST(SanitizerCommon, BlockingMutex) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_mutex_test.cc	/^TEST(SanitizerCommon, SpinMutex) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_mutex_test.cc	/^TEST(SanitizerCommon, SpinMutexTry) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_nolibc_test.cc	/^TEST(SanitizerCommon, NolibcMain) {$/;"	f
TEST	lib/sanitizer_common/tests/sanitizer_posix_test.cc	/^TEST(SanitizerCommon, IsAccessibleMemoryRange) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_posix_test.cc	/^TEST(SanitizerCommon, PthreadDestructorIterations) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_printf_test.cc	/^TEST(Printf, Basic) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_printf_test.cc	/^TEST(Printf, MinMax) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_printf_test.cc	/^TEST(Printf, OverflowInt) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_printf_test.cc	/^TEST(Printf, OverflowPtr) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_printf_test.cc	/^TEST(Printf, OverflowStr) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_printf_test.cc	/^TEST(Printf, OverflowUint) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_printf_test.cc	/^TEST(Printf, Padding) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_printf_test.cc	/^TEST(Printf, Precision) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_procmaps_test.cc	/^TEST(MemoryMapping, LoadedModuleArchAndUUID) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_procmaps_test.cc	/^TEST(MemoryMappingLayout, CodeRange) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_procmaps_test.cc	/^TEST(MemoryMappingLayout, DumpListOfModules) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_quarantine_test.cc	/^TEST(SanitizerCommon, QuarantineBatchMerge) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_quarantine_test.cc	/^TEST(SanitizerCommon, QuarantineCacheMergeBatchesALotOfBatches) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_quarantine_test.cc	/^TEST(SanitizerCommon, QuarantineCacheMergeBatchesEmpty) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_quarantine_test.cc	/^TEST(SanitizerCommon, QuarantineCacheMergeBatchesOneBatch) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_quarantine_test.cc	/^TEST(SanitizerCommon, QuarantineCacheMergeBatchesSmallBatches) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_quarantine_test.cc	/^TEST(SanitizerCommon, QuarantineCacheMergeBatchesTooBigToMerge) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_stackdepot_test.cc	/^TEST(SanitizerCommon, StackDepotAbsent) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_stackdepot_test.cc	/^TEST(SanitizerCommon, StackDepotBasic) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_stackdepot_test.cc	/^TEST(SanitizerCommon, StackDepotEmptyStack) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_stackdepot_test.cc	/^TEST(SanitizerCommon, StackDepotReverseMap) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_stackdepot_test.cc	/^TEST(SanitizerCommon, StackDepotSame) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_stackdepot_test.cc	/^TEST(SanitizerCommon, StackDepotSeveral) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_stackdepot_test.cc	/^TEST(SanitizerCommon, StackDepotZeroId) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_stacktrace_printer_test.cc	/^TEST(SanitizerStacktracePrinter, RenderFrame) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_stacktrace_printer_test.cc	/^TEST(SanitizerStacktracePrinter, RenderModuleLocation) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_stacktrace_printer_test.cc	/^TEST(SanitizerStacktracePrinter, RenderSourceLocation) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_stacktrace_test.cc	/^TEST(SlowUnwindTest, ShortStackTrace) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_stoptheworld_test.cc	/^TEST(StopTheWorld, SegvInCallback) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_stoptheworld_test.cc	/^TEST(StopTheWorld, SuspendThreadsAdvanced) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_stoptheworld_test.cc	/^TEST(StopTheWorld, SuspendThreadsSimple) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_suppressions_test.cc	/^TEST(Suppressions, Match) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_symbolizer_test.cc	/^TEST(Symbolizer, DemangleSwiftAndCXX) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_symbolizer_test.cc	/^TEST(Symbolizer, ExtractInt) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_symbolizer_test.cc	/^TEST(Symbolizer, ExtractToken) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_symbolizer_test.cc	/^TEST(Symbolizer, ExtractTokenUpToDelimiter) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_symbolizer_test.cc	/^TEST(Symbolizer, ExtractUptr) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_thread_registry_test.cc	/^TEST(SanitizerCommon, ThreadRegistryTest) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_thread_registry_test.cc	/^TEST(SanitizerCommon, ThreadRegistryThreadedTest) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_vector_test.cc	/^TEST(Vector, Basic) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_vector_test.cc	/^TEST(Vector, ResizeReduction) {$/;"	f	namespace:__sanitizer
TEST	lib/sanitizer_common/tests/sanitizer_vector_test.cc	/^TEST(Vector, Stride) {$/;"	f	namespace:__sanitizer
TEST	lib/tsan/tests/rtl/tsan_bench.cc	/^TEST(DISABLED_BENCH, FuncCall) {$/;"	f
TEST	lib/tsan/tests/rtl/tsan_bench.cc	/^TEST(DISABLED_BENCH, Mop1) {$/;"	f
TEST	lib/tsan/tests/rtl/tsan_bench.cc	/^TEST(DISABLED_BENCH, Mop1Read) {$/;"	f
TEST	lib/tsan/tests/rtl/tsan_bench.cc	/^TEST(DISABLED_BENCH, Mop1Write) {$/;"	f
TEST	lib/tsan/tests/rtl/tsan_bench.cc	/^TEST(DISABLED_BENCH, Mop2) {$/;"	f
TEST	lib/tsan/tests/rtl/tsan_bench.cc	/^TEST(DISABLED_BENCH, Mop2Read) {$/;"	f
TEST	lib/tsan/tests/rtl/tsan_bench.cc	/^TEST(DISABLED_BENCH, Mop2Write) {$/;"	f
TEST	lib/tsan/tests/rtl/tsan_bench.cc	/^TEST(DISABLED_BENCH, Mop4) {$/;"	f
TEST	lib/tsan/tests/rtl/tsan_bench.cc	/^TEST(DISABLED_BENCH, Mop4Read) {$/;"	f
TEST	lib/tsan/tests/rtl/tsan_bench.cc	/^TEST(DISABLED_BENCH, Mop4Write) {$/;"	f
TEST	lib/tsan/tests/rtl/tsan_bench.cc	/^TEST(DISABLED_BENCH, Mop8) {$/;"	f
TEST	lib/tsan/tests/rtl/tsan_bench.cc	/^TEST(DISABLED_BENCH, Mop8Read) {$/;"	f
TEST	lib/tsan/tests/rtl/tsan_bench.cc	/^TEST(DISABLED_BENCH, Mop8Write) {$/;"	f
TEST	lib/tsan/tests/rtl/tsan_bench.cc	/^TEST(DISABLED_BENCH, MutexLocal) {$/;"	f
TEST	lib/tsan/tests/rtl/tsan_mop.cc	/^TEST(ThreadSanitizer, BenignRaceOnVptr) {$/;"	f
TEST	lib/tsan/tests/rtl/tsan_mop.cc	/^TEST(ThreadSanitizer, HarmfulRaceOnVptr) {$/;"	f
TEST	lib/tsan/tests/rtl/tsan_mop.cc	/^TEST(ThreadSanitizer, LockedWriteThenRead) {$/;"	f
TEST	lib/tsan/tests/rtl/tsan_mop.cc	/^TEST(ThreadSanitizer, NoRaceWithOffset) {$/;"	f
TEST	lib/tsan/tests/rtl/tsan_mop.cc	/^TEST(ThreadSanitizer, RaceWithDeadThread) {$/;"	f
TEST	lib/tsan/tests/rtl/tsan_mop.cc	/^TEST(ThreadSanitizer, RaceWithOffset) {$/;"	f
TEST	lib/tsan/tests/rtl/tsan_mop.cc	/^TEST(ThreadSanitizer, RaceWithOffset2) {$/;"	f
TEST	lib/tsan/tests/rtl/tsan_mop.cc	/^TEST(ThreadSanitizer, ReadReadNoRace) {$/;"	f
TEST	lib/tsan/tests/rtl/tsan_mop.cc	/^TEST(ThreadSanitizer, ReadWriteRace) {$/;"	f
TEST	lib/tsan/tests/rtl/tsan_mop.cc	/^TEST(ThreadSanitizer, ReportDeadThread) {$/;"	f
TEST	lib/tsan/tests/rtl/tsan_mop.cc	/^TEST(ThreadSanitizer, ReportRace) {$/;"	f
TEST	lib/tsan/tests/rtl/tsan_mop.cc	/^TEST(ThreadSanitizer, SimpleWrite) {$/;"	f
TEST	lib/tsan/tests/rtl/tsan_mop.cc	/^TEST(ThreadSanitizer, SimpleWriteWrite) {$/;"	f
TEST	lib/tsan/tests/rtl/tsan_mop.cc	/^TEST(ThreadSanitizer, WriteReadRace) {$/;"	f
TEST	lib/tsan/tests/rtl/tsan_mop.cc	/^TEST(ThreadSanitizer, WriteThenLockedRead) {$/;"	f
TEST	lib/tsan/tests/rtl/tsan_mop.cc	/^TEST(ThreadSanitizer, WriteThenRead) {$/;"	f
TEST	lib/tsan/tests/rtl/tsan_mop.cc	/^TEST(ThreadSanitizer, WriteWriteRace) {$/;"	f
TEST	lib/tsan/tests/rtl/tsan_mutex.cc	/^TEST(DISABLED_BENCH_ThreadSanitizer, Singleton) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/rtl/tsan_mutex.cc	/^TEST(DISABLED_BENCH_ThreadSanitizer, StopFlag) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/rtl/tsan_mutex.cc	/^TEST(ThreadSanitizer, BasicMutex) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/rtl/tsan_mutex.cc	/^TEST(ThreadSanitizer, BasicRwMutex) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/rtl/tsan_mutex.cc	/^TEST(ThreadSanitizer, BasicSpinMutex) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/rtl/tsan_mutex.cc	/^TEST(ThreadSanitizer, Mutex) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/rtl/tsan_mutex.cc	/^TEST(ThreadSanitizer, RwMutex) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/rtl/tsan_mutex.cc	/^TEST(ThreadSanitizer, SpinMutex) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/rtl/tsan_mutex.cc	/^TEST(ThreadSanitizer, StaticMutex) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/rtl/tsan_posix.cc	/^TEST(Posix, CondBasic) {$/;"	f
TEST	lib/tsan/tests/rtl/tsan_posix.cc	/^TEST(Posix, ThreadLocalAccesses) {$/;"	f
TEST	lib/tsan/tests/rtl/tsan_posix.cc	/^TEST(Posix, ThreadSpecificDtors) {$/;"	f
TEST	lib/tsan/tests/rtl/tsan_string.cc	/^TEST(ThreadSanitizer, Memcpy) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/rtl/tsan_string.cc	/^TEST(ThreadSanitizer, MemcpyRace1) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/rtl/tsan_string.cc	/^TEST(ThreadSanitizer, MemcpyRace2) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/rtl/tsan_string.cc	/^TEST(ThreadSanitizer, MemcpyRace3) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/rtl/tsan_string.cc	/^TEST(ThreadSanitizer, MemcpyStack) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/rtl/tsan_string.cc	/^TEST(ThreadSanitizer, MemsetRace1) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/rtl/tsan_test.cc	/^TEST(ThreadSanitizer, FuncCall) {$/;"	f
TEST	lib/tsan/tests/rtl/tsan_thread.cc	/^TEST(DISABLED_SLOW_ThreadSanitizer, ThreadALot) {$/;"	f
TEST	lib/tsan/tests/rtl/tsan_thread.cc	/^TEST(ThreadSanitizer, ThreadDetach1) {$/;"	f
TEST	lib/tsan/tests/rtl/tsan_thread.cc	/^TEST(ThreadSanitizer, ThreadDetach2) {$/;"	f
TEST	lib/tsan/tests/rtl/tsan_thread.cc	/^TEST(ThreadSanitizer, ThreadSync) {$/;"	f
TEST	lib/tsan/tests/unit/tsan_clock_test.cc	/^TEST(Clock, AcquireRelease) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/unit/tsan_clock_test.cc	/^TEST(Clock, ChunkedBasic) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/unit/tsan_clock_test.cc	/^TEST(Clock, DifferentSizes) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/unit/tsan_clock_test.cc	/^TEST(Clock, Fuzzer) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/unit/tsan_clock_test.cc	/^TEST(Clock, Growth) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/unit/tsan_clock_test.cc	/^TEST(Clock, Growth2) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/unit/tsan_clock_test.cc	/^TEST(Clock, Iter) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/unit/tsan_clock_test.cc	/^TEST(Clock, ManyThreads) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/unit/tsan_clock_test.cc	/^TEST(Clock, RepeatedAcquire) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/unit/tsan_clock_test.cc	/^TEST(Clock, VectorBasic) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/unit/tsan_dense_alloc_test.cc	/^TEST(DenseSlabAlloc, Basic) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/unit/tsan_flags_test.cc	/^TEST(Flags, Basic) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/unit/tsan_flags_test.cc	/^TEST(Flags, DefaultValues) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/unit/tsan_flags_test.cc	/^TEST(Flags, ParseDefaultOptions) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/unit/tsan_flags_test.cc	/^TEST(Flags, ParseEnvOptions) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/unit/tsan_flags_test.cc	/^TEST(Flags, ParsePriority) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/unit/tsan_mman_test.cc	/^TEST(Mman, AlignedAlloc) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/unit/tsan_mman_test.cc	/^TEST(Mman, Internal) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/unit/tsan_mman_test.cc	/^TEST(Mman, Memalign) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/unit/tsan_mman_test.cc	/^TEST(Mman, PosixMemalign) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/unit/tsan_mman_test.cc	/^TEST(Mman, Stats) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/unit/tsan_mman_test.cc	/^TEST(Mman, UsableSize) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/unit/tsan_mman_test.cc	/^TEST(Mman, User) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/unit/tsan_mman_test.cc	/^TEST(Mman, UserRealloc) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/unit/tsan_mman_test.cc	/^TEST(Mman, Valloc) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/unit/tsan_mutex_test.cc	/^TEST(Mutex, ReadWrite) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/unit/tsan_mutex_test.cc	/^TEST(Mutex, SpinWrite) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/unit/tsan_mutex_test.cc	/^TEST(Mutex, Write) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/unit/tsan_mutexset_test.cc	/^TEST(MutexSet, Basic) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/unit/tsan_mutexset_test.cc	/^TEST(MutexSet, DoubleAdd) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/unit/tsan_mutexset_test.cc	/^TEST(MutexSet, DoubleDel) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/unit/tsan_mutexset_test.cc	/^TEST(MutexSet, Full) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/unit/tsan_mutexset_test.cc	/^TEST(MutexSet, Overflow) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/unit/tsan_mutexset_test.cc	/^TEST(MutexSet, Remove) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/unit/tsan_shadow_test.cc	/^TEST(Shadow, Celling) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/unit/tsan_shadow_test.cc	/^TEST(Shadow, FastState) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/unit/tsan_shadow_test.cc	/^TEST(Shadow, Mapping) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/unit/tsan_stack_test.cc	/^TEST(StackTrace, BasicBuffered) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/unit/tsan_stack_test.cc	/^TEST(StackTrace, BasicVarSize) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/unit/tsan_stack_test.cc	/^TEST(StackTrace, TrimBuffered) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/unit/tsan_stack_test.cc	/^TEST(StackTrace, TrimVarSize) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/unit/tsan_sync_test.cc	/^TEST(MetaMap, Basic) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/unit/tsan_sync_test.cc	/^TEST(MetaMap, FreeRange) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/unit/tsan_sync_test.cc	/^TEST(MetaMap, MoveMemory) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/unit/tsan_sync_test.cc	/^TEST(MetaMap, ResetSync) {$/;"	f	namespace:__tsan
TEST	lib/tsan/tests/unit/tsan_sync_test.cc	/^TEST(MetaMap, Sync) {$/;"	f	namespace:__tsan
TEST	lib/xray/tests/unit/allocator_test.cc	/^TEST(AllocatorTest, Allocate) {$/;"	f	namespace:__xray::__anon24
TEST	lib/xray/tests/unit/allocator_test.cc	/^TEST(AllocatorTest, Construction) { Allocator<sizeof(TestData)> A(2 << 11); }$/;"	f	namespace:__xray::__anon24
TEST	lib/xray/tests/unit/allocator_test.cc	/^TEST(AllocatorTest, OverAllocate) {$/;"	f	namespace:__xray::__anon24
TEST	lib/xray/tests/unit/buffer_queue_test.cc	/^TEST(BufferQueueTest, API) {$/;"	f	namespace:__xray
TEST	lib/xray/tests/unit/buffer_queue_test.cc	/^TEST(BufferQueueTest, Apply) {$/;"	f	namespace:__xray
TEST	lib/xray/tests/unit/buffer_queue_test.cc	/^TEST(BufferQueueTest, ErrorsWhenFinalising) {$/;"	f	namespace:__xray
TEST	lib/xray/tests/unit/buffer_queue_test.cc	/^TEST(BufferQueueTest, GetAndRelease) {$/;"	f	namespace:__xray
TEST	lib/xray/tests/unit/buffer_queue_test.cc	/^TEST(BufferQueueTest, GetUntilFailed) {$/;"	f	namespace:__xray
TEST	lib/xray/tests/unit/buffer_queue_test.cc	/^TEST(BufferQueueTest, MultiThreaded) {$/;"	f	namespace:__xray
TEST	lib/xray/tests/unit/buffer_queue_test.cc	/^TEST(BufferQueueTest, ReleaseUnknown) {$/;"	f	namespace:__xray
TEST	lib/xray/tests/unit/fdr_logging_test.cc	/^TEST(FDRLoggingTest, MultiThreadedCycling) {$/;"	f	namespace:__xray::__anon25
TEST	lib/xray/tests/unit/fdr_logging_test.cc	/^TEST(FDRLoggingTest, Multiple) {$/;"	f	namespace:__xray::__anon25
TEST	lib/xray/tests/unit/fdr_logging_test.cc	/^TEST(FDRLoggingTest, Simple) {$/;"	f	namespace:__xray::__anon25
TEST	lib/xray/tests/unit/function_call_trie_test.cc	/^TEST(FunctionCallTrieTest, ConstructWithTLSAllocators) {$/;"	f	namespace:__xray::__anon26
TEST	lib/xray/tests/unit/function_call_trie_test.cc	/^TEST(FunctionCallTrieTest, DeepCallStack) {$/;"	f	namespace:__xray::__anon26
TEST	lib/xray/tests/unit/function_call_trie_test.cc	/^TEST(FunctionCallTrieTest, DeepCopy) {$/;"	f	namespace:__xray::__anon26
TEST	lib/xray/tests/unit/function_call_trie_test.cc	/^TEST(FunctionCallTrieTest, EnterAndExitFunction) {$/;"	f	namespace:__xray::__anon26
TEST	lib/xray/tests/unit/function_call_trie_test.cc	/^TEST(FunctionCallTrieTest, MergeInto) {$/;"	f	namespace:__xray::__anon26
TEST	lib/xray/tests/unit/function_call_trie_test.cc	/^TEST(FunctionCallTrieTest, MissingFunctionEntry) {$/;"	f	namespace:__xray::__anon26
TEST	lib/xray/tests/unit/function_call_trie_test.cc	/^TEST(FunctionCallTrieTest, MissingFunctionExit) {$/;"	f	namespace:__xray::__anon26
TEST	lib/xray/tests/unit/function_call_trie_test.cc	/^TEST(FunctionCallTrieTest, MissingIntermediaryExit) {$/;"	f	namespace:__xray::__anon26
TEST	lib/xray/tests/unit/function_call_trie_test.cc	/^TEST(FunctionCallTrieTest, MultipleRoots) {$/;"	f	namespace:__xray::__anon26
TEST	lib/xray/tests/unit/function_call_trie_test.cc	/^TEST(FunctionCallTrieTest, NoMatchingEntersForExit) {$/;"	f	namespace:__xray::__anon26
TEST	lib/xray/tests/unit/profile_collector_test.cc	/^TEST(profileCollectorServiceTest, PostSerializeCollect) {$/;"	f	namespace:__xray::__anon22
TEST	lib/xray/tests/unit/profile_collector_test.cc	/^TEST(profileCollectorServiceTest, PostSerializeCollectMultipleThread) {$/;"	f	namespace:__xray::__anon22
TEST	lib/xray/tests/unit/segmented_array_test.cc	/^TEST(SegmentedArrayTest, AppendAndTrim) {$/;"	f	namespace:__xray::__anon23
TEST	lib/xray/tests/unit/segmented_array_test.cc	/^TEST(SegmentedArrayTest, AppendEmplace) {$/;"	f	namespace:__xray::__anon23
TEST	lib/xray/tests/unit/segmented_array_test.cc	/^TEST(SegmentedArrayTest, ConstructAndPopulate) {$/;"	f	namespace:__xray::__anon23
TEST	lib/xray/tests/unit/segmented_array_test.cc	/^TEST(SegmentedArrayTest, ConstructPopulateAndLookup) {$/;"	f	namespace:__xray::__anon23
TEST	lib/xray/tests/unit/segmented_array_test.cc	/^TEST(SegmentedArrayTest, ConstructWithAllocators) {$/;"	f	namespace:__xray::__anon23
TEST	lib/xray/tests/unit/segmented_array_test.cc	/^TEST(SegmentedArrayTest, IteratorAdvance) {$/;"	f	namespace:__xray::__anon23
TEST	lib/xray/tests/unit/segmented_array_test.cc	/^TEST(SegmentedArrayTest, IteratorRetreat) {$/;"	f	namespace:__xray::__anon23
TEST	lib/xray/tests/unit/segmented_array_test.cc	/^TEST(SegmentedArrayTest, IteratorTrimBehaviour) {$/;"	f	namespace:__xray::__anon23
TEST	lib/xray/tests/unit/segmented_array_test.cc	/^TEST(SegmentedArrayTest, PopulateWithMoreElements) {$/;"	f	namespace:__xray::__anon23
TEST	lib/xray/tests/unit/segmented_array_test.cc	/^TEST(SegmentedArrayTest, SimulateStackBehaviour) {$/;"	f	namespace:__xray::__anon23
TEST_F	lib/sanitizer_common/tests/sanitizer_linux_test.cc	/^TEST_F(ThreadListerTest, DoNotForgetThreads) {$/;"	f	namespace:__sanitizer
TEST_F	lib/sanitizer_common/tests/sanitizer_linux_test.cc	/^TEST_F(ThreadListerTest, NewThreads) {$/;"	f	namespace:__sanitizer
TEST_F	lib/sanitizer_common/tests/sanitizer_linux_test.cc	/^TEST_F(ThreadListerTest, ThreadListerSeesAllSpawnedThreads) {$/;"	f	namespace:__sanitizer
TEST_F	lib/sanitizer_common/tests/sanitizer_stacktrace_test.cc	/^TEST_F(FastUnwindTest, Basic) {$/;"	f	namespace:__sanitizer
TEST_F	lib/sanitizer_common/tests/sanitizer_stacktrace_test.cc	/^TEST_F(FastUnwindTest, CloseToZeroFrame) {$/;"	f	namespace:__sanitizer
TEST_F	lib/sanitizer_common/tests/sanitizer_stacktrace_test.cc	/^TEST_F(FastUnwindTest, FPBelowPrevFP) {$/;"	f	namespace:__sanitizer
TEST_F	lib/sanitizer_common/tests/sanitizer_stacktrace_test.cc	/^TEST_F(FastUnwindTest, FramePointerLoop) {$/;"	f	namespace:__sanitizer
TEST_F	lib/sanitizer_common/tests/sanitizer_stacktrace_test.cc	/^TEST_F(FastUnwindTest, MisalignedFramePointer) {$/;"	f	namespace:__sanitizer
TEST_F	lib/sanitizer_common/tests/sanitizer_stacktrace_test.cc	/^TEST_F(FastUnwindTest, OneFrameStackTrace) {$/;"	f	namespace:__sanitizer
TEST_F	lib/sanitizer_common/tests/sanitizer_stacktrace_test.cc	/^TEST_F(FastUnwindTest, ZeroFramesStackTrace) {$/;"	f	namespace:__sanitizer
TEST_F	lib/sanitizer_common/tests/sanitizer_suppressions_test.cc	/^TEST_F(SuppressionContextTest, HasSuppressionType) {$/;"	f	namespace:__sanitizer
TEST_F	lib/sanitizer_common/tests/sanitizer_suppressions_test.cc	/^TEST_F(SuppressionContextTest, Parse) {$/;"	f	namespace:__sanitizer
TEST_F	lib/sanitizer_common/tests/sanitizer_suppressions_test.cc	/^TEST_F(SuppressionContextTest, Parse2) {$/;"	f	namespace:__sanitizer
TEST_F	lib/sanitizer_common/tests/sanitizer_suppressions_test.cc	/^TEST_F(SuppressionContextTest, Parse3) {$/;"	f	namespace:__sanitizer
TEST_F	lib/sanitizer_common/tests/sanitizer_suppressions_test.cc	/^TEST_F(SuppressionContextTest, ParseType) {$/;"	f	namespace:__sanitizer
TEST_P	lib/msan/tests/msan_test.cc	/^TEST_P(MemorySanitizerIpTest, accept) {$/;"	f
TEST_P	lib/msan/tests/msan_test.cc	/^TEST_P(MemorySanitizerIpTest, recvmsg) {$/;"	f
TEST_P	lib/sanitizer_common/tests/sanitizer_libc_test.cc	/^TEST_P(SanitizerCommonFileTest, ReadFileToBuffer) {$/;"	f
TEST_P	lib/sanitizer_common/tests/sanitizer_libc_test.cc	/^TEST_P(SanitizerCommonFileTest, ReadFileToBufferHalf) {$/;"	f
TEST_P	lib/sanitizer_common/tests/sanitizer_libc_test.cc	/^TEST_P(SanitizerCommonFileTest, ReadFileToVector) {$/;"	f
TEST_P	lib/sanitizer_common/tests/sanitizer_libc_test.cc	/^TEST_P(SanitizerCommonFileTest, ReadFileToVectorHalf) {$/;"	f
TEST_STRTO_FLOAT	lib/msan/tests/msan_test.cc	1785;"	d	file:
TEST_STRTO_FLOAT_LOC	lib/msan/tests/msan_test.cc	1792;"	d	file:
TEST_STRTO_INT	lib/msan/tests/msan_test.cc	1778;"	d	file:
TEST_STRTO_INT_LOC	lib/msan/tests/msan_test.cc	1801;"	d	file:
TFR	test/BlocksRuntime/makefile	/^TFR = ~public\/bin\/testfilerunner$/;"	m
THREADLOCAL	lib/sanitizer_common/sanitizer_internal_defs.h	215;"	d
THREADLOCAL	lib/sanitizer_common/sanitizer_internal_defs.h	229;"	d
THREAD_CALLING_CONV	lib/sanitizer_common/sanitizer_internal_defs.h	268;"	d
THREAD_CALLING_CONV	lib/sanitizer_common/sanitizer_internal_defs.h	271;"	d
TId	lib/xray/xray_profile_collector.cc	/^  tid_t TId;$/;"	m	struct:__xray::profileCollectorService::__anon27::ThreadTrie	file:
TK_Float	lib/ubsan/ubsan_value.h	/^    TK_Float = 0x0001,$/;"	e	enum:__ubsan::TypeDescriptor::Kind
TK_Integer	lib/ubsan/ubsan_value.h	/^    TK_Integer = 0x0000,$/;"	e	enum:__ubsan::TypeDescriptor::Kind
TK_Unknown	lib/ubsan/ubsan_value.h	/^    TK_Unknown = 0xffff$/;"	e	enum:__ubsan::TypeDescriptor::Kind
TLS_SLOT_TSAN	lib/sanitizer_common/sanitizer_linux.h	/^static const int TLS_SLOT_TSAN = 8;$/;"	m	namespace:__sanitizer
TMP	lib/builtins/hexagon/dfaddsub.S	/^		TMP = EXPB				\/\/ unmodified rounding mode$/;"	d
TMP	lib/builtins/hexagon/dfaddsub.S	/^		TMP = USR$/;"	d
TMP	lib/builtins/hexagon/dfaddsub.S	/^		TMP = convert_df2sf(A)			\/\/ will generate invalid if sNaN$/;"	d
TMP	lib/builtins/hexagon/dfaddsub.S	/^		TMP = extractu(AH,#EXPBITS,#HI_MANTBITS)$/;"	d
TMP	lib/builtins/hexagon/dfaddsub.S	/^		TMP = extractu(TMP,#2,#22)$/;"	d
TMP	lib/builtins/hexagon/dfaddsub.S	/^		TMP = extractu(TMP,#2,#SR_ROUND_OFF)$/;"	d
TMP	lib/builtins/hexagon/dfaddsub.S	/^		TMP = or(TMP,#0x28)			\/\/ inexact + overflow$/;"	d
TMP	lib/builtins/hexagon/dfaddsub.S	/^		TMP = sub(#1,EXPB)$/;"	d
TMP	lib/builtins/hexagon/dfaddsub.S	/^#define TMP r28$/;"	d
TMP	lib/builtins/hexagon/dfdiv.S	/^		TMP = ##0x00100000$/;"	d
TMP	lib/builtins/hexagon/dfdiv.S	/^		TMP = ##0x7f800001$/;"	d
TMP	lib/builtins/hexagon/dfdiv.S	/^		TMP = #-DF_BIAS-(DF_MANTBITS+FUDGE2)$/;"	d
TMP	lib/builtins/hexagon/dfdiv.S	/^		TMP = #0x7FFF$/;"	d
TMP	lib/builtins/hexagon/dfdiv.S	/^		TMP = #1$/;"	d
TMP	lib/builtins/hexagon/dfdiv.S	/^		TMP = USR				\/\/ Else, we want to set Unf+Inexact$/;"	d
TMP	lib/builtins/hexagon/dfdiv.S	/^		TMP = USR		\/\/ If not, just return$/;"	d
TMP	lib/builtins/hexagon/dfdiv.S	/^		TMP = USR$/;"	d
TMP	lib/builtins/hexagon/dfdiv.S	/^		TMP = or(TMP,#0x04)		\/\/ DBZ$/;"	d
TMP	lib/builtins/hexagon/dfdiv.S	/^		TMP = or(TMP,#0x28)$/;"	d
TMP	lib/builtins/hexagon/dfdiv.S	/^		TMP = or(TMP,#0x30)$/;"	d
TMP	lib/builtins/hexagon/dfdiv.S	/^#define TMP r10$/;"	d
TMP	lib/builtins/hexagon/dffma.S	/^		TMP = ##0x7c000000$/;"	d
TMP	lib/builtins/hexagon/dffma.S	/^		TMP = ##0x7f800001		\/\/ sp snan$/;"	d
TMP	lib/builtins/hexagon/dffma.S	/^		TMP = ##0x7fefffff$/;"	d
TMP	lib/builtins/hexagon/dffma.S	/^		TMP = #-2$/;"	d
TMP	lib/builtins/hexagon/dffma.S	/^		TMP = #-BIAS-(MANTBITS+FUDGE2)$/;"	d
TMP	lib/builtins/hexagon/dffma.S	/^		TMP = #0x7fff$/;"	d
TMP	lib/builtins/hexagon/dffma.S	/^		TMP = #1$/;"	d
TMP	lib/builtins/hexagon/dffma.S	/^		TMP = #62$/;"	d
TMP	lib/builtins/hexagon/dffma.S	/^		TMP = #63$/;"	d
TMP	lib/builtins/hexagon/dffma.S	/^		TMP = #BIAS+BIAS-2$/;"	d
TMP	lib/builtins/hexagon/dffma.S	/^		TMP = EXPA$/;"	d
TMP	lib/builtins/hexagon/dffma.S	/^		TMP = USR$/;"	d
TMP	lib/builtins/hexagon/dffma.S	/^		TMP = add(clb(BTMP),#-EXPBITS)$/;"	d
TMP	lib/builtins/hexagon/dffma.S	/^		TMP = asr(CTMPH,#31)$/;"	d
TMP	lib/builtins/hexagon/dffma.S	/^		TMP = extractu(TMP,#2,#SR_ROUND_OFF)$/;"	d
TMP	lib/builtins/hexagon/dffma.S	/^		TMP = or(TMP,#0x28)$/;"	d
TMP	lib/builtins/hexagon/dffma.S	/^		TMP = xor(AH,BH)$/;"	d
TMP	lib/builtins/hexagon/dffma.S	/^#define TMP r28$/;"	d
TMP	lib/builtins/hexagon/dfmul.S	/^		TMP = ##0x7c000000$/;"	d
TMP	lib/builtins/hexagon/dfmul.S	/^		TMP = #-BIAS$/;"	d
TMP	lib/builtins/hexagon/dfmul.S	/^		TMP = #63				\/\/ max amount to shift$/;"	d
TMP	lib/builtins/hexagon/dfmul.S	/^		TMP = PP_LL_L				\/\/ unmodified rounding mode$/;"	d
TMP	lib/builtins/hexagon/dfmul.S	/^		TMP = USR$/;"	d
TMP	lib/builtins/hexagon/dfmul.S	/^		TMP = add(TMP,#-EXPBITS)$/;"	d
TMP	lib/builtins/hexagon/dfmul.S	/^		TMP = cl0(BTMP)$/;"	d
TMP	lib/builtins/hexagon/dfmul.S	/^		TMP = convert_df2sf(A)			\/\/ will generate invalid if sNaN$/;"	d
TMP	lib/builtins/hexagon/dfmul.S	/^		TMP = or(TMP,#0x28)			\/\/ inexact + overflow$/;"	d
TMP	lib/builtins/hexagon/dfmul.S	/^		TMP = or(TMP,#0x30)			\/\/ Inexact + Underflow$/;"	d
TMP	lib/builtins/hexagon/dfmul.S	/^		TMP = or(TMP,#2)$/;"	d
TMP	lib/builtins/hexagon/dfmul.S	/^		TMP = xor(AH,BH)$/;"	d
TMP	lib/builtins/hexagon/dfmul.S	/^#define TMP r28$/;"	d
TMP	lib/builtins/hexagon/dfsqrt.S	/^		TMP = extractu(A,#SF_MANTBITS+1,#DF_MANTBITS-SF_MANTBITS)	\/\/ get sf value (mant+exp1)$/;"	d
TMP	lib/builtins/hexagon/dfsqrt.S	/^#define TMP r3:2$/;"	d
TMP1	lib/builtins/hexagon/dfdiv.S	/^		TMP1 = #63$/;"	d
TMP1	lib/builtins/hexagon/dfdiv.S	/^		TMP1 = or(TMP,#0x030)$/;"	d
TMP1	lib/builtins/hexagon/dfdiv.S	/^#define TMP1 r11$/;"	d
TMPHI	lib/builtins/hexagon/dfsqrt.S	/^#define TMPHI r3$/;"	d
TMPLO	lib/builtins/hexagon/dfsqrt.S	/^#define TMPLO r2$/;"	d
TMPPAIR	lib/builtins/hexagon/dfdiv.S	/^		TMPPAIR = #0$/;"	d
TMPPAIR	lib/builtins/hexagon/dfdiv.S	/^		TMPPAIR = combine(##0x00100000,#0)		\/\/ min normal$/;"	d
TMPPAIR	lib/builtins/hexagon/dfdiv.S	/^		TMPPAIR = extractu(PROD,EXPBA)				\/\/ bits that will get shifted out$/;"	d
TMPPAIR	lib/builtins/hexagon/dfdiv.S	/^		TMPPAIR = sub(REM,DENOM)$/;"	d
TMPPAIR	lib/builtins/hexagon/dfdiv.S	/^#define TMPPAIR r15:14$/;"	d
TMPPAIRHI	lib/builtins/hexagon/dfdiv.S	/^#define TMPPAIRHI r15$/;"	d
TMPPAIRLO	lib/builtins/hexagon/dfdiv.S	/^#define TMPPAIRLO r14$/;"	d
TO	test/profile/Inputs/extern_template1.cpp	/^Test<int> TO;$/;"	v
TORC4	lib/fuzzer/FuzzerTracePC.h	/^  TableOfRecentCompares<uint32_t, 32> TORC4;$/;"	m	class:fuzzer::TracePC
TORC8	lib/fuzzer/FuzzerTracePC.h	/^  TableOfRecentCompares<uint64_t, 32> TORC8;$/;"	m	class:fuzzer::TracePC
TORCW	lib/fuzzer/FuzzerTracePC.h	/^  TableOfRecentCompares<Word, 32> TORCW;$/;"	m	class:fuzzer::TracePC
TPC	lib/fuzzer/FuzzerTracePC.cpp	/^TracePC TPC;$/;"	m	namespace:fuzzer	file:
TRAMPOLINE_SIZE	lib/builtins/enable_execute_stack.c	33;"	d	file:
TRAMPOLINE_SIZE	lib/builtins/enable_execute_stack.c	35;"	d	file:
TSAN_CLOCK_H	lib/tsan/rtl/tsan_clock.h	14;"	d
TSAN_COLLECT_STATS	lib/tsan/rtl/tsan_defs.h	28;"	d
TSAN_CONTAINS_UBSAN	lib/tsan/rtl/tsan_defs.h	33;"	d
TSAN_CONTAINS_UBSAN	lib/tsan/rtl/tsan_defs.h	35;"	d
TSAN_DEFS_H	lib/tsan/rtl/tsan_defs.h	15;"	d
TSAN_DENSE_ALLOC_H	lib/tsan/rtl/tsan_dense_alloc.h	20;"	d
TSAN_FD_H	lib/tsan/rtl/tsan_fd.h	35;"	d
TSAN_FLAG	lib/tsan/rtl/tsan_flags.cc	35;"	d	file:
TSAN_FLAG	lib/tsan/rtl/tsan_flags.cc	37;"	d	file:
TSAN_FLAG	lib/tsan/rtl/tsan_flags.cc	43;"	d	file:
TSAN_FLAG	lib/tsan/rtl/tsan_flags.cc	46;"	d	file:
TSAN_FLAG	lib/tsan/rtl/tsan_flags.h	23;"	d
TSAN_FLAG	lib/tsan/rtl/tsan_flags.h	25;"	d
TSAN_FLAGS_H	lib/tsan/rtl/tsan_flags.h	15;"	d
TSAN_IGNORESET_H	lib/tsan/rtl/tsan_ignoreset.h	15;"	d
TSAN_INTERCEPT	lib/tsan/rtl/tsan_interceptors.cc	286;"	d	file:
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(char*, strcpy, char *dst, const char *src) {  \/\/ NOLINT$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(char*, strdup, const char *str) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(char*, strncpy, char *dst, char *src, uptr n) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, __close, int fd) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, __cxa_atexit, void (*f)(void *a), void *arg, void *dso) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, __fxstat, int version, int fd, void *buf) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, __fxstat64, int version, int fd, void *buf) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, atexit, void (*f)()) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, bind, int fd, void *addr, unsigned addrlen) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, close, int fd) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, closedir, void *dirp) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, connect, int fd, void *addr, unsigned addrlen) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, creat, const char *name, int mode) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, creat64, const char *name, int mode) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, dl_iterate_phdr, dl_iterate_phdr_cb_t cb, void *data) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, dup, int oldfd) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, dup2, int oldfd, int newfd) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, dup3, int oldfd, int newfd, int flags) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, epoll_create, int size) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, epoll_create1, int flags) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, epoll_ctl, int epfd, int op, int fd, void *ev) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, epoll_pwait, int epfd, void *ev, int cnt, int timeout,$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, epoll_wait, int epfd, void *ev, int cnt, int timeout) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, eventfd, unsigned initval, int flags) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, fork, int fake) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, fstat, int fd, void *buf) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, fstat64, int fd, void *buf) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, getaddrinfo, void *node, void *service,$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, gettimeofday, void *tv, void *tz) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, inotify_init, int fake) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, inotify_init1, int flags) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, kill, int pid, int sig) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, listen, int fd, int backlog) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, munmap, void *addr, long_t sz) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, nanosleep, void *req, void *rem) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, on_exit, void(*f)(int, void*), void *arg) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, open, const char *name, int flags, int mode) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, open64, const char *name, int flags, int mode) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, pause, int fake) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, pipe, int *pipefd) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, pipe2, int *pipefd, int flags) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, posix_memalign, void **memptr, uptr align, uptr sz) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, pthread_barrier_destroy, void *b) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, pthread_barrier_init, void *b, void *a, unsigned count) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, pthread_barrier_wait, void *b) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, pthread_create,$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, pthread_detach, void *th) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, pthread_join, void *th, void **ret) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, pthread_kill, void *tid, int sig) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, pthread_mutex_destroy, void *m) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, pthread_mutex_init, void *m, void *a) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, pthread_mutex_timedlock, void *m, void *abstime) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, pthread_mutex_trylock, void *m) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, pthread_once, void *o, void (*f)()) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, pthread_rwlock_destroy, void *m) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, pthread_rwlock_init, void *m, void *a) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, pthread_rwlock_rdlock, void *m) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, pthread_rwlock_timedrdlock, void *m, void *abstime) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, pthread_rwlock_timedwrlock, void *m, void *abstime) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, pthread_rwlock_tryrdlock, void *m) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, pthread_rwlock_trywrlock, void *m) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, pthread_rwlock_unlock, void *m) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, pthread_rwlock_wrlock, void *m) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, pthread_sigmask, int how, const __sanitizer_sigset_t *set,$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, pthread_spin_destroy, void *m) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, pthread_spin_init, void *m, int pshared) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, pthread_spin_lock, void *m) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, pthread_spin_trylock, void *m) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, pthread_spin_unlock, void *m) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, raise, int sig) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, rmdir, char *path) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, sigblock, int mask) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, signalfd, int fd, void *mask, int flags) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, sigsetmask, int mask) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, sigsuspend, const __sanitizer_sigset_t *mask) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, socket, int domain, int type, int protocol) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, socketpair, int domain, int type, int protocol, int *fd) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, unlink, char *path) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, usleep, long_t usec) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(int, vfork, int fake) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(unsigned, sleep, unsigned sec) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(uptr, malloc_usable_size, void *p) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(void *, __tls_get_addr, void *arg) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(void*, __libc_memalign, uptr align, uptr sz) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(void*, aligned_alloc, uptr align, uptr sz) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(void*, calloc, uptr size, uptr n) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(void*, malloc, uptr size) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(void*, memalign, uptr align, uptr sz) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(void*, pvalloc, uptr sz) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(void*, realloc, void *p, uptr size) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(void*, tmpfile, int fake) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(void*, tmpfile64, int fake) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(void*, valloc, uptr sz) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(void, __res_iclose, void *state, bool free_addr) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(void, _longjmp, uptr *env, int val) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(void, _lwp_exit) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(void, abort, int fake) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(void, cfree, void *p) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(void, free, void *p) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(void, longjmp_symname, uptr *env, int val) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(void, siglongjmp_symname, uptr *env, int val) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.cc	/^TSAN_INTERCEPTOR(void, thr_exit, tid_t *state) {$/;"	f
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors.h	50;"	d
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors_mac.cc	/^TSAN_INTERCEPTOR(bool, OSSpinLockTry, volatile OSSpinLock *lock) {$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors_mac.cc	/^TSAN_INTERCEPTOR(bool, os_lock_trylock, void *lock) {$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors_mac.cc	/^TSAN_INTERCEPTOR(int, objc_sync_enter, void *obj) {$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors_mac.cc	/^TSAN_INTERCEPTOR(int, objc_sync_exit, void *obj) {$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors_mac.cc	/^TSAN_INTERCEPTOR(void *, OSAtomicDequeue, OSQueueHead *list, size_t offset) {$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors_mac.cc	/^TSAN_INTERCEPTOR(void *, OSAtomicFifoDequeue, OSFifoQueueHead *list,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors_mac.cc	/^TSAN_INTERCEPTOR(void, OSAtomicEnqueue, OSQueueHead *list, void *item,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors_mac.cc	/^TSAN_INTERCEPTOR(void, OSAtomicFifoEnqueue, OSFifoQueueHead *list, void *item,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors_mac.cc	/^TSAN_INTERCEPTOR(void, OSSpinLockLock, volatile OSSpinLock *lock) {$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors_mac.cc	/^TSAN_INTERCEPTOR(void, OSSpinLockUnlock, volatile OSSpinLock *lock) {$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors_mac.cc	/^TSAN_INTERCEPTOR(void, os_lock_lock, void *lock) {$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors_mac.cc	/^TSAN_INTERCEPTOR(void, os_lock_unlock, void *lock) {$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors_mac.cc	/^TSAN_INTERCEPTOR(void, xpc_connection_cancel, xpc_connection_t connection) {$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors_mac.cc	/^TSAN_INTERCEPTOR(void, xpc_connection_send_barrier, xpc_connection_t connection,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors_mac.cc	/^TSAN_INTERCEPTOR(void, xpc_connection_send_message_with_reply,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_interceptors_mac.cc	/^TSAN_INTERCEPTOR(void, xpc_connection_set_event_handler,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^TSAN_INTERCEPTOR(dispatch_data_t, dispatch_data_create, const void *buffer,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^TSAN_INTERCEPTOR(dispatch_io_t, dispatch_io_create, dispatch_io_type_t type,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^TSAN_INTERCEPTOR(dispatch_io_t, dispatch_io_create_with_io,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^TSAN_INTERCEPTOR(dispatch_io_t, dispatch_io_create_with_path,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^TSAN_INTERCEPTOR(long_t, dispatch_group_wait, dispatch_group_t group,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^TSAN_INTERCEPTOR(long_t, dispatch_semaphore_signal,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^TSAN_INTERCEPTOR(long_t, dispatch_semaphore_wait, dispatch_semaphore_t dsema,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^TSAN_INTERCEPTOR(void, dispatch_after, dispatch_time_t when,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^TSAN_INTERCEPTOR(void, dispatch_after_f, dispatch_time_t when,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^TSAN_INTERCEPTOR(void, dispatch_apply, size_t iterations,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^TSAN_INTERCEPTOR(void, dispatch_apply_f, size_t iterations,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^TSAN_INTERCEPTOR(void, dispatch_group_async, dispatch_group_t group,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^TSAN_INTERCEPTOR(void, dispatch_group_async_f, dispatch_group_t group,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^TSAN_INTERCEPTOR(void, dispatch_group_leave, dispatch_group_t group) {$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^TSAN_INTERCEPTOR(void, dispatch_group_notify, dispatch_group_t group,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^TSAN_INTERCEPTOR(void, dispatch_group_notify_f, dispatch_group_t group,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^TSAN_INTERCEPTOR(void, dispatch_io_barrier, dispatch_io_t channel,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^TSAN_INTERCEPTOR(void, dispatch_io_close, dispatch_io_t channel,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^TSAN_INTERCEPTOR(void, dispatch_io_read, dispatch_io_t channel, off_t offset,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^TSAN_INTERCEPTOR(void, dispatch_io_write, dispatch_io_t channel, off_t offset,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^TSAN_INTERCEPTOR(void, dispatch_once, dispatch_once_t *predicate,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^TSAN_INTERCEPTOR(void, dispatch_once_f, dispatch_once_t *predicate,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^TSAN_INTERCEPTOR(void, dispatch_read, dispatch_fd_t fd, size_t length,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^TSAN_INTERCEPTOR(void, dispatch_resume, dispatch_object_t o) {$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^TSAN_INTERCEPTOR(void, dispatch_source_set_cancel_handler,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^TSAN_INTERCEPTOR(void, dispatch_source_set_cancel_handler_f,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^TSAN_INTERCEPTOR(void, dispatch_source_set_event_handler,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^TSAN_INTERCEPTOR(void, dispatch_source_set_event_handler_f,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^TSAN_INTERCEPTOR(void, dispatch_source_set_registration_handler,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^TSAN_INTERCEPTOR(void, dispatch_source_set_registration_handler_f,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^TSAN_INTERCEPTOR(void, dispatch_write, dispatch_fd_t fd, dispatch_data_t data,$/;"	f	namespace:__tsan
TSAN_INTERCEPTORS_H	lib/tsan/rtl/tsan_interceptors.h	2;"	d
TSAN_INTERCEPTOR_NETBSD_ALIAS	lib/tsan/rtl/tsan_interceptors.h	53;"	d
TSAN_INTERCEPTOR_NETBSD_ALIAS_THR	lib/tsan/rtl/tsan_interceptors.h	56;"	d
TSAN_INTERCEPTOR_SETJMP	lib/tsan/rtl/tsan_interceptors.cc	/^extern "C" int TSAN_INTERCEPTOR_SETJMP(void *env) {$/;"	f
TSAN_INTERCEPTOR_SETJMP	lib/tsan/rtl/tsan_interceptors.cc	569;"	d	file:
TSAN_INTERCEPTOR_SETJMP_	lib/tsan/rtl/tsan_interceptors.cc	567;"	d	file:
TSAN_INTERCEPTOR_SETJMP__	lib/tsan/rtl/tsan_interceptors.cc	568;"	d	file:
TSAN_INTERCEPTOR_SIGSETJMP	lib/tsan/rtl/tsan_interceptors.cc	/^extern "C" int TSAN_INTERCEPTOR_SIGSETJMP(void *env) {$/;"	f
TSAN_INTERCEPTOR_SIGSETJMP	lib/tsan/rtl/tsan_interceptors.cc	570;"	d	file:
TSAN_INTERCEPT_VER	lib/tsan/rtl/tsan_interceptors.cc	288;"	d	file:
TSAN_INTERCEPT_VER	lib/tsan/rtl/tsan_interceptors.cc	292;"	d	file:
TSAN_INTERCEPT_VER	lib/tsan/rtl/tsan_interceptors.cc	298;"	d	file:
TSAN_INTERFACE_ANN_H	lib/tsan/rtl/tsan_interface_ann.h	15;"	d
TSAN_INTERFACE_ATOMIC_H	include/sanitizer/tsan_interface_atomic.h	15;"	d
TSAN_INTERFACE_H	lib/tsan/rtl/tsan_interface.h	17;"	d
TSAN_INTERFACE_JAVA_H	lib/tsan/rtl/tsan_interface_java.h	25;"	d
TSAN_MAP_ANON	test/tsan/ignore_lib5.cc	37;"	d	file:
TSAN_MAP_ANON	test/tsan/ignore_lib5.cc	39;"	d	file:
TSAN_MAYBE_INTERCEPT_CREAT64	lib/tsan/rtl/tsan_interceptors.cc	1512;"	d	file:
TSAN_MAYBE_INTERCEPT_CREAT64	lib/tsan/rtl/tsan_interceptors.cc	1514;"	d	file:
TSAN_MAYBE_INTERCEPT_EPOLL	lib/tsan/rtl/tsan_interceptors.cc	1805;"	d	file:
TSAN_MAYBE_INTERCEPT_EPOLL	lib/tsan/rtl/tsan_interceptors.cc	1812;"	d	file:
TSAN_MAYBE_INTERCEPT_EVENTFD	lib/tsan/rtl/tsan_interceptors.cc	1551;"	d	file:
TSAN_MAYBE_INTERCEPT_EVENTFD	lib/tsan/rtl/tsan_interceptors.cc	1553;"	d	file:
TSAN_MAYBE_INTERCEPT_FSTAT64	lib/tsan/rtl/tsan_interceptors.cc	1466;"	d	file:
TSAN_MAYBE_INTERCEPT_FSTAT64	lib/tsan/rtl/tsan_interceptors.cc	1468;"	d	file:
TSAN_MAYBE_INTERCEPT_INOTIFY_INIT	lib/tsan/rtl/tsan_interceptors.cc	1579;"	d	file:
TSAN_MAYBE_INTERCEPT_INOTIFY_INIT	lib/tsan/rtl/tsan_interceptors.cc	1581;"	d	file:
TSAN_MAYBE_INTERCEPT_INOTIFY_INIT1	lib/tsan/rtl/tsan_interceptors.cc	1592;"	d	file:
TSAN_MAYBE_INTERCEPT_INOTIFY_INIT1	lib/tsan/rtl/tsan_interceptors.cc	1594;"	d	file:
TSAN_MAYBE_INTERCEPT_MEMALIGN	lib/tsan/rtl/tsan_interceptors.cc	796;"	d	file:
TSAN_MAYBE_INTERCEPT_MEMALIGN	lib/tsan/rtl/tsan_interceptors.cc	798;"	d	file:
TSAN_MAYBE_INTERCEPT_NETBSD_ALIAS	lib/tsan/rtl/tsan_interceptors.cc	289;"	d	file:
TSAN_MAYBE_INTERCEPT_NETBSD_ALIAS	lib/tsan/rtl/tsan_interceptors.cc	293;"	d	file:
TSAN_MAYBE_INTERCEPT_NETBSD_ALIAS	lib/tsan/rtl/tsan_interceptors.cc	299;"	d	file:
TSAN_MAYBE_INTERCEPT_NETBSD_ALIAS_THR	lib/tsan/rtl/tsan_interceptors.cc	290;"	d	file:
TSAN_MAYBE_INTERCEPT_NETBSD_ALIAS_THR	lib/tsan/rtl/tsan_interceptors.cc	295;"	d	file:
TSAN_MAYBE_INTERCEPT_NETBSD_ALIAS_THR	lib/tsan/rtl/tsan_interceptors.cc	300;"	d	file:
TSAN_MAYBE_INTERCEPT_ON_EXIT	lib/tsan/rtl/tsan_interceptors.cc	465;"	d	file:
TSAN_MAYBE_INTERCEPT_ON_EXIT	lib/tsan/rtl/tsan_interceptors.cc	467;"	d	file:
TSAN_MAYBE_INTERCEPT_OPEN64	lib/tsan/rtl/tsan_interceptors.cc	1489;"	d	file:
TSAN_MAYBE_INTERCEPT_OPEN64	lib/tsan/rtl/tsan_interceptors.cc	1491;"	d	file:
TSAN_MAYBE_INTERCEPT_PVALLOC	lib/tsan/rtl/tsan_interceptors.cc	827;"	d	file:
TSAN_MAYBE_INTERCEPT_PVALLOC	lib/tsan/rtl/tsan_interceptors.cc	829;"	d	file:
TSAN_MAYBE_INTERCEPT_SIGNALFD	lib/tsan/rtl/tsan_interceptors.cc	1566;"	d	file:
TSAN_MAYBE_INTERCEPT_SIGNALFD	lib/tsan/rtl/tsan_interceptors.cc	1568;"	d	file:
TSAN_MAYBE_INTERCEPT_THR_EXIT	lib/tsan/rtl/tsan_interceptors.cc	2541;"	d	file:
TSAN_MAYBE_INTERCEPT_THR_EXIT	lib/tsan/rtl/tsan_interceptors.cc	2543;"	d	file:
TSAN_MAYBE_INTERCEPT_TMPFILE64	lib/tsan/rtl/tsan_interceptors.cc	1721;"	d	file:
TSAN_MAYBE_INTERCEPT_TMPFILE64	lib/tsan/rtl/tsan_interceptors.cc	1723;"	d	file:
TSAN_MAYBE_INTERCEPT__LWP_EXIT	lib/tsan/rtl/tsan_interceptors.cc	2530;"	d	file:
TSAN_MAYBE_INTERCEPT__LWP_EXIT	lib/tsan/rtl/tsan_interceptors.cc	2532;"	d	file:
TSAN_MAYBE_INTERCEPT___CLOSE	lib/tsan/rtl/tsan_interceptors.cc	1652;"	d	file:
TSAN_MAYBE_INTERCEPT___CLOSE	lib/tsan/rtl/tsan_interceptors.cc	1654;"	d	file:
TSAN_MAYBE_INTERCEPT___FXSTAT	lib/tsan/rtl/tsan_interceptors.cc	1428;"	d	file:
TSAN_MAYBE_INTERCEPT___FXSTAT	lib/tsan/rtl/tsan_interceptors.cc	1430;"	d	file:
TSAN_MAYBE_INTERCEPT___FXSTAT64	lib/tsan/rtl/tsan_interceptors.cc	1454;"	d	file:
TSAN_MAYBE_INTERCEPT___FXSTAT64	lib/tsan/rtl/tsan_interceptors.cc	1456;"	d	file:
TSAN_MAYBE_INTERCEPT___RES_ICLOSE	lib/tsan/rtl/tsan_interceptors.cc	1669;"	d	file:
TSAN_MAYBE_INTERCEPT___RES_ICLOSE	lib/tsan/rtl/tsan_interceptors.cc	1671;"	d	file:
TSAN_MID_APP_RANGE	lib/tsan/rtl/tsan_platform.h	79;"	d
TSAN_MMAN_H	lib/tsan/rtl/tsan_mman.h	14;"	d
TSAN_MUTEXSET_H	lib/tsan/rtl/tsan_mutexset.h	15;"	d
TSAN_MUTEX_H	lib/tsan/rtl/tsan_mutex.h	14;"	d
TSAN_NO_HISTORY	lib/tsan/rtl/tsan_defs.h	24;"	d
TSAN_PLATFORM_H	lib/tsan/rtl/tsan_platform.h	16;"	d
TSAN_POSIX_UTIL_H	lib/tsan/tests/rtl/tsan_posix_util.h	15;"	d
TSAN_REPORT_H	lib/tsan/rtl/tsan_report.h	14;"	d
TSAN_RTL_H	lib/tsan/rtl/tsan_rtl.h	27;"	d
TSAN_STACK_TRACE_H	lib/tsan/rtl/tsan_stack_trace.h	14;"	d
TSAN_STAT_H	lib/tsan/rtl/tsan_stat.h	15;"	d
TSAN_STRING_SETJMP	lib/tsan/rtl/tsan_interceptors.cc	572;"	d	file:
TSAN_STRING_SIGSETJMP	lib/tsan/rtl/tsan_interceptors.cc	573;"	d	file:
TSAN_SUPPRESSIONS_H	lib/tsan/rtl/tsan_suppressions.h	14;"	d
TSAN_SYMBOLIZE_H	lib/tsan/rtl/tsan_symbolize.h	14;"	d
TSAN_SYNC_H	lib/tsan/rtl/tsan_sync.h	14;"	d
TSAN_SYSCALL	lib/tsan/rtl/tsan_interceptors.cc	2383;"	d	file:
TSAN_TEST_UTIL_H	lib/tsan/tests/rtl/tsan_test_util.h	15;"	d
TSAN_TRACE_H	lib/tsan/rtl/tsan_trace.h	14;"	d
TSC	lib/xray/xray_fdr_logging.cc	/^  uint64_t TSC = 0;$/;"	m	struct:__xray::TSCAndCPU	file:
TSCAndCPU	lib/xray/xray_fdr_logging.cc	/^struct TSCAndCPU {$/;"	s	namespace:__xray	file:
TSD	lib/scudo/scudo_tsd_exclusive.cpp	/^THREADLOCAL ScudoTSD TSD;$/;"	m	namespace:__scudo	file:
TSDAllocWorker	lib/asan/tests/asan_mac_test.cc	/^void *TSDAllocWorker(void *test_key) {$/;"	f
TSDDestructor	lib/asan/tests/asan_test.cc	/^void TSDDestructor(void *tsd) {$/;"	f
TSDDtor	lib/asan/asan_thread.cc	/^void AsanThread::TSDDtor(void *tsd) {$/;"	f	class:__asan::AsanThread
TSDDtor	lib/hwasan/hwasan_thread.cc	/^void HwasanThread::TSDDtor(void *tsd) {$/;"	f	class:__hwasan::HwasanThread
TSDDtor	lib/msan/msan_thread.cc	/^void MsanThread::TSDDtor(void *tsd) {$/;"	f	class:__msan::MsanThread
TSDWorker	lib/asan/tests/asan_test.cc	/^void *TSDWorker(void *test_key) {$/;"	f
TSDs	lib/scudo/scudo_tsd_shared.cpp	/^static ScudoTSD *TSDs;$/;"	m	namespace:__scudo	file:
TWOROOT_LO	lib/builtins/hexagon/dfsqrt.S	/^		TWOROOT_LO = #1$/;"	d
TWOROOT_LO	lib/builtins/hexagon/dfsqrt.S	/^#define TWOROOT_LO r9:8$/;"	d
TWOp52	lib/builtins/i386/floatundisf.S	/^#define			TWOp52			twop52-0b(%ecx)$/;"	d
TYPED_EVENT	include/xray/xray_interface.h	/^  TYPED_EVENT = 5,$/;"	e	enum:XRayEntryType
T_int	test/cfi/mfcall.cpp	/^typedef int (T::*T_int)();$/;"	t	file:
Table	lib/esan/esan_hashtable.h	/^    HashTable<KeyTy, DataTy, ExternalLock, HashFuncTy, EqualFuncTy> *Table;$/;"	m	class:__esan::HashTable::iterator
Table	lib/esan/esan_hashtable.h	/^  HashEntry **Table;$/;"	m	class:__esan::HashTable
Table	lib/fuzzer/FuzzerTracePC.h	/^  Pair Table[kSize];$/;"	m	struct:fuzzer::TableOfRecentCompares
TableOfRecentCompares	lib/fuzzer/FuzzerTracePC.h	/^struct TableOfRecentCompares {$/;"	s	namespace:fuzzer
TagData	lib/tsan/rtl/tsan_external.cc	/^struct TagData {$/;"	s	namespace:__tsan	file:
TagFromShadowStackFrame	lib/tsan/rtl/tsan_external.cc	/^uptr TagFromShadowStackFrame(uptr pc) {$/;"	f	namespace:__tsan
TagMemory	lib/hwasan/hwasan_poisoning.cc	/^uptr TagMemory(uptr p, uptr size, tag_t tag) {$/;"	f	namespace:__hwasan
TagMemoryAligned	lib/hwasan/hwasan_poisoning.cc	/^uptr TagMemoryAligned(uptr p, uptr size, tag_t tag) {$/;"	f	namespace:__hwasan
Tail	lib/xray/xray_segmented_array.h	/^  SegmentBase *Tail = &SentinelSegment;$/;"	m	class:__xray::Array
Target	test/fuzzer/CustomCrossOverTest.cpp	/^static const char *Target = "A-########-B";$/;"	v	file:
TearDown	lib/sanitizer_common/tests/sanitizer_linux_test.cc	/^  virtual void TearDown() {$/;"	f	class:__sanitizer::ThreadListerTest
TearDown	lib/sanitizer_common/tests/sanitizer_stacktrace_test.cc	/^void FastUnwindTest::TearDown() {$/;"	f	class:__sanitizer::FastUnwindTest
TempAutoDictionary	lib/fuzzer/FuzzerMutate.h	/^  Dictionary TempAutoDictionary;$/;"	m	class:fuzzer::MutationDispatcher
TempFstabFile	lib/msan/tests/msan_test.cc	/^   TempFstabFile() : fd (-1) { }$/;"	f	class:TempFstabFile
TempFstabFile	lib/msan/tests/msan_test.cc	/^class TempFstabFile {$/;"	c	file:
TemplateMatch	lib/sanitizer_common/sanitizer_common.cc	/^bool TemplateMatch(const char *templ, const char *str) {$/;"	f	namespace:__sanitizer
Test	test/profile/Inputs/extern_template.h	/^  Test() : M(10) {}$/;"	f	struct:Test
Test	test/profile/Inputs/extern_template.h	/^template <typename T> struct Test {$/;"	s
Test	test/sanitizer_common/TestCases/get_module_and_offset_for_pc.cc	/^void Test(void *pc, const char *name) {$/;"	f
Test	test/tsan/atomic_norace.cc	/^void Test(int test, T *p, bool main_thread) {$/;"	f
Test	test/tsan/atomic_race.cc	/^void Test(int test, T *p, bool main_thread) {$/;"	f
Test	test/tsan/unaligned_norace.cc	/^void Test(bool main) {$/;"	f
Test	test/tsan/unaligned_race.cc	/^NOINLINE void Test(bool main) {$/;"	f
Test1	test/tsan/deadlock_detector_stress_test.cc	/^  void Test1() {$/;"	f	class:LockTest
Test10	test/tsan/deadlock_detector_stress_test.cc	/^  void Test10() {$/;"	f	class:LockTest
Test10_Thread	test/tsan/deadlock_detector_stress_test.cc	/^  void Test10_Thread(size_t m) {$/;"	f	class:LockTest
Test10_Thread1	test/tsan/deadlock_detector_stress_test.cc	/^  void Test10_Thread1() { Test10_Thread(0); }$/;"	f	class:LockTest
Test10_Thread2	test/tsan/deadlock_detector_stress_test.cc	/^  void Test10_Thread2() { Test10_Thread(10); }$/;"	f	class:LockTest
Test10_Thread3	test/tsan/deadlock_detector_stress_test.cc	/^  void Test10_Thread3() { Test10_Thread(20); }$/;"	f	class:LockTest
Test10_Thread4	test/tsan/deadlock_detector_stress_test.cc	/^  void Test10_Thread4() { Test10_Thread(30); }$/;"	f	class:LockTest
Test11	test/tsan/deadlock_detector_stress_test.cc	/^  void Test11() {$/;"	f	class:LockTest
Test11_Thread	test/tsan/deadlock_detector_stress_test.cc	/^  void Test11_Thread(size_t m) {$/;"	f	class:LockTest
Test11_Thread1	test/tsan/deadlock_detector_stress_test.cc	/^  void Test11_Thread1() { Test10_Thread(0); }$/;"	f	class:LockTest
Test11_Thread2	test/tsan/deadlock_detector_stress_test.cc	/^  void Test11_Thread2() { Test10_Thread(10); }$/;"	f	class:LockTest
Test11_Thread3	test/tsan/deadlock_detector_stress_test.cc	/^  void Test11_Thread3() { Test10_Thread(20); }$/;"	f	class:LockTest
Test11_Thread4	test/tsan/deadlock_detector_stress_test.cc	/^  void Test11_Thread4() { Test10_Thread(30); }$/;"	f	class:LockTest
Test12	test/tsan/deadlock_detector_stress_test.cc	/^  void Test12() {$/;"	f	class:LockTest
Test12_Thread	test/tsan/deadlock_detector_stress_test.cc	/^  void Test12_Thread() {$/;"	f	class:LockTest
Test13	test/tsan/deadlock_detector_stress_test.cc	/^  void Test13() {$/;"	f	class:LockTest
Test13_Thread	test/tsan/deadlock_detector_stress_test.cc	/^  void Test13_Thread() {$/;"	f	class:LockTest
Test14	test/tsan/deadlock_detector_stress_test.cc	/^  void Test14() {$/;"	f	class:LockTest
Test15	test/tsan/deadlock_detector_stress_test.cc	/^  void Test15() {$/;"	f	class:LockTest
Test16	test/tsan/deadlock_detector_stress_test.cc	/^  void Test16() {$/;"	f	class:LockTest
Test17	test/tsan/deadlock_detector_stress_test.cc	/^  void Test17() {$/;"	f	class:LockTest
Test18	test/tsan/deadlock_detector_stress_test.cc	/^  void Test18() {$/;"	f	class:LockTest
Test18_Thread	test/tsan/deadlock_detector_stress_test.cc	/^  void Test18_Thread() {$/;"	f	class:LockTest
Test19	test/tsan/deadlock_detector_stress_test.cc	/^  void Test19() {$/;"	f	class:LockTest
Test2	test/tsan/deadlock_detector_stress_test.cc	/^  void Test2() {$/;"	f	class:LockTest
Test3	test/tsan/deadlock_detector_stress_test.cc	/^  void Test3() {$/;"	f	class:LockTest
Test4	test/tsan/deadlock_detector_stress_test.cc	/^  void Test4() {$/;"	f	class:LockTest
Test5	test/tsan/deadlock_detector_stress_test.cc	/^  void Test5() {$/;"	f	class:LockTest
Test6	test/tsan/deadlock_detector_stress_test.cc	/^  void Test6() {$/;"	f	class:LockTest
Test7	test/tsan/deadlock_detector_stress_test.cc	/^  void Test7() {$/;"	f	class:LockTest
Test8	test/tsan/deadlock_detector_stress_test.cc	/^  void Test8() {$/;"	f	class:LockTest
Test9	test/tsan/deadlock_detector_stress_test.cc	/^  void Test9() {$/;"	f	class:LockTest
TestAddWordFromDictionary	lib/fuzzer/tests/FuzzerUnittest.cpp	/^void TestAddWordFromDictionary(Mutator M, int NumIter) {$/;"	f
TestAgainstLibc	lib/sanitizer_common/tests/sanitizer_printf_test.cc	/^static void TestAgainstLibc(const char *fmt, T arg1, T arg2) {$/;"	f	namespace:__sanitizer
TestAsmRead	lib/asan/tests/asan_asm_test.cc	/^template<> void TestAsmRead<__m128i>(const char *DeathPattern) {$/;"	f	namespace:__anon45
TestAsmRead	lib/asan/tests/asan_asm_test.cc	/^template<typename T> void TestAsmRead(const char *DeathPattern) {$/;"	f	namespace:__anon45
TestAsmRepMovs	lib/asan/tests/asan_asm_test.cc	/^void TestAsmRepMovs(const char *DeathPatternRead,$/;"	f	namespace:__anon45
TestAsmWrite	lib/asan/tests/asan_asm_test.cc	/^template<> void TestAsmWrite<__m128i>(const char *DeathPattern) {$/;"	f	namespace:__anon45
TestAsmWrite	lib/asan/tests/asan_asm_test.cc	/^template<typename T> void TestAsmWrite(const char *DeathPattern) {$/;"	f	namespace:__anon45
TestBitVector	lib/sanitizer_common/tests/sanitizer_bitvector_test.cc	/^void TestBitVector(uptr expected_size) {$/;"	f
TestBufCapacity	test/esan/Unit/circular_buffer.cpp	/^static const int TestBufCapacity = 4;$/;"	v	file:
TestCallerPc	test/sanitizer_common/TestCases/get_module_and_offset_for_pc.cc	/^void TestCallerPc() { Test(__builtin_return_address(0), "callerpc"); }$/;"	f
TestChangeASCIIInteger	lib/fuzzer/tests/FuzzerUnittest.cpp	/^void TestChangeASCIIInteger(Mutator M, int NumIter) {$/;"	f
TestChangeBinaryInteger	lib/fuzzer/tests/FuzzerUnittest.cpp	/^void TestChangeBinaryInteger(Mutator M, int NumIter) {$/;"	f
TestChangeBit	lib/fuzzer/tests/FuzzerUnittest.cpp	/^void TestChangeBit(Mutator M, int NumIter) {$/;"	f
TestChangeByte	lib/fuzzer/tests/FuzzerUnittest.cpp	/^void TestChangeByte(Mutator M, int NumIter) {$/;"	f
TestCombinedAllocator	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^void TestCombinedAllocator() {$/;"	f
TestContainer	test/asan/TestCases/contiguous_container.cc	/^void TestContainer(size_t capacity) {$/;"	f
TestCopyPart	lib/fuzzer/tests/FuzzerUnittest.cpp	/^void TestCopyPart(Mutator M, int NumIter) {$/;"	f
TestCrash	test/asan/TestCases/contiguous_container_crash.cc	/^int TestCrash() {$/;"	f
TestData	lib/sanitizer_common/tests/sanitizer_mutex_test.cc	/^  explicit TestData(MutexType *mtx)$/;"	f	class:__sanitizer::TestData
TestData	lib/sanitizer_common/tests/sanitizer_mutex_test.cc	/^class TestData {$/;"	c	namespace:__sanitizer	file:
TestData	lib/tsan/tests/unit/tsan_mutex_test.cc	/^  explicit TestData(MutexType *mtx)$/;"	f	class:__tsan::TestData
TestData	lib/tsan/tests/unit/tsan_mutex_test.cc	/^class TestData {$/;"	c	namespace:__tsan	file:
TestData	lib/xray/tests/unit/allocator_test.cc	/^struct TestData {$/;"	s	namespace:__xray::__anon24	file:
TestData	lib/xray/tests/unit/segmented_array_test.cc	/^  TestData(s64 F, s64 S) : First(F), Second(S) {}$/;"	f	struct:__xray::__anon23::TestData
TestData	lib/xray/tests/unit/segmented_array_test.cc	/^struct TestData {$/;"	s	namespace:__xray::__anon23	file:
TestDlsym	test/sanitizer_common/TestCases/get_module_and_offset_for_pc.cc	/^void TestDlsym() {$/;"	f
TestEraseBytes	lib/fuzzer/tests/FuzzerUnittest.cpp	/^void TestEraseBytes(Mutator M, int NumIter) {$/;"	f
TestFlag	lib/sanitizer_common/tests/sanitizer_flags_test.cc	/^static void TestFlag(T start_value, const char *env, T final_value) {$/;"	f	namespace:__sanitizer
TestFlag	lib/sanitizer_common/tests/sanitizer_flags_test.cc	/^void TestFlag(const char *start_value, const char *env,$/;"	f	namespace:__sanitizer
TestFloatingPoint	lib/msan/tests/msan_test.cc	/^void TestFloatingPoint() {$/;"	f
TestForNotPoisoned	lib/msan/tests/msan_test.cc	/^bool TestForNotPoisoned(const T& t) {$/;"	f
TestForNotPoisoned	lib/msan/tests/msan_test.cc	/^bool TestForNotPoisoned(const void *data, size_t size) {$/;"	f
TestFunctionPatching	lib/interception/tests/interception_win_test.cc	/^static bool TestFunctionPatching($/;"	f	namespace:__interception
TestIdentityFunctionMultiplePatching	lib/interception/tests/interception_win_test.cc	/^static void TestIdentityFunctionMultiplePatching($/;"	f	namespace:__interception
TestIdentityFunctionPatching	lib/interception/tests/interception_win_test.cc	/^static void TestIdentityFunctionPatching($/;"	f	namespace:__interception
TestInsertByte	lib/fuzzer/tests/FuzzerUnittest.cpp	/^void TestInsertByte(Mutator M, int NumIter) {$/;"	f
TestInsertRepeatedBytes	lib/fuzzer/tests/FuzzerUnittest.cpp	/^void TestInsertRepeatedBytes(Mutator M, int NumIter) {$/;"	f
TestLargeMalloc	lib/asan/tests/asan_test.cc	/^static void TestLargeMalloc(size_t size) {$/;"	f	file:
TestLintLine	lib/sanitizer_common/scripts/litlint_test.py	/^class TestLintLine(unittest.TestCase):$/;"	c
TestLoop	test/sanitizer_common/TestCases/get_module_and_offset_for_pc.cc	/^void TestLoop() {$/;"	f
TestMapUnmapCallback	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^struct TestMapUnmapCallback {$/;"	s	file:
TestMutexBeforeInit	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^void TestMutexBeforeInit() {$/;"	f
TestObject	test/BlocksRuntime/copyconstructor.C	/^TestObject::TestObject()$/;"	f	class:TestObject
TestObject	test/BlocksRuntime/copyconstructor.C	/^TestObject::TestObject(CONST TestObject& inObj)$/;"	f	class:TestObject
TestObject	test/BlocksRuntime/copyconstructor.C	/^class TestObject$/;"	c	file:
TestObject	test/BlocksRuntime/josh.C	/^struct TestObject {$/;"	s	file:
TestObject	test/BlocksRuntime/reference.C	/^TestObject::TestObject()$/;"	f	class:TestObject
TestObject	test/BlocksRuntime/reference.C	/^TestObject::TestObject(CONST TestObject& inObj)$/;"	f	class:TestObject
TestObject	test/BlocksRuntime/reference.C	/^class TestObject$/;"	c	file:
TestOnlyReleaseTrampolineRegions	lib/interception/interception_win.cc	/^void TestOnlyReleaseTrampolineRegions() {$/;"	f	namespace:__interception
TestOnlyUnmap	lib/sanitizer_common/sanitizer_allocator_bytemap.h	/^  void TestOnlyUnmap() {$/;"	f	class:TwoLevelByteMap
TestOnlyUnmap	lib/sanitizer_common/sanitizer_allocator_combined.h	/^  void TestOnlyUnmap() { primary_.TestOnlyUnmap(); }$/;"	f	class:CombinedAllocator
TestOnlyUnmap	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^  void TestOnlyUnmap() {$/;"	f	class:SizeClassAllocator32
TestOnlyUnmap	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  void TestOnlyUnmap() {$/;"	f	class:SizeClassAllocator64
TestOverlapMemmove	lib/msan/tests/msan_test.cc	/^void TestOverlapMemmove() {$/;"	f
TestOverrideFunction	lib/interception/tests/interception_win_test.cc	/^typedef bool (*TestOverrideFunction)(uptr, uptr, uptr*);$/;"	t	namespace:__interception::__anon12	file:
TestPoisonStack	test/msan/Linux/fopencookie.cc	/^void TestPoisonStack() {$/;"	f
TestRegistry	lib/sanitizer_common/tests/sanitizer_thread_registry_test.cc	/^static void TestRegistry(ThreadRegistry *registry, bool has_quarantine) {$/;"	f	namespace:__sanitizer
TestReleaseFreeMemoryToOS	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^void TestReleaseFreeMemoryToOS() {$/;"	f
TestReturnStruct	lib/msan/tests/msan_test.cc	/^NOINLINE void TestReturnStruct() {$/;"	f
TestShuffleBytes	lib/fuzzer/tests/FuzzerUnittest.cpp	/^void TestShuffleBytes(Mutator M, int NumIter) {$/;"	f
TestSizeClassAllocator	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^void TestSizeClassAllocator() {$/;"	f
TestSizeClassAllocatorIteration	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^void TestSizeClassAllocatorIteration() {$/;"	f
TestSizeClassAllocatorLocalCache	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^void TestSizeClassAllocatorLocalCache() {$/;"	f
TestSizeClassMap	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^void TestSizeClassMap() {$/;"	f
TestStackTrace	lib/tsan/tests/unit/tsan_stack_test.cc	/^static void TestStackTrace(StackTraceTy *trace) {$/;"	f	namespace:__tsan
TestThreadContext	lib/sanitizer_common/tests/sanitizer_thread_registry_test.cc	/^  explicit TestThreadContext(int tid) : ThreadContextBase(tid) {}$/;"	f	class:__sanitizer::__anon61::TestThreadContext
TestThreadContext	lib/sanitizer_common/tests/sanitizer_thread_registry_test.cc	/^class TestThreadContext : public ThreadContextBase {$/;"	c	namespace:__sanitizer::__anon61	file:
TestThreadInfo	lib/sanitizer_common/tests/sanitizer_common_test.cc	/^void TestThreadInfo(bool main) {$/;"	f	namespace:__sanitizer
TestThrow	test/asan/TestCases/contiguous_container.cc	/^void TestThrow() {$/;"	f
TestThrow	test/asan/TestCases/throw_catch.cc	/^void TestThrow() {$/;"	f
TestThrowInline	test/asan/TestCases/throw_catch.cc	/^void TestThrowInline() {$/;"	f
TestTrim	lib/tsan/tests/unit/tsan_stack_test.cc	/^static void TestTrim(StackTraceTy *trace) {$/;"	f	namespace:__tsan
TestTwoFlags	lib/sanitizer_common/tests/sanitizer_flags_test.cc	/^static void TestTwoFlags(const char *env, bool expected_flag1,$/;"	f	namespace:__sanitizer
TestUnalignedMemcpy	lib/msan/tests/msan_test.cc	/^void TestUnalignedMemcpy(unsigned left, unsigned right, bool src_is_aligned,$/;"	f
TestVector	test/builtins/Unit/comparedf2_test.c	/^struct TestVector {$/;"	s	file:
TestVector	test/builtins/Unit/comparesf2_test.c	/^struct TestVector {$/;"	s	file:
Test_isReachable	lib/sanitizer_common/tests/sanitizer_bvgraph_test.cc	/^void Test_isReachable() {$/;"	f
Text	lib/ubsan/ubsan_diag.h	/^  const char *Text;$/;"	m	class:__ubsan::Range
TheBufferIO	lib/profile/InstrProfilingWriter.c	/^static ProfBufferIO TheBufferIO;$/;"	v	file:
TheThread	lib/esan/esan_sideline_linux.cpp	/^static SidelineThread *TheThread;$/;"	m	namespace:__esan	file:
TheVPDataReader	lib/profile/InstrProfilingValue.c	/^static VPDataReaderType TheVPDataReader = {$/;"	v	file:
ThisT	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^  typedef SizeClassAllocator32<Params> ThisT;$/;"	t	class:SizeClassAllocator32
ThisT	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  typedef SizeClassAllocator64<Params> ThisT;$/;"	t	class:SizeClassAllocator64
Thread	lib/esan/working_set.cpp	/^static SidelineThread Thread;$/;"	m	namespace:__esan	file:
Thread	lib/sanitizer_common/tests/malloc_stress_transfer_test.cc	/^void Thread() {$/;"	f
Thread	lib/tsan/benchmarks/mini_bench_local.cc	/^void *Thread(void *arg) {$/;"	f
Thread	lib/tsan/benchmarks/mini_bench_shared.cc	/^void *Thread(void *arg) {$/;"	f
Thread	lib/tsan/benchmarks/start_many_threads.cc	/^void* Thread(void *unused) {$/;"	f
Thread	lib/tsan/benchmarks/vts_many_threads_bench.cc	/^void *Thread(void *arg) {$/;"	f
Thread	lib/tsan/dd/dd_rtl.h	/^struct Thread {$/;"	s	namespace:__dsan
Thread	test/asan/TestCases/Posix/gc-test.cc	/^void *Thread(void *unused)  {$/;"	f
Thread	test/asan/TestCases/Posix/stack-use-after-return.cc	/^void *Thread(void *unused)  {$/;"	f
Thread	test/asan/TestCases/Posix/tsd_dtor_leak.cc	/^void *Thread(void *) {$/;"	f
Thread	test/tsan/Darwin/debug_external.cc	/^void *Thread(void *arg) {$/;"	f
Thread	test/tsan/Darwin/osspinlock-norace.cc	/^void *Thread(void *x) {$/;"	f
Thread	test/tsan/Darwin/symbolizer-atos.cc	/^void *Thread(void *a) {$/;"	f
Thread	test/tsan/Darwin/symbolizer-dladdr.cc	/^void *Thread(void *a) {$/;"	f
Thread	test/tsan/Linux/double_race.cc	/^void *Thread(void *arg) {$/;"	f
Thread	test/tsan/atomic_free.cc	/^void *Thread(void *a) {$/;"	f
Thread	test/tsan/atomic_free2.cc	/^void *Thread(void *a) {$/;"	f
Thread	test/tsan/atomic_free3.cc	/^void *Thread(void *a) {$/;"	f
Thread	test/tsan/atomic_norace.cc	/^void *Thread(void *p) {$/;"	f
Thread	test/tsan/atomic_race.cc	/^void *Thread(void *p) {$/;"	f
Thread	test/tsan/benign_race.cc	/^void *Thread(void *x) {$/;"	f
Thread	test/tsan/deadlock_detector_stress_test.cc	/^  static void *Thread(void *param) {$/;"	f	class:LockTest	file:
Thread	test/tsan/debugging.cc	/^void *Thread(void *a) {$/;"	f
Thread	test/tsan/deep_stack1.cc	/^void *Thread(void *p) {$/;"	f
Thread	test/tsan/fd_close_norace2.cc	/^void *Thread(void *x) {$/;"	f
Thread	test/tsan/fd_dup_norace2.cc	/^void *Thread(void *x) {$/;"	f
Thread	test/tsan/fd_dup_race.cc	/^void *Thread(void *x) {$/;"	f
Thread	test/tsan/global_race.cc	/^void *Thread(void *a) {$/;"	f
Thread	test/tsan/global_race2.cc	/^void *Thread(void *a) {$/;"	f
Thread	test/tsan/global_race3.cc	/^void *Thread(void *a) {$/;"	f
Thread	test/tsan/halt_on_error.cc	/^void *Thread(void *x) {$/;"	f
Thread	test/tsan/heap_race.cc	/^void *Thread(void *a) {$/;"	f
Thread	test/tsan/ignore_free.cc	/^void *Thread(void *p) {$/;"	f
Thread	test/tsan/ignore_lib_lib.h	/^void *Thread(void *p) {$/;"	f
Thread	test/tsan/ignore_malloc.cc	/^void *Thread(void *a) {$/;"	f
Thread	test/tsan/ignore_race.cc	/^void *Thread(void *x) {$/;"	f
Thread	test/tsan/ignore_sync.cc	/^void *Thread(void *x) {$/;"	f
Thread	test/tsan/ignored-interceptors-mmap.cc	/^void *Thread(void *a) {$/;"	f
Thread	test/tsan/java_alloc.cc	/^void *Thread(void *p) {$/;"	f
Thread	test/tsan/java_finalizer.cc	/^void *Thread(void *p) {$/;"	f
Thread	test/tsan/java_lock.cc	/^void *Thread(void *p) {$/;"	f
Thread	test/tsan/java_lock_move.cc	/^void *Thread(void *p) {$/;"	f
Thread	test/tsan/java_lock_rec.cc	/^void *Thread(void *p) {$/;"	f
Thread	test/tsan/java_lock_rec_race.cc	/^void *Thread(void *p) {$/;"	f
Thread	test/tsan/java_move_overlap.cc	/^void *Thread(void *p) {$/;"	f
Thread	test/tsan/java_move_overlap_race.cc	/^void *Thread(void *p) {$/;"	f
Thread	test/tsan/java_race.cc	/^void *Thread(void *p) {$/;"	f
Thread	test/tsan/java_race_move.cc	/^void *Thread(void *p) {$/;"	f
Thread	test/tsan/java_race_pc.cc	/^void *Thread(void *p) {$/;"	f
Thread	test/tsan/java_rwlock.cc	/^void *Thread(void *p) {$/;"	f
Thread	test/tsan/java_symbolization.cc	/^void *Thread(void *p) {$/;"	f
Thread	test/tsan/java_symbolization_legacy.cc	/^void *Thread(void *p) {$/;"	f
Thread	test/tsan/java_volatile.cc	/^void *Thread(void *p) {$/;"	f
Thread	test/tsan/map32bit.cc	/^void *Thread(void *ptr) {$/;"	f
Thread	test/tsan/must_deadlock.cc	/^void *Thread(void *p) {$/;"	f
Thread	test/tsan/race_on_mutex2.c	/^void *Thread(void *x) {$/;"	f
Thread	test/tsan/race_top_suppression.cc	/^void *Thread(void *x) {$/;"	f
Thread	test/tsan/race_top_suppression1.cc	/^void *Thread(void *x) {$/;"	f
Thread	test/tsan/real_deadlock_detector_stress_test.cc	/^void *Thread(void *seed) {$/;"	f
Thread	test/tsan/restore_stack.cc	/^void *Thread(void *a) {$/;"	f
Thread	test/tsan/sleep_sync.cc	/^void *Thread(void *p) {$/;"	f
Thread	test/tsan/sleep_sync2.cc	/^void *Thread(void *p) {$/;"	f
Thread	test/tsan/stack_race.cc	/^void *Thread(void *a) {$/;"	f
Thread	test/tsan/stack_race2.cc	/^void *Thread(void *a) {$/;"	f
Thread	test/tsan/stack_sync_reuse.cc	/^void *Thread(void *x) {$/;"	f
Thread	test/tsan/static_init1.cc	/^void *Thread(void *x) {$/;"	f
Thread	test/tsan/static_init2.cc	/^void *Thread(void *x) {$/;"	f
Thread	test/tsan/strerror_r.cc	/^void *Thread(void *p) {$/;"	f
Thread	test/tsan/thread_detach.c	/^void *Thread(void *x) {$/;"	f
Thread	test/tsan/thread_detach2.c	/^void *Thread(void *a) {$/;"	f
Thread	test/tsan/thread_end_with_ignore.cc	/^void *Thread(void *x) {$/;"	f
Thread	test/tsan/thread_leak.c	/^void *Thread(void *x) {$/;"	f
Thread	test/tsan/thread_leak2.c	/^void *Thread(void *x) {$/;"	f
Thread	test/tsan/thread_leak3.c	/^void *Thread(void *x) {$/;"	f
Thread	test/tsan/thread_leak4.c	/^void *Thread(void *x) {$/;"	f
Thread	test/tsan/thread_leak5.c	/^void *Thread(void *x) {$/;"	f
Thread	test/tsan/tls_race.cc	/^void *Thread(void *a) {$/;"	f
Thread	test/tsan/tls_race2.cc	/^void *Thread(void *a) {$/;"	f
Thread	test/tsan/unaligned_norace.cc	/^void *Thread(void *p) {$/;"	f
Thread	test/tsan/unaligned_race.cc	/^void *Thread(void *p) {$/;"	f
Thread	test/tsan/vptr_harmful_race4.cc	/^void *Thread(void *x) {$/;"	f
Thread0	test/tsan/race_on_fputs.cc	/^void *Thread0(void *p) {$/;"	f
Thread0	test/tsan/race_on_puts.cc	/^void *Thread0(void *p) {$/;"	f
Thread1	lib/asan/tests/asan_racy_double_free_test.cc	/^void *Thread1(void *unused) {$/;"	f
Thread1	test/msan/dtls_test.c	/^void *Thread1(void *unused) {$/;"	f
Thread1	test/tsan/aligned_vs_unaligned_race.cc	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/annotate_happens_before.cc	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/atomic_stack.cc	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/atomic_store.cc	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/blacklist.cc	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/blacklist2.cc	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/default_options.cc	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/dtls.c	/^void *Thread1(void *arg) {$/;"	f
Thread1	test/tsan/fd_close_norace.cc	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/fd_dup_norace.cc	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/fd_location.cc	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/fd_pipe_norace.cc	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/fd_pipe_race.cc	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/fd_socketpair_norace.cc	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/fd_stdout_race.cc	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/free_race.c	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/memcmp_race.cc	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/memcpy_race.cc	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/mop1.c	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/mop_with_offset.cc	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/mop_with_offset2.cc	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/mutexset1.cc	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/mutexset2.cc	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/mutexset3.cc	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/mutexset4.cc	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/mutexset5.cc	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/mutexset6.cc	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/mutexset7.cc	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/mutexset8.cc	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/race_on_barrier.c	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/race_on_barrier2.c	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/race_on_fputs.cc	/^void *Thread1(void *p) {$/;"	f
Thread1	test/tsan/race_on_heap.cc	/^void *Thread1(void *p) {$/;"	f
Thread1	test/tsan/race_on_mutex.c	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/race_on_puts.cc	/^void *Thread1(void *p) {$/;"	f
Thread1	test/tsan/race_on_read.cc	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/race_on_speculative_load.cc	/^void *Thread1(void *p) {$/;"	f
Thread1	test/tsan/race_on_write.cc	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/race_with_finished_thread.cc	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/simple_race.c	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/simple_race.cc	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/simple_stack.c	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/simple_stack2.cc	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/static_init3.cc	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/static_init4.cc	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/static_init5.cc	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/static_init6.cc	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/suppress_same_address.cc	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/suppress_same_stacks.cc	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/suppressions_global.cc	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/suppressions_race.cc	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/suppressions_race2.cc	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/thread_name.cc	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/thread_name2.cc	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/tiny_race.c	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/tsan-vs-gvn.cc	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/vfork.cc	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/vptr_benign_race.cc	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/vptr_harmful_race.cc	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/vptr_harmful_race2.cc	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/vptr_harmful_race3.cc	/^void *Thread1(void *x) {$/;"	f
Thread1	test/tsan/write_in_reader_lock.cc	/^void *Thread1(void *p) {$/;"	f
Thread2	lib/asan/tests/asan_racy_double_free_test.cc	/^void *Thread2(void *unused) {$/;"	f
Thread2	test/msan/dtls_test.c	/^void *Thread2(void *unused) {$/;"	f
Thread2	test/tsan/aligned_vs_unaligned_race.cc	/^void *Thread2(void *x) {$/;"	f
Thread2	test/tsan/annotate_happens_before.cc	/^void *Thread2(void *x) {$/;"	f
Thread2	test/tsan/atomic_stack.cc	/^void *Thread2(void *x) {$/;"	f
Thread2	test/tsan/atomic_store.cc	/^void *Thread2(void *x) {$/;"	f
Thread2	test/tsan/default_options.cc	/^void *Thread2(void *x) {$/;"	f
Thread2	test/tsan/dtls.c	/^void *Thread2(void *arg) {$/;"	f
Thread2	test/tsan/fd_close_norace.cc	/^void *Thread2(void *x) {$/;"	f
Thread2	test/tsan/fd_dup_norace.cc	/^void *Thread2(void *x) {$/;"	f
Thread2	test/tsan/fd_location.cc	/^void *Thread2(void *x) {$/;"	f
Thread2	test/tsan/fd_pipe_norace.cc	/^void *Thread2(void *x) {$/;"	f
Thread2	test/tsan/fd_pipe_race.cc	/^void *Thread2(void *x) {$/;"	f
Thread2	test/tsan/fd_socketpair_norace.cc	/^void *Thread2(void *x) {$/;"	f
Thread2	test/tsan/fd_stdout_race.cc	/^void *Thread2(void *x) {$/;"	f
Thread2	test/tsan/free_race.c	/^void *Thread2(void *x) {$/;"	f
Thread2	test/tsan/memcmp_race.cc	/^void *Thread2(void *x) {$/;"	f
Thread2	test/tsan/memcpy_race.cc	/^void *Thread2(void *x) {$/;"	f
Thread2	test/tsan/mop1.c	/^void *Thread2(void *x) {$/;"	f
Thread2	test/tsan/mop_with_offset.cc	/^void *Thread2(void *x) {$/;"	f
Thread2	test/tsan/mop_with_offset2.cc	/^void *Thread2(void *x) {$/;"	f
Thread2	test/tsan/mutexset1.cc	/^void *Thread2(void *x) {$/;"	f
Thread2	test/tsan/mutexset2.cc	/^void *Thread2(void *x) {$/;"	f
Thread2	test/tsan/mutexset3.cc	/^void *Thread2(void *x) {$/;"	f
Thread2	test/tsan/mutexset4.cc	/^void *Thread2(void *x) {$/;"	f
Thread2	test/tsan/mutexset5.cc	/^void *Thread2(void *x) {$/;"	f
Thread2	test/tsan/mutexset6.cc	/^void *Thread2(void *x) {$/;"	f
Thread2	test/tsan/mutexset7.cc	/^void *Thread2(void *x) {$/;"	f
Thread2	test/tsan/mutexset8.cc	/^void *Thread2(void *x) {$/;"	f
Thread2	test/tsan/race_on_barrier.c	/^void *Thread2(void *x) {$/;"	f
Thread2	test/tsan/race_on_barrier2.c	/^void *Thread2(void *x) {$/;"	f
Thread2	test/tsan/race_on_heap.cc	/^void *Thread2(void *p) {$/;"	f
Thread2	test/tsan/race_on_mutex.c	/^void *Thread2(void *x) {$/;"	f
Thread2	test/tsan/race_on_read.cc	/^void *Thread2(void *x) {$/;"	f
Thread2	test/tsan/race_on_write.cc	/^void *Thread2(void *x) {$/;"	f
Thread2	test/tsan/race_with_finished_thread.cc	/^void *Thread2(void *x) {$/;"	f
Thread2	test/tsan/simple_race.c	/^void *Thread2(void *x) {$/;"	f
Thread2	test/tsan/simple_race.cc	/^void *Thread2(void *x) {$/;"	f
Thread2	test/tsan/simple_stack.c	/^void *Thread2(void *x) {$/;"	f
Thread2	test/tsan/stack_race2.cc	/^void *Thread2(void *a) {$/;"	f
Thread2	test/tsan/static_init3.cc	/^void *Thread2(void *x) {$/;"	f
Thread2	test/tsan/suppress_same_address.cc	/^void *Thread2(void *x) {$/;"	f
Thread2	test/tsan/suppressions_global.cc	/^void *Thread2(void *x) {$/;"	f
Thread2	test/tsan/suppressions_race.cc	/^void *Thread2(void *x) {$/;"	f
Thread2	test/tsan/suppressions_race2.cc	/^void *Thread2(void *x) {$/;"	f
Thread2	test/tsan/thread_name.cc	/^void *Thread2(void *x) {$/;"	f
Thread2	test/tsan/thread_name2.cc	/^void *Thread2(void *x) {$/;"	f
Thread2	test/tsan/tls_race2.cc	/^void *Thread2(void *a) {$/;"	f
Thread2	test/tsan/tsan-vs-gvn.cc	/^void *Thread2(void *x) {$/;"	f
Thread2	test/tsan/vfork.cc	/^void *Thread2(void *x) {$/;"	f
Thread2	test/tsan/vptr_benign_race.cc	/^void *Thread2(void *x) {$/;"	f
Thread2	test/tsan/vptr_harmful_race.cc	/^void *Thread2(void *x) {$/;"	f
Thread2	test/tsan/vptr_harmful_race2.cc	/^void *Thread2(void *x) {$/;"	f
Thread2	test/tsan/vptr_harmful_race3.cc	/^void *Thread2(void *x) {$/;"	f
ThreadBufferSize	include/xray/xray_log_interface.h	/^  size_t ThreadBufferSize = 0;$/;"	m	struct:__xray::BasicLoggingOptions
ThreadCallback	lib/sanitizer_common/sanitizer_thread_registry.h	/^  typedef void (*ThreadCallback)(ThreadContextBase *tctx, void *arg);$/;"	t	class:__sanitizer::ThreadRegistry
ThreadCheckIgnore	lib/tsan/rtl/tsan_rtl_thread.cc	/^static void ThreadCheckIgnore(ThreadState *thr) {$/;"	f	namespace:__tsan
ThreadCheckIgnore	lib/tsan/rtl/tsan_rtl_thread.cc	/^static void ThreadCheckIgnore(ThreadState *thr) {}$/;"	f	namespace:__tsan
ThreadClock	lib/tsan/rtl/tsan_clock.cc	/^ThreadClock::ThreadClock(unsigned tid, unsigned reused)$/;"	f	class:__tsan::ThreadClock
ThreadClose	test/tsan/fd_tid_recycled.cc	/^void *ThreadClose(void *x) {$/;"	f
ThreadContext	lib/lsan/lsan_thread.cc	/^ThreadContext::ThreadContext(int tid)$/;"	f	class:__lsan::ThreadContext
ThreadContext	lib/lsan/lsan_thread.h	/^class ThreadContext : public ThreadContextBase {$/;"	c	namespace:__lsan
ThreadContext	lib/tsan/rtl/tsan_rtl.h	/^class ThreadContext : public ThreadContextBase {$/;"	c	namespace:__tsan
ThreadContext	lib/tsan/rtl/tsan_rtl_thread.cc	/^ThreadContext::ThreadContext(int tid)$/;"	f	class:__tsan::ThreadContext
ThreadContextBase	lib/sanitizer_common/sanitizer_thread_registry.cc	/^ThreadContextBase::ThreadContextBase(u32 tid)$/;"	f	class:__sanitizer::ThreadContextBase
ThreadContextBase	lib/sanitizer_common/sanitizer_thread_registry.h	/^class ThreadContextBase {$/;"	c	namespace:__sanitizer
ThreadContextFactory	lib/sanitizer_common/sanitizer_thread_registry.h	/^typedef ThreadContextBase* (*ThreadContextFactory)(u32 tid);$/;"	t	namespace:__sanitizer
ThreadCount	lib/sanitizer_common/sanitizer_stoptheworld.h	/^  virtual uptr ThreadCount() const { UNIMPLEMENTED(); }$/;"	f	class:__sanitizer::SuspendedThreadsList
ThreadCount	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^uptr SuspendedThreadsListLinux::ThreadCount() const {$/;"	f	class:__sanitizer::SuspendedThreadsListLinux
ThreadCount	lib/sanitizer_common/sanitizer_stoptheworld_mac.cc	/^uptr SuspendedThreadsListMac::ThreadCount() const {$/;"	f	class:__sanitizer::SuspendedThreadsListMac
ThreadCount	lib/tsan/rtl/tsan_rtl_thread.cc	/^int ThreadCount(ThreadState *thr) {$/;"	f	namespace:__tsan
ThreadCreate	lib/lsan/lsan_thread.cc	/^u32 ThreadCreate(u32 parent_tid, uptr user_id, bool detached) {$/;"	f	namespace:__lsan
ThreadCreate	lib/tsan/rtl/tsan_rtl_thread.cc	/^int ThreadCreate(ThreadState *thr, uptr pc, uptr uid, bool detached) {$/;"	f	namespace:__tsan
ThreadCreateHook	lib/asan/asan_fuchsia.cc	/^static void ThreadCreateHook(void *hook, bool aborted) {$/;"	f	namespace:__asan
ThreadCreateHook	lib/asan/asan_rtems.cc	/^static void ThreadCreateHook(void *hook, bool aborted) {$/;"	f	namespace:__asan
ThreadCreatePipe	test/tsan/fd_tid_recycled.cc	/^void *ThreadCreatePipe(void *x) {$/;"	f
ThreadDescription	lib/tsan/rtl/tsan_report.cc	/^  const char *ThreadDescription()    { return Cyan(); }$/;"	f	class:__tsan::Decorator
ThreadDescriptorSize	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^uptr ThreadDescriptorSize() {$/;"	f	namespace:__sanitizer
ThreadDestroy	lib/tsan/dd/dd_rtl.cc	/^void ThreadDestroy(Thread *thr) {$/;"	f	namespace:__dsan
ThreadDetach	lib/tsan/rtl/tsan_rtl_thread.cc	/^void ThreadDetach(ThreadState *thr, uptr pc, int tid) {$/;"	f	namespace:__tsan
ThreadDummy	test/tsan/fd_tid_recycled.cc	/^void *ThreadDummy(void *x) {$/;"	f
ThreadExitHook	lib/asan/asan_fuchsia.cc	/^static void ThreadExitHook(void *hook, uptr os_id) {$/;"	f	namespace:__asan
ThreadExitHook	lib/asan/asan_rtems.cc	/^static void ThreadExitHook(void *hook, uptr os_id) {$/;"	f	namespace:__asan
ThreadFinalize	lib/tsan/rtl/tsan_rtl_thread.cc	/^void ThreadFinalize(ThreadState *thr) {$/;"	f	namespace:__tsan
ThreadFinish	lib/lsan/lsan_thread.cc	/^void ThreadFinish() {$/;"	f	namespace:__lsan
ThreadFinish	lib/tsan/rtl/tsan_rtl_thread.cc	/^void ThreadFinish(ThreadState *thr) {$/;"	f	namespace:__tsan
ThreadFn	test/asan/TestCases/Linux/thread_local_quarantine_pthread_join.cc	/^void *ThreadFn(void *unused) {$/;"	f
ThreadFn	test/asan/TestCases/Posix/stack-overflow.cc	/^void *ThreadFn(void* unused) {$/;"	f
ThreadFn	test/msan/pthread_getattr_np_deadlock.cc	/^void *ThreadFn(void *) {$/;"	f
ThreadFn	test/msan/pthread_getname_np.cc	/^void *ThreadFn(void *) {$/;"	f
ThreadFn	test/msan/tls_reuse.cc	/^void *ThreadFn(void *) {$/;"	f
ThreadFn	test/sanitizer_common/TestCases/Linux/decorate_proc_maps.cc	/^void *ThreadFn(void *arg) {$/;"	f
ThreadFunc	test/asan/TestCases/Linux/pthread_create_version.cc	/^void *ThreadFunc(void *) { return nullptr; }$/;"	f
ThreadFunc	test/tsan/mutex_double_lock.cc	/^void *ThreadFunc(void *m) {$/;"	f
ThreadId	lib/xray/xray_profile_collector.cc	/^  u64 ThreadId;$/;"	m	struct:__xray::profileCollectorService::__anon27::BlockHeader	file:
ThreadIgnoreBegin	lib/tsan/rtl/tsan_rtl.cc	/^void ThreadIgnoreBegin(ThreadState *thr, uptr pc, bool save_stack) {$/;"	f	namespace:__tsan
ThreadIgnoreEnd	lib/tsan/rtl/tsan_rtl.cc	/^void ThreadIgnoreEnd(ThreadState *thr, uptr pc) {$/;"	f	namespace:__tsan
ThreadIgnoreSyncBegin	lib/tsan/rtl/tsan_rtl.cc	/^void ThreadIgnoreSyncBegin(ThreadState *thr, uptr pc, bool save_stack) {$/;"	f	namespace:__tsan
ThreadIgnoreSyncEnd	lib/tsan/rtl/tsan_rtl.cc	/^void ThreadIgnoreSyncEnd(ThreadState *thr, uptr pc) {$/;"	f	namespace:__tsan
ThreadInit	lib/tsan/dd/dd_rtl.cc	/^void ThreadInit(Thread *thr) {$/;"	f	namespace:__dsan
ThreadJoin	lib/lsan/lsan_thread.cc	/^void ThreadJoin(u32 tid) {$/;"	f	namespace:__lsan
ThreadJoin	lib/tsan/rtl/tsan_rtl_thread.cc	/^void ThreadJoin(ThreadState *thr, uptr pc, int tid) {$/;"	f	namespace:__tsan
ThreadLeak	lib/tsan/rtl/tsan_rtl_thread.cc	/^struct ThreadLeak {$/;"	s	namespace:__tsan	file:
ThreadLister	lib/sanitizer_common/sanitizer_linux.cc	/^ThreadLister::ThreadLister(pid_t pid) : pid_(pid), buffer_(4096) {$/;"	f	class:__sanitizer::ThreadLister
ThreadLister	lib/sanitizer_common/sanitizer_linux.h	/^class ThreadLister {$/;"	c	namespace:__sanitizer
ThreadListerTest	lib/sanitizer_common/tests/sanitizer_linux_test.cc	/^class ThreadListerTest : public ::testing::Test {$/;"	c	namespace:__sanitizer	file:
ThreadLocal	test/asan/TestCases/Linux/static_tls.cc	/^static __thread unsigned ThreadLocal;$/;"	v	file:
ThreadMutex	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^struct ThreadMutex {$/;"	s	namespace:__sanitizer	file:
ThreadParam	lib/lsan/lsan_interceptors.cc	/^struct ThreadParam {$/;"	s	namespace:std	file:
ThreadParam	lib/tsan/rtl/tsan_interceptors.cc	/^struct ThreadParam {$/;"	s	file:
ThreadRegistry	lib/sanitizer_common/sanitizer_thread_registry.cc	/^ThreadRegistry::ThreadRegistry(ThreadContextFactory factory, u32 max_threads,$/;"	f	class:__sanitizer::ThreadRegistry
ThreadRegistry	lib/sanitizer_common/sanitizer_thread_registry.h	/^class ThreadRegistry {$/;"	c	namespace:__sanitizer
ThreadRegistryLock	lib/sanitizer_common/sanitizer_thread_registry.h	/^typedef GenericScopedLock<ThreadRegistry> ThreadRegistryLock;$/;"	t	namespace:__sanitizer
ThreadSanitizerQuery	lib/tsan/rtl/tsan_interface_ann.cc	/^const char INTERFACE_ATTRIBUTE* ThreadSanitizerQuery(const char *query) {$/;"	f
ThreadSelf	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^uptr ThreadSelf() {$/;"	f	namespace:__sanitizer
ThreadSelfOffset	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^uptr ThreadSelfOffset() {$/;"	f	namespace:__sanitizer
ThreadSelfSegbase	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^static void **ThreadSelfSegbase() {$/;"	f	namespace:__sanitizer
ThreadSelfTlsTcb	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^static struct tls_tcb * ThreadSelfTlsTcb() {$/;"	f	namespace:__sanitizer
ThreadSetName	lib/tsan/rtl/tsan_rtl_thread.cc	/^void ThreadSetName(ThreadState *thr, const char *name) {$/;"	f	namespace:__tsan
ThreadSignalContext	lib/tsan/rtl/tsan_interceptors.cc	/^struct ThreadSignalContext {$/;"	s	namespace:__tsan	file:
ThreadStackContainsAddress	lib/asan/asan_thread.cc	/^static bool ThreadStackContainsAddress(ThreadContextBase *tctx_base,$/;"	f	namespace:__asan
ThreadStackReuseFunc1	lib/asan/tests/asan_test.cc	/^void *ThreadStackReuseFunc1(void *unused) {$/;"	f
ThreadStackReuseFunc2	lib/asan/tests/asan_test.cc	/^void *ThreadStackReuseFunc2(void *unused) {$/;"	f
ThreadStart	lib/asan/asan_thread.cc	/^thread_return_t AsanThread::ThreadStart($/;"	f	class:__asan::AsanThread
ThreadStart	lib/hwasan/hwasan_thread.cc	/^thread_return_t HwasanThread::ThreadStart() {$/;"	f	class:__hwasan::HwasanThread
ThreadStart	lib/lsan/lsan_thread.cc	/^void ThreadStart(u32 tid, tid_t os_id, bool workerthread) {$/;"	f	namespace:__lsan
ThreadStart	lib/msan/msan_thread.cc	/^thread_return_t MsanThread::ThreadStart() {$/;"	f	class:__msan::MsanThread
ThreadStart	lib/tsan/rtl/tsan_rtl_thread.cc	/^void ThreadStart(ThreadState *thr, int tid, tid_t os_id, bool workerthread) {$/;"	f	namespace:__tsan
ThreadStartHook	lib/asan/asan_fuchsia.cc	/^static void ThreadStartHook(void *hook, uptr os_id) {$/;"	f	namespace:__asan
ThreadStartHook	lib/asan/asan_rtems.cc	/^static void ThreadStartHook(void *hook, uptr os_id) {$/;"	f	namespace:__asan
ThreadStartParam	lib/asan/asan_interceptors.cc	/^struct ThreadStartParam {$/;"	s	file:
ThreadState	lib/tsan/rtl/tsan_rtl.cc	/^ThreadState::ThreadState(Context *ctx, int tid, int unique_id, u64 epoch,$/;"	f	class:__tsan::ThreadState
ThreadState	lib/tsan/rtl/tsan_rtl.h	/^struct ThreadState {$/;"	s	namespace:__tsan
ThreadStatus	lib/sanitizer_common/sanitizer_thread_registry.h	/^enum ThreadStatus {$/;"	g	namespace:__sanitizer
ThreadStatusCreated	lib/sanitizer_common/sanitizer_thread_registry.h	/^  ThreadStatusCreated,   \/\/ Created but not yet running.$/;"	e	enum:__sanitizer::ThreadStatus
ThreadStatusDead	lib/sanitizer_common/sanitizer_thread_registry.h	/^  ThreadStatusDead       \/\/ Joined, but some info is still available.$/;"	e	enum:__sanitizer::ThreadStatus
ThreadStatusFinished	lib/sanitizer_common/sanitizer_thread_registry.h	/^  ThreadStatusFinished,  \/\/ Joinable thread is finished but not yet joined.$/;"	e	enum:__sanitizer::ThreadStatus
ThreadStatusInvalid	lib/sanitizer_common/sanitizer_thread_registry.h	/^  ThreadStatusInvalid,   \/\/ Non-existent thread, data is invalid.$/;"	e	enum:__sanitizer::ThreadStatus
ThreadStatusRunning	lib/sanitizer_common/sanitizer_thread_registry.h	/^  ThreadStatusRunning,   \/\/ The thread is currently running.$/;"	e	enum:__sanitizer::ThreadStatus
ThreadSuspender	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^  explicit ThreadSuspender(pid_t pid, TracerThreadArgument *arg)$/;"	f	class:__sanitizer::ThreadSuspender
ThreadSuspender	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^class ThreadSuspender {$/;"	c	namespace:__sanitizer	file:
ThreadTid	lib/lsan/lsan_thread.cc	/^u32 ThreadTid(uptr uid) {$/;"	f	namespace:__lsan
ThreadTid	lib/tsan/rtl/tsan_rtl_thread.cc	/^int ThreadTid(ThreadState *thr, uptr pc, uptr uid) {$/;"	f	namespace:__tsan
ThreadTrace	lib/tsan/rtl/tsan_rtl.cc	/^Trace *ThreadTrace(int tid) {$/;"	f	namespace:__tsan
ThreadTrie	lib/xray/xray_profile_collector.cc	/^struct ThreadTrie {$/;"	s	namespace:__xray::profileCollectorService::__anon27	file:
ThreadTries	lib/xray/xray_profile_collector.cc	/^Vector<ThreadTrie> *ThreadTries = nullptr;$/;"	m	namespace:__xray::profileCollectorService::__anon27	file:
ThreadWrite	test/tsan/fd_tid_recycled.cc	/^void *ThreadWrite(void *x) {$/;"	f
ThreadedOneSizeMallocStress	lib/asan/tests/asan_noinst_test.cc	/^void *ThreadedOneSizeMallocStress(void *unused) {$/;"	f
ThreadedQuarantineTestWorker	lib/asan/tests/asan_noinst_test.cc	/^void *ThreadedQuarantineTestWorker(void *unused) {$/;"	f
ThreadedTestAlloc	lib/asan/tests/asan_test.cc	/^void *ThreadedTestAlloc(void *a) {$/;"	f
ThreadedTestFree	lib/asan/tests/asan_test.cc	/^void *ThreadedTestFree(void *a) {$/;"	f
ThreadedTestFunc	lib/asan/tests/asan_test.cc	/^void *ThreadedTestFunc(void *unused) {$/;"	f
ThreadedTestRegistry	lib/sanitizer_common/tests/sanitizer_thread_registry_test.cc	/^static void ThreadedTestRegistry(ThreadRegistry *registry) {$/;"	f	namespace:__sanitizer
ThreadedTestSpawn	lib/asan/tests/asan_test.cc	/^void ThreadedTestSpawn() {$/;"	f
ThreadedTestUse	lib/asan/tests/asan_test.cc	/^void *ThreadedTestUse(void *a) {$/;"	f
Throw	lib/asan/tests/asan_exceptions_test.cc	/^  void Throw(const char& arg) const {$/;"	f	class:Action
Throw	test/asan/TestCases/Linux/swapcontext_test.cc	/^void Throw() {$/;"	f
Throw	test/asan/TestCases/Windows/bind_io_completion_callback.cc	/^void Throw() {$/;"	f
Throw	test/asan/TestCases/Windows/dll_seh.cc	/^void Throw() {$/;"	f
Throw	test/asan/TestCases/Windows/queue_user_work_item.cc	/^void Throw() {$/;"	f
Throw	test/asan/TestCases/Windows/seh.cc	/^void Throw() {$/;"	f
Throw	test/asan/TestCases/contiguous_container.cc	/^void Throw() { throw 1; }$/;"	f
Throw	test/asan/TestCases/throw_call_test.cc	/^void Throw() {$/;"	f
Throw	test/asan/TestCases/throw_catch.cc	/^void Throw() {$/;"	f
Throw	test/asan/TestCases/throw_invoke_test.cc	/^void Throw() {$/;"	f
ThrowAndCatch	test/asan/TestCases/Linux/swapcontext_test.cc	/^void ThrowAndCatch() {$/;"	f
ThrowAndCatch	test/asan/TestCases/Windows/bind_io_completion_callback.cc	/^void ThrowAndCatch() {$/;"	f
ThrowAndCatch	test/asan/TestCases/Windows/dll_seh.cc	/^void ThrowAndCatch() {$/;"	f
ThrowAndCatch	test/asan/TestCases/Windows/queue_user_work_item.cc	/^void ThrowAndCatch() {$/;"	f
ThrowAndCatch	test/asan/TestCases/Windows/seh.cc	/^void ThrowAndCatch() {$/;"	f
ThrowAndCatch	test/asan/TestCases/contiguous_container.cc	/^void ThrowAndCatch() {$/;"	f
ThrowAndCatch	test/asan/TestCases/throw_catch.cc	/^void ThrowAndCatch() {$/;"	f
ThrowFunc	lib/asan/tests/asan_test.cc	/^NOINLINE void ThrowFunc() {$/;"	f
TidReporterArgument	lib/sanitizer_common/tests/sanitizer_linux_test.cc	/^  TidReporterArgument() {$/;"	f	struct:__sanitizer::TidReporterArgument
TidReporterArgument	lib/sanitizer_common/tests/sanitizer_linux_test.cc	/^struct TidReporterArgument {$/;"	s	namespace:__sanitizer	file:
TidReporterThread	lib/sanitizer_common/tests/sanitizer_linux_test.cc	/^void *TidReporterThread(void *argument) {$/;"	f	namespace:__sanitizer
TidWithIgnore	lib/tsan/rtl/tsan_rtl.h	/^  u64 TidWithIgnore() const {$/;"	f	class:__tsan::FastState
TidsAreEqual	lib/tsan/rtl/tsan_rtl.h	/^  static inline bool TidsAreEqual(const Shadow s1, const Shadow s2) {$/;"	f	class:__tsan::Shadow
TimeOfLongestUnitInSeconds	lib/fuzzer/FuzzerInternal.h	/^  long TimeOfLongestUnitInSeconds = 0;$/;"	m	class:fuzzer::Fuzzer
TimedOut	lib/fuzzer/FuzzerInternal.h	/^  bool TimedOut() {$/;"	f	class:fuzzer::Fuzzer
TimeoutExitCode	lib/fuzzer/FuzzerOptions.h	/^  int TimeoutExitCode = 77;$/;"	m	struct:fuzzer::FuzzingOptions
Timer	lib/fuzzer/FuzzerUtilWindows.cpp	/^static TimerQ Timer;$/;"	m	namespace:fuzzer	file:
TimerQ	lib/fuzzer/FuzzerUtilWindows.cpp	/^  TimerQ() : TimerQueue(NULL) {};$/;"	f	class:fuzzer::TimerQ
TimerQ	lib/fuzzer/FuzzerUtilWindows.cpp	/^class TimerQ {$/;"	c	namespace:fuzzer	file:
TimerQueue	lib/fuzzer/FuzzerUtilWindows.cpp	/^  HANDLE TimerQueue;$/;"	m	class:fuzzer::TimerQ	file:
Timestamp	lib/xray/tests/unit/profile_collector_test.cc	/^  u64 Timestamp = 0;$/;"	m	struct:__xray::__anon22::ExpectedProfilingFileHeader	file:
Timestamp	lib/xray/xray_profile_collector.cc	/^  u64 Timestamp = 0; \/\/ System time in nanoseconds.$/;"	m	struct:__xray::profileCollectorService::__anon27::XRayProfilingFileHeader	file:
TlsBaseAddr	lib/sanitizer_common/sanitizer_mac.cc	/^uptr TlsBaseAddr() {$/;"	f	namespace:__sanitizer
TlsGetAddrParam	lib/sanitizer_common/sanitizer_tls_get_addr.cc	/^struct TlsGetAddrParam {$/;"	s	namespace:__sanitizer	file:
TlsPreTcbSize	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^static uptr TlsPreTcbSize() {$/;"	f	namespace:__sanitizer
TlsSize	lib/sanitizer_common/sanitizer_mac.cc	/^uptr TlsSize() {$/;"	f	namespace:__sanitizer
Tmp	lib/fuzzer/FuzzerCorpus.h	/^  size_t Tmp = 0; \/\/ Used by ValidateFeatureSet.$/;"	m	struct:fuzzer::InputInfo
TmpDir	lib/fuzzer/FuzzerIOPosix.cpp	/^std::string TmpDir() {$/;"	f	namespace:fuzzer
TmpDir	lib/fuzzer/FuzzerIOWindows.cpp	/^std::string TmpDir() {$/;"	f	namespace:fuzzer
TmpMaxMutationLen	lib/fuzzer/FuzzerInternal.h	/^  size_t TmpMaxMutationLen = 0;$/;"	m	class:fuzzer::Fuzzer
ToASCII	lib/fuzzer/FuzzerUtil.cpp	/^bool ToASCII(uint8_t *Data, size_t Size) {$/;"	f	namespace:fuzzer
ToLower	lib/sanitizer_common/sanitizer_common.h	/^INLINE int ToLower(int c) {$/;"	f	namespace:__sanitizer
ToType	lib/ubsan/ubsan_handlers.h	/^  const TypeDescriptor &ToType;$/;"	m	struct:__ubsan::FloatCastOverflowData
ToType	lib/ubsan/ubsan_handlers.h	/^  const TypeDescriptor &ToType;$/;"	m	struct:__ubsan::FloatCastOverflowDataV2
ToType	lib/ubsan/ubsan_handlers.h	/^  const TypeDescriptor &ToType;$/;"	m	struct:__ubsan::ImplicitConversionData
TopFunction	test/tsan/race_top_suppression.cc	/^void TopFunction(int *p) {$/;"	f
TopFunction	test/tsan/race_top_suppression1.cc	/^void TopFunction(int *p) {$/;"	f
TotalCount	lib/esan/cache_frag.cpp	/^  u64 TotalCount; \/\/ The total access count of all structs.$/;"	m	struct:__esan::Context	file:
TotalCount	lib/fuzzer/FuzzerMutate.h	/^    uint64_t TotalCount;$/;"	m	struct:fuzzer::MutationDispatcher::Mutator
TotalMemoryUsed	lib/sanitizer_common/sanitizer_allocator_combined.h	/^  uptr TotalMemoryUsed() {$/;"	f	class:CombinedAllocator
TotalMemoryUsed	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^  uptr TotalMemoryUsed() {$/;"	f	class:SizeClassAllocator32
TotalMemoryUsed	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  uptr TotalMemoryUsed() {$/;"	f	class:SizeClassAllocator64
TotalMemoryUsed	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^  uptr TotalMemoryUsed() {$/;"	f	class:LargeMmapAllocator
TotalNumberOfRuns	lib/fuzzer/FuzzerInternal.h	/^  size_t TotalNumberOfRuns = 0;$/;"	m	class:fuzzer::Fuzzer
TotalWorkingSetBitIdx	lib/esan/working_set.cpp	/^static const u32 TotalWorkingSetBitIdx = 7;$/;"	m	namespace:__esan	file:
TouchGlobal	test/tsan/blacklist2.cc	/^void TouchGlobal() {$/;"	f
TouchNoAsan	test/asan/TestCases/Linux/nohugepage_test.cc	/^__attribute__((no_sanitize_address)) void TouchNoAsan(size_t i) { x[i] = 0; }$/;"	f
TouchStackFunc	lib/asan/tests/asan_test.cc	/^NOINLINE void TouchStackFunc() {$/;"	f
Trace	lib/tsan/rtl/tsan_trace.h	/^  Trace()$/;"	f	struct:__tsan::Trace
Trace	lib/tsan/rtl/tsan_trace.h	/^struct Trace {$/;"	s	namespace:__tsan
TraceAddEvent	lib/tsan/rtl/tsan_rtl.h	/^void ALWAYS_INLINE TraceAddEvent(ThreadState *thr, FastState fs,$/;"	f	namespace:__tsan
TraceDisabled	lib/fuzzer/FuzzerLoop.cpp	/^  bool TraceDisabled = false;$/;"	m	struct:fuzzer::MallocFreeTracer	file:
TraceHeader	lib/tsan/rtl/tsan_trace.h	/^  TraceHeader() : stack0(), epoch0() {}$/;"	f	struct:__tsan::TraceHeader
TraceHeader	lib/tsan/rtl/tsan_trace.h	/^struct TraceHeader {$/;"	s	namespace:__tsan
TraceLevel	lib/fuzzer/FuzzerLoop.cpp	/^  int TraceLevel = 0;$/;"	m	struct:fuzzer::MallocFreeTracer	file:
TraceLock	lib/fuzzer/FuzzerLoop.cpp	/^  TraceLock() : Lock(AllocTracer.TraceMutex) {$/;"	f	class:fuzzer::TraceLock
TraceLock	lib/fuzzer/FuzzerLoop.cpp	/^class TraceLock {$/;"	c	namespace:fuzzer	file:
TraceMalloc	lib/fuzzer/FuzzerOptions.h	/^  int  TraceMalloc = 0;$/;"	m	struct:fuzzer::FuzzingOptions
TraceMemBeg	lib/tsan/rtl/tsan_platform.h	/^uptr TraceMemBeg(void) {$/;"	f	namespace:__tsan
TraceMemEnd	lib/tsan/rtl/tsan_platform.h	/^uptr TraceMemEnd(void) {$/;"	f	namespace:__tsan
TraceMutex	lib/fuzzer/FuzzerLoop.cpp	/^  std::recursive_mutex TraceMutex;$/;"	m	struct:fuzzer::MallocFreeTracer	file:
TracePC	lib/fuzzer/FuzzerTracePC.h	/^class TracePC {$/;"	c	namespace:fuzzer
TraceParts	lib/tsan/rtl/tsan_rtl.cc	/^uptr TraceParts() {$/;"	f	namespace:__tsan
TracePcGuard	lib/sanitizer_common/sanitizer_coverage_fuchsia.cc	/^  void TracePcGuard(u32 *guard, uptr pc) {$/;"	f	class:__sancov::__anon63::final
TracePcGuard	lib/sanitizer_common/sanitizer_coverage_libcdep_new.cc	/^  void TracePcGuard(u32* guard, uptr pc) {$/;"	f	class:__sancov::__anon64::TracePcGuardController
TracePcGuardController	lib/sanitizer_common/sanitizer_coverage_libcdep_new.cc	/^class TracePcGuardController {$/;"	c	namespace:__sancov::__anon64	file:
TraceSize	lib/tsan/rtl/tsan_rtl.cc	/^uptr TraceSize() {$/;"	f	namespace:__tsan
TraceSwitch	lib/tsan/rtl/tsan_rtl.cc	/^void TraceSwitch(ThreadState *thr) {$/;"	f	namespace:__tsan
TraceTopPC	lib/tsan/rtl/tsan_rtl.cc	/^uptr TraceTopPC(ThreadState *thr) {$/;"	f	namespace:__tsan
TracerThread	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^static int TracerThread(void* argument) {$/;"	f	namespace:__sanitizer
TracerThreadArgument	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^struct TracerThreadArgument {$/;"	s	namespace:__sanitizer	file:
TracerThreadDieCallback	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^static void TracerThreadDieCallback() {$/;"	f	namespace:__sanitizer
TracerThreadSignalHandler	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^static void TracerThreadSignalHandler(int signum, __sanitizer_siginfo *siginfo,$/;"	f	namespace:__sanitizer
Traces	lib/fuzzer/FuzzerDataFlowTrace.h	/^  std::unordered_map<std::string, Vector<uint8_t> > Traces;$/;"	m	class:fuzzer::DataFlowTrace
TrackingOrigins	lib/msan/tests/msan_test.cc	/^static bool TrackingOrigins() {$/;"	f	file:
TrampolineMemoryRegion	lib/interception/interception_win.cc	/^struct TrampolineMemoryRegion {$/;"	s	namespace:__interception	file:
TrampolineRegions	lib/interception/interception_win.cc	/^static TrampolineMemoryRegion TrampolineRegions[kMaxTrampolineRegion];$/;"	m	namespace:__interception	file:
Transfer	lib/sanitizer_common/sanitizer_quarantine.h	/^  void Transfer(QuarantineCache *from_cache) {$/;"	f	class:__sanitizer::QuarantineCache
TransferBatch	lib/sanitizer_common/sanitizer_allocator_local_cache.h	/^  typedef typename Allocator::TransferBatch TransferBatch;$/;"	t	struct:SizeClassAllocator32LocalCache
TransferBatch	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^  struct TransferBatch {$/;"	s	class:SizeClassAllocator32
TranslateDigit	lib/sanitizer_common/sanitizer_procmaps_common.cc	/^static int TranslateDigit(char c) {$/;"	f	namespace:__sanitizer
Trap	lib/sanitizer_common/sanitizer_internal_defs.h	/^inline void Trap() {$/;"	f	namespace:__sanitizer
Trie	lib/xray/xray_profile_collector.cc	/^  FunctionCallTrie *Trie;$/;"	m	struct:__xray::profileCollectorService::__anon27::ThreadTrie	file:
Trivial	test/msan/dtor-trivial.cpp	/^struct Trivial {$/;"	s	file:
TryDetectingAMemoryLeak	lib/fuzzer/FuzzerLoop.cpp	/^void Fuzzer::TryDetectingAMemoryLeak(const uint8_t *Data, size_t Size,$/;"	f	class:fuzzer::Fuzzer
TryFastUnwind	lib/sanitizer_common/tests/sanitizer_stacktrace_test.cc	/^  bool TryFastUnwind(uptr max_depth) {$/;"	f	class:__sanitizer::FastUnwindTest
TryLock	lib/sanitizer_common/sanitizer_mutex.h	/^  bool TryLock() {$/;"	f	class:__sanitizer::StaticSpinMutex
TryLock	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^bool Mutex::TryLock() {$/;"	f	class:Mutex
TryLock	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^bool ScopedThread::TryLock(const Mutex &m) {$/;"	f	class:ScopedThread
TryLock	test/tsan/custom_mutex.h	/^  bool TryLock() {$/;"	f	class:Mutex
TryLockImpl	test/tsan/custom_mutex.h	/^  bool TryLockImpl() {$/;"	f	class:Mutex
TryReadLock	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^bool Mutex::TryReadLock() {$/;"	f	class:Mutex
TryReadLock	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^bool ScopedThread::TryReadLock(const Mutex &m) {$/;"	f	class:ScopedThread
TrySymInitialize	lib/sanitizer_common/sanitizer_symbolizer_win.cc	/^bool TrySymInitialize() {$/;"	f	namespace:__sanitizer::__anon77
TryToOverrideFunction	lib/asan/asan_malloc_win.cc	/^static void TryToOverrideFunction(const char *fname, uptr new_func) {$/;"	f	namespace:__asan
TryToSetThreadName	lib/asan/tests/asan_test.cc	/^static bool TryToSetThreadName(const char *name) {$/;"	f	file:
TryWrite	lib/sanitizer_common/tests/sanitizer_mutex_test.cc	/^  void TryWrite() {$/;"	f	class:__sanitizer::TestData
TsanCheckFailed	lib/tsan/rtl/tsan_rtl_report.cc	/^void TsanCheckFailed(const char *file, int line, const char *cond,$/;"	f	namespace:__tsan
TsanInterceptorContext	lib/tsan/rtl/tsan_interceptors.cc	/^struct TsanInterceptorContext {$/;"	s	file:
TsanOnDeadlySignal	lib/tsan/rtl/tsan_rtl.cc	/^static void TsanOnDeadlySignal(int signo, void *siginfo, void *context) {$/;"	f	namespace:__tsan
TwoLevelBitVector	lib/sanitizer_common/sanitizer_bitvector.h	/^class TwoLevelBitVector {$/;"	c	namespace:__sanitizer
TwoLevelByteMap	lib/asan/asan_allocator.h	/^typedef TwoLevelByteMap<(kNumRegions >> 12), 1 << 12> ByteMap;$/;"	t	namespace:__asan
TwoLevelByteMap	lib/hwasan/hwasan_allocator.cc	/^typedef TwoLevelByteMap<(kNumRegions >> 12), 1 << 12> ByteMap;$/;"	t	namespace:__hwasan	file:
TwoLevelByteMap	lib/lsan/lsan_allocator.h	/^typedef TwoLevelByteMap<(kNumRegions >> 12), 1 << 12> ByteMap;$/;"	t	namespace:__lsan
TwoLevelByteMap	lib/msan/msan_allocator.cc	/^  typedef TwoLevelByteMap<(kNumRegions >> 12), 1 << 12> ByteMap;$/;"	t	namespace:__msan	file:
TwoLevelByteMap	lib/sanitizer_common/sanitizer_allocator_bytemap.h	/^class TwoLevelByteMap {$/;"	c
TwoLevelByteMap	lib/sanitizer_common/sanitizer_allocator_internal.h	/^typedef TwoLevelByteMap<(kInternalAllocatorNumRegions >> 12), 1 << 12> ByteMap;$/;"	t	namespace:__sanitizer
TwoLevelByteMap	lib/tsan/rtl/tsan_rtl.h	/^typedef TwoLevelByteMap<(kAllocatorNumRegions >> 12), 1 << 12,$/;"	t	namespace:__tsan
TwoRangesIntersect	lib/tsan/rtl/tsan_rtl.h	/^  static ALWAYS_INLINE bool TwoRangesIntersect(Shadow s1, Shadow s2,$/;"	f	class:__tsan::Shadow
TwoRangesIntersectSlow	lib/tsan/rtl/tsan_rtl.h	/^  static bool TwoRangesIntersectSlow(const Shadow s1, const Shadow s2) {$/;"	f	class:__tsan::Shadow
Type	lib/msan/msan.h	/^  enum Type {$/;"	g	struct:MappingDesc
Type	lib/sanitizer_common/sanitizer_atomic.h	/^  typedef s32 Type;$/;"	t	struct:__sanitizer::atomic_sint32_t
Type	lib/sanitizer_common/sanitizer_atomic.h	/^  typedef u16 Type;$/;"	t	struct:__sanitizer::atomic_uint16_t
Type	lib/sanitizer_common/sanitizer_atomic.h	/^  typedef u32 Type;$/;"	t	struct:__sanitizer::atomic_uint32_t
Type	lib/sanitizer_common/sanitizer_atomic.h	/^  typedef u64 Type;$/;"	t	struct:__sanitizer::atomic_uint64_t
Type	lib/sanitizer_common/sanitizer_atomic.h	/^  typedef u8 Type;$/;"	t	struct:__sanitizer::atomic_uint8_t
Type	lib/sanitizer_common/sanitizer_atomic.h	/^  typedef uptr Type;$/;"	t	struct:__sanitizer::atomic_uintptr_t
Type	lib/tsan/tests/rtl/tsan_test_util.h	/^  enum Type {$/;"	g	class:Mutex
Type	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^  enum Type {$/;"	g	struct:Event	file:
Type	lib/ubsan/ubsan_diag.h	/^  ErrorType Type;$/;"	m	class:__ubsan::ScopedReport
Type	lib/ubsan/ubsan_handlers.h	/^  const TypeDescriptor &Type;$/;"	m	struct:__ubsan::CFICheckFailData
Type	lib/ubsan/ubsan_handlers.h	/^  const TypeDescriptor &Type;$/;"	m	struct:__ubsan::FunctionTypeMismatchData
Type	lib/ubsan/ubsan_handlers.h	/^  const TypeDescriptor &Type;$/;"	m	struct:__ubsan::InvalidValueData
Type	lib/ubsan/ubsan_handlers.h	/^  const TypeDescriptor &Type;$/;"	m	struct:__ubsan::OverflowData
Type	lib/ubsan/ubsan_handlers.h	/^  const TypeDescriptor &Type;$/;"	m	struct:__ubsan::TypeMismatchData
Type	lib/ubsan/ubsan_handlers.h	/^  const TypeDescriptor &Type;$/;"	m	struct:__ubsan::VLABoundData
Type	lib/ubsan/ubsan_handlers_cxx.h	/^  const TypeDescriptor &Type;$/;"	m	struct:__ubsan::DynamicTypeCacheMissData
Type	lib/ubsan/ubsan_value.h	/^  const TypeDescriptor &Type;$/;"	m	class:__ubsan::Value
TypeCheckKind	lib/ubsan/ubsan_handlers.h	/^  unsigned char TypeCheckKind;$/;"	m	struct:__ubsan::TypeMismatchData
TypeCheckKind	lib/ubsan/ubsan_handlers_cxx.h	/^  unsigned char TypeCheckKind;$/;"	m	struct:__ubsan::DynamicTypeCacheMissData
TypeCheckKinds	lib/ubsan/ubsan_handlers.cc	/^const char *TypeCheckKinds[] = {$/;"	m	namespace:__ubsan	file:
TypeCodeForBits	lib/sanitizer_common/scripts/sancov.py	/^def TypeCodeForBits(bits):$/;"	f
TypeCodeForStruct	lib/sanitizer_common/scripts/sancov.py	/^def TypeCodeForStruct(bits):$/;"	f
TypeDescription	lib/xray/xray_interface.cc	/^struct TypeDescription {$/;"	s	namespace:__xray	file:
TypeDescriptor	lib/ubsan/ubsan_value.h	/^class TypeDescriptor {$/;"	c	namespace:__ubsan
TypeInfo	lib/ubsan/ubsan_handlers_cxx.h	/^  void *TypeInfo;$/;"	m	struct:__ubsan::DynamicTypeCacheMissData
TypeInfo	lib/ubsan/ubsan_type_hash_itanium.cc	/^  std::type_info *TypeInfo;$/;"	m	struct:__anon103::VtablePrefix	file:
TypeInfo	lib/ubsan/ubsan_value.h	/^  u16 TypeInfo;$/;"	m	class:__ubsan::TypeDescriptor
TypeInfo	test/ubsan/TestCases/TypeCheck/vptr-corrupted-vtable-itanium.cpp	/^  std::type_info *TypeInfo;$/;"	m	struct:VtablePrefix	file:
TypeKind	lib/ubsan/ubsan_value.h	/^  u16 TypeKind;$/;"	m	class:__ubsan::TypeDescriptor
TypeMismatchData	lib/ubsan/ubsan_handlers.h	/^struct TypeMismatchData {$/;"	s	namespace:__ubsan
TypeName	lib/ubsan/ubsan_diag.h	/^  TypeName(const char *Name) : Name(Name) {}$/;"	f	class:__ubsan::TypeName
TypeName	lib/ubsan/ubsan_diag.h	/^class TypeName {$/;"	c	namespace:__ubsan
TypeName	lib/ubsan/ubsan_value.h	/^  char TypeName[1];$/;"	m	class:__ubsan::TypeDescriptor
U	lib/fuzzer/FuzzerCorpus.h	/^  Unit U;  \/\/ The actual input data.$/;"	m	struct:fuzzer::InputInfo
U	test/asan/TestCases/speculative_load2.cc	/^} U;$/;"	t	typeref:union:__anon136	file:
U	test/esan/TestCases/struct-simple.cpp	/^union U {$/;"	u	file:
U	test/tsan/deadlock_detector_stress_test.cc	/^  void U(size_t i) {$/;"	f	class:LockTest
U	test/ubsan/TestCases/TypeCheck/null.cpp	/^struct U : T {$/;"	s	file:
U	test/ubsan/TestCases/TypeCheck/vptr.cpp	/^struct U : S, T { virtual int v() { return 2; } };$/;"	s	file:
U1	lib/asan/tests/asan_test_utils.h	/^typedef uint8_t   U1;$/;"	t
U1	lib/msan/tests/msan_test.cc	/^typedef unsigned char      U1;$/;"	t	file:
U2	lib/asan/tests/asan_test_utils.h	/^typedef uint16_t  U2;$/;"	t
U2	lib/msan/tests/msan_test.cc	/^typedef unsigned short     U2;  \/\/ NOLINT$/;"	t	file:
U32ComparisonFunction	lib/sanitizer_common/sanitizer_common.cc	/^typedef bool U32ComparisonFunction(const u32 &a, const u32 &b);$/;"	t	namespace:__sanitizer	file:
U4	lib/asan/tests/asan_test_utils.h	/^typedef uint32_t  U4;$/;"	t
U4	lib/msan/tests/msan_test.cc	/^typedef unsigned int       U4;$/;"	t	file:
U8	lib/asan/tests/asan_test_utils.h	/^typedef uint64_t  U8;$/;"	t
U8	lib/msan/tests/msan_test.cc	/^typedef unsigned long long U8;  \/\/ NOLINT$/;"	t	file:
UBSAN_CHECK	lib/ubsan/ubsan_diag.cc	392;"	d	file:
UBSAN_CHECK	lib/ubsan/ubsan_diag.cc	394;"	d	file:
UBSAN_CHECK	lib/ubsan/ubsan_diag.cc	53;"	d	file:
UBSAN_CHECK	lib/ubsan/ubsan_diag.cc	57;"	d	file:
UBSAN_CHECK	lib/ubsan/ubsan_diag.cc	64;"	d	file:
UBSAN_CHECK	lib/ubsan/ubsan_diag.cc	68;"	d	file:
UBSAN_CHECK	lib/ubsan/ubsan_diag.h	125;"	d
UBSAN_CHECK	lib/ubsan/ubsan_diag.h	127;"	d
UBSAN_DIAG_H	lib/ubsan/ubsan_diag.h	14;"	d
UBSAN_FLAG	lib/ubsan/ubsan_flags.cc	41;"	d	file:
UBSAN_FLAG	lib/ubsan/ubsan_flags.cc	43;"	d	file:
UBSAN_FLAG	lib/ubsan/ubsan_flags.cc	47;"	d	file:
UBSAN_FLAG	lib/ubsan/ubsan_flags.cc	50;"	d	file:
UBSAN_FLAG	lib/ubsan/ubsan_flags.h	25;"	d
UBSAN_FLAG	lib/ubsan/ubsan_flags.h	27;"	d
UBSAN_FLAGS_H	lib/ubsan/ubsan_flags.h	14;"	d
UBSAN_HANDLERS_CXX_H	lib/ubsan/ubsan_handlers_cxx.h	15;"	d
UBSAN_HANDLERS_H	lib/ubsan/ubsan_handlers.h	14;"	d
UBSAN_INIT_H	lib/ubsan/ubsan_init.h	14;"	d
UBSAN_MONITOR_H	lib/ubsan/ubsan_monitor.h	15;"	d
UBSAN_OVERFLOW_HANDLER	lib/ubsan/ubsan_handlers.cc	133;"	d	file:
UBSAN_PLATFORM_H	lib/ubsan/ubsan_platform.h	14;"	d
UBSAN_SIGNALS_STANDALONE_H	lib/ubsan/ubsan_signals_standalone.h	16;"	d
UBSAN_TYPE_HASH_H	lib/ubsan/ubsan_type_hash.h	14;"	d
UBSAN_VALUE_H	lib/ubsan/ubsan_value.h	15;"	d
UBsanOnDeadlySignal	lib/ubsan/ubsan_signals_standalone.cc	/^static void UBsanOnDeadlySignal(int signo, void *siginfo, void *context) {$/;"	f	namespace:__ubsan
UINT32_MAX	lib/sanitizer_common/sanitizer_internal_defs.h	359;"	d
UINT32_MAX	lib/sanitizer_common/sanitizer_internal_defs.h	360;"	d
UINT64_C	lib/builtins/fp_lib.h	36;"	d
UINT64_C	lib/builtins/fp_lib.h	37;"	d
UINT64_MAX	lib/sanitizer_common/sanitizer_internal_defs.h	365;"	d
UINT64_MAX	lib/sanitizer_common/sanitizer_internal_defs.h	366;"	d
UINTPTR_MAX	lib/sanitizer_common/sanitizer_internal_defs.h	367;"	d
UINTPTR_MAX	lib/sanitizer_common/sanitizer_internal_defs.h	369;"	d
UINTPTR_MAX	lib/sanitizer_common/sanitizer_internal_defs.h	371;"	d
UInt	lib/ubsan/ubsan_diag.h	/^      UIntMax UInt;$/;"	m	union:__ubsan::Diag::Arg::__anon104
UIntFlag	lib/fuzzer/FuzzerDriver.cpp	/^  unsigned int *UIntFlag;$/;"	m	struct:fuzzer::FlagDescription	file:
UIntMax	lib/ubsan/ubsan_value.h	/^typedef u128 UIntMax;$/;"	t	namespace:__ubsan
UNIMPLEMENTED	lib/sanitizer_common/sanitizer_internal_defs.h	334;"	d
UNKNOWN	lib/sanitizer_common/sanitizer_common.h	/^  enum WriteFlag { UNKNOWN, READ, WRITE } write_flag;$/;"	e	enum:__sanitizer::SignalContext::WriteFlag
UNLIKELY	lib/sanitizer_common/sanitizer_internal_defs.h	217;"	d
UNLIKELY	lib/sanitizer_common/sanitizer_internal_defs.h	231;"	d
UNLOCK	test/sanitizer_common/TestCases/Linux/pthread_mutex.cc	11;"	d	file:
UNLOCK	test/sanitizer_common/TestCases/Linux/pthread_mutex.cc	14;"	d	file:
UNREACHABLE	lib/sanitizer_common/sanitizer_internal_defs.h	329;"	d
UNRECOVERABLE	lib/ubsan/ubsan_handlers.h	27;"	d
UNREGISTERED	lib/asan/asan_globals.cc	/^  UNREGISTERED = 0,$/;"	e	enum:__asan::GlobalSymbolState	file:
UNUSED	lib/builtins/int_lib.h	50;"	d
UNUSED	lib/builtins/int_lib.h	55;"	d
UNUSED	lib/sanitizer_common/sanitizer_internal_defs.h	242;"	d
UNUSED	lib/sanitizer_common/sanitizer_internal_defs.h	245;"	d
UNUSED	lib/sanitizer_common/tests/sanitizer_test_utils.h	41;"	d
UNUSED	lib/sanitizer_common/tests/sanitizer_test_utils.h	44;"	d
UNWIND_CONTINUE	lib/sanitizer_common/sanitizer_unwind_linux_libcdep.cc	85;"	d	file:
UNWIND_CONTINUE	lib/sanitizer_common/sanitizer_unwind_linux_libcdep.cc	88;"	d	file:
UNWIND_EHABI_HELPERS_H	lib/builtins/unwind-ehabi-helpers.h	11;"	d
UNWIND_STOP	lib/sanitizer_common/sanitizer_unwind_linux_libcdep.cc	84;"	d	file:
UNWIND_STOP	lib/sanitizer_common/sanitizer_unwind_linux_libcdep.cc	87;"	d	file:
USE	test/profile/Inputs/extern_template1.cpp	1;"	d	file:
USE	test/profile/Inputs/extern_template1.cpp	3;"	d	file:
USE	test/profile/Inputs/extern_template2.cpp	1;"	d	file:
USE	test/profile/Inputs/extern_template2.cpp	3;"	d	file:
USED	lib/sanitizer_common/sanitizer_internal_defs.h	243;"	d
USED	lib/sanitizer_common/sanitizer_internal_defs.h	246;"	d
USED	lib/sanitizer_common/tests/sanitizer_test_utils.h	42;"	d
USED	lib/sanitizer_common/tests/sanitizer_test_utils.h	45;"	d
USE_NSGETENVIRON	test/asan/TestCases/exitcode.cc	69;"	d	file:
USE_NSGETENVIRON	test/asan/TestCases/exitcode.cc	71;"	d	file:
USE_PTHREAD_SETNAME_NP	test/tsan/thread_name.cc	12;"	d	file:
USE_PTHREAD_SETNAME_NP	test/tsan/thread_name.cc	15;"	d	file:
USE_PTHREAD_SETNAME_NP	test/tsan/thread_name.cc	5;"	d	file:
USE_PTHREAD_SETNAME_NP	test/tsan/thread_name.cc	9;"	d	file:
USE_THUMB_1	lib/builtins/assembly.h	86;"	d
USE_THUMB_2	lib/builtins/assembly.h	81;"	d
USING_ARM_EHABI	lib/builtins/gcc_personality_v0.c	147;"	d	file:
USR	lib/builtins/hexagon/dfaddsub.S	/^		USR = TMP$/;"	d
USR	lib/builtins/hexagon/dfdiv.S	/^		USR = TMP$/;"	d
USR	lib/builtins/hexagon/dffma.S	/^		USR = AH$/;"	d
USR	lib/builtins/hexagon/dffma.S	/^		USR = BH$/;"	d
USR	lib/builtins/hexagon/dffma.S	/^		USR = TMP$/;"	d
USR	lib/builtins/hexagon/dfmul.S	/^		USR = BTMPL$/;"	d
USR	lib/builtins/hexagon/dfmul.S	/^		USR = TMP$/;"	d
USR2Handler	lib/stats/stats.cc	/^void USR2Handler(int sig) {$/;"	f	namespace:__anon4
UTILS_H	test/cfi/utils.h	2;"	d
UTILS_H	test/safestack/utils.h	2;"	d
UbsanStandaloneInitializer	lib/ubsan/ubsan_init_standalone.cc	/^  UbsanStandaloneInitializer() {$/;"	f	class:__ubsan::UbsanStandaloneInitializer
UbsanStandaloneInitializer	lib/ubsan/ubsan_init_standalone.cc	/^class UbsanStandaloneInitializer {$/;"	c	namespace:__ubsan	file:
UnDecorateSymbolName	lib/sanitizer_common/sanitizer_dbghelp.h	/^extern decltype(::UnDecorateSymbolName) *UnDecorateSymbolName;$/;"	m	namespace:__sanitizer
UnDecorateSymbolName	lib/sanitizer_common/sanitizer_symbolizer_win.cc	/^decltype(::UnDecorateSymbolName) *UnDecorateSymbolName;$/;"	m	namespace:__sanitizer	file:
UnalignedMemoryAccess	lib/tsan/rtl/tsan_rtl.cc	/^void UnalignedMemoryAccess(ThreadState *thr, uptr pc, uptr addr,$/;"	f	namespace:__tsan
UnbufferedLineConverter	lib/asan/scripts/asan_symbolize.py	/^class UnbufferedLineConverter(object):$/;"	c
Uncovered1	test/fuzzer/DSO1.cpp	/^void Uncovered1() { }$/;"	f
Uncovered2	test/fuzzer/DSO2.cpp	/^void Uncovered2() {}$/;"	f
UndefinedBehaviorReport	lib/ubsan/ubsan_monitor.cc	/^UndefinedBehaviorReport::UndefinedBehaviorReport(const char *IssueKind,$/;"	f	class:UndefinedBehaviorReport
UndefinedBehaviorReport	lib/ubsan/ubsan_monitor.h	/^struct UndefinedBehaviorReport {$/;"	s	namespace:__ubsan
UnderscopeLongJmpFunc1	lib/asan/tests/asan_test.cc	/^NOINLINE void UnderscopeLongJmpFunc1(jmp_buf buf) {$/;"	f
UnionTableAddr	lib/dfsan/dfsan_platform.h	/^uptr UnionTableAddr() {$/;"	f	namespace:__dfsan
UniqFeatureSet	lib/fuzzer/FuzzerCorpus.h	/^  Vector<uint32_t> UniqFeatureSet;$/;"	m	struct:fuzzer::InputInfo
UniqFeatureSetTmp	lib/fuzzer/FuzzerInternal.h	/^  Vector<uint32_t> UniqFeatureSetTmp;$/;"	m	class:fuzzer::Fuzzer
UniqueTid	lib/sanitizer_common/sanitizer_deadlock_detector_interface.h	/^  virtual int UniqueTid() { return 0; }$/;"	f	struct:__sanitizer::DDCallback
Unit	lib/fuzzer/FuzzerDefs.h	/^typedef Vector<uint8_t> Unit;$/;"	t	namespace:fuzzer
UnitName	lib/esan/cache_frag.cpp	/^  const char *UnitName;$/;"	m	struct:__esan::CacheFragInfo	file:
UnitStartTime	lib/fuzzer/FuzzerInternal.h	/^  system_clock::time_point UnitStartTime, UnitStopTime;$/;"	m	class:fuzzer::Fuzzer
UnitStopTime	lib/fuzzer/FuzzerInternal.h	/^  system_clock::time_point UnitStartTime, UnitStopTime;$/;"	m	class:fuzzer::Fuzzer
UnitTimeoutSec	lib/fuzzer/FuzzerOptions.h	/^  int UnitTimeoutSec = 300;$/;"	m	struct:fuzzer::FuzzingOptions
UnitVector	lib/fuzzer/FuzzerDefs.h	/^typedef Vector<Unit> UnitVector;$/;"	t	namespace:fuzzer
UnknownFlags	lib/sanitizer_common/sanitizer_flag_parser.cc	/^class UnknownFlags {$/;"	c	namespace:__sanitizer	file:
Unlink	lib/sanitizer_common/tests/sanitizer_libc_test.cc	/^static void Unlink(const char *path) {$/;"	f	file:
Unlock	lib/sanitizer_common/sanitizer_fuchsia.cc	/^void BlockingMutex::Unlock() {$/;"	f	class:__sanitizer::BlockingMutex
Unlock	lib/sanitizer_common/sanitizer_linux.cc	/^void BlockingMutex::Unlock() {$/;"	f	class:__sanitizer::BlockingMutex
Unlock	lib/sanitizer_common/sanitizer_mac.cc	/^void BlockingMutex::Unlock() {$/;"	f	class:__sanitizer::BlockingMutex
Unlock	lib/sanitizer_common/sanitizer_mutex.h	/^  void Unlock() {$/;"	f	class:__sanitizer::RWMutex
Unlock	lib/sanitizer_common/sanitizer_mutex.h	/^  void Unlock() {$/;"	f	class:__sanitizer::StaticSpinMutex
Unlock	lib/sanitizer_common/sanitizer_rtems.cc	/^void BlockingMutex::Unlock() {$/;"	f	class:__sanitizer::BlockingMutex
Unlock	lib/sanitizer_common/sanitizer_solaris.cc	/^void BlockingMutex::Unlock() {$/;"	f	class:__sanitizer::BlockingMutex
Unlock	lib/sanitizer_common/sanitizer_thread_registry.h	/^  void Unlock() { mtx_.Unlock(); }$/;"	f	class:__sanitizer::ThreadRegistry
Unlock	lib/sanitizer_common/sanitizer_win.cc	/^void BlockingMutex::Unlock() {$/;"	f	class:__sanitizer::BlockingMutex
Unlock	lib/tsan/benchmarks/vts_many_threads_bench.cc	/^  void Unlock() { pthread_mutex_unlock(&m_); }$/;"	f	class:Mutex
Unlock	lib/tsan/rtl/tsan_mutex.cc	/^void InternalDeadlockDetector::Unlock(MutexType t) {$/;"	f	class:__tsan::InternalDeadlockDetector
Unlock	lib/tsan/rtl/tsan_mutex.cc	/^void Mutex::Unlock() {$/;"	f	class:__tsan::Mutex
Unlock	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^void Mutex::Unlock() {$/;"	f	class:Mutex
Unlock	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^void ScopedThread::Unlock(const Mutex &m) {$/;"	f	class:ScopedThread
Unlock	test/tsan/custom_mutex.h	/^  void Unlock() {$/;"	f	class:Mutex
Unlock	test/tsan/mutex_annotations.cc	/^  void Unlock() {$/;"	f	class:Mutex
UnlockAll	lib/sanitizer_common/sanitizer_stackdepotbase.h	/^void StackDepotBase<Node, kReservedBits, kTabSizeLog>::UnlockAll() {$/;"	f	class:__sanitizer::StackDepotBase
UnlockAllocator	lib/asan/asan_allocator.cc	/^void UnlockAllocator() {$/;"	f	namespace:__lsan
UnlockAllocator	lib/lsan/lsan_allocator.cc	/^void UnlockAllocator() {$/;"	f	namespace:__lsan
UnlockImpl	test/tsan/custom_mutex.h	/^  void UnlockImpl() {$/;"	f	class:Mutex
UnlockThreadRegistry	lib/asan/asan_thread.cc	/^void UnlockThreadRegistry() {$/;"	f	namespace:__lsan
UnlockThreadRegistry	lib/lsan/lsan_thread.cc	/^void UnlockThreadRegistry() {$/;"	f	namespace:__lsan
Unmap	lib/sanitizer_common/sanitizer_fuchsia.cc	/^void ReservedAddressRange::Unmap(uptr addr, uptr size) {$/;"	f	class:__sanitizer::ReservedAddressRange
Unmap	lib/sanitizer_common/sanitizer_posix_libcdep.cc	/^void ReservedAddressRange::Unmap(uptr addr, uptr size) {$/;"	f	class:__sanitizer::ReservedAddressRange
Unmap	lib/sanitizer_common/sanitizer_win.cc	/^void ReservedAddressRange::Unmap(uptr addr, uptr size) {$/;"	f	class:__sanitizer::ReservedAddressRange
UnmapFromTo	lib/asan/asan_linux.cc	/^static void UnmapFromTo(uptr from, uptr to) {$/;"	f	namespace:__asan
UnmapFromTo	lib/hwasan/hwasan_dynamic_shadow.cc	/^static void UnmapFromTo(uptr from, uptr to) {$/;"	f	namespace:__hwasan
UnmapOrDie	lib/sanitizer_common/sanitizer_fuchsia.cc	/^void UnmapOrDie(void *addr, uptr size) {$/;"	f	namespace:__sanitizer
UnmapOrDie	lib/sanitizer_common/sanitizer_posix.cc	/^void UnmapOrDie(void *addr, uptr size) {$/;"	f	namespace:__sanitizer
UnmapOrDie	lib/sanitizer_common/sanitizer_rtems.cc	/^void UnmapOrDie(void *addr, uptr size) {$/;"	f	namespace:__sanitizer
UnmapOrDie	lib/sanitizer_common/sanitizer_win.cc	/^void UnmapOrDie(void *addr, uptr size) {$/;"	f	namespace:__sanitizer
UnmapOrDieVmar	lib/sanitizer_common/sanitizer_fuchsia.cc	/^void UnmapOrDieVmar(void *addr, uptr size, zx_handle_t target_vmar) {$/;"	f	namespace:__sanitizer
UnmapPackedCounterArrayBuffer	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^    void UnmapPackedCounterArrayBuffer(uptr buffer, uptr buffer_size) {$/;"	f	class:SizeClassAllocator64::MemoryMapper
UnmapPackedCounterArrayBuffer	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  void UnmapPackedCounterArrayBuffer(uptr buffer, uptr buffer_size) {$/;"	f	class:ReleasedPagesTrackingMemoryMapper
UnmapPackedCounterArrayBuffer	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  void UnmapPackedCounterArrayBuffer(uptr buffer, uptr buffer_size) {}$/;"	f	class:NoMemoryMapper
UnmapPackedCounterArrayBuffer	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  void UnmapPackedCounterArrayBuffer(uptr buffer, uptr buffer_size) {}$/;"	f	class:RedZoneMemoryMapper
UnmapWithCallback	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^  void UnmapWithCallback(uptr beg, uptr size) {$/;"	f	class:SizeClassAllocator32
UnmapWithCallbackOrDie	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  void UnmapWithCallbackOrDie(uptr beg, uptr size) {$/;"	f	class:SizeClassAllocator64
Unpack	lib/sanitizer_common/scripts/sancov.py	/^def Unpack(files):$/;"	f
UnpackOneFile	lib/sanitizer_common/scripts/sancov.py	/^def UnpackOneFile(path):$/;"	f
UnpackOneRawFile	lib/sanitizer_common/scripts/sancov.py	/^def UnpackOneRawFile(path, map_path):$/;"	f
UnpackedHeader	lib/scudo/scudo_allocator.h	/^struct UnpackedHeader {$/;"	s	namespace:__scudo
UnpoisonEnviron	lib/msan/msan_interceptors.cc	/^static void UnpoisonEnviron() {$/;"	f	file:
UnpoisonParam	lib/msan/msan.cc	/^void UnpoisonParam(uptr n) {$/;"	f	namespace:__msan
UnpoisonThreadLocalState	lib/msan/msan.cc	/^void UnpoisonThreadLocalState() {$/;"	f	namespace:__msan
UnreachableData	lib/ubsan/ubsan_handlers.h	/^struct UnreachableData {$/;"	s	namespace:__ubsan
UnrecognizedBuffer	lib/xray/xray_buffer_queue.h	/^    UnrecognizedBuffer,$/;"	m	class:__xray::BufferQueue::ErrorCode
UnrefClockBlock	lib/tsan/rtl/tsan_clock.cc	/^static void UnrefClockBlock(ClockCache *c, u32 idx, uptr blocks) {$/;"	f	namespace:__tsan
Unregister	lib/sanitizer_common/sanitizer_allocator_stats.h	/^  void Unregister(AllocatorStats *s) {$/;"	f	class:AllocatorGlobalStats
UnregisterGlobal	lib/asan/asan_globals.cc	/^static void UnregisterGlobal(const Global *g) {$/;"	f	namespace:__asan
UnregisterGlobals	lib/asan/asan_win_dynamic_runtime_thunk.cc	/^void UnregisterGlobals() {$/;"	f	namespace:__anon49
UnsetAlternateSignalStack	lib/sanitizer_common/sanitizer_fuchsia.cc	/^void UnsetAlternateSignalStack() {}$/;"	f	namespace:__sanitizer
UnsetAlternateSignalStack	lib/sanitizer_common/sanitizer_posix_libcdep.cc	/^void UnsetAlternateSignalStack() {$/;"	f	namespace:__sanitizer
UnsetAlternateSignalStack	lib/sanitizer_common/sanitizer_rtems.cc	/^void UnsetAlternateSignalStack() {}$/;"	f	namespace:__sanitizer
UnsetAlternateSignalStack	lib/sanitizer_common/sanitizer_win.cc	/^void UnsetAlternateSignalStack() {$/;"	f	namespace:__sanitizer
Unshare	lib/tsan/rtl/tsan_clock.cc	/^void SyncClock::Unshare(ClockCache *c) {$/;"	f	class:__tsan::SyncClock
UnstableCounters	lib/fuzzer/FuzzerTracePC.h	/^  UnstableEdge UnstableCounters[kNumPCs];$/;"	m	class:fuzzer::TracePC
UnstableEdge	lib/fuzzer/FuzzerTracePC.h	/^  struct UnstableEdge {$/;"	s	class:fuzzer::TracePC
UnsuppressedLeakCount	lib/lsan/lsan_common.cc	/^uptr LeakReport::UnsuppressedLeakCount() {$/;"	f	class:__lsan::LeakReport
Unused	lib/xray/xray_basic_logging.cc	/^static auto UNUSED Unused = __xray::basicLogDynamicInitializer();$/;"	v	file:
Unused	lib/xray/xray_fdr_logging.cc	/^static auto UNUSED Unused = __xray::fdrLogDynamicInitializer();$/;"	v	file:
Unused	lib/xray/xray_profiling.cc	/^static auto UNUSED Unused = __xray::profilingDynamicInitializer();$/;"	v	file:
UnusedAddr	lib/dfsan/dfsan.cc	/^static uptr UnusedAddr() {$/;"	f	file:
UnusedFunctionShouldBeRemovedByLinker	test/fuzzer/GcSectionsTest.cpp	/^extern "C" void UnusedFunctionShouldBeRemovedByLinker() { }$/;"	f
Unwind	lib/sanitizer_common/sanitizer_deadlock_detector_interface.h	/^  virtual u32 Unwind() { return 0; }$/;"	f	struct:__sanitizer::DDCallback
Unwind	lib/sanitizer_common/sanitizer_stacktrace_libcdep.cc	/^void BufferedStackTrace::Unwind(u32 max_depth, uptr pc, uptr bp, void *context,$/;"	f	class:__sanitizer::BufferedStackTrace
Unwind	lib/tsan/dd/dd_rtl.cc	/^u32 Callback::Unwind() {$/;"	f	class:__dsan::Callback
UnwindSignalStackCallbackType	lib/sanitizer_common/sanitizer_common.h	/^typedef void (*UnwindSignalStackCallbackType)(const SignalContext &sig,$/;"	t	namespace:__sanitizer
UnwindTraceArg	lib/sanitizer_common/sanitizer_symbolizer_markup.cc	/^struct UnwindTraceArg {$/;"	s	namespace:__sanitizer	file:
UnwindTraceArg	lib/sanitizer_common/sanitizer_unwind_linux_libcdep.cc	/^struct UnwindTraceArg {$/;"	s	namespace:__sanitizer	file:
Unwind_GetIP	lib/sanitizer_common/sanitizer_unwind_linux_libcdep.cc	/^uptr Unwind_GetIP(struct _Unwind_Context *ctx) {$/;"	f	namespace:__sanitizer
Unwind_Trace	lib/sanitizer_common/sanitizer_symbolizer_markup.cc	/^_Unwind_Reason_Code Unwind_Trace(struct _Unwind_Context *ctx, void *param) {$/;"	f	namespace:__sanitizer
Unwind_Trace	lib/sanitizer_common/sanitizer_unwind_linux_libcdep.cc	/^_Unwind_Reason_Code Unwind_Trace(struct _Unwind_Context *ctx, void *param) {$/;"	f	namespace:__sanitizer
Update	lib/sanitizer_common/scripts/cpplint.py	/^  def Update(self, filename, clean_lines, linenum, error):$/;"	m	class:_NestingState
UpdateClockCallback	lib/tsan/rtl/tsan_rtl_mutex.cc	/^static void UpdateClockCallback(ThreadContextBase *tctx_base, void *arg) {$/;"	f	namespace:__tsan
UpdateCorpusDistribution	lib/fuzzer/FuzzerCorpus.h	/^  void UpdateCorpusDistribution() {$/;"	f	class:fuzzer::InputCorpus
UpdateCurrentThread	lib/tsan/rtl/tsan_clock.cc	/^void ThreadClock::UpdateCurrentThread(ClockCache *c, SyncClock *dst) const {$/;"	f	class:__tsan::ThreadClock
UpdateFlags	lib/tsan/rtl/tsan_sync.h	/^  void UpdateFlags(u32 flagz) {$/;"	f	struct:__tsan::SyncVar
UpdateIncludeState	lib/sanitizer_common/scripts/cpplint.py	/^def UpdateIncludeState(filename, include_state, io=codecs):$/;"	f
UpdateObservedPCs	lib/fuzzer/FuzzerTracePC.cpp	/^void TracePC::UpdateObservedPCs() {$/;"	f	class:fuzzer::TracePC
UpdatePreprocessor	lib/sanitizer_common/scripts/cpplint.py	/^  def UpdatePreprocessor(self, line):$/;"	m	class:_NestingState
UpdateProcessName	lib/sanitizer_common/sanitizer_common.cc	/^void UpdateProcessName() {$/;"	f	namespace:__sanitizer
UpdateShadow	lib/cfi/cfi.cc	/^void UpdateShadow() {$/;"	f	namespace:__cfi
UpdateSleepClockCallback	lib/tsan/rtl/tsan_rtl_mutex.cc	/^static void UpdateSleepClockCallback(ThreadContextBase *tctx_base, void *arg) {$/;"	f	namespace:__tsan
UpdateUnstableCounters	lib/fuzzer/FuzzerTracePC.cpp	/^void TracePC::UpdateUnstableCounters(int UnstableMode) {$/;"	f	class:fuzzer::TracePC
UptrComparisonFunction	lib/sanitizer_common/sanitizer_common.cc	/^typedef bool UptrComparisonFunction(const uptr &a, const uptr &b);$/;"	t	namespace:__sanitizer	file:
UptrLess	lib/sanitizer_common/tests/sanitizer_common_test.cc	/^bool UptrLess(uptr a, uptr b) {$/;"	f	namespace:__sanitizer
Usage	lib/sanitizer_common/scripts/sancov.py	/^def Usage():$/;"	f
UseAfterPoison	test/asan/TestCases/scariness_score_test.cc	/^void UseAfterPoison() {$/;"	f
UseCmp	lib/fuzzer/FuzzerOptions.h	/^  bool UseCmp = false;$/;"	m	struct:fuzzer::FuzzingOptions
UseCount	lib/fuzzer/FuzzerDictionary.h	/^  size_t UseCount = 0;$/;"	m	class:fuzzer::DictionaryEntry
UseCounters	lib/fuzzer/FuzzerOptions.h	/^  bool UseCounters = false;$/;"	m	struct:fuzzer::FuzzingOptions
UseCounters	lib/fuzzer/FuzzerTracePC.h	/^  bool UseCounters = false;$/;"	m	class:fuzzer::TracePC
UseLocalPool	lib/asan/asan_malloc_linux.cc	/^static INLINE bool UseLocalPool() {$/;"	f	file:
UseMemmem	lib/fuzzer/FuzzerOptions.h	/^  bool UseMemmem = true;$/;"	m	struct:fuzzer::FuzzingOptions
UseODRIndicator	lib/asan/asan_globals.cc	/^static inline bool UseODRIndicator(const Global *g) {$/;"	f	namespace:__asan
UseThenFreeThenUse	lib/asan/tests/asan_test.cc	/^NOINLINE static void UseThenFreeThenUse() {$/;"	f	file:
UseThread	test/asan/TestCases/Posix/stack-use-after-return.cc	35;"	d	file:
UseValueProfile	lib/fuzzer/FuzzerOptions.h	/^  int UseValueProfile = false;$/;"	m	struct:fuzzer::FuzzingOptions
UseValueProfileMask	lib/fuzzer/FuzzerTracePC.h	/^  uint32_t UseValueProfileMask = false;$/;"	m	class:fuzzer::TracePC
Used	lib/xray/xray_buffer_queue.h	/^    bool Used = false;$/;"	m	struct:__xray::BufferQueue::BufferRep
UsedSize	lib/asan/asan_allocator.cc	/^  uptr UsedSize(bool locked_version = false) {$/;"	f	struct:__asan::AsanChunk
UsedSize	lib/asan/asan_allocator.cc	/^uptr AsanChunkView::UsedSize() const { return chunk_->UsedSize(); }$/;"	f	class:__asan::AsanChunkView
UsedSize	lib/hwasan/hwasan_allocator.cc	/^uptr HwasanChunkView::UsedSize() const {$/;"	f	class:__hwasan::HwasanChunkView
UsefulCount	lib/fuzzer/FuzzerMutate.h	/^    uint64_t UsefulCount;$/;"	m	struct:fuzzer::MutationDispatcher::Mutator
UserCallback	lib/fuzzer/FuzzerDefs.h	/^typedef int (*UserCallback)(const uint8_t *Data, size_t Size);$/;"	t	namespace:fuzzer
UserDieCallback	lib/sanitizer_common/sanitizer_termination.cc	/^static DieCallbackType UserDieCallback;$/;"	m	namespace:__sanitizer	file:
UserRequestedAlignment	lib/asan/asan_allocator.cc	/^u32 AsanChunkView::UserRequestedAlignment() const {$/;"	f	class:__asan::AsanChunkView
User_OnSIGSEGV	test/sanitizer_common/TestCases/Linux/allow_user_segv.cc	/^void User_OnSIGSEGV(int signum, siginfo_t *siginfo, void *context) {$/;"	f
V	test/ubsan/TestCases/TypeCheck/vptr.cpp	/^struct V : S {};$/;"	s	file:
V16x8	lib/msan/tests/msan_test.cc	/^typedef U1 V16x8 __attribute__((__vector_size__(16)));$/;"	t	namespace:__anon8	file:
V2x32	lib/msan/tests/msan_test.cc	/^typedef U4 V2x32 __attribute__((__vector_size__(8)));$/;"	t	namespace:__anon8	file:
V2x64	lib/msan/tests/msan_test.cc	/^typedef U8 V2x64 __attribute__((__vector_size__(16)));$/;"	t	namespace:__anon8	file:
V32	test/hwasan/TestCases/check-interface.cc	/^typedef unsigned V32 __attribute__((__vector_size__(32)));$/;"	t	file:
V4x16	lib/msan/tests/msan_test.cc	/^typedef U2 V4x16 __attribute__((__vector_size__(8)));$/;"	t	namespace:__anon8	file:
V4x32	lib/msan/tests/msan_test.cc	/^typedef U4 V4x32 __attribute__((__vector_size__(16)));$/;"	t	namespace:__anon8	file:
V4x64	lib/msan/tests/msan_test.cc	/^typedef U8 V4x64 __attribute__((__vector_size__(32)));$/;"	t	namespace:__anon8	file:
V8x16	lib/msan/tests/msan_test.cc	/^typedef U2 V8x16 __attribute__((__vector_size__(16)));$/;"	t	namespace:__anon8	file:
V8x32	lib/msan/tests/msan_test.cc	/^typedef U4 V8x32 __attribute__((__vector_size__(32)));$/;"	t	namespace:__anon8	file:
V8x8	lib/msan/tests/msan_test.cc	/^typedef U1 V8x8 __attribute__((__vector_size__(8)));$/;"	t	namespace:__anon8	file:
VALUE_PROF_FUNC_PARAM	lib/profile/InstrProfiling.h	105;"	d
VALUE_PROF_KIND	lib/profile/InstrProfiling.h	19;"	d
VENDOR_AMD	lib/builtins/cpu_model.c	/^  VENDOR_AMD,$/;"	e	enum:ProcessorVendors	file:
VENDOR_INTEL	lib/builtins/cpu_model.c	/^  VENDOR_INTEL = 1,$/;"	e	enum:ProcessorVendors	file:
VENDOR_MAX	lib/builtins/cpu_model.c	/^  VENDOR_MAX$/;"	e	enum:ProcessorVendors	file:
VENDOR_OTHER	lib/builtins/cpu_model.c	/^  VENDOR_OTHER,$/;"	e	enum:ProcessorVendors	file:
VLABoundData	lib/ubsan/ubsan_handlers.h	/^struct VLABoundData {$/;"	s	namespace:__ubsan
VM_MEMORY_SANITIZER	lib/sanitizer_common/sanitizer_mac.cc	108;"	d	file:
VPBufferSize	lib/profile/InstrProfilingWriter.c	/^COMPILER_RT_VISIBILITY uint32_t VPBufferSize = 0;$/;"	v
VPDataArray	lib/profile/InstrProfilingWriter.c	/^static InstrProfValueData VPDataArray[16];$/;"	v	file:
VPDataArraySize	lib/profile/InstrProfilingWriter.c	/^static uint32_t VPDataArraySize = sizeof(VPDataArray) \/ sizeof(*VPDataArray);$/;"	v	file:
VPDataReaderType	lib/profile/InstrProfilingInternal.h	/^typedef struct VPDataReaderType {$/;"	s
VPDataReaderType	lib/profile/InstrProfilingInternal.h	/^} VPDataReaderType;$/;"	t	typeref:struct:VPDataReaderType
VPMaxNumValsPerSite	lib/profile/InstrProfilingValue.c	/^COMPILER_RT_VISIBILITY uint32_t VPMaxNumValsPerSite =$/;"	v
VPMergeHook	lib/profile/InstrProfilingMerge.c	/^void (*VPMergeHook)(ValueProfData *, __llvm_profile_data *);$/;"	v
VPTR_UPDATE	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^    VPTR_UPDATE,$/;"	e	enum:Event::Type	file:
VP_BUFFER_SIZE	lib/profile/InstrProfilingWriter.c	24;"	d	file:
VPrintf	lib/sanitizer_common/sanitizer_common.h	184;"	d
VReport	lib/sanitizer_common/sanitizer_common.h	180;"	d
VSNPrintf	lib/sanitizer_common/sanitizer_printf.cc	/^int VSNPrintf(char *buff, int buff_length,$/;"	f	namespace:__sanitizer
Val	lib/ubsan/ubsan_value.h	/^  ValueHandle Val;$/;"	m	class:__ubsan::Value
ValAndMagic	lib/sanitizer_common/tests/sanitizer_atomic_test.cc	/^struct ValAndMagic {$/;"	s	namespace:__sanitizer	file:
ValgrindSlowdown	lib/tsan/rtl/tsan_interface_ann.cc	/^double __attribute__((weak)) INTERFACE_ATTRIBUTE ValgrindSlowdown(void) {$/;"	f
Valid	lib/xray/xray_recursion_guard.h	/^  const bool Valid;$/;"	m	class:__xray::RecursionGuard
Validate	lib/sanitizer_common/sanitizer_allocator_size_class_map.h	/^  static void Validate() {$/;"	f	class:SizeClassMap
ValidateBlock	lib/xray/tests/unit/profile_collector_test.cc	/^void ValidateBlock(XRayBuffer B) {$/;"	f	namespace:__xray::__anon22
ValidateFeatureSet	lib/fuzzer/FuzzerCorpus.h	/^  void ValidateFeatureSet() {$/;"	f	class:fuzzer::InputCorpus
ValidateFileHeaderBlock	lib/xray/tests/unit/profile_collector_test.cc	/^void ValidateFileHeaderBlock(XRayBuffer B) {$/;"	f	namespace:__xray::__anon22
Value	lib/ubsan/ubsan_value.h	/^  Value(const TypeDescriptor &Type, ValueHandle Val) : Type(Type), Val(Val) {}$/;"	f	class:__ubsan::Value
Value	lib/ubsan/ubsan_value.h	/^class Value {$/;"	c	namespace:__ubsan
ValueBitMap	lib/fuzzer/FuzzerValueBitMap.h	/^struct ValueBitMap {$/;"	s	namespace:fuzzer
ValueHandle	lib/ubsan/ubsan_value.h	/^typedef uptr ValueHandle;$/;"	t	namespace:__ubsan
ValueKind	lib/profile/InstrProfiling.h	/^enum ValueKind {$/;"	g
ValueProfNode	lib/profile/InstrProfiling.h	/^typedef struct ValueProfNode {$/;"	s
ValueProfNode	lib/profile/InstrProfiling.h	/^} ValueProfNode;$/;"	t	typeref:struct:ValueProfNode
ValueProfRuntimeRecord	lib/profile/InstrProfilingValue.c	/^typedef struct ValueProfRuntimeRecord {$/;"	s	file:
ValueProfRuntimeRecord	lib/profile/InstrProfilingValue.c	/^} ValueProfRuntimeRecord;$/;"	t	typeref:struct:ValueProfRuntimeRecord	file:
ValueProfileMap	lib/fuzzer/FuzzerTracePC.h	/^  ValueBitMap ValueProfileMap;$/;"	m	class:fuzzer::TracePC
VarSizeStackTrace	lib/tsan/rtl/tsan_stack_trace.cc	/^VarSizeStackTrace::VarSizeStackTrace()$/;"	f	class:__tsan::VarSizeStackTrace
VarSizeStackTrace	lib/tsan/rtl/tsan_stack_trace.h	/^struct VarSizeStackTrace : public StackTrace {$/;"	s	namespace:__tsan
VdsoBeg	lib/tsan/rtl/tsan_platform.h	/^uptr VdsoBeg(void) {$/;"	f	namespace:__tsan
Vector	lib/sanitizer_common/sanitizer_vector.h	/^  explicit Vector()$/;"	f	class:__sanitizer::Vector
Vector	lib/sanitizer_common/sanitizer_vector.h	/^class Vector {$/;"	c	namespace:__sanitizer
Vector	test/msan/dtor-multiple-inheritance-nontrivial-class-members.cc	/^template <class T> class Vector {$/;"	c	file:
Vector	test/msan/dtor-trivial-class-members.cc	/^class Vector {$/;"	c	file:
Vector	test/msan/dtor-trivial.cpp	/^template <class T> class Vector {$/;"	c	file:
VectorOfGlobals	lib/asan/asan_globals.cc	/^typedef InternalMmapVector<DynInitGlobal> VectorOfGlobals;$/;"	t	namespace:__asan	file:
VendorSignatures	lib/builtins/cpu_model.c	/^enum VendorSignatures {$/;"	g	file:
Verbosity	lib/fuzzer/FuzzerOptions.h	/^  int Verbosity = 1;$/;"	m	struct:fuzzer::FuzzingOptions
Verbosity	lib/sanitizer_common/sanitizer_common.h	/^INLINE int Verbosity() {$/;"	f	namespace:__sanitizer
VerifyOptions1	lib/tsan/tests/unit/tsan_flags_test.cc	/^void VerifyOptions1(Flags *f) {$/;"	f	namespace:__tsan
VerifyOptions2	lib/tsan/tests/unit/tsan_flags_test.cc	/^void VerifyOptions2(Flags *f) {$/;"	f	namespace:__tsan
Version	lib/xray/tests/unit/profile_collector_test.cc	/^  const u64 Version = ExpectedProfilingVersion;$/;"	m	struct:__xray::__anon22::ExpectedProfilingFileHeader	file:
Version	lib/xray/xray_interface_internal.h	/^  unsigned char Version;$/;"	m	struct:XRaySledEntry
Version	lib/xray/xray_profile_collector.cc	/^  const u64 Version = XRayProfilingVersion;$/;"	m	struct:__xray::profileCollectorService::__anon27::XRayProfilingFileHeader	file:
VeryCompactSizeClassMap	lib/sanitizer_common/sanitizer_allocator_size_class_map.h	/^typedef SizeClassMap<2, 5, 9, 16, 64, 14> VeryCompactSizeClassMap;$/;"	t
VirtualBase	test/msan/dtor-multiple-inheritance-nontrivial-class-members.cc	/^  VirtualBase() {$/;"	f	struct:VirtualBase
VirtualBase	test/msan/dtor-multiple-inheritance-nontrivial-class-members.cc	/^struct VirtualBase {$/;"	s	file:
VmaSize	lib/esan/esan.cpp	/^uptr VmaSize;$/;"	m	namespace:__esan	file:
VolatileBitfieldStruct	lib/msan/tests/msan_test.cc	/^struct VolatileBitfieldStruct {$/;"	s	file:
VptrMaxOffsetToTop	lib/ubsan/ubsan_type_hash.h	/^const int VptrMaxOffsetToTop = 1<<20;$/;"	m	namespace:__ubsan
VptrTypeCacheSize	lib/ubsan/ubsan_type_hash.h	/^const unsigned VptrTypeCacheSize = 128;$/;"	m	namespace:__ubsan
VptrUpdate	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^void ScopedThread::VptrUpdate(const MemLoc &vptr,$/;"	f	class:ScopedThread
VtablePrefix	lib/ubsan/ubsan_type_hash_itanium.cc	/^struct VtablePrefix {$/;"	s	namespace:__anon103	file:
VtablePrefix	test/ubsan/TestCases/TypeCheck/vptr-corrupted-vtable-itanium.cpp	/^struct VtablePrefix {$/;"	s	file:
W	lib/fuzzer/FuzzerDictionary.h	/^  Word W;$/;"	m	class:fuzzer::DictionaryEntry
W	test/ubsan/TestCases/TypeCheck/vptr.cpp	/^  struct W {};$/;"	s	namespace:__anon141	file:
WANTS_ONE	lib/BlocksRuntime/runtime.c	/^static const int WANTS_ONE = (1 << 16);$/;"	v	file:
WARN_UNUSED_RESULT	lib/sanitizer_common/sanitizer_common.h	/^     WARN_UNUSED_RESULT;$/;"	m	namespace:__sanitizer
WARN_UNUSED_RESULT	lib/sanitizer_common/sanitizer_internal_defs.h	219;"	d
WARN_UNUSED_RESULT	lib/sanitizer_common/sanitizer_internal_defs.h	238;"	d
WEAK_DEFAULT_NAME	lib/sanitizer_common/sanitizer_win_defs.h	78;"	d
WEAK_EXPORT_NAME	lib/sanitizer_common/sanitizer_win_defs.h	80;"	d
WIDE	lib/builtins/assembly.h	129;"	d
WIDE	lib/builtins/assembly.h	131;"	d
WIN32_LEAN_AND_MEAN	lib/asan/asan_malloc_win.cc	17;"	d	file:
WIN32_LEAN_AND_MEAN	lib/asan/asan_win.cc	17;"	d	file:
WIN32_LEAN_AND_MEAN	lib/asan/asan_win_dynamic_runtime_thunk.cc	27;"	d	file:
WIN32_LEAN_AND_MEAN	lib/builtins/enable_execute_stack.c	24;"	d	file:
WIN32_LEAN_AND_MEAN	lib/interception/interception_win.cc	132;"	d	file:
WIN32_LEAN_AND_MEAN	lib/interception/tests/interception_win_test.cc	22;"	d	file:
WIN32_LEAN_AND_MEAN	lib/profile/WindowsMMap.c	22;"	d	file:
WIN32_LEAN_AND_MEAN	lib/sanitizer_common/sanitizer_dbghelp.h	22;"	d
WIN32_LEAN_AND_MEAN	lib/sanitizer_common/sanitizer_unwind_win.cc	17;"	d	file:
WIN32_LEAN_AND_MEAN	lib/sanitizer_common/sanitizer_win.cc	18;"	d	file:
WIN32_LEAN_AND_MEAN	lib/stats/stats_client.cc	19;"	d	file:
WINAPI	lib/sanitizer_common/sanitizer_win_defs.h	21;"	d
WINAPI	lib/sanitizer_common/sanitizer_win_defs.h	23;"	d
WIN_EXPORT	lib/sanitizer_common/sanitizer_win_defs.h	64;"	d
WIN_FORCE_LINK	lib/sanitizer_common/sanitizer_win_defs.h	61;"	d
WIN_SYM_PREFIX	lib/sanitizer_common/sanitizer_win_defs.h	28;"	d
WIN_SYM_PREFIX	lib/sanitizer_common/sanitizer_win_defs.h	30;"	d
WIN_WEAK_ALIAS	lib/sanitizer_common/sanitizer_win_defs.h	57;"	d
WIN_WEAK_EXPORT_DEF	lib/sanitizer_common/sanitizer_win_defs.h	85;"	d
WIN_WEAK_IMPORT_DEF	lib/sanitizer_common/sanitizer_win_defs.h	94;"	d
WORKING_SET_H	lib/esan/working_set.h	16;"	d
WRAP	lib/interception/interception.h	120;"	d
WRAP	lib/interception/interception.h	126;"	d
WRAP	lib/interception/interception.h	134;"	d
WRAP	lib/interception/interception.h	139;"	d
WRAP	lib/interception/interception.h	149;"	d
WRAPPER_NAME	lib/interception/interception.h	121;"	d
WRAPPER_NAME	lib/interception/interception.h	127;"	d
WRAPPER_NAME	lib/interception/interception.h	135;"	d
WRAPPER_NAME	lib/interception/interception.h	140;"	d
WRAPPER_NAME	lib/interception/interception.h	150;"	d
WRITE	lib/sanitizer_common/sanitizer_common.h	/^  enum WriteFlag { UNKNOWN, READ, WRITE } write_flag;$/;"	e	enum:__sanitizer::SignalContext::WriteFlag
WRITE	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^    WRITE,$/;"	e	enum:Event::Type	file:
WRITE	test/sanitizer_common/TestCases/malloc_hook.cc	14;"	d	file:
WRITE_BUFFER_SIZE	lib/profile/GCDAProfiling.c	83;"	d	file:
WTFAnnotateBenignRaceSized	lib/tsan/rtl/tsan_interface_ann.cc	/^void INTERFACE_ATTRIBUTE WTFAnnotateBenignRaceSized($/;"	f
WTFAnnotateHappensAfter	lib/tsan/rtl/tsan_interface_ann.cc	/^void INTERFACE_ATTRIBUTE WTFAnnotateHappensAfter(char *f, int l, uptr addr) {$/;"	f
WTFAnnotateHappensBefore	lib/tsan/rtl/tsan_interface_ann.cc	/^void INTERFACE_ATTRIBUTE WTFAnnotateHappensBefore(char *f, int l, uptr addr) {$/;"	f
WTFGlobal	test/tsan/benign_race.cc	/^int WTFGlobal;$/;"	v
Wait	lib/fuzzer/FuzzerShmemFuchsia.cpp	/^void SharedMemoryRegion::Wait(int Idx) {}$/;"	f	class:fuzzer::SharedMemoryRegion
Wait	lib/fuzzer/FuzzerShmemPosix.cpp	/^void SharedMemoryRegion::Wait(int Idx) {$/;"	f	class:fuzzer::SharedMemoryRegion
Wait	lib/fuzzer/FuzzerShmemWindows.cpp	/^void SharedMemoryRegion::Wait(int Idx) {$/;"	f	class:fuzzer::SharedMemoryRegion
Wait	test/tsan/custom_mutex.h	/^  void Wait() {$/;"	f	class:Mutex
WaitClient	lib/fuzzer/FuzzerShmem.h	/^  void WaitClient() {Wait(1);}$/;"	f	class:fuzzer::SharedMemoryRegion
WaitForProcess	lib/sanitizer_common/sanitizer_posix_libcdep.cc	/^int WaitForProcess(pid_t pid) {$/;"	f	namespace:__sanitizer
WaitForProcess	lib/sanitizer_common/sanitizer_win.cc	/^int WaitForProcess(pid_t pid) { return -1; }$/;"	f	namespace:__sanitizer
WaitServer	lib/fuzzer/FuzzerShmem.h	/^  void WaitServer() {Wait(0);}$/;"	f	class:fuzzer::SharedMemoryRegion
Warning	lib/sanitizer_common/sanitizer_report_decorator.h	/^  const char *Warning() const { return Red(); }$/;"	f	class:__sanitizer::SanitizerCommonDecorator
WasConstructed	lib/esan/esan_circular_buffer.h	/^  bool WasConstructed;$/;"	m	class:__esan::CircularBuffer
Weights	lib/fuzzer/FuzzerCorpus.h	/^  Vector<double> Weights;$/;"	m	class:fuzzer::InputCorpus
White	lib/sanitizer_common/sanitizer_report_decorator.h	/^  const char *White()   const { return ansi_ ? "\\033[1m\\033[37m" : ""; }$/;"	f	class:__sanitizer::SanitizerCommonDecorator
WillUseFastUnwind	lib/sanitizer_common/sanitizer_stacktrace.h	/^  static bool WillUseFastUnwind(bool request_fast_unwind) {$/;"	f	struct:__sanitizer::StackTrace
WinSymbolizerTool	lib/sanitizer_common/sanitizer_symbolizer_win.cc	/^class WinSymbolizerTool : public SymbolizerTool {$/;"	c	namespace:__sanitizer::__anon77	file:
Word	lib/fuzzer/FuzzerDictionary.h	/^typedef FixedWord<64> Word;$/;"	t	namespace:fuzzer
WordIsPoisoned	lib/asan/asan_poisoning.cc	/^bool WordIsPoisoned(uptr addr) {$/;"	f	namespace:__lsan
WordIsPoisoned	lib/lsan/lsan.cc	/^bool WordIsPoisoned(uptr addr) {$/;"	f	namespace:__lsan
Word_1	lib/builtins/fp_lib.h	143;"	d
Word_1	lib/builtins/fp_lib.h	203;"	d
Word_2	lib/builtins/fp_lib.h	144;"	d
Word_2	lib/builtins/fp_lib.h	204;"	d
Word_3	lib/builtins/fp_lib.h	145;"	d
Word_3	lib/builtins/fp_lib.h	205;"	d
Word_4	lib/builtins/fp_lib.h	146;"	d
Word_4	lib/builtins/fp_lib.h	206;"	d
Word_FullMask	lib/builtins/fp_lib.h	142;"	d
Word_FullMask	lib/builtins/fp_lib.h	209;"	d
Word_HiMask	lib/builtins/fp_lib.h	141;"	d
Word_HiMask	lib/builtins/fp_lib.h	207;"	d
Word_LoMask	lib/builtins/fp_lib.h	140;"	d
Word_LoMask	lib/builtins/fp_lib.h	208;"	d
Worker	test/tsan/mmap_stress.cc	/^void *Worker(void *arg) {$/;"	f
Worker1	test/tsan/mmap_stress.cc	/^void *Worker1(void *arg) {$/;"	f
WorkerThread	lib/fuzzer/FuzzerDriver.cpp	/^static void WorkerThread(const Command &BaseCmd, std::atomic<unsigned> *Counter,$/;"	f	namespace:fuzzer
WorkerThread	lib/sanitizer_common/tests/sanitizer_common_test.cc	/^static void *WorkerThread(void *arg) {$/;"	f	namespace:__sanitizer
WrOnly	lib/sanitizer_common/sanitizer_file.h	/^  WrOnly,$/;"	e	enum:__sanitizer::FileAccessMode
Write	lib/profile/InstrProfilingInternal.h	/^  WriterCallback Write;$/;"	m	struct:ProfDataWriter
Write	lib/sanitizer_common/sanitizer_posix.cc	/^void ReportFile::Write(const char *buffer, uptr length) {$/;"	f	class:__sanitizer::ReportFile
Write	lib/sanitizer_common/sanitizer_rtems.cc	/^void ReportFile::Write(const char *buffer, uptr length) {$/;"	f	class:__sanitizer::ReportFile
Write	lib/sanitizer_common/sanitizer_win.cc	/^void ReportFile::Write(const char *buffer, uptr length) {$/;"	f	class:__sanitizer::ReportFile
Write	lib/sanitizer_common/tests/sanitizer_mutex_test.cc	/^  void Write() {$/;"	f	class:__sanitizer::TestData
Write	lib/tsan/tests/rtl/tsan_test_util.h	/^  void Write(const MemLoc &ml, int size, bool expect_race = false) {$/;"	f	class:ScopedThread
Write	lib/tsan/tests/unit/tsan_mutex_test.cc	/^  void Write() {$/;"	f	class:__tsan::TestData
Write	test/asan/TestCases/Darwin/segv_read_write.c	/^__attribute__((noinline)) void Write(int *ptr) { *ptr = 0; }$/;"	f
Write	test/asan/TestCases/Linux/segv_read_write.c	/^__attribute__((noinline)) void Write(int *ptr) { *ptr = 0; }$/;"	f
Write	test/asan/TestCases/Windows/crash_read_write.cc	/^__attribute__((noinline)) void Write(int *ptr) { *ptr = 0; }$/;"	f
Write	test/asan/TestCases/scariness_score_test.cc	/^enum ReadOrWrite { Read = 0, Write = 1 };$/;"	e	enum:ReadOrWrite	file:
Write1	lib/tsan/tests/rtl/tsan_test_util.h	/^  void Write1(const MemLoc &ml, bool expect_race = false) {$/;"	f	class:ScopedThread
Write2	lib/tsan/tests/rtl/tsan_test_util.h	/^  void Write2(const MemLoc &ml, bool expect_race = false) {$/;"	f	class:ScopedThread
Write4	lib/tsan/tests/rtl/tsan_test_util.h	/^  void Write4(const MemLoc &ml, bool expect_race = false) {$/;"	f	class:ScopedThread
Write42ToCookie	test/asan/TestCases/Posix/new_array_cookie_uaf_test.cc	/^__attribute__((no_sanitize_address)) void Write42ToCookie(C *c) {$/;"	f
Write8	lib/tsan/tests/rtl/tsan_test_util.h	/^  void Write8(const MemLoc &ml, bool expect_race = false) {$/;"	f	class:ScopedThread
WriteBranch	lib/interception/interception_win.cc	/^static void WriteBranch($/;"	f	namespace:__interception
WriteByteArray	lib/fuzzer/FuzzerShmem.h	/^  size_t WriteByteArray(const uint8_t *Bytes, size_t N) {$/;"	f	class:fuzzer::SharedMemoryRegion
WriteDirectBranch	lib/interception/interception_win.cc	/^static void WriteDirectBranch(uptr from, uptr target) {$/;"	f	namespace:__interception
WriteFlag	lib/sanitizer_common/sanitizer_common.h	/^  enum WriteFlag { UNKNOWN, READ, WRITE } write_flag;$/;"	g	struct:__sanitizer::SignalContext
WriteFullReport	lib/stats/stats.cc	/^void WriteFullReport() {$/;"	f	namespace:__anon4
WriteIndirectJumpInstruction	lib/interception/interception_win.cc	/^static void WriteIndirectJumpInstruction(uptr from, uptr indirect_target) {$/;"	f	namespace:__interception
WriteJumpInstruction	lib/interception/interception_win.cc	/^static void WriteJumpInstruction(uptr from, uptr target) {$/;"	f	namespace:__interception
WriteLE	lib/stats/stats.cc	/^void WriteLE(fd_t fd, uptr val) {$/;"	f	namespace:__anon3
WriteMemoryProfile	lib/tsan/rtl/tsan_platform_linux.cc	/^void WriteMemoryProfile(char *buf, uptr buf_size, uptr nthread, uptr nlive) {$/;"	f	namespace:__tsan
WriteMemoryProfile	lib/tsan/rtl/tsan_platform_mac.cc	/^void WriteMemoryProfile(char *buf, uptr buf_size, uptr nthread, uptr nlive) {$/;"	f	namespace:__tsan
WriteMemoryProfile	lib/tsan/rtl/tsan_platform_windows.cc	/^void WriteMemoryProfile(char *buf, uptr buf_size, uptr nthread, uptr nlive) {$/;"	f	namespace:__tsan
WriteModuleCoverage	lib/sanitizer_common/sanitizer_coverage_libcdep_new.cc	/^static void WriteModuleCoverage(char* file_path, const char* module_name,$/;"	f	namespace:__sancov::__anon64
WriteModuleReport	lib/stats/stats.cc	/^void WriteModuleReport(StatModule **smodp) {$/;"	f	namespace:__anon3
WriteNewControlFile	lib/fuzzer/FuzzerMerge.cpp	/^static void WriteNewControlFile(const std::string &CFPath,$/;"	f	namespace:fuzzer
WriteOneLineToSyslog	lib/sanitizer_common/sanitizer_common.h	/^INLINE void WriteOneLineToSyslog(const char *s) {}$/;"	f	namespace:__sanitizer
WriteOneLineToSyslog	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^void WriteOneLineToSyslog(const char *s) { syslog(LOG_INFO, "%s", s); }$/;"	f	namespace:__sanitizer
WriteOneLineToSyslog	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^void WriteOneLineToSyslog(const char *s) {$/;"	f	namespace:__sanitizer
WriteOneLineToSyslog	lib/sanitizer_common/sanitizer_mac.cc	/^void WriteOneLineToSyslog(const char *s) {$/;"	f	namespace:__sanitizer
WritePadding	lib/interception/interception_win.cc	/^static void WritePadding(uptr from, uptr size) {$/;"	f	namespace:__interception
WriteReportOnExitOrSignal	lib/stats/stats.cc	/^  WriteReportOnExitOrSignal() {$/;"	f	struct:__anon4::WriteReportOnExitOrSignal
WriteReportOnExitOrSignal	lib/stats/stats.cc	/^struct WriteReportOnExitOrSignal {$/;"	s	namespace:__anon4	file:
WriteShortJumpInstruction	lib/interception/interception_win.cc	/^static void WriteShortJumpInstruction(uptr from, uptr target) {$/;"	f	namespace:__interception
WriteToFile	lib/fuzzer/FuzzerIO.cpp	/^void WriteToFile(const Unit &U, const std::string &Path) {$/;"	f	namespace:fuzzer
WriteToFile	lib/sanitizer_common/sanitizer_posix.cc	/^bool WriteToFile(fd_t fd, const void *buff, uptr buff_size, uptr *bytes_written,$/;"	f	namespace:__sanitizer
WriteToFile	lib/sanitizer_common/sanitizer_rtems.cc	/^bool WriteToFile(fd_t fd, const void *buff, uptr buff_size, uptr *bytes_written,$/;"	f	namespace:__sanitizer
WriteToFile	lib/sanitizer_common/sanitizer_win.cc	/^bool WriteToFile(fd_t fd, const void *buff, uptr buff_size, uptr *bytes_written,$/;"	f	namespace:__sanitizer
WriteToOutputCorpus	lib/fuzzer/FuzzerLoop.cpp	/^void Fuzzer::WriteToOutputCorpus(const Unit &U) {$/;"	f	class:fuzzer::Fuzzer
WriteToSymbolizer	lib/sanitizer_common/sanitizer_symbolizer_libcdep.cc	/^bool SymbolizerProcess::WriteToSymbolizer(const char *buffer, uptr length) {$/;"	f	class:__sanitizer::SymbolizerProcess
WriteToSyslog	lib/sanitizer_common/sanitizer_common_libcdep.cc	/^void WriteToSyslog(const char *msg) {$/;"	f	namespace:__sanitizer
WriteToSyslog	lib/sanitizer_common/sanitizer_common_nolibc.cc	/^void WriteToSyslog(const char *buffer) {}$/;"	f	namespace:__sanitizer
WriteUnitToFileWithPrefix	lib/fuzzer/FuzzerLoop.cpp	/^void Fuzzer::WriteUnitToFileWithPrefix(const Unit &U, const char *Prefix) {$/;"	f	class:fuzzer::Fuzzer
WriterCallback	lib/profile/InstrProfilingInternal.h	/^typedef uint32_t (*WriterCallback)(struct ProfDataWriter *This, ProfDataIOVec *,$/;"	t
WriterCtx	lib/profile/InstrProfilingInternal.h	/^  void *WriterCtx;$/;"	m	struct:ProfDataWriter
WrongFree	lib/asan/tests/asan_test.cc	/^void WrongFree() {$/;"	f
X	test/profile/Inputs/gcc-flag-compatibility.c	/^int X = 0;$/;"	v
X	test/tsan/deep_stack1.cc	/^volatile int X;$/;"	v
X	test/tsan/fd_pipe_norace.cc	/^int X;$/;"	v
X	test/tsan/fd_socket_connect_norace.cc	/^int X;$/;"	v
X	test/tsan/fd_socket_norace.cc	/^int X;$/;"	v
X	test/tsan/fd_socketpair_norace.cc	/^int X;$/;"	v
X	test/tsan/fd_stdout_race.cc	/^int X;$/;"	v
X	test/tsan/halt_on_error.cc	/^int X;$/;"	v
X	test/tsan/mop1.c	/^volatile long X, Y, Z;$/;"	v
X	test/tsan/race_stress.cc	/^volatile int X = 0;$/;"	v
X	test/tsan/signal_reset.cc	/^volatile int X;$/;"	v
X	test/tsan/signal_sync.cc	/^volatile int X;$/;"	v
X	test/tsan/signal_thread.cc	/^volatile int X;$/;"	v
X	test/tsan/sleep_sync.cc	/^int X = 0;$/;"	v
X	test/tsan/sleep_sync2.cc	/^int X = 0;$/;"	v
X	test/tsan/suppress_same_address.cc	/^volatile int X;$/;"	v
X	test/tsan/vfork.cc	/^int X;$/;"	v
X	test/ubsan/TestCases/TypeCheck/vptr-non-unique-typeinfo.cpp	/^struct X {$/;"	s	file:
XDR	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^CHECK_TYPE_SIZE(XDR);$/;"	v
XDR	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^CHECK_TYPE_SIZE(XDR);$/;"	v
XElf32_Phdr	lib/sanitizer_common/sanitizer_freebsd.h	/^} XElf32_Phdr;$/;"	t	namespace:__sanitizer	typeref:struct:__sanitizer::__anon95
XOR	lib/msan/tests/msan_test.cc	/^template<class T> INLINE T XOR(const T &a, const T&b) { return a ^ b; }$/;"	f
XRAY_ALLOCATOR_H	lib/xray/xray_allocator.h	17;"	d
XRAY_BASIC_FLAGS_H	lib/xray/xray_basic_flags.h	16;"	d
XRAY_BUFFER_QUEUE_H	lib/xray/xray_buffer_queue.h	16;"	d
XRAY_DUPLICATE_MODE	include/xray/xray_log_interface.h	/^  XRAY_DUPLICATE_MODE = 1,$/;"	e	enum:XRayLogRegisterStatus
XRAY_EMULATE_TSC_H	lib/xray/xray_tsc.h	14;"	d
XRAY_FDR_FLAGS_H	lib/xray/xray_fdr_flags.h	16;"	d
XRAY_FLAG	lib/xray/xray_basic_flags.cc	29;"	d	file:
XRAY_FLAG	lib/xray/xray_basic_flags.cc	31;"	d	file:
XRAY_FLAG	lib/xray/xray_basic_flags.cc	36;"	d	file:
XRAY_FLAG	lib/xray/xray_basic_flags.cc	39;"	d	file:
XRAY_FLAG	lib/xray/xray_basic_flags.h	24;"	d
XRAY_FLAG	lib/xray/xray_basic_flags.h	26;"	d
XRAY_FLAG	lib/xray/xray_fdr_flags.cc	28;"	d	file:
XRAY_FLAG	lib/xray/xray_fdr_flags.cc	30;"	d	file:
XRAY_FLAG	lib/xray/xray_fdr_flags.cc	34;"	d	file:
XRAY_FLAG	lib/xray/xray_fdr_flags.cc	37;"	d	file:
XRAY_FLAG	lib/xray/xray_fdr_flags.h	24;"	d
XRAY_FLAG	lib/xray/xray_fdr_flags.h	26;"	d
XRAY_FLAG	lib/xray/xray_flags.cc	28;"	d	file:
XRAY_FLAG	lib/xray/xray_flags.cc	30;"	d	file:
XRAY_FLAG	lib/xray/xray_flags.cc	34;"	d	file:
XRAY_FLAG	lib/xray/xray_flags.cc	37;"	d	file:
XRAY_FLAG	lib/xray/xray_flags.h	24;"	d
XRAY_FLAG	lib/xray/xray_flags.h	26;"	d
XRAY_FLAG	lib/xray/xray_profiling_flags.cc	27;"	d	file:
XRAY_FLAG	lib/xray/xray_profiling_flags.cc	29;"	d	file:
XRAY_FLAG	lib/xray/xray_profiling_flags.cc	34;"	d	file:
XRAY_FLAG	lib/xray/xray_profiling_flags.cc	37;"	d	file:
XRAY_FLAG	lib/xray/xray_profiling_flags.h	24;"	d
XRAY_FLAG	lib/xray/xray_profiling_flags.h	26;"	d
XRAY_FLAGS_H	lib/xray/xray_flags.h	16;"	d
XRAY_FUNCTION_CALL_TRIE_H	lib/xray/xray_function_call_trie.h	16;"	d
XRAY_INCOMPLETE_IMPL	include/xray/xray_log_interface.h	/^  XRAY_INCOMPLETE_IMPL = 3,$/;"	e	enum:XRayLogRegisterStatus
XRAY_INTERFACE_INTERNAL_H	lib/xray/xray_interface_internal.h	16;"	d
XRAY_LOG_FINALIZED	include/xray/xray_log_interface.h	/^  XRAY_LOG_FINALIZED = 4,$/;"	e	enum:XRayLogInitStatus
XRAY_LOG_FINALIZING	include/xray/xray_log_interface.h	/^  XRAY_LOG_FINALIZING = 3,$/;"	e	enum:XRayLogInitStatus
XRAY_LOG_FLUSHED	include/xray/xray_log_interface.h	/^  XRAY_LOG_FLUSHED = 2,$/;"	e	enum:XRayLogFlushStatus
XRAY_LOG_FLUSHING	include/xray/xray_log_interface.h	/^  XRAY_LOG_FLUSHING = 1,$/;"	e	enum:XRayLogFlushStatus
XRAY_LOG_INITIALIZED	include/xray/xray_log_interface.h	/^  XRAY_LOG_INITIALIZED = 2,$/;"	e	enum:XRayLogInitStatus
XRAY_LOG_INITIALIZING	include/xray/xray_log_interface.h	/^  XRAY_LOG_INITIALIZING = 1,$/;"	e	enum:XRayLogInitStatus
XRAY_LOG_NOT_FLUSHING	include/xray/xray_log_interface.h	/^  XRAY_LOG_NOT_FLUSHING = 0,$/;"	e	enum:XRayLogFlushStatus
XRAY_LOG_UNINITIALIZED	include/xray/xray_log_interface.h	/^  XRAY_LOG_UNINITIALIZED = 0,$/;"	e	enum:XRayLogInitStatus
XRAY_MODE_NOT_FOUND	include/xray/xray_log_interface.h	/^  XRAY_MODE_NOT_FOUND = 2,$/;"	e	enum:XRayLogRegisterStatus
XRAY_NEVER_INSTRUMENT	lib/xray/xray_defs.h	17;"	d
XRAY_NEVER_INSTRUMENT	lib/xray/xray_defs.h	19;"	d
XRAY_PROFILER_FLAGS_H	lib/xray/xray_profiling_flags.h	16;"	d
XRAY_REGISTRATION_OK	include/xray/xray_log_interface.h	/^  XRAY_REGISTRATION_OK = 0,$/;"	e	enum:XRayLogRegisterStatus
XRAY_SEGMENTED_ARRAY_H	lib/xray/xray_segmented_array.h	17;"	d
XRAY_UTILS_H	lib/xray/xray_utils.h	16;"	d
XRAY_XRAY_DEFS_H	lib/xray/xray_defs.h	14;"	d
XRAY_XRAY_FDR_LOGGING_H	lib/xray/xray_fdr_logging.h	14;"	d
XRAY_XRAY_FDR_LOG_RECORDS_H	lib/xray/xray_fdr_log_records.h	14;"	d
XRAY_XRAY_INMEMORY_LOG_H	lib/xray/xray_basic_logging.h	14;"	d
XRAY_XRAY_INTERFACE_H	include/xray/xray_interface.h	16;"	d
XRAY_XRAY_LOG_INTERFACE_H	include/xray/xray_log_interface.h	94;"	d
XRAY_XRAY_PROFILE_COLLECTOR_H	lib/xray/xray_profile_collector.h	19;"	d
XRAY_XRAY_RECORDS_H	include/xray/xray_records.h	18;"	d
XRAY_XRAY_RECURSION_GUARD_H	lib/xray/xray_recursion_guard.h	14;"	d
XRayBuffer	include/xray/xray_log_interface.h	/^struct XRayBuffer {$/;"	s
XRayEntryType	include/xray/xray_interface.h	/^enum XRayEntryType {$/;"	g
XRayFunctionSledIndex	lib/xray/xray_interface_internal.h	/^struct XRayFunctionSledIndex {$/;"	s
XRayImplMutex	lib/xray/xray_log_interface.cc	/^static SpinMutex XRayImplMutex;$/;"	m	namespace:__xray	file:
XRayInitMutex	lib/xray/xray_init.cc	/^SpinMutex XRayInitMutex;$/;"	v
XRayInstrMap	lib/xray/xray_init.cc	/^XRaySledMap XRayInstrMap;$/;"	v
XRayInstrMapMutex	lib/xray/xray_init.cc	/^SpinMutex XRayInstrMapMutex;$/;"	v
XRayLogFlushStatus	include/xray/xray_log_interface.h	/^enum XRayLogFlushStatus {$/;"	g
XRayLogImpl	include/xray/xray_log_interface.h	/^struct XRayLogImpl {$/;"	s
XRayLogInitStatus	include/xray/xray_log_interface.h	/^enum XRayLogInitStatus {$/;"	g
XRayLogRegisterStatus	include/xray/xray_log_interface.h	/^enum XRayLogRegisterStatus {$/;"	g
XRayMagicBytes	lib/xray/xray_profile_collector.cc	/^constexpr u64 XRayMagicBytes = 0x7872617970726f66;$/;"	m	namespace:__xray::profileCollectorService::__anon27	file:
XRayPatchingStatus	include/xray/xray_interface.h	/^enum XRayPatchingStatus {$/;"	g
XRayProfilingFileHeader	lib/xray/xray_profile_collector.cc	/^struct XRayProfilingFileHeader {$/;"	s	namespace:__xray::profileCollectorService::__anon27	file:
XRayProfilingVersion	lib/xray/xray_profile_collector.cc	/^constexpr u64 XRayProfilingVersion = 0x20180424;$/;"	m	namespace:__xray::profileCollectorService::__anon27	file:
XRaySledEntry	lib/xray/xray_interface_internal.h	/^struct XRaySledEntry {$/;"	s
XRaySledMap	lib/xray/xray_interface_internal.h	/^struct XRaySledMap {$/;"	s	namespace:__xray
XXX	test/asan/TestCases/asan_and_llvm_coverage_test.cc	/^int XXX = foo();$/;"	v
XXX	test/asan/TestCases/global-demangle.cc	/^namespace XXX {$/;"	n	file:
XXX	test/asan/TestCases/global-underflow.cc	/^int XXX[2] = {2, 3};$/;"	v
XXX	test/asan/TestCases/stack-frame-demangle.cc	/^namespace XXX {$/;"	n	file:
XXX	test/tsan/global_race3.cc	/^namespace XXX {$/;"	n	file:
Xyz	test/sanitizer_common/TestCases/Posix/dedup_token_length_test.cc	/^namespace Xyz {$/;"	n	file:
Y	test/tsan/mop1.c	/^volatile long X, Y, Z;$/;"	v
YYY	test/asan/TestCases/Helpers/underflow.cc	/^int YYY[3]={1,2,3};$/;"	v
YYY	test/asan/TestCases/global-demangle.cc	/^class YYY {$/;"	c	namespace:XXX	file:
YYY	test/asan/TestCases/stack-frame-demangle.cc	/^struct YYY {$/;"	s	namespace:XXX	file:
YYY	test/tsan/global_race3.cc	/^  struct YYY {$/;"	s	namespace:XXX	file:
Yellow	lib/sanitizer_common/sanitizer_report_decorator.h	/^  const char *Yellow()  const { return ansi_ ? "\\033[1m\\033[33m" : ""; }$/;"	f	class:__sanitizer::SanitizerCommonDecorator
Z	test/cfi/bad-split.cpp	/^struct Z {$/;"	s	file:
Z	test/tsan/mop1.c	/^volatile long X, Y, Z;$/;"	v
ZERO	lib/builtins/hexagon/dfaddsub.S	/^		ZERO = #0$/;"	d
ZERO	lib/builtins/hexagon/dfaddsub.S	/^#define ZERO r15:14$/;"	d
ZERO	lib/builtins/hexagon/dffma.S	/^		ZERO = #0$/;"	d
ZERO	lib/builtins/hexagon/dffma.S	/^#define ZERO r15:14$/;"	d
ZERO	lib/builtins/hexagon/dfsqrt.S	/^		ZERO = #0$/;"	d
ZERO	lib/builtins/hexagon/dfsqrt.S	/^#define ZERO r11:10$/;"	d
ZTMP	lib/builtins/hexagon/dfaddsub.S	/^		ZTMP = combine(#54,##2045)$/;"	d
ZTMP	lib/builtins/hexagon/dfaddsub.S	/^		ZTMP = combine(#62,#1)$/;"	d
ZTMP	lib/builtins/hexagon/dfaddsub.S	/^#define ZTMP r7:6$/;"	d
ZTMPH	lib/builtins/hexagon/dfaddsub.S	/^#define ZTMPH r7$/;"	d
ZTMPL	lib/builtins/hexagon/dfaddsub.S	/^#define ZTMPL r6$/;"	d
ZX_TIME_INFINITE_OLD	lib/fuzzer/FuzzerUtilFuchsia.cpp	53;"	d	file:
ZX_TIME_INFINITE_OLD	lib/sanitizer_common/sanitizer_fuchsia.cc	33;"	d	file:
ZZ	test/cfi/bad-split.cpp	/^struct ZZ : public virtual Z {$/;"	s	file:
ZZZ	test/asan/TestCases/Linux/odr_c_test.c	/^__attribute__((aligned(1))) char ZZZ[100];$/;"	v
ZZZ	test/asan/TestCases/Linux/odr_c_test.c	/^int ZZZ = 1;$/;"	v
ZZZ	test/asan/TestCases/global-demangle.cc	/^  static char ZZZ[];$/;"	m	class:XXX::YYY	file:
ZZZ	test/asan/TestCases/global-demangle.cc	/^char YYY::ZZZ[] = "abc";$/;"	m	class:XXX::YYY	file:
ZZZ	test/asan/TestCases/stack-frame-demangle.cc	/^  static int ZZZ(int x) {$/;"	f	struct:XXX::YYY
ZZZ	test/tsan/global_race3.cc	/^    static int ZZZ[10];$/;"	m	struct:XXX::YYY	file:
ZZZ	test/tsan/global_race3.cc	/^  int YYY::ZZZ[10];$/;"	m	class:XXX::YYY	file:
Zero	test/fuzzer/SimpleDictionaryTest.cpp	/^static volatile int Zero = 0;$/;"	v	file:
ZeroContents	lib/scudo/scudo_allocator.cpp	/^  bool ZeroContents;$/;"	m	struct:__scudo::Allocator	file:
ZeroUnstable	lib/fuzzer/FuzzerTracePC.h	/^    ZeroUnstable = 2,$/;"	e	enum:fuzzer::TracePC::HandleUnstableOptions
_ALT_TOKEN_REPLACEMENT	lib/sanitizer_common/scripts/cpplint.py	/^_ALT_TOKEN_REPLACEMENT = {$/;"	v
_ALT_TOKEN_REPLACEMENT_PATTERN	lib/sanitizer_common/scripts/cpplint.py	/^_ALT_TOKEN_REPLACEMENT_PATTERN = re.compile($/;"	v
_BLOCK_ASM	lib/sanitizer_common/scripts/cpplint.py	/^_BLOCK_ASM = 3    # The whole block is an inline assembly block$/;"	v
_BLOCK_H_	lib/BlocksRuntime/Block.h	26;"	d
_BLOCK_PRIVATE_H_	lib/BlocksRuntime/Block_private.h	26;"	d
_BSD_SOURCE	test/msan/getloadavg.cc	3;"	d	file:
_BlockInfo	lib/sanitizer_common/scripts/cpplint.py	/^class _BlockInfo(object):$/;"	c
_Block_alloc_default	lib/BlocksRuntime/runtime.c	/^static void *_Block_alloc_default(const unsigned long size, const bool initialCountIsOne, const bool isObject) {$/;"	f	file:
_Block_allocator	lib/BlocksRuntime/runtime.c	/^static void *(*_Block_allocator)(const unsigned long, const bool isOne, const bool isObject) = _Block_alloc_default;$/;"	v	file:
_Block_assign	lib/BlocksRuntime/runtime.c	/^static void (*_Block_assign)(void *value, void **destptr) = _Block_assign_default;$/;"	v	file:
_Block_assign_default	lib/BlocksRuntime/runtime.c	/^static void _Block_assign_default(void *value, void **destptr) {$/;"	f	file:
_Block_assign_weak	lib/BlocksRuntime/runtime.c	/^static void (*_Block_assign_weak)(const void *dest, void *ptr) = _Block_assign_weak_default;$/;"	v	file:
_Block_assign_weak_default	lib/BlocksRuntime/runtime.c	/^static void _Block_assign_weak_default(const void *ptr, void *dest) {$/;"	f	file:
_Block_byref_assign_copy	lib/BlocksRuntime/runtime.c	/^static void _Block_byref_assign_copy(void *dest, const void *arg, const int flags) {$/;"	f	file:
_Block_byref_dump	lib/BlocksRuntime/runtime.c	/^const char *_Block_byref_dump(struct Block_byref *src) {$/;"	f
_Block_byref_release	lib/BlocksRuntime/runtime.c	/^static void _Block_byref_release(const void *arg) {$/;"	f	file:
_Block_copy	lib/BlocksRuntime/runtime.c	/^void *_Block_copy(const void *arg) {$/;"	f
_Block_copy_class	lib/BlocksRuntime/runtime.c	/^static void *_Block_copy_class = _NSConcreteMallocBlock;$/;"	v	file:
_Block_copy_collectable	lib/BlocksRuntime/runtime.c	/^void *_Block_copy_collectable(const void *aBlock) {$/;"	f
_Block_copy_error	lib/BlocksRuntime/data.c	/^void _Block_copy_error(void) {$/;"	f
_Block_copy_finalizing_class	lib/BlocksRuntime/runtime.c	/^static void *_Block_copy_finalizing_class = _NSConcreteMallocBlock;$/;"	v	file:
_Block_copy_flag	lib/BlocksRuntime/runtime.c	/^static int _Block_copy_flag = BLOCK_NEEDS_FREE;$/;"	v	file:
_Block_copy_internal	lib/BlocksRuntime/runtime.c	/^static void *_Block_copy_internal(const void *arg, const int flags) {$/;"	f	file:
_Block_deallocator	lib/BlocksRuntime/runtime.c	/^static void (*_Block_deallocator)(const void *) = (void (*)(const void *))free;$/;"	v	file:
_Block_destroy	lib/BlocksRuntime/runtime.c	/^static void _Block_destroy(const void *arg) {$/;"	f	file:
_Block_do_nothing	lib/BlocksRuntime/runtime.c	/^static void _Block_do_nothing(const void *aBlock) { }$/;"	f	file:
_Block_dump	lib/BlocksRuntime/runtime.c	/^const char *_Block_dump(const void *block) {$/;"	f
_Block_memmove	lib/BlocksRuntime/runtime.c	/^static void (*_Block_memmove)(void *dest, void *src, unsigned long size) = _Block_memmove_default;$/;"	v	file:
_Block_memmove_default	lib/BlocksRuntime/runtime.c	/^static void _Block_memmove_default(void *dst, void *src, unsigned long size) {$/;"	f	file:
_Block_memmove_gc_broken	lib/BlocksRuntime/runtime.c	/^static void _Block_memmove_gc_broken(void *dest, void *src, unsigned long size) {$/;"	f	file:
_Block_object_assign	lib/BlocksRuntime/runtime.c	/^void _Block_object_assign(void *destAddr, const void *object, const int flags) {$/;"	f
_Block_object_assign	test/BlocksRuntime/objectRRGC.c	/^void _Block_object_assign(void *destAddr, const void *object, const int isWeak) {$/;"	f
_Block_object_assign	test/BlocksRuntime/objectassign.c	/^void _Block_object_assign(void *destAddr, const void *object, const int isWeak) {$/;"	f
_Block_object_dispose	lib/BlocksRuntime/runtime.c	/^void _Block_object_dispose(const void *object, const int flags) {$/;"	f
_Block_object_dispose	test/BlocksRuntime/objectRRGC.c	/^void _Block_object_dispose(const void *object, const int isWeak) {$/;"	f
_Block_object_dispose	test/BlocksRuntime/objectassign.c	/^void _Block_object_dispose(const void *object, const int isWeak) {$/;"	f
_Block_release	lib/BlocksRuntime/runtime.c	/^void _Block_release(void *arg) {$/;"	f
_Block_release_object	lib/BlocksRuntime/runtime.c	/^static void (*_Block_release_object)(const void *ptr) = _Block_release_object_default;$/;"	v	file:
_Block_release_object_default	lib/BlocksRuntime/runtime.c	/^static void _Block_release_object_default(const void *ptr) {$/;"	f	file:
_Block_retain_object	lib/BlocksRuntime/runtime.c	/^static void (*_Block_retain_object)(const void *ptr) = _Block_retain_object_default;$/;"	v	file:
_Block_retain_object_default	lib/BlocksRuntime/runtime.c	/^static void _Block_retain_object_default(const void *ptr) {$/;"	f	file:
_Block_setHasRefcount	lib/BlocksRuntime/runtime.c	/^static void (*_Block_setHasRefcount)(const void *ptr, const bool hasRefcount) = _Block_setHasRefcount_default;$/;"	v	file:
_Block_setHasRefcount_default	lib/BlocksRuntime/runtime.c	/^static void _Block_setHasRefcount_default(const void *ptr, const bool hasRefcount) {$/;"	f	file:
_Block_use_GC	lib/BlocksRuntime/runtime.c	/^void _Block_use_GC( void *(*alloc)(const unsigned long, const bool isOne, const bool isObject),$/;"	f
_Block_use_GC5	lib/BlocksRuntime/runtime.c	/^void _Block_use_GC5( void *(*alloc)(const unsigned long, const bool isOne, const bool isObject),$/;"	f
_Block_use_RR	lib/BlocksRuntime/runtime.c	/^void _Block_use_RR( void (*retain)(const void *),$/;"	f
_Byref_flag_initial_value	lib/BlocksRuntime/runtime.c	/^static int _Byref_flag_initial_value = BLOCK_NEEDS_FREE | 2;$/;"	v	file:
_CHECK_MACROS	lib/sanitizer_common/scripts/cpplint.py	/^_CHECK_MACROS = [$/;"	v
_CHECK_REPLACEMENT	lib/sanitizer_common/scripts/cpplint.py	/^_CHECK_REPLACEMENT = dict([(m, {}) for m in _CHECK_MACROS])$/;"	v
_CPP_HEADERS	lib/sanitizer_common/scripts/cpplint.py	/^_CPP_HEADERS = frozenset([$/;"	v
_CPP_SECTION	lib/sanitizer_common/scripts/cpplint.py	/^  _CPP_SECTION = 3$/;"	v	class:_IncludeState
_CPP_SYS_HEADER	lib/sanitizer_common/scripts/cpplint.py	/^_CPP_SYS_HEADER = 2$/;"	v
_CRT_SECURE_NO_WARNINGS	lib/BlocksRuntime/runtime.c	48;"	d	file:
_C_SECTION	lib/sanitizer_common/scripts/cpplint.py	/^  _C_SECTION = 2$/;"	v	class:_IncludeState
_C_SYS_HEADER	lib/sanitizer_common/scripts/cpplint.py	/^_C_SYS_HEADER = 1$/;"	v
_ClassInfo	lib/sanitizer_common/scripts/cpplint.py	/^class _ClassInfo(_BlockInfo):$/;"	c
_ClassifyInclude	lib/sanitizer_common/scripts/cpplint.py	/^def _ClassifyInclude(fileinfo, include, is_system):$/;"	f
_CollapseStrings	lib/sanitizer_common/scripts/cpplint.py	/^  def _CollapseStrings(elided):$/;"	m	class:CleansedLines
_CppLintState	lib/sanitizer_common/scripts/cpplint.py	/^class _CppLintState(object):$/;"	c
_CrtDbgReport	lib/asan/asan_malloc_win.cc	/^int _CrtDbgReport(int, const char*, int,$/;"	f
_CrtDbgReportW	lib/asan/asan_malloc_win.cc	/^int _CrtDbgReportW(int reportType, const wchar_t*, int,$/;"	f
_CrtSetReportMode	lib/asan/asan_malloc_win.cc	/^int _CrtSetReportMode(int, int) {$/;"	f
_DARWIN_USE_64_BIT_INODE	lib/sanitizer_common/sanitizer_mac.cc	21;"	d	file:
_DEFAULT_FILTERS	lib/sanitizer_common/scripts/cpplint.py	/^_DEFAULT_FILTERS = ['-build\/include_alpha']$/;"	v
_DYNAMIC	lib/asan/asan_linux.cc	/^extern "C" void* _DYNAMIC;$/;"	v
_DropCommonSuffixes	lib/sanitizer_common/scripts/cpplint.py	/^def _DropCommonSuffixes(filename):$/;"	f
_END_ASM	lib/sanitizer_common/scripts/cpplint.py	/^_END_ASM = 2      # Last line of inline assembly block$/;"	v
_ERROR_CATEGORIES	lib/sanitizer_common/scripts/cpplint.py	/^_ERROR_CATEGORIES = [$/;"	v
_FILE_OFFSET_BITS	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	24;"	d	file:
_Filters	lib/sanitizer_common/scripts/cpplint.py	/^def _Filters():$/;"	f
_FunctionState	lib/sanitizer_common/scripts/cpplint.py	/^class _FunctionState(object):$/;"	c
_GET_LINK_MAP_BY_DLOPEN_HANDLE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	23;"	d
_GET_LINK_MAP_BY_DLOPEN_HANDLE	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	23;"	d
_GNU_SOURCE	lib/sanitizer_common/sanitizer_unwind_linux_libcdep.cc	25;"	d	file:
_GNU_SOURCE	test/asan/TestCases/Linux/stress_dtls.c	43;"	d	file:
_GNU_SOURCE	test/asan/TestCases/Posix/asprintf.cc	5;"	d	file:
_GNU_SOURCE	test/asan/TestCases/strcasestr-1.c	11;"	d	file:
_GNU_SOURCE	test/asan/TestCases/strcasestr-2.c	11;"	d	file:
_GNU_SOURCE	test/asan/TestCases/strcasestr_strict.c	9;"	d	file:
_GNU_SOURCE	test/sanitizer_common/TestCases/strcasestr.c	6;"	d	file:
_GetTextInside	lib/sanitizer_common/scripts/cpplint.py	/^def _GetTextInside(text, start_pattern):$/;"	f
_HEADERS_CONTAINING_TEMPLATES	lib/sanitizer_common/scripts/cpplint.py	/^_HEADERS_CONTAINING_TEMPLATES = ($/;"	v
_INITIAL_SECTION	lib/sanitizer_common/scripts/cpplint.py	/^  _INITIAL_SECTION = 0$/;"	v	class:_IncludeState
_INSIDE_ASM	lib/sanitizer_common/scripts/cpplint.py	/^_INSIDE_ASM = 1   # Inside inline assembly block$/;"	v
_IO_backup_base	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    char *_IO_backup_base;$/;"	m	struct:__sanitizer::__sanitizer_FILE
_IO_buf_base	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    char *_IO_buf_base;$/;"	m	struct:__sanitizer::__sanitizer_FILE
_IO_buf_end	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    char *_IO_buf_end;$/;"	m	struct:__sanitizer::__sanitizer_FILE
_IO_read_base	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    char *_IO_read_base;$/;"	m	struct:__sanitizer::__sanitizer_FILE
_IO_read_end	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    char *_IO_read_end;$/;"	m	struct:__sanitizer::__sanitizer_FILE
_IO_read_ptr	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    char *_IO_read_ptr;$/;"	m	struct:__sanitizer::__sanitizer_FILE
_IO_save_base	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    char *_IO_save_base;$/;"	m	struct:__sanitizer::__sanitizer_FILE
_IO_save_end	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    char *_IO_save_end;$/;"	m	struct:__sanitizer::__sanitizer_FILE
_IO_write_base	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    char *_IO_write_base;$/;"	m	struct:__sanitizer::__sanitizer_FILE
_IO_write_end	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    char *_IO_write_end;$/;"	m	struct:__sanitizer::__sanitizer_FILE
_IO_write_ptr	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    char *_IO_write_ptr;$/;"	m	struct:__sanitizer::__sanitizer_FILE
_IncludeError	lib/sanitizer_common/scripts/cpplint.py	/^class _IncludeError(Exception):$/;"	c
_IncludeState	lib/sanitizer_common/scripts/cpplint.py	/^class _IncludeState(dict):$/;"	c
_IsTestFilename	lib/sanitizer_common/scripts/cpplint.py	/^def _IsTestFilename(filename):$/;"	f
_KERNEL	lib/msan/tests/msan_test.cc	25;"	d	file:
_KERNEL	lib/msan/tests/msan_test.cc	27;"	d	file:
_KERNEL	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	106;"	d	file:
_KERNEL	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	108;"	d	file:
_LARGEFILE64_SOURCE	test/sanitizer_common/TestCases/Linux/mmap64_test.c	3;"	d	file:
_LIBCPP_HAS_NO_ASAN	lib/fuzzer/tests/FuzzerUnittest.cpp	6;"	d	file:
_LIKELY_MY_HEADER	lib/sanitizer_common/scripts/cpplint.py	/^_LIKELY_MY_HEADER = 3$/;"	v
_MATCH_ASM	lib/sanitizer_common/scripts/cpplint.py	/^_MATCH_ASM = re.compile(r'^\\s*(?:asm|_asm|__asm|__asm__)'$/;"	v
_MM_MALLOC_H_INCLUDED	lib/tsan/rtl/tsan_rtl.cc	34;"	d	file:
_MY_H_SECTION	lib/sanitizer_common/scripts/cpplint.py	/^  _MY_H_SECTION = 1$/;"	v	class:_IncludeState
_NORMAL_TRIGGER	lib/sanitizer_common/scripts/cpplint.py	/^  _NORMAL_TRIGGER = 250  # for --v=0, 500 for --v=1, etc.$/;"	v	class:_FunctionState
_NO_ASM	lib/sanitizer_common/scripts/cpplint.py	/^_NO_ASM = 0       # Outside of inline assembly block$/;"	v
_NSConcreteAutoBlock	lib/BlocksRuntime/Block_private.h	/^BLOCK_EXPORT void * _NSConcreteAutoBlock[32];$/;"	v
_NSConcreteAutoBlock	lib/BlocksRuntime/data.c	/^void * _NSConcreteAutoBlock[32] = { 0 };$/;"	v
_NSConcreteFinalizingBlock	lib/BlocksRuntime/Block_private.h	/^BLOCK_EXPORT void * _NSConcreteFinalizingBlock[32];$/;"	v
_NSConcreteFinalizingBlock	lib/BlocksRuntime/data.c	/^void * _NSConcreteFinalizingBlock[32] = { 0 };$/;"	v
_NSConcreteGlobalBlock	lib/BlocksRuntime/Block_private.h	/^BLOCK_EXPORT void * _NSConcreteGlobalBlock[32];$/;"	v
_NSConcreteGlobalBlock	lib/BlocksRuntime/data.c	/^void * _NSConcreteGlobalBlock[32] = { 0 };$/;"	v
_NSConcreteMallocBlock	lib/BlocksRuntime/Block_private.h	/^BLOCK_EXPORT void * _NSConcreteMallocBlock[32];$/;"	v
_NSConcreteMallocBlock	lib/BlocksRuntime/data.c	/^void * _NSConcreteMallocBlock[32] = { 0 };$/;"	v
_NSConcreteStackBlock	lib/BlocksRuntime/Block_private.h	/^BLOCK_EXPORT void * _NSConcreteStackBlock[32];$/;"	v
_NSConcreteStackBlock	lib/BlocksRuntime/data.c	/^void * _NSConcreteStackBlock[32] = { 0 };$/;"	v
_NSConcreteWeakBlockVariable	lib/BlocksRuntime/Block_private.h	/^BLOCK_EXPORT void * _NSConcreteWeakBlockVariable[32];$/;"	v
_NSConcreteWeakBlockVariable	lib/BlocksRuntime/data.c	/^void * _NSConcreteWeakBlockVariable[32] = { 0 };$/;"	v
_NamespaceInfo	lib/sanitizer_common/scripts/cpplint.py	/^class _NamespaceInfo(_BlockInfo):$/;"	c
_NestingState	lib/sanitizer_common/scripts/cpplint.py	/^class _NestingState(object):$/;"	c
_OTHER_HEADER	lib/sanitizer_common/scripts/cpplint.py	/^_OTHER_HEADER = 5$/;"	v
_OTHER_H_SECTION	lib/sanitizer_common/scripts/cpplint.py	/^  _OTHER_H_SECTION = 4$/;"	v	class:_IncludeState
_OutputFormat	lib/sanitizer_common/scripts/cpplint.py	/^def _OutputFormat():$/;"	f
_POSIX_C_SOURCE	test/msan/strerror_r-non-gnu.c	6;"	d	file:
_POSSIBLE_MY_HEADER	lib/sanitizer_common/scripts/cpplint.py	/^_POSSIBLE_MY_HEADER = 4$/;"	v
_PreprocessorInfo	lib/sanitizer_common/scripts/cpplint.py	/^class _PreprocessorInfo(object):$/;"	c
_REAL	lib/sanitizer_common/sanitizer_solaris.cc	44;"	d	file:
_RE_FIRST_COMPONENT	lib/sanitizer_common/scripts/cpplint.py	/^_RE_FIRST_COMPONENT = re.compile(r'^[^-_.]+')$/;"	v
_RE_PATTERN_CLEANSE_LINE_C_COMMENTS	lib/sanitizer_common/scripts/cpplint.py	/^_RE_PATTERN_CLEANSE_LINE_C_COMMENTS = re.compile($/;"	v
_RE_PATTERN_CLEANSE_LINE_DOUBLE_QUOTES	lib/sanitizer_common/scripts/cpplint.py	/^_RE_PATTERN_CLEANSE_LINE_DOUBLE_QUOTES = re.compile(r'"[^"]*"')$/;"	v
_RE_PATTERN_CLEANSE_LINE_ESCAPES	lib/sanitizer_common/scripts/cpplint.py	/^_RE_PATTERN_CLEANSE_LINE_ESCAPES = re.compile($/;"	v
_RE_PATTERN_CLEANSE_LINE_SINGLE_QUOTES	lib/sanitizer_common/scripts/cpplint.py	/^_RE_PATTERN_CLEANSE_LINE_SINGLE_QUOTES = re.compile(r"'.'")$/;"	v
_RE_PATTERN_EXPLICIT_MAKEPAIR	lib/sanitizer_common/scripts/cpplint.py	/^_RE_PATTERN_EXPLICIT_MAKEPAIR = re.compile(r'\\bmake_pair\\s*<')$/;"	v
_RE_PATTERN_INCLUDE	lib/sanitizer_common/scripts/cpplint.py	/^_RE_PATTERN_INCLUDE = re.compile(r'^\\s*#\\s*include\\s*([<"])([^>"]*)[>"].*$')$/;"	v
_RE_PATTERN_INCLUDE_NEW_STYLE	lib/sanitizer_common/scripts/cpplint.py	/^_RE_PATTERN_INCLUDE_NEW_STYLE = re.compile(r'#include +"[^\/]+\\.h"')$/;"	v
_RE_PATTERN_INVALID_INCREMENT	lib/sanitizer_common/scripts/cpplint.py	/^_RE_PATTERN_INVALID_INCREMENT = re.compile($/;"	v
_RE_PATTERN_STRING	lib/sanitizer_common/scripts/cpplint.py	/^_RE_PATTERN_STRING = re.compile(r'\\bstring\\b')$/;"	v
_RE_PATTERN_TODO	lib/sanitizer_common/scripts/cpplint.py	/^_RE_PATTERN_TODO = re.compile(r'^\/\/(\\s*)TODO(\\(.+?\\))?:?(\\s|$)?')$/;"	v
_RE_SUPPRESSION	lib/sanitizer_common/scripts/cpplint.py	/^_RE_SUPPRESSION = re.compile(r'\\bNOLINT\\b(\\([^)]*\\))?')$/;"	v
_S	test/asan/TestCases/Windows/bitfield.cc	/^typedef struct _S {$/;"	s	file:
_S	test/asan/TestCases/Windows/bitfield_uaf.cc	/^typedef struct _S {$/;"	s	file:
_SECTION_NAMES	lib/sanitizer_common/scripts/cpplint.py	/^  _SECTION_NAMES = {$/;"	v	class:_IncludeState
_STL_HEADERS	lib/sanitizer_common/scripts/cpplint.py	/^_STL_HEADERS = frozenset([$/;"	v
_SVID_SOURCE	test/asan/TestCases/Posix/halt_on_error-signals.c	9;"	d	file:
_SetCountingStyle	lib/sanitizer_common/scripts/cpplint.py	/^def _SetCountingStyle(level):$/;"	f
_SetFilters	lib/sanitizer_common/scripts/cpplint.py	/^def _SetFilters(filters):$/;"	f
_SetOutputFormat	lib/sanitizer_common/scripts/cpplint.py	/^def _SetOutputFormat(output_format):$/;"	f
_SetVerboseLevel	lib/sanitizer_common/scripts/cpplint.py	/^def _SetVerboseLevel(level):$/;"	f
_ShouldPrintError	lib/sanitizer_common/scripts/cpplint.py	/^def _ShouldPrintError(category, confidence, linenum):$/;"	f
_TEST_TRIGGER	lib/sanitizer_common/scripts/cpplint.py	/^  _TEST_TRIGGER = 400    # about 50% more than _NORMAL_TRIGGER.$/;"	v	class:_FunctionState
_TYPE_NAMES	lib/sanitizer_common/scripts/cpplint.py	/^  _TYPE_NAMES = {$/;"	v	class:_IncludeState
_URC_FAILURE	lib/builtins/unwind-ehabi-helpers.h	40;"	d
_URC_OK	lib/builtins/unwind-ehabi-helpers.h	39;"	d
_US_ACTION_MASK	lib/builtins/unwind-ehabi-helpers.h	49;"	d
_US_UNWIND_FRAME_STARTING	lib/builtins/unwind-ehabi-helpers.h	45;"	d
_Unwind_State	lib/builtins/unwind-ehabi-helpers.h	/^typedef uint32_t _Unwind_State;$/;"	t
_VerboseLevel	lib/sanitizer_common/scripts/cpplint.py	/^def _VerboseLevel():$/;"	f
_WITH_GETLINE	test/msan/getline.cc	11;"	d	file:
_WITH_GETLINE	test/tsan/getline_nohang.cc	6;"	d	file:
_XOPEN_SOURCE	test/lsan/TestCases/swapcontext.cc	13;"	d	file:
_YUGA_BIG_ENDIAN	lib/builtins/int_endianness.h	104;"	d
_YUGA_BIG_ENDIAN	lib/builtins/int_endianness.h	25;"	d
_YUGA_BIG_ENDIAN	lib/builtins/int_endianness.h	28;"	d
_YUGA_BIG_ENDIAN	lib/builtins/int_endianness.h	38;"	d
_YUGA_BIG_ENDIAN	lib/builtins/int_endianness.h	41;"	d
_YUGA_BIG_ENDIAN	lib/builtins/int_endianness.h	56;"	d
_YUGA_BIG_ENDIAN	lib/builtins/int_endianness.h	59;"	d
_YUGA_BIG_ENDIAN	lib/builtins/int_endianness.h	69;"	d
_YUGA_BIG_ENDIAN	lib/builtins/int_endianness.h	72;"	d
_YUGA_BIG_ENDIAN	lib/builtins/int_endianness.h	86;"	d
_YUGA_BIG_ENDIAN	lib/builtins/int_endianness.h	93;"	d
_YUGA_BIG_ENDIAN	test/builtins/Unit/endianness.h	29;"	d
_YUGA_BIG_ENDIAN	test/builtins/Unit/endianness.h	32;"	d
_YUGA_BIG_ENDIAN	test/builtins/Unit/endianness.h	44;"	d
_YUGA_BIG_ENDIAN	test/builtins/Unit/endianness.h	47;"	d
_YUGA_BIG_ENDIAN	test/builtins/Unit/endianness.h	59;"	d
_YUGA_BIG_ENDIAN	test/builtins/Unit/endianness.h	62;"	d
_YUGA_BIG_ENDIAN	test/builtins/Unit/endianness.h	75;"	d
_YUGA_BIG_ENDIAN	test/builtins/Unit/endianness.h	82;"	d
_YUGA_BIG_ENDIAN	test/builtins/Unit/endianness.h	95;"	d
_YUGA_BIG_ENDIAN	test/builtins/Unit/endianness.h	98;"	d
_YUGA_LITTLE_ENDIAN	lib/builtins/int_endianness.h	103;"	d
_YUGA_LITTLE_ENDIAN	lib/builtins/int_endianness.h	24;"	d
_YUGA_LITTLE_ENDIAN	lib/builtins/int_endianness.h	27;"	d
_YUGA_LITTLE_ENDIAN	lib/builtins/int_endianness.h	37;"	d
_YUGA_LITTLE_ENDIAN	lib/builtins/int_endianness.h	40;"	d
_YUGA_LITTLE_ENDIAN	lib/builtins/int_endianness.h	55;"	d
_YUGA_LITTLE_ENDIAN	lib/builtins/int_endianness.h	58;"	d
_YUGA_LITTLE_ENDIAN	lib/builtins/int_endianness.h	68;"	d
_YUGA_LITTLE_ENDIAN	lib/builtins/int_endianness.h	71;"	d
_YUGA_LITTLE_ENDIAN	lib/builtins/int_endianness.h	85;"	d
_YUGA_LITTLE_ENDIAN	lib/builtins/int_endianness.h	92;"	d
_YUGA_LITTLE_ENDIAN	test/builtins/Unit/endianness.h	28;"	d
_YUGA_LITTLE_ENDIAN	test/builtins/Unit/endianness.h	31;"	d
_YUGA_LITTLE_ENDIAN	test/builtins/Unit/endianness.h	43;"	d
_YUGA_LITTLE_ENDIAN	test/builtins/Unit/endianness.h	46;"	d
_YUGA_LITTLE_ENDIAN	test/builtins/Unit/endianness.h	58;"	d
_YUGA_LITTLE_ENDIAN	test/builtins/Unit/endianness.h	61;"	d
_YUGA_LITTLE_ENDIAN	test/builtins/Unit/endianness.h	74;"	d
_YUGA_LITTLE_ENDIAN	test/builtins/Unit/endianness.h	81;"	d
_YUGA_LITTLE_ENDIAN	test/builtins/Unit/endianness.h	94;"	d
_YUGA_LITTLE_ENDIAN	test/builtins/Unit/endianness.h	97;"	d
_Z18InitializeGuardPtrv	lib/tsan/rtl/tsan_rtl_aarch64.S	/^_Z18InitializeGuardPtrv:$/;"	l
__AP64	lib/sanitizer_common/tests/sanitizer_allocator_testlib.cc	/^struct __AP64 {$/;"	s	file:
__ARM_FEATURE_CLZ	lib/builtins/assembly.h	108;"	d
__ATOMIC_ACQUIRE	lib/builtins/emutls.c	/^enum { __ATOMIC_ACQUIRE = 2, __ATOMIC_RELEASE = 3 };$/;"	e	enum:__anon107	file:
__ATOMIC_HLE_ACQUIRE	test/tsan/atomic_hle.cc	6;"	d	file:
__ATOMIC_HLE_RELEASE	test/tsan/atomic_hle.cc	9;"	d	file:
__ATOMIC_RELEASE	lib/builtins/emutls.c	/^enum { __ATOMIC_ACQUIRE = 2, __ATOMIC_RELEASE = 3 };$/;"	e	enum:__anon107	file:
__C_specific_handler	lib/asan/asan_win_dll_thunk.cc	/^INTERCEPT_LIBRARY_FUNCTION(__C_specific_handler);$/;"	v
__DD_HEADER	test/builtins/Unit/ppc/DD.h	2;"	d
__EXTENSIONS__	test/asan/TestCases/malloc-no-intercept.c	15;"	d	file:
__GLIBC_PREREQ	lib/sanitizer_common/sanitizer_getauxval.h	26;"	d
__GLIBC_PREREQ	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	1041;"	d	file:
__GLIBC_PREREQ	lib/sanitizer_common/sanitizer_platform_limits_posix.h	36;"	d
__GLIBC_PREREQ	test/sanitizer_common/TestCases/Linux/sysconf_interceptor_bypass_test.cc	6;"	d	file:
__INT64_C	lib/sanitizer_common/sanitizer_internal_defs.h	346;"	d
__INT64_C	lib/sanitizer_common/sanitizer_internal_defs.h	349;"	d
__INT64_C	lib/sanitizer_common/sanitizer_internal_defs.h	352;"	d
__MM_MALLOC_H	lib/tsan/rtl/tsan_rtl.cc	35;"	d	file:
__NO_CTYPE	lib/interception/tests/interception_linux_test.cc	16;"	d	file:
__NR_readlink	test/asan/TestCases/Linux/read_binary_name_regtest.c	19;"	d	file:
__PTRACE_ARGS	test/asan/TestCases/Linux/ptrace.cc	93;"	d	file:
__PTRACE_FPARGS	test/asan/TestCases/Linux/ptrace.cc	109;"	d	file:
__PTRACE_FPREQUEST	test/asan/TestCases/Linux/ptrace.cc	108;"	d	file:
__PTRACE_FPREQUEST	test/asan/TestCases/Linux/ptrace.cc	31;"	d	file:
__PTRACE_FPREQUEST	test/asan/TestCases/Linux/ptrace.cc	52;"	d	file:
__PTRACE_FPREQUEST	test/asan/TestCases/Linux/ptrace.cc	61;"	d	file:
__PTRACE_REQUEST	test/asan/TestCases/Linux/ptrace.cc	92;"	d	file:
__SANITIZER_TASK_VM_INFO_COUNT	lib/sanitizer_common/sanitizer_mac.cc	889;"	d	file:
__TSAN_HAS_INT128	include/sanitizer/tsan_interface_atomic.h	28;"	d
__TSAN_HAS_INT128	include/sanitizer/tsan_interface_atomic.h	30;"	d
__TSAN_HAS_INT128	lib/tsan/rtl/tsan_interface.h	197;"	d
__TSAN_HAS_INT128	lib/tsan/rtl/tsan_interface.h	199;"	d
__UINT64_C	lib/sanitizer_common/sanitizer_internal_defs.h	347;"	d
__UINT64_C	lib/sanitizer_common/sanitizer_internal_defs.h	350;"	d
__UINT64_C	lib/sanitizer_common/sanitizer_internal_defs.h	353;"	d
___unused	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned long ___unused[4];$/;"	m	struct:__sanitizer::__sanitizer___sysctl_args
__absvdi2	lib/builtins/absvdi2.c	/^__absvdi2(di_int a)$/;"	f
__absvsi2	lib/builtins/absvsi2.c	/^__absvsi2(si_int a)$/;"	f
__absvti2	lib/builtins/absvti2.c	/^__absvti2(ti_int a)$/;"	f
__adddf3	lib/builtins/adddf3.c	/^AEABI_RTABI double __aeabi_dadd(double a, double b) COMPILER_RT_ALIAS(__adddf3);$/;"	v
__adddf3	lib/builtins/adddf3.c	/^COMPILER_RT_ABI double __adddf3(double a, double b){$/;"	f
__addsf3	lib/builtins/addsf3.c	/^AEABI_RTABI float __aeabi_fadd(float a, float b) COMPILER_RT_ALIAS(__addsf3);$/;"	v
__addsf3	lib/builtins/addsf3.c	/^COMPILER_RT_ABI float __addsf3(float a, float b) {$/;"	f
__addtf3	lib/builtins/addtf3.c	/^COMPILER_RT_ABI long double __addtf3(long double a, long double b){$/;"	f
__addvdi3	lib/builtins/addvdi3.c	/^__addvdi3(di_int a, di_int b)$/;"	f
__addvsi3	lib/builtins/addvsi3.c	/^__addvsi3(si_int a, si_int b)$/;"	f
__addvti3	lib/builtins/addvti3.c	/^__addvti3(ti_int a, ti_int b)$/;"	f
__aeabi_cdcmpeq_check_nan	lib/builtins/arm/aeabi_cdcmpeq_check_nan.c	/^int __aeabi_cdcmpeq_check_nan(double a, double b) {$/;"	f
__aeabi_cfcmpeq_check_nan	lib/builtins/arm/aeabi_cfcmpeq_check_nan.c	/^int __aeabi_cfcmpeq_check_nan(float a, float b) {$/;"	f
__aeabi_d2f	lib/builtins/truncdfsf2.c	/^AEABI_RTABI float __aeabi_d2f(double a) {$/;"	f
__aeabi_d2h	lib/builtins/truncdfhf2.c	/^AEABI_RTABI uint16_t __aeabi_d2h(double a) {$/;"	f
__aeabi_d2iz	lib/builtins/fixdfsi.c	/^AEABI_RTABI si_int __aeabi_d2iz(fp_t a) {$/;"	f
__aeabi_d2lz	lib/builtins/fixdfdi.c	/^AEABI_RTABI di_int __aeabi_d2lz(fp_t a) {$/;"	f
__aeabi_d2uiz	lib/builtins/fixunsdfsi.c	/^AEABI_RTABI su_int __aeabi_d2uiz(fp_t a) {$/;"	f
__aeabi_d2ulz	lib/builtins/fixunsdfdi.c	/^AEABI_RTABI du_int __aeabi_d2ulz(fp_t a) {$/;"	f
__aeabi_dadd	lib/builtins/adddf3.c	/^AEABI_RTABI double __aeabi_dadd(double a, double b) {$/;"	f
__aeabi_dcmpun	lib/builtins/comparedf2.c	/^AEABI_RTABI int __aeabi_dcmpun(fp_t a, fp_t b) {$/;"	f
__aeabi_ddiv	lib/builtins/divdf3.c	/^AEABI_RTABI fp_t __aeabi_ddiv(fp_t a, fp_t b) {$/;"	f
__aeabi_dmul	lib/builtins/muldf3.c	/^AEABI_RTABI fp_t __aeabi_dmul(fp_t a, fp_t b) {$/;"	f
__aeabi_dneg	lib/builtins/negdf2.c	/^AEABI_RTABI fp_t __aeabi_dneg(fp_t a) {$/;"	f
__aeabi_drsub	lib/builtins/arm/aeabi_drsub.c	/^__aeabi_drsub(fp_t a, fp_t b) {$/;"	f
__aeabi_dsub	lib/builtins/subdf3.c	/^AEABI_RTABI fp_t __aeabi_dsub(fp_t a, fp_t b) {$/;"	f
__aeabi_f2d	lib/builtins/extendsfdf2.c	/^AEABI_RTABI double __aeabi_f2d(float a) {$/;"	f
__aeabi_f2h	lib/builtins/truncsfhf2.c	/^AEABI_RTABI uint16_t __aeabi_f2h(float a) {$/;"	f
__aeabi_f2iz	lib/builtins/fixsfsi.c	/^AEABI_RTABI si_int __aeabi_f2iz(fp_t a) {$/;"	f
__aeabi_f2lz	lib/builtins/fixsfdi.c	/^AEABI_RTABI di_int __aeabi_f2lz(fp_t a) {$/;"	f
__aeabi_f2uiz	lib/builtins/fixunssfsi.c	/^AEABI_RTABI su_int __aeabi_f2uiz(fp_t a) {$/;"	f
__aeabi_f2ulz	lib/builtins/fixunssfdi.c	/^AEABI_RTABI du_int __aeabi_f2ulz(fp_t a) {$/;"	f
__aeabi_fadd	lib/builtins/addsf3.c	/^AEABI_RTABI float __aeabi_fadd(float a, float b) {$/;"	f
__aeabi_fcmpun	lib/builtins/comparesf2.c	/^AEABI_RTABI int __aeabi_fcmpun(fp_t a, fp_t b) {$/;"	f
__aeabi_fdiv	lib/builtins/divsf3.c	/^AEABI_RTABI fp_t __aeabi_fdiv(fp_t a, fp_t b) {$/;"	f
__aeabi_fmul	lib/builtins/mulsf3.c	/^AEABI_RTABI fp_t __aeabi_fmul(fp_t a, fp_t b) {$/;"	f
__aeabi_fneg	lib/builtins/negsf2.c	/^AEABI_RTABI fp_t __aeabi_fneg(fp_t a) {$/;"	f
__aeabi_frsub	lib/builtins/arm/aeabi_frsub.c	/^__aeabi_frsub(fp_t a, fp_t b) {$/;"	f
__aeabi_fsub	lib/builtins/subsf3.c	/^AEABI_RTABI fp_t __aeabi_fsub(fp_t a, fp_t b) {$/;"	f
__aeabi_h2f	lib/builtins/extendhfsf2.c	/^AEABI_RTABI float __aeabi_h2f(uint16_t a) {$/;"	f
__aeabi_i2d	lib/builtins/floatsidf.c	/^AEABI_RTABI fp_t __aeabi_i2d(int a) {$/;"	f
__aeabi_i2f	lib/builtins/floatsisf.c	/^AEABI_RTABI fp_t __aeabi_i2f(int a) {$/;"	f
__aeabi_idiv0	lib/builtins/arm/aeabi_div0.c	/^__aeabi_idiv0(int return_value) {$/;"	f
__aeabi_idivmod	lib/builtins/arm/aeabi_idivmod.S	/^#define __aeabi_idivmod __rt_sdiv$/;"	d
__aeabi_l2d	lib/builtins/floatdidf.c	/^AEABI_RTABI double __aeabi_l2d(di_int a) {$/;"	f
__aeabi_l2f	lib/builtins/floatdisf.c	/^AEABI_RTABI float __aeabi_l2f(di_int a) {$/;"	f
__aeabi_lcmp	lib/builtins/cmpdi2.c	/^__aeabi_lcmp(di_int a, di_int b)$/;"	f
__aeabi_ldiv0	lib/builtins/arm/aeabi_div0.c	/^__aeabi_ldiv0(long long return_value) {$/;"	f
__aeabi_ldivmod	lib/builtins/arm/aeabi_ldivmod.S	/^#define __aeabi_ldivmod __rt_sdiv64$/;"	d
__aeabi_ui2d	lib/builtins/floatunsidf.c	/^AEABI_RTABI fp_t __aeabi_ui2d(unsigned int a) {$/;"	f
__aeabi_ui2f	lib/builtins/floatunsisf.c	/^AEABI_RTABI fp_t __aeabi_ui2f(unsigned int a) {$/;"	f
__aeabi_uidivmod	lib/builtins/arm/aeabi_uidivmod.S	/^#define __aeabi_uidivmod __rt_udiv$/;"	d
__aeabi_ul2d	lib/builtins/floatundidf.c	/^AEABI_RTABI double __aeabi_ul2d(du_int a) {$/;"	f
__aeabi_ul2f	lib/builtins/floatundisf.c	/^AEABI_RTABI float __aeabi_ul2f(du_int a) {$/;"	f
__aeabi_ulcmp	lib/builtins/ucmpdi2.c	/^__aeabi_ulcmp(di_int a, di_int b)$/;"	f
__aeabi_uldivmod	lib/builtins/arm/aeabi_uldivmod.S	/^#define __aeabi_uldivmod __rt_udiv64$/;"	d
__afl_manual_init	test/fuzzer/AFLDriverTest.cpp	/^extern "C" void __afl_manual_init() {}$/;"	f
__afl_persistent_loop	test/fuzzer/AFLDriverTest.cpp	/^extern "C" int __afl_persistent_loop(unsigned int N) {$/;"	f
__asan	lib/asan/asan_activation.cc	/^namespace __asan {$/;"	n	file:
__asan	lib/asan/asan_activation.h	/^namespace __asan {$/;"	n
__asan	lib/asan/asan_allocator.cc	/^namespace __asan {$/;"	n	file:
__asan	lib/asan/asan_allocator.h	/^namespace __asan {$/;"	n
__asan	lib/asan/asan_descriptions.cc	/^namespace __asan {$/;"	n	file:
__asan	lib/asan/asan_descriptions.h	/^namespace __asan {$/;"	n
__asan	lib/asan/asan_errors.cc	/^namespace __asan {$/;"	n	file:
__asan	lib/asan/asan_errors.h	/^namespace __asan {$/;"	n
__asan	lib/asan/asan_fake_stack.cc	/^namespace __asan {$/;"	n	file:
__asan	lib/asan/asan_fake_stack.h	/^namespace __asan {$/;"	n
__asan	lib/asan/asan_flags.cc	/^namespace __asan {$/;"	n	file:
__asan	lib/asan/asan_flags.h	/^namespace __asan {$/;"	n
__asan	lib/asan/asan_fuchsia.cc	/^namespace __asan {$/;"	n	file:
__asan	lib/asan/asan_globals.cc	/^namespace __asan {$/;"	n	file:
__asan	lib/asan/asan_globals_win.cc	/^namespace __asan {$/;"	n	file:
__asan	lib/asan/asan_interceptors.cc	/^namespace __asan {$/;"	n	file:
__asan	lib/asan/asan_interceptors.h	/^namespace __asan {$/;"	n
__asan	lib/asan/asan_interceptors_memintrinsics.h	/^namespace __asan {$/;"	n
__asan	lib/asan/asan_internal.h	/^namespace __asan {$/;"	n
__asan	lib/asan/asan_linux.cc	/^namespace __asan {$/;"	n	file:
__asan	lib/asan/asan_mac.cc	/^namespace __asan {$/;"	n	file:
__asan	lib/asan/asan_malloc_linux.cc	/^namespace __asan {$/;"	n	file:
__asan	lib/asan/asan_malloc_win.cc	/^namespace __asan {$/;"	n	file:
__asan	lib/asan/asan_mapping.h	/^namespace __asan {$/;"	n
__asan	lib/asan/asan_mapping_myriad.h	/^namespace __asan {$/;"	n
__asan	lib/asan/asan_memory_profile.cc	/^namespace __asan {$/;"	n	file:
__asan	lib/asan/asan_poisoning.cc	/^namespace __asan {$/;"	n	file:
__asan	lib/asan/asan_poisoning.h	/^namespace __asan {$/;"	n
__asan	lib/asan/asan_posix.cc	/^namespace __asan {$/;"	n	file:
__asan	lib/asan/asan_premap_shadow.cc	/^namespace __asan {$/;"	n	file:
__asan	lib/asan/asan_premap_shadow.h	/^namespace __asan {$/;"	n
__asan	lib/asan/asan_report.cc	/^namespace __asan {$/;"	n	file:
__asan	lib/asan/asan_report.h	/^namespace __asan {$/;"	n
__asan	lib/asan/asan_rtems.cc	/^namespace __asan {$/;"	n	file:
__asan	lib/asan/asan_rtl.cc	/^namespace __asan {$/;"	n	file:
__asan	lib/asan/asan_scariness_score.h	/^namespace __asan {$/;"	n
__asan	lib/asan/asan_shadow_setup.cc	/^namespace __asan {$/;"	n	file:
__asan	lib/asan/asan_stack.cc	/^namespace __asan {$/;"	n	file:
__asan	lib/asan/asan_stack.h	/^namespace __asan {$/;"	n
__asan	lib/asan/asan_stats.cc	/^namespace __asan {$/;"	n	file:
__asan	lib/asan/asan_stats.h	/^namespace __asan {$/;"	n
__asan	lib/asan/asan_suppressions.cc	/^namespace __asan {$/;"	n	file:
__asan	lib/asan/asan_suppressions.h	/^namespace __asan {$/;"	n
__asan	lib/asan/asan_thread.cc	/^namespace __asan {$/;"	n	file:
__asan	lib/asan/asan_thread.h	/^namespace __asan {$/;"	n
__asan	lib/asan/asan_win.cc	/^namespace __asan {$/;"	n	file:
__asan	lib/asan/tests/asan_fake_stack_test.cc	/^namespace __asan {$/;"	n	file:
__asan	lib/sanitizer_common/sanitizer_internal_defs.h	/^namespace __asan  { using namespace __sanitizer; }  \/\/ NOLINT$/;"	n
__asan_addr_is_in_fake_stack	lib/asan/asan_fake_stack.cc	/^void *__asan_addr_is_in_fake_stack(void *fake_stack, void *addr, void **beg,$/;"	f
__asan_address_is_poisoned	lib/asan/asan_poisoning.cc	/^int __asan_address_is_poisoned(void const volatile *addr) {$/;"	f
__asan_after_dynamic_init	lib/asan/asan_globals.cc	/^void __asan_after_dynamic_init() {$/;"	f
__asan_alloca_poison	lib/asan/asan_fake_stack.cc	/^void __asan_alloca_poison(uptr addr, uptr size) {$/;"	f
__asan_allocas_unpoison	lib/asan/asan_fake_stack.cc	/^void __asan_allocas_unpoison(uptr top, uptr bottom) {$/;"	f
__asan_before_dynamic_init	lib/asan/asan_globals.cc	/^void __asan_before_dynamic_init(const char *module_name) {$/;"	f
__asan_default_options	lib/asan/tests/asan_test_main.cc	/^extern "C" const char* __asan_default_options() {$/;"	f
__asan_default_options	test/asan/TestCases/default_options.cc	/^const char *__asan_default_options() {$/;"	f
__asan_default_suppressions	test/asan/TestCases/Linux/asan_default_suppressions.cc	/^  const char *__asan_default_suppressions() { return "FooBar"; }$/;"	f
__asan_describe_address	lib/asan/asan_report.cc	/^void __asan_describe_address(uptr addr) {$/;"	f
__asan_dso_reg_hook	lib/asan/asan_globals_win.cc	/^void (*const __asan_dso_reg_hook)() = &register_dso_globals;$/;"	m	namespace:__asan	file:
__asan_dso_unreg_hook	lib/asan/asan_globals_win.cc	/^void (*const __asan_dso_unreg_hook)() = &unregister_dso_globals;$/;"	m	namespace:__asan	file:
__asan_exp_loadN	lib/asan/asan_rtl.cc	/^void __asan_exp_loadN(uptr addr, uptr size, u32 exp) {$/;"	f	namespace:__asan
__asan_exp_storeN	lib/asan/asan_rtl.cc	/^void __asan_exp_storeN(uptr addr, uptr size, u32 exp) {$/;"	f	namespace:__asan
__asan_get_alloc_stack	lib/asan/asan_debugging.cc	/^uptr __asan_get_alloc_stack(uptr addr, uptr *trace, uptr size, u32 *thread_id) {$/;"	f
__asan_get_current_fake_stack	lib/asan/asan_fake_stack.cc	/^void *__asan_get_current_fake_stack() { return GetFakeStackFast(); }$/;"	f
__asan_get_free_stack	lib/asan/asan_debugging.cc	/^uptr __asan_get_free_stack(uptr addr, uptr *trace, uptr size, u32 *thread_id) {$/;"	f
__asan_get_report_access_size	lib/asan/asan_report.cc	/^uptr __asan_get_report_access_size() {$/;"	f
__asan_get_report_access_type	lib/asan/asan_report.cc	/^int __asan_get_report_access_type() {$/;"	f
__asan_get_report_address	lib/asan/asan_report.cc	/^uptr __asan_get_report_address() {$/;"	f
__asan_get_report_bp	lib/asan/asan_report.cc	/^uptr __asan_get_report_bp() {$/;"	f
__asan_get_report_description	lib/asan/asan_report.cc	/^const char *__asan_get_report_description() {$/;"	f
__asan_get_report_pc	lib/asan/asan_report.cc	/^uptr __asan_get_report_pc() {$/;"	f
__asan_get_report_sp	lib/asan/asan_report.cc	/^uptr __asan_get_report_sp() {$/;"	f
__asan_get_shadow_mapping	lib/asan/asan_debugging.cc	/^void __asan_get_shadow_mapping(uptr *shadow_scale, uptr *shadow_offset) {$/;"	f
__asan_get_shadow_memory_dynamic_address	lib/asan/asan_win.cc	/^uptr __asan_get_shadow_memory_dynamic_address() {$/;"	f
__asan_global	lib/asan/asan_interface_internal.h	/^  struct __asan_global {$/;"	s
__asan_global_source_location	lib/asan/asan_interface_internal.h	/^  struct __asan_global_source_location {$/;"	s
__asan_globals_end	lib/asan/asan_globals_win.cc	/^    ALIGNED(sizeof(__asan_global)) __asan_global __asan_globals_end = {};$/;"	m	namespace:__asan	file:
__asan_globals_start	lib/asan/asan_globals_win.cc	/^    ALIGNED(sizeof(__asan_global)) __asan_global __asan_globals_start = {};$/;"	m	namespace:__asan	file:
__asan_handle_no_return	lib/asan/asan_rtl.cc	/^void NOINLINE __asan_handle_no_return() {$/;"	f
__asan_init	lib/asan/asan_rtl.cc	/^void __asan_init() {$/;"	f
__asan_initialize_cloned_variables	lib/asan/asan_win_dynamic_runtime_thunk.cc	/^__declspec(allocate(".CRT$XIB")) int (*__asan_initialize_cloned_variables)() =$/;"	v
__asan_loadN	lib/asan/asan_rtl.cc	/^void __asan_loadN(uptr addr, uptr size) {$/;"	f	namespace:__asan
__asan_loadN_noabort	lib/asan/asan_rtl.cc	/^void __asan_loadN_noabort(uptr addr, uptr size) {$/;"	f	namespace:__asan
__asan_load_cxx_array_cookie	lib/asan/asan_poisoning.cc	/^uptr __asan_load_cxx_array_cookie(uptr *p) {$/;"	f
__asan_locate_address	lib/asan/asan_debugging.cc	/^const char *__asan_locate_address(uptr addr, char *name, uptr name_size,$/;"	f
__asan_memcpy	lib/asan/asan_interceptors_memintrinsics.cc	/^void *__asan_memcpy(void *to, const void *from, uptr size) {$/;"	f
__asan_memmove	lib/asan/asan_interceptors_memintrinsics.cc	/^void *__asan_memmove(void *to, const void *from, uptr size) {$/;"	f
__asan_memset	lib/asan/asan_interceptors_memintrinsics.cc	/^void *__asan_memset(void *block, int c, uptr size) {$/;"	f
__asan_on_error	test/asan/TestCases/debug_double_free.cc	/^void __asan_on_error() {$/;"	f
__asan_on_error	test/asan/TestCases/debug_report.cc	/^void __asan_on_error() {$/;"	f
__asan_on_error	test/asan/TestCases/on_error_callback.cc	/^void __asan_on_error() {$/;"	f
__asan_option_detect_stack_use_after_return	lib/asan/asan_rtl.cc	/^int __asan_option_detect_stack_use_after_return;  \/\/ Global interface symbol.$/;"	v
__asan_option_detect_stack_use_after_return	lib/asan/asan_win_dll_thunk.cc	/^int __asan_option_detect_stack_use_after_return;$/;"	v
__asan_option_detect_stack_use_after_return	lib/asan/asan_win_dynamic_runtime_thunk.cc	/^int __asan_option_detect_stack_use_after_return;$/;"	v
__asan_poison_cxx_array_cookie	lib/asan/asan_poisoning.cc	/^void __asan_poison_cxx_array_cookie(uptr p) {$/;"	f
__asan_poison_intra_object_redzone	lib/asan/asan_poisoning.cc	/^void __asan_poison_intra_object_redzone(uptr ptr, uptr size) {$/;"	f
__asan_poison_memory_region	lib/asan/asan_poisoning.cc	/^void __asan_poison_memory_region(void const volatile *addr, uptr size) {$/;"	f
__asan_poison_stack_memory	lib/asan/asan_poisoning.cc	/^void __asan_poison_stack_memory(uptr addr, uptr size) {$/;"	f
__asan_preinit	lib/asan/asan_win_dll_thunk.cc	/^__declspec(allocate(".CRT$XIB")) int (*__asan_preinit)() = asan_dll_thunk_init;$/;"	v
__asan_premap_shadow	lib/asan/asan_premap_shadow.cc	/^decltype(__asan_shadow)* __asan_premap_shadow() {$/;"	f
__asan_print_accumulated_stats	lib/asan/asan_stats.cc	/^void __asan_print_accumulated_stats() {$/;"	f
__asan_region_is_poisoned	lib/asan/asan_poisoning.cc	/^uptr __asan_region_is_poisoned(uptr beg, uptr size) {$/;"	f
__asan_register_elf_globals	lib/asan/asan_globals.cc	/^void __asan_register_elf_globals(uptr *flag, void *start, void *stop) {$/;"	f
__asan_register_globals	lib/asan/asan_globals.cc	/^void __asan_register_globals(__asan_global *globals, uptr n) {$/;"	f
__asan_register_image_globals	lib/asan/asan_globals.cc	/^void __asan_register_image_globals(uptr *flag) {$/;"	f
__asan_report_error	lib/asan/asan_report.cc	/^void __asan_report_error(uptr pc, uptr bp, uptr sp, uptr addr, int is_write,$/;"	f
__asan_report_present	lib/asan/asan_report.cc	/^int __asan_report_present() {$/;"	f
__asan_rt_version	lib/asan/asan_linux.cc	/^asan_rt_version_t  __asan_rt_version;$/;"	v
__asan_schedule_unregister_globals	lib/asan/asan_win_dynamic_runtime_thunk.cc	/^int (*__asan_schedule_unregister_globals)() = ScheduleUnregisterGlobals;$/;"	v
__asan_seh_interceptor	lib/asan/asan_win_dynamic_runtime_thunk.cc	/^__declspec(allocate(".CRT$XCAB")) int (*__asan_seh_interceptor)() =$/;"	v
__asan_set_death_callback	lib/asan/asan_rtl.cc	/^void NOINLINE __asan_set_death_callback(void (*callback)(void)) {$/;"	f
__asan_set_error_report_callback	lib/asan/asan_report.cc	/^void NOINLINE __asan_set_error_report_callback(void (*callback)(const char*)) {$/;"	f
__asan_set_seh_filter	lib/asan/asan_win.cc	/^int __asan_set_seh_filter() {$/;"	f	namespace:__asan
__asan_set_shadow_00	lib/asan/asan_poisoning.cc	/^void __asan_set_shadow_00(uptr addr, uptr size) {$/;"	f
__asan_set_shadow_f1	lib/asan/asan_poisoning.cc	/^void __asan_set_shadow_f1(uptr addr, uptr size) {$/;"	f
__asan_set_shadow_f2	lib/asan/asan_poisoning.cc	/^void __asan_set_shadow_f2(uptr addr, uptr size) {$/;"	f
__asan_set_shadow_f3	lib/asan/asan_poisoning.cc	/^void __asan_set_shadow_f3(uptr addr, uptr size) {$/;"	f
__asan_set_shadow_f5	lib/asan/asan_poisoning.cc	/^void __asan_set_shadow_f5(uptr addr, uptr size) {$/;"	f
__asan_set_shadow_f8	lib/asan/asan_poisoning.cc	/^void __asan_set_shadow_f8(uptr addr, uptr size) {$/;"	f
__asan_shadow_memory_dynamic_address	lib/asan/asan_rtl.cc	/^uptr __asan_shadow_memory_dynamic_address;  \/\/ Global interface symbol.$/;"	v
__asan_shadow_memory_dynamic_address	lib/asan/asan_win_dll_thunk.cc	/^uptr __asan_shadow_memory_dynamic_address;$/;"	v
__asan_shadow_memory_dynamic_address	lib/asan/asan_win_dynamic_runtime_thunk.cc	/^void* __asan_shadow_memory_dynamic_address;$/;"	v
__asan_should_detect_stack_use_after_return	lib/asan/asan_win.cc	/^int __asan_should_detect_stack_use_after_return() {$/;"	f
__asan_storeN	lib/asan/asan_rtl.cc	/^void __asan_storeN(uptr addr, uptr size) {$/;"	f	namespace:__asan
__asan_storeN_noabort	lib/asan/asan_rtl.cc	/^void __asan_storeN_noabort(uptr addr, uptr size) {$/;"	f	namespace:__asan
__asan_test_only_reported_buggy_pointer	lib/asan/asan_rtl.cc	/^uptr *__asan_test_only_reported_buggy_pointer;  \/\/ Used only for testing asan.$/;"	v
__asan_tls_init	lib/asan/asan_win.cc	/^__declspec(allocate(".CRT$XLAB")) void (NTAPI *__asan_tls_init)(void *,$/;"	m	namespace:__asan	file:
__asan_tls_init	lib/asan/asan_win_dll_thunk.cc	/^__declspec(allocate(".CRT$XLAB")) void (WINAPI *__asan_tls_init)(void *,$/;"	v
__asan_tls_init	lib/asan/asan_win_dynamic_runtime_thunk.cc	/^__declspec(allocate(".CRT$XLAB")) void (NTAPI *__asan_tls_init)(void *,$/;"	v
__asan_unhandled_exception_filter	lib/asan/asan_win.cc	/^long __asan_unhandled_exception_filter(EXCEPTION_POINTERS *info) {$/;"	f
__asan_unpoison_intra_object_redzone	lib/asan/asan_poisoning.cc	/^void __asan_unpoison_intra_object_redzone(uptr ptr, uptr size) {$/;"	f
__asan_unpoison_memory_region	lib/asan/asan_poisoning.cc	/^void __asan_unpoison_memory_region(void const volatile *addr, uptr size) {$/;"	f
__asan_unpoison_stack_memory	lib/asan/asan_poisoning.cc	/^void __asan_unpoison_stack_memory(uptr addr, uptr size) {$/;"	f
__asan_unregister_elf_globals	lib/asan/asan_globals.cc	/^void __asan_unregister_elf_globals(uptr *flag, void *start, void *stop) {$/;"	f
__asan_unregister_globals	lib/asan/asan_globals.cc	/^void __asan_unregister_globals(__asan_global *globals, uptr n) {$/;"	f
__asan_unregister_image_globals	lib/asan/asan_globals.cc	/^void __asan_unregister_image_globals(uptr *flag) {$/;"	f
__asan_version_mismatch_check	lib/asan/asan_init_version.h	39;"	d
__asan_version_mismatch_check	lib/asan/asan_init_version.h	41;"	d
__asan_version_mismatch_check	lib/asan/asan_rtl.cc	/^void __asan_version_mismatch_check() {$/;"	f
__ashldi3	lib/builtins/ashldi3.c	/^AEABI_RTABI di_int __aeabi_llsl(di_int a, si_int b) COMPILER_RT_ALIAS(__ashldi3);$/;"	v
__ashldi3	lib/builtins/ashldi3.c	/^__ashldi3(di_int a, si_int b)$/;"	f
__ashlti3	lib/builtins/ashlti3.c	/^__ashlti3(ti_int a, si_int b)$/;"	f
__ashrdi3	lib/builtins/ashrdi3.c	/^AEABI_RTABI di_int __aeabi_lasr(di_int a, si_int b) COMPILER_RT_ALIAS(__ashrdi3);$/;"	v
__ashrdi3	lib/builtins/ashrdi3.c	/^__ashrdi3(di_int a, si_int b)$/;"	f
__ashrti3	lib/builtins/ashrti3.c	/^__ashrti3(ti_int a, si_int b)$/;"	f
__atomic_compare_exchange_c	lib/builtins/atomic.c	/^int __atomic_compare_exchange_c(int size, void *ptr, void *expected,$/;"	f
__atomic_exchange_c	lib/builtins/atomic.c	/^void __atomic_exchange_c(int size, void *ptr, void *val, void *old, int model) {$/;"	f
__atomic_load_c	lib/builtins/atomic.c	/^void __atomic_load_c(int size, void *src, void *dest, int model) {$/;"	f
__atomic_load_n	lib/builtins/emutls.c	/^static __inline uintptr_t __atomic_load_n(void *ptr, unsigned type) {$/;"	f	file:
__atomic_store_c	lib/builtins/atomic.c	/^void __atomic_store_c(int size, void *dest, void *src, int model) {$/;"	f
__atomic_store_n	lib/builtins/emutls.c	/^static __inline void __atomic_store_n(void *ptr, uintptr_t val, unsigned type) {$/;"	f	file:
__base_class_type_info	lib/ubsan/ubsan_type_hash_itanium.cc	/^class __base_class_type_info {$/;"	c	namespace:__cxxabiv1	file:
__base_type	lib/ubsan/ubsan_type_hash_itanium.cc	/^  const __class_type_info *__base_type;$/;"	m	class:__cxxabiv1::__base_class_type_info	file:
__base_type	lib/ubsan/ubsan_type_hash_itanium.cc	/^  const __class_type_info *__base_type;$/;"	m	class:__cxxabiv1::__si_class_type_info	file:
__bits	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  unsigned int __bits[4];$/;"	m	struct:__sanitizer::__sanitizer_sigset_t
__bits	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^     unsigned int __bits[4];$/;"	m	struct:__sanitizer::__sanitizer_sigset_t
__bits	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned int __bits[4];$/;"	m	struct:__sanitizer::__sanitizer_sigset_t
__bswapdi2	lib/builtins/bswapdi2.c	/^COMPILER_RT_ABI uint64_t __bswapdi2(uint64_t u) {$/;"	f
__bswapsi2	lib/builtins/bswapsi2.c	/^COMPILER_RT_ABI uint32_t __bswapsi2(uint32_t u) {$/;"	f
__builtin_clz	lib/builtins/clzdi2.c	21;"	d	file:
__builtin_clz	lib/builtins/int_lib.h	/^uint32_t __inline __builtin_clz(uint32_t value) {$/;"	f
__builtin_clzl	lib/builtins/int_lib.h	131;"	d
__builtin_clzll	lib/builtins/int_lib.h	/^uint32_t __inline __builtin_clzll(uint64_t value) {$/;"	f
__builtin_ctz	lib/builtins/ctzdi2.c	21;"	d	file:
__builtin_ctz	lib/builtins/int_lib.h	/^uint32_t __inline __builtin_ctz(uint32_t value) {$/;"	f
__cfi	lib/cfi/cfi.cc	/^namespace __cfi {$/;"	n	file:
__cfi	test/cfi/cross-dso/shadow_is_read_only.cpp	/^namespace __cfi {$/;"	n	file:
__cfi_init	lib/cfi/cfi.cc	/^void __cfi_init() {$/;"	f
__cfi_preinit	lib/cfi/cfi.cc	/^               used)) void (*__cfi_preinit)(void) = __cfi_init;$/;"	v
__cfi_slowpath	lib/cfi/cfi.cc	/^__cfi_slowpath(u64 CallSiteTypeId, void *Ptr) {$/;"	f
__cfi_slowpath	test/cfi/cross-dso/util/cfi_stubs.h	/^__attribute__((visibility("hidden"), no_sanitize("cfi"))) void __cfi_slowpath($/;"	f
__cfi_slowpath_diag	lib/cfi/cfi.cc	/^__cfi_slowpath_diag(u64 CallSiteTypeId, void *Ptr, void *DiagData) {$/;"	f
__cfi_slowpath_diag	test/cfi/cross-dso/util/cfi_stubs.h	/^__cfi_slowpath_diag(uint64_t Type, void *Addr, void *Diag) {$/;"	f
__class_type_info	lib/ubsan/ubsan_type_hash_itanium.cc	/^class __class_type_info : public std::type_info {$/;"	c	namespace:__cxxabiv1	file:
__clear_cache	lib/builtins/clear_cache.c	/^void __clear_cache(void *start, void *end) {$/;"	f
__clzdi2	lib/builtins/clzdi2.c	/^__clzdi2(di_int a)$/;"	f
__clzsi2	lib/builtins/clzsi2.c	/^__clzsi2(si_int a)$/;"	f
__clzti2	lib/builtins/clzti2.c	/^__clzti2(ti_int a)$/;"	f
__cmpdi2	lib/builtins/cmpdi2.c	/^__cmpdi2(di_int a, di_int b)$/;"	f
__cmpti2	lib/builtins/cmpti2.c	/^__cmpti2(ti_int a, ti_int b)$/;"	f
__cpu_features	lib/builtins/cpu_model.c	/^  unsigned int __cpu_features[1];$/;"	m	struct:__processor_model	file:
__cpu_indicator_init	lib/builtins/cpu_model.c	/^__cpu_indicator_init(void) {$/;"	f
__cpu_model	lib/builtins/cpu_model.c	/^} __cpu_model = {0, 0, 0, {0}};$/;"	v	typeref:struct:__processor_model
__cpu_subtype	lib/builtins/cpu_model.c	/^  unsigned int __cpu_subtype;$/;"	m	struct:__processor_model	file:
__cpu_type	lib/builtins/cpu_model.c	/^  unsigned int __cpu_type;$/;"	m	struct:__processor_model	file:
__cpu_vendor	lib/builtins/cpu_model.c	/^  unsigned int __cpu_vendor;$/;"	m	struct:__processor_model	file:
__crashreporter_info__	lib/sanitizer_common/sanitizer_mac.h	/^static const char *__crashreporter_info__ __attribute__((__used__)) =$/;"	v
__crashreporter_info_buff__	lib/sanitizer_common/sanitizer_mac.h	/^static char __crashreporter_info_buff__[__sanitizer::kErrorMessageBufferSize] =$/;"	v
__ctzdi2	lib/builtins/ctzdi2.c	/^__ctzdi2(di_int a)$/;"	f
__ctzsi2	lib/builtins/ctzsi2.c	/^__ctzsi2(si_int a)$/;"	f
__ctzti2	lib/builtins/ctzti2.c	/^__ctzti2(ti_int a)$/;"	f
__cxxabiv1	lib/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc	/^namespace __cxxabiv1 {$/;"	n	file:
__cxxabiv1	lib/ubsan/ubsan_type_hash_itanium.cc	/^namespace __cxxabiv1 {$/;"	n	file:
__decide_deferred_forkserver	lib/fuzzer/afl/afl_driver.cpp	/^__attribute__((constructor(0))) void __decide_deferred_forkserver(void) {$/;"	f
__declspec	test/asan/TestCases/Windows/dll_global_dead_strip.c	/^__declspec(dllexport)$/;"	f
__dfsan	lib/dfsan/dfsan.h	/^namespace __dfsan {$/;"	n
__dfsan	lib/dfsan/dfsan_interceptors.cc	/^namespace __dfsan {$/;"	n	file:
__dfsan	lib/dfsan/dfsan_platform.h	/^namespace __dfsan {$/;"	n
__dfsan	lib/sanitizer_common/sanitizer_internal_defs.h	/^namespace __dfsan { using namespace __sanitizer; }  \/\/ NOLINT$/;"	n
__dfsan_arg_tls	lib/dfsan/dfsan.cc	/^SANITIZER_INTERFACE_ATTRIBUTE THREADLOCAL dfsan_label __dfsan_arg_tls[64];$/;"	v
__dfsan_label_info	lib/dfsan/dfsan.cc	/^static dfsan_label_info __dfsan_label_info[kNumLabels];$/;"	v	file:
__dfsan_last_label	lib/dfsan/dfsan.cc	/^static atomic_dfsan_label __dfsan_last_label;$/;"	v	file:
__dfsan_nonzero_label	lib/dfsan/dfsan.cc	/^extern "C" SANITIZER_INTERFACE_ATTRIBUTE void __dfsan_nonzero_label() {$/;"	f
__dfsan_retval_tls	lib/dfsan/dfsan.cc	/^SANITIZER_INTERFACE_ATTRIBUTE THREADLOCAL dfsan_label __dfsan_retval_tls;$/;"	v
__dfsan_set_label	lib/dfsan/dfsan.cc	/^void __dfsan_set_label(dfsan_label label, void *addr, uptr size) {$/;"	f
__dfsan_shadow_ptr_mask	lib/dfsan/dfsan.cc	/^SANITIZER_INTERFACE_ATTRIBUTE uptr __dfsan_shadow_ptr_mask;$/;"	v
__dfsan_unimplemented	lib/dfsan/dfsan.cc	/^void __dfsan_unimplemented(char *fname) {$/;"	f
__dfsan_union	lib/dfsan/dfsan.cc	/^dfsan_label __dfsan_union(dfsan_label l1, dfsan_label l2) {$/;"	f
__dfsan_union_load	lib/dfsan/dfsan.cc	/^dfsan_label __dfsan_union_load(const dfsan_label *ls, uptr n) {$/;"	f
__dfsan_vararg_wrapper	lib/dfsan/dfsan.cc	/^__dfsan_vararg_wrapper(const char *fname) {$/;"	f
__dfsw___sanitizer_cov_trace_cmp8	test/dfsan/trace-cmp.c	/^void __dfsw___sanitizer_cov_trace_cmp8(uint8_t a, uint8_t b, dfsan_label l1,$/;"	f
__dfsw___sanitizer_cov_trace_const_cmp4	test/dfsan/trace-cmp.c	/^void __dfsw___sanitizer_cov_trace_const_cmp4(uint8_t a, uint8_t b,$/;"	f
__dfsw___sanitizer_cov_trace_switch	lib/fuzzer/dataflow/DataFlow.cpp	/^void __dfsw___sanitizer_cov_trace_switch(uint64_t Val, uint64_t *Cases,$/;"	f
__dfsw_calloc	lib/dfsan/dfsan_custom.cc	/^SANITIZER_INTERFACE_ATTRIBUTE void *__dfsw_calloc(size_t nmemb, size_t size,$/;"	f
__dfsw_clock_gettime	lib/dfsan/dfsan_custom.cc	/^SANITIZER_INTERFACE_ATTRIBUTE int __dfsw_clock_gettime(clockid_t clk_id,$/;"	f
__dfsw_ctime_r	lib/dfsan/dfsan_custom.cc	/^char *__dfsw_ctime_r(const time_t *timep, char *buf, dfsan_label timep_label,$/;"	f
__dfsw_dfsan_get_label	lib/dfsan/dfsan.cc	/^__dfsw_dfsan_get_label(long data, dfsan_label data_label,$/;"	f
__dfsw_dfsan_set_write_callback	lib/dfsan/dfsan_custom.cc	/^__dfsw_dfsan_set_write_callback($/;"	f
__dfsw_dl_iterate_phdr	lib/dfsan/dfsan_custom.cc	/^SANITIZER_INTERFACE_ATTRIBUTE int __dfsw_dl_iterate_phdr($/;"	f
__dfsw_dlopen	lib/dfsan/dfsan_custom.cc	/^__dfsw_dlopen(const char *filename, int flag, dfsan_label filename_label,$/;"	f
__dfsw_fgets	lib/dfsan/dfsan_custom.cc	/^char *__dfsw_fgets(char *s, int size, FILE *stream, dfsan_label s_label,$/;"	f
__dfsw_fstat	lib/dfsan/dfsan_custom.cc	/^SANITIZER_INTERFACE_ATTRIBUTE int __dfsw_fstat(int fd, struct stat *buf,$/;"	f
__dfsw_get_current_dir_name	lib/dfsan/dfsan_custom.cc	/^char *__dfsw_get_current_dir_name(dfsan_label *ret_label) {$/;"	f
__dfsw_getcwd	lib/dfsan/dfsan_custom.cc	/^char *__dfsw_getcwd(char *buf, size_t size, dfsan_label buf_label,$/;"	f
__dfsw_gethostname	lib/dfsan/dfsan_custom.cc	/^int __dfsw_gethostname(char *name, size_t len, dfsan_label name_label,$/;"	f
__dfsw_getpwuid_r	lib/dfsan/dfsan_custom.cc	/^int __dfsw_getpwuid_r(id_t uid, struct passwd *pwd,$/;"	f
__dfsw_getrlimit	lib/dfsan/dfsan_custom.cc	/^int __dfsw_getrlimit(int resource, struct rlimit *rlim,$/;"	f
__dfsw_getrusage	lib/dfsan/dfsan_custom.cc	/^int __dfsw_getrusage(int who, struct rusage *usage, dfsan_label who_label,$/;"	f
__dfsw_gettimeofday	lib/dfsan/dfsan_custom.cc	/^int __dfsw_gettimeofday(struct timeval *tv, struct timezone *tz,$/;"	f
__dfsw_inet_pton	lib/dfsan/dfsan_custom.cc	/^int __dfsw_inet_pton(int af, const char *src, void *dst, dfsan_label af_label,$/;"	f
__dfsw_localtime_r	lib/dfsan/dfsan_custom.cc	/^struct tm *__dfsw_localtime_r(const time_t *timep, struct tm *result,$/;"	f
__dfsw_memchr	lib/dfsan/dfsan_custom.cc	/^SANITIZER_INTERFACE_ATTRIBUTE void *__dfsw_memchr(void *s, int c, size_t n,$/;"	f
__dfsw_memcmp	lib/dfsan/dfsan_custom.cc	/^SANITIZER_INTERFACE_ATTRIBUTE int __dfsw_memcmp(const void *s1, const void *s2,$/;"	f
__dfsw_memcpy	lib/dfsan/dfsan_custom.cc	/^void *__dfsw_memcpy(void *dest, const void *src, size_t n,$/;"	f
__dfsw_memset	lib/dfsan/dfsan_custom.cc	/^void *__dfsw_memset(void *s, int c, size_t n,$/;"	f
__dfsw_nanosleep	lib/dfsan/dfsan_custom.cc	/^SANITIZER_INTERFACE_ATTRIBUTE int __dfsw_nanosleep(const struct timespec *req,$/;"	f
__dfsw_poll	lib/dfsan/dfsan_custom.cc	/^int __dfsw_poll(struct pollfd *fds, nfds_t nfds, int timeout,$/;"	f
__dfsw_pread	lib/dfsan/dfsan_custom.cc	/^__dfsw_pread(int fd, void *buf, size_t count, off_t offset,$/;"	f
__dfsw_pthread_create	lib/dfsan/dfsan_custom.cc	/^SANITIZER_INTERFACE_ATTRIBUTE int __dfsw_pthread_create($/;"	f
__dfsw_read	lib/dfsan/dfsan_custom.cc	/^__dfsw_read(int fd, void *buf, size_t count,$/;"	f
__dfsw_sched_getaffinity	lib/dfsan/dfsan_custom.cc	/^int __dfsw_sched_getaffinity(pid_t pid, size_t cpusetsize, cpu_set_t *mask,$/;"	f
__dfsw_select	lib/dfsan/dfsan_custom.cc	/^int __dfsw_select(int nfds, fd_set *readfds, fd_set *writefds,$/;"	f
__dfsw_sigaction	lib/dfsan/dfsan_custom.cc	/^int __dfsw_sigaction(int signum, const struct sigaction *act,$/;"	f
__dfsw_sigemptyset	lib/dfsan/dfsan_custom.cc	/^int __dfsw_sigemptyset(sigset_t *set, dfsan_label set_label,$/;"	f
__dfsw_snprintf	lib/dfsan/dfsan_custom.cc	/^int __dfsw_snprintf(char *str, size_t size, const char *format,$/;"	f
__dfsw_socketpair	lib/dfsan/dfsan_custom.cc	/^__dfsw_socketpair(int domain, int type, int protocol, int sv[2],$/;"	f
__dfsw_sprintf	lib/dfsan/dfsan_custom.cc	/^int __dfsw_sprintf(char *str, const char *format, dfsan_label str_label,$/;"	f
__dfsw_stat	lib/dfsan/dfsan_custom.cc	/^__dfsw_stat(const char *path, struct stat *buf, dfsan_label path_label,$/;"	f
__dfsw_strcasecmp	lib/dfsan/dfsan_custom.cc	/^__dfsw_strcasecmp(const char *s1, const char *s2, dfsan_label s1_label,$/;"	f
__dfsw_strchr	lib/dfsan/dfsan_custom.cc	/^SANITIZER_INTERFACE_ATTRIBUTE char *__dfsw_strchr(const char *s, int c,$/;"	f
__dfsw_strcmp	lib/dfsan/dfsan_custom.cc	/^SANITIZER_INTERFACE_ATTRIBUTE int __dfsw_strcmp(const char *s1, const char *s2,$/;"	f
__dfsw_strcpy	lib/dfsan/dfsan_custom.cc	/^char *__dfsw_strcpy(char *dest, const char *src, dfsan_label dst_label,$/;"	f
__dfsw_strdup	lib/dfsan/dfsan_custom.cc	/^__dfsw_strdup(const char *s, dfsan_label s_label, dfsan_label *ret_label) {$/;"	f
__dfsw_strlen	lib/dfsan/dfsan_custom.cc	/^__dfsw_strlen(const char *s, dfsan_label s_label, dfsan_label *ret_label) {$/;"	f
__dfsw_strncasecmp	lib/dfsan/dfsan_custom.cc	/^__dfsw_strncasecmp(const char *s1, const char *s2, size_t n,$/;"	f
__dfsw_strncmp	lib/dfsan/dfsan_custom.cc	/^SANITIZER_INTERFACE_ATTRIBUTE int __dfsw_strncmp(const char *s1, const char *s2,$/;"	f
__dfsw_strncpy	lib/dfsan/dfsan_custom.cc	/^__dfsw_strncpy(char *s1, const char *s2, size_t n, dfsan_label s1_label,$/;"	f
__dfsw_strrchr	lib/dfsan/dfsan_custom.cc	/^SANITIZER_INTERFACE_ATTRIBUTE char *__dfsw_strrchr(char *s, int c,$/;"	f
__dfsw_strstr	lib/dfsan/dfsan_custom.cc	/^SANITIZER_INTERFACE_ATTRIBUTE char *__dfsw_strstr(char *haystack, char *needle,$/;"	f
__dfsw_strtod	lib/dfsan/dfsan_custom.cc	/^double __dfsw_strtod(const char *nptr, char **endptr,$/;"	f
__dfsw_strtol	lib/dfsan/dfsan_custom.cc	/^long int __dfsw_strtol(const char *nptr, char **endptr, int base,$/;"	f
__dfsw_strtoll	lib/dfsan/dfsan_custom.cc	/^long long int __dfsw_strtoll(const char *nptr, char **endptr, int base,$/;"	f
__dfsw_strtoul	lib/dfsan/dfsan_custom.cc	/^unsigned long int __dfsw_strtoul(const char *nptr, char **endptr, int base,$/;"	f
__dfsw_strtoull	lib/dfsan/dfsan_custom.cc	/^long long unsigned int __dfsw_strtoull(const char *nptr, char **endptr,$/;"	f
__dfsw_time	lib/dfsan/dfsan_custom.cc	/^time_t __dfsw_time(time_t *t, dfsan_label t_label, dfsan_label *ret_label) {$/;"	f
__dfsw_write	lib/dfsan/dfsan_custom.cc	/^__dfsw_write(int fd, const void *buf, size_t count,$/;"	f
__divdc3	lib/builtins/divdc3.c	/^__divdc3(double __a, double __b, double __c, double __d)$/;"	f
__divdf3	lib/builtins/divdf3.c	/^AEABI_RTABI fp_t __aeabi_ddiv(fp_t a, fp_t b) COMPILER_RT_ALIAS(__divdf3);$/;"	v
__divdf3	lib/builtins/divdf3.c	/^__divdf3(fp_t a, fp_t b) {$/;"	f
__divdi3	lib/builtins/divdi3.c	/^__divdi3(di_int a, di_int b)$/;"	f
__divmoddi4	lib/builtins/divmoddi4.c	/^__divmoddi4(di_int a, di_int b, di_int* rem)$/;"	f
__divmodsi4	lib/builtins/divmodsi4.c	/^__divmodsi4(si_int a, si_int b, si_int* rem)$/;"	f
__divsc3	lib/builtins/divsc3.c	/^__divsc3(float __a, float __b, float __c, float __d)$/;"	f
__divsf3	lib/builtins/divsf3.c	/^AEABI_RTABI fp_t __aeabi_fdiv(fp_t a, fp_t b) COMPILER_RT_ALIAS(__divsf3);$/;"	v
__divsf3	lib/builtins/divsf3.c	/^__divsf3(fp_t a, fp_t b) {$/;"	f
__divsi3	lib/builtins/divsi3.c	/^AEABI_RTABI si_int __aeabi_idiv(si_int a, si_int b) COMPILER_RT_ALIAS(__divsi3);$/;"	v
__divsi3	lib/builtins/divsi3.c	/^__divsi3(si_int a, si_int b)$/;"	f
__divtc3	lib/builtins/divtc3.c	/^__divtc3(long double __a, long double __b, long double __c, long double __d)$/;"	f
__divtc3	lib/builtins/ppc/divtc3.c	/^__divtc3(long double a, long double b, long double c, long double d)$/;"	f
__divtf3	lib/builtins/divtf3.c	/^COMPILER_RT_ABI fp_t __divtf3(fp_t a, fp_t b) {$/;"	f
__divti3	lib/builtins/divti3.c	/^__divti3(ti_int a, ti_int b)$/;"	f
__divxc3	lib/builtins/divxc3.c	/^__divxc3(long double __a, long double __b, long double __c, long double __d)$/;"	f
__dll_thunk_init	lib/sanitizer_common/sanitizer_win_dll_thunk.cc	/^extern "C" int __dll_thunk_init() {$/;"	f
__dll_thunk_preinit	lib/sanitizer_common/sanitizer_win_dll_thunk.cc	/^__declspec(allocate(".CRT$XIB")) int (*__dll_thunk_preinit)() =$/;"	v
__dll_thunk_tls_init	lib/sanitizer_common/sanitizer_win_dll_thunk.cc	/^__declspec(allocate(".CRT$XLAB")) void (WINAPI *__dll_thunk_tls_init)(void *,$/;"	v
__dsan	lib/sanitizer_common/sanitizer_internal_defs.h	/^namespace __dsan  { using namespace __sanitizer; }  \/\/ NOLINT$/;"	n
__dsan	lib/tsan/dd/dd_interceptors.cc	/^namespace __dsan {$/;"	n	file:
__dsan	lib/tsan/dd/dd_rtl.cc	/^namespace __dsan {$/;"	n	file:
__dsan	lib/tsan/dd/dd_rtl.h	/^namespace __dsan {$/;"	n
__dsan_after_mutex_lock	lib/tsan/dd/dd_interceptors.cc	/^void __dsan_after_mutex_lock(uptr m, int writelock, int trylock) {$/;"	f
__dsan_before_mutex_lock	lib/tsan/dd/dd_interceptors.cc	/^void __dsan_before_mutex_lock(uptr m, int writelock) {$/;"	f
__dsan_before_mutex_unlock	lib/tsan/dd/dd_interceptors.cc	/^void __dsan_before_mutex_unlock(uptr m, int writelock) {$/;"	f
__dsan_mutex_destroy	lib/tsan/dd/dd_interceptors.cc	/^void __dsan_mutex_destroy(uptr m) {$/;"	f
__dtoi64	lib/builtins/mingw_fixfloat.c	/^COMPILER_RT_ABI di_int __dtoi64(double a) { return __fixdfdi(a); }$/;"	f
__dtou64	lib/builtins/mingw_fixfloat.c	/^COMPILER_RT_ABI du_int __dtou64(double a) { return __fixunsdfdi(a); }$/;"	f
__emutls_control	lib/builtins/emutls.c	/^typedef struct __emutls_control {$/;"	s	file:
__emutls_control	lib/builtins/emutls.c	/^} __emutls_control;$/;"	t	typeref:struct:__emutls_control	file:
__emutls_get_address	lib/builtins/emutls.c	/^void* __emutls_get_address(__emutls_control* control) {$/;"	f
__enable_execute_stack	lib/builtins/enable_execute_stack.c	/^__enable_execute_stack(void* addr)$/;"	f
__eprintf	lib/builtins/eprintf.c	/^__eprintf(const char* format, const char* assertion_expression,$/;"	f
__eqdf2	lib/builtins/comparedf2.c	/^__eqdf2(fp_t a, fp_t b) {$/;"	f
__eqsf2	lib/builtins/comparesf2.c	/^__eqsf2(fp_t a, fp_t b) {$/;"	f
__eqtf2	lib/builtins/comparetf2.c	/^COMPILER_RT_ABI enum LE_RESULT __eqtf2(fp_t a, fp_t b) {$/;"	f
__errno_location	lib/sanitizer_common/sanitizer_errno.h	26;"	d
__errno_location	lib/sanitizer_common/sanitizer_errno.h	29;"	d
__errno_location	lib/sanitizer_common/sanitizer_errno.h	31;"	d
__errno_location	lib/sanitizer_common/sanitizer_errno.h	33;"	d
__esan	lib/esan/cache_frag.cpp	/^namespace __esan {$/;"	n	file:
__esan	lib/esan/cache_frag.h	/^namespace __esan {$/;"	n
__esan	lib/esan/esan.cpp	/^namespace __esan {$/;"	n	file:
__esan	lib/esan/esan.h	/^namespace __esan {$/;"	n
__esan	lib/esan/esan_circular_buffer.h	/^namespace __esan {$/;"	n
__esan	lib/esan/esan_flags.cpp	/^namespace __esan {$/;"	n	file:
__esan	lib/esan/esan_flags.h	/^namespace __esan {$/;"	n
__esan	lib/esan/esan_hashtable.h	/^namespace __esan {$/;"	n
__esan	lib/esan/esan_interceptors.cpp	/^namespace __esan {$/;"	n	file:
__esan	lib/esan/esan_linux.cpp	/^namespace __esan {$/;"	n	file:
__esan	lib/esan/esan_shadow.h	/^namespace __esan {$/;"	n
__esan	lib/esan/esan_sideline.h	/^namespace __esan {$/;"	n
__esan	lib/esan/esan_sideline_linux.cpp	/^namespace __esan {$/;"	n	file:
__esan	lib/esan/working_set.cpp	/^namespace __esan {$/;"	n	file:
__esan	lib/esan/working_set.h	/^namespace __esan {$/;"	n
__esan	lib/esan/working_set_posix.cpp	/^namespace __esan {$/;"	n	file:
__esan	lib/sanitizer_common/sanitizer_internal_defs.h	/^namespace __esan  { using namespace __sanitizer; }  \/\/ NOLINT$/;"	n
__esan_aligned_load1	lib/esan/esan_interface.cpp	/^void __esan_aligned_load1(void *Addr) {$/;"	f
__esan_aligned_load16	lib/esan/esan_interface.cpp	/^void __esan_aligned_load16(void *Addr) {$/;"	f
__esan_aligned_load2	lib/esan/esan_interface.cpp	/^void __esan_aligned_load2(void *Addr) {$/;"	f
__esan_aligned_load4	lib/esan/esan_interface.cpp	/^void __esan_aligned_load4(void *Addr) {$/;"	f
__esan_aligned_load8	lib/esan/esan_interface.cpp	/^void __esan_aligned_load8(void *Addr) {$/;"	f
__esan_aligned_store1	lib/esan/esan_interface.cpp	/^void __esan_aligned_store1(void *Addr) {$/;"	f
__esan_aligned_store16	lib/esan/esan_interface.cpp	/^void __esan_aligned_store16(void *Addr) {$/;"	f
__esan_aligned_store2	lib/esan/esan_interface.cpp	/^void __esan_aligned_store2(void *Addr) {$/;"	f
__esan_aligned_store4	lib/esan/esan_interface.cpp	/^void __esan_aligned_store4(void *Addr) {$/;"	f
__esan_aligned_store8	lib/esan/esan_interface.cpp	/^void __esan_aligned_store8(void *Addr) {$/;"	f
__esan_exit	lib/esan/esan_interface.cpp	/^void __esan_exit(void *Ptr) {$/;"	f
__esan_get_sample_count	lib/esan/esan_interface.cpp	/^SANITIZER_INTERFACE_ATTRIBUTE unsigned int __esan_get_sample_count() {$/;"	f
__esan_init	lib/esan/esan_interface.cpp	/^void __esan_init(ToolType Tool, void *Ptr) {$/;"	f
__esan_report	lib/esan/esan_interface.cpp	/^SANITIZER_INTERFACE_ATTRIBUTE void __esan_report() {$/;"	f
__esan_unaligned_load16	lib/esan/esan_interface.cpp	/^void __esan_unaligned_load16(void *Addr) {$/;"	f
__esan_unaligned_load2	lib/esan/esan_interface.cpp	/^void __esan_unaligned_load2(void *Addr) {$/;"	f
__esan_unaligned_load4	lib/esan/esan_interface.cpp	/^void __esan_unaligned_load4(void *Addr) {$/;"	f
__esan_unaligned_load8	lib/esan/esan_interface.cpp	/^void __esan_unaligned_load8(void *Addr) {$/;"	f
__esan_unaligned_loadN	lib/esan/esan_interface.cpp	/^void __esan_unaligned_loadN(void *Addr, uptr Size) {$/;"	f
__esan_unaligned_store16	lib/esan/esan_interface.cpp	/^void __esan_unaligned_store16(void *Addr) {$/;"	f
__esan_unaligned_store2	lib/esan/esan_interface.cpp	/^void __esan_unaligned_store2(void *Addr) {$/;"	f
__esan_unaligned_store4	lib/esan/esan_interface.cpp	/^void __esan_unaligned_store4(void *Addr) {$/;"	f
__esan_unaligned_store8	lib/esan/esan_interface.cpp	/^void __esan_unaligned_store8(void *Addr) {$/;"	f
__esan_unaligned_storeN	lib/esan/esan_interface.cpp	/^void __esan_unaligned_storeN(void *Addr, uptr Size) {$/;"	f
__extenddftf2	lib/builtins/extenddftf2.c	/^COMPILER_RT_ABI long double __extenddftf2(double a) {$/;"	f
__extendhfsf2	lib/builtins/extendhfsf2.c	/^AEABI_RTABI float __aeabi_h2f(uint16_t a) COMPILER_RT_ALIAS(__extendhfsf2);$/;"	v
__extendhfsf2	lib/builtins/extendhfsf2.c	/^COMPILER_RT_ABI NOINLINE float __extendhfsf2(uint16_t a) {$/;"	f
__extendsfdf2	lib/builtins/extendsfdf2.c	/^AEABI_RTABI double __aeabi_f2d(float a) COMPILER_RT_ALIAS(__extendsfdf2);$/;"	v
__extendsfdf2	lib/builtins/extendsfdf2.c	/^COMPILER_RT_ABI double __extendsfdf2(float a) {$/;"	f
__extendsftf2	lib/builtins/extendsftf2.c	/^COMPILER_RT_ABI long double __extendsftf2(float a) {$/;"	f
__ffsdi2	lib/builtins/ffsdi2.c	/^__ffsdi2(di_int a)$/;"	f
__ffssi2	lib/builtins/ffssi2.c	/^__ffssi2(si_int a)$/;"	f
__ffsti2	lib/builtins/ffsti2.c	/^__ffsti2(ti_int a)$/;"	f
__fini	test/scudo/preinit.c	/^void __fini(void) {$/;"	f
__fixdfdi	lib/builtins/fixdfdi.c	/^AEABI_RTABI di_int __aeabi_d2lz(fp_t a) COMPILER_RT_ALIAS(__fixdfdi);$/;"	v
__fixdfdi	lib/builtins/fixdfdi.c	/^__fixdfdi(double a)$/;"	f
__fixdfdi	lib/builtins/fixdfdi.c	/^__fixdfdi(fp_t a) {$/;"	f
__fixdfsi	lib/builtins/fixdfsi.c	/^AEABI_RTABI si_int __aeabi_d2iz(fp_t a) COMPILER_RT_ALIAS(__fixdfsi);$/;"	v
__fixdfsi	lib/builtins/fixdfsi.c	/^__fixdfsi(fp_t a) {$/;"	f
__fixdfti	lib/builtins/fixdfti.c	/^__fixdfti(fp_t a) {$/;"	f
__fixsfdi	lib/builtins/fixsfdi.c	/^AEABI_RTABI di_int __aeabi_f2lz(fp_t a) COMPILER_RT_ALIAS(__fixsfdi);$/;"	v
__fixsfdi	lib/builtins/fixsfdi.c	/^__fixsfdi(float a)$/;"	f
__fixsfdi	lib/builtins/fixsfdi.c	/^__fixsfdi(fp_t a) {$/;"	f
__fixsfsi	lib/builtins/fixsfsi.c	/^AEABI_RTABI si_int __aeabi_f2iz(fp_t a) COMPILER_RT_ALIAS(__fixsfsi);$/;"	v
__fixsfsi	lib/builtins/fixsfsi.c	/^__fixsfsi(fp_t a) {$/;"	f
__fixsfti	lib/builtins/fixsfti.c	/^__fixsfti(fp_t a) {$/;"	f
__fixtfdi	lib/builtins/fixtfdi.c	/^__fixtfdi(fp_t a) {$/;"	f
__fixtfdi	lib/builtins/ppc/fixtfdi.c	/^uint64_t __fixtfdi(long double input)$/;"	f
__fixtfsi	lib/builtins/fixtfsi.c	/^__fixtfsi(fp_t a) {$/;"	f
__fixtfti	lib/builtins/fixtfti.c	/^__fixtfti(fp_t a) {$/;"	f
__fixunsdfdi	lib/builtins/fixunsdfdi.c	/^AEABI_RTABI du_int __aeabi_d2ulz(fp_t a) COMPILER_RT_ALIAS(__fixunsdfdi);$/;"	v
__fixunsdfdi	lib/builtins/fixunsdfdi.c	/^__fixunsdfdi(double a)$/;"	f
__fixunsdfdi	lib/builtins/fixunsdfdi.c	/^__fixunsdfdi(fp_t a) {$/;"	f
__fixunsdfsi	lib/builtins/fixunsdfsi.c	/^AEABI_RTABI su_int __aeabi_d2uiz(fp_t a) COMPILER_RT_ALIAS(__fixunsdfsi);$/;"	v
__fixunsdfsi	lib/builtins/fixunsdfsi.c	/^__fixunsdfsi(fp_t a) {$/;"	f
__fixunsdfti	lib/builtins/fixunsdfti.c	/^__fixunsdfti(fp_t a) {$/;"	f
__fixunssfdi	lib/builtins/fixunssfdi.c	/^AEABI_RTABI du_int __aeabi_f2ulz(fp_t a) COMPILER_RT_ALIAS(__fixunssfdi);$/;"	v
__fixunssfdi	lib/builtins/fixunssfdi.c	/^__fixunssfdi(float a)$/;"	f
__fixunssfdi	lib/builtins/fixunssfdi.c	/^__fixunssfdi(fp_t a) {$/;"	f
__fixunssfsi	lib/builtins/fixunssfsi.c	/^AEABI_RTABI su_int __aeabi_f2uiz(fp_t a) COMPILER_RT_ALIAS(__fixunssfsi);$/;"	v
__fixunssfsi	lib/builtins/fixunssfsi.c	/^__fixunssfsi(fp_t a) {$/;"	f
__fixunssfti	lib/builtins/fixunssfti.c	/^__fixunssfti(fp_t a) {$/;"	f
__fixunstfdi	lib/builtins/fixunstfdi.c	/^__fixunstfdi(fp_t a) {$/;"	f
__fixunstfdi	lib/builtins/ppc/fixunstfdi.c	/^uint64_t __fixunstfdi(long double input)$/;"	f
__fixunstfsi	lib/builtins/fixunstfsi.c	/^__fixunstfsi(fp_t a) {$/;"	f
__fixunstfti	lib/builtins/fixunstfti.c	/^__fixunstfti(fp_t a) {$/;"	f
__fixunsxfdi	lib/builtins/fixunsxfdi.c	/^__fixunsxfdi(long double a)$/;"	f
__fixunsxfsi	lib/builtins/fixunsxfsi.c	/^__fixunsxfsi(long double a)$/;"	f
__fixunsxfti	lib/builtins/fixunsxfti.c	/^__fixunsxfti(long double a)$/;"	f
__fixxfdi	lib/builtins/fixxfdi.c	/^__fixxfdi(long double a)$/;"	f
__fixxfti	lib/builtins/fixxfti.c	/^__fixxfti(long double a)$/;"	f
__floatdidf	lib/builtins/floatdidf.c	/^AEABI_RTABI double __aeabi_l2d(di_int a) COMPILER_RT_ALIAS(__floatdidf);$/;"	v
__floatdidf	lib/builtins/floatdidf.c	/^__floatdidf(di_int a)$/;"	f
__floatdidf	lib/builtins/x86_64/floatdidf.c	/^double __floatdidf(int64_t a)$/;"	f
__floatdisf	lib/builtins/floatdisf.c	/^AEABI_RTABI float __aeabi_l2f(di_int a) COMPILER_RT_ALIAS(__floatdisf);$/;"	v
__floatdisf	lib/builtins/floatdisf.c	/^__floatdisf(di_int a)$/;"	f
__floatdisf	lib/builtins/x86_64/floatdisf.c	/^float __floatdisf(int64_t a)$/;"	f
__floatditf	lib/builtins/floatditf.c	/^COMPILER_RT_ABI fp_t __floatditf(di_int a) {$/;"	f
__floatditf	lib/builtins/ppc/floatditf.c	/^long double __floatditf(int64_t a) {$/;"	f
__floatdixf	lib/builtins/floatdixf.c	/^__floatdixf(di_int a)$/;"	f
__floatdixf	lib/builtins/x86_64/floatdixf.c	/^long double __floatdixf(int64_t a)$/;"	f
__floatsidf	lib/builtins/floatsidf.c	/^AEABI_RTABI fp_t __aeabi_i2d(int a) COMPILER_RT_ALIAS(__floatsidf);$/;"	v
__floatsidf	lib/builtins/floatsidf.c	/^__floatsidf(int a) {$/;"	f
__floatsisf	lib/builtins/floatsisf.c	/^AEABI_RTABI fp_t __aeabi_i2f(int a) COMPILER_RT_ALIAS(__floatsisf);$/;"	v
__floatsisf	lib/builtins/floatsisf.c	/^__floatsisf(int a) {$/;"	f
__floatsitf	lib/builtins/floatsitf.c	/^COMPILER_RT_ABI fp_t __floatsitf(int a) {$/;"	f
__floattidf	lib/builtins/floattidf.c	/^__floattidf(ti_int a)$/;"	f
__floattisf	lib/builtins/floattisf.c	/^__floattisf(ti_int a)$/;"	f
__floattitf	lib/builtins/floattitf.c	/^__floattitf(ti_int a) {$/;"	f
__floattixf	lib/builtins/floattixf.c	/^__floattixf(ti_int a)$/;"	f
__floatundidf	lib/builtins/floatundidf.c	/^AEABI_RTABI double __aeabi_ul2d(du_int a) COMPILER_RT_ALIAS(__floatundidf);$/;"	v
__floatundidf	lib/builtins/floatundidf.c	/^__floatundidf(du_int a)$/;"	f
__floatundisf	lib/builtins/floatundisf.c	/^AEABI_RTABI float __aeabi_ul2f(du_int a) COMPILER_RT_ALIAS(__floatundisf);$/;"	v
__floatundisf	lib/builtins/floatundisf.c	/^__floatundisf(du_int a)$/;"	f
__floatunditf	lib/builtins/floatunditf.c	/^COMPILER_RT_ABI fp_t __floatunditf(du_int a) {$/;"	f
__floatunditf	lib/builtins/ppc/floatunditf.c	/^long double __floatunditf(uint64_t a) {$/;"	f
__floatundixf	lib/builtins/floatundixf.c	/^__floatundixf(du_int a)$/;"	f
__floatunsidf	lib/builtins/floatunsidf.c	/^AEABI_RTABI fp_t __aeabi_ui2d(unsigned int a) COMPILER_RT_ALIAS(__floatunsidf);$/;"	v
__floatunsidf	lib/builtins/floatunsidf.c	/^__floatunsidf(unsigned int a) {$/;"	f
__floatunsisf	lib/builtins/floatunsisf.c	/^AEABI_RTABI fp_t __aeabi_ui2f(unsigned int a) COMPILER_RT_ALIAS(__floatunsisf);$/;"	v
__floatunsisf	lib/builtins/floatunsisf.c	/^__floatunsisf(unsigned int a) {$/;"	f
__floatunsitf	lib/builtins/floatunsitf.c	/^COMPILER_RT_ABI fp_t __floatunsitf(unsigned int a) {$/;"	f
__floatuntidf	lib/builtins/floatuntidf.c	/^__floatuntidf(tu_int a)$/;"	f
__floatuntisf	lib/builtins/floatuntisf.c	/^__floatuntisf(tu_int a)$/;"	f
__floatuntitf	lib/builtins/floatuntitf.c	/^__floatuntitf(tu_int a) {$/;"	f
__floatuntixf	lib/builtins/floatuntixf.c	/^__floatuntixf(tu_int a)$/;"	f
__fxstat	lib/sanitizer_common/symbolizer/sanitizer_wrappers.cc	/^int __fxstat(int version, int fd, struct stat *buf) { STAT(fstat, fd, buf); }$/;"	f
__gcc_personality_sj0	lib/builtins/gcc_personality_v0.c	/^__gcc_personality_sj0(int version, _Unwind_Action actions,$/;"	f
__gcc_qadd	lib/builtins/ppc/gcc_qadd.c	/^long double __gcc_qadd(long double x, long double y)$/;"	f
__gcc_qdiv	lib/builtins/ppc/gcc_qdiv.c	/^long double __gcc_qdiv(long double a, long double b)$/;"	f
__gcc_qmul	lib/builtins/ppc/gcc_qmul.c	/^long double __gcc_qmul(long double x, long double y)$/;"	f
__gcc_qsub	lib/builtins/ppc/gcc_qsub.c	/^long double __gcc_qsub(long double x, long double y)$/;"	f
__gcov_flush	lib/profile/GCDAProfiling.c	/^void __gcov_flush() {$/;"	f
__gedf2	lib/builtins/comparedf2.c	/^__gedf2(fp_t a, fp_t b) {$/;"	f
__gesf2	lib/builtins/comparesf2.c	/^__gesf2(fp_t a, fp_t b) {$/;"	f
__get_tls	lib/sanitizer_common/sanitizer_linux.h	109;"	d
__get_tls	lib/sanitizer_common/sanitizer_linux.h	112;"	d
__get_tls	lib/sanitizer_common/sanitizer_linux.h	117;"	d
__get_tls	lib/sanitizer_common/sanitizer_linux.h	125;"	d
__get_tls	lib/sanitizer_common/sanitizer_linux.h	128;"	d
__get_unsafe_stack_bottom	lib/safestack/safestack.cc	/^    __attribute__((visibility("default"))) void *__get_unsafe_stack_bottom() {$/;"	f
__get_unsafe_stack_ptr	lib/safestack/safestack.cc	/^    __attribute__((visibility("default"))) void *__get_unsafe_stack_ptr() {$/;"	f
__get_unsafe_stack_start	lib/safestack/safestack.cc	/^    __attribute__((visibility("default"))) void *__get_unsafe_stack_start() {$/;"	f
__get_unsafe_stack_top	lib/safestack/safestack.cc	/^    __attribute__((visibility("default"))) void *__get_unsafe_stack_top() {$/;"	f
__getf2	lib/builtins/comparetf2.c	/^COMPILER_RT_ABI enum GE_RESULT __getf2(fp_t a, fp_t b) {$/;"	f
__glibc_reserved1	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned long __glibc_reserved1;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
__glibc_reserved2	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned long __glibc_reserved2;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
__gnu_f2h_ieee	lib/builtins/truncsfhf2.c	/^COMPILER_RT_ABI uint16_t __gnu_f2h_ieee(float a) {$/;"	f
__gnu_h2f_ieee	lib/builtins/extendhfsf2.c	/^COMPILER_RT_ABI float __gnu_h2f_ieee(uint16_t a) {$/;"	f
__gtdf2	lib/builtins/comparedf2.c	/^__gtdf2(fp_t a, fp_t b) {$/;"	f
__gtsf2	lib/builtins/comparesf2.c	/^__gtsf2(fp_t a, fp_t b) {$/;"	f
__gttf2	lib/builtins/comparetf2.c	/^COMPILER_RT_ABI enum GE_RESULT __gttf2(fp_t a, fp_t b) {$/;"	f
__has_attribute	lib/builtins/cpu_model.c	31;"	d	file:
__has_attribute	lib/fuzzer/FuzzerDefs.h	86;"	d
__has_attribute	lib/sanitizer_common/sanitizer_internal_defs.h	127;"	d
__has_builtin	lib/builtins/int_math.h	25;"	d
__has_feature	include/sanitizer/common_interface_defs.h	21;"	d
__has_feature	lib/sanitizer_common/sanitizer_internal_defs.h	122;"	d
__has_feature	lib/sanitizer_common/tests/sanitizer_test_utils.h	49;"	d
__has_feature	test/sanitizer_common/TestCases/Linux/open_memstream.cc	11;"	d	file:
__has_include	lib/builtins/atomic_flag_clear.c	16;"	d	file:
__has_include	lib/builtins/atomic_flag_clear_explicit.c	16;"	d	file:
__has_include	lib/builtins/atomic_flag_test_and_set.c	16;"	d	file:
__has_include	lib/builtins/atomic_flag_test_and_set_explicit.c	16;"	d	file:
__has_include	lib/builtins/atomic_signal_fence.c	16;"	d	file:
__has_include	lib/builtins/atomic_thread_fence.c	16;"	d	file:
__hexagon_adddf3	lib/builtins/hexagon/dfaddsub.S	/^__hexagon_adddf3:$/;"	l
__hexagon_divdf3	lib/builtins/hexagon/dfdiv.S	/^__hexagon_divdf3:$/;"	l
__hexagon_fmadf4	lib/builtins/hexagon/dffma.S	/^__hexagon_fmadf4:$/;"	l
__hexagon_fmadf5	lib/builtins/hexagon/dffma.S	/^__hexagon_fmadf5:$/;"	l
__hexagon_maxdf3	lib/builtins/hexagon/dfminmax.S	/^__hexagon_maxdf3:$/;"	l
__hexagon_mindf3	lib/builtins/hexagon/dfminmax.S	/^__hexagon_mindf3:$/;"	l
__hexagon_muldf3	lib/builtins/hexagon/dfmul.S	/^__hexagon_muldf3:$/;"	l
__hexagon_sqrt	lib/builtins/hexagon/dfsqrt.S	/^__hexagon_sqrt:$/;"	l
__hexagon_sqrtdf2	lib/builtins/hexagon/dfsqrt.S	/^__hexagon_sqrtdf2:$/;"	l
__hexagon_subdf3	lib/builtins/hexagon/dfaddsub.S	/^__hexagon_subdf3:$/;"	l
__hwasan	lib/hwasan/hwasan.cc	/^namespace __hwasan {$/;"	n	file:
__hwasan	lib/hwasan/hwasan.h	/^namespace __hwasan {$/;"	n
__hwasan	lib/hwasan/hwasan_allocator.cc	/^namespace __hwasan {$/;"	n	file:
__hwasan	lib/hwasan/hwasan_allocator.h	/^namespace __hwasan {$/;"	n
__hwasan	lib/hwasan/hwasan_dynamic_shadow.cc	/^namespace __hwasan {$/;"	n	file:
__hwasan	lib/hwasan/hwasan_dynamic_shadow.h	/^namespace __hwasan {$/;"	n
__hwasan	lib/hwasan/hwasan_flags.h	/^namespace __hwasan {$/;"	n
__hwasan	lib/hwasan/hwasan_interceptors.cc	/^namespace __hwasan {$/;"	n	file:
__hwasan	lib/hwasan/hwasan_linux.cc	/^namespace __hwasan {$/;"	n	file:
__hwasan	lib/hwasan/hwasan_mapping.h	/^namespace __hwasan {$/;"	n
__hwasan	lib/hwasan/hwasan_poisoning.cc	/^namespace __hwasan {$/;"	n	file:
__hwasan	lib/hwasan/hwasan_poisoning.h	/^namespace __hwasan {$/;"	n
__hwasan	lib/hwasan/hwasan_report.cc	/^namespace __hwasan {$/;"	n	file:
__hwasan	lib/hwasan/hwasan_report.h	/^namespace __hwasan {$/;"	n
__hwasan	lib/hwasan/hwasan_thread.cc	/^namespace __hwasan {$/;"	n	file:
__hwasan	lib/hwasan/hwasan_thread.h	/^namespace __hwasan {$/;"	n
__hwasan	lib/sanitizer_common/sanitizer_internal_defs.h	/^namespace __hwasan  { using namespace __sanitizer; }  \/\/ NOLINT$/;"	n
__hwasan_default_options	lib/hwasan/hwasan.cc	/^const char* __hwasan_default_options() { return ""; }$/;"	f
__hwasan_disable_allocator_tagging	lib/hwasan/hwasan_allocator.cc	/^void __hwasan_disable_allocator_tagging() {$/;"	f
__hwasan_enable_allocator_tagging	lib/hwasan/hwasan_allocator.cc	/^void __hwasan_enable_allocator_tagging() {$/;"	f
__hwasan_generate_tag	lib/hwasan/hwasan.cc	/^u8 __hwasan_generate_tag() {$/;"	f
__hwasan_init	lib/hwasan/hwasan.cc	/^void __hwasan_init() {$/;"	f
__hwasan_load1	lib/hwasan/hwasan.cc	/^void __hwasan_load1(uptr p) {$/;"	f
__hwasan_load16	lib/hwasan/hwasan.cc	/^void __hwasan_load16(uptr p) {$/;"	f
__hwasan_load16_noabort	lib/hwasan/hwasan.cc	/^void __hwasan_load16_noabort(uptr p) {$/;"	f
__hwasan_load1_noabort	lib/hwasan/hwasan.cc	/^void __hwasan_load1_noabort(uptr p) {$/;"	f
__hwasan_load2	lib/hwasan/hwasan.cc	/^void __hwasan_load2(uptr p) {$/;"	f
__hwasan_load2_noabort	lib/hwasan/hwasan.cc	/^void __hwasan_load2_noabort(uptr p) {$/;"	f
__hwasan_load4	lib/hwasan/hwasan.cc	/^void __hwasan_load4(uptr p) {$/;"	f
__hwasan_load4_noabort	lib/hwasan/hwasan.cc	/^void __hwasan_load4_noabort(uptr p) {$/;"	f
__hwasan_load8	lib/hwasan/hwasan.cc	/^void __hwasan_load8(uptr p) {$/;"	f
__hwasan_load8_noabort	lib/hwasan/hwasan.cc	/^void __hwasan_load8_noabort(uptr p) {$/;"	f
__hwasan_loadN	lib/hwasan/hwasan.cc	/^void __hwasan_loadN(uptr p, uptr sz) {$/;"	f
__hwasan_loadN_noabort	lib/hwasan/hwasan.cc	/^void __hwasan_loadN_noabort(uptr p, uptr sz) {$/;"	f
__hwasan_premap_shadow	lib/hwasan/hwasan_dynamic_shadow.cc	/^decltype(__hwasan_shadow)* __hwasan_premap_shadow() {$/;"	f
__hwasan_print_shadow	lib/hwasan/hwasan.cc	/^void __hwasan_print_shadow(const void *x, uptr size) {$/;"	f
__hwasan_store1	lib/hwasan/hwasan.cc	/^void __hwasan_store1(uptr p) {$/;"	f
__hwasan_store16	lib/hwasan/hwasan.cc	/^void __hwasan_store16(uptr p) {$/;"	f
__hwasan_store16_noabort	lib/hwasan/hwasan.cc	/^void __hwasan_store16_noabort(uptr p) {$/;"	f
__hwasan_store1_noabort	lib/hwasan/hwasan.cc	/^void __hwasan_store1_noabort(uptr p) {$/;"	f
__hwasan_store2	lib/hwasan/hwasan.cc	/^void __hwasan_store2(uptr p) {$/;"	f
__hwasan_store2_noabort	lib/hwasan/hwasan.cc	/^void __hwasan_store2_noabort(uptr p) {$/;"	f
__hwasan_store4	lib/hwasan/hwasan.cc	/^void __hwasan_store4(uptr p) {$/;"	f
__hwasan_store4_noabort	lib/hwasan/hwasan.cc	/^void __hwasan_store4_noabort(uptr p) {$/;"	f
__hwasan_store8	lib/hwasan/hwasan.cc	/^void __hwasan_store8(uptr p) {$/;"	f
__hwasan_store8_noabort	lib/hwasan/hwasan.cc	/^void __hwasan_store8_noabort(uptr p) {$/;"	f
__hwasan_storeN	lib/hwasan/hwasan.cc	/^void __hwasan_storeN(uptr p, uptr sz) {$/;"	f
__hwasan_storeN_noabort	lib/hwasan/hwasan.cc	/^void __hwasan_storeN_noabort(uptr p, uptr sz) {$/;"	f
__hwasan_tag_memory	lib/hwasan/hwasan.cc	/^void __hwasan_tag_memory(uptr p, u8 tag, uptr sz) {$/;"	f
__hwasan_test_shadow	lib/hwasan/hwasan.cc	/^sptr __hwasan_test_shadow(const void *p, uptr sz) {$/;"	f
__i64tod	lib/builtins/mingw_fixfloat.c	/^COMPILER_RT_ABI double __i64tod(di_int a) { return __floatdidf(a); }$/;"	f
__i64tos	lib/builtins/mingw_fixfloat.c	/^COMPILER_RT_ABI float __i64tos(di_int a) { return __floatdisf(a); }$/;"	f
__init	test/scudo/preinit.c	/^void __init(void) {$/;"	f
__init__	lib/asan/scripts/asan_symbolize.py	/^  def __init__(self):$/;"	m	class:Symbolizer
__init__	lib/asan/scripts/asan_symbolize.py	/^  def __init__(self, addr, binary, arch):$/;"	m	class:DarwinSymbolizer
__init__	lib/asan/scripts/asan_symbolize.py	/^  def __init__(self, args, close_stderr=False):$/;"	m	class:UnbufferedLineConverter
__init__	lib/asan/scripts/asan_symbolize.py	/^  def __init__(self, binary):$/;"	m	class:Addr2LineSymbolizer
__init__	lib/asan/scripts/asan_symbolize.py	/^  def __init__(self, binary_name_filter=None, dsym_hint_producer=None):$/;"	m	class:SymbolizationLoop
__init__	lib/asan/scripts/asan_symbolize.py	/^  def __init__(self, filename):$/;"	m	class:BreakpadSymbolizer
__init__	lib/asan/scripts/asan_symbolize.py	/^  def __init__(self, symbolizer_list):$/;"	m	class:ChainSymbolizer
__init__	lib/asan/scripts/asan_symbolize.py	/^  def __init__(self, symbolizer_path, default_arch, system, dsym_hints=[]):$/;"	m	class:LLVMSymbolizer
__init__	lib/sanitizer_common/scripts/cpplint.py	/^  def __init__(self):$/;"	m	class:_CppLintState
__init__	lib/sanitizer_common/scripts/cpplint.py	/^  def __init__(self):$/;"	m	class:_FunctionState
__init__	lib/sanitizer_common/scripts/cpplint.py	/^  def __init__(self):$/;"	m	class:_IncludeState
__init__	lib/sanitizer_common/scripts/cpplint.py	/^  def __init__(self):$/;"	m	class:_NestingState
__init__	lib/sanitizer_common/scripts/cpplint.py	/^  def __init__(self, filename):$/;"	m	class:FileInfo
__init__	lib/sanitizer_common/scripts/cpplint.py	/^  def __init__(self, lines):$/;"	m	class:CleansedLines
__init__	lib/sanitizer_common/scripts/cpplint.py	/^  def __init__(self, name, class_or_struct, clean_lines, linenum):$/;"	m	class:_ClassInfo
__init__	lib/sanitizer_common/scripts/cpplint.py	/^  def __init__(self, name, linenum):$/;"	m	class:_NamespaceInfo
__init__	lib/sanitizer_common/scripts/cpplint.py	/^  def __init__(self, seen_open_brace):$/;"	m	class:_BlockInfo
__init__	lib/sanitizer_common/scripts/cpplint.py	/^  def __init__(self, stack_before_if):$/;"	m	class:_PreprocessorInfo
__intercept_seh	lib/asan/asan_win.cc	/^__declspec(allocate(".CRT$XCAB")) int (*__intercept_seh)() =$/;"	m	namespace:__asan	file:
__interception	lib/interception/interception.h	/^namespace __interception {$/;"	n
__interception	lib/interception/interception_linux.cc	/^namespace __interception {$/;"	n	file:
__interception	lib/interception/interception_linux.h	/^namespace __interception {$/;"	n
__interception	lib/interception/interception_win.cc	/^namespace __interception {$/;"	n	file:
__interception	lib/interception/interception_win.h	/^namespace __interception {$/;"	n
__interception	lib/interception/tests/interception_linux_test.cc	/^namespace __interception {$/;"	n	file:
__interception	lib/interception/tests/interception_win_test.cc	/^namespace __interception {$/;"	n	file:
__interception	lib/sanitizer_common/sanitizer_internal_defs.h	/^namespace __interception  { using namespace __sanitizer; }  \/\/ NOLINT$/;"	n
__interceptor___sigsetjmp	lib/tsan/rtl/tsan_interceptors.cc	/^extern "C" int __interceptor___sigsetjmp(void *env) {$/;"	f
__interceptor__setjmp	lib/tsan/rtl/tsan_interceptors.cc	/^extern "C" int __interceptor__setjmp(void *env) {$/;"	f
__interceptor_memcpy	lib/tsan/tests/rtl/tsan_posix_util.h	20;"	d
__interceptor_memset	lib/tsan/tests/rtl/tsan_posix_util.h	21;"	d
__interceptor_pthread_cond_broadcast	lib/tsan/tests/rtl/tsan_posix_util.h	39;"	d
__interceptor_pthread_cond_destroy	lib/tsan/tests/rtl/tsan_posix_util.h	41;"	d
__interceptor_pthread_cond_init	lib/tsan/tests/rtl/tsan_posix_util.h	37;"	d
__interceptor_pthread_cond_signal	lib/tsan/tests/rtl/tsan_posix_util.h	38;"	d
__interceptor_pthread_cond_wait	lib/tsan/tests/rtl/tsan_posix_util.h	40;"	d
__interceptor_pthread_create	lib/tsan/tests/rtl/tsan_posix_util.h	22;"	d
__interceptor_pthread_detach	lib/tsan/tests/rtl/tsan_posix_util.h	24;"	d
__interceptor_pthread_join	lib/tsan/tests/rtl/tsan_posix_util.h	23;"	d
__interceptor_pthread_mutex_destroy	lib/tsan/tests/rtl/tsan_posix_util.h	28;"	d
__interceptor_pthread_mutex_init	lib/tsan/tests/rtl/tsan_posix_util.h	25;"	d
__interceptor_pthread_mutex_lock	lib/tsan/tests/rtl/tsan_posix_util.h	26;"	d
__interceptor_pthread_mutex_trylock	lib/tsan/tests/rtl/tsan_posix_util.h	29;"	d
__interceptor_pthread_mutex_unlock	lib/tsan/tests/rtl/tsan_posix_util.h	27;"	d
__interceptor_pthread_rwlock_destroy	lib/tsan/tests/rtl/tsan_posix_util.h	31;"	d
__interceptor_pthread_rwlock_init	lib/tsan/tests/rtl/tsan_posix_util.h	30;"	d
__interceptor_pthread_rwlock_rdlock	lib/tsan/tests/rtl/tsan_posix_util.h	35;"	d
__interceptor_pthread_rwlock_tryrdlock	lib/tsan/tests/rtl/tsan_posix_util.h	36;"	d
__interceptor_pthread_rwlock_trywrlock	lib/tsan/tests/rtl/tsan_posix_util.h	32;"	d
__interceptor_pthread_rwlock_unlock	lib/tsan/tests/rtl/tsan_posix_util.h	34;"	d
__interceptor_pthread_rwlock_wrlock	lib/tsan/tests/rtl/tsan_posix_util.h	33;"	d
__isOSVersionAtLeast	lib/builtins/os_version_check.c	/^int32_t __isOSVersionAtLeast(int32_t Major, int32_t Minor, int32_t Subminor) {$/;"	f
__kernel_fd_set	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^CHECK_TYPE_SIZE(__kernel_fd_set);$/;"	v
__kernel_gid_t	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^CHECK_TYPE_SIZE(__kernel_gid_t);$/;"	v
__kernel_loff_t	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^CHECK_TYPE_SIZE(__kernel_loff_t);$/;"	v
__kernel_off_t	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^CHECK_TYPE_SIZE(__kernel_off_t);$/;"	v
__kernel_old_gid_t	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^CHECK_TYPE_SIZE(__kernel_old_gid_t);$/;"	v
__kernel_old_uid_t	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^CHECK_TYPE_SIZE(__kernel_old_uid_t);$/;"	v
__kernel_uid_t	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^CHECK_TYPE_SIZE(__kernel_uid_t);$/;"	v
__key	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    int __key;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
__ledf2	lib/builtins/comparedf2.c	/^__ledf2(fp_t a, fp_t b) {$/;"	f
__lesf2	lib/builtins/comparesf2.c	/^__lesf2(fp_t a, fp_t b) {$/;"	f
__letf2	lib/builtins/comparetf2.c	/^COMPILER_RT_ABI enum LE_RESULT __letf2(fp_t a, fp_t b) {$/;"	f
__libc_free	lib/sanitizer_common/sanitizer_allocator.cc	49;"	d	file:
__libc_malloc	lib/sanitizer_common/sanitizer_allocator.cc	39;"	d	file:
__libc_memalign	lib/sanitizer_common/sanitizer_allocator.cc	/^static void *__libc_memalign(uptr alignment, uptr size) {$/;"	f	namespace:__sanitizer
__libc_realloc	lib/sanitizer_common/sanitizer_allocator.cc	48;"	d	file:
__libc_stack_end	lib/tsan/rtl/tsan_platform_linux.cc	/^extern "C" void *__libc_stack_end;$/;"	v
__libc_stack_end	lib/tsan/rtl/tsan_platform_linux.cc	/^void *__libc_stack_end = 0;$/;"	v
__libfuzzer_is_present	lib/fuzzer/FuzzerDriver.cpp	/^extern "C" __attribute__((used)) void __libfuzzer_is_present() {}$/;"	f
__llvm_get_function_addr	lib/profile/InstrProfilingValue.c	/^__llvm_get_function_addr(const __llvm_profile_data *Data) {$/;"	f
__llvm_profile_begin_counters	lib/profile/InstrProfilingPlatformDarwin.c	/^uint64_t *__llvm_profile_begin_counters(void) { return &CountersStart; }$/;"	f
__llvm_profile_begin_counters	lib/profile/InstrProfilingPlatformLinux.c	/^COMPILER_RT_VISIBILITY uint64_t *__llvm_profile_begin_counters(void) {$/;"	f
__llvm_profile_begin_counters	lib/profile/InstrProfilingPlatformOther.c	/^uint64_t *__llvm_profile_begin_counters(void) { return CountersFirst; }$/;"	f
__llvm_profile_begin_data	lib/profile/InstrProfilingPlatformDarwin.c	/^const __llvm_profile_data *__llvm_profile_begin_data(void) {$/;"	f
__llvm_profile_begin_data	lib/profile/InstrProfilingPlatformLinux.c	/^__llvm_profile_begin_data(void) {$/;"	f
__llvm_profile_begin_data	lib/profile/InstrProfilingPlatformOther.c	/^const __llvm_profile_data *__llvm_profile_begin_data(void) { return DataFirst; }$/;"	f
__llvm_profile_begin_names	lib/profile/InstrProfilingPlatformDarwin.c	/^const char *__llvm_profile_begin_names(void) { return &NamesStart; }$/;"	f
__llvm_profile_begin_names	lib/profile/InstrProfilingPlatformLinux.c	/^COMPILER_RT_VISIBILITY const char *__llvm_profile_begin_names(void) {$/;"	f
__llvm_profile_begin_names	lib/profile/InstrProfilingPlatformOther.c	/^const char *__llvm_profile_begin_names(void) { return NamesFirst; }$/;"	f
__llvm_profile_begin_vnodes	lib/profile/InstrProfilingPlatformDarwin.c	/^ValueProfNode *__llvm_profile_begin_vnodes(void) {$/;"	f
__llvm_profile_begin_vnodes	lib/profile/InstrProfilingPlatformLinux.c	/^__llvm_profile_begin_vnodes(void) {$/;"	f
__llvm_profile_begin_vnodes	lib/profile/InstrProfilingPlatformOther.c	/^ValueProfNode *__llvm_profile_begin_vnodes(void) {$/;"	f
__llvm_profile_check_compatibility	lib/profile/InstrProfilingMerge.c	/^int __llvm_profile_check_compatibility(const char *ProfileData,$/;"	f
__llvm_profile_data	lib/profile/InstrProfiling.h	/^    __llvm_profile_data {$/;"	s
__llvm_profile_data	lib/profile/InstrProfiling.h	/^} __llvm_profile_data;$/;"	t	typeref:struct:__llvm_profile_data
__llvm_profile_data	test/profile/instrprof-value-prof-2.c	/^typedef struct __llvm_profile_data __llvm_profile_data;$/;"	t	typeref:struct:__llvm_profile_data	file:
__llvm_profile_data	test/profile/instrprof-value-prof.c	/^typedef struct __llvm_profile_data __llvm_profile_data;$/;"	t	typeref:struct:__llvm_profile_data	file:
__llvm_profile_dump	lib/profile/InstrProfilingFile.c	/^int __llvm_profile_dump(void) {$/;"	f
__llvm_profile_dump	lib/profile/InstrProfilingPlatformFuchsia.c	/^int __llvm_profile_dump(void) {$/;"	f
__llvm_profile_end_counters	lib/profile/InstrProfilingPlatformDarwin.c	/^uint64_t *__llvm_profile_end_counters(void) { return &CountersEnd; }$/;"	f
__llvm_profile_end_counters	lib/profile/InstrProfilingPlatformLinux.c	/^COMPILER_RT_VISIBILITY uint64_t *__llvm_profile_end_counters(void) {$/;"	f
__llvm_profile_end_counters	lib/profile/InstrProfilingPlatformOther.c	/^uint64_t *__llvm_profile_end_counters(void) { return CountersLast; }$/;"	f
__llvm_profile_end_data	lib/profile/InstrProfilingPlatformDarwin.c	/^const __llvm_profile_data *__llvm_profile_end_data(void) { return &DataEnd; }$/;"	f
__llvm_profile_end_data	lib/profile/InstrProfilingPlatformLinux.c	/^__llvm_profile_end_data(void) {$/;"	f
__llvm_profile_end_data	lib/profile/InstrProfilingPlatformOther.c	/^const __llvm_profile_data *__llvm_profile_end_data(void) { return DataLast; }$/;"	f
__llvm_profile_end_names	lib/profile/InstrProfilingPlatformDarwin.c	/^const char *__llvm_profile_end_names(void) { return &NamesEnd; }$/;"	f
__llvm_profile_end_names	lib/profile/InstrProfilingPlatformLinux.c	/^COMPILER_RT_VISIBILITY const char *__llvm_profile_end_names(void) {$/;"	f
__llvm_profile_end_names	lib/profile/InstrProfilingPlatformOther.c	/^const char *__llvm_profile_end_names(void) { return NamesLast; }$/;"	f
__llvm_profile_end_vnodes	lib/profile/InstrProfilingPlatformDarwin.c	/^ValueProfNode *__llvm_profile_end_vnodes(void) { return &VNodesEnd; }$/;"	f
__llvm_profile_end_vnodes	lib/profile/InstrProfilingPlatformLinux.c	/^COMPILER_RT_VISIBILITY ValueProfNode *__llvm_profile_end_vnodes(void) {$/;"	f
__llvm_profile_end_vnodes	lib/profile/InstrProfilingPlatformOther.c	/^ValueProfNode *__llvm_profile_end_vnodes(void) { return 0; }$/;"	f
__llvm_profile_get_data_size	lib/profile/InstrProfilingBuffer.c	/^uint64_t __llvm_profile_get_data_size(const __llvm_profile_data *Begin,$/;"	f
__llvm_profile_get_dir_mode	lib/profile/InstrProfilingUtil.c	/^unsigned __llvm_profile_get_dir_mode(void) { return lprofDirMode; }$/;"	f
__llvm_profile_get_filename	lib/profile/InstrProfilingFile.c	/^const char *__llvm_profile_get_filename(void) {$/;"	f
__llvm_profile_get_magic	lib/profile/InstrProfiling.c	/^COMPILER_RT_VISIBILITY uint64_t __llvm_profile_get_magic(void) {$/;"	f
__llvm_profile_get_num_padding_bytes	lib/profile/InstrProfiling.c	/^__llvm_profile_get_num_padding_bytes(uint64_t SizeInBytes) {$/;"	f
__llvm_profile_get_path_prefix	lib/profile/InstrProfilingFile.c	/^const char *__llvm_profile_get_path_prefix(void) {$/;"	f
__llvm_profile_get_size_for_buffer	lib/profile/InstrProfilingBuffer.c	/^uint64_t __llvm_profile_get_size_for_buffer(void) {$/;"	f
__llvm_profile_get_size_for_buffer_internal	lib/profile/InstrProfilingBuffer.c	/^uint64_t __llvm_profile_get_size_for_buffer_internal($/;"	f
__llvm_profile_get_version	lib/profile/InstrProfiling.c	/^COMPILER_RT_VISIBILITY uint64_t __llvm_profile_get_version(void) {$/;"	f
__llvm_profile_header	lib/profile/InstrProfiling.h	/^typedef struct __llvm_profile_header {$/;"	s
__llvm_profile_header	lib/profile/InstrProfiling.h	/^} __llvm_profile_header;$/;"	t	typeref:struct:__llvm_profile_header
__llvm_profile_initialize_file	lib/profile/InstrProfilingFile.c	/^void __llvm_profile_initialize_file(void) {$/;"	f
__llvm_profile_initialize_file	lib/profile/InstrProfilingPlatformFuchsia.c	/^void __llvm_profile_initialize_file(void) {}$/;"	f
__llvm_profile_instrument_range	lib/profile/InstrProfilingValue.c	/^COMPILER_RT_VISIBILITY void __llvm_profile_instrument_range($/;"	f
__llvm_profile_instrument_target	lib/profile/InstrProfilingValue.c	/^__llvm_profile_instrument_target(uint64_t TargetValue, void *Data,$/;"	f
__llvm_profile_instrument_target_value	lib/profile/InstrProfilingValue.c	/^__llvm_profile_instrument_target_value(uint64_t TargetValue, void *Data,$/;"	f
__llvm_profile_iterate_data	lib/profile/InstrProfilingValue.c	/^__llvm_profile_iterate_data(const __llvm_profile_data *Data) {$/;"	f
__llvm_profile_merge_from_buffer	lib/profile/InstrProfilingMerge.c	/^void __llvm_profile_merge_from_buffer(const char *ProfileData,$/;"	f
__llvm_profile_offset	lib/profile/InstrProfilingPlatformFuchsia.c	/^uint64_t __llvm_profile_offset;$/;"	v
__llvm_profile_raw_version	test/profile/instrprof-version-mismatch.c	/^unsigned long long __llvm_profile_raw_version = 10000;$/;"	v
__llvm_profile_recursive_mkdir	lib/profile/InstrProfilingUtil.c	/^void __llvm_profile_recursive_mkdir(char *path) {$/;"	f
__llvm_profile_register_function	lib/profile/InstrProfilingPlatformOther.c	/^void __llvm_profile_register_function(void *Data_) {$/;"	f
__llvm_profile_register_names_function	lib/profile/InstrProfilingPlatformOther.c	/^void __llvm_profile_register_names_function(void *NamesStart,$/;"	f
__llvm_profile_register_write_file_atexit	lib/profile/InstrProfilingFile.c	/^int __llvm_profile_register_write_file_atexit(void) {$/;"	f
__llvm_profile_register_write_file_atexit	lib/profile/InstrProfilingPlatformFuchsia.c	/^int __llvm_profile_register_write_file_atexit(void) {$/;"	f
__llvm_profile_reset_counters	lib/profile/InstrProfiling.c	/^COMPILER_RT_VISIBILITY void __llvm_profile_reset_counters(void) {$/;"	f
__llvm_profile_runtime	test/profile/Inputs/instrprof-merge-match-lib.c	/^int __llvm_profile_runtime = 0;$/;"	v
__llvm_profile_runtime	test/profile/Inputs/instrprof-merge-match.c	/^int __llvm_profile_runtime = 0;$/;"	v
__llvm_profile_runtime	test/profile/Linux/instrprof-merge-vp.c	/^int __llvm_profile_runtime = 0;$/;"	v
__llvm_profile_runtime	test/profile/instrprof-bufferio.c	/^int __llvm_profile_runtime = 0;$/;"	v
__llvm_profile_runtime	test/profile/instrprof-merge.c	/^int __llvm_profile_runtime = 0;$/;"	v
__llvm_profile_runtime	test/profile/instrprof-without-libc.c	/^int __llvm_profile_runtime = 0;$/;"	v
__llvm_profile_runtime	test/profile/instrprof-write-file-atexit-explicitly.c	/^int __llvm_profile_runtime = 0;$/;"	v
__llvm_profile_runtime	test/profile/instrprof-write-file-only.c	/^int __llvm_profile_runtime = 0;$/;"	v
__llvm_profile_set_dir_mode	lib/profile/InstrProfilingUtil.c	/^void __llvm_profile_set_dir_mode(unsigned Mode) { lprofDirMode = Mode; }$/;"	f
__llvm_profile_set_filename	lib/profile/InstrProfilingFile.c	/^void __llvm_profile_set_filename(const char *FilenamePat) {$/;"	f
__llvm_profile_set_num_value_sites	lib/profile/InstrProfilingValue.c	/^__llvm_profile_set_num_value_sites(__llvm_profile_data *Data,$/;"	f
__llvm_profile_vmo	lib/profile/InstrProfilingPlatformFuchsia.c	/^zx_handle_t __llvm_profile_vmo;$/;"	v
__llvm_profile_write_buffer	lib/profile/InstrProfilingBuffer.c	/^COMPILER_RT_VISIBILITY int __llvm_profile_write_buffer(char *Buffer) {$/;"	f
__llvm_profile_write_buffer_internal	lib/profile/InstrProfilingBuffer.c	/^COMPILER_RT_VISIBILITY int __llvm_profile_write_buffer_internal($/;"	f
__llvm_profile_write_file	lib/profile/InstrProfilingFile.c	/^int __llvm_profile_write_file(void) {$/;"	f
__local_asan_preinit	lib/asan/asan_preinit.cc	/^  void (*__local_asan_preinit)(void) = __asan_init;$/;"	v
__local_fini	test/scudo/preinit.c	/^  void (*__local_fini)(void) = __fini;$/;"	v
__local_lsan_preinit	lib/lsan/lsan_preinit.cc	/^  void (*__local_lsan_preinit)(void) = __lsan_init;$/;"	v
__local_preinit	test/scudo/preinit.c	/^  void (*__local_preinit)(void) = __init;$/;"	v
__local_test_preinit	test/asan/TestCases/Linux/preinstalled_signal.cc	/^void (*__local_test_preinit)(void) = Init;$/;"	v
__local_tsan_preinit	lib/tsan/rtl/tsan_preinit.cc	/^void (*__local_tsan_preinit)(void) = __tsan_init;$/;"	v
__local_ubsan_preinit	lib/ubsan/ubsan_init_standalone_preinit.cc	/^__attribute__((section(".preinit_array"), used)) void (*__local_ubsan_preinit)($/;"	v
__local_xray_dyninit	lib/xray/xray_init.cc	/^static bool UNUSED __local_xray_dyninit = [] {$/;"	v	file:
__local_xray_preinit	lib/xray/xray_init.cc	/^               used)) void (*__local_xray_preinit)(void) = __xray_init;$/;"	v
__lsan	include/sanitizer/lsan_interface.h	/^namespace __lsan {$/;"	n
__lsan	lib/asan/asan_allocator.cc	/^namespace __lsan {$/;"	n	file:
__lsan	lib/asan/asan_poisoning.cc	/^namespace __lsan {$/;"	n	file:
__lsan	lib/asan/asan_thread.cc	/^namespace __lsan {$/;"	n	file:
__lsan	lib/lsan/lsan.cc	/^namespace __lsan {$/;"	n	file:
__lsan	lib/lsan/lsan.h	/^namespace __lsan {$/;"	n
__lsan	lib/lsan/lsan_allocator.cc	/^namespace __lsan {$/;"	n	file:
__lsan	lib/lsan/lsan_allocator.h	/^namespace __lsan {$/;"	n
__lsan	lib/lsan/lsan_common.cc	/^namespace __lsan {$/;"	n	file:
__lsan	lib/lsan/lsan_common.h	/^namespace __lsan {$/;"	n
__lsan	lib/lsan/lsan_common_linux.cc	/^namespace __lsan {$/;"	n	file:
__lsan	lib/lsan/lsan_common_mac.cc	/^namespace __lsan {$/;"	n	file:
__lsan	lib/lsan/lsan_interceptors.cc	/^namespace __lsan {$/;"	n	namespace:std	file:
__lsan	lib/lsan/lsan_linux.cc	/^namespace __lsan {$/;"	n	file:
__lsan	lib/lsan/lsan_mac.cc	/^namespace __lsan {$/;"	n	file:
__lsan	lib/lsan/lsan_thread.cc	/^namespace __lsan {$/;"	n	file:
__lsan	lib/lsan/lsan_thread.h	/^namespace __lsan {$/;"	n
__lsan	lib/sanitizer_common/sanitizer_internal_defs.h	/^namespace __lsan  { using namespace __sanitizer; }  \/\/ NOLINT$/;"	n
__lsan_default_options	lib/lsan/lsan_common.cc	/^const char * __lsan_default_options() {$/;"	f
__lsan_default_options	test/lsan/TestCases/default_options.cc	/^const char *__lsan_default_options() {$/;"	f
__lsan_default_suppressions	lib/lsan/lsan_common.cc	/^const char *__lsan_default_suppressions() {$/;"	f
__lsan_default_suppressions	test/lsan/TestCases/print_suppressions.cc	/^const char *__lsan_default_suppressions() {$/;"	f
__lsan_default_suppressions	test/lsan/TestCases/suppressions_default.cc	/^const char *__lsan_default_suppressions() {$/;"	f
__lsan_disable	lib/lsan/lsan_common.cc	/^void __lsan_disable() {$/;"	f
__lsan_do_leak_check	lib/lsan/lsan_common.cc	/^void __lsan_do_leak_check() {$/;"	f
__lsan_do_recoverable_leak_check	lib/lsan/lsan_common.cc	/^int __lsan_do_recoverable_leak_check() {$/;"	f
__lsan_enable	lib/lsan/lsan_common.cc	/^void __lsan_enable() {$/;"	f
__lsan_ignore_object	lib/lsan/lsan_common.cc	/^void __lsan_ignore_object(const void *p) {$/;"	f
__lsan_init	lib/lsan/lsan.cc	/^extern "C" void __lsan_init() {$/;"	f
__lsan_is_turned_off	lib/lsan/lsan_common.cc	/^int __lsan_is_turned_off() {$/;"	f
__lsan_is_turned_off	test/lsan/TestCases/link_turned_off.cc	/^int __attribute__((used)) __lsan_is_turned_off() {$/;"	f
__lsan_register_root_region	lib/lsan/lsan_common.cc	/^void __lsan_register_root_region(const void *begin, uptr size) {$/;"	f
__lsan_thread_start_func	lib/lsan/lsan_interceptors.cc	/^extern "C" void *__lsan_thread_start_func(void *arg) {$/;"	f	namespace:std
__lsan_unregister_root_region	lib/lsan/lsan_common.cc	/^void __lsan_unregister_root_region(const void *begin, uptr size) {$/;"	f
__lshrdi3	lib/builtins/lshrdi3.c	/^AEABI_RTABI di_int __aeabi_llsr(di_int a, si_int b) COMPILER_RT_ALIAS(__lshrdi3);$/;"	v
__lshrdi3	lib/builtins/lshrdi3.c	/^__lshrdi3(di_int a, si_int b)$/;"	f
__lshrti3	lib/builtins/lshrti3.c	/^__lshrti3(ti_int a, si_int b)$/;"	f
__ltdf2	lib/builtins/comparedf2.c	/^__ltdf2(fp_t a, fp_t b) {$/;"	f
__ltsf2	lib/builtins/comparesf2.c	/^__ltsf2(fp_t a, fp_t b) {$/;"	f
__lttf2	lib/builtins/comparetf2.c	/^COMPILER_RT_ABI enum LE_RESULT __lttf2(fp_t a, fp_t b) {$/;"	f
__lxstat	lib/sanitizer_common/symbolizer/sanitizer_wrappers.cc	/^int __lxstat(int version, const char *path, struct stat *buf) {$/;"	f
__mmap_alloc_aligned	lib/sanitizer_common/sanitizer_rtems.cc	33;"	d	file:
__mmap_free	lib/sanitizer_common/sanitizer_rtems.cc	34;"	d	file:
__mmap_memset	lib/sanitizer_common/sanitizer_rtems.cc	35;"	d	file:
__moddi3	lib/builtins/moddi3.c	/^__moddi3(di_int a, di_int b)$/;"	f
__modsi3	lib/builtins/modsi3.c	/^__modsi3(si_int a, si_int b)$/;"	f
__modti3	lib/builtins/modti3.c	/^__modti3(ti_int a, ti_int b)$/;"	f
__msan	lib/msan/msan.cc	/^namespace __msan {$/;"	n	file:
__msan	lib/msan/msan.h	/^namespace __msan {$/;"	n
__msan	lib/msan/msan_allocator.cc	/^namespace __msan {$/;"	n	file:
__msan	lib/msan/msan_allocator.h	/^namespace __msan {$/;"	n
__msan	lib/msan/msan_chained_origin_depot.cc	/^namespace __msan {$/;"	n	file:
__msan	lib/msan/msan_chained_origin_depot.h	/^namespace __msan {$/;"	n
__msan	lib/msan/msan_flags.h	/^namespace __msan {$/;"	n
__msan	lib/msan/msan_interceptors.cc	/^namespace __msan {$/;"	n	file:
__msan	lib/msan/msan_linux.cc	/^namespace __msan {$/;"	n	file:
__msan	lib/msan/msan_origin.h	/^namespace __msan {$/;"	n
__msan	lib/msan/msan_poisoning.cc	/^namespace __msan {$/;"	n	file:
__msan	lib/msan/msan_poisoning.h	/^namespace __msan {$/;"	n
__msan	lib/msan/msan_report.cc	/^namespace __msan {$/;"	n	file:
__msan	lib/msan/msan_report.h	/^namespace __msan {$/;"	n
__msan	lib/msan/msan_thread.cc	/^namespace __msan {$/;"	n	file:
__msan	lib/msan/msan_thread.h	/^namespace __msan {$/;"	n
__msan	lib/sanitizer_common/sanitizer_internal_defs.h	/^namespace __msan  { using namespace __sanitizer; }  \/\/ NOLINT$/;"	n
__msan_allocated_memory	lib/msan/msan_interceptors.cc	/^void __msan_allocated_memory(const void *data, uptr size) {$/;"	f
__msan_chain_origin	lib/msan/msan.cc	/^u32 __msan_chain_origin(u32 id) {$/;"	f
__msan_check_mem_is_initialized	lib/msan/msan.cc	/^void __msan_check_mem_is_initialized(const void *x, uptr size) {$/;"	f
__msan_clear_and_unpoison	lib/msan/msan_interceptors.cc	/^void __msan_clear_and_unpoison(void *a, uptr size) {$/;"	f
__msan_clear_on_return	lib/msan/msan.cc	/^void __msan_clear_on_return() {$/;"	f
__msan_copy_shadow	lib/msan/msan_interceptors.cc	/^void __msan_copy_shadow(void *dest, const void *src, uptr n) {$/;"	f
__msan_default_options	lib/msan/msan.cc	/^const char* __msan_default_options() { return ""; }$/;"	f
__msan_dump_shadow	lib/msan/msan.cc	/^void __msan_dump_shadow(const void *x, uptr size) {$/;"	f
__msan_get_origin	lib/msan/msan.cc	/^u32 __msan_get_origin(const void *a) {$/;"	f
__msan_get_track_origins	lib/msan/msan.cc	/^int __msan_get_track_origins() {$/;"	f
__msan_get_umr_origin	lib/msan/msan.cc	/^u32 __msan_get_umr_origin() {$/;"	f
__msan_has_dynamic_component	lib/msan/msan.cc	/^int __msan_has_dynamic_component() { return false; }$/;"	f
__msan_init	lib/msan/msan.cc	/^void __msan_init() {$/;"	f
__msan_keep_going	lib/msan/msan.cc	/^extern "C" SANITIZER_WEAK_ATTRIBUTE const int __msan_keep_going;$/;"	v
__msan_load_unpoisoned	lib/msan/msan.cc	/^void __msan_load_unpoisoned(const void *src, uptr size, void *dst) {$/;"	f
__msan_memcpy	lib/msan/msan_interceptors.cc	/^void *__msan_memcpy(void *dest, const void *src, SIZE_T n) {$/;"	f
__msan_memmove	lib/msan/msan_interceptors.cc	/^void *__msan_memmove(void *dest, const void *src, SIZE_T n) {$/;"	f
__msan_memset	lib/msan/msan_interceptors.cc	/^void *__msan_memset(void *s, int c, SIZE_T n) {$/;"	f
__msan_origin_is_descendant_or_same	lib/msan/msan.cc	/^int __msan_origin_is_descendant_or_same(u32 this_id, u32 prev_id) {$/;"	f
__msan_origin_tls	lib/msan/msan.cc	/^THREADLOCAL u32 __msan_origin_tls;$/;"	v
__msan_param_origin_tls	lib/msan/msan.cc	/^THREADLOCAL u32 __msan_param_origin_tls[kMsanParamTlsSize \/ sizeof(u32)];$/;"	v
__msan_param_tls	lib/msan/msan.cc	/^THREADLOCAL u64 __msan_param_tls[kMsanParamTlsSize \/ sizeof(u64)];$/;"	v
__msan_partial_poison	lib/msan/msan.cc	/^void __msan_partial_poison(const void* data, void* shadow, uptr size) {$/;"	f
__msan_poison	lib/msan/msan_interceptors.cc	/^void __msan_poison(const void *a, uptr size) {$/;"	f
__msan_poison_stack	lib/msan/msan_interceptors.cc	/^void __msan_poison_stack(void *a, uptr size) {$/;"	f
__msan_print_shadow	lib/msan/msan.cc	/^void __msan_print_shadow(const void *x, uptr size) {$/;"	f
__msan_retval_origin_tls	lib/msan/msan.cc	/^THREADLOCAL u32 __msan_retval_origin_tls;$/;"	v
__msan_retval_tls	lib/msan/msan.cc	/^THREADLOCAL u64 __msan_retval_tls[kMsanRetvalTlsSize \/ sizeof(u64)];$/;"	v
__msan_scoped_disable_interceptor_checks	lib/msan/msan_interceptors.cc	/^void __msan_scoped_disable_interceptor_checks() { ++in_interceptor_scope; }$/;"	f
__msan_scoped_enable_interceptor_checks	lib/msan/msan_interceptors.cc	/^void __msan_scoped_enable_interceptor_checks() { --in_interceptor_scope; }$/;"	f
__msan_set_alloca_origin	lib/msan/msan.cc	/^void __msan_set_alloca_origin(void *a, uptr size, char *descr) {$/;"	f
__msan_set_alloca_origin4	lib/msan/msan.cc	/^void __msan_set_alloca_origin4(void *a, uptr size, char *descr, uptr pc) {$/;"	f
__msan_set_death_callback	lib/msan/msan.cc	/^void __msan_set_death_callback(void (*callback)(void)) {$/;"	f
__msan_set_expect_umr	lib/msan/msan.cc	/^void __msan_set_expect_umr(int expect_umr) {$/;"	f
__msan_set_keep_going	lib/msan/msan.cc	/^void __msan_set_keep_going(int keep_going) {$/;"	f
__msan_set_origin	lib/msan/msan.cc	/^void __msan_set_origin(const void *a, uptr size, u32 origin) {$/;"	f
__msan_set_poison_in_malloc	lib/msan/msan.cc	/^int __msan_set_poison_in_malloc(int do_poison) {$/;"	f
__msan_test_shadow	lib/msan/msan.cc	/^sptr __msan_test_shadow(const void *x, uptr size) {$/;"	f
__msan_track_origins	lib/msan/msan.cc	/^extern "C" SANITIZER_WEAK_ATTRIBUTE const int __msan_track_origins;$/;"	v
__msan_unpoison	lib/msan/msan_interceptors.cc	/^void __msan_unpoison(const void *a, uptr size) {$/;"	f
__msan_unpoison_string	lib/msan/msan_interceptors.cc	/^void __msan_unpoison_string(const char* s) {$/;"	f
__msan_va_arg_overflow_size_tls	lib/msan/msan.cc	/^THREADLOCAL u64 __msan_va_arg_overflow_size_tls;$/;"	v
__msan_va_arg_tls	lib/msan/msan.cc	/^ALIGNED(16) THREADLOCAL u64 __msan_va_arg_tls[kMsanParamTlsSize \/ sizeof(u64)];$/;"	v
__msan_warning	lib/msan/msan.cc	/^void __msan_warning() {$/;"	f
__msan_warning_noreturn	lib/msan/msan.cc	/^void __msan_warning_noreturn() {$/;"	f
__muldc3	lib/builtins/muldc3.c	/^__muldc3(double __a, double __b, double __c, double __d)$/;"	f
__mulddi3	lib/builtins/multi3.c	/^__mulddi3(du_int a, du_int b)$/;"	f	file:
__muldf3	lib/builtins/muldf3.c	/^AEABI_RTABI fp_t __aeabi_dmul(fp_t a, fp_t b) COMPILER_RT_ALIAS(__muldf3);$/;"	v
__muldf3	lib/builtins/muldf3.c	/^COMPILER_RT_ABI fp_t __muldf3(fp_t a, fp_t b) {$/;"	f
__muldi3	lib/builtins/muldi3.c	/^AEABI_RTABI di_int __aeabi_lmul(di_int a, di_int b) COMPILER_RT_ALIAS(__muldi3);$/;"	v
__muldi3	lib/builtins/muldi3.c	/^__muldi3(di_int a, di_int b)$/;"	f
__muldsi3	lib/builtins/muldi3.c	/^__muldsi3(su_int a, su_int b)$/;"	f	file:
__mulodi4	lib/builtins/mulodi4.c	/^__mulodi4(di_int a, di_int b, int* overflow)$/;"	f
__mulosi4	lib/builtins/mulosi4.c	/^__mulosi4(si_int a, si_int b, int* overflow)$/;"	f
__muloti4	lib/builtins/muloti4.c	/^__muloti4(ti_int a, ti_int b, int* overflow)$/;"	f
__mulsc3	lib/builtins/mulsc3.c	/^__mulsc3(float __a, float __b, float __c, float __d)$/;"	f
__mulsf3	lib/builtins/mulsf3.c	/^AEABI_RTABI fp_t __aeabi_fmul(fp_t a, fp_t b) COMPILER_RT_ALIAS(__mulsf3);$/;"	v
__mulsf3	lib/builtins/mulsf3.c	/^COMPILER_RT_ABI fp_t __mulsf3(fp_t a, fp_t b) {$/;"	f
__mulsi3	lib/builtins/riscv/mulsi3.S	/^__mulsi3:$/;"	l
__multc3	lib/builtins/multc3.c	/^__multc3(long double a, long double b, long double c, long double d)$/;"	f
__multc3	lib/builtins/ppc/multc3.c	/^__multc3(long double a, long double b, long double c, long double d)$/;"	f
__multf3	lib/builtins/multf3.c	/^COMPILER_RT_ABI fp_t __multf3(fp_t a, fp_t b) {$/;"	f
__multi3	lib/builtins/multi3.c	/^__multi3(ti_int a, ti_int b)$/;"	f
__mulvdi3	lib/builtins/mulvdi3.c	/^__mulvdi3(di_int a, di_int b)$/;"	f
__mulvsi3	lib/builtins/mulvsi3.c	/^__mulvsi3(si_int a, si_int b)$/;"	f
__mulvti3	lib/builtins/mulvti3.c	/^__mulvti3(ti_int a, ti_int b)$/;"	f
__mulxc3	lib/builtins/mulxc3.c	/^__mulxc3(long double __a, long double __b, long double __c, long double __d)$/;"	f
__nedf2	lib/builtins/comparedf2.c	/^__nedf2(fp_t a, fp_t b) {$/;"	f
__need_res_state	lib/tsan/rtl/tsan_platform_linux.cc	54;"	d	file:
__negdf2	lib/builtins/negdf2.c	/^AEABI_RTABI fp_t __aeabi_dneg(fp_t a) COMPILER_RT_ALIAS(__negdf2);$/;"	v
__negdf2	lib/builtins/negdf2.c	/^__negdf2(fp_t a) {$/;"	f
__negdi2	lib/builtins/negdi2.c	/^__negdi2(di_int a)$/;"	f
__negsf2	lib/builtins/negsf2.c	/^AEABI_RTABI fp_t __aeabi_fneg(fp_t a) COMPILER_RT_ALIAS(__negsf2);$/;"	v
__negsf2	lib/builtins/negsf2.c	/^__negsf2(fp_t a) {$/;"	f
__negti2	lib/builtins/negti2.c	/^__negti2(ti_int a)$/;"	f
__negvdi2	lib/builtins/negvdi2.c	/^__negvdi2(di_int a)$/;"	f
__negvsi2	lib/builtins/negvsi2.c	/^__negvsi2(si_int a)$/;"	f
__negvti2	lib/builtins/negvti2.c	/^__negvti2(ti_int a)$/;"	f
__nesf2	lib/builtins/comparesf2.c	/^__nesf2(fp_t a, fp_t b) {$/;"	f
__netf2	lib/builtins/comparetf2.c	/^COMPILER_RT_ABI enum LE_RESULT __netf2(fp_t a, fp_t b) {$/;"	f
__offset_flags	lib/ubsan/ubsan_type_hash_itanium.cc	/^  long __offset_flags;$/;"	m	class:__cxxabiv1::__base_class_type_info	file:
__offset_flags_masks	lib/ubsan/ubsan_type_hash_itanium.cc	/^  enum __offset_flags_masks {$/;"	g	class:__cxxabiv1::__base_class_type_info	file:
__offset_shift	lib/ubsan/ubsan_type_hash_itanium.cc	/^    __offset_shift = 8$/;"	e	enum:__cxxabiv1::__base_class_type_info::__offset_flags_masks	file:
__pad1	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    u32 __pad1;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
__pad1	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned short __pad1;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
__pad2	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    u32 __pad2;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
__pad2	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned short __pad2;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
__pad3	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    u32 __pad3;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
__paritydi2	lib/builtins/paritydi2.c	/^__paritydi2(di_int a)$/;"	f
__paritysi2	lib/builtins/paritysi2.c	/^__paritysi2(si_int a)$/;"	f
__parityti2	lib/builtins/parityti2.c	/^__parityti2(ti_int a)$/;"	f
__popcountdi2	lib/builtins/popcountdi2.c	/^__popcountdi2(di_int a)$/;"	f
__popcountsi2	lib/builtins/popcountsi2.c	/^__popcountsi2(si_int a)$/;"	f
__popcountti2	lib/builtins/popcountti2.c	/^__popcountti2(ti_int a)$/;"	f
__powidf2	lib/builtins/powidf2.c	/^__powidf2(double a, si_int b)$/;"	f
__powisf2	lib/builtins/powisf2.c	/^__powisf2(float a, si_int b)$/;"	f
__powitf2	lib/builtins/powitf2.c	/^__powitf2(long double a, si_int b)$/;"	f
__powixf2	lib/builtins/powixf2.c	/^__powixf2(long double a, si_int b)$/;"	f
__processor_model	lib/builtins/cpu_model.c	/^struct __processor_model {$/;"	s	file:
__progname	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^extern "C" SANITIZER_WEAK_ATTRIBUTE char *__progname;$/;"	m	namespace:__sanitizer	file:
__progname	lib/scudo/scudo_utils.cpp	/^extern "C" SANITIZER_WEAK_ATTRIBUTE char *__progname;$/;"	m	namespace:__scudo	file:
__public_mask	lib/ubsan/ubsan_type_hash_itanium.cc	/^    __public_mask = 0x2,$/;"	e	enum:__cxxabiv1::__base_class_type_info::__offset_flags_masks	file:
__run_atexit	lib/sanitizer_common/sanitizer_win.cc	/^__declspec(allocate(".CRT$XID")) int (*__run_atexit)() = RunAtexit;$/;"	m	namespace:__sanitizer	file:
__sF_size	lib/tsan/rtl/tsan_interceptors.cc	48;"	d	file:
__safestack_init	lib/safestack/safestack.cc	/^void __safestack_init() {$/;"	f
__safestack_preinit	lib/safestack/safestack.cc	/^               used)) void (*__safestack_preinit)(void) = __safestack_init;$/;"	v
__safestack_unsafe_stack_ptr	lib/safestack/safestack.cc	/^    "default"))) __thread void *__safestack_unsafe_stack_ptr = nullptr;$/;"	v
__sancov	lib/sanitizer_common/sancov_flags.cc	/^namespace __sancov {$/;"	n	file:
__sancov	lib/sanitizer_common/sancov_flags.h	/^namespace __sancov {$/;"	n
__sancov	lib/sanitizer_common/sanitizer_coverage_fuchsia.cc	/^namespace __sancov {$/;"	n	file:
__sancov	lib/sanitizer_common/sanitizer_coverage_libcdep_new.cc	/^namespace __sancov {$/;"	n	file:
__sancov_lowest_stack	lib/fuzzer/FuzzerTracePC.cpp	/^thread_local uintptr_t __sancov_lowest_stack;$/;"	v
__sancov_lowest_stack	lib/sanitizer_common/sanitizer_coverage_libcdep_new.cc	/^SANITIZER_TLS_INITIAL_EXEC_ATTRIBUTE uptr __sancov_lowest_stack;$/;"	v
__sancov_lowest_stack	test/sanitizer_common/TestCases/sanitizer_coverage_stack_depth.cc	/^thread_local uintptr_t __sancov_lowest_stack;$/;"	v
__sancov_trace_pc_guard_8bit_counters	lib/fuzzer/FuzzerTracePC.cpp	/^uint8_t __sancov_trace_pc_guard_8bit_counters[fuzzer::TracePC::kNumPCs];$/;"	v
__sancov_trace_pc_pcs	lib/fuzzer/FuzzerTracePC.cpp	/^uintptr_t __sancov_trace_pc_pcs[fuzzer::TracePC::kNumPCs];$/;"	v
__sanitizer	lib/asan/asan_thread.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/asan/tests/asan_test_main.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/esan/esan_interceptors.cpp	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/lsan/lsan_common.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/lsan/lsan_thread.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_addrhashmap.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_allocator.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_allocator.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_allocator_checks.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_allocator_checks.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_allocator_internal.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_allocator_report.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_allocator_report.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_atomic.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_atomic_clang.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_atomic_clang_mips.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_atomic_clang_other.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_atomic_clang_x86.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_atomic_msvc.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_bitvector.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_bvgraph.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_common.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_common.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_common_libcdep.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_common_nolibc.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_coverage_fuchsia.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_coverage_libcdep_new.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_dbghelp.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_deadlock_detector1.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_deadlock_detector_interface.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_errno.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_errno_codes.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_file.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_file.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_flag_parser.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_flag_parser.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_flags.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_flags.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_freebsd.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_fuchsia.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_fuchsia.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_internal_defs.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_lfstack.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_libc.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_libc.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_libignore.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_libignore.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_linux.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_linux.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_linux_s390.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_list.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_mac.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_mac.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_mac_libcdep.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_mutex.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_openbsd.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_persistent_allocator.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_persistent_allocator.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_platform_limits_linux.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_posix.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_posix.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_posix_libcdep.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_printf.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_procmaps.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_procmaps_bsd.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_procmaps_common.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_procmaps_linux.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_procmaps_mac.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_procmaps_solaris.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_quarantine.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_report_decorator.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_rtems.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_solaris.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_stackdepot.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_stackdepot.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_stackdepotbase.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_stacktrace.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_stacktrace.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_stacktrace_libcdep.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_stacktrace_printer.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_stacktrace_printer.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_stacktrace_sparc.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_stoptheworld.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_stoptheworld_mac.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_suppressions.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_suppressions.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_symbolizer.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_symbolizer.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_symbolizer_fuchsia.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_symbolizer_internal.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_symbolizer_libbacktrace.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_symbolizer_libbacktrace.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_symbolizer_libcdep.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_symbolizer_mac.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_symbolizer_mac.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_symbolizer_markup.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_symbolizer_report.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_symbolizer_rtems.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_symbolizer_win.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_termination.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_thread_registry.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_thread_registry.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_tls_get_addr.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_tls_get_addr.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_unwind_linux_libcdep.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_vector.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_win.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_win.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_win_dll_thunk.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_win_dll_thunk.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/sanitizer_win_weak_interception.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/sanitizer_win_weak_interception.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/sanitizer_common/symbolizer/sanitizer_symbolize.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/symbolizer/sanitizer_wrappers.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/tests/sanitizer_atomic_test.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/tests/sanitizer_common_test.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/tests/sanitizer_flags_test.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/tests/sanitizer_linux_test.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/tests/sanitizer_list_test.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/tests/sanitizer_mutex_test.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/tests/sanitizer_posix_test.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/tests/sanitizer_printf_test.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/tests/sanitizer_procmaps_test.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/tests/sanitizer_quarantine_test.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/tests/sanitizer_stackdepot_test.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/tests/sanitizer_stacktrace_printer_test.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/tests/sanitizer_stacktrace_test.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/tests/sanitizer_stoptheworld_test.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/tests/sanitizer_suppressions_test.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/tests/sanitizer_symbolizer_test.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/tests/sanitizer_thread_registry_test.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/sanitizer_common/tests/sanitizer_vector_test.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/scudo/scudo_termination.cpp	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/scudo/scudo_utils.cpp	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/stats/stats.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/tsan/tests/rtl/tsan_test.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/tsan/tests/unit/tsan_unit_test_main.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	lib/ubsan/ubsan_flags.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lib/ubsan_minimal/ubsan_minimal_handlers.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer	test/sanitizer_common/TestCases/Linux/abort_on_error.cc	/^namespace __sanitizer {$/;"	n	file:
__sanitizer_FILE	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^typedef char __sanitizer_FILE;$/;"	t	namespace:__sanitizer
__sanitizer_FILE	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^typedef char __sanitizer_FILE;$/;"	t	namespace:__sanitizer
__sanitizer_FILE	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  struct __sanitizer_FILE {$/;"	s	namespace:__sanitizer
__sanitizer_FILE	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  typedef void __sanitizer_FILE;$/;"	t	namespace:__sanitizer
__sanitizer_FILE	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^typedef void __sanitizer_FILE;$/;"	t	namespace:__sanitizer
__sanitizer_XDR	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  struct __sanitizer_XDR {$/;"	s	namespace:__sanitizer
__sanitizer_XDR	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_XDR {$/;"	s	namespace:__sanitizer
__sanitizer_XDR_DECODE	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  const int __sanitizer_XDR_DECODE = 1;$/;"	m	namespace:__sanitizer
__sanitizer_XDR_DECODE	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^const int __sanitizer_XDR_DECODE = 1;$/;"	m	namespace:__sanitizer
__sanitizer_XDR_ENCODE	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  const int __sanitizer_XDR_ENCODE = 0;$/;"	m	namespace:__sanitizer
__sanitizer_XDR_ENCODE	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^const int __sanitizer_XDR_ENCODE = 0;$/;"	m	namespace:__sanitizer
__sanitizer_XDR_FREE	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  const int __sanitizer_XDR_FREE = 2;$/;"	m	namespace:__sanitizer
__sanitizer_XDR_FREE	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^const int __sanitizer_XDR_FREE = 2;$/;"	m	namespace:__sanitizer
__sanitizer___kernel_fd_set	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^} __sanitizer___kernel_fd_set;$/;"	t	namespace:__sanitizer	typeref:struct:__sanitizer::__anon82
__sanitizer___kernel_fd_set	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^} __sanitizer___kernel_fd_set;$/;"	t	namespace:__sanitizer	typeref:struct:__sanitizer::__anon90
__sanitizer___kernel_fd_set	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  } __sanitizer___kernel_fd_set;$/;"	t	namespace:__sanitizer	typeref:struct:__sanitizer::__anon70
__sanitizer___kernel_gid_t	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^typedef u32 __sanitizer___kernel_gid_t;$/;"	t	namespace:__sanitizer
__sanitizer___kernel_gid_t	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^typedef u32 __sanitizer___kernel_gid_t;$/;"	t	namespace:__sanitizer
__sanitizer___kernel_gid_t	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  typedef unsigned __sanitizer___kernel_gid_t;$/;"	t	namespace:__sanitizer
__sanitizer___kernel_gid_t	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  typedef unsigned short __sanitizer___kernel_gid_t;$/;"	t	namespace:__sanitizer
__sanitizer___kernel_loff_t	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  typedef long long __sanitizer___kernel_loff_t;$/;"	t	namespace:__sanitizer
__sanitizer___kernel_off_t	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^typedef u64 __sanitizer___kernel_off_t;$/;"	t	namespace:__sanitizer
__sanitizer___kernel_off_t	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^typedef u64 __sanitizer___kernel_off_t;$/;"	t	namespace:__sanitizer
__sanitizer___kernel_off_t	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  typedef long __sanitizer___kernel_off_t;$/;"	t	namespace:__sanitizer
__sanitizer___kernel_off_t	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  typedef long long __sanitizer___kernel_off_t;$/;"	t	namespace:__sanitizer
__sanitizer___kernel_old_gid_t	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  typedef unsigned int __sanitizer___kernel_old_gid_t;$/;"	t	namespace:__sanitizer
__sanitizer___kernel_old_gid_t	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  typedef unsigned short __sanitizer___kernel_old_gid_t;$/;"	t	namespace:__sanitizer
__sanitizer___kernel_old_uid_t	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  typedef unsigned int __sanitizer___kernel_old_uid_t;$/;"	t	namespace:__sanitizer
__sanitizer___kernel_old_uid_t	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  typedef unsigned short __sanitizer___kernel_old_uid_t;$/;"	t	namespace:__sanitizer
__sanitizer___kernel_uid_t	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^typedef u32 __sanitizer___kernel_uid_t;$/;"	t	namespace:__sanitizer
__sanitizer___kernel_uid_t	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^typedef u32 __sanitizer___kernel_uid_t;$/;"	t	namespace:__sanitizer
__sanitizer___kernel_uid_t	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  typedef unsigned __sanitizer___kernel_uid_t;$/;"	t	namespace:__sanitizer
__sanitizer___kernel_uid_t	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  typedef unsigned short __sanitizer___kernel_uid_t;$/;"	t	namespace:__sanitizer
__sanitizer___sysctl_args	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^struct __sanitizer___sysctl_args {$/;"	s	namespace:__sanitizer
__sanitizer___sysctl_args	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  struct __sanitizer___sysctl_args {$/;"	s	namespace:__sanitizer
__sanitizer__obstack_chunk	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^struct __sanitizer__obstack_chunk {$/;"	s
__sanitizer_acquire_crash_state	lib/sanitizer_common/sanitizer_common.cc	/^int __sanitizer_acquire_crash_state() {$/;"	f
__sanitizer_addrinfo	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_addrinfo {$/;"	s	namespace:__sanitizer
__sanitizer_addrinfo	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^struct __sanitizer_addrinfo {$/;"	s	namespace:__sanitizer
__sanitizer_addrinfo	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  struct __sanitizer_addrinfo {$/;"	s	namespace:__sanitizer
__sanitizer_addrinfo	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_addrinfo {$/;"	s	namespace:__sanitizer
__sanitizer_aiocb	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_aiocb {$/;"	s	namespace:__sanitizer
__sanitizer_annotate_contiguous_container	lib/asan/asan_poisoning.cc	/^void __sanitizer_annotate_contiguous_container(const void *beg_p,$/;"	f
__sanitizer_before_thread_create_hook	lib/asan/asan_fuchsia.cc	/^void *__sanitizer_before_thread_create_hook(thrd_t thread, bool detached,$/;"	f
__sanitizer_before_thread_create_hook	lib/asan/asan_rtems.cc	/^void *__sanitizer_before_thread_create_hook(uptr thread, bool detached,$/;"	f
__sanitizer_clock_t	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^typedef int __sanitizer_clock_t;$/;"	t	namespace:__sanitizer
__sanitizer_clock_t	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^typedef u64 __sanitizer_clock_t;$/;"	t	namespace:__sanitizer
__sanitizer_clock_t	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  typedef int __sanitizer_clock_t;$/;"	t	namespace:__sanitizer
__sanitizer_clock_t	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  typedef long __sanitizer_clock_t;$/;"	t	namespace:__sanitizer
__sanitizer_clock_t	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  typedef long long __sanitizer_clock_t;$/;"	t	namespace:__sanitizer
__sanitizer_clock_t	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^typedef long __sanitizer_clock_t;$/;"	t	namespace:__sanitizer
__sanitizer_clockid_t	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^typedef int __sanitizer_clockid_t;$/;"	t	namespace:__sanitizer
__sanitizer_clockid_t	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^typedef u32 __sanitizer_clockid_t;$/;"	t	namespace:__sanitizer
__sanitizer_clockid_t	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  typedef int __sanitizer_clockid_t;$/;"	t	namespace:__sanitizer
__sanitizer_clockid_t	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^typedef int __sanitizer_clockid_t;$/;"	t	namespace:__sanitizer
__sanitizer_cmsghdr	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_cmsghdr {$/;"	s	namespace:__sanitizer
__sanitizer_cmsghdr	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^struct __sanitizer_cmsghdr {$/;"	s	namespace:__sanitizer
__sanitizer_cmsghdr	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  struct __sanitizer_cmsghdr {$/;"	s	namespace:__sanitizer
__sanitizer_cmsghdr	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_cmsghdr {$/;"	s	namespace:__sanitizer
__sanitizer_contiguous_container_find_bad_address	lib/asan/asan_poisoning.cc	/^const void *__sanitizer_contiguous_container_find_bad_address($/;"	f
__sanitizer_cookie_io_close	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^typedef int (*__sanitizer_cookie_io_close)(void *cookie);$/;"	t
__sanitizer_cookie_io_functions_t	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^struct __sanitizer_cookie_io_functions_t {$/;"	s
__sanitizer_cookie_io_read	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^typedef uptr (*__sanitizer_cookie_io_read)(void *cookie, char *buf, uptr size);$/;"	t
__sanitizer_cookie_io_seek	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^typedef int (*__sanitizer_cookie_io_seek)(void *cookie, u64 *offset,$/;"	t
__sanitizer_cookie_io_write	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^typedef uptr (*__sanitizer_cookie_io_write)(void *cookie, const char *buf,$/;"	t
__sanitizer_cov_8bit_counters_init	lib/fuzzer/FuzzerTracePC.cpp	/^void __sanitizer_cov_8bit_counters_init(uint8_t *Start, uint8_t *Stop) {$/;"	f
__sanitizer_cov_8bit_counters_init	test/sanitizer_common/TestCases/sanitizer_coverage_inline8bit_counter.cc	/^void __sanitizer_cov_8bit_counters_init(const char *start, const char *end) {$/;"	f
__sanitizer_cov_dump	lib/sanitizer_common/sanitizer_coverage_fuchsia.cc	/^SANITIZER_INTERFACE_ATTRIBUTE void __sanitizer_cov_dump() {$/;"	f
__sanitizer_cov_dump	lib/sanitizer_common/sanitizer_coverage_libcdep_new.cc	/^SANITIZER_INTERFACE_ATTRIBUTE void __sanitizer_cov_dump() {$/;"	f
__sanitizer_cov_pcs_init	lib/fuzzer/FuzzerTracePC.cpp	/^void __sanitizer_cov_pcs_init(const uintptr_t *pcs_beg,$/;"	f
__sanitizer_cov_pcs_init	lib/fuzzer/dataflow/DataFlow.cpp	/^void __sanitizer_cov_pcs_init(const uintptr_t *pcs_beg,$/;"	f
__sanitizer_cov_pcs_init	test/sanitizer_common/TestCases/sanitizer_coverage_inline8bit_counter.cc	/^extern "C" void __sanitizer_cov_pcs_init(const uintptr_t *pcs_beg,$/;"	f
__sanitizer_cov_reset	lib/sanitizer_common/sanitizer_coverage_libcdep_new.cc	/^SANITIZER_INTERFACE_ATTRIBUTE void __sanitizer_cov_reset() {$/;"	f
__sanitizer_cov_trace_cmp1	lib/fuzzer/FuzzerTracePC.cpp	/^void __sanitizer_cov_trace_cmp1(uint8_t Arg1, uint8_t Arg2) {$/;"	f
__sanitizer_cov_trace_cmp2	lib/fuzzer/FuzzerTracePC.cpp	/^void __sanitizer_cov_trace_cmp2(uint16_t Arg1, uint16_t Arg2) {$/;"	f
__sanitizer_cov_trace_cmp4	lib/fuzzer/FuzzerTracePC.cpp	/^void __sanitizer_cov_trace_cmp4(uint32_t Arg1, uint32_t Arg2) {$/;"	f
__sanitizer_cov_trace_cmp8	lib/fuzzer/FuzzerTracePC.cpp	/^void __sanitizer_cov_trace_cmp8(uint64_t Arg1, uint64_t Arg2) {$/;"	f
__sanitizer_cov_trace_const_cmp1	lib/fuzzer/FuzzerTracePC.cpp	/^void __sanitizer_cov_trace_const_cmp1(uint8_t Arg1, uint8_t Arg2) {$/;"	f
__sanitizer_cov_trace_const_cmp2	lib/fuzzer/FuzzerTracePC.cpp	/^void __sanitizer_cov_trace_const_cmp2(uint16_t Arg1, uint16_t Arg2) {$/;"	f
__sanitizer_cov_trace_const_cmp4	lib/fuzzer/FuzzerTracePC.cpp	/^void __sanitizer_cov_trace_const_cmp4(uint32_t Arg1, uint32_t Arg2) {$/;"	f
__sanitizer_cov_trace_const_cmp8	lib/fuzzer/FuzzerTracePC.cpp	/^void __sanitizer_cov_trace_const_cmp8(uint64_t Arg1, uint64_t Arg2) {$/;"	f
__sanitizer_cov_trace_div4	lib/fuzzer/FuzzerTracePC.cpp	/^void __sanitizer_cov_trace_div4(uint32_t Val) {$/;"	f
__sanitizer_cov_trace_div8	lib/fuzzer/FuzzerTracePC.cpp	/^void __sanitizer_cov_trace_div8(uint64_t Val) {$/;"	f
__sanitizer_cov_trace_gep	lib/fuzzer/FuzzerTracePC.cpp	/^void __sanitizer_cov_trace_gep(uintptr_t Idx) {$/;"	f
__sanitizer_cov_trace_pc	lib/fuzzer/FuzzerTracePC.cpp	/^void __sanitizer_cov_trace_pc() {$/;"	f
__sanitizer_cov_trace_pc	test/asan/TestCases/coverage-trace-pc.cc	/^extern "C" void __sanitizer_cov_trace_pc() {$/;"	f
__sanitizer_cov_trace_pc_guard	lib/fuzzer/FuzzerTracePC.cpp	/^void __sanitizer_cov_trace_pc_guard(uint32_t *Guard) {$/;"	f
__sanitizer_cov_trace_pc_guard	lib/fuzzer/dataflow/DataFlow.cpp	/^void __sanitizer_cov_trace_pc_guard(uint32_t *guard){$/;"	f
__sanitizer_cov_trace_pc_guard	test/sanitizer_common/TestCases/sanitizer_coverage_trace_pc_guard-init.cc	/^extern "C" void __sanitizer_cov_trace_pc_guard(uint32_t *guard) { }$/;"	f
__sanitizer_cov_trace_pc_guard_init	lib/fuzzer/FuzzerTracePC.cpp	/^void __sanitizer_cov_trace_pc_guard_init(uint32_t *Start, uint32_t *Stop) {$/;"	f
__sanitizer_cov_trace_pc_guard_init	lib/fuzzer/dataflow/DataFlow.cpp	/^void __sanitizer_cov_trace_pc_guard_init(uint32_t *start,$/;"	f
__sanitizer_cov_trace_pc_guard_init	test/sanitizer_common/TestCases/sanitizer_coverage_trace_pc_guard-init.cc	/^extern "C" void __sanitizer_cov_trace_pc_guard_init(uint32_t *start, uint32_t *stop) {$/;"	f
__sanitizer_cov_trace_pc_indir	lib/fuzzer/FuzzerTracePC.cpp	/^void __sanitizer_cov_trace_pc_indir(uintptr_t Callee) {$/;"	f
__sanitizer_cov_trace_pc_indir	lib/fuzzer/dataflow/DataFlow.cpp	/^void __sanitizer_cov_trace_pc_indir(uint64_t x){}  \/\/ unused.$/;"	f
__sanitizer_cov_trace_pc_indir	test/asan/TestCases/coverage-trace-pc.cc	/^extern "C" void __sanitizer_cov_trace_pc_indir(void *callee) {$/;"	f
__sanitizer_cov_trace_switch	lib/fuzzer/FuzzerTracePC.cpp	/^void __sanitizer_cov_trace_switch(uint64_t Val, uint64_t *Cases) {$/;"	f
__sanitizer_dirent	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_dirent {$/;"	s	namespace:__sanitizer
__sanitizer_dirent	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^struct __sanitizer_dirent {$/;"	s	namespace:__sanitizer
__sanitizer_dirent	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  struct __sanitizer_dirent {$/;"	s	namespace:__sanitizer
__sanitizer_dirent	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_dirent {$/;"	s	namespace:__sanitizer
__sanitizer_dirent64	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  struct __sanitizer_dirent64 {$/;"	s	namespace:__sanitizer
__sanitizer_dirent64	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_dirent64 {$/;"	s	namespace:__sanitizer
__sanitizer_dl_phdr_info	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_dl_phdr_info {$/;"	s	namespace:__sanitizer
__sanitizer_dl_phdr_info	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^struct __sanitizer_dl_phdr_info {$/;"	s	namespace:__sanitizer
__sanitizer_dl_phdr_info	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  struct __sanitizer_dl_phdr_info {$/;"	s	namespace:__sanitizer
__sanitizer_dl_phdr_info	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_dl_phdr_info {$/;"	s	namespace:__sanitizer
__sanitizer_dtor_callback	lib/msan/msan_interceptors.cc	/^void __sanitizer_dtor_callback(const void *data, uptr size) {$/;"	f
__sanitizer_dump_coverage	lib/sanitizer_common/sanitizer_coverage_fuchsia.cc	/^SANITIZER_INTERFACE_ATTRIBUTE void __sanitizer_dump_coverage(  \/\/ NOLINT$/;"	f
__sanitizer_dump_coverage	lib/sanitizer_common/sanitizer_coverage_libcdep_new.cc	/^SANITIZER_INTERFACE_ATTRIBUTE void __sanitizer_dump_coverage(  \/\/ NOLINT$/;"	f
__sanitizer_dump_trace_pc_guard_coverage	lib/sanitizer_common/sanitizer_coverage_fuchsia.cc	/^SANITIZER_INTERFACE_ATTRIBUTE void __sanitizer_dump_trace_pc_guard_coverage() {$/;"	f
__sanitizer_dump_trace_pc_guard_coverage	lib/sanitizer_common/sanitizer_coverage_libcdep_new.cc	/^SANITIZER_INTERFACE_ATTRIBUTE void __sanitizer_dump_trace_pc_guard_coverage() {$/;"	f
__sanitizer_early_init	lib/asan/asan_rtems.cc	/^void __sanitizer_early_init() {$/;"	f
__sanitizer_esr_context	lib/sanitizer_common/sanitizer_linux.cc	/^struct __sanitizer_esr_context {$/;"	s	namespace:__sanitizer	file:
__sanitizer_ether_addr	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_ether_addr {$/;"	s	namespace:__sanitizer
__sanitizer_ether_addr	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^struct __sanitizer_ether_addr {$/;"	s	namespace:__sanitizer
__sanitizer_ether_addr	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  struct __sanitizer_ether_addr {$/;"	s	namespace:__sanitizer
__sanitizer_ether_addr	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_ether_addr {$/;"	s	namespace:__sanitizer
__sanitizer_exit	lib/asan/asan_rtems.cc	/^void __sanitizer_exit() {$/;"	f
__sanitizer_file_handle	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  struct __sanitizer_file_handle {$/;"	s	namespace:__sanitizer
__sanitizer_finish_switch_fiber	lib/asan/asan_thread.cc	/^void __sanitizer_finish_switch_fiber(void* fakestack,$/;"	f
__sanitizer_free_hook	lib/lsan/lsan_allocator.cc	/^void __sanitizer_free_hook(void *ptr) {$/;"	f
__sanitizer_free_hook	lib/tsan/rtl/tsan_mman.cc	/^void __sanitizer_free_hook(void *ptr) {$/;"	f
__sanitizer_free_hook	test/asan/TestCases/Posix/free_hook_realloc.cc	/^void __sanitizer_free_hook(const volatile void *ptr) {$/;"	f
__sanitizer_free_hook	test/asan/TestCases/Windows/free_hook_realloc.cc	/^void __sanitizer_free_hook(const volatile void *ptr) {$/;"	f
__sanitizer_free_hook	test/sanitizer_common/TestCases/malloc_hook.cc	/^void __sanitizer_free_hook(const volatile void *ptr) {$/;"	f
__sanitizer_get_allocated_size	lib/asan/asan_allocator.cc	/^uptr __sanitizer_get_allocated_size(const void *p) {$/;"	f
__sanitizer_get_allocated_size	lib/hwasan/hwasan_allocator.cc	/^uptr __sanitizer_get_allocated_size(const void *p) { return AllocationSize(p); }$/;"	f
__sanitizer_get_allocated_size	lib/lsan/lsan_allocator.cc	/^uptr __sanitizer_get_allocated_size(const void *p) {$/;"	f
__sanitizer_get_allocated_size	lib/msan/msan_allocator.cc	/^uptr __sanitizer_get_allocated_size(const void *p) { return AllocationSize(p); }$/;"	f
__sanitizer_get_allocated_size	lib/scudo/scudo_allocator.cpp	/^uptr __sanitizer_get_allocated_size(const void *Ptr) {$/;"	f
__sanitizer_get_allocated_size	lib/tsan/rtl/tsan_mman.cc	/^uptr __sanitizer_get_allocated_size(const void *p) {$/;"	f
__sanitizer_get_current_allocated_bytes	lib/asan/asan_stats.cc	/^uptr __sanitizer_get_current_allocated_bytes() {$/;"	f
__sanitizer_get_current_allocated_bytes	lib/hwasan/hwasan_allocator.cc	/^uptr __sanitizer_get_current_allocated_bytes() {$/;"	f
__sanitizer_get_current_allocated_bytes	lib/lsan/lsan_allocator.cc	/^uptr __sanitizer_get_current_allocated_bytes() {$/;"	f
__sanitizer_get_current_allocated_bytes	lib/msan/msan_allocator.cc	/^uptr __sanitizer_get_current_allocated_bytes() {$/;"	f
__sanitizer_get_current_allocated_bytes	lib/scudo/scudo_allocator.cpp	/^uptr __sanitizer_get_current_allocated_bytes() {$/;"	f
__sanitizer_get_current_allocated_bytes	lib/tsan/rtl/tsan_mman.cc	/^uptr __sanitizer_get_current_allocated_bytes() {$/;"	f
__sanitizer_get_estimated_allocated_size	lib/asan/asan_allocator.cc	/^uptr __sanitizer_get_estimated_allocated_size(uptr size) {$/;"	f
__sanitizer_get_estimated_allocated_size	lib/hwasan/hwasan_allocator.cc	/^uptr __sanitizer_get_estimated_allocated_size(uptr size) { return size; }$/;"	f
__sanitizer_get_estimated_allocated_size	lib/lsan/lsan_allocator.cc	/^uptr __sanitizer_get_estimated_allocated_size(uptr size) { return size; }$/;"	f
__sanitizer_get_estimated_allocated_size	lib/msan/msan_allocator.cc	/^uptr __sanitizer_get_estimated_allocated_size(uptr size) { return size; }$/;"	f
__sanitizer_get_estimated_allocated_size	lib/scudo/scudo_allocator.cpp	/^uptr __sanitizer_get_estimated_allocated_size(uptr Size) {$/;"	f
__sanitizer_get_estimated_allocated_size	lib/tsan/rtl/tsan_mman.cc	/^uptr __sanitizer_get_estimated_allocated_size(uptr size) {$/;"	f
__sanitizer_get_free_bytes	lib/asan/asan_stats.cc	/^uptr __sanitizer_get_free_bytes() {$/;"	f
__sanitizer_get_free_bytes	lib/hwasan/hwasan_allocator.cc	/^uptr __sanitizer_get_free_bytes() { return 1; }$/;"	f
__sanitizer_get_free_bytes	lib/lsan/lsan_allocator.cc	/^uptr __sanitizer_get_free_bytes() { return 0; }$/;"	f
__sanitizer_get_free_bytes	lib/msan/msan_allocator.cc	/^uptr __sanitizer_get_free_bytes() { return 1; }$/;"	f
__sanitizer_get_free_bytes	lib/scudo/scudo_allocator.cpp	/^uptr __sanitizer_get_free_bytes() {$/;"	f
__sanitizer_get_free_bytes	lib/tsan/rtl/tsan_mman.cc	/^uptr __sanitizer_get_free_bytes() {$/;"	f
__sanitizer_get_heap_size	lib/asan/asan_stats.cc	/^uptr __sanitizer_get_heap_size() {$/;"	f
__sanitizer_get_heap_size	lib/hwasan/hwasan_allocator.cc	/^uptr __sanitizer_get_heap_size() {$/;"	f
__sanitizer_get_heap_size	lib/lsan/lsan_allocator.cc	/^uptr __sanitizer_get_heap_size() {$/;"	f
__sanitizer_get_heap_size	lib/msan/msan_allocator.cc	/^uptr __sanitizer_get_heap_size() {$/;"	f
__sanitizer_get_heap_size	lib/scudo/scudo_allocator.cpp	/^uptr __sanitizer_get_heap_size() {$/;"	f
__sanitizer_get_heap_size	lib/tsan/rtl/tsan_mman.cc	/^uptr __sanitizer_get_heap_size() {$/;"	f
__sanitizer_get_module_and_offset_for_pc	lib/sanitizer_common/sanitizer_stacktrace_libcdep.cc	/^int __sanitizer_get_module_and_offset_for_pc( \/\/ NOLINT$/;"	f
__sanitizer_get_ownership	lib/asan/asan_allocator.cc	/^int __sanitizer_get_ownership(const void *p) {$/;"	f
__sanitizer_get_ownership	lib/hwasan/hwasan_allocator.cc	/^int __sanitizer_get_ownership(const void *p) { return AllocationSize(p) != 0; }$/;"	f
__sanitizer_get_ownership	lib/lsan/lsan_allocator.cc	/^int __sanitizer_get_ownership(const void *p) { return Metadata(p) != nullptr; }$/;"	f
__sanitizer_get_ownership	lib/msan/msan_allocator.cc	/^int __sanitizer_get_ownership(const void *p) { return AllocationSize(p) != 0; }$/;"	f
__sanitizer_get_ownership	lib/scudo/scudo_allocator.cpp	/^int __sanitizer_get_ownership(const void *Ptr) {$/;"	f
__sanitizer_get_ownership	lib/tsan/rtl/tsan_mman.cc	/^int __sanitizer_get_ownership(const void *p) {$/;"	f
__sanitizer_get_unmapped_bytes	lib/asan/asan_stats.cc	/^uptr __sanitizer_get_unmapped_bytes() {$/;"	f
__sanitizer_get_unmapped_bytes	lib/hwasan/hwasan_allocator.cc	/^uptr __sanitizer_get_unmapped_bytes() { return 1; }$/;"	f
__sanitizer_get_unmapped_bytes	lib/lsan/lsan_allocator.cc	/^uptr __sanitizer_get_unmapped_bytes() { return 0; }$/;"	f
__sanitizer_get_unmapped_bytes	lib/msan/msan_allocator.cc	/^uptr __sanitizer_get_unmapped_bytes() { return 1; }$/;"	f
__sanitizer_get_unmapped_bytes	lib/scudo/scudo_allocator.cpp	/^uptr __sanitizer_get_unmapped_bytes() {$/;"	f
__sanitizer_get_unmapped_bytes	lib/tsan/rtl/tsan_mman.cc	/^uptr __sanitizer_get_unmapped_bytes() {$/;"	f
__sanitizer_glob_t	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_glob_t {$/;"	s	namespace:__sanitizer
__sanitizer_glob_t	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^struct __sanitizer_glob_t {$/;"	s	namespace:__sanitizer
__sanitizer_glob_t	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  struct __sanitizer_glob_t {$/;"	s	namespace:__sanitizer
__sanitizer_glob_t	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_glob_t {$/;"	s	namespace:__sanitizer
__sanitizer_group	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_group {$/;"	s	namespace:__sanitizer
__sanitizer_group	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^struct __sanitizer_group {$/;"	s	namespace:__sanitizer
__sanitizer_group	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  struct __sanitizer_group {$/;"	s	namespace:__sanitizer
__sanitizer_group	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_group {$/;"	s	namespace:__sanitizer
__sanitizer_hostent	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_hostent {$/;"	s	namespace:__sanitizer
__sanitizer_hostent	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^struct __sanitizer_hostent {$/;"	s	namespace:__sanitizer
__sanitizer_hostent	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  struct __sanitizer_hostent {$/;"	s	namespace:__sanitizer
__sanitizer_hostent	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_hostent {$/;"	s	namespace:__sanitizer
__sanitizer_ifaddrs	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_ifaddrs {$/;"	s	namespace:__sanitizer
__sanitizer_ifaddrs	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^struct __sanitizer_ifaddrs {$/;"	s	namespace:__sanitizer
__sanitizer_ifaddrs	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  struct __sanitizer_ifaddrs {$/;"	s	namespace:__sanitizer
__sanitizer_ifaddrs	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_ifaddrs {$/;"	s	namespace:__sanitizer
__sanitizer_ifconf	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_ifconf {$/;"	s	namespace:__sanitizer
__sanitizer_ifconf	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^struct __sanitizer_ifconf {$/;"	s	namespace:__sanitizer
__sanitizer_ifconf	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  struct __sanitizer_ifconf {$/;"	s	namespace:__sanitizer
__sanitizer_ifconf	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_ifconf {$/;"	s	namespace:__sanitizer
__sanitizer_in_addr_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^uptr __sanitizer_in_addr_sz(int af) {$/;"	f	namespace:__sanitizer
__sanitizer_in_addr_sz	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^uptr __sanitizer_in_addr_sz(int af) {$/;"	f	namespace:__sanitizer
__sanitizer_in_addr_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  uptr __sanitizer_in_addr_sz(int af) {$/;"	f	namespace:__sanitizer
__sanitizer_in_addr_sz	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  uptr __sanitizer_in_addr_sz(int af) {$/;"	f	namespace:__sanitizer
__sanitizer_install_malloc_and_free_hooks	lib/sanitizer_common/sanitizer_common.cc	/^int __sanitizer_install_malloc_and_free_hooks(void (*malloc_hook)(const void *,$/;"	f
__sanitizer_io_event	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  struct __sanitizer_io_event {$/;"	s	namespace:__sanitizer
__sanitizer_iocb	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^struct __sanitizer_iocb {$/;"	s	namespace:__sanitizer
__sanitizer_iocb	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  struct __sanitizer_iocb {$/;"	s	namespace:__sanitizer
__sanitizer_iovec	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_iovec {$/;"	s	namespace:__sanitizer
__sanitizer_iovec	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^struct __sanitizer_iovec {$/;"	s	namespace:__sanitizer
__sanitizer_iovec	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  struct __sanitizer_iovec {$/;"	s	namespace:__sanitizer
__sanitizer_iovec	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_iovec {$/;"	s	namespace:__sanitizer
__sanitizer_ipc_perm	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_ipc_perm {$/;"	s	namespace:__sanitizer
__sanitizer_ipc_perm	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^struct __sanitizer_ipc_perm {$/;"	s	namespace:__sanitizer
__sanitizer_ipc_perm	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  struct __sanitizer_ipc_perm {$/;"	s	namespace:__sanitizer
__sanitizer_ipc_perm	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_ipc_perm {$/;"	s	namespace:__sanitizer
__sanitizer_itimerval	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_itimerval {$/;"	s	namespace:__sanitizer
__sanitizer_itimerval	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^struct __sanitizer_itimerval {$/;"	s	namespace:__sanitizer
__sanitizer_itimerval	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  struct __sanitizer_itimerval {$/;"	s	namespace:__sanitizer
__sanitizer_itimerval	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_itimerval {$/;"	s	namespace:__sanitizer
__sanitizer_kernel_sigaction_t	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_kernel_sigaction_t {$/;"	s	namespace:__sanitizer
__sanitizer_kernel_sigaction_t	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^struct __sanitizer_kernel_sigaction_t {$/;"	s	namespace:__sanitizer
__sanitizer_kernel_sigaction_t	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  struct __sanitizer_kernel_sigaction_t {$/;"	s	namespace:__sanitizer
__sanitizer_kernel_sigaction_t	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_kernel_sigaction_t {$/;"	s	namespace:__sanitizer
__sanitizer_kernel_sigset_t	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^typedef __sanitizer_sigset_t __sanitizer_kernel_sigset_t;$/;"	t	namespace:__sanitizer
__sanitizer_kernel_sigset_t	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^typedef __sanitizer_sigset_t __sanitizer_kernel_sigset_t;$/;"	t	namespace:__sanitizer
__sanitizer_kernel_sigset_t	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  struct __sanitizer_kernel_sigset_t {$/;"	s	namespace:__sanitizer
__sanitizer_kernel_sigset_t	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  typedef __sanitizer_sigset_t __sanitizer_kernel_sigset_t;$/;"	t	namespace:__sanitizer
__sanitizer_kernel_sigset_t	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_kernel_sigset_t {$/;"	s	namespace:__sanitizer
__sanitizer_lwpid_t	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^typedef int __sanitizer_lwpid_t;$/;"	t	namespace:__sanitizer
__sanitizer_mallinfo	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  struct __sanitizer_mallinfo {$/;"	s	namespace:__sanitizer
__sanitizer_malloc_hook	lib/lsan/lsan_allocator.cc	/^void __sanitizer_malloc_hook(void *ptr, uptr size) {$/;"	f
__sanitizer_malloc_hook	lib/tsan/rtl/tsan_mman.cc	/^void __sanitizer_malloc_hook(void *ptr, uptr size) {$/;"	f
__sanitizer_malloc_hook	test/sanitizer_common/TestCases/malloc_hook.cc	/^void __sanitizer_malloc_hook(const volatile void *ptr, size_t sz) {$/;"	f
__sanitizer_mmsghdr	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_mmsghdr {$/;"	s	namespace:__sanitizer
__sanitizer_mmsghdr	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  struct __sanitizer_mmsghdr {$/;"	s	namespace:__sanitizer
__sanitizer_mntent	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  struct __sanitizer_mntent {$/;"	s	namespace:__sanitizer
__sanitizer_msghdr	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_msghdr {$/;"	s	namespace:__sanitizer
__sanitizer_msghdr	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^struct __sanitizer_msghdr {$/;"	s	namespace:__sanitizer
__sanitizer_msghdr	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  struct __sanitizer_msghdr {$/;"	s	namespace:__sanitizer
__sanitizer_msghdr	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_msghdr {$/;"	s	namespace:__sanitizer
__sanitizer_netent	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_netent {$/;"	s	namespace:__sanitizer
__sanitizer_nfds_t	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^typedef unsigned __sanitizer_nfds_t;$/;"	t	namespace:__sanitizer
__sanitizer_nfds_t	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^typedef unsigned __sanitizer_nfds_t;$/;"	t	namespace:__sanitizer
__sanitizer_nfds_t	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  typedef unsigned __sanitizer_nfds_t;$/;"	t	namespace:__sanitizer
__sanitizer_nfds_t	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  typedef unsigned long __sanitizer_nfds_t;$/;"	t	namespace:__sanitizer
__sanitizer_nfds_t	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^typedef unsigned long __sanitizer_nfds_t;$/;"	t	namespace:__sanitizer
__sanitizer_obstack	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^struct __sanitizer_obstack {$/;"	s
__sanitizer_passwd	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_passwd {$/;"	s	namespace:__sanitizer
__sanitizer_passwd	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^struct __sanitizer_passwd {$/;"	s	namespace:__sanitizer
__sanitizer_passwd	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  struct __sanitizer_passwd {$/;"	s	namespace:__sanitizer
__sanitizer_passwd	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_passwd {$/;"	s	namespace:__sanitizer
__sanitizer_perf_event_attr	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  struct __sanitizer_perf_event_attr {$/;"	s	namespace:__sanitizer
__sanitizer_pollfd	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_pollfd {$/;"	s	namespace:__sanitizer
__sanitizer_pollfd	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^struct __sanitizer_pollfd {$/;"	s	namespace:__sanitizer
__sanitizer_pollfd	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  struct __sanitizer_pollfd {$/;"	s	namespace:__sanitizer
__sanitizer_pollfd	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_pollfd {$/;"	s	namespace:__sanitizer
__sanitizer_print_memory_profile	lib/asan/asan_memory_profile.cc	/^void __sanitizer_print_memory_profile(uptr top_percent,$/;"	f
__sanitizer_print_stack_trace	lib/asan/asan_stack.cc	/^void __sanitizer_print_stack_trace() {$/;"	f
__sanitizer_print_stack_trace	lib/hwasan/hwasan.cc	/^void __sanitizer_print_stack_trace() {$/;"	f
__sanitizer_print_stack_trace	lib/lsan/lsan.cc	/^void __sanitizer_print_stack_trace() {$/;"	f
__sanitizer_print_stack_trace	lib/msan/msan.cc	/^void __sanitizer_print_stack_trace() {$/;"	f
__sanitizer_print_stack_trace	lib/tsan/rtl/tsan_rtl_report.cc	/^void __sanitizer_print_stack_trace() {$/;"	f
__sanitizer_print_stack_trace	lib/ubsan/ubsan_diag_standalone.cc	/^void __sanitizer_print_stack_trace() {$/;"	f
__sanitizer_protoent	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_protoent {$/;"	s	namespace:__sanitizer
__sanitizer_pthread_attr_t	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^} __sanitizer_pthread_attr_t;$/;"	t	namespace:__sanitizer	typeref:struct:__sanitizer::__anon83
__sanitizer_pthread_attr_t	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^} __sanitizer_pthread_attr_t;$/;"	t	namespace:__sanitizer	typeref:struct:__sanitizer::__anon91
__sanitizer_pthread_attr_t	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  union __sanitizer_pthread_attr_t {$/;"	u	namespace:__sanitizer
__sanitizer_pthread_attr_t	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^union __sanitizer_pthread_attr_t {$/;"	u	namespace:__sanitizer
__sanitizer_pthread_key_t	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^typedef unsigned __sanitizer_pthread_key_t;$/;"	t	namespace:__sanitizer
__sanitizer_pthread_key_t	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^typedef unsigned __sanitizer_pthread_key_t;$/;"	t	namespace:__sanitizer
__sanitizer_pthread_key_t	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  typedef unsigned __sanitizer_pthread_key_t;$/;"	t	namespace:__sanitizer
__sanitizer_pthread_key_t	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  typedef unsigned long __sanitizer_pthread_key_t;$/;"	t	namespace:__sanitizer
__sanitizer_pthread_key_t	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^typedef unsigned __sanitizer_pthread_key_t;$/;"	t	namespace:__sanitizer
__sanitizer_ptr_cmp	lib/asan/asan_report.cc	/^void __sanitizer_ptr_cmp(void *a, void *b) {$/;"	f
__sanitizer_ptr_sub	lib/asan/asan_report.cc	/^void __sanitizer_ptr_sub(void *a, void *b) {$/;"	f
__sanitizer_ptrace_io_desc	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_ptrace_io_desc {$/;"	s	namespace:__sanitizer
__sanitizer_ptrace_lwpinfo	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_ptrace_lwpinfo {$/;"	s	namespace:__sanitizer
__sanitizer_purge_allocator	lib/asan/asan_allocator.cc	/^void __sanitizer_purge_allocator() {$/;"	f
__sanitizer_report_error_summary	test/tsan/Linux/double_race.cc	/^void __sanitizer_report_error_summary(const char *summary) {$/;"	f
__sanitizer_sandbox_arguments	include/sanitizer/common_interface_defs.h	/^  } __sanitizer_sandbox_arguments;$/;"	t	typeref:struct:__anon127
__sanitizer_sandbox_arguments	lib/sanitizer_common/sanitizer_interface_internal.h	/^  } __sanitizer_sandbox_arguments;$/;"	t	typeref:struct:__anon96
__sanitizer_sem_t	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_sem_t {$/;"	s	namespace:__sanitizer
__sanitizer_sem_t	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^struct __sanitizer_sem_t {$/;"	s	namespace:__sanitizer
__sanitizer_sem_t	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  struct __sanitizer_sem_t {$/;"	s	namespace:__sanitizer
__sanitizer_sem_t	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_sem_t {$/;"	s	namespace:__sanitizer
__sanitizer_set_death_callback	lib/sanitizer_common/sanitizer_common.cc	/^void __sanitizer_set_death_callback(void (*callback)(void)) {$/;"	f
__sanitizer_set_report_fd	lib/sanitizer_common/sanitizer_file.cc	/^void __sanitizer_set_report_fd(void *fd) {$/;"	f
__sanitizer_set_report_fd	lib/sanitizer_common/sanitizer_fuchsia.cc	/^void __sanitizer_set_report_fd(void *fd) {$/;"	f
__sanitizer_set_report_path	lib/sanitizer_common/sanitizer_file.cc	/^void __sanitizer_set_report_path(const char *path) {$/;"	f
__sanitizer_set_report_path	lib/sanitizer_common/sanitizer_fuchsia.cc	/^void __sanitizer_set_report_path(const char *path) {$/;"	f
__sanitizer_shmid_ds	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_shmid_ds {$/;"	s	namespace:__sanitizer
__sanitizer_shmid_ds	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^struct __sanitizer_shmid_ds {$/;"	s	namespace:__sanitizer
__sanitizer_shmid_ds	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  struct __sanitizer_shmid_ds {$/;"	s	namespace:__sanitizer
__sanitizer_shmid_ds	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_shmid_ds {$/;"	s	namespace:__sanitizer
__sanitizer_sigaction	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_sigaction {$/;"	s	namespace:__sanitizer
__sanitizer_sigaction	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^struct __sanitizer_sigaction {$/;"	s	namespace:__sanitizer
__sanitizer_sigaction	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  struct __sanitizer_sigaction {$/;"	s	namespace:__sanitizer
__sanitizer_sigaction	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_sigaction {$/;"	s	namespace:__sanitizer
__sanitizer_sigaction13	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_sigaction13 {$/;"	s	namespace:__sanitizer
__sanitizer_sigaltstack	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_sigaltstack {$/;"	s	namespace:__sanitizer
__sanitizer_sigevent	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_sigevent {$/;"	s	namespace:__sanitizer
__sanitizer_siginfo	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_siginfo {$/;"	s	namespace:__sanitizer
__sanitizer_siginfo	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^struct __sanitizer_siginfo {$/;"	s	namespace:__sanitizer
__sanitizer_siginfo	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  struct __sanitizer_siginfo {$/;"	s	namespace:__sanitizer
__sanitizer_siginfo	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_siginfo {$/;"	s	namespace:__sanitizer
__sanitizer_sigset13_t	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^typedef unsigned int __sanitizer_sigset13_t;$/;"	t	namespace:__sanitizer
__sanitizer_sigset_t	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_sigset_t {$/;"	s	namespace:__sanitizer
__sanitizer_sigset_t	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^typedef unsigned int __sanitizer_sigset_t;$/;"	t	namespace:__sanitizer
__sanitizer_sigset_t	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  struct __sanitizer_sigset_t {$/;"	s	namespace:__sanitizer
__sanitizer_sigset_t	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  typedef unsigned __sanitizer_sigset_t;$/;"	t	namespace:__sanitizer
__sanitizer_sigset_t	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  typedef unsigned long __sanitizer_sigset_t;$/;"	t	namespace:__sanitizer
__sanitizer_sigset_t	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  typedef unsigned long __sanitizer_sigset_t[16\/sizeof(unsigned long)];$/;"	t	namespace:__sanitizer
__sanitizer_sigset_t	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_sigset_t {$/;"	s	namespace:__sanitizer
__sanitizer_sigval	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^union __sanitizer_sigval {$/;"	u	namespace:__sanitizer
__sanitizer_socklen_t	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^typedef unsigned int __sanitizer_socklen_t;$/;"	t	namespace:__sanitizer
__sanitizer_start_switch_fiber	lib/asan/asan_thread.cc	/^void __sanitizer_start_switch_fiber(void **fakestacksave, const void *bottom,$/;"	f
__sanitizer_startup_hook	lib/sanitizer_common/sanitizer_fuchsia.cc	/^void __sanitizer_startup_hook(int argc, char **argv, char **envp,$/;"	f
__sanitizer_stat_init	lib/stats/stats_client.cc	/^extern "C" void __sanitizer_stat_init(StatModule *mod) {$/;"	f
__sanitizer_stat_report	lib/stats/stats_client.cc	/^extern "C" void __sanitizer_stat_report(StatInfo *s) {$/;"	f
__sanitizer_stats_register	lib/stats/stats.cc	/^unsigned __sanitizer_stats_register(StatModule **mod) {$/;"	f
__sanitizer_stats_unregister	lib/stats/stats.cc	/^void __sanitizer_stats_unregister(unsigned index) {$/;"	f
__sanitizer_suseconds_t	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^typedef int __sanitizer_suseconds_t;$/;"	t	namespace:__sanitizer
__sanitizer_suseconds_t	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^typedef int __sanitizer_suseconds_t;$/;"	t	namespace:__sanitizer
__sanitizer_suseconds_t	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  typedef long __sanitizer_suseconds_t;$/;"	t	namespace:__sanitizer
__sanitizer_suseconds_t	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^typedef long __sanitizer_suseconds_t;$/;"	t	namespace:__sanitizer
__sanitizer_symbolize_code	lib/sanitizer_common/symbolizer/sanitizer_symbolize.cc	/^bool __sanitizer_symbolize_code(const char *ModuleName, uint64_t ModuleOffset,$/;"	f
__sanitizer_symbolize_data	lib/sanitizer_common/symbolizer/sanitizer_symbolize.cc	/^bool __sanitizer_symbolize_data(const char *ModuleName, uint64_t ModuleOffset,$/;"	f
__sanitizer_symbolize_demangle	lib/sanitizer_common/symbolizer/sanitizer_symbolize.cc	/^int __sanitizer_symbolize_demangle(const char *Name, char *Buffer,$/;"	f
__sanitizer_symbolize_flush	lib/sanitizer_common/symbolizer/sanitizer_symbolize.cc	/^void __sanitizer_symbolize_flush() { getDefaultSymbolizer()->flush(); }$/;"	f
__sanitizer_symbolize_global	lib/sanitizer_common/sanitizer_stacktrace_libcdep.cc	/^void __sanitizer_symbolize_global(uptr data_addr, const char *fmt,$/;"	f
__sanitizer_symbolize_pc	lib/sanitizer_common/sanitizer_stacktrace_libcdep.cc	/^void __sanitizer_symbolize_pc(uptr pc, const char *fmt, char *out_buf,$/;"	f
__sanitizer_syscall_post_____semctl50	include/sanitizer/netbsd_syscall_hooks.h	2429;"	d
__sanitizer_syscall_post_____sigtimedwait50	include/sanitizer/netbsd_syscall_hooks.h	2347;"	d
__sanitizer_syscall_post____lwp_park60	include/sanitizer/netbsd_syscall_hooks.h	2674;"	d
__sanitizer_syscall_post___adjtime50	include/sanitizer/netbsd_syscall_hooks.h	2289;"	d
__sanitizer_syscall_post___aio_suspend50	include/sanitizer/netbsd_syscall_hooks.h	2408;"	d
__sanitizer_syscall_post___clock_getres50	include/sanitizer/netbsd_syscall_hooks.h	2335;"	d
__sanitizer_syscall_post___clock_gettime50	include/sanitizer/netbsd_syscall_hooks.h	2323;"	d
__sanitizer_syscall_post___clock_settime50	include/sanitizer/netbsd_syscall_hooks.h	2329;"	d
__sanitizer_syscall_post___clone	include/sanitizer/netbsd_syscall_hooks.h	1489;"	d
__sanitizer_syscall_post___fhopen40	include/sanitizer/netbsd_syscall_hooks.h	2146;"	d
__sanitizer_syscall_post___fhstat50	include/sanitizer/netbsd_syscall_hooks.h	2492;"	d
__sanitizer_syscall_post___fhstatvfs140	include/sanitizer/netbsd_syscall_hooks.h	2153;"	d
__sanitizer_syscall_post___fstat50	include/sanitizer/netbsd_syscall_hooks.h	2418;"	d
__sanitizer_syscall_post___futimes50	include/sanitizer/netbsd_syscall_hooks.h	2300;"	d
__sanitizer_syscall_post___getcwd	include/sanitizer/netbsd_syscall_hooks.h	1543;"	d
__sanitizer_syscall_post___getdents30	include/sanitizer/netbsd_syscall_hooks.h	2113;"	d
__sanitizer_syscall_post___getfh30	include/sanitizer/netbsd_syscall_hooks.h	2140;"	d
__sanitizer_syscall_post___getitimer50	include/sanitizer/netbsd_syscall_hooks.h	2317;"	d
__sanitizer_syscall_post___getlogin	include/sanitizer/netbsd_syscall_hooks.h	288;"	d
__sanitizer_syscall_post___getrusage50	include/sanitizer/netbsd_syscall_hooks.h	2448;"	d
__sanitizer_syscall_post___gettimeofday50	include/sanitizer/netbsd_syscall_hooks.h	2272;"	d
__sanitizer_syscall_post___kevent50	include/sanitizer/netbsd_syscall_hooks.h	2385;"	d
__sanitizer_syscall_post___lfs_segwait50	include/sanitizer/netbsd_syscall_hooks.h	2295;"	d
__sanitizer_syscall_post___lstat50	include/sanitizer/netbsd_syscall_hooks.h	2422;"	d
__sanitizer_syscall_post___lutimes50	include/sanitizer/netbsd_syscall_hooks.h	2305;"	d
__sanitizer_syscall_post___mknod50	include/sanitizer/netbsd_syscall_hooks.h	2486;"	d
__sanitizer_syscall_post___mount50	include/sanitizer/netbsd_syscall_hooks.h	2212;"	d
__sanitizer_syscall_post___mq_timedreceive50	include/sanitizer/netbsd_syscall_hooks.h	2365;"	d
__sanitizer_syscall_post___mq_timedsend50	include/sanitizer/netbsd_syscall_hooks.h	2355;"	d
__sanitizer_syscall_post___msgctl50	include/sanitizer/netbsd_syscall_hooks.h	2442;"	d
__sanitizer_syscall_post___msync13	include/sanitizer/netbsd_syscall_hooks.h	1434;"	d
__sanitizer_syscall_post___nanosleep50	include/sanitizer/netbsd_syscall_hooks.h	2341;"	d
__sanitizer_syscall_post___ntp_gettime50	include/sanitizer/netbsd_syscall_hooks.h	2470;"	d
__sanitizer_syscall_post___pollts50	include/sanitizer/netbsd_syscall_hooks.h	2401;"	d
__sanitizer_syscall_post___posix_chown	include/sanitizer/netbsd_syscall_hooks.h	1468;"	d
__sanitizer_syscall_post___posix_fadvise50	include/sanitizer/netbsd_syscall_hooks.h	2256;"	d
__sanitizer_syscall_post___posix_fchown	include/sanitizer/netbsd_syscall_hooks.h	1474;"	d
__sanitizer_syscall_post___posix_lchown	include/sanitizer/netbsd_syscall_hooks.h	1480;"	d
__sanitizer_syscall_post___posix_rename	include/sanitizer/netbsd_syscall_hooks.h	1393;"	d
__sanitizer_syscall_post___pselect50	include/sanitizer/netbsd_syscall_hooks.h	2394;"	d
__sanitizer_syscall_post___quotactl	include/sanitizer/netbsd_syscall_hooks.h	2632;"	d
__sanitizer_syscall_post___select50	include/sanitizer/netbsd_syscall_hooks.h	2265;"	d
__sanitizer_syscall_post___setitimer50	include/sanitizer/netbsd_syscall_hooks.h	2311;"	d
__sanitizer_syscall_post___setlogin	include/sanitizer/netbsd_syscall_hooks.h	293;"	d
__sanitizer_syscall_post___settimeofday50	include/sanitizer/netbsd_syscall_hooks.h	2278;"	d
__sanitizer_syscall_post___shmctl50	include/sanitizer/netbsd_syscall_hooks.h	2436;"	d
__sanitizer_syscall_post___sigaction_sigtramp	include/sanitizer/netbsd_syscall_hooks.h	1750;"	d
__sanitizer_syscall_post___sigaltstack14	include/sanitizer/netbsd_syscall_hooks.h	1458;"	d
__sanitizer_syscall_post___sigpending14	include/sanitizer/netbsd_syscall_hooks.h	1524;"	d
__sanitizer_syscall_post___sigprocmask14	include/sanitizer/netbsd_syscall_hooks.h	1529;"	d
__sanitizer_syscall_post___sigsuspend14	include/sanitizer/netbsd_syscall_hooks.h	1534;"	d
__sanitizer_syscall_post___socket30	include/sanitizer/netbsd_syscall_hooks.h	2134;"	d
__sanitizer_syscall_post___stat50	include/sanitizer/netbsd_syscall_hooks.h	2413;"	d
__sanitizer_syscall_post___syscall	include/sanitizer/netbsd_syscall_hooks.h	1024;"	d
__sanitizer_syscall_post___sysctl	include/sanitizer/netbsd_syscall_hooks.h	1054;"	d
__sanitizer_syscall_post___timer_gettime50	include/sanitizer/netbsd_syscall_hooks.h	2464;"	d
__sanitizer_syscall_post___timer_settime50	include/sanitizer/netbsd_syscall_hooks.h	2456;"	d
__sanitizer_syscall_post___utimes50	include/sanitizer/netbsd_syscall_hooks.h	2283;"	d
__sanitizer_syscall_post___vfork14	include/sanitizer/netbsd_syscall_hooks.h	1463;"	d
__sanitizer_syscall_post___wait450	include/sanitizer/netbsd_syscall_hooks.h	2479;"	d
__sanitizer_syscall_post__ksem_close	include/sanitizer/netbsd_syscall_hooks.h	1286;"	d
__sanitizer_syscall_post__ksem_destroy	include/sanitizer/netbsd_syscall_hooks.h	1308;"	d
__sanitizer_syscall_post__ksem_getvalue	include/sanitizer/netbsd_syscall_hooks.h	1303;"	d
__sanitizer_syscall_post__ksem_init	include/sanitizer/netbsd_syscall_hooks.h	1268;"	d
__sanitizer_syscall_post__ksem_open	include/sanitizer/netbsd_syscall_hooks.h	1275;"	d
__sanitizer_syscall_post__ksem_post	include/sanitizer/netbsd_syscall_hooks.h	1290;"	d
__sanitizer_syscall_post__ksem_timedwait	include/sanitizer/netbsd_syscall_hooks.h	1313;"	d
__sanitizer_syscall_post__ksem_trywait	include/sanitizer/netbsd_syscall_hooks.h	1298;"	d
__sanitizer_syscall_post__ksem_unlink	include/sanitizer/netbsd_syscall_hooks.h	1282;"	d
__sanitizer_syscall_post__ksem_wait	include/sanitizer/netbsd_syscall_hooks.h	1294;"	d
__sanitizer_syscall_post__llseek	include/sanitizer/linux_syscall_hooks.h	1963;"	d
__sanitizer_syscall_post__lwp_continue	include/sanitizer/netbsd_syscall_hooks.h	1639;"	d
__sanitizer_syscall_post__lwp_create	include/sanitizer/netbsd_syscall_hooks.h	1616;"	d
__sanitizer_syscall_post__lwp_ctl	include/sanitizer/netbsd_syscall_hooks.h	1700;"	d
__sanitizer_syscall_post__lwp_detach	include/sanitizer/netbsd_syscall_hooks.h	1661;"	d
__sanitizer_syscall_post__lwp_exit	include/sanitizer/netbsd_syscall_hooks.h	1621;"	d
__sanitizer_syscall_post__lwp_getname	include/sanitizer/netbsd_syscall_hooks.h	1694;"	d
__sanitizer_syscall_post__lwp_getprivate	include/sanitizer/netbsd_syscall_hooks.h	1647;"	d
__sanitizer_syscall_post__lwp_kill	include/sanitizer/netbsd_syscall_hooks.h	1656;"	d
__sanitizer_syscall_post__lwp_self	include/sanitizer/netbsd_syscall_hooks.h	1625;"	d
__sanitizer_syscall_post__lwp_setname	include/sanitizer/netbsd_syscall_hooks.h	1688;"	d
__sanitizer_syscall_post__lwp_setprivate	include/sanitizer/netbsd_syscall_hooks.h	1651;"	d
__sanitizer_syscall_post__lwp_suspend	include/sanitizer/netbsd_syscall_hooks.h	1635;"	d
__sanitizer_syscall_post__lwp_unpark	include/sanitizer/netbsd_syscall_hooks.h	1676;"	d
__sanitizer_syscall_post__lwp_unpark_all	include/sanitizer/netbsd_syscall_hooks.h	1682;"	d
__sanitizer_syscall_post__lwp_wait	include/sanitizer/netbsd_syscall_hooks.h	1630;"	d
__sanitizer_syscall_post__lwp_wakeup	include/sanitizer/netbsd_syscall_hooks.h	1643;"	d
__sanitizer_syscall_post__newselect	include/sanitizer/linux_syscall_hooks.h	1970;"	d
__sanitizer_syscall_post__pset_bind	include/sanitizer/netbsd_syscall_hooks.h	2246;"	d
__sanitizer_syscall_post__sched_getaffinity	include/sanitizer/netbsd_syscall_hooks.h	1817;"	d
__sanitizer_syscall_post__sched_getparam	include/sanitizer/netbsd_syscall_hooks.h	1799;"	d
__sanitizer_syscall_post__sched_protect	include/sanitizer/netbsd_syscall_hooks.h	1828;"	d
__sanitizer_syscall_post__sched_setaffinity	include/sanitizer/netbsd_syscall_hooks.h	1808;"	d
__sanitizer_syscall_post__sched_setparam	include/sanitizer/netbsd_syscall_hooks.h	1790;"	d
__sanitizer_syscall_post__sysctl	include/sanitizer/linux_syscall_hooks.h	2001;"	d
__sanitizer_syscall_post_accept	include/sanitizer/linux_syscall_hooks.h	1091;"	d
__sanitizer_syscall_post_accept	include/sanitizer/netbsd_syscall_hooks.h	194;"	d
__sanitizer_syscall_post_accept4	include/sanitizer/linux_syscall_hooks.h	1097;"	d
__sanitizer_syscall_post_access	include/sanitizer/linux_syscall_hooks.h	817;"	d
__sanitizer_syscall_post_access	include/sanitizer/netbsd_syscall_hooks.h	211;"	d
__sanitizer_syscall_post_acct	include/sanitizer/linux_syscall_hooks.h	155;"	d
__sanitizer_syscall_post_acct	include/sanitizer/netbsd_syscall_hooks.h	297;"	d
__sanitizer_syscall_post_add_key	include/sanitizer/linux_syscall_hooks.h	1463;"	d
__sanitizer_syscall_post_adjtimex	include/sanitizer/linux_syscall_hooks.h	42;"	d
__sanitizer_syscall_post_afs_syscall	include/sanitizer/linux_syscall_hooks.h	1931;"	d
__sanitizer_syscall_post_afssys	include/sanitizer/netbsd_syscall_hooks.h	1097;"	d
__sanitizer_syscall_post_aio_cancel	include/sanitizer/netbsd_syscall_hooks.h	2166;"	d
__sanitizer_syscall_post_aio_error	include/sanitizer/netbsd_syscall_hooks.h	2171;"	d
__sanitizer_syscall_post_aio_fsync	include/sanitizer/netbsd_syscall_hooks.h	2175;"	d
__sanitizer_syscall_post_aio_read	include/sanitizer/netbsd_syscall_hooks.h	2180;"	d
__sanitizer_syscall_post_aio_return	include/sanitizer/netbsd_syscall_hooks.h	2184;"	d
__sanitizer_syscall_post_aio_write	include/sanitizer/netbsd_syscall_hooks.h	2195;"	d
__sanitizer_syscall_post_alarm	include/sanitizer/linux_syscall_hooks.h	57;"	d
__sanitizer_syscall_post_arch_prctl	include/sanitizer/linux_syscall_hooks.h	1932;"	d
__sanitizer_syscall_post_bdflush	include/sanitizer/linux_syscall_hooks.h	451;"	d
__sanitizer_syscall_post_bind	include/sanitizer/linux_syscall_hooks.h	1081;"	d
__sanitizer_syscall_post_bind	include/sanitizer/netbsd_syscall_hooks.h	549;"	d
__sanitizer_syscall_post_break	include/sanitizer/linux_syscall_hooks.h	1933;"	d
__sanitizer_syscall_post_break	include/sanitizer/netbsd_syscall_hooks.h	122;"	d
__sanitizer_syscall_post_brk	include/sanitizer/linux_syscall_hooks.h	608;"	d
__sanitizer_syscall_post_capget	include/sanitizer/linux_syscall_hooks.h	159;"	d
__sanitizer_syscall_post_capset	include/sanitizer/linux_syscall_hooks.h	163;"	d
__sanitizer_syscall_post_chdir	include/sanitizer/linux_syscall_hooks.h	1027;"	d
__sanitizer_syscall_post_chdir	include/sanitizer/netbsd_syscall_hooks.h	98;"	d
__sanitizer_syscall_post_chflags	include/sanitizer/netbsd_syscall_hooks.h	216;"	d
__sanitizer_syscall_post_chmod	include/sanitizer/linux_syscall_hooks.h	704;"	d
__sanitizer_syscall_post_chmod	include/sanitizer/netbsd_syscall_hooks.h	112;"	d
__sanitizer_syscall_post_chown	include/sanitizer/linux_syscall_hooks.h	825;"	d
__sanitizer_syscall_post_chown	include/sanitizer/netbsd_syscall_hooks.h	117;"	d
__sanitizer_syscall_post_chown16	include/sanitizer/linux_syscall_hooks.h	842;"	d
__sanitizer_syscall_post_chown32	include/sanitizer/linux_syscall_hooks.h	1934;"	d
__sanitizer_syscall_post_chroot	include/sanitizer/linux_syscall_hooks.h	678;"	d
__sanitizer_syscall_post_chroot	include/sanitizer/netbsd_syscall_hooks.h	346;"	d
__sanitizer_syscall_post_clock_adjtime	include/sanitizer/linux_syscall_hooks.h	233;"	d
__sanitizer_syscall_post_clock_getcpuclockid2	include/sanitizer/netbsd_syscall_hooks.h	2705;"	d
__sanitizer_syscall_post_clock_getres	include/sanitizer/linux_syscall_hooks.h	238;"	d
__sanitizer_syscall_post_clock_gettime	include/sanitizer/linux_syscall_hooks.h	228;"	d
__sanitizer_syscall_post_clock_nanosleep	include/sanitizer/linux_syscall_hooks.h	245;"	d
__sanitizer_syscall_post_clock_nanosleep	include/sanitizer/netbsd_syscall_hooks.h	2664;"	d
__sanitizer_syscall_post_clock_settime	include/sanitizer/linux_syscall_hooks.h	223;"	d
__sanitizer_syscall_post_clone	include/sanitizer/linux_syscall_hooks.h	1935;"	d
__sanitizer_syscall_post_close	include/sanitizer/linux_syscall_hooks.h	813;"	d
__sanitizer_syscall_post_close	include/sanitizer/netbsd_syscall_hooks.h	70;"	d
__sanitizer_syscall_post_compat_09_ogetdomainname	include/sanitizer/netbsd_syscall_hooks.h	833;"	d
__sanitizer_syscall_post_compat_09_osetdomainname	include/sanitizer/netbsd_syscall_hooks.h	840;"	d
__sanitizer_syscall_post_compat_09_ouname	include/sanitizer/netbsd_syscall_hooks.h	846;"	d
__sanitizer_syscall_post_compat_10_omsgsys	include/sanitizer/netbsd_syscall_hooks.h	873;"	d
__sanitizer_syscall_post_compat_10_osemsys	include/sanitizer/netbsd_syscall_hooks.h	861;"	d
__sanitizer_syscall_post_compat_10_oshmsys	include/sanitizer/netbsd_syscall_hooks.h	885;"	d
__sanitizer_syscall_post_compat_12_fstat12	include/sanitizer/netbsd_syscall_hooks.h	970;"	d
__sanitizer_syscall_post_compat_12_getdirentries	include/sanitizer/netbsd_syscall_hooks.h	1004;"	d
__sanitizer_syscall_post_compat_12_lstat12	include/sanitizer/netbsd_syscall_hooks.h	976;"	d
__sanitizer_syscall_post_compat_12_msync	include/sanitizer/netbsd_syscall_hooks.h	370;"	d
__sanitizer_syscall_post_compat_12_oreboot	include/sanitizer/netbsd_syscall_hooks.h	317;"	d
__sanitizer_syscall_post_compat_12_oswapon	include/sanitizer/netbsd_syscall_hooks.h	450;"	d
__sanitizer_syscall_post_compat_12_stat12	include/sanitizer/netbsd_syscall_hooks.h	964;"	d
__sanitizer_syscall_post_compat_13_sigaction13	include/sanitizer/netbsd_syscall_hooks.h	273;"	d
__sanitizer_syscall_post_compat_13_sigaltstack13	include/sanitizer/netbsd_syscall_hooks.h	306;"	d
__sanitizer_syscall_post_compat_13_sigpending13	include/sanitizer/netbsd_syscall_hooks.h	301;"	d
__sanitizer_syscall_post_compat_13_sigprocmask13	include/sanitizer/netbsd_syscall_hooks.h	282;"	d
__sanitizer_syscall_post_compat_13_sigreturn13	include/sanitizer/netbsd_syscall_hooks.h	543;"	d
__sanitizer_syscall_post_compat_13_sigsuspend13	include/sanitizer/netbsd_syscall_hooks.h	582;"	d
__sanitizer_syscall_post_compat_14___semctl	include/sanitizer/netbsd_syscall_hooks.h	1114;"	d
__sanitizer_syscall_post_compat_14_msgctl	include/sanitizer/netbsd_syscall_hooks.h	1138;"	d
__sanitizer_syscall_post_compat_14_shmctl	include/sanitizer/netbsd_syscall_hooks.h	1171;"	d
__sanitizer_syscall_post_compat_16___sigaction14	include/sanitizer/netbsd_syscall_hooks.h	1518;"	d
__sanitizer_syscall_post_compat_16___sigreturn14	include/sanitizer/netbsd_syscall_hooks.h	1538;"	d
__sanitizer_syscall_post_compat_20_fhstatfs	include/sanitizer/netbsd_syscall_hooks.h	1565;"	d
__sanitizer_syscall_post_compat_20_fstatfs	include/sanitizer/netbsd_syscall_hooks.h	819;"	d
__sanitizer_syscall_post_compat_20_getfsstat	include/sanitizer/netbsd_syscall_hooks.h	127;"	d
__sanitizer_syscall_post_compat_20_statfs	include/sanitizer/netbsd_syscall_hooks.h	813;"	d
__sanitizer_syscall_post_compat_30___fhstat30	include/sanitizer/netbsd_syscall_hooks.h	2123;"	d
__sanitizer_syscall_post_compat_30___fstat13	include/sanitizer/netbsd_syscall_hooks.h	1446;"	d
__sanitizer_syscall_post_compat_30___lstat13	include/sanitizer/netbsd_syscall_hooks.h	1452;"	d
__sanitizer_syscall_post_compat_30___stat13	include/sanitizer/netbsd_syscall_hooks.h	1440;"	d
__sanitizer_syscall_post_compat_30_fhopen	include/sanitizer/netbsd_syscall_hooks.h	1553;"	d
__sanitizer_syscall_post_compat_30_fhstat	include/sanitizer/netbsd_syscall_hooks.h	1559;"	d
__sanitizer_syscall_post_compat_30_fhstatvfs1	include/sanitizer/netbsd_syscall_hooks.h	1866;"	d
__sanitizer_syscall_post_compat_30_getdents	include/sanitizer/netbsd_syscall_hooks.h	1405;"	d
__sanitizer_syscall_post_compat_30_getfh	include/sanitizer/netbsd_syscall_hooks.h	827;"	d
__sanitizer_syscall_post_compat_30_ntp_gettime	include/sanitizer/netbsd_syscall_hooks.h	911;"	d
__sanitizer_syscall_post_compat_30_socket	include/sanitizer/netbsd_syscall_hooks.h	507;"	d
__sanitizer_syscall_post_compat_40_mount	include/sanitizer/netbsd_syscall_hooks.h	143;"	d
__sanitizer_syscall_post_compat_43_fstat43	include/sanitizer/netbsd_syscall_hooks.h	351;"	d
__sanitizer_syscall_post_compat_43_lstat43	include/sanitizer/netbsd_syscall_hooks.h	243;"	d
__sanitizer_syscall_post_compat_43_oaccept	include/sanitizer/netbsd_syscall_hooks.h	519;"	d
__sanitizer_syscall_post_compat_43_ocreat	include/sanitizer/netbsd_syscall_hooks.h	84;"	d
__sanitizer_syscall_post_compat_43_oftruncate	include/sanitizer/netbsd_syscall_hooks.h	686;"	d
__sanitizer_syscall_post_compat_43_ogetdirentries	include/sanitizer/netbsd_syscall_hooks.h	805;"	d
__sanitizer_syscall_post_compat_43_ogetdtablesize	include/sanitizer/netbsd_syscall_hooks.h	472;"	d
__sanitizer_syscall_post_compat_43_ogethostid	include/sanitizer/netbsd_syscall_hooks.h	747;"	d
__sanitizer_syscall_post_compat_43_ogethostname	include/sanitizer/netbsd_syscall_hooks.h	461;"	d
__sanitizer_syscall_post_compat_43_ogetkerninfo	include/sanitizer/netbsd_syscall_hooks.h	358;"	d
__sanitizer_syscall_post_compat_43_ogetpagesize	include/sanitizer/netbsd_syscall_hooks.h	365;"	d
__sanitizer_syscall_post_compat_43_ogetpeername	include/sanitizer/netbsd_syscall_hooks.h	742;"	d
__sanitizer_syscall_post_compat_43_ogetrlimit	include/sanitizer/netbsd_syscall_hooks.h	756;"	d
__sanitizer_syscall_post_compat_43_ogetsockname	include/sanitizer/netbsd_syscall_hooks.h	788;"	d
__sanitizer_syscall_post_compat_43_okillpg	include/sanitizer/netbsd_syscall_hooks.h	768;"	d
__sanitizer_syscall_post_compat_43_olseek	include/sanitizer/netbsd_syscall_hooks.h	133;"	d
__sanitizer_syscall_post_compat_43_ommap	include/sanitizer/netbsd_syscall_hooks.h	385;"	d
__sanitizer_syscall_post_compat_43_oquota	include/sanitizer/netbsd_syscall_hooks.h	783;"	d
__sanitizer_syscall_post_compat_43_orecv	include/sanitizer/netbsd_syscall_hooks.h	537;"	d
__sanitizer_syscall_post_compat_43_orecvfrom	include/sanitizer/netbsd_syscall_hooks.h	658;"	d
__sanitizer_syscall_post_compat_43_orecvmsg	include/sanitizer/netbsd_syscall_hooks.h	593;"	d
__sanitizer_syscall_post_compat_43_osend	include/sanitizer/netbsd_syscall_hooks.h	530;"	d
__sanitizer_syscall_post_compat_43_osendmsg	include/sanitizer/netbsd_syscall_hooks.h	599;"	d
__sanitizer_syscall_post_compat_43_osethostid	include/sanitizer/netbsd_syscall_hooks.h	751;"	d
__sanitizer_syscall_post_compat_43_osethostname	include/sanitizer/netbsd_syscall_hooks.h	467;"	d
__sanitizer_syscall_post_compat_43_osetrlimit	include/sanitizer/netbsd_syscall_hooks.h	762;"	d
__sanitizer_syscall_post_compat_43_osigblock	include/sanitizer/netbsd_syscall_hooks.h	574;"	d
__sanitizer_syscall_post_compat_43_osigsetmask	include/sanitizer/netbsd_syscall_hooks.h	578;"	d
__sanitizer_syscall_post_compat_43_osigstack	include/sanitizer/netbsd_syscall_hooks.h	587;"	d
__sanitizer_syscall_post_compat_43_osigvec	include/sanitizer/netbsd_syscall_hooks.h	569;"	d
__sanitizer_syscall_post_compat_43_otruncate	include/sanitizer/netbsd_syscall_hooks.h	680;"	d
__sanitizer_syscall_post_compat_43_owait	include/sanitizer/netbsd_syscall_hooks.h	446;"	d
__sanitizer_syscall_post_compat_43_stat43	include/sanitizer/netbsd_syscall_hooks.h	234;"	d
__sanitizer_syscall_post_compat_50_____semctl13	include/sanitizer/netbsd_syscall_hooks.h	1573;"	d
__sanitizer_syscall_post_compat_50___fhstat40	include/sanitizer/netbsd_syscall_hooks.h	2160;"	d
__sanitizer_syscall_post_compat_50___fstat30	include/sanitizer/netbsd_syscall_hooks.h	2101;"	d
__sanitizer_syscall_post_compat_50___lstat30	include/sanitizer/netbsd_syscall_hooks.h	2107;"	d
__sanitizer_syscall_post_compat_50___msgctl13	include/sanitizer/netbsd_syscall_hooks.h	1581;"	d
__sanitizer_syscall_post_compat_50___ntp_gettime30	include/sanitizer/netbsd_syscall_hooks.h	2128;"	d
__sanitizer_syscall_post_compat_50___shmctl13	include/sanitizer/netbsd_syscall_hooks.h	1587;"	d
__sanitizer_syscall_post_compat_50___sigtimedwait	include/sanitizer/netbsd_syscall_hooks.h	1253;"	d
__sanitizer_syscall_post_compat_50___stat30	include/sanitizer/netbsd_syscall_hooks.h	2095;"	d
__sanitizer_syscall_post_compat_50__lwp_park	include/sanitizer/netbsd_syscall_hooks.h	1668;"	d
__sanitizer_syscall_post_compat_50_adjtime	include/sanitizer/netbsd_syscall_hooks.h	736;"	d
__sanitizer_syscall_post_compat_50_aio_suspend	include/sanitizer/netbsd_syscall_hooks.h	2189;"	d
__sanitizer_syscall_post_compat_50_clock_getres	include/sanitizer/netbsd_syscall_hooks.h	1199;"	d
__sanitizer_syscall_post_compat_50_clock_gettime	include/sanitizer/netbsd_syscall_hooks.h	1187;"	d
__sanitizer_syscall_post_compat_50_clock_settime	include/sanitizer/netbsd_syscall_hooks.h	1193;"	d
__sanitizer_syscall_post_compat_50_futimes	include/sanitizer/netbsd_syscall_hooks.h	1075;"	d
__sanitizer_syscall_post_compat_50_getitimer	include/sanitizer/netbsd_syscall_hooks.h	455;"	d
__sanitizer_syscall_post_compat_50_getrusage	include/sanitizer/netbsd_syscall_hooks.h	612;"	d
__sanitizer_syscall_post_compat_50_gettimeofday	include/sanitizer/netbsd_syscall_hooks.h	606;"	d
__sanitizer_syscall_post_compat_50_kevent	include/sanitizer/netbsd_syscall_hooks.h	1781;"	d
__sanitizer_syscall_post_compat_50_lfs_segwait	include/sanitizer/netbsd_syscall_hooks.h	958;"	d
__sanitizer_syscall_post_compat_50_lutimes	include/sanitizer/netbsd_syscall_hooks.h	1428;"	d
__sanitizer_syscall_post_compat_50_mknod	include/sanitizer/netbsd_syscall_hooks.h	107;"	d
__sanitizer_syscall_post_compat_50_mq_timedreceive	include/sanitizer/netbsd_syscall_hooks.h	1382;"	d
__sanitizer_syscall_post_compat_50_mq_timedsend	include/sanitizer/netbsd_syscall_hooks.h	1372;"	d
__sanitizer_syscall_post_compat_50_nanosleep	include/sanitizer/netbsd_syscall_hooks.h	1235;"	d
__sanitizer_syscall_post_compat_50_pollts	include/sanitizer/netbsd_syscall_hooks.h	2006;"	d
__sanitizer_syscall_post_compat_50_pselect	include/sanitizer/netbsd_syscall_hooks.h	1998;"	d
__sanitizer_syscall_post_compat_50_quotactl	include/sanitizer/netbsd_syscall_hooks.h	777;"	d
__sanitizer_syscall_post_compat_50_select	include/sanitizer/netbsd_syscall_hooks.h	489;"	d
__sanitizer_syscall_post_compat_50_setitimer	include/sanitizer/netbsd_syscall_hooks.h	441;"	d
__sanitizer_syscall_post_compat_50_settimeofday	include/sanitizer/netbsd_syscall_hooks.h	640;"	d
__sanitizer_syscall_post_compat_50_timer_gettime	include/sanitizer/netbsd_syscall_hooks.h	1225;"	d
__sanitizer_syscall_post_compat_50_timer_settime	include/sanitizer/netbsd_syscall_hooks.h	1217;"	d
__sanitizer_syscall_post_compat_50_utimes	include/sanitizer/netbsd_syscall_hooks.h	729;"	d
__sanitizer_syscall_post_compat_50_wait4	include/sanitizer/netbsd_syscall_hooks.h	76;"	d
__sanitizer_syscall_post_compat_60__lwp_park	include/sanitizer/netbsd_syscall_hooks.h	2375;"	d
__sanitizer_syscall_post_compat_60_sa_enable	include/sanitizer/netbsd_syscall_hooks.h	1725;"	d
__sanitizer_syscall_post_compat_60_sa_preempt	include/sanitizer/netbsd_syscall_hooks.h	1739;"	d
__sanitizer_syscall_post_compat_60_sa_register	include/sanitizer/netbsd_syscall_hooks.h	1712;"	d
__sanitizer_syscall_post_compat_60_sa_setconcurrency	include/sanitizer/netbsd_syscall_hooks.h	1730;"	d
__sanitizer_syscall_post_compat_60_sa_stacks	include/sanitizer/netbsd_syscall_hooks.h	1720;"	d
__sanitizer_syscall_post_compat_60_sa_yield	include/sanitizer/netbsd_syscall_hooks.h	1735;"	d
__sanitizer_syscall_post_connect	include/sanitizer/linux_syscall_hooks.h	1086;"	d
__sanitizer_syscall_post_connect	include/sanitizer/netbsd_syscall_hooks.h	513;"	d
__sanitizer_syscall_post_creat	include/sanitizer/linux_syscall_hooks.h	803;"	d
__sanitizer_syscall_post_create_module	include/sanitizer/linux_syscall_hooks.h	1936;"	d
__sanitizer_syscall_post_delete_module	include/sanitizer/linux_syscall_hooks.h	375;"	d
__sanitizer_syscall_post_dup	include/sanitizer/linux_syscall_hooks.h	729;"	d
__sanitizer_syscall_post_dup	include/sanitizer/netbsd_syscall_hooks.h	248;"	d
__sanitizer_syscall_post_dup2	include/sanitizer/linux_syscall_hooks.h	733;"	d
__sanitizer_syscall_post_dup2	include/sanitizer/netbsd_syscall_hooks.h	476;"	d
__sanitizer_syscall_post_dup3	include/sanitizer/linux_syscall_hooks.h	737;"	d
__sanitizer_syscall_post_dup3	include/sanitizer/netbsd_syscall_hooks.h	2504;"	d
__sanitizer_syscall_post_epoll_create	include/sanitizer/linux_syscall_hooks.h	1201;"	d
__sanitizer_syscall_post_epoll_create1	include/sanitizer/linux_syscall_hooks.h	1205;"	d
__sanitizer_syscall_post_epoll_ctl	include/sanitizer/linux_syscall_hooks.h	1210;"	d
__sanitizer_syscall_post_epoll_ctl_old	include/sanitizer/linux_syscall_hooks.h	1937;"	d
__sanitizer_syscall_post_epoll_pwait	include/sanitizer/linux_syscall_hooks.h	1225;"	d
__sanitizer_syscall_post_epoll_wait	include/sanitizer/linux_syscall_hooks.h	1216;"	d
__sanitizer_syscall_post_epoll_wait_old	include/sanitizer/linux_syscall_hooks.h	1938;"	d
__sanitizer_syscall_post_eventfd	include/sanitizer/linux_syscall_hooks.h	1735;"	d
__sanitizer_syscall_post_eventfd2	include/sanitizer/linux_syscall_hooks.h	1739;"	d
__sanitizer_syscall_post_execve	include/sanitizer/linux_syscall_hooks.h	1939;"	d
__sanitizer_syscall_post_execve	include/sanitizer/netbsd_syscall_hooks.h	337;"	d
__sanitizer_syscall_post_exit	include/sanitizer/linux_syscall_hooks.h	338;"	d
__sanitizer_syscall_post_exit	include/sanitizer/netbsd_syscall_hooks.h	45;"	d
__sanitizer_syscall_post_exit_group	include/sanitizer/linux_syscall_hooks.h	342;"	d
__sanitizer_syscall_post_extattr_delete_fd	include/sanitizer/netbsd_syscall_hooks.h	1931;"	d
__sanitizer_syscall_post_extattr_delete_file	include/sanitizer/netbsd_syscall_hooks.h	1903;"	d
__sanitizer_syscall_post_extattr_delete_link	include/sanitizer/netbsd_syscall_hooks.h	1959;"	d
__sanitizer_syscall_post_extattr_get_fd	include/sanitizer/netbsd_syscall_hooks.h	1923;"	d
__sanitizer_syscall_post_extattr_get_file	include/sanitizer/netbsd_syscall_hooks.h	1894;"	d
__sanitizer_syscall_post_extattr_get_link	include/sanitizer/netbsd_syscall_hooks.h	1950;"	d
__sanitizer_syscall_post_extattr_list_fd	include/sanitizer/netbsd_syscall_hooks.h	1969;"	d
__sanitizer_syscall_post_extattr_list_file	include/sanitizer/netbsd_syscall_hooks.h	1979;"	d
__sanitizer_syscall_post_extattr_list_link	include/sanitizer/netbsd_syscall_hooks.h	1989;"	d
__sanitizer_syscall_post_extattr_set_fd	include/sanitizer/netbsd_syscall_hooks.h	1913;"	d
__sanitizer_syscall_post_extattr_set_file	include/sanitizer/netbsd_syscall_hooks.h	1884;"	d
__sanitizer_syscall_post_extattr_set_link	include/sanitizer/netbsd_syscall_hooks.h	1940;"	d
__sanitizer_syscall_post_extattrctl	include/sanitizer/netbsd_syscall_hooks.h	1874;"	d
__sanitizer_syscall_post_faccessat	include/sanitizer/linux_syscall_hooks.h	1616;"	d
__sanitizer_syscall_post_faccessat	include/sanitizer/netbsd_syscall_hooks.h	2559;"	d
__sanitizer_syscall_post_fadvise64	include/sanitizer/linux_syscall_hooks.h	1940;"	d
__sanitizer_syscall_post_fadvise64_64	include/sanitizer/linux_syscall_hooks.h	1941;"	d
__sanitizer_syscall_post_fallocate	include/sanitizer/linux_syscall_hooks.h	1942;"	d
__sanitizer_syscall_post_fanotify_init	include/sanitizer/linux_syscall_hooks.h	1943;"	d
__sanitizer_syscall_post_fanotify_mark	include/sanitizer/linux_syscall_hooks.h	1944;"	d
__sanitizer_syscall_post_fchdir	include/sanitizer/linux_syscall_hooks.h	1031;"	d
__sanitizer_syscall_post_fchdir	include/sanitizer/netbsd_syscall_hooks.h	102;"	d
__sanitizer_syscall_post_fchflags	include/sanitizer/netbsd_syscall_hooks.h	221;"	d
__sanitizer_syscall_post_fchmod	include/sanitizer/linux_syscall_hooks.h	708;"	d
__sanitizer_syscall_post_fchmod	include/sanitizer/netbsd_syscall_hooks.h	651;"	d
__sanitizer_syscall_post_fchmodat	include/sanitizer/linux_syscall_hooks.h	1622;"	d
__sanitizer_syscall_post_fchmodat	include/sanitizer/netbsd_syscall_hooks.h	2566;"	d
__sanitizer_syscall_post_fchown	include/sanitizer/linux_syscall_hooks.h	836;"	d
__sanitizer_syscall_post_fchown	include/sanitizer/netbsd_syscall_hooks.h	646;"	d
__sanitizer_syscall_post_fchown16	include/sanitizer/linux_syscall_hooks.h	853;"	d
__sanitizer_syscall_post_fchown32	include/sanitizer/linux_syscall_hooks.h	1945;"	d
__sanitizer_syscall_post_fchownat	include/sanitizer/linux_syscall_hooks.h	1629;"	d
__sanitizer_syscall_post_fchownat	include/sanitizer/netbsd_syscall_hooks.h	2574;"	d
__sanitizer_syscall_post_fchroot	include/sanitizer/netbsd_syscall_hooks.h	1548;"	d
__sanitizer_syscall_post_fcntl	include/sanitizer/linux_syscall_hooks.h	712;"	d
__sanitizer_syscall_post_fcntl	include/sanitizer/netbsd_syscall_hooks.h	482;"	d
__sanitizer_syscall_post_fcntl64	include/sanitizer/linux_syscall_hooks.h	716;"	d
__sanitizer_syscall_post_fdatasync	include/sanitizer/linux_syscall_hooks.h	447;"	d
__sanitizer_syscall_post_fdatasync	include/sanitizer/netbsd_syscall_hooks.h	1240;"	d
__sanitizer_syscall_post_fdiscard	include/sanitizer/netbsd_syscall_hooks.h	2689;"	d
__sanitizer_syscall_post_fexecve	include/sanitizer/netbsd_syscall_hooks.h	2581;"	d
__sanitizer_syscall_post_fgetxattr	include/sanitizer/linux_syscall_hooks.h	573;"	d
__sanitizer_syscall_post_fgetxattr	include/sanitizer/netbsd_syscall_hooks.h	2054;"	d
__sanitizer_syscall_post_fktrace	include/sanitizer/netbsd_syscall_hooks.h	1495;"	d
__sanitizer_syscall_post_flistxattr	include/sanitizer/linux_syscall_hooks.h	591;"	d
__sanitizer_syscall_post_flistxattr	include/sanitizer/netbsd_syscall_hooks.h	2073;"	d
__sanitizer_syscall_post_flock	include/sanitizer/linux_syscall_hooks.h	751;"	d
__sanitizer_syscall_post_flock	include/sanitizer/netbsd_syscall_hooks.h	691;"	d
__sanitizer_syscall_post_fork	include/sanitizer/linux_syscall_hooks.h	1832;"	d
__sanitizer_syscall_post_fork	include/sanitizer/netbsd_syscall_hooks.h	48;"	d
__sanitizer_syscall_post_fpathconf	include/sanitizer/netbsd_syscall_hooks.h	986;"	d
__sanitizer_syscall_post_fremovexattr	include/sanitizer/linux_syscall_hooks.h	604;"	d
__sanitizer_syscall_post_fremovexattr	include/sanitizer/netbsd_syscall_hooks.h	2089;"	d
__sanitizer_syscall_post_fsetxattr	include/sanitizer/linux_syscall_hooks.h	554;"	d
__sanitizer_syscall_post_fsetxattr	include/sanitizer/netbsd_syscall_hooks.h	2031;"	d
__sanitizer_syscall_post_fstat	include/sanitizer/linux_syscall_hooks.h	506;"	d
__sanitizer_syscall_post_fstat64	include/sanitizer/linux_syscall_hooks.h	530;"	d
__sanitizer_syscall_post_fstatat	include/sanitizer/netbsd_syscall_hooks.h	2587;"	d
__sanitizer_syscall_post_fstatat64	include/sanitizer/linux_syscall_hooks.h	1649;"	d
__sanitizer_syscall_post_fstatfs	include/sanitizer/linux_syscall_hooks.h	493;"	d
__sanitizer_syscall_post_fstatfs64	include/sanitizer/linux_syscall_hooks.h	497;"	d
__sanitizer_syscall_post_fstatvfs1	include/sanitizer/netbsd_syscall_hooks.h	1860;"	d
__sanitizer_syscall_post_fsync	include/sanitizer/linux_syscall_hooks.h	443;"	d
__sanitizer_syscall_post_fsync	include/sanitizer/netbsd_syscall_hooks.h	496;"	d
__sanitizer_syscall_post_fsync_range	include/sanitizer/netbsd_syscall_hooks.h	1836;"	d
__sanitizer_syscall_post_ftime	include/sanitizer/linux_syscall_hooks.h	1946;"	d
__sanitizer_syscall_post_ftruncate	include/sanitizer/linux_syscall_hooks.h	476;"	d
__sanitizer_syscall_post_ftruncate	include/sanitizer/netbsd_syscall_hooks.h	1046;"	d
__sanitizer_syscall_post_ftruncate64	include/sanitizer/linux_syscall_hooks.h	1947;"	d
__sanitizer_syscall_post_futex	include/sanitizer/linux_syscall_hooks.h	1948;"	d
__sanitizer_syscall_post_futimens	include/sanitizer/netbsd_syscall_hooks.h	2627;"	d
__sanitizer_syscall_post_futimesat	include/sanitizer/linux_syscall_hooks.h	1610;"	d
__sanitizer_syscall_post_get_kernel_syms	include/sanitizer/linux_syscall_hooks.h	1953;"	d
__sanitizer_syscall_post_get_mempolicy	include/sanitizer/linux_syscall_hooks.h	1531;"	d
__sanitizer_syscall_post_get_robust_list	include/sanitizer/linux_syscall_hooks.h	1693;"	d
__sanitizer_syscall_post_get_thread_area	include/sanitizer/linux_syscall_hooks.h	1957;"	d
__sanitizer_syscall_post_getcontext	include/sanitizer/netbsd_syscall_hooks.h	1607;"	d
__sanitizer_syscall_post_getcpu	include/sanitizer/linux_syscall_hooks.h	1702;"	d
__sanitizer_syscall_post_getcwd	include/sanitizer/linux_syscall_hooks.h	1019;"	d
__sanitizer_syscall_post_getdents	include/sanitizer/linux_syscall_hooks.h	1052;"	d
__sanitizer_syscall_post_getdents64	include/sanitizer/linux_syscall_hooks.h	1058;"	d
__sanitizer_syscall_post_getegid	include/sanitizer/linux_syscall_hooks.h	75;"	d
__sanitizer_syscall_post_getegid	include/sanitizer/netbsd_syscall_hooks.h	254;"	d
__sanitizer_syscall_post_getegid16	include/sanitizer/linux_syscall_hooks.h	928;"	d
__sanitizer_syscall_post_getegid32	include/sanitizer/linux_syscall_hooks.h	1949;"	d
__sanitizer_syscall_post_geteuid	include/sanitizer/linux_syscall_hooks.h	69;"	d
__sanitizer_syscall_post_geteuid	include/sanitizer/netbsd_syscall_hooks.h	160;"	d
__sanitizer_syscall_post_geteuid16	include/sanitizer/linux_syscall_hooks.h	920;"	d
__sanitizer_syscall_post_geteuid32	include/sanitizer/linux_syscall_hooks.h	1950;"	d
__sanitizer_syscall_post_getgid	include/sanitizer/linux_syscall_hooks.h	72;"	d
__sanitizer_syscall_post_getgid	include/sanitizer/netbsd_syscall_hooks.h	277;"	d
__sanitizer_syscall_post_getgid16	include/sanitizer/linux_syscall_hooks.h	924;"	d
__sanitizer_syscall_post_getgid32	include/sanitizer/linux_syscall_hooks.h	1951;"	d
__sanitizer_syscall_post_getgroups	include/sanitizer/linux_syscall_hooks.h	102;"	d
__sanitizer_syscall_post_getgroups	include/sanitizer/netbsd_syscall_hooks.h	421;"	d
__sanitizer_syscall_post_getgroups16	include/sanitizer/linux_syscall_hooks.h	905;"	d
__sanitizer_syscall_post_getgroups32	include/sanitizer/linux_syscall_hooks.h	1952;"	d
__sanitizer_syscall_post_gethostname	include/sanitizer/linux_syscall_hooks.h	1232;"	d
__sanitizer_syscall_post_getitimer	include/sanitizer/linux_syscall_hooks.h	181;"	d
__sanitizer_syscall_post_getpeername	include/sanitizer/linux_syscall_hooks.h	1109;"	d
__sanitizer_syscall_post_getpeername	include/sanitizer/netbsd_syscall_hooks.h	200;"	d
__sanitizer_syscall_post_getpgid	include/sanitizer/linux_syscall_hooks.h	91;"	d
__sanitizer_syscall_post_getpgid	include/sanitizer/netbsd_syscall_hooks.h	1080;"	d
__sanitizer_syscall_post_getpgrp	include/sanitizer/linux_syscall_hooks.h	94;"	d
__sanitizer_syscall_post_getpgrp	include/sanitizer/netbsd_syscall_hooks.h	431;"	d
__sanitizer_syscall_post_getpid	include/sanitizer/linux_syscall_hooks.h	60;"	d
__sanitizer_syscall_post_getpid	include/sanitizer/netbsd_syscall_hooks.h	137;"	d
__sanitizer_syscall_post_getpmsg	include/sanitizer/linux_syscall_hooks.h	1954;"	d
__sanitizer_syscall_post_getppid	include/sanitizer/linux_syscall_hooks.h	63;"	d
__sanitizer_syscall_post_getppid	include/sanitizer/netbsd_syscall_hooks.h	238;"	d
__sanitizer_syscall_post_getpriority	include/sanitizer/linux_syscall_hooks.h	311;"	d
__sanitizer_syscall_post_getpriority	include/sanitizer/netbsd_syscall_hooks.h	524;"	d
__sanitizer_syscall_post_getresgid	include/sanitizer/linux_syscall_hooks.h	86;"	d
__sanitizer_syscall_post_getresgid16	include/sanitizer/linux_syscall_hooks.h	891;"	d
__sanitizer_syscall_post_getresgid32	include/sanitizer/linux_syscall_hooks.h	1955;"	d
__sanitizer_syscall_post_getresuid	include/sanitizer/linux_syscall_hooks.h	80;"	d
__sanitizer_syscall_post_getresuid16	include/sanitizer/linux_syscall_hooks.h	880;"	d
__sanitizer_syscall_post_getresuid32	include/sanitizer/linux_syscall_hooks.h	1956;"	d
__sanitizer_syscall_post_getrlimit	include/sanitizer/linux_syscall_hooks.h	1256;"	d
__sanitizer_syscall_post_getrlimit	include/sanitizer/netbsd_syscall_hooks.h	992;"	d
__sanitizer_syscall_post_getrusage	include/sanitizer/linux_syscall_hooks.h	1276;"	d
__sanitizer_syscall_post_getsid	include/sanitizer/linux_syscall_hooks.h	98;"	d
__sanitizer_syscall_post_getsid	include/sanitizer/netbsd_syscall_hooks.h	1485;"	d
__sanitizer_syscall_post_getsockname	include/sanitizer/linux_syscall_hooks.h	1103;"	d
__sanitizer_syscall_post_getsockname	include/sanitizer/netbsd_syscall_hooks.h	206;"	d
__sanitizer_syscall_post_getsockopt	include/sanitizer/linux_syscall_hooks.h	1074;"	d
__sanitizer_syscall_post_getsockopt	include/sanitizer/netbsd_syscall_hooks.h	619;"	d
__sanitizer_syscall_post_gettid	include/sanitizer/linux_syscall_hooks.h	49;"	d
__sanitizer_syscall_post_gettimeofday	include/sanitizer/linux_syscall_hooks.h	34;"	d
__sanitizer_syscall_post_getuid	include/sanitizer/linux_syscall_hooks.h	66;"	d
__sanitizer_syscall_post_getuid	include/sanitizer/netbsd_syscall_hooks.h	157;"	d
__sanitizer_syscall_post_getuid16	include/sanitizer/linux_syscall_hooks.h	916;"	d
__sanitizer_syscall_post_getuid32	include/sanitizer/linux_syscall_hooks.h	1958;"	d
__sanitizer_syscall_post_getvfsstat	include/sanitizer/netbsd_syscall_hooks.h	1848;"	d
__sanitizer_syscall_post_getxattr	include/sanitizer/linux_syscall_hooks.h	561;"	d
__sanitizer_syscall_post_getxattr	include/sanitizer/netbsd_syscall_hooks.h	2038;"	d
__sanitizer_syscall_post_gtty	include/sanitizer/linux_syscall_hooks.h	1959;"	d
__sanitizer_syscall_post_idle	include/sanitizer/linux_syscall_hooks.h	1960;"	d
__sanitizer_syscall_post_init_module	include/sanitizer/linux_syscall_hooks.h	370;"	d
__sanitizer_syscall_post_inotify_add_watch	include/sanitizer/linux_syscall_hooks.h	1547;"	d
__sanitizer_syscall_post_inotify_init	include/sanitizer/linux_syscall_hooks.h	1538;"	d
__sanitizer_syscall_post_inotify_init1	include/sanitizer/linux_syscall_hooks.h	1542;"	d
__sanitizer_syscall_post_inotify_rm_watch	include/sanitizer/linux_syscall_hooks.h	1552;"	d
__sanitizer_syscall_post_io_cancel	include/sanitizer/linux_syscall_hooks.h	780;"	d
__sanitizer_syscall_post_io_destroy	include/sanitizer/linux_syscall_hooks.h	759;"	d
__sanitizer_syscall_post_io_getevents	include/sanitizer/linux_syscall_hooks.h	766;"	d
__sanitizer_syscall_post_io_setup	include/sanitizer/linux_syscall_hooks.h	755;"	d
__sanitizer_syscall_post_io_submit	include/sanitizer/linux_syscall_hooks.h	774;"	d
__sanitizer_syscall_post_ioctl	include/sanitizer/linux_syscall_hooks.h	747;"	d
__sanitizer_syscall_post_ioctl	include/sanitizer/netbsd_syscall_hooks.h	312;"	d
__sanitizer_syscall_post_ioperm	include/sanitizer/linux_syscall_hooks.h	742;"	d
__sanitizer_syscall_post_iopl	include/sanitizer/linux_syscall_hooks.h	1961;"	d
__sanitizer_syscall_post_ioprio_get	include/sanitizer/linux_syscall_hooks.h	1493;"	d
__sanitizer_syscall_post_ioprio_set	include/sanitizer/linux_syscall_hooks.h	1488;"	d
__sanitizer_syscall_post_ipc	include/sanitizer/linux_syscall_hooks.h	1353;"	d
__sanitizer_syscall_post_issetugid	include/sanitizer/netbsd_syscall_hooks.h	1597;"	d
__sanitizer_syscall_post_kexec_load	include/sanitizer/linux_syscall_hooks.h	331;"	d
__sanitizer_syscall_post_keyctl	include/sanitizer/linux_syscall_hooks.h	1481;"	d
__sanitizer_syscall_post_kill	include/sanitizer/linux_syscall_hooks.h	406;"	d
__sanitizer_syscall_post_kill	include/sanitizer/netbsd_syscall_hooks.h	229;"	d
__sanitizer_syscall_post_kqueue	include/sanitizer/netbsd_syscall_hooks.h	1774;"	d
__sanitizer_syscall_post_kqueue1	include/sanitizer/netbsd_syscall_hooks.h	2509;"	d
__sanitizer_syscall_post_ktrace	include/sanitizer/netbsd_syscall_hooks.h	266;"	d
__sanitizer_syscall_post_lchflags	include/sanitizer/netbsd_syscall_hooks.h	1592;"	d
__sanitizer_syscall_post_lchmod	include/sanitizer/netbsd_syscall_hooks.h	1416;"	d
__sanitizer_syscall_post_lchown	include/sanitizer/linux_syscall_hooks.h	831;"	d
__sanitizer_syscall_post_lchown	include/sanitizer/netbsd_syscall_hooks.h	1422;"	d
__sanitizer_syscall_post_lchown16	include/sanitizer/linux_syscall_hooks.h	848;"	d
__sanitizer_syscall_post_lchown32	include/sanitizer/linux_syscall_hooks.h	1962;"	d
__sanitizer_syscall_post_lfs_bmapv	include/sanitizer/netbsd_syscall_hooks.h	940;"	d
__sanitizer_syscall_post_lfs_markv	include/sanitizer/netbsd_syscall_hooks.h	946;"	d
__sanitizer_syscall_post_lfs_segclean	include/sanitizer/netbsd_syscall_hooks.h	952;"	d
__sanitizer_syscall_post_lgetxattr	include/sanitizer/linux_syscall_hooks.h	567;"	d
__sanitizer_syscall_post_lgetxattr	include/sanitizer/netbsd_syscall_hooks.h	2046;"	d
__sanitizer_syscall_post_link	include/sanitizer/linux_syscall_hooks.h	688;"	d
__sanitizer_syscall_post_link	include/sanitizer/netbsd_syscall_hooks.h	89;"	d
__sanitizer_syscall_post_linkat	include/sanitizer/linux_syscall_hooks.h	1595;"	d
__sanitizer_syscall_post_linkat	include/sanitizer/netbsd_syscall_hooks.h	2523;"	d
__sanitizer_syscall_post_lio_listio	include/sanitizer/netbsd_syscall_hooks.h	2201;"	d
__sanitizer_syscall_post_listen	include/sanitizer/linux_syscall_hooks.h	1182;"	d
__sanitizer_syscall_post_listen	include/sanitizer/netbsd_syscall_hooks.h	562;"	d
__sanitizer_syscall_post_listxattr	include/sanitizer/linux_syscall_hooks.h	579;"	d
__sanitizer_syscall_post_listxattr	include/sanitizer/netbsd_syscall_hooks.h	2061;"	d
__sanitizer_syscall_post_llistxattr	include/sanitizer/linux_syscall_hooks.h	585;"	d
__sanitizer_syscall_post_llistxattr	include/sanitizer/netbsd_syscall_hooks.h	2067;"	d
__sanitizer_syscall_post_llseek	include/sanitizer/linux_syscall_hooks.h	948;"	d
__sanitizer_syscall_post_lock	include/sanitizer/linux_syscall_hooks.h	1964;"	d
__sanitizer_syscall_post_lookup_dcookie	include/sanitizer/linux_syscall_hooks.h	1040;"	d
__sanitizer_syscall_post_lremovexattr	include/sanitizer/linux_syscall_hooks.h	600;"	d
__sanitizer_syscall_post_lremovexattr	include/sanitizer/netbsd_syscall_hooks.h	2084;"	d
__sanitizer_syscall_post_lseek	include/sanitizer/linux_syscall_hooks.h	940;"	d
__sanitizer_syscall_post_lseek	include/sanitizer/netbsd_syscall_hooks.h	1033;"	d
__sanitizer_syscall_post_lsetxattr	include/sanitizer/linux_syscall_hooks.h	546;"	d
__sanitizer_syscall_post_lsetxattr	include/sanitizer/netbsd_syscall_hooks.h	2022;"	d
__sanitizer_syscall_post_lstat	include/sanitizer/linux_syscall_hooks.h	502;"	d
__sanitizer_syscall_post_lstat64	include/sanitizer/linux_syscall_hooks.h	534;"	d
__sanitizer_syscall_post_madvise	include/sanitizer/linux_syscall_hooks.h	663;"	d
__sanitizer_syscall_post_madvise	include/sanitizer/netbsd_syscall_hooks.h	407;"	d
__sanitizer_syscall_post_madvise1	include/sanitizer/linux_syscall_hooks.h	1965;"	d
__sanitizer_syscall_post_mbind	include/sanitizer/linux_syscall_hooks.h	1521;"	d
__sanitizer_syscall_post_migrate_pages	include/sanitizer/linux_syscall_hooks.h	1504;"	d
__sanitizer_syscall_post_mincore	include/sanitizer/linux_syscall_hooks.h	668;"	d
__sanitizer_syscall_post_mincore	include/sanitizer/netbsd_syscall_hooks.h	415;"	d
__sanitizer_syscall_post_minherit	include/sanitizer/netbsd_syscall_hooks.h	1411;"	d
__sanitizer_syscall_post_mkdir	include/sanitizer/linux_syscall_hooks.h	1023;"	d
__sanitizer_syscall_post_mkdir	include/sanitizer/netbsd_syscall_hooks.h	720;"	d
__sanitizer_syscall_post_mkdirat	include/sanitizer/linux_syscall_hooks.h	1575;"	d
__sanitizer_syscall_post_mkdirat	include/sanitizer/netbsd_syscall_hooks.h	2552;"	d
__sanitizer_syscall_post_mkfifo	include/sanitizer/netbsd_syscall_hooks.h	695;"	d
__sanitizer_syscall_post_mkfifoat	include/sanitizer/netbsd_syscall_hooks.h	2538;"	d
__sanitizer_syscall_post_mknod	include/sanitizer/linux_syscall_hooks.h	683;"	d
__sanitizer_syscall_post_mknodat	include/sanitizer/linux_syscall_hooks.h	1569;"	d
__sanitizer_syscall_post_mknodat	include/sanitizer/netbsd_syscall_hooks.h	2545;"	d
__sanitizer_syscall_post_mlock	include/sanitizer/linux_syscall_hooks.h	646;"	d
__sanitizer_syscall_post_mlock	include/sanitizer/netbsd_syscall_hooks.h	1061;"	d
__sanitizer_syscall_post_mlockall	include/sanitizer/linux_syscall_hooks.h	654;"	d
__sanitizer_syscall_post_mlockall	include/sanitizer/netbsd_syscall_hooks.h	1244;"	d
__sanitizer_syscall_post_mmap	include/sanitizer/linux_syscall_hooks.h	1967;"	d
__sanitizer_syscall_post_mmap	include/sanitizer/netbsd_syscall_hooks.h	1013;"	d
__sanitizer_syscall_post_mmap2	include/sanitizer/linux_syscall_hooks.h	1966;"	d
__sanitizer_syscall_post_mmap_pgoff	include/sanitizer/linux_syscall_hooks.h	1781;"	d
__sanitizer_syscall_post_modctl	include/sanitizer/netbsd_syscall_hooks.h	1264;"	d
__sanitizer_syscall_post_modify_ldt	include/sanitizer/linux_syscall_hooks.h	1968;"	d
__sanitizer_syscall_post_mount	include/sanitizer/linux_syscall_hooks.h	457;"	d
__sanitizer_syscall_post_move_pages	include/sanitizer/linux_syscall_hooks.h	1512;"	d
__sanitizer_syscall_post_mprotect	include/sanitizer/linux_syscall_hooks.h	613;"	d
__sanitizer_syscall_post_mprotect	include/sanitizer/netbsd_syscall_hooks.h	401;"	d
__sanitizer_syscall_post_mpx	include/sanitizer/linux_syscall_hooks.h	1969;"	d
__sanitizer_syscall_post_mq_close	include/sanitizer/netbsd_syscall_hooks.h	1325;"	d
__sanitizer_syscall_post_mq_getattr	include/sanitizer/netbsd_syscall_hooks.h	1334;"	d
__sanitizer_syscall_post_mq_getsetattr	include/sanitizer/linux_syscall_hooks.h	1396;"	d
__sanitizer_syscall_post_mq_notify	include/sanitizer/linux_syscall_hooks.h	1390;"	d
__sanitizer_syscall_post_mq_notify	include/sanitizer/netbsd_syscall_hooks.h	1346;"	d
__sanitizer_syscall_post_mq_open	include/sanitizer/linux_syscall_hooks.h	1361;"	d
__sanitizer_syscall_post_mq_open	include/sanitizer/netbsd_syscall_hooks.h	1319;"	d
__sanitizer_syscall_post_mq_receive	include/sanitizer/netbsd_syscall_hooks.h	1362;"	d
__sanitizer_syscall_post_mq_send	include/sanitizer/netbsd_syscall_hooks.h	1353;"	d
__sanitizer_syscall_post_mq_setattr	include/sanitizer/netbsd_syscall_hooks.h	1340;"	d
__sanitizer_syscall_post_mq_timedreceive	include/sanitizer/linux_syscall_hooks.h	1383;"	d
__sanitizer_syscall_post_mq_timedsend	include/sanitizer/linux_syscall_hooks.h	1373;"	d
__sanitizer_syscall_post_mq_unlink	include/sanitizer/linux_syscall_hooks.h	1366;"	d
__sanitizer_syscall_post_mq_unlink	include/sanitizer/netbsd_syscall_hooks.h	1329;"	d
__sanitizer_syscall_post_mremap	include/sanitizer/linux_syscall_hooks.h	621;"	d
__sanitizer_syscall_post_mremap	include/sanitizer/netbsd_syscall_hooks.h	2222;"	d
__sanitizer_syscall_post_msgctl	include/sanitizer/linux_syscall_hooks.h	1303;"	d
__sanitizer_syscall_post_msgget	include/sanitizer/linux_syscall_hooks.h	1284;"	d
__sanitizer_syscall_post_msgget	include/sanitizer/netbsd_syscall_hooks.h	1143;"	d
__sanitizer_syscall_post_msgrcv	include/sanitizer/linux_syscall_hooks.h	1296;"	d
__sanitizer_syscall_post_msgrcv	include/sanitizer/netbsd_syscall_hooks.h	1157;"	d
__sanitizer_syscall_post_msgsnd	include/sanitizer/linux_syscall_hooks.h	1289;"	d
__sanitizer_syscall_post_msgsnd	include/sanitizer/netbsd_syscall_hooks.h	1149;"	d
__sanitizer_syscall_post_msync	include/sanitizer/linux_syscall_hooks.h	637;"	d
__sanitizer_syscall_post_munlock	include/sanitizer/linux_syscall_hooks.h	650;"	d
__sanitizer_syscall_post_munlock	include/sanitizer/netbsd_syscall_hooks.h	1065;"	d
__sanitizer_syscall_post_munlockall	include/sanitizer/linux_syscall_hooks.h	658;"	d
__sanitizer_syscall_post_munlockall	include/sanitizer/netbsd_syscall_hooks.h	1248;"	d
__sanitizer_syscall_post_munmap	include/sanitizer/linux_syscall_hooks.h	642;"	d
__sanitizer_syscall_post_munmap	include/sanitizer/netbsd_syscall_hooks.h	396;"	d
__sanitizer_syscall_post_name_to_handle_at	include/sanitizer/linux_syscall_hooks.h	1794;"	d
__sanitizer_syscall_post_nanosleep	include/sanitizer/linux_syscall_hooks.h	53;"	d
__sanitizer_syscall_post_newfstat	include/sanitizer/linux_syscall_hooks.h	518;"	d
__sanitizer_syscall_post_newfstatat	include/sanitizer/linux_syscall_hooks.h	1643;"	d
__sanitizer_syscall_post_newlstat	include/sanitizer/linux_syscall_hooks.h	514;"	d
__sanitizer_syscall_post_newstat	include/sanitizer/linux_syscall_hooks.h	510;"	d
__sanitizer_syscall_post_newuname	include/sanitizer/linux_syscall_hooks.h	1244;"	d
__sanitizer_syscall_post_nfsservctl	include/sanitizer/linux_syscall_hooks.h	1971;"	d
__sanitizer_syscall_post_nfssvc	include/sanitizer/netbsd_syscall_hooks.h	797;"	d
__sanitizer_syscall_post_ni_syscall	include/sanitizer/linux_syscall_hooks.h	1450;"	d
__sanitizer_syscall_post_nice	include/sanitizer/linux_syscall_hooks.h	251;"	d
__sanitizer_syscall_post_ntp_adjtime	include/sanitizer/netbsd_syscall_hooks.h	916;"	d
__sanitizer_syscall_post_old_getrlimit	include/sanitizer/linux_syscall_hooks.h	1260;"	d
__sanitizer_syscall_post_old_mmap	include/sanitizer/linux_syscall_hooks.h	1788;"	d
__sanitizer_syscall_post_old_readdir	include/sanitizer/linux_syscall_hooks.h	1744;"	d
__sanitizer_syscall_post_old_select	include/sanitizer/linux_syscall_hooks.h	1197;"	d
__sanitizer_syscall_post_oldfstat	include/sanitizer/linux_syscall_hooks.h	1972;"	d
__sanitizer_syscall_post_oldlstat	include/sanitizer/linux_syscall_hooks.h	1973;"	d
__sanitizer_syscall_post_oldolduname	include/sanitizer/linux_syscall_hooks.h	1974;"	d
__sanitizer_syscall_post_oldstat	include/sanitizer/linux_syscall_hooks.h	1975;"	d
__sanitizer_syscall_post_oldumount	include/sanitizer/linux_syscall_hooks.h	468;"	d
__sanitizer_syscall_post_olduname	include/sanitizer/linux_syscall_hooks.h	1252;"	d
__sanitizer_syscall_post_open	include/sanitizer/linux_syscall_hooks.h	808;"	d
__sanitizer_syscall_post_open	include/sanitizer/netbsd_syscall_hooks.h	65;"	d
__sanitizer_syscall_post_open_by_handle_at	include/sanitizer/linux_syscall_hooks.h	1802;"	d
__sanitizer_syscall_post_openat	include/sanitizer/linux_syscall_hooks.h	1637;"	d
__sanitizer_syscall_post_openat	include/sanitizer/netbsd_syscall_hooks.h	2601;"	d
__sanitizer_syscall_post_paccept	include/sanitizer/netbsd_syscall_hooks.h	2515;"	d
__sanitizer_syscall_post_pathconf	include/sanitizer/netbsd_syscall_hooks.h	981;"	d
__sanitizer_syscall_post_pause	include/sanitizer/linux_syscall_hooks.h	436;"	d
__sanitizer_syscall_post_pciconfig_iobase	include/sanitizer/linux_syscall_hooks.h	1402;"	d
__sanitizer_syscall_post_pciconfig_read	include/sanitizer/linux_syscall_hooks.h	1408;"	d
__sanitizer_syscall_post_pciconfig_write	include/sanitizer/linux_syscall_hooks.h	1414;"	d
__sanitizer_syscall_post_perf_event_open	include/sanitizer/linux_syscall_hooks.h	1772;"	d
__sanitizer_syscall_post_personality	include/sanitizer/linux_syscall_hooks.h	167;"	d
__sanitizer_syscall_post_pipe	include/sanitizer/linux_syscall_hooks.h	721;"	d
__sanitizer_syscall_post_pipe	include/sanitizer/netbsd_syscall_hooks.h	251;"	d
__sanitizer_syscall_post_pipe2	include/sanitizer/linux_syscall_hooks.h	725;"	d
__sanitizer_syscall_post_pipe2	include/sanitizer/netbsd_syscall_hooks.h	2498;"	d
__sanitizer_syscall_post_pivot_root	include/sanitizer/linux_syscall_hooks.h	673;"	d
__sanitizer_syscall_post_pmc_control	include/sanitizer/netbsd_syscall_hooks.h	1764;"	d
__sanitizer_syscall_post_pmc_get_info	include/sanitizer/netbsd_syscall_hooks.h	1758;"	d
__sanitizer_syscall_post_poll	include/sanitizer/linux_syscall_hooks.h	1186;"	d
__sanitizer_syscall_post_poll	include/sanitizer/netbsd_syscall_hooks.h	1090;"	d
__sanitizer_syscall_post_posix_fadvise	include/sanitizer/netbsd_syscall_hooks.h	2118;"	d
__sanitizer_syscall_post_posix_fallocate	include/sanitizer/netbsd_syscall_hooks.h	2682;"	d
__sanitizer_syscall_post_posix_spawn	include/sanitizer/netbsd_syscall_hooks.h	2640;"	d
__sanitizer_syscall_post_ppoll	include/sanitizer/linux_syscall_hooks.h	1759;"	d
__sanitizer_syscall_post_prctl	include/sanitizer/linux_syscall_hooks.h	1976;"	d
__sanitizer_syscall_post_pread	include/sanitizer/netbsd_syscall_hooks.h	897;"	d
__sanitizer_syscall_post_pread64	include/sanitizer/linux_syscall_hooks.h	978;"	d
__sanitizer_syscall_post_pread64	include/sanitizer/linux_syscall_hooks.h	991;"	d
__sanitizer_syscall_post_preadv	include/sanitizer/linux_syscall_hooks.h	1006;"	d
__sanitizer_syscall_post_preadv	include/sanitizer/netbsd_syscall_hooks.h	1503;"	d
__sanitizer_syscall_post_prlimit64	include/sanitizer/linux_syscall_hooks.h	1270;"	d
__sanitizer_syscall_post_process_vm_readv	include/sanitizer/linux_syscall_hooks.h	1815;"	d
__sanitizer_syscall_post_process_vm_writev	include/sanitizer/linux_syscall_hooks.h	1825;"	d
__sanitizer_syscall_post_prof	include/sanitizer/linux_syscall_hooks.h	1978;"	d
__sanitizer_syscall_post_profil	include/sanitizer/linux_syscall_hooks.h	1977;"	d
__sanitizer_syscall_post_profil	include/sanitizer/netbsd_syscall_hooks.h	259;"	d
__sanitizer_syscall_post_pselect6	include/sanitizer/linux_syscall_hooks.h	1751;"	d
__sanitizer_syscall_post_pset_assign	include/sanitizer/netbsd_syscall_hooks.h	2238;"	d
__sanitizer_syscall_post_pset_create	include/sanitizer/netbsd_syscall_hooks.h	2229;"	d
__sanitizer_syscall_post_pset_destroy	include/sanitizer/netbsd_syscall_hooks.h	2233;"	d
__sanitizer_syscall_post_ptrace	include/sanitizer/linux_syscall_hooks.h	1455;"	d
__sanitizer_syscall_post_ptrace	include/sanitizer/netbsd_syscall_hooks.h	165;"	d
__sanitizer_syscall_post_putpmsg	include/sanitizer/linux_syscall_hooks.h	1979;"	d
__sanitizer_syscall_post_pwrite	include/sanitizer/netbsd_syscall_hooks.h	905;"	d
__sanitizer_syscall_post_pwrite64	include/sanitizer/linux_syscall_hooks.h	984;"	d
__sanitizer_syscall_post_pwrite64	include/sanitizer/linux_syscall_hooks.h	998;"	d
__sanitizer_syscall_post_pwritev	include/sanitizer/linux_syscall_hooks.h	1013;"	d
__sanitizer_syscall_post_pwritev	include/sanitizer/netbsd_syscall_hooks.h	1511;"	d
__sanitizer_syscall_post_query_module	include/sanitizer/linux_syscall_hooks.h	1980;"	d
__sanitizer_syscall_post_quotactl	include/sanitizer/linux_syscall_hooks.h	1046;"	d
__sanitizer_syscall_post_rasctl	include/sanitizer/netbsd_syscall_hooks.h	1770;"	d
__sanitizer_syscall_post_read	include/sanitizer/linux_syscall_hooks.h	955;"	d
__sanitizer_syscall_post_read	include/sanitizer/netbsd_syscall_hooks.h	53;"	d
__sanitizer_syscall_post_readahead	include/sanitizer/linux_syscall_hooks.h	1981;"	d
__sanitizer_syscall_post_readdir	include/sanitizer/linux_syscall_hooks.h	1982;"	d
__sanitizer_syscall_post_readlink	include/sanitizer/linux_syscall_hooks.h	798;"	d
__sanitizer_syscall_post_readlink	include/sanitizer/netbsd_syscall_hooks.h	331;"	d
__sanitizer_syscall_post_readlinkat	include/sanitizer/linux_syscall_hooks.h	1655;"	d
__sanitizer_syscall_post_readlinkat	include/sanitizer/netbsd_syscall_hooks.h	2609;"	d
__sanitizer_syscall_post_readv	include/sanitizer/linux_syscall_hooks.h	960;"	d
__sanitizer_syscall_post_readv	include/sanitizer/netbsd_syscall_hooks.h	628;"	d
__sanitizer_syscall_post_reboot	include/sanitizer/linux_syscall_hooks.h	320;"	d
__sanitizer_syscall_post_reboot	include/sanitizer/netbsd_syscall_hooks.h	1084;"	d
__sanitizer_syscall_post_recv	include/sanitizer/linux_syscall_hooks.h	1141;"	d
__sanitizer_syscall_post_recvfrom	include/sanitizer/linux_syscall_hooks.h	1148;"	d
__sanitizer_syscall_post_recvfrom	include/sanitizer/netbsd_syscall_hooks.h	186;"	d
__sanitizer_syscall_post_recvmmsg	include/sanitizer/linux_syscall_hooks.h	1161;"	d
__sanitizer_syscall_post_recvmmsg	include/sanitizer/netbsd_syscall_hooks.h	2649;"	d
__sanitizer_syscall_post_recvmsg	include/sanitizer/linux_syscall_hooks.h	1155;"	d
__sanitizer_syscall_post_recvmsg	include/sanitizer/netbsd_syscall_hooks.h	172;"	d
__sanitizer_syscall_post_remap_file_pages	include/sanitizer/linux_syscall_hooks.h	630;"	d
__sanitizer_syscall_post_removexattr	include/sanitizer/linux_syscall_hooks.h	596;"	d
__sanitizer_syscall_post_removexattr	include/sanitizer/netbsd_syscall_hooks.h	2078;"	d
__sanitizer_syscall_post_rename	include/sanitizer/linux_syscall_hooks.h	700;"	d
__sanitizer_syscall_post_rename	include/sanitizer/netbsd_syscall_hooks.h	675;"	d
__sanitizer_syscall_post_renameat	include/sanitizer/linux_syscall_hooks.h	1603;"	d
__sanitizer_syscall_post_renameat	include/sanitizer/netbsd_syscall_hooks.h	2531;"	d
__sanitizer_syscall_post_request_key	include/sanitizer/linux_syscall_hooks.h	1473;"	d
__sanitizer_syscall_post_restart_syscall	include/sanitizer/linux_syscall_hooks.h	325;"	d
__sanitizer_syscall_post_revoke	include/sanitizer/netbsd_syscall_hooks.h	321;"	d
__sanitizer_syscall_post_rmdir	include/sanitizer/linux_syscall_hooks.h	1035;"	d
__sanitizer_syscall_post_rmdir	include/sanitizer/netbsd_syscall_hooks.h	724;"	d
__sanitizer_syscall_post_rt_sigaction	include/sanitizer/linux_syscall_hooks.h	1846;"	d
__sanitizer_syscall_post_rt_sigpending	include/sanitizer/linux_syscall_hooks.h	387;"	d
__sanitizer_syscall_post_rt_sigprocmask	include/sanitizer/linux_syscall_hooks.h	381;"	d
__sanitizer_syscall_post_rt_sigqueueinfo	include/sanitizer/linux_syscall_hooks.h	420;"	d
__sanitizer_syscall_post_rt_sigreturn	include/sanitizer/linux_syscall_hooks.h	1983;"	d
__sanitizer_syscall_post_rt_sigsuspend	include/sanitizer/linux_syscall_hooks.h	1984;"	d
__sanitizer_syscall_post_rt_sigtimedwait	include/sanitizer/linux_syscall_hooks.h	394;"	d
__sanitizer_syscall_post_rt_tgsigqueueinfo	include/sanitizer/linux_syscall_hooks.h	401;"	d
__sanitizer_syscall_post_sched_get_priority_max	include/sanitizer/linux_syscall_hooks.h	291;"	d
__sanitizer_syscall_post_sched_get_priority_min	include/sanitizer/linux_syscall_hooks.h	295;"	d
__sanitizer_syscall_post_sched_getaffinity	include/sanitizer/linux_syscall_hooks.h	281;"	d
__sanitizer_syscall_post_sched_getparam	include/sanitizer/linux_syscall_hooks.h	269;"	d
__sanitizer_syscall_post_sched_getscheduler	include/sanitizer/linux_syscall_hooks.h	265;"	d
__sanitizer_syscall_post_sched_rr_get_interval	include/sanitizer/linux_syscall_hooks.h	300;"	d
__sanitizer_syscall_post_sched_setaffinity	include/sanitizer/linux_syscall_hooks.h	274;"	d
__sanitizer_syscall_post_sched_setparam	include/sanitizer/linux_syscall_hooks.h	261;"	d
__sanitizer_syscall_post_sched_setscheduler	include/sanitizer/linux_syscall_hooks.h	256;"	d
__sanitizer_syscall_post_sched_yield	include/sanitizer/linux_syscall_hooks.h	287;"	d
__sanitizer_syscall_post_sched_yield	include/sanitizer/netbsd_syscall_hooks.h	1824;"	d
__sanitizer_syscall_post_security	include/sanitizer/linux_syscall_hooks.h	1985;"	d
__sanitizer_syscall_post_select	include/sanitizer/linux_syscall_hooks.h	1192;"	d
__sanitizer_syscall_post_semconfig	include/sanitizer/netbsd_syscall_hooks.h	1133;"	d
__sanitizer_syscall_post_semctl	include/sanitizer/linux_syscall_hooks.h	1320;"	d
__sanitizer_syscall_post_semget	include/sanitizer/linux_syscall_hooks.h	1309;"	d
__sanitizer_syscall_post_semget	include/sanitizer/netbsd_syscall_hooks.h	1122;"	d
__sanitizer_syscall_post_semop	include/sanitizer/linux_syscall_hooks.h	1314;"	d
__sanitizer_syscall_post_semop	include/sanitizer/netbsd_syscall_hooks.h	1128;"	d
__sanitizer_syscall_post_semtimedop	include/sanitizer/linux_syscall_hooks.h	1326;"	d
__sanitizer_syscall_post_send	include/sanitizer/linux_syscall_hooks.h	1115;"	d
__sanitizer_syscall_post_sendfile	include/sanitizer/linux_syscall_hooks.h	786;"	d
__sanitizer_syscall_post_sendfile64	include/sanitizer/linux_syscall_hooks.h	792;"	d
__sanitizer_syscall_post_sendmmsg	include/sanitizer/linux_syscall_hooks.h	1135;"	d
__sanitizer_syscall_post_sendmmsg	include/sanitizer/netbsd_syscall_hooks.h	2656;"	d
__sanitizer_syscall_post_sendmsg	include/sanitizer/linux_syscall_hooks.h	1129;"	d
__sanitizer_syscall_post_sendmsg	include/sanitizer/netbsd_syscall_hooks.h	178;"	d
__sanitizer_syscall_post_sendto	include/sanitizer/linux_syscall_hooks.h	1122;"	d
__sanitizer_syscall_post_sendto	include/sanitizer/netbsd_syscall_hooks.h	702;"	d
__sanitizer_syscall_post_set_mempolicy	include/sanitizer/linux_syscall_hooks.h	1498;"	d
__sanitizer_syscall_post_set_robust_list	include/sanitizer/linux_syscall_hooks.h	1698;"	d
__sanitizer_syscall_post_set_thread_area	include/sanitizer/linux_syscall_hooks.h	1994;"	d
__sanitizer_syscall_post_set_tid_address	include/sanitizer/linux_syscall_hooks.h	365;"	d
__sanitizer_syscall_post_setcontext	include/sanitizer/netbsd_syscall_hooks.h	1611;"	d
__sanitizer_syscall_post_setdomainname	include/sanitizer/linux_syscall_hooks.h	1240;"	d
__sanitizer_syscall_post_setegid	include/sanitizer/netbsd_syscall_hooks.h	931;"	d
__sanitizer_syscall_post_seteuid	include/sanitizer/netbsd_syscall_hooks.h	935;"	d
__sanitizer_syscall_post_setfsgid	include/sanitizer/linux_syscall_hooks.h	139;"	d
__sanitizer_syscall_post_setfsgid16	include/sanitizer/linux_syscall_hooks.h	900;"	d
__sanitizer_syscall_post_setfsgid32	include/sanitizer/linux_syscall_hooks.h	1986;"	d
__sanitizer_syscall_post_setfsuid	include/sanitizer/linux_syscall_hooks.h	135;"	d
__sanitizer_syscall_post_setfsuid16	include/sanitizer/linux_syscall_hooks.h	896;"	d
__sanitizer_syscall_post_setfsuid32	include/sanitizer/linux_syscall_hooks.h	1987;"	d
__sanitizer_syscall_post_setgid	include/sanitizer/linux_syscall_hooks.h	111;"	d
__sanitizer_syscall_post_setgid	include/sanitizer/netbsd_syscall_hooks.h	927;"	d
__sanitizer_syscall_post_setgid16	include/sanitizer/linux_syscall_hooks.h	862;"	d
__sanitizer_syscall_post_setgid32	include/sanitizer/linux_syscall_hooks.h	1988;"	d
__sanitizer_syscall_post_setgroups	include/sanitizer/linux_syscall_hooks.h	150;"	d
__sanitizer_syscall_post_setgroups	include/sanitizer/netbsd_syscall_hooks.h	427;"	d
__sanitizer_syscall_post_setgroups16	include/sanitizer/linux_syscall_hooks.h	911;"	d
__sanitizer_syscall_post_setgroups32	include/sanitizer/linux_syscall_hooks.h	1989;"	d
__sanitizer_syscall_post_sethostname	include/sanitizer/linux_syscall_hooks.h	1236;"	d
__sanitizer_syscall_post_setitimer	include/sanitizer/linux_syscall_hooks.h	186;"	d
__sanitizer_syscall_post_setns	include/sanitizer/linux_syscall_hooks.h	1808;"	d
__sanitizer_syscall_post_setpgid	include/sanitizer/linux_syscall_hooks.h	143;"	d
__sanitizer_syscall_post_setpgid	include/sanitizer/netbsd_syscall_hooks.h	435;"	d
__sanitizer_syscall_post_setpriority	include/sanitizer/linux_syscall_hooks.h	306;"	d
__sanitizer_syscall_post_setpriority	include/sanitizer/netbsd_syscall_hooks.h	501;"	d
__sanitizer_syscall_post_setregid	include/sanitizer/linux_syscall_hooks.h	107;"	d
__sanitizer_syscall_post_setregid	include/sanitizer/netbsd_syscall_hooks.h	670;"	d
__sanitizer_syscall_post_setregid16	include/sanitizer/linux_syscall_hooks.h	858;"	d
__sanitizer_syscall_post_setregid32	include/sanitizer/linux_syscall_hooks.h	1990;"	d
__sanitizer_syscall_post_setresgid	include/sanitizer/linux_syscall_hooks.h	130;"	d
__sanitizer_syscall_post_setresgid16	include/sanitizer/linux_syscall_hooks.h	885;"	d
__sanitizer_syscall_post_setresgid32	include/sanitizer/linux_syscall_hooks.h	1991;"	d
__sanitizer_syscall_post_setresuid	include/sanitizer/linux_syscall_hooks.h	124;"	d
__sanitizer_syscall_post_setresuid16	include/sanitizer/linux_syscall_hooks.h	874;"	d
__sanitizer_syscall_post_setresuid32	include/sanitizer/linux_syscall_hooks.h	1992;"	d
__sanitizer_syscall_post_setreuid	include/sanitizer/linux_syscall_hooks.h	115;"	d
__sanitizer_syscall_post_setreuid	include/sanitizer/netbsd_syscall_hooks.h	665;"	d
__sanitizer_syscall_post_setreuid16	include/sanitizer/linux_syscall_hooks.h	866;"	d
__sanitizer_syscall_post_setreuid32	include/sanitizer/linux_syscall_hooks.h	1993;"	d
__sanitizer_syscall_post_setrlimit	include/sanitizer/linux_syscall_hooks.h	1265;"	d
__sanitizer_syscall_post_setrlimit	include/sanitizer/netbsd_syscall_hooks.h	997;"	d
__sanitizer_syscall_post_setsid	include/sanitizer/linux_syscall_hooks.h	146;"	d
__sanitizer_syscall_post_setsid	include/sanitizer/netbsd_syscall_hooks.h	772;"	d
__sanitizer_syscall_post_setsockopt	include/sanitizer/linux_syscall_hooks.h	1065;"	d
__sanitizer_syscall_post_setsockopt	include/sanitizer/netbsd_syscall_hooks.h	556;"	d
__sanitizer_syscall_post_settimeofday	include/sanitizer/linux_syscall_hooks.h	38;"	d
__sanitizer_syscall_post_setuid	include/sanitizer/linux_syscall_hooks.h	119;"	d
__sanitizer_syscall_post_setuid	include/sanitizer/netbsd_syscall_hooks.h	154;"	d
__sanitizer_syscall_post_setuid16	include/sanitizer/linux_syscall_hooks.h	870;"	d
__sanitizer_syscall_post_setuid32	include/sanitizer/linux_syscall_hooks.h	1995;"	d
__sanitizer_syscall_post_setxattr	include/sanitizer/linux_syscall_hooks.h	539;"	d
__sanitizer_syscall_post_setxattr	include/sanitizer/netbsd_syscall_hooks.h	2014;"	d
__sanitizer_syscall_post_sgetmask	include/sanitizer/linux_syscall_hooks.h	425;"	d
__sanitizer_syscall_post_shmat	include/sanitizer/linux_syscall_hooks.h	1332;"	d
__sanitizer_syscall_post_shmat	include/sanitizer/netbsd_syscall_hooks.h	1165;"	d
__sanitizer_syscall_post_shmctl	include/sanitizer/linux_syscall_hooks.h	1346;"	d
__sanitizer_syscall_post_shmdt	include/sanitizer/linux_syscall_hooks.h	1342;"	d
__sanitizer_syscall_post_shmdt	include/sanitizer/netbsd_syscall_hooks.h	1176;"	d
__sanitizer_syscall_post_shmget	include/sanitizer/linux_syscall_hooks.h	1337;"	d
__sanitizer_syscall_post_shmget	include/sanitizer/netbsd_syscall_hooks.h	1181;"	d
__sanitizer_syscall_post_shutdown	include/sanitizer/linux_syscall_hooks.h	315;"	d
__sanitizer_syscall_post_shutdown	include/sanitizer/netbsd_syscall_hooks.h	708;"	d
__sanitizer_syscall_post_sigaction	include/sanitizer/linux_syscall_hooks.h	1840;"	d
__sanitizer_syscall_post_sigaltstack	include/sanitizer/linux_syscall_hooks.h	1996;"	d
__sanitizer_syscall_post_signal	include/sanitizer/linux_syscall_hooks.h	433;"	d
__sanitizer_syscall_post_signalfd	include/sanitizer/linux_syscall_hooks.h	1708;"	d
__sanitizer_syscall_post_signalfd4	include/sanitizer/linux_syscall_hooks.h	1714;"	d
__sanitizer_syscall_post_sigpending	include/sanitizer/linux_syscall_hooks.h	171;"	d
__sanitizer_syscall_post_sigprocmask	include/sanitizer/linux_syscall_hooks.h	176;"	d
__sanitizer_syscall_post_sigqueueinfo	include/sanitizer/netbsd_syscall_hooks.h	1259;"	d
__sanitizer_syscall_post_sigreturn	include/sanitizer/linux_syscall_hooks.h	1997;"	d
__sanitizer_syscall_post_sigsuspend	include/sanitizer/linux_syscall_hooks.h	1998;"	d
__sanitizer_syscall_post_socket	include/sanitizer/linux_syscall_hooks.h	1167;"	d
__sanitizer_syscall_post_socketcall	include/sanitizer/linux_syscall_hooks.h	1178;"	d
__sanitizer_syscall_post_socketpair	include/sanitizer/linux_syscall_hooks.h	1173;"	d
__sanitizer_syscall_post_socketpair	include/sanitizer/netbsd_syscall_hooks.h	714;"	d
__sanitizer_syscall_post_splice	include/sanitizer/linux_syscall_hooks.h	1673;"	d
__sanitizer_syscall_post_spu_create	include/sanitizer/linux_syscall_hooks.h	1563;"	d
__sanitizer_syscall_post_spu_run	include/sanitizer/linux_syscall_hooks.h	1557;"	d
__sanitizer_syscall_post_ssetmask	include/sanitizer/linux_syscall_hooks.h	429;"	d
__sanitizer_syscall_post_stat	include/sanitizer/linux_syscall_hooks.h	480;"	d
__sanitizer_syscall_post_stat64	include/sanitizer/linux_syscall_hooks.h	526;"	d
__sanitizer_syscall_post_statfs	include/sanitizer/linux_syscall_hooks.h	484;"	d
__sanitizer_syscall_post_statfs64	include/sanitizer/linux_syscall_hooks.h	488;"	d
__sanitizer_syscall_post_statvfs1	include/sanitizer/netbsd_syscall_hooks.h	1854;"	d
__sanitizer_syscall_post_stime	include/sanitizer/linux_syscall_hooks.h	30;"	d
__sanitizer_syscall_post_stty	include/sanitizer/linux_syscall_hooks.h	1999;"	d
__sanitizer_syscall_post_swapctl	include/sanitizer/netbsd_syscall_hooks.h	1399;"	d
__sanitizer_syscall_post_swapoff	include/sanitizer/linux_syscall_hooks.h	1424;"	d
__sanitizer_syscall_post_swapon	include/sanitizer/linux_syscall_hooks.h	1419;"	d
__sanitizer_syscall_post_symlink	include/sanitizer/linux_syscall_hooks.h	692;"	d
__sanitizer_syscall_post_symlink	include/sanitizer/netbsd_syscall_hooks.h	325;"	d
__sanitizer_syscall_post_symlinkat	include/sanitizer/linux_syscall_hooks.h	1587;"	d
__sanitizer_syscall_post_symlinkat	include/sanitizer/netbsd_syscall_hooks.h	2616;"	d
__sanitizer_syscall_post_sync	include/sanitizer/linux_syscall_hooks.h	439;"	d
__sanitizer_syscall_post_sync	include/sanitizer/netbsd_syscall_hooks.h	225;"	d
__sanitizer_syscall_post_sync_file_range	include/sanitizer/linux_syscall_hooks.h	2000;"	d
__sanitizer_syscall_post_syncfs	include/sanitizer/linux_syscall_hooks.h	1765;"	d
__sanitizer_syscall_post_sysarch	include/sanitizer/netbsd_syscall_hooks.h	850;"	d
__sanitizer_syscall_post_syscall	include/sanitizer/netbsd_syscall_hooks.h	37;"	d
__sanitizer_syscall_post_sysctl	include/sanitizer/linux_syscall_hooks.h	1428;"	d
__sanitizer_syscall_post_sysfs	include/sanitizer/linux_syscall_hooks.h	1436;"	d
__sanitizer_syscall_post_sysinfo	include/sanitizer/linux_syscall_hooks.h	1432;"	d
__sanitizer_syscall_post_syslog	include/sanitizer/linux_syscall_hooks.h	1441;"	d
__sanitizer_syscall_post_tee	include/sanitizer/linux_syscall_hooks.h	1687;"	d
__sanitizer_syscall_post_tgkill	include/sanitizer/linux_syscall_hooks.h	410;"	d
__sanitizer_syscall_post_time	include/sanitizer/linux_syscall_hooks.h	26;"	d
__sanitizer_syscall_post_timer_create	include/sanitizer/linux_syscall_hooks.h	193;"	d
__sanitizer_syscall_post_timer_create	include/sanitizer/netbsd_syscall_hooks.h	1205;"	d
__sanitizer_syscall_post_timer_delete	include/sanitizer/linux_syscall_hooks.h	219;"	d
__sanitizer_syscall_post_timer_delete	include/sanitizer/netbsd_syscall_hooks.h	1210;"	d
__sanitizer_syscall_post_timer_getoverrun	include/sanitizer/linux_syscall_hooks.h	205;"	d
__sanitizer_syscall_post_timer_getoverrun	include/sanitizer/netbsd_syscall_hooks.h	1230;"	d
__sanitizer_syscall_post_timer_gettime	include/sanitizer/linux_syscall_hooks.h	200;"	d
__sanitizer_syscall_post_timer_settime	include/sanitizer/linux_syscall_hooks.h	212;"	d
__sanitizer_syscall_post_timerfd_create	include/sanitizer/linux_syscall_hooks.h	1720;"	d
__sanitizer_syscall_post_timerfd_gettime	include/sanitizer/linux_syscall_hooks.h	1731;"	d
__sanitizer_syscall_post_timerfd_settime	include/sanitizer/linux_syscall_hooks.h	1726;"	d
__sanitizer_syscall_post_times	include/sanitizer/linux_syscall_hooks.h	46;"	d
__sanitizer_syscall_post_tkill	include/sanitizer/linux_syscall_hooks.h	415;"	d
__sanitizer_syscall_post_truncate	include/sanitizer/linux_syscall_hooks.h	472;"	d
__sanitizer_syscall_post_truncate	include/sanitizer/netbsd_syscall_hooks.h	1040;"	d
__sanitizer_syscall_post_truncate64	include/sanitizer/linux_syscall_hooks.h	2002;"	d
__sanitizer_syscall_post_tuxcall	include/sanitizer/linux_syscall_hooks.h	2003;"	d
__sanitizer_syscall_post_ugetrlimit	include/sanitizer/linux_syscall_hooks.h	2004;"	d
__sanitizer_syscall_post_ulimit	include/sanitizer/linux_syscall_hooks.h	2005;"	d
__sanitizer_syscall_post_umask	include/sanitizer/linux_syscall_hooks.h	1280;"	d
__sanitizer_syscall_post_umask	include/sanitizer/netbsd_syscall_hooks.h	342;"	d
__sanitizer_syscall_post_umount	include/sanitizer/linux_syscall_hooks.h	464;"	d
__sanitizer_syscall_post_umount2	include/sanitizer/linux_syscall_hooks.h	2006;"	d
__sanitizer_syscall_post_uname	include/sanitizer/linux_syscall_hooks.h	1248;"	d
__sanitizer_syscall_post_undelete	include/sanitizer/netbsd_syscall_hooks.h	1070;"	d
__sanitizer_syscall_post_unlink	include/sanitizer/linux_syscall_hooks.h	696;"	d
__sanitizer_syscall_post_unlink	include/sanitizer/netbsd_syscall_hooks.h	93;"	d
__sanitizer_syscall_post_unlinkat	include/sanitizer/linux_syscall_hooks.h	1581;"	d
__sanitizer_syscall_post_unlinkat	include/sanitizer/netbsd_syscall_hooks.h	2622;"	d
__sanitizer_syscall_post_unmount	include/sanitizer/netbsd_syscall_hooks.h	149;"	d
__sanitizer_syscall_post_unshare	include/sanitizer/linux_syscall_hooks.h	1666;"	d
__sanitizer_syscall_post_uselib	include/sanitizer/linux_syscall_hooks.h	1446;"	d
__sanitizer_syscall_post_ustat	include/sanitizer/linux_syscall_hooks.h	522;"	d
__sanitizer_syscall_post_utime	include/sanitizer/linux_syscall_hooks.h	932;"	d
__sanitizer_syscall_post_utimensat	include/sanitizer/linux_syscall_hooks.h	1661;"	d
__sanitizer_syscall_post_utimensat	include/sanitizer/netbsd_syscall_hooks.h	2594;"	d
__sanitizer_syscall_post_utimes	include/sanitizer/linux_syscall_hooks.h	936;"	d
__sanitizer_syscall_post_utrace	include/sanitizer/netbsd_syscall_hooks.h	1602;"	d
__sanitizer_syscall_post_uuidgen	include/sanitizer/netbsd_syscall_hooks.h	1842;"	d
__sanitizer_syscall_post_vadvise	include/sanitizer/netbsd_syscall_hooks.h	392;"	d
__sanitizer_syscall_post_vfork	include/sanitizer/linux_syscall_hooks.h	1836;"	d
__sanitizer_syscall_post_vfork	include/sanitizer/netbsd_syscall_hooks.h	374;"	d
__sanitizer_syscall_post_vhangup	include/sanitizer/linux_syscall_hooks.h	820;"	d
__sanitizer_syscall_post_vm86	include/sanitizer/linux_syscall_hooks.h	2008;"	d
__sanitizer_syscall_post_vm86old	include/sanitizer/linux_syscall_hooks.h	2007;"	d
__sanitizer_syscall_post_vmsplice	include/sanitizer/linux_syscall_hooks.h	1681;"	d
__sanitizer_syscall_post_vserver	include/sanitizer/linux_syscall_hooks.h	2009;"	d
__sanitizer_syscall_post_wait4	include/sanitizer/linux_syscall_hooks.h	347;"	d
__sanitizer_syscall_post_wait6	include/sanitizer/netbsd_syscall_hooks.h	2697;"	d
__sanitizer_syscall_post_waitid	include/sanitizer/linux_syscall_hooks.h	353;"	d
__sanitizer_syscall_post_waitpid	include/sanitizer/linux_syscall_hooks.h	360;"	d
__sanitizer_syscall_post_write	include/sanitizer/linux_syscall_hooks.h	965;"	d
__sanitizer_syscall_post_write	include/sanitizer/netbsd_syscall_hooks.h	59;"	d
__sanitizer_syscall_post_writev	include/sanitizer/linux_syscall_hooks.h	970;"	d
__sanitizer_syscall_post_writev	include/sanitizer/netbsd_syscall_hooks.h	634;"	d
__sanitizer_syscall_pre_____semctl50	include/sanitizer/netbsd_syscall_hooks.h	2425;"	d
__sanitizer_syscall_pre_____sigtimedwait50	include/sanitizer/netbsd_syscall_hooks.h	2344;"	d
__sanitizer_syscall_pre____lwp_park60	include/sanitizer/netbsd_syscall_hooks.h	2669;"	d
__sanitizer_syscall_pre___adjtime50	include/sanitizer/netbsd_syscall_hooks.h	2286;"	d
__sanitizer_syscall_pre___aio_suspend50	include/sanitizer/netbsd_syscall_hooks.h	2405;"	d
__sanitizer_syscall_pre___clock_getres50	include/sanitizer/netbsd_syscall_hooks.h	2332;"	d
__sanitizer_syscall_pre___clock_gettime50	include/sanitizer/netbsd_syscall_hooks.h	2320;"	d
__sanitizer_syscall_pre___clock_settime50	include/sanitizer/netbsd_syscall_hooks.h	2326;"	d
__sanitizer_syscall_pre___clone	include/sanitizer/netbsd_syscall_hooks.h	1487;"	d
__sanitizer_syscall_pre___fhopen40	include/sanitizer/netbsd_syscall_hooks.h	2143;"	d
__sanitizer_syscall_pre___fhstat50	include/sanitizer/netbsd_syscall_hooks.h	2489;"	d
__sanitizer_syscall_pre___fhstatvfs140	include/sanitizer/netbsd_syscall_hooks.h	2149;"	d
__sanitizer_syscall_pre___fstat50	include/sanitizer/netbsd_syscall_hooks.h	2416;"	d
__sanitizer_syscall_pre___futimes50	include/sanitizer/netbsd_syscall_hooks.h	2298;"	d
__sanitizer_syscall_pre___getcwd	include/sanitizer/netbsd_syscall_hooks.h	1541;"	d
__sanitizer_syscall_pre___getdents30	include/sanitizer/netbsd_syscall_hooks.h	2110;"	d
__sanitizer_syscall_pre___getfh30	include/sanitizer/netbsd_syscall_hooks.h	2137;"	d
__sanitizer_syscall_pre___getitimer50	include/sanitizer/netbsd_syscall_hooks.h	2314;"	d
__sanitizer_syscall_pre___getlogin	include/sanitizer/netbsd_syscall_hooks.h	285;"	d
__sanitizer_syscall_pre___getrusage50	include/sanitizer/netbsd_syscall_hooks.h	2445;"	d
__sanitizer_syscall_pre___gettimeofday50	include/sanitizer/netbsd_syscall_hooks.h	2269;"	d
__sanitizer_syscall_pre___kevent50	include/sanitizer/netbsd_syscall_hooks.h	2380;"	d
__sanitizer_syscall_pre___lfs_segwait50	include/sanitizer/netbsd_syscall_hooks.h	2292;"	d
__sanitizer_syscall_pre___lstat50	include/sanitizer/netbsd_syscall_hooks.h	2420;"	d
__sanitizer_syscall_pre___lutimes50	include/sanitizer/netbsd_syscall_hooks.h	2303;"	d
__sanitizer_syscall_pre___mknod50	include/sanitizer/netbsd_syscall_hooks.h	2483;"	d
__sanitizer_syscall_pre___mount50	include/sanitizer/netbsd_syscall_hooks.h	2208;"	d
__sanitizer_syscall_pre___mq_timedreceive50	include/sanitizer/netbsd_syscall_hooks.h	2360;"	d
__sanitizer_syscall_pre___mq_timedsend50	include/sanitizer/netbsd_syscall_hooks.h	2350;"	d
__sanitizer_syscall_pre___msgctl50	include/sanitizer/netbsd_syscall_hooks.h	2439;"	d
__sanitizer_syscall_pre___msync13	include/sanitizer/netbsd_syscall_hooks.h	1431;"	d
__sanitizer_syscall_pre___nanosleep50	include/sanitizer/netbsd_syscall_hooks.h	2338;"	d
__sanitizer_syscall_pre___ntp_gettime50	include/sanitizer/netbsd_syscall_hooks.h	2468;"	d
__sanitizer_syscall_pre___pollts50	include/sanitizer/netbsd_syscall_hooks.h	2398;"	d
__sanitizer_syscall_pre___posix_chown	include/sanitizer/netbsd_syscall_hooks.h	1465;"	d
__sanitizer_syscall_pre___posix_fadvise50	include/sanitizer/netbsd_syscall_hooks.h	2251;"	d
__sanitizer_syscall_pre___posix_fchown	include/sanitizer/netbsd_syscall_hooks.h	1471;"	d
__sanitizer_syscall_pre___posix_lchown	include/sanitizer/netbsd_syscall_hooks.h	1477;"	d
__sanitizer_syscall_pre___posix_rename	include/sanitizer/netbsd_syscall_hooks.h	1390;"	d
__sanitizer_syscall_pre___pselect50	include/sanitizer/netbsd_syscall_hooks.h	2390;"	d
__sanitizer_syscall_pre___quotactl	include/sanitizer/netbsd_syscall_hooks.h	2630;"	d
__sanitizer_syscall_pre___select50	include/sanitizer/netbsd_syscall_hooks.h	2261;"	d
__sanitizer_syscall_pre___setitimer50	include/sanitizer/netbsd_syscall_hooks.h	2308;"	d
__sanitizer_syscall_pre___setlogin	include/sanitizer/netbsd_syscall_hooks.h	291;"	d
__sanitizer_syscall_pre___settimeofday50	include/sanitizer/netbsd_syscall_hooks.h	2275;"	d
__sanitizer_syscall_pre___shmctl50	include/sanitizer/netbsd_syscall_hooks.h	2433;"	d
__sanitizer_syscall_pre___sigaction_sigtramp	include/sanitizer/netbsd_syscall_hooks.h	1745;"	d
__sanitizer_syscall_pre___sigaltstack14	include/sanitizer/netbsd_syscall_hooks.h	1455;"	d
__sanitizer_syscall_pre___sigpending14	include/sanitizer/netbsd_syscall_hooks.h	1522;"	d
__sanitizer_syscall_pre___sigprocmask14	include/sanitizer/netbsd_syscall_hooks.h	1526;"	d
__sanitizer_syscall_pre___sigsuspend14	include/sanitizer/netbsd_syscall_hooks.h	1532;"	d
__sanitizer_syscall_pre___socket30	include/sanitizer/netbsd_syscall_hooks.h	2131;"	d
__sanitizer_syscall_pre___stat50	include/sanitizer/netbsd_syscall_hooks.h	2411;"	d
__sanitizer_syscall_pre___syscall	include/sanitizer/netbsd_syscall_hooks.h	1018;"	d
__sanitizer_syscall_pre___sysctl	include/sanitizer/netbsd_syscall_hooks.h	1049;"	d
__sanitizer_syscall_pre___timer_gettime50	include/sanitizer/netbsd_syscall_hooks.h	2461;"	d
__sanitizer_syscall_pre___timer_settime50	include/sanitizer/netbsd_syscall_hooks.h	2451;"	d
__sanitizer_syscall_pre___utimes50	include/sanitizer/netbsd_syscall_hooks.h	2281;"	d
__sanitizer_syscall_pre___vfork14	include/sanitizer/netbsd_syscall_hooks.h	1461;"	d
__sanitizer_syscall_pre___wait450	include/sanitizer/netbsd_syscall_hooks.h	2475;"	d
__sanitizer_syscall_pre__ksem_close	include/sanitizer/netbsd_syscall_hooks.h	1284;"	d
__sanitizer_syscall_pre__ksem_destroy	include/sanitizer/netbsd_syscall_hooks.h	1306;"	d
__sanitizer_syscall_pre__ksem_getvalue	include/sanitizer/netbsd_syscall_hooks.h	1300;"	d
__sanitizer_syscall_pre__ksem_init	include/sanitizer/netbsd_syscall_hooks.h	1266;"	d
__sanitizer_syscall_pre__ksem_open	include/sanitizer/netbsd_syscall_hooks.h	1271;"	d
__sanitizer_syscall_pre__ksem_post	include/sanitizer/netbsd_syscall_hooks.h	1288;"	d
__sanitizer_syscall_pre__ksem_timedwait	include/sanitizer/netbsd_syscall_hooks.h	1310;"	d
__sanitizer_syscall_pre__ksem_trywait	include/sanitizer/netbsd_syscall_hooks.h	1296;"	d
__sanitizer_syscall_pre__ksem_unlink	include/sanitizer/netbsd_syscall_hooks.h	1280;"	d
__sanitizer_syscall_pre__ksem_wait	include/sanitizer/netbsd_syscall_hooks.h	1292;"	d
__sanitizer_syscall_pre__llseek	include/sanitizer/linux_syscall_hooks.h	1883;"	d
__sanitizer_syscall_pre__lwp_continue	include/sanitizer/netbsd_syscall_hooks.h	1637;"	d
__sanitizer_syscall_pre__lwp_create	include/sanitizer/netbsd_syscall_hooks.h	1613;"	d
__sanitizer_syscall_pre__lwp_ctl	include/sanitizer/netbsd_syscall_hooks.h	1697;"	d
__sanitizer_syscall_pre__lwp_detach	include/sanitizer/netbsd_syscall_hooks.h	1659;"	d
__sanitizer_syscall_pre__lwp_exit	include/sanitizer/netbsd_syscall_hooks.h	1619;"	d
__sanitizer_syscall_pre__lwp_getname	include/sanitizer/netbsd_syscall_hooks.h	1691;"	d
__sanitizer_syscall_pre__lwp_getprivate	include/sanitizer/netbsd_syscall_hooks.h	1645;"	d
__sanitizer_syscall_pre__lwp_kill	include/sanitizer/netbsd_syscall_hooks.h	1653;"	d
__sanitizer_syscall_pre__lwp_self	include/sanitizer/netbsd_syscall_hooks.h	1623;"	d
__sanitizer_syscall_pre__lwp_setname	include/sanitizer/netbsd_syscall_hooks.h	1685;"	d
__sanitizer_syscall_pre__lwp_setprivate	include/sanitizer/netbsd_syscall_hooks.h	1649;"	d
__sanitizer_syscall_pre__lwp_suspend	include/sanitizer/netbsd_syscall_hooks.h	1633;"	d
__sanitizer_syscall_pre__lwp_unpark	include/sanitizer/netbsd_syscall_hooks.h	1673;"	d
__sanitizer_syscall_pre__lwp_unpark_all	include/sanitizer/netbsd_syscall_hooks.h	1679;"	d
__sanitizer_syscall_pre__lwp_wait	include/sanitizer/netbsd_syscall_hooks.h	1627;"	d
__sanitizer_syscall_pre__lwp_wakeup	include/sanitizer/netbsd_syscall_hooks.h	1641;"	d
__sanitizer_syscall_pre__newselect	include/sanitizer/linux_syscall_hooks.h	1890;"	d
__sanitizer_syscall_pre__pset_bind	include/sanitizer/netbsd_syscall_hooks.h	2241;"	d
__sanitizer_syscall_pre__sched_getaffinity	include/sanitizer/netbsd_syscall_hooks.h	1813;"	d
__sanitizer_syscall_pre__sched_getparam	include/sanitizer/netbsd_syscall_hooks.h	1795;"	d
__sanitizer_syscall_pre__sched_protect	include/sanitizer/netbsd_syscall_hooks.h	1826;"	d
__sanitizer_syscall_pre__sched_setaffinity	include/sanitizer/netbsd_syscall_hooks.h	1804;"	d
__sanitizer_syscall_pre__sched_setparam	include/sanitizer/netbsd_syscall_hooks.h	1786;"	d
__sanitizer_syscall_pre__sysctl	include/sanitizer/linux_syscall_hooks.h	1921;"	d
__sanitizer_syscall_pre_accept	include/sanitizer/linux_syscall_hooks.h	1089;"	d
__sanitizer_syscall_pre_accept	include/sanitizer/netbsd_syscall_hooks.h	191;"	d
__sanitizer_syscall_pre_accept4	include/sanitizer/linux_syscall_hooks.h	1094;"	d
__sanitizer_syscall_pre_access	include/sanitizer/linux_syscall_hooks.h	815;"	d
__sanitizer_syscall_pre_access	include/sanitizer/netbsd_syscall_hooks.h	209;"	d
__sanitizer_syscall_pre_acct	include/sanitizer/linux_syscall_hooks.h	153;"	d
__sanitizer_syscall_pre_acct	include/sanitizer/netbsd_syscall_hooks.h	295;"	d
__sanitizer_syscall_pre_add_key	include/sanitizer/linux_syscall_hooks.h	1458;"	d
__sanitizer_syscall_pre_adjtimex	include/sanitizer/linux_syscall_hooks.h	40;"	d
__sanitizer_syscall_pre_afs_syscall	include/sanitizer/linux_syscall_hooks.h	1851;"	d
__sanitizer_syscall_pre_afssys	include/sanitizer/netbsd_syscall_hooks.h	1093;"	d
__sanitizer_syscall_pre_aio_cancel	include/sanitizer/netbsd_syscall_hooks.h	2163;"	d
__sanitizer_syscall_pre_aio_error	include/sanitizer/netbsd_syscall_hooks.h	2169;"	d
__sanitizer_syscall_pre_aio_fsync	include/sanitizer/netbsd_syscall_hooks.h	2173;"	d
__sanitizer_syscall_pre_aio_read	include/sanitizer/netbsd_syscall_hooks.h	2178;"	d
__sanitizer_syscall_pre_aio_return	include/sanitizer/netbsd_syscall_hooks.h	2182;"	d
__sanitizer_syscall_pre_aio_write	include/sanitizer/netbsd_syscall_hooks.h	2193;"	d
__sanitizer_syscall_pre_alarm	include/sanitizer/linux_syscall_hooks.h	55;"	d
__sanitizer_syscall_pre_arch_prctl	include/sanitizer/linux_syscall_hooks.h	1852;"	d
__sanitizer_syscall_pre_bdflush	include/sanitizer/linux_syscall_hooks.h	449;"	d
__sanitizer_syscall_pre_bind	include/sanitizer/linux_syscall_hooks.h	1079;"	d
__sanitizer_syscall_pre_bind	include/sanitizer/netbsd_syscall_hooks.h	546;"	d
__sanitizer_syscall_pre_break	include/sanitizer/linux_syscall_hooks.h	1853;"	d
__sanitizer_syscall_pre_break	include/sanitizer/netbsd_syscall_hooks.h	120;"	d
__sanitizer_syscall_pre_brk	include/sanitizer/linux_syscall_hooks.h	606;"	d
__sanitizer_syscall_pre_capget	include/sanitizer/linux_syscall_hooks.h	157;"	d
__sanitizer_syscall_pre_capset	include/sanitizer/linux_syscall_hooks.h	161;"	d
__sanitizer_syscall_pre_chdir	include/sanitizer/linux_syscall_hooks.h	1025;"	d
__sanitizer_syscall_pre_chdir	include/sanitizer/netbsd_syscall_hooks.h	96;"	d
__sanitizer_syscall_pre_chflags	include/sanitizer/netbsd_syscall_hooks.h	214;"	d
__sanitizer_syscall_pre_chmod	include/sanitizer/linux_syscall_hooks.h	702;"	d
__sanitizer_syscall_pre_chmod	include/sanitizer/netbsd_syscall_hooks.h	110;"	d
__sanitizer_syscall_pre_chown	include/sanitizer/linux_syscall_hooks.h	822;"	d
__sanitizer_syscall_pre_chown	include/sanitizer/netbsd_syscall_hooks.h	114;"	d
__sanitizer_syscall_pre_chown16	include/sanitizer/linux_syscall_hooks.h	839;"	d
__sanitizer_syscall_pre_chown32	include/sanitizer/linux_syscall_hooks.h	1854;"	d
__sanitizer_syscall_pre_chroot	include/sanitizer/linux_syscall_hooks.h	676;"	d
__sanitizer_syscall_pre_chroot	include/sanitizer/netbsd_syscall_hooks.h	344;"	d
__sanitizer_syscall_pre_clock_adjtime	include/sanitizer/linux_syscall_hooks.h	231;"	d
__sanitizer_syscall_pre_clock_getcpuclockid2	include/sanitizer/netbsd_syscall_hooks.h	2702;"	d
__sanitizer_syscall_pre_clock_getres	include/sanitizer/linux_syscall_hooks.h	236;"	d
__sanitizer_syscall_pre_clock_gettime	include/sanitizer/linux_syscall_hooks.h	226;"	d
__sanitizer_syscall_pre_clock_nanosleep	include/sanitizer/linux_syscall_hooks.h	241;"	d
__sanitizer_syscall_pre_clock_nanosleep	include/sanitizer/netbsd_syscall_hooks.h	2660;"	d
__sanitizer_syscall_pre_clock_settime	include/sanitizer/linux_syscall_hooks.h	221;"	d
__sanitizer_syscall_pre_clone	include/sanitizer/linux_syscall_hooks.h	1855;"	d
__sanitizer_syscall_pre_close	include/sanitizer/linux_syscall_hooks.h	811;"	d
__sanitizer_syscall_pre_close	include/sanitizer/netbsd_syscall_hooks.h	68;"	d
__sanitizer_syscall_pre_compat_09_ogetdomainname	include/sanitizer/netbsd_syscall_hooks.h	830;"	d
__sanitizer_syscall_pre_compat_09_osetdomainname	include/sanitizer/netbsd_syscall_hooks.h	837;"	d
__sanitizer_syscall_pre_compat_09_ouname	include/sanitizer/netbsd_syscall_hooks.h	844;"	d
__sanitizer_syscall_pre_compat_10_omsgsys	include/sanitizer/netbsd_syscall_hooks.h	869;"	d
__sanitizer_syscall_pre_compat_10_osemsys	include/sanitizer/netbsd_syscall_hooks.h	857;"	d
__sanitizer_syscall_pre_compat_10_oshmsys	include/sanitizer/netbsd_syscall_hooks.h	882;"	d
__sanitizer_syscall_pre_compat_12_fstat12	include/sanitizer/netbsd_syscall_hooks.h	967;"	d
__sanitizer_syscall_pre_compat_12_getdirentries	include/sanitizer/netbsd_syscall_hooks.h	1000;"	d
__sanitizer_syscall_pre_compat_12_lstat12	include/sanitizer/netbsd_syscall_hooks.h	973;"	d
__sanitizer_syscall_pre_compat_12_msync	include/sanitizer/netbsd_syscall_hooks.h	367;"	d
__sanitizer_syscall_pre_compat_12_oreboot	include/sanitizer/netbsd_syscall_hooks.h	315;"	d
__sanitizer_syscall_pre_compat_12_oswapon	include/sanitizer/netbsd_syscall_hooks.h	448;"	d
__sanitizer_syscall_pre_compat_12_stat12	include/sanitizer/netbsd_syscall_hooks.h	961;"	d
__sanitizer_syscall_pre_compat_13_sigaction13	include/sanitizer/netbsd_syscall_hooks.h	270;"	d
__sanitizer_syscall_pre_compat_13_sigaltstack13	include/sanitizer/netbsd_syscall_hooks.h	303;"	d
__sanitizer_syscall_pre_compat_13_sigpending13	include/sanitizer/netbsd_syscall_hooks.h	299;"	d
__sanitizer_syscall_pre_compat_13_sigprocmask13	include/sanitizer/netbsd_syscall_hooks.h	279;"	d
__sanitizer_syscall_pre_compat_13_sigreturn13	include/sanitizer/netbsd_syscall_hooks.h	541;"	d
__sanitizer_syscall_pre_compat_13_sigsuspend13	include/sanitizer/netbsd_syscall_hooks.h	580;"	d
__sanitizer_syscall_pre_compat_14___semctl	include/sanitizer/netbsd_syscall_hooks.h	1110;"	d
__sanitizer_syscall_pre_compat_14_msgctl	include/sanitizer/netbsd_syscall_hooks.h	1135;"	d
__sanitizer_syscall_pre_compat_14_shmctl	include/sanitizer/netbsd_syscall_hooks.h	1168;"	d
__sanitizer_syscall_pre_compat_16___sigaction14	include/sanitizer/netbsd_syscall_hooks.h	1515;"	d
__sanitizer_syscall_pre_compat_16___sigreturn14	include/sanitizer/netbsd_syscall_hooks.h	1536;"	d
__sanitizer_syscall_pre_compat_20_fhstatfs	include/sanitizer/netbsd_syscall_hooks.h	1562;"	d
__sanitizer_syscall_pre_compat_20_fstatfs	include/sanitizer/netbsd_syscall_hooks.h	816;"	d
__sanitizer_syscall_pre_compat_20_getfsstat	include/sanitizer/netbsd_syscall_hooks.h	124;"	d
__sanitizer_syscall_pre_compat_20_statfs	include/sanitizer/netbsd_syscall_hooks.h	810;"	d
__sanitizer_syscall_pre_compat_30___fhstat30	include/sanitizer/netbsd_syscall_hooks.h	2120;"	d
__sanitizer_syscall_pre_compat_30___fstat13	include/sanitizer/netbsd_syscall_hooks.h	1443;"	d
__sanitizer_syscall_pre_compat_30___lstat13	include/sanitizer/netbsd_syscall_hooks.h	1449;"	d
__sanitizer_syscall_pre_compat_30___stat13	include/sanitizer/netbsd_syscall_hooks.h	1437;"	d
__sanitizer_syscall_pre_compat_30_fhopen	include/sanitizer/netbsd_syscall_hooks.h	1550;"	d
__sanitizer_syscall_pre_compat_30_fhstat	include/sanitizer/netbsd_syscall_hooks.h	1556;"	d
__sanitizer_syscall_pre_compat_30_fhstatvfs1	include/sanitizer/netbsd_syscall_hooks.h	1863;"	d
__sanitizer_syscall_pre_compat_30_getdents	include/sanitizer/netbsd_syscall_hooks.h	1402;"	d
__sanitizer_syscall_pre_compat_30_getfh	include/sanitizer/netbsd_syscall_hooks.h	824;"	d
__sanitizer_syscall_pre_compat_30_ntp_gettime	include/sanitizer/netbsd_syscall_hooks.h	909;"	d
__sanitizer_syscall_pre_compat_30_socket	include/sanitizer/netbsd_syscall_hooks.h	504;"	d
__sanitizer_syscall_pre_compat_40_mount	include/sanitizer/netbsd_syscall_hooks.h	139;"	d
__sanitizer_syscall_pre_compat_43_fstat43	include/sanitizer/netbsd_syscall_hooks.h	348;"	d
__sanitizer_syscall_pre_compat_43_lstat43	include/sanitizer/netbsd_syscall_hooks.h	240;"	d
__sanitizer_syscall_pre_compat_43_oaccept	include/sanitizer/netbsd_syscall_hooks.h	516;"	d
__sanitizer_syscall_pre_compat_43_ocreat	include/sanitizer/netbsd_syscall_hooks.h	81;"	d
__sanitizer_syscall_pre_compat_43_oftruncate	include/sanitizer/netbsd_syscall_hooks.h	683;"	d
__sanitizer_syscall_pre_compat_43_ogetdirentries	include/sanitizer/netbsd_syscall_hooks.h	800;"	d
__sanitizer_syscall_pre_compat_43_ogetdtablesize	include/sanitizer/netbsd_syscall_hooks.h	470;"	d
__sanitizer_syscall_pre_compat_43_ogethostid	include/sanitizer/netbsd_syscall_hooks.h	745;"	d
__sanitizer_syscall_pre_compat_43_ogethostname	include/sanitizer/netbsd_syscall_hooks.h	458;"	d
__sanitizer_syscall_pre_compat_43_ogetkerninfo	include/sanitizer/netbsd_syscall_hooks.h	354;"	d
__sanitizer_syscall_pre_compat_43_ogetpagesize	include/sanitizer/netbsd_syscall_hooks.h	363;"	d
__sanitizer_syscall_pre_compat_43_ogetpeername	include/sanitizer/netbsd_syscall_hooks.h	739;"	d
__sanitizer_syscall_pre_compat_43_ogetrlimit	include/sanitizer/netbsd_syscall_hooks.h	753;"	d
__sanitizer_syscall_pre_compat_43_ogetsockname	include/sanitizer/netbsd_syscall_hooks.h	785;"	d
__sanitizer_syscall_pre_compat_43_okillpg	include/sanitizer/netbsd_syscall_hooks.h	765;"	d
__sanitizer_syscall_pre_compat_43_olseek	include/sanitizer/netbsd_syscall_hooks.h	130;"	d
__sanitizer_syscall_pre_compat_43_ommap	include/sanitizer/netbsd_syscall_hooks.h	380;"	d
__sanitizer_syscall_pre_compat_43_oquota	include/sanitizer/netbsd_syscall_hooks.h	781;"	d
__sanitizer_syscall_pre_compat_43_orecv	include/sanitizer/netbsd_syscall_hooks.h	534;"	d
__sanitizer_syscall_pre_compat_43_orecvfrom	include/sanitizer/netbsd_syscall_hooks.h	653;"	d
__sanitizer_syscall_pre_compat_43_orecvmsg	include/sanitizer/netbsd_syscall_hooks.h	590;"	d
__sanitizer_syscall_pre_compat_43_osend	include/sanitizer/netbsd_syscall_hooks.h	527;"	d
__sanitizer_syscall_pre_compat_43_osendmsg	include/sanitizer/netbsd_syscall_hooks.h	596;"	d
__sanitizer_syscall_pre_compat_43_osethostid	include/sanitizer/netbsd_syscall_hooks.h	749;"	d
__sanitizer_syscall_pre_compat_43_osethostname	include/sanitizer/netbsd_syscall_hooks.h	464;"	d
__sanitizer_syscall_pre_compat_43_osetrlimit	include/sanitizer/netbsd_syscall_hooks.h	759;"	d
__sanitizer_syscall_pre_compat_43_osigblock	include/sanitizer/netbsd_syscall_hooks.h	572;"	d
__sanitizer_syscall_pre_compat_43_osigsetmask	include/sanitizer/netbsd_syscall_hooks.h	576;"	d
__sanitizer_syscall_pre_compat_43_osigstack	include/sanitizer/netbsd_syscall_hooks.h	584;"	d
__sanitizer_syscall_pre_compat_43_osigvec	include/sanitizer/netbsd_syscall_hooks.h	566;"	d
__sanitizer_syscall_pre_compat_43_otruncate	include/sanitizer/netbsd_syscall_hooks.h	677;"	d
__sanitizer_syscall_pre_compat_43_owait	include/sanitizer/netbsd_syscall_hooks.h	444;"	d
__sanitizer_syscall_pre_compat_43_stat43	include/sanitizer/netbsd_syscall_hooks.h	231;"	d
__sanitizer_syscall_pre_compat_50_____semctl13	include/sanitizer/netbsd_syscall_hooks.h	1568;"	d
__sanitizer_syscall_pre_compat_50___fhstat40	include/sanitizer/netbsd_syscall_hooks.h	2157;"	d
__sanitizer_syscall_pre_compat_50___fstat30	include/sanitizer/netbsd_syscall_hooks.h	2098;"	d
__sanitizer_syscall_pre_compat_50___lstat30	include/sanitizer/netbsd_syscall_hooks.h	2104;"	d
__sanitizer_syscall_pre_compat_50___msgctl13	include/sanitizer/netbsd_syscall_hooks.h	1578;"	d
__sanitizer_syscall_pre_compat_50___ntp_gettime30	include/sanitizer/netbsd_syscall_hooks.h	2126;"	d
__sanitizer_syscall_pre_compat_50___shmctl13	include/sanitizer/netbsd_syscall_hooks.h	1584;"	d
__sanitizer_syscall_pre_compat_50___sigtimedwait	include/sanitizer/netbsd_syscall_hooks.h	1250;"	d
__sanitizer_syscall_pre_compat_50___stat30	include/sanitizer/netbsd_syscall_hooks.h	2092;"	d
__sanitizer_syscall_pre_compat_50__lwp_park	include/sanitizer/netbsd_syscall_hooks.h	1663;"	d
__sanitizer_syscall_pre_compat_50_adjtime	include/sanitizer/netbsd_syscall_hooks.h	733;"	d
__sanitizer_syscall_pre_compat_50_aio_suspend	include/sanitizer/netbsd_syscall_hooks.h	2186;"	d
__sanitizer_syscall_pre_compat_50_clock_getres	include/sanitizer/netbsd_syscall_hooks.h	1196;"	d
__sanitizer_syscall_pre_compat_50_clock_gettime	include/sanitizer/netbsd_syscall_hooks.h	1184;"	d
__sanitizer_syscall_pre_compat_50_clock_settime	include/sanitizer/netbsd_syscall_hooks.h	1190;"	d
__sanitizer_syscall_pre_compat_50_futimes	include/sanitizer/netbsd_syscall_hooks.h	1072;"	d
__sanitizer_syscall_pre_compat_50_getitimer	include/sanitizer/netbsd_syscall_hooks.h	452;"	d
__sanitizer_syscall_pre_compat_50_getrusage	include/sanitizer/netbsd_syscall_hooks.h	609;"	d
__sanitizer_syscall_pre_compat_50_gettimeofday	include/sanitizer/netbsd_syscall_hooks.h	603;"	d
__sanitizer_syscall_pre_compat_50_kevent	include/sanitizer/netbsd_syscall_hooks.h	1776;"	d
__sanitizer_syscall_pre_compat_50_lfs_segwait	include/sanitizer/netbsd_syscall_hooks.h	955;"	d
__sanitizer_syscall_pre_compat_50_lutimes	include/sanitizer/netbsd_syscall_hooks.h	1425;"	d
__sanitizer_syscall_pre_compat_50_mknod	include/sanitizer/netbsd_syscall_hooks.h	104;"	d
__sanitizer_syscall_pre_compat_50_mq_timedreceive	include/sanitizer/netbsd_syscall_hooks.h	1377;"	d
__sanitizer_syscall_pre_compat_50_mq_timedsend	include/sanitizer/netbsd_syscall_hooks.h	1367;"	d
__sanitizer_syscall_pre_compat_50_nanosleep	include/sanitizer/netbsd_syscall_hooks.h	1232;"	d
__sanitizer_syscall_pre_compat_50_pollts	include/sanitizer/netbsd_syscall_hooks.h	2003;"	d
__sanitizer_syscall_pre_compat_50_pselect	include/sanitizer/netbsd_syscall_hooks.h	1994;"	d
__sanitizer_syscall_pre_compat_50_quotactl	include/sanitizer/netbsd_syscall_hooks.h	774;"	d
__sanitizer_syscall_pre_compat_50_select	include/sanitizer/netbsd_syscall_hooks.h	485;"	d
__sanitizer_syscall_pre_compat_50_setitimer	include/sanitizer/netbsd_syscall_hooks.h	438;"	d
__sanitizer_syscall_pre_compat_50_settimeofday	include/sanitizer/netbsd_syscall_hooks.h	637;"	d
__sanitizer_syscall_pre_compat_50_timer_gettime	include/sanitizer/netbsd_syscall_hooks.h	1222;"	d
__sanitizer_syscall_pre_compat_50_timer_settime	include/sanitizer/netbsd_syscall_hooks.h	1212;"	d
__sanitizer_syscall_pre_compat_50_utimes	include/sanitizer/netbsd_syscall_hooks.h	726;"	d
__sanitizer_syscall_pre_compat_50_wait4	include/sanitizer/netbsd_syscall_hooks.h	72;"	d
__sanitizer_syscall_pre_compat_60__lwp_park	include/sanitizer/netbsd_syscall_hooks.h	2370;"	d
__sanitizer_syscall_pre_compat_60_sa_enable	include/sanitizer/netbsd_syscall_hooks.h	1723;"	d
__sanitizer_syscall_pre_compat_60_sa_preempt	include/sanitizer/netbsd_syscall_hooks.h	1737;"	d
__sanitizer_syscall_pre_compat_60_sa_register	include/sanitizer/netbsd_syscall_hooks.h	1707;"	d
__sanitizer_syscall_pre_compat_60_sa_setconcurrency	include/sanitizer/netbsd_syscall_hooks.h	1727;"	d
__sanitizer_syscall_pre_compat_60_sa_stacks	include/sanitizer/netbsd_syscall_hooks.h	1717;"	d
__sanitizer_syscall_pre_compat_60_sa_yield	include/sanitizer/netbsd_syscall_hooks.h	1733;"	d
__sanitizer_syscall_pre_connect	include/sanitizer/linux_syscall_hooks.h	1084;"	d
__sanitizer_syscall_pre_connect	include/sanitizer/netbsd_syscall_hooks.h	510;"	d
__sanitizer_syscall_pre_creat	include/sanitizer/linux_syscall_hooks.h	801;"	d
__sanitizer_syscall_pre_create_module	include/sanitizer/linux_syscall_hooks.h	1856;"	d
__sanitizer_syscall_pre_delete_module	include/sanitizer/linux_syscall_hooks.h	373;"	d
__sanitizer_syscall_pre_dup	include/sanitizer/linux_syscall_hooks.h	727;"	d
__sanitizer_syscall_pre_dup	include/sanitizer/netbsd_syscall_hooks.h	246;"	d
__sanitizer_syscall_pre_dup2	include/sanitizer/linux_syscall_hooks.h	731;"	d
__sanitizer_syscall_pre_dup2	include/sanitizer/netbsd_syscall_hooks.h	474;"	d
__sanitizer_syscall_pre_dup3	include/sanitizer/linux_syscall_hooks.h	735;"	d
__sanitizer_syscall_pre_dup3	include/sanitizer/netbsd_syscall_hooks.h	2501;"	d
__sanitizer_syscall_pre_epoll_create	include/sanitizer/linux_syscall_hooks.h	1199;"	d
__sanitizer_syscall_pre_epoll_create1	include/sanitizer/linux_syscall_hooks.h	1203;"	d
__sanitizer_syscall_pre_epoll_ctl	include/sanitizer/linux_syscall_hooks.h	1207;"	d
__sanitizer_syscall_pre_epoll_ctl_old	include/sanitizer/linux_syscall_hooks.h	1857;"	d
__sanitizer_syscall_pre_epoll_pwait	include/sanitizer/linux_syscall_hooks.h	1220;"	d
__sanitizer_syscall_pre_epoll_wait	include/sanitizer/linux_syscall_hooks.h	1213;"	d
__sanitizer_syscall_pre_epoll_wait_old	include/sanitizer/linux_syscall_hooks.h	1858;"	d
__sanitizer_syscall_pre_eventfd	include/sanitizer/linux_syscall_hooks.h	1733;"	d
__sanitizer_syscall_pre_eventfd2	include/sanitizer/linux_syscall_hooks.h	1737;"	d
__sanitizer_syscall_pre_execve	include/sanitizer/linux_syscall_hooks.h	1859;"	d
__sanitizer_syscall_pre_execve	include/sanitizer/netbsd_syscall_hooks.h	334;"	d
__sanitizer_syscall_pre_exit	include/sanitizer/linux_syscall_hooks.h	336;"	d
__sanitizer_syscall_pre_exit	include/sanitizer/netbsd_syscall_hooks.h	43;"	d
__sanitizer_syscall_pre_exit_group	include/sanitizer/linux_syscall_hooks.h	340;"	d
__sanitizer_syscall_pre_extattr_delete_fd	include/sanitizer/netbsd_syscall_hooks.h	1928;"	d
__sanitizer_syscall_pre_extattr_delete_file	include/sanitizer/netbsd_syscall_hooks.h	1899;"	d
__sanitizer_syscall_pre_extattr_delete_link	include/sanitizer/netbsd_syscall_hooks.h	1955;"	d
__sanitizer_syscall_pre_extattr_get_fd	include/sanitizer/netbsd_syscall_hooks.h	1918;"	d
__sanitizer_syscall_pre_extattr_get_file	include/sanitizer/netbsd_syscall_hooks.h	1889;"	d
__sanitizer_syscall_pre_extattr_get_link	include/sanitizer/netbsd_syscall_hooks.h	1945;"	d
__sanitizer_syscall_pre_extattr_list_fd	include/sanitizer/netbsd_syscall_hooks.h	1964;"	d
__sanitizer_syscall_pre_extattr_list_file	include/sanitizer/netbsd_syscall_hooks.h	1974;"	d
__sanitizer_syscall_pre_extattr_list_link	include/sanitizer/netbsd_syscall_hooks.h	1984;"	d
__sanitizer_syscall_pre_extattr_set_fd	include/sanitizer/netbsd_syscall_hooks.h	1908;"	d
__sanitizer_syscall_pre_extattr_set_file	include/sanitizer/netbsd_syscall_hooks.h	1879;"	d
__sanitizer_syscall_pre_extattr_set_link	include/sanitizer/netbsd_syscall_hooks.h	1935;"	d
__sanitizer_syscall_pre_extattrctl	include/sanitizer/netbsd_syscall_hooks.h	1869;"	d
__sanitizer_syscall_pre_faccessat	include/sanitizer/linux_syscall_hooks.h	1613;"	d
__sanitizer_syscall_pre_faccessat	include/sanitizer/netbsd_syscall_hooks.h	2555;"	d
__sanitizer_syscall_pre_fadvise64	include/sanitizer/linux_syscall_hooks.h	1860;"	d
__sanitizer_syscall_pre_fadvise64_64	include/sanitizer/linux_syscall_hooks.h	1861;"	d
__sanitizer_syscall_pre_fallocate	include/sanitizer/linux_syscall_hooks.h	1862;"	d
__sanitizer_syscall_pre_fanotify_init	include/sanitizer/linux_syscall_hooks.h	1863;"	d
__sanitizer_syscall_pre_fanotify_mark	include/sanitizer/linux_syscall_hooks.h	1864;"	d
__sanitizer_syscall_pre_fchdir	include/sanitizer/linux_syscall_hooks.h	1029;"	d
__sanitizer_syscall_pre_fchdir	include/sanitizer/netbsd_syscall_hooks.h	100;"	d
__sanitizer_syscall_pre_fchflags	include/sanitizer/netbsd_syscall_hooks.h	219;"	d
__sanitizer_syscall_pre_fchmod	include/sanitizer/linux_syscall_hooks.h	706;"	d
__sanitizer_syscall_pre_fchmod	include/sanitizer/netbsd_syscall_hooks.h	649;"	d
__sanitizer_syscall_pre_fchmodat	include/sanitizer/linux_syscall_hooks.h	1619;"	d
__sanitizer_syscall_pre_fchmodat	include/sanitizer/netbsd_syscall_hooks.h	2563;"	d
__sanitizer_syscall_pre_fchown	include/sanitizer/linux_syscall_hooks.h	834;"	d
__sanitizer_syscall_pre_fchown	include/sanitizer/netbsd_syscall_hooks.h	643;"	d
__sanitizer_syscall_pre_fchown16	include/sanitizer/linux_syscall_hooks.h	851;"	d
__sanitizer_syscall_pre_fchown32	include/sanitizer/linux_syscall_hooks.h	1865;"	d
__sanitizer_syscall_pre_fchownat	include/sanitizer/linux_syscall_hooks.h	1625;"	d
__sanitizer_syscall_pre_fchownat	include/sanitizer/netbsd_syscall_hooks.h	2570;"	d
__sanitizer_syscall_pre_fchroot	include/sanitizer/netbsd_syscall_hooks.h	1546;"	d
__sanitizer_syscall_pre_fcntl	include/sanitizer/linux_syscall_hooks.h	710;"	d
__sanitizer_syscall_pre_fcntl	include/sanitizer/netbsd_syscall_hooks.h	479;"	d
__sanitizer_syscall_pre_fcntl64	include/sanitizer/linux_syscall_hooks.h	714;"	d
__sanitizer_syscall_pre_fdatasync	include/sanitizer/linux_syscall_hooks.h	445;"	d
__sanitizer_syscall_pre_fdatasync	include/sanitizer/netbsd_syscall_hooks.h	1238;"	d
__sanitizer_syscall_pre_fdiscard	include/sanitizer/netbsd_syscall_hooks.h	2686;"	d
__sanitizer_syscall_pre_fexecve	include/sanitizer/netbsd_syscall_hooks.h	2578;"	d
__sanitizer_syscall_pre_fgetxattr	include/sanitizer/linux_syscall_hooks.h	570;"	d
__sanitizer_syscall_pre_fgetxattr	include/sanitizer/netbsd_syscall_hooks.h	2050;"	d
__sanitizer_syscall_pre_fktrace	include/sanitizer/netbsd_syscall_hooks.h	1492;"	d
__sanitizer_syscall_pre_flistxattr	include/sanitizer/linux_syscall_hooks.h	588;"	d
__sanitizer_syscall_pre_flistxattr	include/sanitizer/netbsd_syscall_hooks.h	2070;"	d
__sanitizer_syscall_pre_flock	include/sanitizer/linux_syscall_hooks.h	749;"	d
__sanitizer_syscall_pre_flock	include/sanitizer/netbsd_syscall_hooks.h	689;"	d
__sanitizer_syscall_pre_fork	include/sanitizer/linux_syscall_hooks.h	1830;"	d
__sanitizer_syscall_pre_fork	include/sanitizer/netbsd_syscall_hooks.h	47;"	d
__sanitizer_syscall_pre_fpathconf	include/sanitizer/netbsd_syscall_hooks.h	984;"	d
__sanitizer_syscall_pre_fremovexattr	include/sanitizer/linux_syscall_hooks.h	602;"	d
__sanitizer_syscall_pre_fremovexattr	include/sanitizer/netbsd_syscall_hooks.h	2087;"	d
__sanitizer_syscall_pre_fsetxattr	include/sanitizer/linux_syscall_hooks.h	551;"	d
__sanitizer_syscall_pre_fsetxattr	include/sanitizer/netbsd_syscall_hooks.h	2027;"	d
__sanitizer_syscall_pre_fstat	include/sanitizer/linux_syscall_hooks.h	504;"	d
__sanitizer_syscall_pre_fstat64	include/sanitizer/linux_syscall_hooks.h	528;"	d
__sanitizer_syscall_pre_fstatat	include/sanitizer/netbsd_syscall_hooks.h	2584;"	d
__sanitizer_syscall_pre_fstatat64	include/sanitizer/linux_syscall_hooks.h	1646;"	d
__sanitizer_syscall_pre_fstatfs	include/sanitizer/linux_syscall_hooks.h	491;"	d
__sanitizer_syscall_pre_fstatfs64	include/sanitizer/linux_syscall_hooks.h	495;"	d
__sanitizer_syscall_pre_fstatvfs1	include/sanitizer/netbsd_syscall_hooks.h	1857;"	d
__sanitizer_syscall_pre_fsync	include/sanitizer/linux_syscall_hooks.h	441;"	d
__sanitizer_syscall_pre_fsync	include/sanitizer/netbsd_syscall_hooks.h	494;"	d
__sanitizer_syscall_pre_fsync_range	include/sanitizer/netbsd_syscall_hooks.h	1832;"	d
__sanitizer_syscall_pre_ftime	include/sanitizer/linux_syscall_hooks.h	1866;"	d
__sanitizer_syscall_pre_ftruncate	include/sanitizer/linux_syscall_hooks.h	474;"	d
__sanitizer_syscall_pre_ftruncate	include/sanitizer/netbsd_syscall_hooks.h	1043;"	d
__sanitizer_syscall_pre_ftruncate64	include/sanitizer/linux_syscall_hooks.h	1867;"	d
__sanitizer_syscall_pre_futex	include/sanitizer/linux_syscall_hooks.h	1868;"	d
__sanitizer_syscall_pre_futimens	include/sanitizer/netbsd_syscall_hooks.h	2625;"	d
__sanitizer_syscall_pre_futimesat	include/sanitizer/linux_syscall_hooks.h	1607;"	d
__sanitizer_syscall_pre_get_kernel_syms	include/sanitizer/linux_syscall_hooks.h	1873;"	d
__sanitizer_syscall_pre_get_mempolicy	include/sanitizer/linux_syscall_hooks.h	1526;"	d
__sanitizer_syscall_pre_get_robust_list	include/sanitizer/linux_syscall_hooks.h	1690;"	d
__sanitizer_syscall_pre_get_thread_area	include/sanitizer/linux_syscall_hooks.h	1877;"	d
__sanitizer_syscall_pre_getcontext	include/sanitizer/netbsd_syscall_hooks.h	1605;"	d
__sanitizer_syscall_pre_getcpu	include/sanitizer/linux_syscall_hooks.h	1700;"	d
__sanitizer_syscall_pre_getcwd	include/sanitizer/linux_syscall_hooks.h	1017;"	d
__sanitizer_syscall_pre_getdents	include/sanitizer/linux_syscall_hooks.h	1049;"	d
__sanitizer_syscall_pre_getdents64	include/sanitizer/linux_syscall_hooks.h	1055;"	d
__sanitizer_syscall_pre_getegid	include/sanitizer/linux_syscall_hooks.h	74;"	d
__sanitizer_syscall_pre_getegid	include/sanitizer/netbsd_syscall_hooks.h	253;"	d
__sanitizer_syscall_pre_getegid16	include/sanitizer/linux_syscall_hooks.h	926;"	d
__sanitizer_syscall_pre_getegid32	include/sanitizer/linux_syscall_hooks.h	1869;"	d
__sanitizer_syscall_pre_geteuid	include/sanitizer/linux_syscall_hooks.h	68;"	d
__sanitizer_syscall_pre_geteuid	include/sanitizer/netbsd_syscall_hooks.h	159;"	d
__sanitizer_syscall_pre_geteuid16	include/sanitizer/linux_syscall_hooks.h	918;"	d
__sanitizer_syscall_pre_geteuid32	include/sanitizer/linux_syscall_hooks.h	1870;"	d
__sanitizer_syscall_pre_getgid	include/sanitizer/linux_syscall_hooks.h	71;"	d
__sanitizer_syscall_pre_getgid	include/sanitizer/netbsd_syscall_hooks.h	276;"	d
__sanitizer_syscall_pre_getgid16	include/sanitizer/linux_syscall_hooks.h	922;"	d
__sanitizer_syscall_pre_getgid32	include/sanitizer/linux_syscall_hooks.h	1871;"	d
__sanitizer_syscall_pre_getgroups	include/sanitizer/linux_syscall_hooks.h	100;"	d
__sanitizer_syscall_pre_getgroups	include/sanitizer/netbsd_syscall_hooks.h	418;"	d
__sanitizer_syscall_pre_getgroups16	include/sanitizer/linux_syscall_hooks.h	902;"	d
__sanitizer_syscall_pre_getgroups32	include/sanitizer/linux_syscall_hooks.h	1872;"	d
__sanitizer_syscall_pre_gethostname	include/sanitizer/linux_syscall_hooks.h	1230;"	d
__sanitizer_syscall_pre_getitimer	include/sanitizer/linux_syscall_hooks.h	179;"	d
__sanitizer_syscall_pre_getpeername	include/sanitizer/linux_syscall_hooks.h	1106;"	d
__sanitizer_syscall_pre_getpeername	include/sanitizer/netbsd_syscall_hooks.h	197;"	d
__sanitizer_syscall_pre_getpgid	include/sanitizer/linux_syscall_hooks.h	89;"	d
__sanitizer_syscall_pre_getpgid	include/sanitizer/netbsd_syscall_hooks.h	1078;"	d
__sanitizer_syscall_pre_getpgrp	include/sanitizer/linux_syscall_hooks.h	93;"	d
__sanitizer_syscall_pre_getpgrp	include/sanitizer/netbsd_syscall_hooks.h	430;"	d
__sanitizer_syscall_pre_getpid	include/sanitizer/linux_syscall_hooks.h	59;"	d
__sanitizer_syscall_pre_getpid	include/sanitizer/netbsd_syscall_hooks.h	136;"	d
__sanitizer_syscall_pre_getpmsg	include/sanitizer/linux_syscall_hooks.h	1874;"	d
__sanitizer_syscall_pre_getppid	include/sanitizer/linux_syscall_hooks.h	62;"	d
__sanitizer_syscall_pre_getppid	include/sanitizer/netbsd_syscall_hooks.h	237;"	d
__sanitizer_syscall_pre_getpriority	include/sanitizer/linux_syscall_hooks.h	309;"	d
__sanitizer_syscall_pre_getpriority	include/sanitizer/netbsd_syscall_hooks.h	522;"	d
__sanitizer_syscall_pre_getresgid	include/sanitizer/linux_syscall_hooks.h	83;"	d
__sanitizer_syscall_pre_getresgid16	include/sanitizer/linux_syscall_hooks.h	888;"	d
__sanitizer_syscall_pre_getresgid32	include/sanitizer/linux_syscall_hooks.h	1875;"	d
__sanitizer_syscall_pre_getresuid	include/sanitizer/linux_syscall_hooks.h	77;"	d
__sanitizer_syscall_pre_getresuid16	include/sanitizer/linux_syscall_hooks.h	877;"	d
__sanitizer_syscall_pre_getresuid32	include/sanitizer/linux_syscall_hooks.h	1876;"	d
__sanitizer_syscall_pre_getrlimit	include/sanitizer/linux_syscall_hooks.h	1254;"	d
__sanitizer_syscall_pre_getrlimit	include/sanitizer/netbsd_syscall_hooks.h	990;"	d
__sanitizer_syscall_pre_getrusage	include/sanitizer/linux_syscall_hooks.h	1274;"	d
__sanitizer_syscall_pre_getsid	include/sanitizer/linux_syscall_hooks.h	96;"	d
__sanitizer_syscall_pre_getsid	include/sanitizer/netbsd_syscall_hooks.h	1483;"	d
__sanitizer_syscall_pre_getsockname	include/sanitizer/linux_syscall_hooks.h	1100;"	d
__sanitizer_syscall_pre_getsockname	include/sanitizer/netbsd_syscall_hooks.h	203;"	d
__sanitizer_syscall_pre_getsockopt	include/sanitizer/linux_syscall_hooks.h	1070;"	d
__sanitizer_syscall_pre_getsockopt	include/sanitizer/netbsd_syscall_hooks.h	615;"	d
__sanitizer_syscall_pre_gettid	include/sanitizer/linux_syscall_hooks.h	48;"	d
__sanitizer_syscall_pre_gettimeofday	include/sanitizer/linux_syscall_hooks.h	32;"	d
__sanitizer_syscall_pre_getuid	include/sanitizer/linux_syscall_hooks.h	65;"	d
__sanitizer_syscall_pre_getuid	include/sanitizer/netbsd_syscall_hooks.h	156;"	d
__sanitizer_syscall_pre_getuid16	include/sanitizer/linux_syscall_hooks.h	914;"	d
__sanitizer_syscall_pre_getuid32	include/sanitizer/linux_syscall_hooks.h	1878;"	d
__sanitizer_syscall_pre_getvfsstat	include/sanitizer/netbsd_syscall_hooks.h	1845;"	d
__sanitizer_syscall_pre_getxattr	include/sanitizer/linux_syscall_hooks.h	558;"	d
__sanitizer_syscall_pre_getxattr	include/sanitizer/netbsd_syscall_hooks.h	2035;"	d
__sanitizer_syscall_pre_gtty	include/sanitizer/linux_syscall_hooks.h	1879;"	d
__sanitizer_syscall_pre_idle	include/sanitizer/linux_syscall_hooks.h	1880;"	d
__sanitizer_syscall_pre_init_module	include/sanitizer/linux_syscall_hooks.h	367;"	d
__sanitizer_syscall_pre_inotify_add_watch	include/sanitizer/linux_syscall_hooks.h	1544;"	d
__sanitizer_syscall_pre_inotify_init	include/sanitizer/linux_syscall_hooks.h	1536;"	d
__sanitizer_syscall_pre_inotify_init1	include/sanitizer/linux_syscall_hooks.h	1540;"	d
__sanitizer_syscall_pre_inotify_rm_watch	include/sanitizer/linux_syscall_hooks.h	1550;"	d
__sanitizer_syscall_pre_io_cancel	include/sanitizer/linux_syscall_hooks.h	777;"	d
__sanitizer_syscall_pre_io_destroy	include/sanitizer/linux_syscall_hooks.h	757;"	d
__sanitizer_syscall_pre_io_getevents	include/sanitizer/linux_syscall_hooks.h	761;"	d
__sanitizer_syscall_pre_io_setup	include/sanitizer/linux_syscall_hooks.h	753;"	d
__sanitizer_syscall_pre_io_submit	include/sanitizer/linux_syscall_hooks.h	771;"	d
__sanitizer_syscall_pre_ioctl	include/sanitizer/linux_syscall_hooks.h	745;"	d
__sanitizer_syscall_pre_ioctl	include/sanitizer/netbsd_syscall_hooks.h	309;"	d
__sanitizer_syscall_pre_ioperm	include/sanitizer/linux_syscall_hooks.h	740;"	d
__sanitizer_syscall_pre_iopl	include/sanitizer/linux_syscall_hooks.h	1881;"	d
__sanitizer_syscall_pre_ioprio_get	include/sanitizer/linux_syscall_hooks.h	1491;"	d
__sanitizer_syscall_pre_ioprio_set	include/sanitizer/linux_syscall_hooks.h	1485;"	d
__sanitizer_syscall_pre_ipc	include/sanitizer/linux_syscall_hooks.h	1349;"	d
__sanitizer_syscall_pre_issetugid	include/sanitizer/netbsd_syscall_hooks.h	1595;"	d
__sanitizer_syscall_pre_kexec_load	include/sanitizer/linux_syscall_hooks.h	327;"	d
__sanitizer_syscall_pre_keyctl	include/sanitizer/linux_syscall_hooks.h	1478;"	d
__sanitizer_syscall_pre_kill	include/sanitizer/linux_syscall_hooks.h	404;"	d
__sanitizer_syscall_pre_kill	include/sanitizer/netbsd_syscall_hooks.h	227;"	d
__sanitizer_syscall_pre_kqueue	include/sanitizer/netbsd_syscall_hooks.h	1773;"	d
__sanitizer_syscall_pre_kqueue1	include/sanitizer/netbsd_syscall_hooks.h	2507;"	d
__sanitizer_syscall_pre_ktrace	include/sanitizer/netbsd_syscall_hooks.h	263;"	d
__sanitizer_syscall_pre_lchflags	include/sanitizer/netbsd_syscall_hooks.h	1590;"	d
__sanitizer_syscall_pre_lchmod	include/sanitizer/netbsd_syscall_hooks.h	1414;"	d
__sanitizer_syscall_pre_lchown	include/sanitizer/linux_syscall_hooks.h	828;"	d
__sanitizer_syscall_pre_lchown	include/sanitizer/netbsd_syscall_hooks.h	1419;"	d
__sanitizer_syscall_pre_lchown16	include/sanitizer/linux_syscall_hooks.h	845;"	d
__sanitizer_syscall_pre_lchown32	include/sanitizer/linux_syscall_hooks.h	1882;"	d
__sanitizer_syscall_pre_lfs_bmapv	include/sanitizer/netbsd_syscall_hooks.h	937;"	d
__sanitizer_syscall_pre_lfs_markv	include/sanitizer/netbsd_syscall_hooks.h	943;"	d
__sanitizer_syscall_pre_lfs_segclean	include/sanitizer/netbsd_syscall_hooks.h	949;"	d
__sanitizer_syscall_pre_lgetxattr	include/sanitizer/linux_syscall_hooks.h	564;"	d
__sanitizer_syscall_pre_lgetxattr	include/sanitizer/netbsd_syscall_hooks.h	2042;"	d
__sanitizer_syscall_pre_link	include/sanitizer/linux_syscall_hooks.h	686;"	d
__sanitizer_syscall_pre_link	include/sanitizer/netbsd_syscall_hooks.h	87;"	d
__sanitizer_syscall_pre_linkat	include/sanitizer/linux_syscall_hooks.h	1590;"	d
__sanitizer_syscall_pre_linkat	include/sanitizer/netbsd_syscall_hooks.h	2519;"	d
__sanitizer_syscall_pre_lio_listio	include/sanitizer/netbsd_syscall_hooks.h	2197;"	d
__sanitizer_syscall_pre_listen	include/sanitizer/linux_syscall_hooks.h	1180;"	d
__sanitizer_syscall_pre_listen	include/sanitizer/netbsd_syscall_hooks.h	560;"	d
__sanitizer_syscall_pre_listxattr	include/sanitizer/linux_syscall_hooks.h	576;"	d
__sanitizer_syscall_pre_listxattr	include/sanitizer/netbsd_syscall_hooks.h	2058;"	d
__sanitizer_syscall_pre_llistxattr	include/sanitizer/linux_syscall_hooks.h	582;"	d
__sanitizer_syscall_pre_llistxattr	include/sanitizer/netbsd_syscall_hooks.h	2064;"	d
__sanitizer_syscall_pre_llseek	include/sanitizer/linux_syscall_hooks.h	943;"	d
__sanitizer_syscall_pre_lock	include/sanitizer/linux_syscall_hooks.h	1884;"	d
__sanitizer_syscall_pre_lookup_dcookie	include/sanitizer/linux_syscall_hooks.h	1037;"	d
__sanitizer_syscall_pre_lremovexattr	include/sanitizer/linux_syscall_hooks.h	598;"	d
__sanitizer_syscall_pre_lremovexattr	include/sanitizer/netbsd_syscall_hooks.h	2081;"	d
__sanitizer_syscall_pre_lseek	include/sanitizer/linux_syscall_hooks.h	938;"	d
__sanitizer_syscall_pre_lseek	include/sanitizer/netbsd_syscall_hooks.h	1030;"	d
__sanitizer_syscall_pre_lsetxattr	include/sanitizer/linux_syscall_hooks.h	543;"	d
__sanitizer_syscall_pre_lsetxattr	include/sanitizer/netbsd_syscall_hooks.h	2018;"	d
__sanitizer_syscall_pre_lstat	include/sanitizer/linux_syscall_hooks.h	500;"	d
__sanitizer_syscall_pre_lstat64	include/sanitizer/linux_syscall_hooks.h	532;"	d
__sanitizer_syscall_pre_madvise	include/sanitizer/linux_syscall_hooks.h	660;"	d
__sanitizer_syscall_pre_madvise	include/sanitizer/netbsd_syscall_hooks.h	404;"	d
__sanitizer_syscall_pre_madvise1	include/sanitizer/linux_syscall_hooks.h	1885;"	d
__sanitizer_syscall_pre_mbind	include/sanitizer/linux_syscall_hooks.h	1517;"	d
__sanitizer_syscall_pre_migrate_pages	include/sanitizer/linux_syscall_hooks.h	1501;"	d
__sanitizer_syscall_pre_mincore	include/sanitizer/linux_syscall_hooks.h	666;"	d
__sanitizer_syscall_pre_mincore	include/sanitizer/netbsd_syscall_hooks.h	412;"	d
__sanitizer_syscall_pre_minherit	include/sanitizer/netbsd_syscall_hooks.h	1408;"	d
__sanitizer_syscall_pre_mkdir	include/sanitizer/linux_syscall_hooks.h	1021;"	d
__sanitizer_syscall_pre_mkdir	include/sanitizer/netbsd_syscall_hooks.h	718;"	d
__sanitizer_syscall_pre_mkdirat	include/sanitizer/linux_syscall_hooks.h	1572;"	d
__sanitizer_syscall_pre_mkdirat	include/sanitizer/netbsd_syscall_hooks.h	2549;"	d
__sanitizer_syscall_pre_mkfifo	include/sanitizer/netbsd_syscall_hooks.h	693;"	d
__sanitizer_syscall_pre_mkfifoat	include/sanitizer/netbsd_syscall_hooks.h	2535;"	d
__sanitizer_syscall_pre_mknod	include/sanitizer/linux_syscall_hooks.h	680;"	d
__sanitizer_syscall_pre_mknodat	include/sanitizer/linux_syscall_hooks.h	1566;"	d
__sanitizer_syscall_pre_mknodat	include/sanitizer/netbsd_syscall_hooks.h	2541;"	d
__sanitizer_syscall_pre_mlock	include/sanitizer/linux_syscall_hooks.h	644;"	d
__sanitizer_syscall_pre_mlock	include/sanitizer/netbsd_syscall_hooks.h	1059;"	d
__sanitizer_syscall_pre_mlockall	include/sanitizer/linux_syscall_hooks.h	652;"	d
__sanitizer_syscall_pre_mlockall	include/sanitizer/netbsd_syscall_hooks.h	1242;"	d
__sanitizer_syscall_pre_mmap	include/sanitizer/linux_syscall_hooks.h	1886;"	d
__sanitizer_syscall_pre_mmap	include/sanitizer/netbsd_syscall_hooks.h	1009;"	d
__sanitizer_syscall_pre_mmap2	include/sanitizer/linux_syscall_hooks.h	1887;"	d
__sanitizer_syscall_pre_mmap_pgoff	include/sanitizer/linux_syscall_hooks.h	1777;"	d
__sanitizer_syscall_pre_modctl	include/sanitizer/netbsd_syscall_hooks.h	1262;"	d
__sanitizer_syscall_pre_modify_ldt	include/sanitizer/linux_syscall_hooks.h	1888;"	d
__sanitizer_syscall_pre_mount	include/sanitizer/linux_syscall_hooks.h	453;"	d
__sanitizer_syscall_pre_move_pages	include/sanitizer/linux_syscall_hooks.h	1507;"	d
__sanitizer_syscall_pre_mprotect	include/sanitizer/linux_syscall_hooks.h	610;"	d
__sanitizer_syscall_pre_mprotect	include/sanitizer/netbsd_syscall_hooks.h	398;"	d
__sanitizer_syscall_pre_mpx	include/sanitizer/linux_syscall_hooks.h	1889;"	d
__sanitizer_syscall_pre_mq_close	include/sanitizer/netbsd_syscall_hooks.h	1323;"	d
__sanitizer_syscall_pre_mq_getattr	include/sanitizer/netbsd_syscall_hooks.h	1331;"	d
__sanitizer_syscall_pre_mq_getsetattr	include/sanitizer/linux_syscall_hooks.h	1393;"	d
__sanitizer_syscall_pre_mq_notify	include/sanitizer/linux_syscall_hooks.h	1388;"	d
__sanitizer_syscall_pre_mq_notify	include/sanitizer/netbsd_syscall_hooks.h	1343;"	d
__sanitizer_syscall_pre_mq_open	include/sanitizer/linux_syscall_hooks.h	1358;"	d
__sanitizer_syscall_pre_mq_open	include/sanitizer/netbsd_syscall_hooks.h	1316;"	d
__sanitizer_syscall_pre_mq_receive	include/sanitizer/netbsd_syscall_hooks.h	1358;"	d
__sanitizer_syscall_pre_mq_send	include/sanitizer/netbsd_syscall_hooks.h	1349;"	d
__sanitizer_syscall_pre_mq_setattr	include/sanitizer/netbsd_syscall_hooks.h	1337;"	d
__sanitizer_syscall_pre_mq_timedreceive	include/sanitizer/linux_syscall_hooks.h	1378;"	d
__sanitizer_syscall_pre_mq_timedsend	include/sanitizer/linux_syscall_hooks.h	1368;"	d
__sanitizer_syscall_pre_mq_unlink	include/sanitizer/linux_syscall_hooks.h	1364;"	d
__sanitizer_syscall_pre_mq_unlink	include/sanitizer/netbsd_syscall_hooks.h	1327;"	d
__sanitizer_syscall_pre_mremap	include/sanitizer/linux_syscall_hooks.h	616;"	d
__sanitizer_syscall_pre_mremap	include/sanitizer/netbsd_syscall_hooks.h	2217;"	d
__sanitizer_syscall_pre_msgctl	include/sanitizer/linux_syscall_hooks.h	1301;"	d
__sanitizer_syscall_pre_msgget	include/sanitizer/linux_syscall_hooks.h	1282;"	d
__sanitizer_syscall_pre_msgget	include/sanitizer/netbsd_syscall_hooks.h	1141;"	d
__sanitizer_syscall_pre_msgrcv	include/sanitizer/linux_syscall_hooks.h	1292;"	d
__sanitizer_syscall_pre_msgrcv	include/sanitizer/netbsd_syscall_hooks.h	1153;"	d
__sanitizer_syscall_pre_msgsnd	include/sanitizer/linux_syscall_hooks.h	1286;"	d
__sanitizer_syscall_pre_msgsnd	include/sanitizer/netbsd_syscall_hooks.h	1146;"	d
__sanitizer_syscall_pre_msync	include/sanitizer/linux_syscall_hooks.h	635;"	d
__sanitizer_syscall_pre_munlock	include/sanitizer/linux_syscall_hooks.h	648;"	d
__sanitizer_syscall_pre_munlock	include/sanitizer/netbsd_syscall_hooks.h	1063;"	d
__sanitizer_syscall_pre_munlockall	include/sanitizer/linux_syscall_hooks.h	656;"	d
__sanitizer_syscall_pre_munlockall	include/sanitizer/netbsd_syscall_hooks.h	1246;"	d
__sanitizer_syscall_pre_munmap	include/sanitizer/linux_syscall_hooks.h	640;"	d
__sanitizer_syscall_pre_munmap	include/sanitizer/netbsd_syscall_hooks.h	394;"	d
__sanitizer_syscall_pre_name_to_handle_at	include/sanitizer/linux_syscall_hooks.h	1790;"	d
__sanitizer_syscall_pre_nanosleep	include/sanitizer/linux_syscall_hooks.h	51;"	d
__sanitizer_syscall_pre_newfstat	include/sanitizer/linux_syscall_hooks.h	516;"	d
__sanitizer_syscall_pre_newfstatat	include/sanitizer/linux_syscall_hooks.h	1640;"	d
__sanitizer_syscall_pre_newlstat	include/sanitizer/linux_syscall_hooks.h	512;"	d
__sanitizer_syscall_pre_newstat	include/sanitizer/linux_syscall_hooks.h	508;"	d
__sanitizer_syscall_pre_newuname	include/sanitizer/linux_syscall_hooks.h	1242;"	d
__sanitizer_syscall_pre_nfsservctl	include/sanitizer/linux_syscall_hooks.h	1891;"	d
__sanitizer_syscall_pre_nfssvc	include/sanitizer/netbsd_syscall_hooks.h	795;"	d
__sanitizer_syscall_pre_ni_syscall	include/sanitizer/linux_syscall_hooks.h	1448;"	d
__sanitizer_syscall_pre_nice	include/sanitizer/linux_syscall_hooks.h	249;"	d
__sanitizer_syscall_pre_ntp_adjtime	include/sanitizer/netbsd_syscall_hooks.h	914;"	d
__sanitizer_syscall_pre_old_getrlimit	include/sanitizer/linux_syscall_hooks.h	1258;"	d
__sanitizer_syscall_pre_old_mmap	include/sanitizer/linux_syscall_hooks.h	1786;"	d
__sanitizer_syscall_pre_old_readdir	include/sanitizer/linux_syscall_hooks.h	1741;"	d
__sanitizer_syscall_pre_old_select	include/sanitizer/linux_syscall_hooks.h	1195;"	d
__sanitizer_syscall_pre_oldfstat	include/sanitizer/linux_syscall_hooks.h	1892;"	d
__sanitizer_syscall_pre_oldlstat	include/sanitizer/linux_syscall_hooks.h	1893;"	d
__sanitizer_syscall_pre_oldolduname	include/sanitizer/linux_syscall_hooks.h	1894;"	d
__sanitizer_syscall_pre_oldstat	include/sanitizer/linux_syscall_hooks.h	1895;"	d
__sanitizer_syscall_pre_oldumount	include/sanitizer/linux_syscall_hooks.h	466;"	d
__sanitizer_syscall_pre_olduname	include/sanitizer/linux_syscall_hooks.h	1250;"	d
__sanitizer_syscall_pre_open	include/sanitizer/linux_syscall_hooks.h	805;"	d
__sanitizer_syscall_pre_open	include/sanitizer/netbsd_syscall_hooks.h	62;"	d
__sanitizer_syscall_pre_open_by_handle_at	include/sanitizer/linux_syscall_hooks.h	1799;"	d
__sanitizer_syscall_pre_openat	include/sanitizer/linux_syscall_hooks.h	1634;"	d
__sanitizer_syscall_pre_openat	include/sanitizer/netbsd_syscall_hooks.h	2598;"	d
__sanitizer_syscall_pre_paccept	include/sanitizer/netbsd_syscall_hooks.h	2511;"	d
__sanitizer_syscall_pre_pathconf	include/sanitizer/netbsd_syscall_hooks.h	979;"	d
__sanitizer_syscall_pre_pause	include/sanitizer/linux_syscall_hooks.h	435;"	d
__sanitizer_syscall_pre_pciconfig_iobase	include/sanitizer/linux_syscall_hooks.h	1399;"	d
__sanitizer_syscall_pre_pciconfig_read	include/sanitizer/linux_syscall_hooks.h	1405;"	d
__sanitizer_syscall_pre_pciconfig_write	include/sanitizer/linux_syscall_hooks.h	1411;"	d
__sanitizer_syscall_pre_perf_event_open	include/sanitizer/linux_syscall_hooks.h	1767;"	d
__sanitizer_syscall_pre_personality	include/sanitizer/linux_syscall_hooks.h	165;"	d
__sanitizer_syscall_pre_pipe	include/sanitizer/linux_syscall_hooks.h	719;"	d
__sanitizer_syscall_pre_pipe	include/sanitizer/netbsd_syscall_hooks.h	250;"	d
__sanitizer_syscall_pre_pipe2	include/sanitizer/linux_syscall_hooks.h	723;"	d
__sanitizer_syscall_pre_pipe2	include/sanitizer/netbsd_syscall_hooks.h	2496;"	d
__sanitizer_syscall_pre_pivot_root	include/sanitizer/linux_syscall_hooks.h	671;"	d
__sanitizer_syscall_pre_pmc_control	include/sanitizer/netbsd_syscall_hooks.h	1761;"	d
__sanitizer_syscall_pre_pmc_get_info	include/sanitizer/netbsd_syscall_hooks.h	1755;"	d
__sanitizer_syscall_pre_poll	include/sanitizer/linux_syscall_hooks.h	1184;"	d
__sanitizer_syscall_pre_poll	include/sanitizer/netbsd_syscall_hooks.h	1087;"	d
__sanitizer_syscall_pre_posix_fadvise	include/sanitizer/netbsd_syscall_hooks.h	2116;"	d
__sanitizer_syscall_pre_posix_fallocate	include/sanitizer/netbsd_syscall_hooks.h	2679;"	d
__sanitizer_syscall_pre_posix_spawn	include/sanitizer/netbsd_syscall_hooks.h	2635;"	d
__sanitizer_syscall_pre_ppoll	include/sanitizer/linux_syscall_hooks.h	1756;"	d
__sanitizer_syscall_pre_prctl	include/sanitizer/linux_syscall_hooks.h	1896;"	d
__sanitizer_syscall_pre_pread	include/sanitizer/netbsd_syscall_hooks.h	893;"	d
__sanitizer_syscall_pre_pread64	include/sanitizer/linux_syscall_hooks.h	975;"	d
__sanitizer_syscall_pre_pread64	include/sanitizer/linux_syscall_hooks.h	988;"	d
__sanitizer_syscall_pre_preadv	include/sanitizer/linux_syscall_hooks.h	1003;"	d
__sanitizer_syscall_pre_preadv	include/sanitizer/netbsd_syscall_hooks.h	1499;"	d
__sanitizer_syscall_pre_prlimit64	include/sanitizer/linux_syscall_hooks.h	1267;"	d
__sanitizer_syscall_pre_process_vm_readv	include/sanitizer/linux_syscall_hooks.h	1810;"	d
__sanitizer_syscall_pre_process_vm_writev	include/sanitizer/linux_syscall_hooks.h	1820;"	d
__sanitizer_syscall_pre_prof	include/sanitizer/linux_syscall_hooks.h	1897;"	d
__sanitizer_syscall_pre_profil	include/sanitizer/linux_syscall_hooks.h	1898;"	d
__sanitizer_syscall_pre_profil	include/sanitizer/netbsd_syscall_hooks.h	256;"	d
__sanitizer_syscall_pre_pselect6	include/sanitizer/linux_syscall_hooks.h	1747;"	d
__sanitizer_syscall_pre_pset_assign	include/sanitizer/netbsd_syscall_hooks.h	2235;"	d
__sanitizer_syscall_pre_pset_create	include/sanitizer/netbsd_syscall_hooks.h	2227;"	d
__sanitizer_syscall_pre_pset_destroy	include/sanitizer/netbsd_syscall_hooks.h	2231;"	d
__sanitizer_syscall_pre_ptrace	include/sanitizer/linux_syscall_hooks.h	1452;"	d
__sanitizer_syscall_pre_ptrace	include/sanitizer/netbsd_syscall_hooks.h	162;"	d
__sanitizer_syscall_pre_putpmsg	include/sanitizer/linux_syscall_hooks.h	1899;"	d
__sanitizer_syscall_pre_pwrite	include/sanitizer/netbsd_syscall_hooks.h	901;"	d
__sanitizer_syscall_pre_pwrite64	include/sanitizer/linux_syscall_hooks.h	981;"	d
__sanitizer_syscall_pre_pwrite64	include/sanitizer/linux_syscall_hooks.h	995;"	d
__sanitizer_syscall_pre_pwritev	include/sanitizer/linux_syscall_hooks.h	1010;"	d
__sanitizer_syscall_pre_pwritev	include/sanitizer/netbsd_syscall_hooks.h	1507;"	d
__sanitizer_syscall_pre_query_module	include/sanitizer/linux_syscall_hooks.h	1900;"	d
__sanitizer_syscall_pre_quotactl	include/sanitizer/linux_syscall_hooks.h	1043;"	d
__sanitizer_syscall_pre_rasctl	include/sanitizer/netbsd_syscall_hooks.h	1767;"	d
__sanitizer_syscall_pre_read	include/sanitizer/linux_syscall_hooks.h	953;"	d
__sanitizer_syscall_pre_read	include/sanitizer/netbsd_syscall_hooks.h	50;"	d
__sanitizer_syscall_pre_readahead	include/sanitizer/linux_syscall_hooks.h	1901;"	d
__sanitizer_syscall_pre_readdir	include/sanitizer/linux_syscall_hooks.h	1902;"	d
__sanitizer_syscall_pre_readlink	include/sanitizer/linux_syscall_hooks.h	795;"	d
__sanitizer_syscall_pre_readlink	include/sanitizer/netbsd_syscall_hooks.h	328;"	d
__sanitizer_syscall_pre_readlinkat	include/sanitizer/linux_syscall_hooks.h	1652;"	d
__sanitizer_syscall_pre_readlinkat	include/sanitizer/netbsd_syscall_hooks.h	2605;"	d
__sanitizer_syscall_pre_readv	include/sanitizer/linux_syscall_hooks.h	958;"	d
__sanitizer_syscall_pre_readv	include/sanitizer/netbsd_syscall_hooks.h	625;"	d
__sanitizer_syscall_pre_reboot	include/sanitizer/linux_syscall_hooks.h	317;"	d
__sanitizer_syscall_pre_reboot	include/sanitizer/netbsd_syscall_hooks.h	1082;"	d
__sanitizer_syscall_pre_recv	include/sanitizer/linux_syscall_hooks.h	1138;"	d
__sanitizer_syscall_pre_recvfrom	include/sanitizer/linux_syscall_hooks.h	1144;"	d
__sanitizer_syscall_pre_recvfrom	include/sanitizer/netbsd_syscall_hooks.h	181;"	d
__sanitizer_syscall_pre_recvmmsg	include/sanitizer/linux_syscall_hooks.h	1158;"	d
__sanitizer_syscall_pre_recvmmsg	include/sanitizer/netbsd_syscall_hooks.h	2645;"	d
__sanitizer_syscall_pre_recvmsg	include/sanitizer/linux_syscall_hooks.h	1153;"	d
__sanitizer_syscall_pre_recvmsg	include/sanitizer/netbsd_syscall_hooks.h	169;"	d
__sanitizer_syscall_pre_remap_file_pages	include/sanitizer/linux_syscall_hooks.h	626;"	d
__sanitizer_syscall_pre_removexattr	include/sanitizer/linux_syscall_hooks.h	594;"	d
__sanitizer_syscall_pre_removexattr	include/sanitizer/netbsd_syscall_hooks.h	2076;"	d
__sanitizer_syscall_pre_rename	include/sanitizer/linux_syscall_hooks.h	698;"	d
__sanitizer_syscall_pre_rename	include/sanitizer/netbsd_syscall_hooks.h	673;"	d
__sanitizer_syscall_pre_renameat	include/sanitizer/linux_syscall_hooks.h	1600;"	d
__sanitizer_syscall_pre_renameat	include/sanitizer/netbsd_syscall_hooks.h	2527;"	d
__sanitizer_syscall_pre_request_key	include/sanitizer/linux_syscall_hooks.h	1468;"	d
__sanitizer_syscall_pre_restart_syscall	include/sanitizer/linux_syscall_hooks.h	323;"	d
__sanitizer_syscall_pre_revoke	include/sanitizer/netbsd_syscall_hooks.h	319;"	d
__sanitizer_syscall_pre_rmdir	include/sanitizer/linux_syscall_hooks.h	1033;"	d
__sanitizer_syscall_pre_rmdir	include/sanitizer/netbsd_syscall_hooks.h	722;"	d
__sanitizer_syscall_pre_rt_sigaction	include/sanitizer/linux_syscall_hooks.h	1843;"	d
__sanitizer_syscall_pre_rt_sigpending	include/sanitizer/linux_syscall_hooks.h	385;"	d
__sanitizer_syscall_pre_rt_sigprocmask	include/sanitizer/linux_syscall_hooks.h	378;"	d
__sanitizer_syscall_pre_rt_sigqueueinfo	include/sanitizer/linux_syscall_hooks.h	417;"	d
__sanitizer_syscall_pre_rt_sigreturn	include/sanitizer/linux_syscall_hooks.h	1903;"	d
__sanitizer_syscall_pre_rt_sigsuspend	include/sanitizer/linux_syscall_hooks.h	1904;"	d
__sanitizer_syscall_pre_rt_sigtimedwait	include/sanitizer/linux_syscall_hooks.h	390;"	d
__sanitizer_syscall_pre_rt_tgsigqueueinfo	include/sanitizer/linux_syscall_hooks.h	398;"	d
__sanitizer_syscall_pre_sched_get_priority_max	include/sanitizer/linux_syscall_hooks.h	289;"	d
__sanitizer_syscall_pre_sched_get_priority_min	include/sanitizer/linux_syscall_hooks.h	293;"	d
__sanitizer_syscall_pre_sched_getaffinity	include/sanitizer/linux_syscall_hooks.h	278;"	d
__sanitizer_syscall_pre_sched_getparam	include/sanitizer/linux_syscall_hooks.h	267;"	d
__sanitizer_syscall_pre_sched_getscheduler	include/sanitizer/linux_syscall_hooks.h	263;"	d
__sanitizer_syscall_pre_sched_rr_get_interval	include/sanitizer/linux_syscall_hooks.h	297;"	d
__sanitizer_syscall_pre_sched_setaffinity	include/sanitizer/linux_syscall_hooks.h	271;"	d
__sanitizer_syscall_pre_sched_setparam	include/sanitizer/linux_syscall_hooks.h	259;"	d
__sanitizer_syscall_pre_sched_setscheduler	include/sanitizer/linux_syscall_hooks.h	253;"	d
__sanitizer_syscall_pre_sched_yield	include/sanitizer/linux_syscall_hooks.h	285;"	d
__sanitizer_syscall_pre_sched_yield	include/sanitizer/netbsd_syscall_hooks.h	1822;"	d
__sanitizer_syscall_pre_security	include/sanitizer/linux_syscall_hooks.h	1905;"	d
__sanitizer_syscall_pre_select	include/sanitizer/linux_syscall_hooks.h	1189;"	d
__sanitizer_syscall_pre_semconfig	include/sanitizer/netbsd_syscall_hooks.h	1131;"	d
__sanitizer_syscall_pre_semctl	include/sanitizer/linux_syscall_hooks.h	1317;"	d
__sanitizer_syscall_pre_semget	include/sanitizer/linux_syscall_hooks.h	1306;"	d
__sanitizer_syscall_pre_semget	include/sanitizer/netbsd_syscall_hooks.h	1119;"	d
__sanitizer_syscall_pre_semop	include/sanitizer/linux_syscall_hooks.h	1312;"	d
__sanitizer_syscall_pre_semop	include/sanitizer/netbsd_syscall_hooks.h	1125;"	d
__sanitizer_syscall_pre_semtimedop	include/sanitizer/linux_syscall_hooks.h	1323;"	d
__sanitizer_syscall_pre_send	include/sanitizer/linux_syscall_hooks.h	1112;"	d
__sanitizer_syscall_pre_sendfile	include/sanitizer/linux_syscall_hooks.h	783;"	d
__sanitizer_syscall_pre_sendfile64	include/sanitizer/linux_syscall_hooks.h	789;"	d
__sanitizer_syscall_pre_sendmmsg	include/sanitizer/linux_syscall_hooks.h	1132;"	d
__sanitizer_syscall_pre_sendmmsg	include/sanitizer/netbsd_syscall_hooks.h	2653;"	d
__sanitizer_syscall_pre_sendmsg	include/sanitizer/linux_syscall_hooks.h	1127;"	d
__sanitizer_syscall_pre_sendmsg	include/sanitizer/netbsd_syscall_hooks.h	175;"	d
__sanitizer_syscall_pre_sendto	include/sanitizer/linux_syscall_hooks.h	1118;"	d
__sanitizer_syscall_pre_sendto	include/sanitizer/netbsd_syscall_hooks.h	698;"	d
__sanitizer_syscall_pre_set_mempolicy	include/sanitizer/linux_syscall_hooks.h	1495;"	d
__sanitizer_syscall_pre_set_robust_list	include/sanitizer/linux_syscall_hooks.h	1696;"	d
__sanitizer_syscall_pre_set_thread_area	include/sanitizer/linux_syscall_hooks.h	1914;"	d
__sanitizer_syscall_pre_set_tid_address	include/sanitizer/linux_syscall_hooks.h	363;"	d
__sanitizer_syscall_pre_setcontext	include/sanitizer/netbsd_syscall_hooks.h	1609;"	d
__sanitizer_syscall_pre_setdomainname	include/sanitizer/linux_syscall_hooks.h	1238;"	d
__sanitizer_syscall_pre_setegid	include/sanitizer/netbsd_syscall_hooks.h	929;"	d
__sanitizer_syscall_pre_seteuid	include/sanitizer/netbsd_syscall_hooks.h	933;"	d
__sanitizer_syscall_pre_setfsgid	include/sanitizer/linux_syscall_hooks.h	137;"	d
__sanitizer_syscall_pre_setfsgid16	include/sanitizer/linux_syscall_hooks.h	898;"	d
__sanitizer_syscall_pre_setfsgid32	include/sanitizer/linux_syscall_hooks.h	1906;"	d
__sanitizer_syscall_pre_setfsuid	include/sanitizer/linux_syscall_hooks.h	133;"	d
__sanitizer_syscall_pre_setfsuid16	include/sanitizer/linux_syscall_hooks.h	894;"	d
__sanitizer_syscall_pre_setfsuid32	include/sanitizer/linux_syscall_hooks.h	1907;"	d
__sanitizer_syscall_pre_setgid	include/sanitizer/linux_syscall_hooks.h	109;"	d
__sanitizer_syscall_pre_setgid	include/sanitizer/netbsd_syscall_hooks.h	925;"	d
__sanitizer_syscall_pre_setgid16	include/sanitizer/linux_syscall_hooks.h	860;"	d
__sanitizer_syscall_pre_setgid32	include/sanitizer/linux_syscall_hooks.h	1908;"	d
__sanitizer_syscall_pre_setgroups	include/sanitizer/linux_syscall_hooks.h	148;"	d
__sanitizer_syscall_pre_setgroups	include/sanitizer/netbsd_syscall_hooks.h	424;"	d
__sanitizer_syscall_pre_setgroups16	include/sanitizer/linux_syscall_hooks.h	908;"	d
__sanitizer_syscall_pre_setgroups32	include/sanitizer/linux_syscall_hooks.h	1909;"	d
__sanitizer_syscall_pre_sethostname	include/sanitizer/linux_syscall_hooks.h	1234;"	d
__sanitizer_syscall_pre_setitimer	include/sanitizer/linux_syscall_hooks.h	183;"	d
__sanitizer_syscall_pre_setns	include/sanitizer/linux_syscall_hooks.h	1806;"	d
__sanitizer_syscall_pre_setpgid	include/sanitizer/linux_syscall_hooks.h	141;"	d
__sanitizer_syscall_pre_setpgid	include/sanitizer/netbsd_syscall_hooks.h	433;"	d
__sanitizer_syscall_pre_setpriority	include/sanitizer/linux_syscall_hooks.h	303;"	d
__sanitizer_syscall_pre_setpriority	include/sanitizer/netbsd_syscall_hooks.h	498;"	d
__sanitizer_syscall_pre_setregid	include/sanitizer/linux_syscall_hooks.h	105;"	d
__sanitizer_syscall_pre_setregid	include/sanitizer/netbsd_syscall_hooks.h	668;"	d
__sanitizer_syscall_pre_setregid16	include/sanitizer/linux_syscall_hooks.h	856;"	d
__sanitizer_syscall_pre_setregid32	include/sanitizer/linux_syscall_hooks.h	1910;"	d
__sanitizer_syscall_pre_setresgid	include/sanitizer/linux_syscall_hooks.h	127;"	d
__sanitizer_syscall_pre_setresgid16	include/sanitizer/linux_syscall_hooks.h	883;"	d
__sanitizer_syscall_pre_setresgid32	include/sanitizer/linux_syscall_hooks.h	1911;"	d
__sanitizer_syscall_pre_setresuid	include/sanitizer/linux_syscall_hooks.h	121;"	d
__sanitizer_syscall_pre_setresuid16	include/sanitizer/linux_syscall_hooks.h	872;"	d
__sanitizer_syscall_pre_setresuid32	include/sanitizer/linux_syscall_hooks.h	1912;"	d
__sanitizer_syscall_pre_setreuid	include/sanitizer/linux_syscall_hooks.h	113;"	d
__sanitizer_syscall_pre_setreuid	include/sanitizer/netbsd_syscall_hooks.h	663;"	d
__sanitizer_syscall_pre_setreuid16	include/sanitizer/linux_syscall_hooks.h	864;"	d
__sanitizer_syscall_pre_setreuid32	include/sanitizer/linux_syscall_hooks.h	1913;"	d
__sanitizer_syscall_pre_setrlimit	include/sanitizer/linux_syscall_hooks.h	1263;"	d
__sanitizer_syscall_pre_setrlimit	include/sanitizer/netbsd_syscall_hooks.h	995;"	d
__sanitizer_syscall_pre_setsid	include/sanitizer/linux_syscall_hooks.h	145;"	d
__sanitizer_syscall_pre_setsid	include/sanitizer/netbsd_syscall_hooks.h	771;"	d
__sanitizer_syscall_pre_setsockopt	include/sanitizer/linux_syscall_hooks.h	1061;"	d
__sanitizer_syscall_pre_setsockopt	include/sanitizer/netbsd_syscall_hooks.h	552;"	d
__sanitizer_syscall_pre_settimeofday	include/sanitizer/linux_syscall_hooks.h	36;"	d
__sanitizer_syscall_pre_setuid	include/sanitizer/linux_syscall_hooks.h	117;"	d
__sanitizer_syscall_pre_setuid	include/sanitizer/netbsd_syscall_hooks.h	152;"	d
__sanitizer_syscall_pre_setuid16	include/sanitizer/linux_syscall_hooks.h	868;"	d
__sanitizer_syscall_pre_setuid32	include/sanitizer/linux_syscall_hooks.h	1915;"	d
__sanitizer_syscall_pre_setxattr	include/sanitizer/linux_syscall_hooks.h	536;"	d
__sanitizer_syscall_pre_setxattr	include/sanitizer/netbsd_syscall_hooks.h	2010;"	d
__sanitizer_syscall_pre_sgetmask	include/sanitizer/linux_syscall_hooks.h	423;"	d
__sanitizer_syscall_pre_shmat	include/sanitizer/linux_syscall_hooks.h	1329;"	d
__sanitizer_syscall_pre_shmat	include/sanitizer/netbsd_syscall_hooks.h	1162;"	d
__sanitizer_syscall_pre_shmctl	include/sanitizer/linux_syscall_hooks.h	1344;"	d
__sanitizer_syscall_pre_shmdt	include/sanitizer/linux_syscall_hooks.h	1340;"	d
__sanitizer_syscall_pre_shmdt	include/sanitizer/netbsd_syscall_hooks.h	1174;"	d
__sanitizer_syscall_pre_shmget	include/sanitizer/linux_syscall_hooks.h	1335;"	d
__sanitizer_syscall_pre_shmget	include/sanitizer/netbsd_syscall_hooks.h	1178;"	d
__sanitizer_syscall_pre_shutdown	include/sanitizer/linux_syscall_hooks.h	313;"	d
__sanitizer_syscall_pre_shutdown	include/sanitizer/netbsd_syscall_hooks.h	706;"	d
__sanitizer_syscall_pre_sigaction	include/sanitizer/linux_syscall_hooks.h	1838;"	d
__sanitizer_syscall_pre_sigaltstack	include/sanitizer/linux_syscall_hooks.h	1916;"	d
__sanitizer_syscall_pre_signal	include/sanitizer/linux_syscall_hooks.h	431;"	d
__sanitizer_syscall_pre_signalfd	include/sanitizer/linux_syscall_hooks.h	1705;"	d
__sanitizer_syscall_pre_signalfd4	include/sanitizer/linux_syscall_hooks.h	1711;"	d
__sanitizer_syscall_pre_sigpending	include/sanitizer/linux_syscall_hooks.h	169;"	d
__sanitizer_syscall_pre_sigprocmask	include/sanitizer/linux_syscall_hooks.h	173;"	d
__sanitizer_syscall_pre_sigqueueinfo	include/sanitizer/netbsd_syscall_hooks.h	1257;"	d
__sanitizer_syscall_pre_sigreturn	include/sanitizer/linux_syscall_hooks.h	1917;"	d
__sanitizer_syscall_pre_sigsuspend	include/sanitizer/linux_syscall_hooks.h	1918;"	d
__sanitizer_syscall_pre_socket	include/sanitizer/linux_syscall_hooks.h	1165;"	d
__sanitizer_syscall_pre_socketcall	include/sanitizer/linux_syscall_hooks.h	1176;"	d
__sanitizer_syscall_pre_socketpair	include/sanitizer/linux_syscall_hooks.h	1170;"	d
__sanitizer_syscall_pre_socketpair	include/sanitizer/netbsd_syscall_hooks.h	710;"	d
__sanitizer_syscall_pre_splice	include/sanitizer/linux_syscall_hooks.h	1668;"	d
__sanitizer_syscall_pre_spu_create	include/sanitizer/linux_syscall_hooks.h	1560;"	d
__sanitizer_syscall_pre_spu_run	include/sanitizer/linux_syscall_hooks.h	1554;"	d
__sanitizer_syscall_pre_ssetmask	include/sanitizer/linux_syscall_hooks.h	427;"	d
__sanitizer_syscall_pre_stat	include/sanitizer/linux_syscall_hooks.h	478;"	d
__sanitizer_syscall_pre_stat64	include/sanitizer/linux_syscall_hooks.h	524;"	d
__sanitizer_syscall_pre_statfs	include/sanitizer/linux_syscall_hooks.h	482;"	d
__sanitizer_syscall_pre_statfs64	include/sanitizer/linux_syscall_hooks.h	486;"	d
__sanitizer_syscall_pre_statvfs1	include/sanitizer/netbsd_syscall_hooks.h	1851;"	d
__sanitizer_syscall_pre_stime	include/sanitizer/linux_syscall_hooks.h	28;"	d
__sanitizer_syscall_pre_stty	include/sanitizer/linux_syscall_hooks.h	1919;"	d
__sanitizer_syscall_pre_swapctl	include/sanitizer/netbsd_syscall_hooks.h	1396;"	d
__sanitizer_syscall_pre_swapoff	include/sanitizer/linux_syscall_hooks.h	1422;"	d
__sanitizer_syscall_pre_swapon	include/sanitizer/linux_syscall_hooks.h	1417;"	d
__sanitizer_syscall_pre_symlink	include/sanitizer/linux_syscall_hooks.h	690;"	d
__sanitizer_syscall_pre_symlink	include/sanitizer/netbsd_syscall_hooks.h	323;"	d
__sanitizer_syscall_pre_symlinkat	include/sanitizer/linux_syscall_hooks.h	1584;"	d
__sanitizer_syscall_pre_symlinkat	include/sanitizer/netbsd_syscall_hooks.h	2613;"	d
__sanitizer_syscall_pre_sync	include/sanitizer/linux_syscall_hooks.h	438;"	d
__sanitizer_syscall_pre_sync	include/sanitizer/netbsd_syscall_hooks.h	224;"	d
__sanitizer_syscall_pre_sync_file_range	include/sanitizer/linux_syscall_hooks.h	1920;"	d
__sanitizer_syscall_pre_syncfs	include/sanitizer/linux_syscall_hooks.h	1763;"	d
__sanitizer_syscall_pre_sysarch	include/sanitizer/netbsd_syscall_hooks.h	848;"	d
__sanitizer_syscall_pre_syscall	include/sanitizer/netbsd_syscall_hooks.h	31;"	d
__sanitizer_syscall_pre_sysctl	include/sanitizer/linux_syscall_hooks.h	1426;"	d
__sanitizer_syscall_pre_sysfs	include/sanitizer/linux_syscall_hooks.h	1434;"	d
__sanitizer_syscall_pre_sysinfo	include/sanitizer/linux_syscall_hooks.h	1430;"	d
__sanitizer_syscall_pre_syslog	include/sanitizer/linux_syscall_hooks.h	1439;"	d
__sanitizer_syscall_pre_tee	include/sanitizer/linux_syscall_hooks.h	1684;"	d
__sanitizer_syscall_pre_tgkill	include/sanitizer/linux_syscall_hooks.h	408;"	d
__sanitizer_syscall_pre_time	include/sanitizer/linux_syscall_hooks.h	24;"	d
__sanitizer_syscall_pre_timer_create	include/sanitizer/linux_syscall_hooks.h	189;"	d
__sanitizer_syscall_pre_timer_create	include/sanitizer/netbsd_syscall_hooks.h	1202;"	d
__sanitizer_syscall_pre_timer_delete	include/sanitizer/linux_syscall_hooks.h	217;"	d
__sanitizer_syscall_pre_timer_delete	include/sanitizer/netbsd_syscall_hooks.h	1208;"	d
__sanitizer_syscall_pre_timer_getoverrun	include/sanitizer/linux_syscall_hooks.h	203;"	d
__sanitizer_syscall_pre_timer_getoverrun	include/sanitizer/netbsd_syscall_hooks.h	1228;"	d
__sanitizer_syscall_pre_timer_gettime	include/sanitizer/linux_syscall_hooks.h	198;"	d
__sanitizer_syscall_pre_timer_settime	include/sanitizer/linux_syscall_hooks.h	207;"	d
__sanitizer_syscall_pre_timerfd_create	include/sanitizer/linux_syscall_hooks.h	1718;"	d
__sanitizer_syscall_pre_timerfd_gettime	include/sanitizer/linux_syscall_hooks.h	1729;"	d
__sanitizer_syscall_pre_timerfd_settime	include/sanitizer/linux_syscall_hooks.h	1723;"	d
__sanitizer_syscall_pre_times	include/sanitizer/linux_syscall_hooks.h	44;"	d
__sanitizer_syscall_pre_tkill	include/sanitizer/linux_syscall_hooks.h	413;"	d
__sanitizer_syscall_pre_truncate	include/sanitizer/linux_syscall_hooks.h	470;"	d
__sanitizer_syscall_pre_truncate	include/sanitizer/netbsd_syscall_hooks.h	1037;"	d
__sanitizer_syscall_pre_truncate64	include/sanitizer/linux_syscall_hooks.h	1922;"	d
__sanitizer_syscall_pre_tuxcall	include/sanitizer/linux_syscall_hooks.h	1923;"	d
__sanitizer_syscall_pre_ugetrlimit	include/sanitizer/linux_syscall_hooks.h	1924;"	d
__sanitizer_syscall_pre_ulimit	include/sanitizer/linux_syscall_hooks.h	1925;"	d
__sanitizer_syscall_pre_umask	include/sanitizer/linux_syscall_hooks.h	1278;"	d
__sanitizer_syscall_pre_umask	include/sanitizer/netbsd_syscall_hooks.h	340;"	d
__sanitizer_syscall_pre_umount	include/sanitizer/linux_syscall_hooks.h	462;"	d
__sanitizer_syscall_pre_umount2	include/sanitizer/linux_syscall_hooks.h	1926;"	d
__sanitizer_syscall_pre_uname	include/sanitizer/linux_syscall_hooks.h	1246;"	d
__sanitizer_syscall_pre_undelete	include/sanitizer/netbsd_syscall_hooks.h	1068;"	d
__sanitizer_syscall_pre_unlink	include/sanitizer/linux_syscall_hooks.h	694;"	d
__sanitizer_syscall_pre_unlink	include/sanitizer/netbsd_syscall_hooks.h	91;"	d
__sanitizer_syscall_pre_unlinkat	include/sanitizer/linux_syscall_hooks.h	1578;"	d
__sanitizer_syscall_pre_unlinkat	include/sanitizer/netbsd_syscall_hooks.h	2619;"	d
__sanitizer_syscall_pre_unmount	include/sanitizer/netbsd_syscall_hooks.h	147;"	d
__sanitizer_syscall_pre_unshare	include/sanitizer/linux_syscall_hooks.h	1664;"	d
__sanitizer_syscall_pre_uselib	include/sanitizer/linux_syscall_hooks.h	1444;"	d
__sanitizer_syscall_pre_ustat	include/sanitizer/linux_syscall_hooks.h	520;"	d
__sanitizer_syscall_pre_utime	include/sanitizer/linux_syscall_hooks.h	930;"	d
__sanitizer_syscall_pre_utimensat	include/sanitizer/linux_syscall_hooks.h	1658;"	d
__sanitizer_syscall_pre_utimensat	include/sanitizer/netbsd_syscall_hooks.h	2591;"	d
__sanitizer_syscall_pre_utimes	include/sanitizer/linux_syscall_hooks.h	934;"	d
__sanitizer_syscall_pre_utrace	include/sanitizer/netbsd_syscall_hooks.h	1599;"	d
__sanitizer_syscall_pre_uuidgen	include/sanitizer/netbsd_syscall_hooks.h	1840;"	d
__sanitizer_syscall_pre_vadvise	include/sanitizer/netbsd_syscall_hooks.h	390;"	d
__sanitizer_syscall_pre_vfork	include/sanitizer/linux_syscall_hooks.h	1834;"	d
__sanitizer_syscall_pre_vfork	include/sanitizer/netbsd_syscall_hooks.h	373;"	d
__sanitizer_syscall_pre_vhangup	include/sanitizer/linux_syscall_hooks.h	819;"	d
__sanitizer_syscall_pre_vm86	include/sanitizer/linux_syscall_hooks.h	1927;"	d
__sanitizer_syscall_pre_vm86old	include/sanitizer/linux_syscall_hooks.h	1928;"	d
__sanitizer_syscall_pre_vmsplice	include/sanitizer/linux_syscall_hooks.h	1678;"	d
__sanitizer_syscall_pre_vserver	include/sanitizer/linux_syscall_hooks.h	1929;"	d
__sanitizer_syscall_pre_wait4	include/sanitizer/linux_syscall_hooks.h	344;"	d
__sanitizer_syscall_pre_wait6	include/sanitizer/netbsd_syscall_hooks.h	2693;"	d
__sanitizer_syscall_pre_waitid	include/sanitizer/linux_syscall_hooks.h	350;"	d
__sanitizer_syscall_pre_waitpid	include/sanitizer/linux_syscall_hooks.h	357;"	d
__sanitizer_syscall_pre_write	include/sanitizer/linux_syscall_hooks.h	963;"	d
__sanitizer_syscall_pre_write	include/sanitizer/netbsd_syscall_hooks.h	56;"	d
__sanitizer_syscall_pre_writev	include/sanitizer/linux_syscall_hooks.h	968;"	d
__sanitizer_syscall_pre_writev	include/sanitizer/netbsd_syscall_hooks.h	631;"	d
__sanitizer_task_vm_info	lib/sanitizer_common/sanitizer_mac.cc	/^struct __sanitizer_task_vm_info {$/;"	s	namespace:__sanitizer	file:
__sanitizer_thread_create_hook	lib/asan/asan_fuchsia.cc	/^void __sanitizer_thread_create_hook(void *hook, thrd_t thread, int error) {$/;"	f
__sanitizer_thread_create_hook	lib/asan/asan_rtems.cc	/^void __sanitizer_thread_create_hook(void *handle, uptr thread, int status) {$/;"	f
__sanitizer_thread_exit_hook	lib/asan/asan_fuchsia.cc	/^void __sanitizer_thread_exit_hook(void *hook, thrd_t self) {$/;"	f
__sanitizer_thread_exit_hook	lib/asan/asan_rtems.cc	/^void __sanitizer_thread_exit_hook(void *handle, uptr self) {$/;"	f
__sanitizer_thread_start_hook	lib/asan/asan_fuchsia.cc	/^void __sanitizer_thread_start_hook(void *hook, thrd_t self) {$/;"	f
__sanitizer_thread_start_hook	lib/asan/asan_rtems.cc	/^void __sanitizer_thread_start_hook(void *handle, uptr self) {$/;"	f
__sanitizer_time_t	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^typedef long long __sanitizer_time_t;$/;"	t	namespace:__sanitizer
__sanitizer_time_t	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^typedef long long __sanitizer_time_t;$/;"	t	namespace:__sanitizer
__sanitizer_time_t	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  typedef long __sanitizer_time_t;$/;"	t	namespace:__sanitizer
__sanitizer_time_t	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  typedef long long __sanitizer_time_t;$/;"	t	namespace:__sanitizer
__sanitizer_time_t	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^typedef long __sanitizer_time_t;$/;"	t	namespace:__sanitizer
__sanitizer_timeb	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_timeb {$/;"	s	namespace:__sanitizer
__sanitizer_timeb	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  struct __sanitizer_timeb {$/;"	s	namespace:__sanitizer
__sanitizer_timeb	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_timeb {$/;"	s	namespace:__sanitizer
__sanitizer_timespec	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_timespec {$/;"	s	namespace:__sanitizer
__sanitizer_timeval	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_timeval {$/;"	s	namespace:__sanitizer
__sanitizer_timeval	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^struct __sanitizer_timeval {$/;"	s	namespace:__sanitizer
__sanitizer_timeval	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  struct __sanitizer_timeval {$/;"	s	namespace:__sanitizer
__sanitizer_timeval	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_timeval {$/;"	s	namespace:__sanitizer
__sanitizer_tm	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_tm {$/;"	s	namespace:__sanitizer
__sanitizer_tm	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^struct __sanitizer_tm {$/;"	s	namespace:__sanitizer
__sanitizer_tm	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  struct __sanitizer_tm {$/;"	s	namespace:__sanitizer
__sanitizer_tm	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_tm {$/;"	s	namespace:__sanitizer
__sanitizer_ttyent	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_ttyent {$/;"	s	namespace:__sanitizer
__sanitizer_unaligned_load16	lib/asan/asan_poisoning.cc	/^u16 __sanitizer_unaligned_load16(const uu16 *p) {$/;"	f
__sanitizer_unaligned_load16	lib/hwasan/hwasan.cc	/^u16 __sanitizer_unaligned_load16(const uu16 *p) {$/;"	f
__sanitizer_unaligned_load16	lib/msan/msan.cc	/^u16 __sanitizer_unaligned_load16(const uu16 *p) {$/;"	f
__sanitizer_unaligned_load16	lib/tsan/rtl/tsan_interface.cc	/^u16 __sanitizer_unaligned_load16(const uu16 *addr) {$/;"	f
__sanitizer_unaligned_load32	lib/asan/asan_poisoning.cc	/^u32 __sanitizer_unaligned_load32(const uu32 *p) {$/;"	f
__sanitizer_unaligned_load32	lib/hwasan/hwasan.cc	/^u32 __sanitizer_unaligned_load32(const uu32 *p) {$/;"	f
__sanitizer_unaligned_load32	lib/msan/msan.cc	/^u32 __sanitizer_unaligned_load32(const uu32 *p) {$/;"	f
__sanitizer_unaligned_load32	lib/tsan/rtl/tsan_interface.cc	/^u32 __sanitizer_unaligned_load32(const uu32 *addr) {$/;"	f
__sanitizer_unaligned_load64	lib/asan/asan_poisoning.cc	/^u64 __sanitizer_unaligned_load64(const uu64 *p) {$/;"	f
__sanitizer_unaligned_load64	lib/hwasan/hwasan.cc	/^u64 __sanitizer_unaligned_load64(const uu64 *p) {$/;"	f
__sanitizer_unaligned_load64	lib/msan/msan.cc	/^u64 __sanitizer_unaligned_load64(const uu64 *p) {$/;"	f
__sanitizer_unaligned_load64	lib/tsan/rtl/tsan_interface.cc	/^u64 __sanitizer_unaligned_load64(const uu64 *addr) {$/;"	f
__sanitizer_unaligned_store16	lib/asan/asan_poisoning.cc	/^void __sanitizer_unaligned_store16(uu16 *p, u16 x) {$/;"	f
__sanitizer_unaligned_store16	lib/hwasan/hwasan.cc	/^void __sanitizer_unaligned_store16(uu16 *p, u16 x) {$/;"	f
__sanitizer_unaligned_store16	lib/msan/msan.cc	/^void __sanitizer_unaligned_store16(uu16 *p, u16 x) {$/;"	f
__sanitizer_unaligned_store16	lib/tsan/rtl/tsan_interface.cc	/^void __sanitizer_unaligned_store16(uu16 *addr, u16 v) {$/;"	f
__sanitizer_unaligned_store32	lib/asan/asan_poisoning.cc	/^void __sanitizer_unaligned_store32(uu32 *p, u32 x) {$/;"	f
__sanitizer_unaligned_store32	lib/hwasan/hwasan.cc	/^void __sanitizer_unaligned_store32(uu32 *p, u32 x) {$/;"	f
__sanitizer_unaligned_store32	lib/msan/msan.cc	/^void __sanitizer_unaligned_store32(uu32 *p, u32 x) {$/;"	f
__sanitizer_unaligned_store32	lib/tsan/rtl/tsan_interface.cc	/^void __sanitizer_unaligned_store32(uu32 *addr, u32 v) {$/;"	f
__sanitizer_unaligned_store64	lib/asan/asan_poisoning.cc	/^void __sanitizer_unaligned_store64(uu64 *p, u64 x) {$/;"	f
__sanitizer_unaligned_store64	lib/hwasan/hwasan.cc	/^void __sanitizer_unaligned_store64(uu64 *p, u64 x) {$/;"	f
__sanitizer_unaligned_store64	lib/msan/msan.cc	/^void __sanitizer_unaligned_store64(uu64 *p, u64 x) {$/;"	f
__sanitizer_unaligned_store64	lib/tsan/rtl/tsan_interface.cc	/^void __sanitizer_unaligned_store64(uu64 *addr, u64 v) {$/;"	f
__sanitizer_verify_contiguous_container	lib/asan/asan_poisoning.cc	/^int __sanitizer_verify_contiguous_container(const void *beg_p,$/;"	f
__sanitizer_weak_hook_memcmp	lib/fuzzer/FuzzerTracePC.cpp	/^void __sanitizer_weak_hook_memcmp(void *caller_pc, const void *s1,$/;"	f
__sanitizer_weak_hook_memcmp	test/sanitizer_common/TestCases/Posix/weak_hook_test.cc	/^void __sanitizer_weak_hook_memcmp(void *called_pc, const void *s1,$/;"	f
__sanitizer_weak_hook_memmem	lib/fuzzer/FuzzerTracePC.cpp	/^void __sanitizer_weak_hook_memmem(void *called_pc, const void *s1, size_t len1,$/;"	f
__sanitizer_weak_hook_memmem	test/sanitizer_common/TestCases/Posix/weak_hook_test.cc	/^void __sanitizer_weak_hook_memmem(void *called_pc, const void *s1, size_t len1,$/;"	f
__sanitizer_weak_hook_strcasecmp	lib/fuzzer/FuzzerTracePC.cpp	/^void __sanitizer_weak_hook_strcasecmp(void *called_pc, const char *s1,$/;"	f
__sanitizer_weak_hook_strcasecmp	test/sanitizer_common/TestCases/Posix/weak_hook_test.cc	/^void __sanitizer_weak_hook_strcasecmp(void *called_pc, const char *s1,$/;"	f
__sanitizer_weak_hook_strcasestr	lib/fuzzer/FuzzerTracePC.cpp	/^void __sanitizer_weak_hook_strcasestr(void *called_pc, const char *s1,$/;"	f
__sanitizer_weak_hook_strcasestr	test/sanitizer_common/TestCases/Posix/weak_hook_test.cc	/^void __sanitizer_weak_hook_strcasestr(void *called_pc, const char *s1,$/;"	f
__sanitizer_weak_hook_strcmp	lib/fuzzer/FuzzerTracePC.cpp	/^void __sanitizer_weak_hook_strcmp(void *caller_pc, const char *s1,$/;"	f
__sanitizer_weak_hook_strcmp	test/sanitizer_common/TestCases/Posix/weak_hook_test.cc	/^void __sanitizer_weak_hook_strcmp(void *called_pc, const char *s1,$/;"	f
__sanitizer_weak_hook_strncasecmp	lib/fuzzer/FuzzerTracePC.cpp	/^void __sanitizer_weak_hook_strncasecmp(void *called_pc, const char *s1,$/;"	f
__sanitizer_weak_hook_strncasecmp	test/sanitizer_common/TestCases/Posix/weak_hook_test.cc	/^void __sanitizer_weak_hook_strncasecmp(void *called_pc, const char *s1,$/;"	f
__sanitizer_weak_hook_strncmp	lib/fuzzer/FuzzerTracePC.cpp	/^void __sanitizer_weak_hook_strncmp(void *caller_pc, const char *s1,$/;"	f
__sanitizer_weak_hook_strncmp	test/sanitizer_common/TestCases/Posix/weak_hook_test.cc	/^void __sanitizer_weak_hook_strncmp(void *called_pc, const char *s1,$/;"	f
__sanitizer_weak_hook_strstr	lib/fuzzer/FuzzerTracePC.cpp	/^void __sanitizer_weak_hook_strstr(void *called_pc, const char *s1,$/;"	f
__sanitizer_weak_hook_strstr	test/sanitizer_common/TestCases/Posix/weak_hook_test.cc	/^void __sanitizer_weak_hook_strstr(void *called_pc, const char *s1,$/;"	f
__sanitizer_wordexp_t	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_wordexp_t {$/;"	s	namespace:__sanitizer
__sanitizer_wordexp_t	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  struct __sanitizer_wordexp_t {$/;"	s	namespace:__sanitizer
__sanitizer_wordexp_t	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_wordexp_t {$/;"	s	namespace:__sanitizer
__scudo	lib/sanitizer_common/sanitizer_internal_defs.h	/^namespace __scudo { using namespace __sanitizer; }  \/\/ NOLINT$/;"	n
__scudo	lib/scudo/scudo_allocator.cpp	/^namespace __scudo {$/;"	n	file:
__scudo	lib/scudo/scudo_allocator.h	/^namespace __scudo {$/;"	n
__scudo	lib/scudo/scudo_crc32.cpp	/^namespace __scudo {$/;"	n	file:
__scudo	lib/scudo/scudo_crc32.h	/^namespace __scudo {$/;"	n
__scudo	lib/scudo/scudo_errors.cpp	/^namespace __scudo {$/;"	n	file:
__scudo	lib/scudo/scudo_errors.h	/^namespace __scudo {$/;"	n
__scudo	lib/scudo/scudo_flags.cpp	/^namespace __scudo {$/;"	n	file:
__scudo	lib/scudo/scudo_flags.h	/^namespace __scudo {$/;"	n
__scudo	lib/scudo/scudo_platform.h	/^namespace __scudo {$/;"	n
__scudo	lib/scudo/scudo_tsd.h	/^namespace __scudo {$/;"	n
__scudo	lib/scudo/scudo_tsd_exclusive.cpp	/^namespace __scudo {$/;"	n	file:
__scudo	lib/scudo/scudo_tsd_shared.cpp	/^namespace __scudo {$/;"	n	file:
__scudo	lib/scudo/scudo_utils.cpp	/^namespace __scudo {$/;"	n	file:
__scudo	lib/scudo/scudo_utils.h	/^namespace __scudo {$/;"	n
__scudo_default_options	test/scudo/options.cpp	/^extern "C" const char* __scudo_default_options() {$/;"	f
__scudo_print_stats	lib/scudo/scudo_allocator.cpp	/^void __scudo_print_stats() {$/;"	f
__scudo_set_rss_limit	lib/scudo/scudo_allocator.cpp	/^void __scudo_set_rss_limit(uptr LimitMb, s32 HardLimit) {$/;"	f
__seq	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned __seq;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
__seq	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned short __seq;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
__setjmp$non_lazy_ptr	lib/tsan/rtl/tsan_rtl_aarch64.S	/^__setjmp$non_lazy_ptr:$/;"	l
__shadowcallstack_init	test/shadowcallstack/minimal_runtime.h	/^static void __shadowcallstack_init() {$/;"	f
__shm_atimensec	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  long __shm_atimensec;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
__shm_ctimensec	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  long __shm_ctimensec;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
__shm_dtimensec	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  long __shm_dtimensec;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
__si_class_type_info	lib/ubsan/ubsan_type_hash_itanium.cc	/^class __si_class_type_info : public __class_type_info {$/;"	c	namespace:__cxxabiv1	file:
__sigsetjmp	lib/tsan/rtl/tsan_rtl_mips64.S	/^__sigsetjmp:$/;"	l
__sigsetjmp	lib/tsan/rtl/tsan_rtl_ppc64.S	/^__sigsetjmp:$/;"	l
__spare__	lib/sanitizer_common/sanitizer_freebsd.h	/^  int __spare__[4];$/;"	m	struct:__sanitizer::__xucontext
__spin_lock	lib/sanitizer_common/sanitizer_atomic_clang_mips.h	/^static void __spin_lock(volatile int *lock) {$/;"	f	namespace:__sanitizer
__spin_unlock	lib/sanitizer_common/sanitizer_atomic_clang_mips.h	/^static void __spin_unlock(volatile int *lock) { __sync_lock_release(lock); }$/;"	f	namespace:__sanitizer
__start___sancov_guards	lib/sanitizer_common/sancov_begin.S	/^__start___sancov_guards:$/;"	l
__start___sancov_guards	lib/sanitizer_common/sanitizer_coverage_win_sections.cc	/^__declspec(allocate(".SCOV$A")) uint32_t __start___sancov_guards = 0;$/;"	v
__start_dll_thunk	lib/sanitizer_common/sanitizer_win_dll_thunk.cc	/^__declspec(allocate(".DLLTH$A")) DllThunkCB __start_dll_thunk;$/;"	v
__start_weak_list	lib/sanitizer_common/sanitizer_win_weak_interception.cc	/^__declspec(allocate(".WEAK$A")) InterceptCB __start_weak_list;$/;"	v
__stoi64	lib/builtins/mingw_fixfloat.c	/^COMPILER_RT_ABI di_int __stoi64(float a) { return __fixsfdi(a); }$/;"	f
__stop___sancov_guards	lib/sanitizer_common/sancov_end.S	/^__stop___sancov_guards:$/;"	l
__stop___sancov_guards	lib/sanitizer_common/sanitizer_coverage_win_sections.cc	/^__declspec(allocate(".SCOV$Z")) uint32_t __stop___sancov_guards = 0;$/;"	v
__stop_dll_thunk	lib/sanitizer_common/sanitizer_win_dll_thunk.cc	/^__declspec(allocate(".DLLTH$Z")) DllThunkCB __stop_dll_thunk;$/;"	v
__stop_weak_list	lib/sanitizer_common/sanitizer_win_weak_interception.cc	/^__declspec(allocate(".WEAK$Z")) InterceptCB __stop_weak_list;$/;"	v
__stou64	lib/builtins/mingw_fixfloat.c	/^COMPILER_RT_ABI du_int __stou64(float a) { return __fixunssfdi(a); }$/;"	f
__subdf3	lib/builtins/subdf3.c	/^AEABI_RTABI fp_t __aeabi_dsub(fp_t a, fp_t b) COMPILER_RT_ALIAS(__subdf3);$/;"	v
__subdf3	lib/builtins/subdf3.c	/^__subdf3(fp_t a, fp_t b) {$/;"	f
__subsf3	lib/builtins/subsf3.c	/^AEABI_RTABI fp_t __aeabi_fsub(fp_t a, fp_t b) COMPILER_RT_ALIAS(__subsf3);$/;"	v
__subsf3	lib/builtins/subsf3.c	/^__subsf3(fp_t a, fp_t b) {$/;"	f
__subtf3	lib/builtins/subtf3.c	/^__subtf3(fp_t a, fp_t b) {$/;"	f
__subvdi3	lib/builtins/subvdi3.c	/^__subvdi3(di_int a, di_int b)$/;"	f
__subvsi3	lib/builtins/subvsi3.c	/^__subvsi3(si_int a, si_int b)$/;"	f
__subvti3	lib/builtins/subvti3.c	/^__subvti3(ti_int a, ti_int b)$/;"	f
__sysctl_args	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^CHECK_TYPE_SIZE(__sysctl_args);$/;"	v
__trampoline_setup	lib/builtins/trampoline_setup.c	/^__trampoline_setup(uint32_t* trampOnStack, int trampSizeAllocated, $/;"	f
__truncdfhf2	lib/builtins/truncdfhf2.c	/^AEABI_RTABI uint16_t __aeabi_d2h(double a) COMPILER_RT_ALIAS(__truncdfhf2);$/;"	v
__truncdfhf2	lib/builtins/truncdfhf2.c	/^COMPILER_RT_ABI uint16_t __truncdfhf2(double a) {$/;"	f
__truncdfsf2	lib/builtins/truncdfsf2.c	/^AEABI_RTABI float __aeabi_d2f(double a) COMPILER_RT_ALIAS(__truncdfsf2);$/;"	v
__truncdfsf2	lib/builtins/truncdfsf2.c	/^COMPILER_RT_ABI float __truncdfsf2(double a) {$/;"	f
__truncsfhf2	lib/builtins/truncsfhf2.c	/^AEABI_RTABI uint16_t __aeabi_f2h(float a) COMPILER_RT_ALIAS(__truncsfhf2);$/;"	v
__truncsfhf2	lib/builtins/truncsfhf2.c	/^COMPILER_RT_ABI NOINLINE uint16_t __truncsfhf2(float a) {$/;"	f
__trunctfdf2	lib/builtins/trunctfdf2.c	/^COMPILER_RT_ABI double __trunctfdf2(long double a) {$/;"	f
__trunctfsf2	lib/builtins/trunctfsf2.c	/^COMPILER_RT_ABI float __trunctfsf2(long double a) {$/;"	f
__tsan	lib/sanitizer_common/sanitizer_internal_defs.h	/^namespace __tsan  { using namespace __sanitizer; }  \/\/ NOLINT$/;"	n
__tsan	lib/tsan/go/tsan_go.cc	/^namespace __tsan {$/;"	n	file:
__tsan	lib/tsan/rtl/tsan_clock.cc	/^namespace __tsan {$/;"	n	file:
__tsan	lib/tsan/rtl/tsan_clock.h	/^namespace __tsan {$/;"	n
__tsan	lib/tsan/rtl/tsan_defs.h	/^namespace __tsan {$/;"	n
__tsan	lib/tsan/rtl/tsan_dense_alloc.h	/^namespace __tsan {$/;"	n
__tsan	lib/tsan/rtl/tsan_external.cc	/^namespace __tsan {$/;"	n	file:
__tsan	lib/tsan/rtl/tsan_fd.cc	/^namespace __tsan {$/;"	n	file:
__tsan	lib/tsan/rtl/tsan_fd.h	/^namespace __tsan {$/;"	n
__tsan	lib/tsan/rtl/tsan_flags.cc	/^namespace __tsan {$/;"	n	file:
__tsan	lib/tsan/rtl/tsan_flags.h	/^namespace __tsan {$/;"	n
__tsan	lib/tsan/rtl/tsan_ignoreset.cc	/^namespace __tsan {$/;"	n	file:
__tsan	lib/tsan/rtl/tsan_ignoreset.h	/^namespace __tsan {$/;"	n
__tsan	lib/tsan/rtl/tsan_interceptors.cc	/^namespace __tsan {$/;"	n	file:
__tsan	lib/tsan/rtl/tsan_interceptors.h	/^namespace __tsan {$/;"	n
__tsan	lib/tsan/rtl/tsan_interceptors_mac.cc	/^namespace __tsan {$/;"	n	file:
__tsan	lib/tsan/rtl/tsan_interface.h	/^namespace __tsan {$/;"	n
__tsan	lib/tsan/rtl/tsan_interface_ann.cc	/^namespace __tsan {$/;"	n	file:
__tsan	lib/tsan/rtl/tsan_interface_java.cc	/^namespace __tsan {$/;"	n	file:
__tsan	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^namespace __tsan {$/;"	n	file:
__tsan	lib/tsan/rtl/tsan_md5.cc	/^namespace __tsan {$/;"	n	file:
__tsan	lib/tsan/rtl/tsan_mman.cc	/^namespace __tsan {$/;"	n	file:
__tsan	lib/tsan/rtl/tsan_mman.h	/^namespace __tsan {$/;"	n
__tsan	lib/tsan/rtl/tsan_mutex.cc	/^namespace __tsan {$/;"	n	file:
__tsan	lib/tsan/rtl/tsan_mutex.h	/^namespace __tsan {$/;"	n
__tsan	lib/tsan/rtl/tsan_mutexset.cc	/^namespace __tsan {$/;"	n	file:
__tsan	lib/tsan/rtl/tsan_mutexset.h	/^namespace __tsan {$/;"	n
__tsan	lib/tsan/rtl/tsan_platform.h	/^namespace __tsan {$/;"	n
__tsan	lib/tsan/rtl/tsan_platform_linux.cc	/^namespace __tsan {$/;"	n	file:
__tsan	lib/tsan/rtl/tsan_platform_mac.cc	/^namespace __tsan {$/;"	n	file:
__tsan	lib/tsan/rtl/tsan_platform_posix.cc	/^namespace __tsan {$/;"	n	file:
__tsan	lib/tsan/rtl/tsan_platform_windows.cc	/^namespace __tsan {$/;"	n	file:
__tsan	lib/tsan/rtl/tsan_report.cc	/^namespace __tsan {$/;"	n	file:
__tsan	lib/tsan/rtl/tsan_report.h	/^namespace __tsan {$/;"	n
__tsan	lib/tsan/rtl/tsan_rtl.cc	/^namespace __tsan {$/;"	n	file:
__tsan	lib/tsan/rtl/tsan_rtl.h	/^namespace __tsan {$/;"	n
__tsan	lib/tsan/rtl/tsan_rtl_mutex.cc	/^namespace __tsan {$/;"	n	file:
__tsan	lib/tsan/rtl/tsan_rtl_proc.cc	/^namespace __tsan {$/;"	n	file:
__tsan	lib/tsan/rtl/tsan_rtl_report.cc	/^namespace __tsan {$/;"	n	file:
__tsan	lib/tsan/rtl/tsan_rtl_thread.cc	/^namespace __tsan {$/;"	n	file:
__tsan	lib/tsan/rtl/tsan_stack_trace.cc	/^namespace __tsan {$/;"	n	file:
__tsan	lib/tsan/rtl/tsan_stack_trace.h	/^namespace __tsan {$/;"	n
__tsan	lib/tsan/rtl/tsan_stat.cc	/^namespace __tsan {$/;"	n	file:
__tsan	lib/tsan/rtl/tsan_stat.h	/^namespace __tsan {$/;"	n
__tsan	lib/tsan/rtl/tsan_suppressions.cc	/^namespace __tsan {$/;"	n	file:
__tsan	lib/tsan/rtl/tsan_suppressions.h	/^namespace __tsan {$/;"	n
__tsan	lib/tsan/rtl/tsan_symbolize.cc	/^namespace __tsan {$/;"	n	file:
__tsan	lib/tsan/rtl/tsan_symbolize.h	/^namespace __tsan {$/;"	n
__tsan	lib/tsan/rtl/tsan_sync.cc	/^namespace __tsan {$/;"	n	file:
__tsan	lib/tsan/rtl/tsan_sync.h	/^namespace __tsan {$/;"	n
__tsan	lib/tsan/rtl/tsan_trace.h	/^namespace __tsan {$/;"	n
__tsan	lib/tsan/tests/rtl/tsan_mutex.cc	/^namespace __tsan {$/;"	n	file:
__tsan	lib/tsan/tests/rtl/tsan_string.cc	/^namespace __tsan {$/;"	n	file:
__tsan	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^namespace __tsan {$/;"	n	file:
__tsan	lib/tsan/tests/unit/tsan_clock_test.cc	/^namespace __tsan {$/;"	n	file:
__tsan	lib/tsan/tests/unit/tsan_dense_alloc_test.cc	/^namespace __tsan {$/;"	n	file:
__tsan	lib/tsan/tests/unit/tsan_flags_test.cc	/^namespace __tsan {$/;"	n	file:
__tsan	lib/tsan/tests/unit/tsan_mman_test.cc	/^namespace __tsan {$/;"	n	file:
__tsan	lib/tsan/tests/unit/tsan_mutex_test.cc	/^namespace __tsan {$/;"	n	file:
__tsan	lib/tsan/tests/unit/tsan_mutexset_test.cc	/^namespace __tsan {$/;"	n	file:
__tsan	lib/tsan/tests/unit/tsan_shadow_test.cc	/^namespace __tsan {$/;"	n	file:
__tsan	lib/tsan/tests/unit/tsan_stack_test.cc	/^namespace __tsan {$/;"	n	file:
__tsan	lib/tsan/tests/unit/tsan_sync_test.cc	/^namespace __tsan {$/;"	n	file:
__tsan	test/tsan/Linux/check_preinit.cc	/^namespace __tsan {$/;"	n	file:
__tsan_acquire	lib/tsan/go/tsan_go.cc	/^void __tsan_acquire(ThreadState *thr, void *addr) {$/;"	f
__tsan_acquire	lib/tsan/rtl/tsan_interface.cc	/^void __tsan_acquire(void *addr) {$/;"	f
__tsan_atomic128	include/sanitizer/tsan_interface_atomic.h	/^__extension__ typedef __int128 __tsan_atomic128;$/;"	t
__tsan_atomic128_compare_exchange_strong	lib/tsan/rtl/tsan_interface_atomic.cc	/^int __tsan_atomic128_compare_exchange_strong(volatile a128 *a, a128 *c, a128 v,$/;"	f
__tsan_atomic128_compare_exchange_val	lib/tsan/rtl/tsan_interface_atomic.cc	/^a128 __tsan_atomic128_compare_exchange_val(volatile a128 *a, a128 c, a128 v,$/;"	f
__tsan_atomic128_compare_exchange_weak	lib/tsan/rtl/tsan_interface_atomic.cc	/^int __tsan_atomic128_compare_exchange_weak(volatile a128 *a, a128 *c, a128 v,$/;"	f
__tsan_atomic128_exchange	lib/tsan/rtl/tsan_interface_atomic.cc	/^a128 __tsan_atomic128_exchange(volatile a128 *a, a128 v, morder mo) {$/;"	f
__tsan_atomic128_fetch_add	lib/tsan/rtl/tsan_interface_atomic.cc	/^a128 __tsan_atomic128_fetch_add(volatile a128 *a, a128 v, morder mo) {$/;"	f
__tsan_atomic128_fetch_and	lib/tsan/rtl/tsan_interface_atomic.cc	/^a128 __tsan_atomic128_fetch_and(volatile a128 *a, a128 v, morder mo) {$/;"	f
__tsan_atomic128_fetch_nand	lib/tsan/rtl/tsan_interface_atomic.cc	/^a128 __tsan_atomic128_fetch_nand(volatile a128 *a, a128 v, morder mo) {$/;"	f
__tsan_atomic128_fetch_or	lib/tsan/rtl/tsan_interface_atomic.cc	/^a128 __tsan_atomic128_fetch_or(volatile a128 *a, a128 v, morder mo) {$/;"	f
__tsan_atomic128_fetch_sub	lib/tsan/rtl/tsan_interface_atomic.cc	/^a128 __tsan_atomic128_fetch_sub(volatile a128 *a, a128 v, morder mo) {$/;"	f
__tsan_atomic128_fetch_xor	lib/tsan/rtl/tsan_interface_atomic.cc	/^a128 __tsan_atomic128_fetch_xor(volatile a128 *a, a128 v, morder mo) {$/;"	f
__tsan_atomic128_load	lib/tsan/rtl/tsan_interface_atomic.cc	/^a128 __tsan_atomic128_load(const volatile a128 *a, morder mo) {$/;"	f
__tsan_atomic128_store	lib/tsan/rtl/tsan_interface_atomic.cc	/^void __tsan_atomic128_store(volatile a128 *a, a128 v, morder mo) {$/;"	f
__tsan_atomic16	include/sanitizer/tsan_interface_atomic.h	/^typedef short    __tsan_atomic16;  \/\/ NOLINT$/;"	t
__tsan_atomic16_compare_exchange_strong	lib/tsan/rtl/tsan_interface_atomic.cc	/^int __tsan_atomic16_compare_exchange_strong(volatile a16 *a, a16 *c, a16 v,$/;"	f
__tsan_atomic16_compare_exchange_val	lib/tsan/rtl/tsan_interface_atomic.cc	/^a16 __tsan_atomic16_compare_exchange_val(volatile a16 *a, a16 c, a16 v,$/;"	f
__tsan_atomic16_compare_exchange_weak	lib/tsan/rtl/tsan_interface_atomic.cc	/^int __tsan_atomic16_compare_exchange_weak(volatile a16 *a, a16 *c, a16 v,$/;"	f
__tsan_atomic16_exchange	lib/tsan/rtl/tsan_interface_atomic.cc	/^a16 __tsan_atomic16_exchange(volatile a16 *a, a16 v, morder mo) {$/;"	f
__tsan_atomic16_fetch_add	lib/tsan/rtl/tsan_interface_atomic.cc	/^a16 __tsan_atomic16_fetch_add(volatile a16 *a, a16 v, morder mo) {$/;"	f
__tsan_atomic16_fetch_and	lib/tsan/rtl/tsan_interface_atomic.cc	/^a16 __tsan_atomic16_fetch_and(volatile a16 *a, a16 v, morder mo) {$/;"	f
__tsan_atomic16_fetch_nand	lib/tsan/rtl/tsan_interface_atomic.cc	/^a16 __tsan_atomic16_fetch_nand(volatile a16 *a, a16 v, morder mo) {$/;"	f
__tsan_atomic16_fetch_or	lib/tsan/rtl/tsan_interface_atomic.cc	/^a16 __tsan_atomic16_fetch_or(volatile a16 *a, a16 v, morder mo) {$/;"	f
__tsan_atomic16_fetch_sub	lib/tsan/rtl/tsan_interface_atomic.cc	/^a16 __tsan_atomic16_fetch_sub(volatile a16 *a, a16 v, morder mo) {$/;"	f
__tsan_atomic16_fetch_xor	lib/tsan/rtl/tsan_interface_atomic.cc	/^a16 __tsan_atomic16_fetch_xor(volatile a16 *a, a16 v, morder mo) {$/;"	f
__tsan_atomic16_load	lib/tsan/rtl/tsan_interface_atomic.cc	/^a16 __tsan_atomic16_load(const volatile a16 *a, morder mo) {$/;"	f
__tsan_atomic16_store	lib/tsan/rtl/tsan_interface_atomic.cc	/^void __tsan_atomic16_store(volatile a16 *a, a16 v, morder mo) {$/;"	f
__tsan_atomic32	include/sanitizer/tsan_interface_atomic.h	/^typedef int      __tsan_atomic32;$/;"	t
__tsan_atomic32_compare_exchange_strong	lib/tsan/rtl/tsan_interface_atomic.cc	/^int __tsan_atomic32_compare_exchange_strong(volatile a32 *a, a32 *c, a32 v,$/;"	f
__tsan_atomic32_compare_exchange_val	lib/tsan/rtl/tsan_interface_atomic.cc	/^a32 __tsan_atomic32_compare_exchange_val(volatile a32 *a, a32 c, a32 v,$/;"	f
__tsan_atomic32_compare_exchange_weak	lib/tsan/rtl/tsan_interface_atomic.cc	/^int __tsan_atomic32_compare_exchange_weak(volatile a32 *a, a32 *c, a32 v,$/;"	f
__tsan_atomic32_exchange	lib/tsan/rtl/tsan_interface_atomic.cc	/^a32 __tsan_atomic32_exchange(volatile a32 *a, a32 v, morder mo) {$/;"	f
__tsan_atomic32_fetch_add	lib/tsan/rtl/tsan_interface_atomic.cc	/^a32 __tsan_atomic32_fetch_add(volatile a32 *a, a32 v, morder mo) {$/;"	f
__tsan_atomic32_fetch_and	lib/tsan/rtl/tsan_interface_atomic.cc	/^a32 __tsan_atomic32_fetch_and(volatile a32 *a, a32 v, morder mo) {$/;"	f
__tsan_atomic32_fetch_nand	lib/tsan/rtl/tsan_interface_atomic.cc	/^a32 __tsan_atomic32_fetch_nand(volatile a32 *a, a32 v, morder mo) {$/;"	f
__tsan_atomic32_fetch_or	lib/tsan/rtl/tsan_interface_atomic.cc	/^a32 __tsan_atomic32_fetch_or(volatile a32 *a, a32 v, morder mo) {$/;"	f
__tsan_atomic32_fetch_sub	lib/tsan/rtl/tsan_interface_atomic.cc	/^a32 __tsan_atomic32_fetch_sub(volatile a32 *a, a32 v, morder mo) {$/;"	f
__tsan_atomic32_fetch_xor	lib/tsan/rtl/tsan_interface_atomic.cc	/^a32 __tsan_atomic32_fetch_xor(volatile a32 *a, a32 v, morder mo) {$/;"	f
__tsan_atomic32_load	lib/tsan/rtl/tsan_interface_atomic.cc	/^a32 __tsan_atomic32_load(const volatile a32 *a, morder mo) {$/;"	f
__tsan_atomic32_store	lib/tsan/rtl/tsan_interface_atomic.cc	/^void __tsan_atomic32_store(volatile a32 *a, a32 v, morder mo) {$/;"	f
__tsan_atomic64	include/sanitizer/tsan_interface_atomic.h	/^typedef long     __tsan_atomic64;  \/\/ NOLINT$/;"	t
__tsan_atomic64_compare_exchange_strong	lib/tsan/rtl/tsan_interface_atomic.cc	/^int __tsan_atomic64_compare_exchange_strong(volatile a64 *a, a64 *c, a64 v,$/;"	f
__tsan_atomic64_compare_exchange_val	lib/tsan/rtl/tsan_interface_atomic.cc	/^a64 __tsan_atomic64_compare_exchange_val(volatile a64 *a, a64 c, a64 v,$/;"	f
__tsan_atomic64_compare_exchange_weak	lib/tsan/rtl/tsan_interface_atomic.cc	/^int __tsan_atomic64_compare_exchange_weak(volatile a64 *a, a64 *c, a64 v,$/;"	f
__tsan_atomic64_exchange	lib/tsan/rtl/tsan_interface_atomic.cc	/^a64 __tsan_atomic64_exchange(volatile a64 *a, a64 v, morder mo) {$/;"	f
__tsan_atomic64_fetch_add	lib/tsan/rtl/tsan_interface_atomic.cc	/^a64 __tsan_atomic64_fetch_add(volatile a64 *a, a64 v, morder mo) {$/;"	f
__tsan_atomic64_fetch_and	lib/tsan/rtl/tsan_interface_atomic.cc	/^a64 __tsan_atomic64_fetch_and(volatile a64 *a, a64 v, morder mo) {$/;"	f
__tsan_atomic64_fetch_nand	lib/tsan/rtl/tsan_interface_atomic.cc	/^a64 __tsan_atomic64_fetch_nand(volatile a64 *a, a64 v, morder mo) {$/;"	f
__tsan_atomic64_fetch_or	lib/tsan/rtl/tsan_interface_atomic.cc	/^a64 __tsan_atomic64_fetch_or(volatile a64 *a, a64 v, morder mo) {$/;"	f
__tsan_atomic64_fetch_sub	lib/tsan/rtl/tsan_interface_atomic.cc	/^a64 __tsan_atomic64_fetch_sub(volatile a64 *a, a64 v, morder mo) {$/;"	f
__tsan_atomic64_fetch_xor	lib/tsan/rtl/tsan_interface_atomic.cc	/^a64 __tsan_atomic64_fetch_xor(volatile a64 *a, a64 v, morder mo) {$/;"	f
__tsan_atomic64_load	lib/tsan/rtl/tsan_interface_atomic.cc	/^a64 __tsan_atomic64_load(const volatile a64 *a, morder mo) {$/;"	f
__tsan_atomic64_store	lib/tsan/rtl/tsan_interface_atomic.cc	/^void __tsan_atomic64_store(volatile a64 *a, a64 v, morder mo) {$/;"	f
__tsan_atomic8	include/sanitizer/tsan_interface_atomic.h	/^typedef char     __tsan_atomic8;$/;"	t
__tsan_atomic8_compare_exchange_strong	lib/tsan/rtl/tsan_interface_atomic.cc	/^int __tsan_atomic8_compare_exchange_strong(volatile a8 *a, a8 *c, a8 v,$/;"	f
__tsan_atomic8_compare_exchange_val	lib/tsan/rtl/tsan_interface_atomic.cc	/^a8 __tsan_atomic8_compare_exchange_val(volatile a8 *a, a8 c, a8 v,$/;"	f
__tsan_atomic8_compare_exchange_weak	lib/tsan/rtl/tsan_interface_atomic.cc	/^int __tsan_atomic8_compare_exchange_weak(volatile a8 *a, a8 *c, a8 v,$/;"	f
__tsan_atomic8_exchange	lib/tsan/rtl/tsan_interface_atomic.cc	/^a8 __tsan_atomic8_exchange(volatile a8 *a, a8 v, morder mo) {$/;"	f
__tsan_atomic8_fetch_add	lib/tsan/rtl/tsan_interface_atomic.cc	/^a8 __tsan_atomic8_fetch_add(volatile a8 *a, a8 v, morder mo) {$/;"	f
__tsan_atomic8_fetch_and	lib/tsan/rtl/tsan_interface_atomic.cc	/^a8 __tsan_atomic8_fetch_and(volatile a8 *a, a8 v, morder mo) {$/;"	f
__tsan_atomic8_fetch_nand	lib/tsan/rtl/tsan_interface_atomic.cc	/^a8 __tsan_atomic8_fetch_nand(volatile a8 *a, a8 v, morder mo) {$/;"	f
__tsan_atomic8_fetch_or	lib/tsan/rtl/tsan_interface_atomic.cc	/^a8 __tsan_atomic8_fetch_or(volatile a8 *a, a8 v, morder mo) {$/;"	f
__tsan_atomic8_fetch_sub	lib/tsan/rtl/tsan_interface_atomic.cc	/^a8 __tsan_atomic8_fetch_sub(volatile a8 *a, a8 v, morder mo) {$/;"	f
__tsan_atomic8_fetch_xor	lib/tsan/rtl/tsan_interface_atomic.cc	/^a8 __tsan_atomic8_fetch_xor(volatile a8 *a, a8 v, morder mo) {$/;"	f
__tsan_atomic8_load	lib/tsan/rtl/tsan_interface_atomic.cc	/^a8 __tsan_atomic8_load(const volatile a8 *a, morder mo) {$/;"	f
__tsan_atomic8_store	lib/tsan/rtl/tsan_interface_atomic.cc	/^void __tsan_atomic8_store(volatile a8 *a, a8 v, morder mo) {$/;"	f
__tsan_atomic_signal_fence	lib/tsan/rtl/tsan_interface_atomic.cc	/^void __tsan_atomic_signal_fence(morder mo) {$/;"	f
__tsan_atomic_thread_fence	lib/tsan/rtl/tsan_interface_atomic.cc	/^void __tsan_atomic_thread_fence(morder mo) {$/;"	f
__tsan_default_options	lib/tsan/tests/rtl/tsan_test.cc	/^extern "C" const char* __tsan_default_options() {$/;"	f
__tsan_default_options	lib/tsan/tests/unit/tsan_flags_test.cc	/^extern "C" const char *__tsan_default_options() {$/;"	f	namespace:__tsan
__tsan_default_options	test/tsan/default_options.cc	/^extern "C" const char *__tsan_default_options() {$/;"	f
__tsan_default_suppressions	lib/tsan/rtl/tsan_suppressions.cc	/^const char *__tsan_default_suppressions() {$/;"	f
__tsan_external_assign_tag	lib/tsan/rtl/tsan_external.cc	/^void __tsan_external_assign_tag(void *addr, void *tag) {$/;"	f
__tsan_external_read	lib/tsan/rtl/tsan_external.cc	/^void __tsan_external_read(void *addr, void *caller_pc, void *tag) {$/;"	f
__tsan_external_register_header	lib/tsan/rtl/tsan_external.cc	/^void __tsan_external_register_header(void *tag, const char *header) {$/;"	f
__tsan_external_register_tag	lib/tsan/rtl/tsan_external.cc	/^void *__tsan_external_register_tag(const char *object_type) {$/;"	f
__tsan_external_write	lib/tsan/rtl/tsan_external.cc	/^void __tsan_external_write(void *addr, void *caller_pc, void *tag) {$/;"	f
__tsan_finalizer_goroutine	lib/tsan/go/tsan_go.cc	/^void __tsan_finalizer_goroutine(ThreadState *thr) {$/;"	f
__tsan_fini	lib/tsan/go/tsan_go.cc	/^void __tsan_fini() {$/;"	f
__tsan_flush_memory	lib/tsan/rtl/tsan_interface.cc	/^void __tsan_flush_memory() {$/;"	f
__tsan_free	lib/tsan/go/tsan_go.cc	/^void __tsan_free(uptr p, uptr sz) {$/;"	f
__tsan_func_enter	lib/tsan/go/tsan_go.cc	/^void __tsan_func_enter(ThreadState *thr, void *pc) {$/;"	f
__tsan_func_entry	lib/tsan/rtl/tsan_interface_inl.h	/^void __tsan_func_entry(void *pc) {$/;"	f
__tsan_func_exit	lib/tsan/go/tsan_go.cc	/^void __tsan_func_exit(ThreadState *thr) {$/;"	f
__tsan_func_exit	lib/tsan/rtl/tsan_interface_inl.h	/^void __tsan_func_exit() {$/;"	f
__tsan_get_alloc_stack	lib/tsan/rtl/tsan_debugging.cc	/^int __tsan_get_alloc_stack(uptr addr, uptr *trace, uptr size, int *thread_id,$/;"	f
__tsan_get_current_report	lib/tsan/rtl/tsan_debugging.cc	/^void *__tsan_get_current_report() {$/;"	f
__tsan_get_report_data	lib/tsan/rtl/tsan_debugging.cc	/^int __tsan_get_report_data(void *report, const char **description, int *count,$/;"	f
__tsan_get_report_loc	lib/tsan/rtl/tsan_debugging.cc	/^int __tsan_get_report_loc(void *report, uptr idx, const char **type,$/;"	f
__tsan_get_report_loc_object_type	lib/tsan/rtl/tsan_debugging.cc	/^int __tsan_get_report_loc_object_type(void *report, uptr idx,$/;"	f
__tsan_get_report_mop	lib/tsan/rtl/tsan_debugging.cc	/^int __tsan_get_report_mop(void *report, uptr idx, int *tid, void **addr,$/;"	f
__tsan_get_report_mutex	lib/tsan/rtl/tsan_debugging.cc	/^int __tsan_get_report_mutex(void *report, uptr idx, uptr *mutex_id, void **addr,$/;"	f
__tsan_get_report_stack	lib/tsan/rtl/tsan_debugging.cc	/^int __tsan_get_report_stack(void *report, uptr idx, void **trace,$/;"	f
__tsan_get_report_tag	lib/tsan/rtl/tsan_debugging.cc	/^int __tsan_get_report_tag(void *report, uptr *tag) {$/;"	f
__tsan_get_report_thread	lib/tsan/rtl/tsan_debugging.cc	/^int __tsan_get_report_thread(void *report, uptr idx, int *tid, tid_t *os_id,$/;"	f
__tsan_get_report_unique_tid	lib/tsan/rtl/tsan_debugging.cc	/^int __tsan_get_report_unique_tid(void *report, uptr idx, int *tid) {$/;"	f
__tsan_go_atomic32_compare_exchange	lib/tsan/rtl/tsan_interface_atomic.cc	/^void __tsan_go_atomic32_compare_exchange($/;"	f
__tsan_go_atomic32_exchange	lib/tsan/rtl/tsan_interface_atomic.cc	/^void __tsan_go_atomic32_exchange(ThreadState *thr, uptr cpc, uptr pc, u8 *a) {$/;"	f
__tsan_go_atomic32_fetch_add	lib/tsan/rtl/tsan_interface_atomic.cc	/^void __tsan_go_atomic32_fetch_add(ThreadState *thr, uptr cpc, uptr pc, u8 *a) {$/;"	f
__tsan_go_atomic32_load	lib/tsan/rtl/tsan_interface_atomic.cc	/^void __tsan_go_atomic32_load(ThreadState *thr, uptr cpc, uptr pc, u8 *a) {$/;"	f
__tsan_go_atomic32_store	lib/tsan/rtl/tsan_interface_atomic.cc	/^void __tsan_go_atomic32_store(ThreadState *thr, uptr cpc, uptr pc, u8 *a) {$/;"	f
__tsan_go_atomic64_compare_exchange	lib/tsan/rtl/tsan_interface_atomic.cc	/^void __tsan_go_atomic64_compare_exchange($/;"	f
__tsan_go_atomic64_exchange	lib/tsan/rtl/tsan_interface_atomic.cc	/^void __tsan_go_atomic64_exchange(ThreadState *thr, uptr cpc, uptr pc, u8 *a) {$/;"	f
__tsan_go_atomic64_fetch_add	lib/tsan/rtl/tsan_interface_atomic.cc	/^void __tsan_go_atomic64_fetch_add(ThreadState *thr, uptr cpc, uptr pc, u8 *a) {$/;"	f
__tsan_go_atomic64_load	lib/tsan/rtl/tsan_interface_atomic.cc	/^void __tsan_go_atomic64_load(ThreadState *thr, uptr cpc, uptr pc, u8 *a) {$/;"	f
__tsan_go_atomic64_store	lib/tsan/rtl/tsan_interface_atomic.cc	/^void __tsan_go_atomic64_store(ThreadState *thr, uptr cpc, uptr pc, u8 *a) {$/;"	f
__tsan_go_end	lib/tsan/go/tsan_go.cc	/^void __tsan_go_end(ThreadState *thr) {$/;"	f
__tsan_go_ignore_sync_begin	lib/tsan/go/tsan_go.cc	/^void __tsan_go_ignore_sync_begin(ThreadState *thr) {$/;"	f
__tsan_go_ignore_sync_end	lib/tsan/go/tsan_go.cc	/^void __tsan_go_ignore_sync_end(ThreadState *thr) {$/;"	f
__tsan_go_start	lib/tsan/go/tsan_go.cc	/^void __tsan_go_start(ThreadState *parent, ThreadState **pthr, void *pc) {$/;"	f
__tsan_ignore_thread_begin	lib/tsan/rtl/tsan_interface_inl.h	/^void __tsan_ignore_thread_begin() {$/;"	f
__tsan_ignore_thread_end	lib/tsan/rtl/tsan_interface_inl.h	/^void __tsan_ignore_thread_end() {$/;"	f
__tsan_init	lib/tsan/go/tsan_go.cc	/^void __tsan_init(ThreadState **thrp, Processor **procp,$/;"	f
__tsan_init	lib/tsan/rtl/tsan_interface.cc	/^void __tsan_init() {$/;"	f
__tsan_java_acquire	lib/tsan/rtl/tsan_interface_java.cc	/^void __tsan_java_acquire(jptr addr) {$/;"	f
__tsan_java_alloc	lib/tsan/rtl/tsan_interface_java.cc	/^void __tsan_java_alloc(jptr ptr, jptr size) {$/;"	f
__tsan_java_finalize	lib/tsan/rtl/tsan_interface_java.cc	/^void __tsan_java_finalize() {$/;"	f
__tsan_java_find	lib/tsan/rtl/tsan_interface_java.cc	/^jptr __tsan_java_find(jptr *from_ptr, jptr to) {$/;"	f
__tsan_java_fini	lib/tsan/rtl/tsan_interface_java.cc	/^int  __tsan_java_fini() {$/;"	f
__tsan_java_free	lib/tsan/rtl/tsan_interface_java.cc	/^void __tsan_java_free(jptr ptr, jptr size) {$/;"	f
__tsan_java_init	lib/tsan/rtl/tsan_interface_java.cc	/^void __tsan_java_init(jptr heap_begin, jptr heap_size) {$/;"	f
__tsan_java_move	lib/tsan/rtl/tsan_interface_java.cc	/^void __tsan_java_move(jptr src, jptr dst, jptr size) {$/;"	f
__tsan_java_mutex_lock	lib/tsan/rtl/tsan_interface_java.cc	/^void __tsan_java_mutex_lock(jptr addr) {$/;"	f
__tsan_java_mutex_lock_rec	lib/tsan/rtl/tsan_interface_java.cc	/^void __tsan_java_mutex_lock_rec(jptr addr, int rec) {$/;"	f
__tsan_java_mutex_read_lock	lib/tsan/rtl/tsan_interface_java.cc	/^void __tsan_java_mutex_read_lock(jptr addr) {$/;"	f
__tsan_java_mutex_read_unlock	lib/tsan/rtl/tsan_interface_java.cc	/^void __tsan_java_mutex_read_unlock(jptr addr) {$/;"	f
__tsan_java_mutex_unlock	lib/tsan/rtl/tsan_interface_java.cc	/^void __tsan_java_mutex_unlock(jptr addr) {$/;"	f
__tsan_java_mutex_unlock_rec	lib/tsan/rtl/tsan_interface_java.cc	/^int __tsan_java_mutex_unlock_rec(jptr addr) {$/;"	f
__tsan_java_release	lib/tsan/rtl/tsan_interface_java.cc	/^void __tsan_java_release(jptr addr) {$/;"	f
__tsan_java_release_store	lib/tsan/rtl/tsan_interface_java.cc	/^void __tsan_java_release_store(jptr addr) {$/;"	f
__tsan_locate_address	lib/tsan/rtl/tsan_debugging.cc	/^const char *__tsan_locate_address(uptr addr, char *name, uptr name_size,$/;"	f
__tsan_malloc	lib/tsan/go/tsan_go.cc	/^void __tsan_malloc(ThreadState *thr, uptr pc, uptr p, uptr sz) {$/;"	f
__tsan_map_shadow	lib/tsan/go/tsan_go.cc	/^void __tsan_map_shadow(uptr addr, uptr size) {$/;"	f
__tsan_memory_order	include/sanitizer/tsan_interface_atomic.h	/^} __tsan_memory_order;$/;"	t	typeref:enum:__anon128
__tsan_memory_order_acq_rel	include/sanitizer/tsan_interface_atomic.h	/^  __tsan_memory_order_acq_rel,$/;"	e	enum:__anon128
__tsan_memory_order_acquire	include/sanitizer/tsan_interface_atomic.h	/^  __tsan_memory_order_acquire,$/;"	e	enum:__anon128
__tsan_memory_order_consume	include/sanitizer/tsan_interface_atomic.h	/^  __tsan_memory_order_consume,$/;"	e	enum:__anon128
__tsan_memory_order_relaxed	include/sanitizer/tsan_interface_atomic.h	/^  __tsan_memory_order_relaxed,$/;"	e	enum:__anon128
__tsan_memory_order_release	include/sanitizer/tsan_interface_atomic.h	/^  __tsan_memory_order_release,$/;"	e	enum:__anon128
__tsan_memory_order_seq_cst	include/sanitizer/tsan_interface_atomic.h	/^  __tsan_memory_order_seq_cst$/;"	e	enum:__anon128
__tsan_mutex_after_lock	lib/tsan/go/tsan_go.cc	/^void __tsan_mutex_after_lock(ThreadState *thr, uptr addr, uptr write) {$/;"	f
__tsan_mutex_before_lock	lib/tsan/go/tsan_go.cc	/^void __tsan_mutex_before_lock(ThreadState *thr, uptr addr, uptr write) {$/;"	f
__tsan_mutex_before_unlock	lib/tsan/go/tsan_go.cc	/^void __tsan_mutex_before_unlock(ThreadState *thr, uptr addr, uptr write) {$/;"	f
__tsan_mutex_create	lib/tsan/rtl/tsan_interface_ann.cc	/^void __tsan_mutex_create(void *m, unsigned flagz) {$/;"	f
__tsan_mutex_destroy	lib/tsan/rtl/tsan_interface_ann.cc	/^void __tsan_mutex_destroy(void *m, unsigned flagz) {$/;"	f
__tsan_mutex_linker_init	include/sanitizer/tsan_interface.h	/^const unsigned __tsan_mutex_linker_init      = 1 << 0;$/;"	v
__tsan_mutex_not_static	include/sanitizer/tsan_interface.h	/^const unsigned __tsan_mutex_not_static       = 1 << 8;$/;"	v
__tsan_mutex_post_divert	lib/tsan/rtl/tsan_interface_ann.cc	/^void __tsan_mutex_post_divert(void *addr, unsigned flagz) {$/;"	f
__tsan_mutex_post_lock	lib/tsan/rtl/tsan_interface_ann.cc	/^void __tsan_mutex_post_lock(void *m, unsigned flagz, int rec) {$/;"	f
__tsan_mutex_post_signal	lib/tsan/rtl/tsan_interface_ann.cc	/^void __tsan_mutex_post_signal(void *addr, unsigned flagz) {$/;"	f
__tsan_mutex_post_unlock	lib/tsan/rtl/tsan_interface_ann.cc	/^void __tsan_mutex_post_unlock(void *m, unsigned flagz) {$/;"	f
__tsan_mutex_pre_divert	lib/tsan/rtl/tsan_interface_ann.cc	/^void __tsan_mutex_pre_divert(void *addr, unsigned flagz) {$/;"	f
__tsan_mutex_pre_lock	lib/tsan/rtl/tsan_interface_ann.cc	/^void __tsan_mutex_pre_lock(void *m, unsigned flagz) {$/;"	f
__tsan_mutex_pre_signal	lib/tsan/rtl/tsan_interface_ann.cc	/^void __tsan_mutex_pre_signal(void *addr, unsigned flagz) {$/;"	f
__tsan_mutex_pre_unlock	lib/tsan/rtl/tsan_interface_ann.cc	/^int __tsan_mutex_pre_unlock(void *m, unsigned flagz) {$/;"	f
__tsan_mutex_read_lock	include/sanitizer/tsan_interface.h	/^const unsigned __tsan_mutex_read_lock        = 1 << 3;$/;"	v
__tsan_mutex_read_reentrant	include/sanitizer/tsan_interface.h	/^const unsigned __tsan_mutex_read_reentrant   = 1 << 2;$/;"	v
__tsan_mutex_recursive_lock	include/sanitizer/tsan_interface.h	/^const unsigned __tsan_mutex_recursive_lock   = 1 << 6;$/;"	v
__tsan_mutex_recursive_unlock	include/sanitizer/tsan_interface.h	/^const unsigned __tsan_mutex_recursive_unlock = 1 << 7;$/;"	v
__tsan_mutex_try_lock	include/sanitizer/tsan_interface.h	/^const unsigned __tsan_mutex_try_lock         = 1 << 4;$/;"	v
__tsan_mutex_try_lock_failed	include/sanitizer/tsan_interface.h	/^const unsigned __tsan_mutex_try_lock_failed  = 1 << 5;$/;"	v
__tsan_mutex_write_reentrant	include/sanitizer/tsan_interface.h	/^const unsigned __tsan_mutex_write_reentrant  = 1 << 1;$/;"	v
__tsan_on_report	lib/tsan/rtl/tsan_rtl_report.cc	/^void __tsan_on_report(const ReportDesc *rep) {$/;"	f	namespace:__tsan
__tsan_on_report	test/tsan/Darwin/debug_external.cc	/^void __tsan_on_report(void *report) {$/;"	f
__tsan_on_report	test/tsan/Darwin/external-swift-debugging.cc	/^void __tsan_on_report(void *report) {$/;"	f
__tsan_on_report	test/tsan/debugging.cc	/^void __tsan_on_report(void *report) {$/;"	f
__tsan_on_thread_idle	lib/tsan/rtl/tsan_mman.cc	/^void __tsan_on_thread_idle() {$/;"	f
__tsan_pointer_chk_guard	lib/tsan/rtl/tsan_rtl_aarch64.S	/^__tsan_pointer_chk_guard:$/;"	l
__tsan_proc_create	lib/tsan/go/tsan_go.cc	/^void __tsan_proc_create(Processor **pproc) {$/;"	f
__tsan_proc_destroy	lib/tsan/go/tsan_go.cc	/^void __tsan_proc_destroy(Processor *proc) {$/;"	f
__tsan_read	lib/tsan/go/tsan_go.cc	/^void __tsan_read(ThreadState *thr, void *addr, void *pc) {$/;"	f
__tsan_read1	lib/tsan/rtl/tsan_interface_inl.h	/^void __tsan_read1(void *addr) {$/;"	f
__tsan_read16	lib/tsan/rtl/tsan_interface.cc	/^void __tsan_read16(void *addr) {$/;"	f
__tsan_read16_pc	lib/tsan/rtl/tsan_interface.cc	/^void __tsan_read16_pc(void *addr, void *pc) {$/;"	f
__tsan_read1_pc	lib/tsan/rtl/tsan_interface_inl.h	/^void __tsan_read1_pc(void *addr, void *pc) {$/;"	f
__tsan_read2	lib/tsan/rtl/tsan_interface_inl.h	/^void __tsan_read2(void *addr) {$/;"	f
__tsan_read2_pc	lib/tsan/rtl/tsan_interface_inl.h	/^void __tsan_read2_pc(void *addr, void *pc) {$/;"	f
__tsan_read4	lib/tsan/rtl/tsan_interface_inl.h	/^void __tsan_read4(void *addr) {$/;"	f
__tsan_read4_pc	lib/tsan/rtl/tsan_interface_inl.h	/^void __tsan_read4_pc(void *addr, void *pc) {$/;"	f
__tsan_read8	lib/tsan/rtl/tsan_interface_inl.h	/^void __tsan_read8(void *addr) {$/;"	f
__tsan_read8_pc	lib/tsan/rtl/tsan_interface_inl.h	/^void __tsan_read8_pc(void *addr, void *pc) {$/;"	f
__tsan_read_pc	lib/tsan/go/tsan_go.cc	/^void __tsan_read_pc(ThreadState *thr, void *addr, uptr callpc, uptr pc) {$/;"	f
__tsan_read_range	lib/tsan/go/tsan_go.cc	/^void __tsan_read_range(ThreadState *thr, void *addr, uptr size, uptr pc) {$/;"	f
__tsan_read_range	lib/tsan/rtl/tsan_interface_inl.h	/^void __tsan_read_range(void *addr, uptr size) {$/;"	f
__tsan_release	lib/tsan/go/tsan_go.cc	/^void __tsan_release(ThreadState *thr, void *addr) {$/;"	f
__tsan_release	lib/tsan/rtl/tsan_interface.cc	/^void __tsan_release(void *addr) {$/;"	f
__tsan_release_merge	lib/tsan/go/tsan_go.cc	/^void __tsan_release_merge(ThreadState *thr, void *addr) {$/;"	f
__tsan_report_count	lib/tsan/go/tsan_go.cc	/^void __tsan_report_count(u64 *pn) {$/;"	f
__tsan_report_race	lib/tsan/rtl/tsan_rtl.cc	/^extern "C" void __tsan_report_race() {$/;"	f	namespace:__tsan
__tsan_resume	lib/tsan/rtl/tsan_rtl.cc	/^extern "C" void __tsan_resume() {$/;"	f
__tsan_resumed	lib/tsan/rtl/tsan_rtl.cc	/^volatile int __tsan_resumed = 0;$/;"	v
__tsan_setjmp	lib/tsan/rtl/tsan_interceptors.cc	/^extern "C" void __tsan_setjmp(uptr sp, uptr mangled_sp) {$/;"	f
__tsan_symbolize_external	lib/tsan/rtl/tsan_symbolize.cc	/^bool __tsan_symbolize_external(uptr pc, char *func_buf, uptr func_siz,$/;"	f	namespace:__tsan
__tsan_symbolize_external	test/tsan/Linux/double_race.cc	/^extern "C" bool __tsan_symbolize_external(unsigned long pc, char *func_buf,$/;"	f
__tsan_symbolize_external	test/tsan/java_symbolization_legacy.cc	/^extern "C" bool __tsan_symbolize_external(jptr pc,$/;"	f
__tsan_symbolize_external_ex	lib/tsan/rtl/tsan_symbolize.cc	/^void __tsan_symbolize_external_ex(uptr pc,$/;"	f	namespace:__tsan
__tsan_symbolize_external_ex	test/tsan/java_symbolization.cc	/^extern "C" void __tsan_symbolize_external_ex($/;"	f
__tsan_testonly_barrier_init	lib/tsan/rtl/tsan_interceptors.cc	/^void __tsan_testonly_barrier_init(u64 *barrier, u32 count) {$/;"	f
__tsan_testonly_barrier_wait	lib/tsan/rtl/tsan_interceptors.cc	/^void __tsan_testonly_barrier_wait(u64 *barrier) {$/;"	f
__tsan_testonly_shadow_stack_current_size	lib/tsan/rtl/tsan_rtl.cc	/^uptr __tsan_testonly_shadow_stack_current_size() {$/;"	f	namespace:__tsan
__tsan_thread_start_func	lib/tsan/rtl/tsan_interceptors.cc	/^extern "C" void *__tsan_thread_start_func(void *arg) {$/;"	f
__tsan_trace_switch	lib/tsan/rtl/tsan_rtl.cc	/^extern "C" void __tsan_trace_switch() {$/;"	f	namespace:__tsan
__tsan_unaligned_read16	lib/tsan/rtl/tsan_interface.cc	/^void __tsan_unaligned_read16(const void *addr) {$/;"	f
__tsan_unaligned_read2	lib/tsan/rtl/tsan_interface.cc	/^void __tsan_unaligned_read2(const void *addr) {$/;"	f
__tsan_unaligned_read4	lib/tsan/rtl/tsan_interface.cc	/^void __tsan_unaligned_read4(const void *addr) {$/;"	f
__tsan_unaligned_read8	lib/tsan/rtl/tsan_interface.cc	/^void __tsan_unaligned_read8(const void *addr) {$/;"	f
__tsan_unaligned_write16	lib/tsan/rtl/tsan_interface.cc	/^void __tsan_unaligned_write16(void *addr) {$/;"	f
__tsan_unaligned_write2	lib/tsan/rtl/tsan_interface.cc	/^void __tsan_unaligned_write2(void *addr) {$/;"	f
__tsan_unaligned_write4	lib/tsan/rtl/tsan_interface.cc	/^void __tsan_unaligned_write4(void *addr) {$/;"	f
__tsan_unaligned_write8	lib/tsan/rtl/tsan_interface.cc	/^void __tsan_unaligned_write8(void *addr) {$/;"	f
__tsan_vptr_read	lib/tsan/rtl/tsan_interface_inl.h	/^void __tsan_vptr_read(void **vptr_p) {$/;"	f
__tsan_vptr_update	lib/tsan/rtl/tsan_interface_inl.h	/^void __tsan_vptr_update(void **vptr_p, void *new_val) {$/;"	f
__tsan_write	lib/tsan/go/tsan_go.cc	/^void __tsan_write(ThreadState *thr, void *addr, void *pc) {$/;"	f
__tsan_write1	lib/tsan/rtl/tsan_interface_inl.h	/^void __tsan_write1(void *addr) {$/;"	f
__tsan_write16	lib/tsan/rtl/tsan_interface.cc	/^void __tsan_write16(void *addr) {$/;"	f
__tsan_write16_pc	lib/tsan/rtl/tsan_interface.cc	/^void __tsan_write16_pc(void *addr, void *pc) {$/;"	f
__tsan_write1_pc	lib/tsan/rtl/tsan_interface_inl.h	/^void __tsan_write1_pc(void *addr, void *pc) {$/;"	f
__tsan_write2	lib/tsan/rtl/tsan_interface_inl.h	/^void __tsan_write2(void *addr) {$/;"	f
__tsan_write2_pc	lib/tsan/rtl/tsan_interface_inl.h	/^void __tsan_write2_pc(void *addr, void *pc) {$/;"	f
__tsan_write4	lib/tsan/rtl/tsan_interface_inl.h	/^void __tsan_write4(void *addr) {$/;"	f
__tsan_write4_pc	lib/tsan/rtl/tsan_interface_inl.h	/^void __tsan_write4_pc(void *addr, void *pc) {$/;"	f
__tsan_write8	lib/tsan/rtl/tsan_interface_inl.h	/^void __tsan_write8(void *addr) {$/;"	f
__tsan_write8_pc	lib/tsan/rtl/tsan_interface_inl.h	/^void __tsan_write8_pc(void *addr, void *pc) {$/;"	f
__tsan_write_pc	lib/tsan/go/tsan_go.cc	/^void __tsan_write_pc(ThreadState *thr, void *addr, uptr callpc, uptr pc) {$/;"	f
__tsan_write_range	lib/tsan/go/tsan_go.cc	/^void __tsan_write_range(ThreadState *thr, void *addr, uptr size, uptr pc) {$/;"	f
__tsan_write_range	lib/tsan/rtl/tsan_interface_inl.h	/^void __tsan_write_range(void *addr, uptr size) {$/;"	f
__type_name	lib/ubsan/ubsan_type_hash_itanium.cc	/^    const char *__type_name;$/;"	m	class:std::type_info	file:
__u64tod	lib/builtins/mingw_fixfloat.c	/^COMPILER_RT_ABI double __u64tod(du_int a) { return __floatundidf(a); }$/;"	f
__u64tos	lib/builtins/mingw_fixfloat.c	/^COMPILER_RT_ABI float __u64tos(du_int a) { return __floatundisf(a); }$/;"	f
__ubsan	lib/sanitizer_common/sanitizer_internal_defs.h	/^namespace __ubsan { using namespace __sanitizer; }  \/\/ NOLINT$/;"	n
__ubsan	lib/ubsan/ubsan_diag.h	/^namespace __ubsan {$/;"	n
__ubsan	lib/ubsan/ubsan_flags.cc	/^namespace __ubsan {$/;"	n	file:
__ubsan	lib/ubsan/ubsan_flags.h	/^namespace __ubsan {$/;"	n
__ubsan	lib/ubsan/ubsan_handlers.cc	/^namespace __ubsan {$/;"	n	file:
__ubsan	lib/ubsan/ubsan_handlers.h	/^namespace __ubsan {$/;"	n
__ubsan	lib/ubsan/ubsan_handlers_cxx.cc	/^namespace __ubsan {$/;"	n	file:
__ubsan	lib/ubsan/ubsan_handlers_cxx.h	/^namespace __ubsan {$/;"	n
__ubsan	lib/ubsan/ubsan_init.h	/^namespace __ubsan {$/;"	n
__ubsan	lib/ubsan/ubsan_init_standalone.cc	/^namespace __ubsan {$/;"	n	file:
__ubsan	lib/ubsan/ubsan_init_standalone_preinit.cc	/^namespace __ubsan {$/;"	n	file:
__ubsan	lib/ubsan/ubsan_monitor.h	/^namespace __ubsan {$/;"	n
__ubsan	lib/ubsan/ubsan_signals_standalone.cc	/^namespace __ubsan {$/;"	n	file:
__ubsan	lib/ubsan/ubsan_signals_standalone.h	/^namespace __ubsan {$/;"	n
__ubsan	lib/ubsan/ubsan_type_hash.h	/^namespace __ubsan {$/;"	n
__ubsan	lib/ubsan/ubsan_value.h	/^namespace __ubsan {$/;"	n
__ubsan_default_options	test/ubsan/TestCases/Misc/Linux/ubsan_options.cc	/^extern "C" const char *__ubsan_default_options() {$/;"	f
__ubsan_get_current_report_data	lib/ubsan/ubsan_monitor.cc	/^void __ubsan::__ubsan_get_current_report_data(const char **OutIssueKind,$/;"	f	class:__ubsan
__ubsan_handle_builtin_unreachable	lib/ubsan/ubsan_handlers.cc	/^void __ubsan::__ubsan_handle_builtin_unreachable(UnreachableData *Data) {$/;"	f	class:__ubsan
__ubsan_handle_cfi_bad_type	lib/ubsan/ubsan_handlers_cxx.cc	/^void __ubsan_handle_cfi_bad_type(CFICheckFailData *Data, ValueHandle Vtable,$/;"	f	namespace:__ubsan
__ubsan_handle_cfi_bad_type_default	lib/ubsan/ubsan_handlers.cc	/^extern "C" void __ubsan_handle_cfi_bad_type_default(CFICheckFailData *Data,$/;"	f	namespace:__ubsan
__ubsan_handle_cfi_check_fail	lib/ubsan/ubsan_handlers.cc	/^void __ubsan::__ubsan_handle_cfi_check_fail(CFICheckFailData *Data,$/;"	f	class:__ubsan
__ubsan_handle_cfi_check_fail_abort	lib/ubsan/ubsan_handlers.cc	/^void __ubsan::__ubsan_handle_cfi_check_fail_abort(CFICheckFailData *Data,$/;"	f	class:__ubsan
__ubsan_handle_divrem_overflow	lib/ubsan/ubsan_handlers.cc	/^void __ubsan::__ubsan_handle_divrem_overflow(OverflowData *Data,$/;"	f	class:__ubsan
__ubsan_handle_divrem_overflow_abort	lib/ubsan/ubsan_handlers.cc	/^void __ubsan::__ubsan_handle_divrem_overflow_abort(OverflowData *Data,$/;"	f	class:__ubsan
__ubsan_handle_dynamic_type_cache_miss	lib/ubsan/ubsan_handlers_cxx.cc	/^void __ubsan::__ubsan_handle_dynamic_type_cache_miss($/;"	f	class:__ubsan
__ubsan_handle_dynamic_type_cache_miss_abort	lib/ubsan/ubsan_handlers_cxx.cc	/^void __ubsan::__ubsan_handle_dynamic_type_cache_miss_abort($/;"	f	class:__ubsan
__ubsan_handle_float_cast_overflow	lib/ubsan/ubsan_handlers.cc	/^void __ubsan::__ubsan_handle_float_cast_overflow(void *Data, ValueHandle From) {$/;"	f	class:__ubsan
__ubsan_handle_float_cast_overflow_abort	lib/ubsan/ubsan_handlers.cc	/^void __ubsan::__ubsan_handle_float_cast_overflow_abort(void *Data,$/;"	f	class:__ubsan
__ubsan_handle_function_type_mismatch	lib/ubsan/ubsan_handlers.cc	/^__ubsan::__ubsan_handle_function_type_mismatch(FunctionTypeMismatchData *Data,$/;"	f	class:__ubsan
__ubsan_handle_function_type_mismatch_abort	lib/ubsan/ubsan_handlers.cc	/^void __ubsan::__ubsan_handle_function_type_mismatch_abort($/;"	f	class:__ubsan
__ubsan_handle_implicit_conversion	lib/ubsan/ubsan_handlers.cc	/^void __ubsan::__ubsan_handle_implicit_conversion(ImplicitConversionData *Data,$/;"	f	class:__ubsan
__ubsan_handle_implicit_conversion_abort	lib/ubsan/ubsan_handlers.cc	/^void __ubsan::__ubsan_handle_implicit_conversion_abort($/;"	f	class:__ubsan
__ubsan_handle_invalid_builtin	lib/ubsan/ubsan_handlers.cc	/^void __ubsan::__ubsan_handle_invalid_builtin(InvalidBuiltinData *Data) {$/;"	f	class:__ubsan
__ubsan_handle_invalid_builtin_abort	lib/ubsan/ubsan_handlers.cc	/^void __ubsan::__ubsan_handle_invalid_builtin_abort(InvalidBuiltinData *Data) {$/;"	f	class:__ubsan
__ubsan_handle_load_invalid_value	lib/ubsan/ubsan_handlers.cc	/^void __ubsan::__ubsan_handle_load_invalid_value(InvalidValueData *Data,$/;"	f	class:__ubsan
__ubsan_handle_load_invalid_value_abort	lib/ubsan/ubsan_handlers.cc	/^void __ubsan::__ubsan_handle_load_invalid_value_abort(InvalidValueData *Data,$/;"	f	class:__ubsan
__ubsan_handle_missing_return	lib/ubsan/ubsan_handlers.cc	/^void __ubsan::__ubsan_handle_missing_return(UnreachableData *Data) {$/;"	f	class:__ubsan
__ubsan_handle_negate_overflow	lib/ubsan/ubsan_handlers.cc	/^void __ubsan::__ubsan_handle_negate_overflow(OverflowData *Data,$/;"	f	class:__ubsan
__ubsan_handle_negate_overflow_abort	lib/ubsan/ubsan_handlers.cc	/^void __ubsan::__ubsan_handle_negate_overflow_abort(OverflowData *Data,$/;"	f	class:__ubsan
__ubsan_handle_nonnull_arg	lib/ubsan/ubsan_handlers.cc	/^void __ubsan::__ubsan_handle_nonnull_arg(NonNullArgData *Data) {$/;"	f	class:__ubsan
__ubsan_handle_nonnull_arg_abort	lib/ubsan/ubsan_handlers.cc	/^void __ubsan::__ubsan_handle_nonnull_arg_abort(NonNullArgData *Data) {$/;"	f	class:__ubsan
__ubsan_handle_nonnull_return_v1	lib/ubsan/ubsan_handlers.cc	/^void __ubsan::__ubsan_handle_nonnull_return_v1(NonNullReturnData *Data,$/;"	f	class:__ubsan
__ubsan_handle_nonnull_return_v1_abort	lib/ubsan/ubsan_handlers.cc	/^void __ubsan::__ubsan_handle_nonnull_return_v1_abort(NonNullReturnData *Data,$/;"	f	class:__ubsan
__ubsan_handle_nullability_arg	lib/ubsan/ubsan_handlers.cc	/^void __ubsan::__ubsan_handle_nullability_arg(NonNullArgData *Data) {$/;"	f	class:__ubsan
__ubsan_handle_nullability_arg_abort	lib/ubsan/ubsan_handlers.cc	/^void __ubsan::__ubsan_handle_nullability_arg_abort(NonNullArgData *Data) {$/;"	f	class:__ubsan
__ubsan_handle_nullability_return_v1	lib/ubsan/ubsan_handlers.cc	/^void __ubsan::__ubsan_handle_nullability_return_v1(NonNullReturnData *Data,$/;"	f	class:__ubsan
__ubsan_handle_nullability_return_v1_abort	lib/ubsan/ubsan_handlers.cc	/^void __ubsan::__ubsan_handle_nullability_return_v1_abort($/;"	f	class:__ubsan
__ubsan_handle_out_of_bounds	lib/ubsan/ubsan_handlers.cc	/^void __ubsan::__ubsan_handle_out_of_bounds(OutOfBoundsData *Data,$/;"	f	class:__ubsan
__ubsan_handle_out_of_bounds_abort	lib/ubsan/ubsan_handlers.cc	/^void __ubsan::__ubsan_handle_out_of_bounds_abort(OutOfBoundsData *Data,$/;"	f	class:__ubsan
__ubsan_handle_pointer_overflow	lib/ubsan/ubsan_handlers.cc	/^void __ubsan::__ubsan_handle_pointer_overflow(PointerOverflowData *Data,$/;"	f	class:__ubsan
__ubsan_handle_pointer_overflow_abort	lib/ubsan/ubsan_handlers.cc	/^void __ubsan::__ubsan_handle_pointer_overflow_abort(PointerOverflowData *Data,$/;"	f	class:__ubsan
__ubsan_handle_shift_out_of_bounds	lib/ubsan/ubsan_handlers.cc	/^void __ubsan::__ubsan_handle_shift_out_of_bounds(ShiftOutOfBoundsData *Data,$/;"	f	class:__ubsan
__ubsan_handle_shift_out_of_bounds_abort	lib/ubsan/ubsan_handlers.cc	/^void __ubsan::__ubsan_handle_shift_out_of_bounds_abort($/;"	f	class:__ubsan
__ubsan_handle_type_mismatch_v1	lib/ubsan/ubsan_handlers.cc	/^void __ubsan::__ubsan_handle_type_mismatch_v1(TypeMismatchData *Data,$/;"	f	class:__ubsan
__ubsan_handle_type_mismatch_v1_abort	lib/ubsan/ubsan_handlers.cc	/^void __ubsan::__ubsan_handle_type_mismatch_v1_abort(TypeMismatchData *Data,$/;"	f	class:__ubsan
__ubsan_handle_vla_bound_not_positive	lib/ubsan/ubsan_handlers.cc	/^void __ubsan::__ubsan_handle_vla_bound_not_positive(VLABoundData *Data,$/;"	f	class:__ubsan
__ubsan_handle_vla_bound_not_positive_abort	lib/ubsan/ubsan_handlers.cc	/^void __ubsan::__ubsan_handle_vla_bound_not_positive_abort(VLABoundData *Data,$/;"	f	class:__ubsan
__ubsan_on_report	lib/ubsan/ubsan_monitor.cc	/^void __ubsan::__ubsan_on_report(void) {}$/;"	f	class:__ubsan
__ubsan_on_report	test/ubsan/TestCases/Misc/monitor.cpp	/^void __ubsan_on_report(void) {$/;"	f
__ubsan_vptr_type_cache	lib/ubsan/ubsan_type_hash.cc	/^__ubsan::__ubsan_vptr_type_cache[__ubsan::VptrTypeCacheSize];$/;"	m	class:__ubsan	file:
__ucmpdi2	lib/builtins/ucmpdi2.c	/^__ucmpdi2(du_int a, du_int b)$/;"	f
__ucmpti2	lib/builtins/ucmpti2.c	/^__ucmpti2(tu_int a, tu_int b)$/;"	f
__udivdi3	lib/builtins/udivdi3.c	/^__udivdi3(du_int a, du_int b)$/;"	f
__udivmoddi4	lib/builtins/udivmoddi4.c	/^__udivmoddi4(du_int a, du_int b, du_int* rem)$/;"	f
__udivmodsi4	lib/builtins/udivmodsi4.c	/^__udivmodsi4(su_int a, su_int b, su_int* rem)$/;"	f
__udivmodti4	lib/builtins/udivmodti4.c	/^__udivmodti4(tu_int a, tu_int b, tu_int* rem)$/;"	f
__udivsi3	lib/builtins/udivsi3.c	/^AEABI_RTABI su_int __aeabi_uidiv(su_int n, su_int d) COMPILER_RT_ALIAS(__udivsi3);$/;"	v
__udivsi3	lib/builtins/udivsi3.c	/^__udivsi3(su_int n, su_int d)$/;"	f
__udivti3	lib/builtins/udivti3.c	/^__udivti3(tu_int a, tu_int b)$/;"	f
__umoddi3	lib/builtins/umoddi3.c	/^__umoddi3(du_int a, du_int b)$/;"	f
__umodsi3	lib/builtins/umodsi3.c	/^__umodsi3(su_int a, su_int b)$/;"	f
__umodti3	lib/builtins/umodti3.c	/^__umodti3(tu_int a, tu_int b)$/;"	f
__unorddf2	lib/builtins/comparedf2.c	/^AEABI_RTABI int __aeabi_dcmpun(fp_t a, fp_t b) COMPILER_RT_ALIAS(__unorddf2);$/;"	v
__unorddf2	lib/builtins/comparedf2.c	/^__unorddf2(fp_t a, fp_t b) {$/;"	f
__unordsf2	lib/builtins/comparesf2.c	/^AEABI_RTABI int __aeabi_fcmpun(fp_t a, fp_t b) COMPILER_RT_ALIAS(__unordsf2);$/;"	v
__unordsf2	lib/builtins/comparesf2.c	/^__unordsf2(fp_t a, fp_t b) {$/;"	f
__unordtf2	lib/builtins/comparetf2.c	/^COMPILER_RT_ABI int __unordtf2(fp_t a, fp_t b) {$/;"	f
__unused0	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    uptr __unused0;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
__unused1	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    u64 __unused1;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
__unused1	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned long __unused1;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
__unused1	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned long long __unused1;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
__unused1	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    uptr __unused1;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
__unused2	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    u64 __unused2;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
__unused2	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned long __unused2;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
__unused2	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned long long __unused2;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
__unused2	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    uptr __unused2;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
__unused3	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    uptr __unused3;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
__unused4	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    u64 __unused4;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
__unused4	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    uptr __unused4;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
__unused5	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    u64 __unused5;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
__unused5	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    uptr __unused5;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
__user_cap_data_struct_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned __user_cap_data_struct_sz = sizeof(struct __user_cap_data_struct);$/;"	m	namespace:__sanitizer	file:
__user_cap_header_struct_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned __user_cap_header_struct_sz =$/;"	m	namespace:__sanitizer	file:
__virtual_mask	lib/ubsan/ubsan_type_hash_itanium.cc	/^    __virtual_mask = 0x1,$/;"	e	enum:__cxxabiv1::__base_class_type_info::__offset_flags_masks	file:
__vmi_class_type_info	lib/ubsan/ubsan_type_hash_itanium.cc	/^class __vmi_class_type_info : public __class_type_info {$/;"	c	namespace:__cxxabiv1	file:
__w64d	test/msan/vector_select.cc	/^typedef double __w64d __attribute__ ((vector_size(16)));$/;"	t	file:
__weak_intercept_preinit	lib/sanitizer_common/sanitizer_win_weak_interception.cc	/^__declspec(allocate(".CRT$XIB")) int (*__weak_intercept_preinit)() =$/;"	v
__weak_intercept_tls_init	lib/sanitizer_common/sanitizer_win_weak_interception.cc	/^__declspec(allocate(".CRT$XLAB")) void(WINAPI *__weak_intercept_tls_init)($/;"	v
__wrap_calloc	test/profile/Inputs/instrprof-alloc.c	/^void *__wrap_calloc(size_t s, size_t n) {$/;"	f
__wrap_malloc	test/profile/Inputs/instrprof-alloc.c	/^void *__wrap_malloc(size_t s) {$/;"	f
__xdl_iterate_hdr_callback	lib/sanitizer_common/sanitizer_freebsd.h	/^typedef int (*__xdl_iterate_hdr_callback)(struct xdl_phdr_info*, size_t, void*);$/;"	t	namespace:__sanitizer
__xmcontext	lib/sanitizer_common/sanitizer_freebsd.h	/^typedef struct __xmcontext {$/;"	s	namespace:__sanitizer
__xray	include/xray/xray_log_interface.h	/^namespace __xray {$/;"	n
__xray	include/xray/xray_records.h	/^namespace __xray {$/;"	n
__xray	lib/sanitizer_common/sanitizer_internal_defs.h	/^namespace __xray  { using namespace __sanitizer; }  \/\/ NOLINT$/;"	n
__xray	lib/xray/tests/unit/allocator_test.cc	/^namespace __xray {$/;"	n	file:
__xray	lib/xray/tests/unit/buffer_queue_test.cc	/^namespace __xray {$/;"	n	file:
__xray	lib/xray/tests/unit/fdr_logging_test.cc	/^namespace __xray {$/;"	n	file:
__xray	lib/xray/tests/unit/function_call_trie_test.cc	/^namespace __xray {$/;"	n	file:
__xray	lib/xray/tests/unit/profile_collector_test.cc	/^namespace __xray {$/;"	n	file:
__xray	lib/xray/tests/unit/segmented_array_test.cc	/^namespace __xray {$/;"	n	file:
__xray	lib/xray/xray_AArch64.cc	/^namespace __xray {$/;"	n	file:
__xray	lib/xray/xray_allocator.h	/^namespace __xray {$/;"	n
__xray	lib/xray/xray_arm.cc	/^namespace __xray {$/;"	n	file:
__xray	lib/xray/xray_basic_flags.cc	/^namespace __xray {$/;"	n	file:
__xray	lib/xray/xray_basic_flags.h	/^namespace __xray {$/;"	n
__xray	lib/xray/xray_basic_logging.cc	/^namespace __xray {$/;"	n	file:
__xray	lib/xray/xray_basic_logging.h	/^namespace __xray {$/;"	n
__xray	lib/xray/xray_buffer_queue.h	/^namespace __xray {$/;"	n
__xray	lib/xray/xray_fdr_flags.cc	/^namespace __xray {$/;"	n	file:
__xray	lib/xray/xray_fdr_flags.h	/^namespace __xray {$/;"	n
__xray	lib/xray/xray_fdr_logging.cc	/^namespace __xray {$/;"	n	file:
__xray	lib/xray/xray_fdr_logging.h	/^namespace __xray {$/;"	n
__xray	lib/xray/xray_flags.cc	/^namespace __xray {$/;"	n	file:
__xray	lib/xray/xray_flags.h	/^namespace __xray {$/;"	n
__xray	lib/xray/xray_function_call_trie.h	/^namespace __xray {$/;"	n
__xray	lib/xray/xray_interface.cc	/^namespace __xray {$/;"	n	file:
__xray	lib/xray/xray_interface_internal.h	/^namespace __xray {$/;"	n
__xray	lib/xray/xray_log_interface.cc	/^namespace __xray {$/;"	n	file:
__xray	lib/xray/xray_mips.cc	/^namespace __xray {$/;"	n	file:
__xray	lib/xray/xray_mips64.cc	/^namespace __xray {$/;"	n	file:
__xray	lib/xray/xray_powerpc64.cc	/^namespace __xray {$/;"	n	file:
__xray	lib/xray/xray_profile_collector.cc	/^namespace __xray {$/;"	n	file:
__xray	lib/xray/xray_profile_collector.h	/^namespace __xray {$/;"	n
__xray	lib/xray/xray_profiling.cc	/^namespace __xray {$/;"	n	file:
__xray	lib/xray/xray_profiling_flags.cc	/^namespace __xray {$/;"	n	file:
__xray	lib/xray/xray_profiling_flags.h	/^namespace __xray {$/;"	n
__xray	lib/xray/xray_recursion_guard.h	/^namespace __xray {$/;"	n
__xray	lib/xray/xray_segmented_array.h	/^namespace __xray {$/;"	n
__xray	lib/xray/xray_trampoline_powerpc64.cc	/^namespace __xray {$/;"	n	file:
__xray	lib/xray/xray_tsc.h	/^namespace __xray {$/;"	n
__xray	lib/xray/xray_utils.cc	/^namespace __xray {$/;"	n	file:
__xray	lib/xray/xray_utils.h	/^namespace __xray {$/;"	n
__xray	lib/xray/xray_x86_64.cc	/^namespace __xray {$/;"	n	file:
__xray_FunctionEntry	lib/xray/xray_trampoline_AArch64.S	/^__xray_FunctionEntry:$/;"	l
__xray_FunctionEntry	lib/xray/xray_trampoline_arm.S	/^__xray_FunctionEntry:$/;"	l
__xray_FunctionEntry	lib/xray/xray_trampoline_mips.S	/^__xray_FunctionEntry:$/;"	l
__xray_FunctionEntry	lib/xray/xray_trampoline_mips64.S	/^__xray_FunctionEntry:$/;"	l
__xray_FunctionEntry	lib/xray/xray_trampoline_powerpc64_asm.S	/^__xray_FunctionEntry:$/;"	l
__xray_FunctionExit	lib/xray/xray_trampoline_AArch64.S	/^__xray_FunctionExit:$/;"	l
__xray_FunctionExit	lib/xray/xray_trampoline_arm.S	/^__xray_FunctionExit:$/;"	l
__xray_FunctionExit	lib/xray/xray_trampoline_mips.S	/^__xray_FunctionExit:$/;"	l
__xray_FunctionExit	lib/xray/xray_trampoline_mips64.S	/^__xray_FunctionExit:$/;"	l
__xray_FunctionExit	lib/xray/xray_trampoline_powerpc64_asm.S	/^__xray_FunctionExit:$/;"	l
__xray_FunctionTailExit	lib/xray/xray_trampoline_AArch64.S	/^__xray_FunctionTailExit:$/;"	l
__xray_FunctionTailExit	lib/xray/xray_trampoline_arm.S	/^__xray_FunctionTailExit:$/;"	l
__xray_NeverInstrumented	test/xray/TestCases/Posix/always-never-instrument.cc	/^int __xray_NeverInstrumented() {$/;"	f
__xray_remove_handler_arg1	lib/xray/xray_interface.cc	/^int __xray_remove_handler_arg1() { return __xray_set_handler_arg1(nullptr); }$/;"	f
__xray_set_handler_arg1	lib/xray/xray_interface.cc	/^int __xray_set_handler_arg1(void (*entry)(int32_t, XRayEntryType, uint64_t)) {$/;"	f
__xregister_t	lib/sanitizer_common/sanitizer_freebsd.h	/^typedef __int32_t __xregister_t;$/;"	t	namespace:__sanitizer
__xstat	lib/sanitizer_common/symbolizer/sanitizer_wrappers.cc	/^int __xstat(int version, const char *path, struct stat *buf) {$/;"	f
__xucontext	lib/sanitizer_common/sanitizer_freebsd.h	/^typedef struct __xucontext {$/;"	s	namespace:__sanitizer
__xuint64_t	lib/sanitizer_common/sanitizer_freebsd.h	/^typedef unsigned long long __xuint64_t;$/;"	t	namespace:__sanitizer
_ai_pad	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int _ai_pad;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
_another	test/tsan/Darwin/external-lib.cc	/^  long _another;$/;"	m	struct:MyObject	file:
_calloc_base	lib/asan/asan_malloc_win.cc	/^void *_calloc_base(size_t nmemb, size_t size) {$/;"	f
_calloc_dbg	lib/asan/asan_malloc_win.cc	/^void *_calloc_dbg(size_t nmemb, size_t size, int, const char *, int) {$/;"	f
_calloc_impl	lib/asan/asan_malloc_win.cc	/^void *_calloc_impl(size_t nmemb, size_t size, int *errno_tmp) {$/;"	f
_ch	test/asan/TestCases/speculative_load.cc	/^    char _ch[23];$/;"	m	struct:S::_short	file:
_chain	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    __sanitizer_FILE *_chain;$/;"	m	struct:__sanitizer::__sanitizer_FILE
_cpplint_state	lib/sanitizer_common/scripts/cpplint.py	/^_cpplint_state = _CppLintState()$/;"	v
_data	test/asan/TestCases/speculative_load.cc	/^  } _data;$/;"	m	struct:S	typeref:union:S::__anon138	file:
_errno	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int _errno;$/;"	m	struct:__sanitizer::__sanitizer_aiocb
_errno	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  u32 _errno;$/;"	m	struct:__sanitizer::__sanitizer_iocb
_error_suppressions	lib/sanitizer_common/scripts/cpplint.py	/^_error_suppressions = {}$/;"	v
_except_handler3	lib/asan/asan_win_dll_thunk.cc	/^INTERCEPT_LIBRARY_FUNCTION(_except_handler3);$/;"	v
_except_handler4	lib/asan/asan_win.cc	124;"	d	file:
_expand	lib/asan/asan_malloc_win.cc	/^void *_expand(void *memblock, size_t size) {$/;"	f
_expand_dbg	lib/asan/asan_malloc_win.cc	/^void *_expand_dbg(void *memblock, size_t size) {$/;"	f
_fileno	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    int _fileno;$/;"	m	struct:__sanitizer::__sanitizer_FILE
_flags	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    int _flags;$/;"	m	struct:__sanitizer::__sanitizer_FILE
_free_base	lib/asan/asan_malloc_win.cc	/^void _free_base(void *ptr) {$/;"	f
_free_dbg	lib/asan/asan_malloc_win.cc	/^void _free_dbg(void *ptr, int) {$/;"	f
_key	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  long _key;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
_kve_ispare	lib/sanitizer_common/sanitizer_freebsd.h	/^  int _kve_ispare[12];$/;"	m	struct:__sanitizer::xkinfo_vmentry
_l	test/asan/TestCases/speculative_load.cc	/^    _long _l;$/;"	m	union:S::__anon138	file:
_long	test/asan/TestCases/speculative_load.cc	/^  struct _long {$/;"	s	struct:S	file:
_malloc_base	lib/asan/asan_malloc_win.cc	/^void *_malloc_base(size_t size) {$/;"	f
_malloc_dbg	lib/asan/asan_malloc_win.cc	/^void *_malloc_dbg(size_t size, int, const char *, int) {$/;"	f
_markers	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    void *_markers;$/;"	m	struct:__sanitizer::__sanitizer_FILE
_memcpy	lib/interception/interception_win.cc	/^static void _memcpy(void *dst, void *src, size_t sz) {$/;"	f	namespace:__interception
_memset	lib/interception/interception_win.cc	/^static void _memset(void *p, int value, size_t sz) {$/;"	f	namespace:__interception
_msize	lib/asan/asan_malloc_win.cc	/^size_t _msize(const void *ptr) {$/;"	f
_pad	test/asan/TestCases/speculative_load.cc	/^      void* _pad;$/;"	m	struct:S::_long	file:
_ptr	test/asan/TestCases/speculative_load.cc	/^      const char* _ptr;$/;"	m	struct:S::_long	file:
_re_pattern_algorithm_header	lib/sanitizer_common/scripts/cpplint.py	/^_re_pattern_algorithm_header = []$/;"	v
_re_pattern_templates	lib/sanitizer_common/scripts/cpplint.py	/^_re_pattern_templates = []$/;"	v
_realloc_base	lib/asan/asan_malloc_win.cc	/^void *_realloc_base(void *ptr, size_t size) {$/;"	f
_realloc_dbg	lib/asan/asan_malloc_win.cc	/^void *_realloc_dbg(void *ptr, size_t size, int) {$/;"	f
_recalloc	lib/asan/asan_malloc_win.cc	/^void *_recalloc(void *p, size_t n, size_t elem_size) {$/;"	f
_recalloc_base	lib/asan/asan_malloc_win.cc	/^void *_recalloc_base(void *p, size_t n, size_t elem_size) {$/;"	f
_regexp_compile_cache	lib/sanitizer_common/scripts/cpplint.py	/^_regexp_compile_cache = {}$/;"	v
_retval	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  long _retval;$/;"	m	struct:__sanitizer::__sanitizer_aiocb
_retval	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  long _retval;$/;"	m	struct:__sanitizer::__sanitizer_iocb
_root	lib/sanitizer_common/scripts/cpplint.py	/^_root = None$/;"	v
_s	test/asan/TestCases/speculative_load.cc	/^    _short _s;$/;"	m	union:S::__anon138	file:
_seq	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  unsigned short _seq;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
_setjmp	lib/tsan/rtl/tsan_rtl_mips64.S	/^_setjmp:$/;"	l
_setjmp	lib/tsan/rtl/tsan_rtl_ppc64.S	/^_setjmp:$/;"	l
_setjmp$non_lazy_ptr	lib/tsan/rtl/tsan_rtl_aarch64.S	/^_setjmp$non_lazy_ptr:$/;"	l
_shm_internal	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  void *_shm_internal;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
_shm_internal	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  void *_shm_internal;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
_short	test/asan/TestCases/speculative_load.cc	/^  struct _short {$/;"	s	struct:S	file:
_sigsetjmp$non_lazy_ptr	lib/tsan/rtl/tsan_rtl_aarch64.S	/^_sigsetjmp$non_lazy_ptr:$/;"	l
_size	test/asan/TestCases/speculative_load.cc	/^    unsigned char _size;$/;"	m	struct:S::_short	file:
_skip	lib/fuzzer/scripts/unbalanced_allocs.py	/^_skip = 0$/;"	v
_start	lib/sanitizer_common/tests/sanitizer_nolibc_test_main.cc	/^extern "C" void _start() {$/;"	f
_state	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int _state;$/;"	m	struct:__sanitizer::__sanitizer_aiocb
_state	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  u32 _state;$/;"	m	struct:__sanitizer::__sanitizer_iocb
_strchr	lib/interception/interception_win.cc	/^static char* _strchr(char* str, char c) {$/;"	f	namespace:__interception
_strlen	lib/interception/interception_win.cc	/^static size_t _strlen(const char *str) {$/;"	f	namespace:__interception
_val	test/tsan/Darwin/external-lib.cc	/^  long _val;$/;"	m	struct:MyObject	file:
_version	test/BlocksRuntime/copyconstructor.C	/^	mutable int _version;$/;"	m	class:TestObject	file:
_version	test/BlocksRuntime/reference.C	/^	mutable int _version;$/;"	m	class:TestObject	file:
a	lib/asan/tests/asan_test.cc	/^  int a:8;$/;"	m	struct:StructWithBitFields_8_24	file:
a	lib/msan/tests/msan_test.cc	/^  S8 a;$/;"	m	struct:SSS8	file:
a	lib/msan/tests/msan_test.cc	/^  U2 a;$/;"	m	struct:__anon9::S	file:
a	lib/msan/tests/msan_test.cc	/^  U4  a;$/;"	m	struct:StructWithHole	file:
a	lib/msan/tests/msan_test.cc	/^  int a, b, c, d, e, f;$/;"	m	struct:StructByVal	file:
a	lib/msan/tests/msan_test.cc	/^  int a, b, c;$/;"	m	struct:SSS1	file:
a	lib/msan/tests/msan_test.cc	/^  int a;$/;"	m	struct:SSS5	file:
a	lib/msan/tests/msan_test.cc	/^  int a;$/;"	m	struct:SSS6	file:
a	lib/msan/tests/msan_test.cc	/^  int a;$/;"	m	struct:SSS7	file:
a	lib/msan/tests/msan_test.cc	/^  int b, a, c;$/;"	m	struct:SSS2	file:
a	lib/msan/tests/msan_test.cc	/^  int b, c, a;$/;"	m	struct:SSS3	file:
a	lib/msan/tests/msan_test.cc	/^  int c, b, a;$/;"	m	struct:SSS4	file:
a	lib/sanitizer_common/tests/sanitizer_atomic_test.cc	/^  T a;$/;"	m	struct:__sanitizer::ValAndMagic	file:
a	lib/tsan/benchmarks/mini_bench_local.cc	/^int *a;$/;"	v
a	lib/tsan/benchmarks/mini_bench_shared.cc	/^int *a;$/;"	v
a	lib/tsan/rtl/tsan_md5.cc	/^  MD5_u32plus a, b, c, d;$/;"	m	struct:__tsan::__anon18	file:
a	test/BlocksRuntime/small-struct.c	/^  int a;$/;"	m	struct:__anon143	file:
a	test/asan/TestCases/Linux/aligned_delete_test.cc	/^struct S12 { int a, b, c; };$/;"	m	struct:S12	file:
a	test/asan/TestCases/Linux/sized_delete_test.cc	/^  int a, b, c, d, e;$/;"	m	struct:D2	file:
a	test/asan/TestCases/Linux/sized_delete_test.cc	/^  int a, b, c, d, e;$/;"	m	struct:S20	file:
a	test/asan/TestCases/Linux/sized_delete_test.cc	/^  int a, b, c;$/;"	m	struct:D1	file:
a	test/asan/TestCases/Linux/sized_delete_test.cc	/^  int a, b, c;$/;"	m	struct:S12	file:
a	test/asan/TestCases/alloca_detect_custom_size_.cc	/^  char a[3];$/;"	m	struct:A	file:
a	test/asan/TestCases/init-order-atexit.cc	/^A a;$/;"	v
a	test/asan/TestCases/intra-object-overflow.cc	/^  int a[11];$/;"	m	class:Foo	file:
a	test/asan/TestCases/pass-object-byval.cc	/^  int a[8];$/;"	m	class:A	file:
a	test/asan/TestCases/pass-struct-byval-uar.cc	/^  int a[8];$/;"	m	struct:A	file:
a	test/asan/TestCases/pass-struct-byval.cc	/^  int a[8];$/;"	m	struct:A	file:
a	test/asan/TestCases/pr33372.cc	/^struct B { A a; \/*gap*\/ long b; };$/;"	m	struct:B	file:
a	test/asan/TestCases/set_shadow_test.c	/^char a __attribute__((aligned(8)));$/;"	v
a	test/asan/TestCases/vla_chrome_testcase.cc	/^int a = 7;$/;"	v
a	test/builtins/Unit/comparedf2_test.c	/^    double a;$/;"	m	struct:TestVector	file:
a	test/builtins/Unit/comparesf2_test.c	/^    float a;$/;"	m	struct:TestVector	file:
a	test/msan/allocator_mapping.cc	/^} a;$/;"	v	typeref:struct:A
a	test/msan/cxa_atexit.cc	/^A a;$/;"	v
a	test/msan/dtor-bit-fields.cc	/^  unsigned int a : 1;$/;"	m	struct:Anon	file:
a	test/msan/dtor-bit-fields.cc	/^  unsigned int a : 1;$/;"	m	struct:Packed	file:
a	test/msan/dtor-bit-fields.cc	/^  unsigned int a : 1;$/;"	m	struct:Simple	file:
a	test/msan/dtor-trivial.cpp	/^  int a;$/;"	m	struct:NonTrivial	file:
a	test/msan/dtor-trivial.cpp	/^  int a;$/;"	m	struct:Trivial	file:
a	test/msan/mul_by_const.cc	/^  int a;$/;"	m	struct:S	file:
a	test/profile/Inputs/comdat_rename.h	/^  int a;$/;"	m	struct:FOO
a	test/profile/Inputs/instrprof-dynamic-a.cpp	/^void a() {                             \/\/ COV: [[@LINE]]| 1|void a$/;"	f
a	test/profile/Inputs/instrprof-icall-promo_1.cc	/^A a;$/;"	v
a	test/sanitizer_common/TestCases/Linux/new_delete_test.cc	/^struct S12 { int a, b, c; };$/;"	m	struct:S12	file:
a	test/sanitizer_common/TestCases/Posix/illegal_read_test.cc	/^volatile int a;$/;"	v
a	test/scudo/aligned-new.cpp	/^struct S12 { int a, b, c; };$/;"	m	struct:S12	file:
a	test/ubsan/TestCases/Misc/enum.cpp	/^enum E { a = 1 } e;$/;"	e	enum:E	file:
a	test/ubsan/TestCases/TypeCheck/vptr.cpp	/^  int a;$/;"	m	struct:S	file:
a1	lib/msan/tests/msan_test.cc	/^  U1 a1, b1;$/;"	m	struct:LongStruct	file:
a128	lib/tsan/rtl/tsan_interface.h	/^__extension__ typedef __int128 a128;$/;"	t	namespace:__tsan
a16	lib/tsan/rtl/tsan_interface.h	/^typedef unsigned short     a16;  \/\/ NOLINT$/;"	t	namespace:__tsan
a2	lib/msan/tests/msan_test.cc	/^  U2 a2, b2;$/;"	m	struct:LongStruct	file:
a32	lib/tsan/rtl/tsan_interface.h	/^typedef unsigned int       a32;$/;"	t	namespace:__tsan
a4	lib/msan/tests/msan_test.cc	/^  U4 a4, b4;$/;"	m	struct:LongStruct	file:
a4	test/dfsan/trace-cmp.c	/^uint32_t a4, b4;$/;"	v
a64	lib/tsan/rtl/tsan_interface.h	/^typedef unsigned long long a64;  \/\/ NOLINT$/;"	t	namespace:__tsan
a8	lib/msan/tests/msan_test.cc	/^  U8 a8, b8;$/;"	m	struct:LongStruct	file:
a8	lib/tsan/rtl/tsan_interface.h	/^typedef unsigned char      a8;$/;"	t	namespace:__tsan
a8	test/dfsan/trace-cmp.c	/^uint64_t a8, b8;$/;"	v
a_s4	lib/msan/tests/msan_test.cc	/^S4 a_s4[100];$/;"	v
a_s8	lib/msan/tests/msan_test.cc	/^S8 a_s8[100];$/;"	v
aaa	test/tsan/virtual_inheritance_compile_bug.cc	/^struct AAA              {  virtual long aaa () { return 0; } };  \/\/ NOLINT$/;"	f	struct:AAA
ab	test/asan/TestCases/Helpers/initialization-nobug-extra.cc	/^static int ab = getAB();$/;"	v	file:
abort_with_message	lib/ubsan_minimal/ubsan_minimal_handlers.cc	/^static void abort_with_message(const char *) { abort(); }$/;"	f	file:
abort_with_message	lib/ubsan_minimal/ubsan_minimal_handlers.cc	/^static void abort_with_message(const char *msg) {$/;"	f	file:
absMask	lib/builtins/fp_lib.h	224;"	d
absolute_pc	lib/sanitizer_common/sanitizer_unwind_linux_libcdep.cc	/^  uptr absolute_pc;$/;"	m	struct:__sanitizer::__anon62	file:
access	test/tsan/unaligned_norace.cc	/^static void access(char *p, int sz, int rw) {$/;"	f	file:
access	test/tsan/unaligned_race.cc	/^static NOINLINE void access(volatile void *p, int sz, int rw) {$/;"	f	file:
access1	test/tsan/unaligned_race.cc	/^access1(bool main, int off, int sz1, int off2, bool rw, char *obj) {$/;"	f	file:
access2	test/tsan/unaligned_race.cc	/^access2(bool main, int sz1, int off2, bool rw, volatile char *obj) {$/;"	f	file:
access3	test/tsan/unaligned_race.cc	/^static NOINLINE void access3(bool main, int sz1, bool rw, volatile char *p) {$/;"	f	file:
accessBadObject	test/asan/TestCases/Helpers/initialization-blacklist-extra.cc	/^int accessBadObject() { return badNamespace::bad_object.value; }$/;"	f
access_p	test/ubsan/TestCases/TypeCheck/vptr.cpp	/^int access_p(T *p, char type) {$/;"	f
access_size	lib/asan/asan_descriptions.h	/^  uptr access_size;$/;"	m	struct:__asan::GlobalAddressDescription
access_size	lib/asan/asan_descriptions.h	/^  uptr access_size;$/;"	m	struct:__asan::StackAddressDescription
access_size	lib/asan/asan_errors.h	/^  uptr access_size;$/;"	m	struct:__asan::ErrorGeneric
access_type	lib/asan/asan_descriptions.h	/^  u32 access_type : 2;$/;"	m	struct:__asan::ChunkAccess
accesssize	test/tsan/unaligned_norace.cc	/^static int accesssize(int sz) {$/;"	f	file:
accesssize	test/tsan/unaligned_race.cc	/^static int accesssize(int sz) {$/;"	f	file:
accuracyTests	test/builtins/Unit/ppc/qadd_test.c	/^const struct testVector accuracyTests[] = {$/;"	v	typeref:struct:testVector
accuracyTests	test/builtins/Unit/ppc/qdiv_test.c	/^const struct testVector accuracyTests[] = {$/;"	v	typeref:struct:testVector
accuracyTests	test/builtins/Unit/ppc/qmul_test.c	/^const struct testVector accuracyTests[] = {$/;"	v	typeref:struct:testVector
accuracyTests	test/builtins/Unit/ppc/qsub_test.c	/^const struct testVector accuracyTests[] = {$/;"	v	typeref:struct:testVector
acq_rel	lib/tsan/rtl/tsan_clock.cc	/^void ThreadClock::acq_rel(ClockCache *c, SyncClock *dst) {$/;"	f	class:__tsan::ThreadClock
acq_rel	lib/tsan/tests/unit/tsan_clock_test.cc	/^  void acq_rel(SimpleSyncClock *dst) {$/;"	f	struct:__tsan::SimpleThreadClock
acquire	lib/sanitizer_common/sanitizer_addrhashmap.h	/^void AddrHashMap<T, kSize>::acquire(Handle *h) {$/;"	f	class:__sanitizer::AddrHashMap
acquire	lib/tsan/rtl/tsan_clock.cc	/^void ThreadClock::acquire(ClockCache *c, SyncClock *src) {$/;"	f	class:__tsan::ThreadClock
acquire	lib/tsan/tests/unit/tsan_clock_test.cc	/^  void acquire(const SimpleSyncClock *src) {$/;"	f	struct:__tsan::SimpleThreadClock
acquire	lib/ubsan/ubsan_value.h	/^  SourceLocation acquire() {$/;"	f	class:__ubsan::SourceLocation
acquire_my_map_info_list	lib/sanitizer_common/sanitizer_unwind_linux_libcdep.cc	/^acquire_my_map_info_list_func acquire_my_map_info_list;$/;"	v
acquire_my_map_info_list_func	lib/sanitizer_common/sanitizer_unwind_linux_libcdep.cc	/^typedef void *(*acquire_my_map_info_list_func)();$/;"	t	file:
action	test/msan/sigaction.cc	/^void action(int, siginfo_t *, void *) {}$/;"	f
adb	test/sanitizer_common/android_commands/android_common.py	/^def adb(args, attempts = 1):$/;"	f
adb_pull	lib/asan/scripts/asan_device_setup	/^function adb_pull {$/;"	f
adb_push	lib/asan/scripts/asan_device_setup	/^function adb_push {$/;"	f
adb_remount	lib/asan/scripts/asan_device_setup	/^function adb_remount {$/;"	f
adb_root	lib/asan/scripts/asan_device_setup	/^function adb_root {$/;"	f
adb_shell	lib/asan/scripts/asan_device_setup	/^function adb_shell {$/;"	f
adb_wait_for_device	lib/asan/scripts/asan_device_setup	/^function adb_wait_for_device {$/;"	f
add	lib/esan/esan_hashtable.h	/^bool HashTable<KeyTy, DataTy, ExternalLock, HashFuncTy, EqualFuncTy>::add($/;"	f	class:__esan::HashTable
add	lib/sanitizer_common/sanitizer_addrhashmap.h	/^    atomic_uintptr_t add;$/;"	m	struct:__sanitizer::AddrHashMap::Bucket
addAddressRange	lib/sanitizer_common/sanitizer_common.cc	/^void LoadedModule::addAddressRange(uptr beg, uptr end, bool executable,$/;"	f	class:__sanitizer::LoadedModule
addArgument	lib/fuzzer/FuzzerCommand.h	/^  void addArgument(const std::string &Arg) {$/;"	f	class:fuzzer::final
addArguments	lib/fuzzer/FuzzerCommand.h	/^  void addArguments(const Vector<std::string> &ArgsToAdd) {$/;"	f	class:fuzzer::final
addEdge	lib/sanitizer_common/sanitizer_bvgraph.h	/^  bool addEdge(uptr from, uptr to) {$/;"	f	class:__sanitizer::BVGraph
addEdge	lib/sanitizer_common/tests/sanitizer_bvgraph_test.cc	/^  bool addEdge(uptr from, uptr to) {$/;"	f	class:SimpleGraph
addEdges	lib/sanitizer_common/sanitizer_bvgraph.h	/^  uptr addEdges(const BV &from, uptr to, uptr added_edges[],$/;"	f	class:__sanitizer::BVGraph
addEdges	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  uptr addEdges(DeadlockDetectorTLS<BV> *dtls, uptr cur_node, u32 stk,$/;"	f	class:__sanitizer::DeadlockDetector
addFlag	lib/fuzzer/FuzzerCommand.h	/^  void addFlag(const std::string &Flag, const std::string &Value) {$/;"	f	class:fuzzer::final
addLock	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  bool addLock(uptr lock_id, uptr current_epoch, u32 stk) {$/;"	f	class:__sanitizer::DeadlockDetectorTLS
addNoOverflow	lib/ubsan/ubsan_diag.cc	/^static inline uptr addNoOverflow(uptr LHS, uptr RHS) {$/;"	f	file:
add_4	lib/builtins/arm/sync_fetch_and_add_4.S	/^#define add_4(rD, rN, rM)  add rD, rN, rM$/;"	d
add_8	lib/builtins/arm/sync_fetch_and_add_8.S	/^#define add_8(rD_LO, rD_HI, rN_LO, rN_HI, rM_LO, rM_HI) \\$/;"	d
add_in_separate_translation_unit	test/dfsan/label_count.c	/^int add_in_separate_translation_unit(int a, int b) {$/;"	f
addcount	lib/tsan/rtl/tsan_interface_ann.cc	/^  atomic_uintptr_t addcount;$/;"	m	struct:__tsan::ExpectRace	file:
addidx_	lib/sanitizer_common/sanitizer_addrhashmap.h	/^    uptr                   addidx_;$/;"	m	class:__sanitizer::AddrHashMap::Handle
addr	lib/asan/asan_descriptions.h	/^      uptr addr;$/;"	m	union:__asan::AddressDescription::AddressDescriptionData::__anon52
addr	lib/asan/asan_descriptions.h	/^  uptr addr;$/;"	m	struct:__asan::GlobalAddressDescription
addr	lib/asan/asan_descriptions.h	/^  uptr addr;$/;"	m	struct:__asan::HeapAddressDescription
addr	lib/asan/asan_descriptions.h	/^  uptr addr;$/;"	m	struct:__asan::ShadowAddressDescription
addr	lib/asan/asan_descriptions.h	/^  uptr addr;$/;"	m	struct:__asan::StackAddressDescription
addr	lib/cfi/cfi.cc	/^  uptr addr;$/;"	m	class:__cfi::ShadowValue	file:
addr	lib/hwasan/hwasan_linux.cc	/^  uptr addr;$/;"	m	struct:__hwasan::AccessInfo	file:
addr	lib/hwasan/hwasan_report.cc	/^  uptr addr;$/;"	m	struct:__hwasan::HeapAddressDescription	file:
addr	lib/lsan/lsan_common.h	/^  uptr addr;$/;"	m	struct:__lsan::LeakedObject
addr	lib/sanitizer_common/sanitizer_addrhashmap.h	/^    atomic_uintptr_t addr;$/;"	m	struct:__sanitizer::AddrHashMap::Cell
addr	lib/sanitizer_common/sanitizer_common.h	/^  uptr addr;$/;"	m	struct:__sanitizer::SignalContext
addr	lib/stats/stats.h	/^  uptr addr;$/;"	m	struct:__sanitizer::StatInfo
addr	lib/tsan/go/tsan_go.cc	/^  uptr addr;$/;"	m	struct:__tsan::SymbolizeDataContext	file:
addr	lib/tsan/rtl/tsan_interface_ann.cc	/^  uptr addr;$/;"	m	struct:__tsan::ExpectRace	file:
addr	lib/tsan/rtl/tsan_report.h	/^  uptr addr;$/;"	m	struct:__tsan::ReportMop
addr	lib/tsan/rtl/tsan_report.h	/^  uptr addr;$/;"	m	struct:__tsan::ReportMutex
addr	lib/tsan/rtl/tsan_symbolize.cc	/^  uptr addr;$/;"	m	struct:__tsan::SymbolizedStackBuilder	file:
addr	lib/tsan/rtl/tsan_sync.h	/^  uptr addr;  \/\/ overwritten by DenseSlabAlloc freelist$/;"	m	struct:__tsan::SyncVar
addr	test/tsan/fd_socket_connect_norace.cc	/^struct sockaddr *addr;$/;"	v	typeref:struct:sockaddr
addr	test/tsan/fd_socket_norace.cc	/^struct sockaddr *addr;$/;"	v	typeref:struct:sockaddr
addr	test/tsan/stack_sync_reuse.cc	/^long *addr;$/;"	v
addr0	lib/tsan/rtl/tsan_rtl.h	/^  u64 ALWAYS_INLINE addr0() const { return (x_ >> kClkBits) & 7; }$/;"	f	class:__tsan::Shadow
addr1_description	lib/asan/asan_errors.h	/^  AddressDescription addr1_description;$/;"	m	struct:__asan::ErrorInvalidPointerPair
addr1_description	lib/asan/asan_errors.h	/^  AddressDescription addr1_description;$/;"	m	struct:__asan::ErrorStringFunctionMemoryRangesOverlap
addr2_description	lib/asan/asan_errors.h	/^  AddressDescription addr2_description;$/;"	m	struct:__asan::ErrorInvalidPointerPair
addr2_description	lib/asan/asan_errors.h	/^  AddressDescription addr2_description;$/;"	m	struct:__asan::ErrorStringFunctionMemoryRangesOverlap
addr2line_path_	lib/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc	/^  const char *addr2line_path_;$/;"	m	class:__sanitizer::Addr2LinePool	file:
addr2line_pool_	lib/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc	/^  InternalMmapVector<Addr2LineProcess*> addr2line_pool_;$/;"	m	class:__sanitizer::Addr2LinePool	file:
addr4	test/tsan/fd_socket_connect_norace.cc	/^struct sockaddr_in addr4;$/;"	v	typeref:struct:sockaddr_in
addr4	test/tsan/fd_socket_norace.cc	/^struct sockaddr_in addr4;$/;"	v	typeref:struct:sockaddr_in
addr6	test/tsan/fd_socket_connect_norace.cc	/^struct sockaddr_in6 addr6;$/;"	v	typeref:struct:sockaddr_in6
addr6	test/tsan/fd_socket_norace.cc	/^struct sockaddr_in6 addr6;$/;"	v	typeref:struct:sockaddr_in6
addr_	lib/sanitizer_common/sanitizer_addrhashmap.h	/^    uptr                   addr_;$/;"	m	class:__sanitizer::AddrHashMap::Handle
addr_description	lib/asan/asan_errors.h	/^  AddressDescription addr_description;$/;"	m	struct:__asan::ErrorFreeNotMalloced
addr_description	lib/asan/asan_errors.h	/^  AddressDescription addr_description;$/;"	m	struct:__asan::ErrorGeneric
addr_description	lib/asan/asan_errors.h	/^  AddressDescription addr_description;$/;"	m	struct:__asan::ErrorMallocUsableSizeNotOwned
addr_description	lib/asan/asan_errors.h	/^  AddressDescription addr_description;$/;"	m	struct:__asan::ErrorSanitizerGetAllocatedSizeNotOwned
addr_description	lib/asan/asan_errors.h	/^  AddressDescription addr_description;$/;"	m	struct:__asan::ErrorStringFunctionSizeOverflow
addr_description	lib/asan/asan_errors.h	/^  HeapAddressDescription addr_description;$/;"	m	struct:__asan::ErrorAllocTypeMismatch
addr_description	lib/asan/asan_errors.h	/^  HeapAddressDescription addr_description;$/;"	m	struct:__asan::ErrorDoubleFree
addr_description	lib/asan/asan_errors.h	/^  HeapAddressDescription addr_description;$/;"	m	struct:__asan::ErrorNewDeleteTypeMismatch
addr_is_type	lib/msan/msan.h	/^inline bool addr_is_type(uptr addr, MappingDesc::Type mapping_type) {$/;"	f
addr_mask	lib/sanitizer_common/sanitizer_procmaps_mac.cc	/^  uptr addr_mask;$/;"	m	struct:__sanitizer::MemoryMappedSegmentData	file:
addr_max	lib/tsan/rtl/tsan_rtl.h	/^  uptr addr_max;$/;"	m	struct:__tsan::RacyAddress
addr_min	lib/tsan/rtl/tsan_rtl.h	/^  uptr addr_min;$/;"	m	struct:__tsan::RacyAddress
address	lib/builtins/emutls.c	/^        void* address;  \/* object address, when in single thread env *\/$/;"	m	union:__emutls_control::__anon108	file:
address	lib/sanitizer_common/sanitizer_symbolizer.h	/^  uptr address;$/;"	m	struct:__sanitizer::AddressInfo
address_range	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  ReservedAddressRange address_range;$/;"	m	class:SizeClassAllocator64
address_range_	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^  ReservedAddressRange address_range_;$/;"	m	class:LargeMmapAllocatorPtrArrayDynamic
addrinfo	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^CHECK_TYPE_SIZE(addrinfo);$/;"	v
addrinfo	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^CHECK_TYPE_SIZE(addrinfo);$/;"	v
addrinfo	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^CHECK_TYPE_SIZE(addrinfo);$/;"	v
addrinfo	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^CHECK_TYPE_SIZE(addrinfo);$/;"	v
addrlen	test/tsan/fd_socket_connect_norace.cc	/^socklen_t addrlen;$/;"	v
addrlen	test/tsan/fd_socket_norace.cc	/^socklen_t addrlen;$/;"	v
adjustTimer	lib/esan/esan_sideline_linux.cpp	/^bool SidelineThread::adjustTimer(u32 FreqMilliSec) {$/;"	f	class:__esan::SidelineThread
advanced_incrementer_thread_exit_mutex	lib/sanitizer_common/tests/sanitizer_stoptheworld_test.cc	/^static pthread_mutex_t advanced_incrementer_thread_exit_mutex;$/;"	m	namespace:__sanitizer	file:
af_inet	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^int af_inet = (int)AF_INET;$/;"	m	namespace:__sanitizer	file:
af_inet	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^int af_inet = (int)AF_INET;$/;"	m	namespace:__sanitizer	file:
af_inet	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  int af_inet = (int)AF_INET;$/;"	m	namespace:__sanitizer	file:
af_inet	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  int af_inet = (int)AF_INET;$/;"	m	namespace:__sanitizer	file:
af_inet6	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^int af_inet6 = (int)AF_INET6;$/;"	m	namespace:__sanitizer	file:
af_inet6	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^int af_inet6 = (int)AF_INET6;$/;"	m	namespace:__sanitizer	file:
af_inet6	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  int af_inet6 = (int)AF_INET6;$/;"	m	namespace:__sanitizer	file:
af_inet6	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  int af_inet6 = (int)AF_INET6;$/;"	m	namespace:__sanitizer	file:
after_global_dtors	lib/asan/asan_win_dynamic_runtime_thunk.cc	/^__declspec(allocate(".CRT$XTY")) void* after_global_dtors = 0;$/;"	m	namespace:__anon49	file:
after_multithreaded_fork	lib/tsan/rtl/tsan_rtl.h	/^  bool after_multithreaded_fork;$/;"	m	struct:__tsan::Context
ai_addr	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  void *ai_addr;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_addr	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  struct __sanitizer_sockaddr *ai_addr;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo	typeref:struct:__sanitizer::__sanitizer_addrinfo::__sanitizer_sockaddr
ai_addr	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    void *ai_addr;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_addr	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  void *ai_addr;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_addrlen	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  unsigned ai_addrlen;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_addrlen	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  unsigned ai_addrlen;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_addrlen	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned ai_addrlen;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_addrlen	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned ai_addrlen;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_canonname	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char *ai_canonname;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_canonname	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  char *ai_canonname;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_canonname	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    char *ai_canonname;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_canonname	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  char *ai_canonname;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_family	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int ai_family;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_family	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  int ai_family;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_family	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    int ai_family;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_family	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int ai_family;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_flags	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int ai_flags;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_flags	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  int ai_flags;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_flags	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    int ai_flags;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_flags	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int ai_flags;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_next	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  struct __sanitizer_addrinfo *ai_next;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo	typeref:struct:__sanitizer::__sanitizer_addrinfo::__sanitizer_addrinfo
ai_next	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  struct __sanitizer_addrinfo *ai_next;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo	typeref:struct:__sanitizer::__sanitizer_addrinfo::__sanitizer_addrinfo
ai_next	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    struct __sanitizer_addrinfo *ai_next;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo	typeref:struct:__sanitizer::__sanitizer_addrinfo::__sanitizer_addrinfo
ai_next	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  struct __sanitizer_addrinfo *ai_next;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo	typeref:struct:__sanitizer::__sanitizer_addrinfo::__sanitizer_addrinfo
ai_protocol	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int ai_protocol;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_protocol	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  int ai_protocol;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_protocol	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    int ai_protocol;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_protocol	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int ai_protocol;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_socktype	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int ai_socktype;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_socktype	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  int ai_socktype;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_socktype	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    int ai_socktype;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_socktype	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int ai_socktype;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
aio_buf	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  uptr aio_buf;$/;"	m	struct:__sanitizer::__sanitizer_aiocb
aio_buf	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  uptr aio_buf;$/;"	m	struct:__sanitizer::__sanitizer_iocb
aio_buf	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    u64   aio_buf;$/;"	m	struct:__sanitizer::__sanitizer_iocb
aio_data	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    u64   aio_data;$/;"	m	struct:__sanitizer::__sanitizer_iocb
aio_fildes	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int aio_fildes;$/;"	m	struct:__sanitizer::__sanitizer_aiocb
aio_fildes	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  u32 aio_fildes;$/;"	m	struct:__sanitizer::__sanitizer_iocb
aio_fildes	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    u32   aio_fildes;$/;"	m	struct:__sanitizer::__sanitizer_iocb
aio_key_or_aio_reserved1	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    u32   aio_key_or_aio_reserved1; \/\/ Simply crazy.$/;"	m	struct:__sanitizer::__sanitizer_iocb
aio_lio_opcode	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int aio_lio_opcode;$/;"	m	struct:__sanitizer::__sanitizer_aiocb
aio_lio_opcode	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  u32 aio_lio_opcode;$/;"	m	struct:__sanitizer::__sanitizer_iocb
aio_lio_opcode	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    u16   aio_lio_opcode;$/;"	m	struct:__sanitizer::__sanitizer_iocb
aio_nbytes	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  uptr aio_nbytes;$/;"	m	struct:__sanitizer::__sanitizer_aiocb
aio_nbytes	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  long aio_nbytes;$/;"	m	struct:__sanitizer::__sanitizer_iocb
aio_nbytes	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    u64   aio_nbytes;$/;"	m	struct:__sanitizer::__sanitizer_iocb
aio_offset	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u64 aio_offset;$/;"	m	struct:__sanitizer::__sanitizer_aiocb
aio_offset	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  u64 aio_offset;$/;"	m	struct:__sanitizer::__sanitizer_iocb
aio_offset	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    s64   aio_offset;$/;"	m	struct:__sanitizer::__sanitizer_iocb
aio_reqprio	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int aio_reqprio;$/;"	m	struct:__sanitizer::__sanitizer_aiocb
aio_reqprio	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  long aio_reqprio;$/;"	m	struct:__sanitizer::__sanitizer_iocb
aio_reqprio	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    s16   aio_reqprio;$/;"	m	struct:__sanitizer::__sanitizer_iocb
aio_reserved1_or_aio_key	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    u32   aio_reserved1_or_aio_key; \/\/ Luckily, we don't need these.$/;"	m	struct:__sanitizer::__sanitizer_iocb
aio_reserved2	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    u64   aio_reserved2;$/;"	m	struct:__sanitizer::__sanitizer_iocb
aio_reserved3	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    u64   aio_reserved3;$/;"	m	struct:__sanitizer::__sanitizer_iocb
aio_sigevent	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  struct __sanitizer_sigevent aio_sigevent;$/;"	m	struct:__sanitizer::__sanitizer_aiocb	typeref:struct:__sanitizer::__sanitizer_aiocb::__sanitizer_sigevent
aio_sigevent	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  u8 aio_sigevent[20];$/;"	m	struct:__sanitizer::__sanitizer_iocb
aio_sigevent	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  u8 aio_sigevent[32];$/;"	m	struct:__sanitizer::__sanitizer_iocb
alarm_handler	test/dfsan/custom.cc	/^void alarm_handler(int unused) {$/;"	f
align	lib/builtins/emutls.c	/^    gcc_word align;  \/* alignment of the object in bytes *\/$/;"	m	struct:__emutls_control	file:
align	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    void *align;$/;"	m	union:__sanitizer::__sanitizer_pthread_attr_t
align	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  void *align;$/;"	m	union:__sanitizer::__sanitizer_pthread_attr_t
align_val_t	lib/asan/asan_new_delete.cc	/^enum class align_val_t: size_t {};$/;"	c	namespace:std	file:
align_val_t	lib/lsan/lsan_interceptors.cc	/^  enum class align_val_t: size_t;$/;"	c	namespace:std	file:
align_val_t	lib/msan/msan_new_delete.cc	/^  enum class align_val_t: size_t {};$/;"	c	namespace:std	file:
align_val_t	lib/scudo/scudo_new_delete.cpp	/^enum class align_val_t: size_t {};$/;"	c	namespace:std	file:
align_val_t	lib/tsan/rtl/tsan_new_delete.cc	/^enum class align_val_t: __sanitizer::uptr {};$/;"	c	namespace:std	file:
align_val_t	test/asan/TestCases/Linux/aligned_delete_test.cc	/^enum class align_val_t : size_t {};$/;"	c	namespace:std	file:
align_val_t	test/sanitizer_common/TestCases/Linux/new_delete_test.cc	/^enum class align_val_t : size_t {};$/;"	c	namespace:std	file:
align_val_t	test/scudo/aligned-new.cpp	/^enum class align_val_t : size_t {};$/;"	c	namespace:std	file:
aligned_alloc	lib/scudo/scudo_malloc.cpp	/^INTERCEPTOR_ATTRIBUTE void *aligned_alloc(size_t alignment, size_t size) {$/;"	f
alignment	lib/asan/asan_errors.h	/^  uptr alignment;$/;"	m	struct:__asan::ErrorInvalidAlignedAllocAlignment
alignment	lib/asan/asan_errors.h	/^  uptr alignment;$/;"	m	struct:__asan::ErrorInvalidAllocationAlignment
alignment	lib/asan/asan_errors.h	/^  uptr alignment;$/;"	m	struct:__asan::ErrorInvalidPosixMemalignAlignment
alive	test/asan/TestCases/Darwin/dead-strip.c	/^int alive[1] = {};$/;"	v
alive_	lib/tsan/tests/rtl/tsan_test_util.h	/^  bool alive_;$/;"	m	class:Mutex
alive_threads_	lib/sanitizer_common/sanitizer_thread_registry.h	/^  uptr alive_threads_;  \/\/ Created or running.$/;"	m	class:__sanitizer::ThreadRegistry
all	lib/builtins/int_types.h	/^    di_int all;$/;"	m	union:__anon112
all	lib/builtins/int_types.h	/^    du_int all;$/;"	m	union:__anon114
all	lib/builtins/int_types.h	/^    ti_int all;$/;"	m	union:__anon116
all	lib/builtins/int_types.h	/^    tu_int all;$/;"	m	union:__anon118
all_locks_with_contexts_	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  LockWithContext all_locks_with_contexts_[64];$/;"	m	class:__sanitizer::DeadlockDetectorTLS
all_threads_ready	lib/tsan/benchmarks/start_many_threads.cc	/^pthread_barrier_t all_threads_ready;$/;"	v
all_threads_ready	lib/tsan/benchmarks/vts_many_threads_bench.cc	/^pthread_barrier_t all_threads_ready, main_threads_ready;$/;"	v
alloc	lib/sanitizer_common/sanitizer_persistent_allocator.h	/^inline void *PersistentAllocator::alloc(uptr size) {$/;"	f	class:__sanitizer::PersistentAllocator
alloc	test/lsan/TestCases/many_tls_keys.cc	/^void alloc() {$/;"	f
alloc	test/tsan/race_on_heap.cc	/^void *alloc() {$/;"	f
allocRaw	lib/xray/xray_buffer_queue.cc	/^template <class T> static T *allocRaw(size_t N) {$/;"	f	file:
alloc_asan_context	lib/asan/asan_mac.cc	/^asan_block_context_t *alloc_asan_context(void *ctxt, dispatch_function_t func,$/;"	f
alloc_cache	lib/tsan/rtl/tsan_rtl.h	/^  AllocatorCache alloc_cache;$/;"	m	struct:__tsan::Processor
alloc_context_id	lib/asan/asan_allocator.cc	/^  u32 alloc_context_id;$/;"	m	struct:__asan::ChunkHeader	file:
alloc_context_id	lib/hwasan/hwasan_allocator.cc	/^  u32 alloc_context_id;$/;"	m	struct:__hwasan::Metadata	file:
alloc_dealloc_mismatch	lib/asan/asan_allocator.cc	/^  atomic_uint8_t alloc_dealloc_mismatch;$/;"	m	struct:__asan::Allocator	file:
alloc_dealloc_mismatch	lib/asan/asan_allocator.h	/^  u8 alloc_dealloc_mismatch;$/;"	m	struct:__asan::AllocatorOptions
alloc_func	test/tsan/debug_alloc_stack.cc	/^void alloc_func() { mem = (char *)malloc(10); }$/;"	f
alloc_lsan_context	lib/lsan/lsan_mac.cc	/^extern "C" lsan_block_context_t *alloc_lsan_context(void *ctxt,$/;"	f
alloc_memory_for_dlsym	lib/asan/asan_malloc_linux.cc	/^static uptr alloc_memory_for_dlsym[kDlsymAllocPoolSize];$/;"	v	file:
alloc_memory_for_dlsym	lib/hwasan/hwasan_interceptors.cc	/^static uptr alloc_memory_for_dlsym[kDlsymAllocPoolSize];$/;"	v	file:
alloc_memory_for_dlsym	lib/msan/msan_interceptors.cc	/^static uptr alloc_memory_for_dlsym[kDlsymAllocPoolSize];$/;"	v	file:
alloc_stack_id	lib/asan/asan_descriptions.h	/^  u32 alloc_stack_id;$/;"	m	struct:__asan::HeapAddressDescription
alloc_stack_id	lib/hwasan/hwasan_report.cc	/^  u32 alloc_stack_id;$/;"	m	struct:__hwasan::HeapAddressDescription	file:
alloc_tid	lib/asan/asan_allocator.cc	/^  u32 alloc_tid         : 24;$/;"	m	struct:__asan::ChunkHeader	file:
alloc_tid	lib/asan/asan_descriptions.h	/^  uptr alloc_tid;$/;"	m	struct:__asan::HeapAddressDescription
alloc_type	lib/asan/asan_allocator.cc	/^  u32 alloc_type        : 2;$/;"	m	struct:__asan::ChunkHeader	file:
alloc_type	lib/asan/asan_descriptions.h	/^  u32 alloc_type : 2;$/;"	m	struct:__asan::ChunkAccess
alloc_type	lib/asan/asan_errors.h	/^  AllocType alloc_type, dealloc_type;$/;"	m	struct:__asan::ErrorAllocTypeMismatch
alloca	test/asan/TestCases/alloca_constant_size.cc	13;"	d	file:
alloca	test/asan/TestCases/alloca_loop_unpoisoning.cc	15;"	d	file:
alloca	test/asan/TestCases/alloca_vla_interact.cc	15;"	d	file:
allocate	lib/scudo/scudo_allocator.cpp	/^  void *allocate(uptr Size, uptr Alignment, AllocType Type,$/;"	f	struct:__scudo::Allocator
allocate	test/asan/TestCases/Posix/current_allocated_bytes.cc	/^void* allocate(void *arg) {$/;"	f
allocate	test/sanitizer_common/TestCases/malloc_hook.cc	/^__attribute__((noinline)) void allocate(int *unused1, int *unused2) {$/;"	f
allocateId	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^u32 DD::allocateId(DDCallback *cb) {$/;"	f	class:__sanitizer::DD
allocateOneNode	lib/profile/InstrProfilingValue.c	/^static ValueProfNode *allocateOneNode(__llvm_profile_data *Data, uint32_t Index,$/;"	f	file:
allocatePrimary	lib/scudo/scudo_allocator_combined.h	/^  void *allocatePrimary(AllocatorCache *Cache, uptr ClassId) {$/;"	f	class:CombinedAllocator
allocateSecondary	lib/scudo/scudo_allocator_combined.h	/^  void *allocateSecondary(uptr Size, uptr Alignment) {$/;"	f	class:CombinedAllocator
allocateValueProfileCounters	lib/profile/InstrProfilingValue.c	/^static int allocateValueProfileCounters(__llvm_profile_data *Data) {$/;"	f	file:
allocate_addr	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^static void* allocate_addr(int size, int offset_from_aligned = 0) {$/;"	f	file:
allocated	lib/asan/asan_allocator.cc	/^bool LsanMetadata::allocated() const {$/;"	f	class:__lsan::LsanMetadata
allocated	lib/lsan/lsan_allocator.cc	/^bool LsanMetadata::allocated() const {$/;"	f	class:__lsan::LsanMetadata
allocated	lib/lsan/lsan_allocator.h	/^  u8 allocated : 8;  \/\/ Must be first.$/;"	m	struct:__lsan::ChunkMetadata
allocated	lib/sanitizer_common/sanitizer_common.h	/^  uptr allocated;$/;"	m	struct:__sanitizer::StackDepotStats
allocated	lib/sanitizer_common/sanitizer_symbolizer_libbacktrace.cc	/^  uptr size, allocated;$/;"	m	struct:__sanitizer::__anon99::CplusV3DemangleData	file:
allocated	test/asan/TestCases/Posix/new_array_cookie_with_new_from_class.cc	/^  static void *allocated;$/;"	m	struct:Foo	file:
allocated	test/asan/TestCases/Posix/new_array_cookie_with_new_from_class.cc	/^void *Foo::allocated;$/;"	m	class:Foo	file:
allocated_bytes	lib/esan/esan_interceptors.cpp	/^static uptr allocated_bytes;$/;"	v	file:
allocated_current_	lib/sanitizer_common/sanitizer_common.h	/^  char *allocated_current_;$/;"	m	class:__sanitizer::LowLevelAllocator
allocated_end_	lib/sanitizer_common/sanitizer_common.h	/^  char *allocated_end_;$/;"	m	class:__sanitizer::LowLevelAllocator
allocated_for_dlsym	lib/asan/asan_malloc_linux.cc	/^static uptr allocated_for_dlsym;$/;"	v	file:
allocated_for_dlsym	lib/hwasan/hwasan_interceptors.cc	/^static uptr allocated_for_dlsym;$/;"	v	file:
allocated_for_dlsym	lib/msan/msan_interceptors.cc	/^static uptr allocated_for_dlsym;$/;"	v	file:
allocated_size	lib/interception/interception_win.cc	/^  uptr allocated_size;$/;"	m	struct:__interception::TrampolineMemoryRegion	file:
allocations_	lib/asan/asan_memory_profile.cc	/^  InternalMmapVector<AllocationSite> allocations_;$/;"	m	class:__asan::HeapProfile	file:
allocator	lib/asan/asan_allocator.cc	/^  AsanAllocator allocator;$/;"	m	struct:__asan::Allocator	file:
allocator	lib/hwasan/hwasan_allocator.cc	/^static Allocator allocator;$/;"	m	namespace:__hwasan	file:
allocator	lib/lsan/lsan_allocator.cc	/^static Allocator allocator;$/;"	m	namespace:__lsan	file:
allocator	lib/msan/msan_allocator.cc	/^static Allocator allocator;$/;"	m	namespace:__msan	file:
allocator	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^    const ThisT& allocator;$/;"	m	class:SizeClassAllocator64::MemoryMapper
allocator	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  AllocatorCache::Allocator *allocator;$/;"	m	struct:NewThreadParams	file:
allocator	lib/sanitizer_common/tests/sanitizer_allocator_testlib.cc	/^static Allocator allocator;$/;"	m	namespace:__anon59	file:
allocator	lib/tsan/rtl/tsan_mman.cc	/^Allocator *allocator() {$/;"	f	namespace:__tsan
allocator	lib/xray/xray_segmented_array.h	/^  AllocatorType &allocator() const {$/;"	f	class:__xray::Array
allocator_	lib/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc	/^  LowLevelAllocator *allocator_;$/;"	m	class:__sanitizer::Addr2LinePool	file:
allocator_cache	lib/asan/asan_allocator.h	/^  AllocatorCache allocator_cache;$/;"	m	struct:__asan::AsanThreadLocalMallocStorage
allocator_cache	lib/hwasan/hwasan_allocator.h	/^  ALIGNED(8) uptr allocator_cache[96 * (512 * 8 + 16)];  \/\/ Opaque.$/;"	m	struct:__hwasan::HwasanThreadLocalMallocStorage
allocator_cache	lib/lsan/lsan_linux.cc	/^static THREADLOCAL AllocatorCache allocator_cache;$/;"	m	namespace:__lsan	file:
allocator_cache	lib/msan/msan_allocator.h	/^  ALIGNED(8) uptr allocator_cache[96 * (512 * 8 + 16)];  \/\/ Opaque.$/;"	m	struct:__msan::MsanThreadLocalMallocStorage
allocator_for_env	lib/sanitizer_common/sanitizer_mac.cc	/^LowLevelAllocator allocator_for_env;$/;"	m	namespace:__sanitizer	file:
allocator_for_globals	lib/asan/asan_globals.cc	/^static LowLevelAllocator allocator_for_globals;$/;"	m	namespace:__asan	file:
allocator_for_thread_context	lib/asan/asan_thread.cc	/^static LowLevelAllocator allocator_for_thread_context;$/;"	m	namespace:__asan	file:
allocator_may_return_null	lib/sanitizer_common/sanitizer_allocator.cc	/^static atomic_uint8_t allocator_may_return_null = {0};$/;"	m	namespace:__sanitizer	file:
allocator_options	lib/asan/asan_activation.cc	/^  AllocatorOptions allocator_options;$/;"	m	struct:__asan::AsanDeactivatedFlags	file:
allocator_out_of_memory	lib/sanitizer_common/sanitizer_allocator.cc	/^static atomic_uint8_t allocator_out_of_memory = {0};$/;"	m	namespace:__sanitizer	file:
allocs	test/sanitizer_common/TestCases/Linux/soft_rss_limit_mb_test.cc	/^static char *allocs[kMaxNumAllocs];$/;"	v	file:
allocs	test/scudo/rss.c	/^static void *allocs[kNumAllocs];$/;"	v	file:
allocsync	lib/tsan/rtl/tsan_fd.cc	/^static FdSync *allocsync(ThreadState *thr, uptr pc) {$/;"	f	namespace:__tsan
allow_system_symbolizer	lib/asan/scripts/asan_symbolize.py	/^allow_system_symbolizer = True$/;"	v
always	test/xray/TestCases/Posix/c-test.cc	/^__attribute__((xray_always_instrument)) void always() {}$/;"	f
always_instrument	test/xray/TestCases/Posix/patching-unpatching.cc	/^[[clang::xray_always_instrument]] void always_instrument() {$/;"	f
always_shows	test/xray/TestCases/Posix/basic-filtering.cc	/^always_shows() {$/;"	f
and_4	lib/builtins/arm/sync_fetch_and_and_4.S	/^#define and_4(rD, rN, rM)  and rD, rN, rM$/;"	d
and_8	lib/builtins/arm/sync_fetch_and_and_8.S	/^#define and_8(rD_LO, rD_HI, rN_LO, rN_HI, rM_LO, rM_HI) \\$/;"	d
android_api_level	lib/sanitizer_common/sanitizer_linux.cc	/^static atomic_uint32_t android_api_level;$/;"	m	namespace:__sanitizer	file:
android_log_initialized	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^static atomic_uint8_t android_log_initialized;$/;"	m	namespace:__sanitizer	file:
android_run	test/sanitizer_common/android_commands/android_compile.py	/^android_run = os.path.join(here, 'android_run.py')$/;"	v
announced	lib/asan/asan_thread.h	/^  bool announced;$/;"	m	class:__asan::AsanThreadContext
ansi_	lib/sanitizer_common/sanitizer_report_decorator.h	/^  bool ansi_;$/;"	m	class:__sanitizer::SanitizerCommonDecorator
ap	test/profile/Inputs/instrprof-icall-promo_1.cc	/^A* ap = &a;$/;"	v
api	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int api(const uint8_t *data, size_t size) {$/;"	f
appToShadow	lib/esan/esan_shadow.h	/^uptr appToShadow(uptr App) {$/;"	f	namespace:__esan
appToShadowImpl	lib/esan/esan_shadow.h	/^uptr appToShadowImpl(uptr App) {$/;"	f	namespace:__esan
append	lib/sanitizer_common/sanitizer_printf.cc	/^void InternalScopedString::append(const char *format, ...) {$/;"	f	class:__sanitizer::InternalScopedString
append_back	lib/sanitizer_common/sanitizer_list.h	/^  void append_back(IntrusiveList<Item> *l) {$/;"	f	struct:__sanitizer::IntrusiveList
append_block	lib/tsan/rtl/tsan_clock.cc	/^ALWAYS_INLINE void SyncClock::append_block(u32 idx) {$/;"	f	class:__tsan::SyncClock
append_front	lib/sanitizer_common/sanitizer_list.h	/^  void append_front(IntrusiveList<Item> *l) {$/;"	f	struct:__sanitizer::IntrusiveList
append_symbolizer	lib/asan/scripts/asan_symbolize.py	/^  def append_symbolizer(self, symbolizer):$/;"	m	class:ChainSymbolizer
apply	lib/xray/xray_buffer_queue.h	/^  template <class F> void apply(F Fn) {$/;"	f	class:__xray::BufferQueue
applyNot	lib/msan/tests/msan_test.cc	/^static bool applyNot(T value, T shadow) {$/;"	f	file:
applySlt	lib/msan/tests/msan_test.cc	/^static bool applySlt(T value, T shadow) {$/;"	f	file:
arch	lib/sanitizer_common/sanitizer_common.h	/^  ModuleArch arch() const { return arch_; }$/;"	f	class:__sanitizer::LoadedModule
arch	lib/sanitizer_common/sanitizer_procmaps.h	/^  ModuleArch arch;$/;"	m	class:__sanitizer::MemoryMappedSegment
arch	lib/sanitizer_common/symbolizer/scripts/build_symbolizer.sh	/^arch() {$/;"	f
arch_	lib/sanitizer_common/sanitizer_common.h	/^  ModuleArch arch_;$/;"	m	class:__sanitizer::LoadedModule
areBionicGlobalsInitialized	lib/scudo/scudo_utils.cpp	/^INLINE bool areBionicGlobalsInitialized() {$/;"	f	namespace:__scudo
aresame	test/BlocksRuntime/localisglobal.c	/^int aresame(void *first, void *second) {$/;"	f
arg	lib/dfsan/dfsan_custom.cc	/^  void *arg;$/;"	m	struct:pthread_create_info	file:
arg	lib/msan/msan_interceptors.cc	/^  void *arg;$/;"	m	struct:MSanAtExitRecord	file:
arg	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^  TracerThreadArgument *arg;$/;"	m	class:__sanitizer::ThreadSuspender	file:
arg	lib/sanitizer_common/tests/sanitizer_pthread_wrappers.h	/^  void *arg;$/;"	m	struct:PthreadHelperCreateThreadInfo
arg	lib/tsan/rtl/tsan_interceptors.cc	/^  void *arg;$/;"	m	struct:__tsan::AtExitCtx	file:
arg	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^  uptr arg;$/;"	m	struct:Event	file:
arg	test/sanitizer_common/android_commands/android_compile.py	/^    arg = args.pop(0)$/;"	v
arg	test/sanitizer_common/ios_commands/iossim_compile.py	/^    arg = args.pop(0)$/;"	v
arg0fn	test/xray/TestCases/Posix/arg1-arg0-logging.cc	/^[[clang::xray_always_instrument]] void arg0fn() { printf("hello, arg0!\\n"); }$/;"	f
arg0logger	test/xray/TestCases/Posix/arg1-arg0-logging.cc	/^void arg0logger(int32_t, XRayEntryType) { arg0loggercalled = true; }$/;"	f
arg1	test/xray/TestCases/Posix/common-trampoline-alignment.cc	/^__attribute__((noinline)) void arg1(int) {$/;"	f
arg1_handler	test/xray/TestCases/Posix/common-trampoline-alignment.cc	/^[[clang::xray_never_instrument]] void arg1_handler(int32_t, XRayEntryType,$/;"	f
arg1fn	test/xray/TestCases/Posix/arg1-arg0-logging.cc	/^arg1fn(uint64_t arg1) {$/;"	f
arg1logger	test/xray/TestCases/Posix/arg1-arg0-logging.cc	/^void arg1logger(int32_t, XRayEntryType, uint64_t) { arg1loggercalled = true; }$/;"	f
arg1logger	test/xray/TestCases/Posix/arg1-logger.cc	/^void arg1logger(int32_t fn, XRayEntryType t, uint64_t a1) {$/;"	f
arg1loggercalled	test/xray/TestCases/Posix/arg1-arg0-logging.cc	/^bool arg1loggercalled = false;$/;"	v
arg2	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^  uptr arg2;$/;"	m	struct:Event	file:
arg_	lib/asan/asan_thread.h	/^  void *arg_;$/;"	m	class:__asan::AsanThread
arg_	lib/hwasan/hwasan_thread.h	/^  void *arg_;$/;"	m	class:__hwasan::HwasanThread
arg_	lib/msan/msan_thread.h	/^  void *arg_;$/;"	m	class:__msan::MsanThread
argc_copy	test/lsan/TestCases/link_turned_off.cc	/^int argc_copy;$/;"	v
args	lib/asan/scripts/asan_symbolize.py	/^  args = parser.parse_args()$/;"	v	class:SymbolizationLoop
args	test/sanitizer_common/android_commands/android_compile.py	/^args = sys.argv[1:]$/;"	v
args	test/sanitizer_common/ios_commands/iossim_compile.py	/^args = sys.argv[1:]$/;"	v
args_type	lib/msan/msan_chained_origin_depot.cc	/^  typedef ChainedOriginDepotDesc args_type;$/;"	t	struct:__msan::ChainedOriginDepotNode	file:
args_type	lib/sanitizer_common/sanitizer_stackdepot.cc	/^  typedef StackTrace args_type;$/;"	t	struct:__sanitizer::StackDepotNode	file:
args_type	lib/sanitizer_common/sanitizer_stackdepotbase.h	/^  typedef typename Node::args_type args_type;$/;"	t	class:__sanitizer::StackDepotBase
argument	lib/lsan/lsan_common_linux.cc	/^  void *argument;$/;"	m	struct:__lsan::DoStopTheWorldParam	file:
argument	lib/sanitizer_common/sanitizer_stoptheworld_mac.cc	/^  void *argument;$/;"	m	struct:__sanitizer::RunThreadArgs	file:
argv0	lib/sanitizer_common/tests/sanitizer_test_main.cc	/^const char *argv0;$/;"	v
argv0	lib/tsan/tests/rtl/tsan_test.cc	/^const char *argv0;$/;"	v
argv0	test/fuzzer/InitializeTest.cpp	/^static char *argv0;$/;"	v	file:
armed	lib/tsan/rtl/tsan_interceptors.cc	/^  bool armed;$/;"	m	struct:__tsan::SignalDesc	file:
arr	test/asan/TestCases/use-after-scope-inlined.cc	/^int *arr;$/;"	v
arr	test/lsan/TestCases/use_unaligned.cc	/^void *arr[2];$/;"	v
array	test/asan/TestCases/Posix/asan-sigbus.cpp	/^char array[4096];$/;"	v
array	test/asan/TestCases/global-location.cc	/^  static int array[10];$/;"	m	struct:C	file:
array	test/asan/TestCases/global-location.cc	/^int C::array[10];$/;"	m	class:C	file:
array	test/fuzzer/LoadTest.cpp	/^int array[kArraySize];$/;"	v
array_	lib/sanitizer_common/sanitizer_coverage_fuchsia.cc	/^  uptr *array_ = nullptr;$/;"	m	class:__sancov::__anon63::final	file:
asChar	lib/msan/msan_report.cc	/^  static char asChar(int id) {$/;"	f	class:__msan::OriginSet
asanThreadRegistry	lib/asan/asan_thread.cc	/^ThreadRegistry &asanThreadRegistry() {$/;"	f	namespace:__asan
asan_aligned_alloc	lib/asan/asan_allocator.cc	/^void *asan_aligned_alloc(uptr alignment, uptr size, BufferedStackTrace *stack) {$/;"	f	namespace:__asan
asan_atexit	lib/asan/asan_rtl.cc	/^static void asan_atexit() {$/;"	f	namespace:__asan
asan_block_context_t	lib/asan/asan_mac.cc	/^} asan_block_context_t;$/;"	t	namespace:__asan	typeref:struct:__asan::__anon47	file:
asan_calloc	lib/asan/asan_allocator.cc	/^void *asan_calloc(uptr nmemb, uptr size, BufferedStackTrace *stack) {$/;"	f	namespace:__asan
asan_deactivated_flags	lib/asan/asan_activation.cc	/^} asan_deactivated_flags;$/;"	m	namespace:__asan	typeref:struct:__asan::AsanDeactivatedFlags	file:
asan_delete	lib/asan/asan_allocator.cc	/^void asan_delete(void *ptr, uptr size, uptr alignment,$/;"	f	namespace:__asan
asan_dispatch_call_block_and_release	lib/asan/asan_mac.cc	/^void asan_dispatch_call_block_and_release(void *block) {$/;"	f	namespace:__asan
asan_dll_thunk_init	lib/asan/asan_win_dll_thunk.cc	/^static int asan_dll_thunk_init() {$/;"	f	file:
asan_flags_dont_use_directly	lib/asan/asan_flags.cc	/^Flags asan_flags_dont_use_directly;  \/\/ use via flags().$/;"	m	namespace:__asan	file:
asan_free	lib/asan/asan_allocator.cc	/^void asan_free(void *ptr, BufferedStackTrace *stack, AllocType alloc_type) {$/;"	f	namespace:__asan
asan_init_caller	lib/asan/tests/asan_noinst_test.cc	/^static AsanInitCaller asan_init_caller;$/;"	v	file:
asan_init_is_running	lib/asan/asan_rtl.cc	/^bool asan_init_is_running;$/;"	m	namespace:__asan	file:
asan_inited	lib/asan/asan_rtl.cc	/^int asan_inited;$/;"	m	namespace:__asan	file:
asan_initializer	lib/asan/asan_rtl.cc	/^static AsanInitializer asan_initializer;$/;"	m	namespace:__asan	file:
asan_is_deactivated	lib/asan/asan_activation.cc	/^static bool asan_is_deactivated;$/;"	m	namespace:__asan	file:
asan_malloc	lib/asan/asan_allocator.cc	/^void *asan_malloc(uptr size, BufferedStackTrace *stack) {$/;"	f	namespace:__asan
asan_malloc_dispatch_k	lib/asan/asan_malloc_linux.cc	/^ALIGNED(32) const MallocDebugK asan_malloc_dispatch_k = {$/;"	v
asan_malloc_dispatch_l	lib/asan/asan_malloc_linux.cc	/^ALIGNED(32) const MallocDebugL asan_malloc_dispatch_l = {$/;"	v
asan_malloc_usable_size	lib/asan/asan_allocator.cc	/^uptr asan_malloc_usable_size(const void *ptr, uptr pc, uptr bp) {$/;"	f	namespace:__asan
asan_memalign	lib/asan/asan_allocator.cc	/^void *asan_memalign(uptr alignment, uptr size, BufferedStackTrace *stack,$/;"	f	namespace:__asan
asan_mz_force_lock	lib/asan/asan_allocator.cc	/^void asan_mz_force_lock() {$/;"	f	namespace:__asan
asan_mz_force_unlock	lib/asan/asan_allocator.cc	/^void asan_mz_force_unlock() {$/;"	f	namespace:__asan
asan_mz_size	lib/asan/asan_allocator.cc	/^uptr asan_mz_size(const void *ptr) {$/;"	f	namespace:__asan
asan_posix_memalign	lib/asan/asan_allocator.cc	/^int asan_posix_memalign(void **memptr, uptr alignment, uptr size,$/;"	f	namespace:__asan
asan_pvalloc	lib/asan/asan_allocator.cc	/^void *asan_pvalloc(uptr size, BufferedStackTrace *stack) {$/;"	f	namespace:__asan
asan_realloc	lib/asan/asan_allocator.cc	/^void *asan_realloc(void *p, uptr size, BufferedStackTrace *stack) {$/;"	f	namespace:__asan
asan_register_worker_thread	lib/asan/asan_mac.cc	/^void asan_register_worker_thread(int parent_tid, StackTrace *stack) {$/;"	f	namespace:__asan
asan_rt_version_t	lib/asan/asan_linux.cc	/^} asan_rt_version_t;$/;"	t	typeref:enum:__anon50	file:
asan_thread_init	lib/asan/asan_win.cc	/^static void NTAPI asan_thread_init(void *module, DWORD reason, void *reserved) {$/;"	f	namespace:__asan
asan_thread_init	lib/asan/asan_win_dll_thunk.cc	/^static void WINAPI asan_thread_init(void *mod, unsigned long reason,$/;"	f	file:
asan_thread_init	lib/asan/asan_win_dynamic_runtime_thunk.cc	/^static void NTAPI asan_thread_init(void *mod, unsigned long reason,$/;"	f	file:
asan_thread_registry	lib/asan/asan_thread.cc	/^static ThreadRegistry *asan_thread_registry;$/;"	m	namespace:__asan	file:
asan_thread_start	lib/asan/asan_interceptors.cc	/^static thread_return_t THREAD_CALLING_CONV asan_thread_start(void *arg) {$/;"	f	file:
asan_thread_start	lib/asan/asan_win.cc	/^static thread_return_t THREAD_CALLING_CONV asan_thread_start(void *arg) {$/;"	f	file:
asan_valloc	lib/asan/asan_allocator.cc	/^void *asan_valloc(uptr size, BufferedStackTrace *stack) {$/;"	f	namespace:__asan
asan_write	lib/asan/tests/asan_test_utils.h	/^NOINLINE void asan_write(T *a) {$/;"	f
asan_write_sized_aligned	lib/asan/tests/asan_oob_test.cc	/^NOINLINE void asan_write_sized_aligned(uint8_t *p, size_t size) {$/;"	f
asd	test/profile/Inputs/instrprof-gcov-exceptions.cpp	/^void asd(std::string i) {$/;"	f
assumption_1	test/builtins/Unit/addtf3_test.c	/^char assumption_1[sizeof(long double) * CHAR_BIT == 128] = {0};$/;"	v
assumption_1	test/builtins/Unit/arm/aeabi_uldivmod_test.c	/^char assumption_1[sizeof(di_int) == 2*sizeof(si_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/ashldi3_test.c	/^char assumption_1[sizeof(di_int) == 2*sizeof(si_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/ashlti3_test.c	/^char assumption_1[sizeof(ti_int) == 2*sizeof(di_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/ashrdi3_test.c	/^char assumption_1[sizeof(di_int) == 2*sizeof(si_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/ashrti3_test.c	/^char assumption_1[sizeof(ti_int) == 2*sizeof(di_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/clzdi2_test.c	/^char assumption_1[sizeof(di_int) == 2*sizeof(si_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/clzsi2_test.c	/^char assumption_1[sizeof(di_int) == 2*sizeof(si_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/clzti2_test.c	/^char assumption_1[sizeof(ti_int) == 2*sizeof(di_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/cmpdi2_test.c	/^char assumption_1[sizeof(di_int) == 2*sizeof(si_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/cmpti2_test.c	/^char assumption_1[sizeof(ti_int) == 2*sizeof(di_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/ctzdi2_test.c	/^char assumption_1[sizeof(di_int) == 2*sizeof(si_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/ctzsi2_test.c	/^char assumption_1[sizeof(di_int) == 2*sizeof(si_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/ctzti2_test.c	/^char assumption_1[sizeof(ti_int) == 2*sizeof(di_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/divdi3_test.c	/^char assumption_1[sizeof(di_int) == 2*sizeof(si_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/divtf3_test.c	/^char assumption_1[sizeof(long double) * CHAR_BIT == 128] = {0};$/;"	v
assumption_1	test/builtins/Unit/divti3_test.c	/^char assumption_1[sizeof(ti_int) == 2*sizeof(di_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/eqtf2_test.c	/^char assumption_1[sizeof(long double) * CHAR_BIT == 128] = {0};$/;"	v
assumption_1	test/builtins/Unit/extenddftf2_test.c	/^char assumption_1[sizeof(long double) * CHAR_BIT == 128] = {0};$/;"	v
assumption_1	test/builtins/Unit/extendhfsf2_test.c	/^char assumption_1[sizeof(__fp16) * CHAR_BIT == 16] = {0};$/;"	v
assumption_1	test/builtins/Unit/extendsftf2_test.c	/^char assumption_1[sizeof(long double) * CHAR_BIT == 128] = {0};$/;"	v
assumption_1	test/builtins/Unit/ffsdi2_test.c	/^char assumption_1[sizeof(di_int) == 2*sizeof(si_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/ffsti2_test.c	/^char assumption_1[sizeof(ti_int) == 2*sizeof(di_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/fixdfdi_test.c	/^char assumption_1[sizeof(di_int) == 2*sizeof(si_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/fixdfti_test.c	/^char assumption_1[sizeof(ti_int) == 2*sizeof(di_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/fixsfdi_test.c	/^char assumption_1[sizeof(di_int) == 2*sizeof(si_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/fixsfti_test.c	/^char assumption_1[sizeof(ti_int) == 2*sizeof(di_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/fixtfdi_test.c	/^char assumption_1[sizeof(long double) * CHAR_BIT == 128] = {0};$/;"	v
assumption_1	test/builtins/Unit/fixtfsi_test.c	/^char assumption_1[sizeof(long double) * CHAR_BIT == 128] = {0};$/;"	v
assumption_1	test/builtins/Unit/fixtfti_test.c	/^char assumption_1[sizeof(long double) * CHAR_BIT == 128] = {0};$/;"	v
assumption_1	test/builtins/Unit/fixunsdfdi_test.c	/^char assumption_1[sizeof(du_int) == 2*sizeof(su_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/fixunsdfti_test.c	/^char assumption_1[sizeof(tu_int) == 2*sizeof(du_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/fixunssfdi_test.c	/^char assumption_1[sizeof(du_int) == 2*sizeof(si_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/fixunssfti_test.c	/^char assumption_1[sizeof(tu_int) == 2*sizeof(di_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/fixunstfdi_test.c	/^char assumption_1[sizeof(du_int) == 2*sizeof(su_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/fixunstfsi_test.c	/^char assumption_1[sizeof(long double) * CHAR_BIT == 128] = {0};$/;"	v
assumption_1	test/builtins/Unit/fixunstfti_test.c	/^char assumption_1[sizeof(tu_int) == 4*sizeof(su_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/fixunsxfdi_test.c	/^char assumption_1[sizeof(du_int) == 2*sizeof(su_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/fixunsxfti_test.c	/^char assumption_1[sizeof(tu_int) == 2*sizeof(du_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/fixxfdi_test.c	/^char assumption_1[sizeof(di_int) == 2*sizeof(si_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/fixxfti_test.c	/^char assumption_1[sizeof(ti_int) == 2*sizeof(di_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/floatdidf_test.c	/^char assumption_1[sizeof(di_int) == 2*sizeof(si_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/floatdisf_test.c	/^char assumption_1[sizeof(di_int) == 2*sizeof(si_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/floatditf_test.c	/^char assumption_1[sizeof(long double) * CHAR_BIT == 128] = {0};$/;"	v
assumption_1	test/builtins/Unit/floatdixf_test.c	/^char assumption_1[sizeof(di_int) == 2*sizeof(si_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/floatsitf_test.c	/^char assumption_1[sizeof(long double) * CHAR_BIT == 128] = {0};$/;"	v
assumption_1	test/builtins/Unit/floattidf_test.c	/^char assumption_1[sizeof(ti_int) == 2*sizeof(di_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/floattisf_test.c	/^char assumption_1[sizeof(ti_int) == 2*sizeof(di_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/floattitf_test.c	/^char assumption_1[sizeof(ti_int) == 2*sizeof(di_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/floattixf_test.c	/^char assumption_1[sizeof(ti_int) == 2*sizeof(di_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/floatundidf_test.c	/^char assumption_1[sizeof(di_int) == 2*sizeof(si_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/floatundisf_test.c	/^char assumption_1[sizeof(du_int) == 2*sizeof(si_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/floatunditf_test.c	/^char assumption_1[sizeof(long double) * CHAR_BIT == 128] = {0};$/;"	v
assumption_1	test/builtins/Unit/floatundixf_test.c	/^char assumption_1[sizeof(du_int) == 2*sizeof(si_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/floatunsitf_test.c	/^char assumption_1[sizeof(long double) * CHAR_BIT == 128] = {0};$/;"	v
assumption_1	test/builtins/Unit/floatuntidf_test.c	/^char assumption_1[sizeof(ti_int) == 2*sizeof(di_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/floatuntisf_test.c	/^char assumption_1[sizeof(tu_int) == 2*sizeof(du_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/floatuntitf_test.c	/^char assumption_1[sizeof(tu_int) == 2*sizeof(du_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/floatuntixf_test.c	/^char assumption_1[sizeof(tu_int) == 2*sizeof(du_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/getf2_test.c	/^char assumption_1[sizeof(long double) * CHAR_BIT == 128] = {0};$/;"	v
assumption_1	test/builtins/Unit/gttf2_test.c	/^char assumption_1[sizeof(long double) * CHAR_BIT == 128] = {0};$/;"	v
assumption_1	test/builtins/Unit/letf2_test.c	/^char assumption_1[sizeof(long double) * CHAR_BIT == 128] = {0};$/;"	v
assumption_1	test/builtins/Unit/lshrdi3_test.c	/^char assumption_1[sizeof(di_int) == 2*sizeof(si_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/lshrti3_test.c	/^char assumption_1[sizeof(ti_int) == 2*sizeof(di_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/lttf2_test.c	/^char assumption_1[sizeof(long double) * CHAR_BIT == 128] = {0};$/;"	v
assumption_1	test/builtins/Unit/moddi3_test.c	/^char assumption_1[sizeof(di_int) == 2*sizeof(si_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/modti3_test.c	/^char assumption_1[sizeof(ti_int) == 2*sizeof(di_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/muldi3_test.c	/^char assumption_1[sizeof(di_int) == 2*sizeof(si_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/multf3_test.c	/^char assumption_1[sizeof(long double) * CHAR_BIT == 128] = {0};$/;"	v
assumption_1	test/builtins/Unit/multi3_test.c	/^char assumption_1[sizeof(ti_int) == 2*sizeof(di_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/negdi2_test.c	/^char assumption_1[sizeof(di_int) == 2*sizeof(si_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/negti2_test.c	/^char assumption_1[sizeof(ti_int) == 2*sizeof(di_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/netf2_test.c	/^char assumption_1[sizeof(long double) * CHAR_BIT == 128] = {0};$/;"	v
assumption_1	test/builtins/Unit/paritydi2_test.c	/^char assumption_1[sizeof(di_int) == 2*sizeof(si_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/parityti2_test.c	/^char assumption_1[sizeof(ti_int) == 2*sizeof(di_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/popcountdi2_test.c	/^char assumption_1[sizeof(di_int) == 2*sizeof(si_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/popcountti2_test.c	/^char assumption_1[sizeof(ti_int) == 2*sizeof(di_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/subtf3_test.c	/^char assumption_1[sizeof(long double) * CHAR_BIT == 128] = {0};$/;"	v
assumption_1	test/builtins/Unit/truncdfhf2_test.c	/^char assumption_1[sizeof(__fp16) * CHAR_BIT == 16] = {0};$/;"	v
assumption_1	test/builtins/Unit/truncsfhf2_test.c	/^char assumption_1[sizeof(__fp16) * CHAR_BIT == 16] = {0};$/;"	v
assumption_1	test/builtins/Unit/trunctfdf2_test.c	/^char assumption_1[sizeof(long double) * CHAR_BIT == 128] = {0};$/;"	v
assumption_1	test/builtins/Unit/trunctfsf2_test.c	/^char assumption_1[sizeof(long double) * CHAR_BIT == 128] = {0};$/;"	v
assumption_1	test/builtins/Unit/udivmoddi4_test.c	/^char assumption_1[sizeof(di_int) == 2*sizeof(si_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/udivmodti4_test.c	/^char assumption_1[sizeof(ti_int) == 2*sizeof(di_int)] = {0};$/;"	v
assumption_1	test/builtins/Unit/unordtf2_test.c	/^char assumption_1[sizeof(long double) * CHAR_BIT == 128] = {0};$/;"	v
assumption_2	test/builtins/Unit/clzsi2_test.c	/^char assumption_2[sizeof(si_int)*CHAR_BIT == 32] = {0};$/;"	v
assumption_2	test/builtins/Unit/ctzsi2_test.c	/^char assumption_2[sizeof(si_int)*CHAR_BIT == 32] = {0};$/;"	v
assumption_2	test/builtins/Unit/fixdfdi_test.c	/^char assumption_2[sizeof(su_int)*CHAR_BIT == 32] = {0};$/;"	v
assumption_2	test/builtins/Unit/fixdfti_test.c	/^char assumption_2[sizeof(su_int)*CHAR_BIT == 32] = {0};$/;"	v
assumption_2	test/builtins/Unit/fixsfdi_test.c	/^char assumption_2[sizeof(su_int)*CHAR_BIT == 32] = {0};$/;"	v
assumption_2	test/builtins/Unit/fixsfti_test.c	/^char assumption_2[sizeof(su_int)*CHAR_BIT == 32] = {0};$/;"	v
assumption_2	test/builtins/Unit/fixunsdfdi_test.c	/^char assumption_2[sizeof(su_int)*CHAR_BIT == 32] = {0};$/;"	v
assumption_2	test/builtins/Unit/fixunsdfsi_test.c	/^char assumption_2[sizeof(su_int)*CHAR_BIT == 32] = {0};$/;"	v
assumption_2	test/builtins/Unit/fixunsdfti_test.c	/^char assumption_2[sizeof(su_int)*CHAR_BIT == 32] = {0};$/;"	v
assumption_2	test/builtins/Unit/fixunssfdi_test.c	/^char assumption_2[sizeof(su_int)*CHAR_BIT == 32] = {0};$/;"	v
assumption_2	test/builtins/Unit/fixunssfsi_test.c	/^char assumption_2[sizeof(su_int)*CHAR_BIT == 32] = {0};$/;"	v
assumption_2	test/builtins/Unit/fixunssfti_test.c	/^char assumption_2[sizeof(su_int)*CHAR_BIT == 32] = {0};$/;"	v
assumption_2	test/builtins/Unit/fixunstfdi_test.c	/^char assumption_2[sizeof(du_int)*CHAR_BIT == 64] = {0};$/;"	v
assumption_2	test/builtins/Unit/fixunstfti_test.c	/^char assumption_2[sizeof(tu_int)*CHAR_BIT == 128] = {0};$/;"	v
assumption_2	test/builtins/Unit/fixunsxfdi_test.c	/^char assumption_2[sizeof(du_int)*CHAR_BIT == 64] = {0};$/;"	v
assumption_2	test/builtins/Unit/fixunsxfsi_test.c	/^char assumption_2[sizeof(su_int)*CHAR_BIT == 32] = {0};$/;"	v
assumption_2	test/builtins/Unit/fixunsxfti_test.c	/^char assumption_2[sizeof(tu_int)*CHAR_BIT == 128] = {0};$/;"	v
assumption_2	test/builtins/Unit/fixxfdi_test.c	/^char assumption_2[sizeof(su_int)*CHAR_BIT == 32] = {0};$/;"	v
assumption_2	test/builtins/Unit/fixxfti_test.c	/^char assumption_2[sizeof(su_int)*CHAR_BIT == 32] = {0};$/;"	v
assumption_2	test/builtins/Unit/floatdidf_test.c	/^char assumption_2[sizeof(di_int)*CHAR_BIT == 64] = {0};$/;"	v
assumption_2	test/builtins/Unit/floatdisf_test.c	/^char assumption_2[sizeof(di_int)*CHAR_BIT == 64] = {0};$/;"	v
assumption_2	test/builtins/Unit/floatdixf_test.c	/^char assumption_2[sizeof(di_int)*CHAR_BIT == 64] = {0};$/;"	v
assumption_2	test/builtins/Unit/floattidf_test.c	/^char assumption_2[sizeof(ti_int)*CHAR_BIT == 128] = {0};$/;"	v
assumption_2	test/builtins/Unit/floattisf_test.c	/^char assumption_2[sizeof(ti_int)*CHAR_BIT == 128] = {0};$/;"	v
assumption_2	test/builtins/Unit/floattitf_test.c	/^char assumption_2[sizeof(ti_int)*CHAR_BIT == 128] = {0};$/;"	v
assumption_2	test/builtins/Unit/floattixf_test.c	/^char assumption_2[sizeof(ti_int)*CHAR_BIT == 128] = {0};$/;"	v
assumption_2	test/builtins/Unit/floatundidf_test.c	/^char assumption_2[sizeof(di_int)*CHAR_BIT == 64] = {0};$/;"	v
assumption_2	test/builtins/Unit/floatundisf_test.c	/^char assumption_2[sizeof(du_int)*CHAR_BIT == 64] = {0};$/;"	v
assumption_2	test/builtins/Unit/floatundixf_test.c	/^char assumption_2[sizeof(du_int)*CHAR_BIT == 64] = {0};$/;"	v
assumption_2	test/builtins/Unit/floatuntidf_test.c	/^char assumption_2[sizeof(ti_int)*CHAR_BIT == 128] = {0};$/;"	v
assumption_2	test/builtins/Unit/floatuntisf_test.c	/^char assumption_2[sizeof(tu_int)*CHAR_BIT == 128] = {0};$/;"	v
assumption_2	test/builtins/Unit/floatuntitf_test.c	/^char assumption_2[sizeof(tu_int)*CHAR_BIT == 128] = {0};$/;"	v
assumption_2	test/builtins/Unit/floatuntixf_test.c	/^char assumption_2[sizeof(tu_int)*CHAR_BIT == 128] = {0};$/;"	v
assumption_2	test/builtins/Unit/paritydi2_test.c	/^char assumption_2[sizeof(si_int)*CHAR_BIT == 32] = {0};$/;"	v
assumption_2	test/builtins/Unit/paritysi2_test.c	/^char assumption_2[sizeof(si_int)*CHAR_BIT == 32] = {0};$/;"	v
assumption_2	test/builtins/Unit/parityti2_test.c	/^char assumption_2[sizeof(di_int)*CHAR_BIT == 64] = {0};$/;"	v
assumption_2	test/builtins/Unit/popcountdi2_test.c	/^char assumption_2[sizeof(si_int)*CHAR_BIT == 32] = {0};$/;"	v
assumption_2	test/builtins/Unit/popcountsi2_test.c	/^char assumption_2[sizeof(si_int)*CHAR_BIT == 32] = {0};$/;"	v
assumption_2	test/builtins/Unit/popcountti2_test.c	/^char assumption_2[sizeof(di_int)*CHAR_BIT == 64] = {0};$/;"	v
assumption_3	test/builtins/Unit/fixdfdi_test.c	/^char assumption_3[sizeof(double)*CHAR_BIT == 64] = {0};$/;"	v
assumption_3	test/builtins/Unit/fixdfti_test.c	/^char assumption_3[sizeof(double)*CHAR_BIT == 64] = {0};$/;"	v
assumption_3	test/builtins/Unit/fixsfdi_test.c	/^char assumption_3[sizeof(float)*CHAR_BIT == 32] = {0};$/;"	v
assumption_3	test/builtins/Unit/fixsfti_test.c	/^char assumption_3[sizeof(float)*CHAR_BIT == 32] = {0};$/;"	v
assumption_3	test/builtins/Unit/fixunsdfdi_test.c	/^char assumption_3[sizeof(double)*CHAR_BIT == 64] = {0};$/;"	v
assumption_3	test/builtins/Unit/fixunsdfsi_test.c	/^char assumption_3[sizeof(double)*CHAR_BIT == 64] = {0};$/;"	v
assumption_3	test/builtins/Unit/fixunsdfti_test.c	/^char assumption_3[sizeof(double)*CHAR_BIT == 64] = {0};$/;"	v
assumption_3	test/builtins/Unit/fixunssfdi_test.c	/^char assumption_3[sizeof(float)*CHAR_BIT == 32] = {0};$/;"	v
assumption_3	test/builtins/Unit/fixunssfsi_test.c	/^char assumption_3[sizeof(float)*CHAR_BIT == 32] = {0};$/;"	v
assumption_3	test/builtins/Unit/fixunssfti_test.c	/^char assumption_3[sizeof(float)*CHAR_BIT == 32] = {0};$/;"	v
assumption_3	test/builtins/Unit/fixunstfdi_test.c	/^char assumption_3[sizeof(long double)*CHAR_BIT == 128] = {0};$/;"	v
assumption_3	test/builtins/Unit/fixunstfti_test.c	/^char assumption_3[sizeof(long double)*CHAR_BIT == 128] = {0};$/;"	v
assumption_3	test/builtins/Unit/fixunsxfdi_test.c	/^char assumption_3[sizeof(long double)*CHAR_BIT == 128] = {0};$/;"	v
assumption_3	test/builtins/Unit/fixunsxfsi_test.c	/^char assumption_3[sizeof(long double)*CHAR_BIT == 128] = {0};$/;"	v
assumption_3	test/builtins/Unit/fixunsxfti_test.c	/^char assumption_3[sizeof(long double)*CHAR_BIT == 128] = {0};$/;"	v
assumption_3	test/builtins/Unit/fixxfdi_test.c	/^char assumption_3[sizeof(long double)*CHAR_BIT == 128] = {0};$/;"	v
assumption_3	test/builtins/Unit/fixxfti_test.c	/^char assumption_3[sizeof(long double)*CHAR_BIT == 128] = {0};$/;"	v
assumption_3	test/builtins/Unit/floatdidf_test.c	/^char assumption_3[sizeof(double)*CHAR_BIT == 64] = {0};$/;"	v
assumption_3	test/builtins/Unit/floatdisf_test.c	/^char assumption_3[sizeof(float)*CHAR_BIT == 32] = {0};$/;"	v
assumption_3	test/builtins/Unit/floatdixf_test.c	/^char assumption_3[sizeof(long double)*CHAR_BIT == 128] = {0};$/;"	v
assumption_3	test/builtins/Unit/floattidf_test.c	/^char assumption_3[sizeof(double)*CHAR_BIT == 64] = {0};$/;"	v
assumption_3	test/builtins/Unit/floattisf_test.c	/^char assumption_3[sizeof(float)*CHAR_BIT == 32] = {0};$/;"	v
assumption_3	test/builtins/Unit/floattitf_test.c	/^char assumption_3[sizeof(fp_t)*CHAR_BIT == 128] = {0};$/;"	v
assumption_3	test/builtins/Unit/floattixf_test.c	/^char assumption_3[sizeof(long double)*CHAR_BIT == 128] = {0};$/;"	v
assumption_3	test/builtins/Unit/floatundidf_test.c	/^char assumption_3[sizeof(double)*CHAR_BIT == 64] = {0};$/;"	v
assumption_3	test/builtins/Unit/floatundisf_test.c	/^char assumption_3[sizeof(float)*CHAR_BIT == 32] = {0};$/;"	v
assumption_3	test/builtins/Unit/floatundixf_test.c	/^char assumption_3[sizeof(long double)*CHAR_BIT == 128] = {0};$/;"	v
assumption_3	test/builtins/Unit/floatuntidf_test.c	/^char assumption_3[sizeof(double)*CHAR_BIT == 64] = {0};$/;"	v
assumption_3	test/builtins/Unit/floatuntisf_test.c	/^char assumption_3[sizeof(float)*CHAR_BIT == 32] = {0};$/;"	v
assumption_3	test/builtins/Unit/floatuntitf_test.c	/^char assumption_3[sizeof(fp_t)*CHAR_BIT == 128] = {0};$/;"	v
assumption_3	test/builtins/Unit/floatuntixf_test.c	/^char assumption_3[sizeof(long double)*CHAR_BIT == 128] = {0};$/;"	v
at_dlclose	test/asan/TestCases/Posix/dlclose-test.cc	/^void at_dlclose() {$/;"	f
at_dlopen	test/asan/TestCases/Posix/dlclose-test.cc	/^void at_dlopen() {$/;"	f
at_exit	lib/sanitizer_common/tests/sanitizer_allocator_testlib.cc	/^static AtExit at_exit;$/;"	m	namespace:__anon59	file:
at_exit_wrapper	lib/tsan/rtl/tsan_interceptors.cc	/^static void at_exit_wrapper() {$/;"	f	file:
at_scope_exit	lib/fuzzer/FuzzerUtilFuchsia.cpp	/^RunOnDestruction<Fn> at_scope_exit(Fn fn) {$/;"	f	namespace:fuzzer
at_scope_exit	lib/sanitizer_common/sanitizer_common.h	/^RunOnDestruction<Fn> at_scope_exit(Fn fn) {$/;"	f	namespace:__sanitizer
atexit0	test/tsan/atexit2.cc	/^static void atexit0() {$/;"	f	file:
atexit0	test/tsan/atexit3.cc	/^static void atexit0() {$/;"	f	file:
atexit1	test/tsan/atexit2.cc	/^static void atexit1() {$/;"	f	file:
atexit1	test/tsan/atexit3.cc	/^static void atexit1() {$/;"	f	file:
atexit2	test/tsan/atexit3.cc	/^static void atexit2() {$/;"	f	file:
atexit3	test/tsan/atexit3.cc	/^static void atexit3() {$/;"	f	file:
atexit4	test/tsan/atexit3.cc	/^static void atexit4() {$/;"	f	file:
atexit5	test/tsan/atexit3.cc	/^static void atexit5() {$/;"	f	file:
atexit_functions	lib/sanitizer_common/sanitizer_win.cc	/^InternalMmapVectorNoCtor<void (*)(void)> atexit_functions;$/;"	m	namespace:__sanitizer	file:
atexit_mu	lib/tsan/rtl/tsan_interceptors.cc	/^  BlockingMutex atexit_mu;$/;"	m	struct:__tsan::InterceptorContext	file:
atfork	test/tsan/pthread_atfork_deadlock.c	/^void atfork() {$/;"	f
atoi	lib/asan/asan_win_dll_thunk.cc	/^INTERCEPT_LIBRARY_FUNCTION(atoi);$/;"	v
atol	lib/asan/asan_win_dll_thunk.cc	/^INTERCEPT_LIBRARY_FUNCTION(atol);$/;"	v
atomic	lib/tsan/rtl/tsan_report.h	/^  bool atomic;$/;"	m	struct:__tsan::ReportMop
atomic_compare_exchange_strong	lib/sanitizer_common/sanitizer_atomic_clang.h	/^INLINE bool atomic_compare_exchange_strong(volatile T *a, typename T::Type *cmp,$/;"	f	namespace:__sanitizer
atomic_compare_exchange_strong	lib/sanitizer_common/sanitizer_atomic_clang_mips.h	/^INLINE bool atomic_compare_exchange_strong(volatile atomic_uint64_t *ptr,$/;"	f	namespace:__sanitizer
atomic_compare_exchange_strong	lib/sanitizer_common/sanitizer_atomic_msvc.h	/^INLINE bool atomic_compare_exchange_strong(volatile atomic_uint16_t *a,$/;"	f	namespace:__sanitizer
atomic_compare_exchange_strong	lib/sanitizer_common/sanitizer_atomic_msvc.h	/^INLINE bool atomic_compare_exchange_strong(volatile atomic_uint32_t *a,$/;"	f	namespace:__sanitizer
atomic_compare_exchange_strong	lib/sanitizer_common/sanitizer_atomic_msvc.h	/^INLINE bool atomic_compare_exchange_strong(volatile atomic_uint64_t *a,$/;"	f	namespace:__sanitizer
atomic_compare_exchange_strong	lib/sanitizer_common/sanitizer_atomic_msvc.h	/^INLINE bool atomic_compare_exchange_strong(volatile atomic_uint8_t *a,$/;"	f	namespace:__sanitizer
atomic_compare_exchange_strong	lib/sanitizer_common/sanitizer_atomic_msvc.h	/^INLINE bool atomic_compare_exchange_strong(volatile atomic_uintptr_t *a,$/;"	f	namespace:__sanitizer
atomic_compare_exchange_weak	lib/sanitizer_common/sanitizer_atomic_clang.h	/^INLINE bool atomic_compare_exchange_weak(volatile T *a,$/;"	f	namespace:__sanitizer
atomic_compare_exchange_weak	lib/sanitizer_common/sanitizer_atomic_msvc.h	/^INLINE bool atomic_compare_exchange_weak(volatile T *a,$/;"	f	namespace:__sanitizer
atomic_dfsan_label	lib/dfsan/dfsan.cc	/^typedef atomic_uint16_t atomic_dfsan_label;$/;"	t	file:
atomic_exchange	lib/sanitizer_common/sanitizer_atomic_clang.h	/^INLINE typename T::Type atomic_exchange(volatile T *a,$/;"	f	namespace:__sanitizer
atomic_exchange	lib/sanitizer_common/sanitizer_atomic_msvc.h	/^INLINE u16 atomic_exchange(volatile atomic_uint16_t *a,$/;"	f	namespace:__sanitizer
atomic_exchange	lib/sanitizer_common/sanitizer_atomic_msvc.h	/^INLINE u32 atomic_exchange(volatile atomic_uint32_t *a,$/;"	f	namespace:__sanitizer
atomic_exchange	lib/sanitizer_common/sanitizer_atomic_msvc.h	/^INLINE u8 atomic_exchange(volatile atomic_uint8_t *a,$/;"	f	namespace:__sanitizer
atomic_fetch_add	lib/sanitizer_common/sanitizer_atomic_clang.h	/^INLINE typename T::Type atomic_fetch_add(volatile T *a,$/;"	f	namespace:__sanitizer
atomic_fetch_add	lib/sanitizer_common/sanitizer_atomic_clang_mips.h	/^INLINE atomic_uint64_t::Type atomic_fetch_add(volatile atomic_uint64_t *ptr,$/;"	f	namespace:__sanitizer
atomic_fetch_add	lib/sanitizer_common/sanitizer_atomic_msvc.h	/^INLINE u32 atomic_fetch_add(volatile atomic_uint32_t *a,$/;"	f	namespace:__sanitizer
atomic_fetch_add	lib/sanitizer_common/sanitizer_atomic_msvc.h	/^INLINE uptr atomic_fetch_add(volatile atomic_uintptr_t *a,$/;"	f	namespace:__sanitizer
atomic_fetch_sub	lib/sanitizer_common/sanitizer_atomic_clang.h	/^INLINE typename T::Type atomic_fetch_sub(volatile T *a,$/;"	f	namespace:__sanitizer
atomic_fetch_sub	lib/sanitizer_common/sanitizer_atomic_clang_mips.h	/^INLINE atomic_uint64_t::Type atomic_fetch_sub(volatile atomic_uint64_t *ptr,$/;"	f	namespace:__sanitizer
atomic_fetch_sub	lib/sanitizer_common/sanitizer_atomic_msvc.h	/^INLINE u32 atomic_fetch_sub(volatile atomic_uint32_t *a,$/;"	f	namespace:__sanitizer
atomic_fetch_sub	lib/sanitizer_common/sanitizer_atomic_msvc.h	/^INLINE uptr atomic_fetch_sub(volatile atomic_uintptr_t *a,$/;"	f	namespace:__sanitizer
atomic_flag_clear	lib/builtins/atomic_flag_clear.c	/^void atomic_flag_clear(volatile atomic_flag *object) {$/;"	f
atomic_flag_clear	lib/builtins/atomic_flag_clear.c	22;"	d	file:
atomic_flag_clear_explicit	lib/builtins/atomic_flag_clear_explicit.c	/^void atomic_flag_clear_explicit(volatile atomic_flag *object,$/;"	f
atomic_flag_clear_explicit	lib/builtins/atomic_flag_clear_explicit.c	22;"	d	file:
atomic_flag_test_and_set	lib/builtins/atomic_flag_test_and_set.c	/^_Bool atomic_flag_test_and_set(volatile atomic_flag *object) {$/;"	f
atomic_flag_test_and_set	lib/builtins/atomic_flag_test_and_set.c	22;"	d	file:
atomic_flag_test_and_set_explicit	lib/builtins/atomic_flag_test_and_set_explicit.c	/^_Bool atomic_flag_test_and_set_explicit(volatile atomic_flag *object,$/;"	f
atomic_flag_test_and_set_explicit	lib/builtins/atomic_flag_test_and_set_explicit.c	22;"	d	file:
atomic_load	lib/sanitizer_common/sanitizer_atomic_clang_mips.h	/^INLINE atomic_uint64_t::Type atomic_load(const volatile atomic_uint64_t *ptr,$/;"	f	namespace:__sanitizer
atomic_load	lib/sanitizer_common/sanitizer_atomic_clang_other.h	/^INLINE typename T::Type atomic_load($/;"	f	namespace:__sanitizer
atomic_load	lib/sanitizer_common/sanitizer_atomic_clang_x86.h	/^INLINE typename T::Type atomic_load($/;"	f	namespace:__sanitizer
atomic_load	lib/sanitizer_common/sanitizer_atomic_msvc.h	/^INLINE typename T::Type atomic_load($/;"	f	namespace:__sanitizer
atomic_load_relaxed	lib/sanitizer_common/sanitizer_atomic.h	/^INLINE typename T::Type atomic_load_relaxed(const volatile T *a) {$/;"	f	namespace:__sanitizer
atomic_signal_fence	lib/builtins/atomic_signal_fence.c	/^void atomic_signal_fence(memory_order order) {$/;"	f
atomic_signal_fence	lib/builtins/atomic_signal_fence.c	22;"	d	file:
atomic_signal_fence	lib/sanitizer_common/sanitizer_atomic_clang.h	/^INLINE void atomic_signal_fence(memory_order) {$/;"	f	namespace:__sanitizer
atomic_signal_fence	lib/sanitizer_common/sanitizer_atomic_msvc.h	/^INLINE void atomic_signal_fence(memory_order) {$/;"	f	namespace:__sanitizer
atomic_sint32_t	lib/sanitizer_common/sanitizer_atomic.h	/^struct atomic_sint32_t {$/;"	s	namespace:__sanitizer
atomic_store	lib/sanitizer_common/sanitizer_atomic_clang_mips.h	/^INLINE void atomic_store(volatile atomic_uint64_t *ptr, atomic_uint64_t::Type v,$/;"	f	namespace:__sanitizer
atomic_store	lib/sanitizer_common/sanitizer_atomic_clang_other.h	/^INLINE void atomic_store(volatile T *a, typename T::Type v, memory_order mo) {$/;"	f	namespace:__sanitizer
atomic_store	lib/sanitizer_common/sanitizer_atomic_clang_x86.h	/^INLINE void atomic_store(volatile T *a, typename T::Type v, memory_order mo) {$/;"	f	namespace:__sanitizer
atomic_store	lib/sanitizer_common/sanitizer_atomic_msvc.h	/^INLINE void atomic_store(volatile T *a, typename T::Type v, memory_order mo) {$/;"	f	namespace:__sanitizer
atomic_store_relaxed	lib/sanitizer_common/sanitizer_atomic.h	/^INLINE void atomic_store_relaxed(volatile T *a, typename T::Type v) {$/;"	f	namespace:__sanitizer
atomic_thread_fence	lib/builtins/atomic_thread_fence.c	/^void atomic_thread_fence(memory_order order) {$/;"	f
atomic_thread_fence	lib/builtins/atomic_thread_fence.c	22;"	d	file:
atomic_thread_fence	lib/sanitizer_common/sanitizer_atomic_clang.h	/^INLINE void atomic_thread_fence(memory_order) {$/;"	f	namespace:__sanitizer
atomic_thread_fence	lib/sanitizer_common/sanitizer_atomic_msvc.h	/^INLINE void atomic_thread_fence(memory_order) {$/;"	f	namespace:__sanitizer
atomic_uint16_t	lib/sanitizer_common/sanitizer_atomic.h	/^struct atomic_uint16_t {$/;"	s	namespace:__sanitizer
atomic_uint32_t	lib/sanitizer_common/sanitizer_atomic.h	/^struct atomic_uint32_t {$/;"	s	namespace:__sanitizer
atomic_uint64_t	lib/sanitizer_common/sanitizer_atomic.h	/^struct atomic_uint64_t {$/;"	s	namespace:__sanitizer
atomic_uint8_t	lib/sanitizer_common/sanitizer_atomic.h	/^struct atomic_uint8_t {$/;"	s	namespace:__sanitizer
atomic_uintptr_t	lib/sanitizer_common/sanitizer_atomic.h	/^struct atomic_uintptr_t {$/;"	s	namespace:__sanitizer
atomics	test/tsan/atomic_norace.cc	/^T atomics[kTestCount * 2];$/;"	v
atomics	test/tsan/atomic_race.cc	/^T atomics[kTestCount * 2];$/;"	v
attr_list	test/msan/Linux/xattr.cc	/^void test_get(ssize_t fun(const char *, char *, size_t), const char *attr_list,$/;"	v
available_nodes_	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  BV available_nodes_;$/;"	m	class:__sanitizer::DeadlockDetector
b	lib/asan/tests/asan_test.cc	/^  int b:24;$/;"	m	struct:StructWithBitFields_8_24	file:
b	lib/msan/tests/msan_test.cc	/^  S2 b;$/;"	m	struct:SSS8	file:
b	lib/msan/tests/msan_test.cc	/^  S8 b;$/;"	m	struct:SSS7	file:
b	lib/msan/tests/msan_test.cc	/^  U2 b;$/;"	m	struct:__anon9::S	file:
b	lib/msan/tests/msan_test.cc	/^  U8  b;$/;"	m	struct:StructWithHole	file:
b	lib/msan/tests/msan_test.cc	/^  double b;$/;"	m	struct:SSS6	file:
b	lib/msan/tests/msan_test.cc	/^  float b;$/;"	m	struct:SSS5	file:
b	lib/msan/tests/msan_test.cc	/^  int a, b, c, d, e, f;$/;"	m	struct:StructByVal	file:
b	lib/msan/tests/msan_test.cc	/^  int a, b, c;$/;"	m	struct:SSS1	file:
b	lib/msan/tests/msan_test.cc	/^  int b, a, c;$/;"	m	struct:SSS2	file:
b	lib/msan/tests/msan_test.cc	/^  int b, c, a;$/;"	m	struct:SSS3	file:
b	lib/msan/tests/msan_test.cc	/^  int c, b, a;$/;"	m	struct:SSS4	file:
b	lib/tsan/rtl/tsan_md5.cc	/^  MD5_u32plus a, b, c, d;$/;"	m	struct:__tsan::__anon18	file:
b	test/BlocksRuntime/small-struct.c	/^  int b;$/;"	m	struct:__anon143	file:
b	test/asan/TestCases/Linux/aligned_delete_test.cc	/^struct S12 { int a, b, c; };$/;"	m	struct:S12	file:
b	test/asan/TestCases/Linux/sized_delete_test.cc	/^  int a, b, c, d, e;$/;"	m	struct:D2	file:
b	test/asan/TestCases/Linux/sized_delete_test.cc	/^  int a, b, c, d, e;$/;"	m	struct:S20	file:
b	test/asan/TestCases/Linux/sized_delete_test.cc	/^  int a, b, c;$/;"	m	struct:D1	file:
b	test/asan/TestCases/Linux/sized_delete_test.cc	/^  int a, b, c;$/;"	m	struct:S12	file:
b	test/asan/TestCases/alloca_detect_custom_size_.cc	/^  int b[3];$/;"	m	struct:A	file:
b	test/asan/TestCases/init-order-atexit.cc	/^B b;$/;"	v
b	test/asan/TestCases/pr33372.cc	/^struct B { A a; \/*gap*\/ long b; };$/;"	m	struct:B	file:
b	test/asan/TestCases/use-after-scope-if.cc	/^bool b = true;$/;"	v
b	test/asan/TestCases/vla_chrome_testcase.cc	/^int b;$/;"	v
b	test/builtins/Unit/comparedf2_test.c	/^    double b;$/;"	m	struct:TestVector	file:
b	test/builtins/Unit/comparesf2_test.c	/^    float b;$/;"	m	struct:TestVector	file:
b	test/msan/dtor-bit-fields.cc	/^  unsigned int b : 1;$/;"	m	struct:Packed	file:
b	test/msan/dtor-bit-fields.cc	/^  unsigned int b : 2;$/;"	m	struct:Anon	file:
b	test/msan/dtor-trivial.cpp	/^  int b;$/;"	m	struct:Trivial	file:
b	test/msan/mul_by_const.cc	/^  int b;$/;"	m	struct:S	file:
b	test/profile/Inputs/comdat_rename.h	/^  int volatile b;$/;"	m	struct:FOO
b	test/profile/Inputs/instrprof-dynamic-b.cpp	/^void b() {$/;"	f
b	test/sanitizer_common/TestCases/Linux/new_delete_test.cc	/^struct S12 { int a, b, c; };$/;"	m	struct:S12	file:
b	test/scudo/aligned-new.cpp	/^struct S12 { int a, b, c; };$/;"	m	struct:S12	file:
b	test/ubsan/TestCases/TypeCheck/vptr.cpp	/^  int b;$/;"	m	struct:T	file:
b1	lib/msan/tests/msan_test.cc	/^  U1 a1, b1;$/;"	m	struct:LongStruct	file:
b1	test/cfi/mfcall.cpp	/^  void b1() {}$/;"	f	struct:SBase1
b2	lib/msan/tests/msan_test.cc	/^  U2 a2, b2;$/;"	m	struct:LongStruct	file:
b2	test/cfi/mfcall.cpp	/^  void b2() {}$/;"	f	struct:SBase2
b4	lib/msan/tests/msan_test.cc	/^  U4 a4, b4;$/;"	m	struct:LongStruct	file:
b4	test/dfsan/trace-cmp.c	/^uint32_t a4, b4;$/;"	v
b8	lib/msan/tests/msan_test.cc	/^  U8 a8, b8;$/;"	m	struct:LongStruct	file:
b8	test/dfsan/trace-cmp.c	/^uint64_t a8, b8;$/;"	v
back	lib/esan/esan_circular_buffer.h	/^  T &back() {$/;"	f	class:__esan::CircularBuffer
back	lib/sanitizer_common/sanitizer_common.h	/^  T &back() {$/;"	f	class:__sanitizer::InternalMmapVectorNoCtor
back	lib/sanitizer_common/sanitizer_list.h	/^  Item *back() { return last_; }$/;"	f	struct:__sanitizer::IntrusiveList
back	lib/sanitizer_common/sanitizer_list.h	/^  const Item *back() const { return last_; }$/;"	f	struct:__sanitizer::IntrusiveList
back	lib/xray/xray_segmented_array.h	/^  T &back() const {$/;"	f	class:__xray::Array
background_thread	lib/tsan/rtl/tsan_rtl.h	/^  void *background_thread;$/;"	m	struct:__tsan::Context
backtrace_frame_t	lib/sanitizer_common/sanitizer_unwind_linux_libcdep.cc	/^} backtrace_frame_t;$/;"	t	namespace:__sanitizer	typeref:struct:__sanitizer::__anon62	file:
bad	test/asan/TestCases/Posix/halt_on_error-signals.c	/^volatile char bad[2] = {1, };$/;"	v
bad	test/fuzzer/OnlySomeBytesTest.cpp	/^__attribute__((noinline)) void bad() {$/;"	f
badGlobal	test/asan/TestCases/Helpers/initialization-blacklist-extra.cc	/^int badGlobal = zero_init();$/;"	v
badGlobal	test/asan/TestCases/blacklist.cc	/^__attribute__((aligned(16))) int badGlobal;$/;"	v
badNamespace	test/asan/TestCases/Helpers/initialization-blacklist-extra.cc	/^namespace badNamespace {$/;"	n	file:
badSrcGlobal	test/asan/TestCases/Helpers/initialization-blacklist-extra2.cc	/^int badSrcGlobal = zero_init();$/;"	v
bad_addr	lib/asan/asan_descriptions.h	/^  uptr bad_addr;$/;"	m	struct:__asan::ChunkAccess
bad_function	test/asan/TestCases/strcat-overlap.cc	/^__attribute__((noinline)) void bad_function() {$/;"	f
bad_function	test/asan/TestCases/strcpy-overlap.cc	/^__attribute__((noinline)) void bad_function() {$/;"	f
bad_function	test/asan/TestCases/strncat-overlap.cc	/^__attribute__((noinline)) void bad_function() {$/;"	f
bad_function	test/asan/TestCases/strncpy-overlap.cc	/^__attribute__((noinline)) void bad_function() {$/;"	f
bad_object	test/asan/TestCases/Helpers/initialization-blacklist-extra.cc	/^BadClass bad_object;$/;"	m	namespace:badNamespace	file:
badguy	test/tsan/longjmp3.cc	/^void badguy() {$/;"	f
badguy	test/tsan/longjmp4.cc	/^void badguy() {$/;"	f
bar	lib/tsan/tests/rtl/tsan_mop.cc	/^static void bar() {$/;"	f	file:
bar	lib/tsan/tests/rtl/tsan_test.cc	/^static void bar() {}$/;"	f	file:
bar	test/BlocksRuntime/constassign.c	/^void bar(void) { printf("I'm in bar\\n"); }$/;"	f
bar	test/asan/TestCases/Linux/local_alias.cc	/^int bar() {$/;"	f
bar	test/asan/TestCases/Posix/coverage-fork.cc	/^void bar() { printf("bar\\n"); }$/;"	f
bar	test/asan/TestCases/Posix/coverage-module-unloaded.cc	/^void bar() { printf("bar\\n"); }$/;"	f
bar	test/asan/TestCases/Posix/coverage.cc	/^void bar() { printf("bar\\n"); }$/;"	f
bar	test/asan/TestCases/Posix/init-order-pthread-create.cc	/^void *bar(void *input, bool sleep_before_init) {$/;"	f
bar	test/asan/TestCases/Posix/invalid-pointer-pairs-threads.cc	/^pthread_barrier_t bar;$/;"	v
bar	test/asan/TestCases/Windows/coverage-basic.cc	/^void bar() { fputs("BAR", stderr); }$/;"	f
bar	test/asan/TestCases/Windows/demangled_names.cc	/^void bar(char *p) {$/;"	f	namespace:foo
bar	test/asan/TestCases/Windows/use_after_return_linkage.cc	/^__declspec(dllexport) void bar() {$/;"	f
bar	test/asan/TestCases/coverage-trace-pc.cc	/^__attribute__((noinline)) void bar() { printf("bar\\n"); }$/;"	f
bar	test/asan/TestCases/invalid-pointer-pairs-compare-success.cc	/^int bar(char *p, char *q) {$/;"	f
bar	test/asan/TestCases/invalid-pointer-pairs-subtract-success.cc	/^int bar(char *p, char *q) {$/;"	f
bar	test/asan/TestCases/pass-object-byval.cc	/^int bar(A *a) {$/;"	f
bar	test/asan/TestCases/pass-struct-byval.cc	/^int bar(A *a) {$/;"	f
bar	test/builtins/Unit/gcc_personality_test.c	/^void bar() {$/;"	f
bar	test/profile/Inputs/extern_template2.cpp	/^int bar() {$/;"	f
bar	test/profile/Inputs/instrprof-comdat-2.cpp	/^int bar(int I) {$/;"	f
bar	test/profile/Inputs/instrprof-dynamic-header.h	/^template <class T> void bar(int X) {$/;"	f
bar	test/profile/Inputs/instrprof-icall-promo_2.cc	/^int A::bar() { return 2; }$/;"	f	class:A
bar	test/profile/Inputs/instrprof-merge-match-lib.c	/^void bar(char c) {$/;"	f
bar	test/profile/Inputs/instrprof-shared-main-gcov-flush.c	/^void bar(int n) {$/;"	f
bar	test/profile/Linux/counter_promo_for.c	/^__attribute__((noinline)) void bar(int i) { g += i; }$/;"	f
bar	test/profile/Linux/counter_promo_nest.c	/^__attribute__((noinline)) void bar() {$/;"	f
bar	test/profile/Linux/counter_promo_while.c	/^__attribute__((noinline)) void bar(int i) { g += i; }$/;"	f
bar	test/profile/Linux/coverage_test.cpp	/^void bar() {          \/\/ CHECK:  [[@LINE]]| 1|void bar() {$/;"	f
bar	test/profile/Linux/instrprof-merge-vp.c	/^void bar(void) {$/;"	f
bar	test/profile/Linux/instrprof-value-merge.c	/^__attribute__((noinline)) void bar() {$/;"	f
bar	test/profile/instrprof-dump.c	/^__attribute__((noinline)) int bar(int X) {$/;"	f
bar	test/profile/instrprof-merge.c	/^void bar(int M) { g += M; }$/;"	f
bar	test/profile/instrprof-override-filename-with-env.c	/^void bar () {}$/;"	f
bar	test/profile/instrprof-override-filename.c	/^void bar() {}$/;"	f
bar	test/sanitizer_common/TestCases/Posix/dedup_token_length_test.cc	/^extern "C" void bar() {$/;"	f
bar	test/sanitizer_common/TestCases/sanitizer_coverage_trace_pc_guard-dso.cc	/^int bar() {$/;"	f
bar	test/sanitizer_common/TestCases/sanitizer_coverage_trace_pc_guard-init.cc	/^int bar() {$/;"	f
bar	test/tsan/free_race2.c	/^void __attribute__((noinline)) bar(int *mem) {$/;"	f
bar	test/tsan/longjmp3.cc	/^void bar(jmp_buf env) {$/;"	f
bar	test/tsan/longjmp4.cc	/^void bar(jmp_buf env) {$/;"	f
bar	test/ubsan/TestCases/Misc/nonnull.cpp	/^__attribute__((returns_nonnull)) char *bar(int x, char *a) {$/;"	f
bar	test/xray/TestCases/Posix/coverage-sample.cc	/^[[clang::xray_always_instrument]] void bar() {$/;"	f
bar	test/xray/TestCases/Posix/custom-event-handler-alignment.cc	/^[[clang::xray_always_instrument]] void bar() {$/;"	f
bar	test/xray/TestCases/Posix/func-id-utils.cc	/^[[clang::xray_always_instrument]] void bar(){}$/;"	f
bar	test/xray/TestCases/Posix/pic_test.cc	/^unsigned short bar (unsigned short a)$/;"	f
bar1	test/asan/TestCases/Linux/coverage-missing.cc	/^void bar1() { fprintf(stderr, "bar1\\n"); }$/;"	f
bar1	test/asan/TestCases/Posix/coverage-reset.cc	/^void bar1() { printf("bar1\\n"); }$/;"	f
bar1	test/profile/Inputs/instrprof-shared-main-gcov-flush.c	/^int bar1 = 0;$/;"	v
bar1	test/tsan/simple_stack.c	/^void __attribute__((noinline)) bar1() {$/;"	f
bar1	test/tsan/simple_stack2.cc	/^void __attribute__((noinline)) bar1() {$/;"	f
bar2	test/asan/TestCases/Linux/coverage-missing.cc	/^void bar2() { fprintf(stderr, "bar2\\n"); }$/;"	f
bar2	test/asan/TestCases/Posix/coverage-reset.cc	/^void bar2() { printf("bar2\\n"); }$/;"	f
bar2	test/profile/Inputs/instrprof-shared-main-gcov-flush.c	/^int bar2 = 1;$/;"	v
bar2	test/tsan/simple_stack.c	/^void __attribute__((noinline)) bar2() {$/;"	f
bar2	test/tsan/simple_stack2.cc	/^void __attribute__((noinline)) bar2() {$/;"	f
bar3	test/asan/TestCases/Linux/coverage-missing.cc	/^void bar3() { fprintf(stderr, "bar3\\n"); }$/;"	f
bar_clean	test/builtins/Unit/gcc_personality_test_helper.cxx	/^void bar_clean(void* x)$/;"	f
bar_clean_called	test/builtins/Unit/gcc_personality_test_helper.cxx	/^static bool bar_clean_called = false;$/;"	v	file:
bar_x	test/builtins/Unit/gcc_personality_test_helper.cxx	/^static int* bar_x = NULL;$/;"	v	file:
barbaz	test/tsan/java_race_pc.cc	/^void barbaz() {$/;"	f
barfoo	lib/tsan/go/test.c	/^void barfoo() {}$/;"	f
barfoo	test/tsan/stack_sync_reuse.cc	/^void __attribute__((noinline)) barfoo() {$/;"	f
barrier	test/tsan/barrier.cc	/^pthread_barrier_t barrier;$/;"	v
barrier	test/tsan/must_deadlock.cc	/^pthread_barrier_t barrier;$/;"	v
barrier	test/tsan/test.h	/^invisible_barrier_t barrier;$/;"	v
barrier_init	test/tsan/test.h	/^static inline void barrier_init(invisible_barrier_t *barrier, unsigned count) {$/;"	f
barrier_wait	test/tsan/test.h	/^static inline void barrier_wait(invisible_barrier_t *barrier) {$/;"	f
base	lib/sanitizer_common/sanitizer_common.h	/^  void *base() const { return base_; }$/;"	f	class:__sanitizer::ReservedAddressRange
base_	lib/sanitizer_common/sanitizer_common.h	/^  void* base_;$/;"	m	class:__sanitizer::ReservedAddressRange
base_a	test/msan/dtor-multiple-inheritance-nontrivial-class-members.cc	/^  int base_a;$/;"	m	struct:Base	file:
base_address	lib/sanitizer_common/sanitizer_common.h	/^  uptr base_address() const { return base_address_; }$/;"	f	class:__sanitizer::LoadedModule
base_address	lib/sanitizer_common/sanitizer_win.cc	/^  uptr base_address;$/;"	m	struct:__sanitizer::__anon76::ModuleInfo	file:
base_address_	lib/sanitizer_common/sanitizer_common.h	/^  uptr base_address_;$/;"	m	class:__sanitizer::LoadedModule
base_b	test/msan/dtor-multiple-inheritance-nontrivial-class-members.cc	/^  double base_b;$/;"	m	struct:Base	file:
base_count	lib/ubsan/ubsan_type_hash_itanium.cc	/^  unsigned int base_count;$/;"	m	class:__cxxabiv1::__vmi_class_type_info	file:
base_info	lib/ubsan/ubsan_type_hash_itanium.cc	/^  __base_class_type_info base_info[1];$/;"	m	class:__cxxabiv1::__vmi_class_type_info	file:
base_v	test/msan/dtor-multiple-inheritance-nontrivial-class-members.cc	/^  Vector<int> base_v;$/;"	m	struct:Base	file:
base_virt_addr	lib/sanitizer_common/sanitizer_procmaps_mac.cc	/^  uptr base_virt_addr;$/;"	m	struct:__sanitizer::MemoryMappedSegmentData	file:
basicFlags	lib/xray/xray_basic_flags.h	/^inline BasicFlags *basicFlags() { return &xray_basic_flags_dont_use_directly; }$/;"	f	namespace:__xray
batch	lib/sanitizer_common/sanitizer_allocator_local_cache.h	/^    void *batch[2 * TransferBatch::kMaxNumCached];$/;"	m	struct:SizeClassAllocator32LocalCache::PerClass
batch	lib/sanitizer_common/sanitizer_quarantine.h	/^  void *batch[kSize];$/;"	m	struct:__sanitizer::QuarantineBatch
batch_	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^    void *batch_[kMaxNumCached];$/;"	m	struct:SizeClassAllocator32::TransferBatch
batch_class_id	lib/sanitizer_common/sanitizer_allocator_local_cache.h	/^    uptr batch_class_id;$/;"	m	struct:SizeClassAllocator32LocalCache::PerClass
baz	test/asan/TestCases/Posix/coverage-fork.cc	/^void baz() { printf("baz\\n"); }$/;"	f
baz	test/asan/TestCases/Windows/demangled_names.cc	/^void baz(T t) {$/;"	f
baz	test/asan/TestCases/invalid-pointer-pairs-compare-success.cc	/^int baz(char *p, char *q) {$/;"	f
baz	test/sanitizer_common/TestCases/sanitizer_coverage_trace_pc_guard-dso.cc	/^int baz() {$/;"	f
baz	test/sanitizer_common/TestCases/sanitizer_coverage_trace_pc_guard-init.cc	/^int baz() {$/;"	f
baz	test/xray/TestCases/Posix/coverage-sample.cc	/^[[clang::xray_always_instrument]] void baz() {$/;"	f
bb	test/asan/TestCases/pr33372.cc	/^B *bb;$/;"	v
bbb	test/asan/TestCases/pr33372.cc	/^char bbb[100000];$/;"	v
bbb	test/tsan/virtual_inheritance_compile_bug.cc	/^struct BBB: virtual AAA { unsigned long bbb; };  \/\/ NOLINT$/;"	m	struct:BBB	file:
before_global_dtors	lib/asan/asan_win_dynamic_runtime_thunk.cc	/^__declspec(allocate(".CRT$XTW")) void* before_global_dtors = 0;$/;"	m	namespace:__anon49	file:
beg	lib/asan/asan_errors.h	/^  uptr beg, end, old_mid, new_mid;$/;"	m	struct:__asan::ErrorBadParamsToAnnotateContiguousContainer
beg	lib/asan/asan_interface_internal.h	/^    uptr beg;                \/\/ The address of the global.$/;"	m	struct:__asan_global
beg	lib/asan/asan_report.h	/^  uptr beg;$/;"	m	struct:__asan::StackVarDescr
beg	lib/sanitizer_common/sanitizer_common.h	/^    uptr beg;$/;"	m	struct:__sanitizer::LoadedModule::AddressRange
beg	lib/sanitizer_common/sanitizer_tls_get_addr.h	/^    uptr beg, size;$/;"	m	struct:__sanitizer::DTLS::DTV
begin	lib/esan/esan_hashtable.h	/^HashTable<KeyTy, DataTy, ExternalLock, HashFuncTy, EqualFuncTy>::begin() {$/;"	f	class:__esan::HashTable
begin	lib/fuzzer/FuzzerDictionary.h	/^  const DictionaryEntry *begin() const { return &DE[0]; }$/;"	f	class:fuzzer::Dictionary
begin	lib/lsan/lsan_common.h	/^  uptr begin;$/;"	m	struct:__lsan::RootRegion
begin	lib/sanitizer_common/sanitizer_common.h	/^  LoadedModule *begin() { return modules_.begin(); }$/;"	f	class:__sanitizer::ListOfModules
begin	lib/sanitizer_common/sanitizer_common.h	/^  T *begin() {$/;"	f	class:__sanitizer::InternalMmapVectorNoCtor
begin	lib/sanitizer_common/sanitizer_common.h	/^  const LoadedModule *begin() const { return modules_.begin(); }$/;"	f	class:__sanitizer::ListOfModules
begin	lib/sanitizer_common/sanitizer_common.h	/^  const T *begin() const {$/;"	f	class:__sanitizer::InternalMmapVectorNoCtor
begin	lib/sanitizer_common/sanitizer_libignore.h	/^    uptr begin;$/;"	m	struct:__sanitizer::LibIgnore::LibCodeRange
begin	lib/sanitizer_common/sanitizer_list.h	/^  ConstIterator begin() const { return ConstIterator(first_); }$/;"	f	struct:__sanitizer::IntrusiveList
begin	lib/sanitizer_common/sanitizer_list.h	/^  Iterator begin() { return Iterator(first_); }$/;"	f	struct:__sanitizer::IntrusiveList
begin	lib/xray/xray_buffer_queue.h	/^  iterator begin() const { return iterator(Buffers, 0, BufferCount); }$/;"	f	class:__xray::BufferQueue
begin	lib/xray/xray_segmented_array.h	/^  Iterator<T> begin() const { return Iterator<T>(Head, 0, Size); }$/;"	f	class:__xray::Array
begin	test/profile/Linux/instrprof-basic.c	/^int begin(int i) {$/;"	f
begin	test/profile/instrprof-basic.c	/^int begin(int i) {$/;"	f
begin_	lib/sanitizer_common/sanitizer_vector.h	/^  T *begin_;$/;"	m	class:__sanitizer::Vector
bench	test/tsan/bench_acquire_only.cc	/^void bench() {$/;"	f
bench	test/tsan/bench_acquire_release.cc	/^void bench() {$/;"	f
bench	test/tsan/bench_local_mutex.cc	/^void bench() {$/;"	f
bench	test/tsan/bench_mutex.cc	/^void bench() {$/;"	f
bench	test/tsan/bench_release_only.cc	/^void bench() {$/;"	f
bench	test/tsan/bench_rwmutex.cc	/^void bench() {$/;"	f
bench	test/tsan/bench_single_writer.cc	/^void bench() {$/;"	f
bench	test/tsan/bench_ten_mutexes.cc	/^void bench() {$/;"	f
bench_niter	test/tsan/bench.h	/^int bench_niter;$/;"	v
bench_nthread	test/tsan/bench.h	/^int bench_nthread;$/;"	v
benign	lib/tsan/rtl/tsan_interface_ann.cc	/^  ExpectRace benign;$/;"	m	struct:__tsan::DynamicAnnContext	file:
beyond_stack	test/xray/TestCases/Posix/basic-filtering.cc	/^[[clang::xray_always_instrument]] void __attribute__((noinline)) beyond_stack() {$/;"	f
bf1	lib/asan/tests/asan_test.cc	/^  int bf1:1;$/;"	m	struct:StructWithBitField	file:
bf1	test/asan/TestCases/Windows/bitfield.cc	/^  unsigned int bf1:1;$/;"	m	struct:_S	file:
bf1	test/asan/TestCases/Windows/bitfield_uaf.cc	/^  unsigned int bf1:1;$/;"	m	struct:_S	file:
bf2	lib/asan/tests/asan_test.cc	/^  int bf2:1;$/;"	m	struct:StructWithBitField	file:
bf2	test/asan/TestCases/Windows/bitfield.cc	/^  unsigned int bf2:2;$/;"	m	struct:_S	file:
bf2	test/asan/TestCases/Windows/bitfield_uaf.cc	/^  unsigned int bf2:2;$/;"	m	struct:_S	file:
bf3	lib/asan/tests/asan_test.cc	/^  int bf3:1;$/;"	m	struct:StructWithBitField	file:
bf3	test/asan/TestCases/Windows/bitfield.cc	/^  unsigned int bf3:3;$/;"	m	struct:_S	file:
bf3	test/asan/TestCases/Windows/bitfield_uaf.cc	/^  unsigned int bf3:3;$/;"	m	struct:_S	file:
bf4	lib/asan/tests/asan_test.cc	/^  int bf4:29;$/;"	m	struct:StructWithBitField	file:
bf4	test/asan/TestCases/Windows/bitfield.cc	/^  unsigned int bf4:4;$/;"	m	struct:_S	file:
bf4	test/asan/TestCases/Windows/bitfield_uaf.cc	/^  unsigned int bf4:4;$/;"	m	struct:_S	file:
bigchunk	test/asan/TestCases/Windows/shadow_mapping_failure.cc	/^char bigchunk[1 << 30];$/;"	v
bin_constructor_call	test/tsan/Linux/check_preinit.cc	/^volatile int bin_constructor_call = 0;$/;"	v
binaryName	test/BlocksRuntime/testfilerunner.h	/^@property __strong char *binaryName;$/;"	v
binary_name_cache_str	lib/sanitizer_common/sanitizer_common.cc	/^static char binary_name_cache_str[kMaxPathLength];$/;"	m	namespace:__sanitizer	file:
binary_name_filter	lib/asan/scripts/asan_symbolize.py	/^binary_name_filter = None$/;"	v
binutils_prefix	lib/asan/scripts/asan_symbolize.py	/^binutils_prefix = None$/;"	v
bit_SSE4_2	lib/scudo/scudo_utils.cpp	64;"	d	file:
bit_cast	lib/scudo/scudo_utils.h	/^INLINE Dest bit_cast(const Source& source) {$/;"	f	namespace:__scudo
bit_offset_mask	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^    u64 bit_offset_mask;$/;"	m	class:SizeClassAllocator64::PackedCounterArray
bitcast	test/cfi/mfcall.cpp	/^To bitcast(From f) {$/;"	f
bits_	lib/sanitizer_common/sanitizer_bitvector.h	/^  basic_int_t bits_;$/;"	m	class:__sanitizer::BasicBitVector
block	lib/asan/asan_mac.cc	/^  void *block;$/;"	m	struct:__asan::__anon47	file:
block	lib/builtins/arm/udivmodsi4.S	/^#define block(shift)                                                           \\$/;"	d
block	lib/builtins/arm/udivsi3.S	/^#define block(shift)                                                           \\$/;"	d
block	lib/builtins/arm/umodsi3.S	/^#define block(shift)                                                           \\$/;"	d
block	lib/lsan/lsan_mac.cc	/^  void *block;$/;"	m	struct:__lsan::__anon10	file:
block	lib/tsan/rtl/tsan_md5.cc	/^  MD5_u32plus block[16];$/;"	m	struct:__tsan::__anon18	file:
block_	lib/hwasan/hwasan_allocator.h	/^  uptr block_;$/;"	m	class:__hwasan::HwasanChunkView
block_cache	lib/tsan/rtl/tsan_rtl.h	/^  DenseSlabAllocCache block_cache;$/;"	m	struct:__tsan::Processor
blocked_sigset	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^static __sanitizer_sigset_t blocked_sigset;$/;"	m	namespace:__sanitizer	file:
blocks_in_use	lib/asan/asan_stats.h	/^  uptr blocks_in_use;$/;"	m	struct:__asan::AsanMallocStats
body	lib/tsan/rtl/tsan_md5.cc	/^static const void *body(MD5_CTX *ctx, const void *data, ulong_t size) {$/;"	f	namespace:__tsan
bogusfd	lib/tsan/rtl/tsan_fd.cc	/^static bool bogusfd(int fd) {$/;"	f	namespace:__tsan
bool	lib/BlocksRuntime/Block_private.h	/^typedef char bool;$/;"	t
bool	lib/builtins/cpu_model.c	22;"	d	file:
bool	test/ubsan/TestCases/ImplicitConversion/integer-truncation.c	7;"	d	file:
boom	test/asan/TestCases/Linux/clang_gcc_abi.cc	/^int boom() {$/;"	f
bot	test/asan/TestCases/alloca_loop_unpoisoning.cc	/^void *top, *bot;$/;"	v
bottom	lib/asan/asan_thread.h	/^    uptr bottom;$/;"	m	struct:__asan::AsanThread::StackBounds
bp	lib/asan/asan_errors.h	/^  uptr pc, bp, sp;$/;"	m	struct:__asan::ErrorGeneric
bp	lib/asan/asan_errors.h	/^  uptr pc, bp, sp;$/;"	m	struct:__asan::ErrorInvalidPointerPair
bp	lib/sanitizer_common/sanitizer_common.h	/^  uptr bp;$/;"	m	struct:__sanitizer::SignalContext
bp	lib/ubsan/ubsan_diag.h	/^  uptr bp;$/;"	m	struct:__ubsan::ReportOptions
break_optimization	lib/sanitizer_common/tests/sanitizer_test_utils.h	/^inline void break_optimization(void *arg) {$/;"	f
break_optimization	lib/sanitizer_common/tests/standalone_malloc_test.cc	/^inline void break_optimization(void *arg) {$/;"	f
break_optimization	test/asan/TestCases/Linux/aligned_delete_test.cc	/^inline T* break_optimization(T *arg) {$/;"	f
break_optimization	test/asan/TestCases/Linux/sized_delete_test.cc	/^inline void break_optimization(void *arg) {$/;"	f
break_optimization	test/asan/TestCases/stack-oob-frames.cc	/^inline void break_optimization(void *arg) {$/;"	f
break_optimization	test/cfi/utils.h	/^inline void break_optimization(void *arg) {$/;"	f
break_optimization	test/fuzzer/LargeTest.cpp	/^static inline void break_optimization(const void *arg) {$/;"	f	file:
break_optimization	test/safestack/utils.h	/^static inline void break_optimization(void *arg) {$/;"	f
break_optimization	test/sanitizer_common/TestCases/Linux/new_delete_test.cc	/^inline T* break_optimization(T *arg) {$/;"	f
break_optimization	test/scudo/aligned-new.cpp	/^inline T* break_optimization(T *arg) {$/;"	f
broadcast	lib/msan/tests/msan_test.cc	/^  bool broadcast;$/;"	m	struct:__anon7::SignalCondArg	file:
brokenFunction	test/asan/TestCases/blacklist.cc	/^int brokenFunction(int argc) {$/;"	f
bss_var	test/lsan/TestCases/use_globals_uninitialized.cc	/^void *bss_var;$/;"	v
bucket_	lib/sanitizer_common/sanitizer_addrhashmap.h	/^    Bucket                *bucket_;$/;"	m	class:__sanitizer::AddrHashMap::Handle
buf	lib/sanitizer_common/sanitizer_symbolizer_libbacktrace.cc	/^  char *buf;$/;"	m	struct:__sanitizer::__anon99::CplusV3DemangleData	file:
buf	test/asan/TestCases/Windows/longjmp.cc	/^static jmp_buf buf;$/;"	v	file:
buf	test/asan/TestCases/longjmp.cc	/^static jmp_buf buf;$/;"	v	file:
buf	test/msan/chained_origin_limits.cc	/^static char *buf, *cur, *end;$/;"	v	file:
buf	test/tsan/Linux/double_race.cc	/^char buf[16];$/;"	v
buf	test/tsan/race_on_read.cc	/^char buf;$/;"	v
buf	test/tsan/race_on_write.cc	/^char buf;$/;"	v
buf0	lib/tsan/go/test.c	/^char *buf0;$/;"	v
buf_	lib/sanitizer_common/sanitizer_flag_parser.h	/^  const char *buf_;$/;"	m	class:__sanitizer::FlagParser
buffer	lib/fuzzer/FuzzerSHA1.cpp	/^	uint32_t buffer[BLOCK_LENGTH\/4];$/;"	m	struct:__anon36::sha1nfo	file:
buffer	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^    u64* buffer;$/;"	m	class:SizeClassAllocator64::PackedCounterArray
buffer	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  void *buffer;$/;"	m	class:RedZoneMemoryMapper	file:
buffer	lib/tsan/rtl/tsan_md5.cc	/^  unsigned char buffer[64];$/;"	m	struct:__tsan::__anon18	file:
buffer	test/asan/TestCases/Windows/bind_io_completion_callback.cc	/^char buffer[65536];$/;"	v
buffer	test/tsan/strerror_r.cc	/^char buffer[1000];$/;"	v
buffer1	test/asan/TestCases/Posix/global-registration.c	/^char buffer1[1] = { 0 };$/;"	v
buffer2	test/asan/TestCases/Posix/global-registration.c	/^char buffer2[1] = { 0 };$/;"	v
buffer3	test/asan/TestCases/Posix/global-registration.c	/^char buffer3[1] = { 0 };$/;"	v
bufferOffset	lib/fuzzer/FuzzerSHA1.cpp	/^	uint8_t bufferOffset;$/;"	m	struct:__anon36::sha1nfo	file:
buffer_	lib/sanitizer_common/sanitizer_linux.h	/^  InternalMmapVector<char> buffer_;$/;"	m	class:__sanitizer::ThreadLister
buffer_	lib/sanitizer_common/sanitizer_symbolizer_internal.h	/^  char buffer_[kBufferSize];$/;"	m	class:__sanitizer::LLVMSymbolizer
buffer_	lib/sanitizer_common/sanitizer_symbolizer_internal.h	/^  char buffer_[kBufferSize];$/;"	m	class:__sanitizer::SymbolizerProcess
buffer_	lib/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc	/^  char buffer_[kBufferSize];$/;"	m	class:__sanitizer::InternalSymbolizer	file:
buffer_counter	test/xray/TestCases/Posix/logging-modes.cc	/^static auto buffer_counter = 0;$/;"	v	file:
buffer_counter	test/xray/TestCases/Posix/profiling-multi-threaded.cc	/^volatile int buffer_counter = 0;$/;"	v
buffer_counter	test/xray/TestCases/Posix/profiling-single-threaded.cc	/^volatile int buffer_counter = 0;$/;"	v
buffer_size	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^    u64 buffer_size;$/;"	m	class:SizeClassAllocator64::PackedCounterArray
buffered_write	test/msan/chained_origin_limits.cc	/^void buffered_write(const char *p, size_t sz) {$/;"	f
buffers	test/xray/TestCases/Posix/fdr-mode-inmemory.cc	/^uint64_t buffers = 0;$/;"	v
buffers	test/xray/TestCases/Posix/fdr-mode-multiple.cc	/^uint64_t buffers = 0;$/;"	v
bug_descr	lib/asan/asan_errors.h	/^  const char *bug_descr;$/;"	m	struct:__asan::ErrorGeneric
build_consistency	lib/tsan/rtl/tsan_defs.h	/^static inline void USED build_consistency() {$/;"	f	namespace:__tsan
build_consistency_debug	lib/tsan/rtl/tsan_rtl.cc	/^void build_consistency_debug() {}$/;"	f	namespace:__tsan
build_consistency_nostats	lib/tsan/rtl/tsan_rtl.cc	/^void build_consistency_nostats() {}$/;"	f	namespace:__tsan
build_consistency_release	lib/tsan/rtl/tsan_rtl.cc	/^void build_consistency_release() {}$/;"	f	namespace:__tsan
build_consistency_stats	lib/tsan/rtl/tsan_rtl.cc	/^void build_consistency_stats() {}$/;"	f	namespace:__tsan
build_env	test/sanitizer_common/android_commands/android_run.py	/^def build_env():$/;"	f
build_format_string	lib/dfsan/dfsan_custom.cc	/^  char *build_format_string() {$/;"	f	struct:Formatter
busy	test/tsan/signal_reset.cc	/^static void* busy(void *p) {$/;"	f	file:
bv_	lib/sanitizer_common/sanitizer_bitvector.h	/^    BasicBitVector bv_;$/;"	m	class:__sanitizer::BasicBitVector::Iterator
bv_	lib/sanitizer_common/sanitizer_bitvector.h	/^    const TwoLevelBitVector &bv_;$/;"	m	class:__sanitizer::TwoLevelBitVector::Iterator
bv_	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  BV bv_;$/;"	m	class:__sanitizer::DeadlockDetectorTLS
by_size_log	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^    uptr n_allocs, n_frees, currently_allocated, max_allocated, by_size_log[64];$/;"	m	struct:LargeMmapAllocator::Stats
byref_destroy	lib/BlocksRuntime/Block_private.h	/^    void (*byref_destroy)(struct Block_byref *);$/;"	m	struct:Block_byref
byref_destroy	test/BlocksRuntime/byrefsanity.c	/^    void (*byref_destroy)(struct byref_id *);$/;"	m	struct:byref_id	file:
byref_id	test/BlocksRuntime/byrefsanity.c	/^struct byref_id {$/;"	s	file:
byref_keep	lib/BlocksRuntime/Block_private.h	/^    void (*byref_keep)(struct Block_byref *dst, struct Block_byref *src);$/;"	m	struct:Block_byref
byref_keep	test/BlocksRuntime/byrefsanity.c	/^    void (*byref_keep)(struct byref_id *dst, struct byref_id *src);$/;"	m	struct:byref_id	file:
byte	lib/esan/working_set.cpp	/^typedef unsigned char byte;$/;"	t	file:
byteCount	lib/fuzzer/FuzzerSHA1.cpp	/^	uint32_t byteCount;$/;"	m	struct:__anon36::sha1nfo	file:
c	lib/asan/tests/asan_test.cc	/^  char c;$/;"	m	struct:Packed5	file:
c	lib/msan/tests/msan_test.cc	/^  int a, b, c, d, e, f;$/;"	m	struct:StructByVal	file:
c	lib/msan/tests/msan_test.cc	/^  int a, b, c;$/;"	m	struct:SSS1	file:
c	lib/msan/tests/msan_test.cc	/^  int b, a, c;$/;"	m	struct:SSS2	file:
c	lib/msan/tests/msan_test.cc	/^  int b, c, a;$/;"	m	struct:SSS3	file:
c	lib/msan/tests/msan_test.cc	/^  int c, b, a;$/;"	m	struct:SSS4	file:
c	lib/tsan/rtl/tsan_md5.cc	/^  MD5_u32plus a, b, c, d;$/;"	m	struct:__tsan::__anon18	file:
c	lib/tsan/tests/rtl/tsan_posix.cc	/^  pthread_cond_t c;$/;"	m	struct:CondContext	file:
c	test/asan/TestCases/Helpers/init-order-atexit-extra.cc	/^C c;$/;"	v
c	test/asan/TestCases/Linux/aligned_delete_test.cc	/^struct S12 { int a, b, c; };$/;"	m	struct:S12	file:
c	test/asan/TestCases/Linux/init_fini_sections.cc	/^int c = 0;$/;"	v
c	test/asan/TestCases/Linux/sized_delete_test.cc	/^  int a, b, c, d, e;$/;"	m	struct:D2	file:
c	test/asan/TestCases/Linux/sized_delete_test.cc	/^  int a, b, c, d, e;$/;"	m	struct:S20	file:
c	test/asan/TestCases/Linux/sized_delete_test.cc	/^  int a, b, c;$/;"	m	struct:D1	file:
c	test/asan/TestCases/Linux/sized_delete_test.cc	/^  int a, b, c;$/;"	m	struct:S12	file:
c	test/asan/TestCases/vla_chrome_testcase.cc	/^int c;$/;"	v
c	test/builtins/Unit/arm/call_apsr.h	/^        uint32_t c: 1;$/;"	m	struct:cpsr::__anon152
c	test/esan/TestCases/struct-simple.cpp	/^  char c[10];$/;"	m	class:C	file:
c	test/msan/dtor-bit-fields.cc	/^  unsigned int c : 1;$/;"	m	struct:Anon	file:
c	test/msan/dtor-bit-fields.cc	/^  unsigned int c : 1;$/;"	m	struct:Packed	file:
c	test/profile/Linux/counter_promo_nest.c	/^int c = 10;$/;"	v
c	test/sanitizer_common/TestCases/Linux/new_delete_test.cc	/^struct S12 { int a, b, c; };$/;"	m	struct:S12	file:
c	test/scudo/aligned-new.cpp	/^struct S12 { int a, b, c; };$/;"	m	struct:S12	file:
c	test/tsan/cond.c	/^pthread_cond_t c;$/;"	v
c	test/tsan/cond_cancel.c	/^pthread_cond_t c;$/;"	v
c	test/tsan/cond_destruction.cc	/^pthread_cond_t c;$/;"	v
c	test/tsan/cond_race.cc	/^  pthread_cond_t c;$/;"	m	struct:Ctx	file:
c	test/tsan/dlclose.cc	/^static Closer c;$/;"	v	file:
c	test/tsan/vptr_benign_race.cc	/^  pthread_cond_t c;$/;"	m	struct:A	file:
c07f	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^       c07f = lsr(mask, #8)$/;"	d
c07f	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define c07f     R7$/;"	d
c1	test/msan/icmp_slt_allones.cc	/^  int c1 : 7;$/;"	m	struct:A	file:
c1	test/tsan/tsan-vs-gvn.cc	/^  char c1, c2, c3, c4;$/;"	m	struct:__anon130	file:
c2	test/tsan/tsan-vs-gvn.cc	/^  char c1, c2, c3, c4;$/;"	m	struct:__anon130	file:
c3	test/tsan/tsan-vs-gvn.cc	/^  char c1, c2, c3, c4;$/;"	m	struct:__anon130	file:
c4	test/tsan/tsan-vs-gvn.cc	/^  char c1, c2, c3, c4;$/;"	m	struct:__anon130	file:
c63	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^        c63 = #58$/;"	d
c63	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^        c63 = #62$/;"	d
c63	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define c63        R9$/;"	d
c63	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^        c63 = #62$/;"	d
c63	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^#define c63        R9$/;"	d
c63	lib/builtins/hexagon/fastmath_dlib_asm.S	/^        c63 = #62$/;"	d
c63	lib/builtins/hexagon/fastmath_dlib_asm.S	/^#define c63        R9$/;"	d
c8	test/msan/icmp_slt_allones.cc	/^  int c8 : 1;$/;"	m	struct:A	file:
c80	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define c80      R0$/;"	d
c8001	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define c8001      R12$/;"	d
c8001	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^#define c8001      R8$/;"	d
c9	test/msan/icmp_slt_allones.cc	/^  int c9 : 1;$/;"	m	struct:A	file:
cSledLength	lib/xray/xray_interface.cc	/^static const int16_t cSledLength = 12;$/;"	m	namespace:__xray	file:
c_str	lib/asan/asan_descriptions.h	/^  const char *c_str() const { return &name[0]; }$/;"	f	class:__asan::AsanThreadIdAndName
cache	lib/lsan/lsan_common_mac.cc	/^  AllocatorCache cache;$/;"	m	struct:__lsan::__anon11	file:
cache	lib/sanitizer_common/tests/sanitizer_allocator_testlib.cc	/^static THREADLOCAL AllocatorCache cache;$/;"	m	namespace:__anon59	file:
cache	lib/tsan/rtl/tsan_dense_alloc.h	/^  IndexT cache[kSize];$/;"	m	class:__tsan::DenseSlabAllocCache
cache	lib/tsan/tests/unit/tsan_clock_test.cc	/^ClockCache cache;$/;"	m	namespace:__tsan	file:
cache_	lib/asan/asan_allocator.cc	/^  AllocatorCache* const cache_;$/;"	m	struct:__asan::QuarantineCallback	file:
cache_	lib/sanitizer_common/sanitizer_quarantine.h	/^  Cache cache_;$/;"	m	class:__sanitizer::Quarantine
cache_begin	lib/lsan/lsan_thread.cc	/^       cache_begin, cache_end,$/;"	m	struct:__lsan::OnStartedArgs	file:
cache_begin	lib/lsan/lsan_thread.h	/^  uptr cache_begin() { return cache_begin_; }$/;"	f	class:__lsan::ThreadContext
cache_begin_	lib/lsan/lsan_thread.h	/^       cache_begin_, cache_end_,$/;"	m	class:__lsan::ThreadContext
cache_end	lib/lsan/lsan_thread.cc	/^       cache_begin, cache_end,$/;"	m	struct:__lsan::OnStartedArgs	file:
cache_end	lib/lsan/lsan_thread.h	/^  uptr cache_end() { return cache_end_; }$/;"	f	class:__lsan::ThreadContext
cache_end_	lib/lsan/lsan_thread.h	/^       cache_begin_, cache_end_,$/;"	m	class:__lsan::ThreadContext
cache_lock	lib/sanitizer_common/sanitizer_procmaps_common.cc	/^static StaticSpinMutex cache_lock;$/;"	m	namespace:__sanitizer	file:
cache_mutex_	lib/sanitizer_common/sanitizer_quarantine.h	/^  StaticSpinMutex cache_mutex_;$/;"	m	class:__sanitizer::Quarantine
cached_macos_version	lib/sanitizer_common/sanitizer_mac.cc	/^MacosVersion cached_macos_version = MACOS_VERSION_UNINITIALIZED;$/;"	m	namespace:__sanitizer	file:
cached_proc_self_maps	lib/sanitizer_common/sanitizer_procmaps_common.cc	/^static ProcSelfMapsBuff cached_proc_self_maps;$/;"	m	namespace:__sanitizer	file:
calcHash	lib/sanitizer_common/sanitizer_addrhashmap.h	/^uptr AddrHashMap<T, kSize>::calcHash(uptr addr) {$/;"	f	class:__sanitizer::AddrHashMap
call1	test/asan/TestCases/deep_tail_call.cc	/^void __attribute__((noinline)) call1(int i) { call2(i); }$/;"	f
call2	test/asan/TestCases/deep_tail_call.cc	/^void __attribute__((noinline)) call2(int i) { call3(i); }$/;"	f
call3	test/asan/TestCases/deep_tail_call.cc	/^void __attribute__((noinline)) call3(int i) { call4(i); }$/;"	f
call4	test/asan/TestCases/deep_tail_call.cc	/^void __attribute__((noinline)) call4(int i) { global[i+10]++; }$/;"	f
callVoidVoid	test/BlocksRuntime/byrefaccess.c	/^void callVoidVoid(void (^closure)(void)) {$/;"	f
callVoidVoid	test/BlocksRuntime/byrefcopy.c	/^void callVoidVoid(void (^closure)(void)) {$/;"	f
callVoidVoid	test/BlocksRuntime/byrefcopyint.c	/^void callVoidVoid(voidVoid closure) {$/;"	f
callVoidVoid	test/BlocksRuntime/nestedimport.c	/^void callVoidVoid(void (^closure)(void)) {$/;"	f
call_foo	test/asan/TestCases/Linux/init_fini_sections.cc	/^void (*call_foo)(void) = &foo;$/;"	v
call_foo_2	test/asan/TestCases/Linux/init_fini_sections.cc	/^void (*call_foo_2)(void) = &foo;$/;"	v
call_foo_3	test/asan/TestCases/Linux/init_fini_sections.cc	/^void (*call_foo_3)(void) = &fini;$/;"	v
call_me_maybe	test/asan/TestCases/Windows/crt_initializers.cc	/^void call_me_maybe() {}$/;"	f
call_memcpy	test/asan/TestCases/Windows/dll_intercept_memcpy_indirect.cc	/^void call_memcpy(void* (*f)(void *, const void *, size_t),$/;"	f
call_memcpy	test/asan/TestCases/Windows/intercept_memcpy.cc	/^void call_memcpy(void* (*f)(void *, const void *, size_t),$/;"	f
call_on_globals	lib/asan/asan_globals_win.cc	/^static void call_on_globals(void (*hook)(__asan_global *, uptr)) {$/;"	f	namespace:__asan
call_once_callback_args	lib/tsan/rtl/tsan_interceptors_mac.cc	/^struct call_once_callback_args {$/;"	s	namespace:__tsan::__anon17	file:
call_once_callback_wrapper	lib/tsan/rtl/tsan_interceptors_mac.cc	/^void call_once_callback_wrapper(void *arg) {$/;"	f	namespace:__tsan::__anon17
call_pthread_cancel_with_cleanup	lib/tsan/rtl/tsan_platform_linux.cc	/^int call_pthread_cancel_with_cleanup(int(*fn)(void *c, void *m,$/;"	f	namespace:__tsan
call_pthread_cancel_with_cleanup	lib/tsan/rtl/tsan_platform_mac.cc	/^int call_pthread_cancel_with_cleanup(int(*fn)(void *c, void *m,$/;"	f	namespace:__tsan
call_rtl_from_dso	test/asan/TestCases/Linux/function-sections-are-bad.cc	/^extern "C" void call_rtl_from_dso() {$/;"	f
callback	lib/dfsan/dfsan_custom.cc	/^  void *callback;$/;"	m	struct:dl_iterate_phdr_info	file:
callback	lib/lsan/lsan_common_linux.cc	/^  StopTheWorldCallback callback;$/;"	m	struct:__lsan::DoStopTheWorldParam	file:
callback	lib/lsan/lsan_interceptors.cc	/^  void *(*callback)(void *arg);$/;"	m	struct:std::ThreadParam	file:
callback	lib/msan/msan_interceptors.cc	/^  dl_iterate_phdr_cb callback;$/;"	m	struct:dl_iterate_phdr_data	file:
callback	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^  StopTheWorldCallback callback;$/;"	m	struct:__sanitizer::TracerThreadArgument	file:
callback	lib/sanitizer_common/sanitizer_stoptheworld_mac.cc	/^  StopTheWorldCallback callback;$/;"	m	struct:__sanitizer::RunThreadArgs	file:
callback	lib/tsan/rtl/tsan_interceptors.cc	/^  void* (*callback)(void *arg);$/;"	m	struct:ThreadParam	file:
callback	test/asan/TestCases/Linux/longjmp_chk.c	/^static void callback(void) {$/;"	f	file:
callback	test/tsan/dl_iterate_phdr.cc	/^static int callback(struct dl_phdr_info *info, size_t size, void *data) {$/;"	f	file:
callback_argument	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^  void *callback_argument;$/;"	m	struct:__sanitizer::TracerThreadArgument	file:
callback_assign_tag	test/tsan/Darwin/external-lib.cc	/^void *(*callback_assign_tag)(void *addr, void *tag);$/;"	v
callback_executed	lib/sanitizer_common/tests/sanitizer_stoptheworld_test.cc	/^  volatile bool callback_executed;$/;"	m	struct:__sanitizer::AdvancedCallbackArgument	file:
callback_executed	lib/sanitizer_common/tests/sanitizer_stoptheworld_test.cc	/^  volatile bool callback_executed;$/;"	m	struct:__sanitizer::CallbackArgument	file:
callback_read	test/tsan/Darwin/external-lib.cc	/^void (*callback_read)(void *addr, void *caller_pc, void *tag);$/;"	v
callback_register_tag	test/tsan/Darwin/external-lib.cc	/^void *(*callback_register_tag)(const char *object_type);$/;"	v
callback_trampoline	lib/dfsan/dfsan_custom.cc	/^  int (*callback_trampoline)(void *callback, struct dl_phdr_info *info,$/;"	m	struct:dl_iterate_phdr_info	file:
callback_type	test/asan/TestCases/Posix/deep_thread_stack.cc	/^typedef void* (*callback_type)(void* arg);$/;"	t	file:
callback_write	test/tsan/Darwin/external-lib.cc	/^void (*callback_write)(void *addr, void *caller_pc, void *tag);$/;"	v
called	test/xray/TestCases/Posix/patching-unpatching.cc	/^bool called = false;$/;"	v
callee	test/profile/Inputs/comdat_rename_1.cc	/^int FOO::callee() {$/;"	f	class:FOO
callee1	test/profile/Linux/instrprof-merge-vp.c	/^void callee1() {}$/;"	f
callee1	test/profile/instrprof-value-prof-2.c	/^void callee1() {}$/;"	f
callee1Ptr	test/profile/instrprof-value-prof-2.c	/^void (*callee1Ptr)();$/;"	v
callee2	test/profile/Linux/instrprof-merge-vp.c	/^void callee2() {}$/;"	f
callee2	test/profile/instrprof-value-prof-2.c	/^void callee2() {}$/;"	f
callee2Ptr	test/profile/instrprof-value-prof-2.c	/^void (*callee2Ptr)();$/;"	v
callee3	test/profile/Linux/instrprof-merge-vp.c	/^void callee3() {}$/;"	f
callee_0	test/profile/Inputs/instrprof-value-prof-evict.c	/^void callee_0() {}$/;"	f
callee_0	test/profile/instrprof-value-prof-reset.c	/^void callee_0() {}$/;"	f
callee_1	test/profile/Inputs/instrprof-value-prof-evict.c	/^void callee_1() {}$/;"	f
callee_1	test/profile/instrprof-value-prof-reset.c	/^void callee_1() {}$/;"	f
callee_2	test/profile/Inputs/instrprof-value-prof-evict.c	/^void callee_2() {}$/;"	f
callee_2	test/profile/instrprof-value-prof-reset.c	/^void callee_2() {}$/;"	f
callee_3	test/profile/Inputs/instrprof-value-prof-evict.c	/^void callee_3() {}$/;"	f
callee_marked_noreturn	test/ubsan/TestCases/Misc/unreachable.cpp	/^void __attribute__((noreturn)) callee_marked_noreturn() {$/;"	f
callee_rethrows	test/tsan/exceptions.cc	/^__attribute__((noinline)) void callee_rethrows() {$/;"	f
callee_throws	test/tsan/exceptions.cc	/^__attribute__((noinline)) void callee_throws() {$/;"	f
caller	test/profile/Inputs/comdat_rename.h	/^  __attribute__((noinline)) void caller(int n) {$/;"	f	struct:FOO
caller_pc	lib/tsan/rtl/tsan_interceptors.cc	/^  const uptr caller_pc;$/;"	m	struct:TsanInterceptorContext	file:
caller_pcs	lib/ubsan_minimal/ubsan_minimal_handlers.cc	/^static __sanitizer::atomic_uintptr_t caller_pcs[kMaxCallerPcs];$/;"	v	file:
caller_pcs_sz	lib/ubsan_minimal/ubsan_minimal_handlers.cc	/^static __sanitizer::atomic_uint32_t caller_pcs_sz;$/;"	v	file:
caller_with_value_site_never_called1	test/profile/instrprof-value-prof-2.c	/^void caller_with_value_site_never_called1() {}$/;"	f
caller_with_value_site_never_called2	test/profile/instrprof-value-prof-2.c	/^void caller_with_value_site_never_called2() {}$/;"	f
caller_with_vp1	test/profile/instrprof-value-prof-2.c	/^void caller_with_vp1() {}$/;"	f
caller_with_vp2	test/profile/instrprof-value-prof-2.c	/^void caller_with_vp2() {}$/;"	f
caller_without_value_site1	test/profile/instrprof-value-prof-2.c	/^void caller_without_value_site1() {}$/;"	f
caller_without_value_site2	test/profile/instrprof-value-prof-2.c	/^void caller_without_value_site2() {}$/;"	f
callme	test/xray/TestCases/Posix/logging-modes.cc	/^[[clang::xray_always_instrument]] void callme() { std::printf("called me!\\n"); }$/;"	f
calloc	lib/asan/asan_malloc_linux.cc	/^  void *(*calloc)(uptr n_elements, uptr elem_size);$/;"	m	struct:MallocDebugK	file:
calloc	lib/asan/asan_malloc_linux.cc	/^  void *(*calloc)(uptr n_elements, uptr elem_size);$/;"	m	struct:MallocDebugL	file:
calloc	lib/asan/asan_malloc_win.cc	/^void *calloc(size_t nmemb, size_t size) {$/;"	f
calloc	lib/sanitizer_common/tests/sanitizer_allocator_testlib.cc	/^void *calloc(size_t nmemb, size_t size) {$/;"	f
calloc	lib/scudo/scudo_allocator.cpp	/^  void *calloc(uptr NMemB, uptr Size) {$/;"	f	struct:__scudo::Allocator
calloc	lib/scudo/scudo_malloc.cpp	/^INTERCEPTOR_ATTRIBUTE void *calloc(size_t nmemb, size_t size) {$/;"	f
calloc	test/esan/TestCases/workingset-early-fault.c	/^void *calloc(size_t size, size_t n) {$/;"	f
callsomething	test/BlocksRuntime/dispatch_call_Block_with_release.c	/^void callsomething(const char *format, int argument) {$/;"	f
canReturnNull	lib/scudo/scudo_allocator.cpp	/^  bool canReturnNull() {$/;"	f	struct:__scudo::Allocator
can_merge	lib/sanitizer_common/sanitizer_quarantine.h	/^  bool can_merge(const QuarantineBatch* const from) const {$/;"	f	struct:__sanitizer::QuarantineBatch
can_parse_	lib/sanitizer_common/sanitizer_suppressions.h	/^  bool can_parse_;$/;"	m	class:__sanitizer::SuppressionContext
can_poison_memory	lib/asan/asan_poisoning.cc	/^static atomic_uint8_t can_poison_memory;$/;"	m	namespace:__asan	file:
cap	lib/sanitizer_common/sanitizer_addrhashmap.h	/^    uptr cap;$/;"	m	struct:__sanitizer::AddrHashMap::AddBucket
capacity	lib/sanitizer_common/sanitizer_common.h	/^  uptr capacity() const { return capacity_bytes_ \/ sizeof(T); }$/;"	f	class:__sanitizer::InternalMmapVectorNoCtor
capacity	lib/tsan/rtl/tsan_clock.cc	/^ALWAYS_INLINE uptr SyncClock::capacity() const {$/;"	f	class:__tsan::SyncClock
capacity_bytes_	lib/sanitizer_common/sanitizer_common.h	/^  uptr capacity_bytes_;$/;"	m	class:__sanitizer::InternalMmapVectorNoCtor
captured	test/xray/TestCases/Posix/arg1-logging-implicit-this.cc	/^volatile uint64_t captured = 0;$/;"	v
cas	test/tsan/real_deadlock_detector_stress_test.cc	/^bool cas(int *a, int oldval, int newval) {$/;"	f
cb	lib/sanitizer_common/tests/sanitizer_quarantine_test.cc	/^static QuarantineCallback cb;$/;"	m	namespace:__sanitizer	file:
cb	lib/tsan/rtl/tsan_interceptors.cc	/^  dl_iterate_phdr_cb_t cb;$/;"	m	struct:dl_iterate_phdr_data	file:
cb	test/msan/death-callback.cc	/^void cb(void) {$/;"	f
cbegin	lib/xray/xray_buffer_queue.h	/^  const_iterator cbegin() const {$/;"	f	class:__xray::BufferQueue
cbegin	lib/xray/xray_segmented_array.h	/^  Iterator<const T> cbegin() const { return Iterator<const T>(Head, 0, Size); }$/;"	f	class:__xray::Array
ce	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^        ce = CMP.GT(expa, expb);$/;"	d
ce	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define ce         P0$/;"	d
ce	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^        ce = CMP.GT(expa, expb);$/;"	d
ce	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^#define ce         P0$/;"	d
ce	lib/builtins/hexagon/fastmath_dlib_asm.S	/^        ce = CMP.GT(expa, expb);$/;"	d
ce	lib/builtins/hexagon/fastmath_dlib_asm.S	/^#define ce         P0$/;"	d
cell_	lib/sanitizer_common/sanitizer_addrhashmap.h	/^    Cell                  *cell_;$/;"	m	class:__sanitizer::AddrHashMap::Handle
cells	lib/sanitizer_common/sanitizer_addrhashmap.h	/^    Cell             cells[kBucketSize];$/;"	m	struct:__sanitizer::AddrHashMap::Bucket
cells	lib/sanitizer_common/sanitizer_addrhashmap.h	/^    Cell cells[1];  \/\/ variable len$/;"	m	struct:__sanitizer::AddrHashMap::AddBucket
cend	lib/xray/xray_buffer_queue.h	/^  const_iterator cend() const {$/;"	f	class:__xray::BufferQueue
cend	lib/xray/xray_segmented_array.h	/^  Iterator<const T> cend() const { return Iterator<const T>(Tail, Size, Size); }$/;"	f	class:__xray::Array
cff	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^       cff = extractu(mant, #8, #0)$/;"	d
cff	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define cff      R0$/;"	d
cfi_shadow_limits_storage	lib/cfi/cfi.cc	/^} cfi_shadow_limits_storage$/;"	m	namespace:__cfi	typeref:union:__cfi::__anon53	file:
cfi_slowpath	test/cfi/cross-dso/util/cfi_stubs.h	/^static cfi_slowpath_ty cfi_slowpath;$/;"	v
cfi_slowpath_diag	test/cfi/cross-dso/util/cfi_stubs.h	/^static cfi_slowpath_diag_ty cfi_slowpath_diag;$/;"	v
cfi_slowpath_diag_ty	test/cfi/cross-dso/util/cfi_stubs.h	/^typedef void (*cfi_slowpath_diag_ty)(uint64_t, void *, void *);$/;"	t
cfi_slowpath_ty	test/cfi/cross-dso/util/cfi_stubs.h	/^typedef void (*cfi_slowpath_ty)(uint64_t, void *);$/;"	t
cgid	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u32 cgid;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
cgid	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  u32 cgid;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
cgid	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    int cgid;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
cgid	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned int cgid;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
cgid	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned int cgid;          \/\/ gid_t$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
chainedOriginDepot	lib/msan/msan_chained_origin_depot.cc	/^static StackDepotBase<ChainedOriginDepotNode, 4, 20> chainedOriginDepot;$/;"	m	namespace:__msan	file:
chd_addr	lib/ubsan/ubsan_type_hash_win.cc	/^  int chd_addr;$/;"	m	struct:CompleteObjectLocator	file:
chd_addr	lib/ubsan/ubsan_type_hash_win.cc	/^  void *chd_addr;$/;"	m	struct:CompleteObjectLocatorAbs	file:
check	lib/sanitizer_common/sanitizer_bitvector.h	/^  void check(uptr idx) const { CHECK_LE(idx, size()); }$/;"	f	class:__sanitizer::TwoLevelBitVector
check	lib/sanitizer_common/sanitizer_bvgraph.h	/^  void check(uptr idx1, uptr idx2) const {$/;"	f	class:__sanitizer::BVGraph
check	lib/tsan/check_analyze.sh	/^check() {$/;"	f
check	test/BlocksRuntime/nullblockisa.c	/^void check(void (^b)(void)) {$/;"	f
check	test/tsan/real_deadlock_detector_stress_test.cc	/^void check(int res) {$/;"	f
checkDynamicType	lib/ubsan/ubsan_type_hash_itanium.cc	/^bool __ubsan::checkDynamicType(void *Object, void *Type, HashValue Hash) {$/;"	f	class:__ubsan
checkDynamicType	lib/ubsan/ubsan_type_hash_win.cc	/^bool __ubsan::checkDynamicType(void *Object, void *Type, HashValue Hash) {$/;"	f	class:__ubsan
checkMmapResult	lib/esan/esan_linux.cpp	/^uptr checkMmapResult(uptr Addr, SIZE_T Size) {$/;"	f	namespace:__esan
checkSameAs	lib/sanitizer_common/tests/sanitizer_bvgraph_test.cc	/^  void checkSameAs(G *g) {$/;"	f	class:SimpleGraph
check_clz	test/ubsan/TestCases/Misc/builtins.cpp	/^void check_clz(int n) {$/;"	f
check_ctype	test/sanitizer_common/TestCases/ctype.c	/^void check_ctype(void) {$/;"	f
check_ctz	test/ubsan/TestCases/Misc/builtins.cpp	/^void check_ctz(int n) {$/;"	f
check_data_symbolication	test/asan/TestCases/Darwin/haswell-symbolication.cc	/^void check_data_symbolication() {$/;"	f
check_heap	test/sanitizer_common/TestCases/Linux/mprobe.cc	/^void check_heap() {$/;"	f
check_idx	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  void check_idx(uptr idx) const { CHECK_LT(idx, size()); }$/;"	f	class:__sanitizer::DeadlockDetector
check_locked	lib/sanitizer_common/tests/sanitizer_mutex_test.cc	/^static void check_locked(MutexType *mtx) {$/;"	f	namespace:__sanitizer
check_mem_is_good	test/sanitizer_common/TestCases/Linux/open_memstream.cc	/^static void check_mem_is_good(void *p, size_t s) {$/;"	f	file:
check_mem_is_good	test/sanitizer_common/TestCases/Linux/open_memstream.cc	/^static void check_mem_is_good(void *p, size_t s) {}$/;"	f	file:
check_node	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  void check_node(uptr node) const {$/;"	f	class:__sanitizer::DeadlockDetector
check_noexcept_calls	test/ubsan/TestCases/TypeCheck/Function/function.cpp	/^void check_noexcept_calls() {$/;"	f
check_stats	test/asan/TestCases/Posix/current_allocated_bytes.cc	/^void* check_stats(void *arg) {$/;"	f
child	test/msan/fork.cc	/^void child() {$/;"	f
child_context	test/asan/TestCases/Linux/swapcontext_annotation.cc	/^ucontext_t child_context;$/;"	v
child_context	test/asan/TestCases/Linux/swapcontext_test.cc	/^ucontext_t child_context;$/;"	v
chunk	lib/asan/asan_poisoning.cc	/^  u8 *chunk;$/;"	m	struct:__asan::ShadowSegmentEndpoint	file:
chunk	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  struct __sanitizer__obstack_chunk *chunk;$/;"	m	struct:__sanitizer_obstack	typeref:struct:__sanitizer_obstack::__sanitizer__obstack_chunk
chunk_	lib/asan/asan_allocator.h	/^  AsanChunk *const chunk_;$/;"	m	class:__asan::AsanChunkView
chunk_access	lib/asan/asan_descriptions.h	/^  ChunkAccess chunk_access;$/;"	m	struct:__asan::HeapAddressDescription
chunk_begin	lib/asan/asan_descriptions.h	/^  uptr chunk_begin;$/;"	m	struct:__asan::ChunkAccess
chunk_idx	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^    uptr chunk_idx;$/;"	m	struct:LargeMmapAllocator::Header
chunk_size	lib/asan/asan_descriptions.h	/^  uptr chunk_size;$/;"	m	struct:__asan::ChunkAccess
chunk_size	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  long chunk_size;$/;"	m	struct:__sanitizer_obstack
chunk_state	lib/asan/asan_allocator.cc	/^  u32 chunk_state       : 8;  \/\/ Must be first.$/;"	m	struct:__asan::ChunkHeader	file:
chunks	lib/sanitizer_common/sanitizer_allocator_local_cache.h	/^    CompactPtrT chunks[2 * SizeClassMap::kMaxNumCachedHint];$/;"	m	struct:SizeClassAllocator64LocalCache::PerClass
chunks_	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^  Header **chunks_;$/;"	m	class:LargeMmapAllocator
chunks_sorted_	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^  bool chunks_sorted_;$/;"	m	class:LargeMmapAllocator
clang_abi	test/asan/TestCases/Linux/clang_gcc_abi.cc	/^__attribute__((naked, noinline)) void clang_abi() {$/;"	f
class_id	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  uptr class_id;$/;"	m	struct:NewThreadParams	file:
class_name	test/asan/TestCases/Darwin/scribble.cc	/^  const char *class_name;$/;"	m	struct:Isa	file:
class_size	lib/sanitizer_common/sanitizer_allocator_local_cache.h	/^    uptr class_size;$/;"	m	struct:SizeClassAllocator32LocalCache::PerClass
class_size	lib/sanitizer_common/sanitizer_allocator_local_cache.h	/^    uptr class_size;$/;"	m	struct:SizeClassAllocator64LocalCache::PerClass
classify	test/builtins/Unit/divdc3_test.c	/^classify(double _Complex x)$/;"	f
classify	test/builtins/Unit/divsc3_test.c	/^classify(float _Complex x)$/;"	f
classify	test/builtins/Unit/divtc3_test.c	/^classify(long double _Complex x)$/;"	f
classify	test/builtins/Unit/divxc3_test.c	/^classify(long double _Complex x)$/;"	f
classify	test/builtins/Unit/muldc3_test.c	/^classify(double _Complex x)$/;"	f
classify	test/builtins/Unit/mulsc3_test.c	/^classify(float _Complex x)$/;"	f
classify	test/builtins/Unit/multc3_test.c	/^classify(long double _Complex x)$/;"	f
classify	test/builtins/Unit/mulxc3_test.c	/^classify(long double _Complex x)$/;"	f
cleanup	lib/fuzzer/scripts/collect_data_flow.py	/^def cleanup(d):$/;"	f
cleanup	lib/sanitizer_common/scripts/check_lint.sh	/^cleanup() {$/;"	f
cleanup	lib/tsan/go/buildgo.sh	/^  cleanup() {$/;"	f
clear	lib/asan/asan_allocator.h	/^  void clear() {$/;"	f	class:__asan::AsanChunkFifoList
clear	lib/esan/esan_circular_buffer.h	/^  void clear() {$/;"	f	class:__esan::CircularBuffer
clear	lib/fuzzer/FuzzerDictionary.h	/^  void clear() { Size = 0; }$/;"	f	class:fuzzer::Dictionary
clear	lib/sanitizer_common/sanitizer_bitvector.h	/^    void clear() { bv_.clear(); }$/;"	f	class:__sanitizer::BasicBitVector::Iterator
clear	lib/sanitizer_common/sanitizer_bitvector.h	/^  void clear() { bits_ = 0; }$/;"	f	class:__sanitizer::BasicBitVector
clear	lib/sanitizer_common/sanitizer_bitvector.h	/^  void clear() {$/;"	f	class:__sanitizer::TwoLevelBitVector
clear	lib/sanitizer_common/sanitizer_bvgraph.h	/^  void clear() {$/;"	f	class:__sanitizer::BVGraph
clear	lib/sanitizer_common/sanitizer_common.cc	/^void LoadedModule::clear() {$/;"	f	class:__sanitizer::LoadedModule
clear	lib/sanitizer_common/sanitizer_common.h	/^  void clear() { size_ = 0; }$/;"	f	class:__sanitizer::InternalMmapVectorNoCtor
clear	lib/sanitizer_common/sanitizer_common.h	/^  void clear() {$/;"	f	class:__sanitizer::InternalScopedString
clear	lib/sanitizer_common/sanitizer_common.h	/^  void clear() {$/;"	f	class:__sanitizer::ListOfModules
clear	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  void clear() {$/;"	f	class:__sanitizer::DeadlockDetector
clear	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  void clear() {$/;"	f	class:__sanitizer::DeadlockDetectorTLS
clear	lib/sanitizer_common/sanitizer_list.h	/^  void clear() {$/;"	f	struct:__sanitizer::IntrusiveList
clear	lib/sanitizer_common/tests/sanitizer_bvgraph_test.cc	/^  void clear() { s_.clear(); }$/;"	f	class:SimpleGraph
clear	lib/ubsan/ubsan_diag.h	/^  void clear() {$/;"	f	class:__ubsan::SymbolizedStackHolder
clearBit	lib/sanitizer_common/sanitizer_bitvector.h	/^  bool clearBit(uptr idx) {$/;"	f	class:__sanitizer::BasicBitVector
clearBit	lib/sanitizer_common/sanitizer_bitvector.h	/^  bool clearBit(uptr idx) {$/;"	f	class:__sanitizer::TwoLevelBitVector
clearCache	lib/xray/xray_powerpc64.cc	/^void clearCache(void *Addr, size_t Len) {$/;"	f	namespace:__anon32
clearOrInit	lib/sanitizer_common/sanitizer_common.h	/^  void clearOrInit() {$/;"	f	class:__sanitizer::ListOfModules
clear_mips_cache	lib/builtins/clear_cache.c	/^    static void clear_mips_cache(const void* Addr, size_t Size) {$/;"	f	file:
client_thread_udp	test/asan/TestCases/Linux/recvfrom.cc	/^static void *client_thread_udp(void *data) {$/;"	f	file:
clock	lib/tsan/rtl/tsan_defs.h	/^    ClockElem clock[kClockCount];$/;"	m	union:__tsan::ClockBlock::__anon20
clock	lib/tsan/rtl/tsan_rtl.h	/^  ThreadClock clock;$/;"	m	struct:__tsan::ThreadState
clock	lib/tsan/rtl/tsan_sync.h	/^  SyncClock clock;$/;"	m	struct:__tsan::SyncVar
clock	lib/tsan/tests/unit/tsan_clock_test.cc	/^  u64 clock[kThreads];$/;"	m	struct:__tsan::SimpleSyncClock	file:
clock	lib/tsan/tests/unit/tsan_clock_test.cc	/^  u64 clock[kThreads];$/;"	m	struct:__tsan::SimpleThreadClock	file:
clock_alloc	lib/tsan/rtl/tsan_rtl.h	/^  ClockAlloc clock_alloc;$/;"	m	struct:__tsan::Context
clock_cache	lib/tsan/rtl/tsan_rtl.h	/^  DenseSlabAllocCache clock_cache;$/;"	m	struct:__tsan::Processor
clock_t	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^CHECK_TYPE_SIZE(clock_t);$/;"	v
clock_t	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^CHECK_TYPE_SIZE(clock_t);$/;"	v
clock_t	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^CHECK_TYPE_SIZE(clock_t);$/;"	v
clock_t	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^CHECK_TYPE_SIZE(clock_t);$/;"	v
clockid_t	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^CHECK_TYPE_SIZE(clockid_t);$/;"	v
close	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  __sanitizer_cookie_io_close close;$/;"	m	struct:__sanitizer_cookie_io_functions_t
close	lib/sanitizer_common/symbolizer/sanitizer_wrappers.cc	/^int close(int fd) {$/;"	f
cmpaddr	test/profile/instrprof-value-prof.c	/^int cmpaddr(const void *p1, const void *p2) {$/;"	f
cmsg_len	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  unsigned cmsg_len;$/;"	m	struct:__sanitizer::__sanitizer_cmsghdr
cmsg_len	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  unsigned cmsg_len;$/;"	m	struct:__sanitizer::__sanitizer_cmsghdr
cmsg_len	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned cmsg_len;$/;"	m	struct:__sanitizer::__sanitizer_cmsghdr
cmsg_len	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    uptr cmsg_len;$/;"	m	struct:__sanitizer::__sanitizer_cmsghdr
cmsg_len	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned cmsg_len;$/;"	m	struct:__sanitizer::__sanitizer_cmsghdr
cmsg_level	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int cmsg_level;$/;"	m	struct:__sanitizer::__sanitizer_cmsghdr
cmsg_level	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  int cmsg_level;$/;"	m	struct:__sanitizer::__sanitizer_cmsghdr
cmsg_level	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    int cmsg_level;$/;"	m	struct:__sanitizer::__sanitizer_cmsghdr
cmsg_level	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int cmsg_level;$/;"	m	struct:__sanitizer::__sanitizer_cmsghdr
cmsg_type	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int cmsg_type;$/;"	m	struct:__sanitizer::__sanitizer_cmsghdr
cmsg_type	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  int cmsg_type;$/;"	m	struct:__sanitizer::__sanitizer_cmsghdr
cmsg_type	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    int cmsg_type;$/;"	m	struct:__sanitizer::__sanitizer_cmsghdr
cmsg_type	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int cmsg_type;$/;"	m	struct:__sanitizer::__sanitizer_cmsghdr
cmsghdr	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^CHECK_TYPE_SIZE(cmsghdr);$/;"	v
cmsghdr	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^CHECK_TYPE_SIZE(cmsghdr);$/;"	v
cmsghdr	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^CHECK_TYPE_SIZE(cmsghdr);$/;"	v
cmsghdr	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^CHECK_TYPE_SIZE(cmsghdr);$/;"	v
cnt	lib/msan/tests/msan_test.cc	/^static int cnt;$/;"	m	namespace:__anon6	file:
cnt	lib/tsan/tests/rtl/tsan_posix.cc	/^  int *cnt;$/;"	m	struct:thread_key	file:
collect_dataflow_for_corpus	lib/fuzzer/scripts/collect_data_flow.py	/^def collect_dataflow_for_corpus(self, exe, corpus_dir, output_dir):$/;"	f
column	lib/sanitizer_common/sanitizer_symbolizer.h	/^  int column;$/;"	m	struct:__sanitizer::AddressInfo
column_no	lib/asan/asan_interface_internal.h	/^    int column_no;$/;"	m	struct:__asan_global_source_location
combineOutAndErr	lib/fuzzer/FuzzerCommand.h	/^  void combineOutAndErr(bool combine = true) { CombinedOutAndErr = combine; }$/;"	f	class:fuzzer::final
commitBack	lib/scudo/scudo_allocator.cpp	/^  void commitBack(ScudoTSD *TSD) {$/;"	f	struct:__scudo::Allocator
commitBack	lib/scudo/scudo_allocator.cpp	/^void ScudoTSD::commitBack() {$/;"	f	class:__scudo::ScudoTSD
common_flags	lib/sanitizer_common/sanitizer_flags.h	/^inline const CommonFlags *common_flags() {$/;"	f	namespace:__sanitizer
common_flags_dont_use	lib/sanitizer_common/sanitizer_flags.cc	/^CommonFlags common_flags_dont_use;$/;"	m	namespace:__sanitizer	file:
compare	test/msan/tsearch.cc	/^int compare(const void *pa, const void *pb) {$/;"	f
compareExchangeHeader	lib/scudo/scudo_allocator.cpp	/^  static INLINE void compareExchangeHeader(void *Ptr,$/;"	f	namespace:__scudo::Chunk
compareResultCMP	test/builtins/Unit/fp_test.h	/^static inline int compareResultCMP(int result,$/;"	f
compareResultD	test/builtins/Unit/fp_test.h	/^static inline int compareResultD(double result,$/;"	f
compareResultF	test/builtins/Unit/fp_test.h	/^static inline int compareResultF(float result,$/;"	f
compareResultH	test/builtins/Unit/fp_test.h	/^static inline int compareResultH(uint16_t result,$/;"	f
compareResultLD	test/builtins/Unit/fp_test.h	/^static inline int compareResultLD(long double result,$/;"	f
compileLine	test/BlocksRuntime/testfilerunner.h	/^@property(assign) NSPointerArray *compileLine;$/;"	v
compilerPath	test/BlocksRuntime/testfilerunner.h	/^@property __strong char *compilerPath;$/;"	v
compilerrt_abort	lib/builtins/int_util.h	23;"	d
compilerrt_abort_impl	lib/builtins/int_util.c	/^void compilerrt_abort_impl(const char *file, int line, const char *function) {$/;"	f
completion_callback	test/asan/TestCases/Windows/bind_io_completion_callback.cc	/^void CALLBACK completion_callback(DWORD error, DWORD bytesRead,$/;"	f
compressed	lib/sanitizer_common/sanitizer_mac.cc	/^  mach_vm_size_t compressed;$/;"	m	struct:__sanitizer::__sanitizer_task_vm_info	file:
compressed_lifetime	lib/sanitizer_common/sanitizer_mac.cc	/^  mach_vm_size_t compressed_lifetime;$/;"	m	struct:__sanitizer::__sanitizer_task_vm_info	file:
compressed_peak	lib/sanitizer_common/sanitizer_mac.cc	/^  mach_vm_size_t compressed_peak;$/;"	m	struct:__sanitizer::__sanitizer_task_vm_info	file:
computeCRC32	lib/scudo/scudo_allocator.cpp	/^INLINE u32 computeCRC32(u32 Crc, uptr Value, uptr *Array, uptr ArraySize) {$/;"	f	namespace:__scudo
computeChecksum	lib/scudo/scudo_allocator.cpp	/^  static INLINE u16 computeChecksum(const void *Ptr, UnpackedHeader *Header) {$/;"	f	namespace:__scudo::Chunk
computeDifferenceRatio	lib/esan/cache_frag.cpp	/^static inline u64 computeDifferenceRatio(u64 Val1, u64 Val2) {$/;"	f	namespace:__esan
computeHardwareCRC32	lib/scudo/scudo_crc32.cpp	/^u32 computeHardwareCRC32(u32 Crc, uptr Data) {$/;"	f	namespace:__scudo
computeSoftwareCRC32	lib/scudo/scudo_crc32.h	/^INLINE u32 computeSoftwareCRC32(u32 Crc, uptr Data) {$/;"	f	namespace:__scudo
computeStructRatio	lib/esan/cache_frag.cpp	/^static void computeStructRatio(StructHashMap::Handle &Handle) {$/;"	f	namespace:__esan
computeWorkingSizeAndReset	lib/esan/working_set.cpp	/^static u32 computeWorkingSizeAndReset(u32 BitIdx) {$/;"	f	namespace:__esan
cond	lib/msan/tests/msan_test.cc	/^  pthread_cond_t* cond;$/;"	m	struct:__anon7::SignalCondArg	file:
cond	test/lsan/TestCases/Linux/guard-page.c	/^pthread_cond_t cond = PTHREAD_COND_INITIALIZER;$/;"	v
cond	test/lsan/TestCases/high_allocator_contention.cc	/^pthread_cond_t cond = PTHREAD_COND_INITIALIZER;$/;"	v
cond	test/lsan/TestCases/leak_check_before_thread_started.cc	/^pthread_cond_t cond = PTHREAD_COND_INITIALIZER;$/;"	v
cond	test/lsan/TestCases/many_tls_keys.cc	/^pthread_cond_t cond = PTHREAD_COND_INITIALIZER;$/;"	v
cond	test/scudo/threads.c	/^pthread_cond_t cond = PTHREAD_COND_INITIALIZER;$/;"	v
cond	test/tsan/signal_cond.cc	/^pthread_cond_t cond;$/;"	v
cond_mutex_unlock	lib/tsan/rtl/tsan_interceptors.cc	/^static void cond_mutex_unlock(CondMutexUnlockCtx *arg) {$/;"	f	file:
cond_thread	lib/tsan/tests/rtl/tsan_posix.cc	/^static void *cond_thread(void *p) {$/;"	f	file:
cond_wait	lib/tsan/rtl/tsan_interceptors.cc	/^static int cond_wait(ThreadState *thr, uptr pc, ScopedInterceptor *si,$/;"	f	file:
condition	test/asan/TestCases/initialization-nobug.cc	/^bool condition = true;$/;"	v
connectsync	lib/tsan/rtl/tsan_fd.cc	/^  u64 connectsync;$/;"	m	struct:__tsan::FdContext	file:
constructors	test/BlocksRuntime/copyconstructor.C	/^int constructors = 0;$/;"	v
constructors	test/BlocksRuntime/reference.C	/^int constructors = 0;$/;"	v
containsAddress	lib/sanitizer_common/sanitizer_common.cc	/^bool LoadedModule::containsAddress(uptr address) const {$/;"	f	class:__sanitizer::LoadedModule
containsMergeSpecifier	lib/profile/InstrProfilingFile.c	/^static int containsMergeSpecifier(const char *FilenamePat, int I) {$/;"	f	file:
content	lib/interception/interception_win.cc	/^  uptr content;$/;"	m	struct:__interception::TrampolineMemoryRegion	file:
context	lib/asan/asan_thread.h	/^  AsanThreadContext *context() { return context_; }$/;"	f	class:__asan::AsanThread
context	lib/sanitizer_common/sanitizer_common.h	/^  void *context;$/;"	m	struct:__sanitizer::SignalContext
context	test/cfi/base-derived-destructor.cpp	/^  T* context() { return static_cast<T*>(this); }$/;"	f	class:A
context_	lib/asan/asan_thread.h	/^  AsanThreadContext *context_;$/;"	m	class:__asan::AsanThread
context_factory_	lib/sanitizer_common/sanitizer_thread_registry.h	/^  const ThreadContextFactory context_factory_;$/;"	m	class:__sanitizer::ThreadRegistry
continueUnwind	lib/builtins/gcc_personality_v0.c	/^continueUnwind(struct _Unwind_Exception *exceptionObject,$/;"	f	file:
conv	lib/tsan/rtl/tsan_suppressions.cc	/^static const char *conv(ReportType typ) {$/;"	f	namespace:__tsan
convert	lib/asan/scripts/asan_symbolize.py	/^  def convert(self, line):$/;"	m	class:UnbufferedLineConverter
convert_morder	lib/tsan/rtl/tsan_interface_atomic.cc	/^static morder convert_morder(morder mo) {$/;"	f	file:
cookie_close	test/msan/Linux/fopencookie.cc	/^static int cookie_close(void *cookie) {$/;"	f	file:
cookie_io_functions_t	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^CHECK_TYPE_SIZE(cookie_io_functions_t);$/;"	v
cookie_read	test/msan/Linux/fopencookie.cc	/^static ssize_t cookie_read(void *cookie, char *buf, size_t size) {$/;"	f	file:
cookie_seek	test/msan/Linux/fopencookie.cc	/^static int cookie_seek(void *cookie, off64_t *offset, int whence) {$/;"	f	file:
cookie_write	test/msan/Linux/fopencookie.cc	/^static ssize_t cookie_write(void *cookie, const char *buf, size_t size) {$/;"	f	file:
coolest_integer	test/asan/TestCases/Helpers/initialization-constexpr-extra.cc	/^static int coolest_integer = getCoolestInteger();$/;"	v	file:
copy	lib/BlocksRuntime/Block_private.h	/^    void (*copy)(void *dst, void *src);$/;"	m	struct:Block_descriptor
copyFrom	lib/sanitizer_common/sanitizer_bitvector.h	/^  void copyFrom(const BasicBitVector &v) { bits_ = v.bits_; }$/;"	f	class:__sanitizer::BasicBitVector
copyFrom	lib/sanitizer_common/sanitizer_bitvector.h	/^  void copyFrom(const TwoLevelBitVector &v) {$/;"	f	class:__sanitizer::TwoLevelBitVector
copy_uninit_thread	test/msan/fork.cc	/^void *copy_uninit_thread(void *id) {$/;"	f
copy_uninit_thread1	test/msan/fork.cc	/^void copy_uninit_thread1(int level) {$/;"	f
copy_uninit_thread2	test/msan/fork.cc	/^void copy_uninit_thread2() {$/;"	f
corrupt	test/asan/TestCases/Linux/read_binary_name_regtest.c	/^void corrupt() {$/;"	f
count	lib/asan/asan_errors.h	/^  uptr count;$/;"	m	struct:__asan::ErrorCallocOverflow
count	lib/asan/asan_memory_profile.cc	/^  uptr count;$/;"	m	struct:__asan::AllocationSite	file:
count	lib/sanitizer_common/sanitizer_allocator_local_cache.h	/^    u32 count;$/;"	m	struct:SizeClassAllocator64LocalCache::PerClass
count	lib/sanitizer_common/sanitizer_allocator_local_cache.h	/^    uptr count;$/;"	m	struct:SizeClassAllocator32LocalCache::PerClass
count	lib/sanitizer_common/sanitizer_quarantine.h	/^  uptr count;$/;"	m	struct:__sanitizer::QuarantineBatch
count	lib/tsan/rtl/tsan_mutexset.h	/^    int count;$/;"	m	struct:__tsan::MutexSet::Desc
count	lib/tsan/rtl/tsan_report.h	/^  int count;$/;"	m	class:__tsan::ReportDesc
count	lib/tsan/rtl/tsan_rtl_thread.cc	/^  int count;$/;"	m	struct:__tsan::ThreadLeak	file:
count	test/BlocksRuntime/rdar6396238.c	/^static int count = 0;$/;"	v	file:
countAndClearShadowValues	lib/esan/working_set.cpp	/^static u32 countAndClearShadowValues(u32 BitIdx, uptr ShadowStart,$/;"	f	namespace:__esan
countCalls	test/asan/TestCases/initialization-nobug.cc	/^int countCalls() {$/;"	f
count_	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^    uptr count_;$/;"	m	struct:SizeClassAllocator32::TransferBatch
count_	lib/sanitizer_common/sanitizer_libignore.h	/^  uptr count_;$/;"	m	class:__sanitizer::LibIgnore
count_unverified_callbacks	test/dfsan/write_callback.c	/^static int count_unverified_callbacks = 0;$/;"	v	file:
counter	lib/sanitizer_common/tests/sanitizer_stoptheworld_test.cc	/^  volatile int counter;$/;"	m	struct:__sanitizer::CallbackArgument	file:
counter	test/tsan/Linux/check_preinit.cc	/^volatile int counter = 0;$/;"	v
counter	test/tsan/fork_deadlock.cc	/^int counter;$/;"	v
counter_mask	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^    u64 counter_mask;$/;"	m	class:SizeClassAllocator64::PackedCounterArray
counter_size_bits_log	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^    u64 counter_size_bits_log;$/;"	m	class:SizeClassAllocator64::PackedCounterArray
counters	lib/sanitizer_common/tests/sanitizer_stoptheworld_test.cc	/^  volatile int counters[kThreadCount];$/;"	m	struct:__sanitizer::AdvancedCallbackArgument	file:
coverage	lib/asan/asan_activation.cc	/^  bool coverage;$/;"	m	struct:__asan::AsanDeactivatedFlags	file:
coverage_dir	lib/asan/asan_activation.cc	/^  const char *coverage_dir;$/;"	m	struct:__asan::AsanDeactivatedFlags	file:
coverage_fd	include/sanitizer/common_interface_defs.h	/^    intptr_t coverage_fd;$/;"	m	struct:__anon127
coverage_fd	lib/sanitizer_common/sanitizer_interface_internal.h	/^      __sanitizer::sptr coverage_fd;$/;"	m	struct:__anon96
coverage_handler	test/xray/TestCases/Posix/coverage-sample.cc	/^[[clang::xray_never_instrument]] void coverage_handler(int32_t fid,$/;"	f
coverage_max_block_size	include/sanitizer/common_interface_defs.h	/^    unsigned int coverage_max_block_size;$/;"	m	struct:__anon127
coverage_max_block_size	lib/sanitizer_common/sanitizer_interface_internal.h	/^      unsigned int coverage_max_block_size;$/;"	m	struct:__anon96
coverage_sandboxed	include/sanitizer/common_interface_defs.h	/^    int coverage_sandboxed;$/;"	m	struct:__anon127
coverage_sandboxed	lib/sanitizer_common/sanitizer_interface_internal.h	/^      int coverage_sandboxed;$/;"	m	struct:__anon96
cpp_object_with_destructor	test/tsan/exceptions.cc	/^__attribute__((noinline)) void cpp_object_with_destructor() {$/;"	f
cpsr	test/builtins/Unit/arm/call_apsr.h	/^union cpsr {$/;"	u
cpu_set_t	lib/msan/tests/msan_test.cc	85;"	d	file:
crash_function	test/asan/TestCases/Darwin/suppressions-function.cc	/^void crash_function() {$/;"	f
crash_function	test/asan/TestCases/suppressions-exec-relative-location.cc	/^void crash_function() {$/;"	f
crash_function	test/asan/TestCases/suppressions-function.cc	/^void crash_function() {$/;"	f
crash_function	test/asan/TestCases/suppressions-library.cc	/^void crash_function() {$/;"	f
crash_handler	lib/fuzzer/afl/afl_driver.cpp	/^static void crash_handler(int, siginfo_t *, void *) {$/;"	f	file:
createProfileDir	lib/profile/InstrProfilingFile.c	/^static void createProfileDir(const char *Filename) {$/;"	f	file:
create_	lib/sanitizer_common/sanitizer_addrhashmap.h	/^    bool                   create_;$/;"	m	class:__sanitizer::AddrHashMap::Handle
create_A	test/cfi/cross-dso/shadow_is_read_only.cpp	/^extern "C" A *create_A() { return new A(); }$/;"	f
create_B	test/cfi/cross-dso/icall/diag.cpp	/^void *create_B() {$/;"	f
create_B	test/cfi/cross-dso/icall/dlopen.cpp	/^extern "C" void *create_B() {$/;"	f
create_B	test/cfi/cross-dso/simple-fail.cpp	/^void *create_B() {$/;"	f
create_B	test/cfi/cross-dso/simple-pass.cpp	/^A *create_B() {$/;"	f
create_B	test/cfi/target_uninstrumented.cpp	/^void *create_B() {$/;"	f
create_derivers	test/cfi/utils.h	/^void create_derivers() {$/;"	f
create_detached_thread	test/lsan/TestCases/leak_check_before_thread_started.cc	/^void create_detached_thread() {$/;"	f
create_redzones_and_throw	test/asan/TestCases/intercept-rethrow-exception.cc	/^void create_redzones_and_throw(std::exception_ptr const &exc_ptr) {$/;"	f	namespace:__anon135
created	lib/sanitizer_common/sanitizer_addrhashmap.h	/^bool AddrHashMap<T, kSize>::Handle::created() const {$/;"	f	class:__sanitizer::AddrHashMap::Handle
created_	lib/sanitizer_common/sanitizer_addrhashmap.h	/^    bool                   created_;$/;"	m	class:__sanitizer::AddrHashMap::Handle
creation_stack	lib/tsan/rtl/tsan_fd.cc	/^  u32 creation_stack;$/;"	m	struct:__tsan::FdDesc	file:
creation_stack_id	lib/tsan/rtl/tsan_rtl.h	/^  u32 creation_stack_id;$/;"	m	class:__tsan::ThreadContext
creation_stack_id	lib/tsan/rtl/tsan_sync.h	/^  u32 creation_stack_id;$/;"	m	struct:__tsan::SyncVar
creation_tid	lib/tsan/rtl/tsan_fd.cc	/^  int creation_tid;$/;"	m	struct:__tsan::FdDesc	file:
crt_copysign	lib/builtins/int_math.h	65;"	d
crt_copysign	lib/builtins/int_math.h	69;"	d
crt_copysignf	lib/builtins/int_math.h	66;"	d
crt_copysignf	lib/builtins/int_math.h	70;"	d
crt_copysignl	lib/builtins/int_math.h	67;"	d
crt_copysignl	lib/builtins/int_math.h	71;"	d
crt_fabs	lib/builtins/int_math.h	75;"	d
crt_fabs	lib/builtins/int_math.h	79;"	d
crt_fabsf	lib/builtins/int_math.h	76;"	d
crt_fabsf	lib/builtins/int_math.h	80;"	d
crt_fabsl	lib/builtins/int_math.h	77;"	d
crt_fabsl	lib/builtins/int_math.h	81;"	d
crt_fmax	lib/builtins/int_math.h	85;"	d
crt_fmax	lib/builtins/int_math.h	89;"	d
crt_fmaxf	lib/builtins/int_math.h	86;"	d
crt_fmaxf	lib/builtins/int_math.h	90;"	d
crt_fmaxl	lib/builtins/int_math.h	87;"	d
crt_fmaxl	lib/builtins/int_math.h	91;"	d
crt_isfinite	lib/builtins/int_math.h	41;"	d
crt_isfinite	lib/builtins/int_math.h	50;"	d
crt_isfinite	lib/builtins/int_math.h	52;"	d
crt_isinf	lib/builtins/int_math.h	42;"	d
crt_isinf	lib/builtins/int_math.h	60;"	d
crt_isnan	lib/builtins/int_math.h	43;"	d
crt_isnan	lib/builtins/int_math.h	61;"	d
crt_logb	lib/builtins/int_math.h	95;"	d
crt_logb	lib/builtins/int_math.h	99;"	d
crt_logbf	lib/builtins/int_math.h	100;"	d
crt_logbf	lib/builtins/int_math.h	96;"	d
crt_logbl	lib/builtins/int_math.h	101;"	d
crt_logbl	lib/builtins/int_math.h	97;"	d
crt_scalbn	lib/builtins/int_math.h	105;"	d
crt_scalbn	lib/builtins/int_math.h	109;"	d
crt_scalbnf	lib/builtins/int_math.h	106;"	d
crt_scalbnf	lib/builtins/int_math.h	110;"	d
crt_scalbnl	lib/builtins/int_math.h	107;"	d
crt_scalbnl	lib/builtins/int_math.h	111;"	d
cs	test/esan/TestCases/struct-simple.cpp	/^  } cs;$/;"	m	class:C	typeref:struct:C::__anon133	file:
ctx	lib/sanitizer_common/sanitizer_deadlock_detector1.cc	/^  u64 ctx;$/;"	m	struct:__sanitizer::DDLogicalThread	file:
ctx	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^  u64         ctx;$/;"	m	struct:__sanitizer::DDLogicalThread	file:
ctx	lib/sanitizer_common/sanitizer_deadlock_detector_interface.h	/^  u64  ctx;$/;"	m	struct:__sanitizer::DDMutex
ctx	lib/tsan/dd/dd_rtl.cc	/^static Context *ctx;$/;"	m	namespace:__dsan	file:
ctx	lib/tsan/rtl/tsan_interceptors.cc	/^  ThreadSignalContext *ctx;$/;"	m	struct:BlockingCall	file:
ctx	lib/tsan/rtl/tsan_interceptors.cc	/^  ucontext_t ctx;$/;"	m	struct:__tsan::SignalDesc	file:
ctx	lib/tsan/rtl/tsan_rtl.cc	/^Context *ctx;$/;"	m	namespace:__tsan	file:
ctx_	lib/sanitizer_common/tests/sanitizer_suppressions_test.cc	/^  SuppressionContext ctx_;$/;"	m	class:__sanitizer::SuppressionContextTest	file:
ctxfunc	test/lsan/TestCases/Linux/guard-page.c	/^static void ctxfunc() {$/;"	f	file:
ctxfunc_started	test/lsan/TestCases/Linux/guard-page.c	/^int ctxfunc_started = 0;$/;"	v
cu	test/esan/TestCases/struct-simple.cpp	/^  } cu;$/;"	m	class:C	typeref:union:C::__anon134	file:
cuid	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u32 cuid;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
cuid	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  u32 cuid;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
cuid	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    int cuid;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
cuid	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned int cuid;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
cuid	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned int cuid;          \/\/ uid_t$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
cumulation	test/BlocksRuntime/recursive-block.c	/^int cumulation = 0;$/;"	v
cur	test/msan/chained_origin_limits.cc	/^static char *buf, *cur, *end;$/;"	v	file:
cur_buffer_size	lib/profile/GCDAProfiling.c	/^static uint64_t cur_buffer_size = 0;$/;"	v	file:
cur_pos	lib/profile/GCDAProfiling.c	/^static uint64_t cur_pos = 0;$/;"	v	file:
cur_thread	lib/tsan/rtl/tsan_platform_linux.cc	/^ThreadState *cur_thread() {$/;"	f	namespace:__tsan
cur_thread	lib/tsan/rtl/tsan_platform_mac.cc	/^ThreadState *cur_thread() {$/;"	f	namespace:__tsan
cur_thread	lib/tsan/rtl/tsan_rtl.h	/^INLINE ThreadState *cur_thread() {$/;"	f	namespace:__tsan
cur_thread_finalize	lib/tsan/rtl/tsan_platform_linux.cc	/^void cur_thread_finalize() {$/;"	f	namespace:__tsan
cur_thread_finalize	lib/tsan/rtl/tsan_platform_mac.cc	/^void cur_thread_finalize() {$/;"	f	namespace:__tsan
cur_thread_finalize	lib/tsan/rtl/tsan_rtl.h	/^INLINE void cur_thread_finalize() { }$/;"	f	namespace:__tsan
cur_thread_location	lib/tsan/rtl/tsan_platform_mac.cc	/^ThreadState **cur_thread_location() {$/;"	f	namespace:__tsan
current	lib/sanitizer_common/sanitizer_linux.h	/^  const char *current;$/;"	m	struct:__sanitizer::MemoryMappingLayoutData
current_	lib/sanitizer_common/sanitizer_list.h	/^    ItemTy *current_;$/;"	m	class:__sanitizer::IntrusiveList::IteratorBase
current_arch	lib/sanitizer_common/sanitizer_mac.h	/^  ModuleArch current_arch;$/;"	m	struct:__sanitizer::MemoryMappingLayoutData
current_epoch_	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  uptr current_epoch_;$/;"	m	class:__sanitizer::DeadlockDetector
current_error_	lib/asan/asan_report.cc	/^  static ErrorDescription current_error_;$/;"	m	class:__asan::ScopedInErrorReport	file:
current_filetype	lib/sanitizer_common/sanitizer_mac.h	/^  u32 current_filetype;$/;"	m	struct:__sanitizer::MemoryMappingLayoutData
current_id	lib/profile/GCDAProfiling.c	/^static dynamic_object_id current_id;$/;"	v	file:
current_image	lib/sanitizer_common/sanitizer_mac.h	/^  int current_image;$/;"	m	struct:__sanitizer::MemoryMappingLayoutData
current_instrumented	lib/sanitizer_common/sanitizer_mac.h	/^  bool current_instrumented;$/;"	m	struct:__sanitizer::MemoryMappingLayoutData
current_load_cmd_addr	lib/sanitizer_common/sanitizer_mac.h	/^  const char *current_load_cmd_addr;$/;"	m	struct:__sanitizer::MemoryMappingLayoutData
current_load_cmd_addr	lib/sanitizer_common/sanitizer_procmaps_mac.cc	/^  const char *current_load_cmd_addr;$/;"	m	struct:__sanitizer::MemoryMappedSegmentData	file:
current_load_cmd_count	lib/sanitizer_common/sanitizer_mac.h	/^  int current_load_cmd_count;$/;"	m	struct:__sanitizer::MemoryMappingLayoutData
current_magic	lib/sanitizer_common/sanitizer_mac.h	/^  u32 current_magic;$/;"	m	struct:__sanitizer::MemoryMappingLayoutData
current_page	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^    uptr current_page;$/;"	m	class:SizeClassAllocator64::FreePagesRangeTracker
current_proc	lib/tsan/go/test.c	/^void *current_proc;$/;"	v
current_range_start_page	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^    uptr current_range_start_page;$/;"	m	class:SizeClassAllocator64::FreePagesRangeTracker
current_report	lib/tsan/rtl/tsan_rtl.h	/^  const ReportDesc *current_report;$/;"	m	struct:__tsan::ThreadState
current_thread_id	lib/lsan/lsan_common_mac.cc	/^  u32 current_thread_id;$/;"	m	struct:__lsan::__anon11	file:
current_thread_tid	lib/lsan/lsan_linux.cc	/^static THREADLOCAL u32 current_thread_tid = kInvalidTid;$/;"	m	namespace:__lsan	file:
current_uuid	lib/sanitizer_common/sanitizer_mac.h	/^  u8 current_uuid[kModuleUUIDSize];$/;"	m	struct:__sanitizer::MemoryMappingLayoutData
current_verbosity	lib/sanitizer_common/sanitizer_common.cc	/^atomic_uint32_t current_verbosity;$/;"	m	namespace:__sanitizer	file:
currently_allocated	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^    uptr n_allocs, n_frees, currently_allocated, max_allocated, by_size_log[64];$/;"	m	struct:LargeMmapAllocator::Stats
cv	test/tsan/bench_mutex.cc	/^pthread_cond_t cv;$/;"	v
cxa_at_exit_wrapper	lib/tsan/rtl/tsan_interceptors.cc	/^static void cxa_at_exit_wrapper(void *arg) {$/;"	f	file:
d	lib/builtins/ppc/DD.h	/^	double d;$/;"	m	union:__anon111
d	lib/msan/tests/msan_test.cc	/^  int a, b, c, d, e, f;$/;"	m	struct:StructByVal	file:
d	lib/sanitizer_common/sanitizer_allocator_report.cc	/^  const SanitizerCommonDecorator d;$/;"	m	class:__sanitizer::ScopedAllocatorErrorReport	file:
d	lib/tsan/rtl/tsan_md5.cc	/^  MD5_u32plus a, b, c, d;$/;"	m	struct:__tsan::__anon18	file:
d	test/asan/TestCases/Linux/sized_delete_test.cc	/^  int a, b, c, d, e;$/;"	m	struct:D2	file:
d	test/asan/TestCases/Linux/sized_delete_test.cc	/^  int a, b, c, d, e;$/;"	m	struct:S20	file:
d	test/esan/TestCases/struct-simple.cpp	/^    double d;$/;"	m	union:C::__anon134	file:
d	test/esan/TestCases/struct-simple.cpp	/^  double d;$/;"	m	union:U	file:
d	test/msan/dtor-bit-fields.cc	/^  double d = 5.0;$/;"	m	struct:Packed	file:
d1	test/esan/TestCases/struct-simple.cpp	/^  int d1;$/;"	m	struct:D	file:
d2	test/esan/TestCases/struct-simple.cpp	/^  int d2;$/;"	m	struct:D	file:
d3	test/esan/TestCases/struct-simple.cpp	/^  int d3;$/;"	m	struct:D	file:
d_fileno	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u64 d_fileno;$/;"	m	struct:__sanitizer::__sanitizer_dirent
d_fileno	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  u64 d_fileno;$/;"	m	struct:__sanitizer::__sanitizer_dirent
d_fileno	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned long long d_fileno;$/;"	m	struct:__sanitizer::__sanitizer_dirent
d_ino	lib/sanitizer_common/sanitizer_linux.cc	/^  u64 d_ino;  \/\/ d_fileno$/;"	m	struct:__sanitizer::linux_dirent	file:
d_ino	lib/sanitizer_common/sanitizer_linux.cc	/^  u64 d_ino;$/;"	m	struct:__sanitizer::linux_dirent	file:
d_ino	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^  long           d_ino;$/;"	m	struct:__sanitizer::linux_dirent	file:
d_ino	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned long long d_ino;$/;"	m	struct:__sanitizer::__sanitizer_dirent
d_ino	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned long long d_ino;$/;"	m	struct:__sanitizer::__sanitizer_dirent64
d_ino	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    uptr d_ino;$/;"	m	struct:__sanitizer::__sanitizer_dirent
d_ino	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned long d_ino;$/;"	m	struct:__sanitizer::__sanitizer_dirent
d_ino	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned long long d_ino;$/;"	m	struct:__sanitizer::__sanitizer_dirent
d_ino	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned long long d_ino;$/;"	m	struct:__sanitizer::__sanitizer_dirent64
d_name	lib/sanitizer_common/sanitizer_linux.cc	/^  char               d_name[256];$/;"	m	struct:__sanitizer::linux_dirent	file:
d_name	lib/sanitizer_common/sanitizer_linux.cc	/^  char d_name[NAME_MAX + 1];$/;"	m	struct:__sanitizer::linux_dirent	file:
d_name	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^  char           d_name[];$/;"	m	struct:__sanitizer::linux_dirent	file:
d_namlen	lib/sanitizer_common/sanitizer_linux.cc	/^  u16 d_namlen;  \/\/ not used$/;"	m	struct:__sanitizer::linux_dirent	file:
d_off	lib/sanitizer_common/sanitizer_linux.cc	/^  u64 d_off;$/;"	m	struct:__sanitizer::linux_dirent	file:
d_off	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^  off_t          d_off;$/;"	m	struct:__sanitizer::linux_dirent	file:
d_off	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  u64 d_off;$/;"	m	struct:__sanitizer::__sanitizer_dirent
d_off	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned long long d_off;$/;"	m	struct:__sanitizer::__sanitizer_dirent
d_off	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned long long d_off;$/;"	m	struct:__sanitizer::__sanitizer_dirent64
d_off	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    uptr d_off;$/;"	m	struct:__sanitizer::__sanitizer_dirent
d_off	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  long d_off;$/;"	m	struct:__sanitizer::__sanitizer_dirent
d_off	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  long long d_off;$/;"	m	struct:__sanitizer::__sanitizer_dirent
d_off	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned long long d_off;$/;"	m	struct:__sanitizer::__sanitizer_dirent64
d_reclen	lib/sanitizer_common/sanitizer_linux.cc	/^  u16 d_reclen;$/;"	m	struct:__sanitizer::linux_dirent	file:
d_reclen	lib/sanitizer_common/sanitizer_linux.cc	/^  unsigned short     d_reclen;$/;"	m	struct:__sanitizer::linux_dirent	file:
d_reclen	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^  unsigned short d_reclen;$/;"	m	struct:__sanitizer::linux_dirent	file:
d_reclen	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u16 d_reclen;$/;"	m	struct:__sanitizer::__sanitizer_dirent
d_reclen	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  u16 d_reclen;$/;"	m	struct:__sanitizer::__sanitizer_dirent
d_reclen	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned short d_reclen;$/;"	m	struct:__sanitizer::__sanitizer_dirent
d_reclen	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned short d_reclen;$/;"	m	struct:__sanitizer::__sanitizer_dirent64
d_reclen	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned short d_reclen;$/;"	m	struct:__sanitizer::__sanitizer_dirent
d_reclen	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned short d_reclen;$/;"	m	struct:__sanitizer::__sanitizer_dirent64
d_seekoff	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned long long d_seekoff;$/;"	m	struct:__sanitizer::__sanitizer_dirent
d_type	lib/sanitizer_common/sanitizer_linux.cc	/^  u8 d_type;     \/\/ not used$/;"	m	struct:__sanitizer::linux_dirent	file:
d_type	lib/sanitizer_common/sanitizer_linux.cc	/^  unsigned char      d_type;$/;"	m	struct:__sanitizer::linux_dirent	file:
dadd_asm	lib/builtins/hexagon/fastmath_dlib_asm.S	/^dadd_asm:$/;"	l
darwin_sanitizer_parallelism_group_func	unittests/lit_unittest_cfg_utils.py	/^def darwin_sanitizer_parallelism_group_func(test):$/;"	f
data	lib/asan/asan_descriptions.h	/^  AddressDescriptionData data;$/;"	m	class:__asan::AddressDescription
data	lib/builtins/emutls.c	/^    void* data[];$/;"	m	struct:emutls_address_array	file:
data	lib/dfsan/dfsan_custom.cc	/^  void *data;$/;"	m	struct:dl_iterate_phdr_info	file:
data	lib/fuzzer/FuzzerDictionary.h	/^  const uint8_t *data() const { return Data; }$/;"	f	class:fuzzer::FixedWord
data	lib/msan/msan_interceptors.cc	/^  void *data;$/;"	m	struct:dl_iterate_phdr_data	file:
data	lib/sanitizer_common/sanitizer_common.h	/^  T *data() {$/;"	f	class:__sanitizer::InternalMmapVectorNoCtor
data	lib/sanitizer_common/sanitizer_common.h	/^  const T *data() const {$/;"	f	class:__sanitizer::InternalMmapVectorNoCtor
data	lib/sanitizer_common/sanitizer_linux.h	/^  char *data;$/;"	m	struct:__sanitizer::ProcSelfMapsBuff
data	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  uptr data[5];$/;"	m	struct:__sanitizer::__sanitizer_sem_t
data	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  uptr data[5];$/;"	m	struct:__sanitizer::__sanitizer_sem_t
data	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    int data[4];$/;"	m	struct:__sanitizer::__sanitizer_sem_t
data	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    u64 data;$/;"	m	struct:__sanitizer::__sanitizer_io_event
data	lib/stats/stats.h	/^  uptr data;$/;"	m	struct:__sanitizer::StatInfo
data	lib/tsan/rtl/tsan_interceptors.cc	/^  void *data;$/;"	m	struct:dl_iterate_phdr_data	file:
data	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^typedef void (^fd_handler_t)(dispatch_data_t data, int error);$/;"	m	namespace:__tsan	file:
data	lib/tsan/tests/rtl/tsan_posix.cc	/^  int data;$/;"	m	struct:CondContext	file:
data	test/asan/TestCases/Darwin/scribble.cc	/^  long data;$/;"	m	struct:MyClass	file:
data	test/asan/TestCases/Linux/leak_check_segv.cc	/^char data[10 * 1024 * 1024];$/;"	v
data	test/tsan/barrier.cc	/^int data[2][kSize];$/;"	v
data	test/tsan/custom_mutex0.cc	/^long data;$/;"	v
data	test/tsan/custom_mutex1.cc	/^long data;$/;"	v
data	test/tsan/custom_mutex2.cc	/^long data;$/;"	v
data	test/tsan/custom_mutex3.cc	/^long data;$/;"	v
data	test/tsan/memcpy_race.cc	/^char *data = new char[10];$/;"	v
data	test/tsan/restore_stack.cc	/^volatile long data[kSize];$/;"	v
data	test/tsan/signal_sync2.cc	/^long long data[kSignalCount];$/;"	v
data	test/tsan/suppress_same_stacks.cc	/^int **data;$/;"	v
data0	test/tsan/memcmp_race.cc	/^char *data0 = new char[10];$/;"	v
data1	test/tsan/memcmp_race.cc	/^char *data1 = new char[10];$/;"	v
data1	test/tsan/memcpy_race.cc	/^char *data1 = new char[10];$/;"	v
data2	test/tsan/memcmp_race.cc	/^char *data2 = new char[10];$/;"	v
data2	test/tsan/memcpy_race.cc	/^char *data2 = new char[10];$/;"	v
data_	lib/sanitizer_common/sanitizer_common.h	/^  T *data_;$/;"	m	class:__sanitizer::InternalMmapVectorNoCtor
data_	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  uptr data_[BV::kSize];$/;"	m	class:__sanitizer::DeadlockDetector
data_	lib/sanitizer_common/sanitizer_procmaps.h	/^  MemoryMappedSegmentData *data_;$/;"	m	class:__sanitizer::MemoryMappedSegment
data_	lib/sanitizer_common/sanitizer_procmaps.h	/^  MemoryMappingLayoutData data_;$/;"	m	class:__sanitizer::MemoryMappingLayout
data_	lib/sanitizer_common/tests/sanitizer_libc_test.cc	/^  std::vector<char> data_;$/;"	m	class:SanitizerCommonFileTest	file:
data_	lib/sanitizer_common/tests/sanitizer_mutex_test.cc	/^  T data_[kSize];$/;"	m	class:__sanitizer::TestData	file:
data_	lib/tsan/tests/unit/tsan_mutex_test.cc	/^  T data_[kSize];$/;"	m	class:__tsan::TestData	file:
data_var	test/lsan/TestCases/use_globals_initialized.cc	/^void *data_var = (void *)1;$/;"	v
dcast	test/cfi/cross-dso/stats.cpp	/^extern "C" __attribute__((noinline)) A *dcast(A *a) {$/;"	f
dcast	test/cfi/stats.cpp	/^extern "C" __attribute__((noinline)) A *dcast(A *a) {$/;"	f
dd	lib/sanitizer_common/sanitizer_deadlock_detector1.cc	/^  DeadlockDetector<DDBV> dd;$/;"	m	struct:__sanitizer::DD	file:
dd	lib/sanitizer_common/sanitizer_deadlock_detector1.cc	/^  DeadlockDetectorTLS<DDBV> dd;$/;"	m	struct:__sanitizer::DDLogicalThread	file:
dd	lib/tsan/dd/dd_rtl.h	/^  DDMutex dd;$/;"	m	struct:__dsan::Mutex
dd	lib/tsan/dd/dd_rtl.h	/^  DDetector *dd;$/;"	m	struct:__dsan::Context
dd	lib/tsan/rtl/tsan_rtl.h	/^  DDetector *dd;$/;"	m	struct:__tsan::Context
dd	lib/tsan/rtl/tsan_sync.h	/^  DDMutex dd;$/;"	m	struct:__tsan::SyncVar
dd	test/profile/Linux/coverage_ctors.cpp	/^Derived dd;$/;"	v
dd_lt	lib/tsan/dd/dd_rtl.h	/^  DDLogicalThread *dd_lt;$/;"	m	struct:__dsan::Thread
dd_lt	lib/tsan/rtl/tsan_rtl.h	/^  DDLogicalThread *dd_lt;$/;"	m	struct:__tsan::ThreadState
dd_pt	lib/tsan/dd/dd_rtl.h	/^  DDPhysicalThread *dd_pt;$/;"	m	struct:__dsan::Thread
dd_pt	lib/tsan/rtl/tsan_rtl.h	/^  DDPhysicalThread *dd_pt;$/;"	m	struct:__tsan::Processor
dead	test/asan/TestCases/Darwin/dead-strip.c	/^int dead[1] = {};$/;"	v
dead_global	test/asan/TestCases/Windows/dll_global_dead_strip.c	/^int dead_global = 42;$/;"	v
dead_global	test/asan/TestCases/Windows/global_dead_strip.c	/^int dead_global = 42;$/;"	v
dead_thread_state	lib/tsan/rtl/tsan_platform_linux.cc	/^static ThreadState *dead_thread_state = nullptr;$/;"	m	namespace:__tsan	file:
dead_threads_	lib/sanitizer_common/sanitizer_thread_registry.h	/^  IntrusiveList<ThreadContextBase> dead_threads_;$/;"	m	class:__sanitizer::ThreadRegistry
deallocRaw	lib/xray/xray_buffer_queue.cc	/^template <class T> static void deallocRaw(T *ptr, size_t N) {$/;"	f	file:
dealloc_stack	lib/asan/asan_errors.h	/^  const BufferedStackTrace *dealloc_stack;$/;"	m	struct:__asan::ErrorAllocTypeMismatch
dealloc_type	lib/asan/asan_errors.h	/^  AllocType alloc_type, dealloc_type;$/;"	m	struct:__asan::ErrorAllocTypeMismatch
deallocate	lib/scudo/scudo_allocator.cpp	/^  void deallocate(void *Ptr, uptr DeleteSize, uptr DeleteAlignment,$/;"	f	struct:__scudo::Allocator
deallocatePrimary	lib/scudo/scudo_allocator_combined.h	/^  void deallocatePrimary(AllocatorCache *Cache, void *Ptr, uptr ClassId) {$/;"	f	class:CombinedAllocator
deallocateSecondary	lib/scudo/scudo_allocator_combined.h	/^  void deallocateSecondary(void *Ptr) {$/;"	f	class:CombinedAllocator
death	test/sanitizer_common/TestCases/Linux/assert.cc	/^void death() {$/;"	f
death	test/sanitizer_common/TestCases/Linux/ill.cc	/^void death() {$/;"	f
death	test/sanitizer_common/TestCases/Posix/fpe.cc	/^void death() {$/;"	f
death_function	test/asan/TestCases/Darwin/crashlog-stacktraces.c	/^void death_function() {$/;"	f
decrementExtents	lib/xray/xray_fdr_logging.cc	/^static void decrementExtents(size_t Subtract) {$/;"	f	namespace:__xray
deepCopyInto	lib/xray/xray_function_call_trie.h	/^  void deepCopyInto(FunctionCallTrie &O) const {$/;"	f	class:__xray::FunctionCallTrie
default	lib/dfsan/scripts/build-libc-list.py	/^             default='\/lib\/x86_64-linux-gnu')$/;"	v
default	lib/dfsan/scripts/build-libc-list.py	/^             default='\/usr\/lib\/gcc\/x86_64-linux-gnu\/4.6')$/;"	v
default	lib/dfsan/scripts/build-libc-list.py	/^             default='\/usr\/lib\/x86_64-linux-gnu')$/;"	v
default_seh_handler	lib/asan/asan_win.cc	/^static LPTOP_LEVEL_EXCEPTION_FILTER default_seh_handler;$/;"	v	file:
defined_function_list	lib/dfsan/scripts/build-libc-list.py	/^def defined_function_list(object):$/;"	f
delete_alignment	lib/asan/asan_errors.h	/^  uptr delete_alignment;$/;"	m	struct:__asan::ErrorNewDeleteTypeMismatch
delete_size	lib/asan/asan_errors.h	/^  uptr delete_size;$/;"	m	struct:__asan::ErrorNewDeleteTypeMismatch
demangle	lib/asan/scripts/asan_symbolize.py	/^demangle = False$/;"	v
depth	lib/msan/msan_origin.h	/^  int depth() const {$/;"	f	class:__msan::Origin
derived_a	test/msan/dtor-multiple-inheritance-nontrivial-class-members.cc	/^  int derived_a;$/;"	m	struct:Derived	file:
derived_a	test/msan/dtor-trivial-class-members.cc	/^  int derived_a;$/;"	m	struct:Derived	file:
derived_a_ptr	test/msan/dtor-multiple-inheritance-nontrivial-class-members.cc	/^  int *derived_a_ptr;$/;"	m	struct:Base	file:
derived_b	test/msan/dtor-multiple-inheritance-nontrivial-class-members.cc	/^  double derived_b;$/;"	m	struct:Derived	file:
derived_b	test/msan/dtor-trivial-class-members.cc	/^  double derived_b;$/;"	m	struct:Derived	file:
derived_b_ptr	test/msan/dtor-multiple-inheritance-nontrivial-class-members.cc	/^  double *derived_b_ptr;$/;"	m	struct:Base	file:
derived_c	test/msan/dtor-multiple-inheritance-nontrivial-class-members.cc	/^  double derived_c;$/;"	m	struct:Derived	file:
derived_c	test/msan/dtor-trivial-class-members.cc	/^  double derived_c;$/;"	m	struct:Derived	file:
derived_c_ptr	test/msan/dtor-multiple-inheritance-nontrivial-class-members.cc	/^  double *derived_c_ptr;$/;"	m	struct:Base	file:
derived_v1	test/msan/dtor-multiple-inheritance-nontrivial-class-members.cc	/^  Vector<int> derived_v1;$/;"	m	struct:Derived	file:
derived_v1	test/msan/dtor-trivial-class-members.cc	/^  Vector<int> derived_v1;$/;"	m	struct:Derived	file:
derived_v1_ptr	test/msan/dtor-multiple-inheritance-nontrivial-class-members.cc	/^  Vector<int> *derived_v1_ptr;$/;"	m	struct:Base	file:
derived_v2	test/msan/dtor-multiple-inheritance-nontrivial-class-members.cc	/^  Vector<int> derived_v2;$/;"	m	struct:Derived	file:
derived_v2	test/msan/dtor-trivial-class-members.cc	/^  Vector<int> derived_v2;$/;"	m	struct:Derived	file:
derived_v2_ptr	test/msan/dtor-multiple-inheritance-nontrivial-class-members.cc	/^  Vector<int> *derived_v2_ptr;$/;"	m	struct:Base	file:
desc	include/sanitizer/dfsan_interface.h	/^  const char *desc;$/;"	m	struct:dfsan_label_info
desc	lib/dfsan/dfsan.h	/^  const char *desc;$/;"	m	struct:dfsan_label_info
desc	lib/sanitizer_common/sanitizer_flag_parser.h	/^    const char *desc;$/;"	m	struct:__sanitizer::FlagParser::Flag
desc	lib/sanitizer_common/sanitizer_stackdepot.h	/^    StackDepotNode *desc;$/;"	m	struct:__sanitizer::StackDepotReverseMap::IdDescPair
desc	lib/tsan/rtl/tsan_interface_ann.cc	/^  char desc[kMaxDescLen];$/;"	m	struct:__tsan::ExpectRace	file:
descr	lib/asan/asan_fake_stack.h	/^  uptr descr;  \/\/ Modified by the instrumented code.$/;"	m	struct:__asan::FakeFrame
descr	lib/asan/asan_scariness_score.h	/^  char descr[1024];$/;"	m	struct:__asan::ScarinessScoreBase
description_string_length	lib/xray/xray_interface.cc	/^  std::size_t description_string_length;$/;"	m	struct:__xray::TypeDescription	file:
descriptor	lib/BlocksRuntime/Block_private.h	/^    struct Block_descriptor *descriptor;$/;"	m	struct:Block_layout	typeref:struct:Block_layout::Block_descriptor
descriptor_	lib/sanitizer_common/sanitizer_linux.h	/^  int descriptor_ = -1;$/;"	m	class:__sanitizer::ThreadLister
descs_	lib/tsan/rtl/tsan_mutexset.h	/^  Desc descs_[kMaxSize];$/;"	m	class:__tsan::MutexSet
dest	lib/dfsan/scripts/build-libc-list.py	/^             dest='with_libstdcxx',$/;"	v
destroyCache	lib/scudo/scudo_allocator_combined.h	/^  void destroyCache(AllocatorCache *Cache) {$/;"	f	class:CombinedAllocator
destroy_flags_	test/tsan/custom_mutex.h	/^  unsigned destroy_flags_;$/;"	m	class:Mutex
destroyed	lib/tsan/rtl/tsan_report.h	/^  bool destroyed;$/;"	m	struct:__tsan::ReportMutex
destructor	lib/sanitizer_common/tests/sanitizer_posix_test.cc	/^void destructor(void *arg) {$/;"	f	namespace:__sanitizer
destructor_executed	lib/sanitizer_common/tests/sanitizer_posix_test.cc	/^static bool destructor_executed;$/;"	m	namespace:__sanitizer	file:
destructor_iterations	lib/asan/asan_thread.h	/^  u8 destructor_iterations;$/;"	m	class:__asan::AsanThreadContext
destructor_iterations_	lib/hwasan/hwasan_thread.h	/^  int destructor_iterations_;$/;"	m	class:__hwasan::HwasanThread
destructor_iterations_	lib/msan/msan_thread.h	/^  int destructor_iterations_;$/;"	m	class:__msan::MsanThread
destructors	test/BlocksRuntime/copyconstructor.C	/^int destructors = 0;$/;"	v
destructors	test/BlocksRuntime/reference.C	/^int destructors = 0;$/;"	v
det0	test/fuzzer/PrintUnstableStatsTest.cpp	/^__attribute__((noinline)) void det0() { x++; }$/;"	f
det1	test/fuzzer/PrintUnstableStatsTest.cpp	/^__attribute__((noinline)) void det1() { x++; }$/;"	f
det2	test/fuzzer/PrintUnstableStatsTest.cpp	/^__attribute__((noinline)) void det2() { x++; }$/;"	f
det3	test/fuzzer/PrintUnstableStatsTest.cpp	/^__attribute__((noinline)) void det3() { x++; }$/;"	f
det4	test/fuzzer/PrintUnstableStatsTest.cpp	/^__attribute__((noinline)) void det4() { x++; }$/;"	f
detached	lib/sanitizer_common/sanitizer_thread_registry.h	/^  bool detached;$/;"	m	class:__sanitizer::ThreadContextBase
detached	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^  bool detached;$/;"	m	struct:ScopedThread::Impl	file:
detectX86FamilyModel	lib/builtins/cpu_model.c	/^static void detectX86FamilyModel(unsigned EAX, unsigned *Family,$/;"	f	file:
device	lib/sanitizer_common/sanitizer_mac.cc	/^  mach_vm_size_t device;$/;"	m	struct:__sanitizer::__sanitizer_task_vm_info	file:
device_args	test/sanitizer_common/android_commands/android_run.py	/^device_args = ' '.join(sys.argv[1:]) # FIXME: escape?$/;"	v
device_binary	test/sanitizer_common/android_commands/android_run.py	/^device_binary = host_to_device_path(sys.argv[0])$/;"	v
device_env	test/sanitizer_common/android_commands/android_run.py	/^device_env = build_env()$/;"	v
device_exitcode	test/sanitizer_common/android_commands/android_run.py	/^device_exitcode = device_binary + '.exitcode'$/;"	v
device_id	test/sanitizer_common/ios_commands/iossim_run.py	/^device_id = os.environ["SANITIZER_IOSSIM_TEST_DEVICE_IDENTIFIER"]$/;"	v
device_peak	lib/sanitizer_common/sanitizer_mac.cc	/^  mach_vm_size_t device_peak;$/;"	m	struct:__sanitizer::__sanitizer_task_vm_info	file:
device_stderr	test/sanitizer_common/android_commands/android_run.py	/^device_stderr = device_binary + '.stderr'$/;"	v
device_stdout	test/sanitizer_common/android_commands/android_run.py	/^device_stdout = device_binary + '.stdout'$/;"	v
dfsan_add_label	lib/dfsan/dfsan.cc	/^void dfsan_add_label(dfsan_label label, void *addr, uptr size) {$/;"	f
dfsan_check_label	lib/dfsan/dfsan.cc	/^static void dfsan_check_label(dfsan_label label) {$/;"	f	file:
dfsan_create_label	lib/dfsan/dfsan.cc	/^dfsan_label dfsan_create_label(const char *desc, void *userdata) {$/;"	f
dfsan_dump_labels	lib/dfsan/dfsan.cc	/^dfsan_dump_labels(int fd) {$/;"	f
dfsan_fini	lib/dfsan/dfsan.cc	/^static void dfsan_fini() {$/;"	f	file:
dfsan_get_label_count	lib/dfsan/dfsan.cc	/^dfsan_get_label_count(void) {$/;"	f
dfsan_get_label_info	lib/dfsan/dfsan.cc	/^const struct dfsan_label_info *dfsan_get_label_info(dfsan_label label) {$/;"	f
dfsan_has_label	lib/dfsan/dfsan.cc	/^dfsan_has_label(dfsan_label label, dfsan_label elem) {$/;"	f
dfsan_has_label_with_desc	lib/dfsan/dfsan.cc	/^dfsan_has_label_with_desc(dfsan_label label, const char *desc) {$/;"	f
dfsan_init	lib/dfsan/dfsan.cc	/^static void dfsan_init(int argc, char **argv, char **envp) {$/;"	f	file:
dfsan_init_ptr	lib/dfsan/dfsan.cc	/^static void (*dfsan_init_ptr)(int, char **, char **) = dfsan_init;$/;"	v	file:
dfsan_label	include/sanitizer/dfsan_interface.h	/^typedef uint16_t dfsan_label;$/;"	t
dfsan_label	lib/dfsan/dfsan.h	/^typedef u16 dfsan_label;$/;"	t
dfsan_label_info	include/sanitizer/dfsan_interface.h	/^struct dfsan_label_info {$/;"	s
dfsan_label_info	lib/dfsan/dfsan.h	/^struct dfsan_label_info {$/;"	s
dfsan_label_va	lib/dfsan/dfsan_custom.cc	/^typedef int dfsan_label_va;$/;"	t	file:
dfsan_memcpy	lib/dfsan/dfsan_custom.cc	/^static void *dfsan_memcpy(void *dest, const void *src, size_t n) {$/;"	f	file:
dfsan_memset	lib/dfsan/dfsan_custom.cc	/^static void dfsan_memset(void *s, int c, dfsan_label c_label, size_t n) {$/;"	f	file:
dfsan_read_label	lib/dfsan/dfsan.cc	/^dfsan_read_label(const void *addr, uptr size) {$/;"	f
dfsan_set_label	include/sanitizer/dfsan_interface.h	/^void dfsan_set_label(dfsan_label label, T &data) {  \/\/ NOLINT$/;"	f
dfsan_set_label	lib/dfsan/dfsan.cc	/^void dfsan_set_label(dfsan_label label, void *addr, uptr size) {$/;"	f
dfsan_set_label	lib/dfsan/dfsan.h	/^void dfsan_set_label(dfsan_label label, T &data) {  \/\/ NOLINT$/;"	f
dfsan_union	lib/dfsan/dfsan.cc	/^dfsan_union(dfsan_label l1, dfsan_label l2) {$/;"	f
dfsan_union_table_t	lib/dfsan/dfsan.cc	/^typedef atomic_dfsan_label dfsan_union_table_t[kNumLabels][kNumLabels];$/;"	t	file:
dfsan_write_callback_t	include/sanitizer/dfsan_interface.h	/^typedef void (*dfsan_write_callback_t)(int fd, const void *buf, size_t count);$/;"	t
di_int	lib/builtins/int_types.h	/^typedef          long long di_int;$/;"	t
die	test/lsan/TestCases/Linux/guard-page.c	/^static void die(const char* msg, int err) {$/;"	f	file:
dieWithMessage	lib/scudo/scudo_utils.cpp	/^FORMAT(1, 2) void NORETURN dieWithMessage(const char *Format, ...) {$/;"	f	namespace:__scudo
diff	lib/xray/xray_utils.h	/^constexpr ptrdiff_t diff(uintptr_t A, uintptr_t B) {$/;"	f	namespace:__xray
different_sign	lib/builtins/ppc/DD.h	/^static __inline ALWAYS_INLINE int different_sign(double x, double y) {$/;"	f
dirfd	lib/tsan/rtl/tsan_interceptors.cc	44;"	d	file:
dirtyStack	test/BlocksRuntime/recursive-block.c	/^void dirtyStack() {$/;"	f
disable_counter	lib/lsan/lsan_common_linux.cc	/^THREADLOCAL int disable_counter;$/;"	m	namespace:__lsan	file:
disable_counter	lib/lsan/lsan_common_mac.cc	/^  int disable_counter;$/;"	m	struct:__lsan::__anon11	file:
dispatch_call_Block_with_release2	test/BlocksRuntime/dispatch_call_Block_with_release.c	/^dispatch_call_Block_with_release2(void *block)$/;"	f
dispatch_callback_wrap	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^static void dispatch_callback_wrap(void *param) {$/;"	f	namespace:__tsan
dispatch_function_t	lib/asan/asan_mac.cc	/^typedef void (*dispatch_function_t)(void *block);$/;"	t	namespace:__asan	file:
dispatch_function_t	lib/lsan/lsan_mac.cc	/^typedef void (*dispatch_function_t)(void *block);$/;"	t	namespace:__lsan	file:
dispatch_group_t	lib/asan/asan_mac.cc	/^typedef void* dispatch_group_t;$/;"	t	namespace:__asan	file:
dispatch_group_t	lib/lsan/lsan_mac.cc	/^typedef void *dispatch_group_t;$/;"	t	namespace:__lsan	file:
dispatch_once	lib/tsan/rtl/tsan_libdispatch_mac.cc	274;"	d	file:
dispatch_once_f	lib/tsan/rtl/tsan_libdispatch_mac.cc	296;"	d	file:
dispatch_queue_offsets	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^} dispatch_queue_offsets;$/;"	m	namespace:__tsan	typeref:struct:__tsan::dispatch_queue_offsets_s	file:
dispatch_queue_offsets_s	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^extern "C" struct dispatch_queue_offsets_s {$/;"	s	namespace:__tsan	file:
dispatch_queue_t	lib/asan/asan_mac.cc	/^typedef void* dispatch_queue_t;$/;"	t	namespace:__asan	file:
dispatch_queue_t	lib/lsan/lsan_mac.cc	/^typedef void *dispatch_queue_t;$/;"	t	namespace:__lsan	file:
dispatch_source_t	lib/asan/asan_mac.cc	/^typedef void* dispatch_source_t;$/;"	t	namespace:__asan	file:
dispatch_source_t	lib/lsan/lsan_mac.cc	/^typedef void *dispatch_source_t;$/;"	t	namespace:__lsan	file:
dispatch_sync_post_execute	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^static void dispatch_sync_post_execute(ThreadState *thr, uptr pc,$/;"	f	namespace:__tsan
dispatch_sync_pre_execute	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^static void dispatch_sync_pre_execute(ThreadState *thr, uptr pc,$/;"	f	namespace:__tsan
dispatch_time_t	lib/asan/asan_mac.cc	/^typedef u64 dispatch_time_t;$/;"	t	namespace:__asan	file:
dispatch_time_t	lib/lsan/lsan_mac.cc	/^typedef u64 dispatch_time_t;$/;"	t	namespace:__lsan	file:
dispose	lib/BlocksRuntime/Block_private.h	/^    void (*dispose)(void *);$/;"	m	struct:Block_descriptor
dl_iterate_phdr	lib/sanitizer_common/sanitizer_linux_libcdep.cc	531;"	d	file:
dl_iterate_phdr_cb	lib/cfi/cfi.cc	/^int dl_iterate_phdr_cb(dl_phdr_info *info, size_t size, void *data) {$/;"	f	namespace:__cfi
dl_iterate_phdr_cb	lib/dfsan/dfsan_custom.cc	/^int dl_iterate_phdr_cb(struct dl_phdr_info *info, size_t size, void *data) {$/;"	f
dl_iterate_phdr_cb	lib/msan/msan_interceptors.cc	/^typedef int (*dl_iterate_phdr_cb)(__sanitizer_dl_phdr_info *info, SIZE_T size,$/;"	t	file:
dl_iterate_phdr_cb	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^static int dl_iterate_phdr_cb(dl_phdr_info *info, size_t size, void *arg) {$/;"	f	namespace:__sanitizer
dl_iterate_phdr_cb	lib/tsan/rtl/tsan_interceptors.cc	/^static int dl_iterate_phdr_cb(__sanitizer_dl_phdr_info *info, SIZE_T size,$/;"	f	file:
dl_iterate_phdr_cb_t	lib/tsan/rtl/tsan_interceptors.cc	/^typedef int (*dl_iterate_phdr_cb_t)(__sanitizer_dl_phdr_info *info, SIZE_T size,$/;"	t	file:
dl_iterate_phdr_data	lib/msan/msan_interceptors.cc	/^struct dl_iterate_phdr_data {$/;"	s	file:
dl_iterate_phdr_data	lib/tsan/rtl/tsan_interceptors.cc	/^struct dl_iterate_phdr_data {$/;"	s	file:
dl_iterate_phdr_info	lib/dfsan/dfsan_custom.cc	/^struct dl_iterate_phdr_info {$/;"	s	file:
dl_iterate_phdr_test_cb	lib/sanitizer_common/sanitizer_linux.cc	/^static int dl_iterate_phdr_test_cb(struct dl_phdr_info *info, size_t size,$/;"	f	namespace:__sanitizer
dl_iterate_phdr_test_cb	test/dfsan/custom.cc	/^int dl_iterate_phdr_test_cb(struct dl_phdr_info *info, size_t size,$/;"	f
dl_phdr_callback	lib/msan/tests/msan_test.cc	/^static int dl_phdr_callback(struct dl_phdr_info *info, size_t size, void *data) {$/;"	f	file:
dl_phdr_info	lib/sanitizer_common/sanitizer_linux_libcdep.cc	530;"	d	file:
dl_phdr_info	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^CHECK_TYPE_SIZE(dl_phdr_info);$/;"	v
dladdr_testfn	lib/msan/tests/msan_test.cc	/^static void dladdr_testfn() {}$/;"	f	file:
dli_fbase	lib/msan/msan_interceptors.cc	/^  void *dli_fbase;$/;"	m	struct:dlinfo	file:
dli_fname	lib/msan/msan_interceptors.cc	/^  char *dli_fname;$/;"	m	struct:dlinfo	file:
dli_saddr	lib/msan/msan_interceptors.cc	/^  void *dli_saddr;$/;"	m	struct:dlinfo	file:
dli_sname	lib/msan/msan_interceptors.cc	/^  char *dli_sname;$/;"	m	struct:dlinfo	file:
dlinfo	lib/msan/msan_interceptors.cc	/^struct dlinfo {$/;"	s	file:
dllThunkGetRealAddrOrDie	lib/sanitizer_common/sanitizer_win_dll_thunk.cc	/^uptr dllThunkGetRealAddrOrDie(const char *name) {$/;"	f	namespace:__sanitizer
dllThunkIntercept	lib/sanitizer_common/sanitizer_win_dll_thunk.cc	/^int dllThunkIntercept(const char* main_function, uptr dll_function) {$/;"	f	namespace:__sanitizer
dllThunkInterceptWhenPossible	lib/sanitizer_common/sanitizer_win_dll_thunk.cc	/^int dllThunkInterceptWhenPossible(const char* main_function,$/;"	f	namespace:__sanitizer
dll_thunk_thread_init	lib/sanitizer_common/sanitizer_win_dll_thunk.cc	/^static void WINAPI dll_thunk_thread_init(void *mod, unsigned long reason,$/;"	f	file:
dlpi_addr	lib/sanitizer_common/sanitizer_freebsd.h	/^  Elf_Addr dlpi_addr;$/;"	m	struct:__sanitizer::xdl_phdr_info
dlpi_addr	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  uptr dlpi_addr;$/;"	m	struct:__sanitizer::__sanitizer_dl_phdr_info
dlpi_addr	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  u64 dlpi_addr;$/;"	m	struct:__sanitizer::__sanitizer_dl_phdr_info
dlpi_addr	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    uptr dlpi_addr;$/;"	m	struct:__sanitizer::__sanitizer_dl_phdr_info
dlpi_addr	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  uptr dlpi_addr;$/;"	m	struct:__sanitizer::__sanitizer_dl_phdr_info
dlpi_adds	lib/sanitizer_common/sanitizer_freebsd.h	/^  unsigned long long int dlpi_adds;$/;"	m	struct:__sanitizer::xdl_phdr_info
dlpi_name	lib/sanitizer_common/sanitizer_freebsd.h	/^  const char *dlpi_name;$/;"	m	struct:__sanitizer::xdl_phdr_info
dlpi_name	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  const char *dlpi_name;$/;"	m	struct:__sanitizer::__sanitizer_dl_phdr_info
dlpi_name	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  const char *dlpi_name;$/;"	m	struct:__sanitizer::__sanitizer_dl_phdr_info
dlpi_name	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    const char *dlpi_name;$/;"	m	struct:__sanitizer::__sanitizer_dl_phdr_info
dlpi_name	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  const char *dlpi_name;$/;"	m	struct:__sanitizer::__sanitizer_dl_phdr_info
dlpi_phdr	lib/sanitizer_common/sanitizer_freebsd.h	/^  const XElf32_Phdr *dlpi_phdr;$/;"	m	struct:__sanitizer::xdl_phdr_info
dlpi_phdr	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  const void *dlpi_phdr;$/;"	m	struct:__sanitizer::__sanitizer_dl_phdr_info
dlpi_phdr	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  const void *dlpi_phdr;$/;"	m	struct:__sanitizer::__sanitizer_dl_phdr_info
dlpi_phdr	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    const void *dlpi_phdr;$/;"	m	struct:__sanitizer::__sanitizer_dl_phdr_info
dlpi_phdr	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  const void *dlpi_phdr;$/;"	m	struct:__sanitizer::__sanitizer_dl_phdr_info
dlpi_phnum	lib/sanitizer_common/sanitizer_freebsd.h	/^  Elf_Half dlpi_phnum;$/;"	m	struct:__sanitizer::xdl_phdr_info
dlpi_phnum	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  short dlpi_phnum;$/;"	m	struct:__sanitizer::__sanitizer_dl_phdr_info
dlpi_phnum	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  u16 dlpi_phnum;$/;"	m	struct:__sanitizer::__sanitizer_dl_phdr_info
dlpi_phnum	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  u32 dlpi_phnum;$/;"	m	struct:__sanitizer::__sanitizer_dl_phdr_info
dlpi_phnum	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    short dlpi_phnum;$/;"	m	struct:__sanitizer::__sanitizer_dl_phdr_info
dlpi_phnum	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  short dlpi_phnum;$/;"	m	struct:__sanitizer::__sanitizer_dl_phdr_info
dlpi_subs	lib/sanitizer_common/sanitizer_freebsd.h	/^  unsigned long long int dlpi_subs;$/;"	m	struct:__sanitizer::xdl_phdr_info
dlpi_tls_data	lib/sanitizer_common/sanitizer_freebsd.h	/^  void *dlpi_tls_data;$/;"	m	struct:__sanitizer::xdl_phdr_info
dlpi_tls_modid	lib/sanitizer_common/sanitizer_freebsd.h	/^  size_t dlpi_tls_modid;$/;"	m	struct:__sanitizer::xdl_phdr_info
dmpy_asm	lib/builtins/hexagon/fastmath_dlib_asm.S	/^dmpy_asm:$/;"	l
doIt	test/profile/Inputs/extern_template.h	/^  void doIt(int N) { \/\/ CHECK: [[@LINE]]| 2|  void doIt$/;"	f	struct:Test
doMerging	lib/profile/InstrProfilingFile.c	/^static unsigned doMerging() { return lprofCurFilename.MergePoolSize; }$/;"	f	file:
doProfileMerging	lib/profile/InstrProfilingFile.c	/^static int doProfileMerging(FILE *ProfileFile, int *MergeDone) {$/;"	f	file:
doSomething	test/BlocksRuntime/recursive-block.c	/^int doSomething(int i) {$/;"	f
doSth	test/profile/runtime_infinite.c	/^__attribute__((noinline)) void doSth() {$/;"	f
do_access	test/asan/TestCases/Linux/asan_preload_test-1.cc	/^void do_access(const void *p) {$/;"	f
do_access	test/asan/TestCases/Linux/asan_preload_test-2.cc	/^void do_access(void *p) {$/;"	f
do_access	test/asan/TestCases/Linux/asan_rt_confict_test-2.cc	/^void do_access(const void *p) { dummy = ((const char *)p)[1]; }$/;"	f
do_another_bad_thing	test/asan/TestCases/Posix/start-deactivated.cc	/^extern "C" void do_another_bad_thing() {$/;"	f
do_nothing	test/cfi/cross-dso/icall/dlopen.cpp	/^extern "C" __attribute__((aligned(4096))) void do_nothing() {}$/;"	f
do_nothing	test/dfsan/vararg.c	/^int do_nothing(const char *format, ...) {$/;"	f
do_nothing_signal_handler	test/tsan/sigsuspend.cc	/^void do_nothing_signal_handler(int signum) {$/;"	f
do_overflow	test/ubsan/TestCases/Integer/suppressions.cpp	/^extern "C" void do_overflow() {$/;"	f
do_uaf	test/asan/TestCases/Windows/unsymbolized.cc	/^int do_uaf(void) {$/;"	f
done	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^  atomic_uintptr_t done;$/;"	m	struct:__sanitizer::TracerThreadArgument	file:
done	test/asan/TestCases/Windows/bind_io_completion_callback.cc	/^HANDLE done;$/;"	v
done	test/asan/TestCases/Windows/queue_user_work_item.cc	/^HANDLE done;$/;"	v
done	test/asan/TestCases/Windows/queue_user_work_item_report.cc	/^HANDLE done;$/;"	v
done	test/msan/fork.cc	/^int done;$/;"	v
done	test/tsan/cond_race.cc	/^  bool done;$/;"	m	struct:Ctx	file:
done	test/tsan/signal_errno.cc	/^volatile int done;$/;"	v
done	test/tsan/signal_sync2.cc	/^int done;$/;"	v
done1	test/tsan/cond_destruction.cc	/^bool done1, done2;$/;"	v
done2	test/tsan/cond_destruction.cc	/^bool done1, done2;$/;"	v
done_bar	test/builtins/Unit/gcc_personality_test_helper.cxx	/^void done_bar()$/;"	f
done_foo	test/builtins/Unit/gcc_personality_test_helper.cxx	/^void done_foo()$/;"	f
double_bits	lib/builtins/int_types.h	/^} double_bits;$/;"	t	typeref:union:__anon121
doublebits	lib/builtins/ppc/DD.h	/^} doublebits;$/;"	t	typeref:union:__anon111
dp	lib/sanitizer_common/tests/sanitizer_deadlock_detector_test.cc	/^  DeadlockDetector<BV> *dp;$/;"	m	struct:ScopedDD	file:
dqo_flags	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^  const uint16_t dqo_flags;$/;"	m	struct:__tsan::dispatch_queue_offsets_s	file:
dqo_flags_size	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^  const uint16_t dqo_flags_size;$/;"	m	struct:__tsan::dispatch_queue_offsets_s	file:
dqo_label	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^  const uint16_t dqo_label;$/;"	m	struct:__tsan::dispatch_queue_offsets_s	file:
dqo_label_size	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^  const uint16_t dqo_label_size;$/;"	m	struct:__tsan::dispatch_queue_offsets_s	file:
dqo_priority	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^  const uint16_t dqo_priority;$/;"	m	struct:__tsan::dispatch_queue_offsets_s	file:
dqo_priority_size	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^  const uint16_t dqo_priority_size;$/;"	m	struct:__tsan::dispatch_queue_offsets_s	file:
dqo_running	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^  const uint16_t dqo_running;$/;"	m	struct:__tsan::dispatch_queue_offsets_s	file:
dqo_running_size	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^  const uint16_t dqo_running_size;$/;"	m	struct:__tsan::dispatch_queue_offsets_s	file:
dqo_serialnum	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^  const uint16_t dqo_serialnum;$/;"	m	struct:__tsan::dispatch_queue_offsets_s	file:
dqo_serialnum_size	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^  const uint16_t dqo_serialnum_size;$/;"	m	struct:__tsan::dispatch_queue_offsets_s	file:
dqo_suspend_cnt	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^  const uint16_t dqo_suspend_cnt;$/;"	m	struct:__tsan::dispatch_queue_offsets_s	file:
dqo_suspend_cnt_size	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^  const uint16_t dqo_suspend_cnt_size;$/;"	m	struct:__tsan::dispatch_queue_offsets_s	file:
dqo_target_queue	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^  const uint16_t dqo_target_queue;$/;"	m	struct:__tsan::dispatch_queue_offsets_s	file:
dqo_target_queue_size	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^  const uint16_t dqo_target_queue_size;$/;"	m	struct:__tsan::dispatch_queue_offsets_s	file:
dqo_version	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^  const uint16_t dqo_version;$/;"	m	struct:__tsan::dispatch_queue_offsets_s	file:
dqo_width	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^  const uint16_t dqo_width;$/;"	m	struct:__tsan::dispatch_queue_offsets_s	file:
dqo_width_size	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^  const uint16_t dqo_width_size;$/;"	m	struct:__tsan::dispatch_queue_offsets_s	file:
ds	test/esan/TestCases/struct-simple.cpp	/^  } ds[10];$/;"	m	struct:D	typeref:struct:D::__anon132	file:
dso_function	test/ubsan/TestCases/Misc/Inputs/no-interception-dso.c	/^int dso_function(int i) {$/;"	f
dso_global	lib/msan/tests/msan_loadable.cc	/^static void *dso_global;$/;"	v	file:
dso_id	lib/sanitizer_common/sanitizer_tls_get_addr.cc	/^  uptr dso_id;$/;"	m	struct:__sanitizer::TlsGetAddrParam	file:
dso_symbol	test/cfi/cross-dso-diagnostic.cpp	/^void* dso_symbol() { return new S1(); }$/;"	f
dst	test/profile/Linux/instrprof-value-merge.c	/^char dst[200];$/;"	v
dstFromRep	lib/builtins/fp_extend.h	/^static __inline dst_t dstFromRep(dst_rep_t x) {$/;"	f
dstFromRep	lib/builtins/fp_trunc.h	/^static __inline dst_t dstFromRep(dst_rep_t x) {$/;"	f
dstSigBits	lib/builtins/fp_extend.h	/^static const int dstSigBits = 112;$/;"	v
dstSigBits	lib/builtins/fp_extend.h	/^static const int dstSigBits = 23;$/;"	v
dstSigBits	lib/builtins/fp_extend.h	/^static const int dstSigBits = 52;$/;"	v
dstSigBits	lib/builtins/fp_trunc.h	/^static const int dstSigBits = 10;$/;"	v
dstSigBits	lib/builtins/fp_trunc.h	/^static const int dstSigBits = 23;$/;"	v
dstSigBits	lib/builtins/fp_trunc.h	/^static const int dstSigBits = 52;$/;"	v
dst_rep_t	lib/builtins/fp_extend.h	/^typedef __uint128_t dst_rep_t;$/;"	t
dst_rep_t	lib/builtins/fp_extend.h	/^typedef uint32_t dst_rep_t;$/;"	t
dst_rep_t	lib/builtins/fp_extend.h	/^typedef uint64_t dst_rep_t;$/;"	t
dst_rep_t	lib/builtins/fp_trunc.h	/^typedef uint16_t dst_rep_t;$/;"	t
dst_rep_t	lib/builtins/fp_trunc.h	/^typedef uint32_t dst_rep_t;$/;"	t
dst_rep_t	lib/builtins/fp_trunc.h	/^typedef uint64_t dst_rep_t;$/;"	t
dst_t	lib/builtins/fp_extend.h	/^typedef double dst_t;$/;"	t
dst_t	lib/builtins/fp_extend.h	/^typedef float dst_t;$/;"	t
dst_t	lib/builtins/fp_extend.h	/^typedef long double dst_t;$/;"	t
dst_t	lib/builtins/fp_trunc.h	/^typedef double dst_t;$/;"	t
dst_t	lib/builtins/fp_trunc.h	/^typedef float dst_t;$/;"	t
dst_t	lib/builtins/fp_trunc.h	/^typedef uint16_t dst_t;$/;"	t
dstflag	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  short dstflag;$/;"	m	struct:__sanitizer::__sanitizer_timeb
dstflag	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    short dstflag;$/;"	m	struct:__sanitizer::__sanitizer_timeb
dstflag	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  short dstflag;$/;"	m	struct:__sanitizer::__sanitizer_timeb
dsub_asm	lib/builtins/hexagon/fastmath_dlib_asm.S	/^dsub_asm:$/;"	l
dtls	lib/asan/asan_thread.h	/^  DTLS *dtls() { return dtls_; }$/;"	f	class:__asan::AsanThread
dtls	lib/lsan/lsan_thread.cc	/^  DTLS *dtls;$/;"	m	struct:__lsan::OnStartedArgs	file:
dtls	lib/lsan/lsan_thread.h	/^  DTLS *dtls() { return dtls_; }$/;"	f	class:__lsan::ThreadContext
dtls	lib/sanitizer_common/sanitizer_tls_get_addr.cc	/^static __thread DTLS dtls;$/;"	m	namespace:__sanitizer	file:
dtls	lib/sanitizer_common/tests/sanitizer_deadlock_detector_test.cc	/^  DeadlockDetectorTLS<BV> dtls;$/;"	m	struct:ScopedDD	file:
dtls_	lib/asan/asan_thread.h	/^  DTLS *dtls_;$/;"	m	class:__asan::AsanThread
dtls_	lib/lsan/lsan_thread.h	/^  DTLS *dtls_;$/;"	m	class:__lsan::ThreadContext
dtorCheck	test/ubsan/TestCases/TypeCheck/vptr.cpp	/^bool dtorCheck = false;$/;"	v
dtor_counter	test/asan/TestCases/Posix/new_array_cookie_uaf_test.cc	/^int dtor_counter;$/;"	v
dtors_thread	lib/tsan/tests/rtl/tsan_posix.cc	/^static void *dtors_thread(void *p) {$/;"	f	file:
dtv	lib/sanitizer_common/sanitizer_tls_get_addr.h	/^  DTV *dtv;  \/\/ dtv_size elements, allocated by MmapOrDie.$/;"	m	struct:__sanitizer::DTLS
dtv_size	lib/sanitizer_common/sanitizer_tls_get_addr.h	/^  uptr dtv_size;$/;"	m	struct:__sanitizer::DTLS
du_int	lib/builtins/int_types.h	/^typedef unsigned long long du_int;$/;"	t
dummy	lib/msan/tests/msan_test.cc	/^  U4 dummy;$/;"	m	struct:__anon9::S	file:
dummy	test/BlocksRuntime/byrefcopyint.c	/^voidVoid dummy;$/;"	v
dummy	test/asan/TestCases/Darwin/haswell-symbolication.cc	/^void dummy(char *a, char *b) {$/;"	f
dummy	test/asan/TestCases/Linux/asan_preload_test-1.cc	/^char dummy;$/;"	v
dummy	test/asan/TestCases/Linux/asan_rt_confict_test-2.cc	/^char dummy;$/;"	v
dummy	test/asan/TestCases/Linux/calloc-preload.c	/^void *dummy = init;$/;"	v
dummy_address_	lib/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc	/^  static const uptr dummy_address_ =$/;"	m	class:__sanitizer::Addr2LinePool	file:
dummy_global	test/asan/TestCases/Darwin/haswell-symbolication.cc	/^long dummy_global;$/;"	v
dummy_global2	test/asan/TestCases/Darwin/haswell-symbolication.cc	/^long dummy_global2[100];$/;"	v
dump	lib/profile/InstrProfilingPlatformFuchsia.c	/^static int dump(void) {$/;"	f	file:
dumpBuffer	test/profile/instrprof-merge.c	/^int dumpBuffer(const char *FileN, const char *Buffer, uint64_t Size) {$/;"	f
dumpWithoutReturn	lib/profile/InstrProfilingPlatformFuchsia.c	/^static void dumpWithoutReturn(void) { dump(); }$/;"	f	file:
dwords	lib/builtins/int_types.h	/^} dwords;$/;"	t	typeref:union:__anon112
dyldVersionNumber	lib/sanitizer_common/sanitizer_mac.cc	/^extern "C" SANITIZER_WEAK_ATTRIBUTE double dyldVersionNumber;$/;"	m	namespace:__sanitizer	file:
dyld_hdr	lib/sanitizer_common/sanitizer_procmaps_mac.cc	/^static mach_header *dyld_hdr = 0;$/;"	m	namespace:__sanitizer	file:
dyn_ann_ctx	lib/tsan/rtl/tsan_interface_ann.cc	/^static DynamicAnnContext *dyn_ann_ctx;$/;"	m	namespace:__tsan	file:
dynamic_init_globals	lib/asan/asan_globals.cc	/^static VectorOfGlobals *dynamic_init_globals;$/;"	m	namespace:__asan	file:
dynamic_object_id	lib/profile/GCDAProfiling.c	/^typedef void* dynamic_object_id;$/;"	t	file:
e	lib/msan/tests/msan_test.cc	/^  int a, b, c, d, e, f;$/;"	m	struct:StructByVal	file:
e	test/asan/TestCases/Linux/preinit_test.cc	/^  static A const e;$/;"	m	struct:O	file:
e	test/asan/TestCases/Linux/preinit_test.cc	/^template <class T> A const O <T>::e = get();$/;"	m	class:O	file:
e	test/asan/TestCases/Linux/sized_delete_test.cc	/^  int a, b, c, d, e;$/;"	m	struct:D2	file:
e	test/asan/TestCases/Linux/sized_delete_test.cc	/^  int a, b, c, d, e;$/;"	m	struct:S20	file:
e	test/msan/dtor-bit-fields.cc	/^  unsigned int e : 1;$/;"	m	struct:Packed	file:
e	test/ubsan/TestCases/Misc/enum.cpp	/^enum E { a = 1 } e;$/;"	v	typeref:enum:E
e_tabsz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  int e_tabsz = (int)E_TABSZ;$/;"	m	namespace:__sanitizer	file:
early_alloc_buf	lib/esan/esan_interceptors.cpp	/^static char early_alloc_buf[early_alloc_buf_size];$/;"	v	file:
early_alloc_buf_size	lib/esan/esan_interceptors.cpp	/^static const uptr early_alloc_buf_size = 4096;$/;"	v	file:
edgeCases	test/builtins/Unit/ppc/qadd_test.c	/^const struct testVector edgeCases[] = {$/;"	v	typeref:struct:testVector
edgeCases	test/builtins/Unit/ppc/qdiv_test.c	/^const struct testVector edgeCases[] = {$/;"	v	typeref:struct:testVector
edgeCases	test/builtins/Unit/ppc/qmul_test.c	/^const struct testVector edgeCases[] = {$/;"	v	typeref:struct:testVector
edgeCases	test/builtins/Unit/ppc/qsub_test.c	/^const struct testVector edgeCases[] = {$/;"	v	typeref:struct:testVector
edges_	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  Edge edges_[BV::kSize * 32];$/;"	m	class:__sanitizer::DeadlockDetector
elem	lib/tsan/rtl/tsan_clock.cc	/^ALWAYS_INLINE ClockElem &SyncClock::elem(unsigned tid) const {$/;"	f	class:__tsan::SyncClock
elf_fpregset_t	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^typedef struct user_fpregs elf_fpregset_t;$/;"	t	typeref:struct:user_fpregs	file:
empty	lib/esan/esan_circular_buffer.h	/^  bool empty() const { return size() == 0; }$/;"	f	class:__esan::CircularBuffer
empty	lib/fuzzer/FuzzerCorpus.h	/^  bool empty() const { return Inputs.empty(); }$/;"	f	class:fuzzer::InputCorpus
empty	lib/fuzzer/FuzzerDictionary.h	/^  bool empty() const { return Size == 0; }$/;"	f	class:fuzzer::Dictionary
empty	lib/sanitizer_common/sanitizer_bitvector.h	/^  bool empty() const { return bits_ == 0; }$/;"	f	class:__sanitizer::BasicBitVector
empty	lib/sanitizer_common/sanitizer_bitvector.h	/^  bool empty() const {$/;"	f	class:__sanitizer::TwoLevelBitVector
empty	lib/sanitizer_common/sanitizer_bvgraph.h	/^  bool empty() const {$/;"	f	class:__sanitizer::BVGraph
empty	lib/sanitizer_common/sanitizer_common.h	/^  bool empty() const { return size() == 0; }$/;"	f	class:__sanitizer::InternalMmapVectorNoCtor
empty	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  bool empty() const { return bv_.empty(); }$/;"	f	class:__sanitizer::DeadlockDetectorTLS
empty	lib/sanitizer_common/sanitizer_list.h	/^  bool empty() const { return size_ == 0; }$/;"	f	struct:__sanitizer::IntrusiveList
empty	lib/xray/xray_segmented_array.h	/^  bool empty() const { return Size == 0; }$/;"	f	class:__xray::Array
emptyset	lib/tsan/rtl/tsan_interceptors.cc	/^  __sanitizer_sigset_t emptyset;$/;"	m	struct:__tsan::ThreadSignalContext	file:
emutls_address_array	lib/builtins/emutls.c	/^typedef struct emutls_address_array {$/;"	s	file:
emutls_address_array	lib/builtins/emutls.c	/^} emutls_address_array;$/;"	t	typeref:struct:emutls_address_array	file:
emutls_allocate_object	lib/builtins/emutls.c	/^static __inline void *emutls_allocate_object(__emutls_control *control) {$/;"	f	file:
emutls_asize	lib/builtins/emutls.c	/^static __inline uintptr_t emutls_asize(uintptr_t N) {$/;"	f	file:
emutls_check_array_set_size	lib/builtins/emutls.c	/^static __inline void emutls_check_array_set_size(emutls_address_array *array,$/;"	f	file:
emutls_exit	lib/builtins/emutls.c	/^static void emutls_exit(void) {$/;"	f	file:
emutls_get_address_array	lib/builtins/emutls.c	/^emutls_get_address_array(uintptr_t index) {$/;"	f	file:
emutls_get_index	lib/builtins/emutls.c	/^static __inline uintptr_t emutls_get_index(__emutls_control *control) {$/;"	f	file:
emutls_getspecific	lib/builtins/emutls.c	/^static __inline emutls_address_array* emutls_getspecific() {$/;"	f	file:
emutls_init	lib/builtins/emutls.c	/^static BOOL CALLBACK emutls_init(PINIT_ONCE p0, PVOID p1, PVOID *p2) {$/;"	f	file:
emutls_init	lib/builtins/emutls.c	/^static __inline void emutls_init(void) {$/;"	f	file:
emutls_init_once	lib/builtins/emutls.c	/^static __inline void emutls_init_once(void) {$/;"	f	file:
emutls_key_destructor	lib/builtins/emutls.c	/^static void emutls_key_destructor(void* ptr) {$/;"	f	file:
emutls_lock	lib/builtins/emutls.c	/^static __inline void emutls_lock() {$/;"	f	file:
emutls_memalign_alloc	lib/builtins/emutls.c	/^static __inline void *emutls_memalign_alloc(size_t align, size_t size) {$/;"	f	file:
emutls_memalign_free	lib/builtins/emutls.c	/^static __inline void emutls_memalign_free(void *base) {$/;"	f	file:
emutls_mutex	lib/builtins/emutls.c	/^static LPCRITICAL_SECTION emutls_mutex;$/;"	v	file:
emutls_mutex	lib/builtins/emutls.c	/^static pthread_mutex_t emutls_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
emutls_new_data_array_size	lib/builtins/emutls.c	/^static __inline uintptr_t emutls_new_data_array_size(uintptr_t index) {$/;"	f	file:
emutls_num_object	lib/builtins/emutls.c	/^static size_t emutls_num_object = 0;  \/* number of allocated TLS objects *\/$/;"	v	file:
emutls_pthread_key	lib/builtins/emutls.c	/^static pthread_key_t emutls_pthread_key;$/;"	v	file:
emutls_setspecific	lib/builtins/emutls.c	/^static __inline void emutls_setspecific(emutls_address_array *value) {$/;"	f	file:
emutls_shutdown	lib/builtins/emutls.c	/^static void emutls_shutdown(emutls_address_array *array) {$/;"	f	file:
emutls_tls_index	lib/builtins/emutls.c	/^static DWORD emutls_tls_index = TLS_OUT_OF_INDEXES;$/;"	v	file:
emutls_unlock	lib/builtins/emutls.c	/^static __inline void emutls_unlock() {$/;"	f	file:
end	lib/asan/asan_errors.h	/^  uptr beg, end, old_mid, new_mid;$/;"	m	struct:__asan::ErrorBadParamsToAnnotateContiguousContainer
end	lib/esan/esan_hashtable.h	/^HashTable<KeyTy, DataTy, ExternalLock, HashFuncTy, EqualFuncTy>::end() {$/;"	f	class:__esan::HashTable
end	lib/fuzzer/FuzzerDictionary.h	/^  const DictionaryEntry *end() const { return begin() + Size; }$/;"	f	class:fuzzer::Dictionary
end	lib/msan/msan.h	/^  uptr end;$/;"	m	struct:MappingDesc
end	lib/sanitizer_common/sanitizer_common.h	/^    uptr end;$/;"	m	struct:__sanitizer::LoadedModule::AddressRange
end	lib/sanitizer_common/sanitizer_common.h	/^  LoadedModule *end() { return modules_.end(); }$/;"	f	class:__sanitizer::ListOfModules
end	lib/sanitizer_common/sanitizer_common.h	/^  T *end() {$/;"	f	class:__sanitizer::InternalMmapVectorNoCtor
end	lib/sanitizer_common/sanitizer_common.h	/^  const LoadedModule *end() const { return modules_.end(); }$/;"	f	class:__sanitizer::ListOfModules
end	lib/sanitizer_common/sanitizer_common.h	/^  const T *end() const {$/;"	f	class:__sanitizer::InternalMmapVectorNoCtor
end	lib/sanitizer_common/sanitizer_libignore.h	/^    uptr end;$/;"	m	struct:__sanitizer::LibIgnore::LibCodeRange
end	lib/sanitizer_common/sanitizer_list.h	/^  ConstIterator end() const { return ConstIterator(0); }$/;"	f	struct:__sanitizer::IntrusiveList
end	lib/sanitizer_common/sanitizer_list.h	/^  Iterator end() { return Iterator(0); }$/;"	f	struct:__sanitizer::IntrusiveList
end	lib/sanitizer_common/sanitizer_procmaps.h	/^  uptr end;$/;"	m	class:__sanitizer::MemoryMappedSegment
end	lib/xray/xray_buffer_queue.h	/^  iterator end() const { return iterator(Buffers, BufferCount, BufferCount); }$/;"	f	class:__xray::BufferQueue
end	lib/xray/xray_segmented_array.h	/^  Iterator<T> end() const { return Iterator<T>(Tail, Size, Size); }$/;"	f	class:__xray::Array
end	test/msan/chained_origin_limits.cc	/^static char *buf, *cur, *end;$/;"	v	file:
end	test/profile/Linux/instrprof-basic.c	/^int end(int i) {$/;"	f
end	test/profile/instrprof-basic.c	/^int end(int i) {$/;"	f
endMutableArgs	lib/fuzzer/FuzzerCommand.h	/^  Vector<std::string>::const_iterator endMutableArgs() const {$/;"	f	class:fuzzer::final
endMutableArgs	lib/fuzzer/FuzzerCommand.h	/^  Vector<std::string>::iterator endMutableArgs() {$/;"	f	class:fuzzer::final
end_	lib/sanitizer_common/sanitizer_vector.h	/^  T *end_;$/;"	m	class:__sanitizer::Vector
end_address	lib/sanitizer_common/sanitizer_win.cc	/^  uptr end_address;$/;"	m	struct:__sanitizer::__anon76::ModuleInfo	file:
end_hook_	lib/sanitizer_common/sanitizer_symbolizer.h	/^  EndSymbolizationHook end_hook_;$/;"	m	class:__sanitizer::final
ensureCurrentEpoch	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  void ensureCurrentEpoch(DeadlockDetectorTLS<BV> *dtls) {$/;"	f	class:__sanitizer::DeadlockDetector
ensureCurrentEpoch	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  void ensureCurrentEpoch(uptr current_epoch) {$/;"	f	class:__sanitizer::DeadlockDetectorTLS
enterFunction	lib/xray/xray_function_call_trie.h	/^  void enterFunction(const int32_t FId, uint64_t TSC) {$/;"	f	class:__xray::FunctionCallTrie
enum_dmx_source_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned enum_dmx_source_sz = sizeof(dmx_source_t);$/;"	m	namespace:__sanitizer	file:
enum_fe_sec_mini_cmd_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned enum_fe_sec_mini_cmd_sz = sizeof(enum fe_sec_mini_cmd);$/;"	m	namespace:__sanitizer	file:
enum_fe_sec_tone_mode_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned enum_fe_sec_tone_mode_sz = sizeof(enum fe_sec_tone_mode);$/;"	m	namespace:__sanitizer	file:
enum_fe_sec_voltage_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned enum_fe_sec_voltage_sz = sizeof(enum fe_sec_voltage);$/;"	m	namespace:__sanitizer	file:
enum_fe_status_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned enum_fe_status_sz = sizeof(enum fe_status);$/;"	m	namespace:__sanitizer	file:
enum_v4l2_priority_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned enum_v4l2_priority_sz = sizeof(enum v4l2_priority);$/;"	m	namespace:__sanitizer	file:
env_vars	lib/sanitizer_common/sanitizer_win.cc	/^static EnvVariable env_vars[kEnvVariables];$/;"	m	namespace:__sanitizer	file:
environ	lib/fuzzer/FuzzerUtilDarwin.cpp	/^extern "C" char **environ;$/;"	v
environ	lib/sanitizer_common/sanitizer_linux.cc	104;"	d	file:
epoch	lib/tsan/rtl/tsan_defs.h	/^  u64 epoch  : kClkBits;$/;"	m	struct:__tsan::ClockElem
epoch	lib/tsan/rtl/tsan_mutexset.h	/^    u64 epoch;$/;"	m	struct:__tsan::MutexSet::Desc
epoch	lib/tsan/rtl/tsan_rtl.h	/^  u64 epoch() const {$/;"	f	class:__tsan::FastState
epoch0	lib/tsan/rtl/tsan_rtl.h	/^  u64 epoch0;$/;"	m	class:__tsan::ThreadContext
epoch0	lib/tsan/rtl/tsan_trace.h	/^  u64        epoch0;  \/\/ Start epoch for the trace.$/;"	m	struct:__tsan::TraceHeader
epoch1	lib/tsan/rtl/tsan_rtl.h	/^  u64 epoch1;$/;"	m	class:__tsan::ThreadContext
epoch_	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  uptr epoch_;$/;"	m	class:__sanitizer::DeadlockDetectorTLS
eq	lib/msan/msan_chained_origin_depot.cc	/^  bool eq(u32 hash, const args_type &args) const {$/;"	f	struct:__msan::ChainedOriginDepotNode
eq	lib/sanitizer_common/sanitizer_stackdepot.cc	/^  bool eq(u32 hash, const args_type &args) const {$/;"	f	struct:__sanitizer::StackDepotNode
eqReference	test/builtins/Unit/comparedf2_test.c	/^    int eqReference;$/;"	m	struct:TestVector	file:
eqReference	test/builtins/Unit/comparesf2_test.c	/^    int eqReference;$/;"	m	struct:TestVector	file:
eraseHeader	lib/scudo/scudo_allocator.cpp	/^  static INLINE void eraseHeader(void *Ptr) {$/;"	f	namespace:__scudo::Chunk
errno	lib/sanitizer_common/sanitizer_errno.h	38;"	d
errno_EBUSY	lib/sanitizer_common/sanitizer_errno_codes.h	26;"	d
errno_EINVAL	lib/sanitizer_common/sanitizer_errno_codes.h	27;"	d
errno_ENOMEM	lib/sanitizer_common/sanitizer_errno_codes.h	25;"	d
errno_EOWNERDEAD	lib/sanitizer_common/sanitizer_errno.cc	/^extern const int errno_EOWNERDEAD = -1;$/;"	m	namespace:__sanitizer	file:
errno_EOWNERDEAD	lib/sanitizer_common/sanitizer_errno.cc	/^extern const int errno_EOWNERDEAD = EOWNERDEAD;$/;"	m	namespace:__sanitizer	file:
error	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^typedef void (^cleanup_handler_t)(int error);$/;"	m	namespace:__tsan	file:
error	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^typedef void (^fd_handler_t)(dispatch_data_t data, int error);$/;"	m	namespace:__tsan	file:
error	test/asan/TestCases/Posix/halt_on_error-signals.c	/^void error() {$/;"	f
errorString	test/BlocksRuntime/testfilerunner.h	/^@property __strong char *errorString;$/;"	v
error_message_buffer	lib/asan/asan_report.cc	/^static char *error_message_buffer = nullptr;$/;"	m	namespace:__asan	file:
error_message_buffer_pos	lib/asan/asan_report.cc	/^static uptr error_message_buffer_pos = 0;$/;"	m	namespace:__asan	file:
error_report_callback	lib/asan/asan_report.cc	/^static void (*error_report_callback)(const char*);$/;"	m	namespace:__asan	file:
error_report_lock_	lib/asan/asan_report.cc	/^  ScopedErrorReportLock error_report_lock_;$/;"	m	class:__asan::ScopedInErrorReport	file:
error_summary	lib/sanitizer_common/sanitizer_allocator_report.cc	/^  const char *error_summary;$/;"	m	class:__sanitizer::ScopedAllocatorErrorReport	file:
error_t	lib/sanitizer_common/sanitizer_internal_defs.h	/^typedef int error_t;$/;"	t	namespace:__sanitizer
error_t	lib/sanitizer_common/sanitizer_internal_defs.h	/^typedef unsigned error_t;$/;"	t	namespace:__sanitizer
errorcode	test/profile/runtime_infinite.c	/^int errorcode = 0;$/;"	v
errs	lib/sanitizer_common/scripts/litlint.py	/^  errs = 0$/;"	v
esr	lib/sanitizer_common/sanitizer_linux.cc	/^  uint64_t esr;$/;"	m	struct:__sanitizer::__sanitizer_esr_context	file:
ether_addr	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^CHECK_TYPE_SIZE(ether_addr);$/;"	v
ether_addr	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^CHECK_TYPE_SIZE(ether_addr);$/;"	v
ether_addr	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^CHECK_TYPE_SIZE(ether_addr);$/;"	v
event	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^  atomic_uintptr_t event;  \/\/ Event*$/;"	m	struct:ScopedThread::Impl	file:
events	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  short events;$/;"	m	struct:__sanitizer::__sanitizer_pollfd
events	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  short events;$/;"	m	struct:__sanitizer::__sanitizer_pollfd
events	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    short events;$/;"	m	struct:__sanitizer::__sanitizer_pollfd
events	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  short events;$/;"	m	struct:__sanitizer::__sanitizer_pollfd
execPerSec	lib/fuzzer/FuzzerInternal.h	/^  size_t execPerSec() {$/;"	f	class:fuzzer::Fuzzer
executable	lib/sanitizer_common/sanitizer_common.h	/^    bool executable;$/;"	m	struct:__sanitizer::LoadedModule::AddressRange
execution_buffer	test/builtins/Unit/clear_cache_test.c	/^unsigned char execution_buffer[128] __attribute__((aligned(8)));$/;"	v
exists	lib/sanitizer_common/sanitizer_addrhashmap.h	/^bool AddrHashMap<T, kSize>::Handle::exists() const {$/;"	f	class:__sanitizer::AddrHashMap::Handle
exitFunction	lib/xray/xray_function_call_trie.h	/^  void exitFunction(int32_t FId, uint64_t TSC) {$/;"	f	class:__xray::FunctionCallTrie
exit_dummy	test/msan/Linux/process_vm_readv.cc	/^int exit_dummy()$/;"	f
exit_thread_func	test/lsan/TestCases/Linux/fork_threaded.cc	/^void *exit_thread_func(void *arg) {$/;"	f
exitcode	test/sanitizer_common/ios_commands/iossim_env.py	/^  exitcode = 126$/;"	v
exitcode	test/sanitizer_common/ios_commands/iossim_env.py	/^exitcode = subprocess.call(sys.argv[idx:])$/;"	v
exitcode	test/sanitizer_common/ios_commands/iossim_run.py	/^  exitcode = 126$/;"	v
exitcode	test/sanitizer_common/ios_commands/iossim_run.py	/^exitcode = subprocess.call(["xcrun", "simctl", "spawn", device_id] + sys.argv[1:])$/;"	v
exp	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^        exp = SUB(exp, k)$/;"	d
exp	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^        exp = add(exp, #1)$/;"	d
exp	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^        exp = add(expa, expb)$/;"	d
exp	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^        exp = sub(exp, kb)$/;"	d
exp	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define exp        R8$/;"	d
exp	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^#define exp        R8$/;"	d
exp	lib/builtins/hexagon/fastmath_dlib_asm.S	/^        exp = SUB(exp, k)$/;"	d
exp	lib/builtins/hexagon/fastmath_dlib_asm.S	/^        exp = ZXTH(exp)$/;"	d
exp	lib/builtins/hexagon/fastmath_dlib_asm.S	/^        exp = add(expa, expb)$/;"	d
exp	lib/builtins/hexagon/fastmath_dlib_asm.S	/^        exp = sub(exp, k)$/;"	d
exp	lib/builtins/hexagon/fastmath_dlib_asm.S	/^        exp = zxth(exp)$/;"	d
exp	lib/builtins/hexagon/fastmath_dlib_asm.S	/^#define exp        R8$/;"	d
expa	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^        expa = SXTH(manta)$/;"	d
expa	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^        expa = sxth(mantal)$/;"	d
expa	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define expa       R4$/;"	d
expa	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^        expa = memw(r29+#8)$/;"	d
expa	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^#define expa       R4$/;"	d
expa	lib/builtins/hexagon/fastmath_dlib_asm.S	/^        expa = SXTH(manta)$/;"	d
expa	lib/builtins/hexagon/fastmath_dlib_asm.S	/^        expa = sxth(mantal)$/;"	d
expa	lib/builtins/hexagon/fastmath_dlib_asm.S	/^#define expa       R4$/;"	d
expb	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^        expb = SXTH(mantb)$/;"	d
expb	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^        expb = sxth(mantbl)$/;"	d
expb	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define expb       R5$/;"	d
expb	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^        expb = memw(r29+#24)$/;"	d
expb	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^#define expb       R5$/;"	d
expb	lib/builtins/hexagon/fastmath_dlib_asm.S	/^        expb = SXTH(mantb)$/;"	d
expb	lib/builtins/hexagon/fastmath_dlib_asm.S	/^        expb = sxth(mantbl)$/;"	d
expb	lib/builtins/hexagon/fastmath_dlib_asm.S	/^#define expb       R5$/;"	d
expd	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^        expd = MIN(expd, c63)$/;"	d
expd	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^        expd = SXTH(expd)$/;"	d
expd	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define expd       R6$/;"	d
expd	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^        expd = MIN(expd, c63)$/;"	d
expd	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^        expd = abs(expd):sat$/;"	d
expd	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^        expd = min(expd, c63)$/;"	d
expd	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^        expd = sub(expa, expb):sat$/;"	d
expd	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^#define expd       R6$/;"	d
expd	lib/builtins/hexagon/fastmath_dlib_asm.S	/^        expd = MIN(expd, c63)$/;"	d
expd	lib/builtins/hexagon/fastmath_dlib_asm.S	/^        expd = SXTH(expd)$/;"	d
expd	lib/builtins/hexagon/fastmath_dlib_asm.S	/^#define expd       R6$/;"	d
expect	lib/tsan/rtl/tsan_interface_ann.cc	/^  ExpectRace expect;$/;"	m	struct:__tsan::DynamicAnnContext	file:
expect_report	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^  bool expect_report;$/;"	m	struct:Event	file:
expect_report	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^static __thread bool expect_report;$/;"	v	file:
expect_report_reported	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^static __thread bool expect_report_reported;$/;"	v	file:
expect_report_type	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^static __thread ReportType expect_report_type;$/;"	v	file:
expectedStr	test/builtins/Unit/fp_test.h	/^static inline char *expectedStr(enum EXPECTED_RESULT expected)$/;"	f
expo	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^       expo = add(expo, #126)$/;"	d
expo	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^       expo = sxth(mantal)$/;"	d
expo	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define expo     R4$/;"	d
exponentBias	lib/builtins/fp_lib.h	219;"	d
exponentBits	lib/builtins/fp_lib.h	217;"	d
exponentMask	lib/builtins/fp_lib.h	225;"	d
exported_var	test/tsan/dl_iterate_phdr.cc	/^int exported_var = 0;$/;"	v
expr	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^       expr = zxth(expr)$/;"	d
expr	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define expr  R0$/;"	d
external	lib/sanitizer_common/sanitizer_mac.cc	/^  mach_vm_size_t external;$/;"	m	struct:__sanitizer::__sanitizer_task_vm_info	file:
externalBrokenFunction	test/asan/TestCases/Helpers/blacklist-extra.cc	/^int externalBrokenFunction(int argc) {$/;"	f
external_callme	test/asan/TestCases/Linux/longjmp_chk.c	/^void external_callme(void (*callback)(void)) {$/;"	f
external_check_stack	test/asan/TestCases/Linux/longjmp_chk.c	/^void external_check_stack(void) {$/;"	f
external_longjmp	test/asan/TestCases/Linux/longjmp_chk.c	/^void external_longjmp(char *msg) {$/;"	f
external_peak	lib/sanitizer_common/sanitizer_mac.cc	/^  mach_vm_size_t external_peak;$/;"	m	struct:__sanitizer::__sanitizer_task_vm_info	file:
external_tag	lib/tsan/rtl/tsan_report.h	/^  uptr external_tag;$/;"	m	struct:__tsan::ReportLocation
external_tag	lib/tsan/rtl/tsan_report.h	/^  uptr external_tag;$/;"	m	struct:__tsan::ReportMop
extra_field	test/asan/TestCases/Windows/wrong_downcast_on_heap.cc	/^  int extra_field;$/;"	m	class:Child	file:
extra_field	test/asan/TestCases/Windows/wrong_downcast_on_stack.cc	/^  int extra_field;$/;"	m	class:Child	file:
extra_stats_file	lib/fuzzer/afl/afl_driver.cpp	/^static FILE *extra_stats_file = NULL;$/;"	v	file:
extract	lib/sanitizer_common/sanitizer_list.h	/^  void extract(Item *prev, Item *x) {$/;"	f	struct:__sanitizer::IntrusiveList
f	lib/builtins/int_types.h	/^    double  f;$/;"	m	union:__anon121
f	lib/builtins/int_types.h	/^    float f;$/;"	m	union:__anon120
f	lib/builtins/int_types.h	/^    long double f;$/;"	m	union:__anon123
f	lib/msan/tests/msan_test.cc	/^  int a, b, c, d, e, f;$/;"	m	struct:StructByVal	file:
f	lib/tsan/rtl/tsan_interceptors.cc	/^  void (*f)();$/;"	m	struct:__tsan::AtExitCtx	file:
f	test/asan/TestCases/Linux/local_alias.cc	/^long f = 4;$/;"	v
f	test/asan/TestCases/Linux/local_alias.cc	/^long f = 5;$/;"	v
f	test/asan/TestCases/Linux/recoverable-lsan.cc	/^int f() {$/;"	f
f	test/asan/TestCases/Linux/static_tls.cc	/^unsigned *f() {$/;"	f
f	test/asan/TestCases/Windows/dll_large_function.cc	/^void f(long* foo, long* bar) {$/;"	f
f	test/asan/TestCases/inline.cc	/^int f(int *p) {$/;"	f
f	test/asan/TestCases/invalid-pointer-pairs.cc	/^int f(char c, char *p, char *q) {$/;"	f
f	test/asan/TestCases/set_shadow_test.c	/^void f(long arg) {$/;"	f
f	test/cfi/anon-namespace.cpp	/^  virtual void f() {}$/;"	f	struct:__anon139::B
f	test/cfi/bad-cast.cpp	/^void A::f() {}$/;"	f	class:A
f	test/cfi/bad-cast.cpp	/^void B::f() {}$/;"	f	class:B
f	test/cfi/cross-dso/icall/diag.cpp	/^void A::f() {}$/;"	f	class:A
f	test/cfi/cross-dso/icall/diag.cpp	/^void B::f() {}$/;"	f	class:B
f	test/cfi/cross-dso/icall/dlopen.cpp	/^void A::f() {}$/;"	f	class:A
f	test/cfi/cross-dso/icall/dlopen.cpp	/^void B::f() {}$/;"	f	class:B
f	test/cfi/cross-dso/icall/icall-from-dso.cpp	/^void f() {$/;"	f
f	test/cfi/cross-dso/icall/icall.cpp	/^void f() {$/;"	f
f	test/cfi/cross-dso/shadow_is_read_only.cpp	/^void A::f() {}$/;"	f	class:A
f	test/cfi/cross-dso/simple-fail.cpp	/^void A::f() {}$/;"	f	class:A
f	test/cfi/cross-dso/simple-fail.cpp	/^void B::f() {}$/;"	f	class:B
f	test/cfi/cross-dso/simple-pass.cpp	/^void A::f() {}$/;"	f	class:A
f	test/cfi/cross-dso/simple-pass.cpp	/^void B::f() {}$/;"	f	class:B
f	test/cfi/cross-dso/target_out_of_bounds.cpp	/^void A::f() {}$/;"	f	class:A
f	test/cfi/icall/bad-signature.c	/^void f() {$/;"	f
f	test/cfi/icall/wrong-signature-mixed-lto.c	/^int f() {$/;"	f
f	test/cfi/multiple-inheritance.cpp	/^void C::f() {}$/;"	f	class:C
f	test/cfi/nvcall.cpp	/^void B::f() {}$/;"	f	class:B
f	test/cfi/overwrite.cpp	/^void A::f() {}$/;"	f	class:A
f	test/cfi/sibling.cpp	/^void A::f() {}$/;"	f	class:A
f	test/cfi/sibling.cpp	/^void B::f() {}$/;"	f	class:B
f	test/cfi/simple-fail.cpp	/^void A::f() {}$/;"	f	class:A
f	test/cfi/simple-fail.cpp	/^void B::f() {}$/;"	f	class:B
f	test/cfi/simple-pass.cpp	/^  virtual void f() {}$/;"	f	struct:B
f	test/cfi/simple-pass.cpp	/^  virtual void f() {}$/;"	f	struct:B2
f	test/cfi/simple-pass.cpp	/^  virtual void f() {}$/;"	f	struct:E
f	test/cfi/simple-pass.cpp	/^  virtual void f() {}$/;"	f	struct:E2
f	test/cfi/simple-pass.cpp	/^  virtual void f() {}$/;"	f	struct:__anon140::D
f	test/cfi/simple-pass.cpp	/^  virtual void f() {}$/;"	f	struct:__anon140::D2
f	test/cfi/simple-pass.cpp	/^void A2::f() {}$/;"	f	class:A2
f	test/cfi/simple-pass.cpp	/^void A::f() {}$/;"	f	class:A
f	test/cfi/simple-pass.cpp	/^void C2::f() {}$/;"	f	class:__anon140::C2
f	test/cfi/simple-pass.cpp	/^void C::f() {}$/;"	f	class:__anon140::C
f	test/cfi/target_uninstrumented.cpp	/^void A::f() {}$/;"	f	class:A
f	test/cfi/target_uninstrumented.cpp	/^void B::f() {}$/;"	f	class:B
f	test/cfi/utils.h	/^  virtual void f() {}$/;"	f	struct:Deriver
f	test/cfi/vtable-may-alias.cpp	/^  virtual void f() {}$/;"	f	struct:B
f	test/dfsan/flags.c	/^int f(int i) {$/;"	f
f	test/dfsan/fncall.c	/^int f(int x) {$/;"	f
f	test/esan/TestCases/struct-simple.cpp	/^    float f;$/;"	m	union:C::__anon134	file:
f	test/esan/TestCases/struct-simple.cpp	/^  float f;$/;"	m	union:U	file:
f	test/fuzzer/ExplodeDFSanLabelsTest.cpp	/^void f(uint8_t a, uint8_t b, uint8_t c, uint8_t d) {$/;"	f
f	test/hwasan/TestCases/stack-oob.cc	/^int f() {$/;"	f
f	test/hwasan/TestCases/stack-uar.cc	/^char *f() {$/;"	f
f	test/msan/backtrace.cc	/^void f() {$/;"	f
f	test/msan/cxa_atexit.cc	/^void f(long x) {$/;"	f
f	test/msan/inline.cc	/^int f(int *p) {$/;"	f
f	test/msan/no_sanitize_memory.cc	/^int f(void) {$/;"	f
f	test/msan/no_sanitize_memory_prop.cc	/^int f(int x) {$/;"	f
f	test/msan/report-demangling.cc	/^int f() {$/;"	f
f	test/msan/signal_stress_test.cc	/^void f(bool poisoned, int n, ...) {$/;"	f
f	test/msan/stack-origin2.cc	/^int f(int depth) {$/;"	f
f	test/safestack/canary.c	/^__attribute__((noinline)) void f(unsigned *y) {$/;"	f
f	test/sanitizer_common/TestCases/fopen_nullptr.c	/^FILE *f;$/;"	v
f	test/tsan/deadlock_detector_stress_test.cc	/^    void (LockTest::*f)();$/;"	m	struct:LockTest::CB	file:
f	test/ubsan/TestCases/Misc/missing_return.cpp	/^int f() {$/;"	f
f	test/ubsan/TestCases/TypeCheck/Function/function.cpp	/^void f() {}$/;"	f
f	test/ubsan/TestCases/TypeCheck/misaligned.cpp	/^  int f() { return 0; }$/;"	f	struct:S
f	test/ubsan/TestCases/TypeCheck/null.cpp	/^  int f() { return 0; }$/;"	f	struct:S
f	test/ubsan/TestCases/TypeCheck/vptr-virtual-base.cpp	/^struct Foo { virtual int f() { return 0; } };$/;"	f	struct:Foo
f	test/ubsan/TestCases/TypeCheck/vptr-virtual-base.cpp	/^struct S { virtual int f() { return 0; } };$/;"	f	struct:S
f	test/ubsan/TestCases/TypeCheck/vptr.cpp	/^  int f() { return 0; }$/;"	f	struct:S
f	test/ubsan_minimal/TestCases/recover-dedup.cpp	/^int f(int x, int y) {$/;"	f
f	test/xray/TestCases/Posix/arg1-logging-implicit-this.cc	/^  [[clang::xray_always_instrument, clang::xray_log_args(1)]] void f() {$/;"	f	class:A
f	test/xray/TestCases/Posix/common-trampoline-alignment.cc	/^[[clang::xray_never_instrument]] __attribute__((weak)) __m128 f(__m128 *i) {$/;"	f
f	test/xray/TestCases/Posix/custom-event-handler-alignment.cc	/^[[clang::xray_never_instrument]] __attribute__((weak)) __m128 f(__m128 *i) {$/;"	f
f	test/xray/TestCases/Posix/fdr-mode-inmemory.cc	/^[[clang::xray_always_instrument]] void __attribute__((noinline)) f() { ++var; }$/;"	f
f	test/xray/TestCases/Posix/fdr-mode-multiple.cc	/^[[clang::xray_always_instrument]] void __attribute__((noinline)) f() { ++var; }$/;"	f
f0	lib/tsan/rtl/tsan_ppc_regs.h	33;"	d
f0	test/fuzzer/OnlySomeBytesTest.cpp	/^__attribute__((noinline)) void f0(IN in) {$/;"	f
f0	test/profile/Linux/instrprof-value-merge.c	/^void (*f0)();$/;"	v
f0	test/xray/TestCases/Posix/profiling-multi-threaded.cc	/^[[clang::xray_always_instrument]] void f0() { f1(); }$/;"	f
f0	test/xray/TestCases/Posix/profiling-single-threaded.cc	/^[[clang::xray_always_instrument]] void f0() { f1(); }$/;"	f
f00	test/fuzzer/CallerCalleeTest.cpp	/^void f00() {}$/;"	f
f01	test/fuzzer/CallerCalleeTest.cpp	/^void f01() { t[(unsigned)'b'] = f12;}$/;"	f
f1	lib/tsan/rtl/tsan_ppc_regs.h	34;"	d
f1	test/asan/TestCases/Windows/dll_and_lib.cc	/^extern "C" __declspec(dllexport) int f1() {$/;"	f
f1	test/asan/TestCases/use-after-scope-goto.cc	/^void f1(int cond) {$/;"	f
f1	test/cfi/cross-dso-diagnostic.cpp	/^void S1::f1() {}$/;"	f	class:S1
f1	test/cfi/mfcall.cpp	/^  void f1() {}$/;"	f	struct:S
f1	test/cfi/mfcall.cpp	/^  void f1() {}$/;"	f	struct:T
f1	test/profile/Linux/instrprof-value-merge.c	/^void (*f1)();$/;"	v
f1	test/ubsan/TestCases/TypeCheck/Function/function.cpp	/^void f1(int) {}$/;"	f
f1	test/xray/TestCases/Posix/fdr-thread-order.cc	/^[[clang::xray_always_instrument]] void __attribute__((noinline)) f1() {$/;"	f
f1	test/xray/TestCases/Posix/profiling-multi-threaded.cc	/^[[clang::xray_always_instrument]] void f1() { f2(); }$/;"	f
f1	test/xray/TestCases/Posix/profiling-single-threaded.cc	/^[[clang::xray_always_instrument]] void f1() { f2(); }$/;"	f
f10	lib/tsan/rtl/tsan_ppc_regs.h	43;"	d
f100	test/msan/param_tls_limit.cc	/^void f100(S<100> s) {$/;"	f
f1000	test/msan/param_tls_limit.cc	/^void f1000(S<1000> s) {$/;"	f
f11	lib/tsan/rtl/tsan_ppc_regs.h	44;"	d
f12	lib/tsan/rtl/tsan_ppc_regs.h	45;"	d
f12	test/fuzzer/CallerCalleeTest.cpp	/^void f12() { t[(unsigned)'c'] = f23;}$/;"	f
f13	lib/tsan/rtl/tsan_ppc_regs.h	46;"	d
f14	lib/tsan/rtl/tsan_ppc_regs.h	47;"	d
f15	lib/tsan/rtl/tsan_ppc_regs.h	48;"	d
f16	lib/tsan/rtl/tsan_ppc_regs.h	49;"	d
f17	lib/tsan/rtl/tsan_ppc_regs.h	50;"	d
f18	lib/tsan/rtl/tsan_ppc_regs.h	51;"	d
f19	lib/tsan/rtl/tsan_ppc_regs.h	52;"	d
f1_alloca	test/asan/TestCases/alloca_constant_size.cc	/^void f1_alloca() {$/;"	f
f1_vla	test/asan/TestCases/alloca_constant_size.cc	/^void f1_vla() {$/;"	f
f2	lib/tsan/rtl/tsan_ppc_regs.h	35;"	d
f2	test/asan/TestCases/Windows/dll_and_lib.cc	/^extern "C" __declspec(dllexport) int f2() {$/;"	f
f2	test/asan/TestCases/alloca_constant_size.cc	/^void f2() {$/;"	f
f2	test/asan/TestCases/use-after-scope-goto.cc	/^void f2(int cond) {$/;"	f
f2	test/cfi/mfcall.cpp	/^  int f2() { return 1; }$/;"	f	struct:S
f2	test/cfi/mfcall.cpp	/^  int f2() { return 2; }$/;"	f	struct:T
f2	test/profile/Linux/instrprof-value-merge.c	/^void (*f2)();$/;"	v
f2	test/ubsan/TestCases/TypeCheck/Function/function.cpp	/^void f2(unsigned int) {}$/;"	f
f2	test/xray/TestCases/Posix/fdr-thread-order.cc	/^[[clang::xray_always_instrument]] void __attribute__((noinline)) f2() {$/;"	f
f2	test/xray/TestCases/Posix/profiling-multi-threaded.cc	/^[[clang::xray_always_instrument]] void f2() { return; }$/;"	f
f2	test/xray/TestCases/Posix/profiling-single-threaded.cc	/^[[clang::xray_always_instrument]] void f2() { return; }$/;"	f
f20	lib/tsan/rtl/tsan_ppc_regs.h	53;"	d
f21	lib/tsan/rtl/tsan_ppc_regs.h	54;"	d
f22	lib/tsan/rtl/tsan_ppc_regs.h	55;"	d
f23	lib/tsan/rtl/tsan_ppc_regs.h	56;"	d
f23	test/fuzzer/CallerCalleeTest.cpp	/^void f23() { t[(unsigned)'d'] = f34;}$/;"	f
f24	lib/tsan/rtl/tsan_ppc_regs.h	57;"	d
f25	lib/tsan/rtl/tsan_ppc_regs.h	58;"	d
f26	lib/tsan/rtl/tsan_ppc_regs.h	59;"	d
f27	lib/tsan/rtl/tsan_ppc_regs.h	60;"	d
f28	lib/tsan/rtl/tsan_ppc_regs.h	61;"	d
f29	lib/tsan/rtl/tsan_ppc_regs.h	62;"	d
f3	lib/tsan/rtl/tsan_ppc_regs.h	36;"	d
f3	test/asan/TestCases/use-after-scope-goto.cc	/^void f3(int cond) {$/;"	f
f30	lib/tsan/rtl/tsan_ppc_regs.h	63;"	d
f31	lib/tsan/rtl/tsan_ppc_regs.h	64;"	d
f34	test/fuzzer/CallerCalleeTest.cpp	/^void f34() {$/;"	f
f4	lib/tsan/rtl/tsan_ppc_regs.h	37;"	d
f4	test/asan/TestCases/use-after-scope-goto.cc	/^void f4() {$/;"	f
f4	test/profile/Inputs/instrprof-visibility-helper.cpp	/^void f4() {}$/;"	f	namespace:N1
f5	lib/tsan/rtl/tsan_ppc_regs.h	38;"	d
f6	lib/tsan/rtl/tsan_ppc_regs.h	39;"	d
f7	lib/tsan/rtl/tsan_ppc_regs.h	40;"	d
f8	lib/tsan/rtl/tsan_ppc_regs.h	41;"	d
f800	test/msan/param_tls_limit.cc	/^void f800(S<800> s) {$/;"	f
f801	test/msan/param_tls_limit.cc	/^void f801(S<801> s) {$/;"	f
f9	lib/tsan/rtl/tsan_ppc_regs.h	42;"	d
fA	test/fuzzer/OnlySomeBytesTest.cpp	/^__attribute__((noinline)) void fA(IN in) { if (in[0] == 'A') fB(in); }$/;"	f
fA	test/xray/TestCases/Posix/fdr-mode.cc	/^[[clang::xray_always_instrument]] void __attribute__((noinline)) fA() { fB(); }$/;"	f
fArg	test/xray/TestCases/Posix/fdr-mode.cc	/^void __attribute__((noinline)) fArg(int) { }$/;"	f
fB	test/fuzzer/OnlySomeBytesTest.cpp	/^__attribute__((noinline)) void fB(IN in) { if (in[1] == 'B') fC(in); }$/;"	f
fB	test/xray/TestCases/Posix/fdr-mode.cc	/^[[clang::xray_always_instrument]] void __attribute__((noinline)) fB() { fC(); }$/;"	f
fC	test/fuzzer/OnlySomeBytesTest.cpp	/^__attribute__((noinline)) void fC(IN in) { if (in[2] == 'C') f0(in); }$/;"	f
fC	test/xray/TestCases/Posix/fdr-mode.cc	/^[[clang::xray_always_instrument]] void __attribute__((noinline)) fC() { ++var; }$/;"	f
f_handle	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned char f_handle[1];  \/\/ variable sized$/;"	m	struct:__sanitizer::__sanitizer_file_handle
f_many	test/msan/param_tls_limit.cc	/^void f_many(int a, double b, S<800> s, int c, double d) {$/;"	f
f_many2	test/msan/param_tls_limit.cc	/^void f_many2(int a, S<800 - 8 - 2> s, int c, double d) {$/;"	f
f_namelen	lib/msan/tests/msan_test.cc	84;"	d	file:
f_t	test/asan/TestCases/Linux/stress_dtls.c	/^typedef void **(*f_t)();$/;"	t	file:
fail	test/tsan/signal_recursive.cc	/^static void fail(const char *what) {$/;"	f	file:
failed_to_start_	lib/sanitizer_common/sanitizer_symbolizer_internal.h	/^  bool failed_to_start_;$/;"	m	class:__sanitizer::SymbolizerProcess
fake_bottom	lib/sanitizer_common/tests/sanitizer_stacktrace_test.cc	/^  uhwptr fake_bottom;$/;"	m	class:__sanitizer::FastUnwindTest	file:
fake_mallinfo	lib/asan/asan_malloc_linux.cc	/^struct fake_mallinfo {$/;"	s	file:
fake_mallinfo	lib/lsan/lsan_interceptors.cc	/^struct fake_mallinfo {$/;"	s	namespace:std	file:
fake_shared_weak_count	lib/tsan/rtl/tsan_interceptors_mac.cc	/^struct fake_shared_weak_count {$/;"	s	namespace:__tsan::__anon16	file:
fake_stack	lib/asan/asan_thread.h	/^  FakeStack *fake_stack() {$/;"	f	class:__asan::AsanThread
fake_stack	lib/sanitizer_common/tests/sanitizer_stacktrace_test.cc	/^  uhwptr *fake_stack;$/;"	m	class:__sanitizer::FastUnwindTest	file:
fake_stack_	lib/asan/asan_thread.h	/^  FakeStack *fake_stack_;$/;"	m	class:__asan::AsanThread
fake_stack_size	lib/sanitizer_common/tests/sanitizer_stacktrace_test.cc	/^  const uptr fake_stack_size = 10;$/;"	m	class:__sanitizer::FastUnwindTest	file:
fake_stack_tls	lib/asan/asan_fake_stack.cc	/^static THREADLOCAL FakeStack *fake_stack_tls;$/;"	m	namespace:__asan	file:
fake_top	lib/sanitizer_common/tests/sanitizer_stacktrace_test.cc	/^  uhwptr fake_top;$/;"	m	class:__sanitizer::FastUnwindTest	file:
fake_tsd	lib/asan/asan_win.cc	/^static __declspec(thread) void *fake_tsd = 0;$/;"	m	namespace:__asan	file:
fake_vtable	test/cfi/overwrite.cpp	/^void *fake_vtable[] = { 0, 0, (void *)&foo };$/;"	v
fallbackInit	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^void ListOfModules::fallbackInit() {$/;"	f	class:__sanitizer::ListOfModules
fallbackInit	lib/sanitizer_common/sanitizer_mac.cc	/^void ListOfModules::fallbackInit() { clear(); }$/;"	f	class:__sanitizer::ListOfModules
fallbackInit	lib/sanitizer_common/sanitizer_win.cc	/^void ListOfModules::fallbackInit() { clear(); }$/;"	f	class:__sanitizer::ListOfModules
fallback_allocator_cache	lib/asan/asan_allocator.cc	/^  AllocatorCache fallback_allocator_cache;$/;"	m	struct:__asan::Allocator	file:
fallback_allocator_cache	lib/hwasan/hwasan_allocator.cc	/^static AllocatorCache fallback_allocator_cache;$/;"	m	namespace:__hwasan	file:
fallback_allocator_cache	lib/msan/msan_allocator.cc	/^static AllocatorCache fallback_allocator_cache;$/;"	m	namespace:__msan	file:
fallback_modules_	lib/sanitizer_common/sanitizer_symbolizer.h	/^  ListOfModules fallback_modules_;$/;"	m	class:__sanitizer::final
fallback_mutex	lib/asan/asan_allocator.cc	/^  StaticSpinMutex fallback_mutex;$/;"	m	struct:__asan::Allocator	file:
fallback_mutex	lib/hwasan/hwasan_allocator.cc	/^static SpinMutex fallback_mutex;$/;"	m	namespace:__hwasan	file:
fallback_mutex	lib/msan/msan_allocator.cc	/^static StaticSpinMutex fallback_mutex;$/;"	m	namespace:__msan	file:
fallback_quarantine_cache	lib/asan/asan_allocator.cc	/^  QuarantineCache fallback_quarantine_cache;$/;"	m	struct:__asan::Allocator	file:
false	lib/BlocksRuntime/Block_private.h	42;"	d
false	lib/builtins/cpu_model.c	24;"	d	file:
fast2_dadd_asm	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^fast2_dadd_asm:$/;"	l
fast2_dmpy_asm	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^fast2_dmpy_asm:$/;"	l
fast2_dsub_asm	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^fast2_dsub_asm:$/;"	l
fast2_f2qd_asm	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^fast2_f2qd_asm:$/;"	l
fast2_ldadd_asm	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^fast2_ldadd_asm:$/;"	l
fast2_ldmpy_asm	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^fast2_ldmpy_asm:$/;"	l
fast2_ldsub_asm	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^fast2_ldsub_asm:$/;"	l
fast2_qd2f_asm	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^fast2_qd2f_asm:$/;"	l
fast_state	lib/tsan/rtl/tsan_rtl.h	/^  FastState fast_state;$/;"	m	struct:__tsan::ThreadState
fast_synch_epoch	lib/tsan/rtl/tsan_rtl.h	/^  u64 fast_synch_epoch;$/;"	m	struct:__tsan::ThreadState
fatal_error	lib/sanitizer_common/sanitizer_flag_parser.cc	/^void FlagParser::fatal_error(const char *err) {$/;"	f	class:__sanitizer::FlagParser
fatal_error	lib/sanitizer_common/tests/sanitizer_stoptheworld_test.cc	/^  volatile bool fatal_error;$/;"	m	struct:__sanitizer::AdvancedCallbackArgument	file:
fault_expected	test/tsan/signal_longjmp.cc	/^volatile int fault_expected;$/;"	v
fault_function	test/asan/TestCases/Darwin/crashlog-stacktraces.c	/^int fault_function() {$/;"	f
fault_jmp	test/tsan/signal_longjmp.cc	/^sigjmp_buf fault_jmp;$/;"	v
faulty_func	test/asan/TestCases/Darwin/haswell-symbolication.cc	/^void faulty_func(char *p) {$/;"	f
faulty_global	test/asan/TestCases/Darwin/haswell-symbolication.cc	/^long faulty_global = 10;$/;"	v
fct	test/safestack/overflow.c	/^void fct(volatile int *buffer)$/;"	f
fd	lib/msan/tests/msan_test.cc	/^  int fd;$/;"	m	class:TempFstabFile	file:
fd	lib/profile/GCDAProfiling.c	/^static int fd = -1;$/;"	v	file:
fd	lib/sanitizer_common/sanitizer_file.h	/^  fd_t fd;$/;"	m	struct:__sanitizer::FileCloser
fd	lib/sanitizer_common/sanitizer_file.h	/^  fd_t fd;$/;"	m	struct:__sanitizer::ReportFile
fd	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int fd;$/;"	m	struct:__sanitizer::__sanitizer_pollfd
fd	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  int fd;$/;"	m	struct:__sanitizer::__sanitizer_pollfd
fd	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    int fd;$/;"	m	struct:__sanitizer::__sanitizer_pollfd
fd	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int fd;$/;"	m	struct:__sanitizer::__sanitizer_pollfd
fd	lib/tsan/rtl/tsan_report.h	/^  int fd;$/;"	m	struct:__tsan::ReportLocation
fd	test/tsan/fd_dup_norace2.cc	/^int fd;$/;"	v
fd	test/tsan/fd_dup_race.cc	/^int fd;$/;"	v
fd	test/tsan/race_on_read.cc	/^int fd;$/;"	v
fd	test/tsan/race_on_write.cc	/^int fd;$/;"	v
fd_pid	lib/sanitizer_common/sanitizer_file.h	/^  uptr fd_pid;$/;"	m	struct:__sanitizer::ReportFile
fd_t	lib/sanitizer_common/sanitizer_internal_defs.h	/^typedef int fd_t;$/;"	t	namespace:__sanitizer
fd_t	lib/sanitizer_common/sanitizer_internal_defs.h	/^typedef void* fd_t;$/;"	t	namespace:__sanitizer
fdctx	lib/tsan/rtl/tsan_fd.cc	/^static FdContext fdctx;$/;"	m	namespace:__tsan	file:
fddesc	lib/tsan/rtl/tsan_fd.cc	/^static FdDesc *fddesc(ThreadState *thr, uptr pc, int fd) {$/;"	f	namespace:__tsan
fdrCommonHeaderInfo	lib/xray/xray_fdr_logging.cc	/^static XRayFileHeader &fdrCommonHeaderInfo() {$/;"	f	namespace:__xray
fdrFlags	lib/xray/xray_fdr_flags.h	/^inline FDRFlags *fdrFlags() { return &xray_fdr_flags_dont_use_directly; }$/;"	f	namespace:__xray
fdrIterator	lib/xray/xray_fdr_logging.cc	/^XRayBuffer fdrIterator(const XRayBuffer B) {$/;"	f	namespace:__xray
fds	test/tsan/fd_dup_norace.cc	/^int fds[2];$/;"	v
fds	test/tsan/fd_location.cc	/^int fds[2];$/;"	v
fds	test/tsan/fd_pipe_norace.cc	/^int fds[2];$/;"	v
fds	test/tsan/fd_pipe_race.cc	/^int fds[2];$/;"	v
fds	test/tsan/fd_socketpair_norace.cc	/^int fds[2];$/;"	v
fds	test/tsan/fd_tid_recycled.cc	/^int fds[2];$/;"	v
fds	test/tsan/vfork.cc	/^int fds[2];$/;"	v
fds_bits	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u32 fds_bits[8];$/;"	m	struct:__sanitizer::__anon82
fds_bits	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  u32 fds_bits[8];$/;"	m	struct:__sanitizer::__anon90
fds_bits	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned long fds_bits[1024 \/ (8 * sizeof(long))];$/;"	m	struct:__sanitizer::__anon70
fgetxattr_wrapper	test/msan/Linux/xattr.cc	/^ssize_t fgetxattr_wrapper(const char *name, char *buf, size_t size) {$/;"	f
field	test/BlocksRuntime/objectRRGC.c	/^    long field;$/;"	m	struct:MyStruct	file:
field	test/BlocksRuntime/objectassign.c	/^    long field;$/;"	m	struct:MyStruct	file:
field	test/asan/TestCases/Windows/wrong_downcast_on_heap.cc	/^  int field;$/;"	m	class:Parent	file:
field	test/asan/TestCases/Windows/wrong_downcast_on_stack.cc	/^  int field;$/;"	m	class:Parent	file:
file	lib/sanitizer_common/sanitizer_symbolizer.h	/^  char *file;$/;"	m	struct:__sanitizer::AddressInfo
file	lib/sanitizer_common/sanitizer_symbolizer.h	/^  char *file;$/;"	m	struct:__sanitizer::DataInfo
file	lib/tsan/go/tsan_go.cc	/^  char *file;$/;"	m	struct:__tsan::SymbolizeCodeContext	file:
file	lib/tsan/go/tsan_go.cc	/^  char *file;$/;"	m	struct:__tsan::SymbolizeDataContext	file:
file	lib/tsan/rtl/tsan_interface_ann.cc	/^  char *file;$/;"	m	struct:__tsan::ExpectRace	file:
fileWriter	lib/profile/InstrProfilingFile.c	/^static uint32_t fileWriter(ProfDataWriter *This, ProfDataIOVec *IOVecs,$/;"	f	file:
file_list	lib/sanitizer_common/scripts/sancov.py	/^  file_list = []$/;"	v
file_name_	lib/sanitizer_common/tests/sanitizer_libc_test.cc	/^  char file_name_[256];$/;"	m	class:SanitizerCommonFileTest	file:
file_size	lib/profile/GCDAProfiling.c	/^static uint64_t file_size = 0;$/;"	v	file:
filename	lib/asan/asan_interface_internal.h	/^    const char *filename;$/;"	m	struct:__asan_global_source_location
filename	lib/profile/GCDAProfiling.c	/^static char *filename = NULL;$/;"	v	file:
filename	lib/sanitizer_common/sanitizer_procmaps.h	/^  char *filename;  \/\/ owned by caller$/;"	m	class:__sanitizer::MemoryMappedSegment
filename	test/BlocksRuntime/testfilerunner.h	/^@property __strong char *filename;$/;"	v
filename_size	lib/sanitizer_common/sanitizer_procmaps.h	/^  uptr filename_size;$/;"	m	class:__sanitizer::MemoryMappedSegment
fileno	test/tsan/Linux/user_fopen.cc	/^extern "C" int fileno(FILE *f) {$/;"	f
fileno_unlocked	lib/tsan/rtl/tsan_interceptors.cc	45;"	d	file:
filepath	lib/sanitizer_common/sanitizer_win.cc	/^  const char *filepath;$/;"	m	struct:__sanitizer::__anon76::ModuleInfo	file:
filesync	lib/tsan/rtl/tsan_fd.cc	/^  FdSync filesync;$/;"	m	struct:__tsan::FdContext	file:
fill_profile_f	lib/sanitizer_common/sanitizer_common.h	/^typedef void (*fill_profile_f)(uptr start, uptr rss, bool file,$/;"	t	namespace:__sanitizer
filler	test/builtins/Unit/arm/call_apsr.h	/^        uint32_t filler: 28;$/;"	m	struct:cpsr::__anon152
fillpos_	lib/tsan/rtl/tsan_dense_alloc.h	/^  uptr fillpos_;$/;"	m	class:__tsan::DenseSlabAlloc
filtered	test/xray/TestCases/Posix/basic-filtering.cc	/^[[clang::xray_always_instrument]] void __attribute__((noinline)) filtered() {$/;"	f
final	lib/fuzzer/FuzzerCommand.h	/^class Command final {$/;"	c	namespace:fuzzer
final	lib/sanitizer_common/sanitizer_coverage_fuchsia.cc	/^class TracePcGuardController final {$/;"	c	namespace:__sancov::__anon63	file:
final	lib/sanitizer_common/sanitizer_flag_parser.h	/^  bool Parse(const char *value) final;$/;"	m	class:__sanitizer::FlagHandler
final	lib/sanitizer_common/sanitizer_symbolizer.h	/^class Symbolizer final {$/;"	c	namespace:__sanitizer
finalize	lib/tsan/rtl/tsan_interceptors.cc	/^static void finalize(void *arg) {$/;"	f	namespace:__tsan
finalize	lib/xray/xray_buffer_queue.cc	/^BufferQueue::ErrorCode BufferQueue::finalize() {$/;"	f	class:BufferQueue
finalizeCacheFrag	lib/esan/cache_frag.cpp	/^int finalizeCacheFrag() {$/;"	f	namespace:__esan
finalizeLibrary	lib/esan/esan.cpp	/^int finalizeLibrary() {$/;"	f	namespace:__esan
finalizeWorkingSet	lib/esan/working_set.cpp	/^int finalizeWorkingSet() {$/;"	f	namespace:__esan
finalize_key	lib/tsan/rtl/tsan_interceptors.cc	/^  unsigned finalize_key;$/;"	m	struct:__tsan::InterceptorContext	file:
finalizing	lib/xray/xray_buffer_queue.h	/^  bool finalizing() const {$/;"	f	class:__xray::BufferQueue
find	lib/sanitizer_common/sanitizer_stackdepotbase.h	/^Node *StackDepotBase<Node, kReservedBits, kTabSizeLog>::find(Node *s,$/;"	f	class:__sanitizer::StackDepotBase
findBaseAtOffset	lib/ubsan/ubsan_type_hash_itanium.cc	/^static const abi::__class_type_info *findBaseAtOffset($/;"	f	file:
findEdge	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  bool findEdge(uptr from_node, uptr to_node, u32 *stk_from, u32 *stk_to,$/;"	f	class:__sanitizer::DeadlockDetector
findLockContext	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  u32 findLockContext(DeadlockDetectorTLS<BV> *dtls, uptr node) {$/;"	f	class:__sanitizer::DeadlockDetector
findLockContext	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  u32 findLockContext(uptr lock_id) {$/;"	f	class:__sanitizer::DeadlockDetectorTLS
findPath	lib/sanitizer_common/sanitizer_bvgraph.h	/^  uptr findPath(uptr from, const BV &targets, uptr *path, uptr path_size) {$/;"	f	class:__sanitizer::BVGraph
findPathToLock	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  uptr findPathToLock(DeadlockDetectorTLS<BV> *dtls, uptr cur_node, uptr *path,$/;"	f	class:__sanitizer::DeadlockDetector
findShortestPath	lib/sanitizer_common/sanitizer_bvgraph.h	/^  uptr findShortestPath(uptr from, const BV &targets, uptr *path,$/;"	f	class:__sanitizer::BVGraph
find_cfi_check_in_dso	lib/cfi/cfi.cc	/^uptr find_cfi_check_in_dso(dl_phdr_info *info) {$/;"	f	namespace:__cfi
find_element	lib/xray/xray_segmented_array.h	/^  template <class Predicate> T *find_element(Predicate P) const {$/;"	f	class:__xray::Array
fini	test/asan/TestCases/Linux/init_fini_sections.cc	/^static void fini() {$/;"	f	file:
finished	test/lsan/TestCases/many_tls_keys.cc	/^int finished = 0;$/;"	v
fired_suppressions	lib/tsan/rtl/tsan_rtl.h	/^  InternalMmapVector<FiredSuppression> fired_suppressions;$/;"	m	struct:__tsan::Context
fired_suppressions_mtx	lib/tsan/rtl/tsan_rtl.h	/^  Mutex fired_suppressions_mtx;$/;"	m	struct:__tsan::Context
first	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^  bool first;$/;"	m	struct:__sanitizer::DlIteratePhdrData	file:
first	lib/sanitizer_common/sanitizer_symbolizer_libbacktrace.cc	/^  SymbolizedStack *first;$/;"	m	struct:__sanitizer::__anon99::SymbolizeCodeCallbackArg	file:
first	test/asan/TestCases/Linux/unpoison_tls.cc	/^void *first(void *arg) {$/;"	f
first_	lib/sanitizer_common/sanitizer_list.h	/^  Item *first_;$/;"	m	struct:__sanitizer::IntrusiveList
first_counter	test/sanitizer_common/TestCases/sanitizer_coverage_inline8bit_counter.cc	/^const char *first_counter;$/;"	v
fixMmapAddr	lib/esan/esan_linux.cpp	/^bool fixMmapAddr(void **Addr, SIZE_T Size, int Flags) {$/;"	f	namespace:__esan
fix_filename	lib/asan/scripts/asan_symbolize.py	/^def fix_filename(file_name):$/;"	f
fix_filename_patterns	lib/asan/scripts/asan_symbolize.py	/^fix_filename_patterns = None$/;"	v
fix_mmap_addr	lib/tsan/rtl/tsan_interceptors.cc	/^static bool fix_mmap_addr(void **addr, long_t sz, int flags) {$/;"	f	file:
fixint_t	lib/builtins/fixdfdi.c	/^typedef di_int fixint_t;$/;"	t	file:
fixint_t	lib/builtins/fixdfsi.c	/^typedef si_int fixint_t;$/;"	t	file:
fixint_t	lib/builtins/fixdfti.c	/^typedef ti_int fixint_t;$/;"	t	file:
fixint_t	lib/builtins/fixsfdi.c	/^typedef di_int fixint_t;$/;"	t	file:
fixint_t	lib/builtins/fixsfsi.c	/^typedef si_int fixint_t;$/;"	t	file:
fixint_t	lib/builtins/fixsfti.c	/^typedef ti_int fixint_t;$/;"	t	file:
fixint_t	lib/builtins/fixtfdi.c	/^typedef di_int fixint_t;$/;"	t	file:
fixint_t	lib/builtins/fixtfsi.c	/^typedef si_int fixint_t;$/;"	t	file:
fixint_t	lib/builtins/fixtfti.c	/^typedef ti_int fixint_t;$/;"	t	file:
fixuint_t	lib/builtins/fixdfdi.c	/^typedef du_int fixuint_t;$/;"	t	file:
fixuint_t	lib/builtins/fixdfsi.c	/^typedef su_int fixuint_t;$/;"	t	file:
fixuint_t	lib/builtins/fixdfti.c	/^typedef tu_int fixuint_t;$/;"	t	file:
fixuint_t	lib/builtins/fixsfdi.c	/^typedef du_int fixuint_t;$/;"	t	file:
fixuint_t	lib/builtins/fixsfsi.c	/^typedef su_int fixuint_t;$/;"	t	file:
fixuint_t	lib/builtins/fixsfti.c	/^typedef tu_int fixuint_t;$/;"	t	file:
fixuint_t	lib/builtins/fixtfdi.c	/^typedef du_int fixuint_t;$/;"	t	file:
fixuint_t	lib/builtins/fixtfsi.c	/^typedef su_int fixuint_t;$/;"	t	file:
fixuint_t	lib/builtins/fixtfti.c	/^typedef tu_int fixuint_t;$/;"	t	file:
fixuint_t	lib/builtins/fixunsdfdi.c	/^typedef du_int fixuint_t;$/;"	t	file:
fixuint_t	lib/builtins/fixunsdfsi.c	/^typedef su_int fixuint_t;$/;"	t	file:
fixuint_t	lib/builtins/fixunsdfti.c	/^typedef tu_int fixuint_t;$/;"	t	file:
fixuint_t	lib/builtins/fixunssfdi.c	/^typedef du_int fixuint_t;$/;"	t	file:
fixuint_t	lib/builtins/fixunssfsi.c	/^typedef su_int fixuint_t;$/;"	t	file:
fixuint_t	lib/builtins/fixunssfti.c	/^typedef tu_int fixuint_t;$/;"	t	file:
fixuint_t	lib/builtins/fixunstfdi.c	/^typedef du_int fixuint_t;$/;"	t	file:
fixuint_t	lib/builtins/fixunstfsi.c	/^typedef su_int fixuint_t;$/;"	t	file:
fixuint_t	lib/builtins/fixunstfti.c	/^typedef tu_int fixuint_t;$/;"	t	file:
flag	lib/tsan/rtl/tsan_interceptors_mac.cc	/^  void *flag;$/;"	m	struct:__tsan::__anon17::call_once_callback_args	file:
flag	test/lsan/TestCases/leak_check_before_thread_started.cc	/^bool flag = false;$/;"	v
flags	lib/BlocksRuntime/Block_private.h	/^    int flags; \/* refcount; *\/$/;"	m	struct:Block_byref
flags	lib/BlocksRuntime/Block_private.h	/^    int flags;$/;"	m	struct:Block_byref_header
flags	lib/BlocksRuntime/Block_private.h	/^    int flags;$/;"	m	struct:Block_layout
flags	lib/asan/asan_flags.h	/^inline Flags *flags() {$/;"	f	namespace:__asan
flags	lib/dfsan/dfsan.h	/^inline Flags &flags() {$/;"	f	namespace:__dfsan
flags	lib/hwasan/hwasan.cc	/^Flags *flags() {$/;"	f	namespace:__hwasan
flags	lib/lsan/lsan_common.h	/^inline Flags *flags() { return &lsan_flags; }$/;"	f	namespace:__lsan
flags	lib/msan/msan.cc	/^Flags *flags() {$/;"	f	namespace:__msan
flags	lib/sanitizer_common/sanitizer_deadlock_detector1.cc	/^  DDFlags flags;$/;"	m	struct:__sanitizer::DD	file:
flags	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^  DDFlags flags;$/;"	m	struct:__sanitizer::DD	file:
flags	lib/tsan/dd/dd_rtl.h	/^inline Flags* flags() {$/;"	f	namespace:__dsan
flags	lib/tsan/rtl/tsan_rtl.h	/^  Flags flags;$/;"	m	struct:__tsan::Context
flags	lib/tsan/rtl/tsan_rtl.h	/^ALWAYS_INLINE Flags *flags() {$/;"	f	namespace:__tsan
flags	lib/tsan/rtl/tsan_sync.h	/^  atomic_uint32_t flags;$/;"	m	struct:__tsan::SyncVar
flags	lib/ubsan/ubsan_flags.h	/^inline Flags *flags() { return &ubsan_flags; }$/;"	f	namespace:__ubsan
flags	lib/ubsan/ubsan_type_hash_itanium.cc	/^  unsigned int flags;$/;"	m	class:__cxxabiv1::__vmi_class_type_info	file:
flags	lib/xray/xray_flags.h	/^inline Flags *flags() { return &xray_flags_dont_use_directly; }$/;"	f	namespace:__xray
flags	test/BlocksRuntime/byrefsanity.c	/^    int flags;\/\/refcount;$/;"	m	struct:byref_id	file:
flags	test/asan/TestCases/Linux/preinstalled_signal.cc	/^  unsigned long flags;$/;"	m	struct:KernelSigaction	file:
flags	test/builtins/Unit/arm/call_apsr.h	/^    } flags;$/;"	m	union:cpsr	typeref:struct:cpsr::__anon152
flags	test/msan/Linux/syscalls_sigaction.cc	/^  long flags, handler;$/;"	m	struct:my_kernel_sigaction	file:
flags_	lib/sanitizer_common/sanitizer_flag_parser.h	/^  } *flags_;$/;"	m	class:__sanitizer::FlagParser	typeref:struct:__sanitizer::FlagParser::Flag
flags_data	lib/dfsan/dfsan.cc	/^Flags __dfsan::flags_data;$/;"	m	class:__dfsan	file:
flistxattr_wrapper	test/msan/Linux/xattr.cc	/^ssize_t flistxattr_wrapper(char *buf, size_t size) {$/;"	f
float_bits	lib/builtins/int_types.h	/^} float_bits;$/;"	t	typeref:union:__anon120
flock	lib/profile/WindowsMMap.c	/^int flock(int fd, int operation) {$/;"	f
flush_fn_list	lib/profile/GCDAProfiling.c	/^struct fn_list flush_fn_list;$/;"	v	typeref:struct:fn_list
flush_log	include/xray/xray_log_interface.h	/^  XRayLogFlushStatus (*flush_log)();$/;"	m	struct:XRayLogImpl
fma	lib/builtins/hexagon/dffma.S	/^fma:$/;"	l
fmax	lib/builtins/hexagon/dfminmax.S	/^fmax:$/;"	l
fmin	lib/builtins/hexagon/dfminmax.S	/^fmin:$/;"	l
fmt_cur	lib/dfsan/dfsan_custom.cc	/^  const char *fmt_cur;$/;"	m	struct:Formatter	file:
fmt_start	lib/dfsan/dfsan_custom.cc	/^  const char *fmt_start;$/;"	m	struct:Formatter	file:
fn	lib/profile/GCDAProfiling.c	/^  fn_ptr fn;$/;"	m	struct:fn_node	file:
fn	test/sanitizer_common/TestCases/fopen_nullptr.c	/^const char *fn = NULL;$/;"	v
fn	test/tsan/vptr_harmful_race3.cc	/^static void (A::*fn)() = &A::F;$/;"	v	file:
fn	test/xray/TestCases/Posix/fdr-single-thread.cc	/^[[clang::xray_always_instrument]] void __attribute__((noinline)) fn() { }$/;"	f
fn1	test/msan/chained_origin_limits.cc	/^void fn1() {$/;"	f
fn2	test/msan/chained_origin_limits.cc	/^void fn2() {$/;"	f
fn3	test/asan/TestCases/vla_chrome_testcase.cc	/^__attribute__((noinline)) void fn3(int *first, int second) {$/;"	f
fn3	test/msan/chained_origin_limits.cc	/^void fn3() {$/;"	f
fn_	lib/fuzzer/FuzzerUtilFuchsia.cpp	/^  Fn fn_;$/;"	m	class:fuzzer::RunOnDestruction	file:
fn_	lib/sanitizer_common/sanitizer_common.h	/^  Fn fn_;$/;"	m	class:__sanitizer::RunOnDestruction
fn_f	test/msan/chained_origin.cc	/^void fn_f(int a) {$/;"	f
fn_f	test/msan/chained_origin_empty_stack.cc	/^void fn_f(int a) {$/;"	f
fn_f	test/msan/chained_origin_memcpy.cc	/^void fn_f(int a, int b) {$/;"	f
fn_g	test/msan/chained_origin.cc	/^void fn_g(int a) {$/;"	f
fn_g	test/msan/chained_origin_empty_stack.cc	/^void fn_g(int a) {$/;"	f
fn_g	test/msan/chained_origin_memcpy.cc	/^void fn_g(int a, int b) {$/;"	f
fn_h	test/msan/chained_origin.cc	/^void fn_h() {$/;"	f
fn_h	test/msan/chained_origin_memcpy.cc	/^void fn_h() {$/;"	f
fn_list	lib/profile/GCDAProfiling.c	/^struct fn_list {$/;"	s	file:
fn_list_insert	lib/profile/GCDAProfiling.c	/^static void fn_list_insert(struct fn_list* list, fn_ptr fn) {$/;"	f	file:
fn_list_remove	lib/profile/GCDAProfiling.c	/^static void fn_list_remove(struct fn_list* list) {$/;"	f	file:
fn_node	lib/profile/GCDAProfiling.c	/^struct fn_node {$/;"	s	file:
fn_ptr	lib/profile/GCDAProfiling.c	/^typedef void (*fn_ptr)();$/;"	t	file:
foo	lib/asan/tests/asan_test.cc	/^  int foo[100];$/;"	m	struct:LargeStruct	file:
foo	lib/tsan/tests/rtl/tsan_mop.cc	/^static void foo() {$/;"	f	file:
foo	lib/tsan/tests/rtl/tsan_test.cc	/^static void foo() {}$/;"	f	file:
foo	test/BlocksRuntime/constassign.c	/^void foo(void) { printf("I'm in foo\\n"); }$/;"	f
foo	test/BlocksRuntime/macro.c	/^void foo() {$/;"	f
foo	test/BlocksRuntime/shorthandexpression.c	/^void foo() {$/;"	f
foo	test/asan/TestCases/Darwin/dyld_insert_libraries_remove.cc	/^void foo() {}$/;"	f
foo	test/asan/TestCases/Darwin/reexec-insert-libraries-env.cc	/^void foo() {}$/;"	f
foo	test/asan/TestCases/Darwin/unset-insert-libraries-on-exec.cc	/^void foo() {}$/;"	f
foo	test/asan/TestCases/Linux/asan-asm-stacktrace-test.cc	/^__attribute__((noinline)) int foo(size_t n, int *buffer) {$/;"	f
foo	test/asan/TestCases/Linux/asan_preload_test-3.cc	/^__attribute__((constructor)) void foo() {$/;"	f
foo	test/asan/TestCases/Linux/init_fini_sections.cc	/^static void foo() {$/;"	f	file:
foo	test/asan/TestCases/Linux/local_alias.cc	/^long foo(long *p) {$/;"	f
foo	test/asan/TestCases/Linux/odr-violation.cc	/^namespace foo { char G[SZ]; }$/;"	n	file:
foo	test/asan/TestCases/Linux/preinit_test.cc	/^  int foo() const { return 0; }$/;"	f	struct:A
foo	test/asan/TestCases/Linux/printf-fortify-1.c	/^__attribute__((noinline)) int foo() {$/;"	f
foo	test/asan/TestCases/Linux/printf-fortify-2.c	/^__attribute__((noinline)) int foo() {$/;"	f
foo	test/asan/TestCases/Linux/printf-fortify-3.c	/^__attribute__((noinline)) char foo(const char *format, ...) {$/;"	f
foo	test/asan/TestCases/Linux/printf-fortify-4.c	/^__attribute__((noinline)) char foo(const char *format, ...) {$/;"	f
foo	test/asan/TestCases/Linux/printf-fortify-5.c	/^__attribute__((noinline)) int foo() {$/;"	f
foo	test/asan/TestCases/Linux/stack-trace-dlclose.cc	/^void *foo() {$/;"	f
foo	test/asan/TestCases/Posix/coverage-fork.cc	/^void foo() { printf("foo\\n"); }$/;"	f
foo	test/asan/TestCases/Posix/coverage.cc	/^void foo() { printf("foo\\n"); }$/;"	f
foo	test/asan/TestCases/Windows/coverage-basic.cc	/^void foo() { fputs("FOO", stderr); }$/;"	f
foo	test/asan/TestCases/Windows/demangled_names.cc	/^namespace foo {$/;"	n	file:
foo	test/asan/TestCases/Windows/dll_stack_use_after_return.cc	/^void foo() {$/;"	f
foo	test/asan/TestCases/Windows/global_const_string_oob.cc	/^extern "C" const char *foo = "foobarspam";$/;"	v
foo	test/asan/TestCases/Windows/stack_use_after_return.cc	/^void foo() {$/;"	f
foo	test/asan/TestCases/Windows/use_after_return_linkage.cc	/^void foo(int *p) { *p = 42; }$/;"	f
foo	test/asan/TestCases/alloca_big_alignment.cc	/^__attribute__((noinline)) void foo(int index, int len) {$/;"	f
foo	test/asan/TestCases/alloca_detect_custom_size_.cc	/^__attribute__((noinline)) void foo(int index, int len) {$/;"	f
foo	test/asan/TestCases/alloca_instruments_all_paddings.cc	/^__attribute__((noinline)) void foo(int index, int len) {$/;"	f
foo	test/asan/TestCases/alloca_loop_unpoisoning.cc	/^__attribute__((noinline)) void foo(int len) {$/;"	f
foo	test/asan/TestCases/alloca_overflow_partial.cc	/^__attribute__((noinline)) void foo(int index, int len) {$/;"	f
foo	test/asan/TestCases/alloca_overflow_right.cc	/^__attribute__((noinline)) void foo(int index, int len) {$/;"	f
foo	test/asan/TestCases/alloca_safe_access.cc	/^__attribute__((noinline)) void foo(int index, int len) {$/;"	f
foo	test/asan/TestCases/alloca_underflow_left.cc	/^__attribute__((noinline)) void foo(int index, int len) {$/;"	f
foo	test/asan/TestCases/alloca_vla_interact.cc	/^__attribute__((noinline)) void foo(int len) {$/;"	f
foo	test/asan/TestCases/asan_and_llvm_coverage_test.cc	/^int foo() { return 1; }$/;"	f
foo	test/asan/TestCases/coverage-trace-pc.cc	/^__attribute__((noinline)) void foo() { printf("foo\\n"); }$/;"	f
foo	test/asan/TestCases/force_inline_opt0.cc	/^void foo(int *x) {$/;"	f
foo	test/asan/TestCases/invalid-pointer-pairs-compare-errors.cc	/^int foo(char *p, char *q) {$/;"	f
foo	test/asan/TestCases/invalid-pointer-pairs-compare-null.cc	/^int foo(char *p, char *q) {$/;"	f
foo	test/asan/TestCases/invalid-pointer-pairs-compare-success.cc	/^int foo(char *p) {$/;"	f
foo	test/asan/TestCases/invalid-pointer-pairs-subtract-errors.cc	/^int foo(char *p, char *q) {$/;"	f
foo	test/asan/TestCases/pass-object-byval.cc	/^void foo(A a) {$/;"	f
foo	test/asan/TestCases/pass-struct-byval-uar.cc	/^A *foo(A a) {$/;"	f
foo	test/asan/TestCases/pass-struct-byval.cc	/^void foo(A a) {$/;"	f
foo	test/asan/TestCases/vla_condition_overflow.cc	/^__attribute__((noinline)) void foo(int index, int len) {$/;"	f
foo	test/asan/TestCases/vla_loop_overfow.cc	/^void foo(int index, int len) {$/;"	f
foo	test/builtins/Unit/gcc_personality_test.c	/^void foo() {$/;"	f
foo	test/cfi/icall/weak.c	/^void foo(void (*p)(void)) {$/;"	f
foo	test/cfi/overwrite.cpp	/^void foo() {$/;"	f
foo	test/cfi/vtable-may-alias.cpp	/^__attribute__((weak)) void foo(void *p) {$/;"	f
foo	test/profile/Inputs/comdat_rename_2.cc	/^FOO foo;$/;"	v
foo	test/profile/Inputs/extern_template1.cpp	/^int foo() {$/;"	f
foo	test/profile/Inputs/instrprof-alloc.c	/^__attribute__((noinline)) void foo() {}$/;"	f
foo	test/profile/Inputs/instrprof-dynamic-main.cpp	/^void foo(int K) { if (K) {} }$/;"	f
foo	test/profile/Inputs/instrprof-icall-promo.h	/^  virtual int foo() { return 1; };$/;"	f	struct:A
foo	test/profile/Inputs/instrprof-merge-match.c	/^void foo(char c) {$/;"	f
foo	test/profile/Inputs/instrprof-shared-lib.c	/^void foo(int n) {$/;"	f
foo	test/profile/Linux/counter_promo_for.c	/^__attribute__((noinline)) void foo(int n, int N) {$/;"	f
foo	test/profile/Linux/counter_promo_while.c	/^__attribute__((noinline)) void foo(int n, int N) {$/;"	f
foo	test/profile/Linux/coverage_test.cpp	/^void foo(bool cond) { \/\/ CHECK:  [[@LINE]]| 1|void foo($/;"	f
foo	test/profile/Linux/instrprof-merge-vp.c	/^void foo(int N) {$/;"	f
foo	test/profile/Linux/instrprof-value-merge.c	/^__attribute__((noinline)) void foo() {}$/;"	f
foo	test/profile/infinite_loop.c	/^__attribute__((noinline)) void foo()$/;"	f
foo	test/profile/instrprof-darwin-dead-strip.c	/^void foo() {}$/;"	f
foo	test/profile/instrprof-dump.c	/^__attribute__((noinline)) int foo(int X) {$/;"	f
foo	test/profile/instrprof-merge.c	/^void foo(char c) {$/;"	f
foo	test/profile/instrprof-reset-counters.c	/^void foo(int N) {$/;"	f
foo	test/profile/instrprof-write-file-only.c	/^int foo(int X) {$/;"	f
foo	test/profile/instrprof-write-file.c	/^int foo(int X) {$/;"	f
foo	test/sanitizer_common/TestCases/get_module_and_offset_for_pc.cc	/^int foo() { return 1; }$/;"	f
foo	test/sanitizer_common/TestCases/sanitizer_coverage_no_prune.cc	/^void foo(int *a) {$/;"	f
foo	test/sanitizer_common/TestCases/sanitizer_coverage_stack_depth.cc	/^void foo(int recurse) {$/;"	f
foo	test/sanitizer_common/TestCases/sanitizer_coverage_symbolize.cc	/^int foo() {$/;"	f
foo	test/sanitizer_common/TestCases/sanitizer_coverage_trace_pc_guard-dso.cc	/^int foo() {$/;"	f
foo	test/sanitizer_common/TestCases/sanitizer_coverage_trace_pc_guard-init.cc	/^int foo() {$/;"	f
foo	test/sanitizer_common/TestCases/sanitizer_coverage_trace_pc_guard.cc	/^int foo() {$/;"	f
foo	test/tsan/Darwin/dlopen.cc	/^extern "C" void foo() {$/;"	f
foo	test/tsan/Darwin/malloc-stack-logging.cc	/^void *foo(void *p) {$/;"	f
foo	test/tsan/deep_stack1.cc	/^static void foo() {$/;"	f	file:
foo	test/tsan/fork_atexit.cc	/^void foo() {$/;"	f
foo	test/tsan/free_race2.c	/^void __attribute__((noinline)) foo(int *mem) {$/;"	f
foo	test/tsan/longjmp.cc	/^int foo(jmp_buf env) {$/;"	f
foo	test/tsan/longjmp2.cc	/^int foo(sigjmp_buf env) {$/;"	f
foo	test/tsan/longjmp3.cc	/^void foo(jmp_buf env) {$/;"	f
foo	test/tsan/longjmp4.cc	/^void foo(jmp_buf env) {$/;"	f
foo	test/tsan/race_on_speculative_load.cc	/^int foo(int cond) {$/;"	f
foo	test/tsan/restore_stack.cc	/^void __attribute__((noinline)) foo() {$/;"	f
foo	test/tsan/static_init2.cc	/^void foo(Cache *my) {$/;"	f
foo	test/ubsan/TestCases/Misc/nonnull.cpp	/^char *foo(char *a) {$/;"	f
foo	test/xray/TestCases/Posix/arg1-logger.cc	/^[[clang::xray_always_instrument, clang::xray_log_args(1)]] void foo(void *) {}$/;"	f
foo	test/xray/TestCases/Posix/coverage-sample.cc	/^[[clang::xray_always_instrument]] void foo() {$/;"	f
foo	test/xray/TestCases/Posix/custom-event-handler-alignment.cc	/^[[clang::xray_always_instrument]] void foo() {$/;"	f
foo	test/xray/TestCases/Posix/custom-event-logging.cc	/^[[clang::xray_always_instrument]] void foo() {$/;"	f
foo	test/xray/TestCases/Posix/fixedsize-logging.cc	/^[[clang::xray_always_instrument]] void foo() {$/;"	f
foo	test/xray/TestCases/Posix/func-id-utils.cc	/^[[clang::xray_always_instrument]] void foo() {$/;"	f
foo	test/xray/TestCases/Posix/optional-inmemory-log.cc	/^[[clang::xray_always_instrument]] void foo() {$/;"	f
foo	test/xray/TestCases/Posix/pic_test.cc	/^unsigned short foo (unsigned b)$/;"	f
foo1	test/asan/TestCases/Linux/coverage-missing.cc	/^void foo1() { fprintf(stderr, "foo1\\n"); }$/;"	f
foo1	test/asan/TestCases/Posix/coverage-reset.cc	/^__attribute__((noinline)) void foo1() { printf("foo1\\n"); }$/;"	f
foo1	test/asan/TestCases/Windows/null_deref_multiple_dlls.cc	/^__declspec(dllexport) void foo1() {}$/;"	f
foo1	test/tsan/simple_stack.c	/^void __attribute__((noinline)) foo1() {$/;"	f
foo1	test/tsan/simple_stack2.cc	/^void __attribute__((noinline)) foo1() {$/;"	f
foo2	test/asan/TestCases/Linux/coverage-missing.cc	/^void foo2() { fprintf(stderr, "foo2\\n"); }$/;"	f
foo2	test/asan/TestCases/Posix/coverage-reset.cc	/^__attribute__((noinline)) void foo2() { printf("foo2\\n"); }$/;"	f
foo2	test/asan/TestCases/Windows/null_deref_multiple_dlls.cc	/^__declspec(dllexport) void foo2() {$/;"	f
foo2	test/profile/Inputs/instrprof-alloc.c	/^__attribute__((noinline)) void foo2() {}$/;"	f
foo2	test/tsan/simple_stack.c	/^void __attribute__((noinline)) foo2() {$/;"	f
foo2	test/tsan/simple_stack2.cc	/^void __attribute__((noinline)) foo2() {$/;"	f
foo_clean	test/builtins/Unit/gcc_personality_test_helper.cxx	/^void foo_clean(void* x)$/;"	f
foo_clean_called	test/builtins/Unit/gcc_personality_test_helper.cxx	/^static bool foo_clean_called = false;$/;"	v	file:
foo_from_dll	test/asan/TestCases/Windows/dll_report_globals_symbolization_at_startup.cc	/^__declspec(dllexport) int foo_from_dll() {$/;"	f
foo_x	test/builtins/Unit/gcc_personality_test_helper.cxx	/^static int* foo_x = NULL;$/;"	v	file:
foobar	lib/tsan/go/test.c	/^void foobar() {}$/;"	f
foobar	test/tsan/java_race_pc.cc	/^void foobar() {$/;"	f
foobar	test/tsan/race_with_finished_thread.cc	/^void __attribute__((noinline)) foobar(int *p) {$/;"	f
foobar	test/tsan/stack_sync_reuse.cc	/^void __attribute__((noinline)) foobar() {$/;"	f
foobarbaz	lib/tsan/tests/rtl/tsan_mop.cc	/^static void foobarbaz() {}$/;"	f	file:
fopen	test/tsan/Linux/user_fopen.cc	/^extern "C" FILE *fopen(const char *file, const char *mode) {$/;"	f
for_alignment	test/asan/TestCases/speculative_load2.cc	/^    int for_alignment;$/;"	m	struct:__anon136::__anon137	file:
force_interface_symbols	lib/asan/asan_rtl.cc	/^static NOINLINE void force_interface_symbols() {$/;"	f	namespace:__asan
force_system_symbolizer	lib/asan/scripts/asan_symbolize.py	/^force_system_symbolizer = False$/;"	v
format	lib/dfsan/dfsan_custom.cc	/^  int format() {$/;"	f	struct:Formatter
format	lib/dfsan/dfsan_custom.cc	/^  template <typename T> int format(T arg) {$/;"	f	struct:Formatter
format_buffer	lib/dfsan/dfsan_custom.cc	/^static int format_buffer(char *str, size_t size, const char *fmt,$/;"	f	file:
forwarding	lib/BlocksRuntime/Block_private.h	/^    struct Block_byref *forwarding;$/;"	m	struct:Block_byref	typeref:struct:Block_byref::Block_byref
forwarding	lib/BlocksRuntime/Block_private.h	/^    struct Block_byref *forwarding;$/;"	m	struct:Block_byref_header	typeref:struct:Block_byref_header::Block_byref
forwarding	test/BlocksRuntime/byrefsanity.c	/^    struct byref_id *forwarding;$/;"	m	struct:byref_id	typeref:struct:byref_id::byref_id	file:
fp_t	lib/builtins/fp_lib.h	/^typedef double fp_t;$/;"	t
fp_t	lib/builtins/fp_lib.h	/^typedef float fp_t;$/;"	t
fp_t	lib/builtins/fp_lib.h	/^typedef long double fp_t;$/;"	t
fpregs_struct	test/asan/TestCases/Linux/ptrace.cc	/^typedef _user_fpregs_struct fpregs_struct;$/;"	t	file:
fpregs_struct	test/asan/TestCases/Linux/ptrace.cc	/^typedef char fpregs_struct[ARM_VFPREGS_SIZE];$/;"	t	file:
fpregs_struct	test/asan/TestCases/Linux/ptrace.cc	/^typedef elf_fpregset_t fpregs_struct;$/;"	t	file:
fpregs_struct	test/asan/TestCases/Linux/ptrace.cc	/^typedef struct user_fpsimd_state fpregs_struct;$/;"	t	typeref:struct:user_fpsimd_state	file:
fpregs_struct	test/asan/TestCases/Linux/ptrace.cc	/^typedef user_fpregs_struct fpregs_struct;$/;"	t	file:
frame_descr	lib/asan/asan_descriptions.h	/^  const char *frame_descr;$/;"	m	struct:__asan::StackAddressDescription
frame_descr	lib/asan/asan_thread.h	/^    const char *frame_descr;$/;"	m	struct:__asan::AsanThread::StackFrameAccess
frame_pc	lib/asan/asan_descriptions.h	/^  uptr frame_pc;$/;"	m	struct:__asan::StackAddressDescription
frame_pc	lib/asan/asan_thread.h	/^    uptr frame_pc;$/;"	m	struct:__asan::AsanThread::StackFrameAccess
frames	lib/tsan/rtl/tsan_report.h	/^  SymbolizedStack *frames;$/;"	m	struct:__tsan::ReportStack
frames_symbolized	lib/sanitizer_common/sanitizer_symbolizer_libbacktrace.cc	/^  uptr frames_symbolized;$/;"	m	struct:__sanitizer::__anon99::SymbolizeCodeCallbackArg	file:
frameworkPath	test/BlocksRuntime/testfilerunner.h	/^@property __strong char *frameworkPath;$/;"	v
free	lib/asan/asan_malloc_linux.cc	/^  void (*free)(void *mem);$/;"	m	struct:MallocDebugK	file:
free	lib/asan/asan_malloc_linux.cc	/^  void (*free)(void *mem);$/;"	m	struct:MallocDebugL	file:
free	lib/asan/asan_malloc_win.cc	/^void free(void *ptr) {$/;"	f
free	lib/esan/esan_circular_buffer.h	/^  void free() {$/;"	f	class:__esan::CircularBuffer
free	lib/sanitizer_common/sanitizer_rtems.cc	18;"	d	file:
free	lib/sanitizer_common/tests/sanitizer_allocator_testlib.cc	/^void free(void *p) {$/;"	f
free	lib/scudo/scudo_malloc.cpp	/^INTERCEPTOR_ATTRIBUTE void free(void *ptr) {$/;"	f
free	test/asan/TestCases/deep_stack_uaf.cc	/^  static void free(char *x) {$/;"	f	struct:DeepFree
free	test/tsan/Linux/user_malloc.cc	/^extern "C" void free(void *p) {$/;"	f
free_aaa	lib/asan/tests/asan_test.cc	/^NOINLINE void free_aaa(void *p) { free_bbb(p); break_optimization(0);}$/;"	f
free_bbb	lib/asan/tests/asan_test.cc	/^NOINLINE void free_bbb(void *p) { free_ccc(p); break_optimization(0);}$/;"	f
free_ccc	lib/asan/tests/asan_test.cc	/^NOINLINE void free_ccc(void *p) { free(p); break_optimization(0);}$/;"	f
free_context_id	lib/asan/asan_allocator.cc	/^  u32 free_context_id;$/;"	m	struct:__asan::ChunkBase	file:
free_context_id	lib/hwasan/hwasan_allocator.cc	/^  u32 free_context_id;$/;"	m	struct:__hwasan::Metadata	file:
free_context_in_callback	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^  bool free_context_in_callback;$/;"	m	struct:__tsan::__anon19	file:
free_hook	lib/sanitizer_common/sanitizer_common.cc	/^  void (*free_hook)(const void *);$/;"	m	struct:__sanitizer::MallocFreeHook	file:
free_id	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^  InternalMmapVector<u32> free_id;$/;"	m	struct:__sanitizer::DD	file:
free_memory	test/asan/TestCases/Linux/calloc-preload.c	/^void free_memory() {$/;"	f
free_stack	lib/asan/asan_errors.h	/^  const BufferedStackTrace *free_stack;$/;"	m	struct:__asan::ErrorFreeNotMalloced
free_stack	lib/asan/asan_errors.h	/^  const BufferedStackTrace *free_stack;$/;"	m	struct:__asan::ErrorNewDeleteTypeMismatch
free_stack_id	lib/asan/asan_descriptions.h	/^  u32 free_stack_id;$/;"	m	struct:__asan::HeapAddressDescription
free_stack_id	lib/hwasan/hwasan_report.cc	/^  u32 free_stack_id;$/;"	m	struct:__hwasan::HeapAddressDescription	file:
free_tid	lib/asan/asan_allocator.cc	/^  u32 free_tid          : 24;$/;"	m	struct:__asan::ChunkHeader	file:
free_tid	lib/asan/asan_descriptions.h	/^  uptr free_tid;$/;"	m	struct:__asan::HeapAddressDescription
freed	lib/asan/asan_stats.h	/^  uptr freed;$/;"	m	struct:__asan::AsanStats
freelist_	lib/tsan/rtl/tsan_dense_alloc.h	/^  IndexT freelist_;$/;"	m	class:__tsan::DenseSlabAlloc
frees	lib/asan/asan_stats.h	/^  uptr frees;$/;"	m	struct:__asan::AsanStats
frexp	lib/asan/asan_win_dll_thunk.cc	/^INTERCEPT_LIBRARY_FUNCTION(frexp);$/;"	v
from	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^    u16 from;$/;"	m	struct:__sanitizer::DeadlockDetector::Edge
fromRep	lib/builtins/fp_lib.h	/^static __inline fp_t fromRep(rep_t x) {$/;"	f
fromRep128	test/builtins/Unit/fp_test.h	/^static inline long double fromRep128(uint64_t hi, uint64_t lo)$/;"	f
fromRep16	test/builtins/Unit/fp_test.h	/^static inline uint16_t fromRep16(uint16_t x)$/;"	f
fromRep32	test/builtins/Unit/fp_test.h	/^static inline float fromRep32(uint32_t x)$/;"	f
fromRep64	test/builtins/Unit/fp_test.h	/^static inline double fromRep64(uint64_t x)$/;"	f
from_memalign	lib/asan/asan_allocator.cc	/^  u32 from_memalign     : 1;$/;"	m	struct:__asan::ChunkHeader	file:
from_stack	test/asan/TestCases/Linux/swapcontext_annotation.cc	/^const void *from_stack;$/;"	v
from_stacksize	test/asan/TestCases/Linux/swapcontext_annotation.cc	/^size_t from_stacksize;$/;"	v
front	lib/sanitizer_common/sanitizer_list.h	/^  Item *front() { return first_; }$/;"	f	struct:__sanitizer::IntrusiveList
front	lib/sanitizer_common/sanitizer_list.h	/^  const Item *front() const { return first_; }$/;"	f	struct:__sanitizer::IntrusiveList
front	lib/xray/xray_segmented_array.h	/^  T &front() const {$/;"	f	class:__xray::Array
frontier	lib/lsan/lsan_common.cc	/^  Frontier *frontier;$/;"	m	struct:__lsan::InvalidPCParam	file:
fstat	lib/msan/msan_interceptors.cc	39;"	d	file:
fstat	lib/sanitizer_common/symbolizer/sanitizer_wrappers.cc	/^int fstat(int fd, struct stat *buf) { STAT(fstat, fd, buf); }$/;"	f
full_name	lib/sanitizer_common/sanitizer_common.h	/^  const char *full_name() const { return full_name_; }$/;"	f	class:__sanitizer::LoadedModule
full_name_	lib/sanitizer_common/sanitizer_common.h	/^  char *full_name_;  \/\/ Owned.$/;"	m	class:__sanitizer::LoadedModule
full_path	lib/sanitizer_common/sanitizer_file.h	/^  char full_path[kMaxPathLength];$/;"	m	struct:__sanitizer::ReportFile
fun_t	test/asan/TestCases/Posix/asan-symbolize-sanity-test.cc	/^typedef void (fun_t)(int*, int);$/;"	t	file:
fun_t	test/asan/TestCases/Posix/dlclose-test.cc	/^typedef int *(fun_t)();$/;"	t	file:
fun_t	test/asan/TestCases/Posix/shared-lib-test.cc	/^typedef void (fun_t)(int x);$/;"	t	file:
func	lib/asan/asan_mac.cc	/^  dispatch_function_t func;$/;"	m	struct:__asan::__anon47	file:
func	lib/lsan/lsan_mac.cc	/^  dispatch_function_t func;$/;"	m	struct:__lsan::__anon10	file:
func	lib/msan/msan_interceptors.cc	/^  void (*func)(void *arg);$/;"	m	struct:MSanAtExitRecord	file:
func	lib/tsan/go/tsan_go.cc	/^  char *func;$/;"	m	struct:__tsan::SymbolizeCodeContext	file:
func	test/asan/TestCases/Darwin/mixing-global-constructors.cc	/^void func(char *ptr) {$/;"	f
func	test/lsan/TestCases/leak_check_before_thread_started.cc	/^void *func(void *arg) {$/;"	f
func	test/profile/Inputs/instrprof-dlopen-func.c	/^void func(int K) {}$/;"	f
func	test/profile/Linux/coverage_test.cpp	/^void func() {         \/\/ CHECK:  [[@LINE]]| 0|void func($/;"	f
func	test/ubsan/TestCases/Misc/nonnull-arg.cpp	/^__attribute__((nonnull)) int func(int *nonnull) { return *nonnull; }$/;"	f
func1	test/asan/TestCases/debug_stacks.cc	/^void func1() {$/;"	f
func1	test/builtins/Unit/clear_cache_test.c	/^static int func1() { return 1; }$/;"	f	file:
func1	test/builtins/Unit/enable_execute_stack_test.c	/^static int func1() { return 1; }$/;"	f	file:
func1	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func1(uint8_t a1, uint8_t a2) {$/;"	f
func1	test/profile/Inputs/instrprof-gcov-fork.c	/^void func1() {}$/;"	f
func10	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func10(uint8_t a1, uint8_t a2) {$/;"	f
func100	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func100(uint8_t a1, uint8_t a2, uint8_t a3) {$/;"	f
func101	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func101(uint8_t a1) {$/;"	f
func102	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func102(uint8_t a1, uint8_t a2) {$/;"	f
func103	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func103(uint8_t a1, uint8_t a2) {$/;"	f
func104	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func104(uint8_t a1, uint8_t a2, uint8_t a3) {$/;"	f
func105	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func105(uint8_t a1, uint8_t a2) {$/;"	f
func106	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func106(uint8_t a1, uint8_t a2) {$/;"	f
func107	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func107(uint8_t a1) {$/;"	f
func108	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func108(uint8_t a1, uint8_t a2) {$/;"	f
func109	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func109(uint8_t a1) {$/;"	f
func11	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func11(uint8_t a1, uint8_t a2) {$/;"	f
func110	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func110(uint8_t a1, uint8_t a2) {$/;"	f
func111	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func111(uint8_t a1, uint8_t a2, uint8_t a3) {$/;"	f
func112	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func112(uint8_t a1, uint8_t a2) {$/;"	f
func113	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func113(uint8_t a1, uint8_t a2) {$/;"	f
func114	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func114(uint8_t a1) {$/;"	f
func115	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func115(uint8_t a1, uint8_t a2) {$/;"	f
func116	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func116(uint8_t a1) {$/;"	f
func117	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func117(uint8_t a1) {$/;"	f
func118	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func118(uint8_t a1) {$/;"	f
func119	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func119(uint8_t a1, uint8_t a2) {$/;"	f
func12	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func12(uint8_t a1, uint8_t a2) {$/;"	f
func120	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func120(uint8_t a1, uint8_t a2, uint8_t a3) {$/;"	f
func121	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func121(uint8_t a1, uint8_t a2) {$/;"	f
func122	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func122(uint8_t a1, uint8_t a2) {$/;"	f
func123	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func123(uint8_t a1) {$/;"	f
func124	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func124(uint8_t a1) {$/;"	f
func125	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func125(uint8_t a1) {$/;"	f
func126	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func126(uint8_t a1) {$/;"	f
func127	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func127(uint8_t a1, uint8_t a2) {$/;"	f
func128	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func128(uint8_t a1) {$/;"	f
func129	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func129(uint8_t a1, uint8_t a2) {$/;"	f
func13	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func13(uint8_t a1, uint8_t a2) {$/;"	f
func130	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func130(uint8_t a1, uint8_t a2) {$/;"	f
func131	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func131(uint8_t a1, uint8_t a2) {$/;"	f
func132	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func132(uint8_t a1, uint8_t a2) {$/;"	f
func133	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func133(uint8_t a1, uint8_t a2) {$/;"	f
func134	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func134(uint8_t a1) {$/;"	f
func135	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func135(uint8_t a1, uint8_t a2) {$/;"	f
func136	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func136(uint8_t a1, uint8_t a2) {$/;"	f
func137	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func137(uint8_t a1, uint8_t a2) {$/;"	f
func138	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func138(uint8_t a1) {$/;"	f
func139	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func139(uint8_t a1) {$/;"	f
func14	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func14(uint8_t a1) {$/;"	f
func140	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func140(uint8_t a1) {$/;"	f
func141	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func141(uint8_t a1) {$/;"	f
func142	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func142(uint8_t a1, uint8_t a2) {$/;"	f
func143	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func143(uint8_t a1, uint8_t a2) {$/;"	f
func144	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func144(uint8_t a1) {$/;"	f
func145	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func145(uint8_t a1, uint8_t a2) {$/;"	f
func146	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func146(uint8_t a1, uint8_t a2) {$/;"	f
func147	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func147(uint8_t a1) {$/;"	f
func148	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func148(uint8_t a1) {$/;"	f
func149	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func149(uint8_t a1) {$/;"	f
func15	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func15(uint8_t a1, uint8_t a2) {$/;"	f
func150	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func150(uint8_t a1, uint8_t a2) {$/;"	f
func151	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func151(uint8_t a1, uint8_t a2) {$/;"	f
func152	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func152(uint8_t a1, uint8_t a2) {$/;"	f
func153	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func153(uint8_t a1) {$/;"	f
func154	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func154(uint8_t a1, uint8_t a2) {$/;"	f
func155	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func155(uint8_t a1, uint8_t a2) {$/;"	f
func156	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func156(uint8_t a1) {$/;"	f
func157	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func157(uint8_t a1) {$/;"	f
func158	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func158(uint8_t a1) {$/;"	f
func159	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func159(uint8_t a1) {$/;"	f
func16	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func16(uint8_t a1) {$/;"	f
func160	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func160(uint8_t a1) {$/;"	f
func161	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func161(uint8_t a1, uint8_t a2) {$/;"	f
func162	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func162(uint8_t a1) {$/;"	f
func163	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func163(uint8_t a1, uint8_t a2, uint8_t a3) {$/;"	f
func164	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func164(uint8_t a1, uint8_t a2) {$/;"	f
func165	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func165(uint8_t a1) {$/;"	f
func166	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func166(uint8_t a1) {$/;"	f
func167	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func167(uint8_t a1) {$/;"	f
func168	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func168(uint8_t a1) {$/;"	f
func169	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func169(uint8_t a1, uint8_t a2) {$/;"	f
func17	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func17(uint8_t a1) {$/;"	f
func170	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func170(uint8_t a1, uint8_t a2) {$/;"	f
func171	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func171(uint8_t a1) {$/;"	f
func172	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func172(uint8_t a1) {$/;"	f
func173	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func173(uint8_t a1) {$/;"	f
func174	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func174(uint8_t a1, uint8_t a2) {$/;"	f
func175	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func175(uint8_t a1, uint8_t a2) {$/;"	f
func176	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func176(uint8_t a1) {$/;"	f
func177	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func177(uint8_t a1, uint8_t a2) {$/;"	f
func178	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func178(uint8_t a1) {$/;"	f
func179	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func179(uint8_t a1) {$/;"	f
func18	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func18(uint8_t a1, uint8_t a2) {$/;"	f
func180	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func180(uint8_t a1, uint8_t a2) {$/;"	f
func181	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func181(uint8_t a1, uint8_t a2) {$/;"	f
func182	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func182(uint8_t a1, uint8_t a2) {$/;"	f
func183	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func183(uint8_t a1, uint8_t a2) {$/;"	f
func184	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func184(uint8_t a1) {$/;"	f
func185	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func185(uint8_t a1) {$/;"	f
func186	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func186(uint8_t a1, uint8_t a2) {$/;"	f
func187	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func187(uint8_t a1, uint8_t a2) {$/;"	f
func188	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func188(uint8_t a1) {$/;"	f
func189	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func189(uint8_t a1) {$/;"	f
func19	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func19(uint8_t a1, uint8_t a2) {$/;"	f
func190	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func190(uint8_t a1, uint8_t a2) {$/;"	f
func191	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func191(uint8_t a1) {$/;"	f
func192	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func192(uint8_t a1) {$/;"	f
func193	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func193(uint8_t a1, uint8_t a2, uint8_t a3) {$/;"	f
func194	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func194(uint8_t a1, uint8_t a2) {$/;"	f
func195	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func195(uint8_t a1, uint8_t a2) {$/;"	f
func196	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func196(uint8_t a1, uint8_t a2) {$/;"	f
func197	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func197(uint8_t a1, uint8_t a2) {$/;"	f
func198	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func198(uint8_t a1, uint8_t a2) {$/;"	f
func199	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func199(uint8_t a1, uint8_t a2) {$/;"	f
func2	test/asan/TestCases/debug_stacks.cc	/^void func2() {$/;"	f
func2	test/builtins/Unit/clear_cache_test.c	/^static int func2() { return 2; }$/;"	f	file:
func2	test/builtins/Unit/enable_execute_stack_test.c	/^static int func2() { return 2; }$/;"	f	file:
func2	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func2(uint8_t a1, uint8_t a2) {$/;"	f
func2	test/profile/Inputs/instrprof-dlopen-func2.c	/^void func2(int K) {}$/;"	f
func2	test/profile/Inputs/instrprof-gcov-fork.c	/^void func2() {}$/;"	f
func20	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func20(uint8_t a1, uint8_t a2) {$/;"	f
func200	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func200(uint8_t a1) {$/;"	f
func201	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func201(uint8_t a1, uint8_t a2) {$/;"	f
func202	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func202(uint8_t a1, uint8_t a2) {$/;"	f
func203	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func203(uint8_t a1) {$/;"	f
func204	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func204(uint8_t a1) {$/;"	f
func205	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func205(uint8_t a1, uint8_t a2, uint8_t a3) {$/;"	f
func206	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func206(uint8_t a1, uint8_t a2) {$/;"	f
func207	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func207(uint8_t a1) {$/;"	f
func208	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func208(uint8_t a1) {$/;"	f
func209	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func209(uint8_t a1) {$/;"	f
func21	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func21(uint8_t a1, uint8_t a2, uint8_t a3) {$/;"	f
func210	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func210(uint8_t a1, uint8_t a2) {$/;"	f
func211	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func211(uint8_t a1, uint8_t a2) {$/;"	f
func212	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func212(uint8_t a1) {$/;"	f
func213	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func213(uint8_t a1, uint8_t a2) {$/;"	f
func214	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func214(uint8_t a1) {$/;"	f
func215	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func215(uint8_t a1, uint8_t a2) {$/;"	f
func216	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func216(uint8_t a1) {$/;"	f
func217	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func217(uint8_t a1, uint8_t a2) {$/;"	f
func218	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func218(uint8_t a1) {$/;"	f
func219	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func219(uint8_t a1) {$/;"	f
func22	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func22(uint8_t a1) {$/;"	f
func220	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func220(uint8_t a1) {$/;"	f
func221	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func221(uint8_t a1) {$/;"	f
func222	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func222(uint8_t a1, uint8_t a2) {$/;"	f
func223	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func223(uint8_t a1, uint8_t a2) {$/;"	f
func224	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func224(uint8_t a1) {$/;"	f
func225	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func225(uint8_t a1) {$/;"	f
func226	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func226(uint8_t a1) {$/;"	f
func227	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func227(uint8_t a1, uint8_t a2) {$/;"	f
func228	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func228(uint8_t a1, uint8_t a2) {$/;"	f
func229	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func229(uint8_t a1, uint8_t a2) {$/;"	f
func23	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func23(uint8_t a1, uint8_t a2) {$/;"	f
func230	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func230(uint8_t a1, uint8_t a2) {$/;"	f
func231	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func231(uint8_t a1, uint8_t a2) {$/;"	f
func232	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func232(uint8_t a1, uint8_t a2) {$/;"	f
func233	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func233(uint8_t a1, uint8_t a2) {$/;"	f
func234	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func234(uint8_t a1, uint8_t a2) {$/;"	f
func235	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func235(uint8_t a1, uint8_t a2) {$/;"	f
func236	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func236(uint8_t a1, uint8_t a2) {$/;"	f
func237	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func237(uint8_t a1, uint8_t a2) {$/;"	f
func238	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func238(uint8_t a1, uint8_t a2) {$/;"	f
func239	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func239(uint8_t a1, uint8_t a2) {$/;"	f
func24	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func24(uint8_t a1) {$/;"	f
func240	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func240(uint8_t a1, uint8_t a2) {$/;"	f
func241	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func241(uint8_t a1, uint8_t a2) {$/;"	f
func242	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func242(uint8_t a1, uint8_t a2) {$/;"	f
func243	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func243(uint8_t a1, uint8_t a2) {$/;"	f
func244	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func244(uint8_t a1) {$/;"	f
func245	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func245(uint8_t a1, uint8_t a2) {$/;"	f
func246	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func246(uint8_t a1, uint8_t a2) {$/;"	f
func247	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func247(uint8_t a1, uint8_t a2) {$/;"	f
func248	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func248(uint8_t a1, uint8_t a2) {$/;"	f
func249	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func249(uint8_t a1) {$/;"	f
func25	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func25(uint8_t a1) {$/;"	f
func250	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func250(uint8_t a1, uint8_t a2) {$/;"	f
func251	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func251(uint8_t a1, uint8_t a2) {$/;"	f
func252	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func252(uint8_t a1, uint8_t a2) {$/;"	f
func253	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func253(uint8_t a1, uint8_t a2) {$/;"	f
func254	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func254(uint8_t a1, uint8_t a2, uint8_t a3) {$/;"	f
func255	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func255(uint8_t a1, uint8_t a2) {$/;"	f
func256	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func256(uint8_t a1) {$/;"	f
func257	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func257(uint8_t a1, uint8_t a2) {$/;"	f
func258	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func258(uint8_t a1, uint8_t a2) {$/;"	f
func259	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func259(uint8_t a1, uint8_t a2) {$/;"	f
func26	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func26(uint8_t a1, uint8_t a2) {$/;"	f
func260	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func260(uint8_t a1, uint8_t a2) {$/;"	f
func261	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func261(uint8_t a1) {$/;"	f
func262	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func262(uint8_t a1) {$/;"	f
func263	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func263(uint8_t a1, uint8_t a2) {$/;"	f
func264	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func264(uint8_t a1, uint8_t a2) {$/;"	f
func265	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func265(uint8_t a1, uint8_t a2) {$/;"	f
func266	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func266(uint8_t a1, uint8_t a2) {$/;"	f
func267	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func267(uint8_t a1, uint8_t a2) {$/;"	f
func268	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func268(uint8_t a1, uint8_t a2) {$/;"	f
func269	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func269(uint8_t a1, uint8_t a2) {$/;"	f
func27	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func27(uint8_t a1) {$/;"	f
func270	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func270(uint8_t a1, uint8_t a2) {$/;"	f
func271	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func271(uint8_t a1, uint8_t a2) {$/;"	f
func272	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func272(uint8_t a1) {$/;"	f
func273	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func273(uint8_t a1, uint8_t a2) {$/;"	f
func274	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func274(uint8_t a1) {$/;"	f
func275	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func275(uint8_t a1, uint8_t a2) {$/;"	f
func276	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func276(uint8_t a1) {$/;"	f
func277	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func277(uint8_t a1) {$/;"	f
func278	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func278(uint8_t a1) {$/;"	f
func279	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func279(uint8_t a1, uint8_t a2) {$/;"	f
func28	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func28(uint8_t a1) {$/;"	f
func280	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func280(uint8_t a1) {$/;"	f
func281	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func281(uint8_t a1, uint8_t a2) {$/;"	f
func282	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func282(uint8_t a1, uint8_t a2) {$/;"	f
func283	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func283(uint8_t a1) {$/;"	f
func284	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func284(uint8_t a1) {$/;"	f
func285	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func285(uint8_t a1) {$/;"	f
func286	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func286(uint8_t a1) {$/;"	f
func287	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func287(uint8_t a1, uint8_t a2) {$/;"	f
func288	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func288(uint8_t a1, uint8_t a2) {$/;"	f
func289	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func289(uint8_t a1, uint8_t a2) {$/;"	f
func29	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func29(uint8_t a1) {$/;"	f
func290	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func290(uint8_t a1) {$/;"	f
func291	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func291(uint8_t a1, uint8_t a2) {$/;"	f
func292	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func292(uint8_t a1) {$/;"	f
func293	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func293(uint8_t a1) {$/;"	f
func294	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func294(uint8_t a1) {$/;"	f
func295	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func295(uint8_t a1, uint8_t a2) {$/;"	f
func296	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func296(uint8_t a1, uint8_t a2) {$/;"	f
func297	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func297(uint8_t a1, uint8_t a2) {$/;"	f
func298	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func298(uint8_t a1) {$/;"	f
func299	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func299(uint8_t a1, uint8_t a2) {$/;"	f
func3	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func3(uint8_t a1, uint8_t a2) {$/;"	f
func3	test/profile/Inputs/instrprof-dlopen-func3.c	/^void func3(int K) {}$/;"	f
func30	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func30(uint8_t a1) {$/;"	f
func300	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func300(uint8_t a1, uint8_t a2) {$/;"	f
func301	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func301(uint8_t a1) {$/;"	f
func302	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func302(uint8_t a1) {$/;"	f
func303	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func303(uint8_t a1) {$/;"	f
func304	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func304(uint8_t a1, uint8_t a2) {$/;"	f
func305	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func305(uint8_t a1, uint8_t a2) {$/;"	f
func306	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func306(uint8_t a1, uint8_t a2) {$/;"	f
func307	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func307(uint8_t a1) {$/;"	f
func308	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func308(uint8_t a1) {$/;"	f
func309	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func309(uint8_t a1, uint8_t a2) {$/;"	f
func31	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func31(uint8_t a1, uint8_t a2) {$/;"	f
func310	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func310(uint8_t a1, uint8_t a2) {$/;"	f
func311	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func311(uint8_t a1, uint8_t a2) {$/;"	f
func312	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func312(uint8_t a1) {$/;"	f
func313	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func313(uint8_t a1) {$/;"	f
func314	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func314(uint8_t a1) {$/;"	f
func315	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func315(uint8_t a1) {$/;"	f
func316	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func316(uint8_t a1, uint8_t a2) {$/;"	f
func317	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func317(uint8_t a1, uint8_t a2) {$/;"	f
func318	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func318(uint8_t a1) {$/;"	f
func319	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func319(uint8_t a1, uint8_t a2) {$/;"	f
func32	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func32(uint8_t a1, uint8_t a2) {$/;"	f
func320	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func320(uint8_t a1) {$/;"	f
func321	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func321(uint8_t a1) {$/;"	f
func322	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func322(uint8_t a1) {$/;"	f
func323	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func323(uint8_t a1) {$/;"	f
func324	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func324(uint8_t a1, uint8_t a2) {$/;"	f
func325	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func325(uint8_t a1, uint8_t a2) {$/;"	f
func326	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func326(uint8_t a1) {$/;"	f
func327	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func327(uint8_t a1, uint8_t a2) {$/;"	f
func328	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func328(uint8_t a1) {$/;"	f
func329	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func329(uint8_t a1) {$/;"	f
func33	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func33(uint8_t a1) {$/;"	f
func330	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func330(uint8_t a1, uint8_t a2) {$/;"	f
func331	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func331(uint8_t a1, uint8_t a2) {$/;"	f
func332	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func332(uint8_t a1, uint8_t a2) {$/;"	f
func333	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func333(uint8_t a1) {$/;"	f
func334	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func334(uint8_t a1, uint8_t a2) {$/;"	f
func335	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func335(uint8_t a1) {$/;"	f
func336	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func336(uint8_t a1, uint8_t a2) {$/;"	f
func337	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func337(uint8_t a1) {$/;"	f
func338	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func338(uint8_t a1) {$/;"	f
func339	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func339(uint8_t a1) {$/;"	f
func34	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func34(uint8_t a1, uint8_t a2) {$/;"	f
func340	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func340(uint8_t a1) {$/;"	f
func341	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func341(uint8_t a1) {$/;"	f
func342	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func342(uint8_t a1, uint8_t a2) {$/;"	f
func343	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func343(uint8_t a1, uint8_t a2) {$/;"	f
func344	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func344(uint8_t a1, uint8_t a2) {$/;"	f
func345	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func345(uint8_t a1) {$/;"	f
func346	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func346(uint8_t a1, uint8_t a2) {$/;"	f
func347	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func347(uint8_t a1) {$/;"	f
func348	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func348(uint8_t a1, uint8_t a2) {$/;"	f
func349	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func349(uint8_t a1) {$/;"	f
func35	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func35(uint8_t a1) {$/;"	f
func350	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func350(uint8_t a1) {$/;"	f
func351	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func351(uint8_t a1, uint8_t a2) {$/;"	f
func352	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func352(uint8_t a1) {$/;"	f
func353	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func353(uint8_t a1) {$/;"	f
func354	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func354(uint8_t a1) {$/;"	f
func355	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func355(uint8_t a1, uint8_t a2) {$/;"	f
func356	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func356(uint8_t a1, uint8_t a2) {$/;"	f
func357	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func357(uint8_t a1, uint8_t a2) {$/;"	f
func358	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func358(uint8_t a1) {$/;"	f
func359	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func359(uint8_t a1, uint8_t a2) {$/;"	f
func36	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func36(uint8_t a1, uint8_t a2) {$/;"	f
func360	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func360(uint8_t a1) {$/;"	f
func361	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func361(uint8_t a1, uint8_t a2) {$/;"	f
func362	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func362(uint8_t a1) {$/;"	f
func363	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func363(uint8_t a1) {$/;"	f
func364	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func364(uint8_t a1, uint8_t a2) {$/;"	f
func365	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func365(uint8_t a1) {$/;"	f
func366	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func366(uint8_t a1) {$/;"	f
func367	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func367(uint8_t a1) {$/;"	f
func368	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func368(uint8_t a1) {$/;"	f
func369	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func369(uint8_t a1) {$/;"	f
func37	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func37(uint8_t a1) {$/;"	f
func370	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func370(uint8_t a1, uint8_t a2) {$/;"	f
func371	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func371(uint8_t a1, uint8_t a2) {$/;"	f
func372	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func372(uint8_t a1) {$/;"	f
func373	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func373(uint8_t a1) {$/;"	f
func374	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func374(uint8_t a1) {$/;"	f
func375	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func375(uint8_t a1, uint8_t a2) {$/;"	f
func376	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func376(uint8_t a1, uint8_t a2) {$/;"	f
func377	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func377(uint8_t a1) {$/;"	f
func378	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func378(uint8_t a1, uint8_t a2) {$/;"	f
func379	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func379(uint8_t a1, uint8_t a2) {$/;"	f
func38	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func38(uint8_t a1, uint8_t a2) {$/;"	f
func380	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func380(uint8_t a1, uint8_t a2) {$/;"	f
func381	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func381(uint8_t a1, uint8_t a2) {$/;"	f
func382	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func382(uint8_t a1) {$/;"	f
func383	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func383(uint8_t a1, uint8_t a2) {$/;"	f
func384	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func384(uint8_t a1, uint8_t a2) {$/;"	f
func385	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func385(uint8_t a1, uint8_t a2) {$/;"	f
func386	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func386(uint8_t a1, uint8_t a2) {$/;"	f
func387	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func387(uint8_t a1) {$/;"	f
func388	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func388(uint8_t a1, uint8_t a2) {$/;"	f
func389	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func389(uint8_t a1, uint8_t a2) {$/;"	f
func39	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func39(uint8_t a1, uint8_t a2) {$/;"	f
func390	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func390(uint8_t a1, uint8_t a2) {$/;"	f
func391	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func391(uint8_t a1) {$/;"	f
func392	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func392(uint8_t a1, uint8_t a2) {$/;"	f
func393	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func393(uint8_t a1, uint8_t a2) {$/;"	f
func394	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func394(uint8_t a1) {$/;"	f
func395	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func395(uint8_t a1, uint8_t a2) {$/;"	f
func396	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func396(uint8_t a1, uint8_t a2) {$/;"	f
func397	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func397(uint8_t a1, uint8_t a2) {$/;"	f
func398	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func398(uint8_t a1) {$/;"	f
func399	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func399(uint8_t a1, uint8_t a2) {$/;"	f
func4	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func4(uint8_t a1, uint8_t a2, uint8_t a3) {$/;"	f
func40	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func40(uint8_t a1, uint8_t a2) {$/;"	f
func400	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func400(uint8_t a1, uint8_t a2) {$/;"	f
func401	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func401(uint8_t a1, uint8_t a2) {$/;"	f
func402	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func402(uint8_t a1) {$/;"	f
func403	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func403(uint8_t a1, uint8_t a2) {$/;"	f
func404	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func404(uint8_t a1) {$/;"	f
func405	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func405(uint8_t a1) {$/;"	f
func406	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func406(uint8_t a1, uint8_t a2) {$/;"	f
func407	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func407(uint8_t a1) {$/;"	f
func408	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func408(uint8_t a1, uint8_t a2) {$/;"	f
func409	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func409(uint8_t a1) {$/;"	f
func41	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func41(uint8_t a1, uint8_t a2) {$/;"	f
func410	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func410(uint8_t a1) {$/;"	f
func42	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func42(uint8_t a1, uint8_t a2, uint8_t a3) {$/;"	f
func43	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func43(uint8_t a1) {$/;"	f
func44	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func44(uint8_t a1) {$/;"	f
func45	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func45(uint8_t a1) {$/;"	f
func46	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func46(uint8_t a1, uint8_t a2) {$/;"	f
func47	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func47(uint8_t a1, uint8_t a2) {$/;"	f
func48	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func48(uint8_t a1, uint8_t a2) {$/;"	f
func49	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func49(uint8_t a1, uint8_t a2) {$/;"	f
func5	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func5(uint8_t a1, uint8_t a2) {$/;"	f
func50	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func50(uint8_t a1, uint8_t a2) {$/;"	f
func51	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func51(uint8_t a1, uint8_t a2) {$/;"	f
func52	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func52(uint8_t a1, uint8_t a2) {$/;"	f
func53	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func53(uint8_t a1, uint8_t a2) {$/;"	f
func54	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func54(uint8_t a1, uint8_t a2) {$/;"	f
func55	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func55(uint8_t a1, uint8_t a2) {$/;"	f
func56	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func56(uint8_t a1, uint8_t a2) {$/;"	f
func57	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func57(uint8_t a1, uint8_t a2) {$/;"	f
func58	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func58(uint8_t a1, uint8_t a2) {$/;"	f
func59	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func59(uint8_t a1, uint8_t a2) {$/;"	f
func6	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func6(uint8_t a1, uint8_t a2) {$/;"	f
func60	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func60(uint8_t a1, uint8_t a2) {$/;"	f
func61	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func61(uint8_t a1, uint8_t a2) {$/;"	f
func62	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func62(uint8_t a1, uint8_t a2) {$/;"	f
func63	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func63(uint8_t a1, uint8_t a2) {$/;"	f
func64	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func64(uint8_t a1, uint8_t a2) {$/;"	f
func65	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func65(uint8_t a1, uint8_t a2) {$/;"	f
func66	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func66(uint8_t a1, uint8_t a2) {$/;"	f
func67	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func67(uint8_t a1, uint8_t a2) {$/;"	f
func68	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func68(uint8_t a1, uint8_t a2) {$/;"	f
func69	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func69(uint8_t a1, uint8_t a2) {$/;"	f
func7	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func7(uint8_t a1, uint8_t a2) {$/;"	f
func70	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func70(uint8_t a1) {$/;"	f
func71	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func71(uint8_t a1, uint8_t a2) {$/;"	f
func72	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func72(uint8_t a1, uint8_t a2) {$/;"	f
func73	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func73(uint8_t a1, uint8_t a2) {$/;"	f
func74	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func74(uint8_t a1, uint8_t a2) {$/;"	f
func75	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func75(uint8_t a1, uint8_t a2, uint8_t a3) {$/;"	f
func76	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func76(uint8_t a1, uint8_t a2) {$/;"	f
func77	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func77(uint8_t a1, uint8_t a2) {$/;"	f
func78	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func78(uint8_t a1, uint8_t a2) {$/;"	f
func79	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func79(uint8_t a1) {$/;"	f
func8	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func8(uint8_t a1, uint8_t a2) {$/;"	f
func80	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func80(uint8_t a1, uint8_t a2, uint8_t a3) {$/;"	f
func81	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func81(uint8_t a1, uint8_t a2) {$/;"	f
func82	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func82(uint8_t a1, uint8_t a2) {$/;"	f
func83	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func83(uint8_t a1, uint8_t a2) {$/;"	f
func84	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func84(uint8_t a1, uint8_t a2) {$/;"	f
func85	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func85(uint8_t a1) {$/;"	f
func86	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func86(uint8_t a1, uint8_t a2) {$/;"	f
func87	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func87(uint8_t a1, uint8_t a2) {$/;"	f
func88	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func88(uint8_t a1, uint8_t a2) {$/;"	f
func89	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func89(uint8_t a1, uint8_t a2) {$/;"	f
func9	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func9(uint8_t a1, uint8_t a2) {$/;"	f
func90	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func90(uint8_t a1, uint8_t a2) {$/;"	f
func91	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func91(uint8_t a1, uint8_t a2) {$/;"	f
func92	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func92(uint8_t a1, uint8_t a2) {$/;"	f
func93	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func93(uint8_t a1, uint8_t a2) {$/;"	f
func94	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func94(uint8_t a1) {$/;"	f
func95	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func95(uint8_t a1, uint8_t a2) {$/;"	f
func96	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func96(uint8_t a1, uint8_t a2) {$/;"	f
func97	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func97(uint8_t a1, uint8_t a2) {$/;"	f
func98	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func98(uint8_t a1, uint8_t a2) {$/;"	f
func99	test/fuzzer/MultipleConstraintsOnSmallInputTest.cpp	/^int func99(uint8_t a1, uint8_t a2) {$/;"	f
func_add	lib/tsan/rtl/tsan_interface_atomic.cc	/^a128 func_add(volatile a128 *v, a128 op) {$/;"	f
func_add	lib/tsan/rtl/tsan_interface_atomic.cc	/^template<typename T> T func_add(volatile T *v, T op) {$/;"	f
func_and	lib/tsan/rtl/tsan_interface_atomic.cc	/^a128 func_and(volatile a128 *v, a128 op) {$/;"	f
func_and	lib/tsan/rtl/tsan_interface_atomic.cc	/^template<typename T> T func_and(volatile T *v, T op) {$/;"	f
func_cas	lib/tsan/rtl/tsan_interface_atomic.cc	/^a128 func_cas(volatile a128 *v, a128 cmp, a128 xch) {$/;"	f
func_cas	lib/tsan/rtl/tsan_interface_atomic.cc	/^template<typename T> T func_cas(volatile T *v, T cmp, T xch) {$/;"	f
func_nand	lib/tsan/rtl/tsan_interface_atomic.cc	/^a128 func_nand(volatile a128 *v, a128 op) {$/;"	f
func_nand	lib/tsan/rtl/tsan_interface_atomic.cc	/^template<typename T> T func_nand(volatile T *v, T op) {$/;"	f
func_or	lib/tsan/rtl/tsan_interface_atomic.cc	/^a128 func_or(volatile a128 *v, a128 op) {$/;"	f
func_or	lib/tsan/rtl/tsan_interface_atomic.cc	/^template<typename T> T func_or(volatile T *v, T op) {$/;"	f
func_sub	lib/tsan/rtl/tsan_interface_atomic.cc	/^a128 func_sub(volatile a128 *v, a128 op) {$/;"	f
func_sub	lib/tsan/rtl/tsan_interface_atomic.cc	/^template<typename T> T func_sub(volatile T *v, T op) {$/;"	f
func_xchg	lib/tsan/rtl/tsan_interface_atomic.cc	/^a128 func_xchg(volatile a128 *v, a128 op) {$/;"	f
func_xchg	lib/tsan/rtl/tsan_interface_atomic.cc	/^template<typename T> T func_xchg(volatile T *v, T op) {$/;"	f
func_xor	lib/tsan/rtl/tsan_interface_atomic.cc	/^a128 func_xor(volatile a128 *v, a128 op) {$/;"	f
func_xor	lib/tsan/rtl/tsan_interface_atomic.cc	/^template<typename T> T func_xor(volatile T *v, T op) {$/;"	f
funcptr	test/BlocksRuntime/returnfunctionptr.c	/^int (*funcptr)(long);$/;"	v
function	lib/asan/asan_errors.h	/^  const char *function;$/;"	m	struct:__asan::ErrorStringFunctionMemoryRangesOverlap
function	lib/sanitizer_common/sanitizer_symbolizer.h	/^  char *function;$/;"	m	struct:__sanitizer::AddressInfo
function_ids	test/xray/TestCases/Posix/coverage-sample.cc	/^std::set<int32_t> function_ids;$/;"	v
function_offset	lib/sanitizer_common/sanitizer_symbolizer.h	/^  uptr function_offset;$/;"	m	struct:__sanitizer::AddressInfo
functions	lib/dfsan/scripts/build-libc-list.py	/^functions = []$/;"	v
functions	lib/dfsan/scripts/build-libc-list.py	/^functions = list(set(functions))$/;"	v
fuzzer	lib/fuzzer/FuzzerCommand.h	/^namespace fuzzer {$/;"	n
fuzzer	lib/fuzzer/FuzzerCorpus.h	/^namespace fuzzer {$/;"	n
fuzzer	lib/fuzzer/FuzzerCrossOver.cpp	/^namespace fuzzer {$/;"	n	file:
fuzzer	lib/fuzzer/FuzzerDataFlowTrace.cpp	/^namespace fuzzer {$/;"	n	file:
fuzzer	lib/fuzzer/FuzzerDataFlowTrace.h	/^namespace fuzzer {$/;"	n
fuzzer	lib/fuzzer/FuzzerDefs.h	/^namespace fuzzer {$/;"	n
fuzzer	lib/fuzzer/FuzzerDictionary.h	/^namespace fuzzer {$/;"	n
fuzzer	lib/fuzzer/FuzzerDriver.cpp	/^namespace fuzzer {$/;"	n	file:
fuzzer	lib/fuzzer/FuzzerExtFunctions.h	/^namespace fuzzer {$/;"	n
fuzzer	lib/fuzzer/FuzzerExtFunctionsDlsym.cpp	/^namespace fuzzer {$/;"	n	file:
fuzzer	lib/fuzzer/FuzzerExtFunctionsDlsymWin.cpp	/^namespace fuzzer {$/;"	n	file:
fuzzer	lib/fuzzer/FuzzerExtFunctionsWeak.cpp	/^namespace fuzzer {$/;"	n	file:
fuzzer	lib/fuzzer/FuzzerExtFunctionsWeakAlias.cpp	/^namespace fuzzer {$/;"	n	file:
fuzzer	lib/fuzzer/FuzzerExtraCounters.cpp	/^namespace fuzzer {$/;"	n	file:
fuzzer	lib/fuzzer/FuzzerIO.cpp	/^namespace fuzzer {$/;"	n	file:
fuzzer	lib/fuzzer/FuzzerIO.h	/^namespace fuzzer {$/;"	n
fuzzer	lib/fuzzer/FuzzerIOPosix.cpp	/^namespace fuzzer {$/;"	n	file:
fuzzer	lib/fuzzer/FuzzerIOWindows.cpp	/^namespace fuzzer {$/;"	n	file:
fuzzer	lib/fuzzer/FuzzerInternal.h	/^namespace fuzzer {$/;"	n
fuzzer	lib/fuzzer/FuzzerLoop.cpp	/^namespace fuzzer {$/;"	n	file:
fuzzer	lib/fuzzer/FuzzerMerge.cpp	/^namespace fuzzer {$/;"	n	file:
fuzzer	lib/fuzzer/FuzzerMerge.h	/^namespace fuzzer {$/;"	n
fuzzer	lib/fuzzer/FuzzerMutate.cpp	/^namespace fuzzer {$/;"	n	file:
fuzzer	lib/fuzzer/FuzzerMutate.h	/^namespace fuzzer {$/;"	n
fuzzer	lib/fuzzer/FuzzerOptions.h	/^namespace fuzzer {$/;"	n
fuzzer	lib/fuzzer/FuzzerRandom.h	/^namespace fuzzer {$/;"	n
fuzzer	lib/fuzzer/FuzzerSHA1.cpp	/^namespace fuzzer {$/;"	n	file:
fuzzer	lib/fuzzer/FuzzerSHA1.h	/^namespace fuzzer {$/;"	n
fuzzer	lib/fuzzer/FuzzerShmem.h	/^namespace fuzzer {$/;"	n
fuzzer	lib/fuzzer/FuzzerShmemFuchsia.cpp	/^namespace fuzzer {$/;"	n	file:
fuzzer	lib/fuzzer/FuzzerShmemPosix.cpp	/^namespace fuzzer {$/;"	n	file:
fuzzer	lib/fuzzer/FuzzerShmemWindows.cpp	/^namespace fuzzer {$/;"	n	file:
fuzzer	lib/fuzzer/FuzzerTracePC.cpp	/^namespace fuzzer {$/;"	n	file:
fuzzer	lib/fuzzer/FuzzerTracePC.h	/^namespace fuzzer {$/;"	n
fuzzer	lib/fuzzer/FuzzerUtil.cpp	/^namespace fuzzer {$/;"	n	file:
fuzzer	lib/fuzzer/FuzzerUtil.h	/^namespace fuzzer {$/;"	n
fuzzer	lib/fuzzer/FuzzerUtilDarwin.cpp	/^namespace fuzzer {$/;"	n	file:
fuzzer	lib/fuzzer/FuzzerUtilFuchsia.cpp	/^namespace fuzzer {$/;"	n	file:
fuzzer	lib/fuzzer/FuzzerUtilLinux.cpp	/^namespace fuzzer {$/;"	n	file:
fuzzer	lib/fuzzer/FuzzerUtilPosix.cpp	/^namespace fuzzer {$/;"	n	file:
fuzzer	lib/fuzzer/FuzzerUtilWindows.cpp	/^namespace fuzzer {$/;"	n	file:
fuzzer	lib/fuzzer/FuzzerValueBitMap.h	/^namespace fuzzer {$/;"	n
fuzzer_allocator	lib/fuzzer/FuzzerDefs.h	/^      fuzzer_allocator(const fuzzer_allocator<U>&) {}$/;"	f	class:fuzzer::fuzzer_allocator
fuzzer_allocator	lib/fuzzer/FuzzerDefs.h	/^  class fuzzer_allocator: public std::allocator<T> {$/;"	c	namespace:fuzzer
g	lib/asan/asan_globals.cc	/^  Global g;$/;"	m	struct:__asan::DynInitGlobal	file:
g	lib/asan/asan_globals.cc	/^  const Global *g;$/;"	m	struct:__asan::ListOfGlobals	file:
g	test/asan/TestCases/Linux/quarantine_size_mb.cc	/^char *g;$/;"	v
g	test/asan/TestCases/Linux/uar_signals.cc	/^int *g;$/;"	v
g	test/asan/TestCases/coverage-and-lsan.cc	/^int *g = new int;$/;"	v
g	test/asan/TestCases/poison_partial.cc	/^char g[21];$/;"	v
g	test/asan/TestCases/uar_and_exceptions.cc	/^volatile char *g;$/;"	v
g	test/cfi/cross-dso/icall/icall-from-dso.cpp	/^void g() {$/;"	f
g	test/cfi/multiple-inheritance.cpp	/^void C::g() {}$/;"	f	class:C
g	test/cfi/nvcall.cpp	/^void B::g() {}$/;"	f	class:B
g	test/cfi/simple-pass.cpp	/^  void g() {}$/;"	f	struct:B
g	test/cfi/simple-pass.cpp	/^  void g() {}$/;"	f	struct:B2
g	test/cfi/simple-pass.cpp	/^  void g() {}$/;"	f	struct:E
g	test/cfi/simple-pass.cpp	/^  void g() {}$/;"	f	struct:E2
g	test/cfi/simple-pass.cpp	/^  void g() {}$/;"	f	struct:__anon140::D
g	test/cfi/simple-pass.cpp	/^  void g() {}$/;"	f	struct:__anon140::D2
g	test/cfi/simple-pass.cpp	/^void A2::g() {}$/;"	f	class:A2
g	test/cfi/simple-pass.cpp	/^void A::g() {}$/;"	f	class:A
g	test/cfi/simple-pass.cpp	/^void C2::g() {}$/;"	f	class:__anon140::C2
g	test/cfi/simple-pass.cpp	/^void C::g() {}$/;"	f	class:__anon140::C
g	test/cfi/utils.h	/^  virtual void g() {}$/;"	f	struct:Deriver
g	test/cfi/utils.h	/^  void g() {}$/;"	f	struct:Deriver
g	test/profile/Inputs/instrprof-comdat-1.cpp	/^int g;$/;"	v
g	test/profile/Inputs/instrprof-merge-match.c	/^int g = 0;$/;"	v
g	test/profile/Linux/counter_promo_for.c	/^int g;$/;"	v
g	test/profile/Linux/counter_promo_nest.c	/^int g;$/;"	v
g	test/profile/Linux/counter_promo_while.c	/^int g;$/;"	v
g	test/profile/Linux/coverage_dtor.cpp	/^int g = 100;$/;"	v
g	test/profile/infinite_loop.c	/^int g;$/;"	v
g	test/profile/instrprof-merge.c	/^int g = 0;$/;"	v
g	test/profile/runtime_infinite.c	/^int g = 0;$/;"	v
g	test/tsan/ignore_malloc.cc	/^int *g;$/;"	v
g	test/tsan/race_on_speculative_load.cc	/^int g;$/;"	v
g	test/ubsan/TestCases/TypeCheck/Function/function.cpp	/^void g(int x) {}$/;"	f
g	test/ubsan/TestCases/TypeCheck/vptr.cpp	/^  int g() { return 0; }$/;"	f	struct:T
g	test/ubsan_minimal/TestCases/recover-dedup.cpp	/^int g(int x, int y) {$/;"	f
g1	test/asan/TestCases/scariness_score_test.cc	/^char    g1[100];$/;"	v
g1	test/cfi/mfcall.cpp	/^  virtual void g1() {}$/;"	f	struct:S
g1	test/cfi/mfcall.cpp	/^  virtual void g1() {}$/;"	f	struct:T
g1	test/profile/Inputs/instrprof-shared-lib.c	/^int g1 = 0;$/;"	v
g1	test/profile/Linux/instrprof-cs.c	/^int g1 = 1;$/;"	v
g2	test/asan/TestCases/scariness_score_test.cc	/^short   g2[100];$/;"	v
g2	test/cfi/mfcall.cpp	/^  virtual int g2() { return 1; }$/;"	f	struct:S
g2	test/cfi/mfcall.cpp	/^  virtual int g2() { return 2; }$/;"	f	struct:T
g2	test/profile/Inputs/instrprof-shared-lib.c	/^int g2 = 1;$/;"	v
g2	test/profile/Linux/instrprof-cs.c	/^int volatile g2 = 2;$/;"	v
g3	test/cfi/mfcall.cpp	/^  virtual int g3() { return 1; }$/;"	f	struct:S
g3	test/cfi/mfcall.cpp	/^  virtual void g3() {}$/;"	f	struct:T
g4	test/asan/TestCases/scariness_score_test.cc	/^int     g4[100];$/;"	v
g8	test/asan/TestCases/scariness_score_test.cc	/^int64_t g8[100];$/;"	v
g_	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  BVGraph<BV> g_;$/;"	m	class:__sanitizer::DeadlockDetector
g_0	lib/msan/tests/msan_test.cc	/^static volatile int g_0 = 0;$/;"	v	file:
g_1	lib/msan/tests/msan_test.cc	/^static volatile int g_1 = 1;$/;"	v	file:
g_busy_thread_garbage_collected	test/tsan/signal_recursive.cc	/^static volatile bool g_busy_thread_garbage_collected;$/;"	v	file:
g_busy_thread_received_restart	test/tsan/signal_recursive.cc	/^static bool g_busy_thread_received_restart;$/;"	v	file:
g_cache	test/tsan/static_init3.cc	/^Cache g_cache;$/;"	v
g_data	test/tsan/race_with_finished_thread.cc	/^int g_data;$/;"	v
g_data_end	lib/tsan/dd/dd_interceptors.cc	/^static uptr g_data_end;$/;"	v	file:
g_data_start	lib/tsan/dd/dd_interceptors.cc	/^static uptr g_data_start;$/;"	v	file:
g_fd	test/msan/Linux/xattr.cc	/^int g_fd;$/;"	v
g_first	lib/asan/asan_globals.cc	/^  Global *g_first, *g_last;$/;"	m	struct:__asan::GlobalRegistrationSite	file:
g_i	test/asan/TestCases/global-address.cpp	/^int g_i = 42;$/;"	v
g_is_child	test/asan/TestCases/Windows/dll_control_c.cc	/^bool g_is_child = false;$/;"	v
g_last	lib/asan/asan_globals.cc	/^  Global *g_first, *g_last;$/;"	m	struct:__asan::GlobalRegistrationSite	file:
g_one	lib/msan/tests/msan_test.cc	/^static volatile int g_one = 1;$/;"	v	file:
g_other	test/tsan/static_init4.cc	/^int g_other;$/;"	v
g_path	test/msan/Linux/xattr.cc	/^char g_path[1024];$/;"	v
g_thread_finalize_key	lib/lsan/lsan_interceptors.cc	/^static unsigned g_thread_finalize_key;$/;"	m	namespace:std	file:
g_thread_run	test/tsan/signal_cond.cc	/^int g_thread_run = 1;$/;"	v
g_thread_suspend_ack_sem	test/tsan/signal_recursive.cc	/^static sem_t g_thread_suspend_ack_sem;$/;"	v	file:
g_tls_size	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^static uptr g_tls_size;$/;"	m	namespace:__sanitizer	file:
g_total_mmaped	lib/sanitizer_common/sanitizer_common.cc	/^static atomic_uintptr_t g_total_mmaped;$/;"	m	namespace:__sanitizer	file:
g_zero	lib/msan/tests/msan_test.cc	/^static volatile int g_zero = 0;$/;"	v	file:
gcc_abi	test/asan/TestCases/Linux/clang_gcc_abi.cc	/^__attribute__((naked, noinline)) void gcc_abi() {$/;"	f
gcc_pointer	lib/builtins/emutls.c	/^typedef unsigned int gcc_pointer __attribute__((mode(pointer)));$/;"	t	file:
gcc_pointer	lib/builtins/emutls.c	/^typedef void * gcc_pointer;$/;"	t	file:
gcc_word	lib/builtins/emutls.c	/^typedef uintptr_t gcc_word;$/;"	t	file:
gcc_word	lib/builtins/emutls.c	/^typedef unsigned int gcc_word __attribute__((mode(word)));$/;"	t	file:
gcd	lib/xray/xray_utils.h	/^constexpr size_t gcd(size_t a, size_t b) {$/;"	f	namespace:__xray
geReference	test/builtins/Unit/comparedf2_test.c	/^    int geReference;$/;"	m	struct:TestVector	file:
geReference	test/builtins/Unit/comparesf2_test.c	/^    int geReference;$/;"	m	struct:TestVector	file:
generate_zygote_wrapper	lib/asan/scripts/asan_device_setup	/^function generate_zygote_wrapper { # from, to$/;"	f
generator	test/BlocksRuntime/testfilerunner.h	/^@property(assign) TestFileExeGenerator *generator;$/;"	v
get	lib/msan/msan_report.cc	/^  u32 get(int id) { return origins_[id]; }$/;"	f	class:__msan::OriginSet
get	lib/sanitizer_common/sanitizer_symbolizer_libbacktrace.cc	/^LibbacktraceSymbolizer *LibbacktraceSymbolizer::get(LowLevelAllocator *alloc) {$/;"	f	class:__sanitizer::LibbacktraceSymbolizer
get	lib/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc	/^  static InternalSymbolizer *get(LowLevelAllocator *alloc) { return 0; }$/;"	f	class:__sanitizer::InternalSymbolizer
get	lib/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc	/^  static InternalSymbolizer *get(LowLevelAllocator *alloc) {$/;"	f	class:__sanitizer::InternalSymbolizer
get	lib/sanitizer_common/sanitizer_symbolizer_win.cc	/^  HANDLE get() { return h_; }$/;"	f	struct:__sanitizer::__anon78::ScopedHandle
get	lib/tsan/rtl/tsan_clock.cc	/^u64 SyncClock::get(unsigned tid) const {$/;"	f	class:__tsan::SyncClock
get	lib/ubsan/ubsan_diag.h	/^  const SymbolizedStack *get() const { return Stack; }$/;"	f	class:__ubsan::SymbolizedStackHolder
get	test/asan/TestCases/Linux/preinit_test.cc	/^A get () { return A(); }$/;"	f
get	test/asan/TestCases/use-after-scope-dtor-order.cc	/^  int *get() { return val_; }$/;"	f	struct:IntHolder
getAB	test/asan/TestCases/initialization-nobug.cc	/^int getAB() {$/;"	f
getAMDProcessorTypeAndSubtype	lib/builtins/cpu_model.c	/^static void getAMDProcessorTypeAndSubtype(unsigned Family, unsigned Model,$/;"	f	file:
getAndClearFirstOne	lib/sanitizer_common/sanitizer_bitvector.h	/^  uptr getAndClearFirstOne() {$/;"	f	class:__sanitizer::BasicBitVector
getAndClearFirstOne	lib/sanitizer_common/sanitizer_bitvector.h	/^  uptr getAndClearFirstOne() {$/;"	f	class:__sanitizer::TwoLevelBitVector
getAppRegion	lib/esan/esan_shadow.h	/^static inline bool getAppRegion(u32 i, uptr *Start, uptr *End) {$/;"	f	namespace:__esan
getArguments	lib/fuzzer/FuzzerCommand.h	/^  const Vector<std::string> &getArguments() const { return Args; }$/;"	f	class:fuzzer::final
getAtomicHeader	lib/scudo/scudo_allocator.cpp	/^  static INLINE AtomicPackedHeader *getAtomicHeader(void *Ptr) {$/;"	f	namespace:__scudo::Chunk
getAvailableFeatures	lib/builtins/cpu_model.c	/^static void getAvailableFeatures(unsigned ECX, unsigned EDX, unsigned MaxLeaf,$/;"	f	file:
getAvailableNode	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  uptr getAvailableNode(uptr data) {$/;"	f	class:__sanitizer::DeadlockDetector
getBackend	lib/scudo/scudo_allocator.cpp	/^static BackendT &getBackend() {$/;"	f	namespace:__scudo
getBackendPtr	lib/scudo/scudo_allocator.cpp	/^  static INLINE void *getBackendPtr(const void *Ptr, UnpackedHeader *Header) {$/;"	f	namespace:__scudo::Chunk
getBit	lib/sanitizer_common/sanitizer_bitvector.h	/^  bool getBit(uptr idx) const { return (bits_ & mask(idx)) != 0; }$/;"	f	class:__sanitizer::BasicBitVector
getBit	lib/sanitizer_common/sanitizer_bitvector.h	/^  bool getBit(uptr idx) const {$/;"	f	class:__sanitizer::TwoLevelBitVector
getBuffer	lib/xray/xray_buffer_queue.cc	/^BufferQueue::ErrorCode BufferQueue::getBuffer(Buffer &Buf) {$/;"	f	class:BufferQueue
getCalleeFunc	test/profile/Inputs/instrprof-value-prof-evict.c	/^FPT getCalleeFunc(int I) { return CalleeAddrs[I]; }$/;"	f
getCalleeFunc	test/profile/instrprof-value-prof-reset.c	/^FPT getCalleeFunc(int I) { return CalleeAddrs[I]; }$/;"	f
getCallerLocation	lib/ubsan/ubsan_diag.h	/^inline SymbolizedStack *getCallerLocation(uptr CallerPC) {$/;"	f	namespace:__ubsan
getChainedId	lib/msan/msan_origin.h	/^  u32 getChainedId() const {$/;"	f	class:__msan::Origin
getColumn	lib/ubsan/ubsan_value.h	/^  unsigned getColumn() const { return Column; }$/;"	f	class:__ubsan::SourceLocation
getCompileDefinitionScudoDefaultOptions	lib/scudo/scudo_flags.cpp	/^static const char *getCompileDefinitionScudoDefaultOptions() {$/;"	f	namespace:__scudo
getConstAtomicHeader	lib/scudo/scudo_allocator.cpp	/^  const AtomicPackedHeader *getConstAtomicHeader(const void *Ptr) {$/;"	f	namespace:__scudo::Chunk
getCoolestInteger	test/asan/TestCases/initialization-constexpr.cc	/^int getCoolestInteger() { return coolestInteger.getValue(); }$/;"	f
getCurFilename	lib/profile/InstrProfilingFile.c	/^static const char *getCurFilename(char *FilenameBuf, int ForceUseBuf) {$/;"	f	file:
getCurFilenameLength	lib/profile/InstrProfilingFile.c	/^static int getCurFilenameLength() {$/;"	f	file:
getData	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  uptr getData(uptr node) const { return data_[nodeToIndex(node)]; }$/;"	f	class:__sanitizer::DeadlockDetector
getDefaultSymbolizer	lib/sanitizer_common/symbolizer/sanitizer_symbolize.cc	/^static llvm::symbolize::LLVMSymbolizer *getDefaultSymbolizer() {$/;"	f	file:
getDynamicTypeInfoFromObject	lib/ubsan/ubsan_type_hash.cc	/^__ubsan::DynamicTypeInfo __ubsan::getDynamicTypeInfoFromObject(void *Object) {$/;"	f	class:__ubsan
getDynamicTypeInfoFromVtable	lib/ubsan/ubsan_type_hash_itanium.cc	/^__ubsan::getDynamicTypeInfoFromVtable(void *VtablePtr) {$/;"	f	class:__ubsan
getDynamicTypeInfoFromVtable	lib/ubsan/ubsan_type_hash_win.cc	/^__ubsan::getDynamicTypeInfoFromVtable(void *VtablePtr) {$/;"	f	class:__ubsan
getEnd	lib/ubsan/ubsan_diag.h	/^  Location getEnd() const { return End; }$/;"	f	class:__ubsan::Range
getEpoch	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  uptr getEpoch() const { return epoch_; }$/;"	f	class:__sanitizer::DeadlockDetectorTLS
getErrorString	lib/xray/xray_buffer_queue.h	/^  static const char *getErrorString(ErrorCode E) {$/;"	f	class:__xray::BufferQueue
getFP	test/profile/Inputs/instrprof-alloc.c	/^void getFP(int i) {$/;"	f
getFilename	lib/ubsan/ubsan_value.h	/^  const char *getFilename() const { return Filename; }$/;"	f	class:__ubsan::SourceLocation
getFilenamePatFromEnv	lib/profile/InstrProfilingFile.c	/^static const char *getFilenamePatFromEnv(void) {$/;"	f	file:
getFlagValue	lib/fuzzer/FuzzerCommand.h	/^  std::string getFlagValue(const std::string &Flag) {$/;"	f	class:fuzzer::final
getFlags	lib/esan/esan_flags.h	/^inline Flags *getFlags() {$/;"	f	namespace:__esan
getFlags	lib/scudo/scudo_flags.cpp	/^Flags *getFlags() {$/;"	f	namespace:__scudo
getFloatBitWidth	lib/ubsan/ubsan_value.h	/^  unsigned getFloatBitWidth() const {$/;"	f	class:__ubsan::TypeDescriptor
getFloatValue	lib/ubsan/ubsan_value.cc	/^FloatMax Value::getFloatValue() const {$/;"	f	class:Value
getFoo	test/asan/TestCases/Posix/new_array_cookie_with_new_from_class.cc	/^Foo *getFoo(size_t n) {$/;"	f
getFunc	test/profile/Inputs/instrprof-value-prof-real.c	/^FPT getFunc(int I) { return CalleeAddrs[I]; }$/;"	f
getG	test/asan/TestCases/Linux/asan_prelink_test.cc	/^int *getG() {$/;"	f
getHeader	lib/scudo/scudo_allocator_secondary.h	/^  static Header *getHeader(const void *Ptr) {$/;"	f	namespace:LargeChunk
getHeader	lib/scudo/scudo_allocator_secondary.h	/^  static Header *getHeader(uptr Ptr) {$/;"	f	namespace:LargeChunk
getHeaderSize	lib/scudo/scudo_allocator.h	/^  constexpr uptr getHeaderSize() {$/;"	f	namespace:__scudo::Chunk
getHeaderSize	lib/scudo/scudo_allocator_secondary.h	/^  constexpr uptr getHeaderSize() {$/;"	f	namespace:LargeChunk
getHeapId	lib/msan/msan_origin.h	/^  u32 getHeapId() const {$/;"	f	class:__msan::Origin
getIntegerBitWidth	lib/ubsan/ubsan_value.h	/^  unsigned getIntegerBitWidth() const {$/;"	f	class:__ubsan::TypeDescriptor
getIntelProcessorTypeAndSubtype	lib/builtins/cpu_model.c	/^getIntelProcessorTypeAndSubtype(unsigned Family, unsigned Model,$/;"	f	file:
getKind	lib/ubsan/ubsan_diag.h	/^  LocationKind getKind() const { return Kind; }$/;"	f	class:__ubsan::Location
getKind	lib/ubsan/ubsan_value.h	/^  Kind getKind() const {$/;"	f	class:__ubsan::TypeDescriptor
getLine	lib/ubsan/ubsan_value.h	/^  unsigned getLine() const { return Line; }$/;"	f	class:__ubsan::SourceLocation
getLock	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  uptr getLock(uptr idx) const { return all_locks_with_contexts_[idx].lock; }$/;"	f	class:__sanitizer::DeadlockDetectorTLS
getLocks	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  const BV &getLocks(uptr current_epoch) const {$/;"	f	class:__sanitizer::DeadlockDetectorTLS
getMaxAddr	lib/profile/InstrProfilingPlatformOther.c	/^static const void *getMaxAddr(const void *A1, const void *A2) {$/;"	f	file:
getMemoryLocation	lib/ubsan/ubsan_diag.h	/^  MemoryLocation getMemoryLocation() const {$/;"	f	class:__ubsan::Location
getMinAddr	lib/profile/InstrProfilingPlatformOther.c	/^static const void *getMinAddr(const void *A1, const void *A2) {$/;"	f	file:
getMostDerivedTypeName	lib/ubsan/ubsan_type_hash.h	/^  const char *getMostDerivedTypeName() const { return MostDerivedTypeName; }$/;"	f	class:__ubsan::DynamicTypeInfo
getMutex	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^Mutex *DD::getMutex(u32 id) {$/;"	f	class:__sanitizer::DD
getMutexId	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^u32 DD::getMutexId(Mutex *m) {$/;"	f	class:__sanitizer::DD
getName	lib/ubsan/ubsan_diag.h	/^  const char *getName() const { return Name; }$/;"	f	class:__ubsan::TypeName
getNextChainedOrigin	lib/msan/msan_origin.h	/^  Origin getNextChainedOrigin(StackTrace *stack) const {$/;"	f	class:__msan::Origin
getNextNValueData	lib/profile/InstrProfilingValue.c	/^static ValueProfNode *getNextNValueData(uint32_t VK, uint32_t Site,$/;"	f	file:
getNumLocks	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  uptr getNumLocks() const { return n_all_locks_; }$/;"	f	class:__sanitizer::DeadlockDetectorTLS
getNumValueDataForSiteRT	lib/profile/InstrProfilingValue.c	/^static uint32_t getNumValueDataForSiteRT(const void *R, uint32_t VK,$/;"	f	file:
getNumValueDataForSiteWrapper	lib/profile/InstrProfilingValue.c	/^static uint32_t getNumValueDataForSiteWrapper(uint32_t VK, uint32_t S) {$/;"	f	file:
getNumValueDataRT	lib/profile/InstrProfilingValue.c	/^static uint32_t getNumValueDataRT(const void *R, uint32_t VK) {$/;"	f	file:
getNumValueSitesRT	lib/profile/InstrProfilingValue.c	/^static uint32_t getNumValueSitesRT(const void *R, uint32_t VK) {$/;"	f	file:
getOffset	lib/ubsan/ubsan_type_hash.h	/^  sptr getOffset() const { return Offset; }$/;"	f	class:__ubsan::DynamicTypeInfo
getOutputFile	lib/fuzzer/FuzzerCommand.h	/^  const std::string &getOutputFile() const { return OutputFile; }$/;"	f	class:fuzzer::final
getPNSStr	lib/profile/InstrProfilingFile.c	/^static const char *getPNSStr(ProfileNameSpecifier PNS) {$/;"	f	file:
getPeriodForPrinting	lib/esan/working_set.cpp	/^static u32 getPeriodForPrinting(u32 MilliSec, const char *&Unit) {$/;"	f	namespace:__esan
getPositiveIntValue	lib/ubsan/ubsan_value.cc	/^UIntMax Value::getPositiveIntValue() const {$/;"	f	class:Value
getQuarantineCache	lib/scudo/scudo_allocator.cpp	/^QuarantineCacheT *getQuarantineCache(ScudoTSD *TSD) {$/;"	f	namespace:__scudo
getRoots	lib/xray/xray_function_call_trie.h	/^  const RootArray &getRoots() const { return Roots; }$/;"	f	class:__xray::FunctionCallTrie
getSIntValue	lib/ubsan/ubsan_value.cc	/^SIntMax Value::getSIntValue() const {$/;"	f	class:Value
getSampleCount	lib/esan/esan.cpp	/^unsigned int getSampleCount() {$/;"	f	namespace:__esan
getSampleCountWorkingSet	lib/esan/working_set.cpp	/^unsigned int getSampleCountWorkingSet()$/;"	f	namespace:__esan
getScudoDefaultOptions	lib/scudo/scudo_flags.cpp	/^static const char *getScudoDefaultOptions() {$/;"	f	namespace:__scudo
getShadowRegion	lib/esan/esan_shadow.h	/^static inline bool getShadowRegion(u32 i, uptr *Start, uptr *End) {$/;"	f	namespace:__esan
getSize	lib/scudo/scudo_allocator.cpp	/^  static INLINE uptr getSize(const void *Ptr, UnpackedHeader *Header) {$/;"	f	namespace:__scudo::Chunk
getSizeForPrinting	lib/esan/working_set.cpp	/^static u32 getSizeForPrinting(u32 NumOfCachelines, const char *&Unit) {$/;"	f	namespace:__esan
getSourceLocation	lib/ubsan/ubsan_diag.h	/^  SourceLocation getSourceLocation() const {$/;"	f	class:__ubsan::Location
getStackId	lib/msan/msan_origin.h	/^  u32 getStackId() const {$/;"	f	class:__msan::Origin
getStackTraceForHeapOrigin	lib/msan/msan_origin.h	/^  StackTrace getStackTraceForHeapOrigin() const {$/;"	f	class:__msan::Origin
getStart	lib/ubsan/ubsan_diag.h	/^  Location getStart() const { return Start; }$/;"	f	class:__ubsan::Range
getStats	lib/scudo/scudo_allocator.cpp	/^  uptr getStats(AllocatorStat StatType) {$/;"	f	struct:__scudo::Allocator
getStats	lib/scudo/scudo_allocator_combined.h	/^  void getStats(AllocatorStatCounters StatType) const {$/;"	f	class:CombinedAllocator
getStructWithDtorValue	test/asan/TestCases/initialization-nobug.cc	/^int getStructWithDtorValue() { return struct_with_dtor.value; }$/;"	f
getSubobjectTypeName	lib/ubsan/ubsan_type_hash.h	/^  const char *getSubobjectTypeName() const { return SubobjectTypeName; }$/;"	f	class:__ubsan::DynamicTypeInfo
getSymbolizedLocation	lib/ubsan/ubsan_diag.cc	/^SymbolizedStack *__ubsan::getSymbolizedLocation(uptr PC) {$/;"	f	class:__ubsan
getSymbolizedStack	lib/ubsan/ubsan_diag.h	/^  const SymbolizedStack *getSymbolizedStack() const {$/;"	f	class:__ubsan::Location
getTSDAndLockSlow	lib/scudo/scudo_tsd_shared.cpp	/^ScudoTSD *getTSDAndLockSlow(ScudoTSD *TSD) {$/;"	f	namespace:__scudo
getText	lib/ubsan/ubsan_diag.h	/^  const char *getText() const { return Text; }$/;"	f	class:__ubsan::Range
getThreadLocalData	lib/xray/xray_fdr_logging.cc	/^static ThreadLocalData &getThreadLocalData() {$/;"	f	namespace:__xray
getTotalNumberOfRuns	lib/fuzzer/FuzzerInternal.h	/^  size_t getTotalNumberOfRuns() { return TotalNumberOfRuns; }$/;"	f	class:fuzzer::Fuzzer
getType	lib/ubsan/ubsan_value.h	/^  const TypeDescriptor &getType() const { return Type; }$/;"	f	class:__ubsan::Value
getTypeCacheHashTableBucket	lib/ubsan/ubsan_type_hash_itanium.cc	/^static __ubsan::HashValue *getTypeCacheHashTableBucket(__ubsan::HashValue V) {$/;"	f	file:
getTypeName	lib/ubsan/ubsan_value.h	/^  const char *getTypeName() const { return TypeName; }$/;"	f	class:__ubsan::TypeDescriptor
getUIntValue	lib/ubsan/ubsan_value.cc	/^UIntMax Value::getUIntValue() const {$/;"	f	class:Value
getUsableSize	lib/scudo/scudo_allocator.cpp	/^  static INLINE uptr getUsableSize(const void *Ptr, UnpackedHeader *Header) {$/;"	f	namespace:__scudo::Chunk
getUsableSize	lib/scudo/scudo_allocator.cpp	/^  uptr getUsableSize(const void *Ptr) {$/;"	f	struct:__scudo::Allocator
getValue	test/asan/TestCases/initialization-constexpr.cc	/^  int getValue() {return value;}$/;"	f	class:Integer
getValueProfDataSizeWrapper	lib/profile/InstrProfilingValue.c	/^static uint32_t getValueProfDataSizeWrapper(void) {$/;"	f	file:
getVtablePrefix	lib/ubsan/ubsan_type_hash_itanium.cc	/^VtablePrefix *getVtablePrefix(void *Vtable) {$/;"	f	namespace:__anon103
getX86CpuIDAndInfo	lib/builtins/cpu_model.c	/^static bool getX86CpuIDAndInfo(unsigned value, unsigned *rEAX, unsigned *rEBX,$/;"	f	file:
getX86CpuIDAndInfoEx	lib/builtins/cpu_model.c	/^static bool getX86CpuIDAndInfoEx(unsigned value, unsigned subleaf,$/;"	f	file:
getX86XCR0	lib/builtins/cpu_model.c	/^static bool getX86XCR0(unsigned *rEAX, unsigned *rEDX) {$/;"	f	file:
get_address_of_static_var	test/asan/TestCases/Posix/dlclose-test.cc	/^int *get_address_of_static_var() {$/;"	f
get_allocator	lib/asan/asan_allocator.cc	/^static AsanAllocator &get_allocator() {$/;"	f	namespace:__asan
get_android_tls_ptr	lib/sanitizer_common/sanitizer_linux.h	/^ALWAYS_INLINE uptr *get_android_tls_ptr() {$/;"	f	namespace:__sanitizer
get_asm	lib/tsan/analyze_libtsan.sh	/^get_asm() {$/;"	f
get_block	lib/tsan/rtl/tsan_clock.cc	/^ALWAYS_INLINE u32 SyncClock::get_block(uptr bi) const {$/;"	f	class:__tsan::SyncClock
get_cfi_check	lib/cfi/cfi.cc	/^  CFICheckFn get_cfi_check() const {$/;"	f	class:__cfi::ShadowValue
get_clean	lib/tsan/rtl/tsan_clock.cc	/^u64 SyncClock::get_clean(unsigned tid) const {$/;"	f	class:__tsan::SyncClock
get_cur_proc	lib/tsan/go/tsan_go.cc	/^static Processor* get_cur_proc() {$/;"	f	namespace:__tsan
get_device_arch	lib/asan/scripts/asan_device_setup	/^function get_device_arch { # OUT OUT64$/;"	f
get_double	test/ubsan/TestCases/Misc/bounds.cpp	/^int get_double(double *const p __attribute__((pass_object_size(0))), int i) {$/;"	f
get_dso_global	lib/msan/tests/msan_loadable.cc	/^void **get_dso_global() {$/;"	f
get_dyld_hdr	lib/sanitizer_common/sanitizer_procmaps_mac.cc	/^const mach_header *get_dyld_hdr() {$/;"	f	namespace:__sanitizer
get_dyld_image_header	lib/sanitizer_common/sanitizer_procmaps_mac.cc	/^static mach_header *get_dyld_image_header() {$/;"	f	namespace:__sanitizer
get_foo_val	test/asan/TestCases/Linux/init-order-dlopen.cc	/^int get_foo_val() {$/;"	f
get_global_functions	lib/sanitizer_common/scripts/gen_dynamic_list.py	/^def get_global_functions(library):$/;"	f
get_handle	lib/msan/msan_chained_origin_depot.cc	/^  Handle get_handle() { return Handle(this); }$/;"	f	struct:__msan::ChainedOriginDepotNode
get_handle	lib/sanitizer_common/sanitizer_stackdepot.cc	/^  StackDepotHandle get_handle() { return StackDepotHandle(this); }$/;"	f	struct:__sanitizer::StackDepotNode
get_int	test/ubsan/TestCases/Misc/bounds.cpp	/^int get_int(int *const p __attribute__((pass_object_size(0))), int i) {$/;"	f
get_new_frame	lib/sanitizer_common/sanitizer_symbolizer_libbacktrace.cc	/^  AddressInfo *get_new_frame(uintptr_t addr) {$/;"	f	struct:__sanitizer::__anon99::SymbolizeCodeCallbackArg
get_page_size	test/builtins/Unit/clear_cache_test.c	/^static uintptr_t get_page_size() {$/;"	f	file:
get_pointer	test/asan/TestCases/speculative_load.cc	/^  const char* get_pointer() const {$/;"	f	struct:S
get_sym_file_line	lib/asan/scripts/asan_symbolize.py	/^  def get_sym_file_line(self, addr):$/;"	m	class:BreakpadSymbolizer
get_symbolized_lines	lib/asan/scripts/asan_symbolize.py	/^  def get_symbolized_lines(self, symbolized_lines):$/;"	m	class:SymbolizationLoop
get_t	test/msan/dtls_test.c	/^typedef long *(* get_t)();$/;"	t	file:
get_t	test/tsan/dtls.c	/^typedef volatile long *(* get_t)();$/;"	t	file:
get_tls_func	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^  typedef void (*get_tls_func)(size_t*, size_t*);$/;"	t	struct:__sanitizer::__anon98::GetTlsStaticInfoCall	file:
get_tls_val	lib/lsan/lsan_common_mac.cc	/^static thread_local_data_t *get_tls_val(bool alloc) {$/;"	f	namespace:__lsan
get_type	utils/generate_netbsd_ioctls.awk	/^function get_type(string)$/;"	f
get_uid	lib/sanitizer_common/tests/sanitizer_thread_registry_test.cc	/^static uptr get_uid(u32 tid) {$/;"	f	namespace:__sanitizer
getenv	lib/profile/InstrProfilingUtil.h	/^static inline char *getenv(const char *name) { return NULL; }$/;"	f
getlim	lib/sanitizer_common/sanitizer_posix_libcdep.cc	/^static rlim_t getlim(int res) {$/;"	f	namespace:__sanitizer
getrusage	lib/msan/msan_interceptors.cc	41;"	d	file:
gettimeofday	lib/msan/msan_interceptors.cc	40;"	d	file:
getxattr_wrapper	test/msan/Linux/xattr.cc	/^ssize_t getxattr_wrapper(const char *name, char *buf, size_t size) {$/;"	f
gg	test/profile/Inputs/instrprof-merge-match-lib.c	/^int gg = 0;$/;"	v
gid	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u32 gid;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
gid	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  u32 gid;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
gid	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    int gid;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
gid	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned int gid;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
gid	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned int gid;           \/\/ gid_t$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
gid_t	lib/sanitizer_common/sanitizer_platform_limits_linux.cc	39;"	d	file:
gid_t	lib/sanitizer_common/sanitizer_platform_limits_linux.cc	48;"	d	file:
gid_t_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned gid_t_sz = sizeof(gid_t);$/;"	m	namespace:__sanitizer	file:
gid_t_sz	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^unsigned gid_t_sz = sizeof(gid_t);$/;"	m	namespace:__sanitizer	file:
gid_t_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned gid_t_sz = sizeof(gid_t);$/;"	m	namespace:__sanitizer	file:
gid_t_sz	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned gid_t_sz = sizeof(gid_t);$/;"	m	namespace:__sanitizer	file:
gl_closedir	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  void (*gl_closedir)(void *dirp);$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_closedir	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  void (*gl_closedir)(void *dirp);$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_closedir	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    void (*gl_closedir)(void *dirp);$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_errfunc	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int (*gl_errfunc)(const char *, int);$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_errfunc	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  int (*gl_errfunc)(const char *, int);$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_errfunc	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    int (*gl_errfunc)(const char*, int);$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_flags	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int gl_flags;$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_flags	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  int gl_flags;$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_flags	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    int gl_flags;$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_lstat	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int (*gl_lstat)(const char *, void * \/* struct stat* *\/);$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_lstat	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  int (*gl_lstat)(const char *, void * \/* struct stat* *\/);$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_lstat	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    int (*gl_lstat)(const char *, void *);$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_lstat	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    int (*gl_lstat)(const char*, void* \/* struct stat* *\/);$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_matchc	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  uptr gl_matchc;$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_matchc	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  int gl_matchc;$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_matchc	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    uptr gl_matchc;$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_offs	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  uptr gl_offs;$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_offs	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  int gl_offs;$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_offs	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    uptr gl_offs;$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_offs	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  uptr gl_offs;$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_opendir	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  void *(*gl_opendir)(const char *);$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_opendir	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  void *(*gl_opendir)(const char *);$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_opendir	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    void *(*gl_opendir)(const char *);$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_opendir	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    void *(*gl_opendir)(const char*);$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_pathc	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  uptr gl_pathc;$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_pathc	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  int gl_pathc;$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_pathc	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    uptr gl_pathc;$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_pathc	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  uptr gl_pathc;$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_pathn	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int gl_pathn;$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_pathp	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  char **gl_pathp;$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_pathv	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char **gl_pathv;$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_pathv	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  char **gl_pathv;$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_pathv	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    char **gl_pathv;$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_pathv	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  char **gl_pathv;$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_readdir	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  struct dirent *(*gl_readdir)(void *dirp);$/;"	m	struct:__sanitizer::__sanitizer_glob_t	typeref:struct:__sanitizer::__sanitizer_glob_t::gl_readdir
gl_readdir	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  struct dirent *(*gl_readdir)(void *dirp);$/;"	m	struct:__sanitizer::__sanitizer_glob_t	typeref:struct:__sanitizer::__sanitizer_glob_t::gl_readdir
gl_readdir	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    struct dirent *(*gl_readdir)(void *dirp);$/;"	m	struct:__sanitizer::__sanitizer_glob_t	typeref:struct:__sanitizer::__sanitizer_glob_t::gl_readdir
gl_readdir	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    void *(*gl_readdir)(void *dirp);$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_stat	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int (*gl_stat)(const char *, void * \/* struct stat* *\/);$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_stat	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  int (*gl_stat)(const char *, void * \/* struct stat* *\/);$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_stat	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    int (*gl_stat)(const char *, void *);$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_stat	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    int (*gl_stat)(const char*, void* \/* struct stat* *\/);$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_statv	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  void **gl_statv;$/;"	m	struct:__sanitizer::__sanitizer_glob_t
glob	test/asan/TestCases/Posix/init-order-pthread-create.cc	/^void *glob = bar((void*)0x1234, false);$/;"	v
glob	test/tsan/pthread_atfork_deadlock.c	/^int glob = 0;$/;"	v
glob1	lib/asan/tests/asan_globals_test.cc	/^char glob1[1];$/;"	v
glob10	lib/asan/tests/asan_globals_test.cc	/^char glob10[10];$/;"	v
glob1000	lib/asan/tests/asan_globals_test.cc	/^char glob1000[1000];$/;"	v
glob10000	lib/asan/tests/asan_globals_test.cc	/^char glob10000[10000];$/;"	v
glob100000	lib/asan/tests/asan_globals_test.cc	/^char glob100000[100000];$/;"	v
glob11	lib/asan/tests/asan_globals_test.cc	/^char glob11[11];$/;"	v
glob12	lib/asan/tests/asan_globals_test.cc	/^char glob12[12];$/;"	v
glob13	lib/asan/tests/asan_globals_test.cc	/^char glob13[13];$/;"	v
glob14	lib/asan/tests/asan_globals_test.cc	/^char glob14[14];$/;"	v
glob15	lib/asan/tests/asan_globals_test.cc	/^char glob15[15];$/;"	v
glob16	lib/asan/tests/asan_globals_test.cc	/^char glob16[16];$/;"	v
glob17	lib/asan/tests/asan_globals_test.cc	/^char glob17[17];$/;"	v
glob2	lib/asan/tests/asan_globals_test.cc	/^char glob2[2];$/;"	v
glob2	test/asan/TestCases/Posix/init-order-pthread-create.cc	/^void *glob2 = bar((void*)0x2345, true);$/;"	v
glob3	lib/asan/tests/asan_globals_test.cc	/^char glob3[3];$/;"	v
glob4	lib/asan/tests/asan_globals_test.cc	/^char glob4[4];$/;"	v
glob5	lib/asan/tests/asan_globals_test.cc	/^char glob5[5];$/;"	v
glob6	lib/asan/tests/asan_globals_test.cc	/^char glob6[6];$/;"	v
glob7	lib/asan/tests/asan_globals_test.cc	/^char glob7[7];$/;"	v
glob8	lib/asan/tests/asan_globals_test.cc	/^char glob8[8];$/;"	v
glob9	lib/asan/tests/asan_globals_test.cc	/^char glob9[9];$/;"	v
glob_altdirfunc	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^int glob_altdirfunc = GLOB_ALTDIRFUNC;$/;"	m	namespace:__sanitizer	file:
glob_altdirfunc	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^int glob_altdirfunc = GLOB_ALTDIRFUNC;$/;"	m	namespace:__sanitizer	file:
glob_altdirfunc	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  int glob_altdirfunc = GLOB_ALTDIRFUNC;$/;"	m	namespace:__sanitizer	file:
glob_nomatch	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^int glob_nomatch = GLOB_NOMATCH;$/;"	m	namespace:__sanitizer	file:
glob_nomatch	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^int glob_nomatch = GLOB_NOMATCH;$/;"	m	namespace:__sanitizer	file:
glob_nomatch	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  int glob_nomatch = GLOB_NOMATCH;$/;"	m	namespace:__sanitizer	file:
glob_nomatch	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  int glob_nomatch = GLOB_NOMATCH;$/;"	m	namespace:__sanitizer	file:
glob_ptr	test/asan/TestCases/Posix/free_hook_realloc.cc	/^static void *glob_ptr;$/;"	v	file:
glob_ptr	test/asan/TestCases/Windows/free_hook_realloc.cc	/^static void *glob_ptr;$/;"	v	file:
glob_t	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^CHECK_TYPE_SIZE(glob_t);$/;"	v
glob_t	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^CHECK_TYPE_SIZE(glob_t);$/;"	v
glob_t	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^CHECK_TYPE_SIZE(glob_t);$/;"	v
glob_t	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^CHECK_TYPE_SIZE(glob_t);$/;"	v
global	lib/asan/asan_descriptions.h	/^      GlobalAddressDescription global;$/;"	m	union:__asan::AddressDescription::AddressDescriptionData::__anon52
global	lib/tsan/rtl/tsan_report.h	/^  DataInfo global;$/;"	m	struct:__tsan::ReportLocation
global	test/BlocksRuntime/globalexpression.c	/^int global;$/;"	v
global	test/asan/TestCases/deep_tail_call.cc	/^int global[10];$/;"	v
global	test/asan/TestCases/describe_address.cc	/^int global;$/;"	v
global	test/asan/TestCases/global-location.cc	/^int global[10];$/;"	v
global	test/asan/TestCases/invalid-pointer-pairs-compare-null.cc	/^char global[8192] = {};$/;"	v
global	test/asan/TestCases/invalid-pointer-pairs-compare-success.cc	/^char global[8192] = {};$/;"	v
global	test/asan/TestCases/invalid-pointer-pairs-subtract-success.cc	/^char global[10000] = {};$/;"	v
global	test/sanitizer_common/TestCases/Darwin/abort_on_error.cc	/^int global;$/;"	v
global	test/sanitizer_common/TestCases/Posix/sanitizer_set_death_callback_test.cc	/^char global;$/;"	v
global	test/tsan/stack_sync_reuse.cc	/^long global;$/;"	v
global1	lib/asan/asan_errors.h	/^  __asan_global global1, global2;$/;"	m	struct:__asan::ErrorODRViolation
global1	test/asan/TestCases/invalid-pointer-pairs-compare-errors.cc	/^char global1[100] = {}, global2[100] = {};$/;"	v
global1	test/asan/TestCases/invalid-pointer-pairs-subtract-errors.cc	/^char global1[100] = {}, global2[100] = {};$/;"	v
global2	lib/asan/asan_errors.h	/^  __asan_global global1, global2;$/;"	m	struct:__asan::ErrorODRViolation
global2	test/asan/TestCases/invalid-pointer-pairs-compare-errors.cc	/^char global1[100] = {}, global2[100] = {};$/;"	v
global2	test/asan/TestCases/invalid-pointer-pairs-subtract-errors.cc	/^char global1[100] = {}, global2[100] = {};$/;"	v
global_array	test/asan/TestCases/Linux/overflow-in-qsort.cc	/^int global_array[10];$/;"	v
global_foo	test/asan/TestCases/Linux/init-order-dlopen.cc	/^Foo global_foo;$/;"	v
global_inited	lib/sanitizer_common/tests/sanitizer_allocator_testlib.cc	/^static bool global_inited;$/;"	m	namespace:__anon59	file:
global_p	test/scudo/preinit.c	/^static void *global_p = NULL;$/;"	v	file:
global_p	test/tsan/ignored-interceptors-mmap.cc	/^void *global_p;$/;"	v
global_poller	test/asan/TestCases/Posix/init-order-pthread-create.cc	/^} global_poller;$/;"	v	typeref:struct:GlobalPollerStarter
global_proc	lib/tsan/rtl/tsan_mman.cc	/^GlobalProc *global_proc() {$/;"	f	namespace:__tsan
global_ptr	test/sanitizer_common/TestCases/malloc_hook.cc	/^const volatile void *global_ptr;$/;"	v
global_registration_site_vector	lib/asan/asan_globals.cc	/^static GlobalRegistrationSiteVector *global_registration_site_vector;$/;"	m	namespace:__asan	file:
global_seed	lib/sanitizer_common/tests/sanitizer_test_utils.h	/^static uint32_t global_seed = 0;$/;"	v
global_string	lib/asan/tests/asan_str_test.cc	/^static char global_string[] = "global";$/;"	v	file:
global_string_length	lib/asan/tests/asan_str_test.cc	/^static size_t global_string_length = 6;$/;"	v	file:
global_var	test/asan/TestCases/debug_locate.cc	/^int global_var;$/;"	v
global_var	test/tsan/debug_locate.cc	/^long global_var;$/;"	v
globals	lib/asan/asan_descriptions.h	/^  __asan_global globals[kMaxGlobals];$/;"	m	struct:__asan::GlobalAddressDescription
globals_op_fptr	lib/asan/asan_internal.h	/^typedef void (*globals_op_fptr)(__asan_global *, uptr);$/;"	t	namespace:__asan
globsync	lib/tsan/rtl/tsan_fd.cc	/^  FdSync globsync;$/;"	m	struct:__tsan::FdContext	file:
glow_clock_barrier	test/tsan/bench.h	/^pthread_barrier_t glow_clock_barrier;$/;"	v
gm	test/asan/TestCases/scariness_score_test.cc	/^S32     gm[100];$/;"	v
go	test/lsan/TestCases/high_allocator_contention.cc	/^bool go = false;$/;"	v
go	test/scudo/threads.c	/^char go = 0;$/;"	v
go_heap	lib/tsan/go/test.c	/^void *go_heap = (void *)0xC011110000;$/;"	v
go_runtime_cb	lib/tsan/go/tsan_go.cc	/^static void (*go_runtime_cb)(uptr cmd, void *ctx);$/;"	m	namespace:__tsan	file:
gr_gid	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int gr_gid;$/;"	m	struct:__sanitizer::__sanitizer_group
gr_gid	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  int gr_gid;$/;"	m	struct:__sanitizer::__sanitizer_group
gr_gid	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    int gr_gid;$/;"	m	struct:__sanitizer::__sanitizer_group
gr_gid	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int gr_gid;$/;"	m	struct:__sanitizer::__sanitizer_group
gr_mem	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char **gr_mem;$/;"	m	struct:__sanitizer::__sanitizer_group
gr_mem	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  char **gr_mem;$/;"	m	struct:__sanitizer::__sanitizer_group
gr_mem	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    char **gr_mem;$/;"	m	struct:__sanitizer::__sanitizer_group
gr_mem	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  char **gr_mem;$/;"	m	struct:__sanitizer::__sanitizer_group
gr_name	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char *gr_name;$/;"	m	struct:__sanitizer::__sanitizer_group
gr_name	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  char *gr_name;$/;"	m	struct:__sanitizer::__sanitizer_group
gr_name	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    char *gr_name;$/;"	m	struct:__sanitizer::__sanitizer_group
gr_name	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  char *gr_name;$/;"	m	struct:__sanitizer::__sanitizer_group
gr_passwd	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char *gr_passwd;$/;"	m	struct:__sanitizer::__sanitizer_group
gr_passwd	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  char *gr_passwd;$/;"	m	struct:__sanitizer::__sanitizer_group
gr_passwd	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    char *gr_passwd;$/;"	m	struct:__sanitizer::__sanitizer_group
gr_passwd	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  char *gr_passwd;$/;"	m	struct:__sanitizer::__sanitizer_group
group	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^CHECK_TYPE_SIZE(group);$/;"	v
group	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^CHECK_TYPE_SIZE(group);$/;"	v
group	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^CHECK_TYPE_SIZE(group);$/;"	v
group	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^CHECK_TYPE_SIZE(group);$/;"	v
grow_clock_var	test/tsan/bench.h	/^int grow_clock_var;$/;"	v
grow_clock_worker	test/tsan/bench.h	/^void grow_clock_worker(int tid) {$/;"	f
gtReference	test/builtins/Unit/comparedf2_test.c	/^    int gtReference;$/;"	m	struct:TestVector	file:
gtReference	test/builtins/Unit/comparesf2_test.c	/^    int gtReference;$/;"	m	struct:TestVector	file:
guard	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^        guard = #58$/;"	d
guard	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define guard      R11$/;"	d
guard	test/sanitizer_common/TestCases/Linux/signal_segv_handler.cc	/^void *guard;$/;"	v
guard_size_	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^  uptr guard_size_;$/;"	m	class:__sanitizer::ScopedStackSpaceWithGuard	file:
guard_start_	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^  uptr guard_start_;$/;"	m	class:__sanitizer::ScopedStackSpaceWithGuard	file:
guess_arch	lib/asan/scripts/asan_symbolize.py	/^def guess_arch(addr):$/;"	f
h	test/asan/TestCases/Linux/local_alias.cc	/^long h = 12;$/;"	v
h	test/asan/TestCases/Linux/local_alias.cc	/^long h = 15;$/;"	v
h	test/cfi/utils.h	/^  virtual void h() {}$/;"	f	struct:Deriver
h	test/ubsan_minimal/TestCases/recover-dedup.cpp	/^int *_Nonnull h() {$/;"	f
h_	lib/sanitizer_common/sanitizer_symbolizer_win.cc	/^  HANDLE h_;$/;"	m	struct:__sanitizer::__anon78::ScopedHandle	file:
h_addr_list	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char **h_addr_list;$/;"	m	struct:__sanitizer::__sanitizer_hostent
h_addr_list	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  char **h_addr_list;$/;"	m	struct:__sanitizer::__sanitizer_hostent
h_addr_list	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    char **h_addr_list;$/;"	m	struct:__sanitizer::__sanitizer_hostent
h_addr_list	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  char **h_addr_list;$/;"	m	struct:__sanitizer::__sanitizer_hostent
h_addrtype	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int h_addrtype;$/;"	m	struct:__sanitizer::__sanitizer_hostent
h_addrtype	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  int h_addrtype;$/;"	m	struct:__sanitizer::__sanitizer_hostent
h_addrtype	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    int h_addrtype;$/;"	m	struct:__sanitizer::__sanitizer_hostent
h_addrtype	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int h_addrtype;$/;"	m	struct:__sanitizer::__sanitizer_hostent
h_aliases	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char **h_aliases;$/;"	m	struct:__sanitizer::__sanitizer_hostent
h_aliases	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  char **h_aliases;$/;"	m	struct:__sanitizer::__sanitizer_hostent
h_aliases	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    char **h_aliases;$/;"	m	struct:__sanitizer::__sanitizer_hostent
h_aliases	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  char **h_aliases;$/;"	m	struct:__sanitizer::__sanitizer_hostent
h_length	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int h_length;$/;"	m	struct:__sanitizer::__sanitizer_hostent
h_length	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  int h_length;$/;"	m	struct:__sanitizer::__sanitizer_hostent
h_length	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    int h_length;$/;"	m	struct:__sanitizer::__sanitizer_hostent
h_length	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int h_length;$/;"	m	struct:__sanitizer::__sanitizer_hostent
h_name	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char *h_name;$/;"	m	struct:__sanitizer::__sanitizer_hostent
h_name	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  char *h_name;$/;"	m	struct:__sanitizer::__sanitizer_hostent
h_name	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    char *h_name;$/;"	m	struct:__sanitizer::__sanitizer_hostent
h_name	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  char *h_name;$/;"	m	struct:__sanitizer::__sanitizer_hostent
halt_on_error_	lib/asan/asan_report.cc	/^  bool halt_on_error_;$/;"	m	class:__asan::ScopedInErrorReport	file:
halt_on_error_	lib/msan/msan.cc	/^  bool *halt_on_error_;$/;"	m	class:__msan::FlagHandlerKeepGoing	file:
handle	test/asan/TestCases/Linux/stack-trace-dlclose.cc	/^void *handle;$/;"	v
handleBuiltinUnreachableImpl	lib/ubsan/ubsan_handlers.cc	/^static void handleBuiltinUnreachableImpl(UnreachableData *Data,$/;"	f	file:
handleCFIBadIcall	lib/ubsan/ubsan_handlers.cc	/^static void handleCFIBadIcall(CFICheckFailData *Data, ValueHandle Function,$/;"	f	file:
handleDivremOverflowImpl	lib/ubsan/ubsan_handlers.cc	/^static void handleDivremOverflowImpl(OverflowData *Data, ValueHandle LHS,$/;"	f	file:
handleEarlyAlloc	lib/esan/esan_interceptors.cpp	/^static void *handleEarlyAlloc(uptr size) {$/;"	f	file:
handleFloatCastOverflow	lib/ubsan/ubsan_handlers.cc	/^static void handleFloatCastOverflow(void *DataPtr, ValueHandle From,$/;"	f	file:
handleFunctionTypeMismatch	lib/ubsan/ubsan_handlers.cc	/^static void handleFunctionTypeMismatch(FunctionTypeMismatchData *Data,$/;"	f	file:
handleImplicitConversion	lib/ubsan/ubsan_handlers.cc	/^static void handleImplicitConversion(ImplicitConversionData *Data,$/;"	f	file:
handleIntegerOverflowImpl	lib/ubsan/ubsan_handlers.cc	/^static void handleIntegerOverflowImpl(OverflowData *Data, ValueHandle LHS,$/;"	f	file:
handleInvalidBuiltin	lib/ubsan/ubsan_handlers.cc	/^static void handleInvalidBuiltin(InvalidBuiltinData *Data, ReportOptions Opts) {$/;"	f	file:
handleLoadInvalidValue	lib/ubsan/ubsan_handlers.cc	/^static void handleLoadInvalidValue(InvalidValueData *Data, ValueHandle Val,$/;"	f	file:
handleMemoryFault	lib/esan/working_set_posix.cpp	/^static void handleMemoryFault(int SigNum, __sanitizer_siginfo *Info,$/;"	f	namespace:__esan
handleMissingReturnImpl	lib/ubsan/ubsan_handlers.cc	/^static void handleMissingReturnImpl(UnreachableData *Data, ReportOptions Opts) {$/;"	f	file:
handleNegateOverflowImpl	lib/ubsan/ubsan_handlers.cc	/^static void handleNegateOverflowImpl(OverflowData *Data, ValueHandle OldVal,$/;"	f	file:
handleNonNullArg	lib/ubsan/ubsan_handlers.cc	/^static void handleNonNullArg(NonNullArgData *Data, ReportOptions Opts,$/;"	f	file:
handleNonNullReturn	lib/ubsan/ubsan_handlers.cc	/^static void handleNonNullReturn(NonNullReturnData *Data, SourceLocation *LocPtr,$/;"	f	file:
handleOutOfBoundsImpl	lib/ubsan/ubsan_handlers.cc	/^static void handleOutOfBoundsImpl(OutOfBoundsData *Data, ValueHandle Index,$/;"	f	file:
handlePointerOverflowImpl	lib/ubsan/ubsan_handlers.cc	/^static void handlePointerOverflowImpl(PointerOverflowData *Data,$/;"	f	file:
handleShiftOutOfBoundsImpl	lib/ubsan/ubsan_handlers.cc	/^static void handleShiftOutOfBoundsImpl(ShiftOutOfBoundsData *Data,$/;"	f	file:
handleSidelineSignal	lib/esan/esan_sideline_linux.cpp	/^void SidelineThread::handleSidelineSignal(int SigNum,$/;"	f	class:__esan::SidelineThread
handleTypeMismatchImpl	lib/ubsan/ubsan_handlers.cc	/^static void handleTypeMismatchImpl(TypeMismatchData *Data, ValueHandle Pointer,$/;"	f	file:
handleVLABoundNotPositive	lib/ubsan/ubsan_handlers.cc	/^static void handleVLABoundNotPositive(VLABoundData *Data, ValueHandle Bound,$/;"	f	file:
handle_arg0	include/xray/xray_log_interface.h	/^  void (*handle_arg0)(int32_t, XRayEntryType);$/;"	m	struct:XRayLogImpl
handle_bytes	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned int handle_bytes;$/;"	m	struct:__sanitizer::__sanitizer_file_handle
handle_type	lib/msan/msan_chained_origin_depot.cc	/^  typedef Handle handle_type;$/;"	t	struct:__msan::ChainedOriginDepotNode	file:
handle_type	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    int handle_type;$/;"	m	struct:__sanitizer::__sanitizer_file_handle
handle_type	lib/sanitizer_common/sanitizer_stackdepot.cc	/^  typedef StackDepotHandle handle_type;$/;"	t	struct:__sanitizer::StackDepotNode	file:
handle_type	lib/sanitizer_common/sanitizer_stackdepotbase.h	/^  typedef typename Node::handle_type handle_type;$/;"	t	class:__sanitizer::StackDepotBase
handler	lib/sanitizer_common/sanitizer_flag_parser.h	/^    FlagHandlerBase *handler;$/;"	m	struct:__sanitizer::FlagParser::Flag
handler	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^    __sanitizer_sighandler_ptr handler;$/;"	m	union:__sanitizer::__sanitizer_sigaction::__anon84
handler	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^    void (*handler)(int signo);$/;"	m	union:__sanitizer::__sanitizer_kernel_sigaction_t::__anon85
handler	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^    __sanitizer_sighandler_ptr handler;$/;"	m	union:__sanitizer::__sanitizer_sigaction::__anon92
handler	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^    void (*handler)(int signo);$/;"	m	union:__sanitizer::__sanitizer_kernel_sigaction_t::__anon93
handler	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^      __sanitizer_sighandler_ptr handler;$/;"	m	union:__sanitizer::__sanitizer_sigaction::__anon71
handler	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^      void (*handler)(int signo);$/;"	m	union:__sanitizer::__sanitizer_kernel_sigaction_t::__anon72
handler	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^      void (*handler)(int signo);$/;"	m	union:__sanitizer::__sanitizer_kernel_sigaction_t::__anon73
handler	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^    __sanitizer_sighandler_ptr handler;$/;"	m	union:__sanitizer::__sanitizer_sigaction::__anon56
handler	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^    void (*handler)(int signo);$/;"	m	union:__sanitizer::__sanitizer_kernel_sigaction_t::__anon57
handler	test/asan/TestCases/Linux/preinstalled_signal.cc	/^  __sighandler_t handler;$/;"	m	struct:KernelSigaction	file:
handler	test/asan/TestCases/Linux/preinstalled_signal.cc	/^const char *handler = nullptr;$/;"	v
handler	test/asan/TestCases/Linux/signal_during_stop_the_world.cc	/^static void handler(int signo) {$/;"	f	file:
handler	test/asan/TestCases/Linux/swapcontext_annotation.cc	/^void handler(int sig) { CallNoReturn(); }$/;"	f
handler	test/asan/TestCases/Posix/halt_on_error-signals.c	/^void handler(int sig) {$/;"	f
handler	test/msan/Linux/syscalls_sigaction.cc	/^  long flags, handler;$/;"	m	struct:my_kernel_sigaction	file:
handler	test/msan/sigaction.cc	/^void handler(int) {}$/;"	f
handler	test/sanitizer_common/TestCases/Linux/signal_segv_handler.cc	/^void handler(int signo, siginfo_t *info, void *uctx) {$/;"	f
handler	test/scudo/secondary.c	/^void handler(int signo, siginfo_t *info, void *uctx) {$/;"	f
handler	test/tsan/Darwin/signals-blocked.cc	/^static void handler(int sig) {$/;"	f	file:
handler	test/tsan/signal_block.cc	/^void handler(int signum) {$/;"	f
handler	test/tsan/signal_malloc.cc	/^static void handler(int, siginfo_t*, void*) {$/;"	f	file:
handler	test/tsan/signal_pause.cc	/^void handler(int signum) {$/;"	f
handler	test/tsan/signal_reset.cc	/^static void handler(int sig) {$/;"	f	file:
handler	test/tsan/signal_sync.cc	/^static void handler(int sig) {$/;"	f	file:
handler	test/tsan/signal_sync2.cc	/^static void handler(int sig) {$/;"	f	file:
handler	test/tsan/signal_thread.cc	/^static void handler(int sig) {$/;"	f	file:
handler	test/tsan/signal_write.cc	/^static void handler(int, siginfo_t*, void*) {$/;"	f	file:
handler	test/xray/TestCases/Posix/arg1-logging-implicit-this.cc	/^void handler(int32_t, XRayEntryType, uint64_t arg1) {$/;"	f
hasAllEdges	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  bool hasAllEdges(DeadlockDetectorTLS<BV> *dtls, uptr cur_node) {$/;"	f	class:__sanitizer::DeadlockDetector
hasArgument	lib/fuzzer/FuzzerCommand.h	/^  bool hasArgument(const std::string &Arg) const {$/;"	f	class:fuzzer::final
hasAuxFieldInfo	lib/esan/cache_frag.cpp	/^  bool hasAuxFieldInfo() { return FieldOffset != nullptr; }$/;"	f	struct:__esan::StructInfo
hasCPlusPlus	test/BlocksRuntime/testfilerunner.h	/^@property bool hasObjC, hasRR, hasGC, hasCPlusPlus, wantsC99, supposedToNotCompile, open, wants32, wants64;$/;"	v
hasEdge	lib/sanitizer_common/sanitizer_bvgraph.h	/^  bool hasEdge(uptr from, uptr to) const {$/;"	f	class:__sanitizer::BVGraph
hasEdge	lib/sanitizer_common/sanitizer_bvgraph.h	/^  bool hasEdge(uptr from, uptr to) { return v[from].getBit(to); }$/;"	f	class:__sanitizer::BVGraph
hasFlag	lib/fuzzer/FuzzerCommand.h	/^  bool hasFlag(const std::string &Flag) {$/;"	f	class:fuzzer::final
hasGC	test/BlocksRuntime/testfilerunner.h	/^@property bool hasObjC, hasRR, hasGC, hasCPlusPlus, wantsC99, supposedToNotCompile, open, wants32, wants64;$/;"	v
hasHardwareCRC32	lib/scudo/scudo_utils.cpp	/^bool hasHardwareCRC32() { return false; }$/;"	f	namespace:__scudo
hasHardwareCRC32	lib/scudo/scudo_utils.cpp	/^bool hasHardwareCRC32() {$/;"	f	namespace:__scudo
hasHardwareCRC32ARMPosix	lib/scudo/scudo_utils.cpp	/^bool hasHardwareCRC32ARMPosix() { return false; }$/;"	f	namespace:__scudo
hasHardwareCRC32ARMPosix	lib/scudo/scudo_utils.cpp	/^bool hasHardwareCRC32ARMPosix() {$/;"	f	namespace:__scudo
hasNext	lib/sanitizer_common/sanitizer_bitvector.h	/^    bool hasNext() const { return !bv_.empty(); }$/;"	f	class:__sanitizer::BasicBitVector::Iterator
hasNext	lib/sanitizer_common/sanitizer_bitvector.h	/^    bool hasNext() const {$/;"	f	class:__sanitizer::TwoLevelBitVector::Iterator
hasNonDefaultValsPerSite	lib/profile/InstrProfilingValue.c	/^static int hasNonDefaultValsPerSite = 0;$/;"	v	file:
hasObjC	test/BlocksRuntime/testfilerunner.h	/^@property bool hasObjC, hasRR, hasGC, hasCPlusPlus, wantsC99, supposedToNotCompile, open, wants32, wants64;$/;"	v
hasOutputFile	lib/fuzzer/FuzzerCommand.h	/^  bool hasOutputFile() const { return !OutputFile.empty(); }$/;"	f	class:fuzzer::final
hasRR	test/BlocksRuntime/testfilerunner.h	/^@property bool hasObjC, hasRR, hasGC, hasCPlusPlus, wantsC99, supposedToNotCompile, open, wants32, wants64;$/;"	v
hasStaticCounters	lib/profile/InstrProfilingValue.c	/^static int hasStaticCounters = 1;$/;"	v	file:
has_dynamic_init	lib/asan/asan_interface_internal.h	/^    uptr has_dynamic_init;   \/\/ Non-zero if the global has dynamic initializer.$/;"	m	struct:__asan_global
has_fake_stack	lib/asan/asan_thread.h	/^  bool has_fake_stack() {$/;"	f	class:__asan::AsanThread
has_reported_leaks	lib/lsan/lsan_common.cc	/^static bool has_reported_leaks = false;$/;"	m	namespace:__lsan	file:
has_suppression_type_	lib/sanitizer_common/sanitizer_suppressions.h	/^  bool has_suppression_type_[kMaxSuppressionTypes];$/;"	m	class:__sanitizer::SuppressionContext
hash	lib/msan/msan_chained_origin_depot.cc	/^  static u32 hash(const args_type &args) {$/;"	f	struct:__msan::ChainedOriginDepotNode
hash	lib/sanitizer_common/sanitizer_stackdepot.cc	/^  static u32 hash(const args_type &args) {$/;"	f	struct:__sanitizer::StackDepotNode
hash	lib/tsan/rtl/tsan_defs.h	/^  u64 hash[2];$/;"	m	struct:__tsan::MD5Hash
hash	lib/tsan/rtl/tsan_rtl.h	/^  MD5Hash hash[2];$/;"	m	struct:__tsan::RacyStacks
hash_and_use_count	lib/sanitizer_common/sanitizer_stackdepot.cc	/^  atomic_uint32_t hash_and_use_count; \/\/ hash_bits : 12; use_count : 20;$/;"	m	struct:__sanitizer::StackDepotNode	file:
have_pending_signals	lib/tsan/rtl/tsan_interceptors.cc	/^  atomic_uintptr_t have_pending_signals;$/;"	m	struct:__tsan::ThreadSignalContext	file:
head	lib/profile/GCDAProfiling.c	/^  struct fn_node *head, *tail;$/;"	m	struct:fn_list	typeref:struct:fn_list::fn_node	file:
head	lib/sanitizer_common/sanitizer_linux.cc	/^  struct _aarch64_ctx head;$/;"	m	struct:__sanitizer::__sanitizer_esr_context	typeref:struct:__sanitizer::__sanitizer_esr_context::_aarch64_ctx	file:
head	lib/tsan/rtl/tsan_symbolize.cc	/^  SymbolizedStack *head;$/;"	m	struct:__tsan::SymbolizedStackBuilder	file:
head_	lib/sanitizer_common/sanitizer_lfstack.h	/^  atomic_uint64_t head_;$/;"	m	struct:__sanitizer::LFStack
header	lib/tsan/rtl/tsan_external.cc	/^  const char *header;$/;"	m	struct:__tsan::TagData	file:
headers	lib/tsan/rtl/tsan_trace.h	/^  TraceHeader headers[kTraceParts];$/;"	m	struct:__tsan::Trace
heap	lib/asan/asan_descriptions.h	/^      HeapAddressDescription heap;$/;"	m	union:__asan::AddressDescription::AddressDescriptionData::__anon52
heap	lib/tsan/go/tsan_go.cc	/^  uptr heap;$/;"	m	struct:__tsan::SymbolizeDataContext	file:
heap_begin	lib/tsan/rtl/tsan_interface_java.cc	/^  const uptr heap_begin;$/;"	m	struct:__tsan::JavaContext	file:
heap_chunk_size	lib/tsan/rtl/tsan_report.h	/^  uptr heap_chunk_size;$/;"	m	struct:__tsan::ReportLocation
heap_chunk_start	lib/tsan/rtl/tsan_report.h	/^  uptr heap_chunk_start;$/;"	m	struct:__tsan::ReportLocation
heap_ptr	test/asan/TestCases/debug_double_free.cc	/^char *heap_ptr;$/;"	v
heap_size	lib/tsan/rtl/tsan_interface_java.cc	/^  const uptr heap_size;$/;"	m	struct:__tsan::JavaContext	file:
help	lib/dfsan/scripts/build-libc-list.py	/^             help='include libstdc++ in the list (inadvisable)')$/;"	v
help	lib/dfsan/scripts/build-libc-list.py	/^             help='path to libc DSO directory',$/;"	v
help	lib/dfsan/scripts/build-libc-list.py	/^             help='path to libc archive directory',$/;"	v
help	lib/dfsan/scripts/build-libc-list.py	/^             help='path to libgcc DSO directory',$/;"	v
help	lib/dfsan/scripts/build-libc-list.py	/^             help='path to libgcc archive directory',$/;"	v
help	lib/dfsan/scripts/build-libc-list.py	/^             help='path to libstdc++ DSO directory',$/;"	v
here	test/sanitizer_common/android_commands/android_compile.py	/^here = os.path.abspath(os.path.dirname(sys.argv[0]))$/;"	v
here_id	lib/msan/msan_chained_origin_depot.cc	/^    int here_id() { return node_->here_id; }$/;"	f	struct:__msan::ChainedOriginDepotNode::Handle
here_id	lib/msan/msan_chained_origin_depot.cc	/^  u32 here_id;$/;"	m	struct:__msan::ChainedOriginDepotDesc	file:
here_id	lib/msan/msan_chained_origin_depot.cc	/^  u32 here_id;$/;"	m	struct:__msan::ChainedOriginDepotNode	file:
hexagon_memcpy_forward_vp4cp4n2	lib/builtins/hexagon/memcpy_forward_vp4cp4n2.S	/^hexagon_memcpy_forward_vp4cp4n2:$/;"	l
hi	lib/builtins/ppc/DD.h	/^		double hi;$/;"	m	struct:__anon109::__anon110
hi	lib/tsan/rtl/tsan_md5.cc	/^  MD5_u32plus lo, hi;$/;"	m	struct:__tsan::__anon18	file:
hi	test/builtins/Unit/ppc/DD.h	/^		double hi;$/;"	m	struct:__anon153::__anon154
hi	test/builtins/Unit/ppc/floatditf_test.h	/^	double hi;$/;"	m	struct:testCase
hi	test/builtins/Unit/ppc/floatunditf_test.h	/^	double hi;$/;"	m	struct:testCase
hiWord	lib/builtins/fp_lib.h	100;"	d
hiWord	lib/builtins/fp_lib.h	81;"	d
high	lib/builtins/int_types.h	/^        di_int high;$/;"	m	struct:__anon116::__anon117
high	lib/builtins/int_types.h	/^        du_int high;$/;"	m	struct:__anon118::__anon119
high	lib/builtins/int_types.h	/^        si_int high;$/;"	m	struct:__anon112::__anon113
high	lib/builtins/int_types.h	/^        su_int high;$/;"	m	struct:__anon114::__anon115
high	lib/builtins/int_types.h	/^    udwords high;$/;"	m	struct:__anon122
high26bits	lib/builtins/ppc/DD.h	/^static __inline ALWAYS_INLINE double high26bits(double x) {$/;"	f
hint_position_	lib/asan/asan_fake_stack.h	/^  uptr hint_position_[kNumberOfSizeClasses];$/;"	m	class:__asan::FakeStack
hit_count	lib/lsan/lsan_common.h	/^  uptr hit_count;$/;"	m	struct:__lsan::Leak
hit_count	lib/sanitizer_common/sanitizer_suppressions.h	/^  atomic_uint32_t hit_count;$/;"	m	struct:__sanitizer::Suppression
hitcount	lib/tsan/rtl/tsan_interface_ann.cc	/^  atomic_uintptr_t hitcount;$/;"	m	struct:__tsan::ExpectRace	file:
host_to_device_path	test/sanitizer_common/android_commands/android_common.py	/^def host_to_device_path(path):$/;"	f
hostent	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^CHECK_TYPE_SIZE(hostent);$/;"	v
hostent	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^CHECK_TYPE_SIZE(hostent);$/;"	v
hostent	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^CHECK_TYPE_SIZE(hostent);$/;"	v
hostent	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^CHECK_TYPE_SIZE(hostent);$/;"	v
huge	test/tsan/mutexset7.cc	/^__thread int huge[1024*1024];$/;"	v
huge_thread_local_array	test/asan/TestCases/Linux/stress_dtls.c	/^__thread void *huge_thread_local_array[DTLS_SIZE];$/;"	v
huge_thread_local_array	test/lsan/TestCases/Linux/use_tls_dynamic.cc	/^__thread void *huge_thread_local_array[(1 << 20) \/ sizeof(void *)]; \/\/ NOLINT$/;"	v
huge_thread_local_array	test/msan/dtls_test.c	/^__thread long huge_thread_local_array[1 << 17];$/;"	v
huge_thread_local_array	test/tsan/dtls.c	/^__thread long huge_thread_local_array[1 << 17];$/;"	v
hwasan_aligned_alloc	lib/hwasan/hwasan_allocator.cc	/^void *hwasan_aligned_alloc(uptr alignment, uptr size, StackTrace *stack) {$/;"	f	namespace:__hwasan
hwasan_allocator_tagging_enabled	lib/hwasan/hwasan_allocator.cc	/^static atomic_uint8_t hwasan_allocator_tagging_enabled;$/;"	m	namespace:__hwasan	file:
hwasan_calloc	lib/hwasan/hwasan_allocator.cc	/^void *hwasan_calloc(uptr nmemb, uptr size, StackTrace *stack) {$/;"	f	namespace:__hwasan
hwasan_flags	lib/hwasan/hwasan.cc	/^static Flags hwasan_flags;$/;"	m	namespace:__hwasan	file:
hwasan_init_is_running	lib/hwasan/hwasan.cc	/^bool hwasan_init_is_running;$/;"	m	namespace:__hwasan	file:
hwasan_inited	lib/hwasan/hwasan.cc	/^int hwasan_inited = 0;$/;"	m	namespace:__hwasan	file:
hwasan_malloc	lib/hwasan/hwasan_allocator.cc	/^void *hwasan_malloc(uptr size, StackTrace *stack) {$/;"	f	namespace:__hwasan
hwasan_memalign	lib/hwasan/hwasan_allocator.cc	/^void *hwasan_memalign(uptr alignment, uptr size, StackTrace *stack) {$/;"	f	namespace:__hwasan
hwasan_posix_memalign	lib/hwasan/hwasan_allocator.cc	/^int hwasan_posix_memalign(void **memptr, uptr alignment, uptr size,$/;"	f	namespace:__hwasan
hwasan_pvalloc	lib/hwasan/hwasan_allocator.cc	/^void *hwasan_pvalloc(uptr size, StackTrace *stack) {$/;"	f	namespace:__hwasan
hwasan_realloc	lib/hwasan/hwasan_allocator.cc	/^void *hwasan_realloc(void *ptr, uptr size, StackTrace *stack) {$/;"	f	namespace:__hwasan
hwasan_report_count	lib/hwasan/hwasan.cc	/^int hwasan_report_count = 0;$/;"	m	namespace:__hwasan	file:
hwasan_valloc	lib/hwasan/hwasan_allocator.cc	/^void *hwasan_valloc(uptr size, StackTrace *stack) {$/;"	f	namespace:__hwasan
i	test/asan/TestCases/Linux/local_alias.cc	/^long i = 13;$/;"	v
i	test/cfi/utils.h	/^  virtual void i() {}$/;"	f	struct:Deriver
i	test/tsan/tsan-vs-gvn.cc	/^  int i;$/;"	m	struct:__anon130	file:
i	test/ubsan/TestCases/TypeCheck/Linux/PR33221.cpp	/^  int i;$/;"	m	class:Base	file:
i	test/ubsan/TestCases/TypeCheck/PR33221.cpp	/^  int i;$/;"	m	class:Base	file:
i	test/ubsan_minimal/TestCases/recover-dedup.cpp	/^int *i() {$/;"	f
i0_	lib/sanitizer_common/sanitizer_bitvector.h	/^    uptr i0_, i1_;$/;"	m	class:__sanitizer::TwoLevelBitVector::Iterator
i1_	lib/sanitizer_common/sanitizer_bitvector.h	/^    uptr i0_, i1_;$/;"	m	class:__sanitizer::TwoLevelBitVector::Iterator
i_j_label	test/dfsan/custom.cc	/^dfsan_label i_j_label = 0;$/;"	v
i_label	test/dfsan/custom.cc	/^dfsan_label i_label = 0;$/;"	v
ia	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define ia    R0$/;"	d
ic	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^       ic = #0x0$/;"	d
ic	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^       ic = and(c80, mantah)$/;"	d
ic	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define ic       R0$/;"	d
id	lib/asan/asan_memory_profile.cc	/^  u32 id;$/;"	m	struct:__asan::AllocationSite	file:
id	lib/lsan/lsan_common.h	/^  u32 id;$/;"	m	struct:__lsan::Leak
id	lib/msan/msan_chained_origin_depot.cc	/^    u32 id() { return node_->id; }$/;"	f	struct:__msan::ChainedOriginDepotNode::Handle
id	lib/msan/msan_chained_origin_depot.cc	/^  u32 id;$/;"	m	struct:__msan::ChainedOriginDepotNode	file:
id	lib/profile/GCDAProfiling.c	/^  dynamic_object_id id;$/;"	m	struct:fn_node	file:
id	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^  u32 id;$/;"	m	struct:__sanitizer::Id	file:
id	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^  u32 id;$/;"	m	struct:__sanitizer::Link	file:
id	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^  u32 id;$/;"	m	struct:__sanitizer::ThreadMutex	file:
id	lib/sanitizer_common/sanitizer_deadlock_detector_interface.h	/^  uptr id;$/;"	m	struct:__sanitizer::DDMutex
id	lib/sanitizer_common/sanitizer_stackdepot.cc	/^  u32 id;$/;"	m	struct:__sanitizer::StackDepotNode	file:
id	lib/sanitizer_common/sanitizer_stackdepot.cc	/^u32 StackDepotHandle::id() { return node_->id; }$/;"	f	class:__sanitizer::StackDepotHandle
id	lib/sanitizer_common/sanitizer_stackdepot.h	/^    u32 id;$/;"	m	struct:__sanitizer::StackDepotReverseMap::IdDescPair
id	lib/tsan/rtl/tsan_mutexset.h	/^    u64 id;$/;"	m	struct:__tsan::MutexSet::Desc
id	lib/tsan/rtl/tsan_report.h	/^  int id;$/;"	m	struct:__tsan::ReportThread
id	lib/tsan/rtl/tsan_report.h	/^  u64 id;$/;"	m	struct:__tsan::ReportMopMutex
id	lib/tsan/rtl/tsan_report.h	/^  u64 id;$/;"	m	struct:__tsan::ReportMutex
id_gen	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^  int id_gen = 0;$/;"	m	struct:__sanitizer::DD	file:
idx	lib/sanitizer_common/tests/sanitizer_bvgraph_test.cc	/^  uptr idx(uptr from, uptr to) {$/;"	f	class:SimpleGraph	file:
idx	test/msan/chained_origin_memcpy.cc	/^volatile int idx = 30;$/;"	v
idx	test/sanitizer_common/ios_commands/iossim_env.py	/^idx = 1$/;"	v
idx0	lib/sanitizer_common/sanitizer_bitvector.h	/^  uptr idx0(uptr idx) const {$/;"	f	class:__sanitizer::TwoLevelBitVector
idx1	lib/sanitizer_common/sanitizer_bitvector.h	/^  uptr idx1(uptr idx) const {$/;"	f	class:__sanitizer::TwoLevelBitVector
idx2	lib/sanitizer_common/sanitizer_bitvector.h	/^  uptr idx2(uptr idx) const {$/;"	f	class:__sanitizer::TwoLevelBitVector
ifa_addr	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  void *ifa_addr;     \/\/ (struct sockaddr *)$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs
ifa_addr	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  struct __sanitizer_sockaddr *ifa_addr;     \/\/ (struct sockaddr *)$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs	typeref:struct:__sanitizer::__sanitizer_ifaddrs::__sanitizer_sockaddr
ifa_addr	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    void *ifa_addr;    \/\/ (struct sockaddr *)$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs
ifa_addr	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  void *ifa_addr;    \/\/ (struct sockaddr *)$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs
ifa_addrflags	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  unsigned int ifa_addrflags;$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs
ifa_data	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  void *ifa_data;$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs
ifa_data	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  void *ifa_data;$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs
ifa_data	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    void *ifa_data;$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs
ifa_data	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  void *ifa_data;$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs
ifa_dstaddr	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	2200;"	d	file:
ifa_dstaddr	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  void *ifa_dstaddr;  \/\/ (struct sockaddr *)$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs
ifa_dstaddr	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	258;"	d	file:
ifa_dstaddr	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  struct __sanitizer_sockaddr *ifa_dstaddr;  \/\/ (struct sockaddr *)$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs	typeref:struct:__sanitizer::__sanitizer_ifaddrs::__sanitizer_sockaddr
ifa_dstaddr	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	1193;"	d	file:
ifa_dstaddr	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    void *ifa_dstaddr; \/\/ (struct sockaddr *)$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs
ifa_dstaddr	lib/sanitizer_common/sanitizer_platform_limits_posix.h	353;"	d
ifa_dstaddr	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	323;"	d	file:
ifa_dstaddr	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  void *ifa_dstaddr; \/\/ (struct sockaddr *)$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs
ifa_dstaddr	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	121;"	d
ifa_flags	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  unsigned int ifa_flags;$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs
ifa_flags	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  unsigned int ifa_flags;$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs
ifa_flags	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned int ifa_flags;$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs
ifa_flags	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  u64 ifa_flags;     \/\/ uint64_t$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs
ifa_name	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char *ifa_name;$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs
ifa_name	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  char *ifa_name;$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs
ifa_name	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    char *ifa_name;$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs
ifa_name	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  char *ifa_name;$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs
ifa_netmask	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  void *ifa_netmask;  \/\/ (struct sockaddr *)$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs
ifa_netmask	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  struct __sanitizer_sockaddr *ifa_netmask;  \/\/ (struct sockaddr *)$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs	typeref:struct:__sanitizer::__sanitizer_ifaddrs::__sanitizer_sockaddr
ifa_netmask	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    void *ifa_netmask; \/\/ (struct sockaddr *)$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs
ifa_netmask	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  void *ifa_netmask; \/\/ (struct sockaddr *)$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs
ifa_next	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  struct __sanitizer_ifaddrs *ifa_next;$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs	typeref:struct:__sanitizer::__sanitizer_ifaddrs::__sanitizer_ifaddrs
ifa_next	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  struct __sanitizer_ifaddrs *ifa_next;$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs	typeref:struct:__sanitizer::__sanitizer_ifaddrs::__sanitizer_ifaddrs
ifa_next	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    struct __sanitizer_ifaddrs *ifa_next;$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs	typeref:struct:__sanitizer::__sanitizer_ifaddrs::__sanitizer_ifaddrs
ifa_next	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  struct __sanitizer_ifaddrs *ifa_next;$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs	typeref:struct:__sanitizer::__sanitizer_ifaddrs::__sanitizer_ifaddrs
ifaddrs	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^CHECK_TYPE_SIZE(ifaddrs);$/;"	v
ifaddrs	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^CHECK_TYPE_SIZE(ifaddrs);$/;"	v
ifaddrs	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^CHECK_TYPE_SIZE(ifaddrs);$/;"	v
ifaddrs	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^CHECK_TYPE_SIZE(ifaddrs);$/;"	v
ifc_ifcu	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  } ifc_ifcu;$/;"	m	struct:__sanitizer::__sanitizer_ifconf	typeref:union:__sanitizer::__sanitizer_ifconf::__anon86
ifc_ifcu	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  } ifc_ifcu;$/;"	m	struct:__sanitizer::__sanitizer_ifconf	typeref:union:__sanitizer::__sanitizer_ifconf::__anon94
ifc_ifcu	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    } ifc_ifcu;$/;"	m	struct:__sanitizer::__sanitizer_ifconf	typeref:union:__sanitizer::__sanitizer_ifconf::__anon74
ifc_ifcu	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  } ifc_ifcu;$/;"	m	struct:__sanitizer::__sanitizer_ifconf	typeref:union:__sanitizer::__sanitizer_ifconf::__anon58
ifc_len	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int ifc_len;$/;"	m	struct:__sanitizer::__sanitizer_ifconf
ifc_len	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  int ifc_len;$/;"	m	struct:__sanitizer::__sanitizer_ifconf
ifc_len	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    int ifc_len;$/;"	m	struct:__sanitizer::__sanitizer_ifconf
ifc_len	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int ifc_len;$/;"	m	struct:__sanitizer::__sanitizer_ifconf
ifconf	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^CHECK_TYPE_SIZE(ifconf);$/;"	v
ifconf	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^CHECK_TYPE_SIZE(ifconf);$/;"	v
ifconf	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^CHECK_TYPE_SIZE(ifconf);$/;"	v
ifconf	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^CHECK_TYPE_SIZE(ifconf);$/;"	v
ifcu_req	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^    void *ifcu_req;$/;"	m	union:__sanitizer::__sanitizer_ifconf::__anon86
ifcu_req	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^    void *ifcu_req;$/;"	m	union:__sanitizer::__sanitizer_ifconf::__anon94
ifcu_req	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^      void *ifcu_req;$/;"	m	union:__sanitizer::__sanitizer_ifconf::__anon74
ifcu_req	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^    void *ifcu_req;$/;"	m	union:__sanitizer::__sanitizer_ifconf::__anon58
ignoreRemainingArgs	lib/fuzzer/FuzzerCommand.h	/^  static inline const char *ignoreRemainingArgs() {$/;"	f	class:fuzzer::final
ignoreReport	lib/ubsan/ubsan_handlers.cc	/^bool ignoreReport(SourceLocation SLoc, ReportOptions Opts, ErrorType ET) {$/;"	f	namespace:__ubsan
ignore_control_c	test/asan/TestCases/Windows/dll_control_c.cc	/^static int WINAPI ignore_control_c(DWORD ctrl_type) {$/;"	f	file:
ignore_interceptors	lib/tsan/dd/dd_rtl.h	/^  bool ignore_interceptors;$/;"	m	struct:__dsan::Thread
ignore_interceptors	lib/tsan/rtl/tsan_rtl.h	/^  int ignore_interceptors;$/;"	m	struct:__tsan::ThreadState
ignore_interceptors_	lib/tsan/rtl/tsan_rtl.h	/^  ScopedIgnoreInterceptors ignore_interceptors_;$/;"	m	class:__tsan::ScopedReportBase
ignore_missing_	lib/sanitizer_common/sanitizer_flags.cc	/^  bool ignore_missing_;$/;"	m	class:__sanitizer::FlagHandlerInclude	file:
ignore_reads_and_writes	lib/tsan/rtl/tsan_rtl.h	/^  int ignore_reads_and_writes;$/;"	m	struct:__tsan::ThreadState
ignore_sync	lib/tsan/rtl/tsan_rtl.h	/^  int ignore_sync;$/;"	m	struct:__tsan::ThreadState
ignored_code_ranges_	lib/sanitizer_common/sanitizer_libignore.h	/^  LibCodeRange ignored_code_ranges_[kMaxIgnoredRanges];$/;"	m	class:__sanitizer::LibIgnore
ignored_ranges_count_	lib/sanitizer_common/sanitizer_libignore.h	/^  atomic_uintptr_t ignored_ranges_count_;$/;"	m	class:__sanitizer::LibIgnore
ignoring_	lib/tsan/rtl/tsan_interceptors.h	/^  bool ignoring_;$/;"	m	class:__tsan::ScopedInterceptor
ihl	test/msan/pr32842.c	/^  unsigned char pad1: 2, ihl:4, pad2: 2;$/;"	m	struct:iphdr	file:
imaginary	lib/builtins/int_types.h	/^typedef struct { double real, imaginary; } Dcomplex;$/;"	m	struct:__anon125
imaginary	lib/builtins/int_types.h	/^typedef struct { float real, imaginary; } Fcomplex;$/;"	m	struct:__anon124
imaginary	lib/builtins/int_types.h	/^typedef struct { long double real, imaginary; } Lcomplex;$/;"	m	struct:__anon126
impl_	lib/tsan/tests/rtl/tsan_test_util.h	/^  Impl *impl_;$/;"	m	class:ScopedThread
implicitBit	lib/builtins/fp_lib.h	221;"	d
implicitTruncation	test/ubsan/TestCases/ImplicitConversion/integer-truncation-blacklist.c	/^unsigned char implicitTruncation(unsigned int argc) {$/;"	f
in_blocking_func	lib/tsan/rtl/tsan_interceptors.cc	/^  atomic_uintptr_t in_blocking_func;$/;"	m	struct:__tsan::ThreadSignalContext	file:
in_blocking_func	lib/tsan/rtl/tsan_rtl.h	/^  bool in_blocking_func;$/;"	m	struct:__tsan::JmpBuf
in_ignored_lib	lib/tsan/rtl/tsan_rtl.h	/^  bool in_ignored_lib;$/;"	m	struct:__tsan::ThreadState
in_ignored_lib_	lib/tsan/rtl/tsan_interceptors.h	/^  bool in_ignored_lib_;$/;"	m	class:__tsan::ScopedInterceptor
in_interceptor_scope	lib/hwasan/hwasan_interceptors.cc	/^  bool in_interceptor_scope;$/;"	m	struct:HwasanInterceptorContext	file:
in_interceptor_scope	lib/msan/msan_interceptors.cc	/^  bool in_interceptor_scope;$/;"	m	struct:MSanInterceptorContext	file:
in_interceptor_scope	lib/msan/msan_interceptors.cc	/^static THREADLOCAL int in_interceptor_scope;$/;"	v	file:
in_interceptor_scope_	lib/hwasan/hwasan_thread.h	/^  unsigned in_interceptor_scope_;$/;"	m	class:__hwasan::HwasanThread
in_loader	lib/cfi/cfi.cc	/^THREADLOCAL int in_loader;$/;"	m	namespace:__cfi	file:
in_signal_handler	lib/tsan/rtl/tsan_rtl.h	/^  atomic_uintptr_t in_signal_handler;$/;"	m	struct:__tsan::ThreadState
in_signal_handler	lib/tsan/rtl/tsan_rtl.h	/^  uptr in_signal_handler;$/;"	m	struct:__tsan::JmpBuf
in_signal_handler_	lib/hwasan/hwasan_thread.h	/^  unsigned in_signal_handler_;$/;"	m	class:__hwasan::HwasanThread
in_signal_handler_	lib/msan/msan_thread.h	/^  unsigned in_signal_handler_;$/;"	m	class:__msan::MsanThread
in_symbolizer	lib/tsan/rtl/tsan_rtl.h	/^  bool in_symbolizer;$/;"	m	struct:__tsan::ThreadState
in_symbolizer_	lib/hwasan/hwasan_thread.h	/^  unsigned in_symbolizer_;$/;"	m	class:__hwasan::HwasanThread
in_the_range	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^    bool in_the_range;$/;"	m	class:SizeClassAllocator64::FreePagesRangeTracker
inc	test/asan/TestCases/Posix/asan-symbolize-sanity-test.cc	/^void inc(int index) {$/;"	f
inc	test/asan/TestCases/Posix/shared-lib-test.cc	/^void inc(int index) {$/;"	f
inc2	test/asan/TestCases/Posix/asan-symbolize-sanity-test.cc	/^void inc2(int *a, int index) {$/;"	f
inc2	test/asan/TestCases/Posix/shared-lib-test.cc	/^void inc2(int *a, int index) {$/;"	f
inc_use_count_unsafe	lib/sanitizer_common/sanitizer_stackdepot.cc	/^void StackDepotHandle::inc_use_count_unsafe() {$/;"	f	class:__sanitizer::StackDepotHandle
incrementExtents	lib/xray/xray_fdr_logging.cc	/^static void incrementExtents(size_t Add) {$/;"	f	namespace:__xray
incrementer	test/tsan/fork_deadlock.cc	/^static void *incrementer(void *p) {$/;"	f	file:
incrementer_thread_exit_mutex	lib/sanitizer_common/tests/sanitizer_stoptheworld_test.cc	/^static pthread_mutex_t incrementer_thread_exit_mutex;$/;"	m	namespace:__sanitizer	file:
index	lib/builtins/emutls.c	/^        uintptr_t index;  \/* data[index-1] is the object address *\/$/;"	m	union:__emutls_control::__anon108	file:
indexToNode	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  uptr indexToNode(uptr idx) const {$/;"	f	class:__sanitizer::DeadlockDetector
inf	test/builtins/Unit/divdc3_test.c	/^enum {zero, non_zero, inf, NaN, non_zero_nan};$/;"	e	enum:__anon149	file:
inf	test/builtins/Unit/divsc3_test.c	/^enum {zero, non_zero, inf, NaN, non_zero_nan};$/;"	e	enum:__anon151	file:
inf	test/builtins/Unit/divtc3_test.c	/^enum {zero, non_zero, inf, NaN, non_zero_nan};$/;"	e	enum:__anon148	file:
inf	test/builtins/Unit/divxc3_test.c	/^enum {zero, non_zero, inf, NaN, non_zero_nan};$/;"	e	enum:__anon155	file:
inf	test/builtins/Unit/muldc3_test.c	/^enum {zero, non_zero, inf, NaN, non_zero_nan};$/;"	e	enum:__anon147	file:
inf	test/builtins/Unit/mulsc3_test.c	/^enum {zero, non_zero, inf, NaN, non_zero_nan};$/;"	e	enum:__anon157	file:
inf	test/builtins/Unit/multc3_test.c	/^enum {zero, non_zero, inf, NaN, non_zero_nan};$/;"	e	enum:__anon150	file:
inf	test/builtins/Unit/mulxc3_test.c	/^enum {zero, non_zero, inf, NaN, non_zero_nan};$/;"	e	enum:__anon156	file:
infRep	lib/builtins/fp_lib.h	227;"	d
info	lib/sanitizer_common/sanitizer_symbolizer.h	/^  AddressInfo info;$/;"	m	struct:__sanitizer::SymbolizedStack
infos	lib/stats/stats.h	/^  StatInfo infos[1];$/;"	m	struct:__sanitizer::StatModule
ini0	test/fuzzer/PrintUnstableStatsTest.cpp	/^__attribute__((noinline)) void ini0() { x++; }$/;"	f
ini1	test/fuzzer/PrintUnstableStatsTest.cpp	/^__attribute__((noinline)) void ini1() { x++; }$/;"	f
ini2	test/fuzzer/PrintUnstableStatsTest.cpp	/^__attribute__((noinline)) void ini2() { x++; }$/;"	f
init	lib/sanitizer_common/sanitizer_common_nolibc.cc	/^void ListOfModules::init() {}$/;"	f	class:__sanitizer::ListOfModules
init	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^void ListOfModules::init() {$/;"	f	class:__sanitizer::ListOfModules
init	lib/sanitizer_common/sanitizer_mac.cc	/^void ListOfModules::init() {$/;"	f	class:__sanitizer::ListOfModules
init	lib/sanitizer_common/sanitizer_quarantine.h	/^  void init(void *ptr, uptr size) {$/;"	f	struct:__sanitizer::QuarantineBatch
init	lib/sanitizer_common/sanitizer_win.cc	/^void ListOfModules::init() {$/;"	f	class:__sanitizer::ListOfModules
init	lib/scudo/scudo_allocator.cpp	/^  void init() {$/;"	f	struct:__scudo::Allocator
init	lib/scudo/scudo_allocator.cpp	/^void ScudoTSD::init() {$/;"	f	class:__scudo::ScudoTSD
init	lib/scudo/scudo_allocator_combined.h	/^  void init(s32 ReleaseToOSIntervalMs) {$/;"	f	class:CombinedAllocator
init	lib/tsan/rtl/tsan_fd.cc	/^static void init(ThreadState *thr, uptr pc, int fd, FdSync *s,$/;"	f	namespace:__tsan
init	test/asan/TestCases/Linux/calloc-preload.c	/^static void init() {$/;"	f	file:
init	test/cfi/cross-dso/util/cfi_stubs.h	/^__attribute__((constructor(0), no_sanitize("cfi"))) static void init() {$/;"	f
init	test/msan/chained_origin_limits.cc	/^void init() {$/;"	f
initArray	lib/xray/xray_buffer_queue.cc	/^template <class T> static T *initArray(size_t N) {$/;"	f	file:
initBufferWriter	lib/profile/InstrProfilingBuffer.c	/^void initBufferWriter(ProfDataWriter *BufferWriter, char *Buffer) {$/;"	f
initCache	lib/scudo/scudo_allocator_combined.h	/^  void initCache(AllocatorCache *Cache) {$/;"	f	class:CombinedAllocator
initFileWriter	lib/profile/InstrProfilingFile.c	/^static void initFileWriter(ProfDataWriter *This, FILE *File) {$/;"	f	file:
initFlags	lib/scudo/scudo_flags.cpp	/^void initFlags() {$/;"	f	namespace:__scudo
initOnce	lib/scudo/scudo_tsd_exclusive.cpp	/^static void initOnce() {$/;"	f	namespace:__scudo
initOnce	lib/scudo/scudo_tsd_shared.cpp	/^static void initOnce() {$/;"	f	namespace:__scudo
initScudo	lib/scudo/scudo_allocator.cpp	/^void initScudo() {$/;"	f	namespace:__scudo
initThread	lib/scudo/scudo_tsd_exclusive.cpp	/^void initThread(bool MinimalInit) {$/;"	f	namespace:__scudo
initThread	lib/scudo/scudo_tsd_shared.cpp	/^void initThread(bool MinimalInit) {$/;"	f	namespace:__scudo
initVMOWriter	lib/profile/InstrProfilingPlatformFuchsia.c	/^static void initVMOWriter(ProfDataWriter *This) {$/;"	f	file:
initX	test/asan/TestCases/Linux/initialization-bug-any-order.cc	/^int __attribute__((noinline)) initX() {$/;"	f
initX	test/asan/TestCases/initialization-bug.cc	/^int __attribute__((noinline)) initX() {$/;"	f
initY	test/asan/TestCases/Helpers/initialization-bug-extra.cc	/^int initY() {$/;"	f
initY	test/asan/TestCases/Helpers/initialization-bug-extra2.cc	/^int __attribute__((noinline)) initY() {$/;"	f
initZ	test/asan/TestCases/initialization-bug.cc	/^int initZ() {$/;"	f
init_cond	lib/tsan/dd/dd_interceptors.cc	/^static pthread_cond_t *init_cond(pthread_cond_t *c, bool force = false) {$/;"	f	file:
init_cond	lib/tsan/rtl/tsan_interceptors.cc	/^static void *init_cond(void *c, bool force = false) {$/;"	f	file:
init_mu_	lib/sanitizer_common/sanitizer_symbolizer.cc	/^StaticSpinMutex Symbolizer::init_mu_;$/;"	m	class:__sanitizer::Symbolizer	file:
init_mu_	lib/sanitizer_common/sanitizer_symbolizer.h	/^  static StaticSpinMutex init_mu_;$/;"	m	class:__sanitizer::final
init_so	test/tsan/load_shared_lib.cc	/^void init_so() {$/;"	f
inited	lib/tsan/dd/dd_interceptors.cc	/^static bool inited;$/;"	v	file:
inited	lib/tsan/go/tsan_go.cc	/^static bool inited;$/;"	m	namespace:__tsan	file:
initialize	lib/esan/esan_circular_buffer.h	/^  void initialize(uptr BufferCapacity) {$/;"	f	class:__esan::CircularBuffer
initialize	lib/esan/esan_shadow.h	/^  void initialize(uptr ShadowScale) {$/;"	f	class:__esan::ShadowMapping
initializeCacheFrag	lib/esan/cache_frag.cpp	/^void initializeCacheFrag() {$/;"	f	namespace:__esan
initializeFlags	lib/esan/esan_flags.cpp	/^void initializeFlags() {$/;"	f	namespace:__esan
initializeInterceptors	lib/esan/esan_interceptors.cpp	/^void initializeInterceptors() {$/;"	f	namespace:__esan
initializeLibrary	lib/esan/esan.cpp	/^void initializeLibrary(ToolType Tool) {$/;"	f	namespace:__esan
initializeSameTU	test/asan/TestCases/initialization-nobug.cc	/^int initializeSameTU() {$/;"	f
initializeShadow	lib/esan/esan.cpp	/^static void initializeShadow() {$/;"	f	namespace:__esan
initializeShadowWorkingSet	lib/esan/working_set.cpp	/^void initializeShadowWorkingSet() {$/;"	f	namespace:__esan
initializeValueProfRuntimeRecord	lib/profile/InstrProfilingValue.c	/^initializeValueProfRuntimeRecord(const __llvm_profile_data *Data,$/;"	f	file:
initializeWorkingSet	lib/esan/working_set.cpp	/^void initializeWorkingSet() {$/;"	f	namespace:__esan
initialized	lib/asan/asan_globals.cc	/^  bool initialized;$/;"	m	struct:__asan::DynInitGlobal	file:
initialized	lib/sanitizer_common/sanitizer_common.h	/^  bool initialized;$/;"	m	class:__sanitizer::ListOfModules
initialized	lib/sanitizer_common/sanitizer_coverage_libcdep_new.cc	/^  bool initialized;$/;"	m	class:__sancov::__anon64::TracePcGuardController	file:
initialized	lib/tsan/rtl/tsan_rtl.h	/^  bool initialized;$/;"	m	struct:__tsan::Context
initializer_	lib/ubsan/ubsan_diag.h	/^  Initializer initializer_;$/;"	m	class:__ubsan::ScopedReport
initing	lib/tsan/dd/dd_interceptors.cc	/^static __thread volatile int initing;$/;"	v	file:
inlined	test/asan/TestCases/use-after-scope-inlined.cc	/^void inlined(int arg) {$/;"	f
innerHash	lib/fuzzer/FuzzerSHA1.cpp	/^	uint8_t innerHash[HASH_LENGTH];$/;"	m	struct:__anon36::sha1nfo	file:
ino_t	lib/sanitizer_common/sanitizer_platform_limits_linux.cc	35;"	d	file:
ino_t	lib/sanitizer_common/sanitizer_platform_limits_linux.cc	44;"	d	file:
input	test/builtins/Unit/ppc/floatditf_test.h	/^	uint64_t input;$/;"	m	struct:testCase
input	test/builtins/Unit/ppc/floatunditf_test.h	/^	uint64_t input;$/;"	m	struct:testCase
input_fd_	lib/sanitizer_common/sanitizer_symbolizer_internal.h	/^  fd_t input_fd_;$/;"	m	class:__sanitizer::SymbolizerProcess
insert	lib/msan/msan_report.cc	/^  int insert(u32 o) {$/;"	f	class:__msan::OriginSet
install	lib/asan/scripts/asan_device_setup	/^function install { # from, to, chmod, chcon$/;"	f
instrumentTargetValueImpl	lib/profile/InstrProfilingValue.c	/^instrumentTargetValueImpl(uint64_t TargetValue, void *Data,$/;"	f	file:
instrumented	lib/sanitizer_common/sanitizer_common.h	/^  bool instrumented() const { return instrumented_; }$/;"	f	class:__sanitizer::LoadedModule
instrumented_	lib/sanitizer_common/sanitizer_common.h	/^  bool instrumented_;$/;"	m	class:__sanitizer::LoadedModule
instrumented_code_ranges_	lib/sanitizer_common/sanitizer_libignore.h	/^  LibCodeRange instrumented_code_ranges_[kMaxInstrumentedRanges];$/;"	m	class:__sanitizer::LibIgnore
instrumented_ranges_count_	lib/sanitizer_common/sanitizer_libignore.h	/^  atomic_uintptr_t instrumented_ranges_count_;$/;"	m	class:__sanitizer::LibIgnore
int64_t	lib/builtins/fp_lib.h	35;"	d
int_alloc_cnt	lib/tsan/rtl/tsan_rtl.h	/^  u64 int_alloc_cnt[MBlockTypeCount];$/;"	m	struct:__tsan::Context
int_alloc_siz	lib/tsan/rtl/tsan_rtl.h	/^  u64 int_alloc_siz[MBlockTypeCount];$/;"	m	struct:__tsan::Context
int_signal_send	lib/tsan/rtl/tsan_interceptors.cc	/^  int int_signal_send;$/;"	m	struct:__tsan::ThreadSignalContext	file:
int_signal_send	lib/tsan/rtl/tsan_rtl.h	/^  int int_signal_send;$/;"	m	struct:__tsan::JmpBuf
int_sink	test/sanitizer_common/TestCases/Posix/weak_hook_test.cc	/^static volatile int int_sink;$/;"	v	file:
interceptWhenPossible	lib/sanitizer_common/sanitizer_win_weak_interception.cc	/^int interceptWhenPossible(uptr dll_function, const char *real_function) {$/;"	f	namespace:__sanitizer
interceptor_ctx	lib/tsan/rtl/tsan_interceptors.cc	/^InterceptorContext *interceptor_ctx() {$/;"	f	namespace:__tsan
interceptor_name	lib/asan/asan_interceptors_memintrinsics.h	/^  const char *interceptor_name;$/;"	m	struct:__asan::AsanInterceptorContext
interceptor_placeholder	lib/tsan/rtl/tsan_interceptors.cc	/^static ALIGNED(64) char interceptor_placeholder[sizeof(InterceptorContext)];$/;"	m	namespace:__tsan	file:
interceptors_inited	lib/cfi/cfi.cc	/^static bool interceptors_inited = false;$/;"	v	file:
interceptors_inited	lib/safestack/safestack.cc	/^static bool interceptors_inited = false;$/;"	v	file:
interesting_sizes	lib/tsan/tests/unit/tsan_clock_test.cc	/^static const uptr interesting_sizes[] = {0, 1, 2, 30, 61, 62, 63, 64, 65, 66,$/;"	m	namespace:__tsan	file:
intermediate_a	test/msan/dtor-multiple-inheritance-nontrivial-class-members.cc	/^  int intermediate_a;$/;"	m	struct:Intermediate	file:
intermediate_a_ptr	test/msan/dtor-multiple-inheritance-nontrivial-class-members.cc	/^  int *intermediate_a_ptr;$/;"	m	struct:VirtualBase	file:
internal	lib/sanitizer_common/sanitizer_mac.cc	/^  mach_vm_size_t internal;$/;"	m	struct:__sanitizer::__sanitizer_task_vm_info	file:
internal__exit	lib/sanitizer_common/sanitizer_fuchsia.cc	/^void NORETURN internal__exit(int exitcode) { _zx_process_exit(exitcode); }$/;"	f	namespace:__sanitizer
internal__exit	lib/sanitizer_common/sanitizer_linux.cc	/^void internal__exit(int exitcode) {$/;"	f	namespace:__sanitizer
internal__exit	lib/sanitizer_common/sanitizer_mac.cc	/^void internal__exit(int exitcode) {$/;"	f	namespace:__sanitizer
internal__exit	lib/sanitizer_common/sanitizer_rtems.cc	/^void NORETURN internal__exit(int exitcode) {$/;"	f	namespace:__sanitizer
internal__exit	lib/sanitizer_common/sanitizer_win.cc	/^void internal__exit(int exitcode) {$/;"	f	namespace:__sanitizer
internal_alloc	lib/tsan/go/tsan_go.cc	/^void *internal_alloc(MBlockType typ, uptr sz) {$/;"	f	namespace:__tsan
internal_alloc	lib/tsan/rtl/tsan_mman.cc	/^void *internal_alloc(MBlockType typ, uptr sz) {$/;"	f	namespace:__tsan
internal_alloc_cache	lib/tsan/rtl/tsan_rtl.h	/^  InternalAllocatorCache internal_alloc_cache;$/;"	m	struct:__tsan::Processor
internal_alloc_init_mu	lib/sanitizer_common/sanitizer_allocator.cc	/^static StaticSpinMutex internal_alloc_init_mu;$/;"	m	namespace:__sanitizer	file:
internal_alloc_placeholder	lib/sanitizer_common/sanitizer_allocator.cc	/^static ALIGNED(64) char internal_alloc_placeholder[sizeof(InternalAllocator)];$/;"	m	namespace:__sanitizer	file:
internal_allocator	lib/sanitizer_common/sanitizer_allocator.cc	/^InternalAllocator *internal_allocator() {$/;"	f	namespace:__sanitizer
internal_allocator_cache	lib/sanitizer_common/sanitizer_allocator.cc	/^static InternalAllocatorCache internal_allocator_cache;$/;"	m	namespace:__sanitizer	file:
internal_allocator_cache_mu	lib/sanitizer_common/sanitizer_allocator.cc	/^static StaticSpinMutex internal_allocator_cache_mu;$/;"	m	namespace:__sanitizer	file:
internal_allocator_initialized	lib/sanitizer_common/sanitizer_allocator.cc	/^static atomic_uint8_t internal_allocator_initialized;$/;"	m	namespace:__sanitizer	file:
internal_atoll	lib/sanitizer_common/sanitizer_libc.cc	/^s64 internal_atoll(const char *nptr) {$/;"	f	namespace:__sanitizer
internal_clock_gettime	lib/sanitizer_common/sanitizer_linux.cc	/^uptr internal_clock_gettime(__sanitizer_clockid_t clk_id, void *tp) {$/;"	f	namespace:__sanitizer
internal_clock_gettime	lib/sanitizer_common/sanitizer_solaris.cc	/^uptr internal_clock_gettime(__sanitizer_clockid_t clk_id, void *tp) {$/;"	f	namespace:__sanitizer
internal_clone	lib/sanitizer_common/sanitizer_linux.cc	/^uptr internal_clone(int (*fn)(void *), void *child_stack, int flags, void *arg,$/;"	f	namespace:__sanitizer
internal_clone	lib/sanitizer_common/sanitizer_linux_s390.cc	/^uptr internal_clone(int (*fn)(void *), void *child_stack, int flags, void *arg,$/;"	f	namespace:__sanitizer
internal_close	lib/sanitizer_common/sanitizer_linux.cc	/^uptr internal_close(fd_t fd) {$/;"	f	namespace:__sanitizer
internal_close	lib/sanitizer_common/sanitizer_mac.cc	/^uptr internal_close(fd_t fd) {$/;"	f	namespace:__sanitizer
internal_deadlock_detector	lib/tsan/rtl/tsan_rtl.h	/^  InternalDeadlockDetector internal_deadlock_detector;$/;"	m	struct:__tsan::ThreadState
internal_dup2	lib/sanitizer_common/sanitizer_linux.cc	/^uptr internal_dup2(int oldfd, int newfd) {$/;"	f	namespace:__sanitizer
internal_dup2	lib/sanitizer_common/sanitizer_mac.cc	/^uptr internal_dup2(int oldfd, int newfd) {$/;"	f	namespace:__sanitizer
internal_execve	lib/sanitizer_common/sanitizer_linux.cc	/^uptr internal_execve(const char *filename, char *const argv[],$/;"	f	namespace:__sanitizer
internal_execve	lib/sanitizer_common/sanitizer_mac.cc	/^uptr internal_execve(const char *filename, char *const argv[],$/;"	f	namespace:__sanitizer
internal_filesize	lib/sanitizer_common/sanitizer_linux.cc	/^uptr internal_filesize(fd_t fd) {$/;"	f	namespace:__sanitizer
internal_filesize	lib/sanitizer_common/sanitizer_mac.cc	/^uptr internal_filesize(fd_t fd) {$/;"	f	namespace:__sanitizer
internal_filesize	lib/sanitizer_common/sanitizer_solaris.cc	/^uptr internal_filesize(fd_t fd) {$/;"	f	namespace:__sanitizer
internal_fork	lib/sanitizer_common/sanitizer_linux.cc	/^int internal_fork() {$/;"	f	namespace:__sanitizer
internal_fork	lib/sanitizer_common/sanitizer_mac.cc	/^int internal_fork() {$/;"	f	namespace:__sanitizer
internal_forkpty	lib/sanitizer_common/sanitizer_mac.cc	/^int internal_forkpty(int *amaster) {$/;"	f	namespace:__sanitizer
internal_free	lib/tsan/go/tsan_go.cc	/^void internal_free(void *p) {$/;"	f	namespace:__tsan
internal_free	lib/tsan/rtl/tsan_mman.cc	/^void internal_free(void *p) {$/;"	f	namespace:__tsan
internal_fstat	lib/sanitizer_common/sanitizer_linux.cc	/^uptr internal_fstat(fd_t fd, void *buf) {$/;"	f	namespace:__sanitizer
internal_fstat	lib/sanitizer_common/sanitizer_mac.cc	/^uptr internal_fstat(fd_t fd, void *buf) {$/;"	f	namespace:__sanitizer
internal_ftruncate	lib/sanitizer_common/sanitizer_linux.cc	/^uptr internal_ftruncate(fd_t fd, uptr size) {$/;"	f	namespace:__sanitizer
internal_ftruncate	lib/sanitizer_common/sanitizer_mac.cc	/^uptr internal_ftruncate(fd_t fd, uptr size) {$/;"	f	namespace:__sanitizer
internal_ftruncate	lib/sanitizer_common/sanitizer_win.cc	/^uptr internal_ftruncate(fd_t fd, uptr size) {$/;"	f	namespace:__sanitizer
internal_getdents	lib/sanitizer_common/sanitizer_linux.cc	/^uptr internal_getdents(fd_t fd, struct linux_dirent *dirp, unsigned int count) {$/;"	f	namespace:__sanitizer
internal_getpid	lib/sanitizer_common/sanitizer_fuchsia.cc	/^uptr internal_getpid() {$/;"	f	namespace:__sanitizer
internal_getpid	lib/sanitizer_common/sanitizer_linux.cc	/^uptr internal_getpid() {$/;"	f	namespace:__sanitizer
internal_getpid	lib/sanitizer_common/sanitizer_mac.cc	/^uptr internal_getpid() {$/;"	f	namespace:__sanitizer
internal_getpid	lib/sanitizer_common/sanitizer_rtems.cc	/^uptr internal_getpid() {$/;"	f	namespace:__sanitizer
internal_getpid	lib/sanitizer_common/sanitizer_win.cc	/^uptr internal_getpid() {$/;"	f	namespace:__sanitizer
internal_getppid	lib/sanitizer_common/sanitizer_linux.cc	/^uptr internal_getppid() {$/;"	f	namespace:__sanitizer
internal_join_thread	lib/sanitizer_common/sanitizer_linux.cc	/^void internal_join_thread(void *th) {$/;"	f	namespace:__sanitizer
internal_join_thread	lib/sanitizer_common/sanitizer_linux.cc	/^void internal_join_thread(void *th) {}$/;"	f	namespace:__sanitizer
internal_join_thread	lib/sanitizer_common/sanitizer_mac.cc	/^void internal_join_thread(void *th) { pthread_join((pthread_t)th, 0); }$/;"	f	namespace:__sanitizer
internal_join_thread	lib/sanitizer_common/sanitizer_win.cc	/^void internal_join_thread(void *th) { }$/;"	f	namespace:__sanitizer
internal_lseek	lib/sanitizer_common/sanitizer_linux.cc	/^uptr internal_lseek(fd_t fd, OFF_T offset, int whence) {$/;"	f	namespace:__sanitizer
internal_lstat	lib/sanitizer_common/sanitizer_linux.cc	/^uptr internal_lstat(const char *path, void *buf) {$/;"	f	namespace:__sanitizer
internal_lstat	lib/sanitizer_common/sanitizer_mac.cc	/^uptr internal_lstat(const char *path, void *buf) {$/;"	f	namespace:__sanitizer
internal_memchr	lib/sanitizer_common/sanitizer_libc.cc	/^void *internal_memchr(const void *s, int c, uptr n) {$/;"	f	namespace:__sanitizer
internal_memcmp	lib/sanitizer_common/sanitizer_libc.cc	/^int internal_memcmp(const void* s1, const void* s2, uptr n) {$/;"	f	namespace:__sanitizer
internal_memcpy	lib/sanitizer_common/sanitizer_libc.cc	/^void *internal_memcpy(void *dest, const void *src, uptr n) {$/;"	f	namespace:__sanitizer
internal_memmove	lib/sanitizer_common/sanitizer_libc.cc	/^void *internal_memmove(void *dest, const void *src, uptr n) {$/;"	f	namespace:__sanitizer
internal_memrchr	lib/sanitizer_common/sanitizer_libc.cc	/^void *internal_memrchr(const void *s, int c, uptr n) {$/;"	f	namespace:__sanitizer
internal_memset	lib/sanitizer_common/sanitizer_libc.cc	/^void *internal_memset(void* s, int c, uptr n) {$/;"	f	namespace:__sanitizer
internal_mmap	lib/sanitizer_common/sanitizer_linux.cc	/^uptr internal_mmap(void *addr, uptr length, int prot, int flags, int fd,$/;"	f	namespace:__sanitizer
internal_mmap	lib/sanitizer_common/sanitizer_linux_s390.cc	/^uptr internal_mmap(void *addr, uptr length, int prot, int flags, int fd,$/;"	f	namespace:__sanitizer
internal_mmap	lib/sanitizer_common/sanitizer_mac.cc	/^uptr internal_mmap(void *addr, size_t length, int prot, int flags,$/;"	f	namespace:__sanitizer
internal_mmap	lib/sanitizer_common/sanitizer_openbsd.cc	/^uptr internal_mmap(void *addr, size_t length, int prot, int flags, int fd,$/;"	f	namespace:__sanitizer
internal_mprotect	lib/sanitizer_common/sanitizer_linux.cc	/^int internal_mprotect(void *addr, uptr length, int prot) {$/;"	f	namespace:__sanitizer
internal_mprotect	lib/sanitizer_common/sanitizer_mac.cc	/^int internal_mprotect(void *addr, uptr length, int prot) {$/;"	f	namespace:__sanitizer
internal_mprotect	lib/sanitizer_common/sanitizer_openbsd.cc	/^int internal_mprotect(void *addr, uptr length, int prot) {$/;"	f	namespace:__sanitizer
internal_munmap	lib/sanitizer_common/sanitizer_linux.cc	/^uptr internal_munmap(void *addr, uptr length) {$/;"	f	namespace:__sanitizer
internal_munmap	lib/sanitizer_common/sanitizer_mac.cc	/^uptr internal_munmap(void *addr, uptr length) {$/;"	f	namespace:__sanitizer
internal_munmap	lib/sanitizer_common/sanitizer_openbsd.cc	/^uptr internal_munmap(void *addr, uptr length) { return munmap(addr, length); }$/;"	f	namespace:__sanitizer
internal_nanosleep	lib/sanitizer_common/sanitizer_fuchsia.cc	/^static void internal_nanosleep(zx_time_t ns) {$/;"	f	namespace:__sanitizer
internal_open	lib/sanitizer_common/sanitizer_linux.cc	/^uptr internal_open(const char *filename, int flags) {$/;"	f	namespace:__sanitizer
internal_open	lib/sanitizer_common/sanitizer_linux.cc	/^uptr internal_open(const char *filename, int flags, u32 mode) {$/;"	f	namespace:__sanitizer
internal_open	lib/sanitizer_common/sanitizer_mac.cc	/^uptr internal_open(const char *filename, int flags) {$/;"	f	namespace:__sanitizer
internal_open	lib/sanitizer_common/sanitizer_mac.cc	/^uptr internal_open(const char *filename, int flags, u32 mode) {$/;"	f	namespace:__sanitizer
internal_open	lib/sanitizer_common/sanitizer_solaris.cc	/^uptr internal_open(const char *filename, int flags) {$/;"	f	namespace:__sanitizer
internal_open	lib/sanitizer_common/sanitizer_solaris.cc	/^uptr internal_open(const char *filename, int flags, u32 mode) {$/;"	f	namespace:__sanitizer
internal_peak	lib/sanitizer_common/sanitizer_mac.cc	/^  mach_vm_size_t internal_peak;$/;"	m	struct:__sanitizer::__sanitizer_task_vm_info	file:
internal_prctl	lib/sanitizer_common/sanitizer_linux.cc	/^uptr internal_prctl(int option, uptr arg2, uptr arg3, uptr arg4, uptr arg5) {$/;"	f	namespace:__sanitizer
internal_ptrace	lib/sanitizer_common/sanitizer_linux.cc	/^uptr internal_ptrace(int request, int pid, void *addr, void *data) {$/;"	f	namespace:__sanitizer
internal_read	lib/sanitizer_common/sanitizer_linux.cc	/^uptr internal_read(fd_t fd, void *buf, uptr count) {$/;"	f	namespace:__sanitizer
internal_read	lib/sanitizer_common/sanitizer_mac.cc	/^uptr internal_read(fd_t fd, void *buf, uptr count) {$/;"	f	namespace:__sanitizer
internal_readlink	lib/sanitizer_common/sanitizer_linux.cc	/^uptr internal_readlink(const char *path, char *buf, uptr bufsize) {$/;"	f	namespace:__sanitizer
internal_readlink	lib/sanitizer_common/sanitizer_mac.cc	/^uptr internal_readlink(const char *path, char *buf, uptr bufsize) {$/;"	f	namespace:__sanitizer
internal_rename	lib/sanitizer_common/sanitizer_linux.cc	/^uptr internal_rename(const char *oldpath, const char *newpath) {$/;"	f	namespace:__sanitizer
internal_rename	lib/sanitizer_common/sanitizer_mac.cc	/^uptr internal_rename(const char *oldpath, const char *newpath) {$/;"	f	namespace:__sanitizer
internal_sched_yield	lib/sanitizer_common/sanitizer_fuchsia.cc	/^uptr internal_sched_yield() {$/;"	f	namespace:__sanitizer
internal_sched_yield	lib/sanitizer_common/sanitizer_linux.cc	/^uptr internal_sched_yield() {$/;"	f	namespace:__sanitizer
internal_sched_yield	lib/sanitizer_common/sanitizer_mac.cc	/^uptr internal_sched_yield() {$/;"	f	namespace:__sanitizer
internal_sched_yield	lib/sanitizer_common/sanitizer_rtems.cc	/^uptr internal_sched_yield() {$/;"	f	namespace:__sanitizer
internal_sched_yield	lib/sanitizer_common/sanitizer_win.cc	/^uptr internal_sched_yield() {$/;"	f	namespace:__sanitizer
internal_sigaction	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^int internal_sigaction(int signum, const void *act, void *oldact) {$/;"	f	namespace:__sanitizer
internal_sigaction	lib/sanitizer_common/sanitizer_mac.cc	/^int internal_sigaction(int signum, const void *act, void *oldact) {$/;"	f	namespace:__sanitizer
internal_sigaction_norestorer	lib/sanitizer_common/sanitizer_linux.cc	/^int internal_sigaction_norestorer(int signum, const void *act, void *oldact) {$/;"	f	namespace:__sanitizer
internal_sigaction_syscall	lib/sanitizer_common/sanitizer_linux.cc	/^int internal_sigaction_syscall(int signum, const void *act, void *oldact) {$/;"	f	namespace:__sanitizer
internal_sigaltstack	lib/sanitizer_common/sanitizer_linux.cc	/^uptr internal_sigaltstack(const void *ss, void *oss) {$/;"	f	namespace:__sanitizer
internal_sigdelset	lib/sanitizer_common/sanitizer_linux.cc	/^void internal_sigdelset(__sanitizer_sigset_t *set, int signum) {$/;"	f	namespace:__sanitizer
internal_sigemptyset	lib/sanitizer_common/sanitizer_linux.cc	/^void internal_sigemptyset(__sanitizer_sigset_t *set) {$/;"	f	namespace:__sanitizer
internal_sigfillset	lib/sanitizer_common/sanitizer_linux.cc	/^void internal_sigfillset(__sanitizer_sigset_t *set) {$/;"	f	namespace:__sanitizer
internal_sigfillset	lib/sanitizer_common/sanitizer_mac.cc	/^void internal_sigfillset(__sanitizer_sigset_t *set) { sigfillset(set); }$/;"	f	namespace:__sanitizer
internal_sigismember	lib/sanitizer_common/sanitizer_linux.cc	/^bool internal_sigismember(__sanitizer_sigset_t *set, int signum) {$/;"	f	namespace:__sanitizer
internal_sigprocmask	lib/sanitizer_common/sanitizer_linux.cc	/^uptr internal_sigprocmask(int how, __sanitizer_sigset_t *set,$/;"	f	namespace:__sanitizer
internal_sigprocmask	lib/sanitizer_common/sanitizer_mac.cc	/^uptr internal_sigprocmask(int how, __sanitizer_sigset_t *set,$/;"	f	namespace:__sanitizer
internal_sigreturn	lib/sanitizer_common/sanitizer_linux_mips64.S	/^internal_sigreturn:$/;"	l
internal_simple_strtoll	lib/sanitizer_common/sanitizer_libc.cc	/^s64 internal_simple_strtoll(const char *nptr, const char **endptr, int base) {$/;"	f	namespace:__sanitizer
internal_sleep	lib/sanitizer_common/sanitizer_fuchsia.cc	/^unsigned int internal_sleep(unsigned int seconds) {$/;"	f	namespace:__sanitizer
internal_sleep	lib/sanitizer_common/sanitizer_linux.cc	/^unsigned int internal_sleep(unsigned int seconds) {$/;"	f	namespace:__sanitizer
internal_sleep	lib/sanitizer_common/sanitizer_mac.cc	/^unsigned int internal_sleep(unsigned int seconds) {$/;"	f	namespace:__sanitizer
internal_snprintf	lib/sanitizer_common/sanitizer_printf.cc	/^int internal_snprintf(char *buffer, uptr length, const char *format, ...) {$/;"	f	namespace:__sanitizer
internal_start_thread	lib/sanitizer_common/sanitizer_linux.cc	/^void *internal_start_thread(void (*func)(void *), void *arg) { return 0; }$/;"	f	namespace:__sanitizer
internal_start_thread	lib/sanitizer_common/sanitizer_linux.cc	/^void *internal_start_thread(void(*func)(void *arg), void *arg) {$/;"	f	namespace:__sanitizer
internal_start_thread	lib/sanitizer_common/sanitizer_mac.cc	/^void *internal_start_thread(void(*func)(void *arg), void *arg) {$/;"	f	namespace:__sanitizer
internal_start_thread	lib/sanitizer_common/sanitizer_win.cc	/^void *internal_start_thread(void (*func)(void *arg), void *arg) { return 0; }$/;"	f	namespace:__sanitizer
internal_stat	lib/sanitizer_common/sanitizer_linux.cc	/^uptr internal_stat(const char *path, void *buf) {$/;"	f	namespace:__sanitizer
internal_stat	lib/sanitizer_common/sanitizer_mac.cc	/^uptr internal_stat(const char *path, void *buf) {$/;"	f	namespace:__sanitizer
internal_strchr	lib/sanitizer_common/sanitizer_libc.cc	/^char* internal_strchr(const char *s, int c) {$/;"	f	namespace:__sanitizer
internal_strchrnul	lib/sanitizer_common/sanitizer_libc.cc	/^char *internal_strchrnul(const char *s, int c) {$/;"	f	namespace:__sanitizer
internal_strcmp	lib/sanitizer_common/sanitizer_libc.cc	/^int internal_strcmp(const char *s1, const char *s2) {$/;"	f	namespace:__sanitizer
internal_strcspn	lib/sanitizer_common/sanitizer_libc.cc	/^uptr internal_strcspn(const char *s, const char *reject) {$/;"	f	namespace:__sanitizer
internal_strdup	lib/sanitizer_common/sanitizer_libc.cc	/^char* internal_strdup(const char *s) {$/;"	f	namespace:__sanitizer
internal_strlcat	lib/sanitizer_common/sanitizer_libc.cc	/^uptr internal_strlcat(char *dst, const char *src, uptr maxlen) {$/;"	f	namespace:__sanitizer
internal_strlcpy	lib/sanitizer_common/sanitizer_libc.cc	/^uptr internal_strlcpy(char *dst, const char *src, uptr maxlen) {$/;"	f	namespace:__sanitizer
internal_strlen	lib/sanitizer_common/sanitizer_libc.cc	/^uptr internal_strlen(const char *s) {$/;"	f	namespace:__sanitizer
internal_strncat	lib/sanitizer_common/sanitizer_libc.cc	/^char *internal_strncat(char *dst, const char *src, uptr n) {$/;"	f	namespace:__sanitizer
internal_strncmp	lib/sanitizer_common/sanitizer_libc.cc	/^int internal_strncmp(const char *s1, const char *s2, uptr n) {$/;"	f	namespace:__sanitizer
internal_strncpy	lib/sanitizer_common/sanitizer_libc.cc	/^char *internal_strncpy(char *dst, const char *src, uptr n) {$/;"	f	namespace:__sanitizer
internal_strnlen	lib/sanitizer_common/sanitizer_libc.cc	/^uptr internal_strnlen(const char *s, uptr maxlen) {$/;"	f	namespace:__sanitizer
internal_strrchr	lib/sanitizer_common/sanitizer_libc.cc	/^char *internal_strrchr(const char *s, int c) {$/;"	f	namespace:__sanitizer
internal_strstr	lib/sanitizer_common/sanitizer_libc.cc	/^char *internal_strstr(const char *haystack, const char *needle) {$/;"	f	namespace:__sanitizer
internal_unlink	lib/sanitizer_common/sanitizer_linux.cc	/^uptr internal_unlink(const char *path) {$/;"	f	namespace:__sanitizer
internal_unlink	lib/sanitizer_common/sanitizer_mac.cc	/^uptr internal_unlink(const char *path) {$/;"	f	namespace:__sanitizer
internal_waitpid	lib/sanitizer_common/sanitizer_linux.cc	/^uptr internal_waitpid(int pid, int *status, int options) {$/;"	f	namespace:__sanitizer
internal_waitpid	lib/sanitizer_common/sanitizer_mac.cc	/^uptr internal_waitpid(int pid, int *status, int options) {$/;"	f	namespace:__sanitizer
internal_write	lib/sanitizer_common/sanitizer_linux.cc	/^uptr internal_write(fd_t fd, const void *buf, uptr count) {$/;"	f	namespace:__sanitizer
internal_write	lib/sanitizer_common/sanitizer_mac.cc	/^uptr internal_write(fd_t fd, const void *buf, uptr count) {$/;"	f	namespace:__sanitizer
interpose_substitution	lib/interception/interception.h	/^struct interpose_substitution {$/;"	s
intersectsWith	lib/sanitizer_common/sanitizer_bitvector.h	/^  bool intersectsWith(const BasicBitVector &v) const {$/;"	f	class:__sanitizer::BasicBitVector
intersectsWith	lib/sanitizer_common/sanitizer_bitvector.h	/^  bool intersectsWith(const TwoLevelBitVector &v) const {$/;"	f	class:__sanitizer::TwoLevelBitVector
intervalInCycles	test/builtins/timing/timing.h	/^double intervalInCycles( uint64_t startTime, uint64_t endTime )$/;"	f
intmax	test/ubsan/TestCases/Integer/div-zero.cpp	/^typedef __int128 intmax;$/;"	t	file:
intmax	test/ubsan/TestCases/Integer/div-zero.cpp	/^typedef long long intmax;$/;"	t	file:
invalid_threads_	lib/sanitizer_common/sanitizer_thread_registry.h	/^  IntrusiveList<ThreadContextBase> invalid_threads_;$/;"	m	class:__sanitizer::ThreadRegistry
invisible_barrier_t	test/tsan/test.h	/^typedef unsigned long long invisible_barrier_t;$/;"	t
invoke	lib/BlocksRuntime/Block_private.h	/^    void (*invoke)(void *, ...);$/;"	m	struct:Block_layout
invoke_and_release_block	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^static void invoke_and_release_block(void *param) {$/;"	f	namespace:__tsan
invoke_block	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^static void invoke_block(void *param) {$/;"	f	namespace:__tsan
invoke_free_hook	lib/tsan/rtl/tsan_mman.cc	/^void invoke_free_hook(void *ptr) {$/;"	f	namespace:__tsan
invoke_malloc_hook	lib/tsan/rtl/tsan_mman.cc	/^void invoke_malloc_hook(void *ptr, uptr size) {$/;"	f	namespace:__tsan
io_event	lib/sanitizer_common/sanitizer_platform_limits_linux.cc	/^CHECK_TYPE_SIZE(io_event);$/;"	v
iocb	lib/sanitizer_common/sanitizer_platform_limits_linux.cc	/^CHECK_TYPE_SIZE(iocb);$/;"	v
iocb_cmd_pread	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  const unsigned iocb_cmd_pread = 0;$/;"	m	namespace:__sanitizer
iocb_cmd_preadv	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  const unsigned iocb_cmd_preadv = 7;$/;"	m	namespace:__sanitizer
iocb_cmd_pwrite	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  const unsigned iocb_cmd_pwrite = 1;$/;"	m	namespace:__sanitizer
iocb_cmd_pwritev	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  const unsigned iocb_cmd_pwritev = 8;$/;"	m	namespace:__sanitizer
ioctl_static_initializer	lib/sanitizer_common/tests/sanitizer_ioctl_test.cc	/^} ioctl_static_initializer;$/;"	v	typeref:struct:IoctlInit	file:
iov_base	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  void *iov_base;$/;"	m	struct:__sanitizer::__sanitizer_iovec
iov_base	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  void *iov_base;$/;"	m	struct:__sanitizer::__sanitizer_iovec
iov_base	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    void *iov_base;$/;"	m	struct:__sanitizer::__sanitizer_iovec
iov_base	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  void *iov_base;$/;"	m	struct:__sanitizer::__sanitizer_iovec
iov_len	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  uptr iov_len;$/;"	m	struct:__sanitizer::__sanitizer_iovec
iov_len	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  uptr iov_len;$/;"	m	struct:__sanitizer::__sanitizer_iovec
iov_len	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    uptr iov_len;$/;"	m	struct:__sanitizer::__sanitizer_iovec
iov_len	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  uptr iov_len;$/;"	m	struct:__sanitizer::__sanitizer_iovec
iovec	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^CHECK_TYPE_SIZE(iovec);$/;"	v
iovec	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^CHECK_TYPE_SIZE(iovec);$/;"	v
iovec	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^CHECK_TYPE_SIZE(iovec);$/;"	v
iovec	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^CHECK_TYPE_SIZE(iovec);$/;"	v
ipc_perm	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^CHECK_TYPE_SIZE(ipc_perm);$/;"	v
ipc_perm	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^CHECK_TYPE_SIZE(ipc_perm);$/;"	v
ipc_perm	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^CHECK_TYPE_SIZE(ipc_perm);$/;"	v
ipc_perm	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^CHECK_TYPE_SIZE(ipc_perm);$/;"	v
iphdr	test/msan/pr32842.c	/^struct iphdr {$/;"	s	file:
isAligned	lib/scudo/scudo_allocator.cpp	/^  static INLINE bool isAligned(const void *Ptr) {$/;"	f	namespace:__scudo::Chunk
isAppMem	lib/esan/esan_shadow.h	/^bool isAppMem(uptr Mem) {$/;"	f	namespace:__esan
isChainedOrigin	lib/msan/msan_origin.h	/^  bool isChainedOrigin() const {$/;"	f	class:__msan::Origin
isCpuIdSupported	lib/builtins/cpu_model.c	/^static bool isCpuIdSupported() {$/;"	f	file:
isDerivedFromAtOffset	lib/ubsan/ubsan_type_hash_itanium.cc	/^static bool isDerivedFromAtOffset(const abi::__class_type_info *Derived,$/;"	f	file:
isDisabled	lib/ubsan/ubsan_value.h	/^  bool isDisabled() {$/;"	f	class:__ubsan::SourceLocation
isFloatTy	lib/ubsan/ubsan_value.h	/^  bool isFloatTy() const { return getKind() == TK_Float; }$/;"	f	class:__ubsan::TypeDescriptor
isGC	lib/BlocksRuntime/runtime.c	/^static bool isGC = false;$/;"	v	file:
isHeapOrigin	lib/msan/msan_origin.h	/^  bool isHeapOrigin() const {$/;"	f	class:__msan::Origin
isHeld	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  bool isHeld(DeadlockDetectorTLS<BV> *dtls, uptr node) const {$/;"	f	class:__sanitizer::DeadlockDetector
isInEarlyAllocBuf	lib/esan/esan_interceptors.cpp	/^static bool isInEarlyAllocBuf(const void *ptr) {$/;"	f	file:
isInlineFloat	lib/ubsan/ubsan_value.h	/^  bool isInlineFloat() const {$/;"	f	class:__ubsan::Value
isInlineInt	lib/ubsan/ubsan_value.h	/^  bool isInlineInt() const {$/;"	f	class:__ubsan::Value
isIntegerTy	lib/ubsan/ubsan_value.h	/^  bool isIntegerTy() const { return getKind() == TK_Integer; }$/;"	f	class:__ubsan::TypeDescriptor
isInvalid	lib/ubsan/ubsan_value.h	/^  bool isInvalid() const { return !Filename; }$/;"	f	class:__ubsan::SourceLocation
isMemoryLocation	lib/ubsan/ubsan_diag.h	/^  bool isMemoryLocation() const { return Kind == LK_Memory; }$/;"	f	class:__ubsan::Location
isMinusOne	lib/ubsan/ubsan_value.h	/^  bool isMinusOne() const {$/;"	f	class:__ubsan::Value
isNegative	lib/ubsan/ubsan_value.h	/^  bool isNegative() const {$/;"	f	class:__ubsan::Value
isOutAndErrCombined	lib/fuzzer/FuzzerCommand.h	/^  bool isOutAndErrCombined() const { return CombinedOutAndErr; }$/;"	f	class:fuzzer::final
isReachable	lib/sanitizer_common/sanitizer_bvgraph.h	/^  bool isReachable(uptr from, const BV &targets) {$/;"	f	class:__sanitizer::BVGraph
isRssLimitExceeded	lib/scudo/scudo_allocator.cpp	/^NOINLINE bool Allocator::isRssLimitExceeded() {$/;"	f	class:__scudo::Allocator
isShadowMem	lib/esan/esan_shadow.h	/^bool isShadowMem(uptr Mem) {$/;"	f	namespace:__esan
isSignedIntegerTy	lib/ubsan/ubsan_value.h	/^  bool isSignedIntegerTy() const {$/;"	f	class:__ubsan::TypeDescriptor
isSourceLocation	lib/ubsan/ubsan_diag.h	/^  bool isSourceLocation() const { return Kind == LK_Source; }$/;"	f	class:__ubsan::Location
isStackOrigin	lib/msan/msan_origin.h	/^  bool isStackOrigin() const {$/;"	f	class:__msan::Origin
isSymbolizedStack	lib/ubsan/ubsan_diag.h	/^  bool isSymbolizedStack() const { return Kind == LK_Symbolized; }$/;"	f	class:__ubsan::Location
isUnsignedIntegerTy	lib/ubsan/ubsan_value.h	/^  bool isUnsignedIntegerTy() const {$/;"	f	class:__ubsan::TypeDescriptor
isUnwinding	lib/asan/asan_thread.h	/^  bool isUnwinding() const { return unwinding_; }$/;"	f	class:__asan::AsanThread
isValid	lib/scudo/scudo_allocator.cpp	/^  static INLINE bool isValid(const void *Ptr) {$/;"	f	namespace:__scudo::Chunk
isValid	lib/ubsan/ubsan_type_hash.h	/^  bool isValid() const { return MostDerivedTypeName; }$/;"	f	class:__ubsan::DynamicTypeInfo
isValidId	lib/msan/msan_origin.h	/^  static bool isValidId(u32 id) { return id != 0 && id != (u32)-1; }$/;"	f	class:__msan::Origin
isValidPointer	lib/scudo/scudo_allocator.cpp	/^  bool isValidPointer(const void *Ptr) {$/;"	f	struct:__scudo::Allocator
is_64bit	test/sanitizer_common/android_commands/android_run.py	/^is_64bit = (subprocess.check_output(['file', sys.argv[0] + '.real']).find('64-bit') != -1)$/;"	v
is_barrier_block	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^  bool is_barrier_block;$/;"	m	struct:__tsan::__anon19	file:
is_dbghelp_initialized	lib/sanitizer_common/sanitizer_symbolizer_win.cc	/^bool is_dbghelp_initialized = false;$/;"	m	namespace:__sanitizer::__anon77	file:
is_dead	lib/tsan/rtl/tsan_rtl.h	/^  bool is_dead;$/;"	m	struct:__tsan::ThreadState
is_detached	lib/sanitizer_common/tests/sanitizer_thread_registry_test.cc	/^static bool is_detached(u32 tid) {$/;"	f	namespace:__sanitizer
is_directly_leaked	lib/lsan/lsan_common.h	/^  bool is_directly_leaked;$/;"	m	struct:__lsan::Leak
is_freeing	lib/tsan/rtl/tsan_rtl.h	/^  bool is_freeing;$/;"	m	struct:__tsan::ThreadState
is_image_relative	lib/ubsan/ubsan_type_hash_win.cc	/^  int is_image_relative;$/;"	m	struct:CompleteObjectLocator	file:
is_image_relative	lib/ubsan/ubsan_type_hash_win.cc	/^  int is_image_relative;$/;"	m	struct:CompleteObjectLocatorAbs	file:
is_in_symbolizer	lib/msan/msan.cc	/^static THREADLOCAL int is_in_symbolizer;$/;"	v	file:
is_inited	lib/tsan/rtl/tsan_rtl.h	/^  bool is_inited;$/;"	m	struct:__tsan::ThreadState
is_initialized	lib/ubsan/ubsan_signals_standalone.cc	/^static bool is_initialized = false;$/;"	m	namespace:__ubsan	file:
is_invalid	lib/cfi/cfi.cc	/^  bool is_invalid() const { return v == kInvalidShadow; }$/;"	f	class:__cfi::ShadowValue
is_load	lib/hwasan/hwasan_linux.cc	/^  bool is_load;$/;"	m	struct:__hwasan::AccessInfo	file:
is_long	test/asan/TestCases/speculative_load.cc	/^  bool is_long() const {$/;"	f	struct:S
is_memory_access	lib/sanitizer_common/sanitizer_common.h	/^  bool is_memory_access;$/;"	m	struct:__sanitizer::SignalContext
is_registered	lib/asan/asan_interceptors.cc	/^  atomic_uintptr_t is_registered;$/;"	m	struct:ThreadStartParam	file:
is_space	lib/sanitizer_common/sanitizer_flag_parser.cc	/^bool FlagParser::is_space(char c) {$/;"	f	class:__sanitizer::FlagParser
is_store	lib/hwasan/hwasan_linux.cc	/^  bool is_store;$/;"	m	struct:__hwasan::AccessInfo	file:
is_suppressed	lib/lsan/lsan_common.h	/^  bool is_suppressed;$/;"	m	struct:__lsan::Leak
is_sync_signal	lib/tsan/rtl/tsan_interceptors.cc	/^static bool is_sync_signal(ThreadSignalContext *sctx, int sig) {$/;"	f	file:
is_unchecked	lib/cfi/cfi.cc	/^  bool is_unchecked() const { return v == kUncheckedShadow; }$/;"	f	class:__cfi::ShadowValue
is_valid	lib/msan/msan_chained_origin_depot.cc	/^  static bool is_valid(const args_type &args) { return true; }$/;"	f	struct:__msan::ChainedOriginDepotNode
is_valid	lib/sanitizer_common/sanitizer_stackdepot.cc	/^  static bool is_valid(const args_type &args) {$/;"	f	struct:__sanitizer::StackDepotNode
is_valid_arch	lib/asan/scripts/asan_symbolize.py	/^def is_valid_arch(s):$/;"	f
is_vptr_access	lib/tsan/rtl/tsan_rtl.h	/^  bool is_vptr_access;$/;"	m	struct:__tsan::ThreadState
is_write	lib/asan/asan_errors.h	/^  bool is_write;$/;"	m	struct:__asan::ErrorGeneric
isa	lib/BlocksRuntime/Block_private.h	/^    void *isa;$/;"	m	struct:Block_basic
isa	lib/BlocksRuntime/Block_private.h	/^    void *isa;$/;"	m	struct:Block_byref
isa	lib/BlocksRuntime/Block_private.h	/^    void *isa;$/;"	m	struct:Block_byref_header
isa	lib/BlocksRuntime/Block_private.h	/^    void *isa;$/;"	m	struct:Block_layout
isa	test/BlocksRuntime/byrefsanity.c	/^    void *isa;$/;"	m	struct:Block_basic2	file:
isa	test/BlocksRuntime/objectRRGC.c	/^    long isa;$/;"	m	struct:MyStruct	file:
isa	test/BlocksRuntime/objectassign.c	/^    long isa;$/;"	m	struct:MyStruct	file:
isa	test/asan/TestCases/Darwin/scribble.cc	/^  Isa *isa;$/;"	m	struct:MyClass	file:
it1_	lib/sanitizer_common/sanitizer_bitvector.h	/^    typename BV::Iterator it1_, it2_;$/;"	m	class:__sanitizer::TwoLevelBitVector::Iterator
it2_	lib/sanitizer_common/sanitizer_bitvector.h	/^    typename BV::Iterator it1_, it2_;$/;"	m	class:__sanitizer::TwoLevelBitVector::Iterator
it_interval	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  struct __sanitizer_timeval it_interval;$/;"	m	struct:__sanitizer::__sanitizer_itimerval	typeref:struct:__sanitizer::__sanitizer_itimerval::__sanitizer_timeval
it_interval	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  struct __sanitizer_timeval it_interval;$/;"	m	struct:__sanitizer::__sanitizer_itimerval	typeref:struct:__sanitizer::__sanitizer_itimerval::__sanitizer_timeval
it_interval	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    struct __sanitizer_timeval it_interval;$/;"	m	struct:__sanitizer::__sanitizer_itimerval	typeref:struct:__sanitizer::__sanitizer_itimerval::__sanitizer_timeval
it_interval	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  struct __sanitizer_timeval it_interval;$/;"	m	struct:__sanitizer::__sanitizer_itimerval	typeref:struct:__sanitizer::__sanitizer_itimerval::__sanitizer_timeval
it_value	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  struct __sanitizer_timeval it_value;$/;"	m	struct:__sanitizer::__sanitizer_itimerval	typeref:struct:__sanitizer::__sanitizer_itimerval::__sanitizer_timeval
it_value	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  struct __sanitizer_timeval it_value;$/;"	m	struct:__sanitizer::__sanitizer_itimerval	typeref:struct:__sanitizer::__sanitizer_itimerval::__sanitizer_timeval
it_value	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    struct __sanitizer_timeval it_value;$/;"	m	struct:__sanitizer::__sanitizer_itimerval	typeref:struct:__sanitizer::__sanitizer_itimerval::__sanitizer_timeval
it_value	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  struct __sanitizer_timeval it_value;$/;"	m	struct:__sanitizer::__sanitizer_itimerval	typeref:struct:__sanitizer::__sanitizer_itimerval::__sanitizer_timeval
iter_	lib/tsan/rtl/tsan_mutex.cc	/^  int iter_;$/;"	m	class:__tsan::Backoff	file:
iter_count	test/tsan/deadlock_detector_stress_test.cc	/^static int iter_count = 100000;$/;"	v	file:
iterator	lib/esan/esan_hashtable.h	/^    iterator($/;"	f	class:__esan::HashTable::iterator
iterator	lib/esan/esan_hashtable.h	/^  class iterator {$/;"	c	class:__esan::HashTable
iters	test/esan/TestCases/workingset-midreport.cpp	/^const int iters = 6;$/;"	v
j	test/cfi/utils.h	/^  virtual void j() {}$/;"	f	struct:Deriver
j_label	test/dfsan/custom.cc	/^dfsan_label j_label = 0;$/;"	v
jctx	lib/tsan/rtl/tsan_interface_java.cc	/^static JavaContext *jctx;$/;"	m	namespace:__tsan	file:
jctx_buf	lib/tsan/rtl/tsan_interface_java.cc	/^static u64 jctx_buf[sizeof(JavaContext) \/ sizeof(u64) + 1];$/;"	m	namespace:__tsan	file:
jenv	test/asan/TestCases/Linux/longjmp_chk.c	/^static jmp_buf jenv;$/;"	v	file:
jmp_bufs	lib/tsan/rtl/tsan_rtl.h	/^  Vector<JmpBuf> jmp_bufs;$/;"	m	struct:__tsan::ThreadState
joinThread	lib/esan/esan_sideline_linux.cpp	/^bool SidelineThread::joinThread() {$/;"	f	class:__esan::SidelineThread
jptr	lib/tsan/rtl/tsan_interface_java.h	/^typedef unsigned long jptr;  \/\/ NOLINT$/;"	t
jptr	test/tsan/java.h	/^typedef unsigned long jptr;  \/\/ NOLINT$/;"	t
k	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^        k  = clb(lmant)$/;"	d
k	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^        k = add(k, #-1)$/;"	d
k	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define k          R4$/;"	d
k	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^        k  = clb(lmant)$/;"	d
k	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^        k = add(k, #-1)$/;"	d
k	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^#define k          R4$/;"	d
k	lib/builtins/hexagon/fastmath_dlib_asm.S	/^        k  = NORMAMT(manth)$/;"	d
k	lib/builtins/hexagon/fastmath_dlib_asm.S	/^        k  = normamt(mantch)$/;"	d
k	lib/builtins/hexagon/fastmath_dlib_asm.S	/^#define k          R4$/;"	d
k	test/cfi/utils.h	/^  virtual void k() {}$/;"	f	struct:Deriver
k	test/ubsan/TestCases/TypeCheck/misaligned.cpp	/^  int k;$/;"	m	struct:S	file:
k	test/ubsan/TestCases/TypeCheck/null.cpp	/^  int k;$/;"	m	struct:S	file:
kAArch64_ShadowOffset64	lib/asan/asan_mapping.h	/^static const u64 kAArch64_ShadowOffset64 = 1ULL << 36;$/;"	v
kAccessTypeInside	lib/asan/asan_descriptions.h	/^  kAccessTypeInside,$/;"	e	enum:__asan::AccessType
kAccessTypeLeft	lib/asan/asan_descriptions.h	/^  kAccessTypeLeft,$/;"	e	enum:__asan::AccessType
kAccessTypeRight	lib/asan/asan_descriptions.h	/^  kAccessTypeRight,$/;"	e	enum:__asan::AccessType
kAccessTypeUnknown	lib/asan/asan_descriptions.h	/^  kAccessTypeUnknown,  \/\/ This means we have an AddressSanitizer bug!$/;"	e	enum:__asan::AccessType
kActiveSpinCnt	lib/tsan/rtl/tsan_mutex.cc	/^  static const int kActiveSpinCnt = 20;$/;"	m	class:__tsan::Backoff	file:
kActiveSpinIters	lib/tsan/rtl/tsan_mutex.cc	/^  static const int kActiveSpinIters = 10;$/;"	m	class:__tsan::Backoff	file:
kAddressKindGlobal	lib/asan/asan_descriptions.h	/^  kAddressKindGlobal,$/;"	e	enum:__asan::AddressKind
kAddressKindHeap	lib/asan/asan_descriptions.h	/^  kAddressKindHeap,$/;"	e	enum:__asan::AddressKind
kAddressKindShadow	lib/asan/asan_descriptions.h	/^  kAddressKindShadow,$/;"	e	enum:__asan::AddressKind
kAddressKindStack	lib/asan/asan_descriptions.h	/^  kAddressKindStack,$/;"	e	enum:__asan::AddressKind
kAddressKindWild	lib/asan/asan_descriptions.h	/^  kAddressKindWild,$/;"	e	enum:__asan::AddressKind
kAddressLength	lib/interception/interception_win.cc	/^static const int kAddressLength = FIRST_32_SECOND_64(4, 8);$/;"	m	namespace:__interception	file:
kAddressSpaceSize	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^static const u64 kAddressSpaceSize = 1ULL << 47;$/;"	v	file:
kAddressTagMask	lib/hwasan/hwasan.h	/^const uptr kAddressTagMask = 0xFFUL << kAddressTagShift;$/;"	v
kAddressTagShift	lib/hwasan/hwasan.h	/^const unsigned kAddressTagShift = 56;$/;"	v
kAllocBegMagic	lib/asan/asan_allocator.cc	/^static const uptr kAllocBegMagic = 0xCC6E96B9;$/;"	m	namespace:__asan	file:
kAllocSize	lib/sanitizer_common/tests/malloc_stress_transfer_test.cc	/^const size_t kAllocSize = 16;$/;"	v
kAllocSize	test/asan/TestCases/Linux/nohugepage_test.cc	/^const int kAllocSize = 1 << 28;  \/\/ 256Mb$/;"	v
kAllocSize	test/asan/TestCases/Linux/quarantine_size_mb.cc	/^static const int kAllocSize = 1 << 20;$/;"	v	file:
kAllocSize	test/asan/TestCases/Linux/thread_local_quarantine_pthread_join.cc	/^static const int kAllocSize = 1;$/;"	v	file:
kAllocSize	test/asan/TestCases/Linux/thread_local_quarantine_size_kb.cc	/^static const int kAllocSize = 256;$/;"	v	file:
kAllocSize	test/sanitizer_common/TestCases/Linux/hard_rss_limit_mb_test.cc	/^const int kAllocSize = 1000;$/;"	v
kAllocSize	test/sanitizer_common/TestCases/Linux/soft_rss_limit_mb_test.cc	/^static const int kAllocSize = 1 << 20;  \/\/ Large enough to go via mmap.$/;"	v	file:
kAllocSize	test/scudo/rss.c	/^static const size_t kAllocSize = 1 << 20;  \/\/ 1MB.$/;"	v	file:
kAllocaRedzoneMask	lib/asan/asan_fake_stack.cc	/^static const u64 kAllocaRedzoneMask = 31UL;$/;"	m	namespace:__asan	file:
kAllocaRedzoneSize	lib/asan/asan_fake_stack.cc	/^static const u64 kAllocaRedzoneSize = 32UL;$/;"	m	namespace:__asan	file:
kAllocatedPointersSize	test/fuzzer/AccumulateAllocationsTest.cpp	/^const int kAllocatedPointersSize = 10000;$/;"	v
kAllocatorNumRegions	lib/tsan/rtl/tsan_rtl.h	/^static const uptr kAllocatorNumRegions =$/;"	m	namespace:__tsan
kAllocatorRegionSizeLog	lib/tsan/rtl/tsan_rtl.h	/^static const uptr kAllocatorRegionSizeLog = 20;$/;"	m	namespace:__tsan
kAllocatorSize	lib/asan/asan_allocator.h	/^const uptr kAllocatorSize  =  0x10000000000ULL;  \/\/ 3T.$/;"	m	namespace:__asan
kAllocatorSize	lib/asan/asan_allocator.h	/^const uptr kAllocatorSize  =  0x20000000000ULL;  \/\/ 2T.$/;"	m	namespace:__asan
kAllocatorSize	lib/asan/asan_allocator.h	/^const uptr kAllocatorSize  =  0x2000000000ULL;  \/\/ 128G.$/;"	m	namespace:__asan
kAllocatorSize	lib/asan/asan_allocator.h	/^const uptr kAllocatorSize  =  0x40000000000ULL;  \/\/ 4T.$/;"	m	namespace:__asan
kAllocatorSize	lib/asan/asan_allocator.h	/^const uptr kAllocatorSize  =  0x8000000000ULL;  \/\/ 500G$/;"	m	namespace:__asan
kAllocatorSize	lib/lsan/lsan_allocator.h	/^const uptr kAllocatorSize  = 0x20000000000ULL;  \/\/ 2T.$/;"	m	namespace:__lsan
kAllocatorSize	lib/lsan/lsan_allocator.h	/^const uptr kAllocatorSize  = 0x40000000000ULL;  \/\/ 4T.$/;"	m	namespace:__lsan
kAllocatorSize	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^static const uptr kAllocatorSize  =  0x8000000000ULL;  \/\/ 500G$/;"	v	file:
kAllocatorSize	lib/sanitizer_common/tests/sanitizer_allocator_testlib.cc	/^static const uptr kAllocatorSize  =  0x10000000000ULL;  \/\/ 1T.$/;"	v	file:
kAllocatorSpace	lib/asan/asan_allocator.h	/^const uptr kAllocatorSpace =  0x10000000000ULL;$/;"	m	namespace:__asan
kAllocatorSpace	lib/asan/asan_allocator.h	/^const uptr kAllocatorSpace =  ~(uptr)0;$/;"	m	namespace:__asan
kAllocatorSpace	lib/asan/asan_allocator.h	/^const uptr kAllocatorSpace = 0x600000000000ULL;$/;"	m	namespace:__asan
kAllocatorSpace	lib/asan/asan_allocator.h	/^const uptr kAllocatorSpace = ~(uptr)0;$/;"	m	namespace:__asan
kAllocatorSpace	lib/lsan/lsan_allocator.h	/^const uptr kAllocatorSpace = 0x600000000000ULL;$/;"	m	namespace:__lsan
kAllocatorSpace	lib/lsan/lsan_allocator.h	/^const uptr kAllocatorSpace = 0xa0000000000ULL;$/;"	m	namespace:__lsan
kAllocatorSpace	lib/msan/msan_allocator.cc	/^  static const uptr kAllocatorSpace = 0x600000000000ULL;$/;"	m	namespace:__msan	file:
kAllocatorSpace	lib/msan/msan_allocator.cc	/^  static const uptr kAllocatorSpace = 0x700000000000ULL;$/;"	m	namespace:__msan	file:
kAllocatorSpace	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^static const uptr kAllocatorSpace = ~(uptr)0;$/;"	v	file:
kAllocatorSpace	lib/sanitizer_common/tests/sanitizer_allocator_testlib.cc	/^static const uptr kAllocatorSpace = 0x600000000000ULL;$/;"	v	file:
kAltStackSize	lib/sanitizer_common/sanitizer_posix_libcdep.cc	/^static const uptr kAltStackSize = SIGSTKSZ * 4;  \/\/ SIGSTKSZ is not enough.$/;"	m	namespace:__sanitizer	file:
kAlwaysClearMemory	lib/lsan/lsan_allocator.h	/^const bool kAlwaysClearMemory = true;$/;"	m	namespace:__lsan
kAppAddr	lib/dfsan/dfsan_platform.h	/^  static const uptr kAppAddr = 0x700000008000;$/;"	m	struct:__dfsan::Mapping
kAppMemMsk	lib/tsan/rtl/tsan_platform.h	/^  static const uptr kAppMemMsk     = 0x780000000000ull;$/;"	m	struct:__tsan::Mapping
kAppMemXor	lib/tsan/rtl/tsan_platform.h	/^  static const uptr kAppMemXor     = 0x040000000000ull;$/;"	m	struct:__tsan::Mapping
kArgVMax	lib/sanitizer_common/sanitizer_symbolizer_internal.h	/^  enum { kArgVMax = 6 };$/;"	e	enum:__sanitizer::SymbolizerProcess::__anon87
kArraySize	test/fuzzer/LoadTest.cpp	/^const int kArraySize = 1234567;$/;"	v
kAsanAllocaLeftMagic	lib/asan/asan_internal.h	/^const int kAsanAllocaLeftMagic = 0xca;$/;"	m	namespace:__asan
kAsanAllocaRightMagic	lib/asan/asan_internal.h	/^const int kAsanAllocaRightMagic = 0xcb;$/;"	m	namespace:__asan
kAsanArrayCookieMagic	lib/asan/asan_internal.h	/^const int kAsanArrayCookieMagic = 0xac;$/;"	m	namespace:__asan
kAsanBuggyPcPoolSize	lib/asan/asan_report.cc	/^static const unsigned kAsanBuggyPcPoolSize = 25;$/;"	m	namespace:__asan	file:
kAsanContiguousContainerOOBMagic	lib/asan/asan_internal.h	/^const int kAsanContiguousContainerOOBMagic = 0xfc;$/;"	m	namespace:__asan
kAsanDefaultOptions	test/asan/TestCases/default_options.cc	/^const char *kAsanDefaultOptions="verbosity=1 help=1";$/;"	v
kAsanGlobalRedzoneMagic	lib/asan/asan_internal.h	/^const int kAsanGlobalRedzoneMagic = 0xf9;$/;"	m	namespace:__asan
kAsanHeapFreeMagic	lib/asan/asan_internal.h	/^const int kAsanHeapFreeMagic = 0xfd;$/;"	m	namespace:__asan
kAsanHeapLeftRedzoneMagic	lib/asan/asan_internal.h	/^const int kAsanHeapLeftRedzoneMagic = 0xfa;$/;"	m	namespace:__asan
kAsanInitializationOrderMagic	lib/asan/asan_internal.h	/^const int kAsanInitializationOrderMagic = 0xf6;$/;"	m	namespace:__asan
kAsanInternalHeapMagic	lib/asan/asan_internal.h	/^const int kAsanInternalHeapMagic = 0xfe;$/;"	m	namespace:__asan
kAsanIntraObjectRedzone	lib/asan/asan_internal.h	/^const int kAsanIntraObjectRedzone = 0xbb;$/;"	m	namespace:__asan
kAsanMappingProfileSize	lib/asan/asan_mapping.h	/^static const uptr kAsanMappingProfileSize = __LINE__;$/;"	m	namespace:__asan
kAsanShadowGap	lib/asan/asan_internal.h	/^const int kAsanShadowGap = 0xcc;$/;"	m	namespace:__asan
kAsanShadowGranularity	test/asan/TestCases/Linux/nohugepage_test.cc	/^const int kAsanShadowGranularity = 8;$/;"	v
kAsanStackAfterReturnMagic	lib/asan/asan_internal.h	/^const int kAsanStackAfterReturnMagic = 0xf5;$/;"	m	namespace:__asan
kAsanStackLeftRedzoneMagic	lib/asan/asan_internal.h	/^const int kAsanStackLeftRedzoneMagic = 0xf1;$/;"	m	namespace:__asan
kAsanStackMidRedzoneMagic	lib/asan/asan_internal.h	/^const int kAsanStackMidRedzoneMagic = 0xf2;$/;"	m	namespace:__asan
kAsanStackRightRedzoneMagic	lib/asan/asan_internal.h	/^const int kAsanStackRightRedzoneMagic = 0xf3;$/;"	m	namespace:__asan
kAsanStackUseAfterScopeMagic	lib/asan/asan_internal.h	/^const int kAsanStackUseAfterScopeMagic = 0xf8;$/;"	m	namespace:__asan
kAsanUserPoisonedMemoryMagic	lib/asan/asan_internal.h	/^const int kAsanUserPoisonedMemoryMagic = 0xf7;$/;"	m	namespace:__asan
kAtomicBit	lib/tsan/rtl/tsan_rtl.h	/^  static const u64 kAtomicBit   = 1ull << kAtomicShift;$/;"	m	class:__tsan::Shadow
kAtomicShift	lib/tsan/rtl/tsan_rtl.h	/^  static const u64 kAtomicShift = 6 + kClkBits;$/;"	m	class:__tsan::Shadow
kBatchClassID	lib/sanitizer_common/sanitizer_allocator_local_cache.h	/^  static const uptr kBatchClassID = SizeClassMap::kBatchClassID;$/;"	m	struct:SizeClassAllocator32LocalCache
kBatchClassID	lib/sanitizer_common/sanitizer_allocator_size_class_map.h	/^  static const uptr kBatchClassID = kNumClasses - 1;$/;"	m	class:SizeClassMap
kBatchSize	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^  static const uptr kBatchSize = sizeof(TransferBatch);$/;"	m	class:SizeClassAllocator32
kBitsInWord	lib/fuzzer/FuzzerValueBitMap.h	/^  static const size_t kBitsInWord = (sizeof(uintptr_t) * 8);$/;"	m	struct:fuzzer::ValueBitMap
kBlockIdx	lib/tsan/rtl/tsan_defs.h	/^  static const uptr kBlockIdx = kTableSize - 2;$/;"	m	struct:__tsan::ClockBlock
kBlockMagic	lib/sanitizer_common/sanitizer_allocator.cc	/^const u64 kBlockMagic = 0x6A6CB03ABCEBC041ull;$/;"	m	namespace:__sanitizer	file:
kBlockSize	lib/sanitizer_common/tests/sanitizer_quarantine_test.cc	/^static const size_t kBlockSize = 8;$/;"	m	namespace:__sanitizer	file:
kBranchLength	lib/interception/interception_win.cc	/^static const int kBranchLength =$/;"	m	namespace:__interception	file:
kBucketSize	lib/sanitizer_common/sanitizer_addrhashmap.h	/^  static const uptr kBucketSize = 3;$/;"	m	class:__sanitizer::AddrHashMap
kBufSize	test/asan/TestCases/Linux/recvfrom.cc	/^const int kBufSize = 10;$/;"	v
kBufSize	test/msan/Linux/cmsghdr.cc	/^const int kBufSize = 10;$/;"	v
kBufSize	test/msan/Linux/sendmsg.cc	/^const int kBufSize = 10;$/;"	v
kBufferMax	lib/xray/tests/unit/fdr_logging_test.cc	/^constexpr auto kBufferMax = 10;$/;"	m	namespace:__xray::__anon25	file:
kBufferMax	test/xray/TestCases/Posix/fdr-single-thread.cc	/^constexpr auto kBufferMax = 10;$/;"	v
kBufferMax	test/xray/TestCases/Posix/fdr-thread-order.cc	/^constexpr auto kBufferMax = 10;$/;"	v
kBufferSize	lib/sanitizer_common/sanitizer_symbolizer_internal.h	/^  static const uptr kBufferSize = 16 * 1024;$/;"	m	class:__sanitizer::LLVMSymbolizer
kBufferSize	lib/sanitizer_common/sanitizer_symbolizer_internal.h	/^  static const uptr kBufferSize = 16 * 1024;$/;"	m	class:__sanitizer::SymbolizerProcess
kBufferSize	lib/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc	/^  static const int kBufferSize = 16 * 1024;$/;"	m	class:__sanitizer::InternalSymbolizer	file:
kBufferSize	lib/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc	/^  static const uptr kBufferSize = 64;$/;"	m	class:__sanitizer::Addr2LinePool	file:
kBufferSize	lib/xray/tests/unit/fdr_logging_test.cc	/^constexpr auto kBufferSize = 16384;$/;"	m	namespace:__xray::__anon25	file:
kBufferSize	test/safestack/pthread-cleanup.c	/^enum { kBufferSize = (1 << 15) };$/;"	e	enum:__anon129	file:
kBufferSize	test/xray/TestCases/Posix/fdr-single-thread.cc	/^constexpr auto kBufferSize = 16384;$/;"	v
kBufferSize	test/xray/TestCases/Posix/fdr-thread-order.cc	/^constexpr auto kBufferSize = 16384;$/;"	v
kCacheLineSize	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^  COMPILER_CHECK(sizeof(SizeClassInfo) % kCacheLineSize == 0);$/;"	m	class:SizeClassAllocator32
kCacheLineSize	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  COMPILER_CHECK(sizeof(RegionInfo) % kCacheLineSize == 0);$/;"	m	class:SizeClassAllocator64
kCacheLineSize	lib/sanitizer_common/sanitizer_common.h	/^const uptr kCacheLineSize = SANITIZER_CACHE_LINE_SIZE;$/;"	m	namespace:__sanitizer
kCfiShadowLimitsStorageSize	lib/cfi/cfi.cc	37;"	d	file:
kChainedIdMask	lib/msan/msan_origin.h	/^  static const u32 kChainedIdMask = ((u32)-1) >> (32 - kDepthShift);$/;"	m	class:__msan::Origin
kChars	test/asan/TestCases/Posix/strndup_oob_test2.cc	/^char kChars[] = { 'f', 'o', 'o' };$/;"	v
kChunkHeader2Size	lib/asan/asan_allocator.cc	/^static const uptr kChunkHeader2Size = sizeof(ChunkBase) - kChunkHeaderSize;$/;"	m	namespace:__asan	file:
kChunkHeaderSize	lib/asan/asan_allocator.cc	/^static const uptr kChunkHeaderSize = sizeof(ChunkHeader);$/;"	m	namespace:__asan	file:
kChunksBlockCount	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^  static const int kChunksBlockCount = 1 << 14;$/;"	m	class:LargeMmapAllocatorPtrArrayDynamic
kClkBits	lib/tsan/rtl/tsan_defs.h	/^const int kClkBits = 42;$/;"	m	namespace:__tsan
kClockCount	lib/tsan/rtl/tsan_defs.h	/^  static const uptr kClockCount = kSize \/ sizeof(ClockElem);$/;"	m	struct:__tsan::ClockBlock
kClocks	lib/tsan/tests/unit/tsan_clock_test.cc	/^const uptr kClocks = 4;$/;"	m	namespace:__tsan	file:
kCmpDictionaryEntriesDequeSize	lib/fuzzer/FuzzerMutate.h	/^  static const size_t kCmpDictionaryEntriesDequeSize = 16;$/;"	m	class:fuzzer::MutationDispatcher
kCodeAlign	test/cfi/cross-dso/icall/dlopen.cpp	/^static const int kCodeAlign = 4096;$/;"	v	file:
kCodeSize	test/cfi/cross-dso/icall/dlopen.cpp	/^static const int kCodeSize = 4096;$/;"	v	file:
kCollectHistory	lib/tsan/rtl/tsan_defs.h	/^const bool kCollectHistory = false;$/;"	m	namespace:__tsan
kCollectHistory	lib/tsan/rtl/tsan_defs.h	/^const bool kCollectHistory = true;$/;"	m	namespace:__tsan
kCompactPtrScale	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  static const uptr kCompactPtrScale = 4;$/;"	m	class:SizeClassAllocator64
kCounterBits	lib/sanitizer_common/sanitizer_lfstack.h	/^  static const int kCounterBits = FIRST_32_SECOND_64(32, 17);$/;"	m	struct:__sanitizer::LFStack
kCounterInc	lib/sanitizer_common/sanitizer_lfstack.h	/^  static const u64 kCounterInc = kPtrMask + 1;$/;"	m	struct:__sanitizer::LFStack
kCounterMask	lib/sanitizer_common/sanitizer_lfstack.h	/^  static const u64 kCounterMask = ~kPtrMask;$/;"	m	struct:__sanitizer::LFStack
kCurrentStackFrameMagic	lib/asan/asan_internal.h	/^static const uptr kCurrentStackFrameMagic = 0x41B58AB3;$/;"	m	namespace:__asan
kDeadlockGraphSize	test/tsan/deadlock_detector_stress_test.cc	/^  static const size_t kDeadlockGraphSize = 4096;$/;"	m	class:LockTest	file:
kDefaultAlignment	lib/tsan/rtl/tsan_mman.h	/^const uptr kDefaultAlignment = 16;$/;"	m	namespace:__tsan
kDefaultFormat	lib/sanitizer_common/sanitizer_stacktrace_printer.cc	/^static const char kDefaultFormat[] = "    #%n %p %F %L";$/;"	m	namespace:__sanitizer	file:
kDefaultMallocContextSize	lib/asan/asan_stack.h	/^static const u32 kDefaultMallocContextSize = 30;$/;"	m	namespace:__asan
kDefaultShadowOffset32	lib/asan/asan_mapping.h	/^static const u64 kDefaultShadowOffset32 = 1ULL << 29;  \/\/ 0x20000000$/;"	v
kDefaultShadowOffset64	lib/asan/asan_mapping.h	/^static const u64 kDefaultShadowOffset64 = 1ULL << 44;$/;"	v
kDefaultShadowScale	lib/asan/asan_mapping.h	/^static const u64 kDefaultShadowScale = ASAN_SHADOW_SCALE;$/;"	v
kDefaultShadowScale	lib/asan/asan_mapping.h	/^static const u64 kDefaultShadowScale = SANITIZER_MYRIAD2 ? 5 : 3;$/;"	v
kDefaultShadowSentinel	lib/asan/asan_mapping.h	/^static const u64 kDefaultShadowSentinel = ~(uptr)0;$/;"	v
kDefaultShadowSentinel	lib/hwasan/hwasan_mapping.h	/^static constexpr __sanitizer::u64 kDefaultShadowSentinel = ~(__sanitizer::u64)0;$/;"	v
kDefaultShort64bitShadowOffset	lib/asan/asan_mapping.h	/^static const u64 kDefaultShort64bitShadowOffset =$/;"	v
kDefaultUnsafeStackSize	lib/safestack/safestack.cc	/^const unsigned kDefaultUnsafeStackSize = 0x2800000;$/;"	v
kDepthBits	lib/msan/msan_origin.h	/^  static const int kDepthBits = 3;$/;"	m	class:__msan::Origin
kDepthShift	lib/msan/msan_origin.h	/^  static const int kDepthShift = 32 - kDepthBits - 1;$/;"	m	class:__msan::Origin
kDestroyedThread	lib/sanitizer_common/sanitizer_tls_get_addr.cc	/^static const uptr kDestroyedThread = -1;$/;"	m	namespace:__sanitizer	file:
kDirectBranchLength	lib/interception/interception_win.cc	/^static const int kDirectBranchLength = kBranchLength + kAddressLength;$/;"	m	namespace:__interception	file:
kDirectlyLeaked	lib/lsan/lsan_common.h	/^  kDirectlyLeaked = 0,  \/\/ default$/;"	e	enum:__lsan::ChunkTag
kDlsymAllocPoolSize	lib/asan/asan_malloc_linux.cc	/^static const uptr kDlsymAllocPoolSize = SANITIZER_RTEMS ? 4096 : 1024;$/;"	v	file:
kDlsymAllocPoolSize	lib/hwasan/hwasan_interceptors.cc	/^static const uptr kDlsymAllocPoolSize = 1024;$/;"	v	file:
kDlsymAllocPoolSize	lib/msan/msan_interceptors.cc	/^static const uptr kDlsymAllocPoolSize = 1024;$/;"	v	file:
kDtvOffset	lib/sanitizer_common/sanitizer_tls_get_addr.cc	/^static const uptr kDtvOffset = 0;$/;"	m	namespace:__sanitizer	file:
kDtvOffset	lib/sanitizer_common/sanitizer_tls_get_addr.cc	/^static const uptr kDtvOffset = 0x8000;$/;"	m	namespace:__sanitizer	file:
kDyldImageIdx	lib/sanitizer_common/sanitizer_procmaps_mac.cc	/^static const int kDyldImageIdx = -1;$/;"	m	namespace:__sanitizer	file:
kDyldInsertLibraries	lib/sanitizer_common/sanitizer_mac.cc	/^static const char kDyldInsertLibraries[] = "DYLD_INSERT_LIBRARIES";$/;"	m	namespace:__sanitizer	file:
kDyldPath	lib/sanitizer_common/sanitizer_procmaps_mac.cc	/^static const char kDyldPath[] = "\/usr\/lib\/dyld";$/;"	m	namespace:__sanitizer	file:
kDynamicArraySize	test/asan/TestCases/alloca_constant_size.cc	/^static const int kDynamicArraySize = 200;$/;"	v	file:
kDynamicInitGlobalsInitialCapacity	lib/asan/asan_globals.cc	/^static const int kDynamicInitGlobalsInitialCapacity = 512;$/;"	m	namespace:__asan	file:
kEndId	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^const u32 kEndId = -2;$/;"	m	namespace:__sanitizer	file:
kEnvVariables	lib/sanitizer_common/sanitizer_win.cc	/^static const int kEnvVariables = 5;$/;"	m	namespace:__sanitizer	file:
kErrorKindInvalid	lib/asan/asan_errors.h	/^  kErrorKindInvalid = 0,$/;"	e	enum:__asan::ErrorKind
kErrorMessageBufferSize	lib/sanitizer_common/sanitizer_common.h	/^static const uptr kErrorMessageBufferSize = 1 << 16;$/;"	m	namespace:__sanitizer
kEventPCBits	lib/tsan/rtl/tsan_trace.h	/^const uptr kEventPCBits = 61;$/;"	m	namespace:__tsan
kEventPCBits	test/tsan/Linux/double_race.cc	/^const int kEventPCBits = 61;$/;"	v
kExternalPCBit	lib/sanitizer_common/sanitizer_common.h	/^const u64 kExternalPCBit = 1ULL << 60;$/;"	m	namespace:__sanitizer
kExternalPCBit	test/tsan/java.h	/^const jptr kExternalPCBit = 1ULL << 60;$/;"	v
kExtraStatsFormatString	lib/fuzzer/afl/afl_driver.cpp	/^static const char *kExtraStatsFormatString = "peak_rss_mb            : %u\\n"$/;"	v	file:
kFakePtr	lib/sanitizer_common/tests/sanitizer_quarantine_test.cc	/^static void* kFakePtr = reinterpret_cast<void*>(0xFA83FA83);$/;"	m	namespace:__sanitizer	file:
kFallbackAllocTag	lib/hwasan/hwasan_allocator.cc	/^static const tag_t kFallbackAllocTag = 0xBB;$/;"	m	namespace:__hwasan	file:
kFallbackFreeTag	lib/hwasan/hwasan_allocator.cc	/^static const tag_t kFallbackFreeTag = 0xBC;$/;"	m	namespace:__hwasan	file:
kFallbackTag	lib/hwasan/hwasan.cc	/^static const u8 kFallbackTag = 0xBB;$/;"	v	file:
kFeatureSetSize	lib/fuzzer/FuzzerCorpus.h	/^  static const size_t kFeatureSetSize = 1 << 21;$/;"	m	class:fuzzer::InputCorpus
kFlagBlock	lib/tsan/rtl/tsan_sync.h	/^  static const u32 kFlagBlock = 1u << 30;$/;"	m	class:__tsan::MetaMap
kFlagDesc	lib/sanitizer_common/tests/sanitizer_flags_test.cc	/^static const char kFlagDesc[] = "flag description";$/;"	m	namespace:__sanitizer	file:
kFlagMask	lib/tsan/rtl/tsan_sync.h	/^  static const u32 kFlagMask  = 3u << 30;$/;"	m	class:__tsan::MetaMap
kFlagName	lib/sanitizer_common/tests/sanitizer_flags_test.cc	/^static const char kFlagName[] = "flag_name";$/;"	m	namespace:__sanitizer	file:
kFlagSync	lib/tsan/rtl/tsan_sync.h	/^  static const u32 kFlagSync  = 2u << 30;$/;"	m	class:__tsan::MetaMap
kFlags	lib/asan/asan_allocator.h	/^  static const uptr kFlags = 0;$/;"	m	struct:__asan::AP32
kFlags	lib/asan/asan_allocator.h	/^  static const uptr kFlags = 0;$/;"	m	struct:__asan::AP64
kFlags	lib/hwasan/hwasan_allocator.cc	/^  static const uptr kFlags = 0;$/;"	m	struct:__hwasan::AP32	file:
kFlags	lib/lsan/lsan_allocator.h	/^  static const uptr kFlags = 0;$/;"	m	struct:__lsan::AP32
kFlags	lib/lsan/lsan_allocator.h	/^  static const uptr kFlags = 0;$/;"	m	struct:__lsan::AP64
kFlags	lib/msan/msan_allocator.cc	/^    static const uptr kFlags = 0;$/;"	m	struct:__msan::AP32	file:
kFlags	lib/msan/msan_allocator.cc	/^    static const uptr kFlags = 0;$/;"	m	struct:__msan::AP64	file:
kFlags	lib/sanitizer_common/sanitizer_allocator_internal.h	/^  static const uptr kFlags = 0;$/;"	m	struct:__sanitizer::AP32
kFlags	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  static const uptr kFlags = 0;$/;"	m	struct:AP32Compact	file:
kFlags	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  static const uptr kFlags = 0;$/;"	m	struct:AP32WithCallback	file:
kFlags	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  static const uptr kFlags = 0;$/;"	m	struct:AP64	file:
kFlags	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  static const uptr kFlags = 0;$/;"	m	struct:AP64Compact	file:
kFlags	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  static const uptr kFlags = 0;$/;"	m	struct:AP64Dyn	file:
kFlags	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  static const uptr kFlags = 0;$/;"	m	struct:AP64VeryCompact	file:
kFlags	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  static const uptr kFlags = 0;$/;"	m	struct:AP64WithCallback	file:
kFlags	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  static const uptr kFlags = 0;$/;"	m	struct:AP64_SpecialSizeClassMap	file:
kFlags	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  static const uptr kFlags =$/;"	m	struct:AP32SeparateBatches	file:
kFlags	lib/sanitizer_common/tests/sanitizer_allocator_testlib.cc	/^  static const uptr kFlags =$/;"	m	struct:__AP64	file:
kFlags	lib/scudo/scudo_allocator.h	/^  static const uptr kFlags =$/;"	m	struct:__scudo::AP64
kFlags	lib/tsan/rtl/tsan_rtl.h	/^  static const uptr kFlags = 0;$/;"	m	struct:__tsan::AP32
kFlags	lib/tsan/rtl/tsan_rtl.h	/^  static const uptr kFlags = 0;$/;"	m	struct:__tsan::AP64
kFlagsOffset	lib/asan/asan_fake_stack.h	/^  static const uptr kFlagsOffset = 4096;  \/\/ This is were the flags begin.$/;"	m	class:__asan::FakeStack
kFlatByteMapSize	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^static const uptr kFlatByteMapSize = kAddressSpaceSize >> kRegionSizeLog;$/;"	v	file:
kFormatData	lib/sanitizer_common/sanitizer_symbolizer_fuchsia.h	/^constexpr const char *kFormatData = "{{{data:%p}}}";$/;"	m	namespace:__sanitizer
kFormatData	lib/sanitizer_common/sanitizer_symbolizer_rtems.h	/^constexpr const char *kFormatData = "{{{data:%p}}}";$/;"	m	namespace:__sanitizer
kFormatDemangle	lib/sanitizer_common/sanitizer_symbolizer_fuchsia.h	/^constexpr const char *kFormatDemangle = "{{{symbol:%s}}}";$/;"	m	namespace:__sanitizer
kFormatDemangle	lib/sanitizer_common/sanitizer_symbolizer_rtems.h	/^constexpr const char *kFormatDemangle = "{{{symbol:%s}}}";$/;"	m	namespace:__sanitizer
kFormatDemangleMax	lib/sanitizer_common/sanitizer_symbolizer_fuchsia.h	/^constexpr uptr kFormatDemangleMax = 1024;  \/\/ Arbitrary.$/;"	m	namespace:__sanitizer
kFormatDemangleMax	lib/sanitizer_common/sanitizer_symbolizer_rtems.h	/^constexpr uptr kFormatDemangleMax = 1024;  \/\/ Arbitrary.$/;"	m	namespace:__sanitizer
kFormatFrame	lib/sanitizer_common/sanitizer_symbolizer_fuchsia.h	/^constexpr const char *kFormatFrame = "{{{bt:%u:%p}}}";$/;"	m	namespace:__sanitizer
kFormatFrame	lib/sanitizer_common/sanitizer_symbolizer_rtems.h	/^constexpr const char *kFormatFrame = "    [%u] IP: %p";$/;"	m	namespace:__sanitizer
kFormatFunction	lib/sanitizer_common/sanitizer_symbolizer_fuchsia.h	/^constexpr const char *kFormatFunction = "{{{pc:%p}}}";$/;"	m	namespace:__sanitizer
kFormatFunction	lib/sanitizer_common/sanitizer_symbolizer_rtems.h	/^constexpr const char *kFormatFunction = "{{{pc:%p}}}";$/;"	m	namespace:__sanitizer
kFormatFunctionMax	lib/sanitizer_common/sanitizer_symbolizer_fuchsia.h	/^constexpr uptr kFormatFunctionMax = 64;  \/\/ More than big enough for 64-bit hex.$/;"	m	namespace:__sanitizer
kFormatFunctionMax	lib/sanitizer_common/sanitizer_symbolizer_rtems.h	/^constexpr uptr kFormatFunctionMax = 64;  \/\/ More than big enough for 64-bit hex.$/;"	m	namespace:__sanitizer
kFreeArrayMapSize	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  static const uptr kFreeArrayMapSize = 1 << 16;$/;"	m	class:SizeClassAllocator64
kFreeArraySize	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  static const uptr kFreeArraySize = kRegionSize \/ 8;$/;"	m	class:SizeClassAllocator64
kFreeBSD_ShadowOffset32	lib/asan/asan_mapping.h	/^static const u64 kFreeBSD_ShadowOffset32 = 1ULL << 30;  \/\/ 0x40000000$/;"	v
kFreeBSD_ShadowOffset64	lib/asan/asan_mapping.h	/^static const u64 kFreeBSD_ShadowOffset64 = 1ULL << 46;  \/\/ 0x400000000000$/;"	v
kFreedBit	lib/tsan/rtl/tsan_rtl.h	/^  static const u64 kFreedBit = 1ull << 63;$/;"	m	class:__tsan::FastState
kFuzzingCrash	lib/fuzzer/FuzzerUtilFuchsia.cpp	/^const uint64_t kFuzzingCrash = 0x474e495a5a5546;$/;"	m	namespace:fuzzer::__anon35	file:
kGetAllocatedSizeErrorMsg	lib/asan/tests/asan_interface_test.cc	/^static const char* kGetAllocatedSizeErrorMsg =$/;"	v	file:
kHandleSignalExclusive	lib/sanitizer_common/sanitizer_flags.h	/^  kHandleSignalExclusive,$/;"	e	enum:__sanitizer::HandleSignalMode
kHandleSignalNo	lib/sanitizer_common/sanitizer_flags.h	/^  kHandleSignalNo,$/;"	e	enum:__sanitizer::HandleSignalMode
kHandleSignalYes	lib/sanitizer_common/sanitizer_flags.h	/^  kHandleSignalYes,$/;"	e	enum:__sanitizer::HandleSignalMode
kHandlerStackSize	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^static const int kHandlerStackSize = 8192;$/;"	m	namespace:__sanitizer	file:
kHashMask	lib/sanitizer_common/sanitizer_stackdepot.cc	/^  static const u32 kHashMask = ~kUseCountMask;$/;"	m	struct:__sanitizer::StackDepotNode	file:
kHeaderSize	lib/xray/tests/unit/profile_collector_test.cc	/^static constexpr auto kHeaderSize = 16u;$/;"	m	namespace:__xray::__anon22	file:
kHeapAlignment	lib/tsan/rtl/tsan_interface_java.cc	/^const jptr kHeapAlignment = 8;$/;"	v
kHeapIdMask	lib/msan/msan_origin.h	/^  static const u32 kHeapIdMask = ((u32)-1) >> (32 - kHeapShift);$/;"	m	class:__msan::Origin
kHeapMemBeg	lib/tsan/rtl/tsan_platform.h	/^  static const uptr kHeapMemBeg    = 0x7b0000000000ull;$/;"	m	struct:__tsan::Mapping
kHeapMemEnd	lib/tsan/rtl/tsan_platform.h	/^  static const uptr kHeapMemEnd    = 0x7c0000000000ull;$/;"	m	struct:__tsan::Mapping
kHeapShift	lib/msan/msan_origin.h	/^  static const int kHeapShift = 31;$/;"	m	class:__msan::Origin
kHeapSize	test/tsan/java_alloc.cc	/^int const kHeapSize = 1024 * 1024;$/;"	v
kHeapSize	test/tsan/java_find.cc	/^int const kHeapSize = 1024 * 1024;$/;"	v
kHeapSizeIncrementLimit	test/asan/TestCases/Linux/thread_local_quarantine_pthread_join.cc	/^static const size_t kHeapSizeIncrementLimit = 2 << 20;$/;"	v	file:
kHeapSizeIncrementLimit	test/asan/TestCases/Linux/thread_local_quarantine_size_kb.cc	/^static const size_t kHeapSizeIncrementLimit = 12 << 20;$/;"	v	file:
kHiAppMemBeg	lib/tsan/rtl/tsan_platform.h	/^  static const uptr kHiAppMemBeg   = 0x7e8000000000ull;$/;"	m	struct:__tsan::Mapping
kHiAppMemEnd	lib/tsan/rtl/tsan_platform.h	/^  static const uptr kHiAppMemEnd   = 0x800000000000ull;$/;"	m	struct:__tsan::Mapping
kHighMemBeg	lib/asan/asan_mapping_myriad.h	27;"	d
kHighMemEnd	lib/asan/asan_mapping.h	/^static uptr kHighMemEnd = 0x7fffffffffffULL;$/;"	m	namespace:__asan
kHighMemEnd	lib/asan/asan_rtl.cc	/^uptr kHighMemEnd, kMidMemBeg, kMidMemEnd;$/;"	m	namespace:__asan	file:
kHighMemEnd	lib/hwasan/hwasan_linux.cc	/^static uptr kHighMemEnd;$/;"	m	namespace:__hwasan	file:
kHighMemStart	lib/hwasan/hwasan_linux.cc	/^static uptr kHighMemStart;$/;"	m	namespace:__hwasan	file:
kHighShadowBeg	lib/asan/asan_mapping_myriad.h	29;"	d
kHighShadowEnd	lib/asan/asan_mapping_myriad.h	30;"	d
kHighShadowEnd	lib/hwasan/hwasan_linux.cc	/^static uptr kHighShadowEnd;$/;"	m	namespace:__hwasan	file:
kHighShadowStart	lib/hwasan/hwasan_linux.cc	/^static uptr kHighShadowStart;$/;"	m	namespace:__hwasan	file:
kHintNop9Bytes	lib/interception/interception_win.cc	/^static const u8 kHintNop9Bytes[] = {$/;"	m	namespace:__interception	file:
kHistoryMask	lib/tsan/rtl/tsan_rtl.h	/^  static const u64 kHistoryMask = 7;$/;"	m	class:__tsan::FastState
kHistoryShift	lib/tsan/rtl/tsan_rtl.h	/^  static const u64 kHistoryShift = kClkBits;$/;"	m	class:__tsan::FastState
kIdentityCodeWithJump	lib/interception/tests/interception_win_test.cc	/^const u8 kIdentityCodeWithJump[] = {$/;"	m	namespace:__interception::__anon12	file:
kIdentityCodeWithMov	lib/interception/tests/interception_win_test.cc	/^const u8 kIdentityCodeWithMov[] = {$/;"	m	namespace:__interception::__anon12	file:
kIdentityCodeWithPrologue	lib/interception/tests/interception_win_test.cc	/^const u8 kIdentityCodeWithPrologue[] = {$/;"	m	namespace:__interception::__anon12	file:
kIdentityCodeWithPushPop	lib/interception/tests/interception_win_test.cc	/^const u8 kIdentityCodeWithPushPop[] = {$/;"	m	namespace:__interception::__anon12	file:
kIdentityTwice	lib/interception/tests/interception_win_test.cc	/^const u8 kIdentityTwice[] = {$/;"	m	namespace:__interception::__anon12	file:
kIdentityTwiceOffset	lib/interception/tests/interception_win_test.cc	/^const u8 kIdentityTwiceOffset = 16;$/;"	m	namespace:__interception::__anon12	file:
kIdentityTwiceOffset	lib/interception/tests/interception_win_test.cc	/^const u8 kIdentityTwiceOffset = 8;$/;"	m	namespace:__interception::__anon12	file:
kIgnoreBit	lib/tsan/rtl/tsan_rtl.h	/^  static const u64 kIgnoreBit = 1ull << 63;$/;"	m	class:__tsan::FastState
kIgnoreObjectAlreadyIgnored	lib/lsan/lsan_common.h	/^  kIgnoreObjectAlreadyIgnored,$/;"	e	enum:__lsan::IgnoreObjectResult
kIgnoreObjectInvalid	lib/lsan/lsan_common.h	/^  kIgnoreObjectInvalid$/;"	e	enum:__lsan::IgnoreObjectResult
kIgnoreObjectSuccess	lib/lsan/lsan_common.h	/^  kIgnoreObjectSuccess,$/;"	e	enum:__lsan::IgnoreObjectResult
kIgnored	lib/lsan/lsan_common.h	/^  kIgnored = 3$/;"	e	enum:__lsan::ChunkTag
kIndirectJumpInstructionLength	lib/interception/interception_win.cc	/^static const int kIndirectJumpInstructionLength = 6;$/;"	m	namespace:__interception	file:
kIndirectlyLeaked	lib/lsan/lsan_common.h	/^  kIndirectlyLeaked = 1,$/;"	e	enum:__lsan::ChunkTag
kInitialCapacity	lib/sanitizer_common/sanitizer_common.h	/^  static const uptr kInitialCapacity = 1 << 14;$/;"	m	class:__sanitizer::ListOfModules
kInitialCapacity	lib/sanitizer_common/sanitizer_symbolizer.h	/^    static const uptr kInitialCapacity = 1000;$/;"	m	class:__sanitizer::final::ModuleNameOwner
kInitialNumAllocs	lib/sanitizer_common/tests/malloc_stress_transfer_test.cc	/^const size_t kInitialNumAllocs = 1 << 10;$/;"	v
kInitializingLabel	lib/dfsan/dfsan.cc	/^static const dfsan_label kInitializingLabel = -1;$/;"	v	file:
kInterceptorName	lib/asan/asan_suppressions.cc	/^static const char kInterceptorName[] = "interceptor_name";$/;"	m	namespace:__asan	file:
kInterceptorViaFunction	lib/asan/asan_suppressions.cc	/^static const char kInterceptorViaFunction[] = "interceptor_via_fun";$/;"	m	namespace:__asan	file:
kInterceptorViaLibrary	lib/asan/asan_suppressions.cc	/^static const char kInterceptorViaLibrary[] = "interceptor_via_lib";$/;"	m	namespace:__asan	file:
kInternalAllocatorNumRegions	lib/sanitizer_common/sanitizer_allocator_internal.h	/^static const uptr kInternalAllocatorNumRegions =$/;"	m	namespace:__sanitizer
kInternalAllocatorRegionSizeLog	lib/sanitizer_common/sanitizer_allocator_internal.h	/^static const uptr kInternalAllocatorRegionSizeLog = 20;$/;"	m	namespace:__sanitizer
kInterposedFunctionPrefix	lib/tsan/rtl/tsan_report.cc	/^static const char *const kInterposedFunctionPrefix = "__interceptor_";$/;"	m	namespace:__tsan	file:
kInterposedFunctionPrefix	lib/tsan/rtl/tsan_report.cc	/^static const char *const kInterposedFunctionPrefix = "wrap_";$/;"	m	namespace:__tsan	file:
kInvalidFd	lib/sanitizer_common/sanitizer_libc.h	62;"	d
kInvalidPoisonMessage	lib/asan/tests/asan_interface_test.cc	/^static const char *kInvalidPoisonMessage = "invalid-poison-memory-range";$/;"	v	file:
kInvalidShadow	lib/cfi/cfi.cc	/^static constexpr uint16_t kInvalidShadow = 0;$/;"	m	namespace:__cfi	file:
kInvalidTid	lib/asan/asan_thread.h	/^const u32 kInvalidTid = 0xffffff;  \/\/ Must fit into 24 bits.$/;"	m	namespace:__asan
kInvalidTid	lib/lsan/lsan_common.h	/^const u32 kInvalidTid = (u32) -1;$/;"	m	namespace:__lsan
kInvalidTid	lib/tsan/rtl/tsan_defs.h	/^const u16 kInvalidTid = kMaxTid + 1;$/;"	m	namespace:__tsan
kInvalidTid	lib/tsan/rtl/tsan_sync.h	/^  static const int kInvalidTid = -1;$/;"	m	struct:__tsan::SyncVar
kInvalidUnpoisonMessage	lib/asan/tests/asan_interface_test.cc	/^static const char *kInvalidUnpoisonMessage = "invalid-unpoison-memory-range";$/;"	v	file:
kIosShadowOffset32	lib/asan/asan_mapping.h	/^static const u64 kIosShadowOffset32 = 1ULL << 30;  \/\/ 0x40000000$/;"	v
kIosShadowOffset64	lib/asan/asan_mapping.h	/^static const u64 kIosShadowOffset64 = 0x120200000;$/;"	v
kIosSimShadowOffset32	lib/asan/asan_mapping.h	/^static const u64 kIosSimShadowOffset32 = 1ULL << 30;$/;"	v
kIosSimShadowOffset64	lib/asan/asan_mapping.h	/^static const u64 kIosSimShadowOffset64 = kDefaultShadowOffset64;$/;"	v
kIter	test/tsan/barrier.cc	/^volatile int kIter = 10;  \/\/ prevent unwinding$/;"	v
kIters	lib/sanitizer_common/tests/sanitizer_mutex_test.cc	/^const int kIters = 16*1024;$/;"	m	namespace:__sanitizer	file:
kIters	lib/sanitizer_common/tests/sanitizer_mutex_test.cc	/^const int kIters = 64*1024;$/;"	m	namespace:__sanitizer	file:
kIters	lib/tsan/tests/unit/tsan_mutex_test.cc	/^const int kIters = 16*1024;$/;"	m	namespace:__tsan	file:
kIters	lib/tsan/tests/unit/tsan_mutex_test.cc	/^const int kIters = 64*1024;$/;"	m	namespace:__tsan	file:
kIters	test/tsan/race_stress.cc	/^const int kIters = 1000;$/;"	v
kIters	test/tsan/real_deadlock_detector_stress_test.cc	/^const int kIters = 400 << 10;$/;"	v
kJumpInstructionLength	lib/interception/interception_win.cc	/^static const int kJumpInstructionLength = 5;$/;"	m	namespace:__interception	file:
kKindBits	lib/stats/stats.h	/^enum { kKindBits = 3 };$/;"	e	enum:__sanitizer::__anon1
kL1Size	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^const int kL1Size = 1024;$/;"	m	namespace:__sanitizer	file:
kL2Size	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^const int kL2Size = 1024;$/;"	m	namespace:__sanitizer	file:
kLargeAlloc	test/asan/TestCases/Posix/current_allocated_bytes.cc	/^const size_t kLargeAlloc = 1UL << 20;$/;"	v
kLargeMalloc	lib/asan/tests/asan_test_utils.h	/^const size_t kLargeMalloc = 1 << 22;$/;"	v
kLargePage	test/tsan/bench_shadow_flush.cc	/^const long kLargePage = 2 << 20;$/;"	v
kLargestClassID	lib/sanitizer_common/sanitizer_allocator_size_class_map.h	/^  static const uptr kLargestClassID = kNumClasses - 2;$/;"	m	class:SizeClassMap
kLeftRedzoneSize	test/asan/TestCases/Posix/gc-test.cc	/^static const int kLeftRedzoneSize = sizeof(void *) * 4;$/;"	v	file:
kLinkerName	lib/lsan/lsan_common_linux.cc	/^static const char kLinkerName[] = "ld";$/;"	m	namespace:__lsan	file:
kLoAppMemBeg	lib/tsan/rtl/tsan_platform.h	/^  static const uptr kLoAppMemBeg   = 0x000000001000ull;$/;"	m	struct:__tsan::Mapping
kLoAppMemEnd	lib/tsan/rtl/tsan_platform.h	/^  static const uptr kLoAppMemEnd   = 0x008000000000ull;$/;"	m	struct:__tsan::Mapping
kLoadGlobalCode	lib/interception/tests/interception_win_test.cc	/^u8 kLoadGlobalCode[] = {$/;"	m	namespace:__interception::__anon12	file:
kLowLevelAllocatorDefaultAlignment	lib/sanitizer_common/sanitizer_allocator.cc	/^constexpr uptr kLowLevelAllocatorDefaultAlignment = 8;$/;"	m	namespace:__sanitizer	file:
kLowMemBeg	lib/asan/asan_mapping_myriad.h	21;"	d
kLowMemEnd	lib/asan/asan_mapping_myriad.h	22;"	d
kLowMemEnd	lib/hwasan/hwasan_linux.cc	/^static uptr kLowMemEnd;$/;"	m	namespace:__hwasan	file:
kLowMemStart	lib/hwasan/hwasan_linux.cc	/^static uptr kLowMemStart;$/;"	m	namespace:__hwasan	file:
kLowShadowBeg	lib/asan/asan_mapping_myriad.h	24;"	d
kLowShadowEnd	lib/asan/asan_mapping_myriad.h	25;"	d
kLowShadowEnd	lib/hwasan/hwasan_linux.cc	/^static uptr kLowShadowEnd;$/;"	m	namespace:__hwasan	file:
kLowShadowStart	lib/hwasan/hwasan_linux.cc	/^static uptr kLowShadowStart;$/;"	m	namespace:__hwasan	file:
kMIPS32_ShadowOffset32	lib/asan/asan_mapping.h	/^static const u64 kMIPS32_ShadowOffset32 = 0x0aaa0000;$/;"	v
kMIPS64_ShadowOffset64	lib/asan/asan_mapping.h	/^static const u64 kMIPS64_ShadowOffset64 = 1ULL << 37;$/;"	v
kMacOrderBarrier	lib/tsan/rtl/tsan_interceptors_mac.cc	/^static const morder kMacOrderBarrier = mo_acq_rel;$/;"	m	namespace:__tsan	file:
kMacOrderNonBarrier	lib/tsan/rtl/tsan_interceptors_mac.cc	/^static const morder kMacOrderNonBarrier = mo_acq_rel;$/;"	m	namespace:__tsan	file:
kMagic1	lib/asan/asan_fake_stack.cc	/^static const u64 kMagic1 = kAsanStackAfterReturnMagic;$/;"	m	namespace:__asan	file:
kMagic2	lib/asan/asan_fake_stack.cc	/^static const u64 kMagic2 = (kMagic1 << 8) | kMagic1;$/;"	m	namespace:__asan	file:
kMagic32SecondHalf	lib/sanitizer_common/scripts/sancov.py	/^kMagic32SecondHalf = 0xFFFFFF32;$/;"	v
kMagic4	lib/asan/asan_fake_stack.cc	/^static const u64 kMagic4 = (kMagic2 << 16) | kMagic2;$/;"	m	namespace:__asan	file:
kMagic64SecondHalf	lib/sanitizer_common/scripts/sancov.py	/^kMagic64SecondHalf = 0xFFFFFF64;$/;"	v
kMagic8	lib/asan/asan_fake_stack.cc	/^static const u64 kMagic8 = (kMagic4 << 32) | kMagic4;$/;"	m	namespace:__asan	file:
kMagicCookie	test/msan/Linux/fopencookie.cc	/^constexpr uintptr_t kMagicCookie = 0x12345678;$/;"	v
kMagicFirstHalf	lib/sanitizer_common/scripts/sancov.py	/^kMagicFirstHalf    = 0xC0BFFFFF;$/;"	v
kMainThreadId	lib/tsan/rtl/tsan_report.cc	/^const int kMainThreadId = 1;$/;"	m	namespace:__tsan	file:
kMallocUsableSizeErrorMsg	lib/asan/tests/asan_test.cc	/^static const char *kMallocUsableSizeErrorMsg =$/;"	v	file:
kManyThreadsIterations	lib/asan/tests/asan_interface_test.cc	/^static const size_t kManyThreadsIterations = 250;$/;"	v	file:
kManyThreadsMallocSizes	lib/asan/tests/asan_interface_test.cc	/^static const size_t kManyThreadsMallocSizes[] = {5, 1UL<<10, 1UL<<14, 357};$/;"	v	file:
kManyThreadsNumThreads	lib/asan/tests/asan_interface_test.cc	/^static const size_t kManyThreadsNumThreads =$/;"	v	file:
kMapPrimeMod	lib/fuzzer/FuzzerValueBitMap.h	/^  static const size_t kMapPrimeMod = 65371;  \/\/ Largest Prime < kMapSizeInBits;$/;"	m	struct:fuzzer::ValueBitMap
kMapSizeInBits	lib/fuzzer/FuzzerValueBitMap.h	/^  static const size_t kMapSizeInBits = 1 << 16;$/;"	m	struct:fuzzer::ValueBitMap
kMapSizeInWords	lib/fuzzer/FuzzerValueBitMap.h	/^  static const size_t kMapSizeInWords = kMapSizeInBits \/ kBitsInWord;$/;"	m	struct:fuzzer::ValueBitMap
kMaxAflInputSize	lib/fuzzer/afl/afl_driver.cpp	/^static const size_t kMaxAflInputSize = 1 << 20;$/;"	v	file:
kMaxAllowedMallocSize	lib/asan/asan_allocator.cc	/^  static const uptr kMaxAllowedMallocSize =$/;"	m	struct:__asan::Allocator	file:
kMaxAllowedMallocSize	lib/hwasan/hwasan_allocator.cc	/^static const uptr kMaxAllowedMallocSize = 2UL << 30;  \/\/ 2G$/;"	m	namespace:__hwasan	file:
kMaxAllowedMallocSize	lib/lsan/lsan_allocator.cc	/^static const uptr kMaxAllowedMallocSize = 1UL << 30;$/;"	m	namespace:__lsan	file:
kMaxAllowedMallocSize	lib/msan/msan_allocator.cc	/^  static const uptr kMaxAllowedMallocSize = 2UL << 30;  \/\/ 2G$/;"	m	namespace:__msan	file:
kMaxAllowedMallocSize	lib/msan/msan_allocator.cc	/^  static const uptr kMaxAllowedMallocSize = 2UL << 30;$/;"	m	namespace:__msan	file:
kMaxAllowedMallocSize	lib/msan/msan_allocator.cc	/^  static const uptr kMaxAllowedMallocSize = 8UL << 30;$/;"	m	namespace:__msan	file:
kMaxAllowedMallocSize	lib/tsan/rtl/tsan_mman.cc	/^static constexpr uptr kMaxAllowedMallocSize = 1ull << 40;$/;"	m	namespace:__tsan	file:
kMaxAllowedMallocSizePlusOne	test/asan/TestCases/malloc-size-too-big.cc	/^static const size_t kMaxAllowedMallocSizePlusOne =$/;"	v	file:
kMaxCallerPcs	lib/ubsan_minimal/ubsan_minimal_handlers.cc	/^static const int kMaxCallerPcs = 20;$/;"	v	file:
kMaxDepth	lib/msan/msan_origin.h	/^  static const int kMaxDepth = (1 << kDepthBits) - 1;$/;"	m	class:__msan::Origin
kMaxDescLen	lib/tsan/rtl/tsan_interface_ann.cc	/^static const int kMaxDescLen = 128;$/;"	m	namespace:__tsan	file:
kMaxDictSize	lib/fuzzer/FuzzerDictionary.h	/^  static const size_t kMaxDictSize = 1 << 14;$/;"	m	class:fuzzer::Dictionary
kMaxDictSize	lib/fuzzer/FuzzerMutate.cpp	/^const size_t Dictionary::kMaxDictSize;$/;"	m	class:fuzzer::Dictionary	file:
kMaxEnvNameLength	lib/sanitizer_common/sanitizer_win.cc	/^static const int kMaxEnvNameLength = 128;$/;"	m	namespace:__sanitizer	file:
kMaxEnvValueLength	lib/sanitizer_common/sanitizer_win.cc	/^static const DWORD kMaxEnvValueLength = 32767;$/;"	m	namespace:__sanitizer	file:
kMaxFlags	lib/sanitizer_common/sanitizer_flag_parser.h	/^  static const int kMaxFlags = 200;$/;"	m	class:__sanitizer::FlagParser
kMaxGlobals	lib/asan/asan_descriptions.h	/^  static const int kMaxGlobals = 4;$/;"	m	struct:__asan::GlobalAddressDescription
kMaxId	lib/sanitizer_common/sanitizer_stackdepotbase.h	/^  static const int kMaxId = 1 << kPartShift;$/;"	m	class:__sanitizer::StackDepotBase
kMaxIgnoredRanges	lib/sanitizer_common/sanitizer_libignore.h	/^  static const uptr kMaxIgnoredRanges = 128;$/;"	m	class:__sanitizer::LibIgnore
kMaxInstrumentedRanges	lib/sanitizer_common/sanitizer_libignore.h	/^  static const uptr kMaxInstrumentedRanges = 1024;$/;"	m	class:__sanitizer::LibIgnore
kMaxLeaksConsidered	lib/lsan/lsan_common.cc	/^const uptr kMaxLeaksConsidered = 5000;$/;"	m	namespace:__lsan	file:
kMaxLibs	lib/sanitizer_common/sanitizer_libignore.h	/^  static const uptr kMaxLibs = 1024;$/;"	m	class:__sanitizer::LibIgnore
kMaxLink	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^const int kMaxLink = 8;$/;"	m	namespace:__sanitizer	file:
kMaxLoopSize	lib/sanitizer_common/sanitizer_deadlock_detector_interface.h	/^  enum { kMaxLoopSize = 20 };$/;"	e	enum:__sanitizer::DDReport::__anon80
kMaxMallocFreeHooks	lib/sanitizer_common/sanitizer_common.cc	/^static const int kMaxMallocFreeHooks = 5;$/;"	m	namespace:__sanitizer	file:
kMaxMutex	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^const int kMaxMutex = kL1Size * kL2Size;$/;"	m	namespace:__sanitizer	file:
kMaxNesting	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^const int kMaxNesting = 64;$/;"	m	namespace:__sanitizer	file:
kMaxNumAllocs	test/sanitizer_common/TestCases/Linux/soft_rss_limit_mb_test.cc	/^static const int kMaxNumAllocs = 1 << 9;$/;"	v	file:
kMaxNumCached	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^    static const uptr kMaxNumCached = SizeClassMap::kMaxNumCachedHint - 2;$/;"	m	struct:SizeClassAllocator32::TransferBatch
kMaxNumCachedHint	lib/sanitizer_common/sanitizer_allocator_size_class_map.h	/^  static const uptr kMaxNumCachedHint = kMaxNumCachedHintT;$/;"	m	class:SizeClassMap
kMaxNumChunks	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^  static const int kMaxNumChunks = 1 << 15;$/;"	m	class:LargeMmapAllocatorPtrArrayStatic
kMaxNumChunks	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^  static const int kMaxNumChunks = 1 << 20;$/;"	m	class:LargeMmapAllocatorPtrArrayDynamic
kMaxNumOfInternalDieCallbacks	lib/sanitizer_common/sanitizer_termination.cc	/^static const int kMaxNumOfInternalDieCallbacks = 5;$/;"	m	namespace:__sanitizer	file:
kMaxNumThreads	test/lsan/TestCases/high_allocator_contention.cc	/^const int kMaxNumThreads = 5000;$/;"	v
kMaxNumThreads	test/scudo/threads.c	/^const int kMaxNumThreads = 500;$/;"	v
kMaxNumberOfThreads	lib/asan/asan_thread.h	/^const u32 kMaxNumberOfThreads = (1 << 22);  \/\/ 4M$/;"	m	namespace:__asan
kMaxPathLength	lib/msan/tests/msan_test.cc	/^const size_t kMaxPathLength = 4096;$/;"	v
kMaxPathLength	lib/sanitizer_common/sanitizer_common.h	/^const uptr kMaxPathLength = 4096;$/;"	m	namespace:__sanitizer
kMaxPerThread	test/tsan/real_deadlock_detector_stress_test.cc	/^const int kMaxPerThread = 10;$/;"	v
kMaxRegistryThreads	lib/sanitizer_common/tests/sanitizer_thread_registry_test.cc	/^static const u32 kMaxRegistryThreads = 1000;$/;"	m	namespace:__sanitizer	file:
kMaxSegName	lib/sanitizer_common/sanitizer_common.h	/^const uptr kMaxSegName = 16;$/;"	m	namespace:__sanitizer
kMaxSignals	lib/msan/msan_interceptors.cc	/^const int kMaxSignals = 1024;$/;"	v
kMaxSize	lib/fuzzer/FuzzerDictionary.h	/^  static const size_t kMaxSize = kMaxSizeT;$/;"	m	class:fuzzer::FixedWord
kMaxSize	lib/sanitizer_common/sanitizer_allocator_size_class_map.h	/^  static const uptr kMaxSize = 1UL << kMaxSizeLog;$/;"	m	class:SizeClassMap
kMaxSize	lib/scudo/scudo_allocator.cpp	/^  COMPILER_CHECK(sizeof(QuarantineBatch) < SizeClassMap::kMaxSize);$/;"	m	class:__scudo::QuarantineCallback::SizeClassMap	file:
kMaxSize	lib/tsan/rtl/tsan_ignoreset.cc	/^const uptr IgnoreSet::kMaxSize;$/;"	m	class:__tsan::IgnoreSet	file:
kMaxSize	lib/tsan/rtl/tsan_ignoreset.h	/^  static const uptr kMaxSize = 16;$/;"	m	class:__tsan::IgnoreSet
kMaxSize	lib/tsan/rtl/tsan_mutexset.cc	/^const uptr MutexSet::kMaxSize;$/;"	m	class:__tsan::MutexSet	file:
kMaxSize	lib/tsan/rtl/tsan_mutexset.h	/^  static const uptr kMaxSize = 16;$/;"	m	class:__tsan::MutexSet
kMaxSize_	lib/msan/msan_report.cc	/^  static const int kMaxSize_ = 'Z' - 'A' + 1;$/;"	m	class:__msan::OriginSet	file:
kMaxStackFrameSizeLog	lib/asan/asan_fake_stack.h	/^  static const uptr kMaxStackFrameSizeLog = 16;  \/\/ Max stack frame is 64K.$/;"	m	class:__asan::FakeStack
kMaxStackMallocSize	lib/asan/asan_fake_stack.h	/^  static const uptr kMaxStackMallocSize = ((uptr)1) << kMaxStackFrameSizeLog;$/;"	m	class:__asan::FakeStack
kMaxSummaryLength	lib/sanitizer_common/sanitizer_common.h	/^const int kMaxSummaryLength = 1024;$/;"	m	namespace:__sanitizer
kMaxSuppressionTypes	lib/sanitizer_common/sanitizer_suppressions.h	/^  static const int kMaxSuppressionTypes = 32;$/;"	m	class:__sanitizer::SuppressionContext
kMaxThreadStackSize	lib/sanitizer_common/sanitizer_common.h	/^const uptr kMaxThreadStackSize = 1 << 30;  \/\/ 1Gb$/;"	m	namespace:__sanitizer
kMaxThreads	lib/lsan/lsan_thread.cc	/^static const uptr kMaxThreads = 1 << 13;$/;"	m	namespace:__lsan	file:
kMaxTid	lib/tsan/rtl/tsan_defs.h	/^const unsigned kMaxTid = (1 << kTidBits) - ClockBlock::kClockCount;$/;"	m	namespace:__tsan
kMaxTidInClock	lib/tsan/rtl/tsan_defs.h	/^const unsigned kMaxTidInClock = kMaxTid * 2;  \/\/ This includes msb 'freed' bit.$/;"	m	namespace:__tsan
kMaxTidInClock	lib/tsan/rtl/tsan_defs.h	/^const unsigned kMaxTidInClock = kMaxTid;  \/\/ Go does not track freed memory.$/;"	m	namespace:__tsan
kMaxTidReuse	lib/tsan/rtl/tsan_defs.h	/^const unsigned kMaxTidReuse = (1 << (64 - kClkBits)) - 1;$/;"	m	namespace:__tsan
kMaxTimesRestarted	lib/sanitizer_common/sanitizer_symbolizer_internal.h	/^  static const uptr kMaxTimesRestarted = 5;$/;"	m	class:__sanitizer::SymbolizerProcess
kMaxTrampolineRegion	lib/interception/interception_win.cc	/^static const int kMaxTrampolineRegion = 1024;$/;"	m	namespace:__interception	file:
kMaxUnitSizeToPrint	lib/fuzzer/FuzzerLoop.cpp	/^static const size_t kMaxUnitSizeToPrint = 256;$/;"	m	namespace:fuzzer	file:
kMaxUnknownFlags	lib/sanitizer_common/sanitizer_flag_parser.cc	/^  static const int kMaxUnknownFlags = 20;$/;"	m	class:__sanitizer::UnknownFlags	file:
kMaxUseCount	lib/sanitizer_common/sanitizer_stackdepot.cc	/^  static const u32 kMaxUseCount = 1 << kUseCountBits;$/;"	m	struct:__sanitizer::StackDepotNode	file:
kMemoryLayout	lib/msan/msan.h	/^const MappingDesc kMemoryLayout[] = {$/;"	v
kMemoryLayoutSize	lib/msan/msan.h	/^const uptr kMemoryLayoutSize = sizeof(kMemoryLayout) \/ sizeof(kMemoryLayout[0]);$/;"	v
kMetaMapSize	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  static const uptr kMetaMapSize = 1 << 16;$/;"	m	class:SizeClassAllocator64
kMetaShadowBeg	lib/tsan/rtl/tsan_platform.h	/^  static const uptr kMetaShadowBeg = 0x300000000000ull;$/;"	m	struct:__tsan::Mapping
kMetaShadowCell	lib/tsan/rtl/tsan_defs.h	/^const uptr kMetaShadowCell = 8;$/;"	m	namespace:__tsan
kMetaShadowEnd	lib/tsan/rtl/tsan_platform.h	/^  static const uptr kMetaShadowEnd = 0x340000000000ull;$/;"	m	struct:__tsan::Mapping
kMetaShadowSize	lib/tsan/rtl/tsan_defs.h	/^const uptr kMetaShadowSize = 4;$/;"	m	namespace:__tsan
kMetadataSize	lib/asan/asan_allocator.h	/^  static const uptr kMetadataSize = 0;$/;"	m	struct:__asan::AP64
kMetadataSize	lib/asan/asan_allocator.h	/^  static const uptr kMetadataSize = 16;$/;"	m	struct:__asan::AP32
kMetadataSize	lib/hwasan/hwasan_allocator.cc	/^  static const uptr kMetadataSize = sizeof(Metadata);$/;"	m	struct:__hwasan::AP32	file:
kMetadataSize	lib/lsan/lsan_allocator.h	/^  static const uptr kMetadataSize = sizeof(ChunkMetadata);$/;"	m	struct:__lsan::AP32
kMetadataSize	lib/lsan/lsan_allocator.h	/^  static const uptr kMetadataSize = sizeof(ChunkMetadata);$/;"	m	struct:__lsan::AP64
kMetadataSize	lib/msan/msan_allocator.cc	/^    static const uptr kMetadataSize = sizeof(Metadata);$/;"	m	struct:__msan::AP32	file:
kMetadataSize	lib/msan/msan_allocator.cc	/^    static const uptr kMetadataSize = sizeof(Metadata);$/;"	m	struct:__msan::AP64	file:
kMetadataSize	lib/sanitizer_common/sanitizer_allocator_internal.h	/^  static const uptr kMetadataSize = 0;$/;"	m	struct:__sanitizer::AP32
kMetadataSize	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^  static const uptr kMetadataSize = Params::kMetadataSize;$/;"	m	class:SizeClassAllocator32
kMetadataSize	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  static const uptr kMetadataSize = Params::kMetadataSize;$/;"	m	class:SizeClassAllocator64
kMetadataSize	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  static const uptr kMetadataSize = 0;$/;"	m	struct:AP64_SpecialSizeClassMap	file:
kMetadataSize	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  static const uptr kMetadataSize = 16;$/;"	m	struct:AP32Compact	file:
kMetadataSize	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  static const uptr kMetadataSize = 16;$/;"	m	struct:AP32SeparateBatches	file:
kMetadataSize	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  static const uptr kMetadataSize = 16;$/;"	m	struct:AP32WithCallback	file:
kMetadataSize	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  static const uptr kMetadataSize = 16;$/;"	m	struct:AP64	file:
kMetadataSize	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  static const uptr kMetadataSize = 16;$/;"	m	struct:AP64Compact	file:
kMetadataSize	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  static const uptr kMetadataSize = 16;$/;"	m	struct:AP64Dyn	file:
kMetadataSize	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  static const uptr kMetadataSize = 16;$/;"	m	struct:AP64VeryCompact	file:
kMetadataSize	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  static const uptr kMetadataSize = 16;$/;"	m	struct:AP64WithCallback	file:
kMetadataSize	lib/sanitizer_common/tests/sanitizer_allocator_testlib.cc	/^  static const uptr kMetadataSize = 0;$/;"	m	struct:__AP64	file:
kMetadataSize	lib/scudo/scudo_allocator.h	/^  static const uptr kMetadataSize = 0;$/;"	m	struct:__scudo::AP64
kMetadataSize	lib/tsan/rtl/tsan_rtl.h	/^  static const uptr kMetadataSize = 0;$/;"	m	struct:__tsan::AP32
kMetadataSize	lib/tsan/rtl/tsan_rtl.h	/^  static const uptr kMetadataSize = 0;$/;"	m	struct:__tsan::AP64
kMidAppMemBeg	lib/tsan/rtl/tsan_platform.h	/^  static const uptr kMidAppMemBeg  = 0x550000000000ull;$/;"	m	struct:__tsan::Mapping
kMidAppMemEnd	lib/tsan/rtl/tsan_platform.h	/^  static const uptr kMidAppMemEnd  = 0x568000000000ull;$/;"	m	struct:__tsan::Mapping
kMidClass	lib/sanitizer_common/sanitizer_allocator_size_class_map.h	/^  static const uptr kMidClass = kMidSize \/ kMinSize;$/;"	m	class:SizeClassMap
kMidMemBeg	lib/asan/asan_mapping.h	/^static uptr kMidMemBeg =    0x3000000000ULL;$/;"	m	namespace:__asan
kMidMemBeg	lib/asan/asan_rtl.cc	/^uptr kHighMemEnd, kMidMemBeg, kMidMemEnd;$/;"	m	namespace:__asan	file:
kMidMemEnd	lib/asan/asan_mapping.h	/^static uptr kMidMemEnd =    0x4fffffffffULL;$/;"	m	namespace:__asan
kMidMemEnd	lib/asan/asan_rtl.cc	/^uptr kHighMemEnd, kMidMemBeg, kMidMemEnd;$/;"	m	namespace:__asan	file:
kMidShadowBeg	lib/asan/asan_mapping_myriad.h	32;"	d
kMidShadowEnd	lib/asan/asan_mapping_myriad.h	33;"	d
kMidSize	lib/sanitizer_common/sanitizer_allocator_size_class_map.h	/^  static const uptr kMidSize = 1 << kMidSizeLog;$/;"	m	class:SizeClassMap
kMinDyldVersionWithAutoInterposition	lib/sanitizer_common/sanitizer_mac.cc	/^static const double kMinDyldVersionWithAutoInterposition = 360.0;$/;"	m	namespace:__sanitizer	file:
kMinSize	lib/sanitizer_common/sanitizer_allocator_size_class_map.h	/^  static const uptr kMinSize = 1 << kMinSizeLog;$/;"	m	class:SizeClassMap
kMinStackFrameSizeLog	lib/asan/asan_fake_stack.h	/^  static const uptr kMinStackFrameSizeLog = 6;  \/\/ Min frame is 64B.$/;"	m	class:__asan::FakeStack
kMinimalDistanceFromAnotherGlobal	lib/asan/asan_globals.cc	/^const uptr kMinimalDistanceFromAnotherGlobal = 64;$/;"	m	namespace:__asan	file:
kModuleArchARM64	lib/sanitizer_common/sanitizer_common.h	/^  kModuleArchARM64$/;"	e	enum:__sanitizer::ModuleArch
kModuleArchARMV6	lib/sanitizer_common/sanitizer_common.h	/^  kModuleArchARMV6,$/;"	e	enum:__sanitizer::ModuleArch
kModuleArchARMV7	lib/sanitizer_common/sanitizer_common.h	/^  kModuleArchARMV7,$/;"	e	enum:__sanitizer::ModuleArch
kModuleArchARMV7K	lib/sanitizer_common/sanitizer_common.h	/^  kModuleArchARMV7K,$/;"	e	enum:__sanitizer::ModuleArch
kModuleArchARMV7S	lib/sanitizer_common/sanitizer_common.h	/^  kModuleArchARMV7S,$/;"	e	enum:__sanitizer::ModuleArch
kModuleArchI386	lib/sanitizer_common/sanitizer_common.h	/^  kModuleArchI386,$/;"	e	enum:__sanitizer::ModuleArch
kModuleArchUnknown	lib/sanitizer_common/sanitizer_common.h	/^  kModuleArchUnknown,$/;"	e	enum:__sanitizer::ModuleArch
kModuleArchX86_64	lib/sanitizer_common/sanitizer_common.h	/^  kModuleArchX86_64,$/;"	e	enum:__sanitizer::ModuleArch
kModuleArchX86_64H	lib/sanitizer_common/sanitizer_common.h	/^  kModuleArchX86_64H,$/;"	e	enum:__sanitizer::ModuleArch
kModuleUUIDSize	lib/sanitizer_common/sanitizer_common.h	/^const uptr kModuleUUIDSize = 16;$/;"	m	namespace:__sanitizer
kMsanParamTlsSize	lib/msan/msan.h	/^const int kMsanParamTlsSize = 800;$/;"	v
kMsanRetvalTlsSize	lib/msan/msan.h	/^const int kMsanRetvalTlsSize = 800;$/;"	v
kMutex	test/tsan/bench_ten_mutexes.cc	/^const int kMutex = 10;$/;"	v
kMutexes	test/tsan/real_deadlock_detector_stress_test.cc	/^const int kMutexes = 16 << 10;$/;"	v
kMyriadCacheBitMask32	lib/asan/asan_mapping.h	/^static const u64 kMyriadCacheBitMask32 = 0x40000000ULL;$/;"	v
kMyriadMemoryEnd32	lib/asan/asan_mapping.h	/^static const u64 kMyriadMemoryEnd32 =$/;"	v
kMyriadMemoryOffset32	lib/asan/asan_mapping.h	/^static const u64 kMyriadMemoryOffset32 = 0x80000000ULL;$/;"	v
kMyriadMemorySize32	lib/asan/asan_mapping.h	/^static const u64 kMyriadMemorySize32 = 0x20000000ULL;$/;"	v
kMyriadShadowOffset32	lib/asan/asan_mapping.h	/^static const u64 kMyriadShadowOffset32 =$/;"	v
kNetBSD_ShadowOffset32	lib/asan/asan_mapping.h	/^static const u64 kNetBSD_ShadowOffset32 = 1ULL << 30;  \/\/ 0x40000000$/;"	v
kNetBSD_ShadowOffset64	lib/asan/asan_mapping.h	/^static const u64 kNetBSD_ShadowOffset64 = 1ULL << 46;  \/\/ 0x400000000000$/;"	v
kNoId	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^const u32 kNoId = -1;$/;"	m	namespace:__sanitizer	file:
kNumAllocs	test/asan/TestCases/Linux/quarantine_size_mb.cc	/^static const int kNumAllocs = 1 << 11;$/;"	v	file:
kNumAllocs	test/asan/TestCases/Linux/thread_local_quarantine_size_kb.cc	/^static const int kNumAllocs = 20000;$/;"	v	file:
kNumAllocs	test/sanitizer_common/TestCases/Linux/hard_rss_limit_mb_test.cc	/^const int kNumAllocs = 200 * 1000;$/;"	v
kNumAllocs	test/scudo/rss.c	/^static const size_t kNumAllocs = 128;$/;"	v	file:
kNumClasses	lib/sanitizer_common/sanitizer_allocator_local_cache.h	/^  static const uptr kNumClasses = SizeClassMap::kNumClasses;$/;"	m	struct:SizeClassAllocator32LocalCache
kNumClasses	lib/sanitizer_common/sanitizer_allocator_local_cache.h	/^  static const uptr kNumClasses = SizeClassMap::kNumClasses;$/;"	m	struct:SizeClassAllocator64LocalCache
kNumClasses	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^  static const uptr kNumClasses = SizeClassMap::kNumClasses;$/;"	m	class:SizeClassAllocator32
kNumClasses	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  static const uptr kNumClasses = SizeClassMap::kNumClasses;$/;"	m	class:SizeClassAllocator64
kNumClasses	lib/sanitizer_common/sanitizer_allocator_size_class_map.h	/^  static const uptr kNumClasses =$/;"	m	class:SizeClassMap
kNumClassesRounded	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  static const uptr kNumClassesRounded = SizeClassMap::kNumClassesRounded;$/;"	m	class:SizeClassAllocator64
kNumClassesRounded	lib/sanitizer_common/sanitizer_allocator_size_class_map.h	/^  static const uptr kNumClassesRounded =$/;"	m	class:SizeClassMap
kNumExtraStats	lib/fuzzer/afl/afl_driver.cpp	/^static const int kNumExtraStats = 2;$/;"	v	file:
kNumFlags	lib/fuzzer/FuzzerDriver.cpp	/^static const size_t kNumFlags =$/;"	m	namespace:fuzzer	file:
kNumIter	lib/tsan/benchmarks/mini_bench_local.cc	/^const int kNumIter = 1000;$/;"	v
kNumIter	lib/tsan/benchmarks/mini_bench_shared.cc	/^const int kNumIter = 1000;$/;"	v
kNumIter	test/asan/TestCases/Darwin/malloc_set_zone_name-mprotect.cc	/^const int kNumIter = 4096;$/;"	v
kNumIterations	lib/sanitizer_common/tests/malloc_stress_transfer_test.cc	/^const size_t kNumIterations = 1 << 7;$/;"	v
kNumIterations	test/asan/TestCases/Posix/halt_on_error_suppress_equal_pcs.cc	/^unsigned kNumIterations = 10;$/;"	v
kNumIters	lib/sanitizer_common/tests/standalone_malloc_test.cc	/^const size_t kNumIters = 1 << 23;$/;"	v
kNumLabels	lib/dfsan/dfsan.cc	/^static const uptr kNumLabels = 1 << (sizeof(dfsan_label) * 8);$/;"	v	file:
kNumMutexes	lib/tsan/benchmarks/vts_many_threads_bench.cc	/^const int kNumMutexes = 1024;$/;"	v
kNumPCs	lib/fuzzer/FuzzerTracePC.h	/^  static const size_t kNumPCs = 1 << 21;$/;"	m	class:fuzzer::TracePC
kNumPossibleRegions	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^  static const uptr kNumPossibleRegions = kSpaceSize \/ kRegionSize;$/;"	m	class:SizeClassAllocator32
kNumRegions	lib/asan/asan_allocator.h	/^static const uptr kNumRegions = SANITIZER_MMAP_RANGE_SIZE >> kRegionSizeLog;$/;"	m	namespace:__asan
kNumRegions	lib/hwasan/hwasan_allocator.cc	/^static const uptr kNumRegions = SANITIZER_MMAP_RANGE_SIZE >> kRegionSizeLog;$/;"	m	namespace:__hwasan	file:
kNumRegions	lib/lsan/lsan_allocator.h	/^static const uptr kNumRegions = SANITIZER_MMAP_RANGE_SIZE >> kRegionSizeLog;$/;"	m	namespace:__lsan
kNumRegions	lib/msan/msan_allocator.cc	/^  static const uptr kNumRegions = SANITIZER_MMAP_RANGE_SIZE >> kRegionSizeLog;$/;"	m	namespace:__msan	file:
kNumShards	lib/sanitizer_common/tests/sanitizer_thread_registry_test.cc	/^static const int kNumShards = 25;$/;"	m	namespace:__sanitizer	file:
kNumStackOriginDescrs	lib/msan/msan.cc	/^static const uptr kNumStackOriginDescrs = 1024 * 1024;$/;"	m	namespace:__msan	file:
kNumThreads	lib/sanitizer_common/tests/malloc_stress_transfer_test.cc	/^const size_t kNumThreads = 16;$/;"	v
kNumThreads	test/asan/TestCases/Linux/thread_local_quarantine_pthread_join.cc	/^static const int kNumThreads = 2048;$/;"	v	file:
kNumThreads	test/asan/TestCases/Posix/gc-test.cc	/^static const int kNumThreads = 2;$/;"	v	file:
kNumThreads	test/scudo/tsd_destruction.c	/^const int kNumThreads = 16;$/;"	v
kNumThreds	lib/sanitizer_common/tests/standalone_malloc_test.cc	/^const size_t kNumThreds = 16;$/;"	v
kNumZones	test/asan/TestCases/Darwin/malloc_set_zone_name-mprotect.cc	/^const int kNumZones = 100;$/;"	v
kNumberOfSizeClasses	lib/asan/asan_allocator.h	/^static const uptr kNumberOfSizeClasses = SizeClassMap::kNumClasses;$/;"	m	namespace:__asan
kNumberOfSizeClasses	lib/asan/asan_fake_stack.h	/^  static const uptr kNumberOfSizeClasses =$/;"	m	class:__asan::FakeStack
kODRViolation	lib/asan/asan_suppressions.cc	/^static const char kODRViolation[] = "odr_violation";$/;"	m	namespace:__asan	file:
kOverriddenSigactionHandler	lib/asan/tests/asan_test.cc	/^const char kOverriddenSigactionHandler[] = "Test sigaction handler\\n";$/;"	m	namespace:__anon39	file:
kOverriddenSignalHandler	lib/asan/tests/asan_test.cc	/^const char kOverriddenSignalHandler[] = "Test signal handler\\n";$/;"	m	namespace:__anon39	file:
kPCInc	test/tsan/test.h	/^const int kPCInc = 1;$/;"	v
kPCInc	test/tsan/test.h	/^const int kPCInc = 4;$/;"	v
kPCInc	test/tsan/test.h	/^const int kPCInc = 8;$/;"	v
kPPC64_ShadowOffset64	lib/asan/asan_mapping.h	/^static const u64 kPPC64_ShadowOffset64 = 1ULL << 44;$/;"	v
kPageSize	lib/asan/tests/asan_test_utils.h	/^static const int kPageSize = 4096;$/;"	v
kPartBits	lib/sanitizer_common/sanitizer_stackdepotbase.h	/^  static const int kPartBits = 8;$/;"	m	class:__sanitizer::StackDepotBase
kPartCount	lib/sanitizer_common/sanitizer_stackdepotbase.h	/^  static const int kPartCount =$/;"	m	class:__sanitizer::StackDepotBase
kPartShift	lib/sanitizer_common/sanitizer_stackdepotbase.h	/^  static const int kPartShift = sizeof(u32) * 8 - kPartBits - kReservedBits;$/;"	m	class:__sanitizer::StackDepotBase
kPartSize	lib/sanitizer_common/sanitizer_stackdepotbase.h	/^  static const int kPartSize = kTabSize \/ kPartCount;$/;"	m	class:__sanitizer::StackDepotBase
kPatchableCode1	lib/interception/tests/interception_win_test.cc	/^const u8 kPatchableCode1[] = {$/;"	m	namespace:__interception::__anon12	file:
kPatchableCode2	lib/interception/tests/interception_win_test.cc	/^const u8 kPatchableCode2[] = {$/;"	m	namespace:__interception::__anon12	file:
kPatchableCode3	lib/interception/tests/interception_win_test.cc	/^const u8 kPatchableCode3[] = {$/;"	m	namespace:__interception::__anon12	file:
kPatchableCode4	lib/interception/tests/interception_win_test.cc	/^const u8 kPatchableCode4[] = {$/;"	m	namespace:__interception::__anon12	file:
kPatchableCode5	lib/interception/tests/interception_win_test.cc	/^const u8 kPatchableCode5[] = {$/;"	m	namespace:__interception::__anon12	file:
kPathSeparator	lib/sanitizer_common/sanitizer_file.cc	/^static const char kPathSeparator = SANITIZER_WINDOWS ? ';' : ':';$/;"	m	namespace:__sanitizer	file:
kPeriodicNumAllocs	lib/sanitizer_common/tests/malloc_stress_transfer_test.cc	/^const size_t kPeriodicNumAllocs = 1 << 10;$/;"	v
kProtectionExecute	lib/sanitizer_common/sanitizer_procmaps.h	/^static const uptr kProtectionExecute = 4;$/;"	m	namespace:__sanitizer
kProtectionRead	lib/sanitizer_common/sanitizer_procmaps.h	/^static const uptr kProtectionRead = 1;$/;"	m	namespace:__sanitizer
kProtectionShared	lib/sanitizer_common/sanitizer_procmaps.h	/^static const uptr kProtectionShared = 8;$/;"	m	namespace:__sanitizer
kProtectionWrite	lib/sanitizer_common/sanitizer_procmaps.h	/^static const uptr kProtectionWrite = 2;$/;"	m	namespace:__sanitizer
kPtrMask	lib/sanitizer_common/sanitizer_lfstack.h	/^  static const u64 kPtrMask = ((u64)-1) >> kCounterBits;$/;"	m	struct:__sanitizer::LFStack
kRandomShuffleChunks	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^    kRandomShuffleChunks = 1,$/;"	e	enum:SizeClassAllocator32FlagMasks::__anon100
kRandomShuffleChunks	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^  static const bool kRandomShuffleChunks = Params::kFlags &$/;"	m	class:SizeClassAllocator32
kRandomShuffleChunks	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^    kRandomShuffleChunks = 1,$/;"	e	enum:SizeClassAllocator64FlagMasks::__anon89
kRandomShuffleChunks	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  static const bool kRandomShuffleChunks =$/;"	m	class:SizeClassAllocator64
kReachable	lib/lsan/lsan_common.h	/^  kReachable = 2,$/;"	e	enum:__lsan::ChunkTag
kReadBit	lib/tsan/rtl/tsan_rtl.h	/^  static const u64 kReadBit     = 1ull << kReadShift;$/;"	m	class:__tsan::Shadow
kReadLock	lib/sanitizer_common/sanitizer_mutex.h	/^    kReadLock = 2$/;"	e	enum:__sanitizer::RWMutex::__anon79
kReadLock	lib/tsan/rtl/tsan_mutex.cc	/^const uptr kReadLock = 2;$/;"	m	namespace:__tsan	file:
kReadShift	lib/tsan/rtl/tsan_rtl.h	/^  static const u64 kReadShift   = 5 + kClkBits;$/;"	m	class:__tsan::Shadow
kRecvBufSize	test/msan/Linux/sendmsg.cc	/^const int kRecvBufSize = 100;$/;"	v
kRefIdx	lib/tsan/rtl/tsan_defs.h	/^  static const uptr kRefIdx = kTableSize - 1;$/;"	m	struct:__tsan::ClockBlock
kRegionSize	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^  static const uptr kRegionSize = 1 << kRegionSizeLog;$/;"	m	class:SizeClassAllocator32
kRegionSize	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  static const uptr kRegionSize = kSpaceSize \/ kNumClassesRounded;$/;"	m	class:SizeClassAllocator64
kRegionSizeLog	lib/asan/asan_allocator.h	/^  static const uptr kRegionSizeLog = __asan::kRegionSizeLog;$/;"	m	struct:__asan::AP32
kRegionSizeLog	lib/asan/asan_allocator.h	/^static const uptr kRegionSizeLog = 20;$/;"	m	namespace:__asan
kRegionSizeLog	lib/hwasan/hwasan_allocator.cc	/^  static const uptr kRegionSizeLog = __hwasan::kRegionSizeLog;$/;"	m	struct:__hwasan::AP32	file:
kRegionSizeLog	lib/hwasan/hwasan_allocator.cc	/^static const uptr kRegionSizeLog = 20;$/;"	m	namespace:__hwasan	file:
kRegionSizeLog	lib/lsan/lsan_allocator.h	/^  static const uptr kRegionSizeLog = __lsan::kRegionSizeLog;$/;"	m	struct:__lsan::AP32
kRegionSizeLog	lib/lsan/lsan_allocator.h	/^static const uptr kRegionSizeLog = 20;$/;"	m	namespace:__lsan
kRegionSizeLog	lib/msan/msan_allocator.cc	/^    static const uptr kRegionSizeLog = __msan::kRegionSizeLog;$/;"	m	struct:__msan::AP32	file:
kRegionSizeLog	lib/msan/msan_allocator.cc	/^  static const uptr kRegionSizeLog = 20;$/;"	m	namespace:__msan	file:
kRegionSizeLog	lib/sanitizer_common/sanitizer_allocator_internal.h	/^  static const uptr kRegionSizeLog = kInternalAllocatorRegionSizeLog;$/;"	m	struct:__sanitizer::AP32
kRegionSizeLog	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^  static const uptr kRegionSizeLog = Params::kRegionSizeLog;$/;"	m	class:SizeClassAllocator32
kRegionSizeLog	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  static const uptr kRegionSizeLog = ::kRegionSizeLog;$/;"	m	struct:AP32Compact	file:
kRegionSizeLog	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  static const uptr kRegionSizeLog = ::kRegionSizeLog;$/;"	m	struct:AP32SeparateBatches	file:
kRegionSizeLog	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  static const uptr kRegionSizeLog = ::kRegionSizeLog;$/;"	m	struct:AP32WithCallback	file:
kRegionSizeLog	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^static const uptr kRegionSizeLog = FIRST_32_SECOND_64(20, 24);$/;"	v	file:
kRegionSizeLog	lib/tsan/rtl/tsan_rtl.h	/^  static const uptr kRegionSizeLog = kAllocatorRegionSizeLog;$/;"	m	struct:__tsan::AP32
kRegistryQuarantine	lib/sanitizer_common/tests/sanitizer_thread_registry_test.cc	/^static const u32 kRegistryQuarantine = 2;$/;"	m	namespace:__sanitizer	file:
kReleaseToOSIntervalNever	lib/sanitizer_common/sanitizer_common.h	/^const s32 kReleaseToOSIntervalNever = -1;$/;"	m	namespace:__sanitizer
kRepeat	lib/tsan/tests/rtl/tsan_bench.cc	/^const int kRepeat = 2*1024*1024;$/;"	v
kRetiredStackFrameMagic	lib/asan/asan_internal.h	/^static const uptr kRetiredStackFrameMagic = 0x45E0360E;$/;"	m	namespace:__asan
kRunDuration	lib/sanitizer_common/tests/sanitizer_stoptheworld_testlib.cc	/^const uptr kRunDuration = 3;$/;"	m	namespace:__anon60	file:
kSEGVCrash	lib/asan/tests/asan_test.cc	/^const char kSEGVCrash[] = "AddressSanitizer: SEGV on unknown address";$/;"	m	namespace:__anon39	file:
kSHA1NumBytes	lib/fuzzer/FuzzerSHA1.h	/^static const int kSHA1NumBytes = 20;$/;"	m	namespace:fuzzer
kSancovSinkName	lib/sanitizer_common/sanitizer_coverage_fuchsia.cc	/^constexpr const char kSancovSinkName[] = "sancov";$/;"	m	namespace:__sancov::__anon63	file:
kSanitizerVmMemoryOsAllocOnce	lib/lsan/lsan_common_mac.cc	/^static const int kSanitizerVmMemoryOsAllocOnce = 73;$/;"	v	file:
kSanitizerVmMemoryOsAllocOnce	lib/lsan/lsan_common_mac.cc	/^static const int kSanitizerVmMemoryOsAllocOnce = VM_MEMORY_OS_ALLOC_ONCE;$/;"	v	file:
kSecondsToSleepWhenRecursiveCheckFailed	lib/sanitizer_common/sanitizer_termination.cc	/^const int kSecondsToSleepWhenRecursiveCheckFailed = 2;$/;"	m	namespace:__sanitizer	file:
kShadowAddr	lib/dfsan/dfsan_platform.h	/^  static const uptr kShadowAddr = 0x10000;$/;"	m	struct:__dfsan::Mapping
kShadowAlign	lib/cfi/cfi.cc	/^static constexpr uptr kShadowAlign = 1UL << kShadowGranularity; \/\/ 4096$/;"	m	namespace:__cfi	file:
kShadowAlignment	lib/hwasan/hwasan_mapping.h	/^constexpr __sanitizer::uptr kShadowAlignment = 1ULL << kShadowScale;$/;"	v
kShadowBeg	lib/tsan/rtl/tsan_platform.h	/^  static const uptr kShadowBeg     = 0x010000000000ull;$/;"	m	struct:__tsan::Mapping
kShadowCell	lib/tsan/rtl/tsan_defs.h	/^const uptr kShadowCell = 8;$/;"	m	namespace:__tsan
kShadowCnt	lib/tsan/rtl/tsan_defs.h	/^const uptr kShadowCnt = 4;$/;"	m	namespace:__tsan
kShadowEnd	lib/tsan/rtl/tsan_platform.h	/^  static const uptr kShadowEnd     = 0x200000000000ull;$/;"	m	struct:__tsan::Mapping
kShadowGap2Beg	lib/asan/asan_mapping_myriad.h	38;"	d
kShadowGap2End	lib/asan/asan_mapping_myriad.h	39;"	d
kShadowGap3Beg	lib/asan/asan_mapping_myriad.h	41;"	d
kShadowGap3End	lib/asan/asan_mapping_myriad.h	42;"	d
kShadowGapBeg	lib/asan/asan_mapping_myriad.h	35;"	d
kShadowGapEnd	lib/asan/asan_mapping_myriad.h	36;"	d
kShadowGranularity	lib/cfi/cfi.cc	/^static constexpr uptr kShadowGranularity = 12;$/;"	m	namespace:__cfi	file:
kShadowGranularity	test/cfi/cross-dso/shadow_is_read_only.cpp	/^constexpr unsigned kShadowGranularity = 12;$/;"	v
kShadowMask	lib/dfsan/dfsan_platform.h	/^  static const uptr kShadowMask = ~0x700000000000;$/;"	m	struct:__dfsan::Mapping
kShadowMemoryMappingHint	lib/tsan/rtl/tsan_platform_posix.cc	/^static const char kShadowMemoryMappingHint[] =$/;"	m	namespace:__tsan	file:
kShadowMemoryMappingWarning	lib/tsan/rtl/tsan_platform_posix.cc	/^static const char kShadowMemoryMappingWarning[] =$/;"	m	namespace:__tsan	file:
kShadowMultiplier	lib/tsan/rtl/tsan_defs.h	/^const uptr kShadowMultiplier = kShadowSize * kShadowCnt \/ kShadowCell;$/;"	m	namespace:__tsan
kShadowRodata	lib/tsan/rtl/tsan_rtl.h	/^const u64 kShadowRodata = (u64)-1;  \/\/ .rodata shadow marker$/;"	m	namespace:__tsan
kShadowScale	lib/hwasan/hwasan_mapping.h	/^constexpr __sanitizer::uptr kShadowScale = 4;$/;"	v
kShadowSize	lib/tsan/rtl/tsan_defs.h	/^const uptr kShadowSize = 8;$/;"	m	namespace:__tsan
kShadowStackSize	lib/tsan/rtl/tsan_defs.h	/^const uptr kShadowStackSize = 64 * 1024;$/;"	m	namespace:__tsan
kShmemSize	lib/fuzzer/FuzzerShmem.h	/^  static const size_t kShmemSize = 1 << 22;$/;"	m	class:fuzzer::SharedMemoryRegion
kShortJumpInstructionLength	lib/interception/interception_win.cc	/^static const int kShortJumpInstructionLength = 2;$/;"	m	namespace:__interception	file:
kSigCnt	test/msan/signal_stress_test.cc	/^const int kSigCnt = 200;$/;"	v
kSigCount	lib/tsan/rtl/tsan_interceptors.cc	/^const int kSigCount = 129;$/;"	v
kSigRestart	test/tsan/signal_recursive.cc	/^static const int kSigRestart = SIGUSR2;$/;"	v	file:
kSigSuspend	test/tsan/signal_recursive.cc	/^static const int kSigSuspend = SIGUSR1;$/;"	v	file:
kSignalCount	test/tsan/signal_sync2.cc	/^const int kSignalCount = 500;$/;"	v
kSize	lib/fuzzer/FuzzerTracePC.h	/^  static const size_t kSize = kSizeT;$/;"	m	struct:fuzzer::MemMemTable
kSize	lib/fuzzer/FuzzerTracePC.h	/^  static const size_t kSize = kSizeT;$/;"	m	struct:fuzzer::TableOfRecentCompares
kSize	lib/sanitizer_common/sanitizer_quarantine.h	/^  static const uptr kSize = 1021;$/;"	m	struct:__sanitizer::QuarantineBatch
kSize	lib/sanitizer_common/tests/sanitizer_mutex_test.cc	/^  static const int kSize = 64;$/;"	m	class:__sanitizer::TestData	file:
kSize	lib/tsan/rtl/tsan_defs.h	/^  static const uptr kSize = 512;$/;"	m	struct:__tsan::ClockBlock
kSize	lib/tsan/rtl/tsan_dense_alloc.h	/^  static const uptr kSize = 128;$/;"	m	class:__tsan::DenseSlabAllocCache
kSize	lib/tsan/tests/rtl/tsan_bench.cc	/^const int kSize = 128;$/;"	v
kSize	lib/tsan/tests/unit/tsan_mutex_test.cc	/^  static const int kSize = 64;$/;"	m	class:__tsan::TestData	file:
kSize	lib/xray/tests/unit/buffer_queue_test.cc	/^static constexpr size_t kSize = 4096;$/;"	m	namespace:__xray	file:
kSize	test/asan/TestCases/Posix/stack-use-after-return.cc	31;"	d	file:
kSize	test/tsan/barrier.cc	/^const int kSize = 4;$/;"	v
kSize	test/tsan/restore_stack.cc	/^const int kSize = 64 << 10;$/;"	v
kSizeLog1	lib/tsan/rtl/tsan_rtl.h	/^const int kSizeLog1 = 0;$/;"	m	namespace:__tsan
kSizeLog2	lib/tsan/rtl/tsan_rtl.h	/^const int kSizeLog2 = 1;$/;"	m	namespace:__tsan
kSizeLog4	lib/tsan/rtl/tsan_rtl.h	/^const int kSizeLog4 = 2;$/;"	m	namespace:__tsan
kSizeLog8	lib/tsan/rtl/tsan_rtl.h	/^const int kSizeLog8 = 3;$/;"	m	namespace:__tsan
kSkippedSecNames	lib/lsan/lsan_common_mac.cc	/^static const char *kSkippedSecNames[] = {$/;"	m	namespace:__lsan	file:
kSmallPage	test/tsan/bench_shadow_flush.cc	/^const long kSmallPage = 4 << 10;$/;"	v
kSpaceBeg	lib/asan/asan_allocator.h	/^  static const uptr kSpaceBeg = 0;$/;"	m	struct:__asan::AP32
kSpaceBeg	lib/asan/asan_allocator.h	/^  static const uptr kSpaceBeg = kAllocatorSpace;$/;"	m	struct:__asan::AP64
kSpaceBeg	lib/hwasan/hwasan_allocator.cc	/^  static const uptr kSpaceBeg = 0;$/;"	m	struct:__hwasan::AP32	file:
kSpaceBeg	lib/lsan/lsan_allocator.h	/^  static const uptr kSpaceBeg = 0;$/;"	m	struct:__lsan::AP32
kSpaceBeg	lib/lsan/lsan_allocator.h	/^  static const uptr kSpaceBeg = kAllocatorSpace;$/;"	m	struct:__lsan::AP64
kSpaceBeg	lib/msan/msan_allocator.cc	/^    static const uptr kSpaceBeg = 0;$/;"	m	struct:__msan::AP32	file:
kSpaceBeg	lib/msan/msan_allocator.cc	/^    static const uptr kSpaceBeg = 0x300000000000;$/;"	m	struct:__msan::AP64	file:
kSpaceBeg	lib/msan/msan_allocator.cc	/^    static const uptr kSpaceBeg = kAllocatorSpace;$/;"	m	struct:__msan::AP64	file:
kSpaceBeg	lib/sanitizer_common/sanitizer_allocator_internal.h	/^  static const uptr kSpaceBeg = 0;$/;"	m	struct:__sanitizer::AP32
kSpaceBeg	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^  static const uptr kSpaceBeg = Params::kSpaceBeg;$/;"	m	class:SizeClassAllocator32
kSpaceBeg	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  static const uptr kSpaceBeg = Params::kSpaceBeg;$/;"	m	class:SizeClassAllocator64
kSpaceBeg	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  static const uptr kSpaceBeg = 0;$/;"	m	struct:AP32Compact	file:
kSpaceBeg	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  static const uptr kSpaceBeg = 0;$/;"	m	struct:AP32SeparateBatches	file:
kSpaceBeg	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  static const uptr kSpaceBeg = 0;$/;"	m	struct:AP32WithCallback	file:
kSpaceBeg	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  static const uptr kSpaceBeg = kAllocatorSpace;$/;"	m	struct:AP64	file:
kSpaceBeg	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  static const uptr kSpaceBeg = kAllocatorSpace;$/;"	m	struct:AP64WithCallback	file:
kSpaceBeg	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  static const uptr kSpaceBeg = kAllocatorSpace;$/;"	m	struct:AP64_SpecialSizeClassMap	file:
kSpaceBeg	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  static const uptr kSpaceBeg = ~(uptr)0;$/;"	m	struct:AP64Compact	file:
kSpaceBeg	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  static const uptr kSpaceBeg = ~(uptr)0;$/;"	m	struct:AP64Dyn	file:
kSpaceBeg	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  static const uptr kSpaceBeg = ~(uptr)0;$/;"	m	struct:AP64VeryCompact	file:
kSpaceBeg	lib/sanitizer_common/tests/sanitizer_allocator_testlib.cc	/^  static const uptr kSpaceBeg = ~(uptr)0;$/;"	m	struct:__AP64	file:
kSpaceBeg	lib/scudo/scudo_allocator.h	/^  static const uptr kSpaceBeg = AllocatorSpace;$/;"	m	struct:__scudo::AP64
kSpaceBeg	lib/tsan/rtl/tsan_rtl.h	/^  static const uptr kSpaceBeg = 0;$/;"	m	struct:__tsan::AP32
kSpaceBeg	lib/tsan/rtl/tsan_rtl.h	/^  static const uptr kSpaceBeg = Mapping::kHeapMemBeg;$/;"	m	struct:__tsan::AP64
kSpaceSize	lib/asan/asan_allocator.h	/^  static const u64 kSpaceSize = SANITIZER_MMAP_RANGE_SIZE;$/;"	m	struct:__asan::AP32
kSpaceSize	lib/asan/asan_allocator.h	/^  static const uptr kSpaceSize = kAllocatorSize;$/;"	m	struct:__asan::AP64
kSpaceSize	lib/hwasan/hwasan_allocator.cc	/^  static const u64 kSpaceSize = SANITIZER_MMAP_RANGE_SIZE;$/;"	m	struct:__hwasan::AP32	file:
kSpaceSize	lib/lsan/lsan_allocator.h	/^  static const u64 kSpaceSize = SANITIZER_MMAP_RANGE_SIZE;$/;"	m	struct:__lsan::AP32
kSpaceSize	lib/lsan/lsan_allocator.h	/^  static const uptr kSpaceSize = kAllocatorSize;$/;"	m	struct:__lsan::AP64
kSpaceSize	lib/msan/msan_allocator.cc	/^    static const u64 kSpaceSize = SANITIZER_MMAP_RANGE_SIZE;$/;"	m	struct:__msan::AP32	file:
kSpaceSize	lib/msan/msan_allocator.cc	/^    static const uptr kSpaceSize = 0x020000000000; \/\/ 2T.$/;"	m	struct:__msan::AP64	file:
kSpaceSize	lib/msan/msan_allocator.cc	/^    static const uptr kSpaceSize = 0x40000000000; \/\/ 4T.$/;"	m	struct:__msan::AP64	file:
kSpaceSize	lib/sanitizer_common/sanitizer_allocator_internal.h	/^  static const u64 kSpaceSize = SANITIZER_MMAP_RANGE_SIZE;$/;"	m	struct:__sanitizer::AP32
kSpaceSize	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^  static const u64 kSpaceSize = Params::kSpaceSize;$/;"	m	class:SizeClassAllocator32
kSpaceSize	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  static const uptr kSpaceSize = Params::kSpaceSize;$/;"	m	class:SizeClassAllocator64
kSpaceSize	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  static const u64 kSpaceSize = kAddressSpaceSize;$/;"	m	struct:AP32Compact	file:
kSpaceSize	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  static const u64 kSpaceSize = kAddressSpaceSize;$/;"	m	struct:AP32SeparateBatches	file:
kSpaceSize	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  static const u64 kSpaceSize = kAddressSpaceSize;$/;"	m	struct:AP32WithCallback	file:
kSpaceSize	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  static const uptr kSpaceSize = 1ULL << 37;$/;"	m	struct:AP64VeryCompact	file:
kSpaceSize	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  static const uptr kSpaceSize = kAllocatorSize;$/;"	m	struct:AP64	file:
kSpaceSize	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  static const uptr kSpaceSize = kAllocatorSize;$/;"	m	struct:AP64Compact	file:
kSpaceSize	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  static const uptr kSpaceSize = kAllocatorSize;$/;"	m	struct:AP64Dyn	file:
kSpaceSize	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  static const uptr kSpaceSize = kAllocatorSize;$/;"	m	struct:AP64WithCallback	file:
kSpaceSize	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  static const uptr kSpaceSize = kAllocatorSize;$/;"	m	struct:AP64_SpecialSizeClassMap	file:
kSpaceSize	lib/sanitizer_common/tests/sanitizer_allocator_testlib.cc	/^  static const uptr kSpaceSize = kAllocatorSize;$/;"	m	struct:__AP64	file:
kSpaceSize	lib/scudo/scudo_allocator.h	/^  static const uptr kSpaceSize = AllocatorSize;$/;"	m	struct:__scudo::AP64
kSpaceSize	lib/tsan/rtl/tsan_rtl.h	/^  static const u64 kSpaceSize = SANITIZER_MMAP_RANGE_SIZE;$/;"	m	struct:__tsan::AP32
kSpaceSize	lib/tsan/rtl/tsan_rtl.h	/^  static const uptr kSpaceSize = Mapping::kHeapMemEnd - Mapping::kHeapMemBeg;$/;"	m	struct:__tsan::AP64
kStackAlign	lib/safestack/safestack.cc	/^const unsigned kStackAlign = 16;$/;"	v
kStackDepotMaxUseCount	lib/sanitizer_common/sanitizer_stackdepot.h	/^const int kStackDepotMaxUseCount = 1U << 20;$/;"	m	namespace:__sanitizer
kStackIdMask	lib/msan/msan_origin.h	/^  static const u32 kStackIdMask = ((u32)-1) >> (32 - kDepthShift);$/;"	m	class:__msan::Origin
kStackReadOverflow	lib/asan/tests/asan_str_test.cc	/^const char kStackReadOverflow[] =$/;"	v
kStackReadUnderflow	lib/asan/tests/asan_str_test.cc	/^const char kStackReadUnderflow[] =$/;"	v
kStackSize	test/asan/TestCases/Linux/swapcontext_annotation.cc	/^const int kStackSize = 1 << 20;$/;"	v
kStackSize	test/asan/TestCases/Linux/swapcontext_test.cc	/^const int kStackSize = 1 << 20;$/;"	v
kStackSize	test/asan/TestCases/Posix/stack-use-after-return.cc	39;"	d	file:
kStackSize	test/lsan/TestCases/swapcontext.cc	/^const int kStackSize = 1 << 20;$/;"	v
kStackTraceMax	lib/sanitizer_common/sanitizer_stacktrace.h	/^static const u32 kStackTraceMax = 256;$/;"	m	namespace:__sanitizer
kStateInited	test/tsan/real_deadlock_detector_stress_test.cc	/^const int kStateInited = 0;$/;"	v
kStateLocked	test/tsan/real_deadlock_detector_stress_test.cc	/^const int kStateLocked = -2;$/;"	v
kStateNotInited	test/tsan/real_deadlock_detector_stress_test.cc	/^const int kStateNotInited = -1;$/;"	v
kStdSuppressions	lib/lsan/lsan_common.cc	/^static const char kStdSuppressions[] =$/;"	m	namespace:__lsan	file:
kStderrFd	lib/sanitizer_common/sanitizer_libc.h	65;"	d
kStdinFd	lib/sanitizer_common/sanitizer_libc.h	63;"	d
kStdoutFd	lib/sanitizer_common/sanitizer_libc.h	64;"	d
kStopWorldAfter	lib/sanitizer_common/tests/sanitizer_stoptheworld_test.cc	/^static const uptr kStopWorldAfter = 10; \/\/ let this many threads spawn first$/;"	m	namespace:__sanitizer	file:
kStride	test/tsan/bench_local_mutex.cc	/^const int kStride = 16;$/;"	v
kStride	test/tsan/bench_release_only.cc	/^const int kStride = 32;$/;"	v
kStride	test/tsan/bench_shadow_flush.cc	/^const long kStride    = 1 << 10;$/;"	v
kString	test/asan/TestCases/Posix/strndup_oob_test.cc	/^char kString[] = "foo";$/;"	v
kString	test/asan/TestCases/strdup_oob_test.cc	/^char kString[] = "foo";$/;"	v
kStrlcpyBufSize	lib/sanitizer_common/tests/sanitizer_libc_test.cc	/^static const size_t kStrlcpyBufSize = 8;$/;"	v	file:
kSuppressionDeadlock	lib/tsan/rtl/tsan_suppressions.h	/^const char kSuppressionDeadlock[] = "deadlock";$/;"	m	namespace:__tsan
kSuppressionLeak	lib/lsan/lsan_common.cc	/^static const char kSuppressionLeak[] = "leak";$/;"	m	namespace:__lsan	file:
kSuppressionLib	lib/tsan/rtl/tsan_suppressions.h	/^const char kSuppressionLib[] = "called_from_lib";$/;"	m	namespace:__tsan
kSuppressionMutex	lib/tsan/rtl/tsan_suppressions.h	/^const char kSuppressionMutex[] = "mutex";$/;"	m	namespace:__tsan
kSuppressionNone	lib/tsan/rtl/tsan_suppressions.h	/^const char kSuppressionNone[] = "none";$/;"	m	namespace:__tsan
kSuppressionRace	lib/tsan/rtl/tsan_suppressions.h	/^const char kSuppressionRace[] = "race";$/;"	m	namespace:__tsan
kSuppressionRaceTop	lib/tsan/rtl/tsan_suppressions.h	/^const char kSuppressionRaceTop[] = "race_top";$/;"	m	namespace:__tsan
kSuppressionSignal	lib/tsan/rtl/tsan_suppressions.h	/^const char kSuppressionSignal[] = "signal";$/;"	m	namespace:__tsan
kSuppressionThread	lib/tsan/rtl/tsan_suppressions.h	/^const char kSuppressionThread[] = "thread";$/;"	m	namespace:__tsan
kSuppressionTypes	lib/asan/asan_suppressions.cc	/^static const char *kSuppressionTypes[] = {$/;"	m	namespace:__asan	file:
kSuppressionTypes	lib/lsan/lsan_common.cc	/^static const char *kSuppressionTypes[] = { kSuppressionLeak };$/;"	m	namespace:__lsan	file:
kSuppressionTypes	lib/tsan/rtl/tsan_suppressions.cc	/^static const char *kSuppressionTypes[] = {$/;"	m	namespace:__tsan	file:
kSuppressionTypes	lib/ubsan/ubsan_diag.cc	/^static const char *kSuppressionTypes[] = {$/;"	v	file:
kSuspendDuration	lib/sanitizer_common/tests/sanitizer_stoptheworld_testlib.cc	/^const uptr kSuspendDuration = 3;$/;"	m	namespace:__anon60	file:
kSymbolizerStartupTimeMillis	lib/sanitizer_common/sanitizer_symbolizer_internal.h	/^  static const int kSymbolizerStartupTimeMillis = 10;$/;"	m	class:__sanitizer::SymbolizerProcess
kSyncSignals	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^static const int kSyncSignals[] = { SIGABRT, SIGILL, SIGFPE, SIGSEGV, SIGBUS,$/;"	m	namespace:__sanitizer	file:
kSystemZ_ShadowOffset64	lib/asan/asan_mapping.h	/^static const u64 kSystemZ_ShadowOffset64 = 1ULL << 52;$/;"	v
kTabSize	lib/sanitizer_common/sanitizer_stackdepotbase.h	/^  static const int kTabSize = 1 << kTabSizeLog;  \/\/ Hash table size.$/;"	m	class:__sanitizer::StackDepotBase
kTabSizeLog	lib/sanitizer_common/sanitizer_stackdepot.cc	/^  static const u32 kTabSizeLog = 20;$/;"	m	struct:__sanitizer::StackDepotNode	file:
kTableSize	lib/tsan/rtl/tsan_defs.h	/^  static const uptr kTableSize = kSize \/ sizeof(u32);$/;"	m	struct:__tsan::ClockBlock
kTableSize	lib/tsan/rtl/tsan_fd.cc	/^const int kTableSize = kTableSizeL1 * kTableSizeL2;$/;"	m	namespace:__tsan	file:
kTableSizeL1	lib/tsan/rtl/tsan_fd.cc	/^const int kTableSizeL1 = 1024;$/;"	m	namespace:__tsan	file:
kTableSizeL2	lib/tsan/rtl/tsan_fd.cc	/^const int kTableSizeL2 = 1024;$/;"	m	namespace:__tsan	file:
kTestCount	test/tsan/atomic_norace.cc	/^const int kTestCount = 4;$/;"	v
kTestCount	test/tsan/atomic_race.cc	/^const int kTestCount = 4;$/;"	v
kTestSuppressionTypes	lib/sanitizer_common/tests/sanitizer_suppressions_test.cc	/^static const char *kTestSuppressionTypes[] = {"race", "thread", "mutex",$/;"	m	namespace:__sanitizer	file:
kThreadBufSize	lib/tsan/rtl/tsan_report.cc	/^const int kThreadBufSize = 32;$/;"	m	namespace:__tsan	file:
kThreadCount	lib/sanitizer_common/tests/sanitizer_linux_test.cc	/^  static const uptr kThreadCount = 20;$/;"	m	class:__sanitizer::ThreadListerTest	file:
kThreadCount	lib/sanitizer_common/tests/sanitizer_stoptheworld_test.cc	/^static const uptr kThreadCount = 50;$/;"	m	namespace:__sanitizer	file:
kThreadQuarantineSize	lib/lsan/lsan_thread.cc	/^static const uptr kThreadQuarantineSize = 64;$/;"	m	namespace:__lsan	file:
kThreadQuarantineSize	lib/tsan/rtl/tsan_rtl.cc	/^static const u32 kThreadQuarantineSize = 16;$/;"	m	namespace:__tsan	file:
kThreadQuarantineSize	lib/tsan/rtl/tsan_rtl.cc	/^static const u32 kThreadQuarantineSize = 64;$/;"	m	namespace:__tsan	file:
kThreadSelfOffset	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^const uptr kThreadSelfOffset = FIRST_32_SECOND_64(8, 16);$/;"	m	namespace:__sanitizer	file:
kThreads	lib/sanitizer_common/tests/sanitizer_mutex_test.cc	/^const int kThreads = 8;$/;"	m	namespace:__sanitizer	file:
kThreads	lib/tsan/tests/unit/tsan_clock_test.cc	/^const uptr kThreads = 4;$/;"	m	namespace:__tsan	file:
kThreads	lib/tsan/tests/unit/tsan_mutex_test.cc	/^const int kThreads = 8;$/;"	m	namespace:__tsan	file:
kThreads	test/tsan/race_stress.cc	/^const int kThreads = 16;$/;"	v
kThreads	test/tsan/real_deadlock_detector_stress_test.cc	/^const int kThreads = 4;$/;"	v
kThreadsPerShard	lib/sanitizer_common/tests/sanitizer_thread_registry_test.cc	/^static const int kThreadsPerShard = 20;$/;"	m	namespace:__sanitizer	file:
kTidBits	lib/tsan/rtl/tsan_defs.h	/^const int kTidBits = 13;$/;"	m	namespace:__tsan
kTidShift	lib/tsan/rtl/tsan_rtl.h	/^  static const int kTidShift = 64 - kTidBits - 1;$/;"	m	class:__tsan::FastState
kTotalTraceSize	lib/tsan/rtl/tsan_platform.h	/^const uptr kTotalTraceSize = (kTraceSize * sizeof(Event) + sizeof(Trace)$/;"	m	namespace:__tsan
kTraceMemBeg	lib/tsan/rtl/tsan_platform.h	/^  static const uptr kTraceMemBeg   = 0x600000000000ull;$/;"	m	struct:__tsan::Mapping
kTraceMemEnd	lib/tsan/rtl/tsan_platform.h	/^  static const uptr kTraceMemEnd   = 0x620000000000ull;$/;"	m	struct:__tsan::Mapping
kTracePartSize	lib/tsan/rtl/tsan_trace.h	/^const int kTracePartSize = 1 << kTracePartSizeBits;$/;"	m	namespace:__tsan
kTracePartSizeBits	lib/tsan/rtl/tsan_trace.h	/^const int kTracePartSizeBits = 13;$/;"	m	namespace:__tsan
kTraceParts	lib/tsan/rtl/tsan_trace.h	/^const int kTraceParts = 2 * 1024 * 1024 \/ kTracePartSize;$/;"	m	namespace:__tsan
kTracePcBits	lib/fuzzer/FuzzerTracePC.h	/^  static const size_t kTracePcBits = 18;$/;"	m	class:fuzzer::TracePC
kTraceSize	lib/tsan/rtl/tsan_trace.h	/^const int kTraceSize = kTracePartSize * kTraceParts;$/;"	m	namespace:__tsan
kTrampolineScanLimitRange	lib/interception/interception_win.cc	/^static const uptr kTrampolineScanLimitRange = 1 << 31;  \/\/ 2 gig$/;"	m	namespace:__interception	file:
kTwoMb	test/asan/TestCases/Linux/nohugepage_test.cc	/^const int kTwoMb = 1 << 21;$/;"	v
kUncheckedShadow	lib/cfi/cfi.cc	/^static constexpr uint16_t kUncheckedShadow = 0xFFFFU;$/;"	m	namespace:__cfi	file:
kUnionTableAddr	lib/dfsan/dfsan_platform.h	/^  static const uptr kUnionTableAddr = 0x200000000000;$/;"	m	struct:__dfsan::Mapping
kUnknown	lib/sanitizer_common/sanitizer_symbolizer.h	/^  static const uptr kUnknown = ~(uptr)0;$/;"	m	struct:__sanitizer::AddressInfo
kUnknownTid	lib/sanitizer_common/sanitizer_thread_registry.cc	/^const u32 ThreadRegistry::kUnknownTid = ~0U;$/;"	m	class:__sanitizer::ThreadRegistry	file:
kUnknownTid	lib/sanitizer_common/sanitizer_thread_registry.h	/^  static const u32 kUnknownTid;$/;"	m	class:__sanitizer::ThreadRegistry
kUnlocked	lib/sanitizer_common/sanitizer_mutex.h	/^    kUnlocked = 0,$/;"	e	enum:__sanitizer::RWMutex::__anon79
kUnlocked	lib/tsan/rtl/tsan_mutex.cc	/^const uptr kUnlocked = 0;$/;"	m	namespace:__tsan	file:
kUnpatchableCode1	lib/interception/tests/interception_win_test.cc	/^const u8 kUnpatchableCode1[] = {$/;"	m	namespace:__interception::__anon12	file:
kUnpatchableCode2	lib/interception/tests/interception_win_test.cc	/^const u8 kUnpatchableCode2[] = {$/;"	m	namespace:__interception::__anon12	file:
kUnpatchableCode3	lib/interception/tests/interception_win_test.cc	/^const u8 kUnpatchableCode3[] = {$/;"	m	namespace:__interception::__anon12	file:
kUnpatchableCode4	lib/interception/tests/interception_win_test.cc	/^const u8 kUnpatchableCode4[] = {$/;"	m	namespace:__interception::__anon12	file:
kUnpatchableCode5	lib/interception/tests/interception_win_test.cc	/^const u8 kUnpatchableCode5[] = {$/;"	m	namespace:__interception::__anon12	file:
kUnpatchableCode6	lib/interception/tests/interception_win_test.cc	/^const u8 kUnpatchableCode6[] = {$/;"	m	namespace:__interception::__anon12	file:
kUseAfterPoisonErrorMessage	lib/asan/tests/asan_interface_test.cc	/^static const char* kUseAfterPoisonErrorMessage = "use-after-poison";$/;"	v	file:
kUseCountBits	lib/sanitizer_common/sanitizer_stackdepot.cc	/^  static const u32 kUseCountBits = kTabSizeLog;$/;"	m	struct:__sanitizer::StackDepotNode	file:
kUseCountMask	lib/sanitizer_common/sanitizer_stackdepot.cc	/^  static const u32 kUseCountMask = (1 << kUseCountBits) - 1;$/;"	m	struct:__sanitizer::StackDepotNode	file:
kUseSeparateSizeClassForBatch	lib/sanitizer_common/sanitizer_allocator_local_cache.h	/^  static const bool kUseSeparateSizeClassForBatch =$/;"	m	struct:SizeClassAllocator32LocalCache
kUseSeparateSizeClassForBatch	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^    kUseSeparateSizeClassForBatch = 2,$/;"	e	enum:SizeClassAllocator32FlagMasks::__anon100
kUseSeparateSizeClassForBatch	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^  static const bool kUseSeparateSizeClassForBatch = Params::kFlags &$/;"	m	class:SizeClassAllocator32
kUserMapSize	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  static const uptr kUserMapSize = 1 << 16;$/;"	m	class:SizeClassAllocator64
kUsingConstantSpaceBeg	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  static const bool kUsingConstantSpaceBeg = kSpaceBeg != ~(uptr)0;$/;"	m	class:SizeClassAllocator64
kVdsoBeg	lib/tsan/rtl/tsan_platform.h	/^  static const uptr kVdsoBeg       = 0xf000000000000000ull;$/;"	m	struct:__tsan::Mapping
kVptrCheck	lib/ubsan/ubsan_diag.cc	/^static const char kVptrCheck[] = "vptr_check";$/;"	v	file:
kWindowsShadowOffset32	lib/asan/asan_mapping.h	/^static const u64 kWindowsShadowOffset32 = 3ULL << 28;  \/\/ 0x30000000$/;"	v
kWordSize	lib/sanitizer_common/sanitizer_common.h	/^const uptr kWordSize = SANITIZER_WORDSIZE \/ 8;$/;"	m	namespace:__sanitizer
kWordSizeInBits	lib/sanitizer_common/sanitizer_common.h	/^const uptr kWordSizeInBits = 8 * kWordSize;$/;"	m	namespace:__sanitizer
kWriteLock	lib/sanitizer_common/sanitizer_mutex.h	/^    kWriteLock = 1,$/;"	e	enum:__sanitizer::RWMutex::__anon79
kWriteLock	lib/tsan/rtl/tsan_mutex.cc	/^const uptr kWriteLock = 1;$/;"	m	namespace:__tsan	file:
kWriteRate	lib/tsan/tests/unit/tsan_mutex_test.cc	/^const int kWriteRate = 1024;$/;"	m	namespace:__tsan	file:
k_label	test/dfsan/custom.cc	/^dfsan_label k_label = 0;$/;"	v
kb	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^        kb  = clb(mantexpd)$/;"	d
kb	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^        kb = add(kb, #-1)$/;"	d
kb	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define kb         R9$/;"	d
keep_alive_mu	test/asan/TestCases/Posix/halt_on_error-signals.c	/^pthread_mutex_t keep_alive_mu = PTHREAD_MUTEX_INITIALIZER;$/;"	v
kernel_stat_to_stat	lib/sanitizer_common/sanitizer_linux.cc	/^static void kernel_stat_to_stat(struct kernel_stat *in, struct stat *out) {$/;"	f	namespace:__sanitizer
kernel_timeval	lib/sanitizer_common/sanitizer_linux.cc	/^struct kernel_timeval {$/;"	s	file:
key	lib/lsan/lsan_common_mac.cc	/^static pthread_key_t key;$/;"	m	namespace:__lsan	file:
key	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  long key;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
key	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    long key;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
key	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int key;                    \/\/ key_t$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
key	lib/sanitizer_common/tests/sanitizer_posix_test.cc	/^static pthread_key_t key;$/;"	m	namespace:__sanitizer	file:
key	lib/tsan/tests/rtl/tsan_posix.cc	/^  pthread_key_t key;$/;"	m	struct:thread_key	file:
key	test/lsan/TestCases/Linux/cleanup_in_tsd_destructor.c	/^pthread_key_t key;$/;"	v
key	test/lsan/TestCases/Linux/disabler_in_tsd_destructor.c	/^pthread_key_t key;$/;"	v
keyBuffer	lib/fuzzer/FuzzerSHA1.cpp	/^	uint8_t keyBuffer[BLOCK_LENGTH];$/;"	m	struct:__anon36::sha1nfo	file:
key_destructor	test/lsan/TestCases/Linux/cleanup_in_tsd_destructor.c	/^void key_destructor(void *arg) {$/;"	f
key_destructor	test/lsan/TestCases/Linux/disabler_in_tsd_destructor.c	/^void key_destructor(void *arg) {$/;"	f
key_once	lib/lsan/lsan_common_mac.cc	/^static pthread_once_t key_once = PTHREAD_ONCE_INIT;$/;"	m	namespace:__lsan	file:
keys	test/lsan/TestCases/many_tls_keys.cc	/^pthread_key_t keys[PTHREAD_KEYS_MAX];$/;"	v
kind	lib/asan/asan_descriptions.h	/^    AddressKind kind;$/;"	m	struct:__asan::AddressDescription::AddressDescriptionData
kind	lib/asan/asan_descriptions.h	/^  ShadowKind kind;$/;"	m	struct:__asan::ShadowAddressDescription
kind	lib/asan/asan_errors.h	/^  ErrorKind kind;$/;"	m	struct:__asan::ErrorDescription
kinfo_vmentry	lib/sanitizer_common/sanitizer_procmaps_bsd.cc	42;"	d	file:
kl	lib/builtins/hexagon/fastmath_dlib_asm.S	/^        kl = NORMAMT(mantl)$/;"	d
kl	lib/builtins/hexagon/fastmath_dlib_asm.S	/^        kl = normamt(mantcl)$/;"	d
kl	lib/builtins/hexagon/fastmath_dlib_asm.S	/^#define kl         R5$/;"	d
kp	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^        kp  = clb(mantd)$/;"	d
kp	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^        kp = add(kp, #-1)$/;"	d
kp	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^#define kp         R9$/;"	d
kve_end	lib/sanitizer_common/sanitizer_freebsd.h	/^  __xuint64_t kve_end;$/;"	m	struct:__sanitizer::xkinfo_vmentry
kve_flags	lib/sanitizer_common/sanitizer_freebsd.h	/^  int kve_flags;$/;"	m	struct:__sanitizer::xkinfo_vmentry
kve_offset	lib/sanitizer_common/sanitizer_freebsd.h	/^  __xuint64_t kve_offset;$/;"	m	struct:__sanitizer::xkinfo_vmentry
kve_path	lib/sanitizer_common/sanitizer_freebsd.h	/^  char kve_path[PATH_MAX];$/;"	m	struct:__sanitizer::xkinfo_vmentry
kve_private_resident	lib/sanitizer_common/sanitizer_freebsd.h	/^  int kve_private_resident;$/;"	m	struct:__sanitizer::xkinfo_vmentry
kve_protection	lib/sanitizer_common/sanitizer_freebsd.h	/^  int kve_protection;$/;"	m	struct:__sanitizer::xkinfo_vmentry
kve_ref_count	lib/sanitizer_common/sanitizer_freebsd.h	/^  int kve_ref_count;$/;"	m	struct:__sanitizer::xkinfo_vmentry
kve_resident	lib/sanitizer_common/sanitizer_freebsd.h	/^  int kve_resident;$/;"	m	struct:__sanitizer::xkinfo_vmentry
kve_shadow_count	lib/sanitizer_common/sanitizer_freebsd.h	/^  int kve_shadow_count;$/;"	m	struct:__sanitizer::xkinfo_vmentry
kve_start	lib/sanitizer_common/sanitizer_freebsd.h	/^  __xuint64_t kve_start;$/;"	m	struct:__sanitizer::xkinfo_vmentry
kve_status	lib/sanitizer_common/sanitizer_freebsd.h	/^  __uint16_t kve_status;$/;"	m	struct:__sanitizer::xkinfo_vmentry
kve_structsize	lib/sanitizer_common/sanitizer_freebsd.h	/^  int kve_structsize;$/;"	m	struct:__sanitizer::xkinfo_vmentry
kve_type	lib/sanitizer_common/sanitizer_freebsd.h	/^  int kve_type;$/;"	m	struct:__sanitizer::xkinfo_vmentry
kve_vn_fileid	lib/sanitizer_common/sanitizer_freebsd.h	/^  __xuint64_t kve_vn_fileid;$/;"	m	struct:__sanitizer::xkinfo_vmentry
kve_vn_fsid	lib/sanitizer_common/sanitizer_freebsd.h	/^  __uint32_t kve_vn_fsid;$/;"	m	struct:__sanitizer::xkinfo_vmentry
kve_vn_mode	lib/sanitizer_common/sanitizer_freebsd.h	/^  __uint16_t kve_vn_mode;$/;"	m	struct:__sanitizer::xkinfo_vmentry
kve_vn_rdev	lib/sanitizer_common/sanitizer_freebsd.h	/^  __uint32_t kve_vn_rdev;$/;"	m	struct:__sanitizer::xkinfo_vmentry
kve_vn_size	lib/sanitizer_common/sanitizer_freebsd.h	/^  __xuint64_t kve_vn_size;$/;"	m	struct:__sanitizer::xkinfo_vmentry
kve_vn_type	lib/sanitizer_common/sanitizer_freebsd.h	/^  int kve_vn_type;$/;"	m	struct:__sanitizer::xkinfo_vmentry
l	test/cfi/utils.h	/^  virtual void l() {}$/;"	f	struct:Deriver
l1	include/sanitizer/dfsan_interface.h	/^  dfsan_label l1;$/;"	m	struct:dfsan_label_info
l1	lib/dfsan/dfsan.h	/^  dfsan_label l1;$/;"	m	struct:dfsan_label_info
l1_	lib/sanitizer_common/sanitizer_bitvector.h	/^  BV l1_[kLevel1Size];$/;"	m	class:__sanitizer::TwoLevelBitVector
l2	include/sanitizer/dfsan_interface.h	/^  dfsan_label l2;$/;"	m	struct:dfsan_label_info
l2	lib/dfsan/dfsan.h	/^  dfsan_label l2;$/;"	m	struct:dfsan_label_info
l2_	lib/sanitizer_common/sanitizer_bitvector.h	/^  BV l2_[kLevel1Size][BV::kSize];$/;"	m	class:__sanitizer::TwoLevelBitVector
large_global	test/asan/TestCases/invalid-pointer-pairs-compare-errors.cc	/^char large_global[5000] = {};$/;"	v
largest_global	test/asan/TestCases/invalid-pointer-pairs-compare-errors.cc	/^char __attribute__((used)) largest_global[6000] = {};$/;"	v
last	lib/sanitizer_common/sanitizer_symbolizer_libbacktrace.cc	/^  SymbolizedStack *last;$/;"	m	struct:__sanitizer::__anon99::SymbolizeCodeCallbackArg	file:
last_	lib/sanitizer_common/sanitizer_list.h	/^  Item *last_;$/;"	m	struct:__sanitizer::IntrusiveList
last_	lib/sanitizer_common/sanitizer_vector.h	/^  T *last_;$/;"	m	class:__sanitizer::Vector
last_buf	test/dfsan/custom.cc	/^static const unsigned char *last_buf;$/;"	v	file:
last_callback_arg_buf	test/dfsan/write_callback.c	/^static const void *last_callback_arg_buf;$/;"	v	file:
last_callback_arg_count	test/dfsan/write_callback.c	/^static size_t last_callback_arg_count;$/;"	v	file:
last_callback_arg_fd	test/dfsan/write_callback.c	/^static int last_callback_arg_fd;$/;"	v	file:
last_callee	test/asan/TestCases/coverage-trace-pc.cc	/^void *last_callee;$/;"	v
last_count	test/dfsan/custom.cc	/^static size_t last_count;$/;"	v	file:
last_dlsym_alloc_size_in_words	lib/asan/asan_malloc_linux.cc	/^static uptr last_dlsym_alloc_size_in_words;$/;"	v	file:
last_fd	test/dfsan/custom.cc	/^static int last_fd;$/;"	v	file:
last_lock	lib/tsan/rtl/tsan_sync.h	/^  u64 last_lock;$/;"	m	struct:__tsan::SyncVar
last_match_	lib/sanitizer_common/sanitizer_symbolizer.h	/^    const char *last_match_;$/;"	m	class:__sanitizer::final::ModuleNameOwner
last_memalign_ptr	lib/sanitizer_common/sanitizer_tls_get_addr.h	/^  uptr last_memalign_ptr;$/;"	m	struct:__sanitizer::DTLS
last_memalign_size	lib/sanitizer_common/sanitizer_tls_get_addr.h	/^  uptr last_memalign_size;$/;"	m	struct:__sanitizer::DTLS
last_page_reported	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  u32 last_page_reported;$/;"	m	class:RangeRecorder	file:
last_release_at_ns	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^    u64 last_release_at_ns;$/;"	m	struct:SizeClassAllocator64::ReleaseToOsInfo
last_released_bytes	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^    u64 last_released_bytes;$/;"	m	struct:SizeClassAllocator64::ReleaseToOsInfo
last_request_buffer_size	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  uptr last_request_buffer_size;$/;"	m	class:NoMemoryMapper	file:
last_sleep_clock	lib/tsan/rtl/tsan_rtl.h	/^  ThreadClock last_sleep_clock;$/;"	m	struct:__tsan::ThreadState
last_sleep_stack_id	lib/tsan/rtl/tsan_rtl.h	/^  u32 last_sleep_stack_id;$/;"	m	struct:__tsan::ThreadState
last_stack	test/sanitizer_common/TestCases/sanitizer_coverage_stack_depth.cc	/^uintptr_t last_stack;$/;"	v
last_symbolize_time_ns	lib/tsan/rtl/tsan_rtl.h	/^  atomic_uint64_t last_symbolize_time_ns;$/;"	m	struct:__tsan::Context
latching_decr_int	lib/BlocksRuntime/runtime.c	/^static int latching_decr_int(int *where) {$/;"	f	file:
latching_incr_int	lib/BlocksRuntime/runtime.c	/^static int latching_incr_int(int *where) {$/;"	f	file:
launchThread	lib/esan/esan_sideline_linux.cpp	/^bool SidelineThread::launchThread(SidelineFunc takeSample, void *Arg,$/;"	f	class:__esan::SidelineThread
lc_type	lib/sanitizer_common/sanitizer_procmaps_mac.cc	/^  u32 lc_type;$/;"	m	struct:__sanitizer::MemoryMappedSegmentData	file:
lcm	lib/xray/xray_utils.h	/^constexpr size_t lcm(size_t a, size_t b) { return a * b \/ gcd(a, b); }$/;"	f	namespace:__xray
ld	lib/builtins/ppc/DD.h	/^	long double ld;$/;"	m	union:__anon109
ld	test/builtins/Unit/ppc/DD.h	/^	long double ld;$/;"	m	union:__anon153
leReference	test/builtins/Unit/comparedf2_test.c	/^    int leReference;$/;"	m	struct:TestVector	file:
leReference	test/builtins/Unit/comparesf2_test.c	/^    int leReference;$/;"	m	struct:TestVector	file:
leak_id	lib/lsan/lsan_common.h	/^  u32 leak_id;$/;"	m	struct:__lsan::LeakedObject
leak_report	lib/lsan/lsan_common.cc	/^  LeakReport leak_report;$/;"	m	struct:__lsan::CheckForLeaksParam	file:
leaked_objects_	lib/lsan/lsan_common.h	/^  InternalMmapVector<LeakedObject> leaked_objects_;$/;"	m	class:__lsan::LeakReport
leaks_	lib/lsan/lsan_common.h	/^  InternalMmapVector<Leak> leaks_;$/;"	m	class:__lsan::LeakReport
leaky_global	test/lsan/TestCases/do_leak_check_override.cc	/^LeakyGlobal leaky_global;$/;"	v
len	lib/sanitizer_common/sanitizer_linux.h	/^  uptr len;$/;"	m	struct:__sanitizer::ProcSelfMapsBuff
len	lib/tsan/benchmarks/mini_bench_local.cc	/^int len;$/;"	v
len	lib/tsan/benchmarks/mini_bench_shared.cc	/^int len;$/;"	v
len	test/tsan/ignore_lib_lib.h	/^volatile int len;$/;"	v
length	lib/sanitizer_common/sanitizer_common.h	/^  uptr length() { return length_; }$/;"	f	class:__sanitizer::InternalScopedString
length1	lib/asan/asan_errors.h	/^  uptr length1, length2;$/;"	m	struct:__asan::ErrorStringFunctionMemoryRangesOverlap
length2	lib/asan/asan_errors.h	/^  uptr length1, length2;$/;"	m	struct:__asan::ErrorStringFunctionMemoryRangesOverlap
length_	lib/sanitizer_common/sanitizer_common.h	/^  uptr length_;$/;"	m	class:__sanitizer::InternalScopedString
length_of_string	lib/profile/GCDAProfiling.c	/^static uint32_t length_of_string(const char *s) {$/;"	f	file:
lgetxattr_wrapper	test/msan/Linux/xattr.cc	/^ssize_t lgetxattr_wrapper(const char *name, char *buf, size_t size) {$/;"	f
lib	test/tsan/dlclose.cc	/^void *lib;$/;"	v
lib2	test/tsan/dlclose.cc	/^void *lib2;$/;"	v
libCall	test/ubsan/TestCases/TypeCheck/vptr-non-unique-typeinfo.cpp	/^X *libCall() {$/;"	f
libEntry	test/profile/Inputs/instrprof-merge-match-lib.c	/^uint64_t libEntry(char *Buffer, uint64_t MaxSize) {$/;"	f
lib_constructor_call	test/tsan/Linux/check_preinit.cc	/^volatile int lib_constructor_call = 0;$/;"	v
libfunc	test/tsan/ignore_lib2.cc	/^extern "C" void libfunc() {$/;"	f
libfunc	test/tsan/ignore_lib3.cc	/^extern "C" void libfunc() {$/;"	f
libfunc	test/tsan/ignore_lib_lib.h	/^extern "C" void libfunc() {$/;"	f
libignore	lib/tsan/rtl/tsan_interceptors.cc	/^  ALIGNED(64) LibIgnore libignore;$/;"	m	struct:__tsan::InterceptorContext	file:
libignore	lib/tsan/rtl/tsan_interceptors.cc	/^LibIgnore *libignore() {$/;"	f	namespace:__tsan
libraryPath	test/BlocksRuntime/testfilerunner.h	/^@property __strong char *libraryPath;$/;"	v
libs	lib/dfsan/scripts/build-libc-list.py	/^libs = [os.path.join(options.libc_dso_path, name) for name in$/;"	v
libs_	lib/sanitizer_common/sanitizer_libignore.h	/^  Lib libs_[kMaxLibs];$/;"	m	class:__sanitizer::LibIgnore
liesWithinSingleAppRegion	lib/esan/esan_linux.cpp	/^static bool liesWithinSingleAppRegion(uptr Start, SIZE_T Size) {$/;"	f	namespace:__esan
limit	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  char *limit;$/;"	m	struct:__sanitizer__obstack_chunk
limits	lib/cfi/cfi.cc	/^  } limits;$/;"	m	union:__cfi::__anon53	typeref:struct:__cfi::__anon53::__anon54	file:
line	lib/asan/asan_report.h	/^  uptr line;$/;"	m	struct:__asan::StackVarDescr
line	lib/sanitizer_common/sanitizer_symbolizer.h	/^  int line;$/;"	m	struct:__sanitizer::AddressInfo
line	lib/sanitizer_common/sanitizer_symbolizer.h	/^  uptr line;$/;"	m	struct:__sanitizer::DataInfo
line	lib/tsan/go/tsan_go.cc	/^  uptr line;$/;"	m	struct:__tsan::SymbolizeCodeContext	file:
line	lib/tsan/go/tsan_go.cc	/^  uptr line;$/;"	m	struct:__tsan::SymbolizeDataContext	file:
line	lib/tsan/rtl/tsan_interface_ann.cc	/^  int line;$/;"	m	struct:__tsan::ExpectRace	file:
line_flush	test/msan/chained_origin_limits.cc	/^void line_flush() {$/;"	f
line_no	lib/asan/asan_interface_internal.h	/^    int line_no;$/;"	m	struct:__asan_global_source_location
line_size	test/esan/TestCases/workingset-simple.cpp	/^const int line_size = 64;$/;"	v
link	lib/msan/msan_chained_origin_depot.cc	/^  ChainedOriginDepotNode *link;$/;"	m	struct:__msan::ChainedOriginDepotNode	file:
link	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^  Link link[kMaxLink];$/;"	m	struct:__sanitizer::Mutex	file:
link	lib/sanitizer_common/sanitizer_stackdepot.cc	/^  StackDepotNode *link;$/;"	m	struct:__sanitizer::StackDepotNode	file:
linker	lib/lsan/lsan_common_linux.cc	/^static LoadedModule *linker = nullptr;$/;"	m	namespace:__lsan	file:
linux_dirent	lib/sanitizer_common/sanitizer_linux.cc	/^struct linux_dirent {$/;"	s	namespace:__sanitizer	file:
linux_dirent	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^struct __sanitizer::linux_dirent {$/;"	s	class:__sanitizer	file:
list	lib/stats/stats_client.cc	/^StatModule *list;$/;"	m	namespace:__anon2	file:
list_	lib/sanitizer_common/sanitizer_quarantine.h	/^  List list_;$/;"	m	class:__sanitizer::QuarantineCache
list_of_all_globals	lib/asan/asan_globals.cc	/^static ListOfGlobals *list_of_all_globals;$/;"	m	namespace:__asan	file:
listxattr_wrapper	test/msan/Linux/xattr.cc	/^ssize_t listxattr_wrapper(char *buf, size_t size) {$/;"	f
little_global	test/asan/TestCases/invalid-pointer-pairs-compare-errors.cc	/^char __attribute__((used)) little_global[10] = {};$/;"	v
live_global	test/asan/TestCases/Windows/dll_global_dead_strip.c	/^int live_global = 0;$/;"	v
live_global	test/asan/TestCases/Windows/global_dead_strip.c	/^int live_global = 0;$/;"	v
ll_strndup	lib/sanitizer_common/sanitizer_flag_parser.cc	/^char *FlagParser::ll_strndup(const char *s, uptr n) {$/;"	f	class:__sanitizer::FlagParser
llistxattr_wrapper	test/msan/Linux/xattr.cc	/^ssize_t llistxattr_wrapper(char *buf, size_t size) {$/;"	f
llvmInitBufferIO	lib/profile/InstrProfilingWriter.c	/^static void llvmInitBufferIO(ProfBufferIO *BufferIO, ProfDataWriter *FileWriter,$/;"	f	file:
llvm_delete_flush_function_list	lib/profile/GCDAProfiling.c	/^void llvm_delete_flush_function_list(void) {$/;"	f
llvm_delete_writeout_function_list	lib/profile/GCDAProfiling.c	/^void llvm_delete_writeout_function_list(void) {$/;"	f
llvm_gcda_emit_arcs	lib/profile/GCDAProfiling.c	/^void llvm_gcda_emit_arcs(uint32_t num_counters, uint64_t *counters) {$/;"	f
llvm_gcda_emit_function	lib/profile/GCDAProfiling.c	/^void llvm_gcda_emit_function(uint32_t ident, const char *function_name,$/;"	f
llvm_gcda_end_file	lib/profile/GCDAProfiling.c	/^void llvm_gcda_end_file() {$/;"	f
llvm_gcda_increment_indirect_counter	lib/profile/GCDAProfiling.c	/^void llvm_gcda_increment_indirect_counter(uint32_t *predecessor,$/;"	f
llvm_gcda_start_file	lib/profile/GCDAProfiling.c	/^void llvm_gcda_start_file(const char *orig_filename, const char version[4],$/;"	f
llvm_gcda_summary_info	lib/profile/GCDAProfiling.c	/^void llvm_gcda_summary_info() {$/;"	f
llvm_gcov_init	lib/profile/GCDAProfiling.c	/^void llvm_gcov_init(fn_ptr wfn, fn_ptr ffn) {$/;"	f
llvm_register_flush_function	lib/profile/GCDAProfiling.c	/^void llvm_register_flush_function(fn_ptr fn) {$/;"	f
llvm_register_writeout_function	lib/profile/GCDAProfiling.c	/^void llvm_register_writeout_function(fn_ptr fn) {$/;"	f
llvm_writeout_files	lib/profile/GCDAProfiling.c	/^void llvm_writeout_files(void) {$/;"	f
lmant	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^        lmant = add(lmanta, lmantb)$/;"	d
lmant	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^        lmant = sub(lmanta, lmantb)$/;"	d
lmant	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define lmant      R1:0$/;"	d
lmant	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^        lmant = ASL(lmant, k)$/;"	d
lmant	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^        lmant = add(lmanta, lmantb)$/;"	d
lmant	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^        lmant = asl(lmant, k)$/;"	d
lmant	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^        lmant = sub(lmanta, lmantb)$/;"	d
lmant	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^#define lmant      R1:0$/;"	d
lmant	lib/builtins/hexagon/fastmath_dlib_asm.S	/^        lmant = add(lmanta, lmantb)$/;"	d
lmant	lib/builtins/hexagon/fastmath_dlib_asm.S	/^        lmant = sub(lmanta, lmantb)$/;"	d
lmant	lib/builtins/hexagon/fastmath_dlib_asm.S	/^#define lmant      R1:0$/;"	d
lmanta	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^        lmanta = ASR(lmanta, expa)$/;"	d
lmanta	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define lmanta     R1:0$/;"	d
lmanta	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^        lmanta = ASR(lmanta, expa)$/;"	d
lmanta	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^#define lmanta     R1:0$/;"	d
lmanta	lib/builtins/hexagon/fastmath_dlib_asm.S	/^        lmanta = ASR(lmanta, expa)$/;"	d
lmanta	lib/builtins/hexagon/fastmath_dlib_asm.S	/^#define lmanta     R1:0$/;"	d
lmantb	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^        lmantb = ASR(lmantb, expb)$/;"	d
lmantb	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define lmantb     R3:2$/;"	d
lmantb	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^        lmantb = ASR(lmantb, expb)$/;"	d
lmantb	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^#define lmantb     R3:2$/;"	d
lmantb	lib/builtins/hexagon/fastmath_dlib_asm.S	/^        lmantb = ASR(lmantb, expb)$/;"	d
lmantb	lib/builtins/hexagon/fastmath_dlib_asm.S	/^#define lmantb     R3:2$/;"	d
lmantc	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^        lmantc = add(lmantc, lmantc)$/;"	d
lmantc	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^        lmantc = mpy(mantah, mantbh)$/;"	d
lmantc	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define lmantc     R11:10$/;"	d
lmantc	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^        lmantc = add(lmantc, lmantc)$/;"	d
lmantc	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^        lmantc = mpy(mantxh, mantbh)$/;"	d
lmantc	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^#define lmantc     R11:10$/;"	d
lmantc	lib/builtins/hexagon/fastmath_dlib_asm.S	/^        lmantc = add(lmantc, lmantc) \/\/<<1$/;"	d
lmantc	lib/builtins/hexagon/fastmath_dlib_asm.S	/^        lmantc = mpy(mantah, mantbh)$/;"	d
lmantc	lib/builtins/hexagon/fastmath_dlib_asm.S	/^#define lmantc     R11:10$/;"	d
lo	lib/builtins/ppc/DD.h	/^		double lo;$/;"	m	struct:__anon109::__anon110
lo	lib/tsan/rtl/tsan_md5.cc	/^  MD5_u32plus lo, hi;$/;"	m	struct:__tsan::__anon18	file:
lo	test/builtins/Unit/ppc/DD.h	/^		double lo;$/;"	m	struct:__anon153::__anon154
lo	test/builtins/Unit/ppc/floatditf_test.h	/^	double lo;$/;"	m	struct:testCase
lo	test/builtins/Unit/ppc/floatunditf_test.h	/^	double lo;$/;"	m	struct:testCase
loWord	lib/builtins/fp_lib.h	80;"	d
loWord	lib/builtins/fp_lib.h	99;"	d
load	lib/cfi/cfi.cc	/^  static const ShadowValue load(uptr addr) {$/;"	f	class:__cfi::ShadowValue
load	lib/msan/msan_chained_origin_depot.cc	/^  args_type load() const {$/;"	f	struct:__msan::ChainedOriginDepotNode
load	lib/sanitizer_common/sanitizer_stackdepot.cc	/^  args_type load() const {$/;"	f	struct:__sanitizer::StackDepotNode
loadHeader	lib/scudo/scudo_allocator.cpp	/^  void loadHeader(const void *Ptr, UnpackedHeader *NewUnpackedHeader) {$/;"	f	namespace:__scudo::Chunk
loaded	lib/sanitizer_common/sanitizer_libignore.h	/^    bool loaded;$/;"	m	struct:__sanitizer::LibIgnore::Lib
loc	lib/tsan/tests/rtl/tsan_test_util.h	/^  void *loc() const { return loc_; }$/;"	f	class:MemLoc
loc_	lib/tsan/tests/rtl/tsan_test_util.h	/^  void *const loc_;$/;"	m	class:MemLoc
local_fabs	lib/builtins/ppc/DD.h	/^static __inline ALWAYS_INLINE double local_fabs(double x) {$/;"	f
local_object_then_throw	test/tsan/exceptions.cc	/^__attribute__((noinline)) void local_object_then_throw() {$/;"	f
local_thread	lib/tsan/tests/rtl/tsan_posix.cc	/^static void *local_thread(void *p) {$/;"	f	file:
local_var	lib/tsan/tests/rtl/tsan_posix.cc	/^static __thread int local_var;$/;"	v	file:
location	lib/asan/asan_interface_internal.h	/^    __asan_global_source_location *location;  \/\/ Source location of a global,$/;"	m	struct:__asan_global
lock	lib/builtins/atomic.c	/^__inline static void lock(Lock *l) {$/;"	f	file:
lock	lib/esan/esan_hashtable.h	/^void HashTable<KeyTy, DataTy, ExternalLock, HashFuncTy, EqualFuncTy>::lock() {$/;"	f	class:__esan::HashTable
lock	lib/profile/WindowsMMap.c	/^int lock(HANDLE handle, DWORD lockType, BOOL blocking) {$/;"	f
lock	lib/sanitizer_common/sanitizer_allocator_report.cc	/^  ScopedErrorReportLock lock;$/;"	m	class:__sanitizer::ScopedAllocatorErrorReport	file:
lock	lib/sanitizer_common/sanitizer_atomic_clang_mips.h	/^  int lock;$/;"	m	struct:__sanitizer::__anon97
lock	lib/sanitizer_common/sanitizer_atomic_clang_mips.h	/^} __attribute__((aligned(32))) lock = {0, {0}};$/;"	m	namespace:__sanitizer	typeref:struct:__sanitizer::__anon97
lock	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^    u32 lock;$/;"	m	struct:__sanitizer::DeadlockDetectorTLS::LockWithContext
lock	lib/sanitizer_common/sanitizer_stackdepotbase.h	/^Node *StackDepotBase<Node, kReservedBits, kTabSizeLog>::lock($/;"	f	class:__sanitizer::StackDepotBase
lock	test/msan/pthread_getname_np.cc	/^static pthread_mutex_t lock;$/;"	v	file:
lock	test/tsan/Darwin/osspinlock-norace.cc	/^OSSpinLock lock;$/;"	v
lock	test/tsan/deadlock_detector_stress_test.cc	/^  void lock() { assert(0 == pthread_mutex_lock(&mu_)); }$/;"	f	class:PthreadMutex
lock	test/tsan/deadlock_detector_stress_test.cc	/^  void lock() { assert(0 == pthread_rwlock_wrlock(&mu_)); }$/;"	f	class:PthreadRWLock
lock	test/tsan/deadlock_detector_stress_test.cc	/^  void lock() { assert(0 == pthread_spin_lock(&mu_)); }$/;"	f	class:PthreadSpinLock
lock_	lib/tsan/rtl/tsan_rtl.h	/^  ScopedErrorReportLock lock_;$/;"	m	class:__tsan::ScopedReport
lock_for_pointer	lib/builtins/atomic.c	/^static __inline Lock *lock_for_pointer(void *ptr) {$/;"	f	file:
lock_thread	lib/sanitizer_common/tests/sanitizer_mutex_test.cc	/^static void *lock_thread(void *param) {$/;"	f	namespace:__sanitizer
lockaddr	test/tsan/java_lock.cc	/^jptr lockaddr;$/;"	v
lockaddr	test/tsan/java_lock_move.cc	/^jptr lockaddr;$/;"	v
lockaddr	test/tsan/java_lock_rec.cc	/^jptr lockaddr;$/;"	v
lockaddr	test/tsan/java_lock_rec_race.cc	/^jptr lockaddr;$/;"	v
lockaddr	test/tsan/java_rwlock.cc	/^jptr lockaddr;$/;"	v
lockaddr	test/tsan/java_volatile.cc	/^jptr lockaddr;$/;"	v
lockaddr1_new	test/tsan/java_move_overlap.cc	/^jptr lockaddr1_new;$/;"	v
lockaddr1_old	test/tsan/java_move_overlap.cc	/^jptr lockaddr1_old;$/;"	v
lockaddr2	test/tsan/java_lock_move.cc	/^jptr lockaddr2;$/;"	v
lockaddr2_new	test/tsan/java_move_overlap.cc	/^jptr lockaddr2_new;$/;"	v
lockaddr2_old	test/tsan/java_move_overlap.cc	/^jptr lockaddr2_old;$/;"	v
locked	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^  ThreadMutex locked[kMaxNesting];$/;"	m	struct:__sanitizer::DDLogicalThread	file:
locked_	lib/tsan/rtl/tsan_mutex.h	/^  u64 locked_[MutexTypeCount];$/;"	m	class:__tsan::InternalDeadlockDetector
locked_	test/tsan/custom_mutex.h	/^  std::atomic<bool> locked_;$/;"	m	class:Mutex
locks	lib/builtins/atomic.c	/^static Lock locks[SPINLOCK_COUNT] = { [0 ...  SPINLOCK_COUNT-1] = {0,1,0} };$/;"	v	file:
locks	lib/builtins/atomic.c	/^static Lock locks[SPINLOCK_COUNT]; \/\/ initialized to OS_SPINLOCK_INIT which is 0$/;"	v	file:
locks	lib/builtins/atomic.c	/^static Lock locks[SPINLOCK_COUNT];$/;"	v	file:
locks_	test/tsan/deadlock_detector_stress_test.cc	/^  LockType **locks_;$/;"	m	class:LockTest	file:
locs	lib/tsan/rtl/tsan_report.h	/^  Vector<ReportLocation*> locs;$/;"	m	class:__tsan::ReportDesc
log_finalize	include/xray/xray_log_interface.h	/^  XRayLogInitStatus (*log_finalize)();$/;"	m	struct:XRayLogImpl
log_from_atexit	test/tsan/atexit.cc	/^void log_from_atexit() {$/;"	f
log_init	include/xray/xray_log_interface.h	/^  XRayLogInitStatus (*log_init)(size_t, size_t, void *, size_t);$/;"	m	struct:XRayLogImpl
log_syscall_gettid	test/xray/TestCases/Posix/fork_basic_logging.cc	/^uint64_t __attribute__((noinline)) log_syscall_gettid()$/;"	f
logfile	lib/asan/scripts/asan_symbolize.py	/^logfile = sys.stdin$/;"	v
logger	test/tsan/atexit.cc	/^Logger logger;$/;"	v
long_double_bits	lib/builtins/int_types.h	/^} long_double_bits;$/;"	t	typeref:union:__anon123
long_t	lib/tsan/rtl/tsan_interceptors.cc	/^typedef long long_t;  \/\/ NOLINT$/;"	t	file:
long_t	lib/tsan/rtl/tsan_interceptors_mac.cc	/^typedef long long_t;  \/\/ NOLINT$/;"	t	file:
long_t	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^typedef long long_t;  \/\/ NOLINT$/;"	t	file:
longjmp	lib/asan/asan_interceptors.cc	297;"	d	file:
longjmp	lib/asan/asan_win_dll_thunk.cc	/^INTERCEPT_LIBRARY_FUNCTION(longjmp);$/;"	v
longjmp_symname	lib/tsan/rtl/tsan_interceptors.cc	622;"	d	file:
longjmp_unwind	test/tsan/exceptions.cc	/^__attribute__((noinline)) void longjmp_unwind() {$/;"	f
longjmp_unwind_multiple_frames	test/tsan/exceptions.cc	/^__attribute__((noinline)) void longjmp_unwind_multiple_frames() {$/;"	f
looksLikeFloatCastOverflowDataV1	lib/ubsan/ubsan_handlers.cc	/^static bool looksLikeFloatCastOverflowDataV1(void *Data) {$/;"	f	file:
lookup	lib/esan/esan_hashtable.h	/^bool HashTable<KeyTy, DataTy, ExternalLock, HashFuncTy, EqualFuncTy>::lookup($/;"	f	class:__esan::HashTable
loop	lib/asan/scripts/asan_symbolize.py	/^  loop = SymbolizationLoop(binary_name_filter)$/;"	v	class:SymbolizationLoop
loop	lib/sanitizer_common/sanitizer_deadlock_detector_interface.h	/^  } loop[kMaxLoopSize];$/;"	m	struct:__sanitizer::DDReport	typeref:struct:__sanitizer::DDReport::__anon81
loop	test/tsan/signal_errno.cc	/^static __attribute__((noinline)) void loop() {$/;"	f	file:
low	lib/builtins/int_types.h	/^        du_int low;$/;"	m	struct:__anon116::__anon117
low	lib/builtins/int_types.h	/^        du_int low;$/;"	m	struct:__anon118::__anon119
low	lib/builtins/int_types.h	/^        su_int low;$/;"	m	struct:__anon112::__anon113
low	lib/builtins/int_types.h	/^        su_int low;$/;"	m	struct:__anon114::__anon115
low	lib/builtins/int_types.h	/^    udwords low;$/;"	m	struct:__anon122
low_level_alloc_callback	lib/sanitizer_common/sanitizer_allocator.cc	/^static LowLevelAllocateCallback low_level_alloc_callback;$/;"	m	namespace:__sanitizer	file:
low_level_alloc_min_alignment	lib/sanitizer_common/sanitizer_allocator.cc	/^static uptr low_level_alloc_min_alignment = kLowLevelAllocatorDefaultAlignment;$/;"	m	namespace:__sanitizer	file:
lprofApplyPathPrefix	lib/profile/InstrProfilingUtil.c	/^lprofApplyPathPrefix(char *Dest, const char *PathStr, const char *Prefix,$/;"	f
lprofBoolCmpXchg	lib/profile/InstrProfilingUtil.c	/^uint32_t lprofBoolCmpXchg(void **Ptr, void *OldV, void *NewV) {$/;"	f
lprofBufferIOFlush	lib/profile/InstrProfilingWriter.c	/^COMPILER_RT_VISIBILITY int lprofBufferIOFlush(ProfBufferIO *BufferIO) {$/;"	f
lprofBufferIOWrite	lib/profile/InstrProfilingWriter.c	/^lprofBufferIOWrite(ProfBufferIO *BufferIO, const uint8_t *Data, uint32_t Size) {$/;"	f
lprofBufferWriter	lib/profile/InstrProfilingWriter.c	/^COMPILER_RT_VISIBILITY uint32_t lprofBufferWriter(ProfDataWriter *This,$/;"	f
lprofCreateBufferIO	lib/profile/InstrProfilingWriter.c	/^lprofCreateBufferIO(ProfDataWriter *FileWriter) {$/;"	f
lprofCreateBufferIOInternal	lib/profile/InstrProfilingFile.c	/^lprofCreateBufferIOInternal(void *File, uint32_t BufferSz) {$/;"	f
lprofCurFilename	lib/profile/InstrProfilingFile.c	/^COMPILER_RT_WEAK lprofFilename lprofCurFilename = {0,   0, 0, 0, {0},$/;"	v
lprofDeleteBufferIO	lib/profile/InstrProfilingWriter.c	/^COMPILER_RT_VISIBILITY void lprofDeleteBufferIO(ProfBufferIO *BufferIO) {$/;"	f
lprofDirMode	lib/profile/InstrProfilingUtil.c	/^COMPILER_RT_WEAK unsigned lprofDirMode = 0755;$/;"	v
lprofFilename	lib/profile/InstrProfilingFile.c	/^typedef struct lprofFilename {$/;"	s	file:
lprofFilename	lib/profile/InstrProfilingFile.c	/^} lprofFilename;$/;"	t	typeref:struct:lprofFilename	file:
lprofFindFirstDirSeparator	lib/profile/InstrProfilingUtil.c	/^lprofFindFirstDirSeparator(const char *Path) {$/;"	f
lprofFindLastDirSeparator	lib/profile/InstrProfilingUtil.c	/^COMPILER_RT_VISIBILITY const char *lprofFindLastDirSeparator(const char *Path) {$/;"	f
lprofGetHostName	lib/profile/InstrProfilingUtil.c	/^COMPILER_RT_VISIBILITY int lprofGetHostName(char *Name, int Len) {$/;"	f
lprofGetLoadModuleSignature	lib/profile/InstrProfilingMerge.c	/^uint64_t lprofGetLoadModuleSignature() {$/;"	f
lprofGetPathPrefix	lib/profile/InstrProfilingUtil.c	/^COMPILER_RT_VISIBILITY const char *lprofGetPathPrefix(int *PrefixStrip,$/;"	f
lprofGetVPDataReader	lib/profile/InstrProfilingValue.c	/^COMPILER_RT_VISIBILITY VPDataReaderType *lprofGetVPDataReader() {$/;"	f
lprofLockFd	lib/profile/InstrProfilingUtil.c	/^COMPILER_RT_VISIBILITY int lprofLockFd(int fd) {$/;"	f
lprofMergeValueProfData	lib/profile/InstrProfilingMergeFile.c	/^void lprofMergeValueProfData(ValueProfData *SrcValueProfData,$/;"	f
lprofOpenFileEx	lib/profile/InstrProfilingUtil.c	/^COMPILER_RT_VISIBILITY FILE *lprofOpenFileEx(const char *ProfileName) {$/;"	f
lprofProfileDumped	lib/profile/InstrProfiling.c	/^COMPILER_RT_VISIBILITY unsigned lprofProfileDumped() {$/;"	f
lprofPtrFetchAdd	lib/profile/InstrProfilingUtil.c	/^void *lprofPtrFetchAdd(void **Mem, long ByteIncr) {$/;"	f
lprofRestoreSigKill	lib/profile/InstrProfilingUtil.c	/^COMPILER_RT_VISIBILITY void lprofRestoreSigKill() {$/;"	f
lprofSetMaxValsPerSite	lib/profile/InstrProfilingValue.c	/^COMPILER_RT_VISIBILITY void lprofSetMaxValsPerSite(uint32_t MaxVals) {$/;"	f
lprofSetProfileDumped	lib/profile/InstrProfiling.c	/^COMPILER_RT_VISIBILITY void lprofSetProfileDumped() {$/;"	f
lprofSetupValueProfiler	lib/profile/InstrProfilingValue.c	/^COMPILER_RT_VISIBILITY void lprofSetupValueProfiler() {$/;"	f
lprofSuspendSigKill	lib/profile/InstrProfilingUtil.c	/^COMPILER_RT_VISIBILITY int lprofSuspendSigKill() {$/;"	f
lprofUnlockFd	lib/profile/InstrProfilingUtil.c	/^COMPILER_RT_VISIBILITY int lprofUnlockFd(int fd) {$/;"	f
lprofVMOWriter	lib/profile/InstrProfilingPlatformFuchsia.c	/^static uint32_t lprofVMOWriter(ProfDataWriter *This, ProfDataIOVec *IOVecs,$/;"	f	file:
lprofWrite	lib/profile/InstrProfilingPlatformFuchsia.c	/^static inline void lprofWrite(const char *fmt, ...) {$/;"	f	file:
lprofWriteData	lib/profile/InstrProfilingWriter.c	/^COMPILER_RT_VISIBILITY int lprofWriteData(ProfDataWriter *Writer,$/;"	f
lprofWriteDataImpl	lib/profile/InstrProfilingWriter.c	/^lprofWriteDataImpl(ProfDataWriter *Writer, const __llvm_profile_data *DataBegin,$/;"	f
lr	lib/builtins/hexagon/common_entry_exit_abi1.S	/^		lr = memw(fp+#4)$/;"	d
lr	lib/builtins/hexagon/common_entry_exit_legacy.S	/^		lr = memw(fp+#4)$/;"	d
lsan_aligned_alloc	lib/lsan/lsan_allocator.cc	/^void *lsan_aligned_alloc(uptr alignment, uptr size, const StackTrace &stack) {$/;"	f	namespace:__lsan
lsan_block_context_t	lib/lsan/lsan_mac.cc	/^} lsan_block_context_t;$/;"	t	namespace:__lsan	typeref:struct:__lsan::__anon10	file:
lsan_calloc	lib/lsan/lsan_allocator.cc	/^void *lsan_calloc(uptr nmemb, uptr size, const StackTrace &stack) {$/;"	f	namespace:__lsan
lsan_dispatch_call_block_and_release	lib/lsan/lsan_mac.cc	/^extern "C" void lsan_dispatch_call_block_and_release(void *block) {$/;"	f	namespace:__lsan
lsan_flags	lib/lsan/lsan_common.cc	/^Flags lsan_flags;$/;"	m	namespace:__lsan	file:
lsan_free	lib/lsan/lsan_allocator.cc	/^void lsan_free(void *p) {$/;"	f	namespace:__lsan
lsan_init_is_running	lib/lsan/lsan.cc	/^bool lsan_init_is_running;$/;"	v
lsan_inited	lib/lsan/lsan.cc	/^bool lsan_inited;$/;"	v
lsan_malloc	lib/lsan/lsan_allocator.cc	/^void *lsan_malloc(uptr size, const StackTrace &stack) {$/;"	f	namespace:__lsan
lsan_memalign	lib/lsan/lsan_allocator.cc	/^void *lsan_memalign(uptr alignment, uptr size, const StackTrace &stack) {$/;"	f	namespace:__lsan
lsan_mz_size	lib/lsan/lsan_allocator.cc	/^uptr lsan_mz_size(const void *p) {$/;"	f	namespace:__lsan
lsan_posix_memalign	lib/lsan/lsan_allocator.cc	/^int lsan_posix_memalign(void **memptr, uptr alignment, uptr size,$/;"	f	namespace:__lsan
lsan_pvalloc	lib/lsan/lsan_allocator.cc	/^void *lsan_pvalloc(uptr size, const StackTrace &stack) {$/;"	f	namespace:__lsan
lsan_realloc	lib/lsan/lsan_allocator.cc	/^void *lsan_realloc(void *p, uptr size, const StackTrace &stack) {$/;"	f	namespace:__lsan
lsan_register_worker_thread	lib/lsan/lsan_mac.cc	/^void lsan_register_worker_thread(int parent_tid) {$/;"	f	namespace:__lsan
lsan_tag	lib/asan/asan_allocator.cc	/^  u32 lsan_tag          : 2;$/;"	m	struct:__asan::ChunkHeader	file:
lsan_valloc	lib/lsan/lsan_allocator.cc	/^void *lsan_valloc(uptr size, const StackTrace &stack) {$/;"	f	namespace:__lsan
lstat	lib/sanitizer_common/symbolizer/sanitizer_wrappers.cc	/^int lstat(const char *path, struct stat *buf) { STAT(lstat, path, buf); }$/;"	f
lt	lib/sanitizer_common/sanitizer_deadlock_detector_interface.h	/^  DDLogicalThread  *lt;$/;"	m	struct:__sanitizer::DDCallback
lt	test/tsan/deadlock_detector_stress_test.cc	/^    LockTest *lt;$/;"	m	struct:LockTest::CB	file:
ltReference	test/builtins/Unit/comparedf2_test.c	/^    int ltReference;$/;"	m	struct:TestVector	file:
ltReference	test/builtins/Unit/comparesf2_test.c	/^    int ltReference;$/;"	m	struct:TestVector	file:
m	lib/tsan/rtl/tsan_interceptors.cc	/^  void *m;$/;"	m	struct:CondMutexUnlockCtx	file:
m	lib/tsan/tests/rtl/tsan_posix.cc	/^  pthread_mutex_t m;$/;"	m	struct:CondContext	file:
m	test/esan/TestCases/struct-simple.cpp	/^  float m;$/;"	m	struct:B	file:
m	test/sanitizer_common/TestCases/Linux/pthread_mutex.cc	/^pthread_mutex_t m = PTHREAD_MUTEX_INITIALIZER;$/;"	v
m	test/tsan/Linux/mutex_robust.cc	/^pthread_mutex_t m;$/;"	v
m	test/tsan/Linux/mutex_robust2.cc	/^pthread_mutex_t m;$/;"	v
m	test/tsan/cond.c	/^pthread_mutex_t m;$/;"	v
m	test/tsan/cond_cancel.c	/^pthread_mutex_t m;$/;"	v
m	test/tsan/cond_destruction.cc	/^pthread_mutex_t m;$/;"	v
m	test/tsan/cond_race.cc	/^  pthread_mutex_t m;$/;"	m	struct:Ctx	file:
m	test/tsan/real_deadlock_detector_stress_test.cc	/^  pthread_rwlock_t m;$/;"	m	struct:Mutex	file:
m	test/tsan/vptr_benign_race.cc	/^  pthread_mutex_t m;$/;"	m	struct:A	file:
m128	lib/tsan/rtl/tsan_rtl.cc	/^typedef __m128i m128;$/;"	t	file:
m128Eq	lib/msan/tests/msan_test.cc	/^NOINLINE __m128i m128Eq(__m128i *a, __m128i *b) { return _mm_cmpeq_epi16(*a, *b); }$/;"	f
m128Lt	lib/msan/tests/msan_test.cc	/^NOINLINE __m128i m128Lt(__m128i *a, __m128i *b) { return _mm_cmplt_epi16(*a, *b); }$/;"	f
m_	lib/tsan/benchmarks/vts_many_threads_bench.cc	/^  pthread_mutex_t m_;$/;"	m	class:Mutex	file:
mag	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^       mag = add(ia,ia)$/;"	d
mag	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define mag   R3$/;"	d
magic	lib/asan/asan_fake_stack.h	/^  uptr magic;  \/\/ Modified by the instrumented code.$/;"	m	struct:__asan::FakeFrame
magic0	lib/sanitizer_common/tests/sanitizer_atomic_test.cc	/^  typename T::Type magic0;$/;"	m	struct:__sanitizer::ValAndMagic	file:
magic1	lib/sanitizer_common/tests/sanitizer_atomic_test.cc	/^  typename T::Type magic1;$/;"	m	struct:__sanitizer::ValAndMagic	file:
main	lib/asan/tests/asan_benchmarks_test.cc	/^int main(int argc, char **argv) {$/;"	f
main	lib/asan/tests/asan_exceptions_test.cc	/^int main() {$/;"	f
main	lib/asan/tests/asan_racy_double_free_test.cc	/^int main() {$/;"	f
main	lib/asan/tests/asan_test_main.cc	/^int main(int argc, char **argv) {$/;"	f
main	lib/fuzzer/FuzzerMain.cpp	/^__attribute__((visibility("default"))) int main(int argc, char **argv) {$/;"	f
main	lib/fuzzer/afl/afl_driver.cpp	/^int main(int argc, char **argv) {$/;"	f
main	lib/fuzzer/dataflow/DataFlow.cpp	/^int main(int argc, char **argv) {$/;"	f
main	lib/fuzzer/scripts/collect_data_flow.py	/^def main(argv):$/;"	f
main	lib/fuzzer/scripts/merge_data_flow.py	/^def main(argv):$/;"	f
main	lib/fuzzer/scripts/unbalanced_allocs.py	/^def main(argv):$/;"	f
main	lib/fuzzer/standalone/StandaloneFuzzTargetMain.c	/^int main(int argc, char **argv) {$/;"	f
main	lib/fuzzer/tests/FuzzerUnittest.cpp	/^int main(int argc, char **argv) {$/;"	f
main	lib/interception/tests/interception_test_main.cc	/^int main(int argc, char **argv) {$/;"	f
main	lib/msan/tests/msan_test_main.cc	/^int main(int argc, char **argv) {$/;"	f
main	lib/sanitizer_common/scripts/cpplint.py	/^def main():$/;"	f
main	lib/sanitizer_common/scripts/gen_dynamic_list.py	/^def main(argv):$/;"	f
main	lib/sanitizer_common/tests/malloc_stress_transfer_test.cc	/^int main() {$/;"	f
main	lib/sanitizer_common/tests/sanitizer_test_main.cc	/^int main(int argc, char **argv) {$/;"	f
main	lib/tsan/benchmarks/mini_bench_local.cc	/^int main(int argc, char **argv) {$/;"	f
main	lib/tsan/benchmarks/mini_bench_shared.cc	/^int main(int argc, char **argv) {$/;"	f
main	lib/tsan/benchmarks/start_many_threads.cc	/^int main(int argc, char **argv) {$/;"	f
main	lib/tsan/benchmarks/vts_many_threads_bench.cc	/^int main(int argc, char **argv) {$/;"	f
main	lib/tsan/go/test.c	/^int main(void) {$/;"	f
main	lib/tsan/tests/rtl/tsan_test.cc	/^int main(int argc, char **argv) {$/;"	f
main	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^  bool main;$/;"	m	struct:ScopedThread::Impl	file:
main	lib/tsan/tests/unit/tsan_unit_test_main.cc	/^int main(int argc, char **argv) {$/;"	f
main	lib/xray/tests/unit/xray_unit_test_main.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/BlocksRuntime/block-static.c	/^int main(int argc, char **argv) {$/;"	f
main	test/BlocksRuntime/blockimport.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/BlocksRuntime/byrefaccess.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/BlocksRuntime/byrefcopy.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/BlocksRuntime/byrefcopycopy.c	/^main(int argc, char *argv[])$/;"	f
main	test/BlocksRuntime/byrefcopyinner.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/BlocksRuntime/byrefcopyint.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/BlocksRuntime/byrefcopystack.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/BlocksRuntime/byrefsanity.c	/^main(int argc, char *argv[])$/;"	f
main	test/BlocksRuntime/byrefstruct.c	/^int main (int argc, const char * argv[]) {$/;"	f
main	test/BlocksRuntime/c99.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/BlocksRuntime/cast.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/BlocksRuntime/constassign.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/BlocksRuntime/copy-block-literal-rdar6439600.c	/^int main (int argc, const char * argv[]) {$/;"	f
main	test/BlocksRuntime/copyconstructor.C	/^int main(int argc, char *argv[]) {$/;"	f
main	test/BlocksRuntime/copynull.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/BlocksRuntime/dispatch_async.c	/^int main (int argc, const char * argv[]) {$/;"	f
main	test/BlocksRuntime/dispatch_call_Block_with_release.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/BlocksRuntime/fail.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/BlocksRuntime/flagsisa.c	/^int main(int argc, char *argv[])$/;"	f
main	test/BlocksRuntime/globalexpression.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/BlocksRuntime/goto.c	/^int main(int argc, char *argv[])$/;"	f
main	test/BlocksRuntime/hasdescriptor.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/BlocksRuntime/josh.C	/^int main(int argc, char *argv[]) {$/;"	f
main	test/BlocksRuntime/k-and-r.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/BlocksRuntime/large-struct.c	/^int main (int argc, const char * argv[]) {$/;"	f
main	test/BlocksRuntime/localisglobal.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/BlocksRuntime/modglobal.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/BlocksRuntime/nestedimport.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/BlocksRuntime/nullblockisa.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/BlocksRuntime/objectRRGC.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/BlocksRuntime/objectassign.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/BlocksRuntime/orbars.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/BlocksRuntime/rdar6396238.c	/^int main (int argc, const char * argv[]) {$/;"	f
main	test/BlocksRuntime/rdar6405500.c	/^int main (int argc, const char * argv[]) {$/;"	f
main	test/BlocksRuntime/rdar6414583.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/BlocksRuntime/recursive-block.c	/^int main(int argc, char **argv) {$/;"	f
main	test/BlocksRuntime/recursive-test.c	/^int main(int argc, char* argv[]) {$/;"	f
main	test/BlocksRuntime/recursiveassign.c	/^int main(int argc, char* argv[]) {$/;"	f
main	test/BlocksRuntime/reference.C	/^int main(int argc, char *argv[]) {$/;"	f
main	test/BlocksRuntime/rettypepromotion.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/BlocksRuntime/returnfunctionptr.c	/^int main(int argc, char *argv[])  {$/;"	f
main	test/BlocksRuntime/shorthandexpression.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/BlocksRuntime/sizeof.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/BlocksRuntime/small-struct.c	/^int main (int argc, const char * argv[]) {$/;"	f
main	test/BlocksRuntime/structmember.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/BlocksRuntime/varargs-bad-assign.c	/^int main (int argc, const char * argv[]) {$/;"	f
main	test/BlocksRuntime/varargs.c	/^int main (int argc, const char * argv[]) {$/;"	f
main	test/BlocksRuntime/variadic.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/BlocksRuntime/voidarg.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/asan/TestCases/Darwin/abort_on_error.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Darwin/asan_gen_prefixes.cc	/^int main() { return 0; }$/;"	f
main	test/asan/TestCases/Darwin/atos-symbolizer-dyld-root-path.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Darwin/atos-symbolizer.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Darwin/crashlog-stacktraces.c	/^int main() {$/;"	f
main	test/asan/TestCases/Darwin/cstring_section.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/asan/TestCases/Darwin/dead-strip.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/asan/TestCases/Darwin/dladdr-demangling.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Darwin/dump_registers.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Darwin/dyld_insert_libraries_reexec.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Darwin/dyld_insert_libraries_remove.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Darwin/empty-section.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Darwin/fclose.c	/^int main(int argc, const char * argv[]) {$/;"	f
main	test/asan/TestCases/Darwin/getpwnam.c	/^int main(int argc, const char * argv[]) {$/;"	f
main	test/asan/TestCases/Darwin/haswell-symbolication.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Darwin/interface_symbols_darwin.cc	/^int main() { return 0; }$/;"	f
main	test/asan/TestCases/Darwin/linked-only.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/asan/TestCases/Darwin/malloc_destroy_zone.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Darwin/malloc_set_zone_name-mprotect.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Darwin/malloc_zone-protected.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Darwin/mixing-global-constructors.cc	/^int main(int argc, const char *argv[]) {$/;"	f
main	test/asan/TestCases/Darwin/odr-lto.cc	/^int main()$/;"	f
main	test/asan/TestCases/Darwin/reexec-insert-libraries-env.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Darwin/sandbox-symbolizer.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Darwin/scribble.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Darwin/segv_read_write.c	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Darwin/suppressions-darwin.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Darwin/suppressions-function.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Darwin/suppressions-sandbox.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Darwin/unset-insert-libraries-on-exec.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/asan/TestCases/Darwin/uuid.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/asan/TestCases/Helpers/echo-env.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/asan/TestCases/Helpers/init-order-atexit-extra.cc	/^int main() { return 0; }$/;"	f
main	test/asan/TestCases/Linux/abort_on_error.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Linux/activation-options.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/asan/TestCases/Linux/aligned_delete_test.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Linux/allocator_oom_test.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Linux/asan-asm-stacktrace-test.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Linux/asan_default_suppressions.cc	/^int main() {}$/;"	f
main	test/asan/TestCases/Linux/asan_dlopen_test.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Linux/asan_prelink_test.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Linux/asan_preload_test-1.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Linux/asan_preload_test-2.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Linux/asan_preload_test-3.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Linux/asan_rt_confict_test-1.cc	/^int main(int argc, char **argv) { return 0; }$/;"	f
main	test/asan/TestCases/Linux/asan_rt_confict_test-2.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Linux/auto_memory_profile_test.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Linux/calloc-preload.c	/^int main() {$/;"	f
main	test/asan/TestCases/Linux/clang_gcc_abi.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Linux/clone_test.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Linux/coverage-missing.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Linux/cuda_test.cc	/^int main(void) {$/;"	f
main	test/asan/TestCases/Linux/function-sections-are-bad.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/asan/TestCases/Linux/global-overflow-bfd.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Linux/global-overflow-lld.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Linux/globals-gc-sections-lld.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Linux/init-order-dlopen.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/asan/TestCases/Linux/init_fini_sections.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Linux/initialization-bug-any-order.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Linux/interception_malloc_test.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Linux/interception_readdir_r_test.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Linux/interception_test.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Linux/interface_symbols_linux.cc	/^int main() { return 0; }$/;"	f
main	test/asan/TestCases/Linux/kernel-area.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Linux/leak.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Linux/leak_check_segv.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Linux/local_alias.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Linux/long-object-path.cc	/^int main(void) {$/;"	f
main	test/asan/TestCases/Linux/longjmp_chk.c	/^int main() {$/;"	f
main	test/asan/TestCases/Linux/malloc-in-qsort.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Linux/malloc_delete_mismatch.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Linux/memmem_test.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Linux/mincore.cc	/^int main(void) {$/;"	f
main	test/asan/TestCases/Linux/new_delete_mismatch.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Linux/nohugepage_test.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Linux/odr_c_test.c	/^int main() {$/;"	f
main	test/asan/TestCases/Linux/overflow-in-qsort.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Linux/preinstalled_signal.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/asan/TestCases/Linux/print_memory_profile_test.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Linux/printf-fortify-1.c	/^int main() { return foo(); }$/;"	f
main	test/asan/TestCases/Linux/printf-fortify-2.c	/^int main() { return foo(); }$/;"	f
main	test/asan/TestCases/Linux/printf-fortify-3.c	/^int main() { return foo("%s_%s", "one", "two"); }$/;"	f
main	test/asan/TestCases/Linux/printf-fortify-4.c	/^int main() { return foo("%s_%s", "one", "two"); }$/;"	f
main	test/asan/TestCases/Linux/printf-fortify-5.c	/^int main() { return foo(); }$/;"	f
main	test/asan/TestCases/Linux/pthread_create_from_constructor.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Linux/pthread_create_version.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Linux/ptrace.cc	/^int main(void) {$/;"	f
main	test/asan/TestCases/Linux/quarantine_size_mb.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Linux/read_binary_name_regtest.c	/^int main() {$/;"	f
main	test/asan/TestCases/Linux/recoverable-lsan.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Linux/recvfrom.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Linux/release_to_os_test.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Linux/rlimit_mmap_test.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Linux/sanbox_read_proc_self_maps_test.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Linux/segv_read_write.c	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Linux/shmctl.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Linux/signal_during_stop_the_world.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Linux/sized_delete_test.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Linux/stack-overflow-recovery-mode.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Linux/stack-overflow-sigbus.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Linux/stack-trace-dlclose.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Linux/static_tls.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/asan/TestCases/Linux/stress_dtls.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/asan/TestCases/Linux/swapcontext_annotation.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Linux/swapcontext_test.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Linux/syscalls.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/asan/TestCases/Linux/textdomain.c	/^int main() {$/;"	f
main	test/asan/TestCases/Linux/thread_local_quarantine_pthread_join.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Linux/thread_local_quarantine_size_kb.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Linux/uar_signals.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Linux/unpoison_tls.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/asan/TestCases/Posix/asan-sigbus.cpp	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Posix/asan-symbolize-sanity-test.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/asan/TestCases/Posix/asprintf.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Posix/assign_large_valloc_to_global.cc	/^int main() { posix_memalign((void **)&p, 4096, 1 << 20); }$/;"	f
main	test/asan/TestCases/Posix/closed-fds.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Posix/concurrent_overflow.cc	/^int main(void) {$/;"	f
main	test/asan/TestCases/Posix/coverage-fork.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Posix/coverage-module-unloaded.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Posix/coverage-reset.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Posix/coverage.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Posix/current_allocated_bytes.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Posix/deep_call_stack.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Posix/deep_thread_stack.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/asan/TestCases/Posix/dlclose-test.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/asan/TestCases/Posix/fgets_fputs.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/asan/TestCases/Posix/fread_fwrite.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/asan/TestCases/Posix/free_hook_realloc.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Posix/freopen.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Posix/gc-test.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Posix/glob.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/asan/TestCases/Posix/global-registration.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/asan/TestCases/Posix/halt_on_error-signals.c	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Posix/halt_on_error-torture.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Posix/halt_on_error_suppress_equal_pcs.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Posix/handle_abort_on_error.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Posix/init-order-pthread-create.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Posix/interception-in-shared-lib-test.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/asan/TestCases/Posix/invalid-pointer-pairs-threads.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Posix/ioctl.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Posix/large_allocator_unpoisons_on_free.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Posix/lto-constmerge-odr.cc	/^int main(int argc, const char * argv[]) {$/;"	f
main	test/asan/TestCases/Posix/mmap_limit_mb.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Posix/new_array_cookie_test.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Posix/new_array_cookie_uaf_test.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Posix/new_array_cookie_with_new_from_class.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Posix/no_asan_gen_globals.c	/^int main() { return 0; }$/;"	f
main	test/asan/TestCases/Posix/print_cmdline.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Posix/readv.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Posix/shared-lib-test.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/asan/TestCases/Posix/stack-overflow.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Posix/stack-use-after-return.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Posix/start-deactivated.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/asan/TestCases/Posix/strchr.c	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Posix/strerror_r_test.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Posix/strndup_oob_test.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Posix/strndup_oob_test2.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Posix/tsd_dtor_leak.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Posix/wait.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Posix/wait3.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Posix/wait4.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Posix/waitid.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Windows/aligned_mallocs.cc	/^int main(void) {$/;"	f
main	test/asan/TestCases/Windows/allocators_sanity.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/beginthreadex.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/bind_io_completion_callback.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Windows/bitfield.cc	/^int main(void) {$/;"	f
main	test/asan/TestCases/Windows/bitfield_uaf.cc	/^int main(void) {$/;"	f
main	test/asan/TestCases/Windows/calloc_left_oob.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/calloc_right_oob.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/calloc_uaf.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/coverage-basic.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Windows/crash_read_write.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Windows/crt_initializers.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/delay_dbghelp.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/demangled_names.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/dll_heap_allocation.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Windows/dll_host.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Windows/dll_report_globals_symbolization_at_startup.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Windows/double_free.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/double_operator_delete.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/free_hook_realloc.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/fuse-lld-globals.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Windows/fuse-lld.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/global_const_string.cc	/^int main(void) {$/;"	f
main	test/asan/TestCases/Windows/global_const_string_oob.cc	/^int main(void) {$/;"	f
main	test/asan/TestCases/Windows/global_dead_strip.c	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/hello_world.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/intercept_memcpy.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/intercept_strdup.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/intercept_strlen.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/interface_symbols_windows.cc	/^int main() { return 0; }$/;"	f
main	test/asan/TestCases/Windows/iostream_sbo.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/longjmp.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/malloc_left_oob.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/malloc_right_oob.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/malloc_uaf.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/null_deref.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/null_deref_multiple_dlls.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/oom.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/operator_array_new_left_oob.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/operator_array_new_right_oob.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/operator_array_new_uaf.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/operator_array_new_with_dtor_left_oob.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/operator_delete_wrong_argument.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/operator_new_left_oob.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/operator_new_right_oob.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/operator_new_uaf.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/queue_user_work_item.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Windows/queue_user_work_item_report.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Windows/realloc_left_oob.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/realloc_right_oob.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/realloc_uaf.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/report_after_syminitialize.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/report_globals_reload_dll.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Windows/report_globals_vs_freelibrary.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/Windows/seh.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/shadow_conflict_32.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/shadow_mapping_failure.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/stack_array_left_oob.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/stack_array_right_oob.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/stack_array_sanity.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/stack_use_after_return.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/symbols_path.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/thread_simple.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/thread_stack_array_left_oob.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/thread_stack_array_right_oob.cc	/^int main(void) {$/;"	f
main	test/asan/TestCases/Windows/thread_stack_reuse.cc	/^int main(void) {$/;"	f
main	test/asan/TestCases/Windows/thread_stress.cc	/^int main(void) {$/;"	f
main	test/asan/TestCases/Windows/thread_suspended.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/tls_init.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/unsymbolized.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/use_after_realloc.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/user-exception.cc	/^int main() {$/;"	f
main	test/asan/TestCases/Windows/windows_h.cc	/^int main() {}$/;"	f
main	test/asan/TestCases/Windows/wrong_downcast_on_heap.cc	/^int main(void) {$/;"	f
main	test/asan/TestCases/Windows/wrong_downcast_on_stack.cc	/^int main(void) {$/;"	f
main	test/asan/TestCases/alloca_big_alignment.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/alloca_constant_size.cc	/^int main(int argc, const char *argv[]) {$/;"	f
main	test/asan/TestCases/alloca_detect_custom_size_.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/alloca_instruments_all_paddings.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/alloca_loop_unpoisoning.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/alloca_overflow_partial.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/alloca_overflow_right.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/alloca_safe_access.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/alloca_underflow_left.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/alloca_vla_interact.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/asan_and_llvm_coverage_test.cc	/^int main() {$/;"	f
main	test/asan/TestCases/asan_options-help.cc	/^int main() {$/;"	f
main	test/asan/TestCases/atexit_stats.cc	/^int main() { }$/;"	f
main	test/asan/TestCases/atoi_strict.c	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/atol_strict.c	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/atoll_strict.c	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/blacklist.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/calloc-overflow.cc	/^int main() {$/;"	f
main	test/asan/TestCases/contiguous_container.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/contiguous_container_crash.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/coverage-and-lsan.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/coverage-disabled.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/coverage-trace-pc.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/debug_double_free.cc	/^int main() {$/;"	f
main	test/asan/TestCases/debug_locate.cc	/^int main() {$/;"	f
main	test/asan/TestCases/debug_mapping.cc	/^int main() {$/;"	f
main	test/asan/TestCases/debug_ppc64_mapping.cc	/^int main() {$/;"	f
main	test/asan/TestCases/debug_report.cc	/^int main() {$/;"	f
main	test/asan/TestCases/debug_stacks.cc	/^int main() {$/;"	f
main	test/asan/TestCases/deep_stack_uaf.cc	/^int main() {$/;"	f
main	test/asan/TestCases/deep_tail_call.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/default_options.cc	/^int main() {$/;"	f
main	test/asan/TestCases/describe_address.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/asan/TestCases/double-free.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/error_report_callback.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/exitcode.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/force_inline_opt0.cc	/^int main() {$/;"	f
main	test/asan/TestCases/frexp_interceptor.cc	/^int main() {$/;"	f
main	test/asan/TestCases/global-address.cpp	/^int main() {$/;"	f
main	test/asan/TestCases/global-demangle.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/global-location.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/global-overflow.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/global-underflow.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/halt_on_error-1.c	/^int main() {$/;"	f
main	test/asan/TestCases/handle_noreturn_bug.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/heap-overflow-large.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/asan/TestCases/heap-overflow.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/heavy_uar_test.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/huge_negative_hea_oob.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/ill.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/initialization-blacklist.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/initialization-bug.cc	/^int main() {$/;"	f
main	test/asan/TestCases/initialization-constexpr.cc	/^int main() { return 0; }$/;"	f
main	test/asan/TestCases/initialization-nobug.cc	/^int main() { return 0; }$/;"	f
main	test/asan/TestCases/inline.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/intercept-rethrow-exception.cc	/^int main() {$/;"	f
main	test/asan/TestCases/interception_failure_test.cc	/^int main() {$/;"	f
main	test/asan/TestCases/interface_test.cc	/^int main() {$/;"	f
main	test/asan/TestCases/intra-object-overflow.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/invalid-free.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/invalid-pointer-pairs-compare-errors.cc	/^int main() {$/;"	f
main	test/asan/TestCases/invalid-pointer-pairs-compare-null.cc	/^int main() {$/;"	f
main	test/asan/TestCases/invalid-pointer-pairs-compare-success.cc	/^int main() {$/;"	f
main	test/asan/TestCases/invalid-pointer-pairs-subtract-errors.cc	/^int main() {$/;"	f
main	test/asan/TestCases/invalid-pointer-pairs-subtract-success.cc	/^int main() {$/;"	f
main	test/asan/TestCases/invalid-pointer-pairs.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/large_func_test.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/log-path_test.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/longjmp.cc	/^int main() {$/;"	f
main	test/asan/TestCases/lsan_annotations.cc	/^int main() {$/;"	f
main	test/asan/TestCases/malloc-no-intercept.c	/^int main(void)$/;"	f
main	test/asan/TestCases/malloc-size-too-big.cc	/^int main() {$/;"	f
main	test/asan/TestCases/malloc_context_size.cc	/^int main() {$/;"	f
main	test/asan/TestCases/malloc_fill.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/max_redzone.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/memcmp_strict_test.cc	/^int main() {$/;"	f
main	test/asan/TestCases/memcmp_test.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/memset_test.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/non-executable-pc.cpp	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/null_deref.cc	/^int main() {$/;"	f
main	test/asan/TestCases/on_error_callback.cc	/^int main() {$/;"	f
main	test/asan/TestCases/partial_right.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/pass-object-byval.cc	/^int main() {$/;"	f
main	test/asan/TestCases/pass-struct-byval-uar.cc	/^int main() {$/;"	f
main	test/asan/TestCases/pass-struct-byval.cc	/^int main() {$/;"	f
main	test/asan/TestCases/poison_partial.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/pr33372.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/asan/TestCases/print_summary.cc	/^int main() {$/;"	f
main	test/asan/TestCases/printf-1.c	/^int main() {$/;"	f
main	test/asan/TestCases/printf-2.c	/^int main() {$/;"	f
main	test/asan/TestCases/printf-3.c	/^int main() {$/;"	f
main	test/asan/TestCases/printf-4.c	/^int main() {$/;"	f
main	test/asan/TestCases/printf-5.c	/^int main() {$/;"	f
main	test/asan/TestCases/printf-m.c	/^int main() {$/;"	f
main	test/asan/TestCases/realloc.cc	/^int main() {$/;"	f
main	test/asan/TestCases/sanity_check_pure_c.c	/^int main() {$/;"	f
main	test/asan/TestCases/scariness_score_test.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/set_shadow_test.c	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/sleep_after_init.c	/^int main() {$/;"	f
main	test/asan/TestCases/sleep_before_dying.c	/^int main() {$/;"	f
main	test/asan/TestCases/small_memcpy_test.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/speculative_load.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/speculative_load2.cc	/^int main() {$/;"	f
main	test/asan/TestCases/stack-buffer-overflow-with-position.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/stack-buffer-overflow.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/stack-frame-demangle.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/stack-oob-frames.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/strcasestr-1.c	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/strcasestr-2.c	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/strcasestr_strict.c	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/strcat-overlap.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/strcat_strict.c	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/strchr_strict.c	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/strcmp_strict.c	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/strcpy-overlap.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/strcspn-1.c	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/strcspn-2.c	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/strcspn_strict.c	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/strdup_oob_test.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/strip_path_prefix.c	/^int main() {$/;"	f
main	test/asan/TestCases/strncasecmp_strict.c	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/strncat-overlap.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/strncat_strict.c	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/strncmp_strict.c	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/strncpy-overflow.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/strncpy-overlap.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/strpbrk-1.c	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/strpbrk-2.c	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/strpbrk_strict.c	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/strspn-1.c	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/strspn-2.c	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/strspn_strict.c	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/strstr-1.c	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/strstr-2.c	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/strstr_strict.c	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/strtok.c	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/strtol_strict.c	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/strtoll_strict.c	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/suppressions-exec-relative-location.cc	/^int main() {$/;"	f
main	test/asan/TestCases/suppressions-function.cc	/^int main() {$/;"	f
main	test/asan/TestCases/suppressions-interceptor.cc	/^int main() {$/;"	f
main	test/asan/TestCases/suppressions-library.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/asan/TestCases/throw_call_test.cc	/^int main(int argc, char** argv) {$/;"	f
main	test/asan/TestCases/throw_catch.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/throw_invoke_test.cc	/^int main(int argc, char** argv) {$/;"	f
main	test/asan/TestCases/time_interceptor.cc	/^int main() {$/;"	f
main	test/asan/TestCases/uar_and_exceptions.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/unaligned_loads_and_stores.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/use-after-delete.cc	/^int main() {$/;"	f
main	test/asan/TestCases/use-after-free-right.cc	/^int main() {$/;"	f
main	test/asan/TestCases/use-after-free.cc	/^int main() {$/;"	f
main	test/asan/TestCases/use-after-poison.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/use-after-scope-capture.cc	/^int main() {$/;"	f
main	test/asan/TestCases/use-after-scope-conversion.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/use-after-scope-dtor-order.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/asan/TestCases/use-after-scope-goto.cc	/^int main() {$/;"	f
main	test/asan/TestCases/use-after-scope-if.cc	/^int main() {$/;"	f
main	test/asan/TestCases/use-after-scope-inlined.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/asan/TestCases/use-after-scope-loop-bug.cc	/^int main() {$/;"	f
main	test/asan/TestCases/use-after-scope-loop-removed.cc	/^int main() {$/;"	f
main	test/asan/TestCases/use-after-scope-loop.cc	/^int main() {$/;"	f
main	test/asan/TestCases/use-after-scope-nobug.cc	/^int main() {$/;"	f
main	test/asan/TestCases/use-after-scope-temp.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/asan/TestCases/use-after-scope-temp2.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/asan/TestCases/use-after-scope-types.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/use-after-scope.cc	/^int main() {$/;"	f
main	test/asan/TestCases/verbose-log-path_test.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/vla_chrome_testcase.cc	/^int main() {$/;"	f
main	test/asan/TestCases/vla_condition_overflow.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/vla_loop_overfow.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/asan/TestCases/zero_page_pc.cc	/^int main() {$/;"	f
main	test/builtins/TestCases/Darwin/os_version_check_test.c	/^int main() {$/;"	f
main	test/builtins/TestCases/Darwin/os_version_check_test_no_core_foundation.c	/^int main() {$/;"	f
main	test/builtins/Unit/absvdi2_test.c	/^int main()$/;"	f
main	test/builtins/Unit/absvsi2_test.c	/^int main()$/;"	f
main	test/builtins/Unit/absvti2_test.c	/^int main()$/;"	f
main	test/builtins/Unit/adddf3vfp_test.c	/^int main()$/;"	f
main	test/builtins/Unit/addsf3vfp_test.c	/^int main()$/;"	f
main	test/builtins/Unit/addtf3_test.c	/^int main()$/;"	f
main	test/builtins/Unit/addvdi3_test.c	/^int main()$/;"	f
main	test/builtins/Unit/addvsi3_test.c	/^int main()$/;"	f
main	test/builtins/Unit/addvti3_test.c	/^int main()$/;"	f
main	test/builtins/Unit/arm/aeabi_cdcmpeq_test.c	/^int main()$/;"	f
main	test/builtins/Unit/arm/aeabi_cdcmple_test.c	/^int main()$/;"	f
main	test/builtins/Unit/arm/aeabi_cfcmpeq_test.c	/^int main()$/;"	f
main	test/builtins/Unit/arm/aeabi_cfcmple_test.c	/^int main()$/;"	f
main	test/builtins/Unit/arm/aeabi_drsub_test.c	/^int main()$/;"	f
main	test/builtins/Unit/arm/aeabi_frsub_test.c	/^int main()$/;"	f
main	test/builtins/Unit/arm/aeabi_idivmod_test.c	/^int main()$/;"	f
main	test/builtins/Unit/arm/aeabi_uidivmod_test.c	/^int main()$/;"	f
main	test/builtins/Unit/arm/aeabi_uldivmod_test.c	/^int main()$/;"	f
main	test/builtins/Unit/ashldi3_test.c	/^int main()$/;"	f
main	test/builtins/Unit/ashlti3_test.c	/^int main()$/;"	f
main	test/builtins/Unit/ashrdi3_test.c	/^int main()$/;"	f
main	test/builtins/Unit/ashrti3_test.c	/^int main()$/;"	f
main	test/builtins/Unit/bswapdi2_test.c	/^int main() {$/;"	f
main	test/builtins/Unit/bswapsi2_test.c	/^int main() {$/;"	f
main	test/builtins/Unit/clear_cache_test.c	/^int main()$/;"	f
main	test/builtins/Unit/clzdi2_test.c	/^int main()$/;"	f
main	test/builtins/Unit/clzsi2_test.c	/^int main()$/;"	f
main	test/builtins/Unit/clzti2_test.c	/^int main()$/;"	f
main	test/builtins/Unit/cmpdi2_test.c	/^int main()$/;"	f
main	test/builtins/Unit/cmpti2_test.c	/^int main()$/;"	f
main	test/builtins/Unit/comparedf2_test.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/builtins/Unit/comparesf2_test.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/builtins/Unit/cpu_model_test.c	/^int main (void) {$/;"	f
main	test/builtins/Unit/ctzdi2_test.c	/^int main()$/;"	f
main	test/builtins/Unit/ctzsi2_test.c	/^int main()$/;"	f
main	test/builtins/Unit/ctzti2_test.c	/^int main()$/;"	f
main	test/builtins/Unit/divdc3_test.c	/^int main()$/;"	f
main	test/builtins/Unit/divdf3vfp_test.c	/^int main()$/;"	f
main	test/builtins/Unit/divdi3_test.c	/^int main()$/;"	f
main	test/builtins/Unit/divmodsi4_test.c	/^int main()$/;"	f
main	test/builtins/Unit/divsc3_test.c	/^int main()$/;"	f
main	test/builtins/Unit/divsf3vfp_test.c	/^int main()$/;"	f
main	test/builtins/Unit/divsi3_test.c	/^int main()$/;"	f
main	test/builtins/Unit/divtc3_test.c	/^int main()$/;"	f
main	test/builtins/Unit/divtf3_test.c	/^int main()$/;"	f
main	test/builtins/Unit/divti3_test.c	/^int main()$/;"	f
main	test/builtins/Unit/divxc3_test.c	/^int main()$/;"	f
main	test/builtins/Unit/enable_execute_stack_test.c	/^int main()$/;"	f
main	test/builtins/Unit/eqdf2vfp_test.c	/^int main()$/;"	f
main	test/builtins/Unit/eqsf2vfp_test.c	/^int main()$/;"	f
main	test/builtins/Unit/eqtf2_test.c	/^int main()$/;"	f
main	test/builtins/Unit/extebdsfdf2vfp_test.c	/^int main()$/;"	f
main	test/builtins/Unit/extenddftf2_test.c	/^int main()$/;"	f
main	test/builtins/Unit/extendhfsf2_test.c	/^int main()$/;"	f
main	test/builtins/Unit/extendsftf2_test.c	/^int main()$/;"	f
main	test/builtins/Unit/ffsdi2_test.c	/^int main()$/;"	f
main	test/builtins/Unit/ffssi2_test.c	/^int main()$/;"	f
main	test/builtins/Unit/ffsti2_test.c	/^int main()$/;"	f
main	test/builtins/Unit/fixdfdi_test.c	/^int main()$/;"	f
main	test/builtins/Unit/fixdfsivfp_test.c	/^int main()$/;"	f
main	test/builtins/Unit/fixdfti_test.c	/^int main()$/;"	f
main	test/builtins/Unit/fixsfdi_test.c	/^int main()$/;"	f
main	test/builtins/Unit/fixsfsivfp_test.c	/^int main()$/;"	f
main	test/builtins/Unit/fixsfti_test.c	/^int main()$/;"	f
main	test/builtins/Unit/fixtfdi_test.c	/^int main()$/;"	f
main	test/builtins/Unit/fixtfsi_test.c	/^int main()$/;"	f
main	test/builtins/Unit/fixtfti_test.c	/^int main()$/;"	f
main	test/builtins/Unit/fixunsdfdi_test.c	/^int main()$/;"	f
main	test/builtins/Unit/fixunsdfsi_test.c	/^int main()$/;"	f
main	test/builtins/Unit/fixunsdfsivfp_test.c	/^int main()$/;"	f
main	test/builtins/Unit/fixunsdfti_test.c	/^int main()$/;"	f
main	test/builtins/Unit/fixunssfdi_test.c	/^int main()$/;"	f
main	test/builtins/Unit/fixunssfsi_test.c	/^int main()$/;"	f
main	test/builtins/Unit/fixunssfsivfp_test.c	/^int main()$/;"	f
main	test/builtins/Unit/fixunssfti_test.c	/^int main()$/;"	f
main	test/builtins/Unit/fixunstfdi_test.c	/^int main()$/;"	f
main	test/builtins/Unit/fixunstfsi_test.c	/^int main()$/;"	f
main	test/builtins/Unit/fixunstfti_test.c	/^int main()$/;"	f
main	test/builtins/Unit/fixunsxfdi_test.c	/^int main()$/;"	f
main	test/builtins/Unit/fixunsxfsi_test.c	/^int main()$/;"	f
main	test/builtins/Unit/fixunsxfti_test.c	/^int main()$/;"	f
main	test/builtins/Unit/fixxfdi_test.c	/^int main()$/;"	f
main	test/builtins/Unit/fixxfti_test.c	/^int main()$/;"	f
main	test/builtins/Unit/floatdidf_test.c	/^int main()$/;"	f
main	test/builtins/Unit/floatdisf_test.c	/^int main()$/;"	f
main	test/builtins/Unit/floatditf_test.c	/^int main()$/;"	f
main	test/builtins/Unit/floatdixf_test.c	/^int main()$/;"	f
main	test/builtins/Unit/floatsidfvfp_test.c	/^int main()$/;"	f
main	test/builtins/Unit/floatsisfvfp_test.c	/^int main()$/;"	f
main	test/builtins/Unit/floatsitf_test.c	/^int main()$/;"	f
main	test/builtins/Unit/floattidf_test.c	/^int main()$/;"	f
main	test/builtins/Unit/floattisf_test.c	/^int main()$/;"	f
main	test/builtins/Unit/floattitf_test.c	/^int main() {$/;"	f
main	test/builtins/Unit/floattixf_test.c	/^int main()$/;"	f
main	test/builtins/Unit/floatundidf_test.c	/^int main()$/;"	f
main	test/builtins/Unit/floatundisf_test.c	/^int main()$/;"	f
main	test/builtins/Unit/floatunditf_test.c	/^int main()$/;"	f
main	test/builtins/Unit/floatundixf_test.c	/^int main()$/;"	f
main	test/builtins/Unit/floatunsitf_test.c	/^int main()$/;"	f
main	test/builtins/Unit/floatunssidfvfp_test.c	/^int main()$/;"	f
main	test/builtins/Unit/floatunssisfvfp_test.c	/^int main()$/;"	f
main	test/builtins/Unit/floatuntidf_test.c	/^int main()$/;"	f
main	test/builtins/Unit/floatuntisf_test.c	/^int main()$/;"	f
main	test/builtins/Unit/floatuntitf_test.c	/^int main() {$/;"	f
main	test/builtins/Unit/floatuntixf_test.c	/^int main()$/;"	f
main	test/builtins/Unit/gcc_personality_test_helper.cxx	/^int main()$/;"	f
main	test/builtins/Unit/gedf2vfp_test.c	/^int main()$/;"	f
main	test/builtins/Unit/gesf2vfp_test.c	/^int main()$/;"	f
main	test/builtins/Unit/getf2_test.c	/^int main()$/;"	f
main	test/builtins/Unit/gtdf2vfp_test.c	/^int main()$/;"	f
main	test/builtins/Unit/gtsf2vfp_test.c	/^int main()$/;"	f
main	test/builtins/Unit/gttf2_test.c	/^int main()$/;"	f
main	test/builtins/Unit/ledf2vfp_test.c	/^int main()$/;"	f
main	test/builtins/Unit/lesf2vfp_test.c	/^int main()$/;"	f
main	test/builtins/Unit/letf2_test.c	/^int main()$/;"	f
main	test/builtins/Unit/lshrdi3_test.c	/^int main()$/;"	f
main	test/builtins/Unit/lshrti3_test.c	/^int main()$/;"	f
main	test/builtins/Unit/ltdf2vfp_test.c	/^int main()$/;"	f
main	test/builtins/Unit/ltsf2vfp_test.c	/^int main()$/;"	f
main	test/builtins/Unit/lttf2_test.c	/^int main()$/;"	f
main	test/builtins/Unit/moddi3_test.c	/^int main()$/;"	f
main	test/builtins/Unit/modsi3_test.c	/^int main() {$/;"	f
main	test/builtins/Unit/modti3_test.c	/^int main()$/;"	f
main	test/builtins/Unit/muldc3_test.c	/^int main()$/;"	f
main	test/builtins/Unit/muldf3vfp_test.c	/^int main()$/;"	f
main	test/builtins/Unit/muldi3_test.c	/^int main()$/;"	f
main	test/builtins/Unit/mulodi4_test.c	/^int main()$/;"	f
main	test/builtins/Unit/mulosi4_test.c	/^int main()$/;"	f
main	test/builtins/Unit/muloti4_test.c	/^int main()$/;"	f
main	test/builtins/Unit/mulsc3_test.c	/^int main()$/;"	f
main	test/builtins/Unit/mulsf3vfp_test.c	/^int main()$/;"	f
main	test/builtins/Unit/multc3_test.c	/^int main()$/;"	f
main	test/builtins/Unit/multf3_test.c	/^int main()$/;"	f
main	test/builtins/Unit/multi3_test.c	/^int main()$/;"	f
main	test/builtins/Unit/mulvdi3_test.c	/^int main()$/;"	f
main	test/builtins/Unit/mulvsi3_test.c	/^int main()$/;"	f
main	test/builtins/Unit/mulvti3_test.c	/^int main()$/;"	f
main	test/builtins/Unit/mulxc3_test.c	/^int main()$/;"	f
main	test/builtins/Unit/nedf2vfp_test.c	/^int main()$/;"	f
main	test/builtins/Unit/negdf2vfp_test.c	/^int main()$/;"	f
main	test/builtins/Unit/negdi2_test.c	/^int main()$/;"	f
main	test/builtins/Unit/negsf2vfp_test.c	/^int main()$/;"	f
main	test/builtins/Unit/negti2_test.c	/^int main()$/;"	f
main	test/builtins/Unit/negvdi2_test.c	/^int main()$/;"	f
main	test/builtins/Unit/negvsi2_test.c	/^int main()$/;"	f
main	test/builtins/Unit/negvti2_test.c	/^int main()$/;"	f
main	test/builtins/Unit/nesf2vfp_test.c	/^int main()$/;"	f
main	test/builtins/Unit/netf2_test.c	/^int main()$/;"	f
main	test/builtins/Unit/paritydi2_test.c	/^int main()$/;"	f
main	test/builtins/Unit/paritysi2_test.c	/^int main()$/;"	f
main	test/builtins/Unit/parityti2_test.c	/^int main()$/;"	f
main	test/builtins/Unit/popcountdi2_test.c	/^int main()$/;"	f
main	test/builtins/Unit/popcountsi2_test.c	/^int main()$/;"	f
main	test/builtins/Unit/popcountti2_test.c	/^int main()$/;"	f
main	test/builtins/Unit/powidf2_test.c	/^int main()$/;"	f
main	test/builtins/Unit/powisf2_test.c	/^int main()$/;"	f
main	test/builtins/Unit/powitf2_test.c	/^int main()$/;"	f
main	test/builtins/Unit/powixf2_test.c	/^int main()$/;"	f
main	test/builtins/Unit/ppc/fixtfdi_test.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/builtins/Unit/ppc/floatditf_test.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/builtins/Unit/ppc/floatunditf_test.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/builtins/Unit/ppc/qadd_test.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/builtins/Unit/ppc/qdiv_test.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/builtins/Unit/ppc/qmul_test.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/builtins/Unit/ppc/qsub_test.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/builtins/Unit/riscv/mulsi3_test.c	/^int main()$/;"	f
main	test/builtins/Unit/subdf3vfp_test.c	/^int main()$/;"	f
main	test/builtins/Unit/subsf3vfp_test.c	/^int main()$/;"	f
main	test/builtins/Unit/subtf3_test.c	/^int main()$/;"	f
main	test/builtins/Unit/subvdi3_test.c	/^int main()$/;"	f
main	test/builtins/Unit/subvsi3_test.c	/^int main()$/;"	f
main	test/builtins/Unit/subvti3_test.c	/^int main()$/;"	f
main	test/builtins/Unit/trampoline_setup_test.c	/^int main() {$/;"	f
main	test/builtins/Unit/truncdfhf2_test.c	/^int main()$/;"	f
main	test/builtins/Unit/truncdfsf2_test.c	/^int main()$/;"	f
main	test/builtins/Unit/truncdfsf2vfp_test.c	/^int main()$/;"	f
main	test/builtins/Unit/truncsfhf2_test.c	/^int main()$/;"	f
main	test/builtins/Unit/trunctfdf2_test.c	/^int main()$/;"	f
main	test/builtins/Unit/trunctfsf2_test.c	/^int main()$/;"	f
main	test/builtins/Unit/ucmpdi2_test.c	/^int main()$/;"	f
main	test/builtins/Unit/ucmpti2_test.c	/^int main()$/;"	f
main	test/builtins/Unit/udivdi3_test.c	/^int main()$/;"	f
main	test/builtins/Unit/udivmoddi4_test.c	/^int main()$/;"	f
main	test/builtins/Unit/udivmodsi4_test.c	/^int main()$/;"	f
main	test/builtins/Unit/udivmodti4_test.c	/^int main()$/;"	f
main	test/builtins/Unit/udivsi3_test.c	/^int main()$/;"	f
main	test/builtins/Unit/udivti3_test.c	/^int main()$/;"	f
main	test/builtins/Unit/umoddi3_test.c	/^int main()$/;"	f
main	test/builtins/Unit/umodsi3_test.c	/^int main()$/;"	f
main	test/builtins/Unit/umodti3_test.c	/^int main()$/;"	f
main	test/builtins/Unit/unorddf2vfp_test.c	/^int main()$/;"	f
main	test/builtins/Unit/unordsf2vfp_test.c	/^int main()$/;"	f
main	test/builtins/Unit/unordtf2_test.c	/^int main()$/;"	f
main	test/builtins/timing/ashldi3.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/builtins/timing/ashrdi3.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/builtins/timing/divdi3.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/builtins/timing/floatdidf.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/builtins/timing/floatdisf.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/builtins/timing/floatdixf.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/builtins/timing/floatundidf.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/builtins/timing/floatundisf.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/builtins/timing/floatundixf.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/builtins/timing/lshrdi3.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/builtins/timing/moddi3.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/builtins/timing/modsi3.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/builtins/timing/muldi3.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/builtins/timing/negdi2.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/builtins/timing/udivdi3.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/builtins/timing/umoddi3.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/cfi/anon-namespace.cpp	/^int main() {$/;"	f
main	test/cfi/bad-cast.cpp	/^int main(int argc, char **argv) {$/;"	f
main	test/cfi/bad-split.cpp	/^int main() {$/;"	f
main	test/cfi/base-derived-destructor.cpp	/^int main() {$/;"	f
main	test/cfi/cross-dso-diagnostic.cpp	/^int main() {$/;"	f
main	test/cfi/cross-dso/icall/diag.cpp	/^int main(int argc, char *argv[]) {$/;"	f
main	test/cfi/cross-dso/icall/dlopen.cpp	/^int main(int argc, char *argv[]) {$/;"	f
main	test/cfi/cross-dso/icall/icall-from-dso.cpp	/^int main() {$/;"	f
main	test/cfi/cross-dso/icall/icall.cpp	/^int main() {$/;"	f
main	test/cfi/cross-dso/shadow_is_read_only.cpp	/^int main(int argc, char *argv[]) {$/;"	f
main	test/cfi/cross-dso/simple-fail.cpp	/^int main(int argc, char *argv[]) {$/;"	f
main	test/cfi/cross-dso/simple-pass.cpp	/^int main(int argc, char *argv[]) {$/;"	f
main	test/cfi/cross-dso/stats.cpp	/^int main() {$/;"	f
main	test/cfi/cross-dso/target_out_of_bounds.cpp	/^int main(int argc, char *argv[]) {$/;"	f
main	test/cfi/icall/bad-signature.c	/^int main() {$/;"	f
main	test/cfi/icall/external-call.c	/^int main(int argc, char **argv) {$/;"	f
main	test/cfi/icall/weak.c	/^int main(int argc, char **argv) {$/;"	f
main	test/cfi/icall/wrong-signature-mixed-lto.c	/^int main() {$/;"	f
main	test/cfi/mfcall.cpp	/^int main(int argc, char **argv) {$/;"	f
main	test/cfi/multiple-inheritance.cpp	/^int main(int argc, char **argv) {$/;"	f
main	test/cfi/nvcall.cpp	/^int main() {$/;"	f
main	test/cfi/overwrite.cpp	/^int main() {$/;"	f
main	test/cfi/sibling.cpp	/^int main() {$/;"	f
main	test/cfi/simple-fail.cpp	/^int main() {$/;"	f
main	test/cfi/simple-pass.cpp	/^int main() {$/;"	f
main	test/cfi/stats.cpp	/^int main() {$/;"	f
main	test/cfi/target_uninstrumented.cpp	/^int main(int argc, char *argv[]) {$/;"	f
main	test/cfi/two-vcalls.cpp	/^int main() {$/;"	f
main	test/cfi/vdtor.cpp	/^int main() {$/;"	f
main	test/cfi/vtable-may-alias.cpp	/^int main() {$/;"	f
main	test/dfsan/basic.c	/^int main(void) {$/;"	f
main	test/dfsan/custom.cc	/^int main(void) {$/;"	f
main	test/dfsan/dump_labels.c	/^int main(int argc, char** argv) {$/;"	f
main	test/dfsan/flags.c	/^int main(void) {$/;"	f
main	test/dfsan/fncall.c	/^int main(void) {$/;"	f
main	test/dfsan/label_count.c	/^int main(void) {$/;"	f
main	test/dfsan/propagate.c	/^int main(void) {$/;"	f
main	test/dfsan/trace-cmp.c	/^int main(int argc, char **argv) {$/;"	f
main	test/dfsan/vararg.c	/^int main(int argc, char **argv) {$/;"	f
main	test/dfsan/write_callback.c	/^int main(int argc, char* argv[]) {$/;"	f
main	test/esan/TestCases/large-stack-linux.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/esan/TestCases/libc-intercept.c	/^int main(int argc, char **argv) {$/;"	f
main	test/esan/TestCases/mmap-shadow-conflict.c	/^int main(int argc, char **argv) {$/;"	f
main	test/esan/TestCases/struct-simple.cpp	/^int main(int argc, char **argv) {$/;"	f
main	test/esan/TestCases/verbose-simple.c	/^int main(int argc, char **argv) {$/;"	f
main	test/esan/TestCases/workingset-early-fault.c	/^int main(int argc, char **argv) {$/;"	f
main	test/esan/TestCases/workingset-memset.cpp	/^int main(int argc, char **argv) {$/;"	f
main	test/esan/TestCases/workingset-midreport.cpp	/^int main(int argc, char **argv) {$/;"	f
main	test/esan/TestCases/workingset-samples.cpp	/^int main(int argc, char **argv) {$/;"	f
main	test/esan/TestCases/workingset-signal-posix.cpp	/^int main(int argc, char **argv) {$/;"	f
main	test/esan/TestCases/workingset-simple.cpp	/^int main(int argc, char **argv) {$/;"	f
main	test/esan/Unit/circular_buffer.cpp	/^int main()$/;"	f
main	test/esan/Unit/hashtable.cpp	/^int main()$/;"	f
main	test/hwasan/TestCases/Linux/aligned_alloc-alignment.cc	/^int main() {$/;"	f
main	test/hwasan/TestCases/Linux/pvalloc-overflow.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/hwasan/TestCases/Posix/posix_memalign-alignment.cc	/^int main() {$/;"	f
main	test/hwasan/TestCases/allocator_returns_null.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/hwasan/TestCases/check-interface.cc	/^int main() {}$/;"	f
main	test/hwasan/TestCases/halt-on-error.cc	/^int main() {$/;"	f
main	test/hwasan/TestCases/stack-oob.cc	/^int main() {$/;"	f
main	test/hwasan/TestCases/stack-uar.cc	/^int main() {$/;"	f
main	test/hwasan/TestCases/use-after-free.c	/^int main() {$/;"	f
main	test/lsan/TestCases/Linux/cleanup_in_tsd_destructor.c	/^int main() {$/;"	f
main	test/lsan/TestCases/Linux/disabler_in_tsd_destructor.c	/^int main() {$/;"	f
main	test/lsan/TestCases/Linux/fork.cc	/^int main() {$/;"	f
main	test/lsan/TestCases/Linux/fork_and_leak.cc	/^int main() {$/;"	f
main	test/lsan/TestCases/Linux/fork_threaded.cc	/^int main() {$/;"	f
main	test/lsan/TestCases/Linux/guard-page.c	/^int main() {$/;"	f
main	test/lsan/TestCases/Linux/log-path_test.cc	/^int main() {$/;"	f
main	test/lsan/TestCases/Linux/use_tls_dynamic.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/lsan/TestCases/Linux/use_tls_pthread_specific_dynamic.cc	/^int main() {$/;"	f
main	test/lsan/TestCases/Linux/use_tls_pthread_specific_static.cc	/^int main() {$/;"	f
main	test/lsan/TestCases/Linux/use_tls_static.cc	/^int main() {$/;"	f
main	test/lsan/TestCases/default_options.cc	/^int main() {$/;"	f
main	test/lsan/TestCases/disabler.c	/^int main() {$/;"	f
main	test/lsan/TestCases/disabler.cc	/^int main() {$/;"	f
main	test/lsan/TestCases/do_leak_check_override.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/lsan/TestCases/high_allocator_contention.cc	/^int main(int argc, char** argv) {$/;"	f
main	test/lsan/TestCases/ignore_object.c	/^int main() {$/;"	f
main	test/lsan/TestCases/ignore_object_errors.cc	/^int main() {$/;"	f
main	test/lsan/TestCases/large_allocation_leak.cc	/^int main() {$/;"	f
main	test/lsan/TestCases/leak_check_at_exit.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/lsan/TestCases/leak_check_before_thread_started.cc	/^int main() {$/;"	f
main	test/lsan/TestCases/link_turned_off.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/lsan/TestCases/many_tls_keys.cc	/^int main() {$/;"	f
main	test/lsan/TestCases/new_array_with_dtor_0.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/lsan/TestCases/pointer_to_self.cc	/^int main() {$/;"	f
main	test/lsan/TestCases/print_suppressions.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/lsan/TestCases/recoverable_leak_check.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/lsan/TestCases/register_root_region.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/lsan/TestCases/sanity_check_pure_c.c	/^int main() {$/;"	f
main	test/lsan/TestCases/stale_stack_leak.cc	/^int main() {$/;"	f
main	test/lsan/TestCases/strace_test.cc	/^int main() {$/;"	f
main	test/lsan/TestCases/suppressions_default.cc	/^int main() {$/;"	f
main	test/lsan/TestCases/suppressions_file.cc	/^int main() {$/;"	f
main	test/lsan/TestCases/swapcontext.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/lsan/TestCases/use_after_return.cc	/^int main() {$/;"	f
main	test/lsan/TestCases/use_globals_initialized.cc	/^int main() {$/;"	f
main	test/lsan/TestCases/use_globals_uninitialized.cc	/^int main() {$/;"	f
main	test/lsan/TestCases/use_poisoned_asan.cc	/^int main() {$/;"	f
main	test/lsan/TestCases/use_registers.cc	/^int main() {$/;"	f
main	test/lsan/TestCases/use_stacks.cc	/^int main() {$/;"	f
main	test/lsan/TestCases/use_stacks_threaded.cc	/^int main() {$/;"	f
main	test/lsan/TestCases/use_unaligned.cc	/^int main() {$/;"	f
main	test/msan/Linux/cmsghdr.cc	/^int main() {$/;"	f
main	test/msan/Linux/eventfd.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/msan/Linux/fopencookie.cc	/^int main() {$/;"	f
main	test/msan/Linux/forkpty.cc	/^main (int argc, char** argv)$/;"	f
main	test/msan/Linux/getresid.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/msan/Linux/glob.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/msan/Linux/glob_altdirfunc.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/msan/Linux/glob_nomatch.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/msan/Linux/ioctl_sound.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/msan/Linux/mallinfo.cc	/^int main(void) {$/;"	f
main	test/msan/Linux/mincore.cc	/^int main(void) {$/;"	f
main	test/msan/Linux/name_to_handle_at.cc	/^int main(void) {$/;"	f
main	test/msan/Linux/obstack.cc	/^int main(void) {$/;"	f
main	test/msan/Linux/poll.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/msan/Linux/process_vm_readv.cc	/^int main(void) {$/;"	f
main	test/msan/Linux/sendmsg.cc	/^int main() {$/;"	f
main	test/msan/Linux/strerror_r.cc	/^int main() {$/;"	f
main	test/msan/Linux/sunrpc.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/msan/Linux/sunrpc_bytes.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/msan/Linux/sunrpc_string.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/msan/Linux/syscalls.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/msan/Linux/syscalls_sigaction.cc	/^int main() {$/;"	f
main	test/msan/Linux/tcgetattr.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/msan/Linux/xattr.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/msan/__strxfrm_l.cc	/^int main(void) {$/;"	f
main	test/msan/alloca.cc	/^int main(void) {$/;"	f
main	test/msan/allocator_mapping.cc	/^int main() {$/;"	f
main	test/msan/backtrace.cc	/^int main(void) {$/;"	f
main	test/msan/c-strdup.c	/^int main(int argc, char **argv) {$/;"	f
main	test/msan/chained_origin.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/msan/chained_origin_empty_stack.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/msan/chained_origin_limits.cc	/^int main(void) {$/;"	f
main	test/msan/chained_origin_memcpy.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/msan/chained_origin_with_signals.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/msan/check-handler.cc	/^int main(void) {$/;"	f
main	test/msan/check_mem_is_initialized.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/msan/coverage-levels.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/msan/ctermid.cc	/^int main(void) {$/;"	f
main	test/msan/cxa_atexit.cc	/^int main(void) {$/;"	f
main	test/msan/death-callback.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/msan/dlerror.cc	/^int main(void) {$/;"	f
main	test/msan/dlopen_executable.cc	/^int main(void) {$/;"	f
main	test/msan/dso-origin.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/msan/dtls_test.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/msan/dtor-base-access.cc	/^int main() {$/;"	f
main	test/msan/dtor-bit-fields.cc	/^int main() {$/;"	f
main	test/msan/dtor-derived-class.cc	/^int main() {$/;"	f
main	test/msan/dtor-member.cc	/^int main() {$/;"	f
main	test/msan/dtor-multiple-inheritance-nontrivial-class-members.cc	/^int main() {$/;"	f
main	test/msan/dtor-multiple-inheritance.cc	/^int main() {$/;"	f
main	test/msan/dtor-trivial-class-members.cc	/^int main() {$/;"	f
main	test/msan/dtor-trivial.cpp	/^int main() {$/;"	f
main	test/msan/dtor-vtable-multiple-inheritance.cc	/^int main() {$/;"	f
main	test/msan/dtor-vtable.cc	/^int main() {$/;"	f
main	test/msan/errno.cc	/^int main()$/;"	f
main	test/msan/fgets_fputs.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/msan/fork.cc	/^int main() {$/;"	f
main	test/msan/fread_fwrite.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/msan/fstat.cc	/^int main(void) {$/;"	f
main	test/msan/ftime.cc	/^int main(void) {$/;"	f
main	test/msan/getaddrinfo-positive.cc	/^int main(void) {$/;"	f
main	test/msan/getaddrinfo.cc	/^int main(void) {$/;"	f
main	test/msan/getc_unlocked.c	/^int main() {$/;"	f
main	test/msan/getline.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/msan/getloadavg.cc	/^int main(void) {$/;"	f
main	test/msan/getutent.cc	/^int main(void) {$/;"	f
main	test/msan/heap-origin.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/msan/icmp_slt_allones.cc	/^int main() {$/;"	f
main	test/msan/iconv.cc	/^int main(void) {$/;"	f
main	test/msan/if_indextoname.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/msan/ifaddrs.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/msan/initgroups.cc	/^int main(void) {$/;"	f
main	test/msan/inline.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/msan/insertvalue_origin.cc	/^int main() {$/;"	f
main	test/msan/ioctl.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/msan/ioctl_custom.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/msan/memcmp_test.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/msan/mktime.cc	/^int main(void) {$/;"	f
main	test/msan/mmap.cc	/^int main() {$/;"	f
main	test/msan/mmap_below_shadow.cc	/^int main(void) {$/;"	f
main	test/msan/msan_check_mem_is_initialized.cc	/^int main(void) {$/;"	f
main	test/msan/msan_copy_shadow.cc	/^int main() {$/;"	f
main	test/msan/msan_dump_shadow.cc	/^int main(void) {$/;"	f
main	test/msan/msan_print_shadow.cc	/^int main(void) {$/;"	f
main	test/msan/msan_print_shadow2.cc	/^int main(void) {$/;"	f
main	test/msan/msan_print_shadow3.cc	/^int main(void) {$/;"	f
main	test/msan/mul_by_const.cc	/^int main(void) {$/;"	f
main	test/msan/no_sanitize_memory.cc	/^int main(void) {$/;"	f
main	test/msan/no_sanitize_memory_prop.cc	/^int main(void) {$/;"	f
main	test/msan/origin-store-long.cc	/^int main() {$/;"	f
main	test/msan/param_tls_limit.cc	/^int main(void) {$/;"	f
main	test/msan/poison_in_free.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/msan/pr32842.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/msan/print_stats.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/msan/pthread_getattr_np_deadlock.cc	/^int main(void) {$/;"	f
main	test/msan/pthread_getname_np.cc	/^int main(void) {$/;"	f
main	test/msan/pthread_setcancelstate.cc	/^int main(void) {$/;"	f
main	test/msan/rand_r.cc	/^int main(void) {$/;"	f
main	test/msan/readdir64.cc	/^int main(void) {$/;"	f
main	test/msan/realloc-large-origin.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/msan/realloc-origin.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/msan/recover-dso.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/msan/recover.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/msan/report-demangling.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/msan/scandir.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/msan/scandir_null.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/msan/scoped-interceptors.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/msan/select.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/msan/select_float_origin.cc	/^int main() {$/;"	f
main	test/msan/select_origin.cc	/^int main(void) {$/;"	f
main	test/msan/sem_getvalue.cc	/^int main(void) {$/;"	f
main	test/msan/setlocale.cc	/^int main(void) {$/;"	f
main	test/msan/sigaction.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/msan/signal_stress_test.cc	/^int main() {$/;"	f
main	test/msan/sigwait.cc	/^int main(void) {$/;"	f
main	test/msan/sigwaitinfo.cc	/^int main(void) {$/;"	f
main	test/msan/stack-origin.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/msan/stack-origin2.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/msan/strerror_r-non-gnu.c	/^int main() {$/;"	f
main	test/msan/strlen_of_shadow.cc	/^int main(void) {$/;"	f
main	test/msan/strndup.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/msan/strxfrm.cc	/^int main(void) {$/;"	f
main	test/msan/sync_lock_set_and_test.cc	/^int main(void) {$/;"	f
main	test/msan/textdomain.cc	/^int main() {$/;"	f
main	test/msan/times.cc	/^int main(void) {$/;"	f
main	test/msan/tls_reuse.cc	/^int main(void) {$/;"	f
main	test/msan/tsearch.cc	/^int main(void) {$/;"	f
main	test/msan/tzset.cc	/^int main(void) {$/;"	f
main	test/msan/unaligned_read_origin.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/msan/unpoison_string.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/msan/use-after-dtor.cc	/^int main() {$/;"	f
main	test/msan/use-after-free.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/msan/vector_cvt.cc	/^int main() {$/;"	f
main	test/msan/vector_div.cc	/^int main() {$/;"	f
main	test/msan/wcsncpy.cc	/^int main() {$/;"	f
main	test/msan/wcsxfrm.cc	/^int main(void) {$/;"	f
main	test/profile/Inputs/comdat_rename_2.cc	/^int main() {$/;"	f
main	test/profile/Inputs/extern_template.cpp	/^int main() {$/;"	f
main	test/profile/Inputs/gcc-flag-compatibility.c	/^int main() {$/;"	f
main	test/profile/Inputs/instrprof-alloc.c	/^int main() {$/;"	f
main	test/profile/Inputs/instrprof-comdat-1.cpp	/^int main() {$/;"	f
main	test/profile/Inputs/instrprof-dlopen-dlclose-main.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/profile/Inputs/instrprof-dlopen-main.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/profile/Inputs/instrprof-dynamic-main.cpp	/^int main(int argc, char *argv[]) {$/;"	f
main	test/profile/Inputs/instrprof-file_ex.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/profile/Inputs/instrprof-gcov-__gcov_flush-terminate.c	/^int main(void) {$/;"	f
main	test/profile/Inputs/instrprof-gcov-exceptions.cpp	/^int main(void)$/;"	f
main	test/profile/Inputs/instrprof-gcov-fork.c	/^int main(void)$/;"	f
main	test/profile/Inputs/instrprof-gcov-multiple-bbs-single-line.c	/^int main(void)$/;"	f
main	test/profile/Inputs/instrprof-gcov-switch1.c	/^int main(void)$/;"	f
main	test/profile/Inputs/instrprof-gcov-switch2.c	/^int main(void)$/;"	f
main	test/profile/Inputs/instrprof-icall-promo_2.cc	/^int main() {$/;"	f
main	test/profile/Inputs/instrprof-merge-match.c	/^int main(int argc, const char *argv[]) {$/;"	f
main	test/profile/Inputs/instrprof-shared-main-gcov-flush.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/profile/Inputs/instrprof-shared-main.c	/^int main() {$/;"	f
main	test/profile/Inputs/instrprof-value-prof-evict.c	/^int main() {$/;"	f
main	test/profile/Linux/counter_promo_for.c	/^int main() {$/;"	f
main	test/profile/Linux/counter_promo_nest.c	/^int main()$/;"	f
main	test/profile/Linux/counter_promo_while.c	/^int main() {$/;"	f
main	test/profile/Linux/coverage_ctors.cpp	/^int main() {$/;"	f
main	test/profile/Linux/coverage_dtor.cpp	/^int main() {$/;"	f
main	test/profile/Linux/coverage_test.cpp	/^int main() {          \/\/ CHECK:  [[@LINE]]| 1|int main($/;"	f
main	test/profile/Linux/instrprof-basic.c	/^int main(int argc, const char *argv[]) {$/;"	f
main	test/profile/Linux/instrprof-cs.c	/^int main() {$/;"	f
main	test/profile/Linux/instrprof-dir.c	/^int main(int argc, char **argv) {$/;"	f
main	test/profile/Linux/instrprof-merge-vp.c	/^int main(int argc, const char *argv[]) {$/;"	f
main	test/profile/Linux/instrprof-value-merge.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/profile/infinite_loop.c	/^int main()$/;"	f
main	test/profile/instrprof-basic.c	/^int main(int argc, const char *argv[]) {$/;"	f
main	test/profile/instrprof-bufferio.c	/^int main(int argc, const char *argv[]) {$/;"	f
main	test/profile/instrprof-darwin-dead-strip.c	/^int main() { return 0; }$/;"	f
main	test/profile/instrprof-darwin-exports.c	/^int main() {}$/;"	f
main	test/profile/instrprof-dump.c	/^int main(int argc, const char *argv[]) {$/;"	f
main	test/profile/instrprof-error.c	/^int main(int argc, const char *argv[]) {$/;"	f
main	test/profile/instrprof-get-filename.c	/^int main(int argc, const char *argv[]) {$/;"	f
main	test/profile/instrprof-hostname.c	/^int main(int argc, const char *argv[]) {$/;"	f
main	test/profile/instrprof-merge.c	/^int main(int argc, const char *argv[]) {$/;"	f
main	test/profile/instrprof-override-filename-then-reset-default.c	/^int main(int argc, const char *argv[]) {$/;"	f
main	test/profile/instrprof-override-filename-with-env.c	/^int main(int argc, const char *argv[]) {$/;"	f
main	test/profile/instrprof-override-filename.c	/^int main(int argc, const char *argv[]) {$/;"	f
main	test/profile/instrprof-path.c	/^int main(int argc, const char *argv[]) {$/;"	f
main	test/profile/instrprof-reset-counters.c	/^int main(void) {$/;"	f
main	test/profile/instrprof-set-dir-mode.c	/^int main(void) {$/;"	f
main	test/profile/instrprof-set-filename-then-reset-default.c	/^int main(int argc, const char *argv[]) {$/;"	f
main	test/profile/instrprof-set-filename.c	/^int main(int argc, const char *argv[]) {$/;"	f
main	test/profile/instrprof-value-prof-2.c	/^int main(int argc, const char *argv[]) {$/;"	f
main	test/profile/instrprof-value-prof-reset.c	/^int main() {$/;"	f
main	test/profile/instrprof-value-prof.c	/^int main(int argc, const char *argv[]) {$/;"	f
main	test/profile/instrprof-version-mismatch.c	/^int main(int argc, const char *argv[]) {$/;"	f
main	test/profile/instrprof-visibility.cpp	/^int main() {$/;"	f
main	test/profile/instrprof-without-libc.c	/^int main(int argc, const char *argv[]) {$/;"	f
main	test/profile/instrprof-write-file-atexit-explicitly.c	/^int main(int argc, const char *argv[]) {$/;"	f
main	test/profile/instrprof-write-file-only.c	/^int main(int argc, const char *argv[]) {$/;"	f
main	test/profile/instrprof-write-file.c	/^int main(int argc, const char *argv[]) {$/;"	f
main	test/profile/runtime_infinite.c	/^int main(int argc, const char *argv[]) {$/;"	f
main	test/safestack/buffer-copy-vla.c	/^int main(int argc, char **argv)$/;"	f
main	test/safestack/buffer-copy.c	/^int main(int argc, char **argv)$/;"	f
main	test/safestack/canary.c	/^int main(int argc, char **argv)$/;"	f
main	test/safestack/init.c	/^int main(int argc, char **argv)$/;"	f
main	test/safestack/lto.c	/^int main() {$/;"	f
main	test/safestack/overflow.c	/^int main(int argc, char **argv)$/;"	f
main	test/safestack/pthread-cleanup.c	/^int main(int argc, char **argv)$/;"	f
main	test/safestack/pthread.c	/^int main(int argc, char **argv)$/;"	f
main	test/sanitizer_common/TestCases/Darwin/abort_on_error.cc	/^int main() {$/;"	f
main	test/sanitizer_common/TestCases/Darwin/print-stack-trace.cc	/^int main() {$/;"	f
main	test/sanitizer_common/TestCases/Linux/abort_on_error.cc	/^int main() {$/;"	f
main	test/sanitizer_common/TestCases/Linux/aligned_alloc-alignment.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/sanitizer_common/TestCases/Linux/aligned_alloc.c	/^int main() {$/;"	f
main	test/sanitizer_common/TestCases/Linux/allow_user_segv.cc	/^int main() {$/;"	f
main	test/sanitizer_common/TestCases/Linux/assert.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/sanitizer_common/TestCases/Linux/clock_gettime.c	/^int main() {$/;"	f
main	test/sanitizer_common/TestCases/Linux/closedir.c	/^int main() { closedir(0); }$/;"	f
main	test/sanitizer_common/TestCases/Linux/decorate_proc_maps.cc	/^int main(void) {$/;"	f
main	test/sanitizer_common/TestCases/Linux/deepbind.cc	/^int main (int argc, char *argv[]) {$/;"	f
main	test/sanitizer_common/TestCases/Linux/getpwnam_r_invalid_user.cc	/^int main(void) {$/;"	f
main	test/sanitizer_common/TestCases/Linux/hard_rss_limit_mb_test.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/sanitizer_common/TestCases/Linux/iconv_test.c	/^int main() {$/;"	f
main	test/sanitizer_common/TestCases/Linux/ill.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/sanitizer_common/TestCases/Linux/mlock_test.cc	/^int main() {$/;"	f
main	test/sanitizer_common/TestCases/Linux/mmap64_test.c	/^int main() {$/;"	f
main	test/sanitizer_common/TestCases/Linux/mmap_write_exec.cpp	/^int main(int argc, char **argv) {$/;"	f
main	test/sanitizer_common/TestCases/Linux/mprobe.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/sanitizer_common/TestCases/Linux/name_to_handle_at.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/sanitizer_common/TestCases/Linux/new_delete_test.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/sanitizer_common/TestCases/Linux/open_memstream.cc	/^int main(void) {$/;"	f
main	test/sanitizer_common/TestCases/Linux/pthread_mutex.cc	/^int main() {$/;"	f
main	test/sanitizer_common/TestCases/Linux/ptrace.cc	/^int main(void) {$/;"	f
main	test/sanitizer_common/TestCases/Linux/pvalloc-overflow.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/sanitizer_common/TestCases/Linux/recv_msg_trunc.cc	/^int main() {$/;"	f
main	test/sanitizer_common/TestCases/Linux/sched_getparam.cc	/^int main(void) {$/;"	f
main	test/sanitizer_common/TestCases/Linux/sem_init_glibc.cc	/^int main() {$/;"	f
main	test/sanitizer_common/TestCases/Linux/signal_segv_handler.cc	/^int main() {$/;"	f
main	test/sanitizer_common/TestCases/Linux/soft_rss_limit_mb_test.cc	/^int main() {$/;"	f
main	test/sanitizer_common/TestCases/Linux/sysconf_interceptor_bypass_test.cc	/^int main() {$/;"	f
main	test/sanitizer_common/TestCases/Linux/timerfd.cc	/^int main (int argc, char** argv)$/;"	f
main	test/sanitizer_common/TestCases/Linux/unexpected_format_specifier_test.cc	/^int main() {$/;"	f
main	test/sanitizer_common/TestCases/NetBSD/faccessat.cc	/^int main(void) { return faccessat(AT_FDCWD, "\/root", F_OK, 0); }$/;"	f
main	test/sanitizer_common/TestCases/NetBSD/getgrouplist.cc	/^int main(void) {$/;"	f
main	test/sanitizer_common/TestCases/NetBSD/getgroupmembership.cc	/^int main(void) {$/;"	f
main	test/sanitizer_common/TestCases/NetBSD/gid_from_group.cc	/^int main(void) {$/;"	f
main	test/sanitizer_common/TestCases/NetBSD/group_from_gid.cc	/^int main(void) {$/;"	f
main	test/sanitizer_common/TestCases/NetBSD/netent.cc	/^int main(void) {$/;"	f
main	test/sanitizer_common/TestCases/NetBSD/paccept.cc	/^int main(void) {$/;"	f
main	test/sanitizer_common/TestCases/NetBSD/protoent.cc	/^int main(void) {$/;"	f
main	test/sanitizer_common/TestCases/NetBSD/strmode.cc	/^int main(void) {$/;"	f
main	test/sanitizer_common/TestCases/NetBSD/ttyent.cc	/^int main(void) {$/;"	f
main	test/sanitizer_common/TestCases/NetBSD/uid_from_user.cc	/^int main(void) {$/;"	f
main	test/sanitizer_common/TestCases/NetBSD/user_from_uid.cc	/^int main(void) {$/;"	f
main	test/sanitizer_common/TestCases/Posix/access.cc	/^int main(void) { return access("\/dev\/null", F_OK); }$/;"	f
main	test/sanitizer_common/TestCases/Posix/dedup_token_length_test.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/sanitizer_common/TestCases/Posix/devname.cc	/^int main(void) {$/;"	f
main	test/sanitizer_common/TestCases/Posix/devname_r.cc	/^int main(void) {$/;"	f
main	test/sanitizer_common/TestCases/Posix/dump_instruction_bytes.cc	/^int main() {$/;"	f
main	test/sanitizer_common/TestCases/Posix/dump_registers.cc	/^int main() {$/;"	f
main	test/sanitizer_common/TestCases/Posix/fgetln.cc	/^int main(void) {$/;"	f
main	test/sanitizer_common/TestCases/Posix/fgets.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/sanitizer_common/TestCases/Posix/fpe.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/sanitizer_common/TestCases/Posix/fputs_puts.cc	/^int main(void) {$/;"	f
main	test/sanitizer_common/TestCases/Posix/getpass.cc	/^main (int argc, char** argv)$/;"	f
main	test/sanitizer_common/TestCases/Posix/illegal_read_test.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/sanitizer_common/TestCases/Posix/illegal_write_test.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/sanitizer_common/TestCases/Posix/lstat.cc	/^int main(void) {$/;"	f
main	test/sanitizer_common/TestCases/Posix/mmap_test.c	/^int main() {$/;"	f
main	test/sanitizer_common/TestCases/Posix/posix_memalign-alignment.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/sanitizer_common/TestCases/Posix/readlink.c	/^int main(int argc, char **argv) {$/;"	f
main	test/sanitizer_common/TestCases/Posix/readlinkat.c	/^int main(int argc, char **argv) {$/;"	f
main	test/sanitizer_common/TestCases/Posix/sanitizer_set_death_callback_test.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/sanitizer_common/TestCases/Posix/sanitizer_set_report_fd_test.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/sanitizer_common/TestCases/Posix/strlcat.cc	/^int main(void) {$/;"	f
main	test/sanitizer_common/TestCases/Posix/strlcpy.cc	/^int main(void) {$/;"	f
main	test/sanitizer_common/TestCases/Posix/strxfrm.c	/^int main(int argc, char **argv) {$/;"	f
main	test/sanitizer_common/TestCases/Posix/wcsxfrm.c	/^int main(int argc, char **argv) {$/;"	f
main	test/sanitizer_common/TestCases/Posix/weak_hook_test.cc	/^int main() {$/;"	f
main	test/sanitizer_common/TestCases/allocator_returns_null.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/sanitizer_common/TestCases/corelimit.cc	/^int main() {$/;"	f
main	test/sanitizer_common/TestCases/ctype.c	/^int main(int argc, char **argv) {$/;"	f
main	test/sanitizer_common/TestCases/fopen_nullptr.c	/^int main() { f = fopen(fn, "r"); }$/;"	f
main	test/sanitizer_common/TestCases/get_module_and_offset_for_pc.cc	/^int main() {$/;"	f
main	test/sanitizer_common/TestCases/malloc_hook.cc	/^int main() {$/;"	f
main	test/sanitizer_common/TestCases/options-help.cc	/^int main() {$/;"	f
main	test/sanitizer_common/TestCases/options-include.cc	/^int main() {$/;"	f
main	test/sanitizer_common/TestCases/options-invalid.cc	/^int main() {$/;"	f
main	test/sanitizer_common/TestCases/print-stack-trace.cc	/^int main() {$/;"	f
main	test/sanitizer_common/TestCases/printf-ldbl.c	/^int main(int argc, char **argv) {$/;"	f
main	test/sanitizer_common/TestCases/pthread_mutexattr_get.cc	/^int main(void) {$/;"	f
main	test/sanitizer_common/TestCases/sanitizer_coverage_inline8bit_counter.cc	/^int main() {$/;"	f
main	test/sanitizer_common/TestCases/sanitizer_coverage_stack_depth.cc	/^int main() {$/;"	f
main	test/sanitizer_common/TestCases/sanitizer_coverage_symbolize.cc	/^int main() {$/;"	f
main	test/sanitizer_common/TestCases/sanitizer_coverage_trace_pc_guard-dso.cc	/^int main() {$/;"	f
main	test/sanitizer_common/TestCases/sanitizer_coverage_trace_pc_guard-init.cc	/^int main() {$/;"	f
main	test/sanitizer_common/TestCases/sanitizer_coverage_trace_pc_guard.cc	/^int main() {$/;"	f
main	test/sanitizer_common/TestCases/scanf-ldbl.c	/^int main(int argc, char **argv) {$/;"	f
main	test/sanitizer_common/TestCases/strcasestr.c	/^int main(int argc, char **argv) {$/;"	f
main	test/sanitizer_common/TestCases/strcspn.c	/^int main(int argc, char **argv) {$/;"	f
main	test/sanitizer_common/TestCases/strnlen.c	/^int main(int argc, char **argv) {$/;"	f
main	test/sanitizer_common/TestCases/strpbrk.c	/^int main(int argc, char **argv) {$/;"	f
main	test/sanitizer_common/TestCases/strspn.c	/^int main(int argc, char **argv) {$/;"	f
main	test/sanitizer_common/TestCases/strstr.c	/^int main(int argc, char **argv) {$/;"	f
main	test/sanitizer_common/TestCases/symbolize_pc.cc	/^int main() {$/;"	f
main	test/sanitizer_common/TestCases/symbolize_stack.cc	/^int main() {$/;"	f
main	test/scudo/aligned-new.cpp	/^int main(int argc, char **argv) {$/;"	f
main	test/scudo/alignment.c	/^int main(int argc, char **argv)$/;"	f
main	test/scudo/double-free.cpp	/^int main(int argc, char **argv)$/;"	f
main	test/scudo/fsanitize.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/scudo/interface.cpp	/^int main(int argc, char **argv)$/;"	f
main	test/scudo/malloc.cpp	/^int main(int argc, char **argv)$/;"	f
main	test/scudo/memalign.c	/^int main(int argc, char **argv)$/;"	f
main	test/scudo/mismatch.cpp	/^int main(int argc, char **argv)$/;"	f
main	test/scudo/options.cpp	/^int main(int argc, char **argv)$/;"	f
main	test/scudo/overflow.c	/^int main(int argc, char **argv)$/;"	f
main	test/scudo/preinit.c	/^int main(int argc, char **argv)$/;"	f
main	test/scudo/preload.cpp	/^int main(int argc, char *argv[]) {$/;"	f
main	test/scudo/quarantine.c	/^int main(int argc, char **argv)$/;"	f
main	test/scudo/random_shuffle.cpp	/^int main(int argc, char **argv) {$/;"	f
main	test/scudo/realloc.cpp	/^int main(int argc, char **argv)$/;"	f
main	test/scudo/rss.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/scudo/secondary.c	/^int main(int argc, char **argv)$/;"	f
main	test/scudo/sized-delete.cpp	/^int main(int argc, char **argv)$/;"	f
main	test/scudo/sizes.cpp	/^int main(int argc, char **argv) {$/;"	f
main	test/scudo/stats.c	/^int main(int argc, char **argv)$/;"	f
main	test/scudo/threads.c	/^int main(int argc, char** argv) {$/;"	f
main	test/scudo/tsd_destruction.c	/^int main(int argc, char** argv) {$/;"	f
main	test/scudo/valloc.c	/^int main(int argc, char **argv)$/;"	f
main	test/shadowcallstack/minimal_runtime.h	/^__attribute__((no_sanitize("shadow-call-stack"))) int main(void) {$/;"	f
main	test/tsan/Darwin/debug_external.cc	/^int main() {$/;"	f
main	test/tsan/Darwin/dlopen.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/tsan/Darwin/external-dups.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/tsan/Darwin/external-ignore-noninstrumented.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/tsan/Darwin/external-swift-debugging.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/tsan/Darwin/external-swift.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/tsan/Darwin/external.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/tsan/Darwin/malloc-stack-logging.cc	/^int main() {$/;"	f
main	test/tsan/Darwin/osspinlock-norace.cc	/^int main() {$/;"	f
main	test/tsan/Darwin/realloc-zero.cc	/^int main() {$/;"	f
main	test/tsan/Darwin/signals-blocked.cc	/^int main() {$/;"	f
main	test/tsan/Darwin/symbolizer-atos.cc	/^int main() {$/;"	f
main	test/tsan/Darwin/symbolizer-dladdr.cc	/^int main() {$/;"	f
main	test/tsan/Linux/check_memcpy.cc	/^int main() {$/;"	f
main	test/tsan/Linux/check_preinit.cc	/^int main() {$/;"	f
main	test/tsan/Linux/double_race.cc	/^int main() {$/;"	f
main	test/tsan/Linux/mutex_robust.cc	/^int main() {$/;"	f
main	test/tsan/Linux/mutex_robust2.cc	/^int main() {$/;"	f
main	test/tsan/Linux/pie_no_aslr.cc	/^int main() {$/;"	f
main	test/tsan/Linux/user_fopen.cc	/^int main() {$/;"	f
main	test/tsan/Linux/user_malloc.cc	/^int main() {$/;"	f
main	test/tsan/aligned_vs_unaligned_race.cc	/^int main() {$/;"	f
main	test/tsan/annotate_happens_before.cc	/^int main() {$/;"	f
main	test/tsan/atexit.cc	/^int main() {$/;"	f
main	test/tsan/atexit2.cc	/^int main() {$/;"	f
main	test/tsan/atexit3.cc	/^int main() {$/;"	f
main	test/tsan/atomic_free.cc	/^int main() {$/;"	f
main	test/tsan/atomic_free2.cc	/^int main() {$/;"	f
main	test/tsan/atomic_free3.cc	/^int main() {$/;"	f
main	test/tsan/atomic_hle.cc	/^int main() {$/;"	f
main	test/tsan/atomic_norace.cc	/^int main() {$/;"	f
main	test/tsan/atomic_race.cc	/^int main() {$/;"	f
main	test/tsan/atomic_stack.cc	/^int main() {$/;"	f
main	test/tsan/atomic_store.cc	/^int main() {$/;"	f
main	test/tsan/barrier.cc	/^int main() {$/;"	f
main	test/tsan/bench.h	/^int main(int argc, char **argv) {$/;"	f
main	test/tsan/bench_shadow_flush.cc	/^int main(int argc, const char **argv) {$/;"	f
main	test/tsan/benign_race.cc	/^int main() {$/;"	f
main	test/tsan/blacklist.cc	/^int main() {$/;"	f
main	test/tsan/blacklist2.cc	/^int main() {$/;"	f
main	test/tsan/cond.c	/^int main() {$/;"	f
main	test/tsan/cond_cancel.c	/^int main() {$/;"	f
main	test/tsan/cond_destruction.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/tsan/cond_race.cc	/^int main() {$/;"	f
main	test/tsan/cond_version.c	/^int main() {$/;"	f
main	test/tsan/custom_mutex0.cc	/^int main() {$/;"	f
main	test/tsan/custom_mutex1.cc	/^int main() {$/;"	f
main	test/tsan/custom_mutex2.cc	/^int main() {$/;"	f
main	test/tsan/custom_mutex3.cc	/^int main() {$/;"	f
main	test/tsan/custom_mutex4.cc	/^int main() {$/;"	f
main	test/tsan/custom_mutex5.cc	/^int main() {$/;"	f
main	test/tsan/deadlock_detector_stress_test.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/tsan/debug_alloc_stack.cc	/^int main() {$/;"	f
main	test/tsan/debug_locate.cc	/^int main() {$/;"	f
main	test/tsan/debugging.cc	/^int main() {$/;"	f
main	test/tsan/deep_stack1.cc	/^int main() {$/;"	f
main	test/tsan/default_options.cc	/^int main() {$/;"	f
main	test/tsan/dl_iterate_phdr.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/tsan/dlclose.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/tsan/dtls.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/tsan/exceptions.cc	/^int main(int argc, const char * argv[]) {$/;"	f
main	test/tsan/fd_close_norace.cc	/^int main() {$/;"	f
main	test/tsan/fd_close_norace2.cc	/^int main() {$/;"	f
main	test/tsan/fd_dup_norace.cc	/^int main() {$/;"	f
main	test/tsan/fd_dup_norace2.cc	/^int main() {$/;"	f
main	test/tsan/fd_dup_race.cc	/^int main() {$/;"	f
main	test/tsan/fd_location.cc	/^int main() {$/;"	f
main	test/tsan/fd_pipe_norace.cc	/^int main() {$/;"	f
main	test/tsan/fd_pipe_race.cc	/^int main() {$/;"	f
main	test/tsan/fd_socket_connect_norace.cc	/^int main() {$/;"	f
main	test/tsan/fd_socket_norace.cc	/^int main() {$/;"	f
main	test/tsan/fd_socketpair_norace.cc	/^int main() {$/;"	f
main	test/tsan/fd_stdout_race.cc	/^int main() {$/;"	f
main	test/tsan/fd_tid_recycled.cc	/^int main() {$/;"	f
main	test/tsan/fork_atexit.cc	/^int main() {$/;"	f
main	test/tsan/fork_deadlock.cc	/^int main() {$/;"	f
main	test/tsan/fork_multithreaded.cc	/^int main() {$/;"	f
main	test/tsan/fork_multithreaded3.cc	/^int main() {$/;"	f
main	test/tsan/free_race.c	/^int main() {$/;"	f
main	test/tsan/free_race2.c	/^int main() {$/;"	f
main	test/tsan/getline_nohang.cc	/^int main() {$/;"	f
main	test/tsan/global_race.cc	/^int main() {$/;"	f
main	test/tsan/global_race2.cc	/^int main() {$/;"	f
main	test/tsan/global_race3.cc	/^int main() {$/;"	f
main	test/tsan/halt_on_error.cc	/^int main() {$/;"	f
main	test/tsan/heap_race.cc	/^int main() {$/;"	f
main	test/tsan/ignore_free.cc	/^int main() {$/;"	f
main	test/tsan/ignore_lib0.cc	/^int main() {$/;"	f
main	test/tsan/ignore_lib1.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/tsan/ignore_lib2.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/tsan/ignore_lib3.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/tsan/ignore_lib4.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/tsan/ignore_lib5.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/tsan/ignore_malloc.cc	/^int main() {$/;"	f
main	test/tsan/ignore_race.cc	/^int main() {$/;"	f
main	test/tsan/ignore_sync.cc	/^int main() {$/;"	f
main	test/tsan/ignored-interceptors-mmap.cc	/^int main() {$/;"	f
main	test/tsan/inlined_memcpy_race.cc	/^int main() {$/;"	f
main	test/tsan/inlined_memcpy_race2.cc	/^int main() {$/;"	f
main	test/tsan/interface_atomic_test.c	/^int main() {$/;"	f
main	test/tsan/java_alloc.cc	/^int main() {$/;"	f
main	test/tsan/java_finalizer.cc	/^int main() {$/;"	f
main	test/tsan/java_find.cc	/^int main() {$/;"	f
main	test/tsan/java_heap_init.cc	/^int main() {$/;"	f
main	test/tsan/java_lock.cc	/^int main() {$/;"	f
main	test/tsan/java_lock_move.cc	/^int main() {$/;"	f
main	test/tsan/java_lock_rec.cc	/^int main() {$/;"	f
main	test/tsan/java_lock_rec_race.cc	/^int main() {$/;"	f
main	test/tsan/java_move_overlap.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/tsan/java_move_overlap_race.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/tsan/java_race.cc	/^int main() {$/;"	f
main	test/tsan/java_race_move.cc	/^int main() {$/;"	f
main	test/tsan/java_race_pc.cc	/^int main() {$/;"	f
main	test/tsan/java_rwlock.cc	/^int main() {$/;"	f
main	test/tsan/java_symbolization.cc	/^int main() {$/;"	f
main	test/tsan/java_symbolization_legacy.cc	/^int main() {$/;"	f
main	test/tsan/java_volatile.cc	/^int main() {$/;"	f
main	test/tsan/large_malloc_meta.cc	/^int main() {$/;"	f
main	test/tsan/libcxx/std_shared_ptr.cc	/^int main() {$/;"	f
main	test/tsan/load_shared_lib.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/tsan/longjmp.cc	/^int main() {$/;"	f
main	test/tsan/longjmp2.cc	/^int main() {$/;"	f
main	test/tsan/longjmp3.cc	/^int main() {$/;"	f
main	test/tsan/longjmp4.cc	/^int main() {$/;"	f
main	test/tsan/lots_of_threads.c	/^int main() {$/;"	f
main	test/tsan/malloc_overflow.cc	/^int main() {$/;"	f
main	test/tsan/malloc_stack.cc	/^int main() {$/;"	f
main	test/tsan/map32bit.cc	/^int main() {$/;"	f
main	test/tsan/memcmp_race.cc	/^int main() {$/;"	f
main	test/tsan/memcpy_race.cc	/^int main() {$/;"	f
main	test/tsan/mmap_large.cc	/^int main() {$/;"	f
main	test/tsan/mmap_stress.cc	/^int main() {$/;"	f
main	test/tsan/mop1.c	/^int main() {$/;"	f
main	test/tsan/mop_with_offset.cc	/^int main() {$/;"	f
main	test/tsan/mop_with_offset2.cc	/^int main() {$/;"	f
main	test/tsan/must_deadlock.cc	/^int main() {$/;"	f
main	test/tsan/mutex_annotations.cc	/^int main() {$/;"	f
main	test/tsan/mutex_bad_read_lock.cc	/^int main() {$/;"	f
main	test/tsan/mutex_bad_read_unlock.cc	/^int main() {$/;"	f
main	test/tsan/mutex_bad_unlock.cc	/^int main() {$/;"	f
main	test/tsan/mutex_cycle2.c	/^int main() {$/;"	f
main	test/tsan/mutex_cycle_long.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test/tsan/mutex_destroy_locked.cc	/^int main() {$/;"	f
main	test/tsan/mutex_destroy_locked2.cc	/^int main() {$/;"	f
main	test/tsan/mutex_double_lock.cc	/^int main() {$/;"	f
main	test/tsan/mutex_lock_destroyed.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/tsan/mutexset1.cc	/^int main() {$/;"	f
main	test/tsan/mutexset2.cc	/^int main() {$/;"	f
main	test/tsan/mutexset3.cc	/^int main() {$/;"	f
main	test/tsan/mutexset4.cc	/^int main() {$/;"	f
main	test/tsan/mutexset5.cc	/^int main() {$/;"	f
main	test/tsan/mutexset6.cc	/^int main() {$/;"	f
main	test/tsan/mutexset7.cc	/^int main() {$/;"	f
main	test/tsan/mutexset8.cc	/^int main() {$/;"	f
main	test/tsan/pie_test.cc	/^int main(void) {$/;"	f
main	test/tsan/printf-1.c	/^int main() {$/;"	f
main	test/tsan/pthread_atfork_deadlock.c	/^int main() {$/;"	f
main	test/tsan/pthread_key.cc	/^int main() {$/;"	f
main	test/tsan/race_on_barrier.c	/^int main() {$/;"	f
main	test/tsan/race_on_barrier2.c	/^int main() {$/;"	f
main	test/tsan/race_on_fputs.cc	/^int main() {$/;"	f
main	test/tsan/race_on_heap.cc	/^int main() {$/;"	f
main	test/tsan/race_on_mutex.c	/^int main() {$/;"	f
main	test/tsan/race_on_mutex2.c	/^int main() {$/;"	f
main	test/tsan/race_on_puts.cc	/^int main() {$/;"	f
main	test/tsan/race_on_read.cc	/^int main() {$/;"	f
main	test/tsan/race_on_speculative_load.cc	/^int main() {$/;"	f
main	test/tsan/race_on_write.cc	/^int main() {$/;"	f
main	test/tsan/race_stress.cc	/^int main() {$/;"	f
main	test/tsan/race_top_suppression.cc	/^int main() {$/;"	f
main	test/tsan/race_top_suppression1.cc	/^int main() {$/;"	f
main	test/tsan/race_with_finished_thread.cc	/^int main() {$/;"	f
main	test/tsan/real_deadlock_detector_stress_test.cc	/^int main() {$/;"	f
main	test/tsan/restore_stack.cc	/^int main() {$/;"	f
main	test/tsan/setuid.c	/^int main() {$/;"	f
main	test/tsan/setuid2.c	/^int main() {$/;"	f
main	test/tsan/signal_block.cc	/^int main(int argc, char** argv) {$/;"	f
main	test/tsan/signal_cond.cc	/^int main() {$/;"	f
main	test/tsan/signal_errno.cc	/^int main() {$/;"	f
main	test/tsan/signal_longjmp.cc	/^int main() {$/;"	f
main	test/tsan/signal_malloc.cc	/^int main() {$/;"	f
main	test/tsan/signal_pause.cc	/^int main(int argc, char** argv) {$/;"	f
main	test/tsan/signal_recursive.cc	/^int main(int argc, const char *argv[]) {$/;"	f
main	test/tsan/signal_reset.cc	/^int main() {$/;"	f
main	test/tsan/signal_sync.cc	/^int main() {$/;"	f
main	test/tsan/signal_sync2.cc	/^int main() {$/;"	f
main	test/tsan/signal_thread.cc	/^int main() {$/;"	f
main	test/tsan/signal_write.cc	/^int main() {$/;"	f
main	test/tsan/sigsuspend.cc	/^int main() {$/;"	f
main	test/tsan/simple_race.c	/^int main() {$/;"	f
main	test/tsan/simple_race.cc	/^int main() {$/;"	f
main	test/tsan/simple_stack.c	/^int main() {$/;"	f
main	test/tsan/simple_stack2.cc	/^int main() {$/;"	f
main	test/tsan/sleep_sync.cc	/^int main() {$/;"	f
main	test/tsan/sleep_sync2.cc	/^int main() {$/;"	f
main	test/tsan/stack_race.cc	/^int main() {$/;"	f
main	test/tsan/stack_race2.cc	/^int main() {$/;"	f
main	test/tsan/stack_sync_reuse.cc	/^int main() {$/;"	f
main	test/tsan/static_init1.cc	/^int main() {$/;"	f
main	test/tsan/static_init2.cc	/^int main() {$/;"	f
main	test/tsan/static_init3.cc	/^int main() {$/;"	f
main	test/tsan/static_init4.cc	/^int main() {$/;"	f
main	test/tsan/static_init5.cc	/^int main() {$/;"	f
main	test/tsan/static_init6.cc	/^int main() {$/;"	f
main	test/tsan/strerror_r.cc	/^int main() {$/;"	f
main	test/tsan/sunrpc.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/tsan/suppress_same_address.cc	/^int main() {$/;"	f
main	test/tsan/suppress_same_stacks.cc	/^int main() {$/;"	f
main	test/tsan/suppressions_global.cc	/^int main() {$/;"	f
main	test/tsan/suppressions_mutex.cc	/^int main() {$/;"	f
main	test/tsan/suppressions_race.cc	/^int main() {$/;"	f
main	test/tsan/suppressions_race2.cc	/^int main() {$/;"	f
main	test/tsan/thread_detach.c	/^int main() {$/;"	f
main	test/tsan/thread_detach2.c	/^int main() {$/;"	f
main	test/tsan/thread_end_with_ignore.cc	/^int main() {$/;"	f
main	test/tsan/thread_end_with_ignore2.cc	/^int main() {$/;"	f
main	test/tsan/thread_end_with_ignore3.cc	/^int main() {$/;"	f
main	test/tsan/thread_leak.c	/^int main() {$/;"	f
main	test/tsan/thread_leak2.c	/^int main() {$/;"	f
main	test/tsan/thread_leak3.c	/^int main() {$/;"	f
main	test/tsan/thread_leak4.c	/^int main() {$/;"	f
main	test/tsan/thread_leak5.c	/^int main() {$/;"	f
main	test/tsan/thread_name.cc	/^int main() {$/;"	f
main	test/tsan/thread_name2.cc	/^int main() {$/;"	f
main	test/tsan/tiny_race.c	/^int main() {$/;"	f
main	test/tsan/tls_race.cc	/^int main() {$/;"	f
main	test/tsan/tls_race2.cc	/^int main() {$/;"	f
main	test/tsan/tsan-vs-gvn.cc	/^int main() {$/;"	f
main	test/tsan/unaligned_norace.cc	/^int main() {$/;"	f
main	test/tsan/unaligned_race.cc	/^int main() {$/;"	f
main	test/tsan/vfork.cc	/^int main() {$/;"	f
main	test/tsan/virtual_inheritance_compile_bug.cc	/^int main() {$/;"	f
main	test/tsan/vptr_benign_race.cc	/^int main() {$/;"	f
main	test/tsan/vptr_harmful_race.cc	/^int main() {$/;"	f
main	test/tsan/vptr_harmful_race2.cc	/^int main() {$/;"	f
main	test/tsan/vptr_harmful_race3.cc	/^int main() {$/;"	f
main	test/tsan/vptr_harmful_race4.cc	/^int main() {$/;"	f
main	test/tsan/write_in_reader_lock.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/ubsan/TestCases/Float/cast-overflow.cpp	/^int main(int argc, char **argv) {$/;"	f
main	test/ubsan/TestCases/ImplicitConversion/integer-truncation-blacklist.c	/^int main(int argc, char **argv) {$/;"	f
main	test/ubsan/TestCases/ImplicitConversion/integer-truncation-summary.cpp	/^int main() {$/;"	f
main	test/ubsan/TestCases/ImplicitConversion/integer-truncation.c	/^int main() {$/;"	f
main	test/ubsan/TestCases/Integer/add-overflow.cpp	/^int main() {$/;"	f
main	test/ubsan/TestCases/Integer/div-overflow.cpp	/^int main() {$/;"	f
main	test/ubsan/TestCases/Integer/div-zero.cpp	/^int main() {$/;"	f
main	test/ubsan/TestCases/Integer/incdec-overflow.cpp	/^int main() {$/;"	f
main	test/ubsan/TestCases/Integer/mul-overflow.cpp	/^int main() {$/;"	f
main	test/ubsan/TestCases/Integer/negate-overflow.cpp	/^int main() {$/;"	f
main	test/ubsan/TestCases/Integer/no-recover.cpp	/^int main() {$/;"	f
main	test/ubsan/TestCases/Integer/shift.cpp	/^int main() {$/;"	f
main	test/ubsan/TestCases/Integer/sub-overflow.cpp	/^int main() {$/;"	f
main	test/ubsan/TestCases/Integer/summary.cpp	/^int main() {$/;"	f
main	test/ubsan/TestCases/Integer/suppressions.cpp	/^int main() {$/;"	f
main	test/ubsan/TestCases/Integer/uadd-overflow.cpp	/^int main() {$/;"	f
main	test/ubsan/TestCases/Integer/uincdec-overflow.cpp	/^int main() {$/;"	f
main	test/ubsan/TestCases/Integer/umul-overflow.cpp	/^int main() {$/;"	f
main	test/ubsan/TestCases/Integer/usub-overflow.cpp	/^int main() {$/;"	f
main	test/ubsan/TestCases/Misc/Linux/print_stack_trace.cc	/^int main() {$/;"	f
main	test/ubsan/TestCases/Misc/Linux/ubsan_options.cc	/^int main() {$/;"	f
main	test/ubsan/TestCases/Misc/bool.cpp	/^int main(int argc, char **argv) {$/;"	f
main	test/ubsan/TestCases/Misc/bounds.cpp	/^int main(int argc, char **argv) {$/;"	f
main	test/ubsan/TestCases/Misc/builtins.cpp	/^int main() {$/;"	f
main	test/ubsan/TestCases/Misc/coverage-levels.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/ubsan/TestCases/Misc/deduplication.cpp	/^int main() {$/;"	f
main	test/ubsan/TestCases/Misc/enum.cpp	/^int main(int argc, char **argv) {$/;"	f
main	test/ubsan/TestCases/Misc/log-path_test.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/ubsan/TestCases/Misc/missing_return.cpp	/^int main(int, char **argv) {$/;"	f
main	test/ubsan/TestCases/Misc/monitor.cpp	/^int main() {$/;"	f
main	test/ubsan/TestCases/Misc/no-interception.cpp	/^int main(int argc, char **argv) {$/;"	f
main	test/ubsan/TestCases/Misc/nonnull-arg.cpp	/^int main(int argc, char *argv[]) {$/;"	f
main	test/ubsan/TestCases/Misc/nonnull.cpp	/^int main(int argc, char **argv) {$/;"	f
main	test/ubsan/TestCases/Misc/nullability.c	/^int main(int argc, char **argv) {$/;"	f
main	test/ubsan/TestCases/Misc/unreachable.cpp	/^int main(int, char **argv) {$/;"	f
main	test/ubsan/TestCases/Misc/vla.c	/^int main(int argc, char **argv) {$/;"	f
main	test/ubsan/TestCases/Pointer/index-overflow.cpp	/^int main(int argc, char *argv[]) {$/;"	f
main	test/ubsan/TestCases/Pointer/unsigned-index-expression.cpp	/^int main(int argc, char *argv[]) {$/;"	f
main	test/ubsan/TestCases/TypeCheck/Function/function.cpp	/^int main(void) {$/;"	f
main	test/ubsan/TestCases/TypeCheck/Linux/PR33221.cpp	/^int main() {$/;"	f
main	test/ubsan/TestCases/TypeCheck/PR33221.cpp	/^int main() {$/;"	f
main	test/ubsan/TestCases/TypeCheck/misaligned.cpp	/^int main(int, char **argv) {$/;"	f
main	test/ubsan/TestCases/TypeCheck/null.cpp	/^int main(int, char **argv) {$/;"	f
main	test/ubsan/TestCases/TypeCheck/vptr-corrupted-vtable-itanium.cpp	/^int main(int argc, char **argv) {$/;"	f
main	test/ubsan/TestCases/TypeCheck/vptr-non-unique-typeinfo.cpp	/^int main() {$/;"	f
main	test/ubsan/TestCases/TypeCheck/vptr-virtual-base-construction.cpp	/^int main() { delete new D; }$/;"	f
main	test/ubsan/TestCases/TypeCheck/vptr-virtual-base.cpp	/^int main(int argc, char **argv) {$/;"	f
main	test/ubsan/TestCases/TypeCheck/vptr.cpp	/^int main(int argc, char **argv) {$/;"	f
main	test/ubsan_minimal/TestCases/implicit-integer-truncation.c	/^int main() {$/;"	f
main	test/ubsan_minimal/TestCases/recover-dedup-limit.cpp	/^int main() {$/;"	f
main	test/ubsan_minimal/TestCases/recover-dedup.cpp	/^int main() {$/;"	f
main	test/ubsan_minimal/TestCases/uadd-overflow.cpp	/^int main() {$/;"	f
main	test/xray/TestCases/Posix/always-never-instrument.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/xray/TestCases/Posix/arg1-arg0-logging.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/xray/TestCases/Posix/arg1-logger.cc	/^int main() {$/;"	f
main	test/xray/TestCases/Posix/arg1-logging-implicit-this.cc	/^int main() {$/;"	f
main	test/xray/TestCases/Posix/argv0-log-file-name.cc	/^[[clang::xray_always_instrument]] int main(int argc, char *argv[]) {$/;"	f
main	test/xray/TestCases/Posix/basic-filtering.cc	/^[[clang::xray_always_instrument]] int main(int argc, char *argv[]) {$/;"	f
main	test/xray/TestCases/Posix/c-test.cc	/^int main() {$/;"	f
main	test/xray/TestCases/Posix/common-trampoline-alignment.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/xray/TestCases/Posix/coverage-sample.cc	/^[[clang::xray_always_instrument]] int main(int argc, char *argv[]) {$/;"	f
main	test/xray/TestCases/Posix/custom-event-handler-alignment.cc	/^int main(int argc, char* argv[]) {$/;"	f
main	test/xray/TestCases/Posix/custom-event-logging.cc	/^int main() {$/;"	f
main	test/xray/TestCases/Posix/fdr-mode-inmemory.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/xray/TestCases/Posix/fdr-mode-multiple.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/xray/TestCases/Posix/fdr-mode.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/xray/TestCases/Posix/fdr-single-thread.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/xray/TestCases/Posix/fdr-thread-order.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	test/xray/TestCases/Posix/fixedsize-logging.cc	/^int main() {$/;"	f
main	test/xray/TestCases/Posix/fork_basic_logging.cc	/^int main()$/;"	f
main	test/xray/TestCases/Posix/func-id-utils.cc	/^[[clang::xray_always_instrument]] int main(int argc, char *argv[]) {$/;"	f
main	test/xray/TestCases/Posix/logging-modes.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/xray/TestCases/Posix/optional-inmemory-log.cc	/^int main() {$/;"	f
main	test/xray/TestCases/Posix/patching-unpatching.cc	/^int main() {$/;"	f
main	test/xray/TestCases/Posix/pic_test.cc	/^int main ()$/;"	f
main	test/xray/TestCases/Posix/profiling-multi-threaded.cc	/^[[clang::xray_always_instrument]] int main(int, char **) {$/;"	f
main	test/xray/TestCases/Posix/profiling-single-threaded.cc	/^[[clang::xray_always_instrument]] int main(int, char **) {$/;"	f
main	test/xray/TestCases/Posix/quiet-start.cc	/^int main(int, char**) {$/;"	f
main_thr	lib/tsan/go/tsan_go.cc	/^static ThreadState *main_thr;$/;"	m	namespace:__tsan	file:
main_thread_identity	lib/tsan/rtl/tsan_platform_mac.cc	/^static uptr main_thread_identity = 0;$/;"	m	namespace:__tsan	file:
main_thread_stack	test/asan/TestCases/Linux/swapcontext_annotation.cc	/^const void *main_thread_stack;$/;"	v
main_thread_stacksize	test/asan/TestCases/Linux/swapcontext_annotation.cc	/^size_t main_thread_stacksize;$/;"	v
main_thread_state	lib/tsan/rtl/tsan_platform_mac.cc	/^ALIGNED(64) static char main_thread_state[sizeof(ThreadState)];$/;"	m	namespace:__tsan	file:
main_threads_ready	lib/tsan/benchmarks/vts_many_threads_bench.cc	/^pthread_barrier_t all_threads_ready, main_threads_ready;$/;"	v
mainth	test/tsan/signal_errno.cc	/^pthread_t mainth;$/;"	v
makeCmdLine	lib/fuzzer/tests/FuzzerUnittest.cpp	/^static std::string makeCmdLine(const char *separator, const char *suffix) {$/;"	f	file:
makeCommandArgs	lib/fuzzer/tests/FuzzerUnittest.cpp	/^static void makeCommandArgs(Vector<std::string> *ArgsToAdd) {$/;"	f	file:
makeFinite	lib/builtins/ppc/divtc3.c	12;"	d	file:
makeFinite	lib/builtins/ppc/multc3.c	8;"	d	file:
makeInf128	test/builtins/Unit/fp_test.h	/^static inline long double makeInf128()$/;"	f
makeInf16	test/builtins/Unit/fp_test.h	/^static inline uint16_t makeInf16()$/;"	f
makeInf32	test/builtins/Unit/fp_test.h	/^static inline float makeInf32()$/;"	f
makeInf64	test/builtins/Unit/fp_test.h	/^static inline double makeInf64()$/;"	f
makeNaN128	test/builtins/Unit/fp_test.h	/^static inline long double makeNaN128(uint64_t rand)$/;"	f
makeNaN16	test/builtins/Unit/fp_test.h	/^static inline uint16_t makeNaN16(uint16_t rand)$/;"	f
makeNaN32	test/builtins/Unit/fp_test.h	/^static inline float makeNaN32(uint32_t rand)$/;"	f
makeNaN64	test/builtins/Unit/fp_test.h	/^static inline double makeNaN64(uint64_t rand)$/;"	f
makeQNaN128	test/builtins/Unit/fp_test.h	/^static inline long double makeQNaN128()$/;"	f
makeQNaN16	test/builtins/Unit/fp_test.h	/^static inline uint16_t makeQNaN16()$/;"	f
makeQNaN32	test/builtins/Unit/fp_test.h	/^static inline float makeQNaN32()$/;"	f
makeQNaN64	test/builtins/Unit/fp_test.h	/^static inline double makeQNaN64()$/;"	f
make_access	test/asan/TestCases/Windows/bitfield_uaf.cc	/^void make_access(S *s) {$/;"	f
make_invalid_call	test/ubsan/TestCases/TypeCheck/Function/function.cpp	/^void make_invalid_call() {$/;"	f
make_ti	lib/builtins/int_types.h	/^static __inline ti_int make_ti(di_int h, di_int l) {$/;"	f
make_tls_key	lib/lsan/lsan_common_mac.cc	/^static void make_tls_key() {$/;"	f	namespace:__lsan
make_tu	lib/builtins/int_types.h	/^static __inline tu_int make_tu(du_int h, du_int l) {$/;"	f
make_valid_call	test/ubsan/TestCases/TypeCheck/Function/function.cpp	/^void make_valid_call() {$/;"	f
mallinfo	lib/asan/asan_malloc_linux.cc	/^  fake_mallinfo (*mallinfo)(void);$/;"	m	struct:MallocDebugL	file:
mallinfo	lib/sanitizer_common/tests/sanitizer_allocator_testlib.cc	/^void mallinfo() {$/;"	f
malloc	lib/asan/asan_malloc_linux.cc	/^  void *(*malloc)(uptr bytes);$/;"	m	struct:MallocDebugK	file:
malloc	lib/asan/asan_malloc_linux.cc	/^  void *(*malloc)(uptr bytes);$/;"	m	struct:MallocDebugL	file:
malloc	lib/asan/asan_malloc_win.cc	/^void *malloc(size_t size) {$/;"	f
malloc	lib/sanitizer_common/tests/sanitizer_allocator_testlib.cc	/^void *malloc(size_t size) {$/;"	f
malloc	lib/scudo/scudo_malloc.cpp	/^INTERCEPTOR_ATTRIBUTE void *malloc(size_t size) {$/;"	f
malloc	test/asan/TestCases/Linux/interception_malloc_test.cc	/^extern "C" void *malloc(size_t size) {$/;"	f
malloc	test/tsan/Linux/user_malloc.cc	/^extern "C" void *malloc(unsigned long size) {$/;"	f
malloc_aaa	lib/asan/tests/asan_test.cc	/^NOINLINE void *malloc_aaa(size_t size) {$/;"	f
malloc_bbb	lib/asan/tests/asan_test.cc	/^NOINLINE void *malloc_bbb(size_t size) {$/;"	f
malloc_ccc	lib/asan/tests/asan_test.cc	/^NOINLINE void *malloc_ccc(size_t size) {$/;"	f
malloc_context_size	lib/asan/asan_activation.cc	/^  int malloc_context_size;$/;"	m	struct:__asan::AsanDeactivatedFlags	file:
malloc_context_size	lib/asan/asan_stack.cc	/^static atomic_uint32_t malloc_context_size;$/;"	m	namespace:__asan	file:
malloc_ddd	lib/asan/tests/asan_test.cc	/^NOINLINE void *malloc_ddd(size_t size) {$/;"	f
malloc_eee	lib/asan/tests/asan_test.cc	/^NOINLINE void *malloc_eee(size_t size) {$/;"	f
malloc_fff	lib/asan/tests/asan_test.cc	/^NOINLINE void *malloc_fff(size_t size) {$/;"	f
malloc_hook	lib/sanitizer_common/sanitizer_common.cc	/^  void (*malloc_hook)(const void *, uptr);$/;"	m	struct:__sanitizer::MallocFreeHook	file:
malloc_large	lib/asan/asan_stats.h	/^  uptr malloc_large;$/;"	m	struct:__asan::AsanStats
malloc_num_zones	lib/sanitizer_common/sanitizer_mac.cc	/^extern "C" unsigned malloc_num_zones;$/;"	m	namespace:__sanitizer	file:
malloc_storage	lib/asan/asan_thread.h	/^  AsanThreadLocalMallocStorage &malloc_storage() { return malloc_storage_; }$/;"	f	class:__asan::AsanThread
malloc_storage	lib/hwasan/hwasan_thread.h	/^  HwasanThreadLocalMallocStorage &malloc_storage() { return malloc_storage_; }$/;"	f	class:__hwasan::HwasanThread
malloc_storage	lib/msan/msan_thread.h	/^  MsanThreadLocalMallocStorage &malloc_storage() { return malloc_storage_; }$/;"	f	class:__msan::MsanThread
malloc_storage_	lib/asan/asan_thread.h	/^  AsanThreadLocalMallocStorage malloc_storage_;$/;"	m	class:__asan::AsanThread
malloc_storage_	lib/hwasan/hwasan_thread.h	/^  HwasanThreadLocalMallocStorage malloc_storage_;$/;"	m	class:__hwasan::HwasanThread
malloc_storage_	lib/msan/msan_thread.h	/^  MsanThreadLocalMallocStorage malloc_storage_;$/;"	m	class:__msan::MsanThread
malloc_usable_size	lib/asan/asan_malloc_linux.cc	/^  uptr (*malloc_usable_size)(void *mem);$/;"	m	struct:MallocDebugK	file:
malloc_usable_size	lib/asan/asan_malloc_linux.cc	/^  uptr (*malloc_usable_size)(void *mem);$/;"	m	struct:MallocDebugL	file:
malloc_usable_size	lib/sanitizer_common/tests/sanitizer_allocator_testlib.cc	/^void malloc_usable_size() {$/;"	f
malloc_usable_size	lib/scudo/scudo_malloc.cpp	/^INTERCEPTOR_ATTRIBUTE size_t malloc_usable_size(void *ptr) {$/;"	f
malloced	lib/asan/asan_stats.h	/^  uptr malloced;$/;"	m	struct:__asan::AsanStats
malloced_by_size	lib/asan/asan_stats.h	/^  uptr malloced_by_size[kNumberOfSizeClasses];$/;"	m	struct:__asan::AsanStats
malloced_redzones	lib/asan/asan_stats.h	/^  uptr malloced_redzones;$/;"	m	struct:__asan::AsanStats
mallocs	lib/asan/asan_stats.h	/^  uptr mallocs;$/;"	m	struct:__asan::AsanStats
mallopt	lib/sanitizer_common/tests/sanitizer_allocator_testlib.cc	/^void mallopt() {$/;"	f
mallopt	lib/scudo/scudo_malloc.cpp	/^INTERCEPTOR_ATTRIBUTE int mallopt(int cmd, int value) {$/;"	f
mallopt	lib/tsan/rtl/tsan_interceptors.cc	59;"	d	file:
mangle_filename	lib/profile/GCDAProfiling.c	/^static char *mangle_filename(const char *orig_filename) {$/;"	f	file:
mangled_sp	lib/tsan/rtl/tsan_rtl.h	/^  uptr mangled_sp;$/;"	m	struct:__tsan::JmpBuf
mant	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^       mant = abs(mantah):sat$/;"	d
mant	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define mant     R3$/;"	d
manta	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^        manta = insert(exp, #16, #0)$/;"	d
manta	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define manta      R0$/;"	d
manta	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^        manta = memd(r29+#0)$/;"	d
manta	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^#define manta      R1:0$/;"	d
manta	lib/builtins/hexagon/fastmath_dlib_asm.S	/^#define manta      R0$/;"	d
mantah	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define mantah     R1$/;"	d
mantah	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define mantah   R1$/;"	d
mantah	lib/builtins/hexagon/fastmath_dlib_asm.S	/^#define mantah     R1$/;"	d
mantal	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^        mantal = insert(c8001,#16, #0)$/;"	d
mantal	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^        mantal = insert(exp,#16, #0)$/;"	d
mantal	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define mantal     R0$/;"	d
mantal	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define mantal   R0$/;"	d
mantal	lib/builtins/hexagon/fastmath_dlib_asm.S	/^        mantal = lsr(mantal, #16)$/;"	d
mantal	lib/builtins/hexagon/fastmath_dlib_asm.S	/^#define mantal     R0$/;"	d
mantal_	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define mantal_    R12$/;"	d
mantb	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^       mantb = add(mant, rnd)$/;"	d
mantb	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^       mantb = lsr(mantb, #7)$/;"	d
mantb	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define mantb      R2$/;"	d
mantb	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define mantb    R2$/;"	d
mantb	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^        mantb = memd(r29+#16)$/;"	d
mantb	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^#define mantb      R3:2$/;"	d
mantb	lib/builtins/hexagon/fastmath_dlib_asm.S	/^#define mantb      R2$/;"	d
mantbh	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define mantbh     R3$/;"	d
mantbh	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^#define mantbh     R3$/;"	d
mantbh	lib/builtins/hexagon/fastmath_dlib_asm.S	/^#define mantbh     R3$/;"	d
mantbl	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define mantbl     R2$/;"	d
mantbl	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^#define mantbl     R2$/;"	d
mantbl	lib/builtins/hexagon/fastmath_dlib_asm.S	/^        mantbl = lsr(mantbl, #16)$/;"	d
mantbl	lib/builtins/hexagon/fastmath_dlib_asm.S	/^#define mantbl     R2$/;"	d
mantbl_	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define mantbl_    R13$/;"	d
mantbl_	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^#define mantbl_    R8$/;"	d
mantch	lib/builtins/hexagon/fastmath_dlib_asm.S	/^#define mantch     R11$/;"	d
mantcl	lib/builtins/hexagon/fastmath_dlib_asm.S	/^#define mantcl     R10$/;"	d
mantd	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^        mantd = add(mantd, lmantc)$/;"	d
mantd	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^        mantd = asl(mantd, kp)$/;"	d
mantd	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^        mantd = asr(mantd, #30)$/;"	d
mantd	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^        mantd = mpy(mantxh, mantbl_)$/;"	d
mantd	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^#define mantd      R7:6$/;"	d
mantdh	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define mantdh     R7$/;"	d
mantexpa	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^        mantexpa = #-1$/;"	d
mantexpa	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^        mantexpa = ASL(lmant, k)$/;"	d
mantexpa	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^        mantexpa = asl(mantexpd, kb)$/;"	d
mantexpa	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^        mantexpa = lsr(mantexpa, #1)$/;"	d
mantexpa	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^        mantexpa = minmin$/;"	d
mantexpa	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define mantexpa   R1:0$/;"	d
mantexpa	lib/builtins/hexagon/fastmath_dlib_asm.S	/^        mantexpa = ASL(lmant, k)$/;"	d
mantexpa	lib/builtins/hexagon/fastmath_dlib_asm.S	/^        mantexpa = asl(lmantc, k)$/;"	d
mantexpa	lib/builtins/hexagon/fastmath_dlib_asm.S	/^#define mantexpa   R1:0$/;"	d
mantexpb	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^        mantexpb = abs(mantexpd)$/;"	d
mantexpb	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define mantexpb   R3:2$/;"	d
mantexpb	lib/builtins/hexagon/fastmath_dlib_asm.S	/^#define mantexpb   R3:2$/;"	d
mantexpd	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^        mantexpd = VABSDIFFH(mantexpa, mantexpb) \/\/represented as 0x08001LL$/;"	d
mantexpd	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^        mantexpd = add(mantexpd, lmantc)$/;"	d
mantexpd	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^        mantexpd = asr(mantexpd, #15)$/;"	d
mantexpd	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^        mantexpd = mpy(mantah, mantbl_)$/;"	d
mantexpd	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define mantexpd   R7:6$/;"	d
mantexpd	lib/builtins/hexagon/fastmath_dlib_asm.S	/^        mantexpd = VABSDIFFH(mantexpa, mantexpb) \/\/represented as 0x08001LL$/;"	d
mantexpd	lib/builtins/hexagon/fastmath_dlib_asm.S	/^        mantexpd = mpy(mantah, mantbl)$/;"	d
mantexpd	lib/builtins/hexagon/fastmath_dlib_asm.S	/^#define mantexpd   R7:6$/;"	d
manth	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define manth      R1$/;"	d
manth	lib/builtins/hexagon/fastmath_dlib_asm.S	/^#define manth      R1$/;"	d
mantl	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define mantl      R0$/;"	d
mantl	lib/builtins/hexagon/fastmath_dlib_asm.S	/^#define mantl      R0$/;"	d
mantr	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^       mantr = asl(ia, #7)$/;"	d
mantr	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^       mantr = setbit(mantr, #30)$/;"	d
mantr	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define mantr R1$/;"	d
mantx	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^        mantx = #0$/;"	d
mantx	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^        mantx = memd(r29+#0)$/;"	d
mantx	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^#define mantx      R15:14$/;"	d
mantxh	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^#define mantxh     R15$/;"	d
mantxl	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^#define mantxl     R14$/;"	d
mantxl_	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^#define mantxl_    R9$/;"	d
map1_	lib/sanitizer_common/sanitizer_allocator_bytemap.h	/^  atomic_uintptr_t map1_[kSize1];$/;"	m	class:TwoLevelByteMap
map_	lib/sanitizer_common/sanitizer_addrhashmap.h	/^    AddrHashMap<T, kSize> *map_;$/;"	m	class:__sanitizer::AddrHashMap::Handle
map_	lib/sanitizer_common/sanitizer_allocator_bytemap.h	/^  u8 map_[kSize];$/;"	m	class:FlatByteMap
map_	lib/sanitizer_common/sanitizer_stackdepot.h	/^  InternalMmapVector<IdDescPair> map_;$/;"	m	class:__sanitizer::StackDepotReverseMap
map_	lib/tsan/rtl/tsan_dense_alloc.h	/^  T *map_[kL1Size];$/;"	m	class:__tsan::DenseSlabAlloc
map_beg	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^    uptr map_beg;$/;"	m	struct:LargeMmapAllocator::Header
map_count	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  static int map_count, unmap_count;$/;"	m	struct:TestMapUnmapCallback	file:
map_count	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^int TestMapUnmapCallback::map_count;$/;"	m	class:TestMapUnmapCallback	file:
map_file	lib/profile/GCDAProfiling.c	/^static int map_file() {$/;"	f	file:
map_fixed	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^int map_fixed = MAP_FIXED;$/;"	m	namespace:__sanitizer	file:
map_fixed	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^int map_fixed = MAP_FIXED;$/;"	m	namespace:__sanitizer	file:
map_fixed	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  int map_fixed = MAP_FIXED;$/;"	m	namespace:__sanitizer	file:
map_fixed	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  int map_fixed = MAP_FIXED;$/;"	m	namespace:__sanitizer	file:
map_size	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^    uptr map_size;$/;"	m	struct:LargeMmapAllocator::Header
mapping	lib/sanitizer_common/tests/sanitizer_stacktrace_test.cc	/^  void *mapping;$/;"	m	class:__sanitizer::FastUnwindTest	file:
mark	test/esan/TestCases/workingset-signal-posix.cpp	/^sigjmp_buf mark;$/;"	v
mask	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define mask     R6$/;"	d
mask	lib/sanitizer_common/sanitizer_bitvector.h	/^  basic_int_t mask(uptr idx) const {$/;"	f	class:__sanitizer::BasicBitVector
mask	test/msan/Linux/syscalls_sigaction.cc	/^  uint64_t mask[20]; \/\/ larger than any known platform$/;"	m	struct:my_kernel_sigaction	file:
max	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^        max = #0$/;"	d
max	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^#define max        R13:12$/;"	d
max	lib/sanitizer_common/tests/sanitizer_test_utils.h	22;"	d
max	lib/tsan/rtl/tsan_defs.h	/^T max(T a, T b) {$/;"	f	namespace:__tsan
max	lib/xray/xray_utils.h	/^template <class T> constexpr T &max(T &A, T &B) { return A > B ? A : B; }$/;"	f	namespace:__xray
maxExponent	lib/builtins/fp_lib.h	218;"	d
max_4	lib/builtins/arm/sync_fetch_and_max_4.S	/^#define max_4(rD, rN, rM)  MINMAX_4(rD, rN, rM, gt)$/;"	d
max_8	lib/builtins/arm/sync_fetch_and_max_8.S	/^#define max_8(rD_LO, rD_HI, rN_LO, rN_HI, rM_LO, rM_HI)         MINMAX_8(rD_LO, rD_HI, rN_LO, rN_HI, rM_LO, rM_HI, gt)$/;"	d
max_address	lib/sanitizer_common/sanitizer_mac.cc	/^  mach_vm_address_t max_address;$/;"	m	struct:__sanitizer::__sanitizer_task_vm_info	file:
max_alive_threads_	lib/sanitizer_common/sanitizer_thread_registry.h	/^  uptr max_alive_threads_;$/;"	m	class:__sanitizer::ThreadRegistry
max_allocated	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^    uptr n_allocs, n_frees, currently_allocated, max_allocated, by_size_log[64];$/;"	m	struct:LargeMmapAllocator::Stats
max_by_ptr	test/msan/select_origin.cc	/^int *max_by_ptr(int *a, int *b) {$/;"	f
max_cache_size_	lib/sanitizer_common/sanitizer_quarantine.h	/^  atomic_uintptr_t max_cache_size_;$/;"	m	class:__sanitizer::Quarantine
max_count	lib/sanitizer_common/sanitizer_allocator_local_cache.h	/^    u32 max_count;$/;"	m	struct:SizeClassAllocator64LocalCache::PerClass
max_count	lib/sanitizer_common/sanitizer_allocator_local_cache.h	/^    uptr max_count;$/;"	m	struct:SizeClassAllocator32LocalCache::PerClass
max_depth	lib/sanitizer_common/sanitizer_symbolizer_markup.cc	/^  u32 max_depth;$/;"	m	struct:__sanitizer::UnwindTraceArg	file:
max_depth	lib/sanitizer_common/sanitizer_unwind_linux_libcdep.cc	/^  u32 max_depth;$/;"	m	struct:__sanitizer::UnwindTraceArg	file:
max_executable_address	lib/sanitizer_common/sanitizer_common.h	/^  uptr max_executable_address() const { return max_executable_address_; }$/;"	f	class:__sanitizer::LoadedModule
max_executable_address_	lib/sanitizer_common/sanitizer_common.h	/^  uptr max_executable_address_;$/;"	m	class:__sanitizer::LoadedModule
max_malloced_memory	lib/asan/asan_stats.cc	/^static uptr max_malloced_memory;$/;"	m	namespace:__asan	file:
max_redzone	lib/asan/asan_allocator.cc	/^  atomic_uint16_t max_redzone;$/;"	m	struct:__asan::Allocator	file:
max_redzone	lib/asan/asan_allocator.h	/^  u16 max_redzone;$/;"	m	struct:__asan::AllocatorOptions
max_reuse_	lib/sanitizer_common/sanitizer_thread_registry.h	/^  const u32 max_reuse_;$/;"	m	class:__sanitizer::ThreadRegistry
max_size	lib/asan/asan_errors.h	/^  uptr max_size;$/;"	m	struct:__asan::ErrorAllocationSizeTooBig
max_size	lib/interception/interception_win.cc	/^  uptr max_size;$/;"	m	struct:__interception::TrampolineMemoryRegion	file:
max_size_	lib/sanitizer_common/sanitizer_quarantine.h	/^  atomic_uintptr_t max_size_;$/;"	m	class:__sanitizer::Quarantine
max_size_in_use	lib/asan/asan_stats.h	/^  uptr max_size_in_use;$/;"	m	struct:__asan::AsanMallocStats
max_threads_	lib/sanitizer_common/sanitizer_thread_registry.h	/^  const u32 max_threads_;$/;"	m	class:__sanitizer::ThreadRegistry
maxh	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^#define maxh       R13$/;"	d
maxneg	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^       maxneg = #0$/;"	d
maxneg	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define maxneg R5:4$/;"	d
maxneg	lib/builtins/hexagon/fastmath_dlib_asm.S	/^#define maxneg     R9$/;"	d
maxnegl	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define maxnegl R4$/;"	d
may_return_null	lib/asan/asan_allocator.h	/^  u8 may_return_null;$/;"	m	struct:__asan::AllocatorOptions
maybe_duplicate_stderr	lib/fuzzer/afl/afl_driver.cpp	/^static void maybe_duplicate_stderr() {$/;"	f	file:
maybe_initialize_extra_stats	lib/fuzzer/afl/afl_driver.cpp	/^static void maybe_initialize_extra_stats() {$/;"	f	file:
mbstate_t_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned mbstate_t_sz = sizeof(mbstate_t);$/;"	m	namespace:__sanitizer	file:
mbstate_t_sz	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^unsigned mbstate_t_sz = sizeof(mbstate_t);$/;"	m	namespace:__sanitizer	file:
mbstate_t_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned mbstate_t_sz = sizeof(mbstate_t);$/;"	m	namespace:__sanitizer	file:
mbstate_t_sz	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned mbstate_t_sz = sizeof(mbstate_t);$/;"	m	namespace:__sanitizer	file:
mc_cs	lib/sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_cs;$/;"	m	struct:__sanitizer::__xmcontext
mc_ds	lib/sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_ds;$/;"	m	struct:__sanitizer::__xmcontext
mc_eax	lib/sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_eax;$/;"	m	struct:__sanitizer::__xmcontext
mc_ebp	lib/sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_ebp;$/;"	m	struct:__sanitizer::__xmcontext
mc_ebx	lib/sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_ebx;$/;"	m	struct:__sanitizer::__xmcontext
mc_ecx	lib/sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_ecx;$/;"	m	struct:__sanitizer::__xmcontext
mc_edi	lib/sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_edi;$/;"	m	struct:__sanitizer::__xmcontext
mc_edx	lib/sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_edx;$/;"	m	struct:__sanitizer::__xmcontext
mc_eflags	lib/sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_eflags;$/;"	m	struct:__sanitizer::__xmcontext
mc_eip	lib/sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_eip;$/;"	m	struct:__sanitizer::__xmcontext
mc_err	lib/sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_err;$/;"	m	struct:__sanitizer::__xmcontext
mc_es	lib/sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_es;$/;"	m	struct:__sanitizer::__xmcontext
mc_esi	lib/sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_esi;$/;"	m	struct:__sanitizer::__xmcontext
mc_esp	lib/sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_esp;$/;"	m	struct:__sanitizer::__xmcontext
mc_flags	lib/sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_flags;$/;"	m	struct:__sanitizer::__xmcontext
mc_fpformat	lib/sanitizer_common/sanitizer_freebsd.h	/^  int mc_fpformat;$/;"	m	struct:__sanitizer::__xmcontext
mc_fs	lib/sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_fs;$/;"	m	struct:__sanitizer::__xmcontext
mc_fsbase	lib/sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_fsbase;$/;"	m	struct:__sanitizer::__xmcontext
mc_gs	lib/sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_gs;$/;"	m	struct:__sanitizer::__xmcontext
mc_gsbase	lib/sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_gsbase;$/;"	m	struct:__sanitizer::__xmcontext
mc_isp	lib/sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_isp;$/;"	m	struct:__sanitizer::__xmcontext
mc_len	lib/sanitizer_common/sanitizer_freebsd.h	/^  int mc_len;$/;"	m	struct:__sanitizer::__xmcontext
mc_onstack	lib/sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_onstack;$/;"	m	struct:__sanitizer::__xmcontext
mc_ownedfp	lib/sanitizer_common/sanitizer_freebsd.h	/^  int mc_ownedfp;$/;"	m	struct:__sanitizer::__xmcontext
mc_spare2	lib/sanitizer_common/sanitizer_freebsd.h	/^  int mc_spare2[4];$/;"	m	struct:__sanitizer::__xmcontext
mc_ss	lib/sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_ss;$/;"	m	struct:__sanitizer::__xmcontext
mc_trapno	lib/sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_trapno;$/;"	m	struct:__sanitizer::__xmcontext
mc_xfpustate	lib/sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_xfpustate;$/;"	m	struct:__sanitizer::__xmcontext
mc_xfpustate_len	lib/sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_xfpustate_len;$/;"	m	struct:__sanitizer::__xmcontext
md5_hash	lib/tsan/rtl/tsan_md5.cc	/^MD5Hash md5_hash(const void *data, uptr size) {$/;"	f	namespace:__tsan
me	test/asan/TestCases/pass-object-byval.cc	/^  A *me;$/;"	m	class:A	file:
medium_global	test/asan/TestCases/invalid-pointer-pairs-compare-errors.cc	/^char __attribute__((used)) medium_global[4000] = {};$/;"	v
mem	test/asan/TestCases/debug_stacks.cc	/^char *mem;$/;"	v
mem	test/tsan/debug_alloc_stack.cc	/^char *mem;$/;"	v
mem	test/tsan/free_race.c	/^int *mem;$/;"	v
mem	test/tsan/ignore_lib_lib.h	/^void *volatile mem;$/;"	v
mem_is_zero	lib/sanitizer_common/sanitizer_libc.cc	/^bool mem_is_zero(const char *beg, uptr size) {$/;"	f	namespace:__sanitizer
mem_to_shadow	test/msan/strlen_of_shadow.cc	/^const char *mem_to_shadow(const char *p) {$/;"	f
memalign	lib/asan/asan_malloc_linux.cc	/^  void *(*memalign)(uptr alignment, uptr bytes);$/;"	m	struct:MallocDebugK	file:
memalign	lib/asan/asan_malloc_linux.cc	/^  void *(*memalign)(uptr alignment, uptr bytes);$/;"	m	struct:MallocDebugL	file:
memalign	lib/sanitizer_common/tests/sanitizer_allocator_testlib.cc	/^void *memalign(size_t alignment, size_t size) {$/;"	f
memalign	lib/scudo/scudo_malloc.cpp	/^INTERCEPTOR_ATTRIBUTE void *memalign(size_t alignment, size_t size) {$/;"	f
memchr	lib/asan/asan_win_dll_thunk.cc	/^INTERCEPT_LIBRARY_FUNCTION(memchr);$/;"	v
memcmp	lib/asan/asan_win_dll_thunk.cc	/^INTERCEPT_LIBRARY_FUNCTION(memcmp);$/;"	v
memcpy	lib/asan/asan_win_dll_thunk.cc	/^INTERCEPT_LIBRARY_FUNCTION(memcpy);$/;"	v
memcpy_f	test/builtins/Unit/clear_cache_test.c	/^memcpy_f(void *dst, const void *src, size_t n) {$/;"	f
memcpy_f	test/builtins/Unit/enable_execute_stack_test.c	/^memcpy_f(void *dst, const void *src, size_t n) {$/;"	f
memcpy_t	test/asan/TestCases/memset_test.cc	/^typedef void *(*memcpy_t)(void *, const void *, size_t);$/;"	t	file:
memmem	test/fuzzer/StrstrTest.cpp	14;"	d	file:
memmove	lib/asan/asan_win_dll_thunk.cc	/^INTERCEPT_LIBRARY_FUNCTION(memmove);$/;"	v
memory_mapper	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^    MemoryMapperT* const memory_mapper;$/;"	m	class:SizeClassAllocator64::FreePagesRangeTracker
memory_mapper	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^    MemoryMapperT* const memory_mapper;$/;"	m	class:SizeClassAllocator64::PackedCounterArray
memory_order	lib/sanitizer_common/sanitizer_atomic.h	/^enum memory_order {$/;"	g	namespace:__sanitizer
memory_order_acq_rel	lib/sanitizer_common/sanitizer_atomic.h	/^  memory_order_acq_rel = 1 << 4,$/;"	e	enum:__sanitizer::memory_order
memory_order_acquire	lib/sanitizer_common/sanitizer_atomic.h	/^  memory_order_acquire = 1 << 2,$/;"	e	enum:__sanitizer::memory_order
memory_order_consume	lib/sanitizer_common/sanitizer_atomic.h	/^  memory_order_consume = 1 << 1,$/;"	e	enum:__sanitizer::memory_order
memory_order_relaxed	lib/sanitizer_common/sanitizer_atomic.h	/^  memory_order_relaxed = 1 << 0,$/;"	e	enum:__sanitizer::memory_order
memory_order_release	lib/sanitizer_common/sanitizer_atomic.h	/^  memory_order_release = 1 << 3,$/;"	e	enum:__sanitizer::memory_order
memory_order_seq_cst	lib/sanitizer_common/sanitizer_atomic.h	/^  memory_order_seq_cst = 1 << 5$/;"	e	enum:__sanitizer::memory_order
memset	lib/asan/asan_win_dll_thunk.cc	/^INTERCEPT_LIBRARY_FUNCTION(memset);$/;"	v
memset	lib/sanitizer_common/sanitizer_rtems.cc	19;"	d	file:
merge	lib/sanitizer_common/sanitizer_quarantine.h	/^  void merge(QuarantineBatch* const from) {$/;"	f	struct:__sanitizer::QuarantineBatch
mergeInto	lib/xray/xray_function_call_trie.h	/^  void mergeInto(FunctionCallTrie &O) const {$/;"	f	class:__xray::FunctionCallTrie
message	lib/ubsan_minimal/ubsan_minimal_handlers.cc	/^static void message(const char *msg) { ubsan_message(msg); }$/;"	f	file:
message	lib/ubsan_minimal/ubsan_minimal_handlers.cc	/^static void message(const char *msg) {$/;"	f	file:
metadata_	lib/hwasan/hwasan_allocator.h	/^  Metadata *const metadata_;$/;"	m	class:__hwasan::HwasanChunkView
metadata_	lib/lsan/lsan_common.h	/^  void *metadata_;$/;"	m	class:__lsan::LsanMetadata
metamap	lib/tsan/rtl/tsan_rtl.h	/^  MetaMap metamap;$/;"	m	struct:__tsan::Context
method	test/ubsan/TestCases/Misc/nonnull-arg.cpp	/^  int method(int *nonnull, int *null) __attribute__((nonnull(2))) {$/;"	f	class:C
millitm	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  unsigned short millitm;$/;"	m	struct:__sanitizer::__sanitizer_timeb
millitm	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned short millitm;$/;"	m	struct:__sanitizer::__sanitizer_timeb
millitm	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned short millitm;$/;"	m	struct:__sanitizer::__sanitizer_timeb
min	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^        min = #0$/;"	d
min	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define min        R15:14$/;"	d
min	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^        min = #0$/;"	d
min	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^#define min        R13:12$/;"	d
min	lib/sanitizer_common/tests/sanitizer_test_utils.h	23;"	d
min	lib/tsan/rtl/tsan_defs.h	/^T min(T a, T b) {$/;"	f	namespace:__tsan
min	lib/xray/xray_utils.h	/^template <class T> constexpr T &min(T &A, T &B) { return A <= B ? A : B; }$/;"	f	namespace:__xray
min_4	lib/builtins/arm/sync_fetch_and_min_4.S	/^#define min_4(rD, rN, rM) MINMAX_4(rD, rN, rM, lt)$/;"	d
min_8	lib/builtins/arm/sync_fetch_and_min_8.S	/^#define min_8(rD_LO, rD_HI, rN_LO, rN_HI, rM_LO, rM_HI)         MINMAX_8(rD_LO, rD_HI, rN_LO, rN_HI, rM_LO, rM_HI, lt)$/;"	d
min_address	lib/sanitizer_common/sanitizer_mac.cc	/^  mach_vm_address_t min_address;$/;"	m	struct:__sanitizer::__sanitizer_task_vm_info	file:
min_redzone	lib/asan/asan_allocator.cc	/^  atomic_uint16_t min_redzone;$/;"	m	struct:__asan::Allocator	file:
min_redzone	lib/asan/asan_allocator.h	/^  u16 min_redzone;$/;"	m	struct:__asan::AllocatorOptions
min_size_	lib/sanitizer_common/sanitizer_quarantine.h	/^  atomic_uintptr_t min_size_;$/;"	m	class:__sanitizer::Quarantine
minh	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define minh       R15$/;"	d
minh	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^#define minh       R13$/;"	d
minmin	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^        minmin = #0$/;"	d
minmin	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define minmin     R11:10  \/\/ exactly 0x000000000000008001LL$/;"	d
minmin	lib/builtins/hexagon/fastmath_dlib_asm.S	/^        minmin = #0$/;"	d
minmin	lib/builtins/hexagon/fastmath_dlib_asm.S	/^#define minmin     R11:10  \/\/ exactly 0x800000000000000000LL$/;"	d
minminh	lib/builtins/hexagon/fastmath_dlib_asm.S	/^#define minminh    R11$/;"	d
minminl	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define minminl    R10$/;"	d
minus	lib/builtins/hexagon/fastmath_dlib_asm.S	/^        minus = #-1$/;"	d
minus	lib/builtins/hexagon/fastmath_dlib_asm.S	/^#define minus      R3:2$/;"	d
minus1	lib/builtins/hexagon/fastmath_dlib_asm.S	/^        minus1 = #-1$/;"	d
minus1	lib/builtins/hexagon/fastmath_dlib_asm.S	/^#define minus1     R3:2$/;"	d
minus1l	lib/builtins/hexagon/fastmath_dlib_asm.S	/^#define minus1l    R2$/;"	d
minusl	lib/builtins/hexagon/fastmath_dlib_asm.S	/^#define minusl     R2$/;"	d
mkb	test/cfi/anon-namespace.cpp	/^A *mkb() {$/;"	f
mmap	lib/profile/WindowsMMap.c	/^void *mmap(void *start, size_t length, int prot, int flags, int fd, off_t offset)$/;"	f
mmap	lib/sanitizer_common/symbolizer/sanitizer_wrappers.cc	/^void *mmap(void *addr, size_t length, int prot, int flags, int fd,$/;"	f
mmap_and_ignore_reads_and_writes	test/tsan/ignored-interceptors-mmap.cc	/^int mmap_and_ignore_reads_and_writes() {$/;"	f
mmap_interceptor	lib/hwasan/hwasan_interceptors.cc	/^static void *mmap_interceptor(Mmap real_mmap, void *addr, SIZE_T sz, int prot,$/;"	f	file:
mmap_interceptor	lib/msan/msan_interceptors.cc	/^static void *mmap_interceptor(Mmap real_mmap, void *addr, SIZE_T length,$/;"	f	file:
mmap_interceptor	lib/tsan/rtl/tsan_interceptors.cc	/^static void *mmap_interceptor(ThreadState *thr, uptr pc, Mmap real_mmap,$/;"	f	file:
mmaped	lib/asan/asan_stats.h	/^  uptr mmaped;$/;"	m	struct:__asan::AsanStats
mmaped_size	lib/sanitizer_common/sanitizer_linux.h	/^  uptr mmaped_size;$/;"	m	struct:__sanitizer::ProcSelfMapsBuff
mmaps	lib/asan/asan_stats.h	/^  uptr mmaps;$/;"	m	struct:__asan::AsanStats
mmsghdr	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^CHECK_TYPE_SIZE(mmsghdr);$/;"	v
mnt_dir	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    char *mnt_dir;$/;"	m	struct:__sanitizer::__sanitizer_mntent
mnt_freq	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    int mnt_freq;$/;"	m	struct:__sanitizer::__sanitizer_mntent
mnt_fsname	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    char *mnt_fsname;$/;"	m	struct:__sanitizer::__sanitizer_mntent
mnt_opts	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    char *mnt_opts;$/;"	m	struct:__sanitizer::__sanitizer_mntent
mnt_passno	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    int mnt_passno;$/;"	m	struct:__sanitizer::__sanitizer_mntent
mnt_type	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    char *mnt_type;$/;"	m	struct:__sanitizer::__sanitizer_mntent
mntent	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^CHECK_TYPE_SIZE(mntent);$/;"	v
mo_acq_rel	lib/tsan/rtl/tsan_interface.h	/^  mo_acq_rel,$/;"	e	enum:__tsan::__anon21
mo_acquire	lib/tsan/rtl/tsan_interface.h	/^  mo_acquire,$/;"	e	enum:__tsan::__anon21
mo_consume	lib/tsan/rtl/tsan_interface.h	/^  mo_consume,$/;"	e	enum:__tsan::__anon21
mo_relaxed	lib/tsan/rtl/tsan_interface.h	/^  mo_relaxed,$/;"	e	enum:__tsan::__anon21
mo_release	lib/tsan/rtl/tsan_interface.h	/^  mo_release,$/;"	e	enum:__tsan::__anon21
mo_seq_cst	lib/tsan/rtl/tsan_interface.h	/^  mo_seq_cst$/;"	e	enum:__tsan::__anon21
mode	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u32 mode;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
mode	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  u32 mode;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
mode	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned int mode;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
mode	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned mode;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
mode	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned short mode;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
mode	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned int mode;          \/\/ mode_t$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
mode_t	lib/sanitizer_common/sanitizer_platform_limits_linux.cc	36;"	d	file:
mode_t	lib/sanitizer_common/sanitizer_platform_limits_linux.cc	45;"	d	file:
module	lib/sanitizer_common/sanitizer_symbolizer.h	/^  char *module;$/;"	m	struct:__sanitizer::AddressInfo
module	lib/sanitizer_common/sanitizer_symbolizer.h	/^  char *module;$/;"	m	struct:__sanitizer::DataInfo
module_arch	lib/sanitizer_common/sanitizer_symbolizer.h	/^  ModuleArch module_arch;$/;"	m	struct:__sanitizer::AddressInfo
module_arch	lib/sanitizer_common/sanitizer_symbolizer.h	/^  ModuleArch module_arch;$/;"	m	struct:__sanitizer::DataInfo
module_id	lib/stats/stats_client.cc	/^  unsigned module_id;$/;"	m	struct:__anon2::RegisterSanStats	file:
module_name	lib/asan/asan_interface_internal.h	/^    const char *module_name; \/\/ Module name as a C string. This pointer is a$/;"	m	struct:__asan_global
module_name	lib/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc	/^  const char *module_name() const { return module_name_; }$/;"	f	class:__sanitizer::Addr2LineProcess
module_name_	lib/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc	/^  const char *module_name_;  \/\/ Owned, leaked.$/;"	m	class:__sanitizer::Addr2LineProcess	file:
module_names_	lib/sanitizer_common/sanitizer_symbolizer.h	/^  } module_names_;$/;"	m	class:__sanitizer::final	typeref:class:__sanitizer::final::ModuleNameOwner
module_offset	lib/sanitizer_common/sanitizer_symbolizer.h	/^  uptr module_offset;$/;"	m	struct:__sanitizer::AddressInfo
module_offset	lib/sanitizer_common/sanitizer_symbolizer.h	/^  uptr module_offset;$/;"	m	struct:__sanitizer::DataInfo
modules	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^  InternalMmapVectorNoCtor<LoadedModule> *modules;$/;"	m	struct:__sanitizer::DlIteratePhdrData	file:
modules	lib/stats/stats.cc	/^InternalMmapVectorNoCtor<StatModule **> modules;$/;"	m	namespace:__anon3	file:
modules_	lib/sanitizer_common/sanitizer_common.h	/^  InternalMmapVectorNoCtor<LoadedModule> modules_;$/;"	m	class:__sanitizer::ListOfModules
modules_	lib/sanitizer_common/sanitizer_symbolizer.h	/^  ListOfModules modules_;$/;"	m	class:__sanitizer::final
modules_fresh_	lib/sanitizer_common/sanitizer_symbolizer.h	/^  bool modules_fresh_;$/;"	m	class:__sanitizer::final
modules_mutex	lib/stats/stats.cc	/^StaticSpinMutex modules_mutex;$/;"	m	namespace:__anon3	file:
monotonic_clock_ns	test/tsan/test.h	/^unsigned long long monotonic_clock_ns() {$/;"	f
mop_ignore_set	lib/tsan/rtl/tsan_rtl.h	/^  IgnoreSet mop_ignore_set;$/;"	m	struct:__tsan::ThreadState
mops	lib/tsan/rtl/tsan_report.h	/^  Vector<ReportMop*> mops;$/;"	m	class:__tsan::ReportDesc
morder	lib/tsan/rtl/tsan_interface.h	/^} morder;$/;"	t	namespace:__tsan	typeref:enum:__tsan::__anon21
more_fields	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  uptr more_fields[7];$/;"	m	struct:__sanitizer_obstack
mptr	test/ubsan/TestCases/Misc/nullability.c	/^  int *_Nonnull mptr;$/;"	m	struct:S1	file:
msan_aligned_alloc	lib/msan/msan_allocator.cc	/^void *msan_aligned_alloc(uptr alignment, uptr size, StackTrace *stack) {$/;"	f	namespace:__msan
msan_calloc	lib/msan/msan_allocator.cc	/^void *msan_calloc(uptr nmemb, uptr size, StackTrace *stack) {$/;"	f	namespace:__msan
msan_current_thread	lib/msan/msan_linux.cc	/^static THREADLOCAL MsanThread* msan_current_thread;$/;"	m	namespace:__msan	file:
msan_dl_iterate_phdr_cb	lib/msan/msan_interceptors.cc	/^static int msan_dl_iterate_phdr_cb(__sanitizer_dl_phdr_info *info, SIZE_T size,$/;"	f	file:
msan_expect_umr	lib/msan/msan.cc	/^static THREADLOCAL int msan_expect_umr = 0;$/;"	v	file:
msan_expected_umr_found	lib/msan/msan.cc	/^static THREADLOCAL int msan_expected_umr_found = 0;$/;"	v	file:
msan_flags	lib/msan/msan.cc	/^static Flags msan_flags;$/;"	m	namespace:__msan	file:
msan_init_is_running	lib/msan/msan.cc	/^bool msan_init_is_running;$/;"	m	namespace:__msan	file:
msan_inited	lib/msan/msan.cc	/^int msan_inited = 0;$/;"	m	namespace:__msan	file:
msan_malloc	lib/msan/msan_allocator.cc	/^void *msan_malloc(uptr size, StackTrace *stack) {$/;"	f	namespace:__msan
msan_memalign	lib/msan/msan_allocator.cc	/^void *msan_memalign(uptr alignment, uptr size, StackTrace *stack) {$/;"	f	namespace:__msan
msan_posix_memalign	lib/msan/msan_allocator.cc	/^int msan_posix_memalign(void **memptr, uptr alignment, uptr size,$/;"	f	namespace:__msan
msan_pvalloc	lib/msan/msan_allocator.cc	/^void *msan_pvalloc(uptr size, StackTrace *stack) {$/;"	f	namespace:__msan
msan_realloc	lib/msan/msan_allocator.cc	/^void *msan_realloc(void *ptr, uptr size, StackTrace *stack) {$/;"	f	namespace:__msan
msan_report_count	lib/msan/msan.cc	/^int msan_report_count = 0;$/;"	m	namespace:__msan	file:
msan_valloc	lib/msan/msan_allocator.cc	/^void *msan_valloc(uptr size, StackTrace *stack) {$/;"	f	namespace:__msan
mset	lib/tsan/rtl/tsan_report.h	/^  Vector<ReportMopMutex> mset;$/;"	m	struct:__tsan::ReportMop
mset	lib/tsan/rtl/tsan_rtl.h	/^  MutexSet mset;$/;"	m	struct:__tsan::ThreadState
mset0	lib/tsan/rtl/tsan_trace.h	/^  MutexSet   mset0;$/;"	m	struct:__tsan::TraceHeader
msg_control	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  void *msg_control;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_control	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  void *msg_control;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_control	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    void *msg_control;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_control	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  void *msg_control;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_controllen	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  unsigned msg_controllen;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_controllen	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  unsigned msg_controllen;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_controllen	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned msg_controllen;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_controllen	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    uptr msg_controllen;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_controllen	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned msg_controllen;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_flags	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int msg_flags;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_flags	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  int msg_flags;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_flags	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    int msg_flags;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_flags	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int msg_flags;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_hdr	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  struct __sanitizer_msghdr msg_hdr;$/;"	m	struct:__sanitizer::__sanitizer_mmsghdr	typeref:struct:__sanitizer::__sanitizer_mmsghdr::__sanitizer_msghdr
msg_hdr	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    __sanitizer_msghdr msg_hdr;$/;"	m	struct:__sanitizer::__sanitizer_mmsghdr
msg_iov	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  struct __sanitizer_iovec *msg_iov;$/;"	m	struct:__sanitizer::__sanitizer_msghdr	typeref:struct:__sanitizer::__sanitizer_msghdr::__sanitizer_iovec
msg_iov	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  struct __sanitizer_iovec *msg_iov;$/;"	m	struct:__sanitizer::__sanitizer_msghdr	typeref:struct:__sanitizer::__sanitizer_msghdr::__sanitizer_iovec
msg_iov	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    struct __sanitizer_iovec *msg_iov;$/;"	m	struct:__sanitizer::__sanitizer_msghdr	typeref:struct:__sanitizer::__sanitizer_msghdr::__sanitizer_iovec
msg_iov	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  struct __sanitizer_iovec *msg_iov;$/;"	m	struct:__sanitizer::__sanitizer_msghdr	typeref:struct:__sanitizer::__sanitizer_msghdr::__sanitizer_iovec
msg_iovlen	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  unsigned msg_iovlen;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_iovlen	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  unsigned msg_iovlen;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_iovlen	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned msg_iovlen;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_iovlen	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    uptr msg_iovlen;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_iovlen	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned msg_iovlen;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_len	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  unsigned int msg_len;$/;"	m	struct:__sanitizer::__sanitizer_mmsghdr
msg_len	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned int msg_len;$/;"	m	struct:__sanitizer::__sanitizer_mmsghdr
msg_name	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  void *msg_name;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_name	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  void *msg_name;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_name	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    void *msg_name;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_name	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  void *msg_name;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_namelen	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  unsigned msg_namelen;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_namelen	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  unsigned msg_namelen;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_namelen	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned msg_namelen;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_namelen	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned msg_namelen;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msghdr	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^CHECK_TYPE_SIZE(msghdr);$/;"	v
msghdr	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^CHECK_TYPE_SIZE(msghdr);$/;"	v
msghdr	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^CHECK_TYPE_SIZE(msghdr);$/;"	v
msghdr	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^CHECK_TYPE_SIZE(msghdr);$/;"	v
msync	lib/profile/WindowsMMap.c	/^int msync(void *addr, size_t length, int flags)$/;"	f
mtx	lib/sanitizer_common/sanitizer_addrhashmap.h	/^    RWMutex          mtx;$/;"	m	struct:__sanitizer::AddrHashMap::Bucket
mtx	lib/sanitizer_common/sanitizer_deadlock_detector1.cc	/^  SpinMutex mtx;$/;"	m	struct:__sanitizer::DD	file:
mtx	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^  SpinMutex mtx;$/;"	m	struct:__sanitizer::DD	file:
mtx	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^  StaticSpinMutex mtx;$/;"	m	struct:__sanitizer::Mutex	file:
mtx	lib/sanitizer_common/sanitizer_persistent_allocator.h	/^  StaticSpinMutex mtx;  \/\/ Protects alloc of new blocks for region allocator.$/;"	m	class:__sanitizer::PersistentAllocator
mtx	lib/tsan/rtl/tsan_interface_ann.cc	/^  Mutex mtx;$/;"	m	struct:__tsan::DynamicAnnContext	file:
mtx	lib/tsan/rtl/tsan_mman.cc	/^  Mutex mtx;$/;"	m	struct:__tsan::GlobalProc	file:
mtx	lib/tsan/rtl/tsan_sync.h	/^  Mutex mtx;$/;"	m	struct:__tsan::SyncVar
mtx	lib/tsan/rtl/tsan_trace.h	/^  Mutex mtx;$/;"	m	struct:__tsan::Trace
mtx	lib/tsan/tests/rtl/tsan_posix.cc	/^  pthread_mutex_t *mtx;$/;"	m	struct:thread_key	file:
mtx	test/tsan/bench_local_mutex.cc	/^pthread_mutex_t *mtx;$/;"	v
mtx	test/tsan/bench_mutex.cc	/^pthread_mutex_t mtx;$/;"	v
mtx	test/tsan/bench_rwmutex.cc	/^pthread_rwlock_t mtx;$/;"	v
mtx	test/tsan/bench_ten_mutexes.cc	/^pthread_mutex_t mtx[kMutex];$/;"	v
mtx	test/tsan/free_race.c	/^pthread_mutex_t mtx;$/;"	v
mtx	test/tsan/mutexset1.cc	/^pthread_mutex_t mtx;$/;"	v
mtx	test/tsan/mutexset2.cc	/^pthread_mutex_t mtx;$/;"	v
mtx	test/tsan/mutexset8.cc	/^pthread_mutex_t *mtx;$/;"	v
mtx	test/tsan/real_deadlock_detector_stress_test.cc	/^Mutex mtx[kMutexes];$/;"	v
mtx1	test/tsan/mutexset3.cc	/^pthread_mutex_t mtx1;$/;"	v
mtx1	test/tsan/mutexset4.cc	/^pthread_mutex_t mtx1;$/;"	v
mtx1	test/tsan/mutexset5.cc	/^pthread_mutex_t mtx1;$/;"	v
mtx1	test/tsan/mutexset6.cc	/^pthread_mutex_t mtx1;$/;"	v
mtx2	test/tsan/mutexset3.cc	/^pthread_mutex_t mtx2;$/;"	v
mtx2	test/tsan/mutexset4.cc	/^pthread_mutex_t mtx2;$/;"	v
mtx2	test/tsan/mutexset5.cc	/^pthread_mutex_t mtx2;$/;"	v
mtx2	test/tsan/mutexset6.cc	/^pthread_mutex_t mtx2;$/;"	v
mtx3	test/tsan/mutexset6.cc	/^pthread_rwlock_t mtx3;$/;"	v
mtx_	lib/sanitizer_common/sanitizer_thread_registry.h	/^  BlockingMutex mtx_;$/;"	m	class:__sanitizer::ThreadRegistry
mtx_	lib/sanitizer_common/tests/sanitizer_mutex_test.cc	/^  MutexType *mtx_;$/;"	m	class:__sanitizer::TestData	file:
mtx_	lib/tsan/rtl/tsan_dense_alloc.h	/^  SpinMutex mtx_;$/;"	m	class:__tsan::DenseSlabAlloc
mtx_	lib/tsan/tests/rtl/tsan_test_util.h	/^  void *mtx_[128];$/;"	m	class:Mutex
mtx_	lib/tsan/tests/unit/tsan_mutex_test.cc	/^  MutexType *mtx_;$/;"	m	class:__tsan::TestData	file:
mtx_ctx0	lib/sanitizer_common/sanitizer_deadlock_detector_interface.h	/^    u64 mtx_ctx0;  \/\/ user mutex context, start of the edge$/;"	m	struct:__sanitizer::DDReport::__anon81
mtx_ctx1	lib/sanitizer_common/sanitizer_deadlock_detector_interface.h	/^    u64 mtx_ctx1;  \/\/ user mutex context, end of the edge$/;"	m	struct:__sanitizer::DDReport::__anon81
mu	lib/msan/tests/msan_test.cc	/^  pthread_mutex_t* mu;$/;"	m	struct:__anon7::SignalCondArg	file:
mu	lib/sanitizer_common/sanitizer_file.h	/^  StaticSpinMutex *mu;$/;"	m	struct:__sanitizer::ReportFile
mu1	test/tsan/must_deadlock.cc	/^pthread_mutex_t mu1, mu2;$/;"	v
mu2	test/tsan/must_deadlock.cc	/^pthread_mutex_t mu1, mu2;$/;"	v
mu_	lib/sanitizer_common/sanitizer_allocator_bytemap.h	/^  StaticSpinMutex mu_;$/;"	m	class:TwoLevelByteMap
mu_	lib/sanitizer_common/sanitizer_allocator_stats.h	/^  mutable StaticSpinMutex mu_;$/;"	m	class:AllocatorGlobalStats
mu_	lib/sanitizer_common/sanitizer_mutex.h	/^  MutexType *mu_;$/;"	m	class:__sanitizer::GenericScopedLock
mu_	lib/sanitizer_common/sanitizer_mutex.h	/^  MutexType *mu_;$/;"	m	class:__sanitizer::GenericScopedReadLock
mu_	lib/sanitizer_common/sanitizer_symbolizer.h	/^    BlockingMutex *mu_;$/;"	m	class:__sanitizer::final::ModuleNameOwner
mu_	lib/sanitizer_common/sanitizer_symbolizer.h	/^  BlockingMutex mu_;$/;"	m	class:__sanitizer::final
mu_	test/tsan/deadlock_detector_stress_test.cc	/^  pthread_mutex_t mu_;$/;"	m	class:PthreadMutex	file:
mu_	test/tsan/deadlock_detector_stress_test.cc	/^  pthread_rwlock_t mu_;$/;"	m	class:PthreadRWLock	file:
mu_	test/tsan/deadlock_detector_stress_test.cc	/^  pthread_spinlock_t mu_;$/;"	m	class:PthreadSpinLock	file:
multiframe_unwind	test/tsan/exceptions.cc	/^__attribute__((noinline)) void multiframe_unwind() {$/;"	f
multiply_in_separate_translation_unit	test/dfsan/label_count.c	/^int multiply_in_separate_translation_unit(int a, int b) {$/;"	f
munmap	lib/profile/WindowsMMap.c	/^void munmap(void *addr, size_t length)$/;"	f
munmaped	lib/asan/asan_stats.h	/^  uptr munmaped;$/;"	m	struct:__asan::AsanStats
munmaps	lib/asan/asan_stats.h	/^  uptr munmaps;$/;"	m	struct:__asan::AsanStats
mutex	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^  Mutex* mutex[kL1Size];$/;"	m	struct:__sanitizer::DD	file:
mutex	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^  BlockingMutex mutex;$/;"	m	struct:__sanitizer::TracerThreadArgument	file:
mutex	test/lsan/TestCases/Linux/guard-page.c	/^pthread_mutex_t mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v
mutex	test/lsan/TestCases/high_allocator_contention.cc	/^pthread_mutex_t mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v
mutex	test/lsan/TestCases/leak_check_before_thread_started.cc	/^pthread_mutex_t mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v
mutex	test/lsan/TestCases/many_tls_keys.cc	/^pthread_mutex_t mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v
mutex	test/scudo/threads.c	/^pthread_mutex_t mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v
mutex	test/tsan/signal_cond.cc	/^pthread_mutex_t mutex;$/;"	v
mutex128	lib/tsan/rtl/tsan_interface_atomic.cc	/^static StaticSpinMutex mutex128;$/;"	v	file:
mutex_	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^  StaticSpinMutex mutex_;$/;"	m	class:LargeMmapAllocator
mutex_	lib/sanitizer_common/sanitizer_libignore.h	/^  BlockingMutex mutex_;$/;"	m	class:__sanitizer::LibIgnore
mutex_map	lib/tsan/dd/dd_rtl.h	/^  MutexHashMap mutex_map;$/;"	m	struct:__dsan::Context
mutexes	lib/tsan/benchmarks/vts_many_threads_bench.cc	/^Mutex mutexes[kNumMutexes];$/;"	v
mutexes	lib/tsan/rtl/tsan_report.h	/^  Vector<ReportMutex*> mutexes;$/;"	m	class:__tsan::ReportDesc
my_access	test/msan/dso-origin.cc	/^void my_access(int *p) {$/;"	f
my_alloc	test/msan/dso-origin.cc	/^void *my_alloc(unsigned sz) {$/;"	f
my_cleanup	test/tsan/cond_cancel.c	/^static void my_cleanup(void *arg) {$/;"	f	file:
my_compar	test/msan/scandir.cc	/^static int my_compar(const struct dirent **a, const struct dirent **b) {$/;"	f	file:
my_filter	test/msan/scandir.cc	/^static int my_filter(const struct dirent *a) {$/;"	f	file:
my_function	test/asan/TestCases/Darwin/dladdr-demangling.cc	/^  int my_function(int n) {$/;"	f	class:MyClass
my_gl_closedir	test/msan/Linux/glob_altdirfunc.cc	/^static void my_gl_closedir(void *dir) {$/;"	f	file:
my_gl_lstat	test/msan/Linux/glob_altdirfunc.cc	/^static int my_gl_lstat(const char *s, struct stat *st) {$/;"	f	file:
my_gl_opendir	test/msan/Linux/glob_altdirfunc.cc	/^static void *my_gl_opendir(const char *s) {$/;"	f	file:
my_gl_readdir	test/msan/Linux/glob_altdirfunc.cc	/^static struct dirent *my_gl_readdir(void *dir) {$/;"	f	file:
my_gl_stat	test/msan/Linux/glob_altdirfunc.cc	/^static int my_gl_stat(const char *s, struct stat *st) {$/;"	f	file:
my_global	test/asan/TestCases/Darwin/odr-lto.cc	/^static const char *my_global = "test\\n\\00abc";$/;"	v	file:
my_global	test/msan/dlopen_executable.cc	/^static int my_global;$/;"	v	file:
my_global	test/tsan/debugging.cc	/^long my_global;$/;"	v
my_kernel_sigaction	test/msan/Linux/syscalls_sigaction.cc	/^struct my_kernel_sigaction {$/;"	s	file:
my_make_pair	test/msan/insertvalue_origin.cc	/^mypair my_make_pair(int64_t x, int y)  {$/;"	f
my_memalign	test/asan/TestCases/Posix/large_allocator_unpoisons_on_free.cc	/^void *my_memalign(size_t boundary, size_t size) {$/;"	f
my_memset	test/asan/TestCases/Posix/interception-in-shared-lib-test.cc	/^void my_memset(void *p, size_t sz) {$/;"	f
my_other_global	test/asan/TestCases/Darwin/odr-lto.cc	/^static const char *my_other_global = "test\\n\\00abc";$/;"	v	file:
my_pthread_attr_getstack	lib/sanitizer_common/sanitizer_posix_libcdep.cc	/^int my_pthread_attr_getstack(void *attr, void **addr, uptr *size) {$/;"	f	namespace:__sanitizer
my_pthread_introspection_hook	lib/tsan/rtl/tsan_platform_mac.cc	/^static void my_pthread_introspection_hook(unsigned int event, pthread_t thread,$/;"	f	namespace:__tsan
my_rand	lib/sanitizer_common/tests/sanitizer_test_utils.h	/^static inline uint32_t my_rand() {$/;"	f
my_rand_r	lib/sanitizer_common/tests/sanitizer_test_utils.h	/^static inline uint32_t my_rand_r(uint32_t* state) {$/;"	f
my_sem_init	test/sanitizer_common/TestCases/Linux/sem_init_glibc.cc	/^void my_sem_init(bool priv, int value, semval_t *a, unsigned char *b) {$/;"	f
my_sigaction_sighandler	lib/asan/tests/asan_test.cc	/^void my_sigaction_sighandler(int, siginfo_t*, void*) {$/;"	f	namespace:__anon39
my_signal_sighandler	lib/asan/tests/asan_test.cc	/^void my_signal_sighandler(int signum) {$/;"	f	namespace:__anon39
my_thread	test/tsan/signal_cond.cc	/^void* my_thread(void* arg) {$/;"	f
my_thread_callback	test/asan/TestCases/Windows/tls_init.cc	/^my_thread_callback(PVOID module, DWORD reason, PVOID reserved) {$/;"	f	file:
my_tls	test/asan/TestCases/Linux/stress_dtls.c	/^__thread int my_tls;$/;"	v
myfreenode	test/msan/tsearch.cc	/^void myfreenode(void *p) {$/;"	f
myfunc	test/tsan/ignore_lib4.cc	/^extern "C" void myfunc() {$/;"	f
mymain	test/tsan/longjmp3.cc	/^void mymain() {$/;"	f
mymain	test/tsan/longjmp4.cc	/^void mymain() {$/;"	f
mypair	test/msan/insertvalue_origin.cc	/^struct mypair {$/;"	s	file:
myprinter	test/xray/TestCases/Posix/custom-event-logging.cc	/^void myprinter(void* ptr, size_t size) {$/;"	f
n	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^    const u64 n;$/;"	m	class:SizeClassAllocator64::PackedCounterArray
n	lib/sanitizer_common/sanitizer_deadlock_detector_interface.h	/^  int n;  \/\/ number of entries in loop$/;"	m	struct:__sanitizer::DDReport
n	test/builtins/Unit/arm/call_apsr.h	/^        uint32_t n: 1;$/;"	m	struct:cpsr::__anon152
n	test/esan/TestCases/struct-simple.cpp	/^  double n;$/;"	m	struct:B	file:
n	test/profile/Linux/instrprof-value-merge.c	/^volatile int n;$/;"	v
n	test/tsan/atexit2.cc	/^int n;$/;"	v
n	test/ubsan/TestCases/TypeCheck/vptr-virtual-base-construction.cpp	/^int volatile n;$/;"	v
n_	test/tsan/deadlock_detector_stress_test.cc	/^  size_t n_;$/;"	m	class:LockTest	file:
n_addrtype	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int n_addrtype;$/;"	m	struct:__sanitizer::__sanitizer_netent
n_aliases	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char **n_aliases;$/;"	m	struct:__sanitizer::__sanitizer_netent
n_all_locks_	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  uptr n_all_locks_;$/;"	m	class:__sanitizer::DeadlockDetectorTLS
n_allocated	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^    uptr n_allocated;$/;"	m	struct:SizeClassAllocator64::Stats
n_allocs	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^    uptr n_allocs, n_frees, currently_allocated, max_allocated, by_size_log[64];$/;"	m	struct:LargeMmapAllocator::Stats
n_chunks_	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^  uptr n_chunks_;$/;"	m	class:LargeMmapAllocator
n_contexts_	lib/sanitizer_common/sanitizer_thread_registry.h	/^  u32 n_contexts_;      \/\/ Number of created thread contexts,$/;"	m	class:__sanitizer::ThreadRegistry
n_edges_	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  uptr n_edges_;$/;"	m	class:__sanitizer::DeadlockDetector
n_flags_	lib/sanitizer_common/sanitizer_flag_parser.h	/^  int n_flags_;$/;"	m	class:__sanitizer::FlagParser
n_freed	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^    uptr n_freed;$/;"	m	struct:SizeClassAllocator64::Stats
n_freed_at_last_release	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^    uptr n_freed_at_last_release;$/;"	m	struct:SizeClassAllocator64::ReleaseToOsInfo
n_frees	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^    uptr n_allocs, n_frees, currently_allocated, max_allocated, by_size_log[64];$/;"	m	struct:LargeMmapAllocator::Stats
n_iterations	lib/tsan/benchmarks/vts_many_threads_bench.cc	/^int n_threads, n_iterations;$/;"	v
n_name	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char *n_name;$/;"	m	struct:__sanitizer::__sanitizer_netent
n_net	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u32 n_net;$/;"	m	struct:__sanitizer::__sanitizer_netent
n_recursive_locks	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  uptr n_recursive_locks;$/;"	m	class:__sanitizer::DeadlockDetectorTLS
n_reserved_	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^  uptr n_reserved_;$/;"	m	class:LargeMmapAllocatorPtrArrayDynamic
n_signals	test/asan/TestCases/Linux/uar_signals.cc	/^int n_signals;$/;"	v
n_threads	lib/tsan/benchmarks/vts_many_threads_bench.cc	/^int n_threads, n_iterations;$/;"	v
n_uniq_ids	lib/sanitizer_common/sanitizer_common.h	/^  uptr n_uniq_ids;$/;"	m	struct:__sanitizer::StackDepotStats
n_unknown_flags_	lib/sanitizer_common/sanitizer_flag_parser.cc	/^  int n_unknown_flags_;$/;"	m	class:__sanitizer::UnknownFlags	file:
naive_parity	test/builtins/Unit/paritydi2_test.c	/^int naive_parity(di_int a)$/;"	f
naive_parity	test/builtins/Unit/paritysi2_test.c	/^int naive_parity(si_int a)$/;"	f
naive_parity	test/builtins/Unit/parityti2_test.c	/^int naive_parity(ti_int a)$/;"	f
naive_popcount	test/builtins/Unit/popcountdi2_test.c	/^int naive_popcount(di_int a)$/;"	f
naive_popcount	test/builtins/Unit/popcountsi2_test.c	/^int naive_popcount(si_int a)$/;"	f
naive_popcount	test/builtins/Unit/popcountti2_test.c	/^int naive_popcount(ti_int a)$/;"	f
name	lib/asan/asan_descriptions.h	/^  char name[128];$/;"	m	class:__asan::AsanThreadIdAndName
name	lib/asan/asan_interface_internal.h	/^    const char *name;        \/\/ Name as a C string.$/;"	m	struct:__asan_global
name	lib/msan/msan.h	/^  const char *name;$/;"	m	struct:MappingDesc
name	lib/sanitizer_common/sanitizer_common.h	/^    char name[kMaxSegName];$/;"	m	struct:__sanitizer::LoadedModule::AddressRange
name	lib/sanitizer_common/sanitizer_flag_parser.h	/^    const char *name;$/;"	m	struct:__sanitizer::FlagParser::Flag
name	lib/sanitizer_common/sanitizer_libignore.h	/^    char *name;$/;"	m	struct:__sanitizer::LibIgnore::Lib
name	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  int *name;$/;"	m	struct:__sanitizer::__sanitizer___sysctl_args
name	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    int *name;$/;"	m	struct:__sanitizer::__sanitizer___sysctl_args
name	lib/sanitizer_common/sanitizer_procmaps_mac.cc	/^  char name[kMaxSegName];$/;"	m	struct:__sanitizer::MemoryMappedSegmentData	file:
name	lib/sanitizer_common/sanitizer_symbolizer.h	/^  char *name;$/;"	m	struct:__sanitizer::DataInfo
name	lib/sanitizer_common/sanitizer_thread_registry.h	/^  char name[64];  \/\/ As annotated by user.$/;"	m	class:__sanitizer::ThreadContextBase
name	lib/sanitizer_common/sanitizer_win.cc	/^  char name[kMaxEnvNameLength];$/;"	m	struct:__sanitizer::__anon75::EnvVariable	file:
name	lib/tsan/go/tsan_go.cc	/^  char *name;$/;"	m	struct:__tsan::SymbolizeDataContext	file:
name	lib/tsan/rtl/tsan_report.h	/^  char *name;$/;"	m	struct:__tsan::ReportThread
name_	lib/sanitizer_common/sanitizer_common.h	/^  const char* name_;$/;"	m	class:__sanitizer::ReservedAddressRange
name_	lib/tsan/rtl/tsan_dense_alloc.h	/^  const char *name_;$/;"	m	class:__tsan::DenseSlabAlloc
name_len	lib/asan/asan_report.h	/^  uptr name_len;$/;"	m	struct:__asan::StackVarDescr
name_pos	lib/asan/asan_report.h	/^  const char *name_pos;$/;"	m	struct:__asan::StackVarDescr
nand_4	lib/builtins/arm/sync_fetch_and_nand_4.S	/^#define nand_4(rD, rN, rM)  bic rD, rN, rM$/;"	d
nand_8	lib/builtins/arm/sync_fetch_and_nand_8.S	/^#define nand_8(rD_LO, rD_HI, rN_LO, rN_HI, rM_LO, rM_HI) \\$/;"	d
neReference	test/builtins/Unit/comparedf2_test.c	/^    int neReference;$/;"	m	struct:TestVector	file:
neReference	test/builtins/Unit/comparesf2_test.c	/^    int neReference;$/;"	m	struct:TestVector	file:
nearest_boundary	lib/xray/xray_utils.h	/^constexpr size_t nearest_boundary(size_t number, size_t multiple) {$/;"	f	namespace:__xray
needs_gc_	lib/asan/asan_fake_stack.h	/^  bool needs_gc_;$/;"	m	class:__asan::FakeStack
nested_func_t	test/builtins/Unit/trampoline_setup_test.c	/^typedef int (*nested_func_t)(int x);$/;"	t	file:
nested_try	test/tsan/exceptions.cc	/^__attribute__((noinline)) void nested_try() {$/;"	f
nested_try2	test/tsan/exceptions.cc	/^__attribute__((noinline)) void nested_try2() {$/;"	f
newNode	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  uptr newNode(uptr data) {$/;"	f	class:__sanitizer::DeadlockDetector
new_delete	lib/sanitizer_common/scripts/gen_dynamic_list.py	/^new_delete = set([$/;"	v
new_file	lib/profile/GCDAProfiling.c	/^static int new_file = 0;$/;"	v	file:
new_mid	lib/asan/asan_errors.h	/^  uptr beg, end, old_mid, new_mid;$/;"	m	struct:__asan::ErrorBadParamsToAnnotateContiguousContainer
newlen	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  uptr newlen;$/;"	m	struct:__sanitizer::__sanitizer___sysctl_args
newlen	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    uptr newlen;$/;"	m	struct:__sanitizer::__sanitizer___sysctl_args
newval	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  void *newval;$/;"	m	struct:__sanitizer::__sanitizer___sysctl_args
newval	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    void *newval;$/;"	m	struct:__sanitizer::__sanitizer___sysctl_args
next	lib/asan/asan_globals.cc	/^  ListOfGlobals *next;$/;"	m	struct:__asan::ListOfGlobals	file:
next	lib/profile/GCDAProfiling.c	/^  struct fn_node* next;$/;"	m	struct:fn_node	typeref:struct:fn_node::fn_node	file:
next	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^    TransferBatch *next;$/;"	m	struct:SizeClassAllocator32::TransferBatch
next	lib/sanitizer_common/sanitizer_bitvector.h	/^    uptr next() { return bv_.getAndClearFirstOne(); }$/;"	f	class:__sanitizer::BasicBitVector::Iterator
next	lib/sanitizer_common/sanitizer_bitvector.h	/^    uptr next() {$/;"	f	class:__sanitizer::TwoLevelBitVector::Iterator
next	lib/sanitizer_common/sanitizer_common.h	/^    AddressRange *next;$/;"	m	struct:__sanitizer::LoadedModule::AddressRange
next	lib/sanitizer_common/sanitizer_quarantine.h	/^  QuarantineBatch *next;$/;"	m	struct:__sanitizer::QuarantineBatch
next	lib/sanitizer_common/sanitizer_symbolizer.h	/^  SymbolizedStack *next;$/;"	m	struct:__sanitizer::SymbolizedStack
next	lib/sanitizer_common/sanitizer_symbolizer_internal.h	/^  SymbolizerTool *next;$/;"	m	class:__sanitizer::SymbolizerTool
next	lib/sanitizer_common/sanitizer_thread_registry.h	/^  ThreadContextBase *next;  \/\/ For storing thread contexts in a list.$/;"	m	class:__sanitizer::ThreadContextBase
next	lib/sanitizer_common/tests/sanitizer_list_test.cc	/^  ListItem *next;$/;"	m	struct:__sanitizer::ListItem	file:
next	lib/stats/stats.h	/^  StatModule *next;$/;"	m	struct:__sanitizer::StatModule
next	lib/tsan/rtl/tsan_interface_ann.cc	/^  ExpectRace *next;$/;"	m	struct:__tsan::ExpectRace	file:
next	lib/tsan/rtl/tsan_sync.h	/^  u32 next;  \/\/ in MetaMap$/;"	m	struct:__tsan::SyncVar
nextBuffer	lib/xray/xray_profile_collector.cc	/^XRayBuffer nextBuffer(XRayBuffer B) {$/;"	f	namespace:__xray::profileCollectorService
next_	lib/sanitizer_common/sanitizer_allocator_stats.h	/^  AllocatorStats *next_;$/;"	m	class:AllocatorStats
next_buffer	test/xray/TestCases/Posix/logging-modes.cc	/^[[clang::xray_never_instrument]] XRayBuffer next_buffer(XRayBuffer buffer) {$/;"	f
next_child_context	test/asan/TestCases/Linux/swapcontext_annotation.cc	/^ucontext_t next_child_context;$/;"	v
next_child_stack	test/asan/TestCases/Linux/swapcontext_annotation.cc	/^char *next_child_stack;$/;"	v
next_free	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  char *next_free;$/;"	m	struct:__sanitizer_obstack
next_id_	lib/lsan/lsan_common.h	/^  u32 next_id_ = 0;$/;"	m	class:__lsan::LeakReport
next_id_	lib/msan/msan_report.cc	/^  int next_id_;$/;"	m	class:__msan::OriginSet	file:
next_index_	lib/sanitizer_common/sanitizer_coverage_fuchsia.cc	/^  u32 next_index_ = 0;$/;"	m	class:__sancov::__anon63::final	file:
next_pow2	lib/xray/xray_utils.h	/^constexpr size_t next_pow2(size_t number) {$/;"	f	namespace:__xray
next_pow2_helper	lib/xray/xray_utils.h	/^constexpr size_t next_pow2_helper(size_t num, size_t acc) {$/;"	f	namespace:__xray
next_stack_bottom_	lib/asan/asan_thread.h	/^  uptr next_stack_bottom_;$/;"	m	class:__asan::AsanThread
next_stack_top_	lib/asan/asan_thread.h	/^  uptr next_stack_top_;$/;"	m	class:__asan::AsanThread
nfds_t	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^CHECK_TYPE_SIZE(nfds_t);$/;"	v
nfds_t	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^CHECK_TYPE_SIZE(nfds_t);$/;"	v
nfds_t	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^CHECK_TYPE_SIZE(nfds_t);$/;"	v
nfds_t	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^CHECK_TYPE_SIZE(nfds_t);$/;"	v
nil	test/fuzzer/DSOTestMain.cpp	/^static volatile int *nil = 0;$/;"	v	file:
niter	test/asan/TestCases/Posix/halt_on_error-signals.c	/^size_t niter = 10;$/;"	v
niter	test/asan/TestCases/Posix/halt_on_error-torture.cc	/^size_t niter = 10;$/;"	v
nlen	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  int nlen;$/;"	m	struct:__sanitizer::__sanitizer___sysctl_args
nlen	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    int nlen;$/;"	m	struct:__sanitizer::__sanitizer___sysctl_args
nlink	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^  int nlink;$/;"	m	struct:__sanitizer::Mutex	file:
nlink_t	lib/sanitizer_common/sanitizer_platform_limits_linux.cc	37;"	d	file:
nlink_t	lib/sanitizer_common/sanitizer_platform_limits_linux.cc	46;"	d	file:
nlocked	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^  int         nlocked;$/;"	m	struct:__sanitizer::DDLogicalThread	file:
nmissed_expected	lib/tsan/rtl/tsan_rtl.h	/^  int nmissed_expected;$/;"	m	struct:__tsan::Context
no_alignment	test/xray/TestCases/Posix/common-trampoline-alignment.cc	/^void no_alignment() {}$/;"	f
noarg	test/xray/TestCases/Posix/common-trampoline-alignment.cc	/^[[clang::xray_always_instrument]] __attribute__((noinline)) void noarg() {$/;"	f
noarg_handler	test/xray/TestCases/Posix/common-trampoline-alignment.cc	/^[[clang::xray_never_instrument]] void noarg_handler(int32_t,$/;"	f
nodeBelongsToCurrentEpoch	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  bool nodeBelongsToCurrentEpoch(uptr node) {$/;"	f	class:__sanitizer::DeadlockDetector
nodeToEpoch	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  uptr nodeToEpoch(uptr node) const { return node \/ size() * size(); }$/;"	f	class:__sanitizer::DeadlockDetector
nodeToIndex	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  uptr nodeToIndex(uptr node) const {$/;"	f	class:__sanitizer::DeadlockDetector
nodeToIndexUnchecked	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  uptr nodeToIndexUnchecked(uptr node) const { return node % size(); }$/;"	f	class:__sanitizer::DeadlockDetector
node_	lib/msan/msan_chained_origin_depot.cc	/^    ChainedOriginDepotNode *node_;$/;"	m	struct:__msan::ChainedOriginDepotNode::Handle	file:
node_	lib/sanitizer_common/sanitizer_stackdepot.h	/^  StackDepotNode *node_;$/;"	m	struct:__sanitizer::StackDepotHandle
noerror	test/profile/runtime_infinite.c	/^int noerror() { return (errorcode == 0); }$/;"	f
noexcept	lib/xray/xray_segmented_array.h	/^    Iterator() noexcept = default;$/;"	m	class:__xray::Array::Iterator
noexcept	lib/xray/xray_segmented_array.h	/^    Iterator(Iterator &&) noexcept = default;$/;"	m	class:__xray::Array::Iterator
noexcept	lib/xray/xray_segmented_array.h	/^    Iterator(const Iterator &) noexcept = default;$/;"	m	class:__xray::Array::Iterator
noinstr	lib/tsan/tests/rtl/tsan_bench.cc	/^void noinstr(void *p) {}$/;"	f
nomalloc	lib/tsan/rtl/tsan_rtl.h	/^  int nomalloc;$/;"	m	struct:__tsan::ThreadState
non_queue_sync_object	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^  uptr non_queue_sync_object;$/;"	m	struct:__tsan::__anon19	file:
non_zero	test/builtins/Unit/divdc3_test.c	/^enum {zero, non_zero, inf, NaN, non_zero_nan};$/;"	e	enum:__anon149	file:
non_zero	test/builtins/Unit/divsc3_test.c	/^enum {zero, non_zero, inf, NaN, non_zero_nan};$/;"	e	enum:__anon151	file:
non_zero	test/builtins/Unit/divtc3_test.c	/^enum {zero, non_zero, inf, NaN, non_zero_nan};$/;"	e	enum:__anon148	file:
non_zero	test/builtins/Unit/divxc3_test.c	/^enum {zero, non_zero, inf, NaN, non_zero_nan};$/;"	e	enum:__anon155	file:
non_zero	test/builtins/Unit/muldc3_test.c	/^enum {zero, non_zero, inf, NaN, non_zero_nan};$/;"	e	enum:__anon147	file:
non_zero	test/builtins/Unit/mulsc3_test.c	/^enum {zero, non_zero, inf, NaN, non_zero_nan};$/;"	e	enum:__anon157	file:
non_zero	test/builtins/Unit/multc3_test.c	/^enum {zero, non_zero, inf, NaN, non_zero_nan};$/;"	e	enum:__anon150	file:
non_zero	test/builtins/Unit/mulxc3_test.c	/^enum {zero, non_zero, inf, NaN, non_zero_nan};$/;"	e	enum:__anon156	file:
non_zero_nan	test/builtins/Unit/divdc3_test.c	/^enum {zero, non_zero, inf, NaN, non_zero_nan};$/;"	e	enum:__anon149	file:
non_zero_nan	test/builtins/Unit/divsc3_test.c	/^enum {zero, non_zero, inf, NaN, non_zero_nan};$/;"	e	enum:__anon151	file:
non_zero_nan	test/builtins/Unit/divtc3_test.c	/^enum {zero, non_zero, inf, NaN, non_zero_nan};$/;"	e	enum:__anon148	file:
non_zero_nan	test/builtins/Unit/divxc3_test.c	/^enum {zero, non_zero, inf, NaN, non_zero_nan};$/;"	e	enum:__anon155	file:
non_zero_nan	test/builtins/Unit/muldc3_test.c	/^enum {zero, non_zero, inf, NaN, non_zero_nan};$/;"	e	enum:__anon147	file:
non_zero_nan	test/builtins/Unit/mulsc3_test.c	/^enum {zero, non_zero, inf, NaN, non_zero_nan};$/;"	e	enum:__anon157	file:
non_zero_nan	test/builtins/Unit/multc3_test.c	/^enum {zero, non_zero, inf, NaN, non_zero_nan};$/;"	e	enum:__anon150	file:
non_zero_nan	test/builtins/Unit/mulxc3_test.c	/^enum {zero, non_zero, inf, NaN, non_zero_nan};$/;"	e	enum:__anon156	file:
nonnull_	test/ubsan/TestCases/Misc/nonnull-arg.cpp	/^  int *nonnull_;$/;"	m	class:C	file:
nonnull_arg	test/ubsan/TestCases/Misc/nullability.c	/^void nonnull_arg(int *_Nonnull p) {}$/;"	f
nonnull_assign1	test/ubsan/TestCases/Misc/nullability.c	/^void nonnull_assign1(int *p) {$/;"	f
nonnull_assign2	test/ubsan/TestCases/Misc/nullability.c	/^void nonnull_assign2(int *p) {$/;"	f
nonnull_assign3	test/ubsan/TestCases/Misc/nullability.c	/^void nonnull_assign3(int *p) {$/;"	f
nonnull_init1	test/ubsan/TestCases/Misc/nullability.c	/^void nonnull_init1(int *p) { int *_Nonnull local = p; }$/;"	f
nonnull_init2	test/ubsan/TestCases/Misc/nullability.c	/^void nonnull_init2(int *p) { int *_Nonnull arr[] = {p, p}; }$/;"	f
nonnull_retval1	test/ubsan/TestCases/Misc/nullability.c	/^int *_Nonnull nonnull_retval1(int *p) { return p; }$/;"	f
nonnull_retval2	test/ubsan/TestCases/Misc/nullability.c	/^int *_Nonnull nonnull_retval2(int *_Nonnull arg1, int *_Nonnull arg2,$/;"	f
noop	lib/sanitizer_common/tests/sanitizer_procmaps_test.cc	/^static void noop() {}$/;"	f	file:
nop	test/tsan/fork_multithreaded.cc	/^static void *nop(void *p) {$/;"	f	file:
noreturn_f	test/asan/TestCases/Windows/dll_noreturn.cc	/^void noreturn_f() {$/;"	f
normalize	lib/builtins/fp_lib.h	/^static __inline int normalize(rep_t *significand) {$/;"	f
nothrow	test/asan/TestCases/Linux/aligned_delete_test.cc	/^static const nothrow_t nothrow;$/;"	m	namespace:std	file:
nothrow	test/sanitizer_common/TestCases/Linux/new_delete_test.cc	/^static const nothrow_t nothrow;$/;"	m	namespace:std	file:
nothrow	test/scudo/aligned-new.cpp	/^static const nothrow_t nothrow;$/;"	m	namespace:std	file:
nothrow_t	lib/asan/asan_new_delete.cc	/^struct nothrow_t {};$/;"	s	namespace:std	file:
nothrow_t	lib/hwasan/hwasan_new_delete.cc	/^  struct nothrow_t {};$/;"	s	namespace:std	file:
nothrow_t	lib/msan/msan_new_delete.cc	/^  struct nothrow_t {};$/;"	s	namespace:std	file:
nothrow_t	lib/scudo/scudo_new_delete.cpp	/^struct nothrow_t {};$/;"	s	namespace:std	file:
nothrow_t	lib/tsan/rtl/tsan_new_delete.cc	/^struct nothrow_t {};$/;"	s	namespace:std	file:
nothrow_t	test/asan/TestCases/Linux/aligned_delete_test.cc	/^struct nothrow_t {};$/;"	s	namespace:std	file:
nothrow_t	test/sanitizer_common/TestCases/Linux/new_delete_test.cc	/^struct nothrow_t {};$/;"	s	namespace:std	file:
nothrow_t	test/scudo/aligned-new.cpp	/^struct nothrow_t {};$/;"	s	namespace:std	file:
nreport	test/tsan/Linux/double_race.cc	/^volatile int nreport;$/;"	v
nreported	lib/tsan/rtl/tsan_rtl.h	/^  int nreported;$/;"	m	struct:__tsan::Context
nsects	lib/sanitizer_common/sanitizer_procmaps_mac.cc	/^  uptr nsects;$/;"	m	struct:__sanitizer::MemoryMappedSegmentData	file:
nthreads	test/asan/TestCases/Posix/halt_on_error-torture.cc	/^size_t nthreads = 10;$/;"	v
null	test/sanitizer_common/TestCases/Posix/dedup_token_length_test.cc	/^volatile int *null = 0;$/;"	v
null	test/sanitizer_common/TestCases/Posix/illegal_read_test.cc	/^volatile int *null = 0;$/;"	v
null	test/sanitizer_common/TestCases/Posix/illegal_write_test.cc	/^volatile int *null = 0;$/;"	v
null	test/sanitizer_common/TestCases/Posix/sanitizer_set_report_fd_test.cc	/^volatile int *null = 0;$/;"	v
null_	test/ubsan/TestCases/Misc/nonnull-arg.cpp	/^  int *null_;$/;"	m	class:C	file:
numAccuracyTests	test/builtins/Unit/ppc/qadd_test.c	/^const int numAccuracyTests = sizeof(accuracyTests) \/ sizeof(struct testVector);$/;"	v
numAccuracyTests	test/builtins/Unit/ppc/qdiv_test.c	/^const int numAccuracyTests = sizeof(accuracyTests) \/ sizeof(struct testVector);$/;"	v
numAccuracyTests	test/builtins/Unit/ppc/qmul_test.c	/^const int numAccuracyTests = sizeof(accuracyTests) \/ sizeof(struct testVector);$/;"	v
numAccuracyTests	test/builtins/Unit/ppc/qsub_test.c	/^const int numAccuracyTests = sizeof(accuracyTests) \/ sizeof(struct testVector);$/;"	v
numEdgeCases	test/builtins/Unit/ppc/qadd_test.c	/^const int numEdgeCases = sizeof(edgeCases) \/ sizeof(struct testVector);$/;"	v
numEdgeCases	test/builtins/Unit/ppc/qdiv_test.c	/^const int numEdgeCases = sizeof(edgeCases) \/ sizeof(struct testVector);$/;"	v
numEdgeCases	test/builtins/Unit/ppc/qmul_test.c	/^const int numEdgeCases = sizeof(edgeCases) \/ sizeof(struct testVector);$/;"	v
numEdgeCases	test/builtins/Unit/ppc/qsub_test.c	/^const int numEdgeCases = sizeof(edgeCases) \/ sizeof(struct testVector);$/;"	v
numTestCases	test/builtins/Unit/ppc/fixtfdi_test.c	/^const int numTestCases = sizeof(testCases) \/ sizeof(struct testVector);$/;"	v
numTests	test/builtins/Unit/ppc/floatditf_test.h	/^static const int numTests = sizeof(tests) \/ sizeof(struct testCase);$/;"	v
numTests	test/builtins/Unit/ppc/floatunditf_test.h	/^static const int numTests = sizeof(tests) \/ sizeof(struct testCase);$/;"	v
num_created	lib/sanitizer_common/tests/sanitizer_thread_registry_test.cc	/^static int num_created[kNumShards + 1];$/;"	m	namespace:__sanitizer	file:
num_env_vars	lib/sanitizer_common/sanitizer_win.cc	/^static int num_env_vars;$/;"	m	namespace:__sanitizer	file:
num_joined	lib/sanitizer_common/tests/sanitizer_thread_registry_test.cc	/^static int num_joined[kNumShards + 1];$/;"	m	namespace:__sanitizer	file:
num_releases	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^    uptr num_releases;$/;"	m	struct:SizeClassAllocator64::ReleaseToOsInfo
num_started	lib/sanitizer_common/tests/sanitizer_thread_registry_test.cc	/^static int num_started[kNumShards + 1];$/;"	m	namespace:__sanitizer	file:
num_threads	test/lsan/TestCases/high_allocator_contention.cc	/^int num_threads;$/;"	v
num_threads	test/scudo/threads.c	/^int num_threads;$/;"	v
num_written_bytes	lib/dfsan/dfsan_custom.cc	/^  size_t num_written_bytes(int retval) {$/;"	f	struct:Formatter
number_of_live_dtls	lib/sanitizer_common/sanitizer_tls_get_addr.cc	/^static atomic_uintptr_t number_of_live_dtls;$/;"	m	namespace:__sanitizer	file:
nvcall	test/cfi/cross-dso/stats.cpp	/^extern "C" __attribute__((noinline)) void nvcall(A *a) {$/;"	f
nvcall	test/cfi/stats.cpp	/^extern "C" __attribute__((noinline)) void nvcall(A *a) {$/;"	f
nvf	test/cfi/cross-dso/stats.cpp	/^  void nvf() {}$/;"	f	struct:A
nvf	test/cfi/stats.cpp	/^  void nvf() {}$/;"	f	struct:A
obj	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    u64 obj;$/;"	m	struct:__sanitizer::__sanitizer_io_event
obj	test/asan/TestCases/Darwin/mixing-global-constructors.cc	/^C1 *obj = new C1();$/;"	v
obj	test/tsan/vptr_benign_race.cc	/^static A *obj = new B;$/;"	v	file:
obj	test/tsan/vptr_harmful_race.cc	/^static A *obj = new B;$/;"	v	file:
obj	test/tsan/vptr_harmful_race2.cc	/^static A *obj = new B;$/;"	v	file:
obj	test/tsan/vptr_harmful_race3.cc	/^static A *obj = new B;$/;"	v	file:
obj_locator_addr	lib/ubsan/ubsan_type_hash_win.cc	/^  CompleteObjectLocator *obj_locator_addr;$/;"	m	struct:CompleteObjectLocatorAbs	file:
obj_locator_addr	lib/ubsan/ubsan_type_hash_win.cc	/^  int obj_locator_addr;$/;"	m	struct:CompleteObjectLocator	file:
object	lib/builtins/emutls.c	/^    } object;$/;"	m	struct:__emutls_control	typeref:union:__emutls_control::__anon108	file:
object_base	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  char *object_base;$/;"	m	struct:__sanitizer_obstack
object_type	lib/tsan/rtl/tsan_external.cc	/^  const char *object_type;$/;"	m	struct:__tsan::TagData	file:
objs	test/tsan/unaligned_norace.cc	/^uint64_t objs[8*3*3*2][3];$/;"	v
objs	test/tsan/unaligned_race.cc	/^volatile uint64_t objs[8*2*(2 + 4 + 8)][2];$/;"	v
obstack	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^CHECK_TYPE_SIZE(obstack);$/;"	v
obstack_chunk_alloc	test/msan/Linux/obstack.cc	/^static void *obstack_chunk_alloc(size_t sz) {$/;"	f	file:
obstack_chunk_free	test/msan/Linux/obstack.cc	/^static void obstack_chunk_free(void *p) {$/;"	f	file:
octet	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u8 octet[6];$/;"	m	struct:__sanitizer::__sanitizer_ether_addr
octet	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  u8 octet[6];$/;"	m	struct:__sanitizer::__sanitizer_ether_addr
octet	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    u8 octet[6];$/;"	m	struct:__sanitizer::__sanitizer_ether_addr
octet	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  u8 octet[6];$/;"	m	struct:__sanitizer::__sanitizer_ether_addr
odr_indicator	lib/asan/asan_interface_internal.h	/^    uptr odr_indicator;      \/\/ The address of the ODR indicator symbol.$/;"	m	struct:__asan_global
off	lib/tsan/go/tsan_go.cc	/^  uptr off;$/;"	m	struct:__tsan::SymbolizeCodeContext	file:
off_t	lib/sanitizer_common/sanitizer_platform_limits_linux.cc	40;"	d	file:
off_t	lib/sanitizer_common/sanitizer_platform_limits_linux.cc	49;"	d	file:
offset	lib/asan/asan_descriptions.h	/^  sptr offset;$/;"	m	struct:__asan::ChunkAccess
offset	lib/asan/asan_descriptions.h	/^  uptr offset;$/;"	m	struct:__asan::StackAddressDescription
offset	lib/asan/asan_poisoning.cc	/^  s8 offset;  \/\/ in [0, SHADOW_GRANULARITY)$/;"	m	struct:__asan::ShadowSegmentEndpoint	file:
offset	lib/asan/asan_thread.h	/^    uptr offset;$/;"	m	struct:__asan::AsanThread::StackFrameAccess
offset	lib/sanitizer_common/sanitizer_procmaps.h	/^  uptr offset;$/;"	m	class:__sanitizer::MemoryMappedSegment
offset	lib/sanitizer_common/sanitizer_tls_get_addr.cc	/^  uptr offset;$/;"	m	struct:__sanitizer::TlsGetAddrParam	file:
offset_to_top	lib/ubsan/ubsan_type_hash_win.cc	/^  int offset_to_top;$/;"	m	struct:CompleteObjectLocator	file:
offset_to_top	lib/ubsan/ubsan_type_hash_win.cc	/^  int offset_to_top;$/;"	m	struct:CompleteObjectLocatorAbs	file:
offsetof	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^               offsetof(ifaddrs, ifa_ifu));$/;"	v
offsetof	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^               offsetof(ifaddrs, ifa_ifu));$/;"	v
old_mid	lib/asan/asan_errors.h	/^  uptr beg, end, old_mid, new_mid;$/;"	m	struct:__asan::ErrorBadParamsToAnnotateContiguousContainer
old_sigset	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^static __sanitizer_sigset_t old_sigset;$/;"	m	namespace:__sanitizer	file:
old_sigset_t_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  const unsigned old_sigset_t_sz = sizeof(unsigned long);$/;"	m	namespace:__sanitizer
oldlenp	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  uptr *oldlenp;$/;"	m	struct:__sanitizer::__sanitizer___sysctl_args
oldlenp	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    uptr *oldlenp;$/;"	m	struct:__sanitizer::__sanitizer___sysctl_args
oldset	lib/tsan/rtl/tsan_interceptors.cc	/^  __sanitizer_sigset_t oldset;$/;"	m	struct:__tsan::ThreadSignalContext	file:
oldval	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  void *oldval;$/;"	m	struct:__sanitizer::__sanitizer___sysctl_args
oldval	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    void *oldval;$/;"	m	struct:__sanitizer::__sanitizer___sysctl_args
onFirstLock	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  bool onFirstLock(DeadlockDetectorTLS<BV> *dtls, uptr node, u32 stk = 0) {$/;"	f	class:__sanitizer::DeadlockDetector
onLock	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  bool onLock(DeadlockDetectorTLS<BV> *dtls, uptr cur_node, u32 stk = 0) {$/;"	f	class:__sanitizer::DeadlockDetector
onLockAfter	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  void onLockAfter(DeadlockDetectorTLS<BV> *dtls, uptr cur_node, u32 stk = 0) {$/;"	f	class:__sanitizer::DeadlockDetector
onLockBefore	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  bool onLockBefore(DeadlockDetectorTLS<BV> *dtls, uptr cur_node) {$/;"	f	class:__sanitizer::DeadlockDetector
onLockFast	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  bool onLockFast(DeadlockDetectorTLS<BV> *dtls, uptr node, u32 stk = 0) {$/;"	f	class:__sanitizer::DeadlockDetector
onTryLock	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  bool onTryLock(DeadlockDetectorTLS<BV> *dtls, uptr cur_node, u32 stk = 0) {$/;"	f	class:__sanitizer::DeadlockDetector
onUnlock	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  void onUnlock(DeadlockDetectorTLS<BV> *dtls, uptr node) {$/;"	f	class:__sanitizer::DeadlockDetector
on_exit	lib/dfsan/scripts/check_custom_wrappers.sh	/^on_exit() {$/;"	f
on_exit_wrapper	lib/tsan/rtl/tsan_interceptors.cc	/^static void on_exit_wrapper(int status, void *arg) {$/;"	f	file:
one	test/asan/TestCases/Helpers/initialization-nobug-extra.cc	/^static int one = countCalls();$/;"	v	file:
one	test/asan/TestCases/Linux/overflow-in-qsort.cc	/^volatile int one = 1;$/;"	v
one	test/asan/TestCases/contiguous_container_crash.cc	/^static volatile int one = 1;$/;"	v	file:
one	test/fuzzer/OnlySomeBytesTest.cpp	/^static volatile int one = 1;$/;"	v	file:
oneRep	lib/builtins/fp_lib.h	226;"	d
oob_test	lib/asan/tests/asan_oob_test.cc	/^NOINLINE void oob_test(int size, int off) {$/;"	f
opaque	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u64 opaque[128 \/ sizeof(u64)];$/;"	m	struct:__sanitizer::__sanitizer_siginfo
opaque	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  u64 opaque[128 \/ sizeof(u64)];$/;"	m	struct:__sanitizer::__sanitizer_siginfo
opaque	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    u64 opaque[128 \/ sizeof(u64)];$/;"	m	struct:__sanitizer::__sanitizer_siginfo
opaque	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  u64 opaque[128 \/ sizeof(u64)];$/;"	m	struct:__sanitizer::__sanitizer_siginfo
opaque	lib/tsan/rtl/tsan_interceptors.cc	/^  u64 opaque[768 \/ sizeof(u64) + 1];$/;"	m	struct:ucontext_t	file:
opaque	lib/tsan/rtl/tsan_interceptors.cc	/^  u64 opaque[936 \/ sizeof(u64) + 1];$/;"	m	struct:ucontext_t	file:
opaque_storage_	lib/sanitizer_common/sanitizer_mutex.h	/^  ALIGNED(8) uptr opaque_storage_[10];$/;"	m	class:__sanitizer::BlockingMutex
open	lib/sanitizer_common/symbolizer/sanitizer_wrappers.cc	/^int open(const char *filename, int flags, ...) {$/;"	f
open	test/BlocksRuntime/testfilerunner.h	/^@property bool hasObjC, hasRR, hasGC, hasCPlusPlus, wantsC99, supposedToNotCompile, open, wants32, wants64;$/;"	v
openFileForMerging	lib/profile/InstrProfilingFile.c	/^static FILE *openFileForMerging(const char *ProfileFileName, int *MergeDone) {$/;"	f	file:
open_addr2line	lib/asan/scripts/asan_symbolize.py	/^  def open_addr2line(self):$/;"	m	class:Addr2LineSymbolizer
open_atos	lib/asan/scripts/asan_symbolize.py	/^  def open_atos(self):$/;"	m	class:DarwinSymbolizer
open_llvm_symbolizer	lib/asan/scripts/asan_symbolize.py	/^  def open_llvm_symbolizer(self):$/;"	m	class:LLVMSymbolizer
operator !=	lib/esan/esan_hashtable.h	/^operator!=(const iterator &Cmp) const {$/;"	f	class:__esan::HashTable::iterator
operator !=	lib/sanitizer_common/sanitizer_common.h	/^bool operator!=(const InternalMmapVectorNoCtor<T> &lhs,$/;"	f	namespace:__sanitizer
operator !=	lib/sanitizer_common/sanitizer_list.h	/^    bool operator!=(IteratorBase other) const {$/;"	f	class:__sanitizer::IntrusiveList::IteratorBase
operator !=	lib/xray/xray_buffer_queue.h	/^    friend bool operator!=(const Iterator &L, const Iterator<V> &R) {$/;"	f	class:__xray::BufferQueue::Iterator
operator !=	lib/xray/xray_segmented_array.h	/^    friend bool operator!=(const Iterator<V> &L, const Iterator<W> &R) {$/;"	f	class:__xray::Array::Iterator
operator ()	lib/esan/esan_hashtable.h	/^  bool operator()(const T &Key1, const T &Key2) const {$/;"	f	struct:__esan::DefaultEqual
operator ()	lib/esan/esan_hashtable.h	/^  size_t operator()(const T &Key) const {$/;"	f	struct:__esan::DefaultHash
operator ()	lib/fuzzer/FuzzerRandom.h	/^  intptr_t operator()(intptr_t From, intptr_t To) {$/;"	f	class:fuzzer::Random
operator ()	lib/fuzzer/FuzzerRandom.h	/^  result_type operator()() { return this->std::mt19937::operator()(); }$/;"	f	class:fuzzer::Random
operator ()	lib/fuzzer/FuzzerRandom.h	/^  size_t operator()(size_t n) { return n ? Rand() % n : 0; }$/;"	f	class:fuzzer::Random
operator ()	lib/sanitizer_common/sanitizer_common.h	/^  bool operator()(const T &a, const T &b) const { return a < b; }$/;"	f	struct:__sanitizer::CompareLess
operator *	lib/esan/esan_hashtable.h	/^    operator*() {$/;"	f	class:__esan::HashTable::iterator
operator *	lib/sanitizer_common/sanitizer_addrhashmap.h	/^T &AddrHashMap<T, kSize>::Handle::operator*() {$/;"	f	class:__sanitizer::AddrHashMap::Handle
operator *	lib/sanitizer_common/sanitizer_addrhashmap.h	/^const T &AddrHashMap<T, kSize>::Handle::operator*() const {$/;"	f	class:__sanitizer::AddrHashMap::Handle
operator *	lib/sanitizer_common/sanitizer_list.h	/^    ItemTy &operator*() {$/;"	f	class:__sanitizer::IntrusiveList::IteratorBase
operator *	lib/xray/xray_buffer_queue.h	/^    T &operator*() const { return Buffers[Offset].Buff; }$/;"	f	class:__xray::BufferQueue::Iterator
operator *	lib/xray/xray_segmented_array.h	/^    U &operator*() const {$/;"	f	class:__xray::Array::Iterator
operator ++	lib/esan/esan_hashtable.h	/^    operator++() {$/;"	f	class:__esan::HashTable::iterator
operator ++	lib/esan/esan_hashtable.h	/^    operator++(int) {$/;"	f	class:__esan::HashTable::iterator
operator ++	lib/interception/interception_win.cc	/^  T *operator++() { return ++ptr_; }$/;"	f	class:__interception::__anon13::RVAPtr
operator ++	lib/sanitizer_common/sanitizer_list.h	/^    IteratorBase &operator++() {$/;"	f	class:__sanitizer::IntrusiveList::IteratorBase
operator ++	lib/xray/xray_buffer_queue.h	/^    Iterator &operator++() {$/;"	f	class:__xray::BufferQueue::Iterator
operator ++	lib/xray/xray_buffer_queue.h	/^    Iterator operator++(int) {$/;"	f	class:__xray::BufferQueue::Iterator
operator ++	lib/xray/xray_segmented_array.h	/^    Iterator &operator++() {$/;"	f	class:__xray::Array::Iterator
operator ++	lib/xray/xray_segmented_array.h	/^    Iterator operator++(int) {$/;"	f	class:__xray::Array::Iterator
operator --	lib/xray/xray_segmented_array.h	/^    Iterator &operator--() {$/;"	f	class:__xray::Array::Iterator
operator --	lib/xray/xray_segmented_array.h	/^    Iterator operator--(int) {$/;"	f	class:__xray::Array::Iterator
operator ->	lib/interception/interception_win.cc	/^  T *operator->() { return ptr_; }$/;"	f	class:__interception::__anon13::RVAPtr
operator ->	lib/sanitizer_common/sanitizer_addrhashmap.h	/^T *AddrHashMap<T, kSize>::Handle::operator->() {$/;"	f	class:__sanitizer::AddrHashMap::Handle
operator ->	lib/xray/xray_buffer_queue.h	/^    T *operator->() const { return &(Buffers[Offset].Buff); }$/;"	f	class:__xray::BufferQueue::Iterator
operator ->	lib/xray/xray_segmented_array.h	/^    U *operator->() const { return &(**this); }$/;"	f	class:__xray::Array::Iterator
operator <	lib/fuzzer/FuzzerIO.h	/^  bool operator<(const SizedFile &B) const { return Size < B.Size; }$/;"	f	struct:fuzzer::SizedFile
operator <<	lib/ubsan/ubsan_diag.cc	/^Diag &Diag::operator<<(const TypeDescriptor &V) {$/;"	f	class:Diag
operator <<	lib/ubsan/ubsan_diag.cc	/^Diag &Diag::operator<<(const Value &V) {$/;"	f	class:Diag
operator <<	lib/ubsan/ubsan_diag.h	/^  Diag &operator<<(TypeName TN) { return AddArg(TN); }$/;"	f	class:__ubsan::Diag
operator <<	lib/ubsan/ubsan_diag.h	/^  Diag &operator<<(const Range &R) { return AddRange(R); }$/;"	f	class:__ubsan::Diag
operator <<	lib/ubsan/ubsan_diag.h	/^  Diag &operator<<(const char *Str) { return AddArg(Str); }$/;"	f	class:__ubsan::Diag
operator <<	lib/ubsan/ubsan_diag.h	/^  Diag &operator<<(const void *V) { return AddArg(V); }$/;"	f	class:__ubsan::Diag
operator <<	lib/ubsan/ubsan_diag.h	/^  Diag &operator<<(unsigned long long V) { return AddArg(UIntMax(V)); }$/;"	f	class:__ubsan::Diag
operator =	lib/fuzzer/FuzzerCommand.h	/^  Command &operator=(const Command &Other) {$/;"	f	class:fuzzer::final
operator =	lib/tsan/rtl/tsan_mutexset.h	/^  void operator=(const MutexSet &other) {$/;"	f	class:__tsan::MutexSet
operator =	lib/xray/xray_function_call_trie.h	/^    Allocators &operator=(Allocators &&O) {$/;"	f	struct:__xray::FunctionCallTrie::Allocators
operator =	test/BlocksRuntime/copyconstructor.C	/^TestObject& TestObject::operator=(CONST TestObject& inObj)$/;"	f	class:TestObject
operator =	test/BlocksRuntime/reference.C	/^TestObject& TestObject::operator=(CONST TestObject& inObj)$/;"	f	class:TestObject
operator =	test/esan/Unit/hashtable.cpp	/^  MyDataPayload & operator=(const MyDataPayload &Copy) {$/;"	f	struct:MyDataPayload
operator ==	lib/esan/esan_hashtable.h	/^operator==(const iterator &Cmp) const {$/;"	f	class:__esan::HashTable::iterator
operator ==	lib/fuzzer/FuzzerDictionary.h	/^  bool operator==(const FixedWord<kMaxSize> &w) const {$/;"	f	class:fuzzer::FixedWord
operator ==	lib/sanitizer_common/sanitizer_common.h	/^bool operator==(const InternalMmapVectorNoCtor<T> &lhs,$/;"	f	namespace:__sanitizer
operator ==	lib/tsan/rtl/tsan_rtl.cc	/^bool MD5Hash::operator==(const MD5Hash &other) const {$/;"	f	class:__tsan::MD5Hash
operator ==	lib/tsan/rtl/tsan_rtl.h	/^  bool operator==(const RacyStacks &other) const {$/;"	f	struct:__tsan::RacyStacks
operator ==	lib/xray/xray_buffer_queue.h	/^    friend bool operator==(const Iterator &L, const Iterator<V> &R) {$/;"	f	class:__xray::BufferQueue::Iterator
operator ==	lib/xray/xray_segmented_array.h	/^    friend bool operator==(const Iterator<V> &L, const Iterator<W> &R) {$/;"	f	class:__xray::Array::Iterator
operator ==	test/esan/Unit/hashtable.cpp	/^  bool operator==(MyData &Cmp) { return strcmp(Buf, Cmp.Buf) == 0; }$/;"	f	class:MyData
operator ==	test/esan/Unit/hashtable.cpp	/^  bool operator==(MyDataPayload &Cmp) { return *Data == *Cmp.Data; }$/;"	f	struct:MyDataPayload
operator C	test/asan/TestCases/use-after-scope-conversion.cc	/^  const operator C() const { return C(&p); }$/;"	f	struct:A
operator T *	lib/interception/interception_win.cc	/^  operator T *() { return ptr_; }$/;"	f	class:__interception::__anon13::RVAPtr
operator []	lib/esan/esan_circular_buffer.h	/^  T &operator[](uptr Idx) {$/;"	f	class:__esan::CircularBuffer
operator []	lib/esan/esan_circular_buffer.h	/^  const T &operator[](uptr Idx) const {$/;"	f	class:__esan::CircularBuffer
operator []	lib/fuzzer/FuzzerCorpus.h	/^  const Unit &operator[] (size_t Idx) const { return Inputs[Idx]->U; }$/;"	f	class:fuzzer::InputCorpus
operator []	lib/fuzzer/FuzzerDictionary.h	/^  DictionaryEntry & operator[] (size_t Idx) {$/;"	f	class:fuzzer::Dictionary
operator []	lib/sanitizer_common/sanitizer_allocator_bytemap.h	/^  u8 operator[] (uptr idx) const {$/;"	f	class:TwoLevelByteMap
operator []	lib/sanitizer_common/sanitizer_allocator_bytemap.h	/^  u8 operator[] (uptr idx) {$/;"	f	class:FlatByteMap
operator []	lib/sanitizer_common/sanitizer_common.h	/^  T &operator[](uptr i) {$/;"	f	class:__sanitizer::InternalMmapVectorNoCtor
operator []	lib/sanitizer_common/sanitizer_common.h	/^  const LoadedModule &operator[](uptr i) const {$/;"	f	class:__sanitizer::ListOfModules
operator []	lib/sanitizer_common/sanitizer_common.h	/^  const T &operator[](uptr i) const {$/;"	f	class:__sanitizer::InternalMmapVectorNoCtor
operator []	lib/sanitizer_common/sanitizer_vector.h	/^  T &operator[](uptr i) {$/;"	f	class:__sanitizer::Vector
operator []	lib/sanitizer_common/sanitizer_vector.h	/^  const T &operator[](uptr i) const {$/;"	f	class:__sanitizer::Vector
operator []	lib/xray/xray_segmented_array.h	/^  T &operator[](size_t Offset) const {$/;"	f	class:__xray::Array
operator bool	lib/xray/xray_recursion_guard.h	/^  explicit inline operator bool() const { return Valid; }$/;"	f	class:__xray::RecursionGuard
operator delete	lib/asan/asan_new_delete.cc	/^void operator delete(void *ptr, std::align_val_t align, std::nothrow_t const&)$/;"	f
operator delete	lib/asan/asan_new_delete.cc	/^void operator delete(void *ptr, std::nothrow_t const&)$/;"	f
operator delete	lib/hwasan/hwasan_new_delete.cc	/^void operator delete(void *ptr, std::nothrow_t const&) { OPERATOR_DELETE_BODY; }$/;"	f
operator delete	lib/lsan/lsan_interceptors.cc	/^void operator delete(void *ptr, std::align_val_t, std::nothrow_t const&)$/;"	f	namespace:std
operator delete	lib/lsan/lsan_interceptors.cc	/^void operator delete(void *ptr, std::nothrow_t const&) { OPERATOR_DELETE_BODY; }$/;"	f	namespace:std
operator delete	lib/msan/msan_new_delete.cc	/^void operator delete(void *ptr, std::align_val_t align, std::nothrow_t const&)$/;"	f
operator delete	lib/msan/msan_new_delete.cc	/^void operator delete(void *ptr, std::nothrow_t const&) { OPERATOR_DELETE_BODY; }$/;"	f
operator delete	lib/scudo/scudo_new_delete.cpp	/^void operator delete(void *ptr, std::align_val_t align, std::nothrow_t const&)$/;"	f
operator delete	lib/scudo/scudo_new_delete.cpp	/^void operator delete(void *ptr, std::nothrow_t const&)$/;"	f
operator delete	lib/tsan/rtl/tsan_new_delete.cc	/^void operator delete(void *ptr, std::align_val_t align, std::nothrow_t const&) {$/;"	f
operator delete	lib/tsan/rtl/tsan_new_delete.cc	/^void operator delete(void *ptr, std::nothrow_t const&) {$/;"	f
operator delete[]	lib/asan/asan_new_delete.cc	/^void operator delete[](void *ptr, std::align_val_t align, std::nothrow_t const&)$/;"	f
operator delete[]	lib/asan/asan_new_delete.cc	/^void operator delete[](void *ptr, std::nothrow_t const&)$/;"	f
operator delete[]	lib/hwasan/hwasan_new_delete.cc	/^void operator delete[](void *ptr, std::nothrow_t const&) {$/;"	f
operator delete[]	lib/lsan/lsan_interceptors.cc	/^void operator delete[](void *ptr, std::align_val_t, std::nothrow_t const&)$/;"	f	namespace:std
operator delete[]	lib/lsan/lsan_interceptors.cc	/^void operator delete[](void *ptr, std::nothrow_t const &)$/;"	f	namespace:std
operator delete[]	lib/msan/msan_new_delete.cc	/^void operator delete[](void *ptr, std::align_val_t align, std::nothrow_t const&)$/;"	f
operator delete[]	lib/msan/msan_new_delete.cc	/^void operator delete[](void *ptr, std::nothrow_t const&) {$/;"	f
operator delete[]	lib/scudo/scudo_new_delete.cpp	/^void operator delete[](void *ptr, std::align_val_t align, std::nothrow_t const&)$/;"	f
operator delete[]	lib/scudo/scudo_new_delete.cpp	/^void operator delete[](void *ptr, std::nothrow_t const&)$/;"	f
operator delete[]	lib/tsan/rtl/tsan_new_delete.cc	/^void operator delete[](void *ptr, std::align_val_t align,$/;"	f
operator delete[]	lib/tsan/rtl/tsan_new_delete.cc	/^void operator delete[](void *ptr, std::nothrow_t const&) {$/;"	f
operator new	lib/asan/asan_new_delete.cc	/^void *operator new(size_t size)$/;"	f
operator new	lib/asan/asan_new_delete.cc	/^void *operator new(size_t size, std::align_val_t align)$/;"	f
operator new	lib/asan/asan_new_delete.cc	/^void *operator new(size_t size, std::align_val_t align, std::nothrow_t const&)$/;"	f
operator new	lib/asan/asan_new_delete.cc	/^void *operator new(size_t size, std::nothrow_t const&)$/;"	f
operator new	lib/hwasan/hwasan_new_delete.cc	/^void *operator new(size_t size) { OPERATOR_NEW_BODY(false \/*nothrow*\/); }$/;"	f
operator new	lib/hwasan/hwasan_new_delete.cc	/^void *operator new(size_t size, std::nothrow_t const&) {$/;"	f
operator new	lib/lsan/lsan_interceptors.cc	/^void *operator new(size_t size) { OPERATOR_NEW_BODY(false \/*nothrow*\/); }$/;"	f	namespace:std
operator new	lib/lsan/lsan_interceptors.cc	/^void *operator new(size_t size, std::align_val_t align)$/;"	f	namespace:std
operator new	lib/lsan/lsan_interceptors.cc	/^void *operator new(size_t size, std::align_val_t align, std::nothrow_t const&)$/;"	f	namespace:std
operator new	lib/lsan/lsan_interceptors.cc	/^void *operator new(size_t size, std::nothrow_t const&)$/;"	f	namespace:std
operator new	lib/msan/msan_new_delete.cc	/^void *operator new(size_t size) { OPERATOR_NEW_BODY(false \/*nothrow*\/); }$/;"	f
operator new	lib/msan/msan_new_delete.cc	/^void *operator new(size_t size, std::align_val_t align)$/;"	f
operator new	lib/msan/msan_new_delete.cc	/^void *operator new(size_t size, std::align_val_t align, std::nothrow_t const&)$/;"	f
operator new	lib/msan/msan_new_delete.cc	/^void *operator new(size_t size, std::nothrow_t const&) {$/;"	f
operator new	lib/sanitizer_common/sanitizer_common.h	/^inline void *operator new(__sanitizer::operator_new_size_type size,$/;"	f
operator new	lib/sanitizer_common/sanitizer_placement_new.h	/^inline void *operator new(__sanitizer::operator_new_size_type sz, void *p) {$/;"	f
operator new	lib/scudo/scudo_new_delete.cpp	/^void *operator new(size_t size)$/;"	f
operator new	lib/scudo/scudo_new_delete.cpp	/^void *operator new(size_t size, std::align_val_t align)$/;"	f
operator new	lib/scudo/scudo_new_delete.cpp	/^void *operator new(size_t size, std::align_val_t align, std::nothrow_t const&)$/;"	f
operator new	lib/scudo/scudo_new_delete.cpp	/^void *operator new(size_t size, std::nothrow_t const&)$/;"	f
operator new	lib/tsan/rtl/tsan_new_delete.cc	/^void *operator new(__sanitizer::uptr size) {$/;"	f
operator new	lib/tsan/rtl/tsan_new_delete.cc	/^void *operator new(__sanitizer::uptr size, std::align_val_t align) {$/;"	f
operator new	lib/tsan/rtl/tsan_new_delete.cc	/^void *operator new(__sanitizer::uptr size, std::align_val_t align,$/;"	f
operator new	lib/tsan/rtl/tsan_new_delete.cc	/^void *operator new(__sanitizer::uptr size, std::nothrow_t const&) {$/;"	f
operator new	test/asan/TestCases/Posix/new_array_cookie_with_new_from_class.cc	/^  void *operator new(size_t s) { return Allocate(s); }$/;"	f	struct:Foo
operator new[]	lib/asan/asan_new_delete.cc	/^void *operator new[](size_t size)$/;"	f
operator new[]	lib/asan/asan_new_delete.cc	/^void *operator new[](size_t size, std::align_val_t align)$/;"	f
operator new[]	lib/asan/asan_new_delete.cc	/^void *operator new[](size_t size, std::align_val_t align, std::nothrow_t const&)$/;"	f
operator new[]	lib/asan/asan_new_delete.cc	/^void *operator new[](size_t size, std::nothrow_t const&)$/;"	f
operator new[]	lib/hwasan/hwasan_new_delete.cc	/^void *operator new[](size_t size) { OPERATOR_NEW_BODY(false \/*nothrow*\/); }$/;"	f
operator new[]	lib/hwasan/hwasan_new_delete.cc	/^void *operator new[](size_t size, std::nothrow_t const&) {$/;"	f
operator new[]	lib/lsan/lsan_interceptors.cc	/^void *operator new[](size_t size) { OPERATOR_NEW_BODY(false \/*nothrow*\/); }$/;"	f	namespace:std
operator new[]	lib/lsan/lsan_interceptors.cc	/^void *operator new[](size_t size, std::align_val_t align)$/;"	f	namespace:std
operator new[]	lib/lsan/lsan_interceptors.cc	/^void *operator new[](size_t size, std::align_val_t align, std::nothrow_t const&)$/;"	f	namespace:std
operator new[]	lib/lsan/lsan_interceptors.cc	/^void *operator new[](size_t size, std::nothrow_t const&)$/;"	f	namespace:std
operator new[]	lib/msan/msan_new_delete.cc	/^void *operator new[](size_t size) { OPERATOR_NEW_BODY(false \/*nothrow*\/); }$/;"	f
operator new[]	lib/msan/msan_new_delete.cc	/^void *operator new[](size_t size, std::align_val_t align)$/;"	f
operator new[]	lib/msan/msan_new_delete.cc	/^void *operator new[](size_t size, std::align_val_t align, std::nothrow_t const&)$/;"	f
operator new[]	lib/msan/msan_new_delete.cc	/^void *operator new[](size_t size, std::nothrow_t const&) {$/;"	f
operator new[]	lib/scudo/scudo_new_delete.cpp	/^void *operator new[](size_t size)$/;"	f
operator new[]	lib/scudo/scudo_new_delete.cpp	/^void *operator new[](size_t size, std::align_val_t align)$/;"	f
operator new[]	lib/scudo/scudo_new_delete.cpp	/^void *operator new[](size_t size, std::align_val_t align, std::nothrow_t const&)$/;"	f
operator new[]	lib/scudo/scudo_new_delete.cpp	/^void *operator new[](size_t size, std::nothrow_t const&)$/;"	f
operator new[]	lib/tsan/rtl/tsan_new_delete.cc	/^void *operator new[](__sanitizer::uptr size) {$/;"	f
operator new[]	lib/tsan/rtl/tsan_new_delete.cc	/^void *operator new[](__sanitizer::uptr size, std::align_val_t align) {$/;"	f
operator new[]	lib/tsan/rtl/tsan_new_delete.cc	/^void *operator new[](__sanitizer::uptr size, std::align_val_t align,$/;"	f
operator new[]	lib/tsan/rtl/tsan_new_delete.cc	/^void *operator new[](__sanitizer::uptr size, std::nothrow_t const&) {$/;"	f
operator new[]	test/asan/TestCases/Posix/new_array_cookie_with_new_from_class.cc	/^  void *operator new[] (size_t s) { return Allocate(s); }$/;"	f	struct:Foo
operator size_t	test/esan/Unit/hashtable.cpp	/^  operator size_t() const { return (size_t)*Data; }$/;"	f	struct:MyDataPayload
operator size_t	test/esan/Unit/hashtable.cpp	/^  operator size_t() const {$/;"	f	class:MyData
operator_new_size_type	lib/sanitizer_common/sanitizer_internal_defs.h	/^typedef u32 operator_new_size_type;$/;"	t	namespace:__sanitizer
operator_new_size_type	lib/sanitizer_common/sanitizer_internal_defs.h	/^typedef unsigned long operator_new_size_type;$/;"	t	namespace:__sanitizer
operator_new_size_type	lib/sanitizer_common/sanitizer_internal_defs.h	/^typedef uptr operator_new_size_type;$/;"	t	namespace:__sanitizer
options	test/BlocksRuntime/testfilerunner.h	/^@property int options;$/;"	v
options	test/BlocksRuntime/testfilerunner.h	/^enum options {$/;"	g
options1	lib/tsan/tests/unit/tsan_flags_test.cc	/^static const char *options1 =$/;"	m	namespace:__tsan	file:
options2	lib/tsan/tests/unit/tsan_flags_test.cc	/^static const char *options2 =$/;"	m	namespace:__tsan	file:
or_4	lib/builtins/arm/sync_fetch_and_or_4.S	/^#define or_4(rD, rN, rM)  orr rD, rN, rM$/;"	d
or_8	lib/builtins/arm/sync_fetch_and_or_8.S	/^#define or_8(rD_LO, rD_HI, rN_LO, rN_HI, rM_LO, rM_HI) \\$/;"	d
orig_arg	lib/tsan/rtl/tsan_interceptors_mac.cc	/^  void *orig_arg;$/;"	m	struct:__tsan::__anon17::call_once_callback_args	file:
orig_context	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^  void *orig_context;$/;"	m	struct:__tsan::__anon19	file:
orig_context	test/asan/TestCases/Linux/swapcontext_annotation.cc	/^ucontext_t orig_context;$/;"	v
orig_context	test/asan/TestCases/Linux/swapcontext_test.cc	/^ucontext_t orig_context;$/;"	v
orig_func	lib/tsan/rtl/tsan_interceptors_mac.cc	/^  void (*orig_func)(void *arg);$/;"	m	struct:__tsan::__anon17::call_once_callback_args	file:
orig_work	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^  dispatch_function_t orig_work;$/;"	m	struct:__tsan::__anon19	file:
original	lib/interception/interception.h	/^  const __sanitizer::uptr original;$/;"	m	struct:interpose_substitution
original_sigaction_sigbus	test/sanitizer_common/TestCases/Linux/allow_user_segv.cc	/^struct sigaction original_sigaction_sigbus;$/;"	v	typeref:struct:sigaction
original_sigaction_sigsegv	test/sanitizer_common/TestCases/Linux/allow_user_segv.cc	/^struct sigaction original_sigaction_sigsegv;$/;"	v	typeref:struct:sigaction
origins_	lib/msan/msan_report.cc	/^  u32 origins_[kMaxSize_];$/;"	m	class:__msan::OriginSet	file:
os_handle_	lib/sanitizer_common/sanitizer_common.h	/^  uptr os_handle_;$/;"	m	class:__sanitizer::ReservedAddressRange
os_id	lib/sanitizer_common/sanitizer_thread_registry.h	/^  tid_t os_id;     \/\/ PID (used for reporting).$/;"	m	class:__sanitizer::ThreadContextBase
os_id	lib/tsan/rtl/tsan_report.h	/^  tid_t os_id;$/;"	m	struct:__tsan::ReportThread
osa_flags	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int osa_flags;$/;"	m	struct:__sanitizer::__sanitizer_sigaction13
osa_handler	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  __sanitizer_sighandler_ptr osa_handler;$/;"	m	struct:__sanitizer::__sanitizer_sigaction13
osa_mask	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  __sanitizer_sigset13_t osa_mask;$/;"	m	struct:__sanitizer::__sanitizer_sigaction13
other	lib/fuzzer/FuzzerDefs.h	/^      struct rebind { typedef fuzzer_allocator<Other> other;  };$/;"	t	struct:fuzzer::fuzzer_allocator::rebind
output	test/sanitizer_common/android_commands/android_compile.py	/^        output = args.pop(0)$/;"	v
output	test/sanitizer_common/android_commands/android_compile.py	/^output = None$/;"	v
output	test/sanitizer_common/ios_commands/iossim_compile.py	/^        output = args.pop(0)$/;"	v
output	test/sanitizer_common/ios_commands/iossim_compile.py	/^output = None$/;"	v
output_fd_	lib/sanitizer_common/sanitizer_symbolizer_internal.h	/^  fd_t output_fd_;$/;"	m	class:__sanitizer::SymbolizerProcess
output_file	lib/profile/GCDAProfiling.c	/^static FILE *output_file = NULL;$/;"	v	file:
output_terminator_	lib/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc	/^  static const char output_terminator_[];$/;"	m	class:__sanitizer::Addr2LineProcess	file:
output_terminator_	lib/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc	/^const char Addr2LineProcess::output_terminator_[] = "??\\n??:0\\n";$/;"	m	class:__sanitizer::Addr2LineProcess	file:
output_type	test/sanitizer_common/android_commands/android_compile.py	/^        output_type = 'object'$/;"	v
output_type	test/sanitizer_common/android_commands/android_compile.py	/^        output_type = 'shared'$/;"	v
output_type	test/sanitizer_common/android_commands/android_compile.py	/^output_type = 'executable'$/;"	v
output_type	test/sanitizer_common/ios_commands/iossim_compile.py	/^        output_type = 'assembly'$/;"	v
output_type	test/sanitizer_common/ios_commands/iossim_compile.py	/^        output_type = 'dylib'$/;"	v
output_type	test/sanitizer_common/ios_commands/iossim_compile.py	/^        output_type = 'object'$/;"	v
output_type	test/sanitizer_common/ios_commands/iossim_compile.py	/^        output_type = 'shared'$/;"	v
output_type	test/sanitizer_common/ios_commands/iossim_compile.py	/^output_type = 'executable'$/;"	v
ov	test/asan/TestCases/Windows/bind_io_completion_callback.cc	/^OVERLAPPED ov;$/;"	v
overflow	test/ubsan/TestCases/Misc/deduplication.cpp	/^void overflow() {$/;"	f
override	lib/asan/asan_thread.h	/^  void OnCreated(void *arg) override;$/;"	m	class:__asan::AsanThreadContext
override	lib/asan/asan_thread.h	/^  void OnFinished() override;$/;"	m	class:__asan::AsanThreadContext
override	lib/lsan/lsan_thread.h	/^  void OnFinished() override;$/;"	m	class:__lsan::ThreadContext
override	lib/lsan/lsan_thread.h	/^  void OnStarted(void *arg) override;$/;"	m	class:__lsan::ThreadContext
override	lib/sanitizer_common/sanitizer_deadlock_detector1.cc	/^                      bool trylock) override;$/;"	m	struct:__sanitizer::DD	file:
override	lib/sanitizer_common/sanitizer_deadlock_detector1.cc	/^  DDLogicalThread *CreateLogicalThread(u64 ctx) override;$/;"	m	struct:__sanitizer::DD	file:
override	lib/sanitizer_common/sanitizer_deadlock_detector1.cc	/^  DDPhysicalThread *CreatePhysicalThread() override;$/;"	m	struct:__sanitizer::DD	file:
override	lib/sanitizer_common/sanitizer_deadlock_detector1.cc	/^  DDReport *GetReport(DDCallback *cb) override;$/;"	m	struct:__sanitizer::DD	file:
override	lib/sanitizer_common/sanitizer_deadlock_detector1.cc	/^  void DestroyLogicalThread(DDLogicalThread *lt) override;$/;"	m	struct:__sanitizer::DD	file:
override	lib/sanitizer_common/sanitizer_deadlock_detector1.cc	/^  void DestroyPhysicalThread(DDPhysicalThread *pt) override;$/;"	m	struct:__sanitizer::DD	file:
override	lib/sanitizer_common/sanitizer_deadlock_detector1.cc	/^  void MutexBeforeLock(DDCallback *cb, DDMutex *m, bool wlock) override;$/;"	m	struct:__sanitizer::DD	file:
override	lib/sanitizer_common/sanitizer_deadlock_detector1.cc	/^  void MutexBeforeUnlock(DDCallback *cb, DDMutex *m, bool wlock) override;$/;"	m	struct:__sanitizer::DD	file:
override	lib/sanitizer_common/sanitizer_deadlock_detector1.cc	/^  void MutexDestroy(DDCallback *cb, DDMutex *m) override;$/;"	m	struct:__sanitizer::DD	file:
override	lib/sanitizer_common/sanitizer_deadlock_detector1.cc	/^  void MutexInit(DDCallback *cb, DDMutex *m) override;$/;"	m	struct:__sanitizer::DD	file:
override	lib/sanitizer_common/sanitizer_symbolizer_internal.h	/^  bool SymbolizeData(uptr addr, DataInfo *info) override;$/;"	m	class:__sanitizer::LLVMSymbolizer
override	lib/sanitizer_common/sanitizer_symbolizer_internal.h	/^  bool SymbolizePC(uptr addr, SymbolizedStack *stack) override;$/;"	m	class:__sanitizer::LLVMSymbolizer
override	lib/sanitizer_common/sanitizer_symbolizer_libbacktrace.h	/^  bool SymbolizeData(uptr addr, DataInfo *info) override;$/;"	m	class:__sanitizer::LibbacktraceSymbolizer
override	lib/sanitizer_common/sanitizer_symbolizer_libbacktrace.h	/^  bool SymbolizePC(uptr addr, SymbolizedStack *stack) override;$/;"	m	class:__sanitizer::LibbacktraceSymbolizer
override	lib/sanitizer_common/sanitizer_symbolizer_libbacktrace.h	/^  const char *Demangle(const char *name) override;$/;"	m	class:__sanitizer::LibbacktraceSymbolizer
override	lib/sanitizer_common/sanitizer_symbolizer_mac.h	/^  bool SymbolizeData(uptr addr, DataInfo *info) override;$/;"	m	class:__sanitizer::AtosSymbolizer
override	lib/sanitizer_common/sanitizer_symbolizer_mac.h	/^  bool SymbolizeData(uptr addr, DataInfo *info) override;$/;"	m	class:__sanitizer::DlAddrSymbolizer
override	lib/sanitizer_common/sanitizer_symbolizer_mac.h	/^  bool SymbolizePC(uptr addr, SymbolizedStack *stack) override;$/;"	m	class:__sanitizer::AtosSymbolizer
override	lib/sanitizer_common/sanitizer_symbolizer_mac.h	/^  bool SymbolizePC(uptr addr, SymbolizedStack *stack) override;$/;"	m	class:__sanitizer::DlAddrSymbolizer
override	lib/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc	/^  bool ReachedEndOfOutput(const char *buffer, uptr length) const override;$/;"	m	class:__sanitizer::Addr2LineProcess	file:
override	lib/sanitizer_common/sanitizer_symbolizer_win.cc	/^  bool SymbolizePC(uptr addr, SymbolizedStack *stack) override;$/;"	m	class:__sanitizer::__anon77::WinSymbolizerTool	file:
override	lib/sanitizer_common/sanitizer_symbolizer_win.cc	/^  const char *Demangle(const char *name) override;$/;"	m	class:__sanitizer::__anon77::WinSymbolizerTool	file:
override	lib/tsan/dd/dd_rtl.h	/^  u32 Unwind() override;$/;"	m	struct:__dsan::Callback
override	lib/tsan/rtl/tsan_rtl.h	/^  void OnCreated(void *arg) override;$/;"	m	class:__tsan::ThreadContext
override	lib/tsan/rtl/tsan_rtl.h	/^  void OnDead() override;$/;"	m	class:__tsan::ThreadContext
override	lib/tsan/rtl/tsan_rtl.h	/^  void OnDetached(void *arg) override;$/;"	m	class:__tsan::ThreadContext
override	lib/tsan/rtl/tsan_rtl.h	/^  void OnFinished() override;$/;"	m	class:__tsan::ThreadContext
override	lib/tsan/rtl/tsan_rtl.h	/^  void OnJoined(void *arg) override;$/;"	m	class:__tsan::ThreadContext
override	lib/tsan/rtl/tsan_rtl.h	/^  void OnReset() override;$/;"	m	class:__tsan::ThreadContext
override	lib/tsan/rtl/tsan_rtl.h	/^  void OnStarted(void *arg) override;$/;"	m	class:__tsan::ThreadContext
override	lib/ubsan/ubsan_type_hash_itanium.cc	/^  ~__class_type_info() override;$/;"	m	class:__cxxabiv1::__class_type_info	file:
override	lib/ubsan/ubsan_type_hash_itanium.cc	/^  ~__si_class_type_info() override;$/;"	m	class:__cxxabiv1::__si_class_type_info	file:
override	lib/ubsan/ubsan_type_hash_itanium.cc	/^  ~__vmi_class_type_info() override;$/;"	m	class:__cxxabiv1::__vmi_class_type_info	file:
owner_	lib/sanitizer_common/sanitizer_mutex.h	/^  uptr owner_;  \/\/ for debugging$/;"	m	class:__sanitizer::BlockingMutex
owner_tid	lib/tsan/rtl/tsan_sync.h	/^  int owner_tid;  \/\/ Set only by exclusive owners.$/;"	m	struct:__tsan::SyncVar
p	lib/dfsan/scripts/build-libc-list.py	/^p = OptionParser()$/;"	v
p	test/asan/TestCases/Posix/assign_large_valloc_to_global.cc	/^int *p;$/;"	v
p	test/asan/TestCases/use-after-scope-conversion.cc	/^  char p;$/;"	m	struct:A	file:
p	test/asan/TestCases/use-after-scope-conversion.cc	/^  char p;$/;"	m	struct:B	file:
p	test/asan/TestCases/use-after-scope-conversion.cc	/^  const char *p;$/;"	m	struct:C	file:
p	test/asan/TestCases/use-after-scope-if.cc	/^int *p;$/;"	v
p	test/asan/TestCases/use-after-scope-loop-bug.cc	/^volatile int *p;$/;"	v
p	test/asan/TestCases/use-after-scope-loop-removed.cc	/^int *p;$/;"	v
p	test/asan/TestCases/use-after-scope-loop.cc	/^int *p[3];$/;"	v
p	test/asan/TestCases/use-after-scope-nobug.cc	/^int *p[3];$/;"	v
p	test/asan/TestCases/use-after-scope.cc	/^volatile int *p = 0;$/;"	v
p	test/asan/TestCases/vla_chrome_testcase.cc	/^int *p;$/;"	v
p	test/lsan/TestCases/Linux/cleanup_in_tsd_destructor.c	/^__thread void *p;$/;"	v
p	test/lsan/TestCases/do_leak_check_override.cc	/^  void *p;$/;"	m	struct:LeakyGlobal	file:
p	test/lsan/TestCases/recoverable_leak_check.cc	/^void *p;$/;"	v
p	test/lsan/TestCases/use_poisoned_asan.cc	/^void **p;$/;"	v
p0	lib/builtins/hexagon/dfaddsub.S	/^		p0 = !cmp.eq(AH,BH)			\/\/ Do they have different signs$/;"	d
p0	lib/builtins/hexagon/dfaddsub.S	/^		p0 = !cmp.eq(EXPB,#2)			\/\/ Not rounding the other way,$/;"	d
p0	lib/builtins/hexagon/dfaddsub.S	/^		p0 = !cmp.eq(TMP,#1)			\/\/ If not round-to-zero and$/;"	d
p0	lib/builtins/hexagon/dfaddsub.S	/^		p0 = !cmp.gtu(EXPA,ZTMPL)$/;"	d
p0	lib/builtins/hexagon/dfaddsub.S	/^		p0 = cmp.eq(A,B)$/;"	d
p0	lib/builtins/hexagon/dfaddsub.S	/^		p0 = cmp.eq(ATMPH,#0)$/;"	d
p0	lib/builtins/hexagon/dfaddsub.S	/^		p0 = cmp.eq(ATMPL,#0)$/;"	d
p0	lib/builtins/hexagon/dfaddsub.S	/^		p0 = cmp.eq(TMP,#2)$/;"	d
p0	lib/builtins/hexagon/dfaddsub.S	/^		p0 = cmp.gt(AH,#-1)$/;"	d
p0	lib/builtins/hexagon/dfaddsub.S	/^		p0 = cmp.gt(ATMPH,#-1)$/;"	d
p0	lib/builtins/hexagon/dfaddsub.S	/^		p0 = cmp.gt(EXPB,##BIAS+BIAS-2)$/;"	d
p0	lib/builtins/hexagon/dfaddsub.S	/^		p0 = cmp.gt(EXPB,#0)$/;"	d
p0	lib/builtins/hexagon/dfaddsub.S	/^		p0 = cmp.gtu(EXPA,ZTMPH)		\/\/ must be pretty high in case of large cancellation$/;"	d
p0	lib/builtins/hexagon/dfaddsub.S	/^		p0 = dfclass(A,#0x0f)		\/\/ A not NaN?$/;"	d
p0	lib/builtins/hexagon/dfaddsub.S	/^		p0 = dfclass(A,#4)$/;"	d
p0	lib/builtins/hexagon/dfaddsub.S	/^		p0 = dfclass(B,#0x0f)			\/\/ if B is not NaN$/;"	d
p0	lib/builtins/hexagon/dfaddsub.S	/^		p0 = dfclass(B,#8)			\/\/ And is B also infinite?$/;"	d
p0	lib/builtins/hexagon/dfaddsub.S	/^		p0 = dfcmp.eq(A,A)$/;"	d
p0	lib/builtins/hexagon/dfaddsub.S	/^		p0 = dfcmp.eq(A,B)$/;"	d
p0	lib/builtins/hexagon/dfaddsub.S	/^		p0 = dfcmp.eq(ATMP,A)			\/\/ is A also zero?$/;"	d
p0	lib/builtins/hexagon/dfdiv.S	/^		p0 = !cmp.eq(QH,#2)		\/\/ and not rounding the other way$/;"	d
p0	lib/builtins/hexagon/dfdiv.S	/^		p0 = !cmp.eq(QL,#1)		\/\/ if not round-to-zero$/;"	d
p0	lib/builtins/hexagon/dfdiv.S	/^		p0 = dfclass(A,#0x10)$/;"	d
p0	lib/builtins/hexagon/dfdiv.S	/^		p0 = dfcmp.eq(A,A)$/;"	d
p0	lib/builtins/hexagon/dfdiv.S	/^		p0 = dfcmp.eq(B,B)		\/\/ get exceptions$/;"	d
p0	lib/builtins/hexagon/dfdiv.S	/^		p0 = dfcmp.uo(B,B)		\/\/ take possible exception$/;"	d
p0	lib/builtins/hexagon/dffma.S	/^		p0 = !cmp.eq(BH,#2)$/;"	d
p0	lib/builtins/hexagon/dffma.S	/^		p0 = !cmp.eq(BL,#1)$/;"	d
p0	lib/builtins/hexagon/dffma.S	/^		p0 = bitsclr(AH,TMP)$/;"	d
p0	lib/builtins/hexagon/dffma.S	/^		p0 = bitsset(ATMPH,TMP)$/;"	d
p0	lib/builtins/hexagon/dffma.S	/^		p0 = cmp.eq(AL,#0)$/;"	d
p0	lib/builtins/hexagon/dffma.S	/^		p0 = cmp.eq(B,C)		\/\/ yes, scalar equals.  +0++0 or -0+-0$/;"	d
p0	lib/builtins/hexagon/dffma.S	/^		p0 = cmp.eq(TMP,#2)$/;"	d
p0	lib/builtins/hexagon/dffma.S	/^		p0 = cmp.gt(EXPA,##BIAS+BIAS)$/;"	d
p0	lib/builtins/hexagon/dffma.S	/^		p0 = cmp.gt(EXPA,#0)$/;"	d
p0	lib/builtins/hexagon/dffma.S	/^		p0 = cmp.gtu(ONE,B)$/;"	d
p0	lib/builtins/hexagon/dffma.S	/^		p0 = cmp.gtu(ONE,CTMP)$/;"	d
p0	lib/builtins/hexagon/dffma.S	/^		p0 = dfclass(A,#0x08)		\/\/ a is inf$/;"	d
p0	lib/builtins/hexagon/dffma.S	/^		p0 = dfclass(A,#0x0f)		\/\/ A NaN?$/;"	d
p0	lib/builtins/hexagon/dffma.S	/^		p0 = dfclass(B,#0x01)		\/\/ b is zero$/;"	d
p0	lib/builtins/hexagon/dffma.S	/^		p0 = dfclass(B,#0x10)$/;"	d
p0	lib/builtins/hexagon/dffma.S	/^		p0 = dfclass(C,#0x01)		\/\/ is C zero?$/;"	d
p0	lib/builtins/hexagon/dffma.S	/^		p0 = dfclass(C,#0x08)		\/\/ is C inf?$/;"	d
p0	lib/builtins/hexagon/dffma.S	/^		p0 = dfclass(C,#0x10)		\/\/ is C NaN?$/;"	d
p0	lib/builtins/hexagon/dffma.S	/^		p0 = dfclass(C,#0x10)$/;"	d
p0	lib/builtins/hexagon/dffma.S	/^		p0 = dfcmp.eq(A,A)$/;"	d
p0	lib/builtins/hexagon/dffma.S	/^		p0 = dfcmp.eq(A,C)$/;"	d
p0	lib/builtins/hexagon/dffma.S	/^		p0 = dfcmp.eq(ATMP,ATMP)$/;"	d
p0	lib/builtins/hexagon/dffma.S	/^		p0 = dfcmp.eq(B,C)		\/\/ is C also zero?$/;"	d
p0	lib/builtins/hexagon/dfminmax.S	/^		p0 = dfclass(A,#0x10)		\/\/ If A is a number$/;"	d
p0	lib/builtins/hexagon/dfminmax.S	/^		p0 = dfclass(A,#0x10)$/;"	d
p0	lib/builtins/hexagon/dfmul.S	/^		p0 = !cmp.eq(PP_LL_L,#2)		\/\/ Not rounding the other way,$/;"	d
p0	lib/builtins/hexagon/dfmul.S	/^		p0 = !cmp.eq(TMP,#1)			\/\/ If not round-to-zero and$/;"	d
p0	lib/builtins/hexagon/dfmul.S	/^		p0 = !cmp.gt(EXP0,BTMPH)$/;"	d
p0	lib/builtins/hexagon/dfmul.S	/^		p0 = bitsclr(AH,BTMPL)$/;"	d
p0	lib/builtins/hexagon/dfmul.S	/^		p0 = bitsclr(AH,TMP)$/;"	d
p0	lib/builtins/hexagon/dfmul.S	/^		p0 = bitsset(ATMPH,BTMPH)$/;"	d
p0	lib/builtins/hexagon/dfmul.S	/^		p0 = cmp.eq(AL,#0)$/;"	d
p0	lib/builtins/hexagon/dfmul.S	/^		p0 = cmp.eq(BTMPH,#3)			\/\/ if rounding towards right inf$/;"	d
p0	lib/builtins/hexagon/dfmul.S	/^		p0 = cmp.gt(BTMPH,#1)			\/\/ Round towards pos\/neg inf?$/;"	d
p0	lib/builtins/hexagon/dfmul.S	/^		p0 = cmp.gt(EXP0,BTMPL)$/;"	d
p0	lib/builtins/hexagon/dfmul.S	/^		p0 = cmp.gt(EXP1,##BIAS+BIAS-2)	\/\/ overflow$/;"	d
p0	lib/builtins/hexagon/dfmul.S	/^		p0 = cmp.gt(EXP1,#0)$/;"	d
p0	lib/builtins/hexagon/dfmul.S	/^		p0 = cmp.gtu(ONE,PP_LL)				\/\/ Did we extract all zeros?$/;"	d
p0	lib/builtins/hexagon/dfmul.S	/^		p0 = dfclass(A,#0x08)		\/\/ A is infinity$/;"	d
p0	lib/builtins/hexagon/dfmul.S	/^		p0 = dfclass(A,#0x0f)		\/\/ A not NaN?$/;"	d
p0	lib/builtins/hexagon/dfmul.S	/^		p0 = dfclass(A,#2)$/;"	d
p0	lib/builtins/hexagon/dfmul.S	/^		p0 = dfclass(B,#0x01)		\/\/ B is zero$/;"	d
p0	lib/builtins/hexagon/dfmul.S	/^		p0 = dfclass(B,#0x0f)			\/\/ if B is not NaN$/;"	d
p0	lib/builtins/hexagon/dfmul.S	/^		p0 = dfclass(B,#2)$/;"	d
p0	lib/builtins/hexagon/dfmul.S	/^		p0 = dfcmp.eq(A,A)			\/\/ Realize FP exception if enabled$/;"	d
p0	lib/builtins/hexagon/dfmul.S	/^		p0 = dfcmp.eq(A,A)			\/\/ realize exception$/;"	d
p0	lib/builtins/hexagon/dfmul.S	/^		p0 = dfcmp.eq(A,A)$/;"	d
p0	lib/builtins/hexagon/dfmul.S	/^		p0 = dfcmp.uo(A,A)			\/\/ force exception if enabled$/;"	d
p0	lib/builtins/hexagon/divdi3.S	/^		p0 = cmp.gtu(r13:12,r3:2)   \/\/ set predicate reg if shifted divisor > current remainder$/;"	d
p0	lib/builtins/hexagon/divdi3.S	/^		p0 = cmp.gtu(r5:4,r3:2)     \/\/ check if divisor > dividend$/;"	d
p0	lib/builtins/hexagon/divsi3.S	/^		p0 = cmp.ge(r0,#0)$/;"	d
p0	lib/builtins/hexagon/divsi3.S	/^		p0 = cmp.gtu(r2,r1)$/;"	d
p0	lib/builtins/hexagon/divsi3.S	/^		p0 = cmp.gtu(r2,r5)$/;"	d
p0	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^	p0 = cmp.gt(kb, guard)$/;"	d
p0	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^        p0 = cmp.gt(k, c63)$/;"	d
p0	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^       p0 = bitsset(mant, mask)$/;"	d
p0	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^       p0 = tstbit(ia, #31)$/;"	d
p0	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^	p0 = cmp.gt(kp, #58)$/;"	d
p0	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^        p0 = cmp.gt(k, #58)$/;"	d
p0	lib/builtins/hexagon/fastmath_dlib_asm.S	/^        p0 = OR(p0, p1)$/;"	d
p0	lib/builtins/hexagon/fastmath_dlib_asm.S	/^        p0 = cmp.eq(mantch, zero0l)$/;"	d
p0	lib/builtins/hexagon/fastmath_dlib_asm.S	/^        p0 = cmp.eq(mantexpa, zero)$/;"	d
p0	lib/builtins/hexagon/fastmath_dlib_asm.S	/^        p0 = cmp.eq(mantexpa, zero0)$/;"	d
p0	lib/builtins/hexagon/fastmath_dlib_asm.S	/^        p0 = cmp.eq(manth, zerol)$/;"	d
p0	lib/builtins/hexagon/fastmath_dlib_asm.S	/^        p0 = or(p0, p1)$/;"	d
p0	lib/builtins/hexagon/memcpy_forward_vp4cp4n2.S	/^    p0 = cmp.eq(r2, #0)$/;"	d
p0	lib/builtins/hexagon/memcpy_forward_vp4cp4n2.S	/^    p0 = cmp.eq(r3, #0)$/;"	d
p0	lib/builtins/hexagon/memcpy_likely_aligned.S	/^		p0 = bitsclr(r0,#7)$/;"	d
p0	lib/builtins/hexagon/memcpy_likely_aligned.S	/^		p0 = bitsclr(r1,#7)$/;"	d
p0	lib/builtins/hexagon/moddi3.S	/^		p0 = cmp.gtu(r13:12,r3:2)   \/\/ set predicate reg if shifted divisor > current remainder$/;"	d
p0	lib/builtins/hexagon/moddi3.S	/^		p0 = cmp.gtu(r5:4,r3:2)     \/\/ check if divisor > dividend$/;"	d
p0	lib/builtins/hexagon/modsi3.S	/^		p0 = cmp.gtu(r1,r2)$/;"	d
p0	lib/builtins/hexagon/modsi3.S	/^		p0 = cmp.gtu(r2,r0)$/;"	d
p0	lib/builtins/hexagon/udivdi3.S	/^		p0 = cmp.gtu(r13:12,r3:2)   \/\/ set predicate reg if shifted divisor > current remainder$/;"	d
p0	lib/builtins/hexagon/udivdi3.S	/^		p0 = cmp.gtu(r5:4,r3:2)     \/\/ check if divisor > dividend$/;"	d
p0	lib/builtins/hexagon/udivmoddi4.S	/^		p0 = cmp.gtu(r13:12,r3:2)   \/\/ set predicate reg if shifted divisor > current remainder$/;"	d
p0	lib/builtins/hexagon/udivmoddi4.S	/^		p0 = cmp.gtu(r5:4,r3:2)     \/\/ check if divisor > dividend$/;"	d
p0	lib/builtins/hexagon/udivmodsi4.S	/^		p0 = cmp.eq(r6,#0)$/;"	d
p0	lib/builtins/hexagon/udivmodsi4.S	/^		p0 = cmp.gtu(r1,r0)$/;"	d
p0	lib/builtins/hexagon/udivmodsi4.S	/^		p0 = cmp.gtu(r2,r1)$/;"	d
p0	lib/builtins/hexagon/udivsi3.S	/^		p0 = cmp.gtu(r1,r0)$/;"	d
p0	lib/builtins/hexagon/udivsi3.S	/^		p0 = cmp.gtu(r2,r1)$/;"	d
p0	lib/builtins/hexagon/umoddi3.S	/^		p0 = cmp.gtu(r13:12,r3:2)   \/\/ set predicate reg if shifted divisor > current remainder$/;"	d
p0	lib/builtins/hexagon/umoddi3.S	/^		p0 = cmp.gtu(r5:4,r3:2)     \/\/ check if divisor > dividend$/;"	d
p0	lib/builtins/hexagon/umodsi3.S	/^		p0 = cmp.gtu(r1,r0)$/;"	d
p0	lib/builtins/hexagon/umodsi3.S	/^		p0 = cmp.gtu(r2,r0)$/;"	d
p1	lib/builtins/hexagon/dfaddsub.S	/^		p1 = cmp.gt(BH,#-1)$/;"	d
p1	lib/builtins/hexagon/dfaddsub.S	/^		p1 = dfclass(A,#0x08)		\/\/ A is infinity$/;"	d
p1	lib/builtins/hexagon/dfdiv.S	/^		p1 = dfclass(B,#0x10)$/;"	d
p1	lib/builtins/hexagon/dffma.S	/^		p1 = bitsclr(ATMPL,#(1<<FUDGE2)-1)$/;"	d
p1	lib/builtins/hexagon/dffma.S	/^		p1 = dfclass(A,#0x08)		\/\/ A is infinity$/;"	d
p1	lib/builtins/hexagon/dffma.S	/^		p1 = dfclass(B,#0x0e)		\/\/ B is nonzero$/;"	d
p1	lib/builtins/hexagon/dffma.S	/^		p1 = dfclass(C,#0x08)$/;"	d
p1	lib/builtins/hexagon/dffma.S	/^		p1 = dfclass(C,#0x10)$/;"	d
p1	lib/builtins/hexagon/dfminmax.S	/^		p1 = dfcmp.gt(A,B)		\/\/ AND B > A, don't swap$/;"	d
p1	lib/builtins/hexagon/dfminmax.S	/^		p1 = dfcmp.gt(B,A)$/;"	d
p1	lib/builtins/hexagon/dfmul.S	/^		p1 = bitsclr(PP_HH_L,#0x7)		\/\/ Are the LSB's clear?$/;"	d
p1	lib/builtins/hexagon/dfmul.S	/^		p1 = cmp.eq(PP_LL_L,#0)		\/\/ 64 lsb's 0?$/;"	d
p1	lib/builtins/hexagon/dfmul.S	/^		p1 = cmp.eq(PP_ODD_L,#0)	\/\/ 64 lsb's 0?$/;"	d
p1	lib/builtins/hexagon/dfmul.S	/^		p1 = dfclass(A,#0x08)		\/\/ A is infinity$/;"	d
p1	lib/builtins/hexagon/dfmul.S	/^		p1 = dfclass(B,#0x0e)		\/\/ B is nonzero$/;"	d
p1	lib/builtins/hexagon/divsi3.S	/^		p1 = cmp.ge(r1,#0)$/;"	d
p1	lib/builtins/hexagon/divsi3.S	/^		p1 = xor(p0,p1)$/;"	d
p1	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^        p1 = and(p1, p2)$/;"	d
p1	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^        p1 = cmp.eq(mantexpa, mantexpb)$/;"	d
p1	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^       p1 = cmp.eq(cff,#0x40)$/;"	d
p1	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^       p1 = cmp.eq(mag, #0)$/;"	d
p1	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^        p1 = and(p1, p2)$/;"	d
p1	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^        p1 = cmp.eq(mantx, mantb)$/;"	d
p1	lib/builtins/hexagon/fastmath_dlib_asm.S	/^        p1 = cmp.eq(mantch, minus1l)$/;"	d
p1	lib/builtins/hexagon/fastmath_dlib_asm.S	/^        p1 = cmp.eq(mantexpa, minus)$/;"	d
p1	lib/builtins/hexagon/fastmath_dlib_asm.S	/^        p1 = cmp.eq(mantexpa, minus1)$/;"	d
p1	lib/builtins/hexagon/fastmath_dlib_asm.S	/^        p1 = cmp.eq(manth, minusl)$/;"	d
p1	lib/builtins/hexagon/modsi3.S	/^		p1 = cmp.eq(r3,#0)$/;"	d
p1	lib/builtins/hexagon/sfsqrt_opt.S	/^    p1 = sfclass(R,#1)    \/\/ is zero?$/;"	d
p1	lib/builtins/hexagon/umodsi3.S	/^		p1 = cmp.eq(r2,#0)$/;"	d
p1	test/asan/TestCases/atexit_stats.cc	/^int *p1 = (int*)malloc(900);$/;"	v
p2	lib/builtins/hexagon/dfaddsub.S	/^		p2 = dfclass(B,#0x01)		\/\/ B is zero$/;"	d
p2	lib/builtins/hexagon/dfdiv.S	/^		p2 = dfclass(A,#DFCLASS_NONINFINITE)$/;"	d
p2	lib/builtins/hexagon/dfdiv.S	/^		p2 = dfclass(B,#DFCLASS_ZERO)$/;"	d
p2	lib/builtins/hexagon/dffma.S	/^		p2 = dfclass(B,#0x01)$/;"	d
p2	lib/builtins/hexagon/dfminmax.S	/^		p2 = dfcmp.eq(A,B)		\/\/ if A == B$/;"	d
p2	lib/builtins/hexagon/dfminmax.S	/^		p2 = dfcmp.eq(A,B)$/;"	d
p2	lib/builtins/hexagon/dfmul.S	/^		p2 = cmp.gt(TMP,#-1)$/;"	d
p2	lib/builtins/hexagon/dfmul.S	/^		p2 = dfclass(B,#0x01)$/;"	d
p2	lib/builtins/hexagon/divdi3.S	/^		p2 = tstbit(r1,#31)$/;"	d
p2	lib/builtins/hexagon/divsi3.S	/^		p2 = cmp.gtu(r2,r1)$/;"	d
p2	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^        p2 = cmp.eq(mantexpa, min)$/;"	d
p2	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^       p2 = cmp.gt(expo, #126)$/;"	d
p2	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^        p2 = cmp.eq(mantb, min)$/;"	d
p2	lib/builtins/hexagon/fastmath_dlib_asm.S	/^        p2 = cmp.eq(mantexpa, minmin)    \/\/is result 0x80....0$/;"	d
p2	lib/builtins/hexagon/modsi3.S	/^		p2 = cmp.ge(r0,#0)$/;"	d
p2	test/asan/TestCases/atexit_stats.cc	/^int *p2 = (int*)malloc(90000);$/;"	v
p3	lib/builtins/hexagon/dfaddsub.S	/^		p3 = cmp.gtu(ATMP,BTMP)$/;"	d
p3	lib/builtins/hexagon/dffma.S	/^		p3 = cmp.gt(CTMPH,#-1)$/;"	d
p3	lib/builtins/hexagon/dffma.S	/^		p3 = cmp.gtu(ATMP,BTMP)$/;"	d
p3	lib/builtins/hexagon/dfmul.S	/^		p3 = cmp.gt(PP_HH_H,#-1)		\/\/ is it positive?$/;"	d
p3	lib/builtins/hexagon/dfmul.S	/^		p3 = cmp.gtu(ATMP,BTMP)$/;"	d
p3	lib/builtins/hexagon/divdi3.S	/^		p3 = tstbit(r3,#31)$/;"	d
p3	lib/builtins/hexagon/divdi3.S	/^		p3 = xor(p2,p3)$/;"	d
p3	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^       p3 = cmp.ge(expo, #-126)$/;"	d
p3	lib/builtins/hexagon/moddi3.S	/^		p3 = tstbit(r1,#31)$/;"	d
p3	test/asan/TestCases/atexit_stats.cc	/^int *p3 = (int*)malloc(9000000);$/;"	v
p_	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^  uptr p_[kMaxNumChunks];$/;"	m	class:LargeMmapAllocatorPtrArrayStatic
p_aliases	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char **p_aliases;$/;"	m	struct:__sanitizer::__sanitizer_protoent
p_align	lib/sanitizer_common/sanitizer_freebsd.h	/^  __uint32_t p_align;$/;"	m	struct:__sanitizer::__anon95
p_filesz	lib/sanitizer_common/sanitizer_freebsd.h	/^  __uint32_t p_filesz;$/;"	m	struct:__sanitizer::__anon95
p_flags	lib/sanitizer_common/sanitizer_freebsd.h	/^  __uint32_t p_flags;$/;"	m	struct:__sanitizer::__anon95
p_memsz	lib/sanitizer_common/sanitizer_freebsd.h	/^  __uint32_t p_memsz;$/;"	m	struct:__sanitizer::__anon95
p_name	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char *p_name;$/;"	m	struct:__sanitizer::__sanitizer_protoent
p_offset	lib/sanitizer_common/sanitizer_freebsd.h	/^  __uint32_t p_offset;$/;"	m	struct:__sanitizer::__anon95
p_paddr	lib/sanitizer_common/sanitizer_freebsd.h	/^  __uint32_t p_paddr;$/;"	m	struct:__sanitizer::__anon95
p_proto	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int p_proto;$/;"	m	struct:__sanitizer::__sanitizer_protoent
p_thread_callback	test/asan/TestCases/Windows/tls_init.cc	/^const PIMAGE_TLS_CALLBACK p_thread_callback = my_thread_callback;$/;"	v
p_tls_var	test/asan/TestCases/Linux/unpoison_tls.cc	/^volatile int64_t *p_tls_var;$/;"	v
p_type	lib/sanitizer_common/sanitizer_freebsd.h	/^  __uint32_t p_type;$/;"	m	struct:__sanitizer::__anon95
p_vaddr	lib/sanitizer_common/sanitizer_freebsd.h	/^  __uint32_t p_vaddr;$/;"	m	struct:__sanitizer::__anon95
packing_ratio_log	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^    u64 packing_ratio_log;$/;"	m	class:SizeClassAllocator64::PackedCounterArray
pad	lib/sanitizer_common/sanitizer_atomic_clang_mips.h	/^  char pad[32 - sizeof(int)];$/;"	m	struct:__sanitizer::__anon97
pad	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int pad[4];$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
pad	test/asan/TestCases/Posix/asan-symbolize-sanity-test.cc	/^int pad[10];$/;"	v
pad	test/asan/TestCases/Posix/shared-lib-test.cc	/^int pad[10];$/;"	v
pad0_	lib/sanitizer_common/sanitizer_quarantine.h	/^  char pad0_[kCacheLineSize];$/;"	m	class:__sanitizer::Quarantine
pad1	test/asan/TestCases/Posix/dlclose-test.cc	/^static int pad1;$/;"	v	file:
pad1	test/msan/pr32842.c	/^  unsigned char pad1: 2, ihl:4, pad2: 2;$/;"	m	struct:iphdr	file:
pad1_	lib/sanitizer_common/sanitizer_quarantine.h	/^  char pad1_[kCacheLineSize];$/;"	m	class:__sanitizer::Quarantine
pad2	test/asan/TestCases/Posix/dlclose-test.cc	/^static int pad2;$/;"	v	file:
pad2	test/msan/pr32842.c	/^  unsigned char pad1: 2, ihl:4, pad2: 2;$/;"	m	struct:iphdr	file:
pad2_	lib/sanitizer_common/sanitizer_quarantine.h	/^  char pad2_[kCacheLineSize];$/;"	m	class:__sanitizer::Quarantine
pad_	lib/sanitizer_common/tests/sanitizer_mutex_test.cc	/^  char pad_[kCacheLineSize];$/;"	m	class:__sanitizer::TestData	file:
pad_	lib/tsan/tests/unit/tsan_mutex_test.cc	/^  char pad_[kCacheLineSize];$/;"	m	class:__tsan::TestData	file:
padding	lib/lsan/lsan_allocator.h	/^  uptr padding : 22;$/;"	m	struct:__lsan::ChunkMetadata
padding	test/asan/TestCases/Darwin/scribble.cc	/^  long padding;$/;"	m	struct:MyClass	file:
padding_	test/tsan/deadlock_detector_stress_test.cc	/^  char padding_[256 - sizeof(pthread_rwlock_t)];$/;"	m	class:PthreadRWLock	file:
padding_	test/tsan/deadlock_detector_stress_test.cc	/^  char padding_[64 - sizeof(pthread_mutex_t)];$/;"	m	class:PthreadMutex	file:
padding_	test/tsan/deadlock_detector_stress_test.cc	/^  char padding_[64 - sizeof(pthread_spinlock_t)];$/;"	m	class:PthreadSpinLock	file:
pageSize	lib/safestack/safestack.cc	/^static unsigned pageSize;$/;"	v	file:
page_size	lib/sanitizer_common/sanitizer_mac.cc	/^  integer_t page_size;$/;"	m	struct:__sanitizer::__sanitizer_task_vm_info	file:
page_size	test/sanitizer_common/TestCases/Linux/signal_segv_handler.cc	/^unsigned long page_size;$/;"	v
page_size_	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^  uptr page_size_;$/;"	m	class:LargeMmapAllocator
page_size_scaled_log	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^    const uptr page_size_scaled_log;$/;"	m	class:SizeClassAllocator64::FreePagesRangeTracker
page_size_scaled_log	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  const uptr page_size_scaled_log;$/;"	m	class:RangeRecorder	file:
param	lib/lsan/lsan_interceptors.cc	/^  void *param;$/;"	m	struct:std::ThreadParam	file:
param	lib/tsan/rtl/tsan_interceptors.cc	/^  void *param;$/;"	m	struct:ThreadParam	file:
parent_pid	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^  uptr parent_pid;$/;"	m	struct:__sanitizer::TracerThreadArgument	file:
parent_tid	lib/asan/asan_mac.cc	/^  u32 parent_tid;$/;"	m	struct:__asan::__anon47	file:
parent_tid	lib/lsan/lsan_mac.cc	/^  u32 parent_tid;$/;"	m	struct:__lsan::__anon10	file:
parent_tid	lib/sanitizer_common/sanitizer_thread_registry.h	/^  u32 parent_tid;$/;"	m	class:__sanitizer::ThreadContextBase
parent_tid	lib/tsan/rtl/tsan_report.h	/^  u32 parent_tid;$/;"	m	struct:__tsan::ReportThread
parent_tid	test/xray/TestCases/Posix/fork_basic_logging.cc	/^static uint64_t parent_tid;$/;"	v	file:
parseAndSetFilename	lib/profile/InstrProfilingFile.c	/^static void parseAndSetFilename(const char *FilenamePat,$/;"	f	file:
parseFilenamePattern	lib/profile/InstrProfilingFile.c	/^static int parseFilenamePattern(const char *FilenamePat,$/;"	f	file:
parseSystemVersionPList	lib/builtins/os_version_check.c	/^static void parseSystemVersionPList(void *Unused) {$/;"	f	file:
parse_flag	lib/sanitizer_common/sanitizer_flag_parser.cc	/^void FlagParser::parse_flag() {$/;"	f	class:__sanitizer::FlagParser
parse_flags	lib/sanitizer_common/sanitizer_flag_parser.cc	/^void FlagParser::parse_flags() {$/;"	f	class:__sanitizer::FlagParser
parse_lines	lib/asan/scripts/asan_symbolize.py	/^  def parse_lines(self, lines):$/;"	m	class:BreakpadSymbolizer
parser	lib/asan/scripts/asan_symbolize.py	/^  parser = argparse.ArgumentParser($/;"	v	class:SymbolizationLoop
parser	lib/sanitizer_common/scripts/litlint.py	/^  parser = optparse.OptionParser()$/;"	v
parser_	lib/sanitizer_common/sanitizer_flags.cc	/^  FlagParser *parser_;$/;"	m	class:__sanitizer::FlagHandlerInclude	file:
part1	test/esan/TestCases/struct-simple.cpp	/^void part1()$/;"	f
part2	test/esan/TestCases/struct-simple.cpp	/^void part2()$/;"	f
passwd	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^CHECK_TYPE_SIZE(passwd);$/;"	v
passwd	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^CHECK_TYPE_SIZE(passwd);$/;"	v
passwd	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^CHECK_TYPE_SIZE(passwd);$/;"	v
passwd	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^CHECK_TYPE_SIZE(passwd);$/;"	v
path	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^  Link path[kMaxMutex];$/;"	m	struct:__sanitizer::DDPhysicalThread	file:
path_	lib/sanitizer_common/sanitizer_symbolizer_internal.h	/^  const char *path_;$/;"	m	class:__sanitizer::SymbolizerProcess
path_max	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned path_max = PATH_MAX;$/;"	m	namespace:__sanitizer	file:
path_max	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^unsigned path_max = PATH_MAX;$/;"	m	namespace:__sanitizer	file:
path_max	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned path_max = PATH_MAX;$/;"	m	namespace:__sanitizer	file:
path_max	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned path_max = PATH_MAX;$/;"	m	namespace:__sanitizer	file:
path_prefix	lib/sanitizer_common/sanitizer_file.h	/^  char path_prefix[kMaxPathLength];$/;"	m	struct:__sanitizer::ReportFile
pc	lib/asan/asan_errors.h	/^  uptr pc, bp, sp;$/;"	m	struct:__asan::ErrorGeneric
pc	lib/asan/asan_errors.h	/^  uptr pc, bp, sp;$/;"	m	struct:__asan::ErrorInvalidPointerPair
pc	lib/asan/asan_fake_stack.h	/^  uptr pc;     \/\/ Modified by the instrumented code.$/;"	m	struct:__asan::FakeFrame
pc	lib/sanitizer_common/sanitizer_common.h	/^  uptr pc;$/;"	m	struct:__sanitizer::SignalContext
pc	lib/tsan/go/tsan_go.cc	/^  uptr pc;$/;"	m	struct:__tsan::SymbolizeCodeContext	file:
pc	lib/tsan/rtl/tsan_interceptors.cc	/^  const uptr pc;$/;"	m	struct:TsanInterceptorContext	file:
pc	lib/tsan/rtl/tsan_interceptors.cc	/^  uptr pc;$/;"	m	struct:CondMutexUnlockCtx	file:
pc	lib/tsan/rtl/tsan_interceptors.cc	/^  uptr pc;$/;"	m	struct:dl_iterate_phdr_data	file:
pc	lib/tsan/rtl/tsan_rtl_mutex.cc	/^  uptr pc;$/;"	m	struct:__tsan::Callback	file:
pc	lib/tsan/rtl/tsan_rtl_thread.cc	/^  uptr pc;$/;"	m	struct:__tsan::OnCreatedArgs	file:
pc	lib/ubsan/ubsan_diag.h	/^  uptr pc;$/;"	m	struct:__ubsan::ReportOptions
pc_	lib/tsan/rtl/tsan_interceptors.h	/^  const uptr pc_;$/;"	m	class:__tsan::ScopedInterceptor
pc_count	test/asan/TestCases/coverage-trace-pc.cc	/^int pc_count;$/;"	v
pc_guard_controller	lib/sanitizer_common/sanitizer_coverage_fuchsia.cc	/^static TracePcGuardController pc_guard_controller;$/;"	m	namespace:__sancov::__anon63	file:
pc_guard_controller	lib/sanitizer_common/sanitizer_coverage_libcdep_new.cc	/^static TracePcGuardController pc_guard_controller;$/;"	m	namespace:__sancov::__anon64	file:
pc_or_addr	lib/tsan/rtl/tsan_rtl.h	/^  uptr pc_or_addr;$/;"	m	struct:__tsan::FiredSuppression
pc_vector	lib/sanitizer_common/sanitizer_coverage_libcdep_new.cc	/^  InternalMmapVectorNoCtor<uptr> pc_vector;$/;"	m	class:__sancov::__anon64::TracePcGuardController	file:
pcmd	utils/generate_netbsd_ioctls.awk	/^function pcmd(string)$/;"	f
pcmd	utils/generate_netbsd_syscalls.awk	/^function pcmd(string)$/;"	f
pending	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^  Link pending[kMaxMutex];$/;"	m	struct:__sanitizer::DDPhysicalThread	file:
pending_signals	lib/tsan/rtl/tsan_interceptors.cc	/^  SignalDesc pending_signals[kSigCount];$/;"	m	struct:__tsan::ThreadSignalContext	file:
per_class_	lib/sanitizer_common/sanitizer_allocator_local_cache.h	/^  PerClass per_class_[kNumClasses];$/;"	m	struct:SizeClassAllocator32LocalCache
per_class_	lib/sanitizer_common/sanitizer_allocator_local_cache.h	/^  PerClass per_class_[kNumClasses];$/;"	m	struct:SizeClassAllocator64LocalCache
per_thread	lib/asan/asan_fuchsia.cc	/^static thread_local void *per_thread;$/;"	m	namespace:__asan	file:
per_thread	lib/asan/asan_rtems.cc	/^static thread_local void *per_thread;$/;"	m	namespace:__asan	file:
performSanityChecks	lib/scudo/scudo_allocator.cpp	/^NOINLINE void Allocator::performSanityChecks() {$/;"	f	class:__scudo::Allocator
pfunc	test/builtins/Unit/clear_cache_test.c	/^typedef int (*pfunc)(void);$/;"	t	file:
pfunc	test/builtins/Unit/enable_execute_stack_test.c	/^typedef int (*pfunc)(void);$/;"	t	file:
phys_footprint	lib/sanitizer_common/sanitizer_mac.cc	/^  mach_vm_size_t phys_footprint;$/;"	m	struct:__sanitizer::__sanitizer_task_vm_info	file:
pid_	lib/sanitizer_common/sanitizer_linux.h	/^  pid_t pid_;$/;"	m	class:__sanitizer::ThreadLister
pid_	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^  pid_t pid_;$/;"	m	class:__sanitizer::ThreadSuspender	file:
pid_str_	lib/sanitizer_common/sanitizer_symbolizer_mac.cc	/^  char pid_str_[16];$/;"	m	class:__sanitizer::AtosSymbolizerProcess	file:
pid_t	lib/sanitizer_common/sanitizer_internal_defs.h	/^typedef int pid_t;$/;"	t	namespace:__sanitizer
pid_t	lib/sanitizer_common/sanitizer_internal_defs.h	/^typedef long pid_t;$/;"	t	namespace:__sanitizer
pid_t_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned pid_t_sz = sizeof(pid_t);$/;"	m	namespace:__sanitizer	file:
pid_t_sz	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^unsigned pid_t_sz = sizeof(pid_t);$/;"	m	namespace:__sanitizer	file:
pid_t_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned pid_t_sz = sizeof(pid_t);$/;"	m	namespace:__sanitizer	file:
pid_t_sz	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned pid_t_sz = sizeof(pid_t);$/;"	m	namespace:__sanitizer	file:
piod_addr	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  void *piod_addr;$/;"	m	struct:__sanitizer::__sanitizer_ptrace_io_desc
piod_len	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  uptr piod_len;$/;"	m	struct:__sanitizer::__sanitizer_ptrace_io_desc
piod_offs	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  void *piod_offs;$/;"	m	struct:__sanitizer::__sanitizer_ptrace_io_desc
piod_op	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int piod_op;$/;"	m	struct:__sanitizer::__sanitizer_ptrace_io_desc
pipes	test/tsan/fd_close_norace2.cc	/^int pipes[2];$/;"	v
pkey	lib/sanitizer_common/tests/sanitizer_allocator_testlib.cc	/^static pthread_key_t pkey;$/;"	m	namespace:__anon59	file:
pl_event	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int pl_event;$/;"	m	struct:__sanitizer::__sanitizer_ptrace_lwpinfo
pl_lwpid	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  __sanitizer_lwpid_t pl_lwpid;$/;"	m	struct:__sanitizer::__sanitizer_ptrace_lwpinfo
pointer_alignment	lib/lsan/lsan_common.h	/^  uptr pointer_alignment() const {$/;"	f	struct:__lsan::Flags
pointers	test/asan/TestCases/Posix/invalid-pointer-pairs-threads.cc	/^char *pointers[2];$/;"	v
poison_heap	lib/asan/asan_activation.cc	/^  bool poison_heap;$/;"	m	struct:__asan::AsanDeactivatedFlags	file:
poison_stack_ahead	test/msan/getaddrinfo.cc	/^void poison_stack_ahead() {$/;"	f
poisoned	lib/msan/tests/msan_test.cc	/^static T poisoned(T Va, S Sa) {$/;"	f	file:
poisoned1	test/asan/TestCases/intercept-rethrow-exception.cc	/^char *poisoned1;$/;"	m	namespace:__anon135	file:
poisoned2	test/asan/TestCases/intercept-rethrow-exception.cc	/^char *poisoned2;$/;"	m	namespace:__anon135	file:
poisoned_array	lib/msan/tests/msan_test.cc	/^static U8 poisoned_array[100];$/;"	v	file:
poll	test/asan/TestCases/Posix/init-order-pthread-create.cc	/^void *poll(void *arg) {$/;"	f
pollfd	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^CHECK_TYPE_SIZE(pollfd);$/;"	v
pollfd	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^CHECK_TYPE_SIZE(pollfd);$/;"	v
pollfd	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^CHECK_TYPE_SIZE(pollfd);$/;"	v
pollfd	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^CHECK_TYPE_SIZE(pollfd);$/;"	v
pop_back	lib/esan/esan_circular_buffer.h	/^  void pop_back() {$/;"	f	class:__esan::CircularBuffer
pop_back	lib/sanitizer_common/sanitizer_common.h	/^  void pop_back() {$/;"	f	class:__sanitizer::InternalMmapVectorNoCtor
pop_front	lib/sanitizer_common/sanitizer_list.h	/^  void pop_front() {$/;"	f	struct:__sanitizer::IntrusiveList
populateRecords	lib/xray/xray_profile_collector.cc	/^static void populateRecords(ProfileRecordArray &PRs,$/;"	f	namespace:__xray::profileCollectorService::__anon28
pos	lib/tsan/rtl/tsan_dense_alloc.h	/^  uptr pos;$/;"	m	class:__tsan::DenseSlabAllocCache
pos_	lib/sanitizer_common/sanitizer_flag_parser.h	/^  uptr pos_;$/;"	m	class:__sanitizer::FlagParser
posix_memalign	lib/asan/asan_malloc_linux.cc	/^  int (*posix_memalign)(void **memptr, uptr alignment, uptr size);$/;"	m	struct:MallocDebugL	file:
posix_memalign	lib/sanitizer_common/sanitizer_rtems.cc	17;"	d	file:
posix_memalign	lib/sanitizer_common/tests/sanitizer_allocator_testlib.cc	/^int posix_memalign(void **memptr, size_t alignment, size_t size) {$/;"	f
posix_memalign	lib/scudo/scudo_malloc.cpp	/^int posix_memalign(void **memptr, size_t alignment, size_t size) {$/;"	f
possible_regions	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^  ByteMap possible_regions;$/;"	m	class:SizeClassAllocator32
post	lib/xray/xray_profile_collector.cc	/^void post(const FunctionCallTrie &T, tid_t TId) {$/;"	f	namespace:__xray::profileCollectorService
post1	test/asan/TestCases/intra-object-overflow.cc	/^  int post1, post2;$/;"	m	class:Foo	file:
post2	test/asan/TestCases/intra-object-overflow.cc	/^  int post1, post2;$/;"	m	class:Foo	file:
postCurrentThreadFCT	lib/xray/xray_profiling.cc	/^static void postCurrentThreadFCT(ProfilingData &TLD) {$/;"	f	namespace:__xray::__anon30
pp	test/lsan/TestCases/stale_stack_leak.cc	/^void **pp;$/;"	v
pre1	test/asan/TestCases/intra-object-overflow.cc	/^  int pre1, pre2;$/;"	m	class:Foo	file:
pre2	test/asan/TestCases/intra-object-overflow.cc	/^  int pre1, pre2;$/;"	m	class:Foo	file:
pre_asan	test/asan/TestCases/Linux/preinstalled_signal.cc	/^struct KernelSigaction pre_asan = {};$/;"	v	typeref:struct:KernelSigaction
pretend_to_do_something	test/asan/TestCases/heavy_uar_test.cc	/^char *pretend_to_do_something(char *x) {$/;"	f
pretend_to_do_something	test/asan/TestCases/throw_call_test.cc	/^inline void pretend_to_do_something(void *x) {$/;"	f
pretend_to_do_something	test/asan/TestCases/throw_invoke_test.cc	/^inline void pretend_to_do_something(void *x) {$/;"	f
prev	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  struct __sanitizer__obstack_chunk *prev;$/;"	m	struct:__sanitizer__obstack_chunk	typeref:struct:__sanitizer__obstack_chunk::__sanitizer__obstack_chunk
prev	lib/tsan/rtl/tsan_interface_ann.cc	/^  ExpectRace *prev;$/;"	m	struct:__tsan::ExpectRace	file:
prev_	lib/sanitizer_common/sanitizer_allocator_stats.h	/^  AllocatorStats *prev_;$/;"	m	class:AllocatorStats
prev_id	lib/msan/msan_chained_origin_depot.cc	/^    int prev_id() { return node_->prev_id; }$/;"	f	struct:__msan::ChainedOriginDepotNode::Handle
prev_id	lib/msan/msan_chained_origin_depot.cc	/^  u32 prev_id;$/;"	m	struct:__msan::ChainedOriginDepotDesc	file:
prev_id	lib/msan/msan_chained_origin_depot.cc	/^  u32 prev_id;$/;"	m	struct:__msan::ChainedOriginDepotNode	file:
prev_pthread_introspection_hook	lib/tsan/rtl/tsan_platform_mac.cc	/^static pthread_introspection_hook_t prev_pthread_introspection_hook;$/;"	m	namespace:__tsan	file:
previous_peak_rss	lib/fuzzer/afl/afl_driver.cpp	/^static uint32_t previous_peak_rss = 0;$/;"	v	file:
primary_	lib/sanitizer_common/sanitizer_allocator_combined.h	/^  PrimaryAllocator primary_;$/;"	m	class:CombinedAllocator
print	test/cfi/two-vcalls.cpp	/^__attribute__((noinline)) void print(Base* ptr) {$/;"	f
print	test/ubsan/TestCases/TypeCheck/Linux/PR33221.cpp	/^  virtual void print() {}$/;"	f	class:Base
print	test/ubsan/TestCases/TypeCheck/Linux/PR33221.cpp	/^  void print() {}$/;"	f	class:Derived
print	test/ubsan/TestCases/TypeCheck/PR33221.cpp	/^  virtual void print() {}$/;"	f	class:Base
print	test/ubsan/TestCases/TypeCheck/PR33221.cpp	/^  void print() {}$/;"	f	class:Derived
printStats	lib/scudo/scudo_allocator.cpp	/^  void printStats() {$/;"	f	struct:__scudo::Allocator
printStats	lib/scudo/scudo_allocator_combined.h	/^  void printStats() {$/;"	f	class:CombinedAllocator
print_address	test/sanitizer_common/print_address.h	/^void print_address(const char *str, int n, ...) {$/;"	f
print_and_exit	test/shadowcallstack/overflow.c	/^void print_and_exit(void) {$/;"	f
print_child_tid	test/xray/TestCases/Posix/fork_basic_logging.cc	/^void __attribute__((noinline)) print_child_tid(uint64_t tid)$/;"	f
print_my_class_name	test/asan/TestCases/Darwin/scribble.cc	/^void MyClass::print_my_class_name() {$/;"	f	class:MyClass
print_parent_or_child	test/xray/TestCases/Posix/fork_basic_logging.cc	/^[[clang::xray_always_instrument]] void __attribute__((noinline)) print_parent_or_child()$/;"	f
print_parent_tid	test/xray/TestCases/Posix/fork_basic_logging.cc	/^void __attribute__((noinline)) print_parent_tid(uint64_t tid)$/;"	f
printer	test/xray/TestCases/Posix/custom-event-handler-alignment.cc	/^void printer(void* ptr, size_t size) {$/;"	f
printing_finalize	test/xray/TestCases/Posix/logging-modes.cc	/^[[clang::xray_never_instrument]] XRayLogInitStatus printing_finalize() {$/;"	f
printing_flush_log	test/xray/TestCases/Posix/logging-modes.cc	/^[[clang::xray_never_instrument]] XRayLogFlushStatus printing_flush_log() {$/;"	f
printing_handler	test/xray/TestCases/Posix/logging-modes.cc	/^[[clang::xray_never_instrument]] void printing_handler(int32_t fid,$/;"	f
printing_init	test/xray/TestCases/Posix/logging-modes.cc	/^printing_init(size_t BufferSize, size_t MaxBuffers, void *Config,$/;"	f
proc	lib/tsan/go/tsan_go.cc	/^Processor *ThreadState::proc() {$/;"	f	class:__tsan::ThreadState
proc	lib/tsan/rtl/tsan_mman.cc	/^  Processor *proc;$/;"	m	struct:__tsan::GlobalProc	file:
proc	lib/tsan/rtl/tsan_rtl.h	/^  Processor *proc() { return proc1; }$/;"	f	struct:__tsan::ThreadState
proc	test/builtins/Unit/trampoline_setup_test.c	/^nested_func_t proc;$/;"	v
proc1	lib/tsan/rtl/tsan_rtl.h	/^  Processor *proc1;$/;"	m	struct:__tsan::ThreadState
proc_self_maps	lib/sanitizer_common/sanitizer_linux.h	/^  ProcSelfMapsBuff proc_self_maps;$/;"	m	struct:__sanitizer::MemoryMappingLayoutData
proc_yield	lib/sanitizer_common/sanitizer_atomic_clang_other.h	/^INLINE void proc_yield(int cnt) {$/;"	f	namespace:__sanitizer
proc_yield	lib/sanitizer_common/sanitizer_atomic_clang_x86.h	/^INLINE void proc_yield(int cnt) {$/;"	f	namespace:__sanitizer
proc_yield	lib/sanitizer_common/sanitizer_atomic_msvc.h	/^INLINE void proc_yield(int cnt) {$/;"	f	namespace:__sanitizer
processCacheFragCompilationUnitExit	lib/esan/cache_frag.cpp	/^void processCacheFragCompilationUnitExit(void *Ptr) {$/;"	f	namespace:__esan
processCacheFragCompilationUnitInit	lib/esan/cache_frag.cpp	/^void processCacheFragCompilationUnitInit(void *Ptr) {$/;"	f	namespace:__esan
processCompilationUnitExit	lib/esan/esan.cpp	/^void processCompilationUnitExit(void *Ptr) {$/;"	f	namespace:__esan
processCompilationUnitInit	lib/esan/esan.cpp	/^void processCompilationUnitInit(void *Ptr) {$/;"	f	namespace:__esan
processRangeAccess	lib/esan/esan.cpp	/^void processRangeAccess(uptr PC, uptr Addr, int Size, bool IsWrite) {$/;"	f	namespace:__esan
processRangeAccessWorkingSet	lib/esan/working_set.cpp	/^void processRangeAccessWorkingSet(uptr PC, uptr Addr, SIZE_T Size,$/;"	f	namespace:__esan
processSigaction	lib/esan/esan.cpp	/^bool processSigaction(int SigNum, const void *Act, void *OldAct) {$/;"	f	namespace:__esan
processSignal	lib/esan/esan.cpp	/^bool processSignal(int SigNum, void (*Handler)(int), void (**Result)(int)) {$/;"	f	namespace:__esan
processSigprocmask	lib/esan/esan.cpp	/^bool processSigprocmask(int How, void *Set, void *OldSet) {$/;"	f	namespace:__esan
processWorkingSetSigaction	lib/esan/working_set_posix.cpp	/^bool processWorkingSetSigaction(int SigNum, const void *ActVoid,$/;"	f	namespace:__esan
processWorkingSetSignal	lib/esan/working_set_posix.cpp	/^bool processWorkingSetSignal(int SigNum, void (*Handler)(int),$/;"	f	namespace:__esan
processWorkingSetSigprocmask	lib/esan/working_set_posix.cpp	/^bool processWorkingSetSigprocmask(int How, void *Set, void *OldSet) {$/;"	f	namespace:__esan
process_	lib/sanitizer_common/sanitizer_symbolizer_mac.h	/^  AtosSymbolizerProcess *process_;$/;"	m	class:__sanitizer::AtosSymbolizer
process_buffer	test/xray/TestCases/Posix/logging-modes.cc	/^void process_buffer(const char *, XRayBuffer) { ++buffer_counter; }$/;"	f
process_buffer	test/xray/TestCases/Posix/profiling-multi-threaded.cc	/^[[clang::xray_never_instrument]] void process_buffer(const char *, XRayBuffer) {$/;"	f
process_buffer	test/xray/TestCases/Posix/profiling-single-threaded.cc	/^[[clang::xray_never_instrument]] void process_buffer(const char *, XRayBuffer) {$/;"	f
process_line_echo	lib/asan/scripts/asan_symbolize.py	/^  def process_line_echo(self, line):$/;"	m	class:SymbolizationLoop
process_line_posix	lib/asan/scripts/asan_symbolize.py	/^  def process_line_posix(self, line):$/;"	m	class:SymbolizationLoop
process_logfile	lib/asan/scripts/asan_symbolize.py	/^  def process_logfile(self):$/;"	m	class:SymbolizationLoop
process_name_cache_str	lib/sanitizer_common/sanitizer_common.cc	/^static char process_name_cache_str[kMaxPathLength];$/;"	m	namespace:__sanitizer	file:
process_signals	test/tsan/signal_sync2.cc	/^__thread int process_signals;$/;"	v
process_vm_readwritev_fn	test/msan/Linux/process_vm_readv.cc	/^typedef ssize_t (*process_vm_readwritev_fn)(pid_t, const iovec *, unsigned long,$/;"	t	file:
process_was_dumpable_	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^  int process_was_dumpable_;$/;"	m	class:__sanitizer::StopTheWorldScope	file:
procmapsInit	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^static void procmapsInit(InternalMmapVectorNoCtor<LoadedModule> *modules) {$/;"	f	namespace:__sanitizer
prof_	test/tsan/custom_mutex.h	/^  const bool prof_;$/;"	m	class:Mutex
prof_data_	test/tsan/custom_mutex.h	/^  static int prof_data_;$/;"	m	class:Mutex
prof_data_	test/tsan/custom_mutex.h	/^int Mutex::prof_data_;$/;"	m	class:Mutex
prof_mu_	test/tsan/custom_mutex.h	/^  static Mutex prof_mu_;$/;"	m	class:Mutex
profileCollectorService	lib/xray/xray_profile_collector.cc	/^namespace profileCollectorService {$/;"	n	namespace:__xray	file:
profileCollectorService	lib/xray/xray_profile_collector.h	/^namespace profileCollectorService {$/;"	n	namespace:__xray
profilingFlags	lib/xray/xray_profiling_flags.h	/^inline ProfilerFlags *profilingFlags() {$/;"	f	namespace:__xray
prog_name	lib/sanitizer_common/scripts/sancov.py	/^  prog_name = sys.argv[0]$/;"	v
prog_name	lib/sanitizer_common/scripts/sancov.py	/^prog_name = ""$/;"	v
protection	lib/sanitizer_common/sanitizer_procmaps.h	/^  uptr protection;$/;"	m	class:__sanitizer::MemoryMappedSegment
ps	test/BlocksRuntime/byrefstruct.c	/^    unsigned long ps[30];$/;"	m	struct:__anon144	file:
ps	test/BlocksRuntime/large-struct.c	/^    unsigned long ps[30];$/;"	m	struct:__anon142	file:
pt	lib/sanitizer_common/sanitizer_deadlock_detector_interface.h	/^  DDPhysicalThread *pt;$/;"	m	struct:__sanitizer::DDCallback
pta_flags	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int pta_flags;$/;"	m	struct:__sanitizer::__anon83
pta_flags	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  int pta_flags;$/;"	m	struct:__sanitizer::__anon91
pta_magic	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  unsigned int pta_magic;$/;"	m	struct:__sanitizer::__anon83
pta_magic	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  unsigned int pta_magic;$/;"	m	struct:__sanitizer::__anon91
pta_private	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  void *pta_private;$/;"	m	struct:__sanitizer::__anon83
pta_private	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  void *pta_private;$/;"	m	struct:__sanitizer::__anon91
pthread_attr_t_max_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  const int pthread_attr_t_max_sz = 128;$/;"	m	namespace:__sanitizer
pthread_attr_t_max_sz	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^const int pthread_attr_t_max_sz = 128;$/;"	m	namespace:__sanitizer
pthread_cond_t_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned pthread_cond_t_sz = sizeof(pthread_cond_t);$/;"	m	namespace:__sanitizer	file:
pthread_cond_t_sz	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^unsigned pthread_cond_t_sz = sizeof(pthread_cond_t);$/;"	m	namespace:__sanitizer	file:
pthread_cond_t_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned pthread_cond_t_sz = sizeof(pthread_cond_t);$/;"	m	namespace:__sanitizer	file:
pthread_cond_t_sz	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned pthread_cond_t_sz = sizeof(pthread_cond_t);$/;"	m	namespace:__sanitizer	file:
pthread_create_cb	lib/dfsan/dfsan_custom.cc	/^static void *pthread_create_cb(void *p) {$/;"	f	file:
pthread_create_info	lib/dfsan/dfsan_custom.cc	/^struct pthread_create_info {$/;"	s	file:
pthread_create_test_cb	test/dfsan/custom.cc	/^void *pthread_create_test_cb(void *p) {$/;"	f
pthread_destructor	test/lsan/TestCases/many_tls_keys.cc	/^void pthread_destructor(void *arg) {$/;"	f
pthread_exit	lib/sanitizer_common/tests/sanitizer_pthread_wrappers.h	/^inline void pthread_exit(void *retval) {$/;"	f
pthread_getattr_np	lib/sanitizer_common/sanitizer_linux_libcdep.cc	41;"	d	file:
pthread_ids_	lib/sanitizer_common/tests/sanitizer_linux_test.cc	/^  std::vector<pthread_t> pthread_ids_;$/;"	m	class:__sanitizer::ThreadListerTest	file:
pthread_introspection_hook_t	lib/tsan/rtl/tsan_platform_mac.cc	/^typedef void (*pthread_introspection_hook_t)(unsigned int event,$/;"	t	namespace:__tsan	file:
pthread_key_t	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^CHECK_TYPE_SIZE(pthread_key_t);$/;"	v
pthread_key_t	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^CHECK_TYPE_SIZE(pthread_key_t);$/;"	v
pthread_key_t	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^CHECK_TYPE_SIZE(pthread_key_t);$/;"	v
pthread_key_t	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^CHECK_TYPE_SIZE(pthread_key_t);$/;"	v
pthread_mutex_t_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned pthread_mutex_t_sz = sizeof(pthread_mutex_t);$/;"	m	namespace:__sanitizer	file:
pthread_mutex_t_sz	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^unsigned pthread_mutex_t_sz = sizeof(pthread_mutex_t);$/;"	m	namespace:__sanitizer	file:
pthread_mutex_t_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned pthread_mutex_t_sz = sizeof(pthread_mutex_t);$/;"	m	namespace:__sanitizer	file:
pthread_mutex_t_sz	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned pthread_mutex_t_sz = sizeof(pthread_mutex_t);$/;"	m	namespace:__sanitizer	file:
pthread_t	lib/sanitizer_common/tests/sanitizer_pthread_wrappers.h	/^typedef HANDLE pthread_t;$/;"	t
pthread_t_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned pthread_t_sz = sizeof(pthread_t);$/;"	m	namespace:__sanitizer	file:
pthread_t_sz	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^unsigned pthread_t_sz = sizeof(pthread_t);$/;"	m	namespace:__sanitizer	file:
pthread_t_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned pthread_t_sz = sizeof(pthread_t);$/;"	m	namespace:__sanitizer	file:
pthread_t_sz	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned pthread_t_sz = sizeof(pthread_t);$/;"	m	namespace:__sanitizer	file:
ptr	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^  void *ptr;$/;"	m	struct:Event	file:
ptr	test/asan/TestCases/Linux/calloc-preload.c	/^static void *ptr;$/;"	v	file:
ptr	test/asan/TestCases/use-after-scope-goto.cc	/^int *ptr;$/;"	v
ptr1	test/lsan/TestCases/many_tls_keys.cc	/^__thread void *ptr1;$/;"	v
ptr2	test/lsan/TestCases/many_tls_keys.cc	/^__thread void *ptr2;$/;"	v
ptr3	test/lsan/TestCases/many_tls_keys.cc	/^__thread void *ptr3;$/;"	v
ptr4	test/lsan/TestCases/many_tls_keys.cc	/^__thread void *ptr4;$/;"	v
ptr5	test/lsan/TestCases/many_tls_keys.cc	/^__thread void *ptr5;$/;"	v
ptr_	lib/interception/interception_win.cc	/^  T *ptr_;$/;"	m	class:__interception::__anon13::RVAPtr	file:
ptr_array_	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^  PtrArrayT ptr_array_;$/;"	m	class:LargeMmapAllocator
ptr_sink	test/sanitizer_common/TestCases/Posix/weak_hook_test.cc	/^static volatile void *ptr_sink;$/;"	v	file:
ptr_test	test/safestack/pthread.c	/^static int ptr_test = 42;$/;"	v	file:
ptrace_geteventmsg	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  int ptrace_geteventmsg = PTRACE_GETEVENTMSG;$/;"	m	namespace:__sanitizer	file:
ptrace_getfpregs	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  int ptrace_getfpregs = -1;$/;"	m	namespace:__sanitizer	file:
ptrace_getfpregs	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  int ptrace_getfpregs = PTRACE_GETFPREGS;$/;"	m	namespace:__sanitizer	file:
ptrace_getfpxregs	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  int ptrace_getfpxregs = -1;$/;"	m	namespace:__sanitizer	file:
ptrace_getfpxregs	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  int ptrace_getfpxregs = PTRACE_GETFPXREGS;$/;"	m	namespace:__sanitizer	file:
ptrace_getregs	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  int ptrace_getregs = -1;$/;"	m	namespace:__sanitizer	file:
ptrace_getregs	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  int ptrace_getregs = PTRACE_GETREGS;$/;"	m	namespace:__sanitizer	file:
ptrace_getregset	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  int ptrace_getregset = -1;$/;"	m	namespace:__sanitizer	file:
ptrace_getregset	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  int ptrace_getregset = PTRACE_GETREGSET;$/;"	m	namespace:__sanitizer	file:
ptrace_getsiginfo	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  int ptrace_getsiginfo = -1;$/;"	m	namespace:__sanitizer	file:
ptrace_getsiginfo	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  int ptrace_getsiginfo = PTRACE_GETSIGINFO;$/;"	m	namespace:__sanitizer	file:
ptrace_getvfpregs	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  int ptrace_getvfpregs = -1;$/;"	m	namespace:__sanitizer	file:
ptrace_getvfpregs	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  int ptrace_getvfpregs = PTRACE_GETVFPREGS;$/;"	m	namespace:__sanitizer	file:
ptrace_peekdata	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  int ptrace_peekdata = PTRACE_PEEKDATA;$/;"	m	namespace:__sanitizer	file:
ptrace_peektext	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  int ptrace_peektext = PTRACE_PEEKTEXT;$/;"	m	namespace:__sanitizer	file:
ptrace_peekuser	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  int ptrace_peekuser = PTRACE_PEEKUSER;$/;"	m	namespace:__sanitizer	file:
ptrace_piod_read_auxv	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^int ptrace_piod_read_auxv = PIOD_READ_AUXV;$/;"	m	namespace:__sanitizer	file:
ptrace_piod_read_d	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^int ptrace_piod_read_d = PIOD_READ_D;$/;"	m	namespace:__sanitizer	file:
ptrace_piod_read_i	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^int ptrace_piod_read_i = PIOD_READ_I;$/;"	m	namespace:__sanitizer	file:
ptrace_piod_write_d	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^int ptrace_piod_write_d = PIOD_WRITE_D;$/;"	m	namespace:__sanitizer	file:
ptrace_piod_write_i	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^int ptrace_piod_write_i = PIOD_WRITE_I;$/;"	m	namespace:__sanitizer	file:
ptrace_pt_get_event_mask	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^int ptrace_pt_get_event_mask = PT_GET_EVENT_MASK;$/;"	m	namespace:__sanitizer	file:
ptrace_pt_get_process_state	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^int ptrace_pt_get_process_state = PT_GET_PROCESS_STATE;$/;"	m	namespace:__sanitizer	file:
ptrace_pt_get_siginfo	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^int ptrace_pt_get_siginfo = PT_GET_SIGINFO;$/;"	m	namespace:__sanitizer	file:
ptrace_pt_getdbregs	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^int ptrace_pt_getdbregs = -1;$/;"	m	namespace:__sanitizer	file:
ptrace_pt_getdbregs	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^int ptrace_pt_getdbregs = PT_GETDBREGS;$/;"	m	namespace:__sanitizer	file:
ptrace_pt_getfpregs	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^int ptrace_pt_getfpregs = -1;$/;"	m	namespace:__sanitizer	file:
ptrace_pt_getfpregs	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^int ptrace_pt_getfpregs = PT_GETFPREGS;$/;"	m	namespace:__sanitizer	file:
ptrace_pt_getregs	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^int ptrace_pt_getregs = -1;$/;"	m	namespace:__sanitizer	file:
ptrace_pt_getregs	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^int ptrace_pt_getregs = PT_GETREGS;$/;"	m	namespace:__sanitizer	file:
ptrace_pt_io	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^int ptrace_pt_io = PT_IO;$/;"	m	namespace:__sanitizer	file:
ptrace_pt_lwpinfo	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^int ptrace_pt_lwpinfo = PT_LWPINFO;$/;"	m	namespace:__sanitizer	file:
ptrace_pt_set_event_mask	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^int ptrace_pt_set_event_mask = PT_SET_EVENT_MASK;$/;"	m	namespace:__sanitizer	file:
ptrace_pt_set_siginfo	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^int ptrace_pt_set_siginfo = PT_SET_SIGINFO;$/;"	m	namespace:__sanitizer	file:
ptrace_pt_setdbregs	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^int ptrace_pt_setdbregs = -1;$/;"	m	namespace:__sanitizer	file:
ptrace_pt_setdbregs	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^int ptrace_pt_setdbregs = PT_SETDBREGS;$/;"	m	namespace:__sanitizer	file:
ptrace_pt_setfpregs	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^int ptrace_pt_setfpregs = -1;$/;"	m	namespace:__sanitizer	file:
ptrace_pt_setfpregs	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^int ptrace_pt_setfpregs = PT_SETFPREGS;$/;"	m	namespace:__sanitizer	file:
ptrace_pt_setregs	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^int ptrace_pt_setregs = -1;$/;"	m	namespace:__sanitizer	file:
ptrace_pt_setregs	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^int ptrace_pt_setregs = PT_SETREGS;$/;"	m	namespace:__sanitizer	file:
ptrace_setfpregs	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  int ptrace_setfpregs = -1;$/;"	m	namespace:__sanitizer	file:
ptrace_setfpregs	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  int ptrace_setfpregs = PTRACE_SETFPREGS;$/;"	m	namespace:__sanitizer	file:
ptrace_setfpxregs	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  int ptrace_setfpxregs = -1;$/;"	m	namespace:__sanitizer	file:
ptrace_setfpxregs	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  int ptrace_setfpxregs = PTRACE_SETFPXREGS;$/;"	m	namespace:__sanitizer	file:
ptrace_setregs	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  int ptrace_setregs = -1;$/;"	m	namespace:__sanitizer	file:
ptrace_setregs	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  int ptrace_setregs = PTRACE_SETREGS;$/;"	m	namespace:__sanitizer	file:
ptrace_setregset	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  int ptrace_setregset = -1;$/;"	m	namespace:__sanitizer	file:
ptrace_setregset	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  int ptrace_setregset = PTRACE_SETREGSET;$/;"	m	namespace:__sanitizer	file:
ptrace_setsiginfo	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  int ptrace_setsiginfo = -1;$/;"	m	namespace:__sanitizer	file:
ptrace_setsiginfo	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  int ptrace_setsiginfo = PTRACE_SETSIGINFO;$/;"	m	namespace:__sanitizer	file:
ptrace_setvfpregs	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  int ptrace_setvfpregs = -1;$/;"	m	namespace:__sanitizer	file:
ptrace_setvfpregs	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  int ptrace_setvfpregs = PTRACE_SETVFPREGS;$/;"	m	namespace:__sanitizer	file:
pull_from_device	test/sanitizer_common/android_commands/android_common.py	/^def pull_from_device(path):$/;"	f
purgeable_volatile_pmap	lib/sanitizer_common/sanitizer_mac.cc	/^  mach_vm_size_t purgeable_volatile_pmap;$/;"	m	struct:__sanitizer::__sanitizer_task_vm_info	file:
purgeable_volatile_resident	lib/sanitizer_common/sanitizer_mac.cc	/^  mach_vm_size_t purgeable_volatile_resident;$/;"	m	struct:__sanitizer::__sanitizer_task_vm_info	file:
purgeable_volatile_virtual	lib/sanitizer_common/sanitizer_mac.cc	/^  mach_vm_size_t purgeable_volatile_virtual;$/;"	m	struct:__sanitizer::__sanitizer_task_vm_info	file:
push_back	lib/esan/esan_circular_buffer.h	/^  void push_back(const T &Item) {$/;"	f	class:__esan::CircularBuffer
push_back	lib/fuzzer/FuzzerDictionary.h	/^  void push_back(DictionaryEntry DE) {$/;"	f	class:fuzzer::Dictionary
push_back	lib/sanitizer_common/sanitizer_common.h	/^  void push_back(const T &element) {$/;"	f	class:__sanitizer::InternalMmapVectorNoCtor
push_back	lib/sanitizer_common/sanitizer_list.h	/^  void push_back(Item *x) {$/;"	f	struct:__sanitizer::IntrusiveList
push_back	lib/sanitizer_common/sanitizer_quarantine.h	/^  void push_back(void *ptr, uptr size) {$/;"	f	struct:__sanitizer::QuarantineBatch
push_front	lib/sanitizer_common/sanitizer_list.h	/^  void push_front(Item *x) {$/;"	f	struct:__sanitizer::IntrusiveList
push_to_device	test/sanitizer_common/android_commands/android_common.py	/^def push_to_device(path):$/;"	f
putstest	test/asan/TestCases/Darwin/odr-lto.cc	/^void putstest()$/;"	f
pvalloc	lib/asan/asan_malloc_linux.cc	/^  void* (*pvalloc)(uptr size);$/;"	m	struct:MallocDebugL	file:
pvalloc	lib/scudo/scudo_malloc.cpp	/^INTERCEPTOR_ATTRIBUTE void *pvalloc(size_t size) {$/;"	f
pw_age	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  char *pw_age;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_change	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  __sanitizer_time_t pw_change;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_change	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  __sanitizer_time_t pw_change;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_change	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    long pw_change;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_class	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char *pw_class;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_class	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  char *pw_class;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_class	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    char *pw_class;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_comment	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  char *pw_comment;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_dir	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char *pw_dir;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_dir	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  char *pw_dir;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_dir	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    char *pw_dir;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_dir	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  char *pw_dir;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_expire	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  __sanitizer_time_t pw_expire;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_expire	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  __sanitizer_time_t pw_expire;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_expire	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    long pw_expire;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_fields	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    int pw_fields;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_gecos	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char *pw_gecos;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_gecos	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  char *pw_gecos;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_gecos	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    char *pw_gecos;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_gecos	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  char *pw_gecos;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_gid	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int pw_gid;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_gid	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  int pw_gid;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_gid	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    int pw_gid;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_gid	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned int pw_gid;    \/\/ gid_t$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_name	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char *pw_name;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_name	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  char *pw_name;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_name	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    char *pw_name;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_name	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  char *pw_name;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_passwd	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char *pw_passwd;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_passwd	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  char *pw_passwd;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_passwd	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    char *pw_passwd;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_passwd	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  char *pw_passwd;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_shell	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char *pw_shell;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_shell	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  char *pw_shell;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_shell	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    char *pw_shell;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_shell	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  char *pw_shell;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_uid	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int pw_uid;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_uid	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  int pw_uid;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_uid	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    int pw_uid;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_uid	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned int pw_uid;    \/\/ uid_t$/;"	m	struct:__sanitizer::__sanitizer_passwd
pwn	test/asan/TestCases/Darwin/malloc_zone-protected.cc	/^void *pwn(malloc_zone_t *unused_zone, size_t unused_size) {$/;"	f
q	test/asan/TestCases/speculative_load2.cc	/^  short q;$/;"	m	union:__anon136	file:
qnanRep	lib/builtins/fp_lib.h	229;"	d
qs	test/BlocksRuntime/byrefstruct.c	/^    int qs[30];$/;"	m	struct:__anon144	file:
qs	test/BlocksRuntime/large-struct.c	/^    int qs[30];$/;"	m	struct:__anon142	file:
quarantine	lib/asan/asan_allocator.cc	/^  AsanQuarantine quarantine;$/;"	m	struct:__asan::Allocator	file:
quarantineOrDeallocateChunk	lib/scudo/scudo_allocator.cpp	/^  void quarantineOrDeallocateChunk(void *Ptr, UnpackedHeader *Header,$/;"	f	struct:__scudo::Allocator
quarantine_cache	lib/asan/asan_allocator.h	/^  uptr quarantine_cache[16];$/;"	m	struct:__asan::AsanThreadLocalMallocStorage
quarantine_cache	lib/hwasan/hwasan_allocator.h	/^  uptr quarantine_cache[16];$/;"	m	struct:__hwasan::HwasanThreadLocalMallocStorage
quarantine_cache	lib/msan/msan_allocator.h	/^  uptr quarantine_cache[16];$/;"	m	struct:__msan::MsanThreadLocalMallocStorage
quarantine_size_mb	lib/asan/asan_allocator.h	/^  u32 quarantine_size_mb;$/;"	m	struct:__asan::AllocatorOptions
quarantined_size	lib/sanitizer_common/sanitizer_quarantine.h	/^  uptr quarantined_size() const {$/;"	f	struct:__sanitizer::QuarantineBatch
queue	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^  dispatch_queue_t queue;$/;"	m	struct:__tsan::__anon19	file:
quietBit	lib/builtins/fp_lib.h	228;"	d
r	test/asan/TestCases/use-after-scope-conversion.cc	/^volatile char r;$/;"	v
r0	lib/builtins/hexagon/divsi3.S	/^		r0 = #0$/;"	d
r0	lib/builtins/hexagon/divsi3.S	/^		r0 = mux(p1,#-1,#1)$/;"	d
r0	lib/builtins/hexagon/divsi3.S	/^		r0 = neg(r0)$/;"	d
r0	lib/builtins/hexagon/fabs_opt.S	/^    r0 = clrbit(r0, #31)$/;"	d
r0	lib/builtins/hexagon/fma_opt.S	/^    r0 = r2$/;"	d
r0	lib/builtins/hexagon/fmax_opt.S	/^    r0 = sfmax(r0, r1)$/;"	d
r0	lib/builtins/hexagon/fmin_opt.S	/^    r0 = sfmin(r0, r1)$/;"	d
r0	lib/builtins/hexagon/modsi3.S	/^		r0 = neg(r0)$/;"	d
r0	lib/builtins/hexagon/modsi3.S	/^		r0 = r2$/;"	d
r0	lib/builtins/hexagon/sfdiv_opt.S	/^    r0 = and(r6,r5)$/;"	d
r0	lib/tsan/rtl/tsan_ppc_regs.h	1;"	d
r1	lib/builtins/hexagon/divsi3.S	/^		r1 = abs(r0)$/;"	d
r1	lib/builtins/hexagon/fabs_opt.S	/^    r1 = clrbit(r1, #31)$/;"	d
r1	lib/builtins/hexagon/memcpy_likely_aligned.S	/^		r1 = add(r1,#24)$/;"	d
r1	lib/builtins/hexagon/modsi3.S	/^		r1 = abs(r1)$/;"	d
r1	lib/tsan/rtl/tsan_ppc_regs.h	2;"	d
r10	lib/builtins/hexagon/divdi3.S	/^		r10 = sub(r7,r6)            \/\/ left shift count for bit & divisor$/;"	d
r10	lib/builtins/hexagon/moddi3.S	/^		r10 = sub(r7,r6)            \/\/ left shift count for bit & divisor$/;"	d
r10	lib/builtins/hexagon/udivdi3.S	/^		r10 = sub(r7,r6)            \/\/ left shift count for bit & divisor$/;"	d
r10	lib/builtins/hexagon/udivmoddi4.S	/^		r10 = sub(r7,r6)            \/\/ left shift count for bit & divisor$/;"	d
r10	lib/builtins/hexagon/umoddi3.S	/^		r10 = sub(r7,r6)            \/\/ left shift count for bit & divisor$/;"	d
r10	lib/tsan/rtl/tsan_ppc_regs.h	11;"	d
r11	lib/builtins/hexagon/divdi3.S	/^		r11 = add(r10,#1)           \/\/ loop count is 1 more than shift count$/;"	d
r11	lib/builtins/hexagon/moddi3.S	/^		r11 = add(r10,#1)           \/\/ loop count is 1 more than shift count$/;"	d
r11	lib/builtins/hexagon/udivdi3.S	/^		r11 = add(r10,#1)           \/\/ loop count is 1 more than shift count$/;"	d
r11	lib/builtins/hexagon/udivmoddi4.S	/^		r11 = add(r10,#1)           \/\/ loop count is 1 more than shift count$/;"	d
r11	lib/builtins/hexagon/umoddi3.S	/^		r11 = add(r10,#1)           \/\/ loop count is 1 more than shift count$/;"	d
r11	lib/tsan/rtl/tsan_ppc_regs.h	12;"	d
r12	lib/tsan/rtl/tsan_ppc_regs.h	13;"	d
r13	lib/tsan/rtl/tsan_ppc_regs.h	14;"	d
r14	lib/tsan/rtl/tsan_ppc_regs.h	15;"	d
r15	lib/tsan/rtl/tsan_ppc_regs.h	16;"	d
r16	lib/tsan/rtl/tsan_ppc_regs.h	17;"	d
r17	lib/tsan/rtl/tsan_ppc_regs.h	18;"	d
r18	lib/tsan/rtl/tsan_ppc_regs.h	19;"	d
r19	lib/tsan/rtl/tsan_ppc_regs.h	20;"	d
r2	lib/builtins/hexagon/divsi3.S	/^		r2 = abs(r1)$/;"	d
r2	lib/builtins/hexagon/memcpy_forward_vp4cp4n2.S	/^    r2 = extractu(r2, #10, #0)  \/\/ r2 = r2 & 1023$/;"	d
r2	lib/builtins/hexagon/memcpy_forward_vp4cp4n2.S	/^    r2 = sub(r2, r3)            \/\/ r2 = number of words left after the prolog.$/;"	d
r2	lib/builtins/hexagon/modsi3.S	/^		r2 = abs(r0)$/;"	d
r2	lib/builtins/hexagon/modsi3.S	/^		r2 = lsl(r1,r3)$/;"	d
r2	lib/builtins/hexagon/modsi3.S	/^		r2 = lsr(r2,#1)$/;"	d
r2	lib/builtins/hexagon/udivmodsi4.S	/^		r2 = cl0(r0)$/;"	d
r2	lib/builtins/hexagon/udivsi3.S	/^		r2 = cl0(r0)$/;"	d
r2	lib/builtins/hexagon/umodsi3.S	/^		r2 = cl0(r0)$/;"	d
r2	lib/builtins/hexagon/umodsi3.S	/^		r2 = lsl(r1,r2)$/;"	d
r2	lib/builtins/hexagon/umodsi3.S	/^		r2 = lsr(r2,#1)$/;"	d
r2	lib/builtins/hexagon/umodsi3.S	/^		r2 = sub(r3,r2)$/;"	d
r2	lib/tsan/rtl/tsan_ppc_regs.h	3;"	d
r20	lib/tsan/rtl/tsan_ppc_regs.h	21;"	d
r21	lib/tsan/rtl/tsan_ppc_regs.h	22;"	d
r22	lib/tsan/rtl/tsan_ppc_regs.h	23;"	d
r23	lib/tsan/rtl/tsan_ppc_regs.h	24;"	d
r24	lib/tsan/rtl/tsan_ppc_regs.h	25;"	d
r25	lib/tsan/rtl/tsan_ppc_regs.h	26;"	d
r26	lib/tsan/rtl/tsan_ppc_regs.h	27;"	d
r27	lib/tsan/rtl/tsan_ppc_regs.h	28;"	d
r28	lib/tsan/rtl/tsan_ppc_regs.h	29;"	d
r29	lib/tsan/rtl/tsan_ppc_regs.h	30;"	d
r3	lib/builtins/hexagon/divsi3.S	/^		r3 = #1$/;"	d
r3	lib/builtins/hexagon/divsi3.S	/^		r3 = cl0(r1)$/;"	d
r3	lib/builtins/hexagon/memcpy_forward_vp4cp4n2.S	/^    r3 = ##2105344              \/\/ r3 = 0x202000 (prefetch info)$/;"	d
r3	lib/builtins/hexagon/memcpy_forward_vp4cp4n2.S	/^    r3 = ##2105472              \/\/ r3 = 0x202080 (prefetch info)$/;"	d
r3	lib/builtins/hexagon/memcpy_forward_vp4cp4n2.S	/^    r3 = extractu(r3, #10, #2)$/;"	d
r3	lib/builtins/hexagon/memcpy_forward_vp4cp4n2.S	/^    r3 = lsr(r2, #10)$/;"	d
r3	lib/builtins/hexagon/memcpy_forward_vp4cp4n2.S	/^    r3 = minu(r2, r3)$/;"	d
r3	lib/builtins/hexagon/memcpy_forward_vp4cp4n2.S	/^    r3 = or(r3, r4)$/;"	d
r3	lib/builtins/hexagon/memcpy_forward_vp4cp4n2.S	/^    r3 = sub(##4096, r1)$/;"	d
r3	lib/builtins/hexagon/memcpy_likely_aligned.S	/^		r3 = #-3$/;"	d
r3	lib/builtins/hexagon/modsi3.S	/^		r3 = cl0(r2)$/;"	d
r3	lib/builtins/hexagon/modsi3.S	/^		r3 = sub(r4,r3)$/;"	d
r3	lib/builtins/hexagon/sfdiv_opt.S	/^    r3 = ##0x3f800000   \/\/ 1.0$/;"	d
r3	lib/builtins/hexagon/sfdiv_opt.S	/^    r3 = r7$/;"	d
r3	lib/builtins/hexagon/udivmodsi4.S	/^		r3 = cl0(r1)$/;"	d
r3	lib/builtins/hexagon/udivsi3.S	/^		r3 = cl0(r1)$/;"	d
r3	lib/builtins/hexagon/umodsi3.S	/^		r3 = cl0(r1)$/;"	d
r3	lib/tsan/rtl/tsan_ppc_regs.h	4;"	d
r30	lib/tsan/rtl/tsan_ppc_regs.h	31;"	d
r31	lib/tsan/rtl/tsan_ppc_regs.h	32;"	d
r4	lib/builtins/hexagon/divsi3.S	/^		r4 = cl0(r2)$/;"	d
r4	lib/builtins/hexagon/divsi3.S	/^		r4 = sub(r4,r3)$/;"	d
r4	lib/builtins/hexagon/memcpy_forward_vp4cp4n2.S	/^    r4 = extractu(r3, #7, #5)$/;"	d
r4	lib/builtins/hexagon/memcpy_forward_vp4cp4n2.S	/^    r4 = lsr(r2, #3)            \/\/ r4 = number of 32-byte blocks remaining.$/;"	d
r4	lib/builtins/hexagon/memcpy_forward_vp4cp4n2.S	/^    r4 = memw(r1++#4)$/;"	d
r4	lib/builtins/hexagon/memcpy_forward_vp4cp4n2.S	/^    r4 = minu(r5, r4)$/;"	d
r4	lib/builtins/hexagon/memcpy_forward_vp4cp4n2.S	/^    r4 = or(r4, ##2105344)      \/\/ 2105344 = 0x202000$/;"	d
r4	lib/builtins/hexagon/modsi3.S	/^		r4 = cl0(r1)$/;"	d
r4	lib/builtins/hexagon/sfdiv_opt.S	/^    r4 = sffixupd(r0,r1)$/;"	d
r4	lib/builtins/hexagon/udivmodsi4.S	/^		r4 = r1$/;"	d
r4	lib/builtins/hexagon/udivsi3.S	/^		r4 = r1$/;"	d
r4	lib/tsan/rtl/tsan_ppc_regs.h	5;"	d
r5	lib/builtins/hexagon/divsi3.S	/^		r5 = sub(r1,r2)$/;"	d
r5	lib/builtins/hexagon/memcpy_forward_vp4cp4n2.S	/^    r5 = lsr(r2, #3)$/;"	d
r5	lib/builtins/hexagon/sfdiv_opt.S	/^    r5 = sffixupn(r0,r1)$/;"	d
r5	lib/tsan/rtl/tsan_ppc_regs.h	6;"	d
r6	lib/builtins/hexagon/divdi3.S	/^		r6 = cl0(r1:0)              \/\/ count leading 0's of dividend (numerator)$/;"	d
r6	lib/builtins/hexagon/moddi3.S	/^		r6 = cl0(r1:0)              \/\/ count leading 0's of dividend (numerator)$/;"	d
r6	lib/builtins/hexagon/sfdiv_opt.S	/^    r6 = ##0x80000000$/;"	d
r6	lib/builtins/hexagon/sfdiv_opt.S	/^    r6 = r5$/;"	d
r6	lib/builtins/hexagon/udivdi3.S	/^		r6 = cl0(r1:0)              \/\/ count leading 0's of dividend (numerator)$/;"	d
r6	lib/builtins/hexagon/udivmoddi4.S	/^		r6 = cl0(r1:0)              \/\/ count leading 0's of dividend (numerator)$/;"	d
r6	lib/builtins/hexagon/udivmodsi4.S	/^		r6 = sub(r3,r2)$/;"	d
r6	lib/builtins/hexagon/udivsi3.S	/^		r6 = sub(r3,r2)$/;"	d
r6	lib/builtins/hexagon/umoddi3.S	/^		r6 = cl0(r1:0)              \/\/ count leading 0's of dividend (numerator)$/;"	d
r6	lib/tsan/rtl/tsan_ppc_regs.h	7;"	d
r7	lib/builtins/hexagon/divdi3.S	/^		r7 = cl0(r3:2)              \/\/ count leading 0's of divisor (denominator)$/;"	d
r7	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^        r7 = r0$/;"	d
r7	lib/builtins/hexagon/moddi3.S	/^		r7 = cl0(r3:2)              \/\/ count leading 0's of divisor (denominator)$/;"	d
r7	lib/builtins/hexagon/sfdiv_opt.S	/^    r7 = r3$/;"	d
r7	lib/builtins/hexagon/udivdi3.S	/^		r7 = cl0(r3:2)              \/\/ count leading 0's of divisor (denominator)$/;"	d
r7	lib/builtins/hexagon/udivmoddi4.S	/^		r7 = cl0(r3:2)              \/\/ count leading 0's of divisor (denominator)$/;"	d
r7	lib/builtins/hexagon/umoddi3.S	/^		r7 = cl0(r3:2)              \/\/ count leading 0's of divisor (denominator)$/;"	d
r7	lib/tsan/rtl/tsan_ppc_regs.h	8;"	d
r8	lib/tsan/rtl/tsan_ppc_regs.h	9;"	d
r9	lib/tsan/rtl/tsan_ppc_regs.h	10;"	d
race_two_threads	test/tsan/load_shared_lib.cc	/^void race_two_threads(void *(*access_callback)(void *unused)) {$/;"	f
racer	test/tsan/fork_multithreaded3.cc	/^static void *racer(void *p) {$/;"	f	file:
racy_addresses	lib/tsan/rtl/tsan_rtl.h	/^  Vector<RacyAddress> racy_addresses;$/;"	m	struct:__tsan::Context
racy_mtx	lib/tsan/rtl/tsan_rtl.h	/^  Mutex racy_mtx;$/;"	m	struct:__tsan::Context
racy_shadow_addr	lib/tsan/rtl/tsan_rtl.h	/^  u64 *racy_shadow_addr;$/;"	m	struct:__tsan::ThreadState
racy_stacks	lib/tsan/rtl/tsan_rtl.h	/^  Vector<RacyStacks> racy_stacks;$/;"	m	struct:__tsan::Context
racy_state	lib/tsan/rtl/tsan_rtl.h	/^  u64 racy_state[2];$/;"	m	struct:__tsan::ThreadState
radar	test/BlocksRuntime/testfilerunner.h	/^@property(assign) __strong char *radar;$/;"	v
radar	test/BlocksRuntime/testfilerunner.h	/^@property(readonly) __strong char *radar;$/;"	v
ran_before_main	test/asan/TestCases/Windows/tls_init.cc	/^static bool ran_before_main = false;$/;"	v	file:
random_buffer_	lib/hwasan/hwasan_thread.h	/^  u32 random_buffer_;$/;"	m	class:__hwasan::HwasanThread
random_delay	test/asan/TestCases/Posix/halt_on_error-signals.c	/^void random_delay(unsigned *seed) {$/;"	f
random_delay	test/asan/TestCases/Posix/halt_on_error-torture.cc	/^void random_delay(unsigned *seed) {$/;"	f
random_state_	lib/hwasan/hwasan_thread.h	/^  u32 random_state_;$/;"	m	class:__hwasan::HwasanThread
ranges	lib/sanitizer_common/sanitizer_common.h	/^  const IntrusiveList<AddressRange> &ranges() const { return ranges_; }$/;"	f	class:__sanitizer::LoadedModule
ranges_	lib/sanitizer_common/sanitizer_common.h	/^  IntrusiveList<AddressRange> ranges_;$/;"	m	class:__sanitizer::LoadedModule
raw	lib/tsan/rtl/tsan_rtl.h	/^  u64 raw() const {$/;"	f	class:__tsan::FastState
raw_id	lib/msan/msan_origin.h	/^  u32 raw_id() const { return raw_id_; }$/;"	f	class:__msan::Origin
raw_id_	lib/msan/msan_origin.h	/^  u32 raw_id_;$/;"	m	class:__msan::Origin
raw_send_hdrinc	test/msan/pr32842.c	/^int raw_send_hdrinc(unsigned long int length) {$/;"	f
rc	lib/tsan/rtl/tsan_fd.cc	/^  atomic_uint64_t rc;$/;"	m	struct:__tsan::FdSync	file:
rdlock	test/tsan/deadlock_detector_stress_test.cc	/^  void rdlock() { assert(0 == pthread_rwlock_rdlock(&mu_)); }$/;"	f	class:PthreadRWLock
rdlock	test/tsan/deadlock_detector_stress_test.cc	/^  void rdlock() { assert(0); }$/;"	f	class:PthreadMutex
rdlock	test/tsan/deadlock_detector_stress_test.cc	/^  void rdlock() { assert(0); }$/;"	f	class:PthreadSpinLock
rdunlock	test/tsan/deadlock_detector_stress_test.cc	/^  void rdunlock() { assert(0 == pthread_rwlock_unlock(&mu_)); }$/;"	f	class:PthreadRWLock
rdunlock	test/tsan/deadlock_detector_stress_test.cc	/^  void rdunlock() { assert(0); }$/;"	f	class:PthreadMutex
rdunlock	test/tsan/deadlock_detector_stress_test.cc	/^  void rdunlock() { assert(0); }$/;"	f	class:PthreadSpinLock
read	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  __sanitizer_cookie_io_read read;$/;"	m	struct:__sanitizer_cookie_io_functions_t
readBadGlobal	test/asan/TestCases/Helpers/initialization-blacklist-extra.cc	/^int readBadGlobal() { return badGlobal; }$/;"	f
readBadGlobal	test/asan/TestCases/blacklist.cc	/^int readBadGlobal() {$/;"	f
readBadSrcGlobal	test/asan/TestCases/Helpers/initialization-blacklist-extra2.cc	/^int readBadSrcGlobal() { return badSrcGlobal; }$/;"	f
readEncodedPointer	lib/builtins/gcc_personality_v0.c	/^static uintptr_t readEncodedPointer(const uint8_t** data, uint8_t encoding)$/;"	f	file:
readULEB128	lib/builtins/gcc_personality_v0.c	/^static uintptr_t readULEB128(const uint8_t** data)$/;"	f	file:
read_32bit_value	lib/profile/GCDAProfiling.c	/^static uint32_t read_32bit_value() {$/;"	f	file:
read_64bit_value	lib/profile/GCDAProfiling.c	/^static uint64_t read_64bit_value() {$/;"	f	file:
read_clock	lib/tsan/rtl/tsan_sync.h	/^  SyncClock read_clock;  \/\/ Used for rw mutexes only.$/;"	m	struct:__tsan::SyncVar
read_le_32bit_value	lib/profile/GCDAProfiling.c	/^static uint32_t read_le_32bit_value() {$/;"	f	file:
read_mutex_thread	lib/tsan/tests/unit/tsan_mutex_test.cc	/^static void *read_mutex_thread(void *param) {$/;"	f	namespace:__tsan
read_sigaction	lib/msan/msan_interceptors.cc	/^static void read_sigaction(const __sanitizer_sigaction *act) {$/;"	f	file:
readfile	test/BlocksRuntime/fail.c	/^bool readfile(char *buffer, const char *from) {$/;"	f
readline	lib/asan/scripts/asan_symbolize.py	/^  def readline(self):$/;"	m	class:UnbufferedLineConverter
ready	test/tsan/signal_sync2.cc	/^int ready[kSignalCount];$/;"	v
real	lib/builtins/int_types.h	/^typedef struct { double real, imaginary; } Dcomplex;$/;"	m	struct:__anon125
real	lib/builtins/int_types.h	/^typedef struct { float real, imaginary; } Fcomplex;$/;"	m	struct:__anon124
real	lib/builtins/int_types.h	/^typedef struct { long double real, imaginary; } Lcomplex;$/;"	m	struct:__anon126
real_frees	lib/asan/asan_stats.h	/^  uptr real_frees;$/;"	m	struct:__asan::AsanStats
real_name	lib/sanitizer_common/sanitizer_libignore.h	/^    char *real_name;  \/\/ target of symlink$/;"	m	struct:__sanitizer::LibIgnore::Lib
real_sigaction	lib/esan/esan_interceptors.cpp	/^int real_sigaction(int signum, const void *act, void *oldact) {$/;"	f	namespace:__sanitizer
real_stack	lib/asan/asan_fake_stack.h	/^  uptr real_stack;$/;"	m	struct:__asan::FakeFrame
real_start	test/cfi/cross-dso/icall/dlopen.cpp	/^static char *real_start;$/;"	v	file:
realloc	lib/asan/asan_malloc_linux.cc	/^  void *(*realloc)(void *oldMem, uptr bytes);$/;"	m	struct:MallocDebugK	file:
realloc	lib/asan/asan_malloc_linux.cc	/^  void *(*realloc)(void *oldMem, uptr bytes);$/;"	m	struct:MallocDebugL	file:
realloc	lib/asan/asan_malloc_win.cc	/^void *realloc(void *ptr, size_t size) {$/;"	f
realloc	lib/sanitizer_common/tests/sanitizer_allocator_testlib.cc	/^void *realloc(void *p, size_t size) {$/;"	f
realloc	lib/scudo/scudo_malloc.cpp	/^INTERCEPTOR_ATTRIBUTE void *realloc(void *ptr, size_t size) {$/;"	f
reallocate	lib/scudo/scudo_allocator.cpp	/^  void *reallocate(void *OldPtr, uptr NewSize) {$/;"	f	struct:__scudo::Allocator
realloced	lib/asan/asan_stats.h	/^  uptr realloced;$/;"	m	struct:__asan::AsanStats
reallocs	lib/asan/asan_stats.h	/^  uptr reallocs;$/;"	m	struct:__asan::AsanStats
really_freed	lib/asan/asan_stats.h	/^  uptr really_freed;$/;"	m	struct:__asan::AsanStats
rebind	lib/fuzzer/FuzzerDefs.h	/^      struct rebind { typedef fuzzer_allocator<Other> other;  };$/;"	s	class:fuzzer::fuzzer_allocator
receive	lib/sanitizer_common/sanitizer_symbolizer_win.cc	/^  HANDLE *receive() { return &h_; }$/;"	f	struct:__sanitizer::__anon78::ScopedHandle
receiver	test/asan/TestCases/Posix/halt_on_error-signals.c	/^void *receiver(void *arg) {$/;"	f
receiver_tid	test/asan/TestCases/Posix/halt_on_error-signals.c	/^pthread_t sender_tid, receiver_tid;$/;"	v
recover	lib/hwasan/hwasan_linux.cc	/^  bool recover;$/;"	m	struct:__hwasan::AccessInfo	file:
recovered	test/BlocksRuntime/reference.C	/^int recovered = 0;$/;"	v
recurse	test/asan/TestCases/Linux/stack-overflow-recovery-mode.cc	/^static volatile int *recurse(volatile int n, volatile int *p) {$/;"	f	file:
recursion	lib/tsan/rtl/tsan_sync.h	/^  int recursion;$/;"	m	struct:__tsan::SyncVar
recursive_call	test/tsan/exceptions.cc	/^__attribute__((noinline)) void recursive_call(long n) {$/;"	f
recursive_call_longjmp	test/tsan/exceptions.cc	/^__attribute__((noinline)) void recursive_call_longjmp(jmp_buf env, long n) {$/;"	f
recursive_func	test/asan/TestCases/Linux/stack-overflow-sigbus.cc	/^void recursive_func(char *p) {$/;"	f
recursive_func	test/asan/TestCases/Posix/stack-overflow.cc	/^void recursive_func(char *p) {$/;"	f
recursive_locks	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  uptr recursive_locks[64];$/;"	m	class:__sanitizer::DeadlockDetectorTLS
recycle_mutex_	lib/sanitizer_common/sanitizer_quarantine.h	/^  StaticSpinMutex recycle_mutex_;$/;"	m	class:__sanitizer::Quarantine
recycled_nodes_	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  BV recycled_nodes_;$/;"	m	class:__sanitizer::DeadlockDetector
ref	lib/tsan/rtl/tsan_fd.cc	/^static FdSync *ref(FdSync *s) {$/;"	f	namespace:__tsan
ref	test/BlocksRuntime/byrefsanity.c	/^    struct byref_id *ref;$/;"	m	struct:Block_basic2	typeref:struct:Block_basic2::byref_id	file:
ref	test/profile/Inputs/instrprof-icall-promo_1.cc	/^int ref(A* ap) { return ap->A::foo(); }$/;"	f
ref_ptr	lib/tsan/rtl/tsan_clock.cc	/^static atomic_uint32_t *ref_ptr(ClockBlock *cb) {$/;"	f	namespace:__tsan
reg	lib/stats/stats_client.cc	/^} reg;$/;"	m	namespace:__anon2	typeref:struct:__anon2::RegisterSanStats	file:
reg_sites	lib/asan/asan_descriptions.h	/^  u32 reg_sites[kMaxGlobals];$/;"	m	struct:__asan::GlobalAddressDescription
region_base	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^    const uptr region_base;$/;"	m	class:SizeClassAllocator64::MemoryMapper
region_count	lib/sanitizer_common/sanitizer_mac.cc	/^  integer_t region_count;$/;"	m	struct:__sanitizer::__sanitizer_task_vm_info	file:
region_end	lib/sanitizer_common/sanitizer_persistent_allocator.h	/^  atomic_uintptr_t region_end;$/;"	m	class:__sanitizer::PersistentAllocator
region_pos	lib/sanitizer_common/sanitizer_persistent_allocator.h	/^  atomic_uintptr_t region_pos;  \/\/ Region allocator for Node's.$/;"	m	class:__sanitizer::PersistentAllocator
registerEsanFlags	lib/esan/esan_flags.cpp	/^static void registerEsanFlags(FlagParser *Parser, Flags *F) {$/;"	f	namespace:__esan
registerMap	lib/xray/tests/unit/fdr_logging_test.cc	/^  void registerMap(void *M, size_t S) {$/;"	f	struct:__xray::__anon25::ScopedFileCloserAndDeleter
registerMemoryFaultHandler	lib/esan/working_set_posix.cpp	/^void registerMemoryFaultHandler() {$/;"	f	namespace:__esan
registerSignal	lib/esan/esan_sideline_linux.cpp	/^void SidelineThread::registerSignal(int SigNum) {$/;"	f	class:__esan::SidelineThread
registerStructInfo	lib/esan/cache_frag.cpp	/^static void registerStructInfo(CacheFragInfo *CacheFrag) {$/;"	f	namespace:__esan
register_bar_local	test/builtins/Unit/gcc_personality_test_helper.cxx	/^void register_bar_local(int* x)$/;"	f
register_dso_globals	lib/asan/asan_globals_win.cc	/^static void register_dso_globals() {$/;"	f	namespace:__asan
register_foo_local	test/builtins/Unit/gcc_personality_test_helper.cxx	/^void register_foo_local(int* x)$/;"	f
registered_tags	lib/tsan/rtl/tsan_external.cc	/^static TagData registered_tags[kExternalTagMax] = {$/;"	m	namespace:__tsan	file:
registers_thread_func	test/lsan/TestCases/use_registers.cc	/^void *registers_thread_func(void *arg) {$/;"	f
registry	lib/sanitizer_common/tests/sanitizer_thread_registry_test.cc	/^  ThreadRegistry *registry;$/;"	m	struct:__sanitizer::__anon61::RunThreadArgs	file:
regs_struct	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^typedef _user_regs_struct regs_struct;$/;"	t	namespace:__sanitizer	file:
regs_struct	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^typedef pt_regs regs_struct;$/;"	t	namespace:__sanitizer	file:
regs_struct	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^typedef struct user regs_struct;$/;"	t	namespace:__sanitizer	typeref:struct:__sanitizer::user	file:
regs_struct	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^typedef struct user_pt_regs regs_struct;$/;"	t	namespace:__sanitizer	typeref:struct:__sanitizer::user_pt_regs	file:
regs_struct	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^typedef user_regs regs_struct;$/;"	t	namespace:__sanitizer	file:
regs_struct	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^typedef user_regs_struct regs_struct;$/;"	t	namespace:__sanitizer	file:
regs_struct	lib/sanitizer_common/sanitizer_stoptheworld_mac.cc	/^typedef arm_thread_state64_t regs_struct;$/;"	t	namespace:__sanitizer	file:
regs_struct	lib/sanitizer_common/sanitizer_stoptheworld_mac.cc	/^typedef x86_thread_state32_t regs_struct;$/;"	t	namespace:__sanitizer	file:
regs_struct	lib/sanitizer_common/sanitizer_stoptheworld_mac.cc	/^typedef x86_thread_state64_t regs_struct;$/;"	t	namespace:__sanitizer	file:
regs_struct	test/asan/TestCases/Linux/ptrace.cc	/^typedef _user_regs_struct   regs_struct;$/;"	t	file:
regs_struct	test/asan/TestCases/Linux/ptrace.cc	/^typedef struct pt_regs regs_struct;$/;"	t	typeref:struct:pt_regs	file:
regs_struct	test/asan/TestCases/Linux/ptrace.cc	/^typedef struct user_pt_regs      regs_struct;$/;"	t	typeref:struct:user_pt_regs	file:
regs_struct	test/asan/TestCases/Linux/ptrace.cc	/^typedef user_regs_struct   regs_struct;$/;"	t	file:
reinstateDefaultHandler	lib/esan/working_set_posix.cpp	/^static void reinstateDefaultHandler(int SigNum) {$/;"	f	namespace:__esan
release	lib/sanitizer_common/sanitizer_addrhashmap.h	/^void AddrHashMap<T, kSize>::release(Handle *h) {$/;"	f	class:__sanitizer::AddrHashMap
release	lib/sanitizer_common/sanitizer_symbolizer_win.cc	/^  HANDLE release() {$/;"	f	struct:__sanitizer::__anon78::ScopedHandle
release	lib/tsan/rtl/tsan_clock.cc	/^void ThreadClock::release(ClockCache *c, SyncClock *dst) {$/;"	f	class:__tsan::ThreadClock
release	lib/tsan/tests/unit/tsan_clock_test.cc	/^  void release(SimpleSyncClock *dst) const {$/;"	f	struct:__tsan::SimpleThreadClock
releaseBuffer	lib/xray/xray_buffer_queue.cc	/^BufferQueue::ErrorCode BufferQueue::releaseBuffer(Buffer &Buf) {$/;"	f	class:BufferQueue
releaseThreadLocalBuffer	lib/xray/xray_fdr_logging.cc	/^static bool releaseThreadLocalBuffer(BufferQueue &BQArg) {$/;"	f	namespace:__xray
release_my_map_info_list	lib/sanitizer_common/sanitizer_unwind_linux_libcdep.cc	/^release_my_map_info_list_func release_my_map_info_list;$/;"	v
release_my_map_info_list_func	lib/sanitizer_common/sanitizer_unwind_linux_libcdep.cc	/^typedef void (*release_my_map_info_list_func)(void *map);$/;"	t	file:
release_to_os_interval_ms	lib/asan/asan_allocator.h	/^  s32 release_to_os_interval_ms;$/;"	m	struct:__asan::AllocatorOptions
release_to_os_interval_ms_	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^  atomic_sint32_t release_to_os_interval_ms_;$/;"	m	class:SizeClassAllocator64
released_bytes	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^    uptr released_bytes;$/;"	m	class:SizeClassAllocator64::MemoryMapper
released_ranges_count	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^    uptr released_ranges_count;$/;"	m	class:SizeClassAllocator64::MemoryMapper
remove	lib/esan/esan_hashtable.h	/^bool HashTable<KeyTy, DataTy, ExternalLock, HashFuncTy, EqualFuncTy>::remove($/;"	f	class:__esan::HashTable
removeArgument	lib/fuzzer/FuzzerCommand.h	/^  void removeArgument(const std::string &Arg) {$/;"	f	class:fuzzer::final
removeEdge	lib/sanitizer_common/sanitizer_bvgraph.h	/^  bool removeEdge(uptr from, uptr to) {$/;"	f	class:__sanitizer::BVGraph
removeEdge	lib/sanitizer_common/tests/sanitizer_bvgraph_test.cc	/^  bool removeEdge(uptr from, uptr to) {$/;"	f	class:SimpleGraph
removeEdgesFrom	lib/sanitizer_common/sanitizer_bvgraph.h	/^  bool removeEdgesFrom(const BV &from) {$/;"	f	class:__sanitizer::BVGraph
removeEdgesFrom	lib/sanitizer_common/sanitizer_bvgraph.h	/^  void removeEdgesFrom(uptr from) {$/;"	f	class:__sanitizer::BVGraph
removeEdgesTo	lib/sanitizer_common/sanitizer_bvgraph.h	/^  bool removeEdgesTo(const BV &to) {$/;"	f	class:__sanitizer::BVGraph
removeFlag	lib/fuzzer/FuzzerCommand.h	/^  void removeFlag(const std::string &Flag) {$/;"	f	class:fuzzer::final
removeLock	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  void removeLock(uptr lock_id) {$/;"	f	class:__sanitizer::DeadlockDetectorTLS
removeNode	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  void removeNode(uptr node) {$/;"	f	class:__sanitizer::DeadlockDetector
remove_	lib/sanitizer_common/sanitizer_addrhashmap.h	/^    bool                   remove_;$/;"	m	class:__sanitizer::AddrHashMap::Handle
rep	lib/sanitizer_common/sanitizer_deadlock_detector1.cc	/^  DDReport rep;$/;"	m	struct:__sanitizer::DDLogicalThread	file:
rep	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^  DDReport rep;$/;"	m	struct:__sanitizer::DDPhysicalThread	file:
rep_	lib/tsan/rtl/tsan_rtl.h	/^  ReportDesc *rep_;$/;"	m	class:__tsan::ScopedReportBase
rep_clz	lib/builtins/fp_lib.h	/^static __inline int rep_clz(rep_t a) {$/;"	f
rep_t	lib/builtins/fp_lib.h	/^typedef __uint128_t rep_t;$/;"	t
rep_t	lib/builtins/fp_lib.h	/^typedef uint32_t rep_t;$/;"	t
rep_t	lib/builtins/fp_lib.h	/^typedef uint64_t rep_t;$/;"	t
replacement	lib/interception/interception.h	/^  const __sanitizer::uptr replacement;$/;"	m	struct:interpose_substitution
reportAllocationAlignmentNotPowerOfTwo	lib/scudo/scudo_errors.cpp	/^void NORETURN reportAllocationAlignmentNotPowerOfTwo(uptr Alignment) {$/;"	f	namespace:__scudo
reportAllocationAlignmentTooBig	lib/scudo/scudo_errors.cpp	/^void NORETURN reportAllocationAlignmentTooBig(uptr Alignment,$/;"	f	namespace:__scudo
reportAllocationSizeTooBig	lib/scudo/scudo_errors.cpp	/^void NORETURN reportAllocationSizeTooBig(uptr UserSize, uptr TotalSize,$/;"	f	namespace:__scudo
reportCacheFrag	lib/esan/cache_frag.cpp	/^void reportCacheFrag() {$/;"	f	namespace:__esan
reportCallocOverflow	lib/scudo/scudo_errors.cpp	/^void NORETURN reportCallocOverflow(uptr Count, uptr Size) {$/;"	f	namespace:__scudo
reportInvalidAlignedAllocAlignment	lib/scudo/scudo_errors.cpp	/^void NORETURN reportInvalidAlignedAllocAlignment(uptr Size, uptr Alignment) {$/;"	f	namespace:__scudo
reportInvalidPosixMemalignAlignment	lib/scudo/scudo_errors.cpp	/^void NORETURN reportInvalidPosixMemalignAlignment(uptr Alignment) {$/;"	f	namespace:__scudo
reportOutOfMemory	lib/scudo/scudo_errors.cpp	/^void NORETURN reportOutOfMemory(uptr RequestedSize) {$/;"	f	namespace:__scudo
reportPvallocOverflow	lib/scudo/scudo_errors.cpp	/^void NORETURN reportPvallocOverflow(uptr Size) {$/;"	f	namespace:__scudo
reportResults	lib/esan/esan.cpp	/^void reportResults() {$/;"	f	namespace:__esan
reportRssLimitExceeded	lib/scudo/scudo_errors.cpp	/^void NORETURN reportRssLimitExceeded() {$/;"	f	namespace:__scudo
reportStructCounter	lib/esan/cache_frag.cpp	/^static void reportStructCounter(StructHashMap::Handle &Handle) {$/;"	f	namespace:__esan
reportStructSummary	lib/esan/cache_frag.cpp	/^static void reportStructSummary() {$/;"	f	namespace:__esan
reportWorkingSet	lib/esan/working_set.cpp	/^void reportWorkingSet() {$/;"	f	namespace:__esan
report_file	lib/sanitizer_common/sanitizer_file.cc	/^ReportFile report_file = {&report_file_mu, kStderrFd, "", "", 0};$/;"	m	namespace:__sanitizer	file:
report_file_mu	lib/sanitizer_common/sanitizer_file.cc	/^StaticSpinMutex report_file_mu;$/;"	m	namespace:__sanitizer	file:
report_lock_	lib/ubsan/ubsan_diag.h	/^  ScopedErrorReportLock report_lock_;$/;"	m	class:__ubsan::ScopedReport
report_mtx	lib/tsan/rtl/tsan_rtl.h	/^  Mutex report_mtx;$/;"	m	struct:__tsan::Context
report_mutex	lib/tsan/dd/dd_rtl.h	/^  BlockingMutex report_mutex;$/;"	m	struct:__dsan::Context
report_pending	lib/sanitizer_common/sanitizer_deadlock_detector1.cc	/^  bool report_pending;$/;"	m	struct:__sanitizer::DDLogicalThread	file:
report_pending	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^  bool report_pending;$/;"	m	struct:__sanitizer::DDPhysicalThread	file:
report_this_error	lib/ubsan_minimal/ubsan_minimal_handlers.cc	/^__attribute__((noinline)) static bool report_this_error(void *caller_p) {$/;"	f	file:
report_type	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^  ReportType report_type;$/;"	m	struct:Event	file:
reported_invalid_path_	lib/sanitizer_common/sanitizer_symbolizer_internal.h	/^  bool reported_invalid_path_;$/;"	m	class:__sanitizer::SymbolizerProcess
reported_pages	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  std::set<u32> reported_pages;$/;"	m	class:ReleasedPagesTrackingMemoryMapper	file:
reported_pages	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  std::string reported_pages;$/;"	m	class:RangeRecorder	file:
reported_tid	lib/sanitizer_common/tests/sanitizer_linux_test.cc	/^  tid_t reported_tid;$/;"	m	struct:__sanitizer::TidReporterArgument	file:
reporting_thread	lib/sanitizer_common/sanitizer_symbolizer_report.cc	/^static atomic_uintptr_t reporting_thread = {0};$/;"	m	namespace:__sanitizer	file:
requested_size	lib/asan/asan_allocator.cc	/^uptr LsanMetadata::requested_size() const {$/;"	f	class:__lsan::LsanMetadata
requested_size	lib/asan/asan_errors.h	/^  uptr requested_size;$/;"	m	struct:__asan::ErrorOutOfMemory
requested_size	lib/hwasan/hwasan_allocator.cc	/^  u64 requested_size : 62;$/;"	m	struct:__hwasan::Metadata	file:
requested_size	lib/lsan/lsan_allocator.cc	/^uptr LsanMetadata::requested_size() const {$/;"	f	class:__lsan::LsanMetadata
requested_size	lib/lsan/lsan_allocator.h	/^  uptr requested_size : 32;$/;"	m	struct:__lsan::ChunkMetadata
requested_size	lib/lsan/lsan_allocator.h	/^  uptr requested_size : 54;$/;"	m	struct:__lsan::ChunkMetadata
requested_size	lib/msan/msan_allocator.cc	/^  uptr requested_size;$/;"	m	struct:__msan::Metadata	file:
requiresProcmaps	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^static bool requiresProcmaps() {$/;"	f	namespace:__sanitizer
res	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    u64 res;$/;"	m	struct:__sanitizer::__sanitizer_io_event
res	lib/tsan/go/tsan_go.cc	/^  uptr res;$/;"	m	struct:__tsan::SymbolizeCodeContext	file:
res	lib/tsan/go/tsan_go.cc	/^  uptr res;$/;"	m	struct:__tsan::SymbolizeDataContext	file:
res	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^  bool res;$/;"	m	struct:Event	file:
res2	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    u64 res2;$/;"	m	struct:__sanitizer::__sanitizer_io_event
reserve	lib/sanitizer_common/sanitizer_common.h	/^  void reserve(uptr new_size) {$/;"	f	class:__sanitizer::InternalMmapVectorNoCtor
reserved	lib/BlocksRuntime/Block_private.h	/^    int reserved; $/;"	m	struct:Block_layout
reserved	lib/BlocksRuntime/Block_private.h	/^    unsigned long int reserved;$/;"	m	struct:Block_descriptor
reset	lib/ubsan/ubsan_diag.h	/^  void reset(SymbolizedStack *S) {$/;"	f	class:__ubsan::SymbolizedStackHolder
reset	lib/xray/xray_profile_collector.cc	/^void reset() {$/;"	f	namespace:__xray::profileCollectorService
reset	test/tsan/signal_reset.cc	/^static void* reset(void *p) {$/;"	f	file:
resetFilenameToDefault	lib/profile/InstrProfilingFile.c	/^static void resetFilenameToDefault(void) {$/;"	f	file:
resident_size	lib/sanitizer_common/sanitizer_mac.cc	/^  mach_vm_size_t resident_size;$/;"	m	struct:__sanitizer::__sanitizer_task_vm_info	file:
resident_size_peak	lib/sanitizer_common/sanitizer_mac.cc	/^  mach_vm_size_t resident_size_peak;$/;"	m	struct:__sanitizer::__sanitizer_task_vm_info	file:
resize	lib/esan/esan_hashtable.h	/^void HashTable<KeyTy, DataTy, ExternalLock, HashFuncTy, EqualFuncTy>::resize() {$/;"	f	class:__esan::HashTable
resize	lib/sanitizer_common/sanitizer_common.h	/^  void resize(uptr new_size) {$/;"	f	class:__sanitizer::InternalMmapVectorNoCtor
resize_write_buffer	lib/profile/GCDAProfiling.c	/^static void resize_write_buffer(uint64_t size) {$/;"	f	file:
restore_code	test/cfi/cross-dso/icall/dlopen.cpp	/^static void restore_code() {$/;"	f	file:
restore_tid_data	lib/lsan/lsan_common_mac.cc	/^void restore_tid_data(void *ptr) {$/;"	f	namespace:__lsan
restorer	test/asan/TestCases/Linux/preinstalled_signal.cc	/^  void (*restorer)();$/;"	m	struct:KernelSigaction	file:
result	test/builtins/Unit/ppc/fixtfdi_test.c	/^struct testVector { double xhi; double xlo; int64_t result; };$/;"	m	struct:testVector	file:
ret	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^#define ret        R0$/;"	d
ret	test/sanitizer_common/android_commands/android_compile.py	/^ret = subprocess.call(sys.argv[1:])$/;"	v
ret	test/sanitizer_common/android_commands/android_run.py	/^ret = adb(['shell', 'cd %s && %s %s %s >%s 2>%s ; echo $? >%s' %$/;"	v
ret	test/sanitizer_common/ios_commands/iossim_compile.py	/^    ret = subprocess.call(["codesign", "-s", "-", output])$/;"	v
ret	test/sanitizer_common/ios_commands/iossim_compile.py	/^ret = subprocess.call(sys.argv[1:])$/;"	v
retcode	test/sanitizer_common/android_commands/android_run.py	/^retcode = int(pull_from_device(device_exitcode))$/;"	v
returns_unexpectedly	test/ubsan/TestCases/Misc/Inputs/returns-unexpectedly.c	/^void returns_unexpectedly() {}$/;"	f
reusable	lib/sanitizer_common/sanitizer_mac.cc	/^  mach_vm_size_t reusable;$/;"	m	struct:__sanitizer::__sanitizer_task_vm_info	file:
reusable_peak	lib/sanitizer_common/sanitizer_mac.cc	/^  mach_vm_size_t reusable_peak;$/;"	m	struct:__sanitizer::__sanitizer_task_vm_info	file:
reuse_count	lib/sanitizer_common/sanitizer_thread_registry.h	/^  u32 reuse_count;  \/\/ Number of times this tid was reused.$/;"	m	class:__sanitizer::ThreadContextBase
reused	lib/tsan/rtl/tsan_defs.h	/^  u64 reused : 64 - kClkBits;  \/\/ tid reuse count$/;"	m	struct:__tsan::ClockElem
revents	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  short revents;$/;"	m	struct:__sanitizer::__sanitizer_pollfd
revents	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  short revents;$/;"	m	struct:__sanitizer::__sanitizer_pollfd
revents	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    short revents;$/;"	m	struct:__sanitizer::__sanitizer_pollfd
revents	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  short revents;$/;"	m	struct:__sanitizer::__sanitizer_pollfd
rewindRecentCall	lib/xray/xray_fdr_logging.cc	/^static void rewindRecentCall(uint64_t TSC, uint64_t &LastTSC,$/;"	f	namespace:__xray
rhi	test/builtins/Unit/ppc/qadd_test.c	/^	double rhi; double rlo;$/;"	m	struct:testVector	file:
rhi	test/builtins/Unit/ppc/qdiv_test.c	/^	double rhi; double rlo;$/;"	m	struct:testVector	file:
rhi	test/builtins/Unit/ppc/qmul_test.c	/^	double rhi; double rlo;$/;"	m	struct:testVector	file:
rhi	test/builtins/Unit/ppc/qsub_test.c	/^	double rhi; double rlo;$/;"	m	struct:testVector	file:
rlo	test/builtins/Unit/ppc/qadd_test.c	/^	double rhi; double rlo;$/;"	m	struct:testVector	file:
rlo	test/builtins/Unit/ppc/qdiv_test.c	/^	double rhi; double rlo;$/;"	m	struct:testVector	file:
rlo	test/builtins/Unit/ppc/qmul_test.c	/^	double rhi; double rlo;$/;"	m	struct:testVector	file:
rlo	test/builtins/Unit/ppc/qsub_test.c	/^	double rhi; double rlo;$/;"	m	struct:testVector	file:
rnd	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^       rnd = #0x40$/;"	d
rnd	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define rnd      R5$/;"	d
root_regions	lib/lsan/lsan_common.cc	/^static InternalMmapVector<RootRegion> *root_regions;$/;"	m	namespace:__lsan	file:
round_up_to	test/scudo/valloc.c	/^size_t round_up_to(size_t size, size_t alignment) {$/;"	f
rss_limit_exceeded	lib/asan/asan_allocator.cc	/^  atomic_uint8_t rss_limit_exceeded;$/;"	m	struct:__asan::Allocator	file:
rtl_generic_sighandler	lib/tsan/rtl/tsan_interceptors.cc	/^void ALWAYS_INLINE rtl_generic_sighandler(bool sigact, int sig,$/;"	f
rtl_sigaction	lib/tsan/rtl/tsan_interceptors.cc	/^static void rtl_sigaction(int sig, __sanitizer_siginfo *info, void *ctx) {$/;"	f	file:
rtl_sighandler	lib/tsan/rtl/tsan_interceptors.cc	/^static void rtl_sighandler(int sig) {$/;"	f	file:
rtti_addr	lib/ubsan/ubsan_type_hash_win.cc	/^  int rtti_addr;$/;"	m	struct:CompleteObjectLocator	file:
rtti_addr	lib/ubsan/ubsan_type_hash_win.cc	/^  std::type_info *rtti_addr;$/;"	m	struct:CompleteObjectLocatorAbs	file:
run	lib/sanitizer_common/tests/standalone_malloc_test.cc	/^  static void *run(void *t) {$/;"	f	struct:DeepStack
run	test/asan/TestCases/Posix/halt_on_error-torture.cc	/^void *run(void *arg) {$/;"	f
run	test/sanitizer_common/TestCases/Linux/open_memstream.cc	/^static void run(bool flush) {$/;"	f	file:
runRegex	lib/sanitizer_common/scripts/litlint.py	/^runRegex = re.compile(r'(?<!-o)(?<!%run) %t\\s')$/;"	v
runSideline	lib/esan/esan_sideline_linux.cpp	/^int SidelineThread::runSideline(void *Arg) {$/;"	f	class:__esan::SidelineThread
run_child	test/asan/TestCases/Windows/dll_control_c.cc	/^static void run_child() {$/;"	f	file:
run_handler	lib/sanitizer_common/sanitizer_flag_parser.cc	/^bool FlagParser::run_handler(const char *name, const char *value) {$/;"	f	class:__sanitizer::FlagParser
run_lint	lib/sanitizer_common/scripts/check_lint.sh	/^run_lint() {$/;"	f
run_on_startup	test/asan/TestCases/Windows/crt_initializers.cc	/^FPTR run_on_startup = call_me_maybe;$/;"	v
run_parent	test/asan/TestCases/Windows/dll_control_c.cc	/^static int run_parent() {$/;"	f	file:
run_tests	lib/tsan/tests/rtl/tsan_test.cc	/^int run_tests(int argc, char **argv) {$/;"	f
running	lib/tsan/rtl/tsan_report.h	/^  bool running;$/;"	m	struct:__tsan::ReportThread
running_threads_	lib/sanitizer_common/sanitizer_thread_registry.h	/^  uptr running_threads_;$/;"	m	class:__sanitizer::ThreadRegistry
rwlock	test/tsan/write_in_reader_lock.cc	/^pthread_rwlock_t rwlock;$/;"	v
rz_log	lib/asan/asan_allocator.cc	/^  u32 rz_log            : 3;$/;"	m	struct:__asan::ChunkHeader	file:
s	lib/builtins/int_types.h	/^    }s;$/;"	m	union:__anon112	typeref:struct:__anon112::__anon113
s	lib/builtins/int_types.h	/^    }s;$/;"	m	union:__anon114	typeref:struct:__anon114::__anon115
s	lib/builtins/int_types.h	/^    }s;$/;"	m	union:__anon116	typeref:struct:__anon116::__anon117
s	lib/builtins/int_types.h	/^    }s;$/;"	m	union:__anon118	typeref:struct:__anon118::__anon119
s	lib/builtins/ppc/DD.h	/^	}s;$/;"	m	union:__anon109	typeref:struct:__anon109::__anon110
s	test/tsan/race_on_fputs.cc	/^char s[] = "abracadabra";$/;"	v
s	test/tsan/race_on_puts.cc	/^char s[] = "abracadabra";$/;"	v
s1	test/esan/TestCases/struct-simple.cpp	/^  int s1;$/;"	m	struct:S	file:
s1	test/sanitizer_common/TestCases/Posix/weak_hook_test.cc	/^char s1[] = "ABCDEF";$/;"	v
s128	lib/ubsan/ubsan_value.h	/^__extension__ typedef __int128 s128;$/;"	t
s16	lib/sanitizer_common/sanitizer_internal_defs.h	/^typedef signed   short s16;  \/\/ NOLINT$/;"	t	namespace:__sanitizer
s2	test/esan/TestCases/struct-simple.cpp	/^  int s2;$/;"	m	struct:S	file:
s2	test/sanitizer_common/TestCases/Posix/weak_hook_test.cc	/^char s2[] = "CDE";$/;"	v
s32	lib/sanitizer_common/sanitizer_internal_defs.h	/^typedef signed   int s32;$/;"	t	namespace:__sanitizer
s64	lib/sanitizer_common/sanitizer_internal_defs.h	/^typedef signed   long long s64;  \/\/ NOLINT$/;"	t	namespace:__sanitizer
s8	lib/sanitizer_common/sanitizer_internal_defs.h	/^typedef signed   char s8;$/;"	t	namespace:__sanitizer
s_	lib/sanitizer_common/tests/sanitizer_bvgraph_test.cc	/^  set<uptr> s_;$/;"	m	class:SimpleGraph	file:
sa_flags	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int sa_flags;$/;"	m	struct:__sanitizer::__sanitizer_sigaction
sa_flags	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  unsigned long sa_flags;$/;"	m	struct:__sanitizer::__sanitizer_kernel_sigaction_t
sa_flags	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  int sa_flags;$/;"	m	struct:__sanitizer::__sanitizer_sigaction
sa_flags	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  unsigned long sa_flags;$/;"	m	struct:__sanitizer::__sanitizer_kernel_sigaction_t
sa_flags	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned int sa_flags;$/;"	m	struct:__sanitizer::__sanitizer_kernel_sigaction_t
sa_flags	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned long sa_flags;$/;"	m	struct:__sanitizer::__sanitizer_kernel_sigaction_t
sa_flags	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned sa_flags;$/;"	m	struct:__sanitizer::__sanitizer_sigaction
sa_flags	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int sa_flags;$/;"	m	struct:__sanitizer::__sanitizer_sigaction
sa_flags	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned long sa_flags;$/;"	m	struct:__sanitizer::__sanitizer_kernel_sigaction_t
sa_handler	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	46;"	d	file:
sa_handler	lib/tsan/rtl/tsan_platform_linux.cc	59;"	d	file:
sa_mask	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  __sanitizer_kernel_sigset_t sa_mask;$/;"	m	struct:__sanitizer::__sanitizer_kernel_sigaction_t
sa_mask	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  __sanitizer_sigset_t sa_mask;$/;"	m	struct:__sanitizer::__sanitizer_sigaction
sa_mask	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  __sanitizer_kernel_sigset_t sa_mask;$/;"	m	struct:__sanitizer::__sanitizer_kernel_sigaction_t
sa_mask	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  __sanitizer_sigset_t sa_mask;$/;"	m	struct:__sanitizer::__sanitizer_sigaction
sa_mask	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    __sanitizer_kernel_sigset_t sa_mask;$/;"	m	struct:__sanitizer::__sanitizer_kernel_sigaction_t
sa_mask	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    __sanitizer_sigset_t sa_mask;$/;"	m	struct:__sanitizer::__sanitizer_sigaction
sa_mask	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  __sanitizer_kernel_sigset_t sa_mask;$/;"	m	struct:__sanitizer::__sanitizer_kernel_sigaction_t
sa_mask	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  __sanitizer_sigset_t sa_mask;$/;"	m	struct:__sanitizer::__sanitizer_sigaction
sa_restorer	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  void (*sa_restorer)(void);$/;"	m	struct:__sanitizer::__sanitizer_kernel_sigaction_t
sa_restorer	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  void (*sa_restorer)(void);$/;"	m	struct:__sanitizer::__sanitizer_kernel_sigaction_t
sa_restorer	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    void (*sa_restorer)();$/;"	m	struct:__sanitizer::__sanitizer_sigaction
sa_restorer	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    void (*sa_restorer)(void);$/;"	m	struct:__sanitizer::__sanitizer_kernel_sigaction_t
sa_restorer	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  void (*sa_restorer)(void);$/;"	m	struct:__sanitizer::__sanitizer_kernel_sigaction_t
sa_resv	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int sa_resv[2];$/;"	m	struct:__sanitizer::__sanitizer_sigaction
sa_sigaction	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	50;"	d	file:
sa_sigaction	lib/tsan/rtl/tsan_platform_linux.cc	63;"	d	file:
sa_sigaction_t	lib/sanitizer_common/sanitizer_posix_libcdep.cc	/^typedef void (*sa_sigaction_t)(int, siginfo_t *, void *);$/;"	t	file:
sa_siginfo	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^const uptr sa_siginfo = (uptr)SA_SIGINFO;$/;"	m	namespace:__sanitizer	file:
sa_siginfo	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^const uptr sa_siginfo = (uptr)SA_SIGINFO;$/;"	m	namespace:__sanitizer	file:
sa_siginfo	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  const uptr sa_siginfo = (uptr)SA_SIGINFO;$/;"	m	namespace:__sanitizer	file:
sa_siginfo	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  const uptr sa_siginfo = (uptr)SA_SIGINFO;$/;"	m	namespace:__sanitizer	file:
sai_	lib/msan/tests/msan_test.cc	/^  sockaddr_in sai_;$/;"	m	class:SocketAddr4	file:
sai_	lib/msan/tests/msan_test.cc	/^  sockaddr_in6 sai_;$/;"	m	class:SocketAddr6	file:
sameTU	test/asan/TestCases/initialization-nobug.cc	/^int sameTU = initializeSameTU();$/;"	v
sampleFunc	lib/esan/esan_sideline.h	/^  SidelineFunc sampleFunc;$/;"	m	class:__esan::SidelineThread
sancov_flags	lib/sanitizer_common/sancov_flags.h	/^inline SancovFlags* sancov_flags() { return &sancov_flags_dont_use_directly; }$/;"	f	namespace:__sancov
sancov_flags_dont_use_directly	lib/sanitizer_common/sancov_flags.cc	/^SancovFlags sancov_flags_dont_use_directly;  \/\/ use via flags();$/;"	m	namespace:__sancov	file:
sandboxing_callback	lib/sanitizer_common/sanitizer_common_libcdep.cc	/^static void (*sandboxing_callback)();$/;"	m	namespace:__sanitizer	file:
sanitizer_zone	lib/sanitizer_common/sanitizer_mac.cc	/^malloc_zone_t sanitizer_zone;$/;"	m	namespace:__sanitizer	file:
sanity	test/BlocksRuntime/byrefsanity.c	/^void sanity(void *arg) {$/;"	f
save	test/asan/TestCases/use-after-scope-temp.cc	/^void save(const IntHolder &holder) {$/;"	f
save_code	test/cfi/cross-dso/icall/dlopen.cpp	/^static void save_code(char *p) {$/;"	f	file:
saved	test/asan/TestCases/use-after-scope-temp.cc	/^const IntHolder *saved;$/;"	v
saved	test/asan/TestCases/use-after-scope-temp2.cc	/^const IntHolder *saved;$/;"	v
saved_code	test/cfi/cross-dso/icall/dlopen.cpp	/^static char saved_code[kCodeSize];$/;"	v	file:
scariness	lib/asan/asan_errors.h	/^  ScarinessScoreBase scariness;$/;"	m	struct:__asan::ErrorBase
score	lib/asan/asan_scariness_score.h	/^  int score;$/;"	m	struct:__asan::ScarinessScoreBase
scs_fputs_stdout	test/shadowcallstack/libc_support.h	/^__attribute__((noinline)) void scs_fputs_stdout(const char *p) {$/;"	f
scs_main	test/shadowcallstack/init.c	/^int scs_main(void) {$/;"	f
scs_main	test/shadowcallstack/overflow.c	/^int scs_main(void)$/;"	f
scs_strlen	test/shadowcallstack/libc_support.h	/^size_t scs_strlen(const char *p) {$/;"	f
scudoAlignedAlloc	lib/scudo/scudo_allocator.cpp	/^void *scudoAlignedAlloc(uptr Alignment, uptr Size) {$/;"	f	namespace:__scudo
scudoAllocate	lib/scudo/scudo_allocator.cpp	/^void *scudoAllocate(uptr Size, uptr Alignment, AllocType Type) {$/;"	f	namespace:__scudo
scudoCalloc	lib/scudo/scudo_allocator.cpp	/^void *scudoCalloc(uptr NMemB, uptr Size) {$/;"	f	namespace:__scudo
scudoDeallocate	lib/scudo/scudo_allocator.cpp	/^void scudoDeallocate(void *Ptr, uptr Size, uptr Alignment, AllocType Type) {$/;"	f	namespace:__scudo
scudoMallocUsableSize	lib/scudo/scudo_allocator.cpp	/^uptr scudoMallocUsableSize(void *Ptr) {$/;"	f	namespace:__scudo
scudoPosixMemalign	lib/scudo/scudo_allocator.cpp	/^int scudoPosixMemalign(void **MemPtr, uptr Alignment, uptr Size) {$/;"	f	namespace:__scudo
scudoPvalloc	lib/scudo/scudo_allocator.cpp	/^void *scudoPvalloc(uptr Size) {$/;"	f	namespace:__scudo
scudoRealloc	lib/scudo/scudo_allocator.cpp	/^void *scudoRealloc(void *Ptr, uptr Size) {$/;"	f	namespace:__scudo
scudoValloc	lib/scudo/scudo_allocator.cpp	/^void *scudoValloc(uptr Size) {$/;"	f	namespace:__scudo
second	test/asan/TestCases/Linux/unpoison_tls.cc	/^void *second(void *arg) {$/;"	f
second_deadlock_stack	lib/sanitizer_common/sanitizer_deadlock_detector_interface.h	/^  bool second_deadlock_stack;$/;"	m	struct:__sanitizer::DDFlags
second_free_stack	lib/asan/asan_errors.h	/^  const BufferedStackTrace *second_free_stack;$/;"	m	struct:__asan::ErrorDoubleFree
secondary_	lib/sanitizer_common/sanitizer_allocator_combined.h	/^  SecondaryAllocator secondary_;$/;"	m	class:CombinedAllocator
secondsSinceProcessStartUp	lib/fuzzer/FuzzerInternal.h	/^  size_t secondsSinceProcessStartUp() {$/;"	f	class:fuzzer::Fuzzer
seek	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  __sanitizer_cookie_io_seek seek;$/;"	m	struct:__sanitizer_cookie_io_functions_t
seen_memcmp	test/sanitizer_common/TestCases/Posix/weak_hook_test.cc	/^bool seen_memcmp, seen_strncmp, seen_strncasecmp, seen_strcmp, seen_strcasecmp,$/;"	v
seen_memmem	test/sanitizer_common/TestCases/Posix/weak_hook_test.cc	/^    seen_strstr, seen_strcasestr, seen_memmem;$/;"	v
seen_strcasecmp	test/sanitizer_common/TestCases/Posix/weak_hook_test.cc	/^bool seen_memcmp, seen_strncmp, seen_strncasecmp, seen_strcmp, seen_strcasecmp,$/;"	v
seen_strcasestr	test/sanitizer_common/TestCases/Posix/weak_hook_test.cc	/^    seen_strstr, seen_strcasestr, seen_memmem;$/;"	v
seen_strcmp	test/sanitizer_common/TestCases/Posix/weak_hook_test.cc	/^bool seen_memcmp, seen_strncmp, seen_strncasecmp, seen_strcmp, seen_strcasecmp,$/;"	v
seen_strncasecmp	test/sanitizer_common/TestCases/Posix/weak_hook_test.cc	/^bool seen_memcmp, seen_strncmp, seen_strncasecmp, seen_strcmp, seen_strcasecmp,$/;"	v
seen_strncmp	test/sanitizer_common/TestCases/Posix/weak_hook_test.cc	/^bool seen_memcmp, seen_strncmp, seen_strncasecmp, seen_strcmp, seen_strcasecmp,$/;"	v
seen_strstr	test/sanitizer_common/TestCases/Posix/weak_hook_test.cc	/^    seen_strstr, seen_strcasestr, seen_memmem;$/;"	v
select	test/msan/vector_select.cc	/^__m128d select(bool b, __m128d c, __m128d d)$/;"	f
select	test/msan/vector_select.cc	/^__w64d select(bool b, __w64d c, __w64d d)$/;"	f
sem_	test/tsan/vptr_harmful_race.cc	/^  sem_t sem_;$/;"	m	struct:A	file:
sem_	test/tsan/vptr_harmful_race2.cc	/^  sem_t sem_;$/;"	m	struct:A	file:
sem_	test/tsan/vptr_harmful_race3.cc	/^  sem_t sem_;$/;"	m	struct:A	file:
sem_count	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  u32 sem_count;$/;"	m	struct:__sanitizer::__sanitizer_sem_t
sem_magic	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  u16 sem_magic;$/;"	m	struct:__sanitizer::__sanitizer_sem_t
sem_pad1	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  u64 sem_pad1[3];$/;"	m	struct:__sanitizer::__sanitizer_sem_t
sem_pad2	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  u64 sem_pad2[2];$/;"	m	struct:__sanitizer::__sanitizer_sem_t
sem_t	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^CHECK_TYPE_SIZE(sem_t);$/;"	v
sem_t	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^CHECK_TYPE_SIZE(sem_t);$/;"	v
sem_type	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  u16 sem_type;$/;"	m	struct:__sanitizer::__sanitizer_sem_t
semval_t	test/sanitizer_common/TestCases/Linux/sem_init_glibc.cc	/^typedef uint64_t semval_t;$/;"	t	file:
semval_t	test/sanitizer_common/TestCases/Linux/sem_init_glibc.cc	/^typedef unsigned semval_t;$/;"	t	file:
send	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^void ScopedThread::Impl::send(Event *e) {$/;"	f	class:ScopedThread::Impl
sender	test/asan/TestCases/Posix/halt_on_error-signals.c	/^void *sender(void *arg) {$/;"	f
sender_tid	test/asan/TestCases/Posix/halt_on_error-signals.c	/^pthread_t sender_tid, receiver_tid;$/;"	v
sendsignal	test/tsan/signal_errno.cc	/^static void* sendsignal(void *p) {$/;"	f	file:
seq	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^  u32 seq;$/;"	m	struct:__sanitizer::Id	file:
seq	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^  u32 seq;$/;"	m	struct:__sanitizer::Link	file:
seq	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^  u32 seq;$/;"	m	struct:__sanitizer::Mutex	file:
seq	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  unsigned short seq;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
seq	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned short seq;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
seq	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned int seq;           \/\/ uint_t$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
seq	lib/sanitizer_common/sanitizer_stackdepotbase.h	/^  atomic_uint32_t seq[kPartCount];  \/\/ Unique id generators.$/;"	m	class:__sanitizer::StackDepotBase
seq_	lib/tsan/rtl/tsan_mutex.h	/^  u64 seq_;$/;"	m	class:__tsan::InternalDeadlockDetector
seq_	test/tsan/custom_mutex.h	/^  int seq_;$/;"	m	class:Mutex
serialize	lib/xray/xray_profile_collector.cc	/^void serialize() {$/;"	f	namespace:__xray::profileCollectorService
serializeRecords	lib/xray/xray_profile_collector.cc	/^static void serializeRecords(ProfileBuffer *Buffer, const BlockHeader &Header,$/;"	f	namespace:__xray::profileCollectorService::__anon28
set	lib/sanitizer_common/sanitizer_allocator_bytemap.h	/^  void set(uptr idx, u8 val) {$/;"	f	class:FlatByteMap
set	lib/sanitizer_common/sanitizer_allocator_bytemap.h	/^  void set(uptr idx, u8 val) {$/;"	f	class:TwoLevelByteMap
set	lib/sanitizer_common/sanitizer_common.cc	/^void LoadedModule::set(const char *module_name, uptr base_address) {$/;"	f	class:__sanitizer::LoadedModule
set	lib/sanitizer_common/sanitizer_common.cc	/^void LoadedModule::set(const char *module_name, uptr base_address,$/;"	f	class:__sanitizer::LoadedModule
set	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^    p->m->set(i, val);$/;"	t	file:
set	lib/tsan/rtl/tsan_clock.cc	/^void ThreadClock::set(ClockCache *c, unsigned tid, u64 v) {$/;"	f	class:__tsan::ThreadClock
set	test/asan/TestCases/intra-object-overflow.cc	/^  void set(int i, int val) { a[i] = val; }$/;"	f	class:Foo
set	test/asan/TestCases/use-after-scope-dtor-order.cc	/^  void set(int *val) { val_ = val; }$/;"	f	struct:IntHolder
setAll	lib/sanitizer_common/sanitizer_bitvector.h	/^  void setAll() { bits_ = ~(basic_int_t)0; }$/;"	f	class:__sanitizer::BasicBitVector
setAll	lib/sanitizer_common/sanitizer_bitvector.h	/^  void setAll() {$/;"	f	class:__sanitizer::TwoLevelBitVector
setBit	lib/sanitizer_common/sanitizer_bitvector.h	/^  bool setBit(uptr idx) {$/;"	f	class:__sanitizer::BasicBitVector
setBit	lib/sanitizer_common/sanitizer_bitvector.h	/^  bool setBit(uptr idx) {$/;"	f	class:__sanitizer::TwoLevelBitVector
setClosures	test/BlocksRuntime/byrefcopystack.c	/^void setClosures() {$/;"	f
setCurrentTSD	lib/scudo/scudo_tsd_shared.cpp	/^ALWAYS_INLINE void setCurrentTSD(ScudoTSD *TSD) {$/;"	f	namespace:__scudo
setDefaults	lib/esan/esan_flags.cpp	/^void Flags::setDefaults() {$/;"	f	class:__esan::Flags
setDefaults	lib/scudo/scudo_flags.cpp	/^void Flags::setDefaults() {$/;"	f	class:__scudo::Flags
setDifference	lib/sanitizer_common/sanitizer_bitvector.h	/^  bool setDifference(const BasicBitVector &v) {$/;"	f	class:__sanitizer::BasicBitVector
setDifference	lib/sanitizer_common/sanitizer_bitvector.h	/^  bool setDifference(const TwoLevelBitVector &v) {$/;"	f	class:__sanitizer::TwoLevelBitVector
setFunctionPointers	test/profile/instrprof-value-prof-2.c	/^void __attribute__ ((noinline)) setFunctionPointers () {$/;"	f
setIntersection	lib/sanitizer_common/sanitizer_bitvector.h	/^  bool setIntersection(const BasicBitVector &v) {$/;"	f	class:__sanitizer::BasicBitVector
setIntersection	lib/sanitizer_common/sanitizer_bitvector.h	/^  bool setIntersection(const TwoLevelBitVector &v) {$/;"	f	class:__sanitizer::TwoLevelBitVector
setOutputFile	lib/fuzzer/FuzzerCommand.h	/^  void setOutputFile(const std::string &FileName) { OutputFile = FileName; }$/;"	f	class:fuzzer::final
setRssLimit	lib/scudo/scudo_allocator.cpp	/^  void setRssLimit(uptr LimitMb, bool HardLimit) {$/;"	f	struct:__scudo::Allocator
setUnion	lib/sanitizer_common/sanitizer_bitvector.h	/^  bool setUnion(const BasicBitVector &v) {$/;"	f	class:__sanitizer::BasicBitVector
setUnion	lib/sanitizer_common/sanitizer_bitvector.h	/^  bool setUnion(const TwoLevelBitVector &v) {$/;"	f	class:__sanitizer::TwoLevelBitVector
setUnwinding	lib/asan/asan_thread.h	/^  void setUnwinding(bool b) { unwinding_ = b; }$/;"	f	class:__asan::AsanThread
set_context	lib/asan/asan_thread.h	/^  void set_context(AsanThreadContext *context) { context_ = context; }$/;"	f	class:__asan::AsanThread
set_ptr	test/msan/dtor-multiple-inheritance-nontrivial-class-members.cc	/^  void set_ptr(int *intermediate_a) {$/;"	f	struct:VirtualBase
set_tag	lib/asan/asan_allocator.cc	/^void LsanMetadata::set_tag(ChunkTag value) {$/;"	f	class:__lsan::LsanMetadata
set_tag	lib/lsan/lsan_allocator.cc	/^void LsanMetadata::set_tag(ChunkTag value) {$/;"	f	class:__lsan::LsanMetadata
setjmp	lib/tsan/rtl/tsan_rtl_mips64.S	/^setjmp:$/;"	l
setjmp	lib/tsan/rtl/tsan_rtl_ppc64.S	/^setjmp:$/;"	l
setjmp_symname	lib/tsan/rtl/tsan_interceptors.cc	560;"	d	file:
setjmp_symname	lib/tsan/rtl/tsan_interceptors.cc	563;"	d	file:
setlim	lib/sanitizer_common/sanitizer_posix_libcdep.cc	/^static void setlim(int res, rlim_t lim) {$/;"	f	namespace:__sanitizer
setupIOBuffer	lib/profile/InstrProfilingFile.c	/^static void setupIOBuffer() {$/;"	f	file:
setup_at_exit_wrapper	lib/tsan/rtl/tsan_interceptors.cc	/^static int setup_at_exit_wrapper(ThreadState *thr, uptr pc, void(*f)(),$/;"	f	file:
setup_lock_	lib/sanitizer_common/sanitizer_coverage_fuchsia.cc	/^  BlockingMutex setup_lock_ = BlockingMutex(LINKER_INITIALIZED);$/;"	m	class:__sancov::__anon63::final	file:
sha1_addUncounted	lib/fuzzer/FuzzerSHA1.cpp	/^void sha1_addUncounted(sha1nfo *s, uint8_t data) {$/;"	f	namespace:__anon36
sha1_hashBlock	lib/fuzzer/FuzzerSHA1.cpp	/^void sha1_hashBlock(sha1nfo *s) {$/;"	f	namespace:__anon36
sha1_init	lib/fuzzer/FuzzerSHA1.cpp	/^void sha1_init(sha1nfo *s) {$/;"	f	namespace:__anon36
sha1_pad	lib/fuzzer/FuzzerSHA1.cpp	/^void sha1_pad(sha1nfo *s) {$/;"	f	namespace:__anon36
sha1_result	lib/fuzzer/FuzzerSHA1.cpp	/^uint8_t* sha1_result(sha1nfo *s) {$/;"	f	namespace:__anon36
sha1_rol32	lib/fuzzer/FuzzerSHA1.cpp	/^uint32_t sha1_rol32(uint32_t number, uint8_t bits) {$/;"	f	namespace:__anon36
sha1_write	lib/fuzzer/FuzzerSHA1.cpp	/^void sha1_write(sha1nfo *s, const char *data, size_t len) {$/;"	f	namespace:__anon36
sha1_writebyte	lib/fuzzer/FuzzerSHA1.cpp	/^void sha1_writebyte(sha1nfo *s, uint8_t data) {$/;"	f	namespace:__anon36
sha1nfo	lib/fuzzer/FuzzerSHA1.cpp	/^typedef struct sha1nfo {$/;"	s	namespace:__anon36	file:
sha1nfo	lib/fuzzer/FuzzerSHA1.cpp	/^} sha1nfo;$/;"	t	namespace:__anon36	typeref:struct:__anon36::sha1nfo	file:
shadow	lib/asan/asan_descriptions.h	/^      ShadowAddressDescription shadow;$/;"	m	union:__asan::AddressDescription::AddressDescriptionData::__anon52
shadow_	lib/cfi/cfi.cc	/^  uptr shadow_;$/;"	m	class:__cfi::ShadowBuilder	file:
shadow_byte	lib/asan/asan_descriptions.h	/^  u8 shadow_byte;$/;"	m	struct:__asan::ShadowAddressDescription
shadow_for	lib/dfsan/dfsan.h	/^inline const dfsan_label *shadow_for(const void *ptr) {$/;"	f	namespace:__dfsan
shadow_for	lib/dfsan/dfsan.h	/^inline dfsan_label *shadow_for(void *ptr) {$/;"	f	namespace:__dfsan
shadow_stack	lib/tsan/rtl/tsan_rtl.h	/^  uptr *shadow_stack;$/;"	m	struct:__tsan::ThreadState
shadow_stack	lib/tsan/rtl/tsan_trace.h	/^  uptr shadow_stack[kShadowStackSize];$/;"	m	struct:__tsan::Trace
shadow_stack_end	lib/tsan/rtl/tsan_rtl.h	/^  uptr *shadow_stack_end;$/;"	m	struct:__tsan::ThreadState
shadow_stack_pos	lib/tsan/rtl/tsan_rtl.h	/^  uptr *shadow_stack_pos;$/;"	m	struct:__tsan::JmpBuf
shadow_stack_pos	lib/tsan/rtl/tsan_rtl.h	/^  uptr *shadow_stack_pos;$/;"	m	struct:__tsan::ThreadState
shadow_val	lib/asan/asan_errors.h	/^  u8 shadow_val;$/;"	m	struct:__asan::ErrorGeneric
shard	lib/sanitizer_common/tests/sanitizer_thread_registry_test.cc	/^  uptr shard;  \/\/ started from 1.$/;"	m	struct:__sanitizer::__anon61::RunThreadArgs	file:
shared_entry	test/profile/Inputs/instrprof-value-prof-real.c	/^int shared_entry() {$/;"	f
shared_owners	lib/tsan/rtl/tsan_interceptors_mac.cc	/^  volatile a64 shared_owners;$/;"	m	struct:__tsan::__anon16::fake_shared_weak_count	file:
shared_weak_owners	lib/tsan/rtl/tsan_interceptors_mac.cc	/^  volatile a64 shared_weak_owners;$/;"	m	struct:__tsan::__anon16::fake_shared_weak_count	file:
shift_avx2_left	lib/msan/tests/msan_test.cc	/^V4x32 shift_avx2_left(V4x32 x, V4x32 y) {$/;"	f	namespace:__anon8
shift_sse2_left	lib/msan/tests/msan_test.cc	/^V8x16 shift_sse2_left(V8x16 x, V8x16 y) {$/;"	f	namespace:__anon8
shift_sse2_left_scalar	lib/msan/tests/msan_test.cc	/^V8x16 shift_sse2_left_scalar(V8x16 x, U4 y) {$/;"	f	namespace:__anon8
shm_allocated	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  u64 shm_allocated;          \/\/ uint64_t$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_amp	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  void *shm_amp;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_atime	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u64 shm_atime;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_atime	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  u64 shm_atime;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_atime	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    long shm_atime;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_atime	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    u64 shm_atime;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_atime	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned long shm_atime;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_atime	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    uptr shm_atime;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_atime	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  long shm_atime;             \/\/ time_t$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_cnattch	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned long shm_cnattch;  \/\/ ulong_t$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_cpid	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u32 shm_cpid;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_cpid	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  u32 shm_cpid;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_cpid	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    int shm_cpid;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_cpid	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned int shm_cpid;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_cpid	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int shm_cpid;               \/\/ pid_t$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_ctime	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u64 shm_ctime;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_ctime	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  u64 shm_ctime;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_ctime	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    long shm_ctime;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_ctime	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    u64 shm_ctime;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_ctime	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned long shm_ctime;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_ctime	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    uptr shm_ctime;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_ctime	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  long shm_ctime;             \/\/ time_t$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_ctime	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  long shm_ctime;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_dtime	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u64 shm_dtime;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_dtime	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  u64 shm_dtime;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_dtime	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    long shm_dtime;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_dtime	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    u64 shm_dtime;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_dtime	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned long shm_dtime;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_dtime	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    uptr shm_dtime;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_dtime	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  long shm_dtime;             \/\/ time_t$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_dtime	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  long shm_dtime;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_flags	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned long shm_flags;    \/\/ uintptr_t$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_gransize	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  u64 shm_gransize;           \/\/ uint64_t$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_lkcnt	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned short shm_lkcnt;   \/\/ ushort_t$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_lpid	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u32 shm_lpid;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_lpid	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  u32 shm_lpid;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_lpid	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    int shm_lpid;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_lpid	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned int shm_lpid;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_lpid	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int shm_lpid;               \/\/ pid_t$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_nattch	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  unsigned int shm_nattch;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_nattch	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  short shm_nattch;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_nattch	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    int shm_nattch;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_nattch	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    u64 shm_nattch;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_nattch	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned long shm_nattch;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_nattch	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    uptr shm_nattch;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_nattch	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned long shm_nattch;   \/\/ shmatt_t$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_pad1	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int shm_pad1;               \/\/ int32_t$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_pad2	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int shm_pad2;               \/\/ int32_t$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_pad4	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  u64 shm_pad4[1];            \/\/ int64_t$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_perm	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  __sanitizer_ipc_perm shm_perm;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_perm	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  __sanitizer_ipc_perm shm_perm;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_perm	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    __sanitizer_ipc_perm shm_perm;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_perm	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  __sanitizer_ipc_perm shm_perm;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_segsz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  unsigned long shm_segsz;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_segsz	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  int shm_segsz;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_segsz	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned long shm_segsz;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_segsz	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    uptr shm_segsz;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_segsz	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned long shm_segsz;    \/\/ size_t$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shmctl_ipc_info	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	437;"	d
shmctl_ipc_info	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	341;"	d
shmctl_ipc_info	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  int shmctl_ipc_info = (int)IPC_INFO;$/;"	m	namespace:__sanitizer	file:
shmctl_ipc_info	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	364;"	d
shmctl_ipc_stat	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^int shmctl_ipc_stat = (int)IPC_STAT;$/;"	m	namespace:__sanitizer	file:
shmctl_ipc_stat	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^int shmctl_ipc_stat = (int)IPC_STAT;$/;"	m	namespace:__sanitizer	file:
shmctl_ipc_stat	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  int shmctl_ipc_stat = (int)IPC_STAT;$/;"	m	namespace:__sanitizer	file:
shmctl_ipc_stat	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  int shmctl_ipc_stat = (int)IPC_STAT;$/;"	m	namespace:__sanitizer	file:
shmctl_shm_info	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	438;"	d
shmctl_shm_info	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	342;"	d
shmctl_shm_info	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  int shmctl_shm_info = (int)SHM_INFO;$/;"	m	namespace:__sanitizer	file:
shmctl_shm_info	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	365;"	d
shmctl_shm_stat	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	436;"	d
shmctl_shm_stat	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	340;"	d
shmctl_shm_stat	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  int shmctl_shm_stat = (int)SHM_STAT;$/;"	m	namespace:__sanitizer	file:
shmctl_shm_stat	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	363;"	d
shmid_ds	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^CHECK_TYPE_SIZE(shmid_ds);$/;"	v
shmid_ds	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^CHECK_TYPE_SIZE(shmid_ds);$/;"	v
shmid_ds	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^CHECK_TYPE_SIZE(shmid_ds);$/;"	v
shmid_ds	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^CHECK_TYPE_SIZE(shmid_ds);$/;"	v
shouldFail	test/BlocksRuntime/testfilerunner.h	/^@property bool shouldFail;$/;"	v
should_crash	test/asan/TestCases/Windows/dll_poison_unpoison.cc	/^void should_crash(volatile char *c) {$/;"	f
should_not_crash	test/asan/TestCases/Windows/dll_poison_unpoison.cc	/^void should_not_crash(volatile char *c) {$/;"	f
si	lib/tsan/rtl/tsan_interceptors.cc	/^  ScopedInterceptor *si;$/;"	m	struct:CondMutexUnlockCtx	file:
si_SEGV_ACCERR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^const int si_SEGV_ACCERR = SEGV_ACCERR;$/;"	m	namespace:__sanitizer	file:
si_SEGV_ACCERR	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^const int si_SEGV_ACCERR = SEGV_ACCERR;$/;"	m	namespace:__sanitizer	file:
si_SEGV_ACCERR	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  const int si_SEGV_ACCERR = SEGV_ACCERR;$/;"	m	namespace:__sanitizer	file:
si_SEGV_ACCERR	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  const int si_SEGV_ACCERR = SEGV_ACCERR;$/;"	m	namespace:__sanitizer	file:
si_SEGV_MAPERR	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^const int si_SEGV_MAPERR = SEGV_MAPERR;$/;"	m	namespace:__sanitizer	file:
si_SEGV_MAPERR	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^const int si_SEGV_MAPERR = SEGV_MAPERR;$/;"	m	namespace:__sanitizer	file:
si_SEGV_MAPERR	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  const int si_SEGV_MAPERR = SEGV_MAPERR;$/;"	m	namespace:__sanitizer	file:
si_SEGV_MAPERR	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  const int si_SEGV_MAPERR = SEGV_MAPERR;$/;"	m	namespace:__sanitizer	file:
si_int	lib/builtins/int_types.h	/^typedef      int si_int;$/;"	t
si_int	lib/builtins/int_types.h	25;"	d
side_effect	test/asan/TestCases/speculative_load.cc	/^inline void side_effect(const void *arg) {$/;"	f
sig	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    u8 sig[8];$/;"	m	struct:__sanitizer::__sanitizer_kernel_sigset_t
sig	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    uptr sig[2];$/;"	m	struct:__sanitizer::__sanitizer_kernel_sigset_t
sig	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  u8 sig[8];$/;"	m	struct:__sanitizer::__sanitizer_kernel_sigset_t
sig_dfl	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^const uptr sig_dfl = (uptr)SIG_DFL;$/;"	m	namespace:__sanitizer	file:
sig_dfl	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^const uptr sig_dfl = (uptr)SIG_DFL;$/;"	m	namespace:__sanitizer	file:
sig_dfl	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  const uptr sig_dfl = (uptr)SIG_DFL;$/;"	m	namespace:__sanitizer	file:
sig_dfl	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  const uptr sig_dfl = (uptr)SIG_DFL;$/;"	m	namespace:__sanitizer	file:
sig_err	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^const uptr sig_err = (uptr)SIG_ERR;$/;"	m	namespace:__sanitizer	file:
sig_err	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^const uptr sig_err = (uptr)SIG_ERR;$/;"	m	namespace:__sanitizer	file:
sig_err	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  const uptr sig_err = (uptr)SIG_ERR;$/;"	m	namespace:__sanitizer	file:
sig_err	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  const uptr sig_err = (uptr)SIG_ERR;$/;"	m	namespace:__sanitizer	file:
sig_handler	test/tsan/signal_cond.cc	/^void sig_handler(int sig) {$/;"	f
sig_ign	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^const uptr sig_ign = (uptr)SIG_IGN;$/;"	m	namespace:__sanitizer	file:
sig_ign	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^const uptr sig_ign = (uptr)SIG_IGN;$/;"	m	namespace:__sanitizer	file:
sig_ign	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  const uptr sig_ign = (uptr)SIG_IGN;$/;"	m	namespace:__sanitizer	file:
sig_ign	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  const uptr sig_ign = (uptr)SIG_IGN;$/;"	m	namespace:__sanitizer	file:
sigaction	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^    __sanitizer_sigactionhandler_ptr sigaction;$/;"	m	union:__sanitizer::__sanitizer_sigaction::__anon84
sigaction	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^    void (*sigaction)(int signo, void *info, void *ctx);$/;"	m	union:__sanitizer::__sanitizer_kernel_sigaction_t::__anon85
sigaction	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^    __sanitizer_sigactionhandler_ptr sigaction;$/;"	m	union:__sanitizer::__sanitizer_sigaction::__anon92
sigaction	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^    void (*sigaction)(int signo, void *info, void *ctx);$/;"	m	union:__sanitizer::__sanitizer_kernel_sigaction_t::__anon93
sigaction	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^      __sanitizer_sigactionhandler_ptr sigaction;$/;"	m	union:__sanitizer::__sanitizer_sigaction::__anon71
sigaction	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^      void (*sigaction)(int signo, __sanitizer_siginfo *info, void *ctx);$/;"	m	union:__sanitizer::__sanitizer_kernel_sigaction_t::__anon72
sigaction	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^      void (*sigaction)(int signo, __sanitizer_siginfo *info, void *ctx);$/;"	m	union:__sanitizer::__sanitizer_kernel_sigaction_t::__anon73
sigaction	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^    __sanitizer_sigactionhandler_ptr sigaction;$/;"	m	union:__sanitizer::__sanitizer_sigaction::__anon56
sigaction	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^    void (*sigaction)(int signo, __sanitizer_siginfo *info, void *ctx);$/;"	m	union:__sanitizer::__sanitizer_kernel_sigaction_t::__anon57
sigaction	lib/tsan/rtl/tsan_interceptors.cc	/^  bool sigaction;$/;"	m	struct:__tsan::SignalDesc	file:
sigaction_impl	lib/msan/msan_interceptors.cc	/^static int sigaction_impl(int signo, const __sanitizer_sigaction *act,$/;"	f	file:
sigaction_impl	lib/tsan/rtl/tsan_interceptors.cc	/^int sigaction_impl(int sig, const __sanitizer_sigaction *act,$/;"	f
sigactions	lib/msan/msan_interceptors.cc	/^static atomic_uintptr_t sigactions[kMaxSignals];$/;"	v	file:
sigactions	lib/tsan/rtl/tsan_interceptors.cc	/^  __sanitizer_sigaction sigactions[kSigCount];$/;"	m	struct:__tsan::InterceptorContext	file:
sigactions_mu	lib/msan/msan_interceptors.cc	/^static StaticSpinMutex sigactions_mu;$/;"	v	file:
sigcnt	test/msan/signal_stress_test.cc	/^int sigcnt;$/;"	v
sigev_notify	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int sigev_notify;$/;"	m	struct:__sanitizer::__sanitizer_sigevent
sigev_notify_attributes	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  uptr sigev_notify_attributes;$/;"	m	struct:__sanitizer::__sanitizer_sigevent
sigev_notify_function	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  uptr sigev_notify_function;$/;"	m	struct:__sanitizer::__sanitizer_sigevent
sigev_signo	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int sigev_signo;$/;"	m	struct:__sanitizer::__sanitizer_sigevent
sigev_value	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  union __sanitizer_sigval sigev_value;$/;"	m	struct:__sanitizer::__sanitizer_sigevent	typeref:union:__sanitizer::__sanitizer_sigevent::__sanitizer_sigval
sigfault_handler	test/tsan/signal_longjmp.cc	/^void sigfault_handler(int sig) {$/;"	f
siginfo	lib/sanitizer_common/sanitizer_common.h	/^  void *siginfo;$/;"	m	struct:__sanitizer::SignalContext
siginfo	lib/tsan/rtl/tsan_interceptors.cc	/^  __sanitizer_siginfo siginfo;$/;"	m	struct:__tsan::SignalDesc	file:
siginfo_t_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned siginfo_t_sz = sizeof(siginfo_t);$/;"	m	namespace:__sanitizer	file:
siginfo_t_sz	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^unsigned siginfo_t_sz = sizeof(siginfo_t);$/;"	m	namespace:__sanitizer	file:
siginfo_t_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned siginfo_t_sz = sizeof(siginfo_t);$/;"	m	namespace:__sanitizer	file:
siginfo_t_sz	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned siginfo_t_sz = sizeof(siginfo_t);$/;"	m	namespace:__sanitizer	file:
siglongjmp	lib/asan/asan_interceptors.cc	298;"	d	file:
siglongjmp_symname	lib/tsan/rtl/tsan_interceptors.cc	623;"	d	file:
signBit	lib/builtins/fp_lib.h	223;"	d
signal	lib/asan/asan_errors.h	/^  SignalContext signal;$/;"	m	struct:__asan::ErrorDeadlySignal
signal_blocked	test/tsan/signal_block.cc	/^sig_atomic_t signal_blocked;$/;"	v
signal_ctx	lib/tsan/rtl/tsan_rtl.h	/^  ThreadSignalContext *signal_ctx;$/;"	m	struct:__tsan::ThreadState
signal_delivered	test/tsan/Darwin/signals-blocked.cc	/^volatile bool signal_delivered;$/;"	v
signal_handler_ran	test/tsan/sigsuspend.cc	/^static bool signal_handler_ran = false;$/;"	v	file:
signal_handler_t	lib/esan/esan_interceptors.cpp	/^typedef void (*signal_handler_t)(int);$/;"	t	file:
signal_impl	lib/msan/msan_interceptors.cc	/^static uptr signal_impl(int signo, uptr cb) {$/;"	f	file:
signal_impl	lib/tsan/rtl/tsan_interceptors.cc	/^static __sanitizer_sighandler_ptr signal_impl(int sig,$/;"	f	file:
signaled	test/tsan/vptr_benign_race.cc	/^  bool signaled;$/;"	m	struct:A	file:
signals_handled	test/tsan/signal_sync2.cc	/^int signals_handled;$/;"	v
significandBits	lib/builtins/arm/addsf3.S	/^#define significandBits 23$/;"	d
significandBits	lib/builtins/fp_lib.h	113;"	d
significandBits	lib/builtins/fp_lib.h	47;"	d
significandBits	lib/builtins/fp_lib.h	67;"	d
significandMask	lib/builtins/fp_lib.h	222;"	d
sigset_t	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^CHECK_TYPE_SIZE(sigset_t);$/;"	v
sigset_t	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^CHECK_TYPE_SIZE(sigset_t);$/;"	v
sigset_t	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^CHECK_TYPE_SIZE(sigset_t);$/;"	v
sigset_t	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^CHECK_TYPE_SIZE(sigset_t);$/;"	v
sigset_t_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned sigset_t_sz = sizeof(sigset_t);$/;"	m	namespace:__sanitizer	file:
sigset_t_sz	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^unsigned sigset_t_sz = sizeof(sigset_t);$/;"	m	namespace:__sanitizer	file:
sigset_t_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned sigset_t_sz = sizeof(sigset_t);$/;"	m	namespace:__sanitizer	file:
sigset_t_sz	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned sigset_t_sz = sizeof(sigset_t);$/;"	m	namespace:__sanitizer	file:
sigsetjmp	lib/tsan/rtl/tsan_rtl_mips64.S	/^sigsetjmp:$/;"	l
sigsetjmp	lib/tsan/rtl/tsan_rtl_ppc64.S	/^sigsetjmp:$/;"	l
sigsetjmp_symname	lib/tsan/rtl/tsan_interceptors.cc	561;"	d	file:
sigsetjmp_symname	lib/tsan/rtl/tsan_interceptors.cc	564;"	d	file:
simple_hash	test/fuzzer/SimpleHashTest.cpp	/^static uint32_t simple_hash(const uint8_t *Data, size_t Size) {$/;"	f	file:
singleton_thread	lib/tsan/tests/rtl/tsan_mutex.cc	/^static void *singleton_thread(void *param) {$/;"	f	namespace:__tsan
sink	lib/sanitizer_common/tests/sanitizer_atomic_test.cc	/^  static ValAndMagic<T> *sink;$/;"	m	struct:__sanitizer::ValAndMagic	file:
sink	lib/sanitizer_common/tests/sanitizer_atomic_test.cc	/^ValAndMagic<T> *ValAndMagic<T>::sink;$/;"	m	class:__sanitizer::ValAndMagic	file:
sink	test/asan/TestCases/Darwin/segv_read_write.c	/^static volatile int sink;$/;"	v	file:
sink	test/asan/TestCases/Linux/auto_memory_profile_test.cc	/^char *sink[1000];$/;"	v
sink	test/asan/TestCases/Linux/print_memory_profile_test.cc	/^char *sink[1000];$/;"	v
sink	test/asan/TestCases/Linux/segv_read_write.c	/^static volatile int sink;$/;"	v	file:
sink	test/asan/TestCases/Windows/crash_read_write.cc	/^static volatile int sink;$/;"	v	file:
sink	test/fuzzer/CustomCrossOverAndMutateTest.cpp	/^static volatile int sink;$/;"	v	file:
sink	test/fuzzer/CustomCrossOverTest.cpp	/^static volatile int sink;$/;"	v	file:
sink	test/fuzzer/ExplodeDFSanLabelsTest.cpp	/^static volatile int sink;$/;"	v	file:
sink	test/fuzzer/LargeTest.cpp	/^volatile int sink;$/;"	v
sink	test/fuzzer/StrncmpTest.cpp	/^static volatile int sink;$/;"	v	file:
sink	test/lsan/TestCases/strace_test.cc	/^static volatile void *sink;$/;"	v	file:
sink	test/msan/coverage-levels.cc	/^volatile int sink;$/;"	v
sink	test/sanitizer_common/TestCases/Linux/hard_rss_limit_mb_test.cc	/^volatile char *sink[kNumAllocs];$/;"	v
sink	test/sanitizer_common/TestCases/Posix/sanitizer_set_death_callback_test.cc	/^volatile char *sink;$/;"	v
sink	test/tsan/stack_sync_reuse.cc	/^long sink;$/;"	v
sink	test/ubsan/TestCases/Misc/coverage-levels.cc	/^volatile int sink;$/;"	v
sink1	test/ubsan/TestCases/TypeCheck/vptr.cpp	/^volatile void *sink1, *sink2;$/;"	v
sink2	test/ubsan/TestCases/TypeCheck/vptr.cpp	/^volatile void *sink1, *sink2;$/;"	v
sival_int	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int sival_int;$/;"	m	union:__sanitizer::__sanitizer_sigval
sival_ptr	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  uptr sival_ptr;$/;"	m	union:__sanitizer::__sanitizer_sigval
siz	lib/tsan/rtl/tsan_defs.h	/^  u64  siz : 48;$/;"	m	struct:__tsan::MBlock
size	lib/BlocksRuntime/Block_private.h	/^    int size;$/;"	m	struct:Block_byref
size	lib/BlocksRuntime/Block_private.h	/^    int size;$/;"	m	struct:Block_byref_header
size	lib/BlocksRuntime/Block_private.h	/^    unsigned long int size;$/;"	m	struct:Block_descriptor
size	lib/asan/asan_allocator.h	/^  uptr size() { return size_; }$/;"	f	class:__asan::AsanChunkFifoList
size	lib/asan/asan_descriptions.h	/^  u8 size;$/;"	m	struct:__asan::GlobalAddressDescription
size	lib/asan/asan_errors.h	/^  uptr size;$/;"	m	struct:__asan::ErrorCallocOverflow
size	lib/asan/asan_errors.h	/^  uptr size;$/;"	m	struct:__asan::ErrorInvalidAlignedAllocAlignment
size	lib/asan/asan_errors.h	/^  uptr size;$/;"	m	struct:__asan::ErrorPvallocOverflow
size	lib/asan/asan_errors.h	/^  uptr size;$/;"	m	struct:__asan::ErrorStringFunctionSizeOverflow
size	lib/asan/asan_interface_internal.h	/^    uptr size;               \/\/ The original size of the global.$/;"	m	struct:__asan_global
size	lib/asan/asan_report.h	/^  uptr size;$/;"	m	struct:__asan::StackVarDescr
size	lib/builtins/emutls.c	/^    gcc_word size;  \/* size of the object in bytes *\/$/;"	m	struct:__emutls_control	file:
size	lib/builtins/emutls.c	/^    uintptr_t size;  \/* number of elements in the 'data' array *\/$/;"	m	struct:emutls_address_array	file:
size	lib/cfi/cfi.cc	/^    uptr size;$/;"	m	struct:__cfi::__anon53::__anon54	file:
size	lib/dfsan/dfsan_custom.cc	/^  size_t size;$/;"	m	struct:Formatter	file:
size	lib/esan/esan_circular_buffer.h	/^  uptr size() const {$/;"	f	class:__esan::CircularBuffer
size	lib/esan/esan_hashtable.h	/^u32 HashTable<KeyTy, DataTy, ExternalLock, HashFuncTy, EqualFuncTy>::size() {$/;"	f	class:__esan::HashTable
size	lib/fuzzer/FuzzerCorpus.h	/^  size_t size() const { return Inputs.size(); }$/;"	f	class:fuzzer::InputCorpus
size	lib/fuzzer/FuzzerDictionary.h	/^  size_t size() const { return Size; }$/;"	f	class:fuzzer::Dictionary
size	lib/fuzzer/FuzzerDictionary.h	/^  uint8_t size() const { return Size; }$/;"	f	class:fuzzer::FixedWord
size	lib/hwasan/hwasan_linux.cc	/^  uptr size;$/;"	m	struct:__hwasan::AccessInfo	file:
size	lib/lsan/lsan_common.h	/^  uptr size;$/;"	m	struct:__lsan::LeakedObject
size	lib/lsan/lsan_common.h	/^  uptr size;$/;"	m	struct:__lsan::RootRegion
size	lib/msan/msan_report.cc	/^  int size() { return next_id_; }$/;"	f	class:__msan::OriginSet
size	lib/sanitizer_common/sanitizer_addrhashmap.h	/^    uptr size;$/;"	m	struct:__sanitizer::AddrHashMap::AddBucket
size	lib/sanitizer_common/sanitizer_allocator_bytemap.h	/^  uptr size() const { return kSize1 * kSize2; }$/;"	f	class:TwoLevelByteMap
size	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^    uptr size;$/;"	m	struct:LargeMmapAllocator::Header
size	lib/sanitizer_common/sanitizer_bitvector.h	/^  uptr size() const { return kSize; }$/;"	f	class:__sanitizer::BasicBitVector
size	lib/sanitizer_common/sanitizer_bitvector.h	/^  uptr size() const { return kSize; }$/;"	f	class:__sanitizer::TwoLevelBitVector
size	lib/sanitizer_common/sanitizer_bvgraph.h	/^  uptr size() const { return kSize; }$/;"	f	class:__sanitizer::BVGraph
size	lib/sanitizer_common/sanitizer_common.h	/^  uptr size() const { return modules_.size(); }$/;"	f	class:__sanitizer::ListOfModules
size	lib/sanitizer_common/sanitizer_common.h	/^  uptr size() const { return size_; }$/;"	f	class:__sanitizer::ReservedAddressRange
size	lib/sanitizer_common/sanitizer_common.h	/^  uptr size() const {$/;"	f	class:__sanitizer::InternalMmapVectorNoCtor
size	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  uptr size() const { return g_.size(); }$/;"	f	class:__sanitizer::DeadlockDetector
size	lib/sanitizer_common/sanitizer_list.h	/^  uptr size() const { return size_; }$/;"	f	struct:__sanitizer::IntrusiveList
size	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    char size[pthread_attr_t_max_sz]; \/\/ NOLINT$/;"	m	union:__sanitizer::__sanitizer_pthread_attr_t
size	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned size;$/;"	m	struct:__sanitizer::__sanitizer_perf_event_attr
size	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  char size[pthread_attr_t_max_sz]; \/\/ NOLINT$/;"	m	union:__sanitizer::__sanitizer_pthread_attr_t
size	lib/sanitizer_common/sanitizer_quarantine.h	/^  uptr size;$/;"	m	struct:__sanitizer::QuarantineBatch
size	lib/sanitizer_common/sanitizer_stackdepot.cc	/^  u32 size;$/;"	m	struct:__sanitizer::StackDepotNode	file:
size	lib/sanitizer_common/sanitizer_stacktrace.h	/^  u32 size;$/;"	m	struct:__sanitizer::StackTrace
size	lib/sanitizer_common/sanitizer_symbolizer.h	/^  uptr size;$/;"	m	struct:__sanitizer::DataInfo
size	lib/sanitizer_common/sanitizer_symbolizer_libbacktrace.cc	/^  uptr size, allocated;$/;"	m	struct:__sanitizer::__anon99::CplusV3DemangleData	file:
size	lib/sanitizer_common/sanitizer_tls_get_addr.cc	/^  uptr size;$/;"	m	struct:__sanitizer::Glibc_2_19_tls_header	file:
size	lib/sanitizer_common/sanitizer_tls_get_addr.h	/^    uptr beg, size;$/;"	m	struct:__sanitizer::DTLS::DTV
size	lib/stats/stats.h	/^  u32 size;$/;"	m	struct:__sanitizer::StatModule
size	lib/tsan/go/tsan_go.cc	/^  uptr size;$/;"	m	struct:__tsan::SymbolizeDataContext	file:
size	lib/tsan/rtl/tsan_interface_ann.cc	/^  uptr size;$/;"	m	struct:__tsan::ExpectRace	file:
size	lib/tsan/rtl/tsan_report.h	/^  int size;$/;"	m	struct:__tsan::ReportMop
size	lib/tsan/rtl/tsan_rtl.h	/^  u64 ALWAYS_INLINE size() const { return 1ull << size_log(); }$/;"	f	class:__tsan::Shadow
size	lib/tsan/tests/unit/tsan_clock_test.cc	/^  uptr size;$/;"	m	struct:__tsan::SimpleSyncClock	file:
size	lib/tsan/tests/unit/tsan_clock_test.cc	/^  uptr size;$/;"	m	struct:__tsan::SimpleThreadClock	file:
size	lib/xray/xray_segmented_array.h	/^  size_t size() const { return Size; }$/;"	f	class:__xray::Array
size	test/BlocksRuntime/byrefsanity.c	/^    int size;$/;"	m	struct:byref_id	file:
size	test/esan/TestCases/workingset-midreport.cpp	/^const int size = 0x1 << 25; \/\/ 523288 cache lines$/;"	v
size	test/esan/TestCases/workingset-samples.cpp	/^const int size = 0x1 << 25; \/\/ 523288 cache lines$/;"	v
size	test/esan/TestCases/workingset-simple.cpp	/^const int size = 0x1 << 25; \/\/ 523288 cache lines$/;"	v
size	test/msan/dtor-multiple-inheritance-nontrivial-class-members.cc	/^  int size;$/;"	m	class:Vector	file:
size	test/msan/dtor-trivial-class-members.cc	/^  int size;$/;"	m	class:Vector	file:
size	test/msan/dtor-trivial.cpp	/^  int size;$/;"	m	class:Vector	file:
size1	lib/sanitizer_common/sanitizer_allocator_bytemap.h	/^  uptr size1() const { return kSize1; }$/;"	f	class:TwoLevelByteMap
size2	lib/sanitizer_common/sanitizer_allocator_bytemap.h	/^  uptr size2() const { return kSize2; }$/;"	f	class:TwoLevelByteMap
size_	lib/asan/asan_allocator.h	/^  uptr size_;$/;"	m	class:__asan::AsanChunkFifoList
size_	lib/sanitizer_common/sanitizer_common.h	/^  uptr size_;$/;"	m	class:__sanitizer::InternalMmapVectorNoCtor
size_	lib/sanitizer_common/sanitizer_common.h	/^  uptr size_;$/;"	m	class:__sanitizer::ReservedAddressRange
size_	lib/sanitizer_common/sanitizer_list.h	/^  uptr size_;$/;"	m	struct:__sanitizer::IntrusiveList
size_	lib/sanitizer_common/sanitizer_quarantine.h	/^  atomic_uintptr_t size_;$/;"	m	class:__sanitizer::QuarantineCache
size_	lib/tsan/rtl/tsan_ignoreset.h	/^  uptr size_;$/;"	m	class:__tsan::IgnoreSet
size_	lib/tsan/rtl/tsan_mutexset.h	/^  uptr size_;$/;"	m	class:__tsan::MutexSet
size_allocated	lib/asan/asan_stats.h	/^  uptr size_allocated;$/;"	m	struct:__asan::AsanMallocStats
size_class_info_array	lib/sanitizer_common/sanitizer_allocator_primary32.h	/^  SizeClassInfo size_class_info_array[kNumClasses];$/;"	m	class:SizeClassAllocator32
size_in_use	lib/asan/asan_stats.h	/^  uptr size_in_use;$/;"	m	struct:__asan::AsanMallocStats
size_log	lib/tsan/rtl/tsan_rtl.h	/^  u64 size_log() const { return (x_ >> (3 + kClkBits)) & 3; }$/;"	f	class:__tsan::Shadow
size_t	lib/asan/asan_new_delete.cc	59;"	d	file:
size_with_redzone	lib/asan/asan_interface_internal.h	/^    uptr size_with_redzone;  \/\/ The size with the redzone.$/;"	m	struct:__asan_global
sizeof	lib/interception/interception_type_test.cc	/^COMPILER_CHECK(sizeof(::INTMAX_T) == sizeof(intmax_t));$/;"	v
sizeof	lib/interception/interception_type_test.cc	/^COMPILER_CHECK(sizeof(::OFF64_T) == sizeof(off64_t));$/;"	v
sizeof	lib/interception/interception_type_test.cc	/^COMPILER_CHECK(sizeof(::OFF_T) == sizeof(off_t));$/;"	v
sizeof	lib/interception/interception_type_test.cc	/^COMPILER_CHECK(sizeof(::PTRDIFF_T) == sizeof(ptrdiff_t));$/;"	v
sizeof	lib/interception/interception_type_test.cc	/^COMPILER_CHECK(sizeof(::SIZE_T) == sizeof(size_t));$/;"	v
sizeof	lib/interception/interception_type_test.cc	/^COMPILER_CHECK(sizeof(::SSIZE_T) == sizeof(ssize_t));$/;"	v
sizeof	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^COMPILER_CHECK(sizeof(__sanitizer_sigaction) == sizeof(struct sigaction));$/;"	v
sizeof	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^COMPILER_CHECK(sizeof(socklen_t) == sizeof(unsigned));$/;"	v
sizeof	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^COMPILER_CHECK(sizeof(__sanitizer_sigaction) == sizeof(struct sigaction));$/;"	v
sizeof	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^COMPILER_CHECK(sizeof(socklen_t) == sizeof(unsigned));$/;"	v
sizeof	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^               sizeof(((ifaddrs *)nullptr)->ifa_ifu));$/;"	v
sizeof	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^COMPILER_CHECK(sizeof(__sanitizer_mallinfo) == sizeof(struct mallinfo));$/;"	v
sizeof	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^COMPILER_CHECK(sizeof(__sanitizer_sigaction) == sizeof(struct sigaction));$/;"	v
sizeof	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^COMPILER_CHECK(sizeof(socklen_t) == sizeof(unsigned));$/;"	v
sizeof	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^               sizeof(((ifaddrs *)nullptr)->ifa_ifu));$/;"	v
sizeof	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^COMPILER_CHECK(sizeof(__sanitizer_sigaction) == sizeof(struct sigaction));$/;"	v
sizeof	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^COMPILER_CHECK(sizeof(socklen_t) == sizeof(unsigned));$/;"	v
sizeof	lib/scudo/scudo_allocator.h	/^COMPILER_CHECK(sizeof(UnpackedHeader) == sizeof(PackedHeader));$/;"	m	namespace:__scudo
skip	test/profile/instrprof-dump.c	/^__attribute__((noinline)) int skip(int X) {$/;"	f
skip0	test/fuzzer/PrintUnstableStatsTest.cpp	/^bool skip0 = false;$/;"	v
skip1	test/fuzzer/PrintUnstableStatsTest.cpp	/^bool skip1 = false;$/;"	v
skip2	test/fuzzer/PrintUnstableStatsTest.cpp	/^bool skip2 = false;$/;"	v
skip_destructor_rounds	lib/builtins/emutls.c	/^    uintptr_t skip_destructor_rounds;$/;"	m	struct:emutls_address_array	file:
skip_linker_allocations	lib/lsan/lsan_common.cc	/^  bool skip_linker_allocations;$/;"	m	struct:__lsan::InvalidPCParam	file:
skip_whitespace	lib/sanitizer_common/sanitizer_flag_parser.cc	/^void FlagParser::skip_whitespace() {$/;"	f	class:__sanitizer::FlagParser
sleep	lib/tsan/rtl/tsan_report.h	/^  ReportStack *sleep;$/;"	m	class:__tsan::ReportDesc
sleeper	test/tsan/fork_multithreaded.cc	/^static void *sleeper(void *p) {$/;"	f	file:
slowest_unit_time_secs	lib/fuzzer/afl/afl_driver.cpp	/^static time_t slowest_unit_time_secs = 0;$/;"	v	file:
small_global	test/asan/TestCases/invalid-pointer-pairs-compare-errors.cc	/^char small_global[7] = {};$/;"	v
small_global	test/asan/TestCases/invalid-pointer-pairs-compare-null.cc	/^char small_global[7] = {};$/;"	v
small_global	test/asan/TestCases/invalid-pointer-pairs-compare-success.cc	/^char small_global[7] = {};$/;"	v
smallest_global	test/asan/TestCases/invalid-pointer-pairs-compare-errors.cc	/^char __attribute__((used)) smallest_global[5] = {};$/;"	v
snprintf	lib/profile/InstrProfilingPort.h	58;"	d
snprintf	lib/sanitizer_common/tests/sanitizer_printf_test.cc	105;"	d	file:
snprintf	test/asan/TestCases/printf-1.c	8;"	d	file:
sockfd	test/asan/TestCases/Linux/recvfrom.cc	/^int sockfd;$/;"	v
sockfd	test/msan/Linux/sendmsg.cc	/^int sockfd[2];$/;"	v
socksync	lib/tsan/rtl/tsan_fd.cc	/^  FdSync socksync;$/;"	m	struct:__tsan::FdContext	file:
sofunc	test/tsan/dlclose.cc	/^void sofunc() {$/;"	f
something	test/BlocksRuntime/josh.C	/^    int something;$/;"	m	struct:MyStruct	file:
sortWithBlock	test/BlocksRuntime/rettypepromotion.c	/^void sortWithBlock(long (^comp)(void *arg1, void *arg2)) {$/;"	f
sourceName	test/BlocksRuntime/testfilerunner.h	/^@property __strong char *sourceName;$/;"	v
sp	lib/asan/asan_errors.h	/^  uptr pc, bp, sp;$/;"	m	struct:__asan::ErrorGeneric
sp	lib/asan/asan_errors.h	/^  uptr pc, bp, sp;$/;"	m	struct:__asan::ErrorInvalidPointerPair
sp	lib/sanitizer_common/sanitizer_common.h	/^  uptr sp;$/;"	m	struct:__sanitizer::SignalContext
sp	lib/tsan/rtl/tsan_rtl.h	/^  uptr sp;$/;"	m	struct:__tsan::JmpBuf
space	lib/cfi/cfi.cc	/^  char space[kCfiShadowLimitsStorageSize];$/;"	m	union:__cfi::__anon53	file:
spam	test/asan/TestCases/Windows/demangled_names.cc	/^void spam(char *p) {$/;"	f	namespace:foo
spawn_child	test/asan/TestCases/exitcode.cc	/^int spawn_child(char **argv) {$/;"	f
sptr	lib/sanitizer_common/sanitizer_internal_defs.h	/^typedef signed   long long sptr;  \/\/ NOLINT$/;"	t	namespace:__sanitizer
src	test/profile/Linux/instrprof-value-merge.c	/^char src[200];$/;"	v
srcSigBits	lib/builtins/fp_extend.h	/^static const int srcSigBits = 10;$/;"	v
srcSigBits	lib/builtins/fp_extend.h	/^static const int srcSigBits = 23;$/;"	v
srcSigBits	lib/builtins/fp_extend.h	/^static const int srcSigBits = 52;$/;"	v
srcSigBits	lib/builtins/fp_trunc.h	/^static const int srcSigBits = 112;$/;"	v
srcSigBits	lib/builtins/fp_trunc.h	/^static const int srcSigBits = 23;$/;"	v
srcSigBits	lib/builtins/fp_trunc.h	/^static const int srcSigBits = 52;$/;"	v
srcToRep	lib/builtins/fp_extend.h	/^static __inline src_rep_t srcToRep(src_t x) {$/;"	f
srcToRep	lib/builtins/fp_trunc.h	/^static __inline src_rep_t srcToRep(src_t x) {$/;"	f
src_rep_t	lib/builtins/fp_extend.h	/^typedef uint16_t src_rep_t;$/;"	t
src_rep_t	lib/builtins/fp_extend.h	/^typedef uint32_t src_rep_t;$/;"	t
src_rep_t	lib/builtins/fp_extend.h	/^typedef uint64_t src_rep_t;$/;"	t
src_rep_t	lib/builtins/fp_trunc.h	/^typedef __uint128_t src_rep_t;$/;"	t
src_rep_t	lib/builtins/fp_trunc.h	/^typedef uint32_t src_rep_t;$/;"	t
src_rep_t	lib/builtins/fp_trunc.h	/^typedef uint64_t src_rep_t;$/;"	t
src_rep_t_clz	lib/builtins/fp_extend.h	/^static __inline int src_rep_t_clz(src_rep_t a) {$/;"	f
src_rep_t_clz	lib/builtins/fp_extend.h	24;"	d
src_rep_t_clz	lib/builtins/fp_extend.h	47;"	d
src_t	lib/builtins/fp_extend.h	/^typedef double src_t;$/;"	t
src_t	lib/builtins/fp_extend.h	/^typedef float src_t;$/;"	t
src_t	lib/builtins/fp_extend.h	/^typedef uint16_t src_t;$/;"	t
src_t	lib/builtins/fp_trunc.h	/^typedef double src_t;$/;"	t
src_t	lib/builtins/fp_trunc.h	/^typedef float src_t;$/;"	t
src_t	lib/builtins/fp_trunc.h	/^typedef long double src_t;$/;"	t
srep_t	lib/builtins/fp_lib.h	/^typedef __int128_t srep_t;$/;"	t
srep_t	lib/builtins/fp_lib.h	/^typedef int32_t srep_t;$/;"	t
srep_t	lib/builtins/fp_lib.h	/^typedef int64_t srep_t;$/;"	t
ss_flags	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int ss_flags;$/;"	m	struct:__sanitizer::__sanitizer_sigaltstack
ss_size	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  uptr ss_size;$/;"	m	struct:__sanitizer::__sanitizer_sigaltstack
ss_sp	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  void *ss_sp;$/;"	m	struct:__sanitizer::__sanitizer_sigaltstack
st	lib/sanitizer_common/tests/sanitizer_libc_test.cc	/^  struct stat st;$/;"	m	struct:stat_and_more	typeref:struct:stat_and_more::stat	file:
st_atime	lib/sanitizer_common/sanitizer_linux.cc	266;"	d	file:
st_atime_nsec	lib/sanitizer_common/sanitizer_linux.cc	274;"	d	file:
st_ctime	lib/sanitizer_common/sanitizer_linux.cc	268;"	d	file:
st_ctime_nsec	lib/sanitizer_common/sanitizer_linux.cc	276;"	d	file:
st_mtime	lib/sanitizer_common/sanitizer_linux.cc	267;"	d	file:
st_mtime_nsec	lib/sanitizer_common/sanitizer_linux.cc	275;"	d	file:
stack	lib/asan/asan_descriptions.h	/^      StackAddressDescription stack;$/;"	m	union:__asan::AddressDescription::AddressDescriptionData::__anon52
stack	lib/asan/asan_errors.h	/^  const BufferedStackTrace *stack;$/;"	m	struct:__asan::ErrorAllocationSizeTooBig
stack	lib/asan/asan_errors.h	/^  const BufferedStackTrace *stack;$/;"	m	struct:__asan::ErrorBadParamsToAnnotateContiguousContainer
stack	lib/asan/asan_errors.h	/^  const BufferedStackTrace *stack;$/;"	m	struct:__asan::ErrorCallocOverflow
stack	lib/asan/asan_errors.h	/^  const BufferedStackTrace *stack;$/;"	m	struct:__asan::ErrorInvalidAlignedAllocAlignment
stack	lib/asan/asan_errors.h	/^  const BufferedStackTrace *stack;$/;"	m	struct:__asan::ErrorInvalidAllocationAlignment
stack	lib/asan/asan_errors.h	/^  const BufferedStackTrace *stack;$/;"	m	struct:__asan::ErrorInvalidPosixMemalignAlignment
stack	lib/asan/asan_errors.h	/^  const BufferedStackTrace *stack;$/;"	m	struct:__asan::ErrorMallocUsableSizeNotOwned
stack	lib/asan/asan_errors.h	/^  const BufferedStackTrace *stack;$/;"	m	struct:__asan::ErrorOutOfMemory
stack	lib/asan/asan_errors.h	/^  const BufferedStackTrace *stack;$/;"	m	struct:__asan::ErrorPvallocOverflow
stack	lib/asan/asan_errors.h	/^  const BufferedStackTrace *stack;$/;"	m	struct:__asan::ErrorRssLimitExceeded
stack	lib/asan/asan_errors.h	/^  const BufferedStackTrace *stack;$/;"	m	struct:__asan::ErrorSanitizerGetAllocatedSizeNotOwned
stack	lib/asan/asan_errors.h	/^  const BufferedStackTrace *stack;$/;"	m	struct:__asan::ErrorStringFunctionMemoryRangesOverlap
stack	lib/asan/asan_errors.h	/^  const BufferedStackTrace *stack;$/;"	m	struct:__asan::ErrorStringFunctionSizeOverflow
stack	lib/asan/asan_thread.h	/^    StackTrace *stack;$/;"	m	struct:__asan::AsanThreadContext::CreateThreadContextArgs
stack	lib/sanitizer_common/sanitizer_allocator_report.cc	/^  const StackTrace* const stack;$/;"	m	class:__sanitizer::ScopedAllocatorErrorReport	file:
stack	lib/sanitizer_common/sanitizer_stackdepot.cc	/^  uptr stack[1];  \/\/ [size]$/;"	m	struct:__sanitizer::StackDepotNode	file:
stack	lib/sanitizer_common/sanitizer_symbolizer_markup.cc	/^  BufferedStackTrace *stack;$/;"	m	struct:__sanitizer::UnwindTraceArg	file:
stack	lib/sanitizer_common/sanitizer_unwind_linux_libcdep.cc	/^  BufferedStackTrace *stack;$/;"	m	struct:__sanitizer::UnwindTraceArg	file:
stack	lib/tsan/rtl/tsan_report.h	/^  ReportStack *stack;$/;"	m	struct:__tsan::ReportLocation
stack	lib/tsan/rtl/tsan_report.h	/^  ReportStack *stack;$/;"	m	struct:__tsan::ReportMop
stack	lib/tsan/rtl/tsan_report.h	/^  ReportStack *stack;$/;"	m	struct:__tsan::ReportMutex
stack	lib/tsan/rtl/tsan_report.h	/^  ReportStack *stack;$/;"	m	struct:__tsan::ReportThread
stack0	lib/tsan/rtl/tsan_trace.h	/^  BufferedStackTrace stack0;  \/\/ Start stack for the trace.$/;"	m	struct:__tsan::TraceHeader
stack_	lib/asan/asan_allocator.cc	/^  BufferedStackTrace* const stack_;$/;"	m	struct:__asan::QuarantineCallback	file:
stack_begin	lib/lsan/lsan_thread.cc	/^  uptr stack_begin, stack_end,$/;"	m	struct:__lsan::OnStartedArgs	file:
stack_begin	lib/lsan/lsan_thread.h	/^  uptr stack_begin() { return stack_begin_; }$/;"	f	class:__lsan::ThreadContext
stack_begin_	lib/lsan/lsan_thread.h	/^  uptr stack_begin_, stack_end_,$/;"	m	class:__lsan::ThreadContext
stack_bottom	lib/asan/asan_fuchsia.cc	/^  uptr stack_bottom, stack_size;$/;"	m	struct:__asan::AsanThread::InitOptions	file:
stack_bottom	lib/asan/asan_rtems.cc	/^  uptr stack_bottom, stack_size, tls_bottom, tls_size;$/;"	m	struct:__asan::AsanThread::InitOptions	file:
stack_bottom	lib/asan/asan_thread.cc	/^uptr AsanThread::stack_bottom() {$/;"	f	class:__asan::AsanThread
stack_bottom	lib/hwasan/hwasan_thread.h	/^  uptr stack_bottom() { return stack_bottom_; }$/;"	f	class:__hwasan::HwasanThread
stack_bottom	lib/msan/msan_thread.h	/^  uptr stack_bottom() { return stack_bottom_; }$/;"	f	class:__msan::MsanThread
stack_bottom_	lib/asan/asan_thread.h	/^  uptr stack_bottom_;$/;"	m	class:__asan::AsanThread
stack_bottom_	lib/hwasan/hwasan_thread.h	/^  uptr stack_bottom_;$/;"	m	class:__hwasan::HwasanThread
stack_bottom_	lib/msan/msan_thread.h	/^  uptr stack_bottom_;$/;"	m	class:__msan::MsanThread
stack_depot_reverse_map	lib/lsan/lsan_common.cc	/^  StackDepotReverseMap *stack_depot_reverse_map;$/;"	m	struct:__lsan::InvalidPCParam	file:
stack_end	lib/lsan/lsan_thread.cc	/^  uptr stack_begin, stack_end,$/;"	m	struct:__lsan::OnStartedArgs	file:
stack_end	lib/lsan/lsan_thread.h	/^  uptr stack_end() { return stack_end_; }$/;"	f	class:__lsan::ThreadContext
stack_end_	lib/lsan/lsan_thread.h	/^  uptr stack_begin_, stack_end_,$/;"	m	class:__lsan::ThreadContext
stack_id	lib/asan/asan_globals.cc	/^  u32 stack_id;$/;"	m	struct:__asan::GlobalRegistrationSite	file:
stack_id	lib/asan/asan_thread.h	/^  u32 stack_id;$/;"	m	class:__asan::AsanThreadContext
stack_id1	lib/asan/asan_errors.h	/^  u32 stack_id1, stack_id2;$/;"	m	struct:__asan::ErrorODRViolation
stack_id2	lib/asan/asan_errors.h	/^  u32 stack_id1, stack_id2;$/;"	m	struct:__asan::ErrorODRViolation
stack_size	lib/asan/asan_fuchsia.cc	/^  uptr stack_bottom, stack_size;$/;"	m	struct:__asan::AsanThread::InitOptions	file:
stack_size	lib/asan/asan_rtems.cc	/^  uptr stack_bottom, stack_size, tls_bottom, tls_size;$/;"	m	struct:__asan::AsanThread::InitOptions	file:
stack_size	lib/asan/asan_thread.cc	/^uptr AsanThread::stack_size() {$/;"	f	class:__asan::AsanThread
stack_size	lib/sanitizer_common/sanitizer_unwind_linux_libcdep.cc	/^  uptr stack_size;$/;"	m	struct:__sanitizer::__anon62	file:
stack_size_	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^  uptr stack_size_;$/;"	m	class:__sanitizer::ScopedStackSpaceWithGuard	file:
stack_size_log	lib/asan/asan_fake_stack.h	/^  uptr stack_size_log() const { return stack_size_log_; }$/;"	f	class:__asan::FakeStack
stack_size_log_	lib/asan/asan_fake_stack.h	/^  uptr stack_size_log_;$/;"	m	class:__asan::FakeStack
stack_switching_	lib/asan/asan_thread.h	/^  atomic_uint8_t stack_switching_;$/;"	m	class:__asan::AsanThread
stack_top	lib/asan/asan_thread.cc	/^uptr AsanThread::stack_top() {$/;"	f	class:__asan::AsanThread
stack_top	lib/hwasan/hwasan_thread.h	/^  uptr stack_top() { return stack_top_; }$/;"	f	class:__hwasan::HwasanThread
stack_top	lib/msan/msan_thread.h	/^  uptr stack_top() { return stack_top_; }$/;"	f	class:__msan::MsanThread
stack_top	lib/sanitizer_common/sanitizer_unwind_linux_libcdep.cc	/^  uptr stack_top;$/;"	m	struct:__sanitizer::__anon62	file:
stack_top_	lib/asan/asan_thread.h	/^  uptr stack_top_;$/;"	m	class:__asan::AsanThread
stack_top_	lib/hwasan/hwasan_thread.h	/^  uptr stack_top_;$/;"	m	class:__hwasan::HwasanThread
stack_top_	lib/msan/msan_thread.h	/^  uptr stack_top_;$/;"	m	class:__msan::MsanThread
stack_trace_id	lib/asan/asan_allocator.cc	/^u32 LsanMetadata::stack_trace_id() const {$/;"	f	class:__lsan::LsanMetadata
stack_trace_id	lib/lsan/lsan_allocator.cc	/^u32 LsanMetadata::stack_trace_id() const {$/;"	f	class:__lsan::LsanMetadata
stack_trace_id	lib/lsan/lsan_allocator.h	/^  u32 stack_trace_id;$/;"	m	struct:__lsan::ChunkMetadata
stack_trace_id	lib/lsan/lsan_common.h	/^  u32 stack_trace_id;$/;"	m	struct:__lsan::Leak
stacks	lib/tsan/rtl/tsan_report.h	/^  Vector<ReportStack*> stacks;$/;"	m	class:__tsan::ReportDesc
stacks_	lib/tsan/rtl/tsan_ignoreset.h	/^  u32 stacks_[kMaxSize];$/;"	m	class:__tsan::IgnoreSet
stacks_thread_func	test/lsan/TestCases/use_stacks_threaded.cc	/^void *stacks_thread_func(void *arg) {$/;"	f
standalone_malloc_test	lib/sanitizer_common/tests/standalone_malloc_test.cc	/^int standalone_malloc_test() {$/;"	f
start	lib/cfi/cfi.cc	/^    uptr start;$/;"	m	struct:__cfi::__anon53::__anon54	file:
start	lib/msan/msan.h	/^  uptr start;$/;"	m	struct:MappingDesc
start	lib/sanitizer_common/sanitizer_procmaps.h	/^  uptr start;$/;"	m	class:__sanitizer::MemoryMappedSegment
start	lib/sanitizer_common/sanitizer_symbolizer.h	/^  uptr start;$/;"	m	struct:__sanitizer::DataInfo
start	lib/sanitizer_common/sanitizer_tls_get_addr.cc	/^  uptr start;$/;"	m	struct:__sanitizer::Glibc_2_19_tls_header	file:
start	lib/tsan/go/tsan_go.cc	/^  uptr start;$/;"	m	struct:__tsan::SymbolizeDataContext	file:
startPolling	test/asan/TestCases/Linux/pthread_create_from_constructor.cc	/^void __attribute__((constructor)) startPolling() {$/;"	f
start_hook_	lib/sanitizer_common/sanitizer_symbolizer.h	/^  StartSymbolizationHook start_hook_;$/;"	m	class:__sanitizer::final
start_pc	lib/sanitizer_common/tests/sanitizer_stacktrace_test.cc	/^  uhwptr start_pc;$/;"	m	class:__sanitizer::FastUnwindTest	file:
start_routine	lib/dfsan/dfsan_custom.cc	/^  void *start_routine;$/;"	m	struct:pthread_create_info	file:
start_routine	lib/safestack/safestack.cc	/^  void *(*start_routine)(void *);$/;"	m	struct:tinfo	file:
start_routine	lib/sanitizer_common/tests/sanitizer_pthread_wrappers.h	/^  void *(*start_routine)(void *);$/;"	m	struct:PthreadHelperCreateThreadInfo
start_routine	test/asan/TestCases/Posix/concurrent_overflow.cc	/^static void *start_routine(void *arg) {$/;"	f	file:
start_routine_	lib/asan/asan_thread.h	/^  thread_callback_t start_routine_;$/;"	m	class:__asan::AsanThread
start_routine_	lib/hwasan/hwasan_thread.h	/^  thread_callback_t start_routine_;$/;"	m	class:__hwasan::HwasanThread
start_routine_	lib/msan/msan_thread.h	/^  thread_callback_t start_routine_;$/;"	m	class:__msan::MsanThread
start_routine_arg	lib/safestack/safestack.cc	/^  void *start_routine_arg;$/;"	m	struct:tinfo	file:
start_routine_trampoline	lib/dfsan/dfsan_custom.cc	/^  void *(*start_routine_trampoline)(void *, void *, dfsan_label, dfsan_label *);$/;"	m	struct:pthread_create_info	file:
start_thread_group	test/tsan/bench.h	/^void start_thread_group(int nth, void(*f)(int tid)) {$/;"	f
stat	lib/sanitizer_common/sanitizer_linux.cc	45;"	d	file:
stat	lib/sanitizer_common/sanitizer_linux.cc	47;"	d	file:
stat	lib/sanitizer_common/symbolizer/sanitizer_wrappers.cc	/^int stat(const char *path, struct stat *buf) { STAT(stat, path, buf); }$/;"	f
stat	lib/tsan/rtl/tsan_rtl.h	/^  u64 stat[StatCnt];$/;"	m	struct:__tsan::Context
stat	lib/tsan/rtl/tsan_rtl.h	/^  u64 stat[StatCnt];$/;"	m	struct:__tsan::ThreadState
stat64_to_stat	lib/sanitizer_common/sanitizer_linux.cc	/^static void stat64_to_stat(struct stat64 *in, struct stat *out) {$/;"	f	namespace:__sanitizer
stat_and_more	lib/sanitizer_common/tests/sanitizer_libc_test.cc	/^struct stat_and_more {$/;"	s	file:
stat_type_	lib/tsan/rtl/tsan_mutex.h	/^  StatType stat_type_;$/;"	m	class:__tsan::Mutex
state	lib/fuzzer/FuzzerSHA1.cpp	/^	uint32_t state[HASH_LENGTH\/4];$/;"	m	struct:__anon36::sha1nfo	file:
state	lib/hwasan/hwasan_allocator.cc	/^  u64 state : 2;$/;"	m	struct:__hwasan::Metadata	file:
state	test/tsan/real_deadlock_detector_stress_test.cc	/^  int state;$/;"	m	struct:Mutex	file:
state_	lib/sanitizer_common/sanitizer_mutex.h	/^  atomic_uint32_t state_;$/;"	m	class:__sanitizer::RWMutex
state_	lib/sanitizer_common/sanitizer_mutex.h	/^  atomic_uint8_t state_;$/;"	m	class:__sanitizer::StaticSpinMutex
state_	lib/sanitizer_common/sanitizer_symbolizer_libbacktrace.h	/^  void *state_;  \/\/ Leaked.$/;"	m	class:__sanitizer::LibbacktraceSymbolizer
state_	lib/tsan/rtl/tsan_mutex.h	/^  atomic_uintptr_t state_;$/;"	m	class:__tsan::Mutex
state_	test/tsan/mutex_annotations.cc	/^  long long state_;$/;"	m	class:Mutex	file:
static10	lib/asan/tests/asan_globals_test.cc	/^static char static10[10];$/;"	v	file:
static110	lib/asan/tests/asan_test.cc	/^static char static110[110];$/;"	v	file:
static_allocator_cache	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^static AllocatorCache static_allocator_cache;$/;"	v	file:
static_list	lib/sanitizer_common/tests/sanitizer_list_test.cc	/^static List static_list;$/;"	m	namespace:__sanitizer	file:
static_var	test/asan/TestCases/Posix/dlclose-test.cc	/^static int static_var;$/;"	v	file:
stats	lib/asan/asan_thread.h	/^  AsanStats &stats() { return stats_; }$/;"	f	class:__asan::AsanThread
stats	lib/sanitizer_common/sanitizer_allocator_secondary.h	/^  } stats;$/;"	m	class:LargeMmapAllocator	typeref:struct:LargeMmapAllocator::Stats
stats	lib/sanitizer_common/sanitizer_stackdepotbase.h	/^  StackDepotStats stats;$/;"	m	class:__sanitizer::StackDepotBase
stats_	lib/asan/asan_thread.h	/^  AsanStats stats_;$/;"	m	class:__asan::AsanThread
stats_	lib/sanitizer_common/sanitizer_allocator_combined.h	/^  AllocatorGlobalStats stats_;$/;"	m	class:CombinedAllocator
stats_	lib/sanitizer_common/sanitizer_allocator_local_cache.h	/^  AllocatorStats stats_;$/;"	m	struct:SizeClassAllocator32LocalCache
stats_	lib/sanitizer_common/sanitizer_allocator_local_cache.h	/^  AllocatorStats stats_;$/;"	m	struct:SizeClassAllocator64LocalCache
stats_	lib/sanitizer_common/sanitizer_allocator_stats.h	/^  atomic_uintptr_t stats_[AllocatorStatCount];$/;"	m	class:AllocatorStats
stats_fd	lib/stats/stats.cc	/^fd_t stats_fd;$/;"	m	namespace:__anon3	file:
status	lib/sanitizer_common/sanitizer_thread_registry.h	/^  ThreadStatus status;$/;"	m	class:__sanitizer::ThreadContextBase
std	lib/asan/asan_new_delete.cc	/^namespace std {$/;"	n	file:
std	lib/hwasan/hwasan_new_delete.cc	/^namespace std {$/;"	n	file:
std	lib/lsan/lsan_interceptors.cc	/^namespace std {$/;"	n	file:
std	lib/msan/msan_new_delete.cc	/^namespace std {$/;"	n	file:
std	lib/sanitizer_common/tests/sanitizer_allocator_testlib.cc	/^namespace std {$/;"	n	file:
std	lib/scudo/scudo_new_delete.cpp	/^namespace std {$/;"	n	file:
std	lib/tsan/rtl/tsan_new_delete.cc	/^namespace std {$/;"	n	file:
std	lib/ubsan/ubsan_type_hash_itanium.cc	/^namespace std {$/;"	n	file:
std	test/BlocksRuntime/makefile	/^	gcc -fobjc-gc-only -g -arch x86_64 -arch i386 -std=gnu99 testfilerunner.m -o testfilerunner -framework Foundation$/;"	m
std	test/asan/TestCases/Linux/aligned_delete_test.cc	/^namespace std {$/;"	n	file:
std	test/sanitizer_common/TestCases/Linux/new_delete_test.cc	/^namespace std {$/;"	n	file:
std	test/scudo/aligned-new.cpp	/^namespace std {$/;"	n	file:
std_suppressions	lib/tsan/rtl/tsan_suppressions.cc	/^static const char *const std_suppressions =$/;"	v	file:
stderr	lib/tsan/rtl/tsan_interceptors.cc	40;"	d	file:
stderr	lib/tsan/rtl/tsan_interceptors.cc	54;"	d	file:
stdout	lib/tsan/rtl/tsan_interceptors.cc	39;"	d	file:
stdout	lib/tsan/rtl/tsan_interceptors.cc	53;"	d	file:
sticky	lib/builtins/i386/floatundisf.S	/^sticky:$/;"	l
stk	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^    u32 stk;$/;"	m	struct:__sanitizer::DeadlockDetectorTLS::LockWithContext
stk	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^  u32 stk;$/;"	m	struct:__sanitizer::ThreadMutex	file:
stk	lib/sanitizer_common/sanitizer_deadlock_detector_interface.h	/^    u32 stk[2];  \/\/ stack ids for the edge$/;"	m	struct:__sanitizer::DDReport::__anon81
stk	lib/sanitizer_common/sanitizer_deadlock_detector_interface.h	/^  u32  stk;  \/\/ creation stack$/;"	m	struct:__sanitizer::DDMutex
stk	lib/tsan/rtl/tsan_defs.h	/^  u32  stk;$/;"	m	struct:__tsan::MBlock
stk0	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^  u32 stk0;$/;"	m	struct:__sanitizer::Link	file:
stk1	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^  u32 stk1;$/;"	m	struct:__sanitizer::Link	file:
stk_addr	lib/tsan/rtl/tsan_rtl.h	/^  const uptr stk_addr;$/;"	m	struct:__tsan::ThreadState
stk_addr	lib/tsan/rtl/tsan_rtl_thread.cc	/^  uptr stk_addr;$/;"	m	struct:__tsan::OnStartedArgs	file:
stk_from	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^    u32 stk_from;$/;"	m	struct:__sanitizer::DeadlockDetector::Edge
stk_size	lib/tsan/rtl/tsan_rtl.h	/^  const uptr stk_size;$/;"	m	struct:__tsan::ThreadState
stk_size	lib/tsan/rtl/tsan_rtl_thread.cc	/^  uptr stk_size;$/;"	m	struct:__tsan::OnStartedArgs	file:
stk_to	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^    u32 stk_to;$/;"	m	struct:__sanitizer::DeadlockDetector::Edge
stop	test/tsan/signal_block.cc	/^int stop;$/;"	v
stop	test/tsan/signal_reset.cc	/^int stop;$/;"	v
stop_background_thread	lib/tsan/rtl/tsan_rtl.h	/^  atomic_uint32_t stop_background_thread;$/;"	m	struct:__tsan::Context
stoptheworld_tracer_pid	lib/sanitizer_common/sanitizer_common.cc	/^uptr stoptheworld_tracer_pid = 0;$/;"	m	namespace:__sanitizer	file:
stoptheworld_tracer_ppid	lib/sanitizer_common/sanitizer_common.cc	/^uptr stoptheworld_tracer_ppid = 0;$/;"	m	namespace:__sanitizer	file:
storage_	lib/sanitizer_common/sanitizer_symbolizer.h	/^    InternalMmapVector<const char*> storage_;$/;"	m	class:__sanitizer::final::ModuleNameOwner
storage_size	lib/msan/msan_chained_origin_depot.cc	/^  static uptr storage_size(const args_type &args) {$/;"	f	struct:__msan::ChainedOriginDepotNode
storage_size	lib/sanitizer_common/sanitizer_stackdepot.cc	/^  static uptr storage_size(const args_type &args) {$/;"	f	struct:__sanitizer::StackDepotNode
store	lib/msan/msan_chained_origin_depot.cc	/^  void store(const args_type &args, u32 other_hash) {$/;"	f	struct:__msan::ChainedOriginDepotNode
store	lib/sanitizer_common/sanitizer_stackdepot.cc	/^  void store(const args_type &args, u32 hash) {$/;"	f	struct:__sanitizer::StackDepotNode
storeHeader	lib/scudo/scudo_allocator.cpp	/^  static INLINE void storeHeader(void *Ptr, UnpackedHeader *NewUnpackedHeader) {$/;"	f	namespace:__scudo::Chunk
str	lib/dfsan/dfsan_custom.cc	/^  char *str;$/;"	m	struct:Formatter	file:
str_cur	lib/dfsan/dfsan_custom.cc	/^  char *str_cur() { return str + str_off; }$/;"	f	struct:Formatter
str_off	lib/dfsan/dfsan_custom.cc	/^  size_t str_off;$/;"	m	struct:Formatter	file:
strcasestr	test/fuzzer/StrstrTest.cpp	13;"	d	file:
strcat	lib/asan/asan_win_dll_thunk.cc	/^INTERCEPT_LIBRARY_FUNCTION(strcat);  \/\/ NOLINT$/;"	v
strchr	lib/asan/asan_win_dll_thunk.cc	/^INTERCEPT_LIBRARY_FUNCTION(strchr);$/;"	v
strcmp	lib/asan/asan_win_dll_thunk.cc	/^INTERCEPT_LIBRARY_FUNCTION(strcmp);$/;"	v
strcpy	lib/asan/asan_win_dll_thunk.cc	/^INTERCEPT_LIBRARY_FUNCTION(strcpy);  \/\/ NOLINT$/;"	v
strcspn	lib/asan/asan_win_dll_thunk.cc	/^INTERCEPT_LIBRARY_FUNCTION(strcspn);$/;"	v
strdup	lib/asan/asan_win_dll_thunk.cc	/^INTERCEPT_LIBRARY_FUNCTION(strdup);$/;"	v
stress	test/tsan/java_alloc.cc	/^void stress(jptr addr) {$/;"	f
strlen	lib/asan/asan_win_dll_thunk.cc	/^INTERCEPT_LIBRARY_FUNCTION(strlen);$/;"	v
strlen	lib/sanitizer_common/symbolizer/sanitizer_wrappers.cc	/^size_t strlen(const char *s) { return __sanitizer::internal_strlen(s); }$/;"	f
strncat	lib/asan/asan_win_dll_thunk.cc	/^INTERCEPT_LIBRARY_FUNCTION(strncat);$/;"	v
strncmp	lib/asan/asan_win_dll_thunk.cc	/^INTERCEPT_LIBRARY_FUNCTION(strncmp);$/;"	v
strncpy	lib/asan/asan_win_dll_thunk.cc	/^INTERCEPT_LIBRARY_FUNCTION(strncpy);$/;"	v
strnlen	lib/asan/asan_win_dll_thunk.cc	/^INTERCEPT_LIBRARY_FUNCTION(strnlen);$/;"	v
strpbrk	lib/asan/asan_win_dll_thunk.cc	/^INTERCEPT_LIBRARY_FUNCTION(strpbrk);$/;"	v
strrchr	lib/asan/asan_win_dll_thunk.cc	/^INTERCEPT_LIBRARY_FUNCTION(strrchr);$/;"	v
strspn	lib/asan/asan_win_dll_thunk.cc	/^INTERCEPT_LIBRARY_FUNCTION(strspn);$/;"	v
strstr	lib/asan/asan_win_dll_thunk.cc	/^INTERCEPT_LIBRARY_FUNCTION(strstr);$/;"	v
strtok	lib/asan/asan_win_dll_thunk.cc	/^INTERCEPT_LIBRARY_FUNCTION(strtok);$/;"	v
strtol	lib/asan/asan_win_dll_thunk.cc	/^INTERCEPT_LIBRARY_FUNCTION(strtol);$/;"	v
strtol	test/asan/TestCases/Linux/interception_test.cc	/^extern "C" long strtol(const char *nptr, char **endptr, int base) {$/;"	f
strtol	test/asan/TestCases/interception_failure_test.cc	/^extern "C" long strtol(const char *nptr, char **endptr, int base) {$/;"	f
struct_ElfW_Phdr_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_ElfW_Phdr_sz = sizeof(Elf_Phdr);$/;"	m	namespace:__sanitizer	file:
struct_ElfW_Phdr_sz	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^unsigned struct_ElfW_Phdr_sz = sizeof(Elf_Phdr);$/;"	m	namespace:__sanitizer	file:
struct_ElfW_Phdr_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^unsigned struct_ElfW_Phdr_sz = sizeof(ElfW(Phdr));$/;"	m	namespace:__sanitizer	file:
struct_ElfW_Phdr_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^unsigned struct_ElfW_Phdr_sz = sizeof(Elf_Phdr);$/;"	m	namespace:__sanitizer	file:
struct_ElfW_Phdr_sz	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned struct_ElfW_Phdr_sz = sizeof(ElfW(Phdr));$/;"	m	namespace:__sanitizer	file:
struct_RF_ComponentLabel_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_RF_ComponentLabel_sz = sizeof(RF_ComponentLabel_t);$/;"	m	namespace:__sanitizer	file:
struct_RF_ProgressInfo_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_RF_ProgressInfo_sz = sizeof(RF_ProgressInfo_t);$/;"	m	namespace:__sanitizer	file:
struct_RF_SingleComponent_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_RF_SingleComponent_sz = sizeof(RF_SingleComponent_t);$/;"	m	namespace:__sanitizer	file:
struct_RF_SparetWait_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_RF_SparetWait_sz = sizeof(RF_SparetWait_t);$/;"	m	namespace:__sanitizer	file:
struct___old_kernel_stat_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  const unsigned struct___old_kernel_stat_sz = 0;$/;"	m	namespace:__sanitizer
struct___old_kernel_stat_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  const unsigned struct___old_kernel_stat_sz = 32;$/;"	m	namespace:__sanitizer
struct__agp_allocate_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct__agp_allocate_sz = sizeof(struct _agp_allocate);$/;"	m	namespace:__sanitizer	file:
struct__agp_bind_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct__agp_bind_sz = sizeof(struct _agp_bind);$/;"	m	namespace:__sanitizer	file:
struct__agp_info_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct__agp_info_sz = sizeof(struct _agp_info);$/;"	m	namespace:__sanitizer	file:
struct__agp_setup_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct__agp_setup_sz = sizeof(struct _agp_setup);$/;"	m	namespace:__sanitizer	file:
struct__agp_unbind_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct__agp_unbind_sz = sizeof(struct _agp_unbind);$/;"	m	namespace:__sanitizer	file:
struct__old_mixer_info_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct__old_mixer_info_sz = sizeof(struct _old_mixer_info);$/;"	m	namespace:__sanitizer	file:
struct_altqreq_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_altqreq_sz = sizeof(altqreq);$/;"	m	namespace:__sanitizer	file:
struct_amr_user_ioctl_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_amr_user_ioctl_sz = sizeof(amr_user_ioctl);$/;"	m	namespace:__sanitizer	file:
struct_ap_control_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_ap_control_sz = sizeof(ap_control);$/;"	m	namespace:__sanitizer	file:
struct_apm_ctl_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_apm_ctl_sz = sizeof(apm_ctl);$/;"	m	namespace:__sanitizer	file:
struct_apm_event_info_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_apm_event_info_sz = sizeof(apm_event_info);$/;"	m	namespace:__sanitizer	file:
struct_apm_power_info_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_apm_power_info_sz = sizeof(apm_power_info);$/;"	m	namespace:__sanitizer	file:
struct_arpreq_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_arpreq_sz = sizeof(struct arpreq);$/;"	m	namespace:__sanitizer	file:
struct_atabusiodetach_args_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_atabusiodetach_args_sz = sizeof(atabusiodetach_args);$/;"	m	namespace:__sanitizer	file:
struct_atabusioscan_args_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_atabusioscan_args_sz = sizeof(atabusioscan_args);$/;"	m	namespace:__sanitizer	file:
struct_atareq_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_atareq_sz = sizeof(struct atareq);$/;"	m	namespace:__sanitizer	file:
struct_ath_diag_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_ath_diag_sz = sizeof(ath_diag);$/;"	m	namespace:__sanitizer	file:
struct_atm_flowmap_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_atm_flowmap_sz = sizeof(atm_flowmap);$/;"	m	namespace:__sanitizer	file:
struct_atm_pseudoioctl_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_atm_pseudoioctl_sz = sizeof(atm_pseudoioctl);$/;"	m	namespace:__sanitizer	file:
struct_audio_buf_info_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_audio_buf_info_sz = sizeof(audio_buf_info);$/;"	m	namespace:__sanitizer	file:
struct_audio_buf_info_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_audio_buf_info_sz = sizeof(struct audio_buf_info);$/;"	m	namespace:__sanitizer	file:
struct_audio_device_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_audio_device_sz = sizeof(audio_device);$/;"	m	namespace:__sanitizer	file:
struct_audio_encoding_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_audio_encoding_sz = sizeof(audio_encoding);$/;"	m	namespace:__sanitizer	file:
struct_audio_info_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_audio_info_sz = sizeof(audio_info);$/;"	m	namespace:__sanitizer	file:
struct_audio_offset_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_audio_offset_sz = sizeof(audio_offset);$/;"	m	namespace:__sanitizer	file:
struct_ax25_parms_struct_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_ax25_parms_struct_sz = sizeof(struct ax25_parms_struct);$/;"	m	namespace:__sanitizer	file:
struct_bio_locate_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_bio_locate_sz = sizeof(bio_locate);$/;"	m	namespace:__sanitizer	file:
struct_bioc_alarm_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_bioc_alarm_sz = sizeof(bioc_alarm);$/;"	m	namespace:__sanitizer	file:
struct_bioc_blink_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_bioc_blink_sz = sizeof(bioc_blink);$/;"	m	namespace:__sanitizer	file:
struct_bioc_disk_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_bioc_disk_sz = sizeof(bioc_disk);$/;"	m	namespace:__sanitizer	file:
struct_bioc_inq_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_bioc_inq_sz = sizeof(bioc_inq);$/;"	m	namespace:__sanitizer	file:
struct_bioc_setstate_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_bioc_setstate_sz = sizeof(bioc_setstate);$/;"	m	namespace:__sanitizer	file:
struct_bioc_vol_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_bioc_vol_sz = sizeof(bioc_vol);$/;"	m	namespace:__sanitizer	file:
struct_bioc_volops_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_bioc_volops_sz = sizeof(bioc_volops);$/;"	m	namespace:__sanitizer	file:
struct_bktr_chnlset_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_bktr_chnlset_sz = sizeof(bktr_chnlset);$/;"	m	namespace:__sanitizer	file:
struct_bktr_remote_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_bktr_remote_sz = sizeof(bktr_remote);$/;"	m	namespace:__sanitizer	file:
struct_blue_conf_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_blue_conf_sz = sizeof(blue_conf);$/;"	m	namespace:__sanitizer	file:
struct_blue_interface_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_blue_interface_sz = sizeof(blue_interface);$/;"	m	namespace:__sanitizer	file:
struct_blue_stats_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_blue_stats_sz = sizeof(blue_stats);$/;"	m	namespace:__sanitizer	file:
struct_bpf_dltlist_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_bpf_dltlist_sz = sizeof(bpf_dltlist);$/;"	m	namespace:__sanitizer	file:
struct_bpf_program_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_bpf_program_sz = sizeof(bpf_program);$/;"	m	namespace:__sanitizer	file:
struct_bpf_stat_old_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_bpf_stat_old_sz = sizeof(bpf_stat_old);$/;"	m	namespace:__sanitizer	file:
struct_bpf_stat_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_bpf_stat_sz = sizeof(bpf_stat);$/;"	m	namespace:__sanitizer	file:
struct_bpf_version_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_bpf_version_sz = sizeof(bpf_version);$/;"	m	namespace:__sanitizer	file:
struct_btreq_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_btreq_sz = sizeof(btreq);$/;"	m	namespace:__sanitizer	file:
struct_btsco_info_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_btsco_info_sz = sizeof(btsco_info);$/;"	m	namespace:__sanitizer	file:
struct_buffmem_desc_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_buffmem_desc_sz = sizeof(buffmem_desc);$/;"	m	namespace:__sanitizer	file:
struct_cbq_add_class_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_cbq_add_class_sz = sizeof(cbq_add_class);$/;"	m	namespace:__sanitizer	file:
struct_cbq_add_filter_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_cbq_add_filter_sz = sizeof(cbq_add_filter);$/;"	m	namespace:__sanitizer	file:
struct_cbq_delete_class_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_cbq_delete_class_sz = sizeof(cbq_delete_class);$/;"	m	namespace:__sanitizer	file:
struct_cbq_delete_filter_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_cbq_delete_filter_sz = sizeof(cbq_delete_filter);$/;"	m	namespace:__sanitizer	file:
struct_cbq_getstats_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_cbq_getstats_sz = sizeof(cbq_getstats);$/;"	m	namespace:__sanitizer	file:
struct_cbq_interface_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_cbq_interface_sz = sizeof(cbq_interface);$/;"	m	namespace:__sanitizer	file:
struct_cbq_modify_class_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_cbq_modify_class_sz = sizeof(cbq_modify_class);$/;"	m	namespace:__sanitizer	file:
struct_ccd_ioctl_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_ccd_ioctl_sz = sizeof(ccd_ioctl);$/;"	m	namespace:__sanitizer	file:
struct_cdnr_add_element_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_cdnr_add_element_sz = sizeof(cdnr_add_element);$/;"	m	namespace:__sanitizer	file:
struct_cdnr_add_filter_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_cdnr_add_filter_sz = sizeof(cdnr_add_filter);$/;"	m	namespace:__sanitizer	file:
struct_cdnr_add_tbmeter_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_cdnr_add_tbmeter_sz = sizeof(cdnr_add_tbmeter);$/;"	m	namespace:__sanitizer	file:
struct_cdnr_add_trtcm_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_cdnr_add_trtcm_sz = sizeof(cdnr_add_trtcm);$/;"	m	namespace:__sanitizer	file:
struct_cdnr_add_tswtcm_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_cdnr_add_tswtcm_sz = sizeof(cdnr_add_tswtcm);$/;"	m	namespace:__sanitizer	file:
struct_cdnr_delete_element_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_cdnr_delete_element_sz = sizeof(cdnr_delete_element);$/;"	m	namespace:__sanitizer	file:
struct_cdnr_delete_filter_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_cdnr_delete_filter_sz = sizeof(cdnr_delete_filter);$/;"	m	namespace:__sanitizer	file:
struct_cdnr_get_stats_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_cdnr_get_stats_sz = sizeof(cdnr_get_stats);$/;"	m	namespace:__sanitizer	file:
struct_cdnr_interface_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_cdnr_interface_sz = sizeof(cdnr_interface);$/;"	m	namespace:__sanitizer	file:
struct_cdnr_modify_tbmeter_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_cdnr_modify_tbmeter_sz = sizeof(cdnr_modify_tbmeter);$/;"	m	namespace:__sanitizer	file:
struct_cdnr_modify_trtcm_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_cdnr_modify_trtcm_sz = sizeof(cdnr_modify_trtcm);$/;"	m	namespace:__sanitizer	file:
struct_cdnr_modify_tswtcm_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_cdnr_modify_tswtcm_sz = sizeof(cdnr_modify_tswtcm);$/;"	m	namespace:__sanitizer	file:
struct_cdnr_tbmeter_stats_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_cdnr_tbmeter_stats_sz = sizeof(cdnr_tbmeter_stats);$/;"	m	namespace:__sanitizer	file:
struct_cdnr_tcm_stats_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_cdnr_tcm_stats_sz = sizeof(cdnr_tcm_stats);$/;"	m	namespace:__sanitizer	file:
struct_cdrom_msf_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_cdrom_msf_sz = sizeof(struct cdrom_msf);$/;"	m	namespace:__sanitizer	file:
struct_cdrom_multisession_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_cdrom_multisession_sz = sizeof(struct cdrom_multisession);$/;"	m	namespace:__sanitizer	file:
struct_cdrom_read_audio_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_cdrom_read_audio_sz = sizeof(struct cdrom_read_audio);$/;"	m	namespace:__sanitizer	file:
struct_cdrom_subchnl_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_cdrom_subchnl_sz = sizeof(struct cdrom_subchnl);$/;"	m	namespace:__sanitizer	file:
struct_cdrom_ti_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_cdrom_ti_sz = sizeof(struct cdrom_ti);$/;"	m	namespace:__sanitizer	file:
struct_cdrom_tocentry_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_cdrom_tocentry_sz = sizeof(struct cdrom_tocentry);$/;"	m	namespace:__sanitizer	file:
struct_cdrom_tochdr_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_cdrom_tochdr_sz = sizeof(struct cdrom_tochdr);$/;"	m	namespace:__sanitizer	file:
struct_cdrom_volctrl_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_cdrom_volctrl_sz = sizeof(struct cdrom_volctrl);$/;"	m	namespace:__sanitizer	file:
struct_cgd_ioctl_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_cgd_ioctl_sz = sizeof(cgd_ioctl);$/;"	m	namespace:__sanitizer	file:
struct_cgd_user_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_cgd_user_sz = sizeof(cgd_user);$/;"	m	namespace:__sanitizer	file:
struct_changer_element_status_request_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_changer_element_status_request_sz =$/;"	m	namespace:__sanitizer	file:
struct_changer_exchange_request_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_changer_exchange_request_sz = sizeof(changer_exchange_request);$/;"	m	namespace:__sanitizer	file:
struct_changer_move_request_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_changer_move_request_sz = sizeof(changer_move_request);$/;"	m	namespace:__sanitizer	file:
struct_changer_params_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_changer_params_sz = sizeof(changer_params);$/;"	m	namespace:__sanitizer	file:
struct_changer_position_request_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_changer_position_request_sz = sizeof(changer_position_request);$/;"	m	namespace:__sanitizer	file:
struct_changer_set_voltag_request_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_changer_set_voltag_request_sz =$/;"	m	namespace:__sanitizer	file:
struct_clockctl_adjtime_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_clockctl_adjtime_sz = sizeof(clockctl_adjtime);$/;"	m	namespace:__sanitizer	file:
struct_clockctl_clock_settime_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_clockctl_clock_settime_sz = sizeof(clockctl_clock_settime);$/;"	m	namespace:__sanitizer	file:
struct_clockctl_ntp_adjtime_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_clockctl_ntp_adjtime_sz = sizeof(clockctl_ntp_adjtime);$/;"	m	namespace:__sanitizer	file:
struct_clockctl_settimeofday_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_clockctl_settimeofday_sz = sizeof(clockctl_settimeofday);$/;"	m	namespace:__sanitizer	file:
struct_cnwistats_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_cnwistats_sz = sizeof(cnwistats);$/;"	m	namespace:__sanitizer	file:
struct_cnwitrail_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_cnwitrail_sz = sizeof(cnwitrail);$/;"	m	namespace:__sanitizer	file:
struct_cnwstatus_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_cnwstatus_sz = sizeof(cnwstatus);$/;"	m	namespace:__sanitizer	file:
struct_copr_buffer_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_copr_buffer_sz = 0;$/;"	m	namespace:__sanitizer	file:
struct_copr_buffer_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_copr_buffer_sz = sizeof(struct copr_buffer);$/;"	m	namespace:__sanitizer	file:
struct_copr_debug_buf_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_copr_debug_buf_sz = 0;$/;"	m	namespace:__sanitizer	file:
struct_copr_debug_buf_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_copr_debug_buf_sz = sizeof(struct copr_debug_buf);$/;"	m	namespace:__sanitizer	file:
struct_copr_msg_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_copr_msg_sz = 0;$/;"	m	namespace:__sanitizer	file:
struct_copr_msg_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_copr_msg_sz = sizeof(struct copr_msg);$/;"	m	namespace:__sanitizer	file:
struct_count_info_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_count_info_sz = sizeof(count_info);$/;"	m	namespace:__sanitizer	file:
struct_cpu_ucode_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_cpu_ucode_sz = sizeof(cpu_ucode);$/;"	m	namespace:__sanitizer	file:
struct_cpu_ucode_version_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_cpu_ucode_version_sz = sizeof(cpu_ucode_version);$/;"	m	namespace:__sanitizer	file:
struct_cpustate_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_cpustate_sz = sizeof(struct cpustate);$/;"	m	namespace:__sanitizer	file:
struct_crypt_kop_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_crypt_kop_sz = sizeof(crypt_kop);$/;"	m	namespace:__sanitizer	file:
struct_crypt_mkop_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_crypt_mkop_sz = sizeof(crypt_mkop);$/;"	m	namespace:__sanitizer	file:
struct_crypt_mop_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_crypt_mop_sz = sizeof(crypt_mop);$/;"	m	namespace:__sanitizer	file:
struct_crypt_op_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_crypt_op_sz = sizeof(crypt_op);$/;"	m	namespace:__sanitizer	file:
struct_crypt_result_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_crypt_result_sz = sizeof(crypt_result);$/;"	m	namespace:__sanitizer	file:
struct_crypt_sfop_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_crypt_sfop_sz = sizeof(crypt_sfop);$/;"	m	namespace:__sanitizer	file:
struct_crypt_sgop_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_crypt_sgop_sz = sizeof(crypt_sgop);$/;"	m	namespace:__sanitizer	file:
struct_cryptret_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_cryptret_sz = sizeof(cryptret);$/;"	m	namespace:__sanitizer	file:
struct_cyclades_monitor_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_cyclades_monitor_sz = sizeof(struct cyclades_monitor);$/;"	m	namespace:__sanitizer	file:
struct_devdetachargs_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_devdetachargs_sz = sizeof(devdetachargs);$/;"	m	namespace:__sanitizer	file:
struct_devlistargs_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_devlistargs_sz = sizeof(devlistargs);$/;"	m	namespace:__sanitizer	file:
struct_devpmargs_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_devpmargs_sz = sizeof(devpmargs);$/;"	m	namespace:__sanitizer	file:
struct_devrescanargs_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_devrescanargs_sz = sizeof(devrescanargs);$/;"	m	namespace:__sanitizer	file:
struct_disk_badsecinfo_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_disk_badsecinfo_sz = sizeof(disk_badsecinfo);$/;"	m	namespace:__sanitizer	file:
struct_disk_strategy_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_disk_strategy_sz = sizeof(disk_strategy);$/;"	m	namespace:__sanitizer	file:
struct_disklabel_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_disklabel_sz = sizeof(disklabel);$/;"	m	namespace:__sanitizer	file:
struct_dkbad_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_dkbad_sz = sizeof(dkbad);$/;"	m	namespace:__sanitizer	file:
struct_dkwedge_info_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_dkwedge_info_sz = sizeof(dkwedge_info);$/;"	m	namespace:__sanitizer	file:
struct_dkwedge_list_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_dkwedge_list_sz = sizeof(dkwedge_list);$/;"	m	namespace:__sanitizer	file:
struct_dmio_setfunc_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_dmio_setfunc_sz = sizeof(dmio_setfunc);$/;"	m	namespace:__sanitizer	file:
struct_dmx_caps_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_dmx_caps_sz = sizeof(struct dmx_caps);$/;"	m	namespace:__sanitizer	file:
struct_dmx_pes_filter_params_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_dmx_pes_filter_params_sz = sizeof(dmx_pes_filter_params);$/;"	m	namespace:__sanitizer	file:
struct_dmx_sct_filter_params_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_dmx_sct_filter_params_sz = sizeof(dmx_sct_filter_params);$/;"	m	namespace:__sanitizer	file:
struct_dmx_stc_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_dmx_stc_sz = sizeof(dmx_stc);$/;"	m	namespace:__sanitizer	file:
struct_dvb_diseqc_master_cmd_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_dvb_diseqc_master_cmd_sz = sizeof(dvb_diseqc_master_cmd);$/;"	m	namespace:__sanitizer	file:
struct_dvb_diseqc_slave_reply_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_dvb_diseqc_slave_reply_sz = sizeof(dvb_diseqc_slave_reply);$/;"	m	namespace:__sanitizer	file:
struct_dvb_frontend_event_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_dvb_frontend_event_sz = sizeof(dvb_frontend_event);$/;"	m	namespace:__sanitizer	file:
struct_dvb_frontend_info_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_dvb_frontend_info_sz = sizeof(dvb_frontend_info);$/;"	m	namespace:__sanitizer	file:
struct_dvb_frontend_parameters_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_dvb_frontend_parameters_sz = sizeof(dvb_frontend_parameters);$/;"	m	namespace:__sanitizer	file:
struct_eccapreq_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_eccapreq_sz = sizeof(eccapreq);$/;"	m	namespace:__sanitizer	file:
struct_envsys_basic_info_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_envsys_basic_info_sz = sizeof(struct envsys_basic_info);$/;"	m	namespace:__sanitizer	file:
struct_envsys_tre_data_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_envsys_tre_data_sz = sizeof(struct envsys_tre_data);$/;"	m	namespace:__sanitizer	file:
struct_epoll_event_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_epoll_event_sz = sizeof(struct epoll_event);$/;"	m	namespace:__sanitizer	file:
struct_fbcmap_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_fbcmap_sz = sizeof(fbcmap);$/;"	m	namespace:__sanitizer	file:
struct_fbcurpos_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_fbcurpos_sz = sizeof(fbcurpos);$/;"	m	namespace:__sanitizer	file:
struct_fbcursor_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_fbcursor_sz = sizeof(fbcursor);$/;"	m	namespace:__sanitizer	file:
struct_fbgattr_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_fbgattr_sz = sizeof(fbgattr);$/;"	m	namespace:__sanitizer	file:
struct_fbsattr_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_fbsattr_sz = sizeof(fbsattr);$/;"	m	namespace:__sanitizer	file:
struct_fbtype_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_fbtype_sz = sizeof(fbtype);$/;"	m	namespace:__sanitizer	file:
struct_fdformat_cmd_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_fdformat_cmd_sz = sizeof(fdformat_cmd);$/;"	m	namespace:__sanitizer	file:
struct_fdformat_parms_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_fdformat_parms_sz = sizeof(fdformat_parms);$/;"	m	namespace:__sanitizer	file:
struct_ff_effect_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_ff_effect_sz = sizeof(struct ff_effect);$/;"	m	namespace:__sanitizer	file:
struct_fifoq_conf_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_fifoq_conf_sz = sizeof(fifoq_conf);$/;"	m	namespace:__sanitizer	file:
struct_fifoq_getstats_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_fifoq_getstats_sz = sizeof(fifoq_getstats);$/;"	m	namespace:__sanitizer	file:
struct_fifoq_interface_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_fifoq_interface_sz = sizeof(fifoq_interface);$/;"	m	namespace:__sanitizer	file:
struct_floppy_drive_params_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_floppy_drive_params_sz = sizeof(struct floppy_drive_params);$/;"	m	namespace:__sanitizer	file:
struct_floppy_drive_struct_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_floppy_drive_struct_sz = sizeof(struct floppy_drive_struct);$/;"	m	namespace:__sanitizer	file:
struct_floppy_fdc_state_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_floppy_fdc_state_sz = sizeof(struct floppy_fdc_state);$/;"	m	namespace:__sanitizer	file:
struct_floppy_max_errors_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_floppy_max_errors_sz = sizeof(struct floppy_max_errors);$/;"	m	namespace:__sanitizer	file:
struct_floppy_raw_cmd_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_floppy_raw_cmd_sz = sizeof(struct floppy_raw_cmd);$/;"	m	namespace:__sanitizer	file:
struct_floppy_struct_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_floppy_struct_sz = sizeof(struct floppy_struct);$/;"	m	namespace:__sanitizer	file:
struct_floppy_write_errors_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_floppy_write_errors_sz = sizeof(struct floppy_write_errors);$/;"	m	namespace:__sanitizer	file:
struct_format_descr_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_format_descr_sz = sizeof(struct format_descr);$/;"	m	namespace:__sanitizer	file:
struct_format_op_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_format_op_sz = sizeof(format_op);$/;"	m	namespace:__sanitizer	file:
struct_fss_get_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_fss_get_sz = sizeof(fss_get);$/;"	m	namespace:__sanitizer	file:
struct_fss_set_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_fss_set_sz = sizeof(fss_set);$/;"	m	namespace:__sanitizer	file:
struct_gdt_ctrt_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_gdt_ctrt_sz = sizeof(struct gdt_ctrt);$/;"	m	namespace:__sanitizer	file:
struct_gdt_event_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_gdt_event_sz = sizeof(struct gdt_event);$/;"	m	namespace:__sanitizer	file:
struct_gdt_osv_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_gdt_osv_sz = sizeof(struct gdt_osv);$/;"	m	namespace:__sanitizer	file:
struct_gdt_rescan_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_gdt_rescan_sz = sizeof(struct gdt_rescan);$/;"	m	namespace:__sanitizer	file:
struct_gdt_statist_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_gdt_statist_sz = sizeof(struct gdt_statist);$/;"	m	namespace:__sanitizer	file:
struct_gdt_ucmd_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_gdt_ucmd_sz = sizeof(struct gdt_ucmd);$/;"	m	namespace:__sanitizer	file:
struct_gpio_attach_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_gpio_attach_sz = sizeof(gpio_attach);$/;"	m	namespace:__sanitizer	file:
struct_gpio_info_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_gpio_info_sz = sizeof(gpio_info);$/;"	m	namespace:__sanitizer	file:
struct_gpio_req_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_gpio_req_sz = sizeof(gpio_req);$/;"	m	namespace:__sanitizer	file:
struct_gpio_set_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_gpio_set_sz = sizeof(gpio_set);$/;"	m	namespace:__sanitizer	file:
struct_group_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_group_sz = sizeof(struct group);$/;"	m	namespace:__sanitizer	file:
struct_group_sz	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^unsigned struct_group_sz = sizeof(struct group);$/;"	m	namespace:__sanitizer	file:
struct_group_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_group_sz = sizeof(struct group);$/;"	m	namespace:__sanitizer	file:
struct_group_sz	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned struct_group_sz = sizeof(struct group);$/;"	m	namespace:__sanitizer	file:
struct_hd_driveid_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_hd_driveid_sz = sizeof(struct hd_driveid);$/;"	m	namespace:__sanitizer	file:
struct_hd_geometry_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_hd_geometry_sz = sizeof(struct hd_geometry);$/;"	m	namespace:__sanitizer	file:
struct_hfsc_add_class_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_hfsc_add_class_sz = sizeof(hfsc_add_class);$/;"	m	namespace:__sanitizer	file:
struct_hfsc_add_filter_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_hfsc_add_filter_sz = sizeof(hfsc_add_filter);$/;"	m	namespace:__sanitizer	file:
struct_hfsc_attach_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_hfsc_attach_sz = sizeof(hfsc_attach);$/;"	m	namespace:__sanitizer	file:
struct_hfsc_class_stats_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_hfsc_class_stats_sz = sizeof(hfsc_class_stats);$/;"	m	namespace:__sanitizer	file:
struct_hfsc_delete_class_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_hfsc_delete_class_sz = sizeof(hfsc_delete_class);$/;"	m	namespace:__sanitizer	file:
struct_hfsc_delete_filter_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_hfsc_delete_filter_sz = sizeof(hfsc_delete_filter);$/;"	m	namespace:__sanitizer	file:
struct_hfsc_interface_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_hfsc_interface_sz = sizeof(hfsc_interface);$/;"	m	namespace:__sanitizer	file:
struct_hfsc_modify_class_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_hfsc_modify_class_sz = sizeof(hfsc_modify_class);$/;"	m	namespace:__sanitizer	file:
struct_hpcfb_dsp_op_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_hpcfb_dsp_op_sz = sizeof(hpcfb_dsp_op);$/;"	m	namespace:__sanitizer	file:
struct_hpcfb_dspconf_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_hpcfb_dspconf_sz = sizeof(hpcfb_dspconf);$/;"	m	namespace:__sanitizer	file:
struct_hpcfb_fbconf_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_hpcfb_fbconf_sz = sizeof(hpcfb_fbconf);$/;"	m	namespace:__sanitizer	file:
struct_if_addrprefreq_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_if_addrprefreq_sz = sizeof(if_addrprefreq);$/;"	m	namespace:__sanitizer	file:
struct_if_clonereq_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_if_clonereq_sz = sizeof(if_clonereq);$/;"	m	namespace:__sanitizer	file:
struct_if_laddrreq_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_if_laddrreq_sz = sizeof(if_laddrreq);$/;"	m	namespace:__sanitizer	file:
struct_ifaddr_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_ifaddr_sz = sizeof(ifaddr);$/;"	m	namespace:__sanitizer	file:
struct_ifaliasreq_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_ifaliasreq_sz = sizeof(ifaliasreq);$/;"	m	namespace:__sanitizer	file:
struct_ifcapreq_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_ifcapreq_sz = sizeof(ifcapreq);$/;"	m	namespace:__sanitizer	file:
struct_ifconf_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_ifconf_sz = sizeof(ifconf);$/;"	m	namespace:__sanitizer	file:
struct_ifdatareq_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_ifdatareq_sz = sizeof(ifdatareq);$/;"	m	namespace:__sanitizer	file:
struct_ifdrv_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_ifdrv_sz = sizeof(ifdrv);$/;"	m	namespace:__sanitizer	file:
struct_ifmediareq_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_ifmediareq_sz = sizeof(ifmediareq);$/;"	m	namespace:__sanitizer	file:
struct_ifpppcstatsreq_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_ifpppcstatsreq_sz = sizeof(ifpppcstatsreq);$/;"	m	namespace:__sanitizer	file:
struct_ifpppstatsreq_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_ifpppstatsreq_sz = sizeof(ifpppstatsreq);$/;"	m	namespace:__sanitizer	file:
struct_ifreq_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_ifreq_sz = sizeof(ifreq);$/;"	m	namespace:__sanitizer	file:
struct_ifreq_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_ifreq_sz = sizeof(struct ifreq);$/;"	m	namespace:__sanitizer	file:
struct_ifreq_sz	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned struct_ifreq_sz = sizeof(struct ifreq);$/;"	m	namespace:__sanitizer	file:
struct_in6_addrpolicy_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_in6_addrpolicy_sz = sizeof(in6_addrpolicy);$/;"	m	namespace:__sanitizer	file:
struct_in6_ndireq_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_in6_ndireq_sz = sizeof(in6_ndireq);$/;"	m	namespace:__sanitizer	file:
struct_input_absinfo_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_input_absinfo_sz = sizeof(struct input_absinfo);$/;"	m	namespace:__sanitizer	file:
struct_input_id_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_input_id_sz = sizeof(struct input_id);$/;"	m	namespace:__sanitizer	file:
struct_input_keymap_entry_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_input_keymap_entry_sz = 0;$/;"	m	namespace:__sanitizer	file:
struct_input_keymap_entry_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_input_keymap_entry_sz = sizeof(struct input_keymap_entry);$/;"	m	namespace:__sanitizer	file:
struct_ioc_load_unload_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_ioc_load_unload_sz = sizeof(ioc_load_unload);$/;"	m	namespace:__sanitizer	file:
struct_ioc_patch_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_ioc_patch_sz = sizeof(ioc_patch);$/;"	m	namespace:__sanitizer	file:
struct_ioc_play_blocks_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_ioc_play_blocks_sz = sizeof(ioc_play_blocks);$/;"	m	namespace:__sanitizer	file:
struct_ioc_play_msf_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_ioc_play_msf_sz = sizeof(ioc_play_msf);$/;"	m	namespace:__sanitizer	file:
struct_ioc_play_track_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_ioc_play_track_sz = sizeof(ioc_play_track);$/;"	m	namespace:__sanitizer	file:
struct_ioc_read_subchannel_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_ioc_read_subchannel_sz = sizeof(ioc_read_subchannel);$/;"	m	namespace:__sanitizer	file:
struct_ioc_read_toc_entry_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_ioc_read_toc_entry_sz = sizeof(ioc_read_toc_entry);$/;"	m	namespace:__sanitizer	file:
struct_ioc_toc_header_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_ioc_toc_header_sz = sizeof(ioc_toc_header);$/;"	m	namespace:__sanitizer	file:
struct_ioc_vol_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_ioc_vol_sz = sizeof(ioc_vol);$/;"	m	namespace:__sanitizer	file:
struct_ioctl_pt_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_ioctl_pt_sz = sizeof(ioctl_pt);$/;"	m	namespace:__sanitizer	file:
struct_ioppt_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_ioppt_sz = sizeof(ioppt);$/;"	m	namespace:__sanitizer	file:
struct_iovec_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_iovec_sz = sizeof(iovec);$/;"	m	namespace:__sanitizer	file:
struct_ipfobj_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_ipfobj_sz = sizeof(ipfobj);$/;"	m	namespace:__sanitizer	file:
struct_ipx_config_data_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_ipx_config_data_sz = sizeof(struct ipx_config_data);$/;"	m	namespace:__sanitizer	file:
struct_irda_params_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_irda_params_sz = sizeof(irda_params);$/;"	m	namespace:__sanitizer	file:
struct_iscsi_conn_status_parameters_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_iscsi_conn_status_parameters_sz =$/;"	m	namespace:__sanitizer	file:
struct_iscsi_get_version_parameters_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_iscsi_get_version_parameters_sz =$/;"	m	namespace:__sanitizer	file:
struct_iscsi_iocommand_parameters_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_iscsi_iocommand_parameters_sz =$/;"	m	namespace:__sanitizer	file:
struct_iscsi_login_parameters_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_iscsi_login_parameters_sz = sizeof(iscsi_login_parameters_t);$/;"	m	namespace:__sanitizer	file:
struct_iscsi_logout_parameters_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_iscsi_logout_parameters_sz = sizeof(iscsi_logout_parameters_t);$/;"	m	namespace:__sanitizer	file:
struct_iscsi_register_event_parameters_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_iscsi_register_event_parameters_sz =$/;"	m	namespace:__sanitizer	file:
struct_iscsi_remove_parameters_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_iscsi_remove_parameters_sz = sizeof(iscsi_remove_parameters_t);$/;"	m	namespace:__sanitizer	file:
struct_iscsi_send_targets_parameters_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_iscsi_send_targets_parameters_sz =$/;"	m	namespace:__sanitizer	file:
struct_iscsi_set_node_name_parameters_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_iscsi_set_node_name_parameters_sz =$/;"	m	namespace:__sanitizer	file:
struct_iscsi_wait_event_parameters_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_iscsi_wait_event_parameters_sz =$/;"	m	namespace:__sanitizer	file:
struct_isp_fc_device_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_isp_fc_device_sz = sizeof(isp_fc_device);$/;"	m	namespace:__sanitizer	file:
struct_isp_fc_tsk_mgmt_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_isp_fc_tsk_mgmt_sz = sizeof(isp_fc_tsk_mgmt);$/;"	m	namespace:__sanitizer	file:
struct_isp_hba_device_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_isp_hba_device_sz = sizeof(isp_hba_device);$/;"	m	namespace:__sanitizer	file:
struct_isp_stats_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_isp_stats_sz = sizeof(isp_stats_t);$/;"	m	namespace:__sanitizer	file:
struct_isv_cmd_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_isv_cmd_sz = sizeof(isv_cmd);$/;"	m	namespace:__sanitizer	file:
struct_itimerspec_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_itimerspec_sz = sizeof(struct itimerspec);$/;"	m	namespace:__sanitizer	file:
struct_itimerspec_sz	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^unsigned struct_itimerspec_sz = sizeof(struct itimerspec);$/;"	m	namespace:__sanitizer	file:
struct_itimerspec_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_itimerspec_sz = sizeof(struct itimerspec);$/;"	m	namespace:__sanitizer	file:
struct_itimerval_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_itimerval_sz = sizeof(struct itimerval);$/;"	m	namespace:__sanitizer	file:
struct_itimerval_sz	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^unsigned struct_itimerval_sz = sizeof(struct itimerval);$/;"	m	namespace:__sanitizer	file:
struct_itimerval_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_itimerval_sz = sizeof(struct itimerval);$/;"	m	namespace:__sanitizer	file:
struct_itimerval_sz	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned struct_itimerval_sz = sizeof(struct itimerval);$/;"	m	namespace:__sanitizer	file:
struct_jobs_add_class_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_jobs_add_class_sz = sizeof(jobs_add_class);$/;"	m	namespace:__sanitizer	file:
struct_jobs_add_filter_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_jobs_add_filter_sz = sizeof(jobs_add_filter);$/;"	m	namespace:__sanitizer	file:
struct_jobs_attach_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_jobs_attach_sz = sizeof(jobs_attach);$/;"	m	namespace:__sanitizer	file:
struct_jobs_class_stats_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_jobs_class_stats_sz = sizeof(jobs_class_stats);$/;"	m	namespace:__sanitizer	file:
struct_jobs_delete_class_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_jobs_delete_class_sz = sizeof(jobs_delete_class);$/;"	m	namespace:__sanitizer	file:
struct_jobs_delete_filter_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_jobs_delete_filter_sz = sizeof(jobs_delete_filter);$/;"	m	namespace:__sanitizer	file:
struct_jobs_interface_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_jobs_interface_sz = sizeof(jobs_interface);$/;"	m	namespace:__sanitizer	file:
struct_jobs_modify_class_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_jobs_modify_class_sz = sizeof(jobs_modify_class);$/;"	m	namespace:__sanitizer	file:
struct_kbdiacrs_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_kbdiacrs_sz = sizeof(struct kbdiacrs);$/;"	m	namespace:__sanitizer	file:
struct_kbentry_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_kbentry_sz = sizeof(kbentry);$/;"	m	namespace:__sanitizer	file:
struct_kbentry_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_kbentry_sz = sizeof(struct kbentry);$/;"	m	namespace:__sanitizer	file:
struct_kbkeycode_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_kbkeycode_sz = sizeof(struct kbkeycode);$/;"	m	namespace:__sanitizer	file:
struct_kbsentry_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_kbsentry_sz = sizeof(struct kbsentry);$/;"	m	namespace:__sanitizer	file:
struct_kernel_stat64_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  const unsigned struct_kernel_stat64_sz = 0;$/;"	m	namespace:__sanitizer
struct_kernel_stat64_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  const unsigned struct_kernel_stat64_sz = 104;$/;"	m	namespace:__sanitizer
struct_kernel_stat64_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  const unsigned struct_kernel_stat64_sz = 144;$/;"	m	namespace:__sanitizer
struct_kernel_stat64_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  const unsigned struct_kernel_stat64_sz = 96;$/;"	m	namespace:__sanitizer
struct_kernel_stat_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  const unsigned struct_kernel_stat_sz = 104;$/;"	m	namespace:__sanitizer
struct_kernel_stat_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  const unsigned struct_kernel_stat_sz = 128;$/;"	m	namespace:__sanitizer
struct_kernel_stat_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  const unsigned struct_kernel_stat_sz = 144;$/;"	m	namespace:__sanitizer
struct_kernel_stat_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  const unsigned struct_kernel_stat_sz = 64;$/;"	m	namespace:__sanitizer
struct_kernel_stat_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  const unsigned struct_kernel_stat_sz = 72;$/;"	m	namespace:__sanitizer
struct_kernel_stat_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  const unsigned struct_kernel_stat_sz =$/;"	m	namespace:__sanitizer
struct_kevent_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_kevent_sz = sizeof(struct kevent);$/;"	m	namespace:__sanitizer	file:
struct_kexec_segment_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  const unsigned struct_kexec_segment_sz = 4 * sizeof(unsigned long);$/;"	m	namespace:__sanitizer
struct_kfilter_mapping_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_kfilter_mapping_sz = sizeof(kfilter_mapping);$/;"	m	namespace:__sanitizer	file:
struct_kiockeymap_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_kiockeymap_sz = sizeof(kiockeymap);$/;"	m	namespace:__sanitizer	file:
struct_ksyms_gsymbol_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_ksyms_gsymbol_sz = sizeof(ksyms_gsymbol);$/;"	m	namespace:__sanitizer	file:
struct_ksyms_gvalue_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_ksyms_gvalue_sz = sizeof(ksyms_gvalue);$/;"	m	namespace:__sanitizer	file:
struct_ksyms_ogsymbol_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_ksyms_ogsymbol_sz = sizeof(ksyms_ogsymbol);$/;"	m	namespace:__sanitizer	file:
struct_kttcp_io_args_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_kttcp_io_args_sz = sizeof(kttcp_io_args);$/;"	m	namespace:__sanitizer	file:
struct_lsdisable_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_lsdisable_sz = sizeof(struct lsdisable);$/;"	m	namespace:__sanitizer	file:
struct_lsenable_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_lsenable_sz = sizeof(struct lsenable);$/;"	m	namespace:__sanitizer	file:
struct_ltchars_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_ltchars_sz = sizeof(ltchars);$/;"	m	namespace:__sanitizer	file:
struct_lua_create_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_lua_create_sz = sizeof(struct lua_create);$/;"	m	namespace:__sanitizer	file:
struct_lua_info_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_lua_info_sz = sizeof(struct lua_info);$/;"	m	namespace:__sanitizer	file:
struct_lua_load_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_lua_load_sz = sizeof(struct lua_load);$/;"	m	namespace:__sanitizer	file:
struct_lua_require_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_lua_require_sz = sizeof(lua_require);$/;"	m	namespace:__sanitizer	file:
struct_mbpp_param_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_mbpp_param_sz = sizeof(mbpp_param);$/;"	m	namespace:__sanitizer	file:
struct_md_conf_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_md_conf_sz = sizeof(md_conf);$/;"	m	namespace:__sanitizer	file:
struct_meteor_capframe_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_meteor_capframe_sz = sizeof(meteor_capframe);$/;"	m	namespace:__sanitizer	file:
struct_meteor_counts_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_meteor_counts_sz = sizeof(meteor_counts);$/;"	m	namespace:__sanitizer	file:
struct_meteor_geomet_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_meteor_geomet_sz = sizeof(meteor_geomet);$/;"	m	namespace:__sanitizer	file:
struct_meteor_pixfmt_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_meteor_pixfmt_sz = sizeof(meteor_pixfmt);$/;"	m	namespace:__sanitizer	file:
struct_meteor_video_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_meteor_video_sz = sizeof(meteor_video);$/;"	m	namespace:__sanitizer	file:
struct_midi_info_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_midi_info_sz = sizeof(struct midi_info);$/;"	m	namespace:__sanitizer	file:
struct_mixer_ctrl_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_mixer_ctrl_sz = sizeof(struct mixer_ctrl);$/;"	m	namespace:__sanitizer	file:
struct_mixer_devinfo_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_mixer_devinfo_sz = sizeof(struct mixer_devinfo);$/;"	m	namespace:__sanitizer	file:
struct_mixer_info_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_mixer_info_sz = sizeof(struct mixer_info);$/;"	m	namespace:__sanitizer	file:
struct_mlx_cinfo_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_mlx_cinfo_sz = sizeof(mlx_cinfo);$/;"	m	namespace:__sanitizer	file:
struct_mlx_pause_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_mlx_pause_sz = sizeof(mlx_pause);$/;"	m	namespace:__sanitizer	file:
struct_mlx_rebuild_request_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_mlx_rebuild_request_sz = sizeof(mlx_rebuild_request);$/;"	m	namespace:__sanitizer	file:
struct_mlx_rebuild_status_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_mlx_rebuild_status_sz = sizeof(mlx_rebuild_status);$/;"	m	namespace:__sanitizer	file:
struct_mlx_usercommand_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_mlx_usercommand_sz = sizeof(mlx_usercommand);$/;"	m	namespace:__sanitizer	file:
struct_mly_user_command_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_mly_user_command_sz = sizeof(mly_user_command);$/;"	m	namespace:__sanitizer	file:
struct_mly_user_health_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_mly_user_health_sz = sizeof(mly_user_health);$/;"	m	namespace:__sanitizer	file:
struct_mpu_command_rec_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_mpu_command_rec_sz = sizeof(mpu_command_rec);$/;"	m	namespace:__sanitizer	file:
struct_mq_attr_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_mq_attr_sz = sizeof(struct mq_attr);$/;"	m	namespace:__sanitizer	file:
struct_mq_attr_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_mq_attr_sz = sizeof(struct mq_attr);$/;"	m	namespace:__sanitizer	file:
struct_msqid_ds_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_msqid_ds_sz = sizeof(struct msqid_ds);$/;"	m	namespace:__sanitizer	file:
struct_msqid_ds_sz	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^unsigned struct_msqid_ds_sz = sizeof(struct msqid_ds);$/;"	m	namespace:__sanitizer	file:
struct_msqid_ds_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_msqid_ds_sz = sizeof(struct msqid_ds);$/;"	m	namespace:__sanitizer	file:
struct_mtconfiginfo_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_mtconfiginfo_sz = sizeof(struct mtconfiginfo);$/;"	m	namespace:__sanitizer	file:
struct_mtget_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_mtget_sz = sizeof(mtget);$/;"	m	namespace:__sanitizer	file:
struct_mtget_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_mtget_sz = sizeof(struct mtget);$/;"	m	namespace:__sanitizer	file:
struct_mtop_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_mtop_sz = sizeof(mtop);$/;"	m	namespace:__sanitizer	file:
struct_mtop_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_mtop_sz = sizeof(struct mtop);$/;"	m	namespace:__sanitizer	file:
struct_mtpos_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_mtpos_sz = sizeof(struct mtpos);$/;"	m	namespace:__sanitizer	file:
struct_new_utsname_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_new_utsname_sz = sizeof(struct new_utsname);$/;"	m	namespace:__sanitizer	file:
struct_npf_ioctl_table_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_npf_ioctl_table_sz = sizeof(npf_ioctl_table);$/;"	m	namespace:__sanitizer	file:
struct_npioctl_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_npioctl_sz = sizeof(npioctl);$/;"	m	namespace:__sanitizer	file:
struct_nr_parms_struct_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_nr_parms_struct_sz = sizeof(struct nr_parms_struct);$/;"	m	namespace:__sanitizer	file:
struct_nvme_pt_command_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_nvme_pt_command_sz = sizeof(nvme_pt_command);$/;"	m	namespace:__sanitizer	file:
struct_ochanger_element_status_request_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_ochanger_element_status_request_sz =$/;"	m	namespace:__sanitizer	file:
struct_ofiocdesc_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_ofiocdesc_sz = sizeof(ofiocdesc);$/;"	m	namespace:__sanitizer	file:
struct_okiockey_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_okiockey_sz = sizeof(okiockey);$/;"	m	namespace:__sanitizer	file:
struct_old_utsname_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_old_utsname_sz = sizeof(struct old_utsname);$/;"	m	namespace:__sanitizer	file:
struct_oldold_utsname_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_oldold_utsname_sz = sizeof(struct oldold_utsname);$/;"	m	namespace:__sanitizer	file:
struct_ortentry_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_ortentry_sz = sizeof(ortentry);$/;"	m	namespace:__sanitizer	file:
struct_oscsi_addr_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_oscsi_addr_sz = sizeof(oscsi_addr);$/;"	m	namespace:__sanitizer	file:
struct_oss_audioinfo_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_oss_audioinfo_sz = sizeof(oss_audioinfo);$/;"	m	namespace:__sanitizer	file:
struct_oss_sysinfo_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_oss_sysinfo_sz = sizeof(oss_sysinfo);$/;"	m	namespace:__sanitizer	file:
struct_passwd_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_passwd_sz = sizeof(struct passwd);$/;"	m	namespace:__sanitizer	file:
struct_passwd_sz	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^unsigned struct_passwd_sz = sizeof(struct passwd);$/;"	m	namespace:__sanitizer	file:
struct_passwd_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_passwd_sz = sizeof(struct passwd);$/;"	m	namespace:__sanitizer	file:
struct_passwd_sz	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned struct_passwd_sz = sizeof(struct passwd);$/;"	m	namespace:__sanitizer	file:
struct_pciio_bdf_cfgreg_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_pciio_bdf_cfgreg_sz = sizeof(pciio_bdf_cfgreg);$/;"	m	namespace:__sanitizer	file:
struct_pciio_businfo_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_pciio_businfo_sz = sizeof(pciio_businfo);$/;"	m	namespace:__sanitizer	file:
struct_pciio_cfgreg_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_pciio_cfgreg_sz = sizeof(pciio_cfgreg);$/;"	m	namespace:__sanitizer	file:
struct_pciio_drvname_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_pciio_drvname_sz = sizeof(pciio_drvname);$/;"	m	namespace:__sanitizer	file:
struct_pciio_drvnameonbus_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_pciio_drvnameonbus_sz = sizeof(pciio_drvnameonbus);$/;"	m	namespace:__sanitizer	file:
struct_pcvtid_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_pcvtid_sz = sizeof(pcvtid);$/;"	m	namespace:__sanitizer	file:
struct_pf_osfp_ioctl_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_pf_osfp_ioctl_sz = sizeof(pf_osfp_ioctl);$/;"	m	namespace:__sanitizer	file:
struct_pf_status_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_pf_status_sz = sizeof(pf_status);$/;"	m	namespace:__sanitizer	file:
struct_pfioc_altq_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_pfioc_altq_sz = sizeof(pfioc_altq);$/;"	m	namespace:__sanitizer	file:
struct_pfioc_if_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_pfioc_if_sz = sizeof(pfioc_if);$/;"	m	namespace:__sanitizer	file:
struct_pfioc_iface_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_pfioc_iface_sz = sizeof(pfioc_iface);$/;"	m	namespace:__sanitizer	file:
struct_pfioc_limit_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_pfioc_limit_sz = sizeof(pfioc_limit);$/;"	m	namespace:__sanitizer	file:
struct_pfioc_natlook_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_pfioc_natlook_sz = sizeof(pfioc_natlook);$/;"	m	namespace:__sanitizer	file:
struct_pfioc_pooladdr_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_pfioc_pooladdr_sz = sizeof(pfioc_pooladdr);$/;"	m	namespace:__sanitizer	file:
struct_pfioc_qstats_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_pfioc_qstats_sz = sizeof(pfioc_qstats);$/;"	m	namespace:__sanitizer	file:
struct_pfioc_rule_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_pfioc_rule_sz = sizeof(pfioc_rule);$/;"	m	namespace:__sanitizer	file:
struct_pfioc_ruleset_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_pfioc_ruleset_sz = sizeof(pfioc_ruleset);$/;"	m	namespace:__sanitizer	file:
struct_pfioc_src_node_kill_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_pfioc_src_node_kill_sz = sizeof(pfioc_src_node_kill);$/;"	m	namespace:__sanitizer	file:
struct_pfioc_src_nodes_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_pfioc_src_nodes_sz = sizeof(pfioc_src_nodes);$/;"	m	namespace:__sanitizer	file:
struct_pfioc_state_kill_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_pfioc_state_kill_sz = sizeof(pfioc_state_kill);$/;"	m	namespace:__sanitizer	file:
struct_pfioc_state_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_pfioc_state_sz = sizeof(pfioc_state);$/;"	m	namespace:__sanitizer	file:
struct_pfioc_states_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_pfioc_states_sz = sizeof(pfioc_states);$/;"	m	namespace:__sanitizer	file:
struct_pfioc_table_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_pfioc_table_sz = sizeof(pfioc_table);$/;"	m	namespace:__sanitizer	file:
struct_pfioc_tm_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_pfioc_tm_sz = sizeof(pfioc_tm);$/;"	m	namespace:__sanitizer	file:
struct_pfioc_trans_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_pfioc_trans_sz = sizeof(pfioc_trans);$/;"	m	namespace:__sanitizer	file:
struct_plistref_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_plistref_sz = sizeof(plistref);$/;"	m	namespace:__sanitizer	file:
struct_power_type_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_power_type_sz = sizeof(power_type);$/;"	m	namespace:__sanitizer	file:
struct_ppp_idle_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_ppp_idle_sz = sizeof(ppp_idle);$/;"	m	namespace:__sanitizer	file:
struct_ppp_option_data_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_ppp_option_data_sz = sizeof(ppp_option_data);$/;"	m	namespace:__sanitizer	file:
struct_ppp_rawin_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_ppp_rawin_sz = sizeof(ppp_rawin);$/;"	m	namespace:__sanitizer	file:
struct_ppp_stats_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_ppp_stats_sz = sizeof(struct ppp_stats);$/;"	m	namespace:__sanitizer	file:
struct_pppoeconnectionstate_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_pppoeconnectionstate_sz = sizeof(pppoeconnectionstate);$/;"	m	namespace:__sanitizer	file:
struct_pppoediscparms_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_pppoediscparms_sz = sizeof(pppoediscparms);$/;"	m	namespace:__sanitizer	file:
struct_pps_info_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_pps_info_sz = sizeof(pps_info_t);$/;"	m	namespace:__sanitizer	file:
struct_pps_params_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_pps_params_sz = sizeof(pps_params_t);$/;"	m	namespace:__sanitizer	file:
struct_priq_add_class_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_priq_add_class_sz = sizeof(priq_add_class);$/;"	m	namespace:__sanitizer	file:
struct_priq_add_filter_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_priq_add_filter_sz = sizeof(priq_add_filter);$/;"	m	namespace:__sanitizer	file:
struct_priq_class_stats_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_priq_class_stats_sz = sizeof(priq_class_stats);$/;"	m	namespace:__sanitizer	file:
struct_priq_delete_class_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_priq_delete_class_sz = sizeof(priq_delete_class);$/;"	m	namespace:__sanitizer	file:
struct_priq_delete_filter_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_priq_delete_filter_sz = sizeof(priq_delete_filter);$/;"	m	namespace:__sanitizer	file:
struct_priq_interface_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_priq_interface_sz = sizeof(priq_interface);$/;"	m	namespace:__sanitizer	file:
struct_priq_modify_class_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_priq_modify_class_sz = sizeof(priq_modify_class);$/;"	m	namespace:__sanitizer	file:
struct_ptmget_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_ptmget_sz = sizeof(ptmget);$/;"	m	namespace:__sanitizer	file:
struct_ptrace_dbreg_struct_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_ptrace_dbreg_struct_sz = -1;$/;"	m	namespace:__sanitizer	file:
struct_ptrace_dbreg_struct_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_ptrace_dbreg_struct_sz = sizeof(struct dbreg);$/;"	m	namespace:__sanitizer	file:
struct_ptrace_fpreg_struct_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_ptrace_fpreg_struct_sz = -1;$/;"	m	namespace:__sanitizer	file:
struct_ptrace_fpreg_struct_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_ptrace_fpreg_struct_sz = sizeof(struct fpreg);$/;"	m	namespace:__sanitizer	file:
struct_ptrace_ptrace_event_struct_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_ptrace_ptrace_event_struct_sz = sizeof(ptrace_event_t);$/;"	m	namespace:__sanitizer	file:
struct_ptrace_ptrace_io_desc_struct_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_ptrace_ptrace_io_desc_struct_sz = sizeof(struct ptrace_io_desc);$/;"	m	namespace:__sanitizer	file:
struct_ptrace_ptrace_lwpinfo_struct_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_ptrace_ptrace_lwpinfo_struct_sz = sizeof(struct ptrace_lwpinfo);$/;"	m	namespace:__sanitizer	file:
struct_ptrace_ptrace_siginfo_struct_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_ptrace_ptrace_siginfo_struct_sz = sizeof(ptrace_siginfo_t);$/;"	m	namespace:__sanitizer	file:
struct_ptrace_reg_struct_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_ptrace_reg_struct_sz = -1;$/;"	m	namespace:__sanitizer	file:
struct_ptrace_reg_struct_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_ptrace_reg_struct_sz = sizeof(struct reg);$/;"	m	namespace:__sanitizer	file:
struct_pvctxreq_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_pvctxreq_sz = sizeof(pvctxreq);$/;"	m	namespace:__sanitizer	file:
struct_radio_info_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_radio_info_sz = sizeof(radio_info);$/;"	m	namespace:__sanitizer	file:
struct_red_conf_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_red_conf_sz = sizeof(red_conf);$/;"	m	namespace:__sanitizer	file:
struct_red_interface_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_red_interface_sz = sizeof(red_interface);$/;"	m	namespace:__sanitizer	file:
struct_red_stats_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_red_stats_sz = sizeof(red_stats);$/;"	m	namespace:__sanitizer	file:
struct_redparams_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_redparams_sz = sizeof(redparams);$/;"	m	namespace:__sanitizer	file:
struct_rf_pmparams_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_rf_pmparams_sz = sizeof(rf_pmparams);$/;"	m	namespace:__sanitizer	file:
struct_rf_pmstat_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_rf_pmstat_sz = sizeof(rf_pmstat);$/;"	m	namespace:__sanitizer	file:
struct_rf_recon_req_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_rf_recon_req_sz = sizeof(rf_recon_req);$/;"	m	namespace:__sanitizer	file:
struct_rio_conf_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_rio_conf_sz = sizeof(rio_conf);$/;"	m	namespace:__sanitizer	file:
struct_rio_interface_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_rio_interface_sz = sizeof(rio_interface);$/;"	m	namespace:__sanitizer	file:
struct_rio_stats_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_rio_stats_sz = sizeof(rio_stats);$/;"	m	namespace:__sanitizer	file:
struct_rlimit64_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_rlimit64_sz = sizeof(struct rlimit64);$/;"	m	namespace:__sanitizer	file:
struct_rlimit_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_rlimit_sz = sizeof(struct rlimit);$/;"	m	namespace:__sanitizer	file:
struct_rlimit_sz	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^unsigned struct_rlimit_sz = sizeof(struct rlimit);$/;"	m	namespace:__sanitizer	file:
struct_rlimit_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_rlimit_sz = sizeof(struct rlimit);$/;"	m	namespace:__sanitizer	file:
struct_rndctl_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_rndctl_sz = sizeof(rndctl_t);$/;"	m	namespace:__sanitizer	file:
struct_rnddata_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_rnddata_sz = sizeof(rnddata_t);$/;"	m	namespace:__sanitizer	file:
struct_rndpoolstat_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_rndpoolstat_sz = sizeof(rndpoolstat_t);$/;"	m	namespace:__sanitizer	file:
struct_rndstat_est_name_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_rndstat_est_name_sz = sizeof(rndstat_est_name_t);$/;"	m	namespace:__sanitizer	file:
struct_rndstat_est_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_rndstat_est_sz = sizeof(rndstat_est_t);$/;"	m	namespace:__sanitizer	file:
struct_rndstat_name_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_rndstat_name_sz = sizeof(rndstat_name_t);$/;"	m	namespace:__sanitizer	file:
struct_rndstat_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_rndstat_sz = sizeof(rndstat_t);$/;"	m	namespace:__sanitizer	file:
struct_rtentry_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_rtentry_sz = sizeof(struct rtentry);$/;"	m	namespace:__sanitizer	file:
struct_rusage_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_rusage_sz = sizeof(struct rusage);$/;"	m	namespace:__sanitizer	file:
struct_rusage_sz	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^unsigned struct_rusage_sz = sizeof(struct rusage);$/;"	m	namespace:__sanitizer	file:
struct_rusage_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_rusage_sz = sizeof(struct rusage);$/;"	m	namespace:__sanitizer	file:
struct_rusage_sz	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned struct_rusage_sz = sizeof(struct rusage);$/;"	m	namespace:__sanitizer	file:
struct_satlink_id_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_satlink_id_sz = sizeof(satlink_id);$/;"	m	namespace:__sanitizer	file:
struct_sbi_instrument_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_sbi_instrument_sz = sizeof(struct sbi_instrument);$/;"	m	namespace:__sanitizer	file:
struct_scan_io_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_scan_io_sz = sizeof(scan_io);$/;"	m	namespace:__sanitizer	file:
struct_scbusaccel_args_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_scbusaccel_args_sz = sizeof(scbusaccel_args);$/;"	m	namespace:__sanitizer	file:
struct_scbusiodetach_args_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_scbusiodetach_args_sz = sizeof(scbusiodetach_args);$/;"	m	namespace:__sanitizer	file:
struct_scbusioscan_args_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_scbusioscan_args_sz = sizeof(scbusioscan_args);$/;"	m	namespace:__sanitizer	file:
struct_scc_modem_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_scc_modem_sz = sizeof(struct scc_modem);$/;"	m	namespace:__sanitizer	file:
struct_scc_stat_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_scc_stat_sz = sizeof(struct scc_stat);$/;"	m	namespace:__sanitizer	file:
struct_sched_param_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_sched_param_sz = sizeof(struct sched_param);$/;"	m	namespace:__sanitizer	file:
struct_sched_param_sz	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^unsigned struct_sched_param_sz = sizeof(struct sched_param);$/;"	m	namespace:__sanitizer	file:
struct_sched_param_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_sched_param_sz = sizeof(struct sched_param);$/;"	m	namespace:__sanitizer	file:
struct_sched_param_sz	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned struct_sched_param_sz = sizeof(struct sched_param);$/;"	m	namespace:__sanitizer	file:
struct_scsi_addr_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_scsi_addr_sz = sizeof(scsi_addr);$/;"	m	namespace:__sanitizer	file:
struct_scsireq_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_scsireq_sz = sizeof(struct scsireq);$/;"	m	namespace:__sanitizer	file:
struct_sembuf_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_sembuf_sz = sizeof(struct sembuf);$/;"	m	namespace:__sanitizer	file:
struct_seq_event_rec_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_seq_event_rec_sz = sizeof(seq_event_rec);$/;"	m	namespace:__sanitizer	file:
struct_seq_event_rec_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_seq_event_rec_sz = sizeof(struct seq_event_rec);$/;"	m	namespace:__sanitizer	file:
struct_serial_multiport_struct_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_serial_multiport_struct_sz$/;"	m	namespace:__sanitizer	file:
struct_serial_struct_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_serial_struct_sz = sizeof(struct serial_struct);$/;"	m	namespace:__sanitizer	file:
struct_session_op_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_session_op_sz = sizeof(session_op);$/;"	m	namespace:__sanitizer	file:
struct_sgttyb_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_sgttyb_sz = sizeof(sgttyb);$/;"	m	namespace:__sanitizer	file:
struct_shm_info_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	435;"	d
struct_shm_info_sz	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	339;"	d
struct_shm_info_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_shm_info_sz = sizeof(struct shm_info);$/;"	m	namespace:__sanitizer	file:
struct_shm_info_sz	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	362;"	d
struct_shminfo_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	434;"	d
struct_shminfo_sz	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	338;"	d
struct_shminfo_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_shminfo_sz = sizeof(struct shminfo);$/;"	m	namespace:__sanitizer	file:
struct_shminfo_sz	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	361;"	d
struct_sigaction_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_sigaction_sz = sizeof(struct sigaction);$/;"	m	namespace:__sanitizer	file:
struct_sigaction_sz	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^unsigned struct_sigaction_sz = sizeof(struct sigaction);$/;"	m	namespace:__sanitizer	file:
struct_sigaction_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_sigaction_sz = sizeof(struct sigaction);$/;"	m	namespace:__sanitizer	file:
struct_sigaction_sz	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned struct_sigaction_sz = sizeof(struct sigaction);$/;"	m	namespace:__sanitizer	file:
struct_sigaltstack_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_sigaltstack_sz = sizeof(stack_t);$/;"	m	namespace:__sanitizer	file:
struct_sigevent_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_sigevent_sz = sizeof(struct sigevent);$/;"	m	namespace:__sanitizer	file:
struct_sigevent_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_sigevent_sz = sizeof(struct sigevent);$/;"	m	namespace:__sanitizer	file:
struct_sigevent_sz	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned struct_sigevent_sz = sizeof(struct sigevent);$/;"	m	namespace:__sanitizer	file:
struct_sioc_sg_req_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_sioc_sg_req_sz = sizeof(sioc_sg_req);$/;"	m	namespace:__sanitizer	file:
struct_sioc_sg_req_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_sioc_sg_req_sz = sizeof(struct sioc_sg_req);$/;"	m	namespace:__sanitizer	file:
struct_sioc_sg_req_sz	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned struct_sioc_sg_req_sz = sizeof(struct sioc_sg_req);$/;"	m	namespace:__sanitizer	file:
struct_sioc_vif_req_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_sioc_vif_req_sz = sizeof(sioc_vif_req);$/;"	m	namespace:__sanitizer	file:
struct_sioc_vif_req_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_sioc_vif_req_sz = sizeof(struct sioc_vif_req);$/;"	m	namespace:__sanitizer	file:
struct_sioc_vif_req_sz	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned struct_sioc_vif_req_sz = sizeof(struct sioc_vif_req);$/;"	m	namespace:__sanitizer	file:
struct_smbioc_flags_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_smbioc_flags_sz = sizeof(smbioc_flags);$/;"	m	namespace:__sanitizer	file:
struct_smbioc_lookup_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_smbioc_lookup_sz = sizeof(smbioc_lookup);$/;"	m	namespace:__sanitizer	file:
struct_smbioc_oshare_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_smbioc_oshare_sz = sizeof(smbioc_oshare);$/;"	m	namespace:__sanitizer	file:
struct_smbioc_ossn_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_smbioc_ossn_sz = sizeof(smbioc_ossn);$/;"	m	namespace:__sanitizer	file:
struct_smbioc_rq_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_smbioc_rq_sz = sizeof(smbioc_rq);$/;"	m	namespace:__sanitizer	file:
struct_smbioc_rw_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_smbioc_rw_sz = sizeof(smbioc_rw);$/;"	m	namespace:__sanitizer	file:
struct_sockaddr_ax25_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_sockaddr_ax25_sz = sizeof(struct sockaddr_ax25);$/;"	m	namespace:__sanitizer	file:
struct_sockaddr_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_sockaddr_sz = sizeof(struct sockaddr);$/;"	m	namespace:__sanitizer	file:
struct_sockaddr_sz	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^unsigned struct_sockaddr_sz = sizeof(struct sockaddr);$/;"	m	namespace:__sanitizer	file:
struct_sockaddr_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_sockaddr_sz = sizeof(struct sockaddr);$/;"	m	namespace:__sanitizer	file:
struct_sockaddr_sz	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned struct_sockaddr_sz = sizeof(struct sockaddr);$/;"	m	namespace:__sanitizer	file:
struct_spppauthcfg_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_spppauthcfg_sz = sizeof(spppauthcfg);$/;"	m	namespace:__sanitizer	file:
struct_spppauthfailuresettings_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_spppauthfailuresettings_sz = sizeof(spppauthfailuresettings);$/;"	m	namespace:__sanitizer	file:
struct_spppauthfailurestats_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_spppauthfailurestats_sz = sizeof(spppauthfailurestats);$/;"	m	namespace:__sanitizer	file:
struct_spppdnsaddrs_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_spppdnsaddrs_sz = sizeof(spppdnsaddrs);$/;"	m	namespace:__sanitizer	file:
struct_spppdnssettings_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_spppdnssettings_sz = sizeof(spppdnssettings);$/;"	m	namespace:__sanitizer	file:
struct_spppidletimeout_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_spppidletimeout_sz = sizeof(spppidletimeout);$/;"	m	namespace:__sanitizer	file:
struct_spppkeepalivesettings_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_spppkeepalivesettings_sz = sizeof(spppkeepalivesettings);$/;"	m	namespace:__sanitizer	file:
struct_sppplcpcfg_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_sppplcpcfg_sz = sizeof(sppplcpcfg);$/;"	m	namespace:__sanitizer	file:
struct_spppstatus_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_spppstatus_sz = sizeof(spppstatus);$/;"	m	namespace:__sanitizer	file:
struct_spppstatusncp_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_spppstatusncp_sz = sizeof(spppstatusncp);$/;"	m	namespace:__sanitizer	file:
struct_srt_rt_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_srt_rt_sz = sizeof(srt_rt);$/;"	m	namespace:__sanitizer	file:
struct_stat64_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_stat64_sz = sizeof(struct stat64);$/;"	m	namespace:__sanitizer	file:
struct_stat64_sz	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned struct_stat64_sz = sizeof(struct stat64);$/;"	m	namespace:__sanitizer	file:
struct_stat_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_stat_sz = sizeof(struct stat);$/;"	m	namespace:__sanitizer	file:
struct_stat_sz	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^unsigned struct_stat_sz = sizeof(struct stat);$/;"	m	namespace:__sanitizer	file:
struct_stat_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_stat_sz = sizeof(struct stat);$/;"	m	namespace:__sanitizer	file:
struct_stat_sz	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned struct_stat_sz = sizeof(struct stat);$/;"	m	namespace:__sanitizer	file:
struct_statfs64_sz	lib/sanitizer_common/sanitizer_platform_limits_linux.cc	/^  unsigned struct_statfs64_sz = sizeof(struct statfs64);$/;"	m	namespace:__sanitizer	file:
struct_statfs64_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_statfs64_sz = sizeof(struct statfs64);$/;"	m	namespace:__sanitizer	file:
struct_statfs_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_statfs_sz = sizeof(struct statfs);$/;"	m	namespace:__sanitizer	file:
struct_statfs_sz	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned struct_statfs_sz = sizeof(struct statfs);$/;"	m	namespace:__sanitizer	file:
struct_statvfs64_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_statvfs64_sz = sizeof(struct statvfs64);$/;"	m	namespace:__sanitizer	file:
struct_statvfs64_sz	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned struct_statvfs64_sz = sizeof(struct statvfs64);$/;"	m	namespace:__sanitizer	file:
struct_statvfs_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_statvfs_sz = sizeof(struct statvfs);$/;"	m	namespace:__sanitizer	file:
struct_statvfs_sz	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^unsigned struct_statvfs_sz = sizeof(struct statvfs);$/;"	m	namespace:__sanitizer	file:
struct_statvfs_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_statvfs_sz = sizeof(struct statvfs);$/;"	m	namespace:__sanitizer	file:
struct_statvfs_sz	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned struct_statvfs_sz = sizeof(struct statvfs);$/;"	m	namespace:__sanitizer	file:
struct_stic_xinfo_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_stic_xinfo_sz = sizeof(stic_xinfo);$/;"	m	namespace:__sanitizer	file:
struct_sun_dkctlr_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_sun_dkctlr_sz = sizeof(sun_dkctlr);$/;"	m	namespace:__sanitizer	file:
struct_sun_dkgeom_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_sun_dkgeom_sz = sizeof(sun_dkgeom);$/;"	m	namespace:__sanitizer	file:
struct_sun_dkpart_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_sun_dkpart_sz = sizeof(sun_dkpart);$/;"	m	namespace:__sanitizer	file:
struct_synth_info_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_synth_info_sz = sizeof(synth_info);$/;"	m	namespace:__sanitizer	file:
struct_synth_info_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_synth_info_sz = sizeof(struct synth_info);$/;"	m	namespace:__sanitizer	file:
struct_sysinfo_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_sysinfo_sz = sizeof(struct sysinfo);$/;"	m	namespace:__sanitizer	file:
struct_tbrreq_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_tbrreq_sz = sizeof(tbrreq);$/;"	m	namespace:__sanitizer	file:
struct_tchars_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_tchars_sz = sizeof(tchars);$/;"	m	namespace:__sanitizer	file:
struct_termio_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_termio_sz = sizeof(struct termio);$/;"	m	namespace:__sanitizer	file:
struct_termios_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_termios_sz = sizeof(termios);$/;"	m	namespace:__sanitizer	file:
struct_termios_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_termios_sz = sizeof(struct termios);$/;"	m	namespace:__sanitizer	file:
struct_termios_sz	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned struct_termios_sz = sizeof(struct termios);$/;"	m	namespace:__sanitizer	file:
struct_timespec_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_timespec_sz = sizeof(struct timespec);$/;"	m	namespace:__sanitizer	file:
struct_timespec_sz	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^unsigned struct_timespec_sz = sizeof(struct timespec);$/;"	m	namespace:__sanitizer	file:
struct_timespec_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_timespec_sz = sizeof(struct timespec);$/;"	m	namespace:__sanitizer	file:
struct_timespec_sz	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned struct_timespec_sz = sizeof(struct timespec);$/;"	m	namespace:__sanitizer	file:
struct_timeval_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_timeval_sz = sizeof(timeval);$/;"	m	namespace:__sanitizer	file:
struct_timex_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_timex_sz = sizeof(struct timex);$/;"	m	namespace:__sanitizer	file:
struct_timex_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_timex_sz = sizeof(struct timex);$/;"	m	namespace:__sanitizer	file:
struct_timezone_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_timezone_sz = sizeof(struct timezone);$/;"	m	namespace:__sanitizer	file:
struct_timezone_sz	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^unsigned struct_timezone_sz = sizeof(struct timezone);$/;"	m	namespace:__sanitizer	file:
struct_timezone_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_timezone_sz = sizeof(struct timezone);$/;"	m	namespace:__sanitizer	file:
struct_timezone_sz	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned struct_timezone_sz = sizeof(struct timezone);$/;"	m	namespace:__sanitizer	file:
struct_tm_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_tm_sz = sizeof(struct tm);$/;"	m	namespace:__sanitizer	file:
struct_tm_sz	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^unsigned struct_tm_sz = sizeof(struct tm);$/;"	m	namespace:__sanitizer	file:
struct_tm_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_tm_sz = sizeof(struct tm);$/;"	m	namespace:__sanitizer	file:
struct_tm_sz	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned struct_tm_sz = sizeof(struct tm);$/;"	m	namespace:__sanitizer	file:
struct_tms_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_tms_sz = sizeof(struct tms);$/;"	m	namespace:__sanitizer	file:
struct_tms_sz	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^unsigned struct_tms_sz = sizeof(struct tms);$/;"	m	namespace:__sanitizer	file:
struct_tms_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_tms_sz = sizeof(struct tms);$/;"	m	namespace:__sanitizer	file:
struct_tms_sz	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned struct_tms_sz = sizeof(struct tms);$/;"	m	namespace:__sanitizer	file:
struct_tone_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_tone_sz = sizeof(tone_t);$/;"	m	namespace:__sanitizer	file:
struct_ttyent_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^int struct_ttyent_sz = sizeof(struct ttyent);$/;"	m	namespace:__sanitizer	file:
struct_twe_drivecommand_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_twe_drivecommand_sz = sizeof(twe_drivecommand);$/;"	m	namespace:__sanitizer	file:
struct_twe_paramcommand_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_twe_paramcommand_sz = sizeof(twe_paramcommand);$/;"	m	namespace:__sanitizer	file:
struct_twe_usercommand_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_twe_usercommand_sz = sizeof(twe_usercommand);$/;"	m	namespace:__sanitizer	file:
struct_ukyopon_identify_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_ukyopon_identify_sz = sizeof(ukyopon_identify);$/;"	m	namespace:__sanitizer	file:
struct_unimapdesc_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_unimapdesc_sz = sizeof(struct unimapdesc);$/;"	m	namespace:__sanitizer	file:
struct_unimapinit_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_unimapinit_sz = sizeof(struct unimapinit);$/;"	m	namespace:__sanitizer	file:
struct_urio_command_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_urio_command_sz = sizeof(urio_command);$/;"	m	namespace:__sanitizer	file:
struct_usb_alt_interface_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_usb_alt_interface_sz = sizeof(usb_alt_interface);$/;"	m	namespace:__sanitizer	file:
struct_usb_bulk_ra_wb_opt_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_usb_bulk_ra_wb_opt_sz = sizeof(usb_bulk_ra_wb_opt);$/;"	m	namespace:__sanitizer	file:
struct_usb_config_desc_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_usb_config_desc_sz = sizeof(usb_config_desc);$/;"	m	namespace:__sanitizer	file:
struct_usb_ctl_report_desc_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_usb_ctl_report_desc_sz = sizeof(usb_ctl_report_desc);$/;"	m	namespace:__sanitizer	file:
struct_usb_ctl_report_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_usb_ctl_report_sz = sizeof(usb_ctl_report);$/;"	m	namespace:__sanitizer	file:
struct_usb_ctl_request_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_usb_ctl_request_sz = sizeof(usb_ctl_request);$/;"	m	namespace:__sanitizer	file:
struct_usb_device_descriptor_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_usb_device_descriptor_sz = sizeof(usb_device_descriptor_t);$/;"	m	namespace:__sanitizer	file:
struct_usb_device_info_old_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_usb_device_info_old_sz = sizeof(usb_device_info_old);$/;"	m	namespace:__sanitizer	file:
struct_usb_device_info_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_usb_device_info_sz = sizeof(usb_device_info);$/;"	m	namespace:__sanitizer	file:
struct_usb_device_stats_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_usb_device_stats_sz = sizeof(usb_device_stats);$/;"	m	namespace:__sanitizer	file:
struct_usb_endpoint_desc_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_usb_endpoint_desc_sz = sizeof(usb_endpoint_desc);$/;"	m	namespace:__sanitizer	file:
struct_usb_full_desc_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_usb_full_desc_sz = sizeof(usb_full_desc);$/;"	m	namespace:__sanitizer	file:
struct_usb_interface_desc_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_usb_interface_desc_sz = sizeof(usb_interface_desc);$/;"	m	namespace:__sanitizer	file:
struct_usb_string_desc_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_usb_string_desc_sz = sizeof(usb_string_desc);$/;"	m	namespace:__sanitizer	file:
struct_user_fpregs_struct_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_user_fpregs_struct_sz = sizeof(elf_fpregset_t);$/;"	m	namespace:__sanitizer	file:
struct_user_fpregs_struct_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_user_fpregs_struct_sz = sizeof(struct _user_fpregs_struct);$/;"	m	namespace:__sanitizer	file:
struct_user_fpregs_struct_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_user_fpregs_struct_sz = sizeof(struct user_fpregs_struct);$/;"	m	namespace:__sanitizer	file:
struct_user_fpregs_struct_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_user_fpregs_struct_sz = sizeof(struct user_fpsimd_state);$/;"	m	namespace:__sanitizer	file:
struct_user_fpxregs_struct_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_user_fpxregs_struct_sz = 0;$/;"	m	namespace:__sanitizer	file:
struct_user_fpxregs_struct_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_user_fpxregs_struct_sz = sizeof(struct user_fpxregs_struct);$/;"	m	namespace:__sanitizer	file:
struct_user_regs_struct_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_user_regs_struct_sz = sizeof(struct _user_regs_struct);$/;"	m	namespace:__sanitizer	file:
struct_user_regs_struct_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_user_regs_struct_sz = sizeof(struct pt_regs);$/;"	m	namespace:__sanitizer	file:
struct_user_regs_struct_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_user_regs_struct_sz = sizeof(struct user_pt_regs);$/;"	m	namespace:__sanitizer	file:
struct_user_regs_struct_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_user_regs_struct_sz = sizeof(struct user_regs_struct);$/;"	m	namespace:__sanitizer	file:
struct_user_vfpregs_struct_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_user_vfpregs_struct_sz = 0;$/;"	m	namespace:__sanitizer	file:
struct_user_vfpregs_struct_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_user_vfpregs_struct_sz = ARM_VFPREGS_SIZE;$/;"	m	namespace:__sanitizer	file:
struct_ustat_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_ustat_sz = SIZEOF_STRUCT_USTAT;$/;"	m	namespace:__sanitizer	file:
struct_utimbuf_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_utimbuf_sz = sizeof(struct utimbuf);$/;"	m	namespace:__sanitizer	file:
struct_utimbuf_sz	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^unsigned struct_utimbuf_sz = sizeof(struct utimbuf);$/;"	m	namespace:__sanitizer	file:
struct_utimbuf_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_utimbuf_sz = sizeof(struct utimbuf);$/;"	m	namespace:__sanitizer	file:
struct_utmp_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_utmp_sz = sizeof(struct utmp);$/;"	m	namespace:__sanitizer	file:
struct_utmp_sz	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^unsigned struct_utmp_sz = sizeof(struct utmp);$/;"	m	namespace:__sanitizer	file:
struct_utmp_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_utmp_sz = sizeof(struct utmp);$/;"	m	namespace:__sanitizer	file:
struct_utmp_sz	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned struct_utmp_sz = sizeof(struct utmp);$/;"	m	namespace:__sanitizer	file:
struct_utmpx_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_utmpx_sz = sizeof(struct utmpx);$/;"	m	namespace:__sanitizer	file:
struct_utmpx_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_utmpx_sz = sizeof(struct utmpx);$/;"	m	namespace:__sanitizer	file:
struct_utmpx_sz	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned struct_utmpx_sz = sizeof(struct utmpx);$/;"	m	namespace:__sanitizer	file:
struct_utoppy_readfile_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_utoppy_readfile_sz = sizeof(utoppy_readfile);$/;"	m	namespace:__sanitizer	file:
struct_utoppy_rename_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_utoppy_rename_sz = sizeof(utoppy_rename);$/;"	m	namespace:__sanitizer	file:
struct_utoppy_stats_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_utoppy_stats_sz = sizeof(utoppy_stats);$/;"	m	namespace:__sanitizer	file:
struct_utoppy_writefile_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_utoppy_writefile_sz = sizeof(utoppy_writefile);$/;"	m	namespace:__sanitizer	file:
struct_utsname_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_utsname_sz = sizeof(struct utsname);$/;"	m	namespace:__sanitizer	file:
struct_utsname_sz	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^unsigned struct_utsname_sz = sizeof(struct utsname);$/;"	m	namespace:__sanitizer	file:
struct_utsname_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_utsname_sz = sizeof(struct utsname);$/;"	m	namespace:__sanitizer	file:
struct_utsname_sz	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned struct_utsname_sz = sizeof(struct utsname);$/;"	m	namespace:__sanitizer	file:
struct_v4l2_audio_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_v4l2_audio_sz = sizeof(v4l2_audio);$/;"	m	namespace:__sanitizer	file:
struct_v4l2_audioout_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_v4l2_audioout_sz = sizeof(v4l2_audioout);$/;"	m	namespace:__sanitizer	file:
struct_v4l2_buffer_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_v4l2_buffer_sz = sizeof(v4l2_buffer);$/;"	m	namespace:__sanitizer	file:
struct_v4l2_capability_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_v4l2_capability_sz = sizeof(v4l2_capability);$/;"	m	namespace:__sanitizer	file:
struct_v4l2_control_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_v4l2_control_sz = sizeof(v4l2_control);$/;"	m	namespace:__sanitizer	file:
struct_v4l2_crop_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_v4l2_crop_sz = sizeof(v4l2_crop);$/;"	m	namespace:__sanitizer	file:
struct_v4l2_cropcap_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_v4l2_cropcap_sz = sizeof(v4l2_cropcap);$/;"	m	namespace:__sanitizer	file:
struct_v4l2_fmtdesc_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_v4l2_fmtdesc_sz = sizeof(v4l2_fmtdesc);$/;"	m	namespace:__sanitizer	file:
struct_v4l2_format_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_v4l2_format_sz = sizeof(v4l2_format);$/;"	m	namespace:__sanitizer	file:
struct_v4l2_framebuffer_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_v4l2_framebuffer_sz = sizeof(v4l2_framebuffer);$/;"	m	namespace:__sanitizer	file:
struct_v4l2_frequency_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_v4l2_frequency_sz = sizeof(v4l2_frequency);$/;"	m	namespace:__sanitizer	file:
struct_v4l2_frmivalenum_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_v4l2_frmivalenum_sz = sizeof(v4l2_frmivalenum);$/;"	m	namespace:__sanitizer	file:
struct_v4l2_frmsizeenum_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_v4l2_frmsizeenum_sz = sizeof(v4l2_frmsizeenum);$/;"	m	namespace:__sanitizer	file:
struct_v4l2_input_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_v4l2_input_sz = sizeof(v4l2_input);$/;"	m	namespace:__sanitizer	file:
struct_v4l2_jpegcompression_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_v4l2_jpegcompression_sz = sizeof(v4l2_jpegcompression);$/;"	m	namespace:__sanitizer	file:
struct_v4l2_modulator_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_v4l2_modulator_sz = sizeof(v4l2_modulator);$/;"	m	namespace:__sanitizer	file:
struct_v4l2_output_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_v4l2_output_sz = sizeof(v4l2_output);$/;"	m	namespace:__sanitizer	file:
struct_v4l2_queryctrl_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_v4l2_queryctrl_sz = sizeof(v4l2_queryctrl);$/;"	m	namespace:__sanitizer	file:
struct_v4l2_querymenu_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_v4l2_querymenu_sz = sizeof(v4l2_querymenu);$/;"	m	namespace:__sanitizer	file:
struct_v4l2_requestbuffers_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_v4l2_requestbuffers_sz = sizeof(v4l2_requestbuffers);$/;"	m	namespace:__sanitizer	file:
struct_v4l2_standard_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_v4l2_standard_sz = sizeof(v4l2_standard);$/;"	m	namespace:__sanitizer	file:
struct_v4l2_streamparm_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_v4l2_streamparm_sz = sizeof(v4l2_streamparm);$/;"	m	namespace:__sanitizer	file:
struct_v4l2_tuner_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_v4l2_tuner_sz = sizeof(v4l2_tuner);$/;"	m	namespace:__sanitizer	file:
struct_vnd_ioctl_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_vnd_ioctl_sz = sizeof(vnd_ioctl);$/;"	m	namespace:__sanitizer	file:
struct_vnd_user_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_vnd_user_sz = sizeof(vnd_user);$/;"	m	namespace:__sanitizer	file:
struct_vt_consize_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_vt_consize_sz = sizeof(struct vt_consize);$/;"	m	namespace:__sanitizer	file:
struct_vt_mode_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_vt_mode_sz = sizeof(struct vt_mode);$/;"	m	namespace:__sanitizer	file:
struct_vt_mode_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_vt_mode_sz = sizeof(struct vt_mode);$/;"	m	namespace:__sanitizer	file:
struct_vt_sizes_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_vt_sizes_sz = sizeof(struct vt_sizes);$/;"	m	namespace:__sanitizer	file:
struct_vt_stat_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_vt_stat_sz = sizeof(vt_stat);$/;"	m	namespace:__sanitizer	file:
struct_vt_stat_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_vt_stat_sz = sizeof(struct vt_stat);$/;"	m	namespace:__sanitizer	file:
struct_wdog_conf_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_wdog_conf_sz = sizeof(wdog_conf);$/;"	m	namespace:__sanitizer	file:
struct_wdog_mode_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_wdog_mode_sz = sizeof(wdog_mode);$/;"	m	namespace:__sanitizer	file:
struct_wfq_conf_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_wfq_conf_sz = sizeof(wfq_conf);$/;"	m	namespace:__sanitizer	file:
struct_wfq_getqid_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_wfq_getqid_sz = sizeof(wfq_getqid);$/;"	m	namespace:__sanitizer	file:
struct_wfq_getstats_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_wfq_getstats_sz = sizeof(wfq_getstats);$/;"	m	namespace:__sanitizer	file:
struct_wfq_interface_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_wfq_interface_sz = sizeof(wfq_interface);$/;"	m	namespace:__sanitizer	file:
struct_wfq_setweight_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_wfq_setweight_sz = sizeof(wfq_setweight);$/;"	m	namespace:__sanitizer	file:
struct_winsize_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_winsize_sz = sizeof(winsize);$/;"	m	namespace:__sanitizer	file:
struct_winsize_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned struct_winsize_sz = sizeof(struct winsize);$/;"	m	namespace:__sanitizer	file:
struct_winsize_sz	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned struct_winsize_sz = sizeof(struct winsize);$/;"	m	namespace:__sanitizer	file:
struct_with_dtor	test/asan/TestCases/initialization-nobug.cc	/^StructWithDtor struct_with_dtor;$/;"	v
struct_wscons_event_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_wscons_event_sz = sizeof(wscons_event);$/;"	m	namespace:__sanitizer	file:
struct_wsdisplay_addscreendata_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_wsdisplay_addscreendata_sz = sizeof(wsdisplay_addscreendata);$/;"	m	namespace:__sanitizer	file:
struct_wsdisplay_char_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_wsdisplay_char_sz = sizeof(wsdisplay_char);$/;"	m	namespace:__sanitizer	file:
struct_wsdisplay_cmap_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_wsdisplay_cmap_sz = sizeof(wsdisplay_cmap);$/;"	m	namespace:__sanitizer	file:
struct_wsdisplay_curpos_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_wsdisplay_curpos_sz = sizeof(wsdisplay_curpos);$/;"	m	namespace:__sanitizer	file:
struct_wsdisplay_cursor_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_wsdisplay_cursor_sz = sizeof(wsdisplay_cursor);$/;"	m	namespace:__sanitizer	file:
struct_wsdisplay_delscreendata_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_wsdisplay_delscreendata_sz = sizeof(wsdisplay_delscreendata);$/;"	m	namespace:__sanitizer	file:
struct_wsdisplay_fbinfo_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_wsdisplay_fbinfo_sz = sizeof(wsdisplay_fbinfo);$/;"	m	namespace:__sanitizer	file:
struct_wsdisplay_font_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_wsdisplay_font_sz = sizeof(wsdisplay_font);$/;"	m	namespace:__sanitizer	file:
struct_wsdisplay_kbddata_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_wsdisplay_kbddata_sz = sizeof(wsdisplay_kbddata);$/;"	m	namespace:__sanitizer	file:
struct_wsdisplay_msgattrs_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_wsdisplay_msgattrs_sz = sizeof(wsdisplay_msgattrs);$/;"	m	namespace:__sanitizer	file:
struct_wsdisplay_param_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_wsdisplay_param_sz = sizeof(wsdisplay_param);$/;"	m	namespace:__sanitizer	file:
struct_wsdisplay_scroll_data_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_wsdisplay_scroll_data_sz = sizeof(wsdisplay_scroll_data);$/;"	m	namespace:__sanitizer	file:
struct_wsdisplay_usefontdata_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_wsdisplay_usefontdata_sz = sizeof(wsdisplay_usefontdata);$/;"	m	namespace:__sanitizer	file:
struct_wsdisplayio_blit_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_wsdisplayio_blit_sz = sizeof(wsdisplayio_blit);$/;"	m	namespace:__sanitizer	file:
struct_wsdisplayio_bus_id_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_wsdisplayio_bus_id_sz = sizeof(wsdisplayio_bus_id);$/;"	m	namespace:__sanitizer	file:
struct_wsdisplayio_edid_info_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_wsdisplayio_edid_info_sz = sizeof(wsdisplayio_edid_info);$/;"	m	namespace:__sanitizer	file:
struct_wsdisplayio_fbinfo_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_wsdisplayio_fbinfo_sz = sizeof(wsdisplayio_fbinfo);$/;"	m	namespace:__sanitizer	file:
struct_wskbd_bell_data_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_wskbd_bell_data_sz = sizeof(wskbd_bell_data);$/;"	m	namespace:__sanitizer	file:
struct_wskbd_keyrepeat_data_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_wskbd_keyrepeat_data_sz = sizeof(wskbd_keyrepeat_data);$/;"	m	namespace:__sanitizer	file:
struct_wskbd_map_data_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_wskbd_map_data_sz = sizeof(wskbd_map_data);$/;"	m	namespace:__sanitizer	file:
struct_wskbd_scroll_data_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_wskbd_scroll_data_sz = sizeof(wskbd_scroll_data);$/;"	m	namespace:__sanitizer	file:
struct_wsmouse_calibcoords_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_wsmouse_calibcoords_sz = sizeof(wsmouse_calibcoords);$/;"	m	namespace:__sanitizer	file:
struct_wsmouse_id_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_wsmouse_id_sz = sizeof(wsmouse_id);$/;"	m	namespace:__sanitizer	file:
struct_wsmouse_repeat_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_wsmouse_repeat_sz = sizeof(wsmouse_repeat);$/;"	m	namespace:__sanitizer	file:
struct_wsmux_device_list_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_wsmux_device_list_sz = sizeof(wsmux_device_list);$/;"	m	namespace:__sanitizer	file:
struct_wsmux_device_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_wsmux_device_sz = sizeof(wsmux_device);$/;"	m	namespace:__sanitizer	file:
struct_xd_iocmd_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned struct_xd_iocmd_sz = sizeof(xd_iocmd);$/;"	m	namespace:__sanitizer	file:
su_int	lib/builtins/int_types.h	/^typedef unsigned su_int;$/;"	t
sub_4	lib/builtins/arm/sync_fetch_and_sub_4.S	/^#define sub_4(rD, rN, rM)  sub rD, rN, rM$/;"	d
sub_8	lib/builtins/arm/sync_fetch_and_sub_8.S	/^#define sub_8(rD_LO, rD_HI, rN_LO, rN_HI, rM_LO, rM_HI) \\$/;"	d
submitted_synchronously	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^  bool submitted_synchronously;$/;"	m	struct:__tsan::__anon19	file:
subtractNoOverflow	lib/ubsan/ubsan_diag.cc	/^static inline uptr subtractNoOverflow(uptr LHS, uptr RHS) {$/;"	f	file:
success	lib/lsan/lsan_common.cc	/^  bool success;$/;"	m	struct:__lsan::CheckForLeaksParam	file:
supp	lib/tsan/rtl/tsan_rtl.h	/^  Suppression *supp;$/;"	m	struct:__tsan::FiredSuppression
supports_read_lock	test/tsan/deadlock_detector_stress_test.cc	/^  static bool supports_read_lock() { return false; }$/;"	f	class:PthreadMutex
supports_read_lock	test/tsan/deadlock_detector_stress_test.cc	/^  static bool supports_read_lock() { return false; }$/;"	f	class:PthreadSpinLock
supports_read_lock	test/tsan/deadlock_detector_stress_test.cc	/^  static bool supports_read_lock() { return true; }$/;"	f	class:PthreadRWLock
supports_recursive_lock	test/tsan/deadlock_detector_stress_test.cc	/^  static bool supports_recursive_lock() { return false; }$/;"	f	class:PthreadMutex
supports_recursive_lock	test/tsan/deadlock_detector_stress_test.cc	/^  static bool supports_recursive_lock() { return false; }$/;"	f	class:PthreadRWLock
supports_recursive_lock	test/tsan/deadlock_detector_stress_test.cc	/^  static bool supports_recursive_lock() { return false; }$/;"	f	class:PthreadSpinLock
supports_recursive_lock	test/tsan/deadlock_detector_stress_test.cc	/^  static bool supports_recursive_lock() { return true; }$/;"	f	class:PthreadRecursiveMutex
supposedToNotCompile	test/BlocksRuntime/testfilerunner.h	/^@property bool hasObjC, hasRR, hasGC, hasCPlusPlus, wantsC99, supposedToNotCompile, open, wants32, wants64;$/;"	v
suppress_reports	lib/tsan/rtl/tsan_rtl.h	/^  int suppress_reports;$/;"	m	struct:__tsan::ThreadState
suppress_this	test/tsan/suppressions_mutex.cc	/^void __attribute__((noinline)) suppress_this(pthread_mutex_t *mu) {$/;"	f
suppress_warning1	lib/fuzzer/afl/afl_driver.cpp	/^static volatile char suppress_warning1 = AFL_DEFER_FORKSVR[0];$/;"	v	file:
suppress_warning2	lib/fuzzer/afl/afl_driver.cpp	/^static volatile char suppress_warning2 = AFL_PERSISTENT[0];$/;"	v	file:
suppressable	lib/tsan/rtl/tsan_report.h	/^  bool suppressable;$/;"	m	struct:__tsan::ReportLocation
suppressable	lib/tsan/rtl/tsan_report.h	/^  bool suppressable;$/;"	m	struct:__tsan::ReportStack
suppression_ctx	lib/asan/asan_suppressions.cc	/^static SuppressionContext *suppression_ctx = nullptr;$/;"	m	namespace:__asan	file:
suppression_ctx	lib/lsan/lsan_common.cc	/^static SuppressionContext *suppression_ctx = nullptr;$/;"	m	namespace:__lsan	file:
suppression_ctx	lib/tsan/rtl/tsan_suppressions.cc	/^static SuppressionContext *suppression_ctx = nullptr;$/;"	m	namespace:__tsan	file:
suppression_ctx	lib/ubsan/ubsan_diag.cc	/^static SuppressionContext *suppression_ctx = nullptr;$/;"	v	file:
suppression_placeholder	lib/asan/asan_suppressions.cc	/^ALIGNED(64) static char suppression_placeholder[sizeof(SuppressionContext)];$/;"	m	namespace:__asan	file:
suppression_placeholder	lib/lsan/lsan_common.cc	/^ALIGNED(64) static char suppression_placeholder[sizeof(SuppressionContext)];$/;"	m	namespace:__lsan	file:
suppression_placeholder	lib/tsan/rtl/tsan_suppressions.cc	/^ALIGNED(64) static char suppression_placeholder[sizeof(SuppressionContext)];$/;"	m	namespace:__tsan	file:
suppression_placeholder	lib/ubsan/ubsan_diag.cc	/^ALIGNED(64) static char suppression_placeholder[sizeof(SuppressionContext)];$/;"	v	file:
suppression_types_	lib/sanitizer_common/sanitizer_suppressions.h	/^  const char **const suppression_types_;$/;"	m	class:__sanitizer::SuppressionContext
suppression_types_num_	lib/sanitizer_common/sanitizer_suppressions.h	/^  const int suppression_types_num_;$/;"	m	class:__sanitizer::SuppressionContext
suppressions_	lib/sanitizer_common/sanitizer_suppressions.h	/^  InternalMmapVector<Suppression> suppressions_;$/;"	m	class:__sanitizer::SuppressionContext
suspended_threads_list	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^  SuspendedThreadsListLinux &suspended_threads_list() {$/;"	f	class:__sanitizer::ThreadSuspender
suspended_threads_list_	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^  SuspendedThreadsListLinux suspended_threads_list_;$/;"	m	class:__sanitizer::ThreadSuspender	file:
swap	lib/sanitizer_common/sanitizer_common.h	/^  void swap(InternalMmapVectorNoCtor &other) {$/;"	f	class:__sanitizer::InternalMmapVectorNoCtor
swift_demangle_f	lib/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc	/^static swift_demangle_ft swift_demangle_f;$/;"	m	namespace:__sanitizer	file:
swift_demangle_ft	lib/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc	/^typedef char *(*swift_demangle_ft)(const char *mangledName,$/;"	t	namespace:__sanitizer	file:
sym_	lib/sanitizer_common/sanitizer_symbolizer.h	/^    const Symbolizer *sym_;$/;"	m	class:__sanitizer::final::SymbolizerScope
symbolize	lib/asan/scripts/asan_symbolize.py	/^  def symbolize(self, addr, binary, offset):$/;"	m	class:Addr2LineSymbolizer
symbolize	lib/asan/scripts/asan_symbolize.py	/^  def symbolize(self, addr, binary, offset):$/;"	m	class:BreakpadSymbolizer
symbolize	lib/asan/scripts/asan_symbolize.py	/^  def symbolize(self, addr, binary, offset):$/;"	m	class:ChainSymbolizer
symbolize	lib/asan/scripts/asan_symbolize.py	/^  def symbolize(self, addr, binary, offset):$/;"	m	class:DarwinSymbolizer
symbolize	lib/asan/scripts/asan_symbolize.py	/^  def symbolize(self, addr, binary, offset):$/;"	m	class:LLVMSymbolizer
symbolize	lib/asan/scripts/asan_symbolize.py	/^  def symbolize(self, addr, binary, offset):$/;"	m	class:Symbolizer
symbolize_address	lib/asan/scripts/asan_symbolize.py	/^  def symbolize_address(self, addr, binary, offset, arch):$/;"	m	class:SymbolizationLoop
symbolize_cb	lib/tsan/go/test.c	/^void symbolize_cb(long cmd, void *ctx) {$/;"	f
symbolizer_	lib/sanitizer_common/sanitizer_symbolizer.cc	/^Symbolizer *Symbolizer::symbolizer_;$/;"	m	class:__sanitizer::Symbolizer	file:
symbolizer_	lib/sanitizer_common/sanitizer_symbolizer.h	/^  static Symbolizer *symbolizer_;$/;"	m	class:__sanitizer::final
symbolizer_allocator_	lib/sanitizer_common/sanitizer_symbolizer.cc	/^LowLevelAllocator Symbolizer::symbolizer_allocator_;$/;"	m	class:__sanitizer::Symbolizer	file:
symbolizer_allocator_	lib/sanitizer_common/sanitizer_symbolizer.h	/^  static LowLevelAllocator symbolizer_allocator_;$/;"	m	class:__sanitizer::final
symbolizer_process_	lib/sanitizer_common/sanitizer_symbolizer_internal.h	/^  LLVMSymbolizerProcess *symbolizer_process_;$/;"	m	class:__sanitizer::LLVMSymbolizer
symbolizers	lib/asan/scripts/asan_symbolize.py	/^symbolizers = {}$/;"	v
sync	lib/tsan/rtl/tsan_fd.cc	/^  FdSync *sync;$/;"	m	struct:__tsan::FdDesc	file:
sync	lib/tsan/rtl/tsan_rtl.h	/^  SyncClock sync;$/;"	m	class:__tsan::ThreadContext
sync_cache	lib/tsan/rtl/tsan_rtl.h	/^  DenseSlabAllocCache sync_cache;$/;"	m	struct:__tsan::Processor
sync_ignore_set	lib/tsan/rtl/tsan_rtl.h	/^  IgnoreSet sync_ignore_set;$/;"	m	struct:__tsan::ThreadState
syncp	test/tsan/stack_sync_reuse.cc	/^long *syncp;$/;"	v
syscall_access_range	lib/tsan/rtl/tsan_interceptors.cc	/^static void syscall_access_range(uptr pc, uptr p, uptr s, bool write) {$/;"	f	file:
syscall_acquire	lib/tsan/rtl/tsan_interceptors.cc	/^static void syscall_acquire(uptr pc, uptr addr) {$/;"	f	file:
syscall_body	utils/generate_netbsd_syscalls.awk	/^function syscall_body(syscall, mode)$/;"	f
syscall_fd_acquire	lib/tsan/rtl/tsan_interceptors.cc	/^static USED void syscall_fd_acquire(uptr pc, int fd) {$/;"	f	file:
syscall_fd_close	lib/tsan/rtl/tsan_interceptors.cc	/^static void syscall_fd_close(uptr pc, int fd) {$/;"	f	file:
syscall_fd_release	lib/tsan/rtl/tsan_interceptors.cc	/^static USED void syscall_fd_release(uptr pc, int fd) {$/;"	f	file:
syscall_gettid	test/xray/TestCases/Posix/fork_basic_logging.cc	/^static uintptr_t syscall_gettid() {$/;"	f	file:
syscall_nr	test/asan/TestCases/Linux/read_binary_name_regtest.c	22;"	d	file:
syscall_post_fork	lib/tsan/rtl/tsan_interceptors.cc	/^static void syscall_post_fork(uptr pc, int pid) {$/;"	f	file:
syscall_pre_fork	lib/tsan/rtl/tsan_interceptors.cc	/^static void syscall_pre_fork(uptr pc) {$/;"	f	file:
syscall_release	lib/tsan/rtl/tsan_interceptors.cc	/^static void syscall_release(uptr pc, uptr addr) {$/;"	f	file:
sysconf	test/sanitizer_common/TestCases/Linux/sysconf_interceptor_bypass_test.cc	/^extern "C" long sysconf(int name) {$/;"	f
sysroot_path	lib/asan/scripts/asan_symbolize.py	/^sysroot_path = None$/;"	v
sysroot_path_filter	lib/asan/scripts/asan_symbolize.py	/^def sysroot_path_filter(binary_name):$/;"	f
t	lib/asan/asan_interceptors.cc	/^  atomic_uintptr_t t;$/;"	m	struct:ThreadStartParam	file:
t	test/asan/TestCases/Linux/leak.cc	/^int *t;$/;"	v
t	test/asan/TestCases/use-after-scope-types.cc	/^  T *t;$/;"	m	struct:Ptr	file:
t	test/fuzzer/CallerCalleeTest.cpp	/^static F t[256];$/;"	v	file:
t	test/lsan/TestCases/new_array_with_dtor_0.cc	/^T *t;$/;"	v
t	test/profile/Inputs/instrprof-comdat.h	/^  T t;$/;"	m	class:FOO
t	test/ubsan/TestCases/TypeCheck/misaligned.cpp	/^  int t;$/;"	m	struct:T	file:
t0	test/fuzzer/CallerCalleeTest.cpp	/^static F t0[256] = {$/;"	v	file:
t0	test/fuzzer/PrintUnstableStatsTest.cpp	/^__attribute__((noinline)) void t0() { x++; }$/;"	f
t1	lib/sanitizer_common/sanitizer_bvgraph.h	/^  BV t1, t2;$/;"	m	class:__sanitizer::BVGraph
t1	test/fuzzer/PrintUnstableStatsTest.cpp	/^__attribute__((noinline)) void t1() { x++; }$/;"	f
t1_start	test/safestack/pthread-cleanup.c	/^void *t1_start(void *ptr)$/;"	f
t1_start	test/safestack/pthread.c	/^void *t1_start(void *ptr)$/;"	f
t2	lib/sanitizer_common/sanitizer_bvgraph.h	/^  BV t1, t2;$/;"	m	class:__sanitizer::BVGraph
t2	test/fuzzer/PrintUnstableStatsTest.cpp	/^__attribute__((noinline)) void t2() { x++; }$/;"	f
t3	test/fuzzer/PrintUnstableStatsTest.cpp	/^__attribute__((noinline)) void t3() { x++; }$/;"	f
t4	test/fuzzer/PrintUnstableStatsTest.cpp	/^__attribute__((noinline)) void t4() { x++; }$/;"	f
t_	lib/sanitizer_common/sanitizer_flag_parser.h	/^  T *t_;$/;"	m	class:__sanitizer::FlagHandler
tab	lib/sanitizer_common/sanitizer_stackdepotbase.h	/^  atomic_uintptr_t tab[kTabSize];   \/\/ Hash table of Node's.$/;"	m	class:__sanitizer::StackDepotBase
tab	lib/tsan/rtl/tsan_fd.cc	/^  atomic_uintptr_t tab[kTableSizeL1];$/;"	m	struct:__tsan::FdContext	file:
table	lib/tsan/rtl/tsan_defs.h	/^    u32       table[kTableSize];$/;"	m	union:__tsan::ClockBlock::__anon20
table_	lib/sanitizer_common/sanitizer_addrhashmap.h	/^  Bucket *table_;$/;"	m	class:__sanitizer::AddrHashMap
tag	lib/asan/asan_allocator.cc	/^ChunkTag LsanMetadata::tag() const {$/;"	f	class:__lsan::LsanMetadata
tag	lib/lsan/lsan_allocator.cc	/^ChunkTag LsanMetadata::tag() const {$/;"	f	class:__lsan::LsanMetadata
tag	lib/lsan/lsan_allocator.h	/^  ChunkTag tag : 2;$/;"	m	struct:__lsan::ChunkMetadata
tag	lib/sanitizer_common/sanitizer_stackdepot.cc	/^  u32 tag;$/;"	m	struct:__sanitizer::StackDepotNode	file:
tag	lib/sanitizer_common/sanitizer_stacktrace.h	/^  u32 tag;$/;"	m	struct:__sanitizer::StackTrace
tag	lib/tsan/rtl/tsan_defs.h	/^  u64  tag : 16;$/;"	m	struct:__tsan::MBlock
tag	lib/tsan/rtl/tsan_report.h	/^  uptr tag;$/;"	m	class:__tsan::ReportDesc
tag	test/tsan/Darwin/external-dups.cc	/^void *tag;$/;"	v
tag	test/tsan/Darwin/external-lib.cc	/^static void *tag;$/;"	v	file:
tag	test/tsan/Darwin/external-swift.cc	/^static void *tag = (void *)0x1;$/;"	v	file:
tag_t	lib/hwasan/hwasan.h	/^typedef u8 tag_t;$/;"	t
tail	lib/profile/GCDAProfiling.c	/^  struct fn_node *head, *tail;$/;"	m	struct:fn_list	typeref:struct:fn_list::	file:
tail	lib/tsan/rtl/tsan_symbolize.cc	/^  SymbolizedStack *tail;$/;"	m	struct:__tsan::SymbolizedStackBuilder	file:
takeSample	lib/esan/working_set.cpp	/^static void takeSample(void *Arg) {$/;"	f	namespace:__esan
tctx	lib/tsan/rtl/tsan_rtl.h	/^  ThreadContext *tctx;$/;"	m	struct:__tsan::ThreadState
tctx	lib/tsan/rtl/tsan_rtl_thread.cc	/^  ThreadContext *tctx;$/;"	m	struct:__tsan::ThreadLeak	file:
tctx_allocator	lib/sanitizer_common/tests/sanitizer_thread_registry_test.cc	/^static LowLevelAllocator tctx_allocator;$/;"	m	namespace:__sanitizer	file:
teardownThread	lib/scudo/scudo_tsd_exclusive.cpp	/^static void teardownThread(void *Ptr) {$/;"	f	namespace:__scudo
temp_file_name	lib/sanitizer_common/tests/sanitizer_libc_test.cc	/^static void temp_file_name(char *buf, size_t bufsize, const char *prefix) {$/;"	f	file:
temp_w	test/msan/dtor-multiple-inheritance.cc	/^int *temp_w;$/;"	v
temp_x	test/msan/dtor-multiple-inheritance.cc	/^int *temp_x;$/;"	v
temp_y	test/msan/dtor-multiple-inheritance.cc	/^int *temp_y;$/;"	v
temp_z	test/msan/dtor-multiple-inheritance.cc	/^int *temp_z;$/;"	v
templ	lib/sanitizer_common/sanitizer_libignore.h	/^    char *templ;$/;"	m	struct:__sanitizer::LibIgnore::Lib
templ	lib/sanitizer_common/sanitizer_suppressions.h	/^  char *templ;$/;"	m	struct:__sanitizer::Suppression
ten	test/asan/TestCases/Posix/halt_on_error_suppress_equal_pcs.cc	/^volatile int ten = 10;$/;"	v
ten	test/asan/TestCases/Posix/print_cmdline.cc	/^volatile int ten = 10;$/;"	v
ten	test/asan/TestCases/halt_on_error-1.c	/^volatile int ten = 10;$/;"	v
terminate_thread	lib/sanitizer_common/tests/sanitizer_linux_test.cc	/^  bool terminate_thread;$/;"	m	struct:__sanitizer::TidReporterArgument	file:
terminate_thread_cond	lib/sanitizer_common/tests/sanitizer_linux_test.cc	/^  pthread_cond_t terminate_thread_cond;$/;"	m	struct:__sanitizer::TidReporterArgument	file:
terminate_thread_mutex	lib/sanitizer_common/tests/sanitizer_linux_test.cc	/^  pthread_mutex_t terminate_thread_mutex;$/;"	m	struct:__sanitizer::TidReporterArgument	file:
test	test/BlocksRuntime/josh.C	/^        void test(void){$/;"	f	struct:TestObject
test	test/BlocksRuntime/reference.C	/^void TestObject::test(void)  {$/;"	f	class:TestObject
test	test/asan/TestCases/use-after-scope-types.cc	/^template <class T> __attribute__((noinline)) void test() {$/;"	f
test	test/builtins/timing/time	/^function test () {$/;"	f
test	test/msan/fork.cc	/^void test() {$/;"	f
test	test/profile/Inputs/comdat_rename_1.cc	/^void test(FOO *foo) { foo->caller(10); }$/;"	f
test	test/profile/Inputs/instrprof-icall-promo_2.cc	/^int test() {$/;"	f
test	test/profile/instrprof-set-dir-mode.c	/^static int test(unsigned Mode, const char *TestDir) {$/;"	f	file:
test1	test/asan/TestCases/atoi_strict.c	/^void test1(char *array) {$/;"	f
test1	test/asan/TestCases/atol_strict.c	/^void test1(char *array) {$/;"	f
test1	test/asan/TestCases/atoll_strict.c	/^void test1(char *array) {$/;"	f
test1	test/asan/TestCases/pr33372.cc	/^void test1() {$/;"	f
test1	test/asan/TestCases/strcat_strict.c	/^void test1(char *to, int to_size, char *from) {$/;"	f
test1	test/asan/TestCases/strncat_strict.c	/^void test1(char *to, int to_size, char *from) {$/;"	f
test1	test/asan/TestCases/strtok.c	/^void test1() {$/;"	f
test1	test/asan/TestCases/strtol_strict.c	/^void test1(char *array, char *endptr) {$/;"	f
test1	test/asan/TestCases/strtoll_strict.c	/^void test1(char *array, char *endptr) {$/;"	f
test1	test/sanitizer_common/TestCases/NetBSD/netent.cc	/^void test1() {$/;"	f
test1	test/sanitizer_common/TestCases/NetBSD/protoent.cc	/^void test1() {$/;"	f
test1	test/sanitizer_common/TestCases/NetBSD/ttyent.cc	/^void test1() {$/;"	f
test1	test/sanitizer_common/TestCases/Posix/strlcat.cc	/^void test1() {$/;"	f
test1	test/sanitizer_common/TestCases/Posix/strlcpy.cc	/^void test1() {$/;"	f
test2	test/asan/TestCases/atoi_strict.c	/^void test2(char *array) {$/;"	f
test2	test/asan/TestCases/atol_strict.c	/^void test2(char *array) {$/;"	f
test2	test/asan/TestCases/atoll_strict.c	/^void test2(char *array) {$/;"	f
test2	test/asan/TestCases/pr33372.cc	/^void test2() {$/;"	f
test2	test/asan/TestCases/strcat_strict.c	/^void test2(char *to, int to_size, char *from) {$/;"	f
test2	test/asan/TestCases/strncat_strict.c	/^void test2(char *to, int to_size, char *from) {$/;"	f
test2	test/asan/TestCases/strtok.c	/^void test2() {$/;"	f
test2	test/asan/TestCases/strtol_strict.c	/^void test2(char *array, char *endptr) {$/;"	f
test2	test/asan/TestCases/strtoll_strict.c	/^void test2(char *array, char *endptr) {$/;"	f
test2	test/sanitizer_common/TestCases/NetBSD/netent.cc	/^void test2() {$/;"	f
test2	test/sanitizer_common/TestCases/NetBSD/protoent.cc	/^void test2() {$/;"	f
test2	test/sanitizer_common/TestCases/NetBSD/ttyent.cc	/^void test2() {$/;"	f
test2	test/sanitizer_common/TestCases/Posix/strlcat.cc	/^void test2() {$/;"	f
test2	test/sanitizer_common/TestCases/Posix/strlcpy.cc	/^void test2() {$/;"	f
test3	test/asan/TestCases/atoi_strict.c	/^void test3(char *array) {$/;"	f
test3	test/asan/TestCases/atol_strict.c	/^void test3(char *array) {$/;"	f
test3	test/asan/TestCases/atoll_strict.c	/^void test3(char *array) {$/;"	f
test3	test/asan/TestCases/strtok.c	/^void test3() {$/;"	f
test3	test/asan/TestCases/strtol_strict.c	/^void test3(char *array, char *endptr) {$/;"	f
test3	test/asan/TestCases/strtoll_strict.c	/^void test3(char *array, char *endptr) {$/;"	f
test3	test/sanitizer_common/TestCases/NetBSD/netent.cc	/^void test3() {$/;"	f
test3	test/sanitizer_common/TestCases/NetBSD/protoent.cc	/^void test3() {$/;"	f
test3	test/sanitizer_common/TestCases/NetBSD/ttyent.cc	/^void test3() {$/;"	f
test3	test/sanitizer_common/TestCases/Posix/strlcat.cc	/^void test3() {$/;"	f
test3	test/sanitizer_common/TestCases/Posix/strlcpy.cc	/^void test3() {$/;"	f
test4	test/asan/TestCases/strtok.c	/^void test4() {$/;"	f
test4	test/asan/TestCases/strtol_strict.c	/^void test4(char *array, char *endptr) {$/;"	f
test4	test/asan/TestCases/strtoll_strict.c	/^void test4(char *array, char *endptr) {$/;"	f
test4	test/sanitizer_common/TestCases/NetBSD/netent.cc	/^void test4() {$/;"	f
test4	test/sanitizer_common/TestCases/NetBSD/protoent.cc	/^void test4() {$/;"	f
test4	test/sanitizer_common/TestCases/NetBSD/ttyent.cc	/^void test4() {$/;"	f
test4	test/sanitizer_common/TestCases/Posix/strlcat.cc	/^void test4() {$/;"	f
test4	test/sanitizer_common/TestCases/Posix/strlcpy.cc	/^void test4() {$/;"	f
test5	test/asan/TestCases/strtok.c	/^void test5() {$/;"	f
test5	test/asan/TestCases/strtol_strict.c	/^void test5(char *array, char *endptr) {$/;"	f
test5	test/asan/TestCases/strtoll_strict.c	/^void test5(char *array, char *endptr) {$/;"	f
test5	test/sanitizer_common/TestCases/NetBSD/protoent.cc	/^void test5() {$/;"	f
test6	test/asan/TestCases/strtok.c	/^void test6() {$/;"	f
test6	test/asan/TestCases/strtol_strict.c	/^void test6(char *array, char *endptr) {$/;"	f
test6	test/asan/TestCases/strtoll_strict.c	/^void test6(char *array, char *endptr) {$/;"	f
test7	test/asan/TestCases/strtol_strict.c	/^void test7(char *array, char *endptr) {$/;"	f
test7	test/asan/TestCases/strtoll_strict.c	/^void test7(char *array, char *endptr) {$/;"	f
testAccuracy	test/builtins/Unit/ppc/qadd_test.c	/^double testAccuracy() {$/;"	f
testAccuracy	test/builtins/Unit/ppc/qdiv_test.c	/^double testAccuracy() {$/;"	f
testAccuracy	test/builtins/Unit/ppc/qmul_test.c	/^double testAccuracy() {$/;"	f
testAccuracy	test/builtins/Unit/ppc/qsub_test.c	/^double testAccuracy() {$/;"	f
testBuffer	test/esan/Unit/circular_buffer.cpp	/^void testBuffer(__esan::CircularBuffer<int> *Buf) {$/;"	f
testCase	test/builtins/Unit/ppc/floatditf_test.h	/^struct testCase {$/;"	s
testCase	test/builtins/Unit/ppc/floatunditf_test.h	/^struct testCase {$/;"	s
testCases	test/builtins/Unit/ppc/fixtfdi_test.c	/^const struct testVector testCases[] = {$/;"	v	typeref:struct:testVector
testChildStackLimit	test/esan/TestCases/large-stack-linux.c	/^static void testChildStackLimit(rlim_t StackLimit, char *ToRun) {$/;"	f	file:
testEdgeCases	test/builtins/Unit/ppc/qadd_test.c	/^int testEdgeCases() {$/;"	f
testEdgeCases	test/builtins/Unit/ppc/qdiv_test.c	/^int testEdgeCases() {$/;"	f
testEdgeCases	test/builtins/Unit/ppc/qmul_test.c	/^int testEdgeCases() {$/;"	f
testEdgeCases	test/builtins/Unit/ppc/qsub_test.c	/^int testEdgeCases() {$/;"	f
testFunction	test/BlocksRuntime/recursive-block.c	/^voidVoid testFunction() {$/;"	f
testOnlyGetEpoch	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  uptr testOnlyGetEpoch() const { return current_epoch_; }$/;"	f	class:__sanitizer::DeadlockDetector
testOnlyHasEdge	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  bool testOnlyHasEdge(uptr l1, uptr l2) {$/;"	f	class:__sanitizer::DeadlockDetector
testOnlyHasEdgeRaw	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  bool testOnlyHasEdgeRaw(uptr idx1, uptr idx2) {$/;"	f	class:__sanitizer::DeadlockDetector
testPrintf	lib/sanitizer_common/tests/sanitizer_format_interceptor_test.cc	/^static void testPrintf(const char *format, unsigned n, ...) {$/;"	f	file:
testPrintf2	lib/sanitizer_common/tests/sanitizer_format_interceptor_test.cc	/^static void testPrintf2(const char *format, unsigned n,$/;"	f	file:
testPrintf3	lib/sanitizer_common/tests/sanitizer_format_interceptor_test.cc	/^static void testPrintf3(void *ctx, const char *format, ...) {$/;"	f	file:
testRoutine	test/BlocksRuntime/byrefcopyint.c	/^voidVoid testRoutine(const char *whoami) {$/;"	f
testRoutine	test/BlocksRuntime/copyconstructor.C	/^void testRoutine() {$/;"	f
testRoutine	test/BlocksRuntime/reference.C	/^void testRoutine() {$/;"	f
testScanf	lib/sanitizer_common/tests/sanitizer_format_interceptor_test.cc	/^static void testScanf(const char *format, unsigned n, ...) {$/;"	f	file:
testScanf2	lib/sanitizer_common/tests/sanitizer_format_interceptor_test.cc	/^static void testScanf2(const char *format, int scanf_result,$/;"	f	file:
testScanf3	lib/sanitizer_common/tests/sanitizer_format_interceptor_test.cc	/^static void testScanf3(void *ctx, int result, bool allowGnuMalloc,$/;"	f	file:
testScanfNoGnuMalloc	lib/sanitizer_common/tests/sanitizer_format_interceptor_test.cc	/^static void testScanfNoGnuMalloc(const char *format, unsigned n, ...) {$/;"	f	file:
testScanfPartial	lib/sanitizer_common/tests/sanitizer_format_interceptor_test.cc	/^static void testScanfPartial(const char *format, int scanf_result, unsigned n,$/;"	f	file:
testVector	test/builtins/Unit/ppc/fixtfdi_test.c	/^struct testVector { double xhi; double xlo; int64_t result; };$/;"	s	file:
testVector	test/builtins/Unit/ppc/qadd_test.c	/^struct testVector {$/;"	s	file:
testVector	test/builtins/Unit/ppc/qdiv_test.c	/^struct testVector {$/;"	s	file:
testVector	test/builtins/Unit/ppc/qmul_test.c	/^struct testVector {$/;"	s	file:
testVector	test/builtins/Unit/ppc/qsub_test.c	/^struct testVector {$/;"	s	file:
test__absvdi2	test/builtins/Unit/absvdi2_test.c	/^int test__absvdi2(di_int a)$/;"	f
test__absvsi2	test/builtins/Unit/absvsi2_test.c	/^int test__absvsi2(si_int a)$/;"	f
test__absvti2	test/builtins/Unit/absvti2_test.c	/^int test__absvti2(ti_int a)$/;"	f
test__adddf3vfp	test/builtins/Unit/adddf3vfp_test.c	/^int test__adddf3vfp(double a, double b)$/;"	f
test__addsf3vfp	test/builtins/Unit/addsf3vfp_test.c	/^int test__addsf3vfp(float a, float b)$/;"	f
test__addtf3	test/builtins/Unit/addtf3_test.c	/^int test__addtf3(long double a, long double b,$/;"	f
test__addvdi3	test/builtins/Unit/addvdi3_test.c	/^int test__addvdi3(di_int a, di_int b)$/;"	f
test__addvsi3	test/builtins/Unit/addvsi3_test.c	/^int test__addvsi3(si_int a, si_int b)$/;"	f
test__addvti3	test/builtins/Unit/addvti3_test.c	/^int test__addvti3(ti_int a, ti_int b)$/;"	f
test__aeabi_cdcmpeq	test/builtins/Unit/arm/aeabi_cdcmpeq_test.c	/^int test__aeabi_cdcmpeq(double a, double b, int expected)$/;"	f
test__aeabi_cdcmple	test/builtins/Unit/arm/aeabi_cdcmple_test.c	/^int test__aeabi_cdcmple(double a, double b, int expected)$/;"	f
test__aeabi_cfcmpeq	test/builtins/Unit/arm/aeabi_cfcmpeq_test.c	/^int test__aeabi_cfcmpeq(float a, float b, int expected)$/;"	f
test__aeabi_cfcmple	test/builtins/Unit/arm/aeabi_cfcmple_test.c	/^int test__aeabi_cfcmple(float a, float b, int expected)$/;"	f
test__aeabi_drsub	test/builtins/Unit/arm/aeabi_drsub_test.c	/^int test__aeabi_drsub(double a, double b, double expected)$/;"	f
test__aeabi_frsub	test/builtins/Unit/arm/aeabi_frsub_test.c	/^int test__aeabi_frsub(float a, float b, float expected)$/;"	f
test__aeabi_idivmod	test/builtins/Unit/arm/aeabi_idivmod_test.c	/^int test__aeabi_idivmod(si_int a, si_int b,$/;"	f
test__aeabi_uidivmod	test/builtins/Unit/arm/aeabi_uidivmod_test.c	/^int test__aeabi_uidivmod(su_int a, su_int b,$/;"	f
test__ashldi3	test/builtins/Unit/ashldi3_test.c	/^int test__ashldi3(di_int a, si_int b, di_int expected)$/;"	f
test__ashlti3	test/builtins/Unit/ashlti3_test.c	/^int test__ashlti3(ti_int a, si_int b, ti_int expected)$/;"	f
test__ashrdi3	test/builtins/Unit/ashrdi3_test.c	/^int test__ashrdi3(di_int a, si_int b, di_int expected)$/;"	f
test__ashrti3	test/builtins/Unit/ashrti3_test.c	/^int test__ashrti3(ti_int a, si_int b, ti_int expected)$/;"	f
test__bswapdi2	test/builtins/Unit/bswapdi2_test.c	/^int test__bswapdi2(uint64_t a, uint64_t expected) {$/;"	f
test__bswapsi2	test/builtins/Unit/bswapsi2_test.c	/^int test__bswapsi2(uint32_t a, uint32_t expected) {$/;"	f
test__clzdi2	test/builtins/Unit/clzdi2_test.c	/^int test__clzdi2(di_int a, si_int expected)$/;"	f
test__clzsi2	test/builtins/Unit/clzsi2_test.c	/^int test__clzsi2(si_int a, si_int expected)$/;"	f
test__clzti2	test/builtins/Unit/clzti2_test.c	/^int test__clzti2(ti_int a, si_int expected)$/;"	f
test__cmpdf2	test/builtins/Unit/comparedf2_test.c	/^int test__cmpdf2(const struct TestVector *vector) {$/;"	f
test__cmpdi2	test/builtins/Unit/cmpdi2_test.c	/^int test__cmpdi2(di_int a, di_int b, si_int expected)$/;"	f
test__cmpsf2	test/builtins/Unit/comparesf2_test.c	/^int test__cmpsf2(const struct TestVector *vector) {$/;"	f
test__cmpti2	test/builtins/Unit/cmpti2_test.c	/^int test__cmpti2(ti_int a, ti_int b, si_int expected)$/;"	f
test__ctzdi2	test/builtins/Unit/ctzdi2_test.c	/^int test__ctzdi2(di_int a, si_int expected)$/;"	f
test__ctzsi2	test/builtins/Unit/ctzsi2_test.c	/^int test__ctzsi2(si_int a, si_int expected)$/;"	f
test__ctzti2	test/builtins/Unit/ctzti2_test.c	/^int test__ctzti2(ti_int a, si_int expected)$/;"	f
test__divdc3	test/builtins/Unit/divdc3_test.c	/^int test__divdc3(double a, double b, double c, double d)$/;"	f
test__divdf3vfp	test/builtins/Unit/divdf3vfp_test.c	/^int test__divdf3vfp(double a, double b)$/;"	f
test__divdi3	test/builtins/Unit/divdi3_test.c	/^int test__divdi3(di_int a, di_int b, di_int expected)$/;"	f
test__divmodsi4	test/builtins/Unit/divmodsi4_test.c	/^int test__divmodsi4(si_int a, si_int b, $/;"	f
test__divsc3	test/builtins/Unit/divsc3_test.c	/^int test__divsc3(float a, float b, float c, float d)$/;"	f
test__divsf3vfp	test/builtins/Unit/divsf3vfp_test.c	/^int test__divsf3vfp(float a, float b)$/;"	f
test__divsi3	test/builtins/Unit/divsi3_test.c	/^int test__divsi3(si_int a, si_int b, si_int expected)$/;"	f
test__divtc3	test/builtins/Unit/divtc3_test.c	/^int test__divtc3(long double a, long double b, long double c, long double d)$/;"	f
test__divtf3	test/builtins/Unit/divtf3_test.c	/^int test__divtf3(long double a, long double b,$/;"	f
test__divti3	test/builtins/Unit/divti3_test.c	/^int test__divti3(ti_int a, ti_int b, ti_int expected)$/;"	f
test__divxc3	test/builtins/Unit/divxc3_test.c	/^int test__divxc3(long double a, long double b, long double c, long double d)$/;"	f
test__eqdf2vfp	test/builtins/Unit/eqdf2vfp_test.c	/^int test__eqdf2vfp(double a, double b)$/;"	f
test__eqsf2vfp	test/builtins/Unit/eqsf2vfp_test.c	/^int test__eqsf2vfp(float a, float b)$/;"	f
test__eqtf2	test/builtins/Unit/eqtf2_test.c	/^int test__eqtf2(long double a, long double b, enum EXPECTED_RESULT expected)$/;"	f
test__extenddftf2	test/builtins/Unit/extenddftf2_test.c	/^int test__extenddftf2(double a, uint64_t expectedHi, uint64_t expectedLo)$/;"	f
test__extendhfsf2	test/builtins/Unit/extendhfsf2_test.c	/^int test__extendhfsf2(uint16_t a, float expected)$/;"	f
test__extendsfdf2vfp	test/builtins/Unit/extebdsfdf2vfp_test.c	/^int test__extendsfdf2vfp(float a)$/;"	f
test__extendsftf2	test/builtins/Unit/extendsftf2_test.c	/^int test__extendsftf2(float a, uint64_t expectedHi, uint64_t expectedLo)$/;"	f
test__ffsdi2	test/builtins/Unit/ffsdi2_test.c	/^int test__ffsdi2(di_int a, si_int expected)$/;"	f
test__ffssi2	test/builtins/Unit/ffssi2_test.c	/^int test__ffssi2(si_int a, si_int expected)$/;"	f
test__ffsti2	test/builtins/Unit/ffsti2_test.c	/^int test__ffsti2(ti_int a, si_int expected)$/;"	f
test__fixdfdi	test/builtins/Unit/fixdfdi_test.c	/^int test__fixdfdi(double a, di_int expected)$/;"	f
test__fixdfsivfp	test/builtins/Unit/fixdfsivfp_test.c	/^int test__fixdfsivfp(double a)$/;"	f
test__fixdfti	test/builtins/Unit/fixdfti_test.c	/^int test__fixdfti(double a, ti_int expected)$/;"	f
test__fixsfdi	test/builtins/Unit/fixsfdi_test.c	/^int test__fixsfdi(float a, di_int expected)$/;"	f
test__fixsfsivfp	test/builtins/Unit/fixsfsivfp_test.c	/^int test__fixsfsivfp(float a)$/;"	f
test__fixsfti	test/builtins/Unit/fixsfti_test.c	/^int test__fixsfti(float a, ti_int expected)$/;"	f
test__fixtfdi	test/builtins/Unit/fixtfdi_test.c	/^int test__fixtfdi(long double a, di_int expected)$/;"	f
test__fixtfsi	test/builtins/Unit/fixtfsi_test.c	/^int test__fixtfsi(long double a, int expected)$/;"	f
test__fixtfti	test/builtins/Unit/fixtfti_test.c	/^int test__fixtfti(long double a, ti_int expected)$/;"	f
test__fixunsdfdi	test/builtins/Unit/fixunsdfdi_test.c	/^int test__fixunsdfdi(double a, du_int expected)$/;"	f
test__fixunsdfsi	test/builtins/Unit/fixunsdfsi_test.c	/^int test__fixunsdfsi(double a, su_int expected)$/;"	f
test__fixunsdfsivfp	test/builtins/Unit/fixunsdfsivfp_test.c	/^int test__fixunsdfsivfp(double a)$/;"	f
test__fixunsdfti	test/builtins/Unit/fixunsdfti_test.c	/^int test__fixunsdfti(double a, tu_int expected)$/;"	f
test__fixunssfdi	test/builtins/Unit/fixunssfdi_test.c	/^int test__fixunssfdi(float a, du_int expected)$/;"	f
test__fixunssfsi	test/builtins/Unit/fixunssfsi_test.c	/^int test__fixunssfsi(float a, su_int expected)$/;"	f
test__fixunssfsivfp	test/builtins/Unit/fixunssfsivfp_test.c	/^int test__fixunssfsivfp(float a)$/;"	f
test__fixunssfti	test/builtins/Unit/fixunssfti_test.c	/^int test__fixunssfti(float a, tu_int expected)$/;"	f
test__fixunstfdi	test/builtins/Unit/fixunstfdi_test.c	/^int test__fixunstfdi(long double a, du_int expected)$/;"	f
test__fixunstfsi	test/builtins/Unit/fixunstfsi_test.c	/^int test__fixunstfsi(long double a, unsigned int expected)$/;"	f
test__fixunstfti	test/builtins/Unit/fixunstfti_test.c	/^int test__fixunstfti(long double a, tu_int expected)$/;"	f
test__fixunsxfdi	test/builtins/Unit/fixunsxfdi_test.c	/^int test__fixunsxfdi(long double a, du_int expected)$/;"	f
test__fixunsxfsi	test/builtins/Unit/fixunsxfsi_test.c	/^int test__fixunsxfsi(long double a, su_int expected)$/;"	f
test__fixunsxfti	test/builtins/Unit/fixunsxfti_test.c	/^int test__fixunsxfti(long double a, tu_int expected)$/;"	f
test__fixxfdi	test/builtins/Unit/fixxfdi_test.c	/^int test__fixxfdi(long double a, di_int expected)$/;"	f
test__fixxfti	test/builtins/Unit/fixxfti_test.c	/^int test__fixxfti(long double a, ti_int expected)$/;"	f
test__floatdidf	test/builtins/Unit/floatdidf_test.c	/^int test__floatdidf(di_int a, double expected)$/;"	f
test__floatdisf	test/builtins/Unit/floatdisf_test.c	/^int test__floatdisf(di_int a, float expected)$/;"	f
test__floatditf	test/builtins/Unit/floatditf_test.c	/^int test__floatditf(long long a, uint64_t expectedHi, uint64_t expectedLo)$/;"	f
test__floatdixf	test/builtins/Unit/floatdixf_test.c	/^int test__floatdixf(di_int a, long double expected)$/;"	f
test__floatsidfvfp	test/builtins/Unit/floatsidfvfp_test.c	/^int test__floatsidfvfp(int a)$/;"	f
test__floatsisfvfp	test/builtins/Unit/floatsisfvfp_test.c	/^int test__floatsisfvfp(int a)$/;"	f
test__floatsitf	test/builtins/Unit/floatsitf_test.c	/^int test__floatsitf(int a, uint64_t expectedHi, uint64_t expectedLo)$/;"	f
test__floattidf	test/builtins/Unit/floattidf_test.c	/^int test__floattidf(ti_int a, double expected)$/;"	f
test__floattisf	test/builtins/Unit/floattisf_test.c	/^int test__floattisf(ti_int a, float expected)$/;"	f
test__floattitf	test/builtins/Unit/floattitf_test.c	/^int test__floattitf(ti_int a, fp_t expected) {$/;"	f
test__floattixf	test/builtins/Unit/floattixf_test.c	/^int test__floattixf(ti_int a, long double expected)$/;"	f
test__floatundidf	test/builtins/Unit/floatundidf_test.c	/^int test__floatundidf(di_int a, double expected)$/;"	f
test__floatundisf	test/builtins/Unit/floatundisf_test.c	/^int test__floatundisf(du_int a, float expected)$/;"	f
test__floatunditf	test/builtins/Unit/floatunditf_test.c	/^int test__floatunditf(unsigned long long a, uint64_t expectedHi, uint64_t expectedLo)$/;"	f
test__floatundixf	test/builtins/Unit/floatundixf_test.c	/^int test__floatundixf(du_int a, long double expected)$/;"	f
test__floatunsitf	test/builtins/Unit/floatunsitf_test.c	/^int test__floatunsitf(unsigned int a, uint64_t expectedHi, uint64_t expectedLo)$/;"	f
test__floatunssidfvfp	test/builtins/Unit/floatunssidfvfp_test.c	/^int test__floatunssidfvfp(unsigned int a)$/;"	f
test__floatunssisfvfp	test/builtins/Unit/floatunssisfvfp_test.c	/^int test__floatunssisfvfp(unsigned int a)$/;"	f
test__floatuntidf	test/builtins/Unit/floatuntidf_test.c	/^int test__floatuntidf(tu_int a, double expected)$/;"	f
test__floatuntisf	test/builtins/Unit/floatuntisf_test.c	/^int test__floatuntisf(tu_int a, float expected)$/;"	f
test__floatuntitf	test/builtins/Unit/floatuntitf_test.c	/^int test__floatuntitf(tu_int a, fp_t expected) {$/;"	f
test__floatuntixf	test/builtins/Unit/floatuntixf_test.c	/^int test__floatuntixf(tu_int a, long double expected)$/;"	f
test__gedf2vfp	test/builtins/Unit/gedf2vfp_test.c	/^int test__gedf2vfp(double a, double b)$/;"	f
test__gesf2vfp	test/builtins/Unit/gesf2vfp_test.c	/^int test__gesf2vfp(float a, float b)$/;"	f
test__getf2	test/builtins/Unit/getf2_test.c	/^int test__getf2(long double a, long double b, enum EXPECTED_RESULT expected)$/;"	f
test__gtdf2vfp	test/builtins/Unit/gtdf2vfp_test.c	/^int test__gtdf2vfp(double a, double b)$/;"	f
test__gtsf2vfp	test/builtins/Unit/gtsf2vfp_test.c	/^int test__gtsf2vfp(float a, float b)$/;"	f
test__gttf2	test/builtins/Unit/gttf2_test.c	/^int test__gttf2(long double a, long double b, enum EXPECTED_RESULT expected)$/;"	f
test__ledf2vfp	test/builtins/Unit/ledf2vfp_test.c	/^int test__ledf2vfp(double a, double b)$/;"	f
test__lesf2vfp	test/builtins/Unit/lesf2vfp_test.c	/^int test__lesf2vfp(float a, float b)$/;"	f
test__letf2	test/builtins/Unit/letf2_test.c	/^int test__letf2(long double a, long double b, enum EXPECTED_RESULT expected)$/;"	f
test__lshrdi3	test/builtins/Unit/lshrdi3_test.c	/^int test__lshrdi3(di_int a, si_int b, di_int expected)$/;"	f
test__lshrti3	test/builtins/Unit/lshrti3_test.c	/^int test__lshrti3(ti_int a, si_int b, ti_int expected)$/;"	f
test__ltdf2vfp	test/builtins/Unit/ltdf2vfp_test.c	/^int test__ltdf2vfp(double a, double b)$/;"	f
test__ltsf2vfp	test/builtins/Unit/ltsf2vfp_test.c	/^int test__ltsf2vfp(float a, float b)$/;"	f
test__lttf2	test/builtins/Unit/lttf2_test.c	/^int test__lttf2(long double a, long double b, enum EXPECTED_RESULT expected)$/;"	f
test__moddi3	test/builtins/Unit/moddi3_test.c	/^int test__moddi3(di_int a, di_int b, di_int expected)$/;"	f
test__modsi3	test/builtins/Unit/modsi3_test.c	/^int test__modsi3(si_int a, si_int b, si_int expected) {$/;"	f
test__modti3	test/builtins/Unit/modti3_test.c	/^int test__modti3(ti_int a, ti_int b, ti_int expected)$/;"	f
test__muldc3	test/builtins/Unit/muldc3_test.c	/^int test__muldc3(double a, double b, double c, double d)$/;"	f
test__muldf3vfp	test/builtins/Unit/muldf3vfp_test.c	/^int test__muldf3vfp(double a, double b)$/;"	f
test__muldi3	test/builtins/Unit/muldi3_test.c	/^int test__muldi3(di_int a, di_int b, di_int expected)$/;"	f
test__mulodi4	test/builtins/Unit/mulodi4_test.c	/^int test__mulodi4(di_int a, di_int b, di_int expected, int expected_overflow)$/;"	f
test__mulosi4	test/builtins/Unit/mulosi4_test.c	/^int test__mulosi4(si_int a, si_int b, si_int expected, int expected_overflow)$/;"	f
test__muloti4	test/builtins/Unit/muloti4_test.c	/^int test__muloti4(ti_int a, ti_int b, ti_int expected, int expected_overflow)$/;"	f
test__mulsc3	test/builtins/Unit/mulsc3_test.c	/^int test__mulsc3(float a, float b, float c, float d)$/;"	f
test__mulsf3vfp	test/builtins/Unit/mulsf3vfp_test.c	/^int test__mulsf3vfp(float a, float b)$/;"	f
test__mulsi3	test/builtins/Unit/riscv/mulsi3_test.c	/^int test__mulsi3(si_int a, si_int b, si_int expected)$/;"	f
test__multc3	test/builtins/Unit/multc3_test.c	/^int test__multc3(long double a, long double b, long double c, long double d)$/;"	f
test__multf3	test/builtins/Unit/multf3_test.c	/^int test__multf3(long double a, long double b,$/;"	f
test__multi3	test/builtins/Unit/multi3_test.c	/^int test__multi3(ti_int a, ti_int b, ti_int expected)$/;"	f
test__mulvdi3	test/builtins/Unit/mulvdi3_test.c	/^int test__mulvdi3(di_int a, di_int b, di_int expected)$/;"	f
test__mulvsi3	test/builtins/Unit/mulvsi3_test.c	/^int test__mulvsi3(si_int a, si_int b, si_int expected)$/;"	f
test__mulvti3	test/builtins/Unit/mulvti3_test.c	/^int test__mulvti3(ti_int a, ti_int b, ti_int expected)$/;"	f
test__mulxc3	test/builtins/Unit/mulxc3_test.c	/^int test__mulxc3(long double a, long double b, long double c, long double d)$/;"	f
test__nedf2vfp	test/builtins/Unit/nedf2vfp_test.c	/^int test__nedf2vfp(double a, double b)$/;"	f
test__negdf2vfp	test/builtins/Unit/negdf2vfp_test.c	/^int test__negdf2vfp(double a)$/;"	f
test__negdi2	test/builtins/Unit/negdi2_test.c	/^int test__negdi2(di_int a, di_int expected)$/;"	f
test__negsf2vfp	test/builtins/Unit/negsf2vfp_test.c	/^int test__negsf2vfp(float a)$/;"	f
test__negti2	test/builtins/Unit/negti2_test.c	/^int test__negti2(ti_int a, ti_int expected)$/;"	f
test__negvdi2	test/builtins/Unit/negvdi2_test.c	/^int test__negvdi2(di_int a)$/;"	f
test__negvsi2	test/builtins/Unit/negvsi2_test.c	/^int test__negvsi2(si_int a)$/;"	f
test__negvti2	test/builtins/Unit/negvti2_test.c	/^int test__negvti2(ti_int a)$/;"	f
test__nesf2vfp	test/builtins/Unit/nesf2vfp_test.c	/^int test__nesf2vfp(float a, float b)$/;"	f
test__netf2	test/builtins/Unit/netf2_test.c	/^int test__netf2(long double a, long double b, enum EXPECTED_RESULT expected)$/;"	f
test__paritydi2	test/builtins/Unit/paritydi2_test.c	/^int test__paritydi2(di_int a)$/;"	f
test__paritysi2	test/builtins/Unit/paritysi2_test.c	/^int test__paritysi2(si_int a)$/;"	f
test__parityti2	test/builtins/Unit/parityti2_test.c	/^int test__parityti2(ti_int a)$/;"	f
test__popcountdi2	test/builtins/Unit/popcountdi2_test.c	/^int test__popcountdi2(di_int a)$/;"	f
test__popcountsi2	test/builtins/Unit/popcountsi2_test.c	/^int test__popcountsi2(si_int a)$/;"	f
test__popcountti2	test/builtins/Unit/popcountti2_test.c	/^int test__popcountti2(ti_int a)$/;"	f
test__powidf2	test/builtins/Unit/powidf2_test.c	/^int test__powidf2(double a, si_int b, double expected)$/;"	f
test__powisf2	test/builtins/Unit/powisf2_test.c	/^int test__powisf2(float a, si_int b, float expected)$/;"	f
test__powitf2	test/builtins/Unit/powitf2_test.c	/^int test__powitf2(long double a, si_int b, long double expected)$/;"	f
test__powixf2	test/builtins/Unit/powixf2_test.c	/^int test__powixf2(long double a, si_int b, long double expected)$/;"	f
test__subdf3vfp	test/builtins/Unit/subdf3vfp_test.c	/^int test__subdf3vfp(double a, double b)$/;"	f
test__subsf3vfp	test/builtins/Unit/subsf3vfp_test.c	/^int test__subsf3vfp(float a, float b)$/;"	f
test__subtf3	test/builtins/Unit/subtf3_test.c	/^int test__subtf3(long double a, long double b,$/;"	f
test__subvdi3	test/builtins/Unit/subvdi3_test.c	/^int test__subvdi3(di_int a, di_int b)$/;"	f
test__subvsi3	test/builtins/Unit/subvsi3_test.c	/^int test__subvsi3(si_int a, si_int b)$/;"	f
test__subvti3	test/builtins/Unit/subvti3_test.c	/^int test__subvti3(ti_int a, ti_int b)$/;"	f
test__truncdfhf2	test/builtins/Unit/truncdfhf2_test.c	/^int test__truncdfhf2(double a, uint16_t expected)$/;"	f
test__truncdfsf2	test/builtins/Unit/truncdfsf2_test.c	/^int test__truncdfsf2(double a)$/;"	f
test__truncdfsf2vfp	test/builtins/Unit/truncdfsf2vfp_test.c	/^int test__truncdfsf2vfp(double a)$/;"	f
test__truncsfhf2	test/builtins/Unit/truncsfhf2_test.c	/^int test__truncsfhf2(float a, uint16_t expected)$/;"	f
test__trunctfdf2	test/builtins/Unit/trunctfdf2_test.c	/^int test__trunctfdf2(long double a, uint64_t expected)$/;"	f
test__trunctfsf2	test/builtins/Unit/trunctfsf2_test.c	/^int test__trunctfsf2(long double a, uint32_t expected)$/;"	f
test__ucmpdi2	test/builtins/Unit/ucmpdi2_test.c	/^int test__ucmpdi2(du_int a, du_int b, si_int expected)$/;"	f
test__ucmpti2	test/builtins/Unit/ucmpti2_test.c	/^int test__ucmpti2(tu_int a, tu_int b, si_int expected)$/;"	f
test__udivdi3	test/builtins/Unit/udivdi3_test.c	/^int test__udivdi3(du_int a, du_int b, du_int expected_q)$/;"	f
test__udivmoddi4	test/builtins/Unit/udivmoddi4_test.c	/^int test__udivmoddi4(du_int a, du_int b, du_int expected_q, du_int expected_r)$/;"	f
test__udivmodsi4	test/builtins/Unit/udivmodsi4_test.c	/^int test__udivmodsi4(su_int a, su_int b, $/;"	f
test__udivmodti4	test/builtins/Unit/udivmodti4_test.c	/^int test__udivmodti4(tu_int a, tu_int b, tu_int expected_q, tu_int expected_r)$/;"	f
test__udivsi3	test/builtins/Unit/udivsi3_test.c	/^int test__udivsi3(su_int a, su_int b, su_int expected_q)$/;"	f
test__udivti3	test/builtins/Unit/udivti3_test.c	/^int test__udivti3(tu_int a, tu_int b, tu_int expected_q)$/;"	f
test__umoddi3	test/builtins/Unit/umoddi3_test.c	/^int test__umoddi3(du_int a, du_int b, du_int expected_r)$/;"	f
test__umodsi3	test/builtins/Unit/umodsi3_test.c	/^int test__umodsi3(su_int a, su_int b, su_int expected_r)$/;"	f
test__umodti3	test/builtins/Unit/umodti3_test.c	/^int test__umodti3(tu_int a, tu_int b, tu_int expected_r)$/;"	f
test__unorddf2vfp	test/builtins/Unit/unorddf2vfp_test.c	/^int test__unorddf2vfp(double a, double b)$/;"	f
test__unordsf2vfp	test/builtins/Unit/unordsf2vfp_test.c	/^int test__unordsf2vfp(float a, float b)$/;"	f
test__unordtf2	test/builtins/Unit/unordtf2_test.c	/^int test__unordtf2(long double a, long double b, enum EXPECTED_RESULT expected)$/;"	f
test_a	test/asan/TestCases/use-after-scope-conversion.cc	/^void test_a() {$/;"	f
test_aeabi_uldivmod	test/builtins/Unit/arm/aeabi_uldivmod_test.c	/^int test_aeabi_uldivmod(du_int a, du_int b, du_int expected_q, du_int expected_r)$/;"	f
test_b	test/asan/TestCases/use-after-scope-conversion.cc	/^void test_b() {$/;"	f
test_buf	lib/sanitizer_common/tests/sanitizer_format_interceptor_test.cc	/^static const char test_buf[] = "Test string.";$/;"	v	file:
test_buf_size	lib/sanitizer_common/tests/sanitizer_format_interceptor_test.cc	/^static const size_t test_buf_size = sizeof(test_buf);$/;"	v	file:
test_calloc	test/dfsan/custom.cc	/^void test_calloc() {$/;"	f
test_can_write_with_callback	test/dfsan/write_callback.c	/^static void test_can_write_with_callback() {$/;"	f	file:
test_can_write_without_callback	test/dfsan/write_callback.c	/^static void test_can_write_without_callback() {$/;"	f	file:
test_clock_gettime	test/dfsan/custom.cc	/^void test_clock_gettime() {$/;"	f
test_ctime_r	test/dfsan/custom.cc	/^void test_ctime_r() {$/;"	f
test_default_options	lib/tsan/tests/unit/tsan_flags_test.cc	/^static const char *test_default_options;$/;"	m	namespace:__tsan	file:
test_dfsan_set_write_callback	test/dfsan/custom.cc	/^void test_dfsan_set_write_callback() {$/;"	f
test_dl_iterate_phdr	test/dfsan/custom.cc	/^void test_dl_iterate_phdr() {$/;"	f
test_dlopen	test/dfsan/custom.cc	/^void test_dlopen() {$/;"	f
test_failing_write_runs_callback	test/dfsan/write_callback.c	/^static void test_failing_write_runs_callback() {$/;"	f	file:
test_fgets	test/asan/TestCases/Posix/fgets_fputs.cc	/^int test_fgets(const char *testfile) {$/;"	f
test_fgets	test/dfsan/custom.cc	/^void test_fgets() {$/;"	f
test_fgets	test/msan/fgets_fputs.cc	/^int test_fgets() {$/;"	f
test_fputs	test/asan/TestCases/Posix/fgets_fputs.cc	/^int test_fputs() {$/;"	f
test_fputs	test/msan/fgets_fputs.cc	/^int test_fputs() {$/;"	f
test_fread	test/asan/TestCases/Posix/fread_fwrite.cc	/^int test_fread() {$/;"	f
test_fread	test/msan/fread_fwrite.cc	/^int test_fread() {$/;"	f
test_fstat	test/dfsan/custom.cc	/^void test_fstat() {$/;"	f
test_function	test/asan/TestCases/Windows/coverage-dll-stdio.cc	/^int test_function() {$/;"	f
test_function	test/asan/TestCases/Windows/dll_aligned_mallocs.cc	/^int test_function() {$/;"	f
test_function	test/asan/TestCases/Windows/dll_allocators_sanity.cc	/^int test_function() {$/;"	f
test_function	test/asan/TestCases/Windows/dll_cerr.cc	/^int test_function() {$/;"	f
test_function	test/asan/TestCases/Windows/dll_control_c.cc	/^extern "C" int __declspec(dllexport) test_function() {$/;"	f
test_function	test/asan/TestCases/Windows/dll_intercept_memchr.cc	/^int test_function() {$/;"	f
test_function	test/asan/TestCases/Windows/dll_intercept_memcpy.cc	/^int test_function() {$/;"	f
test_function	test/asan/TestCases/Windows/dll_intercept_memcpy_indirect.cc	/^int test_function() {$/;"	f
test_function	test/asan/TestCases/Windows/dll_intercept_memset.cc	/^int test_function() {$/;"	f
test_function	test/asan/TestCases/Windows/dll_intercept_strlen.cc	/^int test_function() {$/;"	f
test_function	test/asan/TestCases/Windows/dll_malloc_left_oob.cc	/^int test_function() {$/;"	f
test_function	test/asan/TestCases/Windows/dll_malloc_uaf.cc	/^int test_function() {$/;"	f
test_function	test/asan/TestCases/Windows/dll_noreturn.cc	/^int test_function() {$/;"	f
test_function	test/asan/TestCases/Windows/dll_null_deref.cc	/^int test_function() {$/;"	f
test_function	test/asan/TestCases/Windows/dll_operator_array_new_left_oob.cc	/^int test_function() {$/;"	f
test_function	test/asan/TestCases/Windows/dll_operator_array_new_with_dtor_left_oob.cc	/^int test_function() {$/;"	f
test_function	test/asan/TestCases/Windows/dll_poison_unpoison.cc	/^int test_function() {$/;"	f
test_function	test/asan/TestCases/Windows/dll_seh.cc	/^int test_function() {$/;"	f
test_function	test/asan/TestCases/Windows/dll_stack_use_after_return.cc	/^int test_function() {$/;"	f
test_function	test/asan/TestCases/Windows/dll_thread_stack_array_left_oob.cc	/^int test_function() {$/;"	f
test_function	test/asan/TestCases/Windows/shadow_conflict_32.cc	/^extern "C" __declspec(dllexport) int test_function() { return 0; }$/;"	f
test_fwrite	test/asan/TestCases/Posix/fread_fwrite.cc	/^int test_fwrite() {$/;"	f
test_fwrite	test/msan/fread_fwrite.cc	/^int test_fwrite() {$/;"	f
test_get_current_dir_name	test/dfsan/custom.cc	/^void test_get_current_dir_name() {$/;"	f
test_getcwd	test/dfsan/custom.cc	/^void test_getcwd() {$/;"	f
test_gethostname	test/dfsan/custom.cc	/^void test_gethostname() {$/;"	f
test_getpwuid_r	test/dfsan/custom.cc	/^void test_getpwuid_r() {$/;"	f
test_getrlimit	test/dfsan/custom.cc	/^void test_getrlimit() {$/;"	f
test_getrusage	test/dfsan/custom.cc	/^void test_getrusage() {$/;"	f
test_gettimeofday	test/dfsan/custom.cc	/^void test_gettimeofday() {$/;"	f
test_handler	test/xray/TestCases/Posix/patching-unpatching.cc	/^void test_handler(int32_t fid, XRayEntryType type) {$/;"	f
test_inet_pton	test/dfsan/custom.cc	/^void test_inet_pton() {$/;"	f
test_internal_strlcpy	lib/sanitizer_common/tests/sanitizer_libc_test.cc	/^void test_internal_strlcpy(char *dbuf, const char *sbuf) {$/;"	f
test_localtime_r	test/dfsan/custom.cc	/^void test_localtime_r() {$/;"	f
test_malloc_shadow	test/asan/TestCases/Posix/start-deactivated.cc	/^void test_malloc_shadow(char *p, size_t sz, bool expect_redzones) {$/;"	f
test_memchr	test/dfsan/custom.cc	/^void test_memchr() {$/;"	f
test_memcmp	test/dfsan/custom.cc	/^void test_memcmp() {$/;"	f
test_memcpy	test/dfsan/custom.cc	/^void test_memcpy() {$/;"	f
test_memset	test/dfsan/custom.cc	/^void test_memset() {$/;"	f
test_missing_run	lib/sanitizer_common/scripts/litlint_test.py	/^  def test_missing_run(self):$/;"	m	class:TestLintLine
test_nanosleep	test/dfsan/custom.cc	/^void test_nanosleep() {$/;"	f
test_number	test/tsan/deadlock_detector_stress_test.cc	/^static int test_number = -1;$/;"	v	file:
test_poll	test/dfsan/custom.cc	/^void test_poll() {$/;"	f
test_pread	test/dfsan/custom.cc	/^void test_pread() {$/;"	f
test_pthread_create	test/dfsan/custom.cc	/^void test_pthread_create() {$/;"	f
test_puts	test/asan/TestCases/Posix/fgets_fputs.cc	/^int test_puts() {$/;"	f
test_puts	test/msan/fgets_fputs.cc	/^void test_puts() {$/;"	f
test_read	test/dfsan/custom.cc	/^void test_read() {$/;"	f
test_sched_getaffinity	test/dfsan/custom.cc	/^void test_sched_getaffinity() {$/;"	f
test_select	test/dfsan/custom.cc	/^void test_select() {$/;"	f
test_shadow	test/asan/TestCases/Darwin/linked-only.cc	/^void test_shadow(char *p, size_t size) {$/;"	f
test_sigaction	test/dfsan/custom.cc	/^void test_sigaction() {$/;"	f
test_sigemptyset	test/dfsan/custom.cc	/^void test_sigemptyset() {$/;"	f
test_sigwait	test/msan/sigwait.cc	/^void test_sigwait() {$/;"	f
test_sigwaitinfo	test/msan/sigwaitinfo.cc	/^void test_sigwaitinfo() {$/;"	f
test_snprintf	test/dfsan/custom.cc	/^void test_snprintf() {$/;"	f
test_socketpair	test/dfsan/custom.cc	/^void test_socketpair() {$/;"	f
test_sprintf	test/dfsan/custom.cc	/^void test_sprintf() {$/;"	f
test_sprintf_chunk	test/dfsan/custom.cc	/^void test_sprintf_chunk(const char* expected, const char* format, T arg) {$/;"	f
test_stat	test/dfsan/custom.cc	/^void test_stat() {$/;"	f
test_strcasecmp	test/dfsan/custom.cc	/^void test_strcasecmp() {$/;"	f
test_strchr	test/dfsan/custom.cc	/^void test_strchr() {$/;"	f
test_strcmp	test/dfsan/custom.cc	/^void test_strcmp() {$/;"	f
test_strcpy	test/dfsan/custom.cc	/^void test_strcpy() {$/;"	f
test_strdup	test/dfsan/custom.cc	/^void test_strdup() {$/;"	f
test_strlen	test/dfsan/custom.cc	/^void test_strlen() {$/;"	f
test_strncasecmp	test/dfsan/custom.cc	/^void test_strncasecmp() {$/;"	f
test_strncmp	test/dfsan/custom.cc	/^void test_strncmp() {$/;"	f
test_strncpy	test/dfsan/custom.cc	/^void test_strncpy() {$/;"	f
test_strrchr	test/dfsan/custom.cc	/^void test_strrchr() {$/;"	f
test_strstr	test/dfsan/custom.cc	/^void test_strstr() {$/;"	f
test_strtod	test/dfsan/custom.cc	/^void test_strtod() {$/;"	f
test_strtol	test/dfsan/custom.cc	/^void test_strtol() {$/;"	f
test_strtoll	test/dfsan/custom.cc	/^void test_strtoll() {$/;"	f
test_strtoul	test/dfsan/custom.cc	/^void test_strtoul() {$/;"	f
test_strtoull	test/dfsan/custom.cc	/^void test_strtoull() {$/;"	f
test_time	test/dfsan/custom.cc	/^void test_time() {$/;"	f
test_write	test/dfsan/custom.cc	/^void test_write() {$/;"	f
testfunc	test/asan/TestCases/malloc-no-intercept.c	22;"	d	file:
testfunc	test/asan/TestCases/malloc-no-intercept.c	23;"	d	file:
tests	test/builtins/Unit/arm/aeabi_uldivmod_test.c	/^du_int tests[][4] =$/;"	v
tests	test/builtins/Unit/ppc/floatditf_test.h	/^struct testCase tests[] = {$/;"	v	typeref:struct:testCase
tests	test/builtins/Unit/ppc/floatunditf_test.h	/^struct testCase tests[] = {$/;"	v	typeref:struct:testCase
tests	test/builtins/Unit/udivmoddi4_test.c	/^du_int tests[][4] =$/;"	v
tests	test/builtins/Unit/udivmodti4_test.c	/^tu_int tests[][4] =$/;"	v
tests	test/builtins/Unit/udivsi3_test.c	/^su_int tests[][4] =$/;"	v
tests	test/builtins/Unit/umodsi3_test.c	/^su_int tests[][4] =$/;"	v
theDepot	lib/sanitizer_common/sanitizer_stackdepot.cc	/^static StackDepot theDepot;$/;"	m	namespace:__sanitizer	file:
thePersistentAllocator	lib/sanitizer_common/sanitizer_persistent_allocator.cc	/^PersistentAllocator thePersistentAllocator;$/;"	m	namespace:__sanitizer	file:
thr	lib/tsan/dd/dd_interceptors.cc	/^static __thread Thread *thr;$/;"	v	file:
thr	lib/tsan/dd/dd_rtl.h	/^  Thread *thr;$/;"	m	struct:__dsan::Callback
thr	lib/tsan/rtl/tsan_interceptors.cc	/^  ThreadState *thr;$/;"	m	struct:BlockingCall	file:
thr	lib/tsan/rtl/tsan_interceptors.cc	/^  ThreadState *thr;$/;"	m	struct:CondMutexUnlockCtx	file:
thr	lib/tsan/rtl/tsan_interceptors.cc	/^  ThreadState *thr;$/;"	m	struct:ScopedSyscall	file:
thr	lib/tsan/rtl/tsan_interceptors.cc	/^  ThreadState *thr;$/;"	m	struct:TsanInterceptorContext	file:
thr	lib/tsan/rtl/tsan_interceptors.cc	/^  ThreadState *thr;$/;"	m	struct:dl_iterate_phdr_data	file:
thr	lib/tsan/rtl/tsan_rtl.h	/^  ThreadState *thr; \/\/ currently wired thread, or nullptr$/;"	m	struct:__tsan::Processor
thr	lib/tsan/rtl/tsan_rtl.h	/^  ThreadState *thr;$/;"	m	class:__tsan::ThreadContext
thr	lib/tsan/rtl/tsan_rtl_mutex.cc	/^  ThreadState *thr;$/;"	m	struct:__tsan::Callback	file:
thr	lib/tsan/rtl/tsan_rtl_thread.cc	/^  ThreadState *thr;$/;"	m	struct:__tsan::OnCreatedArgs	file:
thr	lib/tsan/rtl/tsan_rtl_thread.cc	/^  ThreadState *thr;$/;"	m	struct:__tsan::OnStartedArgs	file:
thr	test/asan/TestCases/Linux/signal_during_stop_the_world.cc	/^static void *thr(void *arg) {$/;"	f	file:
thr	test/tsan/Darwin/signals-blocked.cc	/^static void* thr(void *p) {$/;"	f	file:
thr	test/tsan/Linux/mutex_robust.cc	/^void *thr(void *p) {$/;"	f
thr	test/tsan/Linux/mutex_robust2.cc	/^void *thr(void *p) {$/;"	f
thr	test/tsan/barrier.cc	/^void *thr(void *p) {$/;"	f
thr	test/tsan/cond_destruction.cc	/^void *thr(void *p) {$/;"	f
thr	test/tsan/cond_race.cc	/^void *thr(void *p) {$/;"	f
thr	test/tsan/custom_mutex0.cc	/^void *thr(void *arg) {$/;"	f
thr	test/tsan/custom_mutex1.cc	/^void *thr(void *arg) {$/;"	f
thr	test/tsan/custom_mutex2.cc	/^void *thr(void *arg) {$/;"	f
thr	test/tsan/ignore_lib5.cc	/^void *thr(void *arg) {$/;"	f
thr	test/tsan/lots_of_threads.c	/^void *thr(void *arg) {$/;"	f
thr	test/tsan/malloc_stack.cc	/^void *thr(void *a) {$/;"	f
thr	test/tsan/pthread_key.cc	/^void* thr(void* arg) {$/;"	f
thr	test/tsan/race_stress.cc	/^void *thr(void *arg) {$/;"	f
thr	test/tsan/signal_sync.cc	/^static void* thr(void *p) {$/;"	f	file:
thr	test/tsan/signal_sync2.cc	/^static void* thr(void *p) {$/;"	f	file:
thr	test/tsan/signal_thread.cc	/^static void* thr(void *p) {$/;"	f	file:
thr	test/tsan/sunrpc.cc	/^void *thr(void *p) {$/;"	f
thr1	test/tsan/cond.c	/^void *thr1(void *p) {$/;"	f
thr1	test/tsan/cond_cancel.c	/^void *thr1(void *p) {$/;"	f
thr1	test/tsan/custom_mutex3.cc	/^void *thr1(void *arg) {$/;"	f
thr2	test/tsan/cond.c	/^void *thr2(void *p) {$/;"	f
thr2	test/tsan/custom_mutex3.cc	/^void *thr2(void *arg) {$/;"	f
thr_	lib/tsan/rtl/tsan_interceptors.h	/^  ThreadState *const thr_;$/;"	m	class:__tsan::ScopedInterceptor
thr_	lib/tsan/rtl/tsan_interface_ann.cc	/^  ThreadState *const thr_;$/;"	m	class:__tsan::ScopedAnnotation	file:
thr_	lib/tsan/rtl/tsan_interface_atomic.cc	/^  ThreadState *thr_;$/;"	m	class:ScopedAtomic	file:
thr_	lib/tsan/rtl/tsan_interface_java.cc	/^  ThreadState *thr_;$/;"	m	class:__tsan::ScopedJavaFunc	file:
thr_ctx	lib/sanitizer_common/sanitizer_deadlock_detector_interface.h	/^    u64 thr_ctx;   \/\/ user thread context$/;"	m	struct:__sanitizer::DDReport::__anon81
thread	lib/asan/asan_thread.h	/^    AsanThread *thread;$/;"	m	struct:__asan::AsanThreadContext::CreateThreadContextArgs
thread	lib/asan/asan_thread.h	/^  AsanThread *thread;$/;"	m	class:__asan::AsanThreadContext
thread	lib/asan/asan_thread.h	/^  AsanThread *thread;$/;"	m	class:__asan::ScopedUnwinding
thread	lib/sanitizer_common/sanitizer_stoptheworld_mac.cc	/^  thread_t thread;$/;"	m	struct:__sanitizer::__anon101	file:
thread	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^  pthread_t thread;$/;"	m	struct:ScopedThread::Impl	file:
thread	test/lsan/TestCases/Linux/guard-page.c	/^static void* thread(void* arg) {$/;"	f	file:
thread	test/tsan/bench_acquire_only.cc	/^void thread(int tid) {$/;"	f
thread	test/tsan/bench_acquire_release.cc	/^void thread(int tid) {$/;"	f
thread	test/tsan/bench_local_mutex.cc	/^void thread(int tid) {$/;"	f
thread	test/tsan/bench_mutex.cc	/^void thread(int tid) {$/;"	f
thread	test/tsan/bench_release_only.cc	/^void thread(int tid) {$/;"	f
thread	test/tsan/bench_rwmutex.cc	/^void thread(int tid) {$/;"	f
thread	test/tsan/bench_single_writer.cc	/^void thread(int tid) {$/;"	f
thread	test/tsan/bench_ten_mutexes.cc	/^void thread(int tid) {$/;"	f
thread	test/tsan/dl_iterate_phdr.cc	/^void *thread(void *unused) {$/;"	f
thread	test/tsan/getline_nohang.cc	/^void *thread(void *unused) {$/;"	f
thread	test/tsan/mutex_destroy_locked2.cc	/^void *thread(void *arg) {$/;"	f
thread	test/tsan/setuid.c	/^static void *thread(void *arg) {$/;"	f	file:
thread	test/tsan/signal_block.cc	/^void *thread(void *arg) {$/;"	f
thread	test/tsan/signal_pause.cc	/^void *thread(void *arg) {$/;"	f
threadFn	test/asan/TestCases/Linux/pthread_create_from_constructor.cc	/^void *threadFn(void *) {$/;"	f
threadProcessing	lib/xray/tests/unit/profile_collector_test.cc	/^void threadProcessing() {$/;"	f	namespace:__xray::__anon22
thread_alot_func	lib/tsan/tests/rtl/tsan_thread.cc	/^static void *thread_alot_func(void *arg) {$/;"	f	file:
thread_arg	lib/sanitizer_common/tests/sanitizer_linux_test.cc	/^  TidReporterArgument thread_arg;$/;"	m	class:__sanitizer::ThreadListerTest	file:
thread_cache	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  AllocatorCache *thread_cache;$/;"	m	struct:NewThreadParams	file:
thread_callback_t	lib/sanitizer_common/sanitizer_internal_defs.h	/^typedef thread_return_t (THREAD_CALLING_CONV *thread_callback_t)(void* arg);$/;"	t	namespace:__sanitizer
thread_cleanup_handler	lib/safestack/safestack.cc	/^static void thread_cleanup_handler(void *_iter) {$/;"	f	file:
thread_cleanup_key	lib/safestack/safestack.cc	/^static pthread_key_t thread_cleanup_key;$/;"	v	file:
thread_descriptor_size	lib/sanitizer_common/sanitizer_linux_libcdep.cc	/^static atomic_uintptr_t thread_descriptor_size;$/;"	m	namespace:__sanitizer	file:
thread_descriptor_size_test_func	lib/sanitizer_common/tests/sanitizer_linux_test.cc	/^void *thread_descriptor_size_test_func(void *arg) {$/;"	f	namespace:__sanitizer
thread_destroyed	lib/sanitizer_common/sanitizer_thread_registry.h	/^  atomic_uint32_t thread_destroyed; \/\/ To address race of Joined vs Finished$/;"	m	class:__sanitizer::ThreadContextBase
thread_dtor	lib/sanitizer_common/tests/sanitizer_allocator_testlib.cc	/^static void thread_dtor(void *v) {$/;"	f	namespace:__anon59
thread_finalize	lib/lsan/lsan_interceptors.cc	/^static void thread_finalize(void *v) {$/;"	f	namespace:std
thread_finalize	lib/tsan/rtl/tsan_interceptors.cc	/^static void thread_finalize(void *v) {$/;"	f	file:
thread_fun	test/lsan/TestCases/high_allocator_contention.cc	/^void *thread_fun(void *arg) {$/;"	f
thread_fun	test/scudo/threads.c	/^void *thread_fun(void *arg) {$/;"	f
thread_func	lib/sanitizer_common/tests/sanitizer_posix_test.cc	/^void *thread_func(void *arg) {$/;"	f	namespace:__sanitizer
thread_func	test/lsan/TestCases/Linux/cleanup_in_tsd_destructor.c	/^void *thread_func(void *arg) {$/;"	f
thread_func	test/lsan/TestCases/Linux/disabler_in_tsd_destructor.c	/^void *thread_func(void *arg) {$/;"	f
thread_func	test/scudo/tsd_destruction.c	/^void *thread_func(void *arg) {$/;"	f
thread_ids	lib/sanitizer_common/tests/sanitizer_stoptheworld_test.cc	/^  pthread_t thread_ids[kThreadCount];$/;"	m	struct:__sanitizer::AdvancedCallbackArgument	file:
thread_ids_	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^  InternalMmapVector<tid_t> thread_ids_;$/;"	m	class:__sanitizer::SuspendedThreadsListLinux	file:
thread_index	lib/sanitizer_common/tests/sanitizer_stoptheworld_test.cc	/^  volatile uptr thread_index;$/;"	m	struct:__sanitizer::AdvancedCallbackArgument	file:
thread_init	lib/sanitizer_common/tests/sanitizer_allocator_testlib.cc	/^static void NOINLINE thread_init() {$/;"	f	namespace:__anon59
thread_inited	lib/sanitizer_common/tests/sanitizer_allocator_testlib.cc	/^static THREADLOCAL bool thread_inited;$/;"	m	namespace:__anon59	file:
thread_key	lib/tsan/tests/rtl/tsan_posix.cc	/^  thread_key(pthread_key_t key, pthread_mutex_t *mtx, int val, int *cnt)$/;"	f	struct:thread_key
thread_key	lib/tsan/tests/rtl/tsan_posix.cc	/^struct thread_key {$/;"	s	file:
thread_local_data_t	lib/lsan/lsan_common_mac.cc	/^} thread_local_data_t;$/;"	t	namespace:__lsan	typeref:struct:__lsan::__anon11	file:
thread_local_quarantine_size_kb	lib/asan/asan_allocator.h	/^  u32 thread_local_quarantine_size_kb;$/;"	m	struct:__asan::AllocatorOptions
thread_local_var	test/lsan/TestCases/Linux/fork.cc	/^__thread void *thread_local_var;$/;"	v
thread_local_var	test/lsan/TestCases/Linux/fork_threaded.cc	/^__thread void *thread_local_var;$/;"	v
thread_main	test/asan/TestCases/Posix/invalid-pointer-pairs-threads.cc	/^void *thread_main(void *n) {$/;"	f
thread_name	lib/tsan/rtl/tsan_report.cc	/^const char *thread_name(char *buf, int tid) {$/;"	f	namespace:__tsan
thread_proc	test/asan/TestCases/Windows/beginthreadex.cc	/^unsigned WINAPI thread_proc(void *) {$/;"	f
thread_proc	test/asan/TestCases/Windows/dll_thread_stack_array_left_oob.cc	/^DWORD WINAPI thread_proc(void *context) {$/;"	f
thread_proc	test/asan/TestCases/Windows/thread_simple.cc	/^DWORD WINAPI thread_proc(void *) {$/;"	f
thread_proc	test/asan/TestCases/Windows/thread_stack_array_left_oob.cc	/^DWORD WINAPI thread_proc(void *) {$/;"	f
thread_proc	test/asan/TestCases/Windows/thread_stack_array_right_oob.cc	/^DWORD WINAPI thread_proc(void *) {$/;"	f
thread_proc	test/asan/TestCases/Windows/thread_stress.cc	/^DWORD WINAPI thread_proc(void *) {$/;"	f
thread_proc	test/asan/TestCases/Windows/thread_suspended.cc	/^DWORD WINAPI thread_proc(void *) {$/;"	f
thread_proc_1	test/asan/TestCases/Windows/thread_stack_reuse.cc	/^DWORD WINAPI thread_proc_1(void *) {$/;"	f
thread_proc_2	test/asan/TestCases/Windows/thread_stack_reuse.cc	/^DWORD WINAPI thread_proc_2(void *) {$/;"	f
thread_quarantine_size_	lib/sanitizer_common/sanitizer_thread_registry.h	/^  const u32 thread_quarantine_size_;$/;"	m	class:__sanitizer::ThreadRegistry
thread_registry	lib/lsan/lsan_thread.cc	/^static ThreadRegistry *thread_registry;$/;"	m	namespace:__lsan	file:
thread_registry	lib/tsan/rtl/tsan_rtl.h	/^  ThreadRegistry *thread_registry;$/;"	m	struct:__tsan::Context
thread_registry_placeholder	lib/asan/asan_thread.cc	/^static ALIGNED(16) char thread_registry_placeholder[sizeof(ThreadRegistry)];$/;"	m	namespace:__asan	file:
thread_registry_placeholder	lib/tsan/rtl/tsan_rtl.cc	/^static char thread_registry_placeholder[sizeof(ThreadRegistry)];$/;"	m	namespace:__tsan	file:
thread_return_t	lib/sanitizer_common/sanitizer_internal_defs.h	/^typedef DWORD thread_return_t;$/;"	t	namespace:__sanitizer
thread_return_t	lib/sanitizer_common/sanitizer_internal_defs.h	/^typedef void* thread_return_t;$/;"	t	namespace:__sanitizer
thread_secific_dtor	lib/tsan/tests/rtl/tsan_posix.cc	/^static void thread_secific_dtor(void *v) {$/;"	f	file:
thread_self_offset_test_func	lib/sanitizer_common/tests/sanitizer_linux_test.cc	/^void *thread_self_offset_test_func(void *arg) {$/;"	f	namespace:__sanitizer
thread_start	lib/safestack/safestack.cc	/^static void *thread_start(void *arg) {$/;"	f	file:
thread_start	test/lsan/TestCases/many_tls_keys.cc	/^void *thread_start(void *arg) {$/;"	f
thread_suspender_instance	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^static ThreadSuspender *thread_suspender_instance = nullptr;$/;"	m	namespace:__sanitizer	file:
threading_list	lib/sanitizer_common/scripts/cpplint.py	/^threading_list = ($/;"	v
threads	lib/tsan/rtl/tsan_report.h	/^  Vector<ReportThread*> threads;$/;"	m	class:__tsan::ReportDesc
threads_	lib/sanitizer_common/sanitizer_stoptheworld_mac.cc	/^  InternalMmapVector<SuspendedThreadInfo> threads_;$/;"	m	class:__sanitizer::SuspendedThreadsListMac	file:
threads_	lib/sanitizer_common/sanitizer_thread_registry.h	/^  ThreadContextBase **threads_;  \/\/ Array of thread contexts is leaked.$/;"	m	class:__sanitizer::ThreadRegistry
threads_stopped	lib/sanitizer_common/tests/sanitizer_stoptheworld_test.cc	/^  volatile bool threads_stopped;$/;"	m	struct:__sanitizer::AdvancedCallbackArgument	file:
threads_stopped	lib/sanitizer_common/tests/sanitizer_stoptheworld_test.cc	/^  volatile bool threads_stopped;$/;"	m	struct:__sanitizer::CallbackArgument	file:
throws_and_catches	test/tsan/exceptions.cc	/^__attribute__((noinline)) void throws_and_catches() {$/;"	f
throws_catches_rethrows	test/tsan/exceptions.cc	/^__attribute__((noinline)) void throws_catches_rethrows() {$/;"	f
throws_int	test/tsan/exceptions.cc	/^__attribute__((noinline)) void throws_int() {$/;"	f
ti_int	lib/builtins/int_types.h	/^typedef int      ti_int __attribute__ ((mode (TI)));$/;"	t
tick	lib/tsan/tests/unit/tsan_clock_test.cc	/^  void tick() {$/;"	f	struct:__tsan::SimpleThreadClock
tid	lib/asan/asan_descriptions.h	/^  uptr tid;$/;"	m	struct:__asan::StackAddressDescription
tid	lib/asan/asan_errors.h	/^  u32 tid;$/;"	m	struct:__asan::ErrorBase
tid	lib/asan/asan_thread.h	/^  u32 tid() { return context_->tid; }$/;"	f	class:__asan::AsanThread
tid	lib/lsan/lsan_interceptors.cc	/^  atomic_uintptr_t tid;$/;"	m	struct:std::ThreadParam	file:
tid	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^  u32 tid;$/;"	m	struct:__sanitizer::Link	file:
tid	lib/sanitizer_common/sanitizer_stoptheworld_mac.cc	/^  tid_t tid;$/;"	m	struct:__sanitizer::__anon101	file:
tid	lib/sanitizer_common/sanitizer_thread_registry.h	/^  const u32 tid;  \/\/ Thread ID. Main thread should have tid = 0.$/;"	m	class:__sanitizer::ThreadContextBase
tid	lib/tsan/rtl/tsan_defs.h	/^  u16  tid;$/;"	m	struct:__tsan::MBlock
tid	lib/tsan/rtl/tsan_interceptors.cc	/^  atomic_uintptr_t tid;$/;"	m	struct:ThreadParam	file:
tid	lib/tsan/rtl/tsan_report.h	/^  int tid;$/;"	m	struct:__tsan::ReportLocation
tid	lib/tsan/rtl/tsan_report.h	/^  int tid;$/;"	m	struct:__tsan::ReportMop
tid	lib/tsan/rtl/tsan_rtl.h	/^  const int tid;$/;"	m	struct:__tsan::ThreadState
tid	lib/tsan/rtl/tsan_rtl.h	/^  u64 tid() const {$/;"	f	class:__tsan::FastState
tid	lib/tsan/tests/unit/tsan_clock_test.cc	/^  unsigned tid;$/;"	m	struct:__tsan::SimpleThreadClock	file:
tid	test/lsan/TestCases/high_allocator_contention.cc	/^pthread_t tid[kMaxNumThreads];$/;"	v
tid	test/scudo/threads.c	/^pthread_t tid[kMaxNumThreads];$/;"	v
tid	test/scudo/tsd_destruction.c	/^pthread_t tid[kNumThreads];$/;"	v
tid_reported_cond	lib/sanitizer_common/tests/sanitizer_linux_test.cc	/^  pthread_cond_t tid_reported_cond;$/;"	m	struct:__sanitizer::TidReporterArgument	file:
tid_reported_mutex	lib/sanitizer_common/tests/sanitizer_linux_test.cc	/^  pthread_mutex_t tid_reported_mutex;$/;"	m	struct:__sanitizer::TidReporterArgument	file:
tid_t	lib/sanitizer_common/sanitizer_internal_defs.h	/^typedef u64 tid_t;$/;"	t	namespace:__sanitizer
tids_	lib/sanitizer_common/tests/sanitizer_linux_test.cc	/^  std::vector<tid_t> tids_;$/;"	m	class:__sanitizer::ThreadListerTest	file:
time	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  __sanitizer_time_t time;$/;"	m	struct:__sanitizer::__sanitizer_timeb
time	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    __sanitizer_time_t time;$/;"	m	struct:__sanitizer::__sanitizer_timeb
time	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  __sanitizer_time_t time;$/;"	m	struct:__sanitizer::__sanitizer_timeb
time_t	lib/sanitizer_common/sanitizer_platform_limits_linux.cc	41;"	d	file:
timeb	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^CHECK_TYPE_SIZE(timeb);$/;"	v
timeb	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^CHECK_TYPE_SIZE(timeb);$/;"	v
timeb	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^CHECK_TYPE_SIZE(timeb);$/;"	v
times_restarted_	lib/sanitizer_common/sanitizer_symbolizer_internal.h	/^  uptr times_restarted_;$/;"	m	class:__sanitizer::SymbolizerProcess
timeval_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned timeval_sz = sizeof(timeval);$/;"	m	namespace:__sanitizer	file:
timeval_sz	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^unsigned timeval_sz = sizeof(timeval);$/;"	m	namespace:__sanitizer	file:
timeval_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned timeval_sz = sizeof(timeval);$/;"	m	namespace:__sanitizer	file:
timeval_sz	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned timeval_sz = sizeof(timeval);$/;"	m	namespace:__sanitizer	file:
timezone	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  short timezone;$/;"	m	struct:__sanitizer::__sanitizer_timeb
timezone	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    short timezone;$/;"	m	struct:__sanitizer::__sanitizer_timeb
timezone	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  short timezone;$/;"	m	struct:__sanitizer::__sanitizer_timeb
tinfo	lib/safestack/safestack.cc	/^struct tinfo {$/;"	s	file:
tls_addr	lib/tsan/rtl/tsan_rtl.h	/^  const uptr tls_addr;$/;"	m	struct:__tsan::ThreadState
tls_addr	lib/tsan/rtl/tsan_rtl_thread.cc	/^  uptr tls_addr;$/;"	m	struct:__tsan::OnStartedArgs	file:
tls_begin	lib/asan/asan_thread.h	/^  uptr tls_begin() { return tls_begin_; }$/;"	f	class:__asan::AsanThread
tls_begin	lib/hwasan/hwasan_thread.h	/^  uptr tls_begin() { return tls_begin_; }$/;"	f	class:__hwasan::HwasanThread
tls_begin	lib/lsan/lsan_thread.cc	/^       tls_begin, tls_end;$/;"	m	struct:__lsan::OnStartedArgs	file:
tls_begin	lib/lsan/lsan_thread.h	/^  uptr tls_begin() { return tls_begin_; }$/;"	f	class:__lsan::ThreadContext
tls_begin	lib/msan/msan_thread.h	/^  uptr tls_begin() { return tls_begin_; }$/;"	f	class:__msan::MsanThread
tls_begin_	lib/asan/asan_thread.h	/^  uptr tls_begin_;$/;"	m	class:__asan::AsanThread
tls_begin_	lib/hwasan/hwasan_thread.h	/^  uptr tls_begin_;$/;"	m	class:__hwasan::HwasanThread
tls_begin_	lib/lsan/lsan_thread.h	/^       tls_begin_, tls_end_;$/;"	m	class:__lsan::ThreadContext
tls_begin_	lib/msan/msan_thread.h	/^  uptr tls_begin_;$/;"	m	class:__msan::MsanThread
tls_bottom	lib/asan/asan_rtems.cc	/^  uptr stack_bottom, stack_size, tls_bottom, tls_size;$/;"	m	struct:__asan::AsanThread::InitOptions	file:
tls_end	lib/asan/asan_thread.h	/^  uptr tls_end() { return tls_end_; }$/;"	f	class:__asan::AsanThread
tls_end	lib/hwasan/hwasan_thread.h	/^  uptr tls_end() { return tls_end_; }$/;"	f	class:__hwasan::HwasanThread
tls_end	lib/lsan/lsan_thread.cc	/^       tls_begin, tls_end;$/;"	m	struct:__lsan::OnStartedArgs	file:
tls_end	lib/lsan/lsan_thread.h	/^  uptr tls_end() { return tls_end_; }$/;"	f	class:__lsan::ThreadContext
tls_end	lib/msan/msan_thread.h	/^  uptr tls_end() { return tls_end_; }$/;"	f	class:__msan::MsanThread
tls_end_	lib/asan/asan_thread.h	/^  uptr tls_end_;$/;"	m	class:__asan::AsanThread
tls_end_	lib/hwasan/hwasan_thread.h	/^  uptr tls_end_;$/;"	m	class:__hwasan::HwasanThread
tls_end_	lib/lsan/lsan_thread.h	/^       tls_begin_, tls_end_;$/;"	m	class:__lsan::ThreadContext
tls_end_	lib/msan/msan_thread.h	/^  uptr tls_end_;$/;"	m	class:__msan::MsanThread
tls_size	lib/asan/asan_rtems.cc	/^  uptr stack_bottom, stack_size, tls_bottom, tls_size;$/;"	m	struct:__asan::AsanThread::InitOptions	file:
tls_size	lib/tsan/rtl/tsan_rtl.h	/^  const uptr tls_size;$/;"	m	struct:__tsan::ThreadState
tls_size	lib/tsan/rtl/tsan_rtl_thread.cc	/^  uptr tls_size;$/;"	m	struct:__tsan::OnStartedArgs	file:
tls_var	test/asan/TestCases/Linux/unpoison_tls.cc	/^__thread int64_t tls_var[2];$/;"	v
tls_var	test/lsan/TestCases/Linux/use_tls_static.cc	/^__thread void *tls_var;$/;"	v
tm	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^CHECK_TYPE_SIZE(tm);$/;"	v
tm	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^CHECK_TYPE_SIZE(tm);$/;"	v
tm	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^CHECK_TYPE_SIZE(tm);$/;"	v
tm	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^CHECK_TYPE_SIZE(tm);$/;"	v
tm_gmtoff	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  long int tm_gmtoff;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_gmtoff	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  long int tm_gmtoff;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_gmtoff	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    long int tm_gmtoff;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_hour	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int tm_hour;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_hour	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  int tm_hour;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_hour	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    int tm_hour;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_hour	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int tm_hour;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_isdst	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int tm_isdst;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_isdst	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  int tm_isdst;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_isdst	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    int tm_isdst;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_isdst	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int tm_isdst;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_mday	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int tm_mday;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_mday	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  int tm_mday;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_mday	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    int tm_mday;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_mday	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int tm_mday;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_min	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int tm_min;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_min	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  int tm_min;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_min	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    int tm_min;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_min	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int tm_min;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_mon	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int tm_mon;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_mon	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  int tm_mon;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_mon	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    int tm_mon;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_mon	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int tm_mon;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_sec	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int tm_sec;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_sec	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  int tm_sec;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_sec	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    int tm_sec;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_sec	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int tm_sec;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_wday	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int tm_wday;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_wday	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  int tm_wday;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_wday	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    int tm_wday;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_wday	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int tm_wday;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_yday	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int tm_yday;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_yday	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  int tm_yday;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_yday	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    int tm_yday;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_yday	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int tm_yday;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_year	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int tm_year;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_year	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  int tm_year;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_year	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    int tm_year;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_year	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int tm_year;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_zone	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  const char *tm_zone;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_zone	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  const char *tm_zone;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_zone	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    const char *tm_zone;$/;"	m	struct:__sanitizer::__sanitizer_tm
tmp_bv_	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^  BV tmp_bv_;$/;"	m	class:__sanitizer::DeadlockDetector
tmpdir	lib/fuzzer/scripts/collect_data_flow.py	/^tmpdir = ""$/;"	v
tmpfile	lib/msan/tests/msan_test.cc	/^  char tmpfile[128];$/;"	m	class:TempFstabFile	file:
to	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^    u16 to;$/;"	m	struct:__sanitizer::DeadlockDetector::Edge
toRep	lib/builtins/fp_lib.h	/^static __inline rep_t toRep(fp_t x) {$/;"	f
toRep128	test/builtins/Unit/fp_test.h	/^static inline __uint128_t toRep128(long double x)$/;"	f
toRep16	test/builtins/Unit/fp_test.h	/^static inline uint16_t toRep16(uint16_t x)$/;"	f
toRep32	test/builtins/Unit/fp_test.h	/^static inline uint32_t toRep32(float x)$/;"	f
toRep64	test/builtins/Unit/fp_test.h	/^static inline uint64_t toRep64(double x)$/;"	f
toString	lib/fuzzer/FuzzerCommand.h	/^  std::string toString() const {$/;"	f	class:fuzzer::final
to_atomic	lib/tsan/rtl/tsan_interface_atomic.cc	/^static atomic_uint16_t *to_atomic(const volatile a16 *a) {$/;"	f	file:
to_atomic	lib/tsan/rtl/tsan_interface_atomic.cc	/^static atomic_uint32_t *to_atomic(const volatile a32 *a) {$/;"	f	file:
to_atomic	lib/tsan/rtl/tsan_interface_atomic.cc	/^static atomic_uint64_t *to_atomic(const volatile a64 *a) {$/;"	f	file:
to_atomic	lib/tsan/rtl/tsan_interface_atomic.cc	/^static atomic_uint8_t *to_atomic(const volatile a8 *a) {$/;"	f	file:
to_int	test/msan/vector_cvt.cc	/^int to_int(double v) {$/;"	f
to_mo	lib/tsan/rtl/tsan_interface_atomic.cc	/^static memory_order to_mo(morder mo) {$/;"	f	file:
toggle	test/profile/Linux/instrprof-cs.c	/^static void toggle(int t) {$/;"	f	file:
tools_	lib/sanitizer_common/sanitizer_symbolizer.h	/^  IntrusiveList<SymbolizerTool> tools_;$/;"	m	class:__sanitizer::final
top	lib/asan/asan_thread.h	/^    uptr top;$/;"	m	struct:__asan::AsanThread::StackBounds
top	test/asan/TestCases/alloca_loop_unpoisoning.cc	/^void *top, *bot;$/;"	v
top_frame_bp	lib/sanitizer_common/sanitizer_stacktrace.h	/^  uptr top_frame_bp;  \/\/ Optional bp of a top frame.$/;"	m	struct:__sanitizer::BufferedStackTrace
total_allocated_count_	lib/asan/asan_memory_profile.cc	/^  uptr total_allocated_count_ = 0;$/;"	m	class:__asan::HeapProfile	file:
total_allocated_user_size_	lib/asan/asan_memory_profile.cc	/^  uptr total_allocated_user_size_ = 0;$/;"	m	class:__asan::HeapProfile	file:
total_num_alloc	test/lsan/TestCases/high_allocator_contention.cc	/^int total_num_alloc;$/;"	v
total_num_alloc	test/scudo/threads.c	/^int total_num_alloc;$/;"	v
total_other_count_	lib/asan/asan_memory_profile.cc	/^  uptr total_other_count_ = 0;$/;"	m	class:__asan::HeapProfile	file:
total_quarantined_count_	lib/asan/asan_memory_profile.cc	/^  uptr total_quarantined_count_ = 0;$/;"	m	class:__asan::HeapProfile	file:
total_quarantined_user_size_	lib/asan/asan_memory_profile.cc	/^  uptr total_quarantined_user_size_ = 0;$/;"	m	class:__asan::HeapProfile	file:
total_size	lib/asan/asan_errors.h	/^  uptr total_size;$/;"	m	struct:__asan::ErrorAllocationSizeTooBig
total_size	lib/asan/asan_memory_profile.cc	/^  uptr total_size;$/;"	m	struct:__asan::AllocationSite	file:
total_size	lib/lsan/lsan_common.h	/^  uptr total_size;$/;"	m	struct:__lsan::Leak
total_threads_	lib/sanitizer_common/sanitizer_thread_registry.h	/^  u64 total_threads_;   \/\/ Total number of created threads. May be greater than$/;"	m	class:__sanitizer::ThreadRegistry
trace	lib/sanitizer_common/sanitizer_stacktrace.h	/^  const uptr *trace;$/;"	m	struct:__sanitizer::StackTrace
trace	lib/sanitizer_common/tests/sanitizer_stacktrace_test.cc	/^  BufferedStackTrace trace;$/;"	m	class:__sanitizer::FastUnwindTest	file:
trace_buffer	lib/sanitizer_common/sanitizer_stacktrace.h	/^  uptr trace_buffer[kStackTraceMax];$/;"	m	struct:__sanitizer::BufferedStackTrace
trace_buffer	lib/tsan/rtl/tsan_stack_trace.h	/^  uptr *trace_buffer;  \/\/ Owned.$/;"	m	struct:__tsan::VarSizeStackTrace
track_instrumented_libs_	lib/sanitizer_common/sanitizer_libignore.h	/^  bool track_instrumented_libs_;$/;"	m	class:__sanitizer::LibIgnore
transfer	lib/asan/tests/asan_mem_test.cc	/^  static void* transfer(void *to, const void *from, size_t size) {$/;"	f	class:MemCpyWrapper
transfer	lib/asan/tests/asan_mem_test.cc	/^  static void* transfer(void *to, const void *from, size_t size) {$/;"	f	class:MemMoveWrapper
trim	lib/xray/xray_segmented_array.h	/^  void trim(size_t Elements) {$/;"	f	class:__xray::Array
true	lib/BlocksRuntime/Block_private.h	41;"	d
true	lib/builtins/cpu_model.c	23;"	d	file:
truncateCurrentFile	lib/profile/InstrProfilingFile.c	/^static void truncateCurrentFile(void) {$/;"	f	file:
tryAlloc	lib/sanitizer_common/sanitizer_persistent_allocator.h	/^inline void *PersistentAllocator::tryAlloc(uptr size) {$/;"	f	class:__sanitizer::PersistentAllocator
try_lock	test/tsan/deadlock_detector_stress_test.cc	/^  bool try_lock() { return 0 == pthread_mutex_trylock(&mu_); }$/;"	f	class:PthreadMutex
try_lock	test/tsan/deadlock_detector_stress_test.cc	/^  bool try_lock() { return 0 == pthread_rwlock_trywrlock(&mu_); }$/;"	f	class:PthreadRWLock
try_lock	test/tsan/deadlock_detector_stress_test.cc	/^  bool try_lock() { return 0 == pthread_spin_trylock(&mu_); }$/;"	f	class:PthreadSpinLock
try_rdlock	test/tsan/deadlock_detector_stress_test.cc	/^  bool try_rdlock() { assert(0); }$/;"	f	class:PthreadMutex
try_rdlock	test/tsan/deadlock_detector_stress_test.cc	/^  bool try_rdlock() { assert(0); }$/;"	f	class:PthreadSpinLock
try_rdlock	test/tsan/deadlock_detector_stress_test.cc	/^  bool try_rdlock() { return 0 == pthread_rwlock_tryrdlock(&mu_); }$/;"	f	class:PthreadRWLock
try_thread	lib/sanitizer_common/tests/sanitizer_mutex_test.cc	/^static void *try_thread(void *param) {$/;"	f	namespace:__sanitizer
tsan_block_context_t	lib/tsan/rtl/tsan_libdispatch_mac.cc	/^} tsan_block_context_t;$/;"	t	namespace:__tsan	typeref:struct:__tsan::__anon19	file:
tsan_init_call	test/tsan/Linux/check_preinit.cc	/^volatile int tsan_init_call = 0;$/;"	v
tsan_pthread_setname_np	test/tsan/thread_name.cc	10;"	d	file:
tsan_pthread_setname_np	test/tsan/thread_name.cc	13;"	d	file:
tsan_pthread_setname_np	test/tsan/thread_name.cc	6;"	d	file:
tsan_pthread_setname_np	test/tsan/thread_name2.cc	11;"	d	file:
tsan_pthread_setname_np	test/tsan/thread_name2.cc	13;"	d	file:
tsan_pthread_setname_np	test/tsan/thread_name2.cc	9;"	d	file:
tsd_key	lib/asan/asan_posix.cc	/^static pthread_key_t tsd_key;$/;"	m	namespace:__asan	file:
tsd_key	lib/hwasan/hwasan_linux.cc	/^static pthread_key_t tsd_key;$/;"	m	namespace:__hwasan	file:
tsd_key	lib/msan/msan_linux.cc	/^static pthread_key_t tsd_key;$/;"	m	namespace:__msan	file:
tsd_key	test/asan/TestCases/Posix/tsd_dtor_leak.cc	/^static pthread_key_t tsd_key;$/;"	v	file:
tsd_key_inited	lib/asan/asan_posix.cc	/^static bool tsd_key_inited = false;$/;"	m	namespace:__asan	file:
tsd_key_inited	lib/asan/asan_win.cc	/^static bool tsd_key_inited = false;$/;"	m	namespace:__asan	file:
tsd_key_inited	lib/hwasan/hwasan_linux.cc	/^static bool tsd_key_inited = false;$/;"	m	namespace:__hwasan	file:
tsd_key_inited	lib/msan/msan_linux.cc	/^static bool tsd_key_inited = false;$/;"	m	namespace:__msan	file:
tu_int	lib/builtins/int_types.h	/^typedef unsigned tu_int __attribute__ ((mode (TI)));$/;"	t
tv_nsec	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  long tv_nsec;$/;"	m	struct:__sanitizer::__sanitizer_timespec
tv_sec	lib/sanitizer_common/sanitizer_linux.cc	/^  long tv_sec;$/;"	m	struct:kernel_timeval	file:
tv_sec	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  __sanitizer_time_t tv_sec;$/;"	m	struct:__sanitizer::__sanitizer_timespec
tv_sec	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  __sanitizer_time_t tv_sec;$/;"	m	struct:__sanitizer::__sanitizer_timeval
tv_sec	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  __sanitizer_time_t tv_sec;$/;"	m	struct:__sanitizer::__sanitizer_timeval
tv_sec	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    __sanitizer_time_t tv_sec;$/;"	m	struct:__sanitizer::__sanitizer_timeval
tv_sec	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  __sanitizer_time_t tv_sec;$/;"	m	struct:__sanitizer::__sanitizer_timeval
tv_usec	lib/sanitizer_common/sanitizer_linux.cc	/^  long tv_usec;$/;"	m	struct:kernel_timeval	file:
tv_usec	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  __sanitizer_suseconds_t tv_usec;$/;"	m	struct:__sanitizer::__sanitizer_timeval
tv_usec	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  __sanitizer_suseconds_t tv_usec;$/;"	m	struct:__sanitizer::__sanitizer_timeval
tv_usec	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    __sanitizer_suseconds_t tv_usec;$/;"	m	struct:__sanitizer::__sanitizer_timeval
tv_usec	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  __sanitizer_suseconds_t tv_usec;$/;"	m	struct:__sanitizer::__sanitizer_timeval
twelve	lib/builtins/i386/floatundisf.S	/^twelve:$/;"	l
two	lib/builtins/x86_64/floatundisf.S	/^two:$/;"	l
twop32	lib/builtins/i386/floatdidf.S	/^twop32:$/;"	l
twop52	lib/builtins/i386/floatdidf.S	/^twop52:$/;"	l
twop52	lib/builtins/i386/floatundidf.S	/^twop52:$/;"	l
twop52	lib/builtins/i386/floatundisf.S	/^twop52:$/;"	l
twop52	lib/builtins/i386/floatundixf.S	/^twop52:$/;"	l
twop52	lib/builtins/x86_64/floatundidf.S	/^twop52:$/;"	l
twop64	lib/builtins/x86_64/floatundixf.S	/^twop64:$/;"	l
twop84	lib/builtins/i386/floatundidf.S	/^twop84:$/;"	l
twop84	lib/builtins/i386/floatundixf.S	/^twop84:$/;"	l
twop84	lib/builtins/x86_64/floatundidf.S	/^twop84:$/;"	l
twop84_plus_twop52	lib/builtins/i386/floatundidf.S	/^twop84_plus_twop52:$/;"	l
twop84_plus_twop52	lib/builtins/x86_64/floatundidf.S	/^twop84_plus_twop52:$/;"	l
twop84_plus_twop52_neg	lib/builtins/i386/floatundixf.S	/^twop84_plus_twop52_neg:$/;"	l
twords	lib/builtins/int_types.h	/^} twords;$/;"	t	typeref:union:__anon116
ty_class	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char *ty_class;$/;"	m	struct:__sanitizer::__sanitizer_ttyent
ty_comment	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char *ty_comment;$/;"	m	struct:__sanitizer::__sanitizer_ttyent
ty_getty	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char *ty_getty;$/;"	m	struct:__sanitizer::__sanitizer_ttyent
ty_name	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char *ty_name;$/;"	m	struct:__sanitizer::__sanitizer_ttyent
ty_status	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int ty_status;$/;"	m	struct:__sanitizer::__sanitizer_ttyent
ty_type	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char *ty_type;$/;"	m	struct:__sanitizer::__sanitizer_ttyent
ty_window	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char *ty_window;$/;"	m	struct:__sanitizer::__sanitizer_ttyent
typ	lib/tsan/rtl/tsan_report.h	/^  ReportType typ;$/;"	m	class:__tsan::ReportDesc
type	lib/msan/msan.h	/^  } type;$/;"	m	struct:MappingDesc	typeref:enum:MappingDesc::Type
type	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned type;$/;"	m	struct:__sanitizer::__sanitizer_perf_event_attr
type	lib/sanitizer_common/sanitizer_suppressions.h	/^  const char *type;$/;"	m	struct:__sanitizer::Suppression
type	lib/tsan/rtl/tsan_report.h	/^  ReportLocationType type;$/;"	m	struct:__tsan::ReportLocation
type	lib/tsan/rtl/tsan_rtl.h	/^  ReportType type;$/;"	m	struct:__tsan::FiredSuppression
type	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^  Type type;$/;"	m	struct:Event	file:
typeWidth	lib/builtins/arm/addsf3.S	/^#define typeWidth 32$/;"	d
typeWidth	lib/builtins/fp_lib.h	216;"	d
type_	lib/tsan/rtl/tsan_mutex.h	/^  MutexType type_;$/;"	m	class:__tsan::Mutex
type_	lib/tsan/tests/rtl/tsan_test_util.h	/^  const Type type_;$/;"	m	class:Mutex
type_id	lib/xray/xray_interface.cc	/^  uint32_t type_id;$/;"	m	struct:__xray::TypeDescription	file:
type_info	lib/ubsan/ubsan_type_hash_itanium.cc	/^  class type_info {$/;"	c	namespace:std	file:
u	lib/builtins/int_types.h	/^    su_int u;$/;"	m	union:__anon120
u	lib/builtins/int_types.h	/^    udwords u;$/;"	m	union:__anon121
u	lib/builtins/int_types.h	/^    uqwords     u;$/;"	m	union:__anon123
u	test/msan/dtor-vtable-multiple-inheritance.cc	/^  int u;$/;"	m	class:E	file:
u128	lib/ubsan/ubsan_value.h	/^__extension__ typedef unsigned __int128 u128;$/;"	t
u16	lib/sanitizer_common/sanitizer_internal_defs.h	/^typedef unsigned short u16;  \/\/ NOLINT$/;"	t	namespace:__sanitizer
u32	lib/sanitizer_common/sanitizer_internal_defs.h	/^typedef unsigned int u32;$/;"	t	namespace:__sanitizer
u64	lib/sanitizer_common/sanitizer_internal_defs.h	/^typedef unsigned long long u64;  \/\/ NOLINT$/;"	t	namespace:__sanitizer
u64	lib/sanitizer_common/symbolizer/sanitizer_symbolize.cc	/^typedef uint64_t u64;$/;"	t	file:
u8	lib/sanitizer_common/sanitizer_internal_defs.h	/^typedef unsigned char u8;$/;"	t	namespace:__sanitizer
uaf_test	lib/asan/tests/asan_test.cc	/^NOINLINE void uaf_test(int size, int off) {$/;"	f
ubsan_flags	lib/ubsan/ubsan_flags.cc	/^Flags ubsan_flags;$/;"	m	namespace:__ubsan	file:
ubsan_init_mu	lib/ubsan/ubsan_init.cc	/^static StaticSpinMutex ubsan_init_mu;$/;"	v	file:
ubsan_initialized	lib/ubsan/ubsan_init.cc	/^static bool ubsan_initialized;$/;"	v	file:
ubsan_standalone_initializer	lib/ubsan/ubsan_init_standalone.cc	/^static UbsanStandaloneInitializer ubsan_standalone_initializer;$/;"	m	namespace:__ubsan	file:
uc_flags	lib/sanitizer_common/sanitizer_freebsd.h	/^  int uc_flags;$/;"	m	struct:__sanitizer::__xucontext
uc_link	lib/sanitizer_common/sanitizer_freebsd.h	/^  struct __ucontext *uc_link;$/;"	m	struct:__sanitizer::__xucontext	typeref:struct:__sanitizer::__xucontext::__ucontext
uc_mcontext	lib/sanitizer_common/sanitizer_freebsd.h	/^  xmcontext_t  uc_mcontext;$/;"	m	struct:__sanitizer::__xucontext
uc_sigmask	lib/sanitizer_common/sanitizer_freebsd.h	/^  sigset_t  uc_sigmask;$/;"	m	struct:__sanitizer::__xucontext
uc_stack	lib/sanitizer_common/sanitizer_freebsd.h	/^  stack_t uc_stack;$/;"	m	struct:__sanitizer::__xucontext
ucast	test/cfi/cross-dso/stats.cpp	/^extern "C" __attribute__((noinline)) A *ucast(A *a) {$/;"	f
ucast	test/cfi/stats.cpp	/^extern "C" __attribute__((noinline)) A *ucast(A *a) {$/;"	f
ucontext_t	lib/asan/asan_linux.cc	65;"	d	file:
ucontext_t	lib/tsan/rtl/tsan_interceptors.cc	/^struct ucontext_t {$/;"	s	file:
ucontext_t_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned ucontext_t_sz = sizeof(ucontext_t);$/;"	m	namespace:__sanitizer	file:
ucontext_t_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned ucontext_t_sz = sizeof(ucontext_t);$/;"	m	namespace:__sanitizer	file:
ucontext_t_sz	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned ucontext_t_sz = sizeof(ucontext_t);$/;"	m	namespace:__sanitizer	file:
udwords	lib/builtins/int_types.h	/^} udwords;$/;"	t	typeref:union:__anon114
uhwptr	lib/sanitizer_common/sanitizer_internal_defs.h	/^typedef unsigned long long uhwptr;  \/\/ NOLINT$/;"	t	namespace:__sanitizer
uhwptr	lib/sanitizer_common/sanitizer_internal_defs.h	/^typedef uptr uhwptr;   \/\/ NOLINT$/;"	t	namespace:__sanitizer
uid	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u32 uid;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
uid	lib/sanitizer_common/sanitizer_platform_limits_openbsd.h	/^  u32 uid;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
uid	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    int uid;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
uid	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned int uid;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
uid	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned int uid;           \/\/ uid_t$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
uid	lib/tsan/rtl/tsan_sync.h	/^  u64 uid;  \/\/ Globally unique id.$/;"	m	struct:__tsan::SyncVar
uid_t	lib/sanitizer_common/sanitizer_platform_limits_linux.cc	38;"	d	file:
uid_t	lib/sanitizer_common/sanitizer_platform_limits_linux.cc	47;"	d	file:
uid_t_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned uid_t_sz = sizeof(uid_t);$/;"	m	namespace:__sanitizer	file:
uid_t_sz	lib/sanitizer_common/sanitizer_platform_limits_openbsd.cc	/^unsigned uid_t_sz = sizeof(uid_t);$/;"	m	namespace:__sanitizer	file:
uid_t_sz	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^  unsigned uid_t_sz = sizeof(uid_t);$/;"	m	namespace:__sanitizer	file:
uid_t_sz	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^  unsigned uid_t_sz = sizeof(uid_t);$/;"	m	namespace:__sanitizer	file:
uint16_t	lib/tsan/rtl/tsan_interface.cc	/^typedef u16 uint16_t;$/;"	t	file:
uint32_t	lib/profile/GCDAProfiling.c	/^typedef unsigned int uint32_t;$/;"	t	file:
uint32_t	lib/tsan/rtl/tsan_interface.cc	/^typedef u32 uint32_t;$/;"	t	file:
uint64_t	lib/builtins/fp_lib.h	34;"	d
uint64_t	lib/profile/GCDAProfiling.c	/^typedef unsigned long long uint64_t;$/;"	t	file:
uint64_t	lib/tsan/rtl/tsan_interface.cc	/^typedef u64 uint64_t;$/;"	t	file:
uint8_t	lib/profile/GCDAProfiling.c	/^typedef unsigned char uint8_t;$/;"	t	file:
ulong_t	lib/tsan/rtl/tsan_md5.cc	/^typedef unsigned long ulong_t;  \/\/ NOLINT$/;"	t	namespace:__tsan	file:
umax_4	lib/builtins/arm/sync_fetch_and_umax_4.S	/^#define umax_4(rD, rN, rM)  MINMAX_4(rD, rN, rM, hi)$/;"	d
umax_8	lib/builtins/arm/sync_fetch_and_umax_8.S	/^#define umax_8(rD_LO, rD_HI, rN_LO, rN_HI, rM_LO, rM_HI)         MINMAX_8(rD_LO, rD_HI, rN_LO, rN_HI, rM_LO, rM_HI, hi)$/;"	d
umin_4	lib/builtins/arm/sync_fetch_and_umin_4.S	/^#define umin_4(rD, rN, rM) MINMAX_4(rD, rN, rM, lo)$/;"	d
umin_8	lib/builtins/arm/sync_fetch_and_umin_8.S	/^#define umin_8(rD_LO, rD_HI, rN_LO, rN_HI, rM_LO, rM_HI)         MINMAX_8(rD_LO, rD_HI, rN_LO, rN_HI, rM_LO, rM_HI, lo)$/;"	d
unReference	test/builtins/Unit/comparedf2_test.c	/^    int unReference;$/;"	m	struct:TestVector	file:
unReference	test/builtins/Unit/comparesf2_test.c	/^    int unReference;$/;"	m	struct:TestVector	file:
uninstrumented_rethrow_exception	test/asan/TestCases/intercept-rethrow-exception.cc	/^uninstrumented_rethrow_exception(std::exception_ptr const &exc_ptr) {$/;"	f	namespace:__anon135
union_dvd_authinfo_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned union_dvd_authinfo_sz = sizeof(dvd_authinfo);$/;"	m	namespace:__sanitizer	file:
union_dvd_struct_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned union_dvd_struct_sz = sizeof(dvd_struct);$/;"	m	namespace:__sanitizer	file:
union_table	lib/dfsan/dfsan.cc	/^static atomic_dfsan_label *union_table(dfsan_label l1, dfsan_label l2) {$/;"	f	file:
union_twe_statrequest_sz	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^unsigned union_twe_statrequest_sz = sizeof(union twe_statrequest);$/;"	m	namespace:__sanitizer	file:
unique_id	lib/sanitizer_common/sanitizer_thread_registry.h	/^  u64 unique_id;  \/\/ Unique thread ID.$/;"	m	class:__sanitizer::ThreadContextBase
unique_id	lib/tsan/rtl/tsan_rtl.h	/^  const int unique_id;$/;"	m	struct:__tsan::ThreadState
unique_tid	lib/sanitizer_common/sanitizer_deadlock_detector.h	/^    int unique_tid;$/;"	m	struct:__sanitizer::DeadlockDetector::Edge
unique_tids	lib/tsan/rtl/tsan_report.h	/^  Vector<int> unique_tids;$/;"	m	class:__tsan::ReportDesc
unknown_flags	lib/sanitizer_common/sanitizer_flag_parser.cc	/^UnknownFlags unknown_flags;$/;"	m	namespace:__sanitizer	file:
unknown_flags_	lib/sanitizer_common/sanitizer_flag_parser.cc	/^  const char *unknown_flags_[kMaxUnknownFlags];$/;"	m	class:__sanitizer::UnknownFlags	file:
unlock	lib/builtins/atomic.c	/^__inline static void unlock(Lock *l) {$/;"	f	file:
unlock	lib/esan/esan_hashtable.h	/^void HashTable<KeyTy, DataTy, ExternalLock, HashFuncTy, EqualFuncTy>::unlock() {$/;"	f	class:__esan::HashTable
unlock	lib/sanitizer_common/sanitizer_stackdepotbase.h	/^void StackDepotBase<Node, kReservedBits, kTabSizeLog>::unlock($/;"	f	class:__sanitizer::StackDepotBase
unlock	test/tsan/deadlock_detector_stress_test.cc	/^  void unlock() { assert(0 == pthread_mutex_unlock(&mu_)); }$/;"	f	class:PthreadMutex
unlock	test/tsan/deadlock_detector_stress_test.cc	/^  void unlock() { assert(0 == pthread_rwlock_unlock(&mu_)); }$/;"	f	class:PthreadRWLock
unlock	test/tsan/deadlock_detector_stress_test.cc	/^  void unlock() { assert(0 == pthread_spin_unlock(&mu_)); }$/;"	f	class:PthreadSpinLock
unmap_count	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  static int map_count, unmap_count;$/;"	m	struct:TestMapUnmapCallback	file:
unmap_count	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^int TestMapUnmapCallback::unmap_count;$/;"	m	class:TestMapUnmapCallback	file:
unmap_file	lib/profile/GCDAProfiling.c	/^static void unmap_file() {$/;"	f	file:
unpoison	lib/dfsan/dfsan_custom.cc	/^static void unpoison(const void *ptr, uptr size) {$/;"	f	file:
unreachable	lib/tsan/rtl/tsan_interceptors.cc	/^static void unreachable() {$/;"	f	namespace:__tsan
unreachable	test/cfi/cross-dso/stats.cpp	/^extern "C" __attribute__((noinline)) void unreachable(A *a) {$/;"	f
unreachable	test/cfi/stats.cpp	/^extern "C" __attribute__((noinline)) void unreachable(A *a) {$/;"	f
unref	lib/tsan/rtl/tsan_fd.cc	/^static void unref(ThreadState *thr, uptr pc, FdSync *s) {$/;"	f	namespace:__tsan
unregisterStructInfo	lib/esan/cache_frag.cpp	/^static void unregisterStructInfo(CacheFragInfo *CacheFrag) {$/;"	f	namespace:__esan
unregister_dso_globals	lib/asan/asan_globals_win.cc	/^static void unregister_dso_globals() {$/;"	f	namespace:__asan
unsafe_stack_alloc	lib/safestack/safestack.cc	/^static inline void *unsafe_stack_alloc(size_t size, size_t guard) {$/;"	f	file:
unsafe_stack_free	lib/safestack/safestack.cc	/^static void unsafe_stack_free() {$/;"	f	file:
unsafe_stack_guard	lib/safestack/safestack.cc	/^  size_t unsafe_stack_guard;$/;"	m	struct:tinfo	file:
unsafe_stack_guard	lib/safestack/safestack.cc	/^static __thread size_t unsafe_stack_guard = 0;$/;"	v	file:
unsafe_stack_setup	lib/safestack/safestack.cc	/^static inline void unsafe_stack_setup(void *start, size_t size, size_t guard) {$/;"	f	file:
unsafe_stack_size	lib/safestack/safestack.cc	/^  size_t unsafe_stack_size;$/;"	m	struct:tinfo	file:
unsafe_stack_size	lib/safestack/safestack.cc	/^static __thread size_t unsafe_stack_size = 0;$/;"	v	file:
unsafe_stack_start	lib/safestack/safestack.cc	/^  void *unsafe_stack_start;$/;"	m	struct:tinfo	file:
unsafe_stack_start	lib/safestack/safestack.cc	/^static __thread void *unsafe_stack_start = nullptr;$/;"	v	file:
unused	lib/builtins/os_version_check.c	/^typedef int unused;$/;"	t	file:
unused	test/asan/TestCases/Linux/globals-gc-sections-lld.cc	/^__attribute__((visibility("hidden"))) int (*unused)() = undefined;$/;"	v
unused	test/asan/TestCases/Linux/preinstalled_signal.cc	/^  char unused[1024];$/;"	m	struct:KernelSigaction	file:
unwind_backtrace_signal_arch	lib/sanitizer_common/sanitizer_unwind_linux_libcdep.cc	/^unwind_backtrace_signal_arch_func unwind_backtrace_signal_arch;$/;"	v
unwind_backtrace_signal_arch_func	lib/sanitizer_common/sanitizer_unwind_linux_libcdep.cc	/^typedef sptr (*unwind_backtrace_signal_arch_func)($/;"	t	file:
unwinding_	lib/asan/asan_thread.h	/^  bool unwinding_;$/;"	m	class:__asan::AsanThread
upperBound	lib/ubsan/ubsan_diag.cc	/^static Range *upperBound(MemoryLocation Loc, Range *Ranges,$/;"	f	file:
uptr	lib/interception/interception.h	/^typedef unsigned long long uptr;  \/\/ NOLINT$/;"	t	namespace:__interception
uptr	lib/sanitizer_common/sanitizer_internal_defs.h	/^typedef unsigned long long uptr;  \/\/ NOLINT$/;"	t	namespace:__sanitizer
uptr	test/tsan/bench_shadow_flush.cc	/^typedef unsigned long uptr;$/;"	t	file:
uqwords	lib/builtins/int_types.h	/^} uqwords;$/;"	t	typeref:struct:__anon122
us16	lib/sanitizer_common/sanitizer_internal_defs.h	/^typedef ALIGNED(1) s16 us16;$/;"	m	namespace:__sanitizer
us32	lib/sanitizer_common/sanitizer_internal_defs.h	/^typedef ALIGNED(1) s32 us32;$/;"	m	namespace:__sanitizer
us64	lib/sanitizer_common/sanitizer_internal_defs.h	/^typedef ALIGNED(1) s64 us64;$/;"	m	namespace:__sanitizer
usage	lib/asan/scripts/asan_device_setup	/^function usage {$/;"	f
usage	lib/sanitizer_common/symbolizer/scripts/ar_to_bc.sh	/^function usage() {$/;"	f
usage	utils/generate_netbsd_ioctls.awk	/^function usage()$/;"	f
usage	utils/generate_netbsd_syscalls.awk	/^function usage()$/;"	f
use	test/asan/TestCases/use-after-scope-goto.cc	/^void use(int *x) {$/;"	f
use_count	lib/sanitizer_common/sanitizer_stackdepot.cc	/^int StackDepotHandle::use_count() {$/;"	f	class:__sanitizer::StackDepotHandle
use_forkpty_	lib/sanitizer_common/sanitizer_symbolizer_internal.h	/^  bool use_forkpty_;$/;"	m	class:__sanitizer::SymbolizerProcess
user_aligned_alloc	lib/tsan/rtl/tsan_mman.cc	/^void *user_aligned_alloc(ThreadState *thr, uptr pc, uptr align, uptr sz) {$/;"	f	namespace:__tsan
user_alloc	lib/tsan/rtl/tsan_mman.cc	/^void *user_alloc(ThreadState *thr, uptr pc, uptr sz) {$/;"	f	namespace:__tsan
user_alloc_internal	lib/tsan/rtl/tsan_mman.cc	/^void *user_alloc_internal(ThreadState *thr, uptr pc, uptr sz, uptr align,$/;"	f	namespace:__tsan
user_alloc_usable_size	lib/tsan/rtl/tsan_mman.cc	/^uptr user_alloc_usable_size(const void *p) {$/;"	f	namespace:__tsan
user_calloc	lib/tsan/rtl/tsan_mman.cc	/^void *user_calloc(ThreadState *thr, uptr pc, uptr size, uptr n) {$/;"	f	namespace:__tsan
user_free	lib/tsan/rtl/tsan_mman.cc	/^void user_free(ThreadState *thr, uptr pc, void *p, bool signal) {$/;"	f	namespace:__tsan
user_id	lib/sanitizer_common/sanitizer_thread_registry.h	/^  uptr user_id;   \/\/ Some opaque user thread id (e.g. pthread_t).$/;"	m	class:__sanitizer::ThreadContextBase
user_memalign	lib/tsan/rtl/tsan_mman.cc	/^void *user_memalign(ThreadState *thr, uptr pc, uptr align, uptr sz) {$/;"	f	namespace:__tsan
user_posix_memalign	lib/tsan/rtl/tsan_mman.cc	/^int user_posix_memalign(ThreadState *thr, uptr pc, void **memptr, uptr align,$/;"	f	namespace:__tsan
user_pvalloc	lib/tsan/rtl/tsan_mman.cc	/^void *user_pvalloc(ThreadState *thr, uptr pc, uptr sz) {$/;"	f	namespace:__tsan
user_realloc	lib/tsan/rtl/tsan_mman.cc	/^void *user_realloc(ThreadState *thr, uptr pc, void *p, uptr sz) {$/;"	f	namespace:__tsan
user_requested_alignment	lib/asan/asan_descriptions.h	/^  u32 user_requested_alignment : 12;$/;"	m	struct:__asan::ChunkAccess
user_requested_alignment_log	lib/asan/asan_allocator.cc	/^  u32 user_requested_alignment_log : 3;$/;"	m	struct:__asan::ChunkHeader	file:
user_requested_size	lib/asan/asan_allocator.cc	/^  u32 user_requested_size : 29;$/;"	m	struct:__asan::ChunkHeader	file:
user_seh_handler	lib/asan/asan_win.cc	/^static LPTOP_LEVEL_EXCEPTION_FILTER user_seh_handler;$/;"	v	file:
user_size	lib/asan/asan_errors.h	/^  uptr user_size;$/;"	m	struct:__asan::ErrorAllocationSizeTooBig
user_valloc	lib/tsan/rtl/tsan_mman.cc	/^void *user_valloc(ThreadState *thr, uptr pc, uptr sz) {$/;"	f	namespace:__tsan
userdata	include/sanitizer/dfsan_interface.h	/^  void *userdata;$/;"	m	struct:dfsan_label_info
userdata	lib/dfsan/dfsan.h	/^  void *userdata;$/;"	m	struct:dfsan_label_info
utwords	lib/builtins/int_types.h	/^} utwords;$/;"	t	typeref:union:__anon118
uu16	lib/sanitizer_common/sanitizer_internal_defs.h	/^typedef ALIGNED(1) u16 uu16;$/;"	m	namespace:__sanitizer
uu32	lib/sanitizer_common/sanitizer_internal_defs.h	/^typedef ALIGNED(1) u32 uu32;$/;"	m	namespace:__sanitizer
uu64	lib/sanitizer_common/sanitizer_internal_defs.h	/^typedef ALIGNED(1) u64 uu64;$/;"	m	namespace:__sanitizer
uuid	lib/sanitizer_common/sanitizer_common.h	/^  const u8 *uuid() const { return uuid_; }$/;"	f	class:__sanitizer::LoadedModule
uuid	lib/sanitizer_common/sanitizer_procmaps.h	/^  u8 uuid[kModuleUUIDSize];$/;"	m	class:__sanitizer::MemoryMappedSegment
uuid_	lib/sanitizer_common/sanitizer_common.h	/^  u8 uuid_[kModuleUUIDSize];$/;"	m	class:__sanitizer::LoadedModule
v	lib/cfi/cfi.cc	/^  uint16_t v;$/;"	m	class:__cfi::ShadowValue	file:
v	lib/sanitizer_common/sanitizer_bvgraph.h	/^  BV v[kSize];$/;"	m	class:__sanitizer::BVGraph
v	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    int v[10];$/;"	m	struct:__sanitizer::__sanitizer_mallinfo
v	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    uptr v[10];$/;"	m	struct:__sanitizer::__sanitizer_mallinfo
v	test/asan/TestCases/Posix/tsd_dtor_leak.cc	/^static volatile void *v;$/;"	v	file:
v	test/builtins/Unit/arm/call_apsr.h	/^        uint32_t v: 1;$/;"	m	struct:cpsr::__anon152
v	test/cfi/nvcall.cpp	/^void A::v() {}$/;"	f	class:A
v	test/msan/dtor-trivial.cpp	/^  Vector<int> v;$/;"	m	struct:NonTrivial	file:
v	test/ubsan/TestCases/TypeCheck/null.cpp	/^  virtual int v() { return 1; }$/;"	f	struct:T
v	test/ubsan/TestCases/TypeCheck/null.cpp	/^  virtual int v() { return 2; }$/;"	f	struct:U
v	test/ubsan/TestCases/TypeCheck/vptr-corrupted-vtable-itanium.cpp	/^  virtual int v() { return 0; }$/;"	f	struct:S
v	test/ubsan/TestCases/TypeCheck/vptr.cpp	/^  virtual int v() { return 0; }$/;"	f	struct:S
v	test/ubsan/TestCases/TypeCheck/vptr.cpp	/^  virtual int v() { return 1; }$/;"	f	struct:T
v	test/ubsan/TestCases/TypeCheck/vptr.cpp	/^struct U : S, T { virtual int v() { return 2; } };$/;"	f	struct:U
v0	lib/tsan/rtl/tsan_ppc_regs.h	65;"	d
v1	lib/tsan/rtl/tsan_ppc_regs.h	66;"	d
v10	lib/tsan/rtl/tsan_ppc_regs.h	75;"	d
v11	lib/tsan/rtl/tsan_ppc_regs.h	76;"	d
v12	lib/tsan/rtl/tsan_ppc_regs.h	77;"	d
v13	lib/tsan/rtl/tsan_ppc_regs.h	78;"	d
v14	lib/tsan/rtl/tsan_ppc_regs.h	79;"	d
v15	lib/tsan/rtl/tsan_ppc_regs.h	80;"	d
v16	lib/tsan/rtl/tsan_ppc_regs.h	81;"	d
v17	lib/tsan/rtl/tsan_ppc_regs.h	82;"	d
v18	lib/tsan/rtl/tsan_ppc_regs.h	83;"	d
v19	lib/tsan/rtl/tsan_ppc_regs.h	84;"	d
v2	lib/tsan/rtl/tsan_ppc_regs.h	67;"	d
v20	lib/tsan/rtl/tsan_ppc_regs.h	85;"	d
v21	lib/tsan/rtl/tsan_ppc_regs.h	86;"	d
v22	lib/tsan/rtl/tsan_ppc_regs.h	87;"	d
v23	lib/tsan/rtl/tsan_ppc_regs.h	88;"	d
v24	lib/tsan/rtl/tsan_ppc_regs.h	89;"	d
v25	lib/tsan/rtl/tsan_ppc_regs.h	90;"	d
v26	lib/tsan/rtl/tsan_ppc_regs.h	91;"	d
v27	lib/tsan/rtl/tsan_ppc_regs.h	92;"	d
v28	lib/tsan/rtl/tsan_ppc_regs.h	93;"	d
v29	lib/tsan/rtl/tsan_ppc_regs.h	94;"	d
v3	lib/tsan/rtl/tsan_ppc_regs.h	68;"	d
v30	lib/tsan/rtl/tsan_ppc_regs.h	95;"	d
v31	lib/tsan/rtl/tsan_ppc_regs.h	96;"	d
v4	lib/tsan/rtl/tsan_ppc_regs.h	69;"	d
v5	lib/tsan/rtl/tsan_ppc_regs.h	70;"	d
v6	lib/tsan/rtl/tsan_ppc_regs.h	71;"	d
v7	lib/tsan/rtl/tsan_ppc_regs.h	72;"	d
v8	lib/tsan/rtl/tsan_ppc_regs.h	73;"	d
v9	lib/tsan/rtl/tsan_ppc_regs.h	74;"	d
v_	test/asan/TestCases/Windows/demangled_names.cc	/^  char *v_;$/;"	m	struct:A	file:
va_arg_overflow_size_tls	lib/hwasan/hwasan.h	/^  u64 va_arg_overflow_size_tls;$/;"	m	class:__hwasan::ScopedThreadLocalStateBackup
va_arg_overflow_size_tls	lib/msan/msan.h	/^  u64 va_arg_overflow_size_tls;$/;"	m	class:__msan::ScopedThreadLocalStateBackup
va_copy	lib/sanitizer_common/sanitizer_printf.cc	26;"	d	file:
vaargsfn	lib/msan/tests/msan_test.cc	/^static void vaargsfn(int guard, ...) {$/;"	f	file:
vaargsfn2	lib/msan/tests/msan_test.cc	/^static void vaargsfn2(int guard, ...) {$/;"	f	file:
vaargsfn_copy	lib/msan/tests/msan_test.cc	/^static void vaargsfn_copy(int guard, ...) {$/;"	f	file:
vaargsfn_copy2	lib/msan/tests/msan_test.cc	/^static void vaargsfn_copy2(va_list vl) {$/;"	f	file:
vaargsfn_many	lib/msan/tests/msan_test.cc	/^static void vaargsfn_many(int guard, ...) {$/;"	f	file:
vaargsfn_manyfix	lib/msan/tests/msan_test.cc	/^static void vaargsfn_manyfix(int g1, int g2, int g3, int g4, int g5, int g6, int g7, int g8, int g9, ...) {$/;"	f	file:
vaargsfn_overflow	lib/msan/tests/msan_test.cc	/^static void vaargsfn_overflow(int guard, ...) {$/;"	f	file:
vaargsfn_pass	lib/msan/tests/msan_test.cc	/^static void vaargsfn_pass(int guard, ...) {$/;"	f	file:
vaargsfn_pass2	lib/msan/tests/msan_test.cc	/^static void vaargsfn_pass2(va_list vl) {$/;"	f	file:
vaargsfn_ptr	lib/msan/tests/msan_test.cc	/^static void vaargsfn_ptr(int guard, ...) {$/;"	f	file:
vaargsfn_structbyval	lib/msan/tests/msan_test.cc	/^static void vaargsfn_structbyval(int guard, ...) {$/;"	f	file:
vaargsfn_tlsoverwrite	lib/msan/tests/msan_test.cc	/^static void vaargsfn_tlsoverwrite(int guard, ...) {$/;"	f	file:
vaargsfn_tlsoverwrite2	lib/msan/tests/msan_test.cc	/^static void vaargsfn_tlsoverwrite2(int guard, ...) {$/;"	f	file:
val	lib/sanitizer_common/sanitizer_addrhashmap.h	/^    T                val;$/;"	m	struct:__sanitizer::AddrHashMap::Cell
val	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    uptr val[128 \/ sizeof(uptr)];$/;"	m	struct:__sanitizer::__sanitizer_sigset_t
val	lib/tsan/tests/rtl/tsan_posix.cc	/^  int val;$/;"	m	struct:thread_key	file:
val	test/asan/TestCases/Helpers/initialization-nobug-extra.cc	/^static int val = getStructWithDtorValue();$/;"	v	file:
val	test/asan/TestCases/Linux/init-order-dlopen.cc	/^  int val;$/;"	m	struct:Bar	file:
val	test/asan/TestCases/Linux/init-order-dlopen.cc	/^  int val;$/;"	m	struct:Foo	file:
val	test/asan/TestCases/use-after-scope-temp.cc	/^  int val;$/;"	m	struct:IntHolder	file:
val	test/asan/TestCases/use-after-scope-temp2.cc	/^  int val = 3;$/;"	m	struct:IntHolder	file:
val_	test/asan/TestCases/use-after-scope-dtor-order.cc	/^  int *val_;$/;"	m	struct:IntHolder	file:
val_dont_use	lib/sanitizer_common/sanitizer_atomic.h	/^  volatile ALIGNED(8) Type val_dont_use;$/;"	m	struct:__sanitizer::atomic_uint64_t
val_dont_use	lib/sanitizer_common/sanitizer_atomic.h	/^  volatile Type val_dont_use;$/;"	m	struct:__sanitizer::atomic_sint32_t
val_dont_use	lib/sanitizer_common/sanitizer_atomic.h	/^  volatile Type val_dont_use;$/;"	m	struct:__sanitizer::atomic_uint16_t
val_dont_use	lib/sanitizer_common/sanitizer_atomic.h	/^  volatile Type val_dont_use;$/;"	m	struct:__sanitizer::atomic_uint32_t
val_dont_use	lib/sanitizer_common/sanitizer_atomic.h	/^  volatile Type val_dont_use;$/;"	m	struct:__sanitizer::atomic_uint8_t
val_dont_use	lib/sanitizer_common/sanitizer_atomic.h	/^  volatile Type val_dont_use;$/;"	m	struct:__sanitizer::atomic_uintptr_t
valid	lib/msan/msan_chained_origin_depot.cc	/^    bool valid() { return node_; }$/;"	f	struct:__msan::ChainedOriginDepotNode::Handle
valid	lib/sanitizer_common/sanitizer_stackdepot.h	/^  bool valid() { return node_; }$/;"	f	struct:__sanitizer::StackDepotHandle
valloc	lib/asan/asan_malloc_linux.cc	/^  void* (*valloc)(uptr size);$/;"	m	struct:MallocDebugL	file:
valloc	lib/sanitizer_common/tests/sanitizer_allocator_testlib.cc	/^void *valloc(size_t size) {$/;"	f
valloc	lib/scudo/scudo_malloc.cpp	/^INTERCEPTOR_ATTRIBUTE void *valloc(size_t size) {$/;"	f
value	lib/asan/asan_poisoning.cc	/^  s8 value;  \/\/ = *chunk;$/;"	m	struct:__asan::ShadowSegmentEndpoint	file:
value	lib/builtins/emutls.c	/^    void* value;  \/* null or non-zero initial value for the object *\/$/;"	m	struct:__emutls_control	file:
value	lib/sanitizer_common/sanitizer_win.cc	/^  char value[kMaxEnvValueLength];$/;"	m	struct:__sanitizer::__anon75::EnvVariable	file:
value	test/asan/TestCases/Helpers/init-order-atexit-extra.cc	/^  int value;$/;"	m	class:C	file:
value	test/asan/TestCases/Helpers/initialization-blacklist-extra.cc	/^  int value;$/;"	m	class:badNamespace::BadClass	file:
value	test/asan/TestCases/initialization-constexpr.cc	/^  int value;$/;"	m	class:Integer	file:
value	test/asan/TestCases/initialization-nobug.cc	/^  int value;$/;"	m	struct:StructWithDtor	file:
value	test/builtins/Unit/arm/call_apsr.h	/^    uint32_t value;$/;"	m	union:cpsr
value	test/ubsan/TestCases/Misc/nonnull-arg.cpp	/^  int value() { return *nonnull_; }$/;"	f	class:C
var	test/BlocksRuntime/byrefsanity.c	/^    int var;$/;"	m	struct:byref_id	file:
var	test/xray/TestCases/Posix/fdr-mode-inmemory.cc	/^uint64_t var = 0;$/;"	v
var	test/xray/TestCases/Posix/fdr-mode-multiple.cc	/^uint64_t var = 0;$/;"	v
var	test/xray/TestCases/Posix/fdr-mode.cc	/^thread_local uint64_t var = 0;$/;"	v
varaddr	test/tsan/java_lock.cc	/^jptr varaddr;$/;"	v
varaddr	test/tsan/java_lock_move.cc	/^jptr varaddr;$/;"	v
varaddr	test/tsan/java_lock_rec.cc	/^jptr varaddr;$/;"	v
varaddr	test/tsan/java_lock_rec_race.cc	/^jptr varaddr;$/;"	v
varaddr	test/tsan/java_race_move.cc	/^jptr varaddr;$/;"	v
varaddr	test/tsan/java_rwlock.cc	/^jptr varaddr;$/;"	v
varaddr	test/tsan/java_volatile.cc	/^jptr varaddr;$/;"	v
varaddr1_new	test/tsan/java_move_overlap.cc	/^jptr varaddr1_new;$/;"	v
varaddr1_new	test/tsan/java_move_overlap_race.cc	/^jptr varaddr1_new;$/;"	v
varaddr1_old	test/tsan/java_move_overlap.cc	/^jptr varaddr1_old;$/;"	v
varaddr1_old	test/tsan/java_move_overlap_race.cc	/^jptr varaddr1_old;$/;"	v
varaddr2	test/tsan/java_lock_move.cc	/^jptr varaddr2;$/;"	v
varaddr2	test/tsan/java_race_move.cc	/^jptr varaddr2;$/;"	v
varaddr2_new	test/tsan/java_move_overlap.cc	/^jptr varaddr2_new;$/;"	v
varaddr2_new	test/tsan/java_move_overlap_race.cc	/^jptr varaddr2_new;$/;"	v
varaddr2_old	test/tsan/java_move_overlap.cc	/^jptr varaddr2_old;$/;"	v
varaddr2_old	test/tsan/java_move_overlap_race.cc	/^jptr varaddr2_old;$/;"	v
variadic	test/ubsan/TestCases/Misc/nonnull-arg.cpp	/^__attribute__((nonnull)) int variadic(int x, ...) {$/;"	f
vcall	test/cfi/cross-dso/stats.cpp	/^extern "C" __attribute__((noinline)) void vcall(A *a) {$/;"	f
vcall	test/cfi/stats.cpp	/^extern "C" __attribute__((noinline)) void vcall(A *a) {$/;"	f
vectors	test/builtins/Unit/comparedf2_test.c	/^static const struct TestVector vectors[] = {$/;"	v	typeref:struct:TestVector	file:
vectors	test/builtins/Unit/comparesf2_test.c	/^static const struct TestVector vectors[] = {$/;"	v	typeref:struct:TestVector	file:
verbose	test/BlocksRuntime/recursive-test.c	/^int verbose = 0;$/;"	v
verbose	test/sanitizer_common/android_commands/android_common.py	/^    verbose = True$/;"	v
verbose	test/sanitizer_common/android_commands/android_common.py	/^verbose = False$/;"	v
verify	lib/tsan/tests/unit/tsan_clock_test.cc	/^  bool verify(const SyncClock *other) const {$/;"	f	struct:__tsan::SimpleSyncClock
verify	lib/tsan/tests/unit/tsan_clock_test.cc	/^  bool verify(const ThreadClock *other) const {$/;"	f	struct:__tsan::SimpleThreadClock
verifyAddressSpace	lib/esan/esan_linux.cpp	/^void verifyAddressSpace() {$/;"	f	namespace:__esan
verifyFormatResults	lib/sanitizer_common/tests/sanitizer_format_interceptor_test.cc	/^static void verifyFormatResults(const char *format, unsigned n,$/;"	f	file:
verifyShadowScheme	lib/esan/esan.cpp	/^static bool verifyShadowScheme() {$/;"	f	namespace:__esan
verify_find	test/tsan/java_find.cc	/^static void verify_find(jptr from, jptr to, jptr expected_addr,$/;"	f	file:
versioned_functions	lib/sanitizer_common/scripts/gen_dynamic_list.py	/^versioned_functions = set(['memcpy', 'pthread_attr_getaffinity_np',$/;"	v
vf	test/cfi/cross-dso/stats.cpp	/^  virtual void vf() {}$/;"	f	struct:A
vf	test/cfi/stats.cpp	/^  virtual void vf() {}$/;"	f	struct:A
vfptr_offset	lib/ubsan/ubsan_type_hash_win.cc	/^  int vfptr_offset;$/;"	m	struct:CompleteObjectLocator	file:
vfptr_offset	lib/ubsan/ubsan_type_hash_win.cc	/^  int vfptr_offset;$/;"	m	struct:CompleteObjectLocatorAbs	file:
virtual_a	test/msan/dtor-multiple-inheritance-nontrivial-class-members.cc	/^  int virtual_a;$/;"	m	struct:VirtualBase	file:
virtual_size	lib/sanitizer_common/sanitizer_mac.cc	/^  mach_vm_size_t virtual_size;$/;"	m	struct:__sanitizer::__sanitizer_task_vm_info	file:
virtual_v	test/msan/dtor-multiple-inheritance-nontrivial-class-members.cc	/^  Vector<int> virtual_v;$/;"	m	struct:VirtualBase	file:
visited	lib/sanitizer_common/sanitizer_deadlock_detector2.cc	/^  bool visited[kMaxMutex];$/;"	m	struct:__sanitizer::DDPhysicalThread	file:
vmaSize	lib/dfsan/dfsan.cc	/^int __dfsan::vmaSize;$/;"	m	class:__dfsan	file:
vmaSize	lib/tsan/rtl/tsan_platform_linux.cc	/^uptr vmaSize;$/;"	m	namespace:__tsan	file:
vmo_	lib/sanitizer_common/sanitizer_coverage_fuchsia.cc	/^  zx_handle_t vmo_ = {};$/;"	m	class:__sancov::__anon63::final	file:
vmo_name_	lib/sanitizer_common/sanitizer_coverage_fuchsia.cc	/^  char vmo_name_[ZX_MAX_NAME_LEN] = {};$/;"	m	class:__sancov::__anon63::final	file:
void_f	test/asan/TestCases/non-executable-pc.cpp	/^typedef void void_f();$/;"	t	file:
void_f	test/asan/TestCases/zero_page_pc.cc	/^typedef void void_f();$/;"	t	file:
vsnprintf_l_wrapper	lib/asan/tests/asan_test.cc	/^static int vsnprintf_l_wrapper(char *s, size_t n,$/;"	f	file:
w	test/asan/TestCases/speculative_load2.cc	/^  } w;$/;"	m	union:__anon136	typeref:struct:__anon136::__anon137	file:
w	test/msan/dtor-multiple-inheritance.cc	/^  int w;$/;"	m	class:Derived	file:
w	test/msan/dtor-vtable-multiple-inheritance.cc	/^  int w;$/;"	m	class:D	file:
wants32	test/BlocksRuntime/testfilerunner.h	/^@property bool hasObjC, hasRR, hasGC, hasCPlusPlus, wantsC99, supposedToNotCompile, open, wants32, wants64;$/;"	v
wants64	test/BlocksRuntime/testfilerunner.h	/^@property bool hasObjC, hasRR, hasGC, hasCPlusPlus, wantsC99, supposedToNotCompile, open, wants32, wants64;$/;"	v
wantsC99	test/BlocksRuntime/testfilerunner.h	/^@property bool hasObjC, hasRR, hasGC, hasCPlusPlus, wantsC99, supposedToNotCompile, open, wants32, wants64;$/;"	v
warningString	test/BlocksRuntime/testfilerunner.h	/^@property __strong char *warningString;$/;"	v
wcslen	lib/asan/asan_win_dll_thunk.cc	/^INTERCEPT_LIBRARY_FUNCTION(wcslen);$/;"	v
wcsnlen	lib/asan/asan_win_dll_thunk.cc	/^INTERCEPT_LIBRARY_FUNCTION(wcsnlen);$/;"	v
we_nbytes	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  uptr we_nbytes;$/;"	m	struct:__sanitizer::__sanitizer_wordexp_t
we_nbytes	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    uptr we_nbytes;$/;"	m	struct:__sanitizer::__sanitizer_wordexp_t
we_offs	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  uptr we_offs;$/;"	m	struct:__sanitizer::__sanitizer_wordexp_t
we_offs	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    uptr we_offs;$/;"	m	struct:__sanitizer::__sanitizer_wordexp_t
we_offs	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  uptr we_offs;$/;"	m	struct:__sanitizer::__sanitizer_wordexp_t
we_strings	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char *we_strings;$/;"	m	struct:__sanitizer::__sanitizer_wordexp_t
we_strings	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    char *we_strings;$/;"	m	struct:__sanitizer::__sanitizer_wordexp_t
we_wordc	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  uptr we_wordc;$/;"	m	struct:__sanitizer::__sanitizer_wordexp_t
we_wordc	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    uptr we_wordc;$/;"	m	struct:__sanitizer::__sanitizer_wordexp_t
we_wordc	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  uptr we_wordc;$/;"	m	struct:__sanitizer::__sanitizer_wordexp_t
we_wordn	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int we_wordn;$/;"	m	struct:__sanitizer::__sanitizer_wordexp_t
we_wordp	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  char **we_wordp;$/;"	m	struct:__sanitizer::__sanitizer_wordexp_t
we_wordv	lib/sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char **we_wordv;$/;"	m	struct:__sanitizer::__sanitizer_wordexp_t
we_wordv	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    char **we_wordv;$/;"	m	struct:__sanitizer::__sanitizer_wordexp_t
we_wordv	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  char **we_wordv;$/;"	m	struct:__sanitizer::__sanitizer_wordexp_t
weak_intercept_init	lib/sanitizer_common/sanitizer_win_weak_interception.cc	/^static int weak_intercept_init() {$/;"	f	file:
weak_intercept_thread_init	lib/sanitizer_common/sanitizer_win_weak_interception.cc	/^static void WINAPI weak_intercept_thread_init(void *mod, unsigned long reason,$/;"	f	file:
weight	lib/sanitizer_common/sanitizer_suppressions.h	/^  uptr weight;$/;"	m	struct:__sanitizer::Suppression
whoami	test/BlocksRuntime/dispatch_async.c	/^const char *whoami = "nobody";$/;"	v
wideLeftShift	lib/builtins/fp_lib.h	/^static __inline void wideLeftShift(rep_t *hi, rep_t *lo, int count) {$/;"	f
wideMultiply	lib/builtins/fp_lib.h	/^static __inline void wideMultiply(rep_t a, rep_t b, rep_t *hi, rep_t *lo) {$/;"	f
wideRightShiftWithSticky	lib/builtins/fp_lib.h	/^static __inline void wideRightShiftWithSticky(rep_t *hi, rep_t *lo, unsigned int count) {$/;"	f
width	lib/dfsan/dfsan_custom.cc	/^  int width;$/;"	m	struct:Formatter	file:
win_abort	lib/builtins/emutls.c	/^static __inline void win_abort(DWORD last_err, const char *hint) {$/;"	f	file:
win_error	lib/builtins/emutls.c	/^static void win_error(DWORD last_err, const char *hint) {$/;"	f	file:
wordexp_t	lib/sanitizer_common/sanitizer_platform_limits_netbsd.cc	/^CHECK_TYPE_SIZE(wordexp_t);$/;"	v
wordexp_t	lib/sanitizer_common/sanitizer_platform_limits_posix.cc	/^CHECK_TYPE_SIZE(wordexp_t);$/;"	v
wordexp_t	lib/sanitizer_common/sanitizer_platform_limits_solaris.cc	/^CHECK_TYPE_SIZE(wordexp_t);$/;"	v
work_item	test/asan/TestCases/Windows/queue_user_work_item.cc	/^DWORD CALLBACK work_item(LPVOID) {$/;"	f
work_item	test/asan/TestCases/Windows/queue_user_work_item_report.cc	/^DWORD CALLBACK work_item(LPVOID) {$/;"	f
worker	test/tsan/fork_atexit.cc	/^void *worker(void *unused) {$/;"	f
worker	test/tsan/pthread_atfork_deadlock.c	/^void *worker(void *unused) {$/;"	f
worker_t	lib/asan/asan_mac.cc	/^typedef void* (*worker_t)(void *block);$/;"	t	namespace:__asan	file:
worker_t	lib/lsan/lsan_mac.cc	/^typedef void *(*worker_t)(void *block);$/;"	t	namespace:__lsan	file:
workerthread	lib/sanitizer_common/sanitizer_thread_registry.h	/^  bool workerthread;$/;"	m	class:__sanitizer::ThreadContextBase
workerthread	lib/tsan/rtl/tsan_report.h	/^  bool workerthread;$/;"	m	struct:__tsan::ReportThread
wr	lib/stats/stats.cc	/^} wr;$/;"	m	namespace:__anon4	typeref:struct:__anon4::WriteReportOnExitOrSignal	file:
writable	lib/sanitizer_common/sanitizer_common.h	/^    bool writable;$/;"	m	struct:__sanitizer::LoadedModule::AddressRange
write	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^  __sanitizer_cookie_io_write write;$/;"	m	struct:__sanitizer_cookie_io_functions_t
write	lib/tsan/rtl/tsan_mutexset.h	/^    bool write;$/;"	m	struct:__tsan::MutexSet::Desc
write	lib/tsan/rtl/tsan_report.h	/^  bool write;$/;"	m	struct:__tsan::ReportMop
write	lib/tsan/rtl/tsan_report.h	/^  bool write;$/;"	m	struct:__tsan::ReportMopMutex
writeCurrentCPUTSC	lib/xray/xray_fdr_logging.cc	/^static uint32_t writeCurrentCPUTSC(ThreadLocalData &TLD, uint64_t TSC,$/;"	f	namespace:__xray
writeFile	lib/profile/InstrProfilingFile.c	/^static int writeFile(const char *OutputName) {$/;"	f	file:
writeFileWithoutReturn	lib/profile/InstrProfilingFile.c	/^static void writeFileWithoutReturn(void) { __llvm_profile_write_file(); }$/;"	f	file:
writeOneValueProfData	lib/profile/InstrProfilingWriter.c	/^static int writeOneValueProfData(ProfBufferIO *BufferIO,$/;"	f	file:
writeValueProfData	lib/profile/InstrProfilingWriter.c	/^static int writeValueProfData(ProfDataWriter *Writer,$/;"	f	file:
write_32bit_value	lib/profile/GCDAProfiling.c	/^static void write_32bit_value(uint32_t i) {$/;"	f	file:
write_64bit_value	lib/profile/GCDAProfiling.c	/^static void write_64bit_value(uint64_t i) {$/;"	f	file:
write_buffer	lib/profile/GCDAProfiling.c	/^static unsigned char *write_buffer = NULL;$/;"	v	file:
write_bytes	lib/profile/GCDAProfiling.c	/^static void write_bytes(const char *s, size_t len) {$/;"	f	file:
write_callback	lib/dfsan/dfsan_custom.cc	/^  void *write_callback = nullptr;$/;"	m	struct:__anon5	file:
write_callback	test/dfsan/custom.cc	/^void write_callback(int fd, const void *buf, size_t count) {$/;"	f
write_callback	test/dfsan/write_callback.c	/^static void write_callback(int fd, const void *buf, size_t count) {$/;"	f	file:
write_callback_count	test/dfsan/custom.cc	/^static int write_callback_count = 0;$/;"	v	file:
write_callback_info	lib/dfsan/dfsan_custom.cc	/^} write_callback_info;$/;"	v	typeref:struct:__anon5	file:
write_callback_trampoline	lib/dfsan/dfsan_custom.cc	/^  write_trampoline_t write_callback_trampoline = nullptr;$/;"	m	struct:__anon5	file:
write_extra_stats	lib/fuzzer/afl/afl_driver.cpp	/^static void write_extra_stats() {$/;"	f	file:
write_flag	lib/sanitizer_common/sanitizer_common.h	/^  enum WriteFlag { UNKNOWN, READ, WRITE } write_flag;$/;"	m	struct:__sanitizer::SignalContext	typeref:enum:__sanitizer::SignalContext::WriteFlag
write_from_so	test/tsan/load_shared_lib.cc	/^void *write_from_so(void *unused) {$/;"	f
write_glob	test/tsan/load_shared_lib.cc	/^void *write_glob(void *unused) {$/;"	f
write_mutex_thread	lib/tsan/tests/unit/tsan_mutex_test.cc	/^static void *write_mutex_thread(void *param) {$/;"	f	namespace:__tsan
write_shadow	test/cfi/cross-dso/shadow_is_read_only.cpp	/^void write_shadow(void *ptr) {$/;"	f
write_string	lib/profile/GCDAProfiling.c	/^static void write_string(const char *s) {$/;"	f	file:
write_string_to_stdout	test/dfsan/write_callback.c	/^static void write_string_to_stdout(char *string) {$/;"	f	file:
write_trampoline_t	lib/dfsan/dfsan_custom.cc	/^typedef void (*write_trampoline_t)($/;"	t	file:
writeout_fn_list	lib/profile/GCDAProfiling.c	/^struct fn_list writeout_fn_list;$/;"	v	typeref:struct:fn_list
x	lib/asan/asan_malloc_linux.cc	/^  int x[10];$/;"	m	struct:fake_mallinfo	file:
x	lib/asan/tests/asan_racy_double_free_test.cc	/^void *x[N];$/;"	v
x	lib/asan/tests/asan_test.cc	/^  int x;$/;"	m	struct:Packed5	file:
x	lib/builtins/ppc/DD.h	/^	uint64_t x;$/;"	m	union:__anon111
x	lib/lsan/lsan_interceptors.cc	/^  int x[10];$/;"	m	struct:std::fake_mallinfo	file:
x	lib/msan/tests/msan_test.cc	/^  S4 x[10];$/;"	m	struct:LargeStruct	file:
x	lib/msan/tests/msan_test.cc	/^  volatile unsigned x : 1;$/;"	m	struct:VolatileBitfieldStruct	file:
x	test/asan/TestCases/Darwin/asan_gen_prefixes.cc	/^int x, y, z;$/;"	v
x	test/asan/TestCases/Linux/initialization-bug-any-order.cc	/^static int x = initX();$/;"	v	file:
x	test/asan/TestCases/Linux/malloc_delete_mismatch.cc	/^static volatile char *x;$/;"	v	file:
x	test/asan/TestCases/Linux/new_delete_mismatch.cc	/^static volatile char *x;$/;"	v	file:
x	test/asan/TestCases/Linux/nohugepage_test.cc	/^char *x;$/;"	v
x	test/asan/TestCases/Linux/odr_c_test.c	/^__attribute__((aligned(8))) int x;$/;"	v
x	test/asan/TestCases/Linux/rlimit_mmap_test.cc	/^static volatile void *x;$/;"	v	file:
x	test/asan/TestCases/Linux/stack-overflow-sigbus.cc	/^volatile char x;$/;"	v
x	test/asan/TestCases/Posix/deep_thread_stack.cc	/^int *x;$/;"	v
x	test/asan/TestCases/Posix/new_array_cookie_test.cc	/^  int x;$/;"	m	struct:C	file:
x	test/asan/TestCases/Posix/new_array_cookie_uaf_test.cc	/^  int x;$/;"	m	struct:C	file:
x	test/asan/TestCases/Posix/no_asan_gen_globals.c	/^int x, y, z;$/;"	v
x	test/asan/TestCases/Posix/stack-overflow.cc	/^volatile char x;$/;"	v
x	test/asan/TestCases/Windows/dll_operator_array_new_with_dtor_left_oob.cc	/^  int x;$/;"	m	struct:C	file:
x	test/asan/TestCases/Windows/dll_report_globals_symbolization_at_startup.cc	/^int x[42];$/;"	v
x	test/asan/TestCases/Windows/dll_stack_use_after_return.cc	/^char *x;$/;"	v
x	test/asan/TestCases/Windows/operator_array_new_with_dtor_left_oob.cc	/^  int x;$/;"	m	struct:C	file:
x	test/asan/TestCases/Windows/stack_use_after_return.cc	/^char *x;$/;"	v
x	test/asan/TestCases/initialization-blacklist.cc	/^int x = readBadGlobal();  \/\/ init-order bug.$/;"	v
x	test/asan/TestCases/initialization-bug.cc	/^static int x = initX();$/;"	v	file:
x	test/asan/TestCases/poison_partial.cc	/^char *x;$/;"	v
x	test/asan/TestCases/pr33372.cc	/^struct A { int x, y, z; };$/;"	m	struct:A	file:
x	test/asan/TestCases/scariness_score_test.cc	/^  char x[32];$/;"	m	struct:S32	file:
x	test/asan/TestCases/speculative_load2.cc	/^    short x;$/;"	m	struct:__anon136::__anon137	file:
x	test/builtins/Unit/divdc3_test.c	/^double x[][2] =$/;"	v
x	test/builtins/Unit/divsc3_test.c	/^float x[][2] =$/;"	v
x	test/builtins/Unit/divtc3_test.c	/^long double x[][2] =$/;"	v
x	test/builtins/Unit/divxc3_test.c	/^long double x[][2] =$/;"	v
x	test/builtins/Unit/muldc3_test.c	/^double x[][2] =$/;"	v
x	test/builtins/Unit/mulsc3_test.c	/^float x[][2] =$/;"	v
x	test/builtins/Unit/multc3_test.c	/^long double x[][2] =$/;"	v
x	test/builtins/Unit/mulxc3_test.c	/^long double x[][2] =$/;"	v
x	test/esan/TestCases/struct-simple.cpp	/^    int x;$/;"	m	struct:C::__anon133	file:
x	test/esan/TestCases/struct-simple.cpp	/^    int x;$/;"	m	struct:D::__anon132	file:
x	test/esan/TestCases/struct-simple.cpp	/^  int x;$/;"	m	struct:A	file:
x	test/fuzzer/PrintUnstableStatsTest.cpp	/^int x = 0;$/;"	v
x	test/msan/chained_origin.cc	/^volatile int x, y;$/;"	v
x	test/msan/chained_origin_empty_stack.cc	/^volatile int x;$/;"	v
x	test/msan/chained_origin_with_signals.cc	/^volatile int x, y;$/;"	v
x	test/msan/dtor-derived-class.cc	/^  int x;$/;"	m	struct:Base	file:
x	test/msan/dtor-multiple-inheritance.cc	/^  int x;$/;"	m	class:A	file:
x	test/msan/dtor-vtable-multiple-inheritance.cc	/^  int x;$/;"	m	class:A	file:
x	test/msan/dtor-vtable.cc	/^  int x;$/;"	m	class:A	file:
x	test/msan/insertvalue_origin.cc	/^ int64_t x;$/;"	m	struct:mypair	file:
x	test/msan/param_tls_limit.cc	/^  char x[N];$/;"	m	struct:S	file:
x	test/msan/tls_reuse.cc	/^int __thread x;$/;"	v
x	test/sanitizer_common/TestCases/Linux/pthread_mutex.cc	/^int x;$/;"	v
x	test/sanitizer_common/TestCases/malloc_hook.cc	/^volatile int *x;$/;"	v
x	test/tsan/Linux/mutex_robust2.cc	/^int x;$/;"	v
x	test/tsan/bench_acquire_only.cc	/^int x;$/;"	v
x	test/tsan/bench_acquire_release.cc	/^int x;$/;"	v
x	test/tsan/bench_mutex.cc	/^int x;$/;"	v
x	test/tsan/bench_release_only.cc	/^int *x;$/;"	v
x	test/tsan/bench_single_writer.cc	/^int x;$/;"	v
x	test/tsan/cond.c	/^int x;$/;"	v
x	test/tsan/cond_cancel.c	/^int x;$/;"	v
x	test/tsan/global_race2.cc	/^int x;$/;"	v
x	test/tsan/inlined_memcpy_race.cc	/^int x[4], z[4];$/;"	v
x	test/tsan/restore_stack.cc	/^volatile int x;$/;"	v
x	test/tsan/static_init1.cc	/^  int x;$/;"	m	struct:P	file:
x	test/tsan/static_init2.cc	/^  int x;$/;"	m	struct:Cache	file:
x	test/tsan/static_init3.cc	/^  int x;$/;"	m	struct:Cache	file:
x	test/tsan/static_init4.cc	/^  int x;$/;"	m	struct:Cache	file:
x	test/tsan/static_init5.cc	/^  int x;$/;"	m	struct:Cache	file:
x	test/tsan/static_init6.cc	/^  int x;$/;"	m	struct:Cache	file:
x	test/tsan/thread_detach2.c	/^int x;$/;"	v
x_	lib/tsan/rtl/tsan_rtl.h	/^  u64 x_;$/;"	m	class:__tsan::FastState
x_	test/fuzzer/UseAfterDtor.cpp	/^  int x_;$/;"	m	struct:Simple	file:
x_	test/msan/dtor-member.cc	/^  int x_;$/;"	m	struct:Simple	file:
x_	test/msan/use-after-dtor.cc	/^  int x_;$/;"	m	struct:Simple	file:
x_base	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    uptr x_base;$/;"	m	struct:__sanitizer::__sanitizer_XDR
x_base	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  uptr x_base;$/;"	m	struct:__sanitizer::__sanitizer_XDR
x_handy	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    unsigned x_handy;$/;"	m	struct:__sanitizer::__sanitizer_XDR
x_handy	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned x_handy;$/;"	m	struct:__sanitizer::__sanitizer_XDR
x_op	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    int x_op;$/;"	m	struct:__sanitizer::__sanitizer_XDR
x_op	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int x_op;$/;"	m	struct:__sanitizer::__sanitizer_XDR
x_ops	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    void *x_ops;$/;"	m	struct:__sanitizer::__sanitizer_XDR
x_ops	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  void *x_ops;$/;"	m	struct:__sanitizer::__sanitizer_XDR
x_private	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    uptr x_private;$/;"	m	struct:__sanitizer::__sanitizer_XDR
x_private	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  uptr x_private;$/;"	m	struct:__sanitizer::__sanitizer_XDR
x_ptr	test/msan/dtor-base-access.cc	/^  int *x_ptr;$/;"	m	class:Base	file:
x_public	lib/sanitizer_common/sanitizer_platform_limits_posix.h	/^    uptr x_public;$/;"	m	struct:__sanitizer::__sanitizer_XDR
x_public	lib/sanitizer_common/sanitizer_platform_limits_solaris.h	/^  uptr x_public;$/;"	m	struct:__sanitizer::__sanitizer_XDR
xdl_iterate_phdr	lib/sanitizer_common/sanitizer_freebsd.h	129;"	d
xdl_iterate_phdr_t	lib/sanitizer_common/sanitizer_freebsd.h	/^typedef int xdl_iterate_phdr_t(__xdl_iterate_hdr_callback, void*);$/;"	t	namespace:__sanitizer
xdl_phdr_info	lib/sanitizer_common/sanitizer_freebsd.h	/^struct xdl_phdr_info {$/;"	s	namespace:__sanitizer
xhi	test/builtins/Unit/ppc/fixtfdi_test.c	/^struct testVector { double xhi; double xlo; int64_t result; };$/;"	m	struct:testVector	file:
xhi	test/builtins/Unit/ppc/qadd_test.c	/^	double xhi; double xlo;$/;"	m	struct:testVector	file:
xhi	test/builtins/Unit/ppc/qdiv_test.c	/^	double xhi; double xlo;$/;"	m	struct:testVector	file:
xhi	test/builtins/Unit/ppc/qmul_test.c	/^	double xhi; double xlo;$/;"	m	struct:testVector	file:
xhi	test/builtins/Unit/ppc/qsub_test.c	/^	double xhi; double xlo;$/;"	m	struct:testVector	file:
xkinfo_vmentry	lib/sanitizer_common/sanitizer_freebsd.h	/^struct xkinfo_vmentry {$/;"	s	namespace:__sanitizer
xlo	test/builtins/Unit/ppc/fixtfdi_test.c	/^struct testVector { double xhi; double xlo; int64_t result; };$/;"	m	struct:testVector	file:
xlo	test/builtins/Unit/ppc/qadd_test.c	/^	double xhi; double xlo;$/;"	m	struct:testVector	file:
xlo	test/builtins/Unit/ppc/qdiv_test.c	/^	double xhi; double xlo;$/;"	m	struct:testVector	file:
xlo	test/builtins/Unit/ppc/qmul_test.c	/^	double xhi; double xlo;$/;"	m	struct:testVector	file:
xlo	test/builtins/Unit/ppc/qsub_test.c	/^	double xhi; double xlo;$/;"	m	struct:testVector	file:
xmcontext_t	lib/sanitizer_common/sanitizer_freebsd.h	/^} xmcontext_t;$/;"	t	namespace:__sanitizer	typeref:struct:__sanitizer::__xmcontext
xor_4	lib/builtins/arm/sync_fetch_and_xor_4.S	/^#define xor_4(rD, rN, rM)  eor rD, rN, rM$/;"	d
xor_8	lib/builtins/arm/sync_fetch_and_xor_8.S	/^#define xor_8(rD_LO, rD_HI, rN_LO, rN_HI, rM_LO, rM_HI) \\$/;"	d
xorshift	lib/hwasan/hwasan_thread.cc	/^static u32 xorshift(u32 state) {$/;"	f	namespace:__hwasan
xray_basic_flags_dont_use_directly	lib/xray/xray_basic_flags.cc	/^BasicFlags xray_basic_flags_dont_use_directly;$/;"	m	namespace:__xray	file:
xray_fdr_flags_dont_use_directly	lib/xray/xray_fdr_flags.cc	/^FDRFlags xray_fdr_flags_dont_use_directly; \/\/ use via fdrFlags().$/;"	m	namespace:__xray	file:
xray_flags_dont_use_directly	lib/xray/xray_flags.cc	/^Flags xray_flags_dont_use_directly; \/\/ use via flags().$/;"	m	namespace:__xray	file:
xray_profiling_flags_dont_use_directly	lib/xray/xray_profiling_flags.cc	/^ProfilerFlags xray_profiling_flags_dont_use_directly;$/;"	m	namespace:__xray	file:
xucontext_t	lib/sanitizer_common/sanitizer_freebsd.h	/^} xucontext_t;$/;"	t	namespace:__sanitizer	typeref:struct:__sanitizer::__xucontext
xx	test/msan/chained_origin_memcpy.cc	/^int xx[10000];$/;"	v
y	lib/msan/tests/msan_test.cc	/^  unsigned y : 1;$/;"	m	struct:VolatileBitfieldStruct	file:
y	test/asan/TestCases/Darwin/asan_gen_prefixes.cc	/^int x, y, z;$/;"	v
y	test/asan/TestCases/Helpers/initialization-bug-extra.cc	/^int y = initY();$/;"	v
y	test/asan/TestCases/Helpers/initialization-bug-extra2.cc	/^int y = initY();$/;"	v
y	test/asan/TestCases/Linux/odr_c_test.c	/^__attribute__((aligned(1))) char y;$/;"	v
y	test/asan/TestCases/Linux/stack-overflow-sigbus.cc	/^volatile int y = 1;$/;"	v
y	test/asan/TestCases/Posix/no_asan_gen_globals.c	/^int x, y, z;$/;"	v
y	test/asan/TestCases/Posix/stack-overflow.cc	/^volatile int y = 1;$/;"	v
y	test/asan/TestCases/initialization-blacklist.cc	/^int y = accessBadObject();  \/\/ init-order bug.$/;"	v
y	test/asan/TestCases/pr33372.cc	/^struct A { int x, y, z; };$/;"	m	struct:A	file:
y	test/asan/TestCases/speculative_load2.cc	/^    short y;$/;"	m	struct:__anon136::__anon137	file:
y	test/esan/TestCases/struct-simple.cpp	/^    int y;$/;"	m	struct:C::__anon133	file:
y	test/esan/TestCases/struct-simple.cpp	/^    int y;$/;"	m	struct:D::__anon132	file:
y	test/esan/TestCases/struct-simple.cpp	/^  int y;$/;"	m	struct:A	file:
y	test/msan/chained_origin.cc	/^volatile int x, y;$/;"	v
y	test/msan/chained_origin_with_signals.cc	/^volatile int x, y;$/;"	v
y	test/msan/dtor-base-access.cc	/^  int y;$/;"	m	class:Derived	file:
y	test/msan/dtor-derived-class.cc	/^  int y;$/;"	m	struct:Derived	file:
y	test/msan/dtor-multiple-inheritance.cc	/^  int y;$/;"	m	struct:B	file:
y	test/msan/dtor-vtable-multiple-inheritance.cc	/^  int y;$/;"	m	class:B	file:
y	test/msan/dtor-vtable.cc	/^  int y;$/;"	m	class:B	file:
y	test/msan/insertvalue_origin.cc	/^ int y;$/;"	m	struct:mypair	file:
y	test/tsan/inlined_memcpy_race2.cc	/^int y[4], z[4];$/;"	v
y	test/tsan/static_init1.cc	/^  int y;$/;"	m	struct:P	file:
yhi	test/builtins/Unit/ppc/qadd_test.c	/^	double yhi; double ylo;$/;"	m	struct:testVector	file:
yhi	test/builtins/Unit/ppc/qdiv_test.c	/^	double yhi; double ylo;$/;"	m	struct:testVector	file:
yhi	test/builtins/Unit/ppc/qmul_test.c	/^	double yhi; double ylo;$/;"	m	struct:testVector	file:
yhi	test/builtins/Unit/ppc/qsub_test.c	/^	double yhi; double ylo;$/;"	m	struct:testVector	file:
ylo	test/builtins/Unit/ppc/qadd_test.c	/^	double yhi; double ylo;$/;"	m	struct:testVector	file:
ylo	test/builtins/Unit/ppc/qdiv_test.c	/^	double yhi; double ylo;$/;"	m	struct:testVector	file:
ylo	test/builtins/Unit/ppc/qmul_test.c	/^	double yhi; double ylo;$/;"	m	struct:testVector	file:
ylo	test/builtins/Unit/ppc/qsub_test.c	/^	double yhi; double ylo;$/;"	m	struct:testVector	file:
yy	test/msan/chained_origin_memcpy.cc	/^int yy[10000];$/;"	v
z	lib/sanitizer_common/tests/sanitizer_libc_test.cc	/^  unsigned char z;$/;"	m	struct:stat_and_more	file:
z	test/asan/TestCases/Darwin/asan_gen_prefixes.cc	/^int x, y, z;$/;"	v
z	test/asan/TestCases/Posix/no_asan_gen_globals.c	/^int x, y, z;$/;"	v
z	test/asan/TestCases/initialization-blacklist.cc	/^int z = readBadSrcGlobal();  \/\/ init-order bug.$/;"	v
z	test/asan/TestCases/initialization-bug.cc	/^int z = initZ();$/;"	v
z	test/asan/TestCases/pr33372.cc	/^struct A { int x, y, z; };$/;"	m	struct:A	file:
z	test/builtins/Unit/arm/call_apsr.h	/^        uint32_t z: 1;$/;"	m	struct:cpsr::__anon152
z	test/esan/TestCases/struct-simple.cpp	/^    int z;$/;"	m	struct:D::__anon132	file:
z	test/msan/dtor-multiple-inheritance.cc	/^  int z;$/;"	m	struct:C	file:
z	test/msan/dtor-vtable-multiple-inheritance.cc	/^  int z;$/;"	m	class:C	file:
z	test/msan/dtor-vtable.cc	/^  int z;$/;"	m	class:C	file:
z	test/msan/getaddrinfo-positive.cc	/^volatile int z;$/;"	v
z	test/tsan/inlined_memcpy_race.cc	/^int x[4], z[4];$/;"	v
z	test/tsan/inlined_memcpy_race2.cc	/^int y[4], z[4];$/;"	v
z0	test/asan/TestCases/Posix/stack-overflow.cc	/^volatile int z0, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11, z12, z13;$/;"	v
z1	test/asan/TestCases/Posix/stack-overflow.cc	/^volatile int z0, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11, z12, z13;$/;"	v
z10	test/asan/TestCases/Posix/stack-overflow.cc	/^volatile int z0, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11, z12, z13;$/;"	v
z11	test/asan/TestCases/Posix/stack-overflow.cc	/^volatile int z0, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11, z12, z13;$/;"	v
z12	test/asan/TestCases/Posix/stack-overflow.cc	/^volatile int z0, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11, z12, z13;$/;"	v
z13	test/asan/TestCases/Posix/stack-overflow.cc	/^volatile int z0, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11, z12, z13;$/;"	v
z2	test/asan/TestCases/Posix/stack-overflow.cc	/^volatile int z0, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11, z12, z13;$/;"	v
z3	test/asan/TestCases/Posix/stack-overflow.cc	/^volatile int z0, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11, z12, z13;$/;"	v
z4	test/asan/TestCases/Posix/stack-overflow.cc	/^volatile int z0, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11, z12, z13;$/;"	v
z5	test/asan/TestCases/Posix/stack-overflow.cc	/^volatile int z0, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11, z12, z13;$/;"	v
z6	test/asan/TestCases/Posix/stack-overflow.cc	/^volatile int z0, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11, z12, z13;$/;"	v
z7	test/asan/TestCases/Posix/stack-overflow.cc	/^volatile int z0, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11, z12, z13;$/;"	v
z8	test/asan/TestCases/Posix/stack-overflow.cc	/^volatile int z0, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11, z12, z13;$/;"	v
z9	test/asan/TestCases/Posix/stack-overflow.cc	/^volatile int z0, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11, z12, z13;$/;"	v
zero	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^       zero = #0$/;"	d
zero	lib/builtins/hexagon/fastmath2_dlib_asm.S	/^#define zero  R2$/;"	d
zero	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^        zero = #0$/;"	d
zero	lib/builtins/hexagon/fastmath2_ldlib_asm.S	/^#define zero       R3:2$/;"	d
zero	lib/builtins/hexagon/fastmath_dlib_asm.S	/^        zero = #0$/;"	d
zero	lib/builtins/hexagon/fastmath_dlib_asm.S	/^#define zero       R7:6$/;"	d
zero	test/asan/TestCases/throw_call_test.cc	/^static volatile int zero = 0;$/;"	v	file:
zero	test/asan/TestCases/throw_invoke_test.cc	/^static volatile int zero = 0;$/;"	v	file:
zero	test/builtins/Unit/divdc3_test.c	/^enum {zero, non_zero, inf, NaN, non_zero_nan};$/;"	e	enum:__anon149	file:
zero	test/builtins/Unit/divsc3_test.c	/^enum {zero, non_zero, inf, NaN, non_zero_nan};$/;"	e	enum:__anon151	file:
zero	test/builtins/Unit/divtc3_test.c	/^enum {zero, non_zero, inf, NaN, non_zero_nan};$/;"	e	enum:__anon148	file:
zero	test/builtins/Unit/divxc3_test.c	/^enum {zero, non_zero, inf, NaN, non_zero_nan};$/;"	e	enum:__anon155	file:
zero	test/builtins/Unit/muldc3_test.c	/^enum {zero, non_zero, inf, NaN, non_zero_nan};$/;"	e	enum:__anon147	file:
zero	test/builtins/Unit/mulsc3_test.c	/^enum {zero, non_zero, inf, NaN, non_zero_nan};$/;"	e	enum:__anon157	file:
zero	test/builtins/Unit/multc3_test.c	/^enum {zero, non_zero, inf, NaN, non_zero_nan};$/;"	e	enum:__anon150	file:
zero	test/builtins/Unit/mulxc3_test.c	/^enum {zero, non_zero, inf, NaN, non_zero_nan};$/;"	e	enum:__anon156	file:
zero	test/sanitizer_common/TestCases/Posix/sanitizer_set_death_callback_test.cc	/^volatile char *zero = 0;$/;"	v
zero0	lib/builtins/hexagon/fastmath_dlib_asm.S	/^        zero0 = #0$/;"	d
zero0	lib/builtins/hexagon/fastmath_dlib_asm.S	/^#define zero0      R7:6$/;"	d
zero0l	lib/builtins/hexagon/fastmath_dlib_asm.S	/^#define zero0l     R6$/;"	d
zeroNaN	lib/builtins/ppc/multc3.c	13;"	d	file:
zero_init	test/asan/TestCases/Helpers/initialization-blacklist-extra.cc	/^int zero_init() { return 0; }$/;"	f
zerol	lib/builtins/hexagon/fastmath_dlib_asm.S	/^#define zerol      R6$/;"	d
~A	test/asan/TestCases/Windows/demangled_names.cc	/^A<char*>::~A() {$/;"	f	class:A
~A	test/asan/TestCases/init-order-atexit.cc	/^  ~A() { AccessC(); printf("PASSED\\n"); }$/;"	f	class:A
~A	test/cfi/base-derived-destructor.cpp	/^  virtual ~A() {$/;"	f	class:A
~A	test/cfi/vdtor.cpp	/^A::~A() {}$/;"	f	class:A
~A	test/msan/cxa_atexit.cc	/^  ~A() {$/;"	f	class:A
~A	test/msan/dtor-multiple-inheritance.cc	/^  virtual ~A() {$/;"	f	class:A
~A	test/msan/dtor-vtable-multiple-inheritance.cc	/^  virtual ~A() {$/;"	f	class:A
~A	test/msan/dtor-vtable.cc	/^  ~A() {}$/;"	f	class:A
~A	test/tsan/vptr_benign_race.cc	/^  virtual ~A() {$/;"	f	struct:A
~A	test/tsan/vptr_harmful_race.cc	/^  virtual ~A() {$/;"	f	struct:A
~A	test/tsan/vptr_harmful_race2.cc	/^  virtual ~A() {$/;"	f	struct:A
~A	test/tsan/vptr_harmful_race3.cc	/^  virtual ~A() {$/;"	f	struct:A
~A	test/tsan/vptr_harmful_race4.cc	/^  virtual ~A() {$/;"	f	struct:A
~A	test/ubsan/TestCases/TypeCheck/vptr-virtual-base-construction.cpp	/^struct A { virtual ~A() {} };$/;"	f	struct:A
~Allocators	lib/xray/xray_function_call_trie.h	/^    ~Allocators() {$/;"	f	struct:__xray::FunctionCallTrie::Allocators
~Anon	test/msan/dtor-bit-fields.cc	/^  ~Anon() {}$/;"	f	struct:Anon
~AtExit	lib/sanitizer_common/tests/sanitizer_allocator_testlib.cc	/^  ~AtExit() {$/;"	f	struct:__anon59::AtExit
~B	test/asan/TestCases/init-order-atexit.cc	/^  ~B() { }$/;"	f	class:B
~B	test/cfi/base-derived-destructor.cpp	/^  virtual ~B() { }$/;"	f	class:B
~B	test/cfi/vdtor.cpp	/^B::~B() {}$/;"	f	class:B
~B	test/msan/dtor-multiple-inheritance.cc	/^  virtual ~B() {$/;"	f	struct:B
~B	test/msan/dtor-vtable-multiple-inheritance.cc	/^  virtual ~B() {}$/;"	f	class:B
~B	test/msan/dtor-vtable.cc	/^  ~B() {}$/;"	f	class:B
~B	test/tsan/vptr_benign_race.cc	/^  virtual ~B() {$/;"	f	struct:B
~B	test/tsan/vptr_harmful_race.cc	/^  virtual ~B() { }$/;"	f	struct:B
~B	test/tsan/vptr_harmful_race2.cc	/^  virtual ~B() { }$/;"	f	struct:B
~B	test/tsan/vptr_harmful_race3.cc	/^  virtual ~B() { }$/;"	f	struct:B
~Base	test/msan/dtor-base-access.cc	/^Base::~Base() {$/;"	f	class:Base
~Base	test/msan/dtor-derived-class.cc	/^  virtual ~Base() {}$/;"	f	struct:Base
~Base	test/msan/dtor-multiple-inheritance-nontrivial-class-members.cc	/^  virtual ~Base() {$/;"	f	struct:Base
~Base	test/profile/Linux/coverage_dtor.cpp	/^  ~Base() { g -= B; }$/;"	f	struct:Base
~BlockingCall	lib/tsan/rtl/tsan_interceptors.cc	/^  ~BlockingCall() {$/;"	f	struct:BlockingCall
~BufferQueue	lib/xray/xray_buffer_queue.cc	/^BufferQueue::~BufferQueue() {$/;"	f	class:BufferQueue
~C	test/asan/TestCases/Helpers/init-order-atexit-extra.cc	/^  ~C() { }$/;"	f	class:C
~C	test/asan/TestCases/Posix/new_array_cookie_test.cc	/^  ~C() {$/;"	f	struct:C
~C	test/asan/TestCases/Posix/new_array_cookie_uaf_test.cc	/^  ~C() {$/;"	f	struct:C
~C	test/asan/TestCases/Windows/dll_operator_array_new_with_dtor_left_oob.cc	/^  ~C() {}$/;"	f	struct:C
~C	test/asan/TestCases/Windows/operator_array_new_with_dtor_left_oob.cc	/^  ~C() {}$/;"	f	struct:C
~C	test/msan/dtor-multiple-inheritance.cc	/^  virtual ~C() {$/;"	f	struct:C
~C	test/msan/dtor-vtable-multiple-inheritance.cc	/^  ~C() {}$/;"	f	class:C
~C	test/msan/dtor-vtable.cc	/^  ~C() {}$/;"	f	class:C
~C	test/ubsan/TestCases/TypeCheck/vptr-virtual-base-construction.cpp	/^struct C: virtual A { ~C() { n = 0; } };$/;"	f	struct:C
~CircularBuffer	lib/esan/esan_circular_buffer.h	/^  ~CircularBuffer() {$/;"	f	class:__esan::CircularBuffer
~ClassWithDestructor	test/tsan/exceptions.cc	/^  ~ClassWithDestructor() {$/;"	f	class:ClassWithDestructor
~Closer	test/tsan/dlclose.cc	/^  ~Closer() {$/;"	f	struct:Closer
~Command	lib/fuzzer/FuzzerCommand.h	/^  ~Command() {}$/;"	f	class:fuzzer::final
~D	test/msan/dtor-vtable-multiple-inheritance.cc	/^  ~D() {}$/;"	f	class:D
~D1	test/asan/TestCases/Linux/sized_delete_test.cc	/^  ~D1() { fprintf(stderr, "D1::~D1\\n"); }$/;"	f	struct:D1
~D2	test/asan/TestCases/Linux/sized_delete_test.cc	/^  ~D2() { fprintf(stderr, "D2::~D2\\n"); }$/;"	f	struct:D2
~DenseSlabAlloc	lib/tsan/rtl/tsan_dense_alloc.h	/^  ~DenseSlabAlloc() {$/;"	f	class:__tsan::DenseSlabAlloc
~Derived	test/msan/dtor-base-access.cc	/^Derived::~Derived() {$/;"	f	class:Derived
~Derived	test/msan/dtor-derived-class.cc	/^  ~Derived() {}$/;"	f	struct:Derived
~Derived	test/msan/dtor-multiple-inheritance-nontrivial-class-members.cc	/^  ~Derived() {$/;"	f	struct:Derived
~Derived	test/msan/dtor-multiple-inheritance.cc	/^  ~Derived() {$/;"	f	class:Derived
~Derived	test/msan/dtor-trivial-class-members.cc	/^  ~Derived() {$/;"	f	struct:Derived
~Diag	lib/ubsan/ubsan_diag.cc	/^Diag::~Diag() {$/;"	f	class:Diag
~E	test/msan/dtor-vtable-multiple-inheritance.cc	/^  ~E() {}$/;"	f	class:E
~Empty	test/msan/dtor-bit-fields.cc	/^  ~Empty() {}$/;"	f	struct:Empty
~FileCloser	lib/sanitizer_common/sanitizer_file.h	/^  ~FileCloser() { CloseFile(fd); }$/;"	f	struct:__sanitizer::FileCloser
~Foo	test/asan/TestCases/Posix/new_array_cookie_with_new_from_class.cc	/^Foo::~Foo() {}$/;"	f	class:Foo
~Foo	test/asan/TestCases/intra-object-overflow.cc	/^  virtual ~Foo() {$/;"	f	class:Foo
~Fuzzer	lib/fuzzer/FuzzerLoop.cpp	/^Fuzzer::~Fuzzer() {}$/;"	f	class:fuzzer::Fuzzer
~GenericScopedLock	lib/sanitizer_common/sanitizer_mutex.h	/^  ~GenericScopedLock() {$/;"	f	class:__sanitizer::GenericScopedLock
~GenericScopedReadLock	lib/sanitizer_common/sanitizer_mutex.h	/^  ~GenericScopedReadLock() {$/;"	f	class:__sanitizer::GenericScopedReadLock
~Handle	lib/sanitizer_common/sanitizer_addrhashmap.h	/^AddrHashMap<T, kSize>::Handle::~Handle() {$/;"	f	class:__sanitizer::AddrHashMap::Handle
~HashTable	lib/esan/esan_hashtable.h	/^HashTable<KeyTy, DataTy, ExternalLock, HashFuncTy, EqualFuncTy>::~HashTable() {$/;"	f	class:__esan::HashTable
~InputCorpus	lib/fuzzer/FuzzerCorpus.h	/^  ~InputCorpus() {$/;"	f	class:fuzzer::InputCorpus
~IntHolder	test/asan/TestCases/use-after-scope-dtor-order.cc	/^  ~IntHolder() {$/;"	f	struct:IntHolder
~InterceptorScope	lib/hwasan/hwasan_interceptors.cc	/^  ~InterceptorScope() {$/;"	f	struct:InterceptorScope
~InterceptorScope	lib/msan/msan_interceptors.cc	/^  ~InterceptorScope() { --in_interceptor_scope; }$/;"	f	struct:InterceptorScope
~Intermediate	test/msan/dtor-multiple-inheritance-nontrivial-class-members.cc	/^  virtual ~Intermediate() {$/;"	f	struct:Intermediate
~InternalMmapVector	lib/sanitizer_common/sanitizer_common.h	/^  ~InternalMmapVector() { InternalMmapVectorNoCtor<T>::Destroy(); }$/;"	f	class:__sanitizer::InternalMmapVector
~LeakyGlobal	test/lsan/TestCases/do_leak_check_override.cc	/^  ~LeakyGlobal() {$/;"	f	struct:LeakyGlobal
~ListOfModules	lib/sanitizer_common/sanitizer_common.h	/^  ~ListOfModules() { clear(); }$/;"	f	class:__sanitizer::ListOfModules
~LockTest	test/tsan/deadlock_detector_stress_test.cc	/^  ~LockTest() {$/;"	f	class:LockTest
~Logger	test/tsan/atexit.cc	/^  ~Logger() {$/;"	f	class:Logger
~MemLoc	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^MemLoc::~MemLoc() {$/;"	f	class:MemLoc
~MemoryMappedSegment	lib/sanitizer_common/sanitizer_procmaps.h	/^  ~MemoryMappedSegment() {}$/;"	f	class:__sanitizer::MemoryMappedSegment
~MemoryMappingLayout	lib/sanitizer_common/sanitizer_procmaps_common.cc	/^MemoryMappingLayout::~MemoryMappingLayout() {$/;"	f	class:__sanitizer::MemoryMappingLayout
~MemoryMappingLayout	lib/sanitizer_common/sanitizer_procmaps_mac.cc	/^MemoryMappingLayout::~MemoryMappingLayout() {$/;"	f	class:__sanitizer::MemoryMappingLayout
~MutationDispatcher	lib/fuzzer/FuzzerMutate.h	/^  ~MutationDispatcher() {}$/;"	f	class:fuzzer::MutationDispatcher
~Mutex	lib/tsan/benchmarks/vts_many_threads_bench.cc	/^  ~Mutex() { pthread_mutex_destroy(&m_); }$/;"	f	class:Mutex
~Mutex	lib/tsan/rtl/tsan_mutex.cc	/^Mutex::~Mutex() {$/;"	f	class:__tsan::Mutex
~Mutex	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^Mutex::~Mutex() {$/;"	f	class:Mutex
~Mutex	test/tsan/custom_mutex.h	/^  ~Mutex() {$/;"	f	class:Mutex
~MyData	test/esan/Unit/hashtable.cpp	/^  ~MyData() {$/;"	f	class:MyData
~MyDataPayload	test/esan/Unit/hashtable.cpp	/^  ~MyDataPayload() {$/;"	f	struct:MyDataPayload
~Packed	test/msan/dtor-bit-fields.cc	/^  ~Packed() {}$/;"	f	struct:Packed
~PackedCounterArray	lib/sanitizer_common/sanitizer_allocator_primary64.h	/^    ~PackedCounterArray() {$/;"	f	class:SizeClassAllocator64::PackedCounterArray
~PthreadMutex	test/tsan/deadlock_detector_stress_test.cc	/^  ~PthreadMutex() {$/;"	f	class:PthreadMutex
~PthreadRWLock	test/tsan/deadlock_detector_stress_test.cc	/^  ~PthreadRWLock() {$/;"	f	class:PthreadRWLock
~PthreadSpinLock	test/tsan/deadlock_detector_stress_test.cc	/^  ~PthreadSpinLock() {$/;"	f	class:PthreadSpinLock
~RWMutex	lib/sanitizer_common/sanitizer_mutex.h	/^  ~RWMutex() {$/;"	f	class:__sanitizer::RWMutex
~RedZoneMemoryMapper	lib/sanitizer_common/tests/sanitizer_allocator_test.cc	/^  ~RedZoneMemoryMapper() {$/;"	f	class:RedZoneMemoryMapper
~RegisterSanStats	lib/stats/stats_client.cc	/^  ~RegisterSanStats() {$/;"	f	struct:__anon2::RegisterSanStats
~ReportDesc	lib/tsan/rtl/tsan_report.cc	/^ReportDesc::~ReportDesc() {$/;"	f	class:__tsan::ReportDesc
~RunOnDestruction	lib/fuzzer/FuzzerUtilFuchsia.cpp	/^  ~RunOnDestruction() { fn_(); }$/;"	f	class:fuzzer::RunOnDestruction
~RunOnDestruction	lib/sanitizer_common/sanitizer_common.h	/^  ~RunOnDestruction() { fn_(); }$/;"	f	class:__sanitizer::RunOnDestruction
~S	test/asan/TestCases/speculative_load.cc	/^  ~S() {$/;"	f	struct:S
~S	test/ubsan/TestCases/TypeCheck/vptr-corrupted-vtable-itanium.cpp	/^  ~S() {}$/;"	f	struct:S
~S	test/ubsan/TestCases/TypeCheck/vptr.cpp	/^S::~S() {$/;"	f	class:S
~ScopedAllocatorErrorReport	lib/sanitizer_common/sanitizer_allocator_report.cc	/^  ~ScopedAllocatorErrorReport() {$/;"	f	class:__sanitizer::ScopedAllocatorErrorReport
~ScopedAnnotation	lib/tsan/rtl/tsan_interface_ann.cc	/^  ~ScopedAnnotation() {$/;"	f	class:__tsan::ScopedAnnotation
~ScopedAtomic	lib/tsan/rtl/tsan_interface_atomic.cc	/^  ~ScopedAtomic() {$/;"	f	class:ScopedAtomic
~ScopedDD	lib/sanitizer_common/tests/sanitizer_deadlock_detector_test.cc	/^  ~ScopedDD() { delete dp; }$/;"	f	struct:ScopedDD
~ScopedDisableMsanInterceptorChecks	lib/fuzzer/FuzzerInternal.h	/^  ~ScopedDisableMsanInterceptorChecks() {$/;"	f	struct:fuzzer::ScopedDisableMsanInterceptorChecks
~ScopedDisabler	include/sanitizer/lsan_interface.h	/^  ~ScopedDisabler() { __lsan_enable(); }$/;"	f	class:__lsan::ScopedDisabler
~ScopedEnableMsanInterceptorChecks	lib/fuzzer/FuzzerInternal.h	/^  ~ScopedEnableMsanInterceptorChecks() {$/;"	f	struct:fuzzer::ScopedEnableMsanInterceptorChecks
~ScopedErrorReportLock	lib/sanitizer_common/sanitizer_symbolizer_report.cc	/^ScopedErrorReportLock::~ScopedErrorReportLock() {$/;"	f	class:__sanitizer::ScopedErrorReportLock
~ScopedFileCloserAndDeleter	lib/xray/tests/unit/fdr_logging_test.cc	/^  ~ScopedFileCloserAndDeleter() {$/;"	f	struct:__xray::__anon25::ScopedFileCloserAndDeleter
~ScopedGlobalProcessor	lib/tsan/rtl/tsan_mman.cc	/^ScopedGlobalProcessor::~ScopedGlobalProcessor() {$/;"	f	class:__tsan::ScopedGlobalProcessor
~ScopedHandle	lib/sanitizer_common/sanitizer_symbolizer_win.cc	/^  ~ScopedHandle() {$/;"	f	struct:__sanitizer::__anon78::ScopedHandle
~ScopedIgnoreInterceptors	lib/tsan/rtl/tsan_rtl.h	/^  ~ScopedIgnoreInterceptors() {$/;"	f	struct:__tsan::ScopedIgnoreInterceptors
~ScopedInErrorReport	lib/asan/asan_report.cc	/^  ~ScopedInErrorReport() {$/;"	f	class:__asan::ScopedInErrorReport
~ScopedInterceptor	lib/tsan/rtl/tsan_interceptors.cc	/^ScopedInterceptor::~ScopedInterceptor() {$/;"	f	class:ScopedInterceptor
~ScopedInterceptorDisabler	lib/lsan/lsan_common.h	/^  ~ScopedInterceptorDisabler() { EnableInThisThread(); }$/;"	f	struct:__lsan::ScopedInterceptorDisabler
~ScopedJavaFunc	lib/tsan/rtl/tsan_interface_java.cc	/^  ~ScopedJavaFunc() {$/;"	f	class:__tsan::ScopedJavaFunc
~ScopedReport	lib/tsan/rtl/tsan_rtl_report.cc	/^ScopedReport::~ScopedReport() {}$/;"	f	class:__tsan::ScopedReport
~ScopedReport	lib/ubsan/ubsan_diag.cc	/^ScopedReport::~ScopedReport() {$/;"	f	class:ScopedReport
~ScopedReportBase	lib/tsan/rtl/tsan_rtl_report.cc	/^ScopedReportBase::~ScopedReportBase() {$/;"	f	class:__tsan::ScopedReportBase
~ScopedSetTracerPID	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^  ~ScopedSetTracerPID() {$/;"	f	struct:__sanitizer::ScopedSetTracerPID
~ScopedStackSpaceWithGuard	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^  ~ScopedStackSpaceWithGuard() {$/;"	f	class:__sanitizer::ScopedStackSpaceWithGuard
~ScopedSyscall	lib/tsan/rtl/tsan_interceptors.cc	/^  ~ScopedSyscall() {$/;"	f	struct:ScopedSyscall
~ScopedThread	lib/tsan/tests/rtl/tsan_test_util_posix.cc	/^ScopedThread::~ScopedThread() {$/;"	f	class:ScopedThread
~ScopedThreadLocalStateBackup	lib/hwasan/hwasan.h	/^  ~ScopedThreadLocalStateBackup() { Restore(); }$/;"	f	class:__hwasan::ScopedThreadLocalStateBackup
~ScopedThreadLocalStateBackup	lib/msan/msan.h	/^  ~ScopedThreadLocalStateBackup() { Restore(); }$/;"	f	class:__msan::ScopedThreadLocalStateBackup
~ScopedUnwinding	lib/asan/asan_thread.h	/^  ~ScopedUnwinding() { thread->setUnwinding(false); }$/;"	f	class:__asan::ScopedUnwinding
~SidelineThread	lib/esan/esan_sideline.h	/^  ~SidelineThread() {}$/;"	f	class:__esan::SidelineThread
~SignalHandlerScope	lib/msan/msan_interceptors.cc	/^  ~SignalHandlerScope() {$/;"	f	class:SignalHandlerScope
~Simple	test/fuzzer/UseAfterDtor.cpp	/^  ~Simple() {$/;"	f	struct:Simple
~Simple	test/msan/dtor-bit-fields.cc	/^  ~Simple() {}$/;"	f	struct:Simple
~Simple	test/msan/dtor-member.cc	/^  ~Simple() { }$/;"	f	struct:Simple
~Simple	test/msan/use-after-dtor.cc	/^  ~Simple() {$/;"	f	struct:Simple
~StopTheWorldScope	lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	/^  ~StopTheWorldScope() {$/;"	f	class:__sanitizer::StopTheWorldScope
~StructWithDtor	lib/msan/tests/msan_test.cc	/^NOINLINE StructWithDtor::~StructWithDtor() {$/;"	f	class:StructWithDtor
~StructWithDtor	test/asan/TestCases/initialization-nobug.cc	/^  ~StructWithDtor() { }$/;"	f	struct:StructWithDtor
~SymbolizedStackHolder	lib/ubsan/ubsan_diag.h	/^  ~SymbolizedStackHolder() { clear(); }$/;"	f	class:__ubsan::SymbolizedStackHolder
~SymbolizerScope	lib/hwasan/hwasan.h	/^  ~SymbolizerScope() { ExitSymbolizer(); }$/;"	f	struct:__hwasan::SymbolizerScope
~SymbolizerScope	lib/msan/msan.h	/^  ~SymbolizerScope() { ExitSymbolizer(); }$/;"	f	struct:__msan::SymbolizerScope
~SymbolizerScope	lib/sanitizer_common/sanitizer_symbolizer.cc	/^Symbolizer::SymbolizerScope::~SymbolizerScope() {$/;"	f	class:__sanitizer::Symbolizer::SymbolizerScope
~SyncClock	lib/tsan/rtl/tsan_clock.cc	/^SyncClock::~SyncClock() {$/;"	f	class:__tsan::SyncClock
~T	test/lsan/TestCases/new_array_with_dtor_0.cc	/^  ~T() { printf("~T\\n"); }$/;"	f	struct:T
~TempFstabFile	lib/msan/tests/msan_test.cc	/^   ~TempFstabFile() {$/;"	f	class:TempFstabFile
~TestObject	test/BlocksRuntime/copyconstructor.C	/^TestObject::~TestObject()$/;"	f	class:TestObject
~TestObject	test/BlocksRuntime/reference.C	/^TestObject::~TestObject()$/;"	f	class:TestObject
~ThreadContext	lib/tsan/rtl/tsan_rtl_thread.cc	/^ThreadContext::~ThreadContext() {$/;"	f	class:__tsan::ThreadContext
~ThreadContextBase	lib/sanitizer_common/sanitizer_thread_registry.cc	/^ThreadContextBase::~ThreadContextBase() {$/;"	f	class:__sanitizer::ThreadContextBase
~ThreadLister	lib/sanitizer_common/sanitizer_linux.cc	/^ThreadLister::~ThreadLister() {$/;"	f	class:__sanitizer::ThreadLister
~TidReporterArgument	lib/sanitizer_common/tests/sanitizer_linux_test.cc	/^  ~TidReporterArgument() {$/;"	f	struct:__sanitizer::TidReporterArgument
~TimerQ	lib/fuzzer/FuzzerUtilWindows.cpp	/^  ~TimerQ() {$/;"	f	class:fuzzer::TimerQ
~TraceLock	lib/fuzzer/FuzzerLoop.cpp	/^  ~TraceLock() { AllocTracer.TraceDisabled = !AllocTracer.TraceDisabled; }$/;"	f	class:fuzzer::TraceLock
~VarSizeStackTrace	lib/tsan/rtl/tsan_stack_trace.cc	/^VarSizeStackTrace::~VarSizeStackTrace() {$/;"	f	class:__tsan::VarSizeStackTrace
~Vector	lib/sanitizer_common/sanitizer_vector.h	/^  ~Vector() {$/;"	f	class:__sanitizer::Vector
~Vector	test/msan/dtor-multiple-inheritance-nontrivial-class-members.cc	/^  ~Vector() {$/;"	f	class:Vector
~Vector	test/msan/dtor-trivial-class-members.cc	/^  ~Vector() {$/;"	f	class:Vector
~Vector	test/msan/dtor-trivial.cpp	/^  ~Vector() {}$/;"	f	class:Vector
~VirtualBase	test/msan/dtor-multiple-inheritance-nontrivial-class-members.cc	/^  virtual ~VirtualBase() {$/;"	f	struct:VirtualBase
~WriteReportOnExitOrSignal	lib/stats/stats.cc	/^  ~WriteReportOnExitOrSignal() {$/;"	f	struct:__anon4::WriteReportOnExitOrSignal
~X	test/ubsan/TestCases/TypeCheck/vptr-non-unique-typeinfo.cpp	/^  virtual ~X() {}$/;"	f	struct:X
