
./ssl/ssl_server:     file format elf64-x86-64


Disassembly of section .init:

0000000000400fb8 <_init>:
  400fb8:	48 83 ec 08          	sub    $0x8,%rsp
  400fbc:	48 8b 05 1d 20 05 00 	mov    0x5201d(%rip),%rax        # 452fe0 <__init_array_end+0x1e0>
  400fc3:	48 85 c0             	test   %rax,%rax
  400fc6:	74 05                	je     400fcd <_init+0x15>
  400fc8:	e8 33 00 00 00       	callq  401000 <__gmon_start__@plt>
  400fcd:	48 83 c4 08          	add    $0x8,%rsp
  400fd1:	c3                   	retq   

Disassembly of section .plt:

0000000000400fe0 <__libc_start_main@plt-0x10>:
  400fe0:	ff 35 0a 20 05 00    	pushq  0x5200a(%rip)        # 452ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
  400fe6:	ff 25 0c 20 05 00    	jmpq   *0x5200c(%rip)        # 452ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
  400fec:	90                   	nop
  400fed:	90                   	nop
  400fee:	90                   	nop
  400fef:	90                   	nop

0000000000400ff0 <__libc_start_main@plt>:
  400ff0:	ff 25 0a 20 05 00    	jmpq   *0x5200a(%rip)        # 453000 <_GLOBAL_OFFSET_TABLE_+0x18>
  400ff6:	68 00 00 00 00       	pushq  $0x0
  400ffb:	e9 e0 ff ff ff       	jmpq   400fe0 <_init+0x28>

0000000000401000 <__gmon_start__@plt>:
  401000:	ff 25 02 20 05 00    	jmpq   *0x52002(%rip)        # 453008 <_GLOBAL_OFFSET_TABLE_+0x20>
  401006:	68 01 00 00 00       	pushq  $0x1
  40100b:	e9 d0 ff ff ff       	jmpq   400fe0 <_init+0x28>

0000000000401010 <__xstat64@plt>:
  401010:	ff 25 fa 1f 05 00    	jmpq   *0x51ffa(%rip)        # 453010 <_GLOBAL_OFFSET_TABLE_+0x28>
  401016:	68 02 00 00 00       	pushq  $0x2
  40101b:	e9 c0 ff ff ff       	jmpq   400fe0 <_init+0x28>

0000000000401020 <memset@plt>:
  401020:	ff 25 f2 1f 05 00    	jmpq   *0x51ff2(%rip)        # 453018 <_GLOBAL_OFFSET_TABLE_+0x30>
  401026:	68 03 00 00 00       	pushq  $0x3
  40102b:	e9 b0 ff ff ff       	jmpq   400fe0 <_init+0x28>

0000000000401030 <printf@plt>:
  401030:	ff 25 ea 1f 05 00    	jmpq   *0x51fea(%rip)        # 453020 <_GLOBAL_OFFSET_TABLE_+0x38>
  401036:	68 04 00 00 00       	pushq  $0x4
  40103b:	e9 a0 ff ff ff       	jmpq   400fe0 <_init+0x28>

0000000000401040 <fflush@plt>:
  401040:	ff 25 e2 1f 05 00    	jmpq   *0x51fe2(%rip)        # 453028 <_GLOBAL_OFFSET_TABLE_+0x40>
  401046:	68 05 00 00 00       	pushq  $0x5
  40104b:	e9 90 ff ff ff       	jmpq   400fe0 <_init+0x28>

0000000000401050 <__sysv_signal@plt>:
  401050:	ff 25 da 1f 05 00    	jmpq   *0x51fda(%rip)        # 453030 <_GLOBAL_OFFSET_TABLE_+0x48>
  401056:	68 06 00 00 00       	pushq  $0x6
  40105b:	e9 80 ff ff ff       	jmpq   400fe0 <_init+0x28>

0000000000401060 <getaddrinfo@plt>:
  401060:	ff 25 d2 1f 05 00    	jmpq   *0x51fd2(%rip)        # 453038 <_GLOBAL_OFFSET_TABLE_+0x50>
  401066:	68 07 00 00 00       	pushq  $0x7
  40106b:	e9 70 ff ff ff       	jmpq   400fe0 <_init+0x28>

0000000000401070 <socket@plt>:
  401070:	ff 25 ca 1f 05 00    	jmpq   *0x51fca(%rip)        # 453040 <_GLOBAL_OFFSET_TABLE_+0x58>
  401076:	68 08 00 00 00       	pushq  $0x8
  40107b:	e9 60 ff ff ff       	jmpq   400fe0 <_init+0x28>

0000000000401080 <setsockopt@plt>:
  401080:	ff 25 c2 1f 05 00    	jmpq   *0x51fc2(%rip)        # 453048 <_GLOBAL_OFFSET_TABLE_+0x60>
  401086:	68 09 00 00 00       	pushq  $0x9
  40108b:	e9 50 ff ff ff       	jmpq   400fe0 <_init+0x28>

0000000000401090 <close@plt>:
  401090:	ff 25 ba 1f 05 00    	jmpq   *0x51fba(%rip)        # 453050 <_GLOBAL_OFFSET_TABLE_+0x68>
  401096:	68 0a 00 00 00       	pushq  $0xa
  40109b:	e9 40 ff ff ff       	jmpq   400fe0 <_init+0x28>

00000000004010a0 <bind@plt>:
  4010a0:	ff 25 b2 1f 05 00    	jmpq   *0x51fb2(%rip)        # 453058 <_GLOBAL_OFFSET_TABLE_+0x70>
  4010a6:	68 0b 00 00 00       	pushq  $0xb
  4010ab:	e9 30 ff ff ff       	jmpq   400fe0 <_init+0x28>

00000000004010b0 <listen@plt>:
  4010b0:	ff 25 aa 1f 05 00    	jmpq   *0x51faa(%rip)        # 453060 <_GLOBAL_OFFSET_TABLE_+0x78>
  4010b6:	68 0c 00 00 00       	pushq  $0xc
  4010bb:	e9 20 ff ff ff       	jmpq   400fe0 <_init+0x28>

00000000004010c0 <freeaddrinfo@plt>:
  4010c0:	ff 25 a2 1f 05 00    	jmpq   *0x51fa2(%rip)        # 453068 <_GLOBAL_OFFSET_TABLE_+0x80>
  4010c6:	68 0d 00 00 00       	pushq  $0xd
  4010cb:	e9 10 ff ff ff       	jmpq   400fe0 <_init+0x28>

00000000004010d0 <strlen@plt>:
  4010d0:	ff 25 9a 1f 05 00    	jmpq   *0x51f9a(%rip)        # 453070 <_GLOBAL_OFFSET_TABLE_+0x88>
  4010d6:	68 0e 00 00 00       	pushq  $0xe
  4010db:	e9 00 ff ff ff       	jmpq   400fe0 <_init+0x28>

00000000004010e0 <free@plt>:
  4010e0:	ff 25 92 1f 05 00    	jmpq   *0x51f92(%rip)        # 453078 <_GLOBAL_OFFSET_TABLE_+0x90>
  4010e6:	68 0f 00 00 00       	pushq  $0xf
  4010eb:	e9 f0 fe ff ff       	jmpq   400fe0 <_init+0x28>

00000000004010f0 <shutdown@plt>:
  4010f0:	ff 25 8a 1f 05 00    	jmpq   *0x51f8a(%rip)        # 453080 <_GLOBAL_OFFSET_TABLE_+0x98>
  4010f6:	68 10 00 00 00       	pushq  $0x10
  4010fb:	e9 e0 fe ff ff       	jmpq   400fe0 <_init+0x28>

0000000000401100 <getsockopt@plt>:
  401100:	ff 25 82 1f 05 00    	jmpq   *0x51f82(%rip)        # 453088 <_GLOBAL_OFFSET_TABLE_+0xa0>
  401106:	68 11 00 00 00       	pushq  $0x11
  40110b:	e9 d0 fe ff ff       	jmpq   400fe0 <_init+0x28>

0000000000401110 <accept@plt>:
  401110:	ff 25 7a 1f 05 00    	jmpq   *0x51f7a(%rip)        # 453090 <_GLOBAL_OFFSET_TABLE_+0xa8>
  401116:	68 12 00 00 00       	pushq  $0x12
  40111b:	e9 c0 fe ff ff       	jmpq   400fe0 <_init+0x28>

0000000000401120 <recvfrom@plt>:
  401120:	ff 25 72 1f 05 00    	jmpq   *0x51f72(%rip)        # 453098 <_GLOBAL_OFFSET_TABLE_+0xb0>
  401126:	68 13 00 00 00       	pushq  $0x13
  40112b:	e9 b0 fe ff ff       	jmpq   400fe0 <_init+0x28>

0000000000401130 <__errno_location@plt>:
  401130:	ff 25 6a 1f 05 00    	jmpq   *0x51f6a(%rip)        # 4530a0 <_GLOBAL_OFFSET_TABLE_+0xb8>
  401136:	68 14 00 00 00       	pushq  $0x14
  40113b:	e9 a0 fe ff ff       	jmpq   400fe0 <_init+0x28>

0000000000401140 <fcntl@plt>:
  401140:	ff 25 62 1f 05 00    	jmpq   *0x51f62(%rip)        # 4530a8 <_GLOBAL_OFFSET_TABLE_+0xc0>
  401146:	68 15 00 00 00       	pushq  $0x15
  40114b:	e9 90 fe ff ff       	jmpq   400fe0 <_init+0x28>

0000000000401150 <connect@plt>:
  401150:	ff 25 5a 1f 05 00    	jmpq   *0x51f5a(%rip)        # 4530b0 <_GLOBAL_OFFSET_TABLE_+0xc8>
  401156:	68 16 00 00 00       	pushq  $0x16
  40115b:	e9 80 fe ff ff       	jmpq   400fe0 <_init+0x28>

0000000000401160 <getsockname@plt>:
  401160:	ff 25 52 1f 05 00    	jmpq   *0x51f52(%rip)        # 4530b8 <_GLOBAL_OFFSET_TABLE_+0xd0>
  401166:	68 17 00 00 00       	pushq  $0x17
  40116b:	e9 70 fe ff ff       	jmpq   400fe0 <_init+0x28>

0000000000401170 <memcpy@plt>:
  401170:	ff 25 4a 1f 05 00    	jmpq   *0x51f4a(%rip)        # 4530c0 <_GLOBAL_OFFSET_TABLE_+0xd8>
  401176:	68 18 00 00 00       	pushq  $0x18
  40117b:	e9 60 fe ff ff       	jmpq   400fe0 <_init+0x28>

0000000000401180 <sprintf@plt>:
  401180:	ff 25 42 1f 05 00    	jmpq   *0x51f42(%rip)        # 4530c8 <_GLOBAL_OFFSET_TABLE_+0xe0>
  401186:	68 19 00 00 00       	pushq  $0x19
  40118b:	e9 50 fe ff ff       	jmpq   400fe0 <_init+0x28>

0000000000401190 <fprintf@plt>:
  401190:	ff 25 3a 1f 05 00    	jmpq   *0x51f3a(%rip)        # 4530d0 <_GLOBAL_OFFSET_TABLE_+0xe8>
  401196:	68 1a 00 00 00       	pushq  $0x1a
  40119b:	e9 40 fe ff ff       	jmpq   400fe0 <_init+0x28>

00000000004011a0 <read@plt>:
  4011a0:	ff 25 32 1f 05 00    	jmpq   *0x51f32(%rip)        # 4530d8 <_GLOBAL_OFFSET_TABLE_+0xf0>
  4011a6:	68 1b 00 00 00       	pushq  $0x1b
  4011ab:	e9 30 fe ff ff       	jmpq   400fe0 <_init+0x28>

00000000004011b0 <write@plt>:
  4011b0:	ff 25 2a 1f 05 00    	jmpq   *0x51f2a(%rip)        # 4530e0 <_GLOBAL_OFFSET_TABLE_+0xf8>
  4011b6:	68 1c 00 00 00       	pushq  $0x1c
  4011bb:	e9 20 fe ff ff       	jmpq   400fe0 <_init+0x28>

00000000004011c0 <memmove@plt>:
  4011c0:	ff 25 22 1f 05 00    	jmpq   *0x51f22(%rip)        # 4530e8 <_GLOBAL_OFFSET_TABLE_+0x100>
  4011c6:	68 1d 00 00 00       	pushq  $0x1d
  4011cb:	e9 10 fe ff ff       	jmpq   400fe0 <_init+0x28>

00000000004011d0 <memcmp@plt>:
  4011d0:	ff 25 1a 1f 05 00    	jmpq   *0x51f1a(%rip)        # 4530f0 <_GLOBAL_OFFSET_TABLE_+0x108>
  4011d6:	68 1e 00 00 00       	pushq  $0x1e
  4011db:	e9 00 fe ff ff       	jmpq   400fe0 <_init+0x28>

00000000004011e0 <time@plt>:
  4011e0:	ff 25 12 1f 05 00    	jmpq   *0x51f12(%rip)        # 4530f8 <_GLOBAL_OFFSET_TABLE_+0x110>
  4011e6:	68 1f 00 00 00       	pushq  $0x1f
  4011eb:	e9 f0 fd ff ff       	jmpq   400fe0 <_init+0x28>

00000000004011f0 <strcmp@plt>:
  4011f0:	ff 25 0a 1f 05 00    	jmpq   *0x51f0a(%rip)        # 453100 <_GLOBAL_OFFSET_TABLE_+0x118>
  4011f6:	68 20 00 00 00       	pushq  $0x20
  4011fb:	e9 e0 fd ff ff       	jmpq   400fe0 <_init+0x28>

0000000000401200 <snprintf@plt>:
  401200:	ff 25 02 1f 05 00    	jmpq   *0x51f02(%rip)        # 453108 <_GLOBAL_OFFSET_TABLE_+0x120>
  401206:	68 21 00 00 00       	pushq  $0x21
  40120b:	e9 d0 fd ff ff       	jmpq   400fe0 <_init+0x28>

0000000000401210 <__udivti3@plt>:
  401210:	ff 25 fa 1e 05 00    	jmpq   *0x51efa(%rip)        # 453110 <_GLOBAL_OFFSET_TABLE_+0x128>
  401216:	68 22 00 00 00       	pushq  $0x22
  40121b:	e9 c0 fd ff ff       	jmpq   400fe0 <_init+0x28>

0000000000401220 <fopen64@plt>:
  401220:	ff 25 f2 1e 05 00    	jmpq   *0x51ef2(%rip)        # 453118 <_GLOBAL_OFFSET_TABLE_+0x130>
  401226:	68 23 00 00 00       	pushq  $0x23
  40122b:	e9 b0 fd ff ff       	jmpq   400fe0 <_init+0x28>

0000000000401230 <fwrite@plt>:
  401230:	ff 25 ea 1e 05 00    	jmpq   *0x51eea(%rip)        # 453120 <_GLOBAL_OFFSET_TABLE_+0x138>
  401236:	68 24 00 00 00       	pushq  $0x24
  40123b:	e9 a0 fd ff ff       	jmpq   400fe0 <_init+0x28>

0000000000401240 <fclose@plt>:
  401240:	ff 25 e2 1e 05 00    	jmpq   *0x51ee2(%rip)        # 453128 <_GLOBAL_OFFSET_TABLE_+0x140>
  401246:	68 25 00 00 00       	pushq  $0x25
  40124b:	e9 90 fd ff ff       	jmpq   400fe0 <_init+0x28>

0000000000401250 <syscall@plt>:
  401250:	ff 25 da 1e 05 00    	jmpq   *0x51eda(%rip)        # 453130 <_GLOBAL_OFFSET_TABLE_+0x148>
  401256:	68 26 00 00 00       	pushq  $0x26
  40125b:	e9 80 fd ff ff       	jmpq   400fe0 <_init+0x28>

0000000000401260 <fread@plt>:
  401260:	ff 25 d2 1e 05 00    	jmpq   *0x51ed2(%rip)        # 453138 <_GLOBAL_OFFSET_TABLE_+0x150>
  401266:	68 27 00 00 00       	pushq  $0x27
  40126b:	e9 70 fd ff ff       	jmpq   400fe0 <_init+0x28>

0000000000401270 <fseek@plt>:
  401270:	ff 25 ca 1e 05 00    	jmpq   *0x51eca(%rip)        # 453140 <_GLOBAL_OFFSET_TABLE_+0x158>
  401276:	68 28 00 00 00       	pushq  $0x28
  40127b:	e9 60 fd ff ff       	jmpq   400fe0 <_init+0x28>

0000000000401280 <ftell@plt>:
  401280:	ff 25 c2 1e 05 00    	jmpq   *0x51ec2(%rip)        # 453148 <_GLOBAL_OFFSET_TABLE_+0x160>
  401286:	68 29 00 00 00       	pushq  $0x29
  40128b:	e9 50 fd ff ff       	jmpq   400fe0 <_init+0x28>

0000000000401290 <__stack_chk_fail@plt>:
  401290:	ff 25 ba 1e 05 00    	jmpq   *0x51eba(%rip)        # 453150 <_GLOBAL_OFFSET_TABLE_+0x168>
  401296:	68 2a 00 00 00       	pushq  $0x2a
  40129b:	e9 40 fd ff ff       	jmpq   400fe0 <_init+0x28>

00000000004012a0 <aligned_alloc@plt>:
  4012a0:	ff 25 b2 1e 05 00    	jmpq   *0x51eb2(%rip)        # 453158 <_GLOBAL_OFFSET_TABLE_+0x170>
  4012a6:	68 2b 00 00 00       	pushq  $0x2b
  4012ab:	e9 30 fd ff ff       	jmpq   400fe0 <_init+0x28>

00000000004012b0 <readdir@plt>:
  4012b0:	ff 25 aa 1e 05 00    	jmpq   *0x51eaa(%rip)        # 453160 <_GLOBAL_OFFSET_TABLE_+0x178>
  4012b6:	68 2c 00 00 00       	pushq  $0x2c
  4012bb:	e9 20 fd ff ff       	jmpq   400fe0 <_init+0x28>

00000000004012c0 <strcpy@plt>:
  4012c0:	ff 25 a2 1e 05 00    	jmpq   *0x51ea2(%rip)        # 453168 <_GLOBAL_OFFSET_TABLE_+0x180>
  4012c6:	68 2d 00 00 00       	pushq  $0x2d
  4012cb:	e9 10 fd ff ff       	jmpq   400fe0 <_init+0x28>

00000000004012d0 <getenv@plt>:
  4012d0:	ff 25 9a 1e 05 00    	jmpq   *0x51e9a(%rip)        # 453170 <_GLOBAL_OFFSET_TABLE_+0x188>
  4012d6:	68 2e 00 00 00       	pushq  $0x2e
  4012db:	e9 00 fd ff ff       	jmpq   400fe0 <_init+0x28>

00000000004012e0 <vasprintf@plt>:
  4012e0:	ff 25 92 1e 05 00    	jmpq   *0x51e92(%rip)        # 453178 <_GLOBAL_OFFSET_TABLE_+0x190>
  4012e6:	68 2f 00 00 00       	pushq  $0x2f
  4012eb:	e9 f0 fc ff ff       	jmpq   400fe0 <_init+0x28>

Disassembly of section .text:

00000000004012f0 <_start>:
  4012f0:	31 ed                	xor    %ebp,%ebp
  4012f2:	49 89 d1             	mov    %rdx,%r9
  4012f5:	5e                   	pop    %rsi
  4012f6:	48 89 e2             	mov    %rsp,%rdx
  4012f9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  4012fd:	50                   	push   %rax
  4012fe:	54                   	push   %rsp
  4012ff:	49 c7 c0 60 6b 44 00 	mov    $0x446b60,%r8
  401306:	48 c7 c1 f0 6a 44 00 	mov    $0x446af0,%rcx
  40130d:	48 c7 c7 f0 13 40 00 	mov    $0x4013f0,%rdi
  401314:	e8 d7 fc ff ff       	callq  400ff0 <__libc_start_main@plt>
  401319:	f4                   	hlt    
  40131a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000401320 <deregister_tm_clones>:
  401320:	b8 df 33 45 00       	mov    $0x4533df,%eax
  401325:	55                   	push   %rbp
  401326:	48 2d d8 33 45 00    	sub    $0x4533d8,%rax
  40132c:	48 83 f8 0e          	cmp    $0xe,%rax
  401330:	48 89 e5             	mov    %rsp,%rbp
  401333:	76 1b                	jbe    401350 <deregister_tm_clones+0x30>
  401335:	b8 00 00 00 00       	mov    $0x0,%eax
  40133a:	48 85 c0             	test   %rax,%rax
  40133d:	74 11                	je     401350 <deregister_tm_clones+0x30>
  40133f:	5d                   	pop    %rbp
  401340:	bf d8 33 45 00       	mov    $0x4533d8,%edi
  401345:	ff e0                	jmpq   *%rax
  401347:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40134e:	00 00 
  401350:	5d                   	pop    %rbp
  401351:	c3                   	retq   
  401352:	0f 1f 40 00          	nopl   0x0(%rax)
  401356:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40135d:	00 00 00 

0000000000401360 <register_tm_clones>:
  401360:	be d8 33 45 00       	mov    $0x4533d8,%esi
  401365:	55                   	push   %rbp
  401366:	48 81 ee d8 33 45 00 	sub    $0x4533d8,%rsi
  40136d:	48 c1 fe 03          	sar    $0x3,%rsi
  401371:	48 89 e5             	mov    %rsp,%rbp
  401374:	48 89 f0             	mov    %rsi,%rax
  401377:	48 c1 e8 3f          	shr    $0x3f,%rax
  40137b:	48 01 c6             	add    %rax,%rsi
  40137e:	48 d1 fe             	sar    %rsi
  401381:	74 15                	je     401398 <register_tm_clones+0x38>
  401383:	b8 00 00 00 00       	mov    $0x0,%eax
  401388:	48 85 c0             	test   %rax,%rax
  40138b:	74 0b                	je     401398 <register_tm_clones+0x38>
  40138d:	5d                   	pop    %rbp
  40138e:	bf d8 33 45 00       	mov    $0x4533d8,%edi
  401393:	ff e0                	jmpq   *%rax
  401395:	0f 1f 00             	nopl   (%rax)
  401398:	5d                   	pop    %rbp
  401399:	c3                   	retq   
  40139a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000004013a0 <__do_global_dtors_aux>:
  4013a0:	80 3d 39 20 05 00 00 	cmpb   $0x0,0x52039(%rip)        # 4533e0 <completed.7594>
  4013a7:	75 11                	jne    4013ba <__do_global_dtors_aux+0x1a>
  4013a9:	55                   	push   %rbp
  4013aa:	48 89 e5             	mov    %rsp,%rbp
  4013ad:	e8 6e ff ff ff       	callq  401320 <deregister_tm_clones>
  4013b2:	5d                   	pop    %rbp
  4013b3:	c6 05 26 20 05 00 01 	movb   $0x1,0x52026(%rip)        # 4533e0 <completed.7594>
  4013ba:	f3 c3                	repz retq 
  4013bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004013c0 <frame_dummy>:
  4013c0:	bf e8 2d 45 00       	mov    $0x452de8,%edi
  4013c5:	48 83 3f 00          	cmpq   $0x0,(%rdi)
  4013c9:	75 05                	jne    4013d0 <frame_dummy+0x10>
  4013cb:	eb 93                	jmp    401360 <register_tm_clones>
  4013cd:	0f 1f 00             	nopl   (%rax)
  4013d0:	b8 00 00 00 00       	mov    $0x0,%eax
  4013d5:	48 85 c0             	test   %rax,%rax
  4013d8:	74 f1                	je     4013cb <frame_dummy+0xb>
  4013da:	55                   	push   %rbp
  4013db:	48 89 e5             	mov    %rsp,%rbp
  4013de:	ff d0                	callq  *%rax
  4013e0:	5d                   	pop    %rbp
  4013e1:	e9 7a ff ff ff       	jmpq   401360 <register_tm_clones>
  4013e6:	66 90                	xchg   %ax,%ax
  4013e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4013ef:	00 

00000000004013f0 <main>:
  4013f0:	55                   	push   %rbp
  4013f1:	48 89 e5             	mov    %rsp,%rbp
  4013f4:	48 81 ec e0 18 00 00 	sub    $0x18e0,%rsp
  4013fb:	e8 11 41 04 00       	callq  445511 <populate_keys>
  401400:	48 b8 00 33 45 00 00 	movabs $0x453300,%rax
  401407:	00 00 00 
  40140a:	b9 d0 00 00 00       	mov    $0xd0,%ecx
  40140f:	89 ce                	mov    %ecx,%esi
  401411:	48 89 c7             	mov    %rax,%rdi
  401414:	e8 32 4e 04 00       	callq  44624b <encrypt_globals>
  401419:	48 89 85 48 ea ff ff 	mov    %rax,-0x15b8(%rbp)
  401420:	e8 31 45 04 00       	callq  445956 <writeback_cache>
  401425:	b9 01 00 00 00       	mov    $0x1,%ecx
  40142a:	89 ce                	mov    %ecx,%esi
  40142c:	48 bf d0 33 45 00 00 	movabs $0x4533d0,%rdi
  401433:	00 00 00 
  401436:	e8 10 4e 04 00       	callq  44624b <encrypt_globals>
  40143b:	b9 01 00 00 00       	mov    $0x1,%ecx
  401440:	89 ce                	mov    %ecx,%esi
  401442:	48 bf 60 32 45 00 00 	movabs $0x453260,%rdi
  401449:	00 00 00 
  40144c:	48 89 85 40 ea ff ff 	mov    %rax,-0x15c0(%rbp)
  401453:	e8 f3 4d 04 00       	callq  44624b <encrypt_globals>
  401458:	48 89 85 38 ea ff ff 	mov    %rax,-0x15c8(%rbp)
  40145f:	e8 f2 44 04 00       	callq  445956 <writeback_cache>
  401464:	b9 01 00 00 00       	mov    $0x1,%ecx
  401469:	89 ce                	mov    %ecx,%esi
  40146b:	48 bf 20 34 45 00 00 	movabs $0x453420,%rdi
  401472:	00 00 00 
  401475:	e8 d1 4d 04 00       	callq  44624b <encrypt_globals>
  40147a:	48 89 85 30 ea ff ff 	mov    %rax,-0x15d0(%rbp)
  401481:	e8 d0 44 04 00       	callq  445956 <writeback_cache>
  401486:	b9 01 00 00 00       	mov    $0x1,%ecx
  40148b:	89 ce                	mov    %ecx,%esi
  40148d:	48 bf 40 32 45 00 00 	movabs $0x453240,%rdi
  401494:	00 00 00 
  401497:	e8 af 4d 04 00       	callq  44624b <encrypt_globals>
  40149c:	48 89 85 28 ea ff ff 	mov    %rax,-0x15d8(%rbp)
  4014a3:	e8 ae 44 04 00       	callq  445956 <writeback_cache>
  4014a8:	b9 01 00 00 00       	mov    $0x1,%ecx
  4014ad:	89 ce                	mov    %ecx,%esi
  4014af:	48 bf 20 32 45 00 00 	movabs $0x453220,%rdi
  4014b6:	00 00 00 
  4014b9:	e8 8d 4d 04 00       	callq  44624b <encrypt_globals>
  4014be:	48 89 85 20 ea ff ff 	mov    %rax,-0x15e0(%rbp)
  4014c5:	e8 8c 44 04 00       	callq  445956 <writeback_cache>
  4014ca:	b9 01 00 00 00       	mov    $0x1,%ecx
  4014cf:	89 ce                	mov    %ecx,%esi
  4014d1:	48 bf 00 32 45 00 00 	movabs $0x453200,%rdi
  4014d8:	00 00 00 
  4014db:	e8 6b 4d 04 00       	callq  44624b <encrypt_globals>
  4014e0:	48 89 85 18 ea ff ff 	mov    %rax,-0x15e8(%rbp)
  4014e7:	e8 6a 44 04 00       	callq  445956 <writeback_cache>
  4014ec:	b9 01 00 00 00       	mov    $0x1,%ecx
  4014f1:	89 ce                	mov    %ecx,%esi
  4014f3:	48 bf e0 31 45 00 00 	movabs $0x4531e0,%rdi
  4014fa:	00 00 00 
  4014fd:	e8 49 4d 04 00       	callq  44624b <encrypt_globals>
  401502:	48 89 85 10 ea ff ff 	mov    %rax,-0x15f0(%rbp)
  401509:	e8 48 44 04 00       	callq  445956 <writeback_cache>
  40150e:	b9 01 00 00 00       	mov    $0x1,%ecx
  401513:	89 ce                	mov    %ecx,%esi
  401515:	48 bf c0 31 45 00 00 	movabs $0x4531c0,%rdi
  40151c:	00 00 00 
  40151f:	e8 27 4d 04 00       	callq  44624b <encrypt_globals>
  401524:	31 c9                	xor    %ecx,%ecx
  401526:	89 ce                	mov    %ecx,%esi
  401528:	31 c9                	xor    %ecx,%ecx
  40152a:	ba 28 02 00 00       	mov    $0x228,%edx
  40152f:	41 b8 a0 00 00 00    	mov    $0xa0,%r8d
  401535:	44 89 c7             	mov    %r8d,%edi
  401538:	41 b8 60 01 00 00    	mov    $0x160,%r8d
  40153e:	45 89 c1             	mov    %r8d,%r9d
  401541:	49 ba c0 6d 44 00 00 	movabs $0x446dc0,%r10
  401548:	00 00 00 
  40154b:	c7 85 c4 f7 ff ff 00 	movl   $0x0,-0x83c(%rbp)
  401552:	00 00 00 
  401555:	4c 89 95 a8 f3 ff ff 	mov    %r10,-0xc58(%rbp)
  40155c:	4c 8d 95 b8 f7 ff ff 	lea    -0x848(%rbp),%r10
  401563:	4c 89 95 c8 f7 ff ff 	mov    %r10,-0x838(%rbp)
  40156a:	4c 8b 95 c8 f7 ff ff 	mov    -0x838(%rbp),%r10
  401571:	41 c7 02 ff ff ff ff 	movl   $0xffffffff,(%r10)
  401578:	4c 8d 95 b0 f7 ff ff 	lea    -0x850(%rbp),%r10
  40157f:	4c 89 95 00 f8 ff ff 	mov    %r10,-0x800(%rbp)
  401586:	4c 8b 95 00 f8 ff ff 	mov    -0x800(%rbp),%r10
  40158d:	41 c7 02 ff ff ff ff 	movl   $0xffffffff,(%r10)
  401594:	4c 8d 95 58 ed ff ff 	lea    -0x12a8(%rbp),%r10
  40159b:	4c 89 95 08 f8 ff ff 	mov    %r10,-0x7f8(%rbp)
  4015a2:	4c 8b 95 08 f8 ff ff 	mov    -0x7f8(%rbp),%r10
  4015a9:	48 89 bd 08 ea ff ff 	mov    %rdi,-0x15f8(%rbp)
  4015b0:	4c 89 d7             	mov    %r10,%rdi
  4015b3:	48 89 b5 00 ea ff ff 	mov    %rsi,-0x1600(%rbp)
  4015ba:	89 ce                	mov    %ecx,%esi
  4015bc:	48 89 95 f8 e9 ff ff 	mov    %rdx,-0x1608(%rbp)
  4015c3:	4c 89 ca             	mov    %r9,%rdx
  4015c6:	48 89 85 f0 e9 ff ff 	mov    %rax,-0x1610(%rbp)
  4015cd:	89 8d ec e9 ff ff    	mov    %ecx,-0x1614(%rbp)
  4015d3:	e8 48 fa ff ff       	callq  401020 <memset@plt>
  4015d8:	48 8d 85 b8 ec ff ff 	lea    -0x1348(%rbp),%rax
  4015df:	48 89 85 40 f8 ff ff 	mov    %rax,-0x7c0(%rbp)
  4015e6:	48 8b 85 40 f8 ff ff 	mov    -0x7c0(%rbp),%rax
  4015ed:	48 89 c7             	mov    %rax,%rdi
  4015f0:	8b b5 ec e9 ff ff    	mov    -0x1614(%rbp),%esi
  4015f6:	48 8b 95 08 ea ff ff 	mov    -0x15f8(%rbp),%rdx
  4015fd:	e8 1e fa ff ff       	callq  401020 <memset@plt>
  401602:	48 8d 85 90 ea ff ff 	lea    -0x1570(%rbp),%rax
  401609:	48 89 85 48 f8 ff ff 	mov    %rax,-0x7b8(%rbp)
  401610:	48 8b 85 48 f8 ff ff 	mov    -0x7b8(%rbp),%rax
  401617:	48 89 c7             	mov    %rax,%rdi
  40161a:	8b b5 ec e9 ff ff    	mov    -0x1614(%rbp),%esi
  401620:	48 8b 95 f8 e9 ff ff 	mov    -0x1608(%rbp),%rdx
  401627:	e8 f4 f9 ff ff       	callq  401020 <memset@plt>
  40162c:	48 8d 85 50 ea ff ff 	lea    -0x15b0(%rbp),%rax
  401633:	48 89 85 80 f8 ff ff 	mov    %rax,-0x780(%rbp)
  40163a:	48 8b 85 80 f8 ff ff 	mov    -0x780(%rbp),%rax
  401641:	48 89 c7             	mov    %rax,%rdi
  401644:	48 8b b5 00 ea ff ff 	mov    -0x1600(%rbp),%rsi
  40164b:	e8 ac 46 04 00       	callq  445cfc <setEncryptedValueQWord>
  401650:	31 c9                	xor    %ecx,%ecx
  401652:	89 ce                	mov    %ecx,%esi
  401654:	48 8b 95 80 f8 ff ff 	mov    -0x780(%rbp),%rdx
  40165b:	48 83 c2 08          	add    $0x8,%rdx
  40165f:	48 89 d7             	mov    %rdx,%rdi
  401662:	48 89 85 e0 e9 ff ff 	mov    %rax,-0x1620(%rbp)
  401669:	e8 8e 46 04 00       	callq  445cfc <setEncryptedValueQWord>
  40166e:	31 c9                	xor    %ecx,%ecx
  401670:	41 b8 6c 00 00 00    	mov    $0x6c,%r8d
  401676:	44 89 c2             	mov    %r8d,%edx
  401679:	41 b8 20 03 00 00    	mov    $0x320,%r8d
  40167f:	44 89 c6             	mov    %r8d,%esi
  401682:	48 8d bd 10 f0 ff ff 	lea    -0xff0(%rbp),%rdi
  401689:	48 89 bd 88 f8 ff ff 	mov    %rdi,-0x778(%rbp)
  401690:	48 8b bd 88 f8 ff ff 	mov    -0x778(%rbp),%rdi
  401697:	c7 47 70 00 00 00 00 	movl   $0x0,0x70(%rdi)
  40169e:	48 8b bd 88 f8 ff ff 	mov    -0x778(%rbp),%rdi
  4016a5:	48 83 c7 78          	add    $0x78,%rdi
  4016a9:	48 89 b5 d8 e9 ff ff 	mov    %rsi,-0x1628(%rbp)
  4016b0:	89 ce                	mov    %ecx,%esi
  4016b2:	4c 8b 8d d8 e9 ff ff 	mov    -0x1628(%rbp),%r9
  4016b9:	48 89 95 d0 e9 ff ff 	mov    %rdx,-0x1630(%rbp)
  4016c0:	4c 89 ca             	mov    %r9,%rdx
  4016c3:	48 89 85 c8 e9 ff ff 	mov    %rax,-0x1638(%rbp)
  4016ca:	89 8d c4 e9 ff ff    	mov    %ecx,-0x163c(%rbp)
  4016d0:	e8 4b f9 ff ff       	callq  401020 <memset@plt>
  4016d5:	48 8b 85 88 f8 ff ff 	mov    -0x778(%rbp),%rax
  4016dc:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  4016e2:	48 8b 85 88 f8 ff ff 	mov    -0x778(%rbp),%rax
  4016e9:	48 83 c0 04          	add    $0x4,%rax
  4016ed:	48 89 85 90 f8 ff ff 	mov    %rax,-0x770(%rbp)
  4016f4:	48 8b 85 90 f8 ff ff 	mov    -0x770(%rbp),%rax
  4016fb:	48 89 c7             	mov    %rax,%rdi
  4016fe:	8b b5 c4 e9 ff ff    	mov    -0x163c(%rbp),%esi
  401704:	48 8b 95 d0 e9 ff ff 	mov    -0x1630(%rbp),%rdx
  40170b:	e8 10 f9 ff ff       	callq  401020 <memset@plt>
  401710:	48 8b 85 88 f8 ff ff 	mov    -0x778(%rbp),%rax
  401717:	48 89 85 c0 f8 ff ff 	mov    %rax,-0x740(%rbp)
  40171e:	48 b8 70 ad 42 00 00 	movabs $0x42ad70,%rax
  401725:	00 00 00 
  401728:	48 89 85 b8 f8 ff ff 	mov    %rax,-0x748(%rbp)
  40172f:	48 c7 85 b0 f8 ff ff 	movq   $0x0,-0x750(%rbp)
  401736:	00 00 00 00 
  40173a:	48 c7 85 a8 f8 ff ff 	movq   $0x20,-0x758(%rbp)
  401741:	20 00 00 00 
  401745:	c7 85 a4 f8 ff ff 01 	movl   $0x1,-0x75c(%rbp)
  40174c:	00 00 00 
  40174f:	c7 85 9c f8 ff ff 00 	movl   $0x0,-0x764(%rbp)
  401756:	00 00 00 
  401759:	48 8b 85 c0 f8 ff ff 	mov    -0x740(%rbp),%rax
  401760:	8b 48 70             	mov    0x70(%rax),%ecx
  401763:	89 8d a0 f8 ff ff    	mov    %ecx,-0x760(%rbp)
  401769:	83 bd a0 f8 ff ff 14 	cmpl   $0x14,-0x760(%rbp)
  401770:	7c 0f                	jl     401781 <main+0x391>
  401772:	c7 85 9c f8 ff ff c2 	movl   $0xffffffc2,-0x764(%rbp)
  401779:	ff ff ff 
  40177c:	e9 9d 00 00 00       	jmpq   40181e <main+0x42e>
  401781:	48 8b 85 b8 f8 ff ff 	mov    -0x748(%rbp),%rax
  401788:	48 8b 8d c0 f8 ff ff 	mov    -0x740(%rbp),%rcx
  40178f:	48 83 c1 78          	add    $0x78,%rcx
  401793:	48 63 95 a0 f8 ff ff 	movslq -0x760(%rbp),%rdx
  40179a:	48 6b d2 28          	imul   $0x28,%rdx,%rdx
  40179e:	48 01 d1             	add    %rdx,%rcx
  4017a1:	48 89 01             	mov    %rax,(%rcx)
  4017a4:	48 8b 85 b0 f8 ff ff 	mov    -0x750(%rbp),%rax
  4017ab:	48 8b 8d c0 f8 ff ff 	mov    -0x740(%rbp),%rcx
  4017b2:	48 83 c1 78          	add    $0x78,%rcx
  4017b6:	48 63 95 a0 f8 ff ff 	movslq -0x760(%rbp),%rdx
  4017bd:	48 6b d2 28          	imul   $0x28,%rdx,%rdx
  4017c1:	48 01 d1             	add    %rdx,%rcx
  4017c4:	48 89 41 08          	mov    %rax,0x8(%rcx)
  4017c8:	48 8b 85 a8 f8 ff ff 	mov    -0x758(%rbp),%rax
  4017cf:	48 8b 8d c0 f8 ff ff 	mov    -0x740(%rbp),%rcx
  4017d6:	48 83 c1 78          	add    $0x78,%rcx
  4017da:	48 63 95 a0 f8 ff ff 	movslq -0x760(%rbp),%rdx
  4017e1:	48 6b d2 28          	imul   $0x28,%rdx,%rdx
  4017e5:	48 01 d1             	add    %rdx,%rcx
  4017e8:	48 89 41 18          	mov    %rax,0x18(%rcx)
  4017ec:	8b b5 a4 f8 ff ff    	mov    -0x75c(%rbp),%esi
  4017f2:	48 8b 85 c0 f8 ff ff 	mov    -0x740(%rbp),%rax
  4017f9:	48 83 c0 78          	add    $0x78,%rax
  4017fd:	48 63 8d a0 f8 ff ff 	movslq -0x760(%rbp),%rcx
  401804:	48 6b c9 28          	imul   $0x28,%rcx,%rcx
  401808:	48 01 c8             	add    %rcx,%rax
  40180b:	89 70 20             	mov    %esi,0x20(%rax)
  40180e:	48 8b 85 c0 f8 ff ff 	mov    -0x740(%rbp),%rax
  401815:	8b 70 70             	mov    0x70(%rax),%esi
  401818:	83 c6 01             	add    $0x1,%esi
  40181b:	89 70 70             	mov    %esi,0x70(%rax)
  40181e:	48 bf e0 6d 44 00 00 	movabs $0x446de0,%rdi
  401825:	00 00 00 
  401828:	31 f6                	xor    %esi,%esi
  40182a:	b8 58 01 00 00       	mov    $0x158,%eax
  40182f:	89 c2                	mov    %eax,%edx
  401831:	48 8d 8d b8 ee ff ff 	lea    -0x1148(%rbp),%rcx
  401838:	48 89 8d 20 fa ff ff 	mov    %rcx,-0x5e0(%rbp)
  40183f:	48 8b 8d 20 fa ff ff 	mov    -0x5e0(%rbp),%rcx
  401846:	48 89 bd b8 e9 ff ff 	mov    %rdi,-0x1648(%rbp)
  40184d:	48 89 cf             	mov    %rcx,%rdi
  401850:	e8 cb f7 ff ff       	callq  401020 <memset@plt>
  401855:	48 8b bd b8 e9 ff ff 	mov    -0x1648(%rbp),%rdi
  40185c:	b0 00                	mov    $0x0,%al
  40185e:	e8 cd f7 ff ff       	callq  401030 <printf@plt>
  401863:	48 8b 3c 25 68 57 45 	mov    0x455768,%rdi
  40186a:	00 
  40186b:	89 85 b4 e9 ff ff    	mov    %eax,-0x164c(%rbp)
  401871:	e8 ca f7 ff ff       	callq  401040 <fflush@plt>
  401876:	48 8b 34 25 c0 32 45 	mov    0x4532c0,%rsi
  40187d:	00 
  40187e:	48 8b 14 25 e0 c9 44 	mov    0x44c9e0,%rdx
  401885:	00 
  401886:	48 8d bd 90 ea ff ff 	lea    -0x1570(%rbp),%rdi
  40188d:	89 85 b0 e9 ff ff    	mov    %eax,-0x1650(%rbp)
  401893:	e8 98 4b 01 00       	callq  416430 <mbedtls_x509_crt_parse>
  401898:	89 85 c0 f7 ff ff    	mov    %eax,-0x840(%rbp)
  40189e:	83 bd c0 f7 ff ff 00 	cmpl   $0x0,-0x840(%rbp)
  4018a5:	74 22                	je     4018c9 <main+0x4d9>
  4018a7:	48 bf 10 6e 44 00 00 	movabs $0x446e10,%rdi
  4018ae:	00 00 00 
  4018b1:	8b b5 c0 f7 ff ff    	mov    -0x840(%rbp),%esi
  4018b7:	b0 00                	mov    $0x0,%al
  4018b9:	e8 72 f7 ff ff       	callq  401030 <printf@plt>
  4018be:	89 85 ac e9 ff ff    	mov    %eax,-0x1654(%rbp)
  4018c4:	e9 14 27 00 00       	jmpq   403fdd <main+0x2bed>
  4018c9:	48 be 00 b5 44 00 00 	movabs $0x44b500,%rsi
  4018d0:	00 00 00 
  4018d3:	48 8b 14 25 40 bf 44 	mov    0x44bf40,%rdx
  4018da:	00 
  4018db:	48 8d bd 90 ea ff ff 	lea    -0x1570(%rbp),%rdi
  4018e2:	e8 49 4b 01 00       	callq  416430 <mbedtls_x509_crt_parse>
  4018e7:	89 85 c0 f7 ff ff    	mov    %eax,-0x840(%rbp)
  4018ed:	83 bd c0 f7 ff ff 00 	cmpl   $0x0,-0x840(%rbp)
  4018f4:	74 22                	je     401918 <main+0x528>
  4018f6:	48 bf 10 6e 44 00 00 	movabs $0x446e10,%rdi
  4018fd:	00 00 00 
  401900:	8b b5 c0 f7 ff ff    	mov    -0x840(%rbp),%esi
  401906:	b0 00                	mov    $0x0,%al
  401908:	e8 23 f7 ff ff       	callq  401030 <printf@plt>
  40190d:	89 85 a8 e9 ff ff    	mov    %eax,-0x1658(%rbp)
  401913:	e9 c5 26 00 00       	jmpq   403fdd <main+0x2bed>
  401918:	31 c0                	xor    %eax,%eax
  40191a:	89 c1                	mov    %eax,%ecx
  40191c:	48 8b 34 25 d0 32 45 	mov    0x4532d0,%rsi
  401923:	00 
  401924:	48 8b 14 25 f0 c9 44 	mov    0x44c9f0,%rdx
  40192b:	00 
  40192c:	48 8d bd 50 ea ff ff 	lea    -0x15b0(%rbp),%rdi
  401933:	48 89 8d a0 e9 ff ff 	mov    %rcx,-0x1660(%rbp)
  40193a:	4c 8b 85 a0 e9 ff ff 	mov    -0x1660(%rbp),%r8
  401941:	e8 ea 1b 03 00       	callq  433530 <mbedtls_pk_parse_key>
  401946:	89 85 c0 f7 ff ff    	mov    %eax,-0x840(%rbp)
  40194c:	83 bd c0 f7 ff ff 00 	cmpl   $0x0,-0x840(%rbp)
  401953:	74 22                	je     401977 <main+0x587>
  401955:	48 bf 50 6e 44 00 00 	movabs $0x446e50,%rdi
  40195c:	00 00 00 
  40195f:	8b b5 c0 f7 ff ff    	mov    -0x840(%rbp),%esi
  401965:	b0 00                	mov    $0x0,%al
  401967:	e8 c4 f6 ff ff       	callq  401030 <printf@plt>
  40196c:	89 85 9c e9 ff ff    	mov    %eax,-0x1664(%rbp)
  401972:	e9 66 26 00 00       	jmpq   403fdd <main+0x2bed>
  401977:	48 bf 80 6e 44 00 00 	movabs $0x446e80,%rdi
  40197e:	00 00 00 
  401981:	b0 00                	mov    $0x0,%al
  401983:	e8 a8 f6 ff ff       	callq  401030 <printf@plt>
  401988:	48 bf 90 6e 44 00 00 	movabs $0x446e90,%rdi
  40198f:	00 00 00 
  401992:	89 85 98 e9 ff ff    	mov    %eax,-0x1668(%rbp)
  401998:	b0 00                	mov    $0x0,%al
  40199a:	e8 91 f6 ff ff       	callq  401030 <printf@plt>
  40199f:	48 8b 3c 25 68 57 45 	mov    0x455768,%rdi
  4019a6:	00 
  4019a7:	89 85 94 e9 ff ff    	mov    %eax,-0x166c(%rbp)
  4019ad:	e8 8e f6 ff ff       	callq  401040 <fflush@plt>
  4019b2:	b9 01 00 00 00       	mov    $0x1,%ecx
  4019b7:	89 ce                	mov    %ecx,%esi
  4019b9:	48 bf c0 6e 44 00 00 	movabs $0x446ec0,%rdi
  4019c0:	00 00 00 
  4019c3:	48 8d 95 b8 f7 ff ff 	lea    -0x848(%rbp),%rdx
  4019ca:	48 89 95 88 fa ff ff 	mov    %rdx,-0x578(%rbp)
  4019d1:	48 c7 85 80 fa ff ff 	movq   $0x0,-0x580(%rbp)
  4019d8:	00 00 00 00 
  4019dc:	48 89 bd 78 fa ff ff 	mov    %rdi,-0x588(%rbp)
  4019e3:	c7 85 74 fa ff ff 00 	movl   $0x0,-0x58c(%rbp)
  4019ea:	00 00 00 
  4019ed:	bf 0d 00 00 00       	mov    $0xd,%edi
  4019f2:	89 85 90 e9 ff ff    	mov    %eax,-0x1670(%rbp)
  4019f8:	e8 53 f6 ff ff       	callq  401050 <__sysv_signal@plt>
  4019fd:	31 f6                	xor    %esi,%esi
  4019ff:	b9 30 00 00 00       	mov    $0x30,%ecx
  401a04:	89 ca                	mov    %ecx,%edx
  401a06:	c7 85 6c fa ff ff 00 	movl   $0x0,-0x594(%rbp)
  401a0d:	00 00 00 
  401a10:	4c 8d 85 38 fa ff ff 	lea    -0x5c8(%rbp),%r8
  401a17:	4c 89 c7             	mov    %r8,%rdi
  401a1a:	48 89 85 88 e9 ff ff 	mov    %rax,-0x1678(%rbp)
  401a21:	e8 fa f5 ff ff       	callq  401020 <memset@plt>
  401a26:	c7 85 3c fa ff ff 00 	movl   $0x0,-0x5c4(%rbp)
  401a2d:	00 00 00 
  401a30:	8b 8d 74 fa ff ff    	mov    -0x58c(%rbp),%ecx
  401a36:	83 f9 01             	cmp    $0x1,%ecx
  401a39:	b9 02 00 00 00       	mov    $0x2,%ecx
  401a3e:	be 01 00 00 00       	mov    $0x1,%esi
  401a43:	0f 44 f1             	cmove  %ecx,%esi
  401a46:	89 b5 40 fa ff ff    	mov    %esi,-0x5c0(%rbp)
  401a4c:	8b 8d 74 fa ff ff    	mov    -0x58c(%rbp),%ecx
  401a52:	83 f9 01             	cmp    $0x1,%ecx
  401a55:	b9 11 00 00 00       	mov    $0x11,%ecx
  401a5a:	be 06 00 00 00       	mov    $0x6,%esi
  401a5f:	0f 44 f1             	cmove  %ecx,%esi
  401a62:	89 b5 44 fa ff ff    	mov    %esi,-0x5bc(%rbp)
  401a68:	48 83 bd 80 fa ff ff 	cmpq   $0x0,-0x580(%rbp)
  401a6f:	00 
  401a70:	75 0a                	jne    401a7c <main+0x68c>
  401a72:	c7 85 38 fa ff ff 01 	movl   $0x1,-0x5c8(%rbp)
  401a79:	00 00 00 
  401a7c:	48 8b bd 80 fa ff ff 	mov    -0x580(%rbp),%rdi
  401a83:	48 8b b5 78 fa ff ff 	mov    -0x588(%rbp),%rsi
  401a8a:	48 8d 95 38 fa ff ff 	lea    -0x5c8(%rbp),%rdx
  401a91:	48 8d 8d 30 fa ff ff 	lea    -0x5d0(%rbp),%rcx
  401a98:	e8 c3 f5 ff ff       	callq  401060 <getaddrinfo@plt>
  401a9d:	83 f8 00             	cmp    $0x0,%eax
  401aa0:	74 0f                	je     401ab1 <main+0x6c1>
  401aa2:	c7 85 94 fa ff ff ae 	movl   $0xffffffae,-0x56c(%rbp)
  401aa9:	ff ff ff 
  401aac:	e9 8d 01 00 00       	jmpq   401c3e <main+0x84e>
  401ab1:	c7 85 6c fa ff ff ae 	movl   $0xffffffae,-0x594(%rbp)
  401ab8:	ff ff ff 
  401abb:	48 8b 85 30 fa ff ff 	mov    -0x5d0(%rbp),%rax
  401ac2:	48 89 85 28 fa ff ff 	mov    %rax,-0x5d8(%rbp)
  401ac9:	48 83 bd 28 fa ff ff 	cmpq   $0x0,-0x5d8(%rbp)
  401ad0:	00 
  401ad1:	0f 84 4f 01 00 00    	je     401c26 <main+0x836>
  401ad7:	48 8b 85 28 fa ff ff 	mov    -0x5d8(%rbp),%rax
  401ade:	8b 78 04             	mov    0x4(%rax),%edi
  401ae1:	48 8b 85 28 fa ff ff 	mov    -0x5d8(%rbp),%rax
  401ae8:	8b 70 08             	mov    0x8(%rax),%esi
  401aeb:	48 8b 85 28 fa ff ff 	mov    -0x5d8(%rbp),%rax
  401af2:	8b 50 0c             	mov    0xc(%rax),%edx
  401af5:	e8 76 f5 ff ff       	callq  401070 <socket@plt>
  401afa:	48 8b 8d 88 fa ff ff 	mov    -0x578(%rbp),%rcx
  401b01:	89 01                	mov    %eax,(%rcx)
  401b03:	48 8b 8d 88 fa ff ff 	mov    -0x578(%rbp),%rcx
  401b0a:	83 39 00             	cmpl   $0x0,(%rcx)
  401b0d:	7d 0f                	jge    401b1e <main+0x72e>
  401b0f:	c7 85 6c fa ff ff be 	movl   $0xffffffbe,-0x594(%rbp)
  401b16:	ff ff ff 
  401b19:	e9 f1 00 00 00       	jmpq   401c0f <main+0x81f>
  401b1e:	c7 85 70 fa ff ff 01 	movl   $0x1,-0x590(%rbp)
  401b25:	00 00 00 
  401b28:	48 8b 85 88 fa ff ff 	mov    -0x578(%rbp),%rax
  401b2f:	8b 38                	mov    (%rax),%edi
  401b31:	48 8d 85 70 fa ff ff 	lea    -0x590(%rbp),%rax
  401b38:	be 01 00 00 00       	mov    $0x1,%esi
  401b3d:	ba 02 00 00 00       	mov    $0x2,%edx
  401b42:	48 89 c1             	mov    %rax,%rcx
  401b45:	41 b8 04 00 00 00    	mov    $0x4,%r8d
  401b4b:	e8 30 f5 ff ff       	callq  401080 <setsockopt@plt>
  401b50:	83 f8 00             	cmp    $0x0,%eax
  401b53:	74 23                	je     401b78 <main+0x788>
  401b55:	48 8b 85 88 fa ff ff 	mov    -0x578(%rbp),%rax
  401b5c:	8b 38                	mov    (%rax),%edi
  401b5e:	e8 2d f5 ff ff       	callq  401090 <close@plt>
  401b63:	c7 85 6c fa ff ff be 	movl   $0xffffffbe,-0x594(%rbp)
  401b6a:	ff ff ff 
  401b6d:	89 85 84 e9 ff ff    	mov    %eax,-0x167c(%rbp)
  401b73:	e9 97 00 00 00       	jmpq   401c0f <main+0x81f>
  401b78:	48 8b 85 88 fa ff ff 	mov    -0x578(%rbp),%rax
  401b7f:	8b 38                	mov    (%rax),%edi
  401b81:	48 8b 85 28 fa ff ff 	mov    -0x5d8(%rbp),%rax
  401b88:	48 8b 70 18          	mov    0x18(%rax),%rsi
  401b8c:	48 8b 85 28 fa ff ff 	mov    -0x5d8(%rbp),%rax
  401b93:	8b 50 10             	mov    0x10(%rax),%edx
  401b96:	e8 05 f5 ff ff       	callq  4010a0 <bind@plt>
  401b9b:	83 f8 00             	cmp    $0x0,%eax
  401b9e:	74 20                	je     401bc0 <main+0x7d0>
  401ba0:	48 8b 85 88 fa ff ff 	mov    -0x578(%rbp),%rax
  401ba7:	8b 38                	mov    (%rax),%edi
  401ba9:	e8 e2 f4 ff ff       	callq  401090 <close@plt>
  401bae:	c7 85 6c fa ff ff ba 	movl   $0xffffffba,-0x594(%rbp)
  401bb5:	ff ff ff 
  401bb8:	89 85 80 e9 ff ff    	mov    %eax,-0x1680(%rbp)
  401bbe:	eb 4f                	jmp    401c0f <main+0x81f>
  401bc0:	83 bd 74 fa ff ff 00 	cmpl   $0x0,-0x58c(%rbp)
  401bc7:	75 3a                	jne    401c03 <main+0x813>
  401bc9:	48 8b 85 88 fa ff ff 	mov    -0x578(%rbp),%rax
  401bd0:	8b 38                	mov    (%rax),%edi
  401bd2:	be 0a 00 00 00       	mov    $0xa,%esi
  401bd7:	e8 d4 f4 ff ff       	callq  4010b0 <listen@plt>
  401bdc:	83 f8 00             	cmp    $0x0,%eax
  401bdf:	74 20                	je     401c01 <main+0x811>
  401be1:	48 8b 85 88 fa ff ff 	mov    -0x578(%rbp),%rax
  401be8:	8b 38                	mov    (%rax),%edi
  401bea:	e8 a1 f4 ff ff       	callq  401090 <close@plt>
  401bef:	c7 85 6c fa ff ff b8 	movl   $0xffffffb8,-0x594(%rbp)
  401bf6:	ff ff ff 
  401bf9:	89 85 7c e9 ff ff    	mov    %eax,-0x1684(%rbp)
  401bff:	eb 0e                	jmp    401c0f <main+0x81f>
  401c01:	eb 00                	jmp    401c03 <main+0x813>
  401c03:	c7 85 6c fa ff ff 00 	movl   $0x0,-0x594(%rbp)
  401c0a:	00 00 00 
  401c0d:	eb 17                	jmp    401c26 <main+0x836>
  401c0f:	48 8b 85 28 fa ff ff 	mov    -0x5d8(%rbp),%rax
  401c16:	48 8b 40 28          	mov    0x28(%rax),%rax
  401c1a:	48 89 85 28 fa ff ff 	mov    %rax,-0x5d8(%rbp)
  401c21:	e9 a3 fe ff ff       	jmpq   401ac9 <main+0x6d9>
  401c26:	48 8b bd 30 fa ff ff 	mov    -0x5d0(%rbp),%rdi
  401c2d:	e8 8e f4 ff ff       	callq  4010c0 <freeaddrinfo@plt>
  401c32:	8b 85 6c fa ff ff    	mov    -0x594(%rbp),%eax
  401c38:	89 85 94 fa ff ff    	mov    %eax,-0x56c(%rbp)
  401c3e:	8b 85 94 fa ff ff    	mov    -0x56c(%rbp),%eax
  401c44:	89 85 c0 f7 ff ff    	mov    %eax,-0x840(%rbp)
  401c4a:	83 f8 00             	cmp    $0x0,%eax
  401c4d:	74 22                	je     401c71 <main+0x881>
  401c4f:	48 bf d0 6e 44 00 00 	movabs $0x446ed0,%rdi
  401c56:	00 00 00 
  401c59:	8b b5 c0 f7 ff ff    	mov    -0x840(%rbp),%esi
  401c5f:	b0 00                	mov    $0x0,%al
  401c61:	e8 ca f3 ff ff       	callq  401030 <printf@plt>
  401c66:	89 85 78 e9 ff ff    	mov    %eax,-0x1688(%rbp)
  401c6c:	e9 6c 23 00 00       	jmpq   403fdd <main+0x2bed>
  401c71:	48 bf 80 6e 44 00 00 	movabs $0x446e80,%rdi
  401c78:	00 00 00 
  401c7b:	b0 00                	mov    $0x0,%al
  401c7d:	e8 ae f3 ff ff       	callq  401030 <printf@plt>
  401c82:	48 bf 00 6f 44 00 00 	movabs $0x446f00,%rdi
  401c89:	00 00 00 
  401c8c:	89 85 74 e9 ff ff    	mov    %eax,-0x168c(%rbp)
  401c92:	b0 00                	mov    $0x0,%al
  401c94:	e8 97 f3 ff ff       	callq  401030 <printf@plt>
  401c99:	48 8b 3c 25 68 57 45 	mov    0x455768,%rdi
  401ca0:	00 
  401ca1:	89 85 70 e9 ff ff    	mov    %eax,-0x1690(%rbp)
  401ca7:	e8 94 f3 ff ff       	callq  401040 <fflush@plt>
  401cac:	48 8d bd c0 fa ff ff 	lea    -0x540(%rbp),%rdi
  401cb3:	31 c9                	xor    %ecx,%ecx
  401cb5:	ba 20 01 00 00       	mov    $0x120,%edx
  401cba:	be 20 00 00 00       	mov    $0x20,%esi
  401cbf:	41 89 f0             	mov    %esi,%r8d
  401cc2:	4c 8d 8d 10 f0 ff ff 	lea    -0xff0(%rbp),%r9
  401cc9:	4c 8b 95 a8 f3 ff ff 	mov    -0xc58(%rbp),%r10
  401cd0:	4c 8b 9d a8 f3 ff ff 	mov    -0xc58(%rbp),%r11
  401cd7:	48 89 bd 68 e9 ff ff 	mov    %rdi,-0x1698(%rbp)
  401cde:	4c 89 df             	mov    %r11,%rdi
  401ce1:	89 85 64 e9 ff ff    	mov    %eax,-0x169c(%rbp)
  401ce7:	4c 89 95 58 e9 ff ff 	mov    %r10,-0x16a8(%rbp)
  401cee:	89 8d 54 e9 ff ff    	mov    %ecx,-0x16ac(%rbp)
  401cf4:	48 89 95 48 e9 ff ff 	mov    %rdx,-0x16b8(%rbp)
  401cfb:	4c 89 85 40 e9 ff ff 	mov    %r8,-0x16c0(%rbp)
  401d02:	4c 89 8d 38 e9 ff ff 	mov    %r9,-0x16c8(%rbp)
  401d09:	e8 c2 f3 ff ff       	callq  4010d0 <strlen@plt>
  401d0e:	48 8d 95 b8 ee ff ff 	lea    -0x1148(%rbp),%rdx
  401d15:	48 89 95 b8 fa ff ff 	mov    %rdx,-0x548(%rbp)
  401d1c:	48 ba 30 a9 42 00 00 	movabs $0x42a930,%rdx
  401d23:	00 00 00 
  401d26:	48 89 95 b0 fa ff ff 	mov    %rdx,-0x550(%rbp)
  401d2d:	48 8b 95 38 e9 ff ff 	mov    -0x16c8(%rbp),%rdx
  401d34:	48 89 95 a8 fa ff ff 	mov    %rdx,-0x558(%rbp)
  401d3b:	48 8b bd 58 e9 ff ff 	mov    -0x16a8(%rbp),%rdi
  401d42:	48 89 bd a0 fa ff ff 	mov    %rdi,-0x560(%rbp)
  401d49:	48 89 85 98 fa ff ff 	mov    %rax,-0x568(%rbp)
  401d50:	48 8b 85 b8 fa ff ff 	mov    -0x548(%rbp),%rax
  401d57:	48 8b bd b0 fa ff ff 	mov    -0x550(%rbp),%rdi
  401d5e:	4c 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%r8
  401d65:	4c 8b 8d a0 fa ff ff 	mov    -0x560(%rbp),%r9
  401d6c:	4c 8b 95 98 fa ff ff 	mov    -0x568(%rbp),%r10
  401d73:	48 89 85 18 fb ff ff 	mov    %rax,-0x4e8(%rbp)
  401d7a:	48 89 bd 10 fb ff ff 	mov    %rdi,-0x4f0(%rbp)
  401d81:	4c 89 85 08 fb ff ff 	mov    %r8,-0x4f8(%rbp)
  401d88:	4c 89 8d 00 fb ff ff 	mov    %r9,-0x500(%rbp)
  401d8f:	4c 89 95 f8 fa ff ff 	mov    %r10,-0x508(%rbp)
  401d96:	48 c7 85 f0 fa ff ff 	movq   $0x20,-0x510(%rbp)
  401d9d:	20 00 00 00 
  401da1:	48 8b bd 68 e9 ff ff 	mov    -0x1698(%rbp),%rdi
  401da8:	8b b5 54 e9 ff ff    	mov    -0x16ac(%rbp),%esi
  401dae:	48 8b 95 40 e9 ff ff 	mov    -0x16c0(%rbp),%rdx
  401db5:	e8 66 f2 ff ff       	callq  401020 <memset@plt>
  401dba:	48 8b 85 18 fb ff ff 	mov    -0x4e8(%rbp),%rax
  401dc1:	48 83 c0 28          	add    $0x28,%rax
  401dc5:	48 89 85 28 fb ff ff 	mov    %rax,-0x4d8(%rbp)
  401dcc:	48 8b 85 28 fb ff ff 	mov    -0x4d8(%rbp),%rax
  401dd3:	48 89 c7             	mov    %rax,%rdi
  401dd6:	8b b5 54 e9 ff ff    	mov    -0x16ac(%rbp),%esi
  401ddc:	48 8b 95 48 e9 ff ff 	mov    -0x16b8(%rbp),%rdx
  401de3:	e8 38 f2 ff ff       	callq  401020 <memset@plt>
  401de8:	48 8b 85 10 fb ff ff 	mov    -0x4f0(%rbp),%rax
  401def:	48 8b 95 18 fb ff ff 	mov    -0x4e8(%rbp),%rdx
  401df6:	48 89 82 48 01 00 00 	mov    %rax,0x148(%rdx)
  401dfd:	48 8b 85 08 fb ff ff 	mov    -0x4f8(%rbp),%rax
  401e04:	48 8b 95 18 fb ff ff 	mov    -0x4e8(%rbp),%rdx
  401e0b:	48 89 82 50 01 00 00 	mov    %rax,0x150(%rdx)
  401e12:	48 8b 85 f0 fa ff ff 	mov    -0x510(%rbp),%rax
  401e19:	48 8b 95 18 fb ff ff 	mov    -0x4e8(%rbp),%rdx
  401e20:	48 89 42 18          	mov    %rax,0x18(%rdx)
  401e24:	48 8b 85 18 fb ff ff 	mov    -0x4e8(%rbp),%rax
  401e2b:	c7 40 20 10 27 00 00 	movl   $0x2710,0x20(%rax)
  401e32:	48 8b 85 18 fb ff ff 	mov    -0x4e8(%rbp),%rax
  401e39:	48 83 c0 28          	add    $0x28,%rax
  401e3d:	48 89 c7             	mov    %rax,%rdi
  401e40:	48 8b b5 68 e9 ff ff 	mov    -0x1698(%rbp),%rsi
  401e47:	ba 00 01 00 00       	mov    $0x100,%edx
  401e4c:	e8 ff 08 04 00       	callq  442750 <mbedtls_aes_setkey_enc>
  401e51:	89 85 ec fa ff ff    	mov    %eax,-0x514(%rbp)
  401e57:	83 f8 00             	cmp    $0x0,%eax
  401e5a:	74 0e                	je     401e6a <main+0xa7a>
  401e5c:	8b 85 ec fa ff ff    	mov    -0x514(%rbp),%eax
  401e62:	89 85 24 fb ff ff    	mov    %eax,-0x4dc(%rbp)
  401e68:	eb 3d                	jmp    401ea7 <main+0xab7>
  401e6a:	48 8b bd 18 fb ff ff 	mov    -0x4e8(%rbp),%rdi
  401e71:	48 8b b5 00 fb ff ff 	mov    -0x500(%rbp),%rsi
  401e78:	48 8b 95 f8 fa ff ff 	mov    -0x508(%rbp),%rdx
  401e7f:	e8 2c 5e 02 00       	callq  427cb0 <mbedtls_ctr_drbg_reseed>
  401e84:	89 85 ec fa ff ff    	mov    %eax,-0x514(%rbp)
  401e8a:	83 f8 00             	cmp    $0x0,%eax
  401e8d:	74 0e                	je     401e9d <main+0xaad>
  401e8f:	8b 85 ec fa ff ff    	mov    -0x514(%rbp),%eax
  401e95:	89 85 24 fb ff ff    	mov    %eax,-0x4dc(%rbp)
  401e9b:	eb 0a                	jmp    401ea7 <main+0xab7>
  401e9d:	c7 85 24 fb ff ff 00 	movl   $0x0,-0x4dc(%rbp)
  401ea4:	00 00 00 
  401ea7:	8b 85 24 fb ff ff    	mov    -0x4dc(%rbp),%eax
  401ead:	89 85 c0 f7 ff ff    	mov    %eax,-0x840(%rbp)
  401eb3:	83 f8 00             	cmp    $0x0,%eax
  401eb6:	74 22                	je     401eda <main+0xaea>
  401eb8:	48 bf 30 6f 44 00 00 	movabs $0x446f30,%rdi
  401ebf:	00 00 00 
  401ec2:	8b b5 c0 f7 ff ff    	mov    -0x840(%rbp),%esi
  401ec8:	b0 00                	mov    $0x0,%al
  401eca:	e8 61 f1 ff ff       	callq  401030 <printf@plt>
  401ecf:	89 85 34 e9 ff ff    	mov    %eax,-0x16cc(%rbp)
  401ed5:	e9 03 21 00 00       	jmpq   403fdd <main+0x2bed>
  401eda:	48 bf 80 6e 44 00 00 	movabs $0x446e80,%rdi
  401ee1:	00 00 00 
  401ee4:	b0 00                	mov    $0x0,%al
  401ee6:	e8 45 f1 ff ff       	callq  401030 <printf@plt>
  401eeb:	48 bf 60 6f 44 00 00 	movabs $0x446f60,%rdi
  401ef2:	00 00 00 
  401ef5:	89 85 30 e9 ff ff    	mov    %eax,-0x16d0(%rbp)
  401efb:	b0 00                	mov    $0x0,%al
  401efd:	e8 2e f1 ff ff       	callq  401030 <printf@plt>
  401f02:	48 8b 3c 25 68 57 45 	mov    0x455768,%rdi
  401f09:	00 
  401f0a:	89 85 2c e9 ff ff    	mov    %eax,-0x16d4(%rbp)
  401f10:	e8 2b f1 ff ff       	callq  401040 <fflush@plt>
  401f15:	48 8d bd b8 ec ff ff 	lea    -0x1348(%rbp),%rdi
  401f1c:	48 89 bd 40 fb ff ff 	mov    %rdi,-0x4c0(%rbp)
  401f23:	c7 85 3c fb ff ff 01 	movl   $0x1,-0x4c4(%rbp)
  401f2a:	00 00 00 
  401f2d:	c7 85 38 fb ff ff 00 	movl   $0x0,-0x4c8(%rbp)
  401f34:	00 00 00 
  401f37:	c7 85 34 fb ff ff 00 	movl   $0x0,-0x4cc(%rbp)
  401f3e:	00 00 00 
  401f41:	48 8b bd 40 fb ff ff 	mov    -0x4c0(%rbp),%rdi
  401f48:	8b 8d 3c fb ff ff    	mov    -0x4c4(%rbp),%ecx
  401f4e:	48 89 bd 50 fb ff ff 	mov    %rdi,-0x4b0(%rbp)
  401f55:	89 8d 4c fb ff ff    	mov    %ecx,-0x4b4(%rbp)
  401f5b:	8b 8d 4c fb ff ff    	mov    -0x4b4(%rbp),%ecx
  401f61:	48 8b bd 50 fb ff ff 	mov    -0x4b0(%rbp),%rdi
  401f68:	88 ca                	mov    %cl,%dl
  401f6a:	40 8a b7 98 00 00 00 	mov    0x98(%rdi),%sil
  401f71:	80 e2 01             	and    $0x1,%dl
  401f74:	40 80 e6 fe          	and    $0xfe,%sil
  401f78:	40 08 d6             	or     %dl,%sil
  401f7b:	40 88 b7 98 00 00 00 	mov    %sil,0x98(%rdi)
  401f82:	48 8b bd 40 fb ff ff 	mov    -0x4c0(%rbp),%rdi
  401f89:	8b 8d 38 fb ff ff    	mov    -0x4c8(%rbp),%ecx
  401f8f:	48 89 bd 88 fb ff ff 	mov    %rdi,-0x478(%rbp)
  401f96:	89 8d 84 fb ff ff    	mov    %ecx,-0x47c(%rbp)
  401f9c:	8b 8d 84 fb ff ff    	mov    -0x47c(%rbp),%ecx
  401fa2:	48 8b bd 88 fb ff ff 	mov    -0x478(%rbp),%rdi
  401fa9:	88 ca                	mov    %cl,%dl
  401fab:	40 8a b7 98 00 00 00 	mov    0x98(%rdi),%sil
  401fb2:	80 e2 01             	and    $0x1,%dl
  401fb5:	c0 e2 01             	shl    $0x1,%dl
  401fb8:	40 80 e6 fd          	and    $0xfd,%sil
  401fbc:	40 08 d6             	or     %dl,%sil
  401fbf:	40 88 b7 98 00 00 00 	mov    %sil,0x98(%rdi)
  401fc6:	83 bd 3c fb ff ff 00 	cmpl   $0x0,-0x4c4(%rbp)
  401fcd:	89 85 28 e9 ff ff    	mov    %eax,-0x16d8(%rbp)
  401fd3:	75 19                	jne    401fee <main+0xbfe>
  401fd5:	48 8b 85 40 fb ff ff 	mov    -0x4c0(%rbp),%rax
  401fdc:	8a 88 98 00 00 00    	mov    0x98(%rax),%cl
  401fe2:	80 e1 f3             	and    $0xf3,%cl
  401fe5:	80 c9 08             	or     $0x8,%cl
  401fe8:	88 88 98 00 00 00    	mov    %cl,0x98(%rax)
  401fee:	48 8b 85 40 fb ff ff 	mov    -0x4c0(%rbp),%rax
  401ff5:	8a 88 98 00 00 00    	mov    0x98(%rax),%cl
  401ffb:	80 e1 bf             	and    $0xbf,%cl
  401ffe:	80 c9 40             	or     $0x40,%cl
  402001:	88 88 98 00 00 00    	mov    %cl,0x98(%rax)
  402007:	83 bd 34 fb ff ff 02 	cmpl   $0x2,-0x4cc(%rbp)
  40200e:	0f 85 9f 00 00 00    	jne    4020b3 <main+0xcc3>
  402014:	48 b8 a0 31 45 00 00 	movabs $0x4531a0,%rax
  40201b:	00 00 00 
  40201e:	48 b9 90 31 45 00 00 	movabs $0x453190,%rcx
  402025:	00 00 00 
  402028:	48 8b 95 40 fb ff ff 	mov    -0x4c0(%rbp),%rdx
  40202f:	c6 82 96 00 00 00 03 	movb   $0x3,0x96(%rdx)
  402036:	48 8b 95 40 fb ff ff 	mov    -0x4c0(%rbp),%rdx
  40203d:	c6 82 97 00 00 00 03 	movb   $0x3,0x97(%rdx)
  402044:	48 8b 95 40 fb ff ff 	mov    -0x4c0(%rbp),%rdx
  40204b:	c6 82 94 00 00 00 03 	movb   $0x3,0x94(%rdx)
  402052:	48 8b 95 40 fb ff ff 	mov    -0x4c0(%rbp),%rdx
  402059:	c6 82 95 00 00 00 02 	movb   $0x2,0x95(%rdx)
  402060:	48 8b 95 40 fb ff ff 	mov    -0x4c0(%rbp),%rdx
  402067:	48 89 4a 18          	mov    %rcx,0x18(%rdx)
  40206b:	48 8b 95 40 fb ff ff 	mov    -0x4c0(%rbp),%rdx
  402072:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
  402076:	48 8b 95 40 fb ff ff 	mov    -0x4c0(%rbp),%rdx
  40207d:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  402081:	48 8b 95 40 fb ff ff 	mov    -0x4c0(%rbp),%rdx
  402088:	48 89 0a             	mov    %rcx,(%rdx)
  40208b:	48 8b 8d 40 fb ff ff 	mov    -0x4c0(%rbp),%rcx
  402092:	48 ba 90 cb 44 00 00 	movabs $0x44cb90,%rdx
  402099:	00 00 00 
  40209c:	48 89 51 68          	mov    %rdx,0x68(%rcx)
  4020a0:	48 8b 8d 40 fb ff ff 	mov    -0x4c0(%rbp),%rcx
  4020a7:	48 89 81 88 00 00 00 	mov    %rax,0x88(%rcx)
  4020ae:	e9 d8 01 00 00       	jmpq   40228b <main+0xe9b>
  4020b3:	48 8b 85 40 fb ff ff 	mov    -0x4c0(%rbp),%rax
  4020ba:	c6 80 96 00 00 00 03 	movb   $0x3,0x96(%rax)
  4020c1:	48 8b 85 40 fb ff ff 	mov    -0x4c0(%rbp),%rax
  4020c8:	c6 80 97 00 00 00 02 	movb   $0x2,0x97(%rax)
  4020cf:	48 8b 85 40 fb ff ff 	mov    -0x4c0(%rbp),%rax
  4020d6:	c6 80 94 00 00 00 03 	movb   $0x3,0x94(%rax)
  4020dd:	48 8b 85 40 fb ff ff 	mov    -0x4c0(%rbp),%rax
  4020e4:	c6 80 95 00 00 00 02 	movb   $0x2,0x95(%rax)
  4020eb:	83 3c 25 f0 33 45 00 	cmpl   $0x0,0x4533f0
  4020f2:	00 
  4020f3:	0f 85 30 01 00 00    	jne    402229 <main+0xe39>
  4020f9:	48 b8 00 34 45 00 00 	movabs $0x453400,%rax
  402100:	00 00 00 
  402103:	48 b9 30 8d 44 00 00 	movabs $0x448d30,%rcx
  40210a:	00 00 00 
  40210d:	48 89 8d 60 fb ff ff 	mov    %rcx,-0x4a0(%rbp)
  402114:	48 89 85 58 fb ff ff 	mov    %rax,-0x4a8(%rbp)
  40211b:	31 c0                	xor    %eax,%eax
  40211d:	88 c1                	mov    %al,%cl
  40211f:	48 8b 95 60 fb ff ff 	mov    -0x4a0(%rbp),%rdx
  402126:	83 3a 00             	cmpl   $0x0,(%rdx)
  402129:	88 8d 27 e9 ff ff    	mov    %cl,-0x16d9(%rbp)
  40212f:	74 21                	je     402152 <main+0xd62>
  402131:	48 8b 85 58 fb ff ff 	mov    -0x4a8(%rbp),%rax
  402138:	48 b9 00 34 45 00 00 	movabs $0x453400,%rcx
  40213f:	00 00 00 
  402142:	48 83 c1 14          	add    $0x14,%rcx
  402146:	48 39 c8             	cmp    %rcx,%rax
  402149:	0f 92 c2             	setb   %dl
  40214c:	88 95 27 e9 ff ff    	mov    %dl,-0x16d9(%rbp)
  402152:	8a 85 27 e9 ff ff    	mov    -0x16d9(%rbp),%al
  402158:	a8 01                	test   $0x1,%al
  40215a:	75 05                	jne    402161 <main+0xd71>
  40215c:	e9 b0 00 00 00       	jmpq   402211 <main+0xe21>
  402161:	48 b8 70 90 44 00 00 	movabs $0x449070,%rax
  402168:	00 00 00 
  40216b:	48 8b 8d 60 fb ff ff 	mov    -0x4a0(%rbp),%rcx
  402172:	8b 11                	mov    (%rcx),%edx
  402174:	89 95 74 fb ff ff    	mov    %edx,-0x48c(%rbp)
  40217a:	48 89 85 68 fb ff ff 	mov    %rax,-0x498(%rbp)
  402181:	48 8b 85 68 fb ff ff 	mov    -0x498(%rbp),%rax
  402188:	83 38 00             	cmpl   $0x0,(%rax)
  40218b:	74 35                	je     4021c2 <main+0xdd2>
  40218d:	48 8b 85 68 fb ff ff 	mov    -0x498(%rbp),%rax
  402194:	8b 08                	mov    (%rax),%ecx
  402196:	3b 8d 74 fb ff ff    	cmp    -0x48c(%rbp),%ecx
  40219c:	75 10                	jne    4021ae <main+0xdbe>
  40219e:	48 8b 85 68 fb ff ff 	mov    -0x498(%rbp),%rax
  4021a5:	48 89 85 78 fb ff ff 	mov    %rax,-0x488(%rbp)
  4021ac:	eb 1f                	jmp    4021cd <main+0xddd>
  4021ae:	48 8b 85 68 fb ff ff 	mov    -0x498(%rbp),%rax
  4021b5:	48 83 c0 30          	add    $0x30,%rax
  4021b9:	48 89 85 68 fb ff ff 	mov    %rax,-0x498(%rbp)
  4021c0:	eb bf                	jmp    402181 <main+0xd91>
  4021c2:	48 c7 85 78 fb ff ff 	movq   $0x0,-0x488(%rbp)
  4021c9:	00 00 00 00 
  4021cd:	48 8b 85 78 fb ff ff 	mov    -0x488(%rbp),%rax
  4021d4:	48 83 f8 00          	cmp    $0x0,%rax
  4021d8:	74 20                	je     4021fa <main+0xe0a>
  4021da:	48 8b 85 60 fb ff ff 	mov    -0x4a0(%rbp),%rax
  4021e1:	8b 08                	mov    (%rax),%ecx
  4021e3:	48 8b 85 58 fb ff ff 	mov    -0x4a8(%rbp),%rax
  4021ea:	48 89 c2             	mov    %rax,%rdx
  4021ed:	48 83 c2 04          	add    $0x4,%rdx
  4021f1:	48 89 95 58 fb ff ff 	mov    %rdx,-0x4a8(%rbp)
  4021f8:	89 08                	mov    %ecx,(%rax)
  4021fa:	48 8b 85 60 fb ff ff 	mov    -0x4a0(%rbp),%rax
  402201:	48 83 c0 04          	add    $0x4,%rax
  402205:	48 89 85 60 fb ff ff 	mov    %rax,-0x4a0(%rbp)
  40220c:	e9 0a ff ff ff       	jmpq   40211b <main+0xd2b>
  402211:	48 8b 85 58 fb ff ff 	mov    -0x4a8(%rbp),%rax
  402218:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  40221e:	c7 04 25 f0 33 45 00 	movl   $0x1,0x4533f0
  402225:	01 00 00 00 
  402229:	48 b8 b0 31 45 00 00 	movabs $0x4531b0,%rax
  402230:	00 00 00 
  402233:	48 b9 00 34 45 00 00 	movabs $0x453400,%rcx
  40223a:	00 00 00 
  40223d:	48 8b 95 40 fb ff ff 	mov    -0x4c0(%rbp),%rdx
  402244:	48 89 4a 18          	mov    %rcx,0x18(%rdx)
  402248:	48 8b 95 40 fb ff ff 	mov    -0x4c0(%rbp),%rdx
  40224f:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
  402253:	48 8b 95 40 fb ff ff 	mov    -0x4c0(%rbp),%rdx
  40225a:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  40225e:	48 8b 95 40 fb ff ff 	mov    -0x4c0(%rbp),%rdx
  402265:	48 89 0a             	mov    %rcx,(%rdx)
  402268:	48 8b 8d 40 fb ff ff 	mov    -0x4c0(%rbp),%rcx
  40226f:	48 ba 70 cb 44 00 00 	movabs $0x44cb70,%rdx
  402276:	00 00 00 
  402279:	48 89 51 68          	mov    %rdx,0x68(%rcx)
  40227d:	48 8b 8d 40 fb ff ff 	mov    -0x4c0(%rbp),%rcx
  402284:	48 89 81 88 00 00 00 	mov    %rax,0x88(%rcx)
  40228b:	c7 85 c0 f7 ff ff 00 	movl   $0x0,-0x840(%rbp)
  402292:	00 00 00 
  402295:	eb 22                	jmp    4022b9 <main+0xec9>
  402297:	48 bf 80 6f 44 00 00 	movabs $0x446f80,%rdi
  40229e:	00 00 00 
  4022a1:	8b b5 c0 f7 ff ff    	mov    -0x840(%rbp),%esi
  4022a7:	b0 00                	mov    $0x0,%al
  4022a9:	e8 82 ed ff ff       	callq  401030 <printf@plt>
  4022ae:	89 85 20 e9 ff ff    	mov    %eax,-0x16e0(%rbp)
  4022b4:	e9 24 1d 00 00       	jmpq   403fdd <main+0x2bed>
  4022b9:	b8 01 00 00 00       	mov    $0x1,%eax
  4022be:	89 c7                	mov    %eax,%edi
  4022c0:	b8 18 00 00 00       	mov    $0x18,%eax
  4022c5:	89 c6                	mov    %eax,%esi
  4022c7:	48 8d 8d b8 ee ff ff 	lea    -0x1148(%rbp),%rcx
  4022ce:	48 8d 95 b8 ec ff ff 	lea    -0x1348(%rbp),%rdx
  4022d5:	48 89 95 a0 fb ff ff 	mov    %rdx,-0x460(%rbp)
  4022dc:	49 b8 90 87 42 00 00 	movabs $0x428790,%r8
  4022e3:	00 00 00 
  4022e6:	4c 89 85 98 fb ff ff 	mov    %r8,-0x468(%rbp)
  4022ed:	48 89 8d 90 fb ff ff 	mov    %rcx,-0x470(%rbp)
  4022f4:	48 8b 8d 98 fb ff ff 	mov    -0x468(%rbp),%rcx
  4022fb:	4c 8b 85 a0 fb ff ff 	mov    -0x460(%rbp),%r8
  402302:	49 89 48 30          	mov    %rcx,0x30(%r8)
  402306:	48 8b 8d 90 fb ff ff 	mov    -0x470(%rbp),%rcx
  40230d:	4c 8b 85 a0 fb ff ff 	mov    -0x460(%rbp),%r8
  402314:	49 89 48 38          	mov    %rcx,0x38(%r8)
  402318:	48 8b 0c 25 68 57 45 	mov    0x455768,%rcx
  40231f:	00 
  402320:	48 89 95 b8 fb ff ff 	mov    %rdx,-0x448(%rbp)
  402327:	49 b8 20 4b 40 00 00 	movabs $0x404b20,%r8
  40232e:	00 00 00 
  402331:	4c 89 85 b0 fb ff ff 	mov    %r8,-0x450(%rbp)
  402338:	48 89 8d a8 fb ff ff 	mov    %rcx,-0x458(%rbp)
  40233f:	48 8b 8d b0 fb ff ff 	mov    -0x450(%rbp),%rcx
  402346:	4c 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%r8
  40234d:	49 89 48 20          	mov    %rcx,0x20(%r8)
  402351:	48 8b 8d a8 fb ff ff 	mov    -0x458(%rbp),%rcx
  402358:	4c 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%r8
  40235f:	49 89 48 28          	mov    %rcx,0x28(%r8)
  402363:	48 8b 8d b0 ec ff ff 	mov    -0x1350(%rbp),%rcx
  40236a:	48 89 95 d0 fb ff ff 	mov    %rdx,-0x430(%rbp)
  402371:	48 89 8d c8 fb ff ff 	mov    %rcx,-0x438(%rbp)
  402378:	48 c7 85 c0 fb ff ff 	movq   $0x0,-0x440(%rbp)
  40237f:	00 00 00 00 
  402383:	48 8b 8d c8 fb ff ff 	mov    -0x438(%rbp),%rcx
  40238a:	4c 8b 85 d0 fb ff ff 	mov    -0x430(%rbp),%r8
  402391:	49 89 48 78          	mov    %rcx,0x78(%r8)
  402395:	48 8b 8d c0 fb ff ff 	mov    -0x440(%rbp),%rcx
  40239c:	4c 8b 85 d0 fb ff ff 	mov    -0x430(%rbp),%r8
  4023a3:	49 89 88 80 00 00 00 	mov    %rcx,0x80(%r8)
  4023aa:	48 89 95 e8 fb ff ff 	mov    %rdx,-0x418(%rbp)
  4023b1:	48 8d 8d 90 ea ff ff 	lea    -0x1570(%rbp),%rcx
  4023b8:	48 89 8d e0 fb ff ff 	mov    %rcx,-0x420(%rbp)
  4023bf:	48 8d 8d 50 ea ff ff 	lea    -0x15b0(%rbp),%rcx
  4023c6:	48 89 8d d8 fb ff ff 	mov    %rcx,-0x428(%rbp)
  4023cd:	48 8b 8d e8 fb ff ff 	mov    -0x418(%rbp),%rcx
  4023d4:	48 83 c1 70          	add    $0x70,%rcx
  4023d8:	48 8b 95 e0 fb ff ff 	mov    -0x420(%rbp),%rdx
  4023df:	4c 8b 85 d8 fb ff ff 	mov    -0x428(%rbp),%r8
  4023e6:	48 89 8d 10 fc ff ff 	mov    %rcx,-0x3f0(%rbp)
  4023ed:	48 89 95 08 fc ff ff 	mov    %rdx,-0x3f8(%rbp)
  4023f4:	4c 89 85 00 fc ff ff 	mov    %r8,-0x400(%rbp)
  4023fb:	e8 ea 43 04 00       	callq  4467ea <aes_calloc>
  402400:	48 89 85 f8 fb ff ff 	mov    %rax,-0x408(%rbp)
  402407:	48 83 bd f8 fb ff ff 	cmpq   $0x0,-0x408(%rbp)
  40240e:	00 
  40240f:	75 0f                	jne    402420 <main+0x1030>
  402411:	c7 85 18 fc ff ff 00 	movl   $0xffff8100,-0x3e8(%rbp)
  402418:	81 ff ff 
  40241b:	e9 a1 00 00 00       	jmpq   4024c1 <main+0x10d1>
  402420:	48 8b 85 08 fc ff ff 	mov    -0x3f8(%rbp),%rax
  402427:	48 8b 8d f8 fb ff ff 	mov    -0x408(%rbp),%rcx
  40242e:	48 89 01             	mov    %rax,(%rcx)
  402431:	48 8b 85 00 fc ff ff 	mov    -0x400(%rbp),%rax
  402438:	48 8b 8d f8 fb ff ff 	mov    -0x408(%rbp),%rcx
  40243f:	48 89 41 08          	mov    %rax,0x8(%rcx)
  402443:	48 8b 85 f8 fb ff ff 	mov    -0x408(%rbp),%rax
  40244a:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
  402451:	00 
  402452:	48 8b 85 10 fc ff ff 	mov    -0x3f0(%rbp),%rax
  402459:	48 83 38 00          	cmpq   $0x0,(%rax)
  40245d:	75 13                	jne    402472 <main+0x1082>
  40245f:	48 8b 85 f8 fb ff ff 	mov    -0x408(%rbp),%rax
  402466:	48 8b 8d 10 fc ff ff 	mov    -0x3f0(%rbp),%rcx
  40246d:	48 89 01             	mov    %rax,(%rcx)
  402470:	eb 45                	jmp    4024b7 <main+0x10c7>
  402472:	48 8b 85 10 fc ff ff 	mov    -0x3f0(%rbp),%rax
  402479:	48 8b 00             	mov    (%rax),%rax
  40247c:	48 89 85 f0 fb ff ff 	mov    %rax,-0x410(%rbp)
  402483:	48 8b 85 f0 fb ff ff 	mov    -0x410(%rbp),%rax
  40248a:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
  40248f:	74 14                	je     4024a5 <main+0x10b5>
  402491:	48 8b 85 f0 fb ff ff 	mov    -0x410(%rbp),%rax
  402498:	48 8b 40 10          	mov    0x10(%rax),%rax
  40249c:	48 89 85 f0 fb ff ff 	mov    %rax,-0x410(%rbp)
  4024a3:	eb de                	jmp    402483 <main+0x1093>
  4024a5:	48 8b 85 f8 fb ff ff 	mov    -0x408(%rbp),%rax
  4024ac:	48 8b 8d f0 fb ff ff 	mov    -0x410(%rbp),%rcx
  4024b3:	48 89 41 10          	mov    %rax,0x10(%rcx)
  4024b7:	c7 85 18 fc ff ff 00 	movl   $0x0,-0x3e8(%rbp)
  4024be:	00 00 00 
  4024c1:	8b 85 18 fc ff ff    	mov    -0x3e8(%rbp),%eax
  4024c7:	89 85 c0 f7 ff ff    	mov    %eax,-0x840(%rbp)
  4024cd:	83 f8 00             	cmp    $0x0,%eax
  4024d0:	74 22                	je     4024f4 <main+0x1104>
  4024d2:	48 bf c0 6f 44 00 00 	movabs $0x446fc0,%rdi
  4024d9:	00 00 00 
  4024dc:	8b b5 c0 f7 ff ff    	mov    -0x840(%rbp),%esi
  4024e2:	b0 00                	mov    $0x0,%al
  4024e4:	e8 47 eb ff ff       	callq  401030 <printf@plt>
  4024e9:	89 85 1c e9 ff ff    	mov    %eax,-0x16e4(%rbp)
  4024ef:	e9 e9 1a 00 00       	jmpq   403fdd <main+0x2bed>
  4024f4:	b8 01 00 00 00       	mov    $0x1,%eax
  4024f9:	89 c7                	mov    %eax,%edi
  4024fb:	b8 3d 41 00 00       	mov    $0x413d,%eax
  402500:	89 c6                	mov    %eax,%esi
  402502:	48 8d 8d 58 ed ff ff 	lea    -0x12a8(%rbp),%rcx
  402509:	48 89 8d 28 fc ff ff 	mov    %rcx,-0x3d8(%rbp)
  402510:	48 8d 8d b8 ec ff ff 	lea    -0x1348(%rbp),%rcx
  402517:	48 89 8d 20 fc ff ff 	mov    %rcx,-0x3e0(%rbp)
  40251e:	48 8b 8d 20 fc ff ff 	mov    -0x3e0(%rbp),%rcx
  402525:	48 8b 95 28 fc ff ff 	mov    -0x3d8(%rbp),%rdx
  40252c:	48 89 0a             	mov    %rcx,(%rdx)
  40252f:	48 8b 8d 28 fc ff ff 	mov    -0x3d8(%rbp),%rcx
  402536:	48 c7 81 f8 00 00 00 	movq   $0x0,0xf8(%rcx)
  40253d:	00 00 00 00 
  402541:	e8 a4 42 04 00       	callq  4467ea <aes_calloc>
  402546:	48 8b 8d 28 fc ff ff 	mov    -0x3d8(%rbp),%rcx
  40254d:	48 89 81 98 00 00 00 	mov    %rax,0x98(%rcx)
  402554:	48 8b 85 28 fc ff ff 	mov    -0x3d8(%rbp),%rax
  40255b:	48 83 b8 98 00 00 00 	cmpq   $0x0,0x98(%rax)
  402562:	00 
  402563:	75 0c                	jne    402571 <main+0x1181>
  402565:	c7 85 1c fc ff ff 00 	movl   $0xffff8100,-0x3e4(%rbp)
  40256c:	81 ff ff 
  40256f:	eb 72                	jmp    4025e3 <main+0x11f3>
  402571:	b8 01 00 00 00       	mov    $0x1,%eax
  402576:	89 c7                	mov    %eax,%edi
  402578:	b8 3d 41 00 00       	mov    $0x413d,%eax
  40257d:	89 c6                	mov    %eax,%esi
  40257f:	e8 66 42 04 00       	callq  4467ea <aes_calloc>
  402584:	48 8b b5 28 fc ff ff 	mov    -0x3d8(%rbp),%rsi
  40258b:	48 89 86 f8 00 00 00 	mov    %rax,0xf8(%rsi)
  402592:	48 8b 85 28 fc ff ff 	mov    -0x3d8(%rbp),%rax
  402599:	48 83 b8 f8 00 00 00 	cmpq   $0x0,0xf8(%rax)
  4025a0:	00 
  4025a1:	75 0c                	jne    4025af <main+0x11bf>
  4025a3:	c7 85 1c fc ff ff 00 	movl   $0xffff8100,-0x3e4(%rbp)
  4025aa:	81 ff ff 
  4025ad:	eb 34                	jmp    4025e3 <main+0x11f3>
  4025af:	48 8b bd 28 fc ff ff 	mov    -0x3d8(%rbp),%rdi
  4025b6:	e8 c5 96 00 00       	callq  40bc80 <ssl_reset_in_out_pointers>
  4025bb:	48 8b bd 28 fc ff ff 	mov    -0x3d8(%rbp),%rdi
  4025c2:	e8 79 98 00 00       	callq  40be40 <ssl_handshake_init>
  4025c7:	89 85 1c fc ff ff    	mov    %eax,-0x3e4(%rbp)
  4025cd:	83 f8 00             	cmp    $0x0,%eax
  4025d0:	74 02                	je     4025d4 <main+0x11e4>
  4025d2:	eb 0f                	jmp    4025e3 <main+0x11f3>
  4025d4:	c7 85 34 fc ff ff 00 	movl   $0x0,-0x3cc(%rbp)
  4025db:	00 00 00 
  4025de:	e9 18 01 00 00       	jmpq   4026fb <main+0x130b>
  4025e3:	48 8b 85 28 fc ff ff 	mov    -0x3d8(%rbp),%rax
  4025ea:	48 8b b8 98 00 00 00 	mov    0x98(%rax),%rdi
  4025f1:	e8 ea ea ff ff       	callq  4010e0 <free@plt>
  4025f6:	48 8b 85 28 fc ff ff 	mov    -0x3d8(%rbp),%rax
  4025fd:	48 8b b8 f8 00 00 00 	mov    0xf8(%rax),%rdi
  402604:	e8 d7 ea ff ff       	callq  4010e0 <free@plt>
  402609:	48 8b 85 28 fc ff ff 	mov    -0x3d8(%rbp),%rax
  402610:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  402617:	48 8b 85 28 fc ff ff 	mov    -0x3d8(%rbp),%rax
  40261e:	48 c7 80 98 00 00 00 	movq   $0x0,0x98(%rax)
  402625:	00 00 00 00 
  402629:	48 8b 85 28 fc ff ff 	mov    -0x3d8(%rbp),%rax
  402630:	48 c7 80 f8 00 00 00 	movq   $0x0,0xf8(%rax)
  402637:	00 00 00 00 
  40263b:	48 8b 85 28 fc ff ff 	mov    -0x3d8(%rbp),%rax
  402642:	48 c7 80 a8 00 00 00 	movq   $0x0,0xa8(%rax)
  402649:	00 00 00 00 
  40264d:	48 8b 85 28 fc ff ff 	mov    -0x3d8(%rbp),%rax
  402654:	48 c7 80 a0 00 00 00 	movq   $0x0,0xa0(%rax)
  40265b:	00 00 00 00 
  40265f:	48 8b 85 28 fc ff ff 	mov    -0x3d8(%rbp),%rax
  402666:	48 c7 80 b0 00 00 00 	movq   $0x0,0xb0(%rax)
  40266d:	00 00 00 00 
  402671:	48 8b 85 28 fc ff ff 	mov    -0x3d8(%rbp),%rax
  402678:	48 c7 80 b8 00 00 00 	movq   $0x0,0xb8(%rax)
  40267f:	00 00 00 00 
  402683:	48 8b 85 28 fc ff ff 	mov    -0x3d8(%rbp),%rax
  40268a:	48 c7 80 c0 00 00 00 	movq   $0x0,0xc0(%rax)
  402691:	00 00 00 00 
  402695:	48 8b 85 28 fc ff ff 	mov    -0x3d8(%rbp),%rax
  40269c:	48 c7 80 08 01 00 00 	movq   $0x0,0x108(%rax)
  4026a3:	00 00 00 00 
  4026a7:	48 8b 85 28 fc ff ff 	mov    -0x3d8(%rbp),%rax
  4026ae:	48 c7 80 00 01 00 00 	movq   $0x0,0x100(%rax)
  4026b5:	00 00 00 00 
  4026b9:	48 8b 85 28 fc ff ff 	mov    -0x3d8(%rbp),%rax
  4026c0:	48 c7 80 10 01 00 00 	movq   $0x0,0x110(%rax)
  4026c7:	00 00 00 00 
  4026cb:	48 8b 85 28 fc ff ff 	mov    -0x3d8(%rbp),%rax
  4026d2:	48 c7 80 18 01 00 00 	movq   $0x0,0x118(%rax)
  4026d9:	00 00 00 00 
  4026dd:	48 8b 85 28 fc ff ff 	mov    -0x3d8(%rbp),%rax
  4026e4:	48 c7 80 20 01 00 00 	movq   $0x0,0x120(%rax)
  4026eb:	00 00 00 00 
  4026ef:	8b 8d 1c fc ff ff    	mov    -0x3e4(%rbp),%ecx
  4026f5:	89 8d 34 fc ff ff    	mov    %ecx,-0x3cc(%rbp)
  4026fb:	8b 85 34 fc ff ff    	mov    -0x3cc(%rbp),%eax
  402701:	89 85 c0 f7 ff ff    	mov    %eax,-0x840(%rbp)
  402707:	83 f8 00             	cmp    $0x0,%eax
  40270a:	74 22                	je     40272e <main+0x133e>
  40270c:	48 bf 00 70 44 00 00 	movabs $0x447000,%rdi
  402713:	00 00 00 
  402716:	8b b5 c0 f7 ff ff    	mov    -0x840(%rbp),%esi
  40271c:	b0 00                	mov    $0x0,%al
  40271e:	e8 0d e9 ff ff       	callq  401030 <printf@plt>
  402723:	89 85 18 e9 ff ff    	mov    %eax,-0x16e8(%rbp)
  402729:	e9 af 18 00 00       	jmpq   403fdd <main+0x2bed>
  40272e:	48 bf 80 6e 44 00 00 	movabs $0x446e80,%rdi
  402735:	00 00 00 
  402738:	b0 00                	mov    $0x0,%al
  40273a:	e8 f1 e8 ff ff       	callq  401030 <printf@plt>
  40273f:	89 85 14 e9 ff ff    	mov    %eax,-0x16ec(%rbp)
  402745:	48 8d 85 b0 f7 ff ff 	lea    -0x850(%rbp),%rax
  40274c:	48 89 85 38 fc ff ff 	mov    %rax,-0x3c8(%rbp)
  402753:	48 8b 85 38 fc ff ff 	mov    -0x3c8(%rbp),%rax
  40275a:	83 38 ff             	cmpl   $0xffffffff,(%rax)
  40275d:	75 02                	jne    402761 <main+0x1371>
  40275f:	eb 3a                	jmp    40279b <main+0x13ab>
  402761:	48 8b 85 38 fc ff ff 	mov    -0x3c8(%rbp),%rax
  402768:	8b 38                	mov    (%rax),%edi
  40276a:	be 02 00 00 00       	mov    $0x2,%esi
  40276f:	e8 7c e9 ff ff       	callq  4010f0 <shutdown@plt>
  402774:	48 8b 8d 38 fc ff ff 	mov    -0x3c8(%rbp),%rcx
  40277b:	8b 39                	mov    (%rcx),%edi
  40277d:	89 85 10 e9 ff ff    	mov    %eax,-0x16f0(%rbp)
  402783:	e8 08 e9 ff ff       	callq  401090 <close@plt>
  402788:	48 8b 8d 38 fc ff ff 	mov    -0x3c8(%rbp),%rcx
  40278f:	c7 01 ff ff ff ff    	movl   $0xffffffff,(%rcx)
  402795:	89 85 0c e9 ff ff    	mov    %eax,-0x16f4(%rbp)
  40279b:	48 8d 85 58 ed ff ff 	lea    -0x12a8(%rbp),%rax
  4027a2:	48 89 85 40 fc ff ff 	mov    %rax,-0x3c0(%rbp)
  4027a9:	48 8b 85 40 fc ff ff 	mov    -0x3c0(%rbp),%rax
  4027b0:	48 89 85 50 fc ff ff 	mov    %rax,-0x3b0(%rbp)
  4027b7:	c7 85 4c fc ff ff 00 	movl   $0x0,-0x3b4(%rbp)
  4027be:	00 00 00 
  4027c1:	48 8b 85 50 fc ff ff 	mov    -0x3b0(%rbp),%rax
  4027c8:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
  4027cf:	48 8b 85 50 fc ff ff 	mov    -0x3b0(%rbp),%rax
  4027d6:	48 89 85 60 fc ff ff 	mov    %rax,-0x3a0(%rbp)
  4027dd:	c7 85 5c fc ff ff 00 	movl   $0x0,-0x3a4(%rbp)
  4027e4:	00 00 00 
  4027e7:	48 8b 85 60 fc ff ff 	mov    -0x3a0(%rbp),%rax
  4027ee:	48 83 b8 88 00 00 00 	cmpq   $0x0,0x88(%rax)
  4027f5:	00 
  4027f6:	75 02                	jne    4027fa <main+0x140a>
  4027f8:	eb 3b                	jmp    402835 <main+0x1445>
  4027fa:	48 8b 85 60 fc ff ff 	mov    -0x3a0(%rbp),%rax
  402801:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
  402808:	48 8b 8d 60 fc ff ff 	mov    -0x3a0(%rbp),%rcx
  40280f:	48 8b b9 80 00 00 00 	mov    0x80(%rcx),%rdi
  402816:	8b 95 5c fc ff ff    	mov    -0x3a4(%rbp),%edx
  40281c:	c1 ea 02             	shr    $0x2,%edx
  40281f:	8b b5 5c fc ff ff    	mov    -0x3a4(%rbp),%esi
  402825:	89 b5 08 e9 ff ff    	mov    %esi,-0x16f8(%rbp)
  40282b:	89 d6                	mov    %edx,%esi
  40282d:	8b 95 08 e9 ff ff    	mov    -0x16f8(%rbp),%edx
  402833:	ff d0                	callq  *%rax
  402835:	48 8b 85 50 fc ff ff 	mov    -0x3b0(%rbp),%rax
  40283c:	c7 80 58 01 00 00 00 	movl   $0x0,0x158(%rax)
  402843:	00 00 00 
  402846:	48 8b 85 50 fc ff ff 	mov    -0x3b0(%rbp),%rax
  40284d:	48 c7 80 c8 00 00 00 	movq   $0x0,0xc8(%rax)
  402854:	00 00 00 00 
  402858:	48 8b bd 50 fc ff ff 	mov    -0x3b0(%rbp),%rdi
  40285f:	e8 1c 94 00 00       	callq  40bc80 <ssl_reset_in_out_pointers>
  402864:	31 c9                	xor    %ecx,%ecx
  402866:	ba 3d 41 00 00       	mov    $0x413d,%edx
  40286b:	89 d0                	mov    %edx,%eax
  40286d:	ba 08 00 00 00       	mov    $0x8,%edx
  402872:	48 8b bd 50 fc ff ff 	mov    -0x3b0(%rbp),%rdi
  402879:	c7 87 d0 00 00 00 00 	movl   $0x0,0xd0(%rdi)
  402880:	00 00 00 
  402883:	48 8b bd 50 fc ff ff 	mov    -0x3b0(%rbp),%rdi
  40288a:	48 c7 87 d8 00 00 00 	movq   $0x0,0xd8(%rdi)
  402891:	00 00 00 00 
  402895:	48 8b bd 50 fc ff ff 	mov    -0x3b0(%rbp),%rdi
  40289c:	48 c7 87 e8 00 00 00 	movq   $0x0,0xe8(%rdi)
  4028a3:	00 00 00 00 
  4028a7:	48 8b bd 50 fc ff ff 	mov    -0x3b0(%rbp),%rdi
  4028ae:	c7 87 f0 00 00 00 00 	movl   $0x0,0xf0(%rdi)
  4028b5:	00 00 00 
  4028b8:	48 8b bd 50 fc ff ff 	mov    -0x3b0(%rbp),%rdi
  4028bf:	c7 87 f4 00 00 00 00 	movl   $0x0,0xf4(%rdi)
  4028c6:	00 00 00 
  4028c9:	48 8b bd 50 fc ff ff 	mov    -0x3b0(%rbp),%rdi
  4028d0:	c7 87 28 01 00 00 00 	movl   $0x0,0x128(%rdi)
  4028d7:	00 00 00 
  4028da:	48 8b bd 50 fc ff ff 	mov    -0x3b0(%rbp),%rdi
  4028e1:	48 c7 87 30 01 00 00 	movq   $0x0,0x130(%rdi)
  4028e8:	00 00 00 00 
  4028ec:	48 8b bd 50 fc ff ff 	mov    -0x3b0(%rbp),%rdi
  4028f3:	48 c7 87 38 01 00 00 	movq   $0x0,0x138(%rdi)
  4028fa:	00 00 00 00 
  4028fe:	48 8b bd 50 fc ff ff 	mov    -0x3b0(%rbp),%rdi
  402905:	48 81 c7 40 01 00 00 	add    $0x140,%rdi
  40290c:	89 ce                	mov    %ecx,%esi
  40290e:	89 8d 04 e9 ff ff    	mov    %ecx,-0x16fc(%rbp)
  402914:	48 89 85 f8 e8 ff ff 	mov    %rax,-0x1708(%rbp)
  40291b:	e8 00 e7 ff ff       	callq  401020 <memset@plt>
  402920:	48 8b 85 50 fc ff ff 	mov    -0x3b0(%rbp),%rax
  402927:	48 c7 40 60 00 00 00 	movq   $0x0,0x60(%rax)
  40292e:	00 
  40292f:	48 8b 85 50 fc ff ff 	mov    -0x3b0(%rbp),%rax
  402936:	48 c7 40 68 00 00 00 	movq   $0x0,0x68(%rax)
  40293d:	00 
  40293e:	48 8b 85 50 fc ff ff 	mov    -0x3b0(%rbp),%rax
  402945:	48 c7 40 38 00 00 00 	movq   $0x0,0x38(%rax)
  40294c:	00 
  40294d:	48 8b 85 50 fc ff ff 	mov    -0x3b0(%rbp),%rax
  402954:	48 c7 40 40 00 00 00 	movq   $0x0,0x40(%rax)
  40295b:	00 
  40295c:	48 8b 85 50 fc ff ff 	mov    -0x3b0(%rbp),%rax
  402963:	48 8b b8 f8 00 00 00 	mov    0xf8(%rax),%rdi
  40296a:	8b b5 04 e9 ff ff    	mov    -0x16fc(%rbp),%esi
  402970:	48 8b 95 f8 e8 ff ff 	mov    -0x1708(%rbp),%rdx
  402977:	e8 a4 e6 ff ff       	callq  401020 <memset@plt>
  40297c:	48 8b 85 50 fc ff ff 	mov    -0x3b0(%rbp),%rax
  402983:	48 c7 80 e0 00 00 00 	movq   $0x0,0xe0(%rax)
  40298a:	00 00 00 00 
  40298e:	48 8b 85 50 fc ff ff 	mov    -0x3b0(%rbp),%rax
  402995:	48 8b b8 98 00 00 00 	mov    0x98(%rax),%rdi
  40299c:	8b b5 04 e9 ff ff    	mov    -0x16fc(%rbp),%esi
  4029a2:	48 8b 95 f8 e8 ff ff 	mov    -0x1708(%rbp),%rdx
  4029a9:	e8 72 e6 ff ff       	callq  401020 <memset@plt>
  4029ae:	48 8b 85 50 fc ff ff 	mov    -0x3b0(%rbp),%rax
  4029b5:	48 83 78 70 00       	cmpq   $0x0,0x70(%rax)
  4029ba:	0f 84 b1 01 00 00    	je     402b71 <main+0x1781>
  4029c0:	48 8b 85 50 fc ff ff 	mov    -0x3b0(%rbp),%rax
  4029c7:	48 8b 40 70          	mov    0x70(%rax),%rax
  4029cb:	48 89 85 68 fc ff ff 	mov    %rax,-0x398(%rbp)
  4029d2:	48 83 bd 68 fc ff ff 	cmpq   $0x0,-0x398(%rbp)
  4029d9:	00 
  4029da:	75 05                	jne    4029e1 <main+0x15f1>
  4029dc:	e9 6e 01 00 00       	jmpq   402b4f <main+0x175f>
  4029e1:	48 8b 85 68 fc ff ff 	mov    -0x398(%rbp),%rax
  4029e8:	48 05 80 00 00 00    	add    $0x80,%rax
  4029ee:	48 89 85 98 fc ff ff 	mov    %rax,-0x368(%rbp)
  4029f5:	48 83 bd 98 fc ff ff 	cmpq   $0x0,-0x368(%rbp)
  4029fc:	00 
  4029fd:	75 02                	jne    402a01 <main+0x1611>
  4029ff:	eb 67                	jmp    402a68 <main+0x1678>
  402a01:	48 8b 85 98 fc ff ff 	mov    -0x368(%rbp),%rax
  402a08:	48 83 78 50 00       	cmpq   $0x0,0x50(%rax)
  402a0d:	74 1f                	je     402a2e <main+0x163e>
  402a0f:	48 8b 85 98 fc ff ff 	mov    -0x368(%rbp),%rax
  402a16:	48 8b 00             	mov    (%rax),%rax
  402a19:	48 8b 40 28          	mov    0x28(%rax),%rax
  402a1d:	48 8b 40 30          	mov    0x30(%rax),%rax
  402a21:	48 8b 8d 98 fc ff ff 	mov    -0x368(%rbp),%rcx
  402a28:	48 8b 79 50          	mov    0x50(%rcx),%rdi
  402a2c:	ff d0                	callq  *%rax
  402a2e:	31 f6                	xor    %esi,%esi
  402a30:	48 8b 85 98 fc ff ff 	mov    -0x368(%rbp),%rax
  402a37:	48 89 85 a8 fc ff ff 	mov    %rax,-0x358(%rbp)
  402a3e:	48 c7 85 a0 fc ff ff 	movq   $0x58,-0x360(%rbp)
  402a45:	58 00 00 00 
  402a49:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  402a50:	00 
  402a51:	48 8b bd a8 fc ff ff 	mov    -0x358(%rbp),%rdi
  402a58:	48 8b 95 a0 fc ff ff 	mov    -0x360(%rbp),%rdx
  402a5f:	ff d0                	callq  *%rax
  402a61:	48 89 85 f0 e8 ff ff 	mov    %rax,-0x1710(%rbp)
  402a68:	48 8b 85 68 fc ff ff 	mov    -0x398(%rbp),%rax
  402a6f:	48 05 d8 00 00 00    	add    $0xd8,%rax
  402a75:	48 89 85 b0 fc ff ff 	mov    %rax,-0x350(%rbp)
  402a7c:	48 83 bd b0 fc ff ff 	cmpq   $0x0,-0x350(%rbp)
  402a83:	00 
  402a84:	75 02                	jne    402a88 <main+0x1698>
  402a86:	eb 67                	jmp    402aef <main+0x16ff>
  402a88:	48 8b 85 b0 fc ff ff 	mov    -0x350(%rbp),%rax
  402a8f:	48 83 78 50 00       	cmpq   $0x0,0x50(%rax)
  402a94:	74 1f                	je     402ab5 <main+0x16c5>
  402a96:	48 8b 85 b0 fc ff ff 	mov    -0x350(%rbp),%rax
  402a9d:	48 8b 00             	mov    (%rax),%rax
  402aa0:	48 8b 40 28          	mov    0x28(%rax),%rax
  402aa4:	48 8b 40 30          	mov    0x30(%rax),%rax
  402aa8:	48 8b 8d b0 fc ff ff 	mov    -0x350(%rbp),%rcx
  402aaf:	48 8b 79 50          	mov    0x50(%rcx),%rdi
  402ab3:	ff d0                	callq  *%rax
  402ab5:	31 f6                	xor    %esi,%esi
  402ab7:	48 8b 85 b0 fc ff ff 	mov    -0x350(%rbp),%rax
  402abe:	48 89 85 c0 fc ff ff 	mov    %rax,-0x340(%rbp)
  402ac5:	48 c7 85 b8 fc ff ff 	movq   $0x58,-0x348(%rbp)
  402acc:	58 00 00 00 
  402ad0:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  402ad7:	00 
  402ad8:	48 8b bd c0 fc ff ff 	mov    -0x340(%rbp),%rdi
  402adf:	48 8b 95 b8 fc ff ff 	mov    -0x348(%rbp),%rdx
  402ae6:	ff d0                	callq  *%rax
  402ae8:	48 89 85 e8 e8 ff ff 	mov    %rax,-0x1718(%rbp)
  402aef:	48 8b 85 68 fc ff ff 	mov    -0x398(%rbp),%rax
  402af6:	48 83 c0 50          	add    $0x50,%rax
  402afa:	48 89 c7             	mov    %rax,%rdi
  402afd:	e8 5e 84 02 00       	callq  42af60 <mbedtls_md_free>
  402b02:	48 8b 85 68 fc ff ff 	mov    -0x398(%rbp),%rax
  402b09:	48 83 c0 68          	add    $0x68,%rax
  402b0d:	48 89 c7             	mov    %rax,%rdi
  402b10:	e8 4b 84 02 00       	callq  42af60 <mbedtls_md_free>
  402b15:	31 f6                	xor    %esi,%esi
  402b17:	48 8b 85 68 fc ff ff 	mov    -0x398(%rbp),%rax
  402b1e:	48 89 85 78 fc ff ff 	mov    %rax,-0x388(%rbp)
  402b25:	48 c7 85 70 fc ff ff 	movq   $0x130,-0x390(%rbp)
  402b2c:	30 01 00 00 
  402b30:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  402b37:	00 
  402b38:	48 8b bd 78 fc ff ff 	mov    -0x388(%rbp),%rdi
  402b3f:	48 8b 95 70 fc ff ff 	mov    -0x390(%rbp),%rdx
  402b46:	ff d0                	callq  *%rax
  402b48:	48 89 85 e0 e8 ff ff 	mov    %rax,-0x1720(%rbp)
  402b4f:	48 8b 85 50 fc ff ff 	mov    -0x3b0(%rbp),%rax
  402b56:	48 8b 40 70          	mov    0x70(%rax),%rax
  402b5a:	48 89 c7             	mov    %rax,%rdi
  402b5d:	e8 7e e5 ff ff       	callq  4010e0 <free@plt>
  402b62:	48 8b 85 50 fc ff ff 	mov    -0x3b0(%rbp),%rax
  402b69:	48 c7 40 70 00 00 00 	movq   $0x0,0x70(%rax)
  402b70:	00 
  402b71:	48 8b 85 50 fc ff ff 	mov    -0x3b0(%rbp),%rax
  402b78:	48 83 78 48 00       	cmpq   $0x0,0x48(%rax)
  402b7d:	0f 84 ab 00 00 00    	je     402c2e <main+0x183e>
  402b83:	48 8b 85 50 fc ff ff 	mov    -0x3b0(%rbp),%rax
  402b8a:	48 8b 40 48          	mov    0x48(%rax),%rax
  402b8e:	48 89 85 80 fc ff ff 	mov    %rax,-0x380(%rbp)
  402b95:	48 83 bd 80 fc ff ff 	cmpq   $0x0,-0x380(%rbp)
  402b9c:	00 
  402b9d:	75 02                	jne    402ba1 <main+0x17b1>
  402b9f:	eb 6b                	jmp    402c0c <main+0x181c>
  402ba1:	48 8b 85 80 fc ff ff 	mov    -0x380(%rbp),%rax
  402ba8:	48 83 78 68 00       	cmpq   $0x0,0x68(%rax)
  402bad:	74 23                	je     402bd2 <main+0x17e2>
  402baf:	48 8b 85 80 fc ff ff 	mov    -0x380(%rbp),%rax
  402bb6:	48 8b 78 68          	mov    0x68(%rax),%rdi
  402bba:	e8 b1 33 01 00       	callq  415f70 <mbedtls_x509_crt_free>
  402bbf:	48 8b 85 80 fc ff ff 	mov    -0x380(%rbp),%rax
  402bc6:	48 8b 40 68          	mov    0x68(%rax),%rax
  402bca:	48 89 c7             	mov    %rax,%rdi
  402bcd:	e8 0e e5 ff ff       	callq  4010e0 <free@plt>
  402bd2:	31 f6                	xor    %esi,%esi
  402bd4:	48 8b 85 80 fc ff ff 	mov    -0x380(%rbp),%rax
  402bdb:	48 89 85 90 fc ff ff 	mov    %rax,-0x370(%rbp)
  402be2:	48 c7 85 88 fc ff ff 	movq   $0x78,-0x378(%rbp)
  402be9:	78 00 00 00 
  402bed:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  402bf4:	00 
  402bf5:	48 8b bd 90 fc ff ff 	mov    -0x370(%rbp),%rdi
  402bfc:	48 8b 95 88 fc ff ff 	mov    -0x378(%rbp),%rdx
  402c03:	ff d0                	callq  *%rax
  402c05:	48 89 85 d8 e8 ff ff 	mov    %rax,-0x1728(%rbp)
  402c0c:	48 8b 85 50 fc ff ff 	mov    -0x3b0(%rbp),%rax
  402c13:	48 8b 40 48          	mov    0x48(%rax),%rax
  402c17:	48 89 c7             	mov    %rax,%rdi
  402c1a:	e8 c1 e4 ff ff       	callq  4010e0 <free@plt>
  402c1f:	48 8b 85 50 fc ff ff 	mov    -0x3b0(%rbp),%rax
  402c26:	48 c7 40 48 00 00 00 	movq   $0x0,0x48(%rax)
  402c2d:	00 
  402c2e:	48 8b bd 50 fc ff ff 	mov    -0x3b0(%rbp),%rdi
  402c35:	e8 06 92 00 00       	callq  40be40 <ssl_handshake_init>
  402c3a:	89 85 48 fc ff ff    	mov    %eax,-0x3b8(%rbp)
  402c40:	83 f8 00             	cmp    $0x0,%eax
  402c43:	74 0e                	je     402c53 <main+0x1863>
  402c45:	8b 85 48 fc ff ff    	mov    -0x3b8(%rbp),%eax
  402c4b:	89 85 58 fc ff ff    	mov    %eax,-0x3a8(%rbp)
  402c51:	eb 0a                	jmp    402c5d <main+0x186d>
  402c53:	c7 85 58 fc ff ff 00 	movl   $0x0,-0x3a8(%rbp)
  402c5a:	00 00 00 
  402c5d:	48 bf 30 70 44 00 00 	movabs $0x447030,%rdi
  402c64:	00 00 00 
  402c67:	b0 00                	mov    $0x0,%al
  402c69:	e8 c2 e3 ff ff       	callq  401030 <printf@plt>
  402c6e:	48 8b 3c 25 68 57 45 	mov    0x455768,%rdi
  402c75:	00 
  402c76:	89 85 d4 e8 ff ff    	mov    %eax,-0x172c(%rbp)
  402c7c:	e8 bf e3 ff ff       	callq  401040 <fflush@plt>
  402c81:	48 8d bd b8 f7 ff ff 	lea    -0x848(%rbp),%rdi
  402c88:	48 89 bd 18 fe ff ff 	mov    %rdi,-0x1e8(%rbp)
  402c8f:	48 8d bd b0 f7 ff ff 	lea    -0x850(%rbp),%rdi
  402c96:	48 89 bd 10 fe ff ff 	mov    %rdi,-0x1f0(%rbp)
  402c9d:	48 c7 85 08 fe ff ff 	movq   $0x0,-0x1f8(%rbp)
  402ca4:	00 00 00 00 
  402ca8:	48 c7 85 00 fe ff ff 	movq   $0x0,-0x200(%rbp)
  402caf:	00 00 00 00 
  402cb3:	48 c7 85 f8 fd ff ff 	movq   $0x0,-0x208(%rbp)
  402cba:	00 00 00 00 
  402cbe:	c7 85 6c fd ff ff 80 	movl   $0x80,-0x294(%rbp)
  402cc5:	00 00 00 
  402cc8:	c7 85 68 fd ff ff 04 	movl   $0x4,-0x298(%rbp)
  402ccf:	00 00 00 
  402cd2:	48 8b bd 18 fe ff ff 	mov    -0x1e8(%rbp),%rdi
  402cd9:	8b 3f                	mov    (%rdi),%edi
  402cdb:	48 8d 8d f0 fd ff ff 	lea    -0x210(%rbp),%rcx
  402ce2:	be 01 00 00 00       	mov    $0x1,%esi
  402ce7:	ba 03 00 00 00       	mov    $0x3,%edx
  402cec:	4c 8d 85 68 fd ff ff 	lea    -0x298(%rbp),%r8
  402cf3:	89 85 d0 e8 ff ff    	mov    %eax,-0x1730(%rbp)
  402cf9:	e8 02 e4 ff ff       	callq  401100 <getsockopt@plt>
  402cfe:	83 f8 00             	cmp    $0x0,%eax
  402d01:	75 12                	jne    402d15 <main+0x1925>
  402d03:	83 bd f0 fd ff ff 01 	cmpl   $0x1,-0x210(%rbp)
  402d0a:	74 18                	je     402d24 <main+0x1934>
  402d0c:	83 bd f0 fd ff ff 02 	cmpl   $0x2,-0x210(%rbp)
  402d13:	74 0f                	je     402d24 <main+0x1934>
  402d15:	c7 85 20 fe ff ff b6 	movl   $0xffffffb6,-0x1e0(%rbp)
  402d1c:	ff ff ff 
  402d1f:	e9 87 03 00 00       	jmpq   4030ab <main+0x1cbb>
  402d24:	83 bd f0 fd ff ff 01 	cmpl   $0x1,-0x210(%rbp)
  402d2b:	75 30                	jne    402d5d <main+0x196d>
  402d2d:	48 8b 85 18 fe ff ff 	mov    -0x1e8(%rbp),%rax
  402d34:	8b 38                	mov    (%rax),%edi
  402d36:	48 8d 85 70 fd ff ff 	lea    -0x290(%rbp),%rax
  402d3d:	48 89 c6             	mov    %rax,%rsi
  402d40:	48 8d 95 6c fd ff ff 	lea    -0x294(%rbp),%rdx
  402d47:	e8 c4 e3 ff ff       	callq  401110 <accept@plt>
  402d4c:	48 8b 95 10 fe ff ff 	mov    -0x1f0(%rbp),%rdx
  402d53:	89 02                	mov    %eax,(%rdx)
  402d55:	89 85 f4 fd ff ff    	mov    %eax,-0x20c(%rbp)
  402d5b:	eb 70                	jmp    402dcd <main+0x19dd>
  402d5d:	b8 01 00 00 00       	mov    $0x1,%eax
  402d62:	89 c1                	mov    %eax,%ecx
  402d64:	48 8d 95 67 fd ff ff 	lea    -0x299(%rbp),%rdx
  402d6b:	31 f6                	xor    %esi,%esi
  402d6d:	48 89 d7             	mov    %rdx,%rdi
  402d70:	48 89 95 c8 e8 ff ff 	mov    %rdx,-0x1738(%rbp)
  402d77:	48 89 ca             	mov    %rcx,%rdx
  402d7a:	48 89 8d c0 e8 ff ff 	mov    %rcx,-0x1740(%rbp)
  402d81:	e8 9a e2 ff ff       	callq  401020 <memset@plt>
  402d86:	48 8b 8d 18 fe ff ff 	mov    -0x1e8(%rbp),%rcx
  402d8d:	8b 39                	mov    (%rcx),%edi
  402d8f:	48 8d 8d 70 fd ff ff 	lea    -0x290(%rbp),%rcx
  402d96:	48 8b b5 c8 e8 ff ff 	mov    -0x1738(%rbp),%rsi
  402d9d:	48 8b 95 c0 e8 ff ff 	mov    -0x1740(%rbp),%rdx
  402da4:	b8 02 00 00 00       	mov    $0x2,%eax
  402da9:	48 89 8d b8 e8 ff ff 	mov    %rcx,-0x1748(%rbp)
  402db0:	89 c1                	mov    %eax,%ecx
  402db2:	4c 8b 85 b8 e8 ff ff 	mov    -0x1748(%rbp),%r8
  402db9:	4c 8d 8d 6c fd ff ff 	lea    -0x294(%rbp),%r9
  402dc0:	e8 5b e3 ff ff       	callq  401120 <recvfrom@plt>
  402dc5:	89 c1                	mov    %eax,%ecx
  402dc7:	89 8d f4 fd ff ff    	mov    %ecx,-0x20c(%rbp)
  402dcd:	83 bd f4 fd ff ff 00 	cmpl   $0x0,-0x20c(%rbp)
  402dd4:	0f 8d be 00 00 00    	jge    402e98 <main+0x1aa8>
  402dda:	48 8b 85 18 fe ff ff 	mov    -0x1e8(%rbp),%rax
  402de1:	48 89 85 28 fe ff ff 	mov    %rax,-0x1d8(%rbp)
  402de8:	e8 43 e3 ff ff       	callq  401130 <__errno_location@plt>
  402ded:	8b 08                	mov    (%rax),%ecx
  402def:	89 8d 24 fe ff ff    	mov    %ecx,-0x1dc(%rbp)
  402df5:	48 8b 85 28 fe ff ff 	mov    -0x1d8(%rbp),%rax
  402dfc:	8b 38                	mov    (%rax),%edi
  402dfe:	be 03 00 00 00       	mov    $0x3,%esi
  402e03:	b0 00                	mov    $0x0,%al
  402e05:	e8 36 e3 ff ff       	callq  401140 <fcntl@plt>
  402e0a:	25 00 08 00 00       	and    $0x800,%eax
  402e0f:	3d 00 08 00 00       	cmp    $0x800,%eax
  402e14:	74 25                	je     402e3b <main+0x1a4b>
  402e16:	8b 85 24 fe ff ff    	mov    -0x1dc(%rbp),%eax
  402e1c:	89 85 b4 e8 ff ff    	mov    %eax,-0x174c(%rbp)
  402e22:	e8 09 e3 ff ff       	callq  401130 <__errno_location@plt>
  402e27:	8b 8d b4 e8 ff ff    	mov    -0x174c(%rbp),%ecx
  402e2d:	89 08                	mov    %ecx,(%rax)
  402e2f:	c7 85 34 fe ff ff 00 	movl   $0x0,-0x1cc(%rbp)
  402e36:	00 00 00 
  402e39:	eb 34                	jmp    402e6f <main+0x1a7f>
  402e3b:	8b 85 24 fe ff ff    	mov    -0x1dc(%rbp),%eax
  402e41:	89 85 b0 e8 ff ff    	mov    %eax,-0x1750(%rbp)
  402e47:	e8 e4 e2 ff ff       	callq  401130 <__errno_location@plt>
  402e4c:	8b 8d b0 e8 ff ff    	mov    -0x1750(%rbp),%ecx
  402e52:	89 08                	mov    %ecx,(%rax)
  402e54:	83 f9 0b             	cmp    $0xb,%ecx
  402e57:	75 0c                	jne    402e65 <main+0x1a75>
  402e59:	c7 85 34 fe ff ff 01 	movl   $0x1,-0x1cc(%rbp)
  402e60:	00 00 00 
  402e63:	eb 0a                	jmp    402e6f <main+0x1a7f>
  402e65:	c7 85 34 fe ff ff 00 	movl   $0x0,-0x1cc(%rbp)
  402e6c:	00 00 00 
  402e6f:	8b 85 34 fe ff ff    	mov    -0x1cc(%rbp),%eax
  402e75:	83 f8 00             	cmp    $0x0,%eax
  402e78:	74 0f                	je     402e89 <main+0x1a99>
  402e7a:	c7 85 20 fe ff ff 00 	movl   $0xffff9700,-0x1e0(%rbp)
  402e81:	97 ff ff 
  402e84:	e9 22 02 00 00       	jmpq   4030ab <main+0x1cbb>
  402e89:	c7 85 20 fe ff ff b6 	movl   $0xffffffb6,-0x1e0(%rbp)
  402e90:	ff ff ff 
  402e93:	e9 13 02 00 00       	jmpq   4030ab <main+0x1cbb>
  402e98:	83 bd f0 fd ff ff 01 	cmpl   $0x1,-0x210(%rbp)
  402e9f:	0f 84 1d 01 00 00    	je     402fc2 <main+0x1bd2>
  402ea5:	c7 85 dc fc ff ff 01 	movl   $0x1,-0x324(%rbp)
  402eac:	00 00 00 
  402eaf:	48 8b 85 18 fe ff ff 	mov    -0x1e8(%rbp),%rax
  402eb6:	8b 38                	mov    (%rax),%edi
  402eb8:	48 8d 85 70 fd ff ff 	lea    -0x290(%rbp),%rax
  402ebf:	8b 95 6c fd ff ff    	mov    -0x294(%rbp),%edx
  402ec5:	48 89 c6             	mov    %rax,%rsi
  402ec8:	e8 83 e2 ff ff       	callq  401150 <connect@plt>
  402ecd:	83 f8 00             	cmp    $0x0,%eax
  402ed0:	74 0f                	je     402ee1 <main+0x1af1>
  402ed2:	c7 85 20 fe ff ff b6 	movl   $0xffffffb6,-0x1e0(%rbp)
  402ed9:	ff ff ff 
  402edc:	e9 ca 01 00 00       	jmpq   4030ab <main+0x1cbb>
  402ee1:	48 8b 85 18 fe ff ff 	mov    -0x1e8(%rbp),%rax
  402ee8:	8b 08                	mov    (%rax),%ecx
  402eea:	48 8b 85 10 fe ff ff 	mov    -0x1f0(%rbp),%rax
  402ef1:	89 08                	mov    %ecx,(%rax)
  402ef3:	48 8b 85 18 fe ff ff 	mov    -0x1e8(%rbp),%rax
  402efa:	c7 00 ff ff ff ff    	movl   $0xffffffff,(%rax)
  402f00:	c7 85 6c fd ff ff 80 	movl   $0x80,-0x294(%rbp)
  402f07:	00 00 00 
  402f0a:	48 8b 85 10 fe ff ff 	mov    -0x1f0(%rbp),%rax
  402f11:	8b 38                	mov    (%rax),%edi
  402f13:	48 8d 85 e0 fc ff ff 	lea    -0x320(%rbp),%rax
  402f1a:	48 89 c6             	mov    %rax,%rsi
  402f1d:	48 8d 95 6c fd ff ff 	lea    -0x294(%rbp),%rdx
  402f24:	e8 37 e2 ff ff       	callq  401160 <getsockname@plt>
  402f29:	83 f8 00             	cmp    $0x0,%eax
  402f2c:	75 51                	jne    402f7f <main+0x1b8f>
  402f2e:	0f b7 bd e0 fc ff ff 	movzwl -0x320(%rbp),%edi
  402f35:	be 02 00 00 00       	mov    $0x2,%esi
  402f3a:	ba 11 00 00 00       	mov    $0x11,%edx
  402f3f:	e8 2c e1 ff ff       	callq  401070 <socket@plt>
  402f44:	48 8b 8d 18 fe ff ff 	mov    -0x1e8(%rbp),%rcx
  402f4b:	89 01                	mov    %eax,(%rcx)
  402f4d:	83 f8 00             	cmp    $0x0,%eax
  402f50:	7c 2d                	jl     402f7f <main+0x1b8f>
  402f52:	48 8b 85 18 fe ff ff 	mov    -0x1e8(%rbp),%rax
  402f59:	8b 38                	mov    (%rax),%edi
  402f5b:	48 8d 85 dc fc ff ff 	lea    -0x324(%rbp),%rax
  402f62:	be 01 00 00 00       	mov    $0x1,%esi
  402f67:	ba 02 00 00 00       	mov    $0x2,%edx
  402f6c:	48 89 c1             	mov    %rax,%rcx
  402f6f:	41 b8 04 00 00 00    	mov    $0x4,%r8d
  402f75:	e8 06 e1 ff ff       	callq  401080 <setsockopt@plt>
  402f7a:	83 f8 00             	cmp    $0x0,%eax
  402f7d:	74 0f                	je     402f8e <main+0x1b9e>
  402f7f:	c7 85 20 fe ff ff be 	movl   $0xffffffbe,-0x1e0(%rbp)
  402f86:	ff ff ff 
  402f89:	e9 1d 01 00 00       	jmpq   4030ab <main+0x1cbb>
  402f8e:	48 8b 85 18 fe ff ff 	mov    -0x1e8(%rbp),%rax
  402f95:	8b 38                	mov    (%rax),%edi
  402f97:	48 8d 85 e0 fc ff ff 	lea    -0x320(%rbp),%rax
  402f9e:	8b 95 6c fd ff ff    	mov    -0x294(%rbp),%edx
  402fa4:	48 89 c6             	mov    %rax,%rsi
  402fa7:	e8 f4 e0 ff ff       	callq  4010a0 <bind@plt>
  402fac:	83 f8 00             	cmp    $0x0,%eax
  402faf:	74 0f                	je     402fc0 <main+0x1bd0>
  402fb1:	c7 85 20 fe ff ff ba 	movl   $0xffffffba,-0x1e0(%rbp)
  402fb8:	ff ff ff 
  402fbb:	e9 eb 00 00 00       	jmpq   4030ab <main+0x1cbb>
  402fc0:	eb 00                	jmp    402fc2 <main+0x1bd2>
  402fc2:	48 83 bd 08 fe ff ff 	cmpq   $0x0,-0x1f8(%rbp)
  402fc9:	00 
  402fca:	0f 84 d1 00 00 00    	je     4030a1 <main+0x1cb1>
  402fd0:	0f b7 85 70 fd ff ff 	movzwl -0x290(%rbp),%eax
  402fd7:	83 f8 02             	cmp    $0x2,%eax
  402fda:	75 64                	jne    403040 <main+0x1c50>
  402fdc:	48 8d 85 70 fd ff ff 	lea    -0x290(%rbp),%rax
  402fe3:	48 89 85 d0 fc ff ff 	mov    %rax,-0x330(%rbp)
  402fea:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
  402ff1:	48 c7 00 04 00 00 00 	movq   $0x4,(%rax)
  402ff8:	48 8b 85 00 fe ff ff 	mov    -0x200(%rbp),%rax
  402fff:	48 8b 8d f8 fd ff ff 	mov    -0x208(%rbp),%rcx
  403006:	48 3b 01             	cmp    (%rcx),%rax
  403009:	73 0f                	jae    40301a <main+0x1c2a>
  40300b:	c7 85 20 fe ff ff bd 	movl   $0xffffffbd,-0x1e0(%rbp)
  403012:	ff ff ff 
  403015:	e9 91 00 00 00       	jmpq   4030ab <main+0x1cbb>
  40301a:	48 8b bd 08 fe ff ff 	mov    -0x1f8(%rbp),%rdi
  403021:	48 8b 85 d0 fc ff ff 	mov    -0x330(%rbp),%rax
  403028:	48 83 c0 04          	add    $0x4,%rax
  40302c:	48 8b 8d f8 fd ff ff 	mov    -0x208(%rbp),%rcx
  403033:	48 8b 11             	mov    (%rcx),%rdx
  403036:	48 89 c6             	mov    %rax,%rsi
  403039:	e8 32 e1 ff ff       	callq  401170 <memcpy@plt>
  40303e:	eb 5f                	jmp    40309f <main+0x1caf>
  403040:	48 8d 85 70 fd ff ff 	lea    -0x290(%rbp),%rax
  403047:	48 89 85 c8 fc ff ff 	mov    %rax,-0x338(%rbp)
  40304e:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
  403055:	48 c7 00 10 00 00 00 	movq   $0x10,(%rax)
  40305c:	48 8b 85 00 fe ff ff 	mov    -0x200(%rbp),%rax
  403063:	48 8b 8d f8 fd ff ff 	mov    -0x208(%rbp),%rcx
  40306a:	48 3b 01             	cmp    (%rcx),%rax
  40306d:	73 0c                	jae    40307b <main+0x1c8b>
  40306f:	c7 85 20 fe ff ff bd 	movl   $0xffffffbd,-0x1e0(%rbp)
  403076:	ff ff ff 
  403079:	eb 30                	jmp    4030ab <main+0x1cbb>
  40307b:	48 8b bd 08 fe ff ff 	mov    -0x1f8(%rbp),%rdi
  403082:	48 8b 85 c8 fc ff ff 	mov    -0x338(%rbp),%rax
  403089:	48 83 c0 08          	add    $0x8,%rax
  40308d:	48 8b 8d f8 fd ff ff 	mov    -0x208(%rbp),%rcx
  403094:	48 8b 11             	mov    (%rcx),%rdx
  403097:	48 89 c6             	mov    %rax,%rsi
  40309a:	e8 d1 e0 ff ff       	callq  401170 <memcpy@plt>
  40309f:	eb 00                	jmp    4030a1 <main+0x1cb1>
  4030a1:	c7 85 20 fe ff ff 00 	movl   $0x0,-0x1e0(%rbp)
  4030a8:	00 00 00 
  4030ab:	8b 85 20 fe ff ff    	mov    -0x1e0(%rbp),%eax
  4030b1:	89 85 c0 f7 ff ff    	mov    %eax,-0x840(%rbp)
  4030b7:	83 f8 00             	cmp    $0x0,%eax
  4030ba:	74 22                	je     4030de <main+0x1cee>
  4030bc:	48 bf 60 70 44 00 00 	movabs $0x447060,%rdi
  4030c3:	00 00 00 
  4030c6:	8b b5 c0 f7 ff ff    	mov    -0x840(%rbp),%esi
  4030cc:	b0 00                	mov    $0x0,%al
  4030ce:	e8 5d df ff ff       	callq  401030 <printf@plt>
  4030d3:	89 85 ac e8 ff ff    	mov    %eax,-0x1754(%rbp)
  4030d9:	e9 ff 0e 00 00       	jmpq   403fdd <main+0x2bed>
  4030de:	48 bf 80 6e 44 00 00 	movabs $0x446e80,%rdi
  4030e5:	00 00 00 
  4030e8:	48 8d 85 b0 f7 ff ff 	lea    -0x850(%rbp),%rax
  4030ef:	48 8d 8d 58 ed ff ff 	lea    -0x12a8(%rbp),%rcx
  4030f6:	48 89 8d 58 fe ff ff 	mov    %rcx,-0x1a8(%rbp)
  4030fd:	48 89 85 50 fe ff ff 	mov    %rax,-0x1b0(%rbp)
  403104:	48 b8 e0 4c 40 00 00 	movabs $0x404ce0,%rax
  40310b:	00 00 00 
  40310e:	48 89 85 48 fe ff ff 	mov    %rax,-0x1b8(%rbp)
  403115:	48 b8 c0 4b 40 00 00 	movabs $0x404bc0,%rax
  40311c:	00 00 00 
  40311f:	48 89 85 40 fe ff ff 	mov    %rax,-0x1c0(%rbp)
  403126:	48 c7 85 38 fe ff ff 	movq   $0x0,-0x1c8(%rbp)
  40312d:	00 00 00 00 
  403131:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
  403138:	48 8b 8d 58 fe ff ff 	mov    -0x1a8(%rbp),%rcx
  40313f:	48 89 41 30          	mov    %rax,0x30(%rcx)
  403143:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
  40314a:	48 8b 8d 58 fe ff ff 	mov    -0x1a8(%rbp),%rcx
  403151:	48 89 41 18          	mov    %rax,0x18(%rcx)
  403155:	48 8b 85 40 fe ff ff 	mov    -0x1c0(%rbp),%rax
  40315c:	48 8b 8d 58 fe ff ff 	mov    -0x1a8(%rbp),%rcx
  403163:	48 89 41 20          	mov    %rax,0x20(%rcx)
  403167:	48 8b 85 38 fe ff ff 	mov    -0x1c8(%rbp),%rax
  40316e:	48 8b 8d 58 fe ff ff 	mov    -0x1a8(%rbp),%rcx
  403175:	48 89 41 28          	mov    %rax,0x28(%rcx)
  403179:	b0 00                	mov    $0x0,%al
  40317b:	e8 b0 de ff ff       	callq  401030 <printf@plt>
  403180:	48 bf 90 70 44 00 00 	movabs $0x447090,%rdi
  403187:	00 00 00 
  40318a:	89 85 a8 e8 ff ff    	mov    %eax,-0x1758(%rbp)
  403190:	b0 00                	mov    $0x0,%al
  403192:	e8 99 de ff ff       	callq  401030 <printf@plt>
  403197:	48 8b 3c 25 68 57 45 	mov    0x455768,%rdi
  40319e:	00 
  40319f:	89 85 a4 e8 ff ff    	mov    %eax,-0x175c(%rbp)
  4031a5:	e8 96 de ff ff       	callq  401040 <fflush@plt>
  4031aa:	89 85 a0 e8 ff ff    	mov    %eax,-0x1760(%rbp)
  4031b0:	48 8d 85 58 ed ff ff 	lea    -0x12a8(%rbp),%rax
  4031b7:	48 89 85 68 fe ff ff 	mov    %rax,-0x198(%rbp)
  4031be:	c7 85 64 fe ff ff 00 	movl   $0x0,-0x19c(%rbp)
  4031c5:	00 00 00 
  4031c8:	48 83 bd 68 fe ff ff 	cmpq   $0x0,-0x198(%rbp)
  4031cf:	00 
  4031d0:	74 0d                	je     4031df <main+0x1def>
  4031d2:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
  4031d9:	48 83 38 00          	cmpq   $0x0,(%rax)
  4031dd:	75 0c                	jne    4031eb <main+0x1dfb>
  4031df:	c7 85 74 fe ff ff 00 	movl   $0xffff8f00,-0x18c(%rbp)
  4031e6:	8f ff ff 
  4031e9:	eb 3a                	jmp    403225 <main+0x1e35>
  4031eb:	eb 00                	jmp    4031ed <main+0x1dfd>
  4031ed:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
  4031f4:	83 78 08 10          	cmpl   $0x10,0x8(%rax)
  4031f8:	74 1f                	je     403219 <main+0x1e29>
  4031fa:	48 8b bd 68 fe ff ff 	mov    -0x198(%rbp),%rdi
  403201:	e8 5a 95 00 00       	callq  40c760 <mbedtls_ssl_handshake_step>
  403206:	89 85 64 fe ff ff    	mov    %eax,-0x19c(%rbp)
  40320c:	83 bd 64 fe ff ff 00 	cmpl   $0x0,-0x19c(%rbp)
  403213:	74 02                	je     403217 <main+0x1e27>
  403215:	eb 02                	jmp    403219 <main+0x1e29>
  403217:	eb d4                	jmp    4031ed <main+0x1dfd>
  403219:	8b 85 64 fe ff ff    	mov    -0x19c(%rbp),%eax
  40321f:	89 85 74 fe ff ff    	mov    %eax,-0x18c(%rbp)
  403225:	8b 85 74 fe ff ff    	mov    -0x18c(%rbp),%eax
  40322b:	89 85 c0 f7 ff ff    	mov    %eax,-0x840(%rbp)
  403231:	83 f8 00             	cmp    $0x0,%eax
  403234:	74 3f                	je     403275 <main+0x1e85>
  403236:	81 bd c0 f7 ff ff 00 	cmpl   $0xffff9700,-0x840(%rbp)
  40323d:	97 ff ff 
  403240:	74 2e                	je     403270 <main+0x1e80>
  403242:	81 bd c0 f7 ff ff 80 	cmpl   $0xffff9780,-0x840(%rbp)
  403249:	97 ff ff 
  40324c:	74 22                	je     403270 <main+0x1e80>
  40324e:	48 bf c0 70 44 00 00 	movabs $0x4470c0,%rdi
  403255:	00 00 00 
  403258:	8b b5 c0 f7 ff ff    	mov    -0x840(%rbp),%esi
  40325e:	b0 00                	mov    $0x0,%al
  403260:	e8 cb dd ff ff       	callq  401030 <printf@plt>
  403265:	89 85 9c e8 ff ff    	mov    %eax,-0x1764(%rbp)
  40326b:	e9 d5 f4 ff ff       	jmpq   402745 <main+0x1355>
  403270:	e9 3b ff ff ff       	jmpq   4031b0 <main+0x1dc0>
  403275:	48 bf 80 6e 44 00 00 	movabs $0x446e80,%rdi
  40327c:	00 00 00 
  40327f:	b0 00                	mov    $0x0,%al
  403281:	e8 aa dd ff ff       	callq  401030 <printf@plt>
  403286:	48 bf f0 70 44 00 00 	movabs $0x4470f0,%rdi
  40328d:	00 00 00 
  403290:	89 85 98 e8 ff ff    	mov    %eax,-0x1768(%rbp)
  403296:	b0 00                	mov    $0x0,%al
  403298:	e8 93 dd ff ff       	callq  401030 <printf@plt>
  40329d:	48 8b 3c 25 68 57 45 	mov    0x455768,%rdi
  4032a4:	00 
  4032a5:	89 85 94 e8 ff ff    	mov    %eax,-0x176c(%rbp)
  4032ab:	e8 90 dd ff ff       	callq  401040 <fflush@plt>
  4032b0:	89 85 90 e8 ff ff    	mov    %eax,-0x1770(%rbp)
  4032b6:	48 8d 85 b0 f3 ff ff 	lea    -0xc50(%rbp),%rax
  4032bd:	31 f6                	xor    %esi,%esi
  4032bf:	b9 00 04 00 00       	mov    $0x400,%ecx
  4032c4:	89 ca                	mov    %ecx,%edx
  4032c6:	c7 85 bc f7 ff ff ff 	movl   $0x3ff,-0x844(%rbp)
  4032cd:	03 00 00 
  4032d0:	48 89 c7             	mov    %rax,%rdi
  4032d3:	48 89 85 88 e8 ff ff 	mov    %rax,-0x1778(%rbp)
  4032da:	e8 41 dd ff ff       	callq  401020 <memset@plt>
  4032df:	48 63 85 bc f7 ff ff 	movslq -0x844(%rbp),%rax
  4032e6:	48 8d 95 58 ed ff ff 	lea    -0x12a8(%rbp),%rdx
  4032ed:	48 89 95 98 fe ff ff 	mov    %rdx,-0x168(%rbp)
  4032f4:	48 8b 95 88 e8 ff ff 	mov    -0x1778(%rbp),%rdx
  4032fb:	48 89 95 90 fe ff ff 	mov    %rdx,-0x170(%rbp)
  403302:	48 89 85 88 fe ff ff 	mov    %rax,-0x178(%rbp)
  403309:	48 83 bd 98 fe ff ff 	cmpq   $0x0,-0x168(%rbp)
  403310:	00 
  403311:	74 0d                	je     403320 <main+0x1f30>
  403313:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  40331a:	48 83 38 00          	cmpq   $0x0,(%rax)
  40331e:	75 0f                	jne    40332f <main+0x1f3f>
  403320:	c7 85 a0 fe ff ff 00 	movl   $0xffff8f00,-0x160(%rbp)
  403327:	8f ff ff 
  40332a:	e9 ae 05 00 00       	jmpq   4038dd <main+0x24ed>
  40332f:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  403336:	83 78 08 10          	cmpl   $0x10,0x8(%rax)
  40333a:	0f 84 a9 00 00 00    	je     4033e9 <main+0x1ff9>
  403340:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  403347:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
  40334e:	c7 85 a4 fe ff ff 00 	movl   $0x0,-0x15c(%rbp)
  403355:	00 00 00 
  403358:	48 83 bd a8 fe ff ff 	cmpq   $0x0,-0x158(%rbp)
  40335f:	00 
  403360:	74 0d                	je     40336f <main+0x1f7f>
  403362:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
  403369:	48 83 38 00          	cmpq   $0x0,(%rax)
  40336d:	75 0c                	jne    40337b <main+0x1f8b>
  40336f:	c7 85 b0 fe ff ff 00 	movl   $0xffff8f00,-0x150(%rbp)
  403376:	8f ff ff 
  403379:	eb 3a                	jmp    4033b5 <main+0x1fc5>
  40337b:	eb 00                	jmp    40337d <main+0x1f8d>
  40337d:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
  403384:	83 78 08 10          	cmpl   $0x10,0x8(%rax)
  403388:	74 1f                	je     4033a9 <main+0x1fb9>
  40338a:	48 8b bd a8 fe ff ff 	mov    -0x158(%rbp),%rdi
  403391:	e8 ca 93 00 00       	callq  40c760 <mbedtls_ssl_handshake_step>
  403396:	89 85 a4 fe ff ff    	mov    %eax,-0x15c(%rbp)
  40339c:	83 bd a4 fe ff ff 00 	cmpl   $0x0,-0x15c(%rbp)
  4033a3:	74 02                	je     4033a7 <main+0x1fb7>
  4033a5:	eb 02                	jmp    4033a9 <main+0x1fb9>
  4033a7:	eb d4                	jmp    40337d <main+0x1f8d>
  4033a9:	8b 85 a4 fe ff ff    	mov    -0x15c(%rbp),%eax
  4033af:	89 85 b0 fe ff ff    	mov    %eax,-0x150(%rbp)
  4033b5:	8b 85 b0 fe ff ff    	mov    -0x150(%rbp),%eax
  4033bb:	89 85 84 fe ff ff    	mov    %eax,-0x17c(%rbp)
  4033c1:	81 bd 84 fe ff ff 00 	cmpl   $0xffff9500,-0x17c(%rbp)
  4033c8:	95 ff ff 
  4033cb:	74 1a                	je     4033e7 <main+0x1ff7>
  4033cd:	83 bd 84 fe ff ff 00 	cmpl   $0x0,-0x17c(%rbp)
  4033d4:	74 11                	je     4033e7 <main+0x1ff7>
  4033d6:	8b 85 84 fe ff ff    	mov    -0x17c(%rbp),%eax
  4033dc:	89 85 a0 fe ff ff    	mov    %eax,-0x160(%rbp)
  4033e2:	e9 f6 04 00 00       	jmpq   4038dd <main+0x24ed>
  4033e7:	eb 00                	jmp    4033e9 <main+0x1ff9>
  4033e9:	eb 00                	jmp    4033eb <main+0x1ffb>
  4033eb:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  4033f2:	48 83 b8 c8 00 00 00 	cmpq   $0x0,0xc8(%rax)
  4033f9:	00 
  4033fa:	0f 85 f2 03 00 00    	jne    4037f2 <main+0x2402>
  403400:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  403407:	48 83 b8 90 00 00 00 	cmpq   $0x0,0x90(%rax)
  40340e:	00 
  40340f:	0f 84 95 00 00 00    	je     4034aa <main+0x20ba>
  403415:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  40341c:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
  403423:	48 8b 8d 98 fe ff ff 	mov    -0x168(%rbp),%rcx
  40342a:	48 8b b9 80 00 00 00 	mov    0x80(%rcx),%rdi
  403431:	ff d0                	callq  *%rax
  403433:	83 f8 ff             	cmp    $0xffffffff,%eax
  403436:	75 72                	jne    4034aa <main+0x20ba>
  403438:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  40343f:	48 8b 8d 98 fe ff ff 	mov    -0x168(%rbp),%rcx
  403446:	48 8b 09             	mov    (%rcx),%rcx
  403449:	8b 91 90 00 00 00    	mov    0x90(%rcx),%edx
  40344f:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
  403456:	89 95 b4 fe ff ff    	mov    %edx,-0x14c(%rbp)
  40345c:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  403463:	48 83 b8 88 00 00 00 	cmpq   $0x0,0x88(%rax)
  40346a:	00 
  40346b:	75 02                	jne    40346f <main+0x207f>
  40346d:	eb 3b                	jmp    4034aa <main+0x20ba>
  40346f:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  403476:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
  40347d:	48 8b 8d b8 fe ff ff 	mov    -0x148(%rbp),%rcx
  403484:	48 8b b9 80 00 00 00 	mov    0x80(%rcx),%rdi
  40348b:	8b 95 b4 fe ff ff    	mov    -0x14c(%rbp),%edx
  403491:	c1 ea 02             	shr    $0x2,%edx
  403494:	8b b5 b4 fe ff ff    	mov    -0x14c(%rbp),%esi
  40349a:	89 b5 84 e8 ff ff    	mov    %esi,-0x177c(%rbp)
  4034a0:	89 d6                	mov    %edx,%esi
  4034a2:	8b 95 84 e8 ff ff    	mov    -0x177c(%rbp),%edx
  4034a8:	ff d0                	callq  *%rax
  4034aa:	48 8b bd 98 fe ff ff 	mov    -0x168(%rbp),%rdi
  4034b1:	be 01 00 00 00       	mov    $0x1,%esi
  4034b6:	e8 75 4d 00 00       	callq  408230 <mbedtls_ssl_read_record>
  4034bb:	89 85 84 fe ff ff    	mov    %eax,-0x17c(%rbp)
  4034c1:	83 f8 00             	cmp    $0x0,%eax
  4034c4:	74 2c                	je     4034f2 <main+0x2102>
  4034c6:	81 bd 84 fe ff ff 80 	cmpl   $0xffff8d80,-0x17c(%rbp)
  4034cd:	8d ff ff 
  4034d0:	75 0f                	jne    4034e1 <main+0x20f1>
  4034d2:	c7 85 a0 fe ff ff 00 	movl   $0x0,-0x160(%rbp)
  4034d9:	00 00 00 
  4034dc:	e9 fc 03 00 00       	jmpq   4038dd <main+0x24ed>
  4034e1:	8b 85 84 fe ff ff    	mov    -0x17c(%rbp),%eax
  4034e7:	89 85 a0 fe ff ff    	mov    %eax,-0x160(%rbp)
  4034ed:	e9 eb 03 00 00       	jmpq   4038dd <main+0x24ed>
  4034f2:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  4034f9:	48 83 b8 d8 00 00 00 	cmpq   $0x0,0xd8(%rax)
  403500:	00 
  403501:	75 5a                	jne    40355d <main+0x216d>
  403503:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  40350a:	83 b8 d0 00 00 00 17 	cmpl   $0x17,0xd0(%rax)
  403511:	75 4a                	jne    40355d <main+0x216d>
  403513:	48 8b bd 98 fe ff ff 	mov    -0x168(%rbp),%rdi
  40351a:	be 01 00 00 00       	mov    $0x1,%esi
  40351f:	e8 0c 4d 00 00       	callq  408230 <mbedtls_ssl_read_record>
  403524:	89 85 84 fe ff ff    	mov    %eax,-0x17c(%rbp)
  40352a:	83 f8 00             	cmp    $0x0,%eax
  40352d:	74 2c                	je     40355b <main+0x216b>
  40352f:	81 bd 84 fe ff ff 80 	cmpl   $0xffff8d80,-0x17c(%rbp)
  403536:	8d ff ff 
  403539:	75 0f                	jne    40354a <main+0x215a>
  40353b:	c7 85 a0 fe ff ff 00 	movl   $0x0,-0x160(%rbp)
  403542:	00 00 00 
  403545:	e9 93 03 00 00       	jmpq   4038dd <main+0x24ed>
  40354a:	8b 85 84 fe ff ff    	mov    -0x17c(%rbp),%eax
  403550:	89 85 a0 fe ff ff    	mov    %eax,-0x160(%rbp)
  403556:	e9 82 03 00 00       	jmpq   4038dd <main+0x24ed>
  40355b:	eb 00                	jmp    40355d <main+0x216d>
  40355d:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  403564:	83 b8 d0 00 00 00 16 	cmpl   $0x16,0xd0(%rax)
  40356b:	0f 85 af 01 00 00    	jne    403720 <main+0x2330>
  403571:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  403578:	48 8b 00             	mov    (%rax),%rax
  40357b:	8a 88 98 00 00 00    	mov    0x98(%rax),%cl
  403581:	80 e1 01             	and    $0x1,%cl
  403584:	0f b6 d1             	movzbl %cl,%edx
  403587:	83 fa 00             	cmp    $0x0,%edx
  40358a:	75 47                	jne    4035d3 <main+0x21e3>
  40358c:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  403593:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  40359a:	0f b6 08             	movzbl (%rax),%ecx
  40359d:	83 f9 00             	cmp    $0x0,%ecx
  4035a0:	75 22                	jne    4035c4 <main+0x21d4>
  4035a2:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  4035a9:	48 8b 80 e8 00 00 00 	mov    0xe8(%rax),%rax
  4035b0:	48 8b 8d 98 fe ff ff 	mov    -0x168(%rbp),%rcx
  4035b7:	48 89 8d c0 fe ff ff 	mov    %rcx,-0x140(%rbp)
  4035be:	48 83 f8 04          	cmp    $0x4,%rax
  4035c2:	74 0f                	je     4035d3 <main+0x21e3>
  4035c4:	c7 85 a0 fe ff ff 00 	movl   $0xffff8900,-0x160(%rbp)
  4035cb:	89 ff ff 
  4035ce:	e9 0a 03 00 00       	jmpq   4038dd <main+0x24ed>
  4035d3:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  4035da:	48 8b 00             	mov    (%rax),%rax
  4035dd:	8a 88 98 00 00 00    	mov    0x98(%rax),%cl
  4035e3:	80 e1 01             	and    $0x1,%cl
  4035e6:	0f b6 d1             	movzbl %cl,%edx
  4035e9:	83 fa 01             	cmp    $0x1,%edx
  4035ec:	75 25                	jne    403613 <main+0x2223>
  4035ee:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  4035f5:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  4035fc:	0f b6 08             	movzbl (%rax),%ecx
  4035ff:	83 f9 01             	cmp    $0x1,%ecx
  403602:	74 0f                	je     403613 <main+0x2223>
  403604:	c7 85 a0 fe ff ff 00 	movl   $0xffff8900,-0x160(%rbp)
  40360b:	89 ff ff 
  40360e:	e9 ca 02 00 00       	jmpq   4038dd <main+0x24ed>
  403613:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  40361a:	83 78 10 01          	cmpl   $0x1,0x10(%rax)
  40361e:	0f 8c ed 00 00 00    	jl     403711 <main+0x2321>
  403624:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  40362b:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
  403632:	c6 85 df fe ff ff 01 	movb   $0x1,-0x121(%rbp)
  403639:	c6 85 de fe ff ff 64 	movb   $0x64,-0x122(%rbp)
  403640:	48 83 bd e0 fe ff ff 	cmpq   $0x0,-0x120(%rbp)
  403647:	00 
  403648:	74 0d                	je     403657 <main+0x2267>
  40364a:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
  403651:	48 83 38 00          	cmpq   $0x0,(%rax)
  403655:	75 0f                	jne    403666 <main+0x2276>
  403657:	c7 85 ec fe ff ff 00 	movl   $0xffff8f00,-0x114(%rbp)
  40365e:	8f ff ff 
  403661:	e9 84 00 00 00       	jmpq   4036ea <main+0x22fa>
  403666:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
  40366d:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  403674:	00 00 00 
  403677:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
  40367e:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  403685:	02 00 00 00 
  403689:	8a 8d df fe ff ff    	mov    -0x121(%rbp),%cl
  40368f:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
  403696:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40369d:	88 08                	mov    %cl,(%rax)
  40369f:	8a 8d de fe ff ff    	mov    -0x122(%rbp),%cl
  4036a5:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
  4036ac:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  4036b3:	88 48 01             	mov    %cl,0x1(%rax)
  4036b6:	48 8b bd e0 fe ff ff 	mov    -0x120(%rbp),%rdi
  4036bd:	be 01 00 00 00       	mov    $0x1,%esi
  4036c2:	e8 09 40 00 00       	callq  4076d0 <mbedtls_ssl_write_record>
  4036c7:	89 85 d8 fe ff ff    	mov    %eax,-0x128(%rbp)
  4036cd:	83 f8 00             	cmp    $0x0,%eax
  4036d0:	74 0e                	je     4036e0 <main+0x22f0>
  4036d2:	8b 85 d8 fe ff ff    	mov    -0x128(%rbp),%eax
  4036d8:	89 85 ec fe ff ff    	mov    %eax,-0x114(%rbp)
  4036de:	eb 0a                	jmp    4036ea <main+0x22fa>
  4036e0:	c7 85 ec fe ff ff 00 	movl   $0x0,-0x114(%rbp)
  4036e7:	00 00 00 
  4036ea:	8b 85 ec fe ff ff    	mov    -0x114(%rbp),%eax
  4036f0:	89 85 84 fe ff ff    	mov    %eax,-0x17c(%rbp)
  4036f6:	83 f8 00             	cmp    $0x0,%eax
  4036f9:	74 11                	je     40370c <main+0x231c>
  4036fb:	8b 85 84 fe ff ff    	mov    -0x17c(%rbp),%eax
  403701:	89 85 a0 fe ff ff    	mov    %eax,-0x160(%rbp)
  403707:	e9 d1 01 00 00       	jmpq   4038dd <main+0x24ed>
  40370c:	e9 da fc ff ff       	jmpq   4033eb <main+0x1ffb>
  403711:	c7 85 a0 fe ff ff 00 	movl   $0xffff9400,-0x160(%rbp)
  403718:	94 ff ff 
  40371b:	e9 bd 01 00 00       	jmpq   4038dd <main+0x24ed>
  403720:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  403727:	83 b8 d0 00 00 00 15 	cmpl   $0x15,0xd0(%rax)
  40372e:	75 0f                	jne    40373f <main+0x234f>
  403730:	c7 85 a0 fe ff ff 00 	movl   $0xffff9700,-0x160(%rbp)
  403737:	97 ff ff 
  40373a:	e9 9e 01 00 00       	jmpq   4038dd <main+0x24ed>
  40373f:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  403746:	83 b8 d0 00 00 00 17 	cmpl   $0x17,0xd0(%rax)
  40374d:	74 0f                	je     40375e <main+0x236e>
  40374f:	c7 85 a0 fe ff ff 00 	movl   $0xffff8900,-0x160(%rbp)
  403756:	89 ff ff 
  403759:	e9 7f 01 00 00       	jmpq   4038dd <main+0x24ed>
  40375e:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  403765:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  40376c:	48 8b 8d 98 fe ff ff 	mov    -0x168(%rbp),%rcx
  403773:	48 89 81 c8 00 00 00 	mov    %rax,0xc8(%rcx)
  40377a:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  403781:	83 78 08 10          	cmpl   $0x10,0x8(%rax)
  403785:	75 66                	jne    4037ed <main+0x23fd>
  403787:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  40378e:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
  403795:	c7 85 cc fe ff ff 00 	movl   $0x0,-0x134(%rbp)
  40379c:	00 00 00 
  40379f:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
  4037a6:	48 83 b8 88 00 00 00 	cmpq   $0x0,0x88(%rax)
  4037ad:	00 
  4037ae:	75 02                	jne    4037b2 <main+0x23c2>
  4037b0:	eb 3b                	jmp    4037ed <main+0x23fd>
  4037b2:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
  4037b9:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
  4037c0:	48 8b 8d d0 fe ff ff 	mov    -0x130(%rbp),%rcx
  4037c7:	48 8b b9 80 00 00 00 	mov    0x80(%rcx),%rdi
  4037ce:	8b 95 cc fe ff ff    	mov    -0x134(%rbp),%edx
  4037d4:	c1 ea 02             	shr    $0x2,%edx
  4037d7:	8b b5 cc fe ff ff    	mov    -0x134(%rbp),%esi
  4037dd:	89 b5 80 e8 ff ff    	mov    %esi,-0x1780(%rbp)
  4037e3:	89 d6                	mov    %edx,%esi
  4037e5:	8b 95 80 e8 ff ff    	mov    -0x1780(%rbp),%edx
  4037eb:	ff d0                	callq  *%rax
  4037ed:	e9 f9 fb ff ff       	jmpq   4033eb <main+0x1ffb>
  4037f2:	48 8b 85 88 fe ff ff 	mov    -0x178(%rbp),%rax
  4037f9:	48 8b 8d 98 fe ff ff 	mov    -0x168(%rbp),%rcx
  403800:	48 3b 81 d8 00 00 00 	cmp    0xd8(%rcx),%rax
  403807:	73 10                	jae    403819 <main+0x2429>
  403809:	48 8b 85 88 fe ff ff 	mov    -0x178(%rbp),%rax
  403810:	48 89 85 78 e8 ff ff 	mov    %rax,-0x1788(%rbp)
  403817:	eb 15                	jmp    40382e <main+0x243e>
  403819:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  403820:	48 8b 80 d8 00 00 00 	mov    0xd8(%rax),%rax
  403827:	48 89 85 78 e8 ff ff 	mov    %rax,-0x1788(%rbp)
  40382e:	48 8b 85 78 e8 ff ff 	mov    -0x1788(%rbp),%rax
  403835:	48 89 85 78 fe ff ff 	mov    %rax,-0x188(%rbp)
  40383c:	48 8b bd 90 fe ff ff 	mov    -0x170(%rbp),%rdi
  403843:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  40384a:	48 8b b0 c8 00 00 00 	mov    0xc8(%rax),%rsi
  403851:	48 8b 95 78 fe ff ff 	mov    -0x188(%rbp),%rdx
  403858:	e8 13 d9 ff ff       	callq  401170 <memcpy@plt>
  40385d:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
  403864:	48 8b 95 98 fe ff ff 	mov    -0x168(%rbp),%rdx
  40386b:	48 8b b2 d8 00 00 00 	mov    0xd8(%rdx),%rsi
  403872:	48 29 c6             	sub    %rax,%rsi
  403875:	48 89 b2 d8 00 00 00 	mov    %rsi,0xd8(%rdx)
  40387c:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  403883:	48 83 b8 d8 00 00 00 	cmpq   $0x0,0xd8(%rax)
  40388a:	00 
  40388b:	75 25                	jne    4038b2 <main+0x24c2>
  40388d:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  403894:	48 c7 80 c8 00 00 00 	movq   $0x0,0xc8(%rax)
  40389b:	00 00 00 00 
  40389f:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  4038a6:	c7 80 f4 00 00 00 00 	movl   $0x0,0xf4(%rax)
  4038ad:	00 00 00 
  4038b0:	eb 1c                	jmp    4038ce <main+0x24de>
  4038b2:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
  4038b9:	48 8b 8d 98 fe ff ff 	mov    -0x168(%rbp),%rcx
  4038c0:	48 03 81 c8 00 00 00 	add    0xc8(%rcx),%rax
  4038c7:	48 89 81 c8 00 00 00 	mov    %rax,0xc8(%rcx)
  4038ce:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
  4038d5:	89 c1                	mov    %eax,%ecx
  4038d7:	89 8d a0 fe ff ff    	mov    %ecx,-0x160(%rbp)
  4038dd:	8b 85 a0 fe ff ff    	mov    -0x160(%rbp),%eax
  4038e3:	89 85 c0 f7 ff ff    	mov    %eax,-0x840(%rbp)
  4038e9:	81 bd c0 f7 ff ff 00 	cmpl   $0xffff9700,-0x840(%rbp)
  4038f0:	97 ff ff 
  4038f3:	74 0c                	je     403901 <main+0x2511>
  4038f5:	81 bd c0 f7 ff ff 80 	cmpl   $0xffff9780,-0x840(%rbp)
  4038fc:	97 ff ff 
  4038ff:	75 05                	jne    403906 <main+0x2516>
  403901:	e9 d0 00 00 00       	jmpq   4039d6 <main+0x25e6>
  403906:	83 bd c0 f7 ff ff 00 	cmpl   $0x0,-0x840(%rbp)
  40390d:	0f 8f 86 00 00 00    	jg     403999 <main+0x25a9>
  403913:	8b 85 c0 f7 ff ff    	mov    -0x840(%rbp),%eax
  403919:	89 c1                	mov    %eax,%ecx
  40391b:	81 e9 80 87 ff ff    	sub    $0xffff8780,%ecx
  403921:	89 85 74 e8 ff ff    	mov    %eax,-0x178c(%rbp)
  403927:	89 8d 70 e8 ff ff    	mov    %ecx,-0x1790(%rbp)
  40392d:	74 15                	je     403944 <main+0x2554>
  40392f:	eb 00                	jmp    403931 <main+0x2541>
  403931:	8b 85 74 e8 ff ff    	mov    -0x178c(%rbp),%eax
  403937:	83 e8 b0             	sub    $0xffffffb0,%eax
  40393a:	89 85 6c e8 ff ff    	mov    %eax,-0x1794(%rbp)
  403940:	74 1b                	je     40395d <main+0x256d>
  403942:	eb 32                	jmp    403976 <main+0x2586>
  403944:	48 bf 10 71 44 00 00 	movabs $0x447110,%rdi
  40394b:	00 00 00 
  40394e:	b0 00                	mov    $0x0,%al
  403950:	e8 db d6 ff ff       	callq  401030 <printf@plt>
  403955:	89 85 68 e8 ff ff    	mov    %eax,-0x1798(%rbp)
  40395b:	eb 3a                	jmp    403997 <main+0x25a7>
  40395d:	48 bf 40 71 44 00 00 	movabs $0x447140,%rdi
  403964:	00 00 00 
  403967:	b0 00                	mov    $0x0,%al
  403969:	e8 c2 d6 ff ff       	callq  401030 <printf@plt>
  40396e:	89 85 64 e8 ff ff    	mov    %eax,-0x179c(%rbp)
  403974:	eb 21                	jmp    403997 <main+0x25a7>
  403976:	48 bf 60 71 44 00 00 	movabs $0x447160,%rdi
  40397d:	00 00 00 
  403980:	31 c0                	xor    %eax,%eax
  403982:	2b 85 c0 f7 ff ff    	sub    -0x840(%rbp),%eax
  403988:	89 c6                	mov    %eax,%esi
  40398a:	b0 00                	mov    $0x0,%al
  40398c:	e8 9f d6 ff ff       	callq  401030 <printf@plt>
  403991:	89 85 60 e8 ff ff    	mov    %eax,-0x17a0(%rbp)
  403997:	eb 49                	jmp    4039e2 <main+0x25f2>
  403999:	48 bf 90 71 44 00 00 	movabs $0x447190,%rdi
  4039a0:	00 00 00 
  4039a3:	48 8d 95 b0 f3 ff ff 	lea    -0xc50(%rbp),%rdx
  4039aa:	8b 85 c0 f7 ff ff    	mov    -0x840(%rbp),%eax
  4039b0:	89 85 bc f7 ff ff    	mov    %eax,-0x844(%rbp)
  4039b6:	8b b5 bc f7 ff ff    	mov    -0x844(%rbp),%esi
  4039bc:	b0 00                	mov    $0x0,%al
  4039be:	e8 6d d6 ff ff       	callq  401030 <printf@plt>
  4039c3:	83 bd c0 f7 ff ff 00 	cmpl   $0x0,-0x840(%rbp)
  4039ca:	89 85 5c e8 ff ff    	mov    %eax,-0x17a4(%rbp)
  4039d0:	7e 02                	jle    4039d4 <main+0x25e4>
  4039d2:	eb 0e                	jmp    4039e2 <main+0x25f2>
  4039d4:	eb 00                	jmp    4039d6 <main+0x25e6>
  4039d6:	b0 01                	mov    $0x1,%al
  4039d8:	a8 01                	test   $0x1,%al
  4039da:	0f 85 d6 f8 ff ff    	jne    4032b6 <main+0x1ec6>
  4039e0:	eb 00                	jmp    4039e2 <main+0x25f2>
  4039e2:	48 bf b0 71 44 00 00 	movabs $0x4471b0,%rdi
  4039e9:	00 00 00 
  4039ec:	b0 00                	mov    $0x0,%al
  4039ee:	e8 3d d6 ff ff       	callq  401030 <printf@plt>
  4039f3:	48 8b 3c 25 68 57 45 	mov    0x455768,%rdi
  4039fa:	00 
  4039fb:	89 85 58 e8 ff ff    	mov    %eax,-0x17a8(%rbp)
  403a01:	e8 3a d6 ff ff       	callq  401040 <fflush@plt>
  403a06:	48 8d bd b0 f3 ff ff 	lea    -0xc50(%rbp),%rdi
  403a0d:	48 8d 8d 58 ed ff ff 	lea    -0x12a8(%rbp),%rcx
  403a14:	48 89 8d f0 fe ff ff 	mov    %rcx,-0x110(%rbp)
  403a1b:	48 83 bd f0 fe ff ff 	cmpq   $0x0,-0x110(%rbp)
  403a22:	00 
  403a23:	89 85 54 e8 ff ff    	mov    %eax,-0x17ac(%rbp)
  403a29:	48 89 bd 48 e8 ff ff 	mov    %rdi,-0x17b8(%rbp)
  403a30:	74 0e                	je     403a40 <main+0x2650>
  403a32:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
  403a39:	48 83 78 48 00       	cmpq   $0x0,0x48(%rax)
  403a3e:	75 10                	jne    403a50 <main+0x2660>
  403a40:	48 c7 85 f8 fe ff ff 	movq   $0x0,-0x108(%rbp)
  403a47:	00 00 00 00 
  403a4b:	e9 c8 00 00 00       	jmpq   403b18 <main+0x2728>
  403a50:	48 b8 70 90 44 00 00 	movabs $0x449070,%rax
  403a57:	00 00 00 
  403a5a:	48 8b 8d f0 fe ff ff 	mov    -0x110(%rbp),%rcx
  403a61:	48 8b 49 48          	mov    0x48(%rcx),%rcx
  403a65:	8b 51 08             	mov    0x8(%rcx),%edx
  403a68:	89 95 0c ff ff ff    	mov    %edx,-0xf4(%rbp)
  403a6e:	8b 95 0c ff ff ff    	mov    -0xf4(%rbp),%edx
  403a74:	89 95 24 ff ff ff    	mov    %edx,-0xdc(%rbp)
  403a7a:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
  403a81:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  403a88:	83 38 00             	cmpl   $0x0,(%rax)
  403a8b:	74 35                	je     403ac2 <main+0x26d2>
  403a8d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  403a94:	8b 08                	mov    (%rax),%ecx
  403a96:	3b 8d 24 ff ff ff    	cmp    -0xdc(%rbp),%ecx
  403a9c:	75 10                	jne    403aae <main+0x26be>
  403a9e:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  403aa5:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
  403aac:	eb 1f                	jmp    403acd <main+0x26dd>
  403aae:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  403ab5:	48 83 c0 30          	add    $0x30,%rax
  403ab9:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
  403ac0:	eb bf                	jmp    403a81 <main+0x2691>
  403ac2:	48 c7 85 28 ff ff ff 	movq   $0x0,-0xd8(%rbp)
  403ac9:	00 00 00 00 
  403acd:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  403ad4:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
  403adb:	48 83 bd 00 ff ff ff 	cmpq   $0x0,-0x100(%rbp)
  403ae2:	00 
  403ae3:	75 13                	jne    403af8 <main+0x2708>
  403ae5:	48 b8 60 32 45 00 00 	movabs $0x453260,%rax
  403aec:	00 00 00 
  403aef:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
  403af6:	eb 12                	jmp    403b0a <main+0x271a>
  403af8:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
  403aff:	48 8b 40 08          	mov    0x8(%rax),%rax
  403b03:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
  403b0a:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
  403b11:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
  403b18:	48 be d0 71 44 00 00 	movabs $0x4471d0,%rsi
  403b1f:	00 00 00 
  403b22:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  403b29:	48 89 b5 40 e8 ff ff 	mov    %rsi,-0x17c0(%rbp)
  403b30:	48 89 85 38 e8 ff ff 	mov    %rax,-0x17c8(%rbp)
  403b37:	e8 1a 1e 04 00       	callq  445956 <writeback_cache>
  403b3c:	48 8b bd 38 e8 ff ff 	mov    -0x17c8(%rbp),%rdi
  403b43:	e8 39 28 04 00       	callq  446381 <decryptStringBeforeLibCall>
  403b48:	48 8b bd 48 e8 ff ff 	mov    -0x17b8(%rbp),%rdi
  403b4f:	48 8b b5 40 e8 ff ff 	mov    -0x17c0(%rbp),%rsi
  403b56:	48 8b 95 38 e8 ff ff 	mov    -0x17c8(%rbp),%rdx
  403b5d:	b0 00                	mov    $0x0,%al
  403b5f:	e8 1c d6 ff ff       	callq  401180 <sprintf@plt>
  403b64:	48 8b bd 38 e8 ff ff 	mov    -0x17c8(%rbp),%rdi
  403b6b:	89 85 34 e8 ff ff    	mov    %eax,-0x17cc(%rbp)
  403b71:	e8 33 27 04 00       	callq  4462a9 <encryptStringAfterLibCall>
  403b76:	8b 85 34 e8 ff ff    	mov    -0x17cc(%rbp),%eax
  403b7c:	89 85 bc f7 ff ff    	mov    %eax,-0x844(%rbp)
  403b82:	48 8d 85 b0 f3 ff ff 	lea    -0xc50(%rbp),%rax
  403b89:	48 63 8d bc f7 ff ff 	movslq -0x844(%rbp),%rcx
  403b90:	48 8d 95 58 ed ff ff 	lea    -0x12a8(%rbp),%rdx
  403b97:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
  403b9e:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
  403ba5:	48 89 8d 38 ff ff ff 	mov    %rcx,-0xc8(%rbp)
  403bac:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)
  403bb3:	00 
  403bb4:	74 0d                	je     403bc3 <main+0x27d3>
  403bb6:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  403bbd:	48 83 38 00          	cmpq   $0x0,(%rax)
  403bc1:	75 0f                	jne    403bd2 <main+0x27e2>
  403bc3:	c7 85 50 ff ff ff 00 	movl   $0xffff8f00,-0xb0(%rbp)
  403bca:	8f ff ff 
  403bcd:	e9 de 01 00 00       	jmpq   403db0 <main+0x29c0>
  403bd2:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  403bd9:	83 78 08 10          	cmpl   $0x10,0x8(%rax)
  403bdd:	0f 84 99 00 00 00    	je     403c7c <main+0x288c>
  403be3:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  403bea:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
  403bf1:	c7 85 54 ff ff ff 00 	movl   $0x0,-0xac(%rbp)
  403bf8:	00 00 00 
  403bfb:	48 83 bd 58 ff ff ff 	cmpq   $0x0,-0xa8(%rbp)
  403c02:	00 
  403c03:	74 0d                	je     403c12 <main+0x2822>
  403c05:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
  403c0c:	48 83 38 00          	cmpq   $0x0,(%rax)
  403c10:	75 0c                	jne    403c1e <main+0x282e>
  403c12:	c7 85 64 ff ff ff 00 	movl   $0xffff8f00,-0x9c(%rbp)
  403c19:	8f ff ff 
  403c1c:	eb 3a                	jmp    403c58 <main+0x2868>
  403c1e:	eb 00                	jmp    403c20 <main+0x2830>
  403c20:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
  403c27:	83 78 08 10          	cmpl   $0x10,0x8(%rax)
  403c2b:	74 1f                	je     403c4c <main+0x285c>
  403c2d:	48 8b bd 58 ff ff ff 	mov    -0xa8(%rbp),%rdi
  403c34:	e8 27 8b 00 00       	callq  40c760 <mbedtls_ssl_handshake_step>
  403c39:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
  403c3f:	83 bd 54 ff ff ff 00 	cmpl   $0x0,-0xac(%rbp)
  403c46:	74 02                	je     403c4a <main+0x285a>
  403c48:	eb 02                	jmp    403c4c <main+0x285c>
  403c4a:	eb d4                	jmp    403c20 <main+0x2830>
  403c4c:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
  403c52:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%rbp)
  403c58:	8b 85 64 ff ff ff    	mov    -0x9c(%rbp),%eax
  403c5e:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%rbp)
  403c64:	83 f8 00             	cmp    $0x0,%eax
  403c67:	74 11                	je     403c7a <main+0x288a>
  403c69:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
  403c6f:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
  403c75:	e9 36 01 00 00       	jmpq   403db0 <main+0x29c0>
  403c7a:	eb 00                	jmp    403c7c <main+0x288c>
  403c7c:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  403c83:	48 8b 8d 40 ff ff ff 	mov    -0xc0(%rbp),%rcx
  403c8a:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
  403c91:	48 89 45 88          	mov    %rax,-0x78(%rbp)
  403c95:	48 89 4d 80          	mov    %rcx,-0x80(%rbp)
  403c99:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
  403ca0:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  403ca4:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  403ca8:	48 c7 45 98 00 40 00 	movq   $0x4000,-0x68(%rbp)
  403caf:	00 
  403cb0:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  403cb4:	89 c6                	mov    %eax,%esi
  403cb6:	89 b5 74 ff ff ff    	mov    %esi,-0x8c(%rbp)
  403cbc:	48 63 85 74 ff ff ff 	movslq -0x8c(%rbp),%rax
  403cc3:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
  403cca:	83 bd 74 ff ff ff 00 	cmpl   $0x0,-0x8c(%rbp)
  403cd1:	7d 0e                	jge    403ce1 <main+0x28f1>
  403cd3:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
  403cd9:	89 45 94             	mov    %eax,-0x6c(%rbp)
  403cdc:	e9 ba 00 00 00       	jmpq   403d9b <main+0x29ab>
  403ce1:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  403ce8:	48 3b 85 68 ff ff ff 	cmp    -0x98(%rbp),%rax
  403cef:	76 0e                	jbe    403cff <main+0x290f>
  403cf1:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  403cf8:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  403cff:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  403d03:	48 83 b8 38 01 00 00 	cmpq   $0x0,0x138(%rax)
  403d0a:	00 
  403d0b:	74 21                	je     403d2e <main+0x293e>
  403d0d:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
  403d11:	e8 4a 36 00 00       	callq  407360 <mbedtls_ssl_flush_output>
  403d16:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
  403d1c:	83 f8 00             	cmp    $0x0,%eax
  403d1f:	74 0b                	je     403d2c <main+0x293c>
  403d21:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
  403d27:	89 45 94             	mov    %eax,-0x6c(%rbp)
  403d2a:	eb 6f                	jmp    403d9b <main+0x29ab>
  403d2c:	eb 61                	jmp    403d8f <main+0x299f>
  403d2e:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  403d35:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
  403d39:	48 89 81 30 01 00 00 	mov    %rax,0x130(%rcx)
  403d40:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  403d44:	c7 80 28 01 00 00 17 	movl   $0x17,0x128(%rax)
  403d4b:	00 00 00 
  403d4e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  403d52:	48 8b b8 20 01 00 00 	mov    0x120(%rax),%rdi
  403d59:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
  403d5d:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
  403d64:	e8 07 d4 ff ff       	callq  401170 <memcpy@plt>
  403d69:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
  403d6d:	be 01 00 00 00       	mov    $0x1,%esi
  403d72:	e8 59 39 00 00       	callq  4076d0 <mbedtls_ssl_write_record>
  403d77:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
  403d7d:	83 f8 00             	cmp    $0x0,%eax
  403d80:	74 0b                	je     403d8d <main+0x299d>
  403d82:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
  403d88:	89 45 94             	mov    %eax,-0x6c(%rbp)
  403d8b:	eb 0e                	jmp    403d9b <main+0x29ab>
  403d8d:	eb 00                	jmp    403d8f <main+0x299f>
  403d8f:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  403d96:	89 c1                	mov    %eax,%ecx
  403d98:	89 4d 94             	mov    %ecx,-0x6c(%rbp)
  403d9b:	8b 45 94             	mov    -0x6c(%rbp),%eax
  403d9e:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%rbp)
  403da4:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
  403daa:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
  403db0:	8b 85 50 ff ff ff    	mov    -0xb0(%rbp),%eax
  403db6:	89 85 c0 f7 ff ff    	mov    %eax,-0x840(%rbp)
  403dbc:	83 f8 00             	cmp    $0x0,%eax
  403dbf:	7f 64                	jg     403e25 <main+0x2a35>
  403dc1:	83 bd c0 f7 ff ff b0 	cmpl   $0xffffffb0,-0x840(%rbp)
  403dc8:	75 1c                	jne    403de6 <main+0x29f6>
  403dca:	48 bf 50 72 44 00 00 	movabs $0x447250,%rdi
  403dd1:	00 00 00 
  403dd4:	b0 00                	mov    $0x0,%al
  403dd6:	e8 55 d2 ff ff       	callq  401030 <printf@plt>
  403ddb:	89 85 30 e8 ff ff    	mov    %eax,-0x17d0(%rbp)
  403de1:	e9 5f e9 ff ff       	jmpq   402745 <main+0x1355>
  403de6:	81 bd c0 f7 ff ff 00 	cmpl   $0xffff9700,-0x840(%rbp)
  403ded:	97 ff ff 
  403df0:	74 2e                	je     403e20 <main+0x2a30>
  403df2:	81 bd c0 f7 ff ff 80 	cmpl   $0xffff9780,-0x840(%rbp)
  403df9:	97 ff ff 
  403dfc:	74 22                	je     403e20 <main+0x2a30>
  403dfe:	48 bf 80 72 44 00 00 	movabs $0x447280,%rdi
  403e05:	00 00 00 
  403e08:	8b b5 c0 f7 ff ff    	mov    -0x840(%rbp),%esi
  403e0e:	b0 00                	mov    $0x0,%al
  403e10:	e8 1b d2 ff ff       	callq  401030 <printf@plt>
  403e15:	89 85 2c e8 ff ff    	mov    %eax,-0x17d4(%rbp)
  403e1b:	e9 bd 01 00 00       	jmpq   403fdd <main+0x2bed>
  403e20:	e9 5d fd ff ff       	jmpq   403b82 <main+0x2792>
  403e25:	48 bf b0 72 44 00 00 	movabs $0x4472b0,%rdi
  403e2c:	00 00 00 
  403e2f:	48 8d 95 b0 f3 ff ff 	lea    -0xc50(%rbp),%rdx
  403e36:	8b 85 c0 f7 ff ff    	mov    -0x840(%rbp),%eax
  403e3c:	89 85 bc f7 ff ff    	mov    %eax,-0x844(%rbp)
  403e42:	8b b5 bc f7 ff ff    	mov    -0x844(%rbp),%esi
  403e48:	b0 00                	mov    $0x0,%al
  403e4a:	e8 e1 d1 ff ff       	callq  401030 <printf@plt>
  403e4f:	48 bf d0 72 44 00 00 	movabs $0x4472d0,%rdi
  403e56:	00 00 00 
  403e59:	89 85 28 e8 ff ff    	mov    %eax,-0x17d8(%rbp)
  403e5f:	b0 00                	mov    $0x0,%al
  403e61:	e8 ca d1 ff ff       	callq  401030 <printf@plt>
  403e66:	89 85 24 e8 ff ff    	mov    %eax,-0x17dc(%rbp)
  403e6c:	48 8d 85 58 ed ff ff 	lea    -0x12a8(%rbp),%rax
  403e73:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  403e77:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
  403e7c:	74 0a                	je     403e88 <main+0x2a98>
  403e7e:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  403e82:	48 83 38 00          	cmpq   $0x0,(%rax)
  403e86:	75 0c                	jne    403e94 <main+0x2aa4>
  403e88:	c7 45 bc 00 8f ff ff 	movl   $0xffff8f00,-0x44(%rbp)
  403e8f:	e9 d6 00 00 00       	jmpq   403f6a <main+0x2b7a>
  403e94:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  403e98:	48 83 b8 38 01 00 00 	cmpq   $0x0,0x138(%rax)
  403e9f:	00 
  403ea0:	74 11                	je     403eb3 <main+0x2ac3>
  403ea2:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
  403ea6:	e8 b5 34 00 00       	callq  407360 <mbedtls_ssl_flush_output>
  403eab:	89 45 bc             	mov    %eax,-0x44(%rbp)
  403eae:	e9 b7 00 00 00       	jmpq   403f6a <main+0x2b7a>
  403eb3:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  403eb7:	83 78 08 10          	cmpl   $0x10,0x8(%rax)
  403ebb:	0f 85 a2 00 00 00    	jne    403f63 <main+0x2b73>
  403ec1:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  403ec5:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  403ec9:	c6 45 c7 01          	movb   $0x1,-0x39(%rbp)
  403ecd:	c6 45 c6 00          	movb   $0x0,-0x3a(%rbp)
  403ed1:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  403ed6:	74 0a                	je     403ee2 <main+0x2af2>
  403ed8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403edc:	48 83 38 00          	cmpq   $0x0,(%rax)
  403ee0:	75 09                	jne    403eeb <main+0x2afb>
  403ee2:	c7 45 d4 00 8f ff ff 	movl   $0xffff8f00,-0x2c(%rbp)
  403ee9:	eb 63                	jmp    403f4e <main+0x2b5e>
  403eeb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403eef:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  403ef6:	00 00 00 
  403ef9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403efd:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  403f04:	02 00 00 00 
  403f08:	8a 4d c7             	mov    -0x39(%rbp),%cl
  403f0b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403f0f:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  403f16:	88 08                	mov    %cl,(%rax)
  403f18:	8a 4d c6             	mov    -0x3a(%rbp),%cl
  403f1b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403f1f:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  403f26:	88 48 01             	mov    %cl,0x1(%rax)
  403f29:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  403f2d:	be 01 00 00 00       	mov    $0x1,%esi
  403f32:	e8 99 37 00 00       	callq  4076d0 <mbedtls_ssl_write_record>
  403f37:	89 45 c0             	mov    %eax,-0x40(%rbp)
  403f3a:	83 f8 00             	cmp    $0x0,%eax
  403f3d:	74 08                	je     403f47 <main+0x2b57>
  403f3f:	8b 45 c0             	mov    -0x40(%rbp),%eax
  403f42:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  403f45:	eb 07                	jmp    403f4e <main+0x2b5e>
  403f47:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
  403f4e:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  403f51:	89 45 ac             	mov    %eax,-0x54(%rbp)
  403f54:	83 f8 00             	cmp    $0x0,%eax
  403f57:	74 08                	je     403f61 <main+0x2b71>
  403f59:	8b 45 ac             	mov    -0x54(%rbp),%eax
  403f5c:	89 45 bc             	mov    %eax,-0x44(%rbp)
  403f5f:	eb 09                	jmp    403f6a <main+0x2b7a>
  403f61:	eb 00                	jmp    403f63 <main+0x2b73>
  403f63:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%rbp)
  403f6a:	8b 45 bc             	mov    -0x44(%rbp),%eax
  403f6d:	89 85 c0 f7 ff ff    	mov    %eax,-0x840(%rbp)
  403f73:	83 f8 00             	cmp    $0x0,%eax
  403f76:	7d 3f                	jge    403fb7 <main+0x2bc7>
  403f78:	81 bd c0 f7 ff ff 00 	cmpl   $0xffff9700,-0x840(%rbp)
  403f7f:	97 ff ff 
  403f82:	74 2e                	je     403fb2 <main+0x2bc2>
  403f84:	81 bd c0 f7 ff ff 80 	cmpl   $0xffff9780,-0x840(%rbp)
  403f8b:	97 ff ff 
  403f8e:	74 22                	je     403fb2 <main+0x2bc2>
  403f90:	48 bf f0 72 44 00 00 	movabs $0x4472f0,%rdi
  403f97:	00 00 00 
  403f9a:	8b b5 c0 f7 ff ff    	mov    -0x840(%rbp),%esi
  403fa0:	b0 00                	mov    $0x0,%al
  403fa2:	e8 89 d0 ff ff       	callq  401030 <printf@plt>
  403fa7:	89 85 20 e8 ff ff    	mov    %eax,-0x17e0(%rbp)
  403fad:	e9 93 e7 ff ff       	jmpq   402745 <main+0x1355>
  403fb2:	e9 b5 fe ff ff       	jmpq   403e6c <main+0x2a7c>
  403fb7:	48 bf 80 6e 44 00 00 	movabs $0x446e80,%rdi
  403fbe:	00 00 00 
  403fc1:	b0 00                	mov    $0x0,%al
  403fc3:	e8 68 d0 ff ff       	callq  401030 <printf@plt>
  403fc8:	c7 85 c0 f7 ff ff 00 	movl   $0x0,-0x840(%rbp)
  403fcf:	00 00 00 
  403fd2:	89 85 1c e8 ff ff    	mov    %eax,-0x17e4(%rbp)
  403fd8:	e9 68 e7 ff ff       	jmpq   402745 <main+0x1355>
  403fdd:	48 8d 85 b0 f7 ff ff 	lea    -0x850(%rbp),%rax
  403fe4:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  403fe8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403fec:	83 38 ff             	cmpl   $0xffffffff,(%rax)
  403fef:	75 02                	jne    403ff3 <main+0x2c03>
  403ff1:	eb 31                	jmp    404024 <main+0x2c34>
  403ff3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403ff7:	8b 38                	mov    (%rax),%edi
  403ff9:	be 02 00 00 00       	mov    $0x2,%esi
  403ffe:	e8 ed d0 ff ff       	callq  4010f0 <shutdown@plt>
  404003:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  404007:	8b 39                	mov    (%rcx),%edi
  404009:	89 85 18 e8 ff ff    	mov    %eax,-0x17e8(%rbp)
  40400f:	e8 7c d0 ff ff       	callq  401090 <close@plt>
  404014:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  404018:	c7 01 ff ff ff ff    	movl   $0xffffffff,(%rcx)
  40401e:	89 85 14 e8 ff ff    	mov    %eax,-0x17ec(%rbp)
  404024:	48 8d 85 b8 f7 ff ff 	lea    -0x848(%rbp),%rax
  40402b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  40402f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404033:	83 38 ff             	cmpl   $0xffffffff,(%rax)
  404036:	75 02                	jne    40403a <main+0x2c4a>
  404038:	eb 31                	jmp    40406b <main+0x2c7b>
  40403a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40403e:	8b 38                	mov    (%rax),%edi
  404040:	be 02 00 00 00       	mov    $0x2,%esi
  404045:	e8 a6 d0 ff ff       	callq  4010f0 <shutdown@plt>
  40404a:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40404e:	8b 39                	mov    (%rcx),%edi
  404050:	89 85 10 e8 ff ff    	mov    %eax,-0x17f0(%rbp)
  404056:	e8 35 d0 ff ff       	callq  401090 <close@plt>
  40405b:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40405f:	c7 01 ff ff ff ff    	movl   $0xffffffff,(%rcx)
  404065:	89 85 0c e8 ff ff    	mov    %eax,-0x17f4(%rbp)
  40406b:	48 8d bd 90 ea ff ff 	lea    -0x1570(%rbp),%rdi
  404072:	e8 f9 1e 01 00       	callq  415f70 <mbedtls_x509_crt_free>
  404077:	48 8d bd 50 ea ff ff 	lea    -0x15b0(%rbp),%rdi
  40407e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  404082:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  404087:	75 05                	jne    40408e <main+0x2c9e>
  404089:	e9 cc 00 00 00       	jmpq   40415a <main+0x2d6a>
  40408e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404092:	48 89 c7             	mov    %rax,%rdi
  404095:	e8 ae 20 04 00       	callq  446148 <getDecryptedValueQWord>
  40409a:	48 83 f8 00          	cmp    $0x0,%rax
  40409e:	74 3a                	je     4040da <main+0x2cea>
  4040a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4040a4:	48 89 c7             	mov    %rax,%rdi
  4040a7:	e8 9c 20 04 00       	callq  446148 <getDecryptedValueQWord>
  4040ac:	48 05 a0 00 00 00    	add    $0xa0,%rax
  4040b2:	48 89 c7             	mov    %rax,%rdi
  4040b5:	e8 8e 20 04 00       	callq  446148 <getDecryptedValueQWord>
  4040ba:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  4040be:	48 83 c7 08          	add    $0x8,%rdi
  4040c2:	48 89 85 00 e8 ff ff 	mov    %rax,-0x1800(%rbp)
  4040c9:	e8 7a 20 04 00       	callq  446148 <getDecryptedValueQWord>
  4040ce:	48 89 c7             	mov    %rax,%rdi
  4040d1:	48 8b 85 00 e8 ff ff 	mov    -0x1800(%rbp),%rax
  4040d8:	ff d0                	callq  *%rax
  4040da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4040de:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4040e2:	48 c7 45 f0 10 00 00 	movq   $0x10,-0x10(%rbp)
  4040e9:	00 
  4040ea:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  4040f1:	00 
  4040f2:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  4040f6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4040fa:	48 89 85 f8 e7 ff ff 	mov    %rax,-0x1808(%rbp)
  404101:	48 89 8d f0 e7 ff ff 	mov    %rcx,-0x1810(%rbp)
  404108:	48 89 95 e8 e7 ff ff 	mov    %rdx,-0x1818(%rbp)
  40410f:	e8 42 18 04 00       	callq  445956 <writeback_cache>
  404114:	48 8b bd f0 e7 ff ff 	mov    -0x1810(%rbp),%rdi
  40411b:	48 8b b5 e8 e7 ff ff 	mov    -0x1818(%rbp),%rsi
  404122:	e8 be 25 04 00       	callq  4466e5 <decryptArrayForLibCall>
  404127:	31 f6                	xor    %esi,%esi
  404129:	48 8b bd f0 e7 ff ff 	mov    -0x1810(%rbp),%rdi
  404130:	48 8b 95 e8 e7 ff ff 	mov    -0x1818(%rbp),%rdx
  404137:	48 8b 85 f8 e7 ff ff 	mov    -0x1808(%rbp),%rax
  40413e:	ff d0                	callq  *%rax
  404140:	48 8b bd f0 e7 ff ff 	mov    -0x1810(%rbp),%rdi
  404147:	48 8b b5 e8 e7 ff ff 	mov    -0x1818(%rbp),%rsi
  40414e:	48 89 85 e0 e7 ff ff 	mov    %rax,-0x1820(%rbp)
  404155:	e8 fc 22 04 00       	callq  446456 <encryptArrayForLibCall>
  40415a:	48 8d 85 58 ed ff ff 	lea    -0x12a8(%rbp),%rax
  404161:	48 89 85 c8 f8 ff ff 	mov    %rax,-0x738(%rbp)
  404168:	48 83 bd c8 f8 ff ff 	cmpq   $0x0,-0x738(%rbp)
  40416f:	00 
  404170:	75 05                	jne    404177 <main+0x2d87>
  404172:	e9 70 07 00 00       	jmpq   4048e7 <main+0x34f7>
  404177:	48 8b 85 c8 f8 ff ff 	mov    -0x738(%rbp),%rax
  40417e:	48 83 b8 f8 00 00 00 	cmpq   $0x0,0xf8(%rax)
  404185:	00 
  404186:	74 54                	je     4041dc <main+0x2dec>
  404188:	31 f6                	xor    %esi,%esi
  40418a:	48 8b 85 c8 f8 ff ff 	mov    -0x738(%rbp),%rax
  404191:	48 8b 80 f8 00 00 00 	mov    0xf8(%rax),%rax
  404198:	48 89 85 d8 f8 ff ff 	mov    %rax,-0x728(%rbp)
  40419f:	48 c7 85 d0 f8 ff ff 	movq   $0x413d,-0x730(%rbp)
  4041a6:	3d 41 00 00 
  4041aa:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  4041b1:	00 
  4041b2:	48 8b bd d8 f8 ff ff 	mov    -0x728(%rbp),%rdi
  4041b9:	48 8b 95 d0 f8 ff ff 	mov    -0x730(%rbp),%rdx
  4041c0:	ff d0                	callq  *%rax
  4041c2:	48 8b 95 c8 f8 ff ff 	mov    -0x738(%rbp),%rdx
  4041c9:	48 8b ba f8 00 00 00 	mov    0xf8(%rdx),%rdi
  4041d0:	48 89 85 d8 e7 ff ff 	mov    %rax,-0x1828(%rbp)
  4041d7:	e8 04 cf ff ff       	callq  4010e0 <free@plt>
  4041dc:	48 8b 85 c8 f8 ff ff 	mov    -0x738(%rbp),%rax
  4041e3:	48 83 b8 98 00 00 00 	cmpq   $0x0,0x98(%rax)
  4041ea:	00 
  4041eb:	74 54                	je     404241 <main+0x2e51>
  4041ed:	31 f6                	xor    %esi,%esi
  4041ef:	48 8b 85 c8 f8 ff ff 	mov    -0x738(%rbp),%rax
  4041f6:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax
  4041fd:	48 89 85 e8 f8 ff ff 	mov    %rax,-0x718(%rbp)
  404204:	48 c7 85 e0 f8 ff ff 	movq   $0x413d,-0x720(%rbp)
  40420b:	3d 41 00 00 
  40420f:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  404216:	00 
  404217:	48 8b bd e8 f8 ff ff 	mov    -0x718(%rbp),%rdi
  40421e:	48 8b 95 e0 f8 ff ff 	mov    -0x720(%rbp),%rdx
  404225:	ff d0                	callq  *%rax
  404227:	48 8b 95 c8 f8 ff ff 	mov    -0x738(%rbp),%rdx
  40422e:	48 8b ba 98 00 00 00 	mov    0x98(%rdx),%rdi
  404235:	48 89 85 d0 e7 ff ff 	mov    %rax,-0x1830(%rbp)
  40423c:	e8 9f ce ff ff       	callq  4010e0 <free@plt>
  404241:	48 8b 85 c8 f8 ff ff 	mov    -0x738(%rbp),%rax
  404248:	48 83 78 70 00       	cmpq   $0x0,0x70(%rax)
  40424d:	0f 84 a2 01 00 00    	je     4043f5 <main+0x3005>
  404253:	48 8b 85 c8 f8 ff ff 	mov    -0x738(%rbp),%rax
  40425a:	48 8b 40 70          	mov    0x70(%rax),%rax
  40425e:	48 89 85 f0 f8 ff ff 	mov    %rax,-0x710(%rbp)
  404265:	48 83 bd f0 f8 ff ff 	cmpq   $0x0,-0x710(%rbp)
  40426c:	00 
  40426d:	75 05                	jne    404274 <main+0x2e84>
  40426f:	e9 6e 01 00 00       	jmpq   4043e2 <main+0x2ff2>
  404274:	48 8b 85 f0 f8 ff ff 	mov    -0x710(%rbp),%rax
  40427b:	48 05 80 00 00 00    	add    $0x80,%rax
  404281:	48 89 85 a8 f9 ff ff 	mov    %rax,-0x658(%rbp)
  404288:	48 83 bd a8 f9 ff ff 	cmpq   $0x0,-0x658(%rbp)
  40428f:	00 
  404290:	75 02                	jne    404294 <main+0x2ea4>
  404292:	eb 67                	jmp    4042fb <main+0x2f0b>
  404294:	48 8b 85 a8 f9 ff ff 	mov    -0x658(%rbp),%rax
  40429b:	48 83 78 50 00       	cmpq   $0x0,0x50(%rax)
  4042a0:	74 1f                	je     4042c1 <main+0x2ed1>
  4042a2:	48 8b 85 a8 f9 ff ff 	mov    -0x658(%rbp),%rax
  4042a9:	48 8b 00             	mov    (%rax),%rax
  4042ac:	48 8b 40 28          	mov    0x28(%rax),%rax
  4042b0:	48 8b 40 30          	mov    0x30(%rax),%rax
  4042b4:	48 8b 8d a8 f9 ff ff 	mov    -0x658(%rbp),%rcx
  4042bb:	48 8b 79 50          	mov    0x50(%rcx),%rdi
  4042bf:	ff d0                	callq  *%rax
  4042c1:	31 f6                	xor    %esi,%esi
  4042c3:	48 8b 85 a8 f9 ff ff 	mov    -0x658(%rbp),%rax
  4042ca:	48 89 85 b8 f9 ff ff 	mov    %rax,-0x648(%rbp)
  4042d1:	48 c7 85 b0 f9 ff ff 	movq   $0x58,-0x650(%rbp)
  4042d8:	58 00 00 00 
  4042dc:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  4042e3:	00 
  4042e4:	48 8b bd b8 f9 ff ff 	mov    -0x648(%rbp),%rdi
  4042eb:	48 8b 95 b0 f9 ff ff 	mov    -0x650(%rbp),%rdx
  4042f2:	ff d0                	callq  *%rax
  4042f4:	48 89 85 c8 e7 ff ff 	mov    %rax,-0x1838(%rbp)
  4042fb:	48 8b 85 f0 f8 ff ff 	mov    -0x710(%rbp),%rax
  404302:	48 05 d8 00 00 00    	add    $0xd8,%rax
  404308:	48 89 85 c0 f9 ff ff 	mov    %rax,-0x640(%rbp)
  40430f:	48 83 bd c0 f9 ff ff 	cmpq   $0x0,-0x640(%rbp)
  404316:	00 
  404317:	75 02                	jne    40431b <main+0x2f2b>
  404319:	eb 67                	jmp    404382 <main+0x2f92>
  40431b:	48 8b 85 c0 f9 ff ff 	mov    -0x640(%rbp),%rax
  404322:	48 83 78 50 00       	cmpq   $0x0,0x50(%rax)
  404327:	74 1f                	je     404348 <main+0x2f58>
  404329:	48 8b 85 c0 f9 ff ff 	mov    -0x640(%rbp),%rax
  404330:	48 8b 00             	mov    (%rax),%rax
  404333:	48 8b 40 28          	mov    0x28(%rax),%rax
  404337:	48 8b 40 30          	mov    0x30(%rax),%rax
  40433b:	48 8b 8d c0 f9 ff ff 	mov    -0x640(%rbp),%rcx
  404342:	48 8b 79 50          	mov    0x50(%rcx),%rdi
  404346:	ff d0                	callq  *%rax
  404348:	31 f6                	xor    %esi,%esi
  40434a:	48 8b 85 c0 f9 ff ff 	mov    -0x640(%rbp),%rax
  404351:	48 89 85 d0 f9 ff ff 	mov    %rax,-0x630(%rbp)
  404358:	48 c7 85 c8 f9 ff ff 	movq   $0x58,-0x638(%rbp)
  40435f:	58 00 00 00 
  404363:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  40436a:	00 
  40436b:	48 8b bd d0 f9 ff ff 	mov    -0x630(%rbp),%rdi
  404372:	48 8b 95 c8 f9 ff ff 	mov    -0x638(%rbp),%rdx
  404379:	ff d0                	callq  *%rax
  40437b:	48 89 85 c0 e7 ff ff 	mov    %rax,-0x1840(%rbp)
  404382:	48 8b 85 f0 f8 ff ff 	mov    -0x710(%rbp),%rax
  404389:	48 83 c0 50          	add    $0x50,%rax
  40438d:	48 89 c7             	mov    %rax,%rdi
  404390:	e8 cb 6b 02 00       	callq  42af60 <mbedtls_md_free>
  404395:	48 8b 85 f0 f8 ff ff 	mov    -0x710(%rbp),%rax
  40439c:	48 83 c0 68          	add    $0x68,%rax
  4043a0:	48 89 c7             	mov    %rax,%rdi
  4043a3:	e8 b8 6b 02 00       	callq  42af60 <mbedtls_md_free>
  4043a8:	31 f6                	xor    %esi,%esi
  4043aa:	48 8b 85 f0 f8 ff ff 	mov    -0x710(%rbp),%rax
  4043b1:	48 89 85 00 f9 ff ff 	mov    %rax,-0x700(%rbp)
  4043b8:	48 c7 85 f8 f8 ff ff 	movq   $0x130,-0x708(%rbp)
  4043bf:	30 01 00 00 
  4043c3:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  4043ca:	00 
  4043cb:	48 8b bd 00 f9 ff ff 	mov    -0x700(%rbp),%rdi
  4043d2:	48 8b 95 f8 f8 ff ff 	mov    -0x708(%rbp),%rdx
  4043d9:	ff d0                	callq  *%rax
  4043db:	48 89 85 b8 e7 ff ff 	mov    %rax,-0x1848(%rbp)
  4043e2:	48 8b 85 c8 f8 ff ff 	mov    -0x738(%rbp),%rax
  4043e9:	48 8b 40 70          	mov    0x70(%rax),%rax
  4043ed:	48 89 c7             	mov    %rax,%rdi
  4043f0:	e8 eb cc ff ff       	callq  4010e0 <free@plt>
  4043f5:	48 8b 85 c8 f8 ff ff 	mov    -0x738(%rbp),%rax
  4043fc:	48 83 78 58 00       	cmpq   $0x0,0x58(%rax)
  404401:	0f 84 6a 03 00 00    	je     404771 <main+0x3381>
  404407:	48 8b 85 c8 f8 ff ff 	mov    -0x738(%rbp),%rax
  40440e:	48 89 85 10 f9 ff ff 	mov    %rax,-0x6f0(%rbp)
  404415:	48 8b 85 10 f9 ff ff 	mov    -0x6f0(%rbp),%rax
  40441c:	48 8b 40 58          	mov    0x58(%rax),%rax
  404420:	48 89 85 08 f9 ff ff 	mov    %rax,-0x6f8(%rbp)
  404427:	48 83 bd 08 f9 ff ff 	cmpq   $0x0,-0x6f8(%rbp)
  40442e:	00 
  40442f:	75 05                	jne    404436 <main+0x3046>
  404431:	e9 ea 00 00 00       	jmpq   404520 <main+0x3130>
  404436:	48 8b 85 08 f9 ff ff 	mov    -0x6f8(%rbp),%rax
  40443d:	48 83 c0 08          	add    $0x8,%rax
  404441:	48 89 85 18 f9 ff ff 	mov    %rax,-0x6e8(%rbp)
  404448:	48 83 bd 18 f9 ff ff 	cmpq   $0x0,-0x6e8(%rbp)
  40444f:	00 
  404450:	75 02                	jne    404454 <main+0x3064>
  404452:	eb 3a                	jmp    40448e <main+0x309e>
  404454:	31 f6                	xor    %esi,%esi
  404456:	48 8b 85 18 f9 ff ff 	mov    -0x6e8(%rbp),%rax
  40445d:	48 89 85 28 f9 ff ff 	mov    %rax,-0x6d8(%rbp)
  404464:	48 c7 85 20 f9 ff ff 	movq   $0x58,-0x6e0(%rbp)
  40446b:	58 00 00 00 
  40446f:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  404476:	00 
  404477:	48 8b bd 28 f9 ff ff 	mov    -0x6d8(%rbp),%rdi
  40447e:	48 8b 95 20 f9 ff ff 	mov    -0x6e0(%rbp),%rdx
  404485:	ff d0                	callq  *%rax
  404487:	48 89 85 b0 e7 ff ff 	mov    %rax,-0x1850(%rbp)
  40448e:	48 8b 85 08 f9 ff ff 	mov    -0x6f8(%rbp),%rax
  404495:	48 83 c0 60          	add    $0x60,%rax
  404499:	48 89 85 d8 f9 ff ff 	mov    %rax,-0x628(%rbp)
  4044a0:	48 83 bd d8 f9 ff ff 	cmpq   $0x0,-0x628(%rbp)
  4044a7:	00 
  4044a8:	75 02                	jne    4044ac <main+0x30bc>
  4044aa:	eb 3a                	jmp    4044e6 <main+0x30f6>
  4044ac:	31 f6                	xor    %esi,%esi
  4044ae:	48 8b 85 d8 f9 ff ff 	mov    -0x628(%rbp),%rax
  4044b5:	48 89 85 e8 f9 ff ff 	mov    %rax,-0x618(%rbp)
  4044bc:	48 c7 85 e0 f9 ff ff 	movq   $0x5c,-0x620(%rbp)
  4044c3:	5c 00 00 00 
  4044c7:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  4044ce:	00 
  4044cf:	48 8b bd e8 f9 ff ff 	mov    -0x618(%rbp),%rdi
  4044d6:	48 8b 95 e0 f9 ff ff 	mov    -0x620(%rbp),%rdx
  4044dd:	ff d0                	callq  *%rax
  4044df:	48 89 85 a8 e7 ff ff 	mov    %rax,-0x1858(%rbp)
  4044e6:	31 f6                	xor    %esi,%esi
  4044e8:	48 8b 85 08 f9 ff ff 	mov    -0x6f8(%rbp),%rax
  4044ef:	48 89 85 38 f9 ff ff 	mov    %rax,-0x6c8(%rbp)
  4044f6:	48 c7 85 30 f9 ff ff 	movq   $0x168,-0x6d0(%rbp)
  4044fd:	68 01 00 00 
  404501:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  404508:	00 
  404509:	48 8b bd 38 f9 ff ff 	mov    -0x6c8(%rbp),%rdi
  404510:	48 8b 95 30 f9 ff ff 	mov    -0x6d0(%rbp),%rdx
  404517:	ff d0                	callq  *%rax
  404519:	48 89 85 a0 e7 ff ff 	mov    %rax,-0x1860(%rbp)
  404520:	48 8b 85 c8 f8 ff ff 	mov    -0x738(%rbp),%rax
  404527:	48 8b 40 78          	mov    0x78(%rax),%rax
  40452b:	48 89 85 40 f9 ff ff 	mov    %rax,-0x6c0(%rbp)
  404532:	48 83 bd 40 f9 ff ff 	cmpq   $0x0,-0x6c0(%rbp)
  404539:	00 
  40453a:	75 05                	jne    404541 <main+0x3151>
  40453c:	e9 6e 01 00 00       	jmpq   4046af <main+0x32bf>
  404541:	48 8b 85 40 f9 ff ff 	mov    -0x6c0(%rbp),%rax
  404548:	48 05 80 00 00 00    	add    $0x80,%rax
  40454e:	48 89 85 f0 f9 ff ff 	mov    %rax,-0x610(%rbp)
  404555:	48 83 bd f0 f9 ff ff 	cmpq   $0x0,-0x610(%rbp)
  40455c:	00 
  40455d:	75 02                	jne    404561 <main+0x3171>
  40455f:	eb 67                	jmp    4045c8 <main+0x31d8>
  404561:	48 8b 85 f0 f9 ff ff 	mov    -0x610(%rbp),%rax
  404568:	48 83 78 50 00       	cmpq   $0x0,0x50(%rax)
  40456d:	74 1f                	je     40458e <main+0x319e>
  40456f:	48 8b 85 f0 f9 ff ff 	mov    -0x610(%rbp),%rax
  404576:	48 8b 00             	mov    (%rax),%rax
  404579:	48 8b 40 28          	mov    0x28(%rax),%rax
  40457d:	48 8b 40 30          	mov    0x30(%rax),%rax
  404581:	48 8b 8d f0 f9 ff ff 	mov    -0x610(%rbp),%rcx
  404588:	48 8b 79 50          	mov    0x50(%rcx),%rdi
  40458c:	ff d0                	callq  *%rax
  40458e:	31 f6                	xor    %esi,%esi
  404590:	48 8b 85 f0 f9 ff ff 	mov    -0x610(%rbp),%rax
  404597:	48 89 85 00 fa ff ff 	mov    %rax,-0x600(%rbp)
  40459e:	48 c7 85 f8 f9 ff ff 	movq   $0x58,-0x608(%rbp)
  4045a5:	58 00 00 00 
  4045a9:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  4045b0:	00 
  4045b1:	48 8b bd 00 fa ff ff 	mov    -0x600(%rbp),%rdi
  4045b8:	48 8b 95 f8 f9 ff ff 	mov    -0x608(%rbp),%rdx
  4045bf:	ff d0                	callq  *%rax
  4045c1:	48 89 85 98 e7 ff ff 	mov    %rax,-0x1868(%rbp)
  4045c8:	48 8b 85 40 f9 ff ff 	mov    -0x6c0(%rbp),%rax
  4045cf:	48 05 d8 00 00 00    	add    $0xd8,%rax
  4045d5:	48 89 85 08 fa ff ff 	mov    %rax,-0x5f8(%rbp)
  4045dc:	48 83 bd 08 fa ff ff 	cmpq   $0x0,-0x5f8(%rbp)
  4045e3:	00 
  4045e4:	75 02                	jne    4045e8 <main+0x31f8>
  4045e6:	eb 67                	jmp    40464f <main+0x325f>
  4045e8:	48 8b 85 08 fa ff ff 	mov    -0x5f8(%rbp),%rax
  4045ef:	48 83 78 50 00       	cmpq   $0x0,0x50(%rax)
  4045f4:	74 1f                	je     404615 <main+0x3225>
  4045f6:	48 8b 85 08 fa ff ff 	mov    -0x5f8(%rbp),%rax
  4045fd:	48 8b 00             	mov    (%rax),%rax
  404600:	48 8b 40 28          	mov    0x28(%rax),%rax
  404604:	48 8b 40 30          	mov    0x30(%rax),%rax
  404608:	48 8b 8d 08 fa ff ff 	mov    -0x5f8(%rbp),%rcx
  40460f:	48 8b 79 50          	mov    0x50(%rcx),%rdi
  404613:	ff d0                	callq  *%rax
  404615:	31 f6                	xor    %esi,%esi
  404617:	48 8b 85 08 fa ff ff 	mov    -0x5f8(%rbp),%rax
  40461e:	48 89 85 18 fa ff ff 	mov    %rax,-0x5e8(%rbp)
  404625:	48 c7 85 10 fa ff ff 	movq   $0x58,-0x5f0(%rbp)
  40462c:	58 00 00 00 
  404630:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  404637:	00 
  404638:	48 8b bd 18 fa ff ff 	mov    -0x5e8(%rbp),%rdi
  40463f:	48 8b 95 10 fa ff ff 	mov    -0x5f0(%rbp),%rdx
  404646:	ff d0                	callq  *%rax
  404648:	48 89 85 90 e7 ff ff 	mov    %rax,-0x1870(%rbp)
  40464f:	48 8b 85 40 f9 ff ff 	mov    -0x6c0(%rbp),%rax
  404656:	48 83 c0 50          	add    $0x50,%rax
  40465a:	48 89 c7             	mov    %rax,%rdi
  40465d:	e8 fe 68 02 00       	callq  42af60 <mbedtls_md_free>
  404662:	48 8b 85 40 f9 ff ff 	mov    -0x6c0(%rbp),%rax
  404669:	48 83 c0 68          	add    $0x68,%rax
  40466d:	48 89 c7             	mov    %rax,%rdi
  404670:	e8 eb 68 02 00       	callq  42af60 <mbedtls_md_free>
  404675:	31 f6                	xor    %esi,%esi
  404677:	48 8b 85 40 f9 ff ff 	mov    -0x6c0(%rbp),%rax
  40467e:	48 89 85 50 f9 ff ff 	mov    %rax,-0x6b0(%rbp)
  404685:	48 c7 85 48 f9 ff ff 	movq   $0x130,-0x6b8(%rbp)
  40468c:	30 01 00 00 
  404690:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  404697:	00 
  404698:	48 8b bd 50 f9 ff ff 	mov    -0x6b0(%rbp),%rdi
  40469f:	48 8b 95 48 f9 ff ff 	mov    -0x6b8(%rbp),%rdx
  4046a6:	ff d0                	callq  *%rax
  4046a8:	48 89 85 88 e7 ff ff 	mov    %rax,-0x1878(%rbp)
  4046af:	48 8b 85 c8 f8 ff ff 	mov    -0x738(%rbp),%rax
  4046b6:	48 8b 40 50          	mov    0x50(%rax),%rax
  4046ba:	48 89 85 58 f9 ff ff 	mov    %rax,-0x6a8(%rbp)
  4046c1:	48 83 bd 58 f9 ff ff 	cmpq   $0x0,-0x6a8(%rbp)
  4046c8:	00 
  4046c9:	75 02                	jne    4046cd <main+0x32dd>
  4046cb:	eb 6b                	jmp    404738 <main+0x3348>
  4046cd:	48 8b 85 58 f9 ff ff 	mov    -0x6a8(%rbp),%rax
  4046d4:	48 83 78 68 00       	cmpq   $0x0,0x68(%rax)
  4046d9:	74 23                	je     4046fe <main+0x330e>
  4046db:	48 8b 85 58 f9 ff ff 	mov    -0x6a8(%rbp),%rax
  4046e2:	48 8b 78 68          	mov    0x68(%rax),%rdi
  4046e6:	e8 85 18 01 00       	callq  415f70 <mbedtls_x509_crt_free>
  4046eb:	48 8b 85 58 f9 ff ff 	mov    -0x6a8(%rbp),%rax
  4046f2:	48 8b 40 68          	mov    0x68(%rax),%rax
  4046f6:	48 89 c7             	mov    %rax,%rdi
  4046f9:	e8 e2 c9 ff ff       	callq  4010e0 <free@plt>
  4046fe:	31 f6                	xor    %esi,%esi
  404700:	48 8b 85 58 f9 ff ff 	mov    -0x6a8(%rbp),%rax
  404707:	48 89 85 68 f9 ff ff 	mov    %rax,-0x698(%rbp)
  40470e:	48 c7 85 60 f9 ff ff 	movq   $0x78,-0x6a0(%rbp)
  404715:	78 00 00 00 
  404719:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  404720:	00 
  404721:	48 8b bd 68 f9 ff ff 	mov    -0x698(%rbp),%rdi
  404728:	48 8b 95 60 f9 ff ff 	mov    -0x6a0(%rbp),%rdx
  40472f:	ff d0                	callq  *%rax
  404731:	48 89 85 80 e7 ff ff 	mov    %rax,-0x1880(%rbp)
  404738:	48 8b 85 c8 f8 ff ff 	mov    -0x738(%rbp),%rax
  40473f:	48 8b 40 58          	mov    0x58(%rax),%rax
  404743:	48 89 c7             	mov    %rax,%rdi
  404746:	e8 95 c9 ff ff       	callq  4010e0 <free@plt>
  40474b:	48 8b 85 c8 f8 ff ff 	mov    -0x738(%rbp),%rax
  404752:	48 8b 40 78          	mov    0x78(%rax),%rax
  404756:	48 89 c7             	mov    %rax,%rdi
  404759:	e8 82 c9 ff ff       	callq  4010e0 <free@plt>
  40475e:	48 8b 85 c8 f8 ff ff 	mov    -0x738(%rbp),%rax
  404765:	48 8b 40 50          	mov    0x50(%rax),%rax
  404769:	48 89 c7             	mov    %rax,%rdi
  40476c:	e8 6f c9 ff ff       	callq  4010e0 <free@plt>
  404771:	48 8b 85 c8 f8 ff ff 	mov    -0x738(%rbp),%rax
  404778:	48 83 78 48 00       	cmpq   $0x0,0x48(%rax)
  40477d:	0f 84 9c 00 00 00    	je     40481f <main+0x342f>
  404783:	48 8b 85 c8 f8 ff ff 	mov    -0x738(%rbp),%rax
  40478a:	48 8b 40 48          	mov    0x48(%rax),%rax
  40478e:	48 89 85 70 f9 ff ff 	mov    %rax,-0x690(%rbp)
  404795:	48 83 bd 70 f9 ff ff 	cmpq   $0x0,-0x690(%rbp)
  40479c:	00 
  40479d:	75 02                	jne    4047a1 <main+0x33b1>
  40479f:	eb 6b                	jmp    40480c <main+0x341c>
  4047a1:	48 8b 85 70 f9 ff ff 	mov    -0x690(%rbp),%rax
  4047a8:	48 83 78 68 00       	cmpq   $0x0,0x68(%rax)
  4047ad:	74 23                	je     4047d2 <main+0x33e2>
  4047af:	48 8b 85 70 f9 ff ff 	mov    -0x690(%rbp),%rax
  4047b6:	48 8b 78 68          	mov    0x68(%rax),%rdi
  4047ba:	e8 b1 17 01 00       	callq  415f70 <mbedtls_x509_crt_free>
  4047bf:	48 8b 85 70 f9 ff ff 	mov    -0x690(%rbp),%rax
  4047c6:	48 8b 40 68          	mov    0x68(%rax),%rax
  4047ca:	48 89 c7             	mov    %rax,%rdi
  4047cd:	e8 0e c9 ff ff       	callq  4010e0 <free@plt>
  4047d2:	31 f6                	xor    %esi,%esi
  4047d4:	48 8b 85 70 f9 ff ff 	mov    -0x690(%rbp),%rax
  4047db:	48 89 85 80 f9 ff ff 	mov    %rax,-0x680(%rbp)
  4047e2:	48 c7 85 78 f9 ff ff 	movq   $0x78,-0x688(%rbp)
  4047e9:	78 00 00 00 
  4047ed:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  4047f4:	00 
  4047f5:	48 8b bd 80 f9 ff ff 	mov    -0x680(%rbp),%rdi
  4047fc:	48 8b 95 78 f9 ff ff 	mov    -0x688(%rbp),%rdx
  404803:	ff d0                	callq  *%rax
  404805:	48 89 85 78 e7 ff ff 	mov    %rax,-0x1888(%rbp)
  40480c:	48 8b 85 c8 f8 ff ff 	mov    -0x738(%rbp),%rax
  404813:	48 8b 40 48          	mov    0x48(%rax),%rax
  404817:	48 89 c7             	mov    %rax,%rdi
  40481a:	e8 c1 c8 ff ff       	callq  4010e0 <free@plt>
  40481f:	48 8b 85 c8 f8 ff ff 	mov    -0x738(%rbp),%rax
  404826:	48 83 b8 50 01 00 00 	cmpq   $0x0,0x150(%rax)
  40482d:	00 
  40482e:	74 7d                	je     4048ad <main+0x34bd>
  404830:	31 f6                	xor    %esi,%esi
  404832:	48 8b 85 c8 f8 ff ff 	mov    -0x738(%rbp),%rax
  404839:	48 8b 80 50 01 00 00 	mov    0x150(%rax),%rax
  404840:	48 8b 8d c8 f8 ff ff 	mov    -0x738(%rbp),%rcx
  404847:	48 8b b9 50 01 00 00 	mov    0x150(%rcx),%rdi
  40484e:	89 b5 74 e7 ff ff    	mov    %esi,-0x188c(%rbp)
  404854:	48 89 85 68 e7 ff ff 	mov    %rax,-0x1898(%rbp)
  40485b:	e8 70 c8 ff ff       	callq  4010d0 <strlen@plt>
  404860:	48 8b 8d 68 e7 ff ff 	mov    -0x1898(%rbp),%rcx
  404867:	48 89 8d 90 f9 ff ff 	mov    %rcx,-0x670(%rbp)
  40486e:	48 89 85 88 f9 ff ff 	mov    %rax,-0x678(%rbp)
  404875:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  40487c:	00 
  40487d:	48 8b bd 90 f9 ff ff 	mov    -0x670(%rbp),%rdi
  404884:	48 8b 95 88 f9 ff ff 	mov    -0x678(%rbp),%rdx
  40488b:	8b b5 74 e7 ff ff    	mov    -0x188c(%rbp),%esi
  404891:	ff d0                	callq  *%rax
  404893:	48 8b 8d c8 f8 ff ff 	mov    -0x738(%rbp),%rcx
  40489a:	48 8b b9 50 01 00 00 	mov    0x150(%rcx),%rdi
  4048a1:	48 89 85 60 e7 ff ff 	mov    %rax,-0x18a0(%rbp)
  4048a8:	e8 33 c8 ff ff       	callq  4010e0 <free@plt>
  4048ad:	31 f6                	xor    %esi,%esi
  4048af:	48 8b 85 c8 f8 ff ff 	mov    -0x738(%rbp),%rax
  4048b6:	48 89 85 a0 f9 ff ff 	mov    %rax,-0x660(%rbp)
  4048bd:	48 c7 85 98 f9 ff ff 	movq   $0x160,-0x668(%rbp)
  4048c4:	60 01 00 00 
  4048c8:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  4048cf:	00 
  4048d0:	48 8b bd a0 f9 ff ff 	mov    -0x660(%rbp),%rdi
  4048d7:	48 8b 95 98 f9 ff ff 	mov    -0x668(%rbp),%rdx
  4048de:	ff d0                	callq  *%rax
  4048e0:	48 89 85 58 e7 ff ff 	mov    %rax,-0x18a8(%rbp)
  4048e7:	48 8d 85 b8 ec ff ff 	lea    -0x1348(%rbp),%rax
  4048ee:	48 89 85 50 f8 ff ff 	mov    %rax,-0x7b0(%rbp)
  4048f5:	48 8b 85 50 f8 ff ff 	mov    -0x7b0(%rbp),%rax
  4048fc:	48 8b 40 70          	mov    0x70(%rax),%rax
  404900:	48 89 85 68 f8 ff ff 	mov    %rax,-0x798(%rbp)
  404907:	48 8b 85 68 f8 ff ff 	mov    -0x798(%rbp),%rax
  40490e:	48 89 85 60 f8 ff ff 	mov    %rax,-0x7a0(%rbp)
  404915:	48 83 bd 60 f8 ff ff 	cmpq   $0x0,-0x7a0(%rbp)
  40491c:	00 
  40491d:	74 31                	je     404950 <main+0x3560>
  40491f:	48 8b 85 60 f8 ff ff 	mov    -0x7a0(%rbp),%rax
  404926:	48 8b 40 10          	mov    0x10(%rax),%rax
  40492a:	48 89 85 58 f8 ff ff 	mov    %rax,-0x7a8(%rbp)
  404931:	48 8b 85 60 f8 ff ff 	mov    -0x7a0(%rbp),%rax
  404938:	48 89 c7             	mov    %rax,%rdi
  40493b:	e8 a0 c7 ff ff       	callq  4010e0 <free@plt>
  404940:	48 8b 85 58 f8 ff ff 	mov    -0x7a8(%rbp),%rax
  404947:	48 89 85 60 f8 ff ff 	mov    %rax,-0x7a0(%rbp)
  40494e:	eb c5                	jmp    404915 <main+0x3525>
  404950:	31 f6                	xor    %esi,%esi
  404952:	48 8b 85 50 f8 ff ff 	mov    -0x7b0(%rbp),%rax
  404959:	48 89 85 78 f8 ff ff 	mov    %rax,-0x788(%rbp)
  404960:	48 c7 85 70 f8 ff ff 	movq   $0xa0,-0x790(%rbp)
  404967:	a0 00 00 00 
  40496b:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  404972:	00 
  404973:	48 8b bd 78 f8 ff ff 	mov    -0x788(%rbp),%rdi
  40497a:	48 8b 95 70 f8 ff ff 	mov    -0x790(%rbp),%rdx
  404981:	ff d0                	callq  *%rax
  404983:	48 8d 95 b8 ee ff ff 	lea    -0x1148(%rbp),%rdx
  40498a:	48 89 95 10 f8 ff ff 	mov    %rdx,-0x7f0(%rbp)
  404991:	48 83 bd 10 f8 ff ff 	cmpq   $0x0,-0x7f0(%rbp)
  404998:	00 
  404999:	48 89 85 50 e7 ff ff 	mov    %rax,-0x18b0(%rbp)
  4049a0:	75 05                	jne    4049a7 <main+0x35b7>
  4049a2:	e9 92 00 00 00       	jmpq   404a39 <main+0x3649>
  4049a7:	48 8b 85 10 f8 ff ff 	mov    -0x7f0(%rbp),%rax
  4049ae:	48 83 c0 28          	add    $0x28,%rax
  4049b2:	48 89 85 18 f8 ff ff 	mov    %rax,-0x7e8(%rbp)
  4049b9:	48 83 bd 18 f8 ff ff 	cmpq   $0x0,-0x7e8(%rbp)
  4049c0:	00 
  4049c1:	75 02                	jne    4049c5 <main+0x35d5>
  4049c3:	eb 3a                	jmp    4049ff <main+0x360f>
  4049c5:	31 f6                	xor    %esi,%esi
  4049c7:	48 8b 85 18 f8 ff ff 	mov    -0x7e8(%rbp),%rax
  4049ce:	48 89 85 28 f8 ff ff 	mov    %rax,-0x7d8(%rbp)
  4049d5:	48 c7 85 20 f8 ff ff 	movq   $0x120,-0x7e0(%rbp)
  4049dc:	20 01 00 00 
  4049e0:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  4049e7:	00 
  4049e8:	48 8b bd 28 f8 ff ff 	mov    -0x7d8(%rbp),%rdi
  4049ef:	48 8b 95 20 f8 ff ff 	mov    -0x7e0(%rbp),%rdx
  4049f6:	ff d0                	callq  *%rax
  4049f8:	48 89 85 48 e7 ff ff 	mov    %rax,-0x18b8(%rbp)
  4049ff:	31 f6                	xor    %esi,%esi
  404a01:	48 8b 85 10 f8 ff ff 	mov    -0x7f0(%rbp),%rax
  404a08:	48 89 85 38 f8 ff ff 	mov    %rax,-0x7c8(%rbp)
  404a0f:	48 c7 85 30 f8 ff ff 	movq   $0x158,-0x7d0(%rbp)
  404a16:	58 01 00 00 
  404a1a:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  404a21:	00 
  404a22:	48 8b bd 38 f8 ff ff 	mov    -0x7c8(%rbp),%rdi
  404a29:	48 8b 95 30 f8 ff ff 	mov    -0x7d0(%rbp),%rdx
  404a30:	ff d0                	callq  *%rax
  404a32:	48 89 85 40 e7 ff ff 	mov    %rax,-0x18c0(%rbp)
  404a39:	48 8d 85 10 f0 ff ff 	lea    -0xff0(%rbp),%rax
  404a40:	48 89 85 d0 f7 ff ff 	mov    %rax,-0x830(%rbp)
  404a47:	48 8b 85 d0 f7 ff ff 	mov    -0x830(%rbp),%rax
  404a4e:	48 83 c0 04          	add    $0x4,%rax
  404a52:	48 89 85 d8 f7 ff ff 	mov    %rax,-0x828(%rbp)
  404a59:	48 83 bd d8 f7 ff ff 	cmpq   $0x0,-0x828(%rbp)
  404a60:	00 
  404a61:	75 02                	jne    404a65 <main+0x3675>
  404a63:	eb 3a                	jmp    404a9f <main+0x36af>
  404a65:	31 f6                	xor    %esi,%esi
  404a67:	48 8b 85 d8 f7 ff ff 	mov    -0x828(%rbp),%rax
  404a6e:	48 89 85 e8 f7 ff ff 	mov    %rax,-0x818(%rbp)
  404a75:	48 c7 85 e0 f7 ff ff 	movq   $0x6c,-0x820(%rbp)
  404a7c:	6c 00 00 00 
  404a80:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  404a87:	00 
  404a88:	48 8b bd e8 f7 ff ff 	mov    -0x818(%rbp),%rdi
  404a8f:	48 8b 95 e0 f7 ff ff 	mov    -0x820(%rbp),%rdx
  404a96:	ff d0                	callq  *%rax
  404a98:	48 89 85 38 e7 ff ff 	mov    %rax,-0x18c8(%rbp)
  404a9f:	31 f6                	xor    %esi,%esi
  404aa1:	48 8b 85 d0 f7 ff ff 	mov    -0x830(%rbp),%rax
  404aa8:	c7 40 70 00 00 00 00 	movl   $0x0,0x70(%rax)
  404aaf:	48 8b 85 d0 f7 ff ff 	mov    -0x830(%rbp),%rax
  404ab6:	48 83 c0 78          	add    $0x78,%rax
  404aba:	48 89 85 f8 f7 ff ff 	mov    %rax,-0x808(%rbp)
  404ac1:	48 c7 85 f0 f7 ff ff 	movq   $0x320,-0x810(%rbp)
  404ac8:	20 03 00 00 
  404acc:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  404ad3:	00 
  404ad4:	48 8b bd f8 f7 ff ff 	mov    -0x808(%rbp),%rdi
  404adb:	48 8b 95 f0 f7 ff ff 	mov    -0x810(%rbp),%rdx
  404ae2:	ff d0                	callq  *%rax
  404ae4:	48 8b 95 d0 f7 ff ff 	mov    -0x830(%rbp),%rdx
  404aeb:	c7 02 00 00 00 00    	movl   $0x0,(%rdx)
  404af1:	8b b5 c0 f7 ff ff    	mov    -0x840(%rbp),%esi
  404af7:	48 89 85 30 e7 ff ff 	mov    %rax,-0x18d0(%rbp)
  404afe:	89 b5 2c e7 ff ff    	mov    %esi,-0x18d4(%rbp)
  404b04:	e8 4d 0e 04 00       	callq  445956 <writeback_cache>
  404b09:	8b 85 2c e7 ff ff    	mov    -0x18d4(%rbp),%eax
  404b0f:	48 81 c4 e0 18 00 00 	add    $0x18e0,%rsp
  404b16:	5d                   	pop    %rbp
  404b17:	c3                   	retq   
  404b18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  404b1f:	00 

0000000000404b20 <my_debug>:
  404b20:	55                   	push   %rbp
  404b21:	48 89 e5             	mov    %rsp,%rbp
  404b24:	48 83 ec 40          	sub    $0x40,%rsp
  404b28:	48 b8 30 73 44 00 00 	movabs $0x447330,%rax
  404b2f:	00 00 00 
  404b32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  404b36:	89 75 f4             	mov    %esi,-0xc(%rbp)
  404b39:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  404b3d:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  404b40:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
  404b44:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  404b48:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  404b4c:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  404b4f:	4c 8b 45 d8          	mov    -0x28(%rbp),%r8
  404b53:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
  404b57:	48 89 d7             	mov    %rdx,%rdi
  404b5a:	48 89 c6             	mov    %rax,%rsi
  404b5d:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  404b61:	b0 00                	mov    $0x0,%al
  404b63:	e8 28 c6 ff ff       	callq  401190 <fprintf@plt>
  404b68:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  404b6c:	48 89 d7             	mov    %rdx,%rdi
  404b6f:	89 45 cc             	mov    %eax,-0x34(%rbp)
  404b72:	e8 c9 c4 ff ff       	callq  401040 <fflush@plt>
  404b77:	89 45 c8             	mov    %eax,-0x38(%rbp)
  404b7a:	e8 d7 0d 04 00       	callq  445956 <writeback_cache>
  404b7f:	48 83 c4 40          	add    $0x40,%rsp
  404b83:	5d                   	pop    %rbp
  404b84:	c3                   	retq   
  404b85:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  404b8c:	00 00 00 00 

0000000000404b90 <net_prepare>:
  404b90:	55                   	push   %rbp
  404b91:	48 89 e5             	mov    %rsp,%rbp
  404b94:	48 83 ec 10          	sub    $0x10,%rsp
  404b98:	b8 01 00 00 00       	mov    $0x1,%eax
  404b9d:	89 c6                	mov    %eax,%esi
  404b9f:	bf 0d 00 00 00       	mov    $0xd,%edi
  404ba4:	e8 a7 c4 ff ff       	callq  401050 <__sysv_signal@plt>
  404ba9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  404bad:	e8 a4 0d 04 00       	callq  445956 <writeback_cache>
  404bb2:	31 c0                	xor    %eax,%eax
  404bb4:	48 83 c4 10          	add    $0x10,%rsp
  404bb8:	5d                   	pop    %rbp
  404bb9:	c3                   	retq   
  404bba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000404bc0 <mbedtls_net_recv>:
  404bc0:	55                   	push   %rbp
  404bc1:	48 89 e5             	mov    %rsp,%rbp
  404bc4:	48 83 ec 50          	sub    $0x50,%rsp
  404bc8:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
  404bcc:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
  404bd0:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
  404bd4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  404bd8:	8b 02                	mov    (%rdx),%eax
  404bda:	89 45 c8             	mov    %eax,-0x38(%rbp)
  404bdd:	83 7d c8 00          	cmpl   $0x0,-0x38(%rbp)
  404be1:	7d 0c                	jge    404bef <mbedtls_net_recv+0x2f>
  404be3:	c7 45 e8 bb ff ff ff 	movl   $0xffffffbb,-0x18(%rbp)
  404bea:	e9 dd 00 00 00       	jmpq   404ccc <mbedtls_net_recv+0x10c>
  404bef:	8b 7d c8             	mov    -0x38(%rbp),%edi
  404bf2:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  404bf6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  404bfa:	e8 a1 c5 ff ff       	callq  4011a0 <read@plt>
  404bff:	89 c7                	mov    %eax,%edi
  404c01:	89 7d cc             	mov    %edi,-0x34(%rbp)
  404c04:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
  404c08:	0f 8d b8 00 00 00    	jge    404cc6 <mbedtls_net_recv+0x106>
  404c0e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404c12:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  404c16:	e8 15 c5 ff ff       	callq  401130 <__errno_location@plt>
  404c1b:	8b 08                	mov    (%rax),%ecx
  404c1d:	89 4d ec             	mov    %ecx,-0x14(%rbp)
  404c20:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  404c24:	8b 38                	mov    (%rax),%edi
  404c26:	be 03 00 00 00       	mov    $0x3,%esi
  404c2b:	b0 00                	mov    $0x0,%al
  404c2d:	e8 0e c5 ff ff       	callq  401140 <fcntl@plt>
  404c32:	25 00 08 00 00       	and    $0x800,%eax
  404c37:	3d 00 08 00 00       	cmp    $0x800,%eax
  404c3c:	74 19                	je     404c57 <mbedtls_net_recv+0x97>
  404c3e:	8b 45 ec             	mov    -0x14(%rbp),%eax
  404c41:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  404c44:	e8 e7 c4 ff ff       	callq  401130 <__errno_location@plt>
  404c49:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
  404c4c:	89 08                	mov    %ecx,(%rax)
  404c4e:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  404c55:	eb 25                	jmp    404c7c <mbedtls_net_recv+0xbc>
  404c57:	8b 45 ec             	mov    -0x14(%rbp),%eax
  404c5a:	89 45 c0             	mov    %eax,-0x40(%rbp)
  404c5d:	e8 ce c4 ff ff       	callq  401130 <__errno_location@plt>
  404c62:	8b 4d c0             	mov    -0x40(%rbp),%ecx
  404c65:	89 08                	mov    %ecx,(%rax)
  404c67:	83 f9 0b             	cmp    $0xb,%ecx
  404c6a:	75 09                	jne    404c75 <mbedtls_net_recv+0xb5>
  404c6c:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  404c73:	eb 07                	jmp    404c7c <mbedtls_net_recv+0xbc>
  404c75:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  404c7c:	8b 45 fc             	mov    -0x4(%rbp),%eax
  404c7f:	83 f8 00             	cmp    $0x0,%eax
  404c82:	74 09                	je     404c8d <mbedtls_net_recv+0xcd>
  404c84:	c7 45 e8 00 97 ff ff 	movl   $0xffff9700,-0x18(%rbp)
  404c8b:	eb 3f                	jmp    404ccc <mbedtls_net_recv+0x10c>
  404c8d:	e8 9e c4 ff ff       	callq  401130 <__errno_location@plt>
  404c92:	83 38 20             	cmpl   $0x20,(%rax)
  404c95:	74 0a                	je     404ca1 <mbedtls_net_recv+0xe1>
  404c97:	e8 94 c4 ff ff       	callq  401130 <__errno_location@plt>
  404c9c:	83 38 68             	cmpl   $0x68,(%rax)
  404c9f:	75 09                	jne    404caa <mbedtls_net_recv+0xea>
  404ca1:	c7 45 e8 b0 ff ff ff 	movl   $0xffffffb0,-0x18(%rbp)
  404ca8:	eb 22                	jmp    404ccc <mbedtls_net_recv+0x10c>
  404caa:	e8 81 c4 ff ff       	callq  401130 <__errno_location@plt>
  404caf:	83 38 04             	cmpl   $0x4,(%rax)
  404cb2:	75 09                	jne    404cbd <mbedtls_net_recv+0xfd>
  404cb4:	c7 45 e8 00 97 ff ff 	movl   $0xffff9700,-0x18(%rbp)
  404cbb:	eb 0f                	jmp    404ccc <mbedtls_net_recv+0x10c>
  404cbd:	c7 45 e8 b4 ff ff ff 	movl   $0xffffffb4,-0x18(%rbp)
  404cc4:	eb 06                	jmp    404ccc <mbedtls_net_recv+0x10c>
  404cc6:	8b 45 cc             	mov    -0x34(%rbp),%eax
  404cc9:	89 45 e8             	mov    %eax,-0x18(%rbp)
  404ccc:	8b 45 e8             	mov    -0x18(%rbp),%eax
  404ccf:	89 45 bc             	mov    %eax,-0x44(%rbp)
  404cd2:	e8 7f 0c 04 00       	callq  445956 <writeback_cache>
  404cd7:	8b 45 bc             	mov    -0x44(%rbp),%eax
  404cda:	48 83 c4 50          	add    $0x50,%rsp
  404cde:	5d                   	pop    %rbp
  404cdf:	c3                   	retq   

0000000000404ce0 <mbedtls_net_send>:
  404ce0:	55                   	push   %rbp
  404ce1:	48 89 e5             	mov    %rsp,%rbp
  404ce4:	48 83 ec 50          	sub    $0x50,%rsp
  404ce8:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
  404cec:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
  404cf0:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
  404cf4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  404cf8:	8b 02                	mov    (%rdx),%eax
  404cfa:	89 45 c8             	mov    %eax,-0x38(%rbp)
  404cfd:	83 7d c8 00          	cmpl   $0x0,-0x38(%rbp)
  404d01:	7d 0c                	jge    404d0f <mbedtls_net_send+0x2f>
  404d03:	c7 45 e8 bb ff ff ff 	movl   $0xffffffbb,-0x18(%rbp)
  404d0a:	e9 dd 00 00 00       	jmpq   404dec <mbedtls_net_send+0x10c>
  404d0f:	8b 7d c8             	mov    -0x38(%rbp),%edi
  404d12:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  404d16:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  404d1a:	e8 91 c4 ff ff       	callq  4011b0 <write@plt>
  404d1f:	89 c7                	mov    %eax,%edi
  404d21:	89 7d cc             	mov    %edi,-0x34(%rbp)
  404d24:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
  404d28:	0f 8d b8 00 00 00    	jge    404de6 <mbedtls_net_send+0x106>
  404d2e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404d32:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  404d36:	e8 f5 c3 ff ff       	callq  401130 <__errno_location@plt>
  404d3b:	8b 08                	mov    (%rax),%ecx
  404d3d:	89 4d ec             	mov    %ecx,-0x14(%rbp)
  404d40:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  404d44:	8b 38                	mov    (%rax),%edi
  404d46:	be 03 00 00 00       	mov    $0x3,%esi
  404d4b:	b0 00                	mov    $0x0,%al
  404d4d:	e8 ee c3 ff ff       	callq  401140 <fcntl@plt>
  404d52:	25 00 08 00 00       	and    $0x800,%eax
  404d57:	3d 00 08 00 00       	cmp    $0x800,%eax
  404d5c:	74 19                	je     404d77 <mbedtls_net_send+0x97>
  404d5e:	8b 45 ec             	mov    -0x14(%rbp),%eax
  404d61:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  404d64:	e8 c7 c3 ff ff       	callq  401130 <__errno_location@plt>
  404d69:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
  404d6c:	89 08                	mov    %ecx,(%rax)
  404d6e:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  404d75:	eb 25                	jmp    404d9c <mbedtls_net_send+0xbc>
  404d77:	8b 45 ec             	mov    -0x14(%rbp),%eax
  404d7a:	89 45 c0             	mov    %eax,-0x40(%rbp)
  404d7d:	e8 ae c3 ff ff       	callq  401130 <__errno_location@plt>
  404d82:	8b 4d c0             	mov    -0x40(%rbp),%ecx
  404d85:	89 08                	mov    %ecx,(%rax)
  404d87:	83 f9 0b             	cmp    $0xb,%ecx
  404d8a:	75 09                	jne    404d95 <mbedtls_net_send+0xb5>
  404d8c:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  404d93:	eb 07                	jmp    404d9c <mbedtls_net_send+0xbc>
  404d95:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  404d9c:	8b 45 fc             	mov    -0x4(%rbp),%eax
  404d9f:	83 f8 00             	cmp    $0x0,%eax
  404da2:	74 09                	je     404dad <mbedtls_net_send+0xcd>
  404da4:	c7 45 e8 80 97 ff ff 	movl   $0xffff9780,-0x18(%rbp)
  404dab:	eb 3f                	jmp    404dec <mbedtls_net_send+0x10c>
  404dad:	e8 7e c3 ff ff       	callq  401130 <__errno_location@plt>
  404db2:	83 38 20             	cmpl   $0x20,(%rax)
  404db5:	74 0a                	je     404dc1 <mbedtls_net_send+0xe1>
  404db7:	e8 74 c3 ff ff       	callq  401130 <__errno_location@plt>
  404dbc:	83 38 68             	cmpl   $0x68,(%rax)
  404dbf:	75 09                	jne    404dca <mbedtls_net_send+0xea>
  404dc1:	c7 45 e8 b0 ff ff ff 	movl   $0xffffffb0,-0x18(%rbp)
  404dc8:	eb 22                	jmp    404dec <mbedtls_net_send+0x10c>
  404dca:	e8 61 c3 ff ff       	callq  401130 <__errno_location@plt>
  404dcf:	83 38 04             	cmpl   $0x4,(%rax)
  404dd2:	75 09                	jne    404ddd <mbedtls_net_send+0xfd>
  404dd4:	c7 45 e8 80 97 ff ff 	movl   $0xffff9780,-0x18(%rbp)
  404ddb:	eb 0f                	jmp    404dec <mbedtls_net_send+0x10c>
  404ddd:	c7 45 e8 b2 ff ff ff 	movl   $0xffffffb2,-0x18(%rbp)
  404de4:	eb 06                	jmp    404dec <mbedtls_net_send+0x10c>
  404de6:	8b 45 cc             	mov    -0x34(%rbp),%eax
  404de9:	89 45 e8             	mov    %eax,-0x18(%rbp)
  404dec:	8b 45 e8             	mov    -0x18(%rbp),%eax
  404def:	89 45 bc             	mov    %eax,-0x44(%rbp)
  404df2:	e8 5f 0b 04 00       	callq  445956 <writeback_cache>
  404df7:	8b 45 bc             	mov    -0x44(%rbp),%eax
  404dfa:	48 83 c4 50          	add    $0x50,%rsp
  404dfe:	5d                   	pop    %rbp
  404dff:	c3                   	retq   

0000000000404e00 <mbedtls_ssl_derive_keys>:
  404e00:	55                   	push   %rbp
  404e01:	48 89 e5             	mov    %rsp,%rbp
  404e04:	53                   	push   %rbx
  404e05:	48 81 ec a8 03 00 00 	sub    $0x3a8,%rsp
  404e0c:	48 89 bd c0 fe ff ff 	mov    %rdi,-0x140(%rbp)
  404e13:	c7 85 bc fe ff ff 00 	movl   $0x0,-0x144(%rbp)
  404e1a:	00 00 00 
  404e1d:	48 8b bd c0 fe ff ff 	mov    -0x140(%rbp),%rdi
  404e24:	48 8b 7f 50          	mov    0x50(%rdi),%rdi
  404e28:	48 89 bd 28 fd ff ff 	mov    %rdi,-0x2d8(%rbp)
  404e2f:	48 8b bd c0 fe ff ff 	mov    -0x140(%rbp),%rdi
  404e36:	48 8b 7f 78          	mov    0x78(%rdi),%rdi
  404e3a:	48 89 bd 20 fd ff ff 	mov    %rdi,-0x2e0(%rbp)
  404e41:	48 8b bd c0 fe ff ff 	mov    -0x140(%rbp),%rdi
  404e48:	48 8b 7f 58          	mov    0x58(%rdi),%rdi
  404e4c:	48 89 bd 18 fd ff ff 	mov    %rdi,-0x2e8(%rbp)
  404e53:	eb 00                	jmp    404e55 <mbedtls_ssl_derive_keys+0x55>
  404e55:	48 b8 a0 cb 44 00 00 	movabs $0x44cba0,%rax
  404e5c:	00 00 00 
  404e5f:	48 8b 8d 20 fd ff ff 	mov    -0x2e0(%rbp),%rcx
  404e66:	48 8b 09             	mov    (%rcx),%rcx
  404e69:	8b 51 10             	mov    0x10(%rcx),%edx
  404e6c:	89 95 dc fe ff ff    	mov    %edx,-0x124(%rbp)
  404e72:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
  404e79:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
  404e80:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
  404e85:	74 39                	je     404ec0 <mbedtls_ssl_derive_keys+0xc0>
  404e87:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
  404e8e:	8b 08                	mov    (%rax),%ecx
  404e90:	3b 8d dc fe ff ff    	cmp    -0x124(%rbp),%ecx
  404e96:	75 14                	jne    404eac <mbedtls_ssl_derive_keys+0xac>
  404e98:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
  404e9f:	48 8b 40 08          	mov    0x8(%rax),%rax
  404ea3:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
  404eaa:	eb 1f                	jmp    404ecb <mbedtls_ssl_derive_keys+0xcb>
  404eac:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
  404eb3:	48 83 c0 10          	add    $0x10,%rax
  404eb7:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
  404ebe:	eb b9                	jmp    404e79 <mbedtls_ssl_derive_keys+0x79>
  404ec0:	48 c7 85 e0 fe ff ff 	movq   $0x0,-0x120(%rbp)
  404ec7:	00 00 00 00 
  404ecb:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
  404ed2:	48 89 85 38 fd ff ff 	mov    %rax,-0x2c8(%rbp)
  404ed9:	48 83 bd 38 fd ff ff 	cmpq   $0x0,-0x2c8(%rbp)
  404ee0:	00 
  404ee1:	75 13                	jne    404ef6 <mbedtls_ssl_derive_keys+0xf6>
  404ee3:	eb 00                	jmp    404ee5 <mbedtls_ssl_derive_keys+0xe5>
  404ee5:	eb 00                	jmp    404ee7 <mbedtls_ssl_derive_keys+0xe7>
  404ee7:	c7 85 cc fe ff ff 00 	movl   $0xffff8f00,-0x134(%rbp)
  404eee:	8f ff ff 
  404ef1:	e9 af 0f 00 00       	jmpq   405ea5 <mbedtls_ssl_derive_keys+0x10a5>
  404ef6:	48 8b 85 20 fd ff ff 	mov    -0x2e0(%rbp),%rax
  404efd:	48 8b 00             	mov    (%rax),%rax
  404f00:	8b 48 14             	mov    0x14(%rax),%ecx
  404f03:	89 8d fc fe ff ff    	mov    %ecx,-0x104(%rbp)
  404f09:	8b 8d fc fe ff ff    	mov    -0x104(%rbp),%ecx
  404f0f:	83 c1 fd             	add    $0xfffffffd,%ecx
  404f12:	89 c8                	mov    %ecx,%eax
  404f14:	83 e9 03             	sub    $0x3,%ecx
  404f17:	48 89 85 00 fd ff ff 	mov    %rax,-0x300(%rbp)
  404f1e:	89 8d fc fc ff ff    	mov    %ecx,-0x304(%rbp)
  404f24:	77 5d                	ja     404f83 <mbedtls_ssl_derive_keys+0x183>
  404f26:	48 8b 85 00 fd ff ff 	mov    -0x300(%rbp),%rax
  404f2d:	48 8b 0c c5 98 6b 44 	mov    0x446b98(,%rax,8),%rcx
  404f34:	00 
  404f35:	ff e1                	jmpq   *%rcx
  404f37:	48 b8 50 d9 44 00 00 	movabs $0x44d950,%rax
  404f3e:	00 00 00 
  404f41:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
  404f48:	eb 44                	jmp    404f8e <mbedtls_ssl_derive_keys+0x18e>
  404f4a:	48 b8 b0 d9 44 00 00 	movabs $0x44d9b0,%rax
  404f51:	00 00 00 
  404f54:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
  404f5b:	eb 31                	jmp    404f8e <mbedtls_ssl_derive_keys+0x18e>
  404f5d:	48 b8 10 da 44 00 00 	movabs $0x44da10,%rax
  404f64:	00 00 00 
  404f67:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
  404f6e:	eb 1e                	jmp    404f8e <mbedtls_ssl_derive_keys+0x18e>
  404f70:	48 b8 70 da 44 00 00 	movabs $0x44da70,%rax
  404f77:	00 00 00 
  404f7a:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
  404f81:	eb 0b                	jmp    404f8e <mbedtls_ssl_derive_keys+0x18e>
  404f83:	48 c7 85 00 ff ff ff 	movq   $0x0,-0x100(%rbp)
  404f8a:	00 00 00 00 
  404f8e:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
  404f95:	48 89 85 30 fd ff ff 	mov    %rax,-0x2d0(%rbp)
  404f9c:	48 83 bd 30 fd ff ff 	cmpq   $0x0,-0x2d0(%rbp)
  404fa3:	00 
  404fa4:	75 13                	jne    404fb9 <mbedtls_ssl_derive_keys+0x1b9>
  404fa6:	eb 00                	jmp    404fa8 <mbedtls_ssl_derive_keys+0x1a8>
  404fa8:	eb 00                	jmp    404faa <mbedtls_ssl_derive_keys+0x1aa>
  404faa:	c7 85 cc fe ff ff 00 	movl   $0xffff8f00,-0x134(%rbp)
  404fb1:	8f ff ff 
  404fb4:	e9 ec 0e 00 00       	jmpq   405ea5 <mbedtls_ssl_derive_keys+0x10a5>
  404fb9:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  404fc0:	83 78 10 03          	cmpl   $0x3,0x10(%rax)
  404fc4:	7d 4a                	jge    405010 <mbedtls_ssl_derive_keys+0x210>
  404fc6:	48 8b 85 18 fd ff ff 	mov    -0x2e8(%rbp),%rax
  404fcd:	48 b9 d0 5e 40 00 00 	movabs $0x405ed0,%rcx
  404fd4:	00 00 00 
  404fd7:	48 89 88 d8 00 00 00 	mov    %rcx,0xd8(%rax)
  404fde:	48 8b 85 18 fd ff ff 	mov    -0x2e8(%rbp),%rax
  404fe5:	48 b9 e0 6c 40 00 00 	movabs $0x406ce0,%rcx
  404fec:	00 00 00 
  404fef:	48 89 88 c8 00 00 00 	mov    %rcx,0xc8(%rax)
  404ff6:	48 8b 85 18 fd ff ff 	mov    -0x2e8(%rbp),%rax
  404ffd:	48 b9 a0 6e 40 00 00 	movabs $0x406ea0,%rcx
  405004:	00 00 00 
  405007:	48 89 88 d0 00 00 00 	mov    %rcx,0xd0(%rax)
  40500e:	eb 13                	jmp    405023 <mbedtls_ssl_derive_keys+0x223>
  405010:	eb 00                	jmp    405012 <mbedtls_ssl_derive_keys+0x212>
  405012:	eb 00                	jmp    405014 <mbedtls_ssl_derive_keys+0x214>
  405014:	c7 85 cc fe ff ff 00 	movl   $0xffff9400,-0x134(%rbp)
  40501b:	94 ff ff 
  40501e:	e9 82 0e 00 00       	jmpq   405ea5 <mbedtls_ssl_derive_keys+0x10a5>
  405023:	48 8b 85 18 fd ff ff 	mov    -0x2e8(%rbp),%rax
  40502a:	83 b8 58 01 00 00 00 	cmpl   $0x0,0x158(%rax)
  405031:	0f 85 ef 00 00 00    	jne    405126 <mbedtls_ssl_derive_keys+0x326>
  405037:	eb 00                	jmp    405039 <mbedtls_ssl_derive_keys+0x239>
  405039:	eb 00                	jmp    40503b <mbedtls_ssl_derive_keys+0x23b>
  40503b:	b8 40 00 00 00       	mov    $0x40,%eax
  405040:	41 89 c0             	mov    %eax,%r8d
  405043:	b8 30 00 00 00       	mov    $0x30,%eax
  405048:	89 c1                	mov    %eax,%ecx
  40504a:	48 ba 40 73 44 00 00 	movabs $0x447340,%rdx
  405051:	00 00 00 
  405054:	48 8b b5 18 fd ff ff 	mov    -0x2e8(%rbp),%rsi
  40505b:	48 8b b6 d8 00 00 00 	mov    0xd8(%rsi),%rsi
  405062:	48 8b bd 18 fd ff ff 	mov    -0x2e8(%rbp),%rdi
  405069:	48 81 c7 28 01 00 00 	add    $0x128,%rdi
  405070:	4c 8b 8d 18 fd ff ff 	mov    -0x2e8(%rbp),%r9
  405077:	4d 8b 89 e0 00 00 00 	mov    0xe0(%r9),%r9
  40507e:	4c 8b 95 18 fd ff ff 	mov    -0x2e8(%rbp),%r10
  405085:	49 81 c2 e8 00 00 00 	add    $0xe8,%r10
  40508c:	4c 8b 9d 28 fd ff ff 	mov    -0x2d8(%rbp),%r11
  405093:	49 83 c3 38          	add    $0x38,%r11
  405097:	48 89 b5 f0 fc ff ff 	mov    %rsi,-0x310(%rbp)
  40509e:	4c 89 ce             	mov    %r9,%rsi
  4050a1:	48 89 8d e8 fc ff ff 	mov    %rcx,-0x318(%rbp)
  4050a8:	4c 89 d1             	mov    %r10,%rcx
  4050ab:	4d 89 d9             	mov    %r11,%r9
  4050ae:	48 c7 04 24 30 00 00 	movq   $0x30,(%rsp)
  4050b5:	00 
  4050b6:	4c 8b 95 f0 fc ff ff 	mov    -0x310(%rbp),%r10
  4050bd:	41 ff d2             	callq  *%r10
  4050c0:	89 85 bc fe ff ff    	mov    %eax,-0x144(%rbp)
  4050c6:	83 bd bc fe ff ff 00 	cmpl   $0x0,-0x144(%rbp)
  4050cd:	74 15                	je     4050e4 <mbedtls_ssl_derive_keys+0x2e4>
  4050cf:	eb 00                	jmp    4050d1 <mbedtls_ssl_derive_keys+0x2d1>
  4050d1:	eb 00                	jmp    4050d3 <mbedtls_ssl_derive_keys+0x2d3>
  4050d3:	8b 85 bc fe ff ff    	mov    -0x144(%rbp),%eax
  4050d9:	89 85 cc fe ff ff    	mov    %eax,-0x134(%rbp)
  4050df:	e9 c1 0d 00 00       	jmpq   405ea5 <mbedtls_ssl_derive_keys+0x10a5>
  4050e4:	31 f6                	xor    %esi,%esi
  4050e6:	48 8b 85 18 fd ff ff 	mov    -0x2e8(%rbp),%rax
  4050ed:	48 05 28 01 00 00    	add    $0x128,%rax
  4050f3:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
  4050fa:	48 c7 85 30 ff ff ff 	movq   $0x30,-0xd0(%rbp)
  405101:	30 00 00 00 
  405105:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  40510c:	00 
  40510d:	48 8b bd 38 ff ff ff 	mov    -0xc8(%rbp),%rdi
  405114:	48 8b 95 30 ff ff ff 	mov    -0xd0(%rbp),%rdx
  40511b:	ff d0                	callq  *%rax
  40511d:	48 89 85 e0 fc ff ff 	mov    %rax,-0x320(%rbp)
  405124:	eb 06                	jmp    40512c <mbedtls_ssl_derive_keys+0x32c>
  405126:	eb 00                	jmp    405128 <mbedtls_ssl_derive_keys+0x328>
  405128:	eb 00                	jmp    40512a <mbedtls_ssl_derive_keys+0x32a>
  40512a:	eb 00                	jmp    40512c <mbedtls_ssl_derive_keys+0x32c>
  40512c:	31 f6                	xor    %esi,%esi
  40512e:	48 8d 85 70 fe ff ff 	lea    -0x190(%rbp),%rax
  405135:	b9 40 00 00 00       	mov    $0x40,%ecx
  40513a:	89 ca                	mov    %ecx,%edx
  40513c:	48 8b bd 18 fd ff ff 	mov    -0x2e8(%rbp),%rdi
  405143:	48 81 c7 e8 00 00 00 	add    $0xe8,%rdi
  40514a:	48 89 bd d8 fc ff ff 	mov    %rdi,-0x328(%rbp)
  405151:	48 89 c7             	mov    %rax,%rdi
  405154:	4c 8b 85 d8 fc ff ff 	mov    -0x328(%rbp),%r8
  40515b:	89 b5 d4 fc ff ff    	mov    %esi,-0x32c(%rbp)
  405161:	4c 89 c6             	mov    %r8,%rsi
  405164:	48 89 85 c8 fc ff ff 	mov    %rax,-0x338(%rbp)
  40516b:	e8 00 c0 ff ff       	callq  401170 <memcpy@plt>
  405170:	48 8b 85 18 fd ff ff 	mov    -0x2e8(%rbp),%rax
  405177:	48 8b 95 90 fe ff ff 	mov    -0x170(%rbp),%rdx
  40517e:	48 89 90 e8 00 00 00 	mov    %rdx,0xe8(%rax)
  405185:	48 8b 95 98 fe ff ff 	mov    -0x168(%rbp),%rdx
  40518c:	48 89 90 f0 00 00 00 	mov    %rdx,0xf0(%rax)
  405193:	48 8b 95 a0 fe ff ff 	mov    -0x160(%rbp),%rdx
  40519a:	48 89 90 f8 00 00 00 	mov    %rdx,0xf8(%rax)
  4051a1:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
  4051a8:	48 89 90 00 01 00 00 	mov    %rdx,0x100(%rax)
  4051af:	48 8b 85 18 fd ff ff 	mov    -0x2e8(%rbp),%rax
  4051b6:	48 8b 95 70 fe ff ff 	mov    -0x190(%rbp),%rdx
  4051bd:	48 89 90 08 01 00 00 	mov    %rdx,0x108(%rax)
  4051c4:	48 8b 95 78 fe ff ff 	mov    -0x188(%rbp),%rdx
  4051cb:	48 89 90 10 01 00 00 	mov    %rdx,0x110(%rax)
  4051d2:	48 8b 95 80 fe ff ff 	mov    -0x180(%rbp),%rdx
  4051d9:	48 89 90 18 01 00 00 	mov    %rdx,0x118(%rax)
  4051e0:	48 8b 95 88 fe ff ff 	mov    -0x178(%rbp),%rdx
  4051e7:	48 89 90 20 01 00 00 	mov    %rdx,0x120(%rax)
  4051ee:	48 8b 85 c8 fc ff ff 	mov    -0x338(%rbp),%rax
  4051f5:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  4051fc:	48 c7 85 40 ff ff ff 	movq   $0x40,-0xc0(%rbp)
  405203:	40 00 00 00 
  405207:	48 8b 14 25 70 e3 44 	mov    0x44e370,%rdx
  40520e:	00 
  40520f:	48 8b bd 48 ff ff ff 	mov    -0xb8(%rbp),%rdi
  405216:	48 8b b5 40 ff ff ff 	mov    -0xc0(%rbp),%rsi
  40521d:	8b 8d d4 fc ff ff    	mov    -0x32c(%rbp),%ecx
  405223:	48 89 b5 c0 fc ff ff 	mov    %rsi,-0x340(%rbp)
  40522a:	89 ce                	mov    %ecx,%esi
  40522c:	4c 8b 85 c0 fc ff ff 	mov    -0x340(%rbp),%r8
  405233:	48 89 95 b8 fc ff ff 	mov    %rdx,-0x348(%rbp)
  40523a:	4c 89 c2             	mov    %r8,%rdx
  40523d:	4c 8b 8d b8 fc ff ff 	mov    -0x348(%rbp),%r9
  405244:	41 ff d1             	callq  *%r9
  405247:	b9 30 00 00 00       	mov    $0x30,%ecx
  40524c:	89 ce                	mov    %ecx,%esi
  40524e:	b9 40 00 00 00       	mov    $0x40,%ecx
  405253:	41 89 c8             	mov    %ecx,%r8d
  405256:	b9 00 01 00 00       	mov    $0x100,%ecx
  40525b:	89 ca                	mov    %ecx,%edx
  40525d:	48 bf 50 73 44 00 00 	movabs $0x447350,%rdi
  405264:	00 00 00 
  405267:	4c 8d 8d 70 fd ff ff 	lea    -0x290(%rbp),%r9
  40526e:	4c 8b 95 18 fd ff ff 	mov    -0x2e8(%rbp),%r10
  405275:	4d 8b 92 d8 00 00 00 	mov    0xd8(%r10),%r10
  40527c:	4c 8b 9d 28 fd ff ff 	mov    -0x2d8(%rbp),%r11
  405283:	49 83 c3 38          	add    $0x38,%r11
  405287:	48 8b 9d 18 fd ff ff 	mov    -0x2e8(%rbp),%rbx
  40528e:	48 81 c3 e8 00 00 00 	add    $0xe8,%rbx
  405295:	48 89 bd b0 fc ff ff 	mov    %rdi,-0x350(%rbp)
  40529c:	4c 89 df             	mov    %r11,%rdi
  40529f:	4c 8b 9d b0 fc ff ff 	mov    -0x350(%rbp),%r11
  4052a6:	48 89 95 a8 fc ff ff 	mov    %rdx,-0x358(%rbp)
  4052ad:	4c 89 da             	mov    %r11,%rdx
  4052b0:	48 89 d9             	mov    %rbx,%rcx
  4052b3:	48 c7 04 24 00 01 00 	movq   $0x100,(%rsp)
  4052ba:	00 
  4052bb:	48 89 85 a0 fc ff ff 	mov    %rax,-0x360(%rbp)
  4052c2:	41 ff d2             	callq  *%r10
  4052c5:	89 85 bc fe ff ff    	mov    %eax,-0x144(%rbp)
  4052cb:	83 bd bc fe ff ff 00 	cmpl   $0x0,-0x144(%rbp)
  4052d2:	74 15                	je     4052e9 <mbedtls_ssl_derive_keys+0x4e9>
  4052d4:	eb 00                	jmp    4052d6 <mbedtls_ssl_derive_keys+0x4d6>
  4052d6:	eb 00                	jmp    4052d8 <mbedtls_ssl_derive_keys+0x4d8>
  4052d8:	8b 85 bc fe ff ff    	mov    -0x144(%rbp),%eax
  4052de:	89 85 cc fe ff ff    	mov    %eax,-0x134(%rbp)
  4052e4:	e9 bc 0b 00 00       	jmpq   405ea5 <mbedtls_ssl_derive_keys+0x10a5>
  4052e9:	eb 00                	jmp    4052eb <mbedtls_ssl_derive_keys+0x4eb>
  4052eb:	eb 00                	jmp    4052ed <mbedtls_ssl_derive_keys+0x4ed>
  4052ed:	eb 00                	jmp    4052ef <mbedtls_ssl_derive_keys+0x4ef>
  4052ef:	eb 00                	jmp    4052f1 <mbedtls_ssl_derive_keys+0x4f1>
  4052f1:	eb 00                	jmp    4052f3 <mbedtls_ssl_derive_keys+0x4f3>
  4052f3:	eb 00                	jmp    4052f5 <mbedtls_ssl_derive_keys+0x4f5>
  4052f5:	eb 00                	jmp    4052f7 <mbedtls_ssl_derive_keys+0x4f7>
  4052f7:	eb 00                	jmp    4052f9 <mbedtls_ssl_derive_keys+0x4f9>
  4052f9:	31 f6                	xor    %esi,%esi
  4052fb:	48 8b 85 18 fd ff ff 	mov    -0x2e8(%rbp),%rax
  405302:	48 05 e8 00 00 00    	add    $0xe8,%rax
  405308:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
  40530f:	48 c7 85 50 ff ff ff 	movq   $0x40,-0xb0(%rbp)
  405316:	40 00 00 00 
  40531a:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  405321:	00 
  405322:	48 8b bd 58 ff ff ff 	mov    -0xa8(%rbp),%rdi
  405329:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
  405330:	ff d0                	callq  *%rax
  405332:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
  405339:	8b 72 08             	mov    0x8(%rdx),%esi
  40533c:	c1 ee 03             	shr    $0x3,%esi
  40533f:	48 8b 95 20 fd ff ff 	mov    -0x2e0(%rbp),%rdx
  405346:	89 72 08             	mov    %esi,0x8(%rdx)
  405349:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
  405350:	83 7a 04 06          	cmpl   $0x6,0x4(%rdx)
  405354:	48 89 85 98 fc ff ff 	mov    %rax,-0x368(%rbp)
  40535b:	74 1e                	je     40537b <mbedtls_ssl_derive_keys+0x57b>
  40535d:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
  405364:	83 78 04 08          	cmpl   $0x8,0x4(%rax)
  405368:	74 11                	je     40537b <mbedtls_ssl_derive_keys+0x57b>
  40536a:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
  405371:	83 78 04 0a          	cmpl   $0xa,0x4(%rax)
  405375:	0f 85 bc 00 00 00    	jne    405437 <mbedtls_ssl_derive_keys+0x637>
  40537b:	48 8b 85 20 fd ff ff 	mov    -0x2e0(%rbp),%rax
  405382:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
  405389:	00 
  40538a:	48 c7 85 48 fd ff ff 	movq   $0x0,-0x2b8(%rbp)
  405391:	00 00 00 00 
  405395:	48 8b 85 20 fd ff ff 	mov    -0x2e0(%rbp),%rax
  40539c:	48 c7 40 18 0c 00 00 	movq   $0xc,0x18(%rax)
  4053a3:	00 
  4053a4:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
  4053ab:	83 78 04 0a          	cmpl   $0xa,0x4(%rax)
  4053af:	75 11                	jne    4053c2 <mbedtls_ssl_derive_keys+0x5c2>
  4053b1:	48 8b 85 20 fd ff ff 	mov    -0x2e0(%rbp),%rax
  4053b8:	48 c7 40 20 0c 00 00 	movq   $0xc,0x20(%rax)
  4053bf:	00 
  4053c0:	eb 0f                	jmp    4053d1 <mbedtls_ssl_derive_keys+0x5d1>
  4053c2:	48 8b 85 20 fd ff ff 	mov    -0x2e0(%rbp),%rax
  4053c9:	48 c7 40 20 04 00 00 	movq   $0x4,0x20(%rax)
  4053d0:	00 
  4053d1:	48 8b 85 20 fd ff ff 	mov    -0x2e0(%rbp),%rax
  4053d8:	48 8b 00             	mov    (%rax),%rax
  4053db:	0f b6 48 2c          	movzbl 0x2c(%rax),%ecx
  4053df:	83 e1 02             	and    $0x2,%ecx
  4053e2:	83 f9 00             	cmp    $0x0,%ecx
  4053e5:	b9 08 00 00 00       	mov    $0x8,%ecx
  4053ea:	ba 10 00 00 00       	mov    $0x10,%edx
  4053ef:	0f 45 d1             	cmovne %ecx,%edx
  4053f2:	48 63 c2             	movslq %edx,%rax
  4053f5:	48 89 85 10 fd ff ff 	mov    %rax,-0x2f0(%rbp)
  4053fc:	48 8b 85 20 fd ff ff 	mov    -0x2e0(%rbp),%rax
  405403:	48 8b 40 18          	mov    0x18(%rax),%rax
  405407:	48 8b b5 20 fd ff ff 	mov    -0x2e0(%rbp),%rsi
  40540e:	48 2b 46 20          	sub    0x20(%rsi),%rax
  405412:	48 89 85 08 fd ff ff 	mov    %rax,-0x2f8(%rbp)
  405419:	48 8b 85 08 fd ff ff 	mov    -0x2f8(%rbp),%rax
  405420:	48 03 85 10 fd ff ff 	add    -0x2f0(%rbp),%rax
  405427:	48 8b b5 20 fd ff ff 	mov    -0x2e0(%rbp),%rsi
  40542e:	48 89 46 10          	mov    %rax,0x10(%rsi)
  405432:	e9 04 03 00 00       	jmpq   40573b <mbedtls_ssl_derive_keys+0x93b>
  405437:	48 8b 85 20 fd ff ff 	mov    -0x2e0(%rbp),%rax
  40543e:	48 83 c0 50          	add    $0x50,%rax
  405442:	48 8b 8d 30 fd ff ff 	mov    -0x2d0(%rbp),%rcx
  405449:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
  405450:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
  405457:	c7 85 64 ff ff ff 01 	movl   $0x1,-0x9c(%rbp)
  40545e:	00 00 00 
  405461:	48 83 bd 68 ff ff ff 	cmpq   $0x0,-0x98(%rbp)
  405468:	00 
  405469:	74 0a                	je     405475 <mbedtls_ssl_derive_keys+0x675>
  40546b:	48 83 bd 70 ff ff ff 	cmpq   $0x0,-0x90(%rbp)
  405472:	00 
  405473:	75 0f                	jne    405484 <mbedtls_ssl_derive_keys+0x684>
  405475:	c7 85 78 ff ff ff 00 	movl   $0xffffaf00,-0x88(%rbp)
  40547c:	af ff ff 
  40547f:	e9 a1 00 00 00       	jmpq   405525 <mbedtls_ssl_derive_keys+0x725>
  405484:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  40548b:	ff 50 38             	callq  *0x38(%rax)
  40548e:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx
  405495:	48 89 41 08          	mov    %rax,0x8(%rcx)
  405499:	48 83 f8 00          	cmp    $0x0,%rax
  40549d:	75 0c                	jne    4054ab <mbedtls_ssl_derive_keys+0x6ab>
  40549f:	c7 85 78 ff ff ff 80 	movl   $0xffffae80,-0x88(%rbp)
  4054a6:	ae ff ff 
  4054a9:	eb 7a                	jmp    405525 <mbedtls_ssl_derive_keys+0x725>
  4054ab:	83 bd 64 ff ff ff 00 	cmpl   $0x0,-0x9c(%rbp)
  4054b2:	74 56                	je     40550a <mbedtls_ssl_derive_keys+0x70a>
  4054b4:	b8 02 00 00 00       	mov    $0x2,%eax
  4054b9:	89 c7                	mov    %eax,%edi
  4054bb:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
  4054c2:	48 63 71 14          	movslq 0x14(%rcx),%rsi
  4054c6:	e8 1f 13 04 00       	callq  4467ea <aes_calloc>
  4054cb:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx
  4054d2:	48 89 41 10          	mov    %rax,0x10(%rcx)
  4054d6:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  4054dd:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
  4054e2:	75 24                	jne    405508 <mbedtls_ssl_derive_keys+0x708>
  4054e4:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  4054eb:	48 8b 40 40          	mov    0x40(%rax),%rax
  4054ef:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx
  4054f6:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  4054fa:	ff d0                	callq  *%rax
  4054fc:	c7 85 78 ff ff ff 80 	movl   $0xffffae80,-0x88(%rbp)
  405503:	ae ff ff 
  405506:	eb 1d                	jmp    405525 <mbedtls_ssl_derive_keys+0x725>
  405508:	eb 00                	jmp    40550a <mbedtls_ssl_derive_keys+0x70a>
  40550a:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  405511:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx
  405518:	48 89 01             	mov    %rax,(%rcx)
  40551b:	c7 85 78 ff ff ff 00 	movl   $0x0,-0x88(%rbp)
  405522:	00 00 00 
  405525:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
  40552b:	89 85 bc fe ff ff    	mov    %eax,-0x144(%rbp)
  405531:	83 f8 00             	cmp    $0x0,%eax
  405534:	0f 85 c6 00 00 00    	jne    405600 <mbedtls_ssl_derive_keys+0x800>
  40553a:	48 8b 85 20 fd ff ff 	mov    -0x2e0(%rbp),%rax
  405541:	48 83 c0 68          	add    $0x68,%rax
  405545:	48 8b 8d 30 fd ff ff 	mov    -0x2d0(%rbp),%rcx
  40554c:	48 89 45 88          	mov    %rax,-0x78(%rbp)
  405550:	48 89 4d 80          	mov    %rcx,-0x80(%rbp)
  405554:	c7 85 7c ff ff ff 01 	movl   $0x1,-0x84(%rbp)
  40555b:	00 00 00 
  40555e:	48 83 7d 80 00       	cmpq   $0x0,-0x80(%rbp)
  405563:	74 07                	je     40556c <mbedtls_ssl_derive_keys+0x76c>
  405565:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
  40556a:	75 09                	jne    405575 <mbedtls_ssl_derive_keys+0x775>
  40556c:	c7 45 94 00 af ff ff 	movl   $0xffffaf00,-0x6c(%rbp)
  405573:	eb 7d                	jmp    4055f2 <mbedtls_ssl_derive_keys+0x7f2>
  405575:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  405579:	ff 50 38             	callq  *0x38(%rax)
  40557c:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
  405580:	48 89 41 08          	mov    %rax,0x8(%rcx)
  405584:	48 83 f8 00          	cmp    $0x0,%rax
  405588:	75 09                	jne    405593 <mbedtls_ssl_derive_keys+0x793>
  40558a:	c7 45 94 80 ae ff ff 	movl   $0xffffae80,-0x6c(%rbp)
  405591:	eb 5f                	jmp    4055f2 <mbedtls_ssl_derive_keys+0x7f2>
  405593:	83 bd 7c ff ff ff 00 	cmpl   $0x0,-0x84(%rbp)
  40559a:	74 44                	je     4055e0 <mbedtls_ssl_derive_keys+0x7e0>
  40559c:	b8 02 00 00 00       	mov    $0x2,%eax
  4055a1:	89 c7                	mov    %eax,%edi
  4055a3:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
  4055a7:	48 63 71 14          	movslq 0x14(%rcx),%rsi
  4055ab:	e8 3a 12 04 00       	callq  4467ea <aes_calloc>
  4055b0:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
  4055b4:	48 89 41 10          	mov    %rax,0x10(%rcx)
  4055b8:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  4055bc:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
  4055c1:	75 1b                	jne    4055de <mbedtls_ssl_derive_keys+0x7de>
  4055c3:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  4055c7:	48 8b 40 40          	mov    0x40(%rax),%rax
  4055cb:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
  4055cf:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  4055d3:	ff d0                	callq  *%rax
  4055d5:	c7 45 94 80 ae ff ff 	movl   $0xffffae80,-0x6c(%rbp)
  4055dc:	eb 14                	jmp    4055f2 <mbedtls_ssl_derive_keys+0x7f2>
  4055de:	eb 00                	jmp    4055e0 <mbedtls_ssl_derive_keys+0x7e0>
  4055e0:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  4055e4:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
  4055e8:	48 89 01             	mov    %rax,(%rcx)
  4055eb:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%rbp)
  4055f2:	8b 45 94             	mov    -0x6c(%rbp),%eax
  4055f5:	89 85 bc fe ff ff    	mov    %eax,-0x144(%rbp)
  4055fb:	83 f8 00             	cmp    $0x0,%eax
  4055fe:	74 15                	je     405615 <mbedtls_ssl_derive_keys+0x815>
  405600:	eb 00                	jmp    405602 <mbedtls_ssl_derive_keys+0x802>
  405602:	eb 00                	jmp    405604 <mbedtls_ssl_derive_keys+0x804>
  405604:	8b 85 bc fe ff ff    	mov    -0x144(%rbp),%eax
  40560a:	89 85 cc fe ff ff    	mov    %eax,-0x134(%rbp)
  405610:	e9 90 08 00 00       	jmpq   405ea5 <mbedtls_ssl_derive_keys+0x10a5>
  405615:	48 8b 85 30 fd ff ff 	mov    -0x2d0(%rbp),%rax
  40561c:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  405620:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
  405625:	75 06                	jne    40562d <mbedtls_ssl_derive_keys+0x82d>
  405627:	c6 45 a7 00          	movb   $0x0,-0x59(%rbp)
  40562b:	eb 0c                	jmp    405639 <mbedtls_ssl_derive_keys+0x839>
  40562d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  405631:	8b 48 10             	mov    0x10(%rax),%ecx
  405634:	88 ca                	mov    %cl,%dl
  405636:	88 55 a7             	mov    %dl,-0x59(%rbp)
  405639:	8a 45 a7             	mov    -0x59(%rbp),%al
  40563c:	0f b6 c8             	movzbl %al,%ecx
  40563f:	89 ca                	mov    %ecx,%edx
  405641:	48 89 95 48 fd ff ff 	mov    %rdx,-0x2b8(%rbp)
  405648:	48 8b 95 48 fd ff ff 	mov    -0x2b8(%rbp),%rdx
  40564f:	48 8b b5 20 fd ff ff 	mov    -0x2e0(%rbp),%rsi
  405656:	48 89 56 28          	mov    %rdx,0x28(%rsi)
  40565a:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
  405661:	8b 4a 18             	mov    0x18(%rdx),%ecx
  405664:	89 ca                	mov    %ecx,%edx
  405666:	48 8b b5 20 fd ff ff 	mov    -0x2e0(%rbp),%rsi
  40566d:	48 89 56 18          	mov    %rdx,0x18(%rsi)
  405671:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
  405678:	83 7a 04 07          	cmpl   $0x7,0x4(%rdx)
  40567c:	75 1b                	jne    405699 <mbedtls_ssl_derive_keys+0x899>
  40567e:	48 8b 85 20 fd ff ff 	mov    -0x2e0(%rbp),%rax
  405685:	48 8b 40 28          	mov    0x28(%rax),%rax
  405689:	48 8b 8d 20 fd ff ff 	mov    -0x2e0(%rbp),%rcx
  405690:	48 89 41 10          	mov    %rax,0x10(%rcx)
  405694:	e9 a0 00 00 00       	jmpq   405739 <mbedtls_ssl_derive_keys+0x939>
  405699:	48 8b 85 20 fd ff ff 	mov    -0x2e0(%rbp),%rax
  4056a0:	48 8b 40 28          	mov    0x28(%rax),%rax
  4056a4:	48 8b 8d 38 fd ff ff 	mov    -0x2c8(%rbp),%rcx
  4056ab:	8b 51 20             	mov    0x20(%rcx),%edx
  4056ae:	89 d1                	mov    %edx,%ecx
  4056b0:	48 01 c8             	add    %rcx,%rax
  4056b3:	48 8b 8d 20 fd ff ff 	mov    -0x2e0(%rbp),%rcx
  4056ba:	48 8b 49 28          	mov    0x28(%rcx),%rcx
  4056be:	48 8b b5 38 fd ff ff 	mov    -0x2c8(%rbp),%rsi
  4056c5:	8b 56 20             	mov    0x20(%rsi),%edx
  4056c8:	89 d6                	mov    %edx,%esi
  4056ca:	48 89 85 90 fc ff ff 	mov    %rax,-0x370(%rbp)
  4056d1:	48 89 c8             	mov    %rcx,%rax
  4056d4:	31 d2                	xor    %edx,%edx
  4056d6:	48 f7 f6             	div    %rsi
  4056d9:	48 8b 8d 90 fc ff ff 	mov    -0x370(%rbp),%rcx
  4056e0:	48 29 d1             	sub    %rdx,%rcx
  4056e3:	48 8b 95 20 fd ff ff 	mov    -0x2e0(%rbp),%rdx
  4056ea:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
  4056ee:	48 8b 8d c0 fe ff ff 	mov    -0x140(%rbp),%rcx
  4056f5:	83 79 10 02          	cmpl   $0x2,0x10(%rcx)
  4056f9:	74 0d                	je     405708 <mbedtls_ssl_derive_keys+0x908>
  4056fb:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  405702:	83 78 10 03          	cmpl   $0x3,0x10(%rax)
  405706:	75 1c                	jne    405724 <mbedtls_ssl_derive_keys+0x924>
  405708:	48 8b 85 20 fd ff ff 	mov    -0x2e0(%rbp),%rax
  40570f:	48 8b 40 18          	mov    0x18(%rax),%rax
  405713:	48 8b 8d 20 fd ff ff 	mov    -0x2e0(%rbp),%rcx
  40571a:	48 03 41 10          	add    0x10(%rcx),%rax
  40571e:	48 89 41 10          	mov    %rax,0x10(%rcx)
  405722:	eb 13                	jmp    405737 <mbedtls_ssl_derive_keys+0x937>
  405724:	eb 00                	jmp    405726 <mbedtls_ssl_derive_keys+0x926>
  405726:	eb 00                	jmp    405728 <mbedtls_ssl_derive_keys+0x928>
  405728:	c7 85 cc fe ff ff 00 	movl   $0xffff9400,-0x134(%rbp)
  40572f:	94 ff ff 
  405732:	e9 6e 07 00 00       	jmpq   405ea5 <mbedtls_ssl_derive_keys+0x10a5>
  405737:	eb 00                	jmp    405739 <mbedtls_ssl_derive_keys+0x939>
  405739:	eb 00                	jmp    40573b <mbedtls_ssl_derive_keys+0x93b>
  40573b:	eb 00                	jmp    40573d <mbedtls_ssl_derive_keys+0x93d>
  40573d:	eb 00                	jmp    40573f <mbedtls_ssl_derive_keys+0x93f>
  40573f:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  405746:	48 8b 00             	mov    (%rax),%rax
  405749:	8a 88 98 00 00 00    	mov    0x98(%rax),%cl
  40574f:	80 e1 01             	and    $0x1,%cl
  405752:	0f b6 d1             	movzbl %cl,%edx
  405755:	83 fa 00             	cmp    $0x0,%edx
  405758:	0f 85 11 01 00 00    	jne    40586f <mbedtls_ssl_derive_keys+0xa6f>
  40575e:	48 8d 85 70 fd ff ff 	lea    -0x290(%rbp),%rax
  405765:	48 8b 8d 48 fd ff ff 	mov    -0x2b8(%rbp),%rcx
  40576c:	48 c1 e1 01          	shl    $0x1,%rcx
  405770:	48 89 c2             	mov    %rax,%rdx
  405773:	48 01 ca             	add    %rcx,%rdx
  405776:	48 89 95 68 fd ff ff 	mov    %rdx,-0x298(%rbp)
  40577d:	48 8b 8d 48 fd ff ff 	mov    -0x2b8(%rbp),%rcx
  405784:	48 c1 e1 01          	shl    $0x1,%rcx
  405788:	48 89 c2             	mov    %rax,%rdx
  40578b:	48 01 ca             	add    %rcx,%rdx
  40578e:	48 8b 8d 20 fd ff ff 	mov    -0x2e0(%rbp),%rcx
  405795:	8b 71 08             	mov    0x8(%rcx),%esi
  405798:	89 f1                	mov    %esi,%ecx
  40579a:	48 01 ca             	add    %rcx,%rdx
  40579d:	48 89 95 60 fd ff ff 	mov    %rdx,-0x2a0(%rbp)
  4057a4:	48 89 85 58 fd ff ff 	mov    %rax,-0x2a8(%rbp)
  4057ab:	48 03 85 48 fd ff ff 	add    -0x2b8(%rbp),%rax
  4057b2:	48 89 85 50 fd ff ff 	mov    %rax,-0x2b0(%rbp)
  4057b9:	48 8b 85 20 fd ff ff 	mov    -0x2e0(%rbp),%rax
  4057c0:	48 83 78 20 00       	cmpq   $0x0,0x20(%rax)
  4057c5:	74 14                	je     4057db <mbedtls_ssl_derive_keys+0x9db>
  4057c7:	48 8b 85 20 fd ff ff 	mov    -0x2e0(%rbp),%rax
  4057ce:	48 8b 40 20          	mov    0x20(%rax),%rax
  4057d2:	48 89 85 88 fc ff ff 	mov    %rax,-0x378(%rbp)
  4057d9:	eb 12                	jmp    4057ed <mbedtls_ssl_derive_keys+0x9ed>
  4057db:	48 8b 85 20 fd ff ff 	mov    -0x2e0(%rbp),%rax
  4057e2:	48 8b 40 18          	mov    0x18(%rax),%rax
  4057e6:	48 89 85 88 fc ff ff 	mov    %rax,-0x378(%rbp)
  4057ed:	48 8b 85 88 fc ff ff 	mov    -0x378(%rbp),%rax
  4057f4:	48 89 85 40 fd ff ff 	mov    %rax,-0x2c0(%rbp)
  4057fb:	48 8b 85 20 fd ff ff 	mov    -0x2e0(%rbp),%rax
  405802:	48 83 c0 30          	add    $0x30,%rax
  405806:	48 8b 8d 60 fd ff ff 	mov    -0x2a0(%rbp),%rcx
  40580d:	48 8b 95 20 fd ff ff 	mov    -0x2e0(%rbp),%rdx
  405814:	8b 72 08             	mov    0x8(%rdx),%esi
  405817:	89 f2                	mov    %esi,%edx
  405819:	48 01 d1             	add    %rdx,%rcx
  40581c:	48 8b 95 40 fd ff ff 	mov    -0x2c0(%rbp),%rdx
  405823:	48 89 c7             	mov    %rax,%rdi
  405826:	48 89 ce             	mov    %rcx,%rsi
  405829:	e8 42 b9 ff ff       	callq  401170 <memcpy@plt>
  40582e:	48 8b 85 20 fd ff ff 	mov    -0x2e0(%rbp),%rax
  405835:	48 83 c0 40          	add    $0x40,%rax
  405839:	48 8b 8d 60 fd ff ff 	mov    -0x2a0(%rbp),%rcx
  405840:	48 8b 95 20 fd ff ff 	mov    -0x2e0(%rbp),%rdx
  405847:	44 8b 42 08          	mov    0x8(%rdx),%r8d
  40584b:	44 89 c2             	mov    %r8d,%edx
  40584e:	48 01 d1             	add    %rdx,%rcx
  405851:	48 03 8d 40 fd ff ff 	add    -0x2c0(%rbp),%rcx
  405858:	48 8b 95 40 fd ff ff 	mov    -0x2c0(%rbp),%rdx
  40585f:	48 89 c7             	mov    %rax,%rdi
  405862:	48 89 ce             	mov    %rcx,%rsi
  405865:	e8 06 b9 ff ff       	callq  401170 <memcpy@plt>
  40586a:	e9 45 01 00 00       	jmpq   4059b4 <mbedtls_ssl_derive_keys+0xbb4>
  40586f:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  405876:	48 8b 00             	mov    (%rax),%rax
  405879:	8a 88 98 00 00 00    	mov    0x98(%rax),%cl
  40587f:	80 e1 01             	and    $0x1,%cl
  405882:	0f b6 d1             	movzbl %cl,%edx
  405885:	83 fa 01             	cmp    $0x1,%edx
  405888:	0f 85 11 01 00 00    	jne    40599f <mbedtls_ssl_derive_keys+0xb9f>
  40588e:	48 8d 85 70 fd ff ff 	lea    -0x290(%rbp),%rax
  405895:	48 8b 8d 48 fd ff ff 	mov    -0x2b8(%rbp),%rcx
  40589c:	48 c1 e1 01          	shl    $0x1,%rcx
  4058a0:	48 89 c2             	mov    %rax,%rdx
  4058a3:	48 01 ca             	add    %rcx,%rdx
  4058a6:	48 8b 8d 20 fd ff ff 	mov    -0x2e0(%rbp),%rcx
  4058ad:	8b 71 08             	mov    0x8(%rcx),%esi
  4058b0:	89 f1                	mov    %esi,%ecx
  4058b2:	48 01 ca             	add    %rcx,%rdx
  4058b5:	48 89 95 68 fd ff ff 	mov    %rdx,-0x298(%rbp)
  4058bc:	48 8b 8d 48 fd ff ff 	mov    -0x2b8(%rbp),%rcx
  4058c3:	48 c1 e1 01          	shl    $0x1,%rcx
  4058c7:	48 89 c2             	mov    %rax,%rdx
  4058ca:	48 01 ca             	add    %rcx,%rdx
  4058cd:	48 89 95 60 fd ff ff 	mov    %rdx,-0x2a0(%rbp)
  4058d4:	48 89 c1             	mov    %rax,%rcx
  4058d7:	48 03 8d 48 fd ff ff 	add    -0x2b8(%rbp),%rcx
  4058de:	48 89 8d 58 fd ff ff 	mov    %rcx,-0x2a8(%rbp)
  4058e5:	48 89 85 50 fd ff ff 	mov    %rax,-0x2b0(%rbp)
  4058ec:	48 8b 85 20 fd ff ff 	mov    -0x2e0(%rbp),%rax
  4058f3:	48 83 78 20 00       	cmpq   $0x0,0x20(%rax)
  4058f8:	74 14                	je     40590e <mbedtls_ssl_derive_keys+0xb0e>
  4058fa:	48 8b 85 20 fd ff ff 	mov    -0x2e0(%rbp),%rax
  405901:	48 8b 40 20          	mov    0x20(%rax),%rax
  405905:	48 89 85 80 fc ff ff 	mov    %rax,-0x380(%rbp)
  40590c:	eb 12                	jmp    405920 <mbedtls_ssl_derive_keys+0xb20>
  40590e:	48 8b 85 20 fd ff ff 	mov    -0x2e0(%rbp),%rax
  405915:	48 8b 40 18          	mov    0x18(%rax),%rax
  405919:	48 89 85 80 fc ff ff 	mov    %rax,-0x380(%rbp)
  405920:	48 8b 85 80 fc ff ff 	mov    -0x380(%rbp),%rax
  405927:	48 89 85 40 fd ff ff 	mov    %rax,-0x2c0(%rbp)
  40592e:	48 8b 85 20 fd ff ff 	mov    -0x2e0(%rbp),%rax
  405935:	48 83 c0 40          	add    $0x40,%rax
  405939:	48 8b 8d 68 fd ff ff 	mov    -0x298(%rbp),%rcx
  405940:	48 8b 95 20 fd ff ff 	mov    -0x2e0(%rbp),%rdx
  405947:	8b 72 08             	mov    0x8(%rdx),%esi
  40594a:	89 f2                	mov    %esi,%edx
  40594c:	48 01 d1             	add    %rdx,%rcx
  40594f:	48 8b 95 40 fd ff ff 	mov    -0x2c0(%rbp),%rdx
  405956:	48 89 c7             	mov    %rax,%rdi
  405959:	48 89 ce             	mov    %rcx,%rsi
  40595c:	e8 0f b8 ff ff       	callq  401170 <memcpy@plt>
  405961:	48 8b 85 20 fd ff ff 	mov    -0x2e0(%rbp),%rax
  405968:	48 83 c0 30          	add    $0x30,%rax
  40596c:	48 8b 8d 68 fd ff ff 	mov    -0x298(%rbp),%rcx
  405973:	48 8b 95 20 fd ff ff 	mov    -0x2e0(%rbp),%rdx
  40597a:	44 8b 42 08          	mov    0x8(%rdx),%r8d
  40597e:	44 89 c2             	mov    %r8d,%edx
  405981:	48 01 d1             	add    %rdx,%rcx
  405984:	48 03 8d 40 fd ff ff 	add    -0x2c0(%rbp),%rcx
  40598b:	48 8b 95 40 fd ff ff 	mov    -0x2c0(%rbp),%rdx
  405992:	48 89 c7             	mov    %rax,%rdi
  405995:	48 89 ce             	mov    %rcx,%rsi
  405998:	e8 d3 b7 ff ff       	callq  401170 <memcpy@plt>
  40599d:	eb 13                	jmp    4059b2 <mbedtls_ssl_derive_keys+0xbb2>
  40599f:	eb 00                	jmp    4059a1 <mbedtls_ssl_derive_keys+0xba1>
  4059a1:	eb 00                	jmp    4059a3 <mbedtls_ssl_derive_keys+0xba3>
  4059a3:	c7 85 cc fe ff ff 00 	movl   $0xffff9400,-0x134(%rbp)
  4059aa:	94 ff ff 
  4059ad:	e9 f3 04 00 00       	jmpq   405ea5 <mbedtls_ssl_derive_keys+0x10a5>
  4059b2:	eb 00                	jmp    4059b4 <mbedtls_ssl_derive_keys+0xbb4>
  4059b4:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  4059bb:	83 78 10 01          	cmpl   $0x1,0x10(%rax)
  4059bf:	7c 68                	jl     405a29 <mbedtls_ssl_derive_keys+0xc29>
  4059c1:	48 83 bd 48 fd ff ff 	cmpq   $0x0,-0x2b8(%rbp)
  4059c8:	00 
  4059c9:	74 5c                	je     405a27 <mbedtls_ssl_derive_keys+0xc27>
  4059cb:	48 8b 85 20 fd ff ff 	mov    -0x2e0(%rbp),%rax
  4059d2:	48 83 c0 50          	add    $0x50,%rax
  4059d6:	48 8b b5 58 fd ff ff 	mov    -0x2a8(%rbp),%rsi
  4059dd:	48 8b 95 48 fd ff ff 	mov    -0x2b8(%rbp),%rdx
  4059e4:	48 89 c7             	mov    %rax,%rdi
  4059e7:	e8 34 58 02 00       	callq  42b220 <mbedtls_md_hmac_starts>
  4059ec:	48 8b 95 20 fd ff ff 	mov    -0x2e0(%rbp),%rdx
  4059f3:	48 83 c2 68          	add    $0x68,%rdx
  4059f7:	48 8b b5 50 fd ff ff 	mov    -0x2b0(%rbp),%rsi
  4059fe:	48 8b bd 48 fd ff ff 	mov    -0x2b8(%rbp),%rdi
  405a05:	48 89 bd 78 fc ff ff 	mov    %rdi,-0x388(%rbp)
  405a0c:	48 89 d7             	mov    %rdx,%rdi
  405a0f:	48 8b 95 78 fc ff ff 	mov    -0x388(%rbp),%rdx
  405a16:	89 85 74 fc ff ff    	mov    %eax,-0x38c(%rbp)
  405a1c:	e8 ff 57 02 00       	callq  42b220 <mbedtls_md_hmac_starts>
  405a21:	89 85 70 fc ff ff    	mov    %eax,-0x390(%rbp)
  405a27:	eb 13                	jmp    405a3c <mbedtls_ssl_derive_keys+0xc3c>
  405a29:	eb 00                	jmp    405a2b <mbedtls_ssl_derive_keys+0xc2b>
  405a2b:	eb 00                	jmp    405a2d <mbedtls_ssl_derive_keys+0xc2d>
  405a2d:	c7 85 cc fe ff ff 00 	movl   $0xffff9400,-0x134(%rbp)
  405a34:	94 ff ff 
  405a37:	e9 69 04 00 00       	jmpq   405ea5 <mbedtls_ssl_derive_keys+0x10a5>
  405a3c:	48 8b 85 20 fd ff ff 	mov    -0x2e0(%rbp),%rax
  405a43:	48 05 80 00 00 00    	add    $0x80,%rax
  405a49:	48 8b 8d 38 fd ff ff 	mov    -0x2c8(%rbp),%rcx
  405a50:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  405a54:	48 89 4d a8          	mov    %rcx,-0x58(%rbp)
  405a58:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
  405a5d:	75 0c                	jne    405a6b <mbedtls_ssl_derive_keys+0xc6b>
  405a5f:	c7 45 b8 00 9f ff ff 	movl   $0xffff9f00,-0x48(%rbp)
  405a66:	e9 b6 00 00 00       	jmpq   405b21 <mbedtls_ssl_derive_keys+0xd21>
  405a6b:	31 f6                	xor    %esi,%esi
  405a6d:	b8 58 00 00 00       	mov    $0x58,%eax
  405a72:	89 c2                	mov    %eax,%edx
  405a74:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  405a78:	48 89 cf             	mov    %rcx,%rdi
  405a7b:	e8 a0 b5 ff ff       	callq  401020 <memset@plt>
  405a80:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
  405a84:	48 8b 49 28          	mov    0x28(%rcx),%rcx
  405a88:	ff 51 28             	callq  *0x28(%rcx)
  405a8b:	31 f6                	xor    %esi,%esi
  405a8d:	89 f1                	mov    %esi,%ecx
  405a8f:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
  405a93:	48 89 42 50          	mov    %rax,0x50(%rdx)
  405a97:	48 39 c1             	cmp    %rax,%rcx
  405a9a:	75 09                	jne    405aa5 <mbedtls_ssl_derive_keys+0xca5>
  405a9c:	c7 45 b8 80 9e ff ff 	movl   $0xffff9e80,-0x48(%rbp)
  405aa3:	eb 7c                	jmp    405b21 <mbedtls_ssl_derive_keys+0xd21>
  405aa5:	31 c0                	xor    %eax,%eax
  405aa7:	89 c1                	mov    %eax,%ecx
  405aa9:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
  405aad:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
  405ab1:	48 89 16             	mov    %rdx,(%rsi)
  405ab4:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
  405ab8:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
  405abc:	c7 45 bc 04 00 00 00 	movl   $0x4,-0x44(%rbp)
  405ac3:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  405ac7:	48 3b 0a             	cmp    (%rdx),%rcx
  405aca:	74 11                	je     405add <mbedtls_ssl_derive_keys+0xcdd>
  405acc:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  405ad0:	48 8b 00             	mov    (%rax),%rax
  405ad3:	b9 02 00 00 00       	mov    $0x2,%ecx
  405ad8:	3b 48 04             	cmp    0x4(%rax),%ecx
  405adb:	74 09                	je     405ae6 <mbedtls_ssl_derive_keys+0xce6>
  405add:	c7 45 cc 00 9f ff ff 	movl   $0xffff9f00,-0x34(%rbp)
  405ae4:	eb 34                	jmp    405b1a <mbedtls_ssl_derive_keys+0xd1a>
  405ae6:	83 7d bc 04          	cmpl   $0x4,-0x44(%rbp)
  405aea:	75 27                	jne    405b13 <mbedtls_ssl_derive_keys+0xd13>
  405aec:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  405af0:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
  405af7:	00 
  405af8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  405afc:	48 b9 60 68 42 00 00 	movabs $0x426860,%rcx
  405b03:	00 00 00 
  405b06:	48 89 48 18          	mov    %rcx,0x18(%rax)
  405b0a:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
  405b11:	eb 07                	jmp    405b1a <mbedtls_ssl_derive_keys+0xd1a>
  405b13:	c7 45 cc 80 9f ff ff 	movl   $0xffff9f80,-0x34(%rbp)
  405b1a:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%rbp)
  405b21:	8b 45 b8             	mov    -0x48(%rbp),%eax
  405b24:	89 85 bc fe ff ff    	mov    %eax,-0x144(%rbp)
  405b2a:	83 f8 00             	cmp    $0x0,%eax
  405b2d:	74 15                	je     405b44 <mbedtls_ssl_derive_keys+0xd44>
  405b2f:	eb 00                	jmp    405b31 <mbedtls_ssl_derive_keys+0xd31>
  405b31:	eb 00                	jmp    405b33 <mbedtls_ssl_derive_keys+0xd33>
  405b33:	8b 85 bc fe ff ff    	mov    -0x144(%rbp),%eax
  405b39:	89 85 cc fe ff ff    	mov    %eax,-0x134(%rbp)
  405b3f:	e9 61 03 00 00       	jmpq   405ea5 <mbedtls_ssl_derive_keys+0x10a5>
  405b44:	48 8b 85 20 fd ff ff 	mov    -0x2e0(%rbp),%rax
  405b4b:	48 05 d8 00 00 00    	add    $0xd8,%rax
  405b51:	48 8b 8d 38 fd ff ff 	mov    -0x2c8(%rbp),%rcx
  405b58:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  405b5c:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  405b60:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  405b65:	75 0c                	jne    405b73 <mbedtls_ssl_derive_keys+0xd73>
  405b67:	c7 45 e0 00 9f ff ff 	movl   $0xffff9f00,-0x20(%rbp)
  405b6e:	e9 b6 00 00 00       	jmpq   405c29 <mbedtls_ssl_derive_keys+0xe29>
  405b73:	31 f6                	xor    %esi,%esi
  405b75:	b8 58 00 00 00       	mov    $0x58,%eax
  405b7a:	89 c2                	mov    %eax,%edx
  405b7c:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  405b80:	48 89 cf             	mov    %rcx,%rdi
  405b83:	e8 98 b4 ff ff       	callq  401020 <memset@plt>
  405b88:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  405b8c:	48 8b 49 28          	mov    0x28(%rcx),%rcx
  405b90:	ff 51 28             	callq  *0x28(%rcx)
  405b93:	31 f6                	xor    %esi,%esi
  405b95:	89 f1                	mov    %esi,%ecx
  405b97:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  405b9b:	48 89 42 50          	mov    %rax,0x50(%rdx)
  405b9f:	48 39 c1             	cmp    %rax,%rcx
  405ba2:	75 09                	jne    405bad <mbedtls_ssl_derive_keys+0xdad>
  405ba4:	c7 45 e0 80 9e ff ff 	movl   $0xffff9e80,-0x20(%rbp)
  405bab:	eb 7c                	jmp    405c29 <mbedtls_ssl_derive_keys+0xe29>
  405bad:	31 c0                	xor    %eax,%eax
  405baf:	89 c1                	mov    %eax,%ecx
  405bb1:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  405bb5:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  405bb9:	48 89 16             	mov    %rdx,(%rsi)
  405bbc:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  405bc0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  405bc4:	c7 45 e4 04 00 00 00 	movl   $0x4,-0x1c(%rbp)
  405bcb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  405bcf:	48 3b 0a             	cmp    (%rdx),%rcx
  405bd2:	74 11                	je     405be5 <mbedtls_ssl_derive_keys+0xde5>
  405bd4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405bd8:	48 8b 00             	mov    (%rax),%rax
  405bdb:	b9 02 00 00 00       	mov    $0x2,%ecx
  405be0:	3b 48 04             	cmp    0x4(%rax),%ecx
  405be3:	74 09                	je     405bee <mbedtls_ssl_derive_keys+0xdee>
  405be5:	c7 45 f4 00 9f ff ff 	movl   $0xffff9f00,-0xc(%rbp)
  405bec:	eb 34                	jmp    405c22 <mbedtls_ssl_derive_keys+0xe22>
  405bee:	83 7d e4 04          	cmpl   $0x4,-0x1c(%rbp)
  405bf2:	75 27                	jne    405c1b <mbedtls_ssl_derive_keys+0xe1b>
  405bf4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405bf8:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
  405bff:	00 
  405c00:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405c04:	48 b9 60 68 42 00 00 	movabs $0x426860,%rcx
  405c0b:	00 00 00 
  405c0e:	48 89 48 18          	mov    %rcx,0x18(%rax)
  405c12:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  405c19:	eb 07                	jmp    405c22 <mbedtls_ssl_derive_keys+0xe22>
  405c1b:	c7 45 f4 80 9f ff ff 	movl   $0xffff9f80,-0xc(%rbp)
  405c22:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
  405c29:	8b 45 e0             	mov    -0x20(%rbp),%eax
  405c2c:	89 85 bc fe ff ff    	mov    %eax,-0x144(%rbp)
  405c32:	83 f8 00             	cmp    $0x0,%eax
  405c35:	74 15                	je     405c4c <mbedtls_ssl_derive_keys+0xe4c>
  405c37:	eb 00                	jmp    405c39 <mbedtls_ssl_derive_keys+0xe39>
  405c39:	eb 00                	jmp    405c3b <mbedtls_ssl_derive_keys+0xe3b>
  405c3b:	8b 85 bc fe ff ff    	mov    -0x144(%rbp),%eax
  405c41:	89 85 cc fe ff ff    	mov    %eax,-0x134(%rbp)
  405c47:	e9 59 02 00 00       	jmpq   405ea5 <mbedtls_ssl_derive_keys+0x10a5>
  405c4c:	48 8b 85 20 fd ff ff 	mov    -0x2e0(%rbp),%rax
  405c53:	48 05 80 00 00 00    	add    $0x80,%rax
  405c59:	48 8b b5 68 fd ff ff 	mov    -0x298(%rbp),%rsi
  405c60:	48 8b 8d 38 fd ff ff 	mov    -0x2c8(%rbp),%rcx
  405c67:	8b 51 08             	mov    0x8(%rcx),%edx
  405c6a:	48 89 c7             	mov    %rax,%rdi
  405c6d:	b9 01 00 00 00       	mov    $0x1,%ecx
  405c72:	e8 49 0c 02 00       	callq  4268c0 <mbedtls_cipher_setkey>
  405c77:	89 85 bc fe ff ff    	mov    %eax,-0x144(%rbp)
  405c7d:	83 f8 00             	cmp    $0x0,%eax
  405c80:	74 15                	je     405c97 <mbedtls_ssl_derive_keys+0xe97>
  405c82:	eb 00                	jmp    405c84 <mbedtls_ssl_derive_keys+0xe84>
  405c84:	eb 00                	jmp    405c86 <mbedtls_ssl_derive_keys+0xe86>
  405c86:	8b 85 bc fe ff ff    	mov    -0x144(%rbp),%eax
  405c8c:	89 85 cc fe ff ff    	mov    %eax,-0x134(%rbp)
  405c92:	e9 0e 02 00 00       	jmpq   405ea5 <mbedtls_ssl_derive_keys+0x10a5>
  405c97:	31 c9                	xor    %ecx,%ecx
  405c99:	48 8b 85 20 fd ff ff 	mov    -0x2e0(%rbp),%rax
  405ca0:	48 05 d8 00 00 00    	add    $0xd8,%rax
  405ca6:	48 8b b5 60 fd ff ff 	mov    -0x2a0(%rbp),%rsi
  405cad:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
  405cb4:	8b 52 08             	mov    0x8(%rdx),%edx
  405cb7:	48 89 c7             	mov    %rax,%rdi
  405cba:	e8 01 0c 02 00       	callq  4268c0 <mbedtls_cipher_setkey>
  405cbf:	89 85 bc fe ff ff    	mov    %eax,-0x144(%rbp)
  405cc5:	83 f8 00             	cmp    $0x0,%eax
  405cc8:	74 15                	je     405cdf <mbedtls_ssl_derive_keys+0xedf>
  405cca:	eb 00                	jmp    405ccc <mbedtls_ssl_derive_keys+0xecc>
  405ccc:	eb 00                	jmp    405cce <mbedtls_ssl_derive_keys+0xece>
  405cce:	8b 85 bc fe ff ff    	mov    -0x144(%rbp),%eax
  405cd4:	89 85 cc fe ff ff    	mov    %eax,-0x134(%rbp)
  405cda:	e9 c6 01 00 00       	jmpq   405ea5 <mbedtls_ssl_derive_keys+0x10a5>
  405cdf:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
  405ce6:	83 78 04 02          	cmpl   $0x2,0x4(%rax)
  405cea:	0f 85 6f 01 00 00    	jne    405e5f <mbedtls_ssl_derive_keys+0x105f>
  405cf0:	31 c0                	xor    %eax,%eax
  405cf2:	89 c1                	mov    %eax,%ecx
  405cf4:	48 8b 95 20 fd ff ff 	mov    -0x2e0(%rbp),%rdx
  405cfb:	48 81 c2 80 00 00 00 	add    $0x80,%rdx
  405d02:	48 89 95 20 ff ff ff 	mov    %rdx,-0xe0(%rbp)
  405d09:	c7 85 1c ff ff ff 04 	movl   $0x4,-0xe4(%rbp)
  405d10:	00 00 00 
  405d13:	48 8b 95 20 ff ff ff 	mov    -0xe0(%rbp),%rdx
  405d1a:	48 3b 0a             	cmp    (%rdx),%rcx
  405d1d:	74 14                	je     405d33 <mbedtls_ssl_derive_keys+0xf33>
  405d1f:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
  405d26:	48 8b 00             	mov    (%rax),%rax
  405d29:	b9 02 00 00 00       	mov    $0x2,%ecx
  405d2e:	3b 48 04             	cmp    0x4(%rax),%ecx
  405d31:	74 0c                	je     405d3f <mbedtls_ssl_derive_keys+0xf3f>
  405d33:	c7 85 2c ff ff ff 00 	movl   $0xffff9f00,-0xd4(%rbp)
  405d3a:	9f ff ff 
  405d3d:	eb 43                	jmp    405d82 <mbedtls_ssl_derive_keys+0xf82>
  405d3f:	83 bd 1c ff ff ff 04 	cmpl   $0x4,-0xe4(%rbp)
  405d46:	75 30                	jne    405d78 <mbedtls_ssl_derive_keys+0xf78>
  405d48:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
  405d4f:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
  405d56:	00 
  405d57:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
  405d5e:	48 b9 60 68 42 00 00 	movabs $0x426860,%rcx
  405d65:	00 00 00 
  405d68:	48 89 48 18          	mov    %rcx,0x18(%rax)
  405d6c:	c7 85 2c ff ff ff 00 	movl   $0x0,-0xd4(%rbp)
  405d73:	00 00 00 
  405d76:	eb 0a                	jmp    405d82 <mbedtls_ssl_derive_keys+0xf82>
  405d78:	c7 85 2c ff ff ff 80 	movl   $0xffff9f80,-0xd4(%rbp)
  405d7f:	9f ff ff 
  405d82:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
  405d88:	89 85 bc fe ff ff    	mov    %eax,-0x144(%rbp)
  405d8e:	83 f8 00             	cmp    $0x0,%eax
  405d91:	74 15                	je     405da8 <mbedtls_ssl_derive_keys+0xfa8>
  405d93:	eb 00                	jmp    405d95 <mbedtls_ssl_derive_keys+0xf95>
  405d95:	eb 00                	jmp    405d97 <mbedtls_ssl_derive_keys+0xf97>
  405d97:	8b 85 bc fe ff ff    	mov    -0x144(%rbp),%eax
  405d9d:	89 85 cc fe ff ff    	mov    %eax,-0x134(%rbp)
  405da3:	e9 fd 00 00 00       	jmpq   405ea5 <mbedtls_ssl_derive_keys+0x10a5>
  405da8:	31 c0                	xor    %eax,%eax
  405daa:	89 c1                	mov    %eax,%ecx
  405dac:	48 8b 95 20 fd ff ff 	mov    -0x2e0(%rbp),%rdx
  405db3:	48 81 c2 d8 00 00 00 	add    $0xd8,%rdx
  405dba:	48 89 95 10 ff ff ff 	mov    %rdx,-0xf0(%rbp)
  405dc1:	c7 85 0c ff ff ff 04 	movl   $0x4,-0xf4(%rbp)
  405dc8:	00 00 00 
  405dcb:	48 8b 95 10 ff ff ff 	mov    -0xf0(%rbp),%rdx
  405dd2:	48 3b 0a             	cmp    (%rdx),%rcx
  405dd5:	74 14                	je     405deb <mbedtls_ssl_derive_keys+0xfeb>
  405dd7:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
  405dde:	48 8b 00             	mov    (%rax),%rax
  405de1:	b9 02 00 00 00       	mov    $0x2,%ecx
  405de6:	3b 48 04             	cmp    0x4(%rax),%ecx
  405de9:	74 0c                	je     405df7 <mbedtls_ssl_derive_keys+0xff7>
  405deb:	c7 85 18 ff ff ff 00 	movl   $0xffff9f00,-0xe8(%rbp)
  405df2:	9f ff ff 
  405df5:	eb 43                	jmp    405e3a <mbedtls_ssl_derive_keys+0x103a>
  405df7:	83 bd 0c ff ff ff 04 	cmpl   $0x4,-0xf4(%rbp)
  405dfe:	75 30                	jne    405e30 <mbedtls_ssl_derive_keys+0x1030>
  405e00:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
  405e07:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
  405e0e:	00 
  405e0f:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
  405e16:	48 b9 60 68 42 00 00 	movabs $0x426860,%rcx
  405e1d:	00 00 00 
  405e20:	48 89 48 18          	mov    %rcx,0x18(%rax)
  405e24:	c7 85 18 ff ff ff 00 	movl   $0x0,-0xe8(%rbp)
  405e2b:	00 00 00 
  405e2e:	eb 0a                	jmp    405e3a <mbedtls_ssl_derive_keys+0x103a>
  405e30:	c7 85 18 ff ff ff 80 	movl   $0xffff9f80,-0xe8(%rbp)
  405e37:	9f ff ff 
  405e3a:	8b 85 18 ff ff ff    	mov    -0xe8(%rbp),%eax
  405e40:	89 85 bc fe ff ff    	mov    %eax,-0x144(%rbp)
  405e46:	83 f8 00             	cmp    $0x0,%eax
  405e49:	74 12                	je     405e5d <mbedtls_ssl_derive_keys+0x105d>
  405e4b:	eb 00                	jmp    405e4d <mbedtls_ssl_derive_keys+0x104d>
  405e4d:	eb 00                	jmp    405e4f <mbedtls_ssl_derive_keys+0x104f>
  405e4f:	8b 85 bc fe ff ff    	mov    -0x144(%rbp),%eax
  405e55:	89 85 cc fe ff ff    	mov    %eax,-0x134(%rbp)
  405e5b:	eb 48                	jmp    405ea5 <mbedtls_ssl_derive_keys+0x10a5>
  405e5d:	eb 00                	jmp    405e5f <mbedtls_ssl_derive_keys+0x105f>
  405e5f:	31 f6                	xor    %esi,%esi
  405e61:	48 8d 85 70 fd ff ff 	lea    -0x290(%rbp),%rax
  405e68:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
  405e6f:	48 c7 85 e8 fe ff ff 	movq   $0x100,-0x118(%rbp)
  405e76:	00 01 00 00 
  405e7a:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  405e81:	00 
  405e82:	48 8b bd f0 fe ff ff 	mov    -0x110(%rbp),%rdi
  405e89:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
  405e90:	ff d0                	callq  *%rax
  405e92:	48 89 85 68 fc ff ff 	mov    %rax,-0x398(%rbp)
  405e99:	eb 00                	jmp    405e9b <mbedtls_ssl_derive_keys+0x109b>
  405e9b:	c7 85 cc fe ff ff 00 	movl   $0x0,-0x134(%rbp)
  405ea2:	00 00 00 
  405ea5:	8b 85 cc fe ff ff    	mov    -0x134(%rbp),%eax
  405eab:	89 85 64 fc ff ff    	mov    %eax,-0x39c(%rbp)
  405eb1:	e8 a0 fa 03 00       	callq  445956 <writeback_cache>
  405eb6:	8b 85 64 fc ff ff    	mov    -0x39c(%rbp),%eax
  405ebc:	48 81 c4 a8 03 00 00 	add    $0x3a8,%rsp
  405ec3:	5b                   	pop    %rbx
  405ec4:	5d                   	pop    %rbp
  405ec5:	c3                   	retq   
  405ec6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  405ecd:	00 00 00 

0000000000405ed0 <tls1_prf>:
  405ed0:	55                   	push   %rbp
  405ed1:	48 89 e5             	mov    %rsp,%rbp
  405ed4:	41 56                	push   %r14
  405ed6:	53                   	push   %rbx
  405ed7:	48 81 ec 90 03 00 00 	sub    $0x390,%rsp
  405ede:	48 8b 45 10          	mov    0x10(%rbp),%rax
  405ee2:	41 ba 80 00 00 00    	mov    $0x80,%r10d
  405ee8:	45 89 d3             	mov    %r10d,%r11d
  405eeb:	45 31 d2             	xor    %r10d,%r10d
  405eee:	bb 18 00 00 00       	mov    $0x18,%ebx
  405ef3:	41 89 de             	mov    %ebx,%r14d
  405ef6:	48 89 bd 20 fe ff ff 	mov    %rdi,-0x1e0(%rbp)
  405efd:	48 89 b5 18 fe ff ff 	mov    %rsi,-0x1e8(%rbp)
  405f04:	48 89 95 10 fe ff ff 	mov    %rdx,-0x1f0(%rbp)
  405f0b:	48 89 8d 08 fe ff ff 	mov    %rcx,-0x1f8(%rbp)
  405f12:	4c 89 85 00 fe ff ff 	mov    %r8,-0x200(%rbp)
  405f19:	4c 89 8d f8 fd ff ff 	mov    %r9,-0x208(%rbp)
  405f20:	48 8d 8d 00 fd ff ff 	lea    -0x300(%rbp),%rcx
  405f27:	48 89 8d 30 fe ff ff 	mov    %rcx,-0x1d0(%rbp)
  405f2e:	48 8b 8d 30 fe ff ff 	mov    -0x1d0(%rbp),%rcx
  405f35:	48 89 cf             	mov    %rcx,%rdi
  405f38:	44 89 d6             	mov    %r10d,%esi
  405f3b:	4c 89 f2             	mov    %r14,%rdx
  405f3e:	48 89 85 f0 fc ff ff 	mov    %rax,-0x310(%rbp)
  405f45:	4c 89 9d e8 fc ff ff 	mov    %r11,-0x318(%rbp)
  405f4c:	e8 cf b0 ff ff       	callq  401020 <memset@plt>
  405f51:	48 8b bd 10 fe ff ff 	mov    -0x1f0(%rbp),%rdi
  405f58:	e8 73 b1 ff ff       	callq  4010d0 <strlen@plt>
  405f5d:	48 83 c0 14          	add    $0x14,%rax
  405f61:	48 03 85 00 fe ff ff 	add    -0x200(%rbp),%rax
  405f68:	48 8b 8d e8 fc ff ff 	mov    -0x318(%rbp),%rcx
  405f6f:	48 39 c1             	cmp    %rax,%rcx
  405f72:	73 0f                	jae    405f83 <tls1_prf+0xb3>
  405f74:	c7 85 2c fe ff ff 00 	movl   $0xffff8f00,-0x1d4(%rbp)
  405f7b:	8f ff ff 
  405f7e:	e9 2b 0d 00 00       	jmpq   406cae <tls1_prf+0xdde>
  405f83:	48 8b 85 18 fe ff ff 	mov    -0x1e8(%rbp),%rax
  405f8a:	48 83 c0 01          	add    $0x1,%rax
  405f8e:	48 d1 e8             	shr    %rax
  405f91:	48 89 85 e8 fd ff ff 	mov    %rax,-0x218(%rbp)
  405f98:	48 8b 85 20 fe ff ff 	mov    -0x1e0(%rbp),%rax
  405f9f:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
  405fa6:	48 8b 85 20 fe ff ff 	mov    -0x1e0(%rbp),%rax
  405fad:	48 8b 8d 18 fe ff ff 	mov    -0x1e8(%rbp),%rcx
  405fb4:	48 01 c8             	add    %rcx,%rax
  405fb7:	48 8b 8d e8 fd ff ff 	mov    -0x218(%rbp),%rcx
  405fbe:	48 29 c8             	sub    %rcx,%rax
  405fc1:	48 89 85 c0 fd ff ff 	mov    %rax,-0x240(%rbp)
  405fc8:	48 8b bd 10 fe ff ff 	mov    -0x1f0(%rbp),%rdi
  405fcf:	e8 fc b0 ff ff       	callq  4010d0 <strlen@plt>
  405fd4:	48 89 85 f0 fd ff ff 	mov    %rax,-0x210(%rbp)
  405fdb:	48 8d bd 54 fd ff ff 	lea    -0x2ac(%rbp),%rdi
  405fe2:	48 8b b5 10 fe ff ff 	mov    -0x1f0(%rbp),%rsi
  405fe9:	48 8b 95 f0 fd ff ff 	mov    -0x210(%rbp),%rdx
  405ff0:	e8 7b b1 ff ff       	callq  401170 <memcpy@plt>
  405ff5:	48 8b 8d f0 fd ff ff 	mov    -0x210(%rbp),%rcx
  405ffc:	48 8d bc 0d 54 fd ff 	lea    -0x2ac(%rbp,%rcx,1),%rdi
  406003:	ff 
  406004:	48 8b b5 08 fe ff ff 	mov    -0x1f8(%rbp),%rsi
  40600b:	48 8b 95 00 fe ff ff 	mov    -0x200(%rbp),%rdx
  406012:	48 89 85 e0 fc ff ff 	mov    %rax,-0x320(%rbp)
  406019:	e8 52 b1 ff ff       	callq  401170 <memcpy@plt>
  40601e:	48 8b 8d 00 fe ff ff 	mov    -0x200(%rbp),%rcx
  406025:	48 8b 95 f0 fd ff ff 	mov    -0x210(%rbp),%rdx
  40602c:	48 01 ca             	add    %rcx,%rdx
  40602f:	48 89 95 f0 fd ff ff 	mov    %rdx,-0x210(%rbp)
  406036:	c7 85 4c fe ff ff 03 	movl   $0x3,-0x1b4(%rbp)
  40603d:	00 00 00 
  406040:	44 8b 85 4c fe ff ff 	mov    -0x1b4(%rbp),%r8d
  406047:	41 83 c0 fd          	add    $0xfffffffd,%r8d
  40604b:	44 89 c1             	mov    %r8d,%ecx
  40604e:	41 83 e8 03          	sub    $0x3,%r8d
  406052:	48 89 85 d8 fc ff ff 	mov    %rax,-0x328(%rbp)
  406059:	48 89 8d d0 fc ff ff 	mov    %rcx,-0x330(%rbp)
  406060:	44 89 85 cc fc ff ff 	mov    %r8d,-0x334(%rbp)
  406067:	77 5d                	ja     4060c6 <tls1_prf+0x1f6>
  406069:	48 8b 85 d0 fc ff ff 	mov    -0x330(%rbp),%rax
  406070:	48 8b 0c c5 b8 6b 44 	mov    0x446bb8(,%rax,8),%rcx
  406077:	00 
  406078:	ff e1                	jmpq   *%rcx
  40607a:	48 b8 50 d9 44 00 00 	movabs $0x44d950,%rax
  406081:	00 00 00 
  406084:	48 89 85 50 fe ff ff 	mov    %rax,-0x1b0(%rbp)
  40608b:	eb 44                	jmp    4060d1 <tls1_prf+0x201>
  40608d:	48 b8 b0 d9 44 00 00 	movabs $0x44d9b0,%rax
  406094:	00 00 00 
  406097:	48 89 85 50 fe ff ff 	mov    %rax,-0x1b0(%rbp)
  40609e:	eb 31                	jmp    4060d1 <tls1_prf+0x201>
  4060a0:	48 b8 10 da 44 00 00 	movabs $0x44da10,%rax
  4060a7:	00 00 00 
  4060aa:	48 89 85 50 fe ff ff 	mov    %rax,-0x1b0(%rbp)
  4060b1:	eb 1e                	jmp    4060d1 <tls1_prf+0x201>
  4060b3:	48 b8 70 da 44 00 00 	movabs $0x44da70,%rax
  4060ba:	00 00 00 
  4060bd:	48 89 85 50 fe ff ff 	mov    %rax,-0x1b0(%rbp)
  4060c4:	eb 0b                	jmp    4060d1 <tls1_prf+0x201>
  4060c6:	48 c7 85 50 fe ff ff 	movq   $0x0,-0x1b0(%rbp)
  4060cd:	00 00 00 00 
  4060d1:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
  4060d8:	48 89 85 18 fd ff ff 	mov    %rax,-0x2e8(%rbp)
  4060df:	48 83 f8 00          	cmp    $0x0,%rax
  4060e3:	75 0f                	jne    4060f4 <tls1_prf+0x224>
  4060e5:	c7 85 2c fe ff ff 00 	movl   $0xffff9400,-0x1d4(%rbp)
  4060ec:	94 ff ff 
  4060ef:	e9 ba 0b 00 00       	jmpq   406cae <tls1_prf+0xdde>
  4060f4:	48 8b 85 18 fd ff ff 	mov    -0x2e8(%rbp),%rax
  4060fb:	48 8d 8d 00 fd ff ff 	lea    -0x300(%rbp),%rcx
  406102:	48 89 8d 78 fe ff ff 	mov    %rcx,-0x188(%rbp)
  406109:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
  406110:	c7 85 6c fe ff ff 01 	movl   $0x1,-0x194(%rbp)
  406117:	00 00 00 
  40611a:	48 83 bd 70 fe ff ff 	cmpq   $0x0,-0x190(%rbp)
  406121:	00 
  406122:	74 0a                	je     40612e <tls1_prf+0x25e>
  406124:	48 83 bd 78 fe ff ff 	cmpq   $0x0,-0x188(%rbp)
  40612b:	00 
  40612c:	75 0f                	jne    40613d <tls1_prf+0x26d>
  40612e:	c7 85 84 fe ff ff 00 	movl   $0xffffaf00,-0x17c(%rbp)
  406135:	af ff ff 
  406138:	e9 a1 00 00 00       	jmpq   4061de <tls1_prf+0x30e>
  40613d:	48 8b 85 70 fe ff ff 	mov    -0x190(%rbp),%rax
  406144:	ff 50 38             	callq  *0x38(%rax)
  406147:	48 8b 8d 78 fe ff ff 	mov    -0x188(%rbp),%rcx
  40614e:	48 89 41 08          	mov    %rax,0x8(%rcx)
  406152:	48 83 f8 00          	cmp    $0x0,%rax
  406156:	75 0c                	jne    406164 <tls1_prf+0x294>
  406158:	c7 85 84 fe ff ff 80 	movl   $0xffffae80,-0x17c(%rbp)
  40615f:	ae ff ff 
  406162:	eb 7a                	jmp    4061de <tls1_prf+0x30e>
  406164:	83 bd 6c fe ff ff 00 	cmpl   $0x0,-0x194(%rbp)
  40616b:	74 56                	je     4061c3 <tls1_prf+0x2f3>
  40616d:	b8 02 00 00 00       	mov    $0x2,%eax
  406172:	89 c7                	mov    %eax,%edi
  406174:	48 8b 8d 70 fe ff ff 	mov    -0x190(%rbp),%rcx
  40617b:	48 63 71 14          	movslq 0x14(%rcx),%rsi
  40617f:	e8 66 06 04 00       	callq  4467ea <aes_calloc>
  406184:	48 8b 8d 78 fe ff ff 	mov    -0x188(%rbp),%rcx
  40618b:	48 89 41 10          	mov    %rax,0x10(%rcx)
  40618f:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
  406196:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
  40619b:	75 24                	jne    4061c1 <tls1_prf+0x2f1>
  40619d:	48 8b 85 70 fe ff ff 	mov    -0x190(%rbp),%rax
  4061a4:	48 8b 40 40          	mov    0x40(%rax),%rax
  4061a8:	48 8b 8d 78 fe ff ff 	mov    -0x188(%rbp),%rcx
  4061af:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  4061b3:	ff d0                	callq  *%rax
  4061b5:	c7 85 84 fe ff ff 80 	movl   $0xffffae80,-0x17c(%rbp)
  4061bc:	ae ff ff 
  4061bf:	eb 1d                	jmp    4061de <tls1_prf+0x30e>
  4061c1:	eb 00                	jmp    4061c3 <tls1_prf+0x2f3>
  4061c3:	48 8b 85 70 fe ff ff 	mov    -0x190(%rbp),%rax
  4061ca:	48 8b 8d 78 fe ff ff 	mov    -0x188(%rbp),%rcx
  4061d1:	48 89 01             	mov    %rax,(%rcx)
  4061d4:	c7 85 84 fe ff ff 00 	movl   $0x0,-0x17c(%rbp)
  4061db:	00 00 00 
  4061de:	8b 85 84 fe ff ff    	mov    -0x17c(%rbp),%eax
  4061e4:	89 85 fc fc ff ff    	mov    %eax,-0x304(%rbp)
  4061ea:	83 f8 00             	cmp    $0x0,%eax
  4061ed:	74 11                	je     406200 <tls1_prf+0x330>
  4061ef:	8b 85 fc fc ff ff    	mov    -0x304(%rbp),%eax
  4061f5:	89 85 2c fe ff ff    	mov    %eax,-0x1d4(%rbp)
  4061fb:	e9 ae 0a 00 00       	jmpq   406cae <tls1_prf+0xdde>
  406200:	48 8b b5 c8 fd ff ff 	mov    -0x238(%rbp),%rsi
  406207:	48 8b 95 e8 fd ff ff 	mov    -0x218(%rbp),%rdx
  40620e:	48 8d bd 00 fd ff ff 	lea    -0x300(%rbp),%rdi
  406215:	e8 06 50 02 00       	callq  42b220 <mbedtls_md_hmac_starts>
  40621a:	48 8d 95 40 fd ff ff 	lea    -0x2c0(%rbp),%rdx
  406221:	48 83 c2 14          	add    $0x14,%rdx
  406225:	48 8b b5 f0 fd ff ff 	mov    -0x210(%rbp),%rsi
  40622c:	48 8d bd 00 fd ff ff 	lea    -0x300(%rbp),%rdi
  406233:	48 89 bd 98 fe ff ff 	mov    %rdi,-0x168(%rbp)
  40623a:	48 89 95 90 fe ff ff 	mov    %rdx,-0x170(%rbp)
  406241:	48 89 b5 88 fe ff ff 	mov    %rsi,-0x178(%rbp)
  406248:	48 83 bd 98 fe ff ff 	cmpq   $0x0,-0x168(%rbp)
  40624f:	00 
  406250:	89 85 c8 fc ff ff    	mov    %eax,-0x338(%rbp)
  406256:	74 1b                	je     406273 <tls1_prf+0x3a3>
  406258:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  40625f:	48 83 38 00          	cmpq   $0x0,(%rax)
  406263:	74 0e                	je     406273 <tls1_prf+0x3a3>
  406265:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  40626c:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
  406271:	75 0c                	jne    40627f <tls1_prf+0x3af>
  406273:	c7 85 a4 fe ff ff 00 	movl   $0xffffaf00,-0x15c(%rbp)
  40627a:	af ff ff 
  40627d:	eb 2f                	jmp    4062ae <tls1_prf+0x3de>
  40627f:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  406286:	48 8b 00             	mov    (%rax),%rax
  406289:	48 8b 40 20          	mov    0x20(%rax),%rax
  40628d:	48 8b 8d 98 fe ff ff 	mov    -0x168(%rbp),%rcx
  406294:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  406298:	48 8b b5 90 fe ff ff 	mov    -0x170(%rbp),%rsi
  40629f:	48 8b 95 88 fe ff ff 	mov    -0x178(%rbp),%rdx
  4062a6:	ff d0                	callq  *%rax
  4062a8:	89 85 a4 fe ff ff    	mov    %eax,-0x15c(%rbp)
  4062ae:	48 8d 85 40 fd ff ff 	lea    -0x2c0(%rbp),%rax
  4062b5:	48 83 c0 04          	add    $0x4,%rax
  4062b9:	48 8d bd 00 fd ff ff 	lea    -0x300(%rbp),%rdi
  4062c0:	48 89 c6             	mov    %rax,%rsi
  4062c3:	e8 18 52 02 00       	callq  42b4e0 <mbedtls_md_hmac_finish>
  4062c8:	48 c7 85 e0 fd ff ff 	movq   $0x0,-0x220(%rbp)
  4062cf:	00 00 00 00 
  4062d3:	89 85 c4 fc ff ff    	mov    %eax,-0x33c(%rbp)
  4062d9:	48 8b 85 e0 fd ff ff 	mov    -0x220(%rbp),%rax
  4062e0:	48 3b 45 10          	cmp    0x10(%rbp),%rax
  4062e4:	0f 83 7a 03 00 00    	jae    406664 <tls1_prf+0x794>
  4062ea:	48 8d 85 00 fd ff ff 	lea    -0x300(%rbp),%rax
  4062f1:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
  4062f8:	48 83 bd b8 fe ff ff 	cmpq   $0x0,-0x148(%rbp)
  4062ff:	00 
  406300:	74 1b                	je     40631d <tls1_prf+0x44d>
  406302:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  406309:	48 83 38 00          	cmpq   $0x0,(%rax)
  40630d:	74 0e                	je     40631d <tls1_prf+0x44d>
  40630f:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  406316:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
  40631b:	75 0c                	jne    406329 <tls1_prf+0x459>
  40631d:	c7 85 c4 fe ff ff 00 	movl   $0xffffaf00,-0x13c(%rbp)
  406324:	af ff ff 
  406327:	eb 7c                	jmp    4063a5 <tls1_prf+0x4d5>
  406329:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  406330:	48 8b 40 10          	mov    0x10(%rax),%rax
  406334:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
  40633b:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  406342:	48 8b 00             	mov    (%rax),%rax
  406345:	48 8b 40 18          	mov    0x18(%rax),%rax
  406349:	48 8b 8d b8 fe ff ff 	mov    -0x148(%rbp),%rcx
  406350:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  406354:	ff d0                	callq  *%rax
  406356:	89 85 b4 fe ff ff    	mov    %eax,-0x14c(%rbp)
  40635c:	83 f8 00             	cmp    $0x0,%eax
  40635f:	74 0e                	je     40636f <tls1_prf+0x49f>
  406361:	8b 85 b4 fe ff ff    	mov    -0x14c(%rbp),%eax
  406367:	89 85 c4 fe ff ff    	mov    %eax,-0x13c(%rbp)
  40636d:	eb 36                	jmp    4063a5 <tls1_prf+0x4d5>
  40636f:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  406376:	48 8b 00             	mov    (%rax),%rax
  406379:	48 8b 40 20          	mov    0x20(%rax),%rax
  40637d:	48 8b 8d b8 fe ff ff 	mov    -0x148(%rbp),%rcx
  406384:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  406388:	48 8b b5 a8 fe ff ff 	mov    -0x158(%rbp),%rsi
  40638f:	48 8b 8d b8 fe ff ff 	mov    -0x148(%rbp),%rcx
  406396:	48 8b 09             	mov    (%rcx),%rcx
  406399:	48 63 51 14          	movslq 0x14(%rcx),%rdx
  40639d:	ff d0                	callq  *%rax
  40639f:	89 85 c4 fe ff ff    	mov    %eax,-0x13c(%rbp)
  4063a5:	48 8d 85 40 fd ff ff 	lea    -0x2c0(%rbp),%rax
  4063ac:	48 83 c0 04          	add    $0x4,%rax
  4063b0:	48 8b 8d f0 fd ff ff 	mov    -0x210(%rbp),%rcx
  4063b7:	48 83 c1 10          	add    $0x10,%rcx
  4063bb:	48 8d 95 00 fd ff ff 	lea    -0x300(%rbp),%rdx
  4063c2:	48 89 95 d8 fe ff ff 	mov    %rdx,-0x128(%rbp)
  4063c9:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
  4063d0:	48 89 8d c8 fe ff ff 	mov    %rcx,-0x138(%rbp)
  4063d7:	48 83 bd d8 fe ff ff 	cmpq   $0x0,-0x128(%rbp)
  4063de:	00 
  4063df:	74 1b                	je     4063fc <tls1_prf+0x52c>
  4063e1:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
  4063e8:	48 83 38 00          	cmpq   $0x0,(%rax)
  4063ec:	74 0e                	je     4063fc <tls1_prf+0x52c>
  4063ee:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
  4063f5:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
  4063fa:	75 0c                	jne    406408 <tls1_prf+0x538>
  4063fc:	c7 85 e4 fe ff ff 00 	movl   $0xffffaf00,-0x11c(%rbp)
  406403:	af ff ff 
  406406:	eb 2f                	jmp    406437 <tls1_prf+0x567>
  406408:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
  40640f:	48 8b 00             	mov    (%rax),%rax
  406412:	48 8b 40 20          	mov    0x20(%rax),%rax
  406416:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
  40641d:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  406421:	48 8b b5 d0 fe ff ff 	mov    -0x130(%rbp),%rsi
  406428:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
  40642f:	ff d0                	callq  *%rax
  406431:	89 85 e4 fe ff ff    	mov    %eax,-0x11c(%rbp)
  406437:	48 8d b5 20 fd ff ff 	lea    -0x2e0(%rbp),%rsi
  40643e:	48 8d bd 00 fd ff ff 	lea    -0x300(%rbp),%rdi
  406445:	e8 96 50 02 00       	callq  42b4e0 <mbedtls_md_hmac_finish>
  40644a:	48 8d b5 00 fd ff ff 	lea    -0x300(%rbp),%rsi
  406451:	48 89 b5 f8 fe ff ff 	mov    %rsi,-0x108(%rbp)
  406458:	48 83 bd f8 fe ff ff 	cmpq   $0x0,-0x108(%rbp)
  40645f:	00 
  406460:	89 85 c0 fc ff ff    	mov    %eax,-0x340(%rbp)
  406466:	74 1b                	je     406483 <tls1_prf+0x5b3>
  406468:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  40646f:	48 83 38 00          	cmpq   $0x0,(%rax)
  406473:	74 0e                	je     406483 <tls1_prf+0x5b3>
  406475:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  40647c:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
  406481:	75 0c                	jne    40648f <tls1_prf+0x5bf>
  406483:	c7 85 04 ff ff ff 00 	movl   $0xffffaf00,-0xfc(%rbp)
  40648a:	af ff ff 
  40648d:	eb 7c                	jmp    40650b <tls1_prf+0x63b>
  40648f:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  406496:	48 8b 40 10          	mov    0x10(%rax),%rax
  40649a:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
  4064a1:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  4064a8:	48 8b 00             	mov    (%rax),%rax
  4064ab:	48 8b 40 18          	mov    0x18(%rax),%rax
  4064af:	48 8b 8d f8 fe ff ff 	mov    -0x108(%rbp),%rcx
  4064b6:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  4064ba:	ff d0                	callq  *%rax
  4064bc:	89 85 f4 fe ff ff    	mov    %eax,-0x10c(%rbp)
  4064c2:	83 f8 00             	cmp    $0x0,%eax
  4064c5:	74 0e                	je     4064d5 <tls1_prf+0x605>
  4064c7:	8b 85 f4 fe ff ff    	mov    -0x10c(%rbp),%eax
  4064cd:	89 85 04 ff ff ff    	mov    %eax,-0xfc(%rbp)
  4064d3:	eb 36                	jmp    40650b <tls1_prf+0x63b>
  4064d5:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  4064dc:	48 8b 00             	mov    (%rax),%rax
  4064df:	48 8b 40 20          	mov    0x20(%rax),%rax
  4064e3:	48 8b 8d f8 fe ff ff 	mov    -0x108(%rbp),%rcx
  4064ea:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  4064ee:	48 8b b5 e8 fe ff ff 	mov    -0x118(%rbp),%rsi
  4064f5:	48 8b 8d f8 fe ff ff 	mov    -0x108(%rbp),%rcx
  4064fc:	48 8b 09             	mov    (%rcx),%rcx
  4064ff:	48 63 51 14          	movslq 0x14(%rcx),%rdx
  406503:	ff d0                	callq  *%rax
  406505:	89 85 04 ff ff ff    	mov    %eax,-0xfc(%rbp)
  40650b:	48 8d 85 40 fd ff ff 	lea    -0x2c0(%rbp),%rax
  406512:	48 83 c0 04          	add    $0x4,%rax
  406516:	48 8d 8d 00 fd ff ff 	lea    -0x300(%rbp),%rcx
  40651d:	48 89 8d 18 ff ff ff 	mov    %rcx,-0xe8(%rbp)
  406524:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
  40652b:	48 c7 85 08 ff ff ff 	movq   $0x10,-0xf8(%rbp)
  406532:	10 00 00 00 
  406536:	48 83 bd 18 ff ff ff 	cmpq   $0x0,-0xe8(%rbp)
  40653d:	00 
  40653e:	74 1b                	je     40655b <tls1_prf+0x68b>
  406540:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  406547:	48 83 38 00          	cmpq   $0x0,(%rax)
  40654b:	74 0e                	je     40655b <tls1_prf+0x68b>
  40654d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  406554:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
  406559:	75 0c                	jne    406567 <tls1_prf+0x697>
  40655b:	c7 85 20 ff ff ff 00 	movl   $0xffffaf00,-0xe0(%rbp)
  406562:	af ff ff 
  406565:	eb 2f                	jmp    406596 <tls1_prf+0x6c6>
  406567:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  40656e:	48 8b 00             	mov    (%rax),%rax
  406571:	48 8b 40 20          	mov    0x20(%rax),%rax
  406575:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
  40657c:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  406580:	48 8b b5 10 ff ff ff 	mov    -0xf0(%rbp),%rsi
  406587:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
  40658e:	ff d0                	callq  *%rax
  406590:	89 85 20 ff ff ff    	mov    %eax,-0xe0(%rbp)
  406596:	48 8d 85 40 fd ff ff 	lea    -0x2c0(%rbp),%rax
  40659d:	48 83 c0 04          	add    $0x4,%rax
  4065a1:	48 8d bd 00 fd ff ff 	lea    -0x300(%rbp),%rdi
  4065a8:	48 89 c6             	mov    %rax,%rsi
  4065ab:	e8 30 4f 02 00       	callq  42b4e0 <mbedtls_md_hmac_finish>
  4065b0:	48 8b b5 e0 fd ff ff 	mov    -0x220(%rbp),%rsi
  4065b7:	48 83 c6 10          	add    $0x10,%rsi
  4065bb:	48 3b 75 10          	cmp    0x10(%rbp),%rsi
  4065bf:	89 85 bc fc ff ff    	mov    %eax,-0x344(%rbp)
  4065c5:	76 11                	jbe    4065d8 <tls1_prf+0x708>
  4065c7:	48 8b 45 10          	mov    0x10(%rbp),%rax
  4065cb:	48 83 e0 0f          	and    $0xf,%rax
  4065cf:	48 89 85 b0 fc ff ff 	mov    %rax,-0x350(%rbp)
  4065d6:	eb 10                	jmp    4065e8 <tls1_prf+0x718>
  4065d8:	b8 10 00 00 00       	mov    $0x10,%eax
  4065dd:	89 c1                	mov    %eax,%ecx
  4065df:	48 89 8d b0 fc ff ff 	mov    %rcx,-0x350(%rbp)
  4065e6:	eb 00                	jmp    4065e8 <tls1_prf+0x718>
  4065e8:	48 8b 85 b0 fc ff ff 	mov    -0x350(%rbp),%rax
  4065ef:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
  4065f6:	48 c7 85 d8 fd ff ff 	movq   $0x0,-0x228(%rbp)
  4065fd:	00 00 00 00 
  406601:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
  406608:	48 3b 85 d0 fd ff ff 	cmp    -0x230(%rbp),%rax
  40660f:	73 3a                	jae    40664b <tls1_prf+0x77b>
  406611:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
  406618:	8a 8c 05 20 fd ff ff 	mov    -0x2e0(%rbp,%rax,1),%cl
  40661f:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
  406626:	48 8b 95 e0 fd ff ff 	mov    -0x220(%rbp),%rdx
  40662d:	48 03 95 d8 fd ff ff 	add    -0x228(%rbp),%rdx
  406634:	88 0c 10             	mov    %cl,(%rax,%rdx,1)
  406637:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
  40663e:	48 83 c0 01          	add    $0x1,%rax
  406642:	48 89 85 d8 fd ff ff 	mov    %rax,-0x228(%rbp)
  406649:	eb b6                	jmp    406601 <tls1_prf+0x731>
  40664b:	eb 00                	jmp    40664d <tls1_prf+0x77d>
  40664d:	48 8b 85 e0 fd ff ff 	mov    -0x220(%rbp),%rax
  406654:	48 83 c0 10          	add    $0x10,%rax
  406658:	48 89 85 e0 fd ff ff 	mov    %rax,-0x220(%rbp)
  40665f:	e9 75 fc ff ff       	jmpq   4062d9 <tls1_prf+0x409>
  406664:	48 8d bd 00 fd ff ff 	lea    -0x300(%rbp),%rdi
  40666b:	e8 f0 48 02 00       	callq  42af60 <mbedtls_md_free>
  406670:	c7 85 24 ff ff ff 04 	movl   $0x4,-0xdc(%rbp)
  406677:	00 00 00 
  40667a:	8b 85 24 ff ff ff    	mov    -0xdc(%rbp),%eax
  406680:	83 c0 fd             	add    $0xfffffffd,%eax
  406683:	89 c7                	mov    %eax,%edi
  406685:	83 e8 03             	sub    $0x3,%eax
  406688:	48 89 bd a8 fc ff ff 	mov    %rdi,-0x358(%rbp)
  40668f:	89 85 a4 fc ff ff    	mov    %eax,-0x35c(%rbp)
  406695:	77 5d                	ja     4066f4 <tls1_prf+0x824>
  406697:	48 8b 85 a8 fc ff ff 	mov    -0x358(%rbp),%rax
  40669e:	48 8b 0c c5 d8 6b 44 	mov    0x446bd8(,%rax,8),%rcx
  4066a5:	00 
  4066a6:	ff e1                	jmpq   *%rcx
  4066a8:	48 b8 50 d9 44 00 00 	movabs $0x44d950,%rax
  4066af:	00 00 00 
  4066b2:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
  4066b9:	eb 44                	jmp    4066ff <tls1_prf+0x82f>
  4066bb:	48 b8 b0 d9 44 00 00 	movabs $0x44d9b0,%rax
  4066c2:	00 00 00 
  4066c5:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
  4066cc:	eb 31                	jmp    4066ff <tls1_prf+0x82f>
  4066ce:	48 b8 10 da 44 00 00 	movabs $0x44da10,%rax
  4066d5:	00 00 00 
  4066d8:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
  4066df:	eb 1e                	jmp    4066ff <tls1_prf+0x82f>
  4066e1:	48 b8 70 da 44 00 00 	movabs $0x44da70,%rax
  4066e8:	00 00 00 
  4066eb:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
  4066f2:	eb 0b                	jmp    4066ff <tls1_prf+0x82f>
  4066f4:	48 c7 85 28 ff ff ff 	movq   $0x0,-0xd8(%rbp)
  4066fb:	00 00 00 00 
  4066ff:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  406706:	48 89 85 18 fd ff ff 	mov    %rax,-0x2e8(%rbp)
  40670d:	48 83 f8 00          	cmp    $0x0,%rax
  406711:	75 0f                	jne    406722 <tls1_prf+0x852>
  406713:	c7 85 2c fe ff ff 00 	movl   $0xffff9400,-0x1d4(%rbp)
  40671a:	94 ff ff 
  40671d:	e9 8c 05 00 00       	jmpq   406cae <tls1_prf+0xdde>
  406722:	48 8b 85 18 fd ff ff 	mov    -0x2e8(%rbp),%rax
  406729:	48 8d 8d 00 fd ff ff 	lea    -0x300(%rbp),%rcx
  406730:	48 89 8d 40 ff ff ff 	mov    %rcx,-0xc0(%rbp)
  406737:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
  40673e:	c7 85 34 ff ff ff 01 	movl   $0x1,-0xcc(%rbp)
  406745:	00 00 00 
  406748:	48 83 bd 38 ff ff ff 	cmpq   $0x0,-0xc8(%rbp)
  40674f:	00 
  406750:	74 0a                	je     40675c <tls1_prf+0x88c>
  406752:	48 83 bd 40 ff ff ff 	cmpq   $0x0,-0xc0(%rbp)
  406759:	00 
  40675a:	75 0f                	jne    40676b <tls1_prf+0x89b>
  40675c:	c7 85 4c ff ff ff 00 	movl   $0xffffaf00,-0xb4(%rbp)
  406763:	af ff ff 
  406766:	e9 a1 00 00 00       	jmpq   40680c <tls1_prf+0x93c>
  40676b:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  406772:	ff 50 38             	callq  *0x38(%rax)
  406775:	48 8b 8d 40 ff ff ff 	mov    -0xc0(%rbp),%rcx
  40677c:	48 89 41 08          	mov    %rax,0x8(%rcx)
  406780:	48 83 f8 00          	cmp    $0x0,%rax
  406784:	75 0c                	jne    406792 <tls1_prf+0x8c2>
  406786:	c7 85 4c ff ff ff 80 	movl   $0xffffae80,-0xb4(%rbp)
  40678d:	ae ff ff 
  406790:	eb 7a                	jmp    40680c <tls1_prf+0x93c>
  406792:	83 bd 34 ff ff ff 00 	cmpl   $0x0,-0xcc(%rbp)
  406799:	74 56                	je     4067f1 <tls1_prf+0x921>
  40679b:	b8 02 00 00 00       	mov    $0x2,%eax
  4067a0:	89 c7                	mov    %eax,%edi
  4067a2:	48 8b 8d 38 ff ff ff 	mov    -0xc8(%rbp),%rcx
  4067a9:	48 63 71 14          	movslq 0x14(%rcx),%rsi
  4067ad:	e8 38 00 04 00       	callq  4467ea <aes_calloc>
  4067b2:	48 8b 8d 40 ff ff ff 	mov    -0xc0(%rbp),%rcx
  4067b9:	48 89 41 10          	mov    %rax,0x10(%rcx)
  4067bd:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
  4067c4:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
  4067c9:	75 24                	jne    4067ef <tls1_prf+0x91f>
  4067cb:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  4067d2:	48 8b 40 40          	mov    0x40(%rax),%rax
  4067d6:	48 8b 8d 40 ff ff ff 	mov    -0xc0(%rbp),%rcx
  4067dd:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  4067e1:	ff d0                	callq  *%rax
  4067e3:	c7 85 4c ff ff ff 80 	movl   $0xffffae80,-0xb4(%rbp)
  4067ea:	ae ff ff 
  4067ed:	eb 1d                	jmp    40680c <tls1_prf+0x93c>
  4067ef:	eb 00                	jmp    4067f1 <tls1_prf+0x921>
  4067f1:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  4067f8:	48 8b 8d 40 ff ff ff 	mov    -0xc0(%rbp),%rcx
  4067ff:	48 89 01             	mov    %rax,(%rcx)
  406802:	c7 85 4c ff ff ff 00 	movl   $0x0,-0xb4(%rbp)
  406809:	00 00 00 
  40680c:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
  406812:	89 85 fc fc ff ff    	mov    %eax,-0x304(%rbp)
  406818:	83 f8 00             	cmp    $0x0,%eax
  40681b:	74 11                	je     40682e <tls1_prf+0x95e>
  40681d:	8b 85 fc fc ff ff    	mov    -0x304(%rbp),%eax
  406823:	89 85 2c fe ff ff    	mov    %eax,-0x1d4(%rbp)
  406829:	e9 80 04 00 00       	jmpq   406cae <tls1_prf+0xdde>
  40682e:	48 8b b5 c0 fd ff ff 	mov    -0x240(%rbp),%rsi
  406835:	48 8b 95 e8 fd ff ff 	mov    -0x218(%rbp),%rdx
  40683c:	48 8d bd 00 fd ff ff 	lea    -0x300(%rbp),%rdi
  406843:	e8 d8 49 02 00       	callq  42b220 <mbedtls_md_hmac_starts>
  406848:	48 8d 95 40 fd ff ff 	lea    -0x2c0(%rbp),%rdx
  40684f:	48 83 c2 14          	add    $0x14,%rdx
  406853:	48 8b b5 f0 fd ff ff 	mov    -0x210(%rbp),%rsi
  40685a:	48 8d bd 00 fd ff ff 	lea    -0x300(%rbp),%rdi
  406861:	48 89 bd 60 ff ff ff 	mov    %rdi,-0xa0(%rbp)
  406868:	48 89 95 58 ff ff ff 	mov    %rdx,-0xa8(%rbp)
  40686f:	48 89 b5 50 ff ff ff 	mov    %rsi,-0xb0(%rbp)
  406876:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
  40687d:	00 
  40687e:	89 85 a0 fc ff ff    	mov    %eax,-0x360(%rbp)
  406884:	74 1b                	je     4068a1 <tls1_prf+0x9d1>
  406886:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40688d:	48 83 38 00          	cmpq   $0x0,(%rax)
  406891:	74 0e                	je     4068a1 <tls1_prf+0x9d1>
  406893:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40689a:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
  40689f:	75 0c                	jne    4068ad <tls1_prf+0x9dd>
  4068a1:	c7 85 6c ff ff ff 00 	movl   $0xffffaf00,-0x94(%rbp)
  4068a8:	af ff ff 
  4068ab:	eb 2f                	jmp    4068dc <tls1_prf+0xa0c>
  4068ad:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  4068b4:	48 8b 00             	mov    (%rax),%rax
  4068b7:	48 8b 40 20          	mov    0x20(%rax),%rax
  4068bb:	48 8b 8d 60 ff ff ff 	mov    -0xa0(%rbp),%rcx
  4068c2:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  4068c6:	48 8b b5 58 ff ff ff 	mov    -0xa8(%rbp),%rsi
  4068cd:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
  4068d4:	ff d0                	callq  *%rax
  4068d6:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)
  4068dc:	48 8d b5 40 fd ff ff 	lea    -0x2c0(%rbp),%rsi
  4068e3:	48 8d bd 00 fd ff ff 	lea    -0x300(%rbp),%rdi
  4068ea:	e8 f1 4b 02 00       	callq  42b4e0 <mbedtls_md_hmac_finish>
  4068ef:	48 c7 85 e0 fd ff ff 	movq   $0x0,-0x220(%rbp)
  4068f6:	00 00 00 00 
  4068fa:	89 85 9c fc ff ff    	mov    %eax,-0x364(%rbp)
  406900:	48 8b 85 e0 fd ff ff 	mov    -0x220(%rbp),%rax
  406907:	48 3b 45 10          	cmp    0x10(%rbp),%rax
  40690b:	0f 83 f1 02 00 00    	jae    406c02 <tls1_prf+0xd32>
  406911:	48 8d 85 00 fd ff ff 	lea    -0x300(%rbp),%rax
  406918:	48 89 45 80          	mov    %rax,-0x80(%rbp)
  40691c:	48 83 7d 80 00       	cmpq   $0x0,-0x80(%rbp)
  406921:	74 15                	je     406938 <tls1_prf+0xa68>
  406923:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  406927:	48 83 38 00          	cmpq   $0x0,(%rax)
  40692b:	74 0b                	je     406938 <tls1_prf+0xa68>
  40692d:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  406931:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
  406936:	75 09                	jne    406941 <tls1_prf+0xa71>
  406938:	c7 45 8c 00 af ff ff 	movl   $0xffffaf00,-0x74(%rbp)
  40693f:	eb 64                	jmp    4069a5 <tls1_prf+0xad5>
  406941:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  406945:	48 8b 40 10          	mov    0x10(%rax),%rax
  406949:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
  406950:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  406954:	48 8b 00             	mov    (%rax),%rax
  406957:	48 8b 40 18          	mov    0x18(%rax),%rax
  40695b:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
  40695f:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  406963:	ff d0                	callq  *%rax
  406965:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
  40696b:	83 f8 00             	cmp    $0x0,%eax
  40696e:	74 0b                	je     40697b <tls1_prf+0xaab>
  406970:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
  406976:	89 45 8c             	mov    %eax,-0x74(%rbp)
  406979:	eb 2a                	jmp    4069a5 <tls1_prf+0xad5>
  40697b:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  40697f:	48 8b 00             	mov    (%rax),%rax
  406982:	48 8b 40 20          	mov    0x20(%rax),%rax
  406986:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
  40698a:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  40698e:	48 8b b5 70 ff ff ff 	mov    -0x90(%rbp),%rsi
  406995:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
  406999:	48 8b 09             	mov    (%rcx),%rcx
  40699c:	48 63 51 14          	movslq 0x14(%rcx),%rdx
  4069a0:	ff d0                	callq  *%rax
  4069a2:	89 45 8c             	mov    %eax,-0x74(%rbp)
  4069a5:	48 8d 85 40 fd ff ff 	lea    -0x2c0(%rbp),%rax
  4069ac:	48 8b 8d f0 fd ff ff 	mov    -0x210(%rbp),%rcx
  4069b3:	48 83 c1 14          	add    $0x14,%rcx
  4069b7:	48 8d 95 00 fd ff ff 	lea    -0x300(%rbp),%rdx
  4069be:	48 89 55 a0          	mov    %rdx,-0x60(%rbp)
  4069c2:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  4069c6:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
  4069ca:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
  4069cf:	74 15                	je     4069e6 <tls1_prf+0xb16>
  4069d1:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  4069d5:	48 83 38 00          	cmpq   $0x0,(%rax)
  4069d9:	74 0b                	je     4069e6 <tls1_prf+0xb16>
  4069db:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  4069df:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
  4069e4:	75 09                	jne    4069ef <tls1_prf+0xb1f>
  4069e6:	c7 45 ac 00 af ff ff 	movl   $0xffffaf00,-0x54(%rbp)
  4069ed:	eb 20                	jmp    406a0f <tls1_prf+0xb3f>
  4069ef:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  4069f3:	48 8b 00             	mov    (%rax),%rax
  4069f6:	48 8b 40 20          	mov    0x20(%rax),%rax
  4069fa:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
  4069fe:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  406a02:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
  406a06:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
  406a0a:	ff d0                	callq  *%rax
  406a0c:	89 45 ac             	mov    %eax,-0x54(%rbp)
  406a0f:	48 8d b5 20 fd ff ff 	lea    -0x2e0(%rbp),%rsi
  406a16:	48 8d bd 00 fd ff ff 	lea    -0x300(%rbp),%rdi
  406a1d:	e8 be 4a 02 00       	callq  42b4e0 <mbedtls_md_hmac_finish>
  406a22:	48 8d b5 00 fd ff ff 	lea    -0x300(%rbp),%rsi
  406a29:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  406a2d:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  406a32:	89 85 98 fc ff ff    	mov    %eax,-0x368(%rbp)
  406a38:	74 15                	je     406a4f <tls1_prf+0xb7f>
  406a3a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  406a3e:	48 83 38 00          	cmpq   $0x0,(%rax)
  406a42:	74 0b                	je     406a4f <tls1_prf+0xb7f>
  406a44:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  406a48:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
  406a4d:	75 09                	jne    406a58 <tls1_prf+0xb88>
  406a4f:	c7 45 cc 00 af ff ff 	movl   $0xffffaf00,-0x34(%rbp)
  406a56:	eb 58                	jmp    406ab0 <tls1_prf+0xbe0>
  406a58:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  406a5c:	48 8b 40 10          	mov    0x10(%rax),%rax
  406a60:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  406a64:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  406a68:	48 8b 00             	mov    (%rax),%rax
  406a6b:	48 8b 40 18          	mov    0x18(%rax),%rax
  406a6f:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  406a73:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  406a77:	ff d0                	callq  *%rax
  406a79:	89 45 bc             	mov    %eax,-0x44(%rbp)
  406a7c:	83 f8 00             	cmp    $0x0,%eax
  406a7f:	74 08                	je     406a89 <tls1_prf+0xbb9>
  406a81:	8b 45 bc             	mov    -0x44(%rbp),%eax
  406a84:	89 45 cc             	mov    %eax,-0x34(%rbp)
  406a87:	eb 27                	jmp    406ab0 <tls1_prf+0xbe0>
  406a89:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  406a8d:	48 8b 00             	mov    (%rax),%rax
  406a90:	48 8b 40 20          	mov    0x20(%rax),%rax
  406a94:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  406a98:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  406a9c:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
  406aa0:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  406aa4:	48 8b 09             	mov    (%rcx),%rcx
  406aa7:	48 63 51 14          	movslq 0x14(%rcx),%rdx
  406aab:	ff d0                	callq  *%rax
  406aad:	89 45 cc             	mov    %eax,-0x34(%rbp)
  406ab0:	48 8d 85 40 fd ff ff 	lea    -0x2c0(%rbp),%rax
  406ab7:	48 8d 8d 00 fd ff ff 	lea    -0x300(%rbp),%rcx
  406abe:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  406ac2:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  406ac6:	48 c7 45 d0 14 00 00 	movq   $0x14,-0x30(%rbp)
  406acd:	00 
  406ace:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  406ad3:	74 15                	je     406aea <tls1_prf+0xc1a>
  406ad5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  406ad9:	48 83 38 00          	cmpq   $0x0,(%rax)
  406add:	74 0b                	je     406aea <tls1_prf+0xc1a>
  406adf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  406ae3:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
  406ae8:	75 09                	jne    406af3 <tls1_prf+0xc23>
  406aea:	c7 45 ec 00 af ff ff 	movl   $0xffffaf00,-0x14(%rbp)
  406af1:	eb 20                	jmp    406b13 <tls1_prf+0xc43>
  406af3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  406af7:	48 8b 00             	mov    (%rax),%rax
  406afa:	48 8b 40 20          	mov    0x20(%rax),%rax
  406afe:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  406b02:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  406b06:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  406b0a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  406b0e:	ff d0                	callq  *%rax
  406b10:	89 45 ec             	mov    %eax,-0x14(%rbp)
  406b13:	48 8d b5 40 fd ff ff 	lea    -0x2c0(%rbp),%rsi
  406b1a:	48 8d bd 00 fd ff ff 	lea    -0x300(%rbp),%rdi
  406b21:	e8 ba 49 02 00       	callq  42b4e0 <mbedtls_md_hmac_finish>
  406b26:	48 8b b5 e0 fd ff ff 	mov    -0x220(%rbp),%rsi
  406b2d:	48 83 c6 14          	add    $0x14,%rsi
  406b31:	48 3b 75 10          	cmp    0x10(%rbp),%rsi
  406b35:	89 85 94 fc ff ff    	mov    %eax,-0x36c(%rbp)
  406b3b:	76 19                	jbe    406b56 <tls1_prf+0xc86>
  406b3d:	b8 14 00 00 00       	mov    $0x14,%eax
  406b42:	89 c1                	mov    %eax,%ecx
  406b44:	48 8b 45 10          	mov    0x10(%rbp),%rax
  406b48:	31 d2                	xor    %edx,%edx
  406b4a:	48 f7 f1             	div    %rcx
  406b4d:	48 89 95 88 fc ff ff 	mov    %rdx,-0x378(%rbp)
  406b54:	eb 10                	jmp    406b66 <tls1_prf+0xc96>
  406b56:	b8 14 00 00 00       	mov    $0x14,%eax
  406b5b:	89 c1                	mov    %eax,%ecx
  406b5d:	48 89 8d 88 fc ff ff 	mov    %rcx,-0x378(%rbp)
  406b64:	eb 00                	jmp    406b66 <tls1_prf+0xc96>
  406b66:	48 8b 85 88 fc ff ff 	mov    -0x378(%rbp),%rax
  406b6d:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
  406b74:	48 c7 85 d8 fd ff ff 	movq   $0x0,-0x228(%rbp)
  406b7b:	00 00 00 00 
  406b7f:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
  406b86:	48 3b 85 d0 fd ff ff 	cmp    -0x230(%rbp),%rax
  406b8d:	73 5a                	jae    406be9 <tls1_prf+0xd19>
  406b8f:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
  406b96:	48 8b 8d e0 fd ff ff 	mov    -0x220(%rbp),%rcx
  406b9d:	48 03 8d d8 fd ff ff 	add    -0x228(%rbp),%rcx
  406ba4:	0f b6 14 08          	movzbl (%rax,%rcx,1),%edx
  406ba8:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
  406baf:	0f b6 b4 05 20 fd ff 	movzbl -0x2e0(%rbp,%rax,1),%esi
  406bb6:	ff 
  406bb7:	31 f2                	xor    %esi,%edx
  406bb9:	40 88 d7             	mov    %dl,%dil
  406bbc:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
  406bc3:	48 8b 8d e0 fd ff ff 	mov    -0x220(%rbp),%rcx
  406bca:	48 03 8d d8 fd ff ff 	add    -0x228(%rbp),%rcx
  406bd1:	40 88 3c 08          	mov    %dil,(%rax,%rcx,1)
  406bd5:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
  406bdc:	48 83 c0 01          	add    $0x1,%rax
  406be0:	48 89 85 d8 fd ff ff 	mov    %rax,-0x228(%rbp)
  406be7:	eb 96                	jmp    406b7f <tls1_prf+0xcaf>
  406be9:	eb 00                	jmp    406beb <tls1_prf+0xd1b>
  406beb:	48 8b 85 e0 fd ff ff 	mov    -0x220(%rbp),%rax
  406bf2:	48 83 c0 14          	add    $0x14,%rax
  406bf6:	48 89 85 e0 fd ff ff 	mov    %rax,-0x220(%rbp)
  406bfd:	e9 fe fc ff ff       	jmpq   406900 <tls1_prf+0xa30>
  406c02:	48 8d bd 00 fd ff ff 	lea    -0x300(%rbp),%rdi
  406c09:	e8 52 43 02 00       	callq  42af60 <mbedtls_md_free>
  406c0e:	31 f6                	xor    %esi,%esi
  406c10:	48 8d bd 40 fd ff ff 	lea    -0x2c0(%rbp),%rdi
  406c17:	48 89 bd 60 fe ff ff 	mov    %rdi,-0x1a0(%rbp)
  406c1e:	48 c7 85 58 fe ff ff 	movq   $0x80,-0x1a8(%rbp)
  406c25:	80 00 00 00 
  406c29:	48 8b 3c 25 70 e3 44 	mov    0x44e370,%rdi
  406c30:	00 
  406c31:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
  406c38:	48 8b 95 58 fe ff ff 	mov    -0x1a8(%rbp),%rdx
  406c3f:	48 89 bd 80 fc ff ff 	mov    %rdi,-0x380(%rbp)
  406c46:	48 89 c7             	mov    %rax,%rdi
  406c49:	48 8b 85 80 fc ff ff 	mov    -0x380(%rbp),%rax
  406c50:	ff d0                	callq  *%rax
  406c52:	31 f6                	xor    %esi,%esi
  406c54:	48 8d 95 20 fd ff ff 	lea    -0x2e0(%rbp),%rdx
  406c5b:	48 89 95 40 fe ff ff 	mov    %rdx,-0x1c0(%rbp)
  406c62:	48 c7 85 38 fe ff ff 	movq   $0x14,-0x1c8(%rbp)
  406c69:	14 00 00 00 
  406c6d:	48 8b 14 25 70 e3 44 	mov    0x44e370,%rdx
  406c74:	00 
  406c75:	48 8b bd 40 fe ff ff 	mov    -0x1c0(%rbp),%rdi
  406c7c:	48 8b 8d 38 fe ff ff 	mov    -0x1c8(%rbp),%rcx
  406c83:	48 89 95 78 fc ff ff 	mov    %rdx,-0x388(%rbp)
  406c8a:	48 89 ca             	mov    %rcx,%rdx
  406c8d:	48 8b 8d 78 fc ff ff 	mov    -0x388(%rbp),%rcx
  406c94:	48 89 85 70 fc ff ff 	mov    %rax,-0x390(%rbp)
  406c9b:	ff d1                	callq  *%rcx
  406c9d:	c7 85 2c fe ff ff 00 	movl   $0x0,-0x1d4(%rbp)
  406ca4:	00 00 00 
  406ca7:	48 89 85 68 fc ff ff 	mov    %rax,-0x398(%rbp)
  406cae:	8b 85 2c fe ff ff    	mov    -0x1d4(%rbp),%eax
  406cb4:	89 85 64 fc ff ff    	mov    %eax,-0x39c(%rbp)
  406cba:	e8 97 ec 03 00       	callq  445956 <writeback_cache>
  406cbf:	8b 85 64 fc ff ff    	mov    -0x39c(%rbp),%eax
  406cc5:	48 81 c4 90 03 00 00 	add    $0x390,%rsp
  406ccc:	5b                   	pop    %rbx
  406ccd:	41 5e                	pop    %r14
  406ccf:	5d                   	pop    %rbp
  406cd0:	c3                   	retq   
  406cd1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  406cd8:	0f 1f 84 00 00 00 00 
  406cdf:	00 

0000000000406ce0 <ssl_calc_verify_tls>:
  406ce0:	55                   	push   %rbp
  406ce1:	48 89 e5             	mov    %rsp,%rbp
  406ce4:	48 81 ec 70 01 00 00 	sub    $0x170,%rsp
  406ceb:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
  406cef:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
  406cf3:	eb 00                	jmp    406cf5 <ssl_calc_verify_tls+0x15>
  406cf5:	b8 5c 00 00 00       	mov    $0x5c,%eax
  406cfa:	89 c1                	mov    %eax,%ecx
  406cfc:	b8 58 00 00 00       	mov    $0x58,%eax
  406d01:	89 c2                	mov    %eax,%edx
  406d03:	31 c0                	xor    %eax,%eax
  406d05:	48 8d b5 38 ff ff ff 	lea    -0xc8(%rbp),%rsi
  406d0c:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
  406d10:	48 8b 7d a0          	mov    -0x60(%rbp),%rdi
  406d14:	48 89 b5 d0 fe ff ff 	mov    %rsi,-0x130(%rbp)
  406d1b:	89 c6                	mov    %eax,%esi
  406d1d:	48 89 95 c8 fe ff ff 	mov    %rdx,-0x138(%rbp)
  406d24:	48 89 8d c0 fe ff ff 	mov    %rcx,-0x140(%rbp)
  406d2b:	89 85 bc fe ff ff    	mov    %eax,-0x144(%rbp)
  406d31:	e8 ea a2 ff ff       	callq  401020 <memset@plt>
  406d36:	48 8d 8d d8 fe ff ff 	lea    -0x128(%rbp),%rcx
  406d3d:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
  406d41:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  406d45:	48 89 d7             	mov    %rdx,%rdi
  406d48:	8b b5 bc fe ff ff    	mov    -0x144(%rbp),%esi
  406d4e:	48 8b 95 c0 fe ff ff 	mov    -0x140(%rbp),%rdx
  406d55:	48 89 8d b0 fe ff ff 	mov    %rcx,-0x150(%rbp)
  406d5c:	e8 bf a2 ff ff       	callq  401020 <memset@plt>
  406d61:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
  406d65:	48 8b 49 58          	mov    0x58(%rcx),%rcx
  406d69:	48 83 c1 08          	add    $0x8,%rcx
  406d6d:	48 8b 95 d0 fe ff ff 	mov    -0x130(%rbp),%rdx
  406d74:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  406d78:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  406d7c:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  406d80:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  406d84:	48 89 bd a8 fe ff ff 	mov    %rdi,-0x158(%rbp)
  406d8b:	48 89 cf             	mov    %rcx,%rdi
  406d8e:	48 8b b5 a8 fe ff ff 	mov    -0x158(%rbp),%rsi
  406d95:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
  406d9c:	e8 cf a3 ff ff       	callq  401170 <memcpy@plt>
  406da1:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
  406da5:	48 8b 49 58          	mov    0x58(%rcx),%rcx
  406da9:	48 83 c1 60          	add    $0x60,%rcx
  406dad:	48 8b 95 b0 fe ff ff 	mov    -0x150(%rbp),%rdx
  406db4:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
  406db8:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
  406dbc:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  406dc0:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  406dc4:	48 89 cf             	mov    %rcx,%rdi
  406dc7:	48 8b 95 c0 fe ff ff 	mov    -0x140(%rbp),%rdx
  406dce:	e8 9d a3 ff ff       	callq  401170 <memcpy@plt>
  406dd3:	48 8b 75 90          	mov    -0x70(%rbp),%rsi
  406dd7:	48 8b bd d0 fe ff ff 	mov    -0x130(%rbp),%rdi
  406dde:	e8 8d 5a 02 00       	callq  42c870 <mbedtls_md5_finish_ret>
  406de3:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  406de7:	48 83 c1 10          	add    $0x10,%rcx
  406deb:	48 8d bd d8 fe ff ff 	lea    -0x128(%rbp),%rdi
  406df2:	48 89 ce             	mov    %rcx,%rsi
  406df5:	89 85 a4 fe ff ff    	mov    %eax,-0x15c(%rbp)
  406dfb:	e8 10 8f 03 00       	callq  43fd10 <mbedtls_sha1_finish_ret>
  406e00:	89 85 a0 fe ff ff    	mov    %eax,-0x160(%rbp)
  406e06:	eb 00                	jmp    406e08 <ssl_calc_verify_tls+0x128>
  406e08:	eb 00                	jmp    406e0a <ssl_calc_verify_tls+0x12a>
  406e0a:	eb 00                	jmp    406e0c <ssl_calc_verify_tls+0x12c>
  406e0c:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
  406e13:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  406e17:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  406e1c:	75 02                	jne    406e20 <ssl_calc_verify_tls+0x140>
  406e1e:	eb 2b                	jmp    406e4b <ssl_calc_verify_tls+0x16b>
  406e20:	31 f6                	xor    %esi,%esi
  406e22:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  406e26:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  406e2a:	48 c7 45 d0 58 00 00 	movq   $0x58,-0x30(%rbp)
  406e31:	00 
  406e32:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  406e39:	00 
  406e3a:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  406e3e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  406e42:	ff d0                	callq  *%rax
  406e44:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
  406e4b:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
  406e52:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  406e56:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
  406e5b:	75 02                	jne    406e5f <ssl_calc_verify_tls+0x17f>
  406e5d:	eb 2b                	jmp    406e8a <ssl_calc_verify_tls+0x1aa>
  406e5f:	31 f6                	xor    %esi,%esi
  406e61:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  406e65:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  406e69:	48 c7 45 b0 5c 00 00 	movq   $0x5c,-0x50(%rbp)
  406e70:	00 
  406e71:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  406e78:	00 
  406e79:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
  406e7d:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
  406e81:	ff d0                	callq  *%rax
  406e83:	48 89 85 90 fe ff ff 	mov    %rax,-0x170(%rbp)
  406e8a:	e8 c7 ea 03 00       	callq  445956 <writeback_cache>
  406e8f:	48 81 c4 70 01 00 00 	add    $0x170,%rsp
  406e96:	5d                   	pop    %rbp
  406e97:	c3                   	retq   
  406e98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  406e9f:	00 

0000000000406ea0 <ssl_calc_finished_tls>:
  406ea0:	55                   	push   %rbp
  406ea1:	48 89 e5             	mov    %rsp,%rbp
  406ea4:	48 81 ec e0 01 00 00 	sub    $0x1e0,%rsp
  406eab:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
  406eaf:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
  406eb3:	89 95 7c ff ff ff    	mov    %edx,-0x84(%rbp)
  406eb9:	c7 85 78 ff ff ff 0c 	movl   $0xc,-0x88(%rbp)
  406ec0:	00 00 00 
  406ec3:	48 8b 75 88          	mov    -0x78(%rbp),%rsi
  406ec7:	48 8b 76 50          	mov    0x50(%rsi),%rsi
  406ecb:	48 89 b5 88 fe ff ff 	mov    %rsi,-0x178(%rbp)
  406ed2:	48 83 bd 88 fe ff ff 	cmpq   $0x0,-0x178(%rbp)
  406ed9:	00 
  406eda:	75 0f                	jne    406eeb <ssl_calc_finished_tls+0x4b>
  406edc:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  406ee0:	48 8b 40 48          	mov    0x48(%rax),%rax
  406ee4:	48 89 85 88 fe ff ff 	mov    %rax,-0x178(%rbp)
  406eeb:	eb 00                	jmp    406eed <ssl_calc_finished_tls+0x4d>
  406eed:	eb 00                	jmp    406eef <ssl_calc_finished_tls+0x4f>
  406eef:	b8 5c 00 00 00       	mov    $0x5c,%eax
  406ef4:	89 c1                	mov    %eax,%ecx
  406ef6:	b8 58 00 00 00       	mov    $0x58,%eax
  406efb:	89 c2                	mov    %eax,%edx
  406efd:	31 c0                	xor    %eax,%eax
  406eff:	48 8d b5 18 ff ff ff 	lea    -0xe8(%rbp),%rsi
  406f06:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
  406f0a:	48 8b 7d 90          	mov    -0x70(%rbp),%rdi
  406f0e:	48 89 b5 80 fe ff ff 	mov    %rsi,-0x180(%rbp)
  406f15:	89 c6                	mov    %eax,%esi
  406f17:	48 89 95 78 fe ff ff 	mov    %rdx,-0x188(%rbp)
  406f1e:	48 89 8d 70 fe ff ff 	mov    %rcx,-0x190(%rbp)
  406f25:	89 85 6c fe ff ff    	mov    %eax,-0x194(%rbp)
  406f2b:	e8 f0 a0 ff ff       	callq  401020 <memset@plt>
  406f30:	48 8d 8d b8 fe ff ff 	lea    -0x148(%rbp),%rcx
  406f37:	48 89 4d a8          	mov    %rcx,-0x58(%rbp)
  406f3b:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
  406f3f:	48 89 d7             	mov    %rdx,%rdi
  406f42:	8b b5 6c fe ff ff    	mov    -0x194(%rbp),%esi
  406f48:	48 8b 95 70 fe ff ff 	mov    -0x190(%rbp),%rdx
  406f4f:	48 89 8d 60 fe ff ff 	mov    %rcx,-0x1a0(%rbp)
  406f56:	e8 c5 a0 ff ff       	callq  401020 <memset@plt>
  406f5b:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
  406f5f:	48 8b 49 58          	mov    0x58(%rcx),%rcx
  406f63:	48 83 c1 08          	add    $0x8,%rcx
  406f67:	48 8b 95 80 fe ff ff 	mov    -0x180(%rbp),%rdx
  406f6e:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
  406f72:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
  406f76:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  406f7a:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  406f7e:	48 89 bd 58 fe ff ff 	mov    %rdi,-0x1a8(%rbp)
  406f85:	48 89 cf             	mov    %rcx,%rdi
  406f88:	48 8b b5 58 fe ff ff 	mov    -0x1a8(%rbp),%rsi
  406f8f:	48 8b 95 78 fe ff ff 	mov    -0x188(%rbp),%rdx
  406f96:	e8 d5 a1 ff ff       	callq  401170 <memcpy@plt>
  406f9b:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
  406f9f:	48 8b 49 58          	mov    0x58(%rcx),%rcx
  406fa3:	48 83 c1 60          	add    $0x60,%rcx
  406fa7:	48 8b 95 60 fe ff ff 	mov    -0x1a0(%rbp),%rdx
  406fae:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
  406fb2:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
  406fb6:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  406fba:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  406fbe:	48 89 cf             	mov    %rcx,%rdi
  406fc1:	48 8b 95 70 fe ff ff 	mov    -0x190(%rbp),%rdx
  406fc8:	e8 a3 a1 ff ff       	callq  401170 <memcpy@plt>
  406fcd:	eb 00                	jmp    406fcf <ssl_calc_finished_tls+0x12f>
  406fcf:	eb 00                	jmp    406fd1 <ssl_calc_finished_tls+0x131>
  406fd1:	eb 00                	jmp    406fd3 <ssl_calc_finished_tls+0x133>
  406fd3:	48 8d b5 90 fe ff ff 	lea    -0x170(%rbp),%rsi
  406fda:	48 b8 70 73 44 00 00 	movabs $0x447370,%rax
  406fe1:	00 00 00 
  406fe4:	48 b9 60 73 44 00 00 	movabs $0x447360,%rcx
  406feb:	00 00 00 
  406fee:	8b 95 7c ff ff ff    	mov    -0x84(%rbp),%edx
  406ff4:	83 fa 00             	cmp    $0x0,%edx
  406ff7:	48 0f 44 c1          	cmove  %rcx,%rax
  406ffb:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
  407002:	48 8d bd 18 ff ff ff 	lea    -0xe8(%rbp),%rdi
  407009:	e8 62 58 02 00       	callq  42c870 <mbedtls_md5_finish_ret>
  40700e:	48 8d 8d 90 fe ff ff 	lea    -0x170(%rbp),%rcx
  407015:	48 83 c1 10          	add    $0x10,%rcx
  407019:	48 8d bd b8 fe ff ff 	lea    -0x148(%rbp),%rdi
  407020:	48 89 ce             	mov    %rcx,%rsi
  407023:	89 85 54 fe ff ff    	mov    %eax,-0x1ac(%rbp)
  407029:	e8 e2 8c 03 00       	callq  43fd10 <mbedtls_sha1_finish_ret>
  40702e:	ba 30 00 00 00       	mov    $0x30,%edx
  407033:	89 d6                	mov    %edx,%esi
  407035:	ba 24 00 00 00       	mov    $0x24,%edx
  40703a:	41 89 d0             	mov    %edx,%r8d
  40703d:	48 8d 8d 90 fe ff ff 	lea    -0x170(%rbp),%rcx
  407044:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
  407048:	48 8b 7f 58          	mov    0x58(%rdi),%rdi
  40704c:	48 8b bf d8 00 00 00 	mov    0xd8(%rdi),%rdi
  407053:	4c 8b 8d 88 fe ff ff 	mov    -0x178(%rbp),%r9
  40705a:	49 83 c1 38          	add    $0x38,%r9
  40705e:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
  407065:	4c 8b 55 80          	mov    -0x80(%rbp),%r10
  407069:	4c 63 9d 78 ff ff ff 	movslq -0x88(%rbp),%r11
  407070:	48 89 bd 48 fe ff ff 	mov    %rdi,-0x1b8(%rbp)
  407077:	4c 89 cf             	mov    %r9,%rdi
  40707a:	4d 89 d1             	mov    %r10,%r9
  40707d:	4c 89 1c 24          	mov    %r11,(%rsp)
  407081:	4c 8b 95 48 fe ff ff 	mov    -0x1b8(%rbp),%r10
  407088:	89 85 44 fe ff ff    	mov    %eax,-0x1bc(%rbp)
  40708e:	41 ff d2             	callq  *%r10
  407091:	89 85 40 fe ff ff    	mov    %eax,-0x1c0(%rbp)
  407097:	eb 00                	jmp    407099 <ssl_calc_finished_tls+0x1f9>
  407099:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
  4070a0:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  4070a4:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  4070a9:	75 02                	jne    4070ad <ssl_calc_finished_tls+0x20d>
  4070ab:	eb 2b                	jmp    4070d8 <ssl_calc_finished_tls+0x238>
  4070ad:	31 f6                	xor    %esi,%esi
  4070af:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4070b3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4070b7:	48 c7 45 e0 58 00 00 	movq   $0x58,-0x20(%rbp)
  4070be:	00 
  4070bf:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  4070c6:	00 
  4070c7:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  4070cb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4070cf:	ff d0                	callq  *%rax
  4070d1:	48 89 85 38 fe ff ff 	mov    %rax,-0x1c8(%rbp)
  4070d8:	48 8d 85 b8 fe ff ff 	lea    -0x148(%rbp),%rax
  4070df:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  4070e3:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
  4070e8:	75 02                	jne    4070ec <ssl_calc_finished_tls+0x24c>
  4070ea:	eb 2b                	jmp    407117 <ssl_calc_finished_tls+0x277>
  4070ec:	31 f6                	xor    %esi,%esi
  4070ee:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  4070f2:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  4070f6:	48 c7 45 b8 5c 00 00 	movq   $0x5c,-0x48(%rbp)
  4070fd:	00 
  4070fe:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  407105:	00 
  407106:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  40710a:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  40710e:	ff d0                	callq  *%rax
  407110:	48 89 85 30 fe ff ff 	mov    %rax,-0x1d0(%rbp)
  407117:	31 f6                	xor    %esi,%esi
  407119:	48 8d 85 90 fe ff ff 	lea    -0x170(%rbp),%rax
  407120:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  407124:	48 c7 45 98 24 00 00 	movq   $0x24,-0x68(%rbp)
  40712b:	00 
  40712c:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  407133:	00 
  407134:	48 8b 7d a0          	mov    -0x60(%rbp),%rdi
  407138:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  40713c:	ff d0                	callq  *%rax
  40713e:	48 89 85 28 fe ff ff 	mov    %rax,-0x1d8(%rbp)
  407145:	eb 00                	jmp    407147 <ssl_calc_finished_tls+0x2a7>
  407147:	e8 0a e8 03 00       	callq  445956 <writeback_cache>
  40714c:	48 81 c4 e0 01 00 00 	add    $0x1e0,%rsp
  407153:	5d                   	pop    %rbp
  407154:	c3                   	retq   
  407155:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  40715c:	00 00 00 00 

0000000000407160 <mbedtls_ssl_fetch_input>:
  407160:	55                   	push   %rbp
  407161:	48 89 e5             	mov    %rsp,%rbp
  407164:	48 83 ec 40          	sub    $0x40,%rsp
  407168:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
  40716c:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
  407170:	eb 00                	jmp    407172 <mbedtls_ssl_fetch_input+0x12>
  407172:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  407176:	48 83 78 20 00       	cmpq   $0x0,0x20(%rax)
  40717b:	75 1b                	jne    407198 <mbedtls_ssl_fetch_input+0x38>
  40717d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  407181:	48 83 78 28 00       	cmpq   $0x0,0x28(%rax)
  407186:	75 10                	jne    407198 <mbedtls_ssl_fetch_input+0x38>
  407188:	eb 00                	jmp    40718a <mbedtls_ssl_fetch_input+0x2a>
  40718a:	eb 00                	jmp    40718c <mbedtls_ssl_fetch_input+0x2c>
  40718c:	c7 45 ec 00 8f ff ff 	movl   $0xffff8f00,-0x14(%rbp)
  407193:	e9 b0 01 00 00       	jmpq   407348 <mbedtls_ssl_fetch_input+0x1e8>
  407198:	b8 3d 41 00 00       	mov    $0x413d,%eax
  40719d:	89 c1                	mov    %eax,%ecx
  40719f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4071a3:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  4071a7:	48 8b b6 a8 00 00 00 	mov    0xa8(%rsi),%rsi
  4071ae:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  4071b2:	48 8b bf 98 00 00 00 	mov    0x98(%rdi),%rdi
  4071b9:	48 29 fe             	sub    %rdi,%rsi
  4071bc:	48 29 f1             	sub    %rsi,%rcx
  4071bf:	48 39 ca             	cmp    %rcx,%rdx
  4071c2:	76 10                	jbe    4071d4 <mbedtls_ssl_fetch_input+0x74>
  4071c4:	eb 00                	jmp    4071c6 <mbedtls_ssl_fetch_input+0x66>
  4071c6:	eb 00                	jmp    4071c8 <mbedtls_ssl_fetch_input+0x68>
  4071c8:	c7 45 ec 00 8f ff ff 	movl   $0xffff8f00,-0x14(%rbp)
  4071cf:	e9 74 01 00 00       	jmpq   407348 <mbedtls_ssl_fetch_input+0x1e8>
  4071d4:	eb 00                	jmp    4071d6 <mbedtls_ssl_fetch_input+0x76>
  4071d6:	eb 00                	jmp    4071d8 <mbedtls_ssl_fetch_input+0x78>
  4071d8:	eb 00                	jmp    4071da <mbedtls_ssl_fetch_input+0x7a>
  4071da:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4071de:	48 8b 80 e0 00 00 00 	mov    0xe0(%rax),%rax
  4071e5:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
  4071e9:	0f 83 4e 01 00 00    	jae    40733d <mbedtls_ssl_fetch_input+0x1dd>
  4071ef:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4071f3:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  4071f7:	48 2b 81 e0 00 00 00 	sub    0xe0(%rcx),%rax
  4071fe:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  407202:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  407206:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40720a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40720e:	48 83 b8 90 00 00 00 	cmpq   $0x0,0x90(%rax)
  407215:	00 
  407216:	75 09                	jne    407221 <mbedtls_ssl_fetch_input+0xc1>
  407218:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  40721f:	eb 2d                	jmp    40724e <mbedtls_ssl_fetch_input+0xee>
  407221:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  407225:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
  40722c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  407230:	48 8b b9 80 00 00 00 	mov    0x80(%rcx),%rdi
  407237:	ff d0                	callq  *%rax
  407239:	83 f8 02             	cmp    $0x2,%eax
  40723c:	75 09                	jne    407247 <mbedtls_ssl_fetch_input+0xe7>
  40723e:	c7 45 fc ff ff ff ff 	movl   $0xffffffff,-0x4(%rbp)
  407245:	eb 07                	jmp    40724e <mbedtls_ssl_fetch_input+0xee>
  407247:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  40724e:	8b 45 fc             	mov    -0x4(%rbp),%eax
  407251:	83 f8 00             	cmp    $0x0,%eax
  407254:	74 0c                	je     407262 <mbedtls_ssl_fetch_input+0x102>
  407256:	c7 45 d4 00 98 ff ff 	movl   $0xffff9800,-0x2c(%rbp)
  40725d:	e9 84 00 00 00       	jmpq   4072e6 <mbedtls_ssl_fetch_input+0x186>
  407262:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  407266:	48 83 78 28 00       	cmpq   $0x0,0x28(%rax)
  40726b:	74 45                	je     4072b2 <mbedtls_ssl_fetch_input+0x152>
  40726d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  407271:	48 8b 40 28          	mov    0x28(%rax),%rax
  407275:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  407279:	48 8b 79 30          	mov    0x30(%rcx),%rdi
  40727d:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  407281:	48 8b 89 a8 00 00 00 	mov    0xa8(%rcx),%rcx
  407288:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40728c:	48 03 8a e0 00 00 00 	add    0xe0(%rdx),%rcx
  407293:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  407297:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  40729b:	48 8b 36             	mov    (%rsi),%rsi
  40729e:	44 8b 86 90 00 00 00 	mov    0x90(%rsi),%r8d
  4072a5:	48 89 ce             	mov    %rcx,%rsi
  4072a8:	44 89 c1             	mov    %r8d,%ecx
  4072ab:	ff d0                	callq  *%rax
  4072ad:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  4072b0:	eb 32                	jmp    4072e4 <mbedtls_ssl_fetch_input+0x184>
  4072b2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4072b6:	48 8b 40 20          	mov    0x20(%rax),%rax
  4072ba:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  4072be:	48 8b 79 30          	mov    0x30(%rcx),%rdi
  4072c2:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  4072c6:	48 8b 89 a8 00 00 00 	mov    0xa8(%rcx),%rcx
  4072cd:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4072d1:	48 03 8a e0 00 00 00 	add    0xe0(%rdx),%rcx
  4072d8:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  4072dc:	48 89 ce             	mov    %rcx,%rsi
  4072df:	ff d0                	callq  *%rax
  4072e1:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  4072e4:	eb 00                	jmp    4072e6 <mbedtls_ssl_fetch_input+0x186>
  4072e6:	eb 00                	jmp    4072e8 <mbedtls_ssl_fetch_input+0x188>
  4072e8:	eb 00                	jmp    4072ea <mbedtls_ssl_fetch_input+0x18a>
  4072ea:	eb 00                	jmp    4072ec <mbedtls_ssl_fetch_input+0x18c>
  4072ec:	eb 00                	jmp    4072ee <mbedtls_ssl_fetch_input+0x18e>
  4072ee:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
  4072f2:	75 09                	jne    4072fd <mbedtls_ssl_fetch_input+0x19d>
  4072f4:	c7 45 ec 80 8d ff ff 	movl   $0xffff8d80,-0x14(%rbp)
  4072fb:	eb 4b                	jmp    407348 <mbedtls_ssl_fetch_input+0x1e8>
  4072fd:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
  407301:	7d 08                	jge    40730b <mbedtls_ssl_fetch_input+0x1ab>
  407303:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  407306:	89 45 ec             	mov    %eax,-0x14(%rbp)
  407309:	eb 3d                	jmp    407348 <mbedtls_ssl_fetch_input+0x1e8>
  40730b:	48 63 45 d4          	movslq -0x2c(%rbp),%rax
  40730f:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
  407313:	76 0d                	jbe    407322 <mbedtls_ssl_fetch_input+0x1c2>
  407315:	eb 00                	jmp    407317 <mbedtls_ssl_fetch_input+0x1b7>
  407317:	eb 00                	jmp    407319 <mbedtls_ssl_fetch_input+0x1b9>
  407319:	c7 45 ec 00 94 ff ff 	movl   $0xffff9400,-0x14(%rbp)
  407320:	eb 26                	jmp    407348 <mbedtls_ssl_fetch_input+0x1e8>
  407322:	48 63 45 d4          	movslq -0x2c(%rbp),%rax
  407326:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40732a:	48 03 81 e0 00 00 00 	add    0xe0(%rcx),%rax
  407331:	48 89 81 e0 00 00 00 	mov    %rax,0xe0(%rcx)
  407338:	e9 9d fe ff ff       	jmpq   4071da <mbedtls_ssl_fetch_input+0x7a>
  40733d:	eb 00                	jmp    40733f <mbedtls_ssl_fetch_input+0x1df>
  40733f:	eb 00                	jmp    407341 <mbedtls_ssl_fetch_input+0x1e1>
  407341:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  407348:	8b 45 ec             	mov    -0x14(%rbp),%eax
  40734b:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  40734e:	e8 03 e6 03 00       	callq  445956 <writeback_cache>
  407353:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  407356:	48 83 c4 40          	add    $0x40,%rsp
  40735a:	5d                   	pop    %rbp
  40735b:	c3                   	retq   
  40735c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000407360 <mbedtls_ssl_flush_output>:
  407360:	55                   	push   %rbp
  407361:	48 89 e5             	mov    %rsp,%rbp
  407364:	48 83 ec 40          	sub    $0x40,%rsp
  407368:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
  40736c:	eb 00                	jmp    40736e <mbedtls_ssl_flush_output+0xe>
  40736e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  407372:	48 83 78 18 00       	cmpq   $0x0,0x18(%rax)
  407377:	75 10                	jne    407389 <mbedtls_ssl_flush_output+0x29>
  407379:	eb 00                	jmp    40737b <mbedtls_ssl_flush_output+0x1b>
  40737b:	eb 00                	jmp    40737d <mbedtls_ssl_flush_output+0x1d>
  40737d:	c7 45 ec 00 8f ff ff 	movl   $0xffff8f00,-0x14(%rbp)
  407384:	e9 a8 01 00 00       	jmpq   407531 <mbedtls_ssl_flush_output+0x1d1>
  407389:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40738d:	48 83 b8 38 01 00 00 	cmpq   $0x0,0x138(%rax)
  407394:	00 
  407395:	75 10                	jne    4073a7 <mbedtls_ssl_flush_output+0x47>
  407397:	eb 00                	jmp    407399 <mbedtls_ssl_flush_output+0x39>
  407399:	eb 00                	jmp    40739b <mbedtls_ssl_flush_output+0x3b>
  40739b:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  4073a2:	e9 8a 01 00 00       	jmpq   407531 <mbedtls_ssl_flush_output+0x1d1>
  4073a7:	eb 00                	jmp    4073a9 <mbedtls_ssl_flush_output+0x49>
  4073a9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4073ad:	48 83 b8 38 01 00 00 	cmpq   $0x0,0x138(%rax)
  4073b4:	00 
  4073b5:	0f 86 9b 00 00 00    	jbe    407456 <mbedtls_ssl_flush_output+0xf6>
  4073bb:	eb 00                	jmp    4073bd <mbedtls_ssl_flush_output+0x5d>
  4073bd:	eb 00                	jmp    4073bf <mbedtls_ssl_flush_output+0x5f>
  4073bf:	31 c0                	xor    %eax,%eax
  4073c1:	89 c1                	mov    %eax,%ecx
  4073c3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4073c7:	48 8b 92 08 01 00 00 	mov    0x108(%rdx),%rdx
  4073ce:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  4073d2:	48 2b 8e 38 01 00 00 	sub    0x138(%rsi),%rcx
  4073d9:	48 01 ca             	add    %rcx,%rdx
  4073dc:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
  4073e0:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  4073e4:	48 8b 49 18          	mov    0x18(%rcx),%rcx
  4073e8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4073ec:	48 8b 7a 30          	mov    0x30(%rdx),%rdi
  4073f0:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  4073f4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4073f8:	48 8b 92 38 01 00 00 	mov    0x138(%rdx),%rdx
  4073ff:	ff d1                	callq  *%rcx
  407401:	89 45 dc             	mov    %eax,-0x24(%rbp)
  407404:	eb 00                	jmp    407406 <mbedtls_ssl_flush_output+0xa6>
  407406:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
  40740a:	7f 0b                	jg     407417 <mbedtls_ssl_flush_output+0xb7>
  40740c:	8b 45 dc             	mov    -0x24(%rbp),%eax
  40740f:	89 45 ec             	mov    %eax,-0x14(%rbp)
  407412:	e9 1a 01 00 00       	jmpq   407531 <mbedtls_ssl_flush_output+0x1d1>
  407417:	48 63 45 dc          	movslq -0x24(%rbp),%rax
  40741b:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40741f:	48 3b 81 38 01 00 00 	cmp    0x138(%rcx),%rax
  407426:	76 10                	jbe    407438 <mbedtls_ssl_flush_output+0xd8>
  407428:	eb 00                	jmp    40742a <mbedtls_ssl_flush_output+0xca>
  40742a:	eb 00                	jmp    40742c <mbedtls_ssl_flush_output+0xcc>
  40742c:	c7 45 ec 00 94 ff ff 	movl   $0xffff9400,-0x14(%rbp)
  407433:	e9 f9 00 00 00       	jmpq   407531 <mbedtls_ssl_flush_output+0x1d1>
  407438:	48 63 45 dc          	movslq -0x24(%rbp),%rax
  40743c:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  407440:	48 8b 91 38 01 00 00 	mov    0x138(%rcx),%rdx
  407447:	48 29 c2             	sub    %rax,%rdx
  40744a:	48 89 91 38 01 00 00 	mov    %rdx,0x138(%rcx)
  407451:	e9 53 ff ff ff       	jmpq   4073a9 <mbedtls_ssl_flush_output+0x49>
  407456:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40745a:	48 8b 80 f8 00 00 00 	mov    0xf8(%rax),%rax
  407461:	48 83 c0 08          	add    $0x8,%rax
  407465:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  407469:	48 89 81 08 01 00 00 	mov    %rax,0x108(%rcx)
  407470:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  407474:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  407478:	48 8b 49 68          	mov    0x68(%rcx),%rcx
  40747c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  407480:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
  407484:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  407488:	48 8b 80 08 01 00 00 	mov    0x108(%rax),%rax
  40748f:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
  407493:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  407497:	48 89 81 00 01 00 00 	mov    %rax,0x100(%rcx)
  40749e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4074a2:	48 8b 80 08 01 00 00 	mov    0x108(%rax),%rax
  4074a9:	48 83 c0 03          	add    $0x3,%rax
  4074ad:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  4074b1:	48 89 81 10 01 00 00 	mov    %rax,0x110(%rcx)
  4074b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4074bc:	48 8b 80 08 01 00 00 	mov    0x108(%rax),%rax
  4074c3:	48 83 c0 05          	add    $0x5,%rax
  4074c7:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  4074cb:	48 89 81 18 01 00 00 	mov    %rax,0x118(%rcx)
  4074d2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  4074d7:	74 39                	je     407512 <mbedtls_ssl_flush_output+0x1b2>
  4074d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4074dd:	83 78 10 02          	cmpl   $0x2,0x10(%rax)
  4074e1:	7c 2f                	jl     407512 <mbedtls_ssl_flush_output+0x1b2>
  4074e3:	31 c0                	xor    %eax,%eax
  4074e5:	89 c1                	mov    %eax,%ecx
  4074e7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4074eb:	48 8b 92 18 01 00 00 	mov    0x118(%rdx),%rdx
  4074f2:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  4074f6:	48 03 56 18          	add    0x18(%rsi),%rdx
  4074fa:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  4074fe:	48 2b 4e 20          	sub    0x20(%rsi),%rcx
  407502:	48 01 ca             	add    %rcx,%rdx
  407505:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  407509:	48 89 91 20 01 00 00 	mov    %rdx,0x120(%rcx)
  407510:	eb 16                	jmp    407528 <mbedtls_ssl_flush_output+0x1c8>
  407512:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  407516:	48 8b 80 18 01 00 00 	mov    0x118(%rax),%rax
  40751d:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  407521:	48 89 81 20 01 00 00 	mov    %rax,0x120(%rcx)
  407528:	eb 00                	jmp    40752a <mbedtls_ssl_flush_output+0x1ca>
  40752a:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  407531:	8b 45 ec             	mov    -0x14(%rbp),%eax
  407534:	89 45 cc             	mov    %eax,-0x34(%rbp)
  407537:	e8 1a e4 03 00       	callq  445956 <writeback_cache>
  40753c:	8b 45 cc             	mov    -0x34(%rbp),%eax
  40753f:	48 83 c4 40          	add    $0x40,%rsp
  407543:	5d                   	pop    %rbp
  407544:	c3                   	retq   
  407545:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  40754c:	00 00 00 00 

0000000000407550 <mbedtls_ssl_write_handshake_msg>:
  407550:	55                   	push   %rbp
  407551:	48 89 e5             	mov    %rsp,%rbp
  407554:	48 83 ec 30          	sub    $0x30,%rsp
  407558:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  40755c:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  407560:	48 8b bf 30 01 00 00 	mov    0x130(%rdi),%rdi
  407567:	48 83 ef 04          	sub    $0x4,%rdi
  40756b:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
  40756f:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  407573:	48 8b bf 20 01 00 00 	mov    0x120(%rdi),%rdi
  40757a:	8a 07                	mov    (%rdi),%al
  40757c:	88 45 df             	mov    %al,-0x21(%rbp)
  40757f:	eb 00                	jmp    407581 <mbedtls_ssl_write_handshake_msg+0x31>
  407581:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  407585:	83 b8 28 01 00 00 16 	cmpl   $0x16,0x128(%rax)
  40758c:	74 1d                	je     4075ab <mbedtls_ssl_write_handshake_msg+0x5b>
  40758e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  407592:	83 b8 28 01 00 00 14 	cmpl   $0x14,0x128(%rax)
  407599:	74 10                	je     4075ab <mbedtls_ssl_write_handshake_msg+0x5b>
  40759b:	eb 00                	jmp    40759d <mbedtls_ssl_write_handshake_msg+0x4d>
  40759d:	eb 00                	jmp    40759f <mbedtls_ssl_write_handshake_msg+0x4f>
  40759f:	c7 45 fc 00 94 ff ff 	movl   $0xffff9400,-0x4(%rbp)
  4075a6:	e9 06 01 00 00       	jmpq   4076b1 <mbedtls_ssl_write_handshake_msg+0x161>
  4075ab:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4075af:	83 b8 28 01 00 00 16 	cmpl   $0x16,0x128(%rax)
  4075b6:	75 09                	jne    4075c1 <mbedtls_ssl_write_handshake_msg+0x71>
  4075b8:	0f b6 45 df          	movzbl -0x21(%rbp),%eax
  4075bc:	83 f8 00             	cmp    $0x0,%eax
  4075bf:	74 1b                	je     4075dc <mbedtls_ssl_write_handshake_msg+0x8c>
  4075c1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4075c5:	48 83 78 58 00       	cmpq   $0x0,0x58(%rax)
  4075ca:	75 10                	jne    4075dc <mbedtls_ssl_write_handshake_msg+0x8c>
  4075cc:	eb 00                	jmp    4075ce <mbedtls_ssl_write_handshake_msg+0x7e>
  4075ce:	eb 00                	jmp    4075d0 <mbedtls_ssl_write_handshake_msg+0x80>
  4075d0:	c7 45 fc 00 94 ff ff 	movl   $0xffff9400,-0x4(%rbp)
  4075d7:	e9 d5 00 00 00       	jmpq   4076b1 <mbedtls_ssl_write_handshake_msg+0x161>
  4075dc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4075e0:	48 81 b8 30 01 00 00 	cmpq   $0x4000,0x130(%rax)
  4075e7:	00 40 00 00 
  4075eb:	76 10                	jbe    4075fd <mbedtls_ssl_write_handshake_msg+0xad>
  4075ed:	eb 00                	jmp    4075ef <mbedtls_ssl_write_handshake_msg+0x9f>
  4075ef:	eb 00                	jmp    4075f1 <mbedtls_ssl_write_handshake_msg+0xa1>
  4075f1:	c7 45 fc 00 94 ff ff 	movl   $0xffff9400,-0x4(%rbp)
  4075f8:	e9 b4 00 00 00       	jmpq   4076b1 <mbedtls_ssl_write_handshake_msg+0x161>
  4075fd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  407601:	83 b8 28 01 00 00 16 	cmpl   $0x16,0x128(%rax)
  407608:	75 7a                	jne    407684 <mbedtls_ssl_write_handshake_msg+0x134>
  40760a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40760e:	48 c1 e8 10          	shr    $0x10,%rax
  407612:	88 c1                	mov    %al,%cl
  407614:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  407618:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40761f:	88 48 01             	mov    %cl,0x1(%rax)
  407622:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  407626:	48 c1 e8 08          	shr    $0x8,%rax
  40762a:	88 c1                	mov    %al,%cl
  40762c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  407630:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  407637:	88 48 02             	mov    %cl,0x2(%rax)
  40763a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40763e:	88 c1                	mov    %al,%cl
  407640:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  407644:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40764b:	88 48 03             	mov    %cl,0x3(%rax)
  40764e:	0f b6 55 df          	movzbl -0x21(%rbp),%edx
  407652:	83 fa 00             	cmp    $0x0,%edx
  407655:	74 2b                	je     407682 <mbedtls_ssl_write_handshake_msg+0x132>
  407657:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40765b:	48 8b 40 58          	mov    0x58(%rax),%rax
  40765f:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  407666:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  40766a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  40766e:	48 8b b1 20 01 00 00 	mov    0x120(%rcx),%rsi
  407675:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  407679:	48 8b 91 30 01 00 00 	mov    0x130(%rcx),%rdx
  407680:	ff d0                	callq  *%rax
  407682:	eb 00                	jmp    407684 <mbedtls_ssl_write_handshake_msg+0x134>
  407684:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  407688:	be 01 00 00 00       	mov    $0x1,%esi
  40768d:	e8 3e 00 00 00       	callq  4076d0 <mbedtls_ssl_write_record>
  407692:	89 45 ec             	mov    %eax,-0x14(%rbp)
  407695:	83 f8 00             	cmp    $0x0,%eax
  407698:	74 0c                	je     4076a6 <mbedtls_ssl_write_handshake_msg+0x156>
  40769a:	eb 00                	jmp    40769c <mbedtls_ssl_write_handshake_msg+0x14c>
  40769c:	eb 00                	jmp    40769e <mbedtls_ssl_write_handshake_msg+0x14e>
  40769e:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4076a1:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4076a4:	eb 0b                	jmp    4076b1 <mbedtls_ssl_write_handshake_msg+0x161>
  4076a6:	eb 00                	jmp    4076a8 <mbedtls_ssl_write_handshake_msg+0x158>
  4076a8:	eb 00                	jmp    4076aa <mbedtls_ssl_write_handshake_msg+0x15a>
  4076aa:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  4076b1:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4076b4:	89 45 d8             	mov    %eax,-0x28(%rbp)
  4076b7:	e8 9a e2 03 00       	callq  445956 <writeback_cache>
  4076bc:	8b 45 d8             	mov    -0x28(%rbp),%eax
  4076bf:	48 83 c4 30          	add    $0x30,%rsp
  4076c3:	5d                   	pop    %rbp
  4076c4:	c3                   	retq   
  4076c5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  4076cc:	00 00 00 00 

00000000004076d0 <mbedtls_ssl_write_record>:
  4076d0:	55                   	push   %rbp
  4076d1:	48 89 e5             	mov    %rsp,%rbp
  4076d4:	48 81 ec c0 01 00 00 	sub    $0x1c0,%rsp
  4076db:	40 88 f0             	mov    %sil,%al
  4076de:	48 89 bd 98 fe ff ff 	mov    %rdi,-0x168(%rbp)
  4076e5:	88 85 97 fe ff ff    	mov    %al,-0x169(%rbp)
  4076eb:	c7 85 8c fe ff ff 00 	movl   $0x0,-0x174(%rbp)
  4076f2:	00 00 00 
  4076f5:	48 8b bd 98 fe ff ff 	mov    -0x168(%rbp),%rdi
  4076fc:	48 8b bf 30 01 00 00 	mov    0x130(%rdi),%rdi
  407703:	48 89 bd 80 fe ff ff 	mov    %rdi,-0x180(%rbp)
  40770a:	8a 85 97 fe ff ff    	mov    -0x169(%rbp),%al
  407710:	88 85 7f fe ff ff    	mov    %al,-0x181(%rbp)
  407716:	eb 00                	jmp    407718 <mbedtls_ssl_write_record+0x48>
  407718:	83 bd 8c fe ff ff 00 	cmpl   $0x0,-0x174(%rbp)
  40771f:	0f 85 2c 0a 00 00    	jne    408151 <mbedtls_ssl_write_record+0xa81>
  407725:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  40772c:	8b 88 28 01 00 00    	mov    0x128(%rax),%ecx
  407732:	88 ca                	mov    %cl,%dl
  407734:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  40773b:	48 8b 80 08 01 00 00 	mov    0x108(%rax),%rax
  407742:	88 10                	mov    %dl,(%rax)
  407744:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  40774b:	8b 48 0c             	mov    0xc(%rax),%ecx
  40774e:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  407755:	8b 70 10             	mov    0x10(%rax),%esi
  407758:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  40775f:	48 8b 00             	mov    (%rax),%rax
  407762:	8a 90 98 00 00 00    	mov    0x98(%rax),%dl
  407768:	c0 ea 01             	shr    $0x1,%dl
  40776b:	80 e2 01             	and    $0x1,%dl
  40776e:	0f b6 fa             	movzbl %dl,%edi
  407771:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  407778:	48 8b 80 08 01 00 00 	mov    0x108(%rax),%rax
  40777f:	48 83 c0 01          	add    $0x1,%rax
  407783:	89 8d bc fe ff ff    	mov    %ecx,-0x144(%rbp)
  407789:	89 b5 b8 fe ff ff    	mov    %esi,-0x148(%rbp)
  40778f:	89 bd b4 fe ff ff    	mov    %edi,-0x14c(%rbp)
  407795:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
  40779c:	8b 8d bc fe ff ff    	mov    -0x144(%rbp),%ecx
  4077a2:	88 ca                	mov    %cl,%dl
  4077a4:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
  4077ab:	88 10                	mov    %dl,(%rax)
  4077ad:	8b 8d b8 fe ff ff    	mov    -0x148(%rbp),%ecx
  4077b3:	88 ca                	mov    %cl,%dl
  4077b5:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
  4077bc:	88 50 01             	mov    %dl,0x1(%rax)
  4077bf:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  4077c6:	48 8b 80 00 01 00 00 	mov    0x100(%rax),%rax
  4077cd:	4c 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%r8
  4077d4:	4d 8b 80 40 01 00 00 	mov    0x140(%r8),%r8
  4077db:	4c 89 00             	mov    %r8,(%rax)
  4077de:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
  4077e5:	48 c1 e8 08          	shr    $0x8,%rax
  4077e9:	88 c2                	mov    %al,%dl
  4077eb:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  4077f2:	48 8b 80 10 01 00 00 	mov    0x110(%rax),%rax
  4077f9:	88 10                	mov    %dl,(%rax)
  4077fb:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
  407802:	88 c2                	mov    %al,%dl
  407804:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  40780b:	48 8b 80 10 01 00 00 	mov    0x110(%rax),%rax
  407812:	88 50 01             	mov    %dl,0x1(%rax)
  407815:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  40781c:	48 83 78 68 00       	cmpq   $0x0,0x68(%rax)
  407821:	0f 84 7d 07 00 00    	je     407fa4 <mbedtls_ssl_write_record+0x8d4>
  407827:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  40782e:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
  407835:	c7 85 10 ff ff ff 00 	movl   $0x0,-0xf0(%rbp)
  40783c:	00 00 00 
  40783f:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  407846:	48 83 78 40 00       	cmpq   $0x0,0x40(%rax)
  40784b:	74 0e                	je     40785b <mbedtls_ssl_write_record+0x18b>
  40784d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  407854:	48 83 78 68 00       	cmpq   $0x0,0x68(%rax)
  407859:	75 0f                	jne    40786a <mbedtls_ssl_write_record+0x19a>
  40785b:	c7 85 24 ff ff ff 00 	movl   $0xffff9400,-0xdc(%rbp)
  407862:	94 ff ff 
  407865:	e9 c8 06 00 00       	jmpq   407f32 <mbedtls_ssl_write_record+0x862>
  40786a:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  407871:	48 8b 40 68          	mov    0x68(%rax),%rax
  407875:	48 05 80 00 00 00    	add    $0x80,%rax
  40787b:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
  407882:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  407889:	48 83 38 00          	cmpq   $0x0,(%rax)
  40788d:	75 0c                	jne    40789b <mbedtls_ssl_write_record+0x1cb>
  40788f:	c7 85 34 ff ff ff 00 	movl   $0x0,-0xcc(%rbp)
  407896:	00 00 00 
  407899:	eb 13                	jmp    4078ae <mbedtls_ssl_write_record+0x1de>
  40789b:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4078a2:	48 8b 00             	mov    (%rax),%rax
  4078a5:	8b 48 04             	mov    0x4(%rax),%ecx
  4078a8:	89 8d 34 ff ff ff    	mov    %ecx,-0xcc(%rbp)
  4078ae:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
  4078b4:	89 85 14 ff ff ff    	mov    %eax,-0xec(%rbp)
  4078ba:	83 bd 14 ff ff ff 07 	cmpl   $0x7,-0xec(%rbp)
  4078c1:	74 0d                	je     4078d0 <mbedtls_ssl_write_record+0x200>
  4078c3:	83 bd 14 ff ff ff 02 	cmpl   $0x2,-0xec(%rbp)
  4078ca:	0f 85 66 03 00 00    	jne    407c36 <mbedtls_ssl_write_record+0x566>
  4078d0:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  4078d7:	83 78 10 01          	cmpl   $0x1,0x10(%rax)
  4078db:	0f 8c 46 03 00 00    	jl     407c27 <mbedtls_ssl_write_record+0x557>
  4078e1:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  4078e8:	48 8b 40 68          	mov    0x68(%rax),%rax
  4078ec:	48 83 c0 50          	add    $0x50,%rax
  4078f0:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
  4078f7:	48 8b 89 00 01 00 00 	mov    0x100(%rcx),%rcx
  4078fe:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  407905:	48 89 8d 40 ff ff ff 	mov    %rcx,-0xc0(%rbp)
  40790c:	48 c7 85 38 ff ff ff 	movq   $0x8,-0xc8(%rbp)
  407913:	08 00 00 00 
  407917:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)
  40791e:	00 
  40791f:	74 1b                	je     40793c <mbedtls_ssl_write_record+0x26c>
  407921:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  407928:	48 83 38 00          	cmpq   $0x0,(%rax)
  40792c:	74 0e                	je     40793c <mbedtls_ssl_write_record+0x26c>
  40792e:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  407935:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
  40793a:	75 0c                	jne    407948 <mbedtls_ssl_write_record+0x278>
  40793c:	c7 85 54 ff ff ff 00 	movl   $0xffffaf00,-0xac(%rbp)
  407943:	af ff ff 
  407946:	eb 2f                	jmp    407977 <mbedtls_ssl_write_record+0x2a7>
  407948:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40794f:	48 8b 00             	mov    (%rax),%rax
  407952:	48 8b 40 20          	mov    0x20(%rax),%rax
  407956:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
  40795d:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  407961:	48 8b b5 40 ff ff ff 	mov    -0xc0(%rbp),%rsi
  407968:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
  40796f:	ff d0                	callq  *%rax
  407971:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
  407977:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  40797e:	48 8b 40 68          	mov    0x68(%rax),%rax
  407982:	48 83 c0 50          	add    $0x50,%rax
  407986:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
  40798d:	48 8b 89 08 01 00 00 	mov    0x108(%rcx),%rcx
  407994:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
  40799b:	48 89 8d 60 ff ff ff 	mov    %rcx,-0xa0(%rbp)
  4079a2:	48 c7 85 58 ff ff ff 	movq   $0x3,-0xa8(%rbp)
  4079a9:	03 00 00 00 
  4079ad:	48 83 bd 68 ff ff ff 	cmpq   $0x0,-0x98(%rbp)
  4079b4:	00 
  4079b5:	74 1b                	je     4079d2 <mbedtls_ssl_write_record+0x302>
  4079b7:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  4079be:	48 83 38 00          	cmpq   $0x0,(%rax)
  4079c2:	74 0e                	je     4079d2 <mbedtls_ssl_write_record+0x302>
  4079c4:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  4079cb:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
  4079d0:	75 0c                	jne    4079de <mbedtls_ssl_write_record+0x30e>
  4079d2:	c7 85 74 ff ff ff 00 	movl   $0xffffaf00,-0x8c(%rbp)
  4079d9:	af ff ff 
  4079dc:	eb 2f                	jmp    407a0d <mbedtls_ssl_write_record+0x33d>
  4079de:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  4079e5:	48 8b 00             	mov    (%rax),%rax
  4079e8:	48 8b 40 20          	mov    0x20(%rax),%rax
  4079ec:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
  4079f3:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  4079f7:	48 8b b5 60 ff ff ff 	mov    -0xa0(%rbp),%rsi
  4079fe:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  407a05:	ff d0                	callq  *%rax
  407a07:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
  407a0d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  407a14:	48 8b 40 68          	mov    0x68(%rax),%rax
  407a18:	48 83 c0 50          	add    $0x50,%rax
  407a1c:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
  407a23:	48 8b 89 10 01 00 00 	mov    0x110(%rcx),%rcx
  407a2a:	48 89 45 88          	mov    %rax,-0x78(%rbp)
  407a2e:	48 89 4d 80          	mov    %rcx,-0x80(%rbp)
  407a32:	48 c7 85 78 ff ff ff 	movq   $0x2,-0x88(%rbp)
  407a39:	02 00 00 00 
  407a3d:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
  407a42:	74 15                	je     407a59 <mbedtls_ssl_write_record+0x389>
  407a44:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  407a48:	48 83 38 00          	cmpq   $0x0,(%rax)
  407a4c:	74 0b                	je     407a59 <mbedtls_ssl_write_record+0x389>
  407a4e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  407a52:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
  407a57:	75 09                	jne    407a62 <mbedtls_ssl_write_record+0x392>
  407a59:	c7 45 94 00 af ff ff 	movl   $0xffffaf00,-0x6c(%rbp)
  407a60:	eb 23                	jmp    407a85 <mbedtls_ssl_write_record+0x3b5>
  407a62:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  407a66:	48 8b 00             	mov    (%rax),%rax
  407a69:	48 8b 40 20          	mov    0x20(%rax),%rax
  407a6d:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
  407a71:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  407a75:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
  407a79:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
  407a80:	ff d0                	callq  *%rax
  407a82:	89 45 94             	mov    %eax,-0x6c(%rbp)
  407a85:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  407a8c:	48 8b 40 68          	mov    0x68(%rax),%rax
  407a90:	48 83 c0 50          	add    $0x50,%rax
  407a94:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
  407a9b:	48 8b 89 20 01 00 00 	mov    0x120(%rcx),%rcx
  407aa2:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
  407aa9:	48 8b 92 30 01 00 00 	mov    0x130(%rdx),%rdx
  407ab0:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  407ab4:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
  407ab8:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  407abc:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
  407ac1:	74 15                	je     407ad8 <mbedtls_ssl_write_record+0x408>
  407ac3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  407ac7:	48 83 38 00          	cmpq   $0x0,(%rax)
  407acb:	74 0b                	je     407ad8 <mbedtls_ssl_write_record+0x408>
  407acd:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  407ad1:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
  407ad6:	75 09                	jne    407ae1 <mbedtls_ssl_write_record+0x411>
  407ad8:	c7 45 b4 00 af ff ff 	movl   $0xffffaf00,-0x4c(%rbp)
  407adf:	eb 20                	jmp    407b01 <mbedtls_ssl_write_record+0x431>
  407ae1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  407ae5:	48 8b 00             	mov    (%rax),%rax
  407ae8:	48 8b 40 20          	mov    0x20(%rax),%rax
  407aec:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
  407af0:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  407af4:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
  407af8:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  407afc:	ff d0                	callq  *%rax
  407afe:	89 45 b4             	mov    %eax,-0x4c(%rbp)
  407b01:	48 8d b5 f0 fe ff ff 	lea    -0x110(%rbp),%rsi
  407b08:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  407b0f:	48 8b 40 68          	mov    0x68(%rax),%rax
  407b13:	48 83 c0 50          	add    $0x50,%rax
  407b17:	48 89 c7             	mov    %rax,%rdi
  407b1a:	e8 c1 39 02 00       	callq  42b4e0 <mbedtls_md_hmac_finish>
  407b1f:	48 8b b5 18 ff ff ff 	mov    -0xe8(%rbp),%rsi
  407b26:	48 8b 76 68          	mov    0x68(%rsi),%rsi
  407b2a:	48 83 c6 50          	add    $0x50,%rsi
  407b2e:	48 89 75 c8          	mov    %rsi,-0x38(%rbp)
  407b32:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  407b37:	89 85 6c fe ff ff    	mov    %eax,-0x194(%rbp)
  407b3d:	74 15                	je     407b54 <mbedtls_ssl_write_record+0x484>
  407b3f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  407b43:	48 83 38 00          	cmpq   $0x0,(%rax)
  407b47:	74 0b                	je     407b54 <mbedtls_ssl_write_record+0x484>
  407b49:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  407b4d:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
  407b52:	75 09                	jne    407b5d <mbedtls_ssl_write_record+0x48d>
  407b54:	c7 45 d4 00 af ff ff 	movl   $0xffffaf00,-0x2c(%rbp)
  407b5b:	eb 58                	jmp    407bb5 <mbedtls_ssl_write_record+0x4e5>
  407b5d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  407b61:	48 8b 40 10          	mov    0x10(%rax),%rax
  407b65:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  407b69:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  407b6d:	48 8b 00             	mov    (%rax),%rax
  407b70:	48 8b 40 18          	mov    0x18(%rax),%rax
  407b74:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  407b78:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  407b7c:	ff d0                	callq  *%rax
  407b7e:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  407b81:	83 f8 00             	cmp    $0x0,%eax
  407b84:	74 08                	je     407b8e <mbedtls_ssl_write_record+0x4be>
  407b86:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  407b89:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  407b8c:	eb 27                	jmp    407bb5 <mbedtls_ssl_write_record+0x4e5>
  407b8e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  407b92:	48 8b 00             	mov    (%rax),%rax
  407b95:	48 8b 40 20          	mov    0x20(%rax),%rax
  407b99:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  407b9d:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  407ba1:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  407ba5:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  407ba9:	48 8b 09             	mov    (%rcx),%rcx
  407bac:	48 63 51 14          	movslq 0x14(%rcx),%rdx
  407bb0:	ff d0                	callq  *%rax
  407bb2:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  407bb5:	48 8d b5 f0 fe ff ff 	lea    -0x110(%rbp),%rsi
  407bbc:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  407bc3:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  407bca:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
  407bd1:	48 03 81 30 01 00 00 	add    0x130(%rcx),%rax
  407bd8:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
  407bdf:	48 8b 49 68          	mov    0x68(%rcx),%rcx
  407be3:	48 8b 51 28          	mov    0x28(%rcx),%rdx
  407be7:	48 89 c7             	mov    %rax,%rdi
  407bea:	e8 81 95 ff ff       	callq  401170 <memcpy@plt>
  407bef:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  407bf6:	48 8b 40 68          	mov    0x68(%rax),%rax
  407bfa:	48 8b 40 28          	mov    0x28(%rax),%rax
  407bfe:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
  407c05:	48 03 81 30 01 00 00 	add    0x130(%rcx),%rax
  407c0c:	48 89 81 30 01 00 00 	mov    %rax,0x130(%rcx)
  407c13:	44 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%r8d
  407c1a:	41 83 c0 01          	add    $0x1,%r8d
  407c1e:	44 89 85 10 ff ff ff 	mov    %r8d,-0xf0(%rbp)
  407c25:	eb 0f                	jmp    407c36 <mbedtls_ssl_write_record+0x566>
  407c27:	c7 85 24 ff ff ff 00 	movl   $0xffff9400,-0xdc(%rbp)
  407c2e:	94 ff ff 
  407c31:	e9 fc 02 00 00       	jmpq   407f32 <mbedtls_ssl_write_record+0x862>
  407c36:	83 bd 14 ff ff ff 02 	cmpl   $0x2,-0xec(%rbp)
  407c3d:	0f 85 cd 02 00 00    	jne    407f10 <mbedtls_ssl_write_record+0x840>
  407c43:	48 c7 85 c8 fe ff ff 	movq   $0x0,-0x138(%rbp)
  407c4a:	00 00 00 00 
  407c4e:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  407c55:	48 8b 40 68          	mov    0x68(%rax),%rax
  407c59:	48 8b 40 18          	mov    0x18(%rax),%rax
  407c5d:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
  407c64:	48 8b 89 30 01 00 00 	mov    0x130(%rcx),%rcx
  407c6b:	48 83 c1 01          	add    $0x1,%rcx
  407c6f:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
  407c76:	48 8b 52 68          	mov    0x68(%rdx),%rdx
  407c7a:	48 89 85 60 fe ff ff 	mov    %rax,-0x1a0(%rbp)
  407c81:	48 89 c8             	mov    %rcx,%rax
  407c84:	31 f6                	xor    %esi,%esi
  407c86:	48 89 95 58 fe ff ff 	mov    %rdx,-0x1a8(%rbp)
  407c8d:	89 f2                	mov    %esi,%edx
  407c8f:	48 8b 8d 58 fe ff ff 	mov    -0x1a8(%rbp),%rcx
  407c96:	48 f7 71 18          	divq   0x18(%rcx)
  407c9a:	48 8b bd 60 fe ff ff 	mov    -0x1a0(%rbp),%rdi
  407ca1:	48 29 d7             	sub    %rdx,%rdi
  407ca4:	48 89 bd d0 fe ff ff 	mov    %rdi,-0x130(%rbp)
  407cab:	48 8b 95 d0 fe ff ff 	mov    -0x130(%rbp),%rdx
  407cb2:	48 8b bd 18 ff ff ff 	mov    -0xe8(%rbp),%rdi
  407cb9:	48 8b 7f 68          	mov    0x68(%rdi),%rdi
  407cbd:	48 3b 57 18          	cmp    0x18(%rdi),%rdx
  407cc1:	75 0b                	jne    407cce <mbedtls_ssl_write_record+0x5fe>
  407cc3:	48 c7 85 d0 fe ff ff 	movq   $0x0,-0x130(%rbp)
  407cca:	00 00 00 00 
  407cce:	48 c7 85 c0 fe ff ff 	movq   $0x0,-0x140(%rbp)
  407cd5:	00 00 00 00 
  407cd9:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  407ce0:	48 3b 85 d0 fe ff ff 	cmp    -0x130(%rbp),%rax
  407ce7:	77 43                	ja     407d2c <mbedtls_ssl_write_record+0x65c>
  407ce9:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
  407cf0:	88 c1                	mov    %al,%cl
  407cf2:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  407cf9:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  407d00:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
  407d07:	48 8b 92 30 01 00 00 	mov    0x130(%rdx),%rdx
  407d0e:	48 03 95 c0 fe ff ff 	add    -0x140(%rbp),%rdx
  407d15:	88 0c 10             	mov    %cl,(%rax,%rdx,1)
  407d18:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  407d1f:	48 83 c0 01          	add    $0x1,%rax
  407d23:	48 89 85 c0 fe ff ff 	mov    %rax,-0x140(%rbp)
  407d2a:	eb ad                	jmp    407cd9 <mbedtls_ssl_write_record+0x609>
  407d2c:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
  407d33:	48 83 c0 01          	add    $0x1,%rax
  407d37:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
  407d3e:	48 03 81 30 01 00 00 	add    0x130(%rcx),%rax
  407d45:	48 89 81 30 01 00 00 	mov    %rax,0x130(%rcx)
  407d4c:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  407d53:	48 8b 80 30 01 00 00 	mov    0x130(%rax),%rax
  407d5a:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
  407d61:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  407d68:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  407d6f:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
  407d76:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  407d7d:	83 78 10 02          	cmpl   $0x2,0x10(%rax)
  407d81:	0f 8c e1 00 00 00    	jl     407e68 <mbedtls_ssl_write_record+0x798>
  407d87:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  407d8e:	48 8b 00             	mov    (%rax),%rax
  407d91:	48 8b 40 30          	mov    0x30(%rax),%rax
  407d95:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
  407d9c:	48 8b 09             	mov    (%rcx),%rcx
  407d9f:	48 8b 79 38          	mov    0x38(%rcx),%rdi
  407da3:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
  407daa:	48 8b 49 68          	mov    0x68(%rcx),%rcx
  407dae:	48 83 c1 30          	add    $0x30,%rcx
  407db2:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
  407db9:	48 8b 52 68          	mov    0x68(%rdx),%rdx
  407dbd:	48 8b 52 18          	mov    0x18(%rdx),%rdx
  407dc1:	48 89 ce             	mov    %rcx,%rsi
  407dc4:	ff d0                	callq  *%rax
  407dc6:	89 85 ec fe ff ff    	mov    %eax,-0x114(%rbp)
  407dcc:	83 bd ec fe ff ff 00 	cmpl   $0x0,-0x114(%rbp)
  407dd3:	74 11                	je     407de6 <mbedtls_ssl_write_record+0x716>
  407dd5:	8b 85 ec fe ff ff    	mov    -0x114(%rbp),%eax
  407ddb:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%rbp)
  407de1:	e9 4c 01 00 00       	jmpq   407f32 <mbedtls_ssl_write_record+0x862>
  407de6:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  407ded:	48 8b b8 18 01 00 00 	mov    0x118(%rax),%rdi
  407df4:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  407dfb:	48 8b 40 68          	mov    0x68(%rax),%rax
  407dff:	48 83 c0 30          	add    $0x30,%rax
  407e03:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
  407e0a:	48 8b 49 68          	mov    0x68(%rcx),%rcx
  407e0e:	48 8b 51 18          	mov    0x18(%rcx),%rdx
  407e12:	48 89 c6             	mov    %rax,%rsi
  407e15:	e8 56 93 ff ff       	callq  401170 <memcpy@plt>
  407e1a:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  407e21:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  407e28:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
  407e2f:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  407e36:	48 8b 80 30 01 00 00 	mov    0x130(%rax),%rax
  407e3d:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
  407e44:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  407e4b:	48 8b 40 68          	mov    0x68(%rax),%rax
  407e4f:	48 8b 40 18          	mov    0x18(%rax),%rax
  407e53:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
  407e5a:	48 03 81 30 01 00 00 	add    0x130(%rcx),%rax
  407e61:	48 89 81 30 01 00 00 	mov    %rax,0x130(%rcx)
  407e68:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  407e6f:	48 8b 40 68          	mov    0x68(%rax),%rax
  407e73:	48 05 80 00 00 00    	add    $0x80,%rax
  407e79:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
  407e80:	48 8b 49 68          	mov    0x68(%rcx),%rcx
  407e84:	48 83 c1 30          	add    $0x30,%rcx
  407e88:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
  407e8f:	48 8b 52 68          	mov    0x68(%rdx),%rdx
  407e93:	48 8b 52 18          	mov    0x18(%rdx),%rdx
  407e97:	48 8b b5 e0 fe ff ff 	mov    -0x120(%rbp),%rsi
  407e9e:	4c 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%r8
  407ea5:	4c 8b 8d e0 fe ff ff 	mov    -0x120(%rbp),%r9
  407eac:	48 89 c7             	mov    %rax,%rdi
  407eaf:	48 89 b5 50 fe ff ff 	mov    %rsi,-0x1b0(%rbp)
  407eb6:	48 89 ce             	mov    %rcx,%rsi
  407eb9:	48 8b 8d 50 fe ff ff 	mov    -0x1b0(%rbp),%rcx
  407ec0:	48 8d 85 c8 fe ff ff 	lea    -0x138(%rbp),%rax
  407ec7:	48 89 04 24          	mov    %rax,(%rsp)
  407ecb:	e8 20 eb 01 00       	callq  4269f0 <mbedtls_cipher_crypt>
  407ed0:	89 85 ec fe ff ff    	mov    %eax,-0x114(%rbp)
  407ed6:	83 f8 00             	cmp    $0x0,%eax
  407ed9:	74 0e                	je     407ee9 <mbedtls_ssl_write_record+0x819>
  407edb:	8b 85 ec fe ff ff    	mov    -0x114(%rbp),%eax
  407ee1:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%rbp)
  407ee7:	eb 49                	jmp    407f32 <mbedtls_ssl_write_record+0x862>
  407ee9:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
  407ef0:	48 3b 85 c8 fe ff ff 	cmp    -0x138(%rbp),%rax
  407ef7:	74 0c                	je     407f05 <mbedtls_ssl_write_record+0x835>
  407ef9:	c7 85 24 ff ff ff 00 	movl   $0xffff9400,-0xdc(%rbp)
  407f00:	94 ff ff 
  407f03:	eb 2d                	jmp    407f32 <mbedtls_ssl_write_record+0x862>
  407f05:	83 bd 10 ff ff ff 01 	cmpl   $0x1,-0xf0(%rbp)
  407f0c:	75 0e                	jne    407f1c <mbedtls_ssl_write_record+0x84c>
  407f0e:	eb 18                	jmp    407f28 <mbedtls_ssl_write_record+0x858>
  407f10:	c7 85 24 ff ff ff 00 	movl   $0xffff9400,-0xdc(%rbp)
  407f17:	94 ff ff 
  407f1a:	eb 16                	jmp    407f32 <mbedtls_ssl_write_record+0x862>
  407f1c:	c7 85 24 ff ff ff 00 	movl   $0xffff9400,-0xdc(%rbp)
  407f23:	94 ff ff 
  407f26:	eb 0a                	jmp    407f32 <mbedtls_ssl_write_record+0x862>
  407f28:	c7 85 24 ff ff ff 00 	movl   $0x0,-0xdc(%rbp)
  407f2f:	00 00 00 
  407f32:	8b 85 24 ff ff ff    	mov    -0xdc(%rbp),%eax
  407f38:	89 85 90 fe ff ff    	mov    %eax,-0x170(%rbp)
  407f3e:	83 f8 00             	cmp    $0x0,%eax
  407f41:	74 15                	je     407f58 <mbedtls_ssl_write_record+0x888>
  407f43:	eb 00                	jmp    407f45 <mbedtls_ssl_write_record+0x875>
  407f45:	eb 00                	jmp    407f47 <mbedtls_ssl_write_record+0x877>
  407f47:	8b 85 90 fe ff ff    	mov    -0x170(%rbp),%eax
  407f4d:	89 85 a4 fe ff ff    	mov    %eax,-0x15c(%rbp)
  407f53:	e9 3c 02 00 00       	jmpq   408194 <mbedtls_ssl_write_record+0xac4>
  407f58:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  407f5f:	48 8b 80 30 01 00 00 	mov    0x130(%rax),%rax
  407f66:	48 89 85 80 fe ff ff 	mov    %rax,-0x180(%rbp)
  407f6d:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
  407f74:	48 c1 e8 08          	shr    $0x8,%rax
  407f78:	88 c1                	mov    %al,%cl
  407f7a:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  407f81:	48 8b 80 10 01 00 00 	mov    0x110(%rax),%rax
  407f88:	88 08                	mov    %cl,(%rax)
  407f8a:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
  407f91:	88 c1                	mov    %al,%cl
  407f93:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  407f9a:	48 8b 80 10 01 00 00 	mov    0x110(%rax),%rax
  407fa1:	88 48 01             	mov    %cl,0x1(%rax)
  407fa4:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
  407fab:	48 8b 8d 98 fe ff ff 	mov    -0x168(%rbp),%rcx
  407fb2:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  407fb6:	48 83 c0 05          	add    $0x5,%rax
  407fba:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
  407fc1:	eb 00                	jmp    407fc3 <mbedtls_ssl_write_record+0x8f3>
  407fc3:	eb 00                	jmp    407fc5 <mbedtls_ssl_write_record+0x8f5>
  407fc5:	eb 00                	jmp    407fc7 <mbedtls_ssl_write_record+0x8f7>
  407fc7:	48 8b 85 70 fe ff ff 	mov    -0x190(%rbp),%rax
  407fce:	48 8b 8d 98 fe ff ff 	mov    -0x168(%rbp),%rcx
  407fd5:	48 03 81 38 01 00 00 	add    0x138(%rcx),%rax
  407fdc:	48 89 81 38 01 00 00 	mov    %rax,0x138(%rcx)
  407fe3:	48 8b 85 70 fe ff ff 	mov    -0x190(%rbp),%rax
  407fea:	48 8b 8d 98 fe ff ff 	mov    -0x168(%rbp),%rcx
  407ff1:	48 03 81 08 01 00 00 	add    0x108(%rcx),%rax
  407ff8:	48 89 81 08 01 00 00 	mov    %rax,0x108(%rcx)
  407fff:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  408006:	48 8b 8d 98 fe ff ff 	mov    -0x168(%rbp),%rcx
  40800d:	48 8b 49 68          	mov    0x68(%rcx),%rcx
  408011:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  408015:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  408019:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40801d:	48 8b 80 08 01 00 00 	mov    0x108(%rax),%rax
  408024:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
  408028:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  40802c:	48 89 81 00 01 00 00 	mov    %rax,0x100(%rcx)
  408033:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  408037:	48 8b 80 08 01 00 00 	mov    0x108(%rax),%rax
  40803e:	48 83 c0 03          	add    $0x3,%rax
  408042:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  408046:	48 89 81 10 01 00 00 	mov    %rax,0x110(%rcx)
  40804d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  408051:	48 8b 80 08 01 00 00 	mov    0x108(%rax),%rax
  408058:	48 83 c0 05          	add    $0x5,%rax
  40805c:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  408060:	48 89 81 18 01 00 00 	mov    %rax,0x118(%rcx)
  408067:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  40806c:	74 39                	je     4080a7 <mbedtls_ssl_write_record+0x9d7>
  40806e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  408072:	83 78 10 02          	cmpl   $0x2,0x10(%rax)
  408076:	7c 2f                	jl     4080a7 <mbedtls_ssl_write_record+0x9d7>
  408078:	31 c0                	xor    %eax,%eax
  40807a:	89 c1                	mov    %eax,%ecx
  40807c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  408080:	48 8b 92 18 01 00 00 	mov    0x118(%rdx),%rdx
  408087:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  40808b:	48 03 56 18          	add    0x18(%rsi),%rdx
  40808f:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  408093:	48 2b 4e 20          	sub    0x20(%rsi),%rcx
  408097:	48 01 ca             	add    %rcx,%rdx
  40809a:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  40809e:	48 89 91 20 01 00 00 	mov    %rdx,0x120(%rcx)
  4080a5:	eb 16                	jmp    4080bd <mbedtls_ssl_write_record+0x9ed>
  4080a7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4080ab:	48 8b 80 18 01 00 00 	mov    0x118(%rax),%rax
  4080b2:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4080b6:	48 89 81 20 01 00 00 	mov    %rax,0x120(%rcx)
  4080bd:	c7 85 78 fe ff ff 08 	movl   $0x8,-0x188(%rbp)
  4080c4:	00 00 00 
  4080c7:	8b 85 78 fe ff ff    	mov    -0x188(%rbp),%eax
  4080cd:	89 c1                	mov    %eax,%ecx
  4080cf:	48 8b 95 98 fe ff ff 	mov    -0x168(%rbp),%rdx
  4080d6:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  4080da:	48 83 f9 00          	cmp    $0x0,%rcx
  4080de:	76 46                	jbe    408126 <mbedtls_ssl_write_record+0xa56>
  4080e0:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  4080e7:	8b 8d 78 fe ff ff    	mov    -0x188(%rbp),%ecx
  4080ed:	83 e9 01             	sub    $0x1,%ecx
  4080f0:	89 c9                	mov    %ecx,%ecx
  4080f2:	89 ca                	mov    %ecx,%edx
  4080f4:	40 8a b4 10 40 01 00 	mov    0x140(%rax,%rdx,1),%sil
  4080fb:	00 
  4080fc:	40 80 c6 01          	add    $0x1,%sil
  408100:	40 88 b4 10 40 01 00 	mov    %sil,0x140(%rax,%rdx,1)
  408107:	00 
  408108:	40 0f b6 ce          	movzbl %sil,%ecx
  40810c:	83 f9 00             	cmp    $0x0,%ecx
  40810f:	74 02                	je     408113 <mbedtls_ssl_write_record+0xa43>
  408111:	eb 13                	jmp    408126 <mbedtls_ssl_write_record+0xa56>
  408113:	eb 00                	jmp    408115 <mbedtls_ssl_write_record+0xa45>
  408115:	8b 85 78 fe ff ff    	mov    -0x188(%rbp),%eax
  40811b:	83 c0 ff             	add    $0xffffffff,%eax
  40811e:	89 85 78 fe ff ff    	mov    %eax,-0x188(%rbp)
  408124:	eb a1                	jmp    4080c7 <mbedtls_ssl_write_record+0x9f7>
  408126:	8b 85 78 fe ff ff    	mov    -0x188(%rbp),%eax
  40812c:	89 c1                	mov    %eax,%ecx
  40812e:	48 8b 95 98 fe ff ff 	mov    -0x168(%rbp),%rdx
  408135:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
  408139:	48 83 f9 00          	cmp    $0x0,%rcx
  40813d:	75 10                	jne    40814f <mbedtls_ssl_write_record+0xa7f>
  40813f:	eb 00                	jmp    408141 <mbedtls_ssl_write_record+0xa71>
  408141:	eb 00                	jmp    408143 <mbedtls_ssl_write_record+0xa73>
  408143:	c7 85 a4 fe ff ff 80 	movl   $0xffff9480,-0x15c(%rbp)
  40814a:	94 ff ff 
  40814d:	eb 45                	jmp    408194 <mbedtls_ssl_write_record+0xac4>
  40814f:	eb 00                	jmp    408151 <mbedtls_ssl_write_record+0xa81>
  408151:	0f b6 85 7f fe ff ff 	movzbl -0x181(%rbp),%eax
  408158:	83 f8 01             	cmp    $0x1,%eax
  40815b:	75 29                	jne    408186 <mbedtls_ssl_write_record+0xab6>
  40815d:	48 8b bd 98 fe ff ff 	mov    -0x168(%rbp),%rdi
  408164:	e8 f7 f1 ff ff       	callq  407360 <mbedtls_ssl_flush_output>
  408169:	89 85 90 fe ff ff    	mov    %eax,-0x170(%rbp)
  40816f:	83 f8 00             	cmp    $0x0,%eax
  408172:	74 12                	je     408186 <mbedtls_ssl_write_record+0xab6>
  408174:	eb 00                	jmp    408176 <mbedtls_ssl_write_record+0xaa6>
  408176:	eb 00                	jmp    408178 <mbedtls_ssl_write_record+0xaa8>
  408178:	8b 85 90 fe ff ff    	mov    -0x170(%rbp),%eax
  40817e:	89 85 a4 fe ff ff    	mov    %eax,-0x15c(%rbp)
  408184:	eb 0e                	jmp    408194 <mbedtls_ssl_write_record+0xac4>
  408186:	eb 00                	jmp    408188 <mbedtls_ssl_write_record+0xab8>
  408188:	eb 00                	jmp    40818a <mbedtls_ssl_write_record+0xaba>
  40818a:	c7 85 a4 fe ff ff 00 	movl   $0x0,-0x15c(%rbp)
  408191:	00 00 00 
  408194:	8b 85 a4 fe ff ff    	mov    -0x15c(%rbp),%eax
  40819a:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
  4081a0:	e8 b1 d7 03 00       	callq  445956 <writeback_cache>
  4081a5:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
  4081ab:	48 81 c4 c0 01 00 00 	add    $0x1c0,%rsp
  4081b2:	5d                   	pop    %rbp
  4081b3:	c3                   	retq   
  4081b4:	66 66 66 2e 0f 1f 84 	data16 data16 nopw %cs:0x0(%rax,%rax,1)
  4081bb:	00 00 00 00 00 

00000000004081c0 <mbedtls_ssl_hdr_len>:
  4081c0:	55                   	push   %rbp
  4081c1:	48 89 e5             	mov    %rsp,%rbp
  4081c4:	48 83 ec 10          	sub    $0x10,%rsp
  4081c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4081cc:	e8 85 d7 03 00       	callq  445956 <writeback_cache>
  4081d1:	b8 05 00 00 00       	mov    $0x5,%eax
  4081d6:	48 83 c4 10          	add    $0x10,%rsp
  4081da:	5d                   	pop    %rbp
  4081db:	c3                   	retq   
  4081dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004081e0 <mbedtls_cipher_get_cipher_mode>:
  4081e0:	55                   	push   %rbp
  4081e1:	48 89 e5             	mov    %rsp,%rbp
  4081e4:	48 83 ec 20          	sub    $0x20,%rsp
  4081e8:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  4081ec:	eb 00                	jmp    4081ee <mbedtls_cipher_get_cipher_mode+0xe>
  4081ee:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4081f2:	48 83 38 00          	cmpq   $0x0,(%rax)
  4081f6:	75 09                	jne    408201 <mbedtls_cipher_get_cipher_mode+0x21>
  4081f8:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  4081ff:	eb 0d                	jmp    40820e <mbedtls_cipher_get_cipher_mode+0x2e>
  408201:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  408205:	48 8b 00             	mov    (%rax),%rax
  408208:	8b 48 04             	mov    0x4(%rax),%ecx
  40820b:	89 4d fc             	mov    %ecx,-0x4(%rbp)
  40820e:	8b 45 fc             	mov    -0x4(%rbp),%eax
  408211:	89 45 ec             	mov    %eax,-0x14(%rbp)
  408214:	e8 3d d7 03 00       	callq  445956 <writeback_cache>
  408219:	8b 45 ec             	mov    -0x14(%rbp),%eax
  40821c:	48 83 c4 20          	add    $0x20,%rsp
  408220:	5d                   	pop    %rbp
  408221:	c3                   	retq   
  408222:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  408229:	1f 84 00 00 00 00 00 

0000000000408230 <mbedtls_ssl_read_record>:
  408230:	55                   	push   %rbp
  408231:	48 89 e5             	mov    %rsp,%rbp
  408234:	48 81 ec 50 03 00 00 	sub    $0x350,%rsp
  40823b:	48 89 bd 00 fd ff ff 	mov    %rdi,-0x300(%rbp)
  408242:	89 b5 fc fc ff ff    	mov    %esi,-0x304(%rbp)
  408248:	eb 00                	jmp    40824a <mbedtls_ssl_read_record+0x1a>
  40824a:	48 8b 85 00 fd ff ff 	mov    -0x300(%rbp),%rax
  408251:	83 b8 f4 00 00 00 00 	cmpl   $0x0,0xf4(%rax)
  408258:	0f 85 f8 17 00 00    	jne    409a56 <mbedtls_ssl_read_record+0x1826>
  40825e:	eb 00                	jmp    408260 <mbedtls_ssl_read_record+0x30>
  408260:	48 8b 85 00 fd ff ff 	mov    -0x300(%rbp),%rax
  408267:	48 89 85 10 fd ff ff 	mov    %rax,-0x2f0(%rbp)
  40826e:	48 8b 85 10 fd ff ff 	mov    -0x2f0(%rbp),%rax
  408275:	48 83 b8 e8 00 00 00 	cmpq   $0x0,0xe8(%rax)
  40827c:	00 
  40827d:	0f 84 d3 00 00 00    	je     408356 <mbedtls_ssl_read_record+0x126>
  408283:	48 8b 85 10 fd ff ff 	mov    -0x2f0(%rbp),%rax
  40828a:	48 83 b8 c8 00 00 00 	cmpq   $0x0,0xc8(%rax)
  408291:	00 
  408292:	74 0f                	je     4082a3 <mbedtls_ssl_read_record+0x73>
  408294:	c7 85 1c fd ff ff 00 	movl   $0xffff9400,-0x2e4(%rbp)
  40829b:	94 ff ff 
  40829e:	e9 ec 00 00 00       	jmpq   40838f <mbedtls_ssl_read_record+0x15f>
  4082a3:	48 8b 85 10 fd ff ff 	mov    -0x2f0(%rbp),%rax
  4082aa:	48 8b 80 e8 00 00 00 	mov    0xe8(%rax),%rax
  4082b1:	48 8b 8d 10 fd ff ff 	mov    -0x2f0(%rbp),%rcx
  4082b8:	48 3b 81 d8 00 00 00 	cmp    0xd8(%rcx),%rax
  4082bf:	73 6f                	jae    408330 <mbedtls_ssl_read_record+0x100>
  4082c1:	48 8b 85 10 fd ff ff 	mov    -0x2f0(%rbp),%rax
  4082c8:	48 8b 80 e8 00 00 00 	mov    0xe8(%rax),%rax
  4082cf:	48 8b 8d 10 fd ff ff 	mov    -0x2f0(%rbp),%rcx
  4082d6:	48 8b 91 d8 00 00 00 	mov    0xd8(%rcx),%rdx
  4082dd:	48 29 c2             	sub    %rax,%rdx
  4082e0:	48 89 91 d8 00 00 00 	mov    %rdx,0xd8(%rcx)
  4082e7:	48 8b 85 10 fd ff ff 	mov    -0x2f0(%rbp),%rax
  4082ee:	48 8b b8 c0 00 00 00 	mov    0xc0(%rax),%rdi
  4082f5:	48 8b 85 10 fd ff ff 	mov    -0x2f0(%rbp),%rax
  4082fc:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  408303:	48 8b 8d 10 fd ff ff 	mov    -0x2f0(%rbp),%rcx
  40830a:	48 03 81 e8 00 00 00 	add    0xe8(%rcx),%rax
  408311:	48 8b 8d 10 fd ff ff 	mov    -0x2f0(%rbp),%rcx
  408318:	48 8b 91 d8 00 00 00 	mov    0xd8(%rcx),%rdx
  40831f:	48 89 c6             	mov    %rax,%rsi
  408322:	e8 99 8e ff ff       	callq  4011c0 <memmove@plt>
  408327:	48 89 85 f0 fc ff ff 	mov    %rax,-0x310(%rbp)
  40832e:	eb 12                	jmp    408342 <mbedtls_ssl_read_record+0x112>
  408330:	48 8b 85 10 fd ff ff 	mov    -0x2f0(%rbp),%rax
  408337:	48 c7 80 d8 00 00 00 	movq   $0x0,0xd8(%rax)
  40833e:	00 00 00 00 
  408342:	48 8b 85 10 fd ff ff 	mov    -0x2f0(%rbp),%rax
  408349:	48 c7 80 e8 00 00 00 	movq   $0x0,0xe8(%rax)
  408350:	00 00 00 00 
  408354:	eb 2f                	jmp    408385 <mbedtls_ssl_read_record+0x155>
  408356:	48 8b 85 10 fd ff ff 	mov    -0x2f0(%rbp),%rax
  40835d:	48 83 b8 c8 00 00 00 	cmpq   $0x0,0xc8(%rax)
  408364:	00 
  408365:	74 0c                	je     408373 <mbedtls_ssl_read_record+0x143>
  408367:	c7 85 1c fd ff ff 00 	movl   $0x0,-0x2e4(%rbp)
  40836e:	00 00 00 
  408371:	eb 1c                	jmp    40838f <mbedtls_ssl_read_record+0x15f>
  408373:	48 8b 85 10 fd ff ff 	mov    -0x2f0(%rbp),%rax
  40837a:	48 c7 80 d8 00 00 00 	movq   $0x0,0xd8(%rax)
  408381:	00 00 00 00 
  408385:	c7 85 1c fd ff ff 00 	movl   $0x0,-0x2e4(%rbp)
  40838c:	00 00 00 
  40838f:	8b 85 1c fd ff ff    	mov    -0x2e4(%rbp),%eax
  408395:	89 85 f8 fc ff ff    	mov    %eax,-0x308(%rbp)
  40839b:	83 bd f8 fc ff ff 00 	cmpl   $0x0,-0x308(%rbp)
  4083a2:	74 11                	je     4083b5 <mbedtls_ssl_read_record+0x185>
  4083a4:	8b 85 f8 fc ff ff    	mov    -0x308(%rbp),%eax
  4083aa:	89 85 0c fd ff ff    	mov    %eax,-0x2f4(%rbp)
  4083b0:	e9 c4 16 00 00       	jmpq   409a79 <mbedtls_ssl_read_record+0x1849>
  4083b5:	48 8b 85 00 fd ff ff 	mov    -0x300(%rbp),%rax
  4083bc:	48 89 85 30 fd ff ff 	mov    %rax,-0x2d0(%rbp)
  4083c3:	48 8b 85 30 fd ff ff 	mov    -0x2d0(%rbp),%rax
  4083ca:	48 83 b8 d8 00 00 00 	cmpq   $0x0,0xd8(%rax)
  4083d1:	00 
  4083d2:	76 0c                	jbe    4083e0 <mbedtls_ssl_read_record+0x1b0>
  4083d4:	c7 85 38 fd ff ff 01 	movl   $0x1,-0x2c8(%rbp)
  4083db:	00 00 00 
  4083de:	eb 0a                	jmp    4083ea <mbedtls_ssl_read_record+0x1ba>
  4083e0:	c7 85 38 fd ff ff 00 	movl   $0x0,-0x2c8(%rbp)
  4083e7:	00 00 00 
  4083ea:	8b 85 38 fd ff ff    	mov    -0x2c8(%rbp),%eax
  4083f0:	83 f8 00             	cmp    $0x0,%eax
  4083f3:	0f 85 0f 13 00 00    	jne    409708 <mbedtls_ssl_read_record+0x14d8>
  4083f9:	b8 05 00 00 00       	mov    $0x5,%eax
  4083fe:	89 c6                	mov    %eax,%esi
  408400:	48 8b 8d 00 fd ff ff 	mov    -0x300(%rbp),%rcx
  408407:	48 89 8d 80 fd ff ff 	mov    %rcx,-0x280(%rbp)
  40840e:	48 8b bd 80 fd ff ff 	mov    -0x280(%rbp),%rdi
  408415:	48 8b 8d 80 fd ff ff 	mov    -0x280(%rbp),%rcx
  40841c:	48 89 8d 90 fd ff ff 	mov    %rcx,-0x270(%rbp)
  408423:	e8 38 ed ff ff       	callq  407160 <mbedtls_ssl_fetch_input>
  408428:	89 85 7c fd ff ff    	mov    %eax,-0x284(%rbp)
  40842e:	83 f8 00             	cmp    $0x0,%eax
  408431:	74 11                	je     408444 <mbedtls_ssl_read_record+0x214>
  408433:	8b 85 7c fd ff ff    	mov    -0x284(%rbp),%eax
  408439:	89 85 8c fd ff ff    	mov    %eax,-0x274(%rbp)
  40843f:	e9 87 12 00 00       	jmpq   4096cb <mbedtls_ssl_read_record+0x149b>
  408444:	48 8b 85 80 fd ff ff 	mov    -0x280(%rbp),%rax
  40844b:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  40844f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  408453:	48 8b 80 a8 00 00 00 	mov    0xa8(%rax),%rax
  40845a:	0f b6 08             	movzbl (%rax),%ecx
  40845d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  408461:	89 88 d0 00 00 00    	mov    %ecx,0xd0(%rax)
  408467:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  40846b:	48 8b 80 b0 00 00 00 	mov    0xb0(%rax),%rax
  408472:	0f b6 08             	movzbl (%rax),%ecx
  408475:	c1 e1 08             	shl    $0x8,%ecx
  408478:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  40847c:	48 8b 80 b0 00 00 00 	mov    0xb0(%rax),%rax
  408483:	0f b6 50 01          	movzbl 0x1(%rax),%edx
  408487:	09 d1                	or     %edx,%ecx
  408489:	48 63 c1             	movslq %ecx,%rax
  40848c:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
  408490:	48 89 86 d8 00 00 00 	mov    %rax,0xd8(%rsi)
  408497:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  40849b:	48 8b 00             	mov    (%rax),%rax
  40849e:	40 8a b8 98 00 00 00 	mov    0x98(%rax),%dil
  4084a5:	40 c0 ef 01          	shr    $0x1,%dil
  4084a9:	40 80 e7 01          	and    $0x1,%dil
  4084ad:	40 0f b6 cf          	movzbl %dil,%ecx
  4084b1:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  4084b5:	48 8b 80 a8 00 00 00 	mov    0xa8(%rax),%rax
  4084bc:	48 83 c0 01          	add    $0x1,%rax
  4084c0:	48 8d 75 ac          	lea    -0x54(%rbp),%rsi
  4084c4:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
  4084c8:	48 8d 75 a8          	lea    -0x58(%rbp),%rsi
  4084cc:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  4084d0:	89 4d cc             	mov    %ecx,-0x34(%rbp)
  4084d3:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  4084d7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4084db:	0f b6 08             	movzbl (%rax),%ecx
  4084de:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4084e2:	89 08                	mov    %ecx,(%rax)
  4084e4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4084e8:	0f b6 48 01          	movzbl 0x1(%rax),%ecx
  4084ec:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4084f0:	89 08                	mov    %ecx,(%rax)
  4084f2:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  4084f6:	83 b8 d0 00 00 00 16 	cmpl   $0x16,0xd0(%rax)
  4084fd:	0f 84 cc 00 00 00    	je     4085cf <mbedtls_ssl_read_record+0x39f>
  408503:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  408507:	83 b8 d0 00 00 00 15 	cmpl   $0x15,0xd0(%rax)
  40850e:	0f 84 bb 00 00 00    	je     4085cf <mbedtls_ssl_read_record+0x39f>
  408514:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  408518:	83 b8 d0 00 00 00 14 	cmpl   $0x14,0xd0(%rax)
  40851f:	0f 84 aa 00 00 00    	je     4085cf <mbedtls_ssl_read_record+0x39f>
  408525:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  408529:	83 b8 d0 00 00 00 17 	cmpl   $0x17,0xd0(%rax)
  408530:	0f 84 99 00 00 00    	je     4085cf <mbedtls_ssl_read_record+0x39f>
  408536:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  40853a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40853e:	c6 45 e7 02          	movb   $0x2,-0x19(%rbp)
  408542:	c6 45 e6 0a          	movb   $0xa,-0x1a(%rbp)
  408546:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40854b:	74 0a                	je     408557 <mbedtls_ssl_read_record+0x327>
  40854d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  408551:	48 83 38 00          	cmpq   $0x0,(%rax)
  408555:	75 09                	jne    408560 <mbedtls_ssl_read_record+0x330>
  408557:	c7 45 f4 00 8f ff ff 	movl   $0xffff8f00,-0xc(%rbp)
  40855e:	eb 63                	jmp    4085c3 <mbedtls_ssl_read_record+0x393>
  408560:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  408564:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  40856b:	00 00 00 
  40856e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  408572:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  408579:	02 00 00 00 
  40857d:	8a 4d e7             	mov    -0x19(%rbp),%cl
  408580:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  408584:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40858b:	88 08                	mov    %cl,(%rax)
  40858d:	8a 4d e6             	mov    -0x1a(%rbp),%cl
  408590:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  408594:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40859b:	88 48 01             	mov    %cl,0x1(%rax)
  40859e:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  4085a2:	be 01 00 00 00       	mov    $0x1,%esi
  4085a7:	e8 24 f1 ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  4085ac:	89 45 e0             	mov    %eax,-0x20(%rbp)
  4085af:	83 f8 00             	cmp    $0x0,%eax
  4085b2:	74 08                	je     4085bc <mbedtls_ssl_read_record+0x38c>
  4085b4:	8b 45 e0             	mov    -0x20(%rbp),%eax
  4085b7:	89 45 f4             	mov    %eax,-0xc(%rbp)
  4085ba:	eb 07                	jmp    4085c3 <mbedtls_ssl_read_record+0x393>
  4085bc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  4085c3:	c7 45 bc 00 8e ff ff 	movl   $0xffff8e00,-0x44(%rbp)
  4085ca:	e9 15 01 00 00       	jmpq   4086e4 <mbedtls_ssl_read_record+0x4b4>
  4085cf:	8b 45 ac             	mov    -0x54(%rbp),%eax
  4085d2:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  4085d6:	3b 41 0c             	cmp    0xc(%rcx),%eax
  4085d9:	74 0c                	je     4085e7 <mbedtls_ssl_read_record+0x3b7>
  4085db:	c7 45 bc 00 8e ff ff 	movl   $0xffff8e00,-0x44(%rbp)
  4085e2:	e9 fd 00 00 00       	jmpq   4086e4 <mbedtls_ssl_read_record+0x4b4>
  4085e7:	8b 45 a8             	mov    -0x58(%rbp),%eax
  4085ea:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  4085ee:	48 8b 09             	mov    (%rcx),%rcx
  4085f1:	0f b6 91 95 00 00 00 	movzbl 0x95(%rcx),%edx
  4085f8:	39 d0                	cmp    %edx,%eax
  4085fa:	7e 0c                	jle    408608 <mbedtls_ssl_read_record+0x3d8>
  4085fc:	c7 45 bc 00 8e ff ff 	movl   $0xffff8e00,-0x44(%rbp)
  408603:	e9 dc 00 00 00       	jmpq   4086e4 <mbedtls_ssl_read_record+0x4b4>
  408608:	b8 3d 41 00 00       	mov    $0x413d,%eax
  40860d:	89 c1                	mov    %eax,%ecx
  40860f:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
  408613:	48 8b 92 d8 00 00 00 	mov    0xd8(%rdx),%rdx
  40861a:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
  40861e:	48 8b b6 c0 00 00 00 	mov    0xc0(%rsi),%rsi
  408625:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
  408629:	48 8b bf 98 00 00 00 	mov    0x98(%rdi),%rdi
  408630:	48 29 fe             	sub    %rdi,%rsi
  408633:	48 29 f1             	sub    %rsi,%rcx
  408636:	48 39 ca             	cmp    %rcx,%rdx
  408639:	76 0c                	jbe    408647 <mbedtls_ssl_read_record+0x417>
  40863b:	c7 45 bc 00 8e ff ff 	movl   $0xffff8e00,-0x44(%rbp)
  408642:	e9 9d 00 00 00       	jmpq   4086e4 <mbedtls_ssl_read_record+0x4b4>
  408647:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  40864b:	48 83 78 60 00       	cmpq   $0x0,0x60(%rax)
  408650:	75 2a                	jne    40867c <mbedtls_ssl_read_record+0x44c>
  408652:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  408656:	48 83 b8 d8 00 00 00 	cmpq   $0x1,0xd8(%rax)
  40865d:	01 
  40865e:	72 11                	jb     408671 <mbedtls_ssl_read_record+0x441>
  408660:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  408664:	48 81 b8 d8 00 00 00 	cmpq   $0x4000,0xd8(%rax)
  40866b:	00 40 00 00 
  40866f:	76 09                	jbe    40867a <mbedtls_ssl_read_record+0x44a>
  408671:	c7 45 bc 00 8e ff ff 	movl   $0xffff8e00,-0x44(%rbp)
  408678:	eb 6a                	jmp    4086e4 <mbedtls_ssl_read_record+0x4b4>
  40867a:	eb 61                	jmp    4086dd <mbedtls_ssl_read_record+0x4ad>
  40867c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  408680:	48 8b 80 d8 00 00 00 	mov    0xd8(%rax),%rax
  408687:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  40868b:	48 8b 49 60          	mov    0x60(%rcx),%rcx
  40868f:	48 3b 41 10          	cmp    0x10(%rcx),%rax
  408693:	73 09                	jae    40869e <mbedtls_ssl_read_record+0x46e>
  408695:	c7 45 bc 00 8e ff ff 	movl   $0xffff8e00,-0x44(%rbp)
  40869c:	eb 46                	jmp    4086e4 <mbedtls_ssl_read_record+0x4b4>
  40869e:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  4086a2:	83 78 10 01          	cmpl   $0x1,0x10(%rax)
  4086a6:	7c 33                	jl     4086db <mbedtls_ssl_read_record+0x4ab>
  4086a8:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  4086ac:	48 8b 80 d8 00 00 00 	mov    0xd8(%rax),%rax
  4086b3:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  4086b7:	48 8b 49 60          	mov    0x60(%rcx),%rcx
  4086bb:	48 8b 49 10          	mov    0x10(%rcx),%rcx
  4086bf:	48 81 c1 00 40 00 00 	add    $0x4000,%rcx
  4086c6:	48 81 c1 00 01 00 00 	add    $0x100,%rcx
  4086cd:	48 39 c8             	cmp    %rcx,%rax
  4086d0:	76 09                	jbe    4086db <mbedtls_ssl_read_record+0x4ab>
  4086d2:	c7 45 bc 00 8e ff ff 	movl   $0xffff8e00,-0x44(%rbp)
  4086d9:	eb 09                	jmp    4086e4 <mbedtls_ssl_read_record+0x4b4>
  4086db:	eb 00                	jmp    4086dd <mbedtls_ssl_read_record+0x4ad>
  4086dd:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%rbp)
  4086e4:	8b 45 bc             	mov    -0x44(%rbp),%eax
  4086e7:	89 85 7c fd ff ff    	mov    %eax,-0x284(%rbp)
  4086ed:	83 f8 00             	cmp    $0x0,%eax
  4086f0:	74 11                	je     408703 <mbedtls_ssl_read_record+0x4d3>
  4086f2:	8b 85 7c fd ff ff    	mov    -0x284(%rbp),%eax
  4086f8:	89 85 8c fd ff ff    	mov    %eax,-0x274(%rbp)
  4086fe:	e9 c8 0f 00 00       	jmpq   4096cb <mbedtls_ssl_read_record+0x149b>
  408703:	48 8b bd 80 fd ff ff 	mov    -0x280(%rbp),%rdi
  40870a:	48 8b 85 80 fd ff ff 	mov    -0x280(%rbp),%rax
  408711:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  408715:	48 8b 85 80 fd ff ff 	mov    -0x280(%rbp),%rax
  40871c:	48 8b 80 d8 00 00 00 	mov    0xd8(%rax),%rax
  408723:	48 83 c0 05          	add    $0x5,%rax
  408727:	48 89 c6             	mov    %rax,%rsi
  40872a:	e8 31 ea ff ff       	callq  407160 <mbedtls_ssl_fetch_input>
  40872f:	89 85 7c fd ff ff    	mov    %eax,-0x284(%rbp)
  408735:	83 f8 00             	cmp    $0x0,%eax
  408738:	74 11                	je     40874b <mbedtls_ssl_read_record+0x51b>
  40873a:	8b 85 7c fd ff ff    	mov    -0x284(%rbp),%eax
  408740:	89 85 8c fd ff ff    	mov    %eax,-0x274(%rbp)
  408746:	e9 80 0f 00 00       	jmpq   4096cb <mbedtls_ssl_read_record+0x149b>
  40874b:	48 8b 85 80 fd ff ff 	mov    -0x280(%rbp),%rax
  408752:	48 c7 80 e0 00 00 00 	movq   $0x0,0xe0(%rax)
  408759:	00 00 00 00 
  40875d:	48 8b 85 80 fd ff ff 	mov    -0x280(%rbp),%rax
  408764:	48 89 85 a0 fd ff ff 	mov    %rax,-0x260(%rbp)
  40876b:	c7 85 98 fd ff ff 00 	movl   $0x0,-0x268(%rbp)
  408772:	00 00 00 
  408775:	83 bd 98 fd ff ff 00 	cmpl   $0x0,-0x268(%rbp)
  40877c:	0f 85 16 0f 00 00    	jne    409698 <mbedtls_ssl_read_record+0x1468>
  408782:	48 8b 85 a0 fd ff ff 	mov    -0x260(%rbp),%rax
  408789:	48 83 78 60 00       	cmpq   $0x0,0x60(%rax)
  40878e:	0f 84 04 0f 00 00    	je     409698 <mbedtls_ssl_read_record+0x1468>
  408794:	48 8b 85 a0 fd ff ff 	mov    -0x260(%rbp),%rax
  40879b:	48 89 85 60 fe ff ff 	mov    %rax,-0x1a0(%rbp)
  4087a2:	c7 85 58 fe ff ff 00 	movl   $0x0,-0x1a8(%rbp)
  4087a9:	00 00 00 
  4087ac:	48 c7 85 50 fe ff ff 	movq   $0x0,-0x1b0(%rbp)
  4087b3:	00 00 00 00 
  4087b7:	48 c7 85 48 fe ff ff 	movq   $0x1,-0x1b8(%rbp)
  4087be:	01 00 00 00 
  4087c2:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
  4087c9:	48 83 78 38 00       	cmpq   $0x0,0x38(%rax)
  4087ce:	74 0e                	je     4087de <mbedtls_ssl_read_record+0x5ae>
  4087d0:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
  4087d7:	48 83 78 60 00       	cmpq   $0x0,0x60(%rax)
  4087dc:	75 0f                	jne    4087ed <mbedtls_ssl_read_record+0x5bd>
  4087de:	c7 85 6c fe ff ff 00 	movl   $0xffff9400,-0x194(%rbp)
  4087e5:	94 ff ff 
  4087e8:	e9 6a 0e 00 00       	jmpq   409657 <mbedtls_ssl_read_record+0x1427>
  4087ed:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
  4087f4:	48 8b 40 60          	mov    0x60(%rax),%rax
  4087f8:	48 05 d8 00 00 00    	add    $0xd8,%rax
  4087fe:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
  408805:	48 8b 85 70 fe ff ff 	mov    -0x190(%rbp),%rax
  40880c:	48 83 38 00          	cmpq   $0x0,(%rax)
  408810:	75 0c                	jne    40881e <mbedtls_ssl_read_record+0x5ee>
  408812:	c7 85 7c fe ff ff 00 	movl   $0x0,-0x184(%rbp)
  408819:	00 00 00 
  40881c:	eb 13                	jmp    408831 <mbedtls_ssl_read_record+0x601>
  40881e:	48 8b 85 70 fe ff ff 	mov    -0x190(%rbp),%rax
  408825:	48 8b 00             	mov    (%rax),%rax
  408828:	8b 48 04             	mov    0x4(%rax),%ecx
  40882b:	89 8d 7c fe ff ff    	mov    %ecx,-0x184(%rbp)
  408831:	8b 85 7c fe ff ff    	mov    -0x184(%rbp),%eax
  408837:	89 85 5c fe ff ff    	mov    %eax,-0x1a4(%rbp)
  40883d:	48 8b 8d 60 fe ff ff 	mov    -0x1a0(%rbp),%rcx
  408844:	48 8b 89 d8 00 00 00 	mov    0xd8(%rcx),%rcx
  40884b:	48 8b 95 60 fe ff ff 	mov    -0x1a0(%rbp),%rdx
  408852:	48 8b 52 60          	mov    0x60(%rdx),%rdx
  408856:	48 3b 4a 10          	cmp    0x10(%rdx),%rcx
  40885a:	73 0f                	jae    40886b <mbedtls_ssl_read_record+0x63b>
  40885c:	c7 85 6c fe ff ff 80 	movl   $0xffff8e80,-0x194(%rbp)
  408863:	8e ff ff 
  408866:	e9 ec 0d 00 00       	jmpq   409657 <mbedtls_ssl_read_record+0x1427>
  40886b:	83 bd 5c fe ff ff 02 	cmpl   $0x2,-0x1a4(%rbp)
  408872:	0f 85 e6 04 00 00    	jne    408d5e <mbedtls_ssl_read_record+0xb2e>
  408878:	48 c7 85 20 fe ff ff 	movq   $0x0,-0x1e0(%rbp)
  40887f:	00 00 00 00 
  408883:	48 c7 85 18 fe ff ff 	movq   $0x0,-0x1e8(%rbp)
  40888a:	00 00 00 00 
  40888e:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
  408895:	83 78 10 02          	cmpl   $0x2,0x10(%rax)
  408899:	7c 1d                	jl     4088b8 <mbedtls_ssl_read_record+0x688>
  40889b:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
  4088a2:	48 8b 40 60          	mov    0x60(%rax),%rax
  4088a6:	48 8b 40 18          	mov    0x18(%rax),%rax
  4088aa:	48 03 85 20 fe ff ff 	add    -0x1e0(%rbp),%rax
  4088b1:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
  4088b8:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
  4088bf:	48 8b 80 d8 00 00 00 	mov    0xd8(%rax),%rax
  4088c6:	48 8b 8d 20 fe ff ff 	mov    -0x1e0(%rbp),%rcx
  4088cd:	48 8b 95 60 fe ff ff 	mov    -0x1a0(%rbp),%rdx
  4088d4:	48 8b 52 60          	mov    0x60(%rdx),%rdx
  4088d8:	48 03 4a 18          	add    0x18(%rdx),%rcx
  4088dc:	48 39 c8             	cmp    %rcx,%rax
  4088df:	72 2d                	jb     40890e <mbedtls_ssl_read_record+0x6de>
  4088e1:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
  4088e8:	48 8b 80 d8 00 00 00 	mov    0xd8(%rax),%rax
  4088ef:	48 8b 8d 20 fe ff ff 	mov    -0x1e0(%rbp),%rcx
  4088f6:	48 8b 95 60 fe ff ff 	mov    -0x1a0(%rbp),%rdx
  4088fd:	48 8b 52 60          	mov    0x60(%rdx),%rdx
  408901:	48 03 4a 28          	add    0x28(%rdx),%rcx
  408905:	48 83 c1 01          	add    $0x1,%rcx
  408909:	48 39 c8             	cmp    %rcx,%rax
  40890c:	73 0f                	jae    40891d <mbedtls_ssl_read_record+0x6ed>
  40890e:	c7 85 6c fe ff ff 80 	movl   $0xffff8e80,-0x194(%rbp)
  408915:	8e ff ff 
  408918:	e9 3a 0d 00 00       	jmpq   409657 <mbedtls_ssl_read_record+0x1427>
  40891d:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
  408924:	48 8b 80 d8 00 00 00 	mov    0xd8(%rax),%rax
  40892b:	48 89 85 28 fe ff ff 	mov    %rax,-0x1d8(%rbp)
  408932:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
  408939:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  408940:	48 89 85 38 fe ff ff 	mov    %rax,-0x1c8(%rbp)
  408947:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
  40894e:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  408955:	48 89 85 30 fe ff ff 	mov    %rax,-0x1d0(%rbp)
  40895c:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
  408963:	48 8b 80 d8 00 00 00 	mov    0xd8(%rax),%rax
  40896a:	48 8b 8d 60 fe ff ff 	mov    -0x1a0(%rbp),%rcx
  408971:	48 8b 49 60          	mov    0x60(%rcx),%rcx
  408975:	31 d2                	xor    %edx,%edx
  408977:	48 f7 71 18          	divq   0x18(%rcx)
  40897b:	48 83 fa 00          	cmp    $0x0,%rdx
  40897f:	74 0f                	je     408990 <mbedtls_ssl_read_record+0x760>
  408981:	c7 85 6c fe ff ff 80 	movl   $0xffff8e80,-0x194(%rbp)
  408988:	8e ff ff 
  40898b:	e9 c7 0c 00 00       	jmpq   409657 <mbedtls_ssl_read_record+0x1427>
  408990:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
  408997:	83 78 10 02          	cmpl   $0x2,0x10(%rax)
  40899b:	0f 8c b2 00 00 00    	jl     408a53 <mbedtls_ssl_read_record+0x823>
  4089a1:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
  4089a8:	48 8b 40 60          	mov    0x60(%rax),%rax
  4089ac:	48 8b 40 18          	mov    0x18(%rax),%rax
  4089b0:	48 8b 8d 28 fe ff ff 	mov    -0x1d8(%rbp),%rcx
  4089b7:	48 29 c1             	sub    %rax,%rcx
  4089ba:	48 89 8d 28 fe ff ff 	mov    %rcx,-0x1d8(%rbp)
  4089c1:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
  4089c8:	48 8b 40 60          	mov    0x60(%rax),%rax
  4089cc:	48 8b 40 18          	mov    0x18(%rax),%rax
  4089d0:	48 8b 8d 60 fe ff ff 	mov    -0x1a0(%rbp),%rcx
  4089d7:	48 8b 91 d8 00 00 00 	mov    0xd8(%rcx),%rdx
  4089de:	48 29 c2             	sub    %rax,%rdx
  4089e1:	48 89 91 d8 00 00 00 	mov    %rdx,0xd8(%rcx)
  4089e8:	c6 85 17 fe ff ff 00 	movb   $0x0,-0x1e9(%rbp)
  4089ef:	0f b6 85 17 fe ff ff 	movzbl -0x1e9(%rbp),%eax
  4089f6:	89 c1                	mov    %eax,%ecx
  4089f8:	48 8b 95 60 fe ff ff 	mov    -0x1a0(%rbp),%rdx
  4089ff:	48 8b 52 60          	mov    0x60(%rdx),%rdx
  408a03:	48 3b 4a 18          	cmp    0x18(%rdx),%rcx
  408a07:	73 48                	jae    408a51 <mbedtls_ssl_read_record+0x821>
  408a09:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
  408a10:	48 8b 80 b8 00 00 00 	mov    0xb8(%rax),%rax
  408a17:	0f b6 8d 17 fe ff ff 	movzbl -0x1e9(%rbp),%ecx
  408a1e:	89 ca                	mov    %ecx,%edx
  408a20:	40 8a 34 10          	mov    (%rax,%rdx,1),%sil
  408a24:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
  408a2b:	48 8b 40 60          	mov    0x60(%rax),%rax
  408a2f:	0f b6 8d 17 fe ff ff 	movzbl -0x1e9(%rbp),%ecx
  408a36:	89 ca                	mov    %ecx,%edx
  408a38:	40 88 74 10 40       	mov    %sil,0x40(%rax,%rdx,1)
  408a3d:	40 8a b5 17 fe ff ff 	mov    -0x1e9(%rbp),%sil
  408a44:	40 80 c6 01          	add    $0x1,%sil
  408a48:	40 88 b5 17 fe ff ff 	mov    %sil,-0x1e9(%rbp)
  408a4f:	eb 9e                	jmp    4089ef <mbedtls_ssl_read_record+0x7bf>
  408a51:	eb 00                	jmp    408a53 <mbedtls_ssl_read_record+0x823>
  408a53:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
  408a5a:	48 8b 40 60          	mov    0x60(%rax),%rax
  408a5e:	48 05 d8 00 00 00    	add    $0xd8,%rax
  408a64:	48 8b 8d 60 fe ff ff 	mov    -0x1a0(%rbp),%rcx
  408a6b:	48 8b 49 60          	mov    0x60(%rcx),%rcx
  408a6f:	48 83 c1 40          	add    $0x40,%rcx
  408a73:	48 8b 95 60 fe ff ff 	mov    -0x1a0(%rbp),%rdx
  408a7a:	48 8b 52 60          	mov    0x60(%rdx),%rdx
  408a7e:	48 8b 52 18          	mov    0x18(%rdx),%rdx
  408a82:	48 8b b5 38 fe ff ff 	mov    -0x1c8(%rbp),%rsi
  408a89:	4c 8b 85 28 fe ff ff 	mov    -0x1d8(%rbp),%r8
  408a90:	4c 8b 8d 30 fe ff ff 	mov    -0x1d0(%rbp),%r9
  408a97:	48 89 c7             	mov    %rax,%rdi
  408a9a:	48 89 b5 e8 fc ff ff 	mov    %rsi,-0x318(%rbp)
  408aa1:	48 89 ce             	mov    %rcx,%rsi
  408aa4:	48 8b 8d e8 fc ff ff 	mov    -0x318(%rbp),%rcx
  408aab:	48 8d 85 18 fe ff ff 	lea    -0x1e8(%rbp),%rax
  408ab2:	48 89 04 24          	mov    %rax,(%rsp)
  408ab6:	e8 35 df 01 00       	callq  4269f0 <mbedtls_cipher_crypt>
  408abb:	89 85 44 fe ff ff    	mov    %eax,-0x1bc(%rbp)
  408ac1:	83 f8 00             	cmp    $0x0,%eax
  408ac4:	74 11                	je     408ad7 <mbedtls_ssl_read_record+0x8a7>
  408ac6:	8b 85 44 fe ff ff    	mov    -0x1bc(%rbp),%eax
  408acc:	89 85 6c fe ff ff    	mov    %eax,-0x194(%rbp)
  408ad2:	e9 80 0b 00 00       	jmpq   409657 <mbedtls_ssl_read_record+0x1427>
  408ad7:	48 8b 85 28 fe ff ff 	mov    -0x1d8(%rbp),%rax
  408ade:	48 3b 85 18 fe ff ff 	cmp    -0x1e8(%rbp),%rax
  408ae5:	74 0f                	je     408af6 <mbedtls_ssl_read_record+0x8c6>
  408ae7:	c7 85 6c fe ff ff 00 	movl   $0xffff9400,-0x194(%rbp)
  408aee:	94 ff ff 
  408af1:	e9 61 0b 00 00       	jmpq   409657 <mbedtls_ssl_read_record+0x1427>
  408af6:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
  408afd:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  408b04:	48 8b 8d 60 fe ff ff 	mov    -0x1a0(%rbp),%rcx
  408b0b:	48 8b 89 d8 00 00 00 	mov    0xd8(%rcx),%rcx
  408b12:	48 83 e9 01          	sub    $0x1,%rcx
  408b16:	0f b6 14 08          	movzbl (%rax,%rcx,1),%edx
  408b1a:	83 c2 01             	add    $0x1,%edx
  408b1d:	48 63 c2             	movslq %edx,%rax
  408b20:	48 89 85 50 fe ff ff 	mov    %rax,-0x1b0(%rbp)
  408b27:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
  408b2e:	48 8b 80 d8 00 00 00 	mov    0xd8(%rax),%rax
  408b35:	48 8b 8d 60 fe ff ff 	mov    -0x1a0(%rbp),%rcx
  408b3c:	48 8b 49 60          	mov    0x60(%rcx),%rcx
  408b40:	48 8b 49 28          	mov    0x28(%rcx),%rcx
  408b44:	48 03 8d 50 fe ff ff 	add    -0x1b0(%rbp),%rcx
  408b4b:	48 39 c8             	cmp    %rcx,%rax
  408b4e:	73 1f                	jae    408b6f <mbedtls_ssl_read_record+0x93f>
  408b50:	83 bd 58 fe ff ff 00 	cmpl   $0x0,-0x1a8(%rbp)
  408b57:	75 16                	jne    408b6f <mbedtls_ssl_read_record+0x93f>
  408b59:	48 c7 85 50 fe ff ff 	movq   $0x0,-0x1b0(%rbp)
  408b60:	00 00 00 00 
  408b64:	48 c7 85 48 fe ff ff 	movq   $0x0,-0x1b8(%rbp)
  408b6b:	00 00 00 00 
  408b6f:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
  408b76:	83 78 10 00          	cmpl   $0x0,0x10(%rax)
  408b7a:	0f 8e cf 01 00 00    	jle    408d4f <mbedtls_ssl_read_record+0xb1f>
  408b80:	48 c7 85 08 fe ff ff 	movq   $0x0,-0x1f8(%rbp)
  408b87:	00 00 00 00 
  408b8b:	48 c7 85 00 fe ff ff 	movq   $0x1,-0x200(%rbp)
  408b92:	01 00 00 00 
  408b96:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
  408b9d:	48 8b 80 d8 00 00 00 	mov    0xd8(%rax),%rax
  408ba4:	48 2b 85 50 fe ff ff 	sub    -0x1b0(%rbp),%rax
  408bab:	48 89 85 f8 fd ff ff 	mov    %rax,-0x208(%rbp)
  408bb2:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
  408bb9:	48 8b 8d 60 fe ff ff 	mov    -0x1a0(%rbp),%rcx
  408bc0:	48 3b 81 d8 00 00 00 	cmp    0xd8(%rcx),%rax
  408bc7:	0f 96 c2             	setbe  %dl
  408bca:	80 e2 01             	and    $0x1,%dl
  408bcd:	0f b6 f2             	movzbl %dl,%esi
  408bd0:	48 63 c6             	movslq %esi,%rax
  408bd3:	48 23 85 48 fe ff ff 	and    -0x1b8(%rbp),%rax
  408bda:	48 89 85 48 fe ff ff 	mov    %rax,-0x1b8(%rbp)
  408be1:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
  408be8:	48 8b 8d 60 fe ff ff 	mov    -0x1a0(%rbp),%rcx
  408bef:	48 8b 49 60          	mov    0x60(%rcx),%rcx
  408bf3:	48 8b 49 28          	mov    0x28(%rcx),%rcx
  408bf7:	48 81 c1 00 40 00 00 	add    $0x4000,%rcx
  408bfe:	48 39 c8             	cmp    %rcx,%rax
  408c01:	0f 96 c2             	setbe  %dl
  408c04:	80 e2 01             	and    $0x1,%dl
  408c07:	0f b6 f2             	movzbl %dl,%esi
  408c0a:	48 63 c6             	movslq %esi,%rax
  408c0d:	48 23 85 48 fe ff ff 	and    -0x1b8(%rbp),%rax
  408c14:	48 89 85 48 fe ff ff 	mov    %rax,-0x1b8(%rbp)
  408c1b:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
  408c22:	48 0f af 85 f8 fd ff 	imul   -0x208(%rbp),%rax
  408c29:	ff 
  408c2a:	48 89 85 f8 fd ff ff 	mov    %rax,-0x208(%rbp)
  408c31:	48 c7 85 f0 fd ff ff 	movq   $0x0,-0x210(%rbp)
  408c38:	00 00 00 00 
  408c3c:	48 81 bd f0 fd ff ff 	cmpq   $0x100,-0x210(%rbp)
  408c43:	00 01 00 00 
  408c47:	0f 83 94 00 00 00    	jae    408ce1 <mbedtls_ssl_read_record+0xab1>
  408c4d:	48 8b 85 f0 fd ff ff 	mov    -0x210(%rbp),%rax
  408c54:	48 3b 85 50 fe ff ff 	cmp    -0x1b0(%rbp),%rax
  408c5b:	0f 92 c1             	setb   %cl
  408c5e:	80 e1 01             	and    $0x1,%cl
  408c61:	0f b6 d1             	movzbl %cl,%edx
  408c64:	48 63 c2             	movslq %edx,%rax
  408c67:	48 23 85 00 fe ff ff 	and    -0x200(%rbp),%rax
  408c6e:	48 89 85 00 fe ff ff 	mov    %rax,-0x200(%rbp)
  408c75:	48 8b 85 00 fe ff ff 	mov    -0x200(%rbp),%rax
  408c7c:	48 8b b5 60 fe ff ff 	mov    -0x1a0(%rbp),%rsi
  408c83:	48 8b b6 c0 00 00 00 	mov    0xc0(%rsi),%rsi
  408c8a:	48 8b bd f8 fd ff ff 	mov    -0x208(%rbp),%rdi
  408c91:	48 03 bd f0 fd ff ff 	add    -0x210(%rbp),%rdi
  408c98:	0f b6 14 3e          	movzbl (%rsi,%rdi,1),%edx
  408c9c:	89 d6                	mov    %edx,%esi
  408c9e:	48 8b bd 50 fe ff ff 	mov    -0x1b0(%rbp),%rdi
  408ca5:	48 83 ef 01          	sub    $0x1,%rdi
  408ca9:	48 39 fe             	cmp    %rdi,%rsi
  408cac:	0f 94 c1             	sete   %cl
  408caf:	80 e1 01             	and    $0x1,%cl
  408cb2:	0f b6 d1             	movzbl %cl,%edx
  408cb5:	48 63 f2             	movslq %edx,%rsi
  408cb8:	48 0f af c6          	imul   %rsi,%rax
  408cbc:	48 03 85 08 fe ff ff 	add    -0x1f8(%rbp),%rax
  408cc3:	48 89 85 08 fe ff ff 	mov    %rax,-0x1f8(%rbp)
  408cca:	48 8b 85 f0 fd ff ff 	mov    -0x210(%rbp),%rax
  408cd1:	48 83 c0 01          	add    $0x1,%rax
  408cd5:	48 89 85 f0 fd ff ff 	mov    %rax,-0x210(%rbp)
  408cdc:	e9 5b ff ff ff       	jmpq   408c3c <mbedtls_ssl_read_record+0xa0c>
  408ce1:	48 8b 85 08 fe ff ff 	mov    -0x1f8(%rbp),%rax
  408ce8:	48 3b 85 50 fe ff ff 	cmp    -0x1b0(%rbp),%rax
  408cef:	0f 94 c1             	sete   %cl
  408cf2:	80 e1 01             	and    $0x1,%cl
  408cf5:	0f b6 d1             	movzbl %cl,%edx
  408cf8:	48 63 c2             	movslq %edx,%rax
  408cfb:	48 23 85 48 fe ff ff 	and    -0x1b8(%rbp),%rax
  408d02:	48 89 85 48 fe ff ff 	mov    %rax,-0x1b8(%rbp)
  408d09:	48 69 85 48 fe ff ff 	imul   $0x1ff,-0x1b8(%rbp),%rax
  408d10:	ff 01 00 00 
  408d14:	48 23 85 50 fe ff ff 	and    -0x1b0(%rbp),%rax
  408d1b:	48 89 85 50 fe ff ff 	mov    %rax,-0x1b0(%rbp)
  408d22:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
  408d29:	48 8b b5 60 fe ff ff 	mov    -0x1a0(%rbp),%rsi
  408d30:	48 8b be d8 00 00 00 	mov    0xd8(%rsi),%rdi
  408d37:	48 29 c7             	sub    %rax,%rdi
  408d3a:	48 89 be d8 00 00 00 	mov    %rdi,0xd8(%rsi)
  408d41:	83 bd 58 fe ff ff 00 	cmpl   $0x0,-0x1a8(%rbp)
  408d48:	74 23                	je     408d6d <mbedtls_ssl_read_record+0xb3d>
  408d4a:	e9 e5 07 00 00       	jmpq   409534 <mbedtls_ssl_read_record+0x1304>
  408d4f:	c7 85 6c fe ff ff 00 	movl   $0xffff9400,-0x194(%rbp)
  408d56:	94 ff ff 
  408d59:	e9 f9 08 00 00       	jmpq   409657 <mbedtls_ssl_read_record+0x1427>
  408d5e:	c7 85 6c fe ff ff 00 	movl   $0xffff9400,-0x194(%rbp)
  408d65:	94 ff ff 
  408d68:	e9 ea 08 00 00       	jmpq   409657 <mbedtls_ssl_read_record+0x1427>
  408d6d:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
  408d74:	48 8b 40 60          	mov    0x60(%rax),%rax
  408d78:	48 8b 40 28          	mov    0x28(%rax),%rax
  408d7c:	48 8b 8d 60 fe ff ff 	mov    -0x1a0(%rbp),%rcx
  408d83:	48 8b 91 d8 00 00 00 	mov    0xd8(%rcx),%rdx
  408d8a:	48 29 c2             	sub    %rax,%rdx
  408d8d:	48 89 91 d8 00 00 00 	mov    %rdx,0xd8(%rcx)
  408d94:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
  408d9b:	48 8b 80 d8 00 00 00 	mov    0xd8(%rax),%rax
  408da2:	48 c1 e8 08          	shr    $0x8,%rax
  408da6:	40 88 c6             	mov    %al,%sil
  408da9:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
  408db0:	48 8b 80 b0 00 00 00 	mov    0xb0(%rax),%rax
  408db7:	40 88 30             	mov    %sil,(%rax)
  408dba:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
  408dc1:	48 8b 80 d8 00 00 00 	mov    0xd8(%rax),%rax
  408dc8:	40 88 c6             	mov    %al,%sil
  408dcb:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
  408dd2:	48 8b 80 b0 00 00 00 	mov    0xb0(%rax),%rax
  408dd9:	40 88 70 01          	mov    %sil,0x1(%rax)
  408ddd:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
  408de4:	83 78 10 00          	cmpl   $0x0,0x10(%rax)
  408de8:	0f 8e 99 06 00 00    	jle    409487 <mbedtls_ssl_read_record+0x1257>
  408dee:	48 c7 85 c0 fd ff ff 	movq   $0x0,-0x240(%rbp)
  408df5:	00 00 00 00 
  408df9:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
  408e00:	48 8b 80 d8 00 00 00 	mov    0xd8(%rax),%rax
  408e07:	48 03 85 50 fe ff ff 	add    -0x1b0(%rbp),%rax
  408e0e:	48 89 85 b8 fd ff ff 	mov    %rax,-0x248(%rbp)
  408e15:	48 81 bd b8 fd ff ff 	cmpq   $0x100,-0x248(%rbp)
  408e1c:	00 01 00 00 
  408e20:	76 16                	jbe    408e38 <mbedtls_ssl_read_record+0xc08>
  408e22:	48 8b 85 b8 fd ff ff 	mov    -0x248(%rbp),%rax
  408e29:	48 2d 00 01 00 00    	sub    $0x100,%rax
  408e2f:	48 89 85 e0 fc ff ff 	mov    %rax,-0x320(%rbp)
  408e36:	eb 0d                	jmp    408e45 <mbedtls_ssl_read_record+0xc15>
  408e38:	31 c0                	xor    %eax,%eax
  408e3a:	89 c1                	mov    %eax,%ecx
  408e3c:	48 89 8d e0 fc ff ff 	mov    %rcx,-0x320(%rbp)
  408e43:	eb 00                	jmp    408e45 <mbedtls_ssl_read_record+0xc15>
  408e45:	48 8b 85 e0 fc ff ff 	mov    -0x320(%rbp),%rax
  408e4c:	48 89 85 b0 fd ff ff 	mov    %rax,-0x250(%rbp)
  408e53:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
  408e5a:	48 8b 40 60          	mov    0x60(%rax),%rax
  408e5e:	48 8b 00             	mov    (%rax),%rax
  408e61:	8b 48 14             	mov    0x14(%rax),%ecx
  408e64:	89 ca                	mov    %ecx,%edx
  408e66:	83 c2 fd             	add    $0xfffffffd,%edx
  408e69:	83 ea 02             	sub    $0x2,%edx
  408e6c:	89 8d dc fc ff ff    	mov    %ecx,-0x324(%rbp)
  408e72:	89 95 d8 fc ff ff    	mov    %edx,-0x328(%rbp)
  408e78:	72 19                	jb     408e93 <mbedtls_ssl_read_record+0xc63>
  408e7a:	eb 00                	jmp    408e7c <mbedtls_ssl_read_record+0xc4c>
  408e7c:	8b 85 dc fc ff ff    	mov    -0x324(%rbp),%eax
  408e82:	83 e8 06             	sub    $0x6,%eax
  408e85:	89 85 d4 fc ff ff    	mov    %eax,-0x32c(%rbp)
  408e8b:	0f 85 a2 00 00 00    	jne    408f33 <mbedtls_ssl_read_record+0xd03>
  408e91:	eb 00                	jmp    408e93 <mbedtls_ssl_read_record+0xc63>
  408e93:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
  408e9a:	48 8b 80 d8 00 00 00 	mov    0xd8(%rax),%rax
  408ea1:	48 83 c0 0d          	add    $0xd,%rax
  408ea5:	48 03 85 50 fe ff ff 	add    -0x1b0(%rbp),%rax
  408eac:	48 83 c0 08          	add    $0x8,%rax
  408eb0:	48 c1 e8 06          	shr    $0x6,%rax
  408eb4:	48 8b 8d 60 fe ff ff 	mov    -0x1a0(%rbp),%rcx
  408ebb:	48 8b 89 d8 00 00 00 	mov    0xd8(%rcx),%rcx
  408ec2:	48 83 c1 0d          	add    $0xd,%rcx
  408ec6:	48 83 c1 08          	add    $0x8,%rcx
  408eca:	48 c1 e9 06          	shr    $0x6,%rcx
  408ece:	48 29 c8             	sub    %rcx,%rax
  408ed1:	48 89 85 c0 fd ff ff 	mov    %rax,-0x240(%rbp)
  408ed8:	48 69 85 48 fe ff ff 	imul   $0xff,-0x1b8(%rbp),%rax
  408edf:	ff 00 00 00 
  408ee3:	48 23 85 c0 fd ff ff 	and    -0x240(%rbp),%rax
  408eea:	48 89 85 c0 fd ff ff 	mov    %rax,-0x240(%rbp)
  408ef1:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
  408ef8:	48 8b 40 60          	mov    0x60(%rax),%rax
  408efc:	48 83 c0 68          	add    $0x68,%rax
  408f00:	48 8b 8d 60 fe ff ff 	mov    -0x1a0(%rbp),%rcx
  408f07:	48 8b 89 a0 00 00 00 	mov    0xa0(%rcx),%rcx
  408f0e:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
  408f15:	48 89 8d 08 ff ff ff 	mov    %rcx,-0xf8(%rbp)
  408f1c:	48 c7 85 00 ff ff ff 	movq   $0x8,-0x100(%rbp)
  408f23:	08 00 00 00 
  408f27:	48 83 bd 10 ff ff ff 	cmpq   $0x0,-0xf0(%rbp)
  408f2e:	00 
  408f2f:	74 2c                	je     408f5d <mbedtls_ssl_read_record+0xd2d>
  408f31:	eb 0f                	jmp    408f42 <mbedtls_ssl_read_record+0xd12>
  408f33:	c7 85 6c fe ff ff 00 	movl   $0xffff9400,-0x194(%rbp)
  408f3a:	94 ff ff 
  408f3d:	e9 15 07 00 00       	jmpq   409657 <mbedtls_ssl_read_record+0x1427>
  408f42:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
  408f49:	48 83 38 00          	cmpq   $0x0,(%rax)
  408f4d:	74 0e                	je     408f5d <mbedtls_ssl_read_record+0xd2d>
  408f4f:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
  408f56:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
  408f5b:	75 0c                	jne    408f69 <mbedtls_ssl_read_record+0xd39>
  408f5d:	c7 85 1c ff ff ff 00 	movl   $0xffffaf00,-0xe4(%rbp)
  408f64:	af ff ff 
  408f67:	eb 2f                	jmp    408f98 <mbedtls_ssl_read_record+0xd68>
  408f69:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
  408f70:	48 8b 00             	mov    (%rax),%rax
  408f73:	48 8b 40 20          	mov    0x20(%rax),%rax
  408f77:	48 8b 8d 10 ff ff ff 	mov    -0xf0(%rbp),%rcx
  408f7e:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  408f82:	48 8b b5 08 ff ff ff 	mov    -0xf8(%rbp),%rsi
  408f89:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
  408f90:	ff d0                	callq  *%rax
  408f92:	89 85 1c ff ff ff    	mov    %eax,-0xe4(%rbp)
  408f98:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
  408f9f:	48 8b 40 60          	mov    0x60(%rax),%rax
  408fa3:	48 83 c0 68          	add    $0x68,%rax
  408fa7:	48 8b 8d 60 fe ff ff 	mov    -0x1a0(%rbp),%rcx
  408fae:	48 8b 89 a8 00 00 00 	mov    0xa8(%rcx),%rcx
  408fb5:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
  408fbc:	48 89 8d 28 ff ff ff 	mov    %rcx,-0xd8(%rbp)
  408fc3:	48 c7 85 20 ff ff ff 	movq   $0x3,-0xe0(%rbp)
  408fca:	03 00 00 00 
  408fce:	48 83 bd 30 ff ff ff 	cmpq   $0x0,-0xd0(%rbp)
  408fd5:	00 
  408fd6:	74 1b                	je     408ff3 <mbedtls_ssl_read_record+0xdc3>
  408fd8:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
  408fdf:	48 83 38 00          	cmpq   $0x0,(%rax)
  408fe3:	74 0e                	je     408ff3 <mbedtls_ssl_read_record+0xdc3>
  408fe5:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
  408fec:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
  408ff1:	75 0c                	jne    408fff <mbedtls_ssl_read_record+0xdcf>
  408ff3:	c7 85 3c ff ff ff 00 	movl   $0xffffaf00,-0xc4(%rbp)
  408ffa:	af ff ff 
  408ffd:	eb 2f                	jmp    40902e <mbedtls_ssl_read_record+0xdfe>
  408fff:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
  409006:	48 8b 00             	mov    (%rax),%rax
  409009:	48 8b 40 20          	mov    0x20(%rax),%rax
  40900d:	48 8b 8d 30 ff ff ff 	mov    -0xd0(%rbp),%rcx
  409014:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  409018:	48 8b b5 28 ff ff ff 	mov    -0xd8(%rbp),%rsi
  40901f:	48 8b 95 20 ff ff ff 	mov    -0xe0(%rbp),%rdx
  409026:	ff d0                	callq  *%rax
  409028:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
  40902e:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
  409035:	48 8b 40 60          	mov    0x60(%rax),%rax
  409039:	48 83 c0 68          	add    $0x68,%rax
  40903d:	48 8b 8d 60 fe ff ff 	mov    -0x1a0(%rbp),%rcx
  409044:	48 8b 89 b0 00 00 00 	mov    0xb0(%rcx),%rcx
  40904b:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
  409052:	48 89 8d 48 ff ff ff 	mov    %rcx,-0xb8(%rbp)
  409059:	48 c7 85 40 ff ff ff 	movq   $0x2,-0xc0(%rbp)
  409060:	02 00 00 00 
  409064:	48 83 bd 50 ff ff ff 	cmpq   $0x0,-0xb0(%rbp)
  40906b:	00 
  40906c:	74 1b                	je     409089 <mbedtls_ssl_read_record+0xe59>
  40906e:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
  409075:	48 83 38 00          	cmpq   $0x0,(%rax)
  409079:	74 0e                	je     409089 <mbedtls_ssl_read_record+0xe59>
  40907b:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
  409082:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
  409087:	75 0c                	jne    409095 <mbedtls_ssl_read_record+0xe65>
  409089:	c7 85 5c ff ff ff 00 	movl   $0xffffaf00,-0xa4(%rbp)
  409090:	af ff ff 
  409093:	eb 2f                	jmp    4090c4 <mbedtls_ssl_read_record+0xe94>
  409095:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
  40909c:	48 8b 00             	mov    (%rax),%rax
  40909f:	48 8b 40 20          	mov    0x20(%rax),%rax
  4090a3:	48 8b 8d 50 ff ff ff 	mov    -0xb0(%rbp),%rcx
  4090aa:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  4090ae:	48 8b b5 48 ff ff ff 	mov    -0xb8(%rbp),%rsi
  4090b5:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
  4090bc:	ff d0                	callq  *%rax
  4090be:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%rbp)
  4090c4:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
  4090cb:	48 8b 40 60          	mov    0x60(%rax),%rax
  4090cf:	48 83 c0 68          	add    $0x68,%rax
  4090d3:	48 8b 8d 60 fe ff ff 	mov    -0x1a0(%rbp),%rcx
  4090da:	48 8b 89 c0 00 00 00 	mov    0xc0(%rcx),%rcx
  4090e1:	48 8b 95 60 fe ff ff 	mov    -0x1a0(%rbp),%rdx
  4090e8:	48 8b 92 d8 00 00 00 	mov    0xd8(%rdx),%rdx
  4090ef:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
  4090f6:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
  4090fd:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
  409104:	48 83 bd 70 ff ff ff 	cmpq   $0x0,-0x90(%rbp)
  40910b:	00 
  40910c:	74 1b                	je     409129 <mbedtls_ssl_read_record+0xef9>
  40910e:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  409115:	48 83 38 00          	cmpq   $0x0,(%rax)
  409119:	74 0e                	je     409129 <mbedtls_ssl_read_record+0xef9>
  40911b:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  409122:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
  409127:	75 0c                	jne    409135 <mbedtls_ssl_read_record+0xf05>
  409129:	c7 85 78 ff ff ff 00 	movl   $0xffffaf00,-0x88(%rbp)
  409130:	af ff ff 
  409133:	eb 2f                	jmp    409164 <mbedtls_ssl_read_record+0xf34>
  409135:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  40913c:	48 8b 00             	mov    (%rax),%rax
  40913f:	48 8b 40 20          	mov    0x20(%rax),%rax
  409143:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx
  40914a:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  40914e:	48 8b b5 68 ff ff ff 	mov    -0x98(%rbp),%rsi
  409155:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
  40915c:	ff d0                	callq  *%rax
  40915e:	89 85 78 ff ff ff    	mov    %eax,-0x88(%rbp)
  409164:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
  40916b:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  409172:	48 8b 8d 60 fe ff ff 	mov    -0x1a0(%rbp),%rcx
  409179:	48 03 81 d8 00 00 00 	add    0xd8(%rcx),%rax
  409180:	48 8b 8d 50 fe ff ff 	mov    -0x1b0(%rbp),%rcx
  409187:	48 89 45 88          	mov    %rax,-0x78(%rbp)
  40918b:	48 89 4d 80          	mov    %rcx,-0x80(%rbp)
  40918f:	c6 85 7f ff ff ff 00 	movb   $0x0,-0x81(%rbp)
  409196:	48 83 7d 80 00       	cmpq   $0x0,-0x80(%rbp)
  40919b:	74 34                	je     4091d1 <mbedtls_ssl_read_record+0xfa1>
  40919d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  4091a1:	0f b6 08             	movzbl (%rax),%ecx
  4091a4:	0f b6 95 7f ff ff ff 	movzbl -0x81(%rbp),%edx
  4091ab:	31 ca                	xor    %ecx,%edx
  4091ad:	40 88 d6             	mov    %dl,%sil
  4091b0:	40 88 b5 7f ff ff ff 	mov    %sil,-0x81(%rbp)
  4091b7:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  4091bb:	48 83 c0 01          	add    $0x1,%rax
  4091bf:	48 89 45 88          	mov    %rax,-0x78(%rbp)
  4091c3:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  4091c7:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
  4091cb:	48 89 45 80          	mov    %rax,-0x80(%rbp)
  4091cf:	eb c5                	jmp    409196 <mbedtls_ssl_read_record+0xf66>
  4091d1:	48 8d b5 d0 fd ff ff 	lea    -0x230(%rbp),%rsi
  4091d8:	8a 85 7f ff ff ff    	mov    -0x81(%rbp),%al
  4091de:	88 85 7e ff ff ff    	mov    %al,-0x82(%rbp)
  4091e4:	8a 85 7e ff ff ff    	mov    -0x82(%rbp),%al
  4091ea:	48 8b 8d 60 fe ff ff 	mov    -0x1a0(%rbp),%rcx
  4091f1:	48 8b 49 60          	mov    0x60(%rcx),%rcx
  4091f5:	48 83 c1 68          	add    $0x68,%rcx
  4091f9:	48 89 cf             	mov    %rcx,%rdi
  4091fc:	88 85 d3 fc ff ff    	mov    %al,-0x32d(%rbp)
  409202:	e8 d9 22 02 00       	callq  42b4e0 <mbedtls_md_hmac_finish>
  409207:	48 c7 85 c8 fd ff ff 	movq   $0x0,-0x238(%rbp)
  40920e:	00 00 00 00 
  409212:	89 85 cc fc ff ff    	mov    %eax,-0x334(%rbp)
  409218:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
  40921f:	48 8b 8d c0 fd ff ff 	mov    -0x240(%rbp),%rcx
  409226:	48 83 c1 01          	add    $0x1,%rcx
  40922a:	48 39 c8             	cmp    %rcx,%rax
  40922d:	73 72                	jae    4092a1 <mbedtls_ssl_read_record+0x1071>
  40922f:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
  409236:	48 8b 40 60          	mov    0x60(%rax),%rax
  40923a:	48 83 c0 68          	add    $0x68,%rax
  40923e:	48 8b 8d 60 fe ff ff 	mov    -0x1a0(%rbp),%rcx
  409245:	48 8b 89 c0 00 00 00 	mov    0xc0(%rcx),%rcx
  40924c:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  409250:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
  409254:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
  409259:	74 0a                	je     409265 <mbedtls_ssl_read_record+0x1035>
  40925b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  40925f:	48 83 38 00          	cmpq   $0x0,(%rax)
  409263:	75 09                	jne    40926e <mbedtls_ssl_read_record+0x103e>
  409265:	c7 45 a4 00 af ff ff 	movl   $0xffffaf00,-0x5c(%rbp)
  40926c:	eb 1c                	jmp    40928a <mbedtls_ssl_read_record+0x105a>
  40926e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  409272:	48 8b 00             	mov    (%rax),%rax
  409275:	48 8b 40 50          	mov    0x50(%rax),%rax
  409279:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
  40927d:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  409281:	48 8b 75 90          	mov    -0x70(%rbp),%rsi
  409285:	ff d0                	callq  *%rax
  409287:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  40928a:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
  409291:	48 83 c0 01          	add    $0x1,%rax
  409295:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
  40929c:	e9 77 ff ff ff       	jmpq   409218 <mbedtls_ssl_read_record+0xfe8>
  4092a1:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
  4092a8:	48 8b 40 60          	mov    0x60(%rax),%rax
  4092ac:	48 83 c0 68          	add    $0x68,%rax
  4092b0:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
  4092b7:	48 83 bd f0 fe ff ff 	cmpq   $0x0,-0x110(%rbp)
  4092be:	00 
  4092bf:	74 1b                	je     4092dc <mbedtls_ssl_read_record+0x10ac>
  4092c1:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
  4092c8:	48 83 38 00          	cmpq   $0x0,(%rax)
  4092cc:	74 0e                	je     4092dc <mbedtls_ssl_read_record+0x10ac>
  4092ce:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
  4092d5:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
  4092da:	75 0c                	jne    4092e8 <mbedtls_ssl_read_record+0x10b8>
  4092dc:	c7 85 fc fe ff ff 00 	movl   $0xffffaf00,-0x104(%rbp)
  4092e3:	af ff ff 
  4092e6:	eb 7c                	jmp    409364 <mbedtls_ssl_read_record+0x1134>
  4092e8:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
  4092ef:	48 8b 40 10          	mov    0x10(%rax),%rax
  4092f3:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
  4092fa:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
  409301:	48 8b 00             	mov    (%rax),%rax
  409304:	48 8b 40 18          	mov    0x18(%rax),%rax
  409308:	48 8b 8d f0 fe ff ff 	mov    -0x110(%rbp),%rcx
  40930f:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  409313:	ff d0                	callq  *%rax
  409315:	89 85 ec fe ff ff    	mov    %eax,-0x114(%rbp)
  40931b:	83 f8 00             	cmp    $0x0,%eax
  40931e:	74 0e                	je     40932e <mbedtls_ssl_read_record+0x10fe>
  409320:	8b 85 ec fe ff ff    	mov    -0x114(%rbp),%eax
  409326:	89 85 fc fe ff ff    	mov    %eax,-0x104(%rbp)
  40932c:	eb 36                	jmp    409364 <mbedtls_ssl_read_record+0x1134>
  40932e:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
  409335:	48 8b 00             	mov    (%rax),%rax
  409338:	48 8b 40 20          	mov    0x20(%rax),%rax
  40933c:	48 8b 8d f0 fe ff ff 	mov    -0x110(%rbp),%rcx
  409343:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  409347:	48 8b b5 e0 fe ff ff 	mov    -0x120(%rbp),%rsi
  40934e:	48 8b 8d f0 fe ff ff 	mov    -0x110(%rbp),%rcx
  409355:	48 8b 09             	mov    (%rcx),%rcx
  409358:	48 63 51 14          	movslq 0x14(%rcx),%rdx
  40935c:	ff d0                	callq  *%rax
  40935e:	89 85 fc fe ff ff    	mov    %eax,-0x104(%rbp)
  409364:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
  40936b:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  409372:	48 03 85 b0 fd ff ff 	add    -0x250(%rbp),%rax
  409379:	48 8b 8d b8 fd ff ff 	mov    -0x248(%rbp),%rcx
  409380:	48 2b 8d b0 fd ff ff 	sub    -0x250(%rbp),%rcx
  409387:	48 8b 95 60 fe ff ff 	mov    -0x1a0(%rbp),%rdx
  40938e:	48 8b 52 60          	mov    0x60(%rdx),%rdx
  409392:	48 03 4a 28          	add    0x28(%rdx),%rcx
  409396:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
  40939d:	48 89 8d d0 fe ff ff 	mov    %rcx,-0x130(%rbp)
  4093a4:	c6 85 cf fe ff ff 00 	movb   $0x0,-0x131(%rbp)
  4093ab:	48 83 bd d0 fe ff ff 	cmpq   $0x0,-0x130(%rbp)
  4093b2:	00 
  4093b3:	74 43                	je     4093f8 <mbedtls_ssl_read_record+0x11c8>
  4093b5:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
  4093bc:	0f b6 08             	movzbl (%rax),%ecx
  4093bf:	0f b6 95 cf fe ff ff 	movzbl -0x131(%rbp),%edx
  4093c6:	31 ca                	xor    %ecx,%edx
  4093c8:	40 88 d6             	mov    %dl,%sil
  4093cb:	40 88 b5 cf fe ff ff 	mov    %sil,-0x131(%rbp)
  4093d2:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
  4093d9:	48 83 c0 01          	add    $0x1,%rax
  4093dd:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
  4093e4:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
  4093eb:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
  4093ef:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
  4093f6:	eb b3                	jmp    4093ab <mbedtls_ssl_read_record+0x117b>
  4093f8:	48 8d 85 d0 fd ff ff 	lea    -0x230(%rbp),%rax
  4093ff:	8a 8d cf fe ff ff    	mov    -0x131(%rbp),%cl
  409405:	88 8d ce fe ff ff    	mov    %cl,-0x132(%rbp)
  40940b:	8a 8d ce fe ff ff    	mov    -0x132(%rbp),%cl
  409411:	48 8b 95 60 fe ff ff 	mov    -0x1a0(%rbp),%rdx
  409418:	48 8b 92 c0 00 00 00 	mov    0xc0(%rdx),%rdx
  40941f:	48 8b b5 60 fe ff ff 	mov    -0x1a0(%rbp),%rsi
  409426:	48 03 96 d8 00 00 00 	add    0xd8(%rsi),%rdx
  40942d:	48 8b b5 60 fe ff ff 	mov    -0x1a0(%rbp),%rsi
  409434:	48 8b 76 60          	mov    0x60(%rsi),%rsi
  409438:	48 8b 76 28          	mov    0x28(%rsi),%rsi
  40943c:	48 89 95 c0 fe ff ff 	mov    %rdx,-0x140(%rbp)
  409443:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
  40944a:	48 89 b5 b0 fe ff ff 	mov    %rsi,-0x150(%rbp)
  409451:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  409458:	48 89 85 a0 fe ff ff 	mov    %rax,-0x160(%rbp)
  40945f:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  409466:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
  40946d:	c6 85 97 fe ff ff 00 	movb   $0x0,-0x169(%rbp)
  409474:	48 c7 85 a8 fe ff ff 	movq   $0x0,-0x158(%rbp)
  40947b:	00 00 00 00 
  40947f:	88 8d cb fc ff ff    	mov    %cl,-0x335(%rbp)
  409485:	eb 0f                	jmp    409496 <mbedtls_ssl_read_record+0x1266>
  409487:	c7 85 6c fe ff ff 00 	movl   $0xffff9400,-0x194(%rbp)
  40948e:	94 ff ff 
  409491:	e9 c1 01 00 00       	jmpq   409657 <mbedtls_ssl_read_record+0x1427>
  409496:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
  40949d:	48 3b 85 b0 fe ff ff 	cmp    -0x150(%rbp),%rax
  4094a4:	73 66                	jae    40950c <mbedtls_ssl_read_record+0x12dc>
  4094a6:	48 8b 85 a0 fe ff ff 	mov    -0x160(%rbp),%rax
  4094ad:	48 8b 8d a8 fe ff ff 	mov    -0x158(%rbp),%rcx
  4094b4:	8a 14 08             	mov    (%rax,%rcx,1),%dl
  4094b7:	88 95 96 fe ff ff    	mov    %dl,-0x16a(%rbp)
  4094bd:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  4094c4:	48 8b 8d a8 fe ff ff 	mov    -0x158(%rbp),%rcx
  4094cb:	8a 14 08             	mov    (%rax,%rcx,1),%dl
  4094ce:	88 95 95 fe ff ff    	mov    %dl,-0x16b(%rbp)
  4094d4:	0f b6 b5 96 fe ff ff 	movzbl -0x16a(%rbp),%esi
  4094db:	0f b6 bd 95 fe ff ff 	movzbl -0x16b(%rbp),%edi
  4094e2:	31 fe                	xor    %edi,%esi
  4094e4:	8a 95 97 fe ff ff    	mov    -0x169(%rbp),%dl
  4094ea:	0f b6 fa             	movzbl %dl,%edi
  4094ed:	09 f7                	or     %esi,%edi
  4094ef:	40 88 fa             	mov    %dil,%dl
  4094f2:	88 95 97 fe ff ff    	mov    %dl,-0x169(%rbp)
  4094f8:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
  4094ff:	48 83 c0 01          	add    $0x1,%rax
  409503:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
  40950a:	eb 8a                	jmp    409496 <mbedtls_ssl_read_record+0x1266>
  40950c:	8a 85 97 fe ff ff    	mov    -0x169(%rbp),%al
  409512:	0f b6 c8             	movzbl %al,%ecx
  409515:	83 f9 00             	cmp    $0x0,%ecx
  409518:	74 0b                	je     409525 <mbedtls_ssl_read_record+0x12f5>
  40951a:	48 c7 85 48 fe ff ff 	movq   $0x0,-0x1b8(%rbp)
  409521:	00 00 00 00 
  409525:	8b 85 58 fe ff ff    	mov    -0x1a8(%rbp),%eax
  40952b:	83 c0 01             	add    $0x1,%eax
  40952e:	89 85 58 fe ff ff    	mov    %eax,-0x1a8(%rbp)
  409534:	48 83 bd 48 fe ff ff 	cmpq   $0x0,-0x1b8(%rbp)
  40953b:	00 
  40953c:	75 0f                	jne    40954d <mbedtls_ssl_read_record+0x131d>
  40953e:	c7 85 6c fe ff ff 80 	movl   $0xffff8e80,-0x194(%rbp)
  409545:	8e ff ff 
  409548:	e9 0a 01 00 00       	jmpq   409657 <mbedtls_ssl_read_record+0x1427>
  40954d:	83 bd 58 fe ff ff 01 	cmpl   $0x1,-0x1a8(%rbp)
  409554:	74 0f                	je     409565 <mbedtls_ssl_read_record+0x1335>
  409556:	c7 85 6c fe ff ff 00 	movl   $0xffff9400,-0x194(%rbp)
  40955d:	94 ff ff 
  409560:	e9 f2 00 00 00       	jmpq   409657 <mbedtls_ssl_read_record+0x1427>
  409565:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
  40956c:	48 83 b8 d8 00 00 00 	cmpq   $0x0,0xd8(%rax)
  409573:	00 
  409574:	75 37                	jne    4095ad <mbedtls_ssl_read_record+0x137d>
  409576:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
  40957d:	8b 88 f0 00 00 00    	mov    0xf0(%rax),%ecx
  409583:	83 c1 01             	add    $0x1,%ecx
  409586:	89 88 f0 00 00 00    	mov    %ecx,0xf0(%rax)
  40958c:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
  409593:	83 b8 f0 00 00 00 03 	cmpl   $0x3,0xf0(%rax)
  40959a:	7e 0f                	jle    4095ab <mbedtls_ssl_read_record+0x137b>
  40959c:	c7 85 6c fe ff ff 80 	movl   $0xffff8e80,-0x194(%rbp)
  4095a3:	8e ff ff 
  4095a6:	e9 ac 00 00 00       	jmpq   409657 <mbedtls_ssl_read_record+0x1427>
  4095ab:	eb 11                	jmp    4095be <mbedtls_ssl_read_record+0x138e>
  4095ad:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
  4095b4:	c7 80 f0 00 00 00 00 	movl   $0x0,0xf0(%rax)
  4095bb:	00 00 00 
  4095be:	c6 85 af fd ff ff 08 	movb   $0x8,-0x251(%rbp)
  4095c5:	0f b6 85 af fd ff ff 	movzbl -0x251(%rbp),%eax
  4095cc:	89 c1                	mov    %eax,%ecx
  4095ce:	48 8b 95 60 fe ff ff 	mov    -0x1a0(%rbp),%rdx
  4095d5:	48 89 95 88 fe ff ff 	mov    %rdx,-0x178(%rbp)
  4095dc:	48 83 f9 00          	cmp    $0x0,%rcx
  4095e0:	76 42                	jbe    409624 <mbedtls_ssl_read_record+0x13f4>
  4095e2:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
  4095e9:	48 8b 80 a0 00 00 00 	mov    0xa0(%rax),%rax
  4095f0:	0f b6 8d af fd ff ff 	movzbl -0x251(%rbp),%ecx
  4095f7:	83 e9 01             	sub    $0x1,%ecx
  4095fa:	48 63 d1             	movslq %ecx,%rdx
  4095fd:	40 8a 34 10          	mov    (%rax,%rdx,1),%sil
  409601:	40 80 c6 01          	add    $0x1,%sil
  409605:	40 88 34 10          	mov    %sil,(%rax,%rdx,1)
  409609:	40 0f b6 ce          	movzbl %sil,%ecx
  40960d:	83 f9 00             	cmp    $0x0,%ecx
  409610:	74 02                	je     409614 <mbedtls_ssl_read_record+0x13e4>
  409612:	eb 10                	jmp    409624 <mbedtls_ssl_read_record+0x13f4>
  409614:	8a 85 af fd ff ff    	mov    -0x251(%rbp),%al
  40961a:	04 ff                	add    $0xff,%al
  40961c:	88 85 af fd ff ff    	mov    %al,-0x251(%rbp)
  409622:	eb a1                	jmp    4095c5 <mbedtls_ssl_read_record+0x1395>
  409624:	0f b6 85 af fd ff ff 	movzbl -0x251(%rbp),%eax
  40962b:	89 c1                	mov    %eax,%ecx
  40962d:	48 8b 95 60 fe ff ff 	mov    -0x1a0(%rbp),%rdx
  409634:	48 89 95 80 fe ff ff 	mov    %rdx,-0x180(%rbp)
  40963b:	48 83 f9 00          	cmp    $0x0,%rcx
  40963f:	75 0c                	jne    40964d <mbedtls_ssl_read_record+0x141d>
  409641:	c7 85 6c fe ff ff 80 	movl   $0xffff9480,-0x194(%rbp)
  409648:	94 ff ff 
  40964b:	eb 0a                	jmp    409657 <mbedtls_ssl_read_record+0x1427>
  40964d:	c7 85 6c fe ff ff 00 	movl   $0x0,-0x194(%rbp)
  409654:	00 00 00 
  409657:	8b 85 6c fe ff ff    	mov    -0x194(%rbp),%eax
  40965d:	89 85 9c fd ff ff    	mov    %eax,-0x264(%rbp)
  409663:	83 f8 00             	cmp    $0x0,%eax
  409666:	74 0e                	je     409676 <mbedtls_ssl_read_record+0x1446>
  409668:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
  40966e:	89 85 a8 fd ff ff    	mov    %eax,-0x258(%rbp)
  409674:	eb 2c                	jmp    4096a2 <mbedtls_ssl_read_record+0x1472>
  409676:	48 8b 85 a0 fd ff ff 	mov    -0x260(%rbp),%rax
  40967d:	48 81 b8 d8 00 00 00 	cmpq   $0x4000,0xd8(%rax)
  409684:	00 40 00 00 
  409688:	76 0c                	jbe    409696 <mbedtls_ssl_read_record+0x1466>
  40968a:	c7 85 a8 fd ff ff 00 	movl   $0xffff8e00,-0x258(%rbp)
  409691:	8e ff ff 
  409694:	eb 0c                	jmp    4096a2 <mbedtls_ssl_read_record+0x1472>
  409696:	eb 00                	jmp    409698 <mbedtls_ssl_read_record+0x1468>
  409698:	c7 85 a8 fd ff ff 00 	movl   $0x0,-0x258(%rbp)
  40969f:	00 00 00 
  4096a2:	8b 85 a8 fd ff ff    	mov    -0x258(%rbp),%eax
  4096a8:	89 85 7c fd ff ff    	mov    %eax,-0x284(%rbp)
  4096ae:	83 f8 00             	cmp    $0x0,%eax
  4096b1:	74 0e                	je     4096c1 <mbedtls_ssl_read_record+0x1491>
  4096b3:	8b 85 7c fd ff ff    	mov    -0x284(%rbp),%eax
  4096b9:	89 85 8c fd ff ff    	mov    %eax,-0x274(%rbp)
  4096bf:	eb 0a                	jmp    4096cb <mbedtls_ssl_read_record+0x149b>
  4096c1:	c7 85 8c fd ff ff 00 	movl   $0x0,-0x274(%rbp)
  4096c8:	00 00 00 
  4096cb:	8b 85 8c fd ff ff    	mov    -0x274(%rbp),%eax
  4096d1:	89 85 f8 fc ff ff    	mov    %eax,-0x308(%rbp)
  4096d7:	81 bd f8 fc ff ff 80 	cmpl   $0xffff9a80,-0x308(%rbp)
  4096de:	9a ff ff 
  4096e1:	75 05                	jne    4096e8 <mbedtls_ssl_read_record+0x14b8>
  4096e3:	e9 8f 02 00 00       	jmpq   409977 <mbedtls_ssl_read_record+0x1747>
  4096e8:	83 bd f8 fc ff ff 00 	cmpl   $0x0,-0x308(%rbp)
  4096ef:	74 15                	je     409706 <mbedtls_ssl_read_record+0x14d6>
  4096f1:	eb 00                	jmp    4096f3 <mbedtls_ssl_read_record+0x14c3>
  4096f3:	eb 00                	jmp    4096f5 <mbedtls_ssl_read_record+0x14c5>
  4096f5:	8b 85 f8 fc ff ff    	mov    -0x308(%rbp),%eax
  4096fb:	89 85 0c fd ff ff    	mov    %eax,-0x2f4(%rbp)
  409701:	e9 73 03 00 00       	jmpq   409a79 <mbedtls_ssl_read_record+0x1849>
  409706:	eb 00                	jmp    409708 <mbedtls_ssl_read_record+0x14d8>
  409708:	48 8b 85 00 fd ff ff 	mov    -0x300(%rbp),%rax
  40970f:	48 89 85 40 fd ff ff 	mov    %rax,-0x2c0(%rbp)
  409716:	48 8b 85 40 fd ff ff 	mov    -0x2c0(%rbp),%rax
  40971d:	83 b8 d0 00 00 00 16 	cmpl   $0x16,0xd0(%rax)
  409724:	0f 85 09 01 00 00    	jne    409833 <mbedtls_ssl_read_record+0x1603>
  40972a:	48 8b 85 40 fd ff ff 	mov    -0x2c0(%rbp),%rax
  409731:	48 89 85 50 fd ff ff 	mov    %rax,-0x2b0(%rbp)
  409738:	48 8b 85 50 fd ff ff 	mov    -0x2b0(%rbp),%rax
  40973f:	48 8b 80 d8 00 00 00 	mov    0xd8(%rax),%rax
  409746:	48 8b 8d 50 fd ff ff 	mov    -0x2b0(%rbp),%rcx
  40974d:	48 89 8d 60 fd ff ff 	mov    %rcx,-0x2a0(%rbp)
  409754:	48 83 f8 04          	cmp    $0x4,%rax
  409758:	73 0f                	jae    409769 <mbedtls_ssl_read_record+0x1539>
  40975a:	c7 85 5c fd ff ff 00 	movl   $0xffff8e00,-0x2a4(%rbp)
  409761:	8e ff ff 
  409764:	e9 a6 00 00 00       	jmpq   40980f <mbedtls_ssl_read_record+0x15df>
  409769:	48 8b 85 50 fd ff ff 	mov    -0x2b0(%rbp),%rax
  409770:	48 89 85 70 fd ff ff 	mov    %rax,-0x290(%rbp)
  409777:	48 8b 85 50 fd ff ff 	mov    -0x2b0(%rbp),%rax
  40977e:	48 89 85 68 fd ff ff 	mov    %rax,-0x298(%rbp)
  409785:	48 8b 85 68 fd ff ff 	mov    -0x298(%rbp),%rax
  40978c:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  409793:	0f b6 48 01          	movzbl 0x1(%rax),%ecx
  409797:	c1 e1 10             	shl    $0x10,%ecx
  40979a:	48 8b 85 68 fd ff ff 	mov    -0x298(%rbp),%rax
  4097a1:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  4097a8:	0f b6 50 02          	movzbl 0x2(%rax),%edx
  4097ac:	c1 e2 08             	shl    $0x8,%edx
  4097af:	09 d1                	or     %edx,%ecx
  4097b1:	48 8b 85 68 fd ff ff 	mov    -0x298(%rbp),%rax
  4097b8:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  4097bf:	0f b6 50 03          	movzbl 0x3(%rax),%edx
  4097c3:	09 d1                	or     %edx,%ecx
  4097c5:	89 c9                	mov    %ecx,%ecx
  4097c7:	89 c8                	mov    %ecx,%eax
  4097c9:	48 83 c0 04          	add    $0x4,%rax
  4097cd:	48 8b b5 50 fd ff ff 	mov    -0x2b0(%rbp),%rsi
  4097d4:	48 89 86 e8 00 00 00 	mov    %rax,0xe8(%rsi)
  4097db:	48 8b 85 50 fd ff ff 	mov    -0x2b0(%rbp),%rax
  4097e2:	48 8b 80 d8 00 00 00 	mov    0xd8(%rax),%rax
  4097e9:	48 8b b5 50 fd ff ff 	mov    -0x2b0(%rbp),%rsi
  4097f0:	48 3b 86 e8 00 00 00 	cmp    0xe8(%rsi),%rax
  4097f7:	73 0c                	jae    409805 <mbedtls_ssl_read_record+0x15d5>
  4097f9:	c7 85 5c fd ff ff 80 	movl   $0xffff8f80,-0x2a4(%rbp)
  409800:	8f ff ff 
  409803:	eb 0a                	jmp    40980f <mbedtls_ssl_read_record+0x15df>
  409805:	c7 85 5c fd ff ff 00 	movl   $0x0,-0x2a4(%rbp)
  40980c:	00 00 00 
  40980f:	8b 85 5c fd ff ff    	mov    -0x2a4(%rbp),%eax
  409815:	89 85 3c fd ff ff    	mov    %eax,-0x2c4(%rbp)
  40981b:	83 f8 00             	cmp    $0x0,%eax
  40981e:	74 11                	je     409831 <mbedtls_ssl_read_record+0x1601>
  409820:	8b 85 3c fd ff ff    	mov    -0x2c4(%rbp),%eax
  409826:	89 85 4c fd ff ff    	mov    %eax,-0x2b4(%rbp)
  40982c:	e9 3a 01 00 00       	jmpq   40996b <mbedtls_ssl_read_record+0x173b>
  409831:	eb 00                	jmp    409833 <mbedtls_ssl_read_record+0x1603>
  409833:	48 8b 85 40 fd ff ff 	mov    -0x2c0(%rbp),%rax
  40983a:	83 b8 d0 00 00 00 14 	cmpl   $0x14,0xd0(%rax)
  409841:	75 47                	jne    40988a <mbedtls_ssl_read_record+0x165a>
  409843:	48 8b 85 40 fd ff ff 	mov    -0x2c0(%rbp),%rax
  40984a:	48 83 b8 d8 00 00 00 	cmpq   $0x1,0xd8(%rax)
  409851:	01 
  409852:	74 0f                	je     409863 <mbedtls_ssl_read_record+0x1633>
  409854:	c7 85 4c fd ff ff 00 	movl   $0xffff8e00,-0x2b4(%rbp)
  40985b:	8e ff ff 
  40985e:	e9 08 01 00 00       	jmpq   40996b <mbedtls_ssl_read_record+0x173b>
  409863:	48 8b 85 40 fd ff ff 	mov    -0x2c0(%rbp),%rax
  40986a:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  409871:	0f b6 08             	movzbl (%rax),%ecx
  409874:	83 f9 01             	cmp    $0x1,%ecx
  409877:	74 0f                	je     409888 <mbedtls_ssl_read_record+0x1658>
  409879:	c7 85 4c fd ff ff 00 	movl   $0xffff8e00,-0x2b4(%rbp)
  409880:	8e ff ff 
  409883:	e9 e3 00 00 00       	jmpq   40996b <mbedtls_ssl_read_record+0x173b>
  409888:	eb 00                	jmp    40988a <mbedtls_ssl_read_record+0x165a>
  40988a:	48 8b 85 40 fd ff ff 	mov    -0x2c0(%rbp),%rax
  409891:	83 b8 d0 00 00 00 15 	cmpl   $0x15,0xd0(%rax)
  409898:	0f 85 c3 00 00 00    	jne    409961 <mbedtls_ssl_read_record+0x1731>
  40989e:	48 8b 85 40 fd ff ff 	mov    -0x2c0(%rbp),%rax
  4098a5:	48 83 b8 d8 00 00 00 	cmpq   $0x2,0xd8(%rax)
  4098ac:	02 
  4098ad:	74 0f                	je     4098be <mbedtls_ssl_read_record+0x168e>
  4098af:	c7 85 4c fd ff ff 00 	movl   $0xffff8e00,-0x2b4(%rbp)
  4098b6:	8e ff ff 
  4098b9:	e9 ad 00 00 00       	jmpq   40996b <mbedtls_ssl_read_record+0x173b>
  4098be:	48 8b 85 40 fd ff ff 	mov    -0x2c0(%rbp),%rax
  4098c5:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  4098cc:	0f b6 08             	movzbl (%rax),%ecx
  4098cf:	83 f9 02             	cmp    $0x2,%ecx
  4098d2:	75 0f                	jne    4098e3 <mbedtls_ssl_read_record+0x16b3>
  4098d4:	c7 85 4c fd ff ff 80 	movl   $0xffff8880,-0x2b4(%rbp)
  4098db:	88 ff ff 
  4098de:	e9 88 00 00 00       	jmpq   40996b <mbedtls_ssl_read_record+0x173b>
  4098e3:	48 8b 85 40 fd ff ff 	mov    -0x2c0(%rbp),%rax
  4098ea:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  4098f1:	0f b6 08             	movzbl (%rax),%ecx
  4098f4:	83 f9 01             	cmp    $0x1,%ecx
  4098f7:	75 23                	jne    40991c <mbedtls_ssl_read_record+0x16ec>
  4098f9:	48 8b 85 40 fd ff ff 	mov    -0x2c0(%rbp),%rax
  409900:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  409907:	0f b6 48 01          	movzbl 0x1(%rax),%ecx
  40990b:	83 f9 00             	cmp    $0x0,%ecx
  40990e:	75 0c                	jne    40991c <mbedtls_ssl_read_record+0x16ec>
  409910:	c7 85 4c fd ff ff 80 	movl   $0xffff8780,-0x2b4(%rbp)
  409917:	87 ff ff 
  40991a:	eb 4f                	jmp    40996b <mbedtls_ssl_read_record+0x173b>
  40991c:	48 8b 85 40 fd ff ff 	mov    -0x2c0(%rbp),%rax
  409923:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  40992a:	0f b6 08             	movzbl (%rax),%ecx
  40992d:	83 f9 01             	cmp    $0x1,%ecx
  409930:	75 23                	jne    409955 <mbedtls_ssl_read_record+0x1725>
  409932:	48 8b 85 40 fd ff ff 	mov    -0x2c0(%rbp),%rax
  409939:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  409940:	0f b6 48 01          	movzbl 0x1(%rax),%ecx
  409944:	83 f9 64             	cmp    $0x64,%ecx
  409947:	75 0c                	jne    409955 <mbedtls_ssl_read_record+0x1725>
  409949:	c7 85 4c fd ff ff 00 	movl   $0x0,-0x2b4(%rbp)
  409950:	00 00 00 
  409953:	eb 16                	jmp    40996b <mbedtls_ssl_read_record+0x173b>
  409955:	c7 85 4c fd ff ff 80 	movl   $0xffff9980,-0x2b4(%rbp)
  40995c:	99 ff ff 
  40995f:	eb 0a                	jmp    40996b <mbedtls_ssl_read_record+0x173b>
  409961:	c7 85 4c fd ff ff 00 	movl   $0x0,-0x2b4(%rbp)
  409968:	00 00 00 
  40996b:	8b 85 4c fd ff ff    	mov    -0x2b4(%rbp),%eax
  409971:	89 85 f8 fc ff ff    	mov    %eax,-0x308(%rbp)
  409977:	b8 80 99 ff ff       	mov    $0xffff9980,%eax
  40997c:	3b 85 f8 fc ff ff    	cmp    -0x308(%rbp),%eax
  409982:	b1 01                	mov    $0x1,%cl
  409984:	88 8d ca fc ff ff    	mov    %cl,-0x336(%rbp)
  40998a:	74 14                	je     4099a0 <mbedtls_ssl_read_record+0x1770>
  40998c:	b8 80 9a ff ff       	mov    $0xffff9a80,%eax
  409991:	3b 85 f8 fc ff ff    	cmp    -0x308(%rbp),%eax
  409997:	0f 94 c1             	sete   %cl
  40999a:	88 8d ca fc ff ff    	mov    %cl,-0x336(%rbp)
  4099a0:	8a 85 ca fc ff ff    	mov    -0x336(%rbp),%al
  4099a6:	a8 01                	test   $0x1,%al
  4099a8:	0f 85 b2 e8 ff ff    	jne    408260 <mbedtls_ssl_read_record+0x30>
  4099ae:	31 c0                	xor    %eax,%eax
  4099b0:	3b 85 f8 fc ff ff    	cmp    -0x308(%rbp),%eax
  4099b6:	74 15                	je     4099cd <mbedtls_ssl_read_record+0x179d>
  4099b8:	eb 00                	jmp    4099ba <mbedtls_ssl_read_record+0x178a>
  4099ba:	eb 00                	jmp    4099bc <mbedtls_ssl_read_record+0x178c>
  4099bc:	8b 85 f8 fc ff ff    	mov    -0x308(%rbp),%eax
  4099c2:	89 85 0c fd ff ff    	mov    %eax,-0x2f4(%rbp)
  4099c8:	e9 ac 00 00 00       	jmpq   409a79 <mbedtls_ssl_read_record+0x1849>
  4099cd:	48 8b 85 00 fd ff ff 	mov    -0x300(%rbp),%rax
  4099d4:	83 b8 d0 00 00 00 16 	cmpl   $0x16,0xd0(%rax)
  4099db:	75 77                	jne    409a54 <mbedtls_ssl_read_record+0x1824>
  4099dd:	83 bd fc fc ff ff 01 	cmpl   $0x1,-0x304(%rbp)
  4099e4:	75 6e                	jne    409a54 <mbedtls_ssl_read_record+0x1824>
  4099e6:	48 8b 85 00 fd ff ff 	mov    -0x300(%rbp),%rax
  4099ed:	48 89 85 28 fd ff ff 	mov    %rax,-0x2d8(%rbp)
  4099f4:	48 8b 85 28 fd ff ff 	mov    -0x2d8(%rbp),%rax
  4099fb:	48 8b 40 58          	mov    0x58(%rax),%rax
  4099ff:	48 89 85 20 fd ff ff 	mov    %rax,-0x2e0(%rbp)
  409a06:	48 8b 85 28 fd ff ff 	mov    -0x2d8(%rbp),%rax
  409a0d:	83 78 08 10          	cmpl   $0x10,0x8(%rax)
  409a11:	74 41                	je     409a54 <mbedtls_ssl_read_record+0x1824>
  409a13:	48 83 bd 20 fd ff ff 	cmpq   $0x0,-0x2e0(%rbp)
  409a1a:	00 
  409a1b:	74 37                	je     409a54 <mbedtls_ssl_read_record+0x1824>
  409a1d:	48 8b 85 28 fd ff ff 	mov    -0x2d8(%rbp),%rax
  409a24:	48 8b 40 58          	mov    0x58(%rax),%rax
  409a28:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  409a2f:	48 8b bd 28 fd ff ff 	mov    -0x2d8(%rbp),%rdi
  409a36:	48 8b 8d 28 fd ff ff 	mov    -0x2d8(%rbp),%rcx
  409a3d:	48 8b b1 c0 00 00 00 	mov    0xc0(%rcx),%rsi
  409a44:	48 8b 8d 28 fd ff ff 	mov    -0x2d8(%rbp),%rcx
  409a4b:	48 8b 91 e8 00 00 00 	mov    0xe8(%rcx),%rdx
  409a52:	ff d0                	callq  *%rax
  409a54:	eb 15                	jmp    409a6b <mbedtls_ssl_read_record+0x183b>
  409a56:	eb 00                	jmp    409a58 <mbedtls_ssl_read_record+0x1828>
  409a58:	eb 00                	jmp    409a5a <mbedtls_ssl_read_record+0x182a>
  409a5a:	48 8b 85 00 fd ff ff 	mov    -0x300(%rbp),%rax
  409a61:	c7 80 f4 00 00 00 00 	movl   $0x0,0xf4(%rax)
  409a68:	00 00 00 
  409a6b:	eb 00                	jmp    409a6d <mbedtls_ssl_read_record+0x183d>
  409a6d:	eb 00                	jmp    409a6f <mbedtls_ssl_read_record+0x183f>
  409a6f:	c7 85 0c fd ff ff 00 	movl   $0x0,-0x2f4(%rbp)
  409a76:	00 00 00 
  409a79:	8b 85 0c fd ff ff    	mov    -0x2f4(%rbp),%eax
  409a7f:	89 85 c4 fc ff ff    	mov    %eax,-0x33c(%rbp)
  409a85:	e8 cc be 03 00       	callq  445956 <writeback_cache>
  409a8a:	8b 85 c4 fc ff ff    	mov    -0x33c(%rbp),%eax
  409a90:	48 81 c4 50 03 00 00 	add    $0x350,%rsp
  409a97:	5d                   	pop    %rbp
  409a98:	c3                   	retq   
  409a99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000409aa0 <mbedtls_ssl_send_alert_message>:
  409aa0:	55                   	push   %rbp
  409aa1:	48 89 e5             	mov    %rsp,%rbp
  409aa4:	48 83 ec 20          	sub    $0x20,%rsp
  409aa8:	88 d0                	mov    %dl,%al
  409aaa:	40 88 f1             	mov    %sil,%cl
  409aad:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  409ab1:	88 4d ef             	mov    %cl,-0x11(%rbp)
  409ab4:	88 45 ee             	mov    %al,-0x12(%rbp)
  409ab7:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  409abc:	74 0a                	je     409ac8 <mbedtls_ssl_send_alert_message+0x28>
  409abe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  409ac2:	48 83 38 00          	cmpq   $0x0,(%rax)
  409ac6:	75 09                	jne    409ad1 <mbedtls_ssl_send_alert_message+0x31>
  409ac8:	c7 45 fc 00 8f ff ff 	movl   $0xffff8f00,-0x4(%rbp)
  409acf:	eb 73                	jmp    409b44 <mbedtls_ssl_send_alert_message+0xa4>
  409ad1:	eb 00                	jmp    409ad3 <mbedtls_ssl_send_alert_message+0x33>
  409ad3:	eb 00                	jmp    409ad5 <mbedtls_ssl_send_alert_message+0x35>
  409ad5:	eb 00                	jmp    409ad7 <mbedtls_ssl_send_alert_message+0x37>
  409ad7:	eb 00                	jmp    409ad9 <mbedtls_ssl_send_alert_message+0x39>
  409ad9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  409add:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  409ae4:	00 00 00 
  409ae7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  409aeb:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  409af2:	02 00 00 00 
  409af6:	8a 4d ef             	mov    -0x11(%rbp),%cl
  409af9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  409afd:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  409b04:	88 08                	mov    %cl,(%rax)
  409b06:	8a 4d ee             	mov    -0x12(%rbp),%cl
  409b09:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  409b0d:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  409b14:	88 48 01             	mov    %cl,0x1(%rax)
  409b17:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  409b1b:	be 01 00 00 00       	mov    $0x1,%esi
  409b20:	e8 ab db ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  409b25:	89 45 e8             	mov    %eax,-0x18(%rbp)
  409b28:	83 f8 00             	cmp    $0x0,%eax
  409b2b:	74 0c                	je     409b39 <mbedtls_ssl_send_alert_message+0x99>
  409b2d:	eb 00                	jmp    409b2f <mbedtls_ssl_send_alert_message+0x8f>
  409b2f:	eb 00                	jmp    409b31 <mbedtls_ssl_send_alert_message+0x91>
  409b31:	8b 45 e8             	mov    -0x18(%rbp),%eax
  409b34:	89 45 fc             	mov    %eax,-0x4(%rbp)
  409b37:	eb 0b                	jmp    409b44 <mbedtls_ssl_send_alert_message+0xa4>
  409b39:	eb 00                	jmp    409b3b <mbedtls_ssl_send_alert_message+0x9b>
  409b3b:	eb 00                	jmp    409b3d <mbedtls_ssl_send_alert_message+0x9d>
  409b3d:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  409b44:	8b 45 fc             	mov    -0x4(%rbp),%eax
  409b47:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  409b4a:	e8 07 be 03 00       	callq  445956 <writeback_cache>
  409b4f:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  409b52:	48 83 c4 20          	add    $0x20,%rsp
  409b56:	5d                   	pop    %rbp
  409b57:	c3                   	retq   
  409b58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  409b5f:	00 

0000000000409b60 <mbedtls_ssl_write_certificate>:
  409b60:	55                   	push   %rbp
  409b61:	48 89 e5             	mov    %rsp,%rbp
  409b64:	48 83 ec 70          	sub    $0x70,%rsp
  409b68:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
  409b6c:	c7 45 cc 80 8f ff ff 	movl   $0xffff8f80,-0x34(%rbp)
  409b73:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  409b77:	48 8b 7f 78          	mov    0x78(%rdi),%rdi
  409b7b:	48 8b 3f             	mov    (%rdi),%rdi
  409b7e:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  409b82:	eb 00                	jmp    409b84 <mbedtls_ssl_write_certificate+0x24>
  409b84:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  409b88:	83 78 18 05          	cmpl   $0x5,0x18(%rax)
  409b8c:	74 1e                	je     409bac <mbedtls_ssl_write_certificate+0x4c>
  409b8e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  409b92:	83 78 18 06          	cmpl   $0x6,0x18(%rax)
  409b96:	74 14                	je     409bac <mbedtls_ssl_write_certificate+0x4c>
  409b98:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  409b9c:	83 78 18 08          	cmpl   $0x8,0x18(%rax)
  409ba0:	74 0a                	je     409bac <mbedtls_ssl_write_certificate+0x4c>
  409ba2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  409ba6:	83 78 18 0b          	cmpl   $0xb,0x18(%rax)
  409baa:	75 1d                	jne    409bc9 <mbedtls_ssl_write_certificate+0x69>
  409bac:	eb 00                	jmp    409bae <mbedtls_ssl_write_certificate+0x4e>
  409bae:	eb 00                	jmp    409bb0 <mbedtls_ssl_write_certificate+0x50>
  409bb0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409bb4:	8b 48 08             	mov    0x8(%rax),%ecx
  409bb7:	83 c1 01             	add    $0x1,%ecx
  409bba:	89 48 08             	mov    %ecx,0x8(%rax)
  409bbd:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
  409bc4:	e9 d1 02 00 00       	jmpq   409e9a <mbedtls_ssl_write_certificate+0x33a>
  409bc9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409bcd:	48 8b 00             	mov    (%rax),%rax
  409bd0:	8a 88 98 00 00 00    	mov    0x98(%rax),%cl
  409bd6:	80 e1 01             	and    $0x1,%cl
  409bd9:	0f b6 d1             	movzbl %cl,%edx
  409bdc:	83 fa 00             	cmp    $0x0,%edx
  409bdf:	75 2c                	jne    409c0d <mbedtls_ssl_write_certificate+0xad>
  409be1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409be5:	83 b8 48 01 00 00 00 	cmpl   $0x0,0x148(%rax)
  409bec:	75 1d                	jne    409c0b <mbedtls_ssl_write_certificate+0xab>
  409bee:	eb 00                	jmp    409bf0 <mbedtls_ssl_write_certificate+0x90>
  409bf0:	eb 00                	jmp    409bf2 <mbedtls_ssl_write_certificate+0x92>
  409bf2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409bf6:	8b 48 08             	mov    0x8(%rax),%ecx
  409bf9:	83 c1 01             	add    $0x1,%ecx
  409bfc:	89 48 08             	mov    %ecx,0x8(%rax)
  409bff:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
  409c06:	e9 8f 02 00 00       	jmpq   409e9a <mbedtls_ssl_write_certificate+0x33a>
  409c0b:	eb 00                	jmp    409c0d <mbedtls_ssl_write_certificate+0xad>
  409c0d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409c11:	48 8b 00             	mov    (%rax),%rax
  409c14:	8a 88 98 00 00 00    	mov    0x98(%rax),%cl
  409c1a:	80 e1 01             	and    $0x1,%cl
  409c1d:	0f b6 d1             	movzbl %cl,%edx
  409c20:	83 fa 01             	cmp    $0x1,%edx
  409c23:	75 79                	jne    409c9e <mbedtls_ssl_write_certificate+0x13e>
  409c25:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409c29:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  409c2d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409c31:	48 83 78 58 00       	cmpq   $0x0,0x58(%rax)
  409c36:	74 1f                	je     409c57 <mbedtls_ssl_write_certificate+0xf7>
  409c38:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409c3c:	48 8b 40 58          	mov    0x58(%rax),%rax
  409c40:	48 83 38 00          	cmpq   $0x0,(%rax)
  409c44:	74 11                	je     409c57 <mbedtls_ssl_write_certificate+0xf7>
  409c46:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409c4a:	48 8b 40 58          	mov    0x58(%rax),%rax
  409c4e:	48 8b 00             	mov    (%rax),%rax
  409c51:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  409c55:	eb 0f                	jmp    409c66 <mbedtls_ssl_write_certificate+0x106>
  409c57:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409c5b:	48 8b 00             	mov    (%rax),%rax
  409c5e:	48 8b 40 70          	mov    0x70(%rax),%rax
  409c62:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  409c66:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  409c6b:	75 0a                	jne    409c77 <mbedtls_ssl_write_certificate+0x117>
  409c6d:	31 c0                	xor    %eax,%eax
  409c6f:	89 c1                	mov    %eax,%ecx
  409c71:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
  409c75:	eb 0b                	jmp    409c82 <mbedtls_ssl_write_certificate+0x122>
  409c77:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  409c7b:	48 8b 00             	mov    (%rax),%rax
  409c7e:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  409c82:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  409c86:	48 83 f8 00          	cmp    $0x0,%rax
  409c8a:	75 10                	jne    409c9c <mbedtls_ssl_write_certificate+0x13c>
  409c8c:	eb 00                	jmp    409c8e <mbedtls_ssl_write_certificate+0x12e>
  409c8e:	eb 00                	jmp    409c90 <mbedtls_ssl_write_certificate+0x130>
  409c90:	c7 45 dc 80 8a ff ff 	movl   $0xffff8a80,-0x24(%rbp)
  409c97:	e9 fe 01 00 00       	jmpq   409e9a <mbedtls_ssl_write_certificate+0x33a>
  409c9c:	eb 00                	jmp    409c9e <mbedtls_ssl_write_certificate+0x13e>
  409c9e:	eb 00                	jmp    409ca0 <mbedtls_ssl_write_certificate+0x140>
  409ca0:	eb 00                	jmp    409ca2 <mbedtls_ssl_write_certificate+0x142>
  409ca2:	48 c7 45 c0 07 00 00 	movq   $0x7,-0x40(%rbp)
  409ca9:	00 
  409caa:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409cae:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  409cb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409cb6:	48 83 78 58 00       	cmpq   $0x0,0x58(%rax)
  409cbb:	74 1f                	je     409cdc <mbedtls_ssl_write_certificate+0x17c>
  409cbd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409cc1:	48 8b 40 58          	mov    0x58(%rax),%rax
  409cc5:	48 83 38 00          	cmpq   $0x0,(%rax)
  409cc9:	74 11                	je     409cdc <mbedtls_ssl_write_certificate+0x17c>
  409ccb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409ccf:	48 8b 40 58          	mov    0x58(%rax),%rax
  409cd3:	48 8b 00             	mov    (%rax),%rax
  409cd6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  409cda:	eb 0f                	jmp    409ceb <mbedtls_ssl_write_certificate+0x18b>
  409cdc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409ce0:	48 8b 00             	mov    (%rax),%rax
  409ce3:	48 8b 40 70          	mov    0x70(%rax),%rax
  409ce7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  409ceb:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  409cf0:	75 0a                	jne    409cfc <mbedtls_ssl_write_certificate+0x19c>
  409cf2:	31 c0                	xor    %eax,%eax
  409cf4:	89 c1                	mov    %eax,%ecx
  409cf6:	48 89 4d 98          	mov    %rcx,-0x68(%rbp)
  409cfa:	eb 0b                	jmp    409d07 <mbedtls_ssl_write_certificate+0x1a7>
  409cfc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  409d00:	48 8b 00             	mov    (%rax),%rax
  409d03:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  409d07:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  409d0b:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  409d0f:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
  409d14:	0f 84 d1 00 00 00    	je     409deb <mbedtls_ssl_write_certificate+0x28b>
  409d1a:	b8 fd 3f 00 00       	mov    $0x3ffd,%eax
  409d1f:	89 c1                	mov    %eax,%ecx
  409d21:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
  409d25:	48 8b 52 08          	mov    0x8(%rdx),%rdx
  409d29:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
  409d2d:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  409d31:	48 2b 4d c0          	sub    -0x40(%rbp),%rcx
  409d35:	48 39 ca             	cmp    %rcx,%rdx
  409d38:	76 10                	jbe    409d4a <mbedtls_ssl_write_certificate+0x1ea>
  409d3a:	eb 00                	jmp    409d3c <mbedtls_ssl_write_certificate+0x1dc>
  409d3c:	eb 00                	jmp    409d3e <mbedtls_ssl_write_certificate+0x1de>
  409d3e:	c7 45 dc 00 8b ff ff 	movl   $0xffff8b00,-0x24(%rbp)
  409d45:	e9 50 01 00 00       	jmpq   409e9a <mbedtls_ssl_write_certificate+0x33a>
  409d4a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  409d4e:	48 c1 e8 10          	shr    $0x10,%rax
  409d52:	88 c1                	mov    %al,%cl
  409d54:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409d58:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  409d5f:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  409d63:	88 0c 10             	mov    %cl,(%rax,%rdx,1)
  409d66:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  409d6a:	48 c1 e8 08          	shr    $0x8,%rax
  409d6e:	88 c1                	mov    %al,%cl
  409d70:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409d74:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  409d7b:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  409d7f:	88 4c 10 01          	mov    %cl,0x1(%rax,%rdx,1)
  409d83:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  409d87:	88 c1                	mov    %al,%cl
  409d89:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409d8d:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  409d94:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  409d98:	88 4c 10 02          	mov    %cl,0x2(%rax,%rdx,1)
  409d9c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  409da0:	48 83 c0 03          	add    $0x3,%rax
  409da4:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  409da8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409dac:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  409db3:	48 03 45 c0          	add    -0x40(%rbp),%rax
  409db7:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
  409dbb:	48 8b 72 10          	mov    0x10(%rdx),%rsi
  409dbf:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  409dc3:	48 89 c7             	mov    %rax,%rdi
  409dc6:	e8 a5 73 ff ff       	callq  401170 <memcpy@plt>
  409dcb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  409dcf:	48 03 45 c0          	add    -0x40(%rbp),%rax
  409dd3:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  409dd7:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  409ddb:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
  409de2:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  409de6:	e9 24 ff ff ff       	jmpq   409d0f <mbedtls_ssl_write_certificate+0x1af>
  409deb:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  409def:	48 83 e8 07          	sub    $0x7,%rax
  409df3:	48 c1 e8 10          	shr    $0x10,%rax
  409df7:	88 c1                	mov    %al,%cl
  409df9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409dfd:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  409e04:	88 48 04             	mov    %cl,0x4(%rax)
  409e07:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  409e0b:	48 83 e8 07          	sub    $0x7,%rax
  409e0f:	48 c1 e8 08          	shr    $0x8,%rax
  409e13:	88 c1                	mov    %al,%cl
  409e15:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409e19:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  409e20:	88 48 05             	mov    %cl,0x5(%rax)
  409e23:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  409e27:	48 83 e8 07          	sub    $0x7,%rax
  409e2b:	88 c1                	mov    %al,%cl
  409e2d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409e31:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  409e38:	88 48 06             	mov    %cl,0x6(%rax)
  409e3b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  409e3f:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  409e43:	48 89 82 30 01 00 00 	mov    %rax,0x130(%rdx)
  409e4a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409e4e:	c7 80 28 01 00 00 16 	movl   $0x16,0x128(%rax)
  409e55:	00 00 00 
  409e58:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409e5c:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  409e63:	c6 00 0b             	movb   $0xb,(%rax)
  409e66:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409e6a:	8b 70 08             	mov    0x8(%rax),%esi
  409e6d:	83 c6 01             	add    $0x1,%esi
  409e70:	89 70 08             	mov    %esi,0x8(%rax)
  409e73:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  409e77:	e8 d4 d6 ff ff       	callq  407550 <mbedtls_ssl_write_handshake_msg>
  409e7c:	89 45 cc             	mov    %eax,-0x34(%rbp)
  409e7f:	83 f8 00             	cmp    $0x0,%eax
  409e82:	74 0c                	je     409e90 <mbedtls_ssl_write_certificate+0x330>
  409e84:	eb 00                	jmp    409e86 <mbedtls_ssl_write_certificate+0x326>
  409e86:	eb 00                	jmp    409e88 <mbedtls_ssl_write_certificate+0x328>
  409e88:	8b 45 cc             	mov    -0x34(%rbp),%eax
  409e8b:	89 45 dc             	mov    %eax,-0x24(%rbp)
  409e8e:	eb 0a                	jmp    409e9a <mbedtls_ssl_write_certificate+0x33a>
  409e90:	eb 00                	jmp    409e92 <mbedtls_ssl_write_certificate+0x332>
  409e92:	eb 00                	jmp    409e94 <mbedtls_ssl_write_certificate+0x334>
  409e94:	8b 45 cc             	mov    -0x34(%rbp),%eax
  409e97:	89 45 dc             	mov    %eax,-0x24(%rbp)
  409e9a:	8b 45 dc             	mov    -0x24(%rbp),%eax
  409e9d:	89 45 94             	mov    %eax,-0x6c(%rbp)
  409ea0:	e8 b1 ba 03 00       	callq  445956 <writeback_cache>
  409ea5:	8b 45 94             	mov    -0x6c(%rbp),%eax
  409ea8:	48 83 c4 70          	add    $0x70,%rsp
  409eac:	5d                   	pop    %rbp
  409ead:	c3                   	retq   
  409eae:	66 90                	xchg   %ax,%ax

0000000000409eb0 <mbedtls_ssl_parse_certificate>:
  409eb0:	55                   	push   %rbp
  409eb1:	48 89 e5             	mov    %rsp,%rbp
  409eb4:	48 81 ec e0 01 00 00 	sub    $0x1e0,%rsp
  409ebb:	48 89 bd 98 fe ff ff 	mov    %rdi,-0x168(%rbp)
  409ec2:	48 8b bd 98 fe ff ff 	mov    -0x168(%rbp),%rdi
  409ec9:	48 8b 7f 78          	mov    0x78(%rdi),%rdi
  409ecd:	48 8b 3f             	mov    (%rdi),%rdi
  409ed0:	48 89 bd 88 fe ff ff 	mov    %rdi,-0x178(%rbp)
  409ed7:	48 8b bd 98 fe ff ff 	mov    -0x168(%rbp),%rdi
  409ede:	48 8b 3f             	mov    (%rdi),%rdi
  409ee1:	8a 87 98 00 00 00    	mov    0x98(%rdi),%al
  409ee7:	c0 e8 02             	shr    $0x2,%al
  409eea:	24 03                	and    $0x3,%al
  409eec:	0f b6 c8             	movzbl %al,%ecx
  409eef:	89 8d 84 fe ff ff    	mov    %ecx,-0x17c(%rbp)
  409ef5:	48 c7 85 78 fe ff ff 	movq   $0x0,-0x188(%rbp)
  409efc:	00 00 00 00 
  409f00:	eb 00                	jmp    409f02 <mbedtls_ssl_parse_certificate+0x52>
  409f02:	48 8b 85 88 fe ff ff 	mov    -0x178(%rbp),%rax
  409f09:	83 78 18 05          	cmpl   $0x5,0x18(%rax)
  409f0d:	74 27                	je     409f36 <mbedtls_ssl_parse_certificate+0x86>
  409f0f:	48 8b 85 88 fe ff ff 	mov    -0x178(%rbp),%rax
  409f16:	83 78 18 06          	cmpl   $0x6,0x18(%rax)
  409f1a:	74 1a                	je     409f36 <mbedtls_ssl_parse_certificate+0x86>
  409f1c:	48 8b 85 88 fe ff ff 	mov    -0x178(%rbp),%rax
  409f23:	83 78 18 08          	cmpl   $0x8,0x18(%rax)
  409f27:	74 0d                	je     409f36 <mbedtls_ssl_parse_certificate+0x86>
  409f29:	48 8b 85 88 fe ff ff 	mov    -0x178(%rbp),%rax
  409f30:	83 78 18 0b          	cmpl   $0xb,0x18(%rax)
  409f34:	75 23                	jne    409f59 <mbedtls_ssl_parse_certificate+0xa9>
  409f36:	eb 00                	jmp    409f38 <mbedtls_ssl_parse_certificate+0x88>
  409f38:	eb 00                	jmp    409f3a <mbedtls_ssl_parse_certificate+0x8a>
  409f3a:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  409f41:	8b 48 08             	mov    0x8(%rax),%ecx
  409f44:	83 c1 01             	add    $0x1,%ecx
  409f47:	89 48 08             	mov    %ecx,0x8(%rax)
  409f4a:	c7 85 a0 fe ff ff 00 	movl   $0x0,-0x160(%rbp)
  409f51:	00 00 00 
  409f54:	e9 73 0f 00 00       	jmpq   40aecc <mbedtls_ssl_parse_certificate+0x101c>
  409f59:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  409f60:	48 8b 00             	mov    (%rax),%rax
  409f63:	8a 88 98 00 00 00    	mov    0x98(%rax),%cl
  409f69:	80 e1 01             	and    $0x1,%cl
  409f6c:	0f b6 d1             	movzbl %cl,%edx
  409f6f:	83 fa 01             	cmp    $0x1,%edx
  409f72:	75 30                	jne    409fa4 <mbedtls_ssl_parse_certificate+0xf4>
  409f74:	48 8b 85 88 fe ff ff 	mov    -0x178(%rbp),%rax
  409f7b:	83 78 18 07          	cmpl   $0x7,0x18(%rax)
  409f7f:	75 23                	jne    409fa4 <mbedtls_ssl_parse_certificate+0xf4>
  409f81:	eb 00                	jmp    409f83 <mbedtls_ssl_parse_certificate+0xd3>
  409f83:	eb 00                	jmp    409f85 <mbedtls_ssl_parse_certificate+0xd5>
  409f85:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  409f8c:	8b 48 08             	mov    0x8(%rax),%ecx
  409f8f:	83 c1 01             	add    $0x1,%ecx
  409f92:	89 48 08             	mov    %ecx,0x8(%rax)
  409f95:	c7 85 a0 fe ff ff 00 	movl   $0x0,-0x160(%rbp)
  409f9c:	00 00 00 
  409f9f:	e9 28 0f 00 00       	jmpq   40aecc <mbedtls_ssl_parse_certificate+0x101c>
  409fa4:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  409fab:	48 8b 00             	mov    (%rax),%rax
  409fae:	8a 88 98 00 00 00    	mov    0x98(%rax),%cl
  409fb4:	80 e1 01             	and    $0x1,%cl
  409fb7:	0f b6 d1             	movzbl %cl,%edx
  409fba:	83 fa 01             	cmp    $0x1,%edx
  409fbd:	75 3c                	jne    409ffb <mbedtls_ssl_parse_certificate+0x14b>
  409fbf:	83 bd 84 fe ff ff 00 	cmpl   $0x0,-0x17c(%rbp)
  409fc6:	75 33                	jne    409ffb <mbedtls_ssl_parse_certificate+0x14b>
  409fc8:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  409fcf:	48 8b 40 50          	mov    0x50(%rax),%rax
  409fd3:	c7 40 70 80 00 00 00 	movl   $0x80,0x70(%rax)
  409fda:	eb 00                	jmp    409fdc <mbedtls_ssl_parse_certificate+0x12c>
  409fdc:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  409fe3:	8b 48 08             	mov    0x8(%rax),%ecx
  409fe6:	83 c1 01             	add    $0x1,%ecx
  409fe9:	89 48 08             	mov    %ecx,0x8(%rax)
  409fec:	c7 85 a0 fe ff ff 00 	movl   $0x0,-0x160(%rbp)
  409ff3:	00 00 00 
  409ff6:	e9 d1 0e 00 00       	jmpq   40aecc <mbedtls_ssl_parse_certificate+0x101c>
  409ffb:	48 8b bd 98 fe ff ff 	mov    -0x168(%rbp),%rdi
  40a002:	be 01 00 00 00       	mov    $0x1,%esi
  40a007:	e8 24 e2 ff ff       	callq  408230 <mbedtls_ssl_read_record>
  40a00c:	89 85 94 fe ff ff    	mov    %eax,-0x16c(%rbp)
  40a012:	83 f8 00             	cmp    $0x0,%eax
  40a015:	74 15                	je     40a02c <mbedtls_ssl_parse_certificate+0x17c>
  40a017:	eb 00                	jmp    40a019 <mbedtls_ssl_parse_certificate+0x169>
  40a019:	eb 00                	jmp    40a01b <mbedtls_ssl_parse_certificate+0x16b>
  40a01b:	8b 85 94 fe ff ff    	mov    -0x16c(%rbp),%eax
  40a021:	89 85 a0 fe ff ff    	mov    %eax,-0x160(%rbp)
  40a027:	e9 a0 0e 00 00       	jmpq   40aecc <mbedtls_ssl_parse_certificate+0x101c>
  40a02c:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  40a033:	48 89 85 c0 fe ff ff 	mov    %rax,-0x140(%rbp)
  40a03a:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  40a041:	48 8b 00             	mov    (%rax),%rax
  40a044:	8a 88 98 00 00 00    	mov    0x98(%rax),%cl
  40a04a:	80 e1 01             	and    $0x1,%cl
  40a04d:	0f b6 d1             	movzbl %cl,%edx
  40a050:	83 fa 01             	cmp    $0x1,%edx
  40a053:	0f 85 bc 00 00 00    	jne    40a115 <mbedtls_ssl_parse_certificate+0x265>
  40a059:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  40a060:	83 78 10 00          	cmpl   $0x0,0x10(%rax)
  40a064:	0f 84 ab 00 00 00    	je     40a115 <mbedtls_ssl_parse_certificate+0x265>
  40a06a:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  40a071:	48 8b 80 e8 00 00 00 	mov    0xe8(%rax),%rax
  40a078:	48 8b 8d c0 fe ff ff 	mov    -0x140(%rbp),%rcx
  40a07f:	48 89 8d d0 fe ff ff 	mov    %rcx,-0x130(%rbp)
  40a086:	48 83 f8 07          	cmp    $0x7,%rax
  40a08a:	0f 85 83 00 00 00    	jne    40a113 <mbedtls_ssl_parse_certificate+0x263>
  40a090:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  40a097:	83 b8 d0 00 00 00 16 	cmpl   $0x16,0xd0(%rax)
  40a09e:	75 73                	jne    40a113 <mbedtls_ssl_parse_certificate+0x263>
  40a0a0:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  40a0a7:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  40a0ae:	0f b6 08             	movzbl (%rax),%ecx
  40a0b1:	83 f9 0b             	cmp    $0xb,%ecx
  40a0b4:	75 5d                	jne    40a113 <mbedtls_ssl_parse_certificate+0x263>
  40a0b6:	48 be 20 8d 44 00 00 	movabs $0x448d20,%rsi
  40a0bd:	00 00 00 
  40a0c0:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  40a0c7:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  40a0ce:	48 8b 8d c0 fe ff ff 	mov    -0x140(%rbp),%rcx
  40a0d5:	48 89 8d f0 fe ff ff 	mov    %rcx,-0x110(%rbp)
  40a0dc:	48 83 c0 04          	add    $0x4,%rax
  40a0e0:	ba 03 00 00 00       	mov    $0x3,%edx
  40a0e5:	48 89 c7             	mov    %rax,%rdi
  40a0e8:	e8 e3 70 ff ff       	callq  4011d0 <memcmp@plt>
  40a0ed:	83 f8 00             	cmp    $0x0,%eax
  40a0f0:	75 21                	jne    40a113 <mbedtls_ssl_parse_certificate+0x263>
  40a0f2:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  40a0f9:	48 8b 40 50          	mov    0x50(%rax),%rax
  40a0fd:	c7 40 70 40 00 00 00 	movl   $0x40,0x70(%rax)
  40a104:	c7 85 cc fe ff ff 80 	movl   $0xffff8b80,-0x134(%rbp)
  40a10b:	8b ff ff 
  40a10e:	e9 81 09 00 00       	jmpq   40aa94 <mbedtls_ssl_parse_certificate+0xbe4>
  40a113:	eb 00                	jmp    40a115 <mbedtls_ssl_parse_certificate+0x265>
  40a115:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  40a11c:	83 b8 d0 00 00 00 16 	cmpl   $0x16,0xd0(%rax)
  40a123:	0f 84 d5 00 00 00    	je     40a1fe <mbedtls_ssl_parse_certificate+0x34e>
  40a129:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  40a130:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
  40a137:	c6 85 ff fe ff ff 02 	movb   $0x2,-0x101(%rbp)
  40a13e:	c6 85 fe fe ff ff 0a 	movb   $0xa,-0x102(%rbp)
  40a145:	48 83 bd 00 ff ff ff 	cmpq   $0x0,-0x100(%rbp)
  40a14c:	00 
  40a14d:	74 0d                	je     40a15c <mbedtls_ssl_parse_certificate+0x2ac>
  40a14f:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
  40a156:	48 83 38 00          	cmpq   $0x0,(%rax)
  40a15a:	75 0f                	jne    40a16b <mbedtls_ssl_parse_certificate+0x2bb>
  40a15c:	c7 85 0c ff ff ff 00 	movl   $0xffff8f00,-0xf4(%rbp)
  40a163:	8f ff ff 
  40a166:	e9 84 00 00 00       	jmpq   40a1ef <mbedtls_ssl_parse_certificate+0x33f>
  40a16b:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
  40a172:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  40a179:	00 00 00 
  40a17c:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
  40a183:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  40a18a:	02 00 00 00 
  40a18e:	8a 8d ff fe ff ff    	mov    -0x101(%rbp),%cl
  40a194:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
  40a19b:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40a1a2:	88 08                	mov    %cl,(%rax)
  40a1a4:	8a 8d fe fe ff ff    	mov    -0x102(%rbp),%cl
  40a1aa:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
  40a1b1:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40a1b8:	88 48 01             	mov    %cl,0x1(%rax)
  40a1bb:	48 8b bd 00 ff ff ff 	mov    -0x100(%rbp),%rdi
  40a1c2:	be 01 00 00 00       	mov    $0x1,%esi
  40a1c7:	e8 04 d5 ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  40a1cc:	89 85 f8 fe ff ff    	mov    %eax,-0x108(%rbp)
  40a1d2:	83 f8 00             	cmp    $0x0,%eax
  40a1d5:	74 0e                	je     40a1e5 <mbedtls_ssl_parse_certificate+0x335>
  40a1d7:	8b 85 f8 fe ff ff    	mov    -0x108(%rbp),%eax
  40a1dd:	89 85 0c ff ff ff    	mov    %eax,-0xf4(%rbp)
  40a1e3:	eb 0a                	jmp    40a1ef <mbedtls_ssl_parse_certificate+0x33f>
  40a1e5:	c7 85 0c ff ff ff 00 	movl   $0x0,-0xf4(%rbp)
  40a1ec:	00 00 00 
  40a1ef:	c7 85 cc fe ff ff 00 	movl   $0xffff8900,-0x134(%rbp)
  40a1f6:	89 ff ff 
  40a1f9:	e9 96 08 00 00       	jmpq   40aa94 <mbedtls_ssl_parse_certificate+0xbe4>
  40a1fe:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  40a205:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  40a20c:	0f b6 08             	movzbl (%rax),%ecx
  40a20f:	83 f9 0b             	cmp    $0xb,%ecx
  40a212:	75 26                	jne    40a23a <mbedtls_ssl_parse_certificate+0x38a>
  40a214:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  40a21b:	48 8b 80 e8 00 00 00 	mov    0xe8(%rax),%rax
  40a222:	48 8b 8d c0 fe ff ff 	mov    -0x140(%rbp),%rcx
  40a229:	48 89 8d 10 ff ff ff 	mov    %rcx,-0xf0(%rbp)
  40a230:	48 83 f8 0a          	cmp    $0xa,%rax
  40a234:	0f 83 d5 00 00 00    	jae    40a30f <mbedtls_ssl_parse_certificate+0x45f>
  40a23a:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  40a241:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
  40a248:	c6 85 37 ff ff ff 02 	movb   $0x2,-0xc9(%rbp)
  40a24f:	c6 85 36 ff ff ff 32 	movb   $0x32,-0xca(%rbp)
  40a256:	48 83 bd 38 ff ff ff 	cmpq   $0x0,-0xc8(%rbp)
  40a25d:	00 
  40a25e:	74 0d                	je     40a26d <mbedtls_ssl_parse_certificate+0x3bd>
  40a260:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  40a267:	48 83 38 00          	cmpq   $0x0,(%rax)
  40a26b:	75 0f                	jne    40a27c <mbedtls_ssl_parse_certificate+0x3cc>
  40a26d:	c7 85 44 ff ff ff 00 	movl   $0xffff8f00,-0xbc(%rbp)
  40a274:	8f ff ff 
  40a277:	e9 84 00 00 00       	jmpq   40a300 <mbedtls_ssl_parse_certificate+0x450>
  40a27c:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  40a283:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  40a28a:	00 00 00 
  40a28d:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  40a294:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  40a29b:	02 00 00 00 
  40a29f:	8a 8d 37 ff ff ff    	mov    -0xc9(%rbp),%cl
  40a2a5:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  40a2ac:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40a2b3:	88 08                	mov    %cl,(%rax)
  40a2b5:	8a 8d 36 ff ff ff    	mov    -0xca(%rbp),%cl
  40a2bb:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  40a2c2:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40a2c9:	88 48 01             	mov    %cl,0x1(%rax)
  40a2cc:	48 8b bd 38 ff ff ff 	mov    -0xc8(%rbp),%rdi
  40a2d3:	be 01 00 00 00       	mov    $0x1,%esi
  40a2d8:	e8 f3 d3 ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  40a2dd:	89 85 30 ff ff ff    	mov    %eax,-0xd0(%rbp)
  40a2e3:	83 f8 00             	cmp    $0x0,%eax
  40a2e6:	74 0e                	je     40a2f6 <mbedtls_ssl_parse_certificate+0x446>
  40a2e8:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
  40a2ee:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
  40a2f4:	eb 0a                	jmp    40a300 <mbedtls_ssl_parse_certificate+0x450>
  40a2f6:	c7 85 44 ff ff ff 00 	movl   $0x0,-0xbc(%rbp)
  40a2fd:	00 00 00 
  40a300:	c7 85 cc fe ff ff 00 	movl   $0xffff8600,-0x134(%rbp)
  40a307:	86 ff ff 
  40a30a:	e9 85 07 00 00       	jmpq   40aa94 <mbedtls_ssl_parse_certificate+0xbe4>
  40a30f:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  40a316:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  40a31d:	48 c7 85 b0 fe ff ff 	movq   $0x4,-0x150(%rbp)
  40a324:	04 00 00 00 
  40a328:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  40a32f:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  40a336:	48 8b 8d b0 fe ff ff 	mov    -0x150(%rbp),%rcx
  40a33d:	0f b6 54 08 01       	movzbl 0x1(%rax,%rcx,1),%edx
  40a342:	c1 e2 08             	shl    $0x8,%edx
  40a345:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  40a34c:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  40a353:	48 8b 8d b0 fe ff ff 	mov    -0x150(%rbp),%rcx
  40a35a:	0f b6 74 08 02       	movzbl 0x2(%rax,%rcx,1),%esi
  40a35f:	09 f2                	or     %esi,%edx
  40a361:	48 63 c2             	movslq %edx,%rax
  40a364:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
  40a36b:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  40a372:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  40a379:	48 8b 8d b0 fe ff ff 	mov    -0x150(%rbp),%rcx
  40a380:	0f b6 14 08          	movzbl (%rax,%rcx,1),%edx
  40a384:	83 fa 00             	cmp    $0x0,%edx
  40a387:	75 34                	jne    40a3bd <mbedtls_ssl_parse_certificate+0x50d>
  40a389:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  40a390:	48 8b 80 e8 00 00 00 	mov    0xe8(%rax),%rax
  40a397:	48 8b 8d a8 fe ff ff 	mov    -0x158(%rbp),%rcx
  40a39e:	48 83 c1 03          	add    $0x3,%rcx
  40a3a2:	48 8b 95 c0 fe ff ff 	mov    -0x140(%rbp),%rdx
  40a3a9:	48 89 95 68 ff ff ff 	mov    %rdx,-0x98(%rbp)
  40a3b0:	48 83 c1 04          	add    $0x4,%rcx
  40a3b4:	48 39 c8             	cmp    %rcx,%rax
  40a3b7:	0f 84 9f 00 00 00    	je     40a45c <mbedtls_ssl_parse_certificate+0x5ac>
  40a3bd:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  40a3c4:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  40a3c8:	c6 45 8f 02          	movb   $0x2,-0x71(%rbp)
  40a3cc:	c6 45 8e 32          	movb   $0x32,-0x72(%rbp)
  40a3d0:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
  40a3d5:	74 0a                	je     40a3e1 <mbedtls_ssl_parse_certificate+0x531>
  40a3d7:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  40a3db:	48 83 38 00          	cmpq   $0x0,(%rax)
  40a3df:	75 09                	jne    40a3ea <mbedtls_ssl_parse_certificate+0x53a>
  40a3e1:	c7 45 9c 00 8f ff ff 	movl   $0xffff8f00,-0x64(%rbp)
  40a3e8:	eb 63                	jmp    40a44d <mbedtls_ssl_parse_certificate+0x59d>
  40a3ea:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  40a3ee:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  40a3f5:	00 00 00 
  40a3f8:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  40a3fc:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  40a403:	02 00 00 00 
  40a407:	8a 4d 8f             	mov    -0x71(%rbp),%cl
  40a40a:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  40a40e:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40a415:	88 08                	mov    %cl,(%rax)
  40a417:	8a 4d 8e             	mov    -0x72(%rbp),%cl
  40a41a:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  40a41e:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40a425:	88 48 01             	mov    %cl,0x1(%rax)
  40a428:	48 8b 7d 90          	mov    -0x70(%rbp),%rdi
  40a42c:	be 01 00 00 00       	mov    $0x1,%esi
  40a431:	e8 9a d2 ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  40a436:	89 45 88             	mov    %eax,-0x78(%rbp)
  40a439:	83 f8 00             	cmp    $0x0,%eax
  40a43c:	74 08                	je     40a446 <mbedtls_ssl_parse_certificate+0x596>
  40a43e:	8b 45 88             	mov    -0x78(%rbp),%eax
  40a441:	89 45 9c             	mov    %eax,-0x64(%rbp)
  40a444:	eb 07                	jmp    40a44d <mbedtls_ssl_parse_certificate+0x59d>
  40a446:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
  40a44d:	c7 85 cc fe ff ff 00 	movl   $0xffff8600,-0x134(%rbp)
  40a454:	86 ff ff 
  40a457:	e9 38 06 00 00       	jmpq   40aa94 <mbedtls_ssl_parse_certificate+0xbe4>
  40a45c:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  40a463:	48 8b 40 50          	mov    0x50(%rax),%rax
  40a467:	48 83 78 68 00       	cmpq   $0x0,0x68(%rax)
  40a46c:	74 2b                	je     40a499 <mbedtls_ssl_parse_certificate+0x5e9>
  40a46e:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  40a475:	48 8b 40 50          	mov    0x50(%rax),%rax
  40a479:	48 8b 78 68          	mov    0x68(%rax),%rdi
  40a47d:	e8 ee ba 00 00       	callq  415f70 <mbedtls_x509_crt_free>
  40a482:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  40a489:	48 8b 40 50          	mov    0x50(%rax),%rax
  40a48d:	48 8b 40 68          	mov    0x68(%rax),%rax
  40a491:	48 89 c7             	mov    %rax,%rdi
  40a494:	e8 47 6c ff ff       	callq  4010e0 <free@plt>
  40a499:	b8 01 00 00 00       	mov    $0x1,%eax
  40a49e:	89 c7                	mov    %eax,%edi
  40a4a0:	b8 28 02 00 00       	mov    $0x228,%eax
  40a4a5:	89 c6                	mov    %eax,%esi
  40a4a7:	e8 3e c3 03 00       	callq  4467ea <aes_calloc>
  40a4ac:	48 8b b5 c0 fe ff ff 	mov    -0x140(%rbp),%rsi
  40a4b3:	48 8b 76 50          	mov    0x50(%rsi),%rsi
  40a4b7:	48 89 46 68          	mov    %rax,0x68(%rsi)
  40a4bb:	48 83 f8 00          	cmp    $0x0,%rax
  40a4bf:	0f 85 9f 00 00 00    	jne    40a564 <mbedtls_ssl_parse_certificate+0x6b4>
  40a4c5:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  40a4cc:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  40a4d0:	c6 45 a7 02          	movb   $0x2,-0x59(%rbp)
  40a4d4:	c6 45 a6 50          	movb   $0x50,-0x5a(%rbp)
  40a4d8:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
  40a4dd:	74 0a                	je     40a4e9 <mbedtls_ssl_parse_certificate+0x639>
  40a4df:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  40a4e3:	48 83 38 00          	cmpq   $0x0,(%rax)
  40a4e7:	75 09                	jne    40a4f2 <mbedtls_ssl_parse_certificate+0x642>
  40a4e9:	c7 45 b4 00 8f ff ff 	movl   $0xffff8f00,-0x4c(%rbp)
  40a4f0:	eb 63                	jmp    40a555 <mbedtls_ssl_parse_certificate+0x6a5>
  40a4f2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  40a4f6:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  40a4fd:	00 00 00 
  40a500:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  40a504:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  40a50b:	02 00 00 00 
  40a50f:	8a 4d a7             	mov    -0x59(%rbp),%cl
  40a512:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  40a516:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40a51d:	88 08                	mov    %cl,(%rax)
  40a51f:	8a 4d a6             	mov    -0x5a(%rbp),%cl
  40a522:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  40a526:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40a52d:	88 48 01             	mov    %cl,0x1(%rax)
  40a530:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
  40a534:	be 01 00 00 00       	mov    $0x1,%esi
  40a539:	e8 92 d1 ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  40a53e:	89 45 a0             	mov    %eax,-0x60(%rbp)
  40a541:	83 f8 00             	cmp    $0x0,%eax
  40a544:	74 08                	je     40a54e <mbedtls_ssl_parse_certificate+0x69e>
  40a546:	8b 45 a0             	mov    -0x60(%rbp),%eax
  40a549:	89 45 b4             	mov    %eax,-0x4c(%rbp)
  40a54c:	eb 07                	jmp    40a555 <mbedtls_ssl_parse_certificate+0x6a5>
  40a54e:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
  40a555:	c7 85 cc fe ff ff 00 	movl   $0xffff8100,-0x134(%rbp)
  40a55c:	81 ff ff 
  40a55f:	e9 30 05 00 00       	jmpq   40aa94 <mbedtls_ssl_parse_certificate+0xbe4>
  40a564:	31 f6                	xor    %esi,%esi
  40a566:	b8 28 02 00 00       	mov    $0x228,%eax
  40a56b:	89 c2                	mov    %eax,%edx
  40a56d:	48 8b 8d c0 fe ff ff 	mov    -0x140(%rbp),%rcx
  40a574:	48 8b 49 50          	mov    0x50(%rcx),%rcx
  40a578:	48 8b 49 68          	mov    0x68(%rcx),%rcx
  40a57c:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
  40a580:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  40a584:	48 89 cf             	mov    %rcx,%rdi
  40a587:	e8 94 6a ff ff       	callq  401020 <memset@plt>
  40a58c:	48 8b 8d b0 fe ff ff 	mov    -0x150(%rbp),%rcx
  40a593:	48 83 c1 03          	add    $0x3,%rcx
  40a597:	48 89 8d b0 fe ff ff 	mov    %rcx,-0x150(%rbp)
  40a59e:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
  40a5a5:	48 8b 8d c0 fe ff ff 	mov    -0x140(%rbp),%rcx
  40a5ac:	48 3b 81 e8 00 00 00 	cmp    0xe8(%rcx),%rax
  40a5b3:	0f 83 d1 04 00 00    	jae    40aa8a <mbedtls_ssl_parse_certificate+0xbda>
  40a5b9:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
  40a5c0:	48 83 c0 03          	add    $0x3,%rax
  40a5c4:	48 8b 8d c0 fe ff ff 	mov    -0x140(%rbp),%rcx
  40a5cb:	48 3b 81 e8 00 00 00 	cmp    0xe8(%rcx),%rax
  40a5d2:	0f 86 c9 00 00 00    	jbe    40a6a1 <mbedtls_ssl_parse_certificate+0x7f1>
  40a5d8:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  40a5df:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  40a5e6:	c6 85 77 ff ff ff 02 	movb   $0x2,-0x89(%rbp)
  40a5ed:	c6 85 76 ff ff ff 32 	movb   $0x32,-0x8a(%rbp)
  40a5f4:	48 83 bd 78 ff ff ff 	cmpq   $0x0,-0x88(%rbp)
  40a5fb:	00 
  40a5fc:	74 0d                	je     40a60b <mbedtls_ssl_parse_certificate+0x75b>
  40a5fe:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40a605:	48 83 38 00          	cmpq   $0x0,(%rax)
  40a609:	75 09                	jne    40a614 <mbedtls_ssl_parse_certificate+0x764>
  40a60b:	c7 45 84 00 8f ff ff 	movl   $0xffff8f00,-0x7c(%rbp)
  40a612:	eb 7e                	jmp    40a692 <mbedtls_ssl_parse_certificate+0x7e2>
  40a614:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40a61b:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  40a622:	00 00 00 
  40a625:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40a62c:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  40a633:	02 00 00 00 
  40a637:	8a 8d 77 ff ff ff    	mov    -0x89(%rbp),%cl
  40a63d:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40a644:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40a64b:	88 08                	mov    %cl,(%rax)
  40a64d:	8a 8d 76 ff ff ff    	mov    -0x8a(%rbp),%cl
  40a653:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40a65a:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40a661:	88 48 01             	mov    %cl,0x1(%rax)
  40a664:	48 8b bd 78 ff ff ff 	mov    -0x88(%rbp),%rdi
  40a66b:	be 01 00 00 00       	mov    $0x1,%esi
  40a670:	e8 5b d0 ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  40a675:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
  40a67b:	83 f8 00             	cmp    $0x0,%eax
  40a67e:	74 0b                	je     40a68b <mbedtls_ssl_parse_certificate+0x7db>
  40a680:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
  40a686:	89 45 84             	mov    %eax,-0x7c(%rbp)
  40a689:	eb 07                	jmp    40a692 <mbedtls_ssl_parse_certificate+0x7e2>
  40a68b:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%rbp)
  40a692:	c7 85 cc fe ff ff 00 	movl   $0xffff8600,-0x134(%rbp)
  40a699:	86 ff ff 
  40a69c:	e9 f3 03 00 00       	jmpq   40aa94 <mbedtls_ssl_parse_certificate+0xbe4>
  40a6a1:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  40a6a8:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  40a6af:	48 8b 8d b0 fe ff ff 	mov    -0x150(%rbp),%rcx
  40a6b6:	0f b6 14 08          	movzbl (%rax,%rcx,1),%edx
  40a6ba:	83 fa 00             	cmp    $0x0,%edx
  40a6bd:	0f 84 d5 00 00 00    	je     40a798 <mbedtls_ssl_parse_certificate+0x8e8>
  40a6c3:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  40a6ca:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
  40a6d1:	c6 85 57 ff ff ff 02 	movb   $0x2,-0xa9(%rbp)
  40a6d8:	c6 85 56 ff ff ff 32 	movb   $0x32,-0xaa(%rbp)
  40a6df:	48 83 bd 58 ff ff ff 	cmpq   $0x0,-0xa8(%rbp)
  40a6e6:	00 
  40a6e7:	74 0d                	je     40a6f6 <mbedtls_ssl_parse_certificate+0x846>
  40a6e9:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
  40a6f0:	48 83 38 00          	cmpq   $0x0,(%rax)
  40a6f4:	75 0f                	jne    40a705 <mbedtls_ssl_parse_certificate+0x855>
  40a6f6:	c7 85 64 ff ff ff 00 	movl   $0xffff8f00,-0x9c(%rbp)
  40a6fd:	8f ff ff 
  40a700:	e9 84 00 00 00       	jmpq   40a789 <mbedtls_ssl_parse_certificate+0x8d9>
  40a705:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
  40a70c:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  40a713:	00 00 00 
  40a716:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
  40a71d:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  40a724:	02 00 00 00 
  40a728:	8a 8d 57 ff ff ff    	mov    -0xa9(%rbp),%cl
  40a72e:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
  40a735:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40a73c:	88 08                	mov    %cl,(%rax)
  40a73e:	8a 8d 56 ff ff ff    	mov    -0xaa(%rbp),%cl
  40a744:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
  40a74b:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40a752:	88 48 01             	mov    %cl,0x1(%rax)
  40a755:	48 8b bd 58 ff ff ff 	mov    -0xa8(%rbp),%rdi
  40a75c:	be 01 00 00 00       	mov    $0x1,%esi
  40a761:	e8 6a cf ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  40a766:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
  40a76c:	83 f8 00             	cmp    $0x0,%eax
  40a76f:	74 0e                	je     40a77f <mbedtls_ssl_parse_certificate+0x8cf>
  40a771:	8b 85 50 ff ff ff    	mov    -0xb0(%rbp),%eax
  40a777:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%rbp)
  40a77d:	eb 0a                	jmp    40a789 <mbedtls_ssl_parse_certificate+0x8d9>
  40a77f:	c7 85 64 ff ff ff 00 	movl   $0x0,-0x9c(%rbp)
  40a786:	00 00 00 
  40a789:	c7 85 cc fe ff ff 00 	movl   $0xffff8600,-0x134(%rbp)
  40a790:	86 ff ff 
  40a793:	e9 fc 02 00 00       	jmpq   40aa94 <mbedtls_ssl_parse_certificate+0xbe4>
  40a798:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  40a79f:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  40a7a6:	48 8b 8d b0 fe ff ff 	mov    -0x150(%rbp),%rcx
  40a7ad:	0f b6 54 08 01       	movzbl 0x1(%rax,%rcx,1),%edx
  40a7b2:	c1 e2 08             	shl    $0x8,%edx
  40a7b5:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  40a7bc:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  40a7c3:	48 8b 8d b0 fe ff ff 	mov    -0x150(%rbp),%rcx
  40a7ca:	0f b6 74 08 02       	movzbl 0x2(%rax,%rcx,1),%esi
  40a7cf:	09 f2                	or     %esi,%edx
  40a7d1:	89 d2                	mov    %edx,%edx
  40a7d3:	89 d0                	mov    %edx,%eax
  40a7d5:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
  40a7dc:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
  40a7e3:	48 83 c0 03          	add    $0x3,%rax
  40a7e7:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
  40a7ee:	48 81 bd a8 fe ff ff 	cmpq   $0x80,-0x158(%rbp)
  40a7f5:	80 00 00 00 
  40a7f9:	72 22                	jb     40a81d <mbedtls_ssl_parse_certificate+0x96d>
  40a7fb:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
  40a802:	48 03 85 a8 fe ff ff 	add    -0x158(%rbp),%rax
  40a809:	48 8b 8d c0 fe ff ff 	mov    -0x140(%rbp),%rcx
  40a810:	48 3b 81 e8 00 00 00 	cmp    0xe8(%rcx),%rax
  40a817:	0f 86 d5 00 00 00    	jbe    40a8f2 <mbedtls_ssl_parse_certificate+0xa42>
  40a81d:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  40a824:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
  40a82b:	c6 85 1f ff ff ff 02 	movb   $0x2,-0xe1(%rbp)
  40a832:	c6 85 1e ff ff ff 32 	movb   $0x32,-0xe2(%rbp)
  40a839:	48 83 bd 20 ff ff ff 	cmpq   $0x0,-0xe0(%rbp)
  40a840:	00 
  40a841:	74 0d                	je     40a850 <mbedtls_ssl_parse_certificate+0x9a0>
  40a843:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
  40a84a:	48 83 38 00          	cmpq   $0x0,(%rax)
  40a84e:	75 0f                	jne    40a85f <mbedtls_ssl_parse_certificate+0x9af>
  40a850:	c7 85 2c ff ff ff 00 	movl   $0xffff8f00,-0xd4(%rbp)
  40a857:	8f ff ff 
  40a85a:	e9 84 00 00 00       	jmpq   40a8e3 <mbedtls_ssl_parse_certificate+0xa33>
  40a85f:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
  40a866:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  40a86d:	00 00 00 
  40a870:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
  40a877:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  40a87e:	02 00 00 00 
  40a882:	8a 8d 1f ff ff ff    	mov    -0xe1(%rbp),%cl
  40a888:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
  40a88f:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40a896:	88 08                	mov    %cl,(%rax)
  40a898:	8a 8d 1e ff ff ff    	mov    -0xe2(%rbp),%cl
  40a89e:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
  40a8a5:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40a8ac:	88 48 01             	mov    %cl,0x1(%rax)
  40a8af:	48 8b bd 20 ff ff ff 	mov    -0xe0(%rbp),%rdi
  40a8b6:	be 01 00 00 00       	mov    $0x1,%esi
  40a8bb:	e8 10 ce ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  40a8c0:	89 85 18 ff ff ff    	mov    %eax,-0xe8(%rbp)
  40a8c6:	83 f8 00             	cmp    $0x0,%eax
  40a8c9:	74 0e                	je     40a8d9 <mbedtls_ssl_parse_certificate+0xa29>
  40a8cb:	8b 85 18 ff ff ff    	mov    -0xe8(%rbp),%eax
  40a8d1:	89 85 2c ff ff ff    	mov    %eax,-0xd4(%rbp)
  40a8d7:	eb 0a                	jmp    40a8e3 <mbedtls_ssl_parse_certificate+0xa33>
  40a8d9:	c7 85 2c ff ff ff 00 	movl   $0x0,-0xd4(%rbp)
  40a8e0:	00 00 00 
  40a8e3:	c7 85 cc fe ff ff 00 	movl   $0xffff8600,-0x134(%rbp)
  40a8ea:	86 ff ff 
  40a8ed:	e9 a2 01 00 00       	jmpq   40aa94 <mbedtls_ssl_parse_certificate+0xbe4>
  40a8f2:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  40a8f9:	48 8b 48 50          	mov    0x50(%rax),%rcx
  40a8fd:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  40a904:	48 8b 79 68          	mov    0x68(%rcx),%rdi
  40a908:	48 8b 8d b0 fe ff ff 	mov    -0x150(%rbp),%rcx
  40a90f:	48 01 c8             	add    %rcx,%rax
  40a912:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
  40a919:	48 89 c6             	mov    %rax,%rsi
  40a91c:	e8 4f 89 00 00       	callq  413270 <mbedtls_x509_crt_parse_der>
  40a921:	89 85 bc fe ff ff    	mov    %eax,-0x144(%rbp)
  40a927:	8b 85 bc fe ff ff    	mov    -0x144(%rbp),%eax
  40a92d:	41 89 c0             	mov    %eax,%r8d
  40a930:	41 81 e8 80 d7 ff ff 	sub    $0xffffd780,%r8d
  40a937:	89 85 60 fe ff ff    	mov    %eax,-0x1a0(%rbp)
  40a93d:	44 89 85 5c fe ff ff 	mov    %r8d,-0x1a4(%rbp)
  40a944:	74 52                	je     40a998 <mbedtls_ssl_parse_certificate+0xae8>
  40a946:	eb 00                	jmp    40a948 <mbedtls_ssl_parse_certificate+0xa98>
  40a948:	8b 85 60 fe ff ff    	mov    -0x1a0(%rbp),%eax
  40a94e:	2d d2 d9 ff ff       	sub    $0xffffd9d2,%eax
  40a953:	89 85 58 fe ff ff    	mov    %eax,-0x1a8(%rbp)
  40a959:	74 23                	je     40a97e <mbedtls_ssl_parse_certificate+0xace>
  40a95b:	eb 00                	jmp    40a95d <mbedtls_ssl_parse_certificate+0xaad>
  40a95d:	8b 85 60 fe ff ff    	mov    -0x1a0(%rbp),%eax
  40a963:	2d 80 da ff ff       	sub    $0xffffda80,%eax
  40a968:	89 85 54 fe ff ff    	mov    %eax,-0x1ac(%rbp)
  40a96e:	74 31                	je     40a9a1 <mbedtls_ssl_parse_certificate+0xaf1>
  40a970:	eb 00                	jmp    40a972 <mbedtls_ssl_parse_certificate+0xac2>
  40a972:	8b 85 60 fe ff ff    	mov    -0x1a0(%rbp),%eax
  40a978:	85 c0                	test   %eax,%eax
  40a97a:	75 2e                	jne    40a9aa <mbedtls_ssl_parse_certificate+0xafa>
  40a97c:	eb 00                	jmp    40a97e <mbedtls_ssl_parse_certificate+0xace>
  40a97e:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
  40a985:	48 03 85 b0 fe ff ff 	add    -0x150(%rbp),%rax
  40a98c:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
  40a993:	e9 06 fc ff ff       	jmpq   40a59e <mbedtls_ssl_parse_certificate+0x6ee>
  40a998:	c6 85 a7 fe ff ff 50 	movb   $0x50,-0x159(%rbp)
  40a99f:	eb 10                	jmp    40a9b1 <mbedtls_ssl_parse_certificate+0xb01>
  40a9a1:	c6 85 a7 fe ff ff 2b 	movb   $0x2b,-0x159(%rbp)
  40a9a8:	eb 07                	jmp    40a9b1 <mbedtls_ssl_parse_certificate+0xb01>
  40a9aa:	c6 85 a7 fe ff ff 2a 	movb   $0x2a,-0x159(%rbp)
  40a9b1:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  40a9b8:	8a 8d a7 fe ff ff    	mov    -0x159(%rbp),%cl
  40a9be:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
  40a9c5:	c6 85 df fe ff ff 02 	movb   $0x2,-0x121(%rbp)
  40a9cc:	88 8d de fe ff ff    	mov    %cl,-0x122(%rbp)
  40a9d2:	48 83 bd e0 fe ff ff 	cmpq   $0x0,-0x120(%rbp)
  40a9d9:	00 
  40a9da:	74 0d                	je     40a9e9 <mbedtls_ssl_parse_certificate+0xb39>
  40a9dc:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
  40a9e3:	48 83 38 00          	cmpq   $0x0,(%rax)
  40a9e7:	75 0f                	jne    40a9f8 <mbedtls_ssl_parse_certificate+0xb48>
  40a9e9:	c7 85 ec fe ff ff 00 	movl   $0xffff8f00,-0x114(%rbp)
  40a9f0:	8f ff ff 
  40a9f3:	e9 84 00 00 00       	jmpq   40aa7c <mbedtls_ssl_parse_certificate+0xbcc>
  40a9f8:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
  40a9ff:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  40aa06:	00 00 00 
  40aa09:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
  40aa10:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  40aa17:	02 00 00 00 
  40aa1b:	8a 8d df fe ff ff    	mov    -0x121(%rbp),%cl
  40aa21:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
  40aa28:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40aa2f:	88 08                	mov    %cl,(%rax)
  40aa31:	8a 8d de fe ff ff    	mov    -0x122(%rbp),%cl
  40aa37:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
  40aa3e:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40aa45:	88 48 01             	mov    %cl,0x1(%rax)
  40aa48:	48 8b bd e0 fe ff ff 	mov    -0x120(%rbp),%rdi
  40aa4f:	be 01 00 00 00       	mov    $0x1,%esi
  40aa54:	e8 77 cc ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  40aa59:	89 85 d8 fe ff ff    	mov    %eax,-0x128(%rbp)
  40aa5f:	83 f8 00             	cmp    $0x0,%eax
  40aa62:	74 0e                	je     40aa72 <mbedtls_ssl_parse_certificate+0xbc2>
  40aa64:	8b 85 d8 fe ff ff    	mov    -0x128(%rbp),%eax
  40aa6a:	89 85 ec fe ff ff    	mov    %eax,-0x114(%rbp)
  40aa70:	eb 0a                	jmp    40aa7c <mbedtls_ssl_parse_certificate+0xbcc>
  40aa72:	c7 85 ec fe ff ff 00 	movl   $0x0,-0x114(%rbp)
  40aa79:	00 00 00 
  40aa7c:	8b 85 bc fe ff ff    	mov    -0x144(%rbp),%eax
  40aa82:	89 85 cc fe ff ff    	mov    %eax,-0x134(%rbp)
  40aa88:	eb 0a                	jmp    40aa94 <mbedtls_ssl_parse_certificate+0xbe4>
  40aa8a:	c7 85 cc fe ff ff 00 	movl   $0x0,-0x134(%rbp)
  40aa91:	00 00 00 
  40aa94:	8b 85 cc fe ff ff    	mov    -0x134(%rbp),%eax
  40aa9a:	89 85 94 fe ff ff    	mov    %eax,-0x16c(%rbp)
  40aaa0:	83 f8 00             	cmp    $0x0,%eax
  40aaa3:	74 40                	je     40aae5 <mbedtls_ssl_parse_certificate+0xc35>
  40aaa5:	81 bd 94 fe ff ff 80 	cmpl   $0xffff8b80,-0x16c(%rbp)
  40aaac:	8b ff ff 
  40aaaf:	75 13                	jne    40aac4 <mbedtls_ssl_parse_certificate+0xc14>
  40aab1:	83 bd 84 fe ff ff 01 	cmpl   $0x1,-0x17c(%rbp)
  40aab8:	75 0a                	jne    40aac4 <mbedtls_ssl_parse_certificate+0xc14>
  40aaba:	c7 85 94 fe ff ff 00 	movl   $0x0,-0x16c(%rbp)
  40aac1:	00 00 00 
  40aac4:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  40aacb:	8b 48 08             	mov    0x8(%rax),%ecx
  40aace:	83 c1 01             	add    $0x1,%ecx
  40aad1:	89 48 08             	mov    %ecx,0x8(%rax)
  40aad4:	8b 8d 94 fe ff ff    	mov    -0x16c(%rbp),%ecx
  40aada:	89 8d a0 fe ff ff    	mov    %ecx,-0x160(%rbp)
  40aae0:	e9 e7 03 00 00       	jmpq   40aecc <mbedtls_ssl_parse_certificate+0x101c>
  40aae5:	83 bd 84 fe ff ff 00 	cmpl   $0x0,-0x17c(%rbp)
  40aaec:	0f 84 bc 03 00 00    	je     40aeae <mbedtls_ssl_parse_certificate+0xffe>
  40aaf2:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  40aaf9:	48 8b 00             	mov    (%rax),%rax
  40aafc:	48 8b 40 78          	mov    0x78(%rax),%rax
  40ab00:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
  40ab07:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  40ab0e:	48 8b 00             	mov    (%rax),%rax
  40ab11:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
  40ab18:	48 89 85 68 fe ff ff 	mov    %rax,-0x198(%rbp)
  40ab1f:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  40ab26:	48 8b 40 50          	mov    0x50(%rax),%rax
  40ab2a:	48 8b 78 68          	mov    0x68(%rax),%rdi
  40ab2e:	48 8b b5 70 fe ff ff 	mov    -0x190(%rbp),%rsi
  40ab35:	48 8b 95 68 fe ff ff 	mov    -0x198(%rbp),%rdx
  40ab3c:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  40ab43:	48 8b 00             	mov    (%rax),%rax
  40ab46:	48 8b 48 68          	mov    0x68(%rax),%rcx
  40ab4a:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  40ab51:	4c 8b 80 50 01 00 00 	mov    0x150(%rax),%r8
  40ab58:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  40ab5f:	48 8b 40 50          	mov    0x50(%rax),%rax
  40ab63:	48 83 c0 70          	add    $0x70,%rax
  40ab67:	4c 8b 8d 98 fe ff ff 	mov    -0x168(%rbp),%r9
  40ab6e:	4d 8b 09             	mov    (%r9),%r9
  40ab71:	4d 8b 49 58          	mov    0x58(%r9),%r9
  40ab75:	4c 8b 95 98 fe ff ff 	mov    -0x168(%rbp),%r10
  40ab7c:	4d 8b 12             	mov    (%r10),%r10
  40ab7f:	4d 8b 52 60          	mov    0x60(%r10),%r10
  40ab83:	4c 8b 9d 78 fe ff ff 	mov    -0x188(%rbp),%r11
  40ab8a:	4c 89 8d 48 fe ff ff 	mov    %r9,-0x1b8(%rbp)
  40ab91:	49 89 c1             	mov    %rax,%r9
  40ab94:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
  40ab9b:	48 89 04 24          	mov    %rax,(%rsp)
  40ab9f:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
  40aba4:	4c 89 5c 24 10       	mov    %r11,0x10(%rsp)
  40aba9:	e8 02 c9 00 00       	callq  4174b0 <mbedtls_x509_crt_verify_restartable>
  40abae:	89 85 94 fe ff ff    	mov    %eax,-0x16c(%rbp)
  40abb4:	83 bd 94 fe ff ff 00 	cmpl   $0x0,-0x16c(%rbp)
  40abbb:	74 06                	je     40abc3 <mbedtls_ssl_parse_certificate+0xd13>
  40abbd:	eb 00                	jmp    40abbf <mbedtls_ssl_parse_certificate+0xd0f>
  40abbf:	eb 00                	jmp    40abc1 <mbedtls_ssl_parse_certificate+0xd11>
  40abc1:	eb 00                	jmp    40abc3 <mbedtls_ssl_parse_certificate+0xd13>
  40abc3:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  40abca:	48 8b 40 50          	mov    0x50(%rax),%rax
  40abce:	48 8b 40 68          	mov    0x68(%rax),%rax
  40abd2:	48 8b 8d 88 fe ff ff 	mov    -0x178(%rbp),%rcx
  40abd9:	48 8b 95 98 fe ff ff 	mov    -0x168(%rbp),%rdx
  40abe0:	48 8b 12             	mov    (%rdx),%rdx
  40abe3:	40 8a b2 98 00 00 00 	mov    0x98(%rdx),%sil
  40abea:	40 80 e6 01          	and    $0x1,%sil
  40abee:	40 0f b6 fe          	movzbl %sil,%edi
  40abf2:	83 ff 00             	cmp    $0x0,%edi
  40abf5:	40 0f 95 c6          	setne  %sil
  40abf9:	40 80 f6 ff          	xor    $0xff,%sil
  40abfd:	40 80 e6 01          	and    $0x1,%sil
  40ac01:	40 0f b6 fe          	movzbl %sil,%edi
  40ac05:	48 8b 95 98 fe ff ff 	mov    -0x168(%rbp),%rdx
  40ac0c:	48 8b 52 50          	mov    0x50(%rdx),%rdx
  40ac10:	48 83 c2 70          	add    $0x70,%rdx
  40ac14:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  40ac18:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  40ac1c:	89 7d d4             	mov    %edi,-0x2c(%rbp)
  40ac1f:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  40ac23:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
  40ac2a:	8b 7d c4             	mov    -0x3c(%rbp),%edi
  40ac2d:	83 ff 00             	cmp    $0x0,%edi
  40ac30:	74 19                	je     40ac4b <mbedtls_ssl_parse_certificate+0xd9b>
  40ac32:	eb 00                	jmp    40ac34 <mbedtls_ssl_parse_certificate+0xd84>
  40ac34:	eb 00                	jmp    40ac36 <mbedtls_ssl_parse_certificate+0xd86>
  40ac36:	83 bd 94 fe ff ff 00 	cmpl   $0x0,-0x16c(%rbp)
  40ac3d:	75 0a                	jne    40ac49 <mbedtls_ssl_parse_certificate+0xd99>
  40ac3f:	c7 85 94 fe ff ff 00 	movl   $0xffff8600,-0x16c(%rbp)
  40ac46:	86 ff ff 
  40ac49:	eb 00                	jmp    40ac4b <mbedtls_ssl_parse_certificate+0xd9b>
  40ac4b:	83 bd 84 fe ff ff 01 	cmpl   $0x1,-0x17c(%rbp)
  40ac52:	75 22                	jne    40ac76 <mbedtls_ssl_parse_certificate+0xdc6>
  40ac54:	81 bd 94 fe ff ff 00 	cmpl   $0xffffd900,-0x16c(%rbp)
  40ac5b:	d9 ff ff 
  40ac5e:	74 0c                	je     40ac6c <mbedtls_ssl_parse_certificate+0xdbc>
  40ac60:	81 bd 94 fe ff ff 00 	cmpl   $0xffff8600,-0x16c(%rbp)
  40ac67:	86 ff ff 
  40ac6a:	75 0a                	jne    40ac76 <mbedtls_ssl_parse_certificate+0xdc6>
  40ac6c:	c7 85 94 fe ff ff 00 	movl   $0x0,-0x16c(%rbp)
  40ac73:	00 00 00 
  40ac76:	48 83 bd 70 fe ff ff 	cmpq   $0x0,-0x190(%rbp)
  40ac7d:	00 
  40ac7e:	75 17                	jne    40ac97 <mbedtls_ssl_parse_certificate+0xde7>
  40ac80:	83 bd 84 fe ff ff 02 	cmpl   $0x2,-0x17c(%rbp)
  40ac87:	75 0e                	jne    40ac97 <mbedtls_ssl_parse_certificate+0xde7>
  40ac89:	eb 00                	jmp    40ac8b <mbedtls_ssl_parse_certificate+0xddb>
  40ac8b:	eb 00                	jmp    40ac8d <mbedtls_ssl_parse_certificate+0xddd>
  40ac8d:	c7 85 94 fe ff ff 80 	movl   $0xffff8980,-0x16c(%rbp)
  40ac94:	89 ff ff 
  40ac97:	83 bd 94 fe ff ff 00 	cmpl   $0x0,-0x16c(%rbp)
  40ac9e:	0f 84 08 02 00 00    	je     40aeac <mbedtls_ssl_parse_certificate+0xffc>
  40aca4:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  40acab:	48 8b 40 50          	mov    0x50(%rax),%rax
  40acaf:	8b 48 70             	mov    0x70(%rax),%ecx
  40acb2:	81 e1 00 01 00 00    	and    $0x100,%ecx
  40acb8:	83 f9 00             	cmp    $0x0,%ecx
  40acbb:	74 0c                	je     40acc9 <mbedtls_ssl_parse_certificate+0xe19>
  40acbd:	c6 85 67 fe ff ff 31 	movb   $0x31,-0x199(%rbp)
  40acc4:	e9 4e 01 00 00       	jmpq   40ae17 <mbedtls_ssl_parse_certificate+0xf67>
  40acc9:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  40acd0:	48 8b 40 50          	mov    0x50(%rax),%rax
  40acd4:	8b 48 70             	mov    0x70(%rax),%ecx
  40acd7:	83 e1 04             	and    $0x4,%ecx
  40acda:	83 f9 00             	cmp    $0x0,%ecx
  40acdd:	74 0c                	je     40aceb <mbedtls_ssl_parse_certificate+0xe3b>
  40acdf:	c6 85 67 fe ff ff 2a 	movb   $0x2a,-0x199(%rbp)
  40ace6:	e9 2a 01 00 00       	jmpq   40ae15 <mbedtls_ssl_parse_certificate+0xf65>
  40aceb:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  40acf2:	48 8b 40 50          	mov    0x50(%rax),%rax
  40acf6:	8b 48 70             	mov    0x70(%rax),%ecx
  40acf9:	81 e1 00 08 00 00    	and    $0x800,%ecx
  40acff:	83 f9 00             	cmp    $0x0,%ecx
  40ad02:	74 0c                	je     40ad10 <mbedtls_ssl_parse_certificate+0xe60>
  40ad04:	c6 85 67 fe ff ff 2b 	movb   $0x2b,-0x199(%rbp)
  40ad0b:	e9 03 01 00 00       	jmpq   40ae13 <mbedtls_ssl_parse_certificate+0xf63>
  40ad10:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  40ad17:	48 8b 40 50          	mov    0x50(%rax),%rax
  40ad1b:	8b 48 70             	mov    0x70(%rax),%ecx
  40ad1e:	81 e1 00 10 00 00    	and    $0x1000,%ecx
  40ad24:	83 f9 00             	cmp    $0x0,%ecx
  40ad27:	74 0c                	je     40ad35 <mbedtls_ssl_parse_certificate+0xe85>
  40ad29:	c6 85 67 fe ff ff 2b 	movb   $0x2b,-0x199(%rbp)
  40ad30:	e9 dc 00 00 00       	jmpq   40ae11 <mbedtls_ssl_parse_certificate+0xf61>
  40ad35:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  40ad3c:	48 8b 40 50          	mov    0x50(%rax),%rax
  40ad40:	8b 48 70             	mov    0x70(%rax),%ecx
  40ad43:	81 e1 00 20 00 00    	and    $0x2000,%ecx
  40ad49:	83 f9 00             	cmp    $0x0,%ecx
  40ad4c:	74 0c                	je     40ad5a <mbedtls_ssl_parse_certificate+0xeaa>
  40ad4e:	c6 85 67 fe ff ff 2b 	movb   $0x2b,-0x199(%rbp)
  40ad55:	e9 b5 00 00 00       	jmpq   40ae0f <mbedtls_ssl_parse_certificate+0xf5f>
  40ad5a:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  40ad61:	48 8b 40 50          	mov    0x50(%rax),%rax
  40ad65:	8b 48 70             	mov    0x70(%rax),%ecx
  40ad68:	81 e1 00 80 00 00    	and    $0x8000,%ecx
  40ad6e:	83 f9 00             	cmp    $0x0,%ecx
  40ad71:	74 0c                	je     40ad7f <mbedtls_ssl_parse_certificate+0xecf>
  40ad73:	c6 85 67 fe ff ff 2b 	movb   $0x2b,-0x199(%rbp)
  40ad7a:	e9 8e 00 00 00       	jmpq   40ae0d <mbedtls_ssl_parse_certificate+0xf5d>
  40ad7f:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  40ad86:	48 8b 40 50          	mov    0x50(%rax),%rax
  40ad8a:	8b 48 70             	mov    0x70(%rax),%ecx
  40ad8d:	81 e1 00 00 01 00    	and    $0x10000,%ecx
  40ad93:	83 f9 00             	cmp    $0x0,%ecx
  40ad96:	74 09                	je     40ada1 <mbedtls_ssl_parse_certificate+0xef1>
  40ad98:	c6 85 67 fe ff ff 2b 	movb   $0x2b,-0x199(%rbp)
  40ad9f:	eb 6a                	jmp    40ae0b <mbedtls_ssl_parse_certificate+0xf5b>
  40ada1:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  40ada8:	48 8b 40 50          	mov    0x50(%rax),%rax
  40adac:	8b 48 70             	mov    0x70(%rax),%ecx
  40adaf:	83 e1 01             	and    $0x1,%ecx
  40adb2:	83 f9 00             	cmp    $0x0,%ecx
  40adb5:	74 09                	je     40adc0 <mbedtls_ssl_parse_certificate+0xf10>
  40adb7:	c6 85 67 fe ff ff 2d 	movb   $0x2d,-0x199(%rbp)
  40adbe:	eb 49                	jmp    40ae09 <mbedtls_ssl_parse_certificate+0xf59>
  40adc0:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  40adc7:	48 8b 40 50          	mov    0x50(%rax),%rax
  40adcb:	8b 48 70             	mov    0x70(%rax),%ecx
  40adce:	83 e1 02             	and    $0x2,%ecx
  40add1:	83 f9 00             	cmp    $0x0,%ecx
  40add4:	74 09                	je     40addf <mbedtls_ssl_parse_certificate+0xf2f>
  40add6:	c6 85 67 fe ff ff 2c 	movb   $0x2c,-0x199(%rbp)
  40addd:	eb 28                	jmp    40ae07 <mbedtls_ssl_parse_certificate+0xf57>
  40addf:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  40ade6:	48 8b 40 50          	mov    0x50(%rax),%rax
  40adea:	8b 48 70             	mov    0x70(%rax),%ecx
  40aded:	83 e1 08             	and    $0x8,%ecx
  40adf0:	83 f9 00             	cmp    $0x0,%ecx
  40adf3:	74 09                	je     40adfe <mbedtls_ssl_parse_certificate+0xf4e>
  40adf5:	c6 85 67 fe ff ff 30 	movb   $0x30,-0x199(%rbp)
  40adfc:	eb 07                	jmp    40ae05 <mbedtls_ssl_parse_certificate+0xf55>
  40adfe:	c6 85 67 fe ff ff 2e 	movb   $0x2e,-0x199(%rbp)
  40ae05:	eb 00                	jmp    40ae07 <mbedtls_ssl_parse_certificate+0xf57>
  40ae07:	eb 00                	jmp    40ae09 <mbedtls_ssl_parse_certificate+0xf59>
  40ae09:	eb 00                	jmp    40ae0b <mbedtls_ssl_parse_certificate+0xf5b>
  40ae0b:	eb 00                	jmp    40ae0d <mbedtls_ssl_parse_certificate+0xf5d>
  40ae0d:	eb 00                	jmp    40ae0f <mbedtls_ssl_parse_certificate+0xf5f>
  40ae0f:	eb 00                	jmp    40ae11 <mbedtls_ssl_parse_certificate+0xf61>
  40ae11:	eb 00                	jmp    40ae13 <mbedtls_ssl_parse_certificate+0xf63>
  40ae13:	eb 00                	jmp    40ae15 <mbedtls_ssl_parse_certificate+0xf65>
  40ae15:	eb 00                	jmp    40ae17 <mbedtls_ssl_parse_certificate+0xf67>
  40ae17:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  40ae1e:	8a 8d 67 fe ff ff    	mov    -0x199(%rbp),%cl
  40ae24:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40ae28:	c6 45 ef 02          	movb   $0x2,-0x11(%rbp)
  40ae2c:	88 4d ee             	mov    %cl,-0x12(%rbp)
  40ae2f:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  40ae34:	74 0a                	je     40ae40 <mbedtls_ssl_parse_certificate+0xf90>
  40ae36:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40ae3a:	48 83 38 00          	cmpq   $0x0,(%rax)
  40ae3e:	75 09                	jne    40ae49 <mbedtls_ssl_parse_certificate+0xf99>
  40ae40:	c7 45 fc 00 8f ff ff 	movl   $0xffff8f00,-0x4(%rbp)
  40ae47:	eb 63                	jmp    40aeac <mbedtls_ssl_parse_certificate+0xffc>
  40ae49:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40ae4d:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  40ae54:	00 00 00 
  40ae57:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40ae5b:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  40ae62:	02 00 00 00 
  40ae66:	8a 4d ef             	mov    -0x11(%rbp),%cl
  40ae69:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40ae6d:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40ae74:	88 08                	mov    %cl,(%rax)
  40ae76:	8a 4d ee             	mov    -0x12(%rbp),%cl
  40ae79:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40ae7d:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40ae84:	88 48 01             	mov    %cl,0x1(%rax)
  40ae87:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  40ae8b:	be 01 00 00 00       	mov    $0x1,%esi
  40ae90:	e8 3b c8 ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  40ae95:	89 45 e8             	mov    %eax,-0x18(%rbp)
  40ae98:	83 f8 00             	cmp    $0x0,%eax
  40ae9b:	74 08                	je     40aea5 <mbedtls_ssl_parse_certificate+0xff5>
  40ae9d:	8b 45 e8             	mov    -0x18(%rbp),%eax
  40aea0:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40aea3:	eb 07                	jmp    40aeac <mbedtls_ssl_parse_certificate+0xffc>
  40aea5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  40aeac:	eb 00                	jmp    40aeae <mbedtls_ssl_parse_certificate+0xffe>
  40aeae:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  40aeb5:	8b 48 08             	mov    0x8(%rax),%ecx
  40aeb8:	83 c1 01             	add    $0x1,%ecx
  40aebb:	89 48 08             	mov    %ecx,0x8(%rax)
  40aebe:	eb 00                	jmp    40aec0 <mbedtls_ssl_parse_certificate+0x1010>
  40aec0:	8b 85 94 fe ff ff    	mov    -0x16c(%rbp),%eax
  40aec6:	89 85 a0 fe ff ff    	mov    %eax,-0x160(%rbp)
  40aecc:	8b 85 a0 fe ff ff    	mov    -0x160(%rbp),%eax
  40aed2:	89 85 44 fe ff ff    	mov    %eax,-0x1bc(%rbp)
  40aed8:	e8 79 aa 03 00       	callq  445956 <writeback_cache>
  40aedd:	8b 85 44 fe ff ff    	mov    -0x1bc(%rbp),%eax
  40aee3:	48 81 c4 e0 01 00 00 	add    $0x1e0,%rsp
  40aeea:	5d                   	pop    %rbp
  40aeeb:	c3                   	retq   
  40aeec:	0f 1f 40 00          	nopl   0x0(%rax)

000000000040aef0 <mbedtls_ssl_parse_change_cipher_spec>:
  40aef0:	55                   	push   %rbp
  40aef1:	48 89 e5             	mov    %rsp,%rbp
  40aef4:	48 83 ec 40          	sub    $0x40,%rsp
  40aef8:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  40aefc:	eb 00                	jmp    40aefe <mbedtls_ssl_parse_change_cipher_spec+0xe>
  40aefe:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  40af02:	be 01 00 00 00       	mov    $0x1,%esi
  40af07:	e8 24 d3 ff ff       	callq  408230 <mbedtls_ssl_read_record>
  40af0c:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  40af0f:	83 f8 00             	cmp    $0x0,%eax
  40af12:	74 0f                	je     40af23 <mbedtls_ssl_parse_change_cipher_spec+0x33>
  40af14:	eb 00                	jmp    40af16 <mbedtls_ssl_parse_change_cipher_spec+0x26>
  40af16:	eb 00                	jmp    40af18 <mbedtls_ssl_parse_change_cipher_spec+0x28>
  40af18:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  40af1b:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  40af1e:	e9 b9 01 00 00       	jmpq   40b0dc <mbedtls_ssl_parse_change_cipher_spec+0x1ec>
  40af23:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40af27:	83 b8 d0 00 00 00 14 	cmpl   $0x14,0xd0(%rax)
  40af2e:	0f 84 9d 00 00 00    	je     40afd1 <mbedtls_ssl_parse_change_cipher_spec+0xe1>
  40af34:	eb 00                	jmp    40af36 <mbedtls_ssl_parse_change_cipher_spec+0x46>
  40af36:	eb 00                	jmp    40af38 <mbedtls_ssl_parse_change_cipher_spec+0x48>
  40af38:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40af3c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  40af40:	c6 45 df 02          	movb   $0x2,-0x21(%rbp)
  40af44:	c6 45 de 0a          	movb   $0xa,-0x22(%rbp)
  40af48:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  40af4d:	74 0a                	je     40af59 <mbedtls_ssl_parse_change_cipher_spec+0x69>
  40af4f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40af53:	48 83 38 00          	cmpq   $0x0,(%rax)
  40af57:	75 09                	jne    40af62 <mbedtls_ssl_parse_change_cipher_spec+0x72>
  40af59:	c7 45 ec 00 8f ff ff 	movl   $0xffff8f00,-0x14(%rbp)
  40af60:	eb 63                	jmp    40afc5 <mbedtls_ssl_parse_change_cipher_spec+0xd5>
  40af62:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40af66:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  40af6d:	00 00 00 
  40af70:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40af74:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  40af7b:	02 00 00 00 
  40af7f:	8a 4d df             	mov    -0x21(%rbp),%cl
  40af82:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40af86:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40af8d:	88 08                	mov    %cl,(%rax)
  40af8f:	8a 4d de             	mov    -0x22(%rbp),%cl
  40af92:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40af96:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40af9d:	88 48 01             	mov    %cl,0x1(%rax)
  40afa0:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  40afa4:	be 01 00 00 00       	mov    $0x1,%esi
  40afa9:	e8 22 c7 ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  40afae:	89 45 d8             	mov    %eax,-0x28(%rbp)
  40afb1:	83 f8 00             	cmp    $0x0,%eax
  40afb4:	74 08                	je     40afbe <mbedtls_ssl_parse_change_cipher_spec+0xce>
  40afb6:	8b 45 d8             	mov    -0x28(%rbp),%eax
  40afb9:	89 45 ec             	mov    %eax,-0x14(%rbp)
  40afbc:	eb 07                	jmp    40afc5 <mbedtls_ssl_parse_change_cipher_spec+0xd5>
  40afbe:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  40afc5:	c7 45 d4 00 89 ff ff 	movl   $0xffff8900,-0x2c(%rbp)
  40afcc:	e9 0b 01 00 00       	jmpq   40b0dc <mbedtls_ssl_parse_change_cipher_spec+0x1ec>
  40afd1:	eb 00                	jmp    40afd3 <mbedtls_ssl_parse_change_cipher_spec+0xe3>
  40afd3:	eb 00                	jmp    40afd5 <mbedtls_ssl_parse_change_cipher_spec+0xe5>
  40afd5:	31 f6                	xor    %esi,%esi
  40afd7:	b8 08 00 00 00       	mov    $0x8,%eax
  40afdc:	89 c2                	mov    %eax,%edx
  40afde:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  40afe2:	48 8b 49 78          	mov    0x78(%rcx),%rcx
  40afe6:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  40afea:	48 89 4f 60          	mov    %rcx,0x60(%rdi)
  40afee:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  40aff2:	48 8b 49 50          	mov    0x50(%rcx),%rcx
  40aff6:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  40affa:	48 89 4f 38          	mov    %rcx,0x38(%rdi)
  40affe:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  40b002:	48 8b b9 a0 00 00 00 	mov    0xa0(%rcx),%rdi
  40b009:	e8 12 60 ff ff       	callq  401020 <memset@plt>
  40b00e:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  40b012:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  40b016:	48 8b 52 78          	mov    0x78(%rdx),%rdx
  40b01a:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
  40b01e:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  40b022:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  40b026:	48 8b 89 a8 00 00 00 	mov    0xa8(%rcx),%rcx
  40b02d:	48 83 c1 f8          	add    $0xfffffffffffffff8,%rcx
  40b031:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40b035:	48 89 8a a0 00 00 00 	mov    %rcx,0xa0(%rdx)
  40b03c:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  40b040:	48 8b 89 a8 00 00 00 	mov    0xa8(%rcx),%rcx
  40b047:	48 83 c1 03          	add    $0x3,%rcx
  40b04b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40b04f:	48 89 8a b0 00 00 00 	mov    %rcx,0xb0(%rdx)
  40b056:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  40b05a:	48 8b 89 a8 00 00 00 	mov    0xa8(%rcx),%rcx
  40b061:	48 83 c1 05          	add    $0x5,%rcx
  40b065:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40b069:	48 89 8a b8 00 00 00 	mov    %rcx,0xb8(%rdx)
  40b070:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  40b075:	74 39                	je     40b0b0 <mbedtls_ssl_parse_change_cipher_spec+0x1c0>
  40b077:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40b07b:	83 78 10 02          	cmpl   $0x2,0x10(%rax)
  40b07f:	7c 2f                	jl     40b0b0 <mbedtls_ssl_parse_change_cipher_spec+0x1c0>
  40b081:	31 c0                	xor    %eax,%eax
  40b083:	89 c1                	mov    %eax,%ecx
  40b085:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40b089:	48 8b 92 b8 00 00 00 	mov    0xb8(%rdx),%rdx
  40b090:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  40b094:	48 03 56 18          	add    0x18(%rsi),%rdx
  40b098:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  40b09c:	48 2b 4e 20          	sub    0x20(%rsi),%rcx
  40b0a0:	48 01 ca             	add    %rcx,%rdx
  40b0a3:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  40b0a7:	48 89 91 c0 00 00 00 	mov    %rdx,0xc0(%rcx)
  40b0ae:	eb 16                	jmp    40b0c6 <mbedtls_ssl_parse_change_cipher_spec+0x1d6>
  40b0b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40b0b4:	48 8b 80 b8 00 00 00 	mov    0xb8(%rax),%rax
  40b0bb:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  40b0bf:	48 89 81 c0 00 00 00 	mov    %rax,0xc0(%rcx)
  40b0c6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40b0ca:	8b 48 08             	mov    0x8(%rax),%ecx
  40b0cd:	83 c1 01             	add    $0x1,%ecx
  40b0d0:	89 48 08             	mov    %ecx,0x8(%rax)
  40b0d3:	eb 00                	jmp    40b0d5 <mbedtls_ssl_parse_change_cipher_spec+0x1e5>
  40b0d5:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
  40b0dc:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  40b0df:	89 45 c0             	mov    %eax,-0x40(%rbp)
  40b0e2:	e8 6f a8 03 00       	callq  445956 <writeback_cache>
  40b0e7:	8b 45 c0             	mov    -0x40(%rbp),%eax
  40b0ea:	48 83 c4 40          	add    $0x40,%rsp
  40b0ee:	5d                   	pop    %rbp
  40b0ef:	c3                   	retq   

000000000040b0f0 <ssl_update_checksum_md5sha1>:
  40b0f0:	55                   	push   %rbp
  40b0f1:	48 89 e5             	mov    %rsp,%rbp
  40b0f4:	48 83 ec 30          	sub    $0x30,%rsp
  40b0f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40b0fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  40b100:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  40b104:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40b108:	48 8b 52 58          	mov    0x58(%rdx),%rdx
  40b10c:	48 83 c2 08          	add    $0x8,%rdx
  40b110:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  40b114:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  40b118:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
  40b11c:	48 89 d7             	mov    %rdx,%rdi
  40b11f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40b123:	e8 c8 15 02 00       	callq  42c6f0 <mbedtls_md5_update_ret>
  40b128:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40b12c:	48 8b 52 58          	mov    0x58(%rdx),%rdx
  40b130:	48 83 c2 60          	add    $0x60,%rdx
  40b134:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  40b138:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  40b13c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  40b140:	48 89 d7             	mov    %rdx,%rdi
  40b143:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40b147:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  40b14a:	e8 41 4a 03 00       	callq  43fb90 <mbedtls_sha1_update_ret>
  40b14f:	89 45 d0             	mov    %eax,-0x30(%rbp)
  40b152:	e8 ff a7 03 00       	callq  445956 <writeback_cache>
  40b157:	48 83 c4 30          	add    $0x30,%rsp
  40b15b:	5d                   	pop    %rbp
  40b15c:	c3                   	retq   
  40b15d:	0f 1f 00             	nopl   (%rax)

000000000040b160 <mbedtls_ssl_handshake_wrapup>:
  40b160:	55                   	push   %rbp
  40b161:	48 89 e5             	mov    %rsp,%rbp
  40b164:	48 81 ec 00 01 00 00 	sub    $0x100,%rsp
  40b16b:	48 89 bd 40 ff ff ff 	mov    %rdi,-0xc0(%rbp)
  40b172:	48 8b bd 40 ff ff ff 	mov    -0xc0(%rbp),%rdi
  40b179:	48 8b 7f 58          	mov    0x58(%rdi),%rdi
  40b17d:	8b 87 58 01 00 00    	mov    0x158(%rdi),%eax
  40b183:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
  40b189:	eb 00                	jmp    40b18b <mbedtls_ssl_handshake_wrapup+0x2b>
  40b18b:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
  40b192:	48 83 78 48 00       	cmpq   $0x0,0x48(%rax)
  40b197:	0f 84 9c 00 00 00    	je     40b239 <mbedtls_ssl_handshake_wrapup+0xd9>
  40b19d:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
  40b1a4:	48 8b 40 48          	mov    0x48(%rax),%rax
  40b1a8:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  40b1af:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)
  40b1b6:	00 
  40b1b7:	75 02                	jne    40b1bb <mbedtls_ssl_handshake_wrapup+0x5b>
  40b1b9:	eb 6b                	jmp    40b226 <mbedtls_ssl_handshake_wrapup+0xc6>
  40b1bb:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40b1c2:	48 83 78 68 00       	cmpq   $0x0,0x68(%rax)
  40b1c7:	74 23                	je     40b1ec <mbedtls_ssl_handshake_wrapup+0x8c>
  40b1c9:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40b1d0:	48 8b 78 68          	mov    0x68(%rax),%rdi
  40b1d4:	e8 97 ad 00 00       	callq  415f70 <mbedtls_x509_crt_free>
  40b1d9:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40b1e0:	48 8b 40 68          	mov    0x68(%rax),%rax
  40b1e4:	48 89 c7             	mov    %rax,%rdi
  40b1e7:	e8 f4 5e ff ff       	callq  4010e0 <free@plt>
  40b1ec:	31 f6                	xor    %esi,%esi
  40b1ee:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  40b1f5:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
  40b1fc:	48 c7 85 50 ff ff ff 	movq   $0x78,-0xb0(%rbp)
  40b203:	78 00 00 00 
  40b207:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  40b20e:	00 
  40b20f:	48 8b bd 58 ff ff ff 	mov    -0xa8(%rbp),%rdi
  40b216:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
  40b21d:	ff d0                	callq  *%rax
  40b21f:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
  40b226:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
  40b22d:	48 8b 40 48          	mov    0x48(%rax),%rax
  40b231:	48 89 c7             	mov    %rax,%rdi
  40b234:	e8 a7 5e ff ff       	callq  4010e0 <free@plt>
  40b239:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
  40b240:	48 8b 40 50          	mov    0x50(%rax),%rax
  40b244:	48 8b 8d 40 ff ff ff 	mov    -0xc0(%rbp),%rcx
  40b24b:	48 89 41 48          	mov    %rax,0x48(%rcx)
  40b24f:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
  40b256:	48 c7 40 50 00 00 00 	movq   $0x0,0x50(%rax)
  40b25d:	00 
  40b25e:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
  40b265:	48 8b 00             	mov    (%rax),%rax
  40b268:	48 83 78 48 00       	cmpq   $0x0,0x48(%rax)
  40b26d:	74 51                	je     40b2c0 <mbedtls_ssl_handshake_wrapup+0x160>
  40b26f:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
  40b276:	48 8b 40 48          	mov    0x48(%rax),%rax
  40b27a:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
  40b27f:	74 3f                	je     40b2c0 <mbedtls_ssl_handshake_wrapup+0x160>
  40b281:	83 bd 3c ff ff ff 00 	cmpl   $0x0,-0xc4(%rbp)
  40b288:	75 36                	jne    40b2c0 <mbedtls_ssl_handshake_wrapup+0x160>
  40b28a:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
  40b291:	48 8b 00             	mov    (%rax),%rax
  40b294:	48 8b 40 48          	mov    0x48(%rax),%rax
  40b298:	48 8b 8d 40 ff ff ff 	mov    -0xc0(%rbp),%rcx
  40b29f:	48 8b 09             	mov    (%rcx),%rcx
  40b2a2:	48 8b 79 50          	mov    0x50(%rcx),%rdi
  40b2a6:	48 8b 8d 40 ff ff ff 	mov    -0xc0(%rbp),%rcx
  40b2ad:	48 8b 71 48          	mov    0x48(%rcx),%rsi
  40b2b1:	ff d0                	callq  *%rax
  40b2b3:	83 f8 00             	cmp    $0x0,%eax
  40b2b6:	74 06                	je     40b2be <mbedtls_ssl_handshake_wrapup+0x15e>
  40b2b8:	eb 00                	jmp    40b2ba <mbedtls_ssl_handshake_wrapup+0x15a>
  40b2ba:	eb 00                	jmp    40b2bc <mbedtls_ssl_handshake_wrapup+0x15c>
  40b2bc:	eb 00                	jmp    40b2be <mbedtls_ssl_handshake_wrapup+0x15e>
  40b2be:	eb 00                	jmp    40b2c0 <mbedtls_ssl_handshake_wrapup+0x160>
  40b2c0:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
  40b2c7:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
  40b2ce:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40b2d5:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
  40b2dc:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  40b2e3:	48 8b 40 58          	mov    0x58(%rax),%rax
  40b2e7:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
  40b2ee:	48 83 bd 68 ff ff ff 	cmpq   $0x0,-0x98(%rbp)
  40b2f5:	00 
  40b2f6:	75 05                	jne    40b2fd <mbedtls_ssl_handshake_wrapup+0x19d>
  40b2f8:	e9 bd 00 00 00       	jmpq   40b3ba <mbedtls_ssl_handshake_wrapup+0x25a>
  40b2fd:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  40b304:	48 83 c0 08          	add    $0x8,%rax
  40b308:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  40b30f:	48 83 bd 78 ff ff ff 	cmpq   $0x0,-0x88(%rbp)
  40b316:	00 
  40b317:	75 02                	jne    40b31b <mbedtls_ssl_handshake_wrapup+0x1bb>
  40b319:	eb 2e                	jmp    40b349 <mbedtls_ssl_handshake_wrapup+0x1e9>
  40b31b:	31 f6                	xor    %esi,%esi
  40b31d:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40b324:	48 89 45 88          	mov    %rax,-0x78(%rbp)
  40b328:	48 c7 45 80 58 00 00 	movq   $0x58,-0x80(%rbp)
  40b32f:	00 
  40b330:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  40b337:	00 
  40b338:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
  40b33c:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
  40b340:	ff d0                	callq  *%rax
  40b342:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
  40b349:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  40b350:	48 83 c0 60          	add    $0x60,%rax
  40b354:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  40b358:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
  40b35d:	75 02                	jne    40b361 <mbedtls_ssl_handshake_wrapup+0x201>
  40b35f:	eb 2b                	jmp    40b38c <mbedtls_ssl_handshake_wrapup+0x22c>
  40b361:	31 f6                	xor    %esi,%esi
  40b363:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40b367:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  40b36b:	48 c7 45 c0 5c 00 00 	movq   $0x5c,-0x40(%rbp)
  40b372:	00 
  40b373:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  40b37a:	00 
  40b37b:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  40b37f:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  40b383:	ff d0                	callq  *%rax
  40b385:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
  40b38c:	31 f6                	xor    %esi,%esi
  40b38e:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  40b395:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  40b399:	48 c7 45 90 68 01 00 	movq   $0x168,-0x70(%rbp)
  40b3a0:	00 
  40b3a1:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  40b3a8:	00 
  40b3a9:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
  40b3ad:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
  40b3b1:	ff d0                	callq  *%rax
  40b3b3:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
  40b3ba:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40b3c1:	48 8b 40 58          	mov    0x58(%rax),%rax
  40b3c5:	48 89 c7             	mov    %rax,%rdi
  40b3c8:	e8 13 5d ff ff       	callq  4010e0 <free@plt>
  40b3cd:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40b3d4:	48 c7 40 58 00 00 00 	movq   $0x0,0x58(%rax)
  40b3db:	00 
  40b3dc:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40b3e3:	48 83 78 70 00       	cmpq   $0x0,0x70(%rax)
  40b3e8:	0f 84 45 01 00 00    	je     40b533 <mbedtls_ssl_handshake_wrapup+0x3d3>
  40b3ee:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40b3f5:	48 8b 40 70          	mov    0x70(%rax),%rax
  40b3f9:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  40b3fd:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
  40b402:	75 05                	jne    40b409 <mbedtls_ssl_handshake_wrapup+0x2a9>
  40b404:	e9 17 01 00 00       	jmpq   40b520 <mbedtls_ssl_handshake_wrapup+0x3c0>
  40b409:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40b40d:	48 05 80 00 00 00    	add    $0x80,%rax
  40b413:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  40b417:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  40b41c:	75 02                	jne    40b420 <mbedtls_ssl_handshake_wrapup+0x2c0>
  40b41e:	eb 4f                	jmp    40b46f <mbedtls_ssl_handshake_wrapup+0x30f>
  40b420:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40b424:	48 83 78 50 00       	cmpq   $0x0,0x50(%rax)
  40b429:	74 19                	je     40b444 <mbedtls_ssl_handshake_wrapup+0x2e4>
  40b42b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40b42f:	48 8b 00             	mov    (%rax),%rax
  40b432:	48 8b 40 28          	mov    0x28(%rax),%rax
  40b436:	48 8b 40 30          	mov    0x30(%rax),%rax
  40b43a:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  40b43e:	48 8b 79 50          	mov    0x50(%rcx),%rdi
  40b442:	ff d0                	callq  *%rax
  40b444:	31 f6                	xor    %esi,%esi
  40b446:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40b44a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  40b44e:	48 c7 45 d8 58 00 00 	movq   $0x58,-0x28(%rbp)
  40b455:	00 
  40b456:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  40b45d:	00 
  40b45e:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  40b462:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40b466:	ff d0                	callq  *%rax
  40b468:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
  40b46f:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40b473:	48 05 d8 00 00 00    	add    $0xd8,%rax
  40b479:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40b47d:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40b482:	75 02                	jne    40b486 <mbedtls_ssl_handshake_wrapup+0x326>
  40b484:	eb 4f                	jmp    40b4d5 <mbedtls_ssl_handshake_wrapup+0x375>
  40b486:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b48a:	48 83 78 50 00       	cmpq   $0x0,0x50(%rax)
  40b48f:	74 19                	je     40b4aa <mbedtls_ssl_handshake_wrapup+0x34a>
  40b491:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b495:	48 8b 00             	mov    (%rax),%rax
  40b498:	48 8b 40 28          	mov    0x28(%rax),%rax
  40b49c:	48 8b 40 30          	mov    0x30(%rax),%rax
  40b4a0:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  40b4a4:	48 8b 79 50          	mov    0x50(%rcx),%rdi
  40b4a8:	ff d0                	callq  *%rax
  40b4aa:	31 f6                	xor    %esi,%esi
  40b4ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b4b0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40b4b4:	48 c7 45 f0 58 00 00 	movq   $0x58,-0x10(%rbp)
  40b4bb:	00 
  40b4bc:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  40b4c3:	00 
  40b4c4:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  40b4c8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  40b4cc:	ff d0                	callq  *%rax
  40b4ce:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
  40b4d5:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40b4d9:	48 83 c0 50          	add    $0x50,%rax
  40b4dd:	48 89 c7             	mov    %rax,%rdi
  40b4e0:	e8 7b fa 01 00       	callq  42af60 <mbedtls_md_free>
  40b4e5:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40b4e9:	48 83 c0 68          	add    $0x68,%rax
  40b4ed:	48 89 c7             	mov    %rax,%rdi
  40b4f0:	e8 6b fa 01 00       	callq  42af60 <mbedtls_md_free>
  40b4f5:	31 f6                	xor    %esi,%esi
  40b4f7:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40b4fb:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  40b4ff:	48 c7 45 a8 30 01 00 	movq   $0x130,-0x58(%rbp)
  40b506:	00 
  40b507:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  40b50e:	00 
  40b50f:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
  40b513:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
  40b517:	ff d0                	callq  *%rax
  40b519:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
  40b520:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40b527:	48 8b 40 70          	mov    0x70(%rax),%rax
  40b52b:	48 89 c7             	mov    %rax,%rdi
  40b52e:	e8 ad 5b ff ff       	callq  4010e0 <free@plt>
  40b533:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40b53a:	48 8b 40 78          	mov    0x78(%rax),%rax
  40b53e:	48 8b 8d 60 ff ff ff 	mov    -0xa0(%rbp),%rcx
  40b545:	48 89 41 70          	mov    %rax,0x70(%rcx)
  40b549:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40b550:	48 c7 40 78 00 00 00 	movq   $0x0,0x78(%rax)
  40b557:	00 
  40b558:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
  40b55f:	8b 50 08             	mov    0x8(%rax),%edx
  40b562:	83 c2 01             	add    $0x1,%edx
  40b565:	89 50 08             	mov    %edx,0x8(%rax)
  40b568:	eb 00                	jmp    40b56a <mbedtls_ssl_handshake_wrapup+0x40a>
  40b56a:	e8 e7 a3 03 00       	callq  445956 <writeback_cache>
  40b56f:	48 81 c4 00 01 00 00 	add    $0x100,%rsp
  40b576:	5d                   	pop    %rbp
  40b577:	c3                   	retq   
  40b578:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40b57f:	00 

000000000040b580 <mbedtls_ssl_session_free>:
  40b580:	55                   	push   %rbp
  40b581:	48 89 e5             	mov    %rsp,%rbp
  40b584:	48 83 ec 20          	sub    $0x20,%rsp
  40b588:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40b58c:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40b591:	75 02                	jne    40b595 <mbedtls_ssl_session_free+0x15>
  40b593:	eb 50                	jmp    40b5e5 <mbedtls_ssl_session_free+0x65>
  40b595:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b599:	48 83 78 68 00       	cmpq   $0x0,0x68(%rax)
  40b59e:	74 1d                	je     40b5bd <mbedtls_ssl_session_free+0x3d>
  40b5a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b5a4:	48 8b 78 68          	mov    0x68(%rax),%rdi
  40b5a8:	e8 c3 a9 00 00       	callq  415f70 <mbedtls_x509_crt_free>
  40b5ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b5b1:	48 8b 40 68          	mov    0x68(%rax),%rax
  40b5b5:	48 89 c7             	mov    %rax,%rdi
  40b5b8:	e8 23 5b ff ff       	callq  4010e0 <free@plt>
  40b5bd:	31 f6                	xor    %esi,%esi
  40b5bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b5c3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40b5c7:	48 c7 45 f0 78 00 00 	movq   $0x78,-0x10(%rbp)
  40b5ce:	00 
  40b5cf:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  40b5d6:	00 
  40b5d7:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  40b5db:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  40b5df:	ff d0                	callq  *%rax
  40b5e1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  40b5e5:	e8 6c a3 03 00       	callq  445956 <writeback_cache>
  40b5ea:	48 83 c4 20          	add    $0x20,%rsp
  40b5ee:	5d                   	pop    %rbp
  40b5ef:	c3                   	retq   

000000000040b5f0 <mbedtls_ssl_write_finished>:
  40b5f0:	55                   	push   %rbp
  40b5f1:	48 89 e5             	mov    %rsp,%rbp
  40b5f4:	48 83 ec 30          	sub    $0x30,%rsp
  40b5f8:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
  40b5fc:	eb 00                	jmp    40b5fe <mbedtls_ssl_write_finished+0xe>
  40b5fe:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b602:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40b606:	48 8b 49 78          	mov    0x78(%rcx),%rcx
  40b60a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40b60e:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
  40b612:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40b616:	48 8b 80 08 01 00 00 	mov    0x108(%rax),%rax
  40b61d:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
  40b621:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  40b625:	48 89 81 00 01 00 00 	mov    %rax,0x100(%rcx)
  40b62c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40b630:	48 8b 80 08 01 00 00 	mov    0x108(%rax),%rax
  40b637:	48 83 c0 03          	add    $0x3,%rax
  40b63b:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  40b63f:	48 89 81 10 01 00 00 	mov    %rax,0x110(%rcx)
  40b646:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40b64a:	48 8b 80 08 01 00 00 	mov    0x108(%rax),%rax
  40b651:	48 83 c0 05          	add    $0x5,%rax
  40b655:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  40b659:	48 89 81 18 01 00 00 	mov    %rax,0x118(%rcx)
  40b660:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  40b665:	74 39                	je     40b6a0 <mbedtls_ssl_write_finished+0xb0>
  40b667:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40b66b:	83 78 10 02          	cmpl   $0x2,0x10(%rax)
  40b66f:	7c 2f                	jl     40b6a0 <mbedtls_ssl_write_finished+0xb0>
  40b671:	31 c0                	xor    %eax,%eax
  40b673:	89 c1                	mov    %eax,%ecx
  40b675:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40b679:	48 8b 92 18 01 00 00 	mov    0x118(%rdx),%rdx
  40b680:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  40b684:	48 03 56 18          	add    0x18(%rsi),%rdx
  40b688:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  40b68c:	48 2b 4e 20          	sub    0x20(%rsi),%rcx
  40b690:	48 01 ca             	add    %rcx,%rdx
  40b693:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  40b697:	48 89 91 20 01 00 00 	mov    %rdx,0x120(%rcx)
  40b69e:	eb 16                	jmp    40b6b6 <mbedtls_ssl_write_finished+0xc6>
  40b6a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40b6a4:	48 8b 80 18 01 00 00 	mov    0x118(%rax),%rax
  40b6ab:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  40b6af:	48 89 81 20 01 00 00 	mov    %rax,0x120(%rcx)
  40b6b6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b6ba:	48 8b 40 58          	mov    0x58(%rax),%rax
  40b6be:	48 8b 80 d0 00 00 00 	mov    0xd0(%rax),%rax
  40b6c5:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  40b6c9:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40b6cd:	48 8b 89 20 01 00 00 	mov    0x120(%rcx),%rcx
  40b6d4:	48 83 c1 04          	add    $0x4,%rcx
  40b6d8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40b6dc:	48 8b 12             	mov    (%rdx),%rdx
  40b6df:	40 8a b2 98 00 00 00 	mov    0x98(%rdx),%sil
  40b6e6:	40 80 e6 01          	and    $0x1,%sil
  40b6ea:	40 0f b6 d6          	movzbl %sil,%edx
  40b6ee:	48 89 ce             	mov    %rcx,%rsi
  40b6f1:	ff d0                	callq  *%rax
  40b6f3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b6f7:	8b 50 10             	mov    0x10(%rax),%edx
  40b6fa:	83 fa 00             	cmp    $0x0,%edx
  40b6fd:	ba 24 00 00 00       	mov    $0x24,%edx
  40b702:	41 b8 0c 00 00 00    	mov    $0xc,%r8d
  40b708:	44 0f 44 c2          	cmove  %edx,%r8d
  40b70c:	44 89 45 d8          	mov    %r8d,-0x28(%rbp)
  40b710:	8b 55 d8             	mov    -0x28(%rbp),%edx
  40b713:	83 c2 04             	add    $0x4,%edx
  40b716:	48 63 c2             	movslq %edx,%rax
  40b719:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40b71d:	48 89 81 30 01 00 00 	mov    %rax,0x130(%rcx)
  40b724:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b728:	c7 80 28 01 00 00 16 	movl   $0x16,0x128(%rax)
  40b72f:	00 00 00 
  40b732:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b736:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40b73d:	c6 00 14             	movb   $0x14,(%rax)
  40b740:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b744:	48 8b 40 58          	mov    0x58(%rax),%rax
  40b748:	83 b8 58 01 00 00 00 	cmpl   $0x0,0x158(%rax)
  40b74f:	74 48                	je     40b799 <mbedtls_ssl_write_finished+0x1a9>
  40b751:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b755:	48 8b 00             	mov    (%rax),%rax
  40b758:	8a 88 98 00 00 00    	mov    0x98(%rax),%cl
  40b75e:	80 e1 01             	and    $0x1,%cl
  40b761:	0f b6 d1             	movzbl %cl,%edx
  40b764:	83 fa 00             	cmp    $0x0,%edx
  40b767:	75 0b                	jne    40b774 <mbedtls_ssl_write_finished+0x184>
  40b769:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b76d:	c7 40 08 0f 00 00 00 	movl   $0xf,0x8(%rax)
  40b774:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b778:	48 8b 00             	mov    (%rax),%rax
  40b77b:	8a 88 98 00 00 00    	mov    0x98(%rax),%cl
  40b781:	80 e1 01             	and    $0x1,%cl
  40b784:	0f b6 d1             	movzbl %cl,%edx
  40b787:	83 fa 01             	cmp    $0x1,%edx
  40b78a:	75 0b                	jne    40b797 <mbedtls_ssl_write_finished+0x1a7>
  40b78c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b790:	c7 40 08 0a 00 00 00 	movl   $0xa,0x8(%rax)
  40b797:	eb 0d                	jmp    40b7a6 <mbedtls_ssl_write_finished+0x1b6>
  40b799:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b79d:	8b 48 08             	mov    0x8(%rax),%ecx
  40b7a0:	83 c1 01             	add    $0x1,%ecx
  40b7a3:	89 48 08             	mov    %ecx,0x8(%rax)
  40b7a6:	eb 00                	jmp    40b7a8 <mbedtls_ssl_write_finished+0x1b8>
  40b7a8:	eb 00                	jmp    40b7aa <mbedtls_ssl_write_finished+0x1ba>
  40b7aa:	31 f6                	xor    %esi,%esi
  40b7ac:	b8 08 00 00 00       	mov    $0x8,%eax
  40b7b1:	89 c2                	mov    %eax,%edx
  40b7b3:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40b7b7:	48 81 c1 40 01 00 00 	add    $0x140,%rcx
  40b7be:	48 89 cf             	mov    %rcx,%rdi
  40b7c1:	e8 5a 58 ff ff       	callq  401020 <memset@plt>
  40b7c6:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40b7ca:	48 8b 49 78          	mov    0x78(%rcx),%rcx
  40b7ce:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40b7d2:	48 89 4a 68          	mov    %rcx,0x68(%rdx)
  40b7d6:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40b7da:	48 8b 49 50          	mov    0x50(%rcx),%rcx
  40b7de:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40b7e2:	48 89 4a 40          	mov    %rcx,0x40(%rdx)
  40b7e6:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  40b7ea:	e8 61 bd ff ff       	callq  407550 <mbedtls_ssl_write_handshake_msg>
  40b7ef:	89 45 dc             	mov    %eax,-0x24(%rbp)
  40b7f2:	83 f8 00             	cmp    $0x0,%eax
  40b7f5:	74 0c                	je     40b803 <mbedtls_ssl_write_finished+0x213>
  40b7f7:	eb 00                	jmp    40b7f9 <mbedtls_ssl_write_finished+0x209>
  40b7f9:	eb 00                	jmp    40b7fb <mbedtls_ssl_write_finished+0x20b>
  40b7fb:	8b 45 dc             	mov    -0x24(%rbp),%eax
  40b7fe:	89 45 ec             	mov    %eax,-0x14(%rbp)
  40b801:	eb 0b                	jmp    40b80e <mbedtls_ssl_write_finished+0x21e>
  40b803:	eb 00                	jmp    40b805 <mbedtls_ssl_write_finished+0x215>
  40b805:	eb 00                	jmp    40b807 <mbedtls_ssl_write_finished+0x217>
  40b807:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  40b80e:	8b 45 ec             	mov    -0x14(%rbp),%eax
  40b811:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  40b814:	e8 3d a1 03 00       	callq  445956 <writeback_cache>
  40b819:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  40b81c:	48 83 c4 30          	add    $0x30,%rsp
  40b820:	5d                   	pop    %rbp
  40b821:	c3                   	retq   
  40b822:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  40b829:	1f 84 00 00 00 00 00 

000000000040b830 <mbedtls_ssl_parse_finished>:
  40b830:	55                   	push   %rbp
  40b831:	48 89 e5             	mov    %rsp,%rbp
  40b834:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
  40b83b:	48 89 bd 60 ff ff ff 	mov    %rdi,-0xa0(%rbp)
  40b842:	eb 00                	jmp    40b844 <mbedtls_ssl_parse_finished+0x14>
  40b844:	48 8d b5 4c ff ff ff 	lea    -0xb4(%rbp),%rsi
  40b84b:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40b852:	48 8b 40 58          	mov    0x58(%rax),%rax
  40b856:	48 8b 80 d0 00 00 00 	mov    0xd0(%rax),%rax
  40b85d:	48 8b bd 60 ff ff ff 	mov    -0xa0(%rbp),%rdi
  40b864:	48 8b 8d 60 ff ff ff 	mov    -0xa0(%rbp),%rcx
  40b86b:	48 8b 09             	mov    (%rcx),%rcx
  40b86e:	8a 91 98 00 00 00    	mov    0x98(%rcx),%dl
  40b874:	80 e2 01             	and    $0x1,%dl
  40b877:	44 0f b6 c2          	movzbl %dl,%r8d
  40b87b:	41 83 f0 01          	xor    $0x1,%r8d
  40b87f:	44 89 c2             	mov    %r8d,%edx
  40b882:	ff d0                	callq  *%rax
  40b884:	48 8b bd 60 ff ff ff 	mov    -0xa0(%rbp),%rdi
  40b88b:	be 01 00 00 00       	mov    $0x1,%esi
  40b890:	e8 9b c9 ff ff       	callq  408230 <mbedtls_ssl_read_record>
  40b895:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%rbp)
  40b89b:	83 f8 00             	cmp    $0x0,%eax
  40b89e:	74 15                	je     40b8b5 <mbedtls_ssl_parse_finished+0x85>
  40b8a0:	eb 00                	jmp    40b8a2 <mbedtls_ssl_parse_finished+0x72>
  40b8a2:	eb 00                	jmp    40b8a4 <mbedtls_ssl_parse_finished+0x74>
  40b8a4:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
  40b8aa:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)
  40b8b0:	e9 aa 03 00 00       	jmpq   40bc5f <mbedtls_ssl_parse_finished+0x42f>
  40b8b5:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40b8bc:	83 b8 d0 00 00 00 16 	cmpl   $0x16,0xd0(%rax)
  40b8c3:	0f 84 cd 00 00 00    	je     40b996 <mbedtls_ssl_parse_finished+0x166>
  40b8c9:	eb 00                	jmp    40b8cb <mbedtls_ssl_parse_finished+0x9b>
  40b8cb:	eb 00                	jmp    40b8cd <mbedtls_ssl_parse_finished+0x9d>
  40b8cd:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40b8d4:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  40b8db:	c6 85 77 ff ff ff 02 	movb   $0x2,-0x89(%rbp)
  40b8e2:	c6 85 76 ff ff ff 0a 	movb   $0xa,-0x8a(%rbp)
  40b8e9:	48 83 bd 78 ff ff ff 	cmpq   $0x0,-0x88(%rbp)
  40b8f0:	00 
  40b8f1:	74 0d                	je     40b900 <mbedtls_ssl_parse_finished+0xd0>
  40b8f3:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40b8fa:	48 83 38 00          	cmpq   $0x0,(%rax)
  40b8fe:	75 09                	jne    40b909 <mbedtls_ssl_parse_finished+0xd9>
  40b900:	c7 45 84 00 8f ff ff 	movl   $0xffff8f00,-0x7c(%rbp)
  40b907:	eb 7e                	jmp    40b987 <mbedtls_ssl_parse_finished+0x157>
  40b909:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40b910:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  40b917:	00 00 00 
  40b91a:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40b921:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  40b928:	02 00 00 00 
  40b92c:	8a 8d 77 ff ff ff    	mov    -0x89(%rbp),%cl
  40b932:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40b939:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40b940:	88 08                	mov    %cl,(%rax)
  40b942:	8a 8d 76 ff ff ff    	mov    -0x8a(%rbp),%cl
  40b948:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40b94f:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40b956:	88 48 01             	mov    %cl,0x1(%rax)
  40b959:	48 8b bd 78 ff ff ff 	mov    -0x88(%rbp),%rdi
  40b960:	be 01 00 00 00       	mov    $0x1,%esi
  40b965:	e8 66 bd ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  40b96a:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
  40b970:	83 f8 00             	cmp    $0x0,%eax
  40b973:	74 0b                	je     40b980 <mbedtls_ssl_parse_finished+0x150>
  40b975:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
  40b97b:	89 45 84             	mov    %eax,-0x7c(%rbp)
  40b97e:	eb 07                	jmp    40b987 <mbedtls_ssl_parse_finished+0x157>
  40b980:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%rbp)
  40b987:	c7 85 6c ff ff ff 00 	movl   $0xffff8900,-0x94(%rbp)
  40b98e:	89 ff ff 
  40b991:	e9 c9 02 00 00       	jmpq   40bc5f <mbedtls_ssl_parse_finished+0x42f>
  40b996:	c7 85 58 ff ff ff 0c 	movl   $0xc,-0xa8(%rbp)
  40b99d:	00 00 00 
  40b9a0:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40b9a7:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  40b9ae:	0f b6 08             	movzbl (%rax),%ecx
  40b9b1:	83 f9 14             	cmp    $0x14,%ecx
  40b9b4:	75 2e                	jne    40b9e4 <mbedtls_ssl_parse_finished+0x1b4>
  40b9b6:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40b9bd:	48 8b 80 e8 00 00 00 	mov    0xe8(%rax),%rax
  40b9c4:	48 8b 8d 60 ff ff ff 	mov    -0xa0(%rbp),%rcx
  40b9cb:	48 89 4d 88          	mov    %rcx,-0x78(%rbp)
  40b9cf:	8b 95 58 ff ff ff    	mov    -0xa8(%rbp),%edx
  40b9d5:	89 d1                	mov    %edx,%ecx
  40b9d7:	48 83 c1 04          	add    $0x4,%rcx
  40b9db:	48 39 c8             	cmp    %rcx,%rax
  40b9de:	0f 84 a3 00 00 00    	je     40ba87 <mbedtls_ssl_parse_finished+0x257>
  40b9e4:	eb 00                	jmp    40b9e6 <mbedtls_ssl_parse_finished+0x1b6>
  40b9e6:	eb 00                	jmp    40b9e8 <mbedtls_ssl_parse_finished+0x1b8>
  40b9e8:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40b9ef:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  40b9f3:	c6 45 af 02          	movb   $0x2,-0x51(%rbp)
  40b9f7:	c6 45 ae 32          	movb   $0x32,-0x52(%rbp)
  40b9fb:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
  40ba00:	74 0a                	je     40ba0c <mbedtls_ssl_parse_finished+0x1dc>
  40ba02:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  40ba06:	48 83 38 00          	cmpq   $0x0,(%rax)
  40ba0a:	75 09                	jne    40ba15 <mbedtls_ssl_parse_finished+0x1e5>
  40ba0c:	c7 45 bc 00 8f ff ff 	movl   $0xffff8f00,-0x44(%rbp)
  40ba13:	eb 63                	jmp    40ba78 <mbedtls_ssl_parse_finished+0x248>
  40ba15:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  40ba19:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  40ba20:	00 00 00 
  40ba23:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  40ba27:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  40ba2e:	02 00 00 00 
  40ba32:	8a 4d af             	mov    -0x51(%rbp),%cl
  40ba35:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  40ba39:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40ba40:	88 08                	mov    %cl,(%rax)
  40ba42:	8a 4d ae             	mov    -0x52(%rbp),%cl
  40ba45:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  40ba49:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40ba50:	88 48 01             	mov    %cl,0x1(%rax)
  40ba53:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
  40ba57:	be 01 00 00 00       	mov    $0x1,%esi
  40ba5c:	e8 6f bc ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  40ba61:	89 45 a8             	mov    %eax,-0x58(%rbp)
  40ba64:	83 f8 00             	cmp    $0x0,%eax
  40ba67:	74 08                	je     40ba71 <mbedtls_ssl_parse_finished+0x241>
  40ba69:	8b 45 a8             	mov    -0x58(%rbp),%eax
  40ba6c:	89 45 bc             	mov    %eax,-0x44(%rbp)
  40ba6f:	eb 07                	jmp    40ba78 <mbedtls_ssl_parse_finished+0x248>
  40ba71:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%rbp)
  40ba78:	c7 85 6c ff ff ff 80 	movl   $0xffff8180,-0x94(%rbp)
  40ba7f:	81 ff ff 
  40ba82:	e9 d8 01 00 00       	jmpq   40bc5f <mbedtls_ssl_parse_finished+0x42f>
  40ba87:	48 8d 85 4c ff ff ff 	lea    -0xb4(%rbp),%rax
  40ba8e:	48 8b 8d 60 ff ff ff 	mov    -0xa0(%rbp),%rcx
  40ba95:	48 8b 89 c0 00 00 00 	mov    0xc0(%rcx),%rcx
  40ba9c:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
  40baa3:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
  40baa7:	48 83 c1 04          	add    $0x4,%rcx
  40baab:	8b b5 58 ff ff ff    	mov    -0xa8(%rbp),%esi
  40bab1:	89 f2                	mov    %esi,%edx
  40bab3:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
  40bab7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40babb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  40babf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40bac3:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  40bac7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40bacb:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  40bacf:	c6 45 cf 00          	movb   $0x0,-0x31(%rbp)
  40bad3:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
  40bada:	00 
  40badb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40badf:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
  40bae3:	73 42                	jae    40bb27 <mbedtls_ssl_parse_finished+0x2f7>
  40bae5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40bae9:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40baed:	8a 14 08             	mov    (%rax,%rcx,1),%dl
  40baf0:	88 55 ce             	mov    %dl,-0x32(%rbp)
  40baf3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40baf7:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40bafb:	8a 14 08             	mov    (%rax,%rcx,1),%dl
  40bafe:	88 55 cd             	mov    %dl,-0x33(%rbp)
  40bb01:	0f b6 75 ce          	movzbl -0x32(%rbp),%esi
  40bb05:	0f b6 7d cd          	movzbl -0x33(%rbp),%edi
  40bb09:	31 fe                	xor    %edi,%esi
  40bb0b:	8a 55 cf             	mov    -0x31(%rbp),%dl
  40bb0e:	0f b6 fa             	movzbl %dl,%edi
  40bb11:	09 f7                	or     %esi,%edi
  40bb13:	40 88 fa             	mov    %dil,%dl
  40bb16:	88 55 cf             	mov    %dl,-0x31(%rbp)
  40bb19:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40bb1d:	48 83 c0 01          	add    $0x1,%rax
  40bb21:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  40bb25:	eb b4                	jmp    40badb <mbedtls_ssl_parse_finished+0x2ab>
  40bb27:	8a 45 cf             	mov    -0x31(%rbp),%al
  40bb2a:	0f b6 c8             	movzbl %al,%ecx
  40bb2d:	83 f9 00             	cmp    $0x0,%ecx
  40bb30:	0f 84 a3 00 00 00    	je     40bbd9 <mbedtls_ssl_parse_finished+0x3a9>
  40bb36:	eb 00                	jmp    40bb38 <mbedtls_ssl_parse_finished+0x308>
  40bb38:	eb 00                	jmp    40bb3a <mbedtls_ssl_parse_finished+0x30a>
  40bb3a:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40bb41:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  40bb45:	c6 45 97 02          	movb   $0x2,-0x69(%rbp)
  40bb49:	c6 45 96 32          	movb   $0x32,-0x6a(%rbp)
  40bb4d:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
  40bb52:	74 0a                	je     40bb5e <mbedtls_ssl_parse_finished+0x32e>
  40bb54:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  40bb58:	48 83 38 00          	cmpq   $0x0,(%rax)
  40bb5c:	75 09                	jne    40bb67 <mbedtls_ssl_parse_finished+0x337>
  40bb5e:	c7 45 a4 00 8f ff ff 	movl   $0xffff8f00,-0x5c(%rbp)
  40bb65:	eb 63                	jmp    40bbca <mbedtls_ssl_parse_finished+0x39a>
  40bb67:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  40bb6b:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  40bb72:	00 00 00 
  40bb75:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  40bb79:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  40bb80:	02 00 00 00 
  40bb84:	8a 4d 97             	mov    -0x69(%rbp),%cl
  40bb87:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  40bb8b:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40bb92:	88 08                	mov    %cl,(%rax)
  40bb94:	8a 4d 96             	mov    -0x6a(%rbp),%cl
  40bb97:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  40bb9b:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40bba2:	88 48 01             	mov    %cl,0x1(%rax)
  40bba5:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
  40bba9:	be 01 00 00 00       	mov    $0x1,%esi
  40bbae:	e8 1d bb ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  40bbb3:	89 45 90             	mov    %eax,-0x70(%rbp)
  40bbb6:	83 f8 00             	cmp    $0x0,%eax
  40bbb9:	74 08                	je     40bbc3 <mbedtls_ssl_parse_finished+0x393>
  40bbbb:	8b 45 90             	mov    -0x70(%rbp),%eax
  40bbbe:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  40bbc1:	eb 07                	jmp    40bbca <mbedtls_ssl_parse_finished+0x39a>
  40bbc3:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%rbp)
  40bbca:	c7 85 6c ff ff ff 80 	movl   $0xffff8180,-0x94(%rbp)
  40bbd1:	81 ff ff 
  40bbd4:	e9 86 00 00 00       	jmpq   40bc5f <mbedtls_ssl_parse_finished+0x42f>
  40bbd9:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40bbe0:	48 8b 40 58          	mov    0x58(%rax),%rax
  40bbe4:	83 b8 58 01 00 00 00 	cmpl   $0x0,0x158(%rax)
  40bbeb:	74 54                	je     40bc41 <mbedtls_ssl_parse_finished+0x411>
  40bbed:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40bbf4:	48 8b 00             	mov    (%rax),%rax
  40bbf7:	8a 88 98 00 00 00    	mov    0x98(%rax),%cl
  40bbfd:	80 e1 01             	and    $0x1,%cl
  40bc00:	0f b6 d1             	movzbl %cl,%edx
  40bc03:	83 fa 00             	cmp    $0x0,%edx
  40bc06:	75 0e                	jne    40bc16 <mbedtls_ssl_parse_finished+0x3e6>
  40bc08:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40bc0f:	c7 40 08 0a 00 00 00 	movl   $0xa,0x8(%rax)
  40bc16:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40bc1d:	48 8b 00             	mov    (%rax),%rax
  40bc20:	8a 88 98 00 00 00    	mov    0x98(%rax),%cl
  40bc26:	80 e1 01             	and    $0x1,%cl
  40bc29:	0f b6 d1             	movzbl %cl,%edx
  40bc2c:	83 fa 01             	cmp    $0x1,%edx
  40bc2f:	75 0e                	jne    40bc3f <mbedtls_ssl_parse_finished+0x40f>
  40bc31:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40bc38:	c7 40 08 0f 00 00 00 	movl   $0xf,0x8(%rax)
  40bc3f:	eb 10                	jmp    40bc51 <mbedtls_ssl_parse_finished+0x421>
  40bc41:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40bc48:	8b 48 08             	mov    0x8(%rax),%ecx
  40bc4b:	83 c1 01             	add    $0x1,%ecx
  40bc4e:	89 48 08             	mov    %ecx,0x8(%rax)
  40bc51:	eb 00                	jmp    40bc53 <mbedtls_ssl_parse_finished+0x423>
  40bc53:	eb 00                	jmp    40bc55 <mbedtls_ssl_parse_finished+0x425>
  40bc55:	c7 85 6c ff ff ff 00 	movl   $0x0,-0x94(%rbp)
  40bc5c:	00 00 00 
  40bc5f:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
  40bc65:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
  40bc6b:	e8 e6 9c 03 00       	callq  445956 <writeback_cache>
  40bc70:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
  40bc76:	48 81 c4 c0 00 00 00 	add    $0xc0,%rsp
  40bc7d:	5d                   	pop    %rbp
  40bc7e:	c3                   	retq   
  40bc7f:	90                   	nop

000000000040bc80 <ssl_reset_in_out_pointers>:
  40bc80:	55                   	push   %rbp
  40bc81:	48 89 e5             	mov    %rsp,%rbp
  40bc84:	48 83 ec 30          	sub    $0x30,%rsp
  40bc88:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  40bc8c:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  40bc90:	48 8b bf f8 00 00 00 	mov    0xf8(%rdi),%rdi
  40bc97:	48 83 c7 08          	add    $0x8,%rdi
  40bc9b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40bc9f:	48 89 b8 08 01 00 00 	mov    %rdi,0x108(%rax)
  40bca6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40bcaa:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax
  40bcb1:	48 83 c0 08          	add    $0x8,%rax
  40bcb5:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  40bcb9:	48 89 87 a8 00 00 00 	mov    %rax,0xa8(%rdi)
  40bcc0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40bcc4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40bcc8:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
  40bccf:	00 
  40bcd0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40bcd4:	48 8b 80 08 01 00 00 	mov    0x108(%rax),%rax
  40bcdb:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
  40bcdf:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  40bce3:	48 89 87 00 01 00 00 	mov    %rax,0x100(%rdi)
  40bcea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40bcee:	48 8b 80 08 01 00 00 	mov    0x108(%rax),%rax
  40bcf5:	48 83 c0 03          	add    $0x3,%rax
  40bcf9:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  40bcfd:	48 89 87 10 01 00 00 	mov    %rax,0x110(%rdi)
  40bd04:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40bd08:	48 8b 80 08 01 00 00 	mov    0x108(%rax),%rax
  40bd0f:	48 83 c0 05          	add    $0x5,%rax
  40bd13:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  40bd17:	48 89 87 18 01 00 00 	mov    %rax,0x118(%rdi)
  40bd1e:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  40bd23:	74 39                	je     40bd5e <ssl_reset_in_out_pointers+0xde>
  40bd25:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40bd29:	83 78 10 02          	cmpl   $0x2,0x10(%rax)
  40bd2d:	7c 2f                	jl     40bd5e <ssl_reset_in_out_pointers+0xde>
  40bd2f:	31 c0                	xor    %eax,%eax
  40bd31:	89 c1                	mov    %eax,%ecx
  40bd33:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40bd37:	48 8b 92 18 01 00 00 	mov    0x118(%rdx),%rdx
  40bd3e:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  40bd42:	48 03 56 18          	add    0x18(%rsi),%rdx
  40bd46:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  40bd4a:	48 2b 4e 20          	sub    0x20(%rsi),%rcx
  40bd4e:	48 01 ca             	add    %rcx,%rdx
  40bd51:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  40bd55:	48 89 91 20 01 00 00 	mov    %rdx,0x120(%rcx)
  40bd5c:	eb 16                	jmp    40bd74 <ssl_reset_in_out_pointers+0xf4>
  40bd5e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40bd62:	48 8b 80 18 01 00 00 	mov    0x118(%rax),%rax
  40bd69:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  40bd6d:	48 89 81 20 01 00 00 	mov    %rax,0x120(%rcx)
  40bd74:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40bd78:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40bd7c:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
  40bd83:	00 
  40bd84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40bd88:	48 8b 80 a8 00 00 00 	mov    0xa8(%rax),%rax
  40bd8f:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
  40bd93:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  40bd97:	48 89 81 a0 00 00 00 	mov    %rax,0xa0(%rcx)
  40bd9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40bda2:	48 8b 80 a8 00 00 00 	mov    0xa8(%rax),%rax
  40bda9:	48 83 c0 03          	add    $0x3,%rax
  40bdad:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  40bdb1:	48 89 81 b0 00 00 00 	mov    %rax,0xb0(%rcx)
  40bdb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40bdbc:	48 8b 80 a8 00 00 00 	mov    0xa8(%rax),%rax
  40bdc3:	48 83 c0 05          	add    $0x5,%rax
  40bdc7:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  40bdcb:	48 89 81 b8 00 00 00 	mov    %rax,0xb8(%rcx)
  40bdd2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  40bdd7:	74 39                	je     40be12 <ssl_reset_in_out_pointers+0x192>
  40bdd9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40bddd:	83 78 10 02          	cmpl   $0x2,0x10(%rax)
  40bde1:	7c 2f                	jl     40be12 <ssl_reset_in_out_pointers+0x192>
  40bde3:	31 c0                	xor    %eax,%eax
  40bde5:	89 c1                	mov    %eax,%ecx
  40bde7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40bdeb:	48 8b 92 b8 00 00 00 	mov    0xb8(%rdx),%rdx
  40bdf2:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  40bdf6:	48 03 56 18          	add    0x18(%rsi),%rdx
  40bdfa:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  40bdfe:	48 2b 4e 20          	sub    0x20(%rsi),%rcx
  40be02:	48 01 ca             	add    %rcx,%rdx
  40be05:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  40be09:	48 89 91 c0 00 00 00 	mov    %rdx,0xc0(%rcx)
  40be10:	eb 16                	jmp    40be28 <ssl_reset_in_out_pointers+0x1a8>
  40be12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40be16:	48 8b 80 b8 00 00 00 	mov    0xb8(%rax),%rax
  40be1d:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  40be21:	48 89 81 c0 00 00 00 	mov    %rax,0xc0(%rcx)
  40be28:	e8 29 9b 03 00       	callq  445956 <writeback_cache>
  40be2d:	48 83 c4 30          	add    $0x30,%rsp
  40be31:	5d                   	pop    %rbp
  40be32:	c3                   	retq   
  40be33:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  40be3a:	84 00 00 00 00 00 

000000000040be40 <ssl_handshake_init>:
  40be40:	55                   	push   %rbp
  40be41:	48 89 e5             	mov    %rsp,%rbp
  40be44:	48 81 ec 90 01 00 00 	sub    $0x190,%rsp
  40be4b:	48 89 bd e8 fe ff ff 	mov    %rdi,-0x118(%rbp)
  40be52:	48 8b bd e8 fe ff ff 	mov    -0x118(%rbp),%rdi
  40be59:	48 83 7f 78 00       	cmpq   $0x0,0x78(%rdi)
  40be5e:	0f 84 53 01 00 00    	je     40bfb7 <ssl_handshake_init+0x177>
  40be64:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
  40be6b:	48 8b 40 78          	mov    0x78(%rax),%rax
  40be6f:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
  40be76:	48 83 bd f8 fe ff ff 	cmpq   $0x0,-0x108(%rbp)
  40be7d:	00 
  40be7e:	75 05                	jne    40be85 <ssl_handshake_init+0x45>
  40be80:	e9 32 01 00 00       	jmpq   40bfb7 <ssl_handshake_init+0x177>
  40be85:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  40be8c:	48 05 80 00 00 00    	add    $0x80,%rax
  40be92:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  40be96:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  40be9b:	75 02                	jne    40be9f <ssl_handshake_init+0x5f>
  40be9d:	eb 4f                	jmp    40beee <ssl_handshake_init+0xae>
  40be9f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40bea3:	48 83 78 50 00       	cmpq   $0x0,0x50(%rax)
  40bea8:	74 19                	je     40bec3 <ssl_handshake_init+0x83>
  40beaa:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40beae:	48 8b 00             	mov    (%rax),%rax
  40beb1:	48 8b 40 28          	mov    0x28(%rax),%rax
  40beb5:	48 8b 40 30          	mov    0x30(%rax),%rax
  40beb9:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  40bebd:	48 8b 79 50          	mov    0x50(%rcx),%rdi
  40bec1:	ff d0                	callq  *%rax
  40bec3:	31 f6                	xor    %esi,%esi
  40bec5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40bec9:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  40becd:	48 c7 45 d8 58 00 00 	movq   $0x58,-0x28(%rbp)
  40bed4:	00 
  40bed5:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  40bedc:	00 
  40bedd:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  40bee1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40bee5:	ff d0                	callq  *%rax
  40bee7:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
  40beee:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  40bef5:	48 05 d8 00 00 00    	add    $0xd8,%rax
  40befb:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40beff:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40bf04:	75 02                	jne    40bf08 <ssl_handshake_init+0xc8>
  40bf06:	eb 4f                	jmp    40bf57 <ssl_handshake_init+0x117>
  40bf08:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40bf0c:	48 83 78 50 00       	cmpq   $0x0,0x50(%rax)
  40bf11:	74 19                	je     40bf2c <ssl_handshake_init+0xec>
  40bf13:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40bf17:	48 8b 00             	mov    (%rax),%rax
  40bf1a:	48 8b 40 28          	mov    0x28(%rax),%rax
  40bf1e:	48 8b 40 30          	mov    0x30(%rax),%rax
  40bf22:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  40bf26:	48 8b 79 50          	mov    0x50(%rcx),%rdi
  40bf2a:	ff d0                	callq  *%rax
  40bf2c:	31 f6                	xor    %esi,%esi
  40bf2e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40bf32:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40bf36:	48 c7 45 f0 58 00 00 	movq   $0x58,-0x10(%rbp)
  40bf3d:	00 
  40bf3e:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  40bf45:	00 
  40bf46:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  40bf4a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  40bf4e:	ff d0                	callq  *%rax
  40bf50:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
  40bf57:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  40bf5e:	48 83 c0 50          	add    $0x50,%rax
  40bf62:	48 89 c7             	mov    %rax,%rdi
  40bf65:	e8 f6 ef 01 00       	callq  42af60 <mbedtls_md_free>
  40bf6a:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  40bf71:	48 83 c0 68          	add    $0x68,%rax
  40bf75:	48 89 c7             	mov    %rax,%rdi
  40bf78:	e8 e3 ef 01 00       	callq  42af60 <mbedtls_md_free>
  40bf7d:	31 f6                	xor    %esi,%esi
  40bf7f:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  40bf86:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
  40bf8d:	48 c7 85 00 ff ff ff 	movq   $0x130,-0x100(%rbp)
  40bf94:	30 01 00 00 
  40bf98:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  40bf9f:	00 
  40bfa0:	48 8b bd 08 ff ff ff 	mov    -0xf8(%rbp),%rdi
  40bfa7:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
  40bfae:	ff d0                	callq  *%rax
  40bfb0:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
  40bfb7:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
  40bfbe:	48 83 78 50 00       	cmpq   $0x0,0x50(%rax)
  40bfc3:	0f 84 89 00 00 00    	je     40c052 <ssl_handshake_init+0x212>
  40bfc9:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
  40bfd0:	48 8b 40 50          	mov    0x50(%rax),%rax
  40bfd4:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
  40bfdb:	48 83 bd 10 ff ff ff 	cmpq   $0x0,-0xf0(%rbp)
  40bfe2:	00 
  40bfe3:	75 02                	jne    40bfe7 <ssl_handshake_init+0x1a7>
  40bfe5:	eb 6b                	jmp    40c052 <ssl_handshake_init+0x212>
  40bfe7:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
  40bfee:	48 83 78 68 00       	cmpq   $0x0,0x68(%rax)
  40bff3:	74 23                	je     40c018 <ssl_handshake_init+0x1d8>
  40bff5:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
  40bffc:	48 8b 78 68          	mov    0x68(%rax),%rdi
  40c000:	e8 6b 9f 00 00       	callq  415f70 <mbedtls_x509_crt_free>
  40c005:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
  40c00c:	48 8b 40 68          	mov    0x68(%rax),%rax
  40c010:	48 89 c7             	mov    %rax,%rdi
  40c013:	e8 c8 50 ff ff       	callq  4010e0 <free@plt>
  40c018:	31 f6                	xor    %esi,%esi
  40c01a:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
  40c021:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
  40c028:	48 c7 85 18 ff ff ff 	movq   $0x78,-0xe8(%rbp)
  40c02f:	78 00 00 00 
  40c033:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  40c03a:	00 
  40c03b:	48 8b bd 20 ff ff ff 	mov    -0xe0(%rbp),%rdi
  40c042:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
  40c049:	ff d0                	callq  *%rax
  40c04b:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
  40c052:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
  40c059:	48 83 78 58 00       	cmpq   $0x0,0x58(%rax)
  40c05e:	0f 84 19 01 00 00    	je     40c17d <ssl_handshake_init+0x33d>
  40c064:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
  40c06b:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
  40c072:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
  40c079:	48 8b 40 58          	mov    0x58(%rax),%rax
  40c07d:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
  40c084:	48 83 bd 28 ff ff ff 	cmpq   $0x0,-0xd8(%rbp)
  40c08b:	00 
  40c08c:	75 05                	jne    40c093 <ssl_handshake_init+0x253>
  40c08e:	e9 ea 00 00 00       	jmpq   40c17d <ssl_handshake_init+0x33d>
  40c093:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  40c09a:	48 83 c0 08          	add    $0x8,%rax
  40c09e:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
  40c0a5:	48 83 bd 38 ff ff ff 	cmpq   $0x0,-0xc8(%rbp)
  40c0ac:	00 
  40c0ad:	75 02                	jne    40c0b1 <ssl_handshake_init+0x271>
  40c0af:	eb 3a                	jmp    40c0eb <ssl_handshake_init+0x2ab>
  40c0b1:	31 f6                	xor    %esi,%esi
  40c0b3:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  40c0ba:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  40c0c1:	48 c7 85 40 ff ff ff 	movq   $0x58,-0xc0(%rbp)
  40c0c8:	58 00 00 00 
  40c0cc:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  40c0d3:	00 
  40c0d4:	48 8b bd 48 ff ff ff 	mov    -0xb8(%rbp),%rdi
  40c0db:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
  40c0e2:	ff d0                	callq  *%rax
  40c0e4:	48 89 85 c0 fe ff ff 	mov    %rax,-0x140(%rbp)
  40c0eb:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  40c0f2:	48 83 c0 60          	add    $0x60,%rax
  40c0f6:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
  40c0fd:	48 83 bd 68 ff ff ff 	cmpq   $0x0,-0x98(%rbp)
  40c104:	00 
  40c105:	75 02                	jne    40c109 <ssl_handshake_init+0x2c9>
  40c107:	eb 3a                	jmp    40c143 <ssl_handshake_init+0x303>
  40c109:	31 f6                	xor    %esi,%esi
  40c10b:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  40c112:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  40c119:	48 c7 85 70 ff ff ff 	movq   $0x5c,-0x90(%rbp)
  40c120:	5c 00 00 00 
  40c124:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  40c12b:	00 
  40c12c:	48 8b bd 78 ff ff ff 	mov    -0x88(%rbp),%rdi
  40c133:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
  40c13a:	ff d0                	callq  *%rax
  40c13c:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
  40c143:	31 f6                	xor    %esi,%esi
  40c145:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  40c14c:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
  40c153:	48 c7 85 50 ff ff ff 	movq   $0x168,-0xb0(%rbp)
  40c15a:	68 01 00 00 
  40c15e:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  40c165:	00 
  40c166:	48 8b bd 58 ff ff ff 	mov    -0xa8(%rbp),%rdi
  40c16d:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
  40c174:	ff d0                	callq  *%rax
  40c176:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
  40c17d:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
  40c184:	48 83 78 78 00       	cmpq   $0x0,0x78(%rax)
  40c189:	75 1e                	jne    40c1a9 <ssl_handshake_init+0x369>
  40c18b:	b8 01 00 00 00       	mov    $0x1,%eax
  40c190:	89 c7                	mov    %eax,%edi
  40c192:	b8 30 01 00 00       	mov    $0x130,%eax
  40c197:	89 c6                	mov    %eax,%esi
  40c199:	e8 4c a6 03 00       	callq  4467ea <aes_calloc>
  40c19e:	48 8b b5 e8 fe ff ff 	mov    -0x118(%rbp),%rsi
  40c1a5:	48 89 46 78          	mov    %rax,0x78(%rsi)
  40c1a9:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
  40c1b0:	48 83 78 50 00       	cmpq   $0x0,0x50(%rax)
  40c1b5:	75 1e                	jne    40c1d5 <ssl_handshake_init+0x395>
  40c1b7:	b8 01 00 00 00       	mov    $0x1,%eax
  40c1bc:	89 c7                	mov    %eax,%edi
  40c1be:	b8 78 00 00 00       	mov    $0x78,%eax
  40c1c3:	89 c6                	mov    %eax,%esi
  40c1c5:	e8 20 a6 03 00       	callq  4467ea <aes_calloc>
  40c1ca:	48 8b b5 e8 fe ff ff 	mov    -0x118(%rbp),%rsi
  40c1d1:	48 89 46 50          	mov    %rax,0x50(%rsi)
  40c1d5:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
  40c1dc:	48 83 78 58 00       	cmpq   $0x0,0x58(%rax)
  40c1e1:	75 1e                	jne    40c201 <ssl_handshake_init+0x3c1>
  40c1e3:	b8 01 00 00 00       	mov    $0x1,%eax
  40c1e8:	89 c7                	mov    %eax,%edi
  40c1ea:	b8 68 01 00 00       	mov    $0x168,%eax
  40c1ef:	89 c6                	mov    %eax,%esi
  40c1f1:	e8 f4 a5 03 00       	callq  4467ea <aes_calloc>
  40c1f6:	48 8b b5 e8 fe ff ff 	mov    -0x118(%rbp),%rsi
  40c1fd:	48 89 46 58          	mov    %rax,0x58(%rsi)
  40c201:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
  40c208:	48 83 78 58 00       	cmpq   $0x0,0x58(%rax)
  40c20d:	74 1c                	je     40c22b <ssl_handshake_init+0x3eb>
  40c20f:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
  40c216:	48 83 78 78 00       	cmpq   $0x0,0x78(%rax)
  40c21b:	74 0e                	je     40c22b <ssl_handshake_init+0x3eb>
  40c21d:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
  40c224:	48 83 78 50 00       	cmpq   $0x0,0x50(%rax)
  40c229:	75 79                	jne    40c2a4 <ssl_handshake_init+0x464>
  40c22b:	eb 00                	jmp    40c22d <ssl_handshake_init+0x3ed>
  40c22d:	eb 00                	jmp    40c22f <ssl_handshake_init+0x3ef>
  40c22f:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
  40c236:	48 8b 40 58          	mov    0x58(%rax),%rax
  40c23a:	48 89 c7             	mov    %rax,%rdi
  40c23d:	e8 9e 4e ff ff       	callq  4010e0 <free@plt>
  40c242:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
  40c249:	48 8b 40 78          	mov    0x78(%rax),%rax
  40c24d:	48 89 c7             	mov    %rax,%rdi
  40c250:	e8 8b 4e ff ff       	callq  4010e0 <free@plt>
  40c255:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
  40c25c:	48 8b 40 50          	mov    0x50(%rax),%rax
  40c260:	48 89 c7             	mov    %rax,%rdi
  40c263:	e8 78 4e ff ff       	callq  4010e0 <free@plt>
  40c268:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
  40c26f:	48 c7 40 58 00 00 00 	movq   $0x0,0x58(%rax)
  40c276:	00 
  40c277:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
  40c27e:	48 c7 40 78 00 00 00 	movq   $0x0,0x78(%rax)
  40c285:	00 
  40c286:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
  40c28d:	48 c7 40 50 00 00 00 	movq   $0x0,0x50(%rax)
  40c294:	00 
  40c295:	c7 85 f4 fe ff ff 00 	movl   $0xffff8100,-0x10c(%rbp)
  40c29c:	81 ff ff 
  40c29f:	e9 76 02 00 00       	jmpq   40c51a <ssl_handshake_init+0x6da>
  40c2a4:	31 c0                	xor    %eax,%eax
  40c2a6:	b9 5c 00 00 00       	mov    $0x5c,%ecx
  40c2ab:	89 ca                	mov    %ecx,%edx
  40c2ad:	b9 58 00 00 00       	mov    $0x58,%ecx
  40c2b2:	89 ce                	mov    %ecx,%esi
  40c2b4:	b9 68 01 00 00       	mov    $0x168,%ecx
  40c2b9:	89 cf                	mov    %ecx,%edi
  40c2bb:	b9 18 00 00 00       	mov    $0x18,%ecx
  40c2c0:	41 89 c8             	mov    %ecx,%r8d
  40c2c3:	b9 30 01 00 00       	mov    $0x130,%ecx
  40c2c8:	41 89 c9             	mov    %ecx,%r9d
  40c2cb:	b9 78 00 00 00       	mov    $0x78,%ecx
  40c2d0:	41 89 ca             	mov    %ecx,%r10d
  40c2d3:	4c 8b 9d e8 fe ff ff 	mov    -0x118(%rbp),%r11
  40c2da:	4d 8b 5b 50          	mov    0x50(%r11),%r11
  40c2de:	4c 89 9d 60 ff ff ff 	mov    %r11,-0xa0(%rbp)
  40c2e5:	4c 8b 9d 60 ff ff ff 	mov    -0xa0(%rbp),%r11
  40c2ec:	48 89 bd a8 fe ff ff 	mov    %rdi,-0x158(%rbp)
  40c2f3:	4c 89 df             	mov    %r11,%rdi
  40c2f6:	48 89 b5 a0 fe ff ff 	mov    %rsi,-0x160(%rbp)
  40c2fd:	89 c6                	mov    %eax,%esi
  40c2ff:	48 89 95 98 fe ff ff 	mov    %rdx,-0x168(%rbp)
  40c306:	4c 89 d2             	mov    %r10,%rdx
  40c309:	89 85 94 fe ff ff    	mov    %eax,-0x16c(%rbp)
  40c30f:	4c 89 85 88 fe ff ff 	mov    %r8,-0x178(%rbp)
  40c316:	4c 89 8d 80 fe ff ff 	mov    %r9,-0x180(%rbp)
  40c31d:	e8 fe 4c ff ff       	callq  401020 <memset@plt>
  40c322:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
  40c329:	48 8b 52 78          	mov    0x78(%rdx),%rdx
  40c32d:	48 89 55 80          	mov    %rdx,-0x80(%rbp)
  40c331:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
  40c335:	48 89 d7             	mov    %rdx,%rdi
  40c338:	8b b5 94 fe ff ff    	mov    -0x16c(%rbp),%esi
  40c33e:	48 8b 95 80 fe ff ff 	mov    -0x180(%rbp),%rdx
  40c345:	e8 d6 4c ff ff       	callq  401020 <memset@plt>
  40c34a:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
  40c34e:	48 81 c2 80 00 00 00 	add    $0x80,%rdx
  40c355:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
  40c359:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
  40c35d:	48 89 d7             	mov    %rdx,%rdi
  40c360:	8b b5 94 fe ff ff    	mov    -0x16c(%rbp),%esi
  40c366:	48 8b 95 a0 fe ff ff 	mov    -0x160(%rbp),%rdx
  40c36d:	e8 ae 4c ff ff       	callq  401020 <memset@plt>
  40c372:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
  40c376:	48 81 c2 d8 00 00 00 	add    $0xd8,%rdx
  40c37d:	48 89 55 a0          	mov    %rdx,-0x60(%rbp)
  40c381:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
  40c385:	48 89 d7             	mov    %rdx,%rdi
  40c388:	8b b5 94 fe ff ff    	mov    -0x16c(%rbp),%esi
  40c38e:	48 8b 95 a0 fe ff ff 	mov    -0x160(%rbp),%rdx
  40c395:	e8 86 4c ff ff       	callq  401020 <memset@plt>
  40c39a:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
  40c39e:	48 83 c2 50          	add    $0x50,%rdx
  40c3a2:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  40c3a6:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  40c3aa:	48 89 d7             	mov    %rdx,%rdi
  40c3ad:	8b b5 94 fe ff ff    	mov    -0x16c(%rbp),%esi
  40c3b3:	48 8b 95 88 fe ff ff 	mov    -0x178(%rbp),%rdx
  40c3ba:	e8 61 4c ff ff       	callq  401020 <memset@plt>
  40c3bf:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
  40c3c3:	48 83 c2 68          	add    $0x68,%rdx
  40c3c7:	48 89 55 90          	mov    %rdx,-0x70(%rbp)
  40c3cb:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
  40c3cf:	48 89 d7             	mov    %rdx,%rdi
  40c3d2:	8b b5 94 fe ff ff    	mov    -0x16c(%rbp),%esi
  40c3d8:	48 8b 95 88 fe ff ff 	mov    -0x178(%rbp),%rdx
  40c3df:	e8 3c 4c ff ff       	callq  401020 <memset@plt>
  40c3e4:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
  40c3eb:	48 8b 52 58          	mov    0x58(%rdx),%rdx
  40c3ef:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
  40c3f3:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
  40c3f7:	48 89 d7             	mov    %rdx,%rdi
  40c3fa:	8b b5 94 fe ff ff    	mov    -0x16c(%rbp),%esi
  40c400:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
  40c407:	e8 14 4c ff ff       	callq  401020 <memset@plt>
  40c40c:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
  40c410:	48 83 c2 08          	add    $0x8,%rdx
  40c414:	48 89 55 b0          	mov    %rdx,-0x50(%rbp)
  40c418:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
  40c41c:	48 89 d7             	mov    %rdx,%rdi
  40c41f:	8b b5 94 fe ff ff    	mov    -0x16c(%rbp),%esi
  40c425:	48 8b 95 a0 fe ff ff 	mov    -0x160(%rbp),%rdx
  40c42c:	e8 ef 4b ff ff       	callq  401020 <memset@plt>
  40c431:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
  40c435:	48 83 c2 60          	add    $0x60,%rdx
  40c439:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  40c43d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  40c441:	48 89 d7             	mov    %rdx,%rdi
  40c444:	8b b5 94 fe ff ff    	mov    -0x16c(%rbp),%esi
  40c44a:	48 8b 95 98 fe ff ff 	mov    -0x168(%rbp),%rdx
  40c451:	e8 ca 4b ff ff       	callq  401020 <memset@plt>
  40c456:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
  40c45a:	48 83 c2 08          	add    $0x8,%rdx
  40c45e:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
  40c462:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  40c466:	c7 02 00 00 00 00    	movl   $0x0,(%rdx)
  40c46c:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  40c470:	c7 42 04 00 00 00 00 	movl   $0x0,0x4(%rdx)
  40c477:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  40c47b:	c7 42 08 01 23 45 67 	movl   $0x67452301,0x8(%rdx)
  40c482:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  40c486:	c7 42 0c 89 ab cd ef 	movl   $0xefcdab89,0xc(%rdx)
  40c48d:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  40c491:	c7 42 10 fe dc ba 98 	movl   $0x98badcfe,0x10(%rdx)
  40c498:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  40c49c:	c7 42 14 76 54 32 10 	movl   $0x10325476,0x14(%rdx)
  40c4a3:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
  40c4a7:	48 83 c2 60          	add    $0x60,%rdx
  40c4ab:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
  40c4af:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  40c4b3:	c7 02 00 00 00 00    	movl   $0x0,(%rdx)
  40c4b9:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  40c4bd:	c7 42 04 00 00 00 00 	movl   $0x0,0x4(%rdx)
  40c4c4:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  40c4c8:	c7 42 08 01 23 45 67 	movl   $0x67452301,0x8(%rdx)
  40c4cf:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  40c4d3:	c7 42 0c 89 ab cd ef 	movl   $0xefcdab89,0xc(%rdx)
  40c4da:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  40c4de:	c7 42 10 fe dc ba 98 	movl   $0x98badcfe,0x10(%rdx)
  40c4e5:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  40c4e9:	c7 42 14 76 54 32 10 	movl   $0x10325476,0x14(%rdx)
  40c4f0:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  40c4f4:	c7 42 18 f0 e1 d2 c3 	movl   $0xc3d2e1f0,0x18(%rdx)
  40c4fb:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
  40c4ff:	48 bf 40 c5 40 00 00 	movabs $0x40c540,%rdi
  40c506:	00 00 00 
  40c509:	48 89 ba c0 00 00 00 	mov    %rdi,0xc0(%rdx)
  40c510:	c7 85 f4 fe ff ff 00 	movl   $0x0,-0x10c(%rbp)
  40c517:	00 00 00 
  40c51a:	8b 85 f4 fe ff ff    	mov    -0x10c(%rbp),%eax
  40c520:	89 85 7c fe ff ff    	mov    %eax,-0x184(%rbp)
  40c526:	e8 2b 94 03 00       	callq  445956 <writeback_cache>
  40c52b:	8b 85 7c fe ff ff    	mov    -0x184(%rbp),%eax
  40c531:	48 81 c4 90 01 00 00 	add    $0x190,%rsp
  40c538:	5d                   	pop    %rbp
  40c539:	c3                   	retq   
  40c53a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000040c540 <ssl_update_checksum_start>:
  40c540:	55                   	push   %rbp
  40c541:	48 89 e5             	mov    %rsp,%rbp
  40c544:	48 83 ec 30          	sub    $0x30,%rsp
  40c548:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40c54c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  40c550:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  40c554:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40c558:	48 8b 52 58          	mov    0x58(%rdx),%rdx
  40c55c:	48 83 c2 08          	add    $0x8,%rdx
  40c560:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  40c564:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  40c568:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
  40c56c:	48 89 d7             	mov    %rdx,%rdi
  40c56f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40c573:	e8 78 01 02 00       	callq  42c6f0 <mbedtls_md5_update_ret>
  40c578:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40c57c:	48 8b 52 58          	mov    0x58(%rdx),%rdx
  40c580:	48 83 c2 60          	add    $0x60,%rdx
  40c584:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  40c588:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  40c58c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  40c590:	48 89 d7             	mov    %rdx,%rdi
  40c593:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40c597:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  40c59a:	e8 f1 35 03 00       	callq  43fb90 <mbedtls_sha1_update_ret>
  40c59f:	89 45 d0             	mov    %eax,-0x30(%rbp)
  40c5a2:	e8 af 93 03 00       	callq  445956 <writeback_cache>
  40c5a7:	48 83 c4 30          	add    $0x30,%rsp
  40c5ab:	5d                   	pop    %rbp
  40c5ac:	c3                   	retq   
  40c5ad:	0f 1f 00             	nopl   (%rax)

000000000040c5b0 <ssl_set_timer>:
  40c5b0:	55                   	push   %rbp
  40c5b1:	48 89 e5             	mov    %rsp,%rbp
  40c5b4:	48 83 ec 10          	sub    $0x10,%rsp
  40c5b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40c5bc:	89 75 f4             	mov    %esi,-0xc(%rbp)
  40c5bf:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  40c5c3:	48 83 bf 88 00 00 00 	cmpq   $0x0,0x88(%rdi)
  40c5ca:	00 
  40c5cb:	75 02                	jne    40c5cf <ssl_set_timer+0x1f>
  40c5cd:	eb 2d                	jmp    40c5fc <ssl_set_timer+0x4c>
  40c5cf:	eb 00                	jmp    40c5d1 <ssl_set_timer+0x21>
  40c5d1:	eb 00                	jmp    40c5d3 <ssl_set_timer+0x23>
  40c5d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40c5d7:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
  40c5de:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  40c5e2:	48 8b b9 80 00 00 00 	mov    0x80(%rcx),%rdi
  40c5e9:	8b 55 f4             	mov    -0xc(%rbp),%edx
  40c5ec:	c1 ea 02             	shr    $0x2,%edx
  40c5ef:	8b 75 f4             	mov    -0xc(%rbp),%esi
  40c5f2:	89 75 f0             	mov    %esi,-0x10(%rbp)
  40c5f5:	89 d6                	mov    %edx,%esi
  40c5f7:	8b 55 f0             	mov    -0x10(%rbp),%edx
  40c5fa:	ff d0                	callq  *%rax
  40c5fc:	e8 55 93 03 00       	callq  445956 <writeback_cache>
  40c601:	48 83 c4 10          	add    $0x10,%rsp
  40c605:	5d                   	pop    %rbp
  40c606:	c3                   	retq   
  40c607:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40c60e:	00 00 

000000000040c610 <ssl_session_copy>:
  40c610:	55                   	push   %rbp
  40c611:	48 89 e5             	mov    %rsp,%rbp
  40c614:	48 83 ec 30          	sub    $0x30,%rsp
  40c618:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  40c61c:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  40c620:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  40c624:	e8 57 ef ff ff       	callq  40b580 <mbedtls_ssl_session_free>
  40c629:	b8 78 00 00 00       	mov    $0x78,%eax
  40c62e:	89 c2                	mov    %eax,%edx
  40c630:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  40c634:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  40c638:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  40c63c:	48 89 f7             	mov    %rsi,%rdi
  40c63f:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  40c643:	e8 28 4b ff ff       	callq  401170 <memcpy@plt>
  40c648:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40c64c:	48 83 7a 68 00       	cmpq   $0x0,0x68(%rdx)
  40c651:	0f 84 8f 00 00 00    	je     40c6e6 <ssl_session_copy+0xd6>
  40c657:	b8 01 00 00 00       	mov    $0x1,%eax
  40c65c:	89 c7                	mov    %eax,%edi
  40c65e:	b8 28 02 00 00       	mov    $0x228,%eax
  40c663:	89 c6                	mov    %eax,%esi
  40c665:	e8 80 a1 03 00       	callq  4467ea <aes_calloc>
  40c66a:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  40c66e:	48 89 46 68          	mov    %rax,0x68(%rsi)
  40c672:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40c676:	48 83 78 68 00       	cmpq   $0x0,0x68(%rax)
  40c67b:	75 09                	jne    40c686 <ssl_session_copy+0x76>
  40c67d:	c7 45 fc 00 81 ff ff 	movl   $0xffff8100,-0x4(%rbp)
  40c684:	eb 67                	jmp    40c6ed <ssl_session_copy+0xdd>
  40c686:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40c68a:	48 8b 78 68          	mov    0x68(%rax),%rdi
  40c68e:	e8 ad 98 00 00       	callq  415f40 <mbedtls_x509_crt_init>
  40c693:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40c697:	48 8b 78 68          	mov    0x68(%rax),%rdi
  40c69b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40c69f:	48 8b 40 68          	mov    0x68(%rax),%rax
  40c6a3:	48 8b 70 10          	mov    0x10(%rax),%rsi
  40c6a7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40c6ab:	48 8b 40 68          	mov    0x68(%rax),%rax
  40c6af:	48 8b 50 08          	mov    0x8(%rax),%rdx
  40c6b3:	e8 b8 6b 00 00       	callq  413270 <mbedtls_x509_crt_parse_der>
  40c6b8:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  40c6bb:	83 f8 00             	cmp    $0x0,%eax
  40c6be:	74 24                	je     40c6e4 <ssl_session_copy+0xd4>
  40c6c0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40c6c4:	48 8b 40 68          	mov    0x68(%rax),%rax
  40c6c8:	48 89 c7             	mov    %rax,%rdi
  40c6cb:	e8 10 4a ff ff       	callq  4010e0 <free@plt>
  40c6d0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40c6d4:	48 c7 40 68 00 00 00 	movq   $0x0,0x68(%rax)
  40c6db:	00 
  40c6dc:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  40c6df:	89 4d fc             	mov    %ecx,-0x4(%rbp)
  40c6e2:	eb 09                	jmp    40c6ed <ssl_session_copy+0xdd>
  40c6e4:	eb 00                	jmp    40c6e6 <ssl_session_copy+0xd6>
  40c6e6:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  40c6ed:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40c6f0:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  40c6f3:	e8 5e 92 03 00       	callq  445956 <writeback_cache>
  40c6f8:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  40c6fb:	48 83 c4 30          	add    $0x30,%rsp
  40c6ff:	5d                   	pop    %rbp
  40c700:	c3                   	retq   
  40c701:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  40c708:	0f 1f 84 00 00 00 00 
  40c70f:	00 

000000000040c710 <mbedtls_cipher_get_block_size>:
  40c710:	55                   	push   %rbp
  40c711:	48 89 e5             	mov    %rsp,%rbp
  40c714:	48 83 ec 20          	sub    $0x20,%rsp
  40c718:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  40c71c:	eb 00                	jmp    40c71e <mbedtls_cipher_get_block_size+0xe>
  40c71e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40c722:	48 83 38 00          	cmpq   $0x0,(%rax)
  40c726:	75 09                	jne    40c731 <mbedtls_cipher_get_block_size+0x21>
  40c728:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  40c72f:	eb 0d                	jmp    40c73e <mbedtls_cipher_get_block_size+0x2e>
  40c731:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40c735:	48 8b 00             	mov    (%rax),%rax
  40c738:	8b 48 20             	mov    0x20(%rax),%ecx
  40c73b:	89 4d fc             	mov    %ecx,-0x4(%rbp)
  40c73e:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40c741:	89 45 ec             	mov    %eax,-0x14(%rbp)
  40c744:	e8 0d 92 03 00       	callq  445956 <writeback_cache>
  40c749:	8b 45 ec             	mov    -0x14(%rbp),%eax
  40c74c:	48 83 c4 20          	add    $0x20,%rsp
  40c750:	5d                   	pop    %rbp
  40c751:	c3                   	retq   
  40c752:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  40c759:	1f 84 00 00 00 00 00 

000000000040c760 <mbedtls_ssl_handshake_step>:
  40c760:	55                   	push   %rbp
  40c761:	48 89 e5             	mov    %rsp,%rbp
  40c764:	48 81 ec 90 0e 00 00 	sub    $0xe90,%rsp
  40c76b:	48 89 bd 68 f2 ff ff 	mov    %rdi,-0xd98(%rbp)
  40c772:	c7 85 64 f2 ff ff 80 	movl   $0xffff8f80,-0xd9c(%rbp)
  40c779:	8f ff ff 
  40c77c:	48 83 bd 68 f2 ff ff 	cmpq   $0x0,-0xd98(%rbp)
  40c783:	00 
  40c784:	74 0d                	je     40c793 <mbedtls_ssl_handshake_step+0x33>
  40c786:	48 8b 85 68 f2 ff ff 	mov    -0xd98(%rbp),%rax
  40c78d:	48 83 38 00          	cmpq   $0x0,(%rax)
  40c791:	75 0f                	jne    40c7a2 <mbedtls_ssl_handshake_step+0x42>
  40c793:	c7 85 70 f2 ff ff 00 	movl   $0xffff8f00,-0xd90(%rbp)
  40c79a:	8f ff ff 
  40c79d:	e9 e4 69 00 00       	jmpq   413186 <mbedtls_ssl_handshake_step+0x6a26>
  40c7a2:	48 8b 85 68 f2 ff ff 	mov    -0xd98(%rbp),%rax
  40c7a9:	48 8b 00             	mov    (%rax),%rax
  40c7ac:	8a 88 98 00 00 00    	mov    0x98(%rax),%cl
  40c7b2:	80 e1 01             	and    $0x1,%cl
  40c7b5:	0f b6 d1             	movzbl %cl,%edx
  40c7b8:	83 fa 00             	cmp    $0x0,%edx
  40c7bb:	0f 85 6e 35 00 00    	jne    40fd2f <mbedtls_ssl_handshake_step+0x35cf>
  40c7c1:	48 8b 85 68 f2 ff ff 	mov    -0xd98(%rbp),%rax
  40c7c8:	48 89 85 78 f2 ff ff 	mov    %rax,-0xd88(%rbp)
  40c7cf:	c7 85 74 f2 ff ff 00 	movl   $0x0,-0xd8c(%rbp)
  40c7d6:	00 00 00 
  40c7d9:	48 8b 85 78 f2 ff ff 	mov    -0xd88(%rbp),%rax
  40c7e0:	83 78 08 10          	cmpl   $0x10,0x8(%rax)
  40c7e4:	74 0e                	je     40c7f4 <mbedtls_ssl_handshake_step+0x94>
  40c7e6:	48 8b 85 78 f2 ff ff 	mov    -0xd88(%rbp),%rax
  40c7ed:	48 83 78 58 00       	cmpq   $0x0,0x58(%rax)
  40c7f2:	75 0f                	jne    40c803 <mbedtls_ssl_handshake_step+0xa3>
  40c7f4:	c7 85 84 f2 ff ff 00 	movl   $0xffff8f00,-0xd7c(%rbp)
  40c7fb:	8f ff ff 
  40c7fe:	e9 20 35 00 00       	jmpq   40fd23 <mbedtls_ssl_handshake_step+0x35c3>
  40c803:	48 8b bd 78 f2 ff ff 	mov    -0xd88(%rbp),%rdi
  40c80a:	e8 51 ab ff ff       	callq  407360 <mbedtls_ssl_flush_output>
  40c80f:	89 85 74 f2 ff ff    	mov    %eax,-0xd8c(%rbp)
  40c815:	83 f8 00             	cmp    $0x0,%eax
  40c818:	74 11                	je     40c82b <mbedtls_ssl_handshake_step+0xcb>
  40c81a:	8b 85 74 f2 ff ff    	mov    -0xd8c(%rbp),%eax
  40c820:	89 85 84 f2 ff ff    	mov    %eax,-0xd7c(%rbp)
  40c826:	e9 f8 34 00 00       	jmpq   40fd23 <mbedtls_ssl_handshake_step+0x35c3>
  40c82b:	48 8b 85 78 f2 ff ff 	mov    -0xd88(%rbp),%rax
  40c832:	8b 48 08             	mov    0x8(%rax),%ecx
  40c835:	89 c8                	mov    %ecx,%eax
  40c837:	48 89 c2             	mov    %rax,%rdx
  40c83a:	48 83 ea 0f          	sub    $0xf,%rdx
  40c83e:	48 89 85 58 f2 ff ff 	mov    %rax,-0xda8(%rbp)
  40c845:	48 89 95 50 f2 ff ff 	mov    %rdx,-0xdb0(%rbp)
  40c84c:	0f 87 b9 34 00 00    	ja     40fd0b <mbedtls_ssl_handshake_step+0x35ab>
  40c852:	48 8b 85 58 f2 ff ff 	mov    -0xda8(%rbp),%rax
  40c859:	48 8b 0c c5 f8 6b 44 	mov    0x446bf8(,%rax,8),%rcx
  40c860:	00 
  40c861:	ff e1                	jmpq   *%rcx
  40c863:	48 8b 85 78 f2 ff ff 	mov    -0xd88(%rbp),%rax
  40c86a:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%rax)
  40c871:	e9 a1 34 00 00       	jmpq   40fd17 <mbedtls_ssl_handshake_step+0x35b7>
  40c876:	48 8b 85 78 f2 ff ff 	mov    -0xd88(%rbp),%rax
  40c87d:	48 89 85 e0 f2 ff ff 	mov    %rax,-0xd20(%rbp)
  40c884:	48 c7 85 b8 f2 ff ff 	movq   $0x0,-0xd48(%rbp)
  40c88b:	00 00 00 00 
  40c88f:	48 8b 85 e0 f2 ff ff 	mov    -0xd20(%rbp),%rax
  40c896:	48 8b 00             	mov    (%rax),%rax
  40c899:	48 83 78 30 00       	cmpq   $0x0,0x30(%rax)
  40c89e:	75 0f                	jne    40c8af <mbedtls_ssl_handshake_step+0x14f>
  40c8a0:	c7 85 ec f2 ff ff 00 	movl   $0xffff8c00,-0xd14(%rbp)
  40c8a7:	8c ff ff 
  40c8aa:	e9 87 07 00 00       	jmpq   40d036 <mbedtls_ssl_handshake_step+0x8d6>
  40c8af:	48 8b 85 e0 f2 ff ff 	mov    -0xd20(%rbp),%rax
  40c8b6:	48 8b 00             	mov    (%rax),%rax
  40c8b9:	0f b6 88 96 00 00 00 	movzbl 0x96(%rax),%ecx
  40c8c0:	48 8b 85 e0 f2 ff ff 	mov    -0xd20(%rbp),%rax
  40c8c7:	89 48 0c             	mov    %ecx,0xc(%rax)
  40c8ca:	48 8b 85 e0 f2 ff ff 	mov    -0xd20(%rbp),%rax
  40c8d1:	48 8b 00             	mov    (%rax),%rax
  40c8d4:	0f b6 88 97 00 00 00 	movzbl 0x97(%rax),%ecx
  40c8db:	48 8b 85 e0 f2 ff ff 	mov    -0xd20(%rbp),%rax
  40c8e2:	89 48 10             	mov    %ecx,0x10(%rax)
  40c8e5:	48 8b 85 e0 f2 ff ff 	mov    -0xd20(%rbp),%rax
  40c8ec:	48 8b 00             	mov    (%rax),%rax
  40c8ef:	0f b6 88 94 00 00 00 	movzbl 0x94(%rax),%ecx
  40c8f6:	83 f9 00             	cmp    $0x0,%ecx
  40c8f9:	75 0f                	jne    40c90a <mbedtls_ssl_handshake_step+0x1aa>
  40c8fb:	c7 85 ec f2 ff ff 00 	movl   $0xffff8f00,-0xd14(%rbp)
  40c902:	8f ff ff 
  40c905:	e9 2c 07 00 00       	jmpq   40d036 <mbedtls_ssl_handshake_step+0x8d6>
  40c90a:	31 c0                	xor    %eax,%eax
  40c90c:	89 c7                	mov    %eax,%edi
  40c90e:	48 8b 8d e0 f2 ff ff 	mov    -0xd20(%rbp),%rcx
  40c915:	48 8b 89 20 01 00 00 	mov    0x120(%rcx),%rcx
  40c91c:	48 89 8d b0 f2 ff ff 	mov    %rcx,-0xd50(%rbp)
  40c923:	48 8b 8d b0 f2 ff ff 	mov    -0xd50(%rbp),%rcx
  40c92a:	48 83 c1 04          	add    $0x4,%rcx
  40c92e:	48 89 8d a8 f2 ff ff 	mov    %rcx,-0xd58(%rbp)
  40c935:	48 8b 8d e0 f2 ff ff 	mov    -0xd20(%rbp),%rcx
  40c93c:	48 8b 09             	mov    (%rcx),%rcx
  40c93f:	0f b6 81 94 00 00 00 	movzbl 0x94(%rcx),%eax
  40c946:	48 8b 8d e0 f2 ff ff 	mov    -0xd20(%rbp),%rcx
  40c94d:	48 8b 09             	mov    (%rcx),%rcx
  40c950:	0f b6 91 95 00 00 00 	movzbl 0x95(%rcx),%edx
  40c957:	48 8b 8d e0 f2 ff ff 	mov    -0xd20(%rbp),%rcx
  40c95e:	48 8b 09             	mov    (%rcx),%rcx
  40c961:	40 8a b1 98 00 00 00 	mov    0x98(%rcx),%sil
  40c968:	40 c0 ee 01          	shr    $0x1,%sil
  40c96c:	40 80 e6 01          	and    $0x1,%sil
  40c970:	44 0f b6 c6          	movzbl %sil,%r8d
  40c974:	48 8b 8d a8 f2 ff ff 	mov    -0xd58(%rbp),%rcx
  40c97b:	89 85 04 f3 ff ff    	mov    %eax,-0xcfc(%rbp)
  40c981:	89 95 00 f3 ff ff    	mov    %edx,-0xd00(%rbp)
  40c987:	44 89 85 fc f2 ff ff 	mov    %r8d,-0xd04(%rbp)
  40c98e:	48 89 8d f0 f2 ff ff 	mov    %rcx,-0xd10(%rbp)
  40c995:	8b 85 04 f3 ff ff    	mov    -0xcfc(%rbp),%eax
  40c99b:	40 88 c6             	mov    %al,%sil
  40c99e:	48 8b 8d f0 f2 ff ff 	mov    -0xd10(%rbp),%rcx
  40c9a5:	40 88 31             	mov    %sil,(%rcx)
  40c9a8:	8b 85 00 f3 ff ff    	mov    -0xd00(%rbp),%eax
  40c9ae:	40 88 c6             	mov    %al,%sil
  40c9b1:	48 8b 8d f0 f2 ff ff 	mov    -0xd10(%rbp),%rcx
  40c9b8:	40 88 71 01          	mov    %sil,0x1(%rcx)
  40c9bc:	48 8b 8d a8 f2 ff ff 	mov    -0xd58(%rbp),%rcx
  40c9c3:	48 83 c1 02          	add    $0x2,%rcx
  40c9c7:	48 89 8d a8 f2 ff ff 	mov    %rcx,-0xd58(%rbp)
  40c9ce:	48 8b 8d e0 f2 ff ff 	mov    -0xd20(%rbp),%rcx
  40c9d5:	48 89 8d 20 f3 ff ff 	mov    %rcx,-0xce0(%rbp)
  40c9dc:	48 8b 8d 20 f3 ff ff 	mov    -0xce0(%rbp),%rcx
  40c9e3:	48 8b 49 58          	mov    0x58(%rcx),%rcx
  40c9e7:	48 81 c1 e8 00 00 00 	add    $0xe8,%rcx
  40c9ee:	48 89 8d 10 f3 ff ff 	mov    %rcx,-0xcf0(%rbp)
  40c9f5:	e8 e6 47 ff ff       	callq  4011e0 <time@plt>
  40c9fa:	ba 1c 00 00 00       	mov    $0x1c,%edx
  40c9ff:	48 89 85 08 f3 ff ff 	mov    %rax,-0xcf8(%rbp)
  40ca06:	48 8b 85 08 f3 ff ff 	mov    -0xcf8(%rbp),%rax
  40ca0d:	48 c1 f8 18          	sar    $0x18,%rax
  40ca11:	40 88 c6             	mov    %al,%sil
  40ca14:	48 8b 85 10 f3 ff ff 	mov    -0xcf0(%rbp),%rax
  40ca1b:	48 89 c1             	mov    %rax,%rcx
  40ca1e:	48 83 c1 01          	add    $0x1,%rcx
  40ca22:	48 89 8d 10 f3 ff ff 	mov    %rcx,-0xcf0(%rbp)
  40ca29:	40 88 30             	mov    %sil,(%rax)
  40ca2c:	48 8b 85 08 f3 ff ff 	mov    -0xcf8(%rbp),%rax
  40ca33:	48 c1 f8 10          	sar    $0x10,%rax
  40ca37:	40 88 c6             	mov    %al,%sil
  40ca3a:	48 8b 85 10 f3 ff ff 	mov    -0xcf0(%rbp),%rax
  40ca41:	48 89 c1             	mov    %rax,%rcx
  40ca44:	48 83 c1 01          	add    $0x1,%rcx
  40ca48:	48 89 8d 10 f3 ff ff 	mov    %rcx,-0xcf0(%rbp)
  40ca4f:	40 88 30             	mov    %sil,(%rax)
  40ca52:	48 8b 85 08 f3 ff ff 	mov    -0xcf8(%rbp),%rax
  40ca59:	48 c1 f8 08          	sar    $0x8,%rax
  40ca5d:	40 88 c6             	mov    %al,%sil
  40ca60:	48 8b 85 10 f3 ff ff 	mov    -0xcf0(%rbp),%rax
  40ca67:	48 89 c1             	mov    %rax,%rcx
  40ca6a:	48 83 c1 01          	add    $0x1,%rcx
  40ca6e:	48 89 8d 10 f3 ff ff 	mov    %rcx,-0xcf0(%rbp)
  40ca75:	40 88 30             	mov    %sil,(%rax)
  40ca78:	48 8b 85 08 f3 ff ff 	mov    -0xcf8(%rbp),%rax
  40ca7f:	40 88 c6             	mov    %al,%sil
  40ca82:	48 8b 85 10 f3 ff ff 	mov    -0xcf0(%rbp),%rax
  40ca89:	48 89 c1             	mov    %rax,%rcx
  40ca8c:	48 83 c1 01          	add    $0x1,%rcx
  40ca90:	48 89 8d 10 f3 ff ff 	mov    %rcx,-0xcf0(%rbp)
  40ca97:	40 88 30             	mov    %sil,(%rax)
  40ca9a:	48 8b 85 20 f3 ff ff 	mov    -0xce0(%rbp),%rax
  40caa1:	48 8b 00             	mov    (%rax),%rax
  40caa4:	48 8b 40 30          	mov    0x30(%rax),%rax
  40caa8:	48 8b 8d 20 f3 ff ff 	mov    -0xce0(%rbp),%rcx
  40caaf:	48 8b 09             	mov    (%rcx),%rcx
  40cab2:	48 8b 79 38          	mov    0x38(%rcx),%rdi
  40cab6:	48 8b b5 10 f3 ff ff 	mov    -0xcf0(%rbp),%rsi
  40cabd:	ff d0                	callq  *%rax
  40cabf:	89 85 1c f3 ff ff    	mov    %eax,-0xce4(%rbp)
  40cac5:	83 f8 00             	cmp    $0x0,%eax
  40cac8:	74 0e                	je     40cad8 <mbedtls_ssl_handshake_step+0x378>
  40caca:	8b 85 1c f3 ff ff    	mov    -0xce4(%rbp),%eax
  40cad0:	89 85 2c f3 ff ff    	mov    %eax,-0xcd4(%rbp)
  40cad6:	eb 0a                	jmp    40cae2 <mbedtls_ssl_handshake_step+0x382>
  40cad8:	c7 85 2c f3 ff ff 00 	movl   $0x0,-0xcd4(%rbp)
  40cadf:	00 00 00 
  40cae2:	8b 85 2c f3 ff ff    	mov    -0xcd4(%rbp),%eax
  40cae8:	89 85 dc f2 ff ff    	mov    %eax,-0xd24(%rbp)
  40caee:	83 f8 00             	cmp    $0x0,%eax
  40caf1:	74 11                	je     40cb04 <mbedtls_ssl_handshake_step+0x3a4>
  40caf3:	8b 85 dc f2 ff ff    	mov    -0xd24(%rbp),%eax
  40caf9:	89 85 ec f2 ff ff    	mov    %eax,-0xd14(%rbp)
  40caff:	e9 32 05 00 00       	jmpq   40d036 <mbedtls_ssl_handshake_step+0x8d6>
  40cb04:	48 8b 85 a8 f2 ff ff 	mov    -0xd58(%rbp),%rax
  40cb0b:	48 8b 8d e0 f2 ff ff 	mov    -0xd20(%rbp),%rcx
  40cb12:	48 8b 49 58          	mov    0x58(%rcx),%rcx
  40cb16:	48 8b 91 e8 00 00 00 	mov    0xe8(%rcx),%rdx
  40cb1d:	48 89 10             	mov    %rdx,(%rax)
  40cb20:	48 8b 91 f0 00 00 00 	mov    0xf0(%rcx),%rdx
  40cb27:	48 89 50 08          	mov    %rdx,0x8(%rax)
  40cb2b:	48 8b 91 f8 00 00 00 	mov    0xf8(%rcx),%rdx
  40cb32:	48 89 50 10          	mov    %rdx,0x10(%rax)
  40cb36:	48 8b 89 00 01 00 00 	mov    0x100(%rcx),%rcx
  40cb3d:	48 89 48 18          	mov    %rcx,0x18(%rax)
  40cb41:	48 8b 85 a8 f2 ff ff 	mov    -0xd58(%rbp),%rax
  40cb48:	48 83 c0 20          	add    $0x20,%rax
  40cb4c:	48 89 85 a8 f2 ff ff 	mov    %rax,-0xd58(%rbp)
  40cb53:	48 8b 85 e0 f2 ff ff 	mov    -0xd20(%rbp),%rax
  40cb5a:	48 8b 40 50          	mov    0x50(%rax),%rax
  40cb5e:	48 8b 40 10          	mov    0x10(%rax),%rax
  40cb62:	48 89 85 c8 f2 ff ff 	mov    %rax,-0xd38(%rbp)
  40cb69:	48 83 bd c8 f2 ff ff 	cmpq   $0x10,-0xd38(%rbp)
  40cb70:	10 
  40cb71:	72 1e                	jb     40cb91 <mbedtls_ssl_handshake_step+0x431>
  40cb73:	48 83 bd c8 f2 ff ff 	cmpq   $0x20,-0xd38(%rbp)
  40cb7a:	20 
  40cb7b:	77 14                	ja     40cb91 <mbedtls_ssl_handshake_step+0x431>
  40cb7d:	48 8b 85 e0 f2 ff ff 	mov    -0xd20(%rbp),%rax
  40cb84:	48 8b 40 58          	mov    0x58(%rax),%rax
  40cb88:	83 b8 58 01 00 00 00 	cmpl   $0x0,0x158(%rax)
  40cb8f:	75 0b                	jne    40cb9c <mbedtls_ssl_handshake_step+0x43c>
  40cb91:	48 c7 85 c8 f2 ff ff 	movq   $0x0,-0xd38(%rbp)
  40cb98:	00 00 00 00 
  40cb9c:	48 8b 85 c8 f2 ff ff 	mov    -0xd38(%rbp),%rax
  40cba3:	88 c1                	mov    %al,%cl
  40cba5:	48 8b 85 a8 f2 ff ff 	mov    -0xd58(%rbp),%rax
  40cbac:	48 89 c2             	mov    %rax,%rdx
  40cbaf:	48 83 c2 01          	add    $0x1,%rdx
  40cbb3:	48 89 95 a8 f2 ff ff 	mov    %rdx,-0xd58(%rbp)
  40cbba:	88 08                	mov    %cl,(%rax)
  40cbbc:	48 c7 85 d0 f2 ff ff 	movq   $0x0,-0xd30(%rbp)
  40cbc3:	00 00 00 00 
  40cbc7:	48 8b 85 d0 f2 ff ff 	mov    -0xd30(%rbp),%rax
  40cbce:	48 3b 85 c8 f2 ff ff 	cmp    -0xd38(%rbp),%rax
  40cbd5:	73 41                	jae    40cc18 <mbedtls_ssl_handshake_step+0x4b8>
  40cbd7:	48 8b 85 e0 f2 ff ff 	mov    -0xd20(%rbp),%rax
  40cbde:	48 8b 40 50          	mov    0x50(%rax),%rax
  40cbe2:	48 8b 8d d0 f2 ff ff 	mov    -0xd30(%rbp),%rcx
  40cbe9:	8a 54 08 18          	mov    0x18(%rax,%rcx,1),%dl
  40cbed:	48 8b 85 a8 f2 ff ff 	mov    -0xd58(%rbp),%rax
  40cbf4:	48 89 c1             	mov    %rax,%rcx
  40cbf7:	48 83 c1 01          	add    $0x1,%rcx
  40cbfb:	48 89 8d a8 f2 ff ff 	mov    %rcx,-0xd58(%rbp)
  40cc02:	88 10                	mov    %dl,(%rax)
  40cc04:	48 8b 85 d0 f2 ff ff 	mov    -0xd30(%rbp),%rax
  40cc0b:	48 83 c0 01          	add    $0x1,%rax
  40cc0f:	48 89 85 d0 f2 ff ff 	mov    %rax,-0xd30(%rbp)
  40cc16:	eb af                	jmp    40cbc7 <mbedtls_ssl_handshake_step+0x467>
  40cc18:	48 8b 85 e0 f2 ff ff 	mov    -0xd20(%rbp),%rax
  40cc1f:	48 8b 00             	mov    (%rax),%rax
  40cc22:	48 8b 8d e0 f2 ff ff 	mov    -0xd20(%rbp),%rcx
  40cc29:	48 63 49 10          	movslq 0x10(%rcx),%rcx
  40cc2d:	48 8b 04 c8          	mov    (%rax,%rcx,8),%rax
  40cc31:	48 89 85 90 f2 ff ff 	mov    %rax,-0xd70(%rbp)
  40cc38:	48 c7 85 c8 f2 ff ff 	movq   $0x0,-0xd38(%rbp)
  40cc3f:	00 00 00 00 
  40cc43:	48 8b 85 a8 f2 ff ff 	mov    -0xd58(%rbp),%rax
  40cc4a:	48 89 85 a0 f2 ff ff 	mov    %rax,-0xd60(%rbp)
  40cc51:	48 8b 85 a8 f2 ff ff 	mov    -0xd58(%rbp),%rax
  40cc58:	48 83 c0 02          	add    $0x2,%rax
  40cc5c:	48 89 85 a8 f2 ff ff 	mov    %rax,-0xd58(%rbp)
  40cc63:	48 c7 85 d0 f2 ff ff 	movq   $0x0,-0xd30(%rbp)
  40cc6a:	00 00 00 00 
  40cc6e:	48 8b 85 90 f2 ff ff 	mov    -0xd70(%rbp),%rax
  40cc75:	48 8b 8d d0 f2 ff ff 	mov    -0xd30(%rbp),%rcx
  40cc7c:	83 3c 88 00          	cmpl   $0x0,(%rax,%rcx,4)
  40cc80:	0f 84 ad 01 00 00    	je     40ce33 <mbedtls_ssl_handshake_step+0x6d3>
  40cc86:	48 b8 70 90 44 00 00 	movabs $0x449070,%rax
  40cc8d:	00 00 00 
  40cc90:	48 8b 8d 90 f2 ff ff 	mov    -0xd70(%rbp),%rcx
  40cc97:	48 8b 95 d0 f2 ff ff 	mov    -0xd30(%rbp),%rdx
  40cc9e:	8b 34 91             	mov    (%rcx,%rdx,4),%esi
  40cca1:	89 b5 3c f3 ff ff    	mov    %esi,-0xcc4(%rbp)
  40cca7:	48 89 85 30 f3 ff ff 	mov    %rax,-0xcd0(%rbp)
  40ccae:	48 8b 85 30 f3 ff ff 	mov    -0xcd0(%rbp),%rax
  40ccb5:	83 38 00             	cmpl   $0x0,(%rax)
  40ccb8:	74 35                	je     40ccef <mbedtls_ssl_handshake_step+0x58f>
  40ccba:	48 8b 85 30 f3 ff ff 	mov    -0xcd0(%rbp),%rax
  40ccc1:	8b 08                	mov    (%rax),%ecx
  40ccc3:	3b 8d 3c f3 ff ff    	cmp    -0xcc4(%rbp),%ecx
  40ccc9:	75 10                	jne    40ccdb <mbedtls_ssl_handshake_step+0x57b>
  40cccb:	48 8b 85 30 f3 ff ff 	mov    -0xcd0(%rbp),%rax
  40ccd2:	48 89 85 40 f3 ff ff 	mov    %rax,-0xcc0(%rbp)
  40ccd9:	eb 1f                	jmp    40ccfa <mbedtls_ssl_handshake_step+0x59a>
  40ccdb:	48 8b 85 30 f3 ff ff 	mov    -0xcd0(%rbp),%rax
  40cce2:	48 83 c0 30          	add    $0x30,%rax
  40cce6:	48 89 85 30 f3 ff ff 	mov    %rax,-0xcd0(%rbp)
  40cced:	eb bf                	jmp    40ccae <mbedtls_ssl_handshake_step+0x54e>
  40ccef:	48 c7 85 40 f3 ff ff 	movq   $0x0,-0xcc0(%rbp)
  40ccf6:	00 00 00 00 
  40ccfa:	48 8b 85 40 f3 ff ff 	mov    -0xcc0(%rbp),%rax
  40cd01:	48 89 85 88 f2 ff ff 	mov    %rax,-0xd78(%rbp)
  40cd08:	48 8b 85 88 f2 ff ff 	mov    -0xd78(%rbp),%rax
  40cd0f:	48 8b 8d e0 f2 ff ff 	mov    -0xd20(%rbp),%rcx
  40cd16:	48 8b 95 e0 f2 ff ff 	mov    -0xd20(%rbp),%rdx
  40cd1d:	48 8b 12             	mov    (%rdx),%rdx
  40cd20:	0f b6 b2 97 00 00 00 	movzbl 0x97(%rdx),%esi
  40cd27:	48 8b 95 e0 f2 ff ff 	mov    -0xd20(%rbp),%rdx
  40cd2e:	48 8b 12             	mov    (%rdx),%rdx
  40cd31:	0f b6 ba 95 00 00 00 	movzbl 0x95(%rdx),%edi
  40cd38:	48 89 85 58 f3 ff ff 	mov    %rax,-0xca8(%rbp)
  40cd3f:	48 89 8d 50 f3 ff ff 	mov    %rcx,-0xcb0(%rbp)
  40cd46:	89 b5 4c f3 ff ff    	mov    %esi,-0xcb4(%rbp)
  40cd4c:	89 bd 48 f3 ff ff    	mov    %edi,-0xcb8(%rbp)
  40cd52:	48 83 bd 58 f3 ff ff 	cmpq   $0x0,-0xca8(%rbp)
  40cd59:	00 
  40cd5a:	75 0c                	jne    40cd68 <mbedtls_ssl_handshake_step+0x608>
  40cd5c:	c7 85 64 f3 ff ff 01 	movl   $0x1,-0xc9c(%rbp)
  40cd63:	00 00 00 
  40cd66:	eb 3a                	jmp    40cda2 <mbedtls_ssl_handshake_step+0x642>
  40cd68:	48 8b 85 58 f3 ff ff 	mov    -0xca8(%rbp),%rax
  40cd6f:	8b 48 20             	mov    0x20(%rax),%ecx
  40cd72:	3b 8d 48 f3 ff ff    	cmp    -0xcb8(%rbp),%ecx
  40cd78:	7f 12                	jg     40cd8c <mbedtls_ssl_handshake_step+0x62c>
  40cd7a:	48 8b 85 58 f3 ff ff 	mov    -0xca8(%rbp),%rax
  40cd81:	8b 48 28             	mov    0x28(%rax),%ecx
  40cd84:	3b 8d 4c f3 ff ff    	cmp    -0xcb4(%rbp),%ecx
  40cd8a:	7d 0c                	jge    40cd98 <mbedtls_ssl_handshake_step+0x638>
  40cd8c:	c7 85 64 f3 ff ff 01 	movl   $0x1,-0xc9c(%rbp)
  40cd93:	00 00 00 
  40cd96:	eb 0a                	jmp    40cda2 <mbedtls_ssl_handshake_step+0x642>
  40cd98:	c7 85 64 f3 ff ff 00 	movl   $0x0,-0xc9c(%rbp)
  40cd9f:	00 00 00 
  40cda2:	8b 85 64 f3 ff ff    	mov    -0xc9c(%rbp),%eax
  40cda8:	83 f8 00             	cmp    $0x0,%eax
  40cdab:	74 02                	je     40cdaf <mbedtls_ssl_handshake_step+0x64f>
  40cdad:	eb 6d                	jmp    40ce1c <mbedtls_ssl_handshake_step+0x6bc>
  40cdaf:	48 8b 85 c8 f2 ff ff 	mov    -0xd38(%rbp),%rax
  40cdb6:	48 83 c0 01          	add    $0x1,%rax
  40cdba:	48 89 85 c8 f2 ff ff 	mov    %rax,-0xd38(%rbp)
  40cdc1:	48 8b 85 90 f2 ff ff 	mov    -0xd70(%rbp),%rax
  40cdc8:	48 8b 8d d0 f2 ff ff 	mov    -0xd30(%rbp),%rcx
  40cdcf:	8b 14 88             	mov    (%rax,%rcx,4),%edx
  40cdd2:	c1 fa 08             	sar    $0x8,%edx
  40cdd5:	40 88 d6             	mov    %dl,%sil
  40cdd8:	48 8b 85 a8 f2 ff ff 	mov    -0xd58(%rbp),%rax
  40cddf:	48 89 c1             	mov    %rax,%rcx
  40cde2:	48 83 c1 01          	add    $0x1,%rcx
  40cde6:	48 89 8d a8 f2 ff ff 	mov    %rcx,-0xd58(%rbp)
  40cded:	40 88 30             	mov    %sil,(%rax)
  40cdf0:	48 8b 85 90 f2 ff ff 	mov    -0xd70(%rbp),%rax
  40cdf7:	48 8b 8d d0 f2 ff ff 	mov    -0xd30(%rbp),%rcx
  40cdfe:	8b 14 88             	mov    (%rax,%rcx,4),%edx
  40ce01:	40 88 d6             	mov    %dl,%sil
  40ce04:	48 8b 85 a8 f2 ff ff 	mov    -0xd58(%rbp),%rax
  40ce0b:	48 89 c1             	mov    %rax,%rcx
  40ce0e:	48 83 c1 01          	add    $0x1,%rcx
  40ce12:	48 89 8d a8 f2 ff ff 	mov    %rcx,-0xd58(%rbp)
  40ce19:	40 88 30             	mov    %sil,(%rax)
  40ce1c:	48 8b 85 d0 f2 ff ff 	mov    -0xd30(%rbp),%rax
  40ce23:	48 83 c0 01          	add    $0x1,%rax
  40ce27:	48 89 85 d0 f2 ff ff 	mov    %rax,-0xd30(%rbp)
  40ce2e:	e9 3b fe ff ff       	jmpq   40cc6e <mbedtls_ssl_handshake_step+0x50e>
  40ce33:	48 8b 85 a8 f2 ff ff 	mov    -0xd58(%rbp),%rax
  40ce3a:	48 89 c1             	mov    %rax,%rcx
  40ce3d:	48 83 c1 01          	add    $0x1,%rcx
  40ce41:	48 89 8d a8 f2 ff ff 	mov    %rcx,-0xd58(%rbp)
  40ce48:	c6 00 00             	movb   $0x0,(%rax)
  40ce4b:	48 8b 85 a8 f2 ff ff 	mov    -0xd58(%rbp),%rax
  40ce52:	48 89 c1             	mov    %rax,%rcx
  40ce55:	48 83 c1 01          	add    $0x1,%rcx
  40ce59:	48 89 8d a8 f2 ff ff 	mov    %rcx,-0xd58(%rbp)
  40ce60:	c6 00 ff             	movb   $0xff,(%rax)
  40ce63:	48 8b 85 c8 f2 ff ff 	mov    -0xd38(%rbp),%rax
  40ce6a:	48 83 c0 01          	add    $0x1,%rax
  40ce6e:	48 89 85 c8 f2 ff ff 	mov    %rax,-0xd38(%rbp)
  40ce75:	48 8b 85 c8 f2 ff ff 	mov    -0xd38(%rbp),%rax
  40ce7c:	48 c1 e8 07          	shr    $0x7,%rax
  40ce80:	88 c2                	mov    %al,%dl
  40ce82:	48 8b 85 a0 f2 ff ff 	mov    -0xd60(%rbp),%rax
  40ce89:	48 89 c1             	mov    %rax,%rcx
  40ce8c:	48 83 c1 01          	add    $0x1,%rcx
  40ce90:	48 89 8d a0 f2 ff ff 	mov    %rcx,-0xd60(%rbp)
  40ce97:	88 10                	mov    %dl,(%rax)
  40ce99:	48 8b 85 c8 f2 ff ff 	mov    -0xd38(%rbp),%rax
  40cea0:	48 c1 e0 01          	shl    $0x1,%rax
  40cea4:	88 c2                	mov    %al,%dl
  40cea6:	48 8b 85 a0 f2 ff ff 	mov    -0xd60(%rbp),%rax
  40cead:	48 89 c1             	mov    %rax,%rcx
  40ceb0:	48 83 c1 01          	add    $0x1,%rcx
  40ceb4:	48 89 8d a0 f2 ff ff 	mov    %rcx,-0xd60(%rbp)
  40cebb:	88 10                	mov    %dl,(%rax)
  40cebd:	c6 85 9f f2 ff ff 00 	movb   $0x0,-0xd61(%rbp)
  40cec4:	80 bd 9f f2 ff ff 00 	cmpb   $0x0,-0xd61(%rbp)
  40cecb:	74 4a                	je     40cf17 <mbedtls_ssl_handshake_step+0x7b7>
  40cecd:	48 8b 85 a8 f2 ff ff 	mov    -0xd58(%rbp),%rax
  40ced4:	48 89 c1             	mov    %rax,%rcx
  40ced7:	48 83 c1 01          	add    $0x1,%rcx
  40cedb:	48 89 8d a8 f2 ff ff 	mov    %rcx,-0xd58(%rbp)
  40cee2:	c6 00 02             	movb   $0x2,(%rax)
  40cee5:	48 8b 85 a8 f2 ff ff 	mov    -0xd58(%rbp),%rax
  40ceec:	48 89 c1             	mov    %rax,%rcx
  40ceef:	48 83 c1 01          	add    $0x1,%rcx
  40cef3:	48 89 8d a8 f2 ff ff 	mov    %rcx,-0xd58(%rbp)
  40cefa:	c6 00 01             	movb   $0x1,(%rax)
  40cefd:	48 8b 85 a8 f2 ff ff 	mov    -0xd58(%rbp),%rax
  40cf04:	48 89 c1             	mov    %rax,%rcx
  40cf07:	48 83 c1 01          	add    $0x1,%rcx
  40cf0b:	48 89 8d a8 f2 ff ff 	mov    %rcx,-0xd58(%rbp)
  40cf12:	c6 00 00             	movb   $0x0,(%rax)
  40cf15:	eb 30                	jmp    40cf47 <mbedtls_ssl_handshake_step+0x7e7>
  40cf17:	48 8b 85 a8 f2 ff ff 	mov    -0xd58(%rbp),%rax
  40cf1e:	48 89 c1             	mov    %rax,%rcx
  40cf21:	48 83 c1 01          	add    $0x1,%rcx
  40cf25:	48 89 8d a8 f2 ff ff 	mov    %rcx,-0xd58(%rbp)
  40cf2c:	c6 00 01             	movb   $0x1,(%rax)
  40cf2f:	48 8b 85 a8 f2 ff ff 	mov    -0xd58(%rbp),%rax
  40cf36:	48 89 c1             	mov    %rax,%rcx
  40cf39:	48 83 c1 01          	add    $0x1,%rcx
  40cf3d:	48 89 8d a8 f2 ff ff 	mov    %rcx,-0xd58(%rbp)
  40cf44:	c6 00 00             	movb   $0x0,(%rax)
  40cf47:	48 83 bd b8 f2 ff ff 	cmpq   $0x0,-0xd48(%rbp)
  40cf4e:	00 
  40cf4f:	76 65                	jbe    40cfb6 <mbedtls_ssl_handshake_step+0x856>
  40cf51:	48 8b 85 b8 f2 ff ff 	mov    -0xd48(%rbp),%rax
  40cf58:	48 c1 e8 08          	shr    $0x8,%rax
  40cf5c:	48 25 ff 00 00 00    	and    $0xff,%rax
  40cf62:	88 c1                	mov    %al,%cl
  40cf64:	48 8b 85 a8 f2 ff ff 	mov    -0xd58(%rbp),%rax
  40cf6b:	48 89 c2             	mov    %rax,%rdx
  40cf6e:	48 83 c2 01          	add    $0x1,%rdx
  40cf72:	48 89 95 a8 f2 ff ff 	mov    %rdx,-0xd58(%rbp)
  40cf79:	88 08                	mov    %cl,(%rax)
  40cf7b:	48 8b 85 b8 f2 ff ff 	mov    -0xd48(%rbp),%rax
  40cf82:	48 25 ff 00 00 00    	and    $0xff,%rax
  40cf88:	88 c1                	mov    %al,%cl
  40cf8a:	48 8b 85 a8 f2 ff ff 	mov    -0xd58(%rbp),%rax
  40cf91:	48 89 c2             	mov    %rax,%rdx
  40cf94:	48 83 c2 01          	add    $0x1,%rdx
  40cf98:	48 89 95 a8 f2 ff ff 	mov    %rdx,-0xd58(%rbp)
  40cf9f:	88 08                	mov    %cl,(%rax)
  40cfa1:	48 8b 85 b8 f2 ff ff 	mov    -0xd48(%rbp),%rax
  40cfa8:	48 03 85 a8 f2 ff ff 	add    -0xd58(%rbp),%rax
  40cfaf:	48 89 85 a8 f2 ff ff 	mov    %rax,-0xd58(%rbp)
  40cfb6:	48 8b 85 a8 f2 ff ff 	mov    -0xd58(%rbp),%rax
  40cfbd:	48 8b 8d b0 f2 ff ff 	mov    -0xd50(%rbp),%rcx
  40cfc4:	48 29 c8             	sub    %rcx,%rax
  40cfc7:	48 8b 8d e0 f2 ff ff 	mov    -0xd20(%rbp),%rcx
  40cfce:	48 89 81 30 01 00 00 	mov    %rax,0x130(%rcx)
  40cfd5:	48 8b 85 e0 f2 ff ff 	mov    -0xd20(%rbp),%rax
  40cfdc:	c7 80 28 01 00 00 16 	movl   $0x16,0x128(%rax)
  40cfe3:	00 00 00 
  40cfe6:	48 8b 85 e0 f2 ff ff 	mov    -0xd20(%rbp),%rax
  40cfed:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40cff4:	c6 00 01             	movb   $0x1,(%rax)
  40cff7:	48 8b 85 e0 f2 ff ff 	mov    -0xd20(%rbp),%rax
  40cffe:	8b 50 08             	mov    0x8(%rax),%edx
  40d001:	83 c2 01             	add    $0x1,%edx
  40d004:	89 50 08             	mov    %edx,0x8(%rax)
  40d007:	48 8b bd e0 f2 ff ff 	mov    -0xd20(%rbp),%rdi
  40d00e:	e8 3d a5 ff ff       	callq  407550 <mbedtls_ssl_write_handshake_msg>
  40d013:	89 85 dc f2 ff ff    	mov    %eax,-0xd24(%rbp)
  40d019:	83 f8 00             	cmp    $0x0,%eax
  40d01c:	74 0e                	je     40d02c <mbedtls_ssl_handshake_step+0x8cc>
  40d01e:	8b 85 dc f2 ff ff    	mov    -0xd24(%rbp),%eax
  40d024:	89 85 ec f2 ff ff    	mov    %eax,-0xd14(%rbp)
  40d02a:	eb 0a                	jmp    40d036 <mbedtls_ssl_handshake_step+0x8d6>
  40d02c:	c7 85 ec f2 ff ff 00 	movl   $0x0,-0xd14(%rbp)
  40d033:	00 00 00 
  40d036:	8b 85 ec f2 ff ff    	mov    -0xd14(%rbp),%eax
  40d03c:	89 85 74 f2 ff ff    	mov    %eax,-0xd8c(%rbp)
  40d042:	e9 d0 2c 00 00       	jmpq   40fd17 <mbedtls_ssl_handshake_step+0x35b7>
  40d047:	48 8b 85 78 f2 ff ff 	mov    -0xd88(%rbp),%rax
  40d04e:	48 89 85 a8 f3 ff ff 	mov    %rax,-0xc58(%rbp)
  40d055:	c7 85 78 f3 ff ff 00 	movl   $0x0,-0xc88(%rbp)
  40d05c:	00 00 00 
  40d05f:	48 8b 85 a8 f3 ff ff 	mov    -0xc58(%rbp),%rax
  40d066:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  40d06d:	48 89 85 88 f3 ff ff 	mov    %rax,-0xc78(%rbp)
  40d074:	48 8b bd a8 f3 ff ff 	mov    -0xc58(%rbp),%rdi
  40d07b:	be 01 00 00 00       	mov    $0x1,%esi
  40d080:	e8 ab b1 ff ff       	callq  408230 <mbedtls_ssl_read_record>
  40d085:	89 85 a4 f3 ff ff    	mov    %eax,-0xc5c(%rbp)
  40d08b:	83 f8 00             	cmp    $0x0,%eax
  40d08e:	74 11                	je     40d0a1 <mbedtls_ssl_handshake_step+0x941>
  40d090:	8b 85 a4 f3 ff ff    	mov    -0xc5c(%rbp),%eax
  40d096:	89 85 b4 f3 ff ff    	mov    %eax,-0xc4c(%rbp)
  40d09c:	e9 7d 15 00 00       	jmpq   40e61e <mbedtls_ssl_handshake_step+0x1ebe>
  40d0a1:	48 8b 85 a8 f3 ff ff 	mov    -0xc58(%rbp),%rax
  40d0a8:	83 b8 d0 00 00 00 16 	cmpl   $0x16,0xd0(%rax)
  40d0af:	0f 84 d5 00 00 00    	je     40d18a <mbedtls_ssl_handshake_step+0xa2a>
  40d0b5:	48 8b 85 a8 f3 ff ff 	mov    -0xc58(%rbp),%rax
  40d0bc:	48 89 85 c0 f3 ff ff 	mov    %rax,-0xc40(%rbp)
  40d0c3:	c6 85 bf f3 ff ff 02 	movb   $0x2,-0xc41(%rbp)
  40d0ca:	c6 85 be f3 ff ff 0a 	movb   $0xa,-0xc42(%rbp)
  40d0d1:	48 83 bd c0 f3 ff ff 	cmpq   $0x0,-0xc40(%rbp)
  40d0d8:	00 
  40d0d9:	74 0d                	je     40d0e8 <mbedtls_ssl_handshake_step+0x988>
  40d0db:	48 8b 85 c0 f3 ff ff 	mov    -0xc40(%rbp),%rax
  40d0e2:	48 83 38 00          	cmpq   $0x0,(%rax)
  40d0e6:	75 0f                	jne    40d0f7 <mbedtls_ssl_handshake_step+0x997>
  40d0e8:	c7 85 cc f3 ff ff 00 	movl   $0xffff8f00,-0xc34(%rbp)
  40d0ef:	8f ff ff 
  40d0f2:	e9 84 00 00 00       	jmpq   40d17b <mbedtls_ssl_handshake_step+0xa1b>
  40d0f7:	48 8b 85 c0 f3 ff ff 	mov    -0xc40(%rbp),%rax
  40d0fe:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  40d105:	00 00 00 
  40d108:	48 8b 85 c0 f3 ff ff 	mov    -0xc40(%rbp),%rax
  40d10f:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  40d116:	02 00 00 00 
  40d11a:	8a 8d bf f3 ff ff    	mov    -0xc41(%rbp),%cl
  40d120:	48 8b 85 c0 f3 ff ff 	mov    -0xc40(%rbp),%rax
  40d127:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40d12e:	88 08                	mov    %cl,(%rax)
  40d130:	8a 8d be f3 ff ff    	mov    -0xc42(%rbp),%cl
  40d136:	48 8b 85 c0 f3 ff ff 	mov    -0xc40(%rbp),%rax
  40d13d:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40d144:	88 48 01             	mov    %cl,0x1(%rax)
  40d147:	48 8b bd c0 f3 ff ff 	mov    -0xc40(%rbp),%rdi
  40d14e:	be 01 00 00 00       	mov    $0x1,%esi
  40d153:	e8 78 a5 ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  40d158:	89 85 b8 f3 ff ff    	mov    %eax,-0xc48(%rbp)
  40d15e:	83 f8 00             	cmp    $0x0,%eax
  40d161:	74 0e                	je     40d171 <mbedtls_ssl_handshake_step+0xa11>
  40d163:	8b 85 b8 f3 ff ff    	mov    -0xc48(%rbp),%eax
  40d169:	89 85 cc f3 ff ff    	mov    %eax,-0xc34(%rbp)
  40d16f:	eb 0a                	jmp    40d17b <mbedtls_ssl_handshake_step+0xa1b>
  40d171:	c7 85 cc f3 ff ff 00 	movl   $0x0,-0xc34(%rbp)
  40d178:	00 00 00 
  40d17b:	c7 85 b4 f3 ff ff 00 	movl   $0xffff8900,-0xc4c(%rbp)
  40d182:	89 ff ff 
  40d185:	e9 94 14 00 00       	jmpq   40e61e <mbedtls_ssl_handshake_step+0x1ebe>
  40d18a:	48 8b 85 a8 f3 ff ff 	mov    -0xc58(%rbp),%rax
  40d191:	48 8b 80 e8 00 00 00 	mov    0xe8(%rax),%rax
  40d198:	48 8b 8d a8 f3 ff ff 	mov    -0xc58(%rbp),%rcx
  40d19f:	48 89 8d d0 f3 ff ff 	mov    %rcx,-0xc30(%rbp)
  40d1a6:	48 83 f8 2a          	cmp    $0x2a,%rax
  40d1aa:	72 13                	jb     40d1bf <mbedtls_ssl_handshake_step+0xa5f>
  40d1ac:	48 8b 85 88 f3 ff ff 	mov    -0xc78(%rbp),%rax
  40d1b3:	0f b6 08             	movzbl (%rax),%ecx
  40d1b6:	83 f9 02             	cmp    $0x2,%ecx
  40d1b9:	0f 84 d5 00 00 00    	je     40d294 <mbedtls_ssl_handshake_step+0xb34>
  40d1bf:	48 8b 85 a8 f3 ff ff 	mov    -0xc58(%rbp),%rax
  40d1c6:	48 89 85 f8 f3 ff ff 	mov    %rax,-0xc08(%rbp)
  40d1cd:	c6 85 f7 f3 ff ff 02 	movb   $0x2,-0xc09(%rbp)
  40d1d4:	c6 85 f6 f3 ff ff 32 	movb   $0x32,-0xc0a(%rbp)
  40d1db:	48 83 bd f8 f3 ff ff 	cmpq   $0x0,-0xc08(%rbp)
  40d1e2:	00 
  40d1e3:	74 0d                	je     40d1f2 <mbedtls_ssl_handshake_step+0xa92>
  40d1e5:	48 8b 85 f8 f3 ff ff 	mov    -0xc08(%rbp),%rax
  40d1ec:	48 83 38 00          	cmpq   $0x0,(%rax)
  40d1f0:	75 0f                	jne    40d201 <mbedtls_ssl_handshake_step+0xaa1>
  40d1f2:	c7 85 04 f4 ff ff 00 	movl   $0xffff8f00,-0xbfc(%rbp)
  40d1f9:	8f ff ff 
  40d1fc:	e9 84 00 00 00       	jmpq   40d285 <mbedtls_ssl_handshake_step+0xb25>
  40d201:	48 8b 85 f8 f3 ff ff 	mov    -0xc08(%rbp),%rax
  40d208:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  40d20f:	00 00 00 
  40d212:	48 8b 85 f8 f3 ff ff 	mov    -0xc08(%rbp),%rax
  40d219:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  40d220:	02 00 00 00 
  40d224:	8a 8d f7 f3 ff ff    	mov    -0xc09(%rbp),%cl
  40d22a:	48 8b 85 f8 f3 ff ff 	mov    -0xc08(%rbp),%rax
  40d231:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40d238:	88 08                	mov    %cl,(%rax)
  40d23a:	8a 8d f6 f3 ff ff    	mov    -0xc0a(%rbp),%cl
  40d240:	48 8b 85 f8 f3 ff ff 	mov    -0xc08(%rbp),%rax
  40d247:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40d24e:	88 48 01             	mov    %cl,0x1(%rax)
  40d251:	48 8b bd f8 f3 ff ff 	mov    -0xc08(%rbp),%rdi
  40d258:	be 01 00 00 00       	mov    $0x1,%esi
  40d25d:	e8 6e a4 ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  40d262:	89 85 f0 f3 ff ff    	mov    %eax,-0xc10(%rbp)
  40d268:	83 f8 00             	cmp    $0x0,%eax
  40d26b:	74 0e                	je     40d27b <mbedtls_ssl_handshake_step+0xb1b>
  40d26d:	8b 85 f0 f3 ff ff    	mov    -0xc10(%rbp),%eax
  40d273:	89 85 04 f4 ff ff    	mov    %eax,-0xbfc(%rbp)
  40d279:	eb 0a                	jmp    40d285 <mbedtls_ssl_handshake_step+0xb25>
  40d27b:	c7 85 04 f4 ff ff 00 	movl   $0x0,-0xbfc(%rbp)
  40d282:	00 00 00 
  40d285:	c7 85 b4 f3 ff ff 80 	movl   $0xffff8680,-0xc4c(%rbp)
  40d28c:	86 ff ff 
  40d28f:	e9 8a 13 00 00       	jmpq   40e61e <mbedtls_ssl_handshake_step+0x1ebe>
  40d294:	48 8b 85 a8 f3 ff ff 	mov    -0xc58(%rbp),%rax
  40d29b:	48 89 85 08 f4 ff ff 	mov    %rax,-0xbf8(%rbp)
  40d2a2:	48 8b 85 88 f3 ff ff 	mov    -0xc78(%rbp),%rax
  40d2a9:	48 83 c0 04          	add    $0x4,%rax
  40d2ad:	48 89 85 88 f3 ff ff 	mov    %rax,-0xc78(%rbp)
  40d2b4:	48 8b 85 a8 f3 ff ff 	mov    -0xc58(%rbp),%rax
  40d2bb:	48 83 c0 0c          	add    $0xc,%rax
  40d2bf:	48 8b 8d a8 f3 ff ff 	mov    -0xc58(%rbp),%rcx
  40d2c6:	48 83 c1 10          	add    $0x10,%rcx
  40d2ca:	48 8b 95 a8 f3 ff ff 	mov    -0xc58(%rbp),%rdx
  40d2d1:	48 8b 12             	mov    (%rdx),%rdx
  40d2d4:	40 8a b2 98 00 00 00 	mov    0x98(%rdx),%sil
  40d2db:	40 c0 ee 01          	shr    $0x1,%sil
  40d2df:	40 80 e6 01          	and    $0x1,%sil
  40d2e3:	40 0f b6 fe          	movzbl %sil,%edi
  40d2e7:	48 8b 95 88 f3 ff ff 	mov    -0xc78(%rbp),%rdx
  40d2ee:	48 89 85 60 f4 ff ff 	mov    %rax,-0xba0(%rbp)
  40d2f5:	48 89 8d 58 f4 ff ff 	mov    %rcx,-0xba8(%rbp)
  40d2fc:	89 bd 54 f4 ff ff    	mov    %edi,-0xbac(%rbp)
  40d302:	48 89 95 48 f4 ff ff 	mov    %rdx,-0xbb8(%rbp)
  40d309:	48 8b 85 48 f4 ff ff 	mov    -0xbb8(%rbp),%rax
  40d310:	0f b6 38             	movzbl (%rax),%edi
  40d313:	48 8b 85 60 f4 ff ff 	mov    -0xba0(%rbp),%rax
  40d31a:	89 38                	mov    %edi,(%rax)
  40d31c:	48 8b 85 48 f4 ff ff 	mov    -0xbb8(%rbp),%rax
  40d323:	0f b6 78 01          	movzbl 0x1(%rax),%edi
  40d327:	48 8b 85 58 f4 ff ff 	mov    -0xba8(%rbp),%rax
  40d32e:	89 38                	mov    %edi,(%rax)
  40d330:	48 8b 85 a8 f3 ff ff 	mov    -0xc58(%rbp),%rax
  40d337:	8b 78 0c             	mov    0xc(%rax),%edi
  40d33a:	48 8b 85 a8 f3 ff ff 	mov    -0xc58(%rbp),%rax
  40d341:	48 8b 00             	mov    (%rax),%rax
  40d344:	44 0f b6 80 96 00 00 	movzbl 0x96(%rax),%r8d
  40d34b:	00 
  40d34c:	44 39 c7             	cmp    %r8d,%edi
  40d34f:	7c 61                	jl     40d3b2 <mbedtls_ssl_handshake_step+0xc52>
  40d351:	48 8b 85 a8 f3 ff ff 	mov    -0xc58(%rbp),%rax
  40d358:	8b 48 10             	mov    0x10(%rax),%ecx
  40d35b:	48 8b 85 a8 f3 ff ff 	mov    -0xc58(%rbp),%rax
  40d362:	48 8b 00             	mov    (%rax),%rax
  40d365:	0f b6 90 97 00 00 00 	movzbl 0x97(%rax),%edx
  40d36c:	39 d1                	cmp    %edx,%ecx
  40d36e:	7c 42                	jl     40d3b2 <mbedtls_ssl_handshake_step+0xc52>
  40d370:	48 8b 85 a8 f3 ff ff 	mov    -0xc58(%rbp),%rax
  40d377:	8b 48 0c             	mov    0xc(%rax),%ecx
  40d37a:	48 8b 85 a8 f3 ff ff 	mov    -0xc58(%rbp),%rax
  40d381:	48 8b 00             	mov    (%rax),%rax
  40d384:	0f b6 90 94 00 00 00 	movzbl 0x94(%rax),%edx
  40d38b:	39 d1                	cmp    %edx,%ecx
  40d38d:	7f 23                	jg     40d3b2 <mbedtls_ssl_handshake_step+0xc52>
  40d38f:	48 8b 85 a8 f3 ff ff 	mov    -0xc58(%rbp),%rax
  40d396:	8b 48 10             	mov    0x10(%rax),%ecx
  40d399:	48 8b 85 a8 f3 ff ff 	mov    -0xc58(%rbp),%rax
  40d3a0:	48 8b 00             	mov    (%rax),%rax
  40d3a3:	0f b6 90 95 00 00 00 	movzbl 0x95(%rax),%edx
  40d3aa:	39 d1                	cmp    %edx,%ecx
  40d3ac:	0f 8e d5 00 00 00    	jle    40d487 <mbedtls_ssl_handshake_step+0xd27>
  40d3b2:	48 8b 85 a8 f3 ff ff 	mov    -0xc58(%rbp),%rax
  40d3b9:	48 89 85 88 f4 ff ff 	mov    %rax,-0xb78(%rbp)
  40d3c0:	c6 85 87 f4 ff ff 02 	movb   $0x2,-0xb79(%rbp)
  40d3c7:	c6 85 86 f4 ff ff 46 	movb   $0x46,-0xb7a(%rbp)
  40d3ce:	48 83 bd 88 f4 ff ff 	cmpq   $0x0,-0xb78(%rbp)
  40d3d5:	00 
  40d3d6:	74 0d                	je     40d3e5 <mbedtls_ssl_handshake_step+0xc85>
  40d3d8:	48 8b 85 88 f4 ff ff 	mov    -0xb78(%rbp),%rax
  40d3df:	48 83 38 00          	cmpq   $0x0,(%rax)
  40d3e3:	75 0f                	jne    40d3f4 <mbedtls_ssl_handshake_step+0xc94>
  40d3e5:	c7 85 94 f4 ff ff 00 	movl   $0xffff8f00,-0xb6c(%rbp)
  40d3ec:	8f ff ff 
  40d3ef:	e9 84 00 00 00       	jmpq   40d478 <mbedtls_ssl_handshake_step+0xd18>
  40d3f4:	48 8b 85 88 f4 ff ff 	mov    -0xb78(%rbp),%rax
  40d3fb:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  40d402:	00 00 00 
  40d405:	48 8b 85 88 f4 ff ff 	mov    -0xb78(%rbp),%rax
  40d40c:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  40d413:	02 00 00 00 
  40d417:	8a 8d 87 f4 ff ff    	mov    -0xb79(%rbp),%cl
  40d41d:	48 8b 85 88 f4 ff ff 	mov    -0xb78(%rbp),%rax
  40d424:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40d42b:	88 08                	mov    %cl,(%rax)
  40d42d:	8a 8d 86 f4 ff ff    	mov    -0xb7a(%rbp),%cl
  40d433:	48 8b 85 88 f4 ff ff 	mov    -0xb78(%rbp),%rax
  40d43a:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40d441:	88 48 01             	mov    %cl,0x1(%rax)
  40d444:	48 8b bd 88 f4 ff ff 	mov    -0xb78(%rbp),%rdi
  40d44b:	be 01 00 00 00       	mov    $0x1,%esi
  40d450:	e8 7b a2 ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  40d455:	89 85 80 f4 ff ff    	mov    %eax,-0xb80(%rbp)
  40d45b:	83 f8 00             	cmp    $0x0,%eax
  40d45e:	74 0e                	je     40d46e <mbedtls_ssl_handshake_step+0xd0e>
  40d460:	8b 85 80 f4 ff ff    	mov    -0xb80(%rbp),%eax
  40d466:	89 85 94 f4 ff ff    	mov    %eax,-0xb6c(%rbp)
  40d46c:	eb 0a                	jmp    40d478 <mbedtls_ssl_handshake_step+0xd18>
  40d46e:	c7 85 94 f4 ff ff 00 	movl   $0x0,-0xb6c(%rbp)
  40d475:	00 00 00 
  40d478:	c7 85 b4 f3 ff ff 80 	movl   $0xffff9180,-0xc4c(%rbp)
  40d47f:	91 ff ff 
  40d482:	e9 97 11 00 00       	jmpq   40e61e <mbedtls_ssl_handshake_step+0x1ebe>
  40d487:	48 8b 85 a8 f3 ff ff 	mov    -0xc58(%rbp),%rax
  40d48e:	48 8b 40 58          	mov    0x58(%rax),%rax
  40d492:	48 8b 8d 88 f3 ff ff 	mov    -0xc78(%rbp),%rcx
  40d499:	48 8b 51 02          	mov    0x2(%rcx),%rdx
  40d49d:	48 89 90 08 01 00 00 	mov    %rdx,0x108(%rax)
  40d4a4:	48 8b 51 0a          	mov    0xa(%rcx),%rdx
  40d4a8:	48 89 90 10 01 00 00 	mov    %rdx,0x110(%rax)
  40d4af:	48 8b 51 12          	mov    0x12(%rcx),%rdx
  40d4b3:	48 89 90 18 01 00 00 	mov    %rdx,0x118(%rax)
  40d4ba:	48 8b 49 1a          	mov    0x1a(%rcx),%rcx
  40d4be:	48 89 88 20 01 00 00 	mov    %rcx,0x120(%rax)
  40d4c5:	48 8b 85 88 f3 ff ff 	mov    -0xc78(%rbp),%rax
  40d4cc:	0f b6 70 22          	movzbl 0x22(%rax),%esi
  40d4d0:	89 f0                	mov    %esi,%eax
  40d4d2:	48 89 85 98 f3 ff ff 	mov    %rax,-0xc68(%rbp)
  40d4d9:	48 83 bd 98 f3 ff ff 	cmpq   $0x20,-0xc68(%rbp)
  40d4e0:	20 
  40d4e1:	0f 86 d5 00 00 00    	jbe    40d5bc <mbedtls_ssl_handshake_step+0xe5c>
  40d4e7:	48 8b 85 a8 f3 ff ff 	mov    -0xc58(%rbp),%rax
  40d4ee:	48 89 85 a0 f4 ff ff 	mov    %rax,-0xb60(%rbp)
  40d4f5:	c6 85 9f f4 ff ff 02 	movb   $0x2,-0xb61(%rbp)
  40d4fc:	c6 85 9e f4 ff ff 32 	movb   $0x32,-0xb62(%rbp)
  40d503:	48 83 bd a0 f4 ff ff 	cmpq   $0x0,-0xb60(%rbp)
  40d50a:	00 
  40d50b:	74 0d                	je     40d51a <mbedtls_ssl_handshake_step+0xdba>
  40d50d:	48 8b 85 a0 f4 ff ff 	mov    -0xb60(%rbp),%rax
  40d514:	48 83 38 00          	cmpq   $0x0,(%rax)
  40d518:	75 0f                	jne    40d529 <mbedtls_ssl_handshake_step+0xdc9>
  40d51a:	c7 85 ac f4 ff ff 00 	movl   $0xffff8f00,-0xb54(%rbp)
  40d521:	8f ff ff 
  40d524:	e9 84 00 00 00       	jmpq   40d5ad <mbedtls_ssl_handshake_step+0xe4d>
  40d529:	48 8b 85 a0 f4 ff ff 	mov    -0xb60(%rbp),%rax
  40d530:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  40d537:	00 00 00 
  40d53a:	48 8b 85 a0 f4 ff ff 	mov    -0xb60(%rbp),%rax
  40d541:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  40d548:	02 00 00 00 
  40d54c:	8a 8d 9f f4 ff ff    	mov    -0xb61(%rbp),%cl
  40d552:	48 8b 85 a0 f4 ff ff 	mov    -0xb60(%rbp),%rax
  40d559:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40d560:	88 08                	mov    %cl,(%rax)
  40d562:	8a 8d 9e f4 ff ff    	mov    -0xb62(%rbp),%cl
  40d568:	48 8b 85 a0 f4 ff ff 	mov    -0xb60(%rbp),%rax
  40d56f:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40d576:	88 48 01             	mov    %cl,0x1(%rax)
  40d579:	48 8b bd a0 f4 ff ff 	mov    -0xb60(%rbp),%rdi
  40d580:	be 01 00 00 00       	mov    $0x1,%esi
  40d585:	e8 46 a1 ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  40d58a:	89 85 98 f4 ff ff    	mov    %eax,-0xb68(%rbp)
  40d590:	83 f8 00             	cmp    $0x0,%eax
  40d593:	74 0e                	je     40d5a3 <mbedtls_ssl_handshake_step+0xe43>
  40d595:	8b 85 98 f4 ff ff    	mov    -0xb68(%rbp),%eax
  40d59b:	89 85 ac f4 ff ff    	mov    %eax,-0xb54(%rbp)
  40d5a1:	eb 0a                	jmp    40d5ad <mbedtls_ssl_handshake_step+0xe4d>
  40d5a3:	c7 85 ac f4 ff ff 00 	movl   $0x0,-0xb54(%rbp)
  40d5aa:	00 00 00 
  40d5ad:	c7 85 b4 f3 ff ff 80 	movl   $0xffff8680,-0xc4c(%rbp)
  40d5b4:	86 ff ff 
  40d5b7:	e9 62 10 00 00       	jmpq   40e61e <mbedtls_ssl_handshake_step+0x1ebe>
  40d5bc:	48 8b 85 a8 f3 ff ff 	mov    -0xc58(%rbp),%rax
  40d5c3:	48 8b 80 e8 00 00 00 	mov    0xe8(%rax),%rax
  40d5ca:	48 8b 8d a8 f3 ff ff 	mov    -0xc58(%rbp),%rcx
  40d5d1:	48 89 8d b0 f4 ff ff 	mov    %rcx,-0xb50(%rbp)
  40d5d8:	48 8b 8d 98 f3 ff ff 	mov    -0xc68(%rbp),%rcx
  40d5df:	48 83 c1 2b          	add    $0x2b,%rcx
  40d5e3:	48 39 c8             	cmp    %rcx,%rax
  40d5e6:	0f 86 60 01 00 00    	jbe    40d74c <mbedtls_ssl_handshake_step+0xfec>
  40d5ec:	48 8b 85 88 f3 ff ff 	mov    -0xc78(%rbp),%rax
  40d5f3:	48 8b 8d 98 f3 ff ff 	mov    -0xc68(%rbp),%rcx
  40d5fa:	48 83 c1 26          	add    $0x26,%rcx
  40d5fe:	0f b6 14 08          	movzbl (%rax,%rcx,1),%edx
  40d602:	c1 e2 08             	shl    $0x8,%edx
  40d605:	48 8b 85 88 f3 ff ff 	mov    -0xc78(%rbp),%rax
  40d60c:	48 8b 8d 98 f3 ff ff 	mov    -0xc68(%rbp),%rcx
  40d613:	48 83 c1 27          	add    $0x27,%rcx
  40d617:	0f b6 34 08          	movzbl (%rax,%rcx,1),%esi
  40d61b:	09 f2                	or     %esi,%edx
  40d61d:	48 63 c2             	movslq %edx,%rax
  40d620:	48 89 85 90 f3 ff ff 	mov    %rax,-0xc70(%rbp)
  40d627:	48 83 bd 90 f3 ff ff 	cmpq   $0x0,-0xc70(%rbp)
  40d62e:	00 
  40d62f:	76 0a                	jbe    40d63b <mbedtls_ssl_handshake_step+0xedb>
  40d631:	48 83 bd 90 f3 ff ff 	cmpq   $0x4,-0xc70(%rbp)
  40d638:	04 
  40d639:	72 37                	jb     40d672 <mbedtls_ssl_handshake_step+0xf12>
  40d63b:	48 8b 85 a8 f3 ff ff 	mov    -0xc58(%rbp),%rax
  40d642:	48 8b 80 e8 00 00 00 	mov    0xe8(%rax),%rax
  40d649:	48 8b 8d a8 f3 ff ff 	mov    -0xc58(%rbp),%rcx
  40d650:	48 89 8d d0 f4 ff ff 	mov    %rcx,-0xb30(%rbp)
  40d657:	48 8b 8d 98 f3 ff ff 	mov    -0xc68(%rbp),%rcx
  40d65e:	48 83 c1 2c          	add    $0x2c,%rcx
  40d662:	48 03 8d 90 f3 ff ff 	add    -0xc70(%rbp),%rcx
  40d669:	48 39 c8             	cmp    %rcx,%rax
  40d66c:	0f 84 d5 00 00 00    	je     40d747 <mbedtls_ssl_handshake_step+0xfe7>
  40d672:	48 8b 85 a8 f3 ff ff 	mov    -0xc58(%rbp),%rax
  40d679:	48 89 85 f8 f4 ff ff 	mov    %rax,-0xb08(%rbp)
  40d680:	c6 85 f7 f4 ff ff 02 	movb   $0x2,-0xb09(%rbp)
  40d687:	c6 85 f6 f4 ff ff 32 	movb   $0x32,-0xb0a(%rbp)
  40d68e:	48 83 bd f8 f4 ff ff 	cmpq   $0x0,-0xb08(%rbp)
  40d695:	00 
  40d696:	74 0d                	je     40d6a5 <mbedtls_ssl_handshake_step+0xf45>
  40d698:	48 8b 85 f8 f4 ff ff 	mov    -0xb08(%rbp),%rax
  40d69f:	48 83 38 00          	cmpq   $0x0,(%rax)
  40d6a3:	75 0f                	jne    40d6b4 <mbedtls_ssl_handshake_step+0xf54>
  40d6a5:	c7 85 04 f5 ff ff 00 	movl   $0xffff8f00,-0xafc(%rbp)
  40d6ac:	8f ff ff 
  40d6af:	e9 84 00 00 00       	jmpq   40d738 <mbedtls_ssl_handshake_step+0xfd8>
  40d6b4:	48 8b 85 f8 f4 ff ff 	mov    -0xb08(%rbp),%rax
  40d6bb:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  40d6c2:	00 00 00 
  40d6c5:	48 8b 85 f8 f4 ff ff 	mov    -0xb08(%rbp),%rax
  40d6cc:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  40d6d3:	02 00 00 00 
  40d6d7:	8a 8d f7 f4 ff ff    	mov    -0xb09(%rbp),%cl
  40d6dd:	48 8b 85 f8 f4 ff ff 	mov    -0xb08(%rbp),%rax
  40d6e4:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40d6eb:	88 08                	mov    %cl,(%rax)
  40d6ed:	8a 8d f6 f4 ff ff    	mov    -0xb0a(%rbp),%cl
  40d6f3:	48 8b 85 f8 f4 ff ff 	mov    -0xb08(%rbp),%rax
  40d6fa:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40d701:	88 48 01             	mov    %cl,0x1(%rax)
  40d704:	48 8b bd f8 f4 ff ff 	mov    -0xb08(%rbp),%rdi
  40d70b:	be 01 00 00 00       	mov    $0x1,%esi
  40d710:	e8 bb 9f ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  40d715:	89 85 f0 f4 ff ff    	mov    %eax,-0xb10(%rbp)
  40d71b:	83 f8 00             	cmp    $0x0,%eax
  40d71e:	74 0e                	je     40d72e <mbedtls_ssl_handshake_step+0xfce>
  40d720:	8b 85 f0 f4 ff ff    	mov    -0xb10(%rbp),%eax
  40d726:	89 85 04 f5 ff ff    	mov    %eax,-0xafc(%rbp)
  40d72c:	eb 0a                	jmp    40d738 <mbedtls_ssl_handshake_step+0xfd8>
  40d72e:	c7 85 04 f5 ff ff 00 	movl   $0x0,-0xafc(%rbp)
  40d735:	00 00 00 
  40d738:	c7 85 b4 f3 ff ff 80 	movl   $0xffff8680,-0xc4c(%rbp)
  40d73f:	86 ff ff 
  40d742:	e9 d7 0e 00 00       	jmpq   40e61e <mbedtls_ssl_handshake_step+0x1ebe>
  40d747:	e9 11 01 00 00       	jmpq   40d85d <mbedtls_ssl_handshake_step+0x10fd>
  40d74c:	48 8b 85 a8 f3 ff ff 	mov    -0xc58(%rbp),%rax
  40d753:	48 8b 80 e8 00 00 00 	mov    0xe8(%rax),%rax
  40d75a:	48 8b 8d a8 f3 ff ff 	mov    -0xc58(%rbp),%rcx
  40d761:	48 89 8d 08 f5 ff ff 	mov    %rcx,-0xaf8(%rbp)
  40d768:	48 8b 8d 98 f3 ff ff 	mov    -0xc68(%rbp),%rcx
  40d76f:	48 83 c1 2a          	add    $0x2a,%rcx
  40d773:	48 39 c8             	cmp    %rcx,%rax
  40d776:	75 10                	jne    40d788 <mbedtls_ssl_handshake_step+0x1028>
  40d778:	48 c7 85 90 f3 ff ff 	movq   $0x0,-0xc70(%rbp)
  40d77f:	00 00 00 00 
  40d783:	e9 d5 00 00 00       	jmpq   40d85d <mbedtls_ssl_handshake_step+0x10fd>
  40d788:	48 8b 85 a8 f3 ff ff 	mov    -0xc58(%rbp),%rax
  40d78f:	48 89 85 68 f5 ff ff 	mov    %rax,-0xa98(%rbp)
  40d796:	c6 85 67 f5 ff ff 02 	movb   $0x2,-0xa99(%rbp)
  40d79d:	c6 85 66 f5 ff ff 32 	movb   $0x32,-0xa9a(%rbp)
  40d7a4:	48 83 bd 68 f5 ff ff 	cmpq   $0x0,-0xa98(%rbp)
  40d7ab:	00 
  40d7ac:	74 0d                	je     40d7bb <mbedtls_ssl_handshake_step+0x105b>
  40d7ae:	48 8b 85 68 f5 ff ff 	mov    -0xa98(%rbp),%rax
  40d7b5:	48 83 38 00          	cmpq   $0x0,(%rax)
  40d7b9:	75 0f                	jne    40d7ca <mbedtls_ssl_handshake_step+0x106a>
  40d7bb:	c7 85 74 f5 ff ff 00 	movl   $0xffff8f00,-0xa8c(%rbp)
  40d7c2:	8f ff ff 
  40d7c5:	e9 84 00 00 00       	jmpq   40d84e <mbedtls_ssl_handshake_step+0x10ee>
  40d7ca:	48 8b 85 68 f5 ff ff 	mov    -0xa98(%rbp),%rax
  40d7d1:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  40d7d8:	00 00 00 
  40d7db:	48 8b 85 68 f5 ff ff 	mov    -0xa98(%rbp),%rax
  40d7e2:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  40d7e9:	02 00 00 00 
  40d7ed:	8a 8d 67 f5 ff ff    	mov    -0xa99(%rbp),%cl
  40d7f3:	48 8b 85 68 f5 ff ff 	mov    -0xa98(%rbp),%rax
  40d7fa:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40d801:	88 08                	mov    %cl,(%rax)
  40d803:	8a 8d 66 f5 ff ff    	mov    -0xa9a(%rbp),%cl
  40d809:	48 8b 85 68 f5 ff ff 	mov    -0xa98(%rbp),%rax
  40d810:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40d817:	88 48 01             	mov    %cl,0x1(%rax)
  40d81a:	48 8b bd 68 f5 ff ff 	mov    -0xa98(%rbp),%rdi
  40d821:	be 01 00 00 00       	mov    $0x1,%esi
  40d826:	e8 a5 9e ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  40d82b:	89 85 60 f5 ff ff    	mov    %eax,-0xaa0(%rbp)
  40d831:	83 f8 00             	cmp    $0x0,%eax
  40d834:	74 0e                	je     40d844 <mbedtls_ssl_handshake_step+0x10e4>
  40d836:	8b 85 60 f5 ff ff    	mov    -0xaa0(%rbp),%eax
  40d83c:	89 85 74 f5 ff ff    	mov    %eax,-0xa8c(%rbp)
  40d842:	eb 0a                	jmp    40d84e <mbedtls_ssl_handshake_step+0x10ee>
  40d844:	c7 85 74 f5 ff ff 00 	movl   $0x0,-0xa8c(%rbp)
  40d84b:	00 00 00 
  40d84e:	c7 85 b4 f3 ff ff 80 	movl   $0xffff8680,-0xc4c(%rbp)
  40d855:	86 ff ff 
  40d858:	e9 c1 0d 00 00       	jmpq   40e61e <mbedtls_ssl_handshake_step+0x1ebe>
  40d85d:	48 8b 85 88 f3 ff ff 	mov    -0xc78(%rbp),%rax
  40d864:	48 8b 8d 98 f3 ff ff 	mov    -0xc68(%rbp),%rcx
  40d86b:	48 83 c1 23          	add    $0x23,%rcx
  40d86f:	0f b6 14 08          	movzbl (%rax,%rcx,1),%edx
  40d873:	c1 e2 08             	shl    $0x8,%edx
  40d876:	48 8b 85 88 f3 ff ff 	mov    -0xc78(%rbp),%rax
  40d87d:	48 8b 8d 98 f3 ff ff 	mov    -0xc68(%rbp),%rcx
  40d884:	48 83 c1 24          	add    $0x24,%rcx
  40d888:	0f b6 34 08          	movzbl (%rax,%rcx,1),%esi
  40d88c:	09 f2                	or     %esi,%edx
  40d88e:	89 95 a0 f3 ff ff    	mov    %edx,-0xc60(%rbp)
  40d894:	48 8b 85 88 f3 ff ff 	mov    -0xc78(%rbp),%rax
  40d89b:	48 8b 8d 98 f3 ff ff 	mov    -0xc68(%rbp),%rcx
  40d8a2:	48 83 c1 25          	add    $0x25,%rcx
  40d8a6:	40 8a 3c 08          	mov    (%rax,%rcx,1),%dil
  40d8aa:	40 88 bd 7f f3 ff ff 	mov    %dil,-0xc81(%rbp)
  40d8b1:	0f b6 95 7f f3 ff ff 	movzbl -0xc81(%rbp),%edx
  40d8b8:	83 fa 00             	cmp    $0x0,%edx
  40d8bb:	0f 84 d5 00 00 00    	je     40d996 <mbedtls_ssl_handshake_step+0x1236>
  40d8c1:	48 8b 85 a8 f3 ff ff 	mov    -0xc58(%rbp),%rax
  40d8c8:	48 89 85 80 f5 ff ff 	mov    %rax,-0xa80(%rbp)
  40d8cf:	c6 85 7f f5 ff ff 02 	movb   $0x2,-0xa81(%rbp)
  40d8d6:	c6 85 7e f5 ff ff 2f 	movb   $0x2f,-0xa82(%rbp)
  40d8dd:	48 83 bd 80 f5 ff ff 	cmpq   $0x0,-0xa80(%rbp)
  40d8e4:	00 
  40d8e5:	74 0d                	je     40d8f4 <mbedtls_ssl_handshake_step+0x1194>
  40d8e7:	48 8b 85 80 f5 ff ff 	mov    -0xa80(%rbp),%rax
  40d8ee:	48 83 38 00          	cmpq   $0x0,(%rax)
  40d8f2:	75 0f                	jne    40d903 <mbedtls_ssl_handshake_step+0x11a3>
  40d8f4:	c7 85 8c f5 ff ff 00 	movl   $0xffff8f00,-0xa74(%rbp)
  40d8fb:	8f ff ff 
  40d8fe:	e9 84 00 00 00       	jmpq   40d987 <mbedtls_ssl_handshake_step+0x1227>
  40d903:	48 8b 85 80 f5 ff ff 	mov    -0xa80(%rbp),%rax
  40d90a:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  40d911:	00 00 00 
  40d914:	48 8b 85 80 f5 ff ff 	mov    -0xa80(%rbp),%rax
  40d91b:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  40d922:	02 00 00 00 
  40d926:	8a 8d 7f f5 ff ff    	mov    -0xa81(%rbp),%cl
  40d92c:	48 8b 85 80 f5 ff ff 	mov    -0xa80(%rbp),%rax
  40d933:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40d93a:	88 08                	mov    %cl,(%rax)
  40d93c:	8a 8d 7e f5 ff ff    	mov    -0xa82(%rbp),%cl
  40d942:	48 8b 85 80 f5 ff ff 	mov    -0xa80(%rbp),%rax
  40d949:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40d950:	88 48 01             	mov    %cl,0x1(%rax)
  40d953:	48 8b bd 80 f5 ff ff 	mov    -0xa80(%rbp),%rdi
  40d95a:	be 01 00 00 00       	mov    $0x1,%esi
  40d95f:	e8 6c 9d ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  40d964:	89 85 78 f5 ff ff    	mov    %eax,-0xa88(%rbp)
  40d96a:	83 f8 00             	cmp    $0x0,%eax
  40d96d:	74 0e                	je     40d97d <mbedtls_ssl_handshake_step+0x121d>
  40d96f:	8b 85 78 f5 ff ff    	mov    -0xa88(%rbp),%eax
  40d975:	89 85 8c f5 ff ff    	mov    %eax,-0xa74(%rbp)
  40d97b:	eb 0a                	jmp    40d987 <mbedtls_ssl_handshake_step+0x1227>
  40d97d:	c7 85 8c f5 ff ff 00 	movl   $0x0,-0xa74(%rbp)
  40d984:	00 00 00 
  40d987:	c7 85 b4 f3 ff ff 80 	movl   $0xffff8f80,-0xc4c(%rbp)
  40d98e:	8f ff ff 
  40d991:	e9 88 0c 00 00       	jmpq   40e61e <mbedtls_ssl_handshake_step+0x1ebe>
  40d996:	48 b8 70 90 44 00 00 	movabs $0x449070,%rax
  40d99d:	00 00 00 
  40d9a0:	8b 8d a0 f3 ff ff    	mov    -0xc60(%rbp),%ecx
  40d9a6:	89 8d 9c f5 ff ff    	mov    %ecx,-0xa64(%rbp)
  40d9ac:	48 89 85 90 f5 ff ff 	mov    %rax,-0xa70(%rbp)
  40d9b3:	48 8b 85 90 f5 ff ff 	mov    -0xa70(%rbp),%rax
  40d9ba:	83 38 00             	cmpl   $0x0,(%rax)
  40d9bd:	74 35                	je     40d9f4 <mbedtls_ssl_handshake_step+0x1294>
  40d9bf:	48 8b 85 90 f5 ff ff 	mov    -0xa70(%rbp),%rax
  40d9c6:	8b 08                	mov    (%rax),%ecx
  40d9c8:	3b 8d 9c f5 ff ff    	cmp    -0xa64(%rbp),%ecx
  40d9ce:	75 10                	jne    40d9e0 <mbedtls_ssl_handshake_step+0x1280>
  40d9d0:	48 8b 85 90 f5 ff ff 	mov    -0xa70(%rbp),%rax
  40d9d7:	48 89 85 a0 f5 ff ff 	mov    %rax,-0xa60(%rbp)
  40d9de:	eb 1f                	jmp    40d9ff <mbedtls_ssl_handshake_step+0x129f>
  40d9e0:	48 8b 85 90 f5 ff ff 	mov    -0xa70(%rbp),%rax
  40d9e7:	48 83 c0 30          	add    $0x30,%rax
  40d9eb:	48 89 85 90 f5 ff ff 	mov    %rax,-0xa70(%rbp)
  40d9f2:	eb bf                	jmp    40d9b3 <mbedtls_ssl_handshake_step+0x1253>
  40d9f4:	48 c7 85 a0 f5 ff ff 	movq   $0x0,-0xa60(%rbp)
  40d9fb:	00 00 00 00 
  40d9ff:	48 8b 85 a0 f5 ff ff 	mov    -0xa60(%rbp),%rax
  40da06:	48 8b 8d a8 f3 ff ff 	mov    -0xc58(%rbp),%rcx
  40da0d:	48 8b 49 78          	mov    0x78(%rcx),%rcx
  40da11:	48 89 01             	mov    %rax,(%rcx)
  40da14:	48 8b 85 a8 f3 ff ff 	mov    -0xc58(%rbp),%rax
  40da1b:	48 8b 40 78          	mov    0x78(%rax),%rax
  40da1f:	48 83 38 00          	cmpq   $0x0,(%rax)
  40da23:	0f 85 d5 00 00 00    	jne    40dafe <mbedtls_ssl_handshake_step+0x139e>
  40da29:	48 8b 85 a8 f3 ff ff 	mov    -0xc58(%rbp),%rax
  40da30:	48 89 85 c8 f5 ff ff 	mov    %rax,-0xa38(%rbp)
  40da37:	c6 85 c7 f5 ff ff 02 	movb   $0x2,-0xa39(%rbp)
  40da3e:	c6 85 c6 f5 ff ff 50 	movb   $0x50,-0xa3a(%rbp)
  40da45:	48 83 bd c8 f5 ff ff 	cmpq   $0x0,-0xa38(%rbp)
  40da4c:	00 
  40da4d:	74 0d                	je     40da5c <mbedtls_ssl_handshake_step+0x12fc>
  40da4f:	48 8b 85 c8 f5 ff ff 	mov    -0xa38(%rbp),%rax
  40da56:	48 83 38 00          	cmpq   $0x0,(%rax)
  40da5a:	75 0f                	jne    40da6b <mbedtls_ssl_handshake_step+0x130b>
  40da5c:	c7 85 d4 f5 ff ff 00 	movl   $0xffff8f00,-0xa2c(%rbp)
  40da63:	8f ff ff 
  40da66:	e9 84 00 00 00       	jmpq   40daef <mbedtls_ssl_handshake_step+0x138f>
  40da6b:	48 8b 85 c8 f5 ff ff 	mov    -0xa38(%rbp),%rax
  40da72:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  40da79:	00 00 00 
  40da7c:	48 8b 85 c8 f5 ff ff 	mov    -0xa38(%rbp),%rax
  40da83:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  40da8a:	02 00 00 00 
  40da8e:	8a 8d c7 f5 ff ff    	mov    -0xa39(%rbp),%cl
  40da94:	48 8b 85 c8 f5 ff ff 	mov    -0xa38(%rbp),%rax
  40da9b:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40daa2:	88 08                	mov    %cl,(%rax)
  40daa4:	8a 8d c6 f5 ff ff    	mov    -0xa3a(%rbp),%cl
  40daaa:	48 8b 85 c8 f5 ff ff 	mov    -0xa38(%rbp),%rax
  40dab1:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40dab8:	88 48 01             	mov    %cl,0x1(%rax)
  40dabb:	48 8b bd c8 f5 ff ff 	mov    -0xa38(%rbp),%rdi
  40dac2:	be 01 00 00 00       	mov    $0x1,%esi
  40dac7:	e8 04 9c ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  40dacc:	89 85 c0 f5 ff ff    	mov    %eax,-0xa40(%rbp)
  40dad2:	83 f8 00             	cmp    $0x0,%eax
  40dad5:	74 0e                	je     40dae5 <mbedtls_ssl_handshake_step+0x1385>
  40dad7:	8b 85 c0 f5 ff ff    	mov    -0xa40(%rbp),%eax
  40dadd:	89 85 d4 f5 ff ff    	mov    %eax,-0xa2c(%rbp)
  40dae3:	eb 0a                	jmp    40daef <mbedtls_ssl_handshake_step+0x138f>
  40dae5:	c7 85 d4 f5 ff ff 00 	movl   $0x0,-0xa2c(%rbp)
  40daec:	00 00 00 
  40daef:	c7 85 b4 f3 ff ff 00 	movl   $0xffff8f00,-0xc4c(%rbp)
  40daf6:	8f ff ff 
  40daf9:	e9 20 0b 00 00       	jmpq   40e61e <mbedtls_ssl_handshake_step+0x1ebe>
  40dafe:	48 8b 85 a8 f3 ff ff 	mov    -0xc58(%rbp),%rax
  40db05:	48 8b 8d a8 f3 ff ff 	mov    -0xc58(%rbp),%rcx
  40db0c:	48 8b 49 78          	mov    0x78(%rcx),%rcx
  40db10:	48 8b 09             	mov    (%rcx),%rcx
  40db13:	48 89 85 e0 f5 ff ff 	mov    %rax,-0xa20(%rbp)
  40db1a:	48 89 8d d8 f5 ff ff 	mov    %rcx,-0xa28(%rbp)
  40db21:	48 8b 85 e0 f5 ff ff 	mov    -0xa20(%rbp),%rax
  40db28:	83 78 10 03          	cmpl   $0x3,0x10(%rax)
  40db2c:	7d 1e                	jge    40db4c <mbedtls_ssl_handshake_step+0x13ec>
  40db2e:	48 8b 85 e0 f5 ff ff 	mov    -0xa20(%rbp),%rax
  40db35:	48 8b 40 58          	mov    0x58(%rax),%rax
  40db39:	48 b9 f0 b0 40 00 00 	movabs $0x40b0f0,%rcx
  40db40:	00 00 00 
  40db43:	48 89 88 c0 00 00 00 	mov    %rcx,0xc0(%rax)
  40db4a:	eb 02                	jmp    40db4e <mbedtls_ssl_handshake_step+0x13ee>
  40db4c:	eb 00                	jmp    40db4e <mbedtls_ssl_handshake_step+0x13ee>
  40db4e:	48 8b 85 a8 f3 ff ff 	mov    -0xc58(%rbp),%rax
  40db55:	48 8b 40 58          	mov    0x58(%rax),%rax
  40db59:	83 b8 58 01 00 00 00 	cmpl   $0x0,0x158(%rax)
  40db60:	0f 84 86 00 00 00    	je     40dbec <mbedtls_ssl_handshake_step+0x148c>
  40db66:	48 83 bd 98 f3 ff ff 	cmpq   $0x0,-0xc68(%rbp)
  40db6d:	00 
  40db6e:	74 7c                	je     40dbec <mbedtls_ssl_handshake_step+0x148c>
  40db70:	48 8b 85 a8 f3 ff ff 	mov    -0xc58(%rbp),%rax
  40db77:	48 8b 40 50          	mov    0x50(%rax),%rax
  40db7b:	8b 48 08             	mov    0x8(%rax),%ecx
  40db7e:	3b 8d a0 f3 ff ff    	cmp    -0xc60(%rbp),%ecx
  40db84:	75 66                	jne    40dbec <mbedtls_ssl_handshake_step+0x148c>
  40db86:	48 8b 85 a8 f3 ff ff 	mov    -0xc58(%rbp),%rax
  40db8d:	48 8b 40 50          	mov    0x50(%rax),%rax
  40db91:	8b 48 0c             	mov    0xc(%rax),%ecx
  40db94:	0f b6 95 7f f3 ff ff 	movzbl -0xc81(%rbp),%edx
  40db9b:	39 d1                	cmp    %edx,%ecx
  40db9d:	75 4d                	jne    40dbec <mbedtls_ssl_handshake_step+0x148c>
  40db9f:	48 8b 85 a8 f3 ff ff 	mov    -0xc58(%rbp),%rax
  40dba6:	48 8b 40 50          	mov    0x50(%rax),%rax
  40dbaa:	48 8b 40 10          	mov    0x10(%rax),%rax
  40dbae:	48 3b 85 98 f3 ff ff 	cmp    -0xc68(%rbp),%rax
  40dbb5:	75 35                	jne    40dbec <mbedtls_ssl_handshake_step+0x148c>
  40dbb7:	48 8b 85 a8 f3 ff ff 	mov    -0xc58(%rbp),%rax
  40dbbe:	48 8b 40 50          	mov    0x50(%rax),%rax
  40dbc2:	48 83 c0 18          	add    $0x18,%rax
  40dbc6:	48 8b 8d 88 f3 ff ff 	mov    -0xc78(%rbp),%rcx
  40dbcd:	48 83 c1 23          	add    $0x23,%rcx
  40dbd1:	48 8b 95 98 f3 ff ff 	mov    -0xc68(%rbp),%rdx
  40dbd8:	48 89 c7             	mov    %rax,%rdi
  40dbdb:	48 89 ce             	mov    %rcx,%rsi
  40dbde:	e8 ed 35 ff ff       	callq  4011d0 <memcmp@plt>
  40dbe3:	83 f8 00             	cmp    $0x0,%eax
  40dbe6:	0f 84 ac 00 00 00    	je     40dc98 <mbedtls_ssl_handshake_step+0x1538>
  40dbec:	31 c0                	xor    %eax,%eax
  40dbee:	89 c7                	mov    %eax,%edi
  40dbf0:	48 8b 8d a8 f3 ff ff 	mov    -0xc58(%rbp),%rcx
  40dbf7:	8b 41 08             	mov    0x8(%rcx),%eax
  40dbfa:	83 c0 01             	add    $0x1,%eax
  40dbfd:	89 41 08             	mov    %eax,0x8(%rcx)
  40dc00:	48 8b 8d a8 f3 ff ff 	mov    -0xc58(%rbp),%rcx
  40dc07:	48 8b 49 58          	mov    0x58(%rcx),%rcx
  40dc0b:	c7 81 58 01 00 00 00 	movl   $0x0,0x158(%rcx)
  40dc12:	00 00 00 
  40dc15:	e8 c6 35 ff ff       	callq  4011e0 <time@plt>
  40dc1a:	48 8b 8d a8 f3 ff ff 	mov    -0xc58(%rbp),%rcx
  40dc21:	48 8b 49 50          	mov    0x50(%rcx),%rcx
  40dc25:	48 89 01             	mov    %rax,(%rcx)
  40dc28:	8b 95 a0 f3 ff ff    	mov    -0xc60(%rbp),%edx
  40dc2e:	48 8b 85 a8 f3 ff ff 	mov    -0xc58(%rbp),%rax
  40dc35:	48 8b 40 50          	mov    0x50(%rax),%rax
  40dc39:	89 50 08             	mov    %edx,0x8(%rax)
  40dc3c:	0f b6 95 7f f3 ff ff 	movzbl -0xc81(%rbp),%edx
  40dc43:	48 8b 85 a8 f3 ff ff 	mov    -0xc58(%rbp),%rax
  40dc4a:	48 8b 40 50          	mov    0x50(%rax),%rax
  40dc4e:	89 50 0c             	mov    %edx,0xc(%rax)
  40dc51:	48 8b 85 98 f3 ff ff 	mov    -0xc68(%rbp),%rax
  40dc58:	48 8b 8d a8 f3 ff ff 	mov    -0xc58(%rbp),%rcx
  40dc5f:	48 8b 49 50          	mov    0x50(%rcx),%rcx
  40dc63:	48 89 41 10          	mov    %rax,0x10(%rcx)
  40dc67:	48 8b 85 a8 f3 ff ff 	mov    -0xc58(%rbp),%rax
  40dc6e:	48 8b 40 50          	mov    0x50(%rax),%rax
  40dc72:	48 83 c0 18          	add    $0x18,%rax
  40dc76:	48 8b 8d 88 f3 ff ff 	mov    -0xc78(%rbp),%rcx
  40dc7d:	48 83 c1 23          	add    $0x23,%rcx
  40dc81:	48 8b 95 98 f3 ff ff 	mov    -0xc68(%rbp),%rdx
  40dc88:	48 89 c7             	mov    %rax,%rdi
  40dc8b:	48 89 ce             	mov    %rcx,%rsi
  40dc8e:	e8 dd 34 ff ff       	callq  401170 <memcpy@plt>
  40dc93:	e9 02 01 00 00       	jmpq   40dd9a <mbedtls_ssl_handshake_step+0x163a>
  40dc98:	48 8b 85 a8 f3 ff ff 	mov    -0xc58(%rbp),%rax
  40dc9f:	c7 40 08 0c 00 00 00 	movl   $0xc,0x8(%rax)
  40dca6:	48 8b bd a8 f3 ff ff 	mov    -0xc58(%rbp),%rdi
  40dcad:	e8 4e 71 ff ff       	callq  404e00 <mbedtls_ssl_derive_keys>
  40dcb2:	89 85 a4 f3 ff ff    	mov    %eax,-0xc5c(%rbp)
  40dcb8:	83 f8 00             	cmp    $0x0,%eax
  40dcbb:	0f 84 d7 00 00 00    	je     40dd98 <mbedtls_ssl_handshake_step+0x1638>
  40dcc1:	48 8b 85 a8 f3 ff ff 	mov    -0xc58(%rbp),%rax
  40dcc8:	48 89 85 b0 f5 ff ff 	mov    %rax,-0xa50(%rbp)
  40dccf:	c6 85 af f5 ff ff 02 	movb   $0x2,-0xa51(%rbp)
  40dcd6:	c6 85 ae f5 ff ff 50 	movb   $0x50,-0xa52(%rbp)
  40dcdd:	48 83 bd b0 f5 ff ff 	cmpq   $0x0,-0xa50(%rbp)
  40dce4:	00 
  40dce5:	74 0d                	je     40dcf4 <mbedtls_ssl_handshake_step+0x1594>
  40dce7:	48 8b 85 b0 f5 ff ff 	mov    -0xa50(%rbp),%rax
  40dcee:	48 83 38 00          	cmpq   $0x0,(%rax)
  40dcf2:	75 0f                	jne    40dd03 <mbedtls_ssl_handshake_step+0x15a3>
  40dcf4:	c7 85 bc f5 ff ff 00 	movl   $0xffff8f00,-0xa44(%rbp)
  40dcfb:	8f ff ff 
  40dcfe:	e9 84 00 00 00       	jmpq   40dd87 <mbedtls_ssl_handshake_step+0x1627>
  40dd03:	48 8b 85 b0 f5 ff ff 	mov    -0xa50(%rbp),%rax
  40dd0a:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  40dd11:	00 00 00 
  40dd14:	48 8b 85 b0 f5 ff ff 	mov    -0xa50(%rbp),%rax
  40dd1b:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  40dd22:	02 00 00 00 
  40dd26:	8a 8d af f5 ff ff    	mov    -0xa51(%rbp),%cl
  40dd2c:	48 8b 85 b0 f5 ff ff 	mov    -0xa50(%rbp),%rax
  40dd33:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40dd3a:	88 08                	mov    %cl,(%rax)
  40dd3c:	8a 8d ae f5 ff ff    	mov    -0xa52(%rbp),%cl
  40dd42:	48 8b 85 b0 f5 ff ff 	mov    -0xa50(%rbp),%rax
  40dd49:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40dd50:	88 48 01             	mov    %cl,0x1(%rax)
  40dd53:	48 8b bd b0 f5 ff ff 	mov    -0xa50(%rbp),%rdi
  40dd5a:	be 01 00 00 00       	mov    $0x1,%esi
  40dd5f:	e8 6c 99 ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  40dd64:	89 85 a8 f5 ff ff    	mov    %eax,-0xa58(%rbp)
  40dd6a:	83 f8 00             	cmp    $0x0,%eax
  40dd6d:	74 0e                	je     40dd7d <mbedtls_ssl_handshake_step+0x161d>
  40dd6f:	8b 85 a8 f5 ff ff    	mov    -0xa58(%rbp),%eax
  40dd75:	89 85 bc f5 ff ff    	mov    %eax,-0xa44(%rbp)
  40dd7b:	eb 0a                	jmp    40dd87 <mbedtls_ssl_handshake_step+0x1627>
  40dd7d:	c7 85 bc f5 ff ff 00 	movl   $0x0,-0xa44(%rbp)
  40dd84:	00 00 00 
  40dd87:	8b 85 a4 f3 ff ff    	mov    -0xc5c(%rbp),%eax
  40dd8d:	89 85 b4 f3 ff ff    	mov    %eax,-0xc4c(%rbp)
  40dd93:	e9 86 08 00 00       	jmpq   40e61e <mbedtls_ssl_handshake_step+0x1ebe>
  40dd98:	eb 00                	jmp    40dd9a <mbedtls_ssl_handshake_step+0x163a>
  40dd9a:	c7 85 a0 f3 ff ff 00 	movl   $0x0,-0xc60(%rbp)
  40dda1:	00 00 00 
  40dda4:	48 8b 85 a8 f3 ff ff 	mov    -0xc58(%rbp),%rax
  40ddab:	48 8b 00             	mov    (%rax),%rax
  40ddae:	48 8b 8d a8 f3 ff ff 	mov    -0xc58(%rbp),%rcx
  40ddb5:	48 63 49 10          	movslq 0x10(%rcx),%rcx
  40ddb9:	48 8b 04 c8          	mov    (%rax,%rcx,8),%rax
  40ddbd:	48 63 8d a0 f3 ff ff 	movslq -0xc60(%rbp),%rcx
  40ddc4:	83 3c 88 00          	cmpl   $0x0,(%rax,%rcx,4)
  40ddc8:	0f 85 d5 00 00 00    	jne    40dea3 <mbedtls_ssl_handshake_step+0x1743>
  40ddce:	48 8b 85 a8 f3 ff ff 	mov    -0xc58(%rbp),%rax
  40ddd5:	48 89 85 50 f5 ff ff 	mov    %rax,-0xab0(%rbp)
  40dddc:	c6 85 4f f5 ff ff 02 	movb   $0x2,-0xab1(%rbp)
  40dde3:	c6 85 4e f5 ff ff 2f 	movb   $0x2f,-0xab2(%rbp)
  40ddea:	48 83 bd 50 f5 ff ff 	cmpq   $0x0,-0xab0(%rbp)
  40ddf1:	00 
  40ddf2:	74 0d                	je     40de01 <mbedtls_ssl_handshake_step+0x16a1>
  40ddf4:	48 8b 85 50 f5 ff ff 	mov    -0xab0(%rbp),%rax
  40ddfb:	48 83 38 00          	cmpq   $0x0,(%rax)
  40ddff:	75 0f                	jne    40de10 <mbedtls_ssl_handshake_step+0x16b0>
  40de01:	c7 85 5c f5 ff ff 00 	movl   $0xffff8f00,-0xaa4(%rbp)
  40de08:	8f ff ff 
  40de0b:	e9 84 00 00 00       	jmpq   40de94 <mbedtls_ssl_handshake_step+0x1734>
  40de10:	48 8b 85 50 f5 ff ff 	mov    -0xab0(%rbp),%rax
  40de17:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  40de1e:	00 00 00 
  40de21:	48 8b 85 50 f5 ff ff 	mov    -0xab0(%rbp),%rax
  40de28:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  40de2f:	02 00 00 00 
  40de33:	8a 8d 4f f5 ff ff    	mov    -0xab1(%rbp),%cl
  40de39:	48 8b 85 50 f5 ff ff 	mov    -0xab0(%rbp),%rax
  40de40:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40de47:	88 08                	mov    %cl,(%rax)
  40de49:	8a 8d 4e f5 ff ff    	mov    -0xab2(%rbp),%cl
  40de4f:	48 8b 85 50 f5 ff ff 	mov    -0xab0(%rbp),%rax
  40de56:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40de5d:	88 48 01             	mov    %cl,0x1(%rax)
  40de60:	48 8b bd 50 f5 ff ff 	mov    -0xab0(%rbp),%rdi
  40de67:	be 01 00 00 00       	mov    $0x1,%esi
  40de6c:	e8 5f 98 ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  40de71:	89 85 48 f5 ff ff    	mov    %eax,-0xab8(%rbp)
  40de77:	83 f8 00             	cmp    $0x0,%eax
  40de7a:	74 0e                	je     40de8a <mbedtls_ssl_handshake_step+0x172a>
  40de7c:	8b 85 48 f5 ff ff    	mov    -0xab8(%rbp),%eax
  40de82:	89 85 5c f5 ff ff    	mov    %eax,-0xaa4(%rbp)
  40de88:	eb 0a                	jmp    40de94 <mbedtls_ssl_handshake_step+0x1734>
  40de8a:	c7 85 5c f5 ff ff 00 	movl   $0x0,-0xaa4(%rbp)
  40de91:	00 00 00 
  40de94:	c7 85 b4 f3 ff ff 80 	movl   $0xffff8680,-0xc4c(%rbp)
  40de9b:	86 ff ff 
  40de9e:	e9 7b 07 00 00       	jmpq   40e61e <mbedtls_ssl_handshake_step+0x1ebe>
  40dea3:	48 8b 85 a8 f3 ff ff 	mov    -0xc58(%rbp),%rax
  40deaa:	48 8b 00             	mov    (%rax),%rax
  40dead:	48 8b 8d a8 f3 ff ff 	mov    -0xc58(%rbp),%rcx
  40deb4:	48 63 49 10          	movslq 0x10(%rcx),%rcx
  40deb8:	48 8b 04 c8          	mov    (%rax,%rcx,8),%rax
  40debc:	8b 95 a0 f3 ff ff    	mov    -0xc60(%rbp),%edx
  40dec2:	89 d6                	mov    %edx,%esi
  40dec4:	83 c6 01             	add    $0x1,%esi
  40dec7:	89 b5 a0 f3 ff ff    	mov    %esi,-0xc60(%rbp)
  40decd:	48 63 ca             	movslq %edx,%rcx
  40ded0:	8b 14 88             	mov    (%rax,%rcx,4),%edx
  40ded3:	48 8b 85 a8 f3 ff ff 	mov    -0xc58(%rbp),%rax
  40deda:	48 8b 40 50          	mov    0x50(%rax),%rax
  40dede:	3b 50 08             	cmp    0x8(%rax),%edx
  40dee1:	75 27                	jne    40df0a <mbedtls_ssl_handshake_step+0x17aa>
  40dee3:	48 b8 70 90 44 00 00 	movabs $0x449070,%rax
  40deea:	00 00 00 
  40deed:	48 8b 8d a8 f3 ff ff 	mov    -0xc58(%rbp),%rcx
  40def4:	48 8b 49 50          	mov    0x50(%rcx),%rcx
  40def8:	8b 51 08             	mov    0x8(%rcx),%edx
  40defb:	89 95 3c f5 ff ff    	mov    %edx,-0xac4(%rbp)
  40df01:	48 89 85 30 f5 ff ff 	mov    %rax,-0xad0(%rbp)
  40df08:	eb 05                	jmp    40df0f <mbedtls_ssl_handshake_step+0x17af>
  40df0a:	e9 95 fe ff ff       	jmpq   40dda4 <mbedtls_ssl_handshake_step+0x1644>
  40df0f:	48 8b 85 30 f5 ff ff 	mov    -0xad0(%rbp),%rax
  40df16:	83 38 00             	cmpl   $0x0,(%rax)
  40df19:	74 35                	je     40df50 <mbedtls_ssl_handshake_step+0x17f0>
  40df1b:	48 8b 85 30 f5 ff ff 	mov    -0xad0(%rbp),%rax
  40df22:	8b 08                	mov    (%rax),%ecx
  40df24:	3b 8d 3c f5 ff ff    	cmp    -0xac4(%rbp),%ecx
  40df2a:	75 10                	jne    40df3c <mbedtls_ssl_handshake_step+0x17dc>
  40df2c:	48 8b 85 30 f5 ff ff 	mov    -0xad0(%rbp),%rax
  40df33:	48 89 85 40 f5 ff ff 	mov    %rax,-0xac0(%rbp)
  40df3a:	eb 1f                	jmp    40df5b <mbedtls_ssl_handshake_step+0x17fb>
  40df3c:	48 8b 85 30 f5 ff ff 	mov    -0xad0(%rbp),%rax
  40df43:	48 83 c0 30          	add    $0x30,%rax
  40df47:	48 89 85 30 f5 ff ff 	mov    %rax,-0xad0(%rbp)
  40df4e:	eb bf                	jmp    40df0f <mbedtls_ssl_handshake_step+0x17af>
  40df50:	48 c7 85 40 f5 ff ff 	movq   $0x0,-0xac0(%rbp)
  40df57:	00 00 00 00 
  40df5b:	48 8b 85 40 f5 ff ff 	mov    -0xac0(%rbp),%rax
  40df62:	48 89 85 70 f3 ff ff 	mov    %rax,-0xc90(%rbp)
  40df69:	48 8b 85 70 f3 ff ff 	mov    -0xc90(%rbp),%rax
  40df70:	48 8b 8d a8 f3 ff ff 	mov    -0xc58(%rbp),%rcx
  40df77:	48 8b 95 a8 f3 ff ff 	mov    -0xc58(%rbp),%rdx
  40df7e:	8b 72 10             	mov    0x10(%rdx),%esi
  40df81:	48 8b 95 a8 f3 ff ff 	mov    -0xc58(%rbp),%rdx
  40df88:	8b 7a 10             	mov    0x10(%rdx),%edi
  40df8b:	48 89 85 20 f5 ff ff 	mov    %rax,-0xae0(%rbp)
  40df92:	48 89 8d 18 f5 ff ff 	mov    %rcx,-0xae8(%rbp)
  40df99:	89 b5 14 f5 ff ff    	mov    %esi,-0xaec(%rbp)
  40df9f:	89 bd 10 f5 ff ff    	mov    %edi,-0xaf0(%rbp)
  40dfa5:	48 83 bd 20 f5 ff ff 	cmpq   $0x0,-0xae0(%rbp)
  40dfac:	00 
  40dfad:	75 0c                	jne    40dfbb <mbedtls_ssl_handshake_step+0x185b>
  40dfaf:	c7 85 2c f5 ff ff 01 	movl   $0x1,-0xad4(%rbp)
  40dfb6:	00 00 00 
  40dfb9:	eb 3a                	jmp    40dff5 <mbedtls_ssl_handshake_step+0x1895>
  40dfbb:	48 8b 85 20 f5 ff ff 	mov    -0xae0(%rbp),%rax
  40dfc2:	8b 48 20             	mov    0x20(%rax),%ecx
  40dfc5:	3b 8d 10 f5 ff ff    	cmp    -0xaf0(%rbp),%ecx
  40dfcb:	7f 12                	jg     40dfdf <mbedtls_ssl_handshake_step+0x187f>
  40dfcd:	48 8b 85 20 f5 ff ff 	mov    -0xae0(%rbp),%rax
  40dfd4:	8b 48 28             	mov    0x28(%rax),%ecx
  40dfd7:	3b 8d 14 f5 ff ff    	cmp    -0xaec(%rbp),%ecx
  40dfdd:	7d 0c                	jge    40dfeb <mbedtls_ssl_handshake_step+0x188b>
  40dfdf:	c7 85 2c f5 ff ff 01 	movl   $0x1,-0xad4(%rbp)
  40dfe6:	00 00 00 
  40dfe9:	eb 0a                	jmp    40dff5 <mbedtls_ssl_handshake_step+0x1895>
  40dfeb:	c7 85 2c f5 ff ff 00 	movl   $0x0,-0xad4(%rbp)
  40dff2:	00 00 00 
  40dff5:	8b 85 2c f5 ff ff    	mov    -0xad4(%rbp),%eax
  40dffb:	83 f8 00             	cmp    $0x0,%eax
  40dffe:	0f 84 d5 00 00 00    	je     40e0d9 <mbedtls_ssl_handshake_step+0x1979>
  40e004:	48 8b 85 a8 f3 ff ff 	mov    -0xc58(%rbp),%rax
  40e00b:	48 89 85 e0 f4 ff ff 	mov    %rax,-0xb20(%rbp)
  40e012:	c6 85 df f4 ff ff 02 	movb   $0x2,-0xb21(%rbp)
  40e019:	c6 85 de f4 ff ff 2f 	movb   $0x2f,-0xb22(%rbp)
  40e020:	48 83 bd e0 f4 ff ff 	cmpq   $0x0,-0xb20(%rbp)
  40e027:	00 
  40e028:	74 0d                	je     40e037 <mbedtls_ssl_handshake_step+0x18d7>
  40e02a:	48 8b 85 e0 f4 ff ff 	mov    -0xb20(%rbp),%rax
  40e031:	48 83 38 00          	cmpq   $0x0,(%rax)
  40e035:	75 0f                	jne    40e046 <mbedtls_ssl_handshake_step+0x18e6>
  40e037:	c7 85 ec f4 ff ff 00 	movl   $0xffff8f00,-0xb14(%rbp)
  40e03e:	8f ff ff 
  40e041:	e9 84 00 00 00       	jmpq   40e0ca <mbedtls_ssl_handshake_step+0x196a>
  40e046:	48 8b 85 e0 f4 ff ff 	mov    -0xb20(%rbp),%rax
  40e04d:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  40e054:	00 00 00 
  40e057:	48 8b 85 e0 f4 ff ff 	mov    -0xb20(%rbp),%rax
  40e05e:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  40e065:	02 00 00 00 
  40e069:	8a 8d df f4 ff ff    	mov    -0xb21(%rbp),%cl
  40e06f:	48 8b 85 e0 f4 ff ff 	mov    -0xb20(%rbp),%rax
  40e076:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40e07d:	88 08                	mov    %cl,(%rax)
  40e07f:	8a 8d de f4 ff ff    	mov    -0xb22(%rbp),%cl
  40e085:	48 8b 85 e0 f4 ff ff 	mov    -0xb20(%rbp),%rax
  40e08c:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40e093:	88 48 01             	mov    %cl,0x1(%rax)
  40e096:	48 8b bd e0 f4 ff ff 	mov    -0xb20(%rbp),%rdi
  40e09d:	be 01 00 00 00       	mov    $0x1,%esi
  40e0a2:	e8 29 96 ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  40e0a7:	89 85 d8 f4 ff ff    	mov    %eax,-0xb28(%rbp)
  40e0ad:	83 f8 00             	cmp    $0x0,%eax
  40e0b0:	74 0e                	je     40e0c0 <mbedtls_ssl_handshake_step+0x1960>
  40e0b2:	8b 85 d8 f4 ff ff    	mov    -0xb28(%rbp),%eax
  40e0b8:	89 85 ec f4 ff ff    	mov    %eax,-0xb14(%rbp)
  40e0be:	eb 0a                	jmp    40e0ca <mbedtls_ssl_handshake_step+0x196a>
  40e0c0:	c7 85 ec f4 ff ff 00 	movl   $0x0,-0xb14(%rbp)
  40e0c7:	00 00 00 
  40e0ca:	c7 85 b4 f3 ff ff 80 	movl   $0xffff8680,-0xc4c(%rbp)
  40e0d1:	86 ff ff 
  40e0d4:	e9 45 05 00 00       	jmpq   40e61e <mbedtls_ssl_handshake_step+0x1ebe>
  40e0d9:	0f b6 85 7f f3 ff ff 	movzbl -0xc81(%rbp),%eax
  40e0e0:	83 f8 00             	cmp    $0x0,%eax
  40e0e3:	0f 84 d5 00 00 00    	je     40e1be <mbedtls_ssl_handshake_step+0x1a5e>
  40e0e9:	48 8b 85 a8 f3 ff ff 	mov    -0xc58(%rbp),%rax
  40e0f0:	48 89 85 c0 f4 ff ff 	mov    %rax,-0xb40(%rbp)
  40e0f7:	c6 85 bf f4 ff ff 02 	movb   $0x2,-0xb41(%rbp)
  40e0fe:	c6 85 be f4 ff ff 2f 	movb   $0x2f,-0xb42(%rbp)
  40e105:	48 83 bd c0 f4 ff ff 	cmpq   $0x0,-0xb40(%rbp)
  40e10c:	00 
  40e10d:	74 0d                	je     40e11c <mbedtls_ssl_handshake_step+0x19bc>
  40e10f:	48 8b 85 c0 f4 ff ff 	mov    -0xb40(%rbp),%rax
  40e116:	48 83 38 00          	cmpq   $0x0,(%rax)
  40e11a:	75 0f                	jne    40e12b <mbedtls_ssl_handshake_step+0x19cb>
  40e11c:	c7 85 cc f4 ff ff 00 	movl   $0xffff8f00,-0xb34(%rbp)
  40e123:	8f ff ff 
  40e126:	e9 84 00 00 00       	jmpq   40e1af <mbedtls_ssl_handshake_step+0x1a4f>
  40e12b:	48 8b 85 c0 f4 ff ff 	mov    -0xb40(%rbp),%rax
  40e132:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  40e139:	00 00 00 
  40e13c:	48 8b 85 c0 f4 ff ff 	mov    -0xb40(%rbp),%rax
  40e143:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  40e14a:	02 00 00 00 
  40e14e:	8a 8d bf f4 ff ff    	mov    -0xb41(%rbp),%cl
  40e154:	48 8b 85 c0 f4 ff ff 	mov    -0xb40(%rbp),%rax
  40e15b:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40e162:	88 08                	mov    %cl,(%rax)
  40e164:	8a 8d be f4 ff ff    	mov    -0xb42(%rbp),%cl
  40e16a:	48 8b 85 c0 f4 ff ff 	mov    -0xb40(%rbp),%rax
  40e171:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40e178:	88 48 01             	mov    %cl,0x1(%rax)
  40e17b:	48 8b bd c0 f4 ff ff 	mov    -0xb40(%rbp),%rdi
  40e182:	be 01 00 00 00       	mov    $0x1,%esi
  40e187:	e8 44 95 ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  40e18c:	89 85 b8 f4 ff ff    	mov    %eax,-0xb48(%rbp)
  40e192:	83 f8 00             	cmp    $0x0,%eax
  40e195:	74 0e                	je     40e1a5 <mbedtls_ssl_handshake_step+0x1a45>
  40e197:	8b 85 b8 f4 ff ff    	mov    -0xb48(%rbp),%eax
  40e19d:	89 85 cc f4 ff ff    	mov    %eax,-0xb34(%rbp)
  40e1a3:	eb 0a                	jmp    40e1af <mbedtls_ssl_handshake_step+0x1a4f>
  40e1a5:	c7 85 cc f4 ff ff 00 	movl   $0x0,-0xb34(%rbp)
  40e1ac:	00 00 00 
  40e1af:	c7 85 b4 f3 ff ff 80 	movl   $0xffff8680,-0xc4c(%rbp)
  40e1b6:	86 ff ff 
  40e1b9:	e9 60 04 00 00       	jmpq   40e61e <mbedtls_ssl_handshake_step+0x1ebe>
  40e1be:	0f b6 85 7f f3 ff ff 	movzbl -0xc81(%rbp),%eax
  40e1c5:	48 8b 8d a8 f3 ff ff 	mov    -0xc58(%rbp),%rcx
  40e1cc:	48 8b 49 50          	mov    0x50(%rcx),%rcx
  40e1d0:	89 41 0c             	mov    %eax,0xc(%rcx)
  40e1d3:	48 8b 8d 88 f3 ff ff 	mov    -0xc78(%rbp),%rcx
  40e1da:	48 83 c1 28          	add    $0x28,%rcx
  40e1de:	48 03 8d 98 f3 ff ff 	add    -0xc68(%rbp),%rcx
  40e1e5:	48 89 8d 80 f3 ff ff 	mov    %rcx,-0xc80(%rbp)
  40e1ec:	48 83 bd 90 f3 ff ff 	cmpq   $0x0,-0xc70(%rbp)
  40e1f3:	00 
  40e1f4:	0f 84 03 03 00 00    	je     40e4fd <mbedtls_ssl_handshake_step+0x1d9d>
  40e1fa:	48 8b 85 80 f3 ff ff 	mov    -0xc80(%rbp),%rax
  40e201:	0f b6 08             	movzbl (%rax),%ecx
  40e204:	c1 e1 08             	shl    $0x8,%ecx
  40e207:	48 8b 85 80 f3 ff ff 	mov    -0xc80(%rbp),%rax
  40e20e:	0f b6 50 01          	movzbl 0x1(%rax),%edx
  40e212:	09 d1                	or     %edx,%ecx
  40e214:	89 8d 6c f3 ff ff    	mov    %ecx,-0xc94(%rbp)
  40e21a:	48 8b 85 80 f3 ff ff 	mov    -0xc80(%rbp),%rax
  40e221:	0f b6 48 02          	movzbl 0x2(%rax),%ecx
  40e225:	c1 e1 08             	shl    $0x8,%ecx
  40e228:	48 8b 85 80 f3 ff ff 	mov    -0xc80(%rbp),%rax
  40e22f:	0f b6 50 03          	movzbl 0x3(%rax),%edx
  40e233:	09 d1                	or     %edx,%ecx
  40e235:	89 8d 68 f3 ff ff    	mov    %ecx,-0xc98(%rbp)
  40e23b:	8b 8d 68 f3 ff ff    	mov    -0xc98(%rbp),%ecx
  40e241:	83 c1 04             	add    $0x4,%ecx
  40e244:	89 c9                	mov    %ecx,%ecx
  40e246:	89 c8                	mov    %ecx,%eax
  40e248:	48 3b 85 90 f3 ff ff 	cmp    -0xc70(%rbp),%rax
  40e24f:	0f 86 d5 00 00 00    	jbe    40e32a <mbedtls_ssl_handshake_step+0x1bca>
  40e255:	48 8b 85 a8 f3 ff ff 	mov    -0xc58(%rbp),%rax
  40e25c:	48 89 85 70 f4 ff ff 	mov    %rax,-0xb90(%rbp)
  40e263:	c6 85 6f f4 ff ff 02 	movb   $0x2,-0xb91(%rbp)
  40e26a:	c6 85 6e f4 ff ff 32 	movb   $0x32,-0xb92(%rbp)
  40e271:	48 83 bd 70 f4 ff ff 	cmpq   $0x0,-0xb90(%rbp)
  40e278:	00 
  40e279:	74 0d                	je     40e288 <mbedtls_ssl_handshake_step+0x1b28>
  40e27b:	48 8b 85 70 f4 ff ff 	mov    -0xb90(%rbp),%rax
  40e282:	48 83 38 00          	cmpq   $0x0,(%rax)
  40e286:	75 0f                	jne    40e297 <mbedtls_ssl_handshake_step+0x1b37>
  40e288:	c7 85 7c f4 ff ff 00 	movl   $0xffff8f00,-0xb84(%rbp)
  40e28f:	8f ff ff 
  40e292:	e9 84 00 00 00       	jmpq   40e31b <mbedtls_ssl_handshake_step+0x1bbb>
  40e297:	48 8b 85 70 f4 ff ff 	mov    -0xb90(%rbp),%rax
  40e29e:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  40e2a5:	00 00 00 
  40e2a8:	48 8b 85 70 f4 ff ff 	mov    -0xb90(%rbp),%rax
  40e2af:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  40e2b6:	02 00 00 00 
  40e2ba:	8a 8d 6f f4 ff ff    	mov    -0xb91(%rbp),%cl
  40e2c0:	48 8b 85 70 f4 ff ff 	mov    -0xb90(%rbp),%rax
  40e2c7:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40e2ce:	88 08                	mov    %cl,(%rax)
  40e2d0:	8a 8d 6e f4 ff ff    	mov    -0xb92(%rbp),%cl
  40e2d6:	48 8b 85 70 f4 ff ff 	mov    -0xb90(%rbp),%rax
  40e2dd:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40e2e4:	88 48 01             	mov    %cl,0x1(%rax)
  40e2e7:	48 8b bd 70 f4 ff ff 	mov    -0xb90(%rbp),%rdi
  40e2ee:	be 01 00 00 00       	mov    $0x1,%esi
  40e2f3:	e8 d8 93 ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  40e2f8:	89 85 68 f4 ff ff    	mov    %eax,-0xb98(%rbp)
  40e2fe:	83 f8 00             	cmp    $0x0,%eax
  40e301:	74 0e                	je     40e311 <mbedtls_ssl_handshake_step+0x1bb1>
  40e303:	8b 85 68 f4 ff ff    	mov    -0xb98(%rbp),%eax
  40e309:	89 85 7c f4 ff ff    	mov    %eax,-0xb84(%rbp)
  40e30f:	eb 0a                	jmp    40e31b <mbedtls_ssl_handshake_step+0x1bbb>
  40e311:	c7 85 7c f4 ff ff 00 	movl   $0x0,-0xb84(%rbp)
  40e318:	00 00 00 
  40e31b:	c7 85 b4 f3 ff ff 80 	movl   $0xffff8680,-0xc4c(%rbp)
  40e322:	86 ff ff 
  40e325:	e9 f4 02 00 00       	jmpq   40e61e <mbedtls_ssl_handshake_step+0x1ebe>
  40e32a:	81 bd 6c f3 ff ff 01 	cmpl   $0xff01,-0xc94(%rbp)
  40e331:	ff 00 00 
  40e334:	0f 85 5d 01 00 00    	jne    40e497 <mbedtls_ssl_handshake_step+0x1d37>
  40e33a:	48 8b 85 a8 f3 ff ff 	mov    -0xc58(%rbp),%rax
  40e341:	48 8b 8d 80 f3 ff ff 	mov    -0xc80(%rbp),%rcx
  40e348:	48 83 c1 04          	add    $0x4,%rcx
  40e34c:	8b 95 68 f3 ff ff    	mov    -0xc98(%rbp),%edx
  40e352:	89 d6                	mov    %edx,%esi
  40e354:	48 89 85 20 f4 ff ff 	mov    %rax,-0xbe0(%rbp)
  40e35b:	48 89 8d 18 f4 ff ff 	mov    %rcx,-0xbe8(%rbp)
  40e362:	48 89 b5 10 f4 ff ff 	mov    %rsi,-0xbf0(%rbp)
  40e369:	48 83 bd 10 f4 ff ff 	cmpq   $0x1,-0xbf0(%rbp)
  40e370:	01 
  40e371:	75 13                	jne    40e386 <mbedtls_ssl_handshake_step+0x1c26>
  40e373:	48 8b 85 18 f4 ff ff 	mov    -0xbe8(%rbp),%rax
  40e37a:	0f b6 08             	movzbl (%rax),%ecx
  40e37d:	83 f9 00             	cmp    $0x0,%ecx
  40e380:	0f 84 d2 00 00 00    	je     40e458 <mbedtls_ssl_handshake_step+0x1cf8>
  40e386:	48 8b 85 20 f4 ff ff 	mov    -0xbe0(%rbp),%rax
  40e38d:	48 89 85 38 f4 ff ff 	mov    %rax,-0xbc8(%rbp)
  40e394:	c6 85 37 f4 ff ff 02 	movb   $0x2,-0xbc9(%rbp)
  40e39b:	c6 85 36 f4 ff ff 28 	movb   $0x28,-0xbca(%rbp)
  40e3a2:	48 83 bd 38 f4 ff ff 	cmpq   $0x0,-0xbc8(%rbp)
  40e3a9:	00 
  40e3aa:	74 0d                	je     40e3b9 <mbedtls_ssl_handshake_step+0x1c59>
  40e3ac:	48 8b 85 38 f4 ff ff 	mov    -0xbc8(%rbp),%rax
  40e3b3:	48 83 38 00          	cmpq   $0x0,(%rax)
  40e3b7:	75 0f                	jne    40e3c8 <mbedtls_ssl_handshake_step+0x1c68>
  40e3b9:	c7 85 44 f4 ff ff 00 	movl   $0xffff8f00,-0xbbc(%rbp)
  40e3c0:	8f ff ff 
  40e3c3:	e9 84 00 00 00       	jmpq   40e44c <mbedtls_ssl_handshake_step+0x1cec>
  40e3c8:	48 8b 85 38 f4 ff ff 	mov    -0xbc8(%rbp),%rax
  40e3cf:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  40e3d6:	00 00 00 
  40e3d9:	48 8b 85 38 f4 ff ff 	mov    -0xbc8(%rbp),%rax
  40e3e0:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  40e3e7:	02 00 00 00 
  40e3eb:	8a 8d 37 f4 ff ff    	mov    -0xbc9(%rbp),%cl
  40e3f1:	48 8b 85 38 f4 ff ff 	mov    -0xbc8(%rbp),%rax
  40e3f8:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40e3ff:	88 08                	mov    %cl,(%rax)
  40e401:	8a 8d 36 f4 ff ff    	mov    -0xbca(%rbp),%cl
  40e407:	48 8b 85 38 f4 ff ff 	mov    -0xbc8(%rbp),%rax
  40e40e:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40e415:	88 48 01             	mov    %cl,0x1(%rax)
  40e418:	48 8b bd 38 f4 ff ff 	mov    -0xbc8(%rbp),%rdi
  40e41f:	be 01 00 00 00       	mov    $0x1,%esi
  40e424:	e8 a7 92 ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  40e429:	89 85 30 f4 ff ff    	mov    %eax,-0xbd0(%rbp)
  40e42f:	83 f8 00             	cmp    $0x0,%eax
  40e432:	74 0e                	je     40e442 <mbedtls_ssl_handshake_step+0x1ce2>
  40e434:	8b 85 30 f4 ff ff    	mov    -0xbd0(%rbp),%eax
  40e43a:	89 85 44 f4 ff ff    	mov    %eax,-0xbbc(%rbp)
  40e440:	eb 0a                	jmp    40e44c <mbedtls_ssl_handshake_step+0x1cec>
  40e442:	c7 85 44 f4 ff ff 00 	movl   $0x0,-0xbbc(%rbp)
  40e449:	00 00 00 
  40e44c:	c7 85 2c f4 ff ff 80 	movl   $0xffff8680,-0xbd4(%rbp)
  40e453:	86 ff ff 
  40e456:	eb 1b                	jmp    40e473 <mbedtls_ssl_handshake_step+0x1d13>
  40e458:	48 8b 85 20 f4 ff ff 	mov    -0xbe0(%rbp),%rax
  40e45f:	c7 80 58 01 00 00 01 	movl   $0x1,0x158(%rax)
  40e466:	00 00 00 
  40e469:	c7 85 2c f4 ff ff 00 	movl   $0x0,-0xbd4(%rbp)
  40e470:	00 00 00 
  40e473:	8b 85 2c f4 ff ff    	mov    -0xbd4(%rbp),%eax
  40e479:	89 85 a4 f3 ff ff    	mov    %eax,-0xc5c(%rbp)
  40e47f:	83 f8 00             	cmp    $0x0,%eax
  40e482:	74 11                	je     40e495 <mbedtls_ssl_handshake_step+0x1d35>
  40e484:	8b 85 a4 f3 ff ff    	mov    -0xc5c(%rbp),%eax
  40e48a:	89 85 b4 f3 ff ff    	mov    %eax,-0xc4c(%rbp)
  40e490:	e9 89 01 00 00       	jmpq   40e61e <mbedtls_ssl_handshake_step+0x1ebe>
  40e495:	eb 02                	jmp    40e499 <mbedtls_ssl_handshake_step+0x1d39>
  40e497:	eb 00                	jmp    40e499 <mbedtls_ssl_handshake_step+0x1d39>
  40e499:	8b 85 68 f3 ff ff    	mov    -0xc98(%rbp),%eax
  40e49f:	83 c0 04             	add    $0x4,%eax
  40e4a2:	89 c0                	mov    %eax,%eax
  40e4a4:	89 c1                	mov    %eax,%ecx
  40e4a6:	48 8b 95 90 f3 ff ff 	mov    -0xc70(%rbp),%rdx
  40e4ad:	48 29 ca             	sub    %rcx,%rdx
  40e4b0:	48 89 95 90 f3 ff ff 	mov    %rdx,-0xc70(%rbp)
  40e4b7:	8b 85 68 f3 ff ff    	mov    -0xc98(%rbp),%eax
  40e4bd:	83 c0 04             	add    $0x4,%eax
  40e4c0:	48 8b 8d 80 f3 ff ff 	mov    -0xc80(%rbp),%rcx
  40e4c7:	89 c0                	mov    %eax,%eax
  40e4c9:	89 c2                	mov    %eax,%edx
  40e4cb:	48 01 d1             	add    %rdx,%rcx
  40e4ce:	48 89 8d 80 f3 ff ff 	mov    %rcx,-0xc80(%rbp)
  40e4d5:	48 83 bd 90 f3 ff ff 	cmpq   $0x0,-0xc70(%rbp)
  40e4dc:	00 
  40e4dd:	76 19                	jbe    40e4f8 <mbedtls_ssl_handshake_step+0x1d98>
  40e4df:	48 83 bd 90 f3 ff ff 	cmpq   $0x4,-0xc70(%rbp)
  40e4e6:	04 
  40e4e7:	73 0f                	jae    40e4f8 <mbedtls_ssl_handshake_step+0x1d98>
  40e4e9:	c7 85 b4 f3 ff ff 80 	movl   $0xffff8680,-0xc4c(%rbp)
  40e4f0:	86 ff ff 
  40e4f3:	e9 26 01 00 00       	jmpq   40e61e <mbedtls_ssl_handshake_step+0x1ebe>
  40e4f8:	e9 ef fc ff ff       	jmpq   40e1ec <mbedtls_ssl_handshake_step+0x1a8c>
  40e4fd:	48 8b 85 a8 f3 ff ff 	mov    -0xc58(%rbp),%rax
  40e504:	83 b8 58 01 00 00 00 	cmpl   $0x0,0x158(%rax)
  40e50b:	75 28                	jne    40e535 <mbedtls_ssl_handshake_step+0x1dd5>
  40e50d:	48 8b 85 a8 f3 ff ff 	mov    -0xc58(%rbp),%rax
  40e514:	48 8b 00             	mov    (%rax),%rax
  40e517:	8a 88 98 00 00 00    	mov    0x98(%rax),%cl
  40e51d:	c0 e9 04             	shr    $0x4,%cl
  40e520:	80 e1 03             	and    $0x3,%cl
  40e523:	0f b6 d1             	movzbl %cl,%edx
  40e526:	83 fa 02             	cmp    $0x2,%edx
  40e529:	75 0a                	jne    40e535 <mbedtls_ssl_handshake_step+0x1dd5>
  40e52b:	c7 85 78 f3 ff ff 01 	movl   $0x1,-0xc88(%rbp)
  40e532:	00 00 00 
  40e535:	83 bd 78 f3 ff ff 01 	cmpl   $0x1,-0xc88(%rbp)
  40e53c:	0f 85 d2 00 00 00    	jne    40e614 <mbedtls_ssl_handshake_step+0x1eb4>
  40e542:	48 8b 85 a8 f3 ff ff 	mov    -0xc58(%rbp),%rax
  40e549:	48 89 85 e0 f3 ff ff 	mov    %rax,-0xc20(%rbp)
  40e550:	c6 85 df f3 ff ff 02 	movb   $0x2,-0xc21(%rbp)
  40e557:	c6 85 de f3 ff ff 28 	movb   $0x28,-0xc22(%rbp)
  40e55e:	48 83 bd e0 f3 ff ff 	cmpq   $0x0,-0xc20(%rbp)
  40e565:	00 
  40e566:	74 0d                	je     40e575 <mbedtls_ssl_handshake_step+0x1e15>
  40e568:	48 8b 85 e0 f3 ff ff 	mov    -0xc20(%rbp),%rax
  40e56f:	48 83 38 00          	cmpq   $0x0,(%rax)
  40e573:	75 0f                	jne    40e584 <mbedtls_ssl_handshake_step+0x1e24>
  40e575:	c7 85 ec f3 ff ff 00 	movl   $0xffff8f00,-0xc14(%rbp)
  40e57c:	8f ff ff 
  40e57f:	e9 84 00 00 00       	jmpq   40e608 <mbedtls_ssl_handshake_step+0x1ea8>
  40e584:	48 8b 85 e0 f3 ff ff 	mov    -0xc20(%rbp),%rax
  40e58b:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  40e592:	00 00 00 
  40e595:	48 8b 85 e0 f3 ff ff 	mov    -0xc20(%rbp),%rax
  40e59c:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  40e5a3:	02 00 00 00 
  40e5a7:	8a 8d df f3 ff ff    	mov    -0xc21(%rbp),%cl
  40e5ad:	48 8b 85 e0 f3 ff ff 	mov    -0xc20(%rbp),%rax
  40e5b4:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40e5bb:	88 08                	mov    %cl,(%rax)
  40e5bd:	8a 8d de f3 ff ff    	mov    -0xc22(%rbp),%cl
  40e5c3:	48 8b 85 e0 f3 ff ff 	mov    -0xc20(%rbp),%rax
  40e5ca:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40e5d1:	88 48 01             	mov    %cl,0x1(%rax)
  40e5d4:	48 8b bd e0 f3 ff ff 	mov    -0xc20(%rbp),%rdi
  40e5db:	be 01 00 00 00       	mov    $0x1,%esi
  40e5e0:	e8 eb 90 ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  40e5e5:	89 85 d8 f3 ff ff    	mov    %eax,-0xc28(%rbp)
  40e5eb:	83 f8 00             	cmp    $0x0,%eax
  40e5ee:	74 0e                	je     40e5fe <mbedtls_ssl_handshake_step+0x1e9e>
  40e5f0:	8b 85 d8 f3 ff ff    	mov    -0xc28(%rbp),%eax
  40e5f6:	89 85 ec f3 ff ff    	mov    %eax,-0xc14(%rbp)
  40e5fc:	eb 0a                	jmp    40e608 <mbedtls_ssl_handshake_step+0x1ea8>
  40e5fe:	c7 85 ec f3 ff ff 00 	movl   $0x0,-0xc14(%rbp)
  40e605:	00 00 00 
  40e608:	c7 85 b4 f3 ff ff 80 	movl   $0xffff8680,-0xc4c(%rbp)
  40e60f:	86 ff ff 
  40e612:	eb 0a                	jmp    40e61e <mbedtls_ssl_handshake_step+0x1ebe>
  40e614:	c7 85 b4 f3 ff ff 00 	movl   $0x0,-0xc4c(%rbp)
  40e61b:	00 00 00 
  40e61e:	8b 85 b4 f3 ff ff    	mov    -0xc4c(%rbp),%eax
  40e624:	89 85 74 f2 ff ff    	mov    %eax,-0xd8c(%rbp)
  40e62a:	e9 e8 16 00 00       	jmpq   40fd17 <mbedtls_ssl_handshake_step+0x35b7>
  40e62f:	48 8b bd 78 f2 ff ff 	mov    -0xd88(%rbp),%rdi
  40e636:	e8 75 b8 ff ff       	callq  409eb0 <mbedtls_ssl_parse_certificate>
  40e63b:	89 85 74 f2 ff ff    	mov    %eax,-0xd8c(%rbp)
  40e641:	e9 d1 16 00 00       	jmpq   40fd17 <mbedtls_ssl_handshake_step+0x35b7>
  40e646:	48 8b 85 78 f2 ff ff 	mov    -0xd88(%rbp),%rax
  40e64d:	48 89 85 08 f6 ff ff 	mov    %rax,-0x9f8(%rbp)
  40e654:	48 8b 85 08 f6 ff ff 	mov    -0x9f8(%rbp),%rax
  40e65b:	48 8b 40 78          	mov    0x78(%rax),%rax
  40e65f:	48 8b 00             	mov    (%rax),%rax
  40e662:	48 89 85 f8 f5 ff ff 	mov    %rax,-0xa08(%rbp)
  40e669:	48 c7 85 f0 f5 ff ff 	movq   $0x0,-0xa10(%rbp)
  40e670:	00 00 00 00 
  40e674:	48 c7 85 e8 f5 ff ff 	movq   $0x0,-0xa18(%rbp)
  40e67b:	00 00 00 00 
  40e67f:	48 8b 85 f8 f5 ff ff 	mov    -0xa08(%rbp),%rax
  40e686:	83 78 18 01          	cmpl   $0x1,0x18(%rax)
  40e68a:	75 1f                	jne    40e6ab <mbedtls_ssl_handshake_step+0x1f4b>
  40e68c:	48 8b 85 08 f6 ff ff 	mov    -0x9f8(%rbp),%rax
  40e693:	8b 48 08             	mov    0x8(%rax),%ecx
  40e696:	83 c1 01             	add    $0x1,%ecx
  40e699:	89 48 08             	mov    %ecx,0x8(%rax)
  40e69c:	c7 85 14 f6 ff ff 00 	movl   $0x0,-0x9ec(%rbp)
  40e6a3:	00 00 00 
  40e6a6:	e9 a0 02 00 00       	jmpq   40e94b <mbedtls_ssl_handshake_step+0x21eb>
  40e6ab:	48 8b bd 08 f6 ff ff 	mov    -0x9f8(%rbp),%rdi
  40e6b2:	be 01 00 00 00       	mov    $0x1,%esi
  40e6b7:	e8 74 9b ff ff       	callq  408230 <mbedtls_ssl_read_record>
  40e6bc:	89 85 04 f6 ff ff    	mov    %eax,-0x9fc(%rbp)
  40e6c2:	83 f8 00             	cmp    $0x0,%eax
  40e6c5:	74 11                	je     40e6d8 <mbedtls_ssl_handshake_step+0x1f78>
  40e6c7:	8b 85 04 f6 ff ff    	mov    -0x9fc(%rbp),%eax
  40e6cd:	89 85 14 f6 ff ff    	mov    %eax,-0x9ec(%rbp)
  40e6d3:	e9 73 02 00 00       	jmpq   40e94b <mbedtls_ssl_handshake_step+0x21eb>
  40e6d8:	48 8b 85 08 f6 ff ff 	mov    -0x9f8(%rbp),%rax
  40e6df:	83 b8 d0 00 00 00 16 	cmpl   $0x16,0xd0(%rax)
  40e6e6:	0f 84 d5 00 00 00    	je     40e7c1 <mbedtls_ssl_handshake_step+0x2061>
  40e6ec:	48 8b 85 08 f6 ff ff 	mov    -0x9f8(%rbp),%rax
  40e6f3:	48 89 85 20 f6 ff ff 	mov    %rax,-0x9e0(%rbp)
  40e6fa:	c6 85 1f f6 ff ff 02 	movb   $0x2,-0x9e1(%rbp)
  40e701:	c6 85 1e f6 ff ff 0a 	movb   $0xa,-0x9e2(%rbp)
  40e708:	48 83 bd 20 f6 ff ff 	cmpq   $0x0,-0x9e0(%rbp)
  40e70f:	00 
  40e710:	74 0d                	je     40e71f <mbedtls_ssl_handshake_step+0x1fbf>
  40e712:	48 8b 85 20 f6 ff ff 	mov    -0x9e0(%rbp),%rax
  40e719:	48 83 38 00          	cmpq   $0x0,(%rax)
  40e71d:	75 0f                	jne    40e72e <mbedtls_ssl_handshake_step+0x1fce>
  40e71f:	c7 85 2c f6 ff ff 00 	movl   $0xffff8f00,-0x9d4(%rbp)
  40e726:	8f ff ff 
  40e729:	e9 84 00 00 00       	jmpq   40e7b2 <mbedtls_ssl_handshake_step+0x2052>
  40e72e:	48 8b 85 20 f6 ff ff 	mov    -0x9e0(%rbp),%rax
  40e735:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  40e73c:	00 00 00 
  40e73f:	48 8b 85 20 f6 ff ff 	mov    -0x9e0(%rbp),%rax
  40e746:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  40e74d:	02 00 00 00 
  40e751:	8a 8d 1f f6 ff ff    	mov    -0x9e1(%rbp),%cl
  40e757:	48 8b 85 20 f6 ff ff 	mov    -0x9e0(%rbp),%rax
  40e75e:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40e765:	88 08                	mov    %cl,(%rax)
  40e767:	8a 8d 1e f6 ff ff    	mov    -0x9e2(%rbp),%cl
  40e76d:	48 8b 85 20 f6 ff ff 	mov    -0x9e0(%rbp),%rax
  40e774:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40e77b:	88 48 01             	mov    %cl,0x1(%rax)
  40e77e:	48 8b bd 20 f6 ff ff 	mov    -0x9e0(%rbp),%rdi
  40e785:	be 01 00 00 00       	mov    $0x1,%esi
  40e78a:	e8 41 8f ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  40e78f:	89 85 18 f6 ff ff    	mov    %eax,-0x9e8(%rbp)
  40e795:	83 f8 00             	cmp    $0x0,%eax
  40e798:	74 0e                	je     40e7a8 <mbedtls_ssl_handshake_step+0x2048>
  40e79a:	8b 85 18 f6 ff ff    	mov    -0x9e8(%rbp),%eax
  40e7a0:	89 85 2c f6 ff ff    	mov    %eax,-0x9d4(%rbp)
  40e7a6:	eb 0a                	jmp    40e7b2 <mbedtls_ssl_handshake_step+0x2052>
  40e7a8:	c7 85 2c f6 ff ff 00 	movl   $0x0,-0x9d4(%rbp)
  40e7af:	00 00 00 
  40e7b2:	c7 85 14 f6 ff ff 00 	movl   $0xffff8900,-0x9ec(%rbp)
  40e7b9:	89 ff ff 
  40e7bc:	e9 8a 01 00 00       	jmpq   40e94b <mbedtls_ssl_handshake_step+0x21eb>
  40e7c1:	48 8b 85 08 f6 ff ff 	mov    -0x9f8(%rbp),%rax
  40e7c8:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  40e7cf:	0f b6 08             	movzbl (%rax),%ecx
  40e7d2:	83 f9 0c             	cmp    $0xc,%ecx
  40e7d5:	0f 84 1c 01 00 00    	je     40e8f7 <mbedtls_ssl_handshake_step+0x2197>
  40e7db:	48 8b 85 f8 f5 ff ff 	mov    -0xa08(%rbp),%rax
  40e7e2:	83 78 18 05          	cmpl   $0x5,0x18(%rax)
  40e7e6:	74 0d                	je     40e7f5 <mbedtls_ssl_handshake_step+0x2095>
  40e7e8:	48 8b 85 f8 f5 ff ff 	mov    -0xa08(%rbp),%rax
  40e7ef:	83 78 18 07          	cmpl   $0x7,0x18(%rax)
  40e7f3:	75 30                	jne    40e825 <mbedtls_ssl_handshake_step+0x20c5>
  40e7f5:	48 8b 85 08 f6 ff ff 	mov    -0x9f8(%rbp),%rax
  40e7fc:	c7 80 f4 00 00 00 01 	movl   $0x1,0xf4(%rax)
  40e803:	00 00 00 
  40e806:	48 8b 85 08 f6 ff ff 	mov    -0x9f8(%rbp),%rax
  40e80d:	8b 48 08             	mov    0x8(%rax),%ecx
  40e810:	83 c1 01             	add    $0x1,%ecx
  40e813:	89 48 08             	mov    %ecx,0x8(%rax)
  40e816:	c7 85 14 f6 ff ff 00 	movl   $0x0,-0x9ec(%rbp)
  40e81d:	00 00 00 
  40e820:	e9 26 01 00 00       	jmpq   40e94b <mbedtls_ssl_handshake_step+0x21eb>
  40e825:	48 8b 85 08 f6 ff ff 	mov    -0x9f8(%rbp),%rax
  40e82c:	48 89 85 38 f6 ff ff 	mov    %rax,-0x9c8(%rbp)
  40e833:	c6 85 37 f6 ff ff 02 	movb   $0x2,-0x9c9(%rbp)
  40e83a:	c6 85 36 f6 ff ff 0a 	movb   $0xa,-0x9ca(%rbp)
  40e841:	48 83 bd 38 f6 ff ff 	cmpq   $0x0,-0x9c8(%rbp)
  40e848:	00 
  40e849:	74 0d                	je     40e858 <mbedtls_ssl_handshake_step+0x20f8>
  40e84b:	48 8b 85 38 f6 ff ff 	mov    -0x9c8(%rbp),%rax
  40e852:	48 83 38 00          	cmpq   $0x0,(%rax)
  40e856:	75 0f                	jne    40e867 <mbedtls_ssl_handshake_step+0x2107>
  40e858:	c7 85 44 f6 ff ff 00 	movl   $0xffff8f00,-0x9bc(%rbp)
  40e85f:	8f ff ff 
  40e862:	e9 84 00 00 00       	jmpq   40e8eb <mbedtls_ssl_handshake_step+0x218b>
  40e867:	48 8b 85 38 f6 ff ff 	mov    -0x9c8(%rbp),%rax
  40e86e:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  40e875:	00 00 00 
  40e878:	48 8b 85 38 f6 ff ff 	mov    -0x9c8(%rbp),%rax
  40e87f:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  40e886:	02 00 00 00 
  40e88a:	8a 8d 37 f6 ff ff    	mov    -0x9c9(%rbp),%cl
  40e890:	48 8b 85 38 f6 ff ff 	mov    -0x9c8(%rbp),%rax
  40e897:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40e89e:	88 08                	mov    %cl,(%rax)
  40e8a0:	8a 8d 36 f6 ff ff    	mov    -0x9ca(%rbp),%cl
  40e8a6:	48 8b 85 38 f6 ff ff 	mov    -0x9c8(%rbp),%rax
  40e8ad:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40e8b4:	88 48 01             	mov    %cl,0x1(%rax)
  40e8b7:	48 8b bd 38 f6 ff ff 	mov    -0x9c8(%rbp),%rdi
  40e8be:	be 01 00 00 00       	mov    $0x1,%esi
  40e8c3:	e8 08 8e ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  40e8c8:	89 85 30 f6 ff ff    	mov    %eax,-0x9d0(%rbp)
  40e8ce:	83 f8 00             	cmp    $0x0,%eax
  40e8d1:	74 0e                	je     40e8e1 <mbedtls_ssl_handshake_step+0x2181>
  40e8d3:	8b 85 30 f6 ff ff    	mov    -0x9d0(%rbp),%eax
  40e8d9:	89 85 44 f6 ff ff    	mov    %eax,-0x9bc(%rbp)
  40e8df:	eb 0a                	jmp    40e8eb <mbedtls_ssl_handshake_step+0x218b>
  40e8e1:	c7 85 44 f6 ff ff 00 	movl   $0x0,-0x9bc(%rbp)
  40e8e8:	00 00 00 
  40e8eb:	c7 85 14 f6 ff ff 00 	movl   $0xffff8900,-0x9ec(%rbp)
  40e8f2:	89 ff ff 
  40e8f5:	eb 54                	jmp    40e94b <mbedtls_ssl_handshake_step+0x21eb>
  40e8f7:	48 8b 85 08 f6 ff ff 	mov    -0x9f8(%rbp),%rax
  40e8fe:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  40e905:	48 8b 8d 08 f6 ff ff 	mov    -0x9f8(%rbp),%rcx
  40e90c:	48 89 8d 48 f6 ff ff 	mov    %rcx,-0x9b8(%rbp)
  40e913:	48 83 c0 04          	add    $0x4,%rax
  40e917:	48 89 85 f0 f5 ff ff 	mov    %rax,-0xa10(%rbp)
  40e91e:	48 8b 85 08 f6 ff ff 	mov    -0x9f8(%rbp),%rax
  40e925:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  40e92c:	48 8b 8d 08 f6 ff ff 	mov    -0x9f8(%rbp),%rcx
  40e933:	48 03 81 e8 00 00 00 	add    0xe8(%rcx),%rax
  40e93a:	48 89 85 e8 f5 ff ff 	mov    %rax,-0xa18(%rbp)
  40e941:	c7 85 14 f6 ff ff 00 	movl   $0xffff9400,-0x9ec(%rbp)
  40e948:	94 ff ff 
  40e94b:	8b 85 14 f6 ff ff    	mov    -0x9ec(%rbp),%eax
  40e951:	89 85 74 f2 ff ff    	mov    %eax,-0xd8c(%rbp)
  40e957:	e9 bb 13 00 00       	jmpq   40fd17 <mbedtls_ssl_handshake_step+0x35b7>
  40e95c:	48 8b 85 78 f2 ff ff 	mov    -0xd88(%rbp),%rax
  40e963:	48 89 85 80 f6 ff ff 	mov    %rax,-0x980(%rbp)
  40e96a:	48 c7 85 68 f6 ff ff 	movq   $0x0,-0x998(%rbp)
  40e971:	00 00 00 00 
  40e975:	48 c7 85 60 f6 ff ff 	movq   $0x0,-0x9a0(%rbp)
  40e97c:	00 00 00 00 
  40e980:	48 c7 85 58 f6 ff ff 	movq   $0x0,-0x9a8(%rbp)
  40e987:	00 00 00 00 
  40e98b:	48 8b 85 80 f6 ff ff 	mov    -0x980(%rbp),%rax
  40e992:	48 8b 40 78          	mov    0x78(%rax),%rax
  40e996:	48 8b 00             	mov    (%rax),%rax
  40e999:	48 89 85 50 f6 ff ff 	mov    %rax,-0x9b0(%rbp)
  40e9a0:	48 8b 85 50 f6 ff ff 	mov    -0x9b0(%rbp),%rax
  40e9a7:	48 89 85 90 f6 ff ff 	mov    %rax,-0x970(%rbp)
  40e9ae:	48 8b 85 90 f6 ff ff 	mov    -0x970(%rbp),%rax
  40e9b5:	8b 48 18             	mov    0x18(%rax),%ecx
  40e9b8:	89 ca                	mov    %ecx,%edx
  40e9ba:	83 c2 ff             	add    $0xffffffff,%edx
  40e9bd:	83 ea 04             	sub    $0x4,%edx
  40e9c0:	89 8d 4c f2 ff ff    	mov    %ecx,-0xdb4(%rbp)
  40e9c6:	89 95 48 f2 ff ff    	mov    %edx,-0xdb8(%rbp)
  40e9cc:	72 18                	jb     40e9e6 <mbedtls_ssl_handshake_step+0x2286>
  40e9ce:	eb 00                	jmp    40e9d0 <mbedtls_ssl_handshake_step+0x2270>
  40e9d0:	8b 85 4c f2 ff ff    	mov    -0xdb4(%rbp),%eax
  40e9d6:	83 c0 f7             	add    $0xfffffff7,%eax
  40e9d9:	83 e8 01             	sub    $0x1,%eax
  40e9dc:	89 85 44 f2 ff ff    	mov    %eax,-0xdbc(%rbp)
  40e9e2:	77 0e                	ja     40e9f2 <mbedtls_ssl_handshake_step+0x2292>
  40e9e4:	eb 00                	jmp    40e9e6 <mbedtls_ssl_handshake_step+0x2286>
  40e9e6:	c7 85 9c f6 ff ff 01 	movl   $0x1,-0x964(%rbp)
  40e9ed:	00 00 00 
  40e9f0:	eb 0a                	jmp    40e9fc <mbedtls_ssl_handshake_step+0x229c>
  40e9f2:	c7 85 9c f6 ff ff 00 	movl   $0x0,-0x964(%rbp)
  40e9f9:	00 00 00 
  40e9fc:	8b 85 9c f6 ff ff    	mov    -0x964(%rbp),%eax
  40ea02:	83 f8 00             	cmp    $0x0,%eax
  40ea05:	75 1f                	jne    40ea26 <mbedtls_ssl_handshake_step+0x22c6>
  40ea07:	48 8b 85 80 f6 ff ff 	mov    -0x980(%rbp),%rax
  40ea0e:	8b 48 08             	mov    0x8(%rax),%ecx
  40ea11:	83 c1 01             	add    $0x1,%ecx
  40ea14:	89 48 08             	mov    %ecx,0x8(%rax)
  40ea17:	c7 85 8c f6 ff ff 00 	movl   $0x0,-0x974(%rbp)
  40ea1e:	00 00 00 
  40ea21:	e9 35 05 00 00       	jmpq   40ef5b <mbedtls_ssl_handshake_step+0x27fb>
  40ea26:	48 8b bd 80 f6 ff ff 	mov    -0x980(%rbp),%rdi
  40ea2d:	be 01 00 00 00       	mov    $0x1,%esi
  40ea32:	e8 f9 97 ff ff       	callq  408230 <mbedtls_ssl_read_record>
  40ea37:	89 85 7c f6 ff ff    	mov    %eax,-0x984(%rbp)
  40ea3d:	83 f8 00             	cmp    $0x0,%eax
  40ea40:	74 11                	je     40ea53 <mbedtls_ssl_handshake_step+0x22f3>
  40ea42:	8b 85 7c f6 ff ff    	mov    -0x984(%rbp),%eax
  40ea48:	89 85 8c f6 ff ff    	mov    %eax,-0x974(%rbp)
  40ea4e:	e9 08 05 00 00       	jmpq   40ef5b <mbedtls_ssl_handshake_step+0x27fb>
  40ea53:	48 8b 85 80 f6 ff ff 	mov    -0x980(%rbp),%rax
  40ea5a:	83 b8 d0 00 00 00 16 	cmpl   $0x16,0xd0(%rax)
  40ea61:	0f 84 d5 00 00 00    	je     40eb3c <mbedtls_ssl_handshake_step+0x23dc>
  40ea67:	48 8b 85 80 f6 ff ff 	mov    -0x980(%rbp),%rax
  40ea6e:	48 89 85 c0 f6 ff ff 	mov    %rax,-0x940(%rbp)
  40ea75:	c6 85 bf f6 ff ff 02 	movb   $0x2,-0x941(%rbp)
  40ea7c:	c6 85 be f6 ff ff 0a 	movb   $0xa,-0x942(%rbp)
  40ea83:	48 83 bd c0 f6 ff ff 	cmpq   $0x0,-0x940(%rbp)
  40ea8a:	00 
  40ea8b:	74 0d                	je     40ea9a <mbedtls_ssl_handshake_step+0x233a>
  40ea8d:	48 8b 85 c0 f6 ff ff 	mov    -0x940(%rbp),%rax
  40ea94:	48 83 38 00          	cmpq   $0x0,(%rax)
  40ea98:	75 0f                	jne    40eaa9 <mbedtls_ssl_handshake_step+0x2349>
  40ea9a:	c7 85 cc f6 ff ff 00 	movl   $0xffff8f00,-0x934(%rbp)
  40eaa1:	8f ff ff 
  40eaa4:	e9 84 00 00 00       	jmpq   40eb2d <mbedtls_ssl_handshake_step+0x23cd>
  40eaa9:	48 8b 85 c0 f6 ff ff 	mov    -0x940(%rbp),%rax
  40eab0:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  40eab7:	00 00 00 
  40eaba:	48 8b 85 c0 f6 ff ff 	mov    -0x940(%rbp),%rax
  40eac1:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  40eac8:	02 00 00 00 
  40eacc:	8a 8d bf f6 ff ff    	mov    -0x941(%rbp),%cl
  40ead2:	48 8b 85 c0 f6 ff ff 	mov    -0x940(%rbp),%rax
  40ead9:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40eae0:	88 08                	mov    %cl,(%rax)
  40eae2:	8a 8d be f6 ff ff    	mov    -0x942(%rbp),%cl
  40eae8:	48 8b 85 c0 f6 ff ff 	mov    -0x940(%rbp),%rax
  40eaef:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40eaf6:	88 48 01             	mov    %cl,0x1(%rax)
  40eaf9:	48 8b bd c0 f6 ff ff 	mov    -0x940(%rbp),%rdi
  40eb00:	be 01 00 00 00       	mov    $0x1,%esi
  40eb05:	e8 c6 8b ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  40eb0a:	89 85 b8 f6 ff ff    	mov    %eax,-0x948(%rbp)
  40eb10:	83 f8 00             	cmp    $0x0,%eax
  40eb13:	74 0e                	je     40eb23 <mbedtls_ssl_handshake_step+0x23c3>
  40eb15:	8b 85 b8 f6 ff ff    	mov    -0x948(%rbp),%eax
  40eb1b:	89 85 cc f6 ff ff    	mov    %eax,-0x934(%rbp)
  40eb21:	eb 0a                	jmp    40eb2d <mbedtls_ssl_handshake_step+0x23cd>
  40eb23:	c7 85 cc f6 ff ff 00 	movl   $0x0,-0x934(%rbp)
  40eb2a:	00 00 00 
  40eb2d:	c7 85 8c f6 ff ff 00 	movl   $0xffff8900,-0x974(%rbp)
  40eb34:	89 ff ff 
  40eb37:	e9 1f 04 00 00       	jmpq   40ef5b <mbedtls_ssl_handshake_step+0x27fb>
  40eb3c:	48 8b 85 80 f6 ff ff 	mov    -0x980(%rbp),%rax
  40eb43:	8b 48 08             	mov    0x8(%rax),%ecx
  40eb46:	83 c1 01             	add    $0x1,%ecx
  40eb49:	89 48 08             	mov    %ecx,0x8(%rax)
  40eb4c:	48 8b 85 80 f6 ff ff 	mov    -0x980(%rbp),%rax
  40eb53:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  40eb5a:	0f b6 08             	movzbl (%rax),%ecx
  40eb5d:	83 f9 0d             	cmp    $0xd,%ecx
  40eb60:	0f 94 c2             	sete   %dl
  40eb63:	80 e2 01             	and    $0x1,%dl
  40eb66:	0f b6 ca             	movzbl %dl,%ecx
  40eb69:	48 8b 85 80 f6 ff ff 	mov    -0x980(%rbp),%rax
  40eb70:	89 88 48 01 00 00    	mov    %ecx,0x148(%rax)
  40eb76:	48 8b 85 80 f6 ff ff 	mov    -0x980(%rbp),%rax
  40eb7d:	83 b8 48 01 00 00 00 	cmpl   $0x0,0x148(%rax)
  40eb84:	75 16                	jne    40eb9c <mbedtls_ssl_handshake_step+0x243c>
  40eb86:	48 8b 85 80 f6 ff ff 	mov    -0x980(%rbp),%rax
  40eb8d:	c7 80 f4 00 00 00 01 	movl   $0x1,0xf4(%rax)
  40eb94:	00 00 00 
  40eb97:	e9 b5 03 00 00       	jmpq   40ef51 <mbedtls_ssl_handshake_step+0x27f1>
  40eb9c:	48 8b 85 80 f6 ff ff 	mov    -0x980(%rbp),%rax
  40eba3:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  40ebaa:	48 89 85 70 f6 ff ff 	mov    %rax,-0x990(%rbp)
  40ebb1:	48 8b 85 80 f6 ff ff 	mov    -0x980(%rbp),%rax
  40ebb8:	48 8b 80 e8 00 00 00 	mov    0xe8(%rax),%rax
  40ebbf:	48 8b 8d 80 f6 ff ff 	mov    -0x980(%rbp),%rcx
  40ebc6:	48 89 8d d0 f6 ff ff 	mov    %rcx,-0x930(%rbp)
  40ebcd:	48 83 f8 04          	cmp    $0x4,%rax
  40ebd1:	0f 87 d5 00 00 00    	ja     40ecac <mbedtls_ssl_handshake_step+0x254c>
  40ebd7:	48 8b 85 80 f6 ff ff 	mov    -0x980(%rbp),%rax
  40ebde:	48 89 85 10 f7 ff ff 	mov    %rax,-0x8f0(%rbp)
  40ebe5:	c6 85 0f f7 ff ff 02 	movb   $0x2,-0x8f1(%rbp)
  40ebec:	c6 85 0e f7 ff ff 32 	movb   $0x32,-0x8f2(%rbp)
  40ebf3:	48 83 bd 10 f7 ff ff 	cmpq   $0x0,-0x8f0(%rbp)
  40ebfa:	00 
  40ebfb:	74 0d                	je     40ec0a <mbedtls_ssl_handshake_step+0x24aa>
  40ebfd:	48 8b 85 10 f7 ff ff 	mov    -0x8f0(%rbp),%rax
  40ec04:	48 83 38 00          	cmpq   $0x0,(%rax)
  40ec08:	75 0f                	jne    40ec19 <mbedtls_ssl_handshake_step+0x24b9>
  40ec0a:	c7 85 1c f7 ff ff 00 	movl   $0xffff8f00,-0x8e4(%rbp)
  40ec11:	8f ff ff 
  40ec14:	e9 84 00 00 00       	jmpq   40ec9d <mbedtls_ssl_handshake_step+0x253d>
  40ec19:	48 8b 85 10 f7 ff ff 	mov    -0x8f0(%rbp),%rax
  40ec20:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  40ec27:	00 00 00 
  40ec2a:	48 8b 85 10 f7 ff ff 	mov    -0x8f0(%rbp),%rax
  40ec31:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  40ec38:	02 00 00 00 
  40ec3c:	8a 8d 0f f7 ff ff    	mov    -0x8f1(%rbp),%cl
  40ec42:	48 8b 85 10 f7 ff ff 	mov    -0x8f0(%rbp),%rax
  40ec49:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40ec50:	88 08                	mov    %cl,(%rax)
  40ec52:	8a 8d 0e f7 ff ff    	mov    -0x8f2(%rbp),%cl
  40ec58:	48 8b 85 10 f7 ff ff 	mov    -0x8f0(%rbp),%rax
  40ec5f:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40ec66:	88 48 01             	mov    %cl,0x1(%rax)
  40ec69:	48 8b bd 10 f7 ff ff 	mov    -0x8f0(%rbp),%rdi
  40ec70:	be 01 00 00 00       	mov    $0x1,%esi
  40ec75:	e8 56 8a ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  40ec7a:	89 85 08 f7 ff ff    	mov    %eax,-0x8f8(%rbp)
  40ec80:	83 f8 00             	cmp    $0x0,%eax
  40ec83:	74 0e                	je     40ec93 <mbedtls_ssl_handshake_step+0x2533>
  40ec85:	8b 85 08 f7 ff ff    	mov    -0x8f8(%rbp),%eax
  40ec8b:	89 85 1c f7 ff ff    	mov    %eax,-0x8e4(%rbp)
  40ec91:	eb 0a                	jmp    40ec9d <mbedtls_ssl_handshake_step+0x253d>
  40ec93:	c7 85 1c f7 ff ff 00 	movl   $0x0,-0x8e4(%rbp)
  40ec9a:	00 00 00 
  40ec9d:	c7 85 8c f6 ff ff 80 	movl   $0xffff8580,-0x974(%rbp)
  40eca4:	85 ff ff 
  40eca7:	e9 af 02 00 00       	jmpq   40ef5b <mbedtls_ssl_handshake_step+0x27fb>
  40ecac:	48 8b 85 70 f6 ff ff 	mov    -0x990(%rbp),%rax
  40ecb3:	48 8b 8d 80 f6 ff ff 	mov    -0x980(%rbp),%rcx
  40ecba:	48 89 8d 20 f7 ff ff 	mov    %rcx,-0x8e0(%rbp)
  40ecc1:	0f b6 50 04          	movzbl 0x4(%rax),%edx
  40ecc5:	89 d0                	mov    %edx,%eax
  40ecc7:	48 89 85 60 f6 ff ff 	mov    %rax,-0x9a0(%rbp)
  40ecce:	48 8b 85 60 f6 ff ff 	mov    -0x9a0(%rbp),%rax
  40ecd5:	48 89 85 68 f6 ff ff 	mov    %rax,-0x998(%rbp)
  40ecdc:	48 8b 85 80 f6 ff ff 	mov    -0x980(%rbp),%rax
  40ece3:	48 8b 80 e8 00 00 00 	mov    0xe8(%rax),%rax
  40ecea:	48 8b 8d 80 f6 ff ff 	mov    -0x980(%rbp),%rcx
  40ecf1:	48 89 8d 28 f7 ff ff 	mov    %rcx,-0x8d8(%rbp)
  40ecf8:	48 8b 8d 68 f6 ff ff 	mov    -0x998(%rbp),%rcx
  40ecff:	48 83 c1 06          	add    $0x6,%rcx
  40ed03:	48 39 c8             	cmp    %rcx,%rax
  40ed06:	0f 87 d5 00 00 00    	ja     40ede1 <mbedtls_ssl_handshake_step+0x2681>
  40ed0c:	48 8b 85 80 f6 ff ff 	mov    -0x980(%rbp),%rax
  40ed13:	48 89 85 f8 f6 ff ff 	mov    %rax,-0x908(%rbp)
  40ed1a:	c6 85 f7 f6 ff ff 02 	movb   $0x2,-0x909(%rbp)
  40ed21:	c6 85 f6 f6 ff ff 32 	movb   $0x32,-0x90a(%rbp)
  40ed28:	48 83 bd f8 f6 ff ff 	cmpq   $0x0,-0x908(%rbp)
  40ed2f:	00 
  40ed30:	74 0d                	je     40ed3f <mbedtls_ssl_handshake_step+0x25df>
  40ed32:	48 8b 85 f8 f6 ff ff 	mov    -0x908(%rbp),%rax
  40ed39:	48 83 38 00          	cmpq   $0x0,(%rax)
  40ed3d:	75 0f                	jne    40ed4e <mbedtls_ssl_handshake_step+0x25ee>
  40ed3f:	c7 85 04 f7 ff ff 00 	movl   $0xffff8f00,-0x8fc(%rbp)
  40ed46:	8f ff ff 
  40ed49:	e9 84 00 00 00       	jmpq   40edd2 <mbedtls_ssl_handshake_step+0x2672>
  40ed4e:	48 8b 85 f8 f6 ff ff 	mov    -0x908(%rbp),%rax
  40ed55:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  40ed5c:	00 00 00 
  40ed5f:	48 8b 85 f8 f6 ff ff 	mov    -0x908(%rbp),%rax
  40ed66:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  40ed6d:	02 00 00 00 
  40ed71:	8a 8d f7 f6 ff ff    	mov    -0x909(%rbp),%cl
  40ed77:	48 8b 85 f8 f6 ff ff 	mov    -0x908(%rbp),%rax
  40ed7e:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40ed85:	88 08                	mov    %cl,(%rax)
  40ed87:	8a 8d f6 f6 ff ff    	mov    -0x90a(%rbp),%cl
  40ed8d:	48 8b 85 f8 f6 ff ff 	mov    -0x908(%rbp),%rax
  40ed94:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40ed9b:	88 48 01             	mov    %cl,0x1(%rax)
  40ed9e:	48 8b bd f8 f6 ff ff 	mov    -0x908(%rbp),%rdi
  40eda5:	be 01 00 00 00       	mov    $0x1,%esi
  40edaa:	e8 21 89 ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  40edaf:	89 85 f0 f6 ff ff    	mov    %eax,-0x910(%rbp)
  40edb5:	83 f8 00             	cmp    $0x0,%eax
  40edb8:	74 0e                	je     40edc8 <mbedtls_ssl_handshake_step+0x2668>
  40edba:	8b 85 f0 f6 ff ff    	mov    -0x910(%rbp),%eax
  40edc0:	89 85 04 f7 ff ff    	mov    %eax,-0x8fc(%rbp)
  40edc6:	eb 0a                	jmp    40edd2 <mbedtls_ssl_handshake_step+0x2672>
  40edc8:	c7 85 04 f7 ff ff 00 	movl   $0x0,-0x8fc(%rbp)
  40edcf:	00 00 00 
  40edd2:	c7 85 8c f6 ff ff 80 	movl   $0xffff8580,-0x974(%rbp)
  40edd9:	85 ff ff 
  40eddc:	e9 7a 01 00 00       	jmpq   40ef5b <mbedtls_ssl_handshake_step+0x27fb>
  40ede1:	48 8b 85 70 f6 ff ff 	mov    -0x990(%rbp),%rax
  40ede8:	48 8b 8d 80 f6 ff ff 	mov    -0x980(%rbp),%rcx
  40edef:	48 89 8d e8 f6 ff ff 	mov    %rcx,-0x918(%rbp)
  40edf6:	48 8b 8d 68 f6 ff ff 	mov    -0x998(%rbp),%rcx
  40edfd:	48 83 c1 05          	add    $0x5,%rcx
  40ee01:	0f b6 14 08          	movzbl (%rax,%rcx,1),%edx
  40ee05:	c1 e2 08             	shl    $0x8,%edx
  40ee08:	48 8b 85 70 f6 ff ff 	mov    -0x990(%rbp),%rax
  40ee0f:	48 8b 8d 80 f6 ff ff 	mov    -0x980(%rbp),%rcx
  40ee16:	48 89 8d e0 f6 ff ff 	mov    %rcx,-0x920(%rbp)
  40ee1d:	48 8b 8d 68 f6 ff ff 	mov    -0x998(%rbp),%rcx
  40ee24:	48 83 c1 06          	add    $0x6,%rcx
  40ee28:	0f b6 34 08          	movzbl (%rax,%rcx,1),%esi
  40ee2c:	09 f2                	or     %esi,%edx
  40ee2e:	48 63 c2             	movslq %edx,%rax
  40ee31:	48 89 85 58 f6 ff ff 	mov    %rax,-0x9a8(%rbp)
  40ee38:	48 8b 85 58 f6 ff ff 	mov    -0x9a8(%rbp),%rax
  40ee3f:	48 03 85 68 f6 ff ff 	add    -0x998(%rbp),%rax
  40ee46:	48 89 85 68 f6 ff ff 	mov    %rax,-0x998(%rbp)
  40ee4d:	48 8b 85 80 f6 ff ff 	mov    -0x980(%rbp),%rax
  40ee54:	48 8b 80 e8 00 00 00 	mov    0xe8(%rax),%rax
  40ee5b:	48 8b 8d 80 f6 ff ff 	mov    -0x980(%rbp),%rcx
  40ee62:	48 89 8d d8 f6 ff ff 	mov    %rcx,-0x928(%rbp)
  40ee69:	48 8b 8d 68 f6 ff ff 	mov    -0x998(%rbp),%rcx
  40ee70:	48 83 c1 07          	add    $0x7,%rcx
  40ee74:	48 39 c8             	cmp    %rcx,%rax
  40ee77:	0f 84 d2 00 00 00    	je     40ef4f <mbedtls_ssl_handshake_step+0x27ef>
  40ee7d:	48 8b 85 80 f6 ff ff 	mov    -0x980(%rbp),%rax
  40ee84:	48 89 85 a8 f6 ff ff 	mov    %rax,-0x958(%rbp)
  40ee8b:	c6 85 a7 f6 ff ff 02 	movb   $0x2,-0x959(%rbp)
  40ee92:	c6 85 a6 f6 ff ff 32 	movb   $0x32,-0x95a(%rbp)
  40ee99:	48 83 bd a8 f6 ff ff 	cmpq   $0x0,-0x958(%rbp)
  40eea0:	00 
  40eea1:	74 0d                	je     40eeb0 <mbedtls_ssl_handshake_step+0x2750>
  40eea3:	48 8b 85 a8 f6 ff ff 	mov    -0x958(%rbp),%rax
  40eeaa:	48 83 38 00          	cmpq   $0x0,(%rax)
  40eeae:	75 0f                	jne    40eebf <mbedtls_ssl_handshake_step+0x275f>
  40eeb0:	c7 85 b4 f6 ff ff 00 	movl   $0xffff8f00,-0x94c(%rbp)
  40eeb7:	8f ff ff 
  40eeba:	e9 84 00 00 00       	jmpq   40ef43 <mbedtls_ssl_handshake_step+0x27e3>
  40eebf:	48 8b 85 a8 f6 ff ff 	mov    -0x958(%rbp),%rax
  40eec6:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  40eecd:	00 00 00 
  40eed0:	48 8b 85 a8 f6 ff ff 	mov    -0x958(%rbp),%rax
  40eed7:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  40eede:	02 00 00 00 
  40eee2:	8a 8d a7 f6 ff ff    	mov    -0x959(%rbp),%cl
  40eee8:	48 8b 85 a8 f6 ff ff 	mov    -0x958(%rbp),%rax
  40eeef:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40eef6:	88 08                	mov    %cl,(%rax)
  40eef8:	8a 8d a6 f6 ff ff    	mov    -0x95a(%rbp),%cl
  40eefe:	48 8b 85 a8 f6 ff ff 	mov    -0x958(%rbp),%rax
  40ef05:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40ef0c:	88 48 01             	mov    %cl,0x1(%rax)
  40ef0f:	48 8b bd a8 f6 ff ff 	mov    -0x958(%rbp),%rdi
  40ef16:	be 01 00 00 00       	mov    $0x1,%esi
  40ef1b:	e8 b0 87 ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  40ef20:	89 85 a0 f6 ff ff    	mov    %eax,-0x960(%rbp)
  40ef26:	83 f8 00             	cmp    $0x0,%eax
  40ef29:	74 0e                	je     40ef39 <mbedtls_ssl_handshake_step+0x27d9>
  40ef2b:	8b 85 a0 f6 ff ff    	mov    -0x960(%rbp),%eax
  40ef31:	89 85 b4 f6 ff ff    	mov    %eax,-0x94c(%rbp)
  40ef37:	eb 0a                	jmp    40ef43 <mbedtls_ssl_handshake_step+0x27e3>
  40ef39:	c7 85 b4 f6 ff ff 00 	movl   $0x0,-0x94c(%rbp)
  40ef40:	00 00 00 
  40ef43:	c7 85 8c f6 ff ff 80 	movl   $0xffff8580,-0x974(%rbp)
  40ef4a:	85 ff ff 
  40ef4d:	eb 0c                	jmp    40ef5b <mbedtls_ssl_handshake_step+0x27fb>
  40ef4f:	eb 00                	jmp    40ef51 <mbedtls_ssl_handshake_step+0x27f1>
  40ef51:	c7 85 8c f6 ff ff 00 	movl   $0x0,-0x974(%rbp)
  40ef58:	00 00 00 
  40ef5b:	8b 85 8c f6 ff ff    	mov    -0x974(%rbp),%eax
  40ef61:	89 85 74 f2 ff ff    	mov    %eax,-0xd8c(%rbp)
  40ef67:	e9 ab 0d 00 00       	jmpq   40fd17 <mbedtls_ssl_handshake_step+0x35b7>
  40ef6c:	48 8b 85 78 f2 ff ff 	mov    -0xd88(%rbp),%rax
  40ef73:	48 89 85 38 f7 ff ff 	mov    %rax,-0x8c8(%rbp)
  40ef7a:	48 8b bd 38 f7 ff ff 	mov    -0x8c8(%rbp),%rdi
  40ef81:	be 01 00 00 00       	mov    $0x1,%esi
  40ef86:	e8 a5 92 ff ff       	callq  408230 <mbedtls_ssl_read_record>
  40ef8b:	89 85 34 f7 ff ff    	mov    %eax,-0x8cc(%rbp)
  40ef91:	83 f8 00             	cmp    $0x0,%eax
  40ef94:	74 11                	je     40efa7 <mbedtls_ssl_handshake_step+0x2847>
  40ef96:	8b 85 34 f7 ff ff    	mov    -0x8cc(%rbp),%eax
  40ef9c:	89 85 44 f7 ff ff    	mov    %eax,-0x8bc(%rbp)
  40efa2:	e9 47 01 00 00       	jmpq   40f0ee <mbedtls_ssl_handshake_step+0x298e>
  40efa7:	48 8b 85 38 f7 ff ff 	mov    -0x8c8(%rbp),%rax
  40efae:	83 b8 d0 00 00 00 16 	cmpl   $0x16,0xd0(%rax)
  40efb5:	74 0f                	je     40efc6 <mbedtls_ssl_handshake_step+0x2866>
  40efb7:	c7 85 44 f7 ff ff 00 	movl   $0xffff8900,-0x8bc(%rbp)
  40efbe:	89 ff ff 
  40efc1:	e9 28 01 00 00       	jmpq   40f0ee <mbedtls_ssl_handshake_step+0x298e>
  40efc6:	48 8b 85 38 f7 ff ff 	mov    -0x8c8(%rbp),%rax
  40efcd:	48 8b 80 e8 00 00 00 	mov    0xe8(%rax),%rax
  40efd4:	48 8b 8d 38 f7 ff ff 	mov    -0x8c8(%rbp),%rcx
  40efdb:	48 89 8d 48 f7 ff ff 	mov    %rcx,-0x8b8(%rbp)
  40efe2:	48 83 f8 04          	cmp    $0x4,%rax
  40efe6:	75 1a                	jne    40f002 <mbedtls_ssl_handshake_step+0x28a2>
  40efe8:	48 8b 85 38 f7 ff ff 	mov    -0x8c8(%rbp),%rax
  40efef:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  40eff6:	0f b6 08             	movzbl (%rax),%ecx
  40eff9:	83 f9 0e             	cmp    $0xe,%ecx
  40effc:	0f 84 d2 00 00 00    	je     40f0d4 <mbedtls_ssl_handshake_step+0x2974>
  40f002:	48 8b 85 38 f7 ff ff 	mov    -0x8c8(%rbp),%rax
  40f009:	48 89 85 58 f7 ff ff 	mov    %rax,-0x8a8(%rbp)
  40f010:	c6 85 57 f7 ff ff 02 	movb   $0x2,-0x8a9(%rbp)
  40f017:	c6 85 56 f7 ff ff 32 	movb   $0x32,-0x8aa(%rbp)
  40f01e:	48 83 bd 58 f7 ff ff 	cmpq   $0x0,-0x8a8(%rbp)
  40f025:	00 
  40f026:	74 0d                	je     40f035 <mbedtls_ssl_handshake_step+0x28d5>
  40f028:	48 8b 85 58 f7 ff ff 	mov    -0x8a8(%rbp),%rax
  40f02f:	48 83 38 00          	cmpq   $0x0,(%rax)
  40f033:	75 0f                	jne    40f044 <mbedtls_ssl_handshake_step+0x28e4>
  40f035:	c7 85 64 f7 ff ff 00 	movl   $0xffff8f00,-0x89c(%rbp)
  40f03c:	8f ff ff 
  40f03f:	e9 84 00 00 00       	jmpq   40f0c8 <mbedtls_ssl_handshake_step+0x2968>
  40f044:	48 8b 85 58 f7 ff ff 	mov    -0x8a8(%rbp),%rax
  40f04b:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  40f052:	00 00 00 
  40f055:	48 8b 85 58 f7 ff ff 	mov    -0x8a8(%rbp),%rax
  40f05c:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  40f063:	02 00 00 00 
  40f067:	8a 8d 57 f7 ff ff    	mov    -0x8a9(%rbp),%cl
  40f06d:	48 8b 85 58 f7 ff ff 	mov    -0x8a8(%rbp),%rax
  40f074:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40f07b:	88 08                	mov    %cl,(%rax)
  40f07d:	8a 8d 56 f7 ff ff    	mov    -0x8aa(%rbp),%cl
  40f083:	48 8b 85 58 f7 ff ff 	mov    -0x8a8(%rbp),%rax
  40f08a:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40f091:	88 48 01             	mov    %cl,0x1(%rax)
  40f094:	48 8b bd 58 f7 ff ff 	mov    -0x8a8(%rbp),%rdi
  40f09b:	be 01 00 00 00       	mov    $0x1,%esi
  40f0a0:	e8 2b 86 ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  40f0a5:	89 85 50 f7 ff ff    	mov    %eax,-0x8b0(%rbp)
  40f0ab:	83 f8 00             	cmp    $0x0,%eax
  40f0ae:	74 0e                	je     40f0be <mbedtls_ssl_handshake_step+0x295e>
  40f0b0:	8b 85 50 f7 ff ff    	mov    -0x8b0(%rbp),%eax
  40f0b6:	89 85 64 f7 ff ff    	mov    %eax,-0x89c(%rbp)
  40f0bc:	eb 0a                	jmp    40f0c8 <mbedtls_ssl_handshake_step+0x2968>
  40f0be:	c7 85 64 f7 ff ff 00 	movl   $0x0,-0x89c(%rbp)
  40f0c5:	00 00 00 
  40f0c8:	c7 85 44 f7 ff ff 80 	movl   $0xffff8480,-0x8bc(%rbp)
  40f0cf:	84 ff ff 
  40f0d2:	eb 1a                	jmp    40f0ee <mbedtls_ssl_handshake_step+0x298e>
  40f0d4:	48 8b 85 38 f7 ff ff 	mov    -0x8c8(%rbp),%rax
  40f0db:	8b 48 08             	mov    0x8(%rax),%ecx
  40f0de:	83 c1 01             	add    $0x1,%ecx
  40f0e1:	89 48 08             	mov    %ecx,0x8(%rax)
  40f0e4:	c7 85 44 f7 ff ff 00 	movl   $0x0,-0x8bc(%rbp)
  40f0eb:	00 00 00 
  40f0ee:	8b 85 44 f7 ff ff    	mov    -0x8bc(%rbp),%eax
  40f0f4:	89 85 74 f2 ff ff    	mov    %eax,-0xd8c(%rbp)
  40f0fa:	e9 18 0c 00 00       	jmpq   40fd17 <mbedtls_ssl_handshake_step+0x35b7>
  40f0ff:	48 8b bd 78 f2 ff ff 	mov    -0xd88(%rbp),%rdi
  40f106:	e8 55 aa ff ff       	callq  409b60 <mbedtls_ssl_write_certificate>
  40f10b:	89 85 74 f2 ff ff    	mov    %eax,-0xd8c(%rbp)
  40f111:	e9 01 0c 00 00       	jmpq   40fd17 <mbedtls_ssl_handshake_step+0x35b7>
  40f116:	48 8b 85 78 f2 ff ff 	mov    -0xd88(%rbp),%rax
  40f11d:	48 89 85 88 f7 ff ff 	mov    %rax,-0x878(%rbp)
  40f124:	48 8b 85 88 f7 ff ff 	mov    -0x878(%rbp),%rax
  40f12b:	48 8b 40 78          	mov    0x78(%rax),%rax
  40f12f:	48 8b 00             	mov    (%rax),%rax
  40f132:	48 89 85 68 f7 ff ff 	mov    %rax,-0x898(%rbp)
  40f139:	48 8b 85 68 f7 ff ff 	mov    -0x898(%rbp),%rax
  40f140:	83 78 18 01          	cmpl   $0x1,0x18(%rax)
  40f144:	0f 85 b7 04 00 00    	jne    40f601 <mbedtls_ssl_handshake_step+0x2ea1>
  40f14a:	31 c0                	xor    %eax,%eax
  40f14c:	48 c7 85 78 f7 ff ff 	movq   $0x4,-0x888(%rbp)
  40f153:	04 00 00 00 
  40f157:	48 8b 8d 88 f7 ff ff 	mov    -0x878(%rbp),%rcx
  40f15e:	48 8b 95 78 f7 ff ff 	mov    -0x888(%rbp),%rdx
  40f165:	48 89 8d c8 f7 ff ff 	mov    %rcx,-0x838(%rbp)
  40f16c:	48 89 95 c0 f7 ff ff 	mov    %rdx,-0x840(%rbp)
  40f173:	48 8d 8d 70 f7 ff ff 	lea    -0x890(%rbp),%rcx
  40f17a:	48 89 8d b8 f7 ff ff 	mov    %rcx,-0x848(%rbp)
  40f181:	48 c7 85 b0 f7 ff ff 	movq   $0x0,-0x850(%rbp)
  40f188:	00 00 00 00 
  40f18c:	48 8b 8d c8 f7 ff ff 	mov    -0x838(%rbp),%rcx
  40f193:	8b 71 10             	mov    0x10(%rcx),%esi
  40f196:	83 fe 00             	cmp    $0x0,%esi
  40f199:	be 02 00 00 00       	mov    $0x2,%esi
  40f19e:	0f 44 f0             	cmove  %eax,%esi
  40f1a1:	48 63 ce             	movslq %esi,%rcx
  40f1a4:	48 89 8d a0 f7 ff ff 	mov    %rcx,-0x860(%rbp)
  40f1ab:	48 8b 8d c8 f7 ff ff 	mov    -0x838(%rbp),%rcx
  40f1b2:	48 8b 49 58          	mov    0x58(%rcx),%rcx
  40f1b6:	48 81 c1 28 01 00 00 	add    $0x128,%rcx
  40f1bd:	48 03 8d b0 f7 ff ff 	add    -0x850(%rbp),%rcx
  40f1c4:	48 89 8d 98 f7 ff ff 	mov    %rcx,-0x868(%rbp)
  40f1cb:	48 8b 8d c0 f7 ff ff 	mov    -0x840(%rbp),%rcx
  40f1d2:	48 03 8d a0 f7 ff ff 	add    -0x860(%rbp),%rcx
  40f1d9:	48 81 f9 00 40 00 00 	cmp    $0x4000,%rcx
  40f1e0:	76 0f                	jbe    40f1f1 <mbedtls_ssl_handshake_step+0x2a91>
  40f1e2:	c7 85 d4 f7 ff ff 00 	movl   $0xffff9600,-0x82c(%rbp)
  40f1e9:	96 ff ff 
  40f1ec:	e9 87 03 00 00       	jmpq   40f578 <mbedtls_ssl_handshake_step+0x2e18>
  40f1f1:	b8 2e 00 00 00       	mov    $0x2e,%eax
  40f1f6:	89 c2                	mov    %eax,%edx
  40f1f8:	48 8b 8d c8 f7 ff ff 	mov    -0x838(%rbp),%rcx
  40f1ff:	48 8b 09             	mov    (%rcx),%rcx
  40f202:	0f b6 81 94 00 00 00 	movzbl 0x94(%rcx),%eax
  40f209:	48 8b 8d c8 f7 ff ff 	mov    -0x838(%rbp),%rcx
  40f210:	48 8b 09             	mov    (%rcx),%rcx
  40f213:	0f b6 b1 95 00 00 00 	movzbl 0x95(%rcx),%esi
  40f21a:	48 8b 8d c8 f7 ff ff 	mov    -0x838(%rbp),%rcx
  40f221:	48 8b 09             	mov    (%rcx),%rcx
  40f224:	40 8a b9 98 00 00 00 	mov    0x98(%rcx),%dil
  40f22b:	40 c0 ef 01          	shr    $0x1,%dil
  40f22f:	40 80 e7 01          	and    $0x1,%dil
  40f233:	44 0f b6 c7          	movzbl %dil,%r8d
  40f237:	48 8b 8d 98 f7 ff ff 	mov    -0x868(%rbp),%rcx
  40f23e:	89 85 ec f7 ff ff    	mov    %eax,-0x814(%rbp)
  40f244:	89 b5 e8 f7 ff ff    	mov    %esi,-0x818(%rbp)
  40f24a:	44 89 85 e4 f7 ff ff 	mov    %r8d,-0x81c(%rbp)
  40f251:	48 89 8d d8 f7 ff ff 	mov    %rcx,-0x828(%rbp)
  40f258:	8b 85 ec f7 ff ff    	mov    -0x814(%rbp),%eax
  40f25e:	40 88 c7             	mov    %al,%dil
  40f261:	48 8b 8d d8 f7 ff ff 	mov    -0x828(%rbp),%rcx
  40f268:	40 88 39             	mov    %dil,(%rcx)
  40f26b:	8b 85 e8 f7 ff ff    	mov    -0x818(%rbp),%eax
  40f271:	40 88 c7             	mov    %al,%dil
  40f274:	48 8b 8d d8 f7 ff ff 	mov    -0x828(%rbp),%rcx
  40f27b:	40 88 79 01          	mov    %dil,0x1(%rcx)
  40f27f:	48 8b 8d c8 f7 ff ff 	mov    -0x838(%rbp),%rcx
  40f286:	48 8b 09             	mov    (%rcx),%rcx
  40f289:	48 8b 49 30          	mov    0x30(%rcx),%rcx
  40f28d:	4c 8b 8d c8 f7 ff ff 	mov    -0x838(%rbp),%r9
  40f294:	4d 8b 09             	mov    (%r9),%r9
  40f297:	49 8b 79 38          	mov    0x38(%r9),%rdi
  40f29b:	4c 8b 8d 98 f7 ff ff 	mov    -0x868(%rbp),%r9
  40f2a2:	49 83 c1 02          	add    $0x2,%r9
  40f2a6:	4c 89 ce             	mov    %r9,%rsi
  40f2a9:	ff d1                	callq  *%rcx
  40f2ab:	89 85 ac f7 ff ff    	mov    %eax,-0x854(%rbp)
  40f2b1:	83 f8 00             	cmp    $0x0,%eax
  40f2b4:	74 11                	je     40f2c7 <mbedtls_ssl_handshake_step+0x2b67>
  40f2b6:	8b 85 ac f7 ff ff    	mov    -0x854(%rbp),%eax
  40f2bc:	89 85 d4 f7 ff ff    	mov    %eax,-0x82c(%rbp)
  40f2c2:	e9 b1 02 00 00       	jmpq   40f578 <mbedtls_ssl_handshake_step+0x2e18>
  40f2c7:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  40f2ce:	48 8b 40 58          	mov    0x58(%rax),%rax
  40f2d2:	48 c7 80 e0 00 00 00 	movq   $0x30,0xe0(%rax)
  40f2d9:	30 00 00 00 
  40f2dd:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  40f2e4:	48 8b 40 50          	mov    0x50(%rax),%rax
  40f2e8:	48 83 78 68 00       	cmpq   $0x0,0x68(%rax)
  40f2ed:	75 0f                	jne    40f2fe <mbedtls_ssl_handshake_step+0x2b9e>
  40f2ef:	c7 85 d4 f7 ff ff 00 	movl   $0xffff8900,-0x82c(%rbp)
  40f2f6:	89 ff ff 
  40f2f9:	e9 7a 02 00 00       	jmpq   40f578 <mbedtls_ssl_handshake_step+0x2e18>
  40f2fe:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  40f305:	48 8b 40 50          	mov    0x50(%rax),%rax
  40f309:	48 8b 40 68          	mov    0x68(%rax),%rax
  40f30d:	48 05 48 01 00 00    	add    $0x148,%rax
  40f313:	48 89 85 38 f8 ff ff 	mov    %rax,-0x7c8(%rbp)
  40f31a:	c7 85 34 f8 ff ff 01 	movl   $0x1,-0x7cc(%rbp)
  40f321:	00 00 00 
  40f324:	48 83 bd 38 f8 ff ff 	cmpq   $0x0,-0x7c8(%rbp)
  40f32b:	00 
  40f32c:	74 0d                	je     40f33b <mbedtls_ssl_handshake_step+0x2bdb>
  40f32e:	48 8b 85 38 f8 ff ff 	mov    -0x7c8(%rbp),%rax
  40f335:	48 83 38 00          	cmpq   $0x0,(%rax)
  40f339:	75 0c                	jne    40f347 <mbedtls_ssl_handshake_step+0x2be7>
  40f33b:	c7 85 44 f8 ff ff 00 	movl   $0x0,-0x7bc(%rbp)
  40f342:	00 00 00 
  40f345:	eb 24                	jmp    40f36b <mbedtls_ssl_handshake_step+0x2c0b>
  40f347:	48 8b 85 38 f8 ff ff 	mov    -0x7c8(%rbp),%rax
  40f34e:	48 8b 00             	mov    (%rax),%rax
  40f351:	48 83 c0 30          	add    $0x30,%rax
  40f355:	48 89 c7             	mov    %rax,%rdi
  40f358:	e8 eb 6d 03 00       	callq  446148 <getDecryptedValueQWord>
  40f35d:	8b bd 34 f8 ff ff    	mov    -0x7cc(%rbp),%edi
  40f363:	ff d0                	callq  *%rax
  40f365:	89 85 44 f8 ff ff    	mov    %eax,-0x7bc(%rbp)
  40f36b:	8b 85 44 f8 ff ff    	mov    -0x7bc(%rbp),%eax
  40f371:	83 f8 00             	cmp    $0x0,%eax
  40f374:	75 0f                	jne    40f385 <mbedtls_ssl_handshake_step+0x2c25>
  40f376:	c7 85 d4 f7 ff ff 00 	movl   $0xffff9300,-0x82c(%rbp)
  40f37d:	93 ff ff 
  40f380:	e9 f3 01 00 00       	jmpq   40f578 <mbedtls_ssl_handshake_step+0x2e18>
  40f385:	b8 00 40 00 00       	mov    $0x4000,%eax
  40f38a:	89 c1                	mov    %eax,%ecx
  40f38c:	48 8b 95 c8 f7 ff ff 	mov    -0x838(%rbp),%rdx
  40f393:	48 8b 52 50          	mov    0x50(%rdx),%rdx
  40f397:	48 8b 52 68          	mov    0x68(%rdx),%rdx
  40f39b:	48 81 c2 48 01 00 00 	add    $0x148,%rdx
  40f3a2:	48 8b b5 98 f7 ff ff 	mov    -0x868(%rbp),%rsi
  40f3a9:	48 8b bd c8 f7 ff ff 	mov    -0x838(%rbp),%rdi
  40f3b0:	48 8b 7f 58          	mov    0x58(%rdi),%rdi
  40f3b4:	48 8b bf e0 00 00 00 	mov    0xe0(%rdi),%rdi
  40f3bb:	4c 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%r8
  40f3c2:	4d 8b 80 20 01 00 00 	mov    0x120(%r8),%r8
  40f3c9:	4c 03 85 c0 f7 ff ff 	add    -0x840(%rbp),%r8
  40f3d0:	4c 03 85 a0 f7 ff ff 	add    -0x860(%rbp),%r8
  40f3d7:	4c 8b 8d b8 f7 ff ff 	mov    -0x848(%rbp),%r9
  40f3de:	48 2b 8d c0 f7 ff ff 	sub    -0x840(%rbp),%rcx
  40f3e5:	48 2b 8d a0 f7 ff ff 	sub    -0x860(%rbp),%rcx
  40f3ec:	4c 8b 95 c8 f7 ff ff 	mov    -0x838(%rbp),%r10
  40f3f3:	4d 8b 12             	mov    (%r10),%r10
  40f3f6:	4d 8b 52 30          	mov    0x30(%r10),%r10
  40f3fa:	4c 8b 9d c8 f7 ff ff 	mov    -0x838(%rbp),%r11
  40f401:	4d 8b 1b             	mov    (%r11),%r11
  40f404:	4d 8b 5b 38          	mov    0x38(%r11),%r11
  40f408:	48 89 95 28 f8 ff ff 	mov    %rdx,-0x7d8(%rbp)
  40f40f:	48 89 b5 20 f8 ff ff 	mov    %rsi,-0x7e0(%rbp)
  40f416:	48 89 bd 18 f8 ff ff 	mov    %rdi,-0x7e8(%rbp)
  40f41d:	4c 89 85 10 f8 ff ff 	mov    %r8,-0x7f0(%rbp)
  40f424:	4c 89 8d 08 f8 ff ff 	mov    %r9,-0x7f8(%rbp)
  40f42b:	48 89 8d 00 f8 ff ff 	mov    %rcx,-0x800(%rbp)
  40f432:	4c 89 95 f8 f7 ff ff 	mov    %r10,-0x808(%rbp)
  40f439:	4c 89 9d f0 f7 ff ff 	mov    %r11,-0x810(%rbp)
  40f440:	48 8b 8d 28 f8 ff ff 	mov    -0x7d8(%rbp),%rcx
  40f447:	48 83 39 00          	cmpq   $0x0,(%rcx)
  40f44b:	75 0f                	jne    40f45c <mbedtls_ssl_handshake_step+0x2cfc>
  40f44d:	c7 85 30 f8 ff ff 80 	movl   $0xffffc180,-0x7d0(%rbp)
  40f454:	c1 ff ff 
  40f457:	e9 8b 00 00 00       	jmpq   40f4e7 <mbedtls_ssl_handshake_step+0x2d87>
  40f45c:	48 8b 85 28 f8 ff ff 	mov    -0x7d8(%rbp),%rax
  40f463:	48 8b 00             	mov    (%rax),%rax
  40f466:	48 83 c0 70          	add    $0x70,%rax
  40f46a:	48 89 c7             	mov    %rax,%rdi
  40f46d:	e8 d6 6c 03 00       	callq  446148 <getDecryptedValueQWord>
  40f472:	48 83 f8 00          	cmp    $0x0,%rax
  40f476:	75 0c                	jne    40f484 <mbedtls_ssl_handshake_step+0x2d24>
  40f478:	c7 85 30 f8 ff ff 00 	movl   $0xffffc100,-0x7d0(%rbp)
  40f47f:	c1 ff ff 
  40f482:	eb 63                	jmp    40f4e7 <mbedtls_ssl_handshake_step+0x2d87>
  40f484:	48 8b 85 28 f8 ff ff 	mov    -0x7d8(%rbp),%rax
  40f48b:	48 8b 00             	mov    (%rax),%rax
  40f48e:	48 83 c0 70          	add    $0x70,%rax
  40f492:	48 89 c7             	mov    %rax,%rdi
  40f495:	e8 ae 6c 03 00       	callq  446148 <getDecryptedValueQWord>
  40f49a:	48 8b bd 28 f8 ff ff 	mov    -0x7d8(%rbp),%rdi
  40f4a1:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
  40f4a5:	48 8b b5 20 f8 ff ff 	mov    -0x7e0(%rbp),%rsi
  40f4ac:	48 8b 95 18 f8 ff ff 	mov    -0x7e8(%rbp),%rdx
  40f4b3:	48 8b 8d 10 f8 ff ff 	mov    -0x7f0(%rbp),%rcx
  40f4ba:	4c 8b 85 08 f8 ff ff 	mov    -0x7f8(%rbp),%r8
  40f4c1:	4c 8b 8d 00 f8 ff ff 	mov    -0x800(%rbp),%r9
  40f4c8:	4c 8b 95 f8 f7 ff ff 	mov    -0x808(%rbp),%r10
  40f4cf:	4c 8b 9d f0 f7 ff ff 	mov    -0x810(%rbp),%r11
  40f4d6:	4c 89 14 24          	mov    %r10,(%rsp)
  40f4da:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
  40f4df:	ff d0                	callq  *%rax
  40f4e1:	89 85 30 f8 ff ff    	mov    %eax,-0x7d0(%rbp)
  40f4e7:	8b 85 30 f8 ff ff    	mov    -0x7d0(%rbp),%eax
  40f4ed:	89 85 ac f7 ff ff    	mov    %eax,-0x854(%rbp)
  40f4f3:	83 f8 00             	cmp    $0x0,%eax
  40f4f6:	74 0e                	je     40f506 <mbedtls_ssl_handshake_step+0x2da6>
  40f4f8:	8b 85 ac f7 ff ff    	mov    -0x854(%rbp),%eax
  40f4fe:	89 85 d4 f7 ff ff    	mov    %eax,-0x82c(%rbp)
  40f504:	eb 72                	jmp    40f578 <mbedtls_ssl_handshake_step+0x2e18>
  40f506:	48 83 bd a0 f7 ff ff 	cmpq   $0x2,-0x860(%rbp)
  40f50d:	02 
  40f50e:	75 5e                	jne    40f56e <mbedtls_ssl_handshake_step+0x2e0e>
  40f510:	48 8b 85 b8 f7 ff ff 	mov    -0x848(%rbp),%rax
  40f517:	48 8b 00             	mov    (%rax),%rax
  40f51a:	48 c1 e8 08          	shr    $0x8,%rax
  40f51e:	88 c1                	mov    %al,%cl
  40f520:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  40f527:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40f52e:	48 8b 95 c0 f7 ff ff 	mov    -0x840(%rbp),%rdx
  40f535:	88 0c 10             	mov    %cl,(%rax,%rdx,1)
  40f538:	48 8b 85 b8 f7 ff ff 	mov    -0x848(%rbp),%rax
  40f53f:	48 8b 00             	mov    (%rax),%rax
  40f542:	88 c1                	mov    %al,%cl
  40f544:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  40f54b:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40f552:	48 8b 95 c0 f7 ff ff 	mov    -0x840(%rbp),%rdx
  40f559:	88 4c 10 01          	mov    %cl,0x1(%rax,%rdx,1)
  40f55d:	48 8b 85 b8 f7 ff ff 	mov    -0x848(%rbp),%rax
  40f564:	48 8b 10             	mov    (%rax),%rdx
  40f567:	48 83 c2 02          	add    $0x2,%rdx
  40f56b:	48 89 10             	mov    %rdx,(%rax)
  40f56e:	c7 85 d4 f7 ff ff 00 	movl   $0x0,-0x82c(%rbp)
  40f575:	00 00 00 
  40f578:	8b 85 d4 f7 ff ff    	mov    -0x82c(%rbp),%eax
  40f57e:	89 85 84 f7 ff ff    	mov    %eax,-0x87c(%rbp)
  40f584:	83 f8 00             	cmp    $0x0,%eax
  40f587:	74 11                	je     40f59a <mbedtls_ssl_handshake_step+0x2e3a>
  40f589:	8b 85 84 f7 ff ff    	mov    -0x87c(%rbp),%eax
  40f58f:	89 85 94 f7 ff ff    	mov    %eax,-0x86c(%rbp)
  40f595:	e9 8b 00 00 00       	jmpq   40f625 <mbedtls_ssl_handshake_step+0x2ec5>
  40f59a:	48 8b 85 78 f7 ff ff 	mov    -0x888(%rbp),%rax
  40f5a1:	48 03 85 70 f7 ff ff 	add    -0x890(%rbp),%rax
  40f5a8:	48 8b 8d 88 f7 ff ff 	mov    -0x878(%rbp),%rcx
  40f5af:	48 89 81 30 01 00 00 	mov    %rax,0x130(%rcx)
  40f5b6:	48 8b 85 88 f7 ff ff 	mov    -0x878(%rbp),%rax
  40f5bd:	c7 80 28 01 00 00 16 	movl   $0x16,0x128(%rax)
  40f5c4:	00 00 00 
  40f5c7:	48 8b 85 88 f7 ff ff 	mov    -0x878(%rbp),%rax
  40f5ce:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40f5d5:	c6 00 10             	movb   $0x10,(%rax)
  40f5d8:	48 8b 85 88 f7 ff ff 	mov    -0x878(%rbp),%rax
  40f5df:	8b 50 08             	mov    0x8(%rax),%edx
  40f5e2:	83 c2 01             	add    $0x1,%edx
  40f5e5:	89 50 08             	mov    %edx,0x8(%rax)
  40f5e8:	48 8b bd 88 f7 ff ff 	mov    -0x878(%rbp),%rdi
  40f5ef:	e8 5c 7f ff ff       	callq  407550 <mbedtls_ssl_write_handshake_msg>
  40f5f4:	89 85 84 f7 ff ff    	mov    %eax,-0x87c(%rbp)
  40f5fa:	83 f8 00             	cmp    $0x0,%eax
  40f5fd:	75 0e                	jne    40f60d <mbedtls_ssl_handshake_step+0x2ead>
  40f5ff:	eb 1a                	jmp    40f61b <mbedtls_ssl_handshake_step+0x2ebb>
  40f601:	c7 85 94 f7 ff ff 00 	movl   $0xffff9400,-0x86c(%rbp)
  40f608:	94 ff ff 
  40f60b:	eb 18                	jmp    40f625 <mbedtls_ssl_handshake_step+0x2ec5>
  40f60d:	8b 85 84 f7 ff ff    	mov    -0x87c(%rbp),%eax
  40f613:	89 85 94 f7 ff ff    	mov    %eax,-0x86c(%rbp)
  40f619:	eb 0a                	jmp    40f625 <mbedtls_ssl_handshake_step+0x2ec5>
  40f61b:	c7 85 94 f7 ff ff 00 	movl   $0x0,-0x86c(%rbp)
  40f622:	00 00 00 
  40f625:	8b 85 94 f7 ff ff    	mov    -0x86c(%rbp),%eax
  40f62b:	89 85 74 f2 ff ff    	mov    %eax,-0xd8c(%rbp)
  40f631:	e9 e1 06 00 00       	jmpq   40fd17 <mbedtls_ssl_handshake_step+0x35b7>
  40f636:	48 8d 85 60 f8 ff ff 	lea    -0x7a0(%rbp),%rax
  40f63d:	48 8b 8d 78 f2 ff ff 	mov    -0xd88(%rbp),%rcx
  40f644:	48 89 8d b0 f8 ff ff 	mov    %rcx,-0x750(%rbp)
  40f64b:	c7 85 ac f8 ff ff 80 	movl   $0xffff8f80,-0x754(%rbp)
  40f652:	8f ff ff 
  40f655:	48 8b 8d b0 f8 ff ff 	mov    -0x750(%rbp),%rcx
  40f65c:	48 8b 49 78          	mov    0x78(%rcx),%rcx
  40f660:	48 8b 09             	mov    (%rcx),%rcx
  40f663:	48 89 8d a0 f8 ff ff 	mov    %rcx,-0x760(%rbp)
  40f66a:	48 c7 85 98 f8 ff ff 	movq   $0x0,-0x768(%rbp)
  40f671:	00 00 00 00 
  40f675:	48 c7 85 90 f8 ff ff 	movq   $0x0,-0x770(%rbp)
  40f67c:	00 00 00 00 
  40f680:	48 89 85 58 f8 ff ff 	mov    %rax,-0x7a8(%rbp)
  40f687:	c7 85 54 f8 ff ff 00 	movl   $0x0,-0x7ac(%rbp)
  40f68e:	00 00 00 
  40f691:	48 c7 85 48 f8 ff ff 	movq   $0x0,-0x7b8(%rbp)
  40f698:	00 00 00 00 
  40f69c:	48 8b bd b0 f8 ff ff 	mov    -0x750(%rbp),%rdi
  40f6a3:	e8 58 57 ff ff       	callq  404e00 <mbedtls_ssl_derive_keys>
  40f6a8:	89 85 ac f8 ff ff    	mov    %eax,-0x754(%rbp)
  40f6ae:	83 f8 00             	cmp    $0x0,%eax
  40f6b1:	74 11                	je     40f6c4 <mbedtls_ssl_handshake_step+0x2f64>
  40f6b3:	8b 85 ac f8 ff ff    	mov    -0x754(%rbp),%eax
  40f6b9:	89 85 bc f8 ff ff    	mov    %eax,-0x744(%rbp)
  40f6bf:	e9 4d 05 00 00       	jmpq   40fc11 <mbedtls_ssl_handshake_step+0x34b1>
  40f6c4:	48 8b 85 a0 f8 ff ff 	mov    -0x760(%rbp),%rax
  40f6cb:	83 78 18 05          	cmpl   $0x5,0x18(%rax)
  40f6cf:	74 34                	je     40f705 <mbedtls_ssl_handshake_step+0x2fa5>
  40f6d1:	48 8b 85 a0 f8 ff ff 	mov    -0x760(%rbp),%rax
  40f6d8:	83 78 18 07          	cmpl   $0x7,0x18(%rax)
  40f6dc:	74 27                	je     40f705 <mbedtls_ssl_handshake_step+0x2fa5>
  40f6de:	48 8b 85 a0 f8 ff ff 	mov    -0x760(%rbp),%rax
  40f6e5:	83 78 18 08          	cmpl   $0x8,0x18(%rax)
  40f6e9:	74 1a                	je     40f705 <mbedtls_ssl_handshake_step+0x2fa5>
  40f6eb:	48 8b 85 a0 f8 ff ff 	mov    -0x760(%rbp),%rax
  40f6f2:	83 78 18 06          	cmpl   $0x6,0x18(%rax)
  40f6f6:	74 0d                	je     40f705 <mbedtls_ssl_handshake_step+0x2fa5>
  40f6f8:	48 8b 85 a0 f8 ff ff 	mov    -0x760(%rbp),%rax
  40f6ff:	83 78 18 0b          	cmpl   $0xb,0x18(%rax)
  40f703:	75 1f                	jne    40f724 <mbedtls_ssl_handshake_step+0x2fc4>
  40f705:	48 8b 85 b0 f8 ff ff 	mov    -0x750(%rbp),%rax
  40f70c:	8b 48 08             	mov    0x8(%rax),%ecx
  40f70f:	83 c1 01             	add    $0x1,%ecx
  40f712:	89 48 08             	mov    %ecx,0x8(%rax)
  40f715:	c7 85 bc f8 ff ff 00 	movl   $0x0,-0x744(%rbp)
  40f71c:	00 00 00 
  40f71f:	e9 ed 04 00 00       	jmpq   40fc11 <mbedtls_ssl_handshake_step+0x34b1>
  40f724:	48 8b 85 b0 f8 ff ff 	mov    -0x750(%rbp),%rax
  40f72b:	83 b8 48 01 00 00 00 	cmpl   $0x0,0x148(%rax)
  40f732:	0f 84 8e 00 00 00    	je     40f7c6 <mbedtls_ssl_handshake_step+0x3066>
  40f738:	48 8b 85 b0 f8 ff ff 	mov    -0x750(%rbp),%rax
  40f73f:	48 89 85 c8 f8 ff ff 	mov    %rax,-0x738(%rbp)
  40f746:	48 8b 85 c8 f8 ff ff 	mov    -0x738(%rbp),%rax
  40f74d:	48 83 78 58 00       	cmpq   $0x0,0x58(%rax)
  40f752:	74 28                	je     40f77c <mbedtls_ssl_handshake_step+0x301c>
  40f754:	48 8b 85 c8 f8 ff ff 	mov    -0x738(%rbp),%rax
  40f75b:	48 8b 40 58          	mov    0x58(%rax),%rax
  40f75f:	48 83 38 00          	cmpq   $0x0,(%rax)
  40f763:	74 17                	je     40f77c <mbedtls_ssl_handshake_step+0x301c>
  40f765:	48 8b 85 c8 f8 ff ff 	mov    -0x738(%rbp),%rax
  40f76c:	48 8b 40 58          	mov    0x58(%rax),%rax
  40f770:	48 8b 00             	mov    (%rax),%rax
  40f773:	48 89 85 c0 f8 ff ff 	mov    %rax,-0x740(%rbp)
  40f77a:	eb 15                	jmp    40f791 <mbedtls_ssl_handshake_step+0x3031>
  40f77c:	48 8b 85 c8 f8 ff ff 	mov    -0x738(%rbp),%rax
  40f783:	48 8b 00             	mov    (%rax),%rax
  40f786:	48 8b 40 70          	mov    0x70(%rax),%rax
  40f78a:	48 89 85 c0 f8 ff ff 	mov    %rax,-0x740(%rbp)
  40f791:	48 83 bd c0 f8 ff ff 	cmpq   $0x0,-0x740(%rbp)
  40f798:	00 
  40f799:	75 0d                	jne    40f7a8 <mbedtls_ssl_handshake_step+0x3048>
  40f79b:	31 c0                	xor    %eax,%eax
  40f79d:	89 c1                	mov    %eax,%ecx
  40f79f:	48 89 8d 38 f2 ff ff 	mov    %rcx,-0xdc8(%rbp)
  40f7a6:	eb 11                	jmp    40f7b9 <mbedtls_ssl_handshake_step+0x3059>
  40f7a8:	48 8b 85 c0 f8 ff ff 	mov    -0x740(%rbp),%rax
  40f7af:	48 8b 00             	mov    (%rax),%rax
  40f7b2:	48 89 85 38 f2 ff ff 	mov    %rax,-0xdc8(%rbp)
  40f7b9:	48 8b 85 38 f2 ff ff 	mov    -0xdc8(%rbp),%rax
  40f7c0:	48 83 f8 00          	cmp    $0x0,%rax
  40f7c4:	75 1f                	jne    40f7e5 <mbedtls_ssl_handshake_step+0x3085>
  40f7c6:	48 8b 85 b0 f8 ff ff 	mov    -0x750(%rbp),%rax
  40f7cd:	8b 48 08             	mov    0x8(%rax),%ecx
  40f7d0:	83 c1 01             	add    $0x1,%ecx
  40f7d3:	89 48 08             	mov    %ecx,0x8(%rax)
  40f7d6:	c7 85 bc f8 ff ff 00 	movl   $0x0,-0x744(%rbp)
  40f7dd:	00 00 00 
  40f7e0:	e9 2c 04 00 00       	jmpq   40fc11 <mbedtls_ssl_handshake_step+0x34b1>
  40f7e5:	48 8b 85 b0 f8 ff ff 	mov    -0x750(%rbp),%rax
  40f7ec:	48 89 85 d8 f8 ff ff 	mov    %rax,-0x728(%rbp)
  40f7f3:	48 8b 85 d8 f8 ff ff 	mov    -0x728(%rbp),%rax
  40f7fa:	48 83 78 58 00       	cmpq   $0x0,0x58(%rax)
  40f7ff:	74 28                	je     40f829 <mbedtls_ssl_handshake_step+0x30c9>
  40f801:	48 8b 85 d8 f8 ff ff 	mov    -0x728(%rbp),%rax
  40f808:	48 8b 40 58          	mov    0x58(%rax),%rax
  40f80c:	48 83 38 00          	cmpq   $0x0,(%rax)
  40f810:	74 17                	je     40f829 <mbedtls_ssl_handshake_step+0x30c9>
  40f812:	48 8b 85 d8 f8 ff ff 	mov    -0x728(%rbp),%rax
  40f819:	48 8b 40 58          	mov    0x58(%rax),%rax
  40f81d:	48 8b 00             	mov    (%rax),%rax
  40f820:	48 89 85 d0 f8 ff ff 	mov    %rax,-0x730(%rbp)
  40f827:	eb 15                	jmp    40f83e <mbedtls_ssl_handshake_step+0x30de>
  40f829:	48 8b 85 d8 f8 ff ff 	mov    -0x728(%rbp),%rax
  40f830:	48 8b 00             	mov    (%rax),%rax
  40f833:	48 8b 40 70          	mov    0x70(%rax),%rax
  40f837:	48 89 85 d0 f8 ff ff 	mov    %rax,-0x730(%rbp)
  40f83e:	48 83 bd d0 f8 ff ff 	cmpq   $0x0,-0x730(%rbp)
  40f845:	00 
  40f846:	75 0d                	jne    40f855 <mbedtls_ssl_handshake_step+0x30f5>
  40f848:	31 c0                	xor    %eax,%eax
  40f84a:	89 c1                	mov    %eax,%ecx
  40f84c:	48 89 8d 30 f2 ff ff 	mov    %rcx,-0xdd0(%rbp)
  40f853:	eb 12                	jmp    40f867 <mbedtls_ssl_handshake_step+0x3107>
  40f855:	48 8b 85 d0 f8 ff ff 	mov    -0x730(%rbp),%rax
  40f85c:	48 8b 40 08          	mov    0x8(%rax),%rax
  40f860:	48 89 85 30 f2 ff ff 	mov    %rax,-0xdd0(%rbp)
  40f867:	48 8b 85 30 f2 ff ff 	mov    -0xdd0(%rbp),%rax
  40f86e:	48 83 f8 00          	cmp    $0x0,%rax
  40f872:	75 0f                	jne    40f883 <mbedtls_ssl_handshake_step+0x3123>
  40f874:	c7 85 bc f8 ff ff 00 	movl   $0xffff8a00,-0x744(%rbp)
  40f87b:	8a ff ff 
  40f87e:	e9 8e 03 00 00       	jmpq   40fc11 <mbedtls_ssl_handshake_step+0x34b1>
  40f883:	48 8d b5 60 f8 ff ff 	lea    -0x7a0(%rbp),%rsi
  40f88a:	48 8b 85 b0 f8 ff ff 	mov    -0x750(%rbp),%rax
  40f891:	48 8b 40 58          	mov    0x58(%rax),%rax
  40f895:	48 8b 80 c8 00 00 00 	mov    0xc8(%rax),%rax
  40f89c:	48 8b bd b0 f8 ff ff 	mov    -0x750(%rbp),%rdi
  40f8a3:	ff d0                	callq  *%rax
  40f8a5:	48 8b 85 b0 f8 ff ff 	mov    -0x750(%rbp),%rax
  40f8ac:	83 78 10 03          	cmpl   $0x3,0x10(%rax)
  40f8b0:	0f 84 56 01 00 00    	je     40fa0c <mbedtls_ssl_handshake_step+0x32ac>
  40f8b6:	c7 85 50 f8 ff ff 24 	movl   $0x24,-0x7b0(%rbp)
  40f8bd:	00 00 00 
  40f8c0:	c7 85 54 f8 ff ff 00 	movl   $0x0,-0x7ac(%rbp)
  40f8c7:	00 00 00 
  40f8ca:	48 8b 85 b0 f8 ff ff 	mov    -0x750(%rbp),%rax
  40f8d1:	48 89 85 e8 f8 ff ff 	mov    %rax,-0x718(%rbp)
  40f8d8:	48 8b 85 e8 f8 ff ff 	mov    -0x718(%rbp),%rax
  40f8df:	48 83 78 58 00       	cmpq   $0x0,0x58(%rax)
  40f8e4:	74 28                	je     40f90e <mbedtls_ssl_handshake_step+0x31ae>
  40f8e6:	48 8b 85 e8 f8 ff ff 	mov    -0x718(%rbp),%rax
  40f8ed:	48 8b 40 58          	mov    0x58(%rax),%rax
  40f8f1:	48 83 38 00          	cmpq   $0x0,(%rax)
  40f8f5:	74 17                	je     40f90e <mbedtls_ssl_handshake_step+0x31ae>
  40f8f7:	48 8b 85 e8 f8 ff ff 	mov    -0x718(%rbp),%rax
  40f8fe:	48 8b 40 58          	mov    0x58(%rax),%rax
  40f902:	48 8b 00             	mov    (%rax),%rax
  40f905:	48 89 85 e0 f8 ff ff 	mov    %rax,-0x720(%rbp)
  40f90c:	eb 15                	jmp    40f923 <mbedtls_ssl_handshake_step+0x31c3>
  40f90e:	48 8b 85 e8 f8 ff ff 	mov    -0x718(%rbp),%rax
  40f915:	48 8b 00             	mov    (%rax),%rax
  40f918:	48 8b 40 70          	mov    0x70(%rax),%rax
  40f91c:	48 89 85 e0 f8 ff ff 	mov    %rax,-0x720(%rbp)
  40f923:	48 83 bd e0 f8 ff ff 	cmpq   $0x0,-0x720(%rbp)
  40f92a:	00 
  40f92b:	75 0d                	jne    40f93a <mbedtls_ssl_handshake_step+0x31da>
  40f92d:	31 c0                	xor    %eax,%eax
  40f92f:	89 c1                	mov    %eax,%ecx
  40f931:	48 89 8d 28 f2 ff ff 	mov    %rcx,-0xdd8(%rbp)
  40f938:	eb 12                	jmp    40f94c <mbedtls_ssl_handshake_step+0x31ec>
  40f93a:	48 8b 85 e0 f8 ff ff 	mov    -0x720(%rbp),%rax
  40f941:	48 8b 40 08          	mov    0x8(%rax),%rax
  40f945:	48 89 85 28 f2 ff ff 	mov    %rax,-0xdd8(%rbp)
  40f94c:	48 8b 85 28 f2 ff ff 	mov    -0xdd8(%rbp),%rax
  40f953:	48 89 85 08 f9 ff ff 	mov    %rax,-0x6f8(%rbp)
  40f95a:	c7 85 04 f9 ff ff 04 	movl   $0x4,-0x6fc(%rbp)
  40f961:	00 00 00 
  40f964:	48 83 bd 08 f9 ff ff 	cmpq   $0x0,-0x6f8(%rbp)
  40f96b:	00 
  40f96c:	74 15                	je     40f983 <mbedtls_ssl_handshake_step+0x3223>
  40f96e:	48 8b 85 08 f9 ff ff 	mov    -0x6f8(%rbp),%rax
  40f975:	48 89 c7             	mov    %rax,%rdi
  40f978:	e8 cb 67 03 00       	callq  446148 <getDecryptedValueQWord>
  40f97d:	48 83 f8 00          	cmp    $0x0,%rax
  40f981:	75 0c                	jne    40f98f <mbedtls_ssl_handshake_step+0x322f>
  40f983:	c7 85 10 f9 ff ff 00 	movl   $0x0,-0x6f0(%rbp)
  40f98a:	00 00 00 
  40f98d:	eb 29                	jmp    40f9b8 <mbedtls_ssl_handshake_step+0x3258>
  40f98f:	48 8b 85 08 f9 ff ff 	mov    -0x6f8(%rbp),%rax
  40f996:	48 89 c7             	mov    %rax,%rdi
  40f999:	e8 aa 67 03 00       	callq  446148 <getDecryptedValueQWord>
  40f99e:	48 83 c0 30          	add    $0x30,%rax
  40f9a2:	48 89 c7             	mov    %rax,%rdi
  40f9a5:	e8 9e 67 03 00       	callq  446148 <getDecryptedValueQWord>
  40f9aa:	8b bd 04 f9 ff ff    	mov    -0x6fc(%rbp),%edi
  40f9b0:	ff d0                	callq  *%rax
  40f9b2:	89 85 10 f9 ff ff    	mov    %eax,-0x6f0(%rbp)
  40f9b8:	8b 85 10 f9 ff ff    	mov    -0x6f0(%rbp),%eax
  40f9be:	83 f8 00             	cmp    $0x0,%eax
  40f9c1:	74 2b                	je     40f9ee <mbedtls_ssl_handshake_step+0x328e>
  40f9c3:	48 8b 85 58 f8 ff ff 	mov    -0x7a8(%rbp),%rax
  40f9ca:	48 83 c0 10          	add    $0x10,%rax
  40f9ce:	48 89 85 58 f8 ff ff 	mov    %rax,-0x7a8(%rbp)
  40f9d5:	8b 8d 50 f8 ff ff    	mov    -0x7b0(%rbp),%ecx
  40f9db:	83 e9 10             	sub    $0x10,%ecx
  40f9de:	89 8d 50 f8 ff ff    	mov    %ecx,-0x7b0(%rbp)
  40f9e4:	c7 85 54 f8 ff ff 04 	movl   $0x4,-0x7ac(%rbp)
  40f9eb:	00 00 00 
  40f9ee:	48 8b 85 b0 f8 ff ff 	mov    -0x750(%rbp),%rax
  40f9f5:	48 89 85 f8 f8 ff ff 	mov    %rax,-0x708(%rbp)
  40f9fc:	48 8b 85 f8 f8 ff ff 	mov    -0x708(%rbp),%rax
  40fa03:	48 83 78 58 00       	cmpq   $0x0,0x58(%rax)
  40fa08:	75 11                	jne    40fa1b <mbedtls_ssl_handshake_step+0x32bb>
  40fa0a:	eb 37                	jmp    40fa43 <mbedtls_ssl_handshake_step+0x32e3>
  40fa0c:	c7 85 bc f8 ff ff 00 	movl   $0xffff9400,-0x744(%rbp)
  40fa13:	94 ff ff 
  40fa16:	e9 f6 01 00 00       	jmpq   40fc11 <mbedtls_ssl_handshake_step+0x34b1>
  40fa1b:	48 8b 85 f8 f8 ff ff 	mov    -0x708(%rbp),%rax
  40fa22:	48 8b 40 58          	mov    0x58(%rax),%rax
  40fa26:	48 83 38 00          	cmpq   $0x0,(%rax)
  40fa2a:	74 17                	je     40fa43 <mbedtls_ssl_handshake_step+0x32e3>
  40fa2c:	48 8b 85 f8 f8 ff ff 	mov    -0x708(%rbp),%rax
  40fa33:	48 8b 40 58          	mov    0x58(%rax),%rax
  40fa37:	48 8b 00             	mov    (%rax),%rax
  40fa3a:	48 89 85 f0 f8 ff ff 	mov    %rax,-0x710(%rbp)
  40fa41:	eb 15                	jmp    40fa58 <mbedtls_ssl_handshake_step+0x32f8>
  40fa43:	48 8b 85 f8 f8 ff ff 	mov    -0x708(%rbp),%rax
  40fa4a:	48 8b 00             	mov    (%rax),%rax
  40fa4d:	48 8b 40 70          	mov    0x70(%rax),%rax
  40fa51:	48 89 85 f0 f8 ff ff 	mov    %rax,-0x710(%rbp)
  40fa58:	48 83 bd f0 f8 ff ff 	cmpq   $0x0,-0x710(%rbp)
  40fa5f:	00 
  40fa60:	75 0d                	jne    40fa6f <mbedtls_ssl_handshake_step+0x330f>
  40fa62:	31 c0                	xor    %eax,%eax
  40fa64:	89 c1                	mov    %eax,%ecx
  40fa66:	48 89 8d 20 f2 ff ff 	mov    %rcx,-0xde0(%rbp)
  40fa6d:	eb 12                	jmp    40fa81 <mbedtls_ssl_handshake_step+0x3321>
  40fa6f:	48 8b 85 f0 f8 ff ff 	mov    -0x710(%rbp),%rax
  40fa76:	48 8b 40 08          	mov    0x8(%rax),%rax
  40fa7a:	48 89 85 20 f2 ff ff 	mov    %rax,-0xde0(%rbp)
  40fa81:	48 8b 85 20 f2 ff ff 	mov    -0xde0(%rbp),%rax
  40fa88:	8b b5 54 f8 ff ff    	mov    -0x7ac(%rbp),%esi
  40fa8e:	48 8b 95 58 f8 ff ff 	mov    -0x7a8(%rbp),%rdx
  40fa95:	8b 8d 50 f8 ff ff    	mov    -0x7b0(%rbp),%ecx
  40fa9b:	48 8b bd b0 f8 ff ff 	mov    -0x750(%rbp),%rdi
  40faa2:	48 8b bf 20 01 00 00 	mov    0x120(%rdi),%rdi
  40faa9:	48 83 c7 06          	add    $0x6,%rdi
  40faad:	48 03 bd 90 f8 ff ff 	add    -0x770(%rbp),%rdi
  40fab4:	4c 8b 85 b0 f8 ff ff 	mov    -0x750(%rbp),%r8
  40fabb:	4d 8b 00             	mov    (%r8),%r8
  40fabe:	4d 8b 40 30          	mov    0x30(%r8),%r8
  40fac2:	4c 8b 8d b0 f8 ff ff 	mov    -0x750(%rbp),%r9
  40fac9:	4d 8b 09             	mov    (%r9),%r9
  40facc:	4d 8b 49 38          	mov    0x38(%r9),%r9
  40fad0:	4c 8b 95 48 f8 ff ff 	mov    -0x7b8(%rbp),%r10
  40fad7:	48 89 bd 18 f2 ff ff 	mov    %rdi,-0xde8(%rbp)
  40fade:	48 89 c7             	mov    %rax,%rdi
  40fae1:	48 8b 85 18 f2 ff ff 	mov    -0xde8(%rbp),%rax
  40fae8:	4c 89 85 10 f2 ff ff 	mov    %r8,-0xdf0(%rbp)
  40faef:	49 89 c0             	mov    %rax,%r8
  40faf2:	4c 8d 9d 98 f8 ff ff 	lea    -0x768(%rbp),%r11
  40faf9:	4c 89 8d 08 f2 ff ff 	mov    %r9,-0xdf8(%rbp)
  40fb00:	4d 89 d9             	mov    %r11,%r9
  40fb03:	4c 8b 9d 10 f2 ff ff 	mov    -0xdf0(%rbp),%r11
  40fb0a:	4c 89 1c 24          	mov    %r11,(%rsp)
  40fb0e:	4c 8b 9d 08 f2 ff ff 	mov    -0xdf8(%rbp),%r11
  40fb15:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
  40fb1a:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
  40fb1f:	e8 fc f9 01 00       	callq  42f520 <mbedtls_pk_sign_restartable>
  40fb24:	89 85 ac f8 ff ff    	mov    %eax,-0x754(%rbp)
  40fb2a:	83 f8 00             	cmp    $0x0,%eax
  40fb2d:	74 11                	je     40fb40 <mbedtls_ssl_handshake_step+0x33e0>
  40fb2f:	8b 85 ac f8 ff ff    	mov    -0x754(%rbp),%eax
  40fb35:	89 85 bc f8 ff ff    	mov    %eax,-0x744(%rbp)
  40fb3b:	e9 d1 00 00 00       	jmpq   40fc11 <mbedtls_ssl_handshake_step+0x34b1>
  40fb40:	48 8b 85 98 f8 ff ff 	mov    -0x768(%rbp),%rax
  40fb47:	48 c1 e8 08          	shr    $0x8,%rax
  40fb4b:	88 c1                	mov    %al,%cl
  40fb4d:	48 8b 85 b0 f8 ff ff 	mov    -0x750(%rbp),%rax
  40fb54:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40fb5b:	48 8b 95 90 f8 ff ff 	mov    -0x770(%rbp),%rdx
  40fb62:	48 83 c2 04          	add    $0x4,%rdx
  40fb66:	88 0c 10             	mov    %cl,(%rax,%rdx,1)
  40fb69:	48 8b 85 98 f8 ff ff 	mov    -0x768(%rbp),%rax
  40fb70:	88 c1                	mov    %al,%cl
  40fb72:	48 8b 85 b0 f8 ff ff 	mov    -0x750(%rbp),%rax
  40fb79:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40fb80:	48 8b 95 90 f8 ff ff 	mov    -0x770(%rbp),%rdx
  40fb87:	48 83 c2 05          	add    $0x5,%rdx
  40fb8b:	88 0c 10             	mov    %cl,(%rax,%rdx,1)
  40fb8e:	48 8b 85 98 f8 ff ff 	mov    -0x768(%rbp),%rax
  40fb95:	48 83 c0 06          	add    $0x6,%rax
  40fb99:	48 03 85 90 f8 ff ff 	add    -0x770(%rbp),%rax
  40fba0:	48 8b 95 b0 f8 ff ff 	mov    -0x750(%rbp),%rdx
  40fba7:	48 89 82 30 01 00 00 	mov    %rax,0x130(%rdx)
  40fbae:	48 8b 85 b0 f8 ff ff 	mov    -0x750(%rbp),%rax
  40fbb5:	c7 80 28 01 00 00 16 	movl   $0x16,0x128(%rax)
  40fbbc:	00 00 00 
  40fbbf:	48 8b 85 b0 f8 ff ff 	mov    -0x750(%rbp),%rax
  40fbc6:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40fbcd:	c6 00 0f             	movb   $0xf,(%rax)
  40fbd0:	48 8b 85 b0 f8 ff ff 	mov    -0x750(%rbp),%rax
  40fbd7:	8b 70 08             	mov    0x8(%rax),%esi
  40fbda:	83 c6 01             	add    $0x1,%esi
  40fbdd:	89 70 08             	mov    %esi,0x8(%rax)
  40fbe0:	48 8b bd b0 f8 ff ff 	mov    -0x750(%rbp),%rdi
  40fbe7:	e8 64 79 ff ff       	callq  407550 <mbedtls_ssl_write_handshake_msg>
  40fbec:	89 85 ac f8 ff ff    	mov    %eax,-0x754(%rbp)
  40fbf2:	83 f8 00             	cmp    $0x0,%eax
  40fbf5:	74 0e                	je     40fc05 <mbedtls_ssl_handshake_step+0x34a5>
  40fbf7:	8b 85 ac f8 ff ff    	mov    -0x754(%rbp),%eax
  40fbfd:	89 85 bc f8 ff ff    	mov    %eax,-0x744(%rbp)
  40fc03:	eb 0c                	jmp    40fc11 <mbedtls_ssl_handshake_step+0x34b1>
  40fc05:	8b 85 ac f8 ff ff    	mov    -0x754(%rbp),%eax
  40fc0b:	89 85 bc f8 ff ff    	mov    %eax,-0x744(%rbp)
  40fc11:	8b 85 bc f8 ff ff    	mov    -0x744(%rbp),%eax
  40fc17:	89 85 74 f2 ff ff    	mov    %eax,-0xd8c(%rbp)
  40fc1d:	e9 f5 00 00 00       	jmpq   40fd17 <mbedtls_ssl_handshake_step+0x35b7>
  40fc22:	48 8b 85 78 f2 ff ff 	mov    -0xd88(%rbp),%rax
  40fc29:	48 89 85 18 f9 ff ff 	mov    %rax,-0x6e8(%rbp)
  40fc30:	48 8b 85 18 f9 ff ff 	mov    -0x6e8(%rbp),%rax
  40fc37:	c7 80 28 01 00 00 14 	movl   $0x14,0x128(%rax)
  40fc3e:	00 00 00 
  40fc41:	48 8b 85 18 f9 ff ff 	mov    -0x6e8(%rbp),%rax
  40fc48:	48 c7 80 30 01 00 00 	movq   $0x1,0x130(%rax)
  40fc4f:	01 00 00 00 
  40fc53:	48 8b 85 18 f9 ff ff 	mov    -0x6e8(%rbp),%rax
  40fc5a:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  40fc61:	c6 00 01             	movb   $0x1,(%rax)
  40fc64:	48 8b 85 18 f9 ff ff 	mov    -0x6e8(%rbp),%rax
  40fc6b:	8b 48 08             	mov    0x8(%rax),%ecx
  40fc6e:	83 c1 01             	add    $0x1,%ecx
  40fc71:	89 48 08             	mov    %ecx,0x8(%rax)
  40fc74:	48 8b bd 18 f9 ff ff 	mov    -0x6e8(%rbp),%rdi
  40fc7b:	e8 d0 78 ff ff       	callq  407550 <mbedtls_ssl_write_handshake_msg>
  40fc80:	89 85 14 f9 ff ff    	mov    %eax,-0x6ec(%rbp)
  40fc86:	83 f8 00             	cmp    $0x0,%eax
  40fc89:	74 0e                	je     40fc99 <mbedtls_ssl_handshake_step+0x3539>
  40fc8b:	8b 85 14 f9 ff ff    	mov    -0x6ec(%rbp),%eax
  40fc91:	89 85 20 f9 ff ff    	mov    %eax,-0x6e0(%rbp)
  40fc97:	eb 0a                	jmp    40fca3 <mbedtls_ssl_handshake_step+0x3543>
  40fc99:	c7 85 20 f9 ff ff 00 	movl   $0x0,-0x6e0(%rbp)
  40fca0:	00 00 00 
  40fca3:	8b 85 20 f9 ff ff    	mov    -0x6e0(%rbp),%eax
  40fca9:	89 85 74 f2 ff ff    	mov    %eax,-0xd8c(%rbp)
  40fcaf:	eb 66                	jmp    40fd17 <mbedtls_ssl_handshake_step+0x35b7>
  40fcb1:	48 8b bd 78 f2 ff ff 	mov    -0xd88(%rbp),%rdi
  40fcb8:	e8 33 b9 ff ff       	callq  40b5f0 <mbedtls_ssl_write_finished>
  40fcbd:	89 85 74 f2 ff ff    	mov    %eax,-0xd8c(%rbp)
  40fcc3:	eb 52                	jmp    40fd17 <mbedtls_ssl_handshake_step+0x35b7>
  40fcc5:	48 8b bd 78 f2 ff ff 	mov    -0xd88(%rbp),%rdi
  40fccc:	e8 1f b2 ff ff       	callq  40aef0 <mbedtls_ssl_parse_change_cipher_spec>
  40fcd1:	89 85 74 f2 ff ff    	mov    %eax,-0xd8c(%rbp)
  40fcd7:	eb 3e                	jmp    40fd17 <mbedtls_ssl_handshake_step+0x35b7>
  40fcd9:	48 8b bd 78 f2 ff ff 	mov    -0xd88(%rbp),%rdi
  40fce0:	e8 4b bb ff ff       	callq  40b830 <mbedtls_ssl_parse_finished>
  40fce5:	89 85 74 f2 ff ff    	mov    %eax,-0xd8c(%rbp)
  40fceb:	eb 2a                	jmp    40fd17 <mbedtls_ssl_handshake_step+0x35b7>
  40fced:	48 8b 85 78 f2 ff ff 	mov    -0xd88(%rbp),%rax
  40fcf4:	c7 40 08 0f 00 00 00 	movl   $0xf,0x8(%rax)
  40fcfb:	eb 1a                	jmp    40fd17 <mbedtls_ssl_handshake_step+0x35b7>
  40fcfd:	48 8b bd 78 f2 ff ff 	mov    -0xd88(%rbp),%rdi
  40fd04:	e8 57 b4 ff ff       	callq  40b160 <mbedtls_ssl_handshake_wrapup>
  40fd09:	eb 0c                	jmp    40fd17 <mbedtls_ssl_handshake_step+0x35b7>
  40fd0b:	c7 85 84 f2 ff ff 00 	movl   $0xffff8f00,-0xd7c(%rbp)
  40fd12:	8f ff ff 
  40fd15:	eb 0c                	jmp    40fd23 <mbedtls_ssl_handshake_step+0x35c3>
  40fd17:	8b 85 74 f2 ff ff    	mov    -0xd8c(%rbp),%eax
  40fd1d:	89 85 84 f2 ff ff    	mov    %eax,-0xd7c(%rbp)
  40fd23:	8b 85 84 f2 ff ff    	mov    -0xd7c(%rbp),%eax
  40fd29:	89 85 64 f2 ff ff    	mov    %eax,-0xd9c(%rbp)
  40fd2f:	48 8b 85 68 f2 ff ff 	mov    -0xd98(%rbp),%rax
  40fd36:	48 8b 00             	mov    (%rax),%rax
  40fd39:	8a 88 98 00 00 00    	mov    0x98(%rax),%cl
  40fd3f:	80 e1 01             	and    $0x1,%cl
  40fd42:	0f b6 d1             	movzbl %cl,%edx
  40fd45:	83 fa 01             	cmp    $0x1,%edx
  40fd48:	0f 85 2c 34 00 00    	jne    41317a <mbedtls_ssl_handshake_step+0x6a1a>
  40fd4e:	48 8b 85 68 f2 ff ff 	mov    -0xd98(%rbp),%rax
  40fd55:	48 89 85 28 f9 ff ff 	mov    %rax,-0x6d8(%rbp)
  40fd5c:	c7 85 24 f9 ff ff 00 	movl   $0x0,-0x6dc(%rbp)
  40fd63:	00 00 00 
  40fd66:	48 8b 85 28 f9 ff ff 	mov    -0x6d8(%rbp),%rax
  40fd6d:	83 78 08 10          	cmpl   $0x10,0x8(%rax)
  40fd71:	74 0e                	je     40fd81 <mbedtls_ssl_handshake_step+0x3621>
  40fd73:	48 8b 85 28 f9 ff ff 	mov    -0x6d8(%rbp),%rax
  40fd7a:	48 83 78 58 00       	cmpq   $0x0,0x58(%rax)
  40fd7f:	75 0f                	jne    40fd90 <mbedtls_ssl_handshake_step+0x3630>
  40fd81:	c7 85 34 f9 ff ff 00 	movl   $0xffff8f00,-0x6cc(%rbp)
  40fd88:	8f ff ff 
  40fd8b:	e9 de 33 00 00       	jmpq   41316e <mbedtls_ssl_handshake_step+0x6a0e>
  40fd90:	48 8b bd 28 f9 ff ff 	mov    -0x6d8(%rbp),%rdi
  40fd97:	e8 c4 75 ff ff       	callq  407360 <mbedtls_ssl_flush_output>
  40fd9c:	89 85 24 f9 ff ff    	mov    %eax,-0x6dc(%rbp)
  40fda2:	83 f8 00             	cmp    $0x0,%eax
  40fda5:	74 11                	je     40fdb8 <mbedtls_ssl_handshake_step+0x3658>
  40fda7:	8b 85 24 f9 ff ff    	mov    -0x6dc(%rbp),%eax
  40fdad:	89 85 34 f9 ff ff    	mov    %eax,-0x6cc(%rbp)
  40fdb3:	e9 b6 33 00 00       	jmpq   41316e <mbedtls_ssl_handshake_step+0x6a0e>
  40fdb8:	48 8b 85 28 f9 ff ff 	mov    -0x6d8(%rbp),%rax
  40fdbf:	8b 48 08             	mov    0x8(%rax),%ecx
  40fdc2:	89 c8                	mov    %ecx,%eax
  40fdc4:	48 89 c2             	mov    %rax,%rdx
  40fdc7:	48 83 ea 0f          	sub    $0xf,%rdx
  40fdcb:	48 89 85 00 f2 ff ff 	mov    %rax,-0xe00(%rbp)
  40fdd2:	48 89 95 f8 f1 ff ff 	mov    %rdx,-0xe08(%rbp)
  40fdd9:	0f 87 77 33 00 00    	ja     413156 <mbedtls_ssl_handshake_step+0x69f6>
  40fddf:	48 8b 85 00 f2 ff ff 	mov    -0xe00(%rbp),%rax
  40fde6:	48 8b 0c c5 78 6c 44 	mov    0x446c78(,%rax,8),%rcx
  40fded:	00 
  40fdee:	ff e1                	jmpq   *%rcx
  40fdf0:	48 8b 85 28 f9 ff ff 	mov    -0x6d8(%rbp),%rax
  40fdf7:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%rax)
  40fdfe:	e9 5f 33 00 00       	jmpq   413162 <mbedtls_ssl_handshake_step+0x6a02>
  40fe03:	b8 05 00 00 00       	mov    $0x5,%eax
  40fe08:	89 c6                	mov    %eax,%esi
  40fe0a:	48 8b 8d 28 f9 ff ff 	mov    -0x6d8(%rbp),%rcx
  40fe11:	48 89 8d d0 f9 ff ff 	mov    %rcx,-0x630(%rbp)
  40fe18:	c7 85 5c f9 ff ff 00 	movl   $0x0,-0x6a4(%rbp)
  40fe1f:	00 00 00 
  40fe22:	48 8b bd d0 f9 ff ff 	mov    -0x630(%rbp),%rdi
  40fe29:	e8 32 73 ff ff       	callq  407160 <mbedtls_ssl_fetch_input>
  40fe2e:	89 85 cc f9 ff ff    	mov    %eax,-0x634(%rbp)
  40fe34:	83 f8 00             	cmp    $0x0,%eax
  40fe37:	74 11                	je     40fe4a <mbedtls_ssl_handshake_step+0x36ea>
  40fe39:	8b 85 cc f9 ff ff    	mov    -0x634(%rbp),%eax
  40fe3f:	89 85 dc f9 ff ff    	mov    %eax,-0x624(%rbp)
  40fe45:	e9 81 19 00 00       	jmpq   4117cb <mbedtls_ssl_handshake_step+0x506b>
  40fe4a:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  40fe51:	48 8b 80 a8 00 00 00 	mov    0xa8(%rax),%rax
  40fe58:	48 89 85 70 f9 ff ff 	mov    %rax,-0x690(%rbp)
  40fe5f:	48 8b 85 70 f9 ff ff 	mov    -0x690(%rbp),%rax
  40fe66:	0f b6 08             	movzbl (%rax),%ecx
  40fe69:	83 f9 16             	cmp    $0x16,%ecx
  40fe6c:	74 0f                	je     40fe7d <mbedtls_ssl_handshake_step+0x371d>
  40fe6e:	c7 85 dc f9 ff ff 00 	movl   $0xffff8700,-0x624(%rbp)
  40fe75:	87 ff ff 
  40fe78:	e9 4e 19 00 00       	jmpq   4117cb <mbedtls_ssl_handshake_step+0x506b>
  40fe7d:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  40fe84:	48 8b 00             	mov    (%rax),%rax
  40fe87:	8a 88 98 00 00 00    	mov    0x98(%rax),%cl
  40fe8d:	c0 e9 01             	shr    $0x1,%cl
  40fe90:	80 e1 01             	and    $0x1,%cl
  40fe93:	0f b6 d1             	movzbl %cl,%edx
  40fe96:	48 8b 85 70 f9 ff ff 	mov    -0x690(%rbp),%rax
  40fe9d:	48 83 c0 01          	add    $0x1,%rax
  40fea1:	48 8d b5 44 f9 ff ff 	lea    -0x6bc(%rbp),%rsi
  40fea8:	48 89 b5 f8 f9 ff ff 	mov    %rsi,-0x608(%rbp)
  40feaf:	48 8d b5 40 f9 ff ff 	lea    -0x6c0(%rbp),%rsi
  40feb6:	48 89 b5 f0 f9 ff ff 	mov    %rsi,-0x610(%rbp)
  40febd:	89 95 ec f9 ff ff    	mov    %edx,-0x614(%rbp)
  40fec3:	48 89 85 e0 f9 ff ff 	mov    %rax,-0x620(%rbp)
  40feca:	48 8b 85 e0 f9 ff ff 	mov    -0x620(%rbp),%rax
  40fed1:	0f b6 10             	movzbl (%rax),%edx
  40fed4:	48 8b 85 f8 f9 ff ff 	mov    -0x608(%rbp),%rax
  40fedb:	89 10                	mov    %edx,(%rax)
  40fedd:	48 8b 85 e0 f9 ff ff 	mov    -0x620(%rbp),%rax
  40fee4:	0f b6 50 01          	movzbl 0x1(%rax),%edx
  40fee8:	48 8b 85 f0 f9 ff ff 	mov    -0x610(%rbp),%rax
  40feef:	89 10                	mov    %edx,(%rax)
  40fef1:	83 bd 44 f9 ff ff 03 	cmpl   $0x3,-0x6bc(%rbp)
  40fef8:	7d 0f                	jge    40ff09 <mbedtls_ssl_handshake_step+0x37a9>
  40fefa:	c7 85 dc f9 ff ff 00 	movl   $0xffff8700,-0x624(%rbp)
  40ff01:	87 ff ff 
  40ff04:	e9 c2 18 00 00       	jmpq   4117cb <mbedtls_ssl_handshake_step+0x506b>
  40ff09:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  40ff10:	48 8b 80 b0 00 00 00 	mov    0xb0(%rax),%rax
  40ff17:	0f b6 08             	movzbl (%rax),%ecx
  40ff1a:	c1 e1 08             	shl    $0x8,%ecx
  40ff1d:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  40ff24:	48 8b 80 b0 00 00 00 	mov    0xb0(%rax),%rax
  40ff2b:	0f b6 50 01          	movzbl 0x1(%rax),%edx
  40ff2f:	09 d1                	or     %edx,%ecx
  40ff31:	48 63 c1             	movslq %ecx,%rax
  40ff34:	48 89 85 98 f9 ff ff 	mov    %rax,-0x668(%rbp)
  40ff3b:	48 81 bd 98 f9 ff ff 	cmpq   $0x4000,-0x668(%rbp)
  40ff42:	00 40 00 00 
  40ff46:	76 0f                	jbe    40ff57 <mbedtls_ssl_handshake_step+0x37f7>
  40ff48:	c7 85 dc f9 ff ff 00 	movl   $0xffff8700,-0x624(%rbp)
  40ff4f:	87 ff ff 
  40ff52:	e9 74 18 00 00       	jmpq   4117cb <mbedtls_ssl_handshake_step+0x506b>
  40ff57:	48 8b bd d0 f9 ff ff 	mov    -0x630(%rbp),%rdi
  40ff5e:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  40ff65:	48 89 85 18 fa ff ff 	mov    %rax,-0x5e8(%rbp)
  40ff6c:	48 8b 85 98 f9 ff ff 	mov    -0x668(%rbp),%rax
  40ff73:	48 83 c0 05          	add    $0x5,%rax
  40ff77:	48 89 c6             	mov    %rax,%rsi
  40ff7a:	e8 e1 71 ff ff       	callq  407160 <mbedtls_ssl_fetch_input>
  40ff7f:	89 85 cc f9 ff ff    	mov    %eax,-0x634(%rbp)
  40ff85:	83 f8 00             	cmp    $0x0,%eax
  40ff88:	74 11                	je     40ff9b <mbedtls_ssl_handshake_step+0x383b>
  40ff8a:	8b 85 cc f9 ff ff    	mov    -0x634(%rbp),%eax
  40ff90:	89 85 dc f9 ff ff    	mov    %eax,-0x624(%rbp)
  40ff96:	e9 30 18 00 00       	jmpq   4117cb <mbedtls_ssl_handshake_step+0x506b>
  40ff9b:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  40ffa2:	48 c7 80 e0 00 00 00 	movq   $0x0,0xe0(%rax)
  40ffa9:	00 00 00 00 
  40ffad:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  40ffb4:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  40ffbb:	48 89 85 70 f9 ff ff 	mov    %rax,-0x690(%rbp)
  40ffc2:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  40ffc9:	48 8b 40 58          	mov    0x58(%rax),%rax
  40ffcd:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  40ffd4:	48 8b bd d0 f9 ff ff 	mov    -0x630(%rbp),%rdi
  40ffdb:	48 8b b5 70 f9 ff ff 	mov    -0x690(%rbp),%rsi
  40ffe2:	48 8b 95 98 f9 ff ff 	mov    -0x668(%rbp),%rdx
  40ffe9:	ff d0                	callq  *%rax
  40ffeb:	48 8b 85 98 f9 ff ff 	mov    -0x668(%rbp),%rax
  40fff2:	48 8b 95 d0 f9 ff ff 	mov    -0x630(%rbp),%rdx
  40fff9:	48 89 95 38 fa ff ff 	mov    %rdx,-0x5c8(%rbp)
  410000:	48 83 f8 04          	cmp    $0x4,%rax
  410004:	73 0f                	jae    410015 <mbedtls_ssl_handshake_step+0x38b5>
  410006:	c7 85 dc f9 ff ff 00 	movl   $0xffff8700,-0x624(%rbp)
  41000d:	87 ff ff 
  410010:	e9 b6 17 00 00       	jmpq   4117cb <mbedtls_ssl_handshake_step+0x506b>
  410015:	48 8b 85 70 f9 ff ff 	mov    -0x690(%rbp),%rax
  41001c:	0f b6 08             	movzbl (%rax),%ecx
  41001f:	83 f9 01             	cmp    $0x1,%ecx
  410022:	74 0f                	je     410033 <mbedtls_ssl_handshake_step+0x38d3>
  410024:	c7 85 dc f9 ff ff 00 	movl   $0xffff8700,-0x624(%rbp)
  41002b:	87 ff ff 
  41002e:	e9 98 17 00 00       	jmpq   4117cb <mbedtls_ssl_handshake_step+0x506b>
  410033:	48 8b 85 70 f9 ff ff 	mov    -0x690(%rbp),%rax
  41003a:	0f b6 48 01          	movzbl 0x1(%rax),%ecx
  41003e:	83 f9 00             	cmp    $0x0,%ecx
  410041:	75 3c                	jne    41007f <mbedtls_ssl_handshake_step+0x391f>
  410043:	48 8b 85 98 f9 ff ff 	mov    -0x668(%rbp),%rax
  41004a:	48 8b 8d d0 f9 ff ff 	mov    -0x630(%rbp),%rcx
  410051:	48 89 8d 00 fb ff ff 	mov    %rcx,-0x500(%rbp)
  410058:	48 8b 8d 70 f9 ff ff 	mov    -0x690(%rbp),%rcx
  41005f:	0f b6 51 02          	movzbl 0x2(%rcx),%edx
  410063:	c1 e2 08             	shl    $0x8,%edx
  410066:	48 8b 8d 70 f9 ff ff 	mov    -0x690(%rbp),%rcx
  41006d:	0f b6 71 03          	movzbl 0x3(%rcx),%esi
  410071:	09 f2                	or     %esi,%edx
  410073:	48 63 ca             	movslq %edx,%rcx
  410076:	48 83 c1 04          	add    $0x4,%rcx
  41007a:	48 39 c8             	cmp    %rcx,%rax
  41007d:	74 0f                	je     41008e <mbedtls_ssl_handshake_step+0x392e>
  41007f:	c7 85 dc f9 ff ff 00 	movl   $0xffff8700,-0x624(%rbp)
  410086:	87 ff ff 
  410089:	e9 3d 17 00 00       	jmpq   4117cb <mbedtls_ssl_handshake_step+0x506b>
  41008e:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  410095:	48 89 85 20 fb ff ff 	mov    %rax,-0x4e0(%rbp)
  41009c:	48 8b 85 70 f9 ff ff 	mov    -0x690(%rbp),%rax
  4100a3:	48 83 c0 04          	add    $0x4,%rax
  4100a7:	48 89 85 70 f9 ff ff 	mov    %rax,-0x690(%rbp)
  4100ae:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  4100b5:	48 89 85 40 fb ff ff 	mov    %rax,-0x4c0(%rbp)
  4100bc:	48 8b 85 98 f9 ff ff 	mov    -0x668(%rbp),%rax
  4100c3:	48 83 e8 04          	sub    $0x4,%rax
  4100c7:	48 89 85 98 f9 ff ff 	mov    %rax,-0x668(%rbp)
  4100ce:	48 83 bd 98 f9 ff ff 	cmpq   $0x26,-0x668(%rbp)
  4100d5:	26 
  4100d6:	73 0f                	jae    4100e7 <mbedtls_ssl_handshake_step+0x3987>
  4100d8:	c7 85 dc f9 ff ff 00 	movl   $0xffff8700,-0x624(%rbp)
  4100df:	87 ff ff 
  4100e2:	e9 e4 16 00 00       	jmpq   4117cb <mbedtls_ssl_handshake_step+0x506b>
  4100e7:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  4100ee:	48 83 c0 0c          	add    $0xc,%rax
  4100f2:	48 8b 8d d0 f9 ff ff 	mov    -0x630(%rbp),%rcx
  4100f9:	48 83 c1 10          	add    $0x10,%rcx
  4100fd:	48 8b 95 d0 f9 ff ff 	mov    -0x630(%rbp),%rdx
  410104:	48 8b 12             	mov    (%rdx),%rdx
  410107:	40 8a b2 98 00 00 00 	mov    0x98(%rdx),%sil
  41010e:	40 c0 ee 01          	shr    $0x1,%sil
  410112:	40 80 e6 01          	and    $0x1,%sil
  410116:	40 0f b6 fe          	movzbl %sil,%edi
  41011a:	48 8b 95 70 f9 ff ff 	mov    -0x690(%rbp),%rdx
  410121:	48 89 85 98 fb ff ff 	mov    %rax,-0x468(%rbp)
  410128:	48 89 8d 90 fb ff ff 	mov    %rcx,-0x470(%rbp)
  41012f:	89 bd 8c fb ff ff    	mov    %edi,-0x474(%rbp)
  410135:	48 89 95 80 fb ff ff 	mov    %rdx,-0x480(%rbp)
  41013c:	48 8b 85 80 fb ff ff 	mov    -0x480(%rbp),%rax
  410143:	0f b6 38             	movzbl (%rax),%edi
  410146:	48 8b 85 98 fb ff ff 	mov    -0x468(%rbp),%rax
  41014d:	89 38                	mov    %edi,(%rax)
  41014f:	48 8b 85 80 fb ff ff 	mov    -0x480(%rbp),%rax
  410156:	0f b6 78 01          	movzbl 0x1(%rax),%edi
  41015a:	48 8b 85 90 fb ff ff 	mov    -0x470(%rbp),%rax
  410161:	89 38                	mov    %edi,(%rax)
  410163:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  41016a:	8b 78 0c             	mov    0xc(%rax),%edi
  41016d:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  410174:	48 8b 40 58          	mov    0x58(%rax),%rax
  410178:	89 b8 5c 01 00 00    	mov    %edi,0x15c(%rax)
  41017e:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  410185:	8b 78 10             	mov    0x10(%rax),%edi
  410188:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  41018f:	48 8b 40 58          	mov    0x58(%rax),%rax
  410193:	89 b8 60 01 00 00    	mov    %edi,0x160(%rax)
  410199:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  4101a0:	8b 78 0c             	mov    0xc(%rax),%edi
  4101a3:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  4101aa:	48 8b 00             	mov    (%rax),%rax
  4101ad:	44 0f b6 80 96 00 00 	movzbl 0x96(%rax),%r8d
  4101b4:	00 
  4101b5:	44 39 c7             	cmp    %r8d,%edi
  4101b8:	7c 23                	jl     4101dd <mbedtls_ssl_handshake_step+0x3a7d>
  4101ba:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  4101c1:	8b 48 10             	mov    0x10(%rax),%ecx
  4101c4:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  4101cb:	48 8b 00             	mov    (%rax),%rax
  4101ce:	0f b6 90 97 00 00 00 	movzbl 0x97(%rax),%edx
  4101d5:	39 d1                	cmp    %edx,%ecx
  4101d7:	0f 8d d5 00 00 00    	jge    4102b2 <mbedtls_ssl_handshake_step+0x3b52>
  4101dd:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  4101e4:	48 89 85 c0 fb ff ff 	mov    %rax,-0x440(%rbp)
  4101eb:	c6 85 bf fb ff ff 02 	movb   $0x2,-0x441(%rbp)
  4101f2:	c6 85 be fb ff ff 46 	movb   $0x46,-0x442(%rbp)
  4101f9:	48 83 bd c0 fb ff ff 	cmpq   $0x0,-0x440(%rbp)
  410200:	00 
  410201:	74 0d                	je     410210 <mbedtls_ssl_handshake_step+0x3ab0>
  410203:	48 8b 85 c0 fb ff ff 	mov    -0x440(%rbp),%rax
  41020a:	48 83 38 00          	cmpq   $0x0,(%rax)
  41020e:	75 0f                	jne    41021f <mbedtls_ssl_handshake_step+0x3abf>
  410210:	c7 85 cc fb ff ff 00 	movl   $0xffff8f00,-0x434(%rbp)
  410217:	8f ff ff 
  41021a:	e9 84 00 00 00       	jmpq   4102a3 <mbedtls_ssl_handshake_step+0x3b43>
  41021f:	48 8b 85 c0 fb ff ff 	mov    -0x440(%rbp),%rax
  410226:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  41022d:	00 00 00 
  410230:	48 8b 85 c0 fb ff ff 	mov    -0x440(%rbp),%rax
  410237:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  41023e:	02 00 00 00 
  410242:	8a 8d bf fb ff ff    	mov    -0x441(%rbp),%cl
  410248:	48 8b 85 c0 fb ff ff 	mov    -0x440(%rbp),%rax
  41024f:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  410256:	88 08                	mov    %cl,(%rax)
  410258:	8a 8d be fb ff ff    	mov    -0x442(%rbp),%cl
  41025e:	48 8b 85 c0 fb ff ff 	mov    -0x440(%rbp),%rax
  410265:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  41026c:	88 48 01             	mov    %cl,0x1(%rax)
  41026f:	48 8b bd c0 fb ff ff 	mov    -0x440(%rbp),%rdi
  410276:	be 01 00 00 00       	mov    $0x1,%esi
  41027b:	e8 50 74 ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  410280:	89 85 b8 fb ff ff    	mov    %eax,-0x448(%rbp)
  410286:	83 f8 00             	cmp    $0x0,%eax
  410289:	74 0e                	je     410299 <mbedtls_ssl_handshake_step+0x3b39>
  41028b:	8b 85 b8 fb ff ff    	mov    -0x448(%rbp),%eax
  410291:	89 85 cc fb ff ff    	mov    %eax,-0x434(%rbp)
  410297:	eb 0a                	jmp    4102a3 <mbedtls_ssl_handshake_step+0x3b43>
  410299:	c7 85 cc fb ff ff 00 	movl   $0x0,-0x434(%rbp)
  4102a0:	00 00 00 
  4102a3:	c7 85 dc f9 ff ff 80 	movl   $0xffff9180,-0x624(%rbp)
  4102aa:	91 ff ff 
  4102ad:	e9 19 15 00 00       	jmpq   4117cb <mbedtls_ssl_handshake_step+0x506b>
  4102b2:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  4102b9:	8b 48 0c             	mov    0xc(%rax),%ecx
  4102bc:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  4102c3:	48 8b 00             	mov    (%rax),%rax
  4102c6:	0f b6 90 94 00 00 00 	movzbl 0x94(%rax),%edx
  4102cd:	39 d1                	cmp    %edx,%ecx
  4102cf:	7e 38                	jle    410309 <mbedtls_ssl_handshake_step+0x3ba9>
  4102d1:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  4102d8:	48 8b 00             	mov    (%rax),%rax
  4102db:	0f b6 88 94 00 00 00 	movzbl 0x94(%rax),%ecx
  4102e2:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  4102e9:	89 48 0c             	mov    %ecx,0xc(%rax)
  4102ec:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  4102f3:	48 8b 00             	mov    (%rax),%rax
  4102f6:	0f b6 88 95 00 00 00 	movzbl 0x95(%rax),%ecx
  4102fd:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  410304:	89 48 10             	mov    %ecx,0x10(%rax)
  410307:	eb 3c                	jmp    410345 <mbedtls_ssl_handshake_step+0x3be5>
  410309:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  410310:	8b 48 10             	mov    0x10(%rax),%ecx
  410313:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  41031a:	48 8b 00             	mov    (%rax),%rax
  41031d:	0f b6 90 95 00 00 00 	movzbl 0x95(%rax),%edx
  410324:	39 d1                	cmp    %edx,%ecx
  410326:	7e 1b                	jle    410343 <mbedtls_ssl_handshake_step+0x3be3>
  410328:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  41032f:	48 8b 00             	mov    (%rax),%rax
  410332:	0f b6 88 95 00 00 00 	movzbl 0x95(%rax),%ecx
  410339:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  410340:	89 48 10             	mov    %ecx,0x10(%rax)
  410343:	eb 00                	jmp    410345 <mbedtls_ssl_handshake_step+0x3be5>
  410345:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  41034c:	48 8b 40 58          	mov    0x58(%rax),%rax
  410350:	48 8b 8d 70 f9 ff ff 	mov    -0x690(%rbp),%rcx
  410357:	48 8b 51 02          	mov    0x2(%rcx),%rdx
  41035b:	48 89 90 e8 00 00 00 	mov    %rdx,0xe8(%rax)
  410362:	48 8b 51 0a          	mov    0xa(%rcx),%rdx
  410366:	48 89 90 f0 00 00 00 	mov    %rdx,0xf0(%rax)
  41036d:	48 8b 51 12          	mov    0x12(%rcx),%rdx
  410371:	48 89 90 f8 00 00 00 	mov    %rdx,0xf8(%rax)
  410378:	48 8b 49 1a          	mov    0x1a(%rcx),%rcx
  41037c:	48 89 88 00 01 00 00 	mov    %rcx,0x100(%rax)
  410383:	48 8b 85 70 f9 ff ff 	mov    -0x690(%rbp),%rax
  41038a:	0f b6 70 22          	movzbl 0x22(%rax),%esi
  41038e:	89 f0                	mov    %esi,%eax
  410390:	48 89 85 88 f9 ff ff 	mov    %rax,-0x678(%rbp)
  410397:	48 83 bd 88 f9 ff ff 	cmpq   $0x20,-0x678(%rbp)
  41039e:	20 
  41039f:	77 1c                	ja     4103bd <mbedtls_ssl_handshake_step+0x3c5d>
  4103a1:	48 8b 85 88 f9 ff ff 	mov    -0x678(%rbp),%rax
  4103a8:	48 83 c0 22          	add    $0x22,%rax
  4103ac:	48 83 c0 02          	add    $0x2,%rax
  4103b0:	48 3b 85 98 f9 ff ff 	cmp    -0x668(%rbp),%rax
  4103b7:	0f 86 d5 00 00 00    	jbe    410492 <mbedtls_ssl_handshake_step+0x3d32>
  4103bd:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  4103c4:	48 89 85 d8 fb ff ff 	mov    %rax,-0x428(%rbp)
  4103cb:	c6 85 d7 fb ff ff 02 	movb   $0x2,-0x429(%rbp)
  4103d2:	c6 85 d6 fb ff ff 32 	movb   $0x32,-0x42a(%rbp)
  4103d9:	48 83 bd d8 fb ff ff 	cmpq   $0x0,-0x428(%rbp)
  4103e0:	00 
  4103e1:	74 0d                	je     4103f0 <mbedtls_ssl_handshake_step+0x3c90>
  4103e3:	48 8b 85 d8 fb ff ff 	mov    -0x428(%rbp),%rax
  4103ea:	48 83 38 00          	cmpq   $0x0,(%rax)
  4103ee:	75 0f                	jne    4103ff <mbedtls_ssl_handshake_step+0x3c9f>
  4103f0:	c7 85 e4 fb ff ff 00 	movl   $0xffff8f00,-0x41c(%rbp)
  4103f7:	8f ff ff 
  4103fa:	e9 84 00 00 00       	jmpq   410483 <mbedtls_ssl_handshake_step+0x3d23>
  4103ff:	48 8b 85 d8 fb ff ff 	mov    -0x428(%rbp),%rax
  410406:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  41040d:	00 00 00 
  410410:	48 8b 85 d8 fb ff ff 	mov    -0x428(%rbp),%rax
  410417:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  41041e:	02 00 00 00 
  410422:	8a 8d d7 fb ff ff    	mov    -0x429(%rbp),%cl
  410428:	48 8b 85 d8 fb ff ff 	mov    -0x428(%rbp),%rax
  41042f:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  410436:	88 08                	mov    %cl,(%rax)
  410438:	8a 8d d6 fb ff ff    	mov    -0x42a(%rbp),%cl
  41043e:	48 8b 85 d8 fb ff ff 	mov    -0x428(%rbp),%rax
  410445:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  41044c:	88 48 01             	mov    %cl,0x1(%rax)
  41044f:	48 8b bd d8 fb ff ff 	mov    -0x428(%rbp),%rdi
  410456:	be 01 00 00 00       	mov    $0x1,%esi
  41045b:	e8 70 72 ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  410460:	89 85 d0 fb ff ff    	mov    %eax,-0x430(%rbp)
  410466:	83 f8 00             	cmp    $0x0,%eax
  410469:	74 0e                	je     410479 <mbedtls_ssl_handshake_step+0x3d19>
  41046b:	8b 85 d0 fb ff ff    	mov    -0x430(%rbp),%eax
  410471:	89 85 e4 fb ff ff    	mov    %eax,-0x41c(%rbp)
  410477:	eb 0a                	jmp    410483 <mbedtls_ssl_handshake_step+0x3d23>
  410479:	c7 85 e4 fb ff ff 00 	movl   $0x0,-0x41c(%rbp)
  410480:	00 00 00 
  410483:	c7 85 dc f9 ff ff 00 	movl   $0xffff8700,-0x624(%rbp)
  41048a:	87 ff ff 
  41048d:	e9 39 13 00 00       	jmpq   4117cb <mbedtls_ssl_handshake_step+0x506b>
  410492:	31 f6                	xor    %esi,%esi
  410494:	b8 20 00 00 00       	mov    $0x20,%eax
  410499:	89 c2                	mov    %eax,%edx
  41049b:	48 8b 8d 88 f9 ff ff 	mov    -0x678(%rbp),%rcx
  4104a2:	48 8b bd d0 f9 ff ff 	mov    -0x630(%rbp),%rdi
  4104a9:	48 8b 7f 50          	mov    0x50(%rdi),%rdi
  4104ad:	48 89 4f 10          	mov    %rcx,0x10(%rdi)
  4104b1:	48 8b 8d d0 f9 ff ff 	mov    -0x630(%rbp),%rcx
  4104b8:	48 8b 49 50          	mov    0x50(%rcx),%rcx
  4104bc:	48 83 c1 18          	add    $0x18,%rcx
  4104c0:	48 89 cf             	mov    %rcx,%rdi
  4104c3:	e8 58 0b ff ff       	callq  401020 <memset@plt>
  4104c8:	48 8b 8d d0 f9 ff ff 	mov    -0x630(%rbp),%rcx
  4104cf:	48 8b 49 50          	mov    0x50(%rcx),%rcx
  4104d3:	48 83 c1 18          	add    $0x18,%rcx
  4104d7:	48 8b 95 70 f9 ff ff 	mov    -0x690(%rbp),%rdx
  4104de:	48 83 c2 23          	add    $0x23,%rdx
  4104e2:	48 8b bd d0 f9 ff ff 	mov    -0x630(%rbp),%rdi
  4104e9:	48 8b 7f 50          	mov    0x50(%rdi),%rdi
  4104ed:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
  4104f1:	48 89 bd f0 f1 ff ff 	mov    %rdi,-0xe10(%rbp)
  4104f8:	48 89 cf             	mov    %rcx,%rdi
  4104fb:	48 89 d6             	mov    %rdx,%rsi
  4104fe:	48 8b 95 f0 f1 ff ff 	mov    -0xe10(%rbp),%rdx
  410505:	e8 66 0c ff ff       	callq  401170 <memcpy@plt>
  41050a:	48 8b 8d 88 f9 ff ff 	mov    -0x678(%rbp),%rcx
  410511:	48 83 c1 23          	add    $0x23,%rcx
  410515:	48 89 8d b0 f9 ff ff 	mov    %rcx,-0x650(%rbp)
  41051c:	48 8b 8d 70 f9 ff ff 	mov    -0x690(%rbp),%rcx
  410523:	48 8b 95 b0 f9 ff ff 	mov    -0x650(%rbp),%rdx
  41052a:	0f b6 04 11          	movzbl (%rcx,%rdx,1),%eax
  41052e:	c1 e0 08             	shl    $0x8,%eax
  410531:	48 8b 8d 70 f9 ff ff 	mov    -0x690(%rbp),%rcx
  410538:	48 8b 95 b0 f9 ff ff 	mov    -0x650(%rbp),%rdx
  41053f:	44 0f b6 44 11 01    	movzbl 0x1(%rcx,%rdx,1),%r8d
  410545:	44 09 c0             	or     %r8d,%eax
  410548:	48 63 c8             	movslq %eax,%rcx
  41054b:	48 89 8d 90 f9 ff ff 	mov    %rcx,-0x670(%rbp)
  410552:	48 83 bd 90 f9 ff ff 	cmpq   $0x2,-0x670(%rbp)
  410559:	02 
  41055a:	72 34                	jb     410590 <mbedtls_ssl_handshake_step+0x3e30>
  41055c:	48 8b 85 90 f9 ff ff 	mov    -0x670(%rbp),%rax
  410563:	48 83 c0 02          	add    $0x2,%rax
  410567:	48 03 85 b0 f9 ff ff 	add    -0x650(%rbp),%rax
  41056e:	48 83 c0 01          	add    $0x1,%rax
  410572:	48 3b 85 98 f9 ff ff 	cmp    -0x668(%rbp),%rax
  410579:	77 15                	ja     410590 <mbedtls_ssl_handshake_step+0x3e30>
  41057b:	48 8b 85 90 f9 ff ff 	mov    -0x670(%rbp),%rax
  410582:	48 83 e0 01          	and    $0x1,%rax
  410586:	48 83 f8 00          	cmp    $0x0,%rax
  41058a:	0f 84 d5 00 00 00    	je     410665 <mbedtls_ssl_handshake_step+0x3f05>
  410590:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  410597:	48 89 85 f0 fb ff ff 	mov    %rax,-0x410(%rbp)
  41059e:	c6 85 ef fb ff ff 02 	movb   $0x2,-0x411(%rbp)
  4105a5:	c6 85 ee fb ff ff 32 	movb   $0x32,-0x412(%rbp)
  4105ac:	48 83 bd f0 fb ff ff 	cmpq   $0x0,-0x410(%rbp)
  4105b3:	00 
  4105b4:	74 0d                	je     4105c3 <mbedtls_ssl_handshake_step+0x3e63>
  4105b6:	48 8b 85 f0 fb ff ff 	mov    -0x410(%rbp),%rax
  4105bd:	48 83 38 00          	cmpq   $0x0,(%rax)
  4105c1:	75 0f                	jne    4105d2 <mbedtls_ssl_handshake_step+0x3e72>
  4105c3:	c7 85 fc fb ff ff 00 	movl   $0xffff8f00,-0x404(%rbp)
  4105ca:	8f ff ff 
  4105cd:	e9 84 00 00 00       	jmpq   410656 <mbedtls_ssl_handshake_step+0x3ef6>
  4105d2:	48 8b 85 f0 fb ff ff 	mov    -0x410(%rbp),%rax
  4105d9:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  4105e0:	00 00 00 
  4105e3:	48 8b 85 f0 fb ff ff 	mov    -0x410(%rbp),%rax
  4105ea:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  4105f1:	02 00 00 00 
  4105f5:	8a 8d ef fb ff ff    	mov    -0x411(%rbp),%cl
  4105fb:	48 8b 85 f0 fb ff ff 	mov    -0x410(%rbp),%rax
  410602:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  410609:	88 08                	mov    %cl,(%rax)
  41060b:	8a 8d ee fb ff ff    	mov    -0x412(%rbp),%cl
  410611:	48 8b 85 f0 fb ff ff 	mov    -0x410(%rbp),%rax
  410618:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  41061f:	88 48 01             	mov    %cl,0x1(%rax)
  410622:	48 8b bd f0 fb ff ff 	mov    -0x410(%rbp),%rdi
  410629:	be 01 00 00 00       	mov    $0x1,%esi
  41062e:	e8 9d 70 ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  410633:	89 85 e8 fb ff ff    	mov    %eax,-0x418(%rbp)
  410639:	83 f8 00             	cmp    $0x0,%eax
  41063c:	74 0e                	je     41064c <mbedtls_ssl_handshake_step+0x3eec>
  41063e:	8b 85 e8 fb ff ff    	mov    -0x418(%rbp),%eax
  410644:	89 85 fc fb ff ff    	mov    %eax,-0x404(%rbp)
  41064a:	eb 0a                	jmp    410656 <mbedtls_ssl_handshake_step+0x3ef6>
  41064c:	c7 85 fc fb ff ff 00 	movl   $0x0,-0x404(%rbp)
  410653:	00 00 00 
  410656:	c7 85 dc f9 ff ff 00 	movl   $0xffff8700,-0x624(%rbp)
  41065d:	87 ff ff 
  410660:	e9 66 11 00 00       	jmpq   4117cb <mbedtls_ssl_handshake_step+0x506b>
  410665:	48 8b 85 b0 f9 ff ff 	mov    -0x650(%rbp),%rax
  41066c:	48 83 c0 02          	add    $0x2,%rax
  410670:	48 03 85 90 f9 ff ff 	add    -0x670(%rbp),%rax
  410677:	48 89 85 a8 f9 ff ff 	mov    %rax,-0x658(%rbp)
  41067e:	48 8b 85 70 f9 ff ff 	mov    -0x690(%rbp),%rax
  410685:	48 8b 8d a8 f9 ff ff 	mov    -0x658(%rbp),%rcx
  41068c:	0f b6 14 08          	movzbl (%rax,%rcx,1),%edx
  410690:	89 d0                	mov    %edx,%eax
  410692:	48 89 85 80 f9 ff ff 	mov    %rax,-0x680(%rbp)
  410699:	48 83 bd 80 f9 ff ff 	cmpq   $0x1,-0x680(%rbp)
  4106a0:	01 
  4106a1:	72 29                	jb     4106cc <mbedtls_ssl_handshake_step+0x3f6c>
  4106a3:	48 83 bd 80 f9 ff ff 	cmpq   $0x10,-0x680(%rbp)
  4106aa:	10 
  4106ab:	77 1f                	ja     4106cc <mbedtls_ssl_handshake_step+0x3f6c>
  4106ad:	48 8b 85 80 f9 ff ff 	mov    -0x680(%rbp),%rax
  4106b4:	48 03 85 a8 f9 ff ff 	add    -0x658(%rbp),%rax
  4106bb:	48 83 c0 01          	add    $0x1,%rax
  4106bf:	48 3b 85 98 f9 ff ff 	cmp    -0x668(%rbp),%rax
  4106c6:	0f 86 d5 00 00 00    	jbe    4107a1 <mbedtls_ssl_handshake_step+0x4041>
  4106cc:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  4106d3:	48 89 85 08 fc ff ff 	mov    %rax,-0x3f8(%rbp)
  4106da:	c6 85 07 fc ff ff 02 	movb   $0x2,-0x3f9(%rbp)
  4106e1:	c6 85 06 fc ff ff 32 	movb   $0x32,-0x3fa(%rbp)
  4106e8:	48 83 bd 08 fc ff ff 	cmpq   $0x0,-0x3f8(%rbp)
  4106ef:	00 
  4106f0:	74 0d                	je     4106ff <mbedtls_ssl_handshake_step+0x3f9f>
  4106f2:	48 8b 85 08 fc ff ff 	mov    -0x3f8(%rbp),%rax
  4106f9:	48 83 38 00          	cmpq   $0x0,(%rax)
  4106fd:	75 0f                	jne    41070e <mbedtls_ssl_handshake_step+0x3fae>
  4106ff:	c7 85 14 fc ff ff 00 	movl   $0xffff8f00,-0x3ec(%rbp)
  410706:	8f ff ff 
  410709:	e9 84 00 00 00       	jmpq   410792 <mbedtls_ssl_handshake_step+0x4032>
  41070e:	48 8b 85 08 fc ff ff 	mov    -0x3f8(%rbp),%rax
  410715:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  41071c:	00 00 00 
  41071f:	48 8b 85 08 fc ff ff 	mov    -0x3f8(%rbp),%rax
  410726:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  41072d:	02 00 00 00 
  410731:	8a 8d 07 fc ff ff    	mov    -0x3f9(%rbp),%cl
  410737:	48 8b 85 08 fc ff ff 	mov    -0x3f8(%rbp),%rax
  41073e:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  410745:	88 08                	mov    %cl,(%rax)
  410747:	8a 8d 06 fc ff ff    	mov    -0x3fa(%rbp),%cl
  41074d:	48 8b 85 08 fc ff ff 	mov    -0x3f8(%rbp),%rax
  410754:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  41075b:	88 48 01             	mov    %cl,0x1(%rax)
  41075e:	48 8b bd 08 fc ff ff 	mov    -0x3f8(%rbp),%rdi
  410765:	be 01 00 00 00       	mov    $0x1,%esi
  41076a:	e8 61 6f ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  41076f:	89 85 00 fc ff ff    	mov    %eax,-0x400(%rbp)
  410775:	83 f8 00             	cmp    $0x0,%eax
  410778:	74 0e                	je     410788 <mbedtls_ssl_handshake_step+0x4028>
  41077a:	8b 85 00 fc ff ff    	mov    -0x400(%rbp),%eax
  410780:	89 85 14 fc ff ff    	mov    %eax,-0x3ec(%rbp)
  410786:	eb 0a                	jmp    410792 <mbedtls_ssl_handshake_step+0x4032>
  410788:	c7 85 14 fc ff ff 00 	movl   $0x0,-0x3ec(%rbp)
  41078f:	00 00 00 
  410792:	c7 85 dc f9 ff ff 00 	movl   $0xffff8700,-0x624(%rbp)
  410799:	87 ff ff 
  41079c:	e9 2a 10 00 00       	jmpq   4117cb <mbedtls_ssl_handshake_step+0x506b>
  4107a1:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  4107a8:	48 8b 40 50          	mov    0x50(%rax),%rax
  4107ac:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
  4107b3:	48 8b 85 a8 f9 ff ff 	mov    -0x658(%rbp),%rax
  4107ba:	48 83 c0 01          	add    $0x1,%rax
  4107be:	48 03 85 80 f9 ff ff 	add    -0x680(%rbp),%rax
  4107c5:	48 89 85 a0 f9 ff ff 	mov    %rax,-0x660(%rbp)
  4107cc:	48 8b 85 98 f9 ff ff 	mov    -0x668(%rbp),%rax
  4107d3:	48 3b 85 a0 f9 ff ff 	cmp    -0x660(%rbp),%rax
  4107da:	0f 86 31 02 00 00    	jbe    410a11 <mbedtls_ssl_handshake_step+0x42b1>
  4107e0:	48 8b 85 98 f9 ff ff 	mov    -0x668(%rbp),%rax
  4107e7:	48 8b 8d a0 f9 ff ff 	mov    -0x660(%rbp),%rcx
  4107ee:	48 83 c1 02          	add    $0x2,%rcx
  4107f2:	48 39 c8             	cmp    %rcx,%rax
  4107f5:	0f 83 d5 00 00 00    	jae    4108d0 <mbedtls_ssl_handshake_step+0x4170>
  4107fb:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  410802:	48 89 85 20 fc ff ff 	mov    %rax,-0x3e0(%rbp)
  410809:	c6 85 1f fc ff ff 02 	movb   $0x2,-0x3e1(%rbp)
  410810:	c6 85 1e fc ff ff 32 	movb   $0x32,-0x3e2(%rbp)
  410817:	48 83 bd 20 fc ff ff 	cmpq   $0x0,-0x3e0(%rbp)
  41081e:	00 
  41081f:	74 0d                	je     41082e <mbedtls_ssl_handshake_step+0x40ce>
  410821:	48 8b 85 20 fc ff ff 	mov    -0x3e0(%rbp),%rax
  410828:	48 83 38 00          	cmpq   $0x0,(%rax)
  41082c:	75 0f                	jne    41083d <mbedtls_ssl_handshake_step+0x40dd>
  41082e:	c7 85 2c fc ff ff 00 	movl   $0xffff8f00,-0x3d4(%rbp)
  410835:	8f ff ff 
  410838:	e9 84 00 00 00       	jmpq   4108c1 <mbedtls_ssl_handshake_step+0x4161>
  41083d:	48 8b 85 20 fc ff ff 	mov    -0x3e0(%rbp),%rax
  410844:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  41084b:	00 00 00 
  41084e:	48 8b 85 20 fc ff ff 	mov    -0x3e0(%rbp),%rax
  410855:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  41085c:	02 00 00 00 
  410860:	8a 8d 1f fc ff ff    	mov    -0x3e1(%rbp),%cl
  410866:	48 8b 85 20 fc ff ff 	mov    -0x3e0(%rbp),%rax
  41086d:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  410874:	88 08                	mov    %cl,(%rax)
  410876:	8a 8d 1e fc ff ff    	mov    -0x3e2(%rbp),%cl
  41087c:	48 8b 85 20 fc ff ff 	mov    -0x3e0(%rbp),%rax
  410883:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  41088a:	88 48 01             	mov    %cl,0x1(%rax)
  41088d:	48 8b bd 20 fc ff ff 	mov    -0x3e0(%rbp),%rdi
  410894:	be 01 00 00 00       	mov    $0x1,%esi
  410899:	e8 32 6e ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  41089e:	89 85 18 fc ff ff    	mov    %eax,-0x3e8(%rbp)
  4108a4:	83 f8 00             	cmp    $0x0,%eax
  4108a7:	74 0e                	je     4108b7 <mbedtls_ssl_handshake_step+0x4157>
  4108a9:	8b 85 18 fc ff ff    	mov    -0x3e8(%rbp),%eax
  4108af:	89 85 2c fc ff ff    	mov    %eax,-0x3d4(%rbp)
  4108b5:	eb 0a                	jmp    4108c1 <mbedtls_ssl_handshake_step+0x4161>
  4108b7:	c7 85 2c fc ff ff 00 	movl   $0x0,-0x3d4(%rbp)
  4108be:	00 00 00 
  4108c1:	c7 85 dc f9 ff ff 00 	movl   $0xffff8700,-0x624(%rbp)
  4108c8:	87 ff ff 
  4108cb:	e9 fb 0e 00 00       	jmpq   4117cb <mbedtls_ssl_handshake_step+0x506b>
  4108d0:	48 8b 85 70 f9 ff ff 	mov    -0x690(%rbp),%rax
  4108d7:	48 8b 8d a0 f9 ff ff 	mov    -0x660(%rbp),%rcx
  4108de:	0f b6 14 08          	movzbl (%rax,%rcx,1),%edx
  4108e2:	c1 e2 08             	shl    $0x8,%edx
  4108e5:	48 8b 85 70 f9 ff ff 	mov    -0x690(%rbp),%rax
  4108ec:	48 8b 8d a0 f9 ff ff 	mov    -0x660(%rbp),%rcx
  4108f3:	0f b6 74 08 01       	movzbl 0x1(%rax,%rcx,1),%esi
  4108f8:	09 f2                	or     %esi,%edx
  4108fa:	48 63 c2             	movslq %edx,%rax
  4108fd:	48 89 85 78 f9 ff ff 	mov    %rax,-0x688(%rbp)
  410904:	48 83 bd 78 f9 ff ff 	cmpq   $0x0,-0x688(%rbp)
  41090b:	00 
  41090c:	76 0a                	jbe    410918 <mbedtls_ssl_handshake_step+0x41b8>
  41090e:	48 83 bd 78 f9 ff ff 	cmpq   $0x4,-0x688(%rbp)
  410915:	04 
  410916:	72 22                	jb     41093a <mbedtls_ssl_handshake_step+0x41da>
  410918:	48 8b 85 98 f9 ff ff 	mov    -0x668(%rbp),%rax
  41091f:	48 8b 8d a0 f9 ff ff 	mov    -0x660(%rbp),%rcx
  410926:	48 83 c1 02          	add    $0x2,%rcx
  41092a:	48 03 8d 78 f9 ff ff 	add    -0x688(%rbp),%rcx
  410931:	48 39 c8             	cmp    %rcx,%rax
  410934:	0f 84 d5 00 00 00    	je     410a0f <mbedtls_ssl_handshake_step+0x42af>
  41093a:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  410941:	48 89 85 38 fc ff ff 	mov    %rax,-0x3c8(%rbp)
  410948:	c6 85 37 fc ff ff 02 	movb   $0x2,-0x3c9(%rbp)
  41094f:	c6 85 36 fc ff ff 32 	movb   $0x32,-0x3ca(%rbp)
  410956:	48 83 bd 38 fc ff ff 	cmpq   $0x0,-0x3c8(%rbp)
  41095d:	00 
  41095e:	74 0d                	je     41096d <mbedtls_ssl_handshake_step+0x420d>
  410960:	48 8b 85 38 fc ff ff 	mov    -0x3c8(%rbp),%rax
  410967:	48 83 38 00          	cmpq   $0x0,(%rax)
  41096b:	75 0f                	jne    41097c <mbedtls_ssl_handshake_step+0x421c>
  41096d:	c7 85 44 fc ff ff 00 	movl   $0xffff8f00,-0x3bc(%rbp)
  410974:	8f ff ff 
  410977:	e9 84 00 00 00       	jmpq   410a00 <mbedtls_ssl_handshake_step+0x42a0>
  41097c:	48 8b 85 38 fc ff ff 	mov    -0x3c8(%rbp),%rax
  410983:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  41098a:	00 00 00 
  41098d:	48 8b 85 38 fc ff ff 	mov    -0x3c8(%rbp),%rax
  410994:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  41099b:	02 00 00 00 
  41099f:	8a 8d 37 fc ff ff    	mov    -0x3c9(%rbp),%cl
  4109a5:	48 8b 85 38 fc ff ff 	mov    -0x3c8(%rbp),%rax
  4109ac:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  4109b3:	88 08                	mov    %cl,(%rax)
  4109b5:	8a 8d 36 fc ff ff    	mov    -0x3ca(%rbp),%cl
  4109bb:	48 8b 85 38 fc ff ff 	mov    -0x3c8(%rbp),%rax
  4109c2:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  4109c9:	88 48 01             	mov    %cl,0x1(%rax)
  4109cc:	48 8b bd 38 fc ff ff 	mov    -0x3c8(%rbp),%rdi
  4109d3:	be 01 00 00 00       	mov    $0x1,%esi
  4109d8:	e8 f3 6c ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  4109dd:	89 85 30 fc ff ff    	mov    %eax,-0x3d0(%rbp)
  4109e3:	83 f8 00             	cmp    $0x0,%eax
  4109e6:	74 0e                	je     4109f6 <mbedtls_ssl_handshake_step+0x4296>
  4109e8:	8b 85 30 fc ff ff    	mov    -0x3d0(%rbp),%eax
  4109ee:	89 85 44 fc ff ff    	mov    %eax,-0x3bc(%rbp)
  4109f4:	eb 0a                	jmp    410a00 <mbedtls_ssl_handshake_step+0x42a0>
  4109f6:	c7 85 44 fc ff ff 00 	movl   $0x0,-0x3bc(%rbp)
  4109fd:	00 00 00 
  410a00:	c7 85 dc f9 ff ff 00 	movl   $0xffff8700,-0x624(%rbp)
  410a07:	87 ff ff 
  410a0a:	e9 bc 0d 00 00       	jmpq   4117cb <mbedtls_ssl_handshake_step+0x506b>
  410a0f:	eb 0b                	jmp    410a1c <mbedtls_ssl_handshake_step+0x42bc>
  410a11:	48 c7 85 78 f9 ff ff 	movq   $0x0,-0x688(%rbp)
  410a18:	00 00 00 00 
  410a1c:	48 8b 85 70 f9 ff ff 	mov    -0x690(%rbp),%rax
  410a23:	48 03 85 a0 f9 ff ff 	add    -0x660(%rbp),%rax
  410a2a:	48 83 c0 02          	add    $0x2,%rax
  410a2e:	48 89 85 60 f9 ff ff 	mov    %rax,-0x6a0(%rbp)
  410a35:	48 83 bd 78 f9 ff ff 	cmpq   $0x0,-0x688(%rbp)
  410a3c:	00 
  410a3d:	0f 84 b8 04 00 00    	je     410efb <mbedtls_ssl_handshake_step+0x479b>
  410a43:	48 83 bd 78 f9 ff ff 	cmpq   $0x4,-0x688(%rbp)
  410a4a:	04 
  410a4b:	0f 83 d5 00 00 00    	jae    410b26 <mbedtls_ssl_handshake_step+0x43c6>
  410a51:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  410a58:	48 89 85 50 fc ff ff 	mov    %rax,-0x3b0(%rbp)
  410a5f:	c6 85 4f fc ff ff 02 	movb   $0x2,-0x3b1(%rbp)
  410a66:	c6 85 4e fc ff ff 32 	movb   $0x32,-0x3b2(%rbp)
  410a6d:	48 83 bd 50 fc ff ff 	cmpq   $0x0,-0x3b0(%rbp)
  410a74:	00 
  410a75:	74 0d                	je     410a84 <mbedtls_ssl_handshake_step+0x4324>
  410a77:	48 8b 85 50 fc ff ff 	mov    -0x3b0(%rbp),%rax
  410a7e:	48 83 38 00          	cmpq   $0x0,(%rax)
  410a82:	75 0f                	jne    410a93 <mbedtls_ssl_handshake_step+0x4333>
  410a84:	c7 85 5c fc ff ff 00 	movl   $0xffff8f00,-0x3a4(%rbp)
  410a8b:	8f ff ff 
  410a8e:	e9 84 00 00 00       	jmpq   410b17 <mbedtls_ssl_handshake_step+0x43b7>
  410a93:	48 8b 85 50 fc ff ff 	mov    -0x3b0(%rbp),%rax
  410a9a:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  410aa1:	00 00 00 
  410aa4:	48 8b 85 50 fc ff ff 	mov    -0x3b0(%rbp),%rax
  410aab:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  410ab2:	02 00 00 00 
  410ab6:	8a 8d 4f fc ff ff    	mov    -0x3b1(%rbp),%cl
  410abc:	48 8b 85 50 fc ff ff 	mov    -0x3b0(%rbp),%rax
  410ac3:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  410aca:	88 08                	mov    %cl,(%rax)
  410acc:	8a 8d 4e fc ff ff    	mov    -0x3b2(%rbp),%cl
  410ad2:	48 8b 85 50 fc ff ff 	mov    -0x3b0(%rbp),%rax
  410ad9:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  410ae0:	88 48 01             	mov    %cl,0x1(%rax)
  410ae3:	48 8b bd 50 fc ff ff 	mov    -0x3b0(%rbp),%rdi
  410aea:	be 01 00 00 00       	mov    $0x1,%esi
  410aef:	e8 dc 6b ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  410af4:	89 85 48 fc ff ff    	mov    %eax,-0x3b8(%rbp)
  410afa:	83 f8 00             	cmp    $0x0,%eax
  410afd:	74 0e                	je     410b0d <mbedtls_ssl_handshake_step+0x43ad>
  410aff:	8b 85 48 fc ff ff    	mov    -0x3b8(%rbp),%eax
  410b05:	89 85 5c fc ff ff    	mov    %eax,-0x3a4(%rbp)
  410b0b:	eb 0a                	jmp    410b17 <mbedtls_ssl_handshake_step+0x43b7>
  410b0d:	c7 85 5c fc ff ff 00 	movl   $0x0,-0x3a4(%rbp)
  410b14:	00 00 00 
  410b17:	c7 85 dc f9 ff ff 00 	movl   $0xffff8700,-0x624(%rbp)
  410b1e:	87 ff ff 
  410b21:	e9 a5 0c 00 00       	jmpq   4117cb <mbedtls_ssl_handshake_step+0x506b>
  410b26:	48 8b 85 60 f9 ff ff 	mov    -0x6a0(%rbp),%rax
  410b2d:	0f b6 08             	movzbl (%rax),%ecx
  410b30:	c1 e1 08             	shl    $0x8,%ecx
  410b33:	48 8b 85 60 f9 ff ff 	mov    -0x6a0(%rbp),%rax
  410b3a:	0f b6 50 01          	movzbl 0x1(%rax),%edx
  410b3e:	09 d1                	or     %edx,%ecx
  410b40:	89 8d 3c f9 ff ff    	mov    %ecx,-0x6c4(%rbp)
  410b46:	48 8b 85 60 f9 ff ff 	mov    -0x6a0(%rbp),%rax
  410b4d:	0f b6 48 02          	movzbl 0x2(%rax),%ecx
  410b51:	c1 e1 08             	shl    $0x8,%ecx
  410b54:	48 8b 85 60 f9 ff ff 	mov    -0x6a0(%rbp),%rax
  410b5b:	0f b6 50 03          	movzbl 0x3(%rax),%edx
  410b5f:	09 d1                	or     %edx,%ecx
  410b61:	89 8d 38 f9 ff ff    	mov    %ecx,-0x6c8(%rbp)
  410b67:	8b 8d 38 f9 ff ff    	mov    -0x6c8(%rbp),%ecx
  410b6d:	83 c1 04             	add    $0x4,%ecx
  410b70:	89 c9                	mov    %ecx,%ecx
  410b72:	89 c8                	mov    %ecx,%eax
  410b74:	48 3b 85 78 f9 ff ff 	cmp    -0x688(%rbp),%rax
  410b7b:	0f 86 d5 00 00 00    	jbe    410c56 <mbedtls_ssl_handshake_step+0x44f6>
  410b81:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  410b88:	48 89 85 a8 fb ff ff 	mov    %rax,-0x458(%rbp)
  410b8f:	c6 85 a7 fb ff ff 02 	movb   $0x2,-0x459(%rbp)
  410b96:	c6 85 a6 fb ff ff 32 	movb   $0x32,-0x45a(%rbp)
  410b9d:	48 83 bd a8 fb ff ff 	cmpq   $0x0,-0x458(%rbp)
  410ba4:	00 
  410ba5:	74 0d                	je     410bb4 <mbedtls_ssl_handshake_step+0x4454>
  410ba7:	48 8b 85 a8 fb ff ff 	mov    -0x458(%rbp),%rax
  410bae:	48 83 38 00          	cmpq   $0x0,(%rax)
  410bb2:	75 0f                	jne    410bc3 <mbedtls_ssl_handshake_step+0x4463>
  410bb4:	c7 85 b4 fb ff ff 00 	movl   $0xffff8f00,-0x44c(%rbp)
  410bbb:	8f ff ff 
  410bbe:	e9 84 00 00 00       	jmpq   410c47 <mbedtls_ssl_handshake_step+0x44e7>
  410bc3:	48 8b 85 a8 fb ff ff 	mov    -0x458(%rbp),%rax
  410bca:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  410bd1:	00 00 00 
  410bd4:	48 8b 85 a8 fb ff ff 	mov    -0x458(%rbp),%rax
  410bdb:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  410be2:	02 00 00 00 
  410be6:	8a 8d a7 fb ff ff    	mov    -0x459(%rbp),%cl
  410bec:	48 8b 85 a8 fb ff ff 	mov    -0x458(%rbp),%rax
  410bf3:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  410bfa:	88 08                	mov    %cl,(%rax)
  410bfc:	8a 8d a6 fb ff ff    	mov    -0x45a(%rbp),%cl
  410c02:	48 8b 85 a8 fb ff ff 	mov    -0x458(%rbp),%rax
  410c09:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  410c10:	88 48 01             	mov    %cl,0x1(%rax)
  410c13:	48 8b bd a8 fb ff ff 	mov    -0x458(%rbp),%rdi
  410c1a:	be 01 00 00 00       	mov    $0x1,%esi
  410c1f:	e8 ac 6a ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  410c24:	89 85 a0 fb ff ff    	mov    %eax,-0x460(%rbp)
  410c2a:	83 f8 00             	cmp    $0x0,%eax
  410c2d:	74 0e                	je     410c3d <mbedtls_ssl_handshake_step+0x44dd>
  410c2f:	8b 85 a0 fb ff ff    	mov    -0x460(%rbp),%eax
  410c35:	89 85 b4 fb ff ff    	mov    %eax,-0x44c(%rbp)
  410c3b:	eb 0a                	jmp    410c47 <mbedtls_ssl_handshake_step+0x44e7>
  410c3d:	c7 85 b4 fb ff ff 00 	movl   $0x0,-0x44c(%rbp)
  410c44:	00 00 00 
  410c47:	c7 85 dc f9 ff ff 00 	movl   $0xffff8700,-0x624(%rbp)
  410c4e:	87 ff ff 
  410c51:	e9 75 0b 00 00       	jmpq   4117cb <mbedtls_ssl_handshake_step+0x506b>
  410c56:	81 bd 3c f9 ff ff 01 	cmpl   $0xff01,-0x6c4(%rbp)
  410c5d:	ff 00 00 
  410c60:	0f 85 61 01 00 00    	jne    410dc7 <mbedtls_ssl_handshake_step+0x4667>
  410c66:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  410c6d:	48 8b 8d 60 f9 ff ff 	mov    -0x6a0(%rbp),%rcx
  410c74:	48 83 c1 04          	add    $0x4,%rcx
  410c78:	8b 95 38 f9 ff ff    	mov    -0x6c8(%rbp),%edx
  410c7e:	89 d6                	mov    %edx,%esi
  410c80:	48 89 85 58 fb ff ff 	mov    %rax,-0x4a8(%rbp)
  410c87:	48 89 8d 50 fb ff ff 	mov    %rcx,-0x4b0(%rbp)
  410c8e:	48 89 b5 48 fb ff ff 	mov    %rsi,-0x4b8(%rbp)
  410c95:	48 83 bd 48 fb ff ff 	cmpq   $0x1,-0x4b8(%rbp)
  410c9c:	01 
  410c9d:	75 13                	jne    410cb2 <mbedtls_ssl_handshake_step+0x4552>
  410c9f:	48 8b 85 50 fb ff ff 	mov    -0x4b0(%rbp),%rax
  410ca6:	0f b6 08             	movzbl (%rax),%ecx
  410ca9:	83 f9 00             	cmp    $0x0,%ecx
  410cac:	0f 84 d2 00 00 00    	je     410d84 <mbedtls_ssl_handshake_step+0x4624>
  410cb2:	48 8b 85 58 fb ff ff 	mov    -0x4a8(%rbp),%rax
  410cb9:	48 89 85 70 fb ff ff 	mov    %rax,-0x490(%rbp)
  410cc0:	c6 85 6f fb ff ff 02 	movb   $0x2,-0x491(%rbp)
  410cc7:	c6 85 6e fb ff ff 28 	movb   $0x28,-0x492(%rbp)
  410cce:	48 83 bd 70 fb ff ff 	cmpq   $0x0,-0x490(%rbp)
  410cd5:	00 
  410cd6:	74 0d                	je     410ce5 <mbedtls_ssl_handshake_step+0x4585>
  410cd8:	48 8b 85 70 fb ff ff 	mov    -0x490(%rbp),%rax
  410cdf:	48 83 38 00          	cmpq   $0x0,(%rax)
  410ce3:	75 0f                	jne    410cf4 <mbedtls_ssl_handshake_step+0x4594>
  410ce5:	c7 85 7c fb ff ff 00 	movl   $0xffff8f00,-0x484(%rbp)
  410cec:	8f ff ff 
  410cef:	e9 84 00 00 00       	jmpq   410d78 <mbedtls_ssl_handshake_step+0x4618>
  410cf4:	48 8b 85 70 fb ff ff 	mov    -0x490(%rbp),%rax
  410cfb:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  410d02:	00 00 00 
  410d05:	48 8b 85 70 fb ff ff 	mov    -0x490(%rbp),%rax
  410d0c:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  410d13:	02 00 00 00 
  410d17:	8a 8d 6f fb ff ff    	mov    -0x491(%rbp),%cl
  410d1d:	48 8b 85 70 fb ff ff 	mov    -0x490(%rbp),%rax
  410d24:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  410d2b:	88 08                	mov    %cl,(%rax)
  410d2d:	8a 8d 6e fb ff ff    	mov    -0x492(%rbp),%cl
  410d33:	48 8b 85 70 fb ff ff 	mov    -0x490(%rbp),%rax
  410d3a:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  410d41:	88 48 01             	mov    %cl,0x1(%rax)
  410d44:	48 8b bd 70 fb ff ff 	mov    -0x490(%rbp),%rdi
  410d4b:	be 01 00 00 00       	mov    $0x1,%esi
  410d50:	e8 7b 69 ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  410d55:	89 85 68 fb ff ff    	mov    %eax,-0x498(%rbp)
  410d5b:	83 f8 00             	cmp    $0x0,%eax
  410d5e:	74 0e                	je     410d6e <mbedtls_ssl_handshake_step+0x460e>
  410d60:	8b 85 68 fb ff ff    	mov    -0x498(%rbp),%eax
  410d66:	89 85 7c fb ff ff    	mov    %eax,-0x484(%rbp)
  410d6c:	eb 0a                	jmp    410d78 <mbedtls_ssl_handshake_step+0x4618>
  410d6e:	c7 85 7c fb ff ff 00 	movl   $0x0,-0x484(%rbp)
  410d75:	00 00 00 
  410d78:	c7 85 64 fb ff ff 00 	movl   $0xffff8700,-0x49c(%rbp)
  410d7f:	87 ff ff 
  410d82:	eb 1b                	jmp    410d9f <mbedtls_ssl_handshake_step+0x463f>
  410d84:	48 8b 85 58 fb ff ff 	mov    -0x4a8(%rbp),%rax
  410d8b:	c7 80 58 01 00 00 01 	movl   $0x1,0x158(%rax)
  410d92:	00 00 00 
  410d95:	c7 85 64 fb ff ff 00 	movl   $0x0,-0x49c(%rbp)
  410d9c:	00 00 00 
  410d9f:	8b 85 64 fb ff ff    	mov    -0x49c(%rbp),%eax
  410da5:	89 85 cc f9 ff ff    	mov    %eax,-0x634(%rbp)
  410dab:	83 bd cc f9 ff ff 00 	cmpl   $0x0,-0x634(%rbp)
  410db2:	74 11                	je     410dc5 <mbedtls_ssl_handshake_step+0x4665>
  410db4:	8b 85 cc f9 ff ff    	mov    -0x634(%rbp),%eax
  410dba:	89 85 dc f9 ff ff    	mov    %eax,-0x624(%rbp)
  410dc0:	e9 06 0a 00 00       	jmpq   4117cb <mbedtls_ssl_handshake_step+0x506b>
  410dc5:	eb 02                	jmp    410dc9 <mbedtls_ssl_handshake_step+0x4669>
  410dc7:	eb 00                	jmp    410dc9 <mbedtls_ssl_handshake_step+0x4669>
  410dc9:	8b 85 38 f9 ff ff    	mov    -0x6c8(%rbp),%eax
  410dcf:	83 c0 04             	add    $0x4,%eax
  410dd2:	89 c0                	mov    %eax,%eax
  410dd4:	89 c1                	mov    %eax,%ecx
  410dd6:	48 8b 95 78 f9 ff ff 	mov    -0x688(%rbp),%rdx
  410ddd:	48 29 ca             	sub    %rcx,%rdx
  410de0:	48 89 95 78 f9 ff ff 	mov    %rdx,-0x688(%rbp)
  410de7:	8b 85 38 f9 ff ff    	mov    -0x6c8(%rbp),%eax
  410ded:	83 c0 04             	add    $0x4,%eax
  410df0:	48 8b 8d 60 f9 ff ff 	mov    -0x6a0(%rbp),%rcx
  410df7:	89 c0                	mov    %eax,%eax
  410df9:	89 c2                	mov    %eax,%edx
  410dfb:	48 01 d1             	add    %rdx,%rcx
  410dfe:	48 89 8d 60 f9 ff ff 	mov    %rcx,-0x6a0(%rbp)
  410e05:	48 83 bd 78 f9 ff ff 	cmpq   $0x0,-0x688(%rbp)
  410e0c:	00 
  410e0d:	0f 86 e3 00 00 00    	jbe    410ef6 <mbedtls_ssl_handshake_step+0x4796>
  410e13:	48 83 bd 78 f9 ff ff 	cmpq   $0x4,-0x688(%rbp)
  410e1a:	04 
  410e1b:	0f 83 d5 00 00 00    	jae    410ef6 <mbedtls_ssl_handshake_step+0x4796>
  410e21:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  410e28:	48 89 85 30 fb ff ff 	mov    %rax,-0x4d0(%rbp)
  410e2f:	c6 85 2f fb ff ff 02 	movb   $0x2,-0x4d1(%rbp)
  410e36:	c6 85 2e fb ff ff 32 	movb   $0x32,-0x4d2(%rbp)
  410e3d:	48 83 bd 30 fb ff ff 	cmpq   $0x0,-0x4d0(%rbp)
  410e44:	00 
  410e45:	74 0d                	je     410e54 <mbedtls_ssl_handshake_step+0x46f4>
  410e47:	48 8b 85 30 fb ff ff 	mov    -0x4d0(%rbp),%rax
  410e4e:	48 83 38 00          	cmpq   $0x0,(%rax)
  410e52:	75 0f                	jne    410e63 <mbedtls_ssl_handshake_step+0x4703>
  410e54:	c7 85 3c fb ff ff 00 	movl   $0xffff8f00,-0x4c4(%rbp)
  410e5b:	8f ff ff 
  410e5e:	e9 84 00 00 00       	jmpq   410ee7 <mbedtls_ssl_handshake_step+0x4787>
  410e63:	48 8b 85 30 fb ff ff 	mov    -0x4d0(%rbp),%rax
  410e6a:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  410e71:	00 00 00 
  410e74:	48 8b 85 30 fb ff ff 	mov    -0x4d0(%rbp),%rax
  410e7b:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  410e82:	02 00 00 00 
  410e86:	8a 8d 2f fb ff ff    	mov    -0x4d1(%rbp),%cl
  410e8c:	48 8b 85 30 fb ff ff 	mov    -0x4d0(%rbp),%rax
  410e93:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  410e9a:	88 08                	mov    %cl,(%rax)
  410e9c:	8a 8d 2e fb ff ff    	mov    -0x4d2(%rbp),%cl
  410ea2:	48 8b 85 30 fb ff ff 	mov    -0x4d0(%rbp),%rax
  410ea9:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  410eb0:	88 48 01             	mov    %cl,0x1(%rax)
  410eb3:	48 8b bd 30 fb ff ff 	mov    -0x4d0(%rbp),%rdi
  410eba:	be 01 00 00 00       	mov    $0x1,%esi
  410ebf:	e8 0c 68 ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  410ec4:	89 85 28 fb ff ff    	mov    %eax,-0x4d8(%rbp)
  410eca:	83 f8 00             	cmp    $0x0,%eax
  410ecd:	74 0e                	je     410edd <mbedtls_ssl_handshake_step+0x477d>
  410ecf:	8b 85 28 fb ff ff    	mov    -0x4d8(%rbp),%eax
  410ed5:	89 85 3c fb ff ff    	mov    %eax,-0x4c4(%rbp)
  410edb:	eb 0a                	jmp    410ee7 <mbedtls_ssl_handshake_step+0x4787>
  410edd:	c7 85 3c fb ff ff 00 	movl   $0x0,-0x4c4(%rbp)
  410ee4:	00 00 00 
  410ee7:	c7 85 dc f9 ff ff 00 	movl   $0xffff8700,-0x624(%rbp)
  410eee:	87 ff ff 
  410ef1:	e9 d5 08 00 00       	jmpq   4117cb <mbedtls_ssl_handshake_step+0x506b>
  410ef6:	e9 3a fb ff ff       	jmpq   410a35 <mbedtls_ssl_handshake_step+0x42d5>
  410efb:	48 c7 85 c0 f9 ff ff 	movq   $0x0,-0x640(%rbp)
  410f02:	00 00 00 00 
  410f06:	48 8b 85 70 f9 ff ff 	mov    -0x690(%rbp),%rax
  410f0d:	48 03 85 b0 f9 ff ff 	add    -0x650(%rbp),%rax
  410f14:	48 83 c0 02          	add    $0x2,%rax
  410f18:	48 89 85 68 f9 ff ff 	mov    %rax,-0x698(%rbp)
  410f1f:	48 8b 85 c0 f9 ff ff 	mov    -0x640(%rbp),%rax
  410f26:	48 3b 85 90 f9 ff ff 	cmp    -0x670(%rbp),%rax
  410f2d:	73 5b                	jae    410f8a <mbedtls_ssl_handshake_step+0x482a>
  410f2f:	48 8b 85 68 f9 ff ff 	mov    -0x698(%rbp),%rax
  410f36:	0f b6 08             	movzbl (%rax),%ecx
  410f39:	83 f9 00             	cmp    $0x0,%ecx
  410f3c:	75 26                	jne    410f64 <mbedtls_ssl_handshake_step+0x4804>
  410f3e:	48 8b 85 68 f9 ff ff 	mov    -0x698(%rbp),%rax
  410f45:	0f b6 48 01          	movzbl 0x1(%rax),%ecx
  410f49:	81 f9 ff 00 00 00    	cmp    $0xff,%ecx
  410f4f:	75 13                	jne    410f64 <mbedtls_ssl_handshake_step+0x4804>
  410f51:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  410f58:	c7 80 58 01 00 00 01 	movl   $0x1,0x158(%rax)
  410f5f:	00 00 00 
  410f62:	eb 26                	jmp    410f8a <mbedtls_ssl_handshake_step+0x482a>
  410f64:	48 8b 85 c0 f9 ff ff 	mov    -0x640(%rbp),%rax
  410f6b:	48 83 c0 02          	add    $0x2,%rax
  410f6f:	48 89 85 c0 f9 ff ff 	mov    %rax,-0x640(%rbp)
  410f76:	48 8b 85 68 f9 ff ff 	mov    -0x698(%rbp),%rax
  410f7d:	48 83 c0 02          	add    $0x2,%rax
  410f81:	48 89 85 68 f9 ff ff 	mov    %rax,-0x698(%rbp)
  410f88:	eb 95                	jmp    410f1f <mbedtls_ssl_handshake_step+0x47bf>
  410f8a:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  410f91:	83 b8 58 01 00 00 01 	cmpl   $0x1,0x158(%rax)
  410f98:	74 28                	je     410fc2 <mbedtls_ssl_handshake_step+0x4862>
  410f9a:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  410fa1:	48 8b 00             	mov    (%rax),%rax
  410fa4:	8a 88 98 00 00 00    	mov    0x98(%rax),%cl
  410faa:	c0 e9 04             	shr    $0x4,%cl
  410fad:	80 e1 03             	and    $0x3,%cl
  410fb0:	0f b6 d1             	movzbl %cl,%edx
  410fb3:	83 fa 02             	cmp    $0x2,%edx
  410fb6:	75 0a                	jne    410fc2 <mbedtls_ssl_handshake_step+0x4862>
  410fb8:	c7 85 5c f9 ff ff 01 	movl   $0x1,-0x6a4(%rbp)
  410fbf:	00 00 00 
  410fc2:	83 bd 5c f9 ff ff 01 	cmpl   $0x1,-0x6a4(%rbp)
  410fc9:	0f 85 d5 00 00 00    	jne    4110a4 <mbedtls_ssl_handshake_step+0x4944>
  410fcf:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  410fd6:	48 89 85 10 fb ff ff 	mov    %rax,-0x4f0(%rbp)
  410fdd:	c6 85 0f fb ff ff 02 	movb   $0x2,-0x4f1(%rbp)
  410fe4:	c6 85 0e fb ff ff 28 	movb   $0x28,-0x4f2(%rbp)
  410feb:	48 83 bd 10 fb ff ff 	cmpq   $0x0,-0x4f0(%rbp)
  410ff2:	00 
  410ff3:	74 0d                	je     411002 <mbedtls_ssl_handshake_step+0x48a2>
  410ff5:	48 8b 85 10 fb ff ff 	mov    -0x4f0(%rbp),%rax
  410ffc:	48 83 38 00          	cmpq   $0x0,(%rax)
  411000:	75 0f                	jne    411011 <mbedtls_ssl_handshake_step+0x48b1>
  411002:	c7 85 1c fb ff ff 00 	movl   $0xffff8f00,-0x4e4(%rbp)
  411009:	8f ff ff 
  41100c:	e9 84 00 00 00       	jmpq   411095 <mbedtls_ssl_handshake_step+0x4935>
  411011:	48 8b 85 10 fb ff ff 	mov    -0x4f0(%rbp),%rax
  411018:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  41101f:	00 00 00 
  411022:	48 8b 85 10 fb ff ff 	mov    -0x4f0(%rbp),%rax
  411029:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  411030:	02 00 00 00 
  411034:	8a 8d 0f fb ff ff    	mov    -0x4f1(%rbp),%cl
  41103a:	48 8b 85 10 fb ff ff 	mov    -0x4f0(%rbp),%rax
  411041:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  411048:	88 08                	mov    %cl,(%rax)
  41104a:	8a 8d 0e fb ff ff    	mov    -0x4f2(%rbp),%cl
  411050:	48 8b 85 10 fb ff ff 	mov    -0x4f0(%rbp),%rax
  411057:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  41105e:	88 48 01             	mov    %cl,0x1(%rax)
  411061:	48 8b bd 10 fb ff ff 	mov    -0x4f0(%rbp),%rdi
  411068:	be 01 00 00 00       	mov    $0x1,%esi
  41106d:	e8 5e 66 ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  411072:	89 85 08 fb ff ff    	mov    %eax,-0x4f8(%rbp)
  411078:	83 f8 00             	cmp    $0x0,%eax
  41107b:	74 0e                	je     41108b <mbedtls_ssl_handshake_step+0x492b>
  41107d:	8b 85 08 fb ff ff    	mov    -0x4f8(%rbp),%eax
  411083:	89 85 1c fb ff ff    	mov    %eax,-0x4e4(%rbp)
  411089:	eb 0a                	jmp    411095 <mbedtls_ssl_handshake_step+0x4935>
  41108b:	c7 85 1c fb ff ff 00 	movl   $0x0,-0x4e4(%rbp)
  411092:	00 00 00 
  411095:	c7 85 dc f9 ff ff 00 	movl   $0xffff8700,-0x624(%rbp)
  41109c:	87 ff ff 
  41109f:	e9 27 07 00 00       	jmpq   4117cb <mbedtls_ssl_handshake_step+0x506b>
  4110a4:	c7 85 c8 f9 ff ff 00 	movl   $0x0,-0x638(%rbp)
  4110ab:	00 00 00 
  4110ae:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  4110b5:	48 8b 00             	mov    (%rax),%rax
  4110b8:	48 8b 8d d0 f9 ff ff 	mov    -0x630(%rbp),%rcx
  4110bf:	48 63 49 10          	movslq 0x10(%rcx),%rcx
  4110c3:	48 8b 04 c8          	mov    (%rax,%rcx,8),%rax
  4110c7:	48 89 85 50 f9 ff ff 	mov    %rax,-0x6b0(%rbp)
  4110ce:	48 c7 85 48 f9 ff ff 	movq   $0x0,-0x6b8(%rbp)
  4110d5:	00 00 00 00 
  4110d9:	48 c7 85 c0 f9 ff ff 	movq   $0x0,-0x640(%rbp)
  4110e0:	00 00 00 00 
  4110e4:	48 8b 85 50 f9 ff ff 	mov    -0x6b0(%rbp),%rax
  4110eb:	48 8b 8d c0 f9 ff ff 	mov    -0x640(%rbp),%rcx
  4110f2:	83 3c 88 00          	cmpl   $0x0,(%rax,%rcx,4)
  4110f6:	0f 84 1d 05 00 00    	je     411619 <mbedtls_ssl_handshake_step+0x4eb9>
  4110fc:	48 c7 85 b8 f9 ff ff 	movq   $0x0,-0x648(%rbp)
  411103:	00 00 00 00 
  411107:	48 8b 85 70 f9 ff ff 	mov    -0x690(%rbp),%rax
  41110e:	48 03 85 b0 f9 ff ff 	add    -0x650(%rbp),%rax
  411115:	48 83 c0 02          	add    $0x2,%rax
  411119:	48 89 85 68 f9 ff ff 	mov    %rax,-0x698(%rbp)
  411120:	48 8b 85 b8 f9 ff ff 	mov    -0x648(%rbp),%rax
  411127:	48 3b 85 90 f9 ff ff 	cmp    -0x670(%rbp),%rax
  41112e:	0f 83 ce 04 00 00    	jae    411602 <mbedtls_ssl_handshake_step+0x4ea2>
  411134:	48 8b 85 68 f9 ff ff 	mov    -0x698(%rbp),%rax
  41113b:	0f b6 08             	movzbl (%rax),%ecx
  41113e:	48 8b 85 50 f9 ff ff 	mov    -0x6b0(%rbp),%rax
  411145:	48 8b 95 c0 f9 ff ff 	mov    -0x640(%rbp),%rdx
  41114c:	8b 34 90             	mov    (%rax,%rdx,4),%esi
  41114f:	c1 fe 08             	sar    $0x8,%esi
  411152:	81 e6 ff 00 00 00    	and    $0xff,%esi
  411158:	39 f1                	cmp    %esi,%ecx
  41115a:	75 26                	jne    411182 <mbedtls_ssl_handshake_step+0x4a22>
  41115c:	48 8b 85 68 f9 ff ff 	mov    -0x698(%rbp),%rax
  411163:	0f b6 48 01          	movzbl 0x1(%rax),%ecx
  411167:	48 8b 85 50 f9 ff ff 	mov    -0x6b0(%rbp),%rax
  41116e:	48 8b 95 c0 f9 ff ff 	mov    -0x640(%rbp),%rdx
  411175:	8b 34 90             	mov    (%rax,%rdx,4),%esi
  411178:	81 e6 ff 00 00 00    	and    $0xff,%esi
  41117e:	39 f1                	cmp    %esi,%ecx
  411180:	74 05                	je     411187 <mbedtls_ssl_handshake_step+0x4a27>
  411182:	e9 52 04 00 00       	jmpq   4115d9 <mbedtls_ssl_handshake_step+0x4e79>
  411187:	48 b8 70 90 44 00 00 	movabs $0x449070,%rax
  41118e:	00 00 00 
  411191:	c7 85 c8 f9 ff ff 01 	movl   $0x1,-0x638(%rbp)
  411198:	00 00 00 
  41119b:	48 8b 8d d0 f9 ff ff 	mov    -0x630(%rbp),%rcx
  4111a2:	48 8b 95 50 f9 ff ff 	mov    -0x6b0(%rbp),%rdx
  4111a9:	48 8b b5 c0 f9 ff ff 	mov    -0x640(%rbp),%rsi
  4111b0:	8b 3c b2             	mov    (%rdx,%rsi,4),%edi
  4111b3:	48 89 8d 58 fa ff ff 	mov    %rcx,-0x5a8(%rbp)
  4111ba:	89 bd 54 fa ff ff    	mov    %edi,-0x5ac(%rbp)
  4111c0:	48 8d 8d 48 f9 ff ff 	lea    -0x6b8(%rbp),%rcx
  4111c7:	48 89 8d 48 fa ff ff 	mov    %rcx,-0x5b8(%rbp)
  4111ce:	8b bd 54 fa ff ff    	mov    -0x5ac(%rbp),%edi
  4111d4:	89 bd 74 fa ff ff    	mov    %edi,-0x58c(%rbp)
  4111da:	48 89 85 68 fa ff ff 	mov    %rax,-0x598(%rbp)
  4111e1:	48 8b 85 68 fa ff ff 	mov    -0x598(%rbp),%rax
  4111e8:	83 38 00             	cmpl   $0x0,(%rax)
  4111eb:	74 35                	je     411222 <mbedtls_ssl_handshake_step+0x4ac2>
  4111ed:	48 8b 85 68 fa ff ff 	mov    -0x598(%rbp),%rax
  4111f4:	8b 08                	mov    (%rax),%ecx
  4111f6:	3b 8d 74 fa ff ff    	cmp    -0x58c(%rbp),%ecx
  4111fc:	75 10                	jne    41120e <mbedtls_ssl_handshake_step+0x4aae>
  4111fe:	48 8b 85 68 fa ff ff 	mov    -0x598(%rbp),%rax
  411205:	48 89 85 78 fa ff ff 	mov    %rax,-0x588(%rbp)
  41120c:	eb 1f                	jmp    41122d <mbedtls_ssl_handshake_step+0x4acd>
  41120e:	48 8b 85 68 fa ff ff 	mov    -0x598(%rbp),%rax
  411215:	48 83 c0 30          	add    $0x30,%rax
  411219:	48 89 85 68 fa ff ff 	mov    %rax,-0x598(%rbp)
  411220:	eb bf                	jmp    4111e1 <mbedtls_ssl_handshake_step+0x4a81>
  411222:	48 c7 85 78 fa ff ff 	movq   $0x0,-0x588(%rbp)
  411229:	00 00 00 00 
  41122d:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
  411234:	48 89 85 40 fa ff ff 	mov    %rax,-0x5c0(%rbp)
  41123b:	48 83 bd 40 fa ff ff 	cmpq   $0x0,-0x5c0(%rbp)
  411242:	00 
  411243:	75 0f                	jne    411254 <mbedtls_ssl_handshake_step+0x4af4>
  411245:	c7 85 64 fa ff ff 00 	movl   $0xffff9400,-0x59c(%rbp)
  41124c:	94 ff ff 
  41124f:	e9 04 03 00 00       	jmpq   411558 <mbedtls_ssl_handshake_step+0x4df8>
  411254:	48 8b 85 40 fa ff ff 	mov    -0x5c0(%rbp),%rax
  41125b:	8b 48 20             	mov    0x20(%rax),%ecx
  41125e:	48 8b 85 58 fa ff ff 	mov    -0x5a8(%rbp),%rax
  411265:	3b 48 10             	cmp    0x10(%rax),%ecx
  411268:	7f 16                	jg     411280 <mbedtls_ssl_handshake_step+0x4b20>
  41126a:	48 8b 85 40 fa ff ff 	mov    -0x5c0(%rbp),%rax
  411271:	8b 48 28             	mov    0x28(%rax),%ecx
  411274:	48 8b 85 58 fa ff ff 	mov    -0x5a8(%rbp),%rax
  41127b:	3b 48 10             	cmp    0x10(%rax),%ecx
  41127e:	7d 0f                	jge    41128f <mbedtls_ssl_handshake_step+0x4b2f>
  411280:	c7 85 64 fa ff ff 00 	movl   $0x0,-0x59c(%rbp)
  411287:	00 00 00 
  41128a:	e9 c9 02 00 00       	jmpq   411558 <mbedtls_ssl_handshake_step+0x4df8>
  41128f:	48 8b 85 58 fa ff ff 	mov    -0x5a8(%rbp),%rax
  411296:	48 8b 8d 40 fa ff ff 	mov    -0x5c0(%rbp),%rcx
  41129d:	48 89 85 a8 fa ff ff 	mov    %rax,-0x558(%rbp)
  4112a4:	48 89 8d a0 fa ff ff 	mov    %rcx,-0x560(%rbp)
  4112ab:	48 c7 85 88 fa ff ff 	movq   $0x0,-0x578(%rbp)
  4112b2:	00 00 00 00 
  4112b6:	48 8b 85 a0 fa ff ff 	mov    -0x560(%rbp),%rax
  4112bd:	48 89 85 b8 fa ff ff 	mov    %rax,-0x548(%rbp)
  4112c4:	48 8b 85 b8 fa ff ff 	mov    -0x548(%rbp),%rax
  4112cb:	8b 50 18             	mov    0x18(%rax),%edx
  4112ce:	89 d6                	mov    %edx,%esi
  4112d0:	83 c6 ff             	add    $0xffffffff,%esi
  4112d3:	83 ee 03             	sub    $0x3,%esi
  4112d6:	89 95 ec f1 ff ff    	mov    %edx,-0xe14(%rbp)
  4112dc:	89 b5 e8 f1 ff ff    	mov    %esi,-0xe18(%rbp)
  4112e2:	72 3e                	jb     411322 <mbedtls_ssl_handshake_step+0x4bc2>
  4112e4:	eb 00                	jmp    4112e6 <mbedtls_ssl_handshake_step+0x4b86>
  4112e6:	8b 85 ec f1 ff ff    	mov    -0xe14(%rbp),%eax
  4112ec:	83 e8 04             	sub    $0x4,%eax
  4112ef:	89 85 e4 f1 ff ff    	mov    %eax,-0xe1c(%rbp)
  4112f5:	74 37                	je     41132e <mbedtls_ssl_handshake_step+0x4bce>
  4112f7:	eb 00                	jmp    4112f9 <mbedtls_ssl_handshake_step+0x4b99>
  4112f9:	8b 85 ec f1 ff ff    	mov    -0xe14(%rbp),%eax
  4112ff:	83 e8 07             	sub    $0x7,%eax
  411302:	89 85 e0 f1 ff ff    	mov    %eax,-0xe20(%rbp)
  411308:	74 18                	je     411322 <mbedtls_ssl_handshake_step+0x4bc2>
  41130a:	eb 00                	jmp    41130c <mbedtls_ssl_handshake_step+0x4bac>
  41130c:	8b 85 ec f1 ff ff    	mov    -0xe14(%rbp),%eax
  411312:	83 c0 f7             	add    $0xfffffff7,%eax
  411315:	83 e8 02             	sub    $0x2,%eax
  411318:	89 85 dc f1 ff ff    	mov    %eax,-0xe24(%rbp)
  41131e:	72 1a                	jb     41133a <mbedtls_ssl_handshake_step+0x4bda>
  411320:	eb 24                	jmp    411346 <mbedtls_ssl_handshake_step+0x4be6>
  411322:	c7 85 c0 fa ff ff 01 	movl   $0x1,-0x540(%rbp)
  411329:	00 00 00 
  41132c:	eb 22                	jmp    411350 <mbedtls_ssl_handshake_step+0x4bf0>
  41132e:	c7 85 c0 fa ff ff 04 	movl   $0x4,-0x540(%rbp)
  411335:	00 00 00 
  411338:	eb 16                	jmp    411350 <mbedtls_ssl_handshake_step+0x4bf0>
  41133a:	c7 85 c0 fa ff ff 02 	movl   $0x2,-0x540(%rbp)
  411341:	00 00 00 
  411344:	eb 0a                	jmp    411350 <mbedtls_ssl_handshake_step+0x4bf0>
  411346:	c7 85 c0 fa ff ff 00 	movl   $0x0,-0x540(%rbp)
  41134d:	00 00 00 
  411350:	8b 85 c0 fa ff ff    	mov    -0x540(%rbp),%eax
  411356:	89 85 84 fa ff ff    	mov    %eax,-0x57c(%rbp)
  41135c:	48 8b 8d a8 fa ff ff 	mov    -0x558(%rbp),%rcx
  411363:	48 8b 09             	mov    (%rcx),%rcx
  411366:	48 8b 49 70          	mov    0x70(%rcx),%rcx
  41136a:	48 89 8d 90 fa ff ff 	mov    %rcx,-0x570(%rbp)
  411371:	83 bd 84 fa ff ff 00 	cmpl   $0x0,-0x57c(%rbp)
  411378:	75 0f                	jne    411389 <mbedtls_ssl_handshake_step+0x4c29>
  41137a:	c7 85 b4 fa ff ff 00 	movl   $0x0,-0x54c(%rbp)
  411381:	00 00 00 
  411384:	e9 9d 01 00 00       	jmpq   411526 <mbedtls_ssl_handshake_step+0x4dc6>
  411389:	48 83 bd 90 fa ff ff 	cmpq   $0x0,-0x570(%rbp)
  411390:	00 
  411391:	75 0f                	jne    4113a2 <mbedtls_ssl_handshake_step+0x4c42>
  411393:	c7 85 b4 fa ff ff ff 	movl   $0xffffffff,-0x54c(%rbp)
  41139a:	ff ff ff 
  41139d:	e9 84 01 00 00       	jmpq   411526 <mbedtls_ssl_handshake_step+0x4dc6>
  4113a2:	48 8b 85 90 fa ff ff 	mov    -0x570(%rbp),%rax
  4113a9:	48 89 85 98 fa ff ff 	mov    %rax,-0x568(%rbp)
  4113b0:	48 83 bd 98 fa ff ff 	cmpq   $0x0,-0x568(%rbp)
  4113b7:	00 
  4113b8:	0f 84 1b 01 00 00    	je     4114d9 <mbedtls_ssl_handshake_step+0x4d79>
  4113be:	48 8b 85 98 fa ff ff 	mov    -0x568(%rbp),%rax
  4113c5:	48 8b 00             	mov    (%rax),%rax
  4113c8:	48 05 48 01 00 00    	add    $0x148,%rax
  4113ce:	8b 8d 84 fa ff ff    	mov    -0x57c(%rbp),%ecx
  4113d4:	48 89 85 f0 fa ff ff 	mov    %rax,-0x510(%rbp)
  4113db:	89 8d ec fa ff ff    	mov    %ecx,-0x514(%rbp)
  4113e1:	48 83 bd f0 fa ff ff 	cmpq   $0x0,-0x510(%rbp)
  4113e8:	00 
  4113e9:	74 0d                	je     4113f8 <mbedtls_ssl_handshake_step+0x4c98>
  4113eb:	48 8b 85 f0 fa ff ff 	mov    -0x510(%rbp),%rax
  4113f2:	48 83 38 00          	cmpq   $0x0,(%rax)
  4113f6:	75 0c                	jne    411404 <mbedtls_ssl_handshake_step+0x4ca4>
  4113f8:	c7 85 fc fa ff ff 00 	movl   $0x0,-0x504(%rbp)
  4113ff:	00 00 00 
  411402:	eb 24                	jmp    411428 <mbedtls_ssl_handshake_step+0x4cc8>
  411404:	48 8b 85 f0 fa ff ff 	mov    -0x510(%rbp),%rax
  41140b:	48 8b 00             	mov    (%rax),%rax
  41140e:	48 83 c0 30          	add    $0x30,%rax
  411412:	48 89 c7             	mov    %rax,%rdi
  411415:	e8 2e 4d 03 00       	callq  446148 <getDecryptedValueQWord>
  41141a:	8b bd ec fa ff ff    	mov    -0x514(%rbp),%edi
  411420:	ff d0                	callq  *%rax
  411422:	89 85 fc fa ff ff    	mov    %eax,-0x504(%rbp)
  411428:	8b 85 fc fa ff ff    	mov    -0x504(%rbp),%eax
  41142e:	83 f8 00             	cmp    $0x0,%eax
  411431:	75 05                	jne    411438 <mbedtls_ssl_handshake_step+0x4cd8>
  411433:	e9 8a 00 00 00       	jmpq   4114c2 <mbedtls_ssl_handshake_step+0x4d62>
  411438:	48 8b 85 98 fa ff ff 	mov    -0x568(%rbp),%rax
  41143f:	48 8b 00             	mov    (%rax),%rax
  411442:	48 8b 8d a0 fa ff ff 	mov    -0x560(%rbp),%rcx
  411449:	48 89 85 e0 fa ff ff 	mov    %rax,-0x520(%rbp)
  411450:	48 89 8d d8 fa ff ff 	mov    %rcx,-0x528(%rbp)
  411457:	c7 85 d4 fa ff ff 01 	movl   $0x1,-0x52c(%rbp)
  41145e:	00 00 00 
  411461:	48 8d 85 80 fa ff ff 	lea    -0x580(%rbp),%rax
  411468:	48 89 85 c8 fa ff ff 	mov    %rax,-0x538(%rbp)
  41146f:	c7 85 c4 fa ff ff 00 	movl   $0x0,-0x53c(%rbp)
  411476:	00 00 00 
  411479:	8b 95 c4 fa ff ff    	mov    -0x53c(%rbp),%edx
  41147f:	83 fa 00             	cmp    $0x0,%edx
  411482:	74 02                	je     411486 <mbedtls_ssl_handshake_step+0x4d26>
  411484:	eb 3c                	jmp    4114c2 <mbedtls_ssl_handshake_step+0x4d62>
  411486:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
  41148d:	83 78 10 03          	cmpl   $0x3,0x10(%rax)
  411491:	7d 2d                	jge    4114c0 <mbedtls_ssl_handshake_step+0x4d60>
  411493:	48 8b 85 98 fa ff ff 	mov    -0x568(%rbp),%rax
  41149a:	48 8b 00             	mov    (%rax),%rax
  41149d:	83 b8 10 02 00 00 04 	cmpl   $0x4,0x210(%rax)
  4114a4:	74 1a                	je     4114c0 <mbedtls_ssl_handshake_step+0x4d60>
  4114a6:	48 83 bd 88 fa ff ff 	cmpq   $0x0,-0x578(%rbp)
  4114ad:	00 
  4114ae:	75 0e                	jne    4114be <mbedtls_ssl_handshake_step+0x4d5e>
  4114b0:	48 8b 85 98 fa ff ff 	mov    -0x568(%rbp),%rax
  4114b7:	48 89 85 88 fa ff ff 	mov    %rax,-0x578(%rbp)
  4114be:	eb 02                	jmp    4114c2 <mbedtls_ssl_handshake_step+0x4d62>
  4114c0:	eb 17                	jmp    4114d9 <mbedtls_ssl_handshake_step+0x4d79>
  4114c2:	48 8b 85 98 fa ff ff 	mov    -0x568(%rbp),%rax
  4114c9:	48 8b 40 10          	mov    0x10(%rax),%rax
  4114cd:	48 89 85 98 fa ff ff 	mov    %rax,-0x568(%rbp)
  4114d4:	e9 d7 fe ff ff       	jmpq   4113b0 <mbedtls_ssl_handshake_step+0x4c50>
  4114d9:	48 83 bd 98 fa ff ff 	cmpq   $0x0,-0x568(%rbp)
  4114e0:	00 
  4114e1:	75 0e                	jne    4114f1 <mbedtls_ssl_handshake_step+0x4d91>
  4114e3:	48 8b 85 88 fa ff ff 	mov    -0x578(%rbp),%rax
  4114ea:	48 89 85 98 fa ff ff 	mov    %rax,-0x568(%rbp)
  4114f1:	48 83 bd 98 fa ff ff 	cmpq   $0x0,-0x568(%rbp)
  4114f8:	00 
  4114f9:	74 21                	je     41151c <mbedtls_ssl_handshake_step+0x4dbc>
  4114fb:	48 8b 85 98 fa ff ff 	mov    -0x568(%rbp),%rax
  411502:	48 8b 8d a8 fa ff ff 	mov    -0x558(%rbp),%rcx
  411509:	48 8b 49 58          	mov    0x58(%rcx),%rcx
  41150d:	48 89 01             	mov    %rax,(%rcx)
  411510:	c7 85 b4 fa ff ff 00 	movl   $0x0,-0x54c(%rbp)
  411517:	00 00 00 
  41151a:	eb 0a                	jmp    411526 <mbedtls_ssl_handshake_step+0x4dc6>
  41151c:	c7 85 b4 fa ff ff ff 	movl   $0xffffffff,-0x54c(%rbp)
  411523:	ff ff ff 
  411526:	8b 85 b4 fa ff ff    	mov    -0x54c(%rbp),%eax
  41152c:	83 f8 00             	cmp    $0x0,%eax
  41152f:	74 0c                	je     41153d <mbedtls_ssl_handshake_step+0x4ddd>
  411531:	c7 85 64 fa ff ff 00 	movl   $0x0,-0x59c(%rbp)
  411538:	00 00 00 
  41153b:	eb 1b                	jmp    411558 <mbedtls_ssl_handshake_step+0x4df8>
  41153d:	48 8b 85 40 fa ff ff 	mov    -0x5c0(%rbp),%rax
  411544:	48 8b 8d 48 fa ff ff 	mov    -0x5b8(%rbp),%rcx
  41154b:	48 89 01             	mov    %rax,(%rcx)
  41154e:	c7 85 64 fa ff ff 00 	movl   $0x0,-0x59c(%rbp)
  411555:	00 00 00 
  411558:	8b 85 64 fa ff ff    	mov    -0x59c(%rbp),%eax
  41155e:	89 85 cc f9 ff ff    	mov    %eax,-0x634(%rbp)
  411564:	83 f8 00             	cmp    $0x0,%eax
  411567:	74 11                	je     41157a <mbedtls_ssl_handshake_step+0x4e1a>
  411569:	8b 85 cc f9 ff ff    	mov    -0x634(%rbp),%eax
  41156f:	89 85 dc f9 ff ff    	mov    %eax,-0x624(%rbp)
  411575:	e9 51 02 00 00       	jmpq   4117cb <mbedtls_ssl_handshake_step+0x506b>
  41157a:	48 83 bd 48 f9 ff ff 	cmpq   $0x0,-0x6b8(%rbp)
  411581:	00 
  411582:	74 53                	je     4115d7 <mbedtls_ssl_handshake_step+0x4e77>
  411584:	48 8b 85 50 f9 ff ff 	mov    -0x6b0(%rbp),%rax
  41158b:	48 8b 8d c0 f9 ff ff 	mov    -0x640(%rbp),%rcx
  411592:	8b 14 88             	mov    (%rax,%rcx,4),%edx
  411595:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  41159c:	48 8b 40 50          	mov    0x50(%rax),%rax
  4115a0:	89 50 08             	mov    %edx,0x8(%rax)
  4115a3:	48 8b 85 48 f9 ff ff 	mov    -0x6b8(%rbp),%rax
  4115aa:	48 8b 8d d0 f9 ff ff 	mov    -0x630(%rbp),%rcx
  4115b1:	48 8b 49 78          	mov    0x78(%rcx),%rcx
  4115b5:	48 89 01             	mov    %rax,(%rcx)
  4115b8:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  4115bf:	8b 50 08             	mov    0x8(%rax),%edx
  4115c2:	83 c2 01             	add    $0x1,%edx
  4115c5:	89 50 08             	mov    %edx,0x8(%rax)
  4115c8:	c7 85 dc f9 ff ff 00 	movl   $0x0,-0x624(%rbp)
  4115cf:	00 00 00 
  4115d2:	e9 f4 01 00 00       	jmpq   4117cb <mbedtls_ssl_handshake_step+0x506b>
  4115d7:	eb 00                	jmp    4115d9 <mbedtls_ssl_handshake_step+0x4e79>
  4115d9:	48 8b 85 b8 f9 ff ff 	mov    -0x648(%rbp),%rax
  4115e0:	48 83 c0 02          	add    $0x2,%rax
  4115e4:	48 89 85 b8 f9 ff ff 	mov    %rax,-0x648(%rbp)
  4115eb:	48 8b 85 68 f9 ff ff 	mov    -0x698(%rbp),%rax
  4115f2:	48 83 c0 02          	add    $0x2,%rax
  4115f6:	48 89 85 68 f9 ff ff 	mov    %rax,-0x698(%rbp)
  4115fd:	e9 1e fb ff ff       	jmpq   411120 <mbedtls_ssl_handshake_step+0x49c0>
  411602:	48 8b 85 c0 f9 ff ff 	mov    -0x640(%rbp),%rax
  411609:	48 83 c0 01          	add    $0x1,%rax
  41160d:	48 89 85 c0 f9 ff ff 	mov    %rax,-0x640(%rbp)
  411614:	e9 cb fa ff ff       	jmpq   4110e4 <mbedtls_ssl_handshake_step+0x4984>
  411619:	83 bd c8 f9 ff ff 00 	cmpl   $0x0,-0x638(%rbp)
  411620:	0f 84 d5 00 00 00    	je     4116fb <mbedtls_ssl_handshake_step+0x4f9b>
  411626:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  41162d:	48 89 85 28 fa ff ff 	mov    %rax,-0x5d8(%rbp)
  411634:	c6 85 27 fa ff ff 02 	movb   $0x2,-0x5d9(%rbp)
  41163b:	c6 85 26 fa ff ff 28 	movb   $0x28,-0x5da(%rbp)
  411642:	48 83 bd 28 fa ff ff 	cmpq   $0x0,-0x5d8(%rbp)
  411649:	00 
  41164a:	74 0d                	je     411659 <mbedtls_ssl_handshake_step+0x4ef9>
  41164c:	48 8b 85 28 fa ff ff 	mov    -0x5d8(%rbp),%rax
  411653:	48 83 38 00          	cmpq   $0x0,(%rax)
  411657:	75 0f                	jne    411668 <mbedtls_ssl_handshake_step+0x4f08>
  411659:	c7 85 34 fa ff ff 00 	movl   $0xffff8f00,-0x5cc(%rbp)
  411660:	8f ff ff 
  411663:	e9 84 00 00 00       	jmpq   4116ec <mbedtls_ssl_handshake_step+0x4f8c>
  411668:	48 8b 85 28 fa ff ff 	mov    -0x5d8(%rbp),%rax
  41166f:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  411676:	00 00 00 
  411679:	48 8b 85 28 fa ff ff 	mov    -0x5d8(%rbp),%rax
  411680:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  411687:	02 00 00 00 
  41168b:	8a 8d 27 fa ff ff    	mov    -0x5d9(%rbp),%cl
  411691:	48 8b 85 28 fa ff ff 	mov    -0x5d8(%rbp),%rax
  411698:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  41169f:	88 08                	mov    %cl,(%rax)
  4116a1:	8a 8d 26 fa ff ff    	mov    -0x5da(%rbp),%cl
  4116a7:	48 8b 85 28 fa ff ff 	mov    -0x5d8(%rbp),%rax
  4116ae:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  4116b5:	88 48 01             	mov    %cl,0x1(%rax)
  4116b8:	48 8b bd 28 fa ff ff 	mov    -0x5d8(%rbp),%rdi
  4116bf:	be 01 00 00 00       	mov    $0x1,%esi
  4116c4:	e8 07 60 ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  4116c9:	89 85 20 fa ff ff    	mov    %eax,-0x5e0(%rbp)
  4116cf:	83 f8 00             	cmp    $0x0,%eax
  4116d2:	74 0e                	je     4116e2 <mbedtls_ssl_handshake_step+0x4f82>
  4116d4:	8b 85 20 fa ff ff    	mov    -0x5e0(%rbp),%eax
  4116da:	89 85 34 fa ff ff    	mov    %eax,-0x5cc(%rbp)
  4116e0:	eb 0a                	jmp    4116ec <mbedtls_ssl_handshake_step+0x4f8c>
  4116e2:	c7 85 34 fa ff ff 00 	movl   $0x0,-0x5cc(%rbp)
  4116e9:	00 00 00 
  4116ec:	c7 85 dc f9 ff ff 80 	movl   $0xffff9680,-0x624(%rbp)
  4116f3:	96 ff ff 
  4116f6:	e9 d0 00 00 00       	jmpq   4117cb <mbedtls_ssl_handshake_step+0x506b>
  4116fb:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  411702:	48 89 85 08 fa ff ff 	mov    %rax,-0x5f8(%rbp)
  411709:	c6 85 07 fa ff ff 02 	movb   $0x2,-0x5f9(%rbp)
  411710:	c6 85 06 fa ff ff 28 	movb   $0x28,-0x5fa(%rbp)
  411717:	48 83 bd 08 fa ff ff 	cmpq   $0x0,-0x5f8(%rbp)
  41171e:	00 
  41171f:	74 0d                	je     41172e <mbedtls_ssl_handshake_step+0x4fce>
  411721:	48 8b 85 08 fa ff ff 	mov    -0x5f8(%rbp),%rax
  411728:	48 83 38 00          	cmpq   $0x0,(%rax)
  41172c:	75 0f                	jne    41173d <mbedtls_ssl_handshake_step+0x4fdd>
  41172e:	c7 85 14 fa ff ff 00 	movl   $0xffff8f00,-0x5ec(%rbp)
  411735:	8f ff ff 
  411738:	e9 84 00 00 00       	jmpq   4117c1 <mbedtls_ssl_handshake_step+0x5061>
  41173d:	48 8b 85 08 fa ff ff 	mov    -0x5f8(%rbp),%rax
  411744:	c7 80 28 01 00 00 15 	movl   $0x15,0x128(%rax)
  41174b:	00 00 00 
  41174e:	48 8b 85 08 fa ff ff 	mov    -0x5f8(%rbp),%rax
  411755:	48 c7 80 30 01 00 00 	movq   $0x2,0x130(%rax)
  41175c:	02 00 00 00 
  411760:	8a 8d 07 fa ff ff    	mov    -0x5f9(%rbp),%cl
  411766:	48 8b 85 08 fa ff ff 	mov    -0x5f8(%rbp),%rax
  41176d:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  411774:	88 08                	mov    %cl,(%rax)
  411776:	8a 8d 06 fa ff ff    	mov    -0x5fa(%rbp),%cl
  41177c:	48 8b 85 08 fa ff ff 	mov    -0x5f8(%rbp),%rax
  411783:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  41178a:	88 48 01             	mov    %cl,0x1(%rax)
  41178d:	48 8b bd 08 fa ff ff 	mov    -0x5f8(%rbp),%rdi
  411794:	be 01 00 00 00       	mov    $0x1,%esi
  411799:	e8 32 5f ff ff       	callq  4076d0 <mbedtls_ssl_write_record>
  41179e:	89 85 00 fa ff ff    	mov    %eax,-0x600(%rbp)
  4117a4:	83 f8 00             	cmp    $0x0,%eax
  4117a7:	74 0e                	je     4117b7 <mbedtls_ssl_handshake_step+0x5057>
  4117a9:	8b 85 00 fa ff ff    	mov    -0x600(%rbp),%eax
  4117af:	89 85 14 fa ff ff    	mov    %eax,-0x5ec(%rbp)
  4117b5:	eb 0a                	jmp    4117c1 <mbedtls_ssl_handshake_step+0x5061>
  4117b7:	c7 85 14 fa ff ff 00 	movl   $0x0,-0x5ec(%rbp)
  4117be:	00 00 00 
  4117c1:	c7 85 dc f9 ff ff 80 	movl   $0xffff8c80,-0x624(%rbp)
  4117c8:	8c ff ff 
  4117cb:	8b 85 dc f9 ff ff    	mov    -0x624(%rbp),%eax
  4117d1:	89 85 24 f9 ff ff    	mov    %eax,-0x6dc(%rbp)
  4117d7:	e9 86 19 00 00       	jmpq   413162 <mbedtls_ssl_handshake_step+0x6a02>
  4117dc:	48 8b 85 28 f9 ff ff 	mov    -0x6d8(%rbp),%rax
  4117e3:	48 89 85 98 fc ff ff 	mov    %rax,-0x368(%rbp)
  4117ea:	48 c7 85 78 fc ff ff 	movq   $0x0,-0x388(%rbp)
  4117f1:	00 00 00 00 
  4117f5:	48 8b 85 98 fc ff ff 	mov    -0x368(%rbp),%rax
  4117fc:	48 8b 00             	mov    (%rax),%rax
  4117ff:	48 83 78 30 00       	cmpq   $0x0,0x30(%rax)
  411804:	75 0f                	jne    411815 <mbedtls_ssl_handshake_step+0x50b5>
  411806:	c7 85 a4 fc ff ff 00 	movl   $0xffff8c00,-0x35c(%rbp)
  41180d:	8c ff ff 
  411810:	e9 33 06 00 00       	jmpq   411e48 <mbedtls_ssl_handshake_step+0x56e8>
  411815:	31 c0                	xor    %eax,%eax
  411817:	89 c7                	mov    %eax,%edi
  411819:	48 8b 8d 98 fc ff ff 	mov    -0x368(%rbp),%rcx
  411820:	48 8b 89 20 01 00 00 	mov    0x120(%rcx),%rcx
  411827:	48 89 8d 68 fc ff ff 	mov    %rcx,-0x398(%rbp)
  41182e:	48 8b 8d 68 fc ff ff 	mov    -0x398(%rbp),%rcx
  411835:	48 83 c1 04          	add    $0x4,%rcx
  411839:	48 89 8d 60 fc ff ff 	mov    %rcx,-0x3a0(%rbp)
  411840:	48 8b 8d 98 fc ff ff 	mov    -0x368(%rbp),%rcx
  411847:	8b 41 0c             	mov    0xc(%rcx),%eax
  41184a:	48 8b 8d 98 fc ff ff 	mov    -0x368(%rbp),%rcx
  411851:	8b 51 10             	mov    0x10(%rcx),%edx
  411854:	48 8b 8d 98 fc ff ff 	mov    -0x368(%rbp),%rcx
  41185b:	48 8b 09             	mov    (%rcx),%rcx
  41185e:	40 8a b1 98 00 00 00 	mov    0x98(%rcx),%sil
  411865:	40 c0 ee 01          	shr    $0x1,%sil
  411869:	40 80 e6 01          	and    $0x1,%sil
  41186d:	44 0f b6 c6          	movzbl %sil,%r8d
  411871:	48 8b 8d 60 fc ff ff 	mov    -0x3a0(%rbp),%rcx
  411878:	89 85 bc fc ff ff    	mov    %eax,-0x344(%rbp)
  41187e:	89 95 b8 fc ff ff    	mov    %edx,-0x348(%rbp)
  411884:	44 89 85 b4 fc ff ff 	mov    %r8d,-0x34c(%rbp)
  41188b:	48 89 8d a8 fc ff ff 	mov    %rcx,-0x358(%rbp)
  411892:	8b 85 bc fc ff ff    	mov    -0x344(%rbp),%eax
  411898:	40 88 c6             	mov    %al,%sil
  41189b:	48 8b 8d a8 fc ff ff 	mov    -0x358(%rbp),%rcx
  4118a2:	40 88 31             	mov    %sil,(%rcx)
  4118a5:	8b 85 b8 fc ff ff    	mov    -0x348(%rbp),%eax
  4118ab:	40 88 c6             	mov    %al,%sil
  4118ae:	48 8b 8d a8 fc ff ff 	mov    -0x358(%rbp),%rcx
  4118b5:	40 88 71 01          	mov    %sil,0x1(%rcx)
  4118b9:	48 8b 8d 60 fc ff ff 	mov    -0x3a0(%rbp),%rcx
  4118c0:	48 83 c1 02          	add    $0x2,%rcx
  4118c4:	48 89 8d 60 fc ff ff 	mov    %rcx,-0x3a0(%rbp)
  4118cb:	e8 10 f9 fe ff       	callq  4011e0 <time@plt>
  4118d0:	ba 1c 00 00 00       	mov    $0x1c,%edx
  4118d5:	48 89 85 90 fc ff ff 	mov    %rax,-0x370(%rbp)
  4118dc:	48 8b 85 90 fc ff ff 	mov    -0x370(%rbp),%rax
  4118e3:	48 c1 f8 18          	sar    $0x18,%rax
  4118e7:	40 88 c6             	mov    %al,%sil
  4118ea:	48 8b 85 60 fc ff ff 	mov    -0x3a0(%rbp),%rax
  4118f1:	48 89 c1             	mov    %rax,%rcx
  4118f4:	48 83 c1 01          	add    $0x1,%rcx
  4118f8:	48 89 8d 60 fc ff ff 	mov    %rcx,-0x3a0(%rbp)
  4118ff:	40 88 30             	mov    %sil,(%rax)
  411902:	48 8b 85 90 fc ff ff 	mov    -0x370(%rbp),%rax
  411909:	48 c1 f8 10          	sar    $0x10,%rax
  41190d:	40 88 c6             	mov    %al,%sil
  411910:	48 8b 85 60 fc ff ff 	mov    -0x3a0(%rbp),%rax
  411917:	48 89 c1             	mov    %rax,%rcx
  41191a:	48 83 c1 01          	add    $0x1,%rcx
  41191e:	48 89 8d 60 fc ff ff 	mov    %rcx,-0x3a0(%rbp)
  411925:	40 88 30             	mov    %sil,(%rax)
  411928:	48 8b 85 90 fc ff ff 	mov    -0x370(%rbp),%rax
  41192f:	48 c1 f8 08          	sar    $0x8,%rax
  411933:	40 88 c6             	mov    %al,%sil
  411936:	48 8b 85 60 fc ff ff 	mov    -0x3a0(%rbp),%rax
  41193d:	48 89 c1             	mov    %rax,%rcx
  411940:	48 83 c1 01          	add    $0x1,%rcx
  411944:	48 89 8d 60 fc ff ff 	mov    %rcx,-0x3a0(%rbp)
  41194b:	40 88 30             	mov    %sil,(%rax)
  41194e:	48 8b 85 90 fc ff ff 	mov    -0x370(%rbp),%rax
  411955:	40 88 c6             	mov    %al,%sil
  411958:	48 8b 85 60 fc ff ff 	mov    -0x3a0(%rbp),%rax
  41195f:	48 89 c1             	mov    %rax,%rcx
  411962:	48 83 c1 01          	add    $0x1,%rcx
  411966:	48 89 8d 60 fc ff ff 	mov    %rcx,-0x3a0(%rbp)
  41196d:	40 88 30             	mov    %sil,(%rax)
  411970:	48 8b 85 98 fc ff ff 	mov    -0x368(%rbp),%rax
  411977:	48 8b 00             	mov    (%rax),%rax
  41197a:	48 8b 40 30          	mov    0x30(%rax),%rax
  41197e:	48 8b 8d 98 fc ff ff 	mov    -0x368(%rbp),%rcx
  411985:	48 8b 09             	mov    (%rcx),%rcx
  411988:	48 8b 79 38          	mov    0x38(%rcx),%rdi
  41198c:	48 8b b5 60 fc ff ff 	mov    -0x3a0(%rbp),%rsi
  411993:	ff d0                	callq  *%rax
  411995:	89 85 8c fc ff ff    	mov    %eax,-0x374(%rbp)
  41199b:	83 f8 00             	cmp    $0x0,%eax
  41199e:	74 11                	je     4119b1 <mbedtls_ssl_handshake_step+0x5251>
  4119a0:	8b 85 8c fc ff ff    	mov    -0x374(%rbp),%eax
  4119a6:	89 85 a4 fc ff ff    	mov    %eax,-0x35c(%rbp)
  4119ac:	e9 97 04 00 00       	jmpq   411e48 <mbedtls_ssl_handshake_step+0x56e8>
  4119b1:	48 8b 85 60 fc ff ff 	mov    -0x3a0(%rbp),%rax
  4119b8:	48 83 c0 1c          	add    $0x1c,%rax
  4119bc:	48 89 85 60 fc ff ff 	mov    %rax,-0x3a0(%rbp)
  4119c3:	48 8b 85 98 fc ff ff 	mov    -0x368(%rbp),%rax
  4119ca:	48 8b 40 58          	mov    0x58(%rax),%rax
  4119ce:	48 8b 8d 68 fc ff ff 	mov    -0x398(%rbp),%rcx
  4119d5:	48 8b 51 06          	mov    0x6(%rcx),%rdx
  4119d9:	48 89 90 08 01 00 00 	mov    %rdx,0x108(%rax)
  4119e0:	48 8b 51 0e          	mov    0xe(%rcx),%rdx
  4119e4:	48 89 90 10 01 00 00 	mov    %rdx,0x110(%rax)
  4119eb:	48 8b 51 16          	mov    0x16(%rcx),%rdx
  4119ef:	48 89 90 18 01 00 00 	mov    %rdx,0x118(%rax)
  4119f6:	48 8b 49 1e          	mov    0x1e(%rcx),%rcx
  4119fa:	48 89 88 20 01 00 00 	mov    %rcx,0x120(%rax)
  411a01:	48 8b 85 98 fc ff ff 	mov    -0x368(%rbp),%rax
  411a08:	48 8b 40 58          	mov    0x58(%rax),%rax
  411a0c:	83 b8 58 01 00 00 00 	cmpl   $0x0,0x158(%rax)
  411a13:	75 66                	jne    411a7b <mbedtls_ssl_handshake_step+0x531b>
  411a15:	48 8b 85 98 fc ff ff 	mov    -0x368(%rbp),%rax
  411a1c:	48 8b 40 50          	mov    0x50(%rax),%rax
  411a20:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
  411a25:	74 54                	je     411a7b <mbedtls_ssl_handshake_step+0x531b>
  411a27:	48 8b 85 98 fc ff ff 	mov    -0x368(%rbp),%rax
  411a2e:	48 8b 00             	mov    (%rax),%rax
  411a31:	48 83 78 40 00       	cmpq   $0x0,0x40(%rax)
  411a36:	74 43                	je     411a7b <mbedtls_ssl_handshake_step+0x531b>
  411a38:	48 8b 85 98 fc ff ff 	mov    -0x368(%rbp),%rax
  411a3f:	48 8b 00             	mov    (%rax),%rax
  411a42:	48 8b 40 40          	mov    0x40(%rax),%rax
  411a46:	48 8b 8d 98 fc ff ff 	mov    -0x368(%rbp),%rcx
  411a4d:	48 8b 09             	mov    (%rcx),%rcx
  411a50:	48 8b 79 50          	mov    0x50(%rcx),%rdi
  411a54:	48 8b 8d 98 fc ff ff 	mov    -0x368(%rbp),%rcx
  411a5b:	48 8b 71 50          	mov    0x50(%rcx),%rsi
  411a5f:	ff d0                	callq  *%rax
  411a61:	83 f8 00             	cmp    $0x0,%eax
  411a64:	75 15                	jne    411a7b <mbedtls_ssl_handshake_step+0x531b>
  411a66:	48 8b 85 98 fc ff ff 	mov    -0x368(%rbp),%rax
  411a6d:	48 8b 40 58          	mov    0x58(%rax),%rax
  411a71:	c7 80 58 01 00 00 01 	movl   $0x1,0x158(%rax)
  411a78:	00 00 00 
  411a7b:	48 8b 85 98 fc ff ff 	mov    -0x368(%rbp),%rax
  411a82:	48 8b 40 58          	mov    0x58(%rax),%rax
  411a86:	83 b8 58 01 00 00 00 	cmpl   $0x0,0x158(%rax)
  411a8d:	0f 85 9a 00 00 00    	jne    411b2d <mbedtls_ssl_handshake_step+0x53cd>
  411a93:	31 c0                	xor    %eax,%eax
  411a95:	89 c7                	mov    %eax,%edi
  411a97:	48 8b 8d 98 fc ff ff 	mov    -0x368(%rbp),%rcx
  411a9e:	8b 41 08             	mov    0x8(%rcx),%eax
  411aa1:	83 c0 01             	add    $0x1,%eax
  411aa4:	89 41 08             	mov    %eax,0x8(%rcx)
  411aa7:	e8 34 f7 fe ff       	callq  4011e0 <time@plt>
  411aac:	48 8b 8d 98 fc ff ff 	mov    -0x368(%rbp),%rcx
  411ab3:	48 8b 49 50          	mov    0x50(%rcx),%rcx
  411ab7:	48 89 01             	mov    %rax,(%rcx)
  411aba:	48 c7 85 70 fc ff ff 	movq   $0x20,-0x390(%rbp)
  411ac1:	20 00 00 00 
  411ac5:	48 8b 85 98 fc ff ff 	mov    -0x368(%rbp),%rax
  411acc:	48 8b 40 50          	mov    0x50(%rax),%rax
  411ad0:	48 c7 40 10 20 00 00 	movq   $0x20,0x10(%rax)
  411ad7:	00 
  411ad8:	48 8b 85 98 fc ff ff 	mov    -0x368(%rbp),%rax
  411adf:	48 8b 00             	mov    (%rax),%rax
  411ae2:	48 8b 40 30          	mov    0x30(%rax),%rax
  411ae6:	48 8b 8d 98 fc ff ff 	mov    -0x368(%rbp),%rcx
  411aed:	48 8b 09             	mov    (%rcx),%rcx
  411af0:	48 8b 79 38          	mov    0x38(%rcx),%rdi
  411af4:	48 8b 8d 98 fc ff ff 	mov    -0x368(%rbp),%rcx
  411afb:	48 8b 49 50          	mov    0x50(%rcx),%rcx
  411aff:	48 83 c1 18          	add    $0x18,%rcx
  411b03:	48 8b 95 70 fc ff ff 	mov    -0x390(%rbp),%rdx
  411b0a:	48 89 ce             	mov    %rcx,%rsi
  411b0d:	ff d0                	callq  *%rax
  411b0f:	89 85 8c fc ff ff    	mov    %eax,-0x374(%rbp)
  411b15:	83 f8 00             	cmp    $0x0,%eax
  411b18:	74 11                	je     411b2b <mbedtls_ssl_handshake_step+0x53cb>
  411b1a:	8b 85 8c fc ff ff    	mov    -0x374(%rbp),%eax
  411b20:	89 85 a4 fc ff ff    	mov    %eax,-0x35c(%rbp)
  411b26:	e9 1d 03 00 00       	jmpq   411e48 <mbedtls_ssl_handshake_step+0x56e8>
  411b2b:	eb 4e                	jmp    411b7b <mbedtls_ssl_handshake_step+0x541b>
  411b2d:	48 8b 85 98 fc ff ff 	mov    -0x368(%rbp),%rax
  411b34:	48 8b 40 50          	mov    0x50(%rax),%rax
  411b38:	48 8b 40 10          	mov    0x10(%rax),%rax
  411b3c:	48 89 85 70 fc ff ff 	mov    %rax,-0x390(%rbp)
  411b43:	48 8b 85 98 fc ff ff 	mov    -0x368(%rbp),%rax
  411b4a:	c7 40 08 0c 00 00 00 	movl   $0xc,0x8(%rax)
  411b51:	48 8b bd 98 fc ff ff 	mov    -0x368(%rbp),%rdi
  411b58:	e8 a3 32 ff ff       	callq  404e00 <mbedtls_ssl_derive_keys>
  411b5d:	89 85 8c fc ff ff    	mov    %eax,-0x374(%rbp)
  411b63:	83 f8 00             	cmp    $0x0,%eax
  411b66:	74 11                	je     411b79 <mbedtls_ssl_handshake_step+0x5419>
  411b68:	8b 85 8c fc ff ff    	mov    -0x374(%rbp),%eax
  411b6e:	89 85 a4 fc ff ff    	mov    %eax,-0x35c(%rbp)
  411b74:	e9 cf 02 00 00       	jmpq   411e48 <mbedtls_ssl_handshake_step+0x56e8>
  411b79:	eb 00                	jmp    411b7b <mbedtls_ssl_handshake_step+0x541b>
  411b7b:	48 8b 85 98 fc ff ff 	mov    -0x368(%rbp),%rax
  411b82:	48 8b 40 50          	mov    0x50(%rax),%rax
  411b86:	48 8b 40 10          	mov    0x10(%rax),%rax
  411b8a:	88 c1                	mov    %al,%cl
  411b8c:	48 8b 85 60 fc ff ff 	mov    -0x3a0(%rbp),%rax
  411b93:	48 89 c2             	mov    %rax,%rdx
  411b96:	48 83 c2 01          	add    $0x1,%rdx
  411b9a:	48 89 95 60 fc ff ff 	mov    %rdx,-0x3a0(%rbp)
  411ba1:	88 08                	mov    %cl,(%rax)
  411ba3:	48 8b bd 60 fc ff ff 	mov    -0x3a0(%rbp),%rdi
  411baa:	48 8b 85 98 fc ff ff 	mov    -0x368(%rbp),%rax
  411bb1:	48 8b 40 50          	mov    0x50(%rax),%rax
  411bb5:	48 83 c0 18          	add    $0x18,%rax
  411bb9:	48 8b 95 98 fc ff ff 	mov    -0x368(%rbp),%rdx
  411bc0:	48 8b 52 50          	mov    0x50(%rdx),%rdx
  411bc4:	48 8b 52 10          	mov    0x10(%rdx),%rdx
  411bc8:	48 89 c6             	mov    %rax,%rsi
  411bcb:	e8 a0 f5 fe ff       	callq  401170 <memcpy@plt>
  411bd0:	48 8b 85 98 fc ff ff 	mov    -0x368(%rbp),%rax
  411bd7:	48 8b 40 50          	mov    0x50(%rax),%rax
  411bdb:	48 8b 40 10          	mov    0x10(%rax),%rax
  411bdf:	48 03 85 60 fc ff ff 	add    -0x3a0(%rbp),%rax
  411be6:	48 89 85 60 fc ff ff 	mov    %rax,-0x3a0(%rbp)
  411bed:	48 8b 85 98 fc ff ff 	mov    -0x368(%rbp),%rax
  411bf4:	48 8b 40 50          	mov    0x50(%rax),%rax
  411bf8:	44 8b 40 08          	mov    0x8(%rax),%r8d
  411bfc:	41 c1 f8 08          	sar    $0x8,%r8d
  411c00:	44 88 c1             	mov    %r8b,%cl
  411c03:	48 8b 85 60 fc ff ff 	mov    -0x3a0(%rbp),%rax
  411c0a:	48 89 c2             	mov    %rax,%rdx
  411c0d:	48 83 c2 01          	add    $0x1,%rdx
  411c11:	48 89 95 60 fc ff ff 	mov    %rdx,-0x3a0(%rbp)
  411c18:	88 08                	mov    %cl,(%rax)
  411c1a:	48 8b 85 98 fc ff ff 	mov    -0x368(%rbp),%rax
  411c21:	48 8b 40 50          	mov    0x50(%rax),%rax
  411c25:	44 8b 40 08          	mov    0x8(%rax),%r8d
  411c29:	44 88 c1             	mov    %r8b,%cl
  411c2c:	48 8b 85 60 fc ff ff 	mov    -0x3a0(%rbp),%rax
  411c33:	48 89 c2             	mov    %rax,%rdx
  411c36:	48 83 c2 01          	add    $0x1,%rdx
  411c3a:	48 89 95 60 fc ff ff 	mov    %rdx,-0x3a0(%rbp)
  411c41:	88 08                	mov    %cl,(%rax)
  411c43:	48 8b 85 98 fc ff ff 	mov    -0x368(%rbp),%rax
  411c4a:	48 8b 40 50          	mov    0x50(%rax),%rax
  411c4e:	44 8b 40 0c          	mov    0xc(%rax),%r8d
  411c52:	44 88 c1             	mov    %r8b,%cl
  411c55:	48 8b 85 60 fc ff ff 	mov    -0x3a0(%rbp),%rax
  411c5c:	48 89 c2             	mov    %rax,%rdx
  411c5f:	48 83 c2 01          	add    $0x1,%rdx
  411c63:	48 89 95 60 fc ff ff 	mov    %rdx,-0x3a0(%rbp)
  411c6a:	88 08                	mov    %cl,(%rax)
  411c6c:	48 8b 85 98 fc ff ff 	mov    -0x368(%rbp),%rax
  411c73:	48 8b 95 60 fc ff ff 	mov    -0x3a0(%rbp),%rdx
  411c7a:	48 83 c2 02          	add    $0x2,%rdx
  411c7e:	48 03 95 78 fc ff ff 	add    -0x388(%rbp),%rdx
  411c85:	48 89 85 d8 fc ff ff 	mov    %rax,-0x328(%rbp)
  411c8c:	48 89 95 d0 fc ff ff 	mov    %rdx,-0x330(%rbp)
  411c93:	48 8d 85 80 fc ff ff 	lea    -0x380(%rbp),%rax
  411c9a:	48 89 85 c8 fc ff ff 	mov    %rax,-0x338(%rbp)
  411ca1:	48 8b 85 d0 fc ff ff 	mov    -0x330(%rbp),%rax
  411ca8:	48 89 85 c0 fc ff ff 	mov    %rax,-0x340(%rbp)
  411caf:	48 8b 85 d8 fc ff ff 	mov    -0x328(%rbp),%rax
  411cb6:	83 b8 58 01 00 00 01 	cmpl   $0x1,0x158(%rax)
  411cbd:	74 13                	je     411cd2 <mbedtls_ssl_handshake_step+0x5572>
  411cbf:	48 8b 85 c8 fc ff ff 	mov    -0x338(%rbp),%rax
  411cc6:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  411ccd:	e9 93 00 00 00       	jmpq   411d65 <mbedtls_ssl_handshake_step+0x5605>
  411cd2:	48 8b 85 c0 fc ff ff 	mov    -0x340(%rbp),%rax
  411cd9:	48 89 c1             	mov    %rax,%rcx
  411cdc:	48 83 c1 01          	add    $0x1,%rcx
  411ce0:	48 89 8d c0 fc ff ff 	mov    %rcx,-0x340(%rbp)
  411ce7:	c6 00 ff             	movb   $0xff,(%rax)
  411cea:	48 8b 85 c0 fc ff ff 	mov    -0x340(%rbp),%rax
  411cf1:	48 89 c1             	mov    %rax,%rcx
  411cf4:	48 83 c1 01          	add    $0x1,%rcx
  411cf8:	48 89 8d c0 fc ff ff 	mov    %rcx,-0x340(%rbp)
  411cff:	c6 00 01             	movb   $0x1,(%rax)
  411d02:	48 8b 85 c0 fc ff ff 	mov    -0x340(%rbp),%rax
  411d09:	48 89 c1             	mov    %rax,%rcx
  411d0c:	48 83 c1 01          	add    $0x1,%rcx
  411d10:	48 89 8d c0 fc ff ff 	mov    %rcx,-0x340(%rbp)
  411d17:	c6 00 00             	movb   $0x0,(%rax)
  411d1a:	48 8b 85 c0 fc ff ff 	mov    -0x340(%rbp),%rax
  411d21:	48 89 c1             	mov    %rax,%rcx
  411d24:	48 83 c1 01          	add    $0x1,%rcx
  411d28:	48 89 8d c0 fc ff ff 	mov    %rcx,-0x340(%rbp)
  411d2f:	c6 00 01             	movb   $0x1,(%rax)
  411d32:	48 8b 85 c0 fc ff ff 	mov    -0x340(%rbp),%rax
  411d39:	48 89 c1             	mov    %rax,%rcx
  411d3c:	48 83 c1 01          	add    $0x1,%rcx
  411d40:	48 89 8d c0 fc ff ff 	mov    %rcx,-0x340(%rbp)
  411d47:	c6 00 00             	movb   $0x0,(%rax)
  411d4a:	48 8b 85 c0 fc ff ff 	mov    -0x340(%rbp),%rax
  411d51:	48 8b 8d d0 fc ff ff 	mov    -0x330(%rbp),%rcx
  411d58:	48 29 c8             	sub    %rcx,%rax
  411d5b:	48 8b 8d c8 fc ff ff 	mov    -0x338(%rbp),%rcx
  411d62:	48 89 01             	mov    %rax,(%rcx)
  411d65:	48 8b 85 80 fc ff ff 	mov    -0x380(%rbp),%rax
  411d6c:	48 03 85 78 fc ff ff 	add    -0x388(%rbp),%rax
  411d73:	48 89 85 78 fc ff ff 	mov    %rax,-0x388(%rbp)
  411d7a:	48 83 bd 78 fc ff ff 	cmpq   $0x0,-0x388(%rbp)
  411d81:	00 
  411d82:	76 65                	jbe    411de9 <mbedtls_ssl_handshake_step+0x5689>
  411d84:	48 8b 85 78 fc ff ff 	mov    -0x388(%rbp),%rax
  411d8b:	48 c1 e8 08          	shr    $0x8,%rax
  411d8f:	48 25 ff 00 00 00    	and    $0xff,%rax
  411d95:	88 c1                	mov    %al,%cl
  411d97:	48 8b 85 60 fc ff ff 	mov    -0x3a0(%rbp),%rax
  411d9e:	48 89 c2             	mov    %rax,%rdx
  411da1:	48 83 c2 01          	add    $0x1,%rdx
  411da5:	48 89 95 60 fc ff ff 	mov    %rdx,-0x3a0(%rbp)
  411dac:	88 08                	mov    %cl,(%rax)
  411dae:	48 8b 85 78 fc ff ff 	mov    -0x388(%rbp),%rax
  411db5:	48 25 ff 00 00 00    	and    $0xff,%rax
  411dbb:	88 c1                	mov    %al,%cl
  411dbd:	48 8b 85 60 fc ff ff 	mov    -0x3a0(%rbp),%rax
  411dc4:	48 89 c2             	mov    %rax,%rdx
  411dc7:	48 83 c2 01          	add    $0x1,%rdx
  411dcb:	48 89 95 60 fc ff ff 	mov    %rdx,-0x3a0(%rbp)
  411dd2:	88 08                	mov    %cl,(%rax)
  411dd4:	48 8b 85 78 fc ff ff 	mov    -0x388(%rbp),%rax
  411ddb:	48 03 85 60 fc ff ff 	add    -0x3a0(%rbp),%rax
  411de2:	48 89 85 60 fc ff ff 	mov    %rax,-0x3a0(%rbp)
  411de9:	48 8b 85 60 fc ff ff 	mov    -0x3a0(%rbp),%rax
  411df0:	48 8b 8d 68 fc ff ff 	mov    -0x398(%rbp),%rcx
  411df7:	48 29 c8             	sub    %rcx,%rax
  411dfa:	48 8b 8d 98 fc ff ff 	mov    -0x368(%rbp),%rcx
  411e01:	48 89 81 30 01 00 00 	mov    %rax,0x130(%rcx)
  411e08:	48 8b 85 98 fc ff ff 	mov    -0x368(%rbp),%rax
  411e0f:	c7 80 28 01 00 00 16 	movl   $0x16,0x128(%rax)
  411e16:	00 00 00 
  411e19:	48 8b 85 98 fc ff ff 	mov    -0x368(%rbp),%rax
  411e20:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  411e27:	c6 00 02             	movb   $0x2,(%rax)
  411e2a:	48 8b bd 98 fc ff ff 	mov    -0x368(%rbp),%rdi
  411e31:	e8 1a 57 ff ff       	callq  407550 <mbedtls_ssl_write_handshake_msg>
  411e36:	89 85 8c fc ff ff    	mov    %eax,-0x374(%rbp)
  411e3c:	8b 85 8c fc ff ff    	mov    -0x374(%rbp),%eax
  411e42:	89 85 a4 fc ff ff    	mov    %eax,-0x35c(%rbp)
  411e48:	8b 85 a4 fc ff ff    	mov    -0x35c(%rbp),%eax
  411e4e:	89 85 24 f9 ff ff    	mov    %eax,-0x6dc(%rbp)
  411e54:	e9 09 13 00 00       	jmpq   413162 <mbedtls_ssl_handshake_step+0x6a02>
  411e59:	48 8b bd 28 f9 ff ff 	mov    -0x6d8(%rbp),%rdi
  411e60:	e8 fb 7c ff ff       	callq  409b60 <mbedtls_ssl_write_certificate>
  411e65:	89 85 24 f9 ff ff    	mov    %eax,-0x6dc(%rbp)
  411e6b:	e9 f2 12 00 00       	jmpq   413162 <mbedtls_ssl_handshake_step+0x6a02>
  411e70:	48 8b 85 28 f9 ff ff 	mov    -0x6d8(%rbp),%rax
  411e77:	48 89 85 f8 fc ff ff 	mov    %rax,-0x308(%rbp)
  411e7e:	48 c7 85 e8 fc ff ff 	movq   $0x0,-0x318(%rbp)
  411e85:	00 00 00 00 
  411e89:	48 8b 85 f8 fc ff ff 	mov    -0x308(%rbp),%rax
  411e90:	48 8b 40 78          	mov    0x78(%rax),%rax
  411e94:	48 8b 00             	mov    (%rax),%rax
  411e97:	48 89 85 e0 fc ff ff 	mov    %rax,-0x320(%rbp)
  411e9e:	48 8b 85 e0 fc ff ff 	mov    -0x320(%rbp),%rax
  411ea5:	48 89 85 08 fd ff ff 	mov    %rax,-0x2f8(%rbp)
  411eac:	48 8b 85 08 fd ff ff 	mov    -0x2f8(%rbp),%rax
  411eb3:	8b 48 18             	mov    0x18(%rax),%ecx
  411eb6:	89 ca                	mov    %ecx,%edx
  411eb8:	83 ea 01             	sub    $0x1,%edx
  411ebb:	89 8d d8 f1 ff ff    	mov    %ecx,-0xe28(%rbp)
  411ec1:	89 95 d4 f1 ff ff    	mov    %edx,-0xe2c(%rbp)
  411ec7:	74 3e                	je     411f07 <mbedtls_ssl_handshake_step+0x57a7>
  411ec9:	eb 00                	jmp    411ecb <mbedtls_ssl_handshake_step+0x576b>
  411ecb:	8b 85 d8 f1 ff ff    	mov    -0xe28(%rbp),%eax
  411ed1:	83 e8 05             	sub    $0x5,%eax
  411ed4:	89 85 d0 f1 ff ff    	mov    %eax,-0xe30(%rbp)
  411eda:	74 2b                	je     411f07 <mbedtls_ssl_handshake_step+0x57a7>
  411edc:	eb 00                	jmp    411ede <mbedtls_ssl_handshake_step+0x577e>
  411ede:	8b 85 d8 f1 ff ff    	mov    -0xe28(%rbp),%eax
  411ee4:	83 e8 07             	sub    $0x7,%eax
  411ee7:	89 85 cc f1 ff ff    	mov    %eax,-0xe34(%rbp)
  411eed:	74 18                	je     411f07 <mbedtls_ssl_handshake_step+0x57a7>
  411eef:	eb 00                	jmp    411ef1 <mbedtls_ssl_handshake_step+0x5791>
  411ef1:	8b 85 d8 f1 ff ff    	mov    -0xe28(%rbp),%eax
  411ef7:	83 c0 f7             	add    $0xfffffff7,%eax
  411efa:	83 e8 01             	sub    $0x1,%eax
  411efd:	89 85 c8 f1 ff ff    	mov    %eax,-0xe38(%rbp)
  411f03:	77 0e                	ja     411f13 <mbedtls_ssl_handshake_step+0x57b3>
  411f05:	eb 00                	jmp    411f07 <mbedtls_ssl_handshake_step+0x57a7>
  411f07:	c7 85 14 fd ff ff 01 	movl   $0x1,-0x2ec(%rbp)
  411f0e:	00 00 00 
  411f11:	eb 0a                	jmp    411f1d <mbedtls_ssl_handshake_step+0x57bd>
  411f13:	c7 85 14 fd ff ff 00 	movl   $0x0,-0x2ec(%rbp)
  411f1a:	00 00 00 
  411f1d:	8b 85 14 fd ff ff    	mov    -0x2ec(%rbp),%eax
  411f23:	83 f8 00             	cmp    $0x0,%eax
  411f26:	74 1f                	je     411f47 <mbedtls_ssl_handshake_step+0x57e7>
  411f28:	48 8b 85 f8 fc ff ff 	mov    -0x308(%rbp),%rax
  411f2f:	8b 48 08             	mov    0x8(%rax),%ecx
  411f32:	83 c1 01             	add    $0x1,%ecx
  411f35:	89 48 08             	mov    %ecx,0x8(%rax)
  411f38:	c7 85 04 fd ff ff 00 	movl   $0x0,-0x2fc(%rbp)
  411f3f:	00 00 00 
  411f42:	e9 e5 00 00 00       	jmpq   41202c <mbedtls_ssl_handshake_step+0x58cc>
  411f47:	48 8b 85 f8 fc ff ff 	mov    -0x308(%rbp),%rax
  411f4e:	48 89 85 28 fd ff ff 	mov    %rax,-0x2d8(%rbp)
  411f55:	48 8d 85 e8 fc ff ff 	lea    -0x318(%rbp),%rax
  411f5c:	48 89 85 20 fd ff ff 	mov    %rax,-0x2e0(%rbp)
  411f63:	48 8b 85 28 fd ff ff 	mov    -0x2d8(%rbp),%rax
  411f6a:	48 8b 40 78          	mov    0x78(%rax),%rax
  411f6e:	48 8b 00             	mov    (%rax),%rax
  411f71:	48 89 85 18 fd ff ff 	mov    %rax,-0x2e8(%rbp)
  411f78:	48 8b 85 28 fd ff ff 	mov    -0x2d8(%rbp),%rax
  411f7f:	48 c7 80 30 01 00 00 	movq   $0x4,0x130(%rax)
  411f86:	04 00 00 00 
  411f8a:	c7 85 f4 fc ff ff 00 	movl   $0x0,-0x30c(%rbp)
  411f91:	00 00 00 
  411f94:	83 bd f4 fc ff ff 00 	cmpl   $0x0,-0x30c(%rbp)
  411f9b:	74 2e                	je     411fcb <mbedtls_ssl_handshake_step+0x586b>
  411f9d:	81 bd f4 fc ff ff 00 	cmpl   $0xffff9b00,-0x30c(%rbp)
  411fa4:	9b ff ff 
  411fa7:	75 02                	jne    411fab <mbedtls_ssl_handshake_step+0x584b>
  411fa9:	eb 12                	jmp    411fbd <mbedtls_ssl_handshake_step+0x585d>
  411fab:	48 8b 85 f8 fc ff ff 	mov    -0x308(%rbp),%rax
  411fb2:	48 c7 80 30 01 00 00 	movq   $0x0,0x130(%rax)
  411fb9:	00 00 00 00 
  411fbd:	8b 85 f4 fc ff ff    	mov    -0x30c(%rbp),%eax
  411fc3:	89 85 04 fd ff ff    	mov    %eax,-0x2fc(%rbp)
  411fc9:	eb 61                	jmp    41202c <mbedtls_ssl_handshake_step+0x58cc>
  411fcb:	48 8b 85 f8 fc ff ff 	mov    -0x308(%rbp),%rax
  411fd2:	c7 80 28 01 00 00 16 	movl   $0x16,0x128(%rax)
  411fd9:	00 00 00 
  411fdc:	48 8b 85 f8 fc ff ff 	mov    -0x308(%rbp),%rax
  411fe3:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  411fea:	c6 00 0c             	movb   $0xc,(%rax)
  411fed:	48 8b 85 f8 fc ff ff 	mov    -0x308(%rbp),%rax
  411ff4:	8b 48 08             	mov    0x8(%rax),%ecx
  411ff7:	83 c1 01             	add    $0x1,%ecx
  411ffa:	89 48 08             	mov    %ecx,0x8(%rax)
  411ffd:	48 8b bd f8 fc ff ff 	mov    -0x308(%rbp),%rdi
  412004:	e8 47 55 ff ff       	callq  407550 <mbedtls_ssl_write_handshake_msg>
  412009:	89 85 f4 fc ff ff    	mov    %eax,-0x30c(%rbp)
  41200f:	83 f8 00             	cmp    $0x0,%eax
  412012:	74 0e                	je     412022 <mbedtls_ssl_handshake_step+0x58c2>
  412014:	8b 85 f4 fc ff ff    	mov    -0x30c(%rbp),%eax
  41201a:	89 85 04 fd ff ff    	mov    %eax,-0x2fc(%rbp)
  412020:	eb 0a                	jmp    41202c <mbedtls_ssl_handshake_step+0x58cc>
  412022:	c7 85 04 fd ff ff 00 	movl   $0x0,-0x2fc(%rbp)
  412029:	00 00 00 
  41202c:	8b 85 04 fd ff ff    	mov    -0x2fc(%rbp),%eax
  412032:	89 85 24 f9 ff ff    	mov    %eax,-0x6dc(%rbp)
  412038:	e9 25 11 00 00       	jmpq   413162 <mbedtls_ssl_handshake_step+0x6a02>
  41203d:	48 8b 85 28 f9 ff ff 	mov    -0x6d8(%rbp),%rax
  412044:	48 89 85 88 fd ff ff 	mov    %rax,-0x278(%rbp)
  41204b:	c7 85 84 fd ff ff 80 	movl   $0xffff8f80,-0x27c(%rbp)
  412052:	8f ff ff 
  412055:	48 8b 85 88 fd ff ff 	mov    -0x278(%rbp),%rax
  41205c:	48 8b 40 78          	mov    0x78(%rax),%rax
  412060:	48 8b 00             	mov    (%rax),%rax
  412063:	48 89 85 78 fd ff ff 	mov    %rax,-0x288(%rbp)
  41206a:	48 8b 85 88 fd ff ff 	mov    -0x278(%rbp),%rax
  412071:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  412078:	48 05 00 40 00 00    	add    $0x4000,%rax
  41207e:	48 89 85 40 fd ff ff 	mov    %rax,-0x2c0(%rbp)
  412085:	48 8b 85 88 fd ff ff 	mov    -0x278(%rbp),%rax
  41208c:	8b 48 08             	mov    0x8(%rax),%ecx
  41208f:	83 c1 01             	add    $0x1,%ecx
  412092:	89 48 08             	mov    %ecx,0x8(%rax)
  412095:	48 8b 85 88 fd ff ff 	mov    -0x278(%rbp),%rax
  41209c:	48 8b 00             	mov    (%rax),%rax
  41209f:	8a 90 98 00 00 00    	mov    0x98(%rax),%dl
  4120a5:	c0 ea 02             	shr    $0x2,%dl
  4120a8:	80 e2 03             	and    $0x3,%dl
  4120ab:	0f b6 ca             	movzbl %dl,%ecx
  4120ae:	89 8d 34 fd ff ff    	mov    %ecx,-0x2cc(%rbp)
  4120b4:	48 8b 85 78 fd ff ff 	mov    -0x288(%rbp),%rax
  4120bb:	83 78 18 05          	cmpl   $0x5,0x18(%rax)
  4120bf:	74 3d                	je     4120fe <mbedtls_ssl_handshake_step+0x599e>
  4120c1:	48 8b 85 78 fd ff ff 	mov    -0x288(%rbp),%rax
  4120c8:	83 78 18 07          	cmpl   $0x7,0x18(%rax)
  4120cc:	74 30                	je     4120fe <mbedtls_ssl_handshake_step+0x599e>
  4120ce:	48 8b 85 78 fd ff ff 	mov    -0x288(%rbp),%rax
  4120d5:	83 78 18 06          	cmpl   $0x6,0x18(%rax)
  4120d9:	74 23                	je     4120fe <mbedtls_ssl_handshake_step+0x599e>
  4120db:	48 8b 85 78 fd ff ff 	mov    -0x288(%rbp),%rax
  4120e2:	83 78 18 08          	cmpl   $0x8,0x18(%rax)
  4120e6:	74 16                	je     4120fe <mbedtls_ssl_handshake_step+0x599e>
  4120e8:	48 8b 85 78 fd ff ff 	mov    -0x288(%rbp),%rax
  4120ef:	83 78 18 0b          	cmpl   $0xb,0x18(%rax)
  4120f3:	74 09                	je     4120fe <mbedtls_ssl_handshake_step+0x599e>
  4120f5:	83 bd 34 fd ff ff 00 	cmpl   $0x0,-0x2cc(%rbp)
  4120fc:	75 0f                	jne    41210d <mbedtls_ssl_handshake_step+0x59ad>
  4120fe:	c7 85 90 fd ff ff 00 	movl   $0x0,-0x270(%rbp)
  412105:	00 00 00 
  412108:	e9 f6 02 00 00       	jmpq   412403 <mbedtls_ssl_handshake_step+0x5ca3>
  41210d:	48 8b 85 88 fd ff ff 	mov    -0x278(%rbp),%rax
  412114:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  41211b:	48 89 85 50 fd ff ff 	mov    %rax,-0x2b0(%rbp)
  412122:	48 8b 85 50 fd ff ff 	mov    -0x2b0(%rbp),%rax
  412129:	48 83 c0 04          	add    $0x4,%rax
  41212d:	48 89 85 48 fd ff ff 	mov    %rax,-0x2b8(%rbp)
  412134:	48 c7 85 60 fd ff ff 	movq   $0x0,-0x2a0(%rbp)
  41213b:	00 00 00 00 
  41213f:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
  412146:	48 8b 8d 60 fd ff ff 	mov    -0x2a0(%rbp),%rcx
  41214d:	48 89 ca             	mov    %rcx,%rdx
  412150:	48 83 c2 01          	add    $0x1,%rdx
  412154:	48 89 95 60 fd ff ff 	mov    %rdx,-0x2a0(%rbp)
  41215b:	48 83 c1 01          	add    $0x1,%rcx
  41215f:	c6 04 08 01          	movb   $0x1,(%rax,%rcx,1)
  412163:	48 8b 85 60 fd ff ff 	mov    -0x2a0(%rbp),%rax
  41216a:	48 89 c1             	mov    %rax,%rcx
  41216d:	48 83 c1 01          	add    $0x1,%rcx
  412171:	48 89 8d 60 fd ff ff 	mov    %rcx,-0x2a0(%rbp)
  412178:	40 88 c6             	mov    %al,%sil
  41217b:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
  412182:	40 88 30             	mov    %sil,(%rax)
  412185:	48 8b 85 60 fd ff ff 	mov    -0x2a0(%rbp),%rax
  41218c:	48 03 85 48 fd ff ff 	add    -0x2b8(%rbp),%rax
  412193:	48 89 85 48 fd ff ff 	mov    %rax,-0x2b8(%rbp)
  41219a:	48 c7 85 58 fd ff ff 	movq   $0x0,-0x2a8(%rbp)
  4121a1:	00 00 00 00 
  4121a5:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
  4121ac:	48 83 c0 02          	add    $0x2,%rax
  4121b0:	48 89 85 48 fd ff ff 	mov    %rax,-0x2b8(%rbp)
  4121b7:	48 c7 85 68 fd ff ff 	movq   $0x0,-0x298(%rbp)
  4121be:	00 00 00 00 
  4121c2:	48 8b 85 88 fd ff ff 	mov    -0x278(%rbp),%rax
  4121c9:	48 8b 00             	mov    (%rax),%rax
  4121cc:	40 8a b0 98 00 00 00 	mov    0x98(%rax),%sil
  4121d3:	40 c0 ee 06          	shr    $0x6,%sil
  4121d7:	40 80 e6 01          	and    $0x1,%sil
  4121db:	40 0f b6 fe          	movzbl %sil,%edi
  4121df:	83 ff 01             	cmp    $0x1,%edi
  4121e2:	0f 85 60 01 00 00    	jne    412348 <mbedtls_ssl_handshake_step+0x5be8>
  4121e8:	48 8b 85 88 fd ff ff 	mov    -0x278(%rbp),%rax
  4121ef:	48 8b 00             	mov    (%rax),%rax
  4121f2:	48 8b 40 78          	mov    0x78(%rax),%rax
  4121f6:	48 89 85 38 fd ff ff 	mov    %rax,-0x2c8(%rbp)
  4121fd:	31 c0                	xor    %eax,%eax
  4121ff:	88 c1                	mov    %al,%cl
  412201:	48 83 bd 38 fd ff ff 	cmpq   $0x0,-0x2c8(%rbp)
  412208:	00 
  412209:	88 8d c7 f1 ff ff    	mov    %cl,-0xe39(%rbp)
  41220f:	74 14                	je     412225 <mbedtls_ssl_handshake_step+0x5ac5>
  412211:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
  412218:	83 78 30 00          	cmpl   $0x0,0x30(%rax)
  41221c:	0f 95 c1             	setne  %cl
  41221f:	88 8d c7 f1 ff ff    	mov    %cl,-0xe39(%rbp)
  412225:	8a 85 c7 f1 ff ff    	mov    -0xe39(%rbp),%al
  41222b:	a8 01                	test   $0x1,%al
  41222d:	75 05                	jne    412234 <mbedtls_ssl_handshake_step+0x5ad4>
  41222f:	e9 12 01 00 00       	jmpq   412346 <mbedtls_ssl_handshake_step+0x5be6>
  412234:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
  41223b:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
  412242:	48 89 85 70 fd ff ff 	mov    %rax,-0x290(%rbp)
  412249:	48 8b 85 40 fd ff ff 	mov    -0x2c0(%rbp),%rax
  412250:	48 3b 85 48 fd ff ff 	cmp    -0x2b8(%rbp),%rax
  412257:	72 3b                	jb     412294 <mbedtls_ssl_handshake_step+0x5b34>
  412259:	48 8b 85 40 fd ff ff 	mov    -0x2c0(%rbp),%rax
  412260:	48 8b 8d 48 fd ff ff 	mov    -0x2b8(%rbp),%rcx
  412267:	48 29 c8             	sub    %rcx,%rax
  41226a:	48 3b 85 70 fd ff ff 	cmp    -0x290(%rbp),%rax
  412271:	72 21                	jb     412294 <mbedtls_ssl_handshake_step+0x5b34>
  412273:	48 8b 85 40 fd ff ff 	mov    -0x2c0(%rbp),%rax
  41227a:	48 8b 8d 48 fd ff ff 	mov    -0x2b8(%rbp),%rcx
  412281:	48 29 c8             	sub    %rcx,%rax
  412284:	48 8b 8d 70 fd ff ff 	mov    -0x290(%rbp),%rcx
  41228b:	48 83 c1 02          	add    $0x2,%rcx
  41228f:	48 39 c8             	cmp    %rcx,%rax
  412292:	73 05                	jae    412299 <mbedtls_ssl_handshake_step+0x5b39>
  412294:	e9 ad 00 00 00       	jmpq   412346 <mbedtls_ssl_handshake_step+0x5be6>
  412299:	48 8b 85 70 fd ff ff 	mov    -0x290(%rbp),%rax
  4122a0:	48 c1 e8 08          	shr    $0x8,%rax
  4122a4:	88 c1                	mov    %al,%cl
  4122a6:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
  4122ad:	48 89 c2             	mov    %rax,%rdx
  4122b0:	48 83 c2 01          	add    $0x1,%rdx
  4122b4:	48 89 95 48 fd ff ff 	mov    %rdx,-0x2b8(%rbp)
  4122bb:	88 08                	mov    %cl,(%rax)
  4122bd:	48 8b 85 70 fd ff ff 	mov    -0x290(%rbp),%rax
  4122c4:	88 c1                	mov    %al,%cl
  4122c6:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
  4122cd:	48 89 c2             	mov    %rax,%rdx
  4122d0:	48 83 c2 01          	add    $0x1,%rdx
  4122d4:	48 89 95 48 fd ff ff 	mov    %rdx,-0x2b8(%rbp)
  4122db:	88 08                	mov    %cl,(%rax)
  4122dd:	48 8b bd 48 fd ff ff 	mov    -0x2b8(%rbp),%rdi
  4122e4:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
  4122eb:	48 8b b0 90 00 00 00 	mov    0x90(%rax),%rsi
  4122f2:	48 8b 95 70 fd ff ff 	mov    -0x290(%rbp),%rdx
  4122f9:	e8 72 ee fe ff       	callq  401170 <memcpy@plt>
  4122fe:	48 8b 85 70 fd ff ff 	mov    -0x290(%rbp),%rax
  412305:	48 03 85 48 fd ff ff 	add    -0x2b8(%rbp),%rax
  41230c:	48 89 85 48 fd ff ff 	mov    %rax,-0x2b8(%rbp)
  412313:	48 8b 85 70 fd ff ff 	mov    -0x290(%rbp),%rax
  41231a:	48 83 c0 02          	add    $0x2,%rax
  41231e:	48 03 85 68 fd ff ff 	add    -0x298(%rbp),%rax
  412325:	48 89 85 68 fd ff ff 	mov    %rax,-0x298(%rbp)
  41232c:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
  412333:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
  41233a:	48 89 85 38 fd ff ff 	mov    %rax,-0x2c8(%rbp)
  412341:	e9 b7 fe ff ff       	jmpq   4121fd <mbedtls_ssl_handshake_step+0x5a9d>
  412346:	eb 00                	jmp    412348 <mbedtls_ssl_handshake_step+0x5be8>
  412348:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
  41234f:	48 8b 8d 50 fd ff ff 	mov    -0x2b0(%rbp),%rcx
  412356:	48 29 c8             	sub    %rcx,%rax
  412359:	48 8b 8d 88 fd ff ff 	mov    -0x278(%rbp),%rcx
  412360:	48 89 81 30 01 00 00 	mov    %rax,0x130(%rcx)
  412367:	48 8b 85 88 fd ff ff 	mov    -0x278(%rbp),%rax
  41236e:	c7 80 28 01 00 00 16 	movl   $0x16,0x128(%rax)
  412375:	00 00 00 
  412378:	48 8b 85 88 fd ff ff 	mov    -0x278(%rbp),%rax
  41237f:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  412386:	c6 00 0d             	movb   $0xd,(%rax)
  412389:	48 8b 85 68 fd ff ff 	mov    -0x298(%rbp),%rax
  412390:	48 c1 e8 08          	shr    $0x8,%rax
  412394:	88 c2                	mov    %al,%dl
  412396:	48 8b 85 88 fd ff ff 	mov    -0x278(%rbp),%rax
  41239d:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  4123a4:	48 8b 8d 60 fd ff ff 	mov    -0x2a0(%rbp),%rcx
  4123ab:	48 83 c1 04          	add    $0x4,%rcx
  4123af:	48 03 8d 58 fd ff ff 	add    -0x2a8(%rbp),%rcx
  4123b6:	88 14 08             	mov    %dl,(%rax,%rcx,1)
  4123b9:	48 8b 85 68 fd ff ff 	mov    -0x298(%rbp),%rax
  4123c0:	88 c2                	mov    %al,%dl
  4123c2:	48 8b 85 88 fd ff ff 	mov    -0x278(%rbp),%rax
  4123c9:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  4123d0:	48 8b 8d 60 fd ff ff 	mov    -0x2a0(%rbp),%rcx
  4123d7:	48 83 c1 05          	add    $0x5,%rcx
  4123db:	48 03 8d 58 fd ff ff 	add    -0x2a8(%rbp),%rcx
  4123e2:	88 14 08             	mov    %dl,(%rax,%rcx,1)
  4123e5:	48 8b bd 88 fd ff ff 	mov    -0x278(%rbp),%rdi
  4123ec:	e8 5f 51 ff ff       	callq  407550 <mbedtls_ssl_write_handshake_msg>
  4123f1:	89 85 84 fd ff ff    	mov    %eax,-0x27c(%rbp)
  4123f7:	8b 85 84 fd ff ff    	mov    -0x27c(%rbp),%eax
  4123fd:	89 85 90 fd ff ff    	mov    %eax,-0x270(%rbp)
  412403:	8b 85 90 fd ff ff    	mov    -0x270(%rbp),%eax
  412409:	89 85 24 f9 ff ff    	mov    %eax,-0x6dc(%rbp)
  41240f:	e9 4e 0d 00 00       	jmpq   413162 <mbedtls_ssl_handshake_step+0x6a02>
  412414:	48 8b 85 28 f9 ff ff 	mov    -0x6d8(%rbp),%rax
  41241b:	48 89 85 98 fd ff ff 	mov    %rax,-0x268(%rbp)
  412422:	48 8b 85 98 fd ff ff 	mov    -0x268(%rbp),%rax
  412429:	48 c7 80 30 01 00 00 	movq   $0x4,0x130(%rax)
  412430:	04 00 00 00 
  412434:	48 8b 85 98 fd ff ff 	mov    -0x268(%rbp),%rax
  41243b:	c7 80 28 01 00 00 16 	movl   $0x16,0x128(%rax)
  412442:	00 00 00 
  412445:	48 8b 85 98 fd ff ff 	mov    -0x268(%rbp),%rax
  41244c:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  412453:	c6 00 0e             	movb   $0xe,(%rax)
  412456:	48 8b 85 98 fd ff ff 	mov    -0x268(%rbp),%rax
  41245d:	8b 48 08             	mov    0x8(%rax),%ecx
  412460:	83 c1 01             	add    $0x1,%ecx
  412463:	89 48 08             	mov    %ecx,0x8(%rax)
  412466:	48 8b bd 98 fd ff ff 	mov    -0x268(%rbp),%rdi
  41246d:	e8 de 50 ff ff       	callq  407550 <mbedtls_ssl_write_handshake_msg>
  412472:	89 85 94 fd ff ff    	mov    %eax,-0x26c(%rbp)
  412478:	83 f8 00             	cmp    $0x0,%eax
  41247b:	74 0e                	je     41248b <mbedtls_ssl_handshake_step+0x5d2b>
  41247d:	8b 85 94 fd ff ff    	mov    -0x26c(%rbp),%eax
  412483:	89 85 a4 fd ff ff    	mov    %eax,-0x25c(%rbp)
  412489:	eb 0a                	jmp    412495 <mbedtls_ssl_handshake_step+0x5d35>
  41248b:	c7 85 a4 fd ff ff 00 	movl   $0x0,-0x25c(%rbp)
  412492:	00 00 00 
  412495:	8b 85 a4 fd ff ff    	mov    -0x25c(%rbp),%eax
  41249b:	89 85 24 f9 ff ff    	mov    %eax,-0x6dc(%rbp)
  4124a1:	e9 bc 0c 00 00       	jmpq   413162 <mbedtls_ssl_handshake_step+0x6a02>
  4124a6:	48 8b bd 28 f9 ff ff 	mov    -0x6d8(%rbp),%rdi
  4124ad:	e8 fe 79 ff ff       	callq  409eb0 <mbedtls_ssl_parse_certificate>
  4124b2:	89 85 24 f9 ff ff    	mov    %eax,-0x6dc(%rbp)
  4124b8:	e9 a5 0c 00 00       	jmpq   413162 <mbedtls_ssl_handshake_step+0x6a02>
  4124bd:	48 8b 85 28 f9 ff ff 	mov    -0x6d8(%rbp),%rax
  4124c4:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
  4124cb:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
  4124d2:	48 8b 40 78          	mov    0x78(%rax),%rax
  4124d6:	48 8b 00             	mov    (%rax),%rax
  4124d9:	48 89 85 b8 fd ff ff 	mov    %rax,-0x248(%rbp)
  4124e0:	48 8b bd c8 fd ff ff 	mov    -0x238(%rbp),%rdi
  4124e7:	be 01 00 00 00       	mov    $0x1,%esi
  4124ec:	e8 3f 5d ff ff       	callq  408230 <mbedtls_ssl_read_record>
  4124f1:	89 85 c4 fd ff ff    	mov    %eax,-0x23c(%rbp)
  4124f7:	83 f8 00             	cmp    $0x0,%eax
  4124fa:	74 11                	je     41250d <mbedtls_ssl_handshake_step+0x5dad>
  4124fc:	8b 85 c4 fd ff ff    	mov    -0x23c(%rbp),%eax
  412502:	89 85 d4 fd ff ff    	mov    %eax,-0x22c(%rbp)
  412508:	e9 6e 08 00 00       	jmpq   412d7b <mbedtls_ssl_handshake_step+0x661b>
  41250d:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
  412514:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  41251b:	48 8b 8d c8 fd ff ff 	mov    -0x238(%rbp),%rcx
  412522:	48 89 8d d8 fd ff ff 	mov    %rcx,-0x228(%rbp)
  412529:	48 83 c0 04          	add    $0x4,%rax
  41252d:	48 89 85 b0 fd ff ff 	mov    %rax,-0x250(%rbp)
  412534:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
  41253b:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  412542:	48 8b 8d c8 fd ff ff 	mov    -0x238(%rbp),%rcx
  412549:	48 03 81 e8 00 00 00 	add    0xe8(%rcx),%rax
  412550:	48 89 85 a8 fd ff ff 	mov    %rax,-0x258(%rbp)
  412557:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
  41255e:	83 b8 d0 00 00 00 16 	cmpl   $0x16,0xd0(%rax)
  412565:	74 0f                	je     412576 <mbedtls_ssl_handshake_step+0x5e16>
  412567:	c7 85 d4 fd ff ff 00 	movl   $0xffff8400,-0x22c(%rbp)
  41256e:	84 ff ff 
  412571:	e9 05 08 00 00       	jmpq   412d7b <mbedtls_ssl_handshake_step+0x661b>
  412576:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
  41257d:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  412584:	0f b6 08             	movzbl (%rax),%ecx
  412587:	83 f9 10             	cmp    $0x10,%ecx
  41258a:	74 0f                	je     41259b <mbedtls_ssl_handshake_step+0x5e3b>
  41258c:	c7 85 d4 fd ff ff 00 	movl   $0xffff8400,-0x22c(%rbp)
  412593:	84 ff ff 
  412596:	e9 e0 07 00 00       	jmpq   412d7b <mbedtls_ssl_handshake_step+0x661b>
  41259b:	48 8b 85 b8 fd ff ff 	mov    -0x248(%rbp),%rax
  4125a2:	83 78 18 01          	cmpl   $0x1,0x18(%rax)
  4125a6:	0f 85 9b 07 00 00    	jne    412d47 <mbedtls_ssl_handshake_step+0x65e7>
  4125ac:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
  4125b3:	48 8b 8d c8 fd ff ff 	mov    -0x238(%rbp),%rcx
  4125ba:	48 8b 95 b0 fd ff ff 	mov    -0x250(%rbp),%rdx
  4125c1:	48 8b b5 a8 fd ff ff 	mov    -0x258(%rbp),%rsi
  4125c8:	48 89 8d 60 fe ff ff 	mov    %rcx,-0x1a0(%rbp)
  4125cf:	48 89 95 58 fe ff ff 	mov    %rdx,-0x1a8(%rbp)
  4125d6:	48 89 b5 50 fe ff ff 	mov    %rsi,-0x1b0(%rbp)
  4125dd:	48 c7 85 48 fe ff ff 	movq   $0x0,-0x1b8(%rbp)
  4125e4:	00 00 00 00 
  4125e8:	48 8b 8d 60 fe ff ff 	mov    -0x1a0(%rbp),%rcx
  4125ef:	48 8b 49 58          	mov    0x58(%rcx),%rcx
  4125f3:	48 81 c1 28 01 00 00 	add    $0x128,%rcx
  4125fa:	48 03 8d 48 fe ff ff 	add    -0x1b8(%rbp),%rcx
  412601:	48 89 8d 38 fe ff ff 	mov    %rcx,-0x1c8(%rbp)
  412608:	c6 85 01 fe ff ff ff 	movb   $0xff,-0x1ff(%rbp)
  41260f:	c6 85 00 fe ff ff ff 	movb   $0xff,-0x200(%rbp)
  412616:	48 8b 8d 60 fe ff ff 	mov    -0x1a0(%rbp),%rcx
  41261d:	48 8b 95 58 fe ff ff 	mov    -0x1a8(%rbp),%rdx
  412624:	48 8b b5 50 fe ff ff 	mov    -0x1b0(%rbp),%rsi
  41262b:	48 89 8d b8 fe ff ff 	mov    %rcx,-0x148(%rbp)
  412632:	48 89 95 b0 fe ff ff 	mov    %rdx,-0x150(%rbp)
  412639:	48 89 b5 a8 fe ff ff 	mov    %rsi,-0x158(%rbp)
  412640:	48 89 85 a0 fe ff ff 	mov    %rax,-0x160(%rbp)
  412647:	48 8d 85 e8 fd ff ff 	lea    -0x218(%rbp),%rax
  41264e:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
  412655:	48 c7 85 90 fe ff ff 	movq   $0x30,-0x170(%rbp)
  41265c:	30 00 00 00 
  412660:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  412667:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
  41266e:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
  412675:	48 83 78 58 00       	cmpq   $0x0,0x58(%rax)
  41267a:	74 28                	je     4126a4 <mbedtls_ssl_handshake_step+0x5f44>
  41267c:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
  412683:	48 8b 40 58          	mov    0x58(%rax),%rax
  412687:	48 83 38 00          	cmpq   $0x0,(%rax)
  41268b:	74 17                	je     4126a4 <mbedtls_ssl_handshake_step+0x5f44>
  41268d:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
  412694:	48 8b 40 58          	mov    0x58(%rax),%rax
  412698:	48 8b 00             	mov    (%rax),%rax
  41269b:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
  4126a2:	eb 15                	jmp    4126b9 <mbedtls_ssl_handshake_step+0x5f59>
  4126a4:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
  4126ab:	48 8b 00             	mov    (%rax),%rax
  4126ae:	48 8b 40 70          	mov    0x70(%rax),%rax
  4126b2:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
  4126b9:	48 83 bd c8 fe ff ff 	cmpq   $0x0,-0x138(%rbp)
  4126c0:	00 
  4126c1:	75 0d                	jne    4126d0 <mbedtls_ssl_handshake_step+0x5f70>
  4126c3:	31 c0                	xor    %eax,%eax
  4126c5:	89 c1                	mov    %eax,%ecx
  4126c7:	48 89 8d b8 f1 ff ff 	mov    %rcx,-0xe48(%rbp)
  4126ce:	eb 12                	jmp    4126e2 <mbedtls_ssl_handshake_step+0x5f82>
  4126d0:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  4126d7:	48 8b 40 08          	mov    0x8(%rax),%rax
  4126db:	48 89 85 b8 f1 ff ff 	mov    %rax,-0xe48(%rbp)
  4126e2:	48 8b 85 b8 f1 ff ff 	mov    -0xe48(%rbp),%rax
  4126e9:	48 89 85 80 fe ff ff 	mov    %rax,-0x180(%rbp)
  4126f0:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  4126f7:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
  4126fe:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  412705:	48 83 78 58 00       	cmpq   $0x0,0x58(%rax)
  41270a:	74 28                	je     412734 <mbedtls_ssl_handshake_step+0x5fd4>
  41270c:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  412713:	48 8b 40 58          	mov    0x58(%rax),%rax
  412717:	48 83 38 00          	cmpq   $0x0,(%rax)
  41271b:	74 17                	je     412734 <mbedtls_ssl_handshake_step+0x5fd4>
  41271d:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  412724:	48 8b 40 58          	mov    0x58(%rax),%rax
  412728:	48 8b 00             	mov    (%rax),%rax
  41272b:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
  412732:	eb 15                	jmp    412749 <mbedtls_ssl_handshake_step+0x5fe9>
  412734:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  41273b:	48 8b 00             	mov    (%rax),%rax
  41273e:	48 8b 40 70          	mov    0x70(%rax),%rax
  412742:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
  412749:	48 83 bd 20 ff ff ff 	cmpq   $0x0,-0xe0(%rbp)
  412750:	00 
  412751:	75 0d                	jne    412760 <mbedtls_ssl_handshake_step+0x6000>
  412753:	31 c0                	xor    %eax,%eax
  412755:	89 c1                	mov    %eax,%ecx
  412757:	48 89 8d b0 f1 ff ff 	mov    %rcx,-0xe50(%rbp)
  41275e:	eb 11                	jmp    412771 <mbedtls_ssl_handshake_step+0x6011>
  412760:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
  412767:	48 8b 00             	mov    (%rax),%rax
  41276a:	48 89 85 b0 f1 ff ff 	mov    %rax,-0xe50(%rbp)
  412771:	48 8b 85 b0 f1 ff ff 	mov    -0xe50(%rbp),%rax
  412778:	48 05 48 01 00 00    	add    $0x148,%rax
  41277e:	48 89 85 78 fe ff ff 	mov    %rax,-0x188(%rbp)
  412785:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
  41278c:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  412793:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  41279a:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
  4127a1:	48 83 bd 50 ff ff ff 	cmpq   $0x0,-0xb0(%rbp)
  4127a8:	00 
  4127a9:	74 0d                	je     4127b8 <mbedtls_ssl_handshake_step+0x6058>
  4127ab:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
  4127b2:	48 83 38 00          	cmpq   $0x0,(%rax)
  4127b6:	75 0d                	jne    4127c5 <mbedtls_ssl_handshake_step+0x6065>
  4127b8:	48 c7 85 58 ff ff ff 	movq   $0x0,-0xa8(%rbp)
  4127bf:	00 00 00 00 
  4127c3:	eb 2a                	jmp    4127ef <mbedtls_ssl_handshake_step+0x608f>
  4127c5:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
  4127cc:	48 8b 00             	mov    (%rax),%rax
  4127cf:	48 83 c0 20          	add    $0x20,%rax
  4127d3:	48 89 c7             	mov    %rax,%rdi
  4127d6:	e8 6d 39 03 00       	callq  446148 <getDecryptedValueQWord>
  4127db:	48 8b bd 50 ff ff ff 	mov    -0xb0(%rbp),%rdi
  4127e2:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
  4127e6:	ff d0                	callq  *%rax
  4127e8:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
  4127ef:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
  4127f6:	48 83 c0 07          	add    $0x7,%rax
  4127fa:	48 c1 e8 03          	shr    $0x3,%rax
  4127fe:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
  412805:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  41280c:	83 78 10 00          	cmpl   $0x0,0x10(%rax)
  412810:	0f 84 92 00 00 00    	je     4128a8 <mbedtls_ssl_handshake_step+0x6148>
  412816:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
  41281d:	48 83 c0 02          	add    $0x2,%rax
  412821:	48 3b 85 a8 fe ff ff 	cmp    -0x158(%rbp),%rax
  412828:	76 0f                	jbe    412839 <mbedtls_ssl_handshake_step+0x60d9>
  41282a:	c7 85 c4 fe ff ff 00 	movl   $0xffff8400,-0x13c(%rbp)
  412831:	84 ff ff 
  412834:	e9 91 02 00 00       	jmpq   412aca <mbedtls_ssl_handshake_step+0x636a>
  412839:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
  412840:	48 89 c1             	mov    %rax,%rcx
  412843:	48 83 c1 01          	add    $0x1,%rcx
  412847:	48 89 8d b0 fe ff ff 	mov    %rcx,-0x150(%rbp)
  41284e:	0f b6 10             	movzbl (%rax),%edx
  412851:	89 d0                	mov    %edx,%eax
  412853:	48 8b 8d 70 fe ff ff 	mov    -0x190(%rbp),%rcx
  41285a:	48 c1 e9 08          	shr    $0x8,%rcx
  41285e:	48 81 e1 ff 00 00 00 	and    $0xff,%rcx
  412865:	48 39 c8             	cmp    %rcx,%rax
  412868:	75 2d                	jne    412897 <mbedtls_ssl_handshake_step+0x6137>
  41286a:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
  412871:	48 89 c1             	mov    %rax,%rcx
  412874:	48 83 c1 01          	add    $0x1,%rcx
  412878:	48 89 8d b0 fe ff ff 	mov    %rcx,-0x150(%rbp)
  41287f:	0f b6 10             	movzbl (%rax),%edx
  412882:	89 d0                	mov    %edx,%eax
  412884:	48 8b 8d 70 fe ff ff 	mov    -0x190(%rbp),%rcx
  41288b:	48 81 e1 ff 00 00 00 	and    $0xff,%rcx
  412892:	48 39 c8             	cmp    %rcx,%rax
  412895:	74 0f                	je     4128a6 <mbedtls_ssl_handshake_step+0x6146>
  412897:	c7 85 c4 fe ff ff 00 	movl   $0xffff8400,-0x13c(%rbp)
  41289e:	84 ff ff 
  4128a1:	e9 24 02 00 00       	jmpq   412aca <mbedtls_ssl_handshake_step+0x636a>
  4128a6:	eb 00                	jmp    4128a8 <mbedtls_ssl_handshake_step+0x6148>
  4128a8:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
  4128af:	48 03 85 70 fe ff ff 	add    -0x190(%rbp),%rax
  4128b6:	48 3b 85 a8 fe ff ff 	cmp    -0x158(%rbp),%rax
  4128bd:	74 0f                	je     4128ce <mbedtls_ssl_handshake_step+0x616e>
  4128bf:	c7 85 c4 fe ff ff 00 	movl   $0xffff8400,-0x13c(%rbp)
  4128c6:	84 ff ff 
  4128c9:	e9 fc 01 00 00       	jmpq   412aca <mbedtls_ssl_handshake_step+0x636a>
  4128ce:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
  4128d5:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
  4128dc:	c7 85 34 ff ff ff 01 	movl   $0x1,-0xcc(%rbp)
  4128e3:	00 00 00 
  4128e6:	48 83 bd 38 ff ff ff 	cmpq   $0x0,-0xc8(%rbp)
  4128ed:	00 
  4128ee:	74 15                	je     412905 <mbedtls_ssl_handshake_step+0x61a5>
  4128f0:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  4128f7:	48 89 c7             	mov    %rax,%rdi
  4128fa:	e8 49 38 03 00       	callq  446148 <getDecryptedValueQWord>
  4128ff:	48 83 f8 00          	cmp    $0x0,%rax
  412903:	75 0c                	jne    412911 <mbedtls_ssl_handshake_step+0x61b1>
  412905:	c7 85 44 ff ff ff 00 	movl   $0x0,-0xbc(%rbp)
  41290c:	00 00 00 
  41290f:	eb 29                	jmp    41293a <mbedtls_ssl_handshake_step+0x61da>
  412911:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  412918:	48 89 c7             	mov    %rax,%rdi
  41291b:	e8 28 38 03 00       	callq  446148 <getDecryptedValueQWord>
  412920:	48 83 c0 30          	add    $0x30,%rax
  412924:	48 89 c7             	mov    %rax,%rdi
  412927:	e8 1c 38 03 00       	callq  446148 <getDecryptedValueQWord>
  41292c:	8b bd 34 ff ff ff    	mov    -0xcc(%rbp),%edi
  412932:	ff d0                	callq  *%rax
  412934:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
  41293a:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
  412940:	83 f8 00             	cmp    $0x0,%eax
  412943:	75 0f                	jne    412954 <mbedtls_ssl_handshake_step+0x61f4>
  412945:	c7 85 c4 fe ff ff 00 	movl   $0xffff8a00,-0x13c(%rbp)
  41294c:	8a ff ff 
  41294f:	e9 76 01 00 00       	jmpq   412aca <mbedtls_ssl_handshake_step+0x636a>
  412954:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
  41295b:	48 8b 8d b0 fe ff ff 	mov    -0x150(%rbp),%rcx
  412962:	48 8b 95 70 fe ff ff 	mov    -0x190(%rbp),%rdx
  412969:	48 8b b5 a0 fe ff ff 	mov    -0x160(%rbp),%rsi
  412970:	48 8b bd 98 fe ff ff 	mov    -0x168(%rbp),%rdi
  412977:	4c 8b 85 90 fe ff ff 	mov    -0x170(%rbp),%r8
  41297e:	4c 8b 8d b8 fe ff ff 	mov    -0x148(%rbp),%r9
  412985:	4d 8b 09             	mov    (%r9),%r9
  412988:	4d 8b 49 30          	mov    0x30(%r9),%r9
  41298c:	4c 8b 95 b8 fe ff ff 	mov    -0x148(%rbp),%r10
  412993:	4d 8b 12             	mov    (%r10),%r10
  412996:	4d 8b 52 38          	mov    0x38(%r10),%r10
  41299a:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
  4129a1:	48 89 8d 08 ff ff ff 	mov    %rcx,-0xf8(%rbp)
  4129a8:	48 89 95 00 ff ff ff 	mov    %rdx,-0x100(%rbp)
  4129af:	48 89 b5 f8 fe ff ff 	mov    %rsi,-0x108(%rbp)
  4129b6:	48 89 bd f0 fe ff ff 	mov    %rdi,-0x110(%rbp)
  4129bd:	4c 89 85 e8 fe ff ff 	mov    %r8,-0x118(%rbp)
  4129c4:	4c 89 8d e0 fe ff ff 	mov    %r9,-0x120(%rbp)
  4129cb:	4c 89 95 d8 fe ff ff 	mov    %r10,-0x128(%rbp)
  4129d2:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
  4129d9:	48 89 c7             	mov    %rax,%rdi
  4129dc:	e8 67 37 03 00       	callq  446148 <getDecryptedValueQWord>
  4129e1:	48 83 f8 00          	cmp    $0x0,%rax
  4129e5:	75 0f                	jne    4129f6 <mbedtls_ssl_handshake_step+0x6296>
  4129e7:	c7 85 1c ff ff ff 80 	movl   $0xffffc180,-0xe4(%rbp)
  4129ee:	c1 ff ff 
  4129f1:	e9 bc 00 00 00       	jmpq   412ab2 <mbedtls_ssl_handshake_step+0x6352>
  4129f6:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
  4129fd:	48 89 c7             	mov    %rax,%rdi
  412a00:	e8 43 37 03 00       	callq  446148 <getDecryptedValueQWord>
  412a05:	48 83 c0 60          	add    $0x60,%rax
  412a09:	48 89 c7             	mov    %rax,%rdi
  412a0c:	e8 37 37 03 00       	callq  446148 <getDecryptedValueQWord>
  412a11:	48 83 f8 00          	cmp    $0x0,%rax
  412a15:	75 0f                	jne    412a26 <mbedtls_ssl_handshake_step+0x62c6>
  412a17:	c7 85 1c ff ff ff 00 	movl   $0xffffc100,-0xe4(%rbp)
  412a1e:	c1 ff ff 
  412a21:	e9 8c 00 00 00       	jmpq   412ab2 <mbedtls_ssl_handshake_step+0x6352>
  412a26:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
  412a2d:	48 89 c7             	mov    %rax,%rdi
  412a30:	e8 13 37 03 00       	callq  446148 <getDecryptedValueQWord>
  412a35:	48 83 c0 60          	add    $0x60,%rax
  412a39:	48 89 c7             	mov    %rax,%rdi
  412a3c:	e8 07 37 03 00       	callq  446148 <getDecryptedValueQWord>
  412a41:	48 8b bd 10 ff ff ff 	mov    -0xf0(%rbp),%rdi
  412a48:	48 83 c7 08          	add    $0x8,%rdi
  412a4c:	48 89 85 a8 f1 ff ff 	mov    %rax,-0xe58(%rbp)
  412a53:	e8 f0 36 03 00       	callq  446148 <getDecryptedValueQWord>
  412a58:	48 8b b5 08 ff ff ff 	mov    -0xf8(%rbp),%rsi
  412a5f:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
  412a66:	48 8b 8d f8 fe ff ff 	mov    -0x108(%rbp),%rcx
  412a6d:	4c 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%r8
  412a74:	4c 8b 8d e8 fe ff ff 	mov    -0x118(%rbp),%r9
  412a7b:	48 8b bd e0 fe ff ff 	mov    -0x120(%rbp),%rdi
  412a82:	4c 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%r10
  412a89:	48 89 bd a0 f1 ff ff 	mov    %rdi,-0xe60(%rbp)
  412a90:	48 89 c7             	mov    %rax,%rdi
  412a93:	48 8b 85 a0 f1 ff ff 	mov    -0xe60(%rbp),%rax
  412a9a:	48 89 04 24          	mov    %rax,(%rsp)
  412a9e:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
  412aa3:	48 8b 85 a8 f1 ff ff 	mov    -0xe58(%rbp),%rax
  412aaa:	ff d0                	callq  *%rax
  412aac:	89 85 1c ff ff ff    	mov    %eax,-0xe4(%rbp)
  412ab2:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax
  412ab8:	89 85 8c fe ff ff    	mov    %eax,-0x174(%rbp)
  412abe:	8b 85 8c fe ff ff    	mov    -0x174(%rbp),%eax
  412ac4:	89 85 c4 fe ff ff    	mov    %eax,-0x13c(%rbp)
  412aca:	b8 30 00 00 00       	mov    $0x30,%eax
  412acf:	89 c2                	mov    %eax,%edx
  412ad1:	48 8d b5 60 f8 ff ff 	lea    -0x7a0(%rbp),%rsi
  412ad8:	31 c0                	xor    %eax,%eax
  412ada:	48 8d 8d 36 fe ff ff 	lea    -0x1ca(%rbp),%rcx
  412ae1:	8b bd c4 fe ff ff    	mov    -0x13c(%rbp),%edi
  412ae7:	89 bd 44 fe ff ff    	mov    %edi,-0x1bc(%rbp)
  412aed:	4c 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%r8
  412af4:	4d 8b 40 58          	mov    0x58(%r8),%r8
  412af8:	41 8b b8 5c 01 00 00 	mov    0x15c(%r8),%edi
  412aff:	4c 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%r8
  412b06:	4d 8b 40 58          	mov    0x58(%r8),%r8
  412b0a:	45 8b 88 60 01 00 00 	mov    0x160(%r8),%r9d
  412b11:	4c 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%r8
  412b18:	4d 8b 00             	mov    (%r8),%r8
  412b1b:	45 8a 90 98 00 00 00 	mov    0x98(%r8),%r10b
  412b22:	41 c0 ea 01          	shr    $0x1,%r10b
  412b26:	41 80 e2 01          	and    $0x1,%r10b
  412b2a:	45 0f b6 da          	movzbl %r10b,%r11d
  412b2e:	89 bd 74 ff ff ff    	mov    %edi,-0x8c(%rbp)
  412b34:	44 89 8d 70 ff ff ff 	mov    %r9d,-0x90(%rbp)
  412b3b:	44 89 9d 6c ff ff ff 	mov    %r11d,-0x94(%rbp)
  412b42:	48 89 8d 60 ff ff ff 	mov    %rcx,-0xa0(%rbp)
  412b49:	8b bd 74 ff ff ff    	mov    -0x8c(%rbp),%edi
  412b4f:	41 88 fa             	mov    %dil,%r10b
  412b52:	48 8b 8d 60 ff ff ff 	mov    -0xa0(%rbp),%rcx
  412b59:	44 88 11             	mov    %r10b,(%rcx)
  412b5c:	8b bd 70 ff ff ff    	mov    -0x90(%rbp),%edi
  412b62:	41 88 fa             	mov    %dil,%r10b
  412b65:	48 8b 8d 60 ff ff ff 	mov    -0xa0(%rbp),%rcx
  412b6c:	44 88 51 01          	mov    %r10b,0x1(%rcx)
  412b70:	8b bd 44 fe ff ff    	mov    -0x1bc(%rbp),%edi
  412b76:	89 bd e4 fd ff ff    	mov    %edi,-0x21c(%rbp)
  412b7c:	48 8b 8d e8 fd ff ff 	mov    -0x218(%rbp),%rcx
  412b83:	48 83 f1 30          	xor    $0x30,%rcx
  412b87:	8b bd e4 fd ff ff    	mov    -0x21c(%rbp),%edi
  412b8d:	41 89 f8             	mov    %edi,%r8d
  412b90:	49 09 c8             	or     %rcx,%r8
  412b93:	44 89 c7             	mov    %r8d,%edi
  412b96:	89 bd e4 fd ff ff    	mov    %edi,-0x21c(%rbp)
  412b9c:	0f b6 bd 00 fe ff ff 	movzbl -0x200(%rbp),%edi
  412ba3:	44 0f b6 8d 36 fe ff 	movzbl -0x1ca(%rbp),%r9d
  412baa:	ff 
  412bab:	44 31 cf             	xor    %r9d,%edi
  412bae:	0b bd e4 fd ff ff    	or     -0x21c(%rbp),%edi
  412bb4:	89 bd e4 fd ff ff    	mov    %edi,-0x21c(%rbp)
  412bba:	0f b6 bd 01 fe ff ff 	movzbl -0x1ff(%rbp),%edi
  412bc1:	44 0f b6 8d 37 fe ff 	movzbl -0x1c9(%rbp),%r9d
  412bc8:	ff 
  412bc9:	44 31 cf             	xor    %r9d,%edi
  412bcc:	0b bd e4 fd ff ff    	or     -0x21c(%rbp),%edi
  412bd2:	89 bd e4 fd ff ff    	mov    %edi,-0x21c(%rbp)
  412bd8:	8b bd e4 fd ff ff    	mov    -0x21c(%rbp),%edi
  412bde:	41 89 c1             	mov    %eax,%r9d
  412be1:	44 2b 8d e4 fd ff ff 	sub    -0x21c(%rbp),%r9d
  412be8:	44 09 cf             	or     %r9d,%edi
  412beb:	c1 ef 1f             	shr    $0x1f,%edi
  412bee:	29 f8                	sub    %edi,%eax
  412bf0:	41 88 c2             	mov    %al,%r10b
  412bf3:	44 88 95 ff fd ff ff 	mov    %r10b,-0x201(%rbp)
  412bfa:	48 8b 8d 60 fe ff ff 	mov    -0x1a0(%rbp),%rcx
  412c01:	48 8b 09             	mov    (%rcx),%rcx
  412c04:	48 8b 49 30          	mov    0x30(%rcx),%rcx
  412c08:	4c 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%r8
  412c0f:	4d 8b 00             	mov    (%r8),%r8
  412c12:	49 8b 78 38          	mov    0x38(%r8),%rdi
  412c16:	ff d1                	callq  *%rcx
  412c18:	89 85 44 fe ff ff    	mov    %eax,-0x1bc(%rbp)
  412c1e:	83 bd 44 fe ff ff 00 	cmpl   $0x0,-0x1bc(%rbp)
  412c25:	74 11                	je     412c38 <mbedtls_ssl_handshake_step+0x64d8>
  412c27:	8b 85 44 fe ff ff    	mov    -0x1bc(%rbp),%eax
  412c2d:	89 85 6c fe ff ff    	mov    %eax,-0x194(%rbp)
  412c33:	e9 d7 00 00 00       	jmpq   412d0f <mbedtls_ssl_handshake_step+0x65af>
  412c38:	b8 30 00 00 00       	mov    $0x30,%eax
  412c3d:	89 c1                	mov    %eax,%ecx
  412c3f:	48 3b 8d 48 fe ff ff 	cmp    -0x1b8(%rbp),%rcx
  412c46:	72 14                	jb     412c5c <mbedtls_ssl_handshake_step+0x64fc>
  412c48:	b8 30 00 00 00       	mov    $0x30,%eax
  412c4d:	89 c1                	mov    %eax,%ecx
  412c4f:	48 2b 8d 48 fe ff ff 	sub    -0x1b8(%rbp),%rcx
  412c56:	48 83 f9 30          	cmp    $0x30,%rcx
  412c5a:	73 0f                	jae    412c6b <mbedtls_ssl_handshake_step+0x650b>
  412c5c:	c7 85 6c fe ff ff 00 	movl   $0xffff9400,-0x194(%rbp)
  412c63:	94 ff ff 
  412c66:	e9 a4 00 00 00       	jmpq   412d0f <mbedtls_ssl_handshake_step+0x65af>
  412c6b:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
  412c72:	48 8b 40 58          	mov    0x58(%rax),%rax
  412c76:	48 c7 80 e0 00 00 00 	movq   $0x30,0xe0(%rax)
  412c7d:	30 00 00 00 
  412c81:	48 c7 85 f0 fd ff ff 	movq   $0x0,-0x210(%rbp)
  412c88:	00 00 00 00 
  412c8c:	48 8b 85 f0 fd ff ff 	mov    -0x210(%rbp),%rax
  412c93:	48 8b 8d 60 fe ff ff 	mov    -0x1a0(%rbp),%rcx
  412c9a:	48 8b 49 58          	mov    0x58(%rcx),%rcx
  412c9e:	48 3b 81 e0 00 00 00 	cmp    0xe0(%rcx),%rax
  412ca5:	73 5e                	jae    412d05 <mbedtls_ssl_handshake_step+0x65a5>
  412ca7:	0f b6 85 ff fd ff ff 	movzbl -0x201(%rbp),%eax
  412cae:	48 8b 8d f0 fd ff ff 	mov    -0x210(%rbp),%rcx
  412cb5:	0f b6 94 0d 60 f8 ff 	movzbl -0x7a0(%rbp,%rcx,1),%edx
  412cbc:	ff 
  412cbd:	21 d0                	and    %edx,%eax
  412cbf:	0f b6 95 ff fd ff ff 	movzbl -0x201(%rbp),%edx
  412cc6:	83 f2 ff             	xor    $0xffffffff,%edx
  412cc9:	48 8b 8d f0 fd ff ff 	mov    -0x210(%rbp),%rcx
  412cd0:	0f b6 b4 0d 00 fe ff 	movzbl -0x200(%rbp,%rcx,1),%esi
  412cd7:	ff 
  412cd8:	21 f2                	and    %esi,%edx
  412cda:	09 d0                	or     %edx,%eax
  412cdc:	40 88 c7             	mov    %al,%dil
  412cdf:	48 8b 8d 38 fe ff ff 	mov    -0x1c8(%rbp),%rcx
  412ce6:	4c 8b 85 f0 fd ff ff 	mov    -0x210(%rbp),%r8
  412ced:	42 88 3c 01          	mov    %dil,(%rcx,%r8,1)
  412cf1:	48 8b 8d f0 fd ff ff 	mov    -0x210(%rbp),%rcx
  412cf8:	48 83 c1 01          	add    $0x1,%rcx
  412cfc:	48 89 8d f0 fd ff ff 	mov    %rcx,-0x210(%rbp)
  412d03:	eb 87                	jmp    412c8c <mbedtls_ssl_handshake_step+0x652c>
  412d05:	c7 85 6c fe ff ff 00 	movl   $0x0,-0x194(%rbp)
  412d0c:	00 00 00 
  412d0f:	8b 85 6c fe ff ff    	mov    -0x194(%rbp),%eax
  412d15:	89 85 c4 fd ff ff    	mov    %eax,-0x23c(%rbp)
  412d1b:	83 f8 00             	cmp    $0x0,%eax
  412d1e:	74 0e                	je     412d2e <mbedtls_ssl_handshake_step+0x65ce>
  412d20:	8b 85 c4 fd ff ff    	mov    -0x23c(%rbp),%eax
  412d26:	89 85 d4 fd ff ff    	mov    %eax,-0x22c(%rbp)
  412d2c:	eb 4d                	jmp    412d7b <mbedtls_ssl_handshake_step+0x661b>
  412d2e:	48 8b bd c8 fd ff ff 	mov    -0x238(%rbp),%rdi
  412d35:	e8 c6 20 ff ff       	callq  404e00 <mbedtls_ssl_derive_keys>
  412d3a:	89 85 c4 fd ff ff    	mov    %eax,-0x23c(%rbp)
  412d40:	83 f8 00             	cmp    $0x0,%eax
  412d43:	75 0e                	jne    412d53 <mbedtls_ssl_handshake_step+0x65f3>
  412d45:	eb 1a                	jmp    412d61 <mbedtls_ssl_handshake_step+0x6601>
  412d47:	c7 85 d4 fd ff ff 00 	movl   $0xffff9400,-0x22c(%rbp)
  412d4e:	94 ff ff 
  412d51:	eb 28                	jmp    412d7b <mbedtls_ssl_handshake_step+0x661b>
  412d53:	8b 85 c4 fd ff ff    	mov    -0x23c(%rbp),%eax
  412d59:	89 85 d4 fd ff ff    	mov    %eax,-0x22c(%rbp)
  412d5f:	eb 1a                	jmp    412d7b <mbedtls_ssl_handshake_step+0x661b>
  412d61:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
  412d68:	8b 48 08             	mov    0x8(%rax),%ecx
  412d6b:	83 c1 01             	add    $0x1,%ecx
  412d6e:	89 48 08             	mov    %ecx,0x8(%rax)
  412d71:	c7 85 d4 fd ff ff 00 	movl   $0x0,-0x22c(%rbp)
  412d78:	00 00 00 
  412d7b:	8b 85 d4 fd ff ff    	mov    -0x22c(%rbp),%eax
  412d81:	89 85 24 f9 ff ff    	mov    %eax,-0x6dc(%rbp)
  412d87:	e9 d6 03 00 00       	jmpq   413162 <mbedtls_ssl_handshake_step+0x6a02>
  412d8c:	48 8d 85 60 f8 ff ff 	lea    -0x7a0(%rbp),%rax
  412d93:	48 8b 8d 28 f9 ff ff 	mov    -0x6d8(%rbp),%rcx
  412d9a:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
  412d9e:	c7 45 ac 80 8f ff ff 	movl   $0xffff8f80,-0x54(%rbp)
  412da5:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  412da9:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  412dad:	48 8b 40 78          	mov    0x78(%rax),%rax
  412db1:	48 8b 00             	mov    (%rax),%rax
  412db4:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  412dbb:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  412dc2:	83 78 18 05          	cmpl   $0x5,0x18(%rax)
  412dc6:	74 43                	je     412e0b <mbedtls_ssl_handshake_step+0x66ab>
  412dc8:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  412dcf:	83 78 18 07          	cmpl   $0x7,0x18(%rax)
  412dd3:	74 36                	je     412e0b <mbedtls_ssl_handshake_step+0x66ab>
  412dd5:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  412ddc:	83 78 18 08          	cmpl   $0x8,0x18(%rax)
  412de0:	74 29                	je     412e0b <mbedtls_ssl_handshake_step+0x66ab>
  412de2:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  412de9:	83 78 18 06          	cmpl   $0x6,0x18(%rax)
  412ded:	74 1c                	je     412e0b <mbedtls_ssl_handshake_step+0x66ab>
  412def:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  412df6:	83 78 18 0b          	cmpl   $0xb,0x18(%rax)
  412dfa:	74 0f                	je     412e0b <mbedtls_ssl_handshake_step+0x66ab>
  412dfc:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  412e00:	48 8b 40 50          	mov    0x50(%rax),%rax
  412e04:	48 83 78 68 00       	cmpq   $0x0,0x68(%rax)
  412e09:	75 19                	jne    412e24 <mbedtls_ssl_handshake_step+0x66c4>
  412e0b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  412e0f:	8b 48 08             	mov    0x8(%rax),%ecx
  412e12:	83 c1 01             	add    $0x1,%ecx
  412e15:	89 48 08             	mov    %ecx,0x8(%rax)
  412e18:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%rbp)
  412e1f:	e9 56 02 00 00       	jmpq   41307a <mbedtls_ssl_handshake_step+0x691a>
  412e24:	31 f6                	xor    %esi,%esi
  412e26:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
  412e2a:	e8 01 54 ff ff       	callq  408230 <mbedtls_ssl_read_record>
  412e2f:	31 f6                	xor    %esi,%esi
  412e31:	89 45 ac             	mov    %eax,-0x54(%rbp)
  412e34:	3b 75 ac             	cmp    -0x54(%rbp),%esi
  412e37:	74 0b                	je     412e44 <mbedtls_ssl_handshake_step+0x66e4>
  412e39:	8b 45 ac             	mov    -0x54(%rbp),%eax
  412e3c:	89 45 bc             	mov    %eax,-0x44(%rbp)
  412e3f:	e9 36 02 00 00       	jmpq   41307a <mbedtls_ssl_handshake_step+0x691a>
  412e44:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  412e48:	8b 48 08             	mov    0x8(%rax),%ecx
  412e4b:	83 c1 01             	add    $0x1,%ecx
  412e4e:	89 48 08             	mov    %ecx,0x8(%rax)
  412e51:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  412e55:	83 b8 d0 00 00 00 16 	cmpl   $0x16,0xd0(%rax)
  412e5c:	75 13                	jne    412e71 <mbedtls_ssl_handshake_step+0x6711>
  412e5e:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  412e62:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  412e69:	0f b6 08             	movzbl (%rax),%ecx
  412e6c:	83 f9 0f             	cmp    $0xf,%ecx
  412e6f:	74 0c                	je     412e7d <mbedtls_ssl_handshake_step+0x671d>
  412e71:	c7 45 bc 80 82 ff ff 	movl   $0xffff8280,-0x44(%rbp)
  412e78:	e9 fd 01 00 00       	jmpq   41307a <mbedtls_ssl_handshake_step+0x691a>
  412e7d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  412e81:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  412e85:	48 c7 45 a0 04 00 00 	movq   $0x4,-0x60(%rbp)
  412e8c:	00 
  412e8d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  412e91:	83 78 10 03          	cmpl   $0x3,0x10(%rax)
  412e95:	0f 84 9f 00 00 00    	je     412f3a <mbedtls_ssl_handshake_step+0x67da>
  412e9b:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%rbp)
  412ea2:	48 c7 45 88 24 00 00 	movq   $0x24,-0x78(%rbp)
  412ea9:	00 
  412eaa:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  412eae:	48 8b 40 50          	mov    0x50(%rax),%rax
  412eb2:	48 8b 40 68          	mov    0x68(%rax),%rax
  412eb6:	48 05 48 01 00 00    	add    $0x148,%rax
  412ebc:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  412ec0:	c7 45 dc 04 00 00 00 	movl   $0x4,-0x24(%rbp)
  412ec7:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  412ecc:	74 0a                	je     412ed8 <mbedtls_ssl_handshake_step+0x6778>
  412ece:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  412ed2:	48 83 38 00          	cmpq   $0x0,(%rax)
  412ed6:	75 09                	jne    412ee1 <mbedtls_ssl_handshake_step+0x6781>
  412ed8:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
  412edf:	eb 1b                	jmp    412efc <mbedtls_ssl_handshake_step+0x679c>
  412ee1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  412ee5:	48 8b 00             	mov    (%rax),%rax
  412ee8:	48 83 c0 30          	add    $0x30,%rax
  412eec:	48 89 c7             	mov    %rax,%rdi
  412eef:	e8 54 32 03 00       	callq  446148 <getDecryptedValueQWord>
  412ef4:	8b 7d dc             	mov    -0x24(%rbp),%edi
  412ef7:	ff d0                	callq  *%rax
  412ef9:	89 45 e8             	mov    %eax,-0x18(%rbp)
  412efc:	8b 45 e8             	mov    -0x18(%rbp),%eax
  412eff:	83 f8 00             	cmp    $0x0,%eax
  412f02:	74 1f                	je     412f23 <mbedtls_ssl_handshake_step+0x67c3>
  412f04:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  412f08:	48 83 c0 10          	add    $0x10,%rax
  412f0c:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  412f10:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  412f14:	48 83 e8 10          	sub    $0x10,%rax
  412f18:	48 89 45 88          	mov    %rax,-0x78(%rbp)
  412f1c:	c7 45 84 04 00 00 00 	movl   $0x4,-0x7c(%rbp)
  412f23:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  412f27:	48 83 c0 02          	add    $0x2,%rax
  412f2b:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  412f2f:	48 3b 81 e8 00 00 00 	cmp    0xe8(%rcx),%rax
  412f36:	77 0e                	ja     412f46 <mbedtls_ssl_handshake_step+0x67e6>
  412f38:	eb 18                	jmp    412f52 <mbedtls_ssl_handshake_step+0x67f2>
  412f3a:	c7 45 bc 00 94 ff ff 	movl   $0xffff9400,-0x44(%rbp)
  412f41:	e9 34 01 00 00       	jmpq   41307a <mbedtls_ssl_handshake_step+0x691a>
  412f46:	c7 45 bc 80 82 ff ff 	movl   $0xffff8280,-0x44(%rbp)
  412f4d:	e9 28 01 00 00       	jmpq   41307a <mbedtls_ssl_handshake_step+0x691a>
  412f52:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  412f56:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  412f5d:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
  412f61:	0f b6 14 08          	movzbl (%rax,%rcx,1),%edx
  412f65:	c1 e2 08             	shl    $0x8,%edx
  412f68:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  412f6c:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  412f73:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
  412f77:	0f b6 74 08 01       	movzbl 0x1(%rax,%rcx,1),%esi
  412f7c:	09 f2                	or     %esi,%edx
  412f7e:	48 63 c2             	movslq %edx,%rax
  412f81:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  412f85:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  412f89:	48 83 c0 02          	add    $0x2,%rax
  412f8d:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  412f91:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  412f95:	48 03 45 98          	add    -0x68(%rbp),%rax
  412f99:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  412f9d:	48 3b 81 e8 00 00 00 	cmp    0xe8(%rcx),%rax
  412fa4:	74 0c                	je     412fb2 <mbedtls_ssl_handshake_step+0x6852>
  412fa6:	c7 45 bc 80 82 ff ff 	movl   $0xffff8280,-0x44(%rbp)
  412fad:	e9 c8 00 00 00       	jmpq   41307a <mbedtls_ssl_handshake_step+0x691a>
  412fb2:	48 8d b5 60 f8 ff ff 	lea    -0x7a0(%rbp),%rsi
  412fb9:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  412fbd:	48 8b 40 58          	mov    0x58(%rax),%rax
  412fc1:	48 8b 80 c8 00 00 00 	mov    0xc8(%rax),%rax
  412fc8:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
  412fcc:	ff d0                	callq  *%rax
  412fce:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  412fd2:	48 8b 40 50          	mov    0x50(%rax),%rax
  412fd6:	48 8b 40 68          	mov    0x68(%rax),%rax
  412fda:	48 05 48 01 00 00    	add    $0x148,%rax
  412fe0:	8b 75 84             	mov    -0x7c(%rbp),%esi
  412fe3:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
  412fe7:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
  412feb:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
  412fef:	48 8b bf c0 00 00 00 	mov    0xc0(%rdi),%rdi
  412ff6:	48 03 7d a0          	add    -0x60(%rbp),%rdi
  412ffa:	4c 8b 4d 98          	mov    -0x68(%rbp),%r9
  412ffe:	48 89 bd 98 f1 ff ff 	mov    %rdi,-0xe68(%rbp)
  413005:	48 89 c7             	mov    %rax,%rdi
  413008:	4c 8b 85 98 f1 ff ff 	mov    -0xe68(%rbp),%r8
  41300f:	e8 0c c3 01 00       	callq  42f320 <mbedtls_pk_verify>
  413014:	89 45 ac             	mov    %eax,-0x54(%rbp)
  413017:	83 f8 00             	cmp    $0x0,%eax
  41301a:	74 08                	je     413024 <mbedtls_ssl_handshake_step+0x68c4>
  41301c:	8b 45 ac             	mov    -0x54(%rbp),%eax
  41301f:	89 45 bc             	mov    %eax,-0x44(%rbp)
  413022:	eb 56                	jmp    41307a <mbedtls_ssl_handshake_step+0x691a>
  413024:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  413028:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  41302c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  413030:	48 8b 40 58          	mov    0x58(%rax),%rax
  413034:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  413038:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41303c:	83 78 08 10          	cmpl   $0x10,0x8(%rax)
  413040:	74 32                	je     413074 <mbedtls_ssl_handshake_step+0x6914>
  413042:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  413047:	74 2b                	je     413074 <mbedtls_ssl_handshake_step+0x6914>
  413049:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41304d:	48 8b 40 58          	mov    0x58(%rax),%rax
  413051:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  413058:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  41305c:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  413060:	48 8b b1 c0 00 00 00 	mov    0xc0(%rcx),%rsi
  413067:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  41306b:	48 8b 91 e8 00 00 00 	mov    0xe8(%rcx),%rdx
  413072:	ff d0                	callq  *%rax
  413074:	8b 45 ac             	mov    -0x54(%rbp),%eax
  413077:	89 45 bc             	mov    %eax,-0x44(%rbp)
  41307a:	8b 45 bc             	mov    -0x44(%rbp),%eax
  41307d:	89 85 24 f9 ff ff    	mov    %eax,-0x6dc(%rbp)
  413083:	e9 da 00 00 00       	jmpq   413162 <mbedtls_ssl_handshake_step+0x6a02>
  413088:	48 8b bd 28 f9 ff ff 	mov    -0x6d8(%rbp),%rdi
  41308f:	e8 5c 7e ff ff       	callq  40aef0 <mbedtls_ssl_parse_change_cipher_spec>
  413094:	89 85 24 f9 ff ff    	mov    %eax,-0x6dc(%rbp)
  41309a:	e9 c3 00 00 00       	jmpq   413162 <mbedtls_ssl_handshake_step+0x6a02>
  41309f:	48 8b bd 28 f9 ff ff 	mov    -0x6d8(%rbp),%rdi
  4130a6:	e8 85 87 ff ff       	callq  40b830 <mbedtls_ssl_parse_finished>
  4130ab:	89 85 24 f9 ff ff    	mov    %eax,-0x6dc(%rbp)
  4130b1:	e9 ac 00 00 00       	jmpq   413162 <mbedtls_ssl_handshake_step+0x6a02>
  4130b6:	48 8b 85 28 f9 ff ff 	mov    -0x6d8(%rbp),%rax
  4130bd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4130c1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4130c5:	c7 80 28 01 00 00 14 	movl   $0x14,0x128(%rax)
  4130cc:	00 00 00 
  4130cf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4130d3:	48 c7 80 30 01 00 00 	movq   $0x1,0x130(%rax)
  4130da:	01 00 00 00 
  4130de:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4130e2:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  4130e9:	c6 00 01             	movb   $0x1,(%rax)
  4130ec:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4130f0:	8b 48 08             	mov    0x8(%rax),%ecx
  4130f3:	83 c1 01             	add    $0x1,%ecx
  4130f6:	89 48 08             	mov    %ecx,0x8(%rax)
  4130f9:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  4130fd:	e8 4e 44 ff ff       	callq  407550 <mbedtls_ssl_write_handshake_msg>
  413102:	89 45 ec             	mov    %eax,-0x14(%rbp)
  413105:	83 f8 00             	cmp    $0x0,%eax
  413108:	74 08                	je     413112 <mbedtls_ssl_handshake_step+0x69b2>
  41310a:	8b 45 ec             	mov    -0x14(%rbp),%eax
  41310d:	89 45 fc             	mov    %eax,-0x4(%rbp)
  413110:	eb 07                	jmp    413119 <mbedtls_ssl_handshake_step+0x69b9>
  413112:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  413119:	8b 45 fc             	mov    -0x4(%rbp),%eax
  41311c:	89 85 24 f9 ff ff    	mov    %eax,-0x6dc(%rbp)
  413122:	eb 3e                	jmp    413162 <mbedtls_ssl_handshake_step+0x6a02>
  413124:	48 8b bd 28 f9 ff ff 	mov    -0x6d8(%rbp),%rdi
  41312b:	e8 c0 84 ff ff       	callq  40b5f0 <mbedtls_ssl_write_finished>
  413130:	89 85 24 f9 ff ff    	mov    %eax,-0x6dc(%rbp)
  413136:	eb 2a                	jmp    413162 <mbedtls_ssl_handshake_step+0x6a02>
  413138:	48 8b 85 28 f9 ff ff 	mov    -0x6d8(%rbp),%rax
  41313f:	c7 40 08 0f 00 00 00 	movl   $0xf,0x8(%rax)
  413146:	eb 1a                	jmp    413162 <mbedtls_ssl_handshake_step+0x6a02>
  413148:	48 8b bd 28 f9 ff ff 	mov    -0x6d8(%rbp),%rdi
  41314f:	e8 0c 80 ff ff       	callq  40b160 <mbedtls_ssl_handshake_wrapup>
  413154:	eb 0c                	jmp    413162 <mbedtls_ssl_handshake_step+0x6a02>
  413156:	c7 85 34 f9 ff ff 00 	movl   $0xffff8f00,-0x6cc(%rbp)
  41315d:	8f ff ff 
  413160:	eb 0c                	jmp    41316e <mbedtls_ssl_handshake_step+0x6a0e>
  413162:	8b 85 24 f9 ff ff    	mov    -0x6dc(%rbp),%eax
  413168:	89 85 34 f9 ff ff    	mov    %eax,-0x6cc(%rbp)
  41316e:	8b 85 34 f9 ff ff    	mov    -0x6cc(%rbp),%eax
  413174:	89 85 64 f2 ff ff    	mov    %eax,-0xd9c(%rbp)
  41317a:	8b 85 64 f2 ff ff    	mov    -0xd9c(%rbp),%eax
  413180:	89 85 70 f2 ff ff    	mov    %eax,-0xd90(%rbp)
  413186:	8b 85 70 f2 ff ff    	mov    -0xd90(%rbp),%eax
  41318c:	89 85 94 f1 ff ff    	mov    %eax,-0xe6c(%rbp)
  413192:	e8 bf 27 03 00       	callq  445956 <writeback_cache>
  413197:	8b 85 94 f1 ff ff    	mov    -0xe6c(%rbp),%eax
  41319d:	48 81 c4 90 0e 00 00 	add    $0xe90,%rsp
  4131a4:	5d                   	pop    %rbp
  4131a5:	c3                   	retq   
  4131a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4131ad:	00 00 00 

00000000004131b0 <mbedtls_ssl_ciphersuite_from_string>:
  4131b0:	55                   	push   %rbp
  4131b1:	48 89 e5             	mov    %rsp,%rbp
  4131b4:	48 83 ec 40          	sub    $0x40,%rsp
  4131b8:	31 c0                	xor    %eax,%eax
  4131ba:	89 c1                	mov    %eax,%ecx
  4131bc:	48 ba 70 90 44 00 00 	movabs $0x449070,%rdx
  4131c3:	00 00 00 
  4131c6:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  4131ca:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  4131ce:	48 3b 4d f0          	cmp    -0x10(%rbp),%rcx
  4131d2:	75 0a                	jne    4131de <mbedtls_ssl_ciphersuite_from_string+0x2e>
  4131d4:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  4131db:	00 
  4131dc:	eb 6f                	jmp    41324d <mbedtls_ssl_ciphersuite_from_string+0x9d>
  4131de:	eb 00                	jmp    4131e0 <mbedtls_ssl_ciphersuite_from_string+0x30>
  4131e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4131e4:	83 38 00             	cmpl   $0x0,(%rax)
  4131e7:	74 5c                	je     413245 <mbedtls_ssl_ciphersuite_from_string+0x95>
  4131e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4131ed:	48 8b 40 08          	mov    0x8(%rax),%rax
  4131f1:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  4131f5:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  4131f9:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
  4131fd:	e8 54 27 03 00       	callq  445956 <writeback_cache>
  413202:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  413206:	e8 76 31 03 00       	callq  446381 <decryptStringBeforeLibCall>
  41320b:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  41320f:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  413213:	e8 d8 df fe ff       	callq  4011f0 <strcmp@plt>
  413218:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  41321c:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  41321f:	e8 85 30 03 00       	callq  4462a9 <encryptStringAfterLibCall>
  413224:	31 c0                	xor    %eax,%eax
  413226:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
  413229:	39 c8                	cmp    %ecx,%eax
  41322b:	75 0a                	jne    413237 <mbedtls_ssl_ciphersuite_from_string+0x87>
  41322d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  413231:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  413235:	eb 16                	jmp    41324d <mbedtls_ssl_ciphersuite_from_string+0x9d>
  413237:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41323b:	48 83 c0 30          	add    $0x30,%rax
  41323f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  413243:	eb 9b                	jmp    4131e0 <mbedtls_ssl_ciphersuite_from_string+0x30>
  413245:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  41324c:	00 
  41324d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  413251:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  413255:	e8 fc 26 03 00       	callq  445956 <writeback_cache>
  41325a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41325e:	48 83 c4 40          	add    $0x40,%rsp
  413262:	5d                   	pop    %rbp
  413263:	c3                   	retq   
  413264:	66 66 66 2e 0f 1f 84 	data16 data16 nopw %cs:0x0(%rax,%rax,1)
  41326b:	00 00 00 00 00 

0000000000413270 <mbedtls_x509_crt_parse_der>:
  413270:	55                   	push   %rbp
  413271:	48 89 e5             	mov    %rsp,%rbp
  413274:	48 81 ec a0 07 00 00 	sub    $0x7a0,%rsp
  41327b:	48 89 bd d8 f8 ff ff 	mov    %rdi,-0x728(%rbp)
  413282:	48 89 b5 d0 f8 ff ff 	mov    %rsi,-0x730(%rbp)
  413289:	48 89 95 c8 f8 ff ff 	mov    %rdx,-0x738(%rbp)
  413290:	48 8b 95 d8 f8 ff ff 	mov    -0x728(%rbp),%rdx
  413297:	48 89 95 b8 f8 ff ff 	mov    %rdx,-0x748(%rbp)
  41329e:	48 c7 85 b0 f8 ff ff 	movq   $0x0,-0x750(%rbp)
  4132a5:	00 00 00 00 
  4132a9:	48 83 bd b8 f8 ff ff 	cmpq   $0x0,-0x748(%rbp)
  4132b0:	00 
  4132b1:	74 0a                	je     4132bd <mbedtls_x509_crt_parse_der+0x4d>
  4132b3:	48 83 bd d0 f8 ff ff 	cmpq   $0x0,-0x730(%rbp)
  4132ba:	00 
  4132bb:	75 0f                	jne    4132cc <mbedtls_x509_crt_parse_der+0x5c>
  4132bd:	c7 85 e4 f8 ff ff 00 	movl   $0xffffd800,-0x71c(%rbp)
  4132c4:	d8 ff ff 
  4132c7:	e9 4e 2c 00 00       	jmpq   415f1a <mbedtls_x509_crt_parse_der+0x2caa>
  4132cc:	eb 00                	jmp    4132ce <mbedtls_x509_crt_parse_der+0x5e>
  4132ce:	31 c0                	xor    %eax,%eax
  4132d0:	88 c1                	mov    %al,%cl
  4132d2:	48 8b 95 b8 f8 ff ff 	mov    -0x748(%rbp),%rdx
  4132d9:	83 7a 30 00          	cmpl   $0x0,0x30(%rdx)
  4132dd:	88 8d af f8 ff ff    	mov    %cl,-0x751(%rbp)
  4132e3:	74 18                	je     4132fd <mbedtls_x509_crt_parse_der+0x8d>
  4132e5:	48 8b 85 b8 f8 ff ff 	mov    -0x748(%rbp),%rax
  4132ec:	48 83 b8 20 02 00 00 	cmpq   $0x0,0x220(%rax)
  4132f3:	00 
  4132f4:	0f 95 c1             	setne  %cl
  4132f7:	88 8d af f8 ff ff    	mov    %cl,-0x751(%rbp)
  4132fd:	8a 85 af f8 ff ff    	mov    -0x751(%rbp),%al
  413303:	a8 01                	test   $0x1,%al
  413305:	75 02                	jne    413309 <mbedtls_x509_crt_parse_der+0x99>
  413307:	eb 25                	jmp    41332e <mbedtls_x509_crt_parse_der+0xbe>
  413309:	48 8b 85 b8 f8 ff ff 	mov    -0x748(%rbp),%rax
  413310:	48 89 85 b0 f8 ff ff 	mov    %rax,-0x750(%rbp)
  413317:	48 8b 85 b8 f8 ff ff 	mov    -0x748(%rbp),%rax
  41331e:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
  413325:	48 89 85 b8 f8 ff ff 	mov    %rax,-0x748(%rbp)
  41332c:	eb a0                	jmp    4132ce <mbedtls_x509_crt_parse_der+0x5e>
  41332e:	48 8b 85 b8 f8 ff ff 	mov    -0x748(%rbp),%rax
  413335:	83 78 30 00          	cmpl   $0x0,0x30(%rax)
  413339:	0f 84 a6 00 00 00    	je     4133e5 <mbedtls_x509_crt_parse_der+0x175>
  41333f:	48 8b 85 b8 f8 ff ff 	mov    -0x748(%rbp),%rax
  413346:	48 83 b8 20 02 00 00 	cmpq   $0x0,0x220(%rax)
  41334d:	00 
  41334e:	0f 85 91 00 00 00    	jne    4133e5 <mbedtls_x509_crt_parse_der+0x175>
  413354:	b8 01 00 00 00       	mov    $0x1,%eax
  413359:	89 c7                	mov    %eax,%edi
  41335b:	b8 28 02 00 00       	mov    $0x228,%eax
  413360:	89 c6                	mov    %eax,%esi
  413362:	e8 83 34 03 00       	callq  4467ea <aes_calloc>
  413367:	48 8b b5 b8 f8 ff ff 	mov    -0x748(%rbp),%rsi
  41336e:	48 89 86 20 02 00 00 	mov    %rax,0x220(%rsi)
  413375:	48 8b 85 b8 f8 ff ff 	mov    -0x748(%rbp),%rax
  41337c:	48 83 b8 20 02 00 00 	cmpq   $0x0,0x220(%rax)
  413383:	00 
  413384:	75 0f                	jne    413395 <mbedtls_x509_crt_parse_der+0x125>
  413386:	c7 85 e4 f8 ff ff 80 	movl   $0xffffd780,-0x71c(%rbp)
  41338d:	d7 ff ff 
  413390:	e9 85 2b 00 00       	jmpq   415f1a <mbedtls_x509_crt_parse_der+0x2caa>
  413395:	31 f6                	xor    %esi,%esi
  413397:	b8 28 02 00 00       	mov    $0x228,%eax
  41339c:	89 c2                	mov    %eax,%edx
  41339e:	48 8b 8d b8 f8 ff ff 	mov    -0x748(%rbp),%rcx
  4133a5:	48 89 8d b0 f8 ff ff 	mov    %rcx,-0x750(%rbp)
  4133ac:	48 8b 8d b8 f8 ff ff 	mov    -0x748(%rbp),%rcx
  4133b3:	48 8b 89 20 02 00 00 	mov    0x220(%rcx),%rcx
  4133ba:	48 89 8d e8 f8 ff ff 	mov    %rcx,-0x718(%rbp)
  4133c1:	48 8b 8d e8 f8 ff ff 	mov    -0x718(%rbp),%rcx
  4133c8:	48 89 cf             	mov    %rcx,%rdi
  4133cb:	e8 50 dc fe ff       	callq  401020 <memset@plt>
  4133d0:	48 8b 8d b8 f8 ff ff 	mov    -0x748(%rbp),%rcx
  4133d7:	48 8b 89 20 02 00 00 	mov    0x220(%rcx),%rcx
  4133de:	48 89 8d b8 f8 ff ff 	mov    %rcx,-0x748(%rbp)
  4133e5:	31 c0                	xor    %eax,%eax
  4133e7:	b9 18 00 00 00       	mov    $0x18,%ecx
  4133ec:	89 ca                	mov    %ecx,%edx
  4133ee:	48 8b b5 b8 f8 ff ff 	mov    -0x748(%rbp),%rsi
  4133f5:	48 8b bd d0 f8 ff ff 	mov    -0x730(%rbp),%rdi
  4133fc:	4c 8b 85 c8 f8 ff ff 	mov    -0x738(%rbp),%r8
  413403:	48 89 b5 70 f9 ff ff 	mov    %rsi,-0x690(%rbp)
  41340a:	48 89 bd 68 f9 ff ff 	mov    %rdi,-0x698(%rbp)
  413411:	4c 89 85 60 f9 ff ff 	mov    %r8,-0x6a0(%rbp)
  413418:	48 8d b5 20 f9 ff ff 	lea    -0x6e0(%rbp),%rsi
  41341f:	48 89 f7             	mov    %rsi,%rdi
  413422:	89 c6                	mov    %eax,%esi
  413424:	48 89 95 a0 f8 ff ff 	mov    %rdx,-0x760(%rbp)
  41342b:	89 85 9c f8 ff ff    	mov    %eax,-0x764(%rbp)
  413431:	e8 ea db fe ff       	callq  401020 <memset@plt>
  413436:	48 8d 95 08 f9 ff ff 	lea    -0x6f8(%rbp),%rdx
  41343d:	48 89 d7             	mov    %rdx,%rdi
  413440:	8b b5 9c f8 ff ff    	mov    -0x764(%rbp),%esi
  413446:	48 8b 95 a0 f8 ff ff 	mov    -0x760(%rbp),%rdx
  41344d:	e8 ce db fe ff       	callq  401020 <memset@plt>
  413452:	48 8d 95 f0 f8 ff ff 	lea    -0x710(%rbp),%rdx
  413459:	48 89 d7             	mov    %rdx,%rdi
  41345c:	8b b5 9c f8 ff ff    	mov    -0x764(%rbp),%esi
  413462:	48 8b 95 a0 f8 ff ff 	mov    -0x760(%rbp),%rdx
  413469:	e8 b2 db fe ff       	callq  401020 <memset@plt>
  41346e:	48 83 bd 70 f9 ff ff 	cmpq   $0x0,-0x690(%rbp)
  413475:	00 
  413476:	74 0a                	je     413482 <mbedtls_x509_crt_parse_der+0x212>
  413478:	48 83 bd 68 f9 ff ff 	cmpq   $0x0,-0x698(%rbp)
  41347f:	00 
  413480:	75 0f                	jne    413491 <mbedtls_x509_crt_parse_der+0x221>
  413482:	c7 85 78 f9 ff ff 00 	movl   $0xffffd800,-0x688(%rbp)
  413489:	d8 ff ff 
  41348c:	e9 25 2a 00 00       	jmpq   415eb6 <mbedtls_x509_crt_parse_der+0x2c46>
  413491:	48 8b 85 68 f9 ff ff 	mov    -0x698(%rbp),%rax
  413498:	48 89 85 48 f9 ff ff 	mov    %rax,-0x6b8(%rbp)
  41349f:	48 8b 85 60 f9 ff ff 	mov    -0x6a0(%rbp),%rax
  4134a6:	48 89 85 50 f9 ff ff 	mov    %rax,-0x6b0(%rbp)
  4134ad:	48 8b 85 48 f9 ff ff 	mov    -0x6b8(%rbp),%rax
  4134b4:	48 03 85 50 f9 ff ff 	add    -0x6b0(%rbp),%rax
  4134bb:	48 89 85 40 f9 ff ff 	mov    %rax,-0x6c0(%rbp)
  4134c2:	48 8b 85 40 f9 ff ff 	mov    -0x6c0(%rbp),%rax
  4134c9:	48 8d 8d 48 f9 ff ff 	lea    -0x6b8(%rbp),%rcx
  4134d0:	48 89 8d 90 f9 ff ff 	mov    %rcx,-0x670(%rbp)
  4134d7:	48 89 85 88 f9 ff ff 	mov    %rax,-0x678(%rbp)
  4134de:	48 8d 85 50 f9 ff ff 	lea    -0x6b0(%rbp),%rax
  4134e5:	48 89 85 80 f9 ff ff 	mov    %rax,-0x680(%rbp)
  4134ec:	c7 85 7c f9 ff ff 30 	movl   $0x30,-0x684(%rbp)
  4134f3:	00 00 00 
  4134f6:	48 8b 85 88 f9 ff ff 	mov    -0x678(%rbp),%rax
  4134fd:	48 8b 8d 90 f9 ff ff 	mov    -0x670(%rbp),%rcx
  413504:	48 8b 09             	mov    (%rcx),%rcx
  413507:	48 29 c8             	sub    %rcx,%rax
  41350a:	48 83 f8 01          	cmp    $0x1,%rax
  41350e:	7d 0c                	jge    41351c <mbedtls_x509_crt_parse_der+0x2ac>
  413510:	c7 85 98 f9 ff ff a0 	movl   $0xffffffa0,-0x668(%rbp)
  413517:	ff ff ff 
  41351a:	eb 52                	jmp    41356e <mbedtls_x509_crt_parse_der+0x2fe>
  41351c:	48 8b 85 90 f9 ff ff 	mov    -0x670(%rbp),%rax
  413523:	48 8b 00             	mov    (%rax),%rax
  413526:	0f b6 08             	movzbl (%rax),%ecx
  413529:	3b 8d 7c f9 ff ff    	cmp    -0x684(%rbp),%ecx
  41352f:	74 0c                	je     41353d <mbedtls_x509_crt_parse_der+0x2cd>
  413531:	c7 85 98 f9 ff ff 9e 	movl   $0xffffff9e,-0x668(%rbp)
  413538:	ff ff ff 
  41353b:	eb 31                	jmp    41356e <mbedtls_x509_crt_parse_der+0x2fe>
  41353d:	48 8b 85 90 f9 ff ff 	mov    -0x670(%rbp),%rax
  413544:	48 8b 08             	mov    (%rax),%rcx
  413547:	48 83 c1 01          	add    $0x1,%rcx
  41354b:	48 89 08             	mov    %rcx,(%rax)
  41354e:	48 8b bd 90 f9 ff ff 	mov    -0x670(%rbp),%rdi
  413555:	48 8b b5 88 f9 ff ff 	mov    -0x678(%rbp),%rsi
  41355c:	48 8b 95 80 f9 ff ff 	mov    -0x680(%rbp),%rdx
  413563:	e8 68 6b 00 00       	callq  41a0d0 <mbedtls_asn1_get_len>
  413568:	89 85 98 f9 ff ff    	mov    %eax,-0x668(%rbp)
  41356e:	8b 85 98 f9 ff ff    	mov    -0x668(%rbp),%eax
  413574:	89 85 5c f9 ff ff    	mov    %eax,-0x6a4(%rbp)
  41357a:	83 f8 00             	cmp    $0x0,%eax
  41357d:	74 1b                	je     41359a <mbedtls_x509_crt_parse_der+0x32a>
  41357f:	48 8b bd 70 f9 ff ff 	mov    -0x690(%rbp),%rdi
  413586:	e8 e5 29 00 00       	callq  415f70 <mbedtls_x509_crt_free>
  41358b:	c7 85 78 f9 ff ff 80 	movl   $0xffffde80,-0x688(%rbp)
  413592:	de ff ff 
  413595:	e9 1c 29 00 00       	jmpq   415eb6 <mbedtls_x509_crt_parse_der+0x2c46>
  41359a:	48 8b 85 50 f9 ff ff 	mov    -0x6b0(%rbp),%rax
  4135a1:	48 8b 8d 40 f9 ff ff 	mov    -0x6c0(%rbp),%rcx
  4135a8:	48 8b 95 48 f9 ff ff 	mov    -0x6b8(%rbp),%rdx
  4135af:	48 29 d1             	sub    %rdx,%rcx
  4135b2:	48 39 c8             	cmp    %rcx,%rax
  4135b5:	76 1b                	jbe    4135d2 <mbedtls_x509_crt_parse_der+0x362>
  4135b7:	48 8b bd 70 f9 ff ff 	mov    -0x690(%rbp),%rdi
  4135be:	e8 ad 29 00 00       	callq  415f70 <mbedtls_x509_crt_free>
  4135c3:	c7 85 78 f9 ff ff 1a 	movl   $0xffffde1a,-0x688(%rbp)
  4135ca:	de ff ff 
  4135cd:	e9 e4 28 00 00       	jmpq   415eb6 <mbedtls_x509_crt_parse_der+0x2c46>
  4135d2:	b8 01 00 00 00       	mov    $0x1,%eax
  4135d7:	89 c7                	mov    %eax,%edi
  4135d9:	48 8b 8d 48 f9 ff ff 	mov    -0x6b8(%rbp),%rcx
  4135e0:	48 03 8d 50 f9 ff ff 	add    -0x6b0(%rbp),%rcx
  4135e7:	48 89 8d 38 f9 ff ff 	mov    %rcx,-0x6c8(%rbp)
  4135ee:	48 8b 8d 38 f9 ff ff 	mov    -0x6c8(%rbp),%rcx
  4135f5:	48 8b 95 68 f9 ff ff 	mov    -0x698(%rbp),%rdx
  4135fc:	48 29 d1             	sub    %rdx,%rcx
  4135ff:	48 8b 95 70 f9 ff ff 	mov    -0x690(%rbp),%rdx
  413606:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41360a:	48 8b 8d 70 f9 ff ff 	mov    -0x690(%rbp),%rcx
  413611:	48 8b 71 08          	mov    0x8(%rcx),%rsi
  413615:	e8 d0 31 03 00       	callq  4467ea <aes_calloc>
  41361a:	48 89 85 48 f9 ff ff 	mov    %rax,-0x6b8(%rbp)
  413621:	48 8b 8d 70 f9 ff ff 	mov    -0x690(%rbp),%rcx
  413628:	48 89 41 10          	mov    %rax,0x10(%rcx)
  41362c:	48 83 bd 48 f9 ff ff 	cmpq   $0x0,-0x6b8(%rbp)
  413633:	00 
  413634:	75 0f                	jne    413645 <mbedtls_x509_crt_parse_der+0x3d5>
  413636:	c7 85 78 f9 ff ff 80 	movl   $0xffffd780,-0x688(%rbp)
  41363d:	d7 ff ff 
  413640:	e9 71 28 00 00       	jmpq   415eb6 <mbedtls_x509_crt_parse_der+0x2c46>
  413645:	48 8b bd 48 f9 ff ff 	mov    -0x6b8(%rbp),%rdi
  41364c:	48 8b b5 68 f9 ff ff 	mov    -0x698(%rbp),%rsi
  413653:	48 8b 85 70 f9 ff ff 	mov    -0x690(%rbp),%rax
  41365a:	48 8b 50 08          	mov    0x8(%rax),%rdx
  41365e:	e8 0d db fe ff       	callq  401170 <memcpy@plt>
  413663:	48 8b 85 70 f9 ff ff 	mov    -0x690(%rbp),%rax
  41366a:	48 8b 40 08          	mov    0x8(%rax),%rax
  41366e:	48 2b 85 50 f9 ff ff 	sub    -0x6b0(%rbp),%rax
  413675:	48 03 85 48 f9 ff ff 	add    -0x6b8(%rbp),%rax
  41367c:	48 89 85 48 f9 ff ff 	mov    %rax,-0x6b8(%rbp)
  413683:	48 8b 85 48 f9 ff ff 	mov    -0x6b8(%rbp),%rax
  41368a:	48 03 85 50 f9 ff ff 	add    -0x6b0(%rbp),%rax
  413691:	48 89 85 38 f9 ff ff 	mov    %rax,-0x6c8(%rbp)
  413698:	48 89 85 40 f9 ff ff 	mov    %rax,-0x6c0(%rbp)
  41369f:	48 8b 85 48 f9 ff ff 	mov    -0x6b8(%rbp),%rax
  4136a6:	48 8b 95 70 f9 ff ff 	mov    -0x690(%rbp),%rdx
  4136ad:	48 89 42 28          	mov    %rax,0x28(%rdx)
  4136b1:	48 8b 85 40 f9 ff ff 	mov    -0x6c0(%rbp),%rax
  4136b8:	48 8d 95 48 f9 ff ff 	lea    -0x6b8(%rbp),%rdx
  4136bf:	48 89 95 b0 f9 ff ff 	mov    %rdx,-0x650(%rbp)
  4136c6:	48 89 85 a8 f9 ff ff 	mov    %rax,-0x658(%rbp)
  4136cd:	48 8d 85 50 f9 ff ff 	lea    -0x6b0(%rbp),%rax
  4136d4:	48 89 85 a0 f9 ff ff 	mov    %rax,-0x660(%rbp)
  4136db:	c7 85 9c f9 ff ff 30 	movl   $0x30,-0x664(%rbp)
  4136e2:	00 00 00 
  4136e5:	48 8b 85 a8 f9 ff ff 	mov    -0x658(%rbp),%rax
  4136ec:	48 8b 95 b0 f9 ff ff 	mov    -0x650(%rbp),%rdx
  4136f3:	48 8b 12             	mov    (%rdx),%rdx
  4136f6:	48 29 d0             	sub    %rdx,%rax
  4136f9:	48 83 f8 01          	cmp    $0x1,%rax
  4136fd:	7d 0c                	jge    41370b <mbedtls_x509_crt_parse_der+0x49b>
  4136ff:	c7 85 bc f9 ff ff a0 	movl   $0xffffffa0,-0x644(%rbp)
  413706:	ff ff ff 
  413709:	eb 52                	jmp    41375d <mbedtls_x509_crt_parse_der+0x4ed>
  41370b:	48 8b 85 b0 f9 ff ff 	mov    -0x650(%rbp),%rax
  413712:	48 8b 00             	mov    (%rax),%rax
  413715:	0f b6 08             	movzbl (%rax),%ecx
  413718:	3b 8d 9c f9 ff ff    	cmp    -0x664(%rbp),%ecx
  41371e:	74 0c                	je     41372c <mbedtls_x509_crt_parse_der+0x4bc>
  413720:	c7 85 bc f9 ff ff 9e 	movl   $0xffffff9e,-0x644(%rbp)
  413727:	ff ff ff 
  41372a:	eb 31                	jmp    41375d <mbedtls_x509_crt_parse_der+0x4ed>
  41372c:	48 8b 85 b0 f9 ff ff 	mov    -0x650(%rbp),%rax
  413733:	48 8b 08             	mov    (%rax),%rcx
  413736:	48 83 c1 01          	add    $0x1,%rcx
  41373a:	48 89 08             	mov    %rcx,(%rax)
  41373d:	48 8b bd b0 f9 ff ff 	mov    -0x650(%rbp),%rdi
  413744:	48 8b b5 a8 f9 ff ff 	mov    -0x658(%rbp),%rsi
  41374b:	48 8b 95 a0 f9 ff ff 	mov    -0x660(%rbp),%rdx
  413752:	e8 79 69 00 00       	callq  41a0d0 <mbedtls_asn1_get_len>
  413757:	89 85 bc f9 ff ff    	mov    %eax,-0x644(%rbp)
  41375d:	8b 85 bc f9 ff ff    	mov    -0x644(%rbp),%eax
  413763:	89 85 5c f9 ff ff    	mov    %eax,-0x6a4(%rbp)
  413769:	83 f8 00             	cmp    $0x0,%eax
  41376c:	74 22                	je     413790 <mbedtls_x509_crt_parse_der+0x520>
  41376e:	48 8b bd 70 f9 ff ff 	mov    -0x690(%rbp),%rdi
  413775:	e8 f6 27 00 00       	callq  415f70 <mbedtls_x509_crt_free>
  41377a:	8b 85 5c f9 ff ff    	mov    -0x6a4(%rbp),%eax
  413780:	05 80 de ff ff       	add    $0xffffde80,%eax
  413785:	89 85 78 f9 ff ff    	mov    %eax,-0x688(%rbp)
  41378b:	e9 26 27 00 00       	jmpq   415eb6 <mbedtls_x509_crt_parse_der+0x2c46>
  413790:	48 8b 85 48 f9 ff ff 	mov    -0x6b8(%rbp),%rax
  413797:	48 03 85 50 f9 ff ff 	add    -0x6b0(%rbp),%rax
  41379e:	48 89 85 40 f9 ff ff 	mov    %rax,-0x6c0(%rbp)
  4137a5:	48 8b 85 40 f9 ff ff 	mov    -0x6c0(%rbp),%rax
  4137ac:	48 8b 8d 70 f9 ff ff 	mov    -0x690(%rbp),%rcx
  4137b3:	48 8b 49 28          	mov    0x28(%rcx),%rcx
  4137b7:	48 29 c8             	sub    %rcx,%rax
  4137ba:	48 8b 8d 70 f9 ff ff 	mov    -0x690(%rbp),%rcx
  4137c1:	48 89 41 20          	mov    %rax,0x20(%rcx)
  4137c5:	48 8b 85 40 f9 ff ff 	mov    -0x6c0(%rbp),%rax
  4137cc:	48 8b 8d 70 f9 ff ff 	mov    -0x690(%rbp),%rcx
  4137d3:	48 83 c1 30          	add    $0x30,%rcx
  4137d7:	48 8d 95 48 f9 ff ff 	lea    -0x6b8(%rbp),%rdx
  4137de:	48 89 95 e0 f9 ff ff 	mov    %rdx,-0x620(%rbp)
  4137e5:	48 89 85 d8 f9 ff ff 	mov    %rax,-0x628(%rbp)
  4137ec:	48 89 8d d0 f9 ff ff 	mov    %rcx,-0x630(%rbp)
  4137f3:	48 8b 85 e0 f9 ff ff 	mov    -0x620(%rbp),%rax
  4137fa:	48 8b 8d d8 f9 ff ff 	mov    -0x628(%rbp),%rcx
  413801:	48 89 85 00 fa ff ff 	mov    %rax,-0x600(%rbp)
  413808:	48 89 8d f8 f9 ff ff 	mov    %rcx,-0x608(%rbp)
  41380f:	48 8d 85 c0 f9 ff ff 	lea    -0x640(%rbp),%rax
  413816:	48 89 85 f0 f9 ff ff 	mov    %rax,-0x610(%rbp)
  41381d:	c7 85 ec f9 ff ff a0 	movl   $0xa0,-0x614(%rbp)
  413824:	00 00 00 
  413827:	48 8b 85 f8 f9 ff ff 	mov    -0x608(%rbp),%rax
  41382e:	48 8b 8d 00 fa ff ff 	mov    -0x600(%rbp),%rcx
  413835:	48 8b 09             	mov    (%rcx),%rcx
  413838:	48 29 c8             	sub    %rcx,%rax
  41383b:	48 83 f8 01          	cmp    $0x1,%rax
  41383f:	7d 0c                	jge    41384d <mbedtls_x509_crt_parse_der+0x5dd>
  413841:	c7 85 08 fa ff ff a0 	movl   $0xffffffa0,-0x5f8(%rbp)
  413848:	ff ff ff 
  41384b:	eb 52                	jmp    41389f <mbedtls_x509_crt_parse_der+0x62f>
  41384d:	48 8b 85 00 fa ff ff 	mov    -0x600(%rbp),%rax
  413854:	48 8b 00             	mov    (%rax),%rax
  413857:	0f b6 08             	movzbl (%rax),%ecx
  41385a:	3b 8d ec f9 ff ff    	cmp    -0x614(%rbp),%ecx
  413860:	74 0c                	je     41386e <mbedtls_x509_crt_parse_der+0x5fe>
  413862:	c7 85 08 fa ff ff 9e 	movl   $0xffffff9e,-0x5f8(%rbp)
  413869:	ff ff ff 
  41386c:	eb 31                	jmp    41389f <mbedtls_x509_crt_parse_der+0x62f>
  41386e:	48 8b 85 00 fa ff ff 	mov    -0x600(%rbp),%rax
  413875:	48 8b 08             	mov    (%rax),%rcx
  413878:	48 83 c1 01          	add    $0x1,%rcx
  41387c:	48 89 08             	mov    %rcx,(%rax)
  41387f:	48 8b bd 00 fa ff ff 	mov    -0x600(%rbp),%rdi
  413886:	48 8b b5 f8 f9 ff ff 	mov    -0x608(%rbp),%rsi
  41388d:	48 8b 95 f0 f9 ff ff 	mov    -0x610(%rbp),%rdx
  413894:	e8 37 68 00 00       	callq  41a0d0 <mbedtls_asn1_get_len>
  413899:	89 85 08 fa ff ff    	mov    %eax,-0x5f8(%rbp)
  41389f:	8b 85 08 fa ff ff    	mov    -0x5f8(%rbp),%eax
  4138a5:	89 85 cc f9 ff ff    	mov    %eax,-0x634(%rbp)
  4138ab:	83 f8 00             	cmp    $0x0,%eax
  4138ae:	74 33                	je     4138e3 <mbedtls_x509_crt_parse_der+0x673>
  4138b0:	83 bd cc f9 ff ff 9e 	cmpl   $0xffffff9e,-0x634(%rbp)
  4138b7:	75 1c                	jne    4138d5 <mbedtls_x509_crt_parse_der+0x665>
  4138b9:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  4138c0:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  4138c6:	c7 85 e8 f9 ff ff 00 	movl   $0x0,-0x618(%rbp)
  4138cd:	00 00 00 
  4138d0:	e9 87 00 00 00       	jmpq   41395c <mbedtls_x509_crt_parse_der+0x6ec>
  4138d5:	8b 85 cc f9 ff ff    	mov    -0x634(%rbp),%eax
  4138db:	89 85 e8 f9 ff ff    	mov    %eax,-0x618(%rbp)
  4138e1:	eb 79                	jmp    41395c <mbedtls_x509_crt_parse_der+0x6ec>
  4138e3:	48 8b 85 e0 f9 ff ff 	mov    -0x620(%rbp),%rax
  4138ea:	48 8b 00             	mov    (%rax),%rax
  4138ed:	48 03 85 c0 f9 ff ff 	add    -0x640(%rbp),%rax
  4138f4:	48 89 85 d8 f9 ff ff 	mov    %rax,-0x628(%rbp)
  4138fb:	48 8b bd e0 f9 ff ff 	mov    -0x620(%rbp),%rdi
  413902:	48 8b b5 d8 f9 ff ff 	mov    -0x628(%rbp),%rsi
  413909:	48 8b 95 d0 f9 ff ff 	mov    -0x630(%rbp),%rdx
  413910:	e8 3b 6a 00 00       	callq  41a350 <mbedtls_asn1_get_int>
  413915:	89 85 cc f9 ff ff    	mov    %eax,-0x634(%rbp)
  41391b:	83 f8 00             	cmp    $0x0,%eax
  41391e:	74 13                	je     413933 <mbedtls_x509_crt_parse_der+0x6c3>
  413920:	8b 85 cc f9 ff ff    	mov    -0x634(%rbp),%eax
  413926:	05 00 de ff ff       	add    $0xffffde00,%eax
  41392b:	89 85 e8 f9 ff ff    	mov    %eax,-0x618(%rbp)
  413931:	eb 29                	jmp    41395c <mbedtls_x509_crt_parse_der+0x6ec>
  413933:	48 8b 85 e0 f9 ff ff 	mov    -0x620(%rbp),%rax
  41393a:	48 8b 00             	mov    (%rax),%rax
  41393d:	48 3b 85 d8 f9 ff ff 	cmp    -0x628(%rbp),%rax
  413944:	74 0c                	je     413952 <mbedtls_x509_crt_parse_der+0x6e2>
  413946:	c7 85 e8 f9 ff ff 9a 	movl   $0xffffdd9a,-0x618(%rbp)
  41394d:	dd ff ff 
  413950:	eb 0a                	jmp    41395c <mbedtls_x509_crt_parse_der+0x6ec>
  413952:	c7 85 e8 f9 ff ff 00 	movl   $0x0,-0x618(%rbp)
  413959:	00 00 00 
  41395c:	8b 85 e8 f9 ff ff    	mov    -0x618(%rbp),%eax
  413962:	89 85 5c f9 ff ff    	mov    %eax,-0x6a4(%rbp)
  413968:	83 f8 00             	cmp    $0x0,%eax
  41396b:	0f 85 ce 01 00 00    	jne    413b3f <mbedtls_x509_crt_parse_der+0x8cf>
  413971:	48 8b 85 40 f9 ff ff 	mov    -0x6c0(%rbp),%rax
  413978:	48 8b 8d 70 f9 ff ff 	mov    -0x690(%rbp),%rcx
  41397f:	48 83 c1 38          	add    $0x38,%rcx
  413983:	48 8d 95 48 f9 ff ff 	lea    -0x6b8(%rbp),%rdx
  41398a:	48 89 95 20 fa ff ff 	mov    %rdx,-0x5e0(%rbp)
  413991:	48 89 85 18 fa ff ff 	mov    %rax,-0x5e8(%rbp)
  413998:	48 89 8d 10 fa ff ff 	mov    %rcx,-0x5f0(%rbp)
  41399f:	48 8b 85 18 fa ff ff 	mov    -0x5e8(%rbp),%rax
  4139a6:	48 8b 8d 20 fa ff ff 	mov    -0x5e0(%rbp),%rcx
  4139ad:	48 8b 09             	mov    (%rcx),%rcx
  4139b0:	48 29 c8             	sub    %rcx,%rax
  4139b3:	48 83 f8 01          	cmp    $0x1,%rax
  4139b7:	7d 0f                	jge    4139c8 <mbedtls_x509_crt_parse_der+0x758>
  4139b9:	c7 85 28 fa ff ff 20 	movl   $0xffffdd20,-0x5d8(%rbp)
  4139c0:	dd ff ff 
  4139c3:	e9 cc 00 00 00       	jmpq   413a94 <mbedtls_x509_crt_parse_der+0x824>
  4139c8:	48 8b 85 20 fa ff ff 	mov    -0x5e0(%rbp),%rax
  4139cf:	48 8b 00             	mov    (%rax),%rax
  4139d2:	0f b6 08             	movzbl (%rax),%ecx
  4139d5:	81 f9 82 00 00 00    	cmp    $0x82,%ecx
  4139db:	74 21                	je     4139fe <mbedtls_x509_crt_parse_der+0x78e>
  4139dd:	48 8b 85 20 fa ff ff 	mov    -0x5e0(%rbp),%rax
  4139e4:	48 8b 00             	mov    (%rax),%rax
  4139e7:	0f b6 08             	movzbl (%rax),%ecx
  4139ea:	83 f9 02             	cmp    $0x2,%ecx
  4139ed:	74 0f                	je     4139fe <mbedtls_x509_crt_parse_der+0x78e>
  4139ef:	c7 85 28 fa ff ff 1e 	movl   $0xffffdd1e,-0x5d8(%rbp)
  4139f6:	dd ff ff 
  4139f9:	e9 96 00 00 00       	jmpq   413a94 <mbedtls_x509_crt_parse_der+0x824>
  4139fe:	48 8b 85 20 fa ff ff 	mov    -0x5e0(%rbp),%rax
  413a05:	48 8b 08             	mov    (%rax),%rcx
  413a08:	48 89 ca             	mov    %rcx,%rdx
  413a0b:	48 83 c2 01          	add    $0x1,%rdx
  413a0f:	48 89 10             	mov    %rdx,(%rax)
  413a12:	0f b6 31             	movzbl (%rcx),%esi
  413a15:	48 8b 85 10 fa ff ff 	mov    -0x5f0(%rbp),%rax
  413a1c:	89 30                	mov    %esi,(%rax)
  413a1e:	48 8b bd 20 fa ff ff 	mov    -0x5e0(%rbp),%rdi
  413a25:	48 8b b5 18 fa ff ff 	mov    -0x5e8(%rbp),%rsi
  413a2c:	48 8b 85 10 fa ff ff 	mov    -0x5f0(%rbp),%rax
  413a33:	48 83 c0 08          	add    $0x8,%rax
  413a37:	48 89 c2             	mov    %rax,%rdx
  413a3a:	e8 91 66 00 00       	callq  41a0d0 <mbedtls_asn1_get_len>
  413a3f:	89 85 0c fa ff ff    	mov    %eax,-0x5f4(%rbp)
  413a45:	83 f8 00             	cmp    $0x0,%eax
  413a48:	74 13                	je     413a5d <mbedtls_x509_crt_parse_der+0x7ed>
  413a4a:	8b 85 0c fa ff ff    	mov    -0x5f4(%rbp),%eax
  413a50:	05 80 dd ff ff       	add    $0xffffdd80,%eax
  413a55:	89 85 28 fa ff ff    	mov    %eax,-0x5d8(%rbp)
  413a5b:	eb 37                	jmp    413a94 <mbedtls_x509_crt_parse_der+0x824>
  413a5d:	48 8b 85 20 fa ff ff 	mov    -0x5e0(%rbp),%rax
  413a64:	48 8b 00             	mov    (%rax),%rax
  413a67:	48 8b 8d 10 fa ff ff 	mov    -0x5f0(%rbp),%rcx
  413a6e:	48 89 41 10          	mov    %rax,0x10(%rcx)
  413a72:	48 8b 85 10 fa ff ff 	mov    -0x5f0(%rbp),%rax
  413a79:	48 8b 40 08          	mov    0x8(%rax),%rax
  413a7d:	48 8b 8d 20 fa ff ff 	mov    -0x5e0(%rbp),%rcx
  413a84:	48 03 01             	add    (%rcx),%rax
  413a87:	48 89 01             	mov    %rax,(%rcx)
  413a8a:	c7 85 28 fa ff ff 00 	movl   $0x0,-0x5d8(%rbp)
  413a91:	00 00 00 
  413a94:	8b 85 28 fa ff ff    	mov    -0x5d8(%rbp),%eax
  413a9a:	89 85 5c f9 ff ff    	mov    %eax,-0x6a4(%rbp)
  413aa0:	83 f8 00             	cmp    $0x0,%eax
  413aa3:	0f 85 96 00 00 00    	jne    413b3f <mbedtls_x509_crt_parse_der+0x8cf>
  413aa9:	48 8b 85 40 f9 ff ff 	mov    -0x6c0(%rbp),%rax
  413ab0:	48 8b 8d 70 f9 ff ff 	mov    -0x690(%rbp),%rcx
  413ab7:	48 83 c1 50          	add    $0x50,%rcx
  413abb:	48 8d 95 48 f9 ff ff 	lea    -0x6b8(%rbp),%rdx
  413ac2:	48 89 95 48 fa ff ff 	mov    %rdx,-0x5b8(%rbp)
  413ac9:	48 89 85 40 fa ff ff 	mov    %rax,-0x5c0(%rbp)
  413ad0:	48 89 8d 38 fa ff ff 	mov    %rcx,-0x5c8(%rbp)
  413ad7:	48 8d 85 20 f9 ff ff 	lea    -0x6e0(%rbp),%rax
  413ade:	48 89 85 30 fa ff ff 	mov    %rax,-0x5d0(%rbp)
  413ae5:	48 8b bd 48 fa ff ff 	mov    -0x5b8(%rbp),%rdi
  413aec:	48 8b b5 40 fa ff ff 	mov    -0x5c0(%rbp),%rsi
  413af3:	48 8b 95 38 fa ff ff 	mov    -0x5c8(%rbp),%rdx
  413afa:	48 8b 8d 30 fa ff ff 	mov    -0x5d0(%rbp),%rcx
  413b01:	e8 ca 6a 00 00       	callq  41a5d0 <mbedtls_asn1_get_alg>
  413b06:	89 85 2c fa ff ff    	mov    %eax,-0x5d4(%rbp)
  413b0c:	83 f8 00             	cmp    $0x0,%eax
  413b0f:	74 13                	je     413b24 <mbedtls_x509_crt_parse_der+0x8b4>
  413b11:	8b 85 2c fa ff ff    	mov    -0x5d4(%rbp),%eax
  413b17:	05 00 dd ff ff       	add    $0xffffdd00,%eax
  413b1c:	89 85 50 fa ff ff    	mov    %eax,-0x5b0(%rbp)
  413b22:	eb 0a                	jmp    413b2e <mbedtls_x509_crt_parse_der+0x8be>
  413b24:	c7 85 50 fa ff ff 00 	movl   $0x0,-0x5b0(%rbp)
  413b2b:	00 00 00 
  413b2e:	8b 85 50 fa ff ff    	mov    -0x5b0(%rbp),%eax
  413b34:	89 85 5c f9 ff ff    	mov    %eax,-0x6a4(%rbp)
  413b3a:	83 f8 00             	cmp    $0x0,%eax
  413b3d:	74 1d                	je     413b5c <mbedtls_x509_crt_parse_der+0x8ec>
  413b3f:	48 8b bd 70 f9 ff ff 	mov    -0x690(%rbp),%rdi
  413b46:	e8 25 24 00 00       	callq  415f70 <mbedtls_x509_crt_free>
  413b4b:	8b 85 5c f9 ff ff    	mov    -0x6a4(%rbp),%eax
  413b51:	89 85 78 f9 ff ff    	mov    %eax,-0x688(%rbp)
  413b57:	e9 5a 23 00 00       	jmpq   415eb6 <mbedtls_x509_crt_parse_der+0x2c46>
  413b5c:	48 8b 85 70 f9 ff ff 	mov    -0x690(%rbp),%rax
  413b63:	83 78 30 00          	cmpl   $0x0,0x30(%rax)
  413b67:	7c 0d                	jl     413b76 <mbedtls_x509_crt_parse_der+0x906>
  413b69:	48 8b 85 70 f9 ff ff 	mov    -0x690(%rbp),%rax
  413b70:	83 78 30 02          	cmpl   $0x2,0x30(%rax)
  413b74:	7e 1b                	jle    413b91 <mbedtls_x509_crt_parse_der+0x921>
  413b76:	48 8b bd 70 f9 ff ff 	mov    -0x690(%rbp),%rdi
  413b7d:	e8 ee 23 00 00       	callq  415f70 <mbedtls_x509_crt_free>
  413b82:	c7 85 78 f9 ff ff 80 	movl   $0xffffda80,-0x688(%rbp)
  413b89:	da ff ff 
  413b8c:	e9 25 23 00 00       	jmpq   415eb6 <mbedtls_x509_crt_parse_der+0x2c46>
  413b91:	48 8b 85 70 f9 ff ff 	mov    -0x690(%rbp),%rax
  413b98:	8b 48 30             	mov    0x30(%rax),%ecx
  413b9b:	83 c1 01             	add    $0x1,%ecx
  413b9e:	89 48 30             	mov    %ecx,0x30(%rax)
  413ba1:	48 8b 85 70 f9 ff ff 	mov    -0x690(%rbp),%rax
  413ba8:	48 83 c0 50          	add    $0x50,%rax
  413bac:	48 8b 95 70 f9 ff ff 	mov    -0x690(%rbp),%rdx
  413bb3:	48 81 c2 10 02 00 00 	add    $0x210,%rdx
  413bba:	48 8b b5 70 f9 ff ff 	mov    -0x690(%rbp),%rsi
  413bc1:	48 81 c6 14 02 00 00 	add    $0x214,%rsi
  413bc8:	48 8b bd 70 f9 ff ff 	mov    -0x690(%rbp),%rdi
  413bcf:	48 81 c7 18 02 00 00 	add    $0x218,%rdi
  413bd6:	48 89 85 78 fa ff ff 	mov    %rax,-0x588(%rbp)
  413bdd:	48 8d 85 20 f9 ff ff 	lea    -0x6e0(%rbp),%rax
  413be4:	48 89 85 70 fa ff ff 	mov    %rax,-0x590(%rbp)
  413beb:	48 89 95 68 fa ff ff 	mov    %rdx,-0x598(%rbp)
  413bf2:	48 89 b5 60 fa ff ff 	mov    %rsi,-0x5a0(%rbp)
  413bf9:	48 89 bd 58 fa ff ff 	mov    %rdi,-0x5a8(%rbp)
  413c00:	48 8b 85 58 fa ff ff 	mov    -0x5a8(%rbp),%rax
  413c07:	48 83 38 00          	cmpq   $0x0,(%rax)
  413c0b:	74 0f                	je     413c1c <mbedtls_x509_crt_parse_der+0x9ac>
  413c0d:	c7 85 84 fa ff ff 00 	movl   $0xffffd800,-0x57c(%rbp)
  413c14:	d8 ff ff 
  413c17:	e9 c0 01 00 00       	jmpq   413ddc <mbedtls_x509_crt_parse_der+0xb6c>
  413c1c:	48 b8 c0 df 44 00 00 	movabs $0x44dfc0,%rax
  413c23:	00 00 00 
  413c26:	48 8b 8d 78 fa ff ff 	mov    -0x588(%rbp),%rcx
  413c2d:	48 8b 95 68 fa ff ff 	mov    -0x598(%rbp),%rdx
  413c34:	48 8b b5 60 fa ff ff 	mov    -0x5a0(%rbp),%rsi
  413c3b:	48 89 8d a0 fa ff ff 	mov    %rcx,-0x560(%rbp)
  413c42:	48 89 95 98 fa ff ff 	mov    %rdx,-0x568(%rbp)
  413c49:	48 89 b5 90 fa ff ff 	mov    %rsi,-0x570(%rbp)
  413c50:	48 8b 8d a0 fa ff ff 	mov    -0x560(%rbp),%rcx
  413c57:	48 89 8d c0 fa ff ff 	mov    %rcx,-0x540(%rbp)
  413c5e:	48 89 85 b8 fa ff ff 	mov    %rax,-0x548(%rbp)
  413c65:	48 8b 85 b8 fa ff ff 	mov    -0x548(%rbp),%rax
  413c6c:	48 89 85 b0 fa ff ff 	mov    %rax,-0x550(%rbp)
  413c73:	48 83 bd b8 fa ff ff 	cmpq   $0x0,-0x548(%rbp)
  413c7a:	00 
  413c7b:	74 0a                	je     413c87 <mbedtls_x509_crt_parse_der+0xa17>
  413c7d:	48 83 bd c0 fa ff ff 	cmpq   $0x0,-0x540(%rbp)
  413c84:	00 
  413c85:	75 10                	jne    413c97 <mbedtls_x509_crt_parse_der+0xa27>
  413c87:	48 c7 85 c8 fa ff ff 	movq   $0x0,-0x538(%rbp)
  413c8e:	00 00 00 00 
  413c92:	e9 91 00 00 00       	jmpq   413d28 <mbedtls_x509_crt_parse_der+0xab8>
  413c97:	eb 00                	jmp    413c99 <mbedtls_x509_crt_parse_der+0xa29>
  413c99:	48 8b 85 b0 fa ff ff 	mov    -0x550(%rbp),%rax
  413ca0:	48 83 38 00          	cmpq   $0x0,(%rax)
  413ca4:	74 77                	je     413d1d <mbedtls_x509_crt_parse_der+0xaad>
  413ca6:	48 8b 85 b0 fa ff ff 	mov    -0x550(%rbp),%rax
  413cad:	48 8b 40 08          	mov    0x8(%rax),%rax
  413cb1:	48 8b 8d c0 fa ff ff 	mov    -0x540(%rbp),%rcx
  413cb8:	48 3b 41 08          	cmp    0x8(%rcx),%rax
  413cbc:	75 3a                	jne    413cf8 <mbedtls_x509_crt_parse_der+0xa88>
  413cbe:	48 8b 85 b0 fa ff ff 	mov    -0x550(%rbp),%rax
  413cc5:	48 8b 38             	mov    (%rax),%rdi
  413cc8:	48 8b 85 c0 fa ff ff 	mov    -0x540(%rbp),%rax
  413ccf:	48 8b 70 10          	mov    0x10(%rax),%rsi
  413cd3:	48 8b 85 c0 fa ff ff 	mov    -0x540(%rbp),%rax
  413cda:	48 8b 50 08          	mov    0x8(%rax),%rdx
  413cde:	e8 ed d4 fe ff       	callq  4011d0 <memcmp@plt>
  413ce3:	83 f8 00             	cmp    $0x0,%eax
  413ce6:	75 10                	jne    413cf8 <mbedtls_x509_crt_parse_der+0xa88>
  413ce8:	48 8b 85 b8 fa ff ff 	mov    -0x548(%rbp),%rax
  413cef:	48 89 85 c8 fa ff ff 	mov    %rax,-0x538(%rbp)
  413cf6:	eb 30                	jmp    413d28 <mbedtls_x509_crt_parse_der+0xab8>
  413cf8:	48 8b 85 b8 fa ff ff 	mov    -0x548(%rbp),%rax
  413cff:	48 83 c0 28          	add    $0x28,%rax
  413d03:	48 89 85 b8 fa ff ff 	mov    %rax,-0x548(%rbp)
  413d0a:	48 8b 85 b8 fa ff ff 	mov    -0x548(%rbp),%rax
  413d11:	48 89 85 b0 fa ff ff 	mov    %rax,-0x550(%rbp)
  413d18:	e9 7c ff ff ff       	jmpq   413c99 <mbedtls_x509_crt_parse_der+0xa29>
  413d1d:	48 c7 85 c8 fa ff ff 	movq   $0x0,-0x538(%rbp)
  413d24:	00 00 00 00 
  413d28:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
  413d2f:	48 89 85 88 fa ff ff 	mov    %rax,-0x578(%rbp)
  413d36:	48 83 bd 88 fa ff ff 	cmpq   $0x0,-0x578(%rbp)
  413d3d:	00 
  413d3e:	75 0c                	jne    413d4c <mbedtls_x509_crt_parse_der+0xadc>
  413d40:	c7 85 ac fa ff ff d2 	movl   $0xffffffd2,-0x554(%rbp)
  413d47:	ff ff ff 
  413d4a:	eb 30                	jmp    413d7c <mbedtls_x509_crt_parse_der+0xb0c>
  413d4c:	48 8b 85 88 fa ff ff 	mov    -0x578(%rbp),%rax
  413d53:	8b 48 20             	mov    0x20(%rax),%ecx
  413d56:	48 8b 85 98 fa ff ff 	mov    -0x568(%rbp),%rax
  413d5d:	89 08                	mov    %ecx,(%rax)
  413d5f:	48 8b 85 88 fa ff ff 	mov    -0x578(%rbp),%rax
  413d66:	8b 48 24             	mov    0x24(%rax),%ecx
  413d69:	48 8b 85 90 fa ff ff 	mov    -0x570(%rbp),%rax
  413d70:	89 08                	mov    %ecx,(%rax)
  413d72:	c7 85 ac fa ff ff 00 	movl   $0x0,-0x554(%rbp)
  413d79:	00 00 00 
  413d7c:	8b 85 ac fa ff ff    	mov    -0x554(%rbp),%eax
  413d82:	89 85 54 fa ff ff    	mov    %eax,-0x5ac(%rbp)
  413d88:	83 f8 00             	cmp    $0x0,%eax
  413d8b:	74 13                	je     413da0 <mbedtls_x509_crt_parse_der+0xb30>
  413d8d:	8b 85 54 fa ff ff    	mov    -0x5ac(%rbp),%eax
  413d93:	05 00 da ff ff       	add    $0xffffda00,%eax
  413d98:	89 85 84 fa ff ff    	mov    %eax,-0x57c(%rbp)
  413d9e:	eb 3c                	jmp    413ddc <mbedtls_x509_crt_parse_der+0xb6c>
  413da0:	48 8b 85 70 fa ff ff 	mov    -0x590(%rbp),%rax
  413da7:	83 38 05             	cmpl   $0x5,(%rax)
  413daa:	74 0c                	je     413db8 <mbedtls_x509_crt_parse_der+0xb48>
  413dac:	48 8b 85 70 fa ff ff 	mov    -0x590(%rbp),%rax
  413db3:	83 38 00             	cmpl   $0x0,(%rax)
  413db6:	75 0e                	jne    413dc6 <mbedtls_x509_crt_parse_der+0xb56>
  413db8:	48 8b 85 70 fa ff ff 	mov    -0x590(%rbp),%rax
  413dbf:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
  413dc4:	74 0c                	je     413dd2 <mbedtls_x509_crt_parse_der+0xb62>
  413dc6:	c7 85 84 fa ff ff 00 	movl   $0xffffdd00,-0x57c(%rbp)
  413dcd:	dd ff ff 
  413dd0:	eb 0a                	jmp    413ddc <mbedtls_x509_crt_parse_der+0xb6c>
  413dd2:	c7 85 84 fa ff ff 00 	movl   $0x0,-0x57c(%rbp)
  413dd9:	00 00 00 
  413ddc:	8b 85 84 fa ff ff    	mov    -0x57c(%rbp),%eax
  413de2:	89 85 5c f9 ff ff    	mov    %eax,-0x6a4(%rbp)
  413de8:	83 f8 00             	cmp    $0x0,%eax
  413deb:	74 1d                	je     413e0a <mbedtls_x509_crt_parse_der+0xb9a>
  413ded:	48 8b bd 70 f9 ff ff 	mov    -0x690(%rbp),%rdi
  413df4:	e8 77 21 00 00       	callq  415f70 <mbedtls_x509_crt_free>
  413df9:	8b 85 5c f9 ff ff    	mov    -0x6a4(%rbp),%eax
  413dff:	89 85 78 f9 ff ff    	mov    %eax,-0x688(%rbp)
  413e05:	e9 ac 20 00 00       	jmpq   415eb6 <mbedtls_x509_crt_parse_der+0x2c46>
  413e0a:	48 8b 85 48 f9 ff ff 	mov    -0x6b8(%rbp),%rax
  413e11:	48 8b 8d 70 f9 ff ff 	mov    -0x690(%rbp),%rcx
  413e18:	48 89 41 78          	mov    %rax,0x78(%rcx)
  413e1c:	48 8b 85 40 f9 ff ff 	mov    -0x6c0(%rbp),%rax
  413e23:	48 8d 8d 48 f9 ff ff 	lea    -0x6b8(%rbp),%rcx
  413e2a:	48 89 8d e8 fa ff ff 	mov    %rcx,-0x518(%rbp)
  413e31:	48 89 85 e0 fa ff ff 	mov    %rax,-0x520(%rbp)
  413e38:	48 8d 85 50 f9 ff ff 	lea    -0x6b0(%rbp),%rax
  413e3f:	48 89 85 d8 fa ff ff 	mov    %rax,-0x528(%rbp)
  413e46:	c7 85 d4 fa ff ff 30 	movl   $0x30,-0x52c(%rbp)
  413e4d:	00 00 00 
  413e50:	48 8b 85 e0 fa ff ff 	mov    -0x520(%rbp),%rax
  413e57:	48 8b 8d e8 fa ff ff 	mov    -0x518(%rbp),%rcx
  413e5e:	48 8b 09             	mov    (%rcx),%rcx
  413e61:	48 29 c8             	sub    %rcx,%rax
  413e64:	48 83 f8 01          	cmp    $0x1,%rax
  413e68:	7d 0c                	jge    413e76 <mbedtls_x509_crt_parse_der+0xc06>
  413e6a:	c7 85 f4 fa ff ff a0 	movl   $0xffffffa0,-0x50c(%rbp)
  413e71:	ff ff ff 
  413e74:	eb 52                	jmp    413ec8 <mbedtls_x509_crt_parse_der+0xc58>
  413e76:	48 8b 85 e8 fa ff ff 	mov    -0x518(%rbp),%rax
  413e7d:	48 8b 00             	mov    (%rax),%rax
  413e80:	0f b6 08             	movzbl (%rax),%ecx
  413e83:	3b 8d d4 fa ff ff    	cmp    -0x52c(%rbp),%ecx
  413e89:	74 0c                	je     413e97 <mbedtls_x509_crt_parse_der+0xc27>
  413e8b:	c7 85 f4 fa ff ff 9e 	movl   $0xffffff9e,-0x50c(%rbp)
  413e92:	ff ff ff 
  413e95:	eb 31                	jmp    413ec8 <mbedtls_x509_crt_parse_der+0xc58>
  413e97:	48 8b 85 e8 fa ff ff 	mov    -0x518(%rbp),%rax
  413e9e:	48 8b 08             	mov    (%rax),%rcx
  413ea1:	48 83 c1 01          	add    $0x1,%rcx
  413ea5:	48 89 08             	mov    %rcx,(%rax)
  413ea8:	48 8b bd e8 fa ff ff 	mov    -0x518(%rbp),%rdi
  413eaf:	48 8b b5 e0 fa ff ff 	mov    -0x520(%rbp),%rsi
  413eb6:	48 8b 95 d8 fa ff ff 	mov    -0x528(%rbp),%rdx
  413ebd:	e8 0e 62 00 00       	callq  41a0d0 <mbedtls_asn1_get_len>
  413ec2:	89 85 f4 fa ff ff    	mov    %eax,-0x50c(%rbp)
  413ec8:	8b 85 f4 fa ff ff    	mov    -0x50c(%rbp),%eax
  413ece:	89 85 5c f9 ff ff    	mov    %eax,-0x6a4(%rbp)
  413ed4:	83 f8 00             	cmp    $0x0,%eax
  413ed7:	74 22                	je     413efb <mbedtls_x509_crt_parse_der+0xc8b>
  413ed9:	48 8b bd 70 f9 ff ff 	mov    -0x690(%rbp),%rdi
  413ee0:	e8 8b 20 00 00       	callq  415f70 <mbedtls_x509_crt_free>
  413ee5:	8b 85 5c f9 ff ff    	mov    -0x6a4(%rbp),%eax
  413eeb:	05 80 de ff ff       	add    $0xffffde80,%eax
  413ef0:	89 85 78 f9 ff ff    	mov    %eax,-0x688(%rbp)
  413ef6:	e9 bb 1f 00 00       	jmpq   415eb6 <mbedtls_x509_crt_parse_der+0x2c46>
  413efb:	48 8b 85 48 f9 ff ff 	mov    -0x6b8(%rbp),%rax
  413f02:	48 03 85 50 f9 ff ff 	add    -0x6b0(%rbp),%rax
  413f09:	48 8b 8d 70 f9 ff ff 	mov    -0x690(%rbp),%rcx
  413f10:	48 81 c1 98 00 00 00 	add    $0x98,%rcx
  413f17:	48 8d bd 48 f9 ff ff 	lea    -0x6b8(%rbp),%rdi
  413f1e:	48 89 c6             	mov    %rax,%rsi
  413f21:	48 89 ca             	mov    %rcx,%rdx
  413f24:	e8 e7 4c 00 00       	callq  418c10 <mbedtls_x509_get_name>
  413f29:	89 85 5c f9 ff ff    	mov    %eax,-0x6a4(%rbp)
  413f2f:	83 f8 00             	cmp    $0x0,%eax
  413f32:	74 1d                	je     413f51 <mbedtls_x509_crt_parse_der+0xce1>
  413f34:	48 8b bd 70 f9 ff ff 	mov    -0x690(%rbp),%rdi
  413f3b:	e8 30 20 00 00       	callq  415f70 <mbedtls_x509_crt_free>
  413f40:	8b 85 5c f9 ff ff    	mov    -0x6a4(%rbp),%eax
  413f46:	89 85 78 f9 ff ff    	mov    %eax,-0x688(%rbp)
  413f4c:	e9 65 1f 00 00       	jmpq   415eb6 <mbedtls_x509_crt_parse_der+0x2c46>
  413f51:	48 8b 85 48 f9 ff ff 	mov    -0x6b8(%rbp),%rax
  413f58:	48 8b 8d 70 f9 ff ff 	mov    -0x690(%rbp),%rcx
  413f5f:	48 8b 49 78          	mov    0x78(%rcx),%rcx
  413f63:	48 29 c8             	sub    %rcx,%rax
  413f66:	48 8b 8d 70 f9 ff ff 	mov    -0x690(%rbp),%rcx
  413f6d:	48 89 41 70          	mov    %rax,0x70(%rcx)
  413f71:	48 8b 85 40 f9 ff ff 	mov    -0x6c0(%rbp),%rax
  413f78:	48 8b 8d 70 f9 ff ff 	mov    -0x690(%rbp),%rcx
  413f7f:	48 81 c1 18 01 00 00 	add    $0x118,%rcx
  413f86:	48 8b 95 70 f9 ff ff 	mov    -0x690(%rbp),%rdx
  413f8d:	48 81 c2 30 01 00 00 	add    $0x130,%rdx
  413f94:	48 8d b5 48 f9 ff ff 	lea    -0x6b8(%rbp),%rsi
  413f9b:	48 89 b5 20 fb ff ff 	mov    %rsi,-0x4e0(%rbp)
  413fa2:	48 89 85 18 fb ff ff 	mov    %rax,-0x4e8(%rbp)
  413fa9:	48 89 8d 10 fb ff ff 	mov    %rcx,-0x4f0(%rbp)
  413fb0:	48 89 95 08 fb ff ff 	mov    %rdx,-0x4f8(%rbp)
  413fb7:	48 8b 85 20 fb ff ff 	mov    -0x4e0(%rbp),%rax
  413fbe:	48 8b 8d 18 fb ff ff 	mov    -0x4e8(%rbp),%rcx
  413fc5:	48 89 85 40 fb ff ff 	mov    %rax,-0x4c0(%rbp)
  413fcc:	48 89 8d 38 fb ff ff 	mov    %rcx,-0x4c8(%rbp)
  413fd3:	48 8d 85 f8 fa ff ff 	lea    -0x508(%rbp),%rax
  413fda:	48 89 85 30 fb ff ff 	mov    %rax,-0x4d0(%rbp)
  413fe1:	c7 85 2c fb ff ff 30 	movl   $0x30,-0x4d4(%rbp)
  413fe8:	00 00 00 
  413feb:	48 8b 85 38 fb ff ff 	mov    -0x4c8(%rbp),%rax
  413ff2:	48 8b 8d 40 fb ff ff 	mov    -0x4c0(%rbp),%rcx
  413ff9:	48 8b 09             	mov    (%rcx),%rcx
  413ffc:	48 29 c8             	sub    %rcx,%rax
  413fff:	48 83 f8 01          	cmp    $0x1,%rax
  414003:	7d 0c                	jge    414011 <mbedtls_x509_crt_parse_der+0xda1>
  414005:	c7 85 48 fb ff ff a0 	movl   $0xffffffa0,-0x4b8(%rbp)
  41400c:	ff ff ff 
  41400f:	eb 52                	jmp    414063 <mbedtls_x509_crt_parse_der+0xdf3>
  414011:	48 8b 85 40 fb ff ff 	mov    -0x4c0(%rbp),%rax
  414018:	48 8b 00             	mov    (%rax),%rax
  41401b:	0f b6 08             	movzbl (%rax),%ecx
  41401e:	3b 8d 2c fb ff ff    	cmp    -0x4d4(%rbp),%ecx
  414024:	74 0c                	je     414032 <mbedtls_x509_crt_parse_der+0xdc2>
  414026:	c7 85 48 fb ff ff 9e 	movl   $0xffffff9e,-0x4b8(%rbp)
  41402d:	ff ff ff 
  414030:	eb 31                	jmp    414063 <mbedtls_x509_crt_parse_der+0xdf3>
  414032:	48 8b 85 40 fb ff ff 	mov    -0x4c0(%rbp),%rax
  414039:	48 8b 08             	mov    (%rax),%rcx
  41403c:	48 83 c1 01          	add    $0x1,%rcx
  414040:	48 89 08             	mov    %rcx,(%rax)
  414043:	48 8b bd 40 fb ff ff 	mov    -0x4c0(%rbp),%rdi
  41404a:	48 8b b5 38 fb ff ff 	mov    -0x4c8(%rbp),%rsi
  414051:	48 8b 95 30 fb ff ff 	mov    -0x4d0(%rbp),%rdx
  414058:	e8 73 60 00 00       	callq  41a0d0 <mbedtls_asn1_get_len>
  41405d:	89 85 48 fb ff ff    	mov    %eax,-0x4b8(%rbp)
  414063:	8b 85 48 fb ff ff    	mov    -0x4b8(%rbp),%eax
  414069:	89 85 04 fb ff ff    	mov    %eax,-0x4fc(%rbp)
  41406f:	83 f8 00             	cmp    $0x0,%eax
  414072:	74 16                	je     41408a <mbedtls_x509_crt_parse_der+0xe1a>
  414074:	8b 85 04 fb ff ff    	mov    -0x4fc(%rbp),%eax
  41407a:	05 00 dc ff ff       	add    $0xffffdc00,%eax
  41407f:	89 85 28 fb ff ff    	mov    %eax,-0x4d8(%rbp)
  414085:	e9 a7 00 00 00       	jmpq   414131 <mbedtls_x509_crt_parse_der+0xec1>
  41408a:	48 8b 85 20 fb ff ff 	mov    -0x4e0(%rbp),%rax
  414091:	48 8b 00             	mov    (%rax),%rax
  414094:	48 03 85 f8 fa ff ff 	add    -0x508(%rbp),%rax
  41409b:	48 89 85 18 fb ff ff 	mov    %rax,-0x4e8(%rbp)
  4140a2:	48 8b bd 20 fb ff ff 	mov    -0x4e0(%rbp),%rdi
  4140a9:	48 8b b5 18 fb ff ff 	mov    -0x4e8(%rbp),%rsi
  4140b0:	48 8b 95 10 fb ff ff 	mov    -0x4f0(%rbp),%rdx
  4140b7:	e8 44 50 00 00       	callq  419100 <mbedtls_x509_get_time>
  4140bc:	89 85 04 fb ff ff    	mov    %eax,-0x4fc(%rbp)
  4140c2:	83 f8 00             	cmp    $0x0,%eax
  4140c5:	74 0e                	je     4140d5 <mbedtls_x509_crt_parse_der+0xe65>
  4140c7:	8b 85 04 fb ff ff    	mov    -0x4fc(%rbp),%eax
  4140cd:	89 85 28 fb ff ff    	mov    %eax,-0x4d8(%rbp)
  4140d3:	eb 5c                	jmp    414131 <mbedtls_x509_crt_parse_der+0xec1>
  4140d5:	48 8b bd 20 fb ff ff 	mov    -0x4e0(%rbp),%rdi
  4140dc:	48 8b b5 18 fb ff ff 	mov    -0x4e8(%rbp),%rsi
  4140e3:	48 8b 95 08 fb ff ff 	mov    -0x4f8(%rbp),%rdx
  4140ea:	e8 11 50 00 00       	callq  419100 <mbedtls_x509_get_time>
  4140ef:	89 85 04 fb ff ff    	mov    %eax,-0x4fc(%rbp)
  4140f5:	83 f8 00             	cmp    $0x0,%eax
  4140f8:	74 0e                	je     414108 <mbedtls_x509_crt_parse_der+0xe98>
  4140fa:	8b 85 04 fb ff ff    	mov    -0x4fc(%rbp),%eax
  414100:	89 85 28 fb ff ff    	mov    %eax,-0x4d8(%rbp)
  414106:	eb 29                	jmp    414131 <mbedtls_x509_crt_parse_der+0xec1>
  414108:	48 8b 85 20 fb ff ff 	mov    -0x4e0(%rbp),%rax
  41410f:	48 8b 00             	mov    (%rax),%rax
  414112:	48 3b 85 18 fb ff ff 	cmp    -0x4e8(%rbp),%rax
  414119:	74 0c                	je     414127 <mbedtls_x509_crt_parse_der+0xeb7>
  41411b:	c7 85 28 fb ff ff 9a 	movl   $0xffffdb9a,-0x4d8(%rbp)
  414122:	db ff ff 
  414125:	eb 0a                	jmp    414131 <mbedtls_x509_crt_parse_der+0xec1>
  414127:	c7 85 28 fb ff ff 00 	movl   $0x0,-0x4d8(%rbp)
  41412e:	00 00 00 
  414131:	8b 85 28 fb ff ff    	mov    -0x4d8(%rbp),%eax
  414137:	89 85 5c f9 ff ff    	mov    %eax,-0x6a4(%rbp)
  41413d:	83 f8 00             	cmp    $0x0,%eax
  414140:	74 1d                	je     41415f <mbedtls_x509_crt_parse_der+0xeef>
  414142:	48 8b bd 70 f9 ff ff 	mov    -0x690(%rbp),%rdi
  414149:	e8 22 1e 00 00       	callq  415f70 <mbedtls_x509_crt_free>
  41414e:	8b 85 5c f9 ff ff    	mov    -0x6a4(%rbp),%eax
  414154:	89 85 78 f9 ff ff    	mov    %eax,-0x688(%rbp)
  41415a:	e9 57 1d 00 00       	jmpq   415eb6 <mbedtls_x509_crt_parse_der+0x2c46>
  41415f:	48 8b 85 48 f9 ff ff 	mov    -0x6b8(%rbp),%rax
  414166:	48 8b 8d 70 f9 ff ff 	mov    -0x690(%rbp),%rcx
  41416d:	48 89 81 90 00 00 00 	mov    %rax,0x90(%rcx)
  414174:	48 8b 85 40 f9 ff ff 	mov    -0x6c0(%rbp),%rax
  41417b:	48 8d 8d 48 f9 ff ff 	lea    -0x6b8(%rbp),%rcx
  414182:	48 89 8d 60 fb ff ff 	mov    %rcx,-0x4a0(%rbp)
  414189:	48 89 85 58 fb ff ff 	mov    %rax,-0x4a8(%rbp)
  414190:	48 8d 85 50 f9 ff ff 	lea    -0x6b0(%rbp),%rax
  414197:	48 89 85 50 fb ff ff 	mov    %rax,-0x4b0(%rbp)
  41419e:	c7 85 4c fb ff ff 30 	movl   $0x30,-0x4b4(%rbp)
  4141a5:	00 00 00 
  4141a8:	48 8b 85 58 fb ff ff 	mov    -0x4a8(%rbp),%rax
  4141af:	48 8b 8d 60 fb ff ff 	mov    -0x4a0(%rbp),%rcx
  4141b6:	48 8b 09             	mov    (%rcx),%rcx
  4141b9:	48 29 c8             	sub    %rcx,%rax
  4141bc:	48 83 f8 01          	cmp    $0x1,%rax
  4141c0:	7d 0c                	jge    4141ce <mbedtls_x509_crt_parse_der+0xf5e>
  4141c2:	c7 85 6c fb ff ff a0 	movl   $0xffffffa0,-0x494(%rbp)
  4141c9:	ff ff ff 
  4141cc:	eb 52                	jmp    414220 <mbedtls_x509_crt_parse_der+0xfb0>
  4141ce:	48 8b 85 60 fb ff ff 	mov    -0x4a0(%rbp),%rax
  4141d5:	48 8b 00             	mov    (%rax),%rax
  4141d8:	0f b6 08             	movzbl (%rax),%ecx
  4141db:	3b 8d 4c fb ff ff    	cmp    -0x4b4(%rbp),%ecx
  4141e1:	74 0c                	je     4141ef <mbedtls_x509_crt_parse_der+0xf7f>
  4141e3:	c7 85 6c fb ff ff 9e 	movl   $0xffffff9e,-0x494(%rbp)
  4141ea:	ff ff ff 
  4141ed:	eb 31                	jmp    414220 <mbedtls_x509_crt_parse_der+0xfb0>
  4141ef:	48 8b 85 60 fb ff ff 	mov    -0x4a0(%rbp),%rax
  4141f6:	48 8b 08             	mov    (%rax),%rcx
  4141f9:	48 83 c1 01          	add    $0x1,%rcx
  4141fd:	48 89 08             	mov    %rcx,(%rax)
  414200:	48 8b bd 60 fb ff ff 	mov    -0x4a0(%rbp),%rdi
  414207:	48 8b b5 58 fb ff ff 	mov    -0x4a8(%rbp),%rsi
  41420e:	48 8b 95 50 fb ff ff 	mov    -0x4b0(%rbp),%rdx
  414215:	e8 b6 5e 00 00       	callq  41a0d0 <mbedtls_asn1_get_len>
  41421a:	89 85 6c fb ff ff    	mov    %eax,-0x494(%rbp)
  414220:	8b 85 6c fb ff ff    	mov    -0x494(%rbp),%eax
  414226:	89 85 5c f9 ff ff    	mov    %eax,-0x6a4(%rbp)
  41422c:	83 f8 00             	cmp    $0x0,%eax
  41422f:	74 22                	je     414253 <mbedtls_x509_crt_parse_der+0xfe3>
  414231:	48 8b bd 70 f9 ff ff 	mov    -0x690(%rbp),%rdi
  414238:	e8 33 1d 00 00       	callq  415f70 <mbedtls_x509_crt_free>
  41423d:	8b 85 5c f9 ff ff    	mov    -0x6a4(%rbp),%eax
  414243:	05 80 de ff ff       	add    $0xffffde80,%eax
  414248:	89 85 78 f9 ff ff    	mov    %eax,-0x688(%rbp)
  41424e:	e9 63 1c 00 00       	jmpq   415eb6 <mbedtls_x509_crt_parse_der+0x2c46>
  414253:	48 83 bd 50 f9 ff ff 	cmpq   $0x0,-0x6b0(%rbp)
  41425a:	00 
  41425b:	74 56                	je     4142b3 <mbedtls_x509_crt_parse_der+0x1043>
  41425d:	48 8b 85 48 f9 ff ff 	mov    -0x6b8(%rbp),%rax
  414264:	48 03 85 50 f9 ff ff 	add    -0x6b0(%rbp),%rax
  41426b:	48 8b 8d 70 f9 ff ff 	mov    -0x690(%rbp),%rcx
  414272:	48 81 c1 d8 00 00 00 	add    $0xd8,%rcx
  414279:	48 8d bd 48 f9 ff ff 	lea    -0x6b8(%rbp),%rdi
  414280:	48 89 c6             	mov    %rax,%rsi
  414283:	48 89 ca             	mov    %rcx,%rdx
  414286:	e8 85 49 00 00       	callq  418c10 <mbedtls_x509_get_name>
  41428b:	89 85 5c f9 ff ff    	mov    %eax,-0x6a4(%rbp)
  414291:	83 f8 00             	cmp    $0x0,%eax
  414294:	74 1d                	je     4142b3 <mbedtls_x509_crt_parse_der+0x1043>
  414296:	48 8b bd 70 f9 ff ff 	mov    -0x690(%rbp),%rdi
  41429d:	e8 ce 1c 00 00       	callq  415f70 <mbedtls_x509_crt_free>
  4142a2:	8b 85 5c f9 ff ff    	mov    -0x6a4(%rbp),%eax
  4142a8:	89 85 78 f9 ff ff    	mov    %eax,-0x688(%rbp)
  4142ae:	e9 03 1c 00 00       	jmpq   415eb6 <mbedtls_x509_crt_parse_der+0x2c46>
  4142b3:	48 8b 85 48 f9 ff ff 	mov    -0x6b8(%rbp),%rax
  4142ba:	48 8b 8d 70 f9 ff ff 	mov    -0x690(%rbp),%rcx
  4142c1:	48 8b 89 90 00 00 00 	mov    0x90(%rcx),%rcx
  4142c8:	48 29 c8             	sub    %rcx,%rax
  4142cb:	48 8b 8d 70 f9 ff ff 	mov    -0x690(%rbp),%rcx
  4142d2:	48 89 81 88 00 00 00 	mov    %rax,0x88(%rcx)
  4142d9:	48 8b b5 40 f9 ff ff 	mov    -0x6c0(%rbp),%rsi
  4142e0:	48 8b 85 70 f9 ff ff 	mov    -0x690(%rbp),%rax
  4142e7:	48 05 48 01 00 00    	add    $0x148,%rax
  4142ed:	48 8d bd 48 f9 ff ff 	lea    -0x6b8(%rbp),%rdi
  4142f4:	48 89 c2             	mov    %rax,%rdx
  4142f7:	e8 e4 18 02 00       	callq  435be0 <mbedtls_pk_parse_subpubkey>
  4142fc:	89 85 5c f9 ff ff    	mov    %eax,-0x6a4(%rbp)
  414302:	83 f8 00             	cmp    $0x0,%eax
  414305:	74 1d                	je     414324 <mbedtls_x509_crt_parse_der+0x10b4>
  414307:	48 8b bd 70 f9 ff ff 	mov    -0x690(%rbp),%rdi
  41430e:	e8 5d 1c 00 00       	callq  415f70 <mbedtls_x509_crt_free>
  414313:	8b 85 5c f9 ff ff    	mov    -0x6a4(%rbp),%eax
  414319:	89 85 78 f9 ff ff    	mov    %eax,-0x688(%rbp)
  41431f:	e9 92 1b 00 00       	jmpq   415eb6 <mbedtls_x509_crt_parse_der+0x2c46>
  414324:	48 8b 85 70 f9 ff ff 	mov    -0x690(%rbp),%rax
  41432b:	83 78 30 02          	cmpl   $0x2,0x30(%rax)
  41432f:	74 0d                	je     41433e <mbedtls_x509_crt_parse_der+0x10ce>
  414331:	48 8b 85 70 f9 ff ff 	mov    -0x690(%rbp),%rax
  414338:	83 78 30 03          	cmpl   $0x3,0x30(%rax)
  41433c:	75 56                	jne    414394 <mbedtls_x509_crt_parse_der+0x1124>
  41433e:	48 8b b5 40 f9 ff ff 	mov    -0x6c0(%rbp),%rsi
  414345:	48 8b 85 70 f9 ff ff 	mov    -0x690(%rbp),%rax
  41434c:	48 05 58 01 00 00    	add    $0x158,%rax
  414352:	48 8d bd 48 f9 ff ff 	lea    -0x6b8(%rbp),%rdi
  414359:	48 89 c2             	mov    %rax,%rdx
  41435c:	b9 01 00 00 00       	mov    $0x1,%ecx
  414361:	e8 aa 1f 00 00       	callq  416310 <x509_get_uid>
  414366:	89 85 5c f9 ff ff    	mov    %eax,-0x6a4(%rbp)
  41436c:	83 bd 5c f9 ff ff 00 	cmpl   $0x0,-0x6a4(%rbp)
  414373:	74 1d                	je     414392 <mbedtls_x509_crt_parse_der+0x1122>
  414375:	48 8b bd 70 f9 ff ff 	mov    -0x690(%rbp),%rdi
  41437c:	e8 ef 1b 00 00       	callq  415f70 <mbedtls_x509_crt_free>
  414381:	8b 85 5c f9 ff ff    	mov    -0x6a4(%rbp),%eax
  414387:	89 85 78 f9 ff ff    	mov    %eax,-0x688(%rbp)
  41438d:	e9 24 1b 00 00       	jmpq   415eb6 <mbedtls_x509_crt_parse_der+0x2c46>
  414392:	eb 00                	jmp    414394 <mbedtls_x509_crt_parse_der+0x1124>
  414394:	48 8b 85 70 f9 ff ff 	mov    -0x690(%rbp),%rax
  41439b:	83 78 30 02          	cmpl   $0x2,0x30(%rax)
  41439f:	74 0d                	je     4143ae <mbedtls_x509_crt_parse_der+0x113e>
  4143a1:	48 8b 85 70 f9 ff ff 	mov    -0x690(%rbp),%rax
  4143a8:	83 78 30 03          	cmpl   $0x3,0x30(%rax)
  4143ac:	75 56                	jne    414404 <mbedtls_x509_crt_parse_der+0x1194>
  4143ae:	48 8b b5 40 f9 ff ff 	mov    -0x6c0(%rbp),%rsi
  4143b5:	48 8b 85 70 f9 ff ff 	mov    -0x690(%rbp),%rax
  4143bc:	48 05 70 01 00 00    	add    $0x170,%rax
  4143c2:	48 8d bd 48 f9 ff ff 	lea    -0x6b8(%rbp),%rdi
  4143c9:	48 89 c2             	mov    %rax,%rdx
  4143cc:	b9 02 00 00 00       	mov    $0x2,%ecx
  4143d1:	e8 3a 1f 00 00       	callq  416310 <x509_get_uid>
  4143d6:	89 85 5c f9 ff ff    	mov    %eax,-0x6a4(%rbp)
  4143dc:	83 bd 5c f9 ff ff 00 	cmpl   $0x0,-0x6a4(%rbp)
  4143e3:	74 1d                	je     414402 <mbedtls_x509_crt_parse_der+0x1192>
  4143e5:	48 8b bd 70 f9 ff ff 	mov    -0x690(%rbp),%rdi
  4143ec:	e8 7f 1b 00 00       	callq  415f70 <mbedtls_x509_crt_free>
  4143f1:	8b 85 5c f9 ff ff    	mov    -0x6a4(%rbp),%eax
  4143f7:	89 85 78 f9 ff ff    	mov    %eax,-0x688(%rbp)
  4143fd:	e9 b4 1a 00 00       	jmpq   415eb6 <mbedtls_x509_crt_parse_der+0x2c46>
  414402:	eb 00                	jmp    414404 <mbedtls_x509_crt_parse_der+0x1194>
  414404:	48 8b 85 70 f9 ff ff 	mov    -0x690(%rbp),%rax
  41440b:	83 78 30 03          	cmpl   $0x3,0x30(%rax)
  41440f:	0f 85 58 17 00 00    	jne    415b6d <mbedtls_x509_crt_parse_der+0x28fd>
  414415:	48 8b 85 40 f9 ff ff 	mov    -0x6c0(%rbp),%rax
  41441c:	48 8b 8d 70 f9 ff ff 	mov    -0x690(%rbp),%rcx
  414423:	48 8d 95 48 f9 ff ff 	lea    -0x6b8(%rbp),%rdx
  41442a:	48 89 95 c0 fb ff ff 	mov    %rdx,-0x440(%rbp)
  414431:	48 89 85 b8 fb ff ff 	mov    %rax,-0x448(%rbp)
  414438:	48 89 8d b0 fb ff ff 	mov    %rcx,-0x450(%rbp)
  41443f:	48 8b 85 c0 fb ff ff 	mov    -0x440(%rbp),%rax
  414446:	48 8b 8d b8 fb ff ff 	mov    -0x448(%rbp),%rcx
  41444d:	48 8b 95 b0 fb ff ff 	mov    -0x450(%rbp),%rdx
  414454:	48 81 c2 88 01 00 00 	add    $0x188,%rdx
  41445b:	48 89 85 f0 fb ff ff 	mov    %rax,-0x410(%rbp)
  414462:	48 89 8d e8 fb ff ff 	mov    %rcx,-0x418(%rbp)
  414469:	48 89 95 e0 fb ff ff 	mov    %rdx,-0x420(%rbp)
  414470:	c7 85 dc fb ff ff 03 	movl   $0x3,-0x424(%rbp)
  414477:	00 00 00 
  41447a:	48 8b 85 f0 fb ff ff 	mov    -0x410(%rbp),%rax
  414481:	48 8b 00             	mov    (%rax),%rax
  414484:	48 3b 85 e8 fb ff ff 	cmp    -0x418(%rbp),%rax
  41448b:	75 0f                	jne    41449c <mbedtls_x509_crt_parse_der+0x122c>
  41448d:	c7 85 f8 fb ff ff 00 	movl   $0x0,-0x408(%rbp)
  414494:	00 00 00 
  414497:	e9 24 02 00 00       	jmpq   4146c0 <mbedtls_x509_crt_parse_der+0x1450>
  41449c:	48 8b 85 f0 fb ff ff 	mov    -0x410(%rbp),%rax
  4144a3:	48 8b 00             	mov    (%rax),%rax
  4144a6:	0f b6 08             	movzbl (%rax),%ecx
  4144a9:	48 8b 85 e0 fb ff ff 	mov    -0x420(%rbp),%rax
  4144b0:	89 08                	mov    %ecx,(%rax)
  4144b2:	48 8b 85 f0 fb ff ff 	mov    -0x410(%rbp),%rax
  4144b9:	48 8b 95 e8 fb ff ff 	mov    -0x418(%rbp),%rdx
  4144c0:	48 8b b5 e0 fb ff ff 	mov    -0x420(%rbp),%rsi
  4144c7:	48 83 c6 08          	add    $0x8,%rsi
  4144cb:	8b 8d dc fb ff ff    	mov    -0x424(%rbp),%ecx
  4144d1:	81 c9 a0 00 00 00    	or     $0xa0,%ecx
  4144d7:	48 89 85 10 fc ff ff 	mov    %rax,-0x3f0(%rbp)
  4144de:	48 89 95 08 fc ff ff 	mov    %rdx,-0x3f8(%rbp)
  4144e5:	48 89 b5 00 fc ff ff 	mov    %rsi,-0x400(%rbp)
  4144ec:	89 8d fc fb ff ff    	mov    %ecx,-0x404(%rbp)
  4144f2:	48 8b 85 08 fc ff ff 	mov    -0x3f8(%rbp),%rax
  4144f9:	48 8b 95 10 fc ff ff 	mov    -0x3f0(%rbp),%rdx
  414500:	48 8b 12             	mov    (%rdx),%rdx
  414503:	48 29 d0             	sub    %rdx,%rax
  414506:	48 83 f8 01          	cmp    $0x1,%rax
  41450a:	7d 0c                	jge    414518 <mbedtls_x509_crt_parse_der+0x12a8>
  41450c:	c7 85 18 fc ff ff a0 	movl   $0xffffffa0,-0x3e8(%rbp)
  414513:	ff ff ff 
  414516:	eb 52                	jmp    41456a <mbedtls_x509_crt_parse_der+0x12fa>
  414518:	48 8b 85 10 fc ff ff 	mov    -0x3f0(%rbp),%rax
  41451f:	48 8b 00             	mov    (%rax),%rax
  414522:	0f b6 08             	movzbl (%rax),%ecx
  414525:	3b 8d fc fb ff ff    	cmp    -0x404(%rbp),%ecx
  41452b:	74 0c                	je     414539 <mbedtls_x509_crt_parse_der+0x12c9>
  41452d:	c7 85 18 fc ff ff 9e 	movl   $0xffffff9e,-0x3e8(%rbp)
  414534:	ff ff ff 
  414537:	eb 31                	jmp    41456a <mbedtls_x509_crt_parse_der+0x12fa>
  414539:	48 8b 85 10 fc ff ff 	mov    -0x3f0(%rbp),%rax
  414540:	48 8b 08             	mov    (%rax),%rcx
  414543:	48 83 c1 01          	add    $0x1,%rcx
  414547:	48 89 08             	mov    %rcx,(%rax)
  41454a:	48 8b bd 10 fc ff ff 	mov    -0x3f0(%rbp),%rdi
  414551:	48 8b b5 08 fc ff ff 	mov    -0x3f8(%rbp),%rsi
  414558:	48 8b 95 00 fc ff ff 	mov    -0x400(%rbp),%rdx
  41455f:	e8 6c 5b 00 00       	callq  41a0d0 <mbedtls_asn1_get_len>
  414564:	89 85 18 fc ff ff    	mov    %eax,-0x3e8(%rbp)
  41456a:	8b 85 18 fc ff ff    	mov    -0x3e8(%rbp),%eax
  414570:	89 85 d8 fb ff ff    	mov    %eax,-0x428(%rbp)
  414576:	83 f8 00             	cmp    $0x0,%eax
  414579:	74 11                	je     41458c <mbedtls_x509_crt_parse_der+0x131c>
  41457b:	8b 85 d8 fb ff ff    	mov    -0x428(%rbp),%eax
  414581:	89 85 f8 fb ff ff    	mov    %eax,-0x408(%rbp)
  414587:	e9 34 01 00 00       	jmpq   4146c0 <mbedtls_x509_crt_parse_der+0x1450>
  41458c:	48 8b 85 f0 fb ff ff 	mov    -0x410(%rbp),%rax
  414593:	48 8b 00             	mov    (%rax),%rax
  414596:	48 8b 8d e0 fb ff ff 	mov    -0x420(%rbp),%rcx
  41459d:	48 89 41 10          	mov    %rax,0x10(%rcx)
  4145a1:	48 8b 85 f0 fb ff ff 	mov    -0x410(%rbp),%rax
  4145a8:	48 8b 00             	mov    (%rax),%rax
  4145ab:	48 8b 8d e0 fb ff ff 	mov    -0x420(%rbp),%rcx
  4145b2:	48 03 41 08          	add    0x8(%rcx),%rax
  4145b6:	48 89 85 e8 fb ff ff 	mov    %rax,-0x418(%rbp)
  4145bd:	48 8b 85 f0 fb ff ff 	mov    -0x410(%rbp),%rax
  4145c4:	48 8b 8d e8 fb ff ff 	mov    -0x418(%rbp),%rcx
  4145cb:	48 89 85 30 fc ff ff 	mov    %rax,-0x3d0(%rbp)
  4145d2:	48 89 8d 28 fc ff ff 	mov    %rcx,-0x3d8(%rbp)
  4145d9:	48 8d 85 d0 fb ff ff 	lea    -0x430(%rbp),%rax
  4145e0:	48 89 85 20 fc ff ff 	mov    %rax,-0x3e0(%rbp)
  4145e7:	c7 85 1c fc ff ff 30 	movl   $0x30,-0x3e4(%rbp)
  4145ee:	00 00 00 
  4145f1:	48 8b 85 28 fc ff ff 	mov    -0x3d8(%rbp),%rax
  4145f8:	48 8b 8d 30 fc ff ff 	mov    -0x3d0(%rbp),%rcx
  4145ff:	48 8b 09             	mov    (%rcx),%rcx
  414602:	48 29 c8             	sub    %rcx,%rax
  414605:	48 83 f8 01          	cmp    $0x1,%rax
  414609:	7d 0c                	jge    414617 <mbedtls_x509_crt_parse_der+0x13a7>
  41460b:	c7 85 38 fc ff ff a0 	movl   $0xffffffa0,-0x3c8(%rbp)
  414612:	ff ff ff 
  414615:	eb 52                	jmp    414669 <mbedtls_x509_crt_parse_der+0x13f9>
  414617:	48 8b 85 30 fc ff ff 	mov    -0x3d0(%rbp),%rax
  41461e:	48 8b 00             	mov    (%rax),%rax
  414621:	0f b6 08             	movzbl (%rax),%ecx
  414624:	3b 8d 1c fc ff ff    	cmp    -0x3e4(%rbp),%ecx
  41462a:	74 0c                	je     414638 <mbedtls_x509_crt_parse_der+0x13c8>
  41462c:	c7 85 38 fc ff ff 9e 	movl   $0xffffff9e,-0x3c8(%rbp)
  414633:	ff ff ff 
  414636:	eb 31                	jmp    414669 <mbedtls_x509_crt_parse_der+0x13f9>
  414638:	48 8b 85 30 fc ff ff 	mov    -0x3d0(%rbp),%rax
  41463f:	48 8b 08             	mov    (%rax),%rcx
  414642:	48 83 c1 01          	add    $0x1,%rcx
  414646:	48 89 08             	mov    %rcx,(%rax)
  414649:	48 8b bd 30 fc ff ff 	mov    -0x3d0(%rbp),%rdi
  414650:	48 8b b5 28 fc ff ff 	mov    -0x3d8(%rbp),%rsi
  414657:	48 8b 95 20 fc ff ff 	mov    -0x3e0(%rbp),%rdx
  41465e:	e8 6d 5a 00 00       	callq  41a0d0 <mbedtls_asn1_get_len>
  414663:	89 85 38 fc ff ff    	mov    %eax,-0x3c8(%rbp)
  414669:	8b 85 38 fc ff ff    	mov    -0x3c8(%rbp),%eax
  41466f:	89 85 d8 fb ff ff    	mov    %eax,-0x428(%rbp)
  414675:	83 f8 00             	cmp    $0x0,%eax
  414678:	74 13                	je     41468d <mbedtls_x509_crt_parse_der+0x141d>
  41467a:	8b 85 d8 fb ff ff    	mov    -0x428(%rbp),%eax
  414680:	05 00 db ff ff       	add    $0xffffdb00,%eax
  414685:	89 85 f8 fb ff ff    	mov    %eax,-0x408(%rbp)
  41468b:	eb 33                	jmp    4146c0 <mbedtls_x509_crt_parse_der+0x1450>
  41468d:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
  414694:	48 8b 8d f0 fb ff ff 	mov    -0x410(%rbp),%rcx
  41469b:	48 8b 09             	mov    (%rcx),%rcx
  41469e:	48 03 8d d0 fb ff ff 	add    -0x430(%rbp),%rcx
  4146a5:	48 39 c8             	cmp    %rcx,%rax
  4146a8:	74 0c                	je     4146b6 <mbedtls_x509_crt_parse_der+0x1446>
  4146aa:	c7 85 f8 fb ff ff 9a 	movl   $0xffffda9a,-0x408(%rbp)
  4146b1:	da ff ff 
  4146b4:	eb 0a                	jmp    4146c0 <mbedtls_x509_crt_parse_der+0x1450>
  4146b6:	c7 85 f8 fb ff ff 00 	movl   $0x0,-0x408(%rbp)
  4146bd:	00 00 00 
  4146c0:	8b 85 f8 fb ff ff    	mov    -0x408(%rbp),%eax
  4146c6:	89 85 ac fb ff ff    	mov    %eax,-0x454(%rbp)
  4146cc:	83 f8 00             	cmp    $0x0,%eax
  4146cf:	74 29                	je     4146fa <mbedtls_x509_crt_parse_der+0x148a>
  4146d1:	83 bd ac fb ff ff 9e 	cmpl   $0xffffff9e,-0x454(%rbp)
  4146d8:	75 0f                	jne    4146e9 <mbedtls_x509_crt_parse_der+0x1479>
  4146da:	c7 85 cc fb ff ff 00 	movl   $0x0,-0x434(%rbp)
  4146e1:	00 00 00 
  4146e4:	e9 50 14 00 00       	jmpq   415b39 <mbedtls_x509_crt_parse_der+0x28c9>
  4146e9:	8b 85 ac fb ff ff    	mov    -0x454(%rbp),%eax
  4146ef:	89 85 cc fb ff ff    	mov    %eax,-0x434(%rbp)
  4146f5:	e9 3f 14 00 00       	jmpq   415b39 <mbedtls_x509_crt_parse_der+0x28c9>
  4146fa:	eb 00                	jmp    4146fc <mbedtls_x509_crt_parse_der+0x148c>
  4146fc:	48 8b 85 c0 fb ff ff 	mov    -0x440(%rbp),%rax
  414703:	48 8b 00             	mov    (%rax),%rax
  414706:	48 3b 85 b8 fb ff ff 	cmp    -0x448(%rbp),%rax
  41470d:	0f 83 fd 13 00 00    	jae    415b10 <mbedtls_x509_crt_parse_der+0x28a0>
  414713:	31 f6                	xor    %esi,%esi
  414715:	b8 18 00 00 00       	mov    $0x18,%eax
  41471a:	89 c2                	mov    %eax,%edx
  41471c:	48 8d 8d 78 fb ff ff 	lea    -0x488(%rbp),%rcx
  414723:	48 89 cf             	mov    %rcx,%rdi
  414726:	e8 f5 c8 fe ff       	callq  401020 <memset@plt>
  41472b:	c7 85 74 fb ff ff 00 	movl   $0x0,-0x48c(%rbp)
  414732:	00 00 00 
  414735:	c7 85 70 fb ff ff 00 	movl   $0x0,-0x490(%rbp)
  41473c:	00 00 00 
  41473f:	48 8b 8d c0 fb ff ff 	mov    -0x440(%rbp),%rcx
  414746:	48 8b 95 b8 fb ff ff 	mov    -0x448(%rbp),%rdx
  41474d:	48 89 8d 50 fc ff ff 	mov    %rcx,-0x3b0(%rbp)
  414754:	48 89 95 48 fc ff ff 	mov    %rdx,-0x3b8(%rbp)
  41475b:	48 8d 8d a0 fb ff ff 	lea    -0x460(%rbp),%rcx
  414762:	48 89 8d 40 fc ff ff 	mov    %rcx,-0x3c0(%rbp)
  414769:	c7 85 3c fc ff ff 30 	movl   $0x30,-0x3c4(%rbp)
  414770:	00 00 00 
  414773:	48 8b 8d 48 fc ff ff 	mov    -0x3b8(%rbp),%rcx
  41477a:	48 8b 95 50 fc ff ff 	mov    -0x3b0(%rbp),%rdx
  414781:	48 8b 12             	mov    (%rdx),%rdx
  414784:	48 29 d1             	sub    %rdx,%rcx
  414787:	48 83 f9 01          	cmp    $0x1,%rcx
  41478b:	7d 0c                	jge    414799 <mbedtls_x509_crt_parse_der+0x1529>
  41478d:	c7 85 58 fc ff ff a0 	movl   $0xffffffa0,-0x3a8(%rbp)
  414794:	ff ff ff 
  414797:	eb 52                	jmp    4147eb <mbedtls_x509_crt_parse_der+0x157b>
  414799:	48 8b 85 50 fc ff ff 	mov    -0x3b0(%rbp),%rax
  4147a0:	48 8b 00             	mov    (%rax),%rax
  4147a3:	0f b6 08             	movzbl (%rax),%ecx
  4147a6:	3b 8d 3c fc ff ff    	cmp    -0x3c4(%rbp),%ecx
  4147ac:	74 0c                	je     4147ba <mbedtls_x509_crt_parse_der+0x154a>
  4147ae:	c7 85 58 fc ff ff 9e 	movl   $0xffffff9e,-0x3a8(%rbp)
  4147b5:	ff ff ff 
  4147b8:	eb 31                	jmp    4147eb <mbedtls_x509_crt_parse_der+0x157b>
  4147ba:	48 8b 85 50 fc ff ff 	mov    -0x3b0(%rbp),%rax
  4147c1:	48 8b 08             	mov    (%rax),%rcx
  4147c4:	48 83 c1 01          	add    $0x1,%rcx
  4147c8:	48 89 08             	mov    %rcx,(%rax)
  4147cb:	48 8b bd 50 fc ff ff 	mov    -0x3b0(%rbp),%rdi
  4147d2:	48 8b b5 48 fc ff ff 	mov    -0x3b8(%rbp),%rsi
  4147d9:	48 8b 95 40 fc ff ff 	mov    -0x3c0(%rbp),%rdx
  4147e0:	e8 eb 58 00 00       	callq  41a0d0 <mbedtls_asn1_get_len>
  4147e5:	89 85 58 fc ff ff    	mov    %eax,-0x3a8(%rbp)
  4147eb:	8b 85 58 fc ff ff    	mov    -0x3a8(%rbp),%eax
  4147f1:	89 85 ac fb ff ff    	mov    %eax,-0x454(%rbp)
  4147f7:	83 f8 00             	cmp    $0x0,%eax
  4147fa:	74 16                	je     414812 <mbedtls_x509_crt_parse_der+0x15a2>
  4147fc:	8b 85 ac fb ff ff    	mov    -0x454(%rbp),%eax
  414802:	05 00 db ff ff       	add    $0xffffdb00,%eax
  414807:	89 85 cc fb ff ff    	mov    %eax,-0x434(%rbp)
  41480d:	e9 27 13 00 00       	jmpq   415b39 <mbedtls_x509_crt_parse_der+0x28c9>
  414812:	48 8b 85 c0 fb ff ff 	mov    -0x440(%rbp),%rax
  414819:	48 8b 00             	mov    (%rax),%rax
  41481c:	48 03 85 a0 fb ff ff 	add    -0x460(%rbp),%rax
  414823:	48 89 85 98 fb ff ff 	mov    %rax,-0x468(%rbp)
  41482a:	48 8b 85 c0 fb ff ff 	mov    -0x440(%rbp),%rax
  414831:	48 8b 8d 98 fb ff ff 	mov    -0x468(%rbp),%rcx
  414838:	48 8d 95 78 fb ff ff 	lea    -0x488(%rbp),%rdx
  41483f:	48 83 c2 08          	add    $0x8,%rdx
  414843:	48 89 85 70 fc ff ff 	mov    %rax,-0x390(%rbp)
  41484a:	48 89 8d 68 fc ff ff 	mov    %rcx,-0x398(%rbp)
  414851:	48 89 95 60 fc ff ff 	mov    %rdx,-0x3a0(%rbp)
  414858:	c7 85 5c fc ff ff 06 	movl   $0x6,-0x3a4(%rbp)
  41485f:	00 00 00 
  414862:	48 8b 85 68 fc ff ff 	mov    -0x398(%rbp),%rax
  414869:	48 8b 8d 70 fc ff ff 	mov    -0x390(%rbp),%rcx
  414870:	48 8b 09             	mov    (%rcx),%rcx
  414873:	48 29 c8             	sub    %rcx,%rax
  414876:	48 83 f8 01          	cmp    $0x1,%rax
  41487a:	7d 0c                	jge    414888 <mbedtls_x509_crt_parse_der+0x1618>
  41487c:	c7 85 7c fc ff ff a0 	movl   $0xffffffa0,-0x384(%rbp)
  414883:	ff ff ff 
  414886:	eb 52                	jmp    4148da <mbedtls_x509_crt_parse_der+0x166a>
  414888:	48 8b 85 70 fc ff ff 	mov    -0x390(%rbp),%rax
  41488f:	48 8b 00             	mov    (%rax),%rax
  414892:	0f b6 08             	movzbl (%rax),%ecx
  414895:	3b 8d 5c fc ff ff    	cmp    -0x3a4(%rbp),%ecx
  41489b:	74 0c                	je     4148a9 <mbedtls_x509_crt_parse_der+0x1639>
  41489d:	c7 85 7c fc ff ff 9e 	movl   $0xffffff9e,-0x384(%rbp)
  4148a4:	ff ff ff 
  4148a7:	eb 31                	jmp    4148da <mbedtls_x509_crt_parse_der+0x166a>
  4148a9:	48 8b 85 70 fc ff ff 	mov    -0x390(%rbp),%rax
  4148b0:	48 8b 08             	mov    (%rax),%rcx
  4148b3:	48 83 c1 01          	add    $0x1,%rcx
  4148b7:	48 89 08             	mov    %rcx,(%rax)
  4148ba:	48 8b bd 70 fc ff ff 	mov    -0x390(%rbp),%rdi
  4148c1:	48 8b b5 68 fc ff ff 	mov    -0x398(%rbp),%rsi
  4148c8:	48 8b 95 60 fc ff ff 	mov    -0x3a0(%rbp),%rdx
  4148cf:	e8 fc 57 00 00       	callq  41a0d0 <mbedtls_asn1_get_len>
  4148d4:	89 85 7c fc ff ff    	mov    %eax,-0x384(%rbp)
  4148da:	8b 85 7c fc ff ff    	mov    -0x384(%rbp),%eax
  4148e0:	89 85 ac fb ff ff    	mov    %eax,-0x454(%rbp)
  4148e6:	83 f8 00             	cmp    $0x0,%eax
  4148e9:	74 16                	je     414901 <mbedtls_x509_crt_parse_der+0x1691>
  4148eb:	8b 85 ac fb ff ff    	mov    -0x454(%rbp),%eax
  4148f1:	05 00 db ff ff       	add    $0xffffdb00,%eax
  4148f6:	89 85 cc fb ff ff    	mov    %eax,-0x434(%rbp)
  4148fc:	e9 38 12 00 00       	jmpq   415b39 <mbedtls_x509_crt_parse_der+0x28c9>
  414901:	c7 85 78 fb ff ff 06 	movl   $0x6,-0x488(%rbp)
  414908:	00 00 00 
  41490b:	48 8b 85 c0 fb ff ff 	mov    -0x440(%rbp),%rax
  414912:	48 8b 00             	mov    (%rax),%rax
  414915:	48 89 85 88 fb ff ff 	mov    %rax,-0x478(%rbp)
  41491c:	48 8b 85 80 fb ff ff 	mov    -0x480(%rbp),%rax
  414923:	48 8b 8d c0 fb ff ff 	mov    -0x440(%rbp),%rcx
  41492a:	48 03 01             	add    (%rcx),%rax
  41492d:	48 89 01             	mov    %rax,(%rcx)
  414930:	48 8b 85 c0 fb ff ff 	mov    -0x440(%rbp),%rax
  414937:	48 8b 8d 98 fb ff ff 	mov    -0x468(%rbp),%rcx
  41493e:	48 89 85 a0 fc ff ff 	mov    %rax,-0x360(%rbp)
  414945:	48 89 8d 98 fc ff ff 	mov    %rcx,-0x368(%rbp)
  41494c:	48 8d 85 74 fb ff ff 	lea    -0x48c(%rbp),%rax
  414953:	48 89 85 90 fc ff ff 	mov    %rax,-0x370(%rbp)
  41495a:	48 8b 85 a0 fc ff ff 	mov    -0x360(%rbp),%rax
  414961:	48 8b 8d 98 fc ff ff 	mov    -0x368(%rbp),%rcx
  414968:	48 89 85 c0 fc ff ff 	mov    %rax,-0x340(%rbp)
  41496f:	48 89 8d b8 fc ff ff 	mov    %rcx,-0x348(%rbp)
  414976:	48 8d 85 80 fc ff ff 	lea    -0x380(%rbp),%rax
  41497d:	48 89 85 b0 fc ff ff 	mov    %rax,-0x350(%rbp)
  414984:	c7 85 ac fc ff ff 01 	movl   $0x1,-0x354(%rbp)
  41498b:	00 00 00 
  41498e:	48 8b 85 b8 fc ff ff 	mov    -0x348(%rbp),%rax
  414995:	48 8b 8d c0 fc ff ff 	mov    -0x340(%rbp),%rcx
  41499c:	48 8b 09             	mov    (%rcx),%rcx
  41499f:	48 29 c8             	sub    %rcx,%rax
  4149a2:	48 83 f8 01          	cmp    $0x1,%rax
  4149a6:	7d 0c                	jge    4149b4 <mbedtls_x509_crt_parse_der+0x1744>
  4149a8:	c7 85 c8 fc ff ff a0 	movl   $0xffffffa0,-0x338(%rbp)
  4149af:	ff ff ff 
  4149b2:	eb 52                	jmp    414a06 <mbedtls_x509_crt_parse_der+0x1796>
  4149b4:	48 8b 85 c0 fc ff ff 	mov    -0x340(%rbp),%rax
  4149bb:	48 8b 00             	mov    (%rax),%rax
  4149be:	0f b6 08             	movzbl (%rax),%ecx
  4149c1:	3b 8d ac fc ff ff    	cmp    -0x354(%rbp),%ecx
  4149c7:	74 0c                	je     4149d5 <mbedtls_x509_crt_parse_der+0x1765>
  4149c9:	c7 85 c8 fc ff ff 9e 	movl   $0xffffff9e,-0x338(%rbp)
  4149d0:	ff ff ff 
  4149d3:	eb 31                	jmp    414a06 <mbedtls_x509_crt_parse_der+0x1796>
  4149d5:	48 8b 85 c0 fc ff ff 	mov    -0x340(%rbp),%rax
  4149dc:	48 8b 08             	mov    (%rax),%rcx
  4149df:	48 83 c1 01          	add    $0x1,%rcx
  4149e3:	48 89 08             	mov    %rcx,(%rax)
  4149e6:	48 8b bd c0 fc ff ff 	mov    -0x340(%rbp),%rdi
  4149ed:	48 8b b5 b8 fc ff ff 	mov    -0x348(%rbp),%rsi
  4149f4:	48 8b 95 b0 fc ff ff 	mov    -0x350(%rbp),%rdx
  4149fb:	e8 d0 56 00 00       	callq  41a0d0 <mbedtls_asn1_get_len>
  414a00:	89 85 c8 fc ff ff    	mov    %eax,-0x338(%rbp)
  414a06:	8b 85 c8 fc ff ff    	mov    -0x338(%rbp),%eax
  414a0c:	89 85 8c fc ff ff    	mov    %eax,-0x374(%rbp)
  414a12:	83 f8 00             	cmp    $0x0,%eax
  414a15:	74 0e                	je     414a25 <mbedtls_x509_crt_parse_der+0x17b5>
  414a17:	8b 85 8c fc ff ff    	mov    -0x374(%rbp),%eax
  414a1d:	89 85 a8 fc ff ff    	mov    %eax,-0x358(%rbp)
  414a23:	eb 54                	jmp    414a79 <mbedtls_x509_crt_parse_der+0x1809>
  414a25:	48 83 bd 80 fc ff ff 	cmpq   $0x1,-0x380(%rbp)
  414a2c:	01 
  414a2d:	74 0c                	je     414a3b <mbedtls_x509_crt_parse_der+0x17cb>
  414a2f:	c7 85 a8 fc ff ff 9c 	movl   $0xffffff9c,-0x358(%rbp)
  414a36:	ff ff ff 
  414a39:	eb 3e                	jmp    414a79 <mbedtls_x509_crt_parse_der+0x1809>
  414a3b:	31 c0                	xor    %eax,%eax
  414a3d:	48 8b 8d a0 fc ff ff 	mov    -0x360(%rbp),%rcx
  414a44:	48 8b 09             	mov    (%rcx),%rcx
  414a47:	0f b6 11             	movzbl (%rcx),%edx
  414a4a:	83 fa 00             	cmp    $0x0,%edx
  414a4d:	ba 01 00 00 00       	mov    $0x1,%edx
  414a52:	0f 45 c2             	cmovne %edx,%eax
  414a55:	48 8b 8d 90 fc ff ff 	mov    -0x370(%rbp),%rcx
  414a5c:	89 01                	mov    %eax,(%rcx)
  414a5e:	48 8b 8d a0 fc ff ff 	mov    -0x360(%rbp),%rcx
  414a65:	48 8b 31             	mov    (%rcx),%rsi
  414a68:	48 83 c6 01          	add    $0x1,%rsi
  414a6c:	48 89 31             	mov    %rsi,(%rcx)
  414a6f:	c7 85 a8 fc ff ff 00 	movl   $0x0,-0x358(%rbp)
  414a76:	00 00 00 
  414a79:	8b 85 a8 fc ff ff    	mov    -0x358(%rbp),%eax
  414a7f:	89 85 ac fb ff ff    	mov    %eax,-0x454(%rbp)
  414a85:	83 f8 00             	cmp    $0x0,%eax
  414a88:	74 1f                	je     414aa9 <mbedtls_x509_crt_parse_der+0x1839>
  414a8a:	83 bd ac fb ff ff 9e 	cmpl   $0xffffff9e,-0x454(%rbp)
  414a91:	74 16                	je     414aa9 <mbedtls_x509_crt_parse_der+0x1839>
  414a93:	8b 85 ac fb ff ff    	mov    -0x454(%rbp),%eax
  414a99:	05 00 db ff ff       	add    $0xffffdb00,%eax
  414a9e:	89 85 cc fb ff ff    	mov    %eax,-0x434(%rbp)
  414aa4:	e9 90 10 00 00       	jmpq   415b39 <mbedtls_x509_crt_parse_der+0x28c9>
  414aa9:	48 8b 85 c0 fb ff ff 	mov    -0x440(%rbp),%rax
  414ab0:	48 8b 8d 98 fb ff ff 	mov    -0x468(%rbp),%rcx
  414ab7:	48 89 85 e0 fc ff ff 	mov    %rax,-0x320(%rbp)
  414abe:	48 89 8d d8 fc ff ff 	mov    %rcx,-0x328(%rbp)
  414ac5:	48 8d 85 a0 fb ff ff 	lea    -0x460(%rbp),%rax
  414acc:	48 89 85 d0 fc ff ff 	mov    %rax,-0x330(%rbp)
  414ad3:	c7 85 cc fc ff ff 04 	movl   $0x4,-0x334(%rbp)
  414ada:	00 00 00 
  414add:	48 8b 85 d8 fc ff ff 	mov    -0x328(%rbp),%rax
  414ae4:	48 8b 8d e0 fc ff ff 	mov    -0x320(%rbp),%rcx
  414aeb:	48 8b 09             	mov    (%rcx),%rcx
  414aee:	48 29 c8             	sub    %rcx,%rax
  414af1:	48 83 f8 01          	cmp    $0x1,%rax
  414af5:	7d 0c                	jge    414b03 <mbedtls_x509_crt_parse_der+0x1893>
  414af7:	c7 85 ec fc ff ff a0 	movl   $0xffffffa0,-0x314(%rbp)
  414afe:	ff ff ff 
  414b01:	eb 52                	jmp    414b55 <mbedtls_x509_crt_parse_der+0x18e5>
  414b03:	48 8b 85 e0 fc ff ff 	mov    -0x320(%rbp),%rax
  414b0a:	48 8b 00             	mov    (%rax),%rax
  414b0d:	0f b6 08             	movzbl (%rax),%ecx
  414b10:	3b 8d cc fc ff ff    	cmp    -0x334(%rbp),%ecx
  414b16:	74 0c                	je     414b24 <mbedtls_x509_crt_parse_der+0x18b4>
  414b18:	c7 85 ec fc ff ff 9e 	movl   $0xffffff9e,-0x314(%rbp)
  414b1f:	ff ff ff 
  414b22:	eb 31                	jmp    414b55 <mbedtls_x509_crt_parse_der+0x18e5>
  414b24:	48 8b 85 e0 fc ff ff 	mov    -0x320(%rbp),%rax
  414b2b:	48 8b 08             	mov    (%rax),%rcx
  414b2e:	48 83 c1 01          	add    $0x1,%rcx
  414b32:	48 89 08             	mov    %rcx,(%rax)
  414b35:	48 8b bd e0 fc ff ff 	mov    -0x320(%rbp),%rdi
  414b3c:	48 8b b5 d8 fc ff ff 	mov    -0x328(%rbp),%rsi
  414b43:	48 8b 95 d0 fc ff ff 	mov    -0x330(%rbp),%rdx
  414b4a:	e8 81 55 00 00       	callq  41a0d0 <mbedtls_asn1_get_len>
  414b4f:	89 85 ec fc ff ff    	mov    %eax,-0x314(%rbp)
  414b55:	8b 85 ec fc ff ff    	mov    -0x314(%rbp),%eax
  414b5b:	89 85 ac fb ff ff    	mov    %eax,-0x454(%rbp)
  414b61:	83 f8 00             	cmp    $0x0,%eax
  414b64:	74 16                	je     414b7c <mbedtls_x509_crt_parse_der+0x190c>
  414b66:	8b 85 ac fb ff ff    	mov    -0x454(%rbp),%eax
  414b6c:	05 00 db ff ff       	add    $0xffffdb00,%eax
  414b71:	89 85 cc fb ff ff    	mov    %eax,-0x434(%rbp)
  414b77:	e9 bd 0f 00 00       	jmpq   415b39 <mbedtls_x509_crt_parse_der+0x28c9>
  414b7c:	48 8b 85 c0 fb ff ff 	mov    -0x440(%rbp),%rax
  414b83:	48 8b 00             	mov    (%rax),%rax
  414b86:	48 03 85 a0 fb ff ff 	add    -0x460(%rbp),%rax
  414b8d:	48 89 85 90 fb ff ff 	mov    %rax,-0x470(%rbp)
  414b94:	48 8b 85 90 fb ff ff 	mov    -0x470(%rbp),%rax
  414b9b:	48 3b 85 98 fb ff ff 	cmp    -0x468(%rbp),%rax
  414ba2:	74 0f                	je     414bb3 <mbedtls_x509_crt_parse_der+0x1943>
  414ba4:	c7 85 cc fb ff ff 9a 	movl   $0xffffda9a,-0x434(%rbp)
  414bab:	da ff ff 
  414bae:	e9 86 0f 00 00       	jmpq   415b39 <mbedtls_x509_crt_parse_der+0x28c9>
  414bb3:	48 b8 f0 dd 44 00 00 	movabs $0x44ddf0,%rax
  414bba:	00 00 00 
  414bbd:	48 8d 8d 78 fb ff ff 	lea    -0x488(%rbp),%rcx
  414bc4:	48 89 8d 00 fd ff ff 	mov    %rcx,-0x300(%rbp)
  414bcb:	48 8d 8d 70 fb ff ff 	lea    -0x490(%rbp),%rcx
  414bd2:	48 89 8d f8 fc ff ff 	mov    %rcx,-0x308(%rbp)
  414bd9:	48 8b 8d 00 fd ff ff 	mov    -0x300(%rbp),%rcx
  414be0:	48 89 8d 20 fd ff ff 	mov    %rcx,-0x2e0(%rbp)
  414be7:	48 89 85 18 fd ff ff 	mov    %rax,-0x2e8(%rbp)
  414bee:	48 8b 85 18 fd ff ff 	mov    -0x2e8(%rbp),%rax
  414bf5:	48 89 85 10 fd ff ff 	mov    %rax,-0x2f0(%rbp)
  414bfc:	48 83 bd 18 fd ff ff 	cmpq   $0x0,-0x2e8(%rbp)
  414c03:	00 
  414c04:	74 0a                	je     414c10 <mbedtls_x509_crt_parse_der+0x19a0>
  414c06:	48 83 bd 20 fd ff ff 	cmpq   $0x0,-0x2e0(%rbp)
  414c0d:	00 
  414c0e:	75 10                	jne    414c20 <mbedtls_x509_crt_parse_der+0x19b0>
  414c10:	48 c7 85 28 fd ff ff 	movq   $0x0,-0x2d8(%rbp)
  414c17:	00 00 00 00 
  414c1b:	e9 91 00 00 00       	jmpq   414cb1 <mbedtls_x509_crt_parse_der+0x1a41>
  414c20:	eb 00                	jmp    414c22 <mbedtls_x509_crt_parse_der+0x19b2>
  414c22:	48 8b 85 10 fd ff ff 	mov    -0x2f0(%rbp),%rax
  414c29:	48 83 38 00          	cmpq   $0x0,(%rax)
  414c2d:	74 77                	je     414ca6 <mbedtls_x509_crt_parse_der+0x1a36>
  414c2f:	48 8b 85 10 fd ff ff 	mov    -0x2f0(%rbp),%rax
  414c36:	48 8b 40 08          	mov    0x8(%rax),%rax
  414c3a:	48 8b 8d 20 fd ff ff 	mov    -0x2e0(%rbp),%rcx
  414c41:	48 3b 41 08          	cmp    0x8(%rcx),%rax
  414c45:	75 3a                	jne    414c81 <mbedtls_x509_crt_parse_der+0x1a11>
  414c47:	48 8b 85 10 fd ff ff 	mov    -0x2f0(%rbp),%rax
  414c4e:	48 8b 38             	mov    (%rax),%rdi
  414c51:	48 8b 85 20 fd ff ff 	mov    -0x2e0(%rbp),%rax
  414c58:	48 8b 70 10          	mov    0x10(%rax),%rsi
  414c5c:	48 8b 85 20 fd ff ff 	mov    -0x2e0(%rbp),%rax
  414c63:	48 8b 50 08          	mov    0x8(%rax),%rdx
  414c67:	e8 64 c5 fe ff       	callq  4011d0 <memcmp@plt>
  414c6c:	83 f8 00             	cmp    $0x0,%eax
  414c6f:	75 10                	jne    414c81 <mbedtls_x509_crt_parse_der+0x1a11>
  414c71:	48 8b 85 18 fd ff ff 	mov    -0x2e8(%rbp),%rax
  414c78:	48 89 85 28 fd ff ff 	mov    %rax,-0x2d8(%rbp)
  414c7f:	eb 30                	jmp    414cb1 <mbedtls_x509_crt_parse_der+0x1a41>
  414c81:	48 8b 85 18 fd ff ff 	mov    -0x2e8(%rbp),%rax
  414c88:	48 83 c0 28          	add    $0x28,%rax
  414c8c:	48 89 85 18 fd ff ff 	mov    %rax,-0x2e8(%rbp)
  414c93:	48 8b 85 18 fd ff ff 	mov    -0x2e8(%rbp),%rax
  414c9a:	48 89 85 10 fd ff ff 	mov    %rax,-0x2f0(%rbp)
  414ca1:	e9 7c ff ff ff       	jmpq   414c22 <mbedtls_x509_crt_parse_der+0x19b2>
  414ca6:	48 c7 85 28 fd ff ff 	movq   $0x0,-0x2d8(%rbp)
  414cad:	00 00 00 00 
  414cb1:	48 8b 85 28 fd ff ff 	mov    -0x2d8(%rbp),%rax
  414cb8:	48 89 85 f0 fc ff ff 	mov    %rax,-0x310(%rbp)
  414cbf:	48 83 bd f0 fc ff ff 	cmpq   $0x0,-0x310(%rbp)
  414cc6:	00 
  414cc7:	75 0c                	jne    414cd5 <mbedtls_x509_crt_parse_der+0x1a65>
  414cc9:	c7 85 0c fd ff ff d2 	movl   $0xffffffd2,-0x2f4(%rbp)
  414cd0:	ff ff ff 
  414cd3:	eb 1d                	jmp    414cf2 <mbedtls_x509_crt_parse_der+0x1a82>
  414cd5:	48 8b 85 f0 fc ff ff 	mov    -0x310(%rbp),%rax
  414cdc:	8b 48 20             	mov    0x20(%rax),%ecx
  414cdf:	48 8b 85 f8 fc ff ff 	mov    -0x308(%rbp),%rax
  414ce6:	89 08                	mov    %ecx,(%rax)
  414ce8:	c7 85 0c fd ff ff 00 	movl   $0x0,-0x2f4(%rbp)
  414cef:	00 00 00 
  414cf2:	8b 85 0c fd ff ff    	mov    -0x2f4(%rbp),%eax
  414cf8:	89 85 ac fb ff ff    	mov    %eax,-0x454(%rbp)
  414cfe:	83 bd ac fb ff ff 00 	cmpl   $0x0,-0x454(%rbp)
  414d05:	74 2e                	je     414d35 <mbedtls_x509_crt_parse_der+0x1ac5>
  414d07:	48 8b 85 90 fb ff ff 	mov    -0x470(%rbp),%rax
  414d0e:	48 8b 8d c0 fb ff ff 	mov    -0x440(%rbp),%rcx
  414d15:	48 89 01             	mov    %rax,(%rcx)
  414d18:	83 bd 74 fb ff ff 00 	cmpl   $0x0,-0x48c(%rbp)
  414d1f:	74 0f                	je     414d30 <mbedtls_x509_crt_parse_der+0x1ac0>
  414d21:	c7 85 cc fb ff ff 9e 	movl   $0xffffda9e,-0x434(%rbp)
  414d28:	da ff ff 
  414d2b:	e9 09 0e 00 00       	jmpq   415b39 <mbedtls_x509_crt_parse_der+0x28c9>
  414d30:	e9 c7 f9 ff ff       	jmpq   4146fc <mbedtls_x509_crt_parse_der+0x148c>
  414d35:	48 8b 85 b0 fb ff ff 	mov    -0x450(%rbp),%rax
  414d3c:	8b 88 c0 01 00 00    	mov    0x1c0(%rax),%ecx
  414d42:	23 8d 70 fb ff ff    	and    -0x490(%rbp),%ecx
  414d48:	83 f9 00             	cmp    $0x0,%ecx
  414d4b:	74 0f                	je     414d5c <mbedtls_x509_crt_parse_der+0x1aec>
  414d4d:	c7 85 cc fb ff ff 00 	movl   $0xffffdb00,-0x434(%rbp)
  414d54:	db ff ff 
  414d57:	e9 dd 0d 00 00       	jmpq   415b39 <mbedtls_x509_crt_parse_der+0x28c9>
  414d5c:	8b 85 70 fb ff ff    	mov    -0x490(%rbp),%eax
  414d62:	48 8b 8d b0 fb ff ff 	mov    -0x450(%rbp),%rcx
  414d69:	8b 91 c0 01 00 00    	mov    0x1c0(%rcx),%edx
  414d6f:	09 c2                	or     %eax,%edx
  414d71:	89 91 c0 01 00 00    	mov    %edx,0x1c0(%rcx)
  414d77:	8b 85 70 fb ff ff    	mov    -0x490(%rbp),%eax
  414d7d:	89 c2                	mov    %eax,%edx
  414d7f:	83 ea 04             	sub    $0x4,%edx
  414d82:	89 85 98 f8 ff ff    	mov    %eax,-0x768(%rbp)
  414d88:	89 95 94 f8 ff ff    	mov    %edx,-0x76c(%rbp)
  414d8e:	0f 84 2a 04 00 00    	je     4151be <mbedtls_x509_crt_parse_der+0x1f4e>
  414d94:	eb 00                	jmp    414d96 <mbedtls_x509_crt_parse_der+0x1b26>
  414d96:	8b 85 98 f8 ff ff    	mov    -0x768(%rbp),%eax
  414d9c:	83 e8 20             	sub    $0x20,%eax
  414d9f:	89 85 90 f8 ff ff    	mov    %eax,-0x770(%rbp)
  414da5:	0f 84 1c 09 00 00    	je     4156c7 <mbedtls_x509_crt_parse_der+0x2457>
  414dab:	eb 00                	jmp    414dad <mbedtls_x509_crt_parse_der+0x1b3d>
  414dad:	8b 85 98 f8 ff ff    	mov    -0x768(%rbp),%eax
  414db3:	2d 00 01 00 00       	sub    $0x100,%eax
  414db8:	89 85 8c f8 ff ff    	mov    %eax,-0x774(%rbp)
  414dbe:	74 37                	je     414df7 <mbedtls_x509_crt_parse_der+0x1b87>
  414dc0:	eb 00                	jmp    414dc2 <mbedtls_x509_crt_parse_der+0x1b52>
  414dc2:	8b 85 98 f8 ff ff    	mov    -0x768(%rbp),%eax
  414dc8:	2d 00 08 00 00       	sub    $0x800,%eax
  414dcd:	89 85 88 f8 ff ff    	mov    %eax,-0x778(%rbp)
  414dd3:	0f 84 4b 05 00 00    	je     415324 <mbedtls_x509_crt_parse_der+0x20b4>
  414dd9:	eb 00                	jmp    414ddb <mbedtls_x509_crt_parse_der+0x1b6b>
  414ddb:	8b 85 98 f8 ff ff    	mov    -0x768(%rbp),%eax
  414de1:	2d 00 00 01 00       	sub    $0x10000,%eax
  414de6:	89 85 84 f8 ff ff    	mov    %eax,-0x77c(%rbp)
  414dec:	0f 84 32 0c 00 00    	je     415a24 <mbedtls_x509_crt_parse_der+0x27b4>
  414df2:	e9 08 0d 00 00       	jmpq   415aff <mbedtls_x509_crt_parse_der+0x288f>
  414df7:	48 8b 85 c0 fb ff ff 	mov    -0x440(%rbp),%rax
  414dfe:	48 8b 8d 90 fb ff ff 	mov    -0x470(%rbp),%rcx
  414e05:	48 8b 95 b0 fb ff ff 	mov    -0x450(%rbp),%rdx
  414e0c:	48 81 c2 c4 01 00 00 	add    $0x1c4,%rdx
  414e13:	48 8b b5 b0 fb ff ff 	mov    -0x450(%rbp),%rsi
  414e1a:	48 81 c6 c8 01 00 00 	add    $0x1c8,%rsi
  414e21:	48 89 85 58 fd ff ff 	mov    %rax,-0x2a8(%rbp)
  414e28:	48 89 8d 50 fd ff ff 	mov    %rcx,-0x2b0(%rbp)
  414e2f:	48 89 95 48 fd ff ff 	mov    %rdx,-0x2b8(%rbp)
  414e36:	48 89 b5 40 fd ff ff 	mov    %rsi,-0x2c0(%rbp)
  414e3d:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
  414e44:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  414e4a:	48 8b 85 40 fd ff ff 	mov    -0x2c0(%rbp),%rax
  414e51:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  414e57:	48 8b 85 58 fd ff ff 	mov    -0x2a8(%rbp),%rax
  414e5e:	48 8b 8d 50 fd ff ff 	mov    -0x2b0(%rbp),%rcx
  414e65:	48 89 85 78 fd ff ff 	mov    %rax,-0x288(%rbp)
  414e6c:	48 89 8d 70 fd ff ff 	mov    %rcx,-0x290(%rbp)
  414e73:	48 8d 85 30 fd ff ff 	lea    -0x2d0(%rbp),%rax
  414e7a:	48 89 85 68 fd ff ff 	mov    %rax,-0x298(%rbp)
  414e81:	c7 85 64 fd ff ff 30 	movl   $0x30,-0x29c(%rbp)
  414e88:	00 00 00 
  414e8b:	48 8b 85 70 fd ff ff 	mov    -0x290(%rbp),%rax
  414e92:	48 8b 8d 78 fd ff ff 	mov    -0x288(%rbp),%rcx
  414e99:	48 8b 09             	mov    (%rcx),%rcx
  414e9c:	48 29 c8             	sub    %rcx,%rax
  414e9f:	48 83 f8 01          	cmp    $0x1,%rax
  414ea3:	7d 0c                	jge    414eb1 <mbedtls_x509_crt_parse_der+0x1c41>
  414ea5:	c7 85 84 fd ff ff a0 	movl   $0xffffffa0,-0x27c(%rbp)
  414eac:	ff ff ff 
  414eaf:	eb 52                	jmp    414f03 <mbedtls_x509_crt_parse_der+0x1c93>
  414eb1:	48 8b 85 78 fd ff ff 	mov    -0x288(%rbp),%rax
  414eb8:	48 8b 00             	mov    (%rax),%rax
  414ebb:	0f b6 08             	movzbl (%rax),%ecx
  414ebe:	3b 8d 64 fd ff ff    	cmp    -0x29c(%rbp),%ecx
  414ec4:	74 0c                	je     414ed2 <mbedtls_x509_crt_parse_der+0x1c62>
  414ec6:	c7 85 84 fd ff ff 9e 	movl   $0xffffff9e,-0x27c(%rbp)
  414ecd:	ff ff ff 
  414ed0:	eb 31                	jmp    414f03 <mbedtls_x509_crt_parse_der+0x1c93>
  414ed2:	48 8b 85 78 fd ff ff 	mov    -0x288(%rbp),%rax
  414ed9:	48 8b 08             	mov    (%rax),%rcx
  414edc:	48 83 c1 01          	add    $0x1,%rcx
  414ee0:	48 89 08             	mov    %rcx,(%rax)
  414ee3:	48 8b bd 78 fd ff ff 	mov    -0x288(%rbp),%rdi
  414eea:	48 8b b5 70 fd ff ff 	mov    -0x290(%rbp),%rsi
  414ef1:	48 8b 95 68 fd ff ff 	mov    -0x298(%rbp),%rdx
  414ef8:	e8 d3 51 00 00       	callq  41a0d0 <mbedtls_asn1_get_len>
  414efd:	89 85 84 fd ff ff    	mov    %eax,-0x27c(%rbp)
  414f03:	8b 85 84 fd ff ff    	mov    -0x27c(%rbp),%eax
  414f09:	89 85 3c fd ff ff    	mov    %eax,-0x2c4(%rbp)
  414f0f:	83 f8 00             	cmp    $0x0,%eax
  414f12:	74 16                	je     414f2a <mbedtls_x509_crt_parse_der+0x1cba>
  414f14:	8b 85 3c fd ff ff    	mov    -0x2c4(%rbp),%eax
  414f1a:	05 00 db ff ff       	add    $0xffffdb00,%eax
  414f1f:	89 85 60 fd ff ff    	mov    %eax,-0x2a0(%rbp)
  414f25:	e9 6d 02 00 00       	jmpq   415197 <mbedtls_x509_crt_parse_der+0x1f27>
  414f2a:	48 8b 85 58 fd ff ff 	mov    -0x2a8(%rbp),%rax
  414f31:	48 8b 00             	mov    (%rax),%rax
  414f34:	48 3b 85 50 fd ff ff 	cmp    -0x2b0(%rbp),%rax
  414f3b:	75 0f                	jne    414f4c <mbedtls_x509_crt_parse_der+0x1cdc>
  414f3d:	c7 85 60 fd ff ff 00 	movl   $0x0,-0x2a0(%rbp)
  414f44:	00 00 00 
  414f47:	e9 4b 02 00 00       	jmpq   415197 <mbedtls_x509_crt_parse_der+0x1f27>
  414f4c:	48 8b 85 58 fd ff ff 	mov    -0x2a8(%rbp),%rax
  414f53:	48 8b 8d 50 fd ff ff 	mov    -0x2b0(%rbp),%rcx
  414f5a:	48 8b 95 48 fd ff ff 	mov    -0x2b8(%rbp),%rdx
  414f61:	48 89 85 a8 fd ff ff 	mov    %rax,-0x258(%rbp)
  414f68:	48 89 8d a0 fd ff ff 	mov    %rcx,-0x260(%rbp)
  414f6f:	48 89 95 98 fd ff ff 	mov    %rdx,-0x268(%rbp)
  414f76:	48 8b 85 a8 fd ff ff 	mov    -0x258(%rbp),%rax
  414f7d:	48 8b 8d a0 fd ff ff 	mov    -0x260(%rbp),%rcx
  414f84:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
  414f8b:	48 89 8d c0 fd ff ff 	mov    %rcx,-0x240(%rbp)
  414f92:	48 8d 85 88 fd ff ff 	lea    -0x278(%rbp),%rax
  414f99:	48 89 85 b8 fd ff ff 	mov    %rax,-0x248(%rbp)
  414fa0:	c7 85 b4 fd ff ff 01 	movl   $0x1,-0x24c(%rbp)
  414fa7:	00 00 00 
  414faa:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
  414fb1:	48 8b 8d c8 fd ff ff 	mov    -0x238(%rbp),%rcx
  414fb8:	48 8b 09             	mov    (%rcx),%rcx
  414fbb:	48 29 c8             	sub    %rcx,%rax
  414fbe:	48 83 f8 01          	cmp    $0x1,%rax
  414fc2:	7d 0c                	jge    414fd0 <mbedtls_x509_crt_parse_der+0x1d60>
  414fc4:	c7 85 d4 fd ff ff a0 	movl   $0xffffffa0,-0x22c(%rbp)
  414fcb:	ff ff ff 
  414fce:	eb 52                	jmp    415022 <mbedtls_x509_crt_parse_der+0x1db2>
  414fd0:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
  414fd7:	48 8b 00             	mov    (%rax),%rax
  414fda:	0f b6 08             	movzbl (%rax),%ecx
  414fdd:	3b 8d b4 fd ff ff    	cmp    -0x24c(%rbp),%ecx
  414fe3:	74 0c                	je     414ff1 <mbedtls_x509_crt_parse_der+0x1d81>
  414fe5:	c7 85 d4 fd ff ff 9e 	movl   $0xffffff9e,-0x22c(%rbp)
  414fec:	ff ff ff 
  414fef:	eb 31                	jmp    415022 <mbedtls_x509_crt_parse_der+0x1db2>
  414ff1:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
  414ff8:	48 8b 08             	mov    (%rax),%rcx
  414ffb:	48 83 c1 01          	add    $0x1,%rcx
  414fff:	48 89 08             	mov    %rcx,(%rax)
  415002:	48 8b bd c8 fd ff ff 	mov    -0x238(%rbp),%rdi
  415009:	48 8b b5 c0 fd ff ff 	mov    -0x240(%rbp),%rsi
  415010:	48 8b 95 b8 fd ff ff 	mov    -0x248(%rbp),%rdx
  415017:	e8 b4 50 00 00       	callq  41a0d0 <mbedtls_asn1_get_len>
  41501c:	89 85 d4 fd ff ff    	mov    %eax,-0x22c(%rbp)
  415022:	8b 85 d4 fd ff ff    	mov    -0x22c(%rbp),%eax
  415028:	89 85 94 fd ff ff    	mov    %eax,-0x26c(%rbp)
  41502e:	83 f8 00             	cmp    $0x0,%eax
  415031:	74 0e                	je     415041 <mbedtls_x509_crt_parse_der+0x1dd1>
  415033:	8b 85 94 fd ff ff    	mov    -0x26c(%rbp),%eax
  415039:	89 85 b0 fd ff ff    	mov    %eax,-0x250(%rbp)
  41503f:	eb 54                	jmp    415095 <mbedtls_x509_crt_parse_der+0x1e25>
  415041:	48 83 bd 88 fd ff ff 	cmpq   $0x1,-0x278(%rbp)
  415048:	01 
  415049:	74 0c                	je     415057 <mbedtls_x509_crt_parse_der+0x1de7>
  41504b:	c7 85 b0 fd ff ff 9c 	movl   $0xffffff9c,-0x250(%rbp)
  415052:	ff ff ff 
  415055:	eb 3e                	jmp    415095 <mbedtls_x509_crt_parse_der+0x1e25>
  415057:	31 c0                	xor    %eax,%eax
  415059:	48 8b 8d a8 fd ff ff 	mov    -0x258(%rbp),%rcx
  415060:	48 8b 09             	mov    (%rcx),%rcx
  415063:	0f b6 11             	movzbl (%rcx),%edx
  415066:	83 fa 00             	cmp    $0x0,%edx
  415069:	ba 01 00 00 00       	mov    $0x1,%edx
  41506e:	0f 45 c2             	cmovne %edx,%eax
  415071:	48 8b 8d 98 fd ff ff 	mov    -0x268(%rbp),%rcx
  415078:	89 01                	mov    %eax,(%rcx)
  41507a:	48 8b 8d a8 fd ff ff 	mov    -0x258(%rbp),%rcx
  415081:	48 8b 31             	mov    (%rcx),%rsi
  415084:	48 83 c6 01          	add    $0x1,%rsi
  415088:	48 89 31             	mov    %rsi,(%rcx)
  41508b:	c7 85 b0 fd ff ff 00 	movl   $0x0,-0x250(%rbp)
  415092:	00 00 00 
  415095:	8b 85 b0 fd ff ff    	mov    -0x250(%rbp),%eax
  41509b:	89 85 3c fd ff ff    	mov    %eax,-0x2c4(%rbp)
  4150a1:	83 f8 00             	cmp    $0x0,%eax
  4150a4:	74 63                	je     415109 <mbedtls_x509_crt_parse_der+0x1e99>
  4150a6:	83 bd 3c fd ff ff 9e 	cmpl   $0xffffff9e,-0x2c4(%rbp)
  4150ad:	75 20                	jne    4150cf <mbedtls_x509_crt_parse_der+0x1e5f>
  4150af:	48 8b bd 58 fd ff ff 	mov    -0x2a8(%rbp),%rdi
  4150b6:	48 8b b5 50 fd ff ff 	mov    -0x2b0(%rbp),%rsi
  4150bd:	48 8b 95 48 fd ff ff 	mov    -0x2b8(%rbp),%rdx
  4150c4:	e8 87 52 00 00       	callq  41a350 <mbedtls_asn1_get_int>
  4150c9:	89 85 3c fd ff ff    	mov    %eax,-0x2c4(%rbp)
  4150cf:	83 bd 3c fd ff ff 00 	cmpl   $0x0,-0x2c4(%rbp)
  4150d6:	74 16                	je     4150ee <mbedtls_x509_crt_parse_der+0x1e7e>
  4150d8:	8b 85 3c fd ff ff    	mov    -0x2c4(%rbp),%eax
  4150de:	05 00 db ff ff       	add    $0xffffdb00,%eax
  4150e3:	89 85 60 fd ff ff    	mov    %eax,-0x2a0(%rbp)
  4150e9:	e9 a9 00 00 00       	jmpq   415197 <mbedtls_x509_crt_parse_der+0x1f27>
  4150ee:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
  4150f5:	83 38 00             	cmpl   $0x0,(%rax)
  4150f8:	74 0d                	je     415107 <mbedtls_x509_crt_parse_der+0x1e97>
  4150fa:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
  415101:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  415107:	eb 00                	jmp    415109 <mbedtls_x509_crt_parse_der+0x1e99>
  415109:	48 8b 85 58 fd ff ff 	mov    -0x2a8(%rbp),%rax
  415110:	48 8b 00             	mov    (%rax),%rax
  415113:	48 3b 85 50 fd ff ff 	cmp    -0x2b0(%rbp),%rax
  41511a:	75 0c                	jne    415128 <mbedtls_x509_crt_parse_der+0x1eb8>
  41511c:	c7 85 60 fd ff ff 00 	movl   $0x0,-0x2a0(%rbp)
  415123:	00 00 00 
  415126:	eb 6f                	jmp    415197 <mbedtls_x509_crt_parse_der+0x1f27>
  415128:	48 8b bd 58 fd ff ff 	mov    -0x2a8(%rbp),%rdi
  41512f:	48 8b b5 50 fd ff ff 	mov    -0x2b0(%rbp),%rsi
  415136:	48 8b 95 40 fd ff ff 	mov    -0x2c0(%rbp),%rdx
  41513d:	e8 0e 52 00 00       	callq  41a350 <mbedtls_asn1_get_int>
  415142:	89 85 3c fd ff ff    	mov    %eax,-0x2c4(%rbp)
  415148:	83 f8 00             	cmp    $0x0,%eax
  41514b:	74 13                	je     415160 <mbedtls_x509_crt_parse_der+0x1ef0>
  41514d:	8b 85 3c fd ff ff    	mov    -0x2c4(%rbp),%eax
  415153:	05 00 db ff ff       	add    $0xffffdb00,%eax
  415158:	89 85 60 fd ff ff    	mov    %eax,-0x2a0(%rbp)
  41515e:	eb 37                	jmp    415197 <mbedtls_x509_crt_parse_der+0x1f27>
  415160:	48 8b 85 58 fd ff ff 	mov    -0x2a8(%rbp),%rax
  415167:	48 8b 00             	mov    (%rax),%rax
  41516a:	48 3b 85 50 fd ff ff 	cmp    -0x2b0(%rbp),%rax
  415171:	74 0c                	je     41517f <mbedtls_x509_crt_parse_der+0x1f0f>
  415173:	c7 85 60 fd ff ff 9a 	movl   $0xffffda9a,-0x2a0(%rbp)
  41517a:	da ff ff 
  41517d:	eb 18                	jmp    415197 <mbedtls_x509_crt_parse_der+0x1f27>
  41517f:	48 8b 85 40 fd ff ff 	mov    -0x2c0(%rbp),%rax
  415186:	8b 08                	mov    (%rax),%ecx
  415188:	83 c1 01             	add    $0x1,%ecx
  41518b:	89 08                	mov    %ecx,(%rax)
  41518d:	c7 85 60 fd ff ff 00 	movl   $0x0,-0x2a0(%rbp)
  415194:	00 00 00 
  415197:	8b 85 60 fd ff ff    	mov    -0x2a0(%rbp),%eax
  41519d:	89 85 ac fb ff ff    	mov    %eax,-0x454(%rbp)
  4151a3:	83 f8 00             	cmp    $0x0,%eax
  4151a6:	74 11                	je     4151b9 <mbedtls_x509_crt_parse_der+0x1f49>
  4151a8:	8b 85 ac fb ff ff    	mov    -0x454(%rbp),%eax
  4151ae:	89 85 cc fb ff ff    	mov    %eax,-0x434(%rbp)
  4151b4:	e9 80 09 00 00       	jmpq   415b39 <mbedtls_x509_crt_parse_der+0x28c9>
  4151b9:	e9 4d 09 00 00       	jmpq   415b0b <mbedtls_x509_crt_parse_der+0x289b>
  4151be:	31 f6                	xor    %esi,%esi
  4151c0:	b8 18 00 00 00       	mov    $0x18,%eax
  4151c5:	89 c2                	mov    %eax,%edx
  4151c7:	48 8b 8d c0 fb ff ff 	mov    -0x440(%rbp),%rcx
  4151ce:	48 8b bd 90 fb ff ff 	mov    -0x470(%rbp),%rdi
  4151d5:	4c 8b 85 b0 fb ff ff 	mov    -0x450(%rbp),%r8
  4151dc:	49 81 c0 cc 01 00 00 	add    $0x1cc,%r8
  4151e3:	48 89 8d 10 fe ff ff 	mov    %rcx,-0x1f0(%rbp)
  4151ea:	48 89 bd 08 fe ff ff 	mov    %rdi,-0x1f8(%rbp)
  4151f1:	4c 89 85 00 fe ff ff 	mov    %r8,-0x200(%rbp)
  4151f8:	48 8d 8d d8 fd ff ff 	lea    -0x228(%rbp),%rcx
  4151ff:	48 89 cf             	mov    %rcx,%rdi
  415202:	48 89 8d 78 f8 ff ff 	mov    %rcx,-0x788(%rbp)
  415209:	e8 12 be fe ff       	callq  401020 <memset@plt>
  41520e:	48 8b bd 10 fe ff ff 	mov    -0x1f0(%rbp),%rdi
  415215:	48 8b b5 08 fe ff ff 	mov    -0x1f8(%rbp),%rsi
  41521c:	48 8b 95 78 f8 ff ff 	mov    -0x788(%rbp),%rdx
  415223:	e8 58 52 00 00       	callq  41a480 <mbedtls_asn1_get_bitstring>
  415228:	89 85 fc fd ff ff    	mov    %eax,-0x204(%rbp)
  41522e:	83 f8 00             	cmp    $0x0,%eax
  415231:	74 16                	je     415249 <mbedtls_x509_crt_parse_der+0x1fd9>
  415233:	8b 85 fc fd ff ff    	mov    -0x204(%rbp),%eax
  415239:	05 00 db ff ff       	add    $0xffffdb00,%eax
  41523e:	89 85 18 fe ff ff    	mov    %eax,-0x1e8(%rbp)
  415244:	e9 b4 00 00 00       	jmpq   4152fd <mbedtls_x509_crt_parse_der+0x208d>
  415249:	48 83 bd d8 fd ff ff 	cmpq   $0x1,-0x228(%rbp)
  415250:	01 
  415251:	73 0f                	jae    415262 <mbedtls_x509_crt_parse_der+0x1ff2>
  415253:	c7 85 18 fe ff ff 9c 	movl   $0xffffda9c,-0x1e8(%rbp)
  41525a:	da ff ff 
  41525d:	e9 9b 00 00 00       	jmpq   4152fd <mbedtls_x509_crt_parse_der+0x208d>
  415262:	48 8b 85 00 fe ff ff 	mov    -0x200(%rbp),%rax
  415269:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  41526f:	48 c7 85 f0 fd ff ff 	movq   $0x0,-0x210(%rbp)
  415276:	00 00 00 00 
  41527a:	31 c0                	xor    %eax,%eax
  41527c:	88 c1                	mov    %al,%cl
  41527e:	48 8b 95 f0 fd ff ff 	mov    -0x210(%rbp),%rdx
  415285:	48 3b 95 d8 fd ff ff 	cmp    -0x228(%rbp),%rdx
  41528c:	88 8d 77 f8 ff ff    	mov    %cl,-0x789(%rbp)
  415292:	73 11                	jae    4152a5 <mbedtls_x509_crt_parse_der+0x2035>
  415294:	48 83 bd f0 fd ff ff 	cmpq   $0x4,-0x210(%rbp)
  41529b:	04 
  41529c:	0f 92 c0             	setb   %al
  41529f:	88 85 77 f8 ff ff    	mov    %al,-0x789(%rbp)
  4152a5:	8a 85 77 f8 ff ff    	mov    -0x789(%rbp),%al
  4152ab:	a8 01                	test   $0x1,%al
  4152ad:	75 02                	jne    4152b1 <mbedtls_x509_crt_parse_der+0x2041>
  4152af:	eb 42                	jmp    4152f3 <mbedtls_x509_crt_parse_der+0x2083>
  4152b1:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
  4152b8:	48 8b 8d f0 fd ff ff 	mov    -0x210(%rbp),%rcx
  4152bf:	0f b6 14 08          	movzbl (%rax,%rcx,1),%edx
  4152c3:	48 8b 85 f0 fd ff ff 	mov    -0x210(%rbp),%rax
  4152ca:	48 c1 e0 03          	shl    $0x3,%rax
  4152ce:	89 c6                	mov    %eax,%esi
  4152d0:	89 f1                	mov    %esi,%ecx
  4152d2:	d3 e2                	shl    %cl,%edx
  4152d4:	48 8b 85 00 fe ff ff 	mov    -0x200(%rbp),%rax
  4152db:	0b 10                	or     (%rax),%edx
  4152dd:	89 10                	mov    %edx,(%rax)
  4152df:	48 8b 85 f0 fd ff ff 	mov    -0x210(%rbp),%rax
  4152e6:	48 83 c0 01          	add    $0x1,%rax
  4152ea:	48 89 85 f0 fd ff ff 	mov    %rax,-0x210(%rbp)
  4152f1:	eb 87                	jmp    41527a <mbedtls_x509_crt_parse_der+0x200a>
  4152f3:	c7 85 18 fe ff ff 00 	movl   $0x0,-0x1e8(%rbp)
  4152fa:	00 00 00 
  4152fd:	8b 85 18 fe ff ff    	mov    -0x1e8(%rbp),%eax
  415303:	89 85 ac fb ff ff    	mov    %eax,-0x454(%rbp)
  415309:	83 f8 00             	cmp    $0x0,%eax
  41530c:	74 11                	je     41531f <mbedtls_x509_crt_parse_der+0x20af>
  41530e:	8b 85 ac fb ff ff    	mov    -0x454(%rbp),%eax
  415314:	89 85 cc fb ff ff    	mov    %eax,-0x434(%rbp)
  41531a:	e9 1a 08 00 00       	jmpq   415b39 <mbedtls_x509_crt_parse_der+0x28c9>
  41531f:	e9 e7 07 00 00       	jmpq   415b0b <mbedtls_x509_crt_parse_der+0x289b>
  415324:	48 8b 85 c0 fb ff ff 	mov    -0x440(%rbp),%rax
  41532b:	48 8b 8d 90 fb ff ff 	mov    -0x470(%rbp),%rcx
  415332:	48 8b 95 b0 fb ff ff 	mov    -0x450(%rbp),%rdx
  415339:	48 81 c2 d0 01 00 00 	add    $0x1d0,%rdx
  415340:	48 89 85 30 fe ff ff 	mov    %rax,-0x1d0(%rbp)
  415347:	48 89 8d 28 fe ff ff 	mov    %rcx,-0x1d8(%rbp)
  41534e:	48 89 95 20 fe ff ff 	mov    %rdx,-0x1e0(%rbp)
  415355:	48 8b 85 30 fe ff ff 	mov    -0x1d0(%rbp),%rax
  41535c:	48 8b 8d 28 fe ff ff 	mov    -0x1d8(%rbp),%rcx
  415363:	48 8b 95 20 fe ff ff 	mov    -0x1e0(%rbp),%rdx
  41536a:	48 89 85 68 fe ff ff 	mov    %rax,-0x198(%rbp)
  415371:	48 89 8d 60 fe ff ff 	mov    %rcx,-0x1a0(%rbp)
  415378:	48 89 95 58 fe ff ff 	mov    %rdx,-0x1a8(%rbp)
  41537f:	c7 85 54 fe ff ff 06 	movl   $0x6,-0x1ac(%rbp)
  415386:	00 00 00 
  415389:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
  415390:	48 8b 8d 60 fe ff ff 	mov    -0x1a0(%rbp),%rcx
  415397:	48 89 85 88 fe ff ff 	mov    %rax,-0x178(%rbp)
  41539e:	48 89 8d 80 fe ff ff 	mov    %rcx,-0x180(%rbp)
  4153a5:	48 8d 85 48 fe ff ff 	lea    -0x1b8(%rbp),%rax
  4153ac:	48 89 85 78 fe ff ff 	mov    %rax,-0x188(%rbp)
  4153b3:	c7 85 74 fe ff ff 30 	movl   $0x30,-0x18c(%rbp)
  4153ba:	00 00 00 
  4153bd:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
  4153c4:	48 8b 8d 88 fe ff ff 	mov    -0x178(%rbp),%rcx
  4153cb:	48 8b 09             	mov    (%rcx),%rcx
  4153ce:	48 29 c8             	sub    %rcx,%rax
  4153d1:	48 83 f8 01          	cmp    $0x1,%rax
  4153d5:	7d 0c                	jge    4153e3 <mbedtls_x509_crt_parse_der+0x2173>
  4153d7:	c7 85 90 fe ff ff a0 	movl   $0xffffffa0,-0x170(%rbp)
  4153de:	ff ff ff 
  4153e1:	eb 52                	jmp    415435 <mbedtls_x509_crt_parse_der+0x21c5>
  4153e3:	48 8b 85 88 fe ff ff 	mov    -0x178(%rbp),%rax
  4153ea:	48 8b 00             	mov    (%rax),%rax
  4153ed:	0f b6 08             	movzbl (%rax),%ecx
  4153f0:	3b 8d 74 fe ff ff    	cmp    -0x18c(%rbp),%ecx
  4153f6:	74 0c                	je     415404 <mbedtls_x509_crt_parse_der+0x2194>
  4153f8:	c7 85 90 fe ff ff 9e 	movl   $0xffffff9e,-0x170(%rbp)
  4153ff:	ff ff ff 
  415402:	eb 31                	jmp    415435 <mbedtls_x509_crt_parse_der+0x21c5>
  415404:	48 8b 85 88 fe ff ff 	mov    -0x178(%rbp),%rax
  41540b:	48 8b 08             	mov    (%rax),%rcx
  41540e:	48 83 c1 01          	add    $0x1,%rcx
  415412:	48 89 08             	mov    %rcx,(%rax)
  415415:	48 8b bd 88 fe ff ff 	mov    -0x178(%rbp),%rdi
  41541c:	48 8b b5 80 fe ff ff 	mov    -0x180(%rbp),%rsi
  415423:	48 8b 95 78 fe ff ff 	mov    -0x188(%rbp),%rdx
  41542a:	e8 a1 4c 00 00       	callq  41a0d0 <mbedtls_asn1_get_len>
  41542f:	89 85 90 fe ff ff    	mov    %eax,-0x170(%rbp)
  415435:	8b 85 90 fe ff ff    	mov    -0x170(%rbp),%eax
  41543b:	89 85 50 fe ff ff    	mov    %eax,-0x1b0(%rbp)
  415441:	83 f8 00             	cmp    $0x0,%eax
  415444:	74 11                	je     415457 <mbedtls_x509_crt_parse_der+0x21e7>
  415446:	8b 85 50 fe ff ff    	mov    -0x1b0(%rbp),%eax
  41544c:	89 85 70 fe ff ff    	mov    %eax,-0x190(%rbp)
  415452:	e9 01 02 00 00       	jmpq   415658 <mbedtls_x509_crt_parse_der+0x23e8>
  415457:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
  41545e:	48 8b 00             	mov    (%rax),%rax
  415461:	48 03 85 48 fe ff ff 	add    -0x1b8(%rbp),%rax
  415468:	48 3b 85 60 fe ff ff 	cmp    -0x1a0(%rbp),%rax
  41546f:	74 0f                	je     415480 <mbedtls_x509_crt_parse_der+0x2210>
  415471:	c7 85 70 fe ff ff 9a 	movl   $0xffffff9a,-0x190(%rbp)
  415478:	ff ff ff 
  41547b:	e9 d8 01 00 00       	jmpq   415658 <mbedtls_x509_crt_parse_der+0x23e8>
  415480:	eb 00                	jmp    415482 <mbedtls_x509_crt_parse_der+0x2212>
  415482:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
  415489:	48 8b 00             	mov    (%rax),%rax
  41548c:	48 3b 85 60 fe ff ff 	cmp    -0x1a0(%rbp),%rax
  415493:	0f 83 87 01 00 00    	jae    415620 <mbedtls_x509_crt_parse_der+0x23b0>
  415499:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
  4154a0:	48 89 85 40 fe ff ff 	mov    %rax,-0x1c0(%rbp)
  4154a7:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
  4154ae:	48 8b 00             	mov    (%rax),%rax
  4154b1:	0f b6 08             	movzbl (%rax),%ecx
  4154b4:	48 8b 85 40 fe ff ff 	mov    -0x1c0(%rbp),%rax
  4154bb:	89 08                	mov    %ecx,(%rax)
  4154bd:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
  4154c4:	48 8b 95 60 fe ff ff 	mov    -0x1a0(%rbp),%rdx
  4154cb:	48 8b b5 40 fe ff ff 	mov    -0x1c0(%rbp),%rsi
  4154d2:	48 83 c6 08          	add    $0x8,%rsi
  4154d6:	8b 8d 54 fe ff ff    	mov    -0x1ac(%rbp),%ecx
  4154dc:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
  4154e3:	48 89 95 a0 fe ff ff 	mov    %rdx,-0x160(%rbp)
  4154ea:	48 89 b5 98 fe ff ff 	mov    %rsi,-0x168(%rbp)
  4154f1:	89 8d 94 fe ff ff    	mov    %ecx,-0x16c(%rbp)
  4154f7:	48 8b 85 a0 fe ff ff 	mov    -0x160(%rbp),%rax
  4154fe:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
  415505:	48 8b 12             	mov    (%rdx),%rdx
  415508:	48 29 d0             	sub    %rdx,%rax
  41550b:	48 83 f8 01          	cmp    $0x1,%rax
  41550f:	7d 0c                	jge    41551d <mbedtls_x509_crt_parse_der+0x22ad>
  415511:	c7 85 b4 fe ff ff a0 	movl   $0xffffffa0,-0x14c(%rbp)
  415518:	ff ff ff 
  41551b:	eb 52                	jmp    41556f <mbedtls_x509_crt_parse_der+0x22ff>
  41551d:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
  415524:	48 8b 00             	mov    (%rax),%rax
  415527:	0f b6 08             	movzbl (%rax),%ecx
  41552a:	3b 8d 94 fe ff ff    	cmp    -0x16c(%rbp),%ecx
  415530:	74 0c                	je     41553e <mbedtls_x509_crt_parse_der+0x22ce>
  415532:	c7 85 b4 fe ff ff 9e 	movl   $0xffffff9e,-0x14c(%rbp)
  415539:	ff ff ff 
  41553c:	eb 31                	jmp    41556f <mbedtls_x509_crt_parse_der+0x22ff>
  41553e:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
  415545:	48 8b 08             	mov    (%rax),%rcx
  415548:	48 83 c1 01          	add    $0x1,%rcx
  41554c:	48 89 08             	mov    %rcx,(%rax)
  41554f:	48 8b bd a8 fe ff ff 	mov    -0x158(%rbp),%rdi
  415556:	48 8b b5 a0 fe ff ff 	mov    -0x160(%rbp),%rsi
  41555d:	48 8b 95 98 fe ff ff 	mov    -0x168(%rbp),%rdx
  415564:	e8 67 4b 00 00       	callq  41a0d0 <mbedtls_asn1_get_len>
  415569:	89 85 b4 fe ff ff    	mov    %eax,-0x14c(%rbp)
  41556f:	8b 85 b4 fe ff ff    	mov    -0x14c(%rbp),%eax
  415575:	89 85 50 fe ff ff    	mov    %eax,-0x1b0(%rbp)
  41557b:	83 f8 00             	cmp    $0x0,%eax
  41557e:	74 11                	je     415591 <mbedtls_x509_crt_parse_der+0x2321>
  415580:	8b 85 50 fe ff ff    	mov    -0x1b0(%rbp),%eax
  415586:	89 85 70 fe ff ff    	mov    %eax,-0x190(%rbp)
  41558c:	e9 c7 00 00 00       	jmpq   415658 <mbedtls_x509_crt_parse_der+0x23e8>
  415591:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
  415598:	48 8b 00             	mov    (%rax),%rax
  41559b:	48 8b 8d 40 fe ff ff 	mov    -0x1c0(%rbp),%rcx
  4155a2:	48 89 41 10          	mov    %rax,0x10(%rcx)
  4155a6:	48 8b 85 40 fe ff ff 	mov    -0x1c0(%rbp),%rax
  4155ad:	48 8b 40 08          	mov    0x8(%rax),%rax
  4155b1:	48 8b 8d 68 fe ff ff 	mov    -0x198(%rbp),%rcx
  4155b8:	48 03 01             	add    (%rcx),%rax
  4155bb:	48 89 01             	mov    %rax,(%rcx)
  4155be:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
  4155c5:	48 8b 00             	mov    (%rax),%rax
  4155c8:	48 3b 85 60 fe ff ff 	cmp    -0x1a0(%rbp),%rax
  4155cf:	73 4a                	jae    41561b <mbedtls_x509_crt_parse_der+0x23ab>
  4155d1:	b8 01 00 00 00       	mov    $0x1,%eax
  4155d6:	89 c7                	mov    %eax,%edi
  4155d8:	b8 20 00 00 00       	mov    $0x20,%eax
  4155dd:	89 c6                	mov    %eax,%esi
  4155df:	e8 06 12 03 00       	callq  4467ea <aes_calloc>
  4155e4:	48 8b b5 58 fe ff ff 	mov    -0x1a8(%rbp),%rsi
  4155eb:	48 89 46 18          	mov    %rax,0x18(%rsi)
  4155ef:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
  4155f6:	48 83 78 18 00       	cmpq   $0x0,0x18(%rax)
  4155fb:	75 0c                	jne    415609 <mbedtls_x509_crt_parse_der+0x2399>
  4155fd:	c7 85 70 fe ff ff 96 	movl   $0xffffff96,-0x190(%rbp)
  415604:	ff ff ff 
  415607:	eb 4f                	jmp    415658 <mbedtls_x509_crt_parse_der+0x23e8>
  415609:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
  415610:	48 8b 40 18          	mov    0x18(%rax),%rax
  415614:	48 89 85 58 fe ff ff 	mov    %rax,-0x1a8(%rbp)
  41561b:	e9 62 fe ff ff       	jmpq   415482 <mbedtls_x509_crt_parse_der+0x2212>
  415620:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
  415627:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
  41562e:	00 
  41562f:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
  415636:	48 8b 00             	mov    (%rax),%rax
  415639:	48 3b 85 60 fe ff ff 	cmp    -0x1a0(%rbp),%rax
  415640:	74 0c                	je     41564e <mbedtls_x509_crt_parse_der+0x23de>
  415642:	c7 85 70 fe ff ff 9a 	movl   $0xffffff9a,-0x190(%rbp)
  415649:	ff ff ff 
  41564c:	eb 0a                	jmp    415658 <mbedtls_x509_crt_parse_der+0x23e8>
  41564e:	c7 85 70 fe ff ff 00 	movl   $0x0,-0x190(%rbp)
  415655:	00 00 00 
  415658:	8b 85 70 fe ff ff    	mov    -0x190(%rbp),%eax
  41565e:	89 85 1c fe ff ff    	mov    %eax,-0x1e4(%rbp)
  415664:	83 f8 00             	cmp    $0x0,%eax
  415667:	74 13                	je     41567c <mbedtls_x509_crt_parse_der+0x240c>
  415669:	8b 85 1c fe ff ff    	mov    -0x1e4(%rbp),%eax
  41566f:	05 00 db ff ff       	add    $0xffffdb00,%eax
  415674:	89 85 3c fe ff ff    	mov    %eax,-0x1c4(%rbp)
  41567a:	eb 24                	jmp    4156a0 <mbedtls_x509_crt_parse_der+0x2430>
  41567c:	48 8b 85 20 fe ff ff 	mov    -0x1e0(%rbp),%rax
  415683:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
  415688:	75 0c                	jne    415696 <mbedtls_x509_crt_parse_der+0x2426>
  41568a:	c7 85 3c fe ff ff 9c 	movl   $0xffffda9c,-0x1c4(%rbp)
  415691:	da ff ff 
  415694:	eb 0a                	jmp    4156a0 <mbedtls_x509_crt_parse_der+0x2430>
  415696:	c7 85 3c fe ff ff 00 	movl   $0x0,-0x1c4(%rbp)
  41569d:	00 00 00 
  4156a0:	8b 85 3c fe ff ff    	mov    -0x1c4(%rbp),%eax
  4156a6:	89 85 ac fb ff ff    	mov    %eax,-0x454(%rbp)
  4156ac:	83 f8 00             	cmp    $0x0,%eax
  4156af:	74 11                	je     4156c2 <mbedtls_x509_crt_parse_der+0x2452>
  4156b1:	8b 85 ac fb ff ff    	mov    -0x454(%rbp),%eax
  4156b7:	89 85 cc fb ff ff    	mov    %eax,-0x434(%rbp)
  4156bd:	e9 77 04 00 00       	jmpq   415b39 <mbedtls_x509_crt_parse_der+0x28c9>
  4156c2:	e9 44 04 00 00       	jmpq   415b0b <mbedtls_x509_crt_parse_der+0x289b>
  4156c7:	48 8b 85 c0 fb ff ff 	mov    -0x440(%rbp),%rax
  4156ce:	48 8b 8d 90 fb ff ff 	mov    -0x470(%rbp),%rcx
  4156d5:	48 8b 95 b0 fb ff ff 	mov    -0x450(%rbp),%rdx
  4156dc:	48 81 c2 a0 01 00 00 	add    $0x1a0,%rdx
  4156e3:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
  4156ea:	48 89 8d f0 fe ff ff 	mov    %rcx,-0x110(%rbp)
  4156f1:	48 89 95 e8 fe ff ff 	mov    %rdx,-0x118(%rbp)
  4156f8:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
  4156ff:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
  415706:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  41570d:	48 8b 8d f0 fe ff ff 	mov    -0x110(%rbp),%rcx
  415714:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
  41571b:	48 89 8d 10 ff ff ff 	mov    %rcx,-0xf0(%rbp)
  415722:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
  415729:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
  415730:	c7 85 04 ff ff ff 30 	movl   $0x30,-0xfc(%rbp)
  415737:	00 00 00 
  41573a:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
  415741:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
  415748:	48 8b 09             	mov    (%rcx),%rcx
  41574b:	48 29 c8             	sub    %rcx,%rax
  41574e:	48 83 f8 01          	cmp    $0x1,%rax
  415752:	7d 0c                	jge    415760 <mbedtls_x509_crt_parse_der+0x24f0>
  415754:	c7 85 24 ff ff ff a0 	movl   $0xffffffa0,-0xdc(%rbp)
  41575b:	ff ff ff 
  41575e:	eb 52                	jmp    4157b2 <mbedtls_x509_crt_parse_der+0x2542>
  415760:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  415767:	48 8b 00             	mov    (%rax),%rax
  41576a:	0f b6 08             	movzbl (%rax),%ecx
  41576d:	3b 8d 04 ff ff ff    	cmp    -0xfc(%rbp),%ecx
  415773:	74 0c                	je     415781 <mbedtls_x509_crt_parse_der+0x2511>
  415775:	c7 85 24 ff ff ff 9e 	movl   $0xffffff9e,-0xdc(%rbp)
  41577c:	ff ff ff 
  41577f:	eb 31                	jmp    4157b2 <mbedtls_x509_crt_parse_der+0x2542>
  415781:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  415788:	48 8b 08             	mov    (%rax),%rcx
  41578b:	48 83 c1 01          	add    $0x1,%rcx
  41578f:	48 89 08             	mov    %rcx,(%rax)
  415792:	48 8b bd 18 ff ff ff 	mov    -0xe8(%rbp),%rdi
  415799:	48 8b b5 10 ff ff ff 	mov    -0xf0(%rbp),%rsi
  4157a0:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
  4157a7:	e8 24 49 00 00       	callq  41a0d0 <mbedtls_asn1_get_len>
  4157ac:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%rbp)
  4157b2:	8b 85 24 ff ff ff    	mov    -0xdc(%rbp),%eax
  4157b8:	89 85 e4 fe ff ff    	mov    %eax,-0x11c(%rbp)
  4157be:	83 f8 00             	cmp    $0x0,%eax
  4157c1:	74 16                	je     4157d9 <mbedtls_x509_crt_parse_der+0x2569>
  4157c3:	8b 85 e4 fe ff ff    	mov    -0x11c(%rbp),%eax
  4157c9:	05 00 db ff ff       	add    $0xffffdb00,%eax
  4157ce:	89 85 00 ff ff ff    	mov    %eax,-0x100(%rbp)
  4157d4:	e9 24 02 00 00       	jmpq   4159fd <mbedtls_x509_crt_parse_der+0x278d>
  4157d9:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  4157e0:	48 8b 00             	mov    (%rax),%rax
  4157e3:	48 03 85 d8 fe ff ff 	add    -0x128(%rbp),%rax
  4157ea:	48 3b 85 f0 fe ff ff 	cmp    -0x110(%rbp),%rax
  4157f1:	74 0f                	je     415802 <mbedtls_x509_crt_parse_der+0x2592>
  4157f3:	c7 85 00 ff ff ff 9a 	movl   $0xffffda9a,-0x100(%rbp)
  4157fa:	da ff ff 
  4157fd:	e9 fb 01 00 00       	jmpq   4159fd <mbedtls_x509_crt_parse_der+0x278d>
  415802:	eb 00                	jmp    415804 <mbedtls_x509_crt_parse_der+0x2594>
  415804:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  41580b:	48 8b 00             	mov    (%rax),%rax
  41580e:	48 3b 85 f0 fe ff ff 	cmp    -0x110(%rbp),%rax
  415815:	0f 83 aa 01 00 00    	jae    4159c5 <mbedtls_x509_crt_parse_der+0x2755>
  41581b:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
  415822:	48 8b 8d f8 fe ff ff 	mov    -0x108(%rbp),%rcx
  415829:	48 8b 09             	mov    (%rcx),%rcx
  41582c:	48 29 c8             	sub    %rcx,%rax
  41582f:	48 83 f8 01          	cmp    $0x1,%rax
  415833:	7d 0f                	jge    415844 <mbedtls_x509_crt_parse_der+0x25d4>
  415835:	c7 85 00 ff ff ff a0 	movl   $0xffffdaa0,-0x100(%rbp)
  41583c:	da ff ff 
  41583f:	e9 b9 01 00 00       	jmpq   4159fd <mbedtls_x509_crt_parse_der+0x278d>
  415844:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  41584b:	48 8b 00             	mov    (%rax),%rax
  41584e:	8a 08                	mov    (%rax),%cl
  415850:	88 8d c7 fe ff ff    	mov    %cl,-0x139(%rbp)
  415856:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  41585d:	48 8b 10             	mov    (%rax),%rdx
  415860:	48 83 c2 01          	add    $0x1,%rdx
  415864:	48 89 10             	mov    %rdx,(%rax)
  415867:	48 8b bd f8 fe ff ff 	mov    -0x108(%rbp),%rdi
  41586e:	48 8b b5 f0 fe ff ff 	mov    -0x110(%rbp),%rsi
  415875:	48 8d 95 d0 fe ff ff 	lea    -0x130(%rbp),%rdx
  41587c:	e8 4f 48 00 00       	callq  41a0d0 <mbedtls_asn1_get_len>
  415881:	89 85 e4 fe ff ff    	mov    %eax,-0x11c(%rbp)
  415887:	83 f8 00             	cmp    $0x0,%eax
  41588a:	74 16                	je     4158a2 <mbedtls_x509_crt_parse_der+0x2632>
  41588c:	8b 85 e4 fe ff ff    	mov    -0x11c(%rbp),%eax
  415892:	05 00 db ff ff       	add    $0xffffdb00,%eax
  415897:	89 85 00 ff ff ff    	mov    %eax,-0x100(%rbp)
  41589d:	e9 5b 01 00 00       	jmpq   4159fd <mbedtls_x509_crt_parse_der+0x278d>
  4158a2:	0f b6 85 c7 fe ff ff 	movzbl -0x139(%rbp),%eax
  4158a9:	25 c0 00 00 00       	and    $0xc0,%eax
  4158ae:	3d 80 00 00 00       	cmp    $0x80,%eax
  4158b3:	74 0f                	je     4158c4 <mbedtls_x509_crt_parse_der+0x2654>
  4158b5:	c7 85 00 ff ff ff 9e 	movl   $0xffffda9e,-0x100(%rbp)
  4158bc:	da ff ff 
  4158bf:	e9 39 01 00 00       	jmpq   4159fd <mbedtls_x509_crt_parse_der+0x278d>
  4158c4:	0f b6 85 c7 fe ff ff 	movzbl -0x139(%rbp),%eax
  4158cb:	3d 82 00 00 00       	cmp    $0x82,%eax
  4158d0:	74 19                	je     4158eb <mbedtls_x509_crt_parse_der+0x267b>
  4158d2:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
  4158d9:	48 8b 8d f8 fe ff ff 	mov    -0x108(%rbp),%rcx
  4158e0:	48 03 01             	add    (%rcx),%rax
  4158e3:	48 89 01             	mov    %rax,(%rcx)
  4158e6:	e9 19 ff ff ff       	jmpq   415804 <mbedtls_x509_crt_parse_der+0x2594>
  4158eb:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  4158f2:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
  4158f7:	74 6a                	je     415963 <mbedtls_x509_crt_parse_der+0x26f3>
  4158f9:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  415900:	48 83 78 18 00       	cmpq   $0x0,0x18(%rax)
  415905:	74 0f                	je     415916 <mbedtls_x509_crt_parse_der+0x26a6>
  415907:	c7 85 00 ff ff ff 00 	movl   $0xffffdb00,-0x100(%rbp)
  41590e:	db ff ff 
  415911:	e9 e7 00 00 00       	jmpq   4159fd <mbedtls_x509_crt_parse_der+0x278d>
  415916:	b8 01 00 00 00       	mov    $0x1,%eax
  41591b:	89 c7                	mov    %eax,%edi
  41591d:	b8 20 00 00 00       	mov    $0x20,%eax
  415922:	89 c6                	mov    %eax,%esi
  415924:	e8 c1 0e 03 00       	callq  4467ea <aes_calloc>
  415929:	48 8b b5 b8 fe ff ff 	mov    -0x148(%rbp),%rsi
  415930:	48 89 46 18          	mov    %rax,0x18(%rsi)
  415934:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  41593b:	48 83 78 18 00       	cmpq   $0x0,0x18(%rax)
  415940:	75 0f                	jne    415951 <mbedtls_x509_crt_parse_der+0x26e1>
  415942:	c7 85 00 ff ff ff 96 	movl   $0xffffda96,-0x100(%rbp)
  415949:	da ff ff 
  41594c:	e9 ac 00 00 00       	jmpq   4159fd <mbedtls_x509_crt_parse_der+0x278d>
  415951:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  415958:	48 8b 40 18          	mov    0x18(%rax),%rax
  41595c:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
  415963:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  41596a:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
  415971:	0f b6 8d c7 fe ff ff 	movzbl -0x139(%rbp),%ecx
  415978:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  41597f:	89 08                	mov    %ecx,(%rax)
  415981:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  415988:	48 8b 00             	mov    (%rax),%rax
  41598b:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
  415992:	48 89 42 10          	mov    %rax,0x10(%rdx)
  415996:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
  41599d:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
  4159a4:	48 89 42 08          	mov    %rax,0x8(%rdx)
  4159a8:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  4159af:	48 8b 40 08          	mov    0x8(%rax),%rax
  4159b3:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  4159ba:	48 03 02             	add    (%rdx),%rax
  4159bd:	48 89 02             	mov    %rax,(%rdx)
  4159c0:	e9 3f fe ff ff       	jmpq   415804 <mbedtls_x509_crt_parse_der+0x2594>
  4159c5:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  4159cc:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
  4159d3:	00 
  4159d4:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  4159db:	48 8b 00             	mov    (%rax),%rax
  4159de:	48 3b 85 f0 fe ff ff 	cmp    -0x110(%rbp),%rax
  4159e5:	74 0c                	je     4159f3 <mbedtls_x509_crt_parse_der+0x2783>
  4159e7:	c7 85 00 ff ff ff 9a 	movl   $0xffffda9a,-0x100(%rbp)
  4159ee:	da ff ff 
  4159f1:	eb 0a                	jmp    4159fd <mbedtls_x509_crt_parse_der+0x278d>
  4159f3:	c7 85 00 ff ff ff 00 	movl   $0x0,-0x100(%rbp)
  4159fa:	00 00 00 
  4159fd:	8b 85 00 ff ff ff    	mov    -0x100(%rbp),%eax
  415a03:	89 85 ac fb ff ff    	mov    %eax,-0x454(%rbp)
  415a09:	83 f8 00             	cmp    $0x0,%eax
  415a0c:	74 11                	je     415a1f <mbedtls_x509_crt_parse_der+0x27af>
  415a0e:	8b 85 ac fb ff ff    	mov    -0x454(%rbp),%eax
  415a14:	89 85 cc fb ff ff    	mov    %eax,-0x434(%rbp)
  415a1a:	e9 1a 01 00 00       	jmpq   415b39 <mbedtls_x509_crt_parse_der+0x28c9>
  415a1f:	e9 e7 00 00 00       	jmpq   415b0b <mbedtls_x509_crt_parse_der+0x289b>
  415a24:	31 f6                	xor    %esi,%esi
  415a26:	b8 18 00 00 00       	mov    $0x18,%eax
  415a2b:	89 c2                	mov    %eax,%edx
  415a2d:	48 8b 8d c0 fb ff ff 	mov    -0x440(%rbp),%rcx
  415a34:	48 8b bd 90 fb ff ff 	mov    -0x470(%rbp),%rdi
  415a3b:	4c 8b 85 b0 fb ff ff 	mov    -0x450(%rbp),%r8
  415a42:	49 81 c0 f0 01 00 00 	add    $0x1f0,%r8
  415a49:	48 89 8d 58 ff ff ff 	mov    %rcx,-0xa8(%rbp)
  415a50:	48 89 bd 50 ff ff ff 	mov    %rdi,-0xb0(%rbp)
  415a57:	4c 89 85 48 ff ff ff 	mov    %r8,-0xb8(%rbp)
  415a5e:	48 8d 8d 28 ff ff ff 	lea    -0xd8(%rbp),%rcx
  415a65:	48 89 cf             	mov    %rcx,%rdi
  415a68:	48 89 8d 68 f8 ff ff 	mov    %rcx,-0x798(%rbp)
  415a6f:	e8 ac b5 fe ff       	callq  401020 <memset@plt>
  415a74:	48 8b bd 58 ff ff ff 	mov    -0xa8(%rbp),%rdi
  415a7b:	48 8b b5 50 ff ff ff 	mov    -0xb0(%rbp),%rsi
  415a82:	48 8b 95 68 f8 ff ff 	mov    -0x798(%rbp),%rdx
  415a89:	e8 f2 49 00 00       	callq  41a480 <mbedtls_asn1_get_bitstring>
  415a8e:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
  415a94:	83 f8 00             	cmp    $0x0,%eax
  415a97:	74 13                	je     415aac <mbedtls_x509_crt_parse_der+0x283c>
  415a99:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
  415a9f:	05 00 db ff ff       	add    $0xffffdb00,%eax
  415aa4:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%rbp)
  415aaa:	eb 32                	jmp    415ade <mbedtls_x509_crt_parse_der+0x286e>
  415aac:	48 83 bd 28 ff ff ff 	cmpq   $0x1,-0xd8(%rbp)
  415ab3:	01 
  415ab4:	74 0c                	je     415ac2 <mbedtls_x509_crt_parse_der+0x2852>
  415ab6:	c7 85 60 ff ff ff 9c 	movl   $0xffffda9c,-0xa0(%rbp)
  415abd:	da ff ff 
  415ac0:	eb 1c                	jmp    415ade <mbedtls_x509_crt_parse_der+0x286e>
  415ac2:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  415ac9:	8a 08                	mov    (%rax),%cl
  415acb:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  415ad2:	88 08                	mov    %cl,(%rax)
  415ad4:	c7 85 60 ff ff ff 00 	movl   $0x0,-0xa0(%rbp)
  415adb:	00 00 00 
  415ade:	8b 85 60 ff ff ff    	mov    -0xa0(%rbp),%eax
  415ae4:	89 85 ac fb ff ff    	mov    %eax,-0x454(%rbp)
  415aea:	83 f8 00             	cmp    $0x0,%eax
  415aed:	74 0e                	je     415afd <mbedtls_x509_crt_parse_der+0x288d>
  415aef:	8b 85 ac fb ff ff    	mov    -0x454(%rbp),%eax
  415af5:	89 85 cc fb ff ff    	mov    %eax,-0x434(%rbp)
  415afb:	eb 3c                	jmp    415b39 <mbedtls_x509_crt_parse_der+0x28c9>
  415afd:	eb 0c                	jmp    415b0b <mbedtls_x509_crt_parse_der+0x289b>
  415aff:	c7 85 cc fb ff ff 80 	movl   $0xffffdf80,-0x434(%rbp)
  415b06:	df ff ff 
  415b09:	eb 2e                	jmp    415b39 <mbedtls_x509_crt_parse_der+0x28c9>
  415b0b:	e9 ec eb ff ff       	jmpq   4146fc <mbedtls_x509_crt_parse_der+0x148c>
  415b10:	48 8b 85 c0 fb ff ff 	mov    -0x440(%rbp),%rax
  415b17:	48 8b 00             	mov    (%rax),%rax
  415b1a:	48 3b 85 b8 fb ff ff 	cmp    -0x448(%rbp),%rax
  415b21:	74 0c                	je     415b2f <mbedtls_x509_crt_parse_der+0x28bf>
  415b23:	c7 85 cc fb ff ff 9a 	movl   $0xffffda9a,-0x434(%rbp)
  415b2a:	da ff ff 
  415b2d:	eb 0a                	jmp    415b39 <mbedtls_x509_crt_parse_der+0x28c9>
  415b2f:	c7 85 cc fb ff ff 00 	movl   $0x0,-0x434(%rbp)
  415b36:	00 00 00 
  415b39:	8b 85 cc fb ff ff    	mov    -0x434(%rbp),%eax
  415b3f:	89 85 5c f9 ff ff    	mov    %eax,-0x6a4(%rbp)
  415b45:	83 bd 5c f9 ff ff 00 	cmpl   $0x0,-0x6a4(%rbp)
  415b4c:	74 1d                	je     415b6b <mbedtls_x509_crt_parse_der+0x28fb>
  415b4e:	48 8b bd 70 f9 ff ff 	mov    -0x690(%rbp),%rdi
  415b55:	e8 16 04 00 00       	callq  415f70 <mbedtls_x509_crt_free>
  415b5a:	8b 85 5c f9 ff ff    	mov    -0x6a4(%rbp),%eax
  415b60:	89 85 78 f9 ff ff    	mov    %eax,-0x688(%rbp)
  415b66:	e9 4b 03 00 00       	jmpq   415eb6 <mbedtls_x509_crt_parse_der+0x2c46>
  415b6b:	eb 00                	jmp    415b6d <mbedtls_x509_crt_parse_der+0x28fd>
  415b6d:	48 8b 85 48 f9 ff ff 	mov    -0x6b8(%rbp),%rax
  415b74:	48 3b 85 40 f9 ff ff 	cmp    -0x6c0(%rbp),%rax
  415b7b:	74 1b                	je     415b98 <mbedtls_x509_crt_parse_der+0x2928>
  415b7d:	48 8b bd 70 f9 ff ff 	mov    -0x690(%rbp),%rdi
  415b84:	e8 e7 03 00 00       	callq  415f70 <mbedtls_x509_crt_free>
  415b89:	c7 85 78 f9 ff ff 1a 	movl   $0xffffde1a,-0x688(%rbp)
  415b90:	de ff ff 
  415b93:	e9 1e 03 00 00       	jmpq   415eb6 <mbedtls_x509_crt_parse_der+0x2c46>
  415b98:	48 8b 85 38 f9 ff ff 	mov    -0x6c8(%rbp),%rax
  415b9f:	48 89 85 40 f9 ff ff 	mov    %rax,-0x6c0(%rbp)
  415ba6:	48 8b 85 40 f9 ff ff 	mov    -0x6c0(%rbp),%rax
  415bad:	48 8d 8d 48 f9 ff ff 	lea    -0x6b8(%rbp),%rcx
  415bb4:	48 89 4d 80          	mov    %rcx,-0x80(%rbp)
  415bb8:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  415bbf:	48 8d 85 f0 f8 ff ff 	lea    -0x710(%rbp),%rax
  415bc6:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
  415bcd:	48 8d 85 08 f9 ff ff 	lea    -0x6f8(%rbp),%rax
  415bd4:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
  415bdb:	48 8b 7d 80          	mov    -0x80(%rbp),%rdi
  415bdf:	48 8b b5 78 ff ff ff 	mov    -0x88(%rbp),%rsi
  415be6:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
  415bed:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
  415bf4:	e8 d7 49 00 00       	callq  41a5d0 <mbedtls_asn1_get_alg>
  415bf9:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%rbp)
  415bff:	83 f8 00             	cmp    $0x0,%eax
  415c02:	74 10                	je     415c14 <mbedtls_x509_crt_parse_der+0x29a4>
  415c04:	8b 85 64 ff ff ff    	mov    -0x9c(%rbp),%eax
  415c0a:	05 00 dd ff ff       	add    $0xffffdd00,%eax
  415c0f:	89 45 88             	mov    %eax,-0x78(%rbp)
  415c12:	eb 07                	jmp    415c1b <mbedtls_x509_crt_parse_der+0x29ab>
  415c14:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%rbp)
  415c1b:	8b 45 88             	mov    -0x78(%rbp),%eax
  415c1e:	89 85 5c f9 ff ff    	mov    %eax,-0x6a4(%rbp)
  415c24:	83 f8 00             	cmp    $0x0,%eax
  415c27:	74 1d                	je     415c46 <mbedtls_x509_crt_parse_der+0x29d6>
  415c29:	48 8b bd 70 f9 ff ff 	mov    -0x690(%rbp),%rdi
  415c30:	e8 3b 03 00 00       	callq  415f70 <mbedtls_x509_crt_free>
  415c35:	8b 85 5c f9 ff ff    	mov    -0x6a4(%rbp),%eax
  415c3b:	89 85 78 f9 ff ff    	mov    %eax,-0x688(%rbp)
  415c41:	e9 70 02 00 00       	jmpq   415eb6 <mbedtls_x509_crt_parse_der+0x2c46>
  415c46:	48 8b 85 70 f9 ff ff 	mov    -0x690(%rbp),%rax
  415c4d:	48 8b 40 58          	mov    0x58(%rax),%rax
  415c51:	48 3b 85 f8 f8 ff ff 	cmp    -0x708(%rbp),%rax
  415c58:	75 60                	jne    415cba <mbedtls_x509_crt_parse_der+0x2a4a>
  415c5a:	48 8b 85 70 f9 ff ff 	mov    -0x690(%rbp),%rax
  415c61:	48 8b 78 60          	mov    0x60(%rax),%rdi
  415c65:	48 8b b5 00 f9 ff ff 	mov    -0x700(%rbp),%rsi
  415c6c:	48 8b 85 70 f9 ff ff 	mov    -0x690(%rbp),%rax
  415c73:	48 8b 50 58          	mov    0x58(%rax),%rdx
  415c77:	e8 54 b5 fe ff       	callq  4011d0 <memcmp@plt>
  415c7c:	83 f8 00             	cmp    $0x0,%eax
  415c7f:	75 39                	jne    415cba <mbedtls_x509_crt_parse_der+0x2a4a>
  415c81:	48 8b 85 28 f9 ff ff 	mov    -0x6d8(%rbp),%rax
  415c88:	48 3b 85 10 f9 ff ff 	cmp    -0x6f0(%rbp),%rax
  415c8f:	75 29                	jne    415cba <mbedtls_x509_crt_parse_der+0x2a4a>
  415c91:	48 83 bd 28 f9 ff ff 	cmpq   $0x0,-0x6d8(%rbp)
  415c98:	00 
  415c99:	74 3a                	je     415cd5 <mbedtls_x509_crt_parse_der+0x2a65>
  415c9b:	48 8b bd 30 f9 ff ff 	mov    -0x6d0(%rbp),%rdi
  415ca2:	48 8b b5 18 f9 ff ff 	mov    -0x6e8(%rbp),%rsi
  415ca9:	48 8b 95 28 f9 ff ff 	mov    -0x6d8(%rbp),%rdx
  415cb0:	e8 1b b5 fe ff       	callq  4011d0 <memcmp@plt>
  415cb5:	83 f8 00             	cmp    $0x0,%eax
  415cb8:	74 1b                	je     415cd5 <mbedtls_x509_crt_parse_der+0x2a65>
  415cba:	48 8b bd 70 f9 ff ff 	mov    -0x690(%rbp),%rdi
  415cc1:	e8 aa 02 00 00       	callq  415f70 <mbedtls_x509_crt_free>
  415cc6:	c7 85 78 f9 ff ff 80 	movl   $0xffffd980,-0x688(%rbp)
  415ccd:	d9 ff ff 
  415cd0:	e9 e1 01 00 00       	jmpq   415eb6 <mbedtls_x509_crt_parse_der+0x2c46>
  415cd5:	48 8b 85 40 f9 ff ff 	mov    -0x6c0(%rbp),%rax
  415cdc:	48 8b 8d 70 f9 ff ff 	mov    -0x690(%rbp),%rcx
  415ce3:	48 81 c1 f8 01 00 00 	add    $0x1f8,%rcx
  415cea:	48 8d 95 48 f9 ff ff 	lea    -0x6b8(%rbp),%rdx
  415cf1:	48 89 55 b0          	mov    %rdx,-0x50(%rbp)
  415cf5:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  415cf9:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
  415cfd:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  415d01:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  415d05:	48 8b 09             	mov    (%rcx),%rcx
  415d08:	48 29 c8             	sub    %rcx,%rax
  415d0b:	48 83 f8 01          	cmp    $0x1,%rax
  415d0f:	7d 0c                	jge    415d1d <mbedtls_x509_crt_parse_der+0x2aad>
  415d11:	c7 45 b8 20 db ff ff 	movl   $0xffffdb20,-0x48(%rbp)
  415d18:	e9 3f 01 00 00       	jmpq   415e5c <mbedtls_x509_crt_parse_der+0x2bec>
  415d1d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  415d21:	48 8b 00             	mov    (%rax),%rax
  415d24:	0f b6 08             	movzbl (%rax),%ecx
  415d27:	89 4d 8c             	mov    %ecx,-0x74(%rbp)
  415d2a:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  415d2e:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
  415d32:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  415d36:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  415d3a:	48 8d 45 90          	lea    -0x70(%rbp),%rax
  415d3e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  415d42:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  415d46:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  415d4a:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
  415d4e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  415d52:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  415d56:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  415d5a:	c7 45 dc 03 00 00 00 	movl   $0x3,-0x24(%rbp)
  415d61:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  415d65:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  415d69:	48 8b 12             	mov    (%rdx),%rdx
  415d6c:	48 29 d0             	sub    %rdx,%rax
  415d6f:	48 83 f8 01          	cmp    $0x1,%rax
  415d73:	7d 09                	jge    415d7e <mbedtls_x509_crt_parse_der+0x2b0e>
  415d75:	c7 45 fc a0 ff ff ff 	movl   $0xffffffa0,-0x4(%rbp)
  415d7c:	eb 3a                	jmp    415db8 <mbedtls_x509_crt_parse_der+0x2b48>
  415d7e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  415d82:	48 8b 00             	mov    (%rax),%rax
  415d85:	0f b6 08             	movzbl (%rax),%ecx
  415d88:	3b 4d dc             	cmp    -0x24(%rbp),%ecx
  415d8b:	74 09                	je     415d96 <mbedtls_x509_crt_parse_der+0x2b26>
  415d8d:	c7 45 fc 9e ff ff ff 	movl   $0xffffff9e,-0x4(%rbp)
  415d94:	eb 22                	jmp    415db8 <mbedtls_x509_crt_parse_der+0x2b48>
  415d96:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  415d9a:	48 8b 08             	mov    (%rax),%rcx
  415d9d:	48 83 c1 01          	add    $0x1,%rcx
  415da1:	48 89 08             	mov    %rcx,(%rax)
  415da4:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  415da8:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  415dac:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  415db0:	e8 1b 43 00 00       	callq  41a0d0 <mbedtls_asn1_get_len>
  415db5:	89 45 fc             	mov    %eax,-0x4(%rbp)
  415db8:	8b 45 fc             	mov    -0x4(%rbp),%eax
  415dbb:	89 45 bc             	mov    %eax,-0x44(%rbp)
  415dbe:	83 f8 00             	cmp    $0x0,%eax
  415dc1:	74 08                	je     415dcb <mbedtls_x509_crt_parse_der+0x2b5b>
  415dc3:	8b 45 bc             	mov    -0x44(%rbp),%eax
  415dc6:	89 45 d8             	mov    %eax,-0x28(%rbp)
  415dc9:	eb 40                	jmp    415e0b <mbedtls_x509_crt_parse_der+0x2b9b>
  415dcb:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  415dcf:	48 8b 08             	mov    (%rax),%rcx
  415dd2:	48 89 ca             	mov    %rcx,%rdx
  415dd5:	48 83 c2 ff          	add    $0xffffffffffffffff,%rdx
  415dd9:	48 89 10             	mov    %rdx,(%rax)
  415ddc:	48 83 f9 02          	cmp    $0x2,%rcx
  415de0:	72 19                	jb     415dfb <mbedtls_x509_crt_parse_der+0x2b8b>
  415de2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  415de6:	48 8b 08             	mov    (%rax),%rcx
  415de9:	48 89 ca             	mov    %rcx,%rdx
  415dec:	48 83 c2 01          	add    $0x1,%rdx
  415df0:	48 89 10             	mov    %rdx,(%rax)
  415df3:	0f b6 31             	movzbl (%rcx),%esi
  415df6:	83 fe 00             	cmp    $0x0,%esi
  415df9:	74 09                	je     415e04 <mbedtls_x509_crt_parse_der+0x2b94>
  415dfb:	c7 45 d8 98 ff ff ff 	movl   $0xffffff98,-0x28(%rbp)
  415e02:	eb 07                	jmp    415e0b <mbedtls_x509_crt_parse_der+0x2b9b>
  415e04:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
  415e0b:	8b 45 d8             	mov    -0x28(%rbp),%eax
  415e0e:	89 45 9c             	mov    %eax,-0x64(%rbp)
  415e11:	83 f8 00             	cmp    $0x0,%eax
  415e14:	74 0d                	je     415e23 <mbedtls_x509_crt_parse_der+0x2bb3>
  415e16:	8b 45 9c             	mov    -0x64(%rbp),%eax
  415e19:	05 80 db ff ff       	add    $0xffffdb80,%eax
  415e1e:	89 45 b8             	mov    %eax,-0x48(%rbp)
  415e21:	eb 39                	jmp    415e5c <mbedtls_x509_crt_parse_der+0x2bec>
  415e23:	8b 45 8c             	mov    -0x74(%rbp),%eax
  415e26:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
  415e2a:	89 01                	mov    %eax,(%rcx)
  415e2c:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  415e30:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
  415e34:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  415e38:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  415e3c:	48 8b 09             	mov    (%rcx),%rcx
  415e3f:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
  415e43:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
  415e47:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  415e4b:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
  415e4f:	48 03 0a             	add    (%rdx),%rcx
  415e52:	48 89 0a             	mov    %rcx,(%rdx)
  415e55:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%rbp)
  415e5c:	8b 45 b8             	mov    -0x48(%rbp),%eax
  415e5f:	89 85 5c f9 ff ff    	mov    %eax,-0x6a4(%rbp)
  415e65:	83 f8 00             	cmp    $0x0,%eax
  415e68:	74 1a                	je     415e84 <mbedtls_x509_crt_parse_der+0x2c14>
  415e6a:	48 8b bd 70 f9 ff ff 	mov    -0x690(%rbp),%rdi
  415e71:	e8 fa 00 00 00       	callq  415f70 <mbedtls_x509_crt_free>
  415e76:	8b 85 5c f9 ff ff    	mov    -0x6a4(%rbp),%eax
  415e7c:	89 85 78 f9 ff ff    	mov    %eax,-0x688(%rbp)
  415e82:	eb 32                	jmp    415eb6 <mbedtls_x509_crt_parse_der+0x2c46>
  415e84:	48 8b 85 48 f9 ff ff 	mov    -0x6b8(%rbp),%rax
  415e8b:	48 3b 85 40 f9 ff ff 	cmp    -0x6c0(%rbp),%rax
  415e92:	74 18                	je     415eac <mbedtls_x509_crt_parse_der+0x2c3c>
  415e94:	48 8b bd 70 f9 ff ff 	mov    -0x690(%rbp),%rdi
  415e9b:	e8 d0 00 00 00       	callq  415f70 <mbedtls_x509_crt_free>
  415ea0:	c7 85 78 f9 ff ff 1a 	movl   $0xffffde1a,-0x688(%rbp)
  415ea7:	de ff ff 
  415eaa:	eb 0a                	jmp    415eb6 <mbedtls_x509_crt_parse_der+0x2c46>
  415eac:	c7 85 78 f9 ff ff 00 	movl   $0x0,-0x688(%rbp)
  415eb3:	00 00 00 
  415eb6:	8b 85 78 f9 ff ff    	mov    -0x688(%rbp),%eax
  415ebc:	89 85 c4 f8 ff ff    	mov    %eax,-0x73c(%rbp)
  415ec2:	83 f8 00             	cmp    $0x0,%eax
  415ec5:	74 49                	je     415f10 <mbedtls_x509_crt_parse_der+0x2ca0>
  415ec7:	48 83 bd b0 f8 ff ff 	cmpq   $0x0,-0x750(%rbp)
  415ece:	00 
  415ecf:	74 12                	je     415ee3 <mbedtls_x509_crt_parse_der+0x2c73>
  415ed1:	48 8b 85 b0 f8 ff ff 	mov    -0x750(%rbp),%rax
  415ed8:	48 c7 80 20 02 00 00 	movq   $0x0,0x220(%rax)
  415edf:	00 00 00 00 
  415ee3:	48 8b 85 b8 f8 ff ff 	mov    -0x748(%rbp),%rax
  415eea:	48 3b 85 d8 f8 ff ff 	cmp    -0x728(%rbp),%rax
  415ef1:	74 0f                	je     415f02 <mbedtls_x509_crt_parse_der+0x2c92>
  415ef3:	48 8b 85 b8 f8 ff ff 	mov    -0x748(%rbp),%rax
  415efa:	48 89 c7             	mov    %rax,%rdi
  415efd:	e8 de b1 fe ff       	callq  4010e0 <free@plt>
  415f02:	8b 85 c4 f8 ff ff    	mov    -0x73c(%rbp),%eax
  415f08:	89 85 e4 f8 ff ff    	mov    %eax,-0x71c(%rbp)
  415f0e:	eb 0a                	jmp    415f1a <mbedtls_x509_crt_parse_der+0x2caa>
  415f10:	c7 85 e4 f8 ff ff 00 	movl   $0x0,-0x71c(%rbp)
  415f17:	00 00 00 
  415f1a:	8b 85 e4 f8 ff ff    	mov    -0x71c(%rbp),%eax
  415f20:	89 85 64 f8 ff ff    	mov    %eax,-0x79c(%rbp)
  415f26:	e8 2b fa 02 00       	callq  445956 <writeback_cache>
  415f2b:	8b 85 64 f8 ff ff    	mov    -0x79c(%rbp),%eax
  415f31:	48 81 c4 a0 07 00 00 	add    $0x7a0,%rsp
  415f38:	5d                   	pop    %rbp
  415f39:	c3                   	retq   
  415f3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000415f40 <mbedtls_x509_crt_init>:
  415f40:	55                   	push   %rbp
  415f41:	48 89 e5             	mov    %rsp,%rbp
  415f44:	48 83 ec 10          	sub    $0x10,%rsp
  415f48:	31 f6                	xor    %esi,%esi
  415f4a:	b8 28 02 00 00       	mov    $0x228,%eax
  415f4f:	89 c2                	mov    %eax,%edx
  415f51:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  415f55:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  415f59:	e8 c2 b0 fe ff       	callq  401020 <memset@plt>
  415f5e:	e8 f3 f9 02 00       	callq  445956 <writeback_cache>
  415f63:	48 83 c4 10          	add    $0x10,%rsp
  415f67:	5d                   	pop    %rbp
  415f68:	c3                   	retq   
  415f69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000415f70 <mbedtls_x509_crt_free>:
  415f70:	55                   	push   %rbp
  415f71:	48 89 e5             	mov    %rsp,%rbp
  415f74:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
  415f7b:	48 89 7d 80          	mov    %rdi,-0x80(%rbp)
  415f7f:	48 8b 7d 80          	mov    -0x80(%rbp),%rdi
  415f83:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
  415f8a:	48 83 7d 80 00       	cmpq   $0x0,-0x80(%rbp)
  415f8f:	75 05                	jne    415f96 <mbedtls_x509_crt_free+0x26>
  415f91:	e9 66 03 00 00       	jmpq   4162fc <mbedtls_x509_crt_free+0x38c>
  415f96:	eb 00                	jmp    415f98 <mbedtls_x509_crt_free+0x28>
  415f98:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  415f9f:	48 05 48 01 00 00    	add    $0x148,%rax
  415fa5:	48 89 45 88          	mov    %rax,-0x78(%rbp)
  415fa9:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
  415fae:	75 02                	jne    415fb2 <mbedtls_x509_crt_free+0x42>
  415fb0:	eb 54                	jmp    416006 <mbedtls_x509_crt_free+0x96>
  415fb2:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  415fb6:	48 83 38 00          	cmpq   $0x0,(%rax)
  415fba:	74 1f                	je     415fdb <mbedtls_x509_crt_free+0x6b>
  415fbc:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  415fc0:	48 8b 00             	mov    (%rax),%rax
  415fc3:	48 05 a0 00 00 00    	add    $0xa0,%rax
  415fc9:	48 89 c7             	mov    %rax,%rdi
  415fcc:	e8 77 01 03 00       	callq  446148 <getDecryptedValueQWord>
  415fd1:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
  415fd5:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
  415fd9:	ff d0                	callq  *%rax
  415fdb:	31 f6                	xor    %esi,%esi
  415fdd:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  415fe1:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  415fe5:	48 c7 45 90 10 00 00 	movq   $0x10,-0x70(%rbp)
  415fec:	00 
  415fed:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  415ff4:	00 
  415ff5:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
  415ff9:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
  415ffd:	ff d0                	callq  *%rax
  415fff:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  416006:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  41600d:	48 8b 80 c8 00 00 00 	mov    0xc8(%rax),%rax
  416014:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
  41601b:	48 83 bd 68 ff ff ff 	cmpq   $0x0,-0x98(%rbp)
  416022:	00 
  416023:	74 5f                	je     416084 <mbedtls_x509_crt_free+0x114>
  416025:	31 f6                	xor    %esi,%esi
  416027:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  41602e:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
  416035:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  41603c:	48 8b 40 30          	mov    0x30(%rax),%rax
  416040:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
  416047:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  41604e:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  416052:	48 c7 45 a0 40 00 00 	movq   $0x40,-0x60(%rbp)
  416059:	00 
  41605a:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  416061:	00 
  416062:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
  416066:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
  41606a:	ff d0                	callq  *%rax
  41606c:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
  416073:	48 89 d7             	mov    %rdx,%rdi
  416076:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
  41607d:	e8 5e b0 fe ff       	callq  4010e0 <free@plt>
  416082:	eb 97                	jmp    41601b <mbedtls_x509_crt_free+0xab>
  416084:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  41608b:	48 8b 80 08 01 00 00 	mov    0x108(%rax),%rax
  416092:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
  416099:	48 83 bd 68 ff ff ff 	cmpq   $0x0,-0x98(%rbp)
  4160a0:	00 
  4160a1:	74 5f                	je     416102 <mbedtls_x509_crt_free+0x192>
  4160a3:	31 f6                	xor    %esi,%esi
  4160a5:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  4160ac:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
  4160b3:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  4160ba:	48 8b 40 30          	mov    0x30(%rax),%rax
  4160be:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
  4160c5:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  4160cc:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  4160d0:	48 c7 45 b0 40 00 00 	movq   $0x40,-0x50(%rbp)
  4160d7:	00 
  4160d8:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  4160df:	00 
  4160e0:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
  4160e4:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
  4160e8:	ff d0                	callq  *%rax
  4160ea:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
  4160f1:	48 89 d7             	mov    %rdx,%rdi
  4160f4:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
  4160fb:	e8 e0 af fe ff       	callq  4010e0 <free@plt>
  416100:	eb 97                	jmp    416099 <mbedtls_x509_crt_free+0x129>
  416102:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  416109:	48 8b 80 e8 01 00 00 	mov    0x1e8(%rax),%rax
  416110:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
  416117:	48 83 bd 58 ff ff ff 	cmpq   $0x0,-0xa8(%rbp)
  41611e:	00 
  41611f:	74 5f                	je     416180 <mbedtls_x509_crt_free+0x210>
  416121:	31 f6                	xor    %esi,%esi
  416123:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
  41612a:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
  416131:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
  416138:	48 8b 40 18          	mov    0x18(%rax),%rax
  41613c:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
  416143:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
  41614a:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  41614e:	48 c7 45 c0 20 00 00 	movq   $0x20,-0x40(%rbp)
  416155:	00 
  416156:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  41615d:	00 
  41615e:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  416162:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  416166:	ff d0                	callq  *%rax
  416168:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
  41616f:	48 89 d7             	mov    %rdx,%rdi
  416172:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
  416179:	e8 62 af fe ff       	callq  4010e0 <free@plt>
  41617e:	eb 97                	jmp    416117 <mbedtls_x509_crt_free+0x1a7>
  416180:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  416187:	48 8b 80 b8 01 00 00 	mov    0x1b8(%rax),%rax
  41618e:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
  416195:	48 83 bd 58 ff ff ff 	cmpq   $0x0,-0xa8(%rbp)
  41619c:	00 
  41619d:	74 5f                	je     4161fe <mbedtls_x509_crt_free+0x28e>
  41619f:	31 f6                	xor    %esi,%esi
  4161a1:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
  4161a8:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
  4161af:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
  4161b6:	48 8b 40 18          	mov    0x18(%rax),%rax
  4161ba:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
  4161c1:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
  4161c8:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  4161cc:	48 c7 45 d0 20 00 00 	movq   $0x20,-0x30(%rbp)
  4161d3:	00 
  4161d4:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  4161db:	00 
  4161dc:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  4161e0:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  4161e4:	ff d0                	callq  *%rax
  4161e6:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
  4161ed:	48 89 d7             	mov    %rdx,%rdi
  4161f0:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
  4161f7:	e8 e4 ae fe ff       	callq  4010e0 <free@plt>
  4161fc:	eb 97                	jmp    416195 <mbedtls_x509_crt_free+0x225>
  4161fe:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  416205:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
  41620a:	74 49                	je     416255 <mbedtls_x509_crt_free+0x2e5>
  41620c:	31 f6                	xor    %esi,%esi
  41620e:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  416215:	48 8b 40 10          	mov    0x10(%rax),%rax
  416219:	48 8b 8d 78 ff ff ff 	mov    -0x88(%rbp),%rcx
  416220:	48 8b 49 08          	mov    0x8(%rcx),%rcx
  416224:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  416228:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  41622c:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  416233:	00 
  416234:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  416238:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  41623c:	ff d0                	callq  *%rax
  41623e:	48 8b 8d 78 ff ff ff 	mov    -0x88(%rbp),%rcx
  416245:	48 8b 79 10          	mov    0x10(%rcx),%rdi
  416249:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
  416250:	e8 8b ae fe ff       	callq  4010e0 <free@plt>
  416255:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  41625c:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
  416263:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  41626a:	48 83 bd 78 ff ff ff 	cmpq   $0x0,-0x88(%rbp)
  416271:	00 
  416272:	0f 85 20 fd ff ff    	jne    415f98 <mbedtls_x509_crt_free+0x28>
  416278:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  41627c:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  416283:	31 f6                	xor    %esi,%esi
  416285:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  41628c:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
  416293:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  41629a:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
  4162a1:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  4162a8:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  4162af:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4162b3:	48 c7 45 f0 28 02 00 	movq   $0x228,-0x10(%rbp)
  4162ba:	00 
  4162bb:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  4162c2:	00 
  4162c3:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  4162c7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4162cb:	ff d0                	callq  *%rax
  4162cd:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
  4162d4:	48 3b 55 80          	cmp    -0x80(%rbp),%rdx
  4162d8:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
  4162df:	74 0f                	je     4162f0 <mbedtls_x509_crt_free+0x380>
  4162e1:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  4162e8:	48 89 c7             	mov    %rax,%rdi
  4162eb:	e8 f0 ad fe ff       	callq  4010e0 <free@plt>
  4162f0:	eb 00                	jmp    4162f2 <mbedtls_x509_crt_free+0x382>
  4162f2:	48 83 bd 78 ff ff ff 	cmpq   $0x0,-0x88(%rbp)
  4162f9:	00 
  4162fa:	75 87                	jne    416283 <mbedtls_x509_crt_free+0x313>
  4162fc:	e8 55 f6 02 00       	callq  445956 <writeback_cache>
  416301:	48 81 c4 f0 00 00 00 	add    $0xf0,%rsp
  416308:	5d                   	pop    %rbp
  416309:	c3                   	retq   
  41630a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000416310 <x509_get_uid>:
  416310:	55                   	push   %rbp
  416311:	48 89 e5             	mov    %rsp,%rbp
  416314:	48 83 ec 50          	sub    $0x50,%rsp
  416318:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
  41631c:	48 89 75 c8          	mov    %rsi,-0x38(%rbp)
  416320:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
  416324:	89 4d bc             	mov    %ecx,-0x44(%rbp)
  416327:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  41632b:	48 8b 12             	mov    (%rdx),%rdx
  41632e:	48 3b 55 c8          	cmp    -0x38(%rbp),%rdx
  416332:	75 0c                	jne    416340 <x509_get_uid+0x30>
  416334:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
  41633b:	e9 d9 00 00 00       	jmpq   416419 <x509_get_uid+0x109>
  416340:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  416344:	48 8b 00             	mov    (%rax),%rax
  416347:	0f b6 08             	movzbl (%rax),%ecx
  41634a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41634e:	89 08                	mov    %ecx,(%rax)
  416350:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  416354:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  416358:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
  41635c:	48 83 c6 08          	add    $0x8,%rsi
  416360:	8b 4d bc             	mov    -0x44(%rbp),%ecx
  416363:	81 c9 a0 00 00 00    	or     $0xa0,%ecx
  416369:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41636d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  416371:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  416375:	89 4d dc             	mov    %ecx,-0x24(%rbp)
  416378:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41637c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  416380:	48 8b 12             	mov    (%rdx),%rdx
  416383:	48 29 d0             	sub    %rdx,%rax
  416386:	48 83 f8 01          	cmp    $0x1,%rax
  41638a:	7d 09                	jge    416395 <x509_get_uid+0x85>
  41638c:	c7 45 fc a0 ff ff ff 	movl   $0xffffffa0,-0x4(%rbp)
  416393:	eb 3a                	jmp    4163cf <x509_get_uid+0xbf>
  416395:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  416399:	48 8b 00             	mov    (%rax),%rax
  41639c:	0f b6 08             	movzbl (%rax),%ecx
  41639f:	3b 4d dc             	cmp    -0x24(%rbp),%ecx
  4163a2:	74 09                	je     4163ad <x509_get_uid+0x9d>
  4163a4:	c7 45 fc 9e ff ff ff 	movl   $0xffffff9e,-0x4(%rbp)
  4163ab:	eb 22                	jmp    4163cf <x509_get_uid+0xbf>
  4163ad:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4163b1:	48 8b 08             	mov    (%rax),%rcx
  4163b4:	48 83 c1 01          	add    $0x1,%rcx
  4163b8:	48 89 08             	mov    %rcx,(%rax)
  4163bb:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  4163bf:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  4163c3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4163c7:	e8 04 3d 00 00       	callq  41a0d0 <mbedtls_asn1_get_len>
  4163cc:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4163cf:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4163d2:	89 45 b8             	mov    %eax,-0x48(%rbp)
  4163d5:	83 f8 00             	cmp    $0x0,%eax
  4163d8:	74 17                	je     4163f1 <x509_get_uid+0xe1>
  4163da:	83 7d b8 9e          	cmpl   $0xffffff9e,-0x48(%rbp)
  4163de:	75 09                	jne    4163e9 <x509_get_uid+0xd9>
  4163e0:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
  4163e7:	eb 30                	jmp    416419 <x509_get_uid+0x109>
  4163e9:	8b 45 b8             	mov    -0x48(%rbp),%eax
  4163ec:	89 45 d8             	mov    %eax,-0x28(%rbp)
  4163ef:	eb 28                	jmp    416419 <x509_get_uid+0x109>
  4163f1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4163f5:	48 8b 00             	mov    (%rax),%rax
  4163f8:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  4163fc:	48 89 41 10          	mov    %rax,0x10(%rcx)
  416400:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  416404:	48 8b 40 08          	mov    0x8(%rax),%rax
  416408:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  41640c:	48 03 01             	add    (%rcx),%rax
  41640f:	48 89 01             	mov    %rax,(%rcx)
  416412:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
  416419:	8b 45 d8             	mov    -0x28(%rbp),%eax
  41641c:	89 45 b4             	mov    %eax,-0x4c(%rbp)
  41641f:	e8 32 f5 02 00       	callq  445956 <writeback_cache>
  416424:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  416427:	48 83 c4 50          	add    $0x50,%rsp
  41642b:	5d                   	pop    %rbp
  41642c:	c3                   	retq   
  41642d:	0f 1f 00             	nopl   (%rax)

0000000000416430 <mbedtls_x509_crt_parse>:
  416430:	55                   	push   %rbp
  416431:	48 89 e5             	mov    %rsp,%rbp
  416434:	48 81 ec 30 01 00 00 	sub    $0x130,%rsp
  41643b:	48 89 bd 70 ff ff ff 	mov    %rdi,-0x90(%rbp)
  416442:	48 89 b5 68 ff ff ff 	mov    %rsi,-0x98(%rbp)
  416449:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
  416450:	c7 85 5c ff ff ff 00 	movl   $0x0,-0xa4(%rbp)
  416457:	00 00 00 
  41645a:	c7 85 58 ff ff ff 00 	movl   $0x0,-0xa8(%rbp)
  416461:	00 00 00 
  416464:	c7 85 54 ff ff ff 00 	movl   $0x0,-0xac(%rbp)
  41646b:	00 00 00 
  41646e:	c7 85 50 ff ff ff 01 	movl   $0x1,-0xb0(%rbp)
  416475:	00 00 00 
  416478:	48 83 bd 70 ff ff ff 	cmpq   $0x0,-0x90(%rbp)
  41647f:	00 
  416480:	74 0a                	je     41648c <mbedtls_x509_crt_parse+0x5c>
  416482:	48 83 bd 68 ff ff ff 	cmpq   $0x0,-0x98(%rbp)
  416489:	00 
  41648a:	75 0f                	jne    41649b <mbedtls_x509_crt_parse+0x6b>
  41648c:	c7 85 7c ff ff ff 00 	movl   $0xffffd800,-0x84(%rbp)
  416493:	d8 ff ff 
  416496:	e9 81 04 00 00       	jmpq   41691c <mbedtls_x509_crt_parse+0x4ec>
  41649b:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
  4164a2:	00 
  4164a3:	0f 84 02 01 00 00    	je     4165ab <mbedtls_x509_crt_parse+0x17b>
  4164a9:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  4164b0:	48 8b 8d 60 ff ff ff 	mov    -0xa0(%rbp),%rcx
  4164b7:	48 83 e9 01          	sub    $0x1,%rcx
  4164bb:	0f b6 14 08          	movzbl (%rax,%rcx,1),%edx
  4164bf:	83 fa 00             	cmp    $0x0,%edx
  4164c2:	0f 85 e3 00 00 00    	jne    4165ab <mbedtls_x509_crt_parse+0x17b>
  4164c8:	48 b8 d0 73 44 00 00 	movabs $0x4473d0,%rax
  4164cf:	00 00 00 
  4164d2:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
  4164d9:	48 89 4d 98          	mov    %rcx,-0x68(%rbp)
  4164dd:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  4164e1:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  4164e5:	80 38 00             	cmpb   $0x0,(%rax)
  4164e8:	0f 84 a1 00 00 00    	je     41658f <mbedtls_x509_crt_parse+0x15f>
  4164ee:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  4164f2:	48 89 45 88          	mov    %rax,-0x78(%rbp)
  4164f6:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  4164fa:	48 89 45 80          	mov    %rax,-0x80(%rbp)
  4164fe:	31 c0                	xor    %eax,%eax
  416500:	88 c1                	mov    %al,%cl
  416502:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  416506:	0f be 02             	movsbl (%rdx),%eax
  416509:	83 f8 00             	cmp    $0x0,%eax
  41650c:	88 8d 27 ff ff ff    	mov    %cl,-0xd9(%rbp)
  416512:	74 31                	je     416545 <mbedtls_x509_crt_parse+0x115>
  416514:	31 c0                	xor    %eax,%eax
  416516:	88 c1                	mov    %al,%cl
  416518:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
  41651c:	0f be 02             	movsbl (%rdx),%eax
  41651f:	83 f8 00             	cmp    $0x0,%eax
  416522:	88 8d 27 ff ff ff    	mov    %cl,-0xd9(%rbp)
  416528:	74 1b                	je     416545 <mbedtls_x509_crt_parse+0x115>
  41652a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  41652e:	0f be 08             	movsbl (%rax),%ecx
  416531:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  416535:	0f be 10             	movsbl (%rax),%edx
  416538:	39 d1                	cmp    %edx,%ecx
  41653a:	40 0f 94 c6          	sete   %sil
  41653e:	40 88 b5 27 ff ff ff 	mov    %sil,-0xd9(%rbp)
  416545:	8a 85 27 ff ff ff    	mov    -0xd9(%rbp),%al
  41654b:	a8 01                	test   $0x1,%al
  41654d:	75 02                	jne    416551 <mbedtls_x509_crt_parse+0x121>
  41654f:	eb 1a                	jmp    41656b <mbedtls_x509_crt_parse+0x13b>
  416551:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  416555:	48 83 c0 01          	add    $0x1,%rax
  416559:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  41655d:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  416561:	48 83 c0 01          	add    $0x1,%rax
  416565:	48 89 45 80          	mov    %rax,-0x80(%rbp)
  416569:	eb 93                	jmp    4164fe <mbedtls_x509_crt_parse+0xce>
  41656b:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  41656f:	80 38 00             	cmpb   $0x0,(%rax)
  416572:	75 0a                	jne    41657e <mbedtls_x509_crt_parse+0x14e>
  416574:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  416578:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  41657c:	eb 19                	jmp    416597 <mbedtls_x509_crt_parse+0x167>
  41657e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  416582:	48 83 c0 01          	add    $0x1,%rax
  416586:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  41658a:	e9 52 ff ff ff       	jmpq   4164e1 <mbedtls_x509_crt_parse+0xb1>
  41658f:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
  416596:	00 
  416597:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  41659b:	48 83 f8 00          	cmp    $0x0,%rax
  41659f:	74 0a                	je     4165ab <mbedtls_x509_crt_parse+0x17b>
  4165a1:	c7 85 50 ff ff ff 02 	movl   $0x2,-0xb0(%rbp)
  4165a8:	00 00 00 
  4165ab:	83 bd 50 ff ff ff 01 	cmpl   $0x1,-0xb0(%rbp)
  4165b2:	75 25                	jne    4165d9 <mbedtls_x509_crt_parse+0x1a9>
  4165b4:	48 8b bd 70 ff ff ff 	mov    -0x90(%rbp),%rdi
  4165bb:	48 8b b5 68 ff ff ff 	mov    -0x98(%rbp),%rsi
  4165c2:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
  4165c9:	e8 a2 cc ff ff       	callq  413270 <mbedtls_x509_crt_parse_der>
  4165ce:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
  4165d4:	e9 43 03 00 00       	jmpq   41691c <mbedtls_x509_crt_parse+0x4ec>
  4165d9:	83 bd 50 ff ff ff 02 	cmpl   $0x2,-0xb0(%rbp)
  4165e0:	0f 85 fe 02 00 00    	jne    4168e4 <mbedtls_x509_crt_parse+0x4b4>
  4165e6:	48 83 bd 60 ff ff ff 	cmpq   $0x1,-0xa0(%rbp)
  4165ed:	01 
  4165ee:	0f 86 ee 02 00 00    	jbe    4168e2 <mbedtls_x509_crt_parse+0x4b2>
  4165f4:	31 c0                	xor    %eax,%eax
  4165f6:	89 c1                	mov    %eax,%ecx
  4165f8:	48 ba f0 73 44 00 00 	movabs $0x4473f0,%rdx
  4165ff:	00 00 00 
  416602:	48 be d0 73 44 00 00 	movabs $0x4473d0,%rsi
  416609:	00 00 00 
  41660c:	31 c0                	xor    %eax,%eax
  41660e:	bf 18 00 00 00       	mov    $0x18,%edi
  416613:	41 89 f8             	mov    %edi,%r8d
  416616:	4c 8d 8d 30 ff ff ff 	lea    -0xd0(%rbp),%r9
  41661d:	4c 89 4d d0          	mov    %r9,-0x30(%rbp)
  416621:	4c 8b 55 d0          	mov    -0x30(%rbp),%r10
  416625:	4c 89 d7             	mov    %r10,%rdi
  416628:	48 89 b5 18 ff ff ff 	mov    %rsi,-0xe8(%rbp)
  41662f:	89 c6                	mov    %eax,%esi
  416631:	48 89 95 10 ff ff ff 	mov    %rdx,-0xf0(%rbp)
  416638:	4c 89 c2             	mov    %r8,%rdx
  41663b:	48 89 8d 08 ff ff ff 	mov    %rcx,-0xf8(%rbp)
  416642:	4c 89 8d 00 ff ff ff 	mov    %r9,-0x100(%rbp)
  416649:	e8 d2 a9 fe ff       	callq  401020 <memset@plt>
  41664e:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
  416655:	48 8b bd 00 ff ff ff 	mov    -0x100(%rbp),%rdi
  41665c:	48 8b b5 18 ff ff ff 	mov    -0xe8(%rbp),%rsi
  416663:	48 8b 95 10 ff ff ff 	mov    -0xf0(%rbp),%rdx
  41666a:	4c 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%r8
  416671:	4c 8b 8d 08 ff ff ff 	mov    -0xf8(%rbp),%r9
  416678:	4c 8d 95 28 ff ff ff 	lea    -0xd8(%rbp),%r10
  41667f:	4c 89 14 24          	mov    %r10,(%rsp)
  416683:	e8 68 75 01 00       	callq  42dbf0 <mbedtls_pem_read_buffer>
  416688:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
  41668e:	83 bd 4c ff ff ff 00 	cmpl   $0x0,-0xb4(%rbp)
  416695:	75 32                	jne    4166c9 <mbedtls_x509_crt_parse+0x299>
  416697:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  41669e:	48 8b 8d 60 ff ff ff 	mov    -0xa0(%rbp),%rcx
  4166a5:	48 29 c1             	sub    %rax,%rcx
  4166a8:	48 89 8d 60 ff ff ff 	mov    %rcx,-0xa0(%rbp)
  4166af:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4166b6:	48 03 85 68 ff ff ff 	add    -0x98(%rbp),%rax
  4166bd:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
  4166c4:	e9 13 01 00 00       	jmpq   4167dc <mbedtls_x509_crt_parse+0x3ac>
  4166c9:	81 bd 4c ff ff ff 80 	cmpl   $0xffffeb80,-0xb4(%rbp)
  4166d0:	eb ff ff 
  4166d3:	75 11                	jne    4166e6 <mbedtls_x509_crt_parse+0x2b6>
  4166d5:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
  4166db:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
  4166e1:	e9 36 02 00 00       	jmpq   41691c <mbedtls_x509_crt_parse+0x4ec>
  4166e6:	81 bd 4c ff ff ff 80 	cmpl   $0xffffef80,-0xb4(%rbp)
  4166ed:	ef ff ff 
  4166f0:	0f 84 e1 00 00 00    	je     4167d7 <mbedtls_x509_crt_parse+0x3a7>
  4166f6:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  4166fd:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  416701:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416705:	48 83 38 00          	cmpq   $0x0,(%rax)
  416709:	74 3e                	je     416749 <mbedtls_x509_crt_parse+0x319>
  41670b:	31 f6                	xor    %esi,%esi
  41670d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416711:	48 8b 00             	mov    (%rax),%rax
  416714:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  416718:	48 8b 49 08          	mov    0x8(%rcx),%rcx
  41671c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  416720:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  416724:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  41672b:	00 
  41672c:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  416730:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  416734:	ff d0                	callq  *%rax
  416736:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  41673a:	48 8b 39             	mov    (%rcx),%rdi
  41673d:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
  416744:	e8 97 a9 fe ff       	callq  4010e0 <free@plt>
  416749:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41674d:	48 8b 78 10          	mov    0x10(%rax),%rdi
  416751:	e8 8a a9 fe ff       	callq  4010e0 <free@plt>
  416756:	31 f6                	xor    %esi,%esi
  416758:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41675c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  416760:	48 c7 45 f0 18 00 00 	movq   $0x18,-0x10(%rbp)
  416767:	00 
  416768:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  41676f:	00 
  416770:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  416774:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  416778:	ff d0                	callq  *%rax
  41677a:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
  416781:	48 8b bd 60 ff ff ff 	mov    -0xa0(%rbp),%rdi
  416788:	48 29 d7             	sub    %rdx,%rdi
  41678b:	48 89 bd 60 ff ff ff 	mov    %rdi,-0xa0(%rbp)
  416792:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
  416799:	48 03 95 68 ff ff ff 	add    -0x98(%rbp),%rdx
  4167a0:	48 89 95 68 ff ff ff 	mov    %rdx,-0x98(%rbp)
  4167a7:	83 bd 58 ff ff ff 00 	cmpl   $0x0,-0xa8(%rbp)
  4167ae:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
  4167b5:	75 0c                	jne    4167c3 <mbedtls_x509_crt_parse+0x393>
  4167b7:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
  4167bd:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
  4167c3:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
  4167c9:	83 c0 01             	add    $0x1,%eax
  4167cc:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
  4167d2:	e9 0f fe ff ff       	jmpq   4165e6 <mbedtls_x509_crt_parse+0x1b6>
  4167d7:	e9 06 01 00 00       	jmpq   4168e2 <mbedtls_x509_crt_parse+0x4b2>
  4167dc:	48 8b bd 70 ff ff ff 	mov    -0x90(%rbp),%rdi
  4167e3:	48 8b b5 30 ff ff ff 	mov    -0xd0(%rbp),%rsi
  4167ea:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
  4167f1:	e8 7a ca ff ff       	callq  413270 <mbedtls_x509_crt_parse_der>
  4167f6:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
  4167fc:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
  416803:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
  416807:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
  41680b:	48 83 3a 00          	cmpq   $0x0,(%rdx)
  41680f:	74 3e                	je     41684f <mbedtls_x509_crt_parse+0x41f>
  416811:	31 f6                	xor    %esi,%esi
  416813:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  416817:	48 8b 00             	mov    (%rax),%rax
  41681a:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
  41681e:	48 8b 49 08          	mov    0x8(%rcx),%rcx
  416822:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  416826:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
  41682a:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  416831:	00 
  416832:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
  416836:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
  41683a:	ff d0                	callq  *%rax
  41683c:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
  416840:	48 8b 39             	mov    (%rcx),%rdi
  416843:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
  41684a:	e8 91 a8 fe ff       	callq  4010e0 <free@plt>
  41684f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  416853:	48 8b 78 10          	mov    0x10(%rax),%rdi
  416857:	e8 84 a8 fe ff       	callq  4010e0 <free@plt>
  41685c:	31 f6                	xor    %esi,%esi
  41685e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  416862:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  416866:	48 c7 45 c0 18 00 00 	movq   $0x18,-0x40(%rbp)
  41686d:	00 
  41686e:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  416875:	00 
  416876:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  41687a:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  41687e:	ff d0                	callq  *%rax
  416880:	83 bd 4c ff ff ff 00 	cmpl   $0x0,-0xb4(%rbp)
  416887:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
  41688e:	74 43                	je     4168d3 <mbedtls_x509_crt_parse+0x4a3>
  416890:	81 bd 4c ff ff ff 80 	cmpl   $0xffffd780,-0xb4(%rbp)
  416897:	d7 ff ff 
  41689a:	75 0e                	jne    4168aa <mbedtls_x509_crt_parse+0x47a>
  41689c:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
  4168a2:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
  4168a8:	eb 72                	jmp    41691c <mbedtls_x509_crt_parse+0x4ec>
  4168aa:	83 bd 58 ff ff ff 00 	cmpl   $0x0,-0xa8(%rbp)
  4168b1:	75 0c                	jne    4168bf <mbedtls_x509_crt_parse+0x48f>
  4168b3:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
  4168b9:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
  4168bf:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
  4168c5:	83 c0 01             	add    $0x1,%eax
  4168c8:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
  4168ce:	e9 13 fd ff ff       	jmpq   4165e6 <mbedtls_x509_crt_parse+0x1b6>
  4168d3:	c7 85 5c ff ff ff 01 	movl   $0x1,-0xa4(%rbp)
  4168da:	00 00 00 
  4168dd:	e9 04 fd ff ff       	jmpq   4165e6 <mbedtls_x509_crt_parse+0x1b6>
  4168e2:	eb 00                	jmp    4168e4 <mbedtls_x509_crt_parse+0x4b4>
  4168e4:	83 bd 5c ff ff ff 00 	cmpl   $0x0,-0xa4(%rbp)
  4168eb:	74 0e                	je     4168fb <mbedtls_x509_crt_parse+0x4cb>
  4168ed:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
  4168f3:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
  4168f9:	eb 21                	jmp    41691c <mbedtls_x509_crt_parse+0x4ec>
  4168fb:	83 bd 58 ff ff ff 00 	cmpl   $0x0,-0xa8(%rbp)
  416902:	74 0e                	je     416912 <mbedtls_x509_crt_parse+0x4e2>
  416904:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
  41690a:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
  416910:	eb 0a                	jmp    41691c <mbedtls_x509_crt_parse+0x4ec>
  416912:	c7 85 7c ff ff ff 80 	movl   $0xffffd880,-0x84(%rbp)
  416919:	d8 ff ff 
  41691c:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
  416922:	89 85 dc fe ff ff    	mov    %eax,-0x124(%rbp)
  416928:	e8 29 f0 02 00       	callq  445956 <writeback_cache>
  41692d:	8b 85 dc fe ff ff    	mov    -0x124(%rbp),%eax
  416933:	48 81 c4 30 01 00 00 	add    $0x130,%rsp
  41693a:	5d                   	pop    %rbp
  41693b:	c3                   	retq   
  41693c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000416940 <mbedtls_x509_crt_parse_file>:
  416940:	55                   	push   %rbp
  416941:	48 89 e5             	mov    %rsp,%rbp
  416944:	48 83 ec 40          	sub    $0x40,%rsp
  416948:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  41694c:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  416950:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  416954:	48 8d 75 d0          	lea    -0x30(%rbp),%rsi
  416958:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
  41695c:	e8 0f ca 01 00       	callq  433370 <mbedtls_pk_load_file>
  416961:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  416964:	83 f8 00             	cmp    $0x0,%eax
  416967:	74 08                	je     416971 <mbedtls_x509_crt_parse_file+0x31>
  416969:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  41696c:	89 45 fc             	mov    %eax,-0x4(%rbp)
  41696f:	eb 30                	jmp    4169a1 <mbedtls_x509_crt_parse_file+0x61>
  416971:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  416975:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  416979:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41697d:	e8 ae fa ff ff       	callq  416430 <mbedtls_x509_crt_parse>
  416982:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  416985:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  416989:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  41698d:	e8 de f6 01 00       	callq  436070 <mbedtls_platform_zeroize>
  416992:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  416996:	e8 45 a7 fe ff       	callq  4010e0 <free@plt>
  41699b:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  41699e:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4169a1:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4169a4:	89 45 cc             	mov    %eax,-0x34(%rbp)
  4169a7:	e8 aa ef 02 00       	callq  445956 <writeback_cache>
  4169ac:	8b 45 cc             	mov    -0x34(%rbp),%eax
  4169af:	48 83 c4 40          	add    $0x40,%rsp
  4169b3:	5d                   	pop    %rbp
  4169b4:	c3                   	retq   
  4169b5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  4169bc:	00 00 00 00 

00000000004169c0 <x509_info_subject_alt_name>:
  4169c0:	55                   	push   %rbp
  4169c1:	48 89 e5             	mov    %rsp,%rbp
  4169c4:	48 83 ec 60          	sub    $0x60,%rsp
  4169c8:	48 b8 d0 6d 44 00 00 	movabs $0x446dd0,%rax
  4169cf:	00 00 00 
  4169d2:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  4169d6:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  4169da:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
  4169de:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4169e2:	48 8b 12             	mov    (%rdx),%rdx
  4169e5:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
  4169e9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4169ed:	48 8b 12             	mov    (%rdx),%rdx
  4169f0:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  4169f4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4169f8:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
  4169fc:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  416a00:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
  416a07:	00 
  416a08:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  416a0d:	0f 84 e3 00 00 00    	je     416af6 <x509_info_subject_alt_name+0x136>
  416a13:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  416a17:	48 8b 40 08          	mov    0x8(%rax),%rax
  416a1b:	48 03 45 b0          	add    -0x50(%rbp),%rax
  416a1f:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
  416a23:	72 13                	jb     416a38 <x509_info_subject_alt_name+0x78>
  416a25:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  416a29:	c6 00 00             	movb   $0x0,(%rax)
  416a2c:	c7 45 fc 80 d6 ff ff 	movl   $0xffffd680,-0x4(%rbp)
  416a33:	e9 e2 00 00 00       	jmpq   416b1a <x509_info_subject_alt_name+0x15a>
  416a38:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  416a3c:	48 8b 40 08          	mov    0x8(%rax),%rax
  416a40:	48 03 45 b0          	add    -0x50(%rbp),%rax
  416a44:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  416a48:	48 29 c1             	sub    %rax,%rcx
  416a4b:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  416a4f:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
  416a56:	00 
  416a57:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416a5b:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
  416a5f:	73 2a                	jae    416a8b <x509_info_subject_alt_name+0xcb>
  416a61:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  416a65:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  416a69:	8a 14 08             	mov    (%rax,%rcx,1),%dl
  416a6c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  416a70:	48 89 c1             	mov    %rax,%rcx
  416a73:	48 83 c1 01          	add    $0x1,%rcx
  416a77:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
  416a7b:	88 10                	mov    %dl,(%rax)
  416a7d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416a81:	48 83 c0 01          	add    $0x1,%rax
  416a85:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  416a89:	eb cc                	jmp    416a57 <x509_info_subject_alt_name+0x97>
  416a8b:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
  416a92:	00 
  416a93:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416a97:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  416a9b:	48 3b 41 08          	cmp    0x8(%rcx),%rax
  416a9f:	73 2e                	jae    416acf <x509_info_subject_alt_name+0x10f>
  416aa1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  416aa5:	48 8b 40 10          	mov    0x10(%rax),%rax
  416aa9:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  416aad:	8a 14 08             	mov    (%rax,%rcx,1),%dl
  416ab0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  416ab4:	48 89 c1             	mov    %rax,%rcx
  416ab7:	48 83 c1 01          	add    $0x1,%rcx
  416abb:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
  416abf:	88 10                	mov    %dl,(%rax)
  416ac1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416ac5:	48 83 c0 01          	add    $0x1,%rax
  416ac9:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  416acd:	eb c4                	jmp    416a93 <x509_info_subject_alt_name+0xd3>
  416acf:	48 b8 90 76 44 00 00 	movabs $0x447690,%rax
  416ad6:	00 00 00 
  416ad9:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  416add:	48 c7 45 b0 02 00 00 	movq   $0x2,-0x50(%rbp)
  416ae4:	00 
  416ae5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  416ae9:	48 8b 40 18          	mov    0x18(%rax),%rax
  416aed:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  416af1:	e9 12 ff ff ff       	jmpq   416a08 <x509_info_subject_alt_name+0x48>
  416af6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  416afa:	c6 00 00             	movb   $0x0,(%rax)
  416afd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  416b01:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  416b05:	48 89 01             	mov    %rax,(%rcx)
  416b08:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  416b0c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  416b10:	48 89 01             	mov    %rax,(%rcx)
  416b13:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  416b1a:	8b 45 fc             	mov    -0x4(%rbp),%eax
  416b1d:	89 45 ac             	mov    %eax,-0x54(%rbp)
  416b20:	e8 31 ee 02 00       	callq  445956 <writeback_cache>
  416b25:	8b 45 ac             	mov    -0x54(%rbp),%eax
  416b28:	48 83 c4 60          	add    $0x60,%rsp
  416b2c:	5d                   	pop    %rbp
  416b2d:	c3                   	retq   
  416b2e:	66 90                	xchg   %ax,%ax

0000000000416b30 <x509_info_cert_type>:
  416b30:	55                   	push   %rbp
  416b31:	48 89 e5             	mov    %rsp,%rbp
  416b34:	48 83 ec 40          	sub    $0x40,%rsp
  416b38:	88 d0                	mov    %dl,%al
  416b3a:	48 b9 d0 6d 44 00 00 	movabs $0x446dd0,%rcx
  416b41:	00 00 00 
  416b44:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  416b48:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  416b4c:	88 45 e7             	mov    %al,-0x19(%rbp)
  416b4f:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  416b53:	48 8b 36             	mov    (%rsi),%rsi
  416b56:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
  416b5a:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  416b5e:	48 8b 36             	mov    (%rsi),%rsi
  416b61:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  416b65:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
  416b69:	0f b6 55 e7          	movzbl -0x19(%rbp),%edx
  416b6d:	81 e2 80 00 00 00    	and    $0x80,%edx
  416b73:	83 fa 00             	cmp    $0x0,%edx
  416b76:	74 65                	je     416bdd <x509_info_cert_type+0xad>
  416b78:	48 ba 70 77 44 00 00 	movabs $0x447770,%rdx
  416b7f:	00 00 00 
  416b82:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  416b86:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  416b8a:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  416b8e:	b0 00                	mov    $0x0,%al
  416b90:	e8 6b a6 fe ff       	callq  401200 <snprintf@plt>
  416b95:	89 45 e0             	mov    %eax,-0x20(%rbp)
  416b98:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
  416b9c:	7c 0a                	jl     416ba8 <x509_info_cert_type+0x78>
  416b9e:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  416ba2:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
  416ba6:	72 0c                	jb     416bb4 <x509_info_cert_type+0x84>
  416ba8:	c7 45 fc 80 d6 ff ff 	movl   $0xffffd680,-0x4(%rbp)
  416baf:	e9 5a 03 00 00       	jmpq   416f0e <x509_info_cert_type+0x3de>
  416bb4:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  416bb8:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  416bbc:	48 29 c1             	sub    %rax,%rcx
  416bbf:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  416bc3:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  416bc7:	48 03 45 d0          	add    -0x30(%rbp),%rax
  416bcb:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  416bcf:	48 b8 90 76 44 00 00 	movabs $0x447690,%rax
  416bd6:	00 00 00 
  416bd9:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  416bdd:	0f b6 45 e7          	movzbl -0x19(%rbp),%eax
  416be1:	83 e0 40             	and    $0x40,%eax
  416be4:	83 f8 00             	cmp    $0x0,%eax
  416be7:	74 65                	je     416c4e <x509_info_cert_type+0x11e>
  416be9:	48 ba 80 77 44 00 00 	movabs $0x447780,%rdx
  416bf0:	00 00 00 
  416bf3:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  416bf7:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  416bfb:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  416bff:	b0 00                	mov    $0x0,%al
  416c01:	e8 fa a5 fe ff       	callq  401200 <snprintf@plt>
  416c06:	89 45 e0             	mov    %eax,-0x20(%rbp)
  416c09:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
  416c0d:	7c 0a                	jl     416c19 <x509_info_cert_type+0xe9>
  416c0f:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  416c13:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
  416c17:	72 0c                	jb     416c25 <x509_info_cert_type+0xf5>
  416c19:	c7 45 fc 80 d6 ff ff 	movl   $0xffffd680,-0x4(%rbp)
  416c20:	e9 e9 02 00 00       	jmpq   416f0e <x509_info_cert_type+0x3de>
  416c25:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  416c29:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  416c2d:	48 29 c1             	sub    %rax,%rcx
  416c30:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  416c34:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  416c38:	48 03 45 d0          	add    -0x30(%rbp),%rax
  416c3c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  416c40:	48 b8 90 76 44 00 00 	movabs $0x447690,%rax
  416c47:	00 00 00 
  416c4a:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  416c4e:	0f b6 45 e7          	movzbl -0x19(%rbp),%eax
  416c52:	83 e0 20             	and    $0x20,%eax
  416c55:	83 f8 00             	cmp    $0x0,%eax
  416c58:	74 65                	je     416cbf <x509_info_cert_type+0x18f>
  416c5a:	48 ba 90 77 44 00 00 	movabs $0x447790,%rdx
  416c61:	00 00 00 
  416c64:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  416c68:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  416c6c:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  416c70:	b0 00                	mov    $0x0,%al
  416c72:	e8 89 a5 fe ff       	callq  401200 <snprintf@plt>
  416c77:	89 45 e0             	mov    %eax,-0x20(%rbp)
  416c7a:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
  416c7e:	7c 0a                	jl     416c8a <x509_info_cert_type+0x15a>
  416c80:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  416c84:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
  416c88:	72 0c                	jb     416c96 <x509_info_cert_type+0x166>
  416c8a:	c7 45 fc 80 d6 ff ff 	movl   $0xffffd680,-0x4(%rbp)
  416c91:	e9 78 02 00 00       	jmpq   416f0e <x509_info_cert_type+0x3de>
  416c96:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  416c9a:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  416c9e:	48 29 c1             	sub    %rax,%rcx
  416ca1:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  416ca5:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  416ca9:	48 03 45 d0          	add    -0x30(%rbp),%rax
  416cad:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  416cb1:	48 b8 90 76 44 00 00 	movabs $0x447690,%rax
  416cb8:	00 00 00 
  416cbb:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  416cbf:	0f b6 45 e7          	movzbl -0x19(%rbp),%eax
  416cc3:	83 e0 10             	and    $0x10,%eax
  416cc6:	83 f8 00             	cmp    $0x0,%eax
  416cc9:	74 65                	je     416d30 <x509_info_cert_type+0x200>
  416ccb:	48 ba a0 77 44 00 00 	movabs $0x4477a0,%rdx
  416cd2:	00 00 00 
  416cd5:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  416cd9:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  416cdd:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  416ce1:	b0 00                	mov    $0x0,%al
  416ce3:	e8 18 a5 fe ff       	callq  401200 <snprintf@plt>
  416ce8:	89 45 e0             	mov    %eax,-0x20(%rbp)
  416ceb:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
  416cef:	7c 0a                	jl     416cfb <x509_info_cert_type+0x1cb>
  416cf1:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  416cf5:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
  416cf9:	72 0c                	jb     416d07 <x509_info_cert_type+0x1d7>
  416cfb:	c7 45 fc 80 d6 ff ff 	movl   $0xffffd680,-0x4(%rbp)
  416d02:	e9 07 02 00 00       	jmpq   416f0e <x509_info_cert_type+0x3de>
  416d07:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  416d0b:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  416d0f:	48 29 c1             	sub    %rax,%rcx
  416d12:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  416d16:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  416d1a:	48 03 45 d0          	add    -0x30(%rbp),%rax
  416d1e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  416d22:	48 b8 90 76 44 00 00 	movabs $0x447690,%rax
  416d29:	00 00 00 
  416d2c:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  416d30:	0f b6 45 e7          	movzbl -0x19(%rbp),%eax
  416d34:	83 e0 08             	and    $0x8,%eax
  416d37:	83 f8 00             	cmp    $0x0,%eax
  416d3a:	74 65                	je     416da1 <x509_info_cert_type+0x271>
  416d3c:	48 ba c0 77 44 00 00 	movabs $0x4477c0,%rdx
  416d43:	00 00 00 
  416d46:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  416d4a:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  416d4e:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  416d52:	b0 00                	mov    $0x0,%al
  416d54:	e8 a7 a4 fe ff       	callq  401200 <snprintf@plt>
  416d59:	89 45 e0             	mov    %eax,-0x20(%rbp)
  416d5c:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
  416d60:	7c 0a                	jl     416d6c <x509_info_cert_type+0x23c>
  416d62:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  416d66:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
  416d6a:	72 0c                	jb     416d78 <x509_info_cert_type+0x248>
  416d6c:	c7 45 fc 80 d6 ff ff 	movl   $0xffffd680,-0x4(%rbp)
  416d73:	e9 96 01 00 00       	jmpq   416f0e <x509_info_cert_type+0x3de>
  416d78:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  416d7c:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  416d80:	48 29 c1             	sub    %rax,%rcx
  416d83:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  416d87:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  416d8b:	48 03 45 d0          	add    -0x30(%rbp),%rax
  416d8f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  416d93:	48 b8 90 76 44 00 00 	movabs $0x447690,%rax
  416d9a:	00 00 00 
  416d9d:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  416da1:	0f b6 45 e7          	movzbl -0x19(%rbp),%eax
  416da5:	83 e0 04             	and    $0x4,%eax
  416da8:	83 f8 00             	cmp    $0x0,%eax
  416dab:	74 65                	je     416e12 <x509_info_cert_type+0x2e2>
  416dad:	48 ba d0 77 44 00 00 	movabs $0x4477d0,%rdx
  416db4:	00 00 00 
  416db7:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  416dbb:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  416dbf:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  416dc3:	b0 00                	mov    $0x0,%al
  416dc5:	e8 36 a4 fe ff       	callq  401200 <snprintf@plt>
  416dca:	89 45 e0             	mov    %eax,-0x20(%rbp)
  416dcd:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
  416dd1:	7c 0a                	jl     416ddd <x509_info_cert_type+0x2ad>
  416dd3:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  416dd7:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
  416ddb:	72 0c                	jb     416de9 <x509_info_cert_type+0x2b9>
  416ddd:	c7 45 fc 80 d6 ff ff 	movl   $0xffffd680,-0x4(%rbp)
  416de4:	e9 25 01 00 00       	jmpq   416f0e <x509_info_cert_type+0x3de>
  416de9:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  416ded:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  416df1:	48 29 c1             	sub    %rax,%rcx
  416df4:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  416df8:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  416dfc:	48 03 45 d0          	add    -0x30(%rbp),%rax
  416e00:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  416e04:	48 b8 90 76 44 00 00 	movabs $0x447690,%rax
  416e0b:	00 00 00 
  416e0e:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  416e12:	0f b6 45 e7          	movzbl -0x19(%rbp),%eax
  416e16:	83 e0 02             	and    $0x2,%eax
  416e19:	83 f8 00             	cmp    $0x0,%eax
  416e1c:	74 65                	je     416e83 <x509_info_cert_type+0x353>
  416e1e:	48 ba e0 77 44 00 00 	movabs $0x4477e0,%rdx
  416e25:	00 00 00 
  416e28:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  416e2c:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  416e30:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  416e34:	b0 00                	mov    $0x0,%al
  416e36:	e8 c5 a3 fe ff       	callq  401200 <snprintf@plt>
  416e3b:	89 45 e0             	mov    %eax,-0x20(%rbp)
  416e3e:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
  416e42:	7c 0a                	jl     416e4e <x509_info_cert_type+0x31e>
  416e44:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  416e48:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
  416e4c:	72 0c                	jb     416e5a <x509_info_cert_type+0x32a>
  416e4e:	c7 45 fc 80 d6 ff ff 	movl   $0xffffd680,-0x4(%rbp)
  416e55:	e9 b4 00 00 00       	jmpq   416f0e <x509_info_cert_type+0x3de>
  416e5a:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  416e5e:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  416e62:	48 29 c1             	sub    %rax,%rcx
  416e65:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  416e69:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  416e6d:	48 03 45 d0          	add    -0x30(%rbp),%rax
  416e71:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  416e75:	48 b8 90 76 44 00 00 	movabs $0x447690,%rax
  416e7c:	00 00 00 
  416e7f:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  416e83:	0f b6 45 e7          	movzbl -0x19(%rbp),%eax
  416e87:	83 e0 01             	and    $0x1,%eax
  416e8a:	83 f8 00             	cmp    $0x0,%eax
  416e8d:	74 62                	je     416ef1 <x509_info_cert_type+0x3c1>
  416e8f:	48 ba f0 77 44 00 00 	movabs $0x4477f0,%rdx
  416e96:	00 00 00 
  416e99:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  416e9d:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  416ea1:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  416ea5:	b0 00                	mov    $0x0,%al
  416ea7:	e8 54 a3 fe ff       	callq  401200 <snprintf@plt>
  416eac:	89 45 e0             	mov    %eax,-0x20(%rbp)
  416eaf:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
  416eb3:	7c 0a                	jl     416ebf <x509_info_cert_type+0x38f>
  416eb5:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  416eb9:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
  416ebd:	72 09                	jb     416ec8 <x509_info_cert_type+0x398>
  416ebf:	c7 45 fc 80 d6 ff ff 	movl   $0xffffd680,-0x4(%rbp)
  416ec6:	eb 46                	jmp    416f0e <x509_info_cert_type+0x3de>
  416ec8:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  416ecc:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  416ed0:	48 29 c1             	sub    %rax,%rcx
  416ed3:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  416ed7:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  416edb:	48 03 45 d0          	add    -0x30(%rbp),%rax
  416edf:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  416ee3:	48 b8 90 76 44 00 00 	movabs $0x447690,%rax
  416eea:	00 00 00 
  416eed:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  416ef1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416ef5:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  416ef9:	48 89 01             	mov    %rax,(%rcx)
  416efc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  416f00:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  416f04:	48 89 01             	mov    %rax,(%rcx)
  416f07:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  416f0e:	8b 45 fc             	mov    -0x4(%rbp),%eax
  416f11:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  416f14:	e8 3d ea 02 00       	callq  445956 <writeback_cache>
  416f19:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  416f1c:	48 83 c4 40          	add    $0x40,%rsp
  416f20:	5d                   	pop    %rbp
  416f21:	c3                   	retq   
  416f22:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  416f29:	1f 84 00 00 00 00 00 

0000000000416f30 <x509_info_key_usage>:
  416f30:	55                   	push   %rbp
  416f31:	48 89 e5             	mov    %rsp,%rbp
  416f34:	48 83 ec 40          	sub    $0x40,%rsp
  416f38:	48 b8 d0 6d 44 00 00 	movabs $0x446dd0,%rax
  416f3f:	00 00 00 
  416f42:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  416f46:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  416f4a:	89 55 e4             	mov    %edx,-0x1c(%rbp)
  416f4d:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  416f51:	48 8b 36             	mov    (%rsi),%rsi
  416f54:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
  416f58:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  416f5c:	48 8b 36             	mov    (%rsi),%rsi
  416f5f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  416f63:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  416f67:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  416f6a:	81 e2 80 00 00 00    	and    $0x80,%edx
  416f70:	83 fa 00             	cmp    $0x0,%edx
  416f73:	74 65                	je     416fda <x509_info_key_usage+0xaa>
  416f75:	48 ba a0 76 44 00 00 	movabs $0x4476a0,%rdx
  416f7c:	00 00 00 
  416f7f:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  416f83:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  416f87:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  416f8b:	b0 00                	mov    $0x0,%al
  416f8d:	e8 6e a2 fe ff       	callq  401200 <snprintf@plt>
  416f92:	89 45 e0             	mov    %eax,-0x20(%rbp)
  416f95:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
  416f99:	7c 0a                	jl     416fa5 <x509_info_key_usage+0x75>
  416f9b:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  416f9f:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
  416fa3:	72 0c                	jb     416fb1 <x509_info_key_usage+0x81>
  416fa5:	c7 45 fc 80 d6 ff ff 	movl   $0xffffd680,-0x4(%rbp)
  416fac:	e9 c5 03 00 00       	jmpq   417376 <x509_info_key_usage+0x446>
  416fb1:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  416fb5:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  416fb9:	48 29 c1             	sub    %rax,%rcx
  416fbc:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  416fc0:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  416fc4:	48 03 45 d0          	add    -0x30(%rbp),%rax
  416fc8:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  416fcc:	48 b8 90 76 44 00 00 	movabs $0x447690,%rax
  416fd3:	00 00 00 
  416fd6:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  416fda:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  416fdd:	83 e0 40             	and    $0x40,%eax
  416fe0:	83 f8 00             	cmp    $0x0,%eax
  416fe3:	74 65                	je     41704a <x509_info_key_usage+0x11a>
  416fe5:	48 ba c0 76 44 00 00 	movabs $0x4476c0,%rdx
  416fec:	00 00 00 
  416fef:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  416ff3:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  416ff7:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  416ffb:	b0 00                	mov    $0x0,%al
  416ffd:	e8 fe a1 fe ff       	callq  401200 <snprintf@plt>
  417002:	89 45 e0             	mov    %eax,-0x20(%rbp)
  417005:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
  417009:	7c 0a                	jl     417015 <x509_info_key_usage+0xe5>
  41700b:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  41700f:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
  417013:	72 0c                	jb     417021 <x509_info_key_usage+0xf1>
  417015:	c7 45 fc 80 d6 ff ff 	movl   $0xffffd680,-0x4(%rbp)
  41701c:	e9 55 03 00 00       	jmpq   417376 <x509_info_key_usage+0x446>
  417021:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  417025:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  417029:	48 29 c1             	sub    %rax,%rcx
  41702c:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  417030:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  417034:	48 03 45 d0          	add    -0x30(%rbp),%rax
  417038:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  41703c:	48 b8 90 76 44 00 00 	movabs $0x447690,%rax
  417043:	00 00 00 
  417046:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  41704a:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  41704d:	83 e0 20             	and    $0x20,%eax
  417050:	83 f8 00             	cmp    $0x0,%eax
  417053:	74 65                	je     4170ba <x509_info_key_usage+0x18a>
  417055:	48 ba e0 76 44 00 00 	movabs $0x4476e0,%rdx
  41705c:	00 00 00 
  41705f:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  417063:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  417067:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  41706b:	b0 00                	mov    $0x0,%al
  41706d:	e8 8e a1 fe ff       	callq  401200 <snprintf@plt>
  417072:	89 45 e0             	mov    %eax,-0x20(%rbp)
  417075:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
  417079:	7c 0a                	jl     417085 <x509_info_key_usage+0x155>
  41707b:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  41707f:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
  417083:	72 0c                	jb     417091 <x509_info_key_usage+0x161>
  417085:	c7 45 fc 80 d6 ff ff 	movl   $0xffffd680,-0x4(%rbp)
  41708c:	e9 e5 02 00 00       	jmpq   417376 <x509_info_key_usage+0x446>
  417091:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  417095:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  417099:	48 29 c1             	sub    %rax,%rcx
  41709c:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  4170a0:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  4170a4:	48 03 45 d0          	add    -0x30(%rbp),%rax
  4170a8:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  4170ac:	48 b8 90 76 44 00 00 	movabs $0x447690,%rax
  4170b3:	00 00 00 
  4170b6:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  4170ba:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  4170bd:	83 e0 10             	and    $0x10,%eax
  4170c0:	83 f8 00             	cmp    $0x0,%eax
  4170c3:	74 65                	je     41712a <x509_info_key_usage+0x1fa>
  4170c5:	48 ba 00 77 44 00 00 	movabs $0x447700,%rdx
  4170cc:	00 00 00 
  4170cf:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  4170d3:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  4170d7:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  4170db:	b0 00                	mov    $0x0,%al
  4170dd:	e8 1e a1 fe ff       	callq  401200 <snprintf@plt>
  4170e2:	89 45 e0             	mov    %eax,-0x20(%rbp)
  4170e5:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
  4170e9:	7c 0a                	jl     4170f5 <x509_info_key_usage+0x1c5>
  4170eb:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  4170ef:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
  4170f3:	72 0c                	jb     417101 <x509_info_key_usage+0x1d1>
  4170f5:	c7 45 fc 80 d6 ff ff 	movl   $0xffffd680,-0x4(%rbp)
  4170fc:	e9 75 02 00 00       	jmpq   417376 <x509_info_key_usage+0x446>
  417101:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  417105:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  417109:	48 29 c1             	sub    %rax,%rcx
  41710c:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  417110:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  417114:	48 03 45 d0          	add    -0x30(%rbp),%rax
  417118:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  41711c:	48 b8 90 76 44 00 00 	movabs $0x447690,%rax
  417123:	00 00 00 
  417126:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  41712a:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  41712d:	83 e0 08             	and    $0x8,%eax
  417130:	83 f8 00             	cmp    $0x0,%eax
  417133:	74 65                	je     41719a <x509_info_key_usage+0x26a>
  417135:	48 ba 20 77 44 00 00 	movabs $0x447720,%rdx
  41713c:	00 00 00 
  41713f:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  417143:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  417147:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  41714b:	b0 00                	mov    $0x0,%al
  41714d:	e8 ae a0 fe ff       	callq  401200 <snprintf@plt>
  417152:	89 45 e0             	mov    %eax,-0x20(%rbp)
  417155:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
  417159:	7c 0a                	jl     417165 <x509_info_key_usage+0x235>
  41715b:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  41715f:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
  417163:	72 0c                	jb     417171 <x509_info_key_usage+0x241>
  417165:	c7 45 fc 80 d6 ff ff 	movl   $0xffffd680,-0x4(%rbp)
  41716c:	e9 05 02 00 00       	jmpq   417376 <x509_info_key_usage+0x446>
  417171:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  417175:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  417179:	48 29 c1             	sub    %rax,%rcx
  41717c:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  417180:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  417184:	48 03 45 d0          	add    -0x30(%rbp),%rax
  417188:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  41718c:	48 b8 90 76 44 00 00 	movabs $0x447690,%rax
  417193:	00 00 00 
  417196:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  41719a:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  41719d:	83 e0 04             	and    $0x4,%eax
  4171a0:	83 f8 00             	cmp    $0x0,%eax
  4171a3:	74 65                	je     41720a <x509_info_key_usage+0x2da>
  4171a5:	48 ba 30 77 44 00 00 	movabs $0x447730,%rdx
  4171ac:	00 00 00 
  4171af:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  4171b3:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  4171b7:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  4171bb:	b0 00                	mov    $0x0,%al
  4171bd:	e8 3e a0 fe ff       	callq  401200 <snprintf@plt>
  4171c2:	89 45 e0             	mov    %eax,-0x20(%rbp)
  4171c5:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
  4171c9:	7c 0a                	jl     4171d5 <x509_info_key_usage+0x2a5>
  4171cb:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  4171cf:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
  4171d3:	72 0c                	jb     4171e1 <x509_info_key_usage+0x2b1>
  4171d5:	c7 45 fc 80 d6 ff ff 	movl   $0xffffd680,-0x4(%rbp)
  4171dc:	e9 95 01 00 00       	jmpq   417376 <x509_info_key_usage+0x446>
  4171e1:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  4171e5:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  4171e9:	48 29 c1             	sub    %rax,%rcx
  4171ec:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  4171f0:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  4171f4:	48 03 45 d0          	add    -0x30(%rbp),%rax
  4171f8:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  4171fc:	48 b8 90 76 44 00 00 	movabs $0x447690,%rax
  417203:	00 00 00 
  417206:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  41720a:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  41720d:	83 e0 02             	and    $0x2,%eax
  417210:	83 f8 00             	cmp    $0x0,%eax
  417213:	74 65                	je     41727a <x509_info_key_usage+0x34a>
  417215:	48 ba 40 77 44 00 00 	movabs $0x447740,%rdx
  41721c:	00 00 00 
  41721f:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  417223:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  417227:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  41722b:	b0 00                	mov    $0x0,%al
  41722d:	e8 ce 9f fe ff       	callq  401200 <snprintf@plt>
  417232:	89 45 e0             	mov    %eax,-0x20(%rbp)
  417235:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
  417239:	7c 0a                	jl     417245 <x509_info_key_usage+0x315>
  41723b:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  41723f:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
  417243:	72 0c                	jb     417251 <x509_info_key_usage+0x321>
  417245:	c7 45 fc 80 d6 ff ff 	movl   $0xffffd680,-0x4(%rbp)
  41724c:	e9 25 01 00 00       	jmpq   417376 <x509_info_key_usage+0x446>
  417251:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  417255:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  417259:	48 29 c1             	sub    %rax,%rcx
  41725c:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  417260:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  417264:	48 03 45 d0          	add    -0x30(%rbp),%rax
  417268:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  41726c:	48 b8 90 76 44 00 00 	movabs $0x447690,%rax
  417273:	00 00 00 
  417276:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  41727a:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  41727d:	83 e0 01             	and    $0x1,%eax
  417280:	83 f8 00             	cmp    $0x0,%eax
  417283:	74 65                	je     4172ea <x509_info_key_usage+0x3ba>
  417285:	48 ba 50 77 44 00 00 	movabs $0x447750,%rdx
  41728c:	00 00 00 
  41728f:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  417293:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  417297:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  41729b:	b0 00                	mov    $0x0,%al
  41729d:	e8 5e 9f fe ff       	callq  401200 <snprintf@plt>
  4172a2:	89 45 e0             	mov    %eax,-0x20(%rbp)
  4172a5:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
  4172a9:	7c 0a                	jl     4172b5 <x509_info_key_usage+0x385>
  4172ab:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  4172af:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
  4172b3:	72 0c                	jb     4172c1 <x509_info_key_usage+0x391>
  4172b5:	c7 45 fc 80 d6 ff ff 	movl   $0xffffd680,-0x4(%rbp)
  4172bc:	e9 b5 00 00 00       	jmpq   417376 <x509_info_key_usage+0x446>
  4172c1:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  4172c5:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  4172c9:	48 29 c1             	sub    %rax,%rcx
  4172cc:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  4172d0:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  4172d4:	48 03 45 d0          	add    -0x30(%rbp),%rax
  4172d8:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  4172dc:	48 b8 90 76 44 00 00 	movabs $0x447690,%rax
  4172e3:	00 00 00 
  4172e6:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  4172ea:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  4172ed:	25 00 80 00 00       	and    $0x8000,%eax
  4172f2:	83 f8 00             	cmp    $0x0,%eax
  4172f5:	74 62                	je     417359 <x509_info_key_usage+0x429>
  4172f7:	48 ba 60 77 44 00 00 	movabs $0x447760,%rdx
  4172fe:	00 00 00 
  417301:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  417305:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  417309:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  41730d:	b0 00                	mov    $0x0,%al
  41730f:	e8 ec 9e fe ff       	callq  401200 <snprintf@plt>
  417314:	89 45 e0             	mov    %eax,-0x20(%rbp)
  417317:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
  41731b:	7c 0a                	jl     417327 <x509_info_key_usage+0x3f7>
  41731d:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  417321:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
  417325:	72 09                	jb     417330 <x509_info_key_usage+0x400>
  417327:	c7 45 fc 80 d6 ff ff 	movl   $0xffffd680,-0x4(%rbp)
  41732e:	eb 46                	jmp    417376 <x509_info_key_usage+0x446>
  417330:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  417334:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  417338:	48 29 c1             	sub    %rax,%rcx
  41733b:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  41733f:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  417343:	48 03 45 d0          	add    -0x30(%rbp),%rax
  417347:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  41734b:	48 b8 90 76 44 00 00 	movabs $0x447690,%rax
  417352:	00 00 00 
  417355:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  417359:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41735d:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  417361:	48 89 01             	mov    %rax,(%rcx)
  417364:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  417368:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  41736c:	48 89 01             	mov    %rax,(%rcx)
  41736f:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  417376:	8b 45 fc             	mov    -0x4(%rbp),%eax
  417379:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  41737c:	e8 d5 e5 02 00       	callq  445956 <writeback_cache>
  417381:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  417384:	48 83 c4 40          	add    $0x40,%rsp
  417388:	5d                   	pop    %rbp
  417389:	c3                   	retq   
  41738a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000417390 <x509_info_ext_key_usage>:
  417390:	55                   	push   %rbp
  417391:	48 89 e5             	mov    %rsp,%rbp
  417394:	48 83 ec 60          	sub    $0x60,%rsp
  417398:	48 b8 d0 6d 44 00 00 	movabs $0x446dd0,%rax
  41739f:	00 00 00 
  4173a2:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  4173a6:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  4173aa:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
  4173ae:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4173b2:	48 8b 12             	mov    (%rdx),%rdx
  4173b5:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  4173b9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4173bd:	48 8b 12             	mov    (%rdx),%rdx
  4173c0:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
  4173c4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4173c8:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
  4173cc:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  4173d0:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
  4173d5:	0f 84 97 00 00 00    	je     417472 <x509_info_ext_key_usage+0xe2>
  4173db:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
  4173df:	48 8d 75 d0          	lea    -0x30(%rbp),%rsi
  4173e3:	e8 58 63 01 00       	callq  42d740 <mbedtls_oid_get_extended_key_usage>
  4173e8:	83 f8 00             	cmp    $0x0,%eax
  4173eb:	74 0e                	je     4173fb <x509_info_ext_key_usage+0x6b>
  4173ed:	48 b8 70 76 44 00 00 	movabs $0x447670,%rax
  4173f4:	00 00 00 
  4173f7:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  4173fb:	48 ba 80 76 44 00 00 	movabs $0x447680,%rdx
  417402:	00 00 00 
  417405:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  417409:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  41740d:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  417411:	4c 8b 45 d0          	mov    -0x30(%rbp),%r8
  417415:	b0 00                	mov    $0x0,%al
  417417:	e8 e4 9d fe ff       	callq  401200 <snprintf@plt>
  41741c:	89 45 dc             	mov    %eax,-0x24(%rbp)
  41741f:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
  417423:	7c 0a                	jl     41742f <x509_info_ext_key_usage+0x9f>
  417425:	48 63 45 dc          	movslq -0x24(%rbp),%rax
  417429:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
  41742d:	72 09                	jb     417438 <x509_info_ext_key_usage+0xa8>
  41742f:	c7 45 fc 80 d6 ff ff 	movl   $0xffffd680,-0x4(%rbp)
  417436:	eb 57                	jmp    41748f <x509_info_ext_key_usage+0xff>
  417438:	48 63 45 dc          	movslq -0x24(%rbp),%rax
  41743c:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  417440:	48 29 c1             	sub    %rax,%rcx
  417443:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
  417447:	48 63 45 dc          	movslq -0x24(%rbp),%rax
  41744b:	48 03 45 c0          	add    -0x40(%rbp),%rax
  41744f:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  417453:	48 b8 90 76 44 00 00 	movabs $0x447690,%rax
  41745a:	00 00 00 
  41745d:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  417461:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  417465:	48 8b 40 18          	mov    0x18(%rax),%rax
  417469:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  41746d:	e9 5e ff ff ff       	jmpq   4173d0 <x509_info_ext_key_usage+0x40>
  417472:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  417476:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  41747a:	48 89 01             	mov    %rax,(%rcx)
  41747d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  417481:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  417485:	48 89 01             	mov    %rax,(%rcx)
  417488:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  41748f:	8b 45 fc             	mov    -0x4(%rbp),%eax
  417492:	89 45 ac             	mov    %eax,-0x54(%rbp)
  417495:	e8 bc e4 02 00       	callq  445956 <writeback_cache>
  41749a:	8b 45 ac             	mov    -0x54(%rbp),%eax
  41749d:	48 83 c4 60          	add    $0x60,%rsp
  4174a1:	5d                   	pop    %rbp
  4174a2:	c3                   	retq   
  4174a3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  4174aa:	84 00 00 00 00 00 

00000000004174b0 <mbedtls_x509_crt_verify_restartable>:
  4174b0:	55                   	push   %rbp
  4174b1:	48 89 e5             	mov    %rsp,%rbp
  4174b4:	48 81 ec 10 05 00 00 	sub    $0x510,%rsp
  4174bb:	48 8b 45 20          	mov    0x20(%rbp),%rax
  4174bf:	4c 8b 55 18          	mov    0x18(%rbp),%r10
  4174c3:	4c 8b 5d 10          	mov    0x10(%rbp),%r11
  4174c7:	48 89 bd 40 fc ff ff 	mov    %rdi,-0x3c0(%rbp)
  4174ce:	48 89 b5 38 fc ff ff 	mov    %rsi,-0x3c8(%rbp)
  4174d5:	48 89 95 30 fc ff ff 	mov    %rdx,-0x3d0(%rbp)
  4174dc:	48 89 8d 28 fc ff ff 	mov    %rcx,-0x3d8(%rbp)
  4174e3:	4c 89 85 20 fc ff ff 	mov    %r8,-0x3e0(%rbp)
  4174ea:	4c 89 8d 18 fc ff ff 	mov    %r9,-0x3e8(%rbp)
  4174f1:	48 8b 8d 18 fc ff ff 	mov    -0x3e8(%rbp),%rcx
  4174f8:	c7 01 00 00 00 00    	movl   $0x0,(%rcx)
  4174fe:	c7 85 64 fb ff ff 00 	movl   $0x0,-0x49c(%rbp)
  417505:	00 00 00 
  417508:	48 8d 8d 68 fb ff ff 	lea    -0x498(%rbp),%rcx
  41750f:	48 89 8d 58 fc ff ff 	mov    %rcx,-0x3a8(%rbp)
  417516:	48 c7 85 50 fc ff ff 	movq   $0x0,-0x3b0(%rbp)
  41751d:	00 00 00 00 
  417521:	4c 89 9d 58 fb ff ff 	mov    %r11,-0x4a8(%rbp)
  417528:	4c 89 95 50 fb ff ff 	mov    %r10,-0x4b0(%rbp)
  41752f:	48 89 85 48 fb ff ff 	mov    %rax,-0x4b8(%rbp)
  417536:	48 83 bd 50 fc ff ff 	cmpq   $0xa,-0x3b0(%rbp)
  41753d:	0a 
  41753e:	73 4c                	jae    41758c <mbedtls_x509_crt_verify_restartable+0xdc>
  417540:	48 8b 85 58 fc ff ff 	mov    -0x3a8(%rbp),%rax
  417547:	48 8b 8d 50 fc ff ff 	mov    -0x3b0(%rbp),%rcx
  41754e:	48 c1 e1 04          	shl    $0x4,%rcx
  417552:	48 01 c8             	add    %rcx,%rax
  417555:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  41755c:	48 8b 85 58 fc ff ff 	mov    -0x3a8(%rbp),%rax
  417563:	48 8b 8d 50 fc ff ff 	mov    -0x3b0(%rbp),%rcx
  41756a:	48 c1 e1 04          	shl    $0x4,%rcx
  41756e:	48 01 c8             	add    %rcx,%rax
  417571:	c7 40 08 ff ff ff ff 	movl   $0xffffffff,0x8(%rax)
  417578:	48 8b 85 50 fc ff ff 	mov    -0x3b0(%rbp),%rax
  41757f:	48 83 c0 01          	add    $0x1,%rax
  417583:	48 89 85 50 fc ff ff 	mov    %rax,-0x3b0(%rbp)
  41758a:	eb aa                	jmp    417536 <mbedtls_x509_crt_verify_restartable+0x86>
  41758c:	48 8b 85 58 fc ff ff 	mov    -0x3a8(%rbp),%rax
  417593:	c7 80 a0 00 00 00 00 	movl   $0x0,0xa0(%rax)
  41759a:	00 00 00 
  41759d:	48 83 bd 28 fc ff ff 	cmpq   $0x0,-0x3d8(%rbp)
  4175a4:	00 
  4175a5:	75 0f                	jne    4175b6 <mbedtls_x509_crt_verify_restartable+0x106>
  4175a7:	c7 85 14 fc ff ff 00 	movl   $0xffffd800,-0x3ec(%rbp)
  4175ae:	d8 ff ff 
  4175b1:	e9 91 11 00 00       	jmpq   418747 <mbedtls_x509_crt_verify_restartable+0x1297>
  4175b6:	48 83 bd 20 fc ff ff 	cmpq   $0x0,-0x3e0(%rbp)
  4175bd:	00 
  4175be:	0f 84 9c 01 00 00    	je     417760 <mbedtls_x509_crt_verify_restartable+0x2b0>
  4175c4:	48 8b 85 40 fc ff ff 	mov    -0x3c0(%rbp),%rax
  4175cb:	48 8b 8d 20 fc ff ff 	mov    -0x3e0(%rbp),%rcx
  4175d2:	48 89 85 c8 fc ff ff 	mov    %rax,-0x338(%rbp)
  4175d9:	48 89 8d c0 fc ff ff 	mov    %rcx,-0x340(%rbp)
  4175e0:	48 8d 85 64 fb ff ff 	lea    -0x49c(%rbp),%rax
  4175e7:	48 89 85 b8 fc ff ff 	mov    %rax,-0x348(%rbp)
  4175ee:	48 8b bd c0 fc ff ff 	mov    -0x340(%rbp),%rdi
  4175f5:	e8 d6 9a fe ff       	callq  4010d0 <strlen@plt>
  4175fa:	48 89 85 a0 fc ff ff 	mov    %rax,-0x360(%rbp)
  417601:	48 8b 85 c8 fc ff ff 	mov    -0x338(%rbp),%rax
  417608:	8b 90 c0 01 00 00    	mov    0x1c0(%rax),%edx
  41760e:	83 e2 20             	and    $0x20,%edx
  417611:	83 fa 00             	cmp    $0x0,%edx
  417614:	74 70                	je     417686 <mbedtls_x509_crt_verify_restartable+0x1d6>
  417616:	48 8b 85 c8 fc ff ff 	mov    -0x338(%rbp),%rax
  41761d:	48 05 a0 01 00 00    	add    $0x1a0,%rax
  417623:	48 89 85 a8 fc ff ff 	mov    %rax,-0x358(%rbp)
  41762a:	48 83 bd a8 fc ff ff 	cmpq   $0x0,-0x358(%rbp)
  417631:	00 
  417632:	74 35                	je     417669 <mbedtls_x509_crt_verify_restartable+0x1b9>
  417634:	48 8b bd a8 fc ff ff 	mov    -0x358(%rbp),%rdi
  41763b:	48 8b b5 c0 fc ff ff 	mov    -0x340(%rbp),%rsi
  417642:	48 8b 95 a0 fc ff ff 	mov    -0x360(%rbp),%rdx
  417649:	e8 42 14 00 00       	callq  418a90 <x509_crt_check_cn>
  41764e:	83 f8 00             	cmp    $0x0,%eax
  417651:	75 02                	jne    417655 <mbedtls_x509_crt_verify_restartable+0x1a5>
  417653:	eb 14                	jmp    417669 <mbedtls_x509_crt_verify_restartable+0x1b9>
  417655:	48 8b 85 a8 fc ff ff 	mov    -0x358(%rbp),%rax
  41765c:	48 8b 40 18          	mov    0x18(%rax),%rax
  417660:	48 89 85 a8 fc ff ff 	mov    %rax,-0x358(%rbp)
  417667:	eb c1                	jmp    41762a <mbedtls_x509_crt_verify_restartable+0x17a>
  417669:	48 83 bd a8 fc ff ff 	cmpq   $0x0,-0x358(%rbp)
  417670:	00 
  417671:	75 0e                	jne    417681 <mbedtls_x509_crt_verify_restartable+0x1d1>
  417673:	48 8b 85 b8 fc ff ff 	mov    -0x348(%rbp),%rax
  41767a:	8b 08                	mov    (%rax),%ecx
  41767c:	83 c9 04             	or     $0x4,%ecx
  41767f:	89 08                	mov    %ecx,(%rax)
  417681:	e9 da 00 00 00       	jmpq   417760 <mbedtls_x509_crt_verify_restartable+0x2b0>
  417686:	48 8b 85 c8 fc ff ff 	mov    -0x338(%rbp),%rax
  41768d:	48 05 d8 00 00 00    	add    $0xd8,%rax
  417693:	48 89 85 b0 fc ff ff 	mov    %rax,-0x350(%rbp)
  41769a:	48 83 bd b0 fc ff ff 	cmpq   $0x0,-0x350(%rbp)
  4176a1:	00 
  4176a2:	0f 84 9e 00 00 00    	je     417746 <mbedtls_x509_crt_verify_restartable+0x296>
  4176a8:	b8 03 00 00 00       	mov    $0x3,%eax
  4176ad:	89 c1                	mov    %eax,%ecx
  4176af:	48 8b 95 b0 fc ff ff 	mov    -0x350(%rbp),%rdx
  4176b6:	48 3b 4a 08          	cmp    0x8(%rdx),%rcx
  4176ba:	40 b6 01             	mov    $0x1,%sil
  4176bd:	40 88 b5 47 fb ff ff 	mov    %sil,-0x4b9(%rbp)
  4176c4:	75 31                	jne    4176f7 <mbedtls_x509_crt_verify_restartable+0x247>
  4176c6:	48 bf d0 7c 44 00 00 	movabs $0x447cd0,%rdi
  4176cd:	00 00 00 
  4176d0:	48 8b 85 b0 fc ff ff 	mov    -0x350(%rbp),%rax
  4176d7:	48 8b 70 10          	mov    0x10(%rax),%rsi
  4176db:	48 8b 85 b0 fc ff ff 	mov    -0x350(%rbp),%rax
  4176e2:	48 8b 50 08          	mov    0x8(%rax),%rdx
  4176e6:	e8 e5 9a fe ff       	callq  4011d0 <memcmp@plt>
  4176eb:	83 f8 00             	cmp    $0x0,%eax
  4176ee:	0f 95 c1             	setne  %cl
  4176f1:	88 8d 47 fb ff ff    	mov    %cl,-0x4b9(%rbp)
  4176f7:	8a 85 47 fb ff ff    	mov    -0x4b9(%rbp),%al
  4176fd:	24 01                	and    $0x1,%al
  4176ff:	0f b6 c8             	movzbl %al,%ecx
  417702:	83 f9 00             	cmp    $0x0,%ecx
  417705:	75 28                	jne    41772f <mbedtls_x509_crt_verify_restartable+0x27f>
  417707:	48 8b 85 b0 fc ff ff 	mov    -0x350(%rbp),%rax
  41770e:	48 83 c0 18          	add    $0x18,%rax
  417712:	48 8b b5 c0 fc ff ff 	mov    -0x340(%rbp),%rsi
  417719:	48 8b 95 a0 fc ff ff 	mov    -0x360(%rbp),%rdx
  417720:	48 89 c7             	mov    %rax,%rdi
  417723:	e8 68 13 00 00       	callq  418a90 <x509_crt_check_cn>
  417728:	83 f8 00             	cmp    $0x0,%eax
  41772b:	75 02                	jne    41772f <mbedtls_x509_crt_verify_restartable+0x27f>
  41772d:	eb 17                	jmp    417746 <mbedtls_x509_crt_verify_restartable+0x296>
  41772f:	48 8b 85 b0 fc ff ff 	mov    -0x350(%rbp),%rax
  417736:	48 8b 40 30          	mov    0x30(%rax),%rax
  41773a:	48 89 85 b0 fc ff ff 	mov    %rax,-0x350(%rbp)
  417741:	e9 54 ff ff ff       	jmpq   41769a <mbedtls_x509_crt_verify_restartable+0x1ea>
  417746:	48 83 bd b0 fc ff ff 	cmpq   $0x0,-0x350(%rbp)
  41774d:	00 
  41774e:	75 0e                	jne    41775e <mbedtls_x509_crt_verify_restartable+0x2ae>
  417750:	48 8b 85 b8 fc ff ff 	mov    -0x348(%rbp),%rax
  417757:	8b 08                	mov    (%rax),%ecx
  417759:	83 c9 04             	or     $0x4,%ecx
  41775c:	89 08                	mov    %ecx,(%rax)
  41775e:	eb 00                	jmp    417760 <mbedtls_x509_crt_verify_restartable+0x2b0>
  417760:	48 8b 85 40 fc ff ff 	mov    -0x3c0(%rbp),%rax
  417767:	48 05 48 01 00 00    	add    $0x148,%rax
  41776d:	48 89 85 d0 fc ff ff 	mov    %rax,-0x330(%rbp)
  417774:	48 83 bd d0 fc ff ff 	cmpq   $0x0,-0x330(%rbp)
  41777b:	00 
  41777c:	74 0d                	je     41778b <mbedtls_x509_crt_verify_restartable+0x2db>
  41777e:	48 8b 85 d0 fc ff ff 	mov    -0x330(%rbp),%rax
  417785:	48 83 38 00          	cmpq   $0x0,(%rax)
  417789:	75 0c                	jne    417797 <mbedtls_x509_crt_verify_restartable+0x2e7>
  41778b:	c7 85 d8 fc ff ff 00 	movl   $0x0,-0x328(%rbp)
  417792:	00 00 00 
  417795:	eb 18                	jmp    4177af <mbedtls_x509_crt_verify_restartable+0x2ff>
  417797:	48 8b 85 d0 fc ff ff 	mov    -0x330(%rbp),%rax
  41779e:	48 8b 00             	mov    (%rax),%rax
  4177a1:	48 89 c7             	mov    %rax,%rdi
  4177a4:	e8 a5 e8 02 00       	callq  44604e <getDecryptedValueDWord>
  4177a9:	89 85 d8 fc ff ff    	mov    %eax,-0x328(%rbp)
  4177af:	8b 85 d8 fc ff ff    	mov    -0x328(%rbp),%eax
  4177b5:	89 85 10 fc ff ff    	mov    %eax,-0x3f0(%rbp)
  4177bb:	48 8b 8d 28 fc ff ff 	mov    -0x3d8(%rbp),%rcx
  4177c2:	8b 85 10 fc ff ff    	mov    -0x3f0(%rbp),%eax
  4177c8:	48 89 8d e0 fc ff ff 	mov    %rcx,-0x320(%rbp)
  4177cf:	89 85 dc fc ff ff    	mov    %eax,-0x324(%rbp)
  4177d5:	83 bd dc fc ff ff 00 	cmpl   $0x0,-0x324(%rbp)
  4177dc:	75 0c                	jne    4177ea <mbedtls_x509_crt_verify_restartable+0x33a>
  4177de:	c7 85 e8 fc ff ff ff 	movl   $0xffffffff,-0x318(%rbp)
  4177e5:	ff ff ff 
  4177e8:	eb 45                	jmp    41782f <mbedtls_x509_crt_verify_restartable+0x37f>
  4177ea:	48 8b 85 e0 fc ff ff 	mov    -0x320(%rbp),%rax
  4177f1:	8b 48 04             	mov    0x4(%rax),%ecx
  4177f4:	8b 95 dc fc ff ff    	mov    -0x324(%rbp),%edx
  4177fa:	83 ea 01             	sub    $0x1,%edx
  4177fd:	89 8d 40 fb ff ff    	mov    %ecx,-0x4c0(%rbp)
  417803:	89 d1                	mov    %edx,%ecx
  417805:	ba 01 00 00 00       	mov    $0x1,%edx
  41780a:	d3 e2                	shl    %cl,%edx
  41780c:	8b b5 40 fb ff ff    	mov    -0x4c0(%rbp),%esi
  417812:	21 d6                	and    %edx,%esi
  417814:	83 fe 00             	cmp    $0x0,%esi
  417817:	74 0c                	je     417825 <mbedtls_x509_crt_verify_restartable+0x375>
  417819:	c7 85 e8 fc ff ff 00 	movl   $0x0,-0x318(%rbp)
  417820:	00 00 00 
  417823:	eb 0a                	jmp    41782f <mbedtls_x509_crt_verify_restartable+0x37f>
  417825:	c7 85 e8 fc ff ff ff 	movl   $0xffffffff,-0x318(%rbp)
  41782c:	ff ff ff 
  41782f:	8b 85 e8 fc ff ff    	mov    -0x318(%rbp),%eax
  417835:	83 f8 00             	cmp    $0x0,%eax
  417838:	74 11                	je     41784b <mbedtls_x509_crt_verify_restartable+0x39b>
  41783a:	8b 85 64 fb ff ff    	mov    -0x49c(%rbp),%eax
  417840:	0d 00 80 00 00       	or     $0x8000,%eax
  417845:	89 85 64 fb ff ff    	mov    %eax,-0x49c(%rbp)
  41784b:	48 8b 85 28 fc ff ff 	mov    -0x3d8(%rbp),%rax
  417852:	48 8b 8d 40 fc ff ff 	mov    -0x3c0(%rbp),%rcx
  417859:	48 81 c1 48 01 00 00 	add    $0x148,%rcx
  417860:	48 89 85 f8 fc ff ff 	mov    %rax,-0x308(%rbp)
  417867:	48 89 8d f0 fc ff ff 	mov    %rcx,-0x310(%rbp)
  41786e:	48 8b 85 f0 fc ff ff 	mov    -0x310(%rbp),%rax
  417875:	48 89 85 08 fd ff ff 	mov    %rax,-0x2f8(%rbp)
  41787c:	48 83 bd 08 fd ff ff 	cmpq   $0x0,-0x2f8(%rbp)
  417883:	00 
  417884:	74 0d                	je     417893 <mbedtls_x509_crt_verify_restartable+0x3e3>
  417886:	48 8b 85 08 fd ff ff 	mov    -0x2f8(%rbp),%rax
  41788d:	48 83 38 00          	cmpq   $0x0,(%rax)
  417891:	75 0c                	jne    41789f <mbedtls_x509_crt_verify_restartable+0x3ef>
  417893:	c7 85 14 fd ff ff 00 	movl   $0x0,-0x2ec(%rbp)
  41789a:	00 00 00 
  41789d:	eb 18                	jmp    4178b7 <mbedtls_x509_crt_verify_restartable+0x407>
  41789f:	48 8b 85 08 fd ff ff 	mov    -0x2f8(%rbp),%rax
  4178a6:	48 8b 00             	mov    (%rax),%rax
  4178a9:	48 89 c7             	mov    %rax,%rdi
  4178ac:	e8 9d e7 02 00       	callq  44604e <getDecryptedValueDWord>
  4178b1:	89 85 14 fd ff ff    	mov    %eax,-0x2ec(%rbp)
  4178b7:	8b 85 14 fd ff ff    	mov    -0x2ec(%rbp),%eax
  4178bd:	89 85 ec fc ff ff    	mov    %eax,-0x314(%rbp)
  4178c3:	83 bd ec fc ff ff 01 	cmpl   $0x1,-0x314(%rbp)
  4178ca:	74 0d                	je     4178d9 <mbedtls_x509_crt_verify_restartable+0x429>
  4178cc:	83 bd ec fc ff ff 06 	cmpl   $0x6,-0x314(%rbp)
  4178d3:	0f 85 8c 00 00 00    	jne    417965 <mbedtls_x509_crt_verify_restartable+0x4b5>
  4178d9:	48 8b 85 f0 fc ff ff 	mov    -0x310(%rbp),%rax
  4178e0:	48 89 85 18 fd ff ff 	mov    %rax,-0x2e8(%rbp)
  4178e7:	48 83 bd 18 fd ff ff 	cmpq   $0x0,-0x2e8(%rbp)
  4178ee:	00 
  4178ef:	74 0d                	je     4178fe <mbedtls_x509_crt_verify_restartable+0x44e>
  4178f1:	48 8b 85 18 fd ff ff 	mov    -0x2e8(%rbp),%rax
  4178f8:	48 83 38 00          	cmpq   $0x0,(%rax)
  4178fc:	75 0d                	jne    41790b <mbedtls_x509_crt_verify_restartable+0x45b>
  4178fe:	48 c7 85 20 fd ff ff 	movq   $0x0,-0x2e0(%rbp)
  417905:	00 00 00 00 
  417909:	eb 2a                	jmp    417935 <mbedtls_x509_crt_verify_restartable+0x485>
  41790b:	48 8b 85 18 fd ff ff 	mov    -0x2e8(%rbp),%rax
  417912:	48 8b 00             	mov    (%rax),%rax
  417915:	48 83 c0 20          	add    $0x20,%rax
  417919:	48 89 c7             	mov    %rax,%rdi
  41791c:	e8 27 e8 02 00       	callq  446148 <getDecryptedValueQWord>
  417921:	48 8b bd 18 fd ff ff 	mov    -0x2e8(%rbp),%rdi
  417928:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
  41792c:	ff d0                	callq  *%rax
  41792e:	48 89 85 20 fd ff ff 	mov    %rax,-0x2e0(%rbp)
  417935:	48 8b 85 20 fd ff ff 	mov    -0x2e0(%rbp),%rax
  41793c:	48 8b 8d f8 fc ff ff 	mov    -0x308(%rbp),%rcx
  417943:	8b 51 0c             	mov    0xc(%rcx),%edx
  417946:	89 d1                	mov    %edx,%ecx
  417948:	48 39 c8             	cmp    %rcx,%rax
  41794b:	72 0c                	jb     417959 <mbedtls_x509_crt_verify_restartable+0x4a9>
  41794d:	c7 85 04 fd ff ff 00 	movl   $0x0,-0x2fc(%rbp)
  417954:	00 00 00 
  417957:	eb 16                	jmp    41796f <mbedtls_x509_crt_verify_restartable+0x4bf>
  417959:	c7 85 04 fd ff ff ff 	movl   $0xffffffff,-0x2fc(%rbp)
  417960:	ff ff ff 
  417963:	eb 0a                	jmp    41796f <mbedtls_x509_crt_verify_restartable+0x4bf>
  417965:	c7 85 04 fd ff ff ff 	movl   $0xffffffff,-0x2fc(%rbp)
  41796c:	ff ff ff 
  41796f:	8b 85 04 fd ff ff    	mov    -0x2fc(%rbp),%eax
  417975:	83 f8 00             	cmp    $0x0,%eax
  417978:	74 11                	je     41798b <mbedtls_x509_crt_verify_restartable+0x4db>
  41797a:	8b 85 64 fb ff ff    	mov    -0x49c(%rbp),%eax
  417980:	0d 00 00 01 00       	or     $0x10000,%eax
  417985:	89 85 64 fb ff ff    	mov    %eax,-0x49c(%rbp)
  41798b:	48 8b 85 40 fc ff ff 	mov    -0x3c0(%rbp),%rax
  417992:	48 8b 8d 38 fc ff ff 	mov    -0x3c8(%rbp),%rcx
  417999:	48 8b 95 30 fc ff ff 	mov    -0x3d0(%rbp),%rdx
  4179a0:	48 8b b5 28 fc ff ff 	mov    -0x3d8(%rbp),%rsi
  4179a7:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
  4179ab:	48 89 85 88 fd ff ff 	mov    %rax,-0x278(%rbp)
  4179b2:	48 89 8d 80 fd ff ff 	mov    %rcx,-0x280(%rbp)
  4179b9:	48 89 95 78 fd ff ff 	mov    %rdx,-0x288(%rbp)
  4179c0:	48 89 b5 70 fd ff ff 	mov    %rsi,-0x290(%rbp)
  4179c7:	48 8d 85 68 fb ff ff 	lea    -0x498(%rbp),%rax
  4179ce:	48 89 85 68 fd ff ff 	mov    %rax,-0x298(%rbp)
  4179d5:	48 89 bd 60 fd ff ff 	mov    %rdi,-0x2a0(%rbp)
  4179dc:	48 8b 85 88 fd ff ff 	mov    -0x278(%rbp),%rax
  4179e3:	48 89 85 40 fd ff ff 	mov    %rax,-0x2c0(%rbp)
  4179ea:	c7 85 28 fd ff ff 00 	movl   $0x0,-0x2d8(%rbp)
  4179f1:	00 00 00 
  4179f4:	c7 85 34 fd ff ff 00 	movl   $0x0,-0x2cc(%rbp)
  4179fb:	00 00 00 
  4179fe:	c7 85 30 fd ff ff 00 	movl   $0x0,-0x2d0(%rbp)
  417a05:	00 00 00 
  417a08:	48 8b 85 68 fd ff ff 	mov    -0x298(%rbp),%rax
  417a0f:	48 8b 8d 68 fd ff ff 	mov    -0x298(%rbp),%rcx
  417a16:	8b 91 a0 00 00 00    	mov    0xa0(%rcx),%edx
  417a1c:	89 d1                	mov    %edx,%ecx
  417a1e:	48 c1 e1 04          	shl    $0x4,%rcx
  417a22:	48 01 c8             	add    %rcx,%rax
  417a25:	48 89 85 48 fd ff ff 	mov    %rax,-0x2b8(%rbp)
  417a2c:	48 8b 85 40 fd ff ff 	mov    -0x2c0(%rbp),%rax
  417a33:	48 8b 8d 48 fd ff ff 	mov    -0x2b8(%rbp),%rcx
  417a3a:	48 89 01             	mov    %rax,(%rcx)
  417a3d:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
  417a44:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
  417a4b:	48 8b 85 68 fd ff ff 	mov    -0x298(%rbp),%rax
  417a52:	8b 90 a0 00 00 00    	mov    0xa0(%rax),%edx
  417a58:	83 c2 01             	add    $0x1,%edx
  417a5b:	89 90 a0 00 00 00    	mov    %edx,0xa0(%rax)
  417a61:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
  417a68:	48 83 c0 08          	add    $0x8,%rax
  417a6c:	48 89 85 50 fd ff ff 	mov    %rax,-0x2b0(%rbp)
  417a73:	48 8b 85 40 fd ff ff 	mov    -0x2c0(%rbp),%rax
  417a7a:	48 05 30 01 00 00    	add    $0x130,%rax
  417a80:	48 89 85 98 fd ff ff 	mov    %rax,-0x268(%rbp)
  417a87:	48 8b 85 40 fd ff ff 	mov    -0x2c0(%rbp),%rax
  417a8e:	48 05 18 01 00 00    	add    $0x118,%rax
  417a94:	48 89 85 e0 fd ff ff 	mov    %rax,-0x220(%rbp)
  417a9b:	83 bd 30 fd ff ff 00 	cmpl   $0x0,-0x2d0(%rbp)
  417aa2:	74 0f                	je     417ab3 <mbedtls_x509_crt_verify_restartable+0x603>
  417aa4:	c7 85 94 fd ff ff 00 	movl   $0x0,-0x26c(%rbp)
  417aab:	00 00 00 
  417aae:	e9 57 0b 00 00       	jmpq   41860a <mbedtls_x509_crt_verify_restartable+0x115a>
  417ab3:	48 8b 85 70 fd ff ff 	mov    -0x290(%rbp),%rax
  417aba:	48 8b 8d 40 fd ff ff 	mov    -0x2c0(%rbp),%rcx
  417ac1:	8b 91 10 02 00 00    	mov    0x210(%rcx),%edx
  417ac7:	48 89 85 f0 fd ff ff 	mov    %rax,-0x210(%rbp)
  417ace:	89 95 ec fd ff ff    	mov    %edx,-0x214(%rbp)
  417ad4:	83 bd ec fd ff ff 00 	cmpl   $0x0,-0x214(%rbp)
  417adb:	75 0c                	jne    417ae9 <mbedtls_x509_crt_verify_restartable+0x639>
  417add:	c7 85 fc fd ff ff ff 	movl   $0xffffffff,-0x204(%rbp)
  417ae4:	ff ff ff 
  417ae7:	eb 44                	jmp    417b2d <mbedtls_x509_crt_verify_restartable+0x67d>
  417ae9:	48 8b 85 f0 fd ff ff 	mov    -0x210(%rbp),%rax
  417af0:	8b 08                	mov    (%rax),%ecx
  417af2:	8b 95 ec fd ff ff    	mov    -0x214(%rbp),%edx
  417af8:	83 ea 01             	sub    $0x1,%edx
  417afb:	89 8d 3c fb ff ff    	mov    %ecx,-0x4c4(%rbp)
  417b01:	89 d1                	mov    %edx,%ecx
  417b03:	ba 01 00 00 00       	mov    $0x1,%edx
  417b08:	d3 e2                	shl    %cl,%edx
  417b0a:	8b b5 3c fb ff ff    	mov    -0x4c4(%rbp),%esi
  417b10:	21 d6                	and    %edx,%esi
  417b12:	83 fe 00             	cmp    $0x0,%esi
  417b15:	74 0c                	je     417b23 <mbedtls_x509_crt_verify_restartable+0x673>
  417b17:	c7 85 fc fd ff ff 00 	movl   $0x0,-0x204(%rbp)
  417b1e:	00 00 00 
  417b21:	eb 0a                	jmp    417b2d <mbedtls_x509_crt_verify_restartable+0x67d>
  417b23:	c7 85 fc fd ff ff ff 	movl   $0xffffffff,-0x204(%rbp)
  417b2a:	ff ff ff 
  417b2d:	8b 85 fc fd ff ff    	mov    -0x204(%rbp),%eax
  417b33:	83 f8 00             	cmp    $0x0,%eax
  417b36:	74 11                	je     417b49 <mbedtls_x509_crt_verify_restartable+0x699>
  417b38:	48 8b 85 50 fd ff ff 	mov    -0x2b0(%rbp),%rax
  417b3f:	8b 08                	mov    (%rax),%ecx
  417b41:	81 c9 00 40 00 00    	or     $0x4000,%ecx
  417b47:	89 08                	mov    %ecx,(%rax)
  417b49:	48 8b 85 70 fd ff ff 	mov    -0x290(%rbp),%rax
  417b50:	48 8b 8d 40 fd ff ff 	mov    -0x2c0(%rbp),%rcx
  417b57:	8b 91 14 02 00 00    	mov    0x214(%rcx),%edx
  417b5d:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  417b61:	89 55 cc             	mov    %edx,-0x34(%rbp)
  417b64:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
  417b68:	75 09                	jne    417b73 <mbedtls_x509_crt_verify_restartable+0x6c3>
  417b6a:	c7 45 dc ff ff ff ff 	movl   $0xffffffff,-0x24(%rbp)
  417b71:	eb 39                	jmp    417bac <mbedtls_x509_crt_verify_restartable+0x6fc>
  417b73:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  417b77:	8b 48 04             	mov    0x4(%rax),%ecx
  417b7a:	8b 55 cc             	mov    -0x34(%rbp),%edx
  417b7d:	83 ea 01             	sub    $0x1,%edx
  417b80:	89 8d 38 fb ff ff    	mov    %ecx,-0x4c8(%rbp)
  417b86:	89 d1                	mov    %edx,%ecx
  417b88:	ba 01 00 00 00       	mov    $0x1,%edx
  417b8d:	d3 e2                	shl    %cl,%edx
  417b8f:	8b b5 38 fb ff ff    	mov    -0x4c8(%rbp),%esi
  417b95:	21 d6                	and    %edx,%esi
  417b97:	83 fe 00             	cmp    $0x0,%esi
  417b9a:	74 09                	je     417ba5 <mbedtls_x509_crt_verify_restartable+0x6f5>
  417b9c:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
  417ba3:	eb 07                	jmp    417bac <mbedtls_x509_crt_verify_restartable+0x6fc>
  417ba5:	c7 45 dc ff ff ff ff 	movl   $0xffffffff,-0x24(%rbp)
  417bac:	8b 45 dc             	mov    -0x24(%rbp),%eax
  417baf:	83 f8 00             	cmp    $0x0,%eax
  417bb2:	74 11                	je     417bc5 <mbedtls_x509_crt_verify_restartable+0x715>
  417bb4:	48 8b 85 50 fd ff ff 	mov    -0x2b0(%rbp),%rax
  417bbb:	8b 08                	mov    (%rax),%ecx
  417bbd:	81 c9 00 80 00 00    	or     $0x8000,%ecx
  417bc3:	89 08                	mov    %ecx,(%rax)
  417bc5:	48 8b 85 68 fd ff ff 	mov    -0x298(%rbp),%rax
  417bcc:	83 b8 a0 00 00 00 01 	cmpl   $0x1,0xa0(%rax)
  417bd3:	0f 85 bf 00 00 00    	jne    417c98 <mbedtls_x509_crt_verify_restartable+0x7e8>
  417bd9:	48 8b 85 40 fd ff ff 	mov    -0x2c0(%rbp),%rax
  417be0:	48 8b 8d 80 fd ff ff 	mov    -0x280(%rbp),%rcx
  417be7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  417beb:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
  417bef:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  417bf3:	48 05 98 00 00 00    	add    $0x98,%rax
  417bf9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  417bfd:	48 81 c1 d8 00 00 00 	add    $0xd8,%rcx
  417c04:	48 89 c7             	mov    %rax,%rdi
  417c07:	48 89 ce             	mov    %rcx,%rsi
  417c0a:	e8 c1 0b 00 00       	callq  4187d0 <x509_name_cmp>
  417c0f:	83 f8 00             	cmp    $0x0,%eax
  417c12:	74 09                	je     417c1d <mbedtls_x509_crt_verify_restartable+0x76d>
  417c14:	c7 45 fc ff ff ff ff 	movl   $0xffffffff,-0x4(%rbp)
  417c1b:	eb 64                	jmp    417c81 <mbedtls_x509_crt_verify_restartable+0x7d1>
  417c1d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  417c21:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  417c25:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  417c2a:	74 4e                	je     417c7a <mbedtls_x509_crt_verify_restartable+0x7ca>
  417c2c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  417c30:	48 8b 40 08          	mov    0x8(%rax),%rax
  417c34:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  417c38:	48 3b 41 08          	cmp    0x8(%rcx),%rax
  417c3c:	75 2b                	jne    417c69 <mbedtls_x509_crt_verify_restartable+0x7b9>
  417c3e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  417c42:	48 8b 78 10          	mov    0x10(%rax),%rdi
  417c46:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  417c4a:	48 8b 70 10          	mov    0x10(%rax),%rsi
  417c4e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  417c52:	48 8b 50 08          	mov    0x8(%rax),%rdx
  417c56:	e8 75 95 fe ff       	callq  4011d0 <memcmp@plt>
  417c5b:	83 f8 00             	cmp    $0x0,%eax
  417c5e:	75 09                	jne    417c69 <mbedtls_x509_crt_verify_restartable+0x7b9>
  417c60:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  417c67:	eb 18                	jmp    417c81 <mbedtls_x509_crt_verify_restartable+0x7d1>
  417c69:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  417c6d:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
  417c74:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  417c78:	eb ab                	jmp    417c25 <mbedtls_x509_crt_verify_restartable+0x775>
  417c7a:	c7 45 fc ff ff ff ff 	movl   $0xffffffff,-0x4(%rbp)
  417c81:	8b 45 fc             	mov    -0x4(%rbp),%eax
  417c84:	83 f8 00             	cmp    $0x0,%eax
  417c87:	75 0f                	jne    417c98 <mbedtls_x509_crt_verify_restartable+0x7e8>
  417c89:	c7 85 94 fd ff ff 00 	movl   $0x0,-0x26c(%rbp)
  417c90:	00 00 00 
  417c93:	e9 72 09 00 00       	jmpq   41860a <mbedtls_x509_crt_verify_restartable+0x115a>
  417c98:	48 8b 85 40 fd ff ff 	mov    -0x2c0(%rbp),%rax
  417c9f:	48 8b 8d 80 fd ff ff 	mov    -0x280(%rbp),%rcx
  417ca6:	48 8b 95 68 fd ff ff 	mov    -0x298(%rbp),%rdx
  417cad:	8b b2 a0 00 00 00    	mov    0xa0(%rdx),%esi
  417cb3:	83 ee 01             	sub    $0x1,%esi
  417cb6:	8b bd 28 fd ff ff    	mov    -0x2d8(%rbp),%edi
  417cbc:	48 8b 95 60 fd ff ff 	mov    -0x2a0(%rbp),%rdx
  417cc3:	48 89 85 40 fe ff ff 	mov    %rax,-0x1c0(%rbp)
  417cca:	48 89 8d 38 fe ff ff 	mov    %rcx,-0x1c8(%rbp)
  417cd1:	48 8d 85 38 fd ff ff 	lea    -0x2c8(%rbp),%rax
  417cd8:	48 89 85 30 fe ff ff 	mov    %rax,-0x1d0(%rbp)
  417cdf:	48 8d 85 34 fd ff ff 	lea    -0x2cc(%rbp),%rax
  417ce6:	48 89 85 28 fe ff ff 	mov    %rax,-0x1d8(%rbp)
  417ced:	48 8d 85 2c fd ff ff 	lea    -0x2d4(%rbp),%rax
  417cf4:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
  417cfb:	89 b5 1c fe ff ff    	mov    %esi,-0x1e4(%rbp)
  417d01:	89 bd 18 fe ff ff    	mov    %edi,-0x1e8(%rbp)
  417d07:	48 89 95 10 fe ff ff 	mov    %rdx,-0x1f0(%rbp)
  417d0e:	48 8b 85 28 fe ff ff 	mov    -0x1d8(%rbp),%rax
  417d15:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  417d1b:	48 8b 85 28 fe ff ff 	mov    -0x1d8(%rbp),%rax
  417d22:	83 38 00             	cmpl   $0x0,(%rax)
  417d25:	74 10                	je     417d37 <mbedtls_x509_crt_verify_restartable+0x887>
  417d27:	48 8b 85 38 fe ff ff 	mov    -0x1c8(%rbp),%rax
  417d2e:	48 89 85 30 fb ff ff 	mov    %rax,-0x4d0(%rbp)
  417d35:	eb 15                	jmp    417d4c <mbedtls_x509_crt_verify_restartable+0x89c>
  417d37:	48 8b 85 40 fe ff ff 	mov    -0x1c0(%rbp),%rax
  417d3e:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
  417d45:	48 89 85 30 fb ff ff 	mov    %rax,-0x4d0(%rbp)
  417d4c:	48 8b 85 30 fb ff ff 	mov    -0x4d0(%rbp),%rax
  417d53:	48 89 85 00 fe ff ff 	mov    %rax,-0x200(%rbp)
  417d5a:	48 8b 85 40 fe ff ff 	mov    -0x1c0(%rbp),%rax
  417d61:	48 8b 8d 00 fe ff ff 	mov    -0x200(%rbp),%rcx
  417d68:	48 8b 95 30 fe ff ff 	mov    -0x1d0(%rbp),%rdx
  417d6f:	48 8b b5 20 fe ff ff 	mov    -0x1e0(%rbp),%rsi
  417d76:	48 8b bd 28 fe ff ff 	mov    -0x1d8(%rbp),%rdi
  417d7d:	44 8b 07             	mov    (%rdi),%r8d
  417d80:	44 8b 8d 1c fe ff ff 	mov    -0x1e4(%rbp),%r9d
  417d87:	44 8b 95 18 fe ff ff 	mov    -0x1e8(%rbp),%r10d
  417d8e:	48 8b bd 10 fe ff ff 	mov    -0x1f0(%rbp),%rdi
  417d95:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
  417d9c:	48 89 8d 90 fe ff ff 	mov    %rcx,-0x170(%rbp)
  417da3:	48 89 95 88 fe ff ff 	mov    %rdx,-0x178(%rbp)
  417daa:	48 89 b5 80 fe ff ff 	mov    %rsi,-0x180(%rbp)
  417db1:	44 89 85 7c fe ff ff 	mov    %r8d,-0x184(%rbp)
  417db8:	44 89 8d 78 fe ff ff 	mov    %r9d,-0x188(%rbp)
  417dbf:	44 89 95 74 fe ff ff 	mov    %r10d,-0x18c(%rbp)
  417dc6:	48 89 bd 68 fe ff ff 	mov    %rdi,-0x198(%rbp)
  417dcd:	48 c7 85 50 fe ff ff 	movq   $0x0,-0x1b0(%rbp)
  417dd4:	00 00 00 00 
  417dd8:	c7 85 48 fe ff ff 00 	movl   $0x0,-0x1b8(%rbp)
  417ddf:	00 00 00 
  417de2:	48 8b 85 90 fe ff ff 	mov    -0x170(%rbp),%rax
  417de9:	48 89 85 58 fe ff ff 	mov    %rax,-0x1a8(%rbp)
  417df0:	48 83 bd 58 fe ff ff 	cmpq   $0x0,-0x1a8(%rbp)
  417df7:	00 
  417df8:	0f 84 34 05 00 00    	je     418332 <mbedtls_x509_crt_verify_restartable+0xe82>
  417dfe:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  417e05:	48 8b 8d 58 fe ff ff 	mov    -0x1a8(%rbp),%rcx
  417e0c:	8b 95 7c fe ff ff    	mov    -0x184(%rbp),%edx
  417e12:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
  417e19:	48 89 8d a8 fe ff ff 	mov    %rcx,-0x158(%rbp)
  417e20:	89 95 a4 fe ff ff    	mov    %edx,-0x15c(%rbp)
  417e26:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
  417e2d:	48 05 98 00 00 00    	add    $0x98,%rax
  417e33:	48 8b 8d a8 fe ff ff 	mov    -0x158(%rbp),%rcx
  417e3a:	48 81 c1 d8 00 00 00 	add    $0xd8,%rcx
  417e41:	48 89 c7             	mov    %rax,%rdi
  417e44:	48 89 ce             	mov    %rcx,%rsi
  417e47:	e8 84 09 00 00       	callq  4187d0 <x509_name_cmp>
  417e4c:	83 f8 00             	cmp    $0x0,%eax
  417e4f:	74 0c                	je     417e5d <mbedtls_x509_crt_verify_restartable+0x9ad>
  417e51:	c7 85 bc fe ff ff ff 	movl   $0xffffffff,-0x144(%rbp)
  417e58:	ff ff ff 
  417e5b:	eb 59                	jmp    417eb6 <mbedtls_x509_crt_verify_restartable+0xa06>
  417e5d:	c7 85 a0 fe ff ff 01 	movl   $0x1,-0x160(%rbp)
  417e64:	00 00 00 
  417e67:	83 bd a4 fe ff ff 00 	cmpl   $0x0,-0x15c(%rbp)
  417e6e:	74 17                	je     417e87 <mbedtls_x509_crt_verify_restartable+0x9d7>
  417e70:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
  417e77:	83 78 30 03          	cmpl   $0x3,0x30(%rax)
  417e7b:	7d 0a                	jge    417e87 <mbedtls_x509_crt_verify_restartable+0x9d7>
  417e7d:	c7 85 a0 fe ff ff 00 	movl   $0x0,-0x160(%rbp)
  417e84:	00 00 00 
  417e87:	83 bd a0 fe ff ff 00 	cmpl   $0x0,-0x160(%rbp)
  417e8e:	74 1c                	je     417eac <mbedtls_x509_crt_verify_restartable+0x9fc>
  417e90:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
  417e97:	83 b8 c4 01 00 00 00 	cmpl   $0x0,0x1c4(%rax)
  417e9e:	75 0c                	jne    417eac <mbedtls_x509_crt_verify_restartable+0x9fc>
  417ea0:	c7 85 bc fe ff ff ff 	movl   $0xffffffff,-0x144(%rbp)
  417ea7:	ff ff ff 
  417eaa:	eb 0a                	jmp    417eb6 <mbedtls_x509_crt_verify_restartable+0xa06>
  417eac:	c7 85 bc fe ff ff 00 	movl   $0x0,-0x144(%rbp)
  417eb3:	00 00 00 
  417eb6:	8b 85 bc fe ff ff    	mov    -0x144(%rbp),%eax
  417ebc:	83 f8 00             	cmp    $0x0,%eax
  417ebf:	74 05                	je     417ec6 <mbedtls_x509_crt_verify_restartable+0xa16>
  417ec1:	e9 52 04 00 00       	jmpq   418318 <mbedtls_x509_crt_verify_restartable+0xe68>
  417ec6:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
  417ecd:	83 b8 c8 01 00 00 00 	cmpl   $0x0,0x1c8(%rax)
  417ed4:	7e 2b                	jle    417f01 <mbedtls_x509_crt_verify_restartable+0xa51>
  417ed6:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
  417edd:	48 63 80 c8 01 00 00 	movslq 0x1c8(%rax),%rax
  417ee4:	8b 8d 78 fe ff ff    	mov    -0x188(%rbp),%ecx
  417eea:	83 c1 01             	add    $0x1,%ecx
  417eed:	2b 8d 74 fe ff ff    	sub    -0x18c(%rbp),%ecx
  417ef3:	89 c9                	mov    %ecx,%ecx
  417ef5:	89 ca                	mov    %ecx,%edx
  417ef7:	48 39 d0             	cmp    %rdx,%rax
  417efa:	73 05                	jae    417f01 <mbedtls_x509_crt_verify_restartable+0xa51>
  417efc:	e9 17 04 00 00       	jmpq   418318 <mbedtls_x509_crt_verify_restartable+0xe68>
  417f01:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  417f08:	48 8b 8d 58 fe ff ff 	mov    -0x1a8(%rbp),%rcx
  417f0f:	48 8b 95 68 fe ff ff 	mov    -0x198(%rbp),%rdx
  417f16:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
  417f1d:	48 89 8d f8 fe ff ff 	mov    %rcx,-0x108(%rbp)
  417f24:	48 89 95 f0 fe ff ff 	mov    %rdx,-0x110(%rbp)
  417f2b:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
  417f32:	8b b0 10 02 00 00    	mov    0x210(%rax),%esi
  417f38:	89 b5 0c ff ff ff    	mov    %esi,-0xf4(%rbp)
  417f3e:	8b b5 0c ff ff ff    	mov    -0xf4(%rbp),%esi
  417f44:	83 c6 fd             	add    $0xfffffffd,%esi
  417f47:	89 f0                	mov    %esi,%eax
  417f49:	83 ee 03             	sub    $0x3,%esi
  417f4c:	48 89 85 28 fb ff ff 	mov    %rax,-0x4d8(%rbp)
  417f53:	89 b5 24 fb ff ff    	mov    %esi,-0x4dc(%rbp)
  417f59:	77 5d                	ja     417fb8 <mbedtls_x509_crt_verify_restartable+0xb08>
  417f5b:	48 8b 85 28 fb ff ff 	mov    -0x4d8(%rbp),%rax
  417f62:	48 8b 0c c5 f8 6c 44 	mov    0x446cf8(,%rax,8),%rcx
  417f69:	00 
  417f6a:	ff e1                	jmpq   *%rcx
  417f6c:	48 b8 50 d9 44 00 00 	movabs $0x44d950,%rax
  417f73:	00 00 00 
  417f76:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
  417f7d:	eb 44                	jmp    417fc3 <mbedtls_x509_crt_verify_restartable+0xb13>
  417f7f:	48 b8 b0 d9 44 00 00 	movabs $0x44d9b0,%rax
  417f86:	00 00 00 
  417f89:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
  417f90:	eb 31                	jmp    417fc3 <mbedtls_x509_crt_verify_restartable+0xb13>
  417f92:	48 b8 10 da 44 00 00 	movabs $0x44da10,%rax
  417f99:	00 00 00 
  417f9c:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
  417fa3:	eb 1e                	jmp    417fc3 <mbedtls_x509_crt_verify_restartable+0xb13>
  417fa5:	48 b8 70 da 44 00 00 	movabs $0x44da70,%rax
  417fac:	00 00 00 
  417faf:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
  417fb6:	eb 0b                	jmp    417fc3 <mbedtls_x509_crt_verify_restartable+0xb13>
  417fb8:	48 c7 85 10 ff ff ff 	movq   $0x0,-0xf0(%rbp)
  417fbf:	00 00 00 00 
  417fc3:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
  417fca:	48 8b 8d 10 ff ff ff 	mov    -0xf0(%rbp),%rcx
  417fd1:	48 89 8d e8 fe ff ff 	mov    %rcx,-0x118(%rbp)
  417fd8:	48 8b 8d e8 fe ff ff 	mov    -0x118(%rbp),%rcx
  417fdf:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
  417fe6:	48 8b 52 28          	mov    0x28(%rdx),%rdx
  417fea:	48 8b b5 00 ff ff ff 	mov    -0x100(%rbp),%rsi
  417ff1:	48 8b 76 20          	mov    0x20(%rsi),%rsi
  417ff5:	48 89 4d 88          	mov    %rcx,-0x78(%rbp)
  417ff9:	48 89 55 80          	mov    %rdx,-0x80(%rbp)
  417ffd:	48 89 b5 78 ff ff ff 	mov    %rsi,-0x88(%rbp)
  418004:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
  41800b:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
  418010:	75 09                	jne    41801b <mbedtls_x509_crt_verify_restartable+0xb6b>
  418012:	c7 45 90 00 af ff ff 	movl   $0xffffaf00,-0x70(%rbp)
  418019:	eb 1f                	jmp    41803a <mbedtls_x509_crt_verify_restartable+0xb8a>
  41801b:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  41801f:	48 8b 40 30          	mov    0x30(%rax),%rax
  418023:	48 8b 7d 80          	mov    -0x80(%rbp),%rdi
  418027:	48 8b b5 78 ff ff ff 	mov    -0x88(%rbp),%rsi
  41802e:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
  418035:	ff d0                	callq  *%rax
  418037:	89 45 90             	mov    %eax,-0x70(%rbp)
  41803a:	8b 45 90             	mov    -0x70(%rbp),%eax
  41803d:	83 f8 00             	cmp    $0x0,%eax
  418040:	74 0f                	je     418051 <mbedtls_x509_crt_verify_restartable+0xba1>
  418042:	c7 85 08 ff ff ff ff 	movl   $0xffffffff,-0xf8(%rbp)
  418049:	ff ff ff 
  41804c:	e9 6d 02 00 00       	jmpq   4182be <mbedtls_x509_crt_verify_restartable+0xe0e>
  418051:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  418058:	48 05 48 01 00 00    	add    $0x148,%rax
  41805e:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  418065:	8b 91 14 02 00 00    	mov    0x214(%rcx),%edx
  41806b:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  41806f:	89 55 94             	mov    %edx,-0x6c(%rbp)
  418072:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
  418077:	74 0a                	je     418083 <mbedtls_x509_crt_verify_restartable+0xbd3>
  418079:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  41807d:	48 83 38 00          	cmpq   $0x0,(%rax)
  418081:	75 09                	jne    41808c <mbedtls_x509_crt_verify_restartable+0xbdc>
  418083:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%rbp)
  41808a:	eb 1b                	jmp    4180a7 <mbedtls_x509_crt_verify_restartable+0xbf7>
  41808c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  418090:	48 8b 00             	mov    (%rax),%rax
  418093:	48 83 c0 30          	add    $0x30,%rax
  418097:	48 89 c7             	mov    %rax,%rdi
  41809a:	e8 a9 e0 02 00       	callq  446148 <getDecryptedValueQWord>
  41809f:	8b 7d 94             	mov    -0x6c(%rbp),%edi
  4180a2:	ff d0                	callq  *%rax
  4180a4:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  4180a7:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  4180aa:	83 f8 00             	cmp    $0x0,%eax
  4180ad:	75 0f                	jne    4180be <mbedtls_x509_crt_verify_restartable+0xc0e>
  4180af:	c7 85 08 ff ff ff ff 	movl   $0xffffffff,-0xf8(%rbp)
  4180b6:	ff ff ff 
  4180b9:	e9 00 02 00 00       	jmpq   4182be <mbedtls_x509_crt_verify_restartable+0xe0e>
  4180be:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
  4180c5:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  4180cc:	8b 91 14 02 00 00    	mov    0x214(%rcx),%edx
  4180d2:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  4180d9:	48 8b 89 18 02 00 00 	mov    0x218(%rcx),%rcx
  4180e0:	48 8b b5 f8 fe ff ff 	mov    -0x108(%rbp),%rsi
  4180e7:	48 81 c6 48 01 00 00 	add    $0x148,%rsi
  4180ee:	48 8b bd 00 ff ff ff 	mov    -0x100(%rbp),%rdi
  4180f5:	44 8b 87 10 02 00 00 	mov    0x210(%rdi),%r8d
  4180fc:	48 8b bd e8 fe ff ff 	mov    -0x118(%rbp),%rdi
  418103:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  418107:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
  41810c:	48 89 85 18 fb ff ff 	mov    %rax,-0x4e8(%rbp)
  418113:	89 95 14 fb ff ff    	mov    %edx,-0x4ec(%rbp)
  418119:	48 89 8d 08 fb ff ff 	mov    %rcx,-0x4f8(%rbp)
  418120:	48 89 b5 00 fb ff ff 	mov    %rsi,-0x500(%rbp)
  418127:	44 89 85 fc fa ff ff 	mov    %r8d,-0x504(%rbp)
  41812e:	75 06                	jne    418136 <mbedtls_x509_crt_verify_restartable+0xc86>
  418130:	c6 45 b7 00          	movb   $0x0,-0x49(%rbp)
  418134:	eb 0c                	jmp    418142 <mbedtls_x509_crt_verify_restartable+0xc92>
  418136:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  41813a:	8b 48 10             	mov    0x10(%rax),%ecx
  41813d:	88 ca                	mov    %cl,%dl
  41813f:	88 55 b7             	mov    %dl,-0x49(%rbp)
  418142:	8a 45 b7             	mov    -0x49(%rbp),%al
  418145:	0f b6 c8             	movzbl %al,%ecx
  418148:	89 ca                	mov    %ecx,%edx
  41814a:	48 8b b5 00 ff ff ff 	mov    -0x100(%rbp),%rsi
  418151:	48 8b b6 08 02 00 00 	mov    0x208(%rsi),%rsi
  418158:	48 8b bd 00 ff ff ff 	mov    -0x100(%rbp),%rdi
  41815f:	48 8b bf 00 02 00 00 	mov    0x200(%rdi),%rdi
  418166:	8b 8d 14 fb ff ff    	mov    -0x4ec(%rbp),%ecx
  41816c:	89 8d 54 ff ff ff    	mov    %ecx,-0xac(%rbp)
  418172:	4c 8b 85 08 fb ff ff 	mov    -0x4f8(%rbp),%r8
  418179:	4c 89 85 48 ff ff ff 	mov    %r8,-0xb8(%rbp)
  418180:	4c 8b 8d 00 fb ff ff 	mov    -0x500(%rbp),%r9
  418187:	4c 89 8d 40 ff ff ff 	mov    %r9,-0xc0(%rbp)
  41818e:	44 8b 95 fc fa ff ff 	mov    -0x504(%rbp),%r10d
  418195:	44 89 95 3c ff ff ff 	mov    %r10d,-0xc4(%rbp)
  41819c:	4c 8b 9d 18 fb ff ff 	mov    -0x4e8(%rbp),%r11
  4181a3:	4c 89 9d 30 ff ff ff 	mov    %r11,-0xd0(%rbp)
  4181aa:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)
  4181b1:	48 89 b5 20 ff ff ff 	mov    %rsi,-0xe0(%rbp)
  4181b8:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
  4181bf:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
  4181c6:	48 83 3a 00          	cmpq   $0x0,(%rdx)
  4181ca:	75 0f                	jne    4181db <mbedtls_x509_crt_verify_restartable+0xd2b>
  4181cc:	c7 85 58 ff ff ff 80 	movl   $0xffffc180,-0xa8(%rbp)
  4181d3:	c1 ff ff 
  4181d6:	e9 d7 00 00 00       	jmpq   4182b2 <mbedtls_x509_crt_verify_restartable+0xe02>
  4181db:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
  4181e2:	8b 8d 54 ff ff ff    	mov    -0xac(%rbp),%ecx
  4181e8:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
  4181ef:	89 8d 5c ff ff ff    	mov    %ecx,-0xa4(%rbp)
  4181f5:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
  4181fc:	00 
  4181fd:	74 0d                	je     41820c <mbedtls_x509_crt_verify_restartable+0xd5c>
  4181ff:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  418206:	48 83 38 00          	cmpq   $0x0,(%rax)
  41820a:	75 0c                	jne    418218 <mbedtls_x509_crt_verify_restartable+0xd68>
  41820c:	c7 85 6c ff ff ff 00 	movl   $0x0,-0x94(%rbp)
  418213:	00 00 00 
  418216:	eb 24                	jmp    41823c <mbedtls_x509_crt_verify_restartable+0xd8c>
  418218:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  41821f:	48 8b 00             	mov    (%rax),%rax
  418222:	48 83 c0 30          	add    $0x30,%rax
  418226:	48 89 c7             	mov    %rax,%rdi
  418229:	e8 1a df 02 00       	callq  446148 <getDecryptedValueQWord>
  41822e:	8b bd 5c ff ff ff    	mov    -0xa4(%rbp),%edi
  418234:	ff d0                	callq  *%rax
  418236:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)
  41823c:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
  418242:	83 f8 00             	cmp    $0x0,%eax
  418245:	75 0c                	jne    418253 <mbedtls_x509_crt_verify_restartable+0xda3>
  418247:	c7 85 58 ff ff ff 00 	movl   $0xffffc100,-0xa8(%rbp)
  41824e:	c1 ff ff 
  418251:	eb 5f                	jmp    4182b2 <mbedtls_x509_crt_verify_restartable+0xe02>
  418253:	83 bd 54 ff ff ff 06 	cmpl   $0x6,-0xac(%rbp)
  41825a:	75 0c                	jne    418268 <mbedtls_x509_crt_verify_restartable+0xdb8>
  41825c:	c7 85 58 ff ff ff 80 	movl   $0xffffc680,-0xa8(%rbp)
  418263:	c6 ff ff 
  418266:	eb 4a                	jmp    4182b2 <mbedtls_x509_crt_verify_restartable+0xe02>
  418268:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)
  41826f:	00 
  418270:	74 0c                	je     41827e <mbedtls_x509_crt_verify_restartable+0xdce>
  418272:	c7 85 58 ff ff ff 80 	movl   $0xffffc180,-0xa8(%rbp)
  418279:	c1 ff ff 
  41827c:	eb 34                	jmp    4182b2 <mbedtls_x509_crt_verify_restartable+0xe02>
  41827e:	48 8b bd 40 ff ff ff 	mov    -0xc0(%rbp),%rdi
  418285:	8b b5 3c ff ff ff    	mov    -0xc4(%rbp),%esi
  41828b:	48 8b 95 30 ff ff ff 	mov    -0xd0(%rbp),%rdx
  418292:	48 8b 8d 28 ff ff ff 	mov    -0xd8(%rbp),%rcx
  418299:	4c 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%r8
  4182a0:	4c 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%r9
  4182a7:	e8 74 70 01 00       	callq  42f320 <mbedtls_pk_verify>
  4182ac:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
  4182b2:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
  4182b8:	89 85 08 ff ff ff    	mov    %eax,-0xf8(%rbp)
  4182be:	8b 85 08 ff ff ff    	mov    -0xf8(%rbp),%eax
  4182c4:	89 85 64 fe ff ff    	mov    %eax,-0x19c(%rbp)
  4182ca:	83 bd 64 fe ff ff 00 	cmpl   $0x0,-0x19c(%rbp)
  4182d1:	0f 94 c1             	sete   %cl
  4182d4:	80 e1 01             	and    $0x1,%cl
  4182d7:	0f b6 c1             	movzbl %cl,%eax
  4182da:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
  4182e0:	83 bd 7c fe ff ff 00 	cmpl   $0x0,-0x184(%rbp)
  4182e7:	74 0b                	je     4182f4 <mbedtls_x509_crt_verify_restartable+0xe44>
  4182e9:	83 bd 4c fe ff ff 00 	cmpl   $0x0,-0x1b4(%rbp)
  4182f0:	75 02                	jne    4182f4 <mbedtls_x509_crt_verify_restartable+0xe44>
  4182f2:	eb 24                	jmp    418318 <mbedtls_x509_crt_verify_restartable+0xe68>
  4182f4:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
  4182fb:	48 05 30 01 00 00    	add    $0x130,%rax
  418301:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  418305:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
  41830c:	48 05 18 01 00 00    	add    $0x118,%rax
  418312:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  418316:	eb 1a                	jmp    418332 <mbedtls_x509_crt_verify_restartable+0xe82>
  418318:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
  41831f:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
  418326:	48 89 85 58 fe ff ff 	mov    %rax,-0x1a8(%rbp)
  41832d:	e9 be fa ff ff       	jmpq   417df0 <mbedtls_x509_crt_verify_restartable+0x940>
  418332:	48 83 bd 58 fe ff ff 	cmpq   $0x0,-0x1a8(%rbp)
  418339:	00 
  41833a:	74 22                	je     41835e <mbedtls_x509_crt_verify_restartable+0xeae>
  41833c:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
  418343:	48 8b 8d 88 fe ff ff 	mov    -0x178(%rbp),%rcx
  41834a:	48 89 01             	mov    %rax,(%rcx)
  41834d:	8b 95 4c fe ff ff    	mov    -0x1b4(%rbp),%edx
  418353:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
  41835a:	89 10                	mov    %edx,(%rax)
  41835c:	eb 20                	jmp    41837e <mbedtls_x509_crt_verify_restartable+0xece>
  41835e:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
  418365:	48 8b 8d 88 fe ff ff 	mov    -0x178(%rbp),%rcx
  41836c:	48 89 01             	mov    %rax,(%rcx)
  41836f:	8b 95 48 fe ff ff    	mov    -0x1b8(%rbp),%edx
  418375:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
  41837c:	89 10                	mov    %edx,(%rax)
  41837e:	c7 85 0c fe ff ff 00 	movl   $0x0,-0x1f4(%rbp)
  418385:	00 00 00 
  418388:	48 8b 85 30 fe ff ff 	mov    -0x1d0(%rbp),%rax
  41838f:	48 83 38 00          	cmpq   $0x0,(%rax)
  418393:	75 0c                	jne    4183a1 <mbedtls_x509_crt_verify_restartable+0xef1>
  418395:	48 8b 85 28 fe ff ff 	mov    -0x1d8(%rbp),%rax
  41839c:	83 38 00             	cmpl   $0x0,(%rax)
  41839f:	75 0f                	jne    4183b0 <mbedtls_x509_crt_verify_restartable+0xf00>
  4183a1:	48 8b 85 30 fe ff ff 	mov    -0x1d0(%rbp),%rax
  4183a8:	48 83 38 00          	cmpq   $0x0,(%rax)
  4183ac:	74 14                	je     4183c2 <mbedtls_x509_crt_verify_restartable+0xf12>
  4183ae:	eb 2c                	jmp    4183dc <mbedtls_x509_crt_verify_restartable+0xf2c>
  4183b0:	48 8b 85 28 fe ff ff 	mov    -0x1d8(%rbp),%rax
  4183b7:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  4183bd:	e9 59 f9 ff ff       	jmpq   417d1b <mbedtls_x509_crt_verify_restartable+0x86b>
  4183c2:	48 8b 85 28 fe ff ff 	mov    -0x1d8(%rbp),%rax
  4183c9:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  4183cf:	48 8b 85 20 fe ff ff 	mov    -0x1e0(%rbp),%rax
  4183d6:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  4183dc:	c7 85 5c fd ff ff 00 	movl   $0x0,-0x2a4(%rbp)
  4183e3:	00 00 00 
  4183e6:	48 83 bd 38 fd ff ff 	cmpq   $0x0,-0x2c8(%rbp)
  4183ed:	00 
  4183ee:	75 1d                	jne    41840d <mbedtls_x509_crt_verify_restartable+0xf5d>
  4183f0:	48 8b 85 50 fd ff ff 	mov    -0x2b0(%rbp),%rax
  4183f7:	8b 08                	mov    (%rax),%ecx
  4183f9:	83 c9 08             	or     $0x8,%ecx
  4183fc:	89 08                	mov    %ecx,(%rax)
  4183fe:	c7 85 94 fd ff ff 00 	movl   $0x0,-0x26c(%rbp)
  418405:	00 00 00 
  418408:	e9 fd 01 00 00       	jmpq   41860a <mbedtls_x509_crt_verify_restartable+0x115a>
  41840d:	48 8b 85 68 fd ff ff 	mov    -0x298(%rbp),%rax
  418414:	83 b8 a0 00 00 00 01 	cmpl   $0x1,0xa0(%rax)
  41841b:	74 3a                	je     418457 <mbedtls_x509_crt_verify_restartable+0xfa7>
  41841d:	48 8b 85 40 fd ff ff 	mov    -0x2c0(%rbp),%rax
  418424:	48 05 98 00 00 00    	add    $0x98,%rax
  41842a:	48 8b 8d 40 fd ff ff 	mov    -0x2c0(%rbp),%rcx
  418431:	48 81 c1 d8 00 00 00 	add    $0xd8,%rcx
  418438:	48 89 c7             	mov    %rax,%rdi
  41843b:	48 89 ce             	mov    %rcx,%rsi
  41843e:	e8 8d 03 00 00       	callq  4187d0 <x509_name_cmp>
  418443:	83 f8 00             	cmp    $0x0,%eax
  418446:	75 0f                	jne    418457 <mbedtls_x509_crt_verify_restartable+0xfa7>
  418448:	8b 85 28 fd ff ff    	mov    -0x2d8(%rbp),%eax
  41844e:	83 c0 01             	add    $0x1,%eax
  418451:	89 85 28 fd ff ff    	mov    %eax,-0x2d8(%rbp)
  418457:	83 bd 34 fd ff ff 00 	cmpl   $0x0,-0x2cc(%rbp)
  41845e:	75 1f                	jne    41847f <mbedtls_x509_crt_verify_restartable+0xfcf>
  418460:	48 8b 85 68 fd ff ff 	mov    -0x298(%rbp),%rax
  418467:	83 b8 a0 00 00 00 08 	cmpl   $0x8,0xa0(%rax)
  41846e:	76 0f                	jbe    41847f <mbedtls_x509_crt_verify_restartable+0xfcf>
  418470:	c7 85 94 fd ff ff 00 	movl   $0xffffd000,-0x26c(%rbp)
  418477:	d0 ff ff 
  41847a:	e9 8b 01 00 00       	jmpq   41860a <mbedtls_x509_crt_verify_restartable+0x115a>
  41847f:	83 bd 2c fd ff ff 00 	cmpl   $0x0,-0x2d4(%rbp)
  418486:	75 0e                	jne    418496 <mbedtls_x509_crt_verify_restartable+0xfe6>
  418488:	48 8b 85 50 fd ff ff 	mov    -0x2b0(%rbp),%rax
  41848f:	8b 08                	mov    (%rax),%ecx
  418491:	83 c9 08             	or     $0x8,%ecx
  418494:	89 08                	mov    %ecx,(%rax)
  418496:	48 8b 85 70 fd ff ff 	mov    -0x290(%rbp),%rax
  41849d:	48 8b 8d 38 fd ff ff 	mov    -0x2c8(%rbp),%rcx
  4184a4:	48 81 c1 48 01 00 00 	add    $0x148,%rcx
  4184ab:	48 89 85 b0 fd ff ff 	mov    %rax,-0x250(%rbp)
  4184b2:	48 89 8d a8 fd ff ff 	mov    %rcx,-0x258(%rbp)
  4184b9:	48 8b 85 a8 fd ff ff 	mov    -0x258(%rbp),%rax
  4184c0:	48 89 85 c0 fd ff ff 	mov    %rax,-0x240(%rbp)
  4184c7:	48 83 bd c0 fd ff ff 	cmpq   $0x0,-0x240(%rbp)
  4184ce:	00 
  4184cf:	74 0d                	je     4184de <mbedtls_x509_crt_verify_restartable+0x102e>
  4184d1:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
  4184d8:	48 83 38 00          	cmpq   $0x0,(%rax)
  4184dc:	75 0c                	jne    4184ea <mbedtls_x509_crt_verify_restartable+0x103a>
  4184de:	c7 85 cc fd ff ff 00 	movl   $0x0,-0x234(%rbp)
  4184e5:	00 00 00 
  4184e8:	eb 18                	jmp    418502 <mbedtls_x509_crt_verify_restartable+0x1052>
  4184ea:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
  4184f1:	48 8b 00             	mov    (%rax),%rax
  4184f4:	48 89 c7             	mov    %rax,%rdi
  4184f7:	e8 52 db 02 00       	callq  44604e <getDecryptedValueDWord>
  4184fc:	89 85 cc fd ff ff    	mov    %eax,-0x234(%rbp)
  418502:	8b 85 cc fd ff ff    	mov    -0x234(%rbp),%eax
  418508:	89 85 a4 fd ff ff    	mov    %eax,-0x25c(%rbp)
  41850e:	83 bd a4 fd ff ff 01 	cmpl   $0x1,-0x25c(%rbp)
  418515:	74 0d                	je     418524 <mbedtls_x509_crt_verify_restartable+0x1074>
  418517:	83 bd a4 fd ff ff 06 	cmpl   $0x6,-0x25c(%rbp)
  41851e:	0f 85 8c 00 00 00    	jne    4185b0 <mbedtls_x509_crt_verify_restartable+0x1100>
  418524:	48 8b 85 a8 fd ff ff 	mov    -0x258(%rbp),%rax
  41852b:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
  418532:	48 83 bd d0 fd ff ff 	cmpq   $0x0,-0x230(%rbp)
  418539:	00 
  41853a:	74 0d                	je     418549 <mbedtls_x509_crt_verify_restartable+0x1099>
  41853c:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
  418543:	48 83 38 00          	cmpq   $0x0,(%rax)
  418547:	75 0d                	jne    418556 <mbedtls_x509_crt_verify_restartable+0x10a6>
  418549:	48 c7 85 d8 fd ff ff 	movq   $0x0,-0x228(%rbp)
  418550:	00 00 00 00 
  418554:	eb 2a                	jmp    418580 <mbedtls_x509_crt_verify_restartable+0x10d0>
  418556:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
  41855d:	48 8b 00             	mov    (%rax),%rax
  418560:	48 83 c0 20          	add    $0x20,%rax
  418564:	48 89 c7             	mov    %rax,%rdi
  418567:	e8 dc db 02 00       	callq  446148 <getDecryptedValueQWord>
  41856c:	48 8b bd d0 fd ff ff 	mov    -0x230(%rbp),%rdi
  418573:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
  418577:	ff d0                	callq  *%rax
  418579:	48 89 85 d8 fd ff ff 	mov    %rax,-0x228(%rbp)
  418580:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
  418587:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
  41858e:	8b 51 0c             	mov    0xc(%rcx),%edx
  418591:	89 d1                	mov    %edx,%ecx
  418593:	48 39 c8             	cmp    %rcx,%rax
  418596:	72 0c                	jb     4185a4 <mbedtls_x509_crt_verify_restartable+0x10f4>
  418598:	c7 85 bc fd ff ff 00 	movl   $0x0,-0x244(%rbp)
  41859f:	00 00 00 
  4185a2:	eb 16                	jmp    4185ba <mbedtls_x509_crt_verify_restartable+0x110a>
  4185a4:	c7 85 bc fd ff ff ff 	movl   $0xffffffff,-0x244(%rbp)
  4185ab:	ff ff ff 
  4185ae:	eb 0a                	jmp    4185ba <mbedtls_x509_crt_verify_restartable+0x110a>
  4185b0:	c7 85 bc fd ff ff ff 	movl   $0xffffffff,-0x244(%rbp)
  4185b7:	ff ff ff 
  4185ba:	8b 85 bc fd ff ff    	mov    -0x244(%rbp),%eax
  4185c0:	83 f8 00             	cmp    $0x0,%eax
  4185c3:	74 11                	je     4185d6 <mbedtls_x509_crt_verify_restartable+0x1126>
  4185c5:	48 8b 85 50 fd ff ff 	mov    -0x2b0(%rbp),%rax
  4185cc:	8b 08                	mov    (%rax),%ecx
  4185ce:	81 c9 00 00 01 00    	or     $0x10000,%ecx
  4185d4:	89 08                	mov    %ecx,(%rax)
  4185d6:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
  4185dd:	48 89 85 40 fd ff ff 	mov    %rax,-0x2c0(%rbp)
  4185e4:	48 c7 85 38 fd ff ff 	movq   $0x0,-0x2c8(%rbp)
  4185eb:	00 00 00 00 
  4185ef:	8b 8d 34 fd ff ff    	mov    -0x2cc(%rbp),%ecx
  4185f5:	89 8d 30 fd ff ff    	mov    %ecx,-0x2d0(%rbp)
  4185fb:	c7 85 2c fd ff ff 00 	movl   $0x0,-0x2d4(%rbp)
  418602:	00 00 00 
  418605:	e9 fe f3 ff ff       	jmpq   417a08 <mbedtls_x509_crt_verify_restartable+0x558>
  41860a:	8b 85 94 fd ff ff    	mov    -0x26c(%rbp),%eax
  418610:	89 85 14 fc ff ff    	mov    %eax,-0x3ec(%rbp)
  418616:	83 bd 14 fc ff ff 00 	cmpl   $0x0,-0x3ec(%rbp)
  41861d:	74 05                	je     418624 <mbedtls_x509_crt_verify_restartable+0x1174>
  41861f:	e9 23 01 00 00       	jmpq   418747 <mbedtls_x509_crt_verify_restartable+0x1297>
  418624:	8b 85 64 fb ff ff    	mov    -0x49c(%rbp),%eax
  41862a:	0b 85 70 fb ff ff    	or     -0x490(%rbp),%eax
  418630:	89 85 70 fb ff ff    	mov    %eax,-0x490(%rbp)
  418636:	48 8b 8d 18 fc ff ff 	mov    -0x3e8(%rbp),%rcx
  41863d:	48 8b 55 10          	mov    0x10(%rbp),%rdx
  418641:	48 8b 75 18          	mov    0x18(%rbp),%rsi
  418645:	48 89 8d 90 fc ff ff 	mov    %rcx,-0x370(%rbp)
  41864c:	48 8d 8d 68 fb ff ff 	lea    -0x498(%rbp),%rcx
  418653:	48 89 8d 88 fc ff ff 	mov    %rcx,-0x378(%rbp)
  41865a:	48 89 95 80 fc ff ff 	mov    %rdx,-0x380(%rbp)
  418661:	48 89 b5 78 fc ff ff 	mov    %rsi,-0x388(%rbp)
  418668:	48 8b 8d 88 fc ff ff 	mov    -0x378(%rbp),%rcx
  41866f:	8b 81 a0 00 00 00    	mov    0xa0(%rcx),%eax
  418675:	89 85 70 fc ff ff    	mov    %eax,-0x390(%rbp)
  41867b:	83 bd 70 fc ff ff 00 	cmpl   $0x0,-0x390(%rbp)
  418682:	0f 84 a9 00 00 00    	je     418731 <mbedtls_x509_crt_verify_restartable+0x1281>
  418688:	31 c0                	xor    %eax,%eax
  41868a:	89 c1                	mov    %eax,%ecx
  41868c:	48 8b 95 88 fc ff ff 	mov    -0x378(%rbp),%rdx
  418693:	8b 85 70 fc ff ff    	mov    -0x390(%rbp),%eax
  418699:	83 e8 01             	sub    $0x1,%eax
  41869c:	89 c0                	mov    %eax,%eax
  41869e:	89 c6                	mov    %eax,%esi
  4186a0:	48 c1 e6 04          	shl    $0x4,%rsi
  4186a4:	48 01 f2             	add    %rsi,%rdx
  4186a7:	48 89 95 60 fc ff ff 	mov    %rdx,-0x3a0(%rbp)
  4186ae:	48 8b 95 60 fc ff ff 	mov    -0x3a0(%rbp),%rdx
  4186b5:	8b 42 08             	mov    0x8(%rdx),%eax
  4186b8:	89 85 6c fc ff ff    	mov    %eax,-0x394(%rbp)
  4186be:	48 3b 8d 80 fc ff ff 	cmp    -0x380(%rbp),%rcx
  4186c5:	74 45                	je     41870c <mbedtls_x509_crt_verify_restartable+0x125c>
  4186c7:	48 8b 85 80 fc ff ff 	mov    -0x380(%rbp),%rax
  4186ce:	48 8b bd 78 fc ff ff 	mov    -0x388(%rbp),%rdi
  4186d5:	48 8b 8d 60 fc ff ff 	mov    -0x3a0(%rbp),%rcx
  4186dc:	48 8b 31             	mov    (%rcx),%rsi
  4186df:	8b 95 70 fc ff ff    	mov    -0x390(%rbp),%edx
  4186e5:	83 ea 01             	sub    $0x1,%edx
  4186e8:	48 8d 8d 6c fc ff ff 	lea    -0x394(%rbp),%rcx
  4186ef:	ff d0                	callq  *%rax
  4186f1:	89 85 74 fc ff ff    	mov    %eax,-0x38c(%rbp)
  4186f7:	83 f8 00             	cmp    $0x0,%eax
  4186fa:	74 0e                	je     41870a <mbedtls_x509_crt_verify_restartable+0x125a>
  4186fc:	8b 85 74 fc ff ff    	mov    -0x38c(%rbp),%eax
  418702:	89 85 9c fc ff ff    	mov    %eax,-0x364(%rbp)
  418708:	eb 31                	jmp    41873b <mbedtls_x509_crt_verify_restartable+0x128b>
  41870a:	eb 00                	jmp    41870c <mbedtls_x509_crt_verify_restartable+0x125c>
  41870c:	8b 85 6c fc ff ff    	mov    -0x394(%rbp),%eax
  418712:	48 8b 8d 90 fc ff ff 	mov    -0x370(%rbp),%rcx
  418719:	0b 01                	or     (%rcx),%eax
  41871b:	89 01                	mov    %eax,(%rcx)
  41871d:	8b 85 70 fc ff ff    	mov    -0x390(%rbp),%eax
  418723:	83 c0 ff             	add    $0xffffffff,%eax
  418726:	89 85 70 fc ff ff    	mov    %eax,-0x390(%rbp)
  41872c:	e9 4a ff ff ff       	jmpq   41867b <mbedtls_x509_crt_verify_restartable+0x11cb>
  418731:	c7 85 9c fc ff ff 00 	movl   $0x0,-0x364(%rbp)
  418738:	00 00 00 
  41873b:	8b 85 9c fc ff ff    	mov    -0x364(%rbp),%eax
  418741:	89 85 14 fc ff ff    	mov    %eax,-0x3ec(%rbp)
  418747:	81 bd 14 fc ff ff 00 	cmpl   $0xffffd900,-0x3ec(%rbp)
  41874e:	d9 ff ff 
  418751:	75 0a                	jne    41875d <mbedtls_x509_crt_verify_restartable+0x12ad>
  418753:	c7 85 14 fc ff ff 00 	movl   $0xffffd000,-0x3ec(%rbp)
  41875a:	d0 ff ff 
  41875d:	83 bd 14 fc ff ff 00 	cmpl   $0x0,-0x3ec(%rbp)
  418764:	74 1b                	je     418781 <mbedtls_x509_crt_verify_restartable+0x12d1>
  418766:	48 8b 85 18 fc ff ff 	mov    -0x3e8(%rbp),%rax
  41876d:	c7 00 ff ff ff ff    	movl   $0xffffffff,(%rax)
  418773:	8b 8d 14 fc ff ff    	mov    -0x3ec(%rbp),%ecx
  418779:	89 8d 4c fc ff ff    	mov    %ecx,-0x3b4(%rbp)
  41877f:	eb 22                	jmp    4187a3 <mbedtls_x509_crt_verify_restartable+0x12f3>
  418781:	48 8b 85 18 fc ff ff 	mov    -0x3e8(%rbp),%rax
  418788:	83 38 00             	cmpl   $0x0,(%rax)
  41878b:	74 0c                	je     418799 <mbedtls_x509_crt_verify_restartable+0x12e9>
  41878d:	c7 85 4c fc ff ff 00 	movl   $0xffffd900,-0x3b4(%rbp)
  418794:	d9 ff ff 
  418797:	eb 0a                	jmp    4187a3 <mbedtls_x509_crt_verify_restartable+0x12f3>
  418799:	c7 85 4c fc ff ff 00 	movl   $0x0,-0x3b4(%rbp)
  4187a0:	00 00 00 
  4187a3:	8b 85 4c fc ff ff    	mov    -0x3b4(%rbp),%eax
  4187a9:	89 85 f8 fa ff ff    	mov    %eax,-0x508(%rbp)
  4187af:	e8 a2 d1 02 00       	callq  445956 <writeback_cache>
  4187b4:	8b 85 f8 fa ff ff    	mov    -0x508(%rbp),%eax
  4187ba:	48 81 c4 10 05 00 00 	add    $0x510,%rsp
  4187c1:	5d                   	pop    %rbp
  4187c2:	c3                   	retq   
  4187c3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  4187ca:	84 00 00 00 00 00 

00000000004187d0 <x509_name_cmp>:
  4187d0:	55                   	push   %rbp
  4187d1:	48 89 e5             	mov    %rsp,%rbp
  4187d4:	48 83 ec 40          	sub    $0x40,%rsp
  4187d8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  4187dc:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  4187e0:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  4187e5:	b0 01                	mov    $0x1,%al
  4187e7:	88 45 cf             	mov    %al,-0x31(%rbp)
  4187ea:	75 0b                	jne    4187f7 <x509_name_cmp+0x27>
  4187ec:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  4187f1:	0f 95 c0             	setne  %al
  4187f4:	88 45 cf             	mov    %al,-0x31(%rbp)
  4187f7:	8a 45 cf             	mov    -0x31(%rbp),%al
  4187fa:	a8 01                	test   $0x1,%al
  4187fc:	75 05                	jne    418803 <x509_name_cmp+0x33>
  4187fe:	e9 7e 01 00 00       	jmpq   418981 <x509_name_cmp+0x1b1>
  418803:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  418808:	74 07                	je     418811 <x509_name_cmp+0x41>
  41880a:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  41880f:	75 0c                	jne    41881d <x509_name_cmp+0x4d>
  418811:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%rbp)
  418818:	e9 6b 01 00 00       	jmpq   418988 <x509_name_cmp+0x1b8>
  41881d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  418821:	8b 08                	mov    (%rax),%ecx
  418823:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  418827:	3b 08                	cmp    (%rax),%ecx
  418829:	75 34                	jne    41885f <x509_name_cmp+0x8f>
  41882b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41882f:	48 8b 40 08          	mov    0x8(%rax),%rax
  418833:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  418837:	48 3b 41 08          	cmp    0x8(%rcx),%rax
  41883b:	75 22                	jne    41885f <x509_name_cmp+0x8f>
  41883d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  418841:	48 8b 78 10          	mov    0x10(%rax),%rdi
  418845:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  418849:	48 8b 70 10          	mov    0x10(%rax),%rsi
  41884d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  418851:	48 8b 50 08          	mov    0x8(%rax),%rdx
  418855:	e8 76 89 fe ff       	callq  4011d0 <memcmp@plt>
  41885a:	83 f8 00             	cmp    $0x0,%eax
  41885d:	74 0c                	je     41886b <x509_name_cmp+0x9b>
  41885f:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%rbp)
  418866:	e9 1d 01 00 00       	jmpq   418988 <x509_name_cmp+0x1b8>
  41886b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41886f:	48 83 c0 18          	add    $0x18,%rax
  418873:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  418877:	48 83 c1 18          	add    $0x18,%rcx
  41887b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41887f:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
  418883:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  418887:	8b 10                	mov    (%rax),%edx
  418889:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41888d:	3b 10                	cmp    (%rax),%edx
  41888f:	75 3d                	jne    4188ce <x509_name_cmp+0xfe>
  418891:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  418895:	48 8b 40 08          	mov    0x8(%rax),%rax
  418899:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  41889d:	48 3b 41 08          	cmp    0x8(%rcx),%rax
  4188a1:	75 2b                	jne    4188ce <x509_name_cmp+0xfe>
  4188a3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4188a7:	48 8b 78 10          	mov    0x10(%rax),%rdi
  4188ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4188af:	48 8b 70 10          	mov    0x10(%rax),%rsi
  4188b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4188b7:	48 8b 50 08          	mov    0x8(%rax),%rdx
  4188bb:	e8 10 89 fe ff       	callq  4011d0 <memcmp@plt>
  4188c0:	83 f8 00             	cmp    $0x0,%eax
  4188c3:	75 09                	jne    4188ce <x509_name_cmp+0xfe>
  4188c5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  4188cc:	eb 68                	jmp    418936 <x509_name_cmp+0x166>
  4188ce:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4188d2:	83 38 0c             	cmpl   $0xc,(%rax)
  4188d5:	74 09                	je     4188e0 <x509_name_cmp+0x110>
  4188d7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4188db:	83 38 13             	cmpl   $0x13,(%rax)
  4188de:	75 4f                	jne    41892f <x509_name_cmp+0x15f>
  4188e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4188e4:	83 38 0c             	cmpl   $0xc,(%rax)
  4188e7:	74 09                	je     4188f2 <x509_name_cmp+0x122>
  4188e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4188ed:	83 38 13             	cmpl   $0x13,(%rax)
  4188f0:	75 3d                	jne    41892f <x509_name_cmp+0x15f>
  4188f2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4188f6:	48 8b 40 08          	mov    0x8(%rax),%rax
  4188fa:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4188fe:	48 3b 41 08          	cmp    0x8(%rcx),%rax
  418902:	75 2b                	jne    41892f <x509_name_cmp+0x15f>
  418904:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  418908:	48 8b 78 10          	mov    0x10(%rax),%rdi
  41890c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418910:	48 8b 70 10          	mov    0x10(%rax),%rsi
  418914:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418918:	48 8b 50 08          	mov    0x8(%rax),%rdx
  41891c:	e8 7f 00 00 00       	callq  4189a0 <x509_memcasecmp>
  418921:	83 f8 00             	cmp    $0x0,%eax
  418924:	75 09                	jne    41892f <x509_name_cmp+0x15f>
  418926:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  41892d:	eb 07                	jmp    418936 <x509_name_cmp+0x166>
  41892f:	c7 45 fc ff ff ff ff 	movl   $0xffffffff,-0x4(%rbp)
  418936:	8b 45 fc             	mov    -0x4(%rbp),%eax
  418939:	83 f8 00             	cmp    $0x0,%eax
  41893c:	74 09                	je     418947 <x509_name_cmp+0x177>
  41893e:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%rbp)
  418945:	eb 41                	jmp    418988 <x509_name_cmp+0x1b8>
  418947:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41894b:	0f b6 48 38          	movzbl 0x38(%rax),%ecx
  41894f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  418953:	0f b6 50 38          	movzbl 0x38(%rax),%edx
  418957:	39 d1                	cmp    %edx,%ecx
  418959:	74 09                	je     418964 <x509_name_cmp+0x194>
  41895b:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%rbp)
  418962:	eb 24                	jmp    418988 <x509_name_cmp+0x1b8>
  418964:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  418968:	48 8b 40 30          	mov    0x30(%rax),%rax
  41896c:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  418970:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  418974:	48 8b 40 30          	mov    0x30(%rax),%rax
  418978:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  41897c:	e9 5f fe ff ff       	jmpq   4187e0 <x509_name_cmp+0x10>
  418981:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
  418988:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  41898b:	89 45 c8             	mov    %eax,-0x38(%rbp)
  41898e:	e8 c3 cf 02 00       	callq  445956 <writeback_cache>
  418993:	8b 45 c8             	mov    -0x38(%rbp),%eax
  418996:	48 83 c4 40          	add    $0x40,%rsp
  41899a:	5d                   	pop    %rbp
  41899b:	c3                   	retq   
  41899c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004189a0 <x509_memcasecmp>:
  4189a0:	55                   	push   %rbp
  4189a1:	48 89 e5             	mov    %rsp,%rbp
  4189a4:	48 83 ec 50          	sub    $0x50,%rsp
  4189a8:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  4189ac:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  4189b0:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
  4189b4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4189b8:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  4189bc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4189c0:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
  4189c4:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
  4189cb:	00 
  4189cc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4189d0:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
  4189d4:	0f 83 95 00 00 00    	jae    418a6f <x509_memcasecmp+0xcf>
  4189da:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4189de:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  4189e2:	0f b6 14 08          	movzbl (%rax,%rcx,1),%edx
  4189e6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4189ea:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  4189ee:	0f b6 34 08          	movzbl (%rax,%rcx,1),%esi
  4189f2:	31 f2                	xor    %esi,%edx
  4189f4:	40 88 d7             	mov    %dl,%dil
  4189f7:	40 88 7d d7          	mov    %dil,-0x29(%rbp)
  4189fb:	0f b6 55 d7          	movzbl -0x29(%rbp),%edx
  4189ff:	83 fa 00             	cmp    $0x0,%edx
  418a02:	75 02                	jne    418a06 <x509_memcasecmp+0x66>
  418a04:	eb 58                	jmp    418a5e <x509_memcasecmp+0xbe>
  418a06:	0f b6 45 d7          	movzbl -0x29(%rbp),%eax
  418a0a:	83 f8 20             	cmp    $0x20,%eax
  418a0d:	75 46                	jne    418a55 <x509_memcasecmp+0xb5>
  418a0f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  418a13:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  418a17:	0f b6 14 08          	movzbl (%rax,%rcx,1),%edx
  418a1b:	83 fa 61             	cmp    $0x61,%edx
  418a1e:	7c 11                	jl     418a31 <x509_memcasecmp+0x91>
  418a20:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  418a24:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  418a28:	0f b6 14 08          	movzbl (%rax,%rcx,1),%edx
  418a2c:	83 fa 7a             	cmp    $0x7a,%edx
  418a2f:	7e 22                	jle    418a53 <x509_memcasecmp+0xb3>
  418a31:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  418a35:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  418a39:	0f b6 14 08          	movzbl (%rax,%rcx,1),%edx
  418a3d:	83 fa 41             	cmp    $0x41,%edx
  418a40:	7c 13                	jl     418a55 <x509_memcasecmp+0xb5>
  418a42:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  418a46:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  418a4a:	0f b6 14 08          	movzbl (%rax,%rcx,1),%edx
  418a4e:	83 fa 5a             	cmp    $0x5a,%edx
  418a51:	7f 02                	jg     418a55 <x509_memcasecmp+0xb5>
  418a53:	eb 09                	jmp    418a5e <x509_memcasecmp+0xbe>
  418a55:	c7 45 fc ff ff ff ff 	movl   $0xffffffff,-0x4(%rbp)
  418a5c:	eb 18                	jmp    418a76 <x509_memcasecmp+0xd6>
  418a5e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  418a62:	48 83 c0 01          	add    $0x1,%rax
  418a66:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  418a6a:	e9 5d ff ff ff       	jmpq   4189cc <x509_memcasecmp+0x2c>
  418a6f:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  418a76:	8b 45 fc             	mov    -0x4(%rbp),%eax
  418a79:	89 45 bc             	mov    %eax,-0x44(%rbp)
  418a7c:	e8 d5 ce 02 00       	callq  445956 <writeback_cache>
  418a81:	8b 45 bc             	mov    -0x44(%rbp),%eax
  418a84:	48 83 c4 50          	add    $0x50,%rsp
  418a88:	5d                   	pop    %rbp
  418a89:	c3                   	retq   
  418a8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000418a90 <x509_crt_check_cn>:
  418a90:	55                   	push   %rbp
  418a91:	48 89 e5             	mov    %rsp,%rbp
  418a94:	48 83 ec 60          	sub    $0x60,%rsp
  418a98:	48 89 7d c0          	mov    %rdi,-0x40(%rbp)
  418a9c:	48 89 75 b8          	mov    %rsi,-0x48(%rbp)
  418aa0:	48 89 55 b0          	mov    %rdx,-0x50(%rbp)
  418aa4:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  418aa8:	48 8b 52 08          	mov    0x8(%rdx),%rdx
  418aac:	48 3b 55 b0          	cmp    -0x50(%rbp),%rdx
  418ab0:	75 26                	jne    418ad8 <x509_crt_check_cn+0x48>
  418ab2:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
  418ab6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  418aba:	48 8b 70 10          	mov    0x10(%rax),%rsi
  418abe:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
  418ac2:	e8 d9 fe ff ff       	callq  4189a0 <x509_memcasecmp>
  418ac7:	83 f8 00             	cmp    $0x0,%eax
  418aca:	75 0c                	jne    418ad8 <x509_crt_check_cn+0x48>
  418acc:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
  418ad3:	e9 19 01 00 00       	jmpq   418bf1 <x509_crt_check_cn+0x161>
  418ad8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  418adc:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  418ae0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  418ae4:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
  418ae8:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
  418aef:	00 
  418af0:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  418af4:	e8 d7 85 fe ff       	callq  4010d0 <strlen@plt>
  418af9:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  418afd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418b01:	48 83 78 08 03       	cmpq   $0x3,0x8(%rax)
  418b06:	72 21                	jb     418b29 <x509_crt_check_cn+0x99>
  418b08:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418b0c:	48 8b 40 10          	mov    0x10(%rax),%rax
  418b10:	0f b6 08             	movzbl (%rax),%ecx
  418b13:	83 f9 2a             	cmp    $0x2a,%ecx
  418b16:	75 11                	jne    418b29 <x509_crt_check_cn+0x99>
  418b18:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418b1c:	48 8b 40 10          	mov    0x10(%rax),%rax
  418b20:	0f b6 48 01          	movzbl 0x1(%rax),%ecx
  418b24:	83 f9 2e             	cmp    $0x2e,%ecx
  418b27:	74 0c                	je     418b35 <x509_crt_check_cn+0xa5>
  418b29:	c7 45 fc ff ff ff ff 	movl   $0xffffffff,-0x4(%rbp)
  418b30:	e9 a4 00 00 00       	jmpq   418bd9 <x509_crt_check_cn+0x149>
  418b35:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
  418b3c:	00 
  418b3d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  418b41:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
  418b45:	73 29                	jae    418b70 <x509_crt_check_cn+0xe0>
  418b47:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  418b4b:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  418b4f:	0f be 14 08          	movsbl (%rax,%rcx,1),%edx
  418b53:	83 fa 2e             	cmp    $0x2e,%edx
  418b56:	75 0a                	jne    418b62 <x509_crt_check_cn+0xd2>
  418b58:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  418b5c:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  418b60:	eb 0e                	jmp    418b70 <x509_crt_check_cn+0xe0>
  418b62:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  418b66:	48 83 c0 01          	add    $0x1,%rax
  418b6a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  418b6e:	eb cd                	jmp    418b3d <x509_crt_check_cn+0xad>
  418b70:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  418b75:	75 09                	jne    418b80 <x509_crt_check_cn+0xf0>
  418b77:	c7 45 fc ff ff ff ff 	movl   $0xffffffff,-0x4(%rbp)
  418b7e:	eb 59                	jmp    418bd9 <x509_crt_check_cn+0x149>
  418b80:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  418b84:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
  418b88:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  418b8c:	48 8b 49 08          	mov    0x8(%rcx),%rcx
  418b90:	48 83 e9 01          	sub    $0x1,%rcx
  418b94:	48 39 c8             	cmp    %rcx,%rax
  418b97:	75 39                	jne    418bd2 <x509_crt_check_cn+0x142>
  418b99:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418b9d:	48 8b 40 10          	mov    0x10(%rax),%rax
  418ba1:	48 83 c0 01          	add    $0x1,%rax
  418ba5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  418ba9:	48 03 4d d8          	add    -0x28(%rbp),%rcx
  418bad:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  418bb1:	48 8b 52 08          	mov    0x8(%rdx),%rdx
  418bb5:	48 83 ea 01          	sub    $0x1,%rdx
  418bb9:	48 89 c7             	mov    %rax,%rdi
  418bbc:	48 89 ce             	mov    %rcx,%rsi
  418bbf:	e8 dc fd ff ff       	callq  4189a0 <x509_memcasecmp>
  418bc4:	83 f8 00             	cmp    $0x0,%eax
  418bc7:	75 09                	jne    418bd2 <x509_crt_check_cn+0x142>
  418bc9:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  418bd0:	eb 07                	jmp    418bd9 <x509_crt_check_cn+0x149>
  418bd2:	c7 45 fc ff ff ff ff 	movl   $0xffffffff,-0x4(%rbp)
  418bd9:	8b 45 fc             	mov    -0x4(%rbp),%eax
  418bdc:	83 f8 00             	cmp    $0x0,%eax
  418bdf:	75 09                	jne    418bea <x509_crt_check_cn+0x15a>
  418be1:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
  418be8:	eb 07                	jmp    418bf1 <x509_crt_check_cn+0x161>
  418bea:	c7 45 cc ff ff ff ff 	movl   $0xffffffff,-0x34(%rbp)
  418bf1:	8b 45 cc             	mov    -0x34(%rbp),%eax
  418bf4:	89 45 ac             	mov    %eax,-0x54(%rbp)
  418bf7:	e8 5a cd 02 00       	callq  445956 <writeback_cache>
  418bfc:	8b 45 ac             	mov    -0x54(%rbp),%eax
  418bff:	48 83 c4 60          	add    $0x60,%rsp
  418c03:	5d                   	pop    %rbp
  418c04:	c3                   	retq   
  418c05:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  418c0c:	00 00 00 00 

0000000000418c10 <mbedtls_x509_get_name>:
  418c10:	55                   	push   %rbp
  418c11:	48 89 e5             	mov    %rsp,%rbp
  418c14:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
  418c1b:	48 89 bd 50 ff ff ff 	mov    %rdi,-0xb0(%rbp)
  418c22:	48 89 b5 48 ff ff ff 	mov    %rsi,-0xb8(%rbp)
  418c29:	48 89 95 40 ff ff ff 	mov    %rdx,-0xc0(%rbp)
  418c30:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
  418c37:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
  418c3e:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
  418c45:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
  418c4c:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  418c53:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
  418c5a:	c7 85 5c ff ff ff 31 	movl   $0x31,-0xa4(%rbp)
  418c61:	00 00 00 
  418c64:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  418c6b:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx
  418c72:	48 8b 09             	mov    (%rcx),%rcx
  418c75:	48 29 c8             	sub    %rcx,%rax
  418c78:	48 83 f8 01          	cmp    $0x1,%rax
  418c7c:	7d 0c                	jge    418c8a <mbedtls_x509_get_name+0x7a>
  418c7e:	c7 85 7c ff ff ff a0 	movl   $0xffffffa0,-0x84(%rbp)
  418c85:	ff ff ff 
  418c88:	eb 52                	jmp    418cdc <mbedtls_x509_get_name+0xcc>
  418c8a:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  418c91:	48 8b 00             	mov    (%rax),%rax
  418c94:	0f b6 08             	movzbl (%rax),%ecx
  418c97:	3b 8d 5c ff ff ff    	cmp    -0xa4(%rbp),%ecx
  418c9d:	74 0c                	je     418cab <mbedtls_x509_get_name+0x9b>
  418c9f:	c7 85 7c ff ff ff 9e 	movl   $0xffffff9e,-0x84(%rbp)
  418ca6:	ff ff ff 
  418ca9:	eb 31                	jmp    418cdc <mbedtls_x509_get_name+0xcc>
  418cab:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  418cb2:	48 8b 08             	mov    (%rax),%rcx
  418cb5:	48 83 c1 01          	add    $0x1,%rcx
  418cb9:	48 89 08             	mov    %rcx,(%rax)
  418cbc:	48 8b bd 70 ff ff ff 	mov    -0x90(%rbp),%rdi
  418cc3:	48 8b b5 68 ff ff ff 	mov    -0x98(%rbp),%rsi
  418cca:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
  418cd1:	e8 fa 13 00 00       	callq  41a0d0 <mbedtls_asn1_get_len>
  418cd6:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
  418cdc:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
  418ce2:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
  418ce8:	83 f8 00             	cmp    $0x0,%eax
  418ceb:	74 16                	je     418d03 <mbedtls_x509_get_name+0xf3>
  418ced:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
  418cf3:	05 80 dc ff ff       	add    $0xffffdc80,%eax
  418cf8:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
  418cfe:	e9 d3 03 00 00       	jmpq   4190d6 <mbedtls_x509_get_name+0x4c6>
  418d03:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
  418d0a:	48 8b 00             	mov    (%rax),%rax
  418d0d:	48 03 85 30 ff ff ff 	add    -0xd0(%rbp),%rax
  418d14:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
  418d1b:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
  418d22:	48 8b 8d 28 ff ff ff 	mov    -0xd8(%rbp),%rcx
  418d29:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
  418d30:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  418d34:	48 89 4d a8          	mov    %rcx,-0x58(%rbp)
  418d38:	48 89 55 a0          	mov    %rdx,-0x60(%rbp)
  418d3c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  418d40:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
  418d44:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  418d48:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
  418d4c:	48 8d 45 90          	lea    -0x70(%rbp),%rax
  418d50:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  418d54:	c7 45 bc 30 00 00 00 	movl   $0x30,-0x44(%rbp)
  418d5b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  418d5f:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  418d63:	48 8b 09             	mov    (%rcx),%rcx
  418d66:	48 29 c8             	sub    %rcx,%rax
  418d69:	48 83 f8 01          	cmp    $0x1,%rax
  418d6d:	7d 09                	jge    418d78 <mbedtls_x509_get_name+0x168>
  418d6f:	c7 45 d8 a0 ff ff ff 	movl   $0xffffffa0,-0x28(%rbp)
  418d76:	eb 3a                	jmp    418db2 <mbedtls_x509_get_name+0x1a2>
  418d78:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  418d7c:	48 8b 00             	mov    (%rax),%rax
  418d7f:	0f b6 08             	movzbl (%rax),%ecx
  418d82:	3b 4d bc             	cmp    -0x44(%rbp),%ecx
  418d85:	74 09                	je     418d90 <mbedtls_x509_get_name+0x180>
  418d87:	c7 45 d8 9e ff ff ff 	movl   $0xffffff9e,-0x28(%rbp)
  418d8e:	eb 22                	jmp    418db2 <mbedtls_x509_get_name+0x1a2>
  418d90:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  418d94:	48 8b 08             	mov    (%rax),%rcx
  418d97:	48 83 c1 01          	add    $0x1,%rcx
  418d9b:	48 89 08             	mov    %rcx,(%rax)
  418d9e:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  418da2:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  418da6:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  418daa:	e8 21 13 00 00       	callq  41a0d0 <mbedtls_asn1_get_len>
  418daf:	89 45 d8             	mov    %eax,-0x28(%rbp)
  418db2:	8b 45 d8             	mov    -0x28(%rbp),%eax
  418db5:	89 45 9c             	mov    %eax,-0x64(%rbp)
  418db8:	83 f8 00             	cmp    $0x0,%eax
  418dbb:	74 10                	je     418dcd <mbedtls_x509_get_name+0x1bd>
  418dbd:	8b 45 9c             	mov    -0x64(%rbp),%eax
  418dc0:	05 80 dc ff ff       	add    $0xffffdc80,%eax
  418dc5:	89 45 b8             	mov    %eax,-0x48(%rbp)
  418dc8:	e9 0a 02 00 00       	jmpq   418fd7 <mbedtls_x509_get_name+0x3c7>
  418dcd:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  418dd1:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  418dd5:	48 8b 09             	mov    (%rcx),%rcx
  418dd8:	48 29 c8             	sub    %rcx,%rax
  418ddb:	48 83 f8 01          	cmp    $0x1,%rax
  418ddf:	7d 0c                	jge    418ded <mbedtls_x509_get_name+0x1dd>
  418de1:	c7 45 b8 20 dc ff ff 	movl   $0xffffdc20,-0x48(%rbp)
  418de8:	e9 ea 01 00 00       	jmpq   418fd7 <mbedtls_x509_get_name+0x3c7>
  418ded:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  418df1:	48 89 45 88          	mov    %rax,-0x78(%rbp)
  418df5:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  418df9:	48 8b 00             	mov    (%rax),%rax
  418dfc:	0f b6 08             	movzbl (%rax),%ecx
  418dff:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  418e03:	89 08                	mov    %ecx,(%rax)
  418e05:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  418e09:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
  418e0d:	48 8b 75 88          	mov    -0x78(%rbp),%rsi
  418e11:	48 83 c6 08          	add    $0x8,%rsi
  418e15:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  418e19:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  418e1d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  418e21:	c7 45 dc 06 00 00 00 	movl   $0x6,-0x24(%rbp)
  418e28:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  418e2c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  418e30:	48 8b 12             	mov    (%rdx),%rdx
  418e33:	48 29 d0             	sub    %rdx,%rax
  418e36:	48 83 f8 01          	cmp    $0x1,%rax
  418e3a:	7d 09                	jge    418e45 <mbedtls_x509_get_name+0x235>
  418e3c:	c7 45 fc a0 ff ff ff 	movl   $0xffffffa0,-0x4(%rbp)
  418e43:	eb 3a                	jmp    418e7f <mbedtls_x509_get_name+0x26f>
  418e45:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  418e49:	48 8b 00             	mov    (%rax),%rax
  418e4c:	0f b6 08             	movzbl (%rax),%ecx
  418e4f:	3b 4d dc             	cmp    -0x24(%rbp),%ecx
  418e52:	74 09                	je     418e5d <mbedtls_x509_get_name+0x24d>
  418e54:	c7 45 fc 9e ff ff ff 	movl   $0xffffff9e,-0x4(%rbp)
  418e5b:	eb 22                	jmp    418e7f <mbedtls_x509_get_name+0x26f>
  418e5d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  418e61:	48 8b 08             	mov    (%rax),%rcx
  418e64:	48 83 c1 01          	add    $0x1,%rcx
  418e68:	48 89 08             	mov    %rcx,(%rax)
  418e6b:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  418e6f:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  418e73:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  418e77:	e8 54 12 00 00       	callq  41a0d0 <mbedtls_asn1_get_len>
  418e7c:	89 45 fc             	mov    %eax,-0x4(%rbp)
  418e7f:	8b 45 fc             	mov    -0x4(%rbp),%eax
  418e82:	89 45 9c             	mov    %eax,-0x64(%rbp)
  418e85:	83 f8 00             	cmp    $0x0,%eax
  418e88:	74 10                	je     418e9a <mbedtls_x509_get_name+0x28a>
  418e8a:	8b 45 9c             	mov    -0x64(%rbp),%eax
  418e8d:	05 80 dc ff ff       	add    $0xffffdc80,%eax
  418e92:	89 45 b8             	mov    %eax,-0x48(%rbp)
  418e95:	e9 3d 01 00 00       	jmpq   418fd7 <mbedtls_x509_get_name+0x3c7>
  418e9a:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  418e9e:	48 8b 00             	mov    (%rax),%rax
  418ea1:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
  418ea5:	48 89 41 10          	mov    %rax,0x10(%rcx)
  418ea9:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  418ead:	48 8b 40 08          	mov    0x8(%rax),%rax
  418eb1:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  418eb5:	48 03 01             	add    (%rcx),%rax
  418eb8:	48 89 01             	mov    %rax,(%rcx)
  418ebb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  418ebf:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  418ec3:	48 8b 09             	mov    (%rcx),%rcx
  418ec6:	48 29 c8             	sub    %rcx,%rax
  418ec9:	48 83 f8 01          	cmp    $0x1,%rax
  418ecd:	7d 0c                	jge    418edb <mbedtls_x509_get_name+0x2cb>
  418ecf:	c7 45 b8 20 dc ff ff 	movl   $0xffffdc20,-0x48(%rbp)
  418ed6:	e9 fc 00 00 00       	jmpq   418fd7 <mbedtls_x509_get_name+0x3c7>
  418edb:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  418edf:	48 8b 00             	mov    (%rax),%rax
  418ee2:	0f b6 08             	movzbl (%rax),%ecx
  418ee5:	83 f9 1e             	cmp    $0x1e,%ecx
  418ee8:	74 66                	je     418f50 <mbedtls_x509_get_name+0x340>
  418eea:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  418eee:	48 8b 00             	mov    (%rax),%rax
  418ef1:	0f b6 08             	movzbl (%rax),%ecx
  418ef4:	83 f9 0c             	cmp    $0xc,%ecx
  418ef7:	74 57                	je     418f50 <mbedtls_x509_get_name+0x340>
  418ef9:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  418efd:	48 8b 00             	mov    (%rax),%rax
  418f00:	0f b6 08             	movzbl (%rax),%ecx
  418f03:	83 f9 14             	cmp    $0x14,%ecx
  418f06:	74 48                	je     418f50 <mbedtls_x509_get_name+0x340>
  418f08:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  418f0c:	48 8b 00             	mov    (%rax),%rax
  418f0f:	0f b6 08             	movzbl (%rax),%ecx
  418f12:	83 f9 13             	cmp    $0x13,%ecx
  418f15:	74 39                	je     418f50 <mbedtls_x509_get_name+0x340>
  418f17:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  418f1b:	48 8b 00             	mov    (%rax),%rax
  418f1e:	0f b6 08             	movzbl (%rax),%ecx
  418f21:	83 f9 16             	cmp    $0x16,%ecx
  418f24:	74 2a                	je     418f50 <mbedtls_x509_get_name+0x340>
  418f26:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  418f2a:	48 8b 00             	mov    (%rax),%rax
  418f2d:	0f b6 08             	movzbl (%rax),%ecx
  418f30:	83 f9 1c             	cmp    $0x1c,%ecx
  418f33:	74 1b                	je     418f50 <mbedtls_x509_get_name+0x340>
  418f35:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  418f39:	48 8b 00             	mov    (%rax),%rax
  418f3c:	0f b6 08             	movzbl (%rax),%ecx
  418f3f:	83 f9 03             	cmp    $0x3,%ecx
  418f42:	74 0c                	je     418f50 <mbedtls_x509_get_name+0x340>
  418f44:	c7 45 b8 1e dc ff ff 	movl   $0xffffdc1e,-0x48(%rbp)
  418f4b:	e9 87 00 00 00       	jmpq   418fd7 <mbedtls_x509_get_name+0x3c7>
  418f50:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  418f54:	48 83 c0 18          	add    $0x18,%rax
  418f58:	48 89 45 80          	mov    %rax,-0x80(%rbp)
  418f5c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  418f60:	48 8b 08             	mov    (%rax),%rcx
  418f63:	48 89 ca             	mov    %rcx,%rdx
  418f66:	48 83 c2 01          	add    $0x1,%rdx
  418f6a:	48 89 10             	mov    %rdx,(%rax)
  418f6d:	0f b6 31             	movzbl (%rcx),%esi
  418f70:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  418f74:	89 30                	mov    %esi,(%rax)
  418f76:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
  418f7a:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
  418f7e:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  418f82:	48 83 c0 08          	add    $0x8,%rax
  418f86:	48 89 c2             	mov    %rax,%rdx
  418f89:	e8 42 11 00 00       	callq  41a0d0 <mbedtls_asn1_get_len>
  418f8e:	89 45 9c             	mov    %eax,-0x64(%rbp)
  418f91:	83 f8 00             	cmp    $0x0,%eax
  418f94:	74 0d                	je     418fa3 <mbedtls_x509_get_name+0x393>
  418f96:	8b 45 9c             	mov    -0x64(%rbp),%eax
  418f99:	05 80 dc ff ff       	add    $0xffffdc80,%eax
  418f9e:	89 45 b8             	mov    %eax,-0x48(%rbp)
  418fa1:	eb 34                	jmp    418fd7 <mbedtls_x509_get_name+0x3c7>
  418fa3:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  418fa7:	48 8b 00             	mov    (%rax),%rax
  418faa:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
  418fae:	48 89 41 10          	mov    %rax,0x10(%rcx)
  418fb2:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  418fb6:	48 8b 40 08          	mov    0x8(%rax),%rax
  418fba:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  418fbe:	48 03 01             	add    (%rcx),%rax
  418fc1:	48 89 01             	mov    %rax,(%rcx)
  418fc4:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  418fc8:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
  418fcf:	00 
  418fd0:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%rbp)
  418fd7:	8b 45 b8             	mov    -0x48(%rbp),%eax
  418fda:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
  418fe0:	83 f8 00             	cmp    $0x0,%eax
  418fe3:	74 11                	je     418ff6 <mbedtls_x509_get_name+0x3e6>
  418fe5:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
  418feb:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
  418ff1:	e9 e0 00 00 00       	jmpq   4190d6 <mbedtls_x509_get_name+0x4c6>
  418ff6:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
  418ffd:	48 8b 00             	mov    (%rax),%rax
  419000:	48 3b 85 28 ff ff ff 	cmp    -0xd8(%rbp),%rax
  419007:	75 02                	jne    41900b <mbedtls_x509_get_name+0x3fb>
  419009:	eb 5d                	jmp    419068 <mbedtls_x509_get_name+0x458>
  41900b:	b8 01 00 00 00       	mov    $0x1,%eax
  419010:	89 c7                	mov    %eax,%edi
  419012:	b8 40 00 00 00       	mov    $0x40,%eax
  419017:	89 c6                	mov    %eax,%esi
  419019:	48 8b 8d 40 ff ff ff 	mov    -0xc0(%rbp),%rcx
  419020:	c6 41 38 01          	movb   $0x1,0x38(%rcx)
  419024:	e8 c1 d7 02 00       	callq  4467ea <aes_calloc>
  419029:	48 8b 8d 40 ff ff ff 	mov    -0xc0(%rbp),%rcx
  419030:	48 89 41 30          	mov    %rax,0x30(%rcx)
  419034:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
  41903b:	48 83 78 30 00       	cmpq   $0x0,0x30(%rax)
  419040:	75 0f                	jne    419051 <mbedtls_x509_get_name+0x441>
  419042:	c7 85 58 ff ff ff 80 	movl   $0xffffd780,-0xa8(%rbp)
  419049:	d7 ff ff 
  41904c:	e9 85 00 00 00       	jmpq   4190d6 <mbedtls_x509_get_name+0x4c6>
  419051:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
  419058:	48 8b 40 30          	mov    0x30(%rax),%rax
  41905c:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
  419063:	e9 b3 fc ff ff       	jmpq   418d1b <mbedtls_x509_get_name+0x10b>
  419068:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
  41906f:	48 8b 00             	mov    (%rax),%rax
  419072:	48 3b 85 48 ff ff ff 	cmp    -0xb8(%rbp),%rax
  419079:	75 0c                	jne    419087 <mbedtls_x509_get_name+0x477>
  41907b:	c7 85 58 ff ff ff 00 	movl   $0x0,-0xa8(%rbp)
  419082:	00 00 00 
  419085:	eb 4f                	jmp    4190d6 <mbedtls_x509_get_name+0x4c6>
  419087:	b8 01 00 00 00       	mov    $0x1,%eax
  41908c:	89 c7                	mov    %eax,%edi
  41908e:	b8 40 00 00 00       	mov    $0x40,%eax
  419093:	89 c6                	mov    %eax,%esi
  419095:	e8 50 d7 02 00       	callq  4467ea <aes_calloc>
  41909a:	48 8b b5 40 ff ff ff 	mov    -0xc0(%rbp),%rsi
  4190a1:	48 89 46 30          	mov    %rax,0x30(%rsi)
  4190a5:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
  4190ac:	48 83 78 30 00       	cmpq   $0x0,0x30(%rax)
  4190b1:	75 0c                	jne    4190bf <mbedtls_x509_get_name+0x4af>
  4190b3:	c7 85 58 ff ff ff 80 	movl   $0xffffd780,-0xa8(%rbp)
  4190ba:	d7 ff ff 
  4190bd:	eb 17                	jmp    4190d6 <mbedtls_x509_get_name+0x4c6>
  4190bf:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
  4190c6:	48 8b 40 30          	mov    0x30(%rax),%rax
  4190ca:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
  4190d1:	e9 5a fb ff ff       	jmpq   418c30 <mbedtls_x509_get_name+0x20>
  4190d6:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
  4190dc:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%rbp)
  4190e2:	e8 6f c8 02 00       	callq  445956 <writeback_cache>
  4190e7:	8b 85 24 ff ff ff    	mov    -0xdc(%rbp),%eax
  4190ed:	48 81 c4 e0 00 00 00 	add    $0xe0,%rsp
  4190f4:	5d                   	pop    %rbp
  4190f5:	c3                   	retq   
  4190f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4190fd:	00 00 00 

0000000000419100 <mbedtls_x509_get_time>:
  419100:	55                   	push   %rbp
  419101:	48 89 e5             	mov    %rsp,%rbp
  419104:	48 81 ec 70 01 00 00 	sub    $0x170,%rsp
  41910b:	48 89 bd f0 fe ff ff 	mov    %rdi,-0x110(%rbp)
  419112:	48 89 b5 e8 fe ff ff 	mov    %rsi,-0x118(%rbp)
  419119:	48 89 95 e0 fe ff ff 	mov    %rdx,-0x120(%rbp)
  419120:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
  419127:	48 8b b5 f0 fe ff ff 	mov    -0x110(%rbp),%rsi
  41912e:	48 8b 36             	mov    (%rsi),%rsi
  419131:	48 29 f2             	sub    %rsi,%rdx
  419134:	48 83 fa 01          	cmp    $0x1,%rdx
  419138:	7d 0f                	jge    419149 <mbedtls_x509_get_time+0x49>
  41913a:	c7 85 f8 fe ff ff a0 	movl   $0xffffdba0,-0x108(%rbp)
  419141:	db ff ff 
  419144:	e9 2e 09 00 00       	jmpq   419a77 <mbedtls_x509_get_time+0x977>
  419149:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
  419150:	48 8b 00             	mov    (%rax),%rax
  419153:	8a 08                	mov    (%rax),%cl
  419155:	88 8d c7 fe ff ff    	mov    %cl,-0x139(%rbp)
  41915b:	0f b6 95 c7 fe ff ff 	movzbl -0x139(%rbp),%edx
  419162:	83 fa 17             	cmp    $0x17,%edx
  419165:	75 0d                	jne    419174 <mbedtls_x509_get_time+0x74>
  419167:	48 c7 85 c8 fe ff ff 	movq   $0x2,-0x138(%rbp)
  41916e:	02 00 00 00 
  419172:	eb 2a                	jmp    41919e <mbedtls_x509_get_time+0x9e>
  419174:	0f b6 85 c7 fe ff ff 	movzbl -0x139(%rbp),%eax
  41917b:	83 f8 18             	cmp    $0x18,%eax
  41917e:	75 0d                	jne    41918d <mbedtls_x509_get_time+0x8d>
  419180:	48 c7 85 c8 fe ff ff 	movq   $0x4,-0x138(%rbp)
  419187:	04 00 00 00 
  41918b:	eb 0f                	jmp    41919c <mbedtls_x509_get_time+0x9c>
  41918d:	c7 85 f8 fe ff ff 9e 	movl   $0xffffdb9e,-0x108(%rbp)
  419194:	db ff ff 
  419197:	e9 db 08 00 00       	jmpq   419a77 <mbedtls_x509_get_time+0x977>
  41919c:	eb 00                	jmp    41919e <mbedtls_x509_get_time+0x9e>
  41919e:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
  4191a5:	48 8b 08             	mov    (%rax),%rcx
  4191a8:	48 83 c1 01          	add    $0x1,%rcx
  4191ac:	48 89 08             	mov    %rcx,(%rax)
  4191af:	48 8b bd f0 fe ff ff 	mov    -0x110(%rbp),%rdi
  4191b6:	48 8b b5 e8 fe ff ff 	mov    -0x118(%rbp),%rsi
  4191bd:	48 8d 95 d0 fe ff ff 	lea    -0x130(%rbp),%rdx
  4191c4:	e8 07 0f 00 00       	callq  41a0d0 <mbedtls_asn1_get_len>
  4191c9:	89 85 dc fe ff ff    	mov    %eax,-0x124(%rbp)
  4191cf:	83 bd dc fe ff ff 00 	cmpl   $0x0,-0x124(%rbp)
  4191d6:	74 16                	je     4191ee <mbedtls_x509_get_time+0xee>
  4191d8:	8b 85 dc fe ff ff    	mov    -0x124(%rbp),%eax
  4191de:	05 00 dc ff ff       	add    $0xffffdc00,%eax
  4191e3:	89 85 f8 fe ff ff    	mov    %eax,-0x108(%rbp)
  4191e9:	e9 89 08 00 00       	jmpq   419a77 <mbedtls_x509_get_time+0x977>
  4191ee:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
  4191f5:	48 8b 8d d0 fe ff ff 	mov    -0x130(%rbp),%rcx
  4191fc:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
  419203:	48 8b b5 e0 fe ff ff 	mov    -0x120(%rbp),%rsi
  41920a:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
  419211:	48 89 8d 10 ff ff ff 	mov    %rcx,-0xf0(%rbp)
  419218:	48 89 95 08 ff ff ff 	mov    %rdx,-0xf8(%rbp)
  41921f:	48 89 b5 00 ff ff ff 	mov    %rsi,-0x100(%rbp)
  419226:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
  41922d:	48 8b 8d 08 ff ff ff 	mov    -0xf8(%rbp),%rcx
  419234:	48 83 c1 08          	add    $0x8,%rcx
  419238:	48 39 c8             	cmp    %rcx,%rax
  41923b:	73 0f                	jae    41924c <mbedtls_x509_get_time+0x14c>
  41923d:	c7 85 24 ff ff ff 00 	movl   $0xffffdc00,-0xdc(%rbp)
  419244:	dc ff ff 
  419247:	e9 1f 08 00 00       	jmpq   419a6b <mbedtls_x509_get_time+0x96b>
  41924c:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
  419253:	48 83 c0 08          	add    $0x8,%rax
  419257:	48 8b 8d 10 ff ff ff 	mov    -0xf0(%rbp),%rcx
  41925e:	48 29 c1             	sub    %rax,%rcx
  419261:	48 89 8d 10 ff ff ff 	mov    %rcx,-0xf0(%rbp)
  419268:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  41926f:	48 8b 8d 08 ff ff ff 	mov    -0xf8(%rbp),%rcx
  419276:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
  41927d:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
  419284:	48 89 8d 30 ff ff ff 	mov    %rcx,-0xd0(%rbp)
  41928b:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)
  419292:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  419299:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  41929f:	48 83 bd 30 ff ff ff 	cmpq   $0x0,-0xd0(%rbp)
  4192a6:	00 
  4192a7:	76 75                	jbe    41931e <mbedtls_x509_get_time+0x21e>
  4192a9:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  4192b0:	48 8b 00             	mov    (%rax),%rax
  4192b3:	0f b6 08             	movzbl (%rax),%ecx
  4192b6:	83 f9 30             	cmp    $0x30,%ecx
  4192b9:	7c 12                	jl     4192cd <mbedtls_x509_get_time+0x1cd>
  4192bb:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  4192c2:	48 8b 00             	mov    (%rax),%rax
  4192c5:	0f b6 08             	movzbl (%rax),%ecx
  4192c8:	83 f9 39             	cmp    $0x39,%ecx
  4192cb:	7e 0c                	jle    4192d9 <mbedtls_x509_get_time+0x1d9>
  4192cd:	c7 85 44 ff ff ff 00 	movl   $0xffffdc00,-0xbc(%rbp)
  4192d4:	dc ff ff 
  4192d7:	eb 4f                	jmp    419328 <mbedtls_x509_get_time+0x228>
  4192d9:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4192e0:	6b 08 0a             	imul   $0xa,(%rax),%ecx
  4192e3:	89 08                	mov    %ecx,(%rax)
  4192e5:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  4192ec:	48 8b 10             	mov    (%rax),%rdx
  4192ef:	48 89 d6             	mov    %rdx,%rsi
  4192f2:	48 83 c6 01          	add    $0x1,%rsi
  4192f6:	48 89 30             	mov    %rsi,(%rax)
  4192f9:	0f b6 0a             	movzbl (%rdx),%ecx
  4192fc:	83 e9 30             	sub    $0x30,%ecx
  4192ff:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  419306:	03 08                	add    (%rax),%ecx
  419308:	89 08                	mov    %ecx,(%rax)
  41930a:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
  419311:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
  419315:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
  41931c:	eb 81                	jmp    41929f <mbedtls_x509_get_time+0x19f>
  41931e:	c7 85 44 ff ff ff 00 	movl   $0x0,-0xbc(%rbp)
  419325:	00 00 00 
  419328:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
  41932e:	89 85 fc fe ff ff    	mov    %eax,-0x104(%rbp)
  419334:	83 f8 00             	cmp    $0x0,%eax
  419337:	74 11                	je     41934a <mbedtls_x509_get_time+0x24a>
  419339:	8b 85 fc fe ff ff    	mov    -0x104(%rbp),%eax
  41933f:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%rbp)
  419345:	e9 21 07 00 00       	jmpq   419a6b <mbedtls_x509_get_time+0x96b>
  41934a:	b8 02 00 00 00       	mov    $0x2,%eax
  41934f:	89 c1                	mov    %eax,%ecx
  419351:	48 3b 8d 08 ff ff ff 	cmp    -0xf8(%rbp),%rcx
  419358:	75 2b                	jne    419385 <mbedtls_x509_get_time+0x285>
  41935a:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
  419361:	83 38 32             	cmpl   $0x32,(%rax)
  419364:	7d 0e                	jge    419374 <mbedtls_x509_get_time+0x274>
  419366:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
  41936d:	8b 08                	mov    (%rax),%ecx
  41936f:	83 c1 64             	add    $0x64,%ecx
  419372:	89 08                	mov    %ecx,(%rax)
  419374:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
  41937b:	8b 08                	mov    (%rax),%ecx
  41937d:	81 c1 6c 07 00 00    	add    $0x76c,%ecx
  419383:	89 08                	mov    %ecx,(%rax)
  419385:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  41938c:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  419393:	48 83 c1 04          	add    $0x4,%rcx
  419397:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41939b:	48 c7 45 e8 02 00 00 	movq   $0x2,-0x18(%rbp)
  4193a2:	00 
  4193a3:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  4193a7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4193ab:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  4193b1:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  4193b6:	76 5d                	jbe    419415 <mbedtls_x509_get_time+0x315>
  4193b8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4193bc:	48 8b 00             	mov    (%rax),%rax
  4193bf:	0f b6 08             	movzbl (%rax),%ecx
  4193c2:	83 f9 30             	cmp    $0x30,%ecx
  4193c5:	7c 0f                	jl     4193d6 <mbedtls_x509_get_time+0x2d6>
  4193c7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4193cb:	48 8b 00             	mov    (%rax),%rax
  4193ce:	0f b6 08             	movzbl (%rax),%ecx
  4193d1:	83 f9 39             	cmp    $0x39,%ecx
  4193d4:	7e 09                	jle    4193df <mbedtls_x509_get_time+0x2df>
  4193d6:	c7 45 fc 00 dc ff ff 	movl   $0xffffdc00,-0x4(%rbp)
  4193dd:	eb 3d                	jmp    41941c <mbedtls_x509_get_time+0x31c>
  4193df:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4193e3:	6b 08 0a             	imul   $0xa,(%rax),%ecx
  4193e6:	89 08                	mov    %ecx,(%rax)
  4193e8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4193ec:	48 8b 10             	mov    (%rax),%rdx
  4193ef:	48 89 d6             	mov    %rdx,%rsi
  4193f2:	48 83 c6 01          	add    $0x1,%rsi
  4193f6:	48 89 30             	mov    %rsi,(%rax)
  4193f9:	0f b6 0a             	movzbl (%rdx),%ecx
  4193fc:	83 e9 30             	sub    $0x30,%ecx
  4193ff:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  419403:	03 08                	add    (%rax),%ecx
  419405:	89 08                	mov    %ecx,(%rax)
  419407:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41940b:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
  41940f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  419413:	eb 9c                	jmp    4193b1 <mbedtls_x509_get_time+0x2b1>
  419415:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  41941c:	8b 45 fc             	mov    -0x4(%rbp),%eax
  41941f:	89 85 fc fe ff ff    	mov    %eax,-0x104(%rbp)
  419425:	83 f8 00             	cmp    $0x0,%eax
  419428:	74 11                	je     41943b <mbedtls_x509_get_time+0x33b>
  41942a:	8b 85 fc fe ff ff    	mov    -0x104(%rbp),%eax
  419430:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%rbp)
  419436:	e9 30 06 00 00       	jmpq   419a6b <mbedtls_x509_get_time+0x96b>
  41943b:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  419442:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  419449:	48 83 c1 08          	add    $0x8,%rcx
  41944d:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  419451:	48 c7 45 c8 02 00 00 	movq   $0x2,-0x38(%rbp)
  419458:	00 
  419459:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
  41945d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  419461:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  419467:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  41946c:	76 5d                	jbe    4194cb <mbedtls_x509_get_time+0x3cb>
  41946e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  419472:	48 8b 00             	mov    (%rax),%rax
  419475:	0f b6 08             	movzbl (%rax),%ecx
  419478:	83 f9 30             	cmp    $0x30,%ecx
  41947b:	7c 0f                	jl     41948c <mbedtls_x509_get_time+0x38c>
  41947d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  419481:	48 8b 00             	mov    (%rax),%rax
  419484:	0f b6 08             	movzbl (%rax),%ecx
  419487:	83 f9 39             	cmp    $0x39,%ecx
  41948a:	7e 09                	jle    419495 <mbedtls_x509_get_time+0x395>
  41948c:	c7 45 dc 00 dc ff ff 	movl   $0xffffdc00,-0x24(%rbp)
  419493:	eb 3d                	jmp    4194d2 <mbedtls_x509_get_time+0x3d2>
  419495:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  419499:	6b 08 0a             	imul   $0xa,(%rax),%ecx
  41949c:	89 08                	mov    %ecx,(%rax)
  41949e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4194a2:	48 8b 10             	mov    (%rax),%rdx
  4194a5:	48 89 d6             	mov    %rdx,%rsi
  4194a8:	48 83 c6 01          	add    $0x1,%rsi
  4194ac:	48 89 30             	mov    %rsi,(%rax)
  4194af:	0f b6 0a             	movzbl (%rdx),%ecx
  4194b2:	83 e9 30             	sub    $0x30,%ecx
  4194b5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4194b9:	03 08                	add    (%rax),%ecx
  4194bb:	89 08                	mov    %ecx,(%rax)
  4194bd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4194c1:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
  4194c5:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  4194c9:	eb 9c                	jmp    419467 <mbedtls_x509_get_time+0x367>
  4194cb:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
  4194d2:	8b 45 dc             	mov    -0x24(%rbp),%eax
  4194d5:	89 85 fc fe ff ff    	mov    %eax,-0x104(%rbp)
  4194db:	83 f8 00             	cmp    $0x0,%eax
  4194de:	74 11                	je     4194f1 <mbedtls_x509_get_time+0x3f1>
  4194e0:	8b 85 fc fe ff ff    	mov    -0x104(%rbp),%eax
  4194e6:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%rbp)
  4194ec:	e9 7a 05 00 00       	jmpq   419a6b <mbedtls_x509_get_time+0x96b>
  4194f1:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  4194f8:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  4194ff:	48 83 c1 0c          	add    $0xc,%rcx
  419503:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  419507:	48 c7 45 a8 02 00 00 	movq   $0x2,-0x58(%rbp)
  41950e:	00 
  41950f:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
  419513:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  419517:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  41951d:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
  419522:	76 5d                	jbe    419581 <mbedtls_x509_get_time+0x481>
  419524:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  419528:	48 8b 00             	mov    (%rax),%rax
  41952b:	0f b6 08             	movzbl (%rax),%ecx
  41952e:	83 f9 30             	cmp    $0x30,%ecx
  419531:	7c 0f                	jl     419542 <mbedtls_x509_get_time+0x442>
  419533:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  419537:	48 8b 00             	mov    (%rax),%rax
  41953a:	0f b6 08             	movzbl (%rax),%ecx
  41953d:	83 f9 39             	cmp    $0x39,%ecx
  419540:	7e 09                	jle    41954b <mbedtls_x509_get_time+0x44b>
  419542:	c7 45 bc 00 dc ff ff 	movl   $0xffffdc00,-0x44(%rbp)
  419549:	eb 3d                	jmp    419588 <mbedtls_x509_get_time+0x488>
  41954b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  41954f:	6b 08 0a             	imul   $0xa,(%rax),%ecx
  419552:	89 08                	mov    %ecx,(%rax)
  419554:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  419558:	48 8b 10             	mov    (%rax),%rdx
  41955b:	48 89 d6             	mov    %rdx,%rsi
  41955e:	48 83 c6 01          	add    $0x1,%rsi
  419562:	48 89 30             	mov    %rsi,(%rax)
  419565:	0f b6 0a             	movzbl (%rdx),%ecx
  419568:	83 e9 30             	sub    $0x30,%ecx
  41956b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  41956f:	03 08                	add    (%rax),%ecx
  419571:	89 08                	mov    %ecx,(%rax)
  419573:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  419577:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
  41957b:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  41957f:	eb 9c                	jmp    41951d <mbedtls_x509_get_time+0x41d>
  419581:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%rbp)
  419588:	8b 45 bc             	mov    -0x44(%rbp),%eax
  41958b:	89 85 fc fe ff ff    	mov    %eax,-0x104(%rbp)
  419591:	83 f8 00             	cmp    $0x0,%eax
  419594:	74 11                	je     4195a7 <mbedtls_x509_get_time+0x4a7>
  419596:	8b 85 fc fe ff ff    	mov    -0x104(%rbp),%eax
  41959c:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%rbp)
  4195a2:	e9 c4 04 00 00       	jmpq   419a6b <mbedtls_x509_get_time+0x96b>
  4195a7:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  4195ae:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  4195b5:	48 83 c1 10          	add    $0x10,%rcx
  4195b9:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  4195bd:	48 c7 45 88 02 00 00 	movq   $0x2,-0x78(%rbp)
  4195c4:	00 
  4195c5:	48 89 4d 80          	mov    %rcx,-0x80(%rbp)
  4195c9:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  4195cd:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  4195d3:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
  4195d8:	76 5d                	jbe    419637 <mbedtls_x509_get_time+0x537>
  4195da:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  4195de:	48 8b 00             	mov    (%rax),%rax
  4195e1:	0f b6 08             	movzbl (%rax),%ecx
  4195e4:	83 f9 30             	cmp    $0x30,%ecx
  4195e7:	7c 0f                	jl     4195f8 <mbedtls_x509_get_time+0x4f8>
  4195e9:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  4195ed:	48 8b 00             	mov    (%rax),%rax
  4195f0:	0f b6 08             	movzbl (%rax),%ecx
  4195f3:	83 f9 39             	cmp    $0x39,%ecx
  4195f6:	7e 09                	jle    419601 <mbedtls_x509_get_time+0x501>
  4195f8:	c7 45 9c 00 dc ff ff 	movl   $0xffffdc00,-0x64(%rbp)
  4195ff:	eb 3d                	jmp    41963e <mbedtls_x509_get_time+0x53e>
  419601:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  419605:	6b 08 0a             	imul   $0xa,(%rax),%ecx
  419608:	89 08                	mov    %ecx,(%rax)
  41960a:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  41960e:	48 8b 10             	mov    (%rax),%rdx
  419611:	48 89 d6             	mov    %rdx,%rsi
  419614:	48 83 c6 01          	add    $0x1,%rsi
  419618:	48 89 30             	mov    %rsi,(%rax)
  41961b:	0f b6 0a             	movzbl (%rdx),%ecx
  41961e:	83 e9 30             	sub    $0x30,%ecx
  419621:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  419625:	03 08                	add    (%rax),%ecx
  419627:	89 08                	mov    %ecx,(%rax)
  419629:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  41962d:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
  419631:	48 89 45 88          	mov    %rax,-0x78(%rbp)
  419635:	eb 9c                	jmp    4195d3 <mbedtls_x509_get_time+0x4d3>
  419637:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
  41963e:	8b 45 9c             	mov    -0x64(%rbp),%eax
  419641:	89 85 fc fe ff ff    	mov    %eax,-0x104(%rbp)
  419647:	83 f8 00             	cmp    $0x0,%eax
  41964a:	74 11                	je     41965d <mbedtls_x509_get_time+0x55d>
  41964c:	8b 85 fc fe ff ff    	mov    -0x104(%rbp),%eax
  419652:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%rbp)
  419658:	e9 0e 04 00 00       	jmpq   419a6b <mbedtls_x509_get_time+0x96b>
  41965d:	48 83 bd 10 ff ff ff 	cmpq   $0x2,-0xf0(%rbp)
  419664:	02 
  419665:	0f 82 07 01 00 00    	jb     419772 <mbedtls_x509_get_time+0x672>
  41966b:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  419672:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  419679:	48 83 c1 14          	add    $0x14,%rcx
  41967d:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
  419684:	48 c7 85 68 ff ff ff 	movq   $0x2,-0x98(%rbp)
  41968b:	02 00 00 00 
  41968f:	48 89 8d 60 ff ff ff 	mov    %rcx,-0xa0(%rbp)
  419696:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  41969d:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  4196a3:	48 83 bd 68 ff ff ff 	cmpq   $0x0,-0x98(%rbp)
  4196aa:	00 
  4196ab:	76 75                	jbe    419722 <mbedtls_x509_get_time+0x622>
  4196ad:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  4196b4:	48 8b 00             	mov    (%rax),%rax
  4196b7:	0f b6 08             	movzbl (%rax),%ecx
  4196ba:	83 f9 30             	cmp    $0x30,%ecx
  4196bd:	7c 12                	jl     4196d1 <mbedtls_x509_get_time+0x5d1>
  4196bf:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  4196c6:	48 8b 00             	mov    (%rax),%rax
  4196c9:	0f b6 08             	movzbl (%rax),%ecx
  4196cc:	83 f9 39             	cmp    $0x39,%ecx
  4196cf:	7e 0c                	jle    4196dd <mbedtls_x509_get_time+0x5dd>
  4196d1:	c7 85 7c ff ff ff 00 	movl   $0xffffdc00,-0x84(%rbp)
  4196d8:	dc ff ff 
  4196db:	eb 4f                	jmp    41972c <mbedtls_x509_get_time+0x62c>
  4196dd:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  4196e4:	6b 08 0a             	imul   $0xa,(%rax),%ecx
  4196e7:	89 08                	mov    %ecx,(%rax)
  4196e9:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  4196f0:	48 8b 10             	mov    (%rax),%rdx
  4196f3:	48 89 d6             	mov    %rdx,%rsi
  4196f6:	48 83 c6 01          	add    $0x1,%rsi
  4196fa:	48 89 30             	mov    %rsi,(%rax)
  4196fd:	0f b6 0a             	movzbl (%rdx),%ecx
  419700:	83 e9 30             	sub    $0x30,%ecx
  419703:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  41970a:	03 08                	add    (%rax),%ecx
  41970c:	89 08                	mov    %ecx,(%rax)
  41970e:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  419715:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
  419719:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
  419720:	eb 81                	jmp    4196a3 <mbedtls_x509_get_time+0x5a3>
  419722:	c7 85 7c ff ff ff 00 	movl   $0x0,-0x84(%rbp)
  419729:	00 00 00 
  41972c:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
  419732:	89 85 fc fe ff ff    	mov    %eax,-0x104(%rbp)
  419738:	83 f8 00             	cmp    $0x0,%eax
  41973b:	74 11                	je     41974e <mbedtls_x509_get_time+0x64e>
  41973d:	8b 85 fc fe ff ff    	mov    -0x104(%rbp),%eax
  419743:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%rbp)
  419749:	e9 1d 03 00 00       	jmpq   419a6b <mbedtls_x509_get_time+0x96b>
  41974e:	b8 01 00 00 00       	mov    $0x1,%eax
  419753:	89 c1                	mov    %eax,%ecx
  419755:	48 8b 95 10 ff ff ff 	mov    -0xf0(%rbp),%rdx
  41975c:	48 83 ea 02          	sub    $0x2,%rdx
  419760:	48 89 95 10 ff ff ff 	mov    %rdx,-0xf0(%rbp)
  419767:	48 3b 8d 10 ff ff ff 	cmp    -0xf0(%rbp),%rcx
  41976e:	74 11                	je     419781 <mbedtls_x509_get_time+0x681>
  419770:	eb 48                	jmp    4197ba <mbedtls_x509_get_time+0x6ba>
  419772:	c7 85 24 ff ff ff 00 	movl   $0xffffdc00,-0xdc(%rbp)
  419779:	dc ff ff 
  41977c:	e9 ea 02 00 00       	jmpq   419a6b <mbedtls_x509_get_time+0x96b>
  419781:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  419788:	48 8b 00             	mov    (%rax),%rax
  41978b:	0f b6 08             	movzbl (%rax),%ecx
  41978e:	ba 5a 00 00 00       	mov    $0x5a,%edx
  419793:	39 ca                	cmp    %ecx,%edx
  419795:	75 23                	jne    4197ba <mbedtls_x509_get_time+0x6ba>
  419797:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  41979e:	48 8b 08             	mov    (%rax),%rcx
  4197a1:	48 83 c1 01          	add    $0x1,%rcx
  4197a5:	48 89 08             	mov    %rcx,(%rax)
  4197a8:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
  4197af:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
  4197b3:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
  4197ba:	31 c0                	xor    %eax,%eax
  4197bc:	89 c1                	mov    %eax,%ecx
  4197be:	48 3b 8d 10 ff ff ff 	cmp    -0xf0(%rbp),%rcx
  4197c5:	74 0f                	je     4197d6 <mbedtls_x509_get_time+0x6d6>
  4197c7:	c7 85 24 ff ff ff 00 	movl   $0xffffdc00,-0xdc(%rbp)
  4197ce:	dc ff ff 
  4197d1:	e9 95 02 00 00       	jmpq   419a6b <mbedtls_x509_get_time+0x96b>
  4197d6:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
  4197dd:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
  4197e4:	c7 85 4c ff ff ff 00 	movl   $0xffffdc00,-0xb4(%rbp)
  4197eb:	dc ff ff 
  4197ee:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
  4197f5:	83 38 00             	cmpl   $0x0,(%rax)
  4197f8:	7c 0f                	jl     419809 <mbedtls_x509_get_time+0x709>
  4197fa:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
  419801:	81 38 0f 27 00 00    	cmpl   $0x270f,(%rax)
  419807:	7e 11                	jle    41981a <mbedtls_x509_get_time+0x71a>
  419809:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
  41980f:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%rbp)
  419815:	e9 28 02 00 00       	jmpq   419a42 <mbedtls_x509_get_time+0x942>
  41981a:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
  419821:	83 78 0c 00          	cmpl   $0x0,0xc(%rax)
  419825:	7c 0d                	jl     419834 <mbedtls_x509_get_time+0x734>
  419827:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
  41982e:	83 78 0c 17          	cmpl   $0x17,0xc(%rax)
  419832:	7e 11                	jle    419845 <mbedtls_x509_get_time+0x745>
  419834:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
  41983a:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%rbp)
  419840:	e9 fd 01 00 00       	jmpq   419a42 <mbedtls_x509_get_time+0x942>
  419845:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
  41984c:	83 78 10 00          	cmpl   $0x0,0x10(%rax)
  419850:	7c 0d                	jl     41985f <mbedtls_x509_get_time+0x75f>
  419852:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
  419859:	83 78 10 3b          	cmpl   $0x3b,0x10(%rax)
  41985d:	7e 11                	jle    419870 <mbedtls_x509_get_time+0x770>
  41985f:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
  419865:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%rbp)
  41986b:	e9 d2 01 00 00       	jmpq   419a42 <mbedtls_x509_get_time+0x942>
  419870:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
  419877:	83 78 14 00          	cmpl   $0x0,0x14(%rax)
  41987b:	7c 0d                	jl     41988a <mbedtls_x509_get_time+0x78a>
  41987d:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
  419884:	83 78 14 3b          	cmpl   $0x3b,0x14(%rax)
  419888:	7e 11                	jle    41989b <mbedtls_x509_get_time+0x79b>
  41988a:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
  419890:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%rbp)
  419896:	e9 a7 01 00 00       	jmpq   419a42 <mbedtls_x509_get_time+0x942>
  41989b:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
  4198a2:	8b 48 04             	mov    0x4(%rax),%ecx
  4198a5:	89 ca                	mov    %ecx,%edx
  4198a7:	83 ea 01             	sub    $0x1,%edx
  4198aa:	89 8d c0 fe ff ff    	mov    %ecx,-0x140(%rbp)
  4198b0:	89 95 bc fe ff ff    	mov    %edx,-0x144(%rbp)
  4198b6:	0f 84 cf 00 00 00    	je     41998b <mbedtls_x509_get_time+0x88b>
  4198bc:	eb 00                	jmp    4198be <mbedtls_x509_get_time+0x7be>
  4198be:	8b 85 c0 fe ff ff    	mov    -0x140(%rbp),%eax
  4198c4:	83 e8 02             	sub    $0x2,%eax
  4198c7:	89 85 b8 fe ff ff    	mov    %eax,-0x148(%rbp)
  4198cd:	0f 84 d0 00 00 00    	je     4199a3 <mbedtls_x509_get_time+0x8a3>
  4198d3:	eb 00                	jmp    4198d5 <mbedtls_x509_get_time+0x7d5>
  4198d5:	8b 85 c0 fe ff ff    	mov    -0x140(%rbp),%eax
  4198db:	83 e8 03             	sub    $0x3,%eax
  4198de:	89 85 b4 fe ff ff    	mov    %eax,-0x14c(%rbp)
  4198e4:	0f 84 a1 00 00 00    	je     41998b <mbedtls_x509_get_time+0x88b>
  4198ea:	eb 00                	jmp    4198ec <mbedtls_x509_get_time+0x7ec>
  4198ec:	8b 85 c0 fe ff ff    	mov    -0x140(%rbp),%eax
  4198f2:	83 e8 04             	sub    $0x4,%eax
  4198f5:	89 85 b0 fe ff ff    	mov    %eax,-0x150(%rbp)
  4198fb:	0f 84 96 00 00 00    	je     419997 <mbedtls_x509_get_time+0x897>
  419901:	eb 00                	jmp    419903 <mbedtls_x509_get_time+0x803>
  419903:	8b 85 c0 fe ff ff    	mov    -0x140(%rbp),%eax
  419909:	83 e8 05             	sub    $0x5,%eax
  41990c:	89 85 ac fe ff ff    	mov    %eax,-0x154(%rbp)
  419912:	74 77                	je     41998b <mbedtls_x509_get_time+0x88b>
  419914:	eb 00                	jmp    419916 <mbedtls_x509_get_time+0x816>
  419916:	8b 85 c0 fe ff ff    	mov    -0x140(%rbp),%eax
  41991c:	83 e8 06             	sub    $0x6,%eax
  41991f:	89 85 a8 fe ff ff    	mov    %eax,-0x158(%rbp)
  419925:	74 70                	je     419997 <mbedtls_x509_get_time+0x897>
  419927:	eb 00                	jmp    419929 <mbedtls_x509_get_time+0x829>
  419929:	8b 85 c0 fe ff ff    	mov    -0x140(%rbp),%eax
  41992f:	83 c0 f9             	add    $0xfffffff9,%eax
  419932:	83 e8 02             	sub    $0x2,%eax
  419935:	89 85 a4 fe ff ff    	mov    %eax,-0x15c(%rbp)
  41993b:	72 4e                	jb     41998b <mbedtls_x509_get_time+0x88b>
  41993d:	eb 00                	jmp    41993f <mbedtls_x509_get_time+0x83f>
  41993f:	8b 85 c0 fe ff ff    	mov    -0x140(%rbp),%eax
  419945:	83 e8 09             	sub    $0x9,%eax
  419948:	89 85 a0 fe ff ff    	mov    %eax,-0x160(%rbp)
  41994e:	74 47                	je     419997 <mbedtls_x509_get_time+0x897>
  419950:	eb 00                	jmp    419952 <mbedtls_x509_get_time+0x852>
  419952:	8b 85 c0 fe ff ff    	mov    -0x140(%rbp),%eax
  419958:	83 e8 0a             	sub    $0xa,%eax
  41995b:	89 85 9c fe ff ff    	mov    %eax,-0x164(%rbp)
  419961:	74 28                	je     41998b <mbedtls_x509_get_time+0x88b>
  419963:	eb 00                	jmp    419965 <mbedtls_x509_get_time+0x865>
  419965:	8b 85 c0 fe ff ff    	mov    -0x140(%rbp),%eax
  41996b:	83 e8 0b             	sub    $0xb,%eax
  41996e:	89 85 98 fe ff ff    	mov    %eax,-0x168(%rbp)
  419974:	74 21                	je     419997 <mbedtls_x509_get_time+0x897>
  419976:	eb 00                	jmp    419978 <mbedtls_x509_get_time+0x878>
  419978:	8b 85 c0 fe ff ff    	mov    -0x140(%rbp),%eax
  41997e:	83 e8 0c             	sub    $0xc,%eax
  419981:	89 85 94 fe ff ff    	mov    %eax,-0x16c(%rbp)
  419987:	75 74                	jne    4199fd <mbedtls_x509_get_time+0x8fd>
  419989:	eb 00                	jmp    41998b <mbedtls_x509_get_time+0x88b>
  41998b:	c7 85 48 ff ff ff 1f 	movl   $0x1f,-0xb8(%rbp)
  419992:	00 00 00 
  419995:	eb 74                	jmp    419a0b <mbedtls_x509_get_time+0x90b>
  419997:	c7 85 48 ff ff ff 1e 	movl   $0x1e,-0xb8(%rbp)
  41999e:	00 00 00 
  4199a1:	eb 68                	jmp    419a0b <mbedtls_x509_get_time+0x90b>
  4199a3:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
  4199aa:	8b 00                	mov    (%rax),%eax
  4199ac:	99                   	cltd   
  4199ad:	b9 04 00 00 00       	mov    $0x4,%ecx
  4199b2:	f7 f9                	idiv   %ecx
  4199b4:	83 fa 00             	cmp    $0x0,%edx
  4199b7:	75 16                	jne    4199cf <mbedtls_x509_get_time+0x8cf>
  4199b9:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
  4199c0:	8b 00                	mov    (%rax),%eax
  4199c2:	99                   	cltd   
  4199c3:	b9 64 00 00 00       	mov    $0x64,%ecx
  4199c8:	f7 f9                	idiv   %ecx
  4199ca:	83 fa 00             	cmp    $0x0,%edx
  4199cd:	75 16                	jne    4199e5 <mbedtls_x509_get_time+0x8e5>
  4199cf:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
  4199d6:	8b 00                	mov    (%rax),%eax
  4199d8:	99                   	cltd   
  4199d9:	b9 90 01 00 00       	mov    $0x190,%ecx
  4199de:	f7 f9                	idiv   %ecx
  4199e0:	83 fa 00             	cmp    $0x0,%edx
  4199e3:	75 0c                	jne    4199f1 <mbedtls_x509_get_time+0x8f1>
  4199e5:	c7 85 48 ff ff ff 1d 	movl   $0x1d,-0xb8(%rbp)
  4199ec:	00 00 00 
  4199ef:	eb 0a                	jmp    4199fb <mbedtls_x509_get_time+0x8fb>
  4199f1:	c7 85 48 ff ff ff 1c 	movl   $0x1c,-0xb8(%rbp)
  4199f8:	00 00 00 
  4199fb:	eb 0e                	jmp    419a0b <mbedtls_x509_get_time+0x90b>
  4199fd:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
  419a03:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%rbp)
  419a09:	eb 37                	jmp    419a42 <mbedtls_x509_get_time+0x942>
  419a0b:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
  419a12:	83 78 08 01          	cmpl   $0x1,0x8(%rax)
  419a16:	7c 12                	jl     419a2a <mbedtls_x509_get_time+0x92a>
  419a18:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
  419a1f:	8b 48 08             	mov    0x8(%rax),%ecx
  419a22:	3b 8d 48 ff ff ff    	cmp    -0xb8(%rbp),%ecx
  419a28:	7e 0e                	jle    419a38 <mbedtls_x509_get_time+0x938>
  419a2a:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
  419a30:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%rbp)
  419a36:	eb 0a                	jmp    419a42 <mbedtls_x509_get_time+0x942>
  419a38:	c7 85 5c ff ff ff 00 	movl   $0x0,-0xa4(%rbp)
  419a3f:	00 00 00 
  419a42:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
  419a48:	89 85 fc fe ff ff    	mov    %eax,-0x104(%rbp)
  419a4e:	83 f8 00             	cmp    $0x0,%eax
  419a51:	74 0e                	je     419a61 <mbedtls_x509_get_time+0x961>
  419a53:	8b 85 fc fe ff ff    	mov    -0x104(%rbp),%eax
  419a59:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%rbp)
  419a5f:	eb 0a                	jmp    419a6b <mbedtls_x509_get_time+0x96b>
  419a61:	c7 85 24 ff ff ff 00 	movl   $0x0,-0xdc(%rbp)
  419a68:	00 00 00 
  419a6b:	8b 85 24 ff ff ff    	mov    -0xdc(%rbp),%eax
  419a71:	89 85 f8 fe ff ff    	mov    %eax,-0x108(%rbp)
  419a77:	8b 85 f8 fe ff ff    	mov    -0x108(%rbp),%eax
  419a7d:	89 85 90 fe ff ff    	mov    %eax,-0x170(%rbp)
  419a83:	e8 ce be 02 00       	callq  445956 <writeback_cache>
  419a88:	8b 85 90 fe ff ff    	mov    -0x170(%rbp),%eax
  419a8e:	48 81 c4 70 01 00 00 	add    $0x170,%rsp
  419a95:	5d                   	pop    %rbp
  419a96:	c3                   	retq   
  419a97:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  419a9e:	00 00 

0000000000419aa0 <mbedtls_x509_dn_gets>:
  419aa0:	55                   	push   %rbp
  419aa1:	48 89 e5             	mov    %rsp,%rbp
  419aa4:	48 81 ec 60 01 00 00 	sub    $0x160,%rsp
  419aab:	31 c0                	xor    %eax,%eax
  419aad:	b9 00 01 00 00       	mov    $0x100,%ecx
  419ab2:	41 89 c8             	mov    %ecx,%r8d
  419ab5:	4c 8d 8d b0 fe ff ff 	lea    -0x150(%rbp),%r9
  419abc:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  419ac0:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  419ac4:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
  419ac8:	c6 45 c6 00          	movb   $0x0,-0x3a(%rbp)
  419acc:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
  419ad3:	00 
  419ad4:	4c 89 cf             	mov    %r9,%rdi
  419ad7:	89 c6                	mov    %eax,%esi
  419ad9:	4c 89 c2             	mov    %r8,%rdx
  419adc:	e8 3f 75 fe ff       	callq  401020 <memset@plt>
  419ae1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  419ae5:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
  419ae9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  419aed:	48 89 95 a8 fe ff ff 	mov    %rdx,-0x158(%rbp)
  419af4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  419af8:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  419afc:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
  419b01:	0f 84 41 02 00 00    	je     419d48 <mbedtls_x509_dn_gets+0x2a8>
  419b07:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  419b0b:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
  419b10:	75 0e                	jne    419b20 <mbedtls_x509_dn_gets+0x80>
  419b12:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  419b16:	48 8b 40 30          	mov    0x30(%rax),%rax
  419b1a:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  419b1e:	eb dc                	jmp    419afc <mbedtls_x509_dn_gets+0x5c>
  419b20:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  419b24:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
  419b28:	74 76                	je     419ba0 <mbedtls_x509_dn_gets+0x100>
  419b2a:	48 b8 90 76 44 00 00 	movabs $0x447690,%rax
  419b31:	00 00 00 
  419b34:	48 b9 e0 7c 44 00 00 	movabs $0x447ce0,%rcx
  419b3b:	00 00 00 
  419b3e:	48 8b bd a8 fe ff ff 	mov    -0x158(%rbp),%rdi
  419b45:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  419b49:	0f b6 55 c6          	movzbl -0x3a(%rbp),%edx
  419b4d:	83 fa 00             	cmp    $0x0,%edx
  419b50:	48 0f 45 c1          	cmovne %rcx,%rax
  419b54:	48 89 c2             	mov    %rax,%rdx
  419b57:	b0 00                	mov    $0x0,%al
  419b59:	e8 a2 76 fe ff       	callq  401200 <snprintf@plt>
  419b5e:	89 45 dc             	mov    %eax,-0x24(%rbp)
  419b61:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
  419b65:	7c 0a                	jl     419b71 <mbedtls_x509_dn_gets+0xd1>
  419b67:	48 63 45 dc          	movslq -0x24(%rbp),%rax
  419b6b:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
  419b6f:	72 0c                	jb     419b7d <mbedtls_x509_dn_gets+0xdd>
  419b71:	c7 45 fc 80 d6 ff ff 	movl   $0xffffd680,-0x4(%rbp)
  419b78:	e9 d8 01 00 00       	jmpq   419d55 <mbedtls_x509_dn_gets+0x2b5>
  419b7d:	48 63 45 dc          	movslq -0x24(%rbp),%rax
  419b81:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  419b85:	48 29 c1             	sub    %rax,%rcx
  419b88:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
  419b8c:	48 63 45 dc          	movslq -0x24(%rbp),%rax
  419b90:	48 03 85 a8 fe ff ff 	add    -0x158(%rbp),%rax
  419b97:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
  419b9e:	eb 00                	jmp    419ba0 <mbedtls_x509_dn_gets+0x100>
  419ba0:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
  419ba4:	48 8d 75 b0          	lea    -0x50(%rbp),%rsi
  419ba8:	e8 73 3a 01 00       	callq  42d620 <mbedtls_oid_get_attr_short_name>
  419bad:	89 45 dc             	mov    %eax,-0x24(%rbp)
  419bb0:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
  419bb4:	75 25                	jne    419bdb <mbedtls_x509_dn_gets+0x13b>
  419bb6:	48 ba f0 7c 44 00 00 	movabs $0x447cf0,%rdx
  419bbd:	00 00 00 
  419bc0:	48 8b bd a8 fe ff ff 	mov    -0x158(%rbp),%rdi
  419bc7:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  419bcb:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  419bcf:	b0 00                	mov    $0x0,%al
  419bd1:	e8 2a 76 fe ff       	callq  401200 <snprintf@plt>
  419bd6:	89 45 dc             	mov    %eax,-0x24(%rbp)
  419bd9:	eb 1f                	jmp    419bfa <mbedtls_x509_dn_gets+0x15a>
  419bdb:	48 ba 00 7d 44 00 00 	movabs $0x447d00,%rdx
  419be2:	00 00 00 
  419be5:	48 8b bd a8 fe ff ff 	mov    -0x158(%rbp),%rdi
  419bec:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  419bf0:	b0 00                	mov    $0x0,%al
  419bf2:	e8 09 76 fe ff       	callq  401200 <snprintf@plt>
  419bf7:	89 45 dc             	mov    %eax,-0x24(%rbp)
  419bfa:	eb 00                	jmp    419bfc <mbedtls_x509_dn_gets+0x15c>
  419bfc:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
  419c00:	7c 0a                	jl     419c0c <mbedtls_x509_dn_gets+0x16c>
  419c02:	48 63 45 dc          	movslq -0x24(%rbp),%rax
  419c06:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
  419c0a:	72 0c                	jb     419c18 <mbedtls_x509_dn_gets+0x178>
  419c0c:	c7 45 fc 80 d6 ff ff 	movl   $0xffffd680,-0x4(%rbp)
  419c13:	e9 3d 01 00 00       	jmpq   419d55 <mbedtls_x509_dn_gets+0x2b5>
  419c18:	48 63 45 dc          	movslq -0x24(%rbp),%rax
  419c1c:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  419c20:	48 29 c1             	sub    %rax,%rcx
  419c23:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
  419c27:	48 63 45 dc          	movslq -0x24(%rbp),%rax
  419c2b:	48 03 85 a8 fe ff ff 	add    -0x158(%rbp),%rax
  419c32:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
  419c39:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
  419c40:	00 
  419c41:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  419c45:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  419c49:	48 3b 41 20          	cmp    0x20(%rcx),%rax
  419c4d:	73 72                	jae    419cc1 <mbedtls_x509_dn_gets+0x221>
  419c4f:	48 81 7d d0 ff 00 00 	cmpq   $0xff,-0x30(%rbp)
  419c56:	00 
  419c57:	72 02                	jb     419c5b <mbedtls_x509_dn_gets+0x1bb>
  419c59:	eb 66                	jmp    419cc1 <mbedtls_x509_dn_gets+0x221>
  419c5b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  419c5f:	48 8b 40 28          	mov    0x28(%rax),%rax
  419c63:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  419c67:	8a 14 08             	mov    (%rax,%rcx,1),%dl
  419c6a:	88 55 c7             	mov    %dl,-0x39(%rbp)
  419c6d:	0f b6 75 c7          	movzbl -0x39(%rbp),%esi
  419c71:	83 fe 20             	cmp    $0x20,%esi
  419c74:	7c 1f                	jl     419c95 <mbedtls_x509_dn_gets+0x1f5>
  419c76:	0f b6 45 c7          	movzbl -0x39(%rbp),%eax
  419c7a:	83 f8 7f             	cmp    $0x7f,%eax
  419c7d:	74 16                	je     419c95 <mbedtls_x509_dn_gets+0x1f5>
  419c7f:	0f b6 45 c7          	movzbl -0x39(%rbp),%eax
  419c83:	3d 80 00 00 00       	cmp    $0x80,%eax
  419c88:	7e 19                	jle    419ca3 <mbedtls_x509_dn_gets+0x203>
  419c8a:	0f b6 45 c7          	movzbl -0x39(%rbp),%eax
  419c8e:	3d a0 00 00 00       	cmp    $0xa0,%eax
  419c93:	7d 0e                	jge    419ca3 <mbedtls_x509_dn_gets+0x203>
  419c95:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  419c99:	c6 84 05 b0 fe ff ff 	movb   $0x3f,-0x150(%rbp,%rax,1)
  419ca0:	3f 
  419ca1:	eb 0e                	jmp    419cb1 <mbedtls_x509_dn_gets+0x211>
  419ca3:	8a 45 c7             	mov    -0x39(%rbp),%al
  419ca6:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  419caa:	88 84 0d b0 fe ff ff 	mov    %al,-0x150(%rbp,%rcx,1)
  419cb1:	eb 00                	jmp    419cb3 <mbedtls_x509_dn_gets+0x213>
  419cb3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  419cb7:	48 83 c0 01          	add    $0x1,%rax
  419cbb:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  419cbf:	eb 80                	jmp    419c41 <mbedtls_x509_dn_gets+0x1a1>
  419cc1:	48 ba 10 7d 44 00 00 	movabs $0x447d10,%rdx
  419cc8:	00 00 00 
  419ccb:	48 8d 8d b0 fe ff ff 	lea    -0x150(%rbp),%rcx
  419cd2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  419cd6:	c6 84 05 b0 fe ff ff 	movb   $0x0,-0x150(%rbp,%rax,1)
  419cdd:	00 
  419cde:	48 8b bd a8 fe ff ff 	mov    -0x158(%rbp),%rdi
  419ce5:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  419ce9:	b0 00                	mov    $0x0,%al
  419ceb:	e8 10 75 fe ff       	callq  401200 <snprintf@plt>
  419cf0:	89 45 dc             	mov    %eax,-0x24(%rbp)
  419cf3:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
  419cf7:	7c 0a                	jl     419d03 <mbedtls_x509_dn_gets+0x263>
  419cf9:	48 63 45 dc          	movslq -0x24(%rbp),%rax
  419cfd:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
  419d01:	72 09                	jb     419d0c <mbedtls_x509_dn_gets+0x26c>
  419d03:	c7 45 fc 80 d6 ff ff 	movl   $0xffffd680,-0x4(%rbp)
  419d0a:	eb 49                	jmp    419d55 <mbedtls_x509_dn_gets+0x2b5>
  419d0c:	48 63 45 dc          	movslq -0x24(%rbp),%rax
  419d10:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  419d14:	48 29 c1             	sub    %rax,%rcx
  419d17:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
  419d1b:	48 63 45 dc          	movslq -0x24(%rbp),%rax
  419d1f:	48 03 85 a8 fe ff ff 	add    -0x158(%rbp),%rax
  419d26:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
  419d2d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  419d31:	8a 48 38             	mov    0x38(%rax),%cl
  419d34:	88 4d c6             	mov    %cl,-0x3a(%rbp)
  419d37:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  419d3b:	48 8b 40 30          	mov    0x30(%rax),%rax
  419d3f:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  419d43:	e9 b4 fd ff ff       	jmpq   419afc <mbedtls_x509_dn_gets+0x5c>
  419d48:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  419d4c:	48 2b 45 c8          	sub    -0x38(%rbp),%rax
  419d50:	89 c1                	mov    %eax,%ecx
  419d52:	89 4d fc             	mov    %ecx,-0x4(%rbp)
  419d55:	8b 45 fc             	mov    -0x4(%rbp),%eax
  419d58:	89 85 a4 fe ff ff    	mov    %eax,-0x15c(%rbp)
  419d5e:	e8 f3 bb 02 00       	callq  445956 <writeback_cache>
  419d63:	8b 85 a4 fe ff ff    	mov    -0x15c(%rbp),%eax
  419d69:	48 81 c4 60 01 00 00 	add    $0x160,%rsp
  419d70:	5d                   	pop    %rbp
  419d71:	c3                   	retq   
  419d72:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  419d79:	1f 84 00 00 00 00 00 

0000000000419d80 <mbedtls_x509_serial_gets>:
  419d80:	55                   	push   %rbp
  419d81:	48 89 e5             	mov    %rsp,%rbp
  419d84:	48 83 ec 60          	sub    $0x60,%rsp
  419d88:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  419d8c:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  419d90:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
  419d94:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  419d98:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
  419d9c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  419da0:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  419da4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  419da8:	48 83 7a 08 20       	cmpq   $0x20,0x8(%rdx)
  419dad:	77 0e                	ja     419dbd <mbedtls_x509_serial_gets+0x3d>
  419daf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  419db3:	48 8b 40 08          	mov    0x8(%rax),%rax
  419db7:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  419dbb:	eb 0d                	jmp    419dca <mbedtls_x509_serial_gets+0x4a>
  419dbd:	b8 1c 00 00 00       	mov    $0x1c,%eax
  419dc2:	89 c1                	mov    %eax,%ecx
  419dc4:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
  419dc8:	eb 00                	jmp    419dca <mbedtls_x509_serial_gets+0x4a>
  419dca:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  419dce:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  419dd2:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
  419dd9:	00 
  419dda:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  419dde:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
  419de2:	0f 83 cc 00 00 00    	jae    419eb4 <mbedtls_x509_serial_gets+0x134>
  419de8:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  419ded:	75 21                	jne    419e10 <mbedtls_x509_serial_gets+0x90>
  419def:	48 83 7d c0 01       	cmpq   $0x1,-0x40(%rbp)
  419df4:	76 1a                	jbe    419e10 <mbedtls_x509_serial_gets+0x90>
  419df6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  419dfa:	48 8b 40 10          	mov    0x10(%rax),%rax
  419dfe:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  419e02:	0f b6 14 08          	movzbl (%rax,%rcx,1),%edx
  419e06:	83 fa 00             	cmp    $0x0,%edx
  419e09:	75 05                	jne    419e10 <mbedtls_x509_serial_gets+0x90>
  419e0b:	e9 93 00 00 00       	jmpq   419ea3 <mbedtls_x509_serial_gets+0x123>
  419e10:	48 ba 30 7d 44 00 00 	movabs $0x447d30,%rdx
  419e17:	00 00 00 
  419e1a:	48 b8 d0 6d 44 00 00 	movabs $0x446dd0,%rax
  419e21:	00 00 00 
  419e24:	48 b9 20 7d 44 00 00 	movabs $0x447d20,%rcx
  419e2b:	00 00 00 
  419e2e:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
  419e32:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  419e36:	4c 8b 45 e0          	mov    -0x20(%rbp),%r8
  419e3a:	4d 8b 40 10          	mov    0x10(%r8),%r8
  419e3e:	4c 8b 4d d0          	mov    -0x30(%rbp),%r9
  419e42:	47 0f b6 14 08       	movzbl (%r8,%r9,1),%r10d
  419e47:	4c 8b 45 d0          	mov    -0x30(%rbp),%r8
  419e4b:	4c 8b 4d c0          	mov    -0x40(%rbp),%r9
  419e4f:	49 83 e9 01          	sub    $0x1,%r9
  419e53:	4d 39 c8             	cmp    %r9,%r8
  419e56:	48 0f 42 c1          	cmovb  %rcx,%rax
  419e5a:	44 89 d1             	mov    %r10d,%ecx
  419e5d:	49 89 c0             	mov    %rax,%r8
  419e60:	b0 00                	mov    $0x0,%al
  419e62:	e8 99 73 fe ff       	callq  401200 <snprintf@plt>
  419e67:	89 45 dc             	mov    %eax,-0x24(%rbp)
  419e6a:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
  419e6e:	7c 0a                	jl     419e7a <mbedtls_x509_serial_gets+0xfa>
  419e70:	48 63 45 dc          	movslq -0x24(%rbp),%rax
  419e74:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
  419e78:	72 0c                	jb     419e86 <mbedtls_x509_serial_gets+0x106>
  419e7a:	c7 45 fc 80 d6 ff ff 	movl   $0xffffd680,-0x4(%rbp)
  419e81:	e9 9b 00 00 00       	jmpq   419f21 <mbedtls_x509_serial_gets+0x1a1>
  419e86:	48 63 45 dc          	movslq -0x24(%rbp),%rax
  419e8a:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  419e8e:	48 29 c1             	sub    %rax,%rcx
  419e91:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
  419e95:	48 63 45 dc          	movslq -0x24(%rbp),%rax
  419e99:	48 03 45 b8          	add    -0x48(%rbp),%rax
  419e9d:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  419ea1:	eb 00                	jmp    419ea3 <mbedtls_x509_serial_gets+0x123>
  419ea3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  419ea7:	48 83 c0 01          	add    $0x1,%rax
  419eab:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  419eaf:	e9 26 ff ff ff       	jmpq   419dda <mbedtls_x509_serial_gets+0x5a>
  419eb4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  419eb8:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  419ebc:	48 3b 41 08          	cmp    0x8(%rcx),%rax
  419ec0:	74 52                	je     419f14 <mbedtls_x509_serial_gets+0x194>
  419ec2:	48 ba 40 7d 44 00 00 	movabs $0x447d40,%rdx
  419ec9:	00 00 00 
  419ecc:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
  419ed0:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  419ed4:	b0 00                	mov    $0x0,%al
  419ed6:	e8 25 73 fe ff       	callq  401200 <snprintf@plt>
  419edb:	89 45 dc             	mov    %eax,-0x24(%rbp)
  419ede:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
  419ee2:	7c 0a                	jl     419eee <mbedtls_x509_serial_gets+0x16e>
  419ee4:	48 63 45 dc          	movslq -0x24(%rbp),%rax
  419ee8:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
  419eec:	72 09                	jb     419ef7 <mbedtls_x509_serial_gets+0x177>
  419eee:	c7 45 fc 80 d6 ff ff 	movl   $0xffffd680,-0x4(%rbp)
  419ef5:	eb 2a                	jmp    419f21 <mbedtls_x509_serial_gets+0x1a1>
  419ef7:	48 63 45 dc          	movslq -0x24(%rbp),%rax
  419efb:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  419eff:	48 29 c1             	sub    %rax,%rcx
  419f02:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
  419f06:	48 63 45 dc          	movslq -0x24(%rbp),%rax
  419f0a:	48 03 45 b8          	add    -0x48(%rbp),%rax
  419f0e:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  419f12:	eb 00                	jmp    419f14 <mbedtls_x509_serial_gets+0x194>
  419f14:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  419f18:	48 2b 45 c8          	sub    -0x38(%rbp),%rax
  419f1c:	89 c1                	mov    %eax,%ecx
  419f1e:	89 4d fc             	mov    %ecx,-0x4(%rbp)
  419f21:	8b 45 fc             	mov    -0x4(%rbp),%eax
  419f24:	89 45 ac             	mov    %eax,-0x54(%rbp)
  419f27:	e8 2a ba 02 00       	callq  445956 <writeback_cache>
  419f2c:	8b 45 ac             	mov    -0x54(%rbp),%eax
  419f2f:	48 83 c4 60          	add    $0x60,%rsp
  419f33:	5d                   	pop    %rbp
  419f34:	c3                   	retq   
  419f35:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  419f3c:	00 00 00 00 

0000000000419f40 <mbedtls_x509_sig_alg_gets>:
  419f40:	55                   	push   %rbp
  419f41:	48 89 e5             	mov    %rsp,%rbp
  419f44:	48 83 ec 60          	sub    $0x60,%rsp
  419f48:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  419f4c:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  419f50:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
  419f54:	89 4d dc             	mov    %ecx,-0x24(%rbp)
  419f57:	44 89 45 d8          	mov    %r8d,-0x28(%rbp)
  419f5b:	4c 89 4d d0          	mov    %r9,-0x30(%rbp)
  419f5f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  419f63:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
  419f67:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  419f6b:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
  419f6f:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
  419f76:	00 
  419f77:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  419f7b:	48 8d 75 b0          	lea    -0x50(%rbp),%rsi
  419f7f:	e8 dc 38 01 00       	callq  42d860 <mbedtls_oid_get_sig_alg_desc>
  419f84:	89 45 cc             	mov    %eax,-0x34(%rbp)
  419f87:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
  419f8b:	74 1e                	je     419fab <mbedtls_x509_sig_alg_gets+0x6b>
  419f8d:	48 ba 70 76 44 00 00 	movabs $0x447670,%rdx
  419f94:	00 00 00 
  419f97:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  419f9b:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  419f9f:	b0 00                	mov    $0x0,%al
  419fa1:	e8 5a 72 fe ff       	callq  401200 <snprintf@plt>
  419fa6:	89 45 cc             	mov    %eax,-0x34(%rbp)
  419fa9:	eb 20                	jmp    419fcb <mbedtls_x509_sig_alg_gets+0x8b>
  419fab:	48 ba 10 7d 44 00 00 	movabs $0x447d10,%rdx
  419fb2:	00 00 00 
  419fb5:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  419fb9:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  419fbd:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  419fc1:	b0 00                	mov    $0x0,%al
  419fc3:	e8 38 72 fe ff       	callq  401200 <snprintf@plt>
  419fc8:	89 45 cc             	mov    %eax,-0x34(%rbp)
  419fcb:	eb 00                	jmp    419fcd <mbedtls_x509_sig_alg_gets+0x8d>
  419fcd:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
  419fd1:	7c 0a                	jl     419fdd <mbedtls_x509_sig_alg_gets+0x9d>
  419fd3:	48 63 45 cc          	movslq -0x34(%rbp),%rax
  419fd7:	48 3b 45 b8          	cmp    -0x48(%rbp),%rax
  419fdb:	72 09                	jb     419fe6 <mbedtls_x509_sig_alg_gets+0xa6>
  419fdd:	c7 45 fc 80 d6 ff ff 	movl   $0xffffd680,-0x4(%rbp)
  419fe4:	eb 28                	jmp    41a00e <mbedtls_x509_sig_alg_gets+0xce>
  419fe6:	48 63 45 cc          	movslq -0x34(%rbp),%rax
  419fea:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  419fee:	48 29 c1             	sub    %rax,%rcx
  419ff1:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
  419ff5:	48 63 45 cc          	movslq -0x34(%rbp),%rax
  419ff9:	48 03 45 c0          	add    -0x40(%rbp),%rax
  419ffd:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  41a001:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41a005:	48 2b 45 b8          	sub    -0x48(%rbp),%rax
  41a009:	89 c1                	mov    %eax,%ecx
  41a00b:	89 4d fc             	mov    %ecx,-0x4(%rbp)
  41a00e:	8b 45 fc             	mov    -0x4(%rbp),%eax
  41a011:	89 45 ac             	mov    %eax,-0x54(%rbp)
  41a014:	e8 3d b9 02 00       	callq  445956 <writeback_cache>
  41a019:	8b 45 ac             	mov    -0x54(%rbp),%eax
  41a01c:	48 83 c4 60          	add    $0x60,%rsp
  41a020:	5d                   	pop    %rbp
  41a021:	c3                   	retq   
  41a022:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  41a029:	1f 84 00 00 00 00 00 

000000000041a030 <mbedtls_x509_key_size_helper>:
  41a030:	55                   	push   %rbp
  41a031:	48 89 e5             	mov    %rsp,%rbp
  41a034:	48 83 ec 40          	sub    $0x40,%rsp
  41a038:	48 b8 50 7d 44 00 00 	movabs $0x447d50,%rax
  41a03f:	00 00 00 
  41a042:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  41a046:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  41a04a:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
  41a04e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  41a052:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  41a056:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  41a05a:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
  41a05e:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  41a062:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  41a066:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  41a06a:	48 89 c2             	mov    %rax,%rdx
  41a06d:	b0 00                	mov    $0x0,%al
  41a06f:	e8 8c 71 fe ff       	callq  401200 <snprintf@plt>
  41a074:	89 45 cc             	mov    %eax,-0x34(%rbp)
  41a077:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
  41a07b:	7c 0a                	jl     41a087 <mbedtls_x509_key_size_helper+0x57>
  41a07d:	48 63 45 cc          	movslq -0x34(%rbp),%rax
  41a081:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
  41a085:	72 09                	jb     41a090 <mbedtls_x509_key_size_helper+0x60>
  41a087:	c7 45 fc 80 d6 ff ff 	movl   $0xffffd680,-0x4(%rbp)
  41a08e:	eb 22                	jmp    41a0b2 <mbedtls_x509_key_size_helper+0x82>
  41a090:	48 63 45 cc          	movslq -0x34(%rbp),%rax
  41a094:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  41a098:	48 29 c1             	sub    %rax,%rcx
  41a09b:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  41a09f:	48 63 45 cc          	movslq -0x34(%rbp),%rax
  41a0a3:	48 03 45 d8          	add    -0x28(%rbp),%rax
  41a0a7:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41a0ab:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  41a0b2:	8b 45 fc             	mov    -0x4(%rbp),%eax
  41a0b5:	89 45 c8             	mov    %eax,-0x38(%rbp)
  41a0b8:	e8 99 b8 02 00       	callq  445956 <writeback_cache>
  41a0bd:	8b 45 c8             	mov    -0x38(%rbp),%eax
  41a0c0:	48 83 c4 40          	add    $0x40,%rsp
  41a0c4:	5d                   	pop    %rbp
  41a0c5:	c3                   	retq   
  41a0c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41a0cd:	00 00 00 

000000000041a0d0 <mbedtls_asn1_get_len>:
  41a0d0:	55                   	push   %rbp
  41a0d1:	48 89 e5             	mov    %rsp,%rbp
  41a0d4:	48 83 ec 30          	sub    $0x30,%rsp
  41a0d8:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  41a0dc:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  41a0e0:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
  41a0e4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  41a0e8:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  41a0ec:	48 8b 36             	mov    (%rsi),%rsi
  41a0ef:	48 29 f2             	sub    %rsi,%rdx
  41a0f2:	48 83 fa 01          	cmp    $0x1,%rdx
  41a0f6:	7d 0c                	jge    41a104 <mbedtls_asn1_get_len+0x34>
  41a0f8:	c7 45 fc a0 ff ff ff 	movl   $0xffffffa0,-0x4(%rbp)
  41a0ff:	e9 2d 02 00 00       	jmpq   41a331 <mbedtls_asn1_get_len+0x261>
  41a104:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41a108:	48 8b 00             	mov    (%rax),%rax
  41a10b:	0f b6 08             	movzbl (%rax),%ecx
  41a10e:	81 e1 80 00 00 00    	and    $0x80,%ecx
  41a114:	83 f9 00             	cmp    $0x0,%ecx
  41a117:	75 22                	jne    41a13b <mbedtls_asn1_get_len+0x6b>
  41a119:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41a11d:	48 8b 08             	mov    (%rax),%rcx
  41a120:	48 89 ca             	mov    %rcx,%rdx
  41a123:	48 83 c2 01          	add    $0x1,%rdx
  41a127:	48 89 10             	mov    %rdx,(%rax)
  41a12a:	0f b6 31             	movzbl (%rcx),%esi
  41a12d:	89 f0                	mov    %esi,%eax
  41a12f:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  41a133:	48 89 01             	mov    %rax,(%rcx)
  41a136:	e9 cc 01 00 00       	jmpq   41a307 <mbedtls_asn1_get_len+0x237>
  41a13b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41a13f:	48 8b 00             	mov    (%rax),%rax
  41a142:	0f b6 08             	movzbl (%rax),%ecx
  41a145:	83 e1 7f             	and    $0x7f,%ecx
  41a148:	83 c1 ff             	add    $0xffffffff,%ecx
  41a14b:	89 c8                	mov    %ecx,%eax
  41a14d:	83 e9 03             	sub    $0x3,%ecx
  41a150:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41a154:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  41a157:	0f 87 9f 01 00 00    	ja     41a2fc <mbedtls_asn1_get_len+0x22c>
  41a15d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41a161:	48 8b 0c c5 18 6d 44 	mov    0x446d18(,%rax,8),%rcx
  41a168:	00 
  41a169:	ff e1                	jmpq   *%rcx
  41a16b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41a16f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  41a173:	48 8b 09             	mov    (%rcx),%rcx
  41a176:	48 29 c8             	sub    %rcx,%rax
  41a179:	48 83 f8 02          	cmp    $0x2,%rax
  41a17d:	7d 0c                	jge    41a18b <mbedtls_asn1_get_len+0xbb>
  41a17f:	c7 45 fc a0 ff ff ff 	movl   $0xffffffa0,-0x4(%rbp)
  41a186:	e9 a6 01 00 00       	jmpq   41a331 <mbedtls_asn1_get_len+0x261>
  41a18b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41a18f:	48 8b 00             	mov    (%rax),%rax
  41a192:	0f b6 48 01          	movzbl 0x1(%rax),%ecx
  41a196:	89 c8                	mov    %ecx,%eax
  41a198:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  41a19c:	48 89 02             	mov    %rax,(%rdx)
  41a19f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41a1a3:	48 8b 10             	mov    (%rax),%rdx
  41a1a6:	48 83 c2 02          	add    $0x2,%rdx
  41a1aa:	48 89 10             	mov    %rdx,(%rax)
  41a1ad:	e9 53 01 00 00       	jmpq   41a305 <mbedtls_asn1_get_len+0x235>
  41a1b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41a1b6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  41a1ba:	48 8b 09             	mov    (%rcx),%rcx
  41a1bd:	48 29 c8             	sub    %rcx,%rax
  41a1c0:	48 83 f8 03          	cmp    $0x3,%rax
  41a1c4:	7d 0c                	jge    41a1d2 <mbedtls_asn1_get_len+0x102>
  41a1c6:	c7 45 fc a0 ff ff ff 	movl   $0xffffffa0,-0x4(%rbp)
  41a1cd:	e9 5f 01 00 00       	jmpq   41a331 <mbedtls_asn1_get_len+0x261>
  41a1d2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41a1d6:	48 8b 00             	mov    (%rax),%rax
  41a1d9:	0f b6 48 01          	movzbl 0x1(%rax),%ecx
  41a1dd:	89 c8                	mov    %ecx,%eax
  41a1df:	48 c1 e0 08          	shl    $0x8,%rax
  41a1e3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  41a1e7:	48 8b 12             	mov    (%rdx),%rdx
  41a1ea:	0f b6 4a 02          	movzbl 0x2(%rdx),%ecx
  41a1ee:	89 ca                	mov    %ecx,%edx
  41a1f0:	48 09 d0             	or     %rdx,%rax
  41a1f3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  41a1f7:	48 89 02             	mov    %rax,(%rdx)
  41a1fa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41a1fe:	48 8b 10             	mov    (%rax),%rdx
  41a201:	48 83 c2 03          	add    $0x3,%rdx
  41a205:	48 89 10             	mov    %rdx,(%rax)
  41a208:	e9 f8 00 00 00       	jmpq   41a305 <mbedtls_asn1_get_len+0x235>
  41a20d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41a211:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  41a215:	48 8b 09             	mov    (%rcx),%rcx
  41a218:	48 29 c8             	sub    %rcx,%rax
  41a21b:	48 83 f8 04          	cmp    $0x4,%rax
  41a21f:	7d 0c                	jge    41a22d <mbedtls_asn1_get_len+0x15d>
  41a221:	c7 45 fc a0 ff ff ff 	movl   $0xffffffa0,-0x4(%rbp)
  41a228:	e9 04 01 00 00       	jmpq   41a331 <mbedtls_asn1_get_len+0x261>
  41a22d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41a231:	48 8b 00             	mov    (%rax),%rax
  41a234:	0f b6 48 01          	movzbl 0x1(%rax),%ecx
  41a238:	89 c8                	mov    %ecx,%eax
  41a23a:	48 c1 e0 10          	shl    $0x10,%rax
  41a23e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  41a242:	48 8b 12             	mov    (%rdx),%rdx
  41a245:	0f b6 4a 02          	movzbl 0x2(%rdx),%ecx
  41a249:	89 ca                	mov    %ecx,%edx
  41a24b:	48 c1 e2 08          	shl    $0x8,%rdx
  41a24f:	48 09 d0             	or     %rdx,%rax
  41a252:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  41a256:	48 8b 12             	mov    (%rdx),%rdx
  41a259:	0f b6 4a 03          	movzbl 0x3(%rdx),%ecx
  41a25d:	89 ca                	mov    %ecx,%edx
  41a25f:	48 09 d0             	or     %rdx,%rax
  41a262:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  41a266:	48 89 02             	mov    %rax,(%rdx)
  41a269:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41a26d:	48 8b 10             	mov    (%rax),%rdx
  41a270:	48 83 c2 04          	add    $0x4,%rdx
  41a274:	48 89 10             	mov    %rdx,(%rax)
  41a277:	e9 89 00 00 00       	jmpq   41a305 <mbedtls_asn1_get_len+0x235>
  41a27c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41a280:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  41a284:	48 8b 09             	mov    (%rcx),%rcx
  41a287:	48 29 c8             	sub    %rcx,%rax
  41a28a:	48 83 f8 05          	cmp    $0x5,%rax
  41a28e:	7d 0c                	jge    41a29c <mbedtls_asn1_get_len+0x1cc>
  41a290:	c7 45 fc a0 ff ff ff 	movl   $0xffffffa0,-0x4(%rbp)
  41a297:	e9 95 00 00 00       	jmpq   41a331 <mbedtls_asn1_get_len+0x261>
  41a29c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41a2a0:	48 8b 00             	mov    (%rax),%rax
  41a2a3:	0f b6 48 01          	movzbl 0x1(%rax),%ecx
  41a2a7:	89 c8                	mov    %ecx,%eax
  41a2a9:	48 c1 e0 18          	shl    $0x18,%rax
  41a2ad:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  41a2b1:	48 8b 12             	mov    (%rdx),%rdx
  41a2b4:	0f b6 4a 02          	movzbl 0x2(%rdx),%ecx
  41a2b8:	89 ca                	mov    %ecx,%edx
  41a2ba:	48 c1 e2 10          	shl    $0x10,%rdx
  41a2be:	48 09 d0             	or     %rdx,%rax
  41a2c1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  41a2c5:	48 8b 12             	mov    (%rdx),%rdx
  41a2c8:	0f b6 4a 03          	movzbl 0x3(%rdx),%ecx
  41a2cc:	89 ca                	mov    %ecx,%edx
  41a2ce:	48 c1 e2 08          	shl    $0x8,%rdx
  41a2d2:	48 09 d0             	or     %rdx,%rax
  41a2d5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  41a2d9:	48 8b 12             	mov    (%rdx),%rdx
  41a2dc:	0f b6 4a 04          	movzbl 0x4(%rdx),%ecx
  41a2e0:	89 ca                	mov    %ecx,%edx
  41a2e2:	48 09 d0             	or     %rdx,%rax
  41a2e5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  41a2e9:	48 89 02             	mov    %rax,(%rdx)
  41a2ec:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41a2f0:	48 8b 10             	mov    (%rax),%rdx
  41a2f3:	48 83 c2 05          	add    $0x5,%rdx
  41a2f7:	48 89 10             	mov    %rdx,(%rax)
  41a2fa:	eb 09                	jmp    41a305 <mbedtls_asn1_get_len+0x235>
  41a2fc:	c7 45 fc 9c ff ff ff 	movl   $0xffffff9c,-0x4(%rbp)
  41a303:	eb 2c                	jmp    41a331 <mbedtls_asn1_get_len+0x261>
  41a305:	eb 00                	jmp    41a307 <mbedtls_asn1_get_len+0x237>
  41a307:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41a30b:	48 8b 00             	mov    (%rax),%rax
  41a30e:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  41a312:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  41a316:	48 8b 12             	mov    (%rdx),%rdx
  41a319:	48 29 d1             	sub    %rdx,%rcx
  41a31c:	48 39 c8             	cmp    %rcx,%rax
  41a31f:	76 09                	jbe    41a32a <mbedtls_asn1_get_len+0x25a>
  41a321:	c7 45 fc a0 ff ff ff 	movl   $0xffffffa0,-0x4(%rbp)
  41a328:	eb 07                	jmp    41a331 <mbedtls_asn1_get_len+0x261>
  41a32a:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  41a331:	8b 45 fc             	mov    -0x4(%rbp),%eax
  41a334:	89 45 d0             	mov    %eax,-0x30(%rbp)
  41a337:	e8 1a b6 02 00       	callq  445956 <writeback_cache>
  41a33c:	8b 45 d0             	mov    -0x30(%rbp),%eax
  41a33f:	48 83 c4 30          	add    $0x30,%rsp
  41a343:	5d                   	pop    %rbp
  41a344:	c3                   	retq   
  41a345:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  41a34c:	00 00 00 00 

000000000041a350 <mbedtls_asn1_get_int>:
  41a350:	55                   	push   %rbp
  41a351:	48 89 e5             	mov    %rsp,%rbp
  41a354:	48 83 ec 60          	sub    $0x60,%rsp
  41a358:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
  41a35c:	48 89 75 c8          	mov    %rsi,-0x38(%rbp)
  41a360:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
  41a364:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  41a368:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  41a36c:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  41a370:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  41a374:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
  41a378:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
  41a37c:	c7 45 dc 02 00 00 00 	movl   $0x2,-0x24(%rbp)
  41a383:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  41a387:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  41a38b:	48 8b 36             	mov    (%rsi),%rsi
  41a38e:	48 29 f2             	sub    %rsi,%rdx
  41a391:	48 83 fa 01          	cmp    $0x1,%rdx
  41a395:	7d 09                	jge    41a3a0 <mbedtls_asn1_get_int+0x50>
  41a397:	c7 45 fc a0 ff ff ff 	movl   $0xffffffa0,-0x4(%rbp)
  41a39e:	eb 3a                	jmp    41a3da <mbedtls_asn1_get_int+0x8a>
  41a3a0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41a3a4:	48 8b 00             	mov    (%rax),%rax
  41a3a7:	0f b6 08             	movzbl (%rax),%ecx
  41a3aa:	3b 4d dc             	cmp    -0x24(%rbp),%ecx
  41a3ad:	74 09                	je     41a3b8 <mbedtls_asn1_get_int+0x68>
  41a3af:	c7 45 fc 9e ff ff ff 	movl   $0xffffff9e,-0x4(%rbp)
  41a3b6:	eb 22                	jmp    41a3da <mbedtls_asn1_get_int+0x8a>
  41a3b8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41a3bc:	48 8b 08             	mov    (%rax),%rcx
  41a3bf:	48 83 c1 01          	add    $0x1,%rcx
  41a3c3:	48 89 08             	mov    %rcx,(%rax)
  41a3c6:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  41a3ca:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  41a3ce:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  41a3d2:	e8 f9 fc ff ff       	callq  41a0d0 <mbedtls_asn1_get_len>
  41a3d7:	89 45 fc             	mov    %eax,-0x4(%rbp)
  41a3da:	8b 45 fc             	mov    -0x4(%rbp),%eax
  41a3dd:	89 45 bc             	mov    %eax,-0x44(%rbp)
  41a3e0:	83 f8 00             	cmp    $0x0,%eax
  41a3e3:	74 08                	je     41a3ed <mbedtls_asn1_get_int+0x9d>
  41a3e5:	8b 45 bc             	mov    -0x44(%rbp),%eax
  41a3e8:	89 45 d8             	mov    %eax,-0x28(%rbp)
  41a3eb:	eb 7d                	jmp    41a46a <mbedtls_asn1_get_int+0x11a>
  41a3ed:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
  41a3f2:	74 1c                	je     41a410 <mbedtls_asn1_get_int+0xc0>
  41a3f4:	48 83 7d b0 04       	cmpq   $0x4,-0x50(%rbp)
  41a3f9:	77 15                	ja     41a410 <mbedtls_asn1_get_int+0xc0>
  41a3fb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41a3ff:	48 8b 00             	mov    (%rax),%rax
  41a402:	0f b6 08             	movzbl (%rax),%ecx
  41a405:	81 e1 80 00 00 00    	and    $0x80,%ecx
  41a40b:	83 f9 00             	cmp    $0x0,%ecx
  41a40e:	74 09                	je     41a419 <mbedtls_asn1_get_int+0xc9>
  41a410:	c7 45 d8 9c ff ff ff 	movl   $0xffffff9c,-0x28(%rbp)
  41a417:	eb 51                	jmp    41a46a <mbedtls_asn1_get_int+0x11a>
  41a419:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41a41d:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  41a423:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  41a427:	48 89 c1             	mov    %rax,%rcx
  41a42a:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
  41a42e:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
  41a432:	48 83 f8 00          	cmp    $0x0,%rax
  41a436:	76 2b                	jbe    41a463 <mbedtls_asn1_get_int+0x113>
  41a438:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41a43c:	8b 08                	mov    (%rax),%ecx
  41a43e:	c1 e1 08             	shl    $0x8,%ecx
  41a441:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41a445:	48 8b 00             	mov    (%rax),%rax
  41a448:	0f b6 10             	movzbl (%rax),%edx
  41a44b:	09 d1                	or     %edx,%ecx
  41a44d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41a451:	89 08                	mov    %ecx,(%rax)
  41a453:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41a457:	48 8b 30             	mov    (%rax),%rsi
  41a45a:	48 83 c6 01          	add    $0x1,%rsi
  41a45e:	48 89 30             	mov    %rsi,(%rax)
  41a461:	eb c0                	jmp    41a423 <mbedtls_asn1_get_int+0xd3>
  41a463:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
  41a46a:	8b 45 d8             	mov    -0x28(%rbp),%eax
  41a46d:	89 45 ac             	mov    %eax,-0x54(%rbp)
  41a470:	e8 e1 b4 02 00       	callq  445956 <writeback_cache>
  41a475:	8b 45 ac             	mov    -0x54(%rbp),%eax
  41a478:	48 83 c4 60          	add    $0x60,%rsp
  41a47c:	5d                   	pop    %rbp
  41a47d:	c3                   	retq   
  41a47e:	66 90                	xchg   %ax,%ax

000000000041a480 <mbedtls_asn1_get_bitstring>:
  41a480:	55                   	push   %rbp
  41a481:	48 89 e5             	mov    %rsp,%rbp
  41a484:	48 83 ec 50          	sub    $0x50,%rsp
  41a488:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
  41a48c:	48 89 75 c8          	mov    %rsi,-0x38(%rbp)
  41a490:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
  41a494:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  41a498:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  41a49c:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  41a4a0:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  41a4a4:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  41a4a8:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
  41a4ac:	c7 45 dc 03 00 00 00 	movl   $0x3,-0x24(%rbp)
  41a4b3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  41a4b7:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  41a4bb:	48 8b 36             	mov    (%rsi),%rsi
  41a4be:	48 29 f2             	sub    %rsi,%rdx
  41a4c1:	48 83 fa 01          	cmp    $0x1,%rdx
  41a4c5:	7d 09                	jge    41a4d0 <mbedtls_asn1_get_bitstring+0x50>
  41a4c7:	c7 45 fc a0 ff ff ff 	movl   $0xffffffa0,-0x4(%rbp)
  41a4ce:	eb 3a                	jmp    41a50a <mbedtls_asn1_get_bitstring+0x8a>
  41a4d0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41a4d4:	48 8b 00             	mov    (%rax),%rax
  41a4d7:	0f b6 08             	movzbl (%rax),%ecx
  41a4da:	3b 4d dc             	cmp    -0x24(%rbp),%ecx
  41a4dd:	74 09                	je     41a4e8 <mbedtls_asn1_get_bitstring+0x68>
  41a4df:	c7 45 fc 9e ff ff ff 	movl   $0xffffff9e,-0x4(%rbp)
  41a4e6:	eb 22                	jmp    41a50a <mbedtls_asn1_get_bitstring+0x8a>
  41a4e8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41a4ec:	48 8b 08             	mov    (%rax),%rcx
  41a4ef:	48 83 c1 01          	add    $0x1,%rcx
  41a4f3:	48 89 08             	mov    %rcx,(%rax)
  41a4f6:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  41a4fa:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  41a4fe:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  41a502:	e8 c9 fb ff ff       	callq  41a0d0 <mbedtls_asn1_get_len>
  41a507:	89 45 fc             	mov    %eax,-0x4(%rbp)
  41a50a:	8b 45 fc             	mov    -0x4(%rbp),%eax
  41a50d:	89 45 bc             	mov    %eax,-0x44(%rbp)
  41a510:	83 f8 00             	cmp    $0x0,%eax
  41a513:	74 0b                	je     41a520 <mbedtls_asn1_get_bitstring+0xa0>
  41a515:	8b 45 bc             	mov    -0x44(%rbp),%eax
  41a518:	89 45 d8             	mov    %eax,-0x28(%rbp)
  41a51b:	e9 92 00 00 00       	jmpq   41a5b2 <mbedtls_asn1_get_bitstring+0x132>
  41a520:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41a524:	48 83 38 01          	cmpq   $0x1,(%rax)
  41a528:	73 09                	jae    41a533 <mbedtls_asn1_get_bitstring+0xb3>
  41a52a:	c7 45 d8 a0 ff ff ff 	movl   $0xffffffa0,-0x28(%rbp)
  41a531:	eb 7f                	jmp    41a5b2 <mbedtls_asn1_get_bitstring+0x132>
  41a533:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41a537:	48 8b 08             	mov    (%rax),%rcx
  41a53a:	48 83 e9 01          	sub    $0x1,%rcx
  41a53e:	48 89 08             	mov    %rcx,(%rax)
  41a541:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41a545:	48 8b 00             	mov    (%rax),%rax
  41a548:	8a 10                	mov    (%rax),%dl
  41a54a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41a54e:	88 50 08             	mov    %dl,0x8(%rax)
  41a551:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41a555:	0f b6 70 08          	movzbl 0x8(%rax),%esi
  41a559:	83 fe 07             	cmp    $0x7,%esi
  41a55c:	7e 09                	jle    41a567 <mbedtls_asn1_get_bitstring+0xe7>
  41a55e:	c7 45 d8 9c ff ff ff 	movl   $0xffffff9c,-0x28(%rbp)
  41a565:	eb 4b                	jmp    41a5b2 <mbedtls_asn1_get_bitstring+0x132>
  41a567:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41a56b:	48 8b 08             	mov    (%rax),%rcx
  41a56e:	48 83 c1 01          	add    $0x1,%rcx
  41a572:	48 89 08             	mov    %rcx,(%rax)
  41a575:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41a579:	48 8b 00             	mov    (%rax),%rax
  41a57c:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  41a580:	48 89 41 10          	mov    %rax,0x10(%rcx)
  41a584:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41a588:	48 8b 00             	mov    (%rax),%rax
  41a58b:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  41a58f:	48 03 01             	add    (%rcx),%rax
  41a592:	48 89 01             	mov    %rax,(%rcx)
  41a595:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41a599:	48 8b 00             	mov    (%rax),%rax
  41a59c:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
  41a5a0:	74 09                	je     41a5ab <mbedtls_asn1_get_bitstring+0x12b>
  41a5a2:	c7 45 d8 9a ff ff ff 	movl   $0xffffff9a,-0x28(%rbp)
  41a5a9:	eb 07                	jmp    41a5b2 <mbedtls_asn1_get_bitstring+0x132>
  41a5ab:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
  41a5b2:	8b 45 d8             	mov    -0x28(%rbp),%eax
  41a5b5:	89 45 b8             	mov    %eax,-0x48(%rbp)
  41a5b8:	e8 99 b3 02 00       	callq  445956 <writeback_cache>
  41a5bd:	8b 45 b8             	mov    -0x48(%rbp),%eax
  41a5c0:	48 83 c4 50          	add    $0x50,%rsp
  41a5c4:	5d                   	pop    %rbp
  41a5c5:	c3                   	retq   
  41a5c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41a5cd:	00 00 00 

000000000041a5d0 <mbedtls_asn1_get_alg>:
  41a5d0:	55                   	push   %rbp
  41a5d1:	48 89 e5             	mov    %rsp,%rbp
  41a5d4:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
  41a5db:	48 89 7d a0          	mov    %rdi,-0x60(%rbp)
  41a5df:	48 89 75 98          	mov    %rsi,-0x68(%rbp)
  41a5e3:	48 89 55 90          	mov    %rdx,-0x70(%rbp)
  41a5e7:	48 89 4d 88          	mov    %rcx,-0x78(%rbp)
  41a5eb:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
  41a5ef:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  41a5f3:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
  41a5f7:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
  41a5fb:	48 8d 8d 78 ff ff ff 	lea    -0x88(%rbp),%rcx
  41a602:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
  41a606:	c7 45 ac 30 00 00 00 	movl   $0x30,-0x54(%rbp)
  41a60d:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  41a611:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  41a615:	48 8b 12             	mov    (%rdx),%rdx
  41a618:	48 29 d1             	sub    %rdx,%rcx
  41a61b:	48 83 f9 01          	cmp    $0x1,%rcx
  41a61f:	7d 09                	jge    41a62a <mbedtls_asn1_get_alg+0x5a>
  41a621:	c7 45 c8 a0 ff ff ff 	movl   $0xffffffa0,-0x38(%rbp)
  41a628:	eb 3a                	jmp    41a664 <mbedtls_asn1_get_alg+0x94>
  41a62a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41a62e:	48 8b 00             	mov    (%rax),%rax
  41a631:	0f b6 08             	movzbl (%rax),%ecx
  41a634:	3b 4d ac             	cmp    -0x54(%rbp),%ecx
  41a637:	74 09                	je     41a642 <mbedtls_asn1_get_alg+0x72>
  41a639:	c7 45 c8 9e ff ff ff 	movl   $0xffffff9e,-0x38(%rbp)
  41a640:	eb 22                	jmp    41a664 <mbedtls_asn1_get_alg+0x94>
  41a642:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41a646:	48 8b 08             	mov    (%rax),%rcx
  41a649:	48 83 c1 01          	add    $0x1,%rcx
  41a64d:	48 89 08             	mov    %rcx,(%rax)
  41a650:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  41a654:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  41a658:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
  41a65c:	e8 6f fa ff ff       	callq  41a0d0 <mbedtls_asn1_get_len>
  41a661:	89 45 c8             	mov    %eax,-0x38(%rbp)
  41a664:	8b 45 c8             	mov    -0x38(%rbp),%eax
  41a667:	89 45 84             	mov    %eax,-0x7c(%rbp)
  41a66a:	83 f8 00             	cmp    $0x0,%eax
  41a66d:	74 0b                	je     41a67a <mbedtls_asn1_get_alg+0xaa>
  41a66f:	8b 45 84             	mov    -0x7c(%rbp),%eax
  41a672:	89 45 a8             	mov    %eax,-0x58(%rbp)
  41a675:	e9 bb 01 00 00       	jmpq   41a835 <mbedtls_asn1_get_alg+0x265>
  41a67a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  41a67e:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
  41a682:	48 8b 09             	mov    (%rcx),%rcx
  41a685:	48 29 c8             	sub    %rcx,%rax
  41a688:	48 83 f8 01          	cmp    $0x1,%rax
  41a68c:	7d 0c                	jge    41a69a <mbedtls_asn1_get_alg+0xca>
  41a68e:	c7 45 a8 a0 ff ff ff 	movl   $0xffffffa0,-0x58(%rbp)
  41a695:	e9 9b 01 00 00       	jmpq   41a835 <mbedtls_asn1_get_alg+0x265>
  41a69a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  41a69e:	48 8b 00             	mov    (%rax),%rax
  41a6a1:	0f b6 08             	movzbl (%rax),%ecx
  41a6a4:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  41a6a8:	89 08                	mov    %ecx,(%rax)
  41a6aa:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  41a6ae:	48 8b 00             	mov    (%rax),%rax
  41a6b1:	48 03 85 78 ff ff ff 	add    -0x88(%rbp),%rax
  41a6b8:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  41a6bc:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  41a6c0:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  41a6c4:	48 8b 75 90          	mov    -0x70(%rbp),%rsi
  41a6c8:	48 83 c6 08          	add    $0x8,%rsi
  41a6cc:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  41a6d0:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  41a6d4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  41a6d8:	c7 45 cc 06 00 00 00 	movl   $0x6,-0x34(%rbp)
  41a6df:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41a6e3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  41a6e7:	48 8b 12             	mov    (%rdx),%rdx
  41a6ea:	48 29 d0             	sub    %rdx,%rax
  41a6ed:	48 83 f8 01          	cmp    $0x1,%rax
  41a6f1:	7d 09                	jge    41a6fc <mbedtls_asn1_get_alg+0x12c>
  41a6f3:	c7 45 ec a0 ff ff ff 	movl   $0xffffffa0,-0x14(%rbp)
  41a6fa:	eb 3a                	jmp    41a736 <mbedtls_asn1_get_alg+0x166>
  41a6fc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41a700:	48 8b 00             	mov    (%rax),%rax
  41a703:	0f b6 08             	movzbl (%rax),%ecx
  41a706:	3b 4d cc             	cmp    -0x34(%rbp),%ecx
  41a709:	74 09                	je     41a714 <mbedtls_asn1_get_alg+0x144>
  41a70b:	c7 45 ec 9e ff ff ff 	movl   $0xffffff9e,-0x14(%rbp)
  41a712:	eb 22                	jmp    41a736 <mbedtls_asn1_get_alg+0x166>
  41a714:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41a718:	48 8b 08             	mov    (%rax),%rcx
  41a71b:	48 83 c1 01          	add    $0x1,%rcx
  41a71f:	48 89 08             	mov    %rcx,(%rax)
  41a722:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  41a726:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  41a72a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  41a72e:	e8 9d f9 ff ff       	callq  41a0d0 <mbedtls_asn1_get_len>
  41a733:	89 45 ec             	mov    %eax,-0x14(%rbp)
  41a736:	8b 45 ec             	mov    -0x14(%rbp),%eax
  41a739:	89 45 84             	mov    %eax,-0x7c(%rbp)
  41a73c:	83 f8 00             	cmp    $0x0,%eax
  41a73f:	74 0b                	je     41a74c <mbedtls_asn1_get_alg+0x17c>
  41a741:	8b 45 84             	mov    -0x7c(%rbp),%eax
  41a744:	89 45 a8             	mov    %eax,-0x58(%rbp)
  41a747:	e9 e9 00 00 00       	jmpq   41a835 <mbedtls_asn1_get_alg+0x265>
  41a74c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  41a750:	48 8b 00             	mov    (%rax),%rax
  41a753:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  41a757:	48 89 41 10          	mov    %rax,0x10(%rcx)
  41a75b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  41a75f:	48 8b 40 08          	mov    0x8(%rax),%rax
  41a763:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
  41a767:	48 03 01             	add    (%rcx),%rax
  41a76a:	48 89 01             	mov    %rax,(%rcx)
  41a76d:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  41a771:	48 8b 00             	mov    (%rax),%rax
  41a774:	48 3b 45 98          	cmp    -0x68(%rbp),%rax
  41a778:	75 37                	jne    41a7b1 <mbedtls_asn1_get_alg+0x1e1>
  41a77a:	31 f6                	xor    %esi,%esi
  41a77c:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  41a780:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41a784:	48 c7 45 f0 18 00 00 	movq   $0x18,-0x10(%rbp)
  41a78b:	00 
  41a78c:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  41a793:	00 
  41a794:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  41a798:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  41a79c:	ff d0                	callq  *%rax
  41a79e:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%rbp)
  41a7a5:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
  41a7ac:	e9 84 00 00 00       	jmpq   41a835 <mbedtls_asn1_get_alg+0x265>
  41a7b1:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  41a7b5:	48 8b 00             	mov    (%rax),%rax
  41a7b8:	0f b6 08             	movzbl (%rax),%ecx
  41a7bb:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  41a7bf:	89 08                	mov    %ecx,(%rax)
  41a7c1:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  41a7c5:	48 8b 10             	mov    (%rax),%rdx
  41a7c8:	48 83 c2 01          	add    $0x1,%rdx
  41a7cc:	48 89 10             	mov    %rdx,(%rax)
  41a7cf:	48 8b 7d a0          	mov    -0x60(%rbp),%rdi
  41a7d3:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
  41a7d7:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  41a7db:	48 83 c0 08          	add    $0x8,%rax
  41a7df:	48 89 c2             	mov    %rax,%rdx
  41a7e2:	e8 e9 f8 ff ff       	callq  41a0d0 <mbedtls_asn1_get_len>
  41a7e7:	89 45 84             	mov    %eax,-0x7c(%rbp)
  41a7ea:	83 f8 00             	cmp    $0x0,%eax
  41a7ed:	74 08                	je     41a7f7 <mbedtls_asn1_get_alg+0x227>
  41a7ef:	8b 45 84             	mov    -0x7c(%rbp),%eax
  41a7f2:	89 45 a8             	mov    %eax,-0x58(%rbp)
  41a7f5:	eb 3e                	jmp    41a835 <mbedtls_asn1_get_alg+0x265>
  41a7f7:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  41a7fb:	48 8b 00             	mov    (%rax),%rax
  41a7fe:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
  41a802:	48 89 41 10          	mov    %rax,0x10(%rcx)
  41a806:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  41a80a:	48 8b 40 08          	mov    0x8(%rax),%rax
  41a80e:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
  41a812:	48 03 01             	add    (%rcx),%rax
  41a815:	48 89 01             	mov    %rax,(%rcx)
  41a818:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  41a81c:	48 8b 00             	mov    (%rax),%rax
  41a81f:	48 3b 45 98          	cmp    -0x68(%rbp),%rax
  41a823:	74 09                	je     41a82e <mbedtls_asn1_get_alg+0x25e>
  41a825:	c7 45 a8 9a ff ff ff 	movl   $0xffffff9a,-0x58(%rbp)
  41a82c:	eb 07                	jmp    41a835 <mbedtls_asn1_get_alg+0x265>
  41a82e:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%rbp)
  41a835:	8b 45 a8             	mov    -0x58(%rbp),%eax
  41a838:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)
  41a83e:	e8 13 b1 02 00       	callq  445956 <writeback_cache>
  41a843:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
  41a849:	48 81 c4 a0 00 00 00 	add    $0xa0,%rsp
  41a850:	5d                   	pop    %rbp
  41a851:	c3                   	retq   
  41a852:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  41a859:	1f 84 00 00 00 00 00 

000000000041a860 <mbedtls_asn1_get_alg_null>:
  41a860:	55                   	push   %rbp
  41a861:	48 89 e5             	mov    %rsp,%rbp
  41a864:	48 83 ec 50          	sub    $0x50,%rsp
  41a868:	31 c0                	xor    %eax,%eax
  41a86a:	b9 18 00 00 00       	mov    $0x18,%ecx
  41a86f:	41 89 c8             	mov    %ecx,%r8d
  41a872:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  41a876:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  41a87a:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
  41a87e:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
  41a882:	48 89 d6             	mov    %rdx,%rsi
  41a885:	48 89 f7             	mov    %rsi,%rdi
  41a888:	89 c6                	mov    %eax,%esi
  41a88a:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
  41a88e:	4c 89 c2             	mov    %r8,%rdx
  41a891:	e8 8a 67 fe ff       	callq  401020 <memset@plt>
  41a896:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  41a89a:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  41a89e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  41a8a2:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  41a8a6:	e8 25 fd ff ff       	callq  41a5d0 <mbedtls_asn1_get_alg>
  41a8ab:	89 45 dc             	mov    %eax,-0x24(%rbp)
  41a8ae:	83 f8 00             	cmp    $0x0,%eax
  41a8b1:	74 08                	je     41a8bb <mbedtls_asn1_get_alg_null+0x5b>
  41a8b3:	8b 45 dc             	mov    -0x24(%rbp),%eax
  41a8b6:	89 45 fc             	mov    %eax,-0x4(%rbp)
  41a8b9:	eb 23                	jmp    41a8de <mbedtls_asn1_get_alg_null+0x7e>
  41a8bb:	83 7d c0 05          	cmpl   $0x5,-0x40(%rbp)
  41a8bf:	74 06                	je     41a8c7 <mbedtls_asn1_get_alg_null+0x67>
  41a8c1:	83 7d c0 00          	cmpl   $0x0,-0x40(%rbp)
  41a8c5:	75 07                	jne    41a8ce <mbedtls_asn1_get_alg_null+0x6e>
  41a8c7:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  41a8cc:	74 09                	je     41a8d7 <mbedtls_asn1_get_alg_null+0x77>
  41a8ce:	c7 45 fc 98 ff ff ff 	movl   $0xffffff98,-0x4(%rbp)
  41a8d5:	eb 07                	jmp    41a8de <mbedtls_asn1_get_alg_null+0x7e>
  41a8d7:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  41a8de:	8b 45 fc             	mov    -0x4(%rbp),%eax
  41a8e1:	89 45 b4             	mov    %eax,-0x4c(%rbp)
  41a8e4:	e8 6d b0 02 00       	callq  445956 <writeback_cache>
  41a8e9:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  41a8ec:	48 83 c4 50          	add    $0x50,%rsp
  41a8f0:	5d                   	pop    %rbp
  41a8f1:	c3                   	retq   
  41a8f2:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  41a8f9:	1f 84 00 00 00 00 00 

000000000041a900 <mbedtls_asn1_free_named_data>:
  41a900:	55                   	push   %rbp
  41a901:	48 89 e5             	mov    %rsp,%rbp
  41a904:	48 83 ec 10          	sub    $0x10,%rsp
  41a908:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41a90c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  41a911:	75 02                	jne    41a915 <mbedtls_asn1_free_named_data+0x15>
  41a913:	eb 2d                	jmp    41a942 <mbedtls_asn1_free_named_data+0x42>
  41a915:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41a919:	48 8b 78 10          	mov    0x10(%rax),%rdi
  41a91d:	e8 be 67 fe ff       	callq  4010e0 <free@plt>
  41a922:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41a926:	48 8b 78 28          	mov    0x28(%rax),%rdi
  41a92a:	e8 b1 67 fe ff       	callq  4010e0 <free@plt>
  41a92f:	b9 40 00 00 00       	mov    $0x40,%ecx
  41a934:	89 ce                	mov    %ecx,%esi
  41a936:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41a93a:	48 89 c7             	mov    %rax,%rdi
  41a93d:	e8 2e b7 01 00       	callq  436070 <mbedtls_platform_zeroize>
  41a942:	e8 0f b0 02 00       	callq  445956 <writeback_cache>
  41a947:	48 83 c4 10          	add    $0x10,%rsp
  41a94b:	5d                   	pop    %rbp
  41a94c:	c3                   	retq   
  41a94d:	0f 1f 00             	nopl   (%rax)

000000000041a950 <mbedtls_mpi_init>:
  41a950:	55                   	push   %rbp
  41a951:	48 89 e5             	mov    %rsp,%rbp
  41a954:	48 83 ec 20          	sub    $0x20,%rsp
  41a958:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41a95c:	eb 00                	jmp    41a95e <mbedtls_mpi_init+0xe>
  41a95e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41a962:	48 89 c7             	mov    %rax,%rdi
  41a965:	be 01 00 00 00       	mov    $0x1,%esi
  41a96a:	e8 8f b2 02 00       	callq  445bfe <setEncryptedValueDWord>
  41a96f:	31 f6                	xor    %esi,%esi
  41a971:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  41a975:	48 83 c7 08          	add    $0x8,%rdi
  41a979:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41a97d:	e8 7a b3 02 00       	callq  445cfc <setEncryptedValueQWord>
  41a982:	31 c9                	xor    %ecx,%ecx
  41a984:	89 ce                	mov    %ecx,%esi
  41a986:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  41a98a:	48 83 c7 10          	add    $0x10,%rdi
  41a98e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  41a992:	e8 65 b3 02 00       	callq  445cfc <setEncryptedValueQWord>
  41a997:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  41a99b:	e8 b6 af 02 00       	callq  445956 <writeback_cache>
  41a9a0:	48 83 c4 20          	add    $0x20,%rsp
  41a9a4:	5d                   	pop    %rbp
  41a9a5:	c3                   	retq   
  41a9a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41a9ad:	00 00 00 

000000000041a9b0 <mbedtls_mpi_free>:
  41a9b0:	55                   	push   %rbp
  41a9b1:	48 89 e5             	mov    %rsp,%rbp
  41a9b4:	48 83 ec 70          	sub    $0x70,%rsp
  41a9b8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  41a9bc:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  41a9c1:	75 05                	jne    41a9c8 <mbedtls_mpi_free+0x18>
  41a9c3:	e9 09 01 00 00       	jmpq   41aad1 <mbedtls_mpi_free+0x121>
  41a9c8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41a9cc:	48 83 c0 10          	add    $0x10,%rax
  41a9d0:	48 89 c7             	mov    %rax,%rdi
  41a9d3:	e8 70 b7 02 00       	callq  446148 <getDecryptedValueQWord>
  41a9d8:	48 83 f8 00          	cmp    $0x0,%rax
  41a9dc:	0f 84 b2 00 00 00    	je     41aa94 <mbedtls_mpi_free+0xe4>
  41a9e2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41a9e6:	48 83 c0 10          	add    $0x10,%rax
  41a9ea:	48 89 c7             	mov    %rax,%rdi
  41a9ed:	e8 56 b7 02 00       	callq  446148 <getDecryptedValueQWord>
  41a9f2:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  41a9f6:	48 83 c7 08          	add    $0x8,%rdi
  41a9fa:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  41a9fe:	e8 45 b7 02 00       	callq  446148 <getDecryptedValueQWord>
  41aa03:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  41aa07:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41aa0b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  41aa0f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41aa13:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  41aa17:	48 c1 e1 03          	shl    $0x3,%rcx
  41aa1b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41aa1f:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
  41aa23:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  41aa2a:	00 
  41aa2b:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  41aa2f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  41aa33:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  41aa37:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
  41aa3b:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
  41aa3f:	e8 12 af 02 00       	callq  445956 <writeback_cache>
  41aa44:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  41aa48:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  41aa4c:	e8 94 bc 02 00       	callq  4466e5 <decryptArrayForLibCall>
  41aa51:	31 f6                	xor    %esi,%esi
  41aa53:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  41aa57:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  41aa5b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41aa5f:	ff d0                	callq  *%rax
  41aa61:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  41aa65:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  41aa69:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  41aa6d:	e8 e4 b9 02 00       	callq  446456 <encryptArrayForLibCall>
  41aa72:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41aa76:	48 83 c0 10          	add    $0x10,%rax
  41aa7a:	48 89 c7             	mov    %rax,%rdi
  41aa7d:	e8 c6 b6 02 00       	callq  446148 <getDecryptedValueQWord>
  41aa82:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  41aa86:	e8 cb ae 02 00       	callq  445956 <writeback_cache>
  41aa8b:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
  41aa8f:	e8 4c 66 fe ff       	callq  4010e0 <free@plt>
  41aa94:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41aa98:	48 89 c7             	mov    %rax,%rdi
  41aa9b:	be 01 00 00 00       	mov    $0x1,%esi
  41aaa0:	e8 59 b1 02 00       	callq  445bfe <setEncryptedValueDWord>
  41aaa5:	31 f6                	xor    %esi,%esi
  41aaa7:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  41aaab:	48 83 c7 08          	add    $0x8,%rdi
  41aaaf:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  41aab3:	e8 44 b2 02 00       	callq  445cfc <setEncryptedValueQWord>
  41aab8:	31 c9                	xor    %ecx,%ecx
  41aaba:	89 ce                	mov    %ecx,%esi
  41aabc:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  41aac0:	48 83 c7 10          	add    $0x10,%rdi
  41aac4:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  41aac8:	e8 2f b2 02 00       	callq  445cfc <setEncryptedValueQWord>
  41aacd:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  41aad1:	e8 80 ae 02 00       	callq  445956 <writeback_cache>
  41aad6:	48 83 c4 70          	add    $0x70,%rsp
  41aada:	5d                   	pop    %rbp
  41aadb:	c3                   	retq   
  41aadc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000041aae0 <mbedtls_mpi_zeroize>:
  41aae0:	55                   	push   %rbp
  41aae1:	48 89 e5             	mov    %rsp,%rbp
  41aae4:	48 83 ec 30          	sub    $0x30,%rsp
  41aae8:	31 c0                	xor    %eax,%eax
  41aaea:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41aaee:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  41aaf2:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  41aaf6:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  41aafa:	48 c1 e7 03          	shl    $0x3,%rdi
  41aafe:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)
  41ab02:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  41ab06:	48 8b 34 25 70 e3 44 	mov    0x44e370,%rsi
  41ab0d:	00 
  41ab0e:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  41ab12:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  41ab16:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
  41ab1a:	89 c6                	mov    %eax,%esi
  41ab1c:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  41ab20:	ff d1                	callq  *%rcx
  41ab22:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  41ab26:	e8 2b ae 02 00       	callq  445956 <writeback_cache>
  41ab2b:	48 83 c4 30          	add    $0x30,%rsp
  41ab2f:	5d                   	pop    %rbp
  41ab30:	c3                   	retq   
  41ab31:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  41ab38:	0f 1f 84 00 00 00 00 
  41ab3f:	00 

000000000041ab40 <mbedtls_mpi_grow>:
  41ab40:	55                   	push   %rbp
  41ab41:	48 89 e5             	mov    %rsp,%rbp
  41ab44:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
  41ab4b:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
  41ab4f:	48 89 75 c8          	mov    %rsi,-0x38(%rbp)
  41ab53:	eb 00                	jmp    41ab55 <mbedtls_mpi_grow+0x15>
  41ab55:	48 81 7d c8 10 27 00 	cmpq   $0x2710,-0x38(%rbp)
  41ab5c:	00 
  41ab5d:	76 0c                	jbe    41ab6b <mbedtls_mpi_grow+0x2b>
  41ab5f:	c7 45 dc f0 ff ff ff 	movl   $0xfffffff0,-0x24(%rbp)
  41ab66:	e9 15 02 00 00       	jmpq   41ad80 <mbedtls_mpi_grow+0x240>
  41ab6b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41ab6f:	48 83 c0 08          	add    $0x8,%rax
  41ab73:	48 89 c7             	mov    %rax,%rdi
  41ab76:	e8 cd b5 02 00       	callq  446148 <getDecryptedValueQWord>
  41ab7b:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
  41ab7f:	0f 83 f4 01 00 00    	jae    41ad79 <mbedtls_mpi_grow+0x239>
  41ab85:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41ab89:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  41ab8d:	e8 c4 ad 02 00       	callq  445956 <writeback_cache>
  41ab92:	b9 08 00 00 00       	mov    $0x8,%ecx
  41ab97:	89 ce                	mov    %ecx,%esi
  41ab99:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  41ab9d:	48 c1 e0 03          	shl    $0x3,%rax
  41aba1:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
  41aba5:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  41aba9:	e8 3c bc 02 00       	callq  4467ea <aes_calloc>
  41abae:	48 89 c7             	mov    %rax,%rdi
  41abb1:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
  41abb5:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  41abb9:	e8 98 b8 02 00       	callq  446456 <encryptArrayForLibCall>
  41abbe:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  41abc2:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  41abc6:	48 83 f8 00          	cmp    $0x0,%rax
  41abca:	75 0c                	jne    41abd8 <mbedtls_mpi_grow+0x98>
  41abcc:	c7 45 dc f0 ff ff ff 	movl   $0xfffffff0,-0x24(%rbp)
  41abd3:	e9 a8 01 00 00       	jmpq   41ad80 <mbedtls_mpi_grow+0x240>
  41abd8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41abdc:	48 83 c0 10          	add    $0x10,%rax
  41abe0:	48 89 c7             	mov    %rax,%rdi
  41abe3:	e8 60 b5 02 00       	callq  446148 <getDecryptedValueQWord>
  41abe8:	48 83 f8 00          	cmp    $0x0,%rax
  41abec:	0f 84 54 01 00 00    	je     41ad46 <mbedtls_mpi_grow+0x206>
  41abf2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41abf6:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  41abfa:	48 83 c1 10          	add    $0x10,%rcx
  41abfe:	48 89 cf             	mov    %rcx,%rdi
  41ac01:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  41ac05:	e8 3e b5 02 00       	callq  446148 <getDecryptedValueQWord>
  41ac0a:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  41ac0e:	48 83 c1 08          	add    $0x8,%rcx
  41ac12:	48 89 cf             	mov    %rcx,%rdi
  41ac15:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  41ac19:	e8 2a b5 02 00       	callq  446148 <getDecryptedValueQWord>
  41ac1e:	48 c1 e0 03          	shl    $0x3,%rax
  41ac22:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  41ac26:	e8 2b ad 02 00       	callq  445956 <writeback_cache>
  41ac2b:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
  41ac2f:	48 8b 75 90          	mov    -0x70(%rbp),%rsi
  41ac33:	e8 ad ba 02 00       	callq  4466e5 <decryptArrayForLibCall>
  41ac38:	48 8b 7d a0          	mov    -0x60(%rbp),%rdi
  41ac3c:	48 8b 75 90          	mov    -0x70(%rbp),%rsi
  41ac40:	e8 a0 ba 02 00       	callq  4466e5 <decryptArrayForLibCall>
  41ac45:	48 8b 7d a0          	mov    -0x60(%rbp),%rdi
  41ac49:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
  41ac4d:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
  41ac51:	e8 1a 65 fe ff       	callq  401170 <memcpy@plt>
  41ac56:	48 8b 7d a0          	mov    -0x60(%rbp),%rdi
  41ac5a:	48 8b 75 90          	mov    -0x70(%rbp),%rsi
  41ac5e:	e8 f3 b7 02 00       	callq  446456 <encryptArrayForLibCall>
  41ac63:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
  41ac67:	48 8b 75 90          	mov    -0x70(%rbp),%rsi
  41ac6b:	e8 e6 b7 02 00       	callq  446456 <encryptArrayForLibCall>
  41ac70:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41ac74:	48 83 c0 10          	add    $0x10,%rax
  41ac78:	48 89 c7             	mov    %rax,%rdi
  41ac7b:	e8 c8 b4 02 00       	callq  446148 <getDecryptedValueQWord>
  41ac80:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  41ac84:	48 83 c1 08          	add    $0x8,%rcx
  41ac88:	48 89 cf             	mov    %rcx,%rdi
  41ac8b:	48 89 45 88          	mov    %rax,-0x78(%rbp)
  41ac8f:	e8 b4 b4 02 00       	callq  446148 <getDecryptedValueQWord>
  41ac94:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
  41ac98:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
  41ac9c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  41aca0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41aca4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  41aca8:	48 c1 e2 03          	shl    $0x3,%rdx
  41acac:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41acb0:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  41acb4:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  41acbb:	00 
  41acbc:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41acc0:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  41acc4:	48 89 45 80          	mov    %rax,-0x80(%rbp)
  41acc8:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
  41accf:	48 89 b5 70 ff ff ff 	mov    %rsi,-0x90(%rbp)
  41acd6:	e8 7b ac 02 00       	callq  445956 <writeback_cache>
  41acdb:	48 8b bd 78 ff ff ff 	mov    -0x88(%rbp),%rdi
  41ace2:	48 8b b5 70 ff ff ff 	mov    -0x90(%rbp),%rsi
  41ace9:	e8 f7 b9 02 00       	callq  4466e5 <decryptArrayForLibCall>
  41acee:	31 f6                	xor    %esi,%esi
  41acf0:	48 8b bd 78 ff ff ff 	mov    -0x88(%rbp),%rdi
  41acf7:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
  41acfe:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  41ad02:	ff d0                	callq  *%rax
  41ad04:	48 8b bd 78 ff ff ff 	mov    -0x88(%rbp),%rdi
  41ad0b:	48 8b b5 70 ff ff ff 	mov    -0x90(%rbp),%rsi
  41ad12:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
  41ad19:	e8 38 b7 02 00       	callq  446456 <encryptArrayForLibCall>
  41ad1e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41ad22:	48 83 c0 10          	add    $0x10,%rax
  41ad26:	48 89 c7             	mov    %rax,%rdi
  41ad29:	e8 1a b4 02 00       	callq  446148 <getDecryptedValueQWord>
  41ad2e:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
  41ad35:	e8 1c ac 02 00       	callq  445956 <writeback_cache>
  41ad3a:	48 8b bd 60 ff ff ff 	mov    -0xa0(%rbp),%rdi
  41ad41:	e8 9a 63 fe ff       	callq  4010e0 <free@plt>
  41ad46:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  41ad4a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41ad4e:	48 83 c0 08          	add    $0x8,%rax
  41ad52:	48 89 c7             	mov    %rax,%rdi
  41ad55:	e8 a2 af 02 00       	callq  445cfc <setEncryptedValueQWord>
  41ad5a:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
  41ad5e:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  41ad62:	48 83 c7 10          	add    $0x10,%rdi
  41ad66:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
  41ad6d:	e8 8a af 02 00       	callq  445cfc <setEncryptedValueQWord>
  41ad72:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
  41ad79:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
  41ad80:	8b 45 dc             	mov    -0x24(%rbp),%eax
  41ad83:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
  41ad89:	e8 c8 ab 02 00       	callq  445956 <writeback_cache>
  41ad8e:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
  41ad94:	48 81 c4 c0 00 00 00 	add    $0xc0,%rsp
  41ad9b:	5d                   	pop    %rbp
  41ad9c:	c3                   	retq   
  41ad9d:	0f 1f 00             	nopl   (%rax)

000000000041ada0 <mbedtls_mpi_copy>:
  41ada0:	55                   	push   %rbp
  41ada1:	48 89 e5             	mov    %rsp,%rbp
  41ada4:	48 81 ec d0 00 00 00 	sub    $0xd0,%rsp
  41adab:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  41adaf:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  41adb3:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%rbp)
  41adba:	eb 00                	jmp    41adbc <mbedtls_mpi_copy+0x1c>
  41adbc:	eb 00                	jmp    41adbe <mbedtls_mpi_copy+0x1e>
  41adbe:	eb 00                	jmp    41adc0 <mbedtls_mpi_copy+0x20>
  41adc0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41adc4:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
  41adc8:	75 0c                	jne    41add6 <mbedtls_mpi_copy+0x36>
  41adca:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
  41add1:	e9 2c 03 00 00       	jmpq   41b102 <mbedtls_mpi_copy+0x362>
  41add6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41adda:	48 83 c0 10          	add    $0x10,%rax
  41adde:	48 89 c7             	mov    %rax,%rdi
  41ade1:	e8 62 b3 02 00       	callq  446148 <getDecryptedValueQWord>
  41ade6:	48 83 f8 00          	cmp    $0x0,%rax
  41adea:	0f 85 32 01 00 00    	jne    41af22 <mbedtls_mpi_copy+0x182>
  41adf0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41adf4:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41adf8:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  41adfd:	75 05                	jne    41ae04 <mbedtls_mpi_copy+0x64>
  41adff:	e9 12 01 00 00       	jmpq   41af16 <mbedtls_mpi_copy+0x176>
  41ae04:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41ae08:	48 83 c0 10          	add    $0x10,%rax
  41ae0c:	48 89 c7             	mov    %rax,%rdi
  41ae0f:	e8 34 b3 02 00       	callq  446148 <getDecryptedValueQWord>
  41ae14:	48 83 f8 00          	cmp    $0x0,%rax
  41ae18:	0f 84 b2 00 00 00    	je     41aed0 <mbedtls_mpi_copy+0x130>
  41ae1e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41ae22:	48 83 c0 10          	add    $0x10,%rax
  41ae26:	48 89 c7             	mov    %rax,%rdi
  41ae29:	e8 1a b3 02 00       	callq  446148 <getDecryptedValueQWord>
  41ae2e:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  41ae32:	48 83 c7 08          	add    $0x8,%rdi
  41ae36:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  41ae3a:	e8 09 b3 02 00       	callq  446148 <getDecryptedValueQWord>
  41ae3f:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
  41ae43:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41ae47:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  41ae4b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41ae4f:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  41ae53:	48 c1 e1 03          	shl    $0x3,%rcx
  41ae57:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41ae5b:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
  41ae5f:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  41ae66:	00 
  41ae67:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  41ae6b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  41ae6f:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  41ae73:	48 89 4d 98          	mov    %rcx,-0x68(%rbp)
  41ae77:	48 89 55 90          	mov    %rdx,-0x70(%rbp)
  41ae7b:	e8 d6 aa 02 00       	callq  445956 <writeback_cache>
  41ae80:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
  41ae84:	48 8b 75 90          	mov    -0x70(%rbp),%rsi
  41ae88:	e8 58 b8 02 00       	callq  4466e5 <decryptArrayForLibCall>
  41ae8d:	31 f6                	xor    %esi,%esi
  41ae8f:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
  41ae93:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
  41ae97:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  41ae9b:	ff d0                	callq  *%rax
  41ae9d:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
  41aea1:	48 8b 75 90          	mov    -0x70(%rbp),%rsi
  41aea5:	48 89 45 88          	mov    %rax,-0x78(%rbp)
  41aea9:	e8 a8 b5 02 00       	callq  446456 <encryptArrayForLibCall>
  41aeae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41aeb2:	48 83 c0 10          	add    $0x10,%rax
  41aeb6:	48 89 c7             	mov    %rax,%rdi
  41aeb9:	e8 8a b2 02 00       	callq  446148 <getDecryptedValueQWord>
  41aebe:	48 89 45 80          	mov    %rax,-0x80(%rbp)
  41aec2:	e8 8f aa 02 00       	callq  445956 <writeback_cache>
  41aec7:	48 8b 7d 80          	mov    -0x80(%rbp),%rdi
  41aecb:	e8 10 62 fe ff       	callq  4010e0 <free@plt>
  41aed0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41aed4:	48 89 c7             	mov    %rax,%rdi
  41aed7:	be 01 00 00 00       	mov    $0x1,%esi
  41aedc:	e8 1d ad 02 00       	callq  445bfe <setEncryptedValueDWord>
  41aee1:	31 f6                	xor    %esi,%esi
  41aee3:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  41aee7:	48 83 c7 08          	add    $0x8,%rdi
  41aeeb:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  41aef2:	e8 05 ae 02 00       	callq  445cfc <setEncryptedValueQWord>
  41aef7:	31 c9                	xor    %ecx,%ecx
  41aef9:	89 ce                	mov    %ecx,%esi
  41aefb:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  41aeff:	48 83 c7 10          	add    $0x10,%rdi
  41af03:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
  41af0a:	e8 ed ad 02 00       	callq  445cfc <setEncryptedValueQWord>
  41af0f:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
  41af16:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
  41af1d:	e9 e0 01 00 00       	jmpq   41b102 <mbedtls_mpi_copy+0x362>
  41af22:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41af26:	48 83 c0 08          	add    $0x8,%rax
  41af2a:	48 89 c7             	mov    %rax,%rdi
  41af2d:	e8 16 b2 02 00       	callq  446148 <getDecryptedValueQWord>
  41af32:	48 83 e8 01          	sub    $0x1,%rax
  41af36:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  41af3a:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
  41af3f:	76 3b                	jbe    41af7c <mbedtls_mpi_copy+0x1dc>
  41af41:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41af45:	48 83 c0 10          	add    $0x10,%rax
  41af49:	48 89 c7             	mov    %rax,%rdi
  41af4c:	e8 f7 b1 02 00       	callq  446148 <getDecryptedValueQWord>
  41af51:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
  41af55:	48 c1 e7 03          	shl    $0x3,%rdi
  41af59:	48 01 f8             	add    %rdi,%rax
  41af5c:	48 89 c7             	mov    %rax,%rdi
  41af5f:	e8 e4 b1 02 00       	callq  446148 <getDecryptedValueQWord>
  41af64:	48 83 f8 00          	cmp    $0x0,%rax
  41af68:	74 02                	je     41af6c <mbedtls_mpi_copy+0x1cc>
  41af6a:	eb 10                	jmp    41af7c <mbedtls_mpi_copy+0x1dc>
  41af6c:	eb 00                	jmp    41af6e <mbedtls_mpi_copy+0x1ce>
  41af6e:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  41af72:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
  41af76:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  41af7a:	eb be                	jmp    41af3a <mbedtls_mpi_copy+0x19a>
  41af7c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  41af80:	48 83 c0 01          	add    $0x1,%rax
  41af84:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  41af88:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41af8c:	48 89 c7             	mov    %rax,%rdi
  41af8f:	e8 ba b0 02 00       	callq  44604e <getDecryptedValueDWord>
  41af94:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  41af98:	89 c6                	mov    %eax,%esi
  41af9a:	e8 5f ac 02 00       	callq  445bfe <setEncryptedValueDWord>
  41af9f:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  41afa3:	48 83 c7 08          	add    $0x8,%rdi
  41afa7:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
  41afae:	e8 95 b1 02 00       	callq  446148 <getDecryptedValueQWord>
  41afb3:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
  41afb7:	73 20                	jae    41afd9 <mbedtls_mpi_copy+0x239>
  41afb9:	eb 00                	jmp    41afbb <mbedtls_mpi_copy+0x21b>
  41afbb:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  41afbf:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
  41afc3:	e8 78 fb ff ff       	callq  41ab40 <mbedtls_mpi_grow>
  41afc8:	89 45 bc             	mov    %eax,-0x44(%rbp)
  41afcb:	83 f8 00             	cmp    $0x0,%eax
  41afce:	74 05                	je     41afd5 <mbedtls_mpi_copy+0x235>
  41afd0:	e9 27 01 00 00       	jmpq   41b0fc <mbedtls_mpi_copy+0x35c>
  41afd5:	eb 00                	jmp    41afd7 <mbedtls_mpi_copy+0x237>
  41afd7:	eb 7e                	jmp    41b057 <mbedtls_mpi_copy+0x2b7>
  41afd9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41afdd:	48 83 c0 10          	add    $0x10,%rax
  41afe1:	48 89 c7             	mov    %rax,%rdi
  41afe4:	e8 5f b1 02 00       	callq  446148 <getDecryptedValueQWord>
  41afe9:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
  41afed:	48 c1 e7 03          	shl    $0x3,%rdi
  41aff1:	48 01 f8             	add    %rdi,%rax
  41aff4:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  41aff8:	48 83 c7 08          	add    $0x8,%rdi
  41affc:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
  41b003:	e8 40 b1 02 00       	callq  446148 <getDecryptedValueQWord>
  41b008:	48 2b 45 b0          	sub    -0x50(%rbp),%rax
  41b00c:	48 c1 e0 03          	shl    $0x3,%rax
  41b010:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
  41b017:	e8 3a a9 02 00       	callq  445956 <writeback_cache>
  41b01c:	48 8b bd 58 ff ff ff 	mov    -0xa8(%rbp),%rdi
  41b023:	48 8b b5 50 ff ff ff 	mov    -0xb0(%rbp),%rsi
  41b02a:	e8 b6 b6 02 00       	callq  4466e5 <decryptArrayForLibCall>
  41b02f:	31 f6                	xor    %esi,%esi
  41b031:	48 8b bd 58 ff ff ff 	mov    -0xa8(%rbp),%rdi
  41b038:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
  41b03f:	e8 dc 5f fe ff       	callq  401020 <memset@plt>
  41b044:	48 8b bd 58 ff ff ff 	mov    -0xa8(%rbp),%rdi
  41b04b:	48 8b b5 50 ff ff ff 	mov    -0xb0(%rbp),%rsi
  41b052:	e8 ff b3 02 00       	callq  446456 <encryptArrayForLibCall>
  41b057:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41b05b:	48 83 c0 10          	add    $0x10,%rax
  41b05f:	48 89 c7             	mov    %rax,%rdi
  41b062:	e8 e1 b0 02 00       	callq  446148 <getDecryptedValueQWord>
  41b067:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  41b06b:	48 83 c7 10          	add    $0x10,%rdi
  41b06f:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  41b076:	e8 cd b0 02 00       	callq  446148 <getDecryptedValueQWord>
  41b07b:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
  41b07f:	48 c1 e7 03          	shl    $0x3,%rdi
  41b083:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
  41b08a:	48 89 bd 38 ff ff ff 	mov    %rdi,-0xc8(%rbp)
  41b091:	e8 c0 a8 02 00       	callq  445956 <writeback_cache>
  41b096:	48 8b bd 40 ff ff ff 	mov    -0xc0(%rbp),%rdi
  41b09d:	48 8b b5 38 ff ff ff 	mov    -0xc8(%rbp),%rsi
  41b0a4:	e8 3c b6 02 00       	callq  4466e5 <decryptArrayForLibCall>
  41b0a9:	48 8b bd 48 ff ff ff 	mov    -0xb8(%rbp),%rdi
  41b0b0:	48 8b b5 38 ff ff ff 	mov    -0xc8(%rbp),%rsi
  41b0b7:	e8 29 b6 02 00       	callq  4466e5 <decryptArrayForLibCall>
  41b0bc:	48 8b bd 48 ff ff ff 	mov    -0xb8(%rbp),%rdi
  41b0c3:	48 8b b5 40 ff ff ff 	mov    -0xc0(%rbp),%rsi
  41b0ca:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
  41b0d1:	e8 9a 60 fe ff       	callq  401170 <memcpy@plt>
  41b0d6:	48 8b bd 48 ff ff ff 	mov    -0xb8(%rbp),%rdi
  41b0dd:	48 8b b5 38 ff ff ff 	mov    -0xc8(%rbp),%rsi
  41b0e4:	e8 6d b3 02 00       	callq  446456 <encryptArrayForLibCall>
  41b0e9:	48 8b bd 40 ff ff ff 	mov    -0xc0(%rbp),%rdi
  41b0f0:	48 8b b5 38 ff ff ff 	mov    -0xc8(%rbp),%rsi
  41b0f7:	e8 5a b3 02 00       	callq  446456 <encryptArrayForLibCall>
  41b0fc:	8b 45 bc             	mov    -0x44(%rbp),%eax
  41b0ff:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  41b102:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  41b105:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%rbp)
  41b10b:	e8 46 a8 02 00       	callq  445956 <writeback_cache>
  41b110:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
  41b116:	48 81 c4 d0 00 00 00 	add    $0xd0,%rsp
  41b11d:	5d                   	pop    %rbp
  41b11e:	c3                   	retq   
  41b11f:	90                   	nop

000000000041b120 <mbedtls_mpi_lset>:
  41b120:	55                   	push   %rbp
  41b121:	48 89 e5             	mov    %rsp,%rbp
  41b124:	48 83 ec 30          	sub    $0x30,%rsp
  41b128:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41b12c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  41b130:	eb 00                	jmp    41b132 <mbedtls_mpi_lset+0x12>
  41b132:	eb 00                	jmp    41b134 <mbedtls_mpi_lset+0x14>
  41b134:	b8 01 00 00 00       	mov    $0x1,%eax
  41b139:	89 c6                	mov    %eax,%esi
  41b13b:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  41b13f:	e8 fc f9 ff ff       	callq  41ab40 <mbedtls_mpi_grow>
  41b144:	89 45 ec             	mov    %eax,-0x14(%rbp)
  41b147:	83 f8 00             	cmp    $0x0,%eax
  41b14a:	74 02                	je     41b14e <mbedtls_mpi_lset+0x2e>
  41b14c:	eb 6a                	jmp    41b1b8 <mbedtls_mpi_lset+0x98>
  41b14e:	eb 00                	jmp    41b150 <mbedtls_mpi_lset+0x30>
  41b150:	31 f6                	xor    %esi,%esi
  41b152:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41b156:	48 8b 40 10          	mov    0x10(%rax),%rax
  41b15a:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  41b15e:	48 8b 49 08          	mov    0x8(%rcx),%rcx
  41b162:	48 c1 e1 03          	shl    $0x3,%rcx
  41b166:	48 89 c7             	mov    %rax,%rdi
  41b169:	48 89 ca             	mov    %rcx,%rdx
  41b16c:	e8 af 5e fe ff       	callq  401020 <memset@plt>
  41b171:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  41b176:	7d 0e                	jge    41b186 <mbedtls_mpi_lset+0x66>
  41b178:	31 c0                	xor    %eax,%eax
  41b17a:	89 c1                	mov    %eax,%ecx
  41b17c:	48 2b 4d f0          	sub    -0x10(%rbp),%rcx
  41b180:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  41b184:	eb 08                	jmp    41b18e <mbedtls_mpi_lset+0x6e>
  41b186:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41b18a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  41b18e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41b192:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  41b196:	48 8b 49 10          	mov    0x10(%rcx),%rcx
  41b19a:	48 89 01             	mov    %rax,(%rcx)
  41b19d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41b1a1:	48 83 f8 00          	cmp    $0x0,%rax
  41b1a5:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  41b1aa:	be 01 00 00 00       	mov    $0x1,%esi
  41b1af:	0f 4c f2             	cmovl  %edx,%esi
  41b1b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41b1b6:	89 30                	mov    %esi,(%rax)
  41b1b8:	8b 45 ec             	mov    -0x14(%rbp),%eax
  41b1bb:	89 45 dc             	mov    %eax,-0x24(%rbp)
  41b1be:	e8 93 a7 02 00       	callq  445956 <writeback_cache>
  41b1c3:	8b 45 dc             	mov    -0x24(%rbp),%eax
  41b1c6:	48 83 c4 30          	add    $0x30,%rsp
  41b1ca:	5d                   	pop    %rbp
  41b1cb:	c3                   	retq   
  41b1cc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000041b1d0 <mbedtls_mpi_bitlen>:
  41b1d0:	55                   	push   %rbp
  41b1d1:	48 89 e5             	mov    %rsp,%rbp
  41b1d4:	48 83 ec 40          	sub    $0x40,%rsp
  41b1d8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  41b1dc:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  41b1e0:	48 83 c7 08          	add    $0x8,%rdi
  41b1e4:	e8 5f af 02 00       	callq  446148 <getDecryptedValueQWord>
  41b1e9:	48 83 f8 00          	cmp    $0x0,%rax
  41b1ed:	75 0d                	jne    41b1fc <mbedtls_mpi_bitlen+0x2c>
  41b1ef:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
  41b1f6:	00 
  41b1f7:	e9 ea 00 00 00       	jmpq   41b2e6 <mbedtls_mpi_bitlen+0x116>
  41b1fc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41b200:	48 83 c0 08          	add    $0x8,%rax
  41b204:	48 89 c7             	mov    %rax,%rdi
  41b207:	e8 3c af 02 00       	callq  446148 <getDecryptedValueQWord>
  41b20c:	48 83 e8 01          	sub    $0x1,%rax
  41b210:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  41b214:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  41b219:	76 3b                	jbe    41b256 <mbedtls_mpi_bitlen+0x86>
  41b21b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41b21f:	48 83 c0 10          	add    $0x10,%rax
  41b223:	48 89 c7             	mov    %rax,%rdi
  41b226:	e8 1d af 02 00       	callq  446148 <getDecryptedValueQWord>
  41b22b:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  41b22f:	48 c1 e7 03          	shl    $0x3,%rdi
  41b233:	48 01 f8             	add    %rdi,%rax
  41b236:	48 89 c7             	mov    %rax,%rdi
  41b239:	e8 0a af 02 00       	callq  446148 <getDecryptedValueQWord>
  41b23e:	48 83 f8 00          	cmp    $0x0,%rax
  41b242:	74 02                	je     41b246 <mbedtls_mpi_bitlen+0x76>
  41b244:	eb 10                	jmp    41b256 <mbedtls_mpi_bitlen+0x86>
  41b246:	eb 00                	jmp    41b248 <mbedtls_mpi_bitlen+0x78>
  41b248:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41b24c:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
  41b250:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  41b254:	eb be                	jmp    41b214 <mbedtls_mpi_bitlen+0x44>
  41b256:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41b25a:	48 83 c0 10          	add    $0x10,%rax
  41b25e:	48 89 c7             	mov    %rax,%rdi
  41b261:	e8 e2 ae 02 00       	callq  446148 <getDecryptedValueQWord>
  41b266:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  41b26a:	48 c1 e7 03          	shl    $0x3,%rdi
  41b26e:	48 01 f8             	add    %rdi,%rax
  41b271:	48 89 c7             	mov    %rax,%rdi
  41b274:	e8 cf ae 02 00       	callq  446148 <getDecryptedValueQWord>
  41b279:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41b27d:	48 b8 00 00 00 00 00 	movabs $0x8000000000000000,%rax
  41b284:	00 00 80 
  41b287:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  41b28b:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
  41b292:	00 
  41b293:	48 83 7d f0 40       	cmpq   $0x40,-0x10(%rbp)
  41b298:	73 2a                	jae    41b2c4 <mbedtls_mpi_bitlen+0xf4>
  41b29a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41b29e:	48 23 45 e8          	and    -0x18(%rbp),%rax
  41b2a2:	48 83 f8 00          	cmp    $0x0,%rax
  41b2a6:	74 02                	je     41b2aa <mbedtls_mpi_bitlen+0xda>
  41b2a8:	eb 1a                	jmp    41b2c4 <mbedtls_mpi_bitlen+0xf4>
  41b2aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b2ae:	48 c1 e8 01          	shr    $0x1,%rax
  41b2b2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  41b2b6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41b2ba:	48 83 c0 01          	add    $0x1,%rax
  41b2be:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41b2c2:	eb cf                	jmp    41b293 <mbedtls_mpi_bitlen+0xc3>
  41b2c4:	b8 40 00 00 00       	mov    $0x40,%eax
  41b2c9:	89 c1                	mov    %eax,%ecx
  41b2cb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  41b2cf:	48 29 d1             	sub    %rdx,%rcx
  41b2d2:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
  41b2d6:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  41b2da:	48 c1 e1 06          	shl    $0x6,%rcx
  41b2de:	48 03 4d c8          	add    -0x38(%rbp),%rcx
  41b2e2:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  41b2e6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41b2ea:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  41b2ee:	e8 63 a6 02 00       	callq  445956 <writeback_cache>
  41b2f3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41b2f7:	48 83 c4 40          	add    $0x40,%rsp
  41b2fb:	5d                   	pop    %rbp
  41b2fc:	c3                   	retq   
  41b2fd:	0f 1f 00             	nopl   (%rax)

000000000041b300 <mbedtls_mpi_size>:
  41b300:	55                   	push   %rbp
  41b301:	48 89 e5             	mov    %rsp,%rbp
  41b304:	48 83 ec 10          	sub    $0x10,%rsp
  41b308:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41b30c:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  41b310:	e8 bb fe ff ff       	callq  41b1d0 <mbedtls_mpi_bitlen>
  41b315:	48 83 c0 07          	add    $0x7,%rax
  41b319:	48 c1 e8 03          	shr    $0x3,%rax
  41b31d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41b321:	e8 30 a6 02 00       	callq  445956 <writeback_cache>
  41b326:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41b32a:	48 83 c4 10          	add    $0x10,%rsp
  41b32e:	5d                   	pop    %rbp
  41b32f:	c3                   	retq   

000000000041b330 <mbedtls_mpi_read_string>:
  41b330:	55                   	push   %rbp
  41b331:	48 89 e5             	mov    %rsp,%rbp
  41b334:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
  41b33b:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  41b33f:	89 75 ec             	mov    %esi,-0x14(%rbp)
  41b342:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
  41b346:	eb 00                	jmp    41b348 <mbedtls_mpi_read_string+0x18>
  41b348:	eb 00                	jmp    41b34a <mbedtls_mpi_read_string+0x1a>
  41b34a:	eb 00                	jmp    41b34c <mbedtls_mpi_read_string+0x1c>
  41b34c:	83 7d ec 02          	cmpl   $0x2,-0x14(%rbp)
  41b350:	7c 06                	jl     41b358 <mbedtls_mpi_read_string+0x28>
  41b352:	83 7d ec 10          	cmpl   $0x10,-0x14(%rbp)
  41b356:	7e 0c                	jle    41b364 <mbedtls_mpi_read_string+0x34>
  41b358:	c7 45 fc fc ff ff ff 	movl   $0xfffffffc,-0x4(%rbp)
  41b35f:	e9 76 02 00 00       	jmpq   41b5da <mbedtls_mpi_read_string+0x2aa>
  41b364:	48 8d 7d 80          	lea    -0x80(%rbp),%rdi
  41b368:	e8 e3 f5 ff ff       	callq  41a950 <mbedtls_mpi_init>
  41b36d:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  41b371:	e8 5a 5d fe ff       	callq  4010d0 <strlen@plt>
  41b376:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  41b37a:	83 7d ec 10          	cmpl   $0x10,-0x14(%rbp)
  41b37e:	0f 85 42 01 00 00    	jne    41b4c6 <mbedtls_mpi_read_string+0x196>
  41b384:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
  41b38b:	ff ff 3f 
  41b38e:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
  41b392:	76 0c                	jbe    41b3a0 <mbedtls_mpi_read_string+0x70>
  41b394:	c7 45 fc fc ff ff ff 	movl   $0xfffffffc,-0x4(%rbp)
  41b39b:	e9 3a 02 00 00       	jmpq   41b5da <mbedtls_mpi_read_string+0x2aa>
  41b3a0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41b3a4:	48 c1 e0 02          	shl    $0x2,%rax
  41b3a8:	48 c1 e8 06          	shr    $0x6,%rax
  41b3ac:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  41b3b0:	48 c1 e1 02          	shl    $0x2,%rcx
  41b3b4:	48 83 e1 3f          	and    $0x3f,%rcx
  41b3b8:	48 83 f9 00          	cmp    $0x0,%rcx
  41b3bc:	0f 95 c2             	setne  %dl
  41b3bf:	80 e2 01             	and    $0x1,%dl
  41b3c2:	0f b6 f2             	movzbl %dl,%esi
  41b3c5:	48 63 ce             	movslq %esi,%rcx
  41b3c8:	48 01 c8             	add    %rcx,%rax
  41b3cb:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  41b3cf:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  41b3d3:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  41b3d7:	e8 64 f7 ff ff       	callq  41ab40 <mbedtls_mpi_grow>
  41b3dc:	89 45 dc             	mov    %eax,-0x24(%rbp)
  41b3df:	83 f8 00             	cmp    $0x0,%eax
  41b3e2:	74 05                	je     41b3e9 <mbedtls_mpi_read_string+0xb9>
  41b3e4:	e9 e2 01 00 00       	jmpq   41b5cb <mbedtls_mpi_read_string+0x29b>
  41b3e9:	eb 00                	jmp    41b3eb <mbedtls_mpi_read_string+0xbb>
  41b3eb:	eb 00                	jmp    41b3ed <mbedtls_mpi_read_string+0xbd>
  41b3ed:	31 c0                	xor    %eax,%eax
  41b3ef:	89 c6                	mov    %eax,%esi
  41b3f1:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  41b3f5:	e8 26 fd ff ff       	callq  41b120 <mbedtls_mpi_lset>
  41b3fa:	89 45 dc             	mov    %eax,-0x24(%rbp)
  41b3fd:	83 f8 00             	cmp    $0x0,%eax
  41b400:	74 05                	je     41b407 <mbedtls_mpi_read_string+0xd7>
  41b402:	e9 c4 01 00 00       	jmpq   41b5cb <mbedtls_mpi_read_string+0x29b>
  41b407:	eb 00                	jmp    41b409 <mbedtls_mpi_read_string+0xd9>
  41b409:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41b40d:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  41b411:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
  41b418:	00 
  41b419:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  41b41e:	0f 86 9d 00 00 00    	jbe    41b4c1 <mbedtls_mpi_read_string+0x191>
  41b424:	48 83 7d d0 01       	cmpq   $0x1,-0x30(%rbp)
  41b429:	75 21                	jne    41b44c <mbedtls_mpi_read_string+0x11c>
  41b42b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41b42f:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  41b433:	48 83 e9 01          	sub    $0x1,%rcx
  41b437:	0f be 14 08          	movsbl (%rax,%rcx,1),%edx
  41b43b:	83 fa 2d             	cmp    $0x2d,%edx
  41b43e:	75 0c                	jne    41b44c <mbedtls_mpi_read_string+0x11c>
  41b440:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41b444:	c7 00 ff ff ff ff    	movl   $0xffffffff,(%rax)
  41b44a:	eb 75                	jmp    41b4c1 <mbedtls_mpi_read_string+0x191>
  41b44c:	eb 00                	jmp    41b44e <mbedtls_mpi_read_string+0x11e>
  41b44e:	8b 75 ec             	mov    -0x14(%rbp),%esi
  41b451:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41b455:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  41b459:	48 83 e9 01          	sub    $0x1,%rcx
  41b45d:	48 8d 7d b0          	lea    -0x50(%rbp),%rdi
  41b461:	0f be 14 08          	movsbl (%rax,%rcx,1),%edx
  41b465:	e8 96 01 00 00       	callq  41b600 <mpi_get_digit>
  41b46a:	89 45 dc             	mov    %eax,-0x24(%rbp)
  41b46d:	83 f8 00             	cmp    $0x0,%eax
  41b470:	74 05                	je     41b477 <mbedtls_mpi_read_string+0x147>
  41b472:	e9 54 01 00 00       	jmpq   41b5cb <mbedtls_mpi_read_string+0x29b>
  41b477:	eb 00                	jmp    41b479 <mbedtls_mpi_read_string+0x149>
  41b479:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  41b47d:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  41b481:	48 83 e1 0f          	and    $0xf,%rcx
  41b485:	48 c1 e1 02          	shl    $0x2,%rcx
  41b489:	48 d3 e0             	shl    %cl,%rax
  41b48c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  41b490:	48 8b 52 10          	mov    0x10(%rdx),%rdx
  41b494:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  41b498:	48 c1 ee 04          	shr    $0x4,%rsi
  41b49c:	48 0b 04 f2          	or     (%rdx,%rsi,8),%rax
  41b4a0:	48 89 04 f2          	mov    %rax,(%rdx,%rsi,8)
  41b4a4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41b4a8:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
  41b4ac:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  41b4b0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41b4b4:	48 83 c0 01          	add    $0x1,%rax
  41b4b8:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  41b4bc:	e9 58 ff ff ff       	jmpq   41b419 <mbedtls_mpi_read_string+0xe9>
  41b4c1:	e9 03 01 00 00       	jmpq   41b5c9 <mbedtls_mpi_read_string+0x299>
  41b4c6:	eb 00                	jmp    41b4c8 <mbedtls_mpi_read_string+0x198>
  41b4c8:	31 c0                	xor    %eax,%eax
  41b4ca:	89 c6                	mov    %eax,%esi
  41b4cc:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  41b4d0:	e8 4b fc ff ff       	callq  41b120 <mbedtls_mpi_lset>
  41b4d5:	89 45 dc             	mov    %eax,-0x24(%rbp)
  41b4d8:	83 f8 00             	cmp    $0x0,%eax
  41b4db:	74 05                	je     41b4e2 <mbedtls_mpi_read_string+0x1b2>
  41b4dd:	e9 e9 00 00 00       	jmpq   41b5cb <mbedtls_mpi_read_string+0x29b>
  41b4e2:	eb 00                	jmp    41b4e4 <mbedtls_mpi_read_string+0x1b4>
  41b4e4:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
  41b4eb:	00 
  41b4ec:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41b4f0:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
  41b4f4:	0f 83 cd 00 00 00    	jae    41b5c7 <mbedtls_mpi_read_string+0x297>
  41b4fa:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  41b4ff:	75 20                	jne    41b521 <mbedtls_mpi_read_string+0x1f1>
  41b501:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41b505:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  41b509:	0f be 14 08          	movsbl (%rax,%rcx,1),%edx
  41b50d:	83 fa 2d             	cmp    $0x2d,%edx
  41b510:	75 0f                	jne    41b521 <mbedtls_mpi_read_string+0x1f1>
  41b512:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41b516:	c7 00 ff ff ff ff    	movl   $0xffffffff,(%rax)
  41b51c:	e9 95 00 00 00       	jmpq   41b5b6 <mbedtls_mpi_read_string+0x286>
  41b521:	eb 00                	jmp    41b523 <mbedtls_mpi_read_string+0x1f3>
  41b523:	8b 75 ec             	mov    -0x14(%rbp),%esi
  41b526:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41b52a:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  41b52e:	48 8d 7d b0          	lea    -0x50(%rbp),%rdi
  41b532:	0f be 14 08          	movsbl (%rax,%rcx,1),%edx
  41b536:	e8 c5 00 00 00       	callq  41b600 <mpi_get_digit>
  41b53b:	89 45 dc             	mov    %eax,-0x24(%rbp)
  41b53e:	83 f8 00             	cmp    $0x0,%eax
  41b541:	74 05                	je     41b548 <mbedtls_mpi_read_string+0x218>
  41b543:	e9 83 00 00 00       	jmpq   41b5cb <mbedtls_mpi_read_string+0x29b>
  41b548:	eb 00                	jmp    41b54a <mbedtls_mpi_read_string+0x21a>
  41b54a:	eb 00                	jmp    41b54c <mbedtls_mpi_read_string+0x21c>
  41b54c:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  41b550:	48 63 55 ec          	movslq -0x14(%rbp),%rdx
  41b554:	48 8d 7d 80          	lea    -0x80(%rbp),%rdi
  41b558:	e8 63 01 00 00       	callq  41b6c0 <mbedtls_mpi_mul_int>
  41b55d:	89 45 dc             	mov    %eax,-0x24(%rbp)
  41b560:	83 f8 00             	cmp    $0x0,%eax
  41b563:	74 02                	je     41b567 <mbedtls_mpi_read_string+0x237>
  41b565:	eb 64                	jmp    41b5cb <mbedtls_mpi_read_string+0x29b>
  41b567:	eb 00                	jmp    41b569 <mbedtls_mpi_read_string+0x239>
  41b569:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41b56d:	83 38 01             	cmpl   $0x1,(%rax)
  41b570:	75 21                	jne    41b593 <mbedtls_mpi_read_string+0x263>
  41b572:	eb 00                	jmp    41b574 <mbedtls_mpi_read_string+0x244>
  41b574:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  41b578:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
  41b57c:	48 8d 75 80          	lea    -0x80(%rbp),%rsi
  41b580:	e8 eb 01 00 00       	callq  41b770 <mbedtls_mpi_add_int>
  41b585:	89 45 dc             	mov    %eax,-0x24(%rbp)
  41b588:	83 f8 00             	cmp    $0x0,%eax
  41b58b:	74 02                	je     41b58f <mbedtls_mpi_read_string+0x25f>
  41b58d:	eb 3c                	jmp    41b5cb <mbedtls_mpi_read_string+0x29b>
  41b58f:	eb 00                	jmp    41b591 <mbedtls_mpi_read_string+0x261>
  41b591:	eb 21                	jmp    41b5b4 <mbedtls_mpi_read_string+0x284>
  41b593:	eb 00                	jmp    41b595 <mbedtls_mpi_read_string+0x265>
  41b595:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  41b599:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
  41b59d:	48 8d 75 80          	lea    -0x80(%rbp),%rsi
  41b5a1:	e8 aa 02 00 00       	callq  41b850 <mbedtls_mpi_sub_int>
  41b5a6:	89 45 dc             	mov    %eax,-0x24(%rbp)
  41b5a9:	83 f8 00             	cmp    $0x0,%eax
  41b5ac:	74 02                	je     41b5b0 <mbedtls_mpi_read_string+0x280>
  41b5ae:	eb 1b                	jmp    41b5cb <mbedtls_mpi_read_string+0x29b>
  41b5b0:	eb 00                	jmp    41b5b2 <mbedtls_mpi_read_string+0x282>
  41b5b2:	eb 00                	jmp    41b5b4 <mbedtls_mpi_read_string+0x284>
  41b5b4:	eb 00                	jmp    41b5b6 <mbedtls_mpi_read_string+0x286>
  41b5b6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41b5ba:	48 83 c0 01          	add    $0x1,%rax
  41b5be:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  41b5c2:	e9 25 ff ff ff       	jmpq   41b4ec <mbedtls_mpi_read_string+0x1bc>
  41b5c7:	eb 00                	jmp    41b5c9 <mbedtls_mpi_read_string+0x299>
  41b5c9:	eb 00                	jmp    41b5cb <mbedtls_mpi_read_string+0x29b>
  41b5cb:	48 8d 7d 80          	lea    -0x80(%rbp),%rdi
  41b5cf:	e8 dc f3 ff ff       	callq  41a9b0 <mbedtls_mpi_free>
  41b5d4:	8b 45 dc             	mov    -0x24(%rbp),%eax
  41b5d7:	89 45 fc             	mov    %eax,-0x4(%rbp)
  41b5da:	8b 45 fc             	mov    -0x4(%rbp),%eax
  41b5dd:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
  41b5e3:	e8 6e a3 02 00       	callq  445956 <writeback_cache>
  41b5e8:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
  41b5ee:	48 81 c4 90 00 00 00 	add    $0x90,%rsp
  41b5f5:	5d                   	pop    %rbp
  41b5f6:	c3                   	retq   
  41b5f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41b5fe:	00 00 

000000000041b600 <mpi_get_digit>:
  41b600:	55                   	push   %rbp
  41b601:	48 89 e5             	mov    %rsp,%rbp
  41b604:	48 83 ec 20          	sub    $0x20,%rsp
  41b608:	88 d0                	mov    %dl,%al
  41b60a:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  41b60e:	89 75 ec             	mov    %esi,-0x14(%rbp)
  41b611:	88 45 eb             	mov    %al,-0x15(%rbp)
  41b614:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  41b618:	48 c7 07 ff 00 00 00 	movq   $0xff,(%rdi)
  41b61f:	0f be 55 eb          	movsbl -0x15(%rbp),%edx
  41b623:	83 fa 30             	cmp    $0x30,%edx
  41b626:	7c 1a                	jl     41b642 <mpi_get_digit+0x42>
  41b628:	0f be 45 eb          	movsbl -0x15(%rbp),%eax
  41b62c:	83 f8 39             	cmp    $0x39,%eax
  41b62f:	7f 11                	jg     41b642 <mpi_get_digit+0x42>
  41b631:	0f be 45 eb          	movsbl -0x15(%rbp),%eax
  41b635:	83 e8 30             	sub    $0x30,%eax
  41b638:	48 63 c8             	movslq %eax,%rcx
  41b63b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  41b63f:	48 89 0a             	mov    %rcx,(%rdx)
  41b642:	0f be 45 eb          	movsbl -0x15(%rbp),%eax
  41b646:	83 f8 41             	cmp    $0x41,%eax
  41b649:	7c 1a                	jl     41b665 <mpi_get_digit+0x65>
  41b64b:	0f be 45 eb          	movsbl -0x15(%rbp),%eax
  41b64f:	83 f8 46             	cmp    $0x46,%eax
  41b652:	7f 11                	jg     41b665 <mpi_get_digit+0x65>
  41b654:	0f be 45 eb          	movsbl -0x15(%rbp),%eax
  41b658:	83 e8 37             	sub    $0x37,%eax
  41b65b:	48 63 c8             	movslq %eax,%rcx
  41b65e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  41b662:	48 89 0a             	mov    %rcx,(%rdx)
  41b665:	0f be 45 eb          	movsbl -0x15(%rbp),%eax
  41b669:	83 f8 61             	cmp    $0x61,%eax
  41b66c:	7c 1a                	jl     41b688 <mpi_get_digit+0x88>
  41b66e:	0f be 45 eb          	movsbl -0x15(%rbp),%eax
  41b672:	83 f8 66             	cmp    $0x66,%eax
  41b675:	7f 11                	jg     41b688 <mpi_get_digit+0x88>
  41b677:	0f be 45 eb          	movsbl -0x15(%rbp),%eax
  41b67b:	83 e8 57             	sub    $0x57,%eax
  41b67e:	48 63 c8             	movslq %eax,%rcx
  41b681:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  41b685:	48 89 0a             	mov    %rcx,(%rdx)
  41b688:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41b68c:	48 8b 00             	mov    (%rax),%rax
  41b68f:	48 63 4d ec          	movslq -0x14(%rbp),%rcx
  41b693:	48 39 c8             	cmp    %rcx,%rax
  41b696:	72 09                	jb     41b6a1 <mpi_get_digit+0xa1>
  41b698:	c7 45 fc fa ff ff ff 	movl   $0xfffffffa,-0x4(%rbp)
  41b69f:	eb 07                	jmp    41b6a8 <mpi_get_digit+0xa8>
  41b6a1:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  41b6a8:	8b 45 fc             	mov    -0x4(%rbp),%eax
  41b6ab:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  41b6ae:	e8 a3 a2 02 00       	callq  445956 <writeback_cache>
  41b6b3:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  41b6b6:	48 83 c4 20          	add    $0x20,%rsp
  41b6ba:	5d                   	pop    %rbp
  41b6bb:	c3                   	retq   
  41b6bc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000041b6c0 <mbedtls_mpi_mul_int>:
  41b6c0:	55                   	push   %rbp
  41b6c1:	48 89 e5             	mov    %rsp,%rbp
  41b6c4:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
  41b6cb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41b6cf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  41b6d3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  41b6d7:	eb 00                	jmp    41b6d9 <mbedtls_mpi_mul_int+0x19>
  41b6d9:	eb 00                	jmp    41b6db <mbedtls_mpi_mul_int+0x1b>
  41b6db:	eb 00                	jmp    41b6dd <mbedtls_mpi_mul_int+0x1d>
  41b6dd:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
  41b6e1:	48 89 c7             	mov    %rax,%rdi
  41b6e4:	be 01 00 00 00       	mov    $0x1,%esi
  41b6e9:	e8 10 a5 02 00       	callq  445bfe <setEncryptedValueDWord>
  41b6ee:	be 01 00 00 00       	mov    $0x1,%esi
  41b6f3:	48 8d 7d c0          	lea    -0x40(%rbp),%rdi
  41b6f7:	48 83 c7 08          	add    $0x8,%rdi
  41b6fb:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  41b6ff:	e8 f8 a5 02 00       	callq  445cfc <setEncryptedValueQWord>
  41b704:	48 8d 75 a0          	lea    -0x60(%rbp),%rsi
  41b708:	48 8d 7d c0          	lea    -0x40(%rbp),%rdi
  41b70c:	48 83 c7 10          	add    $0x10,%rdi
  41b710:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  41b714:	e8 e3 a5 02 00       	callq  445cfc <setEncryptedValueQWord>
  41b719:	48 8d 75 a0          	lea    -0x60(%rbp),%rsi
  41b71d:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41b721:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
  41b725:	48 89 f7             	mov    %rsi,%rdi
  41b728:	48 8b 75 88          	mov    -0x78(%rbp),%rsi
  41b72c:	48 89 45 80          	mov    %rax,-0x80(%rbp)
  41b730:	e8 c7 a5 02 00       	callq  445cfc <setEncryptedValueQWord>
  41b735:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  41b739:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  41b73d:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
  41b741:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  41b748:	e8 73 0e 00 00       	callq  41c5c0 <mbedtls_mpi_mul_mpi>
  41b74d:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
  41b753:	e8 fe a1 02 00       	callq  445956 <writeback_cache>
  41b758:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
  41b75e:	48 81 c4 90 00 00 00 	add    $0x90,%rsp
  41b765:	5d                   	pop    %rbp
  41b766:	c3                   	retq   
  41b767:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41b76e:	00 00 

000000000041b770 <mbedtls_mpi_add_int>:
  41b770:	55                   	push   %rbp
  41b771:	48 89 e5             	mov    %rsp,%rbp
  41b774:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
  41b77b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41b77f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  41b783:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  41b787:	eb 00                	jmp    41b789 <mbedtls_mpi_add_int+0x19>
  41b789:	eb 00                	jmp    41b78b <mbedtls_mpi_add_int+0x1b>
  41b78b:	eb 00                	jmp    41b78d <mbedtls_mpi_add_int+0x1d>
  41b78d:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  41b792:	7d 0e                	jge    41b7a2 <mbedtls_mpi_add_int+0x32>
  41b794:	31 c0                	xor    %eax,%eax
  41b796:	89 c1                	mov    %eax,%ecx
  41b798:	48 2b 4d e8          	sub    -0x18(%rbp),%rcx
  41b79c:	48 89 4d 98          	mov    %rcx,-0x68(%rbp)
  41b7a0:	eb 08                	jmp    41b7aa <mbedtls_mpi_add_int+0x3a>
  41b7a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b7a6:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  41b7aa:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  41b7ae:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
  41b7b2:	48 89 cf             	mov    %rcx,%rdi
  41b7b5:	48 89 c6             	mov    %rax,%rsi
  41b7b8:	e8 3f a5 02 00       	callq  445cfc <setEncryptedValueQWord>
  41b7bd:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
  41b7c1:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  41b7c5:	48 83 fe 00          	cmp    $0x0,%rsi
  41b7c9:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  41b7ce:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  41b7d4:	44 0f 4c c2          	cmovl  %edx,%r8d
  41b7d8:	48 89 cf             	mov    %rcx,%rdi
  41b7db:	44 89 c6             	mov    %r8d,%esi
  41b7de:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  41b7e2:	e8 17 a4 02 00       	callq  445bfe <setEncryptedValueDWord>
  41b7e7:	ba 01 00 00 00       	mov    $0x1,%edx
  41b7ec:	89 d6                	mov    %edx,%esi
  41b7ee:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
  41b7f2:	48 83 c1 08          	add    $0x8,%rcx
  41b7f6:	48 89 cf             	mov    %rcx,%rdi
  41b7f9:	48 89 45 88          	mov    %rax,-0x78(%rbp)
  41b7fd:	e8 fa a4 02 00       	callq  445cfc <setEncryptedValueQWord>
  41b802:	48 8d 75 a0          	lea    -0x60(%rbp),%rsi
  41b806:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
  41b80a:	48 83 c1 10          	add    $0x10,%rcx
  41b80e:	48 89 cf             	mov    %rcx,%rdi
  41b811:	48 89 45 80          	mov    %rax,-0x80(%rbp)
  41b815:	e8 e2 a4 02 00       	callq  445cfc <setEncryptedValueQWord>
  41b81a:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  41b81e:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  41b822:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
  41b826:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  41b82d:	e8 6e 0c 00 00       	callq  41c4a0 <mbedtls_mpi_add_mpi>
  41b832:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
  41b838:	e8 19 a1 02 00       	callq  445956 <writeback_cache>
  41b83d:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
  41b843:	48 81 c4 90 00 00 00 	add    $0x90,%rsp
  41b84a:	5d                   	pop    %rbp
  41b84b:	c3                   	retq   
  41b84c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000041b850 <mbedtls_mpi_sub_int>:
  41b850:	55                   	push   %rbp
  41b851:	48 89 e5             	mov    %rsp,%rbp
  41b854:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
  41b85b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41b85f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  41b863:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  41b867:	eb 00                	jmp    41b869 <mbedtls_mpi_sub_int+0x19>
  41b869:	eb 00                	jmp    41b86b <mbedtls_mpi_sub_int+0x1b>
  41b86b:	eb 00                	jmp    41b86d <mbedtls_mpi_sub_int+0x1d>
  41b86d:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  41b872:	7d 0e                	jge    41b882 <mbedtls_mpi_sub_int+0x32>
  41b874:	31 c0                	xor    %eax,%eax
  41b876:	89 c1                	mov    %eax,%ecx
  41b878:	48 2b 4d e8          	sub    -0x18(%rbp),%rcx
  41b87c:	48 89 4d 98          	mov    %rcx,-0x68(%rbp)
  41b880:	eb 08                	jmp    41b88a <mbedtls_mpi_sub_int+0x3a>
  41b882:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41b886:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  41b88a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  41b88e:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
  41b892:	48 89 cf             	mov    %rcx,%rdi
  41b895:	48 89 c6             	mov    %rax,%rsi
  41b898:	e8 5f a4 02 00       	callq  445cfc <setEncryptedValueQWord>
  41b89d:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
  41b8a1:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  41b8a5:	48 83 fe 00          	cmp    $0x0,%rsi
  41b8a9:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  41b8ae:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  41b8b4:	44 0f 4c c2          	cmovl  %edx,%r8d
  41b8b8:	48 89 cf             	mov    %rcx,%rdi
  41b8bb:	44 89 c6             	mov    %r8d,%esi
  41b8be:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  41b8c2:	e8 37 a3 02 00       	callq  445bfe <setEncryptedValueDWord>
  41b8c7:	ba 01 00 00 00       	mov    $0x1,%edx
  41b8cc:	89 d6                	mov    %edx,%esi
  41b8ce:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
  41b8d2:	48 83 c1 08          	add    $0x8,%rcx
  41b8d6:	48 89 cf             	mov    %rcx,%rdi
  41b8d9:	48 89 45 88          	mov    %rax,-0x78(%rbp)
  41b8dd:	e8 1a a4 02 00       	callq  445cfc <setEncryptedValueQWord>
  41b8e2:	48 8d 75 a0          	lea    -0x60(%rbp),%rsi
  41b8e6:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
  41b8ea:	48 83 c1 10          	add    $0x10,%rcx
  41b8ee:	48 89 cf             	mov    %rcx,%rdi
  41b8f1:	48 89 45 80          	mov    %rax,-0x80(%rbp)
  41b8f5:	e8 02 a4 02 00       	callq  445cfc <setEncryptedValueQWord>
  41b8fa:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  41b8fe:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  41b902:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
  41b906:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  41b90d:	e8 1e 00 00 00       	callq  41b930 <mbedtls_mpi_sub_mpi>
  41b912:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
  41b918:	e8 39 a0 02 00       	callq  445956 <writeback_cache>
  41b91d:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
  41b923:	48 81 c4 90 00 00 00 	add    $0x90,%rsp
  41b92a:	5d                   	pop    %rbp
  41b92b:	c3                   	retq   
  41b92c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000041b930 <mbedtls_mpi_sub_mpi>:
  41b930:	55                   	push   %rbp
  41b931:	48 89 e5             	mov    %rsp,%rbp
  41b934:	48 83 ec 50          	sub    $0x50,%rsp
  41b938:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41b93c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  41b940:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  41b944:	eb 00                	jmp    41b946 <mbedtls_mpi_sub_mpi+0x16>
  41b946:	eb 00                	jmp    41b948 <mbedtls_mpi_sub_mpi+0x18>
  41b948:	eb 00                	jmp    41b94a <mbedtls_mpi_sub_mpi+0x1a>
  41b94a:	eb 00                	jmp    41b94c <mbedtls_mpi_sub_mpi+0x1c>
  41b94c:	eb 00                	jmp    41b94e <mbedtls_mpi_sub_mpi+0x1e>
  41b94e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41b952:	48 89 c7             	mov    %rax,%rdi
  41b955:	e8 f4 a6 02 00       	callq  44604e <getDecryptedValueDWord>
  41b95a:	89 45 e0             	mov    %eax,-0x20(%rbp)
  41b95d:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  41b961:	e8 e8 a6 02 00       	callq  44604e <getDecryptedValueDWord>
  41b966:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41b96a:	89 45 dc             	mov    %eax,-0x24(%rbp)
  41b96d:	e8 dc a6 02 00       	callq  44604e <getDecryptedValueDWord>
  41b972:	8b 4d dc             	mov    -0x24(%rbp),%ecx
  41b975:	0f af c8             	imul   %eax,%ecx
  41b978:	83 f9 00             	cmp    $0x0,%ecx
  41b97b:	0f 8e 81 00 00 00    	jle    41ba02 <mbedtls_mpi_sub_mpi+0xd2>
  41b981:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  41b985:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  41b989:	e8 c2 00 00 00       	callq  41ba50 <mbedtls_mpi_cmp_abs>
  41b98e:	83 f8 00             	cmp    $0x0,%eax
  41b991:	7c 37                	jl     41b9ca <mbedtls_mpi_sub_mpi+0x9a>
  41b993:	eb 00                	jmp    41b995 <mbedtls_mpi_sub_mpi+0x65>
  41b995:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  41b999:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  41b99d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  41b9a1:	e8 ba 02 00 00       	callq  41bc60 <mbedtls_mpi_sub_abs>
  41b9a6:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  41b9a9:	83 f8 00             	cmp    $0x0,%eax
  41b9ac:	74 05                	je     41b9b3 <mbedtls_mpi_sub_mpi+0x83>
  41b9ae:	e9 83 00 00 00       	jmpq   41ba36 <mbedtls_mpi_sub_mpi+0x106>
  41b9b3:	eb 00                	jmp    41b9b5 <mbedtls_mpi_sub_mpi+0x85>
  41b9b5:	8b 75 e0             	mov    -0x20(%rbp),%esi
  41b9b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41b9bc:	48 89 c7             	mov    %rax,%rdi
  41b9bf:	e8 3a a2 02 00       	callq  445bfe <setEncryptedValueDWord>
  41b9c4:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  41b9c8:	eb 36                	jmp    41ba00 <mbedtls_mpi_sub_mpi+0xd0>
  41b9ca:	eb 00                	jmp    41b9cc <mbedtls_mpi_sub_mpi+0x9c>
  41b9cc:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  41b9d0:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  41b9d4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  41b9d8:	e8 83 02 00 00       	callq  41bc60 <mbedtls_mpi_sub_abs>
  41b9dd:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  41b9e0:	83 f8 00             	cmp    $0x0,%eax
  41b9e3:	74 02                	je     41b9e7 <mbedtls_mpi_sub_mpi+0xb7>
  41b9e5:	eb 4f                	jmp    41ba36 <mbedtls_mpi_sub_mpi+0x106>
  41b9e7:	eb 00                	jmp    41b9e9 <mbedtls_mpi_sub_mpi+0xb9>
  41b9e9:	31 c0                	xor    %eax,%eax
  41b9eb:	2b 45 e0             	sub    -0x20(%rbp),%eax
  41b9ee:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  41b9f2:	48 89 cf             	mov    %rcx,%rdi
  41b9f5:	89 c6                	mov    %eax,%esi
  41b9f7:	e8 02 a2 02 00       	callq  445bfe <setEncryptedValueDWord>
  41b9fc:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  41ba00:	eb 32                	jmp    41ba34 <mbedtls_mpi_sub_mpi+0x104>
  41ba02:	eb 00                	jmp    41ba04 <mbedtls_mpi_sub_mpi+0xd4>
  41ba04:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  41ba08:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  41ba0c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  41ba10:	e8 8b 05 00 00       	callq  41bfa0 <mbedtls_mpi_add_abs>
  41ba15:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  41ba18:	83 f8 00             	cmp    $0x0,%eax
  41ba1b:	74 02                	je     41ba1f <mbedtls_mpi_sub_mpi+0xef>
  41ba1d:	eb 17                	jmp    41ba36 <mbedtls_mpi_sub_mpi+0x106>
  41ba1f:	eb 00                	jmp    41ba21 <mbedtls_mpi_sub_mpi+0xf1>
  41ba21:	8b 75 e0             	mov    -0x20(%rbp),%esi
  41ba24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41ba28:	48 89 c7             	mov    %rax,%rdi
  41ba2b:	e8 ce a1 02 00       	callq  445bfe <setEncryptedValueDWord>
  41ba30:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  41ba34:	eb 00                	jmp    41ba36 <mbedtls_mpi_sub_mpi+0x106>
  41ba36:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  41ba39:	89 45 bc             	mov    %eax,-0x44(%rbp)
  41ba3c:	e8 15 9f 02 00       	callq  445956 <writeback_cache>
  41ba41:	8b 45 bc             	mov    -0x44(%rbp),%eax
  41ba44:	48 83 c4 50          	add    $0x50,%rsp
  41ba48:	5d                   	pop    %rbp
  41ba49:	c3                   	retq   
  41ba4a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000041ba50 <mbedtls_mpi_cmp_abs>:
  41ba50:	55                   	push   %rbp
  41ba51:	48 89 e5             	mov    %rsp,%rbp
  41ba54:	48 83 ec 40          	sub    $0x40,%rsp
  41ba58:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  41ba5c:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  41ba60:	eb 00                	jmp    41ba62 <mbedtls_mpi_cmp_abs+0x12>
  41ba62:	eb 00                	jmp    41ba64 <mbedtls_mpi_cmp_abs+0x14>
  41ba64:	eb 00                	jmp    41ba66 <mbedtls_mpi_cmp_abs+0x16>
  41ba66:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41ba6a:	48 83 c0 08          	add    $0x8,%rax
  41ba6e:	48 89 c7             	mov    %rax,%rdi
  41ba71:	e8 d2 a6 02 00       	callq  446148 <getDecryptedValueQWord>
  41ba76:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  41ba7a:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  41ba7f:	76 3f                	jbe    41bac0 <mbedtls_mpi_cmp_abs+0x70>
  41ba81:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41ba85:	48 83 c0 10          	add    $0x10,%rax
  41ba89:	48 89 c7             	mov    %rax,%rdi
  41ba8c:	e8 b7 a6 02 00       	callq  446148 <getDecryptedValueQWord>
  41ba91:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  41ba95:	48 83 ef 01          	sub    $0x1,%rdi
  41ba99:	48 c1 e7 03          	shl    $0x3,%rdi
  41ba9d:	48 01 f8             	add    %rdi,%rax
  41baa0:	48 89 c7             	mov    %rax,%rdi
  41baa3:	e8 a0 a6 02 00       	callq  446148 <getDecryptedValueQWord>
  41baa8:	48 83 f8 00          	cmp    $0x0,%rax
  41baac:	74 02                	je     41bab0 <mbedtls_mpi_cmp_abs+0x60>
  41baae:	eb 10                	jmp    41bac0 <mbedtls_mpi_cmp_abs+0x70>
  41bab0:	eb 00                	jmp    41bab2 <mbedtls_mpi_cmp_abs+0x62>
  41bab2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41bab6:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
  41baba:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  41babe:	eb ba                	jmp    41ba7a <mbedtls_mpi_cmp_abs+0x2a>
  41bac0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41bac4:	48 83 c0 08          	add    $0x8,%rax
  41bac8:	48 89 c7             	mov    %rax,%rdi
  41bacb:	e8 78 a6 02 00       	callq  446148 <getDecryptedValueQWord>
  41bad0:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41bad4:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  41bad9:	76 3f                	jbe    41bb1a <mbedtls_mpi_cmp_abs+0xca>
  41badb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41badf:	48 83 c0 10          	add    $0x10,%rax
  41bae3:	48 89 c7             	mov    %rax,%rdi
  41bae6:	e8 5d a6 02 00       	callq  446148 <getDecryptedValueQWord>
  41baeb:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  41baef:	48 83 ef 01          	sub    $0x1,%rdi
  41baf3:	48 c1 e7 03          	shl    $0x3,%rdi
  41baf7:	48 01 f8             	add    %rdi,%rax
  41bafa:	48 89 c7             	mov    %rax,%rdi
  41bafd:	e8 46 a6 02 00       	callq  446148 <getDecryptedValueQWord>
  41bb02:	48 83 f8 00          	cmp    $0x0,%rax
  41bb06:	74 02                	je     41bb0a <mbedtls_mpi_cmp_abs+0xba>
  41bb08:	eb 10                	jmp    41bb1a <mbedtls_mpi_cmp_abs+0xca>
  41bb0a:	eb 00                	jmp    41bb0c <mbedtls_mpi_cmp_abs+0xbc>
  41bb0c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41bb10:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
  41bb14:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41bb18:	eb ba                	jmp    41bad4 <mbedtls_mpi_cmp_abs+0x84>
  41bb1a:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  41bb1f:	75 13                	jne    41bb34 <mbedtls_mpi_cmp_abs+0xe4>
  41bb21:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  41bb26:	75 0c                	jne    41bb34 <mbedtls_mpi_cmp_abs+0xe4>
  41bb28:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  41bb2f:	e9 15 01 00 00       	jmpq   41bc49 <mbedtls_mpi_cmp_abs+0x1f9>
  41bb34:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41bb38:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
  41bb3c:	76 0c                	jbe    41bb4a <mbedtls_mpi_cmp_abs+0xfa>
  41bb3e:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  41bb45:	e9 ff 00 00 00       	jmpq   41bc49 <mbedtls_mpi_cmp_abs+0x1f9>
  41bb4a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41bb4e:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
  41bb52:	76 0c                	jbe    41bb60 <mbedtls_mpi_cmp_abs+0x110>
  41bb54:	c7 45 fc ff ff ff ff 	movl   $0xffffffff,-0x4(%rbp)
  41bb5b:	e9 e9 00 00 00       	jmpq   41bc49 <mbedtls_mpi_cmp_abs+0x1f9>
  41bb60:	eb 00                	jmp    41bb62 <mbedtls_mpi_cmp_abs+0x112>
  41bb62:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  41bb67:	0f 86 d5 00 00 00    	jbe    41bc42 <mbedtls_mpi_cmp_abs+0x1f2>
  41bb6d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41bb71:	48 83 c0 10          	add    $0x10,%rax
  41bb75:	48 89 c7             	mov    %rax,%rdi
  41bb78:	e8 cb a5 02 00       	callq  446148 <getDecryptedValueQWord>
  41bb7d:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  41bb81:	48 83 ef 01          	sub    $0x1,%rdi
  41bb85:	48 c1 e7 03          	shl    $0x3,%rdi
  41bb89:	48 01 f8             	add    %rdi,%rax
  41bb8c:	48 89 c7             	mov    %rax,%rdi
  41bb8f:	e8 b4 a5 02 00       	callq  446148 <getDecryptedValueQWord>
  41bb94:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41bb98:	48 83 c7 10          	add    $0x10,%rdi
  41bb9c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  41bba0:	e8 a3 a5 02 00       	callq  446148 <getDecryptedValueQWord>
  41bba5:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  41bba9:	48 83 ef 01          	sub    $0x1,%rdi
  41bbad:	48 c1 e7 03          	shl    $0x3,%rdi
  41bbb1:	48 01 f8             	add    %rdi,%rax
  41bbb4:	48 89 c7             	mov    %rax,%rdi
  41bbb7:	e8 8c a5 02 00       	callq  446148 <getDecryptedValueQWord>
  41bbbc:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  41bbc0:	48 39 c7             	cmp    %rax,%rdi
  41bbc3:	76 09                	jbe    41bbce <mbedtls_mpi_cmp_abs+0x17e>
  41bbc5:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  41bbcc:	eb 7b                	jmp    41bc49 <mbedtls_mpi_cmp_abs+0x1f9>
  41bbce:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41bbd2:	48 83 c0 10          	add    $0x10,%rax
  41bbd6:	48 89 c7             	mov    %rax,%rdi
  41bbd9:	e8 6a a5 02 00       	callq  446148 <getDecryptedValueQWord>
  41bbde:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  41bbe2:	48 83 ef 01          	sub    $0x1,%rdi
  41bbe6:	48 c1 e7 03          	shl    $0x3,%rdi
  41bbea:	48 01 f8             	add    %rdi,%rax
  41bbed:	48 89 c7             	mov    %rax,%rdi
  41bbf0:	e8 53 a5 02 00       	callq  446148 <getDecryptedValueQWord>
  41bbf5:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41bbf9:	48 83 c7 10          	add    $0x10,%rdi
  41bbfd:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  41bc01:	e8 42 a5 02 00       	callq  446148 <getDecryptedValueQWord>
  41bc06:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  41bc0a:	48 83 ef 01          	sub    $0x1,%rdi
  41bc0e:	48 c1 e7 03          	shl    $0x3,%rdi
  41bc12:	48 01 f8             	add    %rdi,%rax
  41bc15:	48 89 c7             	mov    %rax,%rdi
  41bc18:	e8 2b a5 02 00       	callq  446148 <getDecryptedValueQWord>
  41bc1d:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  41bc21:	48 39 c7             	cmp    %rax,%rdi
  41bc24:	73 09                	jae    41bc2f <mbedtls_mpi_cmp_abs+0x1df>
  41bc26:	c7 45 fc ff ff ff ff 	movl   $0xffffffff,-0x4(%rbp)
  41bc2d:	eb 1a                	jmp    41bc49 <mbedtls_mpi_cmp_abs+0x1f9>
  41bc2f:	eb 00                	jmp    41bc31 <mbedtls_mpi_cmp_abs+0x1e1>
  41bc31:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41bc35:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
  41bc39:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  41bc3d:	e9 20 ff ff ff       	jmpq   41bb62 <mbedtls_mpi_cmp_abs+0x112>
  41bc42:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  41bc49:	8b 45 fc             	mov    -0x4(%rbp),%eax
  41bc4c:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  41bc4f:	e8 02 9d 02 00       	callq  445956 <writeback_cache>
  41bc54:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  41bc57:	48 83 c4 40          	add    $0x40,%rsp
  41bc5b:	5d                   	pop    %rbp
  41bc5c:	c3                   	retq   
  41bc5d:	0f 1f 00             	nopl   (%rax)

000000000041bc60 <mbedtls_mpi_sub_abs>:
  41bc60:	55                   	push   %rbp
  41bc61:	48 89 e5             	mov    %rsp,%rbp
  41bc64:	48 81 ec 10 01 00 00 	sub    $0x110,%rsp
  41bc6b:	48 89 7d c0          	mov    %rdi,-0x40(%rbp)
  41bc6f:	48 89 75 b8          	mov    %rsi,-0x48(%rbp)
  41bc73:	48 89 55 b0          	mov    %rdx,-0x50(%rbp)
  41bc77:	eb 00                	jmp    41bc79 <mbedtls_mpi_sub_abs+0x19>
  41bc79:	eb 00                	jmp    41bc7b <mbedtls_mpi_sub_abs+0x1b>
  41bc7b:	eb 00                	jmp    41bc7d <mbedtls_mpi_sub_abs+0x1d>
  41bc7d:	eb 00                	jmp    41bc7f <mbedtls_mpi_sub_abs+0x1f>
  41bc7f:	eb 00                	jmp    41bc81 <mbedtls_mpi_sub_abs+0x21>
  41bc81:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
  41bc85:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
  41bc89:	e8 c2 fd ff ff       	callq  41ba50 <mbedtls_mpi_cmp_abs>
  41bc8e:	83 f8 00             	cmp    $0x0,%eax
  41bc91:	7d 0c                	jge    41bc9f <mbedtls_mpi_sub_abs+0x3f>
  41bc93:	c7 45 cc f6 ff ff ff 	movl   $0xfffffff6,-0x34(%rbp)
  41bc9a:	e9 da 02 00 00       	jmpq   41bf79 <mbedtls_mpi_sub_abs+0x319>
  41bc9f:	48 8d 45 80          	lea    -0x80(%rbp),%rax
  41bca3:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  41bca7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41bcab:	48 89 c7             	mov    %rax,%rdi
  41bcae:	be 01 00 00 00       	mov    $0x1,%esi
  41bcb3:	e8 46 9f 02 00       	callq  445bfe <setEncryptedValueDWord>
  41bcb8:	31 f6                	xor    %esi,%esi
  41bcba:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  41bcbe:	48 83 c7 08          	add    $0x8,%rdi
  41bcc2:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
  41bcc9:	e8 2e a0 02 00       	callq  445cfc <setEncryptedValueQWord>
  41bcce:	31 c9                	xor    %ecx,%ecx
  41bcd0:	89 ce                	mov    %ecx,%esi
  41bcd2:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  41bcd6:	48 83 c7 10          	add    $0x10,%rdi
  41bcda:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
  41bce1:	e8 16 a0 02 00       	callq  445cfc <setEncryptedValueQWord>
  41bce6:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
  41bcea:	48 3b 75 b0          	cmp    -0x50(%rbp),%rsi
  41bcee:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
  41bcf5:	75 29                	jne    41bd20 <mbedtls_mpi_sub_abs+0xc0>
  41bcf7:	eb 00                	jmp    41bcf9 <mbedtls_mpi_sub_abs+0x99>
  41bcf9:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
  41bcfd:	48 8d 7d 80          	lea    -0x80(%rbp),%rdi
  41bd01:	e8 9a f0 ff ff       	callq  41ada0 <mbedtls_mpi_copy>
  41bd06:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
  41bd0c:	83 f8 00             	cmp    $0x0,%eax
  41bd0f:	74 05                	je     41bd16 <mbedtls_mpi_sub_abs+0xb6>
  41bd11:	e9 07 01 00 00       	jmpq   41be1d <mbedtls_mpi_sub_abs+0x1bd>
  41bd16:	eb 00                	jmp    41bd18 <mbedtls_mpi_sub_abs+0xb8>
  41bd18:	48 8d 45 80          	lea    -0x80(%rbp),%rax
  41bd1c:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  41bd20:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41bd24:	48 3b 45 b8          	cmp    -0x48(%rbp),%rax
  41bd28:	74 23                	je     41bd4d <mbedtls_mpi_sub_abs+0xed>
  41bd2a:	eb 00                	jmp    41bd2c <mbedtls_mpi_sub_abs+0xcc>
  41bd2c:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  41bd30:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  41bd34:	e8 67 f0 ff ff       	callq  41ada0 <mbedtls_mpi_copy>
  41bd39:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
  41bd3f:	83 f8 00             	cmp    $0x0,%eax
  41bd42:	74 05                	je     41bd49 <mbedtls_mpi_sub_abs+0xe9>
  41bd44:	e9 d4 00 00 00       	jmpq   41be1d <mbedtls_mpi_sub_abs+0x1bd>
  41bd49:	eb 00                	jmp    41bd4b <mbedtls_mpi_sub_abs+0xeb>
  41bd4b:	eb 00                	jmp    41bd4d <mbedtls_mpi_sub_abs+0xed>
  41bd4d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41bd51:	48 89 c7             	mov    %rax,%rdi
  41bd54:	be 01 00 00 00       	mov    $0x1,%esi
  41bd59:	e8 a0 9e 02 00       	callq  445bfe <setEncryptedValueDWord>
  41bd5e:	c7 85 7c ff ff ff 00 	movl   $0x0,-0x84(%rbp)
  41bd65:	00 00 00 
  41bd68:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
  41bd6c:	48 83 c7 08          	add    $0x8,%rdi
  41bd70:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
  41bd77:	e8 cc a3 02 00       	callq  446148 <getDecryptedValueQWord>
  41bd7c:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
  41bd83:	48 83 bd 70 ff ff ff 	cmpq   $0x0,-0x90(%rbp)
  41bd8a:	00 
  41bd8b:	76 48                	jbe    41bdd5 <mbedtls_mpi_sub_abs+0x175>
  41bd8d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  41bd91:	48 83 c0 10          	add    $0x10,%rax
  41bd95:	48 89 c7             	mov    %rax,%rdi
  41bd98:	e8 ab a3 02 00       	callq  446148 <getDecryptedValueQWord>
  41bd9d:	48 8b bd 70 ff ff ff 	mov    -0x90(%rbp),%rdi
  41bda4:	48 83 ef 01          	sub    $0x1,%rdi
  41bda8:	48 c1 e7 03          	shl    $0x3,%rdi
  41bdac:	48 01 f8             	add    %rdi,%rax
  41bdaf:	48 89 c7             	mov    %rax,%rdi
  41bdb2:	e8 91 a3 02 00       	callq  446148 <getDecryptedValueQWord>
  41bdb7:	48 83 f8 00          	cmp    $0x0,%rax
  41bdbb:	74 02                	je     41bdbf <mbedtls_mpi_sub_abs+0x15f>
  41bdbd:	eb 16                	jmp    41bdd5 <mbedtls_mpi_sub_abs+0x175>
  41bdbf:	eb 00                	jmp    41bdc1 <mbedtls_mpi_sub_abs+0x161>
  41bdc1:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  41bdc8:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
  41bdcc:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
  41bdd3:	eb ae                	jmp    41bd83 <mbedtls_mpi_sub_abs+0x123>
  41bdd5:	48 8b bd 70 ff ff ff 	mov    -0x90(%rbp),%rdi
  41bddc:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  41bde0:	48 83 c0 10          	add    $0x10,%rax
  41bde4:	48 89 bd 48 ff ff ff 	mov    %rdi,-0xb8(%rbp)
  41bdeb:	48 89 c7             	mov    %rax,%rdi
  41bdee:	e8 55 a3 02 00       	callq  446148 <getDecryptedValueQWord>
  41bdf3:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  41bdf7:	48 83 c7 10          	add    $0x10,%rdi
  41bdfb:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
  41be02:	e8 41 a3 02 00       	callq  446148 <getDecryptedValueQWord>
  41be07:	48 8b bd 48 ff ff ff 	mov    -0xb8(%rbp),%rdi
  41be0e:	48 8b b5 40 ff ff ff 	mov    -0xc0(%rbp),%rsi
  41be15:	48 89 c2             	mov    %rax,%rdx
  41be18:	e8 d3 04 00 00       	callq  41c2f0 <mpi_sub_hlp>
  41be1d:	48 8d 45 80          	lea    -0x80(%rbp),%rax
  41be21:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41be25:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  41be2a:	75 05                	jne    41be31 <mbedtls_mpi_sub_abs+0x1d1>
  41be2c:	e9 3f 01 00 00       	jmpq   41bf70 <mbedtls_mpi_sub_abs+0x310>
  41be31:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41be35:	48 83 c0 10          	add    $0x10,%rax
  41be39:	48 89 c7             	mov    %rax,%rdi
  41be3c:	e8 07 a3 02 00       	callq  446148 <getDecryptedValueQWord>
  41be41:	48 83 f8 00          	cmp    $0x0,%rax
  41be45:	0f 84 df 00 00 00    	je     41bf2a <mbedtls_mpi_sub_abs+0x2ca>
  41be4b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41be4f:	48 83 c0 10          	add    $0x10,%rax
  41be53:	48 89 c7             	mov    %rax,%rdi
  41be56:	e8 ed a2 02 00       	callq  446148 <getDecryptedValueQWord>
  41be5b:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  41be5f:	48 83 c7 08          	add    $0x8,%rdi
  41be63:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
  41be6a:	e8 d9 a2 02 00       	callq  446148 <getDecryptedValueQWord>
  41be6f:	48 8b bd 38 ff ff ff 	mov    -0xc8(%rbp),%rdi
  41be76:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41be7a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  41be7e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41be82:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  41be86:	48 c1 e1 03          	shl    $0x3,%rcx
  41be8a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41be8e:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
  41be92:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  41be99:	00 
  41be9a:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  41be9e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  41bea2:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
  41bea9:	48 89 8d 28 ff ff ff 	mov    %rcx,-0xd8(%rbp)
  41beb0:	48 89 95 20 ff ff ff 	mov    %rdx,-0xe0(%rbp)
  41beb7:	e8 9a 9a 02 00       	callq  445956 <writeback_cache>
  41bebc:	48 8b bd 28 ff ff ff 	mov    -0xd8(%rbp),%rdi
  41bec3:	48 8b b5 20 ff ff ff 	mov    -0xe0(%rbp),%rsi
  41beca:	e8 16 a8 02 00       	callq  4466e5 <decryptArrayForLibCall>
  41becf:	31 f6                	xor    %esi,%esi
  41bed1:	48 8b bd 28 ff ff ff 	mov    -0xd8(%rbp),%rdi
  41bed8:	48 8b 95 20 ff ff ff 	mov    -0xe0(%rbp),%rdx
  41bedf:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
  41bee6:	ff d0                	callq  *%rax
  41bee8:	48 8b bd 28 ff ff ff 	mov    -0xd8(%rbp),%rdi
  41beef:	48 8b b5 20 ff ff ff 	mov    -0xe0(%rbp),%rsi
  41bef6:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
  41befd:	e8 54 a5 02 00       	callq  446456 <encryptArrayForLibCall>
  41bf02:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41bf06:	48 83 c0 10          	add    $0x10,%rax
  41bf0a:	48 89 c7             	mov    %rax,%rdi
  41bf0d:	e8 36 a2 02 00       	callq  446148 <getDecryptedValueQWord>
  41bf12:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
  41bf19:	e8 38 9a 02 00       	callq  445956 <writeback_cache>
  41bf1e:	48 8b bd 10 ff ff ff 	mov    -0xf0(%rbp),%rdi
  41bf25:	e8 b6 51 fe ff       	callq  4010e0 <free@plt>
  41bf2a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41bf2e:	48 89 c7             	mov    %rax,%rdi
  41bf31:	be 01 00 00 00       	mov    $0x1,%esi
  41bf36:	e8 c3 9c 02 00       	callq  445bfe <setEncryptedValueDWord>
  41bf3b:	31 f6                	xor    %esi,%esi
  41bf3d:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  41bf41:	48 83 c7 08          	add    $0x8,%rdi
  41bf45:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
  41bf4c:	e8 ab 9d 02 00       	callq  445cfc <setEncryptedValueQWord>
  41bf51:	31 c9                	xor    %ecx,%ecx
  41bf53:	89 ce                	mov    %ecx,%esi
  41bf55:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  41bf59:	48 83 c7 10          	add    $0x10,%rdi
  41bf5d:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
  41bf64:	e8 93 9d 02 00       	callq  445cfc <setEncryptedValueQWord>
  41bf69:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
  41bf70:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
  41bf76:	89 45 cc             	mov    %eax,-0x34(%rbp)
  41bf79:	8b 45 cc             	mov    -0x34(%rbp),%eax
  41bf7c:	89 85 f4 fe ff ff    	mov    %eax,-0x10c(%rbp)
  41bf82:	e8 cf 99 02 00       	callq  445956 <writeback_cache>
  41bf87:	8b 85 f4 fe ff ff    	mov    -0x10c(%rbp),%eax
  41bf8d:	48 81 c4 10 01 00 00 	add    $0x110,%rsp
  41bf94:	5d                   	pop    %rbp
  41bf95:	c3                   	retq   
  41bf96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41bf9d:	00 00 00 

000000000041bfa0 <mbedtls_mpi_add_abs>:
  41bfa0:	55                   	push   %rbp
  41bfa1:	48 89 e5             	mov    %rsp,%rbp
  41bfa4:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
  41bfab:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41bfaf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  41bfb3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  41bfb7:	eb 00                	jmp    41bfb9 <mbedtls_mpi_add_abs+0x19>
  41bfb9:	eb 00                	jmp    41bfbb <mbedtls_mpi_add_abs+0x1b>
  41bfbb:	eb 00                	jmp    41bfbd <mbedtls_mpi_add_abs+0x1d>
  41bfbd:	eb 00                	jmp    41bfbf <mbedtls_mpi_add_abs+0x1f>
  41bfbf:	eb 00                	jmp    41bfc1 <mbedtls_mpi_add_abs+0x21>
  41bfc1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41bfc5:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
  41bfc9:	75 18                	jne    41bfe3 <mbedtls_mpi_add_abs+0x43>
  41bfcb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41bfcf:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  41bfd3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41bfd7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41bfdb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  41bfdf:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  41bfe3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41bfe7:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
  41bfeb:	74 20                	je     41c00d <mbedtls_mpi_add_abs+0x6d>
  41bfed:	eb 00                	jmp    41bfef <mbedtls_mpi_add_abs+0x4f>
  41bfef:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  41bff3:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  41bff7:	e8 a4 ed ff ff       	callq  41ada0 <mbedtls_mpi_copy>
  41bffc:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  41bfff:	83 f8 00             	cmp    $0x0,%eax
  41c002:	74 05                	je     41c009 <mbedtls_mpi_add_abs+0x69>
  41c004:	e9 c4 02 00 00       	jmpq   41c2cd <mbedtls_mpi_add_abs+0x32d>
  41c009:	eb 00                	jmp    41c00b <mbedtls_mpi_add_abs+0x6b>
  41c00b:	eb 00                	jmp    41c00d <mbedtls_mpi_add_abs+0x6d>
  41c00d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41c011:	48 89 c7             	mov    %rax,%rdi
  41c014:	be 01 00 00 00       	mov    $0x1,%esi
  41c019:	e8 e0 9b 02 00       	callq  445bfe <setEncryptedValueDWord>
  41c01e:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41c022:	48 83 c7 08          	add    $0x8,%rdi
  41c026:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  41c02a:	e8 19 a1 02 00       	callq  446148 <getDecryptedValueQWord>
  41c02f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  41c033:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  41c038:	76 3f                	jbe    41c079 <mbedtls_mpi_add_abs+0xd9>
  41c03a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c03e:	48 83 c0 10          	add    $0x10,%rax
  41c042:	48 89 c7             	mov    %rax,%rdi
  41c045:	e8 fe a0 02 00       	callq  446148 <getDecryptedValueQWord>
  41c04a:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  41c04e:	48 83 ef 01          	sub    $0x1,%rdi
  41c052:	48 c1 e7 03          	shl    $0x3,%rdi
  41c056:	48 01 f8             	add    %rdi,%rax
  41c059:	48 89 c7             	mov    %rax,%rdi
  41c05c:	e8 e7 a0 02 00       	callq  446148 <getDecryptedValueQWord>
  41c061:	48 83 f8 00          	cmp    $0x0,%rax
  41c065:	74 02                	je     41c069 <mbedtls_mpi_add_abs+0xc9>
  41c067:	eb 10                	jmp    41c079 <mbedtls_mpi_add_abs+0xd9>
  41c069:	eb 00                	jmp    41c06b <mbedtls_mpi_add_abs+0xcb>
  41c06b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41c06f:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
  41c073:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  41c077:	eb ba                	jmp    41c033 <mbedtls_mpi_add_abs+0x93>
  41c079:	eb 00                	jmp    41c07b <mbedtls_mpi_add_abs+0xdb>
  41c07b:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  41c07f:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  41c083:	e8 b8 ea ff ff       	callq  41ab40 <mbedtls_mpi_grow>
  41c088:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  41c08b:	83 f8 00             	cmp    $0x0,%eax
  41c08e:	74 05                	je     41c095 <mbedtls_mpi_add_abs+0xf5>
  41c090:	e9 38 02 00 00       	jmpq   41c2cd <mbedtls_mpi_add_abs+0x32d>
  41c095:	eb 00                	jmp    41c097 <mbedtls_mpi_add_abs+0xf7>
  41c097:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c09b:	48 83 c0 10          	add    $0x10,%rax
  41c09f:	48 89 c7             	mov    %rax,%rdi
  41c0a2:	e8 a1 a0 02 00       	callq  446148 <getDecryptedValueQWord>
  41c0a7:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  41c0ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41c0af:	48 83 c0 10          	add    $0x10,%rax
  41c0b3:	48 89 c7             	mov    %rax,%rdi
  41c0b6:	e8 8d a0 02 00       	callq  446148 <getDecryptedValueQWord>
  41c0bb:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  41c0bf:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
  41c0c6:	00 
  41c0c7:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
  41c0ce:	00 
  41c0cf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41c0d3:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
  41c0d7:	0f 83 f2 00 00 00    	jae    41c1cf <mbedtls_mpi_add_abs+0x22f>
  41c0dd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41c0e1:	48 89 c7             	mov    %rax,%rdi
  41c0e4:	e8 5f a0 02 00       	callq  446148 <getDecryptedValueQWord>
  41c0e9:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  41c0ed:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  41c0f1:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  41c0f5:	48 89 f9             	mov    %rdi,%rcx
  41c0f8:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
  41c0fc:	48 89 cf             	mov    %rcx,%rdi
  41c0ff:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  41c103:	e8 40 a0 02 00       	callq  446148 <getDecryptedValueQWord>
  41c108:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  41c10c:	48 01 c8             	add    %rcx,%rax
  41c10f:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
  41c113:	48 89 cf             	mov    %rcx,%rdi
  41c116:	48 89 c6             	mov    %rax,%rsi
  41c119:	e8 de 9b 02 00       	callq  445cfc <setEncryptedValueQWord>
  41c11e:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  41c122:	48 89 cf             	mov    %rcx,%rdi
  41c125:	48 89 45 88          	mov    %rax,-0x78(%rbp)
  41c129:	e8 1a a0 02 00       	callq  446148 <getDecryptedValueQWord>
  41c12e:	48 3b 45 b8          	cmp    -0x48(%rbp),%rax
  41c132:	0f 92 c2             	setb   %dl
  41c135:	80 e2 01             	and    $0x1,%dl
  41c138:	44 0f b6 c2          	movzbl %dl,%r8d
  41c13c:	49 63 c0             	movslq %r8d,%rax
  41c13f:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  41c143:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  41c147:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  41c14b:	48 89 ce             	mov    %rcx,%rsi
  41c14e:	48 89 f7             	mov    %rsi,%rdi
  41c151:	48 89 45 80          	mov    %rax,-0x80(%rbp)
  41c155:	48 89 8d 78 ff ff ff 	mov    %rcx,-0x88(%rbp)
  41c15c:	e8 e7 9f 02 00       	callq  446148 <getDecryptedValueQWord>
  41c161:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
  41c165:	48 01 c8             	add    %rcx,%rax
  41c168:	48 8b 8d 78 ff ff ff 	mov    -0x88(%rbp),%rcx
  41c16f:	48 89 cf             	mov    %rcx,%rdi
  41c172:	48 89 c6             	mov    %rax,%rsi
  41c175:	e8 82 9b 02 00       	callq  445cfc <setEncryptedValueQWord>
  41c17a:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  41c17e:	48 89 cf             	mov    %rcx,%rdi
  41c181:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
  41c188:	e8 bb 9f 02 00       	callq  446148 <getDecryptedValueQWord>
  41c18d:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
  41c191:	0f 92 c2             	setb   %dl
  41c194:	80 e2 01             	and    $0x1,%dl
  41c197:	44 0f b6 c2          	movzbl %dl,%r8d
  41c19b:	49 63 c0             	movslq %r8d,%rax
  41c19e:	48 03 45 b8          	add    -0x48(%rbp),%rax
  41c1a2:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  41c1a6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41c1aa:	48 83 c0 01          	add    $0x1,%rax
  41c1ae:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41c1b2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41c1b6:	48 83 c0 08          	add    $0x8,%rax
  41c1ba:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  41c1be:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41c1c2:	48 83 c0 08          	add    $0x8,%rax
  41c1c6:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  41c1ca:	e9 00 ff ff ff       	jmpq   41c0cf <mbedtls_mpi_add_abs+0x12f>
  41c1cf:	eb 00                	jmp    41c1d1 <mbedtls_mpi_add_abs+0x231>
  41c1d1:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
  41c1d6:	0f 84 ef 00 00 00    	je     41c2cb <mbedtls_mpi_add_abs+0x32b>
  41c1dc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41c1e0:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  41c1e4:	48 83 c1 08          	add    $0x8,%rcx
  41c1e8:	48 89 cf             	mov    %rcx,%rdi
  41c1eb:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
  41c1f2:	e8 51 9f 02 00       	callq  446148 <getDecryptedValueQWord>
  41c1f7:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
  41c1fe:	48 39 c1             	cmp    %rax,%rcx
  41c201:	72 44                	jb     41c247 <mbedtls_mpi_add_abs+0x2a7>
  41c203:	eb 00                	jmp    41c205 <mbedtls_mpi_add_abs+0x265>
  41c205:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  41c209:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41c20d:	48 83 c0 01          	add    $0x1,%rax
  41c211:	48 89 c6             	mov    %rax,%rsi
  41c214:	e8 27 e9 ff ff       	callq  41ab40 <mbedtls_mpi_grow>
  41c219:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  41c21c:	83 f8 00             	cmp    $0x0,%eax
  41c21f:	74 05                	je     41c226 <mbedtls_mpi_add_abs+0x286>
  41c221:	e9 a7 00 00 00       	jmpq   41c2cd <mbedtls_mpi_add_abs+0x32d>
  41c226:	eb 00                	jmp    41c228 <mbedtls_mpi_add_abs+0x288>
  41c228:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41c22c:	48 83 c0 10          	add    $0x10,%rax
  41c230:	48 89 c7             	mov    %rax,%rdi
  41c233:	e8 10 9f 02 00       	callq  446148 <getDecryptedValueQWord>
  41c238:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  41c23c:	48 c1 e7 03          	shl    $0x3,%rdi
  41c240:	48 01 f8             	add    %rdi,%rax
  41c243:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  41c247:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  41c24b:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  41c24f:	48 89 ca             	mov    %rcx,%rdx
  41c252:	48 89 d7             	mov    %rdx,%rdi
  41c255:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
  41c25c:	48 89 8d 58 ff ff ff 	mov    %rcx,-0xa8(%rbp)
  41c263:	e8 e0 9e 02 00       	callq  446148 <getDecryptedValueQWord>
  41c268:	48 8b 8d 60 ff ff ff 	mov    -0xa0(%rbp),%rcx
  41c26f:	48 01 c8             	add    %rcx,%rax
  41c272:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
  41c279:	48 89 cf             	mov    %rcx,%rdi
  41c27c:	48 89 c6             	mov    %rax,%rsi
  41c27f:	e8 78 9a 02 00       	callq  445cfc <setEncryptedValueQWord>
  41c284:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  41c288:	48 89 cf             	mov    %rcx,%rdi
  41c28b:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
  41c292:	e8 b1 9e 02 00       	callq  446148 <getDecryptedValueQWord>
  41c297:	48 3b 45 b8          	cmp    -0x48(%rbp),%rax
  41c29b:	41 0f 92 c0          	setb   %r8b
  41c29f:	41 80 e0 01          	and    $0x1,%r8b
  41c2a3:	45 0f b6 c8          	movzbl %r8b,%r9d
  41c2a7:	49 63 c1             	movslq %r9d,%rax
  41c2aa:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  41c2ae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41c2b2:	48 83 c0 01          	add    $0x1,%rax
  41c2b6:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41c2ba:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41c2be:	48 83 c0 08          	add    $0x8,%rax
  41c2c2:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  41c2c6:	e9 06 ff ff ff       	jmpq   41c1d1 <mbedtls_mpi_add_abs+0x231>
  41c2cb:	eb 00                	jmp    41c2cd <mbedtls_mpi_add_abs+0x32d>
  41c2cd:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  41c2d0:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
  41c2d6:	e8 7b 96 02 00       	callq  445956 <writeback_cache>
  41c2db:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
  41c2e1:	48 81 c4 c0 00 00 00 	add    $0xc0,%rsp
  41c2e8:	5d                   	pop    %rbp
  41c2e9:	c3                   	retq   
  41c2ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000041c2f0 <mpi_sub_hlp>:
  41c2f0:	55                   	push   %rbp
  41c2f1:	48 89 e5             	mov    %rsp,%rbp
  41c2f4:	48 81 ec 80 00 00 00 	sub    $0x80,%rsp
  41c2fb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41c2ff:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  41c303:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  41c307:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
  41c30e:	00 
  41c30f:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
  41c316:	00 
  41c317:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41c31b:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
  41c31f:	0f 83 ef 00 00 00    	jae    41c414 <mpi_sub_hlp+0x124>
  41c325:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c329:	48 89 c7             	mov    %rax,%rdi
  41c32c:	e8 17 9e 02 00       	callq  446148 <getDecryptedValueQWord>
  41c331:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
  41c335:	0f 92 c1             	setb   %cl
  41c338:	80 e1 01             	and    $0x1,%cl
  41c33b:	0f b6 d1             	movzbl %cl,%edx
  41c33e:	48 63 c2             	movslq %edx,%rax
  41c341:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  41c345:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41c349:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41c34d:	48 89 fe             	mov    %rdi,%rsi
  41c350:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  41c354:	48 89 f7             	mov    %rsi,%rdi
  41c357:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  41c35b:	e8 e8 9d 02 00       	callq  446148 <getDecryptedValueQWord>
  41c360:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
  41c364:	48 29 f0             	sub    %rsi,%rax
  41c367:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  41c36b:	48 89 f7             	mov    %rsi,%rdi
  41c36e:	48 89 c6             	mov    %rax,%rsi
  41c371:	e8 86 99 02 00       	callq  445cfc <setEncryptedValueQWord>
  41c376:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  41c37a:	48 89 f7             	mov    %rsi,%rdi
  41c37d:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  41c381:	e8 c2 9d 02 00       	callq  446148 <getDecryptedValueQWord>
  41c386:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  41c38a:	48 89 f7             	mov    %rsi,%rdi
  41c38d:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  41c391:	e8 b2 9d 02 00       	callq  446148 <getDecryptedValueQWord>
  41c396:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
  41c39a:	48 39 c6             	cmp    %rax,%rsi
  41c39d:	0f 92 c1             	setb   %cl
  41c3a0:	80 e1 01             	and    $0x1,%cl
  41c3a3:	0f b6 d1             	movzbl %cl,%edx
  41c3a6:	48 63 c2             	movslq %edx,%rax
  41c3a9:	48 03 45 d0          	add    -0x30(%rbp),%rax
  41c3ad:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41c3b1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41c3b5:	48 89 c7             	mov    %rax,%rdi
  41c3b8:	e8 8b 9d 02 00       	callq  446148 <getDecryptedValueQWord>
  41c3bd:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  41c3c1:	48 89 f7             	mov    %rsi,%rdi
  41c3c4:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  41c3c8:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
  41c3cc:	e8 77 9d 02 00       	callq  446148 <getDecryptedValueQWord>
  41c3d1:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
  41c3d5:	48 29 f0             	sub    %rsi,%rax
  41c3d8:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
  41c3dc:	48 89 f7             	mov    %rsi,%rdi
  41c3df:	48 89 c6             	mov    %rax,%rsi
  41c3e2:	e8 15 99 02 00       	callq  445cfc <setEncryptedValueQWord>
  41c3e7:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  41c3eb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41c3ef:	48 83 c0 01          	add    $0x1,%rax
  41c3f3:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  41c3f7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41c3fb:	48 83 c0 08          	add    $0x8,%rax
  41c3ff:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41c403:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c407:	48 83 c0 08          	add    $0x8,%rax
  41c40b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  41c40f:	e9 03 ff ff ff       	jmpq   41c317 <mpi_sub_hlp+0x27>
  41c414:	eb 00                	jmp    41c416 <mpi_sub_hlp+0x126>
  41c416:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  41c41b:	74 6b                	je     41c488 <mpi_sub_hlp+0x198>
  41c41d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41c421:	48 89 c7             	mov    %rax,%rdi
  41c424:	e8 1f 9d 02 00       	callq  446148 <getDecryptedValueQWord>
  41c429:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
  41c42d:	0f 92 c1             	setb   %cl
  41c430:	80 e1 01             	and    $0x1,%cl
  41c433:	0f b6 d1             	movzbl %cl,%edx
  41c436:	48 63 c2             	movslq %edx,%rax
  41c439:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  41c43d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41c441:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41c445:	48 89 fe             	mov    %rdi,%rsi
  41c448:	48 89 7d 90          	mov    %rdi,-0x70(%rbp)
  41c44c:	48 89 f7             	mov    %rsi,%rdi
  41c44f:	48 89 45 88          	mov    %rax,-0x78(%rbp)
  41c453:	e8 f0 9c 02 00       	callq  446148 <getDecryptedValueQWord>
  41c458:	48 8b 75 88          	mov    -0x78(%rbp),%rsi
  41c45c:	48 29 f0             	sub    %rsi,%rax
  41c45f:	48 8b 75 90          	mov    -0x70(%rbp),%rsi
  41c463:	48 89 f7             	mov    %rsi,%rdi
  41c466:	48 89 c6             	mov    %rax,%rsi
  41c469:	e8 8e 98 02 00       	callq  445cfc <setEncryptedValueQWord>
  41c46e:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  41c472:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
  41c476:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  41c47a:	48 83 c6 08          	add    $0x8,%rsi
  41c47e:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  41c482:	48 89 45 80          	mov    %rax,-0x80(%rbp)
  41c486:	eb 8e                	jmp    41c416 <mpi_sub_hlp+0x126>
  41c488:	e8 c9 94 02 00       	callq  445956 <writeback_cache>
  41c48d:	48 81 c4 80 00 00 00 	add    $0x80,%rsp
  41c494:	5d                   	pop    %rbp
  41c495:	c3                   	retq   
  41c496:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41c49d:	00 00 00 

000000000041c4a0 <mbedtls_mpi_add_mpi>:
  41c4a0:	55                   	push   %rbp
  41c4a1:	48 89 e5             	mov    %rsp,%rbp
  41c4a4:	48 83 ec 50          	sub    $0x50,%rsp
  41c4a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41c4ac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  41c4b0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  41c4b4:	eb 00                	jmp    41c4b6 <mbedtls_mpi_add_mpi+0x16>
  41c4b6:	eb 00                	jmp    41c4b8 <mbedtls_mpi_add_mpi+0x18>
  41c4b8:	eb 00                	jmp    41c4ba <mbedtls_mpi_add_mpi+0x1a>
  41c4ba:	eb 00                	jmp    41c4bc <mbedtls_mpi_add_mpi+0x1c>
  41c4bc:	eb 00                	jmp    41c4be <mbedtls_mpi_add_mpi+0x1e>
  41c4be:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41c4c2:	48 89 c7             	mov    %rax,%rdi
  41c4c5:	e8 84 9b 02 00       	callq  44604e <getDecryptedValueDWord>
  41c4ca:	89 45 e0             	mov    %eax,-0x20(%rbp)
  41c4cd:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  41c4d1:	e8 78 9b 02 00       	callq  44604e <getDecryptedValueDWord>
  41c4d6:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41c4da:	89 45 dc             	mov    %eax,-0x24(%rbp)
  41c4dd:	e8 6c 9b 02 00       	callq  44604e <getDecryptedValueDWord>
  41c4e2:	8b 4d dc             	mov    -0x24(%rbp),%ecx
  41c4e5:	0f af c8             	imul   %eax,%ecx
  41c4e8:	83 f9 00             	cmp    $0x0,%ecx
  41c4eb:	0f 8d 81 00 00 00    	jge    41c572 <mbedtls_mpi_add_mpi+0xd2>
  41c4f1:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  41c4f5:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  41c4f9:	e8 52 f5 ff ff       	callq  41ba50 <mbedtls_mpi_cmp_abs>
  41c4fe:	83 f8 00             	cmp    $0x0,%eax
  41c501:	7c 37                	jl     41c53a <mbedtls_mpi_add_mpi+0x9a>
  41c503:	eb 00                	jmp    41c505 <mbedtls_mpi_add_mpi+0x65>
  41c505:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  41c509:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  41c50d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  41c511:	e8 4a f7 ff ff       	callq  41bc60 <mbedtls_mpi_sub_abs>
  41c516:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  41c519:	83 f8 00             	cmp    $0x0,%eax
  41c51c:	74 05                	je     41c523 <mbedtls_mpi_add_mpi+0x83>
  41c51e:	e9 83 00 00 00       	jmpq   41c5a6 <mbedtls_mpi_add_mpi+0x106>
  41c523:	eb 00                	jmp    41c525 <mbedtls_mpi_add_mpi+0x85>
  41c525:	8b 75 e0             	mov    -0x20(%rbp),%esi
  41c528:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41c52c:	48 89 c7             	mov    %rax,%rdi
  41c52f:	e8 ca 96 02 00       	callq  445bfe <setEncryptedValueDWord>
  41c534:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  41c538:	eb 36                	jmp    41c570 <mbedtls_mpi_add_mpi+0xd0>
  41c53a:	eb 00                	jmp    41c53c <mbedtls_mpi_add_mpi+0x9c>
  41c53c:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  41c540:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  41c544:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  41c548:	e8 13 f7 ff ff       	callq  41bc60 <mbedtls_mpi_sub_abs>
  41c54d:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  41c550:	83 f8 00             	cmp    $0x0,%eax
  41c553:	74 02                	je     41c557 <mbedtls_mpi_add_mpi+0xb7>
  41c555:	eb 4f                	jmp    41c5a6 <mbedtls_mpi_add_mpi+0x106>
  41c557:	eb 00                	jmp    41c559 <mbedtls_mpi_add_mpi+0xb9>
  41c559:	31 c0                	xor    %eax,%eax
  41c55b:	2b 45 e0             	sub    -0x20(%rbp),%eax
  41c55e:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  41c562:	48 89 cf             	mov    %rcx,%rdi
  41c565:	89 c6                	mov    %eax,%esi
  41c567:	e8 92 96 02 00       	callq  445bfe <setEncryptedValueDWord>
  41c56c:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  41c570:	eb 32                	jmp    41c5a4 <mbedtls_mpi_add_mpi+0x104>
  41c572:	eb 00                	jmp    41c574 <mbedtls_mpi_add_mpi+0xd4>
  41c574:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  41c578:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  41c57c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  41c580:	e8 1b fa ff ff       	callq  41bfa0 <mbedtls_mpi_add_abs>
  41c585:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  41c588:	83 f8 00             	cmp    $0x0,%eax
  41c58b:	74 02                	je     41c58f <mbedtls_mpi_add_mpi+0xef>
  41c58d:	eb 17                	jmp    41c5a6 <mbedtls_mpi_add_mpi+0x106>
  41c58f:	eb 00                	jmp    41c591 <mbedtls_mpi_add_mpi+0xf1>
  41c591:	8b 75 e0             	mov    -0x20(%rbp),%esi
  41c594:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41c598:	48 89 c7             	mov    %rax,%rdi
  41c59b:	e8 5e 96 02 00       	callq  445bfe <setEncryptedValueDWord>
  41c5a0:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  41c5a4:	eb 00                	jmp    41c5a6 <mbedtls_mpi_add_mpi+0x106>
  41c5a6:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  41c5a9:	89 45 bc             	mov    %eax,-0x44(%rbp)
  41c5ac:	e8 a5 93 02 00       	callq  445956 <writeback_cache>
  41c5b1:	8b 45 bc             	mov    -0x44(%rbp),%eax
  41c5b4:	48 83 c4 50          	add    $0x50,%rsp
  41c5b8:	5d                   	pop    %rbp
  41c5b9:	c3                   	retq   
  41c5ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000041c5c0 <mbedtls_mpi_mul_mpi>:
  41c5c0:	55                   	push   %rbp
  41c5c1:	48 89 e5             	mov    %rsp,%rbp
  41c5c4:	48 81 ec 20 02 00 00 	sub    $0x220,%rsp
  41c5cb:	48 89 7d 80          	mov    %rdi,-0x80(%rbp)
  41c5cf:	48 89 b5 78 ff ff ff 	mov    %rsi,-0x88(%rbp)
  41c5d6:	48 89 95 70 ff ff ff 	mov    %rdx,-0x90(%rbp)
  41c5dd:	eb 00                	jmp    41c5df <mbedtls_mpi_mul_mpi+0x1f>
  41c5df:	eb 00                	jmp    41c5e1 <mbedtls_mpi_mul_mpi+0x21>
  41c5e1:	eb 00                	jmp    41c5e3 <mbedtls_mpi_mul_mpi+0x23>
  41c5e3:	eb 00                	jmp    41c5e5 <mbedtls_mpi_mul_mpi+0x25>
  41c5e5:	eb 00                	jmp    41c5e7 <mbedtls_mpi_mul_mpi+0x27>
  41c5e7:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  41c5ee:	48 89 45 88          	mov    %rax,-0x78(%rbp)
  41c5f2:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  41c5f6:	48 89 c7             	mov    %rax,%rdi
  41c5f9:	be 01 00 00 00       	mov    $0x1,%esi
  41c5fe:	e8 fb 95 02 00       	callq  445bfe <setEncryptedValueDWord>
  41c603:	31 f6                	xor    %esi,%esi
  41c605:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
  41c609:	48 83 c7 08          	add    $0x8,%rdi
  41c60d:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
  41c614:	e8 e3 96 02 00       	callq  445cfc <setEncryptedValueQWord>
  41c619:	31 c9                	xor    %ecx,%ecx
  41c61b:	89 ce                	mov    %ecx,%esi
  41c61d:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
  41c621:	48 83 c7 10          	add    $0x10,%rdi
  41c625:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
  41c62c:	e8 cb 96 02 00       	callq  445cfc <setEncryptedValueQWord>
  41c631:	48 8d b5 00 ff ff ff 	lea    -0x100(%rbp),%rsi
  41c638:	48 89 75 b8          	mov    %rsi,-0x48(%rbp)
  41c63c:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  41c640:	48 89 f7             	mov    %rsi,%rdi
  41c643:	be 01 00 00 00       	mov    $0x1,%esi
  41c648:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
  41c64f:	e8 aa 95 02 00       	callq  445bfe <setEncryptedValueDWord>
  41c654:	31 c9                	xor    %ecx,%ecx
  41c656:	89 ce                	mov    %ecx,%esi
  41c658:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
  41c65c:	48 83 c7 08          	add    $0x8,%rdi
  41c660:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
  41c667:	e8 90 96 02 00       	callq  445cfc <setEncryptedValueQWord>
  41c66c:	31 c9                	xor    %ecx,%ecx
  41c66e:	89 ce                	mov    %ecx,%esi
  41c670:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
  41c674:	48 83 c7 10          	add    $0x10,%rdi
  41c678:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
  41c67f:	e8 78 96 02 00       	callq  445cfc <setEncryptedValueQWord>
  41c684:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
  41c688:	48 3b b5 78 ff ff ff 	cmp    -0x88(%rbp),%rsi
  41c68f:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
  41c696:	75 35                	jne    41c6cd <mbedtls_mpi_mul_mpi+0x10d>
  41c698:	eb 00                	jmp    41c69a <mbedtls_mpi_mul_mpi+0xda>
  41c69a:	48 8b b5 78 ff ff ff 	mov    -0x88(%rbp),%rsi
  41c6a1:	48 8d bd 30 ff ff ff 	lea    -0xd0(%rbp),%rdi
  41c6a8:	e8 f3 e6 ff ff       	callq  41ada0 <mbedtls_mpi_copy>
  41c6ad:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)
  41c6b3:	83 f8 00             	cmp    $0x0,%eax
  41c6b6:	74 05                	je     41c6bd <mbedtls_mpi_mul_mpi+0xfd>
  41c6b8:	e9 8d 03 00 00       	jmpq   41ca4a <mbedtls_mpi_mul_mpi+0x48a>
  41c6bd:	eb 00                	jmp    41c6bf <mbedtls_mpi_mul_mpi+0xff>
  41c6bf:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  41c6c6:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  41c6cd:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  41c6d1:	48 3b 85 70 ff ff ff 	cmp    -0x90(%rbp),%rax
  41c6d8:	75 35                	jne    41c70f <mbedtls_mpi_mul_mpi+0x14f>
  41c6da:	eb 00                	jmp    41c6dc <mbedtls_mpi_mul_mpi+0x11c>
  41c6dc:	48 8b b5 70 ff ff ff 	mov    -0x90(%rbp),%rsi
  41c6e3:	48 8d bd 00 ff ff ff 	lea    -0x100(%rbp),%rdi
  41c6ea:	e8 b1 e6 ff ff       	callq  41ada0 <mbedtls_mpi_copy>
  41c6ef:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)
  41c6f5:	83 f8 00             	cmp    $0x0,%eax
  41c6f8:	74 05                	je     41c6ff <mbedtls_mpi_mul_mpi+0x13f>
  41c6fa:	e9 4b 03 00 00       	jmpq   41ca4a <mbedtls_mpi_mul_mpi+0x48a>
  41c6ff:	eb 00                	jmp    41c701 <mbedtls_mpi_mul_mpi+0x141>
  41c701:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
  41c708:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
  41c70f:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  41c716:	48 83 c0 08          	add    $0x8,%rax
  41c71a:	48 89 c7             	mov    %rax,%rdi
  41c71d:	e8 26 9a 02 00       	callq  446148 <getDecryptedValueQWord>
  41c722:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
  41c729:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
  41c730:	00 
  41c731:	76 4b                	jbe    41c77e <mbedtls_mpi_mul_mpi+0x1be>
  41c733:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  41c73a:	48 83 c0 10          	add    $0x10,%rax
  41c73e:	48 89 c7             	mov    %rax,%rdi
  41c741:	e8 02 9a 02 00       	callq  446148 <getDecryptedValueQWord>
  41c746:	48 8b bd 60 ff ff ff 	mov    -0xa0(%rbp),%rdi
  41c74d:	48 83 ef 01          	sub    $0x1,%rdi
  41c751:	48 c1 e7 03          	shl    $0x3,%rdi
  41c755:	48 01 f8             	add    %rdi,%rax
  41c758:	48 89 c7             	mov    %rax,%rdi
  41c75b:	e8 e8 99 02 00       	callq  446148 <getDecryptedValueQWord>
  41c760:	48 83 f8 00          	cmp    $0x0,%rax
  41c764:	74 02                	je     41c768 <mbedtls_mpi_mul_mpi+0x1a8>
  41c766:	eb 16                	jmp    41c77e <mbedtls_mpi_mul_mpi+0x1be>
  41c768:	eb 00                	jmp    41c76a <mbedtls_mpi_mul_mpi+0x1aa>
  41c76a:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  41c771:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
  41c775:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
  41c77c:	eb ab                	jmp    41c729 <mbedtls_mpi_mul_mpi+0x169>
  41c77e:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  41c785:	48 83 c0 08          	add    $0x8,%rax
  41c789:	48 89 c7             	mov    %rax,%rdi
  41c78c:	e8 b7 99 02 00       	callq  446148 <getDecryptedValueQWord>
  41c791:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
  41c798:	48 83 bd 58 ff ff ff 	cmpq   $0x0,-0xa8(%rbp)
  41c79f:	00 
  41c7a0:	76 4b                	jbe    41c7ed <mbedtls_mpi_mul_mpi+0x22d>
  41c7a2:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  41c7a9:	48 83 c0 10          	add    $0x10,%rax
  41c7ad:	48 89 c7             	mov    %rax,%rdi
  41c7b0:	e8 93 99 02 00       	callq  446148 <getDecryptedValueQWord>
  41c7b5:	48 8b bd 58 ff ff ff 	mov    -0xa8(%rbp),%rdi
  41c7bc:	48 83 ef 01          	sub    $0x1,%rdi
  41c7c0:	48 c1 e7 03          	shl    $0x3,%rdi
  41c7c4:	48 01 f8             	add    %rdi,%rax
  41c7c7:	48 89 c7             	mov    %rax,%rdi
  41c7ca:	e8 79 99 02 00       	callq  446148 <getDecryptedValueQWord>
  41c7cf:	48 83 f8 00          	cmp    $0x0,%rax
  41c7d3:	74 02                	je     41c7d7 <mbedtls_mpi_mul_mpi+0x217>
  41c7d5:	eb 16                	jmp    41c7ed <mbedtls_mpi_mul_mpi+0x22d>
  41c7d7:	eb 00                	jmp    41c7d9 <mbedtls_mpi_mul_mpi+0x219>
  41c7d9:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
  41c7e0:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
  41c7e4:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
  41c7eb:	eb ab                	jmp    41c798 <mbedtls_mpi_mul_mpi+0x1d8>
  41c7ed:	eb 00                	jmp    41c7ef <mbedtls_mpi_mul_mpi+0x22f>
  41c7ef:	48 8b 7d 80          	mov    -0x80(%rbp),%rdi
  41c7f3:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  41c7fa:	48 03 85 58 ff ff ff 	add    -0xa8(%rbp),%rax
  41c801:	48 89 c6             	mov    %rax,%rsi
  41c804:	e8 37 e3 ff ff       	callq  41ab40 <mbedtls_mpi_grow>
  41c809:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)
  41c80f:	83 f8 00             	cmp    $0x0,%eax
  41c812:	74 05                	je     41c819 <mbedtls_mpi_mul_mpi+0x259>
  41c814:	e9 31 02 00 00       	jmpq   41ca4a <mbedtls_mpi_mul_mpi+0x48a>
  41c819:	eb 00                	jmp    41c81b <mbedtls_mpi_mul_mpi+0x25b>
  41c81b:	eb 00                	jmp    41c81d <mbedtls_mpi_mul_mpi+0x25d>
  41c81d:	b8 01 00 00 00       	mov    $0x1,%eax
  41c822:	89 c6                	mov    %eax,%esi
  41c824:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
  41c828:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  41c82c:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
  41c833:	00 
  41c834:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  41c838:	e8 03 e3 ff ff       	callq  41ab40 <mbedtls_mpi_grow>
  41c83d:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  41c840:	83 f8 00             	cmp    $0x0,%eax
  41c843:	74 05                	je     41c84a <mbedtls_mpi_mul_mpi+0x28a>
  41c845:	e9 f3 00 00 00       	jmpq   41c93d <mbedtls_mpi_mul_mpi+0x37d>
  41c84a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41c84e:	48 83 c0 10          	add    $0x10,%rax
  41c852:	48 89 c7             	mov    %rax,%rdi
  41c855:	e8 ee 98 02 00       	callq  446148 <getDecryptedValueQWord>
  41c85a:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  41c85e:	48 83 c7 08          	add    $0x8,%rdi
  41c862:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
  41c869:	e8 da 98 02 00       	callq  446148 <getDecryptedValueQWord>
  41c86e:	48 c1 e0 03          	shl    $0x3,%rax
  41c872:	48 89 85 c0 fe ff ff 	mov    %rax,-0x140(%rbp)
  41c879:	e8 d8 90 02 00       	callq  445956 <writeback_cache>
  41c87e:	48 8b bd c8 fe ff ff 	mov    -0x138(%rbp),%rdi
  41c885:	48 8b b5 c0 fe ff ff 	mov    -0x140(%rbp),%rsi
  41c88c:	e8 54 9e 02 00       	callq  4466e5 <decryptArrayForLibCall>
  41c891:	31 f6                	xor    %esi,%esi
  41c893:	48 8b bd c8 fe ff ff 	mov    -0x138(%rbp),%rdi
  41c89a:	48 8b 95 c0 fe ff ff 	mov    -0x140(%rbp),%rdx
  41c8a1:	e8 7a 47 fe ff       	callq  401020 <memset@plt>
  41c8a6:	48 8b bd c8 fe ff ff 	mov    -0x138(%rbp),%rdi
  41c8ad:	48 8b b5 c0 fe ff ff 	mov    -0x140(%rbp),%rsi
  41c8b4:	e8 9d 9b 02 00       	callq  446456 <encryptArrayForLibCall>
  41c8b9:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  41c8be:	7d 11                	jge    41c8d1 <mbedtls_mpi_mul_mpi+0x311>
  41c8c0:	31 c0                	xor    %eax,%eax
  41c8c2:	89 c1                	mov    %eax,%ecx
  41c8c4:	48 2b 4d c8          	sub    -0x38(%rbp),%rcx
  41c8c8:	48 89 8d b8 fe ff ff 	mov    %rcx,-0x148(%rbp)
  41c8cf:	eb 0b                	jmp    41c8dc <mbedtls_mpi_mul_mpi+0x31c>
  41c8d1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41c8d5:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
  41c8dc:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  41c8e3:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  41c8e7:	48 83 c1 10          	add    $0x10,%rcx
  41c8eb:	48 89 cf             	mov    %rcx,%rdi
  41c8ee:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
  41c8f5:	e8 4e 98 02 00       	callq  446148 <getDecryptedValueQWord>
  41c8fa:	48 89 c7             	mov    %rax,%rdi
  41c8fd:	48 8b b5 b0 fe ff ff 	mov    -0x150(%rbp),%rsi
  41c904:	e8 f3 93 02 00       	callq  445cfc <setEncryptedValueQWord>
  41c909:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  41c90d:	48 83 f9 00          	cmp    $0x0,%rcx
  41c911:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  41c916:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  41c91c:	44 0f 4c c2          	cmovl  %edx,%r8d
  41c920:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  41c924:	48 89 cf             	mov    %rcx,%rdi
  41c927:	44 89 c6             	mov    %r8d,%esi
  41c92a:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
  41c931:	e8 c8 92 02 00       	callq  445bfe <setEncryptedValueDWord>
  41c936:	48 89 85 a0 fe ff ff 	mov    %rax,-0x160(%rbp)
  41c93d:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  41c940:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)
  41c946:	83 f8 00             	cmp    $0x0,%eax
  41c949:	74 05                	je     41c950 <mbedtls_mpi_mul_mpi+0x390>
  41c94b:	e9 fa 00 00 00       	jmpq   41ca4a <mbedtls_mpi_mul_mpi+0x48a>
  41c950:	eb 00                	jmp    41c952 <mbedtls_mpi_mul_mpi+0x392>
  41c952:	eb 00                	jmp    41c954 <mbedtls_mpi_mul_mpi+0x394>
  41c954:	48 83 bd 58 ff ff ff 	cmpq   $0x0,-0xa8(%rbp)
  41c95b:	00 
  41c95c:	0f 86 ac 00 00 00    	jbe    41ca0e <mbedtls_mpi_mul_mpi+0x44e>
  41c962:	48 8b bd 60 ff ff ff 	mov    -0xa0(%rbp),%rdi
  41c969:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  41c970:	48 83 c0 10          	add    $0x10,%rax
  41c974:	48 89 bd 98 fe ff ff 	mov    %rdi,-0x168(%rbp)
  41c97b:	48 89 c7             	mov    %rax,%rdi
  41c97e:	e8 c5 97 02 00       	callq  446148 <getDecryptedValueQWord>
  41c983:	48 8b 7d 80          	mov    -0x80(%rbp),%rdi
  41c987:	48 83 c7 10          	add    $0x10,%rdi
  41c98b:	48 89 85 90 fe ff ff 	mov    %rax,-0x170(%rbp)
  41c992:	e8 b1 97 02 00       	callq  446148 <getDecryptedValueQWord>
  41c997:	48 8b bd 58 ff ff ff 	mov    -0xa8(%rbp),%rdi
  41c99e:	48 c1 e7 03          	shl    $0x3,%rdi
  41c9a2:	48 01 f8             	add    %rdi,%rax
  41c9a5:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
  41c9a9:	48 8b bd 70 ff ff ff 	mov    -0x90(%rbp),%rdi
  41c9b0:	48 83 c7 10          	add    $0x10,%rdi
  41c9b4:	48 89 85 88 fe ff ff 	mov    %rax,-0x178(%rbp)
  41c9bb:	e8 88 97 02 00       	callq  446148 <getDecryptedValueQWord>
  41c9c0:	48 8b bd 58 ff ff ff 	mov    -0xa8(%rbp),%rdi
  41c9c7:	48 83 ef 01          	sub    $0x1,%rdi
  41c9cb:	48 c1 e7 03          	shl    $0x3,%rdi
  41c9cf:	48 01 f8             	add    %rdi,%rax
  41c9d2:	48 89 c7             	mov    %rax,%rdi
  41c9d5:	e8 6e 97 02 00       	callq  446148 <getDecryptedValueQWord>
  41c9da:	48 8b bd 98 fe ff ff 	mov    -0x168(%rbp),%rdi
  41c9e1:	48 8b b5 90 fe ff ff 	mov    -0x170(%rbp),%rsi
  41c9e8:	48 8b 95 88 fe ff ff 	mov    -0x178(%rbp),%rdx
  41c9ef:	48 89 c1             	mov    %rax,%rcx
  41c9f2:	e8 29 03 00 00       	callq  41cd20 <mpi_mul_hlp>
  41c9f7:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
  41c9fe:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
  41ca02:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
  41ca09:	e9 46 ff ff ff       	jmpq   41c954 <mbedtls_mpi_mul_mpi+0x394>
  41ca0e:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  41ca15:	48 89 c7             	mov    %rax,%rdi
  41ca18:	e8 31 96 02 00       	callq  44604e <getDecryptedValueDWord>
  41ca1d:	48 8b bd 70 ff ff ff 	mov    -0x90(%rbp),%rdi
  41ca24:	89 85 84 fe ff ff    	mov    %eax,-0x17c(%rbp)
  41ca2a:	e8 1f 96 02 00       	callq  44604e <getDecryptedValueDWord>
  41ca2f:	8b 8d 84 fe ff ff    	mov    -0x17c(%rbp),%ecx
  41ca35:	0f af c8             	imul   %eax,%ecx
  41ca38:	48 8b 7d 80          	mov    -0x80(%rbp),%rdi
  41ca3c:	89 ce                	mov    %ecx,%esi
  41ca3e:	e8 bb 91 02 00       	callq  445bfe <setEncryptedValueDWord>
  41ca43:	48 89 85 78 fe ff ff 	mov    %rax,-0x188(%rbp)
  41ca4a:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
  41ca51:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41ca55:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  41ca5a:	75 05                	jne    41ca61 <mbedtls_mpi_mul_mpi+0x4a1>
  41ca5c:	e9 3f 01 00 00       	jmpq   41cba0 <mbedtls_mpi_mul_mpi+0x5e0>
  41ca61:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41ca65:	48 83 c0 10          	add    $0x10,%rax
  41ca69:	48 89 c7             	mov    %rax,%rdi
  41ca6c:	e8 d7 96 02 00       	callq  446148 <getDecryptedValueQWord>
  41ca71:	48 83 f8 00          	cmp    $0x0,%rax
  41ca75:	0f 84 df 00 00 00    	je     41cb5a <mbedtls_mpi_mul_mpi+0x59a>
  41ca7b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41ca7f:	48 83 c0 10          	add    $0x10,%rax
  41ca83:	48 89 c7             	mov    %rax,%rdi
  41ca86:	e8 bd 96 02 00       	callq  446148 <getDecryptedValueQWord>
  41ca8b:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  41ca8f:	48 83 c7 08          	add    $0x8,%rdi
  41ca93:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
  41ca9a:	e8 a9 96 02 00       	callq  446148 <getDecryptedValueQWord>
  41ca9f:	48 8b bd 70 fe ff ff 	mov    -0x190(%rbp),%rdi
  41caa6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41caaa:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  41caae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41cab2:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  41cab6:	48 c1 e1 03          	shl    $0x3,%rcx
  41caba:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41cabe:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
  41cac2:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  41cac9:	00 
  41caca:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  41cace:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  41cad2:	48 89 85 68 fe ff ff 	mov    %rax,-0x198(%rbp)
  41cad9:	48 89 8d 60 fe ff ff 	mov    %rcx,-0x1a0(%rbp)
  41cae0:	48 89 95 58 fe ff ff 	mov    %rdx,-0x1a8(%rbp)
  41cae7:	e8 6a 8e 02 00       	callq  445956 <writeback_cache>
  41caec:	48 8b bd 60 fe ff ff 	mov    -0x1a0(%rbp),%rdi
  41caf3:	48 8b b5 58 fe ff ff 	mov    -0x1a8(%rbp),%rsi
  41cafa:	e8 e6 9b 02 00       	callq  4466e5 <decryptArrayForLibCall>
  41caff:	31 f6                	xor    %esi,%esi
  41cb01:	48 8b bd 60 fe ff ff 	mov    -0x1a0(%rbp),%rdi
  41cb08:	48 8b 95 58 fe ff ff 	mov    -0x1a8(%rbp),%rdx
  41cb0f:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
  41cb16:	ff d0                	callq  *%rax
  41cb18:	48 8b bd 60 fe ff ff 	mov    -0x1a0(%rbp),%rdi
  41cb1f:	48 8b b5 58 fe ff ff 	mov    -0x1a8(%rbp),%rsi
  41cb26:	48 89 85 50 fe ff ff 	mov    %rax,-0x1b0(%rbp)
  41cb2d:	e8 24 99 02 00       	callq  446456 <encryptArrayForLibCall>
  41cb32:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41cb36:	48 83 c0 10          	add    $0x10,%rax
  41cb3a:	48 89 c7             	mov    %rax,%rdi
  41cb3d:	e8 06 96 02 00       	callq  446148 <getDecryptedValueQWord>
  41cb42:	48 89 85 48 fe ff ff 	mov    %rax,-0x1b8(%rbp)
  41cb49:	e8 08 8e 02 00       	callq  445956 <writeback_cache>
  41cb4e:	48 8b bd 48 fe ff ff 	mov    -0x1b8(%rbp),%rdi
  41cb55:	e8 86 45 fe ff       	callq  4010e0 <free@plt>
  41cb5a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41cb5e:	48 89 c7             	mov    %rax,%rdi
  41cb61:	be 01 00 00 00       	mov    $0x1,%esi
  41cb66:	e8 93 90 02 00       	callq  445bfe <setEncryptedValueDWord>
  41cb6b:	31 f6                	xor    %esi,%esi
  41cb6d:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  41cb71:	48 83 c7 08          	add    $0x8,%rdi
  41cb75:	48 89 85 40 fe ff ff 	mov    %rax,-0x1c0(%rbp)
  41cb7c:	e8 7b 91 02 00       	callq  445cfc <setEncryptedValueQWord>
  41cb81:	31 c9                	xor    %ecx,%ecx
  41cb83:	89 ce                	mov    %ecx,%esi
  41cb85:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  41cb89:	48 83 c7 10          	add    $0x10,%rdi
  41cb8d:	48 89 85 38 fe ff ff 	mov    %rax,-0x1c8(%rbp)
  41cb94:	e8 63 91 02 00       	callq  445cfc <setEncryptedValueQWord>
  41cb99:	48 89 85 30 fe ff ff 	mov    %rax,-0x1d0(%rbp)
  41cba0:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  41cba7:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  41cbab:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
  41cbb0:	75 05                	jne    41cbb7 <mbedtls_mpi_mul_mpi+0x5f7>
  41cbb2:	e9 3f 01 00 00       	jmpq   41ccf6 <mbedtls_mpi_mul_mpi+0x736>
  41cbb7:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  41cbbb:	48 83 c0 10          	add    $0x10,%rax
  41cbbf:	48 89 c7             	mov    %rax,%rdi
  41cbc2:	e8 81 95 02 00       	callq  446148 <getDecryptedValueQWord>
  41cbc7:	48 83 f8 00          	cmp    $0x0,%rax
  41cbcb:	0f 84 df 00 00 00    	je     41ccb0 <mbedtls_mpi_mul_mpi+0x6f0>
  41cbd1:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  41cbd5:	48 83 c0 10          	add    $0x10,%rax
  41cbd9:	48 89 c7             	mov    %rax,%rdi
  41cbdc:	e8 67 95 02 00       	callq  446148 <getDecryptedValueQWord>
  41cbe1:	48 8b 7d 90          	mov    -0x70(%rbp),%rdi
  41cbe5:	48 83 c7 08          	add    $0x8,%rdi
  41cbe9:	48 89 85 28 fe ff ff 	mov    %rax,-0x1d8(%rbp)
  41cbf0:	e8 53 95 02 00       	callq  446148 <getDecryptedValueQWord>
  41cbf5:	48 8b bd 28 fe ff ff 	mov    -0x1d8(%rbp),%rdi
  41cbfc:	48 89 7d a0          	mov    %rdi,-0x60(%rbp)
  41cc00:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  41cc04:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  41cc08:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
  41cc0c:	48 c1 e1 03          	shl    $0x3,%rcx
  41cc10:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  41cc14:	48 89 4d a8          	mov    %rcx,-0x58(%rbp)
  41cc18:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  41cc1f:	00 
  41cc20:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  41cc24:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
  41cc28:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
  41cc2f:	48 89 8d 18 fe ff ff 	mov    %rcx,-0x1e8(%rbp)
  41cc36:	48 89 95 10 fe ff ff 	mov    %rdx,-0x1f0(%rbp)
  41cc3d:	e8 14 8d 02 00       	callq  445956 <writeback_cache>
  41cc42:	48 8b bd 18 fe ff ff 	mov    -0x1e8(%rbp),%rdi
  41cc49:	48 8b b5 10 fe ff ff 	mov    -0x1f0(%rbp),%rsi
  41cc50:	e8 90 9a 02 00       	callq  4466e5 <decryptArrayForLibCall>
  41cc55:	31 f6                	xor    %esi,%esi
  41cc57:	48 8b bd 18 fe ff ff 	mov    -0x1e8(%rbp),%rdi
  41cc5e:	48 8b 95 10 fe ff ff 	mov    -0x1f0(%rbp),%rdx
  41cc65:	48 8b 85 20 fe ff ff 	mov    -0x1e0(%rbp),%rax
  41cc6c:	ff d0                	callq  *%rax
  41cc6e:	48 8b bd 18 fe ff ff 	mov    -0x1e8(%rbp),%rdi
  41cc75:	48 8b b5 10 fe ff ff 	mov    -0x1f0(%rbp),%rsi
  41cc7c:	48 89 85 08 fe ff ff 	mov    %rax,-0x1f8(%rbp)
  41cc83:	e8 ce 97 02 00       	callq  446456 <encryptArrayForLibCall>
  41cc88:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  41cc8c:	48 83 c0 10          	add    $0x10,%rax
  41cc90:	48 89 c7             	mov    %rax,%rdi
  41cc93:	e8 b0 94 02 00       	callq  446148 <getDecryptedValueQWord>
  41cc98:	48 89 85 00 fe ff ff 	mov    %rax,-0x200(%rbp)
  41cc9f:	e8 b2 8c 02 00       	callq  445956 <writeback_cache>
  41cca4:	48 8b bd 00 fe ff ff 	mov    -0x200(%rbp),%rdi
  41ccab:	e8 30 44 fe ff       	callq  4010e0 <free@plt>
  41ccb0:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  41ccb4:	48 89 c7             	mov    %rax,%rdi
  41ccb7:	be 01 00 00 00       	mov    $0x1,%esi
  41ccbc:	e8 3d 8f 02 00       	callq  445bfe <setEncryptedValueDWord>
  41ccc1:	31 f6                	xor    %esi,%esi
  41ccc3:	48 8b 7d 90          	mov    -0x70(%rbp),%rdi
  41ccc7:	48 83 c7 08          	add    $0x8,%rdi
  41cccb:	48 89 85 f8 fd ff ff 	mov    %rax,-0x208(%rbp)
  41ccd2:	e8 25 90 02 00       	callq  445cfc <setEncryptedValueQWord>
  41ccd7:	31 c9                	xor    %ecx,%ecx
  41ccd9:	89 ce                	mov    %ecx,%esi
  41ccdb:	48 8b 7d 90          	mov    -0x70(%rbp),%rdi
  41ccdf:	48 83 c7 10          	add    $0x10,%rdi
  41cce3:	48 89 85 f0 fd ff ff 	mov    %rax,-0x210(%rbp)
  41ccea:	e8 0d 90 02 00       	callq  445cfc <setEncryptedValueQWord>
  41ccef:	48 89 85 e8 fd ff ff 	mov    %rax,-0x218(%rbp)
  41ccf6:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
  41ccfc:	89 85 e4 fd ff ff    	mov    %eax,-0x21c(%rbp)
  41cd02:	e8 4f 8c 02 00       	callq  445956 <writeback_cache>
  41cd07:	8b 85 e4 fd ff ff    	mov    -0x21c(%rbp),%eax
  41cd0d:	48 81 c4 20 02 00 00 	add    $0x220,%rsp
  41cd14:	5d                   	pop    %rbp
  41cd15:	c3                   	retq   
  41cd16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41cd1d:	00 00 00 

000000000041cd20 <mpi_mul_hlp>:
  41cd20:	55                   	push   %rbp
  41cd21:	48 89 e5             	mov    %rsp,%rbp
  41cd24:	48 81 ec a0 03 00 00 	sub    $0x3a0,%rsp
  41cd2b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41cd2f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  41cd33:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  41cd37:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  41cd3b:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
  41cd42:	00 
  41cd43:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
  41cd4a:	00 
  41cd4b:	48 83 7d f8 10       	cmpq   $0x10,-0x8(%rbp)
  41cd50:	0f 82 36 0d 00 00    	jb     41da8c <mpi_mul_hlp+0xd6c>
  41cd56:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41cd5a:	48 89 c1             	mov    %rax,%rcx
  41cd5d:	48 83 c1 08          	add    $0x8,%rcx
  41cd61:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
  41cd65:	48 89 c7             	mov    %rax,%rdi
  41cd68:	e8 db 93 02 00       	callq  446148 <getDecryptedValueQWord>
  41cd6d:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  41cd71:	48 f7 e1             	mul    %rcx
  41cd74:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  41cd78:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  41cd7c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41cd80:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  41cd84:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41cd88:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  41cd8c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41cd90:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  41cd94:	48 01 c1             	add    %rax,%rcx
  41cd97:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
  41cd9b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  41cd9f:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  41cda3:	48 29 c8             	sub    %rcx,%rax
  41cda6:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  41cdaa:	48 83 d1 00          	adc    $0x0,%rcx
  41cdae:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
  41cdb2:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41cdb6:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
  41cdbd:	e8 86 93 02 00       	callq  446148 <getDecryptedValueQWord>
  41cdc2:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  41cdc6:	48 01 c1             	add    %rax,%rcx
  41cdc9:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
  41cdcd:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  41cdd1:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41cdd5:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
  41cddc:	e8 67 93 02 00       	callq  446148 <getDecryptedValueQWord>
  41cde1:	48 8b 8d 60 ff ff ff 	mov    -0xa0(%rbp),%rcx
  41cde8:	48 29 c1             	sub    %rax,%rcx
  41cdeb:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  41cdef:	48 83 d0 00          	adc    $0x0,%rax
  41cdf3:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  41cdf7:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  41cdfb:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41cdff:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  41ce03:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41ce07:	48 89 c2             	mov    %rax,%rdx
  41ce0a:	48 83 c2 08          	add    $0x8,%rdx
  41ce0e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  41ce12:	48 89 c7             	mov    %rax,%rdi
  41ce15:	48 89 8d 58 ff ff ff 	mov    %rcx,-0xa8(%rbp)
  41ce1c:	e8 db 8e 02 00       	callq  445cfc <setEncryptedValueQWord>
  41ce21:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  41ce25:	48 89 ca             	mov    %rcx,%rdx
  41ce28:	48 83 c2 08          	add    $0x8,%rdx
  41ce2c:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  41ce30:	48 89 cf             	mov    %rcx,%rdi
  41ce33:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
  41ce3a:	e8 09 93 02 00       	callq  446148 <getDecryptedValueQWord>
  41ce3f:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  41ce43:	48 f7 e1             	mul    %rcx
  41ce46:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  41ce4a:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  41ce4e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41ce52:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  41ce56:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41ce5a:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  41ce5e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41ce62:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  41ce66:	48 01 c1             	add    %rax,%rcx
  41ce69:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
  41ce6d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  41ce71:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  41ce75:	48 29 c8             	sub    %rcx,%rax
  41ce78:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  41ce7c:	48 83 d1 00          	adc    $0x0,%rcx
  41ce80:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
  41ce84:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41ce88:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  41ce8f:	e8 b4 92 02 00       	callq  446148 <getDecryptedValueQWord>
  41ce94:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  41ce98:	48 01 c1             	add    %rax,%rcx
  41ce9b:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
  41ce9f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  41cea3:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41cea7:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
  41ceae:	e8 95 92 02 00       	callq  446148 <getDecryptedValueQWord>
  41ceb3:	48 8b 8d 40 ff ff ff 	mov    -0xc0(%rbp),%rcx
  41ceba:	48 29 c1             	sub    %rax,%rcx
  41cebd:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  41cec1:	48 83 d0 00          	adc    $0x0,%rax
  41cec5:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  41cec9:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  41cecd:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41ced1:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  41ced5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41ced9:	48 89 c2             	mov    %rax,%rdx
  41cedc:	48 83 c2 08          	add    $0x8,%rdx
  41cee0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  41cee4:	48 89 c7             	mov    %rax,%rdi
  41cee7:	48 89 8d 38 ff ff ff 	mov    %rcx,-0xc8(%rbp)
  41ceee:	e8 09 8e 02 00       	callq  445cfc <setEncryptedValueQWord>
  41cef3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  41cef7:	48 89 ca             	mov    %rcx,%rdx
  41cefa:	48 83 c2 08          	add    $0x8,%rdx
  41cefe:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  41cf02:	48 89 cf             	mov    %rcx,%rdi
  41cf05:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
  41cf0c:	e8 37 92 02 00       	callq  446148 <getDecryptedValueQWord>
  41cf11:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  41cf15:	48 f7 e1             	mul    %rcx
  41cf18:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  41cf1c:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  41cf20:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41cf24:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  41cf28:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41cf2c:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  41cf30:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41cf34:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  41cf38:	48 01 c1             	add    %rax,%rcx
  41cf3b:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
  41cf3f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  41cf43:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  41cf47:	48 29 c8             	sub    %rcx,%rax
  41cf4a:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  41cf4e:	48 83 d1 00          	adc    $0x0,%rcx
  41cf52:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
  41cf56:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41cf5a:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
  41cf61:	e8 e2 91 02 00       	callq  446148 <getDecryptedValueQWord>
  41cf66:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  41cf6a:	48 01 c1             	add    %rax,%rcx
  41cf6d:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
  41cf71:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  41cf75:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41cf79:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
  41cf80:	e8 c3 91 02 00       	callq  446148 <getDecryptedValueQWord>
  41cf85:	48 8b 8d 20 ff ff ff 	mov    -0xe0(%rbp),%rcx
  41cf8c:	48 29 c1             	sub    %rax,%rcx
  41cf8f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  41cf93:	48 83 d0 00          	adc    $0x0,%rax
  41cf97:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  41cf9b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  41cf9f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41cfa3:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  41cfa7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41cfab:	48 89 c2             	mov    %rax,%rdx
  41cfae:	48 83 c2 08          	add    $0x8,%rdx
  41cfb2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  41cfb6:	48 89 c7             	mov    %rax,%rdi
  41cfb9:	48 89 8d 18 ff ff ff 	mov    %rcx,-0xe8(%rbp)
  41cfc0:	e8 37 8d 02 00       	callq  445cfc <setEncryptedValueQWord>
  41cfc5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  41cfc9:	48 89 ca             	mov    %rcx,%rdx
  41cfcc:	48 83 c2 08          	add    $0x8,%rdx
  41cfd0:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  41cfd4:	48 89 cf             	mov    %rcx,%rdi
  41cfd7:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
  41cfde:	e8 65 91 02 00       	callq  446148 <getDecryptedValueQWord>
  41cfe3:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  41cfe7:	48 f7 e1             	mul    %rcx
  41cfea:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  41cfee:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  41cff2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41cff6:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  41cffa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41cffe:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  41d002:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41d006:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  41d00a:	48 01 c1             	add    %rax,%rcx
  41d00d:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
  41d011:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  41d015:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  41d019:	48 29 c8             	sub    %rcx,%rax
  41d01c:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  41d020:	48 83 d1 00          	adc    $0x0,%rcx
  41d024:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
  41d028:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41d02c:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
  41d033:	e8 10 91 02 00       	callq  446148 <getDecryptedValueQWord>
  41d038:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  41d03c:	48 01 c1             	add    %rax,%rcx
  41d03f:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
  41d043:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  41d047:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41d04b:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
  41d052:	e8 f1 90 02 00       	callq  446148 <getDecryptedValueQWord>
  41d057:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  41d05e:	48 29 c1             	sub    %rax,%rcx
  41d061:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  41d065:	48 83 d0 00          	adc    $0x0,%rax
  41d069:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  41d06d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  41d071:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41d075:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  41d079:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41d07d:	48 89 c2             	mov    %rax,%rdx
  41d080:	48 83 c2 08          	add    $0x8,%rdx
  41d084:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  41d088:	48 89 c7             	mov    %rax,%rdi
  41d08b:	48 89 8d f8 fe ff ff 	mov    %rcx,-0x108(%rbp)
  41d092:	e8 65 8c 02 00       	callq  445cfc <setEncryptedValueQWord>
  41d097:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  41d09b:	48 89 ca             	mov    %rcx,%rdx
  41d09e:	48 83 c2 08          	add    $0x8,%rdx
  41d0a2:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  41d0a6:	48 89 cf             	mov    %rcx,%rdi
  41d0a9:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
  41d0b0:	e8 93 90 02 00       	callq  446148 <getDecryptedValueQWord>
  41d0b5:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  41d0b9:	48 f7 e1             	mul    %rcx
  41d0bc:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  41d0c0:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  41d0c4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41d0c8:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  41d0cc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41d0d0:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  41d0d4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41d0d8:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  41d0dc:	48 01 c1             	add    %rax,%rcx
  41d0df:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
  41d0e3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  41d0e7:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  41d0eb:	48 29 c8             	sub    %rcx,%rax
  41d0ee:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  41d0f2:	48 83 d1 00          	adc    $0x0,%rcx
  41d0f6:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
  41d0fa:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41d0fe:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
  41d105:	e8 3e 90 02 00       	callq  446148 <getDecryptedValueQWord>
  41d10a:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  41d10e:	48 01 c1             	add    %rax,%rcx
  41d111:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
  41d115:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  41d119:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41d11d:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
  41d124:	e8 1f 90 02 00       	callq  446148 <getDecryptedValueQWord>
  41d129:	48 8b 8d e0 fe ff ff 	mov    -0x120(%rbp),%rcx
  41d130:	48 29 c1             	sub    %rax,%rcx
  41d133:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  41d137:	48 83 d0 00          	adc    $0x0,%rax
  41d13b:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  41d13f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  41d143:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41d147:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  41d14b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41d14f:	48 89 c2             	mov    %rax,%rdx
  41d152:	48 83 c2 08          	add    $0x8,%rdx
  41d156:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  41d15a:	48 89 c7             	mov    %rax,%rdi
  41d15d:	48 89 8d d8 fe ff ff 	mov    %rcx,-0x128(%rbp)
  41d164:	e8 93 8b 02 00       	callq  445cfc <setEncryptedValueQWord>
  41d169:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  41d16d:	48 89 ca             	mov    %rcx,%rdx
  41d170:	48 83 c2 08          	add    $0x8,%rdx
  41d174:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  41d178:	48 89 cf             	mov    %rcx,%rdi
  41d17b:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
  41d182:	e8 c1 8f 02 00       	callq  446148 <getDecryptedValueQWord>
  41d187:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  41d18b:	48 f7 e1             	mul    %rcx
  41d18e:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  41d192:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  41d196:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41d19a:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  41d19e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41d1a2:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  41d1a6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41d1aa:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  41d1ae:	48 01 c1             	add    %rax,%rcx
  41d1b1:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
  41d1b5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  41d1b9:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  41d1bd:	48 29 c8             	sub    %rcx,%rax
  41d1c0:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  41d1c4:	48 83 d1 00          	adc    $0x0,%rcx
  41d1c8:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
  41d1cc:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41d1d0:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
  41d1d7:	e8 6c 8f 02 00       	callq  446148 <getDecryptedValueQWord>
  41d1dc:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  41d1e0:	48 01 c1             	add    %rax,%rcx
  41d1e3:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
  41d1e7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  41d1eb:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41d1ef:	48 89 85 c0 fe ff ff 	mov    %rax,-0x140(%rbp)
  41d1f6:	e8 4d 8f 02 00       	callq  446148 <getDecryptedValueQWord>
  41d1fb:	48 8b 8d c0 fe ff ff 	mov    -0x140(%rbp),%rcx
  41d202:	48 29 c1             	sub    %rax,%rcx
  41d205:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  41d209:	48 83 d0 00          	adc    $0x0,%rax
  41d20d:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  41d211:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  41d215:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41d219:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  41d21d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41d221:	48 89 c2             	mov    %rax,%rdx
  41d224:	48 83 c2 08          	add    $0x8,%rdx
  41d228:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  41d22c:	48 89 c7             	mov    %rax,%rdi
  41d22f:	48 89 8d b8 fe ff ff 	mov    %rcx,-0x148(%rbp)
  41d236:	e8 c1 8a 02 00       	callq  445cfc <setEncryptedValueQWord>
  41d23b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  41d23f:	48 89 ca             	mov    %rcx,%rdx
  41d242:	48 83 c2 08          	add    $0x8,%rdx
  41d246:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  41d24a:	48 89 cf             	mov    %rcx,%rdi
  41d24d:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
  41d254:	e8 ef 8e 02 00       	callq  446148 <getDecryptedValueQWord>
  41d259:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  41d25d:	48 f7 e1             	mul    %rcx
  41d260:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  41d264:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  41d268:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41d26c:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  41d270:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41d274:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  41d278:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41d27c:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  41d280:	48 01 c1             	add    %rax,%rcx
  41d283:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
  41d287:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  41d28b:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  41d28f:	48 29 c8             	sub    %rcx,%rax
  41d292:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  41d296:	48 83 d1 00          	adc    $0x0,%rcx
  41d29a:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
  41d29e:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41d2a2:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
  41d2a9:	e8 9a 8e 02 00       	callq  446148 <getDecryptedValueQWord>
  41d2ae:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  41d2b2:	48 01 c1             	add    %rax,%rcx
  41d2b5:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
  41d2b9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  41d2bd:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41d2c1:	48 89 85 a0 fe ff ff 	mov    %rax,-0x160(%rbp)
  41d2c8:	e8 7b 8e 02 00       	callq  446148 <getDecryptedValueQWord>
  41d2cd:	48 8b 8d a0 fe ff ff 	mov    -0x160(%rbp),%rcx
  41d2d4:	48 29 c1             	sub    %rax,%rcx
  41d2d7:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  41d2db:	48 83 d0 00          	adc    $0x0,%rax
  41d2df:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  41d2e3:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  41d2e7:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41d2eb:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  41d2ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41d2f3:	48 89 c2             	mov    %rax,%rdx
  41d2f6:	48 83 c2 08          	add    $0x8,%rdx
  41d2fa:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  41d2fe:	48 89 c7             	mov    %rax,%rdi
  41d301:	48 89 8d 98 fe ff ff 	mov    %rcx,-0x168(%rbp)
  41d308:	e8 ef 89 02 00       	callq  445cfc <setEncryptedValueQWord>
  41d30d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  41d311:	48 89 ca             	mov    %rcx,%rdx
  41d314:	48 83 c2 08          	add    $0x8,%rdx
  41d318:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  41d31c:	48 89 cf             	mov    %rcx,%rdi
  41d31f:	48 89 85 90 fe ff ff 	mov    %rax,-0x170(%rbp)
  41d326:	e8 1d 8e 02 00       	callq  446148 <getDecryptedValueQWord>
  41d32b:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  41d32f:	48 f7 e1             	mul    %rcx
  41d332:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  41d336:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  41d33a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41d33e:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  41d342:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41d346:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  41d34a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41d34e:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  41d352:	48 01 c1             	add    %rax,%rcx
  41d355:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
  41d359:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  41d35d:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  41d361:	48 29 c8             	sub    %rcx,%rax
  41d364:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  41d368:	48 83 d1 00          	adc    $0x0,%rcx
  41d36c:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
  41d370:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41d374:	48 89 85 88 fe ff ff 	mov    %rax,-0x178(%rbp)
  41d37b:	e8 c8 8d 02 00       	callq  446148 <getDecryptedValueQWord>
  41d380:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  41d384:	48 01 c1             	add    %rax,%rcx
  41d387:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
  41d38b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  41d38f:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41d393:	48 89 85 80 fe ff ff 	mov    %rax,-0x180(%rbp)
  41d39a:	e8 a9 8d 02 00       	callq  446148 <getDecryptedValueQWord>
  41d39f:	48 8b 8d 80 fe ff ff 	mov    -0x180(%rbp),%rcx
  41d3a6:	48 29 c1             	sub    %rax,%rcx
  41d3a9:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  41d3ad:	48 83 d0 00          	adc    $0x0,%rax
  41d3b1:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  41d3b5:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  41d3b9:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41d3bd:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  41d3c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41d3c5:	48 89 c2             	mov    %rax,%rdx
  41d3c8:	48 83 c2 08          	add    $0x8,%rdx
  41d3cc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  41d3d0:	48 89 c7             	mov    %rax,%rdi
  41d3d3:	48 89 8d 78 fe ff ff 	mov    %rcx,-0x188(%rbp)
  41d3da:	e8 1d 89 02 00       	callq  445cfc <setEncryptedValueQWord>
  41d3df:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  41d3e3:	48 89 ca             	mov    %rcx,%rdx
  41d3e6:	48 83 c2 08          	add    $0x8,%rdx
  41d3ea:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  41d3ee:	48 89 cf             	mov    %rcx,%rdi
  41d3f1:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
  41d3f8:	e8 4b 8d 02 00       	callq  446148 <getDecryptedValueQWord>
  41d3fd:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  41d401:	48 f7 e1             	mul    %rcx
  41d404:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  41d408:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  41d40c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41d410:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  41d414:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41d418:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  41d41c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41d420:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  41d424:	48 01 c1             	add    %rax,%rcx
  41d427:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
  41d42b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  41d42f:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  41d433:	48 29 c8             	sub    %rcx,%rax
  41d436:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  41d43a:	48 83 d1 00          	adc    $0x0,%rcx
  41d43e:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
  41d442:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41d446:	48 89 85 68 fe ff ff 	mov    %rax,-0x198(%rbp)
  41d44d:	e8 f6 8c 02 00       	callq  446148 <getDecryptedValueQWord>
  41d452:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  41d456:	48 01 c1             	add    %rax,%rcx
  41d459:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
  41d45d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  41d461:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41d465:	48 89 85 60 fe ff ff 	mov    %rax,-0x1a0(%rbp)
  41d46c:	e8 d7 8c 02 00       	callq  446148 <getDecryptedValueQWord>
  41d471:	48 8b 8d 60 fe ff ff 	mov    -0x1a0(%rbp),%rcx
  41d478:	48 29 c1             	sub    %rax,%rcx
  41d47b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  41d47f:	48 83 d0 00          	adc    $0x0,%rax
  41d483:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  41d487:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  41d48b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41d48f:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  41d493:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41d497:	48 89 c2             	mov    %rax,%rdx
  41d49a:	48 83 c2 08          	add    $0x8,%rdx
  41d49e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  41d4a2:	48 89 c7             	mov    %rax,%rdi
  41d4a5:	48 89 8d 58 fe ff ff 	mov    %rcx,-0x1a8(%rbp)
  41d4ac:	e8 4b 88 02 00       	callq  445cfc <setEncryptedValueQWord>
  41d4b1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  41d4b5:	48 89 ca             	mov    %rcx,%rdx
  41d4b8:	48 83 c2 08          	add    $0x8,%rdx
  41d4bc:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  41d4c0:	48 89 cf             	mov    %rcx,%rdi
  41d4c3:	48 89 85 50 fe ff ff 	mov    %rax,-0x1b0(%rbp)
  41d4ca:	e8 79 8c 02 00       	callq  446148 <getDecryptedValueQWord>
  41d4cf:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  41d4d3:	48 f7 e1             	mul    %rcx
  41d4d6:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  41d4da:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  41d4de:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41d4e2:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  41d4e6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41d4ea:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  41d4ee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41d4f2:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  41d4f6:	48 01 c1             	add    %rax,%rcx
  41d4f9:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
  41d4fd:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  41d501:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  41d505:	48 29 c8             	sub    %rcx,%rax
  41d508:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  41d50c:	48 83 d1 00          	adc    $0x0,%rcx
  41d510:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
  41d514:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41d518:	48 89 85 48 fe ff ff 	mov    %rax,-0x1b8(%rbp)
  41d51f:	e8 24 8c 02 00       	callq  446148 <getDecryptedValueQWord>
  41d524:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  41d528:	48 01 c1             	add    %rax,%rcx
  41d52b:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
  41d52f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  41d533:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41d537:	48 89 85 40 fe ff ff 	mov    %rax,-0x1c0(%rbp)
  41d53e:	e8 05 8c 02 00       	callq  446148 <getDecryptedValueQWord>
  41d543:	48 8b 8d 40 fe ff ff 	mov    -0x1c0(%rbp),%rcx
  41d54a:	48 29 c1             	sub    %rax,%rcx
  41d54d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  41d551:	48 83 d0 00          	adc    $0x0,%rax
  41d555:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  41d559:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  41d55d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41d561:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  41d565:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41d569:	48 89 c2             	mov    %rax,%rdx
  41d56c:	48 83 c2 08          	add    $0x8,%rdx
  41d570:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  41d574:	48 89 c7             	mov    %rax,%rdi
  41d577:	48 89 8d 38 fe ff ff 	mov    %rcx,-0x1c8(%rbp)
  41d57e:	e8 79 87 02 00       	callq  445cfc <setEncryptedValueQWord>
  41d583:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  41d587:	48 89 ca             	mov    %rcx,%rdx
  41d58a:	48 83 c2 08          	add    $0x8,%rdx
  41d58e:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  41d592:	48 89 cf             	mov    %rcx,%rdi
  41d595:	48 89 85 30 fe ff ff 	mov    %rax,-0x1d0(%rbp)
  41d59c:	e8 a7 8b 02 00       	callq  446148 <getDecryptedValueQWord>
  41d5a1:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  41d5a5:	48 f7 e1             	mul    %rcx
  41d5a8:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  41d5ac:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  41d5b0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41d5b4:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  41d5b8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41d5bc:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  41d5c0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41d5c4:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  41d5c8:	48 01 c1             	add    %rax,%rcx
  41d5cb:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
  41d5cf:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  41d5d3:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  41d5d7:	48 29 c8             	sub    %rcx,%rax
  41d5da:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  41d5de:	48 83 d1 00          	adc    $0x0,%rcx
  41d5e2:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
  41d5e6:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41d5ea:	48 89 85 28 fe ff ff 	mov    %rax,-0x1d8(%rbp)
  41d5f1:	e8 52 8b 02 00       	callq  446148 <getDecryptedValueQWord>
  41d5f6:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  41d5fa:	48 01 c1             	add    %rax,%rcx
  41d5fd:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
  41d601:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  41d605:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41d609:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
  41d610:	e8 33 8b 02 00       	callq  446148 <getDecryptedValueQWord>
  41d615:	48 8b 8d 20 fe ff ff 	mov    -0x1e0(%rbp),%rcx
  41d61c:	48 29 c1             	sub    %rax,%rcx
  41d61f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  41d623:	48 83 d0 00          	adc    $0x0,%rax
  41d627:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  41d62b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  41d62f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41d633:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  41d637:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41d63b:	48 89 c2             	mov    %rax,%rdx
  41d63e:	48 83 c2 08          	add    $0x8,%rdx
  41d642:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  41d646:	48 89 c7             	mov    %rax,%rdi
  41d649:	48 89 8d 18 fe ff ff 	mov    %rcx,-0x1e8(%rbp)
  41d650:	e8 a7 86 02 00       	callq  445cfc <setEncryptedValueQWord>
  41d655:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  41d659:	48 89 ca             	mov    %rcx,%rdx
  41d65c:	48 83 c2 08          	add    $0x8,%rdx
  41d660:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  41d664:	48 89 cf             	mov    %rcx,%rdi
  41d667:	48 89 85 10 fe ff ff 	mov    %rax,-0x1f0(%rbp)
  41d66e:	e8 d5 8a 02 00       	callq  446148 <getDecryptedValueQWord>
  41d673:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  41d677:	48 f7 e1             	mul    %rcx
  41d67a:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  41d67e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  41d682:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41d686:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  41d68a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41d68e:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  41d692:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41d696:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  41d69a:	48 01 c1             	add    %rax,%rcx
  41d69d:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
  41d6a1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  41d6a5:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  41d6a9:	48 29 c8             	sub    %rcx,%rax
  41d6ac:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  41d6b0:	48 83 d1 00          	adc    $0x0,%rcx
  41d6b4:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
  41d6b8:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41d6bc:	48 89 85 08 fe ff ff 	mov    %rax,-0x1f8(%rbp)
  41d6c3:	e8 80 8a 02 00       	callq  446148 <getDecryptedValueQWord>
  41d6c8:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  41d6cc:	48 01 c1             	add    %rax,%rcx
  41d6cf:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
  41d6d3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  41d6d7:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41d6db:	48 89 85 00 fe ff ff 	mov    %rax,-0x200(%rbp)
  41d6e2:	e8 61 8a 02 00       	callq  446148 <getDecryptedValueQWord>
  41d6e7:	48 8b 8d 00 fe ff ff 	mov    -0x200(%rbp),%rcx
  41d6ee:	48 29 c1             	sub    %rax,%rcx
  41d6f1:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  41d6f5:	48 83 d0 00          	adc    $0x0,%rax
  41d6f9:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  41d6fd:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  41d701:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41d705:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  41d709:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41d70d:	48 89 c2             	mov    %rax,%rdx
  41d710:	48 83 c2 08          	add    $0x8,%rdx
  41d714:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  41d718:	48 89 c7             	mov    %rax,%rdi
  41d71b:	48 89 8d f8 fd ff ff 	mov    %rcx,-0x208(%rbp)
  41d722:	e8 d5 85 02 00       	callq  445cfc <setEncryptedValueQWord>
  41d727:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  41d72b:	48 89 ca             	mov    %rcx,%rdx
  41d72e:	48 83 c2 08          	add    $0x8,%rdx
  41d732:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  41d736:	48 89 cf             	mov    %rcx,%rdi
  41d739:	48 89 85 f0 fd ff ff 	mov    %rax,-0x210(%rbp)
  41d740:	e8 03 8a 02 00       	callq  446148 <getDecryptedValueQWord>
  41d745:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  41d749:	48 f7 e1             	mul    %rcx
  41d74c:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  41d750:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  41d754:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41d758:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  41d75c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41d760:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  41d764:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41d768:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  41d76c:	48 01 c1             	add    %rax,%rcx
  41d76f:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
  41d773:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  41d777:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  41d77b:	48 29 c8             	sub    %rcx,%rax
  41d77e:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  41d782:	48 83 d1 00          	adc    $0x0,%rcx
  41d786:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
  41d78a:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41d78e:	48 89 85 e8 fd ff ff 	mov    %rax,-0x218(%rbp)
  41d795:	e8 ae 89 02 00       	callq  446148 <getDecryptedValueQWord>
  41d79a:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  41d79e:	48 01 c1             	add    %rax,%rcx
  41d7a1:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
  41d7a5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  41d7a9:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41d7ad:	48 89 85 e0 fd ff ff 	mov    %rax,-0x220(%rbp)
  41d7b4:	e8 8f 89 02 00       	callq  446148 <getDecryptedValueQWord>
  41d7b9:	48 8b 8d e0 fd ff ff 	mov    -0x220(%rbp),%rcx
  41d7c0:	48 29 c1             	sub    %rax,%rcx
  41d7c3:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  41d7c7:	48 83 d0 00          	adc    $0x0,%rax
  41d7cb:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  41d7cf:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  41d7d3:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41d7d7:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  41d7db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41d7df:	48 89 c2             	mov    %rax,%rdx
  41d7e2:	48 83 c2 08          	add    $0x8,%rdx
  41d7e6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  41d7ea:	48 89 c7             	mov    %rax,%rdi
  41d7ed:	48 89 8d d8 fd ff ff 	mov    %rcx,-0x228(%rbp)
  41d7f4:	e8 03 85 02 00       	callq  445cfc <setEncryptedValueQWord>
  41d7f9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  41d7fd:	48 89 ca             	mov    %rcx,%rdx
  41d800:	48 83 c2 08          	add    $0x8,%rdx
  41d804:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  41d808:	48 89 cf             	mov    %rcx,%rdi
  41d80b:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
  41d812:	e8 31 89 02 00       	callq  446148 <getDecryptedValueQWord>
  41d817:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  41d81b:	48 f7 e1             	mul    %rcx
  41d81e:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  41d822:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  41d826:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41d82a:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  41d82e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41d832:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  41d836:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41d83a:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  41d83e:	48 01 c1             	add    %rax,%rcx
  41d841:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
  41d845:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  41d849:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  41d84d:	48 29 c8             	sub    %rcx,%rax
  41d850:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  41d854:	48 83 d1 00          	adc    $0x0,%rcx
  41d858:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
  41d85c:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41d860:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
  41d867:	e8 dc 88 02 00       	callq  446148 <getDecryptedValueQWord>
  41d86c:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  41d870:	48 01 c1             	add    %rax,%rcx
  41d873:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
  41d877:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  41d87b:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41d87f:	48 89 85 c0 fd ff ff 	mov    %rax,-0x240(%rbp)
  41d886:	e8 bd 88 02 00       	callq  446148 <getDecryptedValueQWord>
  41d88b:	48 8b 8d c0 fd ff ff 	mov    -0x240(%rbp),%rcx
  41d892:	48 29 c1             	sub    %rax,%rcx
  41d895:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  41d899:	48 83 d0 00          	adc    $0x0,%rax
  41d89d:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  41d8a1:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  41d8a5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41d8a9:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  41d8ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41d8b1:	48 89 c2             	mov    %rax,%rdx
  41d8b4:	48 83 c2 08          	add    $0x8,%rdx
  41d8b8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  41d8bc:	48 89 c7             	mov    %rax,%rdi
  41d8bf:	48 89 8d b8 fd ff ff 	mov    %rcx,-0x248(%rbp)
  41d8c6:	e8 31 84 02 00       	callq  445cfc <setEncryptedValueQWord>
  41d8cb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  41d8cf:	48 89 ca             	mov    %rcx,%rdx
  41d8d2:	48 83 c2 08          	add    $0x8,%rdx
  41d8d6:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  41d8da:	48 89 cf             	mov    %rcx,%rdi
  41d8dd:	48 89 85 b0 fd ff ff 	mov    %rax,-0x250(%rbp)
  41d8e4:	e8 5f 88 02 00       	callq  446148 <getDecryptedValueQWord>
  41d8e9:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  41d8ed:	48 f7 e1             	mul    %rcx
  41d8f0:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  41d8f4:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  41d8f8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41d8fc:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  41d900:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41d904:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  41d908:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41d90c:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  41d910:	48 01 c1             	add    %rax,%rcx
  41d913:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
  41d917:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  41d91b:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  41d91f:	48 29 c8             	sub    %rcx,%rax
  41d922:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  41d926:	48 83 d1 00          	adc    $0x0,%rcx
  41d92a:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
  41d92e:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41d932:	48 89 85 a8 fd ff ff 	mov    %rax,-0x258(%rbp)
  41d939:	e8 0a 88 02 00       	callq  446148 <getDecryptedValueQWord>
  41d93e:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  41d942:	48 01 c1             	add    %rax,%rcx
  41d945:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
  41d949:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  41d94d:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41d951:	48 89 85 a0 fd ff ff 	mov    %rax,-0x260(%rbp)
  41d958:	e8 eb 87 02 00       	callq  446148 <getDecryptedValueQWord>
  41d95d:	48 8b 8d a0 fd ff ff 	mov    -0x260(%rbp),%rcx
  41d964:	48 29 c1             	sub    %rax,%rcx
  41d967:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  41d96b:	48 83 d0 00          	adc    $0x0,%rax
  41d96f:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  41d973:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  41d977:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41d97b:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  41d97f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41d983:	48 89 c2             	mov    %rax,%rdx
  41d986:	48 83 c2 08          	add    $0x8,%rdx
  41d98a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  41d98e:	48 89 c7             	mov    %rax,%rdi
  41d991:	48 89 8d 98 fd ff ff 	mov    %rcx,-0x268(%rbp)
  41d998:	e8 5f 83 02 00       	callq  445cfc <setEncryptedValueQWord>
  41d99d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  41d9a1:	48 89 ca             	mov    %rcx,%rdx
  41d9a4:	48 83 c2 08          	add    $0x8,%rdx
  41d9a8:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  41d9ac:	48 89 cf             	mov    %rcx,%rdi
  41d9af:	48 89 85 90 fd ff ff 	mov    %rax,-0x270(%rbp)
  41d9b6:	e8 8d 87 02 00       	callq  446148 <getDecryptedValueQWord>
  41d9bb:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  41d9bf:	48 f7 e1             	mul    %rcx
  41d9c2:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  41d9c6:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  41d9ca:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41d9ce:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  41d9d2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41d9d6:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  41d9da:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41d9de:	48 03 45 b8          	add    -0x48(%rbp),%rax
  41d9e2:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  41d9e6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  41d9ea:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
  41d9ee:	41 0f 92 c0          	setb   %r8b
  41d9f2:	41 80 e0 01          	and    $0x1,%r8b
  41d9f6:	45 0f b6 c8          	movzbl %r8b,%r9d
  41d9fa:	49 63 c1             	movslq %r9d,%rax
  41d9fd:	48 03 45 b0          	add    -0x50(%rbp),%rax
  41da01:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  41da05:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41da09:	48 89 c7             	mov    %rax,%rdi
  41da0c:	e8 37 87 02 00       	callq  446148 <getDecryptedValueQWord>
  41da11:	48 03 45 b8          	add    -0x48(%rbp),%rax
  41da15:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  41da19:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  41da1d:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  41da21:	48 89 cf             	mov    %rcx,%rdi
  41da24:	48 89 85 88 fd ff ff 	mov    %rax,-0x278(%rbp)
  41da2b:	e8 18 87 02 00       	callq  446148 <getDecryptedValueQWord>
  41da30:	48 8b 8d 88 fd ff ff 	mov    -0x278(%rbp),%rcx
  41da37:	48 39 c1             	cmp    %rax,%rcx
  41da3a:	41 0f 92 c0          	setb   %r8b
  41da3e:	41 80 e0 01          	and    $0x1,%r8b
  41da42:	45 0f b6 c8          	movzbl %r8b,%r9d
  41da46:	49 63 c1             	movslq %r9d,%rax
  41da49:	48 03 45 b0          	add    -0x50(%rbp),%rax
  41da4d:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  41da51:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  41da55:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41da59:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  41da5d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41da61:	48 89 c2             	mov    %rax,%rdx
  41da64:	48 83 c2 08          	add    $0x8,%rdx
  41da68:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  41da6c:	48 89 c7             	mov    %rax,%rdi
  41da6f:	e8 88 82 02 00       	callq  445cfc <setEncryptedValueQWord>
  41da74:	48 89 85 80 fd ff ff 	mov    %rax,-0x280(%rbp)
  41da7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41da7f:	48 83 e8 10          	sub    $0x10,%rax
  41da83:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41da87:	e9 bf f2 ff ff       	jmpq   41cd4b <mpi_mul_hlp+0x2b>
  41da8c:	eb 00                	jmp    41da8e <mpi_mul_hlp+0xd6e>
  41da8e:	48 83 7d f8 08       	cmpq   $0x8,-0x8(%rbp)
  41da93:	0f 82 a6 06 00 00    	jb     41e13f <mpi_mul_hlp+0x141f>
  41da99:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41da9d:	48 89 c1             	mov    %rax,%rcx
  41daa0:	48 83 c1 08          	add    $0x8,%rcx
  41daa4:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
  41daa8:	48 89 c7             	mov    %rax,%rdi
  41daab:	e8 98 86 02 00       	callq  446148 <getDecryptedValueQWord>
  41dab0:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  41dab4:	48 f7 e1             	mul    %rcx
  41dab7:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
  41dabb:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  41dabf:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  41dac3:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  41dac7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  41dacb:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  41dacf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41dad3:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
  41dad7:	48 01 c1             	add    %rax,%rcx
  41dada:	48 89 4d 98          	mov    %rcx,-0x68(%rbp)
  41dade:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  41dae2:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  41dae6:	48 29 c8             	sub    %rcx,%rax
  41dae9:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  41daed:	48 83 d1 00          	adc    $0x0,%rcx
  41daf1:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
  41daf5:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41daf9:	48 89 85 78 fd ff ff 	mov    %rax,-0x288(%rbp)
  41db00:	e8 43 86 02 00       	callq  446148 <getDecryptedValueQWord>
  41db05:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
  41db09:	48 01 c1             	add    %rax,%rcx
  41db0c:	48 89 4d 98          	mov    %rcx,-0x68(%rbp)
  41db10:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  41db14:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41db18:	48 89 85 70 fd ff ff 	mov    %rax,-0x290(%rbp)
  41db1f:	e8 24 86 02 00       	callq  446148 <getDecryptedValueQWord>
  41db24:	48 8b 8d 70 fd ff ff 	mov    -0x290(%rbp),%rcx
  41db2b:	48 29 c1             	sub    %rax,%rcx
  41db2e:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  41db32:	48 83 d0 00          	adc    $0x0,%rax
  41db36:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  41db3a:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  41db3e:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41db42:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
  41db46:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41db4a:	48 89 c2             	mov    %rax,%rdx
  41db4d:	48 83 c2 08          	add    $0x8,%rdx
  41db51:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  41db55:	48 89 c7             	mov    %rax,%rdi
  41db58:	48 89 8d 68 fd ff ff 	mov    %rcx,-0x298(%rbp)
  41db5f:	e8 98 81 02 00       	callq  445cfc <setEncryptedValueQWord>
  41db64:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  41db68:	48 89 ca             	mov    %rcx,%rdx
  41db6b:	48 83 c2 08          	add    $0x8,%rdx
  41db6f:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  41db73:	48 89 cf             	mov    %rcx,%rdi
  41db76:	48 89 85 60 fd ff ff 	mov    %rax,-0x2a0(%rbp)
  41db7d:	e8 c6 85 02 00       	callq  446148 <getDecryptedValueQWord>
  41db82:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  41db86:	48 f7 e1             	mul    %rcx
  41db89:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
  41db8d:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  41db91:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  41db95:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  41db99:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  41db9d:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  41dba1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41dba5:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
  41dba9:	48 01 c1             	add    %rax,%rcx
  41dbac:	48 89 4d 98          	mov    %rcx,-0x68(%rbp)
  41dbb0:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  41dbb4:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  41dbb8:	48 29 c8             	sub    %rcx,%rax
  41dbbb:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  41dbbf:	48 83 d1 00          	adc    $0x0,%rcx
  41dbc3:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
  41dbc7:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41dbcb:	48 89 85 58 fd ff ff 	mov    %rax,-0x2a8(%rbp)
  41dbd2:	e8 71 85 02 00       	callq  446148 <getDecryptedValueQWord>
  41dbd7:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
  41dbdb:	48 01 c1             	add    %rax,%rcx
  41dbde:	48 89 4d 98          	mov    %rcx,-0x68(%rbp)
  41dbe2:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  41dbe6:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41dbea:	48 89 85 50 fd ff ff 	mov    %rax,-0x2b0(%rbp)
  41dbf1:	e8 52 85 02 00       	callq  446148 <getDecryptedValueQWord>
  41dbf6:	48 8b 8d 50 fd ff ff 	mov    -0x2b0(%rbp),%rcx
  41dbfd:	48 29 c1             	sub    %rax,%rcx
  41dc00:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  41dc04:	48 83 d0 00          	adc    $0x0,%rax
  41dc08:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  41dc0c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  41dc10:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41dc14:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
  41dc18:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41dc1c:	48 89 c2             	mov    %rax,%rdx
  41dc1f:	48 83 c2 08          	add    $0x8,%rdx
  41dc23:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  41dc27:	48 89 c7             	mov    %rax,%rdi
  41dc2a:	48 89 8d 48 fd ff ff 	mov    %rcx,-0x2b8(%rbp)
  41dc31:	e8 c6 80 02 00       	callq  445cfc <setEncryptedValueQWord>
  41dc36:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  41dc3a:	48 89 ca             	mov    %rcx,%rdx
  41dc3d:	48 83 c2 08          	add    $0x8,%rdx
  41dc41:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  41dc45:	48 89 cf             	mov    %rcx,%rdi
  41dc48:	48 89 85 40 fd ff ff 	mov    %rax,-0x2c0(%rbp)
  41dc4f:	e8 f4 84 02 00       	callq  446148 <getDecryptedValueQWord>
  41dc54:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  41dc58:	48 f7 e1             	mul    %rcx
  41dc5b:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
  41dc5f:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  41dc63:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  41dc67:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  41dc6b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  41dc6f:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  41dc73:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41dc77:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
  41dc7b:	48 01 c1             	add    %rax,%rcx
  41dc7e:	48 89 4d 98          	mov    %rcx,-0x68(%rbp)
  41dc82:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  41dc86:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  41dc8a:	48 29 c8             	sub    %rcx,%rax
  41dc8d:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  41dc91:	48 83 d1 00          	adc    $0x0,%rcx
  41dc95:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
  41dc99:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41dc9d:	48 89 85 38 fd ff ff 	mov    %rax,-0x2c8(%rbp)
  41dca4:	e8 9f 84 02 00       	callq  446148 <getDecryptedValueQWord>
  41dca9:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
  41dcad:	48 01 c1             	add    %rax,%rcx
  41dcb0:	48 89 4d 98          	mov    %rcx,-0x68(%rbp)
  41dcb4:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  41dcb8:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41dcbc:	48 89 85 30 fd ff ff 	mov    %rax,-0x2d0(%rbp)
  41dcc3:	e8 80 84 02 00       	callq  446148 <getDecryptedValueQWord>
  41dcc8:	48 8b 8d 30 fd ff ff 	mov    -0x2d0(%rbp),%rcx
  41dccf:	48 29 c1             	sub    %rax,%rcx
  41dcd2:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  41dcd6:	48 83 d0 00          	adc    $0x0,%rax
  41dcda:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  41dcde:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  41dce2:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41dce6:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
  41dcea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41dcee:	48 89 c2             	mov    %rax,%rdx
  41dcf1:	48 83 c2 08          	add    $0x8,%rdx
  41dcf5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  41dcf9:	48 89 c7             	mov    %rax,%rdi
  41dcfc:	48 89 8d 28 fd ff ff 	mov    %rcx,-0x2d8(%rbp)
  41dd03:	e8 f4 7f 02 00       	callq  445cfc <setEncryptedValueQWord>
  41dd08:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  41dd0c:	48 89 ca             	mov    %rcx,%rdx
  41dd0f:	48 83 c2 08          	add    $0x8,%rdx
  41dd13:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  41dd17:	48 89 cf             	mov    %rcx,%rdi
  41dd1a:	48 89 85 20 fd ff ff 	mov    %rax,-0x2e0(%rbp)
  41dd21:	e8 22 84 02 00       	callq  446148 <getDecryptedValueQWord>
  41dd26:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  41dd2a:	48 f7 e1             	mul    %rcx
  41dd2d:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
  41dd31:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  41dd35:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  41dd39:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  41dd3d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  41dd41:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  41dd45:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41dd49:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
  41dd4d:	48 01 c1             	add    %rax,%rcx
  41dd50:	48 89 4d 98          	mov    %rcx,-0x68(%rbp)
  41dd54:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  41dd58:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  41dd5c:	48 29 c8             	sub    %rcx,%rax
  41dd5f:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  41dd63:	48 83 d1 00          	adc    $0x0,%rcx
  41dd67:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
  41dd6b:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41dd6f:	48 89 85 18 fd ff ff 	mov    %rax,-0x2e8(%rbp)
  41dd76:	e8 cd 83 02 00       	callq  446148 <getDecryptedValueQWord>
  41dd7b:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
  41dd7f:	48 01 c1             	add    %rax,%rcx
  41dd82:	48 89 4d 98          	mov    %rcx,-0x68(%rbp)
  41dd86:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  41dd8a:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41dd8e:	48 89 85 10 fd ff ff 	mov    %rax,-0x2f0(%rbp)
  41dd95:	e8 ae 83 02 00       	callq  446148 <getDecryptedValueQWord>
  41dd9a:	48 8b 8d 10 fd ff ff 	mov    -0x2f0(%rbp),%rcx
  41dda1:	48 29 c1             	sub    %rax,%rcx
  41dda4:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  41dda8:	48 83 d0 00          	adc    $0x0,%rax
  41ddac:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  41ddb0:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  41ddb4:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41ddb8:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
  41ddbc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41ddc0:	48 89 c2             	mov    %rax,%rdx
  41ddc3:	48 83 c2 08          	add    $0x8,%rdx
  41ddc7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  41ddcb:	48 89 c7             	mov    %rax,%rdi
  41ddce:	48 89 8d 08 fd ff ff 	mov    %rcx,-0x2f8(%rbp)
  41ddd5:	e8 22 7f 02 00       	callq  445cfc <setEncryptedValueQWord>
  41ddda:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  41ddde:	48 89 ca             	mov    %rcx,%rdx
  41dde1:	48 83 c2 08          	add    $0x8,%rdx
  41dde5:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  41dde9:	48 89 cf             	mov    %rcx,%rdi
  41ddec:	48 89 85 00 fd ff ff 	mov    %rax,-0x300(%rbp)
  41ddf3:	e8 50 83 02 00       	callq  446148 <getDecryptedValueQWord>
  41ddf8:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  41ddfc:	48 f7 e1             	mul    %rcx
  41ddff:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
  41de03:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  41de07:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  41de0b:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  41de0f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  41de13:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  41de17:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41de1b:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
  41de1f:	48 01 c1             	add    %rax,%rcx
  41de22:	48 89 4d 98          	mov    %rcx,-0x68(%rbp)
  41de26:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  41de2a:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  41de2e:	48 29 c8             	sub    %rcx,%rax
  41de31:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  41de35:	48 83 d1 00          	adc    $0x0,%rcx
  41de39:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
  41de3d:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41de41:	48 89 85 f8 fc ff ff 	mov    %rax,-0x308(%rbp)
  41de48:	e8 fb 82 02 00       	callq  446148 <getDecryptedValueQWord>
  41de4d:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
  41de51:	48 01 c1             	add    %rax,%rcx
  41de54:	48 89 4d 98          	mov    %rcx,-0x68(%rbp)
  41de58:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  41de5c:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41de60:	48 89 85 f0 fc ff ff 	mov    %rax,-0x310(%rbp)
  41de67:	e8 dc 82 02 00       	callq  446148 <getDecryptedValueQWord>
  41de6c:	48 8b 8d f0 fc ff ff 	mov    -0x310(%rbp),%rcx
  41de73:	48 29 c1             	sub    %rax,%rcx
  41de76:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  41de7a:	48 83 d0 00          	adc    $0x0,%rax
  41de7e:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  41de82:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  41de86:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41de8a:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
  41de8e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41de92:	48 89 c2             	mov    %rax,%rdx
  41de95:	48 83 c2 08          	add    $0x8,%rdx
  41de99:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  41de9d:	48 89 c7             	mov    %rax,%rdi
  41dea0:	48 89 8d e8 fc ff ff 	mov    %rcx,-0x318(%rbp)
  41dea7:	e8 50 7e 02 00       	callq  445cfc <setEncryptedValueQWord>
  41deac:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  41deb0:	48 89 ca             	mov    %rcx,%rdx
  41deb3:	48 83 c2 08          	add    $0x8,%rdx
  41deb7:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  41debb:	48 89 cf             	mov    %rcx,%rdi
  41debe:	48 89 85 e0 fc ff ff 	mov    %rax,-0x320(%rbp)
  41dec5:	e8 7e 82 02 00       	callq  446148 <getDecryptedValueQWord>
  41deca:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  41dece:	48 f7 e1             	mul    %rcx
  41ded1:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
  41ded5:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  41ded9:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  41dedd:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  41dee1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  41dee5:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  41dee9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41deed:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
  41def1:	48 01 c1             	add    %rax,%rcx
  41def4:	48 89 4d 98          	mov    %rcx,-0x68(%rbp)
  41def8:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  41defc:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  41df00:	48 29 c8             	sub    %rcx,%rax
  41df03:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  41df07:	48 83 d1 00          	adc    $0x0,%rcx
  41df0b:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
  41df0f:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41df13:	48 89 85 d8 fc ff ff 	mov    %rax,-0x328(%rbp)
  41df1a:	e8 29 82 02 00       	callq  446148 <getDecryptedValueQWord>
  41df1f:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
  41df23:	48 01 c1             	add    %rax,%rcx
  41df26:	48 89 4d 98          	mov    %rcx,-0x68(%rbp)
  41df2a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  41df2e:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41df32:	48 89 85 d0 fc ff ff 	mov    %rax,-0x330(%rbp)
  41df39:	e8 0a 82 02 00       	callq  446148 <getDecryptedValueQWord>
  41df3e:	48 8b 8d d0 fc ff ff 	mov    -0x330(%rbp),%rcx
  41df45:	48 29 c1             	sub    %rax,%rcx
  41df48:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  41df4c:	48 83 d0 00          	adc    $0x0,%rax
  41df50:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  41df54:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  41df58:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41df5c:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
  41df60:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41df64:	48 89 c2             	mov    %rax,%rdx
  41df67:	48 83 c2 08          	add    $0x8,%rdx
  41df6b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  41df6f:	48 89 c7             	mov    %rax,%rdi
  41df72:	48 89 8d c8 fc ff ff 	mov    %rcx,-0x338(%rbp)
  41df79:	e8 7e 7d 02 00       	callq  445cfc <setEncryptedValueQWord>
  41df7e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  41df82:	48 89 ca             	mov    %rcx,%rdx
  41df85:	48 83 c2 08          	add    $0x8,%rdx
  41df89:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  41df8d:	48 89 cf             	mov    %rcx,%rdi
  41df90:	48 89 85 c0 fc ff ff 	mov    %rax,-0x340(%rbp)
  41df97:	e8 ac 81 02 00       	callq  446148 <getDecryptedValueQWord>
  41df9c:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  41dfa0:	48 f7 e1             	mul    %rcx
  41dfa3:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
  41dfa7:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  41dfab:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  41dfaf:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  41dfb3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  41dfb7:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  41dfbb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41dfbf:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
  41dfc3:	48 01 c1             	add    %rax,%rcx
  41dfc6:	48 89 4d 98          	mov    %rcx,-0x68(%rbp)
  41dfca:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  41dfce:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  41dfd2:	48 29 c8             	sub    %rcx,%rax
  41dfd5:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  41dfd9:	48 83 d1 00          	adc    $0x0,%rcx
  41dfdd:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
  41dfe1:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41dfe5:	48 89 85 b8 fc ff ff 	mov    %rax,-0x348(%rbp)
  41dfec:	e8 57 81 02 00       	callq  446148 <getDecryptedValueQWord>
  41dff1:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
  41dff5:	48 01 c1             	add    %rax,%rcx
  41dff8:	48 89 4d 98          	mov    %rcx,-0x68(%rbp)
  41dffc:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  41e000:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41e004:	48 89 85 b0 fc ff ff 	mov    %rax,-0x350(%rbp)
  41e00b:	e8 38 81 02 00       	callq  446148 <getDecryptedValueQWord>
  41e010:	48 8b 8d b0 fc ff ff 	mov    -0x350(%rbp),%rcx
  41e017:	48 29 c1             	sub    %rax,%rcx
  41e01a:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  41e01e:	48 83 d0 00          	adc    $0x0,%rax
  41e022:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  41e026:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  41e02a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41e02e:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
  41e032:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41e036:	48 89 c2             	mov    %rax,%rdx
  41e039:	48 83 c2 08          	add    $0x8,%rdx
  41e03d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  41e041:	48 89 c7             	mov    %rax,%rdi
  41e044:	48 89 8d a8 fc ff ff 	mov    %rcx,-0x358(%rbp)
  41e04b:	e8 ac 7c 02 00       	callq  445cfc <setEncryptedValueQWord>
  41e050:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  41e054:	48 89 ca             	mov    %rcx,%rdx
  41e057:	48 83 c2 08          	add    $0x8,%rdx
  41e05b:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  41e05f:	48 89 cf             	mov    %rcx,%rdi
  41e062:	48 89 85 a0 fc ff ff 	mov    %rax,-0x360(%rbp)
  41e069:	e8 da 80 02 00       	callq  446148 <getDecryptedValueQWord>
  41e06e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  41e072:	48 f7 e1             	mul    %rcx
  41e075:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
  41e079:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  41e07d:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  41e081:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  41e085:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  41e089:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  41e08d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41e091:	48 03 45 98          	add    -0x68(%rbp),%rax
  41e095:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  41e099:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  41e09d:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
  41e0a1:	41 0f 92 c0          	setb   %r8b
  41e0a5:	41 80 e0 01          	and    $0x1,%r8b
  41e0a9:	45 0f b6 c8          	movzbl %r8b,%r9d
  41e0ad:	49 63 c1             	movslq %r9d,%rax
  41e0b0:	48 03 45 90          	add    -0x70(%rbp),%rax
  41e0b4:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  41e0b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41e0bc:	48 89 c7             	mov    %rax,%rdi
  41e0bf:	e8 84 80 02 00       	callq  446148 <getDecryptedValueQWord>
  41e0c4:	48 03 45 98          	add    -0x68(%rbp),%rax
  41e0c8:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  41e0cc:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  41e0d0:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  41e0d4:	48 89 cf             	mov    %rcx,%rdi
  41e0d7:	48 89 85 98 fc ff ff 	mov    %rax,-0x368(%rbp)
  41e0de:	e8 65 80 02 00       	callq  446148 <getDecryptedValueQWord>
  41e0e3:	48 8b 8d 98 fc ff ff 	mov    -0x368(%rbp),%rcx
  41e0ea:	48 39 c1             	cmp    %rax,%rcx
  41e0ed:	41 0f 92 c0          	setb   %r8b
  41e0f1:	41 80 e0 01          	and    $0x1,%r8b
  41e0f5:	45 0f b6 c8          	movzbl %r8b,%r9d
  41e0f9:	49 63 c1             	movslq %r9d,%rax
  41e0fc:	48 03 45 90          	add    -0x70(%rbp),%rax
  41e100:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  41e104:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  41e108:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41e10c:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
  41e110:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41e114:	48 89 c2             	mov    %rax,%rdx
  41e117:	48 83 c2 08          	add    $0x8,%rdx
  41e11b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  41e11f:	48 89 c7             	mov    %rax,%rdi
  41e122:	e8 d5 7b 02 00       	callq  445cfc <setEncryptedValueQWord>
  41e127:	48 89 85 90 fc ff ff 	mov    %rax,-0x370(%rbp)
  41e12e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41e132:	48 83 e8 08          	sub    $0x8,%rax
  41e136:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41e13a:	e9 4f f9 ff ff       	jmpq   41da8e <mpi_mul_hlp+0xd6e>
  41e13f:	eb 00                	jmp    41e141 <mpi_mul_hlp+0x1421>
  41e141:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  41e146:	0f 86 12 01 00 00    	jbe    41e25e <mpi_mul_hlp+0x153e>
  41e14c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41e150:	48 89 c1             	mov    %rax,%rcx
  41e153:	48 83 c1 08          	add    $0x8,%rcx
  41e157:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
  41e15b:	48 89 c7             	mov    %rax,%rdi
  41e15e:	e8 e5 7f 02 00       	callq  446148 <getDecryptedValueQWord>
  41e163:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  41e167:	48 f7 e1             	mul    %rcx
  41e16a:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
  41e16e:	48 89 45 80          	mov    %rax,-0x80(%rbp)
  41e172:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  41e176:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  41e17d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  41e181:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
  41e188:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41e18c:	48 03 85 78 ff ff ff 	add    -0x88(%rbp),%rax
  41e193:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  41e19a:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  41e1a1:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
  41e1a5:	40 0f 92 c6          	setb   %sil
  41e1a9:	40 80 e6 01          	and    $0x1,%sil
  41e1ad:	44 0f b6 c6          	movzbl %sil,%r8d
  41e1b1:	49 63 c0             	movslq %r8d,%rax
  41e1b4:	48 03 85 70 ff ff ff 	add    -0x90(%rbp),%rax
  41e1bb:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
  41e1c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41e1c6:	48 89 c7             	mov    %rax,%rdi
  41e1c9:	e8 7a 7f 02 00       	callq  446148 <getDecryptedValueQWord>
  41e1ce:	48 03 85 78 ff ff ff 	add    -0x88(%rbp),%rax
  41e1d5:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  41e1dc:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  41e1e3:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  41e1e7:	48 89 cf             	mov    %rcx,%rdi
  41e1ea:	48 89 85 88 fc ff ff 	mov    %rax,-0x378(%rbp)
  41e1f1:	e8 52 7f 02 00       	callq  446148 <getDecryptedValueQWord>
  41e1f6:	48 8b 8d 88 fc ff ff 	mov    -0x378(%rbp),%rcx
  41e1fd:	48 39 c1             	cmp    %rax,%rcx
  41e200:	40 0f 92 c6          	setb   %sil
  41e204:	40 80 e6 01          	and    $0x1,%sil
  41e208:	44 0f b6 c6          	movzbl %sil,%r8d
  41e20c:	49 63 c0             	movslq %r8d,%rax
  41e20f:	48 03 85 70 ff ff ff 	add    -0x90(%rbp),%rax
  41e216:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
  41e21d:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  41e224:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41e228:	48 8b b5 78 ff ff ff 	mov    -0x88(%rbp),%rsi
  41e22f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41e233:	48 89 c2             	mov    %rax,%rdx
  41e236:	48 83 c2 08          	add    $0x8,%rdx
  41e23a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  41e23e:	48 89 c7             	mov    %rax,%rdi
  41e241:	e8 b6 7a 02 00       	callq  445cfc <setEncryptedValueQWord>
  41e246:	48 89 85 80 fc ff ff 	mov    %rax,-0x380(%rbp)
  41e24d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41e251:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
  41e255:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41e259:	e9 e3 fe ff ff       	jmpq   41e141 <mpi_mul_hlp+0x1421>
  41e25e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41e262:	48 83 c0 01          	add    $0x1,%rax
  41e266:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  41e26a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41e26e:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  41e272:	48 89 ca             	mov    %rcx,%rdx
  41e275:	48 89 d7             	mov    %rdx,%rdi
  41e278:	48 89 85 78 fc ff ff 	mov    %rax,-0x388(%rbp)
  41e27f:	48 89 8d 70 fc ff ff 	mov    %rcx,-0x390(%rbp)
  41e286:	e8 bd 7e 02 00       	callq  446148 <getDecryptedValueQWord>
  41e28b:	48 8b 8d 78 fc ff ff 	mov    -0x388(%rbp),%rcx
  41e292:	48 01 c8             	add    %rcx,%rax
  41e295:	48 8b 8d 70 fc ff ff 	mov    -0x390(%rbp),%rcx
  41e29c:	48 89 cf             	mov    %rcx,%rdi
  41e29f:	48 89 c6             	mov    %rax,%rsi
  41e2a2:	e8 55 7a 02 00       	callq  445cfc <setEncryptedValueQWord>
  41e2a7:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  41e2ab:	48 89 cf             	mov    %rcx,%rdi
  41e2ae:	48 89 85 68 fc ff ff 	mov    %rax,-0x398(%rbp)
  41e2b5:	e8 8e 7e 02 00       	callq  446148 <getDecryptedValueQWord>
  41e2ba:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
  41e2be:	41 0f 92 c0          	setb   %r8b
  41e2c2:	41 80 e0 01          	and    $0x1,%r8b
  41e2c6:	45 0f b6 c8          	movzbl %r8b,%r9d
  41e2ca:	49 63 c1             	movslq %r9d,%rax
  41e2cd:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41e2d1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41e2d5:	48 83 c0 08          	add    $0x8,%rax
  41e2d9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  41e2dd:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  41e2e2:	75 86                	jne    41e26a <mpi_mul_hlp+0x154a>
  41e2e4:	e8 6d 76 02 00       	callq  445956 <writeback_cache>
  41e2e9:	48 81 c4 a0 03 00 00 	add    $0x3a0,%rsp
  41e2f0:	5d                   	pop    %rbp
  41e2f1:	c3                   	retq   
  41e2f2:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  41e2f9:	1f 84 00 00 00 00 00 

000000000041e300 <mbedtls_mpi_write_string>:
  41e300:	55                   	push   %rbp
  41e301:	48 89 e5             	mov    %rsp,%rbp
  41e304:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
  41e30b:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  41e30f:	89 75 ec             	mov    %esi,-0x14(%rbp)
  41e312:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
  41e316:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  41e31a:	4c 89 45 d0          	mov    %r8,-0x30(%rbp)
  41e31e:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
  41e325:	eb 00                	jmp    41e327 <mbedtls_mpi_write_string+0x27>
  41e327:	eb 00                	jmp    41e329 <mbedtls_mpi_write_string+0x29>
  41e329:	eb 00                	jmp    41e32b <mbedtls_mpi_write_string+0x2b>
  41e32b:	eb 00                	jmp    41e32d <mbedtls_mpi_write_string+0x2d>
  41e32d:	eb 00                	jmp    41e32f <mbedtls_mpi_write_string+0x2f>
  41e32f:	83 7d ec 02          	cmpl   $0x2,-0x14(%rbp)
  41e333:	7c 06                	jl     41e33b <mbedtls_mpi_write_string+0x3b>
  41e335:	83 7d ec 10          	cmpl   $0x10,-0x14(%rbp)
  41e339:	7e 0c                	jle    41e347 <mbedtls_mpi_write_string+0x47>
  41e33b:	c7 45 fc fc ff ff ff 	movl   $0xfffffffc,-0x4(%rbp)
  41e342:	e9 48 02 00 00       	jmpq   41e58f <mbedtls_mpi_write_string+0x28f>
  41e347:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  41e34b:	e8 80 ce ff ff       	callq  41b1d0 <mbedtls_mpi_bitlen>
  41e350:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  41e354:	83 7d ec 04          	cmpl   $0x4,-0x14(%rbp)
  41e358:	7c 0c                	jl     41e366 <mbedtls_mpi_write_string+0x66>
  41e35a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41e35e:	48 c1 e8 01          	shr    $0x1,%rax
  41e362:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  41e366:	83 7d ec 10          	cmpl   $0x10,-0x14(%rbp)
  41e36a:	7c 0c                	jl     41e378 <mbedtls_mpi_write_string+0x78>
  41e36c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41e370:	48 c1 e8 01          	shr    $0x1,%rax
  41e374:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  41e378:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41e37c:	48 83 c0 01          	add    $0x1,%rax
  41e380:	48 83 e0 01          	and    $0x1,%rax
  41e384:	48 83 c0 03          	add    $0x3,%rax
  41e388:	48 03 45 c0          	add    -0x40(%rbp),%rax
  41e38c:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  41e390:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41e394:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
  41e398:	73 17                	jae    41e3b1 <mbedtls_mpi_write_string+0xb1>
  41e39a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41e39e:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  41e3a2:	48 89 01             	mov    %rax,(%rcx)
  41e3a5:	c7 45 fc f8 ff ff ff 	movl   $0xfffffff8,-0x4(%rbp)
  41e3ac:	e9 de 01 00 00       	jmpq   41e58f <mbedtls_mpi_write_string+0x28f>
  41e3b1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41e3b5:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  41e3b9:	48 8d 7d 90          	lea    -0x70(%rbp),%rdi
  41e3bd:	e8 8e c5 ff ff       	callq  41a950 <mbedtls_mpi_init>
  41e3c2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41e3c6:	83 38 ff             	cmpl   $0xffffffff,(%rax)
  41e3c9:	75 12                	jne    41e3dd <mbedtls_mpi_write_string+0xdd>
  41e3cb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  41e3cf:	48 89 c1             	mov    %rax,%rcx
  41e3d2:	48 83 c1 01          	add    $0x1,%rcx
  41e3d6:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
  41e3da:	c6 00 2d             	movb   $0x2d,(%rax)
  41e3dd:	83 7d ec 10          	cmpl   $0x10,-0x14(%rbp)
  41e3e1:	0f 85 11 01 00 00    	jne    41e4f8 <mbedtls_mpi_write_string+0x1f8>
  41e3e7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41e3eb:	48 8b 40 08          	mov    0x8(%rax),%rax
  41e3ef:	48 89 45 80          	mov    %rax,-0x80(%rbp)
  41e3f3:	48 c7 85 70 ff ff ff 	movq   $0x0,-0x90(%rbp)
  41e3fa:	00 00 00 00 
  41e3fe:	48 83 7d 80 00       	cmpq   $0x0,-0x80(%rbp)
  41e403:	0f 86 ed 00 00 00    	jbe    41e4f6 <mbedtls_mpi_write_string+0x1f6>
  41e409:	48 c7 85 78 ff ff ff 	movq   $0x8,-0x88(%rbp)
  41e410:	08 00 00 00 
  41e414:	48 83 bd 78 ff ff ff 	cmpq   $0x0,-0x88(%rbp)
  41e41b:	00 
  41e41c:	0f 86 c1 00 00 00    	jbe    41e4e3 <mbedtls_mpi_write_string+0x1e3>
  41e422:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41e426:	48 8b 40 10          	mov    0x10(%rax),%rax
  41e42a:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
  41e42e:	48 83 e9 01          	sub    $0x1,%rcx
  41e432:	48 8b 04 c8          	mov    (%rax,%rcx,8),%rax
  41e436:	48 8b 8d 78 ff ff ff 	mov    -0x88(%rbp),%rcx
  41e43d:	48 83 e9 01          	sub    $0x1,%rcx
  41e441:	48 c1 e1 03          	shl    $0x3,%rcx
  41e445:	48 d3 e8             	shr    %cl,%rax
  41e448:	48 25 ff 00 00 00    	and    $0xff,%rax
  41e44e:	89 c2                	mov    %eax,%edx
  41e450:	89 55 8c             	mov    %edx,-0x74(%rbp)
  41e453:	83 7d 8c 00          	cmpl   $0x0,-0x74(%rbp)
  41e457:	75 1d                	jne    41e476 <mbedtls_mpi_write_string+0x176>
  41e459:	48 83 bd 70 ff ff ff 	cmpq   $0x0,-0x90(%rbp)
  41e460:	00 
  41e461:	75 13                	jne    41e476 <mbedtls_mpi_write_string+0x176>
  41e463:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  41e467:	48 03 85 78 ff ff ff 	add    -0x88(%rbp),%rax
  41e46e:	48 83 f8 02          	cmp    $0x2,%rax
  41e472:	74 02                	je     41e476 <mbedtls_mpi_write_string+0x176>
  41e474:	eb 56                	jmp    41e4cc <mbedtls_mpi_write_string+0x1cc>
  41e476:	8b 45 8c             	mov    -0x74(%rbp),%eax
  41e479:	99                   	cltd   
  41e47a:	b9 10 00 00 00       	mov    $0x10,%ecx
  41e47f:	f7 f9                	idiv   %ecx
  41e481:	48 63 f0             	movslq %eax,%rsi
  41e484:	40 8a 3c 35 60 7d 44 	mov    0x447d60(,%rsi,1),%dil
  41e48b:	00 
  41e48c:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  41e490:	49 89 f0             	mov    %rsi,%r8
  41e493:	49 83 c0 01          	add    $0x1,%r8
  41e497:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
  41e49b:	40 88 3e             	mov    %dil,(%rsi)
  41e49e:	8b 45 8c             	mov    -0x74(%rbp),%eax
  41e4a1:	99                   	cltd   
  41e4a2:	f7 f9                	idiv   %ecx
  41e4a4:	48 63 f2             	movslq %edx,%rsi
  41e4a7:	40 8a 3c 35 60 7d 44 	mov    0x447d60(,%rsi,1),%dil
  41e4ae:	00 
  41e4af:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  41e4b3:	49 89 f0             	mov    %rsi,%r8
  41e4b6:	49 83 c0 01          	add    $0x1,%r8
  41e4ba:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
  41e4be:	40 88 3e             	mov    %dil,(%rsi)
  41e4c1:	48 c7 85 70 ff ff ff 	movq   $0x1,-0x90(%rbp)
  41e4c8:	01 00 00 00 
  41e4cc:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  41e4d3:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
  41e4d7:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  41e4de:	e9 31 ff ff ff       	jmpq   41e414 <mbedtls_mpi_write_string+0x114>
  41e4e3:	eb 00                	jmp    41e4e5 <mbedtls_mpi_write_string+0x1e5>
  41e4e5:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  41e4e9:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
  41e4ed:	48 89 45 80          	mov    %rax,-0x80(%rbp)
  41e4f1:	e9 08 ff ff ff       	jmpq   41e3fe <mbedtls_mpi_write_string+0xfe>
  41e4f6:	eb 64                	jmp    41e55c <mbedtls_mpi_write_string+0x25c>
  41e4f8:	eb 00                	jmp    41e4fa <mbedtls_mpi_write_string+0x1fa>
  41e4fa:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  41e4fe:	48 8d 7d 90          	lea    -0x70(%rbp),%rdi
  41e502:	e8 99 c8 ff ff       	callq  41ada0 <mbedtls_mpi_copy>
  41e507:	89 45 cc             	mov    %eax,-0x34(%rbp)
  41e50a:	83 f8 00             	cmp    $0x0,%eax
  41e50d:	74 02                	je     41e511 <mbedtls_mpi_write_string+0x211>
  41e50f:	eb 6f                	jmp    41e580 <mbedtls_mpi_write_string+0x280>
  41e511:	eb 00                	jmp    41e513 <mbedtls_mpi_write_string+0x213>
  41e513:	48 8d 45 90          	lea    -0x70(%rbp),%rax
  41e517:	48 89 c7             	mov    %rax,%rdi
  41e51a:	e8 2f 7b 02 00       	callq  44604e <getDecryptedValueDWord>
  41e51f:	83 f8 ff             	cmp    $0xffffffff,%eax
  41e522:	75 18                	jne    41e53c <mbedtls_mpi_write_string+0x23c>
  41e524:	48 8d 45 90          	lea    -0x70(%rbp),%rax
  41e528:	48 89 c7             	mov    %rax,%rdi
  41e52b:	be 01 00 00 00       	mov    $0x1,%esi
  41e530:	e8 c9 76 02 00       	callq  445bfe <setEncryptedValueDWord>
  41e535:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
  41e53c:	eb 00                	jmp    41e53e <mbedtls_mpi_write_string+0x23e>
  41e53e:	8b 75 ec             	mov    -0x14(%rbp),%esi
  41e541:	48 8d 7d 90          	lea    -0x70(%rbp),%rdi
  41e545:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
  41e549:	e8 62 00 00 00       	callq  41e5b0 <mpi_write_hlp>
  41e54e:	89 45 cc             	mov    %eax,-0x34(%rbp)
  41e551:	83 f8 00             	cmp    $0x0,%eax
  41e554:	74 02                	je     41e558 <mbedtls_mpi_write_string+0x258>
  41e556:	eb 28                	jmp    41e580 <mbedtls_mpi_write_string+0x280>
  41e558:	eb 00                	jmp    41e55a <mbedtls_mpi_write_string+0x25a>
  41e55a:	eb 00                	jmp    41e55c <mbedtls_mpi_write_string+0x25c>
  41e55c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  41e560:	48 89 c1             	mov    %rax,%rcx
  41e563:	48 83 c1 01          	add    $0x1,%rcx
  41e567:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
  41e56b:	c6 00 00             	movb   $0x0,(%rax)
  41e56e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  41e572:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  41e576:	48 29 c8             	sub    %rcx,%rax
  41e579:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  41e57d:	48 89 01             	mov    %rax,(%rcx)
  41e580:	48 8d 7d 90          	lea    -0x70(%rbp),%rdi
  41e584:	e8 27 c4 ff ff       	callq  41a9b0 <mbedtls_mpi_free>
  41e589:	8b 45 cc             	mov    -0x34(%rbp),%eax
  41e58c:	89 45 fc             	mov    %eax,-0x4(%rbp)
  41e58f:	8b 45 fc             	mov    -0x4(%rbp),%eax
  41e592:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%rbp)
  41e598:	e8 b9 73 02 00       	callq  445956 <writeback_cache>
  41e59d:	8b 85 64 ff ff ff    	mov    -0x9c(%rbp),%eax
  41e5a3:	48 81 c4 a0 00 00 00 	add    $0xa0,%rsp
  41e5aa:	5d                   	pop    %rbp
  41e5ab:	c3                   	retq   
  41e5ac:	0f 1f 40 00          	nopl   0x0(%rax)

000000000041e5b0 <mpi_write_hlp>:
  41e5b0:	55                   	push   %rbp
  41e5b1:	48 89 e5             	mov    %rsp,%rbp
  41e5b4:	48 83 ec 40          	sub    $0x40,%rsp
  41e5b8:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  41e5bc:	89 75 ec             	mov    %esi,-0x14(%rbp)
  41e5bf:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
  41e5c3:	83 7d ec 02          	cmpl   $0x2,-0x14(%rbp)
  41e5c7:	7c 06                	jl     41e5cf <mpi_write_hlp+0x1f>
  41e5c9:	83 7d ec 10          	cmpl   $0x10,-0x14(%rbp)
  41e5cd:	7e 0c                	jle    41e5db <mpi_write_hlp+0x2b>
  41e5cf:	c7 45 fc fc ff ff ff 	movl   $0xfffffffc,-0x4(%rbp)
  41e5d6:	e9 c2 00 00 00       	jmpq   41e69d <mpi_write_hlp+0xed>
  41e5db:	eb 00                	jmp    41e5dd <mpi_write_hlp+0x2d>
  41e5dd:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  41e5e1:	48 63 55 ec          	movslq -0x14(%rbp),%rdx
  41e5e5:	48 8d 7d d0          	lea    -0x30(%rbp),%rdi
  41e5e9:	e8 d2 00 00 00       	callq  41e6c0 <mbedtls_mpi_mod_int>
  41e5ee:	89 45 dc             	mov    %eax,-0x24(%rbp)
  41e5f1:	83 f8 00             	cmp    $0x0,%eax
  41e5f4:	74 05                	je     41e5fb <mpi_write_hlp+0x4b>
  41e5f6:	e9 9c 00 00 00       	jmpq   41e697 <mpi_write_hlp+0xe7>
  41e5fb:	eb 00                	jmp    41e5fd <mpi_write_hlp+0x4d>
  41e5fd:	eb 00                	jmp    41e5ff <mpi_write_hlp+0x4f>
  41e5ff:	31 c0                	xor    %eax,%eax
  41e601:	89 c6                	mov    %eax,%esi
  41e603:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  41e607:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  41e60b:	48 63 4d ec          	movslq -0x14(%rbp),%rcx
  41e60f:	e8 7c 02 00 00       	callq  41e890 <mbedtls_mpi_div_int>
  41e614:	89 45 dc             	mov    %eax,-0x24(%rbp)
  41e617:	83 f8 00             	cmp    $0x0,%eax
  41e61a:	74 02                	je     41e61e <mpi_write_hlp+0x6e>
  41e61c:	eb 79                	jmp    41e697 <mpi_write_hlp+0xe7>
  41e61e:	eb 00                	jmp    41e620 <mpi_write_hlp+0x70>
  41e620:	31 c0                	xor    %eax,%eax
  41e622:	89 c6                	mov    %eax,%esi
  41e624:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  41e628:	e8 53 03 00 00       	callq  41e980 <mbedtls_mpi_cmp_int>
  41e62d:	83 f8 00             	cmp    $0x0,%eax
  41e630:	74 20                	je     41e652 <mpi_write_hlp+0xa2>
  41e632:	eb 00                	jmp    41e634 <mpi_write_hlp+0x84>
  41e634:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  41e638:	8b 75 ec             	mov    -0x14(%rbp),%esi
  41e63b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  41e63f:	e8 6c ff ff ff       	callq  41e5b0 <mpi_write_hlp>
  41e644:	89 45 dc             	mov    %eax,-0x24(%rbp)
  41e647:	83 f8 00             	cmp    $0x0,%eax
  41e64a:	74 02                	je     41e64e <mpi_write_hlp+0x9e>
  41e64c:	eb 49                	jmp    41e697 <mpi_write_hlp+0xe7>
  41e64e:	eb 00                	jmp    41e650 <mpi_write_hlp+0xa0>
  41e650:	eb 00                	jmp    41e652 <mpi_write_hlp+0xa2>
  41e652:	48 83 7d d0 0a       	cmpq   $0xa,-0x30(%rbp)
  41e657:	73 1f                	jae    41e678 <mpi_write_hlp+0xc8>
  41e659:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41e65d:	48 83 c0 30          	add    $0x30,%rax
  41e661:	88 c1                	mov    %al,%cl
  41e663:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41e667:	48 8b 10             	mov    (%rax),%rdx
  41e66a:	48 89 d6             	mov    %rdx,%rsi
  41e66d:	48 83 c6 01          	add    $0x1,%rsi
  41e671:	48 89 30             	mov    %rsi,(%rax)
  41e674:	88 0a                	mov    %cl,(%rdx)
  41e676:	eb 1d                	jmp    41e695 <mpi_write_hlp+0xe5>
  41e678:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41e67c:	48 83 c0 37          	add    $0x37,%rax
  41e680:	88 c1                	mov    %al,%cl
  41e682:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41e686:	48 8b 10             	mov    (%rax),%rdx
  41e689:	48 89 d6             	mov    %rdx,%rsi
  41e68c:	48 83 c6 01          	add    $0x1,%rsi
  41e690:	48 89 30             	mov    %rsi,(%rax)
  41e693:	88 0a                	mov    %cl,(%rdx)
  41e695:	eb 00                	jmp    41e697 <mpi_write_hlp+0xe7>
  41e697:	8b 45 dc             	mov    -0x24(%rbp),%eax
  41e69a:	89 45 fc             	mov    %eax,-0x4(%rbp)
  41e69d:	8b 45 fc             	mov    -0x4(%rbp),%eax
  41e6a0:	89 45 cc             	mov    %eax,-0x34(%rbp)
  41e6a3:	e8 ae 72 02 00       	callq  445956 <writeback_cache>
  41e6a8:	8b 45 cc             	mov    -0x34(%rbp),%eax
  41e6ab:	48 83 c4 40          	add    $0x40,%rsp
  41e6af:	5d                   	pop    %rbp
  41e6b0:	c3                   	retq   
  41e6b1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  41e6b8:	0f 1f 84 00 00 00 00 
  41e6bf:	00 

000000000041e6c0 <mbedtls_mpi_mod_int>:
  41e6c0:	55                   	push   %rbp
  41e6c1:	48 89 e5             	mov    %rsp,%rbp
  41e6c4:	48 83 ec 50          	sub    $0x50,%rsp
  41e6c8:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  41e6cc:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  41e6d0:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
  41e6d4:	eb 00                	jmp    41e6d6 <mbedtls_mpi_mod_int+0x16>
  41e6d6:	eb 00                	jmp    41e6d8 <mbedtls_mpi_mod_int+0x18>
  41e6d8:	eb 00                	jmp    41e6da <mbedtls_mpi_mod_int+0x1a>
  41e6da:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  41e6df:	75 0c                	jne    41e6ed <mbedtls_mpi_mod_int+0x2d>
  41e6e1:	c7 45 fc f4 ff ff ff 	movl   $0xfffffff4,-0x4(%rbp)
  41e6e8:	e9 82 01 00 00       	jmpq   41e86f <mbedtls_mpi_mod_int+0x1af>
  41e6ed:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  41e6f2:	7d 0c                	jge    41e700 <mbedtls_mpi_mod_int+0x40>
  41e6f4:	c7 45 fc f6 ff ff ff 	movl   $0xfffffff6,-0x4(%rbp)
  41e6fb:	e9 6f 01 00 00       	jmpq   41e86f <mbedtls_mpi_mod_int+0x1af>
  41e700:	48 83 7d e0 01       	cmpq   $0x1,-0x20(%rbp)
  41e705:	75 17                	jne    41e71e <mbedtls_mpi_mod_int+0x5e>
  41e707:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41e70b:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  41e712:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  41e719:	e9 51 01 00 00       	jmpq   41e86f <mbedtls_mpi_mod_int+0x1af>
  41e71e:	48 83 7d e0 02       	cmpq   $0x2,-0x20(%rbp)
  41e723:	75 2f                	jne    41e754 <mbedtls_mpi_mod_int+0x94>
  41e725:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41e729:	48 83 c0 10          	add    $0x10,%rax
  41e72d:	48 89 c7             	mov    %rax,%rdi
  41e730:	e8 13 7a 02 00       	callq  446148 <getDecryptedValueQWord>
  41e735:	48 89 c7             	mov    %rax,%rdi
  41e738:	e8 0b 7a 02 00       	callq  446148 <getDecryptedValueQWord>
  41e73d:	48 83 e0 01          	and    $0x1,%rax
  41e741:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  41e745:	48 89 07             	mov    %rax,(%rdi)
  41e748:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  41e74f:	e9 1b 01 00 00       	jmpq   41e86f <mbedtls_mpi_mod_int+0x1af>
  41e754:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41e758:	48 83 c0 08          	add    $0x8,%rax
  41e75c:	48 89 c7             	mov    %rax,%rdi
  41e75f:	e8 e4 79 02 00       	callq  446148 <getDecryptedValueQWord>
  41e764:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41e768:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
  41e76f:	00 
  41e770:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  41e775:	0f 86 be 00 00 00    	jbe    41e839 <mbedtls_mpi_mod_int+0x179>
  41e77b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41e77f:	48 83 c0 10          	add    $0x10,%rax
  41e783:	48 89 c7             	mov    %rax,%rdi
  41e786:	e8 bd 79 02 00       	callq  446148 <getDecryptedValueQWord>
  41e78b:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  41e78f:	48 83 ef 01          	sub    $0x1,%rdi
  41e793:	48 c1 e7 03          	shl    $0x3,%rdi
  41e797:	48 01 f8             	add    %rdi,%rax
  41e79a:	48 89 c7             	mov    %rax,%rdi
  41e79d:	e8 a6 79 02 00       	callq  446148 <getDecryptedValueQWord>
  41e7a2:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  41e7a6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41e7aa:	48 c1 e0 20          	shl    $0x20,%rax
  41e7ae:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  41e7b2:	48 c1 ef 20          	shr    $0x20,%rdi
  41e7b6:	48 09 f8             	or     %rdi,%rax
  41e7b9:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  41e7bd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41e7c1:	31 c9                	xor    %ecx,%ecx
  41e7c3:	89 ca                	mov    %ecx,%edx
  41e7c5:	48 f7 75 e0          	divq   -0x20(%rbp)
  41e7c9:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  41e7cd:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41e7d1:	48 0f af 45 e0       	imul   -0x20(%rbp),%rax
  41e7d6:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  41e7da:	48 29 c7             	sub    %rax,%rdi
  41e7dd:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  41e7e1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41e7e5:	48 c1 e0 20          	shl    $0x20,%rax
  41e7e9:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  41e7ed:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41e7f1:	48 c1 e0 20          	shl    $0x20,%rax
  41e7f5:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  41e7f9:	48 c1 ef 20          	shr    $0x20,%rdi
  41e7fd:	48 09 f8             	or     %rdi,%rax
  41e800:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  41e804:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41e808:	31 c9                	xor    %ecx,%ecx
  41e80a:	89 ca                	mov    %ecx,%edx
  41e80c:	48 f7 75 e0          	divq   -0x20(%rbp)
  41e810:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  41e814:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  41e818:	48 0f af 45 e0       	imul   -0x20(%rbp),%rax
  41e81d:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  41e821:	48 29 c7             	sub    %rax,%rdi
  41e824:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  41e828:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41e82c:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
  41e830:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41e834:	e9 37 ff ff ff       	jmpq   41e770 <mbedtls_mpi_mod_int+0xb0>
  41e839:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41e83d:	48 89 c7             	mov    %rax,%rdi
  41e840:	e8 09 78 02 00       	callq  44604e <getDecryptedValueDWord>
  41e845:	83 f8 00             	cmp    $0x0,%eax
  41e848:	7d 13                	jge    41e85d <mbedtls_mpi_mod_int+0x19d>
  41e84a:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  41e84f:	74 0c                	je     41e85d <mbedtls_mpi_mod_int+0x19d>
  41e851:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41e855:	48 2b 45 c8          	sub    -0x38(%rbp),%rax
  41e859:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  41e85d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41e861:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  41e865:	48 89 01             	mov    %rax,(%rcx)
  41e868:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  41e86f:	8b 45 fc             	mov    -0x4(%rbp),%eax
  41e872:	89 45 bc             	mov    %eax,-0x44(%rbp)
  41e875:	e8 dc 70 02 00       	callq  445956 <writeback_cache>
  41e87a:	8b 45 bc             	mov    -0x44(%rbp),%eax
  41e87d:	48 83 c4 50          	add    $0x50,%rsp
  41e881:	5d                   	pop    %rbp
  41e882:	c3                   	retq   
  41e883:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  41e88a:	84 00 00 00 00 00 

000000000041e890 <mbedtls_mpi_div_int>:
  41e890:	55                   	push   %rbp
  41e891:	48 89 e5             	mov    %rsp,%rbp
  41e894:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
  41e89b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41e89f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  41e8a3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  41e8a7:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  41e8ab:	eb 00                	jmp    41e8ad <mbedtls_mpi_div_int+0x1d>
  41e8ad:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  41e8b2:	7d 0e                	jge    41e8c2 <mbedtls_mpi_div_int+0x32>
  41e8b4:	31 c0                	xor    %eax,%eax
  41e8b6:	89 c1                	mov    %eax,%ecx
  41e8b8:	48 2b 4d e0          	sub    -0x20(%rbp),%rcx
  41e8bc:	48 89 4d 88          	mov    %rcx,-0x78(%rbp)
  41e8c0:	eb 08                	jmp    41e8ca <mbedtls_mpi_div_int+0x3a>
  41e8c2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41e8c6:	48 89 45 88          	mov    %rax,-0x78(%rbp)
  41e8ca:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  41e8ce:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
  41e8d2:	48 89 cf             	mov    %rcx,%rdi
  41e8d5:	48 89 c6             	mov    %rax,%rsi
  41e8d8:	e8 1f 74 02 00       	callq  445cfc <setEncryptedValueQWord>
  41e8dd:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
  41e8e1:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  41e8e5:	48 83 fe 00          	cmp    $0x0,%rsi
  41e8e9:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  41e8ee:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  41e8f4:	44 0f 4c c2          	cmovl  %edx,%r8d
  41e8f8:	48 89 cf             	mov    %rcx,%rdi
  41e8fb:	44 89 c6             	mov    %r8d,%esi
  41e8fe:	48 89 45 80          	mov    %rax,-0x80(%rbp)
  41e902:	e8 f7 72 02 00       	callq  445bfe <setEncryptedValueDWord>
  41e907:	ba 01 00 00 00       	mov    $0x1,%edx
  41e90c:	89 d6                	mov    %edx,%esi
  41e90e:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
  41e912:	48 83 c1 08          	add    $0x8,%rcx
  41e916:	48 89 cf             	mov    %rcx,%rdi
  41e919:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  41e920:	e8 d7 73 02 00       	callq  445cfc <setEncryptedValueQWord>
  41e925:	48 8d 75 90          	lea    -0x70(%rbp),%rsi
  41e929:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
  41e92d:	48 83 c1 10          	add    $0x10,%rcx
  41e931:	48 89 cf             	mov    %rcx,%rdi
  41e934:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
  41e93b:	e8 bc 73 02 00       	callq  445cfc <setEncryptedValueQWord>
  41e940:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  41e944:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  41e948:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  41e94c:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
  41e950:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
  41e957:	e8 94 03 00 00       	callq  41ecf0 <mbedtls_mpi_div_mpi>
  41e95c:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%rbp)
  41e962:	e8 ef 6f 02 00       	callq  445956 <writeback_cache>
  41e967:	8b 85 64 ff ff ff    	mov    -0x9c(%rbp),%eax
  41e96d:	48 81 c4 a0 00 00 00 	add    $0xa0,%rsp
  41e974:	5d                   	pop    %rbp
  41e975:	c3                   	retq   
  41e976:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41e97d:	00 00 00 

000000000041e980 <mbedtls_mpi_cmp_int>:
  41e980:	55                   	push   %rbp
  41e981:	48 89 e5             	mov    %rsp,%rbp
  41e984:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
  41e98b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41e98f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  41e993:	eb 00                	jmp    41e995 <mbedtls_mpi_cmp_int+0x15>
  41e995:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  41e99a:	7d 0e                	jge    41e9aa <mbedtls_mpi_cmp_int+0x2a>
  41e99c:	31 c0                	xor    %eax,%eax
  41e99e:	89 c1                	mov    %eax,%ecx
  41e9a0:	48 2b 4d f0          	sub    -0x10(%rbp),%rcx
  41e9a4:	48 89 4d 98          	mov    %rcx,-0x68(%rbp)
  41e9a8:	eb 08                	jmp    41e9b2 <mbedtls_mpi_cmp_int+0x32>
  41e9aa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41e9ae:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  41e9b2:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  41e9b6:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
  41e9ba:	48 89 cf             	mov    %rcx,%rdi
  41e9bd:	48 89 c6             	mov    %rax,%rsi
  41e9c0:	e8 37 73 02 00       	callq  445cfc <setEncryptedValueQWord>
  41e9c5:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
  41e9c9:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  41e9cd:	48 83 fe 00          	cmp    $0x0,%rsi
  41e9d1:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  41e9d6:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  41e9dc:	44 0f 4c c2          	cmovl  %edx,%r8d
  41e9e0:	48 89 cf             	mov    %rcx,%rdi
  41e9e3:	44 89 c6             	mov    %r8d,%esi
  41e9e6:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  41e9ea:	e8 0f 72 02 00       	callq  445bfe <setEncryptedValueDWord>
  41e9ef:	ba 01 00 00 00       	mov    $0x1,%edx
  41e9f4:	89 d6                	mov    %edx,%esi
  41e9f6:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
  41e9fa:	48 83 c1 08          	add    $0x8,%rcx
  41e9fe:	48 89 cf             	mov    %rcx,%rdi
  41ea01:	48 89 45 88          	mov    %rax,-0x78(%rbp)
  41ea05:	e8 f2 72 02 00       	callq  445cfc <setEncryptedValueQWord>
  41ea0a:	48 8d 75 a0          	lea    -0x60(%rbp),%rsi
  41ea0e:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
  41ea12:	48 83 c1 10          	add    $0x10,%rcx
  41ea16:	48 89 cf             	mov    %rcx,%rdi
  41ea19:	48 89 45 80          	mov    %rax,-0x80(%rbp)
  41ea1d:	e8 da 72 02 00       	callq  445cfc <setEncryptedValueQWord>
  41ea22:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  41ea26:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
  41ea2a:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  41ea31:	e8 1a 00 00 00       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  41ea36:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
  41ea3c:	e8 15 6f 02 00       	callq  445956 <writeback_cache>
  41ea41:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
  41ea47:	48 81 c4 90 00 00 00 	add    $0x90,%rsp
  41ea4e:	5d                   	pop    %rbp
  41ea4f:	c3                   	retq   

000000000041ea50 <mbedtls_mpi_cmp_mpi>:
  41ea50:	55                   	push   %rbp
  41ea51:	48 89 e5             	mov    %rsp,%rbp
  41ea54:	48 83 ec 40          	sub    $0x40,%rsp
  41ea58:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  41ea5c:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  41ea60:	eb 00                	jmp    41ea62 <mbedtls_mpi_cmp_mpi+0x12>
  41ea62:	eb 00                	jmp    41ea64 <mbedtls_mpi_cmp_mpi+0x14>
  41ea64:	eb 00                	jmp    41ea66 <mbedtls_mpi_cmp_mpi+0x16>
  41ea66:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41ea6a:	48 83 c0 08          	add    $0x8,%rax
  41ea6e:	48 89 c7             	mov    %rax,%rdi
  41ea71:	e8 d2 76 02 00       	callq  446148 <getDecryptedValueQWord>
  41ea76:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  41ea7a:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  41ea7f:	76 3f                	jbe    41eac0 <mbedtls_mpi_cmp_mpi+0x70>
  41ea81:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41ea85:	48 83 c0 10          	add    $0x10,%rax
  41ea89:	48 89 c7             	mov    %rax,%rdi
  41ea8c:	e8 b7 76 02 00       	callq  446148 <getDecryptedValueQWord>
  41ea91:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  41ea95:	48 83 ef 01          	sub    $0x1,%rdi
  41ea99:	48 c1 e7 03          	shl    $0x3,%rdi
  41ea9d:	48 01 f8             	add    %rdi,%rax
  41eaa0:	48 89 c7             	mov    %rax,%rdi
  41eaa3:	e8 a0 76 02 00       	callq  446148 <getDecryptedValueQWord>
  41eaa8:	48 83 f8 00          	cmp    $0x0,%rax
  41eaac:	74 02                	je     41eab0 <mbedtls_mpi_cmp_mpi+0x60>
  41eaae:	eb 10                	jmp    41eac0 <mbedtls_mpi_cmp_mpi+0x70>
  41eab0:	eb 00                	jmp    41eab2 <mbedtls_mpi_cmp_mpi+0x62>
  41eab2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41eab6:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
  41eaba:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  41eabe:	eb ba                	jmp    41ea7a <mbedtls_mpi_cmp_mpi+0x2a>
  41eac0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41eac4:	48 83 c0 08          	add    $0x8,%rax
  41eac8:	48 89 c7             	mov    %rax,%rdi
  41eacb:	e8 78 76 02 00       	callq  446148 <getDecryptedValueQWord>
  41ead0:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41ead4:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  41ead9:	76 3f                	jbe    41eb1a <mbedtls_mpi_cmp_mpi+0xca>
  41eadb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41eadf:	48 83 c0 10          	add    $0x10,%rax
  41eae3:	48 89 c7             	mov    %rax,%rdi
  41eae6:	e8 5d 76 02 00       	callq  446148 <getDecryptedValueQWord>
  41eaeb:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  41eaef:	48 83 ef 01          	sub    $0x1,%rdi
  41eaf3:	48 c1 e7 03          	shl    $0x3,%rdi
  41eaf7:	48 01 f8             	add    %rdi,%rax
  41eafa:	48 89 c7             	mov    %rax,%rdi
  41eafd:	e8 46 76 02 00       	callq  446148 <getDecryptedValueQWord>
  41eb02:	48 83 f8 00          	cmp    $0x0,%rax
  41eb06:	74 02                	je     41eb0a <mbedtls_mpi_cmp_mpi+0xba>
  41eb08:	eb 10                	jmp    41eb1a <mbedtls_mpi_cmp_mpi+0xca>
  41eb0a:	eb 00                	jmp    41eb0c <mbedtls_mpi_cmp_mpi+0xbc>
  41eb0c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41eb10:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
  41eb14:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  41eb18:	eb ba                	jmp    41ead4 <mbedtls_mpi_cmp_mpi+0x84>
  41eb1a:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  41eb1f:	75 13                	jne    41eb34 <mbedtls_mpi_cmp_mpi+0xe4>
  41eb21:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  41eb26:	75 0c                	jne    41eb34 <mbedtls_mpi_cmp_mpi+0xe4>
  41eb28:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  41eb2f:	e9 9c 01 00 00       	jmpq   41ecd0 <mbedtls_mpi_cmp_mpi+0x280>
  41eb34:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41eb38:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
  41eb3c:	76 14                	jbe    41eb52 <mbedtls_mpi_cmp_mpi+0x102>
  41eb3e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41eb42:	48 89 c7             	mov    %rax,%rdi
  41eb45:	e8 04 75 02 00       	callq  44604e <getDecryptedValueDWord>
  41eb4a:	89 45 fc             	mov    %eax,-0x4(%rbp)
  41eb4d:	e9 7e 01 00 00       	jmpq   41ecd0 <mbedtls_mpi_cmp_mpi+0x280>
  41eb52:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41eb56:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
  41eb5a:	76 18                	jbe    41eb74 <mbedtls_mpi_cmp_mpi+0x124>
  41eb5c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41eb60:	48 89 c7             	mov    %rax,%rdi
  41eb63:	e8 e6 74 02 00       	callq  44604e <getDecryptedValueDWord>
  41eb68:	31 c9                	xor    %ecx,%ecx
  41eb6a:	29 c1                	sub    %eax,%ecx
  41eb6c:	89 4d fc             	mov    %ecx,-0x4(%rbp)
  41eb6f:	e9 5c 01 00 00       	jmpq   41ecd0 <mbedtls_mpi_cmp_mpi+0x280>
  41eb74:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41eb78:	48 89 c7             	mov    %rax,%rdi
  41eb7b:	e8 ce 74 02 00       	callq  44604e <getDecryptedValueDWord>
  41eb80:	83 f8 00             	cmp    $0x0,%eax
  41eb83:	7e 1d                	jle    41eba2 <mbedtls_mpi_cmp_mpi+0x152>
  41eb85:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41eb89:	48 89 c7             	mov    %rax,%rdi
  41eb8c:	e8 bd 74 02 00       	callq  44604e <getDecryptedValueDWord>
  41eb91:	83 f8 00             	cmp    $0x0,%eax
  41eb94:	7d 0c                	jge    41eba2 <mbedtls_mpi_cmp_mpi+0x152>
  41eb96:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  41eb9d:	e9 2e 01 00 00       	jmpq   41ecd0 <mbedtls_mpi_cmp_mpi+0x280>
  41eba2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41eba6:	48 89 c7             	mov    %rax,%rdi
  41eba9:	e8 a0 74 02 00       	callq  44604e <getDecryptedValueDWord>
  41ebae:	83 f8 00             	cmp    $0x0,%eax
  41ebb1:	7e 1d                	jle    41ebd0 <mbedtls_mpi_cmp_mpi+0x180>
  41ebb3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41ebb7:	48 89 c7             	mov    %rax,%rdi
  41ebba:	e8 8f 74 02 00       	callq  44604e <getDecryptedValueDWord>
  41ebbf:	83 f8 00             	cmp    $0x0,%eax
  41ebc2:	7d 0c                	jge    41ebd0 <mbedtls_mpi_cmp_mpi+0x180>
  41ebc4:	c7 45 fc ff ff ff ff 	movl   $0xffffffff,-0x4(%rbp)
  41ebcb:	e9 00 01 00 00       	jmpq   41ecd0 <mbedtls_mpi_cmp_mpi+0x280>
  41ebd0:	eb 00                	jmp    41ebd2 <mbedtls_mpi_cmp_mpi+0x182>
  41ebd2:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  41ebd7:	0f 86 ec 00 00 00    	jbe    41ecc9 <mbedtls_mpi_cmp_mpi+0x279>
  41ebdd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41ebe1:	48 83 c0 10          	add    $0x10,%rax
  41ebe5:	48 89 c7             	mov    %rax,%rdi
  41ebe8:	e8 5b 75 02 00       	callq  446148 <getDecryptedValueQWord>
  41ebed:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  41ebf1:	48 83 ef 01          	sub    $0x1,%rdi
  41ebf5:	48 c1 e7 03          	shl    $0x3,%rdi
  41ebf9:	48 01 f8             	add    %rdi,%rax
  41ebfc:	48 89 c7             	mov    %rax,%rdi
  41ebff:	e8 44 75 02 00       	callq  446148 <getDecryptedValueQWord>
  41ec04:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41ec08:	48 83 c7 10          	add    $0x10,%rdi
  41ec0c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  41ec10:	e8 33 75 02 00       	callq  446148 <getDecryptedValueQWord>
  41ec15:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  41ec19:	48 83 ef 01          	sub    $0x1,%rdi
  41ec1d:	48 c1 e7 03          	shl    $0x3,%rdi
  41ec21:	48 01 f8             	add    %rdi,%rax
  41ec24:	48 89 c7             	mov    %rax,%rdi
  41ec27:	e8 1c 75 02 00       	callq  446148 <getDecryptedValueQWord>
  41ec2c:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  41ec30:	48 39 c7             	cmp    %rax,%rdi
  41ec33:	76 14                	jbe    41ec49 <mbedtls_mpi_cmp_mpi+0x1f9>
  41ec35:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41ec39:	48 89 c7             	mov    %rax,%rdi
  41ec3c:	e8 0d 74 02 00       	callq  44604e <getDecryptedValueDWord>
  41ec41:	89 45 fc             	mov    %eax,-0x4(%rbp)
  41ec44:	e9 87 00 00 00       	jmpq   41ecd0 <mbedtls_mpi_cmp_mpi+0x280>
  41ec49:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41ec4d:	48 83 c0 10          	add    $0x10,%rax
  41ec51:	48 89 c7             	mov    %rax,%rdi
  41ec54:	e8 ef 74 02 00       	callq  446148 <getDecryptedValueQWord>
  41ec59:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  41ec5d:	48 83 ef 01          	sub    $0x1,%rdi
  41ec61:	48 c1 e7 03          	shl    $0x3,%rdi
  41ec65:	48 01 f8             	add    %rdi,%rax
  41ec68:	48 89 c7             	mov    %rax,%rdi
  41ec6b:	e8 d8 74 02 00       	callq  446148 <getDecryptedValueQWord>
  41ec70:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41ec74:	48 83 c7 10          	add    $0x10,%rdi
  41ec78:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  41ec7c:	e8 c7 74 02 00       	callq  446148 <getDecryptedValueQWord>
  41ec81:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  41ec85:	48 83 ef 01          	sub    $0x1,%rdi
  41ec89:	48 c1 e7 03          	shl    $0x3,%rdi
  41ec8d:	48 01 f8             	add    %rdi,%rax
  41ec90:	48 89 c7             	mov    %rax,%rdi
  41ec93:	e8 b0 74 02 00       	callq  446148 <getDecryptedValueQWord>
  41ec98:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  41ec9c:	48 39 c7             	cmp    %rax,%rdi
  41ec9f:	73 15                	jae    41ecb6 <mbedtls_mpi_cmp_mpi+0x266>
  41eca1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41eca5:	48 89 c7             	mov    %rax,%rdi
  41eca8:	e8 a1 73 02 00       	callq  44604e <getDecryptedValueDWord>
  41ecad:	31 c9                	xor    %ecx,%ecx
  41ecaf:	29 c1                	sub    %eax,%ecx
  41ecb1:	89 4d fc             	mov    %ecx,-0x4(%rbp)
  41ecb4:	eb 1a                	jmp    41ecd0 <mbedtls_mpi_cmp_mpi+0x280>
  41ecb6:	eb 00                	jmp    41ecb8 <mbedtls_mpi_cmp_mpi+0x268>
  41ecb8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41ecbc:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
  41ecc0:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  41ecc4:	e9 09 ff ff ff       	jmpq   41ebd2 <mbedtls_mpi_cmp_mpi+0x182>
  41ecc9:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  41ecd0:	8b 45 fc             	mov    -0x4(%rbp),%eax
  41ecd3:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  41ecd6:	e8 7b 6c 02 00       	callq  445956 <writeback_cache>
  41ecdb:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  41ecde:	48 83 c4 40          	add    $0x40,%rsp
  41ece2:	5d                   	pop    %rbp
  41ece3:	c3                   	retq   
  41ece4:	66 66 66 2e 0f 1f 84 	data16 data16 nopw %cs:0x0(%rax,%rax,1)
  41eceb:	00 00 00 00 00 

000000000041ecf0 <mbedtls_mpi_div_mpi>:
  41ecf0:	55                   	push   %rbp
  41ecf1:	48 89 e5             	mov    %rsp,%rbp
  41ecf4:	48 81 ec 00 09 00 00 	sub    $0x900,%rsp
  41ecfb:	48 89 bd f0 fc ff ff 	mov    %rdi,-0x310(%rbp)
  41ed02:	48 89 b5 e8 fc ff ff 	mov    %rsi,-0x318(%rbp)
  41ed09:	48 89 95 e0 fc ff ff 	mov    %rdx,-0x320(%rbp)
  41ed10:	48 89 8d d8 fc ff ff 	mov    %rcx,-0x328(%rbp)
  41ed17:	eb 00                	jmp    41ed19 <mbedtls_mpi_div_mpi+0x29>
  41ed19:	eb 00                	jmp    41ed1b <mbedtls_mpi_div_mpi+0x2b>
  41ed1b:	eb 00                	jmp    41ed1d <mbedtls_mpi_div_mpi+0x2d>
  41ed1d:	48 8b 85 d8 fc ff ff 	mov    -0x328(%rbp),%rax
  41ed24:	48 89 85 b8 fb ff ff 	mov    %rax,-0x448(%rbp)
  41ed2b:	e8 26 6c 02 00       	callq  445956 <writeback_cache>
  41ed30:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
  41ed37:	48 89 85 58 fd ff ff 	mov    %rax,-0x2a8(%rbp)
  41ed3e:	48 c7 85 50 fd ff ff 	movq   $0x0,-0x2b0(%rbp)
  41ed45:	00 00 00 00 
  41ed49:	48 83 bd 50 fd ff ff 	cmpq   $0x0,-0x2b0(%rbp)
  41ed50:	00 
  41ed51:	7d 14                	jge    41ed67 <mbedtls_mpi_div_mpi+0x77>
  41ed53:	31 c0                	xor    %eax,%eax
  41ed55:	89 c1                	mov    %eax,%ecx
  41ed57:	48 2b 8d 50 fd ff ff 	sub    -0x2b0(%rbp),%rcx
  41ed5e:	48 89 8d b0 fb ff ff 	mov    %rcx,-0x450(%rbp)
  41ed65:	eb 0e                	jmp    41ed75 <mbedtls_mpi_div_mpi+0x85>
  41ed67:	48 8b 85 50 fd ff ff 	mov    -0x2b0(%rbp),%rax
  41ed6e:	48 89 85 b0 fb ff ff 	mov    %rax,-0x450(%rbp)
  41ed75:	48 8b 85 b0 fb ff ff 	mov    -0x450(%rbp),%rax
  41ed7c:	48 8d 8d 00 fd ff ff 	lea    -0x300(%rbp),%rcx
  41ed83:	48 89 cf             	mov    %rcx,%rdi
  41ed86:	48 89 c6             	mov    %rax,%rsi
  41ed89:	e8 6e 6f 02 00       	callq  445cfc <setEncryptedValueQWord>
  41ed8e:	48 8d 8d 20 fd ff ff 	lea    -0x2e0(%rbp),%rcx
  41ed95:	48 8b b5 50 fd ff ff 	mov    -0x2b0(%rbp),%rsi
  41ed9c:	48 83 fe 00          	cmp    $0x0,%rsi
  41eda0:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  41eda5:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  41edab:	44 0f 4c c2          	cmovl  %edx,%r8d
  41edaf:	48 89 cf             	mov    %rcx,%rdi
  41edb2:	44 89 c6             	mov    %r8d,%esi
  41edb5:	48 89 85 a8 fb ff ff 	mov    %rax,-0x458(%rbp)
  41edbc:	e8 3d 6e 02 00       	callq  445bfe <setEncryptedValueDWord>
  41edc1:	ba 01 00 00 00       	mov    $0x1,%edx
  41edc6:	89 d6                	mov    %edx,%esi
  41edc8:	48 8d 8d 20 fd ff ff 	lea    -0x2e0(%rbp),%rcx
  41edcf:	48 83 c1 08          	add    $0x8,%rcx
  41edd3:	48 89 cf             	mov    %rcx,%rdi
  41edd6:	48 89 85 a0 fb ff ff 	mov    %rax,-0x460(%rbp)
  41eddd:	e8 1a 6f 02 00       	callq  445cfc <setEncryptedValueQWord>
  41ede2:	48 8d b5 00 fd ff ff 	lea    -0x300(%rbp),%rsi
  41ede9:	48 8d 8d 20 fd ff ff 	lea    -0x2e0(%rbp),%rcx
  41edf0:	48 83 c1 10          	add    $0x10,%rcx
  41edf4:	48 89 cf             	mov    %rcx,%rdi
  41edf7:	48 89 85 98 fb ff ff 	mov    %rax,-0x468(%rbp)
  41edfe:	e8 f9 6e 02 00       	callq  445cfc <setEncryptedValueQWord>
  41ee03:	48 8b bd 58 fd ff ff 	mov    -0x2a8(%rbp),%rdi
  41ee0a:	48 8d b5 20 fd ff ff 	lea    -0x2e0(%rbp),%rsi
  41ee11:	48 89 85 90 fb ff ff 	mov    %rax,-0x470(%rbp)
  41ee18:	e8 33 fc ff ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  41ee1d:	89 85 8c fb ff ff    	mov    %eax,-0x474(%rbp)
  41ee23:	e8 2e 6b 02 00       	callq  445956 <writeback_cache>
  41ee28:	8b 85 8c fb ff ff    	mov    -0x474(%rbp),%eax
  41ee2e:	83 f8 00             	cmp    $0x0,%eax
  41ee31:	75 0f                	jne    41ee42 <mbedtls_mpi_div_mpi+0x152>
  41ee33:	c7 85 fc fc ff ff f4 	movl   $0xfffffff4,-0x304(%rbp)
  41ee3a:	ff ff ff 
  41ee3d:	e9 99 1e 00 00       	jmpq   420cdb <mbedtls_mpi_div_mpi+0x1feb>
  41ee42:	48 8d 85 80 fc ff ff 	lea    -0x380(%rbp),%rax
  41ee49:	48 89 85 60 fd ff ff 	mov    %rax,-0x2a0(%rbp)
  41ee50:	48 8b 85 60 fd ff ff 	mov    -0x2a0(%rbp),%rax
  41ee57:	48 89 c7             	mov    %rax,%rdi
  41ee5a:	be 01 00 00 00       	mov    $0x1,%esi
  41ee5f:	e8 9a 6d 02 00       	callq  445bfe <setEncryptedValueDWord>
  41ee64:	31 f6                	xor    %esi,%esi
  41ee66:	48 8b bd 60 fd ff ff 	mov    -0x2a0(%rbp),%rdi
  41ee6d:	48 83 c7 08          	add    $0x8,%rdi
  41ee71:	48 89 85 80 fb ff ff 	mov    %rax,-0x480(%rbp)
  41ee78:	e8 7f 6e 02 00       	callq  445cfc <setEncryptedValueQWord>
  41ee7d:	31 c9                	xor    %ecx,%ecx
  41ee7f:	89 ce                	mov    %ecx,%esi
  41ee81:	48 8b bd 60 fd ff ff 	mov    -0x2a0(%rbp),%rdi
  41ee88:	48 83 c7 10          	add    $0x10,%rdi
  41ee8c:	48 89 85 78 fb ff ff 	mov    %rax,-0x488(%rbp)
  41ee93:	e8 64 6e 02 00       	callq  445cfc <setEncryptedValueQWord>
  41ee98:	48 8d b5 50 fc ff ff 	lea    -0x3b0(%rbp),%rsi
  41ee9f:	48 89 b5 90 fd ff ff 	mov    %rsi,-0x270(%rbp)
  41eea6:	48 8b b5 90 fd ff ff 	mov    -0x270(%rbp),%rsi
  41eead:	48 89 f7             	mov    %rsi,%rdi
  41eeb0:	be 01 00 00 00       	mov    $0x1,%esi
  41eeb5:	48 89 85 70 fb ff ff 	mov    %rax,-0x490(%rbp)
  41eebc:	e8 3d 6d 02 00       	callq  445bfe <setEncryptedValueDWord>
  41eec1:	31 c9                	xor    %ecx,%ecx
  41eec3:	89 ce                	mov    %ecx,%esi
  41eec5:	48 8b bd 90 fd ff ff 	mov    -0x270(%rbp),%rdi
  41eecc:	48 83 c7 08          	add    $0x8,%rdi
  41eed0:	48 89 85 68 fb ff ff 	mov    %rax,-0x498(%rbp)
  41eed7:	e8 20 6e 02 00       	callq  445cfc <setEncryptedValueQWord>
  41eedc:	31 c9                	xor    %ecx,%ecx
  41eede:	89 ce                	mov    %ecx,%esi
  41eee0:	48 8b bd 90 fd ff ff 	mov    -0x270(%rbp),%rdi
  41eee7:	48 83 c7 10          	add    $0x10,%rdi
  41eeeb:	48 89 85 60 fb ff ff 	mov    %rax,-0x4a0(%rbp)
  41eef2:	e8 05 6e 02 00       	callq  445cfc <setEncryptedValueQWord>
  41eef7:	48 8d b5 20 fc ff ff 	lea    -0x3e0(%rbp),%rsi
  41eefe:	48 89 b5 98 fd ff ff 	mov    %rsi,-0x268(%rbp)
  41ef05:	48 8b b5 98 fd ff ff 	mov    -0x268(%rbp),%rsi
  41ef0c:	48 89 f7             	mov    %rsi,%rdi
  41ef0f:	be 01 00 00 00       	mov    $0x1,%esi
  41ef14:	48 89 85 58 fb ff ff 	mov    %rax,-0x4a8(%rbp)
  41ef1b:	e8 de 6c 02 00       	callq  445bfe <setEncryptedValueDWord>
  41ef20:	31 c9                	xor    %ecx,%ecx
  41ef22:	89 ce                	mov    %ecx,%esi
  41ef24:	48 8b bd 98 fd ff ff 	mov    -0x268(%rbp),%rdi
  41ef2b:	48 83 c7 08          	add    $0x8,%rdi
  41ef2f:	48 89 85 50 fb ff ff 	mov    %rax,-0x4b0(%rbp)
  41ef36:	e8 c1 6d 02 00       	callq  445cfc <setEncryptedValueQWord>
  41ef3b:	31 c9                	xor    %ecx,%ecx
  41ef3d:	89 ce                	mov    %ecx,%esi
  41ef3f:	48 8b bd 98 fd ff ff 	mov    -0x268(%rbp),%rdi
  41ef46:	48 83 c7 10          	add    $0x10,%rdi
  41ef4a:	48 89 85 48 fb ff ff 	mov    %rax,-0x4b8(%rbp)
  41ef51:	e8 a6 6d 02 00       	callq  445cfc <setEncryptedValueQWord>
  41ef56:	48 8d b5 f0 fb ff ff 	lea    -0x410(%rbp),%rsi
  41ef5d:	48 89 b5 c8 fd ff ff 	mov    %rsi,-0x238(%rbp)
  41ef64:	48 8b b5 c8 fd ff ff 	mov    -0x238(%rbp),%rsi
  41ef6b:	48 89 f7             	mov    %rsi,%rdi
  41ef6e:	be 01 00 00 00       	mov    $0x1,%esi
  41ef73:	48 89 85 40 fb ff ff 	mov    %rax,-0x4c0(%rbp)
  41ef7a:	e8 7f 6c 02 00       	callq  445bfe <setEncryptedValueDWord>
  41ef7f:	31 c9                	xor    %ecx,%ecx
  41ef81:	89 ce                	mov    %ecx,%esi
  41ef83:	48 8b bd c8 fd ff ff 	mov    -0x238(%rbp),%rdi
  41ef8a:	48 83 c7 08          	add    $0x8,%rdi
  41ef8e:	48 89 85 38 fb ff ff 	mov    %rax,-0x4c8(%rbp)
  41ef95:	e8 62 6d 02 00       	callq  445cfc <setEncryptedValueQWord>
  41ef9a:	31 c9                	xor    %ecx,%ecx
  41ef9c:	89 ce                	mov    %ecx,%esi
  41ef9e:	48 8b bd c8 fd ff ff 	mov    -0x238(%rbp),%rdi
  41efa5:	48 83 c7 10          	add    $0x10,%rdi
  41efa9:	48 89 85 30 fb ff ff 	mov    %rax,-0x4d0(%rbp)
  41efb0:	e8 47 6d 02 00       	callq  445cfc <setEncryptedValueQWord>
  41efb5:	48 8d b5 c0 fb ff ff 	lea    -0x440(%rbp),%rsi
  41efbc:	48 89 b5 d0 fd ff ff 	mov    %rsi,-0x230(%rbp)
  41efc3:	48 8b b5 d0 fd ff ff 	mov    -0x230(%rbp),%rsi
  41efca:	48 89 f7             	mov    %rsi,%rdi
  41efcd:	be 01 00 00 00       	mov    $0x1,%esi
  41efd2:	48 89 85 28 fb ff ff 	mov    %rax,-0x4d8(%rbp)
  41efd9:	e8 20 6c 02 00       	callq  445bfe <setEncryptedValueDWord>
  41efde:	31 c9                	xor    %ecx,%ecx
  41efe0:	89 ce                	mov    %ecx,%esi
  41efe2:	48 8b bd d0 fd ff ff 	mov    -0x230(%rbp),%rdi
  41efe9:	48 83 c7 08          	add    $0x8,%rdi
  41efed:	48 89 85 20 fb ff ff 	mov    %rax,-0x4e0(%rbp)
  41eff4:	e8 03 6d 02 00       	callq  445cfc <setEncryptedValueQWord>
  41eff9:	31 c9                	xor    %ecx,%ecx
  41effb:	89 ce                	mov    %ecx,%esi
  41effd:	48 8b bd d0 fd ff ff 	mov    -0x230(%rbp),%rdi
  41f004:	48 83 c7 10          	add    $0x10,%rdi
  41f008:	48 89 85 18 fb ff ff 	mov    %rax,-0x4e8(%rbp)
  41f00f:	e8 e8 6c 02 00       	callq  445cfc <setEncryptedValueQWord>
  41f014:	48 8b bd e0 fc ff ff 	mov    -0x320(%rbp),%rdi
  41f01b:	48 8b b5 d8 fc ff ff 	mov    -0x328(%rbp),%rsi
  41f022:	48 89 85 10 fb ff ff 	mov    %rax,-0x4f0(%rbp)
  41f029:	e8 22 ca ff ff       	callq  41ba50 <mbedtls_mpi_cmp_abs>
  41f02e:	83 f8 00             	cmp    $0x0,%eax
  41f031:	0f 8d b3 01 00 00    	jge    41f1ea <mbedtls_mpi_div_mpi+0x4fa>
  41f037:	48 83 bd f0 fc ff ff 	cmpq   $0x0,-0x310(%rbp)
  41f03e:	00 
  41f03f:	0f 84 63 01 00 00    	je     41f1a8 <mbedtls_mpi_div_mpi+0x4b8>
  41f045:	eb 00                	jmp    41f047 <mbedtls_mpi_div_mpi+0x357>
  41f047:	b8 01 00 00 00       	mov    $0x1,%eax
  41f04c:	89 c6                	mov    %eax,%esi
  41f04e:	48 8b 8d f0 fc ff ff 	mov    -0x310(%rbp),%rcx
  41f055:	48 89 8d 10 fe ff ff 	mov    %rcx,-0x1f0(%rbp)
  41f05c:	48 c7 85 08 fe ff ff 	movq   $0x0,-0x1f8(%rbp)
  41f063:	00 00 00 00 
  41f067:	48 8b bd 10 fe ff ff 	mov    -0x1f0(%rbp),%rdi
  41f06e:	e8 cd ba ff ff       	callq  41ab40 <mbedtls_mpi_grow>
  41f073:	89 85 04 fe ff ff    	mov    %eax,-0x1fc(%rbp)
  41f079:	83 f8 00             	cmp    $0x0,%eax
  41f07c:	74 05                	je     41f083 <mbedtls_mpi_div_mpi+0x393>
  41f07e:	e9 0b 01 00 00       	jmpq   41f18e <mbedtls_mpi_div_mpi+0x49e>
  41f083:	48 8b 85 10 fe ff ff 	mov    -0x1f0(%rbp),%rax
  41f08a:	48 83 c0 10          	add    $0x10,%rax
  41f08e:	48 89 c7             	mov    %rax,%rdi
  41f091:	e8 b2 70 02 00       	callq  446148 <getDecryptedValueQWord>
  41f096:	48 8b bd 10 fe ff ff 	mov    -0x1f0(%rbp),%rdi
  41f09d:	48 83 c7 08          	add    $0x8,%rdi
  41f0a1:	48 89 85 08 fb ff ff 	mov    %rax,-0x4f8(%rbp)
  41f0a8:	e8 9b 70 02 00       	callq  446148 <getDecryptedValueQWord>
  41f0ad:	48 c1 e0 03          	shl    $0x3,%rax
  41f0b1:	48 89 85 00 fb ff ff 	mov    %rax,-0x500(%rbp)
  41f0b8:	e8 99 68 02 00       	callq  445956 <writeback_cache>
  41f0bd:	48 8b bd 08 fb ff ff 	mov    -0x4f8(%rbp),%rdi
  41f0c4:	48 8b b5 00 fb ff ff 	mov    -0x500(%rbp),%rsi
  41f0cb:	e8 15 76 02 00       	callq  4466e5 <decryptArrayForLibCall>
  41f0d0:	31 f6                	xor    %esi,%esi
  41f0d2:	48 8b bd 08 fb ff ff 	mov    -0x4f8(%rbp),%rdi
  41f0d9:	48 8b 95 00 fb ff ff 	mov    -0x500(%rbp),%rdx
  41f0e0:	e8 3b 1f fe ff       	callq  401020 <memset@plt>
  41f0e5:	48 8b bd 08 fb ff ff 	mov    -0x4f8(%rbp),%rdi
  41f0ec:	48 8b b5 00 fb ff ff 	mov    -0x500(%rbp),%rsi
  41f0f3:	e8 5e 73 02 00       	callq  446456 <encryptArrayForLibCall>
  41f0f8:	48 83 bd 08 fe ff ff 	cmpq   $0x0,-0x1f8(%rbp)
  41f0ff:	00 
  41f100:	7d 14                	jge    41f116 <mbedtls_mpi_div_mpi+0x426>
  41f102:	31 c0                	xor    %eax,%eax
  41f104:	89 c1                	mov    %eax,%ecx
  41f106:	48 2b 8d 08 fe ff ff 	sub    -0x1f8(%rbp),%rcx
  41f10d:	48 89 8d f8 fa ff ff 	mov    %rcx,-0x508(%rbp)
  41f114:	eb 0e                	jmp    41f124 <mbedtls_mpi_div_mpi+0x434>
  41f116:	48 8b 85 08 fe ff ff 	mov    -0x1f8(%rbp),%rax
  41f11d:	48 89 85 f8 fa ff ff 	mov    %rax,-0x508(%rbp)
  41f124:	48 8b 85 f8 fa ff ff 	mov    -0x508(%rbp),%rax
  41f12b:	48 8b 8d 10 fe ff ff 	mov    -0x1f0(%rbp),%rcx
  41f132:	48 83 c1 10          	add    $0x10,%rcx
  41f136:	48 89 cf             	mov    %rcx,%rdi
  41f139:	48 89 85 f0 fa ff ff 	mov    %rax,-0x510(%rbp)
  41f140:	e8 03 70 02 00       	callq  446148 <getDecryptedValueQWord>
  41f145:	48 89 c7             	mov    %rax,%rdi
  41f148:	48 8b b5 f0 fa ff ff 	mov    -0x510(%rbp),%rsi
  41f14f:	e8 a8 6b 02 00       	callq  445cfc <setEncryptedValueQWord>
  41f154:	48 8b 8d 08 fe ff ff 	mov    -0x1f8(%rbp),%rcx
  41f15b:	48 83 f9 00          	cmp    $0x0,%rcx
  41f15f:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  41f164:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  41f16a:	44 0f 4c c2          	cmovl  %edx,%r8d
  41f16e:	48 8b 8d 10 fe ff ff 	mov    -0x1f0(%rbp),%rcx
  41f175:	48 89 cf             	mov    %rcx,%rdi
  41f178:	44 89 c6             	mov    %r8d,%esi
  41f17b:	48 89 85 e8 fa ff ff 	mov    %rax,-0x518(%rbp)
  41f182:	e8 77 6a 02 00       	callq  445bfe <setEncryptedValueDWord>
  41f187:	48 89 85 e0 fa ff ff 	mov    %rax,-0x520(%rbp)
  41f18e:	8b 85 04 fe ff ff    	mov    -0x1fc(%rbp),%eax
  41f194:	89 85 d4 fc ff ff    	mov    %eax,-0x32c(%rbp)
  41f19a:	83 f8 00             	cmp    $0x0,%eax
  41f19d:	74 05                	je     41f1a4 <mbedtls_mpi_div_mpi+0x4b4>
  41f19f:	e9 e4 13 00 00       	jmpq   420588 <mbedtls_mpi_div_mpi+0x1898>
  41f1a4:	eb 00                	jmp    41f1a6 <mbedtls_mpi_div_mpi+0x4b6>
  41f1a6:	eb 00                	jmp    41f1a8 <mbedtls_mpi_div_mpi+0x4b8>
  41f1a8:	48 83 bd e8 fc ff ff 	cmpq   $0x0,-0x318(%rbp)
  41f1af:	00 
  41f1b0:	74 29                	je     41f1db <mbedtls_mpi_div_mpi+0x4eb>
  41f1b2:	eb 00                	jmp    41f1b4 <mbedtls_mpi_div_mpi+0x4c4>
  41f1b4:	48 8b bd e8 fc ff ff 	mov    -0x318(%rbp),%rdi
  41f1bb:	48 8b b5 e0 fc ff ff 	mov    -0x320(%rbp),%rsi
  41f1c2:	e8 d9 bb ff ff       	callq  41ada0 <mbedtls_mpi_copy>
  41f1c7:	89 85 d4 fc ff ff    	mov    %eax,-0x32c(%rbp)
  41f1cd:	83 f8 00             	cmp    $0x0,%eax
  41f1d0:	74 05                	je     41f1d7 <mbedtls_mpi_div_mpi+0x4e7>
  41f1d2:	e9 b1 13 00 00       	jmpq   420588 <mbedtls_mpi_div_mpi+0x1898>
  41f1d7:	eb 00                	jmp    41f1d9 <mbedtls_mpi_div_mpi+0x4e9>
  41f1d9:	eb 00                	jmp    41f1db <mbedtls_mpi_div_mpi+0x4eb>
  41f1db:	c7 85 fc fc ff ff 00 	movl   $0x0,-0x304(%rbp)
  41f1e2:	00 00 00 
  41f1e5:	e9 f1 1a 00 00       	jmpq   420cdb <mbedtls_mpi_div_mpi+0x1feb>
  41f1ea:	eb 00                	jmp    41f1ec <mbedtls_mpi_div_mpi+0x4fc>
  41f1ec:	48 8b b5 e0 fc ff ff 	mov    -0x320(%rbp),%rsi
  41f1f3:	48 8d bd 80 fc ff ff 	lea    -0x380(%rbp),%rdi
  41f1fa:	e8 a1 bb ff ff       	callq  41ada0 <mbedtls_mpi_copy>
  41f1ff:	89 85 d4 fc ff ff    	mov    %eax,-0x32c(%rbp)
  41f205:	83 f8 00             	cmp    $0x0,%eax
  41f208:	74 05                	je     41f20f <mbedtls_mpi_div_mpi+0x51f>
  41f20a:	e9 79 13 00 00       	jmpq   420588 <mbedtls_mpi_div_mpi+0x1898>
  41f20f:	eb 00                	jmp    41f211 <mbedtls_mpi_div_mpi+0x521>
  41f211:	eb 00                	jmp    41f213 <mbedtls_mpi_div_mpi+0x523>
  41f213:	48 8b b5 d8 fc ff ff 	mov    -0x328(%rbp),%rsi
  41f21a:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  41f221:	e8 7a bb ff ff       	callq  41ada0 <mbedtls_mpi_copy>
  41f226:	89 85 d4 fc ff ff    	mov    %eax,-0x32c(%rbp)
  41f22c:	83 f8 00             	cmp    $0x0,%eax
  41f22f:	74 05                	je     41f236 <mbedtls_mpi_div_mpi+0x546>
  41f231:	e9 52 13 00 00       	jmpq   420588 <mbedtls_mpi_div_mpi+0x1898>
  41f236:	eb 00                	jmp    41f238 <mbedtls_mpi_div_mpi+0x548>
  41f238:	48 8d 85 50 fc ff ff 	lea    -0x3b0(%rbp),%rax
  41f23f:	48 89 c7             	mov    %rax,%rdi
  41f242:	be 01 00 00 00       	mov    $0x1,%esi
  41f247:	e8 b2 69 02 00       	callq  445bfe <setEncryptedValueDWord>
  41f24c:	48 8d bd 80 fc ff ff 	lea    -0x380(%rbp),%rdi
  41f253:	be 01 00 00 00       	mov    $0x1,%esi
  41f258:	48 89 85 d8 fa ff ff 	mov    %rax,-0x528(%rbp)
  41f25f:	e8 9a 69 02 00       	callq  445bfe <setEncryptedValueDWord>
  41f264:	48 89 85 d0 fa ff ff 	mov    %rax,-0x530(%rbp)
  41f26b:	48 8b 85 e0 fc ff ff 	mov    -0x320(%rbp),%rax
  41f272:	48 83 c0 08          	add    $0x8,%rax
  41f276:	48 89 c7             	mov    %rax,%rdi
  41f279:	e8 ca 6e 02 00       	callq  446148 <getDecryptedValueQWord>
  41f27e:	48 83 c0 02          	add    $0x2,%rax
  41f282:	48 8d bd 20 fc ff ff 	lea    -0x3e0(%rbp),%rdi
  41f289:	48 89 c6             	mov    %rax,%rsi
  41f28c:	e8 af b8 ff ff       	callq  41ab40 <mbedtls_mpi_grow>
  41f291:	89 85 d4 fc ff ff    	mov    %eax,-0x32c(%rbp)
  41f297:	83 f8 00             	cmp    $0x0,%eax
  41f29a:	74 05                	je     41f2a1 <mbedtls_mpi_div_mpi+0x5b1>
  41f29c:	e9 e7 12 00 00       	jmpq   420588 <mbedtls_mpi_div_mpi+0x1898>
  41f2a1:	eb 00                	jmp    41f2a3 <mbedtls_mpi_div_mpi+0x5b3>
  41f2a3:	eb 00                	jmp    41f2a5 <mbedtls_mpi_div_mpi+0x5b5>
  41f2a5:	b8 01 00 00 00       	mov    $0x1,%eax
  41f2aa:	89 c6                	mov    %eax,%esi
  41f2ac:	48 8d 8d 20 fc ff ff 	lea    -0x3e0(%rbp),%rcx
  41f2b3:	48 89 8d 28 fe ff ff 	mov    %rcx,-0x1d8(%rbp)
  41f2ba:	48 c7 85 20 fe ff ff 	movq   $0x0,-0x1e0(%rbp)
  41f2c1:	00 00 00 00 
  41f2c5:	48 8b bd 28 fe ff ff 	mov    -0x1d8(%rbp),%rdi
  41f2cc:	e8 6f b8 ff ff       	callq  41ab40 <mbedtls_mpi_grow>
  41f2d1:	89 85 1c fe ff ff    	mov    %eax,-0x1e4(%rbp)
  41f2d7:	83 f8 00             	cmp    $0x0,%eax
  41f2da:	74 05                	je     41f2e1 <mbedtls_mpi_div_mpi+0x5f1>
  41f2dc:	e9 0b 01 00 00       	jmpq   41f3ec <mbedtls_mpi_div_mpi+0x6fc>
  41f2e1:	48 8b 85 28 fe ff ff 	mov    -0x1d8(%rbp),%rax
  41f2e8:	48 83 c0 10          	add    $0x10,%rax
  41f2ec:	48 89 c7             	mov    %rax,%rdi
  41f2ef:	e8 54 6e 02 00       	callq  446148 <getDecryptedValueQWord>
  41f2f4:	48 8b bd 28 fe ff ff 	mov    -0x1d8(%rbp),%rdi
  41f2fb:	48 83 c7 08          	add    $0x8,%rdi
  41f2ff:	48 89 85 c8 fa ff ff 	mov    %rax,-0x538(%rbp)
  41f306:	e8 3d 6e 02 00       	callq  446148 <getDecryptedValueQWord>
  41f30b:	48 c1 e0 03          	shl    $0x3,%rax
  41f30f:	48 89 85 c0 fa ff ff 	mov    %rax,-0x540(%rbp)
  41f316:	e8 3b 66 02 00       	callq  445956 <writeback_cache>
  41f31b:	48 8b bd c8 fa ff ff 	mov    -0x538(%rbp),%rdi
  41f322:	48 8b b5 c0 fa ff ff 	mov    -0x540(%rbp),%rsi
  41f329:	e8 b7 73 02 00       	callq  4466e5 <decryptArrayForLibCall>
  41f32e:	31 f6                	xor    %esi,%esi
  41f330:	48 8b bd c8 fa ff ff 	mov    -0x538(%rbp),%rdi
  41f337:	48 8b 95 c0 fa ff ff 	mov    -0x540(%rbp),%rdx
  41f33e:	e8 dd 1c fe ff       	callq  401020 <memset@plt>
  41f343:	48 8b bd c8 fa ff ff 	mov    -0x538(%rbp),%rdi
  41f34a:	48 8b b5 c0 fa ff ff 	mov    -0x540(%rbp),%rsi
  41f351:	e8 00 71 02 00       	callq  446456 <encryptArrayForLibCall>
  41f356:	48 83 bd 20 fe ff ff 	cmpq   $0x0,-0x1e0(%rbp)
  41f35d:	00 
  41f35e:	7d 14                	jge    41f374 <mbedtls_mpi_div_mpi+0x684>
  41f360:	31 c0                	xor    %eax,%eax
  41f362:	89 c1                	mov    %eax,%ecx
  41f364:	48 2b 8d 20 fe ff ff 	sub    -0x1e0(%rbp),%rcx
  41f36b:	48 89 8d b8 fa ff ff 	mov    %rcx,-0x548(%rbp)
  41f372:	eb 0e                	jmp    41f382 <mbedtls_mpi_div_mpi+0x692>
  41f374:	48 8b 85 20 fe ff ff 	mov    -0x1e0(%rbp),%rax
  41f37b:	48 89 85 b8 fa ff ff 	mov    %rax,-0x548(%rbp)
  41f382:	48 8b 85 b8 fa ff ff 	mov    -0x548(%rbp),%rax
  41f389:	48 8b 8d 28 fe ff ff 	mov    -0x1d8(%rbp),%rcx
  41f390:	48 83 c1 10          	add    $0x10,%rcx
  41f394:	48 89 cf             	mov    %rcx,%rdi
  41f397:	48 89 85 b0 fa ff ff 	mov    %rax,-0x550(%rbp)
  41f39e:	e8 a5 6d 02 00       	callq  446148 <getDecryptedValueQWord>
  41f3a3:	48 89 c7             	mov    %rax,%rdi
  41f3a6:	48 8b b5 b0 fa ff ff 	mov    -0x550(%rbp),%rsi
  41f3ad:	e8 4a 69 02 00       	callq  445cfc <setEncryptedValueQWord>
  41f3b2:	48 8b 8d 20 fe ff ff 	mov    -0x1e0(%rbp),%rcx
  41f3b9:	48 83 f9 00          	cmp    $0x0,%rcx
  41f3bd:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  41f3c2:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  41f3c8:	44 0f 4c c2          	cmovl  %edx,%r8d
  41f3cc:	48 8b 8d 28 fe ff ff 	mov    -0x1d8(%rbp),%rcx
  41f3d3:	48 89 cf             	mov    %rcx,%rdi
  41f3d6:	44 89 c6             	mov    %r8d,%esi
  41f3d9:	48 89 85 a8 fa ff ff 	mov    %rax,-0x558(%rbp)
  41f3e0:	e8 19 68 02 00       	callq  445bfe <setEncryptedValueDWord>
  41f3e5:	48 89 85 a0 fa ff ff 	mov    %rax,-0x560(%rbp)
  41f3ec:	8b 85 1c fe ff ff    	mov    -0x1e4(%rbp),%eax
  41f3f2:	89 85 d4 fc ff ff    	mov    %eax,-0x32c(%rbp)
  41f3f8:	83 f8 00             	cmp    $0x0,%eax
  41f3fb:	74 05                	je     41f402 <mbedtls_mpi_div_mpi+0x712>
  41f3fd:	e9 86 11 00 00       	jmpq   420588 <mbedtls_mpi_div_mpi+0x1898>
  41f402:	eb 00                	jmp    41f404 <mbedtls_mpi_div_mpi+0x714>
  41f404:	eb 00                	jmp    41f406 <mbedtls_mpi_div_mpi+0x716>
  41f406:	b8 02 00 00 00       	mov    $0x2,%eax
  41f40b:	89 c6                	mov    %eax,%esi
  41f40d:	48 8d bd f0 fb ff ff 	lea    -0x410(%rbp),%rdi
  41f414:	e8 27 b7 ff ff       	callq  41ab40 <mbedtls_mpi_grow>
  41f419:	89 85 d4 fc ff ff    	mov    %eax,-0x32c(%rbp)
  41f41f:	83 f8 00             	cmp    $0x0,%eax
  41f422:	74 05                	je     41f429 <mbedtls_mpi_div_mpi+0x739>
  41f424:	e9 5f 11 00 00       	jmpq   420588 <mbedtls_mpi_div_mpi+0x1898>
  41f429:	eb 00                	jmp    41f42b <mbedtls_mpi_div_mpi+0x73b>
  41f42b:	eb 00                	jmp    41f42d <mbedtls_mpi_div_mpi+0x73d>
  41f42d:	b8 03 00 00 00       	mov    $0x3,%eax
  41f432:	89 c6                	mov    %eax,%esi
  41f434:	48 8d bd c0 fb ff ff 	lea    -0x440(%rbp),%rdi
  41f43b:	e8 00 b7 ff ff       	callq  41ab40 <mbedtls_mpi_grow>
  41f440:	89 85 d4 fc ff ff    	mov    %eax,-0x32c(%rbp)
  41f446:	83 f8 00             	cmp    $0x0,%eax
  41f449:	74 05                	je     41f450 <mbedtls_mpi_div_mpi+0x760>
  41f44b:	e9 38 11 00 00       	jmpq   420588 <mbedtls_mpi_div_mpi+0x1898>
  41f450:	eb 00                	jmp    41f452 <mbedtls_mpi_div_mpi+0x762>
  41f452:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  41f459:	e8 72 bd ff ff       	callq  41b1d0 <mbedtls_mpi_bitlen>
  41f45e:	48 83 e0 3f          	and    $0x3f,%rax
  41f462:	48 89 85 b0 fc ff ff 	mov    %rax,-0x350(%rbp)
  41f469:	48 83 bd b0 fc ff ff 	cmpq   $0x3f,-0x350(%rbp)
  41f470:	3f 
  41f471:	73 63                	jae    41f4d6 <mbedtls_mpi_div_mpi+0x7e6>
  41f473:	b8 3f 00 00 00       	mov    $0x3f,%eax
  41f478:	89 c1                	mov    %eax,%ecx
  41f47a:	48 2b 8d b0 fc ff ff 	sub    -0x350(%rbp),%rcx
  41f481:	48 89 8d b0 fc ff ff 	mov    %rcx,-0x350(%rbp)
  41f488:	48 8b b5 b0 fc ff ff 	mov    -0x350(%rbp),%rsi
  41f48f:	48 8d bd 80 fc ff ff 	lea    -0x380(%rbp),%rdi
  41f496:	e8 65 18 00 00       	callq  420d00 <mbedtls_mpi_shift_l>
  41f49b:	89 85 d4 fc ff ff    	mov    %eax,-0x32c(%rbp)
  41f4a1:	83 f8 00             	cmp    $0x0,%eax
  41f4a4:	74 05                	je     41f4ab <mbedtls_mpi_div_mpi+0x7bb>
  41f4a6:	e9 dd 10 00 00       	jmpq   420588 <mbedtls_mpi_div_mpi+0x1898>
  41f4ab:	eb 00                	jmp    41f4ad <mbedtls_mpi_div_mpi+0x7bd>
  41f4ad:	eb 00                	jmp    41f4af <mbedtls_mpi_div_mpi+0x7bf>
  41f4af:	48 8b b5 b0 fc ff ff 	mov    -0x350(%rbp),%rsi
  41f4b6:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  41f4bd:	e8 3e 18 00 00       	callq  420d00 <mbedtls_mpi_shift_l>
  41f4c2:	89 85 d4 fc ff ff    	mov    %eax,-0x32c(%rbp)
  41f4c8:	83 f8 00             	cmp    $0x0,%eax
  41f4cb:	74 05                	je     41f4d2 <mbedtls_mpi_div_mpi+0x7e2>
  41f4cd:	e9 b6 10 00 00       	jmpq   420588 <mbedtls_mpi_div_mpi+0x1898>
  41f4d2:	eb 00                	jmp    41f4d4 <mbedtls_mpi_div_mpi+0x7e4>
  41f4d4:	eb 0b                	jmp    41f4e1 <mbedtls_mpi_div_mpi+0x7f1>
  41f4d6:	48 c7 85 b0 fc ff ff 	movq   $0x0,-0x350(%rbp)
  41f4dd:	00 00 00 00 
  41f4e1:	48 8d 85 80 fc ff ff 	lea    -0x380(%rbp),%rax
  41f4e8:	48 83 c0 08          	add    $0x8,%rax
  41f4ec:	48 89 c7             	mov    %rax,%rdi
  41f4ef:	e8 54 6c 02 00       	callq  446148 <getDecryptedValueQWord>
  41f4f4:	48 83 e8 01          	sub    $0x1,%rax
  41f4f8:	48 89 85 c0 fc ff ff 	mov    %rax,-0x340(%rbp)
  41f4ff:	48 8d 85 50 fc ff ff 	lea    -0x3b0(%rbp),%rax
  41f506:	48 83 c0 08          	add    $0x8,%rax
  41f50a:	48 89 c7             	mov    %rax,%rdi
  41f50d:	e8 36 6c 02 00       	callq  446148 <getDecryptedValueQWord>
  41f512:	48 83 e8 01          	sub    $0x1,%rax
  41f516:	48 89 85 b8 fc ff ff 	mov    %rax,-0x348(%rbp)
  41f51d:	48 8b 85 c0 fc ff ff 	mov    -0x340(%rbp),%rax
  41f524:	48 2b 85 b8 fc ff ff 	sub    -0x348(%rbp),%rax
  41f52b:	48 c1 e0 06          	shl    $0x6,%rax
  41f52f:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  41f536:	48 89 c6             	mov    %rax,%rsi
  41f539:	e8 c2 17 00 00       	callq  420d00 <mbedtls_mpi_shift_l>
  41f53e:	89 85 d4 fc ff ff    	mov    %eax,-0x32c(%rbp)
  41f544:	83 f8 00             	cmp    $0x0,%eax
  41f547:	74 05                	je     41f54e <mbedtls_mpi_div_mpi+0x85e>
  41f549:	e9 3a 10 00 00       	jmpq   420588 <mbedtls_mpi_div_mpi+0x1898>
  41f54e:	eb 00                	jmp    41f550 <mbedtls_mpi_div_mpi+0x860>
  41f550:	eb 00                	jmp    41f552 <mbedtls_mpi_div_mpi+0x862>
  41f552:	48 8d bd 80 fc ff ff 	lea    -0x380(%rbp),%rdi
  41f559:	48 8d b5 50 fc ff ff 	lea    -0x3b0(%rbp),%rsi
  41f560:	e8 eb f4 ff ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  41f565:	83 f8 00             	cmp    $0x0,%eax
  41f568:	0f 8c 81 00 00 00    	jl     41f5ef <mbedtls_mpi_div_mpi+0x8ff>
  41f56e:	48 8d 85 20 fc ff ff 	lea    -0x3e0(%rbp),%rax
  41f575:	48 83 c0 10          	add    $0x10,%rax
  41f579:	48 89 c7             	mov    %rax,%rdi
  41f57c:	e8 c7 6b 02 00       	callq  446148 <getDecryptedValueQWord>
  41f581:	48 8b bd c0 fc ff ff 	mov    -0x340(%rbp),%rdi
  41f588:	48 2b bd b8 fc ff ff 	sub    -0x348(%rbp),%rdi
  41f58f:	48 c1 e7 03          	shl    $0x3,%rdi
  41f593:	48 01 f8             	add    %rdi,%rax
  41f596:	48 89 c7             	mov    %rax,%rdi
  41f599:	48 89 85 98 fa ff ff 	mov    %rax,-0x568(%rbp)
  41f5a0:	e8 a3 6b 02 00       	callq  446148 <getDecryptedValueQWord>
  41f5a5:	48 83 c0 01          	add    $0x1,%rax
  41f5a9:	48 8b bd 98 fa ff ff 	mov    -0x568(%rbp),%rdi
  41f5b0:	48 89 c6             	mov    %rax,%rsi
  41f5b3:	e8 44 67 02 00       	callq  445cfc <setEncryptedValueQWord>
  41f5b8:	48 89 85 90 fa ff ff 	mov    %rax,-0x570(%rbp)
  41f5bf:	48 8d 85 80 fc ff ff 	lea    -0x380(%rbp),%rax
  41f5c6:	48 89 c7             	mov    %rax,%rdi
  41f5c9:	48 89 c6             	mov    %rax,%rsi
  41f5cc:	48 8d 95 50 fc ff ff 	lea    -0x3b0(%rbp),%rdx
  41f5d3:	e8 58 c3 ff ff       	callq  41b930 <mbedtls_mpi_sub_mpi>
  41f5d8:	89 85 d4 fc ff ff    	mov    %eax,-0x32c(%rbp)
  41f5de:	83 f8 00             	cmp    $0x0,%eax
  41f5e1:	74 05                	je     41f5e8 <mbedtls_mpi_div_mpi+0x8f8>
  41f5e3:	e9 a0 0f 00 00       	jmpq   420588 <mbedtls_mpi_div_mpi+0x1898>
  41f5e8:	eb 00                	jmp    41f5ea <mbedtls_mpi_div_mpi+0x8fa>
  41f5ea:	e9 63 ff ff ff       	jmpq   41f552 <mbedtls_mpi_div_mpi+0x862>
  41f5ef:	eb 00                	jmp    41f5f1 <mbedtls_mpi_div_mpi+0x901>
  41f5f1:	48 8b 85 c0 fc ff ff 	mov    -0x340(%rbp),%rax
  41f5f8:	48 2b 85 b8 fc ff ff 	sub    -0x348(%rbp),%rax
  41f5ff:	48 c1 e0 06          	shl    $0x6,%rax
  41f603:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  41f60a:	48 89 c6             	mov    %rax,%rsi
  41f60d:	e8 be 19 00 00       	callq  420fd0 <mbedtls_mpi_shift_r>
  41f612:	89 85 d4 fc ff ff    	mov    %eax,-0x32c(%rbp)
  41f618:	83 f8 00             	cmp    $0x0,%eax
  41f61b:	74 05                	je     41f622 <mbedtls_mpi_div_mpi+0x932>
  41f61d:	e9 66 0f 00 00       	jmpq   420588 <mbedtls_mpi_div_mpi+0x1898>
  41f622:	eb 00                	jmp    41f624 <mbedtls_mpi_div_mpi+0x934>
  41f624:	48 8b 85 c0 fc ff ff 	mov    -0x340(%rbp),%rax
  41f62b:	48 89 85 c8 fc ff ff 	mov    %rax,-0x338(%rbp)
  41f632:	48 8b 85 c8 fc ff ff 	mov    -0x338(%rbp),%rax
  41f639:	48 3b 85 b8 fc ff ff 	cmp    -0x348(%rbp),%rax
  41f640:	0f 86 34 0d 00 00    	jbe    42037a <mbedtls_mpi_div_mpi+0x168a>
  41f646:	48 8d 85 80 fc ff ff 	lea    -0x380(%rbp),%rax
  41f64d:	48 83 c0 10          	add    $0x10,%rax
  41f651:	48 89 c7             	mov    %rax,%rdi
  41f654:	e8 ef 6a 02 00       	callq  446148 <getDecryptedValueQWord>
  41f659:	48 8b bd c8 fc ff ff 	mov    -0x338(%rbp),%rdi
  41f660:	48 c1 e7 03          	shl    $0x3,%rdi
  41f664:	48 01 f8             	add    %rdi,%rax
  41f667:	48 89 c7             	mov    %rax,%rdi
  41f66a:	e8 d9 6a 02 00       	callq  446148 <getDecryptedValueQWord>
  41f66f:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  41f676:	48 83 c7 10          	add    $0x10,%rdi
  41f67a:	48 89 85 88 fa ff ff 	mov    %rax,-0x578(%rbp)
  41f681:	e8 c2 6a 02 00       	callq  446148 <getDecryptedValueQWord>
  41f686:	48 8b bd b8 fc ff ff 	mov    -0x348(%rbp),%rdi
  41f68d:	48 c1 e7 03          	shl    $0x3,%rdi
  41f691:	48 01 f8             	add    %rdi,%rax
  41f694:	48 89 c7             	mov    %rax,%rdi
  41f697:	e8 ac 6a 02 00       	callq  446148 <getDecryptedValueQWord>
  41f69c:	48 8b bd 88 fa ff ff 	mov    -0x578(%rbp),%rdi
  41f6a3:	48 39 c7             	cmp    %rax,%rdi
  41f6a6:	72 47                	jb     41f6ef <mbedtls_mpi_div_mpi+0x9ff>
  41f6a8:	48 8d 85 20 fc ff ff 	lea    -0x3e0(%rbp),%rax
  41f6af:	48 83 c0 10          	add    $0x10,%rax
  41f6b3:	48 89 c7             	mov    %rax,%rdi
  41f6b6:	e8 8d 6a 02 00       	callq  446148 <getDecryptedValueQWord>
  41f6bb:	48 8b bd c8 fc ff ff 	mov    -0x338(%rbp),%rdi
  41f6c2:	48 2b bd b8 fc ff ff 	sub    -0x348(%rbp),%rdi
  41f6c9:	48 83 ef 01          	sub    $0x1,%rdi
  41f6cd:	48 c1 e7 03          	shl    $0x3,%rdi
  41f6d1:	48 01 f8             	add    %rdi,%rax
  41f6d4:	48 89 c7             	mov    %rax,%rdi
  41f6d7:	48 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%rsi
  41f6de:	e8 19 66 02 00       	callq  445cfc <setEncryptedValueQWord>
  41f6e3:	48 89 85 80 fa ff ff 	mov    %rax,-0x580(%rbp)
  41f6ea:	e9 0b 02 00 00       	jmpq   41f8fa <mbedtls_mpi_div_mpi+0xc0a>
  41f6ef:	48 8d 85 80 fc ff ff 	lea    -0x380(%rbp),%rax
  41f6f6:	48 83 c0 10          	add    $0x10,%rax
  41f6fa:	48 89 c7             	mov    %rax,%rdi
  41f6fd:	e8 46 6a 02 00       	callq  446148 <getDecryptedValueQWord>
  41f702:	48 8b bd c8 fc ff ff 	mov    -0x338(%rbp),%rdi
  41f709:	48 c1 e7 03          	shl    $0x3,%rdi
  41f70d:	48 01 f8             	add    %rdi,%rax
  41f710:	48 89 c7             	mov    %rax,%rdi
  41f713:	e8 30 6a 02 00       	callq  446148 <getDecryptedValueQWord>
  41f718:	48 8d bd 80 fc ff ff 	lea    -0x380(%rbp),%rdi
  41f71f:	48 83 c7 10          	add    $0x10,%rdi
  41f723:	48 89 85 78 fa ff ff 	mov    %rax,-0x588(%rbp)
  41f72a:	e8 19 6a 02 00       	callq  446148 <getDecryptedValueQWord>
  41f72f:	48 8b bd c8 fc ff ff 	mov    -0x338(%rbp),%rdi
  41f736:	48 83 ef 01          	sub    $0x1,%rdi
  41f73a:	48 c1 e7 03          	shl    $0x3,%rdi
  41f73e:	48 01 f8             	add    %rdi,%rax
  41f741:	48 89 c7             	mov    %rax,%rdi
  41f744:	e8 ff 69 02 00       	callq  446148 <getDecryptedValueQWord>
  41f749:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  41f750:	48 83 c7 10          	add    $0x10,%rdi
  41f754:	48 89 85 70 fa ff ff 	mov    %rax,-0x590(%rbp)
  41f75b:	e8 e8 69 02 00       	callq  446148 <getDecryptedValueQWord>
  41f760:	48 8b bd b8 fc ff ff 	mov    -0x348(%rbp),%rdi
  41f767:	48 c1 e7 03          	shl    $0x3,%rdi
  41f76b:	48 01 f8             	add    %rdi,%rax
  41f76e:	48 89 c7             	mov    %rax,%rdi
  41f771:	e8 d2 69 02 00       	callq  446148 <getDecryptedValueQWord>
  41f776:	31 c9                	xor    %ecx,%ecx
  41f778:	89 cf                	mov    %ecx,%edi
  41f77a:	48 8b 95 78 fa ff ff 	mov    -0x588(%rbp),%rdx
  41f781:	48 89 95 68 fe ff ff 	mov    %rdx,-0x198(%rbp)
  41f788:	48 8b 95 70 fa ff ff 	mov    -0x590(%rbp),%rdx
  41f78f:	48 89 95 60 fe ff ff 	mov    %rdx,-0x1a0(%rbp)
  41f796:	48 89 85 58 fe ff ff 	mov    %rax,-0x1a8(%rbp)
  41f79d:	48 c7 85 50 fe ff ff 	movq   $0x0,-0x1b0(%rbp)
  41f7a4:	00 00 00 00 
  41f7a8:	48 3b bd 58 fe ff ff 	cmp    -0x1a8(%rbp),%rdi
  41f7af:	74 10                	je     41f7c1 <mbedtls_mpi_div_mpi+0xad1>
  41f7b1:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
  41f7b8:	48 3b 85 58 fe ff ff 	cmp    -0x1a8(%rbp),%rax
  41f7bf:	72 28                	jb     41f7e9 <mbedtls_mpi_div_mpi+0xaf9>
  41f7c1:	48 83 bd 50 fe ff ff 	cmpq   $0x0,-0x1b0(%rbp)
  41f7c8:	00 
  41f7c9:	74 0e                	je     41f7d9 <mbedtls_mpi_div_mpi+0xae9>
  41f7cb:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
  41f7d2:	48 c7 00 ff ff ff ff 	movq   $0xffffffffffffffff,(%rax)
  41f7d9:	48 c7 85 70 fe ff ff 	movq   $0xffffffffffffffff,-0x190(%rbp)
  41f7e0:	ff ff ff ff 
  41f7e4:	e9 c1 00 00 00       	jmpq   41f8aa <mbedtls_mpi_div_mpi+0xbba>
  41f7e9:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
  41f7f0:	48 89 85 48 fe ff ff 	mov    %rax,-0x1b8(%rbp)
  41f7f7:	48 c7 85 40 fe ff ff 	movq   $0x0,-0x1c0(%rbp)
  41f7fe:	00 00 00 00 
  41f802:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
  41f809:	48 8b 8d 40 fe ff ff 	mov    -0x1c0(%rbp),%rcx
  41f810:	48 09 c1             	or     %rax,%rcx
  41f813:	48 89 8d 40 fe ff ff 	mov    %rcx,-0x1c0(%rbp)
  41f81a:	48 8b bd 40 fe ff ff 	mov    -0x1c0(%rbp),%rdi
  41f821:	48 8b b5 48 fe ff ff 	mov    -0x1b8(%rbp),%rsi
  41f828:	48 8b 95 58 fe ff ff 	mov    -0x1a8(%rbp),%rdx
  41f82f:	45 31 c0             	xor    %r8d,%r8d
  41f832:	44 89 c1             	mov    %r8d,%ecx
  41f835:	e8 d6 19 fe ff       	callq  401210 <__udivti3@plt>
  41f83a:	48 89 95 38 fe ff ff 	mov    %rdx,-0x1c8(%rbp)
  41f841:	48 89 85 30 fe ff ff 	mov    %rax,-0x1d0(%rbp)
  41f848:	48 8b 85 38 fe ff ff 	mov    -0x1c8(%rbp),%rax
  41f84f:	48 85 c0             	test   %rax,%rax
  41f852:	74 18                	je     41f86c <mbedtls_mpi_div_mpi+0xb7c>
  41f854:	eb 00                	jmp    41f856 <mbedtls_mpi_div_mpi+0xb66>
  41f856:	48 c7 85 38 fe ff ff 	movq   $0x0,-0x1c8(%rbp)
  41f85d:	00 00 00 00 
  41f861:	48 c7 85 30 fe ff ff 	movq   $0xffffffffffffffff,-0x1d0(%rbp)
  41f868:	ff ff ff ff 
  41f86c:	48 83 bd 50 fe ff ff 	cmpq   $0x0,-0x1b0(%rbp)
  41f873:	00 
  41f874:	74 26                	je     41f89c <mbedtls_mpi_div_mpi+0xbac>
  41f876:	48 8b 85 40 fe ff ff 	mov    -0x1c0(%rbp),%rax
  41f87d:	48 8b 8d 30 fe ff ff 	mov    -0x1d0(%rbp),%rcx
  41f884:	48 8b 95 58 fe ff ff 	mov    -0x1a8(%rbp),%rdx
  41f88b:	48 0f af ca          	imul   %rdx,%rcx
  41f88f:	48 29 c8             	sub    %rcx,%rax
  41f892:	48 8b 8d 50 fe ff ff 	mov    -0x1b0(%rbp),%rcx
  41f899:	48 89 01             	mov    %rax,(%rcx)
  41f89c:	48 8b 85 30 fe ff ff 	mov    -0x1d0(%rbp),%rax
  41f8a3:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
  41f8aa:	48 8b b5 70 fe ff ff 	mov    -0x190(%rbp),%rsi
  41f8b1:	48 8d 85 20 fc ff ff 	lea    -0x3e0(%rbp),%rax
  41f8b8:	48 83 c0 10          	add    $0x10,%rax
  41f8bc:	48 89 c7             	mov    %rax,%rdi
  41f8bf:	48 89 b5 68 fa ff ff 	mov    %rsi,-0x598(%rbp)
  41f8c6:	e8 7d 68 02 00       	callq  446148 <getDecryptedValueQWord>
  41f8cb:	48 8b b5 c8 fc ff ff 	mov    -0x338(%rbp),%rsi
  41f8d2:	48 2b b5 b8 fc ff ff 	sub    -0x348(%rbp),%rsi
  41f8d9:	48 83 ee 01          	sub    $0x1,%rsi
  41f8dd:	48 c1 e6 03          	shl    $0x3,%rsi
  41f8e1:	48 01 f0             	add    %rsi,%rax
  41f8e4:	48 89 c7             	mov    %rax,%rdi
  41f8e7:	48 8b b5 68 fa ff ff 	mov    -0x598(%rbp),%rsi
  41f8ee:	e8 09 64 02 00       	callq  445cfc <setEncryptedValueQWord>
  41f8f3:	48 89 85 60 fa ff ff 	mov    %rax,-0x5a0(%rbp)
  41f8fa:	48 8d 85 20 fc ff ff 	lea    -0x3e0(%rbp),%rax
  41f901:	48 83 c0 10          	add    $0x10,%rax
  41f905:	48 89 c7             	mov    %rax,%rdi
  41f908:	e8 3b 68 02 00       	callq  446148 <getDecryptedValueQWord>
  41f90d:	48 8b bd c8 fc ff ff 	mov    -0x338(%rbp),%rdi
  41f914:	48 2b bd b8 fc ff ff 	sub    -0x348(%rbp),%rdi
  41f91b:	48 83 ef 01          	sub    $0x1,%rdi
  41f91f:	48 c1 e7 03          	shl    $0x3,%rdi
  41f923:	48 01 f8             	add    %rdi,%rax
  41f926:	48 89 c7             	mov    %rax,%rdi
  41f929:	48 89 85 58 fa ff ff 	mov    %rax,-0x5a8(%rbp)
  41f930:	e8 13 68 02 00       	callq  446148 <getDecryptedValueQWord>
  41f935:	48 83 c0 01          	add    $0x1,%rax
  41f939:	48 8b bd 58 fa ff ff 	mov    -0x5a8(%rbp),%rdi
  41f940:	48 89 c6             	mov    %rax,%rsi
  41f943:	e8 b4 63 02 00       	callq  445cfc <setEncryptedValueQWord>
  41f948:	48 89 85 50 fa ff ff 	mov    %rax,-0x5b0(%rbp)
  41f94f:	48 8d 85 20 fc ff ff 	lea    -0x3e0(%rbp),%rax
  41f956:	48 83 c0 10          	add    $0x10,%rax
  41f95a:	48 89 c7             	mov    %rax,%rdi
  41f95d:	e8 e6 67 02 00       	callq  446148 <getDecryptedValueQWord>
  41f962:	48 8b bd c8 fc ff ff 	mov    -0x338(%rbp),%rdi
  41f969:	48 2b bd b8 fc ff ff 	sub    -0x348(%rbp),%rdi
  41f970:	48 83 ef 01          	sub    $0x1,%rdi
  41f974:	48 c1 e7 03          	shl    $0x3,%rdi
  41f978:	48 01 f8             	add    %rdi,%rax
  41f97b:	48 89 c7             	mov    %rax,%rdi
  41f97e:	48 89 85 48 fa ff ff 	mov    %rax,-0x5b8(%rbp)
  41f985:	e8 be 67 02 00       	callq  446148 <getDecryptedValueQWord>
  41f98a:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
  41f98e:	48 8b bd 48 fa ff ff 	mov    -0x5b8(%rbp),%rdi
  41f995:	48 89 c6             	mov    %rax,%rsi
  41f998:	e8 5f 63 02 00       	callq  445cfc <setEncryptedValueQWord>
  41f99d:	48 89 85 40 fa ff ff 	mov    %rax,-0x5c0(%rbp)
  41f9a4:	b8 01 00 00 00       	mov    $0x1,%eax
  41f9a9:	89 c6                	mov    %eax,%esi
  41f9ab:	48 8d 8d f0 fb ff ff 	lea    -0x410(%rbp),%rcx
  41f9b2:	48 89 8d 88 fe ff ff 	mov    %rcx,-0x178(%rbp)
  41f9b9:	48 c7 85 80 fe ff ff 	movq   $0x0,-0x180(%rbp)
  41f9c0:	00 00 00 00 
  41f9c4:	48 8b bd 88 fe ff ff 	mov    -0x178(%rbp),%rdi
  41f9cb:	e8 70 b1 ff ff       	callq  41ab40 <mbedtls_mpi_grow>
  41f9d0:	89 85 7c fe ff ff    	mov    %eax,-0x184(%rbp)
  41f9d6:	83 f8 00             	cmp    $0x0,%eax
  41f9d9:	74 05                	je     41f9e0 <mbedtls_mpi_div_mpi+0xcf0>
  41f9db:	e9 0b 01 00 00       	jmpq   41faeb <mbedtls_mpi_div_mpi+0xdfb>
  41f9e0:	48 8b 85 88 fe ff ff 	mov    -0x178(%rbp),%rax
  41f9e7:	48 83 c0 10          	add    $0x10,%rax
  41f9eb:	48 89 c7             	mov    %rax,%rdi
  41f9ee:	e8 55 67 02 00       	callq  446148 <getDecryptedValueQWord>
  41f9f3:	48 8b bd 88 fe ff ff 	mov    -0x178(%rbp),%rdi
  41f9fa:	48 83 c7 08          	add    $0x8,%rdi
  41f9fe:	48 89 85 38 fa ff ff 	mov    %rax,-0x5c8(%rbp)
  41fa05:	e8 3e 67 02 00       	callq  446148 <getDecryptedValueQWord>
  41fa0a:	48 c1 e0 03          	shl    $0x3,%rax
  41fa0e:	48 89 85 30 fa ff ff 	mov    %rax,-0x5d0(%rbp)
  41fa15:	e8 3c 5f 02 00       	callq  445956 <writeback_cache>
  41fa1a:	48 8b bd 38 fa ff ff 	mov    -0x5c8(%rbp),%rdi
  41fa21:	48 8b b5 30 fa ff ff 	mov    -0x5d0(%rbp),%rsi
  41fa28:	e8 b8 6c 02 00       	callq  4466e5 <decryptArrayForLibCall>
  41fa2d:	31 f6                	xor    %esi,%esi
  41fa2f:	48 8b bd 38 fa ff ff 	mov    -0x5c8(%rbp),%rdi
  41fa36:	48 8b 95 30 fa ff ff 	mov    -0x5d0(%rbp),%rdx
  41fa3d:	e8 de 15 fe ff       	callq  401020 <memset@plt>
  41fa42:	48 8b bd 38 fa ff ff 	mov    -0x5c8(%rbp),%rdi
  41fa49:	48 8b b5 30 fa ff ff 	mov    -0x5d0(%rbp),%rsi
  41fa50:	e8 01 6a 02 00       	callq  446456 <encryptArrayForLibCall>
  41fa55:	48 83 bd 80 fe ff ff 	cmpq   $0x0,-0x180(%rbp)
  41fa5c:	00 
  41fa5d:	7d 14                	jge    41fa73 <mbedtls_mpi_div_mpi+0xd83>
  41fa5f:	31 c0                	xor    %eax,%eax
  41fa61:	89 c1                	mov    %eax,%ecx
  41fa63:	48 2b 8d 80 fe ff ff 	sub    -0x180(%rbp),%rcx
  41fa6a:	48 89 8d 28 fa ff ff 	mov    %rcx,-0x5d8(%rbp)
  41fa71:	eb 0e                	jmp    41fa81 <mbedtls_mpi_div_mpi+0xd91>
  41fa73:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
  41fa7a:	48 89 85 28 fa ff ff 	mov    %rax,-0x5d8(%rbp)
  41fa81:	48 8b 85 28 fa ff ff 	mov    -0x5d8(%rbp),%rax
  41fa88:	48 8b 8d 88 fe ff ff 	mov    -0x178(%rbp),%rcx
  41fa8f:	48 83 c1 10          	add    $0x10,%rcx
  41fa93:	48 89 cf             	mov    %rcx,%rdi
  41fa96:	48 89 85 20 fa ff ff 	mov    %rax,-0x5e0(%rbp)
  41fa9d:	e8 a6 66 02 00       	callq  446148 <getDecryptedValueQWord>
  41faa2:	48 89 c7             	mov    %rax,%rdi
  41faa5:	48 8b b5 20 fa ff ff 	mov    -0x5e0(%rbp),%rsi
  41faac:	e8 4b 62 02 00       	callq  445cfc <setEncryptedValueQWord>
  41fab1:	48 8b 8d 80 fe ff ff 	mov    -0x180(%rbp),%rcx
  41fab8:	48 83 f9 00          	cmp    $0x0,%rcx
  41fabc:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  41fac1:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  41fac7:	44 0f 4c c2          	cmovl  %edx,%r8d
  41facb:	48 8b 8d 88 fe ff ff 	mov    -0x178(%rbp),%rcx
  41fad2:	48 89 cf             	mov    %rcx,%rdi
  41fad5:	44 89 c6             	mov    %r8d,%esi
  41fad8:	48 89 85 18 fa ff ff 	mov    %rax,-0x5e8(%rbp)
  41fadf:	e8 1a 61 02 00       	callq  445bfe <setEncryptedValueDWord>
  41fae4:	48 89 85 10 fa ff ff 	mov    %rax,-0x5f0(%rbp)
  41faeb:	8b 85 7c fe ff ff    	mov    -0x184(%rbp),%eax
  41faf1:	89 85 d4 fc ff ff    	mov    %eax,-0x32c(%rbp)
  41faf7:	83 f8 00             	cmp    $0x0,%eax
  41fafa:	74 05                	je     41fb01 <mbedtls_mpi_div_mpi+0xe11>
  41fafc:	e9 87 0a 00 00       	jmpq   420588 <mbedtls_mpi_div_mpi+0x1898>
  41fb01:	eb 00                	jmp    41fb03 <mbedtls_mpi_div_mpi+0xe13>
  41fb03:	48 83 bd b8 fc ff ff 	cmpq   $0x1,-0x348(%rbp)
  41fb0a:	01 
  41fb0b:	73 0d                	jae    41fb1a <mbedtls_mpi_div_mpi+0xe2a>
  41fb0d:	31 c0                	xor    %eax,%eax
  41fb0f:	89 c1                	mov    %eax,%ecx
  41fb11:	48 89 8d 08 fa ff ff 	mov    %rcx,-0x5f8(%rbp)
  41fb18:	eb 34                	jmp    41fb4e <mbedtls_mpi_div_mpi+0xe5e>
  41fb1a:	48 8d 85 50 fc ff ff 	lea    -0x3b0(%rbp),%rax
  41fb21:	48 83 c0 10          	add    $0x10,%rax
  41fb25:	48 89 c7             	mov    %rax,%rdi
  41fb28:	e8 1b 66 02 00       	callq  446148 <getDecryptedValueQWord>
  41fb2d:	48 8b bd b8 fc ff ff 	mov    -0x348(%rbp),%rdi
  41fb34:	48 83 ef 01          	sub    $0x1,%rdi
  41fb38:	48 c1 e7 03          	shl    $0x3,%rdi
  41fb3c:	48 01 f8             	add    %rdi,%rax
  41fb3f:	48 89 c7             	mov    %rax,%rdi
  41fb42:	e8 01 66 02 00       	callq  446148 <getDecryptedValueQWord>
  41fb47:	48 89 85 08 fa ff ff 	mov    %rax,-0x5f8(%rbp)
  41fb4e:	48 8b 85 08 fa ff ff 	mov    -0x5f8(%rbp),%rax
  41fb55:	48 8d 8d f0 fb ff ff 	lea    -0x410(%rbp),%rcx
  41fb5c:	48 83 c1 10          	add    $0x10,%rcx
  41fb60:	48 89 cf             	mov    %rcx,%rdi
  41fb63:	48 89 85 00 fa ff ff 	mov    %rax,-0x600(%rbp)
  41fb6a:	e8 d9 65 02 00       	callq  446148 <getDecryptedValueQWord>
  41fb6f:	48 89 c7             	mov    %rax,%rdi
  41fb72:	48 8b b5 00 fa ff ff 	mov    -0x600(%rbp),%rsi
  41fb79:	e8 7e 61 02 00       	callq  445cfc <setEncryptedValueQWord>
  41fb7e:	48 8d 8d 50 fc ff ff 	lea    -0x3b0(%rbp),%rcx
  41fb85:	48 83 c1 10          	add    $0x10,%rcx
  41fb89:	48 89 cf             	mov    %rcx,%rdi
  41fb8c:	48 89 85 f8 f9 ff ff 	mov    %rax,-0x608(%rbp)
  41fb93:	e8 b0 65 02 00       	callq  446148 <getDecryptedValueQWord>
  41fb98:	48 8b 8d b8 fc ff ff 	mov    -0x348(%rbp),%rcx
  41fb9f:	48 c1 e1 03          	shl    $0x3,%rcx
  41fba3:	48 01 c8             	add    %rcx,%rax
  41fba6:	48 89 c7             	mov    %rax,%rdi
  41fba9:	e8 9a 65 02 00       	callq  446148 <getDecryptedValueQWord>
  41fbae:	48 8d 8d f0 fb ff ff 	lea    -0x410(%rbp),%rcx
  41fbb5:	48 83 c1 10          	add    $0x10,%rcx
  41fbb9:	48 89 cf             	mov    %rcx,%rdi
  41fbbc:	48 89 85 f0 f9 ff ff 	mov    %rax,-0x610(%rbp)
  41fbc3:	e8 80 65 02 00       	callq  446148 <getDecryptedValueQWord>
  41fbc8:	48 83 c0 08          	add    $0x8,%rax
  41fbcc:	48 89 c7             	mov    %rax,%rdi
  41fbcf:	48 8b b5 f0 f9 ff ff 	mov    -0x610(%rbp),%rsi
  41fbd6:	e8 21 61 02 00       	callq  445cfc <setEncryptedValueQWord>
  41fbdb:	48 89 85 e8 f9 ff ff 	mov    %rax,-0x618(%rbp)
  41fbe2:	48 8d 85 20 fc ff ff 	lea    -0x3e0(%rbp),%rax
  41fbe9:	48 83 c0 10          	add    $0x10,%rax
  41fbed:	48 89 c7             	mov    %rax,%rdi
  41fbf0:	e8 53 65 02 00       	callq  446148 <getDecryptedValueQWord>
  41fbf5:	48 8b bd c8 fc ff ff 	mov    -0x338(%rbp),%rdi
  41fbfc:	48 2b bd b8 fc ff ff 	sub    -0x348(%rbp),%rdi
  41fc03:	48 83 ef 01          	sub    $0x1,%rdi
  41fc07:	48 c1 e7 03          	shl    $0x3,%rdi
  41fc0b:	48 01 f8             	add    %rdi,%rax
  41fc0e:	48 89 c7             	mov    %rax,%rdi
  41fc11:	e8 32 65 02 00       	callq  446148 <getDecryptedValueQWord>
  41fc16:	48 89 85 e0 f9 ff ff 	mov    %rax,-0x620(%rbp)
  41fc1d:	e8 34 5d 02 00       	callq  445956 <writeback_cache>
  41fc22:	48 8d 85 90 fe ff ff 	lea    -0x170(%rbp),%rax
  41fc29:	48 8d bd f0 fb ff ff 	lea    -0x410(%rbp),%rdi
  41fc30:	48 89 bd d0 fe ff ff 	mov    %rdi,-0x130(%rbp)
  41fc37:	48 89 bd c8 fe ff ff 	mov    %rdi,-0x138(%rbp)
  41fc3e:	48 8b bd e0 f9 ff ff 	mov    -0x620(%rbp),%rdi
  41fc45:	48 89 bd c0 fe ff ff 	mov    %rdi,-0x140(%rbp)
  41fc4c:	48 89 c7             	mov    %rax,%rdi
  41fc4f:	be 01 00 00 00       	mov    $0x1,%esi
  41fc54:	e8 a5 5f 02 00       	callq  445bfe <setEncryptedValueDWord>
  41fc59:	be 01 00 00 00       	mov    $0x1,%esi
  41fc5e:	48 8d bd 90 fe ff ff 	lea    -0x170(%rbp),%rdi
  41fc65:	48 83 c7 08          	add    $0x8,%rdi
  41fc69:	48 89 85 d8 f9 ff ff 	mov    %rax,-0x628(%rbp)
  41fc70:	e8 87 60 02 00       	callq  445cfc <setEncryptedValueQWord>
  41fc75:	48 8d b5 00 fd ff ff 	lea    -0x300(%rbp),%rsi
  41fc7c:	48 8d bd 90 fe ff ff 	lea    -0x170(%rbp),%rdi
  41fc83:	48 83 c7 10          	add    $0x10,%rdi
  41fc87:	48 89 85 d0 f9 ff ff 	mov    %rax,-0x630(%rbp)
  41fc8e:	e8 69 60 02 00       	callq  445cfc <setEncryptedValueQWord>
  41fc93:	48 8d b5 00 fd ff ff 	lea    -0x300(%rbp),%rsi
  41fc9a:	48 8b bd c0 fe ff ff 	mov    -0x140(%rbp),%rdi
  41fca1:	48 89 bd c8 f9 ff ff 	mov    %rdi,-0x638(%rbp)
  41fca8:	48 89 f7             	mov    %rsi,%rdi
  41fcab:	48 8b b5 c8 f9 ff ff 	mov    -0x638(%rbp),%rsi
  41fcb2:	48 89 85 c0 f9 ff ff 	mov    %rax,-0x640(%rbp)
  41fcb9:	e8 3e 60 02 00       	callq  445cfc <setEncryptedValueQWord>
  41fcbe:	48 8b bd d0 fe ff ff 	mov    -0x130(%rbp),%rdi
  41fcc5:	48 8b b5 c8 fe ff ff 	mov    -0x138(%rbp),%rsi
  41fccc:	48 8d 95 90 fe ff ff 	lea    -0x170(%rbp),%rdx
  41fcd3:	48 89 85 b8 f9 ff ff 	mov    %rax,-0x648(%rbp)
  41fcda:	e8 e1 c8 ff ff       	callq  41c5c0 <mbedtls_mpi_mul_mpi>
  41fcdf:	89 85 b4 f9 ff ff    	mov    %eax,-0x64c(%rbp)
  41fce5:	e8 6c 5c 02 00       	callq  445956 <writeback_cache>
  41fcea:	8b 85 b4 f9 ff ff    	mov    -0x64c(%rbp),%eax
  41fcf0:	89 85 d4 fc ff ff    	mov    %eax,-0x32c(%rbp)
  41fcf6:	83 f8 00             	cmp    $0x0,%eax
  41fcf9:	74 05                	je     41fd00 <mbedtls_mpi_div_mpi+0x1010>
  41fcfb:	e9 88 08 00 00       	jmpq   420588 <mbedtls_mpi_div_mpi+0x1898>
  41fd00:	eb 00                	jmp    41fd02 <mbedtls_mpi_div_mpi+0x1012>
  41fd02:	eb 00                	jmp    41fd04 <mbedtls_mpi_div_mpi+0x1014>
  41fd04:	b8 01 00 00 00       	mov    $0x1,%eax
  41fd09:	89 c6                	mov    %eax,%esi
  41fd0b:	48 8d 8d c0 fb ff ff 	lea    -0x440(%rbp),%rcx
  41fd12:	48 89 8d e8 fe ff ff 	mov    %rcx,-0x118(%rbp)
  41fd19:	48 c7 85 e0 fe ff ff 	movq   $0x0,-0x120(%rbp)
  41fd20:	00 00 00 00 
  41fd24:	48 8b bd e8 fe ff ff 	mov    -0x118(%rbp),%rdi
  41fd2b:	e8 10 ae ff ff       	callq  41ab40 <mbedtls_mpi_grow>
  41fd30:	89 85 dc fe ff ff    	mov    %eax,-0x124(%rbp)
  41fd36:	83 f8 00             	cmp    $0x0,%eax
  41fd39:	74 05                	je     41fd40 <mbedtls_mpi_div_mpi+0x1050>
  41fd3b:	e9 0b 01 00 00       	jmpq   41fe4b <mbedtls_mpi_div_mpi+0x115b>
  41fd40:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
  41fd47:	48 83 c0 10          	add    $0x10,%rax
  41fd4b:	48 89 c7             	mov    %rax,%rdi
  41fd4e:	e8 f5 63 02 00       	callq  446148 <getDecryptedValueQWord>
  41fd53:	48 8b bd e8 fe ff ff 	mov    -0x118(%rbp),%rdi
  41fd5a:	48 83 c7 08          	add    $0x8,%rdi
  41fd5e:	48 89 85 a8 f9 ff ff 	mov    %rax,-0x658(%rbp)
  41fd65:	e8 de 63 02 00       	callq  446148 <getDecryptedValueQWord>
  41fd6a:	48 c1 e0 03          	shl    $0x3,%rax
  41fd6e:	48 89 85 a0 f9 ff ff 	mov    %rax,-0x660(%rbp)
  41fd75:	e8 dc 5b 02 00       	callq  445956 <writeback_cache>
  41fd7a:	48 8b bd a8 f9 ff ff 	mov    -0x658(%rbp),%rdi
  41fd81:	48 8b b5 a0 f9 ff ff 	mov    -0x660(%rbp),%rsi
  41fd88:	e8 58 69 02 00       	callq  4466e5 <decryptArrayForLibCall>
  41fd8d:	31 f6                	xor    %esi,%esi
  41fd8f:	48 8b bd a8 f9 ff ff 	mov    -0x658(%rbp),%rdi
  41fd96:	48 8b 95 a0 f9 ff ff 	mov    -0x660(%rbp),%rdx
  41fd9d:	e8 7e 12 fe ff       	callq  401020 <memset@plt>
  41fda2:	48 8b bd a8 f9 ff ff 	mov    -0x658(%rbp),%rdi
  41fda9:	48 8b b5 a0 f9 ff ff 	mov    -0x660(%rbp),%rsi
  41fdb0:	e8 a1 66 02 00       	callq  446456 <encryptArrayForLibCall>
  41fdb5:	48 83 bd e0 fe ff ff 	cmpq   $0x0,-0x120(%rbp)
  41fdbc:	00 
  41fdbd:	7d 14                	jge    41fdd3 <mbedtls_mpi_div_mpi+0x10e3>
  41fdbf:	31 c0                	xor    %eax,%eax
  41fdc1:	89 c1                	mov    %eax,%ecx
  41fdc3:	48 2b 8d e0 fe ff ff 	sub    -0x120(%rbp),%rcx
  41fdca:	48 89 8d 98 f9 ff ff 	mov    %rcx,-0x668(%rbp)
  41fdd1:	eb 0e                	jmp    41fde1 <mbedtls_mpi_div_mpi+0x10f1>
  41fdd3:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
  41fdda:	48 89 85 98 f9 ff ff 	mov    %rax,-0x668(%rbp)
  41fde1:	48 8b 85 98 f9 ff ff 	mov    -0x668(%rbp),%rax
  41fde8:	48 8b 8d e8 fe ff ff 	mov    -0x118(%rbp),%rcx
  41fdef:	48 83 c1 10          	add    $0x10,%rcx
  41fdf3:	48 89 cf             	mov    %rcx,%rdi
  41fdf6:	48 89 85 90 f9 ff ff 	mov    %rax,-0x670(%rbp)
  41fdfd:	e8 46 63 02 00       	callq  446148 <getDecryptedValueQWord>
  41fe02:	48 89 c7             	mov    %rax,%rdi
  41fe05:	48 8b b5 90 f9 ff ff 	mov    -0x670(%rbp),%rsi
  41fe0c:	e8 eb 5e 02 00       	callq  445cfc <setEncryptedValueQWord>
  41fe11:	48 8b 8d e0 fe ff ff 	mov    -0x120(%rbp),%rcx
  41fe18:	48 83 f9 00          	cmp    $0x0,%rcx
  41fe1c:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  41fe21:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  41fe27:	44 0f 4c c2          	cmovl  %edx,%r8d
  41fe2b:	48 8b 8d e8 fe ff ff 	mov    -0x118(%rbp),%rcx
  41fe32:	48 89 cf             	mov    %rcx,%rdi
  41fe35:	44 89 c6             	mov    %r8d,%esi
  41fe38:	48 89 85 88 f9 ff ff 	mov    %rax,-0x678(%rbp)
  41fe3f:	e8 ba 5d 02 00       	callq  445bfe <setEncryptedValueDWord>
  41fe44:	48 89 85 80 f9 ff ff 	mov    %rax,-0x680(%rbp)
  41fe4b:	8b 85 dc fe ff ff    	mov    -0x124(%rbp),%eax
  41fe51:	89 85 d4 fc ff ff    	mov    %eax,-0x32c(%rbp)
  41fe57:	83 f8 00             	cmp    $0x0,%eax
  41fe5a:	74 05                	je     41fe61 <mbedtls_mpi_div_mpi+0x1171>
  41fe5c:	e9 27 07 00 00       	jmpq   420588 <mbedtls_mpi_div_mpi+0x1898>
  41fe61:	eb 00                	jmp    41fe63 <mbedtls_mpi_div_mpi+0x1173>
  41fe63:	48 83 bd c8 fc ff ff 	cmpq   $0x2,-0x338(%rbp)
  41fe6a:	02 
  41fe6b:	73 0d                	jae    41fe7a <mbedtls_mpi_div_mpi+0x118a>
  41fe6d:	31 c0                	xor    %eax,%eax
  41fe6f:	89 c1                	mov    %eax,%ecx
  41fe71:	48 89 8d 78 f9 ff ff 	mov    %rcx,-0x688(%rbp)
  41fe78:	eb 34                	jmp    41feae <mbedtls_mpi_div_mpi+0x11be>
  41fe7a:	48 8d 85 80 fc ff ff 	lea    -0x380(%rbp),%rax
  41fe81:	48 83 c0 10          	add    $0x10,%rax
  41fe85:	48 89 c7             	mov    %rax,%rdi
  41fe88:	e8 bb 62 02 00       	callq  446148 <getDecryptedValueQWord>
  41fe8d:	48 8b bd c8 fc ff ff 	mov    -0x338(%rbp),%rdi
  41fe94:	48 83 ef 02          	sub    $0x2,%rdi
  41fe98:	48 c1 e7 03          	shl    $0x3,%rdi
  41fe9c:	48 01 f8             	add    %rdi,%rax
  41fe9f:	48 89 c7             	mov    %rax,%rdi
  41fea2:	e8 a1 62 02 00       	callq  446148 <getDecryptedValueQWord>
  41fea7:	48 89 85 78 f9 ff ff 	mov    %rax,-0x688(%rbp)
  41feae:	48 8b 85 78 f9 ff ff 	mov    -0x688(%rbp),%rax
  41feb5:	48 8d 8d c0 fb ff ff 	lea    -0x440(%rbp),%rcx
  41febc:	48 83 c1 10          	add    $0x10,%rcx
  41fec0:	48 89 cf             	mov    %rcx,%rdi
  41fec3:	48 89 85 70 f9 ff ff 	mov    %rax,-0x690(%rbp)
  41feca:	e8 79 62 02 00       	callq  446148 <getDecryptedValueQWord>
  41fecf:	48 89 c7             	mov    %rax,%rdi
  41fed2:	48 8b b5 70 f9 ff ff 	mov    -0x690(%rbp),%rsi
  41fed9:	e8 1e 5e 02 00       	callq  445cfc <setEncryptedValueQWord>
  41fede:	48 83 bd c8 fc ff ff 	cmpq   $0x1,-0x338(%rbp)
  41fee5:	01 
  41fee6:	48 89 85 68 f9 ff ff 	mov    %rax,-0x698(%rbp)
  41feed:	73 0d                	jae    41fefc <mbedtls_mpi_div_mpi+0x120c>
  41feef:	31 c0                	xor    %eax,%eax
  41fef1:	89 c1                	mov    %eax,%ecx
  41fef3:	48 89 8d 60 f9 ff ff 	mov    %rcx,-0x6a0(%rbp)
  41fefa:	eb 34                	jmp    41ff30 <mbedtls_mpi_div_mpi+0x1240>
  41fefc:	48 8d 85 80 fc ff ff 	lea    -0x380(%rbp),%rax
  41ff03:	48 83 c0 10          	add    $0x10,%rax
  41ff07:	48 89 c7             	mov    %rax,%rdi
  41ff0a:	e8 39 62 02 00       	callq  446148 <getDecryptedValueQWord>
  41ff0f:	48 8b bd c8 fc ff ff 	mov    -0x338(%rbp),%rdi
  41ff16:	48 83 ef 01          	sub    $0x1,%rdi
  41ff1a:	48 c1 e7 03          	shl    $0x3,%rdi
  41ff1e:	48 01 f8             	add    %rdi,%rax
  41ff21:	48 89 c7             	mov    %rax,%rdi
  41ff24:	e8 1f 62 02 00       	callq  446148 <getDecryptedValueQWord>
  41ff29:	48 89 85 60 f9 ff ff 	mov    %rax,-0x6a0(%rbp)
  41ff30:	48 8b 85 60 f9 ff ff 	mov    -0x6a0(%rbp),%rax
  41ff37:	48 8d 8d c0 fb ff ff 	lea    -0x440(%rbp),%rcx
  41ff3e:	48 83 c1 10          	add    $0x10,%rcx
  41ff42:	48 89 cf             	mov    %rcx,%rdi
  41ff45:	48 89 85 58 f9 ff ff 	mov    %rax,-0x6a8(%rbp)
  41ff4c:	e8 f7 61 02 00       	callq  446148 <getDecryptedValueQWord>
  41ff51:	48 83 c0 08          	add    $0x8,%rax
  41ff55:	48 89 c7             	mov    %rax,%rdi
  41ff58:	48 8b b5 58 f9 ff ff 	mov    -0x6a8(%rbp),%rsi
  41ff5f:	e8 98 5d 02 00       	callq  445cfc <setEncryptedValueQWord>
  41ff64:	48 8d 8d 80 fc ff ff 	lea    -0x380(%rbp),%rcx
  41ff6b:	48 83 c1 10          	add    $0x10,%rcx
  41ff6f:	48 89 cf             	mov    %rcx,%rdi
  41ff72:	48 89 85 50 f9 ff ff 	mov    %rax,-0x6b0(%rbp)
  41ff79:	e8 ca 61 02 00       	callq  446148 <getDecryptedValueQWord>
  41ff7e:	48 8b 8d c8 fc ff ff 	mov    -0x338(%rbp),%rcx
  41ff85:	48 c1 e1 03          	shl    $0x3,%rcx
  41ff89:	48 01 c8             	add    %rcx,%rax
  41ff8c:	48 89 c7             	mov    %rax,%rdi
  41ff8f:	e8 b4 61 02 00       	callq  446148 <getDecryptedValueQWord>
  41ff94:	48 8d 8d c0 fb ff ff 	lea    -0x440(%rbp),%rcx
  41ff9b:	48 83 c1 10          	add    $0x10,%rcx
  41ff9f:	48 89 cf             	mov    %rcx,%rdi
  41ffa2:	48 89 85 48 f9 ff ff 	mov    %rax,-0x6b8(%rbp)
  41ffa9:	e8 9a 61 02 00       	callq  446148 <getDecryptedValueQWord>
  41ffae:	48 83 c0 10          	add    $0x10,%rax
  41ffb2:	48 89 c7             	mov    %rax,%rdi
  41ffb5:	48 8b b5 48 f9 ff ff 	mov    -0x6b8(%rbp),%rsi
  41ffbc:	e8 3b 5d 02 00       	callq  445cfc <setEncryptedValueQWord>
  41ffc1:	48 89 85 40 f9 ff ff 	mov    %rax,-0x6c0(%rbp)
  41ffc8:	48 8d bd f0 fb ff ff 	lea    -0x410(%rbp),%rdi
  41ffcf:	48 8d b5 c0 fb ff ff 	lea    -0x440(%rbp),%rsi
  41ffd6:	e8 75 ea ff ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  41ffdb:	83 f8 00             	cmp    $0x0,%eax
  41ffde:	0f 8f 6b f9 ff ff    	jg     41f94f <mbedtls_mpi_div_mpi+0xc5f>
  41ffe4:	eb 00                	jmp    41ffe6 <mbedtls_mpi_div_mpi+0x12f6>
  41ffe6:	48 8d 85 20 fc ff ff 	lea    -0x3e0(%rbp),%rax
  41ffed:	48 83 c0 10          	add    $0x10,%rax
  41fff1:	48 89 c7             	mov    %rax,%rdi
  41fff4:	e8 4f 61 02 00       	callq  446148 <getDecryptedValueQWord>
  41fff9:	48 8b bd c8 fc ff ff 	mov    -0x338(%rbp),%rdi
  420000:	48 2b bd b8 fc ff ff 	sub    -0x348(%rbp),%rdi
  420007:	48 83 ef 01          	sub    $0x1,%rdi
  42000b:	48 c1 e7 03          	shl    $0x3,%rdi
  42000f:	48 01 f8             	add    %rdi,%rax
  420012:	48 89 c7             	mov    %rax,%rdi
  420015:	e8 2e 61 02 00       	callq  446148 <getDecryptedValueQWord>
  42001a:	48 89 85 38 f9 ff ff 	mov    %rax,-0x6c8(%rbp)
  420021:	e8 30 59 02 00       	callq  445956 <writeback_cache>
  420026:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
  42002d:	48 8d bd f0 fb ff ff 	lea    -0x410(%rbp),%rdi
  420034:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
  42003b:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  420042:	48 89 bd 20 ff ff ff 	mov    %rdi,-0xe0(%rbp)
  420049:	48 8b bd 38 f9 ff ff 	mov    -0x6c8(%rbp),%rdi
  420050:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
  420057:	48 89 c7             	mov    %rax,%rdi
  42005a:	be 01 00 00 00       	mov    $0x1,%esi
  42005f:	e8 9a 5b 02 00       	callq  445bfe <setEncryptedValueDWord>
  420064:	be 01 00 00 00       	mov    $0x1,%esi
  420069:	48 8d bd f0 fe ff ff 	lea    -0x110(%rbp),%rdi
  420070:	48 83 c7 08          	add    $0x8,%rdi
  420074:	48 89 85 30 f9 ff ff 	mov    %rax,-0x6d0(%rbp)
  42007b:	e8 7c 5c 02 00       	callq  445cfc <setEncryptedValueQWord>
  420080:	48 8d b5 00 fd ff ff 	lea    -0x300(%rbp),%rsi
  420087:	48 8d bd f0 fe ff ff 	lea    -0x110(%rbp),%rdi
  42008e:	48 83 c7 10          	add    $0x10,%rdi
  420092:	48 89 85 28 f9 ff ff 	mov    %rax,-0x6d8(%rbp)
  420099:	e8 5e 5c 02 00       	callq  445cfc <setEncryptedValueQWord>
  42009e:	48 8d b5 00 fd ff ff 	lea    -0x300(%rbp),%rsi
  4200a5:	48 8b bd 18 ff ff ff 	mov    -0xe8(%rbp),%rdi
  4200ac:	48 89 bd 20 f9 ff ff 	mov    %rdi,-0x6e0(%rbp)
  4200b3:	48 89 f7             	mov    %rsi,%rdi
  4200b6:	48 8b b5 20 f9 ff ff 	mov    -0x6e0(%rbp),%rsi
  4200bd:	48 89 85 18 f9 ff ff 	mov    %rax,-0x6e8(%rbp)
  4200c4:	e8 33 5c 02 00       	callq  445cfc <setEncryptedValueQWord>
  4200c9:	48 8b bd 28 ff ff ff 	mov    -0xd8(%rbp),%rdi
  4200d0:	48 8b b5 20 ff ff ff 	mov    -0xe0(%rbp),%rsi
  4200d7:	48 8d 95 f0 fe ff ff 	lea    -0x110(%rbp),%rdx
  4200de:	48 89 85 10 f9 ff ff 	mov    %rax,-0x6f0(%rbp)
  4200e5:	e8 d6 c4 ff ff       	callq  41c5c0 <mbedtls_mpi_mul_mpi>
  4200ea:	89 85 0c f9 ff ff    	mov    %eax,-0x6f4(%rbp)
  4200f0:	e8 61 58 02 00       	callq  445956 <writeback_cache>
  4200f5:	8b 85 0c f9 ff ff    	mov    -0x6f4(%rbp),%eax
  4200fb:	89 85 d4 fc ff ff    	mov    %eax,-0x32c(%rbp)
  420101:	83 f8 00             	cmp    $0x0,%eax
  420104:	74 05                	je     42010b <mbedtls_mpi_div_mpi+0x141b>
  420106:	e9 7d 04 00 00       	jmpq   420588 <mbedtls_mpi_div_mpi+0x1898>
  42010b:	eb 00                	jmp    42010d <mbedtls_mpi_div_mpi+0x141d>
  42010d:	eb 00                	jmp    42010f <mbedtls_mpi_div_mpi+0x141f>
  42010f:	48 8b 85 c8 fc ff ff 	mov    -0x338(%rbp),%rax
  420116:	48 2b 85 b8 fc ff ff 	sub    -0x348(%rbp),%rax
  42011d:	48 83 e8 01          	sub    $0x1,%rax
  420121:	48 c1 e0 06          	shl    $0x6,%rax
  420125:	48 8d bd f0 fb ff ff 	lea    -0x410(%rbp),%rdi
  42012c:	48 89 c6             	mov    %rax,%rsi
  42012f:	e8 cc 0b 00 00       	callq  420d00 <mbedtls_mpi_shift_l>
  420134:	89 85 d4 fc ff ff    	mov    %eax,-0x32c(%rbp)
  42013a:	83 f8 00             	cmp    $0x0,%eax
  42013d:	74 05                	je     420144 <mbedtls_mpi_div_mpi+0x1454>
  42013f:	e9 44 04 00 00       	jmpq   420588 <mbedtls_mpi_div_mpi+0x1898>
  420144:	eb 00                	jmp    420146 <mbedtls_mpi_div_mpi+0x1456>
  420146:	eb 00                	jmp    420148 <mbedtls_mpi_div_mpi+0x1458>
  420148:	48 8d 85 80 fc ff ff 	lea    -0x380(%rbp),%rax
  42014f:	48 89 c7             	mov    %rax,%rdi
  420152:	48 89 c6             	mov    %rax,%rsi
  420155:	48 8d 95 f0 fb ff ff 	lea    -0x410(%rbp),%rdx
  42015c:	e8 cf b7 ff ff       	callq  41b930 <mbedtls_mpi_sub_mpi>
  420161:	89 85 d4 fc ff ff    	mov    %eax,-0x32c(%rbp)
  420167:	83 f8 00             	cmp    $0x0,%eax
  42016a:	74 05                	je     420171 <mbedtls_mpi_div_mpi+0x1481>
  42016c:	e9 17 04 00 00       	jmpq   420588 <mbedtls_mpi_div_mpi+0x1898>
  420171:	eb 00                	jmp    420173 <mbedtls_mpi_div_mpi+0x1483>
  420173:	e8 de 57 02 00       	callq  445956 <writeback_cache>
  420178:	48 8d 85 80 fc ff ff 	lea    -0x380(%rbp),%rax
  42017f:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
  420186:	48 c7 85 60 ff ff ff 	movq   $0x0,-0xa0(%rbp)
  42018d:	00 00 00 00 
  420191:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
  420198:	00 
  420199:	7d 14                	jge    4201af <mbedtls_mpi_div_mpi+0x14bf>
  42019b:	31 c0                	xor    %eax,%eax
  42019d:	89 c1                	mov    %eax,%ecx
  42019f:	48 2b 8d 60 ff ff ff 	sub    -0xa0(%rbp),%rcx
  4201a6:	48 89 8d 00 f9 ff ff 	mov    %rcx,-0x700(%rbp)
  4201ad:	eb 0e                	jmp    4201bd <mbedtls_mpi_div_mpi+0x14cd>
  4201af:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  4201b6:	48 89 85 00 f9 ff ff 	mov    %rax,-0x700(%rbp)
  4201bd:	48 8b 85 00 f9 ff ff 	mov    -0x700(%rbp),%rax
  4201c4:	48 8d 8d 00 fd ff ff 	lea    -0x300(%rbp),%rcx
  4201cb:	48 89 cf             	mov    %rcx,%rdi
  4201ce:	48 89 c6             	mov    %rax,%rsi
  4201d1:	e8 26 5b 02 00       	callq  445cfc <setEncryptedValueQWord>
  4201d6:	48 8d 8d 30 ff ff ff 	lea    -0xd0(%rbp),%rcx
  4201dd:	48 8b b5 60 ff ff ff 	mov    -0xa0(%rbp),%rsi
  4201e4:	48 83 fe 00          	cmp    $0x0,%rsi
  4201e8:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  4201ed:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  4201f3:	44 0f 4c c2          	cmovl  %edx,%r8d
  4201f7:	48 89 cf             	mov    %rcx,%rdi
  4201fa:	44 89 c6             	mov    %r8d,%esi
  4201fd:	48 89 85 f8 f8 ff ff 	mov    %rax,-0x708(%rbp)
  420204:	e8 f5 59 02 00       	callq  445bfe <setEncryptedValueDWord>
  420209:	ba 01 00 00 00       	mov    $0x1,%edx
  42020e:	89 d6                	mov    %edx,%esi
  420210:	48 8d 8d 30 ff ff ff 	lea    -0xd0(%rbp),%rcx
  420217:	48 83 c1 08          	add    $0x8,%rcx
  42021b:	48 89 cf             	mov    %rcx,%rdi
  42021e:	48 89 85 f0 f8 ff ff 	mov    %rax,-0x710(%rbp)
  420225:	e8 d2 5a 02 00       	callq  445cfc <setEncryptedValueQWord>
  42022a:	48 8d b5 00 fd ff ff 	lea    -0x300(%rbp),%rsi
  420231:	48 8d 8d 30 ff ff ff 	lea    -0xd0(%rbp),%rcx
  420238:	48 83 c1 10          	add    $0x10,%rcx
  42023c:	48 89 cf             	mov    %rcx,%rdi
  42023f:	48 89 85 e8 f8 ff ff 	mov    %rax,-0x718(%rbp)
  420246:	e8 b1 5a 02 00       	callq  445cfc <setEncryptedValueQWord>
  42024b:	48 8b bd 68 ff ff ff 	mov    -0x98(%rbp),%rdi
  420252:	48 8d b5 30 ff ff ff 	lea    -0xd0(%rbp),%rsi
  420259:	48 89 85 e0 f8 ff ff 	mov    %rax,-0x720(%rbp)
  420260:	e8 eb e7 ff ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  420265:	89 85 dc f8 ff ff    	mov    %eax,-0x724(%rbp)
  42026b:	e8 e6 56 02 00       	callq  445956 <writeback_cache>
  420270:	8b 85 dc f8 ff ff    	mov    -0x724(%rbp),%eax
  420276:	83 f8 00             	cmp    $0x0,%eax
  420279:	0f 8d e2 00 00 00    	jge    420361 <mbedtls_mpi_div_mpi+0x1671>
  42027f:	eb 00                	jmp    420281 <mbedtls_mpi_div_mpi+0x1591>
  420281:	48 8d bd f0 fb ff ff 	lea    -0x410(%rbp),%rdi
  420288:	48 8d b5 50 fc ff ff 	lea    -0x3b0(%rbp),%rsi
  42028f:	e8 0c ab ff ff       	callq  41ada0 <mbedtls_mpi_copy>
  420294:	89 85 d4 fc ff ff    	mov    %eax,-0x32c(%rbp)
  42029a:	83 f8 00             	cmp    $0x0,%eax
  42029d:	74 05                	je     4202a4 <mbedtls_mpi_div_mpi+0x15b4>
  42029f:	e9 e4 02 00 00       	jmpq   420588 <mbedtls_mpi_div_mpi+0x1898>
  4202a4:	eb 00                	jmp    4202a6 <mbedtls_mpi_div_mpi+0x15b6>
  4202a6:	eb 00                	jmp    4202a8 <mbedtls_mpi_div_mpi+0x15b8>
  4202a8:	48 8b 85 c8 fc ff ff 	mov    -0x338(%rbp),%rax
  4202af:	48 2b 85 b8 fc ff ff 	sub    -0x348(%rbp),%rax
  4202b6:	48 83 e8 01          	sub    $0x1,%rax
  4202ba:	48 c1 e0 06          	shl    $0x6,%rax
  4202be:	48 8d bd f0 fb ff ff 	lea    -0x410(%rbp),%rdi
  4202c5:	48 89 c6             	mov    %rax,%rsi
  4202c8:	e8 33 0a 00 00       	callq  420d00 <mbedtls_mpi_shift_l>
  4202cd:	89 85 d4 fc ff ff    	mov    %eax,-0x32c(%rbp)
  4202d3:	83 f8 00             	cmp    $0x0,%eax
  4202d6:	74 05                	je     4202dd <mbedtls_mpi_div_mpi+0x15ed>
  4202d8:	e9 ab 02 00 00       	jmpq   420588 <mbedtls_mpi_div_mpi+0x1898>
  4202dd:	eb 00                	jmp    4202df <mbedtls_mpi_div_mpi+0x15ef>
  4202df:	eb 00                	jmp    4202e1 <mbedtls_mpi_div_mpi+0x15f1>
  4202e1:	48 8d 85 80 fc ff ff 	lea    -0x380(%rbp),%rax
  4202e8:	48 89 c7             	mov    %rax,%rdi
  4202eb:	48 89 c6             	mov    %rax,%rsi
  4202ee:	48 8d 95 f0 fb ff ff 	lea    -0x410(%rbp),%rdx
  4202f5:	e8 a6 c1 ff ff       	callq  41c4a0 <mbedtls_mpi_add_mpi>
  4202fa:	89 85 d4 fc ff ff    	mov    %eax,-0x32c(%rbp)
  420300:	83 f8 00             	cmp    $0x0,%eax
  420303:	74 05                	je     42030a <mbedtls_mpi_div_mpi+0x161a>
  420305:	e9 7e 02 00 00       	jmpq   420588 <mbedtls_mpi_div_mpi+0x1898>
  42030a:	eb 00                	jmp    42030c <mbedtls_mpi_div_mpi+0x161c>
  42030c:	48 8d 85 20 fc ff ff 	lea    -0x3e0(%rbp),%rax
  420313:	48 83 c0 10          	add    $0x10,%rax
  420317:	48 89 c7             	mov    %rax,%rdi
  42031a:	e8 29 5e 02 00       	callq  446148 <getDecryptedValueQWord>
  42031f:	48 8b bd c8 fc ff ff 	mov    -0x338(%rbp),%rdi
  420326:	48 2b bd b8 fc ff ff 	sub    -0x348(%rbp),%rdi
  42032d:	48 83 ef 01          	sub    $0x1,%rdi
  420331:	48 c1 e7 03          	shl    $0x3,%rdi
  420335:	48 01 f8             	add    %rdi,%rax
  420338:	48 89 c7             	mov    %rax,%rdi
  42033b:	48 89 85 d0 f8 ff ff 	mov    %rax,-0x730(%rbp)
  420342:	e8 01 5e 02 00       	callq  446148 <getDecryptedValueQWord>
  420347:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
  42034b:	48 8b bd d0 f8 ff ff 	mov    -0x730(%rbp),%rdi
  420352:	48 89 c6             	mov    %rax,%rsi
  420355:	e8 a2 59 02 00       	callq  445cfc <setEncryptedValueQWord>
  42035a:	48 89 85 c8 f8 ff ff 	mov    %rax,-0x738(%rbp)
  420361:	eb 00                	jmp    420363 <mbedtls_mpi_div_mpi+0x1673>
  420363:	48 8b 85 c8 fc ff ff 	mov    -0x338(%rbp),%rax
  42036a:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
  42036e:	48 89 85 c8 fc ff ff 	mov    %rax,-0x338(%rbp)
  420375:	e9 b8 f2 ff ff       	jmpq   41f632 <mbedtls_mpi_div_mpi+0x942>
  42037a:	48 83 bd f0 fc ff ff 	cmpq   $0x0,-0x310(%rbp)
  420381:	00 
  420382:	74 66                	je     4203ea <mbedtls_mpi_div_mpi+0x16fa>
  420384:	eb 00                	jmp    420386 <mbedtls_mpi_div_mpi+0x1696>
  420386:	48 8b bd f0 fc ff ff 	mov    -0x310(%rbp),%rdi
  42038d:	48 8d b5 20 fc ff ff 	lea    -0x3e0(%rbp),%rsi
  420394:	e8 07 aa ff ff       	callq  41ada0 <mbedtls_mpi_copy>
  420399:	89 85 d4 fc ff ff    	mov    %eax,-0x32c(%rbp)
  42039f:	83 f8 00             	cmp    $0x0,%eax
  4203a2:	74 05                	je     4203a9 <mbedtls_mpi_div_mpi+0x16b9>
  4203a4:	e9 df 01 00 00       	jmpq   420588 <mbedtls_mpi_div_mpi+0x1898>
  4203a9:	eb 00                	jmp    4203ab <mbedtls_mpi_div_mpi+0x16bb>
  4203ab:	48 8b 85 e0 fc ff ff 	mov    -0x320(%rbp),%rax
  4203b2:	48 89 c7             	mov    %rax,%rdi
  4203b5:	e8 94 5c 02 00       	callq  44604e <getDecryptedValueDWord>
  4203ba:	48 8b bd d8 fc ff ff 	mov    -0x328(%rbp),%rdi
  4203c1:	89 85 c4 f8 ff ff    	mov    %eax,-0x73c(%rbp)
  4203c7:	e8 82 5c 02 00       	callq  44604e <getDecryptedValueDWord>
  4203cc:	8b 8d c4 f8 ff ff    	mov    -0x73c(%rbp),%ecx
  4203d2:	0f af c8             	imul   %eax,%ecx
  4203d5:	48 8b bd f0 fc ff ff 	mov    -0x310(%rbp),%rdi
  4203dc:	89 ce                	mov    %ecx,%esi
  4203de:	e8 1b 58 02 00       	callq  445bfe <setEncryptedValueDWord>
  4203e3:	48 89 85 b8 f8 ff ff 	mov    %rax,-0x748(%rbp)
  4203ea:	48 83 bd e8 fc ff ff 	cmpq   $0x0,-0x318(%rbp)
  4203f1:	00 
  4203f2:	0f 84 8e 01 00 00    	je     420586 <mbedtls_mpi_div_mpi+0x1896>
  4203f8:	eb 00                	jmp    4203fa <mbedtls_mpi_div_mpi+0x170a>
  4203fa:	48 8b b5 b0 fc ff ff 	mov    -0x350(%rbp),%rsi
  420401:	48 8d bd 80 fc ff ff 	lea    -0x380(%rbp),%rdi
  420408:	e8 c3 0b 00 00       	callq  420fd0 <mbedtls_mpi_shift_r>
  42040d:	89 85 d4 fc ff ff    	mov    %eax,-0x32c(%rbp)
  420413:	83 f8 00             	cmp    $0x0,%eax
  420416:	74 05                	je     42041d <mbedtls_mpi_div_mpi+0x172d>
  420418:	e9 6b 01 00 00       	jmpq   420588 <mbedtls_mpi_div_mpi+0x1898>
  42041d:	eb 00                	jmp    42041f <mbedtls_mpi_div_mpi+0x172f>
  42041f:	48 8b 85 e0 fc ff ff 	mov    -0x320(%rbp),%rax
  420426:	48 89 c7             	mov    %rax,%rdi
  420429:	e8 20 5c 02 00       	callq  44604e <getDecryptedValueDWord>
  42042e:	48 8d bd 80 fc ff ff 	lea    -0x380(%rbp),%rdi
  420435:	89 c6                	mov    %eax,%esi
  420437:	e8 c2 57 02 00       	callq  445bfe <setEncryptedValueDWord>
  42043c:	48 89 85 b0 f8 ff ff 	mov    %rax,-0x750(%rbp)
  420443:	48 8b bd e8 fc ff ff 	mov    -0x318(%rbp),%rdi
  42044a:	48 8d b5 80 fc ff ff 	lea    -0x380(%rbp),%rsi
  420451:	e8 4a a9 ff ff       	callq  41ada0 <mbedtls_mpi_copy>
  420456:	89 85 d4 fc ff ff    	mov    %eax,-0x32c(%rbp)
  42045c:	83 f8 00             	cmp    $0x0,%eax
  42045f:	74 05                	je     420466 <mbedtls_mpi_div_mpi+0x1776>
  420461:	e9 22 01 00 00       	jmpq   420588 <mbedtls_mpi_div_mpi+0x1898>
  420466:	eb 00                	jmp    420468 <mbedtls_mpi_div_mpi+0x1778>
  420468:	48 8b 85 e8 fc ff ff 	mov    -0x318(%rbp),%rax
  42046f:	48 89 85 a8 f8 ff ff 	mov    %rax,-0x758(%rbp)
  420476:	e8 db 54 02 00       	callq  445956 <writeback_cache>
  42047b:	48 8b 85 a8 f8 ff ff 	mov    -0x758(%rbp),%rax
  420482:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  420486:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
  42048d:	00 
  42048e:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
  420493:	7d 11                	jge    4204a6 <mbedtls_mpi_div_mpi+0x17b6>
  420495:	31 c0                	xor    %eax,%eax
  420497:	89 c1                	mov    %eax,%ecx
  420499:	48 2b 4d a0          	sub    -0x60(%rbp),%rcx
  42049d:	48 89 8d a0 f8 ff ff 	mov    %rcx,-0x760(%rbp)
  4204a4:	eb 0b                	jmp    4204b1 <mbedtls_mpi_div_mpi+0x17c1>
  4204a6:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  4204aa:	48 89 85 a0 f8 ff ff 	mov    %rax,-0x760(%rbp)
  4204b1:	48 8b 85 a0 f8 ff ff 	mov    -0x760(%rbp),%rax
  4204b8:	48 8d 8d 00 fd ff ff 	lea    -0x300(%rbp),%rcx
  4204bf:	48 89 cf             	mov    %rcx,%rdi
  4204c2:	48 89 c6             	mov    %rax,%rsi
  4204c5:	e8 32 58 02 00       	callq  445cfc <setEncryptedValueQWord>
  4204ca:	48 8d 8d 70 ff ff ff 	lea    -0x90(%rbp),%rcx
  4204d1:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
  4204d5:	48 83 fe 00          	cmp    $0x0,%rsi
  4204d9:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  4204de:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  4204e4:	44 0f 4c c2          	cmovl  %edx,%r8d
  4204e8:	48 89 cf             	mov    %rcx,%rdi
  4204eb:	44 89 c6             	mov    %r8d,%esi
  4204ee:	48 89 85 98 f8 ff ff 	mov    %rax,-0x768(%rbp)
  4204f5:	e8 04 57 02 00       	callq  445bfe <setEncryptedValueDWord>
  4204fa:	ba 01 00 00 00       	mov    $0x1,%edx
  4204ff:	89 d6                	mov    %edx,%esi
  420501:	48 8d 8d 70 ff ff ff 	lea    -0x90(%rbp),%rcx
  420508:	48 83 c1 08          	add    $0x8,%rcx
  42050c:	48 89 cf             	mov    %rcx,%rdi
  42050f:	48 89 85 90 f8 ff ff 	mov    %rax,-0x770(%rbp)
  420516:	e8 e1 57 02 00       	callq  445cfc <setEncryptedValueQWord>
  42051b:	48 8d b5 00 fd ff ff 	lea    -0x300(%rbp),%rsi
  420522:	48 8d 8d 70 ff ff ff 	lea    -0x90(%rbp),%rcx
  420529:	48 83 c1 10          	add    $0x10,%rcx
  42052d:	48 89 cf             	mov    %rcx,%rdi
  420530:	48 89 85 88 f8 ff ff 	mov    %rax,-0x778(%rbp)
  420537:	e8 c0 57 02 00       	callq  445cfc <setEncryptedValueQWord>
  42053c:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
  420540:	48 8d b5 70 ff ff ff 	lea    -0x90(%rbp),%rsi
  420547:	48 89 85 80 f8 ff ff 	mov    %rax,-0x780(%rbp)
  42054e:	e8 fd e4 ff ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  420553:	89 85 7c f8 ff ff    	mov    %eax,-0x784(%rbp)
  420559:	e8 f8 53 02 00       	callq  445956 <writeback_cache>
  42055e:	8b 85 7c f8 ff ff    	mov    -0x784(%rbp),%eax
  420564:	83 f8 00             	cmp    $0x0,%eax
  420567:	75 1b                	jne    420584 <mbedtls_mpi_div_mpi+0x1894>
  420569:	48 8b 85 e8 fc ff ff 	mov    -0x318(%rbp),%rax
  420570:	48 89 c7             	mov    %rax,%rdi
  420573:	be 01 00 00 00       	mov    $0x1,%esi
  420578:	e8 81 56 02 00       	callq  445bfe <setEncryptedValueDWord>
  42057d:	48 89 85 70 f8 ff ff 	mov    %rax,-0x790(%rbp)
  420584:	eb 00                	jmp    420586 <mbedtls_mpi_div_mpi+0x1896>
  420586:	eb 00                	jmp    420588 <mbedtls_mpi_div_mpi+0x1898>
  420588:	48 8d 85 80 fc ff ff 	lea    -0x380(%rbp),%rax
  42058f:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  420593:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
  420598:	75 05                	jne    42059f <mbedtls_mpi_div_mpi+0x18af>
  42059a:	e9 3f 01 00 00       	jmpq   4206de <mbedtls_mpi_div_mpi+0x19ee>
  42059f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  4205a3:	48 83 c0 10          	add    $0x10,%rax
  4205a7:	48 89 c7             	mov    %rax,%rdi
  4205aa:	e8 99 5b 02 00       	callq  446148 <getDecryptedValueQWord>
  4205af:	48 83 f8 00          	cmp    $0x0,%rax
  4205b3:	0f 84 df 00 00 00    	je     420698 <mbedtls_mpi_div_mpi+0x19a8>
  4205b9:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  4205bd:	48 83 c0 10          	add    $0x10,%rax
  4205c1:	48 89 c7             	mov    %rax,%rdi
  4205c4:	e8 7f 5b 02 00       	callq  446148 <getDecryptedValueQWord>
  4205c9:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
  4205cd:	48 83 c7 08          	add    $0x8,%rdi
  4205d1:	48 89 85 68 f8 ff ff 	mov    %rax,-0x798(%rbp)
  4205d8:	e8 6b 5b 02 00       	callq  446148 <getDecryptedValueQWord>
  4205dd:	48 8b bd 68 f8 ff ff 	mov    -0x798(%rbp),%rdi
  4205e4:	48 89 7d c0          	mov    %rdi,-0x40(%rbp)
  4205e8:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  4205ec:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4205f0:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  4205f4:	48 c1 e1 03          	shl    $0x3,%rcx
  4205f8:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  4205fc:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
  420600:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  420607:	00 
  420608:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  42060c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  420610:	48 89 85 60 f8 ff ff 	mov    %rax,-0x7a0(%rbp)
  420617:	48 89 8d 58 f8 ff ff 	mov    %rcx,-0x7a8(%rbp)
  42061e:	48 89 95 50 f8 ff ff 	mov    %rdx,-0x7b0(%rbp)
  420625:	e8 2c 53 02 00       	callq  445956 <writeback_cache>
  42062a:	48 8b bd 58 f8 ff ff 	mov    -0x7a8(%rbp),%rdi
  420631:	48 8b b5 50 f8 ff ff 	mov    -0x7b0(%rbp),%rsi
  420638:	e8 a8 60 02 00       	callq  4466e5 <decryptArrayForLibCall>
  42063d:	31 f6                	xor    %esi,%esi
  42063f:	48 8b bd 58 f8 ff ff 	mov    -0x7a8(%rbp),%rdi
  420646:	48 8b 95 50 f8 ff ff 	mov    -0x7b0(%rbp),%rdx
  42064d:	48 8b 85 60 f8 ff ff 	mov    -0x7a0(%rbp),%rax
  420654:	ff d0                	callq  *%rax
  420656:	48 8b bd 58 f8 ff ff 	mov    -0x7a8(%rbp),%rdi
  42065d:	48 8b b5 50 f8 ff ff 	mov    -0x7b0(%rbp),%rsi
  420664:	48 89 85 48 f8 ff ff 	mov    %rax,-0x7b8(%rbp)
  42066b:	e8 e6 5d 02 00       	callq  446456 <encryptArrayForLibCall>
  420670:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  420674:	48 83 c0 10          	add    $0x10,%rax
  420678:	48 89 c7             	mov    %rax,%rdi
  42067b:	e8 c8 5a 02 00       	callq  446148 <getDecryptedValueQWord>
  420680:	48 89 85 40 f8 ff ff 	mov    %rax,-0x7c0(%rbp)
  420687:	e8 ca 52 02 00       	callq  445956 <writeback_cache>
  42068c:	48 8b bd 40 f8 ff ff 	mov    -0x7c0(%rbp),%rdi
  420693:	e8 48 0a fe ff       	callq  4010e0 <free@plt>
  420698:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  42069c:	48 89 c7             	mov    %rax,%rdi
  42069f:	be 01 00 00 00       	mov    $0x1,%esi
  4206a4:	e8 55 55 02 00       	callq  445bfe <setEncryptedValueDWord>
  4206a9:	31 f6                	xor    %esi,%esi
  4206ab:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
  4206af:	48 83 c7 08          	add    $0x8,%rdi
  4206b3:	48 89 85 38 f8 ff ff 	mov    %rax,-0x7c8(%rbp)
  4206ba:	e8 3d 56 02 00       	callq  445cfc <setEncryptedValueQWord>
  4206bf:	31 c9                	xor    %ecx,%ecx
  4206c1:	89 ce                	mov    %ecx,%esi
  4206c3:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
  4206c7:	48 83 c7 10          	add    $0x10,%rdi
  4206cb:	48 89 85 30 f8 ff ff 	mov    %rax,-0x7d0(%rbp)
  4206d2:	e8 25 56 02 00       	callq  445cfc <setEncryptedValueQWord>
  4206d7:	48 89 85 28 f8 ff ff 	mov    %rax,-0x7d8(%rbp)
  4206de:	48 8d 85 50 fc ff ff 	lea    -0x3b0(%rbp),%rax
  4206e5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  4206e9:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  4206ee:	75 05                	jne    4206f5 <mbedtls_mpi_div_mpi+0x1a05>
  4206f0:	e9 3f 01 00 00       	jmpq   420834 <mbedtls_mpi_div_mpi+0x1b44>
  4206f5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4206f9:	48 83 c0 10          	add    $0x10,%rax
  4206fd:	48 89 c7             	mov    %rax,%rdi
  420700:	e8 43 5a 02 00       	callq  446148 <getDecryptedValueQWord>
  420705:	48 83 f8 00          	cmp    $0x0,%rax
  420709:	0f 84 df 00 00 00    	je     4207ee <mbedtls_mpi_div_mpi+0x1afe>
  42070f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  420713:	48 83 c0 10          	add    $0x10,%rax
  420717:	48 89 c7             	mov    %rax,%rdi
  42071a:	e8 29 5a 02 00       	callq  446148 <getDecryptedValueQWord>
  42071f:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  420723:	48 83 c7 08          	add    $0x8,%rdi
  420727:	48 89 85 20 f8 ff ff 	mov    %rax,-0x7e0(%rbp)
  42072e:	e8 15 5a 02 00       	callq  446148 <getDecryptedValueQWord>
  420733:	48 8b bd 20 f8 ff ff 	mov    -0x7e0(%rbp),%rdi
  42073a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42073e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  420742:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  420746:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  42074a:	48 c1 e1 03          	shl    $0x3,%rcx
  42074e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  420752:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
  420756:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  42075d:	00 
  42075e:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  420762:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  420766:	48 89 85 18 f8 ff ff 	mov    %rax,-0x7e8(%rbp)
  42076d:	48 89 8d 10 f8 ff ff 	mov    %rcx,-0x7f0(%rbp)
  420774:	48 89 95 08 f8 ff ff 	mov    %rdx,-0x7f8(%rbp)
  42077b:	e8 d6 51 02 00       	callq  445956 <writeback_cache>
  420780:	48 8b bd 10 f8 ff ff 	mov    -0x7f0(%rbp),%rdi
  420787:	48 8b b5 08 f8 ff ff 	mov    -0x7f8(%rbp),%rsi
  42078e:	e8 52 5f 02 00       	callq  4466e5 <decryptArrayForLibCall>
  420793:	31 f6                	xor    %esi,%esi
  420795:	48 8b bd 10 f8 ff ff 	mov    -0x7f0(%rbp),%rdi
  42079c:	48 8b 95 08 f8 ff ff 	mov    -0x7f8(%rbp),%rdx
  4207a3:	48 8b 85 18 f8 ff ff 	mov    -0x7e8(%rbp),%rax
  4207aa:	ff d0                	callq  *%rax
  4207ac:	48 8b bd 10 f8 ff ff 	mov    -0x7f0(%rbp),%rdi
  4207b3:	48 8b b5 08 f8 ff ff 	mov    -0x7f8(%rbp),%rsi
  4207ba:	48 89 85 00 f8 ff ff 	mov    %rax,-0x800(%rbp)
  4207c1:	e8 90 5c 02 00       	callq  446456 <encryptArrayForLibCall>
  4207c6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4207ca:	48 83 c0 10          	add    $0x10,%rax
  4207ce:	48 89 c7             	mov    %rax,%rdi
  4207d1:	e8 72 59 02 00       	callq  446148 <getDecryptedValueQWord>
  4207d6:	48 89 85 f8 f7 ff ff 	mov    %rax,-0x808(%rbp)
  4207dd:	e8 74 51 02 00       	callq  445956 <writeback_cache>
  4207e2:	48 8b bd f8 f7 ff ff 	mov    -0x808(%rbp),%rdi
  4207e9:	e8 f2 08 fe ff       	callq  4010e0 <free@plt>
  4207ee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4207f2:	48 89 c7             	mov    %rax,%rdi
  4207f5:	be 01 00 00 00       	mov    $0x1,%esi
  4207fa:	e8 ff 53 02 00       	callq  445bfe <setEncryptedValueDWord>
  4207ff:	31 f6                	xor    %esi,%esi
  420801:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  420805:	48 83 c7 08          	add    $0x8,%rdi
  420809:	48 89 85 f0 f7 ff ff 	mov    %rax,-0x810(%rbp)
  420810:	e8 e7 54 02 00       	callq  445cfc <setEncryptedValueQWord>
  420815:	31 c9                	xor    %ecx,%ecx
  420817:	89 ce                	mov    %ecx,%esi
  420819:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  42081d:	48 83 c7 10          	add    $0x10,%rdi
  420821:	48 89 85 e8 f7 ff ff 	mov    %rax,-0x818(%rbp)
  420828:	e8 cf 54 02 00       	callq  445cfc <setEncryptedValueQWord>
  42082d:	48 89 85 e0 f7 ff ff 	mov    %rax,-0x820(%rbp)
  420834:	48 8d 85 20 fc ff ff 	lea    -0x3e0(%rbp),%rax
  42083b:	48 89 85 d8 fd ff ff 	mov    %rax,-0x228(%rbp)
  420842:	48 83 bd d8 fd ff ff 	cmpq   $0x0,-0x228(%rbp)
  420849:	00 
  42084a:	75 05                	jne    420851 <mbedtls_mpi_div_mpi+0x1b61>
  42084c:	e9 6c 01 00 00       	jmpq   4209bd <mbedtls_mpi_div_mpi+0x1ccd>
  420851:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
  420858:	48 83 c0 10          	add    $0x10,%rax
  42085c:	48 89 c7             	mov    %rax,%rdi
  42085f:	e8 e4 58 02 00       	callq  446148 <getDecryptedValueQWord>
  420864:	48 83 f8 00          	cmp    $0x0,%rax
  420868:	0f 84 00 01 00 00    	je     42096e <mbedtls_mpi_div_mpi+0x1c7e>
  42086e:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
  420875:	48 83 c0 10          	add    $0x10,%rax
  420879:	48 89 c7             	mov    %rax,%rdi
  42087c:	e8 c7 58 02 00       	callq  446148 <getDecryptedValueQWord>
  420881:	48 8b bd d8 fd ff ff 	mov    -0x228(%rbp),%rdi
  420888:	48 83 c7 08          	add    $0x8,%rdi
  42088c:	48 89 85 d8 f7 ff ff 	mov    %rax,-0x828(%rbp)
  420893:	e8 b0 58 02 00       	callq  446148 <getDecryptedValueQWord>
  420898:	48 8b bd d8 f7 ff ff 	mov    -0x828(%rbp),%rdi
  42089f:	48 89 bd e8 fd ff ff 	mov    %rdi,-0x218(%rbp)
  4208a6:	48 89 85 e0 fd ff ff 	mov    %rax,-0x220(%rbp)
  4208ad:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
  4208b4:	48 8b 8d e0 fd ff ff 	mov    -0x220(%rbp),%rcx
  4208bb:	48 c1 e1 03          	shl    $0x3,%rcx
  4208bf:	48 89 85 f8 fd ff ff 	mov    %rax,-0x208(%rbp)
  4208c6:	48 89 8d f0 fd ff ff 	mov    %rcx,-0x210(%rbp)
  4208cd:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  4208d4:	00 
  4208d5:	48 8b 8d f8 fd ff ff 	mov    -0x208(%rbp),%rcx
  4208dc:	48 8b 95 f0 fd ff ff 	mov    -0x210(%rbp),%rdx
  4208e3:	48 89 85 d0 f7 ff ff 	mov    %rax,-0x830(%rbp)
  4208ea:	48 89 8d c8 f7 ff ff 	mov    %rcx,-0x838(%rbp)
  4208f1:	48 89 95 c0 f7 ff ff 	mov    %rdx,-0x840(%rbp)
  4208f8:	e8 59 50 02 00       	callq  445956 <writeback_cache>
  4208fd:	48 8b bd c8 f7 ff ff 	mov    -0x838(%rbp),%rdi
  420904:	48 8b b5 c0 f7 ff ff 	mov    -0x840(%rbp),%rsi
  42090b:	e8 d5 5d 02 00       	callq  4466e5 <decryptArrayForLibCall>
  420910:	31 f6                	xor    %esi,%esi
  420912:	48 8b bd c8 f7 ff ff 	mov    -0x838(%rbp),%rdi
  420919:	48 8b 95 c0 f7 ff ff 	mov    -0x840(%rbp),%rdx
  420920:	48 8b 85 d0 f7 ff ff 	mov    -0x830(%rbp),%rax
  420927:	ff d0                	callq  *%rax
  420929:	48 8b bd c8 f7 ff ff 	mov    -0x838(%rbp),%rdi
  420930:	48 8b b5 c0 f7 ff ff 	mov    -0x840(%rbp),%rsi
  420937:	48 89 85 b8 f7 ff ff 	mov    %rax,-0x848(%rbp)
  42093e:	e8 13 5b 02 00       	callq  446456 <encryptArrayForLibCall>
  420943:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
  42094a:	48 83 c0 10          	add    $0x10,%rax
  42094e:	48 89 c7             	mov    %rax,%rdi
  420951:	e8 f2 57 02 00       	callq  446148 <getDecryptedValueQWord>
  420956:	48 89 85 b0 f7 ff ff 	mov    %rax,-0x850(%rbp)
  42095d:	e8 f4 4f 02 00       	callq  445956 <writeback_cache>
  420962:	48 8b bd b0 f7 ff ff 	mov    -0x850(%rbp),%rdi
  420969:	e8 72 07 fe ff       	callq  4010e0 <free@plt>
  42096e:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
  420975:	48 89 c7             	mov    %rax,%rdi
  420978:	be 01 00 00 00       	mov    $0x1,%esi
  42097d:	e8 7c 52 02 00       	callq  445bfe <setEncryptedValueDWord>
  420982:	31 f6                	xor    %esi,%esi
  420984:	48 8b bd d8 fd ff ff 	mov    -0x228(%rbp),%rdi
  42098b:	48 83 c7 08          	add    $0x8,%rdi
  42098f:	48 89 85 a8 f7 ff ff 	mov    %rax,-0x858(%rbp)
  420996:	e8 61 53 02 00       	callq  445cfc <setEncryptedValueQWord>
  42099b:	31 c9                	xor    %ecx,%ecx
  42099d:	89 ce                	mov    %ecx,%esi
  42099f:	48 8b bd d8 fd ff ff 	mov    -0x228(%rbp),%rdi
  4209a6:	48 83 c7 10          	add    $0x10,%rdi
  4209aa:	48 89 85 a0 f7 ff ff 	mov    %rax,-0x860(%rbp)
  4209b1:	e8 46 53 02 00       	callq  445cfc <setEncryptedValueQWord>
  4209b6:	48 89 85 98 f7 ff ff 	mov    %rax,-0x868(%rbp)
  4209bd:	48 8d 85 f0 fb ff ff 	lea    -0x410(%rbp),%rax
  4209c4:	48 89 85 a0 fd ff ff 	mov    %rax,-0x260(%rbp)
  4209cb:	48 83 bd a0 fd ff ff 	cmpq   $0x0,-0x260(%rbp)
  4209d2:	00 
  4209d3:	75 05                	jne    4209da <mbedtls_mpi_div_mpi+0x1cea>
  4209d5:	e9 6c 01 00 00       	jmpq   420b46 <mbedtls_mpi_div_mpi+0x1e56>
  4209da:	48 8b 85 a0 fd ff ff 	mov    -0x260(%rbp),%rax
  4209e1:	48 83 c0 10          	add    $0x10,%rax
  4209e5:	48 89 c7             	mov    %rax,%rdi
  4209e8:	e8 5b 57 02 00       	callq  446148 <getDecryptedValueQWord>
  4209ed:	48 83 f8 00          	cmp    $0x0,%rax
  4209f1:	0f 84 00 01 00 00    	je     420af7 <mbedtls_mpi_div_mpi+0x1e07>
  4209f7:	48 8b 85 a0 fd ff ff 	mov    -0x260(%rbp),%rax
  4209fe:	48 83 c0 10          	add    $0x10,%rax
  420a02:	48 89 c7             	mov    %rax,%rdi
  420a05:	e8 3e 57 02 00       	callq  446148 <getDecryptedValueQWord>
  420a0a:	48 8b bd a0 fd ff ff 	mov    -0x260(%rbp),%rdi
  420a11:	48 83 c7 08          	add    $0x8,%rdi
  420a15:	48 89 85 90 f7 ff ff 	mov    %rax,-0x870(%rbp)
  420a1c:	e8 27 57 02 00       	callq  446148 <getDecryptedValueQWord>
  420a21:	48 8b bd 90 f7 ff ff 	mov    -0x870(%rbp),%rdi
  420a28:	48 89 bd b0 fd ff ff 	mov    %rdi,-0x250(%rbp)
  420a2f:	48 89 85 a8 fd ff ff 	mov    %rax,-0x258(%rbp)
  420a36:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
  420a3d:	48 8b 8d a8 fd ff ff 	mov    -0x258(%rbp),%rcx
  420a44:	48 c1 e1 03          	shl    $0x3,%rcx
  420a48:	48 89 85 c0 fd ff ff 	mov    %rax,-0x240(%rbp)
  420a4f:	48 89 8d b8 fd ff ff 	mov    %rcx,-0x248(%rbp)
  420a56:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  420a5d:	00 
  420a5e:	48 8b 8d c0 fd ff ff 	mov    -0x240(%rbp),%rcx
  420a65:	48 8b 95 b8 fd ff ff 	mov    -0x248(%rbp),%rdx
  420a6c:	48 89 85 88 f7 ff ff 	mov    %rax,-0x878(%rbp)
  420a73:	48 89 8d 80 f7 ff ff 	mov    %rcx,-0x880(%rbp)
  420a7a:	48 89 95 78 f7 ff ff 	mov    %rdx,-0x888(%rbp)
  420a81:	e8 d0 4e 02 00       	callq  445956 <writeback_cache>
  420a86:	48 8b bd 80 f7 ff ff 	mov    -0x880(%rbp),%rdi
  420a8d:	48 8b b5 78 f7 ff ff 	mov    -0x888(%rbp),%rsi
  420a94:	e8 4c 5c 02 00       	callq  4466e5 <decryptArrayForLibCall>
  420a99:	31 f6                	xor    %esi,%esi
  420a9b:	48 8b bd 80 f7 ff ff 	mov    -0x880(%rbp),%rdi
  420aa2:	48 8b 95 78 f7 ff ff 	mov    -0x888(%rbp),%rdx
  420aa9:	48 8b 85 88 f7 ff ff 	mov    -0x878(%rbp),%rax
  420ab0:	ff d0                	callq  *%rax
  420ab2:	48 8b bd 80 f7 ff ff 	mov    -0x880(%rbp),%rdi
  420ab9:	48 8b b5 78 f7 ff ff 	mov    -0x888(%rbp),%rsi
  420ac0:	48 89 85 70 f7 ff ff 	mov    %rax,-0x890(%rbp)
  420ac7:	e8 8a 59 02 00       	callq  446456 <encryptArrayForLibCall>
  420acc:	48 8b 85 a0 fd ff ff 	mov    -0x260(%rbp),%rax
  420ad3:	48 83 c0 10          	add    $0x10,%rax
  420ad7:	48 89 c7             	mov    %rax,%rdi
  420ada:	e8 69 56 02 00       	callq  446148 <getDecryptedValueQWord>
  420adf:	48 89 85 68 f7 ff ff 	mov    %rax,-0x898(%rbp)
  420ae6:	e8 6b 4e 02 00       	callq  445956 <writeback_cache>
  420aeb:	48 8b bd 68 f7 ff ff 	mov    -0x898(%rbp),%rdi
  420af2:	e8 e9 05 fe ff       	callq  4010e0 <free@plt>
  420af7:	48 8b 85 a0 fd ff ff 	mov    -0x260(%rbp),%rax
  420afe:	48 89 c7             	mov    %rax,%rdi
  420b01:	be 01 00 00 00       	mov    $0x1,%esi
  420b06:	e8 f3 50 02 00       	callq  445bfe <setEncryptedValueDWord>
  420b0b:	31 f6                	xor    %esi,%esi
  420b0d:	48 8b bd a0 fd ff ff 	mov    -0x260(%rbp),%rdi
  420b14:	48 83 c7 08          	add    $0x8,%rdi
  420b18:	48 89 85 60 f7 ff ff 	mov    %rax,-0x8a0(%rbp)
  420b1f:	e8 d8 51 02 00       	callq  445cfc <setEncryptedValueQWord>
  420b24:	31 c9                	xor    %ecx,%ecx
  420b26:	89 ce                	mov    %ecx,%esi
  420b28:	48 8b bd a0 fd ff ff 	mov    -0x260(%rbp),%rdi
  420b2f:	48 83 c7 10          	add    $0x10,%rdi
  420b33:	48 89 85 58 f7 ff ff 	mov    %rax,-0x8a8(%rbp)
  420b3a:	e8 bd 51 02 00       	callq  445cfc <setEncryptedValueQWord>
  420b3f:	48 89 85 50 f7 ff ff 	mov    %rax,-0x8b0(%rbp)
  420b46:	48 8d 85 c0 fb ff ff 	lea    -0x440(%rbp),%rax
  420b4d:	48 89 85 68 fd ff ff 	mov    %rax,-0x298(%rbp)
  420b54:	48 83 bd 68 fd ff ff 	cmpq   $0x0,-0x298(%rbp)
  420b5b:	00 
  420b5c:	75 05                	jne    420b63 <mbedtls_mpi_div_mpi+0x1e73>
  420b5e:	e9 6c 01 00 00       	jmpq   420ccf <mbedtls_mpi_div_mpi+0x1fdf>
  420b63:	48 8b 85 68 fd ff ff 	mov    -0x298(%rbp),%rax
  420b6a:	48 83 c0 10          	add    $0x10,%rax
  420b6e:	48 89 c7             	mov    %rax,%rdi
  420b71:	e8 d2 55 02 00       	callq  446148 <getDecryptedValueQWord>
  420b76:	48 83 f8 00          	cmp    $0x0,%rax
  420b7a:	0f 84 00 01 00 00    	je     420c80 <mbedtls_mpi_div_mpi+0x1f90>
  420b80:	48 8b 85 68 fd ff ff 	mov    -0x298(%rbp),%rax
  420b87:	48 83 c0 10          	add    $0x10,%rax
  420b8b:	48 89 c7             	mov    %rax,%rdi
  420b8e:	e8 b5 55 02 00       	callq  446148 <getDecryptedValueQWord>
  420b93:	48 8b bd 68 fd ff ff 	mov    -0x298(%rbp),%rdi
  420b9a:	48 83 c7 08          	add    $0x8,%rdi
  420b9e:	48 89 85 48 f7 ff ff 	mov    %rax,-0x8b8(%rbp)
  420ba5:	e8 9e 55 02 00       	callq  446148 <getDecryptedValueQWord>
  420baa:	48 8b bd 48 f7 ff ff 	mov    -0x8b8(%rbp),%rdi
  420bb1:	48 89 bd 78 fd ff ff 	mov    %rdi,-0x288(%rbp)
  420bb8:	48 89 85 70 fd ff ff 	mov    %rax,-0x290(%rbp)
  420bbf:	48 8b 85 78 fd ff ff 	mov    -0x288(%rbp),%rax
  420bc6:	48 8b 8d 70 fd ff ff 	mov    -0x290(%rbp),%rcx
  420bcd:	48 c1 e1 03          	shl    $0x3,%rcx
  420bd1:	48 89 85 88 fd ff ff 	mov    %rax,-0x278(%rbp)
  420bd8:	48 89 8d 80 fd ff ff 	mov    %rcx,-0x280(%rbp)
  420bdf:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  420be6:	00 
  420be7:	48 8b 8d 88 fd ff ff 	mov    -0x278(%rbp),%rcx
  420bee:	48 8b 95 80 fd ff ff 	mov    -0x280(%rbp),%rdx
  420bf5:	48 89 85 40 f7 ff ff 	mov    %rax,-0x8c0(%rbp)
  420bfc:	48 89 8d 38 f7 ff ff 	mov    %rcx,-0x8c8(%rbp)
  420c03:	48 89 95 30 f7 ff ff 	mov    %rdx,-0x8d0(%rbp)
  420c0a:	e8 47 4d 02 00       	callq  445956 <writeback_cache>
  420c0f:	48 8b bd 38 f7 ff ff 	mov    -0x8c8(%rbp),%rdi
  420c16:	48 8b b5 30 f7 ff ff 	mov    -0x8d0(%rbp),%rsi
  420c1d:	e8 c3 5a 02 00       	callq  4466e5 <decryptArrayForLibCall>
  420c22:	31 f6                	xor    %esi,%esi
  420c24:	48 8b bd 38 f7 ff ff 	mov    -0x8c8(%rbp),%rdi
  420c2b:	48 8b 95 30 f7 ff ff 	mov    -0x8d0(%rbp),%rdx
  420c32:	48 8b 85 40 f7 ff ff 	mov    -0x8c0(%rbp),%rax
  420c39:	ff d0                	callq  *%rax
  420c3b:	48 8b bd 38 f7 ff ff 	mov    -0x8c8(%rbp),%rdi
  420c42:	48 8b b5 30 f7 ff ff 	mov    -0x8d0(%rbp),%rsi
  420c49:	48 89 85 28 f7 ff ff 	mov    %rax,-0x8d8(%rbp)
  420c50:	e8 01 58 02 00       	callq  446456 <encryptArrayForLibCall>
  420c55:	48 8b 85 68 fd ff ff 	mov    -0x298(%rbp),%rax
  420c5c:	48 83 c0 10          	add    $0x10,%rax
  420c60:	48 89 c7             	mov    %rax,%rdi
  420c63:	e8 e0 54 02 00       	callq  446148 <getDecryptedValueQWord>
  420c68:	48 89 85 20 f7 ff ff 	mov    %rax,-0x8e0(%rbp)
  420c6f:	e8 e2 4c 02 00       	callq  445956 <writeback_cache>
  420c74:	48 8b bd 20 f7 ff ff 	mov    -0x8e0(%rbp),%rdi
  420c7b:	e8 60 04 fe ff       	callq  4010e0 <free@plt>
  420c80:	48 8b 85 68 fd ff ff 	mov    -0x298(%rbp),%rax
  420c87:	48 89 c7             	mov    %rax,%rdi
  420c8a:	be 01 00 00 00       	mov    $0x1,%esi
  420c8f:	e8 6a 4f 02 00       	callq  445bfe <setEncryptedValueDWord>
  420c94:	31 f6                	xor    %esi,%esi
  420c96:	48 8b bd 68 fd ff ff 	mov    -0x298(%rbp),%rdi
  420c9d:	48 83 c7 08          	add    $0x8,%rdi
  420ca1:	48 89 85 18 f7 ff ff 	mov    %rax,-0x8e8(%rbp)
  420ca8:	e8 4f 50 02 00       	callq  445cfc <setEncryptedValueQWord>
  420cad:	31 c9                	xor    %ecx,%ecx
  420caf:	89 ce                	mov    %ecx,%esi
  420cb1:	48 8b bd 68 fd ff ff 	mov    -0x298(%rbp),%rdi
  420cb8:	48 83 c7 10          	add    $0x10,%rdi
  420cbc:	48 89 85 10 f7 ff ff 	mov    %rax,-0x8f0(%rbp)
  420cc3:	e8 34 50 02 00       	callq  445cfc <setEncryptedValueQWord>
  420cc8:	48 89 85 08 f7 ff ff 	mov    %rax,-0x8f8(%rbp)
  420ccf:	8b 85 d4 fc ff ff    	mov    -0x32c(%rbp),%eax
  420cd5:	89 85 fc fc ff ff    	mov    %eax,-0x304(%rbp)
  420cdb:	8b 85 fc fc ff ff    	mov    -0x304(%rbp),%eax
  420ce1:	89 85 04 f7 ff ff    	mov    %eax,-0x8fc(%rbp)
  420ce7:	e8 6a 4c 02 00       	callq  445956 <writeback_cache>
  420cec:	8b 85 04 f7 ff ff    	mov    -0x8fc(%rbp),%eax
  420cf2:	48 81 c4 00 09 00 00 	add    $0x900,%rsp
  420cf9:	5d                   	pop    %rbp
  420cfa:	c3                   	retq   
  420cfb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000420d00 <mbedtls_mpi_shift_l>:
  420d00:	55                   	push   %rbp
  420d01:	48 89 e5             	mov    %rsp,%rbp
  420d04:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
  420d0b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  420d0f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  420d13:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
  420d1a:	00 
  420d1b:	eb 00                	jmp    420d1d <mbedtls_mpi_shift_l+0x1d>
  420d1d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  420d21:	48 c1 e8 06          	shr    $0x6,%rax
  420d25:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  420d29:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  420d2d:	48 83 e0 3f          	and    $0x3f,%rax
  420d31:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  420d35:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  420d39:	e8 92 a4 ff ff       	callq  41b1d0 <mbedtls_mpi_bitlen>
  420d3e:	48 03 45 f0          	add    -0x10(%rbp),%rax
  420d42:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  420d46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  420d4a:	48 83 c0 08          	add    $0x8,%rax
  420d4e:	48 89 c7             	mov    %rax,%rdi
  420d51:	e8 f2 53 02 00       	callq  446148 <getDecryptedValueQWord>
  420d56:	48 c1 e0 06          	shl    $0x6,%rax
  420d5a:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
  420d5e:	73 42                	jae    420da2 <mbedtls_mpi_shift_l+0xa2>
  420d60:	eb 00                	jmp    420d62 <mbedtls_mpi_shift_l+0x62>
  420d62:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  420d66:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  420d6a:	48 c1 e8 06          	shr    $0x6,%rax
  420d6e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  420d72:	48 83 e1 3f          	and    $0x3f,%rcx
  420d76:	48 83 f9 00          	cmp    $0x0,%rcx
  420d7a:	0f 95 c2             	setne  %dl
  420d7d:	80 e2 01             	and    $0x1,%dl
  420d80:	0f b6 f2             	movzbl %dl,%esi
  420d83:	48 63 ce             	movslq %esi,%rcx
  420d86:	48 01 c8             	add    %rcx,%rax
  420d89:	48 89 c6             	mov    %rax,%rsi
  420d8c:	e8 af 9d ff ff       	callq  41ab40 <mbedtls_mpi_grow>
  420d91:	89 45 ec             	mov    %eax,-0x14(%rbp)
  420d94:	83 f8 00             	cmp    $0x0,%eax
  420d97:	74 05                	je     420d9e <mbedtls_mpi_shift_l+0x9e>
  420d99:	e9 0d 02 00 00       	jmpq   420fab <mbedtls_mpi_shift_l+0x2ab>
  420d9e:	eb 00                	jmp    420da0 <mbedtls_mpi_shift_l+0xa0>
  420da0:	eb 00                	jmp    420da2 <mbedtls_mpi_shift_l+0xa2>
  420da2:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  420da9:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  420dae:	0f 86 cf 00 00 00    	jbe    420e83 <mbedtls_mpi_shift_l+0x183>
  420db4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  420db8:	48 83 c0 08          	add    $0x8,%rax
  420dbc:	48 89 c7             	mov    %rax,%rdi
  420dbf:	e8 84 53 02 00       	callq  446148 <getDecryptedValueQWord>
  420dc4:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  420dc8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  420dcc:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
  420dd0:	76 69                	jbe    420e3b <mbedtls_mpi_shift_l+0x13b>
  420dd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  420dd6:	48 83 c0 10          	add    $0x10,%rax
  420dda:	48 89 c7             	mov    %rax,%rdi
  420ddd:	e8 66 53 02 00       	callq  446148 <getDecryptedValueQWord>
  420de2:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  420de6:	48 2b 7d d8          	sub    -0x28(%rbp),%rdi
  420dea:	48 83 ef 01          	sub    $0x1,%rdi
  420dee:	48 c1 e7 03          	shl    $0x3,%rdi
  420df2:	48 01 f8             	add    %rdi,%rax
  420df5:	48 89 c7             	mov    %rax,%rdi
  420df8:	e8 4b 53 02 00       	callq  446148 <getDecryptedValueQWord>
  420dfd:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  420e01:	48 83 c7 10          	add    $0x10,%rdi
  420e05:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  420e09:	e8 3a 53 02 00       	callq  446148 <getDecryptedValueQWord>
  420e0e:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  420e12:	48 83 ef 01          	sub    $0x1,%rdi
  420e16:	48 c1 e7 03          	shl    $0x3,%rdi
  420e1a:	48 01 f8             	add    %rdi,%rax
  420e1d:	48 89 c7             	mov    %rax,%rdi
  420e20:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  420e24:	e8 d3 4e 02 00       	callq  445cfc <setEncryptedValueQWord>
  420e29:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  420e2d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  420e31:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
  420e35:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  420e39:	eb 8d                	jmp    420dc8 <mbedtls_mpi_shift_l+0xc8>
  420e3b:	eb 00                	jmp    420e3d <mbedtls_mpi_shift_l+0x13d>
  420e3d:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  420e42:	76 3d                	jbe    420e81 <mbedtls_mpi_shift_l+0x181>
  420e44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  420e48:	48 83 c0 10          	add    $0x10,%rax
  420e4c:	48 89 c7             	mov    %rax,%rdi
  420e4f:	e8 f4 52 02 00       	callq  446148 <getDecryptedValueQWord>
  420e54:	31 c9                	xor    %ecx,%ecx
  420e56:	89 ce                	mov    %ecx,%esi
  420e58:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  420e5c:	48 83 ef 01          	sub    $0x1,%rdi
  420e60:	48 c1 e7 03          	shl    $0x3,%rdi
  420e64:	48 01 f8             	add    %rdi,%rax
  420e67:	48 89 c7             	mov    %rax,%rdi
  420e6a:	e8 8d 4e 02 00       	callq  445cfc <setEncryptedValueQWord>
  420e6f:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  420e73:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  420e77:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
  420e7b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  420e7f:	eb bc                	jmp    420e3d <mbedtls_mpi_shift_l+0x13d>
  420e81:	eb 00                	jmp    420e83 <mbedtls_mpi_shift_l+0x183>
  420e83:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  420e88:	0f 86 1b 01 00 00    	jbe    420fa9 <mbedtls_mpi_shift_l+0x2a9>
  420e8e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  420e92:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  420e96:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  420e9a:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  420e9e:	48 83 c1 08          	add    $0x8,%rcx
  420ea2:	48 89 cf             	mov    %rcx,%rdi
  420ea5:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  420ea9:	e8 9a 52 02 00       	callq  446148 <getDecryptedValueQWord>
  420eae:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
  420eb2:	48 39 c1             	cmp    %rax,%rcx
  420eb5:	0f 83 ec 00 00 00    	jae    420fa7 <mbedtls_mpi_shift_l+0x2a7>
  420ebb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  420ebf:	48 83 c0 10          	add    $0x10,%rax
  420ec3:	48 89 c7             	mov    %rax,%rdi
  420ec6:	e8 7d 52 02 00       	callq  446148 <getDecryptedValueQWord>
  420ecb:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  420ecf:	48 c1 e7 03          	shl    $0x3,%rdi
  420ed3:	48 01 f8             	add    %rdi,%rax
  420ed6:	48 89 c7             	mov    %rax,%rdi
  420ed9:	e8 6a 52 02 00       	callq  446148 <getDecryptedValueQWord>
  420ede:	b9 40 00 00 00       	mov    $0x40,%ecx
  420ee3:	89 cf                	mov    %ecx,%edi
  420ee5:	48 2b 7d d0          	sub    -0x30(%rbp),%rdi
  420ee9:	48 89 f9             	mov    %rdi,%rcx
  420eec:	48 d3 e8             	shr    %cl,%rax
  420eef:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  420ef3:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  420ef7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  420efb:	48 83 c0 10          	add    $0x10,%rax
  420eff:	48 89 c7             	mov    %rax,%rdi
  420f02:	48 89 4d 98          	mov    %rcx,-0x68(%rbp)
  420f06:	e8 3d 52 02 00       	callq  446148 <getDecryptedValueQWord>
  420f0b:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  420f0f:	48 c1 e1 03          	shl    $0x3,%rcx
  420f13:	48 01 c8             	add    %rcx,%rax
  420f16:	48 89 c1             	mov    %rax,%rcx
  420f19:	48 89 cf             	mov    %rcx,%rdi
  420f1c:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  420f20:	e8 23 52 02 00       	callq  446148 <getDecryptedValueQWord>
  420f25:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
  420f29:	48 d3 e0             	shl    %cl,%rax
  420f2c:	48 8b 7d 90          	mov    -0x70(%rbp),%rdi
  420f30:	48 89 c6             	mov    %rax,%rsi
  420f33:	e8 c4 4d 02 00       	callq  445cfc <setEncryptedValueQWord>
  420f38:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  420f3c:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  420f40:	48 83 c7 10          	add    $0x10,%rdi
  420f44:	48 89 45 88          	mov    %rax,-0x78(%rbp)
  420f48:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
  420f4c:	e8 f7 51 02 00       	callq  446148 <getDecryptedValueQWord>
  420f51:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  420f55:	48 c1 e6 03          	shl    $0x3,%rsi
  420f59:	48 01 f0             	add    %rsi,%rax
  420f5c:	48 89 c6             	mov    %rax,%rsi
  420f5f:	48 89 f7             	mov    %rsi,%rdi
  420f62:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  420f69:	e8 da 51 02 00       	callq  446148 <getDecryptedValueQWord>
  420f6e:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
  420f72:	48 09 f0             	or     %rsi,%rax
  420f75:	48 8b b5 78 ff ff ff 	mov    -0x88(%rbp),%rsi
  420f7c:	48 89 f7             	mov    %rsi,%rdi
  420f7f:	48 89 c6             	mov    %rax,%rsi
  420f82:	e8 75 4d 02 00       	callq  445cfc <setEncryptedValueQWord>
  420f87:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
  420f8b:	48 89 75 c8          	mov    %rsi,-0x38(%rbp)
  420f8f:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
  420f96:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  420f9a:	48 83 c0 01          	add    $0x1,%rax
  420f9e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  420fa2:	e9 ef fe ff ff       	jmpq   420e96 <mbedtls_mpi_shift_l+0x196>
  420fa7:	eb 00                	jmp    420fa9 <mbedtls_mpi_shift_l+0x2a9>
  420fa9:	eb 00                	jmp    420fab <mbedtls_mpi_shift_l+0x2ab>
  420fab:	8b 45 ec             	mov    -0x14(%rbp),%eax
  420fae:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)
  420fb4:	e8 9d 49 02 00       	callq  445956 <writeback_cache>
  420fb9:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
  420fbf:	48 81 c4 a0 00 00 00 	add    $0xa0,%rsp
  420fc6:	5d                   	pop    %rbp
  420fc7:	c3                   	retq   
  420fc8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  420fcf:	00 

0000000000420fd0 <mbedtls_mpi_shift_r>:
  420fd0:	55                   	push   %rbp
  420fd1:	48 89 e5             	mov    %rsp,%rbp
  420fd4:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
  420fdb:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
  420fdf:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
  420fe3:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
  420fea:	00 
  420feb:	eb 00                	jmp    420fed <mbedtls_mpi_shift_r+0x1d>
  420fed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  420ff1:	48 c1 e8 06          	shr    $0x6,%rax
  420ff5:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  420ff9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  420ffd:	48 83 e0 3f          	and    $0x3f,%rax
  421001:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  421005:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  421009:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  42100d:	48 83 c1 08          	add    $0x8,%rcx
  421011:	48 89 cf             	mov    %rcx,%rdi
  421014:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  421018:	e8 2b 51 02 00       	callq  446148 <getDecryptedValueQWord>
  42101d:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
  421021:	48 39 c1             	cmp    %rax,%rcx
  421024:	77 30                	ja     421056 <mbedtls_mpi_shift_r+0x86>
  421026:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42102a:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  42102e:	48 83 c1 08          	add    $0x8,%rcx
  421032:	48 89 cf             	mov    %rcx,%rdi
  421035:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  421039:	e8 0a 51 02 00       	callq  446148 <getDecryptedValueQWord>
  42103e:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
  421042:	48 39 c1             	cmp    %rax,%rcx
  421045:	0f 85 0f 01 00 00    	jne    42115a <mbedtls_mpi_shift_r+0x18a>
  42104b:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  421050:	0f 86 04 01 00 00    	jbe    42115a <mbedtls_mpi_shift_r+0x18a>
  421056:	b8 01 00 00 00       	mov    $0x1,%eax
  42105b:	89 c6                	mov    %eax,%esi
  42105d:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  421061:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
  421065:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
  42106c:	00 
  42106d:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  421071:	e8 ca 9a ff ff       	callq  41ab40 <mbedtls_mpi_grow>
  421076:	89 45 ec             	mov    %eax,-0x14(%rbp)
  421079:	83 f8 00             	cmp    $0x0,%eax
  42107c:	74 05                	je     421083 <mbedtls_mpi_shift_r+0xb3>
  42107e:	e9 cc 00 00 00       	jmpq   42114f <mbedtls_mpi_shift_r+0x17f>
  421083:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  421087:	48 83 c0 10          	add    $0x10,%rax
  42108b:	48 89 c7             	mov    %rax,%rdi
  42108e:	e8 b5 50 02 00       	callq  446148 <getDecryptedValueQWord>
  421093:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  421097:	48 83 c7 08          	add    $0x8,%rdi
  42109b:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  42109f:	e8 a4 50 02 00       	callq  446148 <getDecryptedValueQWord>
  4210a4:	48 c1 e0 03          	shl    $0x3,%rax
  4210a8:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  4210ac:	e8 a5 48 02 00       	callq  445956 <writeback_cache>
  4210b1:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
  4210b5:	48 8b 75 90          	mov    -0x70(%rbp),%rsi
  4210b9:	e8 27 56 02 00       	callq  4466e5 <decryptArrayForLibCall>
  4210be:	31 f6                	xor    %esi,%esi
  4210c0:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
  4210c4:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
  4210c8:	e8 53 ff fd ff       	callq  401020 <memset@plt>
  4210cd:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
  4210d1:	48 8b 75 90          	mov    -0x70(%rbp),%rsi
  4210d5:	e8 7c 53 02 00       	callq  446456 <encryptArrayForLibCall>
  4210da:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  4210df:	7d 0e                	jge    4210ef <mbedtls_mpi_shift_r+0x11f>
  4210e1:	31 c0                	xor    %eax,%eax
  4210e3:	89 c1                	mov    %eax,%ecx
  4210e5:	48 2b 4d f0          	sub    -0x10(%rbp),%rcx
  4210e9:	48 89 4d 88          	mov    %rcx,-0x78(%rbp)
  4210ed:	eb 08                	jmp    4210f7 <mbedtls_mpi_shift_r+0x127>
  4210ef:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4210f3:	48 89 45 88          	mov    %rax,-0x78(%rbp)
  4210f7:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  4210fb:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  4210ff:	48 83 c1 10          	add    $0x10,%rcx
  421103:	48 89 cf             	mov    %rcx,%rdi
  421106:	48 89 45 80          	mov    %rax,-0x80(%rbp)
  42110a:	e8 39 50 02 00       	callq  446148 <getDecryptedValueQWord>
  42110f:	48 89 c7             	mov    %rax,%rdi
  421112:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
  421116:	e8 e1 4b 02 00       	callq  445cfc <setEncryptedValueQWord>
  42111b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  42111f:	48 83 f9 00          	cmp    $0x0,%rcx
  421123:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  421128:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  42112e:	44 0f 4c c2          	cmovl  %edx,%r8d
  421132:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  421136:	48 89 cf             	mov    %rcx,%rdi
  421139:	44 89 c6             	mov    %r8d,%esi
  42113c:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  421143:	e8 b6 4a 02 00       	callq  445bfe <setEncryptedValueDWord>
  421148:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
  42114f:	8b 45 ec             	mov    -0x14(%rbp),%eax
  421152:	89 45 e8             	mov    %eax,-0x18(%rbp)
  421155:	e9 52 02 00 00       	jmpq   4213ac <mbedtls_mpi_shift_r+0x3dc>
  42115a:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  42115f:	0f 86 07 01 00 00    	jbe    42126c <mbedtls_mpi_shift_r+0x29c>
  421165:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
  42116c:	00 
  42116d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  421171:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  421175:	48 83 c1 08          	add    $0x8,%rcx
  421179:	48 89 cf             	mov    %rcx,%rdi
  42117c:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
  421183:	e8 c0 4f 02 00       	callq  446148 <getDecryptedValueQWord>
  421188:	48 2b 45 c8          	sub    -0x38(%rbp),%rax
  42118c:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
  421193:	48 39 c1             	cmp    %rax,%rcx
  421196:	73 6d                	jae    421205 <mbedtls_mpi_shift_r+0x235>
  421198:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42119c:	48 83 c0 10          	add    $0x10,%rax
  4211a0:	48 89 c7             	mov    %rax,%rdi
  4211a3:	e8 a0 4f 02 00       	callq  446148 <getDecryptedValueQWord>
  4211a8:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  4211ac:	48 03 7d c8          	add    -0x38(%rbp),%rdi
  4211b0:	48 c1 e7 03          	shl    $0x3,%rdi
  4211b4:	48 01 f8             	add    %rdi,%rax
  4211b7:	48 89 c7             	mov    %rax,%rdi
  4211ba:	e8 89 4f 02 00       	callq  446148 <getDecryptedValueQWord>
  4211bf:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  4211c3:	48 83 c7 10          	add    $0x10,%rdi
  4211c7:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
  4211ce:	e8 75 4f 02 00       	callq  446148 <getDecryptedValueQWord>
  4211d3:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  4211d7:	48 c1 e7 03          	shl    $0x3,%rdi
  4211db:	48 01 f8             	add    %rdi,%rax
  4211de:	48 89 c7             	mov    %rax,%rdi
  4211e1:	48 8b b5 60 ff ff ff 	mov    -0xa0(%rbp),%rsi
  4211e8:	e8 0f 4b 02 00       	callq  445cfc <setEncryptedValueQWord>
  4211ed:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
  4211f4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4211f8:	48 83 c0 01          	add    $0x1,%rax
  4211fc:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  421200:	e9 68 ff ff ff       	jmpq   42116d <mbedtls_mpi_shift_r+0x19d>
  421205:	eb 00                	jmp    421207 <mbedtls_mpi_shift_r+0x237>
  421207:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42120b:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  42120f:	48 83 c1 08          	add    $0x8,%rcx
  421213:	48 89 cf             	mov    %rcx,%rdi
  421216:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
  42121d:	e8 26 4f 02 00       	callq  446148 <getDecryptedValueQWord>
  421222:	48 8b 8d 50 ff ff ff 	mov    -0xb0(%rbp),%rcx
  421229:	48 39 c1             	cmp    %rax,%rcx
  42122c:	73 3c                	jae    42126a <mbedtls_mpi_shift_r+0x29a>
  42122e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  421232:	48 83 c0 10          	add    $0x10,%rax
  421236:	48 89 c7             	mov    %rax,%rdi
  421239:	e8 0a 4f 02 00       	callq  446148 <getDecryptedValueQWord>
  42123e:	31 c9                	xor    %ecx,%ecx
  421240:	89 ce                	mov    %ecx,%esi
  421242:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  421246:	48 c1 e7 03          	shl    $0x3,%rdi
  42124a:	48 01 f8             	add    %rdi,%rax
  42124d:	48 89 c7             	mov    %rax,%rdi
  421250:	e8 a7 4a 02 00       	callq  445cfc <setEncryptedValueQWord>
  421255:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  42125c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  421260:	48 83 c0 01          	add    $0x1,%rax
  421264:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  421268:	eb 9d                	jmp    421207 <mbedtls_mpi_shift_r+0x237>
  42126a:	eb 00                	jmp    42126c <mbedtls_mpi_shift_r+0x29c>
  42126c:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  421271:	0f 86 2e 01 00 00    	jbe    4213a5 <mbedtls_mpi_shift_r+0x3d5>
  421277:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42127b:	48 83 c0 08          	add    $0x8,%rax
  42127f:	48 89 c7             	mov    %rax,%rdi
  421282:	e8 c1 4e 02 00       	callq  446148 <getDecryptedValueQWord>
  421287:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  42128b:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  421290:	0f 86 0d 01 00 00    	jbe    4213a3 <mbedtls_mpi_shift_r+0x3d3>
  421296:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42129a:	48 83 c0 10          	add    $0x10,%rax
  42129e:	48 89 c7             	mov    %rax,%rdi
  4212a1:	e8 a2 4e 02 00       	callq  446148 <getDecryptedValueQWord>
  4212a6:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  4212aa:	48 83 ef 01          	sub    $0x1,%rdi
  4212ae:	48 c1 e7 03          	shl    $0x3,%rdi
  4212b2:	48 01 f8             	add    %rdi,%rax
  4212b5:	48 89 c7             	mov    %rax,%rdi
  4212b8:	e8 8b 4e 02 00       	callq  446148 <getDecryptedValueQWord>
  4212bd:	b9 40 00 00 00       	mov    $0x40,%ecx
  4212c2:	89 cf                	mov    %ecx,%edi
  4212c4:	48 2b 7d c0          	sub    -0x40(%rbp),%rdi
  4212c8:	48 89 f9             	mov    %rdi,%rcx
  4212cb:	48 d3 e0             	shl    %cl,%rax
  4212ce:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  4212d2:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  4212d6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4212da:	48 83 c0 10          	add    $0x10,%rax
  4212de:	48 89 c7             	mov    %rax,%rdi
  4212e1:	48 89 8d 40 ff ff ff 	mov    %rcx,-0xc0(%rbp)
  4212e8:	e8 5b 4e 02 00       	callq  446148 <getDecryptedValueQWord>
  4212ed:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  4212f1:	48 83 e9 01          	sub    $0x1,%rcx
  4212f5:	48 c1 e1 03          	shl    $0x3,%rcx
  4212f9:	48 01 c8             	add    %rcx,%rax
  4212fc:	48 89 c1             	mov    %rax,%rcx
  4212ff:	48 89 cf             	mov    %rcx,%rdi
  421302:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
  421309:	e8 3a 4e 02 00       	callq  446148 <getDecryptedValueQWord>
  42130e:	48 8b 8d 40 ff ff ff 	mov    -0xc0(%rbp),%rcx
  421315:	48 d3 e8             	shr    %cl,%rax
  421318:	48 8b bd 38 ff ff ff 	mov    -0xc8(%rbp),%rdi
  42131f:	48 89 c6             	mov    %rax,%rsi
  421322:	e8 d5 49 02 00       	callq  445cfc <setEncryptedValueQWord>
  421327:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  42132b:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  42132f:	48 83 c7 10          	add    $0x10,%rdi
  421333:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
  42133a:	48 89 b5 28 ff ff ff 	mov    %rsi,-0xd8(%rbp)
  421341:	e8 02 4e 02 00       	callq  446148 <getDecryptedValueQWord>
  421346:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  42134a:	48 83 ee 01          	sub    $0x1,%rsi
  42134e:	48 c1 e6 03          	shl    $0x3,%rsi
  421352:	48 01 f0             	add    %rsi,%rax
  421355:	48 89 c6             	mov    %rax,%rsi
  421358:	48 89 f7             	mov    %rsi,%rdi
  42135b:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
  421362:	e8 e1 4d 02 00       	callq  446148 <getDecryptedValueQWord>
  421367:	48 8b b5 28 ff ff ff 	mov    -0xd8(%rbp),%rsi
  42136e:	48 09 f0             	or     %rsi,%rax
  421371:	48 8b b5 20 ff ff ff 	mov    -0xe0(%rbp),%rsi
  421378:	48 89 f7             	mov    %rsi,%rdi
  42137b:	48 89 c6             	mov    %rax,%rsi
  42137e:	e8 79 49 02 00       	callq  445cfc <setEncryptedValueQWord>
  421383:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
  421387:	48 89 75 b8          	mov    %rsi,-0x48(%rbp)
  42138b:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
  421392:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  421396:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
  42139a:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  42139e:	e9 e8 fe ff ff       	jmpq   42128b <mbedtls_mpi_shift_r+0x2bb>
  4213a3:	eb 00                	jmp    4213a5 <mbedtls_mpi_shift_r+0x3d5>
  4213a5:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
  4213ac:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4213af:	89 85 14 ff ff ff    	mov    %eax,-0xec(%rbp)
  4213b5:	e8 9c 45 02 00       	callq  445956 <writeback_cache>
  4213ba:	8b 85 14 ff ff ff    	mov    -0xec(%rbp),%eax
  4213c0:	48 81 c4 f0 00 00 00 	add    $0xf0,%rsp
  4213c7:	5d                   	pop    %rbp
  4213c8:	c3                   	retq   
  4213c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004213d0 <mbedtls_mpi_read_binary>:
  4213d0:	55                   	push   %rbp
  4213d1:	48 89 e5             	mov    %rsp,%rbp
  4213d4:	48 81 ec 30 01 00 00 	sub    $0x130,%rsp
  4213db:	48 89 7d b0          	mov    %rdi,-0x50(%rbp)
  4213df:	48 89 75 a8          	mov    %rsi,-0x58(%rbp)
  4213e3:	48 89 55 a0          	mov    %rdx,-0x60(%rbp)
  4213e7:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
  4213eb:	48 c1 ea 03          	shr    $0x3,%rdx
  4213ef:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
  4213f3:	48 83 e6 07          	and    $0x7,%rsi
  4213f7:	48 83 fe 00          	cmp    $0x0,%rsi
  4213fb:	0f 95 c0             	setne  %al
  4213fe:	24 01                	and    $0x1,%al
  421400:	0f b6 c8             	movzbl %al,%ecx
  421403:	48 63 f1             	movslq %ecx,%rsi
  421406:	48 01 f2             	add    %rsi,%rdx
  421409:	48 89 55 80          	mov    %rdx,-0x80(%rbp)
  42140d:	eb 00                	jmp    42140f <mbedtls_mpi_read_binary+0x3f>
  42140f:	eb 00                	jmp    421411 <mbedtls_mpi_read_binary+0x41>
  421411:	eb 00                	jmp    421413 <mbedtls_mpi_read_binary+0x43>
  421413:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  421417:	48 83 c0 08          	add    $0x8,%rax
  42141b:	48 89 c7             	mov    %rax,%rdi
  42141e:	e8 25 4d 02 00       	callq  446148 <getDecryptedValueQWord>
  421423:	48 3b 45 80          	cmp    -0x80(%rbp),%rax
  421427:	0f 84 bf 01 00 00    	je     4215ec <mbedtls_mpi_read_binary+0x21c>
  42142d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  421431:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  421435:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
  42143a:	75 05                	jne    421441 <mbedtls_mpi_read_binary+0x71>
  42143c:	e9 3f 01 00 00       	jmpq   421580 <mbedtls_mpi_read_binary+0x1b0>
  421441:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  421445:	48 83 c0 10          	add    $0x10,%rax
  421449:	48 89 c7             	mov    %rax,%rdi
  42144c:	e8 f7 4c 02 00       	callq  446148 <getDecryptedValueQWord>
  421451:	48 83 f8 00          	cmp    $0x0,%rax
  421455:	0f 84 df 00 00 00    	je     42153a <mbedtls_mpi_read_binary+0x16a>
  42145b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  42145f:	48 83 c0 10          	add    $0x10,%rax
  421463:	48 89 c7             	mov    %rax,%rdi
  421466:	e8 dd 4c 02 00       	callq  446148 <getDecryptedValueQWord>
  42146b:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
  42146f:	48 83 c7 08          	add    $0x8,%rdi
  421473:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  42147a:	e8 c9 4c 02 00       	callq  446148 <getDecryptedValueQWord>
  42147f:	48 8b bd 78 ff ff ff 	mov    -0x88(%rbp),%rdi
  421486:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  42148a:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  42148e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  421492:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  421496:	48 c1 e1 03          	shl    $0x3,%rcx
  42149a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  42149e:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  4214a2:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  4214a9:	00 
  4214aa:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  4214ae:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  4214b2:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
  4214b9:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
  4214c0:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
  4214c7:	e8 8a 44 02 00       	callq  445956 <writeback_cache>
  4214cc:	48 8b bd 68 ff ff ff 	mov    -0x98(%rbp),%rdi
  4214d3:	48 8b b5 60 ff ff ff 	mov    -0xa0(%rbp),%rsi
  4214da:	e8 06 52 02 00       	callq  4466e5 <decryptArrayForLibCall>
  4214df:	31 f6                	xor    %esi,%esi
  4214e1:	48 8b bd 68 ff ff ff 	mov    -0x98(%rbp),%rdi
  4214e8:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
  4214ef:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  4214f6:	ff d0                	callq  *%rax
  4214f8:	48 8b bd 68 ff ff ff 	mov    -0x98(%rbp),%rdi
  4214ff:	48 8b b5 60 ff ff ff 	mov    -0xa0(%rbp),%rsi
  421506:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
  42150d:	e8 44 4f 02 00       	callq  446456 <encryptArrayForLibCall>
  421512:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  421516:	48 83 c0 10          	add    $0x10,%rax
  42151a:	48 89 c7             	mov    %rax,%rdi
  42151d:	e8 26 4c 02 00       	callq  446148 <getDecryptedValueQWord>
  421522:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
  421529:	e8 28 44 02 00       	callq  445956 <writeback_cache>
  42152e:	48 8b bd 50 ff ff ff 	mov    -0xb0(%rbp),%rdi
  421535:	e8 a6 fb fd ff       	callq  4010e0 <free@plt>
  42153a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  42153e:	48 89 c7             	mov    %rax,%rdi
  421541:	be 01 00 00 00       	mov    $0x1,%esi
  421546:	e8 b3 46 02 00       	callq  445bfe <setEncryptedValueDWord>
  42154b:	31 f6                	xor    %esi,%esi
  42154d:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
  421551:	48 83 c7 08          	add    $0x8,%rdi
  421555:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  42155c:	e8 9b 47 02 00       	callq  445cfc <setEncryptedValueQWord>
  421561:	31 c9                	xor    %ecx,%ecx
  421563:	89 ce                	mov    %ecx,%esi
  421565:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
  421569:	48 83 c7 10          	add    $0x10,%rdi
  42156d:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
  421574:	e8 83 47 02 00       	callq  445cfc <setEncryptedValueQWord>
  421579:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
  421580:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  421584:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  421588:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42158c:	48 89 c7             	mov    %rax,%rdi
  42158f:	be 01 00 00 00       	mov    $0x1,%esi
  421594:	e8 65 46 02 00       	callq  445bfe <setEncryptedValueDWord>
  421599:	31 f6                	xor    %esi,%esi
  42159b:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  42159f:	48 83 c7 08          	add    $0x8,%rdi
  4215a3:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
  4215aa:	e8 4d 47 02 00       	callq  445cfc <setEncryptedValueQWord>
  4215af:	31 c9                	xor    %ecx,%ecx
  4215b1:	89 ce                	mov    %ecx,%esi
  4215b3:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  4215b7:	48 83 c7 10          	add    $0x10,%rdi
  4215bb:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
  4215c2:	e8 35 47 02 00       	callq  445cfc <setEncryptedValueQWord>
  4215c7:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
  4215ce:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
  4215d2:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
  4215d6:	e8 65 95 ff ff       	callq  41ab40 <mbedtls_mpi_grow>
  4215db:	89 45 9c             	mov    %eax,-0x64(%rbp)
  4215de:	83 f8 00             	cmp    $0x0,%eax
  4215e1:	74 05                	je     4215e8 <mbedtls_mpi_read_binary+0x218>
  4215e3:	e9 ee 01 00 00       	jmpq   4217d6 <mbedtls_mpi_read_binary+0x406>
  4215e8:	eb 00                	jmp    4215ea <mbedtls_mpi_read_binary+0x21a>
  4215ea:	eb 00                	jmp    4215ec <mbedtls_mpi_read_binary+0x21c>
  4215ec:	eb 00                	jmp    4215ee <mbedtls_mpi_read_binary+0x21e>
  4215ee:	b8 01 00 00 00       	mov    $0x1,%eax
  4215f3:	89 c6                	mov    %eax,%esi
  4215f5:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  4215f9:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
  4215fd:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
  421604:	00 
  421605:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  421609:	e8 32 95 ff ff       	callq  41ab40 <mbedtls_mpi_grow>
  42160e:	89 45 ec             	mov    %eax,-0x14(%rbp)
  421611:	83 f8 00             	cmp    $0x0,%eax
  421614:	74 05                	je     42161b <mbedtls_mpi_read_binary+0x24b>
  421616:	e9 f3 00 00 00       	jmpq   42170e <mbedtls_mpi_read_binary+0x33e>
  42161b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42161f:	48 83 c0 10          	add    $0x10,%rax
  421623:	48 89 c7             	mov    %rax,%rdi
  421626:	e8 1d 4b 02 00       	callq  446148 <getDecryptedValueQWord>
  42162b:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42162f:	48 83 c7 08          	add    $0x8,%rdi
  421633:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
  42163a:	e8 09 4b 02 00       	callq  446148 <getDecryptedValueQWord>
  42163f:	48 c1 e0 03          	shl    $0x3,%rax
  421643:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
  42164a:	e8 07 43 02 00       	callq  445956 <writeback_cache>
  42164f:	48 8b bd 18 ff ff ff 	mov    -0xe8(%rbp),%rdi
  421656:	48 8b b5 10 ff ff ff 	mov    -0xf0(%rbp),%rsi
  42165d:	e8 83 50 02 00       	callq  4466e5 <decryptArrayForLibCall>
  421662:	31 f6                	xor    %esi,%esi
  421664:	48 8b bd 18 ff ff ff 	mov    -0xe8(%rbp),%rdi
  42166b:	48 8b 95 10 ff ff ff 	mov    -0xf0(%rbp),%rdx
  421672:	e8 a9 f9 fd ff       	callq  401020 <memset@plt>
  421677:	48 8b bd 18 ff ff ff 	mov    -0xe8(%rbp),%rdi
  42167e:	48 8b b5 10 ff ff ff 	mov    -0xf0(%rbp),%rsi
  421685:	e8 cc 4d 02 00       	callq  446456 <encryptArrayForLibCall>
  42168a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  42168f:	7d 11                	jge    4216a2 <mbedtls_mpi_read_binary+0x2d2>
  421691:	31 c0                	xor    %eax,%eax
  421693:	89 c1                	mov    %eax,%ecx
  421695:	48 2b 4d f0          	sub    -0x10(%rbp),%rcx
  421699:	48 89 8d 08 ff ff ff 	mov    %rcx,-0xf8(%rbp)
  4216a0:	eb 0b                	jmp    4216ad <mbedtls_mpi_read_binary+0x2dd>
  4216a2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4216a6:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
  4216ad:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
  4216b4:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  4216b8:	48 83 c1 10          	add    $0x10,%rcx
  4216bc:	48 89 cf             	mov    %rcx,%rdi
  4216bf:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
  4216c6:	e8 7d 4a 02 00       	callq  446148 <getDecryptedValueQWord>
  4216cb:	48 89 c7             	mov    %rax,%rdi
  4216ce:	48 8b b5 00 ff ff ff 	mov    -0x100(%rbp),%rsi
  4216d5:	e8 22 46 02 00       	callq  445cfc <setEncryptedValueQWord>
  4216da:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  4216de:	48 83 f9 00          	cmp    $0x0,%rcx
  4216e2:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  4216e7:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  4216ed:	44 0f 4c c2          	cmovl  %edx,%r8d
  4216f1:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  4216f5:	48 89 cf             	mov    %rcx,%rdi
  4216f8:	44 89 c6             	mov    %r8d,%esi
  4216fb:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
  421702:	e8 f7 44 02 00       	callq  445bfe <setEncryptedValueDWord>
  421707:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
  42170e:	8b 45 ec             	mov    -0x14(%rbp),%eax
  421711:	89 45 9c             	mov    %eax,-0x64(%rbp)
  421714:	83 f8 00             	cmp    $0x0,%eax
  421717:	74 05                	je     42171e <mbedtls_mpi_read_binary+0x34e>
  421719:	e9 b8 00 00 00       	jmpq   4217d6 <mbedtls_mpi_read_binary+0x406>
  42171e:	eb 00                	jmp    421720 <mbedtls_mpi_read_binary+0x350>
  421720:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  421724:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  421728:	48 c7 45 88 00 00 00 	movq   $0x0,-0x78(%rbp)
  42172f:	00 
  421730:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
  421735:	0f 86 99 00 00 00    	jbe    4217d4 <mbedtls_mpi_read_binary+0x404>
  42173b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  42173f:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  421743:	48 83 e9 01          	sub    $0x1,%rcx
  421747:	0f b6 14 08          	movzbl (%rax,%rcx,1),%edx
  42174b:	89 d0                	mov    %edx,%eax
  42174d:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
  421751:	48 83 e1 07          	and    $0x7,%rcx
  421755:	48 c1 e1 03          	shl    $0x3,%rcx
  421759:	48 d3 e0             	shl    %cl,%rax
  42175c:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
  421760:	48 83 c6 10          	add    $0x10,%rsi
  421764:	48 89 f7             	mov    %rsi,%rdi
  421767:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
  42176e:	e8 d5 49 02 00       	callq  446148 <getDecryptedValueQWord>
  421773:	48 8b 75 88          	mov    -0x78(%rbp),%rsi
  421777:	48 c1 ee 03          	shr    $0x3,%rsi
  42177b:	48 c1 e6 03          	shl    $0x3,%rsi
  42177f:	48 01 f0             	add    %rsi,%rax
  421782:	48 89 c6             	mov    %rax,%rsi
  421785:	48 89 f7             	mov    %rsi,%rdi
  421788:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
  42178f:	e8 b4 49 02 00       	callq  446148 <getDecryptedValueQWord>
  421794:	48 8b b5 e8 fe ff ff 	mov    -0x118(%rbp),%rsi
  42179b:	48 09 f0             	or     %rsi,%rax
  42179e:	48 8b b5 e0 fe ff ff 	mov    -0x120(%rbp),%rsi
  4217a5:	48 89 f7             	mov    %rsi,%rdi
  4217a8:	48 89 c6             	mov    %rax,%rsi
  4217ab:	e8 4c 45 02 00       	callq  445cfc <setEncryptedValueQWord>
  4217b0:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
  4217b7:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  4217bb:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
  4217bf:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  4217c3:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  4217c7:	48 83 c0 01          	add    $0x1,%rax
  4217cb:	48 89 45 88          	mov    %rax,-0x78(%rbp)
  4217cf:	e9 5c ff ff ff       	jmpq   421730 <mbedtls_mpi_read_binary+0x360>
  4217d4:	eb 00                	jmp    4217d6 <mbedtls_mpi_read_binary+0x406>
  4217d6:	8b 45 9c             	mov    -0x64(%rbp),%eax
  4217d9:	89 85 d4 fe ff ff    	mov    %eax,-0x12c(%rbp)
  4217df:	e8 72 41 02 00       	callq  445956 <writeback_cache>
  4217e4:	8b 85 d4 fe ff ff    	mov    -0x12c(%rbp),%eax
  4217ea:	48 81 c4 30 01 00 00 	add    $0x130,%rsp
  4217f1:	5d                   	pop    %rbp
  4217f2:	c3                   	retq   
  4217f3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  4217fa:	84 00 00 00 00 00 

0000000000421800 <mbedtls_mpi_write_binary>:
  421800:	55                   	push   %rbp
  421801:	48 89 e5             	mov    %rsp,%rbp
  421804:	48 83 ec 50          	sub    $0x50,%rsp
  421808:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  42180c:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  421810:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
  421814:	eb 00                	jmp    421816 <mbedtls_mpi_write_binary+0x16>
  421816:	eb 00                	jmp    421818 <mbedtls_mpi_write_binary+0x18>
  421818:	eb 00                	jmp    42181a <mbedtls_mpi_write_binary+0x1a>
  42181a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42181e:	48 83 c0 08          	add    $0x8,%rax
  421822:	48 89 c7             	mov    %rax,%rdi
  421825:	e8 1e 49 02 00       	callq  446148 <getDecryptedValueQWord>
  42182a:	48 c1 e0 03          	shl    $0x3,%rax
  42182e:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  421832:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  421836:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
  42183a:	73 3a                	jae    421876 <mbedtls_mpi_write_binary+0x76>
  42183c:	31 f6                	xor    %esi,%esi
  42183e:	31 c0                	xor    %eax,%eax
  421840:	89 c1                	mov    %eax,%ecx
  421842:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  421846:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
  42184a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  42184e:	48 03 55 e0          	add    -0x20(%rbp),%rdx
  421852:	48 2b 4d d8          	sub    -0x28(%rbp),%rcx
  421856:	48 01 ca             	add    %rcx,%rdx
  421859:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  42185d:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  421861:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  421865:	48 2b 4d d8          	sub    -0x28(%rbp),%rcx
  421869:	48 89 ca             	mov    %rcx,%rdx
  42186c:	e8 af f7 fd ff       	callq  401020 <memset@plt>
  421871:	e9 85 00 00 00       	jmpq   4218fb <mbedtls_mpi_write_binary+0xfb>
  421876:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42187a:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  42187e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  421882:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  421886:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42188a:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  42188e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  421892:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
  421896:	73 61                	jae    4218f9 <mbedtls_mpi_write_binary+0xf9>
  421898:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42189c:	48 83 c0 10          	add    $0x10,%rax
  4218a0:	48 89 c7             	mov    %rax,%rdi
  4218a3:	e8 a0 48 02 00       	callq  446148 <getDecryptedValueQWord>
  4218a8:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  4218ac:	48 c1 ef 03          	shr    $0x3,%rdi
  4218b0:	48 c1 e7 03          	shl    $0x3,%rdi
  4218b4:	48 01 f8             	add    %rdi,%rax
  4218b7:	48 89 c7             	mov    %rax,%rdi
  4218ba:	e8 89 48 02 00       	callq  446148 <getDecryptedValueQWord>
  4218bf:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  4218c3:	48 83 e7 07          	and    $0x7,%rdi
  4218c7:	48 c1 e7 03          	shl    $0x3,%rdi
  4218cb:	48 89 f9             	mov    %rdi,%rcx
  4218ce:	48 d3 e8             	shr    %cl,%rax
  4218d1:	48 25 ff 00 00 00    	and    $0xff,%rax
  4218d7:	48 83 f8 00          	cmp    $0x0,%rax
  4218db:	74 0c                	je     4218e9 <mbedtls_mpi_write_binary+0xe9>
  4218dd:	c7 45 fc f8 ff ff ff 	movl   $0xfffffff8,-0x4(%rbp)
  4218e4:	e9 8d 00 00 00       	jmpq   421976 <mbedtls_mpi_write_binary+0x176>
  4218e9:	eb 00                	jmp    4218eb <mbedtls_mpi_write_binary+0xeb>
  4218eb:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4218ef:	48 83 c0 01          	add    $0x1,%rax
  4218f3:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  4218f7:	eb 95                	jmp    42188e <mbedtls_mpi_write_binary+0x8e>
  4218f9:	eb 00                	jmp    4218fb <mbedtls_mpi_write_binary+0xfb>
  4218fb:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
  421902:	00 
  421903:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  421907:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
  42190b:	73 62                	jae    42196f <mbedtls_mpi_write_binary+0x16f>
  42190d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  421911:	48 83 c0 10          	add    $0x10,%rax
  421915:	48 89 c7             	mov    %rax,%rdi
  421918:	e8 2b 48 02 00       	callq  446148 <getDecryptedValueQWord>
  42191d:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  421921:	48 c1 ef 03          	shr    $0x3,%rdi
  421925:	48 c1 e7 03          	shl    $0x3,%rdi
  421929:	48 01 f8             	add    %rdi,%rax
  42192c:	48 89 c7             	mov    %rax,%rdi
  42192f:	e8 14 48 02 00       	callq  446148 <getDecryptedValueQWord>
  421934:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  421938:	48 83 e7 07          	and    $0x7,%rdi
  42193c:	48 c1 e7 03          	shl    $0x3,%rdi
  421940:	48 89 f9             	mov    %rdi,%rcx
  421943:	48 d3 e8             	shr    %cl,%rax
  421946:	48 25 ff 00 00 00    	and    $0xff,%rax
  42194c:	88 c1                	mov    %al,%cl
  42194e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  421952:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  421956:	48 2b 7d c0          	sub    -0x40(%rbp),%rdi
  42195a:	48 83 ef 01          	sub    $0x1,%rdi
  42195e:	88 0c 38             	mov    %cl,(%rax,%rdi,1)
  421961:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  421965:	48 83 c0 01          	add    $0x1,%rax
  421969:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  42196d:	eb 94                	jmp    421903 <mbedtls_mpi_write_binary+0x103>
  42196f:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  421976:	8b 45 fc             	mov    -0x4(%rbp),%eax
  421979:	89 45 bc             	mov    %eax,-0x44(%rbp)
  42197c:	e8 d5 3f 02 00       	callq  445956 <writeback_cache>
  421981:	8b 45 bc             	mov    -0x44(%rbp),%eax
  421984:	48 83 c4 50          	add    $0x50,%rsp
  421988:	5d                   	pop    %rbp
  421989:	c3                   	retq   
  42198a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000421990 <mbedtls_mpi_mod_mpi>:
  421990:	55                   	push   %rbp
  421991:	48 89 e5             	mov    %rsp,%rbp
  421994:	48 81 ec 40 01 00 00 	sub    $0x140,%rsp
  42199b:	48 89 bd 50 ff ff ff 	mov    %rdi,-0xb0(%rbp)
  4219a2:	48 89 b5 48 ff ff ff 	mov    %rsi,-0xb8(%rbp)
  4219a9:	48 89 95 40 ff ff ff 	mov    %rdx,-0xc0(%rbp)
  4219b0:	eb 00                	jmp    4219b2 <mbedtls_mpi_mod_mpi+0x22>
  4219b2:	eb 00                	jmp    4219b4 <mbedtls_mpi_mod_mpi+0x24>
  4219b4:	eb 00                	jmp    4219b6 <mbedtls_mpi_mod_mpi+0x26>
  4219b6:	eb 00                	jmp    4219b8 <mbedtls_mpi_mod_mpi+0x28>
  4219b8:	eb 00                	jmp    4219ba <mbedtls_mpi_mod_mpi+0x2a>
  4219ba:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
  4219c1:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
  4219c8:	e8 89 3f 02 00       	callq  445956 <writeback_cache>
  4219cd:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
  4219d4:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  4219d8:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
  4219df:	00 
  4219e0:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
  4219e5:	7d 11                	jge    4219f8 <mbedtls_mpi_mod_mpi+0x68>
  4219e7:	31 c0                	xor    %eax,%eax
  4219e9:	89 c1                	mov    %eax,%ecx
  4219eb:	48 2b 4d b0          	sub    -0x50(%rbp),%rcx
  4219ef:	48 89 8d 28 ff ff ff 	mov    %rcx,-0xd8(%rbp)
  4219f6:	eb 0b                	jmp    421a03 <mbedtls_mpi_mod_mpi+0x73>
  4219f8:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  4219fc:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
  421a03:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  421a0a:	48 8d 8d 60 ff ff ff 	lea    -0xa0(%rbp),%rcx
  421a11:	48 89 cf             	mov    %rcx,%rdi
  421a14:	48 89 c6             	mov    %rax,%rsi
  421a17:	e8 e0 42 02 00       	callq  445cfc <setEncryptedValueQWord>
  421a1c:	48 8d 4d 80          	lea    -0x80(%rbp),%rcx
  421a20:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
  421a24:	48 83 fe 00          	cmp    $0x0,%rsi
  421a28:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  421a2d:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  421a33:	44 0f 4c c2          	cmovl  %edx,%r8d
  421a37:	48 89 cf             	mov    %rcx,%rdi
  421a3a:	44 89 c6             	mov    %r8d,%esi
  421a3d:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
  421a44:	e8 b5 41 02 00       	callq  445bfe <setEncryptedValueDWord>
  421a49:	ba 01 00 00 00       	mov    $0x1,%edx
  421a4e:	89 d6                	mov    %edx,%esi
  421a50:	48 8d 4d 80          	lea    -0x80(%rbp),%rcx
  421a54:	48 83 c1 08          	add    $0x8,%rcx
  421a58:	48 89 cf             	mov    %rcx,%rdi
  421a5b:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
  421a62:	e8 95 42 02 00       	callq  445cfc <setEncryptedValueQWord>
  421a67:	48 8d b5 60 ff ff ff 	lea    -0xa0(%rbp),%rsi
  421a6e:	48 8d 4d 80          	lea    -0x80(%rbp),%rcx
  421a72:	48 83 c1 10          	add    $0x10,%rcx
  421a76:	48 89 cf             	mov    %rcx,%rdi
  421a79:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
  421a80:	e8 77 42 02 00       	callq  445cfc <setEncryptedValueQWord>
  421a85:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
  421a89:	48 8d 75 80          	lea    -0x80(%rbp),%rsi
  421a8d:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
  421a94:	e8 b7 cf ff ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  421a99:	89 85 04 ff ff ff    	mov    %eax,-0xfc(%rbp)
  421a9f:	e8 b2 3e 02 00       	callq  445956 <writeback_cache>
  421aa4:	8b 85 04 ff ff ff    	mov    -0xfc(%rbp),%eax
  421aaa:	83 f8 00             	cmp    $0x0,%eax
  421aad:	7d 0f                	jge    421abe <mbedtls_mpi_mod_mpi+0x12e>
  421aaf:	c7 85 5c ff ff ff f6 	movl   $0xfffffff6,-0xa4(%rbp)
  421ab6:	ff ff ff 
  421ab9:	e9 ae 01 00 00       	jmpq   421c6c <mbedtls_mpi_mod_mpi+0x2dc>
  421abe:	eb 00                	jmp    421ac0 <mbedtls_mpi_mod_mpi+0x130>
  421ac0:	31 c0                	xor    %eax,%eax
  421ac2:	89 c7                	mov    %eax,%edi
  421ac4:	48 8b b5 50 ff ff ff 	mov    -0xb0(%rbp),%rsi
  421acb:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
  421ad2:	48 8b 8d 40 ff ff ff 	mov    -0xc0(%rbp),%rcx
  421ad9:	e8 12 d2 ff ff       	callq  41ecf0 <mbedtls_mpi_div_mpi>
  421ade:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
  421ae4:	83 f8 00             	cmp    $0x0,%eax
  421ae7:	74 05                	je     421aee <mbedtls_mpi_mod_mpi+0x15e>
  421ae9:	e9 72 01 00 00       	jmpq   421c60 <mbedtls_mpi_mod_mpi+0x2d0>
  421aee:	eb 00                	jmp    421af0 <mbedtls_mpi_mod_mpi+0x160>
  421af0:	eb 00                	jmp    421af2 <mbedtls_mpi_mod_mpi+0x162>
  421af2:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
  421af9:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
  421b00:	e8 51 3e 02 00       	callq  445956 <writeback_cache>
  421b05:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  421b0c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  421b10:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
  421b17:	00 
  421b18:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  421b1d:	7d 11                	jge    421b30 <mbedtls_mpi_mod_mpi+0x1a0>
  421b1f:	31 c0                	xor    %eax,%eax
  421b21:	89 c1                	mov    %eax,%ecx
  421b23:	48 2b 4d f0          	sub    -0x10(%rbp),%rcx
  421b27:	48 89 8d f0 fe ff ff 	mov    %rcx,-0x110(%rbp)
  421b2e:	eb 0b                	jmp    421b3b <mbedtls_mpi_mod_mpi+0x1ab>
  421b30:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  421b34:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
  421b3b:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
  421b42:	48 8d 8d 60 ff ff ff 	lea    -0xa0(%rbp),%rcx
  421b49:	48 89 cf             	mov    %rcx,%rdi
  421b4c:	48 89 c6             	mov    %rax,%rsi
  421b4f:	e8 a8 41 02 00       	callq  445cfc <setEncryptedValueQWord>
  421b54:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
  421b58:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  421b5c:	48 83 fe 00          	cmp    $0x0,%rsi
  421b60:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  421b65:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  421b6b:	44 0f 4c c2          	cmovl  %edx,%r8d
  421b6f:	48 89 cf             	mov    %rcx,%rdi
  421b72:	44 89 c6             	mov    %r8d,%esi
  421b75:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
  421b7c:	e8 7d 40 02 00       	callq  445bfe <setEncryptedValueDWord>
  421b81:	ba 01 00 00 00       	mov    $0x1,%edx
  421b86:	89 d6                	mov    %edx,%esi
  421b88:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
  421b8c:	48 83 c1 08          	add    $0x8,%rcx
  421b90:	48 89 cf             	mov    %rcx,%rdi
  421b93:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
  421b9a:	e8 5d 41 02 00       	callq  445cfc <setEncryptedValueQWord>
  421b9f:	48 8d b5 60 ff ff ff 	lea    -0xa0(%rbp),%rsi
  421ba6:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
  421baa:	48 83 c1 10          	add    $0x10,%rcx
  421bae:	48 89 cf             	mov    %rcx,%rdi
  421bb1:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
  421bb8:	e8 3f 41 02 00       	callq  445cfc <setEncryptedValueQWord>
  421bbd:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  421bc1:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
  421bc5:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
  421bcc:	e8 7f ce ff ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  421bd1:	89 85 cc fe ff ff    	mov    %eax,-0x134(%rbp)
  421bd7:	e8 7a 3d 02 00       	callq  445956 <writeback_cache>
  421bdc:	8b 85 cc fe ff ff    	mov    -0x134(%rbp),%eax
  421be2:	83 f8 00             	cmp    $0x0,%eax
  421be5:	7d 30                	jge    421c17 <mbedtls_mpi_mod_mpi+0x287>
  421be7:	eb 00                	jmp    421be9 <mbedtls_mpi_mod_mpi+0x259>
  421be9:	48 8b bd 50 ff ff ff 	mov    -0xb0(%rbp),%rdi
  421bf0:	48 8b b5 50 ff ff ff 	mov    -0xb0(%rbp),%rsi
  421bf7:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
  421bfe:	e8 9d a8 ff ff       	callq  41c4a0 <mbedtls_mpi_add_mpi>
  421c03:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
  421c09:	83 f8 00             	cmp    $0x0,%eax
  421c0c:	74 02                	je     421c10 <mbedtls_mpi_mod_mpi+0x280>
  421c0e:	eb 50                	jmp    421c60 <mbedtls_mpi_mod_mpi+0x2d0>
  421c10:	eb 00                	jmp    421c12 <mbedtls_mpi_mod_mpi+0x282>
  421c12:	e9 db fe ff ff       	jmpq   421af2 <mbedtls_mpi_mod_mpi+0x162>
  421c17:	eb 00                	jmp    421c19 <mbedtls_mpi_mod_mpi+0x289>
  421c19:	48 8b bd 50 ff ff ff 	mov    -0xb0(%rbp),%rdi
  421c20:	48 8b b5 40 ff ff ff 	mov    -0xc0(%rbp),%rsi
  421c27:	e8 24 ce ff ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  421c2c:	83 f8 00             	cmp    $0x0,%eax
  421c2f:	7c 2d                	jl     421c5e <mbedtls_mpi_mod_mpi+0x2ce>
  421c31:	eb 00                	jmp    421c33 <mbedtls_mpi_mod_mpi+0x2a3>
  421c33:	48 8b bd 50 ff ff ff 	mov    -0xb0(%rbp),%rdi
  421c3a:	48 8b b5 50 ff ff ff 	mov    -0xb0(%rbp),%rsi
  421c41:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
  421c48:	e8 e3 9c ff ff       	callq  41b930 <mbedtls_mpi_sub_mpi>
  421c4d:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
  421c53:	83 f8 00             	cmp    $0x0,%eax
  421c56:	74 02                	je     421c5a <mbedtls_mpi_mod_mpi+0x2ca>
  421c58:	eb 06                	jmp    421c60 <mbedtls_mpi_mod_mpi+0x2d0>
  421c5a:	eb 00                	jmp    421c5c <mbedtls_mpi_mod_mpi+0x2cc>
  421c5c:	eb bb                	jmp    421c19 <mbedtls_mpi_mod_mpi+0x289>
  421c5e:	eb 00                	jmp    421c60 <mbedtls_mpi_mod_mpi+0x2d0>
  421c60:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
  421c66:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%rbp)
  421c6c:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
  421c72:	89 85 c8 fe ff ff    	mov    %eax,-0x138(%rbp)
  421c78:	e8 d9 3c 02 00       	callq  445956 <writeback_cache>
  421c7d:	8b 85 c8 fe ff ff    	mov    -0x138(%rbp),%eax
  421c83:	48 81 c4 40 01 00 00 	add    $0x140,%rsp
  421c8a:	5d                   	pop    %rbp
  421c8b:	c3                   	retq   
  421c8c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000421c90 <mbedtls_mpi_exp_mod>:
  421c90:	55                   	push   %rbp
  421c91:	48 89 e5             	mov    %rsp,%rbp
  421c94:	48 81 ec 70 13 00 00 	sub    $0x1370,%rsp
  421c9b:	48 89 bd 40 fd ff ff 	mov    %rdi,-0x2c0(%rbp)
  421ca2:	48 89 b5 38 fd ff ff 	mov    %rsi,-0x2c8(%rbp)
  421ca9:	48 89 95 30 fd ff ff 	mov    %rdx,-0x2d0(%rbp)
  421cb0:	48 89 8d 28 fd ff ff 	mov    %rcx,-0x2d8(%rbp)
  421cb7:	4c 89 85 20 fd ff ff 	mov    %r8,-0x2e0(%rbp)
  421cbe:	48 c7 85 00 fd ff ff 	movq   $0x1,-0x300(%rbp)
  421cc5:	01 00 00 00 
  421cc9:	eb 00                	jmp    421ccb <mbedtls_mpi_exp_mod+0x3b>
  421ccb:	eb 00                	jmp    421ccd <mbedtls_mpi_exp_mod+0x3d>
  421ccd:	eb 00                	jmp    421ccf <mbedtls_mpi_exp_mod+0x3f>
  421ccf:	eb 00                	jmp    421cd1 <mbedtls_mpi_exp_mod+0x41>
  421cd1:	eb 00                	jmp    421cd3 <mbedtls_mpi_exp_mod+0x43>
  421cd3:	eb 00                	jmp    421cd5 <mbedtls_mpi_exp_mod+0x45>
  421cd5:	eb 00                	jmp    421cd7 <mbedtls_mpi_exp_mod+0x47>
  421cd7:	48 8b 85 28 fd ff ff 	mov    -0x2d8(%rbp),%rax
  421cde:	48 89 85 f0 ef ff ff 	mov    %rax,-0x1010(%rbp)
  421ce5:	e8 6c 3c 02 00       	callq  445956 <writeback_cache>
  421cea:	48 8b 85 f0 ef ff ff 	mov    -0x1010(%rbp),%rax
  421cf1:	48 89 85 a8 fd ff ff 	mov    %rax,-0x258(%rbp)
  421cf8:	48 c7 85 a0 fd ff ff 	movq   $0x0,-0x260(%rbp)
  421cff:	00 00 00 00 
  421d03:	48 83 bd a0 fd ff ff 	cmpq   $0x0,-0x260(%rbp)
  421d0a:	00 
  421d0b:	7d 14                	jge    421d21 <mbedtls_mpi_exp_mod+0x91>
  421d0d:	31 c0                	xor    %eax,%eax
  421d0f:	89 c1                	mov    %eax,%ecx
  421d11:	48 2b 8d a0 fd ff ff 	sub    -0x260(%rbp),%rcx
  421d18:	48 89 8d e8 ef ff ff 	mov    %rcx,-0x1018(%rbp)
  421d1f:	eb 0e                	jmp    421d2f <mbedtls_mpi_exp_mod+0x9f>
  421d21:	48 8b 85 a0 fd ff ff 	mov    -0x260(%rbp),%rax
  421d28:	48 89 85 e8 ef ff ff 	mov    %rax,-0x1018(%rbp)
  421d2f:	48 8b 85 e8 ef ff ff 	mov    -0x1018(%rbp),%rax
  421d36:	48 8d 8d 50 fd ff ff 	lea    -0x2b0(%rbp),%rcx
  421d3d:	48 89 cf             	mov    %rcx,%rdi
  421d40:	48 89 c6             	mov    %rax,%rsi
  421d43:	e8 b4 3f 02 00       	callq  445cfc <setEncryptedValueQWord>
  421d48:	48 8d 8d 70 fd ff ff 	lea    -0x290(%rbp),%rcx
  421d4f:	48 8b b5 a0 fd ff ff 	mov    -0x260(%rbp),%rsi
  421d56:	48 83 fe 00          	cmp    $0x0,%rsi
  421d5a:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  421d5f:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  421d65:	44 0f 4c c2          	cmovl  %edx,%r8d
  421d69:	48 89 cf             	mov    %rcx,%rdi
  421d6c:	44 89 c6             	mov    %r8d,%esi
  421d6f:	48 89 85 e0 ef ff ff 	mov    %rax,-0x1020(%rbp)
  421d76:	e8 83 3e 02 00       	callq  445bfe <setEncryptedValueDWord>
  421d7b:	ba 01 00 00 00       	mov    $0x1,%edx
  421d80:	89 d6                	mov    %edx,%esi
  421d82:	48 8d 8d 70 fd ff ff 	lea    -0x290(%rbp),%rcx
  421d89:	48 83 c1 08          	add    $0x8,%rcx
  421d8d:	48 89 cf             	mov    %rcx,%rdi
  421d90:	48 89 85 d8 ef ff ff 	mov    %rax,-0x1028(%rbp)
  421d97:	e8 60 3f 02 00       	callq  445cfc <setEncryptedValueQWord>
  421d9c:	48 8d b5 50 fd ff ff 	lea    -0x2b0(%rbp),%rsi
  421da3:	48 8d 8d 70 fd ff ff 	lea    -0x290(%rbp),%rcx
  421daa:	48 83 c1 10          	add    $0x10,%rcx
  421dae:	48 89 cf             	mov    %rcx,%rdi
  421db1:	48 89 85 d0 ef ff ff 	mov    %rax,-0x1030(%rbp)
  421db8:	e8 3f 3f 02 00       	callq  445cfc <setEncryptedValueQWord>
  421dbd:	48 8b bd a8 fd ff ff 	mov    -0x258(%rbp),%rdi
  421dc4:	48 8d b5 70 fd ff ff 	lea    -0x290(%rbp),%rsi
  421dcb:	48 89 85 c8 ef ff ff 	mov    %rax,-0x1038(%rbp)
  421dd2:	e8 79 cc ff ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  421dd7:	89 85 c4 ef ff ff    	mov    %eax,-0x103c(%rbp)
  421ddd:	e8 74 3b 02 00       	callq  445956 <writeback_cache>
  421de2:	8b 85 c4 ef ff ff    	mov    -0x103c(%rbp),%eax
  421de8:	83 f8 00             	cmp    $0x0,%eax
  421deb:	7e 25                	jle    421e12 <mbedtls_mpi_exp_mod+0x182>
  421ded:	48 8b 85 28 fd ff ff 	mov    -0x2d8(%rbp),%rax
  421df4:	48 83 c0 10          	add    $0x10,%rax
  421df8:	48 89 c7             	mov    %rax,%rdi
  421dfb:	e8 48 43 02 00       	callq  446148 <getDecryptedValueQWord>
  421e00:	48 89 c7             	mov    %rax,%rdi
  421e03:	e8 40 43 02 00       	callq  446148 <getDecryptedValueQWord>
  421e08:	48 83 e0 01          	and    $0x1,%rax
  421e0c:	48 83 f8 00          	cmp    $0x0,%rax
  421e10:	75 0f                	jne    421e21 <mbedtls_mpi_exp_mod+0x191>
  421e12:	c7 85 4c fd ff ff fc 	movl   $0xfffffffc,-0x2b4(%rbp)
  421e19:	ff ff ff 
  421e1c:	e9 47 1a 00 00       	jmpq   423868 <mbedtls_mpi_exp_mod+0x1bd8>
  421e21:	48 8b 85 30 fd ff ff 	mov    -0x2d0(%rbp),%rax
  421e28:	48 89 85 b8 ef ff ff 	mov    %rax,-0x1048(%rbp)
  421e2f:	e8 22 3b 02 00       	callq  445956 <writeback_cache>
  421e34:	48 8b 85 b8 ef ff ff 	mov    -0x1048(%rbp),%rax
  421e3b:	48 89 85 e0 fd ff ff 	mov    %rax,-0x220(%rbp)
  421e42:	48 c7 85 d8 fd ff ff 	movq   $0x0,-0x228(%rbp)
  421e49:	00 00 00 00 
  421e4d:	48 83 bd d8 fd ff ff 	cmpq   $0x0,-0x228(%rbp)
  421e54:	00 
  421e55:	7d 14                	jge    421e6b <mbedtls_mpi_exp_mod+0x1db>
  421e57:	31 c0                	xor    %eax,%eax
  421e59:	89 c1                	mov    %eax,%ecx
  421e5b:	48 2b 8d d8 fd ff ff 	sub    -0x228(%rbp),%rcx
  421e62:	48 89 8d b0 ef ff ff 	mov    %rcx,-0x1050(%rbp)
  421e69:	eb 0e                	jmp    421e79 <mbedtls_mpi_exp_mod+0x1e9>
  421e6b:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
  421e72:	48 89 85 b0 ef ff ff 	mov    %rax,-0x1050(%rbp)
  421e79:	48 8b 85 b0 ef ff ff 	mov    -0x1050(%rbp),%rax
  421e80:	48 8d 8d 50 fd ff ff 	lea    -0x2b0(%rbp),%rcx
  421e87:	48 89 cf             	mov    %rcx,%rdi
  421e8a:	48 89 c6             	mov    %rax,%rsi
  421e8d:	e8 6a 3e 02 00       	callq  445cfc <setEncryptedValueQWord>
  421e92:	48 8d 8d b0 fd ff ff 	lea    -0x250(%rbp),%rcx
  421e99:	48 8b b5 d8 fd ff ff 	mov    -0x228(%rbp),%rsi
  421ea0:	48 83 fe 00          	cmp    $0x0,%rsi
  421ea4:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  421ea9:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  421eaf:	44 0f 4c c2          	cmovl  %edx,%r8d
  421eb3:	48 89 cf             	mov    %rcx,%rdi
  421eb6:	44 89 c6             	mov    %r8d,%esi
  421eb9:	48 89 85 a8 ef ff ff 	mov    %rax,-0x1058(%rbp)
  421ec0:	e8 39 3d 02 00       	callq  445bfe <setEncryptedValueDWord>
  421ec5:	ba 01 00 00 00       	mov    $0x1,%edx
  421eca:	89 d6                	mov    %edx,%esi
  421ecc:	48 8d 8d b0 fd ff ff 	lea    -0x250(%rbp),%rcx
  421ed3:	48 83 c1 08          	add    $0x8,%rcx
  421ed7:	48 89 cf             	mov    %rcx,%rdi
  421eda:	48 89 85 a0 ef ff ff 	mov    %rax,-0x1060(%rbp)
  421ee1:	e8 16 3e 02 00       	callq  445cfc <setEncryptedValueQWord>
  421ee6:	48 8d b5 50 fd ff ff 	lea    -0x2b0(%rbp),%rsi
  421eed:	48 8d 8d b0 fd ff ff 	lea    -0x250(%rbp),%rcx
  421ef4:	48 83 c1 10          	add    $0x10,%rcx
  421ef8:	48 89 cf             	mov    %rcx,%rdi
  421efb:	48 89 85 98 ef ff ff 	mov    %rax,-0x1068(%rbp)
  421f02:	e8 f5 3d 02 00       	callq  445cfc <setEncryptedValueQWord>
  421f07:	48 8b bd e0 fd ff ff 	mov    -0x220(%rbp),%rdi
  421f0e:	48 8d b5 b0 fd ff ff 	lea    -0x250(%rbp),%rsi
  421f15:	48 89 85 90 ef ff ff 	mov    %rax,-0x1070(%rbp)
  421f1c:	e8 2f cb ff ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  421f21:	89 85 8c ef ff ff    	mov    %eax,-0x1074(%rbp)
  421f27:	e8 2a 3a 02 00       	callq  445956 <writeback_cache>
  421f2c:	8b 85 8c ef ff ff    	mov    -0x1074(%rbp),%eax
  421f32:	83 f8 00             	cmp    $0x0,%eax
  421f35:	7d 0f                	jge    421f46 <mbedtls_mpi_exp_mod+0x2b6>
  421f37:	c7 85 4c fd ff ff fc 	movl   $0xfffffffc,-0x2b4(%rbp)
  421f3e:	ff ff ff 
  421f41:	e9 22 19 00 00       	jmpq   423868 <mbedtls_mpi_exp_mod+0x1bd8>
  421f46:	48 8b 85 28 fd ff ff 	mov    -0x2d8(%rbp),%rax
  421f4d:	48 8d 8d c8 fc ff ff 	lea    -0x338(%rbp),%rcx
  421f54:	48 89 8d 08 fe ff ff 	mov    %rcx,-0x1f8(%rbp)
  421f5b:	48 89 85 00 fe ff ff 	mov    %rax,-0x200(%rbp)
  421f62:	48 8b 85 00 fe ff ff 	mov    -0x200(%rbp),%rax
  421f69:	48 83 c0 10          	add    $0x10,%rax
  421f6d:	48 89 c7             	mov    %rax,%rdi
  421f70:	e8 d3 41 02 00       	callq  446148 <getDecryptedValueQWord>
  421f75:	48 89 c7             	mov    %rax,%rdi
  421f78:	e8 cb 41 02 00       	callq  446148 <getDecryptedValueQWord>
  421f7d:	48 89 85 f0 fd ff ff 	mov    %rax,-0x210(%rbp)
  421f84:	48 8b 85 f0 fd ff ff 	mov    -0x210(%rbp),%rax
  421f8b:	48 89 85 f8 fd ff ff 	mov    %rax,-0x208(%rbp)
  421f92:	48 8b 85 f0 fd ff ff 	mov    -0x210(%rbp),%rax
  421f99:	48 83 c0 02          	add    $0x2,%rax
  421f9d:	48 83 e0 04          	and    $0x4,%rax
  421fa1:	48 c1 e0 01          	shl    $0x1,%rax
  421fa5:	48 03 85 f8 fd ff ff 	add    -0x208(%rbp),%rax
  421fac:	48 89 85 f8 fd ff ff 	mov    %rax,-0x208(%rbp)
  421fb3:	c7 85 ec fd ff ff 40 	movl   $0x40,-0x214(%rbp)
  421fba:	00 00 00 
  421fbd:	83 bd ec fd ff ff 08 	cmpl   $0x8,-0x214(%rbp)
  421fc4:	72 39                	jb     421fff <mbedtls_mpi_exp_mod+0x36f>
  421fc6:	b8 02 00 00 00       	mov    $0x2,%eax
  421fcb:	89 c1                	mov    %eax,%ecx
  421fcd:	48 8b 95 f0 fd ff ff 	mov    -0x210(%rbp),%rdx
  421fd4:	48 0f af 95 f8 fd ff 	imul   -0x208(%rbp),%rdx
  421fdb:	ff 
  421fdc:	48 29 d1             	sub    %rdx,%rcx
  421fdf:	48 0f af 8d f8 fd ff 	imul   -0x208(%rbp),%rcx
  421fe6:	ff 
  421fe7:	48 89 8d f8 fd ff ff 	mov    %rcx,-0x208(%rbp)
  421fee:	8b 85 ec fd ff ff    	mov    -0x214(%rbp),%eax
  421ff4:	c1 e8 01             	shr    $0x1,%eax
  421ff7:	89 85 ec fd ff ff    	mov    %eax,-0x214(%rbp)
  421ffd:	eb be                	jmp    421fbd <mbedtls_mpi_exp_mod+0x32d>
  421fff:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
  422006:	48 83 f0 ff          	xor    $0xffffffffffffffff,%rax
  42200a:	48 83 c0 01          	add    $0x1,%rax
  42200e:	48 8b 8d 08 fe ff ff 	mov    -0x1f8(%rbp),%rcx
  422015:	48 89 01             	mov    %rax,(%rcx)
  422018:	48 8d 85 90 fc ff ff 	lea    -0x370(%rbp),%rax
  42201f:	48 89 85 38 fe ff ff 	mov    %rax,-0x1c8(%rbp)
  422026:	48 8b 85 38 fe ff ff 	mov    -0x1c8(%rbp),%rax
  42202d:	48 89 c7             	mov    %rax,%rdi
  422030:	be 01 00 00 00       	mov    $0x1,%esi
  422035:	e8 c4 3b 02 00       	callq  445bfe <setEncryptedValueDWord>
  42203a:	31 f6                	xor    %esi,%esi
  42203c:	48 8b 8d 38 fe ff ff 	mov    -0x1c8(%rbp),%rcx
  422043:	48 83 c1 08          	add    $0x8,%rcx
  422047:	48 89 cf             	mov    %rcx,%rdi
  42204a:	48 89 85 80 ef ff ff 	mov    %rax,-0x1080(%rbp)
  422051:	e8 a6 3c 02 00       	callq  445cfc <setEncryptedValueQWord>
  422056:	31 d2                	xor    %edx,%edx
  422058:	89 d6                	mov    %edx,%esi
  42205a:	48 8b 8d 38 fe ff ff 	mov    -0x1c8(%rbp),%rcx
  422061:	48 83 c1 10          	add    $0x10,%rcx
  422065:	48 89 cf             	mov    %rcx,%rdi
  422068:	48 89 85 78 ef ff ff 	mov    %rax,-0x1088(%rbp)
  42206f:	e8 88 3c 02 00       	callq  445cfc <setEncryptedValueQWord>
  422074:	48 8d 8d 60 fc ff ff 	lea    -0x3a0(%rbp),%rcx
  42207b:	48 89 8d 40 fe ff ff 	mov    %rcx,-0x1c0(%rbp)
  422082:	48 8b 8d 40 fe ff ff 	mov    -0x1c0(%rbp),%rcx
  422089:	48 89 cf             	mov    %rcx,%rdi
  42208c:	be 01 00 00 00       	mov    $0x1,%esi
  422091:	48 89 85 70 ef ff ff 	mov    %rax,-0x1090(%rbp)
  422098:	e8 61 3b 02 00       	callq  445bfe <setEncryptedValueDWord>
  42209d:	31 d2                	xor    %edx,%edx
  42209f:	89 d6                	mov    %edx,%esi
  4220a1:	48 8b 8d 40 fe ff ff 	mov    -0x1c0(%rbp),%rcx
  4220a8:	48 83 c1 08          	add    $0x8,%rcx
  4220ac:	48 89 cf             	mov    %rcx,%rdi
  4220af:	48 89 85 68 ef ff ff 	mov    %rax,-0x1098(%rbp)
  4220b6:	e8 41 3c 02 00       	callq  445cfc <setEncryptedValueQWord>
  4220bb:	31 d2                	xor    %edx,%edx
  4220bd:	89 d6                	mov    %edx,%esi
  4220bf:	48 8b 8d 40 fe ff ff 	mov    -0x1c0(%rbp),%rcx
  4220c6:	48 83 c1 10          	add    $0x10,%rcx
  4220ca:	48 89 cf             	mov    %rcx,%rdi
  4220cd:	48 89 85 60 ef ff ff 	mov    %rax,-0x10a0(%rbp)
  4220d4:	e8 23 3c 02 00       	callq  445cfc <setEncryptedValueQWord>
  4220d9:	48 8d 8d 00 f0 ff ff 	lea    -0x1000(%rbp),%rcx
  4220e0:	48 89 8d 70 fe ff ff 	mov    %rcx,-0x190(%rbp)
  4220e7:	48 8b 8d 70 fe ff ff 	mov    -0x190(%rbp),%rcx
  4220ee:	48 89 cf             	mov    %rcx,%rdi
  4220f1:	be 01 00 00 00       	mov    $0x1,%esi
  4220f6:	48 89 85 58 ef ff ff 	mov    %rax,-0x10a8(%rbp)
  4220fd:	e8 fc 3a 02 00       	callq  445bfe <setEncryptedValueDWord>
  422102:	31 d2                	xor    %edx,%edx
  422104:	89 d6                	mov    %edx,%esi
  422106:	48 8b 8d 70 fe ff ff 	mov    -0x190(%rbp),%rcx
  42210d:	48 83 c1 08          	add    $0x8,%rcx
  422111:	48 89 cf             	mov    %rcx,%rdi
  422114:	48 89 85 50 ef ff ff 	mov    %rax,-0x10b0(%rbp)
  42211b:	e8 dc 3b 02 00       	callq  445cfc <setEncryptedValueQWord>
  422120:	31 d2                	xor    %edx,%edx
  422122:	89 d6                	mov    %edx,%esi
  422124:	48 8b 8d 70 fe ff ff 	mov    -0x190(%rbp),%rcx
  42212b:	48 83 c1 10          	add    $0x10,%rcx
  42212f:	48 89 cf             	mov    %rcx,%rdi
  422132:	48 89 85 48 ef ff ff 	mov    %rax,-0x10b8(%rbp)
  422139:	e8 be 3b 02 00       	callq  445cfc <setEncryptedValueQWord>
  42213e:	48 8d 8d 30 f0 ff ff 	lea    -0xfd0(%rbp),%rcx
  422145:	48 89 85 40 ef ff ff 	mov    %rax,-0x10c0(%rbp)
  42214c:	48 89 8d 38 ef ff ff 	mov    %rcx,-0x10c8(%rbp)
  422153:	e8 fe 37 02 00       	callq  445956 <writeback_cache>
  422158:	ba 00 0c 00 00       	mov    $0xc00,%edx
  42215d:	89 d6                	mov    %edx,%esi
  42215f:	48 8b bd 38 ef ff ff 	mov    -0x10c8(%rbp),%rdi
  422166:	e8 7a 45 02 00       	callq  4466e5 <decryptArrayForLibCall>
  42216b:	ba 00 0c 00 00       	mov    $0xc00,%edx
  422170:	89 d0                	mov    %edx,%eax
  422172:	31 f6                	xor    %esi,%esi
  422174:	48 8b bd 38 ef ff ff 	mov    -0x10c8(%rbp),%rdi
  42217b:	48 89 c2             	mov    %rax,%rdx
  42217e:	48 89 85 30 ef ff ff 	mov    %rax,-0x10d0(%rbp)
  422185:	e8 96 ee fd ff       	callq  401020 <memset@plt>
  42218a:	48 8b bd 38 ef ff ff 	mov    -0x10c8(%rbp),%rdi
  422191:	48 8b b5 30 ef ff ff 	mov    -0x10d0(%rbp),%rsi
  422198:	e8 b9 42 02 00       	callq  446456 <encryptArrayForLibCall>
  42219d:	48 8b bd 30 fd ff ff 	mov    -0x2d0(%rbp),%rdi
  4221a4:	e8 27 90 ff ff       	callq  41b1d0 <mbedtls_mpi_bitlen>
  4221a9:	48 89 85 f8 fc ff ff 	mov    %rax,-0x308(%rbp)
  4221b0:	48 81 bd f8 fc ff ff 	cmpq   $0x29f,-0x308(%rbp)
  4221b7:	9f 02 00 00 
  4221bb:	76 0d                	jbe    4221ca <mbedtls_mpi_exp_mod+0x53a>
  4221bd:	b8 06 00 00 00       	mov    $0x6,%eax
  4221c2:	89 85 2c ef ff ff    	mov    %eax,-0x10d4(%rbp)
  4221c8:	eb 67                	jmp    422231 <mbedtls_mpi_exp_mod+0x5a1>
  4221ca:	48 81 bd f8 fc ff ff 	cmpq   $0xef,-0x308(%rbp)
  4221d1:	ef 00 00 00 
  4221d5:	76 0d                	jbe    4221e4 <mbedtls_mpi_exp_mod+0x554>
  4221d7:	b8 05 00 00 00       	mov    $0x5,%eax
  4221dc:	89 85 28 ef ff ff    	mov    %eax,-0x10d8(%rbp)
  4221e2:	eb 41                	jmp    422225 <mbedtls_mpi_exp_mod+0x595>
  4221e4:	48 83 bd f8 fc ff ff 	cmpq   $0x4f,-0x308(%rbp)
  4221eb:	4f 
  4221ec:	76 0d                	jbe    4221fb <mbedtls_mpi_exp_mod+0x56b>
  4221ee:	b8 04 00 00 00       	mov    $0x4,%eax
  4221f3:	89 85 24 ef ff ff    	mov    %eax,-0x10dc(%rbp)
  4221f9:	eb 1e                	jmp    422219 <mbedtls_mpi_exp_mod+0x589>
  4221fb:	48 8b 85 f8 fc ff ff 	mov    -0x308(%rbp),%rax
  422202:	48 83 f8 17          	cmp    $0x17,%rax
  422206:	b9 03 00 00 00       	mov    $0x3,%ecx
  42220b:	ba 01 00 00 00       	mov    $0x1,%edx
  422210:	0f 47 d1             	cmova  %ecx,%edx
  422213:	89 95 24 ef ff ff    	mov    %edx,-0x10dc(%rbp)
  422219:	8b 85 24 ef ff ff    	mov    -0x10dc(%rbp),%eax
  42221f:	89 85 28 ef ff ff    	mov    %eax,-0x10d8(%rbp)
  422225:	8b 85 28 ef ff ff    	mov    -0x10d8(%rbp),%eax
  42222b:	89 85 2c ef ff ff    	mov    %eax,-0x10d4(%rbp)
  422231:	8b 85 2c ef ff ff    	mov    -0x10d4(%rbp),%eax
  422237:	48 63 c8             	movslq %eax,%rcx
  42223a:	48 89 8d 08 fd ff ff 	mov    %rcx,-0x2f8(%rbp)
  422241:	48 83 bd 08 fd ff ff 	cmpq   $0x6,-0x2f8(%rbp)
  422248:	06 
  422249:	76 0b                	jbe    422256 <mbedtls_mpi_exp_mod+0x5c6>
  42224b:	48 c7 85 08 fd ff ff 	movq   $0x6,-0x2f8(%rbp)
  422252:	06 00 00 00 
  422256:	48 8b 85 28 fd ff ff 	mov    -0x2d8(%rbp),%rax
  42225d:	48 83 c0 08          	add    $0x8,%rax
  422261:	48 89 c7             	mov    %rax,%rdi
  422264:	e8 df 3e 02 00       	callq  446148 <getDecryptedValueQWord>
  422269:	48 83 c0 01          	add    $0x1,%rax
  42226d:	48 89 85 f0 fc ff ff 	mov    %rax,-0x310(%rbp)
  422274:	48 8b bd 40 fd ff ff 	mov    -0x2c0(%rbp),%rdi
  42227b:	48 8b b5 f0 fc ff ff 	mov    -0x310(%rbp),%rsi
  422282:	e8 b9 88 ff ff       	callq  41ab40 <mbedtls_mpi_grow>
  422287:	89 85 1c fd ff ff    	mov    %eax,-0x2e4(%rbp)
  42228d:	83 f8 00             	cmp    $0x0,%eax
  422290:	74 05                	je     422297 <mbedtls_mpi_exp_mod+0x607>
  422292:	e9 16 0e 00 00       	jmpq   4230ad <mbedtls_mpi_exp_mod+0x141d>
  422297:	eb 00                	jmp    422299 <mbedtls_mpi_exp_mod+0x609>
  422299:	eb 00                	jmp    42229b <mbedtls_mpi_exp_mod+0x60b>
  42229b:	48 8d 85 30 f0 ff ff 	lea    -0xfd0(%rbp),%rax
  4222a2:	48 83 c0 18          	add    $0x18,%rax
  4222a6:	48 8b b5 f0 fc ff ff 	mov    -0x310(%rbp),%rsi
  4222ad:	48 89 c7             	mov    %rax,%rdi
  4222b0:	e8 8b 88 ff ff       	callq  41ab40 <mbedtls_mpi_grow>
  4222b5:	89 85 1c fd ff ff    	mov    %eax,-0x2e4(%rbp)
  4222bb:	83 f8 00             	cmp    $0x0,%eax
  4222be:	74 05                	je     4222c5 <mbedtls_mpi_exp_mod+0x635>
  4222c0:	e9 e8 0d 00 00       	jmpq   4230ad <mbedtls_mpi_exp_mod+0x141d>
  4222c5:	eb 00                	jmp    4222c7 <mbedtls_mpi_exp_mod+0x637>
  4222c7:	eb 00                	jmp    4222c9 <mbedtls_mpi_exp_mod+0x639>
  4222c9:	48 8b 85 f0 fc ff ff 	mov    -0x310(%rbp),%rax
  4222d0:	48 c1 e0 01          	shl    $0x1,%rax
  4222d4:	48 8d bd 60 fc ff ff 	lea    -0x3a0(%rbp),%rdi
  4222db:	48 89 c6             	mov    %rax,%rsi
  4222de:	e8 5d 88 ff ff       	callq  41ab40 <mbedtls_mpi_grow>
  4222e3:	89 85 1c fd ff ff    	mov    %eax,-0x2e4(%rbp)
  4222e9:	83 f8 00             	cmp    $0x0,%eax
  4222ec:	74 05                	je     4222f3 <mbedtls_mpi_exp_mod+0x663>
  4222ee:	e9 ba 0d 00 00       	jmpq   4230ad <mbedtls_mpi_exp_mod+0x141d>
  4222f3:	eb 00                	jmp    4222f5 <mbedtls_mpi_exp_mod+0x665>
  4222f5:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
  4222fc:	48 89 c7             	mov    %rax,%rdi
  4222ff:	e8 4a 3d 02 00       	callq  44604e <getDecryptedValueDWord>
  422304:	83 f8 ff             	cmp    $0xffffffff,%eax
  422307:	0f 94 c1             	sete   %cl
  42230a:	80 e1 01             	and    $0x1,%cl
  42230d:	0f b6 c1             	movzbl %cl,%eax
  422310:	89 85 fc ef ff ff    	mov    %eax,-0x1004(%rbp)
  422316:	83 bd fc ef ff ff 00 	cmpl   $0x0,-0x1004(%rbp)
  42231d:	74 50                	je     42236f <mbedtls_mpi_exp_mod+0x6df>
  42231f:	eb 00                	jmp    422321 <mbedtls_mpi_exp_mod+0x691>
  422321:	48 8b b5 38 fd ff ff 	mov    -0x2c8(%rbp),%rsi
  422328:	48 8d bd 00 f0 ff ff 	lea    -0x1000(%rbp),%rdi
  42232f:	e8 6c 8a ff ff       	callq  41ada0 <mbedtls_mpi_copy>
  422334:	89 85 1c fd ff ff    	mov    %eax,-0x2e4(%rbp)
  42233a:	83 f8 00             	cmp    $0x0,%eax
  42233d:	74 05                	je     422344 <mbedtls_mpi_exp_mod+0x6b4>
  42233f:	e9 69 0d 00 00       	jmpq   4230ad <mbedtls_mpi_exp_mod+0x141d>
  422344:	eb 00                	jmp    422346 <mbedtls_mpi_exp_mod+0x6b6>
  422346:	48 8d 85 00 f0 ff ff 	lea    -0x1000(%rbp),%rax
  42234d:	48 89 c7             	mov    %rax,%rdi
  422350:	be 01 00 00 00       	mov    $0x1,%esi
  422355:	e8 a4 38 02 00       	callq  445bfe <setEncryptedValueDWord>
  42235a:	48 8d bd 00 f0 ff ff 	lea    -0x1000(%rbp),%rdi
  422361:	48 89 bd 38 fd ff ff 	mov    %rdi,-0x2c8(%rbp)
  422368:	48 89 85 18 ef ff ff 	mov    %rax,-0x10e8(%rbp)
  42236f:	48 83 bd 20 fd ff ff 	cmpq   $0x0,-0x2e0(%rbp)
  422376:	00 
  422377:	74 1d                	je     422396 <mbedtls_mpi_exp_mod+0x706>
  422379:	48 8b 85 20 fd ff ff 	mov    -0x2e0(%rbp),%rax
  422380:	48 83 c0 10          	add    $0x10,%rax
  422384:	48 89 c7             	mov    %rax,%rdi
  422387:	e8 bc 3d 02 00       	callq  446148 <getDecryptedValueQWord>
  42238c:	48 83 f8 00          	cmp    $0x0,%rax
  422390:	0f 85 81 02 00 00    	jne    422617 <mbedtls_mpi_exp_mod+0x987>
  422396:	eb 00                	jmp    422398 <mbedtls_mpi_exp_mod+0x708>
  422398:	b8 01 00 00 00       	mov    $0x1,%eax
  42239d:	89 c6                	mov    %eax,%esi
  42239f:	48 8d 8d 90 fc ff ff 	lea    -0x370(%rbp),%rcx
  4223a6:	48 89 8d 88 fe ff ff 	mov    %rcx,-0x178(%rbp)
  4223ad:	48 c7 85 80 fe ff ff 	movq   $0x1,-0x180(%rbp)
  4223b4:	01 00 00 00 
  4223b8:	48 8b bd 88 fe ff ff 	mov    -0x178(%rbp),%rdi
  4223bf:	e8 7c 87 ff ff       	callq  41ab40 <mbedtls_mpi_grow>
  4223c4:	89 85 7c fe ff ff    	mov    %eax,-0x184(%rbp)
  4223ca:	83 f8 00             	cmp    $0x0,%eax
  4223cd:	74 05                	je     4223d4 <mbedtls_mpi_exp_mod+0x744>
  4223cf:	e9 0b 01 00 00       	jmpq   4224df <mbedtls_mpi_exp_mod+0x84f>
  4223d4:	48 8b 85 88 fe ff ff 	mov    -0x178(%rbp),%rax
  4223db:	48 83 c0 10          	add    $0x10,%rax
  4223df:	48 89 c7             	mov    %rax,%rdi
  4223e2:	e8 61 3d 02 00       	callq  446148 <getDecryptedValueQWord>
  4223e7:	48 8b bd 88 fe ff ff 	mov    -0x178(%rbp),%rdi
  4223ee:	48 83 c7 08          	add    $0x8,%rdi
  4223f2:	48 89 85 10 ef ff ff 	mov    %rax,-0x10f0(%rbp)
  4223f9:	e8 4a 3d 02 00       	callq  446148 <getDecryptedValueQWord>
  4223fe:	48 c1 e0 03          	shl    $0x3,%rax
  422402:	48 89 85 08 ef ff ff 	mov    %rax,-0x10f8(%rbp)
  422409:	e8 48 35 02 00       	callq  445956 <writeback_cache>
  42240e:	48 8b bd 10 ef ff ff 	mov    -0x10f0(%rbp),%rdi
  422415:	48 8b b5 08 ef ff ff 	mov    -0x10f8(%rbp),%rsi
  42241c:	e8 c4 42 02 00       	callq  4466e5 <decryptArrayForLibCall>
  422421:	31 f6                	xor    %esi,%esi
  422423:	48 8b bd 10 ef ff ff 	mov    -0x10f0(%rbp),%rdi
  42242a:	48 8b 95 08 ef ff ff 	mov    -0x10f8(%rbp),%rdx
  422431:	e8 ea eb fd ff       	callq  401020 <memset@plt>
  422436:	48 8b bd 10 ef ff ff 	mov    -0x10f0(%rbp),%rdi
  42243d:	48 8b b5 08 ef ff ff 	mov    -0x10f8(%rbp),%rsi
  422444:	e8 0d 40 02 00       	callq  446456 <encryptArrayForLibCall>
  422449:	48 83 bd 80 fe ff ff 	cmpq   $0x0,-0x180(%rbp)
  422450:	00 
  422451:	7d 14                	jge    422467 <mbedtls_mpi_exp_mod+0x7d7>
  422453:	31 c0                	xor    %eax,%eax
  422455:	89 c1                	mov    %eax,%ecx
  422457:	48 2b 8d 80 fe ff ff 	sub    -0x180(%rbp),%rcx
  42245e:	48 89 8d 00 ef ff ff 	mov    %rcx,-0x1100(%rbp)
  422465:	eb 0e                	jmp    422475 <mbedtls_mpi_exp_mod+0x7e5>
  422467:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
  42246e:	48 89 85 00 ef ff ff 	mov    %rax,-0x1100(%rbp)
  422475:	48 8b 85 00 ef ff ff 	mov    -0x1100(%rbp),%rax
  42247c:	48 8b 8d 88 fe ff ff 	mov    -0x178(%rbp),%rcx
  422483:	48 83 c1 10          	add    $0x10,%rcx
  422487:	48 89 cf             	mov    %rcx,%rdi
  42248a:	48 89 85 f8 ee ff ff 	mov    %rax,-0x1108(%rbp)
  422491:	e8 b2 3c 02 00       	callq  446148 <getDecryptedValueQWord>
  422496:	48 89 c7             	mov    %rax,%rdi
  422499:	48 8b b5 f8 ee ff ff 	mov    -0x1108(%rbp),%rsi
  4224a0:	e8 57 38 02 00       	callq  445cfc <setEncryptedValueQWord>
  4224a5:	48 8b 8d 80 fe ff ff 	mov    -0x180(%rbp),%rcx
  4224ac:	48 83 f9 00          	cmp    $0x0,%rcx
  4224b0:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  4224b5:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  4224bb:	44 0f 4c c2          	cmovl  %edx,%r8d
  4224bf:	48 8b 8d 88 fe ff ff 	mov    -0x178(%rbp),%rcx
  4224c6:	48 89 cf             	mov    %rcx,%rdi
  4224c9:	44 89 c6             	mov    %r8d,%esi
  4224cc:	48 89 85 f0 ee ff ff 	mov    %rax,-0x1110(%rbp)
  4224d3:	e8 26 37 02 00       	callq  445bfe <setEncryptedValueDWord>
  4224d8:	48 89 85 e8 ee ff ff 	mov    %rax,-0x1118(%rbp)
  4224df:	8b 85 7c fe ff ff    	mov    -0x184(%rbp),%eax
  4224e5:	89 85 1c fd ff ff    	mov    %eax,-0x2e4(%rbp)
  4224eb:	83 f8 00             	cmp    $0x0,%eax
  4224ee:	74 05                	je     4224f5 <mbedtls_mpi_exp_mod+0x865>
  4224f0:	e9 b8 0b 00 00       	jmpq   4230ad <mbedtls_mpi_exp_mod+0x141d>
  4224f5:	eb 00                	jmp    4224f7 <mbedtls_mpi_exp_mod+0x867>
  4224f7:	eb 00                	jmp    4224f9 <mbedtls_mpi_exp_mod+0x869>
  4224f9:	48 8b 85 28 fd ff ff 	mov    -0x2d8(%rbp),%rax
  422500:	48 83 c0 08          	add    $0x8,%rax
  422504:	48 89 c7             	mov    %rax,%rdi
  422507:	e8 3c 3c 02 00       	callq  446148 <getDecryptedValueQWord>
  42250c:	48 c1 e0 01          	shl    $0x1,%rax
  422510:	48 c1 e0 06          	shl    $0x6,%rax
  422514:	48 8d bd 90 fc ff ff 	lea    -0x370(%rbp),%rdi
  42251b:	48 89 c6             	mov    %rax,%rsi
  42251e:	e8 dd e7 ff ff       	callq  420d00 <mbedtls_mpi_shift_l>
  422523:	89 85 1c fd ff ff    	mov    %eax,-0x2e4(%rbp)
  422529:	83 f8 00             	cmp    $0x0,%eax
  42252c:	74 05                	je     422533 <mbedtls_mpi_exp_mod+0x8a3>
  42252e:	e9 7a 0b 00 00       	jmpq   4230ad <mbedtls_mpi_exp_mod+0x141d>
  422533:	eb 00                	jmp    422535 <mbedtls_mpi_exp_mod+0x8a5>
  422535:	eb 00                	jmp    422537 <mbedtls_mpi_exp_mod+0x8a7>
  422537:	48 8b 95 28 fd ff ff 	mov    -0x2d8(%rbp),%rdx
  42253e:	48 8d 85 90 fc ff ff 	lea    -0x370(%rbp),%rax
  422545:	48 89 c7             	mov    %rax,%rdi
  422548:	48 89 c6             	mov    %rax,%rsi
  42254b:	e8 40 f4 ff ff       	callq  421990 <mbedtls_mpi_mod_mpi>
  422550:	89 85 1c fd ff ff    	mov    %eax,-0x2e4(%rbp)
  422556:	83 f8 00             	cmp    $0x0,%eax
  422559:	74 05                	je     422560 <mbedtls_mpi_exp_mod+0x8d0>
  42255b:	e9 4d 0b 00 00       	jmpq   4230ad <mbedtls_mpi_exp_mod+0x141d>
  422560:	eb 00                	jmp    422562 <mbedtls_mpi_exp_mod+0x8d2>
  422562:	48 83 bd 20 fd ff ff 	cmpq   $0x0,-0x2e0(%rbp)
  422569:	00 
  42256a:	0f 84 a2 00 00 00    	je     422612 <mbedtls_mpi_exp_mod+0x982>
  422570:	48 8b 85 20 fd ff ff 	mov    -0x2e0(%rbp),%rax
  422577:	48 89 c1             	mov    %rax,%rcx
  42257a:	48 8d 95 90 fc ff ff 	lea    -0x370(%rbp),%rdx
  422581:	48 89 85 e0 ee ff ff 	mov    %rax,-0x1120(%rbp)
  422588:	48 89 8d d8 ee ff ff 	mov    %rcx,-0x1128(%rbp)
  42258f:	48 89 95 d0 ee ff ff 	mov    %rdx,-0x1130(%rbp)
  422596:	e8 bb 33 02 00       	callq  445956 <writeback_cache>
  42259b:	be 18 00 00 00       	mov    $0x18,%esi
  4225a0:	48 8b bd d0 ee ff ff 	mov    -0x1130(%rbp),%rdi
  4225a7:	e8 39 41 02 00       	callq  4466e5 <decryptArrayForLibCall>
  4225ac:	41 b8 18 00 00 00    	mov    $0x18,%r8d
  4225b2:	44 89 c6             	mov    %r8d,%esi
  4225b5:	48 8b bd d8 ee ff ff 	mov    -0x1128(%rbp),%rdi
  4225bc:	e8 24 41 02 00       	callq  4466e5 <decryptArrayForLibCall>
  4225c1:	41 b8 18 00 00 00    	mov    $0x18,%r8d
  4225c7:	44 89 c6             	mov    %r8d,%esi
  4225ca:	48 8b 85 90 fc ff ff 	mov    -0x370(%rbp),%rax
  4225d1:	48 8b 8d e0 ee ff ff 	mov    -0x1120(%rbp),%rcx
  4225d8:	48 89 01             	mov    %rax,(%rcx)
  4225db:	48 8b 85 98 fc ff ff 	mov    -0x368(%rbp),%rax
  4225e2:	48 89 41 08          	mov    %rax,0x8(%rcx)
  4225e6:	48 8b 85 a0 fc ff ff 	mov    -0x360(%rbp),%rax
  4225ed:	48 89 41 10          	mov    %rax,0x10(%rcx)
  4225f1:	48 8b bd d8 ee ff ff 	mov    -0x1128(%rbp),%rdi
  4225f8:	e8 59 3e 02 00       	callq  446456 <encryptArrayForLibCall>
  4225fd:	41 b8 18 00 00 00    	mov    $0x18,%r8d
  422603:	44 89 c6             	mov    %r8d,%esi
  422606:	48 8b bd d0 ee ff ff 	mov    -0x1130(%rbp),%rdi
  42260d:	e8 44 3e 02 00       	callq  446456 <encryptArrayForLibCall>
  422612:	e9 a2 00 00 00       	jmpq   4226b9 <mbedtls_mpi_exp_mod+0xa29>
  422617:	48 8d 85 90 fc ff ff 	lea    -0x370(%rbp),%rax
  42261e:	48 8b 8d 20 fd ff ff 	mov    -0x2e0(%rbp),%rcx
  422625:	48 89 ca             	mov    %rcx,%rdx
  422628:	48 89 85 c8 ee ff ff 	mov    %rax,-0x1138(%rbp)
  42262f:	48 89 8d c0 ee ff ff 	mov    %rcx,-0x1140(%rbp)
  422636:	48 89 95 b8 ee ff ff 	mov    %rdx,-0x1148(%rbp)
  42263d:	e8 14 33 02 00       	callq  445956 <writeback_cache>
  422642:	be 18 00 00 00       	mov    $0x18,%esi
  422647:	48 8b bd b8 ee ff ff 	mov    -0x1148(%rbp),%rdi
  42264e:	e8 92 40 02 00       	callq  4466e5 <decryptArrayForLibCall>
  422653:	41 b8 18 00 00 00    	mov    $0x18,%r8d
  422659:	44 89 c6             	mov    %r8d,%esi
  42265c:	48 8b bd c8 ee ff ff 	mov    -0x1138(%rbp),%rdi
  422663:	e8 7d 40 02 00       	callq  4466e5 <decryptArrayForLibCall>
  422668:	41 b8 18 00 00 00    	mov    $0x18,%r8d
  42266e:	44 89 c6             	mov    %r8d,%esi
  422671:	48 8b 85 c0 ee ff ff 	mov    -0x1140(%rbp),%rax
  422678:	48 8b 08             	mov    (%rax),%rcx
  42267b:	48 89 8d 90 fc ff ff 	mov    %rcx,-0x370(%rbp)
  422682:	48 8b 48 08          	mov    0x8(%rax),%rcx
  422686:	48 89 8d 98 fc ff ff 	mov    %rcx,-0x368(%rbp)
  42268d:	48 8b 48 10          	mov    0x10(%rax),%rcx
  422691:	48 89 8d a0 fc ff ff 	mov    %rcx,-0x360(%rbp)
  422698:	48 8b bd c8 ee ff ff 	mov    -0x1138(%rbp),%rdi
  42269f:	e8 b2 3d 02 00       	callq  446456 <encryptArrayForLibCall>
  4226a4:	41 b8 18 00 00 00    	mov    $0x18,%r8d
  4226aa:	44 89 c6             	mov    %r8d,%esi
  4226ad:	48 8b bd b8 ee ff ff 	mov    -0x1148(%rbp),%rdi
  4226b4:	e8 9d 3d 02 00       	callq  446456 <encryptArrayForLibCall>
  4226b9:	48 8b bd 38 fd ff ff 	mov    -0x2c8(%rbp),%rdi
  4226c0:	48 8b b5 28 fd ff ff 	mov    -0x2d8(%rbp),%rsi
  4226c7:	e8 84 c3 ff ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  4226cc:	83 f8 00             	cmp    $0x0,%eax
  4226cf:	7c 37                	jl     422708 <mbedtls_mpi_exp_mod+0xa78>
  4226d1:	eb 00                	jmp    4226d3 <mbedtls_mpi_exp_mod+0xa43>
  4226d3:	48 8d 85 30 f0 ff ff 	lea    -0xfd0(%rbp),%rax
  4226da:	48 83 c0 18          	add    $0x18,%rax
  4226de:	48 8b b5 38 fd ff ff 	mov    -0x2c8(%rbp),%rsi
  4226e5:	48 8b 95 28 fd ff ff 	mov    -0x2d8(%rbp),%rdx
  4226ec:	48 89 c7             	mov    %rax,%rdi
  4226ef:	e8 9c f2 ff ff       	callq  421990 <mbedtls_mpi_mod_mpi>
  4226f4:	89 85 1c fd ff ff    	mov    %eax,-0x2e4(%rbp)
  4226fa:	83 f8 00             	cmp    $0x0,%eax
  4226fd:	74 05                	je     422704 <mbedtls_mpi_exp_mod+0xa74>
  4226ff:	e9 a9 09 00 00       	jmpq   4230ad <mbedtls_mpi_exp_mod+0x141d>
  422704:	eb 00                	jmp    422706 <mbedtls_mpi_exp_mod+0xa76>
  422706:	eb 30                	jmp    422738 <mbedtls_mpi_exp_mod+0xaa8>
  422708:	eb 00                	jmp    42270a <mbedtls_mpi_exp_mod+0xa7a>
  42270a:	48 8d 85 30 f0 ff ff 	lea    -0xfd0(%rbp),%rax
  422711:	48 83 c0 18          	add    $0x18,%rax
  422715:	48 8b b5 38 fd ff ff 	mov    -0x2c8(%rbp),%rsi
  42271c:	48 89 c7             	mov    %rax,%rdi
  42271f:	e8 7c 86 ff ff       	callq  41ada0 <mbedtls_mpi_copy>
  422724:	89 85 1c fd ff ff    	mov    %eax,-0x2e4(%rbp)
  42272a:	83 f8 00             	cmp    $0x0,%eax
  42272d:	74 05                	je     422734 <mbedtls_mpi_exp_mod+0xaa4>
  42272f:	e9 79 09 00 00       	jmpq   4230ad <mbedtls_mpi_exp_mod+0x141d>
  422734:	eb 00                	jmp    422736 <mbedtls_mpi_exp_mod+0xaa6>
  422736:	eb 00                	jmp    422738 <mbedtls_mpi_exp_mod+0xaa8>
  422738:	eb 00                	jmp    42273a <mbedtls_mpi_exp_mod+0xaaa>
  42273a:	48 8d 85 30 f0 ff ff 	lea    -0xfd0(%rbp),%rax
  422741:	48 83 c0 18          	add    $0x18,%rax
  422745:	48 8b 95 28 fd ff ff 	mov    -0x2d8(%rbp),%rdx
  42274c:	48 8b 8d c8 fc ff ff 	mov    -0x338(%rbp),%rcx
  422753:	48 89 c7             	mov    %rax,%rdi
  422756:	48 8d b5 90 fc ff ff 	lea    -0x370(%rbp),%rsi
  42275d:	4c 8d 85 60 fc ff ff 	lea    -0x3a0(%rbp),%r8
  422764:	e8 27 11 00 00       	callq  423890 <mpi_montmul>
  422769:	89 85 1c fd ff ff    	mov    %eax,-0x2e4(%rbp)
  42276f:	83 f8 00             	cmp    $0x0,%eax
  422772:	74 05                	je     422779 <mbedtls_mpi_exp_mod+0xae9>
  422774:	e9 34 09 00 00       	jmpq   4230ad <mbedtls_mpi_exp_mod+0x141d>
  422779:	eb 00                	jmp    42277b <mbedtls_mpi_exp_mod+0xaeb>
  42277b:	eb 00                	jmp    42277d <mbedtls_mpi_exp_mod+0xaed>
  42277d:	48 8b bd 40 fd ff ff 	mov    -0x2c0(%rbp),%rdi
  422784:	48 8d b5 90 fc ff ff 	lea    -0x370(%rbp),%rsi
  42278b:	e8 10 86 ff ff       	callq  41ada0 <mbedtls_mpi_copy>
  422790:	89 85 1c fd ff ff    	mov    %eax,-0x2e4(%rbp)
  422796:	83 f8 00             	cmp    $0x0,%eax
  422799:	74 05                	je     4227a0 <mbedtls_mpi_exp_mod+0xb10>
  42279b:	e9 0d 09 00 00       	jmpq   4230ad <mbedtls_mpi_exp_mod+0x141d>
  4227a0:	eb 00                	jmp    4227a2 <mbedtls_mpi_exp_mod+0xb12>
  4227a2:	eb 00                	jmp    4227a4 <mbedtls_mpi_exp_mod+0xb14>
  4227a4:	48 8b 85 40 fd ff ff 	mov    -0x2c0(%rbp),%rax
  4227ab:	48 8b 8d 28 fd ff ff 	mov    -0x2d8(%rbp),%rcx
  4227b2:	48 8b 95 c8 fc ff ff 	mov    -0x338(%rbp),%rdx
  4227b9:	48 89 85 b0 ee ff ff 	mov    %rax,-0x1150(%rbp)
  4227c0:	48 89 8d a8 ee ff ff 	mov    %rcx,-0x1158(%rbp)
  4227c7:	48 89 95 a0 ee ff ff 	mov    %rdx,-0x1160(%rbp)
  4227ce:	e8 83 31 02 00       	callq  445956 <writeback_cache>
  4227d3:	e8 7e 31 02 00       	callq  445956 <writeback_cache>
  4227d8:	be 01 00 00 00       	mov    $0x1,%esi
  4227dd:	48 8b 85 b0 ee ff ff 	mov    -0x1150(%rbp),%rax
  4227e4:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
  4227eb:	48 8b 85 a8 ee ff ff 	mov    -0x1158(%rbp),%rax
  4227f2:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
  4227f9:	48 8b 85 a0 ee ff ff 	mov    -0x1160(%rbp),%rax
  422800:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
  422807:	48 8d 85 60 fc ff ff 	lea    -0x3a0(%rbp),%rax
  42280e:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
  422815:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
  42281c:	48 89 c7             	mov    %rax,%rdi
  42281f:	e8 d8 34 02 00       	callq  445cfc <setEncryptedValueQWord>
  422824:	48 8d 8d c0 fe ff ff 	lea    -0x140(%rbp),%rcx
  42282b:	48 89 cf             	mov    %rcx,%rdi
  42282e:	48 89 85 98 ee ff ff 	mov    %rax,-0x1168(%rbp)
  422835:	e8 0e 39 02 00       	callq  446148 <getDecryptedValueQWord>
  42283a:	41 89 c0             	mov    %eax,%r8d
  42283d:	44 89 85 90 fe ff ff 	mov    %r8d,-0x170(%rbp)
  422844:	49 63 f0             	movslq %r8d,%rsi
  422847:	48 8d 85 90 fe ff ff 	lea    -0x170(%rbp),%rax
  42284e:	48 83 c0 08          	add    $0x8,%rax
  422852:	48 89 c7             	mov    %rax,%rdi
  422855:	e8 a2 34 02 00       	callq  445cfc <setEncryptedValueQWord>
  42285a:	48 8d b5 c0 fe ff ff 	lea    -0x140(%rbp),%rsi
  422861:	48 8d 8d 90 fe ff ff 	lea    -0x170(%rbp),%rcx
  422868:	48 83 c1 10          	add    $0x10,%rcx
  42286c:	48 89 cf             	mov    %rcx,%rdi
  42286f:	48 89 85 90 ee ff ff 	mov    %rax,-0x1170(%rbp)
  422876:	e8 81 34 02 00       	callq  445cfc <setEncryptedValueQWord>
  42287b:	48 8b bd 08 ff ff ff 	mov    -0xf8(%rbp),%rdi
  422882:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
  422889:	48 8b 8d f8 fe ff ff 	mov    -0x108(%rbp),%rcx
  422890:	4c 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%r8
  422897:	48 8d b5 90 fe ff ff 	lea    -0x170(%rbp),%rsi
  42289e:	48 89 85 88 ee ff ff 	mov    %rax,-0x1178(%rbp)
  4228a5:	e8 e6 0f 00 00       	callq  423890 <mpi_montmul>
  4228aa:	89 85 84 ee ff ff    	mov    %eax,-0x117c(%rbp)
  4228b0:	e8 a1 30 02 00       	callq  445956 <writeback_cache>
  4228b5:	e8 9c 30 02 00       	callq  445956 <writeback_cache>
  4228ba:	8b 85 84 ee ff ff    	mov    -0x117c(%rbp),%eax
  4228c0:	89 85 1c fd ff ff    	mov    %eax,-0x2e4(%rbp)
  4228c6:	83 f8 00             	cmp    $0x0,%eax
  4228c9:	74 05                	je     4228d0 <mbedtls_mpi_exp_mod+0xc40>
  4228cb:	e9 dd 07 00 00       	jmpq   4230ad <mbedtls_mpi_exp_mod+0x141d>
  4228d0:	eb 00                	jmp    4228d2 <mbedtls_mpi_exp_mod+0xc42>
  4228d2:	48 83 bd 08 fd ff ff 	cmpq   $0x1,-0x2f8(%rbp)
  4228d9:	01 
  4228da:	0f 86 9b 02 00 00    	jbe    422b7b <mbedtls_mpi_exp_mod+0xeeb>
  4228e0:	48 8b 85 00 fd ff ff 	mov    -0x300(%rbp),%rax
  4228e7:	48 8b 8d 08 fd ff ff 	mov    -0x2f8(%rbp),%rcx
  4228ee:	48 83 e9 01          	sub    $0x1,%rcx
  4228f2:	48 d3 e0             	shl    %cl,%rax
  4228f5:	48 89 85 f0 fc ff ff 	mov    %rax,-0x310(%rbp)
  4228fc:	48 6b 85 f0 fc ff ff 	imul   $0x18,-0x310(%rbp),%rax
  422903:	18 
  422904:	48 8d 8d 30 f0 ff ff 	lea    -0xfd0(%rbp),%rcx
  42290b:	48 01 c1             	add    %rax,%rcx
  42290e:	48 8b 85 28 fd ff ff 	mov    -0x2d8(%rbp),%rax
  422915:	48 83 c0 08          	add    $0x8,%rax
  422919:	48 89 c7             	mov    %rax,%rdi
  42291c:	48 89 8d 78 ee ff ff 	mov    %rcx,-0x1188(%rbp)
  422923:	e8 20 38 02 00       	callq  446148 <getDecryptedValueQWord>
  422928:	48 83 c0 01          	add    $0x1,%rax
  42292c:	48 8b bd 78 ee ff ff 	mov    -0x1188(%rbp),%rdi
  422933:	48 89 c6             	mov    %rax,%rsi
  422936:	e8 05 82 ff ff       	callq  41ab40 <mbedtls_mpi_grow>
  42293b:	89 85 1c fd ff ff    	mov    %eax,-0x2e4(%rbp)
  422941:	83 f8 00             	cmp    $0x0,%eax
  422944:	74 05                	je     42294b <mbedtls_mpi_exp_mod+0xcbb>
  422946:	e9 62 07 00 00       	jmpq   4230ad <mbedtls_mpi_exp_mod+0x141d>
  42294b:	eb 00                	jmp    42294d <mbedtls_mpi_exp_mod+0xcbd>
  42294d:	eb 00                	jmp    42294f <mbedtls_mpi_exp_mod+0xcbf>
  42294f:	48 6b 85 f0 fc ff ff 	imul   $0x18,-0x310(%rbp),%rax
  422956:	18 
  422957:	48 8d 8d 30 f0 ff ff 	lea    -0xfd0(%rbp),%rcx
  42295e:	48 89 ca             	mov    %rcx,%rdx
  422961:	48 01 c2             	add    %rax,%rdx
  422964:	48 83 c1 18          	add    $0x18,%rcx
  422968:	48 89 d7             	mov    %rdx,%rdi
  42296b:	48 89 ce             	mov    %rcx,%rsi
  42296e:	e8 2d 84 ff ff       	callq  41ada0 <mbedtls_mpi_copy>
  422973:	89 85 1c fd ff ff    	mov    %eax,-0x2e4(%rbp)
  422979:	83 f8 00             	cmp    $0x0,%eax
  42297c:	74 05                	je     422983 <mbedtls_mpi_exp_mod+0xcf3>
  42297e:	e9 2a 07 00 00       	jmpq   4230ad <mbedtls_mpi_exp_mod+0x141d>
  422983:	eb 00                	jmp    422985 <mbedtls_mpi_exp_mod+0xcf5>
  422985:	48 c7 85 f8 fc ff ff 	movq   $0x0,-0x308(%rbp)
  42298c:	00 00 00 00 
  422990:	48 8b 85 f8 fc ff ff 	mov    -0x308(%rbp),%rax
  422997:	48 8b 8d 08 fd ff ff 	mov    -0x2f8(%rbp),%rcx
  42299e:	48 83 e9 01          	sub    $0x1,%rcx
  4229a2:	48 39 c8             	cmp    %rcx,%rax
  4229a5:	73 7e                	jae    422a25 <mbedtls_mpi_exp_mod+0xd95>
  4229a7:	eb 00                	jmp    4229a9 <mbedtls_mpi_exp_mod+0xd19>
  4229a9:	48 6b 85 f0 fc ff ff 	imul   $0x18,-0x310(%rbp),%rax
  4229b0:	18 
  4229b1:	48 8d 8d 30 f0 ff ff 	lea    -0xfd0(%rbp),%rcx
  4229b8:	48 89 ca             	mov    %rcx,%rdx
  4229bb:	48 01 c2             	add    %rax,%rdx
  4229be:	48 6b 85 f0 fc ff ff 	imul   $0x18,-0x310(%rbp),%rax
  4229c5:	18 
  4229c6:	48 01 c1             	add    %rax,%rcx
  4229c9:	48 8b 85 28 fd ff ff 	mov    -0x2d8(%rbp),%rax
  4229d0:	48 8b b5 c8 fc ff ff 	mov    -0x338(%rbp),%rsi
  4229d7:	48 89 d7             	mov    %rdx,%rdi
  4229da:	48 89 b5 70 ee ff ff 	mov    %rsi,-0x1190(%rbp)
  4229e1:	48 89 ce             	mov    %rcx,%rsi
  4229e4:	48 89 c2             	mov    %rax,%rdx
  4229e7:	48 8b 8d 70 ee ff ff 	mov    -0x1190(%rbp),%rcx
  4229ee:	4c 8d 85 60 fc ff ff 	lea    -0x3a0(%rbp),%r8
  4229f5:	e8 96 0e 00 00       	callq  423890 <mpi_montmul>
  4229fa:	89 85 1c fd ff ff    	mov    %eax,-0x2e4(%rbp)
  422a00:	83 f8 00             	cmp    $0x0,%eax
  422a03:	74 05                	je     422a0a <mbedtls_mpi_exp_mod+0xd7a>
  422a05:	e9 a3 06 00 00       	jmpq   4230ad <mbedtls_mpi_exp_mod+0x141d>
  422a0a:	eb 00                	jmp    422a0c <mbedtls_mpi_exp_mod+0xd7c>
  422a0c:	eb 00                	jmp    422a0e <mbedtls_mpi_exp_mod+0xd7e>
  422a0e:	48 8b 85 f8 fc ff ff 	mov    -0x308(%rbp),%rax
  422a15:	48 83 c0 01          	add    $0x1,%rax
  422a19:	48 89 85 f8 fc ff ff 	mov    %rax,-0x308(%rbp)
  422a20:	e9 6b ff ff ff       	jmpq   422990 <mbedtls_mpi_exp_mod+0xd00>
  422a25:	48 8b 85 f0 fc ff ff 	mov    -0x310(%rbp),%rax
  422a2c:	48 83 c0 01          	add    $0x1,%rax
  422a30:	48 89 85 f8 fc ff ff 	mov    %rax,-0x308(%rbp)
  422a37:	48 8b 85 f8 fc ff ff 	mov    -0x308(%rbp),%rax
  422a3e:	48 8b 8d 00 fd ff ff 	mov    -0x300(%rbp),%rcx
  422a45:	48 8b 95 08 fd ff ff 	mov    -0x2f8(%rbp),%rdx
  422a4c:	48 89 8d 68 ee ff ff 	mov    %rcx,-0x1198(%rbp)
  422a53:	48 89 d1             	mov    %rdx,%rcx
  422a56:	48 8b 95 68 ee ff ff 	mov    -0x1198(%rbp),%rdx
  422a5d:	48 d3 e2             	shl    %cl,%rdx
  422a60:	48 39 d0             	cmp    %rdx,%rax
  422a63:	0f 83 10 01 00 00    	jae    422b79 <mbedtls_mpi_exp_mod+0xee9>
  422a69:	eb 00                	jmp    422a6b <mbedtls_mpi_exp_mod+0xddb>
  422a6b:	48 6b 85 f8 fc ff ff 	imul   $0x18,-0x308(%rbp),%rax
  422a72:	18 
  422a73:	48 8d 8d 30 f0 ff ff 	lea    -0xfd0(%rbp),%rcx
  422a7a:	48 01 c1             	add    %rax,%rcx
  422a7d:	48 8b 85 28 fd ff ff 	mov    -0x2d8(%rbp),%rax
  422a84:	48 83 c0 08          	add    $0x8,%rax
  422a88:	48 89 c7             	mov    %rax,%rdi
  422a8b:	48 89 8d 60 ee ff ff 	mov    %rcx,-0x11a0(%rbp)
  422a92:	e8 b1 36 02 00       	callq  446148 <getDecryptedValueQWord>
  422a97:	48 83 c0 01          	add    $0x1,%rax
  422a9b:	48 8b bd 60 ee ff ff 	mov    -0x11a0(%rbp),%rdi
  422aa2:	48 89 c6             	mov    %rax,%rsi
  422aa5:	e8 96 80 ff ff       	callq  41ab40 <mbedtls_mpi_grow>
  422aaa:	89 85 1c fd ff ff    	mov    %eax,-0x2e4(%rbp)
  422ab0:	83 f8 00             	cmp    $0x0,%eax
  422ab3:	74 05                	je     422aba <mbedtls_mpi_exp_mod+0xe2a>
  422ab5:	e9 f3 05 00 00       	jmpq   4230ad <mbedtls_mpi_exp_mod+0x141d>
  422aba:	eb 00                	jmp    422abc <mbedtls_mpi_exp_mod+0xe2c>
  422abc:	eb 00                	jmp    422abe <mbedtls_mpi_exp_mod+0xe2e>
  422abe:	48 6b 85 f8 fc ff ff 	imul   $0x18,-0x308(%rbp),%rax
  422ac5:	18 
  422ac6:	48 8d 8d 30 f0 ff ff 	lea    -0xfd0(%rbp),%rcx
  422acd:	48 89 ca             	mov    %rcx,%rdx
  422ad0:	48 01 c2             	add    %rax,%rdx
  422ad3:	48 8b 85 f8 fc ff ff 	mov    -0x308(%rbp),%rax
  422ada:	48 83 e8 01          	sub    $0x1,%rax
  422ade:	48 6b c0 18          	imul   $0x18,%rax,%rax
  422ae2:	48 01 c1             	add    %rax,%rcx
  422ae5:	48 89 d7             	mov    %rdx,%rdi
  422ae8:	48 89 ce             	mov    %rcx,%rsi
  422aeb:	e8 b0 82 ff ff       	callq  41ada0 <mbedtls_mpi_copy>
  422af0:	89 85 1c fd ff ff    	mov    %eax,-0x2e4(%rbp)
  422af6:	83 f8 00             	cmp    $0x0,%eax
  422af9:	74 05                	je     422b00 <mbedtls_mpi_exp_mod+0xe70>
  422afb:	e9 ad 05 00 00       	jmpq   4230ad <mbedtls_mpi_exp_mod+0x141d>
  422b00:	eb 00                	jmp    422b02 <mbedtls_mpi_exp_mod+0xe72>
  422b02:	eb 00                	jmp    422b04 <mbedtls_mpi_exp_mod+0xe74>
  422b04:	48 6b 85 f8 fc ff ff 	imul   $0x18,-0x308(%rbp),%rax
  422b0b:	18 
  422b0c:	48 8d 8d 30 f0 ff ff 	lea    -0xfd0(%rbp),%rcx
  422b13:	48 89 ca             	mov    %rcx,%rdx
  422b16:	48 01 c2             	add    %rax,%rdx
  422b19:	48 83 c1 18          	add    $0x18,%rcx
  422b1d:	48 8b 85 28 fd ff ff 	mov    -0x2d8(%rbp),%rax
  422b24:	48 8b b5 c8 fc ff ff 	mov    -0x338(%rbp),%rsi
  422b2b:	48 89 d7             	mov    %rdx,%rdi
  422b2e:	48 89 b5 58 ee ff ff 	mov    %rsi,-0x11a8(%rbp)
  422b35:	48 89 ce             	mov    %rcx,%rsi
  422b38:	48 89 c2             	mov    %rax,%rdx
  422b3b:	48 8b 8d 58 ee ff ff 	mov    -0x11a8(%rbp),%rcx
  422b42:	4c 8d 85 60 fc ff ff 	lea    -0x3a0(%rbp),%r8
  422b49:	e8 42 0d 00 00       	callq  423890 <mpi_montmul>
  422b4e:	89 85 1c fd ff ff    	mov    %eax,-0x2e4(%rbp)
  422b54:	83 f8 00             	cmp    $0x0,%eax
  422b57:	74 05                	je     422b5e <mbedtls_mpi_exp_mod+0xece>
  422b59:	e9 4f 05 00 00       	jmpq   4230ad <mbedtls_mpi_exp_mod+0x141d>
  422b5e:	eb 00                	jmp    422b60 <mbedtls_mpi_exp_mod+0xed0>
  422b60:	eb 00                	jmp    422b62 <mbedtls_mpi_exp_mod+0xed2>
  422b62:	48 8b 85 f8 fc ff ff 	mov    -0x308(%rbp),%rax
  422b69:	48 83 c0 01          	add    $0x1,%rax
  422b6d:	48 89 85 f8 fc ff ff 	mov    %rax,-0x308(%rbp)
  422b74:	e9 be fe ff ff       	jmpq   422a37 <mbedtls_mpi_exp_mod+0xda7>
  422b79:	eb 00                	jmp    422b7b <mbedtls_mpi_exp_mod+0xeeb>
  422b7b:	48 8b 85 30 fd ff ff 	mov    -0x2d0(%rbp),%rax
  422b82:	48 83 c0 08          	add    $0x8,%rax
  422b86:	48 89 c7             	mov    %rax,%rdi
  422b89:	e8 ba 35 02 00       	callq  446148 <getDecryptedValueQWord>
  422b8e:	48 89 85 e8 fc ff ff 	mov    %rax,-0x318(%rbp)
  422b95:	48 c7 85 e0 fc ff ff 	movq   $0x0,-0x320(%rbp)
  422b9c:	00 00 00 00 
  422ba0:	48 c7 85 d8 fc ff ff 	movq   $0x0,-0x328(%rbp)
  422ba7:	00 00 00 00 
  422bab:	48 c7 85 10 fd ff ff 	movq   $0x0,-0x2f0(%rbp)
  422bb2:	00 00 00 00 
  422bb6:	48 c7 85 c0 fc ff ff 	movq   $0x0,-0x340(%rbp)
  422bbd:	00 00 00 00 
  422bc1:	48 83 bd e0 fc ff ff 	cmpq   $0x0,-0x320(%rbp)
  422bc8:	00 
  422bc9:	75 2c                	jne    422bf7 <mbedtls_mpi_exp_mod+0xf67>
  422bcb:	48 83 bd e8 fc ff ff 	cmpq   $0x0,-0x318(%rbp)
  422bd2:	00 
  422bd3:	75 05                	jne    422bda <mbedtls_mpi_exp_mod+0xf4a>
  422bd5:	e9 19 02 00 00       	jmpq   422df3 <mbedtls_mpi_exp_mod+0x1163>
  422bda:	48 8b 85 e8 fc ff ff 	mov    -0x318(%rbp),%rax
  422be1:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
  422be5:	48 89 85 e8 fc ff ff 	mov    %rax,-0x318(%rbp)
  422bec:	48 c7 85 e0 fc ff ff 	movq   $0x40,-0x320(%rbp)
  422bf3:	40 00 00 00 
  422bf7:	48 8b 85 e0 fc ff ff 	mov    -0x320(%rbp),%rax
  422bfe:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
  422c02:	48 89 85 e0 fc ff ff 	mov    %rax,-0x320(%rbp)
  422c09:	48 8b 85 30 fd ff ff 	mov    -0x2d0(%rbp),%rax
  422c10:	48 83 c0 10          	add    $0x10,%rax
  422c14:	48 89 c7             	mov    %rax,%rdi
  422c17:	e8 2c 35 02 00       	callq  446148 <getDecryptedValueQWord>
  422c1c:	48 8b bd e8 fc ff ff 	mov    -0x318(%rbp),%rdi
  422c23:	48 c1 e7 03          	shl    $0x3,%rdi
  422c27:	48 01 f8             	add    %rdi,%rax
  422c2a:	48 89 c7             	mov    %rax,%rdi
  422c2d:	e8 16 35 02 00       	callq  446148 <getDecryptedValueQWord>
  422c32:	48 8b 8d e0 fc ff ff 	mov    -0x320(%rbp),%rcx
  422c39:	48 d3 e8             	shr    %cl,%rax
  422c3c:	48 83 e0 01          	and    $0x1,%rax
  422c40:	48 89 85 d0 fc ff ff 	mov    %rax,-0x330(%rbp)
  422c47:	48 83 bd d0 fc ff ff 	cmpq   $0x0,-0x330(%rbp)
  422c4e:	00 
  422c4f:	75 0f                	jne    422c60 <mbedtls_mpi_exp_mod+0xfd0>
  422c51:	48 83 bd c0 fc ff ff 	cmpq   $0x0,-0x340(%rbp)
  422c58:	00 
  422c59:	75 05                	jne    422c60 <mbedtls_mpi_exp_mod+0xfd0>
  422c5b:	e9 61 ff ff ff       	jmpq   422bc1 <mbedtls_mpi_exp_mod+0xf31>
  422c60:	48 83 bd d0 fc ff ff 	cmpq   $0x0,-0x330(%rbp)
  422c67:	00 
  422c68:	75 4b                	jne    422cb5 <mbedtls_mpi_exp_mod+0x1025>
  422c6a:	48 83 bd c0 fc ff ff 	cmpq   $0x1,-0x340(%rbp)
  422c71:	01 
  422c72:	75 41                	jne    422cb5 <mbedtls_mpi_exp_mod+0x1025>
  422c74:	eb 00                	jmp    422c76 <mbedtls_mpi_exp_mod+0xfe6>
  422c76:	48 8b bd 40 fd ff ff 	mov    -0x2c0(%rbp),%rdi
  422c7d:	48 8b b5 40 fd ff ff 	mov    -0x2c0(%rbp),%rsi
  422c84:	48 8b 95 28 fd ff ff 	mov    -0x2d8(%rbp),%rdx
  422c8b:	48 8b 8d c8 fc ff ff 	mov    -0x338(%rbp),%rcx
  422c92:	4c 8d 85 60 fc ff ff 	lea    -0x3a0(%rbp),%r8
  422c99:	e8 f2 0b 00 00       	callq  423890 <mpi_montmul>
  422c9e:	89 85 1c fd ff ff    	mov    %eax,-0x2e4(%rbp)
  422ca4:	83 f8 00             	cmp    $0x0,%eax
  422ca7:	74 05                	je     422cae <mbedtls_mpi_exp_mod+0x101e>
  422ca9:	e9 ff 03 00 00       	jmpq   4230ad <mbedtls_mpi_exp_mod+0x141d>
  422cae:	eb 00                	jmp    422cb0 <mbedtls_mpi_exp_mod+0x1020>
  422cb0:	e9 0c ff ff ff       	jmpq   422bc1 <mbedtls_mpi_exp_mod+0xf31>
  422cb5:	48 c7 85 c0 fc ff ff 	movq   $0x2,-0x340(%rbp)
  422cbc:	02 00 00 00 
  422cc0:	48 8b 85 d8 fc ff ff 	mov    -0x328(%rbp),%rax
  422cc7:	48 83 c0 01          	add    $0x1,%rax
  422ccb:	48 89 85 d8 fc ff ff 	mov    %rax,-0x328(%rbp)
  422cd2:	48 8b 85 d0 fc ff ff 	mov    -0x330(%rbp),%rax
  422cd9:	48 8b 8d 08 fd ff ff 	mov    -0x2f8(%rbp),%rcx
  422ce0:	48 2b 8d d8 fc ff ff 	sub    -0x328(%rbp),%rcx
  422ce7:	48 d3 e0             	shl    %cl,%rax
  422cea:	48 0b 85 10 fd ff ff 	or     -0x2f0(%rbp),%rax
  422cf1:	48 89 85 10 fd ff ff 	mov    %rax,-0x2f0(%rbp)
  422cf8:	48 8b 85 d8 fc ff ff 	mov    -0x328(%rbp),%rax
  422cff:	48 3b 85 08 fd ff ff 	cmp    -0x2f8(%rbp),%rax
  422d06:	0f 85 e2 00 00 00    	jne    422dee <mbedtls_mpi_exp_mod+0x115e>
  422d0c:	48 c7 85 f8 fc ff ff 	movq   $0x0,-0x308(%rbp)
  422d13:	00 00 00 00 
  422d17:	48 8b 85 f8 fc ff ff 	mov    -0x308(%rbp),%rax
  422d1e:	48 3b 85 08 fd ff ff 	cmp    -0x2f8(%rbp),%rax
  422d25:	73 52                	jae    422d79 <mbedtls_mpi_exp_mod+0x10e9>
  422d27:	eb 00                	jmp    422d29 <mbedtls_mpi_exp_mod+0x1099>
  422d29:	48 8b bd 40 fd ff ff 	mov    -0x2c0(%rbp),%rdi
  422d30:	48 8b b5 40 fd ff ff 	mov    -0x2c0(%rbp),%rsi
  422d37:	48 8b 95 28 fd ff ff 	mov    -0x2d8(%rbp),%rdx
  422d3e:	48 8b 8d c8 fc ff ff 	mov    -0x338(%rbp),%rcx
  422d45:	4c 8d 85 60 fc ff ff 	lea    -0x3a0(%rbp),%r8
  422d4c:	e8 3f 0b 00 00       	callq  423890 <mpi_montmul>
  422d51:	89 85 1c fd ff ff    	mov    %eax,-0x2e4(%rbp)
  422d57:	83 f8 00             	cmp    $0x0,%eax
  422d5a:	74 05                	je     422d61 <mbedtls_mpi_exp_mod+0x10d1>
  422d5c:	e9 4c 03 00 00       	jmpq   4230ad <mbedtls_mpi_exp_mod+0x141d>
  422d61:	eb 00                	jmp    422d63 <mbedtls_mpi_exp_mod+0x10d3>
  422d63:	eb 00                	jmp    422d65 <mbedtls_mpi_exp_mod+0x10d5>
  422d65:	48 8b 85 f8 fc ff ff 	mov    -0x308(%rbp),%rax
  422d6c:	48 83 c0 01          	add    $0x1,%rax
  422d70:	48 89 85 f8 fc ff ff 	mov    %rax,-0x308(%rbp)
  422d77:	eb 9e                	jmp    422d17 <mbedtls_mpi_exp_mod+0x1087>
  422d79:	eb 00                	jmp    422d7b <mbedtls_mpi_exp_mod+0x10eb>
  422d7b:	48 8b bd 40 fd ff ff 	mov    -0x2c0(%rbp),%rdi
  422d82:	48 6b 85 10 fd ff ff 	imul   $0x18,-0x2f0(%rbp),%rax
  422d89:	18 
  422d8a:	48 8d 8d 30 f0 ff ff 	lea    -0xfd0(%rbp),%rcx
  422d91:	48 01 c1             	add    %rax,%rcx
  422d94:	48 8b 95 28 fd ff ff 	mov    -0x2d8(%rbp),%rdx
  422d9b:	48 8b 85 c8 fc ff ff 	mov    -0x338(%rbp),%rax
  422da2:	48 89 ce             	mov    %rcx,%rsi
  422da5:	48 89 c1             	mov    %rax,%rcx
  422da8:	4c 8d 85 60 fc ff ff 	lea    -0x3a0(%rbp),%r8
  422daf:	e8 dc 0a 00 00       	callq  423890 <mpi_montmul>
  422db4:	89 85 1c fd ff ff    	mov    %eax,-0x2e4(%rbp)
  422dba:	83 f8 00             	cmp    $0x0,%eax
  422dbd:	74 05                	je     422dc4 <mbedtls_mpi_exp_mod+0x1134>
  422dbf:	e9 e9 02 00 00       	jmpq   4230ad <mbedtls_mpi_exp_mod+0x141d>
  422dc4:	eb 00                	jmp    422dc6 <mbedtls_mpi_exp_mod+0x1136>
  422dc6:	48 8b 85 c0 fc ff ff 	mov    -0x340(%rbp),%rax
  422dcd:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
  422dd1:	48 89 85 c0 fc ff ff 	mov    %rax,-0x340(%rbp)
  422dd8:	48 c7 85 d8 fc ff ff 	movq   $0x0,-0x328(%rbp)
  422ddf:	00 00 00 00 
  422de3:	48 c7 85 10 fd ff ff 	movq   $0x0,-0x2f0(%rbp)
  422dea:	00 00 00 00 
  422dee:	e9 ce fd ff ff       	jmpq   422bc1 <mbedtls_mpi_exp_mod+0xf31>
  422df3:	48 c7 85 f8 fc ff ff 	movq   $0x0,-0x308(%rbp)
  422dfa:	00 00 00 00 
  422dfe:	48 8b 85 f8 fc ff ff 	mov    -0x308(%rbp),%rax
  422e05:	48 3b 85 d8 fc ff ff 	cmp    -0x328(%rbp),%rax
  422e0c:	0f 83 de 00 00 00    	jae    422ef0 <mbedtls_mpi_exp_mod+0x1260>
  422e12:	eb 00                	jmp    422e14 <mbedtls_mpi_exp_mod+0x1184>
  422e14:	48 8b bd 40 fd ff ff 	mov    -0x2c0(%rbp),%rdi
  422e1b:	48 8b b5 40 fd ff ff 	mov    -0x2c0(%rbp),%rsi
  422e22:	48 8b 95 28 fd ff ff 	mov    -0x2d8(%rbp),%rdx
  422e29:	48 8b 8d c8 fc ff ff 	mov    -0x338(%rbp),%rcx
  422e30:	4c 8d 85 60 fc ff ff 	lea    -0x3a0(%rbp),%r8
  422e37:	e8 54 0a 00 00       	callq  423890 <mpi_montmul>
  422e3c:	89 85 1c fd ff ff    	mov    %eax,-0x2e4(%rbp)
  422e42:	83 f8 00             	cmp    $0x0,%eax
  422e45:	74 05                	je     422e4c <mbedtls_mpi_exp_mod+0x11bc>
  422e47:	e9 61 02 00 00       	jmpq   4230ad <mbedtls_mpi_exp_mod+0x141d>
  422e4c:	eb 00                	jmp    422e4e <mbedtls_mpi_exp_mod+0x11be>
  422e4e:	48 8b 85 10 fd ff ff 	mov    -0x2f0(%rbp),%rax
  422e55:	48 c1 e0 01          	shl    $0x1,%rax
  422e59:	48 89 85 10 fd ff ff 	mov    %rax,-0x2f0(%rbp)
  422e60:	48 8b 85 10 fd ff ff 	mov    -0x2f0(%rbp),%rax
  422e67:	48 8b 8d 00 fd ff ff 	mov    -0x300(%rbp),%rcx
  422e6e:	48 8b 95 08 fd ff ff 	mov    -0x2f8(%rbp),%rdx
  422e75:	48 89 8d 50 ee ff ff 	mov    %rcx,-0x11b0(%rbp)
  422e7c:	48 89 d1             	mov    %rdx,%rcx
  422e7f:	48 8b 95 50 ee ff ff 	mov    -0x11b0(%rbp),%rdx
  422e86:	48 d3 e2             	shl    %cl,%rdx
  422e89:	48 21 d0             	and    %rdx,%rax
  422e8c:	48 83 f8 00          	cmp    $0x0,%rax
  422e90:	74 45                	je     422ed7 <mbedtls_mpi_exp_mod+0x1247>
  422e92:	eb 00                	jmp    422e94 <mbedtls_mpi_exp_mod+0x1204>
  422e94:	48 8b bd 40 fd ff ff 	mov    -0x2c0(%rbp),%rdi
  422e9b:	48 8d 85 30 f0 ff ff 	lea    -0xfd0(%rbp),%rax
  422ea2:	48 83 c0 18          	add    $0x18,%rax
  422ea6:	48 8b 95 28 fd ff ff 	mov    -0x2d8(%rbp),%rdx
  422ead:	48 8b 8d c8 fc ff ff 	mov    -0x338(%rbp),%rcx
  422eb4:	48 89 c6             	mov    %rax,%rsi
  422eb7:	4c 8d 85 60 fc ff ff 	lea    -0x3a0(%rbp),%r8
  422ebe:	e8 cd 09 00 00       	callq  423890 <mpi_montmul>
  422ec3:	89 85 1c fd ff ff    	mov    %eax,-0x2e4(%rbp)
  422ec9:	83 f8 00             	cmp    $0x0,%eax
  422ecc:	74 05                	je     422ed3 <mbedtls_mpi_exp_mod+0x1243>
  422ece:	e9 da 01 00 00       	jmpq   4230ad <mbedtls_mpi_exp_mod+0x141d>
  422ed3:	eb 00                	jmp    422ed5 <mbedtls_mpi_exp_mod+0x1245>
  422ed5:	eb 00                	jmp    422ed7 <mbedtls_mpi_exp_mod+0x1247>
  422ed7:	eb 00                	jmp    422ed9 <mbedtls_mpi_exp_mod+0x1249>
  422ed9:	48 8b 85 f8 fc ff ff 	mov    -0x308(%rbp),%rax
  422ee0:	48 83 c0 01          	add    $0x1,%rax
  422ee4:	48 89 85 f8 fc ff ff 	mov    %rax,-0x308(%rbp)
  422eeb:	e9 0e ff ff ff       	jmpq   422dfe <mbedtls_mpi_exp_mod+0x116e>
  422ef0:	eb 00                	jmp    422ef2 <mbedtls_mpi_exp_mod+0x1262>
  422ef2:	48 8b 85 40 fd ff ff 	mov    -0x2c0(%rbp),%rax
  422ef9:	48 8b 8d 28 fd ff ff 	mov    -0x2d8(%rbp),%rcx
  422f00:	48 8b 95 c8 fc ff ff 	mov    -0x338(%rbp),%rdx
  422f07:	48 89 85 48 ee ff ff 	mov    %rax,-0x11b8(%rbp)
  422f0e:	48 89 8d 40 ee ff ff 	mov    %rcx,-0x11c0(%rbp)
  422f15:	48 89 95 38 ee ff ff 	mov    %rdx,-0x11c8(%rbp)
  422f1c:	e8 35 2a 02 00       	callq  445956 <writeback_cache>
  422f21:	e8 30 2a 02 00       	callq  445956 <writeback_cache>
  422f26:	be 01 00 00 00       	mov    $0x1,%esi
  422f2b:	48 8b 85 48 ee ff ff 	mov    -0x11b8(%rbp),%rax
  422f32:	48 89 45 80          	mov    %rax,-0x80(%rbp)
  422f36:	48 8b 85 40 ee ff ff 	mov    -0x11c0(%rbp),%rax
  422f3d:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  422f44:	48 8b 85 38 ee ff ff 	mov    -0x11c8(%rbp),%rax
  422f4b:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
  422f52:	48 8d 85 60 fc ff ff 	lea    -0x3a0(%rbp),%rax
  422f59:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
  422f60:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
  422f67:	48 89 c7             	mov    %rax,%rdi
  422f6a:	e8 8d 2d 02 00       	callq  445cfc <setEncryptedValueQWord>
  422f6f:	48 8d 8d 40 ff ff ff 	lea    -0xc0(%rbp),%rcx
  422f76:	48 89 cf             	mov    %rcx,%rdi
  422f79:	48 89 85 30 ee ff ff 	mov    %rax,-0x11d0(%rbp)
  422f80:	e8 c3 31 02 00       	callq  446148 <getDecryptedValueQWord>
  422f85:	41 89 c0             	mov    %eax,%r8d
  422f88:	44 89 85 10 ff ff ff 	mov    %r8d,-0xf0(%rbp)
  422f8f:	49 63 f0             	movslq %r8d,%rsi
  422f92:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
  422f99:	48 83 c0 08          	add    $0x8,%rax
  422f9d:	48 89 c7             	mov    %rax,%rdi
  422fa0:	e8 57 2d 02 00       	callq  445cfc <setEncryptedValueQWord>
  422fa5:	48 8d b5 40 ff ff ff 	lea    -0xc0(%rbp),%rsi
  422fac:	48 8d 8d 10 ff ff ff 	lea    -0xf0(%rbp),%rcx
  422fb3:	48 83 c1 10          	add    $0x10,%rcx
  422fb7:	48 89 cf             	mov    %rcx,%rdi
  422fba:	48 89 85 28 ee ff ff 	mov    %rax,-0x11d8(%rbp)
  422fc1:	e8 36 2d 02 00       	callq  445cfc <setEncryptedValueQWord>
  422fc6:	48 8b 7d 80          	mov    -0x80(%rbp),%rdi
  422fca:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
  422fd1:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx
  422fd8:	4c 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%r8
  422fdf:	48 8d b5 10 ff ff ff 	lea    -0xf0(%rbp),%rsi
  422fe6:	48 89 85 20 ee ff ff 	mov    %rax,-0x11e0(%rbp)
  422fed:	e8 9e 08 00 00       	callq  423890 <mpi_montmul>
  422ff2:	89 85 1c ee ff ff    	mov    %eax,-0x11e4(%rbp)
  422ff8:	e8 59 29 02 00       	callq  445956 <writeback_cache>
  422ffd:	e8 54 29 02 00       	callq  445956 <writeback_cache>
  423002:	8b 85 1c ee ff ff    	mov    -0x11e4(%rbp),%eax
  423008:	89 85 1c fd ff ff    	mov    %eax,-0x2e4(%rbp)
  42300e:	83 f8 00             	cmp    $0x0,%eax
  423011:	74 05                	je     423018 <mbedtls_mpi_exp_mod+0x1388>
  423013:	e9 95 00 00 00       	jmpq   4230ad <mbedtls_mpi_exp_mod+0x141d>
  423018:	eb 00                	jmp    42301a <mbedtls_mpi_exp_mod+0x138a>
  42301a:	83 bd fc ef ff ff 00 	cmpl   $0x0,-0x1004(%rbp)
  423021:	0f 84 84 00 00 00    	je     4230ab <mbedtls_mpi_exp_mod+0x141b>
  423027:	48 8b 85 30 fd ff ff 	mov    -0x2d0(%rbp),%rax
  42302e:	48 83 c0 08          	add    $0x8,%rax
  423032:	48 89 c7             	mov    %rax,%rdi
  423035:	e8 0e 31 02 00       	callq  446148 <getDecryptedValueQWord>
  42303a:	48 83 f8 00          	cmp    $0x0,%rax
  42303e:	74 6b                	je     4230ab <mbedtls_mpi_exp_mod+0x141b>
  423040:	48 8b 85 30 fd ff ff 	mov    -0x2d0(%rbp),%rax
  423047:	48 83 c0 10          	add    $0x10,%rax
  42304b:	48 89 c7             	mov    %rax,%rdi
  42304e:	e8 f5 30 02 00       	callq  446148 <getDecryptedValueQWord>
  423053:	48 89 c7             	mov    %rax,%rdi
  423056:	e8 ed 30 02 00       	callq  446148 <getDecryptedValueQWord>
  42305b:	48 83 e0 01          	and    $0x1,%rax
  42305f:	48 83 f8 00          	cmp    $0x0,%rax
  423063:	74 46                	je     4230ab <mbedtls_mpi_exp_mod+0x141b>
  423065:	48 8b 85 40 fd ff ff 	mov    -0x2c0(%rbp),%rax
  42306c:	48 89 c7             	mov    %rax,%rdi
  42306f:	be ff ff ff ff       	mov    $0xffffffff,%esi
  423074:	e8 85 2b 02 00       	callq  445bfe <setEncryptedValueDWord>
  423079:	48 89 85 10 ee ff ff 	mov    %rax,-0x11f0(%rbp)
  423080:	48 8b bd 40 fd ff ff 	mov    -0x2c0(%rbp),%rdi
  423087:	48 8b b5 28 fd ff ff 	mov    -0x2d8(%rbp),%rsi
  42308e:	48 8b 95 40 fd ff ff 	mov    -0x2c0(%rbp),%rdx
  423095:	e8 06 94 ff ff       	callq  41c4a0 <mbedtls_mpi_add_mpi>
  42309a:	89 85 1c fd ff ff    	mov    %eax,-0x2e4(%rbp)
  4230a0:	83 f8 00             	cmp    $0x0,%eax
  4230a3:	74 02                	je     4230a7 <mbedtls_mpi_exp_mod+0x1417>
  4230a5:	eb 06                	jmp    4230ad <mbedtls_mpi_exp_mod+0x141d>
  4230a7:	eb 00                	jmp    4230a9 <mbedtls_mpi_exp_mod+0x1419>
  4230a9:	eb 00                	jmp    4230ab <mbedtls_mpi_exp_mod+0x141b>
  4230ab:	eb 00                	jmp    4230ad <mbedtls_mpi_exp_mod+0x141d>
  4230ad:	48 8b 85 00 fd ff ff 	mov    -0x300(%rbp),%rax
  4230b4:	48 8b 8d 08 fd ff ff 	mov    -0x2f8(%rbp),%rcx
  4230bb:	48 83 e9 01          	sub    $0x1,%rcx
  4230bf:	48 d3 e0             	shl    %cl,%rax
  4230c2:	48 89 85 f8 fc ff ff 	mov    %rax,-0x308(%rbp)
  4230c9:	48 8b 85 f8 fc ff ff 	mov    -0x308(%rbp),%rax
  4230d0:	48 8b 8d 00 fd ff ff 	mov    -0x300(%rbp),%rcx
  4230d7:	48 8b 95 08 fd ff ff 	mov    -0x2f8(%rbp),%rdx
  4230de:	48 89 8d 08 ee ff ff 	mov    %rcx,-0x11f8(%rbp)
  4230e5:	48 89 d1             	mov    %rdx,%rcx
  4230e8:	48 8b 95 08 ee ff ff 	mov    -0x11f8(%rbp),%rdx
  4230ef:	48 d3 e2             	shl    %cl,%rdx
  4230f2:	48 39 d0             	cmp    %rdx,%rax
  4230f5:	0f 83 78 01 00 00    	jae    423273 <mbedtls_mpi_exp_mod+0x15e3>
  4230fb:	48 6b 85 f8 fc ff ff 	imul   $0x18,-0x308(%rbp),%rax
  423102:	18 
  423103:	48 8d 8d 30 f0 ff ff 	lea    -0xfd0(%rbp),%rcx
  42310a:	48 01 c1             	add    %rax,%rcx
  42310d:	48 89 4d 88          	mov    %rcx,-0x78(%rbp)
  423111:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
  423116:	75 05                	jne    42311d <mbedtls_mpi_exp_mod+0x148d>
  423118:	e9 3f 01 00 00       	jmpq   42325c <mbedtls_mpi_exp_mod+0x15cc>
  42311d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  423121:	48 83 c0 10          	add    $0x10,%rax
  423125:	48 89 c7             	mov    %rax,%rdi
  423128:	e8 1b 30 02 00       	callq  446148 <getDecryptedValueQWord>
  42312d:	48 83 f8 00          	cmp    $0x0,%rax
  423131:	0f 84 df 00 00 00    	je     423216 <mbedtls_mpi_exp_mod+0x1586>
  423137:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  42313b:	48 83 c0 10          	add    $0x10,%rax
  42313f:	48 89 c7             	mov    %rax,%rdi
  423142:	e8 01 30 02 00       	callq  446148 <getDecryptedValueQWord>
  423147:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
  42314b:	48 83 c7 08          	add    $0x8,%rdi
  42314f:	48 89 85 00 ee ff ff 	mov    %rax,-0x1200(%rbp)
  423156:	e8 ed 2f 02 00       	callq  446148 <getDecryptedValueQWord>
  42315b:	48 8b bd 00 ee ff ff 	mov    -0x1200(%rbp),%rdi
  423162:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
  423166:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  42316a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  42316e:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  423172:	48 c1 e1 03          	shl    $0x3,%rcx
  423176:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  42317a:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
  42317e:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  423185:	00 
  423186:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
  42318a:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
  42318e:	48 89 85 f8 ed ff ff 	mov    %rax,-0x1208(%rbp)
  423195:	48 89 8d f0 ed ff ff 	mov    %rcx,-0x1210(%rbp)
  42319c:	48 89 95 e8 ed ff ff 	mov    %rdx,-0x1218(%rbp)
  4231a3:	e8 ae 27 02 00       	callq  445956 <writeback_cache>
  4231a8:	48 8b bd f0 ed ff ff 	mov    -0x1210(%rbp),%rdi
  4231af:	48 8b b5 e8 ed ff ff 	mov    -0x1218(%rbp),%rsi
  4231b6:	e8 2a 35 02 00       	callq  4466e5 <decryptArrayForLibCall>
  4231bb:	31 f6                	xor    %esi,%esi
  4231bd:	48 8b bd f0 ed ff ff 	mov    -0x1210(%rbp),%rdi
  4231c4:	48 8b 95 e8 ed ff ff 	mov    -0x1218(%rbp),%rdx
  4231cb:	48 8b 85 f8 ed ff ff 	mov    -0x1208(%rbp),%rax
  4231d2:	ff d0                	callq  *%rax
  4231d4:	48 8b bd f0 ed ff ff 	mov    -0x1210(%rbp),%rdi
  4231db:	48 8b b5 e8 ed ff ff 	mov    -0x1218(%rbp),%rsi
  4231e2:	48 89 85 e0 ed ff ff 	mov    %rax,-0x1220(%rbp)
  4231e9:	e8 68 32 02 00       	callq  446456 <encryptArrayForLibCall>
  4231ee:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  4231f2:	48 83 c0 10          	add    $0x10,%rax
  4231f6:	48 89 c7             	mov    %rax,%rdi
  4231f9:	e8 4a 2f 02 00       	callq  446148 <getDecryptedValueQWord>
  4231fe:	48 89 85 d8 ed ff ff 	mov    %rax,-0x1228(%rbp)
  423205:	e8 4c 27 02 00       	callq  445956 <writeback_cache>
  42320a:	48 8b bd d8 ed ff ff 	mov    -0x1228(%rbp),%rdi
  423211:	e8 ca de fd ff       	callq  4010e0 <free@plt>
  423216:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  42321a:	48 89 c7             	mov    %rax,%rdi
  42321d:	be 01 00 00 00       	mov    $0x1,%esi
  423222:	e8 d7 29 02 00       	callq  445bfe <setEncryptedValueDWord>
  423227:	31 f6                	xor    %esi,%esi
  423229:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
  42322d:	48 83 c7 08          	add    $0x8,%rdi
  423231:	48 89 85 d0 ed ff ff 	mov    %rax,-0x1230(%rbp)
  423238:	e8 bf 2a 02 00       	callq  445cfc <setEncryptedValueQWord>
  42323d:	31 c9                	xor    %ecx,%ecx
  42323f:	89 ce                	mov    %ecx,%esi
  423241:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
  423245:	48 83 c7 10          	add    $0x10,%rdi
  423249:	48 89 85 c8 ed ff ff 	mov    %rax,-0x1238(%rbp)
  423250:	e8 a7 2a 02 00       	callq  445cfc <setEncryptedValueQWord>
  423255:	48 89 85 c0 ed ff ff 	mov    %rax,-0x1240(%rbp)
  42325c:	48 8b 85 f8 fc ff ff 	mov    -0x308(%rbp),%rax
  423263:	48 83 c0 01          	add    $0x1,%rax
  423267:	48 89 85 f8 fc ff ff 	mov    %rax,-0x308(%rbp)
  42326e:	e9 56 fe ff ff       	jmpq   4230c9 <mbedtls_mpi_exp_mod+0x1439>
  423273:	48 8d 85 30 f0 ff ff 	lea    -0xfd0(%rbp),%rax
  42327a:	48 83 c0 18          	add    $0x18,%rax
  42327e:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  423282:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
  423287:	75 05                	jne    42328e <mbedtls_mpi_exp_mod+0x15fe>
  423289:	e9 3f 01 00 00       	jmpq   4233cd <mbedtls_mpi_exp_mod+0x173d>
  42328e:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  423292:	48 83 c0 10          	add    $0x10,%rax
  423296:	48 89 c7             	mov    %rax,%rdi
  423299:	e8 aa 2e 02 00       	callq  446148 <getDecryptedValueQWord>
  42329e:	48 83 f8 00          	cmp    $0x0,%rax
  4232a2:	0f 84 df 00 00 00    	je     423387 <mbedtls_mpi_exp_mod+0x16f7>
  4232a8:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  4232ac:	48 83 c0 10          	add    $0x10,%rax
  4232b0:	48 89 c7             	mov    %rax,%rdi
  4232b3:	e8 90 2e 02 00       	callq  446148 <getDecryptedValueQWord>
  4232b8:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
  4232bc:	48 83 c7 08          	add    $0x8,%rdi
  4232c0:	48 89 85 b8 ed ff ff 	mov    %rax,-0x1248(%rbp)
  4232c7:	e8 7c 2e 02 00       	callq  446148 <getDecryptedValueQWord>
  4232cc:	48 8b bd b8 ed ff ff 	mov    -0x1248(%rbp),%rdi
  4232d3:	48 89 7d c0          	mov    %rdi,-0x40(%rbp)
  4232d7:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  4232db:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4232df:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  4232e3:	48 c1 e1 03          	shl    $0x3,%rcx
  4232e7:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  4232eb:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
  4232ef:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  4232f6:	00 
  4232f7:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  4232fb:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  4232ff:	48 89 85 b0 ed ff ff 	mov    %rax,-0x1250(%rbp)
  423306:	48 89 8d a8 ed ff ff 	mov    %rcx,-0x1258(%rbp)
  42330d:	48 89 95 a0 ed ff ff 	mov    %rdx,-0x1260(%rbp)
  423314:	e8 3d 26 02 00       	callq  445956 <writeback_cache>
  423319:	48 8b bd a8 ed ff ff 	mov    -0x1258(%rbp),%rdi
  423320:	48 8b b5 a0 ed ff ff 	mov    -0x1260(%rbp),%rsi
  423327:	e8 b9 33 02 00       	callq  4466e5 <decryptArrayForLibCall>
  42332c:	31 f6                	xor    %esi,%esi
  42332e:	48 8b bd a8 ed ff ff 	mov    -0x1258(%rbp),%rdi
  423335:	48 8b 95 a0 ed ff ff 	mov    -0x1260(%rbp),%rdx
  42333c:	48 8b 85 b0 ed ff ff 	mov    -0x1250(%rbp),%rax
  423343:	ff d0                	callq  *%rax
  423345:	48 8b bd a8 ed ff ff 	mov    -0x1258(%rbp),%rdi
  42334c:	48 8b b5 a0 ed ff ff 	mov    -0x1260(%rbp),%rsi
  423353:	48 89 85 98 ed ff ff 	mov    %rax,-0x1268(%rbp)
  42335a:	e8 f7 30 02 00       	callq  446456 <encryptArrayForLibCall>
  42335f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  423363:	48 83 c0 10          	add    $0x10,%rax
  423367:	48 89 c7             	mov    %rax,%rdi
  42336a:	e8 d9 2d 02 00       	callq  446148 <getDecryptedValueQWord>
  42336f:	48 89 85 90 ed ff ff 	mov    %rax,-0x1270(%rbp)
  423376:	e8 db 25 02 00       	callq  445956 <writeback_cache>
  42337b:	48 8b bd 90 ed ff ff 	mov    -0x1270(%rbp),%rdi
  423382:	e8 59 dd fd ff       	callq  4010e0 <free@plt>
  423387:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  42338b:	48 89 c7             	mov    %rax,%rdi
  42338e:	be 01 00 00 00       	mov    $0x1,%esi
  423393:	e8 66 28 02 00       	callq  445bfe <setEncryptedValueDWord>
  423398:	31 f6                	xor    %esi,%esi
  42339a:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
  42339e:	48 83 c7 08          	add    $0x8,%rdi
  4233a2:	48 89 85 88 ed ff ff 	mov    %rax,-0x1278(%rbp)
  4233a9:	e8 4e 29 02 00       	callq  445cfc <setEncryptedValueQWord>
  4233ae:	31 c9                	xor    %ecx,%ecx
  4233b0:	89 ce                	mov    %ecx,%esi
  4233b2:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
  4233b6:	48 83 c7 10          	add    $0x10,%rdi
  4233ba:	48 89 85 80 ed ff ff 	mov    %rax,-0x1280(%rbp)
  4233c1:	e8 36 29 02 00       	callq  445cfc <setEncryptedValueQWord>
  4233c6:	48 89 85 78 ed ff ff 	mov    %rax,-0x1288(%rbp)
  4233cd:	48 8d 85 60 fc ff ff 	lea    -0x3a0(%rbp),%rax
  4233d4:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  4233d8:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  4233dd:	75 05                	jne    4233e4 <mbedtls_mpi_exp_mod+0x1754>
  4233df:	e9 3f 01 00 00       	jmpq   423523 <mbedtls_mpi_exp_mod+0x1893>
  4233e4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4233e8:	48 83 c0 10          	add    $0x10,%rax
  4233ec:	48 89 c7             	mov    %rax,%rdi
  4233ef:	e8 54 2d 02 00       	callq  446148 <getDecryptedValueQWord>
  4233f4:	48 83 f8 00          	cmp    $0x0,%rax
  4233f8:	0f 84 df 00 00 00    	je     4234dd <mbedtls_mpi_exp_mod+0x184d>
  4233fe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  423402:	48 83 c0 10          	add    $0x10,%rax
  423406:	48 89 c7             	mov    %rax,%rdi
  423409:	e8 3a 2d 02 00       	callq  446148 <getDecryptedValueQWord>
  42340e:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  423412:	48 83 c7 08          	add    $0x8,%rdi
  423416:	48 89 85 70 ed ff ff 	mov    %rax,-0x1290(%rbp)
  42341d:	e8 26 2d 02 00       	callq  446148 <getDecryptedValueQWord>
  423422:	48 8b bd 70 ed ff ff 	mov    -0x1290(%rbp),%rdi
  423429:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42342d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  423431:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  423435:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  423439:	48 c1 e1 03          	shl    $0x3,%rcx
  42343d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  423441:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
  423445:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  42344c:	00 
  42344d:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  423451:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  423455:	48 89 85 68 ed ff ff 	mov    %rax,-0x1298(%rbp)
  42345c:	48 89 8d 60 ed ff ff 	mov    %rcx,-0x12a0(%rbp)
  423463:	48 89 95 58 ed ff ff 	mov    %rdx,-0x12a8(%rbp)
  42346a:	e8 e7 24 02 00       	callq  445956 <writeback_cache>
  42346f:	48 8b bd 60 ed ff ff 	mov    -0x12a0(%rbp),%rdi
  423476:	48 8b b5 58 ed ff ff 	mov    -0x12a8(%rbp),%rsi
  42347d:	e8 63 32 02 00       	callq  4466e5 <decryptArrayForLibCall>
  423482:	31 f6                	xor    %esi,%esi
  423484:	48 8b bd 60 ed ff ff 	mov    -0x12a0(%rbp),%rdi
  42348b:	48 8b 95 58 ed ff ff 	mov    -0x12a8(%rbp),%rdx
  423492:	48 8b 85 68 ed ff ff 	mov    -0x1298(%rbp),%rax
  423499:	ff d0                	callq  *%rax
  42349b:	48 8b bd 60 ed ff ff 	mov    -0x12a0(%rbp),%rdi
  4234a2:	48 8b b5 58 ed ff ff 	mov    -0x12a8(%rbp),%rsi
  4234a9:	48 89 85 50 ed ff ff 	mov    %rax,-0x12b0(%rbp)
  4234b0:	e8 a1 2f 02 00       	callq  446456 <encryptArrayForLibCall>
  4234b5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4234b9:	48 83 c0 10          	add    $0x10,%rax
  4234bd:	48 89 c7             	mov    %rax,%rdi
  4234c0:	e8 83 2c 02 00       	callq  446148 <getDecryptedValueQWord>
  4234c5:	48 89 85 48 ed ff ff 	mov    %rax,-0x12b8(%rbp)
  4234cc:	e8 85 24 02 00       	callq  445956 <writeback_cache>
  4234d1:	48 8b bd 48 ed ff ff 	mov    -0x12b8(%rbp),%rdi
  4234d8:	e8 03 dc fd ff       	callq  4010e0 <free@plt>
  4234dd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4234e1:	48 89 c7             	mov    %rax,%rdi
  4234e4:	be 01 00 00 00       	mov    $0x1,%esi
  4234e9:	e8 10 27 02 00       	callq  445bfe <setEncryptedValueDWord>
  4234ee:	31 f6                	xor    %esi,%esi
  4234f0:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  4234f4:	48 83 c7 08          	add    $0x8,%rdi
  4234f8:	48 89 85 40 ed ff ff 	mov    %rax,-0x12c0(%rbp)
  4234ff:	e8 f8 27 02 00       	callq  445cfc <setEncryptedValueQWord>
  423504:	31 c9                	xor    %ecx,%ecx
  423506:	89 ce                	mov    %ecx,%esi
  423508:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  42350c:	48 83 c7 10          	add    $0x10,%rdi
  423510:	48 89 85 38 ed ff ff 	mov    %rax,-0x12c8(%rbp)
  423517:	e8 e0 27 02 00       	callq  445cfc <setEncryptedValueQWord>
  42351c:	48 89 85 30 ed ff ff 	mov    %rax,-0x12d0(%rbp)
  423523:	48 8d 85 00 f0 ff ff 	lea    -0x1000(%rbp),%rax
  42352a:	48 89 85 48 fe ff ff 	mov    %rax,-0x1b8(%rbp)
  423531:	48 83 bd 48 fe ff ff 	cmpq   $0x0,-0x1b8(%rbp)
  423538:	00 
  423539:	75 05                	jne    423540 <mbedtls_mpi_exp_mod+0x18b0>
  42353b:	e9 6c 01 00 00       	jmpq   4236ac <mbedtls_mpi_exp_mod+0x1a1c>
  423540:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
  423547:	48 83 c0 10          	add    $0x10,%rax
  42354b:	48 89 c7             	mov    %rax,%rdi
  42354e:	e8 f5 2b 02 00       	callq  446148 <getDecryptedValueQWord>
  423553:	48 83 f8 00          	cmp    $0x0,%rax
  423557:	0f 84 00 01 00 00    	je     42365d <mbedtls_mpi_exp_mod+0x19cd>
  42355d:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
  423564:	48 83 c0 10          	add    $0x10,%rax
  423568:	48 89 c7             	mov    %rax,%rdi
  42356b:	e8 d8 2b 02 00       	callq  446148 <getDecryptedValueQWord>
  423570:	48 8b bd 48 fe ff ff 	mov    -0x1b8(%rbp),%rdi
  423577:	48 83 c7 08          	add    $0x8,%rdi
  42357b:	48 89 85 28 ed ff ff 	mov    %rax,-0x12d8(%rbp)
  423582:	e8 c1 2b 02 00       	callq  446148 <getDecryptedValueQWord>
  423587:	48 8b bd 28 ed ff ff 	mov    -0x12d8(%rbp),%rdi
  42358e:	48 89 bd 58 fe ff ff 	mov    %rdi,-0x1a8(%rbp)
  423595:	48 89 85 50 fe ff ff 	mov    %rax,-0x1b0(%rbp)
  42359c:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
  4235a3:	48 8b 8d 50 fe ff ff 	mov    -0x1b0(%rbp),%rcx
  4235aa:	48 c1 e1 03          	shl    $0x3,%rcx
  4235ae:	48 89 85 68 fe ff ff 	mov    %rax,-0x198(%rbp)
  4235b5:	48 89 8d 60 fe ff ff 	mov    %rcx,-0x1a0(%rbp)
  4235bc:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  4235c3:	00 
  4235c4:	48 8b 8d 68 fe ff ff 	mov    -0x198(%rbp),%rcx
  4235cb:	48 8b 95 60 fe ff ff 	mov    -0x1a0(%rbp),%rdx
  4235d2:	48 89 85 20 ed ff ff 	mov    %rax,-0x12e0(%rbp)
  4235d9:	48 89 8d 18 ed ff ff 	mov    %rcx,-0x12e8(%rbp)
  4235e0:	48 89 95 10 ed ff ff 	mov    %rdx,-0x12f0(%rbp)
  4235e7:	e8 6a 23 02 00       	callq  445956 <writeback_cache>
  4235ec:	48 8b bd 18 ed ff ff 	mov    -0x12e8(%rbp),%rdi
  4235f3:	48 8b b5 10 ed ff ff 	mov    -0x12f0(%rbp),%rsi
  4235fa:	e8 e6 30 02 00       	callq  4466e5 <decryptArrayForLibCall>
  4235ff:	31 f6                	xor    %esi,%esi
  423601:	48 8b bd 18 ed ff ff 	mov    -0x12e8(%rbp),%rdi
  423608:	48 8b 95 10 ed ff ff 	mov    -0x12f0(%rbp),%rdx
  42360f:	48 8b 85 20 ed ff ff 	mov    -0x12e0(%rbp),%rax
  423616:	ff d0                	callq  *%rax
  423618:	48 8b bd 18 ed ff ff 	mov    -0x12e8(%rbp),%rdi
  42361f:	48 8b b5 10 ed ff ff 	mov    -0x12f0(%rbp),%rsi
  423626:	48 89 85 08 ed ff ff 	mov    %rax,-0x12f8(%rbp)
  42362d:	e8 24 2e 02 00       	callq  446456 <encryptArrayForLibCall>
  423632:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
  423639:	48 83 c0 10          	add    $0x10,%rax
  42363d:	48 89 c7             	mov    %rax,%rdi
  423640:	e8 03 2b 02 00       	callq  446148 <getDecryptedValueQWord>
  423645:	48 89 85 00 ed ff ff 	mov    %rax,-0x1300(%rbp)
  42364c:	e8 05 23 02 00       	callq  445956 <writeback_cache>
  423651:	48 8b bd 00 ed ff ff 	mov    -0x1300(%rbp),%rdi
  423658:	e8 83 da fd ff       	callq  4010e0 <free@plt>
  42365d:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
  423664:	48 89 c7             	mov    %rax,%rdi
  423667:	be 01 00 00 00       	mov    $0x1,%esi
  42366c:	e8 8d 25 02 00       	callq  445bfe <setEncryptedValueDWord>
  423671:	31 f6                	xor    %esi,%esi
  423673:	48 8b bd 48 fe ff ff 	mov    -0x1b8(%rbp),%rdi
  42367a:	48 83 c7 08          	add    $0x8,%rdi
  42367e:	48 89 85 f8 ec ff ff 	mov    %rax,-0x1308(%rbp)
  423685:	e8 72 26 02 00       	callq  445cfc <setEncryptedValueQWord>
  42368a:	31 c9                	xor    %ecx,%ecx
  42368c:	89 ce                	mov    %ecx,%esi
  42368e:	48 8b bd 48 fe ff ff 	mov    -0x1b8(%rbp),%rdi
  423695:	48 83 c7 10          	add    $0x10,%rdi
  423699:	48 89 85 f0 ec ff ff 	mov    %rax,-0x1310(%rbp)
  4236a0:	e8 57 26 02 00       	callq  445cfc <setEncryptedValueQWord>
  4236a5:	48 89 85 e8 ec ff ff 	mov    %rax,-0x1318(%rbp)
  4236ac:	48 83 bd 20 fd ff ff 	cmpq   $0x0,-0x2e0(%rbp)
  4236b3:	00 
  4236b4:	74 1d                	je     4236d3 <mbedtls_mpi_exp_mod+0x1a43>
  4236b6:	48 8b 85 20 fd ff ff 	mov    -0x2e0(%rbp),%rax
  4236bd:	48 83 c0 10          	add    $0x10,%rax
  4236c1:	48 89 c7             	mov    %rax,%rdi
  4236c4:	e8 7f 2a 02 00       	callq  446148 <getDecryptedValueQWord>
  4236c9:	48 83 f8 00          	cmp    $0x0,%rax
  4236cd:	0f 85 89 01 00 00    	jne    42385c <mbedtls_mpi_exp_mod+0x1bcc>
  4236d3:	48 8d 85 90 fc ff ff 	lea    -0x370(%rbp),%rax
  4236da:	48 89 85 10 fe ff ff 	mov    %rax,-0x1f0(%rbp)
  4236e1:	48 83 bd 10 fe ff ff 	cmpq   $0x0,-0x1f0(%rbp)
  4236e8:	00 
  4236e9:	75 05                	jne    4236f0 <mbedtls_mpi_exp_mod+0x1a60>
  4236eb:	e9 6c 01 00 00       	jmpq   42385c <mbedtls_mpi_exp_mod+0x1bcc>
  4236f0:	48 8b 85 10 fe ff ff 	mov    -0x1f0(%rbp),%rax
  4236f7:	48 83 c0 10          	add    $0x10,%rax
  4236fb:	48 89 c7             	mov    %rax,%rdi
  4236fe:	e8 45 2a 02 00       	callq  446148 <getDecryptedValueQWord>
  423703:	48 83 f8 00          	cmp    $0x0,%rax
  423707:	0f 84 00 01 00 00    	je     42380d <mbedtls_mpi_exp_mod+0x1b7d>
  42370d:	48 8b 85 10 fe ff ff 	mov    -0x1f0(%rbp),%rax
  423714:	48 83 c0 10          	add    $0x10,%rax
  423718:	48 89 c7             	mov    %rax,%rdi
  42371b:	e8 28 2a 02 00       	callq  446148 <getDecryptedValueQWord>
  423720:	48 8b bd 10 fe ff ff 	mov    -0x1f0(%rbp),%rdi
  423727:	48 83 c7 08          	add    $0x8,%rdi
  42372b:	48 89 85 e0 ec ff ff 	mov    %rax,-0x1320(%rbp)
  423732:	e8 11 2a 02 00       	callq  446148 <getDecryptedValueQWord>
  423737:	48 8b bd e0 ec ff ff 	mov    -0x1320(%rbp),%rdi
  42373e:	48 89 bd 20 fe ff ff 	mov    %rdi,-0x1e0(%rbp)
  423745:	48 89 85 18 fe ff ff 	mov    %rax,-0x1e8(%rbp)
  42374c:	48 8b 85 20 fe ff ff 	mov    -0x1e0(%rbp),%rax
  423753:	48 8b 8d 18 fe ff ff 	mov    -0x1e8(%rbp),%rcx
  42375a:	48 c1 e1 03          	shl    $0x3,%rcx
  42375e:	48 89 85 30 fe ff ff 	mov    %rax,-0x1d0(%rbp)
  423765:	48 89 8d 28 fe ff ff 	mov    %rcx,-0x1d8(%rbp)
  42376c:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  423773:	00 
  423774:	48 8b 8d 30 fe ff ff 	mov    -0x1d0(%rbp),%rcx
  42377b:	48 8b 95 28 fe ff ff 	mov    -0x1d8(%rbp),%rdx
  423782:	48 89 85 d8 ec ff ff 	mov    %rax,-0x1328(%rbp)
  423789:	48 89 8d d0 ec ff ff 	mov    %rcx,-0x1330(%rbp)
  423790:	48 89 95 c8 ec ff ff 	mov    %rdx,-0x1338(%rbp)
  423797:	e8 ba 21 02 00       	callq  445956 <writeback_cache>
  42379c:	48 8b bd d0 ec ff ff 	mov    -0x1330(%rbp),%rdi
  4237a3:	48 8b b5 c8 ec ff ff 	mov    -0x1338(%rbp),%rsi
  4237aa:	e8 36 2f 02 00       	callq  4466e5 <decryptArrayForLibCall>
  4237af:	31 f6                	xor    %esi,%esi
  4237b1:	48 8b bd d0 ec ff ff 	mov    -0x1330(%rbp),%rdi
  4237b8:	48 8b 95 c8 ec ff ff 	mov    -0x1338(%rbp),%rdx
  4237bf:	48 8b 85 d8 ec ff ff 	mov    -0x1328(%rbp),%rax
  4237c6:	ff d0                	callq  *%rax
  4237c8:	48 8b bd d0 ec ff ff 	mov    -0x1330(%rbp),%rdi
  4237cf:	48 8b b5 c8 ec ff ff 	mov    -0x1338(%rbp),%rsi
  4237d6:	48 89 85 c0 ec ff ff 	mov    %rax,-0x1340(%rbp)
  4237dd:	e8 74 2c 02 00       	callq  446456 <encryptArrayForLibCall>
  4237e2:	48 8b 85 10 fe ff ff 	mov    -0x1f0(%rbp),%rax
  4237e9:	48 83 c0 10          	add    $0x10,%rax
  4237ed:	48 89 c7             	mov    %rax,%rdi
  4237f0:	e8 53 29 02 00       	callq  446148 <getDecryptedValueQWord>
  4237f5:	48 89 85 b8 ec ff ff 	mov    %rax,-0x1348(%rbp)
  4237fc:	e8 55 21 02 00       	callq  445956 <writeback_cache>
  423801:	48 8b bd b8 ec ff ff 	mov    -0x1348(%rbp),%rdi
  423808:	e8 d3 d8 fd ff       	callq  4010e0 <free@plt>
  42380d:	48 8b 85 10 fe ff ff 	mov    -0x1f0(%rbp),%rax
  423814:	48 89 c7             	mov    %rax,%rdi
  423817:	be 01 00 00 00       	mov    $0x1,%esi
  42381c:	e8 dd 23 02 00       	callq  445bfe <setEncryptedValueDWord>
  423821:	31 f6                	xor    %esi,%esi
  423823:	48 8b bd 10 fe ff ff 	mov    -0x1f0(%rbp),%rdi
  42382a:	48 83 c7 08          	add    $0x8,%rdi
  42382e:	48 89 85 b0 ec ff ff 	mov    %rax,-0x1350(%rbp)
  423835:	e8 c2 24 02 00       	callq  445cfc <setEncryptedValueQWord>
  42383a:	31 c9                	xor    %ecx,%ecx
  42383c:	89 ce                	mov    %ecx,%esi
  42383e:	48 8b bd 10 fe ff ff 	mov    -0x1f0(%rbp),%rdi
  423845:	48 83 c7 10          	add    $0x10,%rdi
  423849:	48 89 85 a8 ec ff ff 	mov    %rax,-0x1358(%rbp)
  423850:	e8 a7 24 02 00       	callq  445cfc <setEncryptedValueQWord>
  423855:	48 89 85 a0 ec ff ff 	mov    %rax,-0x1360(%rbp)
  42385c:	8b 85 1c fd ff ff    	mov    -0x2e4(%rbp),%eax
  423862:	89 85 4c fd ff ff    	mov    %eax,-0x2b4(%rbp)
  423868:	8b 85 4c fd ff ff    	mov    -0x2b4(%rbp),%eax
  42386e:	89 85 9c ec ff ff    	mov    %eax,-0x1364(%rbp)
  423874:	e8 dd 20 02 00       	callq  445956 <writeback_cache>
  423879:	8b 85 9c ec ff ff    	mov    -0x1364(%rbp),%eax
  42387f:	48 81 c4 70 13 00 00 	add    $0x1370,%rsp
  423886:	5d                   	pop    %rbp
  423887:	c3                   	retq   
  423888:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  42388f:	00 

0000000000423890 <mpi_montmul>:
  423890:	55                   	push   %rbp
  423891:	48 89 e5             	mov    %rsp,%rbp
  423894:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
  42389b:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  42389f:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  4238a3:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
  4238a7:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  4238ab:	4c 89 45 d0          	mov    %r8,-0x30(%rbp)
  4238af:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  4238b3:	48 83 c1 08          	add    $0x8,%rcx
  4238b7:	48 89 cf             	mov    %rcx,%rdi
  4238ba:	e8 89 28 02 00       	callq  446148 <getDecryptedValueQWord>
  4238bf:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  4238c3:	48 83 c1 08          	add    $0x8,%rcx
  4238c7:	48 89 cf             	mov    %rcx,%rdi
  4238ca:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  4238ce:	e8 75 28 02 00       	callq  446148 <getDecryptedValueQWord>
  4238d3:	48 83 c0 01          	add    $0x1,%rax
  4238d7:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
  4238db:	48 39 c1             	cmp    %rax,%rcx
  4238de:	72 16                	jb     4238f6 <mpi_montmul+0x66>
  4238e0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4238e4:	48 83 c0 10          	add    $0x10,%rax
  4238e8:	48 89 c7             	mov    %rax,%rdi
  4238eb:	e8 58 28 02 00       	callq  446148 <getDecryptedValueQWord>
  4238f0:	48 83 f8 00          	cmp    $0x0,%rax
  4238f4:	75 0c                	jne    423902 <mpi_montmul+0x72>
  4238f6:	c7 45 fc fc ff ff ff 	movl   $0xfffffffc,-0x4(%rbp)
  4238fd:	e9 50 03 00 00       	jmpq   423c52 <mpi_montmul+0x3c2>
  423902:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  423906:	48 83 c0 10          	add    $0x10,%rax
  42390a:	48 89 c7             	mov    %rax,%rdi
  42390d:	e8 36 28 02 00       	callq  446148 <getDecryptedValueQWord>
  423912:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  423916:	48 83 c7 08          	add    $0x8,%rdi
  42391a:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  42391e:	e8 25 28 02 00       	callq  446148 <getDecryptedValueQWord>
  423923:	48 c1 e0 03          	shl    $0x3,%rax
  423927:	48 89 45 88          	mov    %rax,-0x78(%rbp)
  42392b:	e8 26 20 02 00       	callq  445956 <writeback_cache>
  423930:	48 8b 7d 90          	mov    -0x70(%rbp),%rdi
  423934:	48 8b 75 88          	mov    -0x78(%rbp),%rsi
  423938:	e8 a8 2d 02 00       	callq  4466e5 <decryptArrayForLibCall>
  42393d:	31 f6                	xor    %esi,%esi
  42393f:	48 8b 7d 90          	mov    -0x70(%rbp),%rdi
  423943:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
  423947:	e8 d4 d6 fd ff       	callq  401020 <memset@plt>
  42394c:	48 8b 7d 90          	mov    -0x70(%rbp),%rdi
  423950:	48 8b 75 88          	mov    -0x78(%rbp),%rsi
  423954:	e8 fd 2a 02 00       	callq  446456 <encryptArrayForLibCall>
  423959:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42395d:	48 83 c0 10          	add    $0x10,%rax
  423961:	48 89 c7             	mov    %rax,%rdi
  423964:	e8 df 27 02 00       	callq  446148 <getDecryptedValueQWord>
  423969:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  42396d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  423971:	48 83 c0 08          	add    $0x8,%rax
  423975:	48 89 c7             	mov    %rax,%rdi
  423978:	e8 cb 27 02 00       	callq  446148 <getDecryptedValueQWord>
  42397d:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  423981:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  423985:	48 83 c0 08          	add    $0x8,%rax
  423989:	48 89 c7             	mov    %rax,%rdi
  42398c:	e8 b7 27 02 00       	callq  446148 <getDecryptedValueQWord>
  423991:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
  423995:	73 16                	jae    4239ad <mpi_montmul+0x11d>
  423997:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42399b:	48 83 c0 08          	add    $0x8,%rax
  42399f:	48 89 c7             	mov    %rax,%rdi
  4239a2:	e8 a1 27 02 00       	callq  446148 <getDecryptedValueQWord>
  4239a7:	48 89 45 80          	mov    %rax,-0x80(%rbp)
  4239ab:	eb 08                	jmp    4239b5 <mpi_montmul+0x125>
  4239ad:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4239b1:	48 89 45 80          	mov    %rax,-0x80(%rbp)
  4239b5:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  4239b9:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  4239bd:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
  4239c4:	00 
  4239c5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4239c9:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
  4239cd:	0f 83 3a 01 00 00    	jae    423b0d <mpi_montmul+0x27d>
  4239d3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4239d7:	48 83 c0 10          	add    $0x10,%rax
  4239db:	48 89 c7             	mov    %rax,%rdi
  4239de:	e8 65 27 02 00       	callq  446148 <getDecryptedValueQWord>
  4239e3:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  4239e7:	48 c1 e7 03          	shl    $0x3,%rdi
  4239eb:	48 01 f8             	add    %rdi,%rax
  4239ee:	48 89 c7             	mov    %rax,%rdi
  4239f1:	e8 52 27 02 00       	callq  446148 <getDecryptedValueQWord>
  4239f6:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  4239fa:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  4239fe:	48 89 c7             	mov    %rax,%rdi
  423a01:	e8 42 27 02 00       	callq  446148 <getDecryptedValueQWord>
  423a06:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
  423a0a:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  423a0e:	48 83 c1 10          	add    $0x10,%rcx
  423a12:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
  423a19:	48 89 cf             	mov    %rcx,%rdi
  423a1c:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
  423a23:	e8 20 27 02 00       	callq  446148 <getDecryptedValueQWord>
  423a28:	48 89 c7             	mov    %rax,%rdi
  423a2b:	e8 18 27 02 00       	callq  446148 <getDecryptedValueQWord>
  423a30:	48 8b 8d 78 ff ff ff 	mov    -0x88(%rbp),%rcx
  423a37:	48 0f af c8          	imul   %rax,%rcx
  423a3b:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  423a42:	48 01 c8             	add    %rcx,%rax
  423a45:	48 0f af 45 d8       	imul   -0x28(%rbp),%rax
  423a4a:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  423a4e:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
  423a52:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  423a56:	48 83 c0 10          	add    $0x10,%rax
  423a5a:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
  423a61:	48 89 c7             	mov    %rax,%rdi
  423a64:	e8 df 26 02 00       	callq  446148 <getDecryptedValueQWord>
  423a69:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
  423a6d:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  423a71:	48 8b bd 68 ff ff ff 	mov    -0x98(%rbp),%rdi
  423a78:	48 89 c6             	mov    %rax,%rsi
  423a7b:	e8 a0 92 ff ff       	callq  41cd20 <mpi_mul_hlp>
  423a80:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  423a84:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  423a88:	48 83 c0 10          	add    $0x10,%rax
  423a8c:	48 89 bd 60 ff ff ff 	mov    %rdi,-0xa0(%rbp)
  423a93:	48 89 c7             	mov    %rax,%rdi
  423a96:	e8 ad 26 02 00       	callq  446148 <getDecryptedValueQWord>
  423a9b:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
  423a9f:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
  423aa3:	48 8b bd 60 ff ff ff 	mov    -0xa0(%rbp),%rdi
  423aaa:	48 89 c6             	mov    %rax,%rsi
  423aad:	e8 6e 92 ff ff       	callq  41cd20 <mpi_mul_hlp>
  423ab2:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
  423ab6:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  423aba:	48 89 c1             	mov    %rax,%rcx
  423abd:	48 83 c1 08          	add    $0x8,%rcx
  423ac1:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
  423ac5:	48 89 c7             	mov    %rax,%rdi
  423ac8:	e8 2f 22 02 00       	callq  445cfc <setEncryptedValueQWord>
  423acd:	45 31 c0             	xor    %r8d,%r8d
  423ad0:	44 89 c6             	mov    %r8d,%esi
  423ad3:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
  423ad7:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  423adb:	48 83 c2 01          	add    $0x1,%rdx
  423adf:	48 c1 e2 03          	shl    $0x3,%rdx
  423ae3:	48 01 d1             	add    %rdx,%rcx
  423ae6:	48 89 cf             	mov    %rcx,%rdi
  423ae9:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
  423af0:	e8 07 22 02 00       	callq  445cfc <setEncryptedValueQWord>
  423af5:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
  423afc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  423b00:	48 83 c0 01          	add    $0x1,%rax
  423b04:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  423b08:	e9 b8 fe ff ff       	jmpq   4239c5 <mpi_montmul+0x135>
  423b0d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  423b11:	48 83 c0 10          	add    $0x10,%rax
  423b15:	48 89 c7             	mov    %rax,%rdi
  423b18:	e8 2b 26 02 00       	callq  446148 <getDecryptedValueQWord>
  423b1d:	48 8b 7d a0          	mov    -0x60(%rbp),%rdi
  423b21:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  423b25:	48 83 c1 01          	add    $0x1,%rcx
  423b29:	48 c1 e1 03          	shl    $0x3,%rcx
  423b2d:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  423b34:	48 89 bd 40 ff ff ff 	mov    %rdi,-0xc0(%rbp)
  423b3b:	48 89 8d 38 ff ff ff 	mov    %rcx,-0xc8(%rbp)
  423b42:	e8 0f 1e 02 00       	callq  445956 <writeback_cache>
  423b47:	48 8b bd 40 ff ff ff 	mov    -0xc0(%rbp),%rdi
  423b4e:	48 8b b5 38 ff ff ff 	mov    -0xc8(%rbp),%rsi
  423b55:	e8 8b 2b 02 00       	callq  4466e5 <decryptArrayForLibCall>
  423b5a:	48 8b bd 48 ff ff ff 	mov    -0xb8(%rbp),%rdi
  423b61:	48 8b b5 38 ff ff ff 	mov    -0xc8(%rbp),%rsi
  423b68:	e8 78 2b 02 00       	callq  4466e5 <decryptArrayForLibCall>
  423b6d:	48 8b bd 48 ff ff ff 	mov    -0xb8(%rbp),%rdi
  423b74:	48 8b b5 40 ff ff ff 	mov    -0xc0(%rbp),%rsi
  423b7b:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
  423b82:	e8 e9 d5 fd ff       	callq  401170 <memcpy@plt>
  423b87:	48 8b bd 48 ff ff ff 	mov    -0xb8(%rbp),%rdi
  423b8e:	48 8b b5 38 ff ff ff 	mov    -0xc8(%rbp),%rsi
  423b95:	e8 bc 28 02 00       	callq  446456 <encryptArrayForLibCall>
  423b9a:	48 8b bd 40 ff ff ff 	mov    -0xc0(%rbp),%rdi
  423ba1:	48 8b b5 38 ff ff ff 	mov    -0xc8(%rbp),%rsi
  423ba8:	e8 a9 28 02 00       	callq  446456 <encryptArrayForLibCall>
  423bad:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  423bb1:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  423bb5:	e8 96 7e ff ff       	callq  41ba50 <mbedtls_mpi_cmp_abs>
  423bba:	83 f8 00             	cmp    $0x0,%eax
  423bbd:	7c 47                	jl     423c06 <mpi_montmul+0x376>
  423bbf:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  423bc3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  423bc7:	48 83 c0 10          	add    $0x10,%rax
  423bcb:	48 89 bd 30 ff ff ff 	mov    %rdi,-0xd0(%rbp)
  423bd2:	48 89 c7             	mov    %rax,%rdi
  423bd5:	e8 6e 25 02 00       	callq  446148 <getDecryptedValueQWord>
  423bda:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  423bde:	48 83 c7 10          	add    $0x10,%rdi
  423be2:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
  423be9:	e8 5a 25 02 00       	callq  446148 <getDecryptedValueQWord>
  423bee:	48 8b bd 30 ff ff ff 	mov    -0xd0(%rbp),%rdi
  423bf5:	48 8b b5 28 ff ff ff 	mov    -0xd8(%rbp),%rsi
  423bfc:	48 89 c2             	mov    %rax,%rdx
  423bff:	e8 ec 86 ff ff       	callq  41c2f0 <mpi_sub_hlp>
  423c04:	eb 45                	jmp    423c4b <mpi_montmul+0x3bb>
  423c06:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  423c0a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  423c0e:	48 83 c0 10          	add    $0x10,%rax
  423c12:	48 89 bd 20 ff ff ff 	mov    %rdi,-0xe0(%rbp)
  423c19:	48 89 c7             	mov    %rax,%rdi
  423c1c:	e8 27 25 02 00       	callq  446148 <getDecryptedValueQWord>
  423c21:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  423c25:	48 83 c7 10          	add    $0x10,%rdi
  423c29:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
  423c30:	e8 13 25 02 00       	callq  446148 <getDecryptedValueQWord>
  423c35:	48 8b bd 20 ff ff ff 	mov    -0xe0(%rbp),%rdi
  423c3c:	48 8b b5 18 ff ff ff 	mov    -0xe8(%rbp),%rsi
  423c43:	48 89 c2             	mov    %rax,%rdx
  423c46:	e8 a5 86 ff ff       	callq  41c2f0 <mpi_sub_hlp>
  423c4b:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  423c52:	8b 45 fc             	mov    -0x4(%rbp),%eax
  423c55:	89 85 14 ff ff ff    	mov    %eax,-0xec(%rbp)
  423c5b:	e8 f6 1c 02 00       	callq  445956 <writeback_cache>
  423c60:	8b 85 14 ff ff ff    	mov    -0xec(%rbp),%eax
  423c66:	48 81 c4 f0 00 00 00 	add    $0xf0,%rsp
  423c6d:	5d                   	pop    %rbp
  423c6e:	c3                   	retq   
  423c6f:	90                   	nop

0000000000423c70 <mbedtls_mpi_gcd>:
  423c70:	55                   	push   %rbp
  423c71:	48 89 e5             	mov    %rsp,%rbp
  423c74:	48 81 ec 60 03 00 00 	sub    $0x360,%rsp
  423c7b:	48 89 bd 68 fe ff ff 	mov    %rdi,-0x198(%rbp)
  423c82:	48 89 b5 60 fe ff ff 	mov    %rsi,-0x1a0(%rbp)
  423c89:	48 89 95 58 fe ff ff 	mov    %rdx,-0x1a8(%rbp)
  423c90:	eb 00                	jmp    423c92 <mbedtls_mpi_gcd+0x22>
  423c92:	eb 00                	jmp    423c94 <mbedtls_mpi_gcd+0x24>
  423c94:	eb 00                	jmp    423c96 <mbedtls_mpi_gcd+0x26>
  423c96:	eb 00                	jmp    423c98 <mbedtls_mpi_gcd+0x28>
  423c98:	eb 00                	jmp    423c9a <mbedtls_mpi_gcd+0x2a>
  423c9a:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
  423ca1:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
  423ca8:	48 8b 85 70 fe ff ff 	mov    -0x190(%rbp),%rax
  423caf:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  423cb5:	48 8b 85 70 fe ff ff 	mov    -0x190(%rbp),%rax
  423cbc:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
  423cc3:	00 
  423cc4:	48 8b 85 70 fe ff ff 	mov    -0x190(%rbp),%rax
  423ccb:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
  423cd2:	00 
  423cd3:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
  423cda:	48 89 85 a0 fe ff ff 	mov    %rax,-0x160(%rbp)
  423ce1:	48 8b 85 a0 fe ff ff 	mov    -0x160(%rbp),%rax
  423ce8:	48 89 c7             	mov    %rax,%rdi
  423ceb:	be 01 00 00 00       	mov    $0x1,%esi
  423cf0:	e8 09 1f 02 00       	callq  445bfe <setEncryptedValueDWord>
  423cf5:	31 f6                	xor    %esi,%esi
  423cf7:	48 8b bd a0 fe ff ff 	mov    -0x160(%rbp),%rdi
  423cfe:	48 83 c7 08          	add    $0x8,%rdi
  423d02:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
  423d09:	e8 ee 1f 02 00       	callq  445cfc <setEncryptedValueQWord>
  423d0e:	31 c9                	xor    %ecx,%ecx
  423d10:	89 ce                	mov    %ecx,%esi
  423d12:	48 8b bd a0 fe ff ff 	mov    -0x160(%rbp),%rdi
  423d19:	48 83 c7 10          	add    $0x10,%rdi
  423d1d:	48 89 85 c0 fd ff ff 	mov    %rax,-0x240(%rbp)
  423d24:	e8 d3 1f 02 00       	callq  445cfc <setEncryptedValueQWord>
  423d29:	48 8d b5 d0 fd ff ff 	lea    -0x230(%rbp),%rsi
  423d30:	48 89 b5 a8 fe ff ff 	mov    %rsi,-0x158(%rbp)
  423d37:	48 8b b5 a8 fe ff ff 	mov    -0x158(%rbp),%rsi
  423d3e:	48 89 f7             	mov    %rsi,%rdi
  423d41:	be 01 00 00 00       	mov    $0x1,%esi
  423d46:	48 89 85 b8 fd ff ff 	mov    %rax,-0x248(%rbp)
  423d4d:	e8 ac 1e 02 00       	callq  445bfe <setEncryptedValueDWord>
  423d52:	31 c9                	xor    %ecx,%ecx
  423d54:	89 ce                	mov    %ecx,%esi
  423d56:	48 8b bd a8 fe ff ff 	mov    -0x158(%rbp),%rdi
  423d5d:	48 83 c7 08          	add    $0x8,%rdi
  423d61:	48 89 85 b0 fd ff ff 	mov    %rax,-0x250(%rbp)
  423d68:	e8 8f 1f 02 00       	callq  445cfc <setEncryptedValueQWord>
  423d6d:	31 c9                	xor    %ecx,%ecx
  423d6f:	89 ce                	mov    %ecx,%esi
  423d71:	48 8b bd a8 fe ff ff 	mov    -0x158(%rbp),%rdi
  423d78:	48 83 c7 10          	add    $0x10,%rdi
  423d7c:	48 89 85 a8 fd ff ff 	mov    %rax,-0x258(%rbp)
  423d83:	e8 74 1f 02 00       	callq  445cfc <setEncryptedValueQWord>
  423d88:	48 89 85 a0 fd ff ff 	mov    %rax,-0x260(%rbp)
  423d8f:	48 8b b5 60 fe ff ff 	mov    -0x1a0(%rbp),%rsi
  423d96:	48 8d bd 00 fe ff ff 	lea    -0x200(%rbp),%rdi
  423d9d:	e8 fe 6f ff ff       	callq  41ada0 <mbedtls_mpi_copy>
  423da2:	89 85 54 fe ff ff    	mov    %eax,-0x1ac(%rbp)
  423da8:	83 f8 00             	cmp    $0x0,%eax
  423dab:	74 05                	je     423db2 <mbedtls_mpi_gcd+0x142>
  423dad:	e9 b2 06 00 00       	jmpq   424464 <mbedtls_mpi_gcd+0x7f4>
  423db2:	eb 00                	jmp    423db4 <mbedtls_mpi_gcd+0x144>
  423db4:	eb 00                	jmp    423db6 <mbedtls_mpi_gcd+0x146>
  423db6:	48 8b b5 58 fe ff ff 	mov    -0x1a8(%rbp),%rsi
  423dbd:	48 8d bd d0 fd ff ff 	lea    -0x230(%rbp),%rdi
  423dc4:	e8 d7 6f ff ff       	callq  41ada0 <mbedtls_mpi_copy>
  423dc9:	89 85 54 fe ff ff    	mov    %eax,-0x1ac(%rbp)
  423dcf:	83 f8 00             	cmp    $0x0,%eax
  423dd2:	74 05                	je     423dd9 <mbedtls_mpi_gcd+0x169>
  423dd4:	e9 8b 06 00 00       	jmpq   424464 <mbedtls_mpi_gcd+0x7f4>
  423dd9:	eb 00                	jmp    423ddb <mbedtls_mpi_gcd+0x16b>
  423ddb:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
  423de2:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
  423de9:	48 c7 85 d8 fe ff ff 	movq   $0x0,-0x128(%rbp)
  423df0:	00 00 00 00 
  423df4:	48 c7 85 e8 fe ff ff 	movq   $0x0,-0x118(%rbp)
  423dfb:	00 00 00 00 
  423dff:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
  423e06:	48 8b 8d f0 fe ff ff 	mov    -0x110(%rbp),%rcx
  423e0d:	48 83 c1 08          	add    $0x8,%rcx
  423e11:	48 89 cf             	mov    %rcx,%rdi
  423e14:	48 89 85 98 fd ff ff 	mov    %rax,-0x268(%rbp)
  423e1b:	e8 28 23 02 00       	callq  446148 <getDecryptedValueQWord>
  423e20:	48 8b 8d 98 fd ff ff 	mov    -0x268(%rbp),%rcx
  423e27:	48 39 c1             	cmp    %rax,%rcx
  423e2a:	0f 83 9f 00 00 00    	jae    423ecf <mbedtls_mpi_gcd+0x25f>
  423e30:	48 c7 85 e0 fe ff ff 	movq   $0x0,-0x120(%rbp)
  423e37:	00 00 00 00 
  423e3b:	48 83 bd e0 fe ff ff 	cmpq   $0x40,-0x120(%rbp)
  423e42:	40 
  423e43:	73 73                	jae    423eb8 <mbedtls_mpi_gcd+0x248>
  423e45:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
  423e4c:	48 83 c0 10          	add    $0x10,%rax
  423e50:	48 89 c7             	mov    %rax,%rdi
  423e53:	e8 f0 22 02 00       	callq  446148 <getDecryptedValueQWord>
  423e58:	48 8b bd e8 fe ff ff 	mov    -0x118(%rbp),%rdi
  423e5f:	48 c1 e7 03          	shl    $0x3,%rdi
  423e63:	48 01 f8             	add    %rdi,%rax
  423e66:	48 89 c7             	mov    %rax,%rdi
  423e69:	e8 da 22 02 00       	callq  446148 <getDecryptedValueQWord>
  423e6e:	48 8b 8d e0 fe ff ff 	mov    -0x120(%rbp),%rcx
  423e75:	48 d3 e8             	shr    %cl,%rax
  423e78:	48 83 e0 01          	and    $0x1,%rax
  423e7c:	48 83 f8 00          	cmp    $0x0,%rax
  423e80:	74 10                	je     423e92 <mbedtls_mpi_gcd+0x222>
  423e82:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
  423e89:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
  423e90:	eb 48                	jmp    423eda <mbedtls_mpi_gcd+0x26a>
  423e92:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
  423e99:	48 83 c0 01          	add    $0x1,%rax
  423e9d:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
  423ea4:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
  423eab:	48 83 c0 01          	add    $0x1,%rax
  423eaf:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
  423eb6:	eb 83                	jmp    423e3b <mbedtls_mpi_gcd+0x1cb>
  423eb8:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
  423ebf:	48 83 c0 01          	add    $0x1,%rax
  423ec3:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
  423eca:	e9 30 ff ff ff       	jmpq   423dff <mbedtls_mpi_gcd+0x18f>
  423ecf:	48 c7 85 f8 fe ff ff 	movq   $0x0,-0x108(%rbp)
  423ed6:	00 00 00 00 
  423eda:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  423ee1:	48 89 85 48 fe ff ff 	mov    %rax,-0x1b8(%rbp)
  423ee8:	48 8d 85 d0 fd ff ff 	lea    -0x230(%rbp),%rax
  423eef:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
  423ef6:	48 c7 85 00 ff ff ff 	movq   $0x0,-0x100(%rbp)
  423efd:	00 00 00 00 
  423f01:	48 c7 85 10 ff ff ff 	movq   $0x0,-0xf0(%rbp)
  423f08:	00 00 00 00 
  423f0c:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
  423f13:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
  423f1a:	48 83 c1 08          	add    $0x8,%rcx
  423f1e:	48 89 cf             	mov    %rcx,%rdi
  423f21:	48 89 85 90 fd ff ff 	mov    %rax,-0x270(%rbp)
  423f28:	e8 1b 22 02 00       	callq  446148 <getDecryptedValueQWord>
  423f2d:	48 8b 8d 90 fd ff ff 	mov    -0x270(%rbp),%rcx
  423f34:	48 39 c1             	cmp    %rax,%rcx
  423f37:	0f 83 9f 00 00 00    	jae    423fdc <mbedtls_mpi_gcd+0x36c>
  423f3d:	48 c7 85 08 ff ff ff 	movq   $0x0,-0xf8(%rbp)
  423f44:	00 00 00 00 
  423f48:	48 83 bd 08 ff ff ff 	cmpq   $0x40,-0xf8(%rbp)
  423f4f:	40 
  423f50:	73 73                	jae    423fc5 <mbedtls_mpi_gcd+0x355>
  423f52:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  423f59:	48 83 c0 10          	add    $0x10,%rax
  423f5d:	48 89 c7             	mov    %rax,%rdi
  423f60:	e8 e3 21 02 00       	callq  446148 <getDecryptedValueQWord>
  423f65:	48 8b bd 10 ff ff ff 	mov    -0xf0(%rbp),%rdi
  423f6c:	48 c1 e7 03          	shl    $0x3,%rdi
  423f70:	48 01 f8             	add    %rdi,%rax
  423f73:	48 89 c7             	mov    %rax,%rdi
  423f76:	e8 cd 21 02 00       	callq  446148 <getDecryptedValueQWord>
  423f7b:	48 8b 8d 08 ff ff ff 	mov    -0xf8(%rbp),%rcx
  423f82:	48 d3 e8             	shr    %cl,%rax
  423f85:	48 83 e0 01          	and    $0x1,%rax
  423f89:	48 83 f8 00          	cmp    $0x0,%rax
  423f8d:	74 10                	je     423f9f <mbedtls_mpi_gcd+0x32f>
  423f8f:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
  423f96:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
  423f9d:	eb 48                	jmp    423fe7 <mbedtls_mpi_gcd+0x377>
  423f9f:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
  423fa6:	48 83 c0 01          	add    $0x1,%rax
  423faa:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
  423fb1:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
  423fb8:	48 83 c0 01          	add    $0x1,%rax
  423fbc:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
  423fc3:	eb 83                	jmp    423f48 <mbedtls_mpi_gcd+0x2d8>
  423fc5:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
  423fcc:	48 83 c0 01          	add    $0x1,%rax
  423fd0:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
  423fd7:	e9 30 ff ff ff       	jmpq   423f0c <mbedtls_mpi_gcd+0x29c>
  423fdc:	48 c7 85 20 ff ff ff 	movq   $0x0,-0xe0(%rbp)
  423fe3:	00 00 00 00 
  423fe7:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
  423fee:	48 89 85 40 fe ff ff 	mov    %rax,-0x1c0(%rbp)
  423ff5:	48 8b 85 40 fe ff ff 	mov    -0x1c0(%rbp),%rax
  423ffc:	48 3b 85 48 fe ff ff 	cmp    -0x1b8(%rbp),%rax
  424003:	73 0e                	jae    424013 <mbedtls_mpi_gcd+0x3a3>
  424005:	48 8b 85 40 fe ff ff 	mov    -0x1c0(%rbp),%rax
  42400c:	48 89 85 48 fe ff ff 	mov    %rax,-0x1b8(%rbp)
  424013:	eb 00                	jmp    424015 <mbedtls_mpi_gcd+0x3a5>
  424015:	48 8b b5 48 fe ff ff 	mov    -0x1b8(%rbp),%rsi
  42401c:	48 8d bd 00 fe ff ff 	lea    -0x200(%rbp),%rdi
  424023:	e8 a8 cf ff ff       	callq  420fd0 <mbedtls_mpi_shift_r>
  424028:	89 85 54 fe ff ff    	mov    %eax,-0x1ac(%rbp)
  42402e:	83 f8 00             	cmp    $0x0,%eax
  424031:	74 05                	je     424038 <mbedtls_mpi_gcd+0x3c8>
  424033:	e9 2c 04 00 00       	jmpq   424464 <mbedtls_mpi_gcd+0x7f4>
  424038:	eb 00                	jmp    42403a <mbedtls_mpi_gcd+0x3ca>
  42403a:	eb 00                	jmp    42403c <mbedtls_mpi_gcd+0x3cc>
  42403c:	48 8b b5 48 fe ff ff 	mov    -0x1b8(%rbp),%rsi
  424043:	48 8d bd d0 fd ff ff 	lea    -0x230(%rbp),%rdi
  42404a:	e8 81 cf ff ff       	callq  420fd0 <mbedtls_mpi_shift_r>
  42404f:	89 85 54 fe ff ff    	mov    %eax,-0x1ac(%rbp)
  424055:	83 f8 00             	cmp    $0x0,%eax
  424058:	74 05                	je     42405f <mbedtls_mpi_gcd+0x3ef>
  42405a:	e9 05 04 00 00       	jmpq   424464 <mbedtls_mpi_gcd+0x7f4>
  42405f:	eb 00                	jmp    424061 <mbedtls_mpi_gcd+0x3f1>
  424061:	48 8d 85 d0 fd ff ff 	lea    -0x230(%rbp),%rax
  424068:	48 89 c7             	mov    %rax,%rdi
  42406b:	be 01 00 00 00       	mov    $0x1,%esi
  424070:	e8 89 1b 02 00       	callq  445bfe <setEncryptedValueDWord>
  424075:	48 8d bd 00 fe ff ff 	lea    -0x200(%rbp),%rdi
  42407c:	be 01 00 00 00       	mov    $0x1,%esi
  424081:	48 89 85 88 fd ff ff 	mov    %rax,-0x278(%rbp)
  424088:	e8 71 1b 02 00       	callq  445bfe <setEncryptedValueDWord>
  42408d:	48 89 85 80 fd ff ff 	mov    %rax,-0x280(%rbp)
  424094:	e8 bd 18 02 00       	callq  445956 <writeback_cache>
  424099:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
  4240a0:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  4240a4:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
  4240ab:	00 
  4240ac:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
  4240b1:	7d 11                	jge    4240c4 <mbedtls_mpi_gcd+0x454>
  4240b3:	31 c0                	xor    %eax,%eax
  4240b5:	89 c1                	mov    %eax,%ecx
  4240b7:	48 2b 4d a0          	sub    -0x60(%rbp),%rcx
  4240bb:	48 89 8d 78 fd ff ff 	mov    %rcx,-0x288(%rbp)
  4240c2:	eb 0b                	jmp    4240cf <mbedtls_mpi_gcd+0x45f>
  4240c4:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  4240c8:	48 89 85 78 fd ff ff 	mov    %rax,-0x288(%rbp)
  4240cf:	48 8b 85 78 fd ff ff 	mov    -0x288(%rbp),%rax
  4240d6:	48 8d 8d 50 ff ff ff 	lea    -0xb0(%rbp),%rcx
  4240dd:	48 89 cf             	mov    %rcx,%rdi
  4240e0:	48 89 c6             	mov    %rax,%rsi
  4240e3:	e8 14 1c 02 00       	callq  445cfc <setEncryptedValueQWord>
  4240e8:	48 8d 8d 70 ff ff ff 	lea    -0x90(%rbp),%rcx
  4240ef:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
  4240f3:	48 83 fe 00          	cmp    $0x0,%rsi
  4240f7:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  4240fc:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  424102:	44 0f 4c c2          	cmovl  %edx,%r8d
  424106:	48 89 cf             	mov    %rcx,%rdi
  424109:	44 89 c6             	mov    %r8d,%esi
  42410c:	48 89 85 70 fd ff ff 	mov    %rax,-0x290(%rbp)
  424113:	e8 e6 1a 02 00       	callq  445bfe <setEncryptedValueDWord>
  424118:	ba 01 00 00 00       	mov    $0x1,%edx
  42411d:	89 d6                	mov    %edx,%esi
  42411f:	48 8d 8d 70 ff ff ff 	lea    -0x90(%rbp),%rcx
  424126:	48 83 c1 08          	add    $0x8,%rcx
  42412a:	48 89 cf             	mov    %rcx,%rdi
  42412d:	48 89 85 68 fd ff ff 	mov    %rax,-0x298(%rbp)
  424134:	e8 c3 1b 02 00       	callq  445cfc <setEncryptedValueQWord>
  424139:	48 8d b5 50 ff ff ff 	lea    -0xb0(%rbp),%rsi
  424140:	48 8d 8d 70 ff ff ff 	lea    -0x90(%rbp),%rcx
  424147:	48 83 c1 10          	add    $0x10,%rcx
  42414b:	48 89 cf             	mov    %rcx,%rdi
  42414e:	48 89 85 60 fd ff ff 	mov    %rax,-0x2a0(%rbp)
  424155:	e8 a2 1b 02 00       	callq  445cfc <setEncryptedValueQWord>
  42415a:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
  42415e:	48 8d b5 70 ff ff ff 	lea    -0x90(%rbp),%rsi
  424165:	48 89 85 58 fd ff ff 	mov    %rax,-0x2a8(%rbp)
  42416c:	e8 df a8 ff ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  424171:	89 85 54 fd ff ff    	mov    %eax,-0x2ac(%rbp)
  424177:	e8 da 17 02 00       	callq  445956 <writeback_cache>
  42417c:	8b 85 54 fd ff ff    	mov    -0x2ac(%rbp),%eax
  424182:	83 f8 00             	cmp    $0x0,%eax
  424185:	0f 84 8f 02 00 00    	je     42441a <mbedtls_mpi_gcd+0x7aa>
  42418b:	eb 00                	jmp    42418d <mbedtls_mpi_gcd+0x51d>
  42418d:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
  424194:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  424198:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
  42419f:	00 
  4241a0:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
  4241a7:	00 
  4241a8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4241ac:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  4241b0:	48 83 c1 08          	add    $0x8,%rcx
  4241b4:	48 89 cf             	mov    %rcx,%rdi
  4241b7:	48 89 85 48 fd ff ff 	mov    %rax,-0x2b8(%rbp)
  4241be:	e8 85 1f 02 00       	callq  446148 <getDecryptedValueQWord>
  4241c3:	48 8b 8d 48 fd ff ff 	mov    -0x2b8(%rbp),%rcx
  4241ca:	48 39 c1             	cmp    %rax,%rcx
  4241cd:	73 78                	jae    424247 <mbedtls_mpi_gcd+0x5d7>
  4241cf:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
  4241d6:	00 
  4241d7:	48 83 7d b8 40       	cmpq   $0x40,-0x48(%rbp)
  4241dc:	73 58                	jae    424236 <mbedtls_mpi_gcd+0x5c6>
  4241de:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4241e2:	48 83 c0 10          	add    $0x10,%rax
  4241e6:	48 89 c7             	mov    %rax,%rdi
  4241e9:	e8 5a 1f 02 00       	callq  446148 <getDecryptedValueQWord>
  4241ee:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  4241f2:	48 c1 e7 03          	shl    $0x3,%rdi
  4241f6:	48 01 f8             	add    %rdi,%rax
  4241f9:	48 89 c7             	mov    %rax,%rdi
  4241fc:	e8 47 1f 02 00       	callq  446148 <getDecryptedValueQWord>
  424201:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  424205:	48 d3 e8             	shr    %cl,%rax
  424208:	48 83 e0 01          	and    $0x1,%rax
  42420c:	48 83 f8 00          	cmp    $0x0,%rax
  424210:	74 0a                	je     42421c <mbedtls_mpi_gcd+0x5ac>
  424212:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  424216:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  42421a:	eb 33                	jmp    42424f <mbedtls_mpi_gcd+0x5df>
  42421c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  424220:	48 83 c0 01          	add    $0x1,%rax
  424224:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  424228:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  42422c:	48 83 c0 01          	add    $0x1,%rax
  424230:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  424234:	eb a1                	jmp    4241d7 <mbedtls_mpi_gcd+0x567>
  424236:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  42423a:	48 83 c0 01          	add    $0x1,%rax
  42423e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  424242:	e9 61 ff ff ff       	jmpq   4241a8 <mbedtls_mpi_gcd+0x538>
  424247:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
  42424e:	00 
  42424f:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  424253:	48 8d bd 00 fe ff ff 	lea    -0x200(%rbp),%rdi
  42425a:	e8 71 cd ff ff       	callq  420fd0 <mbedtls_mpi_shift_r>
  42425f:	89 85 54 fe ff ff    	mov    %eax,-0x1ac(%rbp)
  424265:	83 f8 00             	cmp    $0x0,%eax
  424268:	74 05                	je     42426f <mbedtls_mpi_gcd+0x5ff>
  42426a:	e9 f5 01 00 00       	jmpq   424464 <mbedtls_mpi_gcd+0x7f4>
  42426f:	eb 00                	jmp    424271 <mbedtls_mpi_gcd+0x601>
  424271:	eb 00                	jmp    424273 <mbedtls_mpi_gcd+0x603>
  424273:	48 8d 85 d0 fd ff ff 	lea    -0x230(%rbp),%rax
  42427a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42427e:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
  424285:	00 
  424286:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
  42428d:	00 
  42428e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  424292:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  424296:	48 83 c1 08          	add    $0x8,%rcx
  42429a:	48 89 cf             	mov    %rcx,%rdi
  42429d:	48 89 85 40 fd ff ff 	mov    %rax,-0x2c0(%rbp)
  4242a4:	e8 9f 1e 02 00       	callq  446148 <getDecryptedValueQWord>
  4242a9:	48 8b 8d 40 fd ff ff 	mov    -0x2c0(%rbp),%rcx
  4242b0:	48 39 c1             	cmp    %rax,%rcx
  4242b3:	73 78                	jae    42432d <mbedtls_mpi_gcd+0x6bd>
  4242b5:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
  4242bc:	00 
  4242bd:	48 83 7d e0 40       	cmpq   $0x40,-0x20(%rbp)
  4242c2:	73 58                	jae    42431c <mbedtls_mpi_gcd+0x6ac>
  4242c4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4242c8:	48 83 c0 10          	add    $0x10,%rax
  4242cc:	48 89 c7             	mov    %rax,%rdi
  4242cf:	e8 74 1e 02 00       	callq  446148 <getDecryptedValueQWord>
  4242d4:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  4242d8:	48 c1 e7 03          	shl    $0x3,%rdi
  4242dc:	48 01 f8             	add    %rdi,%rax
  4242df:	48 89 c7             	mov    %rax,%rdi
  4242e2:	e8 61 1e 02 00       	callq  446148 <getDecryptedValueQWord>
  4242e7:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  4242eb:	48 d3 e8             	shr    %cl,%rax
  4242ee:	48 83 e0 01          	and    $0x1,%rax
  4242f2:	48 83 f8 00          	cmp    $0x0,%rax
  4242f6:	74 0a                	je     424302 <mbedtls_mpi_gcd+0x692>
  4242f8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4242fc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  424300:	eb 33                	jmp    424335 <mbedtls_mpi_gcd+0x6c5>
  424302:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  424306:	48 83 c0 01          	add    $0x1,%rax
  42430a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  42430e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  424312:	48 83 c0 01          	add    $0x1,%rax
  424316:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  42431a:	eb a1                	jmp    4242bd <mbedtls_mpi_gcd+0x64d>
  42431c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  424320:	48 83 c0 01          	add    $0x1,%rax
  424324:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  424328:	e9 61 ff ff ff       	jmpq   42428e <mbedtls_mpi_gcd+0x61e>
  42432d:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  424334:	00 
  424335:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  424339:	48 8d bd d0 fd ff ff 	lea    -0x230(%rbp),%rdi
  424340:	e8 8b cc ff ff       	callq  420fd0 <mbedtls_mpi_shift_r>
  424345:	89 85 54 fe ff ff    	mov    %eax,-0x1ac(%rbp)
  42434b:	83 f8 00             	cmp    $0x0,%eax
  42434e:	74 05                	je     424355 <mbedtls_mpi_gcd+0x6e5>
  424350:	e9 0f 01 00 00       	jmpq   424464 <mbedtls_mpi_gcd+0x7f4>
  424355:	eb 00                	jmp    424357 <mbedtls_mpi_gcd+0x6e7>
  424357:	48 8d bd 00 fe ff ff 	lea    -0x200(%rbp),%rdi
  42435e:	48 8d b5 d0 fd ff ff 	lea    -0x230(%rbp),%rsi
  424365:	e8 e6 a6 ff ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  42436a:	83 f8 00             	cmp    $0x0,%eax
  42436d:	7c 56                	jl     4243c5 <mbedtls_mpi_gcd+0x755>
  42436f:	eb 00                	jmp    424371 <mbedtls_mpi_gcd+0x701>
  424371:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
  424378:	48 89 c7             	mov    %rax,%rdi
  42437b:	48 89 c6             	mov    %rax,%rsi
  42437e:	48 8d 95 d0 fd ff ff 	lea    -0x230(%rbp),%rdx
  424385:	e8 d6 78 ff ff       	callq  41bc60 <mbedtls_mpi_sub_abs>
  42438a:	89 85 54 fe ff ff    	mov    %eax,-0x1ac(%rbp)
  424390:	83 f8 00             	cmp    $0x0,%eax
  424393:	74 05                	je     42439a <mbedtls_mpi_gcd+0x72a>
  424395:	e9 ca 00 00 00       	jmpq   424464 <mbedtls_mpi_gcd+0x7f4>
  42439a:	eb 00                	jmp    42439c <mbedtls_mpi_gcd+0x72c>
  42439c:	eb 00                	jmp    42439e <mbedtls_mpi_gcd+0x72e>
  42439e:	b8 01 00 00 00       	mov    $0x1,%eax
  4243a3:	89 c6                	mov    %eax,%esi
  4243a5:	48 8d bd 00 fe ff ff 	lea    -0x200(%rbp),%rdi
  4243ac:	e8 1f cc ff ff       	callq  420fd0 <mbedtls_mpi_shift_r>
  4243b1:	89 85 54 fe ff ff    	mov    %eax,-0x1ac(%rbp)
  4243b7:	83 f8 00             	cmp    $0x0,%eax
  4243ba:	74 05                	je     4243c1 <mbedtls_mpi_gcd+0x751>
  4243bc:	e9 a3 00 00 00       	jmpq   424464 <mbedtls_mpi_gcd+0x7f4>
  4243c1:	eb 00                	jmp    4243c3 <mbedtls_mpi_gcd+0x753>
  4243c3:	eb 50                	jmp    424415 <mbedtls_mpi_gcd+0x7a5>
  4243c5:	eb 00                	jmp    4243c7 <mbedtls_mpi_gcd+0x757>
  4243c7:	48 8d 85 d0 fd ff ff 	lea    -0x230(%rbp),%rax
  4243ce:	48 89 c7             	mov    %rax,%rdi
  4243d1:	48 89 c6             	mov    %rax,%rsi
  4243d4:	48 8d 95 00 fe ff ff 	lea    -0x200(%rbp),%rdx
  4243db:	e8 80 78 ff ff       	callq  41bc60 <mbedtls_mpi_sub_abs>
  4243e0:	89 85 54 fe ff ff    	mov    %eax,-0x1ac(%rbp)
  4243e6:	83 f8 00             	cmp    $0x0,%eax
  4243e9:	74 02                	je     4243ed <mbedtls_mpi_gcd+0x77d>
  4243eb:	eb 77                	jmp    424464 <mbedtls_mpi_gcd+0x7f4>
  4243ed:	eb 00                	jmp    4243ef <mbedtls_mpi_gcd+0x77f>
  4243ef:	eb 00                	jmp    4243f1 <mbedtls_mpi_gcd+0x781>
  4243f1:	b8 01 00 00 00       	mov    $0x1,%eax
  4243f6:	89 c6                	mov    %eax,%esi
  4243f8:	48 8d bd d0 fd ff ff 	lea    -0x230(%rbp),%rdi
  4243ff:	e8 cc cb ff ff       	callq  420fd0 <mbedtls_mpi_shift_r>
  424404:	89 85 54 fe ff ff    	mov    %eax,-0x1ac(%rbp)
  42440a:	83 f8 00             	cmp    $0x0,%eax
  42440d:	74 02                	je     424411 <mbedtls_mpi_gcd+0x7a1>
  42440f:	eb 53                	jmp    424464 <mbedtls_mpi_gcd+0x7f4>
  424411:	eb 00                	jmp    424413 <mbedtls_mpi_gcd+0x7a3>
  424413:	eb 00                	jmp    424415 <mbedtls_mpi_gcd+0x7a5>
  424415:	e9 7a fc ff ff       	jmpq   424094 <mbedtls_mpi_gcd+0x424>
  42441a:	eb 00                	jmp    42441c <mbedtls_mpi_gcd+0x7ac>
  42441c:	48 8b b5 48 fe ff ff 	mov    -0x1b8(%rbp),%rsi
  424423:	48 8d bd d0 fd ff ff 	lea    -0x230(%rbp),%rdi
  42442a:	e8 d1 c8 ff ff       	callq  420d00 <mbedtls_mpi_shift_l>
  42442f:	89 85 54 fe ff ff    	mov    %eax,-0x1ac(%rbp)
  424435:	83 f8 00             	cmp    $0x0,%eax
  424438:	74 02                	je     42443c <mbedtls_mpi_gcd+0x7cc>
  42443a:	eb 28                	jmp    424464 <mbedtls_mpi_gcd+0x7f4>
  42443c:	eb 00                	jmp    42443e <mbedtls_mpi_gcd+0x7ce>
  42443e:	eb 00                	jmp    424440 <mbedtls_mpi_gcd+0x7d0>
  424440:	48 8b bd 68 fe ff ff 	mov    -0x198(%rbp),%rdi
  424447:	48 8d b5 d0 fd ff ff 	lea    -0x230(%rbp),%rsi
  42444e:	e8 4d 69 ff ff       	callq  41ada0 <mbedtls_mpi_copy>
  424453:	89 85 54 fe ff ff    	mov    %eax,-0x1ac(%rbp)
  424459:	83 f8 00             	cmp    $0x0,%eax
  42445c:	74 02                	je     424460 <mbedtls_mpi_gcd+0x7f0>
  42445e:	eb 04                	jmp    424464 <mbedtls_mpi_gcd+0x7f4>
  424460:	eb 00                	jmp    424462 <mbedtls_mpi_gcd+0x7f2>
  424462:	eb 00                	jmp    424464 <mbedtls_mpi_gcd+0x7f4>
  424464:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
  42446b:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
  424472:	48 83 bd 28 ff ff ff 	cmpq   $0x0,-0xd8(%rbp)
  424479:	00 
  42447a:	75 05                	jne    424481 <mbedtls_mpi_gcd+0x811>
  42447c:	e9 b1 00 00 00       	jmpq   424532 <mbedtls_mpi_gcd+0x8c2>
  424481:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  424488:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
  42448d:	74 78                	je     424507 <mbedtls_mpi_gcd+0x897>
  42448f:	31 f6                	xor    %esi,%esi
  424491:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  424498:	48 8b 40 10          	mov    0x10(%rax),%rax
  42449c:	48 8b 8d 28 ff ff ff 	mov    -0xd8(%rbp),%rcx
  4244a3:	48 8b 49 08          	mov    0x8(%rcx),%rcx
  4244a7:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
  4244ae:	48 89 8d 30 ff ff ff 	mov    %rcx,-0xd0(%rbp)
  4244b5:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  4244bc:	48 8b 8d 30 ff ff ff 	mov    -0xd0(%rbp),%rcx
  4244c3:	48 c1 e1 03          	shl    $0x3,%rcx
  4244c7:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  4244ce:	48 89 8d 40 ff ff ff 	mov    %rcx,-0xc0(%rbp)
  4244d5:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  4244dc:	00 
  4244dd:	48 8b bd 48 ff ff ff 	mov    -0xb8(%rbp),%rdi
  4244e4:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
  4244eb:	ff d0                	callq  *%rax
  4244ed:	48 8b 8d 28 ff ff ff 	mov    -0xd8(%rbp),%rcx
  4244f4:	48 8b 49 10          	mov    0x10(%rcx),%rcx
  4244f8:	48 89 cf             	mov    %rcx,%rdi
  4244fb:	48 89 85 38 fd ff ff 	mov    %rax,-0x2c8(%rbp)
  424502:	e8 d9 cb fd ff       	callq  4010e0 <free@plt>
  424507:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  42450e:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  424514:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  42451b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
  424522:	00 
  424523:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  42452a:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
  424531:	00 
  424532:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
  424539:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
  424540:	48 83 bd b0 fe ff ff 	cmpq   $0x0,-0x150(%rbp)
  424547:	00 
  424548:	75 05                	jne    42454f <mbedtls_mpi_gcd+0x8df>
  42454a:	e9 6c 01 00 00       	jmpq   4246bb <mbedtls_mpi_gcd+0xa4b>
  42454f:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
  424556:	48 83 c0 10          	add    $0x10,%rax
  42455a:	48 89 c7             	mov    %rax,%rdi
  42455d:	e8 e6 1b 02 00       	callq  446148 <getDecryptedValueQWord>
  424562:	48 83 f8 00          	cmp    $0x0,%rax
  424566:	0f 84 00 01 00 00    	je     42466c <mbedtls_mpi_gcd+0x9fc>
  42456c:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
  424573:	48 83 c0 10          	add    $0x10,%rax
  424577:	48 89 c7             	mov    %rax,%rdi
  42457a:	e8 c9 1b 02 00       	callq  446148 <getDecryptedValueQWord>
  42457f:	48 8b bd b0 fe ff ff 	mov    -0x150(%rbp),%rdi
  424586:	48 83 c7 08          	add    $0x8,%rdi
  42458a:	48 89 85 30 fd ff ff 	mov    %rax,-0x2d0(%rbp)
  424591:	e8 b2 1b 02 00       	callq  446148 <getDecryptedValueQWord>
  424596:	48 8b bd 30 fd ff ff 	mov    -0x2d0(%rbp),%rdi
  42459d:	48 89 bd c0 fe ff ff 	mov    %rdi,-0x140(%rbp)
  4245a4:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
  4245ab:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  4245b2:	48 8b 8d b8 fe ff ff 	mov    -0x148(%rbp),%rcx
  4245b9:	48 c1 e1 03          	shl    $0x3,%rcx
  4245bd:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
  4245c4:	48 89 8d c8 fe ff ff 	mov    %rcx,-0x138(%rbp)
  4245cb:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  4245d2:	00 
  4245d3:	48 8b 8d d0 fe ff ff 	mov    -0x130(%rbp),%rcx
  4245da:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
  4245e1:	48 89 85 28 fd ff ff 	mov    %rax,-0x2d8(%rbp)
  4245e8:	48 89 8d 20 fd ff ff 	mov    %rcx,-0x2e0(%rbp)
  4245ef:	48 89 95 18 fd ff ff 	mov    %rdx,-0x2e8(%rbp)
  4245f6:	e8 5b 13 02 00       	callq  445956 <writeback_cache>
  4245fb:	48 8b bd 20 fd ff ff 	mov    -0x2e0(%rbp),%rdi
  424602:	48 8b b5 18 fd ff ff 	mov    -0x2e8(%rbp),%rsi
  424609:	e8 d7 20 02 00       	callq  4466e5 <decryptArrayForLibCall>
  42460e:	31 f6                	xor    %esi,%esi
  424610:	48 8b bd 20 fd ff ff 	mov    -0x2e0(%rbp),%rdi
  424617:	48 8b 95 18 fd ff ff 	mov    -0x2e8(%rbp),%rdx
  42461e:	48 8b 85 28 fd ff ff 	mov    -0x2d8(%rbp),%rax
  424625:	ff d0                	callq  *%rax
  424627:	48 8b bd 20 fd ff ff 	mov    -0x2e0(%rbp),%rdi
  42462e:	48 8b b5 18 fd ff ff 	mov    -0x2e8(%rbp),%rsi
  424635:	48 89 85 10 fd ff ff 	mov    %rax,-0x2f0(%rbp)
  42463c:	e8 15 1e 02 00       	callq  446456 <encryptArrayForLibCall>
  424641:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
  424648:	48 83 c0 10          	add    $0x10,%rax
  42464c:	48 89 c7             	mov    %rax,%rdi
  42464f:	e8 f4 1a 02 00       	callq  446148 <getDecryptedValueQWord>
  424654:	48 89 85 08 fd ff ff 	mov    %rax,-0x2f8(%rbp)
  42465b:	e8 f6 12 02 00       	callq  445956 <writeback_cache>
  424660:	48 8b bd 08 fd ff ff 	mov    -0x2f8(%rbp),%rdi
  424667:	e8 74 ca fd ff       	callq  4010e0 <free@plt>
  42466c:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
  424673:	48 89 c7             	mov    %rax,%rdi
  424676:	be 01 00 00 00       	mov    $0x1,%esi
  42467b:	e8 7e 15 02 00       	callq  445bfe <setEncryptedValueDWord>
  424680:	31 f6                	xor    %esi,%esi
  424682:	48 8b bd b0 fe ff ff 	mov    -0x150(%rbp),%rdi
  424689:	48 83 c7 08          	add    $0x8,%rdi
  42468d:	48 89 85 00 fd ff ff 	mov    %rax,-0x300(%rbp)
  424694:	e8 63 16 02 00       	callq  445cfc <setEncryptedValueQWord>
  424699:	31 c9                	xor    %ecx,%ecx
  42469b:	89 ce                	mov    %ecx,%esi
  42469d:	48 8b bd b0 fe ff ff 	mov    -0x150(%rbp),%rdi
  4246a4:	48 83 c7 10          	add    $0x10,%rdi
  4246a8:	48 89 85 f8 fc ff ff 	mov    %rax,-0x308(%rbp)
  4246af:	e8 48 16 02 00       	callq  445cfc <setEncryptedValueQWord>
  4246b4:	48 89 85 f0 fc ff ff 	mov    %rax,-0x310(%rbp)
  4246bb:	48 8d 85 d0 fd ff ff 	lea    -0x230(%rbp),%rax
  4246c2:	48 89 85 78 fe ff ff 	mov    %rax,-0x188(%rbp)
  4246c9:	48 83 bd 78 fe ff ff 	cmpq   $0x0,-0x188(%rbp)
  4246d0:	00 
  4246d1:	75 05                	jne    4246d8 <mbedtls_mpi_gcd+0xa68>
  4246d3:	e9 6c 01 00 00       	jmpq   424844 <mbedtls_mpi_gcd+0xbd4>
  4246d8:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
  4246df:	48 83 c0 10          	add    $0x10,%rax
  4246e3:	48 89 c7             	mov    %rax,%rdi
  4246e6:	e8 5d 1a 02 00       	callq  446148 <getDecryptedValueQWord>
  4246eb:	48 83 f8 00          	cmp    $0x0,%rax
  4246ef:	0f 84 00 01 00 00    	je     4247f5 <mbedtls_mpi_gcd+0xb85>
  4246f5:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
  4246fc:	48 83 c0 10          	add    $0x10,%rax
  424700:	48 89 c7             	mov    %rax,%rdi
  424703:	e8 40 1a 02 00       	callq  446148 <getDecryptedValueQWord>
  424708:	48 8b bd 78 fe ff ff 	mov    -0x188(%rbp),%rdi
  42470f:	48 83 c7 08          	add    $0x8,%rdi
  424713:	48 89 85 e8 fc ff ff 	mov    %rax,-0x318(%rbp)
  42471a:	e8 29 1a 02 00       	callq  446148 <getDecryptedValueQWord>
  42471f:	48 8b bd e8 fc ff ff 	mov    -0x318(%rbp),%rdi
  424726:	48 89 bd 88 fe ff ff 	mov    %rdi,-0x178(%rbp)
  42472d:	48 89 85 80 fe ff ff 	mov    %rax,-0x180(%rbp)
  424734:	48 8b 85 88 fe ff ff 	mov    -0x178(%rbp),%rax
  42473b:	48 8b 8d 80 fe ff ff 	mov    -0x180(%rbp),%rcx
  424742:	48 c1 e1 03          	shl    $0x3,%rcx
  424746:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
  42474d:	48 89 8d 90 fe ff ff 	mov    %rcx,-0x170(%rbp)
  424754:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  42475b:	00 
  42475c:	48 8b 8d 98 fe ff ff 	mov    -0x168(%rbp),%rcx
  424763:	48 8b 95 90 fe ff ff 	mov    -0x170(%rbp),%rdx
  42476a:	48 89 85 e0 fc ff ff 	mov    %rax,-0x320(%rbp)
  424771:	48 89 8d d8 fc ff ff 	mov    %rcx,-0x328(%rbp)
  424778:	48 89 95 d0 fc ff ff 	mov    %rdx,-0x330(%rbp)
  42477f:	e8 d2 11 02 00       	callq  445956 <writeback_cache>
  424784:	48 8b bd d8 fc ff ff 	mov    -0x328(%rbp),%rdi
  42478b:	48 8b b5 d0 fc ff ff 	mov    -0x330(%rbp),%rsi
  424792:	e8 4e 1f 02 00       	callq  4466e5 <decryptArrayForLibCall>
  424797:	31 f6                	xor    %esi,%esi
  424799:	48 8b bd d8 fc ff ff 	mov    -0x328(%rbp),%rdi
  4247a0:	48 8b 95 d0 fc ff ff 	mov    -0x330(%rbp),%rdx
  4247a7:	48 8b 85 e0 fc ff ff 	mov    -0x320(%rbp),%rax
  4247ae:	ff d0                	callq  *%rax
  4247b0:	48 8b bd d8 fc ff ff 	mov    -0x328(%rbp),%rdi
  4247b7:	48 8b b5 d0 fc ff ff 	mov    -0x330(%rbp),%rsi
  4247be:	48 89 85 c8 fc ff ff 	mov    %rax,-0x338(%rbp)
  4247c5:	e8 8c 1c 02 00       	callq  446456 <encryptArrayForLibCall>
  4247ca:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
  4247d1:	48 83 c0 10          	add    $0x10,%rax
  4247d5:	48 89 c7             	mov    %rax,%rdi
  4247d8:	e8 6b 19 02 00       	callq  446148 <getDecryptedValueQWord>
  4247dd:	48 89 85 c0 fc ff ff 	mov    %rax,-0x340(%rbp)
  4247e4:	e8 6d 11 02 00       	callq  445956 <writeback_cache>
  4247e9:	48 8b bd c0 fc ff ff 	mov    -0x340(%rbp),%rdi
  4247f0:	e8 eb c8 fd ff       	callq  4010e0 <free@plt>
  4247f5:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
  4247fc:	48 89 c7             	mov    %rax,%rdi
  4247ff:	be 01 00 00 00       	mov    $0x1,%esi
  424804:	e8 f5 13 02 00       	callq  445bfe <setEncryptedValueDWord>
  424809:	31 f6                	xor    %esi,%esi
  42480b:	48 8b bd 78 fe ff ff 	mov    -0x188(%rbp),%rdi
  424812:	48 83 c7 08          	add    $0x8,%rdi
  424816:	48 89 85 b8 fc ff ff 	mov    %rax,-0x348(%rbp)
  42481d:	e8 da 14 02 00       	callq  445cfc <setEncryptedValueQWord>
  424822:	31 c9                	xor    %ecx,%ecx
  424824:	89 ce                	mov    %ecx,%esi
  424826:	48 8b bd 78 fe ff ff 	mov    -0x188(%rbp),%rdi
  42482d:	48 83 c7 10          	add    $0x10,%rdi
  424831:	48 89 85 b0 fc ff ff 	mov    %rax,-0x350(%rbp)
  424838:	e8 bf 14 02 00       	callq  445cfc <setEncryptedValueQWord>
  42483d:	48 89 85 a8 fc ff ff 	mov    %rax,-0x358(%rbp)
  424844:	8b 85 54 fe ff ff    	mov    -0x1ac(%rbp),%eax
  42484a:	89 85 a4 fc ff ff    	mov    %eax,-0x35c(%rbp)
  424850:	e8 01 11 02 00       	callq  445956 <writeback_cache>
  424855:	8b 85 a4 fc ff ff    	mov    -0x35c(%rbp),%eax
  42485b:	48 81 c4 60 03 00 00 	add    $0x360,%rsp
  424862:	5d                   	pop    %rbp
  424863:	c3                   	retq   
  424864:	66 66 66 2e 0f 1f 84 	data16 data16 nopw %cs:0x0(%rax,%rax,1)
  42486b:	00 00 00 00 00 

0000000000424870 <mbedtls_mpi_inv_mod>:
  424870:	55                   	push   %rbp
  424871:	48 89 e5             	mov    %rsp,%rbp
  424874:	48 81 ec f0 09 00 00 	sub    $0x9f0,%rsp
  42487b:	48 89 bd c0 fc ff ff 	mov    %rdi,-0x340(%rbp)
  424882:	48 89 b5 b8 fc ff ff 	mov    %rsi,-0x348(%rbp)
  424889:	48 89 95 b0 fc ff ff 	mov    %rdx,-0x350(%rbp)
  424890:	eb 00                	jmp    424892 <mbedtls_mpi_inv_mod+0x22>
  424892:	eb 00                	jmp    424894 <mbedtls_mpi_inv_mod+0x24>
  424894:	eb 00                	jmp    424896 <mbedtls_mpi_inv_mod+0x26>
  424896:	eb 00                	jmp    424898 <mbedtls_mpi_inv_mod+0x28>
  424898:	eb 00                	jmp    42489a <mbedtls_mpi_inv_mod+0x2a>
  42489a:	48 8b 85 b0 fc ff ff 	mov    -0x350(%rbp),%rax
  4248a1:	48 89 85 f8 fa ff ff 	mov    %rax,-0x508(%rbp)
  4248a8:	e8 a9 10 02 00       	callq  445956 <writeback_cache>
  4248ad:	48 8b 85 f8 fa ff ff 	mov    -0x508(%rbp),%rax
  4248b4:	48 89 85 28 fd ff ff 	mov    %rax,-0x2d8(%rbp)
  4248bb:	48 c7 85 20 fd ff ff 	movq   $0x1,-0x2e0(%rbp)
  4248c2:	01 00 00 00 
  4248c6:	48 83 bd 20 fd ff ff 	cmpq   $0x0,-0x2e0(%rbp)
  4248cd:	00 
  4248ce:	7d 14                	jge    4248e4 <mbedtls_mpi_inv_mod+0x74>
  4248d0:	31 c0                	xor    %eax,%eax
  4248d2:	89 c1                	mov    %eax,%ecx
  4248d4:	48 2b 8d 20 fd ff ff 	sub    -0x2e0(%rbp),%rcx
  4248db:	48 89 8d f0 fa ff ff 	mov    %rcx,-0x510(%rbp)
  4248e2:	eb 0e                	jmp    4248f2 <mbedtls_mpi_inv_mod+0x82>
  4248e4:	48 8b 85 20 fd ff ff 	mov    -0x2e0(%rbp),%rax
  4248eb:	48 89 85 f0 fa ff ff 	mov    %rax,-0x510(%rbp)
  4248f2:	48 8b 85 f0 fa ff ff 	mov    -0x510(%rbp),%rax
  4248f9:	48 8d 8d d0 fc ff ff 	lea    -0x330(%rbp),%rcx
  424900:	48 89 cf             	mov    %rcx,%rdi
  424903:	48 89 c6             	mov    %rax,%rsi
  424906:	e8 f1 13 02 00       	callq  445cfc <setEncryptedValueQWord>
  42490b:	48 8d 8d f0 fc ff ff 	lea    -0x310(%rbp),%rcx
  424912:	48 8b b5 20 fd ff ff 	mov    -0x2e0(%rbp),%rsi
  424919:	48 83 fe 00          	cmp    $0x0,%rsi
  42491d:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  424922:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  424928:	44 0f 4c c2          	cmovl  %edx,%r8d
  42492c:	48 89 cf             	mov    %rcx,%rdi
  42492f:	44 89 c6             	mov    %r8d,%esi
  424932:	48 89 85 e8 fa ff ff 	mov    %rax,-0x518(%rbp)
  424939:	e8 c0 12 02 00       	callq  445bfe <setEncryptedValueDWord>
  42493e:	ba 01 00 00 00       	mov    $0x1,%edx
  424943:	89 d6                	mov    %edx,%esi
  424945:	48 8d 8d f0 fc ff ff 	lea    -0x310(%rbp),%rcx
  42494c:	48 83 c1 08          	add    $0x8,%rcx
  424950:	48 89 cf             	mov    %rcx,%rdi
  424953:	48 89 85 e0 fa ff ff 	mov    %rax,-0x520(%rbp)
  42495a:	e8 9d 13 02 00       	callq  445cfc <setEncryptedValueQWord>
  42495f:	48 8d b5 d0 fc ff ff 	lea    -0x330(%rbp),%rsi
  424966:	48 8d 8d f0 fc ff ff 	lea    -0x310(%rbp),%rcx
  42496d:	48 83 c1 10          	add    $0x10,%rcx
  424971:	48 89 cf             	mov    %rcx,%rdi
  424974:	48 89 85 d8 fa ff ff 	mov    %rax,-0x528(%rbp)
  42497b:	e8 7c 13 02 00       	callq  445cfc <setEncryptedValueQWord>
  424980:	48 8b bd 28 fd ff ff 	mov    -0x2d8(%rbp),%rdi
  424987:	48 8d b5 f0 fc ff ff 	lea    -0x310(%rbp),%rsi
  42498e:	48 89 85 d0 fa ff ff 	mov    %rax,-0x530(%rbp)
  424995:	e8 b6 a0 ff ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  42499a:	89 85 cc fa ff ff    	mov    %eax,-0x534(%rbp)
  4249a0:	e8 b1 0f 02 00       	callq  445956 <writeback_cache>
  4249a5:	8b 85 cc fa ff ff    	mov    -0x534(%rbp),%eax
  4249ab:	83 f8 00             	cmp    $0x0,%eax
  4249ae:	7f 0f                	jg     4249bf <mbedtls_mpi_inv_mod+0x14f>
  4249b0:	c7 85 cc fc ff ff fc 	movl   $0xfffffffc,-0x334(%rbp)
  4249b7:	ff ff ff 
  4249ba:	e9 79 1e 00 00       	jmpq   426838 <mbedtls_mpi_inv_mod+0x1fc8>
  4249bf:	48 8d 85 50 fc ff ff 	lea    -0x3b0(%rbp),%rax
  4249c6:	48 89 85 30 fd ff ff 	mov    %rax,-0x2d0(%rbp)
  4249cd:	48 8b 85 30 fd ff ff 	mov    -0x2d0(%rbp),%rax
  4249d4:	48 89 c7             	mov    %rax,%rdi
  4249d7:	be 01 00 00 00       	mov    $0x1,%esi
  4249dc:	e8 1d 12 02 00       	callq  445bfe <setEncryptedValueDWord>
  4249e1:	31 f6                	xor    %esi,%esi
  4249e3:	48 8b bd 30 fd ff ff 	mov    -0x2d0(%rbp),%rdi
  4249ea:	48 83 c7 08          	add    $0x8,%rdi
  4249ee:	48 89 85 c0 fa ff ff 	mov    %rax,-0x540(%rbp)
  4249f5:	e8 02 13 02 00       	callq  445cfc <setEncryptedValueQWord>
  4249fa:	31 c9                	xor    %ecx,%ecx
  4249fc:	89 ce                	mov    %ecx,%esi
  4249fe:	48 8b bd 30 fd ff ff 	mov    -0x2d0(%rbp),%rdi
  424a05:	48 83 c7 10          	add    $0x10,%rdi
  424a09:	48 89 85 b8 fa ff ff 	mov    %rax,-0x548(%rbp)
  424a10:	e8 e7 12 02 00       	callq  445cfc <setEncryptedValueQWord>
  424a15:	48 8d b5 20 fc ff ff 	lea    -0x3e0(%rbp),%rsi
  424a1c:	48 89 b5 60 fd ff ff 	mov    %rsi,-0x2a0(%rbp)
  424a23:	48 8b b5 60 fd ff ff 	mov    -0x2a0(%rbp),%rsi
  424a2a:	48 89 f7             	mov    %rsi,%rdi
  424a2d:	be 01 00 00 00       	mov    $0x1,%esi
  424a32:	48 89 85 b0 fa ff ff 	mov    %rax,-0x550(%rbp)
  424a39:	e8 c0 11 02 00       	callq  445bfe <setEncryptedValueDWord>
  424a3e:	31 c9                	xor    %ecx,%ecx
  424a40:	89 ce                	mov    %ecx,%esi
  424a42:	48 8b bd 60 fd ff ff 	mov    -0x2a0(%rbp),%rdi
  424a49:	48 83 c7 08          	add    $0x8,%rdi
  424a4d:	48 89 85 a8 fa ff ff 	mov    %rax,-0x558(%rbp)
  424a54:	e8 a3 12 02 00       	callq  445cfc <setEncryptedValueQWord>
  424a59:	31 c9                	xor    %ecx,%ecx
  424a5b:	89 ce                	mov    %ecx,%esi
  424a5d:	48 8b bd 60 fd ff ff 	mov    -0x2a0(%rbp),%rdi
  424a64:	48 83 c7 10          	add    $0x10,%rdi
  424a68:	48 89 85 a0 fa ff ff 	mov    %rax,-0x560(%rbp)
  424a6f:	e8 88 12 02 00       	callq  445cfc <setEncryptedValueQWord>
  424a74:	48 8d b5 f0 fb ff ff 	lea    -0x410(%rbp),%rsi
  424a7b:	48 89 b5 68 fd ff ff 	mov    %rsi,-0x298(%rbp)
  424a82:	48 8b b5 68 fd ff ff 	mov    -0x298(%rbp),%rsi
  424a89:	48 89 f7             	mov    %rsi,%rdi
  424a8c:	be 01 00 00 00       	mov    $0x1,%esi
  424a91:	48 89 85 98 fa ff ff 	mov    %rax,-0x568(%rbp)
  424a98:	e8 61 11 02 00       	callq  445bfe <setEncryptedValueDWord>
  424a9d:	31 c9                	xor    %ecx,%ecx
  424a9f:	89 ce                	mov    %ecx,%esi
  424aa1:	48 8b bd 68 fd ff ff 	mov    -0x298(%rbp),%rdi
  424aa8:	48 83 c7 08          	add    $0x8,%rdi
  424aac:	48 89 85 90 fa ff ff 	mov    %rax,-0x570(%rbp)
  424ab3:	e8 44 12 02 00       	callq  445cfc <setEncryptedValueQWord>
  424ab8:	31 c9                	xor    %ecx,%ecx
  424aba:	89 ce                	mov    %ecx,%esi
  424abc:	48 8b bd 68 fd ff ff 	mov    -0x298(%rbp),%rdi
  424ac3:	48 83 c7 10          	add    $0x10,%rdi
  424ac7:	48 89 85 88 fa ff ff 	mov    %rax,-0x578(%rbp)
  424ace:	e8 29 12 02 00       	callq  445cfc <setEncryptedValueQWord>
  424ad3:	48 8d b5 c0 fb ff ff 	lea    -0x440(%rbp),%rsi
  424ada:	48 89 b5 98 fd ff ff 	mov    %rsi,-0x268(%rbp)
  424ae1:	48 8b b5 98 fd ff ff 	mov    -0x268(%rbp),%rsi
  424ae8:	48 89 f7             	mov    %rsi,%rdi
  424aeb:	be 01 00 00 00       	mov    $0x1,%esi
  424af0:	48 89 85 80 fa ff ff 	mov    %rax,-0x580(%rbp)
  424af7:	e8 02 11 02 00       	callq  445bfe <setEncryptedValueDWord>
  424afc:	31 c9                	xor    %ecx,%ecx
  424afe:	89 ce                	mov    %ecx,%esi
  424b00:	48 8b bd 98 fd ff ff 	mov    -0x268(%rbp),%rdi
  424b07:	48 83 c7 08          	add    $0x8,%rdi
  424b0b:	48 89 85 78 fa ff ff 	mov    %rax,-0x588(%rbp)
  424b12:	e8 e5 11 02 00       	callq  445cfc <setEncryptedValueQWord>
  424b17:	31 c9                	xor    %ecx,%ecx
  424b19:	89 ce                	mov    %ecx,%esi
  424b1b:	48 8b bd 98 fd ff ff 	mov    -0x268(%rbp),%rdi
  424b22:	48 83 c7 10          	add    $0x10,%rdi
  424b26:	48 89 85 70 fa ff ff 	mov    %rax,-0x590(%rbp)
  424b2d:	e8 ca 11 02 00       	callq  445cfc <setEncryptedValueQWord>
  424b32:	48 8d b5 80 fc ff ff 	lea    -0x380(%rbp),%rsi
  424b39:	48 89 b5 a0 fd ff ff 	mov    %rsi,-0x260(%rbp)
  424b40:	48 8b b5 a0 fd ff ff 	mov    -0x260(%rbp),%rsi
  424b47:	48 89 f7             	mov    %rsi,%rdi
  424b4a:	be 01 00 00 00       	mov    $0x1,%esi
  424b4f:	48 89 85 68 fa ff ff 	mov    %rax,-0x598(%rbp)
  424b56:	e8 a3 10 02 00       	callq  445bfe <setEncryptedValueDWord>
  424b5b:	31 c9                	xor    %ecx,%ecx
  424b5d:	89 ce                	mov    %ecx,%esi
  424b5f:	48 8b bd a0 fd ff ff 	mov    -0x260(%rbp),%rdi
  424b66:	48 83 c7 08          	add    $0x8,%rdi
  424b6a:	48 89 85 60 fa ff ff 	mov    %rax,-0x5a0(%rbp)
  424b71:	e8 86 11 02 00       	callq  445cfc <setEncryptedValueQWord>
  424b76:	31 c9                	xor    %ecx,%ecx
  424b78:	89 ce                	mov    %ecx,%esi
  424b7a:	48 8b bd a0 fd ff ff 	mov    -0x260(%rbp),%rdi
  424b81:	48 83 c7 10          	add    $0x10,%rdi
  424b85:	48 89 85 58 fa ff ff 	mov    %rax,-0x5a8(%rbp)
  424b8c:	e8 6b 11 02 00       	callq  445cfc <setEncryptedValueQWord>
  424b91:	48 8d b5 90 fb ff ff 	lea    -0x470(%rbp),%rsi
  424b98:	48 89 b5 d0 fd ff ff 	mov    %rsi,-0x230(%rbp)
  424b9f:	48 8b b5 d0 fd ff ff 	mov    -0x230(%rbp),%rsi
  424ba6:	48 89 f7             	mov    %rsi,%rdi
  424ba9:	be 01 00 00 00       	mov    $0x1,%esi
  424bae:	48 89 85 50 fa ff ff 	mov    %rax,-0x5b0(%rbp)
  424bb5:	e8 44 10 02 00       	callq  445bfe <setEncryptedValueDWord>
  424bba:	31 c9                	xor    %ecx,%ecx
  424bbc:	89 ce                	mov    %ecx,%esi
  424bbe:	48 8b bd d0 fd ff ff 	mov    -0x230(%rbp),%rdi
  424bc5:	48 83 c7 08          	add    $0x8,%rdi
  424bc9:	48 89 85 48 fa ff ff 	mov    %rax,-0x5b8(%rbp)
  424bd0:	e8 27 11 02 00       	callq  445cfc <setEncryptedValueQWord>
  424bd5:	31 c9                	xor    %ecx,%ecx
  424bd7:	89 ce                	mov    %ecx,%esi
  424bd9:	48 8b bd d0 fd ff ff 	mov    -0x230(%rbp),%rdi
  424be0:	48 83 c7 10          	add    $0x10,%rdi
  424be4:	48 89 85 40 fa ff ff 	mov    %rax,-0x5c0(%rbp)
  424beb:	e8 0c 11 02 00       	callq  445cfc <setEncryptedValueQWord>
  424bf0:	48 8d b5 60 fb ff ff 	lea    -0x4a0(%rbp),%rsi
  424bf7:	48 89 b5 d8 fd ff ff 	mov    %rsi,-0x228(%rbp)
  424bfe:	48 8b b5 d8 fd ff ff 	mov    -0x228(%rbp),%rsi
  424c05:	48 89 f7             	mov    %rsi,%rdi
  424c08:	be 01 00 00 00       	mov    $0x1,%esi
  424c0d:	48 89 85 38 fa ff ff 	mov    %rax,-0x5c8(%rbp)
  424c14:	e8 e5 0f 02 00       	callq  445bfe <setEncryptedValueDWord>
  424c19:	31 c9                	xor    %ecx,%ecx
  424c1b:	89 ce                	mov    %ecx,%esi
  424c1d:	48 8b bd d8 fd ff ff 	mov    -0x228(%rbp),%rdi
  424c24:	48 83 c7 08          	add    $0x8,%rdi
  424c28:	48 89 85 30 fa ff ff 	mov    %rax,-0x5d0(%rbp)
  424c2f:	e8 c8 10 02 00       	callq  445cfc <setEncryptedValueQWord>
  424c34:	31 c9                	xor    %ecx,%ecx
  424c36:	89 ce                	mov    %ecx,%esi
  424c38:	48 8b bd d8 fd ff ff 	mov    -0x228(%rbp),%rdi
  424c3f:	48 83 c7 10          	add    $0x10,%rdi
  424c43:	48 89 85 28 fa ff ff 	mov    %rax,-0x5d8(%rbp)
  424c4a:	e8 ad 10 02 00       	callq  445cfc <setEncryptedValueQWord>
  424c4f:	48 8d b5 30 fb ff ff 	lea    -0x4d0(%rbp),%rsi
  424c56:	48 89 b5 08 fe ff ff 	mov    %rsi,-0x1f8(%rbp)
  424c5d:	48 8b b5 08 fe ff ff 	mov    -0x1f8(%rbp),%rsi
  424c64:	48 89 f7             	mov    %rsi,%rdi
  424c67:	be 01 00 00 00       	mov    $0x1,%esi
  424c6c:	48 89 85 20 fa ff ff 	mov    %rax,-0x5e0(%rbp)
  424c73:	e8 86 0f 02 00       	callq  445bfe <setEncryptedValueDWord>
  424c78:	31 c9                	xor    %ecx,%ecx
  424c7a:	89 ce                	mov    %ecx,%esi
  424c7c:	48 8b bd 08 fe ff ff 	mov    -0x1f8(%rbp),%rdi
  424c83:	48 83 c7 08          	add    $0x8,%rdi
  424c87:	48 89 85 18 fa ff ff 	mov    %rax,-0x5e8(%rbp)
  424c8e:	e8 69 10 02 00       	callq  445cfc <setEncryptedValueQWord>
  424c93:	31 c9                	xor    %ecx,%ecx
  424c95:	89 ce                	mov    %ecx,%esi
  424c97:	48 8b bd 08 fe ff ff 	mov    -0x1f8(%rbp),%rdi
  424c9e:	48 83 c7 10          	add    $0x10,%rdi
  424ca2:	48 89 85 10 fa ff ff 	mov    %rax,-0x5f0(%rbp)
  424ca9:	e8 4e 10 02 00       	callq  445cfc <setEncryptedValueQWord>
  424cae:	48 8d b5 00 fb ff ff 	lea    -0x500(%rbp),%rsi
  424cb5:	48 89 b5 10 fe ff ff 	mov    %rsi,-0x1f0(%rbp)
  424cbc:	48 8b b5 10 fe ff ff 	mov    -0x1f0(%rbp),%rsi
  424cc3:	48 89 f7             	mov    %rsi,%rdi
  424cc6:	be 01 00 00 00       	mov    $0x1,%esi
  424ccb:	48 89 85 08 fa ff ff 	mov    %rax,-0x5f8(%rbp)
  424cd2:	e8 27 0f 02 00       	callq  445bfe <setEncryptedValueDWord>
  424cd7:	31 c9                	xor    %ecx,%ecx
  424cd9:	89 ce                	mov    %ecx,%esi
  424cdb:	48 8b bd 10 fe ff ff 	mov    -0x1f0(%rbp),%rdi
  424ce2:	48 83 c7 08          	add    $0x8,%rdi
  424ce6:	48 89 85 00 fa ff ff 	mov    %rax,-0x600(%rbp)
  424ced:	e8 0a 10 02 00       	callq  445cfc <setEncryptedValueQWord>
  424cf2:	31 c9                	xor    %ecx,%ecx
  424cf4:	89 ce                	mov    %ecx,%esi
  424cf6:	48 8b bd 10 fe ff ff 	mov    -0x1f0(%rbp),%rdi
  424cfd:	48 83 c7 10          	add    $0x10,%rdi
  424d01:	48 89 85 f8 f9 ff ff 	mov    %rax,-0x608(%rbp)
  424d08:	e8 ef 0f 02 00       	callq  445cfc <setEncryptedValueQWord>
  424d0d:	48 89 85 f0 f9 ff ff 	mov    %rax,-0x610(%rbp)
  424d14:	48 8b b5 b8 fc ff ff 	mov    -0x348(%rbp),%rsi
  424d1b:	48 8b 95 b0 fc ff ff 	mov    -0x350(%rbp),%rdx
  424d22:	48 8d bd 80 fc ff ff 	lea    -0x380(%rbp),%rdi
  424d29:	e8 42 ef ff ff       	callq  423c70 <mbedtls_mpi_gcd>
  424d2e:	89 85 ac fc ff ff    	mov    %eax,-0x354(%rbp)
  424d34:	83 f8 00             	cmp    $0x0,%eax
  424d37:	74 05                	je     424d3e <mbedtls_mpi_inv_mod+0x4ce>
  424d39:	e9 bc 0d 00 00       	jmpq   425afa <mbedtls_mpi_inv_mod+0x128a>
  424d3e:	eb 00                	jmp    424d40 <mbedtls_mpi_inv_mod+0x4d0>
  424d40:	e8 11 0c 02 00       	callq  445956 <writeback_cache>
  424d45:	48 8d 85 80 fc ff ff 	lea    -0x380(%rbp),%rax
  424d4c:	48 89 85 78 fe ff ff 	mov    %rax,-0x188(%rbp)
  424d53:	48 c7 85 70 fe ff ff 	movq   $0x1,-0x190(%rbp)
  424d5a:	01 00 00 00 
  424d5e:	48 83 bd 70 fe ff ff 	cmpq   $0x0,-0x190(%rbp)
  424d65:	00 
  424d66:	7d 14                	jge    424d7c <mbedtls_mpi_inv_mod+0x50c>
  424d68:	31 c0                	xor    %eax,%eax
  424d6a:	89 c1                	mov    %eax,%ecx
  424d6c:	48 2b 8d 70 fe ff ff 	sub    -0x190(%rbp),%rcx
  424d73:	48 89 8d e8 f9 ff ff 	mov    %rcx,-0x618(%rbp)
  424d7a:	eb 0e                	jmp    424d8a <mbedtls_mpi_inv_mod+0x51a>
  424d7c:	48 8b 85 70 fe ff ff 	mov    -0x190(%rbp),%rax
  424d83:	48 89 85 e8 f9 ff ff 	mov    %rax,-0x618(%rbp)
  424d8a:	48 8b 85 e8 f9 ff ff 	mov    -0x618(%rbp),%rax
  424d91:	48 8d 8d d0 fc ff ff 	lea    -0x330(%rbp),%rcx
  424d98:	48 89 cf             	mov    %rcx,%rdi
  424d9b:	48 89 c6             	mov    %rax,%rsi
  424d9e:	e8 59 0f 02 00       	callq  445cfc <setEncryptedValueQWord>
  424da3:	48 8d 8d 40 fe ff ff 	lea    -0x1c0(%rbp),%rcx
  424daa:	48 8b b5 70 fe ff ff 	mov    -0x190(%rbp),%rsi
  424db1:	48 83 fe 00          	cmp    $0x0,%rsi
  424db5:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  424dba:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  424dc0:	44 0f 4c c2          	cmovl  %edx,%r8d
  424dc4:	48 89 cf             	mov    %rcx,%rdi
  424dc7:	44 89 c6             	mov    %r8d,%esi
  424dca:	48 89 85 e0 f9 ff ff 	mov    %rax,-0x620(%rbp)
  424dd1:	e8 28 0e 02 00       	callq  445bfe <setEncryptedValueDWord>
  424dd6:	ba 01 00 00 00       	mov    $0x1,%edx
  424ddb:	89 d6                	mov    %edx,%esi
  424ddd:	48 8d 8d 40 fe ff ff 	lea    -0x1c0(%rbp),%rcx
  424de4:	48 83 c1 08          	add    $0x8,%rcx
  424de8:	48 89 cf             	mov    %rcx,%rdi
  424deb:	48 89 85 d8 f9 ff ff 	mov    %rax,-0x628(%rbp)
  424df2:	e8 05 0f 02 00       	callq  445cfc <setEncryptedValueQWord>
  424df7:	48 8d b5 d0 fc ff ff 	lea    -0x330(%rbp),%rsi
  424dfe:	48 8d 8d 40 fe ff ff 	lea    -0x1c0(%rbp),%rcx
  424e05:	48 83 c1 10          	add    $0x10,%rcx
  424e09:	48 89 cf             	mov    %rcx,%rdi
  424e0c:	48 89 85 d0 f9 ff ff 	mov    %rax,-0x630(%rbp)
  424e13:	e8 e4 0e 02 00       	callq  445cfc <setEncryptedValueQWord>
  424e18:	48 8b bd 78 fe ff ff 	mov    -0x188(%rbp),%rdi
  424e1f:	48 8d b5 40 fe ff ff 	lea    -0x1c0(%rbp),%rsi
  424e26:	48 89 85 c8 f9 ff ff 	mov    %rax,-0x638(%rbp)
  424e2d:	e8 1e 9c ff ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  424e32:	89 85 c4 f9 ff ff    	mov    %eax,-0x63c(%rbp)
  424e38:	e8 19 0b 02 00       	callq  445956 <writeback_cache>
  424e3d:	8b 85 c4 f9 ff ff    	mov    -0x63c(%rbp),%eax
  424e43:	83 f8 00             	cmp    $0x0,%eax
  424e46:	74 0f                	je     424e57 <mbedtls_mpi_inv_mod+0x5e7>
  424e48:	c7 85 ac fc ff ff f2 	movl   $0xfffffff2,-0x354(%rbp)
  424e4f:	ff ff ff 
  424e52:	e9 a3 0c 00 00       	jmpq   425afa <mbedtls_mpi_inv_mod+0x128a>
  424e57:	eb 00                	jmp    424e59 <mbedtls_mpi_inv_mod+0x5e9>
  424e59:	48 8b b5 b8 fc ff ff 	mov    -0x348(%rbp),%rsi
  424e60:	48 8b 95 b0 fc ff ff 	mov    -0x350(%rbp),%rdx
  424e67:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  424e6e:	e8 1d cb ff ff       	callq  421990 <mbedtls_mpi_mod_mpi>
  424e73:	89 85 ac fc ff ff    	mov    %eax,-0x354(%rbp)
  424e79:	83 f8 00             	cmp    $0x0,%eax
  424e7c:	74 05                	je     424e83 <mbedtls_mpi_inv_mod+0x613>
  424e7e:	e9 77 0c 00 00       	jmpq   425afa <mbedtls_mpi_inv_mod+0x128a>
  424e83:	eb 00                	jmp    424e85 <mbedtls_mpi_inv_mod+0x615>
  424e85:	eb 00                	jmp    424e87 <mbedtls_mpi_inv_mod+0x617>
  424e87:	48 8d bd 20 fc ff ff 	lea    -0x3e0(%rbp),%rdi
  424e8e:	48 8d b5 50 fc ff ff 	lea    -0x3b0(%rbp),%rsi
  424e95:	e8 06 5f ff ff       	callq  41ada0 <mbedtls_mpi_copy>
  424e9a:	89 85 ac fc ff ff    	mov    %eax,-0x354(%rbp)
  424ea0:	83 f8 00             	cmp    $0x0,%eax
  424ea3:	74 05                	je     424eaa <mbedtls_mpi_inv_mod+0x63a>
  424ea5:	e9 50 0c 00 00       	jmpq   425afa <mbedtls_mpi_inv_mod+0x128a>
  424eaa:	eb 00                	jmp    424eac <mbedtls_mpi_inv_mod+0x63c>
  424eac:	eb 00                	jmp    424eae <mbedtls_mpi_inv_mod+0x63e>
  424eae:	48 8b b5 b0 fc ff ff 	mov    -0x350(%rbp),%rsi
  424eb5:	48 8d bd 90 fb ff ff 	lea    -0x470(%rbp),%rdi
  424ebc:	e8 df 5e ff ff       	callq  41ada0 <mbedtls_mpi_copy>
  424ec1:	89 85 ac fc ff ff    	mov    %eax,-0x354(%rbp)
  424ec7:	83 f8 00             	cmp    $0x0,%eax
  424eca:	74 05                	je     424ed1 <mbedtls_mpi_inv_mod+0x661>
  424ecc:	e9 29 0c 00 00       	jmpq   425afa <mbedtls_mpi_inv_mod+0x128a>
  424ed1:	eb 00                	jmp    424ed3 <mbedtls_mpi_inv_mod+0x663>
  424ed3:	eb 00                	jmp    424ed5 <mbedtls_mpi_inv_mod+0x665>
  424ed5:	48 8b b5 b0 fc ff ff 	mov    -0x350(%rbp),%rsi
  424edc:	48 8d bd 60 fb ff ff 	lea    -0x4a0(%rbp),%rdi
  424ee3:	e8 b8 5e ff ff       	callq  41ada0 <mbedtls_mpi_copy>
  424ee8:	89 85 ac fc ff ff    	mov    %eax,-0x354(%rbp)
  424eee:	83 f8 00             	cmp    $0x0,%eax
  424ef1:	74 05                	je     424ef8 <mbedtls_mpi_inv_mod+0x688>
  424ef3:	e9 02 0c 00 00       	jmpq   425afa <mbedtls_mpi_inv_mod+0x128a>
  424ef8:	eb 00                	jmp    424efa <mbedtls_mpi_inv_mod+0x68a>
  424efa:	eb 00                	jmp    424efc <mbedtls_mpi_inv_mod+0x68c>
  424efc:	b8 01 00 00 00       	mov    $0x1,%eax
  424f01:	89 c6                	mov    %eax,%esi
  424f03:	48 8d 8d f0 fb ff ff 	lea    -0x410(%rbp),%rcx
  424f0a:	48 89 8d 90 fe ff ff 	mov    %rcx,-0x170(%rbp)
  424f11:	48 c7 85 88 fe ff ff 	movq   $0x1,-0x178(%rbp)
  424f18:	01 00 00 00 
  424f1c:	48 8b bd 90 fe ff ff 	mov    -0x170(%rbp),%rdi
  424f23:	e8 18 5c ff ff       	callq  41ab40 <mbedtls_mpi_grow>
  424f28:	89 85 84 fe ff ff    	mov    %eax,-0x17c(%rbp)
  424f2e:	83 f8 00             	cmp    $0x0,%eax
  424f31:	74 05                	je     424f38 <mbedtls_mpi_inv_mod+0x6c8>
  424f33:	e9 0b 01 00 00       	jmpq   425043 <mbedtls_mpi_inv_mod+0x7d3>
  424f38:	48 8b 85 90 fe ff ff 	mov    -0x170(%rbp),%rax
  424f3f:	48 83 c0 10          	add    $0x10,%rax
  424f43:	48 89 c7             	mov    %rax,%rdi
  424f46:	e8 fd 11 02 00       	callq  446148 <getDecryptedValueQWord>
  424f4b:	48 8b bd 90 fe ff ff 	mov    -0x170(%rbp),%rdi
  424f52:	48 83 c7 08          	add    $0x8,%rdi
  424f56:	48 89 85 b8 f9 ff ff 	mov    %rax,-0x648(%rbp)
  424f5d:	e8 e6 11 02 00       	callq  446148 <getDecryptedValueQWord>
  424f62:	48 c1 e0 03          	shl    $0x3,%rax
  424f66:	48 89 85 b0 f9 ff ff 	mov    %rax,-0x650(%rbp)
  424f6d:	e8 e4 09 02 00       	callq  445956 <writeback_cache>
  424f72:	48 8b bd b8 f9 ff ff 	mov    -0x648(%rbp),%rdi
  424f79:	48 8b b5 b0 f9 ff ff 	mov    -0x650(%rbp),%rsi
  424f80:	e8 60 17 02 00       	callq  4466e5 <decryptArrayForLibCall>
  424f85:	31 f6                	xor    %esi,%esi
  424f87:	48 8b bd b8 f9 ff ff 	mov    -0x648(%rbp),%rdi
  424f8e:	48 8b 95 b0 f9 ff ff 	mov    -0x650(%rbp),%rdx
  424f95:	e8 86 c0 fd ff       	callq  401020 <memset@plt>
  424f9a:	48 8b bd b8 f9 ff ff 	mov    -0x648(%rbp),%rdi
  424fa1:	48 8b b5 b0 f9 ff ff 	mov    -0x650(%rbp),%rsi
  424fa8:	e8 a9 14 02 00       	callq  446456 <encryptArrayForLibCall>
  424fad:	48 83 bd 88 fe ff ff 	cmpq   $0x0,-0x178(%rbp)
  424fb4:	00 
  424fb5:	7d 14                	jge    424fcb <mbedtls_mpi_inv_mod+0x75b>
  424fb7:	31 c0                	xor    %eax,%eax
  424fb9:	89 c1                	mov    %eax,%ecx
  424fbb:	48 2b 8d 88 fe ff ff 	sub    -0x178(%rbp),%rcx
  424fc2:	48 89 8d a8 f9 ff ff 	mov    %rcx,-0x658(%rbp)
  424fc9:	eb 0e                	jmp    424fd9 <mbedtls_mpi_inv_mod+0x769>
  424fcb:	48 8b 85 88 fe ff ff 	mov    -0x178(%rbp),%rax
  424fd2:	48 89 85 a8 f9 ff ff 	mov    %rax,-0x658(%rbp)
  424fd9:	48 8b 85 a8 f9 ff ff 	mov    -0x658(%rbp),%rax
  424fe0:	48 8b 8d 90 fe ff ff 	mov    -0x170(%rbp),%rcx
  424fe7:	48 83 c1 10          	add    $0x10,%rcx
  424feb:	48 89 cf             	mov    %rcx,%rdi
  424fee:	48 89 85 a0 f9 ff ff 	mov    %rax,-0x660(%rbp)
  424ff5:	e8 4e 11 02 00       	callq  446148 <getDecryptedValueQWord>
  424ffa:	48 89 c7             	mov    %rax,%rdi
  424ffd:	48 8b b5 a0 f9 ff ff 	mov    -0x660(%rbp),%rsi
  425004:	e8 f3 0c 02 00       	callq  445cfc <setEncryptedValueQWord>
  425009:	48 8b 8d 88 fe ff ff 	mov    -0x178(%rbp),%rcx
  425010:	48 83 f9 00          	cmp    $0x0,%rcx
  425014:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  425019:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  42501f:	44 0f 4c c2          	cmovl  %edx,%r8d
  425023:	48 8b 8d 90 fe ff ff 	mov    -0x170(%rbp),%rcx
  42502a:	48 89 cf             	mov    %rcx,%rdi
  42502d:	44 89 c6             	mov    %r8d,%esi
  425030:	48 89 85 98 f9 ff ff 	mov    %rax,-0x668(%rbp)
  425037:	e8 c2 0b 02 00       	callq  445bfe <setEncryptedValueDWord>
  42503c:	48 89 85 90 f9 ff ff 	mov    %rax,-0x670(%rbp)
  425043:	8b 85 84 fe ff ff    	mov    -0x17c(%rbp),%eax
  425049:	89 85 ac fc ff ff    	mov    %eax,-0x354(%rbp)
  42504f:	83 f8 00             	cmp    $0x0,%eax
  425052:	74 05                	je     425059 <mbedtls_mpi_inv_mod+0x7e9>
  425054:	e9 a1 0a 00 00       	jmpq   425afa <mbedtls_mpi_inv_mod+0x128a>
  425059:	eb 00                	jmp    42505b <mbedtls_mpi_inv_mod+0x7eb>
  42505b:	eb 00                	jmp    42505d <mbedtls_mpi_inv_mod+0x7ed>
  42505d:	b8 01 00 00 00       	mov    $0x1,%eax
  425062:	89 c6                	mov    %eax,%esi
  425064:	48 8d 8d c0 fb ff ff 	lea    -0x440(%rbp),%rcx
  42506b:	48 89 8d a8 fe ff ff 	mov    %rcx,-0x158(%rbp)
  425072:	48 c7 85 a0 fe ff ff 	movq   $0x0,-0x160(%rbp)
  425079:	00 00 00 00 
  42507d:	48 8b bd a8 fe ff ff 	mov    -0x158(%rbp),%rdi
  425084:	e8 b7 5a ff ff       	callq  41ab40 <mbedtls_mpi_grow>
  425089:	89 85 9c fe ff ff    	mov    %eax,-0x164(%rbp)
  42508f:	83 f8 00             	cmp    $0x0,%eax
  425092:	74 05                	je     425099 <mbedtls_mpi_inv_mod+0x829>
  425094:	e9 0b 01 00 00       	jmpq   4251a4 <mbedtls_mpi_inv_mod+0x934>
  425099:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
  4250a0:	48 83 c0 10          	add    $0x10,%rax
  4250a4:	48 89 c7             	mov    %rax,%rdi
  4250a7:	e8 9c 10 02 00       	callq  446148 <getDecryptedValueQWord>
  4250ac:	48 8b bd a8 fe ff ff 	mov    -0x158(%rbp),%rdi
  4250b3:	48 83 c7 08          	add    $0x8,%rdi
  4250b7:	48 89 85 88 f9 ff ff 	mov    %rax,-0x678(%rbp)
  4250be:	e8 85 10 02 00       	callq  446148 <getDecryptedValueQWord>
  4250c3:	48 c1 e0 03          	shl    $0x3,%rax
  4250c7:	48 89 85 80 f9 ff ff 	mov    %rax,-0x680(%rbp)
  4250ce:	e8 83 08 02 00       	callq  445956 <writeback_cache>
  4250d3:	48 8b bd 88 f9 ff ff 	mov    -0x678(%rbp),%rdi
  4250da:	48 8b b5 80 f9 ff ff 	mov    -0x680(%rbp),%rsi
  4250e1:	e8 ff 15 02 00       	callq  4466e5 <decryptArrayForLibCall>
  4250e6:	31 f6                	xor    %esi,%esi
  4250e8:	48 8b bd 88 f9 ff ff 	mov    -0x678(%rbp),%rdi
  4250ef:	48 8b 95 80 f9 ff ff 	mov    -0x680(%rbp),%rdx
  4250f6:	e8 25 bf fd ff       	callq  401020 <memset@plt>
  4250fb:	48 8b bd 88 f9 ff ff 	mov    -0x678(%rbp),%rdi
  425102:	48 8b b5 80 f9 ff ff 	mov    -0x680(%rbp),%rsi
  425109:	e8 48 13 02 00       	callq  446456 <encryptArrayForLibCall>
  42510e:	48 83 bd a0 fe ff ff 	cmpq   $0x0,-0x160(%rbp)
  425115:	00 
  425116:	7d 14                	jge    42512c <mbedtls_mpi_inv_mod+0x8bc>
  425118:	31 c0                	xor    %eax,%eax
  42511a:	89 c1                	mov    %eax,%ecx
  42511c:	48 2b 8d a0 fe ff ff 	sub    -0x160(%rbp),%rcx
  425123:	48 89 8d 78 f9 ff ff 	mov    %rcx,-0x688(%rbp)
  42512a:	eb 0e                	jmp    42513a <mbedtls_mpi_inv_mod+0x8ca>
  42512c:	48 8b 85 a0 fe ff ff 	mov    -0x160(%rbp),%rax
  425133:	48 89 85 78 f9 ff ff 	mov    %rax,-0x688(%rbp)
  42513a:	48 8b 85 78 f9 ff ff 	mov    -0x688(%rbp),%rax
  425141:	48 8b 8d a8 fe ff ff 	mov    -0x158(%rbp),%rcx
  425148:	48 83 c1 10          	add    $0x10,%rcx
  42514c:	48 89 cf             	mov    %rcx,%rdi
  42514f:	48 89 85 70 f9 ff ff 	mov    %rax,-0x690(%rbp)
  425156:	e8 ed 0f 02 00       	callq  446148 <getDecryptedValueQWord>
  42515b:	48 89 c7             	mov    %rax,%rdi
  42515e:	48 8b b5 70 f9 ff ff 	mov    -0x690(%rbp),%rsi
  425165:	e8 92 0b 02 00       	callq  445cfc <setEncryptedValueQWord>
  42516a:	48 8b 8d a0 fe ff ff 	mov    -0x160(%rbp),%rcx
  425171:	48 83 f9 00          	cmp    $0x0,%rcx
  425175:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  42517a:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  425180:	44 0f 4c c2          	cmovl  %edx,%r8d
  425184:	48 8b 8d a8 fe ff ff 	mov    -0x158(%rbp),%rcx
  42518b:	48 89 cf             	mov    %rcx,%rdi
  42518e:	44 89 c6             	mov    %r8d,%esi
  425191:	48 89 85 68 f9 ff ff 	mov    %rax,-0x698(%rbp)
  425198:	e8 61 0a 02 00       	callq  445bfe <setEncryptedValueDWord>
  42519d:	48 89 85 60 f9 ff ff 	mov    %rax,-0x6a0(%rbp)
  4251a4:	8b 85 9c fe ff ff    	mov    -0x164(%rbp),%eax
  4251aa:	89 85 ac fc ff ff    	mov    %eax,-0x354(%rbp)
  4251b0:	83 f8 00             	cmp    $0x0,%eax
  4251b3:	74 05                	je     4251ba <mbedtls_mpi_inv_mod+0x94a>
  4251b5:	e9 40 09 00 00       	jmpq   425afa <mbedtls_mpi_inv_mod+0x128a>
  4251ba:	eb 00                	jmp    4251bc <mbedtls_mpi_inv_mod+0x94c>
  4251bc:	eb 00                	jmp    4251be <mbedtls_mpi_inv_mod+0x94e>
  4251be:	b8 01 00 00 00       	mov    $0x1,%eax
  4251c3:	89 c6                	mov    %eax,%esi
  4251c5:	48 8d 8d 30 fb ff ff 	lea    -0x4d0(%rbp),%rcx
  4251cc:	48 89 8d c0 fe ff ff 	mov    %rcx,-0x140(%rbp)
  4251d3:	48 c7 85 b8 fe ff ff 	movq   $0x0,-0x148(%rbp)
  4251da:	00 00 00 00 
  4251de:	48 8b bd c0 fe ff ff 	mov    -0x140(%rbp),%rdi
  4251e5:	e8 56 59 ff ff       	callq  41ab40 <mbedtls_mpi_grow>
  4251ea:	89 85 b4 fe ff ff    	mov    %eax,-0x14c(%rbp)
  4251f0:	83 f8 00             	cmp    $0x0,%eax
  4251f3:	74 05                	je     4251fa <mbedtls_mpi_inv_mod+0x98a>
  4251f5:	e9 0b 01 00 00       	jmpq   425305 <mbedtls_mpi_inv_mod+0xa95>
  4251fa:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  425201:	48 83 c0 10          	add    $0x10,%rax
  425205:	48 89 c7             	mov    %rax,%rdi
  425208:	e8 3b 0f 02 00       	callq  446148 <getDecryptedValueQWord>
  42520d:	48 8b bd c0 fe ff ff 	mov    -0x140(%rbp),%rdi
  425214:	48 83 c7 08          	add    $0x8,%rdi
  425218:	48 89 85 58 f9 ff ff 	mov    %rax,-0x6a8(%rbp)
  42521f:	e8 24 0f 02 00       	callq  446148 <getDecryptedValueQWord>
  425224:	48 c1 e0 03          	shl    $0x3,%rax
  425228:	48 89 85 50 f9 ff ff 	mov    %rax,-0x6b0(%rbp)
  42522f:	e8 22 07 02 00       	callq  445956 <writeback_cache>
  425234:	48 8b bd 58 f9 ff ff 	mov    -0x6a8(%rbp),%rdi
  42523b:	48 8b b5 50 f9 ff ff 	mov    -0x6b0(%rbp),%rsi
  425242:	e8 9e 14 02 00       	callq  4466e5 <decryptArrayForLibCall>
  425247:	31 f6                	xor    %esi,%esi
  425249:	48 8b bd 58 f9 ff ff 	mov    -0x6a8(%rbp),%rdi
  425250:	48 8b 95 50 f9 ff ff 	mov    -0x6b0(%rbp),%rdx
  425257:	e8 c4 bd fd ff       	callq  401020 <memset@plt>
  42525c:	48 8b bd 58 f9 ff ff 	mov    -0x6a8(%rbp),%rdi
  425263:	48 8b b5 50 f9 ff ff 	mov    -0x6b0(%rbp),%rsi
  42526a:	e8 e7 11 02 00       	callq  446456 <encryptArrayForLibCall>
  42526f:	48 83 bd b8 fe ff ff 	cmpq   $0x0,-0x148(%rbp)
  425276:	00 
  425277:	7d 14                	jge    42528d <mbedtls_mpi_inv_mod+0xa1d>
  425279:	31 c0                	xor    %eax,%eax
  42527b:	89 c1                	mov    %eax,%ecx
  42527d:	48 2b 8d b8 fe ff ff 	sub    -0x148(%rbp),%rcx
  425284:	48 89 8d 48 f9 ff ff 	mov    %rcx,-0x6b8(%rbp)
  42528b:	eb 0e                	jmp    42529b <mbedtls_mpi_inv_mod+0xa2b>
  42528d:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  425294:	48 89 85 48 f9 ff ff 	mov    %rax,-0x6b8(%rbp)
  42529b:	48 8b 85 48 f9 ff ff 	mov    -0x6b8(%rbp),%rax
  4252a2:	48 8b 8d c0 fe ff ff 	mov    -0x140(%rbp),%rcx
  4252a9:	48 83 c1 10          	add    $0x10,%rcx
  4252ad:	48 89 cf             	mov    %rcx,%rdi
  4252b0:	48 89 85 40 f9 ff ff 	mov    %rax,-0x6c0(%rbp)
  4252b7:	e8 8c 0e 02 00       	callq  446148 <getDecryptedValueQWord>
  4252bc:	48 89 c7             	mov    %rax,%rdi
  4252bf:	48 8b b5 40 f9 ff ff 	mov    -0x6c0(%rbp),%rsi
  4252c6:	e8 31 0a 02 00       	callq  445cfc <setEncryptedValueQWord>
  4252cb:	48 8b 8d b8 fe ff ff 	mov    -0x148(%rbp),%rcx
  4252d2:	48 83 f9 00          	cmp    $0x0,%rcx
  4252d6:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  4252db:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  4252e1:	44 0f 4c c2          	cmovl  %edx,%r8d
  4252e5:	48 8b 8d c0 fe ff ff 	mov    -0x140(%rbp),%rcx
  4252ec:	48 89 cf             	mov    %rcx,%rdi
  4252ef:	44 89 c6             	mov    %r8d,%esi
  4252f2:	48 89 85 38 f9 ff ff 	mov    %rax,-0x6c8(%rbp)
  4252f9:	e8 00 09 02 00       	callq  445bfe <setEncryptedValueDWord>
  4252fe:	48 89 85 30 f9 ff ff 	mov    %rax,-0x6d0(%rbp)
  425305:	8b 85 b4 fe ff ff    	mov    -0x14c(%rbp),%eax
  42530b:	89 85 ac fc ff ff    	mov    %eax,-0x354(%rbp)
  425311:	83 f8 00             	cmp    $0x0,%eax
  425314:	74 05                	je     42531b <mbedtls_mpi_inv_mod+0xaab>
  425316:	e9 df 07 00 00       	jmpq   425afa <mbedtls_mpi_inv_mod+0x128a>
  42531b:	eb 00                	jmp    42531d <mbedtls_mpi_inv_mod+0xaad>
  42531d:	eb 00                	jmp    42531f <mbedtls_mpi_inv_mod+0xaaf>
  42531f:	b8 01 00 00 00       	mov    $0x1,%eax
  425324:	89 c6                	mov    %eax,%esi
  425326:	48 8d 8d 00 fb ff ff 	lea    -0x500(%rbp),%rcx
  42532d:	48 89 8d d8 fe ff ff 	mov    %rcx,-0x128(%rbp)
  425334:	48 c7 85 d0 fe ff ff 	movq   $0x1,-0x130(%rbp)
  42533b:	01 00 00 00 
  42533f:	48 8b bd d8 fe ff ff 	mov    -0x128(%rbp),%rdi
  425346:	e8 f5 57 ff ff       	callq  41ab40 <mbedtls_mpi_grow>
  42534b:	89 85 cc fe ff ff    	mov    %eax,-0x134(%rbp)
  425351:	83 f8 00             	cmp    $0x0,%eax
  425354:	74 05                	je     42535b <mbedtls_mpi_inv_mod+0xaeb>
  425356:	e9 0b 01 00 00       	jmpq   425466 <mbedtls_mpi_inv_mod+0xbf6>
  42535b:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
  425362:	48 83 c0 10          	add    $0x10,%rax
  425366:	48 89 c7             	mov    %rax,%rdi
  425369:	e8 da 0d 02 00       	callq  446148 <getDecryptedValueQWord>
  42536e:	48 8b bd d8 fe ff ff 	mov    -0x128(%rbp),%rdi
  425375:	48 83 c7 08          	add    $0x8,%rdi
  425379:	48 89 85 28 f9 ff ff 	mov    %rax,-0x6d8(%rbp)
  425380:	e8 c3 0d 02 00       	callq  446148 <getDecryptedValueQWord>
  425385:	48 c1 e0 03          	shl    $0x3,%rax
  425389:	48 89 85 20 f9 ff ff 	mov    %rax,-0x6e0(%rbp)
  425390:	e8 c1 05 02 00       	callq  445956 <writeback_cache>
  425395:	48 8b bd 28 f9 ff ff 	mov    -0x6d8(%rbp),%rdi
  42539c:	48 8b b5 20 f9 ff ff 	mov    -0x6e0(%rbp),%rsi
  4253a3:	e8 3d 13 02 00       	callq  4466e5 <decryptArrayForLibCall>
  4253a8:	31 f6                	xor    %esi,%esi
  4253aa:	48 8b bd 28 f9 ff ff 	mov    -0x6d8(%rbp),%rdi
  4253b1:	48 8b 95 20 f9 ff ff 	mov    -0x6e0(%rbp),%rdx
  4253b8:	e8 63 bc fd ff       	callq  401020 <memset@plt>
  4253bd:	48 8b bd 28 f9 ff ff 	mov    -0x6d8(%rbp),%rdi
  4253c4:	48 8b b5 20 f9 ff ff 	mov    -0x6e0(%rbp),%rsi
  4253cb:	e8 86 10 02 00       	callq  446456 <encryptArrayForLibCall>
  4253d0:	48 83 bd d0 fe ff ff 	cmpq   $0x0,-0x130(%rbp)
  4253d7:	00 
  4253d8:	7d 14                	jge    4253ee <mbedtls_mpi_inv_mod+0xb7e>
  4253da:	31 c0                	xor    %eax,%eax
  4253dc:	89 c1                	mov    %eax,%ecx
  4253de:	48 2b 8d d0 fe ff ff 	sub    -0x130(%rbp),%rcx
  4253e5:	48 89 8d 18 f9 ff ff 	mov    %rcx,-0x6e8(%rbp)
  4253ec:	eb 0e                	jmp    4253fc <mbedtls_mpi_inv_mod+0xb8c>
  4253ee:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
  4253f5:	48 89 85 18 f9 ff ff 	mov    %rax,-0x6e8(%rbp)
  4253fc:	48 8b 85 18 f9 ff ff 	mov    -0x6e8(%rbp),%rax
  425403:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
  42540a:	48 83 c1 10          	add    $0x10,%rcx
  42540e:	48 89 cf             	mov    %rcx,%rdi
  425411:	48 89 85 10 f9 ff ff 	mov    %rax,-0x6f0(%rbp)
  425418:	e8 2b 0d 02 00       	callq  446148 <getDecryptedValueQWord>
  42541d:	48 89 c7             	mov    %rax,%rdi
  425420:	48 8b b5 10 f9 ff ff 	mov    -0x6f0(%rbp),%rsi
  425427:	e8 d0 08 02 00       	callq  445cfc <setEncryptedValueQWord>
  42542c:	48 8b 8d d0 fe ff ff 	mov    -0x130(%rbp),%rcx
  425433:	48 83 f9 00          	cmp    $0x0,%rcx
  425437:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  42543c:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  425442:	44 0f 4c c2          	cmovl  %edx,%r8d
  425446:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
  42544d:	48 89 cf             	mov    %rcx,%rdi
  425450:	44 89 c6             	mov    %r8d,%esi
  425453:	48 89 85 08 f9 ff ff 	mov    %rax,-0x6f8(%rbp)
  42545a:	e8 9f 07 02 00       	callq  445bfe <setEncryptedValueDWord>
  42545f:	48 89 85 00 f9 ff ff 	mov    %rax,-0x700(%rbp)
  425466:	8b 85 cc fe ff ff    	mov    -0x134(%rbp),%eax
  42546c:	89 85 ac fc ff ff    	mov    %eax,-0x354(%rbp)
  425472:	83 f8 00             	cmp    $0x0,%eax
  425475:	74 05                	je     42547c <mbedtls_mpi_inv_mod+0xc0c>
  425477:	e9 7e 06 00 00       	jmpq   425afa <mbedtls_mpi_inv_mod+0x128a>
  42547c:	eb 00                	jmp    42547e <mbedtls_mpi_inv_mod+0xc0e>
  42547e:	eb 00                	jmp    425480 <mbedtls_mpi_inv_mod+0xc10>
  425480:	eb 00                	jmp    425482 <mbedtls_mpi_inv_mod+0xc12>
  425482:	48 8d 85 20 fc ff ff 	lea    -0x3e0(%rbp),%rax
  425489:	48 83 c0 10          	add    $0x10,%rax
  42548d:	48 89 c7             	mov    %rax,%rdi
  425490:	e8 b3 0c 02 00       	callq  446148 <getDecryptedValueQWord>
  425495:	48 89 c7             	mov    %rax,%rdi
  425498:	e8 ab 0c 02 00       	callq  446148 <getDecryptedValueQWord>
  42549d:	48 83 e0 01          	and    $0x1,%rax
  4254a1:	48 83 f8 00          	cmp    $0x0,%rax
  4254a5:	0f 85 20 01 00 00    	jne    4255cb <mbedtls_mpi_inv_mod+0xd5b>
  4254ab:	eb 00                	jmp    4254ad <mbedtls_mpi_inv_mod+0xc3d>
  4254ad:	b8 01 00 00 00       	mov    $0x1,%eax
  4254b2:	89 c6                	mov    %eax,%esi
  4254b4:	48 8d bd 20 fc ff ff 	lea    -0x3e0(%rbp),%rdi
  4254bb:	e8 10 bb ff ff       	callq  420fd0 <mbedtls_mpi_shift_r>
  4254c0:	89 85 ac fc ff ff    	mov    %eax,-0x354(%rbp)
  4254c6:	83 f8 00             	cmp    $0x0,%eax
  4254c9:	74 05                	je     4254d0 <mbedtls_mpi_inv_mod+0xc60>
  4254cb:	e9 2a 06 00 00       	jmpq   425afa <mbedtls_mpi_inv_mod+0x128a>
  4254d0:	eb 00                	jmp    4254d2 <mbedtls_mpi_inv_mod+0xc62>
  4254d2:	48 8d 85 f0 fb ff ff 	lea    -0x410(%rbp),%rax
  4254d9:	48 83 c0 10          	add    $0x10,%rax
  4254dd:	48 89 c7             	mov    %rax,%rdi
  4254e0:	e8 63 0c 02 00       	callq  446148 <getDecryptedValueQWord>
  4254e5:	48 89 c7             	mov    %rax,%rdi
  4254e8:	e8 5b 0c 02 00       	callq  446148 <getDecryptedValueQWord>
  4254ed:	48 83 e0 01          	and    $0x1,%rax
  4254f1:	48 83 f8 00          	cmp    $0x0,%rax
  4254f5:	75 25                	jne    42551c <mbedtls_mpi_inv_mod+0xcac>
  4254f7:	48 8d 85 c0 fb ff ff 	lea    -0x440(%rbp),%rax
  4254fe:	48 83 c0 10          	add    $0x10,%rax
  425502:	48 89 c7             	mov    %rax,%rdi
  425505:	e8 3e 0c 02 00       	callq  446148 <getDecryptedValueQWord>
  42550a:	48 89 c7             	mov    %rax,%rdi
  42550d:	e8 36 0c 02 00       	callq  446148 <getDecryptedValueQWord>
  425512:	48 83 e0 01          	and    $0x1,%rax
  425516:	48 83 f8 00          	cmp    $0x0,%rax
  42551a:	74 5c                	je     425578 <mbedtls_mpi_inv_mod+0xd08>
  42551c:	eb 00                	jmp    42551e <mbedtls_mpi_inv_mod+0xcae>
  42551e:	48 8d 85 f0 fb ff ff 	lea    -0x410(%rbp),%rax
  425525:	48 89 c7             	mov    %rax,%rdi
  425528:	48 89 c6             	mov    %rax,%rsi
  42552b:	48 8d 95 90 fb ff ff 	lea    -0x470(%rbp),%rdx
  425532:	e8 69 6f ff ff       	callq  41c4a0 <mbedtls_mpi_add_mpi>
  425537:	89 85 ac fc ff ff    	mov    %eax,-0x354(%rbp)
  42553d:	83 f8 00             	cmp    $0x0,%eax
  425540:	74 05                	je     425547 <mbedtls_mpi_inv_mod+0xcd7>
  425542:	e9 b3 05 00 00       	jmpq   425afa <mbedtls_mpi_inv_mod+0x128a>
  425547:	eb 00                	jmp    425549 <mbedtls_mpi_inv_mod+0xcd9>
  425549:	eb 00                	jmp    42554b <mbedtls_mpi_inv_mod+0xcdb>
  42554b:	48 8d 85 c0 fb ff ff 	lea    -0x440(%rbp),%rax
  425552:	48 89 c7             	mov    %rax,%rdi
  425555:	48 89 c6             	mov    %rax,%rsi
  425558:	48 8d 95 50 fc ff ff 	lea    -0x3b0(%rbp),%rdx
  42555f:	e8 cc 63 ff ff       	callq  41b930 <mbedtls_mpi_sub_mpi>
  425564:	89 85 ac fc ff ff    	mov    %eax,-0x354(%rbp)
  42556a:	83 f8 00             	cmp    $0x0,%eax
  42556d:	74 05                	je     425574 <mbedtls_mpi_inv_mod+0xd04>
  42556f:	e9 86 05 00 00       	jmpq   425afa <mbedtls_mpi_inv_mod+0x128a>
  425574:	eb 00                	jmp    425576 <mbedtls_mpi_inv_mod+0xd06>
  425576:	eb 00                	jmp    425578 <mbedtls_mpi_inv_mod+0xd08>
  425578:	eb 00                	jmp    42557a <mbedtls_mpi_inv_mod+0xd0a>
  42557a:	b8 01 00 00 00       	mov    $0x1,%eax
  42557f:	89 c6                	mov    %eax,%esi
  425581:	48 8d bd f0 fb ff ff 	lea    -0x410(%rbp),%rdi
  425588:	e8 43 ba ff ff       	callq  420fd0 <mbedtls_mpi_shift_r>
  42558d:	89 85 ac fc ff ff    	mov    %eax,-0x354(%rbp)
  425593:	83 f8 00             	cmp    $0x0,%eax
  425596:	74 05                	je     42559d <mbedtls_mpi_inv_mod+0xd2d>
  425598:	e9 5d 05 00 00       	jmpq   425afa <mbedtls_mpi_inv_mod+0x128a>
  42559d:	eb 00                	jmp    42559f <mbedtls_mpi_inv_mod+0xd2f>
  42559f:	eb 00                	jmp    4255a1 <mbedtls_mpi_inv_mod+0xd31>
  4255a1:	b8 01 00 00 00       	mov    $0x1,%eax
  4255a6:	89 c6                	mov    %eax,%esi
  4255a8:	48 8d bd c0 fb ff ff 	lea    -0x440(%rbp),%rdi
  4255af:	e8 1c ba ff ff       	callq  420fd0 <mbedtls_mpi_shift_r>
  4255b4:	89 85 ac fc ff ff    	mov    %eax,-0x354(%rbp)
  4255ba:	83 f8 00             	cmp    $0x0,%eax
  4255bd:	74 05                	je     4255c4 <mbedtls_mpi_inv_mod+0xd54>
  4255bf:	e9 36 05 00 00       	jmpq   425afa <mbedtls_mpi_inv_mod+0x128a>
  4255c4:	eb 00                	jmp    4255c6 <mbedtls_mpi_inv_mod+0xd56>
  4255c6:	e9 b7 fe ff ff       	jmpq   425482 <mbedtls_mpi_inv_mod+0xc12>
  4255cb:	eb 00                	jmp    4255cd <mbedtls_mpi_inv_mod+0xd5d>
  4255cd:	48 8d 85 60 fb ff ff 	lea    -0x4a0(%rbp),%rax
  4255d4:	48 83 c0 10          	add    $0x10,%rax
  4255d8:	48 89 c7             	mov    %rax,%rdi
  4255db:	e8 68 0b 02 00       	callq  446148 <getDecryptedValueQWord>
  4255e0:	48 89 c7             	mov    %rax,%rdi
  4255e3:	e8 60 0b 02 00       	callq  446148 <getDecryptedValueQWord>
  4255e8:	48 83 e0 01          	and    $0x1,%rax
  4255ec:	48 83 f8 00          	cmp    $0x0,%rax
  4255f0:	0f 85 20 01 00 00    	jne    425716 <mbedtls_mpi_inv_mod+0xea6>
  4255f6:	eb 00                	jmp    4255f8 <mbedtls_mpi_inv_mod+0xd88>
  4255f8:	b8 01 00 00 00       	mov    $0x1,%eax
  4255fd:	89 c6                	mov    %eax,%esi
  4255ff:	48 8d bd 60 fb ff ff 	lea    -0x4a0(%rbp),%rdi
  425606:	e8 c5 b9 ff ff       	callq  420fd0 <mbedtls_mpi_shift_r>
  42560b:	89 85 ac fc ff ff    	mov    %eax,-0x354(%rbp)
  425611:	83 f8 00             	cmp    $0x0,%eax
  425614:	74 05                	je     42561b <mbedtls_mpi_inv_mod+0xdab>
  425616:	e9 df 04 00 00       	jmpq   425afa <mbedtls_mpi_inv_mod+0x128a>
  42561b:	eb 00                	jmp    42561d <mbedtls_mpi_inv_mod+0xdad>
  42561d:	48 8d 85 30 fb ff ff 	lea    -0x4d0(%rbp),%rax
  425624:	48 83 c0 10          	add    $0x10,%rax
  425628:	48 89 c7             	mov    %rax,%rdi
  42562b:	e8 18 0b 02 00       	callq  446148 <getDecryptedValueQWord>
  425630:	48 89 c7             	mov    %rax,%rdi
  425633:	e8 10 0b 02 00       	callq  446148 <getDecryptedValueQWord>
  425638:	48 83 e0 01          	and    $0x1,%rax
  42563c:	48 83 f8 00          	cmp    $0x0,%rax
  425640:	75 25                	jne    425667 <mbedtls_mpi_inv_mod+0xdf7>
  425642:	48 8d 85 00 fb ff ff 	lea    -0x500(%rbp),%rax
  425649:	48 83 c0 10          	add    $0x10,%rax
  42564d:	48 89 c7             	mov    %rax,%rdi
  425650:	e8 f3 0a 02 00       	callq  446148 <getDecryptedValueQWord>
  425655:	48 89 c7             	mov    %rax,%rdi
  425658:	e8 eb 0a 02 00       	callq  446148 <getDecryptedValueQWord>
  42565d:	48 83 e0 01          	and    $0x1,%rax
  425661:	48 83 f8 00          	cmp    $0x0,%rax
  425665:	74 5c                	je     4256c3 <mbedtls_mpi_inv_mod+0xe53>
  425667:	eb 00                	jmp    425669 <mbedtls_mpi_inv_mod+0xdf9>
  425669:	48 8d 85 30 fb ff ff 	lea    -0x4d0(%rbp),%rax
  425670:	48 89 c7             	mov    %rax,%rdi
  425673:	48 89 c6             	mov    %rax,%rsi
  425676:	48 8d 95 90 fb ff ff 	lea    -0x470(%rbp),%rdx
  42567d:	e8 1e 6e ff ff       	callq  41c4a0 <mbedtls_mpi_add_mpi>
  425682:	89 85 ac fc ff ff    	mov    %eax,-0x354(%rbp)
  425688:	83 f8 00             	cmp    $0x0,%eax
  42568b:	74 05                	je     425692 <mbedtls_mpi_inv_mod+0xe22>
  42568d:	e9 68 04 00 00       	jmpq   425afa <mbedtls_mpi_inv_mod+0x128a>
  425692:	eb 00                	jmp    425694 <mbedtls_mpi_inv_mod+0xe24>
  425694:	eb 00                	jmp    425696 <mbedtls_mpi_inv_mod+0xe26>
  425696:	48 8d 85 00 fb ff ff 	lea    -0x500(%rbp),%rax
  42569d:	48 89 c7             	mov    %rax,%rdi
  4256a0:	48 89 c6             	mov    %rax,%rsi
  4256a3:	48 8d 95 50 fc ff ff 	lea    -0x3b0(%rbp),%rdx
  4256aa:	e8 81 62 ff ff       	callq  41b930 <mbedtls_mpi_sub_mpi>
  4256af:	89 85 ac fc ff ff    	mov    %eax,-0x354(%rbp)
  4256b5:	83 f8 00             	cmp    $0x0,%eax
  4256b8:	74 05                	je     4256bf <mbedtls_mpi_inv_mod+0xe4f>
  4256ba:	e9 3b 04 00 00       	jmpq   425afa <mbedtls_mpi_inv_mod+0x128a>
  4256bf:	eb 00                	jmp    4256c1 <mbedtls_mpi_inv_mod+0xe51>
  4256c1:	eb 00                	jmp    4256c3 <mbedtls_mpi_inv_mod+0xe53>
  4256c3:	eb 00                	jmp    4256c5 <mbedtls_mpi_inv_mod+0xe55>
  4256c5:	b8 01 00 00 00       	mov    $0x1,%eax
  4256ca:	89 c6                	mov    %eax,%esi
  4256cc:	48 8d bd 30 fb ff ff 	lea    -0x4d0(%rbp),%rdi
  4256d3:	e8 f8 b8 ff ff       	callq  420fd0 <mbedtls_mpi_shift_r>
  4256d8:	89 85 ac fc ff ff    	mov    %eax,-0x354(%rbp)
  4256de:	83 f8 00             	cmp    $0x0,%eax
  4256e1:	74 05                	je     4256e8 <mbedtls_mpi_inv_mod+0xe78>
  4256e3:	e9 12 04 00 00       	jmpq   425afa <mbedtls_mpi_inv_mod+0x128a>
  4256e8:	eb 00                	jmp    4256ea <mbedtls_mpi_inv_mod+0xe7a>
  4256ea:	eb 00                	jmp    4256ec <mbedtls_mpi_inv_mod+0xe7c>
  4256ec:	b8 01 00 00 00       	mov    $0x1,%eax
  4256f1:	89 c6                	mov    %eax,%esi
  4256f3:	48 8d bd 00 fb ff ff 	lea    -0x500(%rbp),%rdi
  4256fa:	e8 d1 b8 ff ff       	callq  420fd0 <mbedtls_mpi_shift_r>
  4256ff:	89 85 ac fc ff ff    	mov    %eax,-0x354(%rbp)
  425705:	83 f8 00             	cmp    $0x0,%eax
  425708:	74 05                	je     42570f <mbedtls_mpi_inv_mod+0xe9f>
  42570a:	e9 eb 03 00 00       	jmpq   425afa <mbedtls_mpi_inv_mod+0x128a>
  42570f:	eb 00                	jmp    425711 <mbedtls_mpi_inv_mod+0xea1>
  425711:	e9 b7 fe ff ff       	jmpq   4255cd <mbedtls_mpi_inv_mod+0xd5d>
  425716:	48 8d bd 20 fc ff ff 	lea    -0x3e0(%rbp),%rdi
  42571d:	48 8d b5 60 fb ff ff 	lea    -0x4a0(%rbp),%rsi
  425724:	e8 27 93 ff ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  425729:	83 f8 00             	cmp    $0x0,%eax
  42572c:	0f 8c 8c 00 00 00    	jl     4257be <mbedtls_mpi_inv_mod+0xf4e>
  425732:	eb 00                	jmp    425734 <mbedtls_mpi_inv_mod+0xec4>
  425734:	48 8d 85 20 fc ff ff 	lea    -0x3e0(%rbp),%rax
  42573b:	48 89 c7             	mov    %rax,%rdi
  42573e:	48 89 c6             	mov    %rax,%rsi
  425741:	48 8d 95 60 fb ff ff 	lea    -0x4a0(%rbp),%rdx
  425748:	e8 e3 61 ff ff       	callq  41b930 <mbedtls_mpi_sub_mpi>
  42574d:	89 85 ac fc ff ff    	mov    %eax,-0x354(%rbp)
  425753:	83 f8 00             	cmp    $0x0,%eax
  425756:	74 05                	je     42575d <mbedtls_mpi_inv_mod+0xeed>
  425758:	e9 9d 03 00 00       	jmpq   425afa <mbedtls_mpi_inv_mod+0x128a>
  42575d:	eb 00                	jmp    42575f <mbedtls_mpi_inv_mod+0xeef>
  42575f:	eb 00                	jmp    425761 <mbedtls_mpi_inv_mod+0xef1>
  425761:	48 8d 85 f0 fb ff ff 	lea    -0x410(%rbp),%rax
  425768:	48 89 c7             	mov    %rax,%rdi
  42576b:	48 89 c6             	mov    %rax,%rsi
  42576e:	48 8d 95 30 fb ff ff 	lea    -0x4d0(%rbp),%rdx
  425775:	e8 b6 61 ff ff       	callq  41b930 <mbedtls_mpi_sub_mpi>
  42577a:	89 85 ac fc ff ff    	mov    %eax,-0x354(%rbp)
  425780:	83 f8 00             	cmp    $0x0,%eax
  425783:	74 05                	je     42578a <mbedtls_mpi_inv_mod+0xf1a>
  425785:	e9 70 03 00 00       	jmpq   425afa <mbedtls_mpi_inv_mod+0x128a>
  42578a:	eb 00                	jmp    42578c <mbedtls_mpi_inv_mod+0xf1c>
  42578c:	eb 00                	jmp    42578e <mbedtls_mpi_inv_mod+0xf1e>
  42578e:	48 8d 85 c0 fb ff ff 	lea    -0x440(%rbp),%rax
  425795:	48 89 c7             	mov    %rax,%rdi
  425798:	48 89 c6             	mov    %rax,%rsi
  42579b:	48 8d 95 00 fb ff ff 	lea    -0x500(%rbp),%rdx
  4257a2:	e8 89 61 ff ff       	callq  41b930 <mbedtls_mpi_sub_mpi>
  4257a7:	89 85 ac fc ff ff    	mov    %eax,-0x354(%rbp)
  4257ad:	83 f8 00             	cmp    $0x0,%eax
  4257b0:	74 05                	je     4257b7 <mbedtls_mpi_inv_mod+0xf47>
  4257b2:	e9 43 03 00 00       	jmpq   425afa <mbedtls_mpi_inv_mod+0x128a>
  4257b7:	eb 00                	jmp    4257b9 <mbedtls_mpi_inv_mod+0xf49>
  4257b9:	e9 89 00 00 00       	jmpq   425847 <mbedtls_mpi_inv_mod+0xfd7>
  4257be:	eb 00                	jmp    4257c0 <mbedtls_mpi_inv_mod+0xf50>
  4257c0:	48 8d 85 60 fb ff ff 	lea    -0x4a0(%rbp),%rax
  4257c7:	48 89 c7             	mov    %rax,%rdi
  4257ca:	48 89 c6             	mov    %rax,%rsi
  4257cd:	48 8d 95 20 fc ff ff 	lea    -0x3e0(%rbp),%rdx
  4257d4:	e8 57 61 ff ff       	callq  41b930 <mbedtls_mpi_sub_mpi>
  4257d9:	89 85 ac fc ff ff    	mov    %eax,-0x354(%rbp)
  4257df:	83 f8 00             	cmp    $0x0,%eax
  4257e2:	74 05                	je     4257e9 <mbedtls_mpi_inv_mod+0xf79>
  4257e4:	e9 11 03 00 00       	jmpq   425afa <mbedtls_mpi_inv_mod+0x128a>
  4257e9:	eb 00                	jmp    4257eb <mbedtls_mpi_inv_mod+0xf7b>
  4257eb:	eb 00                	jmp    4257ed <mbedtls_mpi_inv_mod+0xf7d>
  4257ed:	48 8d 85 30 fb ff ff 	lea    -0x4d0(%rbp),%rax
  4257f4:	48 89 c7             	mov    %rax,%rdi
  4257f7:	48 89 c6             	mov    %rax,%rsi
  4257fa:	48 8d 95 f0 fb ff ff 	lea    -0x410(%rbp),%rdx
  425801:	e8 2a 61 ff ff       	callq  41b930 <mbedtls_mpi_sub_mpi>
  425806:	89 85 ac fc ff ff    	mov    %eax,-0x354(%rbp)
  42580c:	83 f8 00             	cmp    $0x0,%eax
  42580f:	74 05                	je     425816 <mbedtls_mpi_inv_mod+0xfa6>
  425811:	e9 e4 02 00 00       	jmpq   425afa <mbedtls_mpi_inv_mod+0x128a>
  425816:	eb 00                	jmp    425818 <mbedtls_mpi_inv_mod+0xfa8>
  425818:	eb 00                	jmp    42581a <mbedtls_mpi_inv_mod+0xfaa>
  42581a:	48 8d 85 00 fb ff ff 	lea    -0x500(%rbp),%rax
  425821:	48 89 c7             	mov    %rax,%rdi
  425824:	48 89 c6             	mov    %rax,%rsi
  425827:	48 8d 95 c0 fb ff ff 	lea    -0x440(%rbp),%rdx
  42582e:	e8 fd 60 ff ff       	callq  41b930 <mbedtls_mpi_sub_mpi>
  425833:	89 85 ac fc ff ff    	mov    %eax,-0x354(%rbp)
  425839:	83 f8 00             	cmp    $0x0,%eax
  42583c:	74 05                	je     425843 <mbedtls_mpi_inv_mod+0xfd3>
  42583e:	e9 b7 02 00 00       	jmpq   425afa <mbedtls_mpi_inv_mod+0x128a>
  425843:	eb 00                	jmp    425845 <mbedtls_mpi_inv_mod+0xfd5>
  425845:	eb 00                	jmp    425847 <mbedtls_mpi_inv_mod+0xfd7>
  425847:	eb 00                	jmp    425849 <mbedtls_mpi_inv_mod+0xfd9>
  425849:	e8 08 01 02 00       	callq  445956 <writeback_cache>
  42584e:	48 8d 85 20 fc ff ff 	lea    -0x3e0(%rbp),%rax
  425855:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
  42585c:	48 c7 85 10 ff ff ff 	movq   $0x0,-0xf0(%rbp)
  425863:	00 00 00 00 
  425867:	48 83 bd 10 ff ff ff 	cmpq   $0x0,-0xf0(%rbp)
  42586e:	00 
  42586f:	7d 14                	jge    425885 <mbedtls_mpi_inv_mod+0x1015>
  425871:	31 c0                	xor    %eax,%eax
  425873:	89 c1                	mov    %eax,%ecx
  425875:	48 2b 8d 10 ff ff ff 	sub    -0xf0(%rbp),%rcx
  42587c:	48 89 8d f8 f8 ff ff 	mov    %rcx,-0x708(%rbp)
  425883:	eb 0e                	jmp    425893 <mbedtls_mpi_inv_mod+0x1023>
  425885:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
  42588c:	48 89 85 f8 f8 ff ff 	mov    %rax,-0x708(%rbp)
  425893:	48 8b 85 f8 f8 ff ff 	mov    -0x708(%rbp),%rax
  42589a:	48 8d 8d d0 fc ff ff 	lea    -0x330(%rbp),%rcx
  4258a1:	48 89 cf             	mov    %rcx,%rdi
  4258a4:	48 89 c6             	mov    %rax,%rsi
  4258a7:	e8 50 04 02 00       	callq  445cfc <setEncryptedValueQWord>
  4258ac:	48 8d 8d e0 fe ff ff 	lea    -0x120(%rbp),%rcx
  4258b3:	48 8b b5 10 ff ff ff 	mov    -0xf0(%rbp),%rsi
  4258ba:	48 83 fe 00          	cmp    $0x0,%rsi
  4258be:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  4258c3:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  4258c9:	44 0f 4c c2          	cmovl  %edx,%r8d
  4258cd:	48 89 cf             	mov    %rcx,%rdi
  4258d0:	44 89 c6             	mov    %r8d,%esi
  4258d3:	48 89 85 f0 f8 ff ff 	mov    %rax,-0x710(%rbp)
  4258da:	e8 1f 03 02 00       	callq  445bfe <setEncryptedValueDWord>
  4258df:	ba 01 00 00 00       	mov    $0x1,%edx
  4258e4:	89 d6                	mov    %edx,%esi
  4258e6:	48 8d 8d e0 fe ff ff 	lea    -0x120(%rbp),%rcx
  4258ed:	48 83 c1 08          	add    $0x8,%rcx
  4258f1:	48 89 cf             	mov    %rcx,%rdi
  4258f4:	48 89 85 e8 f8 ff ff 	mov    %rax,-0x718(%rbp)
  4258fb:	e8 fc 03 02 00       	callq  445cfc <setEncryptedValueQWord>
  425900:	48 8d b5 d0 fc ff ff 	lea    -0x330(%rbp),%rsi
  425907:	48 8d 8d e0 fe ff ff 	lea    -0x120(%rbp),%rcx
  42590e:	48 83 c1 10          	add    $0x10,%rcx
  425912:	48 89 cf             	mov    %rcx,%rdi
  425915:	48 89 85 e0 f8 ff ff 	mov    %rax,-0x720(%rbp)
  42591c:	e8 db 03 02 00       	callq  445cfc <setEncryptedValueQWord>
  425921:	48 8b bd 18 ff ff ff 	mov    -0xe8(%rbp),%rdi
  425928:	48 8d b5 e0 fe ff ff 	lea    -0x120(%rbp),%rsi
  42592f:	48 89 85 d8 f8 ff ff 	mov    %rax,-0x728(%rbp)
  425936:	e8 15 91 ff ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  42593b:	89 85 d4 f8 ff ff    	mov    %eax,-0x72c(%rbp)
  425941:	e8 10 00 02 00       	callq  445956 <writeback_cache>
  425946:	8b 85 d4 f8 ff ff    	mov    -0x72c(%rbp),%eax
  42594c:	83 f8 00             	cmp    $0x0,%eax
  42594f:	0f 85 2b fb ff ff    	jne    425480 <mbedtls_mpi_inv_mod+0xc10>
  425955:	eb 00                	jmp    425957 <mbedtls_mpi_inv_mod+0x10e7>
  425957:	e8 fa ff 01 00       	callq  445956 <writeback_cache>
  42595c:	48 8d 85 30 fb ff ff 	lea    -0x4d0(%rbp),%rax
  425963:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
  42596a:	48 c7 85 50 ff ff ff 	movq   $0x0,-0xb0(%rbp)
  425971:	00 00 00 00 
  425975:	48 83 bd 50 ff ff ff 	cmpq   $0x0,-0xb0(%rbp)
  42597c:	00 
  42597d:	7d 14                	jge    425993 <mbedtls_mpi_inv_mod+0x1123>
  42597f:	31 c0                	xor    %eax,%eax
  425981:	89 c1                	mov    %eax,%ecx
  425983:	48 2b 8d 50 ff ff ff 	sub    -0xb0(%rbp),%rcx
  42598a:	48 89 8d c8 f8 ff ff 	mov    %rcx,-0x738(%rbp)
  425991:	eb 0e                	jmp    4259a1 <mbedtls_mpi_inv_mod+0x1131>
  425993:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
  42599a:	48 89 85 c8 f8 ff ff 	mov    %rax,-0x738(%rbp)
  4259a1:	48 8b 85 c8 f8 ff ff 	mov    -0x738(%rbp),%rax
  4259a8:	48 8d 8d d0 fc ff ff 	lea    -0x330(%rbp),%rcx
  4259af:	48 89 cf             	mov    %rcx,%rdi
  4259b2:	48 89 c6             	mov    %rax,%rsi
  4259b5:	e8 42 03 02 00       	callq  445cfc <setEncryptedValueQWord>
  4259ba:	48 8d 8d 20 ff ff ff 	lea    -0xe0(%rbp),%rcx
  4259c1:	48 8b b5 50 ff ff ff 	mov    -0xb0(%rbp),%rsi
  4259c8:	48 83 fe 00          	cmp    $0x0,%rsi
  4259cc:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  4259d1:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  4259d7:	44 0f 4c c2          	cmovl  %edx,%r8d
  4259db:	48 89 cf             	mov    %rcx,%rdi
  4259de:	44 89 c6             	mov    %r8d,%esi
  4259e1:	48 89 85 c0 f8 ff ff 	mov    %rax,-0x740(%rbp)
  4259e8:	e8 11 02 02 00       	callq  445bfe <setEncryptedValueDWord>
  4259ed:	ba 01 00 00 00       	mov    $0x1,%edx
  4259f2:	89 d6                	mov    %edx,%esi
  4259f4:	48 8d 8d 20 ff ff ff 	lea    -0xe0(%rbp),%rcx
  4259fb:	48 83 c1 08          	add    $0x8,%rcx
  4259ff:	48 89 cf             	mov    %rcx,%rdi
  425a02:	48 89 85 b8 f8 ff ff 	mov    %rax,-0x748(%rbp)
  425a09:	e8 ee 02 02 00       	callq  445cfc <setEncryptedValueQWord>
  425a0e:	48 8d b5 d0 fc ff ff 	lea    -0x330(%rbp),%rsi
  425a15:	48 8d 8d 20 ff ff ff 	lea    -0xe0(%rbp),%rcx
  425a1c:	48 83 c1 10          	add    $0x10,%rcx
  425a20:	48 89 cf             	mov    %rcx,%rdi
  425a23:	48 89 85 b0 f8 ff ff 	mov    %rax,-0x750(%rbp)
  425a2a:	e8 cd 02 02 00       	callq  445cfc <setEncryptedValueQWord>
  425a2f:	48 8b bd 58 ff ff ff 	mov    -0xa8(%rbp),%rdi
  425a36:	48 8d b5 20 ff ff ff 	lea    -0xe0(%rbp),%rsi
  425a3d:	48 89 85 a8 f8 ff ff 	mov    %rax,-0x758(%rbp)
  425a44:	e8 07 90 ff ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  425a49:	89 85 a4 f8 ff ff    	mov    %eax,-0x75c(%rbp)
  425a4f:	e8 02 ff 01 00       	callq  445956 <writeback_cache>
  425a54:	8b 85 a4 f8 ff ff    	mov    -0x75c(%rbp),%eax
  425a5a:	83 f8 00             	cmp    $0x0,%eax
  425a5d:	7d 2f                	jge    425a8e <mbedtls_mpi_inv_mod+0x121e>
  425a5f:	eb 00                	jmp    425a61 <mbedtls_mpi_inv_mod+0x11f1>
  425a61:	48 8b 95 b0 fc ff ff 	mov    -0x350(%rbp),%rdx
  425a68:	48 8d 85 30 fb ff ff 	lea    -0x4d0(%rbp),%rax
  425a6f:	48 89 c7             	mov    %rax,%rdi
  425a72:	48 89 c6             	mov    %rax,%rsi
  425a75:	e8 26 6a ff ff       	callq  41c4a0 <mbedtls_mpi_add_mpi>
  425a7a:	89 85 ac fc ff ff    	mov    %eax,-0x354(%rbp)
  425a80:	83 f8 00             	cmp    $0x0,%eax
  425a83:	74 02                	je     425a87 <mbedtls_mpi_inv_mod+0x1217>
  425a85:	eb 73                	jmp    425afa <mbedtls_mpi_inv_mod+0x128a>
  425a87:	eb 00                	jmp    425a89 <mbedtls_mpi_inv_mod+0x1219>
  425a89:	e9 c9 fe ff ff       	jmpq   425957 <mbedtls_mpi_inv_mod+0x10e7>
  425a8e:	eb 00                	jmp    425a90 <mbedtls_mpi_inv_mod+0x1220>
  425a90:	48 8b b5 b0 fc ff ff 	mov    -0x350(%rbp),%rsi
  425a97:	48 8d bd 30 fb ff ff 	lea    -0x4d0(%rbp),%rdi
  425a9e:	e8 ad 8f ff ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  425aa3:	83 f8 00             	cmp    $0x0,%eax
  425aa6:	7c 2c                	jl     425ad4 <mbedtls_mpi_inv_mod+0x1264>
  425aa8:	eb 00                	jmp    425aaa <mbedtls_mpi_inv_mod+0x123a>
  425aaa:	48 8b 95 b0 fc ff ff 	mov    -0x350(%rbp),%rdx
  425ab1:	48 8d 85 30 fb ff ff 	lea    -0x4d0(%rbp),%rax
  425ab8:	48 89 c7             	mov    %rax,%rdi
  425abb:	48 89 c6             	mov    %rax,%rsi
  425abe:	e8 6d 5e ff ff       	callq  41b930 <mbedtls_mpi_sub_mpi>
  425ac3:	89 85 ac fc ff ff    	mov    %eax,-0x354(%rbp)
  425ac9:	83 f8 00             	cmp    $0x0,%eax
  425acc:	74 02                	je     425ad0 <mbedtls_mpi_inv_mod+0x1260>
  425ace:	eb 2a                	jmp    425afa <mbedtls_mpi_inv_mod+0x128a>
  425ad0:	eb 00                	jmp    425ad2 <mbedtls_mpi_inv_mod+0x1262>
  425ad2:	eb bc                	jmp    425a90 <mbedtls_mpi_inv_mod+0x1220>
  425ad4:	eb 00                	jmp    425ad6 <mbedtls_mpi_inv_mod+0x1266>
  425ad6:	48 8b bd c0 fc ff ff 	mov    -0x340(%rbp),%rdi
  425add:	48 8d b5 30 fb ff ff 	lea    -0x4d0(%rbp),%rsi
  425ae4:	e8 b7 52 ff ff       	callq  41ada0 <mbedtls_mpi_copy>
  425ae9:	89 85 ac fc ff ff    	mov    %eax,-0x354(%rbp)
  425aef:	83 f8 00             	cmp    $0x0,%eax
  425af2:	74 02                	je     425af6 <mbedtls_mpi_inv_mod+0x1286>
  425af4:	eb 04                	jmp    425afa <mbedtls_mpi_inv_mod+0x128a>
  425af6:	eb 00                	jmp    425af8 <mbedtls_mpi_inv_mod+0x1288>
  425af8:	eb 00                	jmp    425afa <mbedtls_mpi_inv_mod+0x128a>
  425afa:	48 8d 85 50 fc ff ff 	lea    -0x3b0(%rbp),%rax
  425b01:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
  425b08:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
  425b0f:	00 
  425b10:	75 05                	jne    425b17 <mbedtls_mpi_inv_mod+0x12a7>
  425b12:	e9 66 01 00 00       	jmpq   425c7d <mbedtls_mpi_inv_mod+0x140d>
  425b17:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  425b1e:	48 83 c0 10          	add    $0x10,%rax
  425b22:	48 89 c7             	mov    %rax,%rdi
  425b25:	e8 1e 06 02 00       	callq  446148 <getDecryptedValueQWord>
  425b2a:	48 83 f8 00          	cmp    $0x0,%rax
  425b2e:	0f 84 fa 00 00 00    	je     425c2e <mbedtls_mpi_inv_mod+0x13be>
  425b34:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  425b3b:	48 83 c0 10          	add    $0x10,%rax
  425b3f:	48 89 c7             	mov    %rax,%rdi
  425b42:	e8 01 06 02 00       	callq  446148 <getDecryptedValueQWord>
  425b47:	48 8b bd 60 ff ff ff 	mov    -0xa0(%rbp),%rdi
  425b4e:	48 83 c7 08          	add    $0x8,%rdi
  425b52:	48 89 85 98 f8 ff ff 	mov    %rax,-0x768(%rbp)
  425b59:	e8 ea 05 02 00       	callq  446148 <getDecryptedValueQWord>
  425b5e:	48 8b bd 98 f8 ff ff 	mov    -0x768(%rbp),%rdi
  425b65:	48 89 bd 70 ff ff ff 	mov    %rdi,-0x90(%rbp)
  425b6c:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
  425b73:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  425b7a:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
  425b81:	48 c1 e1 03          	shl    $0x3,%rcx
  425b85:	48 89 45 80          	mov    %rax,-0x80(%rbp)
  425b89:	48 89 8d 78 ff ff ff 	mov    %rcx,-0x88(%rbp)
  425b90:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  425b97:	00 
  425b98:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
  425b9c:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
  425ba3:	48 89 85 90 f8 ff ff 	mov    %rax,-0x770(%rbp)
  425baa:	48 89 8d 88 f8 ff ff 	mov    %rcx,-0x778(%rbp)
  425bb1:	48 89 95 80 f8 ff ff 	mov    %rdx,-0x780(%rbp)
  425bb8:	e8 99 fd 01 00       	callq  445956 <writeback_cache>
  425bbd:	48 8b bd 88 f8 ff ff 	mov    -0x778(%rbp),%rdi
  425bc4:	48 8b b5 80 f8 ff ff 	mov    -0x780(%rbp),%rsi
  425bcb:	e8 15 0b 02 00       	callq  4466e5 <decryptArrayForLibCall>
  425bd0:	31 f6                	xor    %esi,%esi
  425bd2:	48 8b bd 88 f8 ff ff 	mov    -0x778(%rbp),%rdi
  425bd9:	48 8b 95 80 f8 ff ff 	mov    -0x780(%rbp),%rdx
  425be0:	48 8b 85 90 f8 ff ff 	mov    -0x770(%rbp),%rax
  425be7:	ff d0                	callq  *%rax
  425be9:	48 8b bd 88 f8 ff ff 	mov    -0x778(%rbp),%rdi
  425bf0:	48 8b b5 80 f8 ff ff 	mov    -0x780(%rbp),%rsi
  425bf7:	48 89 85 78 f8 ff ff 	mov    %rax,-0x788(%rbp)
  425bfe:	e8 53 08 02 00       	callq  446456 <encryptArrayForLibCall>
  425c03:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  425c0a:	48 83 c0 10          	add    $0x10,%rax
  425c0e:	48 89 c7             	mov    %rax,%rdi
  425c11:	e8 32 05 02 00       	callq  446148 <getDecryptedValueQWord>
  425c16:	48 89 85 70 f8 ff ff 	mov    %rax,-0x790(%rbp)
  425c1d:	e8 34 fd 01 00       	callq  445956 <writeback_cache>
  425c22:	48 8b bd 70 f8 ff ff 	mov    -0x790(%rbp),%rdi
  425c29:	e8 b2 b4 fd ff       	callq  4010e0 <free@plt>
  425c2e:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  425c35:	48 89 c7             	mov    %rax,%rdi
  425c38:	be 01 00 00 00       	mov    $0x1,%esi
  425c3d:	e8 bc ff 01 00       	callq  445bfe <setEncryptedValueDWord>
  425c42:	31 f6                	xor    %esi,%esi
  425c44:	48 8b bd 60 ff ff ff 	mov    -0xa0(%rbp),%rdi
  425c4b:	48 83 c7 08          	add    $0x8,%rdi
  425c4f:	48 89 85 68 f8 ff ff 	mov    %rax,-0x798(%rbp)
  425c56:	e8 a1 00 02 00       	callq  445cfc <setEncryptedValueQWord>
  425c5b:	31 c9                	xor    %ecx,%ecx
  425c5d:	89 ce                	mov    %ecx,%esi
  425c5f:	48 8b bd 60 ff ff ff 	mov    -0xa0(%rbp),%rdi
  425c66:	48 83 c7 10          	add    $0x10,%rdi
  425c6a:	48 89 85 60 f8 ff ff 	mov    %rax,-0x7a0(%rbp)
  425c71:	e8 86 00 02 00       	callq  445cfc <setEncryptedValueQWord>
  425c76:	48 89 85 58 f8 ff ff 	mov    %rax,-0x7a8(%rbp)
  425c7d:	48 8d 85 20 fc ff ff 	lea    -0x3e0(%rbp),%rax
  425c84:	48 89 45 88          	mov    %rax,-0x78(%rbp)
  425c88:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
  425c8d:	75 05                	jne    425c94 <mbedtls_mpi_inv_mod+0x1424>
  425c8f:	e9 3f 01 00 00       	jmpq   425dd3 <mbedtls_mpi_inv_mod+0x1563>
  425c94:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  425c98:	48 83 c0 10          	add    $0x10,%rax
  425c9c:	48 89 c7             	mov    %rax,%rdi
  425c9f:	e8 a4 04 02 00       	callq  446148 <getDecryptedValueQWord>
  425ca4:	48 83 f8 00          	cmp    $0x0,%rax
  425ca8:	0f 84 df 00 00 00    	je     425d8d <mbedtls_mpi_inv_mod+0x151d>
  425cae:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  425cb2:	48 83 c0 10          	add    $0x10,%rax
  425cb6:	48 89 c7             	mov    %rax,%rdi
  425cb9:	e8 8a 04 02 00       	callq  446148 <getDecryptedValueQWord>
  425cbe:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
  425cc2:	48 83 c7 08          	add    $0x8,%rdi
  425cc6:	48 89 85 50 f8 ff ff 	mov    %rax,-0x7b0(%rbp)
  425ccd:	e8 76 04 02 00       	callq  446148 <getDecryptedValueQWord>
  425cd2:	48 8b bd 50 f8 ff ff 	mov    -0x7b0(%rbp),%rdi
  425cd9:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
  425cdd:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  425ce1:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  425ce5:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  425ce9:	48 c1 e1 03          	shl    $0x3,%rcx
  425ced:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  425cf1:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
  425cf5:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  425cfc:	00 
  425cfd:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
  425d01:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
  425d05:	48 89 85 48 f8 ff ff 	mov    %rax,-0x7b8(%rbp)
  425d0c:	48 89 8d 40 f8 ff ff 	mov    %rcx,-0x7c0(%rbp)
  425d13:	48 89 95 38 f8 ff ff 	mov    %rdx,-0x7c8(%rbp)
  425d1a:	e8 37 fc 01 00       	callq  445956 <writeback_cache>
  425d1f:	48 8b bd 40 f8 ff ff 	mov    -0x7c0(%rbp),%rdi
  425d26:	48 8b b5 38 f8 ff ff 	mov    -0x7c8(%rbp),%rsi
  425d2d:	e8 b3 09 02 00       	callq  4466e5 <decryptArrayForLibCall>
  425d32:	31 f6                	xor    %esi,%esi
  425d34:	48 8b bd 40 f8 ff ff 	mov    -0x7c0(%rbp),%rdi
  425d3b:	48 8b 95 38 f8 ff ff 	mov    -0x7c8(%rbp),%rdx
  425d42:	48 8b 85 48 f8 ff ff 	mov    -0x7b8(%rbp),%rax
  425d49:	ff d0                	callq  *%rax
  425d4b:	48 8b bd 40 f8 ff ff 	mov    -0x7c0(%rbp),%rdi
  425d52:	48 8b b5 38 f8 ff ff 	mov    -0x7c8(%rbp),%rsi
  425d59:	48 89 85 30 f8 ff ff 	mov    %rax,-0x7d0(%rbp)
  425d60:	e8 f1 06 02 00       	callq  446456 <encryptArrayForLibCall>
  425d65:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  425d69:	48 83 c0 10          	add    $0x10,%rax
  425d6d:	48 89 c7             	mov    %rax,%rdi
  425d70:	e8 d3 03 02 00       	callq  446148 <getDecryptedValueQWord>
  425d75:	48 89 85 28 f8 ff ff 	mov    %rax,-0x7d8(%rbp)
  425d7c:	e8 d5 fb 01 00       	callq  445956 <writeback_cache>
  425d81:	48 8b bd 28 f8 ff ff 	mov    -0x7d8(%rbp),%rdi
  425d88:	e8 53 b3 fd ff       	callq  4010e0 <free@plt>
  425d8d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  425d91:	48 89 c7             	mov    %rax,%rdi
  425d94:	be 01 00 00 00       	mov    $0x1,%esi
  425d99:	e8 60 fe 01 00       	callq  445bfe <setEncryptedValueDWord>
  425d9e:	31 f6                	xor    %esi,%esi
  425da0:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
  425da4:	48 83 c7 08          	add    $0x8,%rdi
  425da8:	48 89 85 20 f8 ff ff 	mov    %rax,-0x7e0(%rbp)
  425daf:	e8 48 ff 01 00       	callq  445cfc <setEncryptedValueQWord>
  425db4:	31 c9                	xor    %ecx,%ecx
  425db6:	89 ce                	mov    %ecx,%esi
  425db8:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
  425dbc:	48 83 c7 10          	add    $0x10,%rdi
  425dc0:	48 89 85 18 f8 ff ff 	mov    %rax,-0x7e8(%rbp)
  425dc7:	e8 30 ff 01 00       	callq  445cfc <setEncryptedValueQWord>
  425dcc:	48 89 85 10 f8 ff ff 	mov    %rax,-0x7f0(%rbp)
  425dd3:	48 8d 85 f0 fb ff ff 	lea    -0x410(%rbp),%rax
  425dda:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  425dde:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
  425de3:	75 05                	jne    425dea <mbedtls_mpi_inv_mod+0x157a>
  425de5:	e9 3f 01 00 00       	jmpq   425f29 <mbedtls_mpi_inv_mod+0x16b9>
  425dea:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  425dee:	48 83 c0 10          	add    $0x10,%rax
  425df2:	48 89 c7             	mov    %rax,%rdi
  425df5:	e8 4e 03 02 00       	callq  446148 <getDecryptedValueQWord>
  425dfa:	48 83 f8 00          	cmp    $0x0,%rax
  425dfe:	0f 84 df 00 00 00    	je     425ee3 <mbedtls_mpi_inv_mod+0x1673>
  425e04:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  425e08:	48 83 c0 10          	add    $0x10,%rax
  425e0c:	48 89 c7             	mov    %rax,%rdi
  425e0f:	e8 34 03 02 00       	callq  446148 <getDecryptedValueQWord>
  425e14:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
  425e18:	48 83 c7 08          	add    $0x8,%rdi
  425e1c:	48 89 85 08 f8 ff ff 	mov    %rax,-0x7f8(%rbp)
  425e23:	e8 20 03 02 00       	callq  446148 <getDecryptedValueQWord>
  425e28:	48 8b bd 08 f8 ff ff 	mov    -0x7f8(%rbp),%rdi
  425e2f:	48 89 7d c0          	mov    %rdi,-0x40(%rbp)
  425e33:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  425e37:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  425e3b:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  425e3f:	48 c1 e1 03          	shl    $0x3,%rcx
  425e43:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  425e47:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
  425e4b:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  425e52:	00 
  425e53:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  425e57:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  425e5b:	48 89 85 00 f8 ff ff 	mov    %rax,-0x800(%rbp)
  425e62:	48 89 8d f8 f7 ff ff 	mov    %rcx,-0x808(%rbp)
  425e69:	48 89 95 f0 f7 ff ff 	mov    %rdx,-0x810(%rbp)
  425e70:	e8 e1 fa 01 00       	callq  445956 <writeback_cache>
  425e75:	48 8b bd f8 f7 ff ff 	mov    -0x808(%rbp),%rdi
  425e7c:	48 8b b5 f0 f7 ff ff 	mov    -0x810(%rbp),%rsi
  425e83:	e8 5d 08 02 00       	callq  4466e5 <decryptArrayForLibCall>
  425e88:	31 f6                	xor    %esi,%esi
  425e8a:	48 8b bd f8 f7 ff ff 	mov    -0x808(%rbp),%rdi
  425e91:	48 8b 95 f0 f7 ff ff 	mov    -0x810(%rbp),%rdx
  425e98:	48 8b 85 00 f8 ff ff 	mov    -0x800(%rbp),%rax
  425e9f:	ff d0                	callq  *%rax
  425ea1:	48 8b bd f8 f7 ff ff 	mov    -0x808(%rbp),%rdi
  425ea8:	48 8b b5 f0 f7 ff ff 	mov    -0x810(%rbp),%rsi
  425eaf:	48 89 85 e8 f7 ff ff 	mov    %rax,-0x818(%rbp)
  425eb6:	e8 9b 05 02 00       	callq  446456 <encryptArrayForLibCall>
  425ebb:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  425ebf:	48 83 c0 10          	add    $0x10,%rax
  425ec3:	48 89 c7             	mov    %rax,%rdi
  425ec6:	e8 7d 02 02 00       	callq  446148 <getDecryptedValueQWord>
  425ecb:	48 89 85 e0 f7 ff ff 	mov    %rax,-0x820(%rbp)
  425ed2:	e8 7f fa 01 00       	callq  445956 <writeback_cache>
  425ed7:	48 8b bd e0 f7 ff ff 	mov    -0x820(%rbp),%rdi
  425ede:	e8 fd b1 fd ff       	callq  4010e0 <free@plt>
  425ee3:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  425ee7:	48 89 c7             	mov    %rax,%rdi
  425eea:	be 01 00 00 00       	mov    $0x1,%esi
  425eef:	e8 0a fd 01 00       	callq  445bfe <setEncryptedValueDWord>
  425ef4:	31 f6                	xor    %esi,%esi
  425ef6:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
  425efa:	48 83 c7 08          	add    $0x8,%rdi
  425efe:	48 89 85 d8 f7 ff ff 	mov    %rax,-0x828(%rbp)
  425f05:	e8 f2 fd 01 00       	callq  445cfc <setEncryptedValueQWord>
  425f0a:	31 c9                	xor    %ecx,%ecx
  425f0c:	89 ce                	mov    %ecx,%esi
  425f0e:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
  425f12:	48 83 c7 10          	add    $0x10,%rdi
  425f16:	48 89 85 d0 f7 ff ff 	mov    %rax,-0x830(%rbp)
  425f1d:	e8 da fd 01 00       	callq  445cfc <setEncryptedValueQWord>
  425f22:	48 89 85 c8 f7 ff ff 	mov    %rax,-0x838(%rbp)
  425f29:	48 8d 85 c0 fb ff ff 	lea    -0x440(%rbp),%rax
  425f30:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  425f34:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  425f39:	75 05                	jne    425f40 <mbedtls_mpi_inv_mod+0x16d0>
  425f3b:	e9 3f 01 00 00       	jmpq   42607f <mbedtls_mpi_inv_mod+0x180f>
  425f40:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  425f44:	48 83 c0 10          	add    $0x10,%rax
  425f48:	48 89 c7             	mov    %rax,%rdi
  425f4b:	e8 f8 01 02 00       	callq  446148 <getDecryptedValueQWord>
  425f50:	48 83 f8 00          	cmp    $0x0,%rax
  425f54:	0f 84 df 00 00 00    	je     426039 <mbedtls_mpi_inv_mod+0x17c9>
  425f5a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  425f5e:	48 83 c0 10          	add    $0x10,%rax
  425f62:	48 89 c7             	mov    %rax,%rdi
  425f65:	e8 de 01 02 00       	callq  446148 <getDecryptedValueQWord>
  425f6a:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  425f6e:	48 83 c7 08          	add    $0x8,%rdi
  425f72:	48 89 85 c0 f7 ff ff 	mov    %rax,-0x840(%rbp)
  425f79:	e8 ca 01 02 00       	callq  446148 <getDecryptedValueQWord>
  425f7e:	48 8b bd c0 f7 ff ff 	mov    -0x840(%rbp),%rdi
  425f85:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  425f89:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  425f8d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  425f91:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  425f95:	48 c1 e1 03          	shl    $0x3,%rcx
  425f99:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  425f9d:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
  425fa1:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  425fa8:	00 
  425fa9:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  425fad:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  425fb1:	48 89 85 b8 f7 ff ff 	mov    %rax,-0x848(%rbp)
  425fb8:	48 89 8d b0 f7 ff ff 	mov    %rcx,-0x850(%rbp)
  425fbf:	48 89 95 a8 f7 ff ff 	mov    %rdx,-0x858(%rbp)
  425fc6:	e8 8b f9 01 00       	callq  445956 <writeback_cache>
  425fcb:	48 8b bd b0 f7 ff ff 	mov    -0x850(%rbp),%rdi
  425fd2:	48 8b b5 a8 f7 ff ff 	mov    -0x858(%rbp),%rsi
  425fd9:	e8 07 07 02 00       	callq  4466e5 <decryptArrayForLibCall>
  425fde:	31 f6                	xor    %esi,%esi
  425fe0:	48 8b bd b0 f7 ff ff 	mov    -0x850(%rbp),%rdi
  425fe7:	48 8b 95 a8 f7 ff ff 	mov    -0x858(%rbp),%rdx
  425fee:	48 8b 85 b8 f7 ff ff 	mov    -0x848(%rbp),%rax
  425ff5:	ff d0                	callq  *%rax
  425ff7:	48 8b bd b0 f7 ff ff 	mov    -0x850(%rbp),%rdi
  425ffe:	48 8b b5 a8 f7 ff ff 	mov    -0x858(%rbp),%rsi
  426005:	48 89 85 a0 f7 ff ff 	mov    %rax,-0x860(%rbp)
  42600c:	e8 45 04 02 00       	callq  446456 <encryptArrayForLibCall>
  426011:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  426015:	48 83 c0 10          	add    $0x10,%rax
  426019:	48 89 c7             	mov    %rax,%rdi
  42601c:	e8 27 01 02 00       	callq  446148 <getDecryptedValueQWord>
  426021:	48 89 85 98 f7 ff ff 	mov    %rax,-0x868(%rbp)
  426028:	e8 29 f9 01 00       	callq  445956 <writeback_cache>
  42602d:	48 8b bd 98 f7 ff ff 	mov    -0x868(%rbp),%rdi
  426034:	e8 a7 b0 fd ff       	callq  4010e0 <free@plt>
  426039:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42603d:	48 89 c7             	mov    %rax,%rdi
  426040:	be 01 00 00 00       	mov    $0x1,%esi
  426045:	e8 b4 fb 01 00       	callq  445bfe <setEncryptedValueDWord>
  42604a:	31 f6                	xor    %esi,%esi
  42604c:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  426050:	48 83 c7 08          	add    $0x8,%rdi
  426054:	48 89 85 90 f7 ff ff 	mov    %rax,-0x870(%rbp)
  42605b:	e8 9c fc 01 00       	callq  445cfc <setEncryptedValueQWord>
  426060:	31 c9                	xor    %ecx,%ecx
  426062:	89 ce                	mov    %ecx,%esi
  426064:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  426068:	48 83 c7 10          	add    $0x10,%rdi
  42606c:	48 89 85 88 f7 ff ff 	mov    %rax,-0x878(%rbp)
  426073:	e8 84 fc 01 00       	callq  445cfc <setEncryptedValueQWord>
  426078:	48 89 85 80 f7 ff ff 	mov    %rax,-0x880(%rbp)
  42607f:	48 8d 85 80 fc ff ff 	lea    -0x380(%rbp),%rax
  426086:	48 89 85 18 fe ff ff 	mov    %rax,-0x1e8(%rbp)
  42608d:	48 83 bd 18 fe ff ff 	cmpq   $0x0,-0x1e8(%rbp)
  426094:	00 
  426095:	75 05                	jne    42609c <mbedtls_mpi_inv_mod+0x182c>
  426097:	e9 6c 01 00 00       	jmpq   426208 <mbedtls_mpi_inv_mod+0x1998>
  42609c:	48 8b 85 18 fe ff ff 	mov    -0x1e8(%rbp),%rax
  4260a3:	48 83 c0 10          	add    $0x10,%rax
  4260a7:	48 89 c7             	mov    %rax,%rdi
  4260aa:	e8 99 00 02 00       	callq  446148 <getDecryptedValueQWord>
  4260af:	48 83 f8 00          	cmp    $0x0,%rax
  4260b3:	0f 84 00 01 00 00    	je     4261b9 <mbedtls_mpi_inv_mod+0x1949>
  4260b9:	48 8b 85 18 fe ff ff 	mov    -0x1e8(%rbp),%rax
  4260c0:	48 83 c0 10          	add    $0x10,%rax
  4260c4:	48 89 c7             	mov    %rax,%rdi
  4260c7:	e8 7c 00 02 00       	callq  446148 <getDecryptedValueQWord>
  4260cc:	48 8b bd 18 fe ff ff 	mov    -0x1e8(%rbp),%rdi
  4260d3:	48 83 c7 08          	add    $0x8,%rdi
  4260d7:	48 89 85 78 f7 ff ff 	mov    %rax,-0x888(%rbp)
  4260de:	e8 65 00 02 00       	callq  446148 <getDecryptedValueQWord>
  4260e3:	48 8b bd 78 f7 ff ff 	mov    -0x888(%rbp),%rdi
  4260ea:	48 89 bd 28 fe ff ff 	mov    %rdi,-0x1d8(%rbp)
  4260f1:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
  4260f8:	48 8b 85 28 fe ff ff 	mov    -0x1d8(%rbp),%rax
  4260ff:	48 8b 8d 20 fe ff ff 	mov    -0x1e0(%rbp),%rcx
  426106:	48 c1 e1 03          	shl    $0x3,%rcx
  42610a:	48 89 85 38 fe ff ff 	mov    %rax,-0x1c8(%rbp)
  426111:	48 89 8d 30 fe ff ff 	mov    %rcx,-0x1d0(%rbp)
  426118:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  42611f:	00 
  426120:	48 8b 8d 38 fe ff ff 	mov    -0x1c8(%rbp),%rcx
  426127:	48 8b 95 30 fe ff ff 	mov    -0x1d0(%rbp),%rdx
  42612e:	48 89 85 70 f7 ff ff 	mov    %rax,-0x890(%rbp)
  426135:	48 89 8d 68 f7 ff ff 	mov    %rcx,-0x898(%rbp)
  42613c:	48 89 95 60 f7 ff ff 	mov    %rdx,-0x8a0(%rbp)
  426143:	e8 0e f8 01 00       	callq  445956 <writeback_cache>
  426148:	48 8b bd 68 f7 ff ff 	mov    -0x898(%rbp),%rdi
  42614f:	48 8b b5 60 f7 ff ff 	mov    -0x8a0(%rbp),%rsi
  426156:	e8 8a 05 02 00       	callq  4466e5 <decryptArrayForLibCall>
  42615b:	31 f6                	xor    %esi,%esi
  42615d:	48 8b bd 68 f7 ff ff 	mov    -0x898(%rbp),%rdi
  426164:	48 8b 95 60 f7 ff ff 	mov    -0x8a0(%rbp),%rdx
  42616b:	48 8b 85 70 f7 ff ff 	mov    -0x890(%rbp),%rax
  426172:	ff d0                	callq  *%rax
  426174:	48 8b bd 68 f7 ff ff 	mov    -0x898(%rbp),%rdi
  42617b:	48 8b b5 60 f7 ff ff 	mov    -0x8a0(%rbp),%rsi
  426182:	48 89 85 58 f7 ff ff 	mov    %rax,-0x8a8(%rbp)
  426189:	e8 c8 02 02 00       	callq  446456 <encryptArrayForLibCall>
  42618e:	48 8b 85 18 fe ff ff 	mov    -0x1e8(%rbp),%rax
  426195:	48 83 c0 10          	add    $0x10,%rax
  426199:	48 89 c7             	mov    %rax,%rdi
  42619c:	e8 a7 ff 01 00       	callq  446148 <getDecryptedValueQWord>
  4261a1:	48 89 85 50 f7 ff ff 	mov    %rax,-0x8b0(%rbp)
  4261a8:	e8 a9 f7 01 00       	callq  445956 <writeback_cache>
  4261ad:	48 8b bd 50 f7 ff ff 	mov    -0x8b0(%rbp),%rdi
  4261b4:	e8 27 af fd ff       	callq  4010e0 <free@plt>
  4261b9:	48 8b 85 18 fe ff ff 	mov    -0x1e8(%rbp),%rax
  4261c0:	48 89 c7             	mov    %rax,%rdi
  4261c3:	be 01 00 00 00       	mov    $0x1,%esi
  4261c8:	e8 31 fa 01 00       	callq  445bfe <setEncryptedValueDWord>
  4261cd:	31 f6                	xor    %esi,%esi
  4261cf:	48 8b bd 18 fe ff ff 	mov    -0x1e8(%rbp),%rdi
  4261d6:	48 83 c7 08          	add    $0x8,%rdi
  4261da:	48 89 85 48 f7 ff ff 	mov    %rax,-0x8b8(%rbp)
  4261e1:	e8 16 fb 01 00       	callq  445cfc <setEncryptedValueQWord>
  4261e6:	31 c9                	xor    %ecx,%ecx
  4261e8:	89 ce                	mov    %ecx,%esi
  4261ea:	48 8b bd 18 fe ff ff 	mov    -0x1e8(%rbp),%rdi
  4261f1:	48 83 c7 10          	add    $0x10,%rdi
  4261f5:	48 89 85 40 f7 ff ff 	mov    %rax,-0x8c0(%rbp)
  4261fc:	e8 fb fa 01 00       	callq  445cfc <setEncryptedValueQWord>
  426201:	48 89 85 38 f7 ff ff 	mov    %rax,-0x8c8(%rbp)
  426208:	48 8d 85 90 fb ff ff 	lea    -0x470(%rbp),%rax
  42620f:	48 89 85 e0 fd ff ff 	mov    %rax,-0x220(%rbp)
  426216:	48 83 bd e0 fd ff ff 	cmpq   $0x0,-0x220(%rbp)
  42621d:	00 
  42621e:	75 05                	jne    426225 <mbedtls_mpi_inv_mod+0x19b5>
  426220:	e9 6c 01 00 00       	jmpq   426391 <mbedtls_mpi_inv_mod+0x1b21>
  426225:	48 8b 85 e0 fd ff ff 	mov    -0x220(%rbp),%rax
  42622c:	48 83 c0 10          	add    $0x10,%rax
  426230:	48 89 c7             	mov    %rax,%rdi
  426233:	e8 10 ff 01 00       	callq  446148 <getDecryptedValueQWord>
  426238:	48 83 f8 00          	cmp    $0x0,%rax
  42623c:	0f 84 00 01 00 00    	je     426342 <mbedtls_mpi_inv_mod+0x1ad2>
  426242:	48 8b 85 e0 fd ff ff 	mov    -0x220(%rbp),%rax
  426249:	48 83 c0 10          	add    $0x10,%rax
  42624d:	48 89 c7             	mov    %rax,%rdi
  426250:	e8 f3 fe 01 00       	callq  446148 <getDecryptedValueQWord>
  426255:	48 8b bd e0 fd ff ff 	mov    -0x220(%rbp),%rdi
  42625c:	48 83 c7 08          	add    $0x8,%rdi
  426260:	48 89 85 30 f7 ff ff 	mov    %rax,-0x8d0(%rbp)
  426267:	e8 dc fe 01 00       	callq  446148 <getDecryptedValueQWord>
  42626c:	48 8b bd 30 f7 ff ff 	mov    -0x8d0(%rbp),%rdi
  426273:	48 89 bd f0 fd ff ff 	mov    %rdi,-0x210(%rbp)
  42627a:	48 89 85 e8 fd ff ff 	mov    %rax,-0x218(%rbp)
  426281:	48 8b 85 f0 fd ff ff 	mov    -0x210(%rbp),%rax
  426288:	48 8b 8d e8 fd ff ff 	mov    -0x218(%rbp),%rcx
  42628f:	48 c1 e1 03          	shl    $0x3,%rcx
  426293:	48 89 85 00 fe ff ff 	mov    %rax,-0x200(%rbp)
  42629a:	48 89 8d f8 fd ff ff 	mov    %rcx,-0x208(%rbp)
  4262a1:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  4262a8:	00 
  4262a9:	48 8b 8d 00 fe ff ff 	mov    -0x200(%rbp),%rcx
  4262b0:	48 8b 95 f8 fd ff ff 	mov    -0x208(%rbp),%rdx
  4262b7:	48 89 85 28 f7 ff ff 	mov    %rax,-0x8d8(%rbp)
  4262be:	48 89 8d 20 f7 ff ff 	mov    %rcx,-0x8e0(%rbp)
  4262c5:	48 89 95 18 f7 ff ff 	mov    %rdx,-0x8e8(%rbp)
  4262cc:	e8 85 f6 01 00       	callq  445956 <writeback_cache>
  4262d1:	48 8b bd 20 f7 ff ff 	mov    -0x8e0(%rbp),%rdi
  4262d8:	48 8b b5 18 f7 ff ff 	mov    -0x8e8(%rbp),%rsi
  4262df:	e8 01 04 02 00       	callq  4466e5 <decryptArrayForLibCall>
  4262e4:	31 f6                	xor    %esi,%esi
  4262e6:	48 8b bd 20 f7 ff ff 	mov    -0x8e0(%rbp),%rdi
  4262ed:	48 8b 95 18 f7 ff ff 	mov    -0x8e8(%rbp),%rdx
  4262f4:	48 8b 85 28 f7 ff ff 	mov    -0x8d8(%rbp),%rax
  4262fb:	ff d0                	callq  *%rax
  4262fd:	48 8b bd 20 f7 ff ff 	mov    -0x8e0(%rbp),%rdi
  426304:	48 8b b5 18 f7 ff ff 	mov    -0x8e8(%rbp),%rsi
  42630b:	48 89 85 10 f7 ff ff 	mov    %rax,-0x8f0(%rbp)
  426312:	e8 3f 01 02 00       	callq  446456 <encryptArrayForLibCall>
  426317:	48 8b 85 e0 fd ff ff 	mov    -0x220(%rbp),%rax
  42631e:	48 83 c0 10          	add    $0x10,%rax
  426322:	48 89 c7             	mov    %rax,%rdi
  426325:	e8 1e fe 01 00       	callq  446148 <getDecryptedValueQWord>
  42632a:	48 89 85 08 f7 ff ff 	mov    %rax,-0x8f8(%rbp)
  426331:	e8 20 f6 01 00       	callq  445956 <writeback_cache>
  426336:	48 8b bd 08 f7 ff ff 	mov    -0x8f8(%rbp),%rdi
  42633d:	e8 9e ad fd ff       	callq  4010e0 <free@plt>
  426342:	48 8b 85 e0 fd ff ff 	mov    -0x220(%rbp),%rax
  426349:	48 89 c7             	mov    %rax,%rdi
  42634c:	be 01 00 00 00       	mov    $0x1,%esi
  426351:	e8 a8 f8 01 00       	callq  445bfe <setEncryptedValueDWord>
  426356:	31 f6                	xor    %esi,%esi
  426358:	48 8b bd e0 fd ff ff 	mov    -0x220(%rbp),%rdi
  42635f:	48 83 c7 08          	add    $0x8,%rdi
  426363:	48 89 85 00 f7 ff ff 	mov    %rax,-0x900(%rbp)
  42636a:	e8 8d f9 01 00       	callq  445cfc <setEncryptedValueQWord>
  42636f:	31 c9                	xor    %ecx,%ecx
  426371:	89 ce                	mov    %ecx,%esi
  426373:	48 8b bd e0 fd ff ff 	mov    -0x220(%rbp),%rdi
  42637a:	48 83 c7 10          	add    $0x10,%rdi
  42637e:	48 89 85 f8 f6 ff ff 	mov    %rax,-0x908(%rbp)
  426385:	e8 72 f9 01 00       	callq  445cfc <setEncryptedValueQWord>
  42638a:	48 89 85 f0 f6 ff ff 	mov    %rax,-0x910(%rbp)
  426391:	48 8d 85 60 fb ff ff 	lea    -0x4a0(%rbp),%rax
  426398:	48 89 85 a8 fd ff ff 	mov    %rax,-0x258(%rbp)
  42639f:	48 83 bd a8 fd ff ff 	cmpq   $0x0,-0x258(%rbp)
  4263a6:	00 
  4263a7:	75 05                	jne    4263ae <mbedtls_mpi_inv_mod+0x1b3e>
  4263a9:	e9 6c 01 00 00       	jmpq   42651a <mbedtls_mpi_inv_mod+0x1caa>
  4263ae:	48 8b 85 a8 fd ff ff 	mov    -0x258(%rbp),%rax
  4263b5:	48 83 c0 10          	add    $0x10,%rax
  4263b9:	48 89 c7             	mov    %rax,%rdi
  4263bc:	e8 87 fd 01 00       	callq  446148 <getDecryptedValueQWord>
  4263c1:	48 83 f8 00          	cmp    $0x0,%rax
  4263c5:	0f 84 00 01 00 00    	je     4264cb <mbedtls_mpi_inv_mod+0x1c5b>
  4263cb:	48 8b 85 a8 fd ff ff 	mov    -0x258(%rbp),%rax
  4263d2:	48 83 c0 10          	add    $0x10,%rax
  4263d6:	48 89 c7             	mov    %rax,%rdi
  4263d9:	e8 6a fd 01 00       	callq  446148 <getDecryptedValueQWord>
  4263de:	48 8b bd a8 fd ff ff 	mov    -0x258(%rbp),%rdi
  4263e5:	48 83 c7 08          	add    $0x8,%rdi
  4263e9:	48 89 85 e8 f6 ff ff 	mov    %rax,-0x918(%rbp)
  4263f0:	e8 53 fd 01 00       	callq  446148 <getDecryptedValueQWord>
  4263f5:	48 8b bd e8 f6 ff ff 	mov    -0x918(%rbp),%rdi
  4263fc:	48 89 bd b8 fd ff ff 	mov    %rdi,-0x248(%rbp)
  426403:	48 89 85 b0 fd ff ff 	mov    %rax,-0x250(%rbp)
  42640a:	48 8b 85 b8 fd ff ff 	mov    -0x248(%rbp),%rax
  426411:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
  426418:	48 c1 e1 03          	shl    $0x3,%rcx
  42641c:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
  426423:	48 89 8d c0 fd ff ff 	mov    %rcx,-0x240(%rbp)
  42642a:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  426431:	00 
  426432:	48 8b 8d c8 fd ff ff 	mov    -0x238(%rbp),%rcx
  426439:	48 8b 95 c0 fd ff ff 	mov    -0x240(%rbp),%rdx
  426440:	48 89 85 e0 f6 ff ff 	mov    %rax,-0x920(%rbp)
  426447:	48 89 8d d8 f6 ff ff 	mov    %rcx,-0x928(%rbp)
  42644e:	48 89 95 d0 f6 ff ff 	mov    %rdx,-0x930(%rbp)
  426455:	e8 fc f4 01 00       	callq  445956 <writeback_cache>
  42645a:	48 8b bd d8 f6 ff ff 	mov    -0x928(%rbp),%rdi
  426461:	48 8b b5 d0 f6 ff ff 	mov    -0x930(%rbp),%rsi
  426468:	e8 78 02 02 00       	callq  4466e5 <decryptArrayForLibCall>
  42646d:	31 f6                	xor    %esi,%esi
  42646f:	48 8b bd d8 f6 ff ff 	mov    -0x928(%rbp),%rdi
  426476:	48 8b 95 d0 f6 ff ff 	mov    -0x930(%rbp),%rdx
  42647d:	48 8b 85 e0 f6 ff ff 	mov    -0x920(%rbp),%rax
  426484:	ff d0                	callq  *%rax
  426486:	48 8b bd d8 f6 ff ff 	mov    -0x928(%rbp),%rdi
  42648d:	48 8b b5 d0 f6 ff ff 	mov    -0x930(%rbp),%rsi
  426494:	48 89 85 c8 f6 ff ff 	mov    %rax,-0x938(%rbp)
  42649b:	e8 b6 ff 01 00       	callq  446456 <encryptArrayForLibCall>
  4264a0:	48 8b 85 a8 fd ff ff 	mov    -0x258(%rbp),%rax
  4264a7:	48 83 c0 10          	add    $0x10,%rax
  4264ab:	48 89 c7             	mov    %rax,%rdi
  4264ae:	e8 95 fc 01 00       	callq  446148 <getDecryptedValueQWord>
  4264b3:	48 89 85 c0 f6 ff ff 	mov    %rax,-0x940(%rbp)
  4264ba:	e8 97 f4 01 00       	callq  445956 <writeback_cache>
  4264bf:	48 8b bd c0 f6 ff ff 	mov    -0x940(%rbp),%rdi
  4264c6:	e8 15 ac fd ff       	callq  4010e0 <free@plt>
  4264cb:	48 8b 85 a8 fd ff ff 	mov    -0x258(%rbp),%rax
  4264d2:	48 89 c7             	mov    %rax,%rdi
  4264d5:	be 01 00 00 00       	mov    $0x1,%esi
  4264da:	e8 1f f7 01 00       	callq  445bfe <setEncryptedValueDWord>
  4264df:	31 f6                	xor    %esi,%esi
  4264e1:	48 8b bd a8 fd ff ff 	mov    -0x258(%rbp),%rdi
  4264e8:	48 83 c7 08          	add    $0x8,%rdi
  4264ec:	48 89 85 b8 f6 ff ff 	mov    %rax,-0x948(%rbp)
  4264f3:	e8 04 f8 01 00       	callq  445cfc <setEncryptedValueQWord>
  4264f8:	31 c9                	xor    %ecx,%ecx
  4264fa:	89 ce                	mov    %ecx,%esi
  4264fc:	48 8b bd a8 fd ff ff 	mov    -0x258(%rbp),%rdi
  426503:	48 83 c7 10          	add    $0x10,%rdi
  426507:	48 89 85 b0 f6 ff ff 	mov    %rax,-0x950(%rbp)
  42650e:	e8 e9 f7 01 00       	callq  445cfc <setEncryptedValueQWord>
  426513:	48 89 85 a8 f6 ff ff 	mov    %rax,-0x958(%rbp)
  42651a:	48 8d 85 30 fb ff ff 	lea    -0x4d0(%rbp),%rax
  426521:	48 89 85 70 fd ff ff 	mov    %rax,-0x290(%rbp)
  426528:	48 83 bd 70 fd ff ff 	cmpq   $0x0,-0x290(%rbp)
  42652f:	00 
  426530:	75 05                	jne    426537 <mbedtls_mpi_inv_mod+0x1cc7>
  426532:	e9 6c 01 00 00       	jmpq   4266a3 <mbedtls_mpi_inv_mod+0x1e33>
  426537:	48 8b 85 70 fd ff ff 	mov    -0x290(%rbp),%rax
  42653e:	48 83 c0 10          	add    $0x10,%rax
  426542:	48 89 c7             	mov    %rax,%rdi
  426545:	e8 fe fb 01 00       	callq  446148 <getDecryptedValueQWord>
  42654a:	48 83 f8 00          	cmp    $0x0,%rax
  42654e:	0f 84 00 01 00 00    	je     426654 <mbedtls_mpi_inv_mod+0x1de4>
  426554:	48 8b 85 70 fd ff ff 	mov    -0x290(%rbp),%rax
  42655b:	48 83 c0 10          	add    $0x10,%rax
  42655f:	48 89 c7             	mov    %rax,%rdi
  426562:	e8 e1 fb 01 00       	callq  446148 <getDecryptedValueQWord>
  426567:	48 8b bd 70 fd ff ff 	mov    -0x290(%rbp),%rdi
  42656e:	48 83 c7 08          	add    $0x8,%rdi
  426572:	48 89 85 a0 f6 ff ff 	mov    %rax,-0x960(%rbp)
  426579:	e8 ca fb 01 00       	callq  446148 <getDecryptedValueQWord>
  42657e:	48 8b bd a0 f6 ff ff 	mov    -0x960(%rbp),%rdi
  426585:	48 89 bd 80 fd ff ff 	mov    %rdi,-0x280(%rbp)
  42658c:	48 89 85 78 fd ff ff 	mov    %rax,-0x288(%rbp)
  426593:	48 8b 85 80 fd ff ff 	mov    -0x280(%rbp),%rax
  42659a:	48 8b 8d 78 fd ff ff 	mov    -0x288(%rbp),%rcx
  4265a1:	48 c1 e1 03          	shl    $0x3,%rcx
  4265a5:	48 89 85 90 fd ff ff 	mov    %rax,-0x270(%rbp)
  4265ac:	48 89 8d 88 fd ff ff 	mov    %rcx,-0x278(%rbp)
  4265b3:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  4265ba:	00 
  4265bb:	48 8b 8d 90 fd ff ff 	mov    -0x270(%rbp),%rcx
  4265c2:	48 8b 95 88 fd ff ff 	mov    -0x278(%rbp),%rdx
  4265c9:	48 89 85 98 f6 ff ff 	mov    %rax,-0x968(%rbp)
  4265d0:	48 89 8d 90 f6 ff ff 	mov    %rcx,-0x970(%rbp)
  4265d7:	48 89 95 88 f6 ff ff 	mov    %rdx,-0x978(%rbp)
  4265de:	e8 73 f3 01 00       	callq  445956 <writeback_cache>
  4265e3:	48 8b bd 90 f6 ff ff 	mov    -0x970(%rbp),%rdi
  4265ea:	48 8b b5 88 f6 ff ff 	mov    -0x978(%rbp),%rsi
  4265f1:	e8 ef 00 02 00       	callq  4466e5 <decryptArrayForLibCall>
  4265f6:	31 f6                	xor    %esi,%esi
  4265f8:	48 8b bd 90 f6 ff ff 	mov    -0x970(%rbp),%rdi
  4265ff:	48 8b 95 88 f6 ff ff 	mov    -0x978(%rbp),%rdx
  426606:	48 8b 85 98 f6 ff ff 	mov    -0x968(%rbp),%rax
  42660d:	ff d0                	callq  *%rax
  42660f:	48 8b bd 90 f6 ff ff 	mov    -0x970(%rbp),%rdi
  426616:	48 8b b5 88 f6 ff ff 	mov    -0x978(%rbp),%rsi
  42661d:	48 89 85 80 f6 ff ff 	mov    %rax,-0x980(%rbp)
  426624:	e8 2d fe 01 00       	callq  446456 <encryptArrayForLibCall>
  426629:	48 8b 85 70 fd ff ff 	mov    -0x290(%rbp),%rax
  426630:	48 83 c0 10          	add    $0x10,%rax
  426634:	48 89 c7             	mov    %rax,%rdi
  426637:	e8 0c fb 01 00       	callq  446148 <getDecryptedValueQWord>
  42663c:	48 89 85 78 f6 ff ff 	mov    %rax,-0x988(%rbp)
  426643:	e8 0e f3 01 00       	callq  445956 <writeback_cache>
  426648:	48 8b bd 78 f6 ff ff 	mov    -0x988(%rbp),%rdi
  42664f:	e8 8c aa fd ff       	callq  4010e0 <free@plt>
  426654:	48 8b 85 70 fd ff ff 	mov    -0x290(%rbp),%rax
  42665b:	48 89 c7             	mov    %rax,%rdi
  42665e:	be 01 00 00 00       	mov    $0x1,%esi
  426663:	e8 96 f5 01 00       	callq  445bfe <setEncryptedValueDWord>
  426668:	31 f6                	xor    %esi,%esi
  42666a:	48 8b bd 70 fd ff ff 	mov    -0x290(%rbp),%rdi
  426671:	48 83 c7 08          	add    $0x8,%rdi
  426675:	48 89 85 70 f6 ff ff 	mov    %rax,-0x990(%rbp)
  42667c:	e8 7b f6 01 00       	callq  445cfc <setEncryptedValueQWord>
  426681:	31 c9                	xor    %ecx,%ecx
  426683:	89 ce                	mov    %ecx,%esi
  426685:	48 8b bd 70 fd ff ff 	mov    -0x290(%rbp),%rdi
  42668c:	48 83 c7 10          	add    $0x10,%rdi
  426690:	48 89 85 68 f6 ff ff 	mov    %rax,-0x998(%rbp)
  426697:	e8 60 f6 01 00       	callq  445cfc <setEncryptedValueQWord>
  42669c:	48 89 85 60 f6 ff ff 	mov    %rax,-0x9a0(%rbp)
  4266a3:	48 8d 85 00 fb ff ff 	lea    -0x500(%rbp),%rax
  4266aa:	48 89 85 38 fd ff ff 	mov    %rax,-0x2c8(%rbp)
  4266b1:	48 83 bd 38 fd ff ff 	cmpq   $0x0,-0x2c8(%rbp)
  4266b8:	00 
  4266b9:	75 05                	jne    4266c0 <mbedtls_mpi_inv_mod+0x1e50>
  4266bb:	e9 6c 01 00 00       	jmpq   42682c <mbedtls_mpi_inv_mod+0x1fbc>
  4266c0:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
  4266c7:	48 83 c0 10          	add    $0x10,%rax
  4266cb:	48 89 c7             	mov    %rax,%rdi
  4266ce:	e8 75 fa 01 00       	callq  446148 <getDecryptedValueQWord>
  4266d3:	48 83 f8 00          	cmp    $0x0,%rax
  4266d7:	0f 84 00 01 00 00    	je     4267dd <mbedtls_mpi_inv_mod+0x1f6d>
  4266dd:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
  4266e4:	48 83 c0 10          	add    $0x10,%rax
  4266e8:	48 89 c7             	mov    %rax,%rdi
  4266eb:	e8 58 fa 01 00       	callq  446148 <getDecryptedValueQWord>
  4266f0:	48 8b bd 38 fd ff ff 	mov    -0x2c8(%rbp),%rdi
  4266f7:	48 83 c7 08          	add    $0x8,%rdi
  4266fb:	48 89 85 58 f6 ff ff 	mov    %rax,-0x9a8(%rbp)
  426702:	e8 41 fa 01 00       	callq  446148 <getDecryptedValueQWord>
  426707:	48 8b bd 58 f6 ff ff 	mov    -0x9a8(%rbp),%rdi
  42670e:	48 89 bd 48 fd ff ff 	mov    %rdi,-0x2b8(%rbp)
  426715:	48 89 85 40 fd ff ff 	mov    %rax,-0x2c0(%rbp)
  42671c:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
  426723:	48 8b 8d 40 fd ff ff 	mov    -0x2c0(%rbp),%rcx
  42672a:	48 c1 e1 03          	shl    $0x3,%rcx
  42672e:	48 89 85 58 fd ff ff 	mov    %rax,-0x2a8(%rbp)
  426735:	48 89 8d 50 fd ff ff 	mov    %rcx,-0x2b0(%rbp)
  42673c:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  426743:	00 
  426744:	48 8b 8d 58 fd ff ff 	mov    -0x2a8(%rbp),%rcx
  42674b:	48 8b 95 50 fd ff ff 	mov    -0x2b0(%rbp),%rdx
  426752:	48 89 85 50 f6 ff ff 	mov    %rax,-0x9b0(%rbp)
  426759:	48 89 8d 48 f6 ff ff 	mov    %rcx,-0x9b8(%rbp)
  426760:	48 89 95 40 f6 ff ff 	mov    %rdx,-0x9c0(%rbp)
  426767:	e8 ea f1 01 00       	callq  445956 <writeback_cache>
  42676c:	48 8b bd 48 f6 ff ff 	mov    -0x9b8(%rbp),%rdi
  426773:	48 8b b5 40 f6 ff ff 	mov    -0x9c0(%rbp),%rsi
  42677a:	e8 66 ff 01 00       	callq  4466e5 <decryptArrayForLibCall>
  42677f:	31 f6                	xor    %esi,%esi
  426781:	48 8b bd 48 f6 ff ff 	mov    -0x9b8(%rbp),%rdi
  426788:	48 8b 95 40 f6 ff ff 	mov    -0x9c0(%rbp),%rdx
  42678f:	48 8b 85 50 f6 ff ff 	mov    -0x9b0(%rbp),%rax
  426796:	ff d0                	callq  *%rax
  426798:	48 8b bd 48 f6 ff ff 	mov    -0x9b8(%rbp),%rdi
  42679f:	48 8b b5 40 f6 ff ff 	mov    -0x9c0(%rbp),%rsi
  4267a6:	48 89 85 38 f6 ff ff 	mov    %rax,-0x9c8(%rbp)
  4267ad:	e8 a4 fc 01 00       	callq  446456 <encryptArrayForLibCall>
  4267b2:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
  4267b9:	48 83 c0 10          	add    $0x10,%rax
  4267bd:	48 89 c7             	mov    %rax,%rdi
  4267c0:	e8 83 f9 01 00       	callq  446148 <getDecryptedValueQWord>
  4267c5:	48 89 85 30 f6 ff ff 	mov    %rax,-0x9d0(%rbp)
  4267cc:	e8 85 f1 01 00       	callq  445956 <writeback_cache>
  4267d1:	48 8b bd 30 f6 ff ff 	mov    -0x9d0(%rbp),%rdi
  4267d8:	e8 03 a9 fd ff       	callq  4010e0 <free@plt>
  4267dd:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
  4267e4:	48 89 c7             	mov    %rax,%rdi
  4267e7:	be 01 00 00 00       	mov    $0x1,%esi
  4267ec:	e8 0d f4 01 00       	callq  445bfe <setEncryptedValueDWord>
  4267f1:	31 f6                	xor    %esi,%esi
  4267f3:	48 8b bd 38 fd ff ff 	mov    -0x2c8(%rbp),%rdi
  4267fa:	48 83 c7 08          	add    $0x8,%rdi
  4267fe:	48 89 85 28 f6 ff ff 	mov    %rax,-0x9d8(%rbp)
  426805:	e8 f2 f4 01 00       	callq  445cfc <setEncryptedValueQWord>
  42680a:	31 c9                	xor    %ecx,%ecx
  42680c:	89 ce                	mov    %ecx,%esi
  42680e:	48 8b bd 38 fd ff ff 	mov    -0x2c8(%rbp),%rdi
  426815:	48 83 c7 10          	add    $0x10,%rdi
  426819:	48 89 85 20 f6 ff ff 	mov    %rax,-0x9e0(%rbp)
  426820:	e8 d7 f4 01 00       	callq  445cfc <setEncryptedValueQWord>
  426825:	48 89 85 18 f6 ff ff 	mov    %rax,-0x9e8(%rbp)
  42682c:	8b 85 ac fc ff ff    	mov    -0x354(%rbp),%eax
  426832:	89 85 cc fc ff ff    	mov    %eax,-0x334(%rbp)
  426838:	8b 85 cc fc ff ff    	mov    -0x334(%rbp),%eax
  42683e:	89 85 14 f6 ff ff    	mov    %eax,-0x9ec(%rbp)
  426844:	e8 0d f1 01 00       	callq  445956 <writeback_cache>
  426849:	8b 85 14 f6 ff ff    	mov    -0x9ec(%rbp),%eax
  42684f:	48 81 c4 f0 09 00 00 	add    $0x9f0,%rsp
  426856:	5d                   	pop    %rbp
  426857:	c3                   	retq   
  426858:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  42685f:	00 

0000000000426860 <get_no_padding>:
  426860:	55                   	push   %rbp
  426861:	48 89 e5             	mov    %rsp,%rbp
  426864:	48 83 ec 30          	sub    $0x30,%rsp
  426868:	31 c0                	xor    %eax,%eax
  42686a:	89 c1                	mov    %eax,%ecx
  42686c:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  426870:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  426874:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
  426878:	48 3b 4d f0          	cmp    -0x10(%rbp),%rcx
  42687c:	74 0a                	je     426888 <get_no_padding+0x28>
  42687e:	31 c0                	xor    %eax,%eax
  426880:	89 c1                	mov    %eax,%ecx
  426882:	48 3b 4d e0          	cmp    -0x20(%rbp),%rcx
  426886:	75 09                	jne    426891 <get_no_padding+0x31>
  426888:	c7 45 fc 00 9f ff ff 	movl   $0xffff9f00,-0x4(%rbp)
  42688f:	eb 12                	jmp    4268a3 <get_no_padding+0x43>
  426891:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  426895:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  426899:	48 89 01             	mov    %rax,(%rcx)
  42689c:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  4268a3:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4268a6:	89 45 dc             	mov    %eax,-0x24(%rbp)
  4268a9:	e8 a8 f0 01 00       	callq  445956 <writeback_cache>
  4268ae:	8b 45 dc             	mov    -0x24(%rbp),%eax
  4268b1:	48 83 c4 30          	add    $0x30,%rsp
  4268b5:	5d                   	pop    %rbp
  4268b6:	c3                   	retq   
  4268b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4268be:	00 00 

00000000004268c0 <mbedtls_cipher_setkey>:
  4268c0:	55                   	push   %rbp
  4268c1:	48 89 e5             	mov    %rsp,%rbp
  4268c4:	48 83 ec 30          	sub    $0x30,%rsp
  4268c8:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  4268cc:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  4268d0:	89 55 e4             	mov    %edx,-0x1c(%rbp)
  4268d3:	89 4d e0             	mov    %ecx,-0x20(%rbp)
  4268d6:	eb 00                	jmp    4268d8 <mbedtls_cipher_setkey+0x18>
  4268d8:	eb 00                	jmp    4268da <mbedtls_cipher_setkey+0x1a>
  4268da:	eb 00                	jmp    4268dc <mbedtls_cipher_setkey+0x1c>
  4268dc:	eb 00                	jmp    4268de <mbedtls_cipher_setkey+0x1e>
  4268de:	eb 00                	jmp    4268e0 <mbedtls_cipher_setkey+0x20>
  4268e0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4268e4:	48 83 38 00          	cmpq   $0x0,(%rax)
  4268e8:	75 0c                	jne    4268f6 <mbedtls_cipher_setkey+0x36>
  4268ea:	c7 45 fc 00 9f ff ff 	movl   $0xffff9f00,-0x4(%rbp)
  4268f1:	e9 de 00 00 00       	jmpq   4269d4 <mbedtls_cipher_setkey+0x114>
  4268f6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4268fa:	48 8b 00             	mov    (%rax),%rax
  4268fd:	8b 48 1c             	mov    0x1c(%rax),%ecx
  426900:	83 e1 02             	and    $0x2,%ecx
  426903:	83 f9 00             	cmp    $0x0,%ecx
  426906:	75 1b                	jne    426923 <mbedtls_cipher_setkey+0x63>
  426908:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42690c:	48 8b 00             	mov    (%rax),%rax
  42690f:	8b 48 08             	mov    0x8(%rax),%ecx
  426912:	3b 4d e4             	cmp    -0x1c(%rbp),%ecx
  426915:	74 0c                	je     426923 <mbedtls_cipher_setkey+0x63>
  426917:	c7 45 fc 00 9f ff ff 	movl   $0xffff9f00,-0x4(%rbp)
  42691e:	e9 b1 00 00 00       	jmpq   4269d4 <mbedtls_cipher_setkey+0x114>
  426923:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  426926:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  42692a:	89 41 08             	mov    %eax,0x8(%rcx)
  42692d:	8b 45 e0             	mov    -0x20(%rbp),%eax
  426930:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  426934:	89 41 0c             	mov    %eax,0xc(%rcx)
  426937:	b8 01 00 00 00       	mov    $0x1,%eax
  42693c:	3b 45 e0             	cmp    -0x20(%rbp),%eax
  42693f:	74 33                	je     426974 <mbedtls_cipher_setkey+0xb4>
  426941:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  426945:	48 8b 00             	mov    (%rax),%rax
  426948:	b9 03 00 00 00       	mov    $0x3,%ecx
  42694d:	3b 48 04             	cmp    0x4(%rax),%ecx
  426950:	74 22                	je     426974 <mbedtls_cipher_setkey+0xb4>
  426952:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  426956:	48 8b 00             	mov    (%rax),%rax
  426959:	b9 04 00 00 00       	mov    $0x4,%ecx
  42695e:	3b 48 04             	cmp    0x4(%rax),%ecx
  426961:	74 11                	je     426974 <mbedtls_cipher_setkey+0xb4>
  426963:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  426967:	48 8b 00             	mov    (%rax),%rax
  42696a:	b9 05 00 00 00       	mov    $0x5,%ecx
  42696f:	3b 48 04             	cmp    0x4(%rax),%ecx
  426972:	75 29                	jne    42699d <mbedtls_cipher_setkey+0xdd>
  426974:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  426978:	48 8b 00             	mov    (%rax),%rax
  42697b:	48 8b 40 28          	mov    0x28(%rax),%rax
  42697f:	48 8b 40 18          	mov    0x18(%rax),%rax
  426983:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  426987:	48 8b 79 50          	mov    0x50(%rcx),%rdi
  42698b:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  42698f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  426993:	8b 51 08             	mov    0x8(%rcx),%edx
  426996:	ff d0                	callq  *%rax
  426998:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42699b:	eb 37                	jmp    4269d4 <mbedtls_cipher_setkey+0x114>
  42699d:	31 c0                	xor    %eax,%eax
  42699f:	3b 45 e0             	cmp    -0x20(%rbp),%eax
  4269a2:	75 29                	jne    4269cd <mbedtls_cipher_setkey+0x10d>
  4269a4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4269a8:	48 8b 00             	mov    (%rax),%rax
  4269ab:	48 8b 40 28          	mov    0x28(%rax),%rax
  4269af:	48 8b 40 20          	mov    0x20(%rax),%rax
  4269b3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  4269b7:	48 8b 79 50          	mov    0x50(%rcx),%rdi
  4269bb:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  4269bf:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  4269c3:	8b 51 08             	mov    0x8(%rcx),%edx
  4269c6:	ff d0                	callq  *%rax
  4269c8:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4269cb:	eb 07                	jmp    4269d4 <mbedtls_cipher_setkey+0x114>
  4269cd:	c7 45 fc 00 9f ff ff 	movl   $0xffff9f00,-0x4(%rbp)
  4269d4:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4269d7:	89 45 dc             	mov    %eax,-0x24(%rbp)
  4269da:	e8 77 ef 01 00       	callq  445956 <writeback_cache>
  4269df:	8b 45 dc             	mov    -0x24(%rbp),%eax
  4269e2:	48 83 c4 30          	add    $0x30,%rsp
  4269e6:	5d                   	pop    %rbp
  4269e7:	c3                   	retq   
  4269e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4269ef:	00 

00000000004269f0 <mbedtls_cipher_crypt>:
  4269f0:	55                   	push   %rbp
  4269f1:	48 89 e5             	mov    %rsp,%rbp
  4269f4:	48 81 ec a0 01 00 00 	sub    $0x1a0,%rsp
  4269fb:	48 8b 45 10          	mov    0x10(%rbp),%rax
  4269ff:	48 89 bd f0 fe ff ff 	mov    %rdi,-0x110(%rbp)
  426a06:	48 89 b5 e8 fe ff ff 	mov    %rsi,-0x118(%rbp)
  426a0d:	48 89 95 e0 fe ff ff 	mov    %rdx,-0x120(%rbp)
  426a14:	48 89 8d d8 fe ff ff 	mov    %rcx,-0x128(%rbp)
  426a1b:	4c 89 85 d0 fe ff ff 	mov    %r8,-0x130(%rbp)
  426a22:	4c 89 8d c8 fe ff ff 	mov    %r9,-0x138(%rbp)
  426a29:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
  426a30:	eb 00                	jmp    426a32 <mbedtls_cipher_crypt+0x42>
  426a32:	eb 00                	jmp    426a34 <mbedtls_cipher_crypt+0x44>
  426a34:	eb 00                	jmp    426a36 <mbedtls_cipher_crypt+0x46>
  426a36:	eb 00                	jmp    426a38 <mbedtls_cipher_crypt+0x48>
  426a38:	eb 00                	jmp    426a3a <mbedtls_cipher_crypt+0x4a>
  426a3a:	eb 00                	jmp    426a3c <mbedtls_cipher_crypt+0x4c>
  426a3c:	eb 00                	jmp    426a3e <mbedtls_cipher_crypt+0x4e>
  426a3e:	eb 00                	jmp    426a40 <mbedtls_cipher_crypt+0x50>
  426a40:	eb 00                	jmp    426a42 <mbedtls_cipher_crypt+0x52>
  426a42:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
  426a49:	48 8b 8d e8 fe ff ff 	mov    -0x118(%rbp),%rcx
  426a50:	48 8b 95 e0 fe ff ff 	mov    -0x120(%rbp),%rdx
  426a57:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
  426a5e:	48 89 8d 10 ff ff ff 	mov    %rcx,-0xf0(%rbp)
  426a65:	48 89 95 08 ff ff ff 	mov    %rdx,-0xf8(%rbp)
  426a6c:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  426a73:	48 83 38 00          	cmpq   $0x0,(%rax)
  426a77:	75 0f                	jne    426a88 <mbedtls_cipher_crypt+0x98>
  426a79:	c7 85 20 ff ff ff 00 	movl   $0xffff9f00,-0xe0(%rbp)
  426a80:	9f ff ff 
  426a83:	e9 b9 00 00 00       	jmpq   426b41 <mbedtls_cipher_crypt+0x151>
  426a88:	48 83 bd 08 ff ff ff 	cmpq   $0x10,-0xf8(%rbp)
  426a8f:	10 
  426a90:	76 0f                	jbe    426aa1 <mbedtls_cipher_crypt+0xb1>
  426a92:	c7 85 20 ff ff ff 80 	movl   $0xffff9f80,-0xe0(%rbp)
  426a99:	9f ff ff 
  426a9c:	e9 a0 00 00 00       	jmpq   426b41 <mbedtls_cipher_crypt+0x151>
  426aa1:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  426aa8:	48 8b 00             	mov    (%rax),%rax
  426aab:	8b 48 1c             	mov    0x1c(%rax),%ecx
  426aae:	83 e1 01             	and    $0x1,%ecx
  426ab1:	83 f9 00             	cmp    $0x0,%ecx
  426ab4:	74 10                	je     426ac6 <mbedtls_cipher_crypt+0xd6>
  426ab6:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
  426abd:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
  426ac4:	eb 34                	jmp    426afa <mbedtls_cipher_crypt+0x10a>
  426ac6:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  426acd:	48 8b 00             	mov    (%rax),%rax
  426ad0:	8b 48 18             	mov    0x18(%rax),%ecx
  426ad3:	89 c8                	mov    %ecx,%eax
  426ad5:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
  426adc:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
  426ae3:	48 3b 85 08 ff ff ff 	cmp    -0xf8(%rbp),%rax
  426aea:	76 0c                	jbe    426af8 <mbedtls_cipher_crypt+0x108>
  426aec:	c7 85 20 ff ff ff 00 	movl   $0xffff9f00,-0xe0(%rbp)
  426af3:	9f ff ff 
  426af6:	eb 49                	jmp    426b41 <mbedtls_cipher_crypt+0x151>
  426af8:	eb 00                	jmp    426afa <mbedtls_cipher_crypt+0x10a>
  426afa:	48 83 bd 00 ff ff ff 	cmpq   $0x0,-0x100(%rbp)
  426b01:	00 
  426b02:	74 33                	je     426b37 <mbedtls_cipher_crypt+0x147>
  426b04:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  426b0b:	48 83 c0 38          	add    $0x38,%rax
  426b0f:	48 8b b5 10 ff ff ff 	mov    -0xf0(%rbp),%rsi
  426b16:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
  426b1d:	48 89 c7             	mov    %rax,%rdi
  426b20:	e8 4b a6 fd ff       	callq  401170 <memcpy@plt>
  426b25:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
  426b2c:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
  426b33:	48 89 42 48          	mov    %rax,0x48(%rdx)
  426b37:	c7 85 20 ff ff ff 00 	movl   $0x0,-0xe0(%rbp)
  426b3e:	00 00 00 
  426b41:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax
  426b47:	89 85 c4 fe ff ff    	mov    %eax,-0x13c(%rbp)
  426b4d:	83 f8 00             	cmp    $0x0,%eax
  426b50:	74 11                	je     426b63 <mbedtls_cipher_crypt+0x173>
  426b52:	8b 85 c4 fe ff ff    	mov    -0x13c(%rbp),%eax
  426b58:	89 85 fc fe ff ff    	mov    %eax,-0x104(%rbp)
  426b5e:	e9 5c 09 00 00       	jmpq   4274bf <mbedtls_cipher_crypt+0xacf>
  426b63:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
  426b6a:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  426b6e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  426b72:	48 83 38 00          	cmpq   $0x0,(%rax)
  426b76:	75 09                	jne    426b81 <mbedtls_cipher_crypt+0x191>
  426b78:	c7 45 a4 00 9f ff ff 	movl   $0xffff9f00,-0x5c(%rbp)
  426b7f:	eb 13                	jmp    426b94 <mbedtls_cipher_crypt+0x1a4>
  426b81:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  426b85:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
  426b8c:	00 
  426b8d:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%rbp)
  426b94:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  426b97:	89 85 c4 fe ff ff    	mov    %eax,-0x13c(%rbp)
  426b9d:	83 f8 00             	cmp    $0x0,%eax
  426ba0:	74 11                	je     426bb3 <mbedtls_cipher_crypt+0x1c3>
  426ba2:	8b 85 c4 fe ff ff    	mov    -0x13c(%rbp),%eax
  426ba8:	89 85 fc fe ff ff    	mov    %eax,-0x104(%rbp)
  426bae:	e9 0c 09 00 00       	jmpq   4274bf <mbedtls_cipher_crypt+0xacf>
  426bb3:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
  426bba:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
  426bc1:	48 8b 95 d0 fe ff ff 	mov    -0x130(%rbp),%rdx
  426bc8:	48 8b b5 c8 fe ff ff 	mov    -0x138(%rbp),%rsi
  426bcf:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
  426bd3:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  426bd7:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  426bdb:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
  426bdf:	48 89 75 c8          	mov    %rsi,-0x38(%rbp)
  426be3:	48 89 7d c0          	mov    %rdi,-0x40(%rbp)
  426be7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  426beb:	48 83 38 00          	cmpq   $0x0,(%rax)
  426bef:	75 0c                	jne    426bfd <mbedtls_cipher_crypt+0x20d>
  426bf1:	c7 45 ec 00 9f ff ff 	movl   $0xffff9f00,-0x14(%rbp)
  426bf8:	e9 a4 03 00 00       	jmpq   426fa1 <mbedtls_cipher_crypt+0x5b1>
  426bfd:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  426c01:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  426c08:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  426c0c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  426c10:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  426c14:	48 83 38 00          	cmpq   $0x0,(%rax)
  426c18:	75 09                	jne    426c23 <mbedtls_cipher_crypt+0x233>
  426c1a:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  426c21:	eb 0d                	jmp    426c30 <mbedtls_cipher_crypt+0x240>
  426c23:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  426c27:	48 8b 00             	mov    (%rax),%rax
  426c2a:	8b 48 20             	mov    0x20(%rax),%ecx
  426c2d:	89 4d fc             	mov    %ecx,-0x4(%rbp)
  426c30:	8b 45 fc             	mov    -0x4(%rbp),%eax
  426c33:	89 c0                	mov    %eax,%eax
  426c35:	89 c1                	mov    %eax,%ecx
  426c37:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
  426c3b:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  426c3f:	48 8b 09             	mov    (%rcx),%rcx
  426c42:	83 79 04 01          	cmpl   $0x1,0x4(%rcx)
  426c46:	75 69                	jne    426cb1 <mbedtls_cipher_crypt+0x2c1>
  426c48:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  426c4c:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
  426c50:	74 0c                	je     426c5e <mbedtls_cipher_crypt+0x26e>
  426c52:	c7 45 ec 80 9d ff ff 	movl   $0xffff9d80,-0x14(%rbp)
  426c59:	e9 43 03 00 00       	jmpq   426fa1 <mbedtls_cipher_crypt+0x5b1>
  426c5e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  426c62:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  426c66:	48 89 01             	mov    %rax,(%rcx)
  426c69:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  426c6d:	48 8b 00             	mov    (%rax),%rax
  426c70:	48 8b 40 28          	mov    0x28(%rax),%rax
  426c74:	48 8b 40 08          	mov    0x8(%rax),%rax
  426c78:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  426c7c:	48 8b 79 50          	mov    0x50(%rcx),%rdi
  426c80:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  426c84:	8b 71 0c             	mov    0xc(%rcx),%esi
  426c87:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  426c8b:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  426c8f:	ff d0                	callq  *%rax
  426c91:	31 f6                	xor    %esi,%esi
  426c93:	89 45 bc             	mov    %eax,-0x44(%rbp)
  426c96:	39 c6                	cmp    %eax,%esi
  426c98:	74 0b                	je     426ca5 <mbedtls_cipher_crypt+0x2b5>
  426c9a:	8b 45 bc             	mov    -0x44(%rbp),%eax
  426c9d:	89 45 ec             	mov    %eax,-0x14(%rbp)
  426ca0:	e9 fc 02 00 00       	jmpq   426fa1 <mbedtls_cipher_crypt+0x5b1>
  426ca5:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  426cac:	e9 f0 02 00 00       	jmpq   426fa1 <mbedtls_cipher_crypt+0x5b1>
  426cb1:	31 c0                	xor    %eax,%eax
  426cb3:	89 c1                	mov    %eax,%ecx
  426cb5:	48 3b 4d b0          	cmp    -0x50(%rbp),%rcx
  426cb9:	75 0c                	jne    426cc7 <mbedtls_cipher_crypt+0x2d7>
  426cbb:	c7 45 ec 80 9c ff ff 	movl   $0xffff9c80,-0x14(%rbp)
  426cc2:	e9 da 02 00 00       	jmpq   426fa1 <mbedtls_cipher_crypt+0x5b1>
  426cc7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  426ccb:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
  426ccf:	75 29                	jne    426cfa <mbedtls_cipher_crypt+0x30a>
  426cd1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  426cd5:	48 83 78 30 00       	cmpq   $0x0,0x30(%rax)
  426cda:	75 12                	jne    426cee <mbedtls_cipher_crypt+0x2fe>
  426cdc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  426ce0:	31 c9                	xor    %ecx,%ecx
  426ce2:	89 ca                	mov    %ecx,%edx
  426ce4:	48 f7 75 b0          	divq   -0x50(%rbp)
  426ce8:	48 83 fa 00          	cmp    $0x0,%rdx
  426cec:	74 0c                	je     426cfa <mbedtls_cipher_crypt+0x30a>
  426cee:	c7 45 ec 00 9f ff ff 	movl   $0xffff9f00,-0x14(%rbp)
  426cf5:	e9 a7 02 00 00       	jmpq   426fa1 <mbedtls_cipher_crypt+0x5b1>
  426cfa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  426cfe:	48 8b 00             	mov    (%rax),%rax
  426d01:	83 78 04 02          	cmpl   $0x2,0x4(%rax)
  426d05:	0f 85 8f 02 00 00    	jne    426f9a <mbedtls_cipher_crypt+0x5aa>
  426d0b:	48 c7 45 a8 00 00 00 	movq   $0x0,-0x58(%rbp)
  426d12:	00 
  426d13:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  426d17:	83 78 0c 00          	cmpl   $0x0,0xc(%rax)
  426d1b:	75 23                	jne    426d40 <mbedtls_cipher_crypt+0x350>
  426d1d:	31 c0                	xor    %eax,%eax
  426d1f:	89 c1                	mov    %eax,%ecx
  426d21:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  426d25:	48 3b 4a 10          	cmp    0x10(%rdx),%rcx
  426d29:	74 15                	je     426d40 <mbedtls_cipher_crypt+0x350>
  426d2b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  426d2f:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  426d33:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  426d37:	48 2b 4a 30          	sub    0x30(%rdx),%rcx
  426d3b:	48 39 c8             	cmp    %rcx,%rax
  426d3e:	76 4c                	jbe    426d8c <mbedtls_cipher_crypt+0x39c>
  426d40:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  426d44:	83 78 0c 00          	cmpl   $0x0,0xc(%rax)
  426d48:	75 23                	jne    426d6d <mbedtls_cipher_crypt+0x37d>
  426d4a:	31 c0                	xor    %eax,%eax
  426d4c:	89 c1                	mov    %eax,%ecx
  426d4e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  426d52:	48 3b 4a 10          	cmp    0x10(%rdx),%rcx
  426d56:	75 15                	jne    426d6d <mbedtls_cipher_crypt+0x37d>
  426d58:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  426d5c:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  426d60:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  426d64:	48 2b 4a 30          	sub    0x30(%rdx),%rcx
  426d68:	48 39 c8             	cmp    %rcx,%rax
  426d6b:	72 1f                	jb     426d8c <mbedtls_cipher_crypt+0x39c>
  426d6d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  426d71:	83 78 0c 01          	cmpl   $0x1,0xc(%rax)
  426d75:	75 51                	jne    426dc8 <mbedtls_cipher_crypt+0x3d8>
  426d77:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  426d7b:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  426d7f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  426d83:	48 2b 4a 30          	sub    0x30(%rdx),%rcx
  426d87:	48 39 c8             	cmp    %rcx,%rax
  426d8a:	73 3c                	jae    426dc8 <mbedtls_cipher_crypt+0x3d8>
  426d8c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  426d90:	48 83 c0 20          	add    $0x20,%rax
  426d94:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  426d98:	48 03 41 30          	add    0x30(%rcx),%rax
  426d9c:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  426da0:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  426da4:	48 89 c7             	mov    %rax,%rdi
  426da7:	e8 c4 a3 fd ff       	callq  401170 <memcpy@plt>
  426dac:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  426db0:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  426db4:	48 03 41 30          	add    0x30(%rcx),%rax
  426db8:	48 89 41 30          	mov    %rax,0x30(%rcx)
  426dbc:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  426dc3:	e9 d9 01 00 00       	jmpq   426fa1 <mbedtls_cipher_crypt+0x5b1>
  426dc8:	31 c0                	xor    %eax,%eax
  426dca:	89 c1                	mov    %eax,%ecx
  426dcc:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  426dd0:	48 3b 4a 30          	cmp    0x30(%rdx),%rcx
  426dd4:	0f 84 bd 00 00 00    	je     426e97 <mbedtls_cipher_crypt+0x4a7>
  426dda:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  426dde:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  426de2:	48 2b 41 30          	sub    0x30(%rcx),%rax
  426de6:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  426dea:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  426dee:	48 83 c0 20          	add    $0x20,%rax
  426df2:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  426df6:	48 03 41 30          	add    0x30(%rcx),%rax
  426dfa:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  426dfe:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
  426e02:	48 89 c7             	mov    %rax,%rdi
  426e05:	e8 66 a3 fd ff       	callq  401170 <memcpy@plt>
  426e0a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  426e0e:	48 8b 00             	mov    (%rax),%rax
  426e11:	48 8b 40 28          	mov    0x28(%rax),%rax
  426e15:	48 8b 40 10          	mov    0x10(%rax),%rax
  426e19:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  426e1d:	48 8b 79 50          	mov    0x50(%rcx),%rdi
  426e21:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  426e25:	8b 71 0c             	mov    0xc(%rcx),%esi
  426e28:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
  426e2c:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  426e30:	48 83 c1 38          	add    $0x38,%rcx
  426e34:	4c 8b 45 e0          	mov    -0x20(%rbp),%r8
  426e38:	49 83 c0 20          	add    $0x20,%r8
  426e3c:	4c 8b 4d c8          	mov    -0x38(%rbp),%r9
  426e40:	ff d0                	callq  *%rax
  426e42:	31 f6                	xor    %esi,%esi
  426e44:	89 45 bc             	mov    %eax,-0x44(%rbp)
  426e47:	39 c6                	cmp    %eax,%esi
  426e49:	74 0b                	je     426e56 <mbedtls_cipher_crypt+0x466>
  426e4b:	8b 45 bc             	mov    -0x44(%rbp),%eax
  426e4e:	89 45 ec             	mov    %eax,-0x14(%rbp)
  426e51:	e9 4b 01 00 00       	jmpq   426fa1 <mbedtls_cipher_crypt+0x5b1>
  426e56:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  426e5a:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  426e5e:	48 03 01             	add    (%rcx),%rax
  426e61:	48 89 01             	mov    %rax,(%rcx)
  426e64:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  426e68:	48 03 45 c8          	add    -0x38(%rbp),%rax
  426e6c:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  426e70:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  426e74:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
  426e7b:	00 
  426e7c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  426e80:	48 03 45 d8          	add    -0x28(%rbp),%rax
  426e84:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  426e88:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  426e8c:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  426e90:	48 29 c1             	sub    %rax,%rcx
  426e93:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  426e97:	31 c0                	xor    %eax,%eax
  426e99:	89 c1                	mov    %eax,%ecx
  426e9b:	48 3b 4d d0          	cmp    -0x30(%rbp),%rcx
  426e9f:	0f 84 92 00 00 00    	je     426f37 <mbedtls_cipher_crypt+0x547>
  426ea5:	31 c0                	xor    %eax,%eax
  426ea7:	89 c1                	mov    %eax,%ecx
  426ea9:	48 3b 4d b0          	cmp    -0x50(%rbp),%rcx
  426ead:	75 0c                	jne    426ebb <mbedtls_cipher_crypt+0x4cb>
  426eaf:	c7 45 ec 80 9c ff ff 	movl   $0xffff9c80,-0x14(%rbp)
  426eb6:	e9 e6 00 00 00       	jmpq   426fa1 <mbedtls_cipher_crypt+0x5b1>
  426ebb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  426ebf:	31 c9                	xor    %ecx,%ecx
  426ec1:	89 ca                	mov    %ecx,%edx
  426ec3:	48 f7 75 b0          	divq   -0x50(%rbp)
  426ec7:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
  426ecb:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
  426ed0:	75 20                	jne    426ef2 <mbedtls_cipher_crypt+0x502>
  426ed2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  426ed6:	83 78 0c 00          	cmpl   $0x0,0xc(%rax)
  426eda:	75 16                	jne    426ef2 <mbedtls_cipher_crypt+0x502>
  426edc:	31 c0                	xor    %eax,%eax
  426ede:	89 c1                	mov    %eax,%ecx
  426ee0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  426ee4:	48 3b 4a 10          	cmp    0x10(%rdx),%rcx
  426ee8:	74 08                	je     426ef2 <mbedtls_cipher_crypt+0x502>
  426eea:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  426eee:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  426ef2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  426ef6:	48 83 c0 20          	add    $0x20,%rax
  426efa:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  426efe:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  426f02:	48 2b 55 a8          	sub    -0x58(%rbp),%rdx
  426f06:	48 01 d1             	add    %rdx,%rcx
  426f09:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
  426f0d:	48 89 c7             	mov    %rax,%rdi
  426f10:	48 89 ce             	mov    %rcx,%rsi
  426f13:	e8 58 a2 fd ff       	callq  401170 <memcpy@plt>
  426f18:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  426f1c:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  426f20:	48 03 41 30          	add    0x30(%rcx),%rax
  426f24:	48 89 41 30          	mov    %rax,0x30(%rcx)
  426f28:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  426f2c:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  426f30:	48 29 c1             	sub    %rax,%rcx
  426f33:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  426f37:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  426f3c:	74 53                	je     426f91 <mbedtls_cipher_crypt+0x5a1>
  426f3e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  426f42:	48 8b 00             	mov    (%rax),%rax
  426f45:	48 8b 40 28          	mov    0x28(%rax),%rax
  426f49:	48 8b 40 10          	mov    0x10(%rax),%rax
  426f4d:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  426f51:	48 8b 79 50          	mov    0x50(%rcx),%rdi
  426f55:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  426f59:	8b 71 0c             	mov    0xc(%rcx),%esi
  426f5c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  426f60:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  426f64:	48 83 c1 38          	add    $0x38,%rcx
  426f68:	4c 8b 45 d8          	mov    -0x28(%rbp),%r8
  426f6c:	4c 8b 4d c8          	mov    -0x38(%rbp),%r9
  426f70:	ff d0                	callq  *%rax
  426f72:	31 f6                	xor    %esi,%esi
  426f74:	89 45 bc             	mov    %eax,-0x44(%rbp)
  426f77:	39 c6                	cmp    %eax,%esi
  426f79:	74 08                	je     426f83 <mbedtls_cipher_crypt+0x593>
  426f7b:	8b 45 bc             	mov    -0x44(%rbp),%eax
  426f7e:	89 45 ec             	mov    %eax,-0x14(%rbp)
  426f81:	eb 1e                	jmp    426fa1 <mbedtls_cipher_crypt+0x5b1>
  426f83:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  426f87:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  426f8b:	48 03 01             	add    (%rcx),%rax
  426f8e:	48 89 01             	mov    %rax,(%rcx)
  426f91:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  426f98:	eb 07                	jmp    426fa1 <mbedtls_cipher_crypt+0x5b1>
  426f9a:	c7 45 ec 80 9f ff ff 	movl   $0xffff9f80,-0x14(%rbp)
  426fa1:	8b 45 ec             	mov    -0x14(%rbp),%eax
  426fa4:	89 85 c4 fe ff ff    	mov    %eax,-0x13c(%rbp)
  426faa:	83 f8 00             	cmp    $0x0,%eax
  426fad:	74 11                	je     426fc0 <mbedtls_cipher_crypt+0x5d0>
  426faf:	8b 85 c4 fe ff ff    	mov    -0x13c(%rbp),%eax
  426fb5:	89 85 fc fe ff ff    	mov    %eax,-0x104(%rbp)
  426fbb:	e9 ff 04 00 00       	jmpq   4274bf <mbedtls_cipher_crypt+0xacf>
  426fc0:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
  426fc7:	48 8b 8d c8 fe ff ff 	mov    -0x138(%rbp),%rcx
  426fce:	48 8b 55 10          	mov    0x10(%rbp),%rdx
  426fd2:	48 03 0a             	add    (%rdx),%rcx
  426fd5:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
  426fdc:	48 89 8d 30 ff ff ff 	mov    %rcx,-0xd0(%rbp)
  426fe3:	48 8d 85 b8 fe ff ff 	lea    -0x148(%rbp),%rax
  426fea:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
  426ff1:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  426ff8:	48 83 38 00          	cmpq   $0x0,(%rax)
  426ffc:	75 0f                	jne    42700d <mbedtls_cipher_crypt+0x61d>
  426ffe:	c7 85 44 ff ff ff 00 	movl   $0xffff9f00,-0xbc(%rbp)
  427005:	9f ff ff 
  427008:	e9 78 04 00 00       	jmpq   427485 <mbedtls_cipher_crypt+0xa95>
  42700d:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  427014:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  42701b:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  427022:	48 8b 00             	mov    (%rax),%rax
  427025:	b9 03 00 00 00       	mov    $0x3,%ecx
  42702a:	3b 48 04             	cmp    0x4(%rax),%ecx
  42702d:	74 64                	je     427093 <mbedtls_cipher_crypt+0x6a3>
  42702f:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  427036:	48 8b 00             	mov    (%rax),%rax
  427039:	b9 04 00 00 00       	mov    $0x4,%ecx
  42703e:	3b 48 04             	cmp    0x4(%rax),%ecx
  427041:	74 50                	je     427093 <mbedtls_cipher_crypt+0x6a3>
  427043:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  42704a:	48 8b 00             	mov    (%rax),%rax
  42704d:	b9 05 00 00 00       	mov    $0x5,%ecx
  427052:	3b 48 04             	cmp    0x4(%rax),%ecx
  427055:	74 3c                	je     427093 <mbedtls_cipher_crypt+0x6a3>
  427057:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  42705e:	48 8b 00             	mov    (%rax),%rax
  427061:	b9 06 00 00 00       	mov    $0x6,%ecx
  427066:	3b 48 04             	cmp    0x4(%rax),%ecx
  427069:	74 28                	je     427093 <mbedtls_cipher_crypt+0x6a3>
  42706b:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  427072:	48 8b 00             	mov    (%rax),%rax
  427075:	b9 09 00 00 00       	mov    $0x9,%ecx
  42707a:	3b 48 04             	cmp    0x4(%rax),%ecx
  42707d:	74 14                	je     427093 <mbedtls_cipher_crypt+0x6a3>
  42707f:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  427086:	48 8b 00             	mov    (%rax),%rax
  427089:	b9 07 00 00 00       	mov    $0x7,%ecx
  42708e:	3b 48 04             	cmp    0x4(%rax),%ecx
  427091:	75 0f                	jne    4270a2 <mbedtls_cipher_crypt+0x6b2>
  427093:	c7 85 44 ff ff ff 00 	movl   $0x0,-0xbc(%rbp)
  42709a:	00 00 00 
  42709d:	e9 e3 03 00 00       	jmpq   427485 <mbedtls_cipher_crypt+0xa95>
  4270a2:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  4270a9:	48 8b 00             	mov    (%rax),%rax
  4270ac:	b9 48 00 00 00       	mov    $0x48,%ecx
  4270b1:	3b 08                	cmp    (%rax),%ecx
  4270b3:	74 13                	je     4270c8 <mbedtls_cipher_crypt+0x6d8>
  4270b5:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  4270bc:	48 8b 00             	mov    (%rax),%rax
  4270bf:	b9 49 00 00 00       	mov    $0x49,%ecx
  4270c4:	3b 08                	cmp    (%rax),%ecx
  4270c6:	75 0f                	jne    4270d7 <mbedtls_cipher_crypt+0x6e7>
  4270c8:	c7 85 44 ff ff ff 00 	movl   $0x0,-0xbc(%rbp)
  4270cf:	00 00 00 
  4270d2:	e9 ae 03 00 00       	jmpq   427485 <mbedtls_cipher_crypt+0xa95>
  4270d7:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  4270de:	48 8b 00             	mov    (%rax),%rax
  4270e1:	b9 01 00 00 00       	mov    $0x1,%ecx
  4270e6:	3b 48 04             	cmp    0x4(%rax),%ecx
  4270e9:	75 2c                	jne    427117 <mbedtls_cipher_crypt+0x727>
  4270eb:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  4270f2:	48 83 78 30 00       	cmpq   $0x0,0x30(%rax)
  4270f7:	74 0f                	je     427108 <mbedtls_cipher_crypt+0x718>
  4270f9:	c7 85 44 ff ff ff 80 	movl   $0xffff9d80,-0xbc(%rbp)
  427100:	9d ff ff 
  427103:	e9 7d 03 00 00       	jmpq   427485 <mbedtls_cipher_crypt+0xa95>
  427108:	c7 85 44 ff ff ff 00 	movl   $0x0,-0xbc(%rbp)
  42710f:	00 00 00 
  427112:	e9 6e 03 00 00       	jmpq   427485 <mbedtls_cipher_crypt+0xa95>
  427117:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  42711e:	48 8b 00             	mov    (%rax),%rax
  427121:	b9 02 00 00 00       	mov    $0x2,%ecx
  427126:	3b 48 04             	cmp    0x4(%rax),%ecx
  427129:	0f 85 4c 03 00 00    	jne    42747b <mbedtls_cipher_crypt+0xa8b>
  42712f:	c7 85 24 ff ff ff 00 	movl   $0x0,-0xdc(%rbp)
  427136:	00 00 00 
  427139:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  427140:	b9 01 00 00 00       	mov    $0x1,%ecx
  427145:	3b 48 0c             	cmp    0xc(%rax),%ecx
  427148:	0f 85 ea 00 00 00    	jne    427238 <mbedtls_cipher_crypt+0x848>
  42714e:	31 c0                	xor    %eax,%eax
  427150:	89 c1                	mov    %eax,%ecx
  427152:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
  427159:	48 3b 4a 10          	cmp    0x10(%rdx),%rcx
  42715d:	75 2f                	jne    42718e <mbedtls_cipher_crypt+0x79e>
  42715f:	31 c0                	xor    %eax,%eax
  427161:	89 c1                	mov    %eax,%ecx
  427163:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
  42716a:	48 3b 4a 30          	cmp    0x30(%rdx),%rcx
  42716e:	74 0f                	je     42717f <mbedtls_cipher_crypt+0x78f>
  427170:	c7 85 44 ff ff ff 80 	movl   $0xffff9d80,-0xbc(%rbp)
  427177:	9d ff ff 
  42717a:	e9 06 03 00 00       	jmpq   427485 <mbedtls_cipher_crypt+0xa95>
  42717f:	c7 85 44 ff ff ff 00 	movl   $0x0,-0xbc(%rbp)
  427186:	00 00 00 
  427189:	e9 f7 02 00 00       	jmpq   427485 <mbedtls_cipher_crypt+0xa95>
  42718e:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  427195:	48 8b 40 10          	mov    0x10(%rax),%rax
  427199:	48 8b 8d 38 ff ff ff 	mov    -0xc8(%rbp),%rcx
  4271a0:	48 83 c1 20          	add    $0x20,%rcx
  4271a4:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
  4271ab:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
  4271b2:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
  4271b9:	48 83 3a 00          	cmpq   $0x0,(%rdx)
  4271bd:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
  4271c4:	48 89 8d a0 fe ff ff 	mov    %rcx,-0x160(%rbp)
  4271cb:	75 0c                	jne    4271d9 <mbedtls_cipher_crypt+0x7e9>
  4271cd:	c7 85 54 ff ff ff 00 	movl   $0x0,-0xac(%rbp)
  4271d4:	00 00 00 
  4271d7:	eb 36                	jmp    42720f <mbedtls_cipher_crypt+0x81f>
  4271d9:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  4271e0:	48 83 78 48 00       	cmpq   $0x0,0x48(%rax)
  4271e5:	74 15                	je     4271fc <mbedtls_cipher_crypt+0x80c>
  4271e7:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  4271ee:	48 8b 40 48          	mov    0x48(%rax),%rax
  4271f2:	89 c1                	mov    %eax,%ecx
  4271f4:	89 8d 54 ff ff ff    	mov    %ecx,-0xac(%rbp)
  4271fa:	eb 13                	jmp    42720f <mbedtls_cipher_crypt+0x81f>
  4271fc:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  427203:	48 8b 00             	mov    (%rax),%rax
  427206:	8b 48 18             	mov    0x18(%rax),%ecx
  427209:	89 8d 54 ff ff ff    	mov    %ecx,-0xac(%rbp)
  42720f:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
  427215:	48 63 f0             	movslq %eax,%rsi
  427218:	48 8b 8d 38 ff ff ff 	mov    -0xc8(%rbp),%rcx
  42721f:	48 8b 51 30          	mov    0x30(%rcx),%rdx
  427223:	48 8b bd a0 fe ff ff 	mov    -0x160(%rbp),%rdi
  42722a:	48 8b 8d a8 fe ff ff 	mov    -0x158(%rbp),%rcx
  427231:	ff d1                	callq  *%rcx
  427233:	e9 93 00 00 00       	jmpq   4272cb <mbedtls_cipher_crypt+0x8db>
  427238:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  42723f:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
  427246:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  42724d:	48 83 38 00          	cmpq   $0x0,(%rax)
  427251:	75 0c                	jne    42725f <mbedtls_cipher_crypt+0x86f>
  427253:	c7 85 74 ff ff ff 00 	movl   $0x0,-0x8c(%rbp)
  42725a:	00 00 00 
  42725d:	eb 13                	jmp    427272 <mbedtls_cipher_crypt+0x882>
  42725f:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  427266:	48 8b 00             	mov    (%rax),%rax
  427269:	8b 48 20             	mov    0x20(%rax),%ecx
  42726c:	89 8d 74 ff ff ff    	mov    %ecx,-0x8c(%rbp)
  427272:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
  427278:	89 c0                	mov    %eax,%eax
  42727a:	89 c1                	mov    %eax,%ecx
  42727c:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
  427283:	48 3b 4a 30          	cmp    0x30(%rdx),%rcx
  427287:	74 40                	je     4272c9 <mbedtls_cipher_crypt+0x8d9>
  427289:	31 c0                	xor    %eax,%eax
  42728b:	89 c1                	mov    %eax,%ecx
  42728d:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
  427294:	48 3b 4a 10          	cmp    0x10(%rdx),%rcx
  427298:	75 20                	jne    4272ba <mbedtls_cipher_crypt+0x8ca>
  42729a:	31 c0                	xor    %eax,%eax
  42729c:	89 c1                	mov    %eax,%ecx
  42729e:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
  4272a5:	48 3b 4a 30          	cmp    0x30(%rdx),%rcx
  4272a9:	75 0f                	jne    4272ba <mbedtls_cipher_crypt+0x8ca>
  4272ab:	c7 85 44 ff ff ff 00 	movl   $0x0,-0xbc(%rbp)
  4272b2:	00 00 00 
  4272b5:	e9 cb 01 00 00       	jmpq   427485 <mbedtls_cipher_crypt+0xa95>
  4272ba:	c7 85 44 ff ff ff 80 	movl   $0xffff9d80,-0xbc(%rbp)
  4272c1:	9d ff ff 
  4272c4:	e9 bc 01 00 00       	jmpq   427485 <mbedtls_cipher_crypt+0xa95>
  4272c9:	eb 00                	jmp    4272cb <mbedtls_cipher_crypt+0x8db>
  4272cb:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  4272d2:	48 8b 00             	mov    (%rax),%rax
  4272d5:	48 8b 40 28          	mov    0x28(%rax),%rax
  4272d9:	48 8b 40 10          	mov    0x10(%rax),%rax
  4272dd:	48 8b 8d 38 ff ff ff 	mov    -0xc8(%rbp),%rcx
  4272e4:	48 8b 79 50          	mov    0x50(%rcx),%rdi
  4272e8:	48 8b 8d 38 ff ff ff 	mov    -0xc8(%rbp),%rcx
  4272ef:	8b 71 0c             	mov    0xc(%rcx),%esi
  4272f2:	48 8b 8d 38 ff ff ff 	mov    -0xc8(%rbp),%rcx
  4272f9:	48 89 4d 88          	mov    %rcx,-0x78(%rbp)
  4272fd:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
  427301:	48 83 39 00          	cmpq   $0x0,(%rcx)
  427305:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
  42730c:	48 89 bd 90 fe ff ff 	mov    %rdi,-0x170(%rbp)
  427313:	89 b5 8c fe ff ff    	mov    %esi,-0x174(%rbp)
  427319:	75 09                	jne    427324 <mbedtls_cipher_crypt+0x934>
  42731b:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%rbp)
  427322:	eb 0d                	jmp    427331 <mbedtls_cipher_crypt+0x941>
  427324:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  427328:	48 8b 00             	mov    (%rax),%rax
  42732b:	8b 48 20             	mov    0x20(%rax),%ecx
  42732e:	89 4d 94             	mov    %ecx,-0x6c(%rbp)
  427331:	8b 45 94             	mov    -0x6c(%rbp),%eax
  427334:	89 c0                	mov    %eax,%eax
  427336:	89 c2                	mov    %eax,%edx
  427338:	48 8b 8d 38 ff ff ff 	mov    -0xc8(%rbp),%rcx
  42733f:	48 83 c1 38          	add    $0x38,%rcx
  427343:	48 8b b5 38 ff ff ff 	mov    -0xc8(%rbp),%rsi
  42734a:	48 83 c6 20          	add    $0x20,%rsi
  42734e:	4c 8b 8d 30 ff ff ff 	mov    -0xd0(%rbp),%r9
  427355:	48 8b bd 90 fe ff ff 	mov    -0x170(%rbp),%rdi
  42735c:	8b 85 8c fe ff ff    	mov    -0x174(%rbp),%eax
  427362:	48 89 b5 80 fe ff ff 	mov    %rsi,-0x180(%rbp)
  427369:	89 c6                	mov    %eax,%esi
  42736b:	4c 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%r8
  427372:	4c 8b 95 98 fe ff ff 	mov    -0x168(%rbp),%r10
  427379:	41 ff d2             	callq  *%r10
  42737c:	31 f6                	xor    %esi,%esi
  42737e:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%rbp)
  427384:	39 c6                	cmp    %eax,%esi
  427386:	74 11                	je     427399 <mbedtls_cipher_crypt+0x9a9>
  427388:	8b 85 24 ff ff ff    	mov    -0xdc(%rbp),%eax
  42738e:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
  427394:	e9 ec 00 00 00       	jmpq   427485 <mbedtls_cipher_crypt+0xa95>
  427399:	31 c0                	xor    %eax,%eax
  42739b:	48 8b 8d 38 ff ff ff 	mov    -0xc8(%rbp),%rcx
  4273a2:	3b 41 0c             	cmp    0xc(%rcx),%eax
  4273a5:	75 7a                	jne    427421 <mbedtls_cipher_crypt+0xa31>
  4273a7:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  4273ae:	48 8b 40 18          	mov    0x18(%rax),%rax
  4273b2:	48 8b bd 30 ff ff ff 	mov    -0xd0(%rbp),%rdi
  4273b9:	48 8b 8d 38 ff ff ff 	mov    -0xc8(%rbp),%rcx
  4273c0:	48 89 8d 78 ff ff ff 	mov    %rcx,-0x88(%rbp)
  4273c7:	48 8b 8d 78 ff ff ff 	mov    -0x88(%rbp),%rcx
  4273ce:	48 83 39 00          	cmpq   $0x0,(%rcx)
  4273d2:	48 89 85 78 fe ff ff 	mov    %rax,-0x188(%rbp)
  4273d9:	48 89 bd 70 fe ff ff 	mov    %rdi,-0x190(%rbp)
  4273e0:	75 09                	jne    4273eb <mbedtls_cipher_crypt+0x9fb>
  4273e2:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%rbp)
  4273e9:	eb 10                	jmp    4273fb <mbedtls_cipher_crypt+0xa0b>
  4273eb:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  4273f2:	48 8b 00             	mov    (%rax),%rax
  4273f5:	8b 48 20             	mov    0x20(%rax),%ecx
  4273f8:	89 4d 84             	mov    %ecx,-0x7c(%rbp)
  4273fb:	8b 45 84             	mov    -0x7c(%rbp),%eax
  4273fe:	89 c0                	mov    %eax,%eax
  427400:	89 c6                	mov    %eax,%esi
  427402:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
  427409:	48 8b bd 70 fe ff ff 	mov    -0x190(%rbp),%rdi
  427410:	48 8b 8d 78 fe ff ff 	mov    -0x188(%rbp),%rcx
  427417:	ff d1                	callq  *%rcx
  427419:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
  42741f:	eb 64                	jmp    427485 <mbedtls_cipher_crypt+0xa95>
  427421:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  427428:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
  42742f:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
  427436:	48 83 38 00          	cmpq   $0x0,(%rax)
  42743a:	75 0c                	jne    427448 <mbedtls_cipher_crypt+0xa58>
  42743c:	c7 85 64 ff ff ff 00 	movl   $0x0,-0x9c(%rbp)
  427443:	00 00 00 
  427446:	eb 13                	jmp    42745b <mbedtls_cipher_crypt+0xa6b>
  427448:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
  42744f:	48 8b 00             	mov    (%rax),%rax
  427452:	8b 48 20             	mov    0x20(%rax),%ecx
  427455:	89 8d 64 ff ff ff    	mov    %ecx,-0x9c(%rbp)
  42745b:	8b 85 64 ff ff ff    	mov    -0x9c(%rbp),%eax
  427461:	89 c0                	mov    %eax,%eax
  427463:	89 c1                	mov    %eax,%ecx
  427465:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
  42746c:	48 89 0a             	mov    %rcx,(%rdx)
  42746f:	c7 85 44 ff ff ff 00 	movl   $0x0,-0xbc(%rbp)
  427476:	00 00 00 
  427479:	eb 0a                	jmp    427485 <mbedtls_cipher_crypt+0xa95>
  42747b:	c7 85 44 ff ff ff 80 	movl   $0xffff9f80,-0xbc(%rbp)
  427482:	9f ff ff 
  427485:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
  42748b:	89 85 c4 fe ff ff    	mov    %eax,-0x13c(%rbp)
  427491:	83 f8 00             	cmp    $0x0,%eax
  427494:	74 0e                	je     4274a4 <mbedtls_cipher_crypt+0xab4>
  427496:	8b 85 c4 fe ff ff    	mov    -0x13c(%rbp),%eax
  42749c:	89 85 fc fe ff ff    	mov    %eax,-0x104(%rbp)
  4274a2:	eb 1b                	jmp    4274bf <mbedtls_cipher_crypt+0xacf>
  4274a4:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  4274ab:	48 8b 4d 10          	mov    0x10(%rbp),%rcx
  4274af:	48 03 01             	add    (%rcx),%rax
  4274b2:	48 89 01             	mov    %rax,(%rcx)
  4274b5:	c7 85 fc fe ff ff 00 	movl   $0x0,-0x104(%rbp)
  4274bc:	00 00 00 
  4274bf:	8b 85 fc fe ff ff    	mov    -0x104(%rbp),%eax
  4274c5:	89 85 6c fe ff ff    	mov    %eax,-0x194(%rbp)
  4274cb:	e8 86 e4 01 00       	callq  445956 <writeback_cache>
  4274d0:	8b 85 6c fe ff ff    	mov    -0x194(%rbp),%eax
  4274d6:	48 81 c4 a0 01 00 00 	add    $0x1a0,%rsp
  4274dd:	5d                   	pop    %rbp
  4274de:	c3                   	retq   
  4274df:	90                   	nop

00000000004274e0 <des3_crypt_ecb_wrap>:
  4274e0:	55                   	push   %rbp
  4274e1:	48 89 e5             	mov    %rsp,%rbp
  4274e4:	48 83 ec 30          	sub    $0x30,%rsp
  4274e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4274ec:	89 75 f4             	mov    %esi,-0xc(%rbp)
  4274ef:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  4274f3:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  4274f7:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  4274fb:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  4274ff:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  427503:	48 89 cf             	mov    %rcx,%rdi
  427506:	e8 f5 25 00 00       	callq  429b00 <mbedtls_des3_crypt_ecb>
  42750b:	89 45 dc             	mov    %eax,-0x24(%rbp)
  42750e:	e8 43 e4 01 00       	callq  445956 <writeback_cache>
  427513:	8b 45 dc             	mov    -0x24(%rbp),%eax
  427516:	48 83 c4 30          	add    $0x30,%rsp
  42751a:	5d                   	pop    %rbp
  42751b:	c3                   	retq   
  42751c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000427520 <des3_crypt_cbc_wrap>:
  427520:	55                   	push   %rbp
  427521:	48 89 e5             	mov    %rsp,%rbp
  427524:	48 83 ec 40          	sub    $0x40,%rsp
  427528:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42752c:	89 75 f4             	mov    %esi,-0xc(%rbp)
  42752f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  427533:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  427537:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
  42753b:	4c 89 4d d0          	mov    %r9,-0x30(%rbp)
  42753f:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  427543:	8b 75 f4             	mov    -0xc(%rbp),%esi
  427546:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  42754a:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  42754e:	4c 8b 45 d8          	mov    -0x28(%rbp),%r8
  427552:	4c 8b 4d d0          	mov    -0x30(%rbp),%r9
  427556:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  42755a:	48 89 cf             	mov    %rcx,%rdi
  42755d:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  427561:	e8 fa 2d 00 00       	callq  42a360 <mbedtls_des3_crypt_cbc>
  427566:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  427569:	e8 e8 e3 01 00       	callq  445956 <writeback_cache>
  42756e:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  427571:	48 83 c4 40          	add    $0x40,%rsp
  427575:	5d                   	pop    %rbp
  427576:	c3                   	retq   
  427577:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  42757e:	00 00 

0000000000427580 <des3_set3key_enc_wrap>:
  427580:	55                   	push   %rbp
  427581:	48 89 e5             	mov    %rsp,%rbp
  427584:	48 81 ec c0 01 00 00 	sub    $0x1c0,%rsp
  42758b:	48 8d 85 60 fe ff ff 	lea    -0x1a0(%rbp),%rax
  427592:	48 89 bd 58 fe ff ff 	mov    %rdi,-0x1a8(%rbp)
  427599:	48 89 b5 50 fe ff ff 	mov    %rsi,-0x1b0(%rbp)
  4275a0:	89 95 4c fe ff ff    	mov    %edx,-0x1b4(%rbp)
  4275a6:	48 8b b5 58 fe ff ff 	mov    -0x1a8(%rbp),%rsi
  4275ad:	48 8b bd 50 fe ff ff 	mov    -0x1b0(%rbp),%rdi
  4275b4:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  4275b8:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
  4275bc:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  4275c0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4275c4:	48 89 c6             	mov    %rax,%rsi
  4275c7:	e8 a4 1d 00 00       	callq  429370 <des3_set3key>
  4275cc:	31 f6                	xor    %esi,%esi
  4275ce:	48 8d 85 60 fe ff ff 	lea    -0x1a0(%rbp),%rax
  4275d5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4275d9:	48 c7 45 f0 80 01 00 	movq   $0x180,-0x10(%rbp)
  4275e0:	00 
  4275e1:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  4275e8:	00 
  4275e9:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  4275ed:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4275f1:	ff d0                	callq  *%rax
  4275f3:	48 89 85 40 fe ff ff 	mov    %rax,-0x1c0(%rbp)
  4275fa:	e8 57 e3 01 00       	callq  445956 <writeback_cache>
  4275ff:	31 c0                	xor    %eax,%eax
  427601:	48 81 c4 c0 01 00 00 	add    $0x1c0,%rsp
  427608:	5d                   	pop    %rbp
  427609:	c3                   	retq   
  42760a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000427610 <des3_set3key_dec_wrap>:
  427610:	55                   	push   %rbp
  427611:	48 89 e5             	mov    %rsp,%rbp
  427614:	48 81 ec c0 01 00 00 	sub    $0x1c0,%rsp
  42761b:	48 8d 85 60 fe ff ff 	lea    -0x1a0(%rbp),%rax
  427622:	48 89 bd 58 fe ff ff 	mov    %rdi,-0x1a8(%rbp)
  427629:	48 89 b5 50 fe ff ff 	mov    %rsi,-0x1b0(%rbp)
  427630:	89 95 4c fe ff ff    	mov    %edx,-0x1b4(%rbp)
  427636:	48 8b b5 58 fe ff ff 	mov    -0x1a8(%rbp),%rsi
  42763d:	48 8b bd 50 fe ff ff 	mov    -0x1b0(%rbp),%rdi
  427644:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  427648:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
  42764c:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  427650:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  427654:	48 89 c7             	mov    %rax,%rdi
  427657:	e8 14 1d 00 00       	callq  429370 <des3_set3key>
  42765c:	31 f6                	xor    %esi,%esi
  42765e:	48 8d 85 60 fe ff ff 	lea    -0x1a0(%rbp),%rax
  427665:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  427669:	48 c7 45 f0 80 01 00 	movq   $0x180,-0x10(%rbp)
  427670:	00 
  427671:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  427678:	00 
  427679:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42767d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  427681:	ff d0                	callq  *%rax
  427683:	48 89 85 40 fe ff ff 	mov    %rax,-0x1c0(%rbp)
  42768a:	e8 c7 e2 01 00       	callq  445956 <writeback_cache>
  42768f:	31 c0                	xor    %eax,%eax
  427691:	48 81 c4 c0 01 00 00 	add    $0x1c0,%rsp
  427698:	5d                   	pop    %rbp
  427699:	c3                   	retq   
  42769a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000004276a0 <des3_ctx_alloc>:
  4276a0:	55                   	push   %rbp
  4276a1:	48 89 e5             	mov    %rsp,%rbp
  4276a4:	48 83 ec 20          	sub    $0x20,%rsp
  4276a8:	b8 01 00 00 00       	mov    $0x1,%eax
  4276ad:	89 c7                	mov    %eax,%edi
  4276af:	b8 80 01 00 00       	mov    $0x180,%eax
  4276b4:	89 c6                	mov    %eax,%esi
  4276b6:	e8 2f f1 01 00       	callq  4467ea <aes_calloc>
  4276bb:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4276bf:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  4276c4:	75 0a                	jne    4276d0 <des3_ctx_alloc+0x30>
  4276c6:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
  4276cd:	00 
  4276ce:	eb 25                	jmp    4276f5 <des3_ctx_alloc+0x55>
  4276d0:	31 f6                	xor    %esi,%esi
  4276d2:	b8 80 01 00 00       	mov    $0x180,%eax
  4276d7:	89 c2                	mov    %eax,%edx
  4276d9:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4276dd:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
  4276e1:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  4276e5:	48 89 cf             	mov    %rcx,%rdi
  4276e8:	e8 33 99 fd ff       	callq  401020 <memset@plt>
  4276ed:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4276f1:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
  4276f5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4276f9:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  4276fd:	e8 54 e2 01 00       	callq  445956 <writeback_cache>
  427702:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  427706:	48 83 c4 20          	add    $0x20,%rsp
  42770a:	5d                   	pop    %rbp
  42770b:	c3                   	retq   
  42770c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000427710 <des3_ctx_free>:
  427710:	55                   	push   %rbp
  427711:	48 89 e5             	mov    %rsp,%rbp
  427714:	48 83 ec 30          	sub    $0x30,%rsp
  427718:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
  42771c:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  427720:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  427724:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  427729:	75 02                	jne    42772d <des3_ctx_free+0x1d>
  42772b:	eb 28                	jmp    427755 <des3_ctx_free+0x45>
  42772d:	31 f6                	xor    %esi,%esi
  42772f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  427733:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  427737:	48 c7 45 f0 80 01 00 	movq   $0x180,-0x10(%rbp)
  42773e:	00 
  42773f:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  427746:	00 
  427747:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42774b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  42774f:	ff d0                	callq  *%rax
  427751:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  427755:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  427759:	e8 82 99 fd ff       	callq  4010e0 <free@plt>
  42775e:	e8 f3 e1 01 00       	callq  445956 <writeback_cache>
  427763:	48 83 c4 30          	add    $0x30,%rsp
  427767:	5d                   	pop    %rbp
  427768:	c3                   	retq   
  427769:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000427770 <des3_set2key_enc_wrap>:
  427770:	55                   	push   %rbp
  427771:	48 89 e5             	mov    %rsp,%rbp
  427774:	48 81 ec c0 01 00 00 	sub    $0x1c0,%rsp
  42777b:	48 8d 85 60 fe ff ff 	lea    -0x1a0(%rbp),%rax
  427782:	48 89 bd 58 fe ff ff 	mov    %rdi,-0x1a8(%rbp)
  427789:	48 89 b5 50 fe ff ff 	mov    %rsi,-0x1b0(%rbp)
  427790:	89 95 4c fe ff ff    	mov    %edx,-0x1b4(%rbp)
  427796:	48 8b b5 58 fe ff ff 	mov    -0x1a8(%rbp),%rsi
  42779d:	48 8b bd 50 fe ff ff 	mov    -0x1b0(%rbp),%rdi
  4277a4:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  4277a8:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
  4277ac:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  4277b0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4277b4:	48 89 c6             	mov    %rax,%rsi
  4277b7:	e8 54 1a 00 00       	callq  429210 <des3_set2key>
  4277bc:	31 f6                	xor    %esi,%esi
  4277be:	48 8d 85 60 fe ff ff 	lea    -0x1a0(%rbp),%rax
  4277c5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4277c9:	48 c7 45 f0 80 01 00 	movq   $0x180,-0x10(%rbp)
  4277d0:	00 
  4277d1:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  4277d8:	00 
  4277d9:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  4277dd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4277e1:	ff d0                	callq  *%rax
  4277e3:	48 89 85 40 fe ff ff 	mov    %rax,-0x1c0(%rbp)
  4277ea:	e8 67 e1 01 00       	callq  445956 <writeback_cache>
  4277ef:	31 c0                	xor    %eax,%eax
  4277f1:	48 81 c4 c0 01 00 00 	add    $0x1c0,%rsp
  4277f8:	5d                   	pop    %rbp
  4277f9:	c3                   	retq   
  4277fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000427800 <des3_set2key_dec_wrap>:
  427800:	55                   	push   %rbp
  427801:	48 89 e5             	mov    %rsp,%rbp
  427804:	48 81 ec c0 01 00 00 	sub    $0x1c0,%rsp
  42780b:	48 8d 85 60 fe ff ff 	lea    -0x1a0(%rbp),%rax
  427812:	48 89 bd 58 fe ff ff 	mov    %rdi,-0x1a8(%rbp)
  427819:	48 89 b5 50 fe ff ff 	mov    %rsi,-0x1b0(%rbp)
  427820:	89 95 4c fe ff ff    	mov    %edx,-0x1b4(%rbp)
  427826:	48 8b b5 58 fe ff ff 	mov    -0x1a8(%rbp),%rsi
  42782d:	48 8b bd 50 fe ff ff 	mov    -0x1b0(%rbp),%rdi
  427834:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  427838:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
  42783c:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  427840:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  427844:	48 89 c7             	mov    %rax,%rdi
  427847:	e8 c4 19 00 00       	callq  429210 <des3_set2key>
  42784c:	31 f6                	xor    %esi,%esi
  42784e:	48 8d 85 60 fe ff ff 	lea    -0x1a0(%rbp),%rax
  427855:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  427859:	48 c7 45 f0 80 01 00 	movq   $0x180,-0x10(%rbp)
  427860:	00 
  427861:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  427868:	00 
  427869:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42786d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  427871:	ff d0                	callq  *%rax
  427873:	48 89 85 40 fe ff ff 	mov    %rax,-0x1c0(%rbp)
  42787a:	e8 d7 e0 01 00       	callq  445956 <writeback_cache>
  42787f:	31 c0                	xor    %eax,%eax
  427881:	48 81 c4 c0 01 00 00 	add    $0x1c0,%rsp
  427888:	5d                   	pop    %rbp
  427889:	c3                   	retq   
  42788a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000427890 <des_crypt_ecb_wrap>:
  427890:	55                   	push   %rbp
  427891:	48 89 e5             	mov    %rsp,%rbp
  427894:	48 83 ec 30          	sub    $0x30,%rsp
  427898:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42789c:	89 75 f4             	mov    %esi,-0xc(%rbp)
  42789f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  4278a3:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  4278a7:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  4278ab:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  4278af:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4278b3:	48 89 cf             	mov    %rcx,%rdi
  4278b6:	e8 05 1c 00 00       	callq  4294c0 <mbedtls_des_crypt_ecb>
  4278bb:	89 45 dc             	mov    %eax,-0x24(%rbp)
  4278be:	e8 93 e0 01 00       	callq  445956 <writeback_cache>
  4278c3:	8b 45 dc             	mov    -0x24(%rbp),%eax
  4278c6:	48 83 c4 30          	add    $0x30,%rsp
  4278ca:	5d                   	pop    %rbp
  4278cb:	c3                   	retq   
  4278cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004278d0 <des_crypt_cbc_wrap>:
  4278d0:	55                   	push   %rbp
  4278d1:	48 89 e5             	mov    %rsp,%rbp
  4278d4:	48 83 ec 40          	sub    $0x40,%rsp
  4278d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4278dc:	89 75 f4             	mov    %esi,-0xc(%rbp)
  4278df:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  4278e3:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  4278e7:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
  4278eb:	4c 89 4d d0          	mov    %r9,-0x30(%rbp)
  4278ef:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  4278f3:	8b 75 f4             	mov    -0xc(%rbp),%esi
  4278f6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4278fa:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  4278fe:	4c 8b 45 d8          	mov    -0x28(%rbp),%r8
  427902:	4c 8b 4d d0          	mov    -0x30(%rbp),%r9
  427906:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  42790a:	48 89 cf             	mov    %rcx,%rdi
  42790d:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  427911:	e8 4a 20 00 00       	callq  429960 <mbedtls_des_crypt_cbc>
  427916:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  427919:	e8 38 e0 01 00       	callq  445956 <writeback_cache>
  42791e:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  427921:	48 83 c4 40          	add    $0x40,%rsp
  427925:	5d                   	pop    %rbp
  427926:	c3                   	retq   
  427927:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  42792e:	00 00 

0000000000427930 <des_setkey_enc_wrap>:
  427930:	55                   	push   %rbp
  427931:	48 89 e5             	mov    %rsp,%rbp
  427934:	48 83 ec 30          	sub    $0x30,%rsp
  427938:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42793c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  427940:	89 55 dc             	mov    %edx,-0x24(%rbp)
  427943:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  427947:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  42794b:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)
  42794f:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  427953:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  427957:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42795b:	e8 80 12 00 00       	callq  428be0 <mbedtls_des_setkey>
  427960:	e8 f1 df 01 00       	callq  445956 <writeback_cache>
  427965:	31 c0                	xor    %eax,%eax
  427967:	48 83 c4 30          	add    $0x30,%rsp
  42796b:	5d                   	pop    %rbp
  42796c:	c3                   	retq   
  42796d:	0f 1f 00             	nopl   (%rax)

0000000000427970 <des_setkey_dec_wrap>:
  427970:	55                   	push   %rbp
  427971:	48 89 e5             	mov    %rsp,%rbp
  427974:	48 83 ec 30          	sub    $0x30,%rsp
  427978:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42797c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  427980:	89 55 ec             	mov    %edx,-0x14(%rbp)
  427983:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  427987:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  42798b:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
  42798f:	48 89 f7             	mov    %rsi,%rdi
  427992:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  427996:	e8 95 17 00 00       	callq  429130 <mbedtls_des_setkey_dec>
  42799b:	89 45 dc             	mov    %eax,-0x24(%rbp)
  42799e:	e8 b3 df 01 00       	callq  445956 <writeback_cache>
  4279a3:	8b 45 dc             	mov    -0x24(%rbp),%eax
  4279a6:	48 83 c4 30          	add    $0x30,%rsp
  4279aa:	5d                   	pop    %rbp
  4279ab:	c3                   	retq   
  4279ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004279b0 <des_ctx_alloc>:
  4279b0:	55                   	push   %rbp
  4279b1:	48 89 e5             	mov    %rsp,%rbp
  4279b4:	48 83 ec 20          	sub    $0x20,%rsp
  4279b8:	b8 01 00 00 00       	mov    $0x1,%eax
  4279bd:	89 c7                	mov    %eax,%edi
  4279bf:	b8 80 00 00 00       	mov    $0x80,%eax
  4279c4:	89 c6                	mov    %eax,%esi
  4279c6:	e8 1f ee 01 00       	callq  4467ea <aes_calloc>
  4279cb:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4279cf:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  4279d4:	75 0a                	jne    4279e0 <des_ctx_alloc+0x30>
  4279d6:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
  4279dd:	00 
  4279de:	eb 25                	jmp    427a05 <des_ctx_alloc+0x55>
  4279e0:	31 f6                	xor    %esi,%esi
  4279e2:	b8 80 00 00 00       	mov    $0x80,%eax
  4279e7:	89 c2                	mov    %eax,%edx
  4279e9:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4279ed:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
  4279f1:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  4279f5:	48 89 cf             	mov    %rcx,%rdi
  4279f8:	e8 23 96 fd ff       	callq  401020 <memset@plt>
  4279fd:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  427a01:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
  427a05:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  427a09:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  427a0d:	e8 44 df 01 00       	callq  445956 <writeback_cache>
  427a12:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  427a16:	48 83 c4 20          	add    $0x20,%rsp
  427a1a:	5d                   	pop    %rbp
  427a1b:	c3                   	retq   
  427a1c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000427a20 <des_ctx_free>:
  427a20:	55                   	push   %rbp
  427a21:	48 89 e5             	mov    %rsp,%rbp
  427a24:	48 83 ec 30          	sub    $0x30,%rsp
  427a28:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
  427a2c:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  427a30:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  427a34:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  427a39:	75 02                	jne    427a3d <des_ctx_free+0x1d>
  427a3b:	eb 28                	jmp    427a65 <des_ctx_free+0x45>
  427a3d:	31 f6                	xor    %esi,%esi
  427a3f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  427a43:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  427a47:	48 c7 45 f0 80 00 00 	movq   $0x80,-0x10(%rbp)
  427a4e:	00 
  427a4f:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  427a56:	00 
  427a57:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  427a5b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  427a5f:	ff d0                	callq  *%rax
  427a61:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  427a65:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  427a69:	e8 72 96 fd ff       	callq  4010e0 <free@plt>
  427a6e:	e8 e3 de 01 00       	callq  445956 <writeback_cache>
  427a73:	48 83 c4 30          	add    $0x30,%rsp
  427a77:	5d                   	pop    %rbp
  427a78:	c3                   	retq   
  427a79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000427a80 <aes_crypt_ecb_wrap>:
  427a80:	55                   	push   %rbp
  427a81:	48 89 e5             	mov    %rsp,%rbp
  427a84:	48 83 ec 50          	sub    $0x50,%rsp
  427a88:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
  427a8c:	89 75 cc             	mov    %esi,-0x34(%rbp)
  427a8f:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
  427a93:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
  427a97:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  427a9b:	8b 75 cc             	mov    -0x34(%rbp),%esi
  427a9e:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  427aa2:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
  427aa6:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
  427aaa:	89 75 ec             	mov    %esi,-0x14(%rbp)
  427aad:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
  427ab1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  427ab5:	83 7d ec 01          	cmpl   $0x1,-0x14(%rbp)
  427ab9:	75 16                	jne    427ad1 <aes_crypt_ecb_wrap+0x51>
  427abb:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  427abf:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  427ac3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  427ac7:	e8 d4 bb 01 00       	callq  4436a0 <mbedtls_internal_aes_encrypt>
  427acc:	89 45 fc             	mov    %eax,-0x4(%rbp)
  427acf:	eb 14                	jmp    427ae5 <aes_crypt_ecb_wrap+0x65>
  427ad1:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  427ad5:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  427ad9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  427add:	e8 be c5 01 00       	callq  4440a0 <mbedtls_internal_aes_decrypt>
  427ae2:	89 45 fc             	mov    %eax,-0x4(%rbp)
  427ae5:	8b 45 fc             	mov    -0x4(%rbp),%eax
  427ae8:	89 45 b4             	mov    %eax,-0x4c(%rbp)
  427aeb:	e8 66 de 01 00       	callq  445956 <writeback_cache>
  427af0:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  427af3:	48 83 c4 50          	add    $0x50,%rsp
  427af7:	5d                   	pop    %rbp
  427af8:	c3                   	retq   
  427af9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000427b00 <aes_crypt_cbc_wrap>:
  427b00:	55                   	push   %rbp
  427b01:	48 89 e5             	mov    %rsp,%rbp
  427b04:	48 83 ec 40          	sub    $0x40,%rsp
  427b08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  427b0c:	89 75 f4             	mov    %esi,-0xc(%rbp)
  427b0f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  427b13:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  427b17:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
  427b1b:	4c 89 4d d0          	mov    %r9,-0x30(%rbp)
  427b1f:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  427b23:	8b 75 f4             	mov    -0xc(%rbp),%esi
  427b26:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  427b2a:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  427b2e:	4c 8b 45 d8          	mov    -0x28(%rbp),%r8
  427b32:	4c 8b 4d d0          	mov    -0x30(%rbp),%r9
  427b36:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  427b3a:	48 89 cf             	mov    %rcx,%rdi
  427b3d:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  427b41:	e8 5a cf 01 00       	callq  444aa0 <mbedtls_aes_crypt_cbc>
  427b46:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  427b49:	e8 08 de 01 00       	callq  445956 <writeback_cache>
  427b4e:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  427b51:	48 83 c4 40          	add    $0x40,%rsp
  427b55:	5d                   	pop    %rbp
  427b56:	c3                   	retq   
  427b57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  427b5e:	00 00 

0000000000427b60 <aes_setkey_enc_wrap>:
  427b60:	55                   	push   %rbp
  427b61:	48 89 e5             	mov    %rsp,%rbp
  427b64:	48 83 ec 30          	sub    $0x30,%rsp
  427b68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  427b6c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  427b70:	89 55 ec             	mov    %edx,-0x14(%rbp)
  427b73:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  427b77:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  427b7b:	8b 55 ec             	mov    -0x14(%rbp),%edx
  427b7e:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
  427b82:	48 89 f7             	mov    %rsi,%rdi
  427b85:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  427b89:	e8 c2 ab 01 00       	callq  442750 <mbedtls_aes_setkey_enc>
  427b8e:	89 45 dc             	mov    %eax,-0x24(%rbp)
  427b91:	e8 c0 dd 01 00       	callq  445956 <writeback_cache>
  427b96:	8b 45 dc             	mov    -0x24(%rbp),%eax
  427b99:	48 83 c4 30          	add    $0x30,%rsp
  427b9d:	5d                   	pop    %rbp
  427b9e:	c3                   	retq   
  427b9f:	90                   	nop

0000000000427ba0 <aes_setkey_dec_wrap>:
  427ba0:	55                   	push   %rbp
  427ba1:	48 89 e5             	mov    %rsp,%rbp
  427ba4:	48 83 ec 30          	sub    $0x30,%rsp
  427ba8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  427bac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  427bb0:	89 55 ec             	mov    %edx,-0x14(%rbp)
  427bb3:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  427bb7:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  427bbb:	8b 55 ec             	mov    -0x14(%rbp),%edx
  427bbe:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
  427bc2:	48 89 f7             	mov    %rsi,%rdi
  427bc5:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  427bc9:	e8 32 b7 01 00       	callq  443300 <mbedtls_aes_setkey_dec>
  427bce:	89 45 dc             	mov    %eax,-0x24(%rbp)
  427bd1:	e8 80 dd 01 00       	callq  445956 <writeback_cache>
  427bd6:	8b 45 dc             	mov    -0x24(%rbp),%eax
  427bd9:	48 83 c4 30          	add    $0x30,%rsp
  427bdd:	5d                   	pop    %rbp
  427bde:	c3                   	retq   
  427bdf:	90                   	nop

0000000000427be0 <aes_ctx_alloc>:
  427be0:	55                   	push   %rbp
  427be1:	48 89 e5             	mov    %rsp,%rbp
  427be4:	48 83 ec 20          	sub    $0x20,%rsp
  427be8:	b8 01 00 00 00       	mov    $0x1,%eax
  427bed:	89 c7                	mov    %eax,%edi
  427bef:	b8 20 01 00 00       	mov    $0x120,%eax
  427bf4:	89 c6                	mov    %eax,%esi
  427bf6:	e8 ef eb 01 00       	callq  4467ea <aes_calloc>
  427bfb:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  427bff:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  427c04:	75 0a                	jne    427c10 <aes_ctx_alloc+0x30>
  427c06:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
  427c0d:	00 
  427c0e:	eb 25                	jmp    427c35 <aes_ctx_alloc+0x55>
  427c10:	31 f6                	xor    %esi,%esi
  427c12:	b8 20 01 00 00       	mov    $0x120,%eax
  427c17:	89 c2                	mov    %eax,%edx
  427c19:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  427c1d:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
  427c21:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  427c25:	48 89 cf             	mov    %rcx,%rdi
  427c28:	e8 f3 93 fd ff       	callq  401020 <memset@plt>
  427c2d:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  427c31:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
  427c35:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  427c39:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  427c3d:	e8 14 dd 01 00       	callq  445956 <writeback_cache>
  427c42:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  427c46:	48 83 c4 20          	add    $0x20,%rsp
  427c4a:	5d                   	pop    %rbp
  427c4b:	c3                   	retq   
  427c4c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000427c50 <aes_ctx_free>:
  427c50:	55                   	push   %rbp
  427c51:	48 89 e5             	mov    %rsp,%rbp
  427c54:	48 83 ec 30          	sub    $0x30,%rsp
  427c58:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
  427c5c:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  427c60:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  427c64:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  427c69:	75 02                	jne    427c6d <aes_ctx_free+0x1d>
  427c6b:	eb 28                	jmp    427c95 <aes_ctx_free+0x45>
  427c6d:	31 f6                	xor    %esi,%esi
  427c6f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  427c73:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  427c77:	48 c7 45 f0 20 01 00 	movq   $0x120,-0x10(%rbp)
  427c7e:	00 
  427c7f:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  427c86:	00 
  427c87:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  427c8b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  427c8f:	ff d0                	callq  *%rax
  427c91:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  427c95:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  427c99:	e8 42 94 fd ff       	callq  4010e0 <free@plt>
  427c9e:	e8 b3 dc 01 00       	callq  445956 <writeback_cache>
  427ca3:	48 83 c4 30          	add    $0x30,%rsp
  427ca7:	5d                   	pop    %rbp
  427ca8:	c3                   	retq   
  427ca9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000427cb0 <mbedtls_ctr_drbg_reseed>:
  427cb0:	55                   	push   %rbp
  427cb1:	48 89 e5             	mov    %rsp,%rbp
  427cb4:	48 81 ec e0 01 00 00 	sub    $0x1e0,%rsp
  427cbb:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
  427cbf:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
  427cc3:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
  427cc7:	48 c7 85 48 fe ff ff 	movq   $0x0,-0x1b8(%rbp)
  427cce:	00 00 00 00 
  427cd2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  427cd6:	48 81 7a 18 80 01 00 	cmpq   $0x180,0x18(%rdx)
  427cdd:	00 
  427cde:	77 18                	ja     427cf8 <mbedtls_ctr_drbg_reseed+0x48>
  427ce0:	b8 80 01 00 00       	mov    $0x180,%eax
  427ce5:	89 c1                	mov    %eax,%ecx
  427ce7:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  427ceb:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  427cef:	48 2b 4e 18          	sub    0x18(%rsi),%rcx
  427cf3:	48 39 ca             	cmp    %rcx,%rdx
  427cf6:	76 0c                	jbe    427d04 <mbedtls_ctr_drbg_reseed+0x54>
  427cf8:	c7 45 ec c8 ff ff ff 	movl   $0xffffffc8,-0x14(%rbp)
  427cff:	e9 31 01 00 00       	jmpq   427e35 <mbedtls_ctr_drbg_reseed+0x185>
  427d04:	48 8d 85 50 fe ff ff 	lea    -0x1b0(%rbp),%rax
  427d0b:	31 f6                	xor    %esi,%esi
  427d0d:	b9 80 01 00 00       	mov    $0x180,%ecx
  427d12:	89 ca                	mov    %ecx,%edx
  427d14:	48 89 c7             	mov    %rax,%rdi
  427d17:	48 89 85 38 fe ff ff 	mov    %rax,-0x1c8(%rbp)
  427d1e:	e8 fd 92 fd ff       	callq  401020 <memset@plt>
  427d23:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  427d27:	48 8b 80 48 01 00 00 	mov    0x148(%rax),%rax
  427d2e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  427d32:	48 8b ba 50 01 00 00 	mov    0x150(%rdx),%rdi
  427d39:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  427d3d:	48 8b 52 18          	mov    0x18(%rdx),%rdx
  427d41:	48 8b b5 38 fe ff ff 	mov    -0x1c8(%rbp),%rsi
  427d48:	ff d0                	callq  *%rax
  427d4a:	31 c9                	xor    %ecx,%ecx
  427d4c:	39 c1                	cmp    %eax,%ecx
  427d4e:	74 0c                	je     427d5c <mbedtls_ctr_drbg_reseed+0xac>
  427d50:	c7 45 ec cc ff ff ff 	movl   $0xffffffcc,-0x14(%rbp)
  427d57:	e9 d9 00 00 00       	jmpq   427e35 <mbedtls_ctr_drbg_reseed+0x185>
  427d5c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  427d60:	48 8b 40 18          	mov    0x18(%rax),%rax
  427d64:	48 03 85 48 fe ff ff 	add    -0x1b8(%rbp),%rax
  427d6b:	48 89 85 48 fe ff ff 	mov    %rax,-0x1b8(%rbp)
  427d72:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  427d77:	74 37                	je     427db0 <mbedtls_ctr_drbg_reseed+0x100>
  427d79:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  427d7e:	74 30                	je     427db0 <mbedtls_ctr_drbg_reseed+0x100>
  427d80:	48 8d 85 50 fe ff ff 	lea    -0x1b0(%rbp),%rax
  427d87:	48 03 85 48 fe ff ff 	add    -0x1b8(%rbp),%rax
  427d8e:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  427d92:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  427d96:	48 89 c7             	mov    %rax,%rdi
  427d99:	e8 d2 93 fd ff       	callq  401170 <memcpy@plt>
  427d9e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  427da2:	48 03 85 48 fe ff ff 	add    -0x1b8(%rbp),%rax
  427da9:	48 89 85 48 fe ff ff 	mov    %rax,-0x1b8(%rbp)
  427db0:	48 8d 85 50 fe ff ff 	lea    -0x1b0(%rbp),%rax
  427db7:	48 8b 95 48 fe ff ff 	mov    -0x1b8(%rbp),%rdx
  427dbe:	48 89 c7             	mov    %rax,%rdi
  427dc1:	48 89 c6             	mov    %rax,%rsi
  427dc4:	e8 97 00 00 00       	callq  427e60 <block_cipher_df>
  427dc9:	89 85 44 fe ff ff    	mov    %eax,-0x1bc(%rbp)
  427dcf:	83 f8 00             	cmp    $0x0,%eax
  427dd2:	74 02                	je     427dd6 <mbedtls_ctr_drbg_reseed+0x126>
  427dd4:	eb 28                	jmp    427dfe <mbedtls_ctr_drbg_reseed+0x14e>
  427dd6:	48 8d b5 50 fe ff ff 	lea    -0x1b0(%rbp),%rsi
  427ddd:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  427de1:	e8 1a 07 00 00       	callq  428500 <ctr_drbg_update_internal>
  427de6:	89 85 44 fe ff ff    	mov    %eax,-0x1bc(%rbp)
  427dec:	83 f8 00             	cmp    $0x0,%eax
  427def:	74 02                	je     427df3 <mbedtls_ctr_drbg_reseed+0x143>
  427df1:	eb 0b                	jmp    427dfe <mbedtls_ctr_drbg_reseed+0x14e>
  427df3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  427df7:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%rax)
  427dfe:	31 f6                	xor    %esi,%esi
  427e00:	48 8d 85 50 fe ff ff 	lea    -0x1b0(%rbp),%rax
  427e07:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  427e0b:	48 c7 45 f0 80 01 00 	movq   $0x180,-0x10(%rbp)
  427e12:	00 
  427e13:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  427e1a:	00 
  427e1b:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  427e1f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  427e23:	ff d0                	callq  *%rax
  427e25:	8b b5 44 fe ff ff    	mov    -0x1bc(%rbp),%esi
  427e2b:	89 75 ec             	mov    %esi,-0x14(%rbp)
  427e2e:	48 89 85 30 fe ff ff 	mov    %rax,-0x1d0(%rbp)
  427e35:	8b 45 ec             	mov    -0x14(%rbp),%eax
  427e38:	89 85 2c fe ff ff    	mov    %eax,-0x1d4(%rbp)
  427e3e:	e8 13 db 01 00       	callq  445956 <writeback_cache>
  427e43:	8b 85 2c fe ff ff    	mov    -0x1d4(%rbp),%eax
  427e49:	48 81 c4 e0 01 00 00 	add    $0x1e0,%rsp
  427e50:	5d                   	pop    %rbp
  427e51:	c3                   	retq   
  427e52:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  427e59:	1f 84 00 00 00 00 00 

0000000000427e60 <block_cipher_df>:
  427e60:	55                   	push   %rbp
  427e61:	48 89 e5             	mov    %rsp,%rbp
  427e64:	48 81 ec a0 04 00 00 	sub    $0x4a0,%rsp
  427e6b:	48 89 bd 30 ff ff ff 	mov    %rdi,-0xd0(%rbp)
  427e72:	48 89 b5 28 ff ff ff 	mov    %rsi,-0xd8(%rbp)
  427e79:	48 89 95 20 ff ff ff 	mov    %rdx,-0xe0(%rbp)
  427e80:	c7 85 ec fb ff ff 00 	movl   $0x0,-0x414(%rbp)
  427e87:	00 00 00 
  427e8a:	48 81 bd 20 ff ff ff 	cmpq   $0x180,-0xe0(%rbp)
  427e91:	80 01 00 00 
  427e95:	76 0f                	jbe    427ea6 <block_cipher_df+0x46>
  427e97:	c7 85 3c ff ff ff c8 	movl   $0xffffffc8,-0xc4(%rbp)
  427e9e:	ff ff ff 
  427ea1:	e9 32 06 00 00       	jmpq   4284d8 <block_cipher_df+0x678>
  427ea6:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
  427ead:	31 c9                	xor    %ecx,%ecx
  427eaf:	ba 20 01 00 00       	mov    $0x120,%edx
  427eb4:	be a0 01 00 00       	mov    $0x1a0,%esi
  427eb9:	89 f7                	mov    %esi,%edi
  427ebb:	48 89 bd c8 fb ff ff 	mov    %rdi,-0x438(%rbp)
  427ec2:	48 89 c7             	mov    %rax,%rdi
  427ec5:	89 ce                	mov    %ecx,%esi
  427ec7:	4c 8b 85 c8 fb ff ff 	mov    -0x438(%rbp),%r8
  427ece:	48 89 95 c0 fb ff ff 	mov    %rdx,-0x440(%rbp)
  427ed5:	4c 89 c2             	mov    %r8,%rdx
  427ed8:	48 89 85 b8 fb ff ff 	mov    %rax,-0x448(%rbp)
  427edf:	89 8d b4 fb ff ff    	mov    %ecx,-0x44c(%rbp)
  427ee5:	e8 36 91 fd ff       	callq  401020 <memset@plt>
  427eea:	48 8d 85 f0 fb ff ff 	lea    -0x410(%rbp),%rax
  427ef1:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
  427ef8:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
  427eff:	48 89 c7             	mov    %rax,%rdi
  427f02:	8b b5 b4 fb ff ff    	mov    -0x44c(%rbp),%esi
  427f08:	48 8b 95 c0 fb ff ff 	mov    -0x440(%rbp),%rdx
  427f0f:	e8 0c 91 fd ff       	callq  401020 <memset@plt>
  427f14:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
  427f1b:	48 83 c0 10          	add    $0x10,%rax
  427f1f:	48 89 85 18 fd ff ff 	mov    %rax,-0x2e8(%rbp)
  427f26:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
  427f2d:	48 c1 e8 18          	shr    $0x18,%rax
  427f31:	48 25 ff 00 00 00    	and    $0xff,%rax
  427f37:	41 88 c1             	mov    %al,%r9b
  427f3a:	48 8b 85 18 fd ff ff 	mov    -0x2e8(%rbp),%rax
  427f41:	48 89 c2             	mov    %rax,%rdx
  427f44:	48 83 c2 01          	add    $0x1,%rdx
  427f48:	48 89 95 18 fd ff ff 	mov    %rdx,-0x2e8(%rbp)
  427f4f:	44 88 08             	mov    %r9b,(%rax)
  427f52:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
  427f59:	48 c1 e8 10          	shr    $0x10,%rax
  427f5d:	48 25 ff 00 00 00    	and    $0xff,%rax
  427f63:	41 88 c1             	mov    %al,%r9b
  427f66:	48 8b 85 18 fd ff ff 	mov    -0x2e8(%rbp),%rax
  427f6d:	48 89 c2             	mov    %rax,%rdx
  427f70:	48 83 c2 01          	add    $0x1,%rdx
  427f74:	48 89 95 18 fd ff ff 	mov    %rdx,-0x2e8(%rbp)
  427f7b:	44 88 08             	mov    %r9b,(%rax)
  427f7e:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
  427f85:	48 c1 e8 08          	shr    $0x8,%rax
  427f89:	48 25 ff 00 00 00    	and    $0xff,%rax
  427f8f:	41 88 c1             	mov    %al,%r9b
  427f92:	48 8b 85 18 fd ff ff 	mov    -0x2e8(%rbp),%rax
  427f99:	48 89 c2             	mov    %rax,%rdx
  427f9c:	48 83 c2 01          	add    $0x1,%rdx
  427fa0:	48 89 95 18 fd ff ff 	mov    %rdx,-0x2e8(%rbp)
  427fa7:	44 88 08             	mov    %r9b,(%rax)
  427faa:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
  427fb1:	48 25 ff 00 00 00    	and    $0xff,%rax
  427fb7:	41 88 c1             	mov    %al,%r9b
  427fba:	48 8b 85 18 fd ff ff 	mov    -0x2e8(%rbp),%rax
  427fc1:	48 89 c2             	mov    %rax,%rdx
  427fc4:	48 83 c2 01          	add    $0x1,%rdx
  427fc8:	48 89 95 18 fd ff ff 	mov    %rdx,-0x2e8(%rbp)
  427fcf:	44 88 08             	mov    %r9b,(%rax)
  427fd2:	48 8b 85 18 fd ff ff 	mov    -0x2e8(%rbp),%rax
  427fd9:	48 83 c0 03          	add    $0x3,%rax
  427fdd:	48 89 85 18 fd ff ff 	mov    %rax,-0x2e8(%rbp)
  427fe4:	48 8b 85 18 fd ff ff 	mov    -0x2e8(%rbp),%rax
  427feb:	48 89 c2             	mov    %rax,%rdx
  427fee:	48 83 c2 01          	add    $0x1,%rdx
  427ff2:	48 89 95 18 fd ff ff 	mov    %rdx,-0x2e8(%rbp)
  427ff9:	c6 00 30             	movb   $0x30,(%rax)
  427ffc:	48 8b bd 18 fd ff ff 	mov    -0x2e8(%rbp),%rdi
  428003:	48 8b b5 28 ff ff ff 	mov    -0xd8(%rbp),%rsi
  42800a:	48 8b 95 20 ff ff ff 	mov    -0xe0(%rbp),%rdx
  428011:	e8 5a 91 fd ff       	callq  401170 <memcpy@plt>
  428016:	48 8b 85 18 fd ff ff 	mov    -0x2e8(%rbp),%rax
  42801d:	48 8b 95 20 ff ff ff 	mov    -0xe0(%rbp),%rdx
  428024:	c6 04 10 80          	movb   $0x80,(%rax,%rdx,1)
  428028:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
  42802f:	48 83 c0 18          	add    $0x18,%rax
  428033:	48 83 c0 01          	add    $0x1,%rax
  428037:	48 89 85 d8 fb ff ff 	mov    %rax,-0x428(%rbp)
  42803e:	c7 85 e8 fb ff ff 00 	movl   $0x0,-0x418(%rbp)
  428045:	00 00 00 
  428048:	83 bd e8 fb ff ff 20 	cmpl   $0x20,-0x418(%rbp)
  42804f:	7d 27                	jge    428078 <block_cipher_df+0x218>
  428051:	8b 85 e8 fb ff ff    	mov    -0x418(%rbp),%eax
  428057:	88 c1                	mov    %al,%cl
  428059:	48 63 95 e8 fb ff ff 	movslq -0x418(%rbp),%rdx
  428060:	88 8c 15 30 fd ff ff 	mov    %cl,-0x2d0(%rbp,%rdx,1)
  428067:	8b 85 e8 fb ff ff    	mov    -0x418(%rbp),%eax
  42806d:	83 c0 01             	add    $0x1,%eax
  428070:	89 85 e8 fb ff ff    	mov    %eax,-0x418(%rbp)
  428076:	eb d0                	jmp    428048 <block_cipher_df+0x1e8>
  428078:	48 8d b5 30 fd ff ff 	lea    -0x2d0(%rbp),%rsi
  42807f:	48 8d bd f0 fb ff ff 	lea    -0x410(%rbp),%rdi
  428086:	ba 00 01 00 00       	mov    $0x100,%edx
  42808b:	e8 c0 a6 01 00       	callq  442750 <mbedtls_aes_setkey_enc>
  428090:	89 85 ec fb ff ff    	mov    %eax,-0x414(%rbp)
  428096:	83 f8 00             	cmp    $0x0,%eax
  428099:	74 05                	je     4280a0 <block_cipher_df+0x240>
  42809b:	e9 e0 02 00 00       	jmpq   428380 <block_cipher_df+0x520>
  4280a0:	c7 85 e4 fb ff ff 00 	movl   $0x0,-0x41c(%rbp)
  4280a7:	00 00 00 
  4280aa:	83 bd e4 fb ff ff 30 	cmpl   $0x30,-0x41c(%rbp)
  4280b1:	0f 8d be 01 00 00    	jge    428275 <block_cipher_df+0x415>
  4280b7:	31 f6                	xor    %esi,%esi
  4280b9:	b8 10 00 00 00       	mov    $0x10,%eax
  4280be:	89 c2                	mov    %eax,%edx
  4280c0:	48 8d bd 20 fd ff ff 	lea    -0x2e0(%rbp),%rdi
  4280c7:	48 8d 8d 80 fd ff ff 	lea    -0x280(%rbp),%rcx
  4280ce:	48 89 8d 18 fd ff ff 	mov    %rcx,-0x2e8(%rbp)
  4280d5:	e8 46 8f fd ff       	callq  401020 <memset@plt>
  4280da:	48 8b 8d d8 fb ff ff 	mov    -0x428(%rbp),%rcx
  4280e1:	48 89 8d d0 fb ff ff 	mov    %rcx,-0x430(%rbp)
  4280e8:	48 83 bd d0 fb ff ff 	cmpq   $0x0,-0x430(%rbp)
  4280ef:	00 
  4280f0:	0f 86 37 01 00 00    	jbe    42822d <block_cipher_df+0x3cd>
  4280f6:	c7 85 e8 fb ff ff 00 	movl   $0x0,-0x418(%rbp)
  4280fd:	00 00 00 
  428100:	83 bd e8 fb ff ff 10 	cmpl   $0x10,-0x418(%rbp)
  428107:	7d 3f                	jge    428148 <block_cipher_df+0x2e8>
  428109:	48 8b 85 18 fd ff ff 	mov    -0x2e8(%rbp),%rax
  428110:	48 63 8d e8 fb ff ff 	movslq -0x418(%rbp),%rcx
  428117:	0f b6 14 08          	movzbl (%rax,%rcx,1),%edx
  42811b:	48 63 85 e8 fb ff ff 	movslq -0x418(%rbp),%rax
  428122:	0f b6 b4 05 20 fd ff 	movzbl -0x2e0(%rbp,%rax,1),%esi
  428129:	ff 
  42812a:	31 d6                	xor    %edx,%esi
  42812c:	40 88 f7             	mov    %sil,%dil
  42812f:	40 88 bc 05 20 fd ff 	mov    %dil,-0x2e0(%rbp,%rax,1)
  428136:	ff 
  428137:	8b 85 e8 fb ff ff    	mov    -0x418(%rbp),%eax
  42813d:	83 c0 01             	add    $0x1,%eax
  428140:	89 85 e8 fb ff ff    	mov    %eax,-0x418(%rbp)
  428146:	eb b8                	jmp    428100 <block_cipher_df+0x2a0>
  428148:	48 8b 85 18 fd ff ff 	mov    -0x2e8(%rbp),%rax
  42814f:	48 83 c0 10          	add    $0x10,%rax
  428153:	48 89 85 18 fd ff ff 	mov    %rax,-0x2e8(%rbp)
  42815a:	48 83 bd d0 fb ff ff 	cmpq   $0x10,-0x430(%rbp)
  428161:	10 
  428162:	72 10                	jb     428174 <block_cipher_df+0x314>
  428164:	b8 10 00 00 00       	mov    $0x10,%eax
  428169:	89 c1                	mov    %eax,%ecx
  42816b:	48 89 8d a8 fb ff ff 	mov    %rcx,-0x458(%rbp)
  428172:	eb 0e                	jmp    428182 <block_cipher_df+0x322>
  428174:	48 8b 85 d0 fb ff ff 	mov    -0x430(%rbp),%rax
  42817b:	48 89 85 a8 fb ff ff 	mov    %rax,-0x458(%rbp)
  428182:	48 8b 85 a8 fb ff ff 	mov    -0x458(%rbp),%rax
  428189:	48 8d 8d 20 fd ff ff 	lea    -0x2e0(%rbp),%rcx
  428190:	48 8b 95 d0 fb ff ff 	mov    -0x430(%rbp),%rdx
  428197:	48 29 c2             	sub    %rax,%rdx
  42819a:	48 89 95 d0 fb ff ff 	mov    %rdx,-0x430(%rbp)
  4281a1:	48 8d 85 f0 fb ff ff 	lea    -0x410(%rbp),%rax
  4281a8:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
  4281af:	c7 85 6c ff ff ff 01 	movl   $0x1,-0x94(%rbp)
  4281b6:	00 00 00 
  4281b9:	48 89 8d 60 ff ff ff 	mov    %rcx,-0xa0(%rbp)
  4281c0:	48 89 8d 58 ff ff ff 	mov    %rcx,-0xa8(%rbp)
  4281c7:	83 bd 6c ff ff ff 01 	cmpl   $0x1,-0x94(%rbp)
  4281ce:	75 22                	jne    4281f2 <block_cipher_df+0x392>
  4281d0:	48 8b bd 70 ff ff ff 	mov    -0x90(%rbp),%rdi
  4281d7:	48 8b b5 60 ff ff ff 	mov    -0xa0(%rbp),%rsi
  4281de:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  4281e5:	e8 b6 b4 01 00       	callq  4436a0 <mbedtls_internal_aes_encrypt>
  4281ea:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
  4281f0:	eb 20                	jmp    428212 <block_cipher_df+0x3b2>
  4281f2:	48 8b bd 70 ff ff ff 	mov    -0x90(%rbp),%rdi
  4281f9:	48 8b b5 60 ff ff ff 	mov    -0xa0(%rbp),%rsi
  428200:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  428207:	e8 94 be 01 00       	callq  4440a0 <mbedtls_internal_aes_decrypt>
  42820c:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
  428212:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
  428218:	89 85 ec fb ff ff    	mov    %eax,-0x414(%rbp)
  42821e:	83 f8 00             	cmp    $0x0,%eax
  428221:	74 05                	je     428228 <block_cipher_df+0x3c8>
  428223:	e9 58 01 00 00       	jmpq   428380 <block_cipher_df+0x520>
  428228:	e9 bb fe ff ff       	jmpq   4280e8 <block_cipher_df+0x288>
  42822d:	48 63 85 e4 fb ff ff 	movslq -0x41c(%rbp),%rax
  428234:	48 8b 8d 20 fd ff ff 	mov    -0x2e0(%rbp),%rcx
  42823b:	48 89 8c 05 50 fd ff 	mov    %rcx,-0x2b0(%rbp,%rax,1)
  428242:	ff 
  428243:	48 8b 8d 28 fd ff ff 	mov    -0x2d8(%rbp),%rcx
  42824a:	48 89 8c 05 58 fd ff 	mov    %rcx,-0x2a8(%rbp,%rax,1)
  428251:	ff 
  428252:	8a 95 83 fd ff ff    	mov    -0x27d(%rbp),%dl
  428258:	80 c2 01             	add    $0x1,%dl
  42825b:	88 95 83 fd ff ff    	mov    %dl,-0x27d(%rbp)
  428261:	8b 85 e4 fb ff ff    	mov    -0x41c(%rbp),%eax
  428267:	83 c0 10             	add    $0x10,%eax
  42826a:	89 85 e4 fb ff ff    	mov    %eax,-0x41c(%rbp)
  428270:	e9 35 fe ff ff       	jmpq   4280aa <block_cipher_df+0x24a>
  428275:	48 8d b5 50 fd ff ff 	lea    -0x2b0(%rbp),%rsi
  42827c:	48 8d bd f0 fb ff ff 	lea    -0x410(%rbp),%rdi
  428283:	ba 00 01 00 00       	mov    $0x100,%edx
  428288:	e8 c3 a4 01 00       	callq  442750 <mbedtls_aes_setkey_enc>
  42828d:	89 85 ec fb ff ff    	mov    %eax,-0x414(%rbp)
  428293:	83 f8 00             	cmp    $0x0,%eax
  428296:	74 05                	je     42829d <block_cipher_df+0x43d>
  428298:	e9 e3 00 00 00       	jmpq   428380 <block_cipher_df+0x520>
  42829d:	48 8d 85 50 fd ff ff 	lea    -0x2b0(%rbp),%rax
  4282a4:	48 83 c0 20          	add    $0x20,%rax
  4282a8:	48 89 85 10 fd ff ff 	mov    %rax,-0x2f0(%rbp)
  4282af:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
  4282b6:	48 89 85 18 fd ff ff 	mov    %rax,-0x2e8(%rbp)
  4282bd:	c7 85 e4 fb ff ff 00 	movl   $0x0,-0x41c(%rbp)
  4282c4:	00 00 00 
  4282c7:	83 bd e4 fb ff ff 30 	cmpl   $0x30,-0x41c(%rbp)
  4282ce:	0f 8d aa 00 00 00    	jge    42837e <block_cipher_df+0x51e>
  4282d4:	48 8b 85 10 fd ff ff 	mov    -0x2f0(%rbp),%rax
  4282db:	48 8b 8d 10 fd ff ff 	mov    -0x2f0(%rbp),%rcx
  4282e2:	48 8d 95 f0 fb ff ff 	lea    -0x410(%rbp),%rdx
  4282e9:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  4282ed:	c7 45 94 01 00 00 00 	movl   $0x1,-0x6c(%rbp)
  4282f4:	48 89 45 88          	mov    %rax,-0x78(%rbp)
  4282f8:	48 89 4d 80          	mov    %rcx,-0x80(%rbp)
  4282fc:	83 7d 94 01          	cmpl   $0x1,-0x6c(%rbp)
  428300:	75 16                	jne    428318 <block_cipher_df+0x4b8>
  428302:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
  428306:	48 8b 75 88          	mov    -0x78(%rbp),%rsi
  42830a:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
  42830e:	e8 8d b3 01 00       	callq  4436a0 <mbedtls_internal_aes_encrypt>
  428313:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  428316:	eb 14                	jmp    42832c <block_cipher_df+0x4cc>
  428318:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
  42831c:	48 8b 75 88          	mov    -0x78(%rbp),%rsi
  428320:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
  428324:	e8 77 bd 01 00       	callq  4440a0 <mbedtls_internal_aes_decrypt>
  428329:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  42832c:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  42832f:	89 85 ec fb ff ff    	mov    %eax,-0x414(%rbp)
  428335:	83 f8 00             	cmp    $0x0,%eax
  428338:	74 02                	je     42833c <block_cipher_df+0x4dc>
  42833a:	eb 44                	jmp    428380 <block_cipher_df+0x520>
  42833c:	48 8b 85 18 fd ff ff 	mov    -0x2e8(%rbp),%rax
  428343:	48 8b 8d 10 fd ff ff 	mov    -0x2f0(%rbp),%rcx
  42834a:	48 8b 11             	mov    (%rcx),%rdx
  42834d:	48 89 10             	mov    %rdx,(%rax)
  428350:	48 8b 49 08          	mov    0x8(%rcx),%rcx
  428354:	48 89 48 08          	mov    %rcx,0x8(%rax)
  428358:	48 8b 85 18 fd ff ff 	mov    -0x2e8(%rbp),%rax
  42835f:	48 83 c0 10          	add    $0x10,%rax
  428363:	48 89 85 18 fd ff ff 	mov    %rax,-0x2e8(%rbp)
  42836a:	8b 85 e4 fb ff ff    	mov    -0x41c(%rbp),%eax
  428370:	83 c0 10             	add    $0x10,%eax
  428373:	89 85 e4 fb ff ff    	mov    %eax,-0x41c(%rbp)
  428379:	e9 49 ff ff ff       	jmpq   4282c7 <block_cipher_df+0x467>
  42837e:	eb 00                	jmp    428380 <block_cipher_df+0x520>
  428380:	48 8d 85 f0 fb ff ff 	lea    -0x410(%rbp),%rax
  428387:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  42838b:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
  428390:	75 02                	jne    428394 <block_cipher_df+0x534>
  428392:	eb 2b                	jmp    4283bf <block_cipher_df+0x55f>
  428394:	31 f6                	xor    %esi,%esi
  428396:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  42839a:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  42839e:	48 c7 45 b0 20 01 00 	movq   $0x120,-0x50(%rbp)
  4283a5:	00 
  4283a6:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  4283ad:	00 
  4283ae:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
  4283b2:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
  4283b6:	ff d0                	callq  *%rax
  4283b8:	48 89 85 a0 fb ff ff 	mov    %rax,-0x460(%rbp)
  4283bf:	31 f6                	xor    %esi,%esi
  4283c1:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
  4283c8:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  4283cc:	48 c7 45 c0 a0 01 00 	movq   $0x1a0,-0x40(%rbp)
  4283d3:	00 
  4283d4:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  4283db:	00 
  4283dc:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  4283e0:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  4283e4:	ff d0                	callq  *%rax
  4283e6:	31 f6                	xor    %esi,%esi
  4283e8:	48 8d 95 50 fd ff ff 	lea    -0x2b0(%rbp),%rdx
  4283ef:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4283f3:	48 c7 45 d0 30 00 00 	movq   $0x30,-0x30(%rbp)
  4283fa:	00 
  4283fb:	48 8b 14 25 70 e3 44 	mov    0x44e370,%rdx
  428402:	00 
  428403:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  428407:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  42840b:	48 89 95 98 fb ff ff 	mov    %rdx,-0x468(%rbp)
  428412:	48 89 ca             	mov    %rcx,%rdx
  428415:	48 8b 8d 98 fb ff ff 	mov    -0x468(%rbp),%rcx
  42841c:	48 89 85 90 fb ff ff 	mov    %rax,-0x470(%rbp)
  428423:	ff d1                	callq  *%rcx
  428425:	31 f6                	xor    %esi,%esi
  428427:	48 8d 8d 30 fd ff ff 	lea    -0x2d0(%rbp),%rcx
  42842e:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
  428432:	48 c7 45 e0 20 00 00 	movq   $0x20,-0x20(%rbp)
  428439:	00 
  42843a:	48 8b 0c 25 70 e3 44 	mov    0x44e370,%rcx
  428441:	00 
  428442:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  428446:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  42844a:	48 89 85 88 fb ff ff 	mov    %rax,-0x478(%rbp)
  428451:	ff d1                	callq  *%rcx
  428453:	31 f6                	xor    %esi,%esi
  428455:	48 8d 8d 20 fd ff ff 	lea    -0x2e0(%rbp),%rcx
  42845c:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
  428460:	48 c7 45 f0 10 00 00 	movq   $0x10,-0x10(%rbp)
  428467:	00 
  428468:	48 8b 0c 25 70 e3 44 	mov    0x44e370,%rcx
  42846f:	00 
  428470:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  428474:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  428478:	48 89 85 80 fb ff ff 	mov    %rax,-0x480(%rbp)
  42847f:	ff d1                	callq  *%rcx
  428481:	31 f6                	xor    %esi,%esi
  428483:	3b b5 ec fb ff ff    	cmp    -0x414(%rbp),%esi
  428489:	48 89 85 78 fb ff ff 	mov    %rax,-0x488(%rbp)
  428490:	74 3a                	je     4284cc <block_cipher_df+0x66c>
  428492:	31 f6                	xor    %esi,%esi
  428494:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
  42849b:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
  4284a2:	48 c7 85 48 ff ff ff 	movq   $0x30,-0xb8(%rbp)
  4284a9:	30 00 00 00 
  4284ad:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  4284b4:	00 
  4284b5:	48 8b bd 50 ff ff ff 	mov    -0xb0(%rbp),%rdi
  4284bc:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
  4284c3:	ff d0                	callq  *%rax
  4284c5:	48 89 85 70 fb ff ff 	mov    %rax,-0x490(%rbp)
  4284cc:	8b 85 ec fb ff ff    	mov    -0x414(%rbp),%eax
  4284d2:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
  4284d8:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
  4284de:	89 85 6c fb ff ff    	mov    %eax,-0x494(%rbp)
  4284e4:	e8 6d d4 01 00       	callq  445956 <writeback_cache>
  4284e9:	8b 85 6c fb ff ff    	mov    -0x494(%rbp),%eax
  4284ef:	48 81 c4 a0 04 00 00 	add    $0x4a0,%rsp
  4284f6:	5d                   	pop    %rbp
  4284f7:	c3                   	retq   
  4284f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4284ff:	00 

0000000000428500 <ctr_drbg_update_internal>:
  428500:	55                   	push   %rbp
  428501:	48 89 e5             	mov    %rsp,%rbp
  428504:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
  42850b:	31 c0                	xor    %eax,%eax
  42850d:	b9 30 00 00 00       	mov    $0x30,%ecx
  428512:	89 ca                	mov    %ecx,%edx
  428514:	4c 8d 45 80          	lea    -0x80(%rbp),%r8
  428518:	48 89 7d c0          	mov    %rdi,-0x40(%rbp)
  42851c:	48 89 75 b8          	mov    %rsi,-0x48(%rbp)
  428520:	4c 89 85 78 ff ff ff 	mov    %r8,-0x88(%rbp)
  428527:	c7 85 6c ff ff ff 00 	movl   $0x0,-0x94(%rbp)
  42852e:	00 00 00 
  428531:	4c 89 c7             	mov    %r8,%rdi
  428534:	89 c6                	mov    %eax,%esi
  428536:	e8 e5 8a fd ff       	callq  401020 <memset@plt>
  42853b:	c7 85 70 ff ff ff 00 	movl   $0x0,-0x90(%rbp)
  428542:	00 00 00 
  428545:	83 bd 70 ff ff ff 30 	cmpl   $0x30,-0x90(%rbp)
  42854c:	0f 8d dc 00 00 00    	jge    42862e <ctr_drbg_update_internal+0x12e>
  428552:	c7 85 74 ff ff ff 10 	movl   $0x10,-0x8c(%rbp)
  428559:	00 00 00 
  42855c:	83 bd 74 ff ff ff 00 	cmpl   $0x0,-0x8c(%rbp)
  428563:	7e 3a                	jle    42859f <ctr_drbg_update_internal+0x9f>
  428565:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  428569:	8b 8d 74 ff ff ff    	mov    -0x8c(%rbp),%ecx
  42856f:	83 e9 01             	sub    $0x1,%ecx
  428572:	48 63 d1             	movslq %ecx,%rdx
  428575:	40 8a 34 10          	mov    (%rax,%rdx,1),%sil
  428579:	40 80 c6 01          	add    $0x1,%sil
  42857d:	40 88 34 10          	mov    %sil,(%rax,%rdx,1)
  428581:	40 0f b6 ce          	movzbl %sil,%ecx
  428585:	83 f9 00             	cmp    $0x0,%ecx
  428588:	74 02                	je     42858c <ctr_drbg_update_internal+0x8c>
  42858a:	eb 13                	jmp    42859f <ctr_drbg_update_internal+0x9f>
  42858c:	eb 00                	jmp    42858e <ctr_drbg_update_internal+0x8e>
  42858e:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
  428594:	83 c0 ff             	add    $0xffffffff,%eax
  428597:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
  42859d:	eb bd                	jmp    42855c <ctr_drbg_update_internal+0x5c>
  42859f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4285a3:	48 83 c0 28          	add    $0x28,%rax
  4285a7:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  4285ab:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
  4285b2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  4285b6:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%rbp)
  4285bd:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  4285c1:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  4285c5:	83 7d dc 01          	cmpl   $0x1,-0x24(%rbp)
  4285c9:	75 16                	jne    4285e1 <ctr_drbg_update_internal+0xe1>
  4285cb:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  4285cf:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  4285d3:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  4285d7:	e8 c4 b0 01 00       	callq  4436a0 <mbedtls_internal_aes_encrypt>
  4285dc:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4285df:	eb 14                	jmp    4285f5 <ctr_drbg_update_internal+0xf5>
  4285e1:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  4285e5:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  4285e9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  4285ed:	e8 ae ba 01 00       	callq  4440a0 <mbedtls_internal_aes_decrypt>
  4285f2:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4285f5:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4285f8:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)
  4285fe:	83 f8 00             	cmp    $0x0,%eax
  428601:	74 05                	je     428608 <ctr_drbg_update_internal+0x108>
  428603:	e9 a8 00 00 00       	jmpq   4286b0 <ctr_drbg_update_internal+0x1b0>
  428608:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  42860f:	48 83 c0 10          	add    $0x10,%rax
  428613:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  42861a:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
  428620:	83 c0 10             	add    $0x10,%eax
  428623:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
  428629:	e9 17 ff ff ff       	jmpq   428545 <ctr_drbg_update_internal+0x45>
  42862e:	c7 85 74 ff ff ff 00 	movl   $0x0,-0x8c(%rbp)
  428635:	00 00 00 
  428638:	83 bd 74 ff ff ff 30 	cmpl   $0x30,-0x8c(%rbp)
  42863f:	7d 36                	jge    428677 <ctr_drbg_update_internal+0x177>
  428641:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  428645:	48 63 8d 74 ff ff ff 	movslq -0x8c(%rbp),%rcx
  42864c:	0f b6 14 08          	movzbl (%rax,%rcx,1),%edx
  428650:	48 63 85 74 ff ff ff 	movslq -0x8c(%rbp),%rax
  428657:	0f b6 74 05 80       	movzbl -0x80(%rbp,%rax,1),%esi
  42865c:	31 d6                	xor    %edx,%esi
  42865e:	40 88 f7             	mov    %sil,%dil
  428661:	40 88 7c 05 80       	mov    %dil,-0x80(%rbp,%rax,1)
  428666:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
  42866c:	83 c0 01             	add    $0x1,%eax
  42866f:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
  428675:	eb c1                	jmp    428638 <ctr_drbg_update_internal+0x138>
  428677:	48 8d 75 80          	lea    -0x80(%rbp),%rsi
  42867b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  42867f:	48 83 c0 28          	add    $0x28,%rax
  428683:	48 89 c7             	mov    %rax,%rdi
  428686:	ba 00 01 00 00       	mov    $0x100,%edx
  42868b:	e8 c0 a0 01 00       	callq  442750 <mbedtls_aes_setkey_enc>
  428690:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)
  428696:	83 f8 00             	cmp    $0x0,%eax
  428699:	74 02                	je     42869d <ctr_drbg_update_internal+0x19d>
  42869b:	eb 13                	jmp    4286b0 <ctr_drbg_update_internal+0x1b0>
  42869d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4286a1:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
  4286a5:	48 89 08             	mov    %rcx,(%rax)
  4286a8:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
  4286ac:	48 89 48 08          	mov    %rcx,0x8(%rax)
  4286b0:	31 f6                	xor    %esi,%esi
  4286b2:	48 8d 45 80          	lea    -0x80(%rbp),%rax
  4286b6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4286ba:	48 c7 45 f0 30 00 00 	movq   $0x30,-0x10(%rbp)
  4286c1:	00 
  4286c2:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  4286c9:	00 
  4286ca:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  4286ce:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4286d2:	ff d0                	callq  *%rax
  4286d4:	8b b5 6c ff ff ff    	mov    -0x94(%rbp),%esi
  4286da:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
  4286e1:	89 b5 5c ff ff ff    	mov    %esi,-0xa4(%rbp)
  4286e7:	e8 6a d2 01 00       	callq  445956 <writeback_cache>
  4286ec:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
  4286f2:	48 81 c4 b0 00 00 00 	add    $0xb0,%rsp
  4286f9:	5d                   	pop    %rbp
  4286fa:	c3                   	retq   
  4286fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000428700 <mbedtls_ctr_drbg_update_ret>:
  428700:	55                   	push   %rbp
  428701:	48 89 e5             	mov    %rsp,%rbp
  428704:	48 83 ec 60          	sub    $0x60,%rsp
  428708:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  42870c:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  428710:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
  428714:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  428719:	75 09                	jne    428724 <mbedtls_ctr_drbg_update_ret+0x24>
  42871b:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  428722:	eb 4a                	jmp    42876e <mbedtls_ctr_drbg_update_ret+0x6e>
  428724:	48 8d 7d b0          	lea    -0x50(%rbp),%rdi
  428728:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  42872c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  428730:	e8 2b f7 ff ff       	callq  427e60 <block_cipher_df>
  428735:	89 45 ac             	mov    %eax,-0x54(%rbp)
  428738:	83 f8 00             	cmp    $0x0,%eax
  42873b:	74 02                	je     42873f <mbedtls_ctr_drbg_update_ret+0x3f>
  42873d:	eb 19                	jmp    428758 <mbedtls_ctr_drbg_update_ret+0x58>
  42873f:	48 8d 75 b0          	lea    -0x50(%rbp),%rsi
  428743:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  428747:	e8 b4 fd ff ff       	callq  428500 <ctr_drbg_update_internal>
  42874c:	89 45 ac             	mov    %eax,-0x54(%rbp)
  42874f:	83 f8 00             	cmp    $0x0,%eax
  428752:	74 02                	je     428756 <mbedtls_ctr_drbg_update_ret+0x56>
  428754:	eb 02                	jmp    428758 <mbedtls_ctr_drbg_update_ret+0x58>
  428756:	eb 00                	jmp    428758 <mbedtls_ctr_drbg_update_ret+0x58>
  428758:	b8 30 00 00 00       	mov    $0x30,%eax
  42875d:	89 c6                	mov    %eax,%esi
  42875f:	48 8d 7d b0          	lea    -0x50(%rbp),%rdi
  428763:	e8 08 d9 00 00       	callq  436070 <mbedtls_platform_zeroize>
  428768:	8b 45 ac             	mov    -0x54(%rbp),%eax
  42876b:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42876e:	8b 45 fc             	mov    -0x4(%rbp),%eax
  428771:	89 45 a8             	mov    %eax,-0x58(%rbp)
  428774:	e8 dd d1 01 00       	callq  445956 <writeback_cache>
  428779:	8b 45 a8             	mov    -0x58(%rbp),%eax
  42877c:	48 83 c4 60          	add    $0x60,%rsp
  428780:	5d                   	pop    %rbp
  428781:	c3                   	retq   
  428782:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  428789:	1f 84 00 00 00 00 00 

0000000000428790 <mbedtls_ctr_drbg_random>:
  428790:	55                   	push   %rbp
  428791:	48 89 e5             	mov    %rsp,%rbp
  428794:	48 81 ec 40 01 00 00 	sub    $0x140,%rsp
  42879b:	48 89 bd 08 ff ff ff 	mov    %rdi,-0xf8(%rbp)
  4287a2:	48 89 b5 00 ff ff ff 	mov    %rsi,-0x100(%rbp)
  4287a9:	48 89 95 f8 fe ff ff 	mov    %rdx,-0x108(%rbp)
  4287b0:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
  4287b7:	48 89 95 e8 fe ff ff 	mov    %rdx,-0x118(%rbp)
  4287be:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
  4287c5:	48 8b b5 00 ff ff ff 	mov    -0x100(%rbp),%rsi
  4287cc:	48 8b bd f8 fe ff ff 	mov    -0x108(%rbp),%rdi
  4287d3:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
  4287d7:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
  4287db:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
  4287df:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
  4287e6:	00 
  4287e7:	48 c7 45 88 00 00 00 	movq   $0x0,-0x78(%rbp)
  4287ee:	00 
  4287ef:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%rbp)
  4287f6:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
  4287fa:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
  428801:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
  428805:	48 89 95 38 ff ff ff 	mov    %rdx,-0xc8(%rbp)
  42880c:	48 81 7d 98 00 04 00 	cmpq   $0x400,-0x68(%rbp)
  428813:	00 
  428814:	76 0c                	jbe    428822 <mbedtls_ctr_drbg_random+0x92>
  428816:	c7 45 b4 ca ff ff ff 	movl   $0xffffffca,-0x4c(%rbp)
  42881d:	e9 a5 02 00 00       	jmpq   428ac7 <mbedtls_ctr_drbg_random+0x337>
  428822:	48 81 7d 88 00 01 00 	cmpq   $0x100,-0x78(%rbp)
  428829:	00 
  42882a:	76 0c                	jbe    428838 <mbedtls_ctr_drbg_random+0xa8>
  42882c:	c7 45 b4 c8 ff ff ff 	movl   $0xffffffc8,-0x4c(%rbp)
  428833:	e9 8f 02 00 00       	jmpq   428ac7 <mbedtls_ctr_drbg_random+0x337>
  428838:	31 f6                	xor    %esi,%esi
  42883a:	b8 30 00 00 00       	mov    $0x30,%eax
  42883f:	89 c2                	mov    %eax,%edx
  428841:	48 8d bd 40 ff ff ff 	lea    -0xc0(%rbp),%rdi
  428848:	e8 d3 87 fd ff       	callq  401020 <memset@plt>
  42884d:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
  428854:	8b 42 10             	mov    0x10(%rdx),%eax
  428857:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
  42885e:	3b 42 20             	cmp    0x20(%rdx),%eax
  428861:	7f 0d                	jg     428870 <mbedtls_ctr_drbg_random+0xe0>
  428863:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  42886a:	83 78 14 00          	cmpl   $0x0,0x14(%rax)
  42886e:	74 2f                	je     42889f <mbedtls_ctr_drbg_random+0x10f>
  428870:	48 8b bd 78 ff ff ff 	mov    -0x88(%rbp),%rdi
  428877:	48 8b 75 90          	mov    -0x70(%rbp),%rsi
  42887b:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
  42887f:	e8 2c f4 ff ff       	callq  427cb0 <mbedtls_ctr_drbg_reseed>
  428884:	89 45 84             	mov    %eax,-0x7c(%rbp)
  428887:	83 f8 00             	cmp    $0x0,%eax
  42888a:	74 0b                	je     428897 <mbedtls_ctr_drbg_random+0x107>
  42888c:	8b 45 84             	mov    -0x7c(%rbp),%eax
  42888f:	89 45 b4             	mov    %eax,-0x4c(%rbp)
  428892:	e9 30 02 00 00       	jmpq   428ac7 <mbedtls_ctr_drbg_random+0x337>
  428897:	48 c7 45 88 00 00 00 	movq   $0x0,-0x78(%rbp)
  42889e:	00 
  42889f:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
  4288a4:	76 43                	jbe    4288e9 <mbedtls_ctr_drbg_random+0x159>
  4288a6:	48 8d bd 40 ff ff ff 	lea    -0xc0(%rbp),%rdi
  4288ad:	48 8b 75 90          	mov    -0x70(%rbp),%rsi
  4288b1:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
  4288b5:	e8 a6 f5 ff ff       	callq  427e60 <block_cipher_df>
  4288ba:	89 45 84             	mov    %eax,-0x7c(%rbp)
  4288bd:	83 f8 00             	cmp    $0x0,%eax
  4288c0:	74 05                	je     4288c7 <mbedtls_ctr_drbg_random+0x137>
  4288c2:	e9 8c 01 00 00       	jmpq   428a53 <mbedtls_ctr_drbg_random+0x2c3>
  4288c7:	48 8d b5 40 ff ff ff 	lea    -0xc0(%rbp),%rsi
  4288ce:	48 8b bd 78 ff ff ff 	mov    -0x88(%rbp),%rdi
  4288d5:	e8 26 fc ff ff       	callq  428500 <ctr_drbg_update_internal>
  4288da:	89 45 84             	mov    %eax,-0x7c(%rbp)
  4288dd:	83 f8 00             	cmp    $0x0,%eax
  4288e0:	74 05                	je     4288e7 <mbedtls_ctr_drbg_random+0x157>
  4288e2:	e9 6c 01 00 00       	jmpq   428a53 <mbedtls_ctr_drbg_random+0x2c3>
  4288e7:	eb 00                	jmp    4288e9 <mbedtls_ctr_drbg_random+0x159>
  4288e9:	eb 00                	jmp    4288eb <mbedtls_ctr_drbg_random+0x15b>
  4288eb:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
  4288f0:	0f 86 30 01 00 00    	jbe    428a26 <mbedtls_ctr_drbg_random+0x296>
  4288f6:	c7 85 1c ff ff ff 10 	movl   $0x10,-0xe4(%rbp)
  4288fd:	00 00 00 
  428900:	83 bd 1c ff ff ff 00 	cmpl   $0x0,-0xe4(%rbp)
  428907:	7e 3b                	jle    428944 <mbedtls_ctr_drbg_random+0x1b4>
  428909:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  428910:	8b 8d 1c ff ff ff    	mov    -0xe4(%rbp),%ecx
  428916:	83 e9 01             	sub    $0x1,%ecx
  428919:	48 63 d1             	movslq %ecx,%rdx
  42891c:	40 8a 34 10          	mov    (%rax,%rdx,1),%sil
  428920:	40 80 c6 01          	add    $0x1,%sil
  428924:	40 88 34 10          	mov    %sil,(%rax,%rdx,1)
  428928:	40 0f b6 ce          	movzbl %sil,%ecx
  42892c:	83 f9 00             	cmp    $0x0,%ecx
  42892f:	74 02                	je     428933 <mbedtls_ctr_drbg_random+0x1a3>
  428931:	eb 11                	jmp    428944 <mbedtls_ctr_drbg_random+0x1b4>
  428933:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax
  428939:	83 c0 ff             	add    $0xffffffff,%eax
  42893c:	89 85 1c ff ff ff    	mov    %eax,-0xe4(%rbp)
  428942:	eb bc                	jmp    428900 <mbedtls_ctr_drbg_random+0x170>
  428944:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  42894b:	48 8b 8d 78 ff ff ff 	mov    -0x88(%rbp),%rcx
  428952:	48 83 c1 28          	add    $0x28,%rcx
  428956:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
  42895d:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  428961:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%rbp)
  428968:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
  42896c:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  428970:	83 7d cc 01          	cmpl   $0x1,-0x34(%rbp)
  428974:	75 16                	jne    42898c <mbedtls_ctr_drbg_random+0x1fc>
  428976:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  42897a:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
  42897e:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  428982:	e8 19 ad 01 00       	callq  4436a0 <mbedtls_internal_aes_encrypt>
  428987:	89 45 dc             	mov    %eax,-0x24(%rbp)
  42898a:	eb 14                	jmp    4289a0 <mbedtls_ctr_drbg_random+0x210>
  42898c:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  428990:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
  428994:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  428998:	e8 03 b7 01 00       	callq  4440a0 <mbedtls_internal_aes_decrypt>
  42899d:	89 45 dc             	mov    %eax,-0x24(%rbp)
  4289a0:	8b 45 dc             	mov    -0x24(%rbp),%eax
  4289a3:	89 45 84             	mov    %eax,-0x7c(%rbp)
  4289a6:	83 f8 00             	cmp    $0x0,%eax
  4289a9:	74 05                	je     4289b0 <mbedtls_ctr_drbg_random+0x220>
  4289ab:	e9 a3 00 00 00       	jmpq   428a53 <mbedtls_ctr_drbg_random+0x2c3>
  4289b0:	48 83 7d 98 10       	cmpq   $0x10,-0x68(%rbp)
  4289b5:	76 10                	jbe    4289c7 <mbedtls_ctr_drbg_random+0x237>
  4289b7:	b8 10 00 00 00       	mov    $0x10,%eax
  4289bc:	89 c1                	mov    %eax,%ecx
  4289be:	48 89 8d e0 fe ff ff 	mov    %rcx,-0x120(%rbp)
  4289c5:	eb 0b                	jmp    4289d2 <mbedtls_ctr_drbg_random+0x242>
  4289c7:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  4289cb:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
  4289d2:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
  4289d9:	48 8d b5 20 ff ff ff 	lea    -0xe0(%rbp),%rsi
  4289e0:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
  4289e7:	48 8b bd 38 ff ff ff 	mov    -0xc8(%rbp),%rdi
  4289ee:	48 8b 95 10 ff ff ff 	mov    -0xf0(%rbp),%rdx
  4289f5:	e8 76 87 fd ff       	callq  401170 <memcpy@plt>
  4289fa:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
  428a01:	48 03 85 38 ff ff ff 	add    -0xc8(%rbp),%rax
  428a08:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
  428a0f:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
  428a16:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  428a1a:	48 29 c2             	sub    %rax,%rdx
  428a1d:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  428a21:	e9 c5 fe ff ff       	jmpq   4288eb <mbedtls_ctr_drbg_random+0x15b>
  428a26:	48 8d b5 40 ff ff ff 	lea    -0xc0(%rbp),%rsi
  428a2d:	48 8b bd 78 ff ff ff 	mov    -0x88(%rbp),%rdi
  428a34:	e8 c7 fa ff ff       	callq  428500 <ctr_drbg_update_internal>
  428a39:	89 45 84             	mov    %eax,-0x7c(%rbp)
  428a3c:	83 f8 00             	cmp    $0x0,%eax
  428a3f:	74 02                	je     428a43 <mbedtls_ctr_drbg_random+0x2b3>
  428a41:	eb 10                	jmp    428a53 <mbedtls_ctr_drbg_random+0x2c3>
  428a43:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  428a4a:	8b 48 10             	mov    0x10(%rax),%ecx
  428a4d:	83 c1 01             	add    $0x1,%ecx
  428a50:	89 48 10             	mov    %ecx,0x10(%rax)
  428a53:	31 f6                	xor    %esi,%esi
  428a55:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
  428a5c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  428a60:	48 c7 45 e0 30 00 00 	movq   $0x30,-0x20(%rbp)
  428a67:	00 
  428a68:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  428a6f:	00 
  428a70:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  428a74:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  428a78:	ff d0                	callq  *%rax
  428a7a:	31 f6                	xor    %esi,%esi
  428a7c:	48 8d 95 20 ff ff ff 	lea    -0xe0(%rbp),%rdx
  428a83:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
  428a87:	48 c7 45 f0 10 00 00 	movq   $0x10,-0x10(%rbp)
  428a8e:	00 
  428a8f:	48 8b 14 25 70 e3 44 	mov    0x44e370,%rdx
  428a96:	00 
  428a97:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  428a9b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  428a9f:	48 89 95 d8 fe ff ff 	mov    %rdx,-0x128(%rbp)
  428aa6:	48 89 ca             	mov    %rcx,%rdx
  428aa9:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
  428ab0:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
  428ab7:	ff d1                	callq  *%rcx
  428ab9:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
  428ac0:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
  428ac7:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  428aca:	89 85 f4 fe ff ff    	mov    %eax,-0x10c(%rbp)
  428ad0:	8b 85 f4 fe ff ff    	mov    -0x10c(%rbp),%eax
  428ad6:	89 85 c4 fe ff ff    	mov    %eax,-0x13c(%rbp)
  428adc:	e8 75 ce 01 00       	callq  445956 <writeback_cache>
  428ae1:	8b 85 c4 fe ff ff    	mov    -0x13c(%rbp),%eax
  428ae7:	48 81 c4 40 01 00 00 	add    $0x140,%rsp
  428aee:	5d                   	pop    %rbp
  428aef:	c3                   	retq   

0000000000428af0 <mbedtls_ctr_drbg_write_seed_file>:
  428af0:	55                   	push   %rbp
  428af1:	48 89 e5             	mov    %rsp,%rbp
  428af4:	48 81 ec 40 01 00 00 	sub    $0x140,%rsp
  428afb:	48 b8 40 7e 44 00 00 	movabs $0x447e40,%rax
  428b02:	00 00 00 
  428b05:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  428b09:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  428b0d:	c7 45 e4 c6 ff ff ff 	movl   $0xffffffc6,-0x1c(%rbp)
  428b14:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  428b18:	48 89 c6             	mov    %rax,%rsi
  428b1b:	e8 00 87 fd ff       	callq  401220 <fopen64@plt>
  428b20:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  428b24:	48 83 f8 00          	cmp    $0x0,%rax
  428b28:	75 0c                	jne    428b36 <mbedtls_ctr_drbg_write_seed_file+0x46>
  428b2a:	c7 45 fc c6 ff ff ff 	movl   $0xffffffc6,-0x4(%rbp)
  428b31:	e9 84 00 00 00       	jmpq   428bba <mbedtls_ctr_drbg_write_seed_file+0xca>
  428b36:	b8 00 01 00 00       	mov    $0x100,%eax
  428b3b:	89 c2                	mov    %eax,%edx
  428b3d:	48 8d b5 d0 fe ff ff 	lea    -0x130(%rbp),%rsi
  428b44:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  428b48:	48 89 cf             	mov    %rcx,%rdi
  428b4b:	e8 40 fc ff ff       	callq  428790 <mbedtls_ctr_drbg_random>
  428b50:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  428b53:	83 f8 00             	cmp    $0x0,%eax
  428b56:	74 02                	je     428b5a <mbedtls_ctr_drbg_write_seed_file+0x6a>
  428b58:	eb 38                	jmp    428b92 <mbedtls_ctr_drbg_write_seed_file+0xa2>
  428b5a:	b8 01 00 00 00       	mov    $0x1,%eax
  428b5f:	89 c6                	mov    %eax,%esi
  428b61:	b8 00 01 00 00       	mov    $0x100,%eax
  428b66:	89 c2                	mov    %eax,%edx
  428b68:	48 8d bd d0 fe ff ff 	lea    -0x130(%rbp),%rdi
  428b6f:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  428b73:	e8 b8 86 fd ff       	callq  401230 <fwrite@plt>
  428b78:	48 3d 00 01 00 00    	cmp    $0x100,%rax
  428b7e:	74 09                	je     428b89 <mbedtls_ctr_drbg_write_seed_file+0x99>
  428b80:	c7 45 e4 c6 ff ff ff 	movl   $0xffffffc6,-0x1c(%rbp)
  428b87:	eb 07                	jmp    428b90 <mbedtls_ctr_drbg_write_seed_file+0xa0>
  428b89:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
  428b90:	eb 00                	jmp    428b92 <mbedtls_ctr_drbg_write_seed_file+0xa2>
  428b92:	b8 00 01 00 00       	mov    $0x100,%eax
  428b97:	89 c6                	mov    %eax,%esi
  428b99:	48 8d bd d0 fe ff ff 	lea    -0x130(%rbp),%rdi
  428ba0:	e8 cb d4 00 00       	callq  436070 <mbedtls_platform_zeroize>
  428ba5:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  428ba9:	e8 92 86 fd ff       	callq  401240 <fclose@plt>
  428bae:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  428bb1:	89 4d fc             	mov    %ecx,-0x4(%rbp)
  428bb4:	89 85 cc fe ff ff    	mov    %eax,-0x134(%rbp)
  428bba:	8b 45 fc             	mov    -0x4(%rbp),%eax
  428bbd:	89 85 c8 fe ff ff    	mov    %eax,-0x138(%rbp)
  428bc3:	e8 8e cd 01 00       	callq  445956 <writeback_cache>
  428bc8:	8b 85 c8 fe ff ff    	mov    -0x138(%rbp),%eax
  428bce:	48 81 c4 40 01 00 00 	add    $0x140,%rsp
  428bd5:	5d                   	pop    %rbp
  428bd6:	c3                   	retq   
  428bd7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  428bde:	00 00 

0000000000428be0 <mbedtls_des_setkey>:
  428be0:	55                   	push   %rbp
  428be1:	48 89 e5             	mov    %rsp,%rbp
  428be4:	48 83 ec 20          	sub    $0x20,%rsp
  428be8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  428bec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  428bf0:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  428bf4:	0f b6 06             	movzbl (%rsi),%eax
  428bf7:	c1 e0 18             	shl    $0x18,%eax
  428bfa:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  428bfe:	0f b6 4e 01          	movzbl 0x1(%rsi),%ecx
  428c02:	c1 e1 10             	shl    $0x10,%ecx
  428c05:	09 c8                	or     %ecx,%eax
  428c07:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  428c0b:	0f b6 4e 02          	movzbl 0x2(%rsi),%ecx
  428c0f:	c1 e1 08             	shl    $0x8,%ecx
  428c12:	09 c8                	or     %ecx,%eax
  428c14:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  428c18:	0f b6 4e 03          	movzbl 0x3(%rsi),%ecx
  428c1c:	09 c8                	or     %ecx,%eax
  428c1e:	89 45 e8             	mov    %eax,-0x18(%rbp)
  428c21:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  428c25:	0f b6 46 04          	movzbl 0x4(%rsi),%eax
  428c29:	c1 e0 18             	shl    $0x18,%eax
  428c2c:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  428c30:	0f b6 4e 05          	movzbl 0x5(%rsi),%ecx
  428c34:	c1 e1 10             	shl    $0x10,%ecx
  428c37:	09 c8                	or     %ecx,%eax
  428c39:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  428c3d:	0f b6 4e 06          	movzbl 0x6(%rsi),%ecx
  428c41:	c1 e1 08             	shl    $0x8,%ecx
  428c44:	09 c8                	or     %ecx,%eax
  428c46:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  428c4a:	0f b6 4e 07          	movzbl 0x7(%rsi),%ecx
  428c4e:	09 c8                	or     %ecx,%eax
  428c50:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  428c53:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  428c56:	c1 e8 04             	shr    $0x4,%eax
  428c59:	33 45 e8             	xor    -0x18(%rbp),%eax
  428c5c:	25 0f 0f 0f 0f       	and    $0xf0f0f0f,%eax
  428c61:	89 45 e0             	mov    %eax,-0x20(%rbp)
  428c64:	8b 45 e0             	mov    -0x20(%rbp),%eax
  428c67:	33 45 e8             	xor    -0x18(%rbp),%eax
  428c6a:	89 45 e8             	mov    %eax,-0x18(%rbp)
  428c6d:	8b 45 e0             	mov    -0x20(%rbp),%eax
  428c70:	c1 e0 04             	shl    $0x4,%eax
  428c73:	33 45 e4             	xor    -0x1c(%rbp),%eax
  428c76:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  428c79:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  428c7c:	33 45 e8             	xor    -0x18(%rbp),%eax
  428c7f:	25 10 10 10 10       	and    $0x10101010,%eax
  428c84:	89 45 e0             	mov    %eax,-0x20(%rbp)
  428c87:	8b 45 e0             	mov    -0x20(%rbp),%eax
  428c8a:	33 45 e8             	xor    -0x18(%rbp),%eax
  428c8d:	89 45 e8             	mov    %eax,-0x18(%rbp)
  428c90:	8b 45 e0             	mov    -0x20(%rbp),%eax
  428c93:	33 45 e4             	xor    -0x1c(%rbp),%eax
  428c96:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  428c99:	8b 45 e8             	mov    -0x18(%rbp),%eax
  428c9c:	83 e0 0f             	and    $0xf,%eax
  428c9f:	89 c0                	mov    %eax,%eax
  428ca1:	89 c6                	mov    %eax,%esi
  428ca3:	8b 04 b5 b0 d0 44 00 	mov    0x44d0b0(,%rsi,4),%eax
  428caa:	c1 e0 03             	shl    $0x3,%eax
  428cad:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  428cb0:	c1 e9 08             	shr    $0x8,%ecx
  428cb3:	83 e1 0f             	and    $0xf,%ecx
  428cb6:	89 c9                	mov    %ecx,%ecx
  428cb8:	89 ce                	mov    %ecx,%esi
  428cba:	8b 0c b5 b0 d0 44 00 	mov    0x44d0b0(,%rsi,4),%ecx
  428cc1:	c1 e1 02             	shl    $0x2,%ecx
  428cc4:	09 c8                	or     %ecx,%eax
  428cc6:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  428cc9:	c1 e9 10             	shr    $0x10,%ecx
  428ccc:	83 e1 0f             	and    $0xf,%ecx
  428ccf:	89 c9                	mov    %ecx,%ecx
  428cd1:	89 ce                	mov    %ecx,%esi
  428cd3:	8b 0c b5 b0 d0 44 00 	mov    0x44d0b0(,%rsi,4),%ecx
  428cda:	c1 e1 01             	shl    $0x1,%ecx
  428cdd:	09 c8                	or     %ecx,%eax
  428cdf:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  428ce2:	c1 e9 18             	shr    $0x18,%ecx
  428ce5:	83 e1 0f             	and    $0xf,%ecx
  428ce8:	89 c9                	mov    %ecx,%ecx
  428cea:	89 ce                	mov    %ecx,%esi
  428cec:	0b 04 b5 b0 d0 44 00 	or     0x44d0b0(,%rsi,4),%eax
  428cf3:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  428cf6:	c1 e9 05             	shr    $0x5,%ecx
  428cf9:	83 e1 0f             	and    $0xf,%ecx
  428cfc:	89 c9                	mov    %ecx,%ecx
  428cfe:	89 ce                	mov    %ecx,%esi
  428d00:	8b 0c b5 b0 d0 44 00 	mov    0x44d0b0(,%rsi,4),%ecx
  428d07:	c1 e1 07             	shl    $0x7,%ecx
  428d0a:	09 c8                	or     %ecx,%eax
  428d0c:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  428d0f:	c1 e9 0d             	shr    $0xd,%ecx
  428d12:	83 e1 0f             	and    $0xf,%ecx
  428d15:	89 c9                	mov    %ecx,%ecx
  428d17:	89 ce                	mov    %ecx,%esi
  428d19:	8b 0c b5 b0 d0 44 00 	mov    0x44d0b0(,%rsi,4),%ecx
  428d20:	c1 e1 06             	shl    $0x6,%ecx
  428d23:	09 c8                	or     %ecx,%eax
  428d25:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  428d28:	c1 e9 15             	shr    $0x15,%ecx
  428d2b:	83 e1 0f             	and    $0xf,%ecx
  428d2e:	89 c9                	mov    %ecx,%ecx
  428d30:	89 ce                	mov    %ecx,%esi
  428d32:	8b 0c b5 b0 d0 44 00 	mov    0x44d0b0(,%rsi,4),%ecx
  428d39:	c1 e1 05             	shl    $0x5,%ecx
  428d3c:	09 c8                	or     %ecx,%eax
  428d3e:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  428d41:	c1 e9 1d             	shr    $0x1d,%ecx
  428d44:	83 e1 0f             	and    $0xf,%ecx
  428d47:	89 c9                	mov    %ecx,%ecx
  428d49:	89 ce                	mov    %ecx,%esi
  428d4b:	8b 0c b5 b0 d0 44 00 	mov    0x44d0b0(,%rsi,4),%ecx
  428d52:	c1 e1 04             	shl    $0x4,%ecx
  428d55:	09 c8                	or     %ecx,%eax
  428d57:	89 45 e8             	mov    %eax,-0x18(%rbp)
  428d5a:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  428d5d:	c1 e8 01             	shr    $0x1,%eax
  428d60:	83 e0 0f             	and    $0xf,%eax
  428d63:	89 c0                	mov    %eax,%eax
  428d65:	89 c6                	mov    %eax,%esi
  428d67:	8b 04 b5 f0 d0 44 00 	mov    0x44d0f0(,%rsi,4),%eax
  428d6e:	c1 e0 03             	shl    $0x3,%eax
  428d71:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  428d74:	c1 e9 09             	shr    $0x9,%ecx
  428d77:	83 e1 0f             	and    $0xf,%ecx
  428d7a:	89 c9                	mov    %ecx,%ecx
  428d7c:	89 ce                	mov    %ecx,%esi
  428d7e:	8b 0c b5 f0 d0 44 00 	mov    0x44d0f0(,%rsi,4),%ecx
  428d85:	c1 e1 02             	shl    $0x2,%ecx
  428d88:	09 c8                	or     %ecx,%eax
  428d8a:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  428d8d:	c1 e9 11             	shr    $0x11,%ecx
  428d90:	83 e1 0f             	and    $0xf,%ecx
  428d93:	89 c9                	mov    %ecx,%ecx
  428d95:	89 ce                	mov    %ecx,%esi
  428d97:	8b 0c b5 f0 d0 44 00 	mov    0x44d0f0(,%rsi,4),%ecx
  428d9e:	c1 e1 01             	shl    $0x1,%ecx
  428da1:	09 c8                	or     %ecx,%eax
  428da3:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  428da6:	c1 e9 19             	shr    $0x19,%ecx
  428da9:	83 e1 0f             	and    $0xf,%ecx
  428dac:	89 c9                	mov    %ecx,%ecx
  428dae:	89 ce                	mov    %ecx,%esi
  428db0:	0b 04 b5 f0 d0 44 00 	or     0x44d0f0(,%rsi,4),%eax
  428db7:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  428dba:	c1 e9 04             	shr    $0x4,%ecx
  428dbd:	83 e1 0f             	and    $0xf,%ecx
  428dc0:	89 c9                	mov    %ecx,%ecx
  428dc2:	89 ce                	mov    %ecx,%esi
  428dc4:	8b 0c b5 f0 d0 44 00 	mov    0x44d0f0(,%rsi,4),%ecx
  428dcb:	c1 e1 07             	shl    $0x7,%ecx
  428dce:	09 c8                	or     %ecx,%eax
  428dd0:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  428dd3:	c1 e9 0c             	shr    $0xc,%ecx
  428dd6:	83 e1 0f             	and    $0xf,%ecx
  428dd9:	89 c9                	mov    %ecx,%ecx
  428ddb:	89 ce                	mov    %ecx,%esi
  428ddd:	8b 0c b5 f0 d0 44 00 	mov    0x44d0f0(,%rsi,4),%ecx
  428de4:	c1 e1 06             	shl    $0x6,%ecx
  428de7:	09 c8                	or     %ecx,%eax
  428de9:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  428dec:	c1 e9 14             	shr    $0x14,%ecx
  428def:	83 e1 0f             	and    $0xf,%ecx
  428df2:	89 c9                	mov    %ecx,%ecx
  428df4:	89 ce                	mov    %ecx,%esi
  428df6:	8b 0c b5 f0 d0 44 00 	mov    0x44d0f0(,%rsi,4),%ecx
  428dfd:	c1 e1 05             	shl    $0x5,%ecx
  428e00:	09 c8                	or     %ecx,%eax
  428e02:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  428e05:	c1 e9 1c             	shr    $0x1c,%ecx
  428e08:	83 e1 0f             	and    $0xf,%ecx
  428e0b:	89 c9                	mov    %ecx,%ecx
  428e0d:	89 ce                	mov    %ecx,%esi
  428e0f:	8b 0c b5 f0 d0 44 00 	mov    0x44d0f0(,%rsi,4),%ecx
  428e16:	c1 e1 04             	shl    $0x4,%ecx
  428e19:	09 c8                	or     %ecx,%eax
  428e1b:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  428e1e:	8b 45 e8             	mov    -0x18(%rbp),%eax
  428e21:	25 ff ff ff 0f       	and    $0xfffffff,%eax
  428e26:	89 45 e8             	mov    %eax,-0x18(%rbp)
  428e29:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  428e2c:	25 ff ff ff 0f       	and    $0xfffffff,%eax
  428e31:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  428e34:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  428e3b:	83 7d ec 10          	cmpl   $0x10,-0x14(%rbp)
  428e3f:	0f 8d da 02 00 00    	jge    42911f <mbedtls_des_setkey+0x53f>
  428e45:	83 7d ec 02          	cmpl   $0x2,-0x14(%rbp)
  428e49:	7c 0c                	jl     428e57 <mbedtls_des_setkey+0x277>
  428e4b:	83 7d ec 08          	cmpl   $0x8,-0x14(%rbp)
  428e4f:	74 06                	je     428e57 <mbedtls_des_setkey+0x277>
  428e51:	83 7d ec 0f          	cmpl   $0xf,-0x14(%rbp)
  428e55:	75 2e                	jne    428e85 <mbedtls_des_setkey+0x2a5>
  428e57:	8b 45 e8             	mov    -0x18(%rbp),%eax
  428e5a:	c1 e0 01             	shl    $0x1,%eax
  428e5d:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  428e60:	c1 e9 1b             	shr    $0x1b,%ecx
  428e63:	09 c8                	or     %ecx,%eax
  428e65:	25 ff ff ff 0f       	and    $0xfffffff,%eax
  428e6a:	89 45 e8             	mov    %eax,-0x18(%rbp)
  428e6d:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  428e70:	c1 e0 01             	shl    $0x1,%eax
  428e73:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  428e76:	c1 e9 1b             	shr    $0x1b,%ecx
  428e79:	09 c8                	or     %ecx,%eax
  428e7b:	25 ff ff ff 0f       	and    $0xfffffff,%eax
  428e80:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  428e83:	eb 2c                	jmp    428eb1 <mbedtls_des_setkey+0x2d1>
  428e85:	8b 45 e8             	mov    -0x18(%rbp),%eax
  428e88:	c1 e0 02             	shl    $0x2,%eax
  428e8b:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  428e8e:	c1 e9 1a             	shr    $0x1a,%ecx
  428e91:	09 c8                	or     %ecx,%eax
  428e93:	25 ff ff ff 0f       	and    $0xfffffff,%eax
  428e98:	89 45 e8             	mov    %eax,-0x18(%rbp)
  428e9b:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  428e9e:	c1 e0 02             	shl    $0x2,%eax
  428ea1:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  428ea4:	c1 e9 1a             	shr    $0x1a,%ecx
  428ea7:	09 c8                	or     %ecx,%eax
  428ea9:	25 ff ff ff 0f       	and    $0xfffffff,%eax
  428eae:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  428eb1:	8b 45 e8             	mov    -0x18(%rbp),%eax
  428eb4:	c1 e0 04             	shl    $0x4,%eax
  428eb7:	25 00 00 00 24       	and    $0x24000000,%eax
  428ebc:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  428ebf:	c1 e1 1c             	shl    $0x1c,%ecx
  428ec2:	81 e1 00 00 00 10    	and    $0x10000000,%ecx
  428ec8:	09 c8                	or     %ecx,%eax
  428eca:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  428ecd:	c1 e1 0e             	shl    $0xe,%ecx
  428ed0:	81 e1 00 00 00 08    	and    $0x8000000,%ecx
  428ed6:	09 c8                	or     %ecx,%eax
  428ed8:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  428edb:	c1 e1 12             	shl    $0x12,%ecx
  428ede:	81 e1 00 00 08 02    	and    $0x2080000,%ecx
  428ee4:	09 c8                	or     %ecx,%eax
  428ee6:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  428ee9:	c1 e1 06             	shl    $0x6,%ecx
  428eec:	81 e1 00 00 00 01    	and    $0x1000000,%ecx
  428ef2:	09 c8                	or     %ecx,%eax
  428ef4:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  428ef7:	c1 e1 09             	shl    $0x9,%ecx
  428efa:	81 e1 00 00 20 00    	and    $0x200000,%ecx
  428f00:	09 c8                	or     %ecx,%eax
  428f02:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  428f05:	c1 e9 01             	shr    $0x1,%ecx
  428f08:	81 e1 00 00 10 00    	and    $0x100000,%ecx
  428f0e:	09 c8                	or     %ecx,%eax
  428f10:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  428f13:	c1 e1 0a             	shl    $0xa,%ecx
  428f16:	81 e1 00 00 04 00    	and    $0x40000,%ecx
  428f1c:	09 c8                	or     %ecx,%eax
  428f1e:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  428f21:	c1 e1 02             	shl    $0x2,%ecx
  428f24:	81 e1 00 00 02 00    	and    $0x20000,%ecx
  428f2a:	09 c8                	or     %ecx,%eax
  428f2c:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  428f2f:	c1 e9 0a             	shr    $0xa,%ecx
  428f32:	81 e1 00 00 01 00    	and    $0x10000,%ecx
  428f38:	09 c8                	or     %ecx,%eax
  428f3a:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  428f3d:	c1 e9 0d             	shr    $0xd,%ecx
  428f40:	81 e1 00 20 00 00    	and    $0x2000,%ecx
  428f46:	09 c8                	or     %ecx,%eax
  428f48:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  428f4b:	c1 e9 04             	shr    $0x4,%ecx
  428f4e:	81 e1 00 10 00 00    	and    $0x1000,%ecx
  428f54:	09 c8                	or     %ecx,%eax
  428f56:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  428f59:	c1 e1 06             	shl    $0x6,%ecx
  428f5c:	81 e1 00 08 00 00    	and    $0x800,%ecx
  428f62:	09 c8                	or     %ecx,%eax
  428f64:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  428f67:	c1 e9 01             	shr    $0x1,%ecx
  428f6a:	81 e1 00 04 00 00    	and    $0x400,%ecx
  428f70:	09 c8                	or     %ecx,%eax
  428f72:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  428f75:	c1 e9 0e             	shr    $0xe,%ecx
  428f78:	81 e1 00 02 00 00    	and    $0x200,%ecx
  428f7e:	09 c8                	or     %ecx,%eax
  428f80:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  428f83:	81 e1 00 01 00 00    	and    $0x100,%ecx
  428f89:	09 c8                	or     %ecx,%eax
  428f8b:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  428f8e:	c1 e9 05             	shr    $0x5,%ecx
  428f91:	83 e1 20             	and    $0x20,%ecx
  428f94:	09 c8                	or     %ecx,%eax
  428f96:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  428f99:	c1 e9 0a             	shr    $0xa,%ecx
  428f9c:	83 e1 10             	and    $0x10,%ecx
  428f9f:	09 c8                	or     %ecx,%eax
  428fa1:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  428fa4:	c1 e9 03             	shr    $0x3,%ecx
  428fa7:	83 e1 08             	and    $0x8,%ecx
  428faa:	09 c8                	or     %ecx,%eax
  428fac:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  428faf:	c1 e9 12             	shr    $0x12,%ecx
  428fb2:	83 e1 04             	and    $0x4,%ecx
  428fb5:	09 c8                	or     %ecx,%eax
  428fb7:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  428fba:	c1 e9 1a             	shr    $0x1a,%ecx
  428fbd:	83 e1 02             	and    $0x2,%ecx
  428fc0:	09 c8                	or     %ecx,%eax
  428fc2:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  428fc5:	c1 e9 18             	shr    $0x18,%ecx
  428fc8:	83 e1 01             	and    $0x1,%ecx
  428fcb:	09 c8                	or     %ecx,%eax
  428fcd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  428fd1:	48 89 d6             	mov    %rdx,%rsi
  428fd4:	48 83 c6 04          	add    $0x4,%rsi
  428fd8:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)
  428fdc:	89 02                	mov    %eax,(%rdx)
  428fde:	8b 45 e8             	mov    -0x18(%rbp),%eax
  428fe1:	c1 e0 0f             	shl    $0xf,%eax
  428fe4:	25 00 00 00 20       	and    $0x20000000,%eax
  428fe9:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  428fec:	c1 e1 11             	shl    $0x11,%ecx
  428fef:	81 e1 00 00 00 10    	and    $0x10000000,%ecx
  428ff5:	09 c8                	or     %ecx,%eax
  428ff7:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  428ffa:	c1 e1 0a             	shl    $0xa,%ecx
  428ffd:	81 e1 00 00 00 08    	and    $0x8000000,%ecx
  429003:	09 c8                	or     %ecx,%eax
  429005:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  429008:	c1 e1 16             	shl    $0x16,%ecx
  42900b:	81 e1 00 00 00 04    	and    $0x4000000,%ecx
  429011:	09 c8                	or     %ecx,%eax
  429013:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  429016:	c1 e9 02             	shr    $0x2,%ecx
  429019:	81 e1 00 00 00 02    	and    $0x2000000,%ecx
  42901f:	09 c8                	or     %ecx,%eax
  429021:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  429024:	c1 e1 01             	shl    $0x1,%ecx
  429027:	81 e1 00 00 00 01    	and    $0x1000000,%ecx
  42902d:	09 c8                	or     %ecx,%eax
  42902f:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  429032:	c1 e1 10             	shl    $0x10,%ecx
  429035:	81 e1 00 00 20 00    	and    $0x200000,%ecx
  42903b:	09 c8                	or     %ecx,%eax
  42903d:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  429040:	c1 e1 0b             	shl    $0xb,%ecx
  429043:	81 e1 00 00 10 00    	and    $0x100000,%ecx
  429049:	09 c8                	or     %ecx,%eax
  42904b:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  42904e:	c1 e1 03             	shl    $0x3,%ecx
  429051:	81 e1 00 00 08 00    	and    $0x80000,%ecx
  429057:	09 c8                	or     %ecx,%eax
  429059:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  42905c:	c1 e9 06             	shr    $0x6,%ecx
  42905f:	81 e1 00 00 04 00    	and    $0x40000,%ecx
  429065:	09 c8                	or     %ecx,%eax
  429067:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  42906a:	c1 e1 0f             	shl    $0xf,%ecx
  42906d:	81 e1 00 00 02 00    	and    $0x20000,%ecx
  429073:	09 c8                	or     %ecx,%eax
  429075:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  429078:	c1 e9 04             	shr    $0x4,%ecx
  42907b:	81 e1 00 00 01 00    	and    $0x10000,%ecx
  429081:	09 c8                	or     %ecx,%eax
  429083:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  429086:	c1 e9 02             	shr    $0x2,%ecx
  429089:	81 e1 00 20 00 00    	and    $0x2000,%ecx
  42908f:	09 c8                	or     %ecx,%eax
  429091:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  429094:	c1 e1 08             	shl    $0x8,%ecx
  429097:	81 e1 00 10 00 00    	and    $0x1000,%ecx
  42909d:	09 c8                	or     %ecx,%eax
  42909f:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  4290a2:	c1 e9 0e             	shr    $0xe,%ecx
  4290a5:	81 e1 08 08 00 00    	and    $0x808,%ecx
  4290ab:	09 c8                	or     %ecx,%eax
  4290ad:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  4290b0:	c1 e9 09             	shr    $0x9,%ecx
  4290b3:	81 e1 00 04 00 00    	and    $0x400,%ecx
  4290b9:	09 c8                	or     %ecx,%eax
  4290bb:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  4290be:	81 e1 00 02 00 00    	and    $0x200,%ecx
  4290c4:	09 c8                	or     %ecx,%eax
  4290c6:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  4290c9:	c1 e1 07             	shl    $0x7,%ecx
  4290cc:	81 e1 00 01 00 00    	and    $0x100,%ecx
  4290d2:	09 c8                	or     %ecx,%eax
  4290d4:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  4290d7:	c1 e9 07             	shr    $0x7,%ecx
  4290da:	83 e1 20             	and    $0x20,%ecx
  4290dd:	09 c8                	or     %ecx,%eax
  4290df:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  4290e2:	c1 e9 03             	shr    $0x3,%ecx
  4290e5:	83 e1 11             	and    $0x11,%ecx
  4290e8:	09 c8                	or     %ecx,%eax
  4290ea:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  4290ed:	c1 e1 02             	shl    $0x2,%ecx
  4290f0:	83 e1 04             	and    $0x4,%ecx
  4290f3:	09 c8                	or     %ecx,%eax
  4290f5:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  4290f8:	c1 e9 15             	shr    $0x15,%ecx
  4290fb:	83 e1 02             	and    $0x2,%ecx
  4290fe:	09 c8                	or     %ecx,%eax
  429100:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  429104:	48 89 d6             	mov    %rdx,%rsi
  429107:	48 83 c6 04          	add    $0x4,%rsi
  42910b:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)
  42910f:	89 02                	mov    %eax,(%rdx)
  429111:	8b 45 ec             	mov    -0x14(%rbp),%eax
  429114:	83 c0 01             	add    $0x1,%eax
  429117:	89 45 ec             	mov    %eax,-0x14(%rbp)
  42911a:	e9 1c fd ff ff       	jmpq   428e3b <mbedtls_des_setkey+0x25b>
  42911f:	e8 32 c8 01 00       	callq  445956 <writeback_cache>
  429124:	48 83 c4 20          	add    $0x20,%rsp
  429128:	5d                   	pop    %rbp
  429129:	c3                   	retq   
  42912a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000429130 <mbedtls_des_setkey_dec>:
  429130:	55                   	push   %rbp
  429131:	48 89 e5             	mov    %rsp,%rbp
  429134:	48 83 ec 20          	sub    $0x20,%rsp
  429138:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42913c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  429140:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  429144:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  429148:	e8 93 fa ff ff       	callq  428be0 <mbedtls_des_setkey>
  42914d:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  429154:	83 7d ec 10          	cmpl   $0x10,-0x14(%rbp)
  429158:	0f 8d a0 00 00 00    	jge    4291fe <mbedtls_des_setkey_dec+0xce>
  42915e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  429162:	48 63 4d ec          	movslq -0x14(%rbp),%rcx
  429166:	8b 14 88             	mov    (%rax,%rcx,4),%edx
  429169:	89 55 e8             	mov    %edx,-0x18(%rbp)
  42916c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  429170:	ba 1e 00 00 00       	mov    $0x1e,%edx
  429175:	89 d6                	mov    %edx,%esi
  429177:	2b 75 ec             	sub    -0x14(%rbp),%esi
  42917a:	48 63 ce             	movslq %esi,%rcx
  42917d:	8b 34 88             	mov    (%rax,%rcx,4),%esi
  429180:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  429184:	48 63 4d ec          	movslq -0x14(%rbp),%rcx
  429188:	89 34 88             	mov    %esi,(%rax,%rcx,4)
  42918b:	8b 75 e8             	mov    -0x18(%rbp),%esi
  42918e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  429192:	2b 55 ec             	sub    -0x14(%rbp),%edx
  429195:	48 63 ca             	movslq %edx,%rcx
  429198:	89 34 88             	mov    %esi,(%rax,%rcx,4)
  42919b:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
  4291a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4291a6:	8b 55 ec             	mov    -0x14(%rbp),%edx
  4291a9:	83 c2 01             	add    $0x1,%edx
  4291ac:	48 63 ca             	movslq %edx,%rcx
  4291af:	8b 14 88             	mov    (%rax,%rcx,4),%edx
  4291b2:	89 55 e4             	mov    %edx,-0x1c(%rbp)
  4291b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4291b9:	ba 1f 00 00 00       	mov    $0x1f,%edx
  4291be:	89 d6                	mov    %edx,%esi
  4291c0:	2b 75 ec             	sub    -0x14(%rbp),%esi
  4291c3:	48 63 ce             	movslq %esi,%rcx
  4291c6:	8b 34 88             	mov    (%rax,%rcx,4),%esi
  4291c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4291cd:	8b 7d ec             	mov    -0x14(%rbp),%edi
  4291d0:	83 c7 01             	add    $0x1,%edi
  4291d3:	48 63 cf             	movslq %edi,%rcx
  4291d6:	89 34 88             	mov    %esi,(%rax,%rcx,4)
  4291d9:	8b 75 e4             	mov    -0x1c(%rbp),%esi
  4291dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4291e0:	2b 55 ec             	sub    -0x14(%rbp),%edx
  4291e3:	48 63 ca             	movslq %edx,%rcx
  4291e6:	89 34 88             	mov    %esi,(%rax,%rcx,4)
  4291e9:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
  4291f0:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4291f3:	83 c0 02             	add    $0x2,%eax
  4291f6:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4291f9:	e9 56 ff ff ff       	jmpq   429154 <mbedtls_des_setkey_dec+0x24>
  4291fe:	e8 53 c7 01 00       	callq  445956 <writeback_cache>
  429203:	31 c0                	xor    %eax,%eax
  429205:	48 83 c4 20          	add    $0x20,%rsp
  429209:	5d                   	pop    %rbp
  42920a:	c3                   	retq   
  42920b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000429210 <des3_set2key>:
  429210:	55                   	push   %rbp
  429211:	48 89 e5             	mov    %rsp,%rbp
  429214:	48 83 ec 20          	sub    $0x20,%rsp
  429218:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42921c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  429220:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  429224:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  429228:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  42922c:	e8 af f9 ff ff       	callq  428be0 <mbedtls_des_setkey>
  429231:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  429235:	48 81 c2 80 00 00 00 	add    $0x80,%rdx
  42923c:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  429240:	48 83 c6 08          	add    $0x8,%rsi
  429244:	48 89 d7             	mov    %rdx,%rdi
  429247:	e8 94 f9 ff ff       	callq  428be0 <mbedtls_des_setkey>
  42924c:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
  429253:	83 7d e4 20          	cmpl   $0x20,-0x1c(%rbp)
  429257:	0f 8d 07 01 00 00    	jge    429364 <des3_set2key+0x154>
  42925d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  429261:	b9 1e 00 00 00       	mov    $0x1e,%ecx
  429266:	2b 4d e4             	sub    -0x1c(%rbp),%ecx
  429269:	48 63 d1             	movslq %ecx,%rdx
  42926c:	8b 0c 90             	mov    (%rax,%rdx,4),%ecx
  42926f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  429273:	48 63 55 e4          	movslq -0x1c(%rbp),%rdx
  429277:	89 0c 90             	mov    %ecx,(%rax,%rdx,4)
  42927a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42927e:	b9 1f 00 00 00       	mov    $0x1f,%ecx
  429283:	2b 4d e4             	sub    -0x1c(%rbp),%ecx
  429286:	48 63 d1             	movslq %ecx,%rdx
  429289:	8b 0c 90             	mov    (%rax,%rdx,4),%ecx
  42928c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  429290:	8b 75 e4             	mov    -0x1c(%rbp),%esi
  429293:	83 c6 01             	add    $0x1,%esi
  429296:	48 63 d6             	movslq %esi,%rdx
  429299:	89 0c 90             	mov    %ecx,(%rax,%rdx,4)
  42929c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4292a0:	b9 3e 00 00 00       	mov    $0x3e,%ecx
  4292a5:	2b 4d e4             	sub    -0x1c(%rbp),%ecx
  4292a8:	48 63 d1             	movslq %ecx,%rdx
  4292ab:	8b 0c 90             	mov    (%rax,%rdx,4),%ecx
  4292ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4292b2:	8b 75 e4             	mov    -0x1c(%rbp),%esi
  4292b5:	83 c6 20             	add    $0x20,%esi
  4292b8:	48 63 d6             	movslq %esi,%rdx
  4292bb:	89 0c 90             	mov    %ecx,(%rax,%rdx,4)
  4292be:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4292c2:	b9 3f 00 00 00       	mov    $0x3f,%ecx
  4292c7:	2b 4d e4             	sub    -0x1c(%rbp),%ecx
  4292ca:	48 63 d1             	movslq %ecx,%rdx
  4292cd:	8b 0c 90             	mov    (%rax,%rdx,4),%ecx
  4292d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4292d4:	8b 75 e4             	mov    -0x1c(%rbp),%esi
  4292d7:	83 c6 21             	add    $0x21,%esi
  4292da:	48 63 d6             	movslq %esi,%rdx
  4292dd:	89 0c 90             	mov    %ecx,(%rax,%rdx,4)
  4292e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4292e4:	48 63 55 e4          	movslq -0x1c(%rbp),%rdx
  4292e8:	8b 0c 90             	mov    (%rax,%rdx,4),%ecx
  4292eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4292ef:	8b 75 e4             	mov    -0x1c(%rbp),%esi
  4292f2:	83 c6 40             	add    $0x40,%esi
  4292f5:	48 63 d6             	movslq %esi,%rdx
  4292f8:	89 0c 90             	mov    %ecx,(%rax,%rdx,4)
  4292fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4292ff:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  429302:	83 c1 01             	add    $0x1,%ecx
  429305:	48 63 d1             	movslq %ecx,%rdx
  429308:	8b 0c 90             	mov    (%rax,%rdx,4),%ecx
  42930b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42930f:	8b 75 e4             	mov    -0x1c(%rbp),%esi
  429312:	83 c6 41             	add    $0x41,%esi
  429315:	48 63 d6             	movslq %esi,%rdx
  429318:	89 0c 90             	mov    %ecx,(%rax,%rdx,4)
  42931b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42931f:	48 63 55 e4          	movslq -0x1c(%rbp),%rdx
  429323:	8b 0c 90             	mov    (%rax,%rdx,4),%ecx
  429326:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42932a:	8b 75 e4             	mov    -0x1c(%rbp),%esi
  42932d:	83 c6 40             	add    $0x40,%esi
  429330:	48 63 d6             	movslq %esi,%rdx
  429333:	89 0c 90             	mov    %ecx,(%rax,%rdx,4)
  429336:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42933a:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  42933d:	83 c1 01             	add    $0x1,%ecx
  429340:	48 63 d1             	movslq %ecx,%rdx
  429343:	8b 0c 90             	mov    (%rax,%rdx,4),%ecx
  429346:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42934a:	8b 75 e4             	mov    -0x1c(%rbp),%esi
  42934d:	83 c6 41             	add    $0x41,%esi
  429350:	48 63 d6             	movslq %esi,%rdx
  429353:	89 0c 90             	mov    %ecx,(%rax,%rdx,4)
  429356:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  429359:	83 c0 02             	add    $0x2,%eax
  42935c:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  42935f:	e9 ef fe ff ff       	jmpq   429253 <des3_set2key+0x43>
  429364:	e8 ed c5 01 00       	callq  445956 <writeback_cache>
  429369:	48 83 c4 20          	add    $0x20,%rsp
  42936d:	5d                   	pop    %rbp
  42936e:	c3                   	retq   
  42936f:	90                   	nop

0000000000429370 <des3_set3key>:
  429370:	55                   	push   %rbp
  429371:	48 89 e5             	mov    %rsp,%rbp
  429374:	48 83 ec 20          	sub    $0x20,%rsp
  429378:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42937c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  429380:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  429384:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  429388:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  42938c:	e8 4f f8 ff ff       	callq  428be0 <mbedtls_des_setkey>
  429391:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  429395:	48 81 c2 80 00 00 00 	add    $0x80,%rdx
  42939c:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  4293a0:	48 83 c6 08          	add    $0x8,%rsi
  4293a4:	48 89 d7             	mov    %rdx,%rdi
  4293a7:	e8 34 f8 ff ff       	callq  428be0 <mbedtls_des_setkey>
  4293ac:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4293b0:	48 81 c2 00 01 00 00 	add    $0x100,%rdx
  4293b7:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  4293bb:	48 83 c6 10          	add    $0x10,%rsi
  4293bf:	48 89 d7             	mov    %rdx,%rdi
  4293c2:	e8 19 f8 ff ff       	callq  428be0 <mbedtls_des_setkey>
  4293c7:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
  4293ce:	83 7d e4 20          	cmpl   $0x20,-0x1c(%rbp)
  4293d2:	0f 8d d5 00 00 00    	jge    4294ad <des3_set3key+0x13d>
  4293d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4293dc:	b9 5e 00 00 00       	mov    $0x5e,%ecx
  4293e1:	2b 4d e4             	sub    -0x1c(%rbp),%ecx
  4293e4:	48 63 d1             	movslq %ecx,%rdx
  4293e7:	8b 0c 90             	mov    (%rax,%rdx,4),%ecx
  4293ea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4293ee:	48 63 55 e4          	movslq -0x1c(%rbp),%rdx
  4293f2:	89 0c 90             	mov    %ecx,(%rax,%rdx,4)
  4293f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4293f9:	b9 5f 00 00 00       	mov    $0x5f,%ecx
  4293fe:	2b 4d e4             	sub    -0x1c(%rbp),%ecx
  429401:	48 63 d1             	movslq %ecx,%rdx
  429404:	8b 0c 90             	mov    (%rax,%rdx,4),%ecx
  429407:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42940b:	8b 75 e4             	mov    -0x1c(%rbp),%esi
  42940e:	83 c6 01             	add    $0x1,%esi
  429411:	48 63 d6             	movslq %esi,%rdx
  429414:	89 0c 90             	mov    %ecx,(%rax,%rdx,4)
  429417:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42941b:	b9 3e 00 00 00       	mov    $0x3e,%ecx
  429420:	2b 4d e4             	sub    -0x1c(%rbp),%ecx
  429423:	48 63 d1             	movslq %ecx,%rdx
  429426:	8b 0c 90             	mov    (%rax,%rdx,4),%ecx
  429429:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42942d:	8b 75 e4             	mov    -0x1c(%rbp),%esi
  429430:	83 c6 20             	add    $0x20,%esi
  429433:	48 63 d6             	movslq %esi,%rdx
  429436:	89 0c 90             	mov    %ecx,(%rax,%rdx,4)
  429439:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42943d:	b9 3f 00 00 00       	mov    $0x3f,%ecx
  429442:	2b 4d e4             	sub    -0x1c(%rbp),%ecx
  429445:	48 63 d1             	movslq %ecx,%rdx
  429448:	8b 0c 90             	mov    (%rax,%rdx,4),%ecx
  42944b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42944f:	8b 75 e4             	mov    -0x1c(%rbp),%esi
  429452:	83 c6 21             	add    $0x21,%esi
  429455:	48 63 d6             	movslq %esi,%rdx
  429458:	89 0c 90             	mov    %ecx,(%rax,%rdx,4)
  42945b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42945f:	b9 1e 00 00 00       	mov    $0x1e,%ecx
  429464:	2b 4d e4             	sub    -0x1c(%rbp),%ecx
  429467:	48 63 d1             	movslq %ecx,%rdx
  42946a:	8b 0c 90             	mov    (%rax,%rdx,4),%ecx
  42946d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  429471:	8b 75 e4             	mov    -0x1c(%rbp),%esi
  429474:	83 c6 40             	add    $0x40,%esi
  429477:	48 63 d6             	movslq %esi,%rdx
  42947a:	89 0c 90             	mov    %ecx,(%rax,%rdx,4)
  42947d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  429481:	b9 1f 00 00 00       	mov    $0x1f,%ecx
  429486:	2b 4d e4             	sub    -0x1c(%rbp),%ecx
  429489:	48 63 d1             	movslq %ecx,%rdx
  42948c:	8b 0c 90             	mov    (%rax,%rdx,4),%ecx
  42948f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  429493:	8b 75 e4             	mov    -0x1c(%rbp),%esi
  429496:	83 c6 41             	add    $0x41,%esi
  429499:	48 63 d6             	movslq %esi,%rdx
  42949c:	89 0c 90             	mov    %ecx,(%rax,%rdx,4)
  42949f:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  4294a2:	83 c0 02             	add    $0x2,%eax
  4294a5:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  4294a8:	e9 21 ff ff ff       	jmpq   4293ce <des3_set3key+0x5e>
  4294ad:	e8 a4 c4 01 00       	callq  445956 <writeback_cache>
  4294b2:	48 83 c4 20          	add    $0x20,%rsp
  4294b6:	5d                   	pop    %rbp
  4294b7:	c3                   	retq   
  4294b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4294bf:	00 

00000000004294c0 <mbedtls_des_crypt_ecb>:
  4294c0:	55                   	push   %rbp
  4294c1:	48 89 e5             	mov    %rsp,%rbp
  4294c4:	48 83 ec 30          	sub    $0x30,%rsp
  4294c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4294cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  4294d0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  4294d4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4294d8:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
  4294dc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4294e0:	0f b6 02             	movzbl (%rdx),%eax
  4294e3:	c1 e0 18             	shl    $0x18,%eax
  4294e6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4294ea:	0f b6 4a 01          	movzbl 0x1(%rdx),%ecx
  4294ee:	c1 e1 10             	shl    $0x10,%ecx
  4294f1:	09 c8                	or     %ecx,%eax
  4294f3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4294f7:	0f b6 4a 02          	movzbl 0x2(%rdx),%ecx
  4294fb:	c1 e1 08             	shl    $0x8,%ecx
  4294fe:	09 c8                	or     %ecx,%eax
  429500:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  429504:	0f b6 4a 03          	movzbl 0x3(%rdx),%ecx
  429508:	09 c8                	or     %ecx,%eax
  42950a:	89 45 e0             	mov    %eax,-0x20(%rbp)
  42950d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  429511:	0f b6 42 04          	movzbl 0x4(%rdx),%eax
  429515:	c1 e0 18             	shl    $0x18,%eax
  429518:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  42951c:	0f b6 4a 05          	movzbl 0x5(%rdx),%ecx
  429520:	c1 e1 10             	shl    $0x10,%ecx
  429523:	09 c8                	or     %ecx,%eax
  429525:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  429529:	0f b6 4a 06          	movzbl 0x6(%rdx),%ecx
  42952d:	c1 e1 08             	shl    $0x8,%ecx
  429530:	09 c8                	or     %ecx,%eax
  429532:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  429536:	0f b6 4a 07          	movzbl 0x7(%rdx),%ecx
  42953a:	09 c8                	or     %ecx,%eax
  42953c:	89 45 dc             	mov    %eax,-0x24(%rbp)
  42953f:	8b 45 e0             	mov    -0x20(%rbp),%eax
  429542:	c1 e8 04             	shr    $0x4,%eax
  429545:	33 45 dc             	xor    -0x24(%rbp),%eax
  429548:	25 0f 0f 0f 0f       	and    $0xf0f0f0f,%eax
  42954d:	89 45 d8             	mov    %eax,-0x28(%rbp)
  429550:	8b 45 d8             	mov    -0x28(%rbp),%eax
  429553:	33 45 dc             	xor    -0x24(%rbp),%eax
  429556:	89 45 dc             	mov    %eax,-0x24(%rbp)
  429559:	8b 45 d8             	mov    -0x28(%rbp),%eax
  42955c:	c1 e0 04             	shl    $0x4,%eax
  42955f:	33 45 e0             	xor    -0x20(%rbp),%eax
  429562:	89 45 e0             	mov    %eax,-0x20(%rbp)
  429565:	8b 45 e0             	mov    -0x20(%rbp),%eax
  429568:	c1 e8 10             	shr    $0x10,%eax
  42956b:	33 45 dc             	xor    -0x24(%rbp),%eax
  42956e:	25 ff ff 00 00       	and    $0xffff,%eax
  429573:	89 45 d8             	mov    %eax,-0x28(%rbp)
  429576:	8b 45 d8             	mov    -0x28(%rbp),%eax
  429579:	33 45 dc             	xor    -0x24(%rbp),%eax
  42957c:	89 45 dc             	mov    %eax,-0x24(%rbp)
  42957f:	8b 45 d8             	mov    -0x28(%rbp),%eax
  429582:	c1 e0 10             	shl    $0x10,%eax
  429585:	33 45 e0             	xor    -0x20(%rbp),%eax
  429588:	89 45 e0             	mov    %eax,-0x20(%rbp)
  42958b:	8b 45 dc             	mov    -0x24(%rbp),%eax
  42958e:	c1 e8 02             	shr    $0x2,%eax
  429591:	33 45 e0             	xor    -0x20(%rbp),%eax
  429594:	25 33 33 33 33       	and    $0x33333333,%eax
  429599:	89 45 d8             	mov    %eax,-0x28(%rbp)
  42959c:	8b 45 d8             	mov    -0x28(%rbp),%eax
  42959f:	33 45 e0             	xor    -0x20(%rbp),%eax
  4295a2:	89 45 e0             	mov    %eax,-0x20(%rbp)
  4295a5:	8b 45 d8             	mov    -0x28(%rbp),%eax
  4295a8:	c1 e0 02             	shl    $0x2,%eax
  4295ab:	33 45 dc             	xor    -0x24(%rbp),%eax
  4295ae:	89 45 dc             	mov    %eax,-0x24(%rbp)
  4295b1:	8b 45 dc             	mov    -0x24(%rbp),%eax
  4295b4:	c1 e8 08             	shr    $0x8,%eax
  4295b7:	33 45 e0             	xor    -0x20(%rbp),%eax
  4295ba:	25 ff 00 ff 00       	and    $0xff00ff,%eax
  4295bf:	89 45 d8             	mov    %eax,-0x28(%rbp)
  4295c2:	8b 45 d8             	mov    -0x28(%rbp),%eax
  4295c5:	33 45 e0             	xor    -0x20(%rbp),%eax
  4295c8:	89 45 e0             	mov    %eax,-0x20(%rbp)
  4295cb:	8b 45 d8             	mov    -0x28(%rbp),%eax
  4295ce:	c1 e0 08             	shl    $0x8,%eax
  4295d1:	33 45 dc             	xor    -0x24(%rbp),%eax
  4295d4:	89 45 dc             	mov    %eax,-0x24(%rbp)
  4295d7:	8b 45 dc             	mov    -0x24(%rbp),%eax
  4295da:	c1 e0 01             	shl    $0x1,%eax
  4295dd:	8b 4d dc             	mov    -0x24(%rbp),%ecx
  4295e0:	c1 e9 1f             	shr    $0x1f,%ecx
  4295e3:	09 c8                	or     %ecx,%eax
  4295e5:	89 45 dc             	mov    %eax,-0x24(%rbp)
  4295e8:	8b 45 e0             	mov    -0x20(%rbp),%eax
  4295eb:	33 45 dc             	xor    -0x24(%rbp),%eax
  4295ee:	25 aa aa aa aa       	and    $0xaaaaaaaa,%eax
  4295f3:	89 45 d8             	mov    %eax,-0x28(%rbp)
  4295f6:	8b 45 d8             	mov    -0x28(%rbp),%eax
  4295f9:	33 45 dc             	xor    -0x24(%rbp),%eax
  4295fc:	89 45 dc             	mov    %eax,-0x24(%rbp)
  4295ff:	8b 45 d8             	mov    -0x28(%rbp),%eax
  429602:	33 45 e0             	xor    -0x20(%rbp),%eax
  429605:	89 45 e0             	mov    %eax,-0x20(%rbp)
  429608:	8b 45 e0             	mov    -0x20(%rbp),%eax
  42960b:	c1 e0 01             	shl    $0x1,%eax
  42960e:	8b 4d e0             	mov    -0x20(%rbp),%ecx
  429611:	c1 e9 1f             	shr    $0x1f,%ecx
  429614:	09 c8                	or     %ecx,%eax
  429616:	89 45 e0             	mov    %eax,-0x20(%rbp)
  429619:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
  429620:	83 7d e4 08          	cmpl   $0x8,-0x1c(%rbp)
  429624:	0f 8d d0 01 00 00    	jge    4297fa <mbedtls_des_crypt_ecb+0x33a>
  42962a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42962e:	48 89 c1             	mov    %rax,%rcx
  429631:	48 83 c1 04          	add    $0x4,%rcx
  429635:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  429639:	8b 10                	mov    (%rax),%edx
  42963b:	33 55 dc             	xor    -0x24(%rbp),%edx
  42963e:	89 55 d8             	mov    %edx,-0x28(%rbp)
  429641:	8b 55 d8             	mov    -0x28(%rbp),%edx
  429644:	83 e2 3f             	and    $0x3f,%edx
  429647:	89 d2                	mov    %edx,%edx
  429649:	89 d0                	mov    %edx,%eax
  42964b:	8b 14 85 30 d1 44 00 	mov    0x44d130(,%rax,4),%edx
  429652:	8b 75 d8             	mov    -0x28(%rbp),%esi
  429655:	c1 ee 08             	shr    $0x8,%esi
  429658:	83 e6 3f             	and    $0x3f,%esi
  42965b:	89 f6                	mov    %esi,%esi
  42965d:	89 f0                	mov    %esi,%eax
  42965f:	33 14 85 30 d2 44 00 	xor    0x44d230(,%rax,4),%edx
  429666:	8b 75 d8             	mov    -0x28(%rbp),%esi
  429669:	c1 ee 10             	shr    $0x10,%esi
  42966c:	83 e6 3f             	and    $0x3f,%esi
  42966f:	89 f6                	mov    %esi,%esi
  429671:	89 f0                	mov    %esi,%eax
  429673:	33 14 85 30 d3 44 00 	xor    0x44d330(,%rax,4),%edx
  42967a:	8b 75 d8             	mov    -0x28(%rbp),%esi
  42967d:	c1 ee 18             	shr    $0x18,%esi
  429680:	83 e6 3f             	and    $0x3f,%esi
  429683:	89 f6                	mov    %esi,%esi
  429685:	89 f0                	mov    %esi,%eax
  429687:	33 14 85 30 d4 44 00 	xor    0x44d430(,%rax,4),%edx
  42968e:	33 55 e0             	xor    -0x20(%rbp),%edx
  429691:	89 55 e0             	mov    %edx,-0x20(%rbp)
  429694:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  429698:	48 89 c1             	mov    %rax,%rcx
  42969b:	48 83 c1 04          	add    $0x4,%rcx
  42969f:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  4296a3:	8b 10                	mov    (%rax),%edx
  4296a5:	8b 75 dc             	mov    -0x24(%rbp),%esi
  4296a8:	c1 e6 1c             	shl    $0x1c,%esi
  4296ab:	8b 7d dc             	mov    -0x24(%rbp),%edi
  4296ae:	c1 ef 04             	shr    $0x4,%edi
  4296b1:	09 fe                	or     %edi,%esi
  4296b3:	31 f2                	xor    %esi,%edx
  4296b5:	89 55 d8             	mov    %edx,-0x28(%rbp)
  4296b8:	8b 55 d8             	mov    -0x28(%rbp),%edx
  4296bb:	83 e2 3f             	and    $0x3f,%edx
  4296be:	89 d2                	mov    %edx,%edx
  4296c0:	89 d0                	mov    %edx,%eax
  4296c2:	8b 14 85 30 d5 44 00 	mov    0x44d530(,%rax,4),%edx
  4296c9:	8b 75 d8             	mov    -0x28(%rbp),%esi
  4296cc:	c1 ee 08             	shr    $0x8,%esi
  4296cf:	83 e6 3f             	and    $0x3f,%esi
  4296d2:	89 f6                	mov    %esi,%esi
  4296d4:	89 f0                	mov    %esi,%eax
  4296d6:	33 14 85 30 d6 44 00 	xor    0x44d630(,%rax,4),%edx
  4296dd:	8b 75 d8             	mov    -0x28(%rbp),%esi
  4296e0:	c1 ee 10             	shr    $0x10,%esi
  4296e3:	83 e6 3f             	and    $0x3f,%esi
  4296e6:	89 f6                	mov    %esi,%esi
  4296e8:	89 f0                	mov    %esi,%eax
  4296ea:	33 14 85 30 d7 44 00 	xor    0x44d730(,%rax,4),%edx
  4296f1:	8b 75 d8             	mov    -0x28(%rbp),%esi
  4296f4:	c1 ee 18             	shr    $0x18,%esi
  4296f7:	83 e6 3f             	and    $0x3f,%esi
  4296fa:	89 f6                	mov    %esi,%esi
  4296fc:	89 f0                	mov    %esi,%eax
  4296fe:	33 14 85 30 d8 44 00 	xor    0x44d830(,%rax,4),%edx
  429705:	33 55 e0             	xor    -0x20(%rbp),%edx
  429708:	89 55 e0             	mov    %edx,-0x20(%rbp)
  42970b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42970f:	48 89 c1             	mov    %rax,%rcx
  429712:	48 83 c1 04          	add    $0x4,%rcx
  429716:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  42971a:	8b 10                	mov    (%rax),%edx
  42971c:	33 55 e0             	xor    -0x20(%rbp),%edx
  42971f:	89 55 d8             	mov    %edx,-0x28(%rbp)
  429722:	8b 55 d8             	mov    -0x28(%rbp),%edx
  429725:	83 e2 3f             	and    $0x3f,%edx
  429728:	89 d2                	mov    %edx,%edx
  42972a:	89 d0                	mov    %edx,%eax
  42972c:	8b 14 85 30 d1 44 00 	mov    0x44d130(,%rax,4),%edx
  429733:	8b 75 d8             	mov    -0x28(%rbp),%esi
  429736:	c1 ee 08             	shr    $0x8,%esi
  429739:	83 e6 3f             	and    $0x3f,%esi
  42973c:	89 f6                	mov    %esi,%esi
  42973e:	89 f0                	mov    %esi,%eax
  429740:	33 14 85 30 d2 44 00 	xor    0x44d230(,%rax,4),%edx
  429747:	8b 75 d8             	mov    -0x28(%rbp),%esi
  42974a:	c1 ee 10             	shr    $0x10,%esi
  42974d:	83 e6 3f             	and    $0x3f,%esi
  429750:	89 f6                	mov    %esi,%esi
  429752:	89 f0                	mov    %esi,%eax
  429754:	33 14 85 30 d3 44 00 	xor    0x44d330(,%rax,4),%edx
  42975b:	8b 75 d8             	mov    -0x28(%rbp),%esi
  42975e:	c1 ee 18             	shr    $0x18,%esi
  429761:	83 e6 3f             	and    $0x3f,%esi
  429764:	89 f6                	mov    %esi,%esi
  429766:	89 f0                	mov    %esi,%eax
  429768:	33 14 85 30 d4 44 00 	xor    0x44d430(,%rax,4),%edx
  42976f:	33 55 dc             	xor    -0x24(%rbp),%edx
  429772:	89 55 dc             	mov    %edx,-0x24(%rbp)
  429775:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  429779:	48 89 c1             	mov    %rax,%rcx
  42977c:	48 83 c1 04          	add    $0x4,%rcx
  429780:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  429784:	8b 10                	mov    (%rax),%edx
  429786:	8b 75 e0             	mov    -0x20(%rbp),%esi
  429789:	c1 e6 1c             	shl    $0x1c,%esi
  42978c:	8b 7d e0             	mov    -0x20(%rbp),%edi
  42978f:	c1 ef 04             	shr    $0x4,%edi
  429792:	09 fe                	or     %edi,%esi
  429794:	31 f2                	xor    %esi,%edx
  429796:	89 55 d8             	mov    %edx,-0x28(%rbp)
  429799:	8b 55 d8             	mov    -0x28(%rbp),%edx
  42979c:	83 e2 3f             	and    $0x3f,%edx
  42979f:	89 d2                	mov    %edx,%edx
  4297a1:	89 d0                	mov    %edx,%eax
  4297a3:	8b 14 85 30 d5 44 00 	mov    0x44d530(,%rax,4),%edx
  4297aa:	8b 75 d8             	mov    -0x28(%rbp),%esi
  4297ad:	c1 ee 08             	shr    $0x8,%esi
  4297b0:	83 e6 3f             	and    $0x3f,%esi
  4297b3:	89 f6                	mov    %esi,%esi
  4297b5:	89 f0                	mov    %esi,%eax
  4297b7:	33 14 85 30 d6 44 00 	xor    0x44d630(,%rax,4),%edx
  4297be:	8b 75 d8             	mov    -0x28(%rbp),%esi
  4297c1:	c1 ee 10             	shr    $0x10,%esi
  4297c4:	83 e6 3f             	and    $0x3f,%esi
  4297c7:	89 f6                	mov    %esi,%esi
  4297c9:	89 f0                	mov    %esi,%eax
  4297cb:	33 14 85 30 d7 44 00 	xor    0x44d730(,%rax,4),%edx
  4297d2:	8b 75 d8             	mov    -0x28(%rbp),%esi
  4297d5:	c1 ee 18             	shr    $0x18,%esi
  4297d8:	83 e6 3f             	and    $0x3f,%esi
  4297db:	89 f6                	mov    %esi,%esi
  4297dd:	89 f0                	mov    %esi,%eax
  4297df:	33 14 85 30 d8 44 00 	xor    0x44d830(,%rax,4),%edx
  4297e6:	33 55 dc             	xor    -0x24(%rbp),%edx
  4297e9:	89 55 dc             	mov    %edx,-0x24(%rbp)
  4297ec:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  4297ef:	83 c0 01             	add    $0x1,%eax
  4297f2:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  4297f5:	e9 26 fe ff ff       	jmpq   429620 <mbedtls_des_crypt_ecb+0x160>
  4297fa:	8b 45 dc             	mov    -0x24(%rbp),%eax
  4297fd:	c1 e0 1f             	shl    $0x1f,%eax
  429800:	8b 4d dc             	mov    -0x24(%rbp),%ecx
  429803:	c1 e9 01             	shr    $0x1,%ecx
  429806:	09 c8                	or     %ecx,%eax
  429808:	89 45 dc             	mov    %eax,-0x24(%rbp)
  42980b:	8b 45 dc             	mov    -0x24(%rbp),%eax
  42980e:	33 45 e0             	xor    -0x20(%rbp),%eax
  429811:	25 aa aa aa aa       	and    $0xaaaaaaaa,%eax
  429816:	89 45 d8             	mov    %eax,-0x28(%rbp)
  429819:	8b 45 d8             	mov    -0x28(%rbp),%eax
  42981c:	33 45 dc             	xor    -0x24(%rbp),%eax
  42981f:	89 45 dc             	mov    %eax,-0x24(%rbp)
  429822:	8b 45 d8             	mov    -0x28(%rbp),%eax
  429825:	33 45 e0             	xor    -0x20(%rbp),%eax
  429828:	89 45 e0             	mov    %eax,-0x20(%rbp)
  42982b:	8b 45 e0             	mov    -0x20(%rbp),%eax
  42982e:	c1 e0 1f             	shl    $0x1f,%eax
  429831:	8b 4d e0             	mov    -0x20(%rbp),%ecx
  429834:	c1 e9 01             	shr    $0x1,%ecx
  429837:	09 c8                	or     %ecx,%eax
  429839:	89 45 e0             	mov    %eax,-0x20(%rbp)
  42983c:	8b 45 e0             	mov    -0x20(%rbp),%eax
  42983f:	c1 e8 08             	shr    $0x8,%eax
  429842:	33 45 dc             	xor    -0x24(%rbp),%eax
  429845:	25 ff 00 ff 00       	and    $0xff00ff,%eax
  42984a:	89 45 d8             	mov    %eax,-0x28(%rbp)
  42984d:	8b 45 d8             	mov    -0x28(%rbp),%eax
  429850:	33 45 dc             	xor    -0x24(%rbp),%eax
  429853:	89 45 dc             	mov    %eax,-0x24(%rbp)
  429856:	8b 45 d8             	mov    -0x28(%rbp),%eax
  429859:	c1 e0 08             	shl    $0x8,%eax
  42985c:	33 45 e0             	xor    -0x20(%rbp),%eax
  42985f:	89 45 e0             	mov    %eax,-0x20(%rbp)
  429862:	8b 45 e0             	mov    -0x20(%rbp),%eax
  429865:	c1 e8 02             	shr    $0x2,%eax
  429868:	33 45 dc             	xor    -0x24(%rbp),%eax
  42986b:	25 33 33 33 33       	and    $0x33333333,%eax
  429870:	89 45 d8             	mov    %eax,-0x28(%rbp)
  429873:	8b 45 d8             	mov    -0x28(%rbp),%eax
  429876:	33 45 dc             	xor    -0x24(%rbp),%eax
  429879:	89 45 dc             	mov    %eax,-0x24(%rbp)
  42987c:	8b 45 d8             	mov    -0x28(%rbp),%eax
  42987f:	c1 e0 02             	shl    $0x2,%eax
  429882:	33 45 e0             	xor    -0x20(%rbp),%eax
  429885:	89 45 e0             	mov    %eax,-0x20(%rbp)
  429888:	8b 45 dc             	mov    -0x24(%rbp),%eax
  42988b:	c1 e8 10             	shr    $0x10,%eax
  42988e:	33 45 e0             	xor    -0x20(%rbp),%eax
  429891:	25 ff ff 00 00       	and    $0xffff,%eax
  429896:	89 45 d8             	mov    %eax,-0x28(%rbp)
  429899:	8b 45 d8             	mov    -0x28(%rbp),%eax
  42989c:	33 45 e0             	xor    -0x20(%rbp),%eax
  42989f:	89 45 e0             	mov    %eax,-0x20(%rbp)
  4298a2:	8b 45 d8             	mov    -0x28(%rbp),%eax
  4298a5:	c1 e0 10             	shl    $0x10,%eax
  4298a8:	33 45 dc             	xor    -0x24(%rbp),%eax
  4298ab:	89 45 dc             	mov    %eax,-0x24(%rbp)
  4298ae:	8b 45 dc             	mov    -0x24(%rbp),%eax
  4298b1:	c1 e8 04             	shr    $0x4,%eax
  4298b4:	33 45 e0             	xor    -0x20(%rbp),%eax
  4298b7:	25 0f 0f 0f 0f       	and    $0xf0f0f0f,%eax
  4298bc:	89 45 d8             	mov    %eax,-0x28(%rbp)
  4298bf:	8b 45 d8             	mov    -0x28(%rbp),%eax
  4298c2:	33 45 e0             	xor    -0x20(%rbp),%eax
  4298c5:	89 45 e0             	mov    %eax,-0x20(%rbp)
  4298c8:	8b 45 d8             	mov    -0x28(%rbp),%eax
  4298cb:	c1 e0 04             	shl    $0x4,%eax
  4298ce:	33 45 dc             	xor    -0x24(%rbp),%eax
  4298d1:	89 45 dc             	mov    %eax,-0x24(%rbp)
  4298d4:	8b 45 dc             	mov    -0x24(%rbp),%eax
  4298d7:	c1 e8 18             	shr    $0x18,%eax
  4298da:	88 c2                	mov    %al,%dl
  4298dc:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  4298e0:	88 16                	mov    %dl,(%rsi)
  4298e2:	8b 45 dc             	mov    -0x24(%rbp),%eax
  4298e5:	c1 e8 10             	shr    $0x10,%eax
  4298e8:	88 c2                	mov    %al,%dl
  4298ea:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  4298ee:	88 56 01             	mov    %dl,0x1(%rsi)
  4298f1:	8b 45 dc             	mov    -0x24(%rbp),%eax
  4298f4:	c1 e8 08             	shr    $0x8,%eax
  4298f7:	88 c2                	mov    %al,%dl
  4298f9:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  4298fd:	88 56 02             	mov    %dl,0x2(%rsi)
  429900:	8b 45 dc             	mov    -0x24(%rbp),%eax
  429903:	88 c2                	mov    %al,%dl
  429905:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  429909:	88 56 03             	mov    %dl,0x3(%rsi)
  42990c:	8b 45 e0             	mov    -0x20(%rbp),%eax
  42990f:	c1 e8 18             	shr    $0x18,%eax
  429912:	88 c2                	mov    %al,%dl
  429914:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  429918:	88 56 04             	mov    %dl,0x4(%rsi)
  42991b:	8b 45 e0             	mov    -0x20(%rbp),%eax
  42991e:	c1 e8 10             	shr    $0x10,%eax
  429921:	88 c2                	mov    %al,%dl
  429923:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  429927:	88 56 05             	mov    %dl,0x5(%rsi)
  42992a:	8b 45 e0             	mov    -0x20(%rbp),%eax
  42992d:	c1 e8 08             	shr    $0x8,%eax
  429930:	88 c2                	mov    %al,%dl
  429932:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  429936:	88 56 06             	mov    %dl,0x6(%rsi)
  429939:	8b 45 e0             	mov    -0x20(%rbp),%eax
  42993c:	88 c2                	mov    %al,%dl
  42993e:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  429942:	88 56 07             	mov    %dl,0x7(%rsi)
  429945:	e8 0c c0 01 00       	callq  445956 <writeback_cache>
  42994a:	31 c0                	xor    %eax,%eax
  42994c:	48 83 c4 30          	add    $0x30,%rsp
  429950:	5d                   	pop    %rbp
  429951:	c3                   	retq   
  429952:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  429959:	1f 84 00 00 00 00 00 

0000000000429960 <mbedtls_des_crypt_cbc>:
  429960:	55                   	push   %rbp
  429961:	48 89 e5             	mov    %rsp,%rbp
  429964:	48 83 ec 50          	sub    $0x50,%rsp
  429968:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  42996c:	89 75 ec             	mov    %esi,-0x14(%rbp)
  42996f:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
  429973:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  429977:	4c 89 45 d0          	mov    %r8,-0x30(%rbp)
  42997b:	4c 89 4d c8          	mov    %r9,-0x38(%rbp)
  42997f:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  429983:	48 83 e1 07          	and    $0x7,%rcx
  429987:	48 83 f9 00          	cmp    $0x0,%rcx
  42998b:	74 0c                	je     429999 <mbedtls_des_crypt_cbc+0x39>
  42998d:	c7 45 fc ce ff ff ff 	movl   $0xffffffce,-0x4(%rbp)
  429994:	e9 52 01 00 00       	jmpq   429aeb <mbedtls_des_crypt_cbc+0x18b>
  429999:	83 7d ec 01          	cmpl   $0x1,-0x14(%rbp)
  42999d:	0f 85 9e 00 00 00    	jne    429a41 <mbedtls_des_crypt_cbc+0xe1>
  4299a3:	eb 00                	jmp    4299a5 <mbedtls_des_crypt_cbc+0x45>
  4299a5:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  4299aa:	0f 86 8c 00 00 00    	jbe    429a3c <mbedtls_des_crypt_cbc+0xdc>
  4299b0:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
  4299b7:	83 7d c4 08          	cmpl   $0x8,-0x3c(%rbp)
  4299bb:	7d 34                	jge    4299f1 <mbedtls_des_crypt_cbc+0x91>
  4299bd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4299c1:	48 63 4d c4          	movslq -0x3c(%rbp),%rcx
  4299c5:	0f b6 14 08          	movzbl (%rax,%rcx,1),%edx
  4299c9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4299cd:	48 63 4d c4          	movslq -0x3c(%rbp),%rcx
  4299d1:	0f b6 34 08          	movzbl (%rax,%rcx,1),%esi
  4299d5:	31 f2                	xor    %esi,%edx
  4299d7:	40 88 d7             	mov    %dl,%dil
  4299da:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4299de:	48 63 4d c4          	movslq -0x3c(%rbp),%rcx
  4299e2:	40 88 3c 08          	mov    %dil,(%rax,%rcx,1)
  4299e6:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  4299e9:	83 c0 01             	add    $0x1,%eax
  4299ec:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  4299ef:	eb c6                	jmp    4299b7 <mbedtls_des_crypt_cbc+0x57>
  4299f1:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  4299f5:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  4299f9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  4299fd:	e8 be fa ff ff       	callq  4294c0 <mbedtls_des_crypt_ecb>
  429a02:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  429a06:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  429a0a:	48 8b 36             	mov    (%rsi),%rsi
  429a0d:	48 89 32             	mov    %rsi,(%rdx)
  429a10:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  429a14:	48 83 c2 08          	add    $0x8,%rdx
  429a18:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
  429a1c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  429a20:	48 83 c2 08          	add    $0x8,%rdx
  429a24:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  429a28:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  429a2c:	48 83 ea 08          	sub    $0x8,%rdx
  429a30:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
  429a34:	89 45 b8             	mov    %eax,-0x48(%rbp)
  429a37:	e9 69 ff ff ff       	jmpq   4299a5 <mbedtls_des_crypt_cbc+0x45>
  429a3c:	e9 a3 00 00 00       	jmpq   429ae4 <mbedtls_des_crypt_cbc+0x184>
  429a41:	eb 00                	jmp    429a43 <mbedtls_des_crypt_cbc+0xe3>
  429a43:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  429a48:	0f 86 94 00 00 00    	jbe    429ae2 <mbedtls_des_crypt_cbc+0x182>
  429a4e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  429a52:	48 8b 00             	mov    (%rax),%rax
  429a55:	48 89 45 bc          	mov    %rax,-0x44(%rbp)
  429a59:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  429a5d:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  429a61:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  429a65:	e8 56 fa ff ff       	callq  4294c0 <mbedtls_des_crypt_ecb>
  429a6a:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
  429a71:	89 45 b4             	mov    %eax,-0x4c(%rbp)
  429a74:	83 7d c4 08          	cmpl   $0x8,-0x3c(%rbp)
  429a78:	7d 34                	jge    429aae <mbedtls_des_crypt_cbc+0x14e>
  429a7a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  429a7e:	48 63 4d c4          	movslq -0x3c(%rbp),%rcx
  429a82:	0f b6 14 08          	movzbl (%rax,%rcx,1),%edx
  429a86:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  429a8a:	48 63 4d c4          	movslq -0x3c(%rbp),%rcx
  429a8e:	0f b6 34 08          	movzbl (%rax,%rcx,1),%esi
  429a92:	31 f2                	xor    %esi,%edx
  429a94:	40 88 d7             	mov    %dl,%dil
  429a97:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  429a9b:	48 63 4d c4          	movslq -0x3c(%rbp),%rcx
  429a9f:	40 88 3c 08          	mov    %dil,(%rax,%rcx,1)
  429aa3:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  429aa6:	83 c0 01             	add    $0x1,%eax
  429aa9:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  429aac:	eb c6                	jmp    429a74 <mbedtls_des_crypt_cbc+0x114>
  429aae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  429ab2:	48 8b 4d bc          	mov    -0x44(%rbp),%rcx
  429ab6:	48 89 08             	mov    %rcx,(%rax)
  429ab9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  429abd:	48 83 c0 08          	add    $0x8,%rax
  429ac1:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  429ac5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  429ac9:	48 83 c0 08          	add    $0x8,%rax
  429acd:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  429ad1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  429ad5:	48 83 e8 08          	sub    $0x8,%rax
  429ad9:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  429add:	e9 61 ff ff ff       	jmpq   429a43 <mbedtls_des_crypt_cbc+0xe3>
  429ae2:	eb 00                	jmp    429ae4 <mbedtls_des_crypt_cbc+0x184>
  429ae4:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  429aeb:	8b 45 fc             	mov    -0x4(%rbp),%eax
  429aee:	89 45 b0             	mov    %eax,-0x50(%rbp)
  429af1:	e8 60 be 01 00       	callq  445956 <writeback_cache>
  429af6:	8b 45 b0             	mov    -0x50(%rbp),%eax
  429af9:	48 83 c4 50          	add    $0x50,%rsp
  429afd:	5d                   	pop    %rbp
  429afe:	c3                   	retq   
  429aff:	90                   	nop

0000000000429b00 <mbedtls_des3_crypt_ecb>:
  429b00:	55                   	push   %rbp
  429b01:	48 89 e5             	mov    %rsp,%rbp
  429b04:	48 83 ec 30          	sub    $0x30,%rsp
  429b08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  429b0c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  429b10:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  429b14:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  429b18:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
  429b1c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  429b20:	0f b6 02             	movzbl (%rdx),%eax
  429b23:	c1 e0 18             	shl    $0x18,%eax
  429b26:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  429b2a:	0f b6 4a 01          	movzbl 0x1(%rdx),%ecx
  429b2e:	c1 e1 10             	shl    $0x10,%ecx
  429b31:	09 c8                	or     %ecx,%eax
  429b33:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  429b37:	0f b6 4a 02          	movzbl 0x2(%rdx),%ecx
  429b3b:	c1 e1 08             	shl    $0x8,%ecx
  429b3e:	09 c8                	or     %ecx,%eax
  429b40:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  429b44:	0f b6 4a 03          	movzbl 0x3(%rdx),%ecx
  429b48:	09 c8                	or     %ecx,%eax
  429b4a:	89 45 e0             	mov    %eax,-0x20(%rbp)
  429b4d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  429b51:	0f b6 42 04          	movzbl 0x4(%rdx),%eax
  429b55:	c1 e0 18             	shl    $0x18,%eax
  429b58:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  429b5c:	0f b6 4a 05          	movzbl 0x5(%rdx),%ecx
  429b60:	c1 e1 10             	shl    $0x10,%ecx
  429b63:	09 c8                	or     %ecx,%eax
  429b65:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  429b69:	0f b6 4a 06          	movzbl 0x6(%rdx),%ecx
  429b6d:	c1 e1 08             	shl    $0x8,%ecx
  429b70:	09 c8                	or     %ecx,%eax
  429b72:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  429b76:	0f b6 4a 07          	movzbl 0x7(%rdx),%ecx
  429b7a:	09 c8                	or     %ecx,%eax
  429b7c:	89 45 dc             	mov    %eax,-0x24(%rbp)
  429b7f:	8b 45 e0             	mov    -0x20(%rbp),%eax
  429b82:	c1 e8 04             	shr    $0x4,%eax
  429b85:	33 45 dc             	xor    -0x24(%rbp),%eax
  429b88:	25 0f 0f 0f 0f       	and    $0xf0f0f0f,%eax
  429b8d:	89 45 d8             	mov    %eax,-0x28(%rbp)
  429b90:	8b 45 d8             	mov    -0x28(%rbp),%eax
  429b93:	33 45 dc             	xor    -0x24(%rbp),%eax
  429b96:	89 45 dc             	mov    %eax,-0x24(%rbp)
  429b99:	8b 45 d8             	mov    -0x28(%rbp),%eax
  429b9c:	c1 e0 04             	shl    $0x4,%eax
  429b9f:	33 45 e0             	xor    -0x20(%rbp),%eax
  429ba2:	89 45 e0             	mov    %eax,-0x20(%rbp)
  429ba5:	8b 45 e0             	mov    -0x20(%rbp),%eax
  429ba8:	c1 e8 10             	shr    $0x10,%eax
  429bab:	33 45 dc             	xor    -0x24(%rbp),%eax
  429bae:	25 ff ff 00 00       	and    $0xffff,%eax
  429bb3:	89 45 d8             	mov    %eax,-0x28(%rbp)
  429bb6:	8b 45 d8             	mov    -0x28(%rbp),%eax
  429bb9:	33 45 dc             	xor    -0x24(%rbp),%eax
  429bbc:	89 45 dc             	mov    %eax,-0x24(%rbp)
  429bbf:	8b 45 d8             	mov    -0x28(%rbp),%eax
  429bc2:	c1 e0 10             	shl    $0x10,%eax
  429bc5:	33 45 e0             	xor    -0x20(%rbp),%eax
  429bc8:	89 45 e0             	mov    %eax,-0x20(%rbp)
  429bcb:	8b 45 dc             	mov    -0x24(%rbp),%eax
  429bce:	c1 e8 02             	shr    $0x2,%eax
  429bd1:	33 45 e0             	xor    -0x20(%rbp),%eax
  429bd4:	25 33 33 33 33       	and    $0x33333333,%eax
  429bd9:	89 45 d8             	mov    %eax,-0x28(%rbp)
  429bdc:	8b 45 d8             	mov    -0x28(%rbp),%eax
  429bdf:	33 45 e0             	xor    -0x20(%rbp),%eax
  429be2:	89 45 e0             	mov    %eax,-0x20(%rbp)
  429be5:	8b 45 d8             	mov    -0x28(%rbp),%eax
  429be8:	c1 e0 02             	shl    $0x2,%eax
  429beb:	33 45 dc             	xor    -0x24(%rbp),%eax
  429bee:	89 45 dc             	mov    %eax,-0x24(%rbp)
  429bf1:	8b 45 dc             	mov    -0x24(%rbp),%eax
  429bf4:	c1 e8 08             	shr    $0x8,%eax
  429bf7:	33 45 e0             	xor    -0x20(%rbp),%eax
  429bfa:	25 ff 00 ff 00       	and    $0xff00ff,%eax
  429bff:	89 45 d8             	mov    %eax,-0x28(%rbp)
  429c02:	8b 45 d8             	mov    -0x28(%rbp),%eax
  429c05:	33 45 e0             	xor    -0x20(%rbp),%eax
  429c08:	89 45 e0             	mov    %eax,-0x20(%rbp)
  429c0b:	8b 45 d8             	mov    -0x28(%rbp),%eax
  429c0e:	c1 e0 08             	shl    $0x8,%eax
  429c11:	33 45 dc             	xor    -0x24(%rbp),%eax
  429c14:	89 45 dc             	mov    %eax,-0x24(%rbp)
  429c17:	8b 45 dc             	mov    -0x24(%rbp),%eax
  429c1a:	c1 e0 01             	shl    $0x1,%eax
  429c1d:	8b 4d dc             	mov    -0x24(%rbp),%ecx
  429c20:	c1 e9 1f             	shr    $0x1f,%ecx
  429c23:	09 c8                	or     %ecx,%eax
  429c25:	89 45 dc             	mov    %eax,-0x24(%rbp)
  429c28:	8b 45 e0             	mov    -0x20(%rbp),%eax
  429c2b:	33 45 dc             	xor    -0x24(%rbp),%eax
  429c2e:	25 aa aa aa aa       	and    $0xaaaaaaaa,%eax
  429c33:	89 45 d8             	mov    %eax,-0x28(%rbp)
  429c36:	8b 45 d8             	mov    -0x28(%rbp),%eax
  429c39:	33 45 dc             	xor    -0x24(%rbp),%eax
  429c3c:	89 45 dc             	mov    %eax,-0x24(%rbp)
  429c3f:	8b 45 d8             	mov    -0x28(%rbp),%eax
  429c42:	33 45 e0             	xor    -0x20(%rbp),%eax
  429c45:	89 45 e0             	mov    %eax,-0x20(%rbp)
  429c48:	8b 45 e0             	mov    -0x20(%rbp),%eax
  429c4b:	c1 e0 01             	shl    $0x1,%eax
  429c4e:	8b 4d e0             	mov    -0x20(%rbp),%ecx
  429c51:	c1 e9 1f             	shr    $0x1f,%ecx
  429c54:	09 c8                	or     %ecx,%eax
  429c56:	89 45 e0             	mov    %eax,-0x20(%rbp)
  429c59:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
  429c60:	83 7d e4 08          	cmpl   $0x8,-0x1c(%rbp)
  429c64:	0f 8d d0 01 00 00    	jge    429e3a <mbedtls_des3_crypt_ecb+0x33a>
  429c6a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  429c6e:	48 89 c1             	mov    %rax,%rcx
  429c71:	48 83 c1 04          	add    $0x4,%rcx
  429c75:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  429c79:	8b 10                	mov    (%rax),%edx
  429c7b:	33 55 dc             	xor    -0x24(%rbp),%edx
  429c7e:	89 55 d8             	mov    %edx,-0x28(%rbp)
  429c81:	8b 55 d8             	mov    -0x28(%rbp),%edx
  429c84:	83 e2 3f             	and    $0x3f,%edx
  429c87:	89 d2                	mov    %edx,%edx
  429c89:	89 d0                	mov    %edx,%eax
  429c8b:	8b 14 85 30 d1 44 00 	mov    0x44d130(,%rax,4),%edx
  429c92:	8b 75 d8             	mov    -0x28(%rbp),%esi
  429c95:	c1 ee 08             	shr    $0x8,%esi
  429c98:	83 e6 3f             	and    $0x3f,%esi
  429c9b:	89 f6                	mov    %esi,%esi
  429c9d:	89 f0                	mov    %esi,%eax
  429c9f:	33 14 85 30 d2 44 00 	xor    0x44d230(,%rax,4),%edx
  429ca6:	8b 75 d8             	mov    -0x28(%rbp),%esi
  429ca9:	c1 ee 10             	shr    $0x10,%esi
  429cac:	83 e6 3f             	and    $0x3f,%esi
  429caf:	89 f6                	mov    %esi,%esi
  429cb1:	89 f0                	mov    %esi,%eax
  429cb3:	33 14 85 30 d3 44 00 	xor    0x44d330(,%rax,4),%edx
  429cba:	8b 75 d8             	mov    -0x28(%rbp),%esi
  429cbd:	c1 ee 18             	shr    $0x18,%esi
  429cc0:	83 e6 3f             	and    $0x3f,%esi
  429cc3:	89 f6                	mov    %esi,%esi
  429cc5:	89 f0                	mov    %esi,%eax
  429cc7:	33 14 85 30 d4 44 00 	xor    0x44d430(,%rax,4),%edx
  429cce:	33 55 e0             	xor    -0x20(%rbp),%edx
  429cd1:	89 55 e0             	mov    %edx,-0x20(%rbp)
  429cd4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  429cd8:	48 89 c1             	mov    %rax,%rcx
  429cdb:	48 83 c1 04          	add    $0x4,%rcx
  429cdf:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  429ce3:	8b 10                	mov    (%rax),%edx
  429ce5:	8b 75 dc             	mov    -0x24(%rbp),%esi
  429ce8:	c1 e6 1c             	shl    $0x1c,%esi
  429ceb:	8b 7d dc             	mov    -0x24(%rbp),%edi
  429cee:	c1 ef 04             	shr    $0x4,%edi
  429cf1:	09 fe                	or     %edi,%esi
  429cf3:	31 f2                	xor    %esi,%edx
  429cf5:	89 55 d8             	mov    %edx,-0x28(%rbp)
  429cf8:	8b 55 d8             	mov    -0x28(%rbp),%edx
  429cfb:	83 e2 3f             	and    $0x3f,%edx
  429cfe:	89 d2                	mov    %edx,%edx
  429d00:	89 d0                	mov    %edx,%eax
  429d02:	8b 14 85 30 d5 44 00 	mov    0x44d530(,%rax,4),%edx
  429d09:	8b 75 d8             	mov    -0x28(%rbp),%esi
  429d0c:	c1 ee 08             	shr    $0x8,%esi
  429d0f:	83 e6 3f             	and    $0x3f,%esi
  429d12:	89 f6                	mov    %esi,%esi
  429d14:	89 f0                	mov    %esi,%eax
  429d16:	33 14 85 30 d6 44 00 	xor    0x44d630(,%rax,4),%edx
  429d1d:	8b 75 d8             	mov    -0x28(%rbp),%esi
  429d20:	c1 ee 10             	shr    $0x10,%esi
  429d23:	83 e6 3f             	and    $0x3f,%esi
  429d26:	89 f6                	mov    %esi,%esi
  429d28:	89 f0                	mov    %esi,%eax
  429d2a:	33 14 85 30 d7 44 00 	xor    0x44d730(,%rax,4),%edx
  429d31:	8b 75 d8             	mov    -0x28(%rbp),%esi
  429d34:	c1 ee 18             	shr    $0x18,%esi
  429d37:	83 e6 3f             	and    $0x3f,%esi
  429d3a:	89 f6                	mov    %esi,%esi
  429d3c:	89 f0                	mov    %esi,%eax
  429d3e:	33 14 85 30 d8 44 00 	xor    0x44d830(,%rax,4),%edx
  429d45:	33 55 e0             	xor    -0x20(%rbp),%edx
  429d48:	89 55 e0             	mov    %edx,-0x20(%rbp)
  429d4b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  429d4f:	48 89 c1             	mov    %rax,%rcx
  429d52:	48 83 c1 04          	add    $0x4,%rcx
  429d56:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  429d5a:	8b 10                	mov    (%rax),%edx
  429d5c:	33 55 e0             	xor    -0x20(%rbp),%edx
  429d5f:	89 55 d8             	mov    %edx,-0x28(%rbp)
  429d62:	8b 55 d8             	mov    -0x28(%rbp),%edx
  429d65:	83 e2 3f             	and    $0x3f,%edx
  429d68:	89 d2                	mov    %edx,%edx
  429d6a:	89 d0                	mov    %edx,%eax
  429d6c:	8b 14 85 30 d1 44 00 	mov    0x44d130(,%rax,4),%edx
  429d73:	8b 75 d8             	mov    -0x28(%rbp),%esi
  429d76:	c1 ee 08             	shr    $0x8,%esi
  429d79:	83 e6 3f             	and    $0x3f,%esi
  429d7c:	89 f6                	mov    %esi,%esi
  429d7e:	89 f0                	mov    %esi,%eax
  429d80:	33 14 85 30 d2 44 00 	xor    0x44d230(,%rax,4),%edx
  429d87:	8b 75 d8             	mov    -0x28(%rbp),%esi
  429d8a:	c1 ee 10             	shr    $0x10,%esi
  429d8d:	83 e6 3f             	and    $0x3f,%esi
  429d90:	89 f6                	mov    %esi,%esi
  429d92:	89 f0                	mov    %esi,%eax
  429d94:	33 14 85 30 d3 44 00 	xor    0x44d330(,%rax,4),%edx
  429d9b:	8b 75 d8             	mov    -0x28(%rbp),%esi
  429d9e:	c1 ee 18             	shr    $0x18,%esi
  429da1:	83 e6 3f             	and    $0x3f,%esi
  429da4:	89 f6                	mov    %esi,%esi
  429da6:	89 f0                	mov    %esi,%eax
  429da8:	33 14 85 30 d4 44 00 	xor    0x44d430(,%rax,4),%edx
  429daf:	33 55 dc             	xor    -0x24(%rbp),%edx
  429db2:	89 55 dc             	mov    %edx,-0x24(%rbp)
  429db5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  429db9:	48 89 c1             	mov    %rax,%rcx
  429dbc:	48 83 c1 04          	add    $0x4,%rcx
  429dc0:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  429dc4:	8b 10                	mov    (%rax),%edx
  429dc6:	8b 75 e0             	mov    -0x20(%rbp),%esi
  429dc9:	c1 e6 1c             	shl    $0x1c,%esi
  429dcc:	8b 7d e0             	mov    -0x20(%rbp),%edi
  429dcf:	c1 ef 04             	shr    $0x4,%edi
  429dd2:	09 fe                	or     %edi,%esi
  429dd4:	31 f2                	xor    %esi,%edx
  429dd6:	89 55 d8             	mov    %edx,-0x28(%rbp)
  429dd9:	8b 55 d8             	mov    -0x28(%rbp),%edx
  429ddc:	83 e2 3f             	and    $0x3f,%edx
  429ddf:	89 d2                	mov    %edx,%edx
  429de1:	89 d0                	mov    %edx,%eax
  429de3:	8b 14 85 30 d5 44 00 	mov    0x44d530(,%rax,4),%edx
  429dea:	8b 75 d8             	mov    -0x28(%rbp),%esi
  429ded:	c1 ee 08             	shr    $0x8,%esi
  429df0:	83 e6 3f             	and    $0x3f,%esi
  429df3:	89 f6                	mov    %esi,%esi
  429df5:	89 f0                	mov    %esi,%eax
  429df7:	33 14 85 30 d6 44 00 	xor    0x44d630(,%rax,4),%edx
  429dfe:	8b 75 d8             	mov    -0x28(%rbp),%esi
  429e01:	c1 ee 10             	shr    $0x10,%esi
  429e04:	83 e6 3f             	and    $0x3f,%esi
  429e07:	89 f6                	mov    %esi,%esi
  429e09:	89 f0                	mov    %esi,%eax
  429e0b:	33 14 85 30 d7 44 00 	xor    0x44d730(,%rax,4),%edx
  429e12:	8b 75 d8             	mov    -0x28(%rbp),%esi
  429e15:	c1 ee 18             	shr    $0x18,%esi
  429e18:	83 e6 3f             	and    $0x3f,%esi
  429e1b:	89 f6                	mov    %esi,%esi
  429e1d:	89 f0                	mov    %esi,%eax
  429e1f:	33 14 85 30 d8 44 00 	xor    0x44d830(,%rax,4),%edx
  429e26:	33 55 dc             	xor    -0x24(%rbp),%edx
  429e29:	89 55 dc             	mov    %edx,-0x24(%rbp)
  429e2c:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  429e2f:	83 c0 01             	add    $0x1,%eax
  429e32:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  429e35:	e9 26 fe ff ff       	jmpq   429c60 <mbedtls_des3_crypt_ecb+0x160>
  429e3a:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
  429e41:	83 7d e4 08          	cmpl   $0x8,-0x1c(%rbp)
  429e45:	0f 8d d0 01 00 00    	jge    42a01b <mbedtls_des3_crypt_ecb+0x51b>
  429e4b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  429e4f:	48 89 c1             	mov    %rax,%rcx
  429e52:	48 83 c1 04          	add    $0x4,%rcx
  429e56:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  429e5a:	8b 10                	mov    (%rax),%edx
  429e5c:	33 55 e0             	xor    -0x20(%rbp),%edx
  429e5f:	89 55 d8             	mov    %edx,-0x28(%rbp)
  429e62:	8b 55 d8             	mov    -0x28(%rbp),%edx
  429e65:	83 e2 3f             	and    $0x3f,%edx
  429e68:	89 d2                	mov    %edx,%edx
  429e6a:	89 d0                	mov    %edx,%eax
  429e6c:	8b 14 85 30 d1 44 00 	mov    0x44d130(,%rax,4),%edx
  429e73:	8b 75 d8             	mov    -0x28(%rbp),%esi
  429e76:	c1 ee 08             	shr    $0x8,%esi
  429e79:	83 e6 3f             	and    $0x3f,%esi
  429e7c:	89 f6                	mov    %esi,%esi
  429e7e:	89 f0                	mov    %esi,%eax
  429e80:	33 14 85 30 d2 44 00 	xor    0x44d230(,%rax,4),%edx
  429e87:	8b 75 d8             	mov    -0x28(%rbp),%esi
  429e8a:	c1 ee 10             	shr    $0x10,%esi
  429e8d:	83 e6 3f             	and    $0x3f,%esi
  429e90:	89 f6                	mov    %esi,%esi
  429e92:	89 f0                	mov    %esi,%eax
  429e94:	33 14 85 30 d3 44 00 	xor    0x44d330(,%rax,4),%edx
  429e9b:	8b 75 d8             	mov    -0x28(%rbp),%esi
  429e9e:	c1 ee 18             	shr    $0x18,%esi
  429ea1:	83 e6 3f             	and    $0x3f,%esi
  429ea4:	89 f6                	mov    %esi,%esi
  429ea6:	89 f0                	mov    %esi,%eax
  429ea8:	33 14 85 30 d4 44 00 	xor    0x44d430(,%rax,4),%edx
  429eaf:	33 55 dc             	xor    -0x24(%rbp),%edx
  429eb2:	89 55 dc             	mov    %edx,-0x24(%rbp)
  429eb5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  429eb9:	48 89 c1             	mov    %rax,%rcx
  429ebc:	48 83 c1 04          	add    $0x4,%rcx
  429ec0:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  429ec4:	8b 10                	mov    (%rax),%edx
  429ec6:	8b 75 e0             	mov    -0x20(%rbp),%esi
  429ec9:	c1 e6 1c             	shl    $0x1c,%esi
  429ecc:	8b 7d e0             	mov    -0x20(%rbp),%edi
  429ecf:	c1 ef 04             	shr    $0x4,%edi
  429ed2:	09 fe                	or     %edi,%esi
  429ed4:	31 f2                	xor    %esi,%edx
  429ed6:	89 55 d8             	mov    %edx,-0x28(%rbp)
  429ed9:	8b 55 d8             	mov    -0x28(%rbp),%edx
  429edc:	83 e2 3f             	and    $0x3f,%edx
  429edf:	89 d2                	mov    %edx,%edx
  429ee1:	89 d0                	mov    %edx,%eax
  429ee3:	8b 14 85 30 d5 44 00 	mov    0x44d530(,%rax,4),%edx
  429eea:	8b 75 d8             	mov    -0x28(%rbp),%esi
  429eed:	c1 ee 08             	shr    $0x8,%esi
  429ef0:	83 e6 3f             	and    $0x3f,%esi
  429ef3:	89 f6                	mov    %esi,%esi
  429ef5:	89 f0                	mov    %esi,%eax
  429ef7:	33 14 85 30 d6 44 00 	xor    0x44d630(,%rax,4),%edx
  429efe:	8b 75 d8             	mov    -0x28(%rbp),%esi
  429f01:	c1 ee 10             	shr    $0x10,%esi
  429f04:	83 e6 3f             	and    $0x3f,%esi
  429f07:	89 f6                	mov    %esi,%esi
  429f09:	89 f0                	mov    %esi,%eax
  429f0b:	33 14 85 30 d7 44 00 	xor    0x44d730(,%rax,4),%edx
  429f12:	8b 75 d8             	mov    -0x28(%rbp),%esi
  429f15:	c1 ee 18             	shr    $0x18,%esi
  429f18:	83 e6 3f             	and    $0x3f,%esi
  429f1b:	89 f6                	mov    %esi,%esi
  429f1d:	89 f0                	mov    %esi,%eax
  429f1f:	33 14 85 30 d8 44 00 	xor    0x44d830(,%rax,4),%edx
  429f26:	33 55 dc             	xor    -0x24(%rbp),%edx
  429f29:	89 55 dc             	mov    %edx,-0x24(%rbp)
  429f2c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  429f30:	48 89 c1             	mov    %rax,%rcx
  429f33:	48 83 c1 04          	add    $0x4,%rcx
  429f37:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  429f3b:	8b 10                	mov    (%rax),%edx
  429f3d:	33 55 dc             	xor    -0x24(%rbp),%edx
  429f40:	89 55 d8             	mov    %edx,-0x28(%rbp)
  429f43:	8b 55 d8             	mov    -0x28(%rbp),%edx
  429f46:	83 e2 3f             	and    $0x3f,%edx
  429f49:	89 d2                	mov    %edx,%edx
  429f4b:	89 d0                	mov    %edx,%eax
  429f4d:	8b 14 85 30 d1 44 00 	mov    0x44d130(,%rax,4),%edx
  429f54:	8b 75 d8             	mov    -0x28(%rbp),%esi
  429f57:	c1 ee 08             	shr    $0x8,%esi
  429f5a:	83 e6 3f             	and    $0x3f,%esi
  429f5d:	89 f6                	mov    %esi,%esi
  429f5f:	89 f0                	mov    %esi,%eax
  429f61:	33 14 85 30 d2 44 00 	xor    0x44d230(,%rax,4),%edx
  429f68:	8b 75 d8             	mov    -0x28(%rbp),%esi
  429f6b:	c1 ee 10             	shr    $0x10,%esi
  429f6e:	83 e6 3f             	and    $0x3f,%esi
  429f71:	89 f6                	mov    %esi,%esi
  429f73:	89 f0                	mov    %esi,%eax
  429f75:	33 14 85 30 d3 44 00 	xor    0x44d330(,%rax,4),%edx
  429f7c:	8b 75 d8             	mov    -0x28(%rbp),%esi
  429f7f:	c1 ee 18             	shr    $0x18,%esi
  429f82:	83 e6 3f             	and    $0x3f,%esi
  429f85:	89 f6                	mov    %esi,%esi
  429f87:	89 f0                	mov    %esi,%eax
  429f89:	33 14 85 30 d4 44 00 	xor    0x44d430(,%rax,4),%edx
  429f90:	33 55 e0             	xor    -0x20(%rbp),%edx
  429f93:	89 55 e0             	mov    %edx,-0x20(%rbp)
  429f96:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  429f9a:	48 89 c1             	mov    %rax,%rcx
  429f9d:	48 83 c1 04          	add    $0x4,%rcx
  429fa1:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  429fa5:	8b 10                	mov    (%rax),%edx
  429fa7:	8b 75 dc             	mov    -0x24(%rbp),%esi
  429faa:	c1 e6 1c             	shl    $0x1c,%esi
  429fad:	8b 7d dc             	mov    -0x24(%rbp),%edi
  429fb0:	c1 ef 04             	shr    $0x4,%edi
  429fb3:	09 fe                	or     %edi,%esi
  429fb5:	31 f2                	xor    %esi,%edx
  429fb7:	89 55 d8             	mov    %edx,-0x28(%rbp)
  429fba:	8b 55 d8             	mov    -0x28(%rbp),%edx
  429fbd:	83 e2 3f             	and    $0x3f,%edx
  429fc0:	89 d2                	mov    %edx,%edx
  429fc2:	89 d0                	mov    %edx,%eax
  429fc4:	8b 14 85 30 d5 44 00 	mov    0x44d530(,%rax,4),%edx
  429fcb:	8b 75 d8             	mov    -0x28(%rbp),%esi
  429fce:	c1 ee 08             	shr    $0x8,%esi
  429fd1:	83 e6 3f             	and    $0x3f,%esi
  429fd4:	89 f6                	mov    %esi,%esi
  429fd6:	89 f0                	mov    %esi,%eax
  429fd8:	33 14 85 30 d6 44 00 	xor    0x44d630(,%rax,4),%edx
  429fdf:	8b 75 d8             	mov    -0x28(%rbp),%esi
  429fe2:	c1 ee 10             	shr    $0x10,%esi
  429fe5:	83 e6 3f             	and    $0x3f,%esi
  429fe8:	89 f6                	mov    %esi,%esi
  429fea:	89 f0                	mov    %esi,%eax
  429fec:	33 14 85 30 d7 44 00 	xor    0x44d730(,%rax,4),%edx
  429ff3:	8b 75 d8             	mov    -0x28(%rbp),%esi
  429ff6:	c1 ee 18             	shr    $0x18,%esi
  429ff9:	83 e6 3f             	and    $0x3f,%esi
  429ffc:	89 f6                	mov    %esi,%esi
  429ffe:	89 f0                	mov    %esi,%eax
  42a000:	33 14 85 30 d8 44 00 	xor    0x44d830(,%rax,4),%edx
  42a007:	33 55 e0             	xor    -0x20(%rbp),%edx
  42a00a:	89 55 e0             	mov    %edx,-0x20(%rbp)
  42a00d:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  42a010:	83 c0 01             	add    $0x1,%eax
  42a013:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  42a016:	e9 26 fe ff ff       	jmpq   429e41 <mbedtls_des3_crypt_ecb+0x341>
  42a01b:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
  42a022:	83 7d e4 08          	cmpl   $0x8,-0x1c(%rbp)
  42a026:	0f 8d d0 01 00 00    	jge    42a1fc <mbedtls_des3_crypt_ecb+0x6fc>
  42a02c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42a030:	48 89 c1             	mov    %rax,%rcx
  42a033:	48 83 c1 04          	add    $0x4,%rcx
  42a037:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  42a03b:	8b 10                	mov    (%rax),%edx
  42a03d:	33 55 dc             	xor    -0x24(%rbp),%edx
  42a040:	89 55 d8             	mov    %edx,-0x28(%rbp)
  42a043:	8b 55 d8             	mov    -0x28(%rbp),%edx
  42a046:	83 e2 3f             	and    $0x3f,%edx
  42a049:	89 d2                	mov    %edx,%edx
  42a04b:	89 d0                	mov    %edx,%eax
  42a04d:	8b 14 85 30 d1 44 00 	mov    0x44d130(,%rax,4),%edx
  42a054:	8b 75 d8             	mov    -0x28(%rbp),%esi
  42a057:	c1 ee 08             	shr    $0x8,%esi
  42a05a:	83 e6 3f             	and    $0x3f,%esi
  42a05d:	89 f6                	mov    %esi,%esi
  42a05f:	89 f0                	mov    %esi,%eax
  42a061:	33 14 85 30 d2 44 00 	xor    0x44d230(,%rax,4),%edx
  42a068:	8b 75 d8             	mov    -0x28(%rbp),%esi
  42a06b:	c1 ee 10             	shr    $0x10,%esi
  42a06e:	83 e6 3f             	and    $0x3f,%esi
  42a071:	89 f6                	mov    %esi,%esi
  42a073:	89 f0                	mov    %esi,%eax
  42a075:	33 14 85 30 d3 44 00 	xor    0x44d330(,%rax,4),%edx
  42a07c:	8b 75 d8             	mov    -0x28(%rbp),%esi
  42a07f:	c1 ee 18             	shr    $0x18,%esi
  42a082:	83 e6 3f             	and    $0x3f,%esi
  42a085:	89 f6                	mov    %esi,%esi
  42a087:	89 f0                	mov    %esi,%eax
  42a089:	33 14 85 30 d4 44 00 	xor    0x44d430(,%rax,4),%edx
  42a090:	33 55 e0             	xor    -0x20(%rbp),%edx
  42a093:	89 55 e0             	mov    %edx,-0x20(%rbp)
  42a096:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42a09a:	48 89 c1             	mov    %rax,%rcx
  42a09d:	48 83 c1 04          	add    $0x4,%rcx
  42a0a1:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  42a0a5:	8b 10                	mov    (%rax),%edx
  42a0a7:	8b 75 dc             	mov    -0x24(%rbp),%esi
  42a0aa:	c1 e6 1c             	shl    $0x1c,%esi
  42a0ad:	8b 7d dc             	mov    -0x24(%rbp),%edi
  42a0b0:	c1 ef 04             	shr    $0x4,%edi
  42a0b3:	09 fe                	or     %edi,%esi
  42a0b5:	31 f2                	xor    %esi,%edx
  42a0b7:	89 55 d8             	mov    %edx,-0x28(%rbp)
  42a0ba:	8b 55 d8             	mov    -0x28(%rbp),%edx
  42a0bd:	83 e2 3f             	and    $0x3f,%edx
  42a0c0:	89 d2                	mov    %edx,%edx
  42a0c2:	89 d0                	mov    %edx,%eax
  42a0c4:	8b 14 85 30 d5 44 00 	mov    0x44d530(,%rax,4),%edx
  42a0cb:	8b 75 d8             	mov    -0x28(%rbp),%esi
  42a0ce:	c1 ee 08             	shr    $0x8,%esi
  42a0d1:	83 e6 3f             	and    $0x3f,%esi
  42a0d4:	89 f6                	mov    %esi,%esi
  42a0d6:	89 f0                	mov    %esi,%eax
  42a0d8:	33 14 85 30 d6 44 00 	xor    0x44d630(,%rax,4),%edx
  42a0df:	8b 75 d8             	mov    -0x28(%rbp),%esi
  42a0e2:	c1 ee 10             	shr    $0x10,%esi
  42a0e5:	83 e6 3f             	and    $0x3f,%esi
  42a0e8:	89 f6                	mov    %esi,%esi
  42a0ea:	89 f0                	mov    %esi,%eax
  42a0ec:	33 14 85 30 d7 44 00 	xor    0x44d730(,%rax,4),%edx
  42a0f3:	8b 75 d8             	mov    -0x28(%rbp),%esi
  42a0f6:	c1 ee 18             	shr    $0x18,%esi
  42a0f9:	83 e6 3f             	and    $0x3f,%esi
  42a0fc:	89 f6                	mov    %esi,%esi
  42a0fe:	89 f0                	mov    %esi,%eax
  42a100:	33 14 85 30 d8 44 00 	xor    0x44d830(,%rax,4),%edx
  42a107:	33 55 e0             	xor    -0x20(%rbp),%edx
  42a10a:	89 55 e0             	mov    %edx,-0x20(%rbp)
  42a10d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42a111:	48 89 c1             	mov    %rax,%rcx
  42a114:	48 83 c1 04          	add    $0x4,%rcx
  42a118:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  42a11c:	8b 10                	mov    (%rax),%edx
  42a11e:	33 55 e0             	xor    -0x20(%rbp),%edx
  42a121:	89 55 d8             	mov    %edx,-0x28(%rbp)
  42a124:	8b 55 d8             	mov    -0x28(%rbp),%edx
  42a127:	83 e2 3f             	and    $0x3f,%edx
  42a12a:	89 d2                	mov    %edx,%edx
  42a12c:	89 d0                	mov    %edx,%eax
  42a12e:	8b 14 85 30 d1 44 00 	mov    0x44d130(,%rax,4),%edx
  42a135:	8b 75 d8             	mov    -0x28(%rbp),%esi
  42a138:	c1 ee 08             	shr    $0x8,%esi
  42a13b:	83 e6 3f             	and    $0x3f,%esi
  42a13e:	89 f6                	mov    %esi,%esi
  42a140:	89 f0                	mov    %esi,%eax
  42a142:	33 14 85 30 d2 44 00 	xor    0x44d230(,%rax,4),%edx
  42a149:	8b 75 d8             	mov    -0x28(%rbp),%esi
  42a14c:	c1 ee 10             	shr    $0x10,%esi
  42a14f:	83 e6 3f             	and    $0x3f,%esi
  42a152:	89 f6                	mov    %esi,%esi
  42a154:	89 f0                	mov    %esi,%eax
  42a156:	33 14 85 30 d3 44 00 	xor    0x44d330(,%rax,4),%edx
  42a15d:	8b 75 d8             	mov    -0x28(%rbp),%esi
  42a160:	c1 ee 18             	shr    $0x18,%esi
  42a163:	83 e6 3f             	and    $0x3f,%esi
  42a166:	89 f6                	mov    %esi,%esi
  42a168:	89 f0                	mov    %esi,%eax
  42a16a:	33 14 85 30 d4 44 00 	xor    0x44d430(,%rax,4),%edx
  42a171:	33 55 dc             	xor    -0x24(%rbp),%edx
  42a174:	89 55 dc             	mov    %edx,-0x24(%rbp)
  42a177:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42a17b:	48 89 c1             	mov    %rax,%rcx
  42a17e:	48 83 c1 04          	add    $0x4,%rcx
  42a182:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  42a186:	8b 10                	mov    (%rax),%edx
  42a188:	8b 75 e0             	mov    -0x20(%rbp),%esi
  42a18b:	c1 e6 1c             	shl    $0x1c,%esi
  42a18e:	8b 7d e0             	mov    -0x20(%rbp),%edi
  42a191:	c1 ef 04             	shr    $0x4,%edi
  42a194:	09 fe                	or     %edi,%esi
  42a196:	31 f2                	xor    %esi,%edx
  42a198:	89 55 d8             	mov    %edx,-0x28(%rbp)
  42a19b:	8b 55 d8             	mov    -0x28(%rbp),%edx
  42a19e:	83 e2 3f             	and    $0x3f,%edx
  42a1a1:	89 d2                	mov    %edx,%edx
  42a1a3:	89 d0                	mov    %edx,%eax
  42a1a5:	8b 14 85 30 d5 44 00 	mov    0x44d530(,%rax,4),%edx
  42a1ac:	8b 75 d8             	mov    -0x28(%rbp),%esi
  42a1af:	c1 ee 08             	shr    $0x8,%esi
  42a1b2:	83 e6 3f             	and    $0x3f,%esi
  42a1b5:	89 f6                	mov    %esi,%esi
  42a1b7:	89 f0                	mov    %esi,%eax
  42a1b9:	33 14 85 30 d6 44 00 	xor    0x44d630(,%rax,4),%edx
  42a1c0:	8b 75 d8             	mov    -0x28(%rbp),%esi
  42a1c3:	c1 ee 10             	shr    $0x10,%esi
  42a1c6:	83 e6 3f             	and    $0x3f,%esi
  42a1c9:	89 f6                	mov    %esi,%esi
  42a1cb:	89 f0                	mov    %esi,%eax
  42a1cd:	33 14 85 30 d7 44 00 	xor    0x44d730(,%rax,4),%edx
  42a1d4:	8b 75 d8             	mov    -0x28(%rbp),%esi
  42a1d7:	c1 ee 18             	shr    $0x18,%esi
  42a1da:	83 e6 3f             	and    $0x3f,%esi
  42a1dd:	89 f6                	mov    %esi,%esi
  42a1df:	89 f0                	mov    %esi,%eax
  42a1e1:	33 14 85 30 d8 44 00 	xor    0x44d830(,%rax,4),%edx
  42a1e8:	33 55 dc             	xor    -0x24(%rbp),%edx
  42a1eb:	89 55 dc             	mov    %edx,-0x24(%rbp)
  42a1ee:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  42a1f1:	83 c0 01             	add    $0x1,%eax
  42a1f4:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  42a1f7:	e9 26 fe ff ff       	jmpq   42a022 <mbedtls_des3_crypt_ecb+0x522>
  42a1fc:	8b 45 dc             	mov    -0x24(%rbp),%eax
  42a1ff:	c1 e0 1f             	shl    $0x1f,%eax
  42a202:	8b 4d dc             	mov    -0x24(%rbp),%ecx
  42a205:	c1 e9 01             	shr    $0x1,%ecx
  42a208:	09 c8                	or     %ecx,%eax
  42a20a:	89 45 dc             	mov    %eax,-0x24(%rbp)
  42a20d:	8b 45 dc             	mov    -0x24(%rbp),%eax
  42a210:	33 45 e0             	xor    -0x20(%rbp),%eax
  42a213:	25 aa aa aa aa       	and    $0xaaaaaaaa,%eax
  42a218:	89 45 d8             	mov    %eax,-0x28(%rbp)
  42a21b:	8b 45 d8             	mov    -0x28(%rbp),%eax
  42a21e:	33 45 dc             	xor    -0x24(%rbp),%eax
  42a221:	89 45 dc             	mov    %eax,-0x24(%rbp)
  42a224:	8b 45 d8             	mov    -0x28(%rbp),%eax
  42a227:	33 45 e0             	xor    -0x20(%rbp),%eax
  42a22a:	89 45 e0             	mov    %eax,-0x20(%rbp)
  42a22d:	8b 45 e0             	mov    -0x20(%rbp),%eax
  42a230:	c1 e0 1f             	shl    $0x1f,%eax
  42a233:	8b 4d e0             	mov    -0x20(%rbp),%ecx
  42a236:	c1 e9 01             	shr    $0x1,%ecx
  42a239:	09 c8                	or     %ecx,%eax
  42a23b:	89 45 e0             	mov    %eax,-0x20(%rbp)
  42a23e:	8b 45 e0             	mov    -0x20(%rbp),%eax
  42a241:	c1 e8 08             	shr    $0x8,%eax
  42a244:	33 45 dc             	xor    -0x24(%rbp),%eax
  42a247:	25 ff 00 ff 00       	and    $0xff00ff,%eax
  42a24c:	89 45 d8             	mov    %eax,-0x28(%rbp)
  42a24f:	8b 45 d8             	mov    -0x28(%rbp),%eax
  42a252:	33 45 dc             	xor    -0x24(%rbp),%eax
  42a255:	89 45 dc             	mov    %eax,-0x24(%rbp)
  42a258:	8b 45 d8             	mov    -0x28(%rbp),%eax
  42a25b:	c1 e0 08             	shl    $0x8,%eax
  42a25e:	33 45 e0             	xor    -0x20(%rbp),%eax
  42a261:	89 45 e0             	mov    %eax,-0x20(%rbp)
  42a264:	8b 45 e0             	mov    -0x20(%rbp),%eax
  42a267:	c1 e8 02             	shr    $0x2,%eax
  42a26a:	33 45 dc             	xor    -0x24(%rbp),%eax
  42a26d:	25 33 33 33 33       	and    $0x33333333,%eax
  42a272:	89 45 d8             	mov    %eax,-0x28(%rbp)
  42a275:	8b 45 d8             	mov    -0x28(%rbp),%eax
  42a278:	33 45 dc             	xor    -0x24(%rbp),%eax
  42a27b:	89 45 dc             	mov    %eax,-0x24(%rbp)
  42a27e:	8b 45 d8             	mov    -0x28(%rbp),%eax
  42a281:	c1 e0 02             	shl    $0x2,%eax
  42a284:	33 45 e0             	xor    -0x20(%rbp),%eax
  42a287:	89 45 e0             	mov    %eax,-0x20(%rbp)
  42a28a:	8b 45 dc             	mov    -0x24(%rbp),%eax
  42a28d:	c1 e8 10             	shr    $0x10,%eax
  42a290:	33 45 e0             	xor    -0x20(%rbp),%eax
  42a293:	25 ff ff 00 00       	and    $0xffff,%eax
  42a298:	89 45 d8             	mov    %eax,-0x28(%rbp)
  42a29b:	8b 45 d8             	mov    -0x28(%rbp),%eax
  42a29e:	33 45 e0             	xor    -0x20(%rbp),%eax
  42a2a1:	89 45 e0             	mov    %eax,-0x20(%rbp)
  42a2a4:	8b 45 d8             	mov    -0x28(%rbp),%eax
  42a2a7:	c1 e0 10             	shl    $0x10,%eax
  42a2aa:	33 45 dc             	xor    -0x24(%rbp),%eax
  42a2ad:	89 45 dc             	mov    %eax,-0x24(%rbp)
  42a2b0:	8b 45 dc             	mov    -0x24(%rbp),%eax
  42a2b3:	c1 e8 04             	shr    $0x4,%eax
  42a2b6:	33 45 e0             	xor    -0x20(%rbp),%eax
  42a2b9:	25 0f 0f 0f 0f       	and    $0xf0f0f0f,%eax
  42a2be:	89 45 d8             	mov    %eax,-0x28(%rbp)
  42a2c1:	8b 45 d8             	mov    -0x28(%rbp),%eax
  42a2c4:	33 45 e0             	xor    -0x20(%rbp),%eax
  42a2c7:	89 45 e0             	mov    %eax,-0x20(%rbp)
  42a2ca:	8b 45 d8             	mov    -0x28(%rbp),%eax
  42a2cd:	c1 e0 04             	shl    $0x4,%eax
  42a2d0:	33 45 dc             	xor    -0x24(%rbp),%eax
  42a2d3:	89 45 dc             	mov    %eax,-0x24(%rbp)
  42a2d6:	8b 45 dc             	mov    -0x24(%rbp),%eax
  42a2d9:	c1 e8 18             	shr    $0x18,%eax
  42a2dc:	88 c2                	mov    %al,%dl
  42a2de:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  42a2e2:	88 16                	mov    %dl,(%rsi)
  42a2e4:	8b 45 dc             	mov    -0x24(%rbp),%eax
  42a2e7:	c1 e8 10             	shr    $0x10,%eax
  42a2ea:	88 c2                	mov    %al,%dl
  42a2ec:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  42a2f0:	88 56 01             	mov    %dl,0x1(%rsi)
  42a2f3:	8b 45 dc             	mov    -0x24(%rbp),%eax
  42a2f6:	c1 e8 08             	shr    $0x8,%eax
  42a2f9:	88 c2                	mov    %al,%dl
  42a2fb:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  42a2ff:	88 56 02             	mov    %dl,0x2(%rsi)
  42a302:	8b 45 dc             	mov    -0x24(%rbp),%eax
  42a305:	88 c2                	mov    %al,%dl
  42a307:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  42a30b:	88 56 03             	mov    %dl,0x3(%rsi)
  42a30e:	8b 45 e0             	mov    -0x20(%rbp),%eax
  42a311:	c1 e8 18             	shr    $0x18,%eax
  42a314:	88 c2                	mov    %al,%dl
  42a316:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  42a31a:	88 56 04             	mov    %dl,0x4(%rsi)
  42a31d:	8b 45 e0             	mov    -0x20(%rbp),%eax
  42a320:	c1 e8 10             	shr    $0x10,%eax
  42a323:	88 c2                	mov    %al,%dl
  42a325:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  42a329:	88 56 05             	mov    %dl,0x5(%rsi)
  42a32c:	8b 45 e0             	mov    -0x20(%rbp),%eax
  42a32f:	c1 e8 08             	shr    $0x8,%eax
  42a332:	88 c2                	mov    %al,%dl
  42a334:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  42a338:	88 56 06             	mov    %dl,0x6(%rsi)
  42a33b:	8b 45 e0             	mov    -0x20(%rbp),%eax
  42a33e:	88 c2                	mov    %al,%dl
  42a340:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  42a344:	88 56 07             	mov    %dl,0x7(%rsi)
  42a347:	e8 0a b6 01 00       	callq  445956 <writeback_cache>
  42a34c:	31 c0                	xor    %eax,%eax
  42a34e:	48 83 c4 30          	add    $0x30,%rsp
  42a352:	5d                   	pop    %rbp
  42a353:	c3                   	retq   
  42a354:	66 66 66 2e 0f 1f 84 	data16 data16 nopw %cs:0x0(%rax,%rax,1)
  42a35b:	00 00 00 00 00 

000000000042a360 <mbedtls_des3_crypt_cbc>:
  42a360:	55                   	push   %rbp
  42a361:	48 89 e5             	mov    %rsp,%rbp
  42a364:	48 83 ec 50          	sub    $0x50,%rsp
  42a368:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  42a36c:	89 75 ec             	mov    %esi,-0x14(%rbp)
  42a36f:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
  42a373:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  42a377:	4c 89 45 d0          	mov    %r8,-0x30(%rbp)
  42a37b:	4c 89 4d c8          	mov    %r9,-0x38(%rbp)
  42a37f:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  42a383:	48 83 e1 07          	and    $0x7,%rcx
  42a387:	48 83 f9 00          	cmp    $0x0,%rcx
  42a38b:	74 0c                	je     42a399 <mbedtls_des3_crypt_cbc+0x39>
  42a38d:	c7 45 fc ce ff ff ff 	movl   $0xffffffce,-0x4(%rbp)
  42a394:	e9 52 01 00 00       	jmpq   42a4eb <mbedtls_des3_crypt_cbc+0x18b>
  42a399:	83 7d ec 01          	cmpl   $0x1,-0x14(%rbp)
  42a39d:	0f 85 9e 00 00 00    	jne    42a441 <mbedtls_des3_crypt_cbc+0xe1>
  42a3a3:	eb 00                	jmp    42a3a5 <mbedtls_des3_crypt_cbc+0x45>
  42a3a5:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  42a3aa:	0f 86 8c 00 00 00    	jbe    42a43c <mbedtls_des3_crypt_cbc+0xdc>
  42a3b0:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
  42a3b7:	83 7d c4 08          	cmpl   $0x8,-0x3c(%rbp)
  42a3bb:	7d 34                	jge    42a3f1 <mbedtls_des3_crypt_cbc+0x91>
  42a3bd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42a3c1:	48 63 4d c4          	movslq -0x3c(%rbp),%rcx
  42a3c5:	0f b6 14 08          	movzbl (%rax,%rcx,1),%edx
  42a3c9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42a3cd:	48 63 4d c4          	movslq -0x3c(%rbp),%rcx
  42a3d1:	0f b6 34 08          	movzbl (%rax,%rcx,1),%esi
  42a3d5:	31 f2                	xor    %esi,%edx
  42a3d7:	40 88 d7             	mov    %dl,%dil
  42a3da:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42a3de:	48 63 4d c4          	movslq -0x3c(%rbp),%rcx
  42a3e2:	40 88 3c 08          	mov    %dil,(%rax,%rcx,1)
  42a3e6:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  42a3e9:	83 c0 01             	add    $0x1,%eax
  42a3ec:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  42a3ef:	eb c6                	jmp    42a3b7 <mbedtls_des3_crypt_cbc+0x57>
  42a3f1:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  42a3f5:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  42a3f9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  42a3fd:	e8 fe f6 ff ff       	callq  429b00 <mbedtls_des3_crypt_ecb>
  42a402:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  42a406:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  42a40a:	48 8b 36             	mov    (%rsi),%rsi
  42a40d:	48 89 32             	mov    %rsi,(%rdx)
  42a410:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  42a414:	48 83 c2 08          	add    $0x8,%rdx
  42a418:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
  42a41c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  42a420:	48 83 c2 08          	add    $0x8,%rdx
  42a424:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  42a428:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  42a42c:	48 83 ea 08          	sub    $0x8,%rdx
  42a430:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
  42a434:	89 45 b8             	mov    %eax,-0x48(%rbp)
  42a437:	e9 69 ff ff ff       	jmpq   42a3a5 <mbedtls_des3_crypt_cbc+0x45>
  42a43c:	e9 a3 00 00 00       	jmpq   42a4e4 <mbedtls_des3_crypt_cbc+0x184>
  42a441:	eb 00                	jmp    42a443 <mbedtls_des3_crypt_cbc+0xe3>
  42a443:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  42a448:	0f 86 94 00 00 00    	jbe    42a4e2 <mbedtls_des3_crypt_cbc+0x182>
  42a44e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42a452:	48 8b 00             	mov    (%rax),%rax
  42a455:	48 89 45 bc          	mov    %rax,-0x44(%rbp)
  42a459:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  42a45d:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  42a461:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  42a465:	e8 96 f6 ff ff       	callq  429b00 <mbedtls_des3_crypt_ecb>
  42a46a:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
  42a471:	89 45 b4             	mov    %eax,-0x4c(%rbp)
  42a474:	83 7d c4 08          	cmpl   $0x8,-0x3c(%rbp)
  42a478:	7d 34                	jge    42a4ae <mbedtls_des3_crypt_cbc+0x14e>
  42a47a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42a47e:	48 63 4d c4          	movslq -0x3c(%rbp),%rcx
  42a482:	0f b6 14 08          	movzbl (%rax,%rcx,1),%edx
  42a486:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42a48a:	48 63 4d c4          	movslq -0x3c(%rbp),%rcx
  42a48e:	0f b6 34 08          	movzbl (%rax,%rcx,1),%esi
  42a492:	31 f2                	xor    %esi,%edx
  42a494:	40 88 d7             	mov    %dl,%dil
  42a497:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42a49b:	48 63 4d c4          	movslq -0x3c(%rbp),%rcx
  42a49f:	40 88 3c 08          	mov    %dil,(%rax,%rcx,1)
  42a4a3:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  42a4a6:	83 c0 01             	add    $0x1,%eax
  42a4a9:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  42a4ac:	eb c6                	jmp    42a474 <mbedtls_des3_crypt_cbc+0x114>
  42a4ae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42a4b2:	48 8b 4d bc          	mov    -0x44(%rbp),%rcx
  42a4b6:	48 89 08             	mov    %rcx,(%rax)
  42a4b9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42a4bd:	48 83 c0 08          	add    $0x8,%rax
  42a4c1:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  42a4c5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42a4c9:	48 83 c0 08          	add    $0x8,%rax
  42a4cd:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  42a4d1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42a4d5:	48 83 e8 08          	sub    $0x8,%rax
  42a4d9:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  42a4dd:	e9 61 ff ff ff       	jmpq   42a443 <mbedtls_des3_crypt_cbc+0xe3>
  42a4e2:	eb 00                	jmp    42a4e4 <mbedtls_des3_crypt_cbc+0x184>
  42a4e4:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  42a4eb:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42a4ee:	89 45 b0             	mov    %eax,-0x50(%rbp)
  42a4f1:	e8 60 b4 01 00       	callq  445956 <writeback_cache>
  42a4f6:	8b 45 b0             	mov    -0x50(%rbp),%eax
  42a4f9:	48 83 c4 50          	add    $0x50,%rsp
  42a4fd:	5d                   	pop    %rbp
  42a4fe:	c3                   	retq   
  42a4ff:	90                   	nop

000000000042a500 <mbedtls_entropy_update_manual>:
  42a500:	55                   	push   %rbp
  42a501:	48 89 e5             	mov    %rsp,%rbp
  42a504:	48 83 ec 20          	sub    $0x20,%rsp
  42a508:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42a50c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  42a510:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  42a514:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42a518:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  42a51c:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  42a520:	be 14 00 00 00       	mov    $0x14,%esi
  42a525:	e8 26 00 00 00       	callq  42a550 <entropy_update>
  42a52a:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  42a52d:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  42a530:	89 45 e0             	mov    %eax,-0x20(%rbp)
  42a533:	e8 1e b4 01 00       	callq  445956 <writeback_cache>
  42a538:	8b 45 e0             	mov    -0x20(%rbp),%eax
  42a53b:	48 83 c4 20          	add    $0x20,%rsp
  42a53f:	5d                   	pop    %rbp
  42a540:	c3                   	retq   
  42a541:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  42a548:	0f 1f 84 00 00 00 00 
  42a54f:	00 

000000000042a550 <entropy_update>:
  42a550:	55                   	push   %rbp
  42a551:	48 89 e5             	mov    %rsp,%rbp
  42a554:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
  42a55b:	40 88 f0             	mov    %sil,%al
  42a55e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  42a562:	88 45 d7             	mov    %al,-0x29(%rbp)
  42a565:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  42a569:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
  42a56d:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  42a571:	48 89 4d 88          	mov    %rcx,-0x78(%rbp)
  42a575:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  42a579:	48 89 4d 80          	mov    %rcx,-0x80(%rbp)
  42a57d:	c7 85 7c ff ff ff 00 	movl   $0x0,-0x84(%rbp)
  42a584:	00 00 00 
  42a587:	48 83 7d 88 20       	cmpq   $0x20,-0x78(%rbp)
  42a58c:	76 33                	jbe    42a5c1 <entropy_update+0x71>
  42a58e:	31 c9                	xor    %ecx,%ecx
  42a590:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
  42a594:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  42a598:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
  42a59c:	e8 cf 7f 01 00       	callq  442570 <mbedtls_sha256_ret>
  42a5a1:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
  42a5a7:	83 f8 00             	cmp    $0x0,%eax
  42a5aa:	74 05                	je     42a5b1 <entropy_update+0x61>
  42a5ac:	e9 7b 01 00 00       	jmpq   42a72c <entropy_update+0x1dc>
  42a5b1:	48 8d 45 90          	lea    -0x70(%rbp),%rax
  42a5b5:	48 89 45 80          	mov    %rax,-0x80(%rbp)
  42a5b9:	48 c7 45 88 20 00 00 	movq   $0x20,-0x78(%rbp)
  42a5c0:	00 
  42a5c1:	8a 45 d7             	mov    -0x29(%rbp),%al
  42a5c4:	88 45 be             	mov    %al,-0x42(%rbp)
  42a5c7:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
  42a5cb:	48 81 e1 ff 00 00 00 	and    $0xff,%rcx
  42a5d2:	88 c8                	mov    %cl,%al
  42a5d4:	88 45 bf             	mov    %al,-0x41(%rbp)
  42a5d7:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  42a5db:	83 39 00             	cmpl   $0x0,(%rcx)
  42a5de:	0f 85 f8 00 00 00    	jne    42a6dc <entropy_update+0x18c>
  42a5e4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42a5e8:	48 83 c0 04          	add    $0x4,%rax
  42a5ec:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42a5f0:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
  42a5f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42a5fb:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  42a601:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42a605:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
  42a60c:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  42a610:	75 5a                	jne    42a66c <entropy_update+0x11c>
  42a612:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42a616:	c7 40 08 67 e6 09 6a 	movl   $0x6a09e667,0x8(%rax)
  42a61d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42a621:	c7 40 0c 85 ae 67 bb 	movl   $0xbb67ae85,0xc(%rax)
  42a628:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42a62c:	c7 40 10 72 f3 6e 3c 	movl   $0x3c6ef372,0x10(%rax)
  42a633:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42a637:	c7 40 14 3a f5 4f a5 	movl   $0xa54ff53a,0x14(%rax)
  42a63e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42a642:	c7 40 18 7f 52 0e 51 	movl   $0x510e527f,0x18(%rax)
  42a649:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42a64d:	c7 40 1c 8c 68 05 9b 	movl   $0x9b05688c,0x1c(%rax)
  42a654:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42a658:	c7 40 20 ab d9 83 1f 	movl   $0x1f83d9ab,0x20(%rax)
  42a65f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42a663:	c7 40 24 19 cd e0 5b 	movl   $0x5be0cd19,0x24(%rax)
  42a66a:	eb 58                	jmp    42a6c4 <entropy_update+0x174>
  42a66c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42a670:	c7 40 08 d8 9e 05 c1 	movl   $0xc1059ed8,0x8(%rax)
  42a677:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42a67b:	c7 40 0c 07 d5 7c 36 	movl   $0x367cd507,0xc(%rax)
  42a682:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42a686:	c7 40 10 17 dd 70 30 	movl   $0x3070dd17,0x10(%rax)
  42a68d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42a691:	c7 40 14 39 59 0e f7 	movl   $0xf70e5939,0x14(%rax)
  42a698:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42a69c:	c7 40 18 31 0b c0 ff 	movl   $0xffc00b31,0x18(%rax)
  42a6a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42a6a7:	c7 40 1c 11 15 58 68 	movl   $0x68581511,0x1c(%rax)
  42a6ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42a6b2:	c7 40 20 a7 8f f9 64 	movl   $0x64f98fa7,0x20(%rax)
  42a6b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42a6bd:	c7 40 24 a4 4f fa be 	movl   $0xbefa4fa4,0x24(%rax)
  42a6c4:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  42a6c7:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  42a6cb:	89 41 68             	mov    %eax,0x68(%rcx)
  42a6ce:	c7 85 7c ff ff ff 00 	movl   $0x0,-0x84(%rbp)
  42a6d5:	00 00 00 
  42a6d8:	eb 02                	jmp    42a6dc <entropy_update+0x18c>
  42a6da:	eb 50                	jmp    42a72c <entropy_update+0x1dc>
  42a6dc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42a6e0:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  42a6e6:	b8 02 00 00 00       	mov    $0x2,%eax
  42a6eb:	89 c2                	mov    %eax,%edx
  42a6ed:	48 8d 75 be          	lea    -0x42(%rbp),%rsi
  42a6f1:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  42a6f5:	48 83 c1 04          	add    $0x4,%rcx
  42a6f9:	48 89 cf             	mov    %rcx,%rdi
  42a6fc:	e8 df 78 01 00       	callq  441fe0 <mbedtls_sha256_update_ret>
  42a701:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
  42a707:	83 f8 00             	cmp    $0x0,%eax
  42a70a:	74 02                	je     42a70e <entropy_update+0x1be>
  42a70c:	eb 1e                	jmp    42a72c <entropy_update+0x1dc>
  42a70e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42a712:	48 83 c0 04          	add    $0x4,%rax
  42a716:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
  42a71a:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
  42a71e:	48 89 c7             	mov    %rax,%rdi
  42a721:	e8 ba 78 01 00       	callq  441fe0 <mbedtls_sha256_update_ret>
  42a726:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
  42a72c:	31 f6                	xor    %esi,%esi
  42a72e:	48 8d 45 90          	lea    -0x70(%rbp),%rax
  42a732:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42a736:	48 c7 45 f0 20 00 00 	movq   $0x20,-0x10(%rbp)
  42a73d:	00 
  42a73e:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  42a745:	00 
  42a746:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42a74a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  42a74e:	ff d0                	callq  *%rax
  42a750:	8b b5 7c ff ff ff    	mov    -0x84(%rbp),%esi
  42a756:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
  42a75d:	89 b5 6c ff ff ff    	mov    %esi,-0x94(%rbp)
  42a763:	e8 ee b1 01 00       	callq  445956 <writeback_cache>
  42a768:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
  42a76e:	48 81 c4 a0 00 00 00 	add    $0xa0,%rsp
  42a775:	5d                   	pop    %rbp
  42a776:	c3                   	retq   
  42a777:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  42a77e:	00 00 

000000000042a780 <entropy_gather_internal>:
  42a780:	55                   	push   %rbp
  42a781:	48 89 e5             	mov    %rsp,%rbp
  42a784:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
  42a78b:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
  42a78f:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
  42a796:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  42a79a:	83 7f 70 00          	cmpl   $0x0,0x70(%rdi)
  42a79e:	75 0c                	jne    42a7ac <entropy_gather_internal+0x2c>
  42a7a0:	c7 45 ec c0 ff ff ff 	movl   $0xffffffc0,-0x14(%rbp)
  42a7a7:	e9 63 01 00 00       	jmpq   42a90f <entropy_gather_internal+0x18f>
  42a7ac:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
  42a7b3:	8b 45 d8             	mov    -0x28(%rbp),%eax
  42a7b6:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  42a7ba:	3b 41 70             	cmp    0x70(%rcx),%eax
  42a7bd:	0f 8d 09 01 00 00    	jge    42a8cc <entropy_gather_internal+0x14c>
  42a7c3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42a7c7:	48 83 c0 78          	add    $0x78,%rax
  42a7cb:	48 63 4d d8          	movslq -0x28(%rbp),%rcx
  42a7cf:	48 6b c9 28          	imul   $0x28,%rcx,%rcx
  42a7d3:	48 01 c8             	add    %rcx,%rax
  42a7d6:	83 78 20 01          	cmpl   $0x1,0x20(%rax)
  42a7da:	75 07                	jne    42a7e3 <entropy_gather_internal+0x63>
  42a7dc:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%rbp)
  42a7e3:	b8 80 00 00 00       	mov    $0x80,%eax
  42a7e8:	89 c2                	mov    %eax,%edx
  42a7ea:	48 8d b5 50 ff ff ff 	lea    -0xb0(%rbp),%rsi
  42a7f1:	48 c7 85 48 ff ff ff 	movq   $0x0,-0xb8(%rbp)
  42a7f8:	00 00 00 00 
  42a7fc:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  42a800:	48 83 c1 78          	add    $0x78,%rcx
  42a804:	48 63 7d d8          	movslq -0x28(%rbp),%rdi
  42a808:	48 6b ff 28          	imul   $0x28,%rdi,%rdi
  42a80c:	48 01 f9             	add    %rdi,%rcx
  42a80f:	48 8b 09             	mov    (%rcx),%rcx
  42a812:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  42a816:	48 83 c7 78          	add    $0x78,%rdi
  42a81a:	4c 63 45 d8          	movslq -0x28(%rbp),%r8
  42a81e:	4d 6b c0 28          	imul   $0x28,%r8,%r8
  42a822:	4c 01 c7             	add    %r8,%rdi
  42a825:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
  42a829:	4c 8d 85 48 ff ff ff 	lea    -0xb8(%rbp),%r8
  42a830:	48 89 8d 40 ff ff ff 	mov    %rcx,-0xc0(%rbp)
  42a837:	4c 89 c1             	mov    %r8,%rcx
  42a83a:	4c 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%r8
  42a841:	41 ff d0             	callq  *%r8
  42a844:	89 45 dc             	mov    %eax,-0x24(%rbp)
  42a847:	83 f8 00             	cmp    $0x0,%eax
  42a84a:	74 05                	je     42a851 <entropy_gather_internal+0xd1>
  42a84c:	e9 8a 00 00 00       	jmpq   42a8db <entropy_gather_internal+0x15b>
  42a851:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)
  42a858:	00 
  42a859:	76 61                	jbe    42a8bc <entropy_gather_internal+0x13c>
  42a85b:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
  42a862:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  42a866:	8b 45 d8             	mov    -0x28(%rbp),%eax
  42a869:	88 c1                	mov    %al,%cl
  42a86b:	48 8b b5 48 ff ff ff 	mov    -0xb8(%rbp),%rsi
  42a872:	0f b6 c1             	movzbl %cl,%eax
  42a875:	48 89 b5 38 ff ff ff 	mov    %rsi,-0xc8(%rbp)
  42a87c:	89 c6                	mov    %eax,%esi
  42a87e:	48 8b 8d 38 ff ff ff 	mov    -0xc8(%rbp),%rcx
  42a885:	e8 c6 fc ff ff       	callq  42a550 <entropy_update>
  42a88a:	89 45 dc             	mov    %eax,-0x24(%rbp)
  42a88d:	83 f8 00             	cmp    $0x0,%eax
  42a890:	74 08                	je     42a89a <entropy_gather_internal+0x11a>
  42a892:	8b 45 dc             	mov    -0x24(%rbp),%eax
  42a895:	89 45 ec             	mov    %eax,-0x14(%rbp)
  42a898:	eb 75                	jmp    42a90f <entropy_gather_internal+0x18f>
  42a89a:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  42a8a1:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  42a8a5:	48 83 c1 78          	add    $0x78,%rcx
  42a8a9:	48 63 55 d8          	movslq -0x28(%rbp),%rdx
  42a8ad:	48 6b d2 28          	imul   $0x28,%rdx,%rdx
  42a8b1:	48 01 d1             	add    %rdx,%rcx
  42a8b4:	48 03 41 10          	add    0x10(%rcx),%rax
  42a8b8:	48 89 41 10          	mov    %rax,0x10(%rcx)
  42a8bc:	eb 00                	jmp    42a8be <entropy_gather_internal+0x13e>
  42a8be:	8b 45 d8             	mov    -0x28(%rbp),%eax
  42a8c1:	83 c0 01             	add    $0x1,%eax
  42a8c4:	89 45 d8             	mov    %eax,-0x28(%rbp)
  42a8c7:	e9 e7 fe ff ff       	jmpq   42a7b3 <entropy_gather_internal+0x33>
  42a8cc:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
  42a8d0:	75 07                	jne    42a8d9 <entropy_gather_internal+0x159>
  42a8d2:	c7 45 dc c3 ff ff ff 	movl   $0xffffffc3,-0x24(%rbp)
  42a8d9:	eb 00                	jmp    42a8db <entropy_gather_internal+0x15b>
  42a8db:	31 f6                	xor    %esi,%esi
  42a8dd:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
  42a8e4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42a8e8:	48 c7 45 f0 80 00 00 	movq   $0x80,-0x10(%rbp)
  42a8ef:	00 
  42a8f0:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  42a8f7:	00 
  42a8f8:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42a8fc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  42a900:	ff d0                	callq  *%rax
  42a902:	8b 75 dc             	mov    -0x24(%rbp),%esi
  42a905:	89 75 ec             	mov    %esi,-0x14(%rbp)
  42a908:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
  42a90f:	8b 45 ec             	mov    -0x14(%rbp),%eax
  42a912:	89 85 2c ff ff ff    	mov    %eax,-0xd4(%rbp)
  42a918:	e8 39 b0 01 00       	callq  445956 <writeback_cache>
  42a91d:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
  42a923:	48 81 c4 e0 00 00 00 	add    $0xe0,%rsp
  42a92a:	5d                   	pop    %rbp
  42a92b:	c3                   	retq   
  42a92c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000042a930 <mbedtls_entropy_func>:
  42a930:	55                   	push   %rbp
  42a931:	48 89 e5             	mov    %rsp,%rbp
  42a934:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
  42a93b:	48 89 7d b0          	mov    %rdi,-0x50(%rbp)
  42a93f:	48 89 75 a8          	mov    %rsi,-0x58(%rbp)
  42a943:	48 89 55 a0          	mov    %rdx,-0x60(%rbp)
  42a947:	c7 45 98 00 00 00 00 	movl   $0x0,-0x68(%rbp)
  42a94e:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
  42a952:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
  42a956:	48 83 7d a0 20       	cmpq   $0x20,-0x60(%rbp)
  42a95b:	76 0c                	jbe    42a969 <mbedtls_entropy_func+0x39>
  42a95d:	c7 45 bc c4 ff ff ff 	movl   $0xffffffc4,-0x44(%rbp)
  42a964:	e9 15 03 00 00       	jmpq   42ac7e <mbedtls_entropy_func+0x34e>
  42a969:	eb 00                	jmp    42a96b <mbedtls_entropy_func+0x3b>
  42a96b:	8b 45 98             	mov    -0x68(%rbp),%eax
  42a96e:	89 c1                	mov    %eax,%ecx
  42a970:	83 c1 01             	add    $0x1,%ecx
  42a973:	89 4d 98             	mov    %ecx,-0x68(%rbp)
  42a976:	3d 00 01 00 00       	cmp    $0x100,%eax
  42a97b:	7e 0c                	jle    42a989 <mbedtls_entropy_func+0x59>
  42a97d:	c7 45 9c c4 ff ff ff 	movl   $0xffffffc4,-0x64(%rbp)
  42a984:	e9 c1 02 00 00       	jmpq   42ac4a <mbedtls_entropy_func+0x31a>
  42a989:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
  42a98d:	e8 ee fd ff ff       	callq  42a780 <entropy_gather_internal>
  42a992:	89 45 9c             	mov    %eax,-0x64(%rbp)
  42a995:	83 f8 00             	cmp    $0x0,%eax
  42a998:	74 05                	je     42a99f <mbedtls_entropy_func+0x6f>
  42a99a:	e9 ab 02 00 00       	jmpq   42ac4a <mbedtls_entropy_func+0x31a>
  42a99f:	c7 45 90 01 00 00 00 	movl   $0x1,-0x70(%rbp)
  42a9a6:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%rbp)
  42a9ad:	8b 45 94             	mov    -0x6c(%rbp),%eax
  42a9b0:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
  42a9b4:	3b 41 70             	cmp    0x70(%rcx),%eax
  42a9b7:	7d 44                	jge    42a9fd <mbedtls_entropy_func+0xcd>
  42a9b9:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  42a9bd:	48 83 c0 78          	add    $0x78,%rax
  42a9c1:	48 63 4d 94          	movslq -0x6c(%rbp),%rcx
  42a9c5:	48 6b c9 28          	imul   $0x28,%rcx,%rcx
  42a9c9:	48 01 c8             	add    %rcx,%rax
  42a9cc:	48 8b 40 10          	mov    0x10(%rax),%rax
  42a9d0:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
  42a9d4:	48 83 c1 78          	add    $0x78,%rcx
  42a9d8:	48 63 55 94          	movslq -0x6c(%rbp),%rdx
  42a9dc:	48 6b d2 28          	imul   $0x28,%rdx,%rdx
  42a9e0:	48 01 d1             	add    %rdx,%rcx
  42a9e3:	48 3b 41 18          	cmp    0x18(%rcx),%rax
  42a9e7:	73 07                	jae    42a9f0 <mbedtls_entropy_func+0xc0>
  42a9e9:	c7 45 90 00 00 00 00 	movl   $0x0,-0x70(%rbp)
  42a9f0:	eb 00                	jmp    42a9f2 <mbedtls_entropy_func+0xc2>
  42a9f2:	8b 45 94             	mov    -0x6c(%rbp),%eax
  42a9f5:	83 c0 01             	add    $0x1,%eax
  42a9f8:	89 45 94             	mov    %eax,-0x6c(%rbp)
  42a9fb:	eb b0                	jmp    42a9ad <mbedtls_entropy_func+0x7d>
  42a9fd:	eb 00                	jmp    42a9ff <mbedtls_entropy_func+0xcf>
  42a9ff:	83 7d 90 00          	cmpl   $0x0,-0x70(%rbp)
  42aa03:	0f 95 c0             	setne  %al
  42aa06:	34 ff                	xor    $0xff,%al
  42aa08:	a8 01                	test   $0x1,%al
  42aa0a:	0f 85 5b ff ff ff    	jne    42a96b <mbedtls_entropy_func+0x3b>
  42aa10:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
  42aa17:	31 f6                	xor    %esi,%esi
  42aa19:	b9 20 00 00 00       	mov    $0x20,%ecx
  42aa1e:	89 ca                	mov    %ecx,%edx
  42aa20:	48 89 c7             	mov    %rax,%rdi
  42aa23:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
  42aa2a:	e8 f1 65 fd ff       	callq  401020 <memset@plt>
  42aa2f:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  42aa33:	48 83 c0 04          	add    $0x4,%rax
  42aa37:	48 89 c7             	mov    %rax,%rdi
  42aa3a:	48 8b b5 58 ff ff ff 	mov    -0xa8(%rbp),%rsi
  42aa41:	e8 1a 77 01 00       	callq  442160 <mbedtls_sha256_finish_ret>
  42aa46:	89 45 9c             	mov    %eax,-0x64(%rbp)
  42aa49:	83 f8 00             	cmp    $0x0,%eax
  42aa4c:	74 05                	je     42aa53 <mbedtls_entropy_func+0x123>
  42aa4e:	e9 f7 01 00 00       	jmpq   42ac4a <mbedtls_entropy_func+0x31a>
  42aa53:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  42aa57:	48 83 c0 04          	add    $0x4,%rax
  42aa5b:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  42aa5f:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  42aa64:	75 02                	jne    42aa68 <mbedtls_entropy_func+0x138>
  42aa66:	eb 2b                	jmp    42aa93 <mbedtls_entropy_func+0x163>
  42aa68:	31 f6                	xor    %esi,%esi
  42aa6a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  42aa6e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  42aa72:	48 c7 45 c8 6c 00 00 	movq   $0x6c,-0x38(%rbp)
  42aa79:	00 
  42aa7a:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  42aa81:	00 
  42aa82:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  42aa86:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  42aa8a:	ff d0                	callq  *%rax
  42aa8c:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
  42aa93:	31 f6                	xor    %esi,%esi
  42aa95:	b8 6c 00 00 00       	mov    $0x6c,%eax
  42aa9a:	89 c2                	mov    %eax,%edx
  42aa9c:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
  42aaa0:	48 83 c1 04          	add    $0x4,%rcx
  42aaa4:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  42aaa8:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  42aaac:	48 89 cf             	mov    %rcx,%rdi
  42aaaf:	e8 6c 65 fd ff       	callq  401020 <memset@plt>
  42aab4:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
  42aab8:	48 83 c1 04          	add    $0x4,%rcx
  42aabc:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
  42aac0:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  42aac7:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  42aacb:	c7 01 00 00 00 00    	movl   $0x0,(%rcx)
  42aad1:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  42aad5:	c7 41 04 00 00 00 00 	movl   $0x0,0x4(%rcx)
  42aadc:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  42aae0:	75 5a                	jne    42ab3c <mbedtls_entropy_func+0x20c>
  42aae2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42aae6:	c7 40 08 67 e6 09 6a 	movl   $0x6a09e667,0x8(%rax)
  42aaed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42aaf1:	c7 40 0c 85 ae 67 bb 	movl   $0xbb67ae85,0xc(%rax)
  42aaf8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42aafc:	c7 40 10 72 f3 6e 3c 	movl   $0x3c6ef372,0x10(%rax)
  42ab03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42ab07:	c7 40 14 3a f5 4f a5 	movl   $0xa54ff53a,0x14(%rax)
  42ab0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42ab12:	c7 40 18 7f 52 0e 51 	movl   $0x510e527f,0x18(%rax)
  42ab19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42ab1d:	c7 40 1c 8c 68 05 9b 	movl   $0x9b05688c,0x1c(%rax)
  42ab24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42ab28:	c7 40 20 ab d9 83 1f 	movl   $0x1f83d9ab,0x20(%rax)
  42ab2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42ab33:	c7 40 24 19 cd e0 5b 	movl   $0x5be0cd19,0x24(%rax)
  42ab3a:	eb 58                	jmp    42ab94 <mbedtls_entropy_func+0x264>
  42ab3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42ab40:	c7 40 08 d8 9e 05 c1 	movl   $0xc1059ed8,0x8(%rax)
  42ab47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42ab4b:	c7 40 0c 07 d5 7c 36 	movl   $0x367cd507,0xc(%rax)
  42ab52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42ab56:	c7 40 10 17 dd 70 30 	movl   $0x3070dd17,0x10(%rax)
  42ab5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42ab61:	c7 40 14 39 59 0e f7 	movl   $0xf70e5939,0x14(%rax)
  42ab68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42ab6c:	c7 40 18 31 0b c0 ff 	movl   $0xffc00b31,0x18(%rax)
  42ab73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42ab77:	c7 40 1c 11 15 58 68 	movl   $0x68581511,0x1c(%rax)
  42ab7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42ab82:	c7 40 20 a7 8f f9 64 	movl   $0x64f98fa7,0x20(%rax)
  42ab89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42ab8d:	c7 40 24 a4 4f fa be 	movl   $0xbefa4fa4,0x24(%rax)
  42ab94:	8b 45 f4             	mov    -0xc(%rbp),%eax
  42ab97:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  42ab9b:	89 41 68             	mov    %eax,0x68(%rcx)
  42ab9e:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
  42aba5:	eb 05                	jmp    42abac <mbedtls_entropy_func+0x27c>
  42aba7:	e9 9e 00 00 00       	jmpq   42ac4a <mbedtls_entropy_func+0x31a>
  42abac:	b8 20 00 00 00       	mov    $0x20,%eax
  42abb1:	89 c2                	mov    %eax,%edx
  42abb3:	48 8d b5 60 ff ff ff 	lea    -0xa0(%rbp),%rsi
  42abba:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
  42abbe:	48 83 c1 04          	add    $0x4,%rcx
  42abc2:	48 89 cf             	mov    %rcx,%rdi
  42abc5:	e8 16 74 01 00       	callq  441fe0 <mbedtls_sha256_update_ret>
  42abca:	89 45 9c             	mov    %eax,-0x64(%rbp)
  42abcd:	83 f8 00             	cmp    $0x0,%eax
  42abd0:	74 02                	je     42abd4 <mbedtls_entropy_func+0x2a4>
  42abd2:	eb 76                	jmp    42ac4a <mbedtls_entropy_func+0x31a>
  42abd4:	b8 20 00 00 00       	mov    $0x20,%eax
  42abd9:	89 c6                	mov    %eax,%esi
  42abdb:	31 c9                	xor    %ecx,%ecx
  42abdd:	48 8d 95 60 ff ff ff 	lea    -0xa0(%rbp),%rdx
  42abe4:	48 89 d7             	mov    %rdx,%rdi
  42abe7:	e8 84 79 01 00       	callq  442570 <mbedtls_sha256_ret>
  42abec:	89 45 9c             	mov    %eax,-0x64(%rbp)
  42abef:	83 f8 00             	cmp    $0x0,%eax
  42abf2:	74 02                	je     42abf6 <mbedtls_entropy_func+0x2c6>
  42abf4:	eb 54                	jmp    42ac4a <mbedtls_entropy_func+0x31a>
  42abf6:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%rbp)
  42abfd:	8b 45 94             	mov    -0x6c(%rbp),%eax
  42ac00:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
  42ac04:	3b 41 70             	cmp    0x70(%rcx),%eax
  42ac07:	7d 26                	jge    42ac2f <mbedtls_entropy_func+0x2ff>
  42ac09:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  42ac0d:	48 83 c0 78          	add    $0x78,%rax
  42ac11:	48 63 4d 94          	movslq -0x6c(%rbp),%rcx
  42ac15:	48 6b c9 28          	imul   $0x28,%rcx,%rcx
  42ac19:	48 01 c8             	add    %rcx,%rax
  42ac1c:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
  42ac23:	00 
  42ac24:	8b 45 94             	mov    -0x6c(%rbp),%eax
  42ac27:	83 c0 01             	add    $0x1,%eax
  42ac2a:	89 45 94             	mov    %eax,-0x6c(%rbp)
  42ac2d:	eb ce                	jmp    42abfd <mbedtls_entropy_func+0x2cd>
  42ac2f:	48 8d b5 60 ff ff ff 	lea    -0xa0(%rbp),%rsi
  42ac36:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
  42ac3a:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
  42ac3e:	e8 2d 65 fd ff       	callq  401170 <memcpy@plt>
  42ac43:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
  42ac4a:	31 f6                	xor    %esi,%esi
  42ac4c:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
  42ac53:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42ac57:	48 c7 45 e0 20 00 00 	movq   $0x20,-0x20(%rbp)
  42ac5e:	00 
  42ac5f:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  42ac66:	00 
  42ac67:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  42ac6b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  42ac6f:	ff d0                	callq  *%rax
  42ac71:	8b 75 9c             	mov    -0x64(%rbp),%esi
  42ac74:	89 75 bc             	mov    %esi,-0x44(%rbp)
  42ac77:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  42ac7e:	8b 45 bc             	mov    -0x44(%rbp),%eax
  42ac81:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
  42ac87:	e8 ca ac 01 00       	callq  445956 <writeback_cache>
  42ac8c:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
  42ac92:	48 81 c4 c0 00 00 00 	add    $0xc0,%rsp
  42ac99:	5d                   	pop    %rbp
  42ac9a:	c3                   	retq   
  42ac9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000042aca0 <mbedtls_entropy_write_seed_file>:
  42aca0:	55                   	push   %rbp
  42aca1:	48 89 e5             	mov    %rsp,%rbp
  42aca4:	48 83 ec 60          	sub    $0x60,%rsp
  42aca8:	48 b8 40 7e 44 00 00 	movabs $0x447e40,%rax
  42acaf:	00 00 00 
  42acb2:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  42acb6:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  42acba:	c7 45 e4 c1 ff ff ff 	movl   $0xffffffc1,-0x1c(%rbp)
  42acc1:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  42acc5:	48 89 c6             	mov    %rax,%rsi
  42acc8:	e8 53 65 fd ff       	callq  401220 <fopen64@plt>
  42accd:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  42acd1:	48 83 f8 00          	cmp    $0x0,%rax
  42acd5:	75 09                	jne    42ace0 <mbedtls_entropy_write_seed_file+0x40>
  42acd7:	c7 45 fc c1 ff ff ff 	movl   $0xffffffc1,-0x4(%rbp)
  42acde:	eb 74                	jmp    42ad54 <mbedtls_entropy_write_seed_file+0xb4>
  42ace0:	b8 20 00 00 00       	mov    $0x20,%eax
  42ace5:	89 c2                	mov    %eax,%edx
  42ace7:	48 8d 75 b0          	lea    -0x50(%rbp),%rsi
  42aceb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  42acef:	48 89 cf             	mov    %rcx,%rdi
  42acf2:	e8 39 fc ff ff       	callq  42a930 <mbedtls_entropy_func>
  42acf7:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  42acfa:	83 f8 00             	cmp    $0x0,%eax
  42acfd:	74 02                	je     42ad01 <mbedtls_entropy_write_seed_file+0x61>
  42acff:	eb 31                	jmp    42ad32 <mbedtls_entropy_write_seed_file+0x92>
  42ad01:	b8 01 00 00 00       	mov    $0x1,%eax
  42ad06:	89 c6                	mov    %eax,%esi
  42ad08:	b8 20 00 00 00       	mov    $0x20,%eax
  42ad0d:	89 c2                	mov    %eax,%edx
  42ad0f:	48 8d 7d b0          	lea    -0x50(%rbp),%rdi
  42ad13:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  42ad17:	e8 14 65 fd ff       	callq  401230 <fwrite@plt>
  42ad1c:	48 83 f8 20          	cmp    $0x20,%rax
  42ad20:	74 09                	je     42ad2b <mbedtls_entropy_write_seed_file+0x8b>
  42ad22:	c7 45 e4 c1 ff ff ff 	movl   $0xffffffc1,-0x1c(%rbp)
  42ad29:	eb 07                	jmp    42ad32 <mbedtls_entropy_write_seed_file+0x92>
  42ad2b:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
  42ad32:	b8 20 00 00 00       	mov    $0x20,%eax
  42ad37:	89 c6                	mov    %eax,%esi
  42ad39:	48 8d 7d b0          	lea    -0x50(%rbp),%rdi
  42ad3d:	e8 2e b3 00 00       	callq  436070 <mbedtls_platform_zeroize>
  42ad42:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  42ad46:	e8 f5 64 fd ff       	callq  401240 <fclose@plt>
  42ad4b:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  42ad4e:	89 4d fc             	mov    %ecx,-0x4(%rbp)
  42ad51:	89 45 ac             	mov    %eax,-0x54(%rbp)
  42ad54:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42ad57:	89 45 a8             	mov    %eax,-0x58(%rbp)
  42ad5a:	e8 f7 ab 01 00       	callq  445956 <writeback_cache>
  42ad5f:	8b 45 a8             	mov    -0x58(%rbp),%eax
  42ad62:	48 83 c4 60          	add    $0x60,%rsp
  42ad66:	5d                   	pop    %rbp
  42ad67:	c3                   	retq   
  42ad68:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  42ad6f:	00 

000000000042ad70 <mbedtls_platform_entropy_poll>:
  42ad70:	55                   	push   %rbp
  42ad71:	48 89 e5             	mov    %rsp,%rbp
  42ad74:	48 83 ec 60          	sub    $0x60,%rsp
  42ad78:	b8 3e 01 00 00       	mov    $0x13e,%eax
  42ad7d:	41 89 c0             	mov    %eax,%r8d
  42ad80:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
  42ad84:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
  42ad88:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
  42ad8c:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
  42ad90:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  42ad94:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  42ad98:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
  42ad9c:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  42ada0:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  42ada7:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  42adab:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  42adaf:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  42adb2:	4c 89 c7             	mov    %r8,%rdi
  42adb5:	b0 00                	mov    $0x0,%al
  42adb7:	e8 94 64 fd ff       	callq  401250 <syscall@plt>
  42adbc:	89 c1                	mov    %eax,%ecx
  42adbe:	89 4d b4             	mov    %ecx,-0x4c(%rbp)
  42adc1:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
  42adc5:	7c 17                	jl     42adde <mbedtls_platform_entropy_poll+0x6e>
  42adc7:	48 63 45 b4          	movslq -0x4c(%rbp),%rax
  42adcb:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  42adcf:	48 89 01             	mov    %rax,(%rcx)
  42add2:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
  42add9:	e9 a9 00 00 00       	jmpq   42ae87 <mbedtls_platform_entropy_poll+0x117>
  42adde:	e8 4d 63 fd ff       	callq  401130 <__errno_location@plt>
  42ade3:	83 38 26             	cmpl   $0x26,(%rax)
  42ade6:	74 0c                	je     42adf4 <mbedtls_platform_entropy_poll+0x84>
  42ade8:	c7 45 e8 c4 ff ff ff 	movl   $0xffffffc4,-0x18(%rbp)
  42adef:	e9 93 00 00 00       	jmpq   42ae87 <mbedtls_platform_entropy_poll+0x117>
  42adf4:	eb 00                	jmp    42adf6 <mbedtls_platform_entropy_poll+0x86>
  42adf6:	48 be 50 7e 44 00 00 	movabs $0x447e50,%rsi
  42adfd:	00 00 00 
  42ae00:	48 bf 60 7e 44 00 00 	movabs $0x447e60,%rdi
  42ae07:	00 00 00 
  42ae0a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42ae0e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  42ae15:	e8 06 64 fd ff       	callq  401220 <fopen64@plt>
  42ae1a:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  42ae1e:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  42ae23:	75 09                	jne    42ae2e <mbedtls_platform_entropy_poll+0xbe>
  42ae25:	c7 45 e8 c4 ff ff ff 	movl   $0xffffffc4,-0x18(%rbp)
  42ae2c:	eb 59                	jmp    42ae87 <mbedtls_platform_entropy_poll+0x117>
  42ae2e:	b8 01 00 00 00       	mov    $0x1,%eax
  42ae33:	89 c6                	mov    %eax,%esi
  42ae35:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  42ae39:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  42ae3d:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  42ae41:	e8 1a 64 fd ff       	callq  401260 <fread@plt>
  42ae46:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  42ae4a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  42ae4e:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
  42ae52:	74 15                	je     42ae69 <mbedtls_platform_entropy_poll+0xf9>
  42ae54:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  42ae58:	e8 e3 63 fd ff       	callq  401240 <fclose@plt>
  42ae5d:	c7 45 e8 c4 ff ff ff 	movl   $0xffffffc4,-0x18(%rbp)
  42ae64:	89 45 b0             	mov    %eax,-0x50(%rbp)
  42ae67:	eb 1e                	jmp    42ae87 <mbedtls_platform_entropy_poll+0x117>
  42ae69:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  42ae6d:	e8 ce 63 fd ff       	callq  401240 <fclose@plt>
  42ae72:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  42ae76:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  42ae7a:	48 89 39             	mov    %rdi,(%rcx)
  42ae7d:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
  42ae84:	89 45 ac             	mov    %eax,-0x54(%rbp)
  42ae87:	8b 45 e8             	mov    -0x18(%rbp),%eax
  42ae8a:	89 45 a8             	mov    %eax,-0x58(%rbp)
  42ae8d:	e8 c4 aa 01 00       	callq  445956 <writeback_cache>
  42ae92:	8b 45 a8             	mov    -0x58(%rbp),%eax
  42ae95:	48 83 c4 60          	add    $0x60,%rsp
  42ae99:	5d                   	pop    %rbp
  42ae9a:	c3                   	retq   
  42ae9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000042aea0 <mbedtls_md_info_from_type>:
  42aea0:	55                   	push   %rbp
  42aea1:	48 89 e5             	mov    %rsp,%rbp
  42aea4:	48 83 ec 30          	sub    $0x30,%rsp
  42aea8:	89 7d f4             	mov    %edi,-0xc(%rbp)
  42aeab:	8b 7d f4             	mov    -0xc(%rbp),%edi
  42aeae:	83 c7 fd             	add    $0xfffffffd,%edi
  42aeb1:	89 f8                	mov    %edi,%eax
  42aeb3:	83 ef 03             	sub    $0x3,%edi
  42aeb6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42aeba:	89 7d e4             	mov    %edi,-0x1c(%rbp)
  42aebd:	77 4e                	ja     42af0d <mbedtls_md_info_from_type+0x6d>
  42aebf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42aec3:	48 8b 0c c5 38 6d 44 	mov    0x446d38(,%rax,8),%rcx
  42aeca:	00 
  42aecb:	ff e1                	jmpq   *%rcx
  42aecd:	48 b8 50 d9 44 00 00 	movabs $0x44d950,%rax
  42aed4:	00 00 00 
  42aed7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42aedb:	eb 38                	jmp    42af15 <mbedtls_md_info_from_type+0x75>
  42aedd:	48 b8 b0 d9 44 00 00 	movabs $0x44d9b0,%rax
  42aee4:	00 00 00 
  42aee7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42aeeb:	eb 28                	jmp    42af15 <mbedtls_md_info_from_type+0x75>
  42aeed:	48 b8 10 da 44 00 00 	movabs $0x44da10,%rax
  42aef4:	00 00 00 
  42aef7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42aefb:	eb 18                	jmp    42af15 <mbedtls_md_info_from_type+0x75>
  42aefd:	48 b8 70 da 44 00 00 	movabs $0x44da70,%rax
  42af04:	00 00 00 
  42af07:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42af0b:	eb 08                	jmp    42af15 <mbedtls_md_info_from_type+0x75>
  42af0d:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  42af14:	00 
  42af15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42af19:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  42af1d:	e8 34 aa 01 00       	callq  445956 <writeback_cache>
  42af22:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42af26:	48 83 c4 30          	add    $0x30,%rsp
  42af2a:	5d                   	pop    %rbp
  42af2b:	c3                   	retq   
  42af2c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000042af30 <mbedtls_md_init>:
  42af30:	55                   	push   %rbp
  42af31:	48 89 e5             	mov    %rsp,%rbp
  42af34:	48 83 ec 10          	sub    $0x10,%rsp
  42af38:	31 f6                	xor    %esi,%esi
  42af3a:	b8 18 00 00 00       	mov    $0x18,%eax
  42af3f:	89 c2                	mov    %eax,%edx
  42af41:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42af45:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42af49:	e8 d2 60 fd ff       	callq  401020 <memset@plt>
  42af4e:	e8 03 aa 01 00       	callq  445956 <writeback_cache>
  42af53:	48 83 c4 10          	add    $0x10,%rsp
  42af57:	5d                   	pop    %rbp
  42af58:	c3                   	retq   
  42af59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000042af60 <mbedtls_md_free>:
  42af60:	55                   	push   %rbp
  42af61:	48 89 e5             	mov    %rsp,%rbp
  42af64:	48 83 ec 40          	sub    $0x40,%rsp
  42af68:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  42af6c:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  42af71:	74 0a                	je     42af7d <mbedtls_md_free+0x1d>
  42af73:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42af77:	48 83 38 00          	cmpq   $0x0,(%rax)
  42af7b:	75 05                	jne    42af82 <mbedtls_md_free+0x22>
  42af7d:	e9 98 00 00 00       	jmpq   42b01a <mbedtls_md_free+0xba>
  42af82:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42af86:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
  42af8b:	74 15                	je     42afa2 <mbedtls_md_free+0x42>
  42af8d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42af91:	48 8b 00             	mov    (%rax),%rax
  42af94:	48 8b 40 40          	mov    0x40(%rax),%rax
  42af98:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  42af9c:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  42afa0:	ff d0                	callq  *%rax
  42afa2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42afa6:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
  42afab:	74 45                	je     42aff2 <mbedtls_md_free+0x92>
  42afad:	31 f6                	xor    %esi,%esi
  42afaf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42afb3:	48 8b 40 10          	mov    0x10(%rax),%rax
  42afb7:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  42afbb:	48 8b 09             	mov    (%rcx),%rcx
  42afbe:	8b 51 14             	mov    0x14(%rcx),%edx
  42afc1:	c1 e2 01             	shl    $0x1,%edx
  42afc4:	48 63 ca             	movslq %edx,%rcx
  42afc7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42afcb:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  42afcf:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  42afd6:	00 
  42afd7:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  42afdb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  42afdf:	ff d0                	callq  *%rax
  42afe1:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  42afe5:	48 8b 79 10          	mov    0x10(%rcx),%rdi
  42afe9:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  42afed:	e8 ee 60 fd ff       	callq  4010e0 <free@plt>
  42aff2:	31 f6                	xor    %esi,%esi
  42aff4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42aff8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42affc:	48 c7 45 f0 18 00 00 	movq   $0x18,-0x10(%rbp)
  42b003:	00 
  42b004:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  42b00b:	00 
  42b00c:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42b010:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  42b014:	ff d0                	callq  *%rax
  42b016:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  42b01a:	e8 37 a9 01 00       	callq  445956 <writeback_cache>
  42b01f:	48 83 c4 40          	add    $0x40,%rsp
  42b023:	5d                   	pop    %rbp
  42b024:	c3                   	retq   
  42b025:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  42b02c:	00 00 00 00 

000000000042b030 <mbedtls_md_setup>:
  42b030:	55                   	push   %rbp
  42b031:	48 89 e5             	mov    %rsp,%rbp
  42b034:	48 83 ec 20          	sub    $0x20,%rsp
  42b038:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  42b03c:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  42b040:	89 55 e4             	mov    %edx,-0x1c(%rbp)
  42b043:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  42b048:	74 07                	je     42b051 <mbedtls_md_setup+0x21>
  42b04a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  42b04f:	75 09                	jne    42b05a <mbedtls_md_setup+0x2a>
  42b051:	c7 45 fc 00 af ff ff 	movl   $0xffffaf00,-0x4(%rbp)
  42b058:	eb 7a                	jmp    42b0d4 <mbedtls_md_setup+0xa4>
  42b05a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42b05e:	ff 50 38             	callq  *0x38(%rax)
  42b061:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  42b065:	48 89 41 08          	mov    %rax,0x8(%rcx)
  42b069:	48 83 f8 00          	cmp    $0x0,%rax
  42b06d:	75 09                	jne    42b078 <mbedtls_md_setup+0x48>
  42b06f:	c7 45 fc 80 ae ff ff 	movl   $0xffffae80,-0x4(%rbp)
  42b076:	eb 5c                	jmp    42b0d4 <mbedtls_md_setup+0xa4>
  42b078:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  42b07c:	74 44                	je     42b0c2 <mbedtls_md_setup+0x92>
  42b07e:	b8 02 00 00 00       	mov    $0x2,%eax
  42b083:	89 c7                	mov    %eax,%edi
  42b085:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  42b089:	48 63 71 14          	movslq 0x14(%rcx),%rsi
  42b08d:	e8 58 b7 01 00       	callq  4467ea <aes_calloc>
  42b092:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  42b096:	48 89 41 10          	mov    %rax,0x10(%rcx)
  42b09a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42b09e:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
  42b0a3:	75 1b                	jne    42b0c0 <mbedtls_md_setup+0x90>
  42b0a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42b0a9:	48 8b 40 40          	mov    0x40(%rax),%rax
  42b0ad:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  42b0b1:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  42b0b5:	ff d0                	callq  *%rax
  42b0b7:	c7 45 fc 80 ae ff ff 	movl   $0xffffae80,-0x4(%rbp)
  42b0be:	eb 14                	jmp    42b0d4 <mbedtls_md_setup+0xa4>
  42b0c0:	eb 00                	jmp    42b0c2 <mbedtls_md_setup+0x92>
  42b0c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42b0c6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  42b0ca:	48 89 01             	mov    %rax,(%rcx)
  42b0cd:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  42b0d4:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42b0d7:	89 45 e0             	mov    %eax,-0x20(%rbp)
  42b0da:	e8 77 a8 01 00       	callq  445956 <writeback_cache>
  42b0df:	8b 45 e0             	mov    -0x20(%rbp),%eax
  42b0e2:	48 83 c4 20          	add    $0x20,%rsp
  42b0e6:	5d                   	pop    %rbp
  42b0e7:	c3                   	retq   
  42b0e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  42b0ef:	00 

000000000042b0f0 <mbedtls_md_starts>:
  42b0f0:	55                   	push   %rbp
  42b0f1:	48 89 e5             	mov    %rsp,%rbp
  42b0f4:	48 83 ec 20          	sub    $0x20,%rsp
  42b0f8:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  42b0fc:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  42b101:	74 0a                	je     42b10d <mbedtls_md_starts+0x1d>
  42b103:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42b107:	48 83 38 00          	cmpq   $0x0,(%rax)
  42b10b:	75 09                	jne    42b116 <mbedtls_md_starts+0x26>
  42b10d:	c7 45 fc 00 af ff ff 	movl   $0xffffaf00,-0x4(%rbp)
  42b114:	eb 18                	jmp    42b12e <mbedtls_md_starts+0x3e>
  42b116:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42b11a:	48 8b 00             	mov    (%rax),%rax
  42b11d:	48 8b 40 18          	mov    0x18(%rax),%rax
  42b121:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  42b125:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  42b129:	ff d0                	callq  *%rax
  42b12b:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42b12e:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42b131:	89 45 ec             	mov    %eax,-0x14(%rbp)
  42b134:	e8 1d a8 01 00       	callq  445956 <writeback_cache>
  42b139:	8b 45 ec             	mov    -0x14(%rbp),%eax
  42b13c:	48 83 c4 20          	add    $0x20,%rsp
  42b140:	5d                   	pop    %rbp
  42b141:	c3                   	retq   
  42b142:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  42b149:	1f 84 00 00 00 00 00 

000000000042b150 <mbedtls_md_update>:
  42b150:	55                   	push   %rbp
  42b151:	48 89 e5             	mov    %rsp,%rbp
  42b154:	48 83 ec 30          	sub    $0x30,%rsp
  42b158:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  42b15c:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  42b160:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
  42b164:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  42b169:	74 0a                	je     42b175 <mbedtls_md_update+0x25>
  42b16b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42b16f:	48 83 38 00          	cmpq   $0x0,(%rax)
  42b173:	75 09                	jne    42b17e <mbedtls_md_update+0x2e>
  42b175:	c7 45 fc 00 af ff ff 	movl   $0xffffaf00,-0x4(%rbp)
  42b17c:	eb 20                	jmp    42b19e <mbedtls_md_update+0x4e>
  42b17e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42b182:	48 8b 00             	mov    (%rax),%rax
  42b185:	48 8b 40 20          	mov    0x20(%rax),%rax
  42b189:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  42b18d:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  42b191:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  42b195:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  42b199:	ff d0                	callq  *%rax
  42b19b:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42b19e:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42b1a1:	89 45 dc             	mov    %eax,-0x24(%rbp)
  42b1a4:	e8 ad a7 01 00       	callq  445956 <writeback_cache>
  42b1a9:	8b 45 dc             	mov    -0x24(%rbp),%eax
  42b1ac:	48 83 c4 30          	add    $0x30,%rsp
  42b1b0:	5d                   	pop    %rbp
  42b1b1:	c3                   	retq   
  42b1b2:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  42b1b9:	1f 84 00 00 00 00 00 

000000000042b1c0 <mbedtls_md_finish>:
  42b1c0:	55                   	push   %rbp
  42b1c1:	48 89 e5             	mov    %rsp,%rbp
  42b1c4:	48 83 ec 20          	sub    $0x20,%rsp
  42b1c8:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  42b1cc:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  42b1d0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  42b1d5:	74 0a                	je     42b1e1 <mbedtls_md_finish+0x21>
  42b1d7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42b1db:	48 83 38 00          	cmpq   $0x0,(%rax)
  42b1df:	75 09                	jne    42b1ea <mbedtls_md_finish+0x2a>
  42b1e1:	c7 45 fc 00 af ff ff 	movl   $0xffffaf00,-0x4(%rbp)
  42b1e8:	eb 1c                	jmp    42b206 <mbedtls_md_finish+0x46>
  42b1ea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42b1ee:	48 8b 00             	mov    (%rax),%rax
  42b1f1:	48 8b 40 28          	mov    0x28(%rax),%rax
  42b1f5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  42b1f9:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  42b1fd:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  42b201:	ff d0                	callq  *%rax
  42b203:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42b206:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42b209:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  42b20c:	e8 45 a7 01 00       	callq  445956 <writeback_cache>
  42b211:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  42b214:	48 83 c4 20          	add    $0x20,%rsp
  42b218:	5d                   	pop    %rbp
  42b219:	c3                   	retq   
  42b21a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000042b220 <mbedtls_md_hmac_starts>:
  42b220:	55                   	push   %rbp
  42b221:	48 89 e5             	mov    %rsp,%rbp
  42b224:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
  42b22b:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
  42b22f:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
  42b233:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
  42b237:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  42b23c:	74 15                	je     42b253 <mbedtls_md_hmac_starts+0x33>
  42b23e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42b242:	48 83 38 00          	cmpq   $0x0,(%rax)
  42b246:	74 0b                	je     42b253 <mbedtls_md_hmac_starts+0x33>
  42b248:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42b24c:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
  42b251:	75 0c                	jne    42b25f <mbedtls_md_hmac_starts+0x3f>
  42b253:	c7 45 ec 00 af ff ff 	movl   $0xffffaf00,-0x14(%rbp)
  42b25a:	e9 e8 01 00 00       	jmpq   42b447 <mbedtls_md_hmac_starts+0x227>
  42b25f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42b263:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  42b267:	48 8b 09             	mov    (%rcx),%rcx
  42b26a:	48 63 49 14          	movslq 0x14(%rcx),%rcx
  42b26e:	48 39 c8             	cmp    %rcx,%rax
  42b271:	0f 86 89 00 00 00    	jbe    42b300 <mbedtls_md_hmac_starts+0xe0>
  42b277:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42b27b:	48 8b 00             	mov    (%rax),%rax
  42b27e:	48 8b 40 18          	mov    0x18(%rax),%rax
  42b282:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  42b286:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  42b28a:	ff d0                	callq  *%rax
  42b28c:	89 45 cc             	mov    %eax,-0x34(%rbp)
  42b28f:	83 f8 00             	cmp    $0x0,%eax
  42b292:	74 05                	je     42b299 <mbedtls_md_hmac_starts+0x79>
  42b294:	e9 80 01 00 00       	jmpq   42b419 <mbedtls_md_hmac_starts+0x1f9>
  42b299:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42b29d:	48 8b 00             	mov    (%rax),%rax
  42b2a0:	48 8b 40 20          	mov    0x20(%rax),%rax
  42b2a4:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  42b2a8:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  42b2ac:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  42b2b0:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  42b2b4:	ff d0                	callq  *%rax
  42b2b6:	89 45 cc             	mov    %eax,-0x34(%rbp)
  42b2b9:	83 f8 00             	cmp    $0x0,%eax
  42b2bc:	74 05                	je     42b2c3 <mbedtls_md_hmac_starts+0xa3>
  42b2be:	e9 56 01 00 00       	jmpq   42b419 <mbedtls_md_hmac_starts+0x1f9>
  42b2c3:	48 8d 75 a0          	lea    -0x60(%rbp),%rsi
  42b2c7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42b2cb:	48 8b 00             	mov    (%rax),%rax
  42b2ce:	48 8b 40 28          	mov    0x28(%rax),%rax
  42b2d2:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  42b2d6:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  42b2da:	ff d0                	callq  *%rax
  42b2dc:	89 45 cc             	mov    %eax,-0x34(%rbp)
  42b2df:	83 f8 00             	cmp    $0x0,%eax
  42b2e2:	74 05                	je     42b2e9 <mbedtls_md_hmac_starts+0xc9>
  42b2e4:	e9 30 01 00 00       	jmpq   42b419 <mbedtls_md_hmac_starts+0x1f9>
  42b2e9:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
  42b2ed:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  42b2f1:	48 8b 09             	mov    (%rcx),%rcx
  42b2f4:	48 63 49 10          	movslq 0x10(%rcx),%rcx
  42b2f8:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  42b2fc:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  42b300:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42b304:	48 8b 40 10          	mov    0x10(%rax),%rax
  42b308:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  42b30c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42b310:	48 8b 40 10          	mov    0x10(%rax),%rax
  42b314:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  42b318:	48 8b 09             	mov    (%rcx),%rcx
  42b31b:	48 63 49 14          	movslq 0x14(%rcx),%rcx
  42b31f:	48 01 c8             	add    %rcx,%rax
  42b322:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  42b326:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
  42b32a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42b32e:	48 8b 00             	mov    (%rax),%rax
  42b331:	48 63 50 14          	movslq 0x14(%rax),%rdx
  42b335:	be 36 00 00 00       	mov    $0x36,%esi
  42b33a:	e8 e1 5c fd ff       	callq  401020 <memset@plt>
  42b33f:	48 8b 7d 90          	mov    -0x70(%rbp),%rdi
  42b343:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42b347:	48 8b 00             	mov    (%rax),%rax
  42b34a:	48 63 50 14          	movslq 0x14(%rax),%rdx
  42b34e:	be 5c 00 00 00       	mov    $0x5c,%esi
  42b353:	e8 c8 5c fd ff       	callq  401020 <memset@plt>
  42b358:	48 c7 45 88 00 00 00 	movq   $0x0,-0x78(%rbp)
  42b35f:	00 
  42b360:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  42b364:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
  42b368:	73 60                	jae    42b3ca <mbedtls_md_hmac_starts+0x1aa>
  42b36a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  42b36e:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
  42b372:	0f b6 14 08          	movzbl (%rax,%rcx,1),%edx
  42b376:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42b37a:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
  42b37e:	0f b6 34 08          	movzbl (%rax,%rcx,1),%esi
  42b382:	31 f2                	xor    %esi,%edx
  42b384:	40 88 d7             	mov    %dl,%dil
  42b387:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  42b38b:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
  42b38f:	40 88 3c 08          	mov    %dil,(%rax,%rcx,1)
  42b393:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  42b397:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
  42b39b:	0f b6 14 08          	movzbl (%rax,%rcx,1),%edx
  42b39f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42b3a3:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
  42b3a7:	0f b6 34 08          	movzbl (%rax,%rcx,1),%esi
  42b3ab:	31 f2                	xor    %esi,%edx
  42b3ad:	40 88 d7             	mov    %dl,%dil
  42b3b0:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  42b3b4:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
  42b3b8:	40 88 3c 08          	mov    %dil,(%rax,%rcx,1)
  42b3bc:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  42b3c0:	48 83 c0 01          	add    $0x1,%rax
  42b3c4:	48 89 45 88          	mov    %rax,-0x78(%rbp)
  42b3c8:	eb 96                	jmp    42b360 <mbedtls_md_hmac_starts+0x140>
  42b3ca:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42b3ce:	48 8b 00             	mov    (%rax),%rax
  42b3d1:	48 8b 40 18          	mov    0x18(%rax),%rax
  42b3d5:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  42b3d9:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  42b3dd:	ff d0                	callq  *%rax
  42b3df:	89 45 cc             	mov    %eax,-0x34(%rbp)
  42b3e2:	83 f8 00             	cmp    $0x0,%eax
  42b3e5:	74 02                	je     42b3e9 <mbedtls_md_hmac_starts+0x1c9>
  42b3e7:	eb 30                	jmp    42b419 <mbedtls_md_hmac_starts+0x1f9>
  42b3e9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42b3ed:	48 8b 00             	mov    (%rax),%rax
  42b3f0:	48 8b 40 20          	mov    0x20(%rax),%rax
  42b3f4:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  42b3f8:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  42b3fc:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
  42b400:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  42b404:	48 8b 09             	mov    (%rcx),%rcx
  42b407:	48 63 51 14          	movslq 0x14(%rcx),%rdx
  42b40b:	ff d0                	callq  *%rax
  42b40d:	89 45 cc             	mov    %eax,-0x34(%rbp)
  42b410:	83 f8 00             	cmp    $0x0,%eax
  42b413:	74 02                	je     42b417 <mbedtls_md_hmac_starts+0x1f7>
  42b415:	eb 02                	jmp    42b419 <mbedtls_md_hmac_starts+0x1f9>
  42b417:	eb 00                	jmp    42b419 <mbedtls_md_hmac_starts+0x1f9>
  42b419:	31 f6                	xor    %esi,%esi
  42b41b:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
  42b41f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42b423:	48 c7 45 f0 20 00 00 	movq   $0x20,-0x10(%rbp)
  42b42a:	00 
  42b42b:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  42b432:	00 
  42b433:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42b437:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  42b43b:	ff d0                	callq  *%rax
  42b43d:	8b 75 cc             	mov    -0x34(%rbp),%esi
  42b440:	89 75 ec             	mov    %esi,-0x14(%rbp)
  42b443:	48 89 45 80          	mov    %rax,-0x80(%rbp)
  42b447:	8b 45 ec             	mov    -0x14(%rbp),%eax
  42b44a:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
  42b450:	e8 01 a5 01 00       	callq  445956 <writeback_cache>
  42b455:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
  42b45b:	48 81 c4 90 00 00 00 	add    $0x90,%rsp
  42b462:	5d                   	pop    %rbp
  42b463:	c3                   	retq   
  42b464:	66 66 66 2e 0f 1f 84 	data16 data16 nopw %cs:0x0(%rax,%rax,1)
  42b46b:	00 00 00 00 00 

000000000042b470 <mbedtls_md_hmac_update>:
  42b470:	55                   	push   %rbp
  42b471:	48 89 e5             	mov    %rsp,%rbp
  42b474:	48 83 ec 30          	sub    $0x30,%rsp
  42b478:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  42b47c:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  42b480:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
  42b484:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  42b489:	74 15                	je     42b4a0 <mbedtls_md_hmac_update+0x30>
  42b48b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42b48f:	48 83 38 00          	cmpq   $0x0,(%rax)
  42b493:	74 0b                	je     42b4a0 <mbedtls_md_hmac_update+0x30>
  42b495:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42b499:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
  42b49e:	75 09                	jne    42b4a9 <mbedtls_md_hmac_update+0x39>
  42b4a0:	c7 45 fc 00 af ff ff 	movl   $0xffffaf00,-0x4(%rbp)
  42b4a7:	eb 20                	jmp    42b4c9 <mbedtls_md_hmac_update+0x59>
  42b4a9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42b4ad:	48 8b 00             	mov    (%rax),%rax
  42b4b0:	48 8b 40 20          	mov    0x20(%rax),%rax
  42b4b4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  42b4b8:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  42b4bc:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  42b4c0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  42b4c4:	ff d0                	callq  *%rax
  42b4c6:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42b4c9:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42b4cc:	89 45 dc             	mov    %eax,-0x24(%rbp)
  42b4cf:	e8 82 a4 01 00       	callq  445956 <writeback_cache>
  42b4d4:	8b 45 dc             	mov    -0x24(%rbp),%eax
  42b4d7:	48 83 c4 30          	add    $0x30,%rsp
  42b4db:	5d                   	pop    %rbp
  42b4dc:	c3                   	retq   
  42b4dd:	0f 1f 00             	nopl   (%rax)

000000000042b4e0 <mbedtls_md_hmac_finish>:
  42b4e0:	55                   	push   %rbp
  42b4e1:	48 89 e5             	mov    %rsp,%rbp
  42b4e4:	48 83 ec 50          	sub    $0x50,%rsp
  42b4e8:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  42b4ec:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  42b4f0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  42b4f5:	74 15                	je     42b50c <mbedtls_md_hmac_finish+0x2c>
  42b4f7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42b4fb:	48 83 38 00          	cmpq   $0x0,(%rax)
  42b4ff:	74 0b                	je     42b50c <mbedtls_md_hmac_finish+0x2c>
  42b501:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42b505:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
  42b50a:	75 0c                	jne    42b518 <mbedtls_md_hmac_finish+0x38>
  42b50c:	c7 45 fc 00 af ff ff 	movl   $0xffffaf00,-0x4(%rbp)
  42b513:	e9 f2 00 00 00       	jmpq   42b60a <mbedtls_md_hmac_finish+0x12a>
  42b518:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
  42b51c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42b520:	48 8b 40 10          	mov    0x10(%rax),%rax
  42b524:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  42b528:	48 8b 09             	mov    (%rcx),%rcx
  42b52b:	48 63 49 14          	movslq 0x14(%rcx),%rcx
  42b52f:	48 01 c8             	add    %rcx,%rax
  42b532:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  42b536:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42b53a:	48 8b 00             	mov    (%rax),%rax
  42b53d:	48 8b 40 28          	mov    0x28(%rax),%rax
  42b541:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  42b545:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  42b549:	ff d0                	callq  *%rax
  42b54b:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  42b54e:	83 f8 00             	cmp    $0x0,%eax
  42b551:	74 0b                	je     42b55e <mbedtls_md_hmac_finish+0x7e>
  42b553:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  42b556:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42b559:	e9 ac 00 00 00       	jmpq   42b60a <mbedtls_md_hmac_finish+0x12a>
  42b55e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42b562:	48 8b 00             	mov    (%rax),%rax
  42b565:	48 8b 40 18          	mov    0x18(%rax),%rax
  42b569:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  42b56d:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  42b571:	ff d0                	callq  *%rax
  42b573:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  42b576:	83 f8 00             	cmp    $0x0,%eax
  42b579:	74 0b                	je     42b586 <mbedtls_md_hmac_finish+0xa6>
  42b57b:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  42b57e:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42b581:	e9 84 00 00 00       	jmpq   42b60a <mbedtls_md_hmac_finish+0x12a>
  42b586:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42b58a:	48 8b 00             	mov    (%rax),%rax
  42b58d:	48 8b 40 20          	mov    0x20(%rax),%rax
  42b591:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  42b595:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  42b599:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  42b59d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  42b5a1:	48 8b 09             	mov    (%rcx),%rcx
  42b5a4:	48 63 51 14          	movslq 0x14(%rcx),%rdx
  42b5a8:	ff d0                	callq  *%rax
  42b5aa:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  42b5ad:	83 f8 00             	cmp    $0x0,%eax
  42b5b0:	74 08                	je     42b5ba <mbedtls_md_hmac_finish+0xda>
  42b5b2:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  42b5b5:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42b5b8:	eb 50                	jmp    42b60a <mbedtls_md_hmac_finish+0x12a>
  42b5ba:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
  42b5be:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42b5c2:	48 8b 00             	mov    (%rax),%rax
  42b5c5:	48 8b 40 20          	mov    0x20(%rax),%rax
  42b5c9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  42b5cd:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  42b5d1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  42b5d5:	48 8b 09             	mov    (%rcx),%rcx
  42b5d8:	48 63 51 10          	movslq 0x10(%rcx),%rdx
  42b5dc:	ff d0                	callq  *%rax
  42b5de:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  42b5e1:	83 f8 00             	cmp    $0x0,%eax
  42b5e4:	74 08                	je     42b5ee <mbedtls_md_hmac_finish+0x10e>
  42b5e6:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  42b5e9:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42b5ec:	eb 1c                	jmp    42b60a <mbedtls_md_hmac_finish+0x12a>
  42b5ee:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42b5f2:	48 8b 00             	mov    (%rax),%rax
  42b5f5:	48 8b 40 28          	mov    0x28(%rax),%rax
  42b5f9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  42b5fd:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  42b601:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  42b605:	ff d0                	callq  *%rax
  42b607:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42b60a:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42b60d:	89 45 b4             	mov    %eax,-0x4c(%rbp)
  42b610:	e8 41 a3 01 00       	callq  445956 <writeback_cache>
  42b615:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  42b618:	48 83 c4 50          	add    $0x50,%rsp
  42b61c:	5d                   	pop    %rbp
  42b61d:	c3                   	retq   
  42b61e:	66 90                	xchg   %ax,%ax

000000000042b620 <mbedtls_md_get_size>:
  42b620:	55                   	push   %rbp
  42b621:	48 89 e5             	mov    %rsp,%rbp
  42b624:	48 83 ec 20          	sub    $0x20,%rsp
  42b628:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  42b62c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  42b631:	75 06                	jne    42b639 <mbedtls_md_get_size+0x19>
  42b633:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
  42b637:	eb 0c                	jmp    42b645 <mbedtls_md_get_size+0x25>
  42b639:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42b63d:	8b 48 10             	mov    0x10(%rax),%ecx
  42b640:	88 ca                	mov    %cl,%dl
  42b642:	88 55 ff             	mov    %dl,-0x1(%rbp)
  42b645:	8a 45 ff             	mov    -0x1(%rbp),%al
  42b648:	88 45 ef             	mov    %al,-0x11(%rbp)
  42b64b:	e8 06 a3 01 00       	callq  445956 <writeback_cache>
  42b650:	8a 45 ef             	mov    -0x11(%rbp),%al
  42b653:	0f b6 c0             	movzbl %al,%eax
  42b656:	48 83 c4 20          	add    $0x20,%rsp
  42b65a:	5d                   	pop    %rbp
  42b65b:	c3                   	retq   
  42b65c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000042b660 <mbedtls_md5_init>:
  42b660:	55                   	push   %rbp
  42b661:	48 89 e5             	mov    %rsp,%rbp
  42b664:	48 83 ec 10          	sub    $0x10,%rsp
  42b668:	31 f6                	xor    %esi,%esi
  42b66a:	b8 58 00 00 00       	mov    $0x58,%eax
  42b66f:	89 c2                	mov    %eax,%edx
  42b671:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42b675:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42b679:	e8 a2 59 fd ff       	callq  401020 <memset@plt>
  42b67e:	e8 d3 a2 01 00       	callq  445956 <writeback_cache>
  42b683:	48 83 c4 10          	add    $0x10,%rsp
  42b687:	5d                   	pop    %rbp
  42b688:	c3                   	retq   
  42b689:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000042b690 <mbedtls_md5_free>:
  42b690:	55                   	push   %rbp
  42b691:	48 89 e5             	mov    %rsp,%rbp
  42b694:	48 83 ec 20          	sub    $0x20,%rsp
  42b698:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42b69c:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  42b6a1:	75 02                	jne    42b6a5 <mbedtls_md5_free+0x15>
  42b6a3:	eb 28                	jmp    42b6cd <mbedtls_md5_free+0x3d>
  42b6a5:	31 f6                	xor    %esi,%esi
  42b6a7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42b6ab:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42b6af:	48 c7 45 f0 58 00 00 	movq   $0x58,-0x10(%rbp)
  42b6b6:	00 
  42b6b7:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  42b6be:	00 
  42b6bf:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42b6c3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  42b6c7:	ff d0                	callq  *%rax
  42b6c9:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  42b6cd:	e8 84 a2 01 00       	callq  445956 <writeback_cache>
  42b6d2:	48 83 c4 20          	add    $0x20,%rsp
  42b6d6:	5d                   	pop    %rbp
  42b6d7:	c3                   	retq   
  42b6d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  42b6df:	00 

000000000042b6e0 <mbedtls_md5_starts_ret>:
  42b6e0:	55                   	push   %rbp
  42b6e1:	48 89 e5             	mov    %rsp,%rbp
  42b6e4:	48 83 ec 10          	sub    $0x10,%rsp
  42b6e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42b6ec:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42b6f0:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
  42b6f6:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42b6fa:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%rdi)
  42b701:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42b705:	c7 47 08 01 23 45 67 	movl   $0x67452301,0x8(%rdi)
  42b70c:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42b710:	c7 47 0c 89 ab cd ef 	movl   $0xefcdab89,0xc(%rdi)
  42b717:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42b71b:	c7 47 10 fe dc ba 98 	movl   $0x98badcfe,0x10(%rdi)
  42b722:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42b726:	c7 47 14 76 54 32 10 	movl   $0x10325476,0x14(%rdi)
  42b72d:	e8 24 a2 01 00       	callq  445956 <writeback_cache>
  42b732:	31 c0                	xor    %eax,%eax
  42b734:	48 83 c4 10          	add    $0x10,%rsp
  42b738:	5d                   	pop    %rbp
  42b739:	c3                   	retq   
  42b73a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000042b740 <mbedtls_internal_md5_process>:
  42b740:	55                   	push   %rbp
  42b741:	48 89 e5             	mov    %rsp,%rbp
  42b744:	48 83 ec 60          	sub    $0x60,%rsp
  42b748:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42b74c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  42b750:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b754:	0f b6 06             	movzbl (%rsi),%eax
  42b757:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b75b:	0f b6 4e 01          	movzbl 0x1(%rsi),%ecx
  42b75f:	c1 e1 08             	shl    $0x8,%ecx
  42b762:	09 c8                	or     %ecx,%eax
  42b764:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b768:	0f b6 4e 02          	movzbl 0x2(%rsi),%ecx
  42b76c:	c1 e1 10             	shl    $0x10,%ecx
  42b76f:	09 c8                	or     %ecx,%eax
  42b771:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b775:	0f b6 4e 03          	movzbl 0x3(%rsi),%ecx
  42b779:	c1 e1 18             	shl    $0x18,%ecx
  42b77c:	09 c8                	or     %ecx,%eax
  42b77e:	89 45 b0             	mov    %eax,-0x50(%rbp)
  42b781:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b785:	0f b6 46 04          	movzbl 0x4(%rsi),%eax
  42b789:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b78d:	0f b6 4e 05          	movzbl 0x5(%rsi),%ecx
  42b791:	c1 e1 08             	shl    $0x8,%ecx
  42b794:	09 c8                	or     %ecx,%eax
  42b796:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b79a:	0f b6 4e 06          	movzbl 0x6(%rsi),%ecx
  42b79e:	c1 e1 10             	shl    $0x10,%ecx
  42b7a1:	09 c8                	or     %ecx,%eax
  42b7a3:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b7a7:	0f b6 4e 07          	movzbl 0x7(%rsi),%ecx
  42b7ab:	c1 e1 18             	shl    $0x18,%ecx
  42b7ae:	09 c8                	or     %ecx,%eax
  42b7b0:	89 45 b4             	mov    %eax,-0x4c(%rbp)
  42b7b3:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b7b7:	0f b6 46 08          	movzbl 0x8(%rsi),%eax
  42b7bb:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b7bf:	0f b6 4e 09          	movzbl 0x9(%rsi),%ecx
  42b7c3:	c1 e1 08             	shl    $0x8,%ecx
  42b7c6:	09 c8                	or     %ecx,%eax
  42b7c8:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b7cc:	0f b6 4e 0a          	movzbl 0xa(%rsi),%ecx
  42b7d0:	c1 e1 10             	shl    $0x10,%ecx
  42b7d3:	09 c8                	or     %ecx,%eax
  42b7d5:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b7d9:	0f b6 4e 0b          	movzbl 0xb(%rsi),%ecx
  42b7dd:	c1 e1 18             	shl    $0x18,%ecx
  42b7e0:	09 c8                	or     %ecx,%eax
  42b7e2:	89 45 b8             	mov    %eax,-0x48(%rbp)
  42b7e5:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b7e9:	0f b6 46 0c          	movzbl 0xc(%rsi),%eax
  42b7ed:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b7f1:	0f b6 4e 0d          	movzbl 0xd(%rsi),%ecx
  42b7f5:	c1 e1 08             	shl    $0x8,%ecx
  42b7f8:	09 c8                	or     %ecx,%eax
  42b7fa:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b7fe:	0f b6 4e 0e          	movzbl 0xe(%rsi),%ecx
  42b802:	c1 e1 10             	shl    $0x10,%ecx
  42b805:	09 c8                	or     %ecx,%eax
  42b807:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b80b:	0f b6 4e 0f          	movzbl 0xf(%rsi),%ecx
  42b80f:	c1 e1 18             	shl    $0x18,%ecx
  42b812:	09 c8                	or     %ecx,%eax
  42b814:	89 45 bc             	mov    %eax,-0x44(%rbp)
  42b817:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b81b:	0f b6 46 10          	movzbl 0x10(%rsi),%eax
  42b81f:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b823:	0f b6 4e 11          	movzbl 0x11(%rsi),%ecx
  42b827:	c1 e1 08             	shl    $0x8,%ecx
  42b82a:	09 c8                	or     %ecx,%eax
  42b82c:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b830:	0f b6 4e 12          	movzbl 0x12(%rsi),%ecx
  42b834:	c1 e1 10             	shl    $0x10,%ecx
  42b837:	09 c8                	or     %ecx,%eax
  42b839:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b83d:	0f b6 4e 13          	movzbl 0x13(%rsi),%ecx
  42b841:	c1 e1 18             	shl    $0x18,%ecx
  42b844:	09 c8                	or     %ecx,%eax
  42b846:	89 45 c0             	mov    %eax,-0x40(%rbp)
  42b849:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b84d:	0f b6 46 14          	movzbl 0x14(%rsi),%eax
  42b851:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b855:	0f b6 4e 15          	movzbl 0x15(%rsi),%ecx
  42b859:	c1 e1 08             	shl    $0x8,%ecx
  42b85c:	09 c8                	or     %ecx,%eax
  42b85e:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b862:	0f b6 4e 16          	movzbl 0x16(%rsi),%ecx
  42b866:	c1 e1 10             	shl    $0x10,%ecx
  42b869:	09 c8                	or     %ecx,%eax
  42b86b:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b86f:	0f b6 4e 17          	movzbl 0x17(%rsi),%ecx
  42b873:	c1 e1 18             	shl    $0x18,%ecx
  42b876:	09 c8                	or     %ecx,%eax
  42b878:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  42b87b:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b87f:	0f b6 46 18          	movzbl 0x18(%rsi),%eax
  42b883:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b887:	0f b6 4e 19          	movzbl 0x19(%rsi),%ecx
  42b88b:	c1 e1 08             	shl    $0x8,%ecx
  42b88e:	09 c8                	or     %ecx,%eax
  42b890:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b894:	0f b6 4e 1a          	movzbl 0x1a(%rsi),%ecx
  42b898:	c1 e1 10             	shl    $0x10,%ecx
  42b89b:	09 c8                	or     %ecx,%eax
  42b89d:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b8a1:	0f b6 4e 1b          	movzbl 0x1b(%rsi),%ecx
  42b8a5:	c1 e1 18             	shl    $0x18,%ecx
  42b8a8:	09 c8                	or     %ecx,%eax
  42b8aa:	89 45 c8             	mov    %eax,-0x38(%rbp)
  42b8ad:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b8b1:	0f b6 46 1c          	movzbl 0x1c(%rsi),%eax
  42b8b5:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b8b9:	0f b6 4e 1d          	movzbl 0x1d(%rsi),%ecx
  42b8bd:	c1 e1 08             	shl    $0x8,%ecx
  42b8c0:	09 c8                	or     %ecx,%eax
  42b8c2:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b8c6:	0f b6 4e 1e          	movzbl 0x1e(%rsi),%ecx
  42b8ca:	c1 e1 10             	shl    $0x10,%ecx
  42b8cd:	09 c8                	or     %ecx,%eax
  42b8cf:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b8d3:	0f b6 4e 1f          	movzbl 0x1f(%rsi),%ecx
  42b8d7:	c1 e1 18             	shl    $0x18,%ecx
  42b8da:	09 c8                	or     %ecx,%eax
  42b8dc:	89 45 cc             	mov    %eax,-0x34(%rbp)
  42b8df:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b8e3:	0f b6 46 20          	movzbl 0x20(%rsi),%eax
  42b8e7:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b8eb:	0f b6 4e 21          	movzbl 0x21(%rsi),%ecx
  42b8ef:	c1 e1 08             	shl    $0x8,%ecx
  42b8f2:	09 c8                	or     %ecx,%eax
  42b8f4:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b8f8:	0f b6 4e 22          	movzbl 0x22(%rsi),%ecx
  42b8fc:	c1 e1 10             	shl    $0x10,%ecx
  42b8ff:	09 c8                	or     %ecx,%eax
  42b901:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b905:	0f b6 4e 23          	movzbl 0x23(%rsi),%ecx
  42b909:	c1 e1 18             	shl    $0x18,%ecx
  42b90c:	09 c8                	or     %ecx,%eax
  42b90e:	89 45 d0             	mov    %eax,-0x30(%rbp)
  42b911:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b915:	0f b6 46 24          	movzbl 0x24(%rsi),%eax
  42b919:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b91d:	0f b6 4e 25          	movzbl 0x25(%rsi),%ecx
  42b921:	c1 e1 08             	shl    $0x8,%ecx
  42b924:	09 c8                	or     %ecx,%eax
  42b926:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b92a:	0f b6 4e 26          	movzbl 0x26(%rsi),%ecx
  42b92e:	c1 e1 10             	shl    $0x10,%ecx
  42b931:	09 c8                	or     %ecx,%eax
  42b933:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b937:	0f b6 4e 27          	movzbl 0x27(%rsi),%ecx
  42b93b:	c1 e1 18             	shl    $0x18,%ecx
  42b93e:	09 c8                	or     %ecx,%eax
  42b940:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  42b943:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b947:	0f b6 46 28          	movzbl 0x28(%rsi),%eax
  42b94b:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b94f:	0f b6 4e 29          	movzbl 0x29(%rsi),%ecx
  42b953:	c1 e1 08             	shl    $0x8,%ecx
  42b956:	09 c8                	or     %ecx,%eax
  42b958:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b95c:	0f b6 4e 2a          	movzbl 0x2a(%rsi),%ecx
  42b960:	c1 e1 10             	shl    $0x10,%ecx
  42b963:	09 c8                	or     %ecx,%eax
  42b965:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b969:	0f b6 4e 2b          	movzbl 0x2b(%rsi),%ecx
  42b96d:	c1 e1 18             	shl    $0x18,%ecx
  42b970:	09 c8                	or     %ecx,%eax
  42b972:	89 45 d8             	mov    %eax,-0x28(%rbp)
  42b975:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b979:	0f b6 46 2c          	movzbl 0x2c(%rsi),%eax
  42b97d:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b981:	0f b6 4e 2d          	movzbl 0x2d(%rsi),%ecx
  42b985:	c1 e1 08             	shl    $0x8,%ecx
  42b988:	09 c8                	or     %ecx,%eax
  42b98a:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b98e:	0f b6 4e 2e          	movzbl 0x2e(%rsi),%ecx
  42b992:	c1 e1 10             	shl    $0x10,%ecx
  42b995:	09 c8                	or     %ecx,%eax
  42b997:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b99b:	0f b6 4e 2f          	movzbl 0x2f(%rsi),%ecx
  42b99f:	c1 e1 18             	shl    $0x18,%ecx
  42b9a2:	09 c8                	or     %ecx,%eax
  42b9a4:	89 45 dc             	mov    %eax,-0x24(%rbp)
  42b9a7:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b9ab:	0f b6 46 30          	movzbl 0x30(%rsi),%eax
  42b9af:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b9b3:	0f b6 4e 31          	movzbl 0x31(%rsi),%ecx
  42b9b7:	c1 e1 08             	shl    $0x8,%ecx
  42b9ba:	09 c8                	or     %ecx,%eax
  42b9bc:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b9c0:	0f b6 4e 32          	movzbl 0x32(%rsi),%ecx
  42b9c4:	c1 e1 10             	shl    $0x10,%ecx
  42b9c7:	09 c8                	or     %ecx,%eax
  42b9c9:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b9cd:	0f b6 4e 33          	movzbl 0x33(%rsi),%ecx
  42b9d1:	c1 e1 18             	shl    $0x18,%ecx
  42b9d4:	09 c8                	or     %ecx,%eax
  42b9d6:	89 45 e0             	mov    %eax,-0x20(%rbp)
  42b9d9:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b9dd:	0f b6 46 34          	movzbl 0x34(%rsi),%eax
  42b9e1:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b9e5:	0f b6 4e 35          	movzbl 0x35(%rsi),%ecx
  42b9e9:	c1 e1 08             	shl    $0x8,%ecx
  42b9ec:	09 c8                	or     %ecx,%eax
  42b9ee:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b9f2:	0f b6 4e 36          	movzbl 0x36(%rsi),%ecx
  42b9f6:	c1 e1 10             	shl    $0x10,%ecx
  42b9f9:	09 c8                	or     %ecx,%eax
  42b9fb:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42b9ff:	0f b6 4e 37          	movzbl 0x37(%rsi),%ecx
  42ba03:	c1 e1 18             	shl    $0x18,%ecx
  42ba06:	09 c8                	or     %ecx,%eax
  42ba08:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  42ba0b:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42ba0f:	0f b6 46 38          	movzbl 0x38(%rsi),%eax
  42ba13:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42ba17:	0f b6 4e 39          	movzbl 0x39(%rsi),%ecx
  42ba1b:	c1 e1 08             	shl    $0x8,%ecx
  42ba1e:	09 c8                	or     %ecx,%eax
  42ba20:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42ba24:	0f b6 4e 3a          	movzbl 0x3a(%rsi),%ecx
  42ba28:	c1 e1 10             	shl    $0x10,%ecx
  42ba2b:	09 c8                	or     %ecx,%eax
  42ba2d:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42ba31:	0f b6 4e 3b          	movzbl 0x3b(%rsi),%ecx
  42ba35:	c1 e1 18             	shl    $0x18,%ecx
  42ba38:	09 c8                	or     %ecx,%eax
  42ba3a:	89 45 e8             	mov    %eax,-0x18(%rbp)
  42ba3d:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42ba41:	0f b6 46 3c          	movzbl 0x3c(%rsi),%eax
  42ba45:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42ba49:	0f b6 4e 3d          	movzbl 0x3d(%rsi),%ecx
  42ba4d:	c1 e1 08             	shl    $0x8,%ecx
  42ba50:	09 c8                	or     %ecx,%eax
  42ba52:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42ba56:	0f b6 4e 3e          	movzbl 0x3e(%rsi),%ecx
  42ba5a:	c1 e1 10             	shl    $0x10,%ecx
  42ba5d:	09 c8                	or     %ecx,%eax
  42ba5f:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42ba63:	0f b6 4e 3f          	movzbl 0x3f(%rsi),%ecx
  42ba67:	c1 e1 18             	shl    $0x18,%ecx
  42ba6a:	09 c8                	or     %ecx,%eax
  42ba6c:	89 45 ec             	mov    %eax,-0x14(%rbp)
  42ba6f:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  42ba73:	8b 46 08             	mov    0x8(%rsi),%eax
  42ba76:	89 45 ac             	mov    %eax,-0x54(%rbp)
  42ba79:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  42ba7d:	8b 46 0c             	mov    0xc(%rsi),%eax
  42ba80:	89 45 a8             	mov    %eax,-0x58(%rbp)
  42ba83:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  42ba87:	8b 46 10             	mov    0x10(%rsi),%eax
  42ba8a:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  42ba8d:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  42ba91:	8b 46 14             	mov    0x14(%rsi),%eax
  42ba94:	89 45 a0             	mov    %eax,-0x60(%rbp)
  42ba97:	8b 45 a0             	mov    -0x60(%rbp),%eax
  42ba9a:	8b 4d a8             	mov    -0x58(%rbp),%ecx
  42ba9d:	8b 55 a4             	mov    -0x5c(%rbp),%edx
  42baa0:	33 55 a0             	xor    -0x60(%rbp),%edx
  42baa3:	21 d1                	and    %edx,%ecx
  42baa5:	31 c8                	xor    %ecx,%eax
  42baa7:	03 45 b0             	add    -0x50(%rbp),%eax
  42baaa:	05 78 a4 6a d7       	add    $0xd76aa478,%eax
  42baaf:	03 45 ac             	add    -0x54(%rbp),%eax
  42bab2:	89 45 ac             	mov    %eax,-0x54(%rbp)
  42bab5:	8b 45 ac             	mov    -0x54(%rbp),%eax
  42bab8:	c1 e0 07             	shl    $0x7,%eax
  42babb:	8b 4d ac             	mov    -0x54(%rbp),%ecx
  42babe:	c1 e9 19             	shr    $0x19,%ecx
  42bac1:	09 c8                	or     %ecx,%eax
  42bac3:	03 45 a8             	add    -0x58(%rbp),%eax
  42bac6:	89 45 ac             	mov    %eax,-0x54(%rbp)
  42bac9:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  42bacc:	8b 4d ac             	mov    -0x54(%rbp),%ecx
  42bacf:	8b 55 a8             	mov    -0x58(%rbp),%edx
  42bad2:	33 55 a4             	xor    -0x5c(%rbp),%edx
  42bad5:	21 d1                	and    %edx,%ecx
  42bad7:	31 c8                	xor    %ecx,%eax
  42bad9:	03 45 b4             	add    -0x4c(%rbp),%eax
  42badc:	05 56 b7 c7 e8       	add    $0xe8c7b756,%eax
  42bae1:	03 45 a0             	add    -0x60(%rbp),%eax
  42bae4:	89 45 a0             	mov    %eax,-0x60(%rbp)
  42bae7:	8b 45 a0             	mov    -0x60(%rbp),%eax
  42baea:	c1 e0 0c             	shl    $0xc,%eax
  42baed:	8b 4d a0             	mov    -0x60(%rbp),%ecx
  42baf0:	c1 e9 14             	shr    $0x14,%ecx
  42baf3:	09 c8                	or     %ecx,%eax
  42baf5:	03 45 ac             	add    -0x54(%rbp),%eax
  42baf8:	89 45 a0             	mov    %eax,-0x60(%rbp)
  42bafb:	8b 45 a8             	mov    -0x58(%rbp),%eax
  42bafe:	8b 4d a0             	mov    -0x60(%rbp),%ecx
  42bb01:	8b 55 ac             	mov    -0x54(%rbp),%edx
  42bb04:	33 55 a8             	xor    -0x58(%rbp),%edx
  42bb07:	21 d1                	and    %edx,%ecx
  42bb09:	31 c8                	xor    %ecx,%eax
  42bb0b:	03 45 b8             	add    -0x48(%rbp),%eax
  42bb0e:	05 db 70 20 24       	add    $0x242070db,%eax
  42bb13:	03 45 a4             	add    -0x5c(%rbp),%eax
  42bb16:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  42bb19:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  42bb1c:	c1 e0 11             	shl    $0x11,%eax
  42bb1f:	8b 4d a4             	mov    -0x5c(%rbp),%ecx
  42bb22:	c1 e9 0f             	shr    $0xf,%ecx
  42bb25:	09 c8                	or     %ecx,%eax
  42bb27:	03 45 a0             	add    -0x60(%rbp),%eax
  42bb2a:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  42bb2d:	8b 45 ac             	mov    -0x54(%rbp),%eax
  42bb30:	8b 4d a4             	mov    -0x5c(%rbp),%ecx
  42bb33:	8b 55 a0             	mov    -0x60(%rbp),%edx
  42bb36:	33 55 ac             	xor    -0x54(%rbp),%edx
  42bb39:	21 d1                	and    %edx,%ecx
  42bb3b:	31 c8                	xor    %ecx,%eax
  42bb3d:	03 45 bc             	add    -0x44(%rbp),%eax
  42bb40:	05 ee ce bd c1       	add    $0xc1bdceee,%eax
  42bb45:	03 45 a8             	add    -0x58(%rbp),%eax
  42bb48:	89 45 a8             	mov    %eax,-0x58(%rbp)
  42bb4b:	8b 45 a8             	mov    -0x58(%rbp),%eax
  42bb4e:	c1 e0 16             	shl    $0x16,%eax
  42bb51:	8b 4d a8             	mov    -0x58(%rbp),%ecx
  42bb54:	c1 e9 0a             	shr    $0xa,%ecx
  42bb57:	09 c8                	or     %ecx,%eax
  42bb59:	03 45 a4             	add    -0x5c(%rbp),%eax
  42bb5c:	89 45 a8             	mov    %eax,-0x58(%rbp)
  42bb5f:	8b 45 a0             	mov    -0x60(%rbp),%eax
  42bb62:	8b 4d a8             	mov    -0x58(%rbp),%ecx
  42bb65:	8b 55 a4             	mov    -0x5c(%rbp),%edx
  42bb68:	33 55 a0             	xor    -0x60(%rbp),%edx
  42bb6b:	21 d1                	and    %edx,%ecx
  42bb6d:	31 c8                	xor    %ecx,%eax
  42bb6f:	03 45 c0             	add    -0x40(%rbp),%eax
  42bb72:	05 af 0f 7c f5       	add    $0xf57c0faf,%eax
  42bb77:	03 45 ac             	add    -0x54(%rbp),%eax
  42bb7a:	89 45 ac             	mov    %eax,-0x54(%rbp)
  42bb7d:	8b 45 ac             	mov    -0x54(%rbp),%eax
  42bb80:	c1 e0 07             	shl    $0x7,%eax
  42bb83:	8b 4d ac             	mov    -0x54(%rbp),%ecx
  42bb86:	c1 e9 19             	shr    $0x19,%ecx
  42bb89:	09 c8                	or     %ecx,%eax
  42bb8b:	03 45 a8             	add    -0x58(%rbp),%eax
  42bb8e:	89 45 ac             	mov    %eax,-0x54(%rbp)
  42bb91:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  42bb94:	8b 4d ac             	mov    -0x54(%rbp),%ecx
  42bb97:	8b 55 a8             	mov    -0x58(%rbp),%edx
  42bb9a:	33 55 a4             	xor    -0x5c(%rbp),%edx
  42bb9d:	21 d1                	and    %edx,%ecx
  42bb9f:	31 c8                	xor    %ecx,%eax
  42bba1:	03 45 c4             	add    -0x3c(%rbp),%eax
  42bba4:	05 2a c6 87 47       	add    $0x4787c62a,%eax
  42bba9:	03 45 a0             	add    -0x60(%rbp),%eax
  42bbac:	89 45 a0             	mov    %eax,-0x60(%rbp)
  42bbaf:	8b 45 a0             	mov    -0x60(%rbp),%eax
  42bbb2:	c1 e0 0c             	shl    $0xc,%eax
  42bbb5:	8b 4d a0             	mov    -0x60(%rbp),%ecx
  42bbb8:	c1 e9 14             	shr    $0x14,%ecx
  42bbbb:	09 c8                	or     %ecx,%eax
  42bbbd:	03 45 ac             	add    -0x54(%rbp),%eax
  42bbc0:	89 45 a0             	mov    %eax,-0x60(%rbp)
  42bbc3:	8b 45 a8             	mov    -0x58(%rbp),%eax
  42bbc6:	8b 4d a0             	mov    -0x60(%rbp),%ecx
  42bbc9:	8b 55 ac             	mov    -0x54(%rbp),%edx
  42bbcc:	33 55 a8             	xor    -0x58(%rbp),%edx
  42bbcf:	21 d1                	and    %edx,%ecx
  42bbd1:	31 c8                	xor    %ecx,%eax
  42bbd3:	03 45 c8             	add    -0x38(%rbp),%eax
  42bbd6:	05 13 46 30 a8       	add    $0xa8304613,%eax
  42bbdb:	03 45 a4             	add    -0x5c(%rbp),%eax
  42bbde:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  42bbe1:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  42bbe4:	c1 e0 11             	shl    $0x11,%eax
  42bbe7:	8b 4d a4             	mov    -0x5c(%rbp),%ecx
  42bbea:	c1 e9 0f             	shr    $0xf,%ecx
  42bbed:	09 c8                	or     %ecx,%eax
  42bbef:	03 45 a0             	add    -0x60(%rbp),%eax
  42bbf2:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  42bbf5:	8b 45 ac             	mov    -0x54(%rbp),%eax
  42bbf8:	8b 4d a4             	mov    -0x5c(%rbp),%ecx
  42bbfb:	8b 55 a0             	mov    -0x60(%rbp),%edx
  42bbfe:	33 55 ac             	xor    -0x54(%rbp),%edx
  42bc01:	21 d1                	and    %edx,%ecx
  42bc03:	31 c8                	xor    %ecx,%eax
  42bc05:	03 45 cc             	add    -0x34(%rbp),%eax
  42bc08:	05 01 95 46 fd       	add    $0xfd469501,%eax
  42bc0d:	03 45 a8             	add    -0x58(%rbp),%eax
  42bc10:	89 45 a8             	mov    %eax,-0x58(%rbp)
  42bc13:	8b 45 a8             	mov    -0x58(%rbp),%eax
  42bc16:	c1 e0 16             	shl    $0x16,%eax
  42bc19:	8b 4d a8             	mov    -0x58(%rbp),%ecx
  42bc1c:	c1 e9 0a             	shr    $0xa,%ecx
  42bc1f:	09 c8                	or     %ecx,%eax
  42bc21:	03 45 a4             	add    -0x5c(%rbp),%eax
  42bc24:	89 45 a8             	mov    %eax,-0x58(%rbp)
  42bc27:	8b 45 a0             	mov    -0x60(%rbp),%eax
  42bc2a:	8b 4d a8             	mov    -0x58(%rbp),%ecx
  42bc2d:	8b 55 a4             	mov    -0x5c(%rbp),%edx
  42bc30:	33 55 a0             	xor    -0x60(%rbp),%edx
  42bc33:	21 d1                	and    %edx,%ecx
  42bc35:	31 c8                	xor    %ecx,%eax
  42bc37:	03 45 d0             	add    -0x30(%rbp),%eax
  42bc3a:	05 d8 98 80 69       	add    $0x698098d8,%eax
  42bc3f:	03 45 ac             	add    -0x54(%rbp),%eax
  42bc42:	89 45 ac             	mov    %eax,-0x54(%rbp)
  42bc45:	8b 45 ac             	mov    -0x54(%rbp),%eax
  42bc48:	c1 e0 07             	shl    $0x7,%eax
  42bc4b:	8b 4d ac             	mov    -0x54(%rbp),%ecx
  42bc4e:	c1 e9 19             	shr    $0x19,%ecx
  42bc51:	09 c8                	or     %ecx,%eax
  42bc53:	03 45 a8             	add    -0x58(%rbp),%eax
  42bc56:	89 45 ac             	mov    %eax,-0x54(%rbp)
  42bc59:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  42bc5c:	8b 4d ac             	mov    -0x54(%rbp),%ecx
  42bc5f:	8b 55 a8             	mov    -0x58(%rbp),%edx
  42bc62:	33 55 a4             	xor    -0x5c(%rbp),%edx
  42bc65:	21 d1                	and    %edx,%ecx
  42bc67:	31 c8                	xor    %ecx,%eax
  42bc69:	03 45 d4             	add    -0x2c(%rbp),%eax
  42bc6c:	05 af f7 44 8b       	add    $0x8b44f7af,%eax
  42bc71:	03 45 a0             	add    -0x60(%rbp),%eax
  42bc74:	89 45 a0             	mov    %eax,-0x60(%rbp)
  42bc77:	8b 45 a0             	mov    -0x60(%rbp),%eax
  42bc7a:	c1 e0 0c             	shl    $0xc,%eax
  42bc7d:	8b 4d a0             	mov    -0x60(%rbp),%ecx
  42bc80:	c1 e9 14             	shr    $0x14,%ecx
  42bc83:	09 c8                	or     %ecx,%eax
  42bc85:	03 45 ac             	add    -0x54(%rbp),%eax
  42bc88:	89 45 a0             	mov    %eax,-0x60(%rbp)
  42bc8b:	8b 45 a8             	mov    -0x58(%rbp),%eax
  42bc8e:	8b 4d a0             	mov    -0x60(%rbp),%ecx
  42bc91:	8b 55 ac             	mov    -0x54(%rbp),%edx
  42bc94:	33 55 a8             	xor    -0x58(%rbp),%edx
  42bc97:	21 d1                	and    %edx,%ecx
  42bc99:	31 c8                	xor    %ecx,%eax
  42bc9b:	03 45 d8             	add    -0x28(%rbp),%eax
  42bc9e:	05 b1 5b ff ff       	add    $0xffff5bb1,%eax
  42bca3:	03 45 a4             	add    -0x5c(%rbp),%eax
  42bca6:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  42bca9:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  42bcac:	c1 e0 11             	shl    $0x11,%eax
  42bcaf:	8b 4d a4             	mov    -0x5c(%rbp),%ecx
  42bcb2:	c1 e9 0f             	shr    $0xf,%ecx
  42bcb5:	09 c8                	or     %ecx,%eax
  42bcb7:	03 45 a0             	add    -0x60(%rbp),%eax
  42bcba:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  42bcbd:	8b 45 ac             	mov    -0x54(%rbp),%eax
  42bcc0:	8b 4d a4             	mov    -0x5c(%rbp),%ecx
  42bcc3:	8b 55 a0             	mov    -0x60(%rbp),%edx
  42bcc6:	33 55 ac             	xor    -0x54(%rbp),%edx
  42bcc9:	21 d1                	and    %edx,%ecx
  42bccb:	31 c8                	xor    %ecx,%eax
  42bccd:	03 45 dc             	add    -0x24(%rbp),%eax
  42bcd0:	05 be d7 5c 89       	add    $0x895cd7be,%eax
  42bcd5:	03 45 a8             	add    -0x58(%rbp),%eax
  42bcd8:	89 45 a8             	mov    %eax,-0x58(%rbp)
  42bcdb:	8b 45 a8             	mov    -0x58(%rbp),%eax
  42bcde:	c1 e0 16             	shl    $0x16,%eax
  42bce1:	8b 4d a8             	mov    -0x58(%rbp),%ecx
  42bce4:	c1 e9 0a             	shr    $0xa,%ecx
  42bce7:	09 c8                	or     %ecx,%eax
  42bce9:	03 45 a4             	add    -0x5c(%rbp),%eax
  42bcec:	89 45 a8             	mov    %eax,-0x58(%rbp)
  42bcef:	8b 45 a0             	mov    -0x60(%rbp),%eax
  42bcf2:	8b 4d a8             	mov    -0x58(%rbp),%ecx
  42bcf5:	8b 55 a4             	mov    -0x5c(%rbp),%edx
  42bcf8:	33 55 a0             	xor    -0x60(%rbp),%edx
  42bcfb:	21 d1                	and    %edx,%ecx
  42bcfd:	31 c8                	xor    %ecx,%eax
  42bcff:	03 45 e0             	add    -0x20(%rbp),%eax
  42bd02:	05 22 11 90 6b       	add    $0x6b901122,%eax
  42bd07:	03 45 ac             	add    -0x54(%rbp),%eax
  42bd0a:	89 45 ac             	mov    %eax,-0x54(%rbp)
  42bd0d:	8b 45 ac             	mov    -0x54(%rbp),%eax
  42bd10:	c1 e0 07             	shl    $0x7,%eax
  42bd13:	8b 4d ac             	mov    -0x54(%rbp),%ecx
  42bd16:	c1 e9 19             	shr    $0x19,%ecx
  42bd19:	09 c8                	or     %ecx,%eax
  42bd1b:	03 45 a8             	add    -0x58(%rbp),%eax
  42bd1e:	89 45 ac             	mov    %eax,-0x54(%rbp)
  42bd21:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  42bd24:	8b 4d ac             	mov    -0x54(%rbp),%ecx
  42bd27:	8b 55 a8             	mov    -0x58(%rbp),%edx
  42bd2a:	33 55 a4             	xor    -0x5c(%rbp),%edx
  42bd2d:	21 d1                	and    %edx,%ecx
  42bd2f:	31 c8                	xor    %ecx,%eax
  42bd31:	03 45 e4             	add    -0x1c(%rbp),%eax
  42bd34:	05 93 71 98 fd       	add    $0xfd987193,%eax
  42bd39:	03 45 a0             	add    -0x60(%rbp),%eax
  42bd3c:	89 45 a0             	mov    %eax,-0x60(%rbp)
  42bd3f:	8b 45 a0             	mov    -0x60(%rbp),%eax
  42bd42:	c1 e0 0c             	shl    $0xc,%eax
  42bd45:	8b 4d a0             	mov    -0x60(%rbp),%ecx
  42bd48:	c1 e9 14             	shr    $0x14,%ecx
  42bd4b:	09 c8                	or     %ecx,%eax
  42bd4d:	03 45 ac             	add    -0x54(%rbp),%eax
  42bd50:	89 45 a0             	mov    %eax,-0x60(%rbp)
  42bd53:	8b 45 a8             	mov    -0x58(%rbp),%eax
  42bd56:	8b 4d a0             	mov    -0x60(%rbp),%ecx
  42bd59:	8b 55 ac             	mov    -0x54(%rbp),%edx
  42bd5c:	33 55 a8             	xor    -0x58(%rbp),%edx
  42bd5f:	21 d1                	and    %edx,%ecx
  42bd61:	31 c8                	xor    %ecx,%eax
  42bd63:	03 45 e8             	add    -0x18(%rbp),%eax
  42bd66:	05 8e 43 79 a6       	add    $0xa679438e,%eax
  42bd6b:	03 45 a4             	add    -0x5c(%rbp),%eax
  42bd6e:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  42bd71:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  42bd74:	c1 e0 11             	shl    $0x11,%eax
  42bd77:	8b 4d a4             	mov    -0x5c(%rbp),%ecx
  42bd7a:	c1 e9 0f             	shr    $0xf,%ecx
  42bd7d:	09 c8                	or     %ecx,%eax
  42bd7f:	03 45 a0             	add    -0x60(%rbp),%eax
  42bd82:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  42bd85:	8b 45 ac             	mov    -0x54(%rbp),%eax
  42bd88:	8b 4d a4             	mov    -0x5c(%rbp),%ecx
  42bd8b:	8b 55 a0             	mov    -0x60(%rbp),%edx
  42bd8e:	33 55 ac             	xor    -0x54(%rbp),%edx
  42bd91:	21 d1                	and    %edx,%ecx
  42bd93:	31 c8                	xor    %ecx,%eax
  42bd95:	03 45 ec             	add    -0x14(%rbp),%eax
  42bd98:	05 21 08 b4 49       	add    $0x49b40821,%eax
  42bd9d:	03 45 a8             	add    -0x58(%rbp),%eax
  42bda0:	89 45 a8             	mov    %eax,-0x58(%rbp)
  42bda3:	8b 45 a8             	mov    -0x58(%rbp),%eax
  42bda6:	c1 e0 16             	shl    $0x16,%eax
  42bda9:	8b 4d a8             	mov    -0x58(%rbp),%ecx
  42bdac:	c1 e9 0a             	shr    $0xa,%ecx
  42bdaf:	09 c8                	or     %ecx,%eax
  42bdb1:	03 45 a4             	add    -0x5c(%rbp),%eax
  42bdb4:	89 45 a8             	mov    %eax,-0x58(%rbp)
  42bdb7:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  42bdba:	8b 4d a0             	mov    -0x60(%rbp),%ecx
  42bdbd:	8b 55 a8             	mov    -0x58(%rbp),%edx
  42bdc0:	33 55 a4             	xor    -0x5c(%rbp),%edx
  42bdc3:	21 d1                	and    %edx,%ecx
  42bdc5:	31 c8                	xor    %ecx,%eax
  42bdc7:	03 45 b4             	add    -0x4c(%rbp),%eax
  42bdca:	05 62 25 1e f6       	add    $0xf61e2562,%eax
  42bdcf:	03 45 ac             	add    -0x54(%rbp),%eax
  42bdd2:	89 45 ac             	mov    %eax,-0x54(%rbp)
  42bdd5:	8b 45 ac             	mov    -0x54(%rbp),%eax
  42bdd8:	c1 e0 05             	shl    $0x5,%eax
  42bddb:	8b 4d ac             	mov    -0x54(%rbp),%ecx
  42bdde:	c1 e9 1b             	shr    $0x1b,%ecx
  42bde1:	09 c8                	or     %ecx,%eax
  42bde3:	03 45 a8             	add    -0x58(%rbp),%eax
  42bde6:	89 45 ac             	mov    %eax,-0x54(%rbp)
  42bde9:	8b 45 a8             	mov    -0x58(%rbp),%eax
  42bdec:	8b 4d a4             	mov    -0x5c(%rbp),%ecx
  42bdef:	8b 55 ac             	mov    -0x54(%rbp),%edx
  42bdf2:	33 55 a8             	xor    -0x58(%rbp),%edx
  42bdf5:	21 d1                	and    %edx,%ecx
  42bdf7:	31 c8                	xor    %ecx,%eax
  42bdf9:	03 45 c8             	add    -0x38(%rbp),%eax
  42bdfc:	05 40 b3 40 c0       	add    $0xc040b340,%eax
  42be01:	03 45 a0             	add    -0x60(%rbp),%eax
  42be04:	89 45 a0             	mov    %eax,-0x60(%rbp)
  42be07:	8b 45 a0             	mov    -0x60(%rbp),%eax
  42be0a:	c1 e0 09             	shl    $0x9,%eax
  42be0d:	8b 4d a0             	mov    -0x60(%rbp),%ecx
  42be10:	c1 e9 17             	shr    $0x17,%ecx
  42be13:	09 c8                	or     %ecx,%eax
  42be15:	03 45 ac             	add    -0x54(%rbp),%eax
  42be18:	89 45 a0             	mov    %eax,-0x60(%rbp)
  42be1b:	8b 45 ac             	mov    -0x54(%rbp),%eax
  42be1e:	8b 4d a8             	mov    -0x58(%rbp),%ecx
  42be21:	8b 55 a0             	mov    -0x60(%rbp),%edx
  42be24:	33 55 ac             	xor    -0x54(%rbp),%edx
  42be27:	21 d1                	and    %edx,%ecx
  42be29:	31 c8                	xor    %ecx,%eax
  42be2b:	03 45 dc             	add    -0x24(%rbp),%eax
  42be2e:	05 51 5a 5e 26       	add    $0x265e5a51,%eax
  42be33:	03 45 a4             	add    -0x5c(%rbp),%eax
  42be36:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  42be39:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  42be3c:	c1 e0 0e             	shl    $0xe,%eax
  42be3f:	8b 4d a4             	mov    -0x5c(%rbp),%ecx
  42be42:	c1 e9 12             	shr    $0x12,%ecx
  42be45:	09 c8                	or     %ecx,%eax
  42be47:	03 45 a0             	add    -0x60(%rbp),%eax
  42be4a:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  42be4d:	8b 45 a0             	mov    -0x60(%rbp),%eax
  42be50:	8b 4d ac             	mov    -0x54(%rbp),%ecx
  42be53:	8b 55 a4             	mov    -0x5c(%rbp),%edx
  42be56:	33 55 a0             	xor    -0x60(%rbp),%edx
  42be59:	21 d1                	and    %edx,%ecx
  42be5b:	31 c8                	xor    %ecx,%eax
  42be5d:	03 45 b0             	add    -0x50(%rbp),%eax
  42be60:	05 aa c7 b6 e9       	add    $0xe9b6c7aa,%eax
  42be65:	03 45 a8             	add    -0x58(%rbp),%eax
  42be68:	89 45 a8             	mov    %eax,-0x58(%rbp)
  42be6b:	8b 45 a8             	mov    -0x58(%rbp),%eax
  42be6e:	c1 e0 14             	shl    $0x14,%eax
  42be71:	8b 4d a8             	mov    -0x58(%rbp),%ecx
  42be74:	c1 e9 0c             	shr    $0xc,%ecx
  42be77:	09 c8                	or     %ecx,%eax
  42be79:	03 45 a4             	add    -0x5c(%rbp),%eax
  42be7c:	89 45 a8             	mov    %eax,-0x58(%rbp)
  42be7f:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  42be82:	8b 4d a0             	mov    -0x60(%rbp),%ecx
  42be85:	8b 55 a8             	mov    -0x58(%rbp),%edx
  42be88:	33 55 a4             	xor    -0x5c(%rbp),%edx
  42be8b:	21 d1                	and    %edx,%ecx
  42be8d:	31 c8                	xor    %ecx,%eax
  42be8f:	03 45 c4             	add    -0x3c(%rbp),%eax
  42be92:	05 5d 10 2f d6       	add    $0xd62f105d,%eax
  42be97:	03 45 ac             	add    -0x54(%rbp),%eax
  42be9a:	89 45 ac             	mov    %eax,-0x54(%rbp)
  42be9d:	8b 45 ac             	mov    -0x54(%rbp),%eax
  42bea0:	c1 e0 05             	shl    $0x5,%eax
  42bea3:	8b 4d ac             	mov    -0x54(%rbp),%ecx
  42bea6:	c1 e9 1b             	shr    $0x1b,%ecx
  42bea9:	09 c8                	or     %ecx,%eax
  42beab:	03 45 a8             	add    -0x58(%rbp),%eax
  42beae:	89 45 ac             	mov    %eax,-0x54(%rbp)
  42beb1:	8b 45 a8             	mov    -0x58(%rbp),%eax
  42beb4:	8b 4d a4             	mov    -0x5c(%rbp),%ecx
  42beb7:	8b 55 ac             	mov    -0x54(%rbp),%edx
  42beba:	33 55 a8             	xor    -0x58(%rbp),%edx
  42bebd:	21 d1                	and    %edx,%ecx
  42bebf:	31 c8                	xor    %ecx,%eax
  42bec1:	03 45 d8             	add    -0x28(%rbp),%eax
  42bec4:	05 53 14 44 02       	add    $0x2441453,%eax
  42bec9:	03 45 a0             	add    -0x60(%rbp),%eax
  42becc:	89 45 a0             	mov    %eax,-0x60(%rbp)
  42becf:	8b 45 a0             	mov    -0x60(%rbp),%eax
  42bed2:	c1 e0 09             	shl    $0x9,%eax
  42bed5:	8b 4d a0             	mov    -0x60(%rbp),%ecx
  42bed8:	c1 e9 17             	shr    $0x17,%ecx
  42bedb:	09 c8                	or     %ecx,%eax
  42bedd:	03 45 ac             	add    -0x54(%rbp),%eax
  42bee0:	89 45 a0             	mov    %eax,-0x60(%rbp)
  42bee3:	8b 45 ac             	mov    -0x54(%rbp),%eax
  42bee6:	8b 4d a8             	mov    -0x58(%rbp),%ecx
  42bee9:	8b 55 a0             	mov    -0x60(%rbp),%edx
  42beec:	33 55 ac             	xor    -0x54(%rbp),%edx
  42beef:	21 d1                	and    %edx,%ecx
  42bef1:	31 c8                	xor    %ecx,%eax
  42bef3:	03 45 ec             	add    -0x14(%rbp),%eax
  42bef6:	05 81 e6 a1 d8       	add    $0xd8a1e681,%eax
  42befb:	03 45 a4             	add    -0x5c(%rbp),%eax
  42befe:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  42bf01:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  42bf04:	c1 e0 0e             	shl    $0xe,%eax
  42bf07:	8b 4d a4             	mov    -0x5c(%rbp),%ecx
  42bf0a:	c1 e9 12             	shr    $0x12,%ecx
  42bf0d:	09 c8                	or     %ecx,%eax
  42bf0f:	03 45 a0             	add    -0x60(%rbp),%eax
  42bf12:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  42bf15:	8b 45 a0             	mov    -0x60(%rbp),%eax
  42bf18:	8b 4d ac             	mov    -0x54(%rbp),%ecx
  42bf1b:	8b 55 a4             	mov    -0x5c(%rbp),%edx
  42bf1e:	33 55 a0             	xor    -0x60(%rbp),%edx
  42bf21:	21 d1                	and    %edx,%ecx
  42bf23:	31 c8                	xor    %ecx,%eax
  42bf25:	03 45 c0             	add    -0x40(%rbp),%eax
  42bf28:	05 c8 fb d3 e7       	add    $0xe7d3fbc8,%eax
  42bf2d:	03 45 a8             	add    -0x58(%rbp),%eax
  42bf30:	89 45 a8             	mov    %eax,-0x58(%rbp)
  42bf33:	8b 45 a8             	mov    -0x58(%rbp),%eax
  42bf36:	c1 e0 14             	shl    $0x14,%eax
  42bf39:	8b 4d a8             	mov    -0x58(%rbp),%ecx
  42bf3c:	c1 e9 0c             	shr    $0xc,%ecx
  42bf3f:	09 c8                	or     %ecx,%eax
  42bf41:	03 45 a4             	add    -0x5c(%rbp),%eax
  42bf44:	89 45 a8             	mov    %eax,-0x58(%rbp)
  42bf47:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  42bf4a:	8b 4d a0             	mov    -0x60(%rbp),%ecx
  42bf4d:	8b 55 a8             	mov    -0x58(%rbp),%edx
  42bf50:	33 55 a4             	xor    -0x5c(%rbp),%edx
  42bf53:	21 d1                	and    %edx,%ecx
  42bf55:	31 c8                	xor    %ecx,%eax
  42bf57:	03 45 d4             	add    -0x2c(%rbp),%eax
  42bf5a:	05 e6 cd e1 21       	add    $0x21e1cde6,%eax
  42bf5f:	03 45 ac             	add    -0x54(%rbp),%eax
  42bf62:	89 45 ac             	mov    %eax,-0x54(%rbp)
  42bf65:	8b 45 ac             	mov    -0x54(%rbp),%eax
  42bf68:	c1 e0 05             	shl    $0x5,%eax
  42bf6b:	8b 4d ac             	mov    -0x54(%rbp),%ecx
  42bf6e:	c1 e9 1b             	shr    $0x1b,%ecx
  42bf71:	09 c8                	or     %ecx,%eax
  42bf73:	03 45 a8             	add    -0x58(%rbp),%eax
  42bf76:	89 45 ac             	mov    %eax,-0x54(%rbp)
  42bf79:	8b 45 a8             	mov    -0x58(%rbp),%eax
  42bf7c:	8b 4d a4             	mov    -0x5c(%rbp),%ecx
  42bf7f:	8b 55 ac             	mov    -0x54(%rbp),%edx
  42bf82:	33 55 a8             	xor    -0x58(%rbp),%edx
  42bf85:	21 d1                	and    %edx,%ecx
  42bf87:	31 c8                	xor    %ecx,%eax
  42bf89:	03 45 e8             	add    -0x18(%rbp),%eax
  42bf8c:	05 d6 07 37 c3       	add    $0xc33707d6,%eax
  42bf91:	03 45 a0             	add    -0x60(%rbp),%eax
  42bf94:	89 45 a0             	mov    %eax,-0x60(%rbp)
  42bf97:	8b 45 a0             	mov    -0x60(%rbp),%eax
  42bf9a:	c1 e0 09             	shl    $0x9,%eax
  42bf9d:	8b 4d a0             	mov    -0x60(%rbp),%ecx
  42bfa0:	c1 e9 17             	shr    $0x17,%ecx
  42bfa3:	09 c8                	or     %ecx,%eax
  42bfa5:	03 45 ac             	add    -0x54(%rbp),%eax
  42bfa8:	89 45 a0             	mov    %eax,-0x60(%rbp)
  42bfab:	8b 45 ac             	mov    -0x54(%rbp),%eax
  42bfae:	8b 4d a8             	mov    -0x58(%rbp),%ecx
  42bfb1:	8b 55 a0             	mov    -0x60(%rbp),%edx
  42bfb4:	33 55 ac             	xor    -0x54(%rbp),%edx
  42bfb7:	21 d1                	and    %edx,%ecx
  42bfb9:	31 c8                	xor    %ecx,%eax
  42bfbb:	03 45 bc             	add    -0x44(%rbp),%eax
  42bfbe:	05 87 0d d5 f4       	add    $0xf4d50d87,%eax
  42bfc3:	03 45 a4             	add    -0x5c(%rbp),%eax
  42bfc6:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  42bfc9:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  42bfcc:	c1 e0 0e             	shl    $0xe,%eax
  42bfcf:	8b 4d a4             	mov    -0x5c(%rbp),%ecx
  42bfd2:	c1 e9 12             	shr    $0x12,%ecx
  42bfd5:	09 c8                	or     %ecx,%eax
  42bfd7:	03 45 a0             	add    -0x60(%rbp),%eax
  42bfda:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  42bfdd:	8b 45 a0             	mov    -0x60(%rbp),%eax
  42bfe0:	8b 4d ac             	mov    -0x54(%rbp),%ecx
  42bfe3:	8b 55 a4             	mov    -0x5c(%rbp),%edx
  42bfe6:	33 55 a0             	xor    -0x60(%rbp),%edx
  42bfe9:	21 d1                	and    %edx,%ecx
  42bfeb:	31 c8                	xor    %ecx,%eax
  42bfed:	03 45 d0             	add    -0x30(%rbp),%eax
  42bff0:	05 ed 14 5a 45       	add    $0x455a14ed,%eax
  42bff5:	03 45 a8             	add    -0x58(%rbp),%eax
  42bff8:	89 45 a8             	mov    %eax,-0x58(%rbp)
  42bffb:	8b 45 a8             	mov    -0x58(%rbp),%eax
  42bffe:	c1 e0 14             	shl    $0x14,%eax
  42c001:	8b 4d a8             	mov    -0x58(%rbp),%ecx
  42c004:	c1 e9 0c             	shr    $0xc,%ecx
  42c007:	09 c8                	or     %ecx,%eax
  42c009:	03 45 a4             	add    -0x5c(%rbp),%eax
  42c00c:	89 45 a8             	mov    %eax,-0x58(%rbp)
  42c00f:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  42c012:	8b 4d a0             	mov    -0x60(%rbp),%ecx
  42c015:	8b 55 a8             	mov    -0x58(%rbp),%edx
  42c018:	33 55 a4             	xor    -0x5c(%rbp),%edx
  42c01b:	21 d1                	and    %edx,%ecx
  42c01d:	31 c8                	xor    %ecx,%eax
  42c01f:	03 45 e4             	add    -0x1c(%rbp),%eax
  42c022:	05 05 e9 e3 a9       	add    $0xa9e3e905,%eax
  42c027:	03 45 ac             	add    -0x54(%rbp),%eax
  42c02a:	89 45 ac             	mov    %eax,-0x54(%rbp)
  42c02d:	8b 45 ac             	mov    -0x54(%rbp),%eax
  42c030:	c1 e0 05             	shl    $0x5,%eax
  42c033:	8b 4d ac             	mov    -0x54(%rbp),%ecx
  42c036:	c1 e9 1b             	shr    $0x1b,%ecx
  42c039:	09 c8                	or     %ecx,%eax
  42c03b:	03 45 a8             	add    -0x58(%rbp),%eax
  42c03e:	89 45 ac             	mov    %eax,-0x54(%rbp)
  42c041:	8b 45 a8             	mov    -0x58(%rbp),%eax
  42c044:	8b 4d a4             	mov    -0x5c(%rbp),%ecx
  42c047:	8b 55 ac             	mov    -0x54(%rbp),%edx
  42c04a:	33 55 a8             	xor    -0x58(%rbp),%edx
  42c04d:	21 d1                	and    %edx,%ecx
  42c04f:	31 c8                	xor    %ecx,%eax
  42c051:	03 45 b8             	add    -0x48(%rbp),%eax
  42c054:	05 f8 a3 ef fc       	add    $0xfcefa3f8,%eax
  42c059:	03 45 a0             	add    -0x60(%rbp),%eax
  42c05c:	89 45 a0             	mov    %eax,-0x60(%rbp)
  42c05f:	8b 45 a0             	mov    -0x60(%rbp),%eax
  42c062:	c1 e0 09             	shl    $0x9,%eax
  42c065:	8b 4d a0             	mov    -0x60(%rbp),%ecx
  42c068:	c1 e9 17             	shr    $0x17,%ecx
  42c06b:	09 c8                	or     %ecx,%eax
  42c06d:	03 45 ac             	add    -0x54(%rbp),%eax
  42c070:	89 45 a0             	mov    %eax,-0x60(%rbp)
  42c073:	8b 45 ac             	mov    -0x54(%rbp),%eax
  42c076:	8b 4d a8             	mov    -0x58(%rbp),%ecx
  42c079:	8b 55 a0             	mov    -0x60(%rbp),%edx
  42c07c:	33 55 ac             	xor    -0x54(%rbp),%edx
  42c07f:	21 d1                	and    %edx,%ecx
  42c081:	31 c8                	xor    %ecx,%eax
  42c083:	03 45 cc             	add    -0x34(%rbp),%eax
  42c086:	05 d9 02 6f 67       	add    $0x676f02d9,%eax
  42c08b:	03 45 a4             	add    -0x5c(%rbp),%eax
  42c08e:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  42c091:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  42c094:	c1 e0 0e             	shl    $0xe,%eax
  42c097:	8b 4d a4             	mov    -0x5c(%rbp),%ecx
  42c09a:	c1 e9 12             	shr    $0x12,%ecx
  42c09d:	09 c8                	or     %ecx,%eax
  42c09f:	03 45 a0             	add    -0x60(%rbp),%eax
  42c0a2:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  42c0a5:	8b 45 a0             	mov    -0x60(%rbp),%eax
  42c0a8:	8b 4d ac             	mov    -0x54(%rbp),%ecx
  42c0ab:	8b 55 a4             	mov    -0x5c(%rbp),%edx
  42c0ae:	33 55 a0             	xor    -0x60(%rbp),%edx
  42c0b1:	21 d1                	and    %edx,%ecx
  42c0b3:	31 c8                	xor    %ecx,%eax
  42c0b5:	03 45 e0             	add    -0x20(%rbp),%eax
  42c0b8:	05 8a 4c 2a 8d       	add    $0x8d2a4c8a,%eax
  42c0bd:	03 45 a8             	add    -0x58(%rbp),%eax
  42c0c0:	89 45 a8             	mov    %eax,-0x58(%rbp)
  42c0c3:	8b 45 a8             	mov    -0x58(%rbp),%eax
  42c0c6:	c1 e0 14             	shl    $0x14,%eax
  42c0c9:	8b 4d a8             	mov    -0x58(%rbp),%ecx
  42c0cc:	c1 e9 0c             	shr    $0xc,%ecx
  42c0cf:	09 c8                	or     %ecx,%eax
  42c0d1:	03 45 a4             	add    -0x5c(%rbp),%eax
  42c0d4:	89 45 a8             	mov    %eax,-0x58(%rbp)
  42c0d7:	8b 45 a8             	mov    -0x58(%rbp),%eax
  42c0da:	33 45 a4             	xor    -0x5c(%rbp),%eax
  42c0dd:	33 45 a0             	xor    -0x60(%rbp),%eax
  42c0e0:	03 45 c4             	add    -0x3c(%rbp),%eax
  42c0e3:	05 42 39 fa ff       	add    $0xfffa3942,%eax
  42c0e8:	03 45 ac             	add    -0x54(%rbp),%eax
  42c0eb:	89 45 ac             	mov    %eax,-0x54(%rbp)
  42c0ee:	8b 45 ac             	mov    -0x54(%rbp),%eax
  42c0f1:	c1 e0 04             	shl    $0x4,%eax
  42c0f4:	8b 4d ac             	mov    -0x54(%rbp),%ecx
  42c0f7:	c1 e9 1c             	shr    $0x1c,%ecx
  42c0fa:	09 c8                	or     %ecx,%eax
  42c0fc:	03 45 a8             	add    -0x58(%rbp),%eax
  42c0ff:	89 45 ac             	mov    %eax,-0x54(%rbp)
  42c102:	8b 45 ac             	mov    -0x54(%rbp),%eax
  42c105:	33 45 a8             	xor    -0x58(%rbp),%eax
  42c108:	33 45 a4             	xor    -0x5c(%rbp),%eax
  42c10b:	03 45 d0             	add    -0x30(%rbp),%eax
  42c10e:	05 81 f6 71 87       	add    $0x8771f681,%eax
  42c113:	03 45 a0             	add    -0x60(%rbp),%eax
  42c116:	89 45 a0             	mov    %eax,-0x60(%rbp)
  42c119:	8b 45 a0             	mov    -0x60(%rbp),%eax
  42c11c:	c1 e0 0b             	shl    $0xb,%eax
  42c11f:	8b 4d a0             	mov    -0x60(%rbp),%ecx
  42c122:	c1 e9 15             	shr    $0x15,%ecx
  42c125:	09 c8                	or     %ecx,%eax
  42c127:	03 45 ac             	add    -0x54(%rbp),%eax
  42c12a:	89 45 a0             	mov    %eax,-0x60(%rbp)
  42c12d:	8b 45 a0             	mov    -0x60(%rbp),%eax
  42c130:	33 45 ac             	xor    -0x54(%rbp),%eax
  42c133:	33 45 a8             	xor    -0x58(%rbp),%eax
  42c136:	03 45 dc             	add    -0x24(%rbp),%eax
  42c139:	05 22 61 9d 6d       	add    $0x6d9d6122,%eax
  42c13e:	03 45 a4             	add    -0x5c(%rbp),%eax
  42c141:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  42c144:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  42c147:	c1 e0 10             	shl    $0x10,%eax
  42c14a:	8b 4d a4             	mov    -0x5c(%rbp),%ecx
  42c14d:	c1 e9 10             	shr    $0x10,%ecx
  42c150:	09 c8                	or     %ecx,%eax
  42c152:	03 45 a0             	add    -0x60(%rbp),%eax
  42c155:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  42c158:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  42c15b:	33 45 a0             	xor    -0x60(%rbp),%eax
  42c15e:	33 45 ac             	xor    -0x54(%rbp),%eax
  42c161:	03 45 e8             	add    -0x18(%rbp),%eax
  42c164:	05 0c 38 e5 fd       	add    $0xfde5380c,%eax
  42c169:	03 45 a8             	add    -0x58(%rbp),%eax
  42c16c:	89 45 a8             	mov    %eax,-0x58(%rbp)
  42c16f:	8b 45 a8             	mov    -0x58(%rbp),%eax
  42c172:	c1 e0 17             	shl    $0x17,%eax
  42c175:	8b 4d a8             	mov    -0x58(%rbp),%ecx
  42c178:	c1 e9 09             	shr    $0x9,%ecx
  42c17b:	09 c8                	or     %ecx,%eax
  42c17d:	03 45 a4             	add    -0x5c(%rbp),%eax
  42c180:	89 45 a8             	mov    %eax,-0x58(%rbp)
  42c183:	8b 45 a8             	mov    -0x58(%rbp),%eax
  42c186:	33 45 a4             	xor    -0x5c(%rbp),%eax
  42c189:	33 45 a0             	xor    -0x60(%rbp),%eax
  42c18c:	03 45 b4             	add    -0x4c(%rbp),%eax
  42c18f:	05 44 ea be a4       	add    $0xa4beea44,%eax
  42c194:	03 45 ac             	add    -0x54(%rbp),%eax
  42c197:	89 45 ac             	mov    %eax,-0x54(%rbp)
  42c19a:	8b 45 ac             	mov    -0x54(%rbp),%eax
  42c19d:	c1 e0 04             	shl    $0x4,%eax
  42c1a0:	8b 4d ac             	mov    -0x54(%rbp),%ecx
  42c1a3:	c1 e9 1c             	shr    $0x1c,%ecx
  42c1a6:	09 c8                	or     %ecx,%eax
  42c1a8:	03 45 a8             	add    -0x58(%rbp),%eax
  42c1ab:	89 45 ac             	mov    %eax,-0x54(%rbp)
  42c1ae:	8b 45 ac             	mov    -0x54(%rbp),%eax
  42c1b1:	33 45 a8             	xor    -0x58(%rbp),%eax
  42c1b4:	33 45 a4             	xor    -0x5c(%rbp),%eax
  42c1b7:	03 45 c0             	add    -0x40(%rbp),%eax
  42c1ba:	05 a9 cf de 4b       	add    $0x4bdecfa9,%eax
  42c1bf:	03 45 a0             	add    -0x60(%rbp),%eax
  42c1c2:	89 45 a0             	mov    %eax,-0x60(%rbp)
  42c1c5:	8b 45 a0             	mov    -0x60(%rbp),%eax
  42c1c8:	c1 e0 0b             	shl    $0xb,%eax
  42c1cb:	8b 4d a0             	mov    -0x60(%rbp),%ecx
  42c1ce:	c1 e9 15             	shr    $0x15,%ecx
  42c1d1:	09 c8                	or     %ecx,%eax
  42c1d3:	03 45 ac             	add    -0x54(%rbp),%eax
  42c1d6:	89 45 a0             	mov    %eax,-0x60(%rbp)
  42c1d9:	8b 45 a0             	mov    -0x60(%rbp),%eax
  42c1dc:	33 45 ac             	xor    -0x54(%rbp),%eax
  42c1df:	33 45 a8             	xor    -0x58(%rbp),%eax
  42c1e2:	03 45 cc             	add    -0x34(%rbp),%eax
  42c1e5:	05 60 4b bb f6       	add    $0xf6bb4b60,%eax
  42c1ea:	03 45 a4             	add    -0x5c(%rbp),%eax
  42c1ed:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  42c1f0:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  42c1f3:	c1 e0 10             	shl    $0x10,%eax
  42c1f6:	8b 4d a4             	mov    -0x5c(%rbp),%ecx
  42c1f9:	c1 e9 10             	shr    $0x10,%ecx
  42c1fc:	09 c8                	or     %ecx,%eax
  42c1fe:	03 45 a0             	add    -0x60(%rbp),%eax
  42c201:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  42c204:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  42c207:	33 45 a0             	xor    -0x60(%rbp),%eax
  42c20a:	33 45 ac             	xor    -0x54(%rbp),%eax
  42c20d:	03 45 d8             	add    -0x28(%rbp),%eax
  42c210:	05 70 bc bf be       	add    $0xbebfbc70,%eax
  42c215:	03 45 a8             	add    -0x58(%rbp),%eax
  42c218:	89 45 a8             	mov    %eax,-0x58(%rbp)
  42c21b:	8b 45 a8             	mov    -0x58(%rbp),%eax
  42c21e:	c1 e0 17             	shl    $0x17,%eax
  42c221:	8b 4d a8             	mov    -0x58(%rbp),%ecx
  42c224:	c1 e9 09             	shr    $0x9,%ecx
  42c227:	09 c8                	or     %ecx,%eax
  42c229:	03 45 a4             	add    -0x5c(%rbp),%eax
  42c22c:	89 45 a8             	mov    %eax,-0x58(%rbp)
  42c22f:	8b 45 a8             	mov    -0x58(%rbp),%eax
  42c232:	33 45 a4             	xor    -0x5c(%rbp),%eax
  42c235:	33 45 a0             	xor    -0x60(%rbp),%eax
  42c238:	03 45 e4             	add    -0x1c(%rbp),%eax
  42c23b:	05 c6 7e 9b 28       	add    $0x289b7ec6,%eax
  42c240:	03 45 ac             	add    -0x54(%rbp),%eax
  42c243:	89 45 ac             	mov    %eax,-0x54(%rbp)
  42c246:	8b 45 ac             	mov    -0x54(%rbp),%eax
  42c249:	c1 e0 04             	shl    $0x4,%eax
  42c24c:	8b 4d ac             	mov    -0x54(%rbp),%ecx
  42c24f:	c1 e9 1c             	shr    $0x1c,%ecx
  42c252:	09 c8                	or     %ecx,%eax
  42c254:	03 45 a8             	add    -0x58(%rbp),%eax
  42c257:	89 45 ac             	mov    %eax,-0x54(%rbp)
  42c25a:	8b 45 ac             	mov    -0x54(%rbp),%eax
  42c25d:	33 45 a8             	xor    -0x58(%rbp),%eax
  42c260:	33 45 a4             	xor    -0x5c(%rbp),%eax
  42c263:	03 45 b0             	add    -0x50(%rbp),%eax
  42c266:	05 fa 27 a1 ea       	add    $0xeaa127fa,%eax
  42c26b:	03 45 a0             	add    -0x60(%rbp),%eax
  42c26e:	89 45 a0             	mov    %eax,-0x60(%rbp)
  42c271:	8b 45 a0             	mov    -0x60(%rbp),%eax
  42c274:	c1 e0 0b             	shl    $0xb,%eax
  42c277:	8b 4d a0             	mov    -0x60(%rbp),%ecx
  42c27a:	c1 e9 15             	shr    $0x15,%ecx
  42c27d:	09 c8                	or     %ecx,%eax
  42c27f:	03 45 ac             	add    -0x54(%rbp),%eax
  42c282:	89 45 a0             	mov    %eax,-0x60(%rbp)
  42c285:	8b 45 a0             	mov    -0x60(%rbp),%eax
  42c288:	33 45 ac             	xor    -0x54(%rbp),%eax
  42c28b:	33 45 a8             	xor    -0x58(%rbp),%eax
  42c28e:	03 45 bc             	add    -0x44(%rbp),%eax
  42c291:	05 85 30 ef d4       	add    $0xd4ef3085,%eax
  42c296:	03 45 a4             	add    -0x5c(%rbp),%eax
  42c299:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  42c29c:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  42c29f:	c1 e0 10             	shl    $0x10,%eax
  42c2a2:	8b 4d a4             	mov    -0x5c(%rbp),%ecx
  42c2a5:	c1 e9 10             	shr    $0x10,%ecx
  42c2a8:	09 c8                	or     %ecx,%eax
  42c2aa:	03 45 a0             	add    -0x60(%rbp),%eax
  42c2ad:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  42c2b0:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  42c2b3:	33 45 a0             	xor    -0x60(%rbp),%eax
  42c2b6:	33 45 ac             	xor    -0x54(%rbp),%eax
  42c2b9:	03 45 c8             	add    -0x38(%rbp),%eax
  42c2bc:	05 05 1d 88 04       	add    $0x4881d05,%eax
  42c2c1:	03 45 a8             	add    -0x58(%rbp),%eax
  42c2c4:	89 45 a8             	mov    %eax,-0x58(%rbp)
  42c2c7:	8b 45 a8             	mov    -0x58(%rbp),%eax
  42c2ca:	c1 e0 17             	shl    $0x17,%eax
  42c2cd:	8b 4d a8             	mov    -0x58(%rbp),%ecx
  42c2d0:	c1 e9 09             	shr    $0x9,%ecx
  42c2d3:	09 c8                	or     %ecx,%eax
  42c2d5:	03 45 a4             	add    -0x5c(%rbp),%eax
  42c2d8:	89 45 a8             	mov    %eax,-0x58(%rbp)
  42c2db:	8b 45 a8             	mov    -0x58(%rbp),%eax
  42c2de:	33 45 a4             	xor    -0x5c(%rbp),%eax
  42c2e1:	33 45 a0             	xor    -0x60(%rbp),%eax
  42c2e4:	03 45 d4             	add    -0x2c(%rbp),%eax
  42c2e7:	05 39 d0 d4 d9       	add    $0xd9d4d039,%eax
  42c2ec:	03 45 ac             	add    -0x54(%rbp),%eax
  42c2ef:	89 45 ac             	mov    %eax,-0x54(%rbp)
  42c2f2:	8b 45 ac             	mov    -0x54(%rbp),%eax
  42c2f5:	c1 e0 04             	shl    $0x4,%eax
  42c2f8:	8b 4d ac             	mov    -0x54(%rbp),%ecx
  42c2fb:	c1 e9 1c             	shr    $0x1c,%ecx
  42c2fe:	09 c8                	or     %ecx,%eax
  42c300:	03 45 a8             	add    -0x58(%rbp),%eax
  42c303:	89 45 ac             	mov    %eax,-0x54(%rbp)
  42c306:	8b 45 ac             	mov    -0x54(%rbp),%eax
  42c309:	33 45 a8             	xor    -0x58(%rbp),%eax
  42c30c:	33 45 a4             	xor    -0x5c(%rbp),%eax
  42c30f:	03 45 e0             	add    -0x20(%rbp),%eax
  42c312:	05 e5 99 db e6       	add    $0xe6db99e5,%eax
  42c317:	03 45 a0             	add    -0x60(%rbp),%eax
  42c31a:	89 45 a0             	mov    %eax,-0x60(%rbp)
  42c31d:	8b 45 a0             	mov    -0x60(%rbp),%eax
  42c320:	c1 e0 0b             	shl    $0xb,%eax
  42c323:	8b 4d a0             	mov    -0x60(%rbp),%ecx
  42c326:	c1 e9 15             	shr    $0x15,%ecx
  42c329:	09 c8                	or     %ecx,%eax
  42c32b:	03 45 ac             	add    -0x54(%rbp),%eax
  42c32e:	89 45 a0             	mov    %eax,-0x60(%rbp)
  42c331:	8b 45 a0             	mov    -0x60(%rbp),%eax
  42c334:	33 45 ac             	xor    -0x54(%rbp),%eax
  42c337:	33 45 a8             	xor    -0x58(%rbp),%eax
  42c33a:	03 45 ec             	add    -0x14(%rbp),%eax
  42c33d:	05 f8 7c a2 1f       	add    $0x1fa27cf8,%eax
  42c342:	03 45 a4             	add    -0x5c(%rbp),%eax
  42c345:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  42c348:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  42c34b:	c1 e0 10             	shl    $0x10,%eax
  42c34e:	8b 4d a4             	mov    -0x5c(%rbp),%ecx
  42c351:	c1 e9 10             	shr    $0x10,%ecx
  42c354:	09 c8                	or     %ecx,%eax
  42c356:	03 45 a0             	add    -0x60(%rbp),%eax
  42c359:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  42c35c:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  42c35f:	33 45 a0             	xor    -0x60(%rbp),%eax
  42c362:	33 45 ac             	xor    -0x54(%rbp),%eax
  42c365:	03 45 b8             	add    -0x48(%rbp),%eax
  42c368:	05 65 56 ac c4       	add    $0xc4ac5665,%eax
  42c36d:	03 45 a8             	add    -0x58(%rbp),%eax
  42c370:	89 45 a8             	mov    %eax,-0x58(%rbp)
  42c373:	8b 45 a8             	mov    -0x58(%rbp),%eax
  42c376:	c1 e0 17             	shl    $0x17,%eax
  42c379:	8b 4d a8             	mov    -0x58(%rbp),%ecx
  42c37c:	c1 e9 09             	shr    $0x9,%ecx
  42c37f:	09 c8                	or     %ecx,%eax
  42c381:	03 45 a4             	add    -0x5c(%rbp),%eax
  42c384:	89 45 a8             	mov    %eax,-0x58(%rbp)
  42c387:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  42c38a:	8b 4d a8             	mov    -0x58(%rbp),%ecx
  42c38d:	8b 55 a0             	mov    -0x60(%rbp),%edx
  42c390:	83 f2 ff             	xor    $0xffffffff,%edx
  42c393:	09 d1                	or     %edx,%ecx
  42c395:	31 c8                	xor    %ecx,%eax
  42c397:	03 45 b0             	add    -0x50(%rbp),%eax
  42c39a:	05 44 22 29 f4       	add    $0xf4292244,%eax
  42c39f:	03 45 ac             	add    -0x54(%rbp),%eax
  42c3a2:	89 45 ac             	mov    %eax,-0x54(%rbp)
  42c3a5:	8b 45 ac             	mov    -0x54(%rbp),%eax
  42c3a8:	c1 e0 06             	shl    $0x6,%eax
  42c3ab:	8b 4d ac             	mov    -0x54(%rbp),%ecx
  42c3ae:	c1 e9 1a             	shr    $0x1a,%ecx
  42c3b1:	09 c8                	or     %ecx,%eax
  42c3b3:	03 45 a8             	add    -0x58(%rbp),%eax
  42c3b6:	89 45 ac             	mov    %eax,-0x54(%rbp)
  42c3b9:	8b 45 a8             	mov    -0x58(%rbp),%eax
  42c3bc:	8b 4d ac             	mov    -0x54(%rbp),%ecx
  42c3bf:	8b 55 a4             	mov    -0x5c(%rbp),%edx
  42c3c2:	83 f2 ff             	xor    $0xffffffff,%edx
  42c3c5:	09 d1                	or     %edx,%ecx
  42c3c7:	31 c8                	xor    %ecx,%eax
  42c3c9:	03 45 cc             	add    -0x34(%rbp),%eax
  42c3cc:	05 97 ff 2a 43       	add    $0x432aff97,%eax
  42c3d1:	03 45 a0             	add    -0x60(%rbp),%eax
  42c3d4:	89 45 a0             	mov    %eax,-0x60(%rbp)
  42c3d7:	8b 45 a0             	mov    -0x60(%rbp),%eax
  42c3da:	c1 e0 0a             	shl    $0xa,%eax
  42c3dd:	8b 4d a0             	mov    -0x60(%rbp),%ecx
  42c3e0:	c1 e9 16             	shr    $0x16,%ecx
  42c3e3:	09 c8                	or     %ecx,%eax
  42c3e5:	03 45 ac             	add    -0x54(%rbp),%eax
  42c3e8:	89 45 a0             	mov    %eax,-0x60(%rbp)
  42c3eb:	8b 45 ac             	mov    -0x54(%rbp),%eax
  42c3ee:	8b 4d a0             	mov    -0x60(%rbp),%ecx
  42c3f1:	8b 55 a8             	mov    -0x58(%rbp),%edx
  42c3f4:	83 f2 ff             	xor    $0xffffffff,%edx
  42c3f7:	09 d1                	or     %edx,%ecx
  42c3f9:	31 c8                	xor    %ecx,%eax
  42c3fb:	03 45 e8             	add    -0x18(%rbp),%eax
  42c3fe:	05 a7 23 94 ab       	add    $0xab9423a7,%eax
  42c403:	03 45 a4             	add    -0x5c(%rbp),%eax
  42c406:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  42c409:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  42c40c:	c1 e0 0f             	shl    $0xf,%eax
  42c40f:	8b 4d a4             	mov    -0x5c(%rbp),%ecx
  42c412:	c1 e9 11             	shr    $0x11,%ecx
  42c415:	09 c8                	or     %ecx,%eax
  42c417:	03 45 a0             	add    -0x60(%rbp),%eax
  42c41a:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  42c41d:	8b 45 a0             	mov    -0x60(%rbp),%eax
  42c420:	8b 4d a4             	mov    -0x5c(%rbp),%ecx
  42c423:	8b 55 ac             	mov    -0x54(%rbp),%edx
  42c426:	83 f2 ff             	xor    $0xffffffff,%edx
  42c429:	09 d1                	or     %edx,%ecx
  42c42b:	31 c8                	xor    %ecx,%eax
  42c42d:	03 45 c4             	add    -0x3c(%rbp),%eax
  42c430:	05 39 a0 93 fc       	add    $0xfc93a039,%eax
  42c435:	03 45 a8             	add    -0x58(%rbp),%eax
  42c438:	89 45 a8             	mov    %eax,-0x58(%rbp)
  42c43b:	8b 45 a8             	mov    -0x58(%rbp),%eax
  42c43e:	c1 e0 15             	shl    $0x15,%eax
  42c441:	8b 4d a8             	mov    -0x58(%rbp),%ecx
  42c444:	c1 e9 0b             	shr    $0xb,%ecx
  42c447:	09 c8                	or     %ecx,%eax
  42c449:	03 45 a4             	add    -0x5c(%rbp),%eax
  42c44c:	89 45 a8             	mov    %eax,-0x58(%rbp)
  42c44f:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  42c452:	8b 4d a8             	mov    -0x58(%rbp),%ecx
  42c455:	8b 55 a0             	mov    -0x60(%rbp),%edx
  42c458:	83 f2 ff             	xor    $0xffffffff,%edx
  42c45b:	09 d1                	or     %edx,%ecx
  42c45d:	31 c8                	xor    %ecx,%eax
  42c45f:	03 45 e0             	add    -0x20(%rbp),%eax
  42c462:	05 c3 59 5b 65       	add    $0x655b59c3,%eax
  42c467:	03 45 ac             	add    -0x54(%rbp),%eax
  42c46a:	89 45 ac             	mov    %eax,-0x54(%rbp)
  42c46d:	8b 45 ac             	mov    -0x54(%rbp),%eax
  42c470:	c1 e0 06             	shl    $0x6,%eax
  42c473:	8b 4d ac             	mov    -0x54(%rbp),%ecx
  42c476:	c1 e9 1a             	shr    $0x1a,%ecx
  42c479:	09 c8                	or     %ecx,%eax
  42c47b:	03 45 a8             	add    -0x58(%rbp),%eax
  42c47e:	89 45 ac             	mov    %eax,-0x54(%rbp)
  42c481:	8b 45 a8             	mov    -0x58(%rbp),%eax
  42c484:	8b 4d ac             	mov    -0x54(%rbp),%ecx
  42c487:	8b 55 a4             	mov    -0x5c(%rbp),%edx
  42c48a:	83 f2 ff             	xor    $0xffffffff,%edx
  42c48d:	09 d1                	or     %edx,%ecx
  42c48f:	31 c8                	xor    %ecx,%eax
  42c491:	03 45 bc             	add    -0x44(%rbp),%eax
  42c494:	05 92 cc 0c 8f       	add    $0x8f0ccc92,%eax
  42c499:	03 45 a0             	add    -0x60(%rbp),%eax
  42c49c:	89 45 a0             	mov    %eax,-0x60(%rbp)
  42c49f:	8b 45 a0             	mov    -0x60(%rbp),%eax
  42c4a2:	c1 e0 0a             	shl    $0xa,%eax
  42c4a5:	8b 4d a0             	mov    -0x60(%rbp),%ecx
  42c4a8:	c1 e9 16             	shr    $0x16,%ecx
  42c4ab:	09 c8                	or     %ecx,%eax
  42c4ad:	03 45 ac             	add    -0x54(%rbp),%eax
  42c4b0:	89 45 a0             	mov    %eax,-0x60(%rbp)
  42c4b3:	8b 45 ac             	mov    -0x54(%rbp),%eax
  42c4b6:	8b 4d a0             	mov    -0x60(%rbp),%ecx
  42c4b9:	8b 55 a8             	mov    -0x58(%rbp),%edx
  42c4bc:	83 f2 ff             	xor    $0xffffffff,%edx
  42c4bf:	09 d1                	or     %edx,%ecx
  42c4c1:	31 c8                	xor    %ecx,%eax
  42c4c3:	03 45 d8             	add    -0x28(%rbp),%eax
  42c4c6:	05 7d f4 ef ff       	add    $0xffeff47d,%eax
  42c4cb:	03 45 a4             	add    -0x5c(%rbp),%eax
  42c4ce:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  42c4d1:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  42c4d4:	c1 e0 0f             	shl    $0xf,%eax
  42c4d7:	8b 4d a4             	mov    -0x5c(%rbp),%ecx
  42c4da:	c1 e9 11             	shr    $0x11,%ecx
  42c4dd:	09 c8                	or     %ecx,%eax
  42c4df:	03 45 a0             	add    -0x60(%rbp),%eax
  42c4e2:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  42c4e5:	8b 45 a0             	mov    -0x60(%rbp),%eax
  42c4e8:	8b 4d a4             	mov    -0x5c(%rbp),%ecx
  42c4eb:	8b 55 ac             	mov    -0x54(%rbp),%edx
  42c4ee:	83 f2 ff             	xor    $0xffffffff,%edx
  42c4f1:	09 d1                	or     %edx,%ecx
  42c4f3:	31 c8                	xor    %ecx,%eax
  42c4f5:	03 45 b4             	add    -0x4c(%rbp),%eax
  42c4f8:	05 d1 5d 84 85       	add    $0x85845dd1,%eax
  42c4fd:	03 45 a8             	add    -0x58(%rbp),%eax
  42c500:	89 45 a8             	mov    %eax,-0x58(%rbp)
  42c503:	8b 45 a8             	mov    -0x58(%rbp),%eax
  42c506:	c1 e0 15             	shl    $0x15,%eax
  42c509:	8b 4d a8             	mov    -0x58(%rbp),%ecx
  42c50c:	c1 e9 0b             	shr    $0xb,%ecx
  42c50f:	09 c8                	or     %ecx,%eax
  42c511:	03 45 a4             	add    -0x5c(%rbp),%eax
  42c514:	89 45 a8             	mov    %eax,-0x58(%rbp)
  42c517:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  42c51a:	8b 4d a8             	mov    -0x58(%rbp),%ecx
  42c51d:	8b 55 a0             	mov    -0x60(%rbp),%edx
  42c520:	83 f2 ff             	xor    $0xffffffff,%edx
  42c523:	09 d1                	or     %edx,%ecx
  42c525:	31 c8                	xor    %ecx,%eax
  42c527:	03 45 d0             	add    -0x30(%rbp),%eax
  42c52a:	05 4f 7e a8 6f       	add    $0x6fa87e4f,%eax
  42c52f:	03 45 ac             	add    -0x54(%rbp),%eax
  42c532:	89 45 ac             	mov    %eax,-0x54(%rbp)
  42c535:	8b 45 ac             	mov    -0x54(%rbp),%eax
  42c538:	c1 e0 06             	shl    $0x6,%eax
  42c53b:	8b 4d ac             	mov    -0x54(%rbp),%ecx
  42c53e:	c1 e9 1a             	shr    $0x1a,%ecx
  42c541:	09 c8                	or     %ecx,%eax
  42c543:	03 45 a8             	add    -0x58(%rbp),%eax
  42c546:	89 45 ac             	mov    %eax,-0x54(%rbp)
  42c549:	8b 45 a8             	mov    -0x58(%rbp),%eax
  42c54c:	8b 4d ac             	mov    -0x54(%rbp),%ecx
  42c54f:	8b 55 a4             	mov    -0x5c(%rbp),%edx
  42c552:	83 f2 ff             	xor    $0xffffffff,%edx
  42c555:	09 d1                	or     %edx,%ecx
  42c557:	31 c8                	xor    %ecx,%eax
  42c559:	03 45 ec             	add    -0x14(%rbp),%eax
  42c55c:	05 e0 e6 2c fe       	add    $0xfe2ce6e0,%eax
  42c561:	03 45 a0             	add    -0x60(%rbp),%eax
  42c564:	89 45 a0             	mov    %eax,-0x60(%rbp)
  42c567:	8b 45 a0             	mov    -0x60(%rbp),%eax
  42c56a:	c1 e0 0a             	shl    $0xa,%eax
  42c56d:	8b 4d a0             	mov    -0x60(%rbp),%ecx
  42c570:	c1 e9 16             	shr    $0x16,%ecx
  42c573:	09 c8                	or     %ecx,%eax
  42c575:	03 45 ac             	add    -0x54(%rbp),%eax
  42c578:	89 45 a0             	mov    %eax,-0x60(%rbp)
  42c57b:	8b 45 ac             	mov    -0x54(%rbp),%eax
  42c57e:	8b 4d a0             	mov    -0x60(%rbp),%ecx
  42c581:	8b 55 a8             	mov    -0x58(%rbp),%edx
  42c584:	83 f2 ff             	xor    $0xffffffff,%edx
  42c587:	09 d1                	or     %edx,%ecx
  42c589:	31 c8                	xor    %ecx,%eax
  42c58b:	03 45 c8             	add    -0x38(%rbp),%eax
  42c58e:	05 14 43 01 a3       	add    $0xa3014314,%eax
  42c593:	03 45 a4             	add    -0x5c(%rbp),%eax
  42c596:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  42c599:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  42c59c:	c1 e0 0f             	shl    $0xf,%eax
  42c59f:	8b 4d a4             	mov    -0x5c(%rbp),%ecx
  42c5a2:	c1 e9 11             	shr    $0x11,%ecx
  42c5a5:	09 c8                	or     %ecx,%eax
  42c5a7:	03 45 a0             	add    -0x60(%rbp),%eax
  42c5aa:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  42c5ad:	8b 45 a0             	mov    -0x60(%rbp),%eax
  42c5b0:	8b 4d a4             	mov    -0x5c(%rbp),%ecx
  42c5b3:	8b 55 ac             	mov    -0x54(%rbp),%edx
  42c5b6:	83 f2 ff             	xor    $0xffffffff,%edx
  42c5b9:	09 d1                	or     %edx,%ecx
  42c5bb:	31 c8                	xor    %ecx,%eax
  42c5bd:	03 45 e4             	add    -0x1c(%rbp),%eax
  42c5c0:	05 a1 11 08 4e       	add    $0x4e0811a1,%eax
  42c5c5:	03 45 a8             	add    -0x58(%rbp),%eax
  42c5c8:	89 45 a8             	mov    %eax,-0x58(%rbp)
  42c5cb:	8b 45 a8             	mov    -0x58(%rbp),%eax
  42c5ce:	c1 e0 15             	shl    $0x15,%eax
  42c5d1:	8b 4d a8             	mov    -0x58(%rbp),%ecx
  42c5d4:	c1 e9 0b             	shr    $0xb,%ecx
  42c5d7:	09 c8                	or     %ecx,%eax
  42c5d9:	03 45 a4             	add    -0x5c(%rbp),%eax
  42c5dc:	89 45 a8             	mov    %eax,-0x58(%rbp)
  42c5df:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  42c5e2:	8b 4d a8             	mov    -0x58(%rbp),%ecx
  42c5e5:	8b 55 a0             	mov    -0x60(%rbp),%edx
  42c5e8:	83 f2 ff             	xor    $0xffffffff,%edx
  42c5eb:	09 d1                	or     %edx,%ecx
  42c5ed:	31 c8                	xor    %ecx,%eax
  42c5ef:	03 45 c0             	add    -0x40(%rbp),%eax
  42c5f2:	05 82 7e 53 f7       	add    $0xf7537e82,%eax
  42c5f7:	03 45 ac             	add    -0x54(%rbp),%eax
  42c5fa:	89 45 ac             	mov    %eax,-0x54(%rbp)
  42c5fd:	8b 45 ac             	mov    -0x54(%rbp),%eax
  42c600:	c1 e0 06             	shl    $0x6,%eax
  42c603:	8b 4d ac             	mov    -0x54(%rbp),%ecx
  42c606:	c1 e9 1a             	shr    $0x1a,%ecx
  42c609:	09 c8                	or     %ecx,%eax
  42c60b:	03 45 a8             	add    -0x58(%rbp),%eax
  42c60e:	89 45 ac             	mov    %eax,-0x54(%rbp)
  42c611:	8b 45 a8             	mov    -0x58(%rbp),%eax
  42c614:	8b 4d ac             	mov    -0x54(%rbp),%ecx
  42c617:	8b 55 a4             	mov    -0x5c(%rbp),%edx
  42c61a:	83 f2 ff             	xor    $0xffffffff,%edx
  42c61d:	09 d1                	or     %edx,%ecx
  42c61f:	31 c8                	xor    %ecx,%eax
  42c621:	03 45 dc             	add    -0x24(%rbp),%eax
  42c624:	05 35 f2 3a bd       	add    $0xbd3af235,%eax
  42c629:	03 45 a0             	add    -0x60(%rbp),%eax
  42c62c:	89 45 a0             	mov    %eax,-0x60(%rbp)
  42c62f:	8b 45 a0             	mov    -0x60(%rbp),%eax
  42c632:	c1 e0 0a             	shl    $0xa,%eax
  42c635:	8b 4d a0             	mov    -0x60(%rbp),%ecx
  42c638:	c1 e9 16             	shr    $0x16,%ecx
  42c63b:	09 c8                	or     %ecx,%eax
  42c63d:	03 45 ac             	add    -0x54(%rbp),%eax
  42c640:	89 45 a0             	mov    %eax,-0x60(%rbp)
  42c643:	8b 45 ac             	mov    -0x54(%rbp),%eax
  42c646:	8b 4d a0             	mov    -0x60(%rbp),%ecx
  42c649:	8b 55 a8             	mov    -0x58(%rbp),%edx
  42c64c:	83 f2 ff             	xor    $0xffffffff,%edx
  42c64f:	09 d1                	or     %edx,%ecx
  42c651:	31 c8                	xor    %ecx,%eax
  42c653:	03 45 b8             	add    -0x48(%rbp),%eax
  42c656:	05 bb d2 d7 2a       	add    $0x2ad7d2bb,%eax
  42c65b:	03 45 a4             	add    -0x5c(%rbp),%eax
  42c65e:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  42c661:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  42c664:	c1 e0 0f             	shl    $0xf,%eax
  42c667:	8b 4d a4             	mov    -0x5c(%rbp),%ecx
  42c66a:	c1 e9 11             	shr    $0x11,%ecx
  42c66d:	09 c8                	or     %ecx,%eax
  42c66f:	03 45 a0             	add    -0x60(%rbp),%eax
  42c672:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  42c675:	8b 45 a0             	mov    -0x60(%rbp),%eax
  42c678:	8b 4d a4             	mov    -0x5c(%rbp),%ecx
  42c67b:	8b 55 ac             	mov    -0x54(%rbp),%edx
  42c67e:	83 f2 ff             	xor    $0xffffffff,%edx
  42c681:	09 d1                	or     %edx,%ecx
  42c683:	31 c8                	xor    %ecx,%eax
  42c685:	03 45 d4             	add    -0x2c(%rbp),%eax
  42c688:	05 91 d3 86 eb       	add    $0xeb86d391,%eax
  42c68d:	03 45 a8             	add    -0x58(%rbp),%eax
  42c690:	89 45 a8             	mov    %eax,-0x58(%rbp)
  42c693:	8b 45 a8             	mov    -0x58(%rbp),%eax
  42c696:	c1 e0 15             	shl    $0x15,%eax
  42c699:	8b 4d a8             	mov    -0x58(%rbp),%ecx
  42c69c:	c1 e9 0b             	shr    $0xb,%ecx
  42c69f:	09 c8                	or     %ecx,%eax
  42c6a1:	03 45 a4             	add    -0x5c(%rbp),%eax
  42c6a4:	89 45 a8             	mov    %eax,-0x58(%rbp)
  42c6a7:	8b 45 ac             	mov    -0x54(%rbp),%eax
  42c6aa:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  42c6ae:	03 46 08             	add    0x8(%rsi),%eax
  42c6b1:	89 46 08             	mov    %eax,0x8(%rsi)
  42c6b4:	8b 45 a8             	mov    -0x58(%rbp),%eax
  42c6b7:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  42c6bb:	03 46 0c             	add    0xc(%rsi),%eax
  42c6be:	89 46 0c             	mov    %eax,0xc(%rsi)
  42c6c1:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  42c6c4:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  42c6c8:	03 46 10             	add    0x10(%rsi),%eax
  42c6cb:	89 46 10             	mov    %eax,0x10(%rsi)
  42c6ce:	8b 45 a0             	mov    -0x60(%rbp),%eax
  42c6d1:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  42c6d5:	03 46 14             	add    0x14(%rsi),%eax
  42c6d8:	89 46 14             	mov    %eax,0x14(%rsi)
  42c6db:	e8 76 92 01 00       	callq  445956 <writeback_cache>
  42c6e0:	31 c0                	xor    %eax,%eax
  42c6e2:	48 83 c4 60          	add    $0x60,%rsp
  42c6e6:	5d                   	pop    %rbp
  42c6e7:	c3                   	retq   
  42c6e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  42c6ef:	00 

000000000042c6f0 <mbedtls_md5_update_ret>:
  42c6f0:	55                   	push   %rbp
  42c6f1:	48 89 e5             	mov    %rsp,%rbp
  42c6f4:	48 83 ec 40          	sub    $0x40,%rsp
  42c6f8:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  42c6fc:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  42c700:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
  42c704:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  42c709:	75 0c                	jne    42c717 <mbedtls_md5_update_ret+0x27>
  42c70b:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  42c712:	e9 36 01 00 00       	jmpq   42c84d <mbedtls_md5_update_ret+0x15d>
  42c717:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42c71b:	8b 08                	mov    (%rax),%ecx
  42c71d:	83 e1 3f             	and    $0x3f,%ecx
  42c720:	89 4d cc             	mov    %ecx,-0x34(%rbp)
  42c723:	b9 40 00 00 00       	mov    $0x40,%ecx
  42c728:	2b 4d cc             	sub    -0x34(%rbp),%ecx
  42c72b:	89 c9                	mov    %ecx,%ecx
  42c72d:	89 c8                	mov    %ecx,%eax
  42c72f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  42c733:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42c737:	89 c1                	mov    %eax,%ecx
  42c739:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42c73d:	03 08                	add    (%rax),%ecx
  42c73f:	89 08                	mov    %ecx,(%rax)
  42c741:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42c745:	8b 08                	mov    (%rax),%ecx
  42c747:	89 08                	mov    %ecx,(%rax)
  42c749:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42c74d:	8b 08                	mov    (%rax),%ecx
  42c74f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42c753:	89 c2                	mov    %eax,%edx
  42c755:	39 d1                	cmp    %edx,%ecx
  42c757:	73 0d                	jae    42c766 <mbedtls_md5_update_ret+0x76>
  42c759:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42c75d:	8b 48 04             	mov    0x4(%rax),%ecx
  42c760:	83 c1 01             	add    $0x1,%ecx
  42c763:	89 48 04             	mov    %ecx,0x4(%rax)
  42c766:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
  42c76a:	74 73                	je     42c7df <mbedtls_md5_update_ret+0xef>
  42c76c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42c770:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
  42c774:	72 69                	jb     42c7df <mbedtls_md5_update_ret+0xef>
  42c776:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42c77a:	48 83 c0 18          	add    $0x18,%rax
  42c77e:	8b 4d cc             	mov    -0x34(%rbp),%ecx
  42c781:	89 ca                	mov    %ecx,%edx
  42c783:	48 01 d0             	add    %rdx,%rax
  42c786:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  42c78a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  42c78e:	48 89 c7             	mov    %rax,%rdi
  42c791:	e8 da 49 fd ff       	callq  401170 <memcpy@plt>
  42c796:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  42c79a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42c79e:	48 83 c0 18          	add    $0x18,%rax
  42c7a2:	48 89 c6             	mov    %rax,%rsi
  42c7a5:	e8 96 ef ff ff       	callq  42b740 <mbedtls_internal_md5_process>
  42c7aa:	89 45 dc             	mov    %eax,-0x24(%rbp)
  42c7ad:	83 f8 00             	cmp    $0x0,%eax
  42c7b0:	74 0b                	je     42c7bd <mbedtls_md5_update_ret+0xcd>
  42c7b2:	8b 45 dc             	mov    -0x24(%rbp),%eax
  42c7b5:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42c7b8:	e9 90 00 00 00       	jmpq   42c84d <mbedtls_md5_update_ret+0x15d>
  42c7bd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42c7c1:	48 03 45 e8          	add    -0x18(%rbp),%rax
  42c7c5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42c7c9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42c7cd:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  42c7d1:	48 29 c1             	sub    %rax,%rcx
  42c7d4:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  42c7d8:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
  42c7df:	eb 00                	jmp    42c7e1 <mbedtls_md5_update_ret+0xf1>
  42c7e1:	48 83 7d e0 40       	cmpq   $0x40,-0x20(%rbp)
  42c7e6:	72 37                	jb     42c81f <mbedtls_md5_update_ret+0x12f>
  42c7e8:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  42c7ec:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  42c7f0:	e8 4b ef ff ff       	callq  42b740 <mbedtls_internal_md5_process>
  42c7f5:	89 45 dc             	mov    %eax,-0x24(%rbp)
  42c7f8:	83 f8 00             	cmp    $0x0,%eax
  42c7fb:	74 08                	je     42c805 <mbedtls_md5_update_ret+0x115>
  42c7fd:	8b 45 dc             	mov    -0x24(%rbp),%eax
  42c800:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42c803:	eb 48                	jmp    42c84d <mbedtls_md5_update_ret+0x15d>
  42c805:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42c809:	48 83 c0 40          	add    $0x40,%rax
  42c80d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42c811:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42c815:	48 83 e8 40          	sub    $0x40,%rax
  42c819:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  42c81d:	eb c2                	jmp    42c7e1 <mbedtls_md5_update_ret+0xf1>
  42c81f:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  42c824:	76 20                	jbe    42c846 <mbedtls_md5_update_ret+0x156>
  42c826:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42c82a:	48 83 c0 18          	add    $0x18,%rax
  42c82e:	8b 4d cc             	mov    -0x34(%rbp),%ecx
  42c831:	89 ca                	mov    %ecx,%edx
  42c833:	48 01 d0             	add    %rdx,%rax
  42c836:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  42c83a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  42c83e:	48 89 c7             	mov    %rax,%rdi
  42c841:	e8 2a 49 fd ff       	callq  401170 <memcpy@plt>
  42c846:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  42c84d:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42c850:	89 45 c8             	mov    %eax,-0x38(%rbp)
  42c853:	e8 fe 90 01 00       	callq  445956 <writeback_cache>
  42c858:	8b 45 c8             	mov    -0x38(%rbp),%eax
  42c85b:	48 83 c4 40          	add    $0x40,%rsp
  42c85f:	5d                   	pop    %rbp
  42c860:	c3                   	retq   
  42c861:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  42c868:	0f 1f 84 00 00 00 00 
  42c86f:	00 

000000000042c870 <mbedtls_md5_finish_ret>:
  42c870:	55                   	push   %rbp
  42c871:	48 89 e5             	mov    %rsp,%rbp
  42c874:	48 83 ec 30          	sub    $0x30,%rsp
  42c878:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  42c87c:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  42c880:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42c884:	8b 06                	mov    (%rsi),%eax
  42c886:	83 e0 3f             	and    $0x3f,%eax
  42c889:	89 45 e0             	mov    %eax,-0x20(%rbp)
  42c88c:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42c890:	8b 45 e0             	mov    -0x20(%rbp),%eax
  42c893:	89 c1                	mov    %eax,%ecx
  42c895:	83 c1 01             	add    $0x1,%ecx
  42c898:	89 4d e0             	mov    %ecx,-0x20(%rbp)
  42c89b:	89 c0                	mov    %eax,%eax
  42c89d:	89 c7                	mov    %eax,%edi
  42c89f:	c6 44 3e 18 80       	movb   $0x80,0x18(%rsi,%rdi,1)
  42c8a4:	83 7d e0 38          	cmpl   $0x38,-0x20(%rbp)
  42c8a8:	77 28                	ja     42c8d2 <mbedtls_md5_finish_ret+0x62>
  42c8aa:	31 f6                	xor    %esi,%esi
  42c8ac:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42c8b0:	48 83 c0 18          	add    $0x18,%rax
  42c8b4:	8b 4d e0             	mov    -0x20(%rbp),%ecx
  42c8b7:	89 ca                	mov    %ecx,%edx
  42c8b9:	48 01 d0             	add    %rdx,%rax
  42c8bc:	b9 38 00 00 00       	mov    $0x38,%ecx
  42c8c1:	2b 4d e0             	sub    -0x20(%rbp),%ecx
  42c8c4:	89 c9                	mov    %ecx,%ecx
  42c8c6:	89 ca                	mov    %ecx,%edx
  42c8c8:	48 89 c7             	mov    %rax,%rdi
  42c8cb:	e8 50 47 fd ff       	callq  401020 <memset@plt>
  42c8d0:	eb 66                	jmp    42c938 <mbedtls_md5_finish_ret+0xc8>
  42c8d2:	31 f6                	xor    %esi,%esi
  42c8d4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42c8d8:	48 83 c0 18          	add    $0x18,%rax
  42c8dc:	8b 4d e0             	mov    -0x20(%rbp),%ecx
  42c8df:	89 ca                	mov    %ecx,%edx
  42c8e1:	48 01 d0             	add    %rdx,%rax
  42c8e4:	b9 40 00 00 00       	mov    $0x40,%ecx
  42c8e9:	2b 4d e0             	sub    -0x20(%rbp),%ecx
  42c8ec:	89 c9                	mov    %ecx,%ecx
  42c8ee:	89 ca                	mov    %ecx,%edx
  42c8f0:	48 89 c7             	mov    %rax,%rdi
  42c8f3:	e8 28 47 fd ff       	callq  401020 <memset@plt>
  42c8f8:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  42c8fc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42c900:	48 83 c0 18          	add    $0x18,%rax
  42c904:	48 89 c6             	mov    %rax,%rsi
  42c907:	e8 34 ee ff ff       	callq  42b740 <mbedtls_internal_md5_process>
  42c90c:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  42c90f:	83 f8 00             	cmp    $0x0,%eax
  42c912:	74 0b                	je     42c91f <mbedtls_md5_finish_ret+0xaf>
  42c914:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  42c917:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42c91a:	e9 a0 02 00 00       	jmpq   42cbbf <mbedtls_md5_finish_ret+0x34f>
  42c91f:	31 f6                	xor    %esi,%esi
  42c921:	b8 38 00 00 00       	mov    $0x38,%eax
  42c926:	89 c2                	mov    %eax,%edx
  42c928:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  42c92c:	48 83 c1 18          	add    $0x18,%rcx
  42c930:	48 89 cf             	mov    %rcx,%rdi
  42c933:	e8 e8 46 fd ff       	callq  401020 <memset@plt>
  42c938:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42c93c:	8b 08                	mov    (%rax),%ecx
  42c93e:	c1 e9 1d             	shr    $0x1d,%ecx
  42c941:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42c945:	8b 50 04             	mov    0x4(%rax),%edx
  42c948:	c1 e2 03             	shl    $0x3,%edx
  42c94b:	09 d1                	or     %edx,%ecx
  42c94d:	89 4d dc             	mov    %ecx,-0x24(%rbp)
  42c950:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42c954:	8b 08                	mov    (%rax),%ecx
  42c956:	c1 e1 03             	shl    $0x3,%ecx
  42c959:	89 4d d8             	mov    %ecx,-0x28(%rbp)
  42c95c:	8b 4d d8             	mov    -0x28(%rbp),%ecx
  42c95f:	81 e1 ff 00 00 00    	and    $0xff,%ecx
  42c965:	40 88 ce             	mov    %cl,%sil
  42c968:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42c96c:	40 88 70 50          	mov    %sil,0x50(%rax)
  42c970:	8b 4d d8             	mov    -0x28(%rbp),%ecx
  42c973:	c1 e9 08             	shr    $0x8,%ecx
  42c976:	81 e1 ff 00 00 00    	and    $0xff,%ecx
  42c97c:	40 88 ce             	mov    %cl,%sil
  42c97f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42c983:	40 88 70 51          	mov    %sil,0x51(%rax)
  42c987:	8b 4d d8             	mov    -0x28(%rbp),%ecx
  42c98a:	c1 e9 10             	shr    $0x10,%ecx
  42c98d:	81 e1 ff 00 00 00    	and    $0xff,%ecx
  42c993:	40 88 ce             	mov    %cl,%sil
  42c996:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42c99a:	40 88 70 52          	mov    %sil,0x52(%rax)
  42c99e:	8b 4d d8             	mov    -0x28(%rbp),%ecx
  42c9a1:	c1 e9 18             	shr    $0x18,%ecx
  42c9a4:	81 e1 ff 00 00 00    	and    $0xff,%ecx
  42c9aa:	40 88 ce             	mov    %cl,%sil
  42c9ad:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42c9b1:	40 88 70 53          	mov    %sil,0x53(%rax)
  42c9b5:	8b 4d dc             	mov    -0x24(%rbp),%ecx
  42c9b8:	81 e1 ff 00 00 00    	and    $0xff,%ecx
  42c9be:	40 88 ce             	mov    %cl,%sil
  42c9c1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42c9c5:	40 88 70 54          	mov    %sil,0x54(%rax)
  42c9c9:	8b 4d dc             	mov    -0x24(%rbp),%ecx
  42c9cc:	c1 e9 08             	shr    $0x8,%ecx
  42c9cf:	81 e1 ff 00 00 00    	and    $0xff,%ecx
  42c9d5:	40 88 ce             	mov    %cl,%sil
  42c9d8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42c9dc:	40 88 70 55          	mov    %sil,0x55(%rax)
  42c9e0:	8b 4d dc             	mov    -0x24(%rbp),%ecx
  42c9e3:	c1 e9 10             	shr    $0x10,%ecx
  42c9e6:	81 e1 ff 00 00 00    	and    $0xff,%ecx
  42c9ec:	40 88 ce             	mov    %cl,%sil
  42c9ef:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42c9f3:	40 88 70 56          	mov    %sil,0x56(%rax)
  42c9f7:	8b 4d dc             	mov    -0x24(%rbp),%ecx
  42c9fa:	c1 e9 18             	shr    $0x18,%ecx
  42c9fd:	81 e1 ff 00 00 00    	and    $0xff,%ecx
  42ca03:	40 88 ce             	mov    %cl,%sil
  42ca06:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42ca0a:	40 88 70 57          	mov    %sil,0x57(%rax)
  42ca0e:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  42ca12:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42ca16:	48 83 c0 18          	add    $0x18,%rax
  42ca1a:	48 89 c6             	mov    %rax,%rsi
  42ca1d:	e8 1e ed ff ff       	callq  42b740 <mbedtls_internal_md5_process>
  42ca22:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  42ca25:	83 f8 00             	cmp    $0x0,%eax
  42ca28:	74 0b                	je     42ca35 <mbedtls_md5_finish_ret+0x1c5>
  42ca2a:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  42ca2d:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42ca30:	e9 8a 01 00 00       	jmpq   42cbbf <mbedtls_md5_finish_ret+0x34f>
  42ca35:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42ca39:	8b 48 08             	mov    0x8(%rax),%ecx
  42ca3c:	81 e1 ff 00 00 00    	and    $0xff,%ecx
  42ca42:	88 ca                	mov    %cl,%dl
  42ca44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ca48:	88 10                	mov    %dl,(%rax)
  42ca4a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42ca4e:	8b 48 08             	mov    0x8(%rax),%ecx
  42ca51:	c1 e9 08             	shr    $0x8,%ecx
  42ca54:	81 e1 ff 00 00 00    	and    $0xff,%ecx
  42ca5a:	88 ca                	mov    %cl,%dl
  42ca5c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ca60:	88 50 01             	mov    %dl,0x1(%rax)
  42ca63:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42ca67:	8b 48 08             	mov    0x8(%rax),%ecx
  42ca6a:	c1 e9 10             	shr    $0x10,%ecx
  42ca6d:	81 e1 ff 00 00 00    	and    $0xff,%ecx
  42ca73:	88 ca                	mov    %cl,%dl
  42ca75:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ca79:	88 50 02             	mov    %dl,0x2(%rax)
  42ca7c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42ca80:	8b 48 08             	mov    0x8(%rax),%ecx
  42ca83:	c1 e9 18             	shr    $0x18,%ecx
  42ca86:	81 e1 ff 00 00 00    	and    $0xff,%ecx
  42ca8c:	88 ca                	mov    %cl,%dl
  42ca8e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ca92:	88 50 03             	mov    %dl,0x3(%rax)
  42ca95:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42ca99:	8b 48 0c             	mov    0xc(%rax),%ecx
  42ca9c:	81 e1 ff 00 00 00    	and    $0xff,%ecx
  42caa2:	88 ca                	mov    %cl,%dl
  42caa4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42caa8:	88 50 04             	mov    %dl,0x4(%rax)
  42caab:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42caaf:	8b 48 0c             	mov    0xc(%rax),%ecx
  42cab2:	c1 e9 08             	shr    $0x8,%ecx
  42cab5:	81 e1 ff 00 00 00    	and    $0xff,%ecx
  42cabb:	88 ca                	mov    %cl,%dl
  42cabd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42cac1:	88 50 05             	mov    %dl,0x5(%rax)
  42cac4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42cac8:	8b 48 0c             	mov    0xc(%rax),%ecx
  42cacb:	c1 e9 10             	shr    $0x10,%ecx
  42cace:	81 e1 ff 00 00 00    	and    $0xff,%ecx
  42cad4:	88 ca                	mov    %cl,%dl
  42cad6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42cada:	88 50 06             	mov    %dl,0x6(%rax)
  42cadd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42cae1:	8b 48 0c             	mov    0xc(%rax),%ecx
  42cae4:	c1 e9 18             	shr    $0x18,%ecx
  42cae7:	81 e1 ff 00 00 00    	and    $0xff,%ecx
  42caed:	88 ca                	mov    %cl,%dl
  42caef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42caf3:	88 50 07             	mov    %dl,0x7(%rax)
  42caf6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42cafa:	8b 48 10             	mov    0x10(%rax),%ecx
  42cafd:	81 e1 ff 00 00 00    	and    $0xff,%ecx
  42cb03:	88 ca                	mov    %cl,%dl
  42cb05:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42cb09:	88 50 08             	mov    %dl,0x8(%rax)
  42cb0c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42cb10:	8b 48 10             	mov    0x10(%rax),%ecx
  42cb13:	c1 e9 08             	shr    $0x8,%ecx
  42cb16:	81 e1 ff 00 00 00    	and    $0xff,%ecx
  42cb1c:	88 ca                	mov    %cl,%dl
  42cb1e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42cb22:	88 50 09             	mov    %dl,0x9(%rax)
  42cb25:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42cb29:	8b 48 10             	mov    0x10(%rax),%ecx
  42cb2c:	c1 e9 10             	shr    $0x10,%ecx
  42cb2f:	81 e1 ff 00 00 00    	and    $0xff,%ecx
  42cb35:	88 ca                	mov    %cl,%dl
  42cb37:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42cb3b:	88 50 0a             	mov    %dl,0xa(%rax)
  42cb3e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42cb42:	8b 48 10             	mov    0x10(%rax),%ecx
  42cb45:	c1 e9 18             	shr    $0x18,%ecx
  42cb48:	81 e1 ff 00 00 00    	and    $0xff,%ecx
  42cb4e:	88 ca                	mov    %cl,%dl
  42cb50:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42cb54:	88 50 0b             	mov    %dl,0xb(%rax)
  42cb57:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42cb5b:	8b 48 14             	mov    0x14(%rax),%ecx
  42cb5e:	81 e1 ff 00 00 00    	and    $0xff,%ecx
  42cb64:	88 ca                	mov    %cl,%dl
  42cb66:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42cb6a:	88 50 0c             	mov    %dl,0xc(%rax)
  42cb6d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42cb71:	8b 48 14             	mov    0x14(%rax),%ecx
  42cb74:	c1 e9 08             	shr    $0x8,%ecx
  42cb77:	81 e1 ff 00 00 00    	and    $0xff,%ecx
  42cb7d:	88 ca                	mov    %cl,%dl
  42cb7f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42cb83:	88 50 0d             	mov    %dl,0xd(%rax)
  42cb86:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42cb8a:	8b 48 14             	mov    0x14(%rax),%ecx
  42cb8d:	c1 e9 10             	shr    $0x10,%ecx
  42cb90:	81 e1 ff 00 00 00    	and    $0xff,%ecx
  42cb96:	88 ca                	mov    %cl,%dl
  42cb98:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42cb9c:	88 50 0e             	mov    %dl,0xe(%rax)
  42cb9f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42cba3:	8b 48 14             	mov    0x14(%rax),%ecx
  42cba6:	c1 e9 18             	shr    $0x18,%ecx
  42cba9:	81 e1 ff 00 00 00    	and    $0xff,%ecx
  42cbaf:	88 ca                	mov    %cl,%dl
  42cbb1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42cbb5:	88 50 0f             	mov    %dl,0xf(%rax)
  42cbb8:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  42cbbf:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42cbc2:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  42cbc5:	e8 8c 8d 01 00       	callq  445956 <writeback_cache>
  42cbca:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  42cbcd:	48 83 c4 30          	add    $0x30,%rsp
  42cbd1:	5d                   	pop    %rbp
  42cbd2:	c3                   	retq   
  42cbd3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  42cbda:	84 00 00 00 00 00 

000000000042cbe0 <mbedtls_md5_ret>:
  42cbe0:	55                   	push   %rbp
  42cbe1:	48 89 e5             	mov    %rsp,%rbp
  42cbe4:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
  42cbeb:	31 c0                	xor    %eax,%eax
  42cbed:	b9 58 00 00 00       	mov    $0x58,%ecx
  42cbf2:	41 89 c8             	mov    %ecx,%r8d
  42cbf5:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
  42cbf9:	48 89 75 c8          	mov    %rsi,-0x38(%rbp)
  42cbfd:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
  42cc01:	48 8d 95 60 ff ff ff 	lea    -0xa0(%rbp),%rdx
  42cc08:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  42cc0c:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  42cc10:	48 89 f7             	mov    %rsi,%rdi
  42cc13:	89 c6                	mov    %eax,%esi
  42cc15:	48 89 95 58 ff ff ff 	mov    %rdx,-0xa8(%rbp)
  42cc1c:	4c 89 c2             	mov    %r8,%rdx
  42cc1f:	e8 fc 43 fd ff       	callq  401020 <memset@plt>
  42cc24:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  42cc2b:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
  42cc2f:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42cc33:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
  42cc39:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42cc3d:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%rdi)
  42cc44:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42cc48:	c7 47 08 01 23 45 67 	movl   $0x67452301,0x8(%rdi)
  42cc4f:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42cc53:	c7 47 0c 89 ab cd ef 	movl   $0xefcdab89,0xc(%rdi)
  42cc5a:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42cc5e:	c7 47 10 fe dc ba 98 	movl   $0x98badcfe,0x10(%rdi)
  42cc65:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42cc69:	c7 47 14 76 54 32 10 	movl   $0x10325476,0x14(%rdi)
  42cc70:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%rbp)
  42cc77:	eb 02                	jmp    42cc7b <mbedtls_md5_ret+0x9b>
  42cc79:	eb 3a                	jmp    42ccb5 <mbedtls_md5_ret+0xd5>
  42cc7b:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  42cc7f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  42cc83:	48 8d bd 60 ff ff ff 	lea    -0xa0(%rbp),%rdi
  42cc8a:	e8 61 fa ff ff       	callq  42c6f0 <mbedtls_md5_update_ret>
  42cc8f:	89 45 bc             	mov    %eax,-0x44(%rbp)
  42cc92:	83 f8 00             	cmp    $0x0,%eax
  42cc95:	74 02                	je     42cc99 <mbedtls_md5_ret+0xb9>
  42cc97:	eb 1c                	jmp    42ccb5 <mbedtls_md5_ret+0xd5>
  42cc99:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
  42cc9d:	48 8d bd 60 ff ff ff 	lea    -0xa0(%rbp),%rdi
  42cca4:	e8 c7 fb ff ff       	callq  42c870 <mbedtls_md5_finish_ret>
  42cca9:	89 45 bc             	mov    %eax,-0x44(%rbp)
  42ccac:	83 f8 00             	cmp    $0x0,%eax
  42ccaf:	74 02                	je     42ccb3 <mbedtls_md5_ret+0xd3>
  42ccb1:	eb 02                	jmp    42ccb5 <mbedtls_md5_ret+0xd5>
  42ccb3:	eb 00                	jmp    42ccb5 <mbedtls_md5_ret+0xd5>
  42ccb5:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
  42ccbc:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  42ccc0:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  42ccc5:	75 02                	jne    42ccc9 <mbedtls_md5_ret+0xe9>
  42ccc7:	eb 2b                	jmp    42ccf4 <mbedtls_md5_ret+0x114>
  42ccc9:	31 f6                	xor    %esi,%esi
  42cccb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42cccf:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42ccd3:	48 c7 45 e8 58 00 00 	movq   $0x58,-0x18(%rbp)
  42ccda:	00 
  42ccdb:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  42cce2:	00 
  42cce3:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  42cce7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  42cceb:	ff d0                	callq  *%rax
  42cced:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
  42ccf4:	8b 45 bc             	mov    -0x44(%rbp),%eax
  42ccf7:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
  42ccfd:	e8 54 8c 01 00       	callq  445956 <writeback_cache>
  42cd02:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
  42cd08:	48 81 c4 c0 00 00 00 	add    $0xc0,%rsp
  42cd0f:	5d                   	pop    %rbp
  42cd10:	c3                   	retq   
  42cd11:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  42cd18:	0f 1f 84 00 00 00 00 
  42cd1f:	00 

000000000042cd20 <md5_starts_wrap>:
  42cd20:	55                   	push   %rbp
  42cd21:	48 89 e5             	mov    %rsp,%rbp
  42cd24:	48 83 ec 10          	sub    $0x10,%rsp
  42cd28:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  42cd2c:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  42cd30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42cd34:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42cd38:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
  42cd3e:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42cd42:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%rdi)
  42cd49:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42cd4d:	c7 47 08 01 23 45 67 	movl   $0x67452301,0x8(%rdi)
  42cd54:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42cd58:	c7 47 0c 89 ab cd ef 	movl   $0xefcdab89,0xc(%rdi)
  42cd5f:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42cd63:	c7 47 10 fe dc ba 98 	movl   $0x98badcfe,0x10(%rdi)
  42cd6a:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42cd6e:	c7 47 14 76 54 32 10 	movl   $0x10325476,0x14(%rdi)
  42cd75:	e8 dc 8b 01 00       	callq  445956 <writeback_cache>
  42cd7a:	31 c0                	xor    %eax,%eax
  42cd7c:	48 83 c4 10          	add    $0x10,%rsp
  42cd80:	5d                   	pop    %rbp
  42cd81:	c3                   	retq   
  42cd82:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  42cd89:	1f 84 00 00 00 00 00 

000000000042cd90 <md5_update_wrap>:
  42cd90:	55                   	push   %rbp
  42cd91:	48 89 e5             	mov    %rsp,%rbp
  42cd94:	48 83 ec 30          	sub    $0x30,%rsp
  42cd98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42cd9c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  42cda0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  42cda4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  42cda8:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42cdac:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  42cdb0:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
  42cdb4:	48 89 d7             	mov    %rdx,%rdi
  42cdb7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  42cdbb:	e8 30 f9 ff ff       	callq  42c6f0 <mbedtls_md5_update_ret>
  42cdc0:	89 45 dc             	mov    %eax,-0x24(%rbp)
  42cdc3:	e8 8e 8b 01 00       	callq  445956 <writeback_cache>
  42cdc8:	8b 45 dc             	mov    -0x24(%rbp),%eax
  42cdcb:	48 83 c4 30          	add    $0x30,%rsp
  42cdcf:	5d                   	pop    %rbp
  42cdd0:	c3                   	retq   
  42cdd1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  42cdd8:	0f 1f 84 00 00 00 00 
  42cddf:	00 

000000000042cde0 <md5_finish_wrap>:
  42cde0:	55                   	push   %rbp
  42cde1:	48 89 e5             	mov    %rsp,%rbp
  42cde4:	48 83 ec 20          	sub    $0x20,%rsp
  42cde8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42cdec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  42cdf0:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  42cdf4:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  42cdf8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42cdfc:	48 89 f7             	mov    %rsi,%rdi
  42cdff:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  42ce03:	e8 68 fa ff ff       	callq  42c870 <mbedtls_md5_finish_ret>
  42ce08:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  42ce0b:	e8 46 8b 01 00       	callq  445956 <writeback_cache>
  42ce10:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  42ce13:	48 83 c4 20          	add    $0x20,%rsp
  42ce17:	5d                   	pop    %rbp
  42ce18:	c3                   	retq   
  42ce19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000042ce20 <md5_ctx_alloc>:
  42ce20:	55                   	push   %rbp
  42ce21:	48 89 e5             	mov    %rsp,%rbp
  42ce24:	48 83 ec 20          	sub    $0x20,%rsp
  42ce28:	b8 01 00 00 00       	mov    $0x1,%eax
  42ce2d:	89 c7                	mov    %eax,%edi
  42ce2f:	b8 58 00 00 00       	mov    $0x58,%eax
  42ce34:	89 c6                	mov    %eax,%esi
  42ce36:	e8 af 99 01 00       	callq  4467ea <aes_calloc>
  42ce3b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42ce3f:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  42ce44:	74 1d                	je     42ce63 <md5_ctx_alloc+0x43>
  42ce46:	31 f6                	xor    %esi,%esi
  42ce48:	b8 58 00 00 00       	mov    $0x58,%eax
  42ce4d:	89 c2                	mov    %eax,%edx
  42ce4f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  42ce53:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
  42ce57:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  42ce5b:	48 89 cf             	mov    %rcx,%rdi
  42ce5e:	e8 bd 41 fd ff       	callq  401020 <memset@plt>
  42ce63:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42ce67:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42ce6b:	e8 e6 8a 01 00       	callq  445956 <writeback_cache>
  42ce70:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ce74:	48 83 c4 20          	add    $0x20,%rsp
  42ce78:	5d                   	pop    %rbp
  42ce79:	c3                   	retq   
  42ce7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000042ce80 <md5_ctx_free>:
  42ce80:	55                   	push   %rbp
  42ce81:	48 89 e5             	mov    %rsp,%rbp
  42ce84:	48 83 ec 30          	sub    $0x30,%rsp
  42ce88:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
  42ce8c:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  42ce90:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42ce94:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  42ce99:	75 02                	jne    42ce9d <md5_ctx_free+0x1d>
  42ce9b:	eb 28                	jmp    42cec5 <md5_ctx_free+0x45>
  42ce9d:	31 f6                	xor    %esi,%esi
  42ce9f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42cea3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42cea7:	48 c7 45 f0 58 00 00 	movq   $0x58,-0x10(%rbp)
  42ceae:	00 
  42ceaf:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  42ceb6:	00 
  42ceb7:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42cebb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  42cebf:	ff d0                	callq  *%rax
  42cec1:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  42cec5:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  42cec9:	e8 12 42 fd ff       	callq  4010e0 <free@plt>
  42cece:	e8 83 8a 01 00       	callq  445956 <writeback_cache>
  42ced3:	48 83 c4 30          	add    $0x30,%rsp
  42ced7:	5d                   	pop    %rbp
  42ced8:	c3                   	retq   
  42ced9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000042cee0 <md5_clone_wrap>:
  42cee0:	55                   	push   %rbp
  42cee1:	48 89 e5             	mov    %rsp,%rbp
  42cee4:	48 83 ec 30          	sub    $0x30,%rsp
  42cee8:	b8 58 00 00 00       	mov    $0x58,%eax
  42ceed:	89 c2                	mov    %eax,%edx
  42ceef:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42cef3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  42cef7:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  42cefb:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  42ceff:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)
  42cf03:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  42cf07:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  42cf0b:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  42cf0f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  42cf13:	48 89 f7             	mov    %rsi,%rdi
  42cf16:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  42cf1a:	e8 51 42 fd ff       	callq  401170 <memcpy@plt>
  42cf1f:	e8 32 8a 01 00       	callq  445956 <writeback_cache>
  42cf24:	48 83 c4 30          	add    $0x30,%rsp
  42cf28:	5d                   	pop    %rbp
  42cf29:	c3                   	retq   
  42cf2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000042cf30 <md5_process_wrap>:
  42cf30:	55                   	push   %rbp
  42cf31:	48 89 e5             	mov    %rsp,%rbp
  42cf34:	48 83 ec 20          	sub    $0x20,%rsp
  42cf38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42cf3c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  42cf40:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  42cf44:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  42cf48:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42cf4c:	48 89 f7             	mov    %rsi,%rdi
  42cf4f:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  42cf53:	e8 e8 e7 ff ff       	callq  42b740 <mbedtls_internal_md5_process>
  42cf58:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  42cf5b:	e8 f6 89 01 00       	callq  445956 <writeback_cache>
  42cf60:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  42cf63:	48 83 c4 20          	add    $0x20,%rsp
  42cf67:	5d                   	pop    %rbp
  42cf68:	c3                   	retq   
  42cf69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000042cf70 <sha1_starts_wrap>:
  42cf70:	55                   	push   %rbp
  42cf71:	48 89 e5             	mov    %rsp,%rbp
  42cf74:	48 83 ec 10          	sub    $0x10,%rsp
  42cf78:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  42cf7c:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  42cf80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42cf84:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42cf88:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
  42cf8e:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42cf92:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%rdi)
  42cf99:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42cf9d:	c7 47 08 01 23 45 67 	movl   $0x67452301,0x8(%rdi)
  42cfa4:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42cfa8:	c7 47 0c 89 ab cd ef 	movl   $0xefcdab89,0xc(%rdi)
  42cfaf:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42cfb3:	c7 47 10 fe dc ba 98 	movl   $0x98badcfe,0x10(%rdi)
  42cfba:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42cfbe:	c7 47 14 76 54 32 10 	movl   $0x10325476,0x14(%rdi)
  42cfc5:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42cfc9:	c7 47 18 f0 e1 d2 c3 	movl   $0xc3d2e1f0,0x18(%rdi)
  42cfd0:	e8 81 89 01 00       	callq  445956 <writeback_cache>
  42cfd5:	31 c0                	xor    %eax,%eax
  42cfd7:	48 83 c4 10          	add    $0x10,%rsp
  42cfdb:	5d                   	pop    %rbp
  42cfdc:	c3                   	retq   
  42cfdd:	0f 1f 00             	nopl   (%rax)

000000000042cfe0 <sha1_update_wrap>:
  42cfe0:	55                   	push   %rbp
  42cfe1:	48 89 e5             	mov    %rsp,%rbp
  42cfe4:	48 83 ec 30          	sub    $0x30,%rsp
  42cfe8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42cfec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  42cff0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  42cff4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  42cff8:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42cffc:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  42d000:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
  42d004:	48 89 d7             	mov    %rdx,%rdi
  42d007:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  42d00b:	e8 80 2b 01 00       	callq  43fb90 <mbedtls_sha1_update_ret>
  42d010:	89 45 dc             	mov    %eax,-0x24(%rbp)
  42d013:	e8 3e 89 01 00       	callq  445956 <writeback_cache>
  42d018:	8b 45 dc             	mov    -0x24(%rbp),%eax
  42d01b:	48 83 c4 30          	add    $0x30,%rsp
  42d01f:	5d                   	pop    %rbp
  42d020:	c3                   	retq   
  42d021:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  42d028:	0f 1f 84 00 00 00 00 
  42d02f:	00 

000000000042d030 <sha1_finish_wrap>:
  42d030:	55                   	push   %rbp
  42d031:	48 89 e5             	mov    %rsp,%rbp
  42d034:	48 83 ec 20          	sub    $0x20,%rsp
  42d038:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42d03c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  42d040:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  42d044:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  42d048:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42d04c:	48 89 f7             	mov    %rsi,%rdi
  42d04f:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  42d053:	e8 b8 2c 01 00       	callq  43fd10 <mbedtls_sha1_finish_ret>
  42d058:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  42d05b:	e8 f6 88 01 00       	callq  445956 <writeback_cache>
  42d060:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  42d063:	48 83 c4 20          	add    $0x20,%rsp
  42d067:	5d                   	pop    %rbp
  42d068:	c3                   	retq   
  42d069:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000042d070 <sha1_ctx_alloc>:
  42d070:	55                   	push   %rbp
  42d071:	48 89 e5             	mov    %rsp,%rbp
  42d074:	48 83 ec 20          	sub    $0x20,%rsp
  42d078:	b8 01 00 00 00       	mov    $0x1,%eax
  42d07d:	89 c7                	mov    %eax,%edi
  42d07f:	b8 5c 00 00 00       	mov    $0x5c,%eax
  42d084:	89 c6                	mov    %eax,%esi
  42d086:	e8 5f 97 01 00       	callq  4467ea <aes_calloc>
  42d08b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42d08f:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  42d094:	74 1d                	je     42d0b3 <sha1_ctx_alloc+0x43>
  42d096:	31 f6                	xor    %esi,%esi
  42d098:	b8 5c 00 00 00       	mov    $0x5c,%eax
  42d09d:	89 c2                	mov    %eax,%edx
  42d09f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  42d0a3:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
  42d0a7:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  42d0ab:	48 89 cf             	mov    %rcx,%rdi
  42d0ae:	e8 6d 3f fd ff       	callq  401020 <memset@plt>
  42d0b3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42d0b7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42d0bb:	e8 96 88 01 00       	callq  445956 <writeback_cache>
  42d0c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42d0c4:	48 83 c4 20          	add    $0x20,%rsp
  42d0c8:	5d                   	pop    %rbp
  42d0c9:	c3                   	retq   
  42d0ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000042d0d0 <sha1_ctx_free>:
  42d0d0:	55                   	push   %rbp
  42d0d1:	48 89 e5             	mov    %rsp,%rbp
  42d0d4:	48 83 ec 30          	sub    $0x30,%rsp
  42d0d8:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
  42d0dc:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  42d0e0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42d0e4:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  42d0e9:	75 02                	jne    42d0ed <sha1_ctx_free+0x1d>
  42d0eb:	eb 28                	jmp    42d115 <sha1_ctx_free+0x45>
  42d0ed:	31 f6                	xor    %esi,%esi
  42d0ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42d0f3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42d0f7:	48 c7 45 f0 5c 00 00 	movq   $0x5c,-0x10(%rbp)
  42d0fe:	00 
  42d0ff:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  42d106:	00 
  42d107:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42d10b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  42d10f:	ff d0                	callq  *%rax
  42d111:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  42d115:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  42d119:	e8 c2 3f fd ff       	callq  4010e0 <free@plt>
  42d11e:	e8 33 88 01 00       	callq  445956 <writeback_cache>
  42d123:	48 83 c4 30          	add    $0x30,%rsp
  42d127:	5d                   	pop    %rbp
  42d128:	c3                   	retq   
  42d129:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000042d130 <sha1_clone_wrap>:
  42d130:	55                   	push   %rbp
  42d131:	48 89 e5             	mov    %rsp,%rbp
  42d134:	48 83 ec 30          	sub    $0x30,%rsp
  42d138:	b8 5c 00 00 00       	mov    $0x5c,%eax
  42d13d:	89 c2                	mov    %eax,%edx
  42d13f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42d143:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  42d147:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  42d14b:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  42d14f:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)
  42d153:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  42d157:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  42d15b:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  42d15f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  42d163:	48 89 f7             	mov    %rsi,%rdi
  42d166:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  42d16a:	e8 01 40 fd ff       	callq  401170 <memcpy@plt>
  42d16f:	e8 e2 87 01 00       	callq  445956 <writeback_cache>
  42d174:	48 83 c4 30          	add    $0x30,%rsp
  42d178:	5d                   	pop    %rbp
  42d179:	c3                   	retq   
  42d17a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000042d180 <sha1_process_wrap>:
  42d180:	55                   	push   %rbp
  42d181:	48 89 e5             	mov    %rsp,%rbp
  42d184:	48 83 ec 20          	sub    $0x20,%rsp
  42d188:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42d18c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  42d190:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  42d194:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  42d198:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42d19c:	48 89 f7             	mov    %rsi,%rdi
  42d19f:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  42d1a3:	e8 48 0b 01 00       	callq  43dcf0 <mbedtls_internal_sha1_process>
  42d1a8:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  42d1ab:	e8 a6 87 01 00       	callq  445956 <writeback_cache>
  42d1b0:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  42d1b3:	48 83 c4 20          	add    $0x20,%rsp
  42d1b7:	5d                   	pop    %rbp
  42d1b8:	c3                   	retq   
  42d1b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000042d1c0 <sha224_starts_wrap>:
  42d1c0:	55                   	push   %rbp
  42d1c1:	48 89 e5             	mov    %rsp,%rbp
  42d1c4:	48 83 ec 20          	sub    $0x20,%rsp
  42d1c8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42d1cc:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  42d1d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42d1d4:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
  42d1db:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42d1df:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
  42d1e5:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42d1e9:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%rdi)
  42d1f0:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  42d1f4:	75 5a                	jne    42d250 <sha224_starts_wrap+0x90>
  42d1f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d1fa:	c7 40 08 67 e6 09 6a 	movl   $0x6a09e667,0x8(%rax)
  42d201:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d205:	c7 40 0c 85 ae 67 bb 	movl   $0xbb67ae85,0xc(%rax)
  42d20c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d210:	c7 40 10 72 f3 6e 3c 	movl   $0x3c6ef372,0x10(%rax)
  42d217:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d21b:	c7 40 14 3a f5 4f a5 	movl   $0xa54ff53a,0x14(%rax)
  42d222:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d226:	c7 40 18 7f 52 0e 51 	movl   $0x510e527f,0x18(%rax)
  42d22d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d231:	c7 40 1c 8c 68 05 9b 	movl   $0x9b05688c,0x1c(%rax)
  42d238:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d23c:	c7 40 20 ab d9 83 1f 	movl   $0x1f83d9ab,0x20(%rax)
  42d243:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d247:	c7 40 24 19 cd e0 5b 	movl   $0x5be0cd19,0x24(%rax)
  42d24e:	eb 58                	jmp    42d2a8 <sha224_starts_wrap+0xe8>
  42d250:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d254:	c7 40 08 d8 9e 05 c1 	movl   $0xc1059ed8,0x8(%rax)
  42d25b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d25f:	c7 40 0c 07 d5 7c 36 	movl   $0x367cd507,0xc(%rax)
  42d266:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d26a:	c7 40 10 17 dd 70 30 	movl   $0x3070dd17,0x10(%rax)
  42d271:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d275:	c7 40 14 39 59 0e f7 	movl   $0xf70e5939,0x14(%rax)
  42d27c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d280:	c7 40 18 31 0b c0 ff 	movl   $0xffc00b31,0x18(%rax)
  42d287:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d28b:	c7 40 1c 11 15 58 68 	movl   $0x68581511,0x1c(%rax)
  42d292:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d296:	c7 40 20 a7 8f f9 64 	movl   $0x64f98fa7,0x20(%rax)
  42d29d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d2a1:	c7 40 24 a4 4f fa be 	movl   $0xbefa4fa4,0x24(%rax)
  42d2a8:	8b 45 f4             	mov    -0xc(%rbp),%eax
  42d2ab:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  42d2af:	89 41 68             	mov    %eax,0x68(%rcx)
  42d2b2:	e8 9f 86 01 00       	callq  445956 <writeback_cache>
  42d2b7:	31 c0                	xor    %eax,%eax
  42d2b9:	48 83 c4 20          	add    $0x20,%rsp
  42d2bd:	5d                   	pop    %rbp
  42d2be:	c3                   	retq   
  42d2bf:	90                   	nop

000000000042d2c0 <sha224_update_wrap>:
  42d2c0:	55                   	push   %rbp
  42d2c1:	48 89 e5             	mov    %rsp,%rbp
  42d2c4:	48 83 ec 30          	sub    $0x30,%rsp
  42d2c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42d2cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  42d2d0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  42d2d4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  42d2d8:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42d2dc:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  42d2e0:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
  42d2e4:	48 89 d7             	mov    %rdx,%rdi
  42d2e7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  42d2eb:	e8 f0 4c 01 00       	callq  441fe0 <mbedtls_sha256_update_ret>
  42d2f0:	89 45 dc             	mov    %eax,-0x24(%rbp)
  42d2f3:	e8 5e 86 01 00       	callq  445956 <writeback_cache>
  42d2f8:	8b 45 dc             	mov    -0x24(%rbp),%eax
  42d2fb:	48 83 c4 30          	add    $0x30,%rsp
  42d2ff:	5d                   	pop    %rbp
  42d300:	c3                   	retq   
  42d301:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  42d308:	0f 1f 84 00 00 00 00 
  42d30f:	00 

000000000042d310 <sha224_finish_wrap>:
  42d310:	55                   	push   %rbp
  42d311:	48 89 e5             	mov    %rsp,%rbp
  42d314:	48 83 ec 20          	sub    $0x20,%rsp
  42d318:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42d31c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  42d320:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  42d324:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  42d328:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42d32c:	48 89 f7             	mov    %rsi,%rdi
  42d32f:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  42d333:	e8 28 4e 01 00       	callq  442160 <mbedtls_sha256_finish_ret>
  42d338:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  42d33b:	e8 16 86 01 00       	callq  445956 <writeback_cache>
  42d340:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  42d343:	48 83 c4 20          	add    $0x20,%rsp
  42d347:	5d                   	pop    %rbp
  42d348:	c3                   	retq   
  42d349:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000042d350 <sha224_wrap>:
  42d350:	55                   	push   %rbp
  42d351:	48 89 e5             	mov    %rsp,%rbp
  42d354:	48 83 ec 20          	sub    $0x20,%rsp
  42d358:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42d35c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  42d360:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  42d364:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42d368:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42d36c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  42d370:	b9 01 00 00 00       	mov    $0x1,%ecx
  42d375:	e8 f6 51 01 00       	callq  442570 <mbedtls_sha256_ret>
  42d37a:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  42d37d:	e8 d4 85 01 00       	callq  445956 <writeback_cache>
  42d382:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  42d385:	48 83 c4 20          	add    $0x20,%rsp
  42d389:	5d                   	pop    %rbp
  42d38a:	c3                   	retq   
  42d38b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000042d390 <sha224_ctx_alloc>:
  42d390:	55                   	push   %rbp
  42d391:	48 89 e5             	mov    %rsp,%rbp
  42d394:	48 83 ec 20          	sub    $0x20,%rsp
  42d398:	b8 01 00 00 00       	mov    $0x1,%eax
  42d39d:	89 c7                	mov    %eax,%edi
  42d39f:	b8 6c 00 00 00       	mov    $0x6c,%eax
  42d3a4:	89 c6                	mov    %eax,%esi
  42d3a6:	e8 3f 94 01 00       	callq  4467ea <aes_calloc>
  42d3ab:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42d3af:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  42d3b4:	74 1d                	je     42d3d3 <sha224_ctx_alloc+0x43>
  42d3b6:	31 f6                	xor    %esi,%esi
  42d3b8:	b8 6c 00 00 00       	mov    $0x6c,%eax
  42d3bd:	89 c2                	mov    %eax,%edx
  42d3bf:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  42d3c3:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
  42d3c7:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  42d3cb:	48 89 cf             	mov    %rcx,%rdi
  42d3ce:	e8 4d 3c fd ff       	callq  401020 <memset@plt>
  42d3d3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42d3d7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42d3db:	e8 76 85 01 00       	callq  445956 <writeback_cache>
  42d3e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42d3e4:	48 83 c4 20          	add    $0x20,%rsp
  42d3e8:	5d                   	pop    %rbp
  42d3e9:	c3                   	retq   
  42d3ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000042d3f0 <sha224_ctx_free>:
  42d3f0:	55                   	push   %rbp
  42d3f1:	48 89 e5             	mov    %rsp,%rbp
  42d3f4:	48 83 ec 30          	sub    $0x30,%rsp
  42d3f8:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
  42d3fc:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  42d400:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42d404:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  42d409:	75 02                	jne    42d40d <sha224_ctx_free+0x1d>
  42d40b:	eb 28                	jmp    42d435 <sha224_ctx_free+0x45>
  42d40d:	31 f6                	xor    %esi,%esi
  42d40f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42d413:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42d417:	48 c7 45 f0 6c 00 00 	movq   $0x6c,-0x10(%rbp)
  42d41e:	00 
  42d41f:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  42d426:	00 
  42d427:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42d42b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  42d42f:	ff d0                	callq  *%rax
  42d431:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  42d435:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  42d439:	e8 a2 3c fd ff       	callq  4010e0 <free@plt>
  42d43e:	e8 13 85 01 00       	callq  445956 <writeback_cache>
  42d443:	48 83 c4 30          	add    $0x30,%rsp
  42d447:	5d                   	pop    %rbp
  42d448:	c3                   	retq   
  42d449:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000042d450 <sha224_clone_wrap>:
  42d450:	55                   	push   %rbp
  42d451:	48 89 e5             	mov    %rsp,%rbp
  42d454:	48 83 ec 30          	sub    $0x30,%rsp
  42d458:	b8 6c 00 00 00       	mov    $0x6c,%eax
  42d45d:	89 c2                	mov    %eax,%edx
  42d45f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42d463:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  42d467:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  42d46b:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  42d46f:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)
  42d473:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  42d477:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  42d47b:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  42d47f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  42d483:	48 89 f7             	mov    %rsi,%rdi
  42d486:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  42d48a:	e8 e1 3c fd ff       	callq  401170 <memcpy@plt>
  42d48f:	e8 c2 84 01 00       	callq  445956 <writeback_cache>
  42d494:	48 83 c4 30          	add    $0x30,%rsp
  42d498:	5d                   	pop    %rbp
  42d499:	c3                   	retq   
  42d49a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000042d4a0 <sha224_process_wrap>:
  42d4a0:	55                   	push   %rbp
  42d4a1:	48 89 e5             	mov    %rsp,%rbp
  42d4a4:	48 83 ec 20          	sub    $0x20,%rsp
  42d4a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42d4ac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  42d4b0:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  42d4b4:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  42d4b8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42d4bc:	48 89 f7             	mov    %rsi,%rdi
  42d4bf:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  42d4c3:	e8 b8 2d 01 00       	callq  440280 <mbedtls_internal_sha256_process>
  42d4c8:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  42d4cb:	e8 86 84 01 00       	callq  445956 <writeback_cache>
  42d4d0:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  42d4d3:	48 83 c4 20          	add    $0x20,%rsp
  42d4d7:	5d                   	pop    %rbp
  42d4d8:	c3                   	retq   
  42d4d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000042d4e0 <sha256_starts_wrap>:
  42d4e0:	55                   	push   %rbp
  42d4e1:	48 89 e5             	mov    %rsp,%rbp
  42d4e4:	48 83 ec 20          	sub    $0x20,%rsp
  42d4e8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42d4ec:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  42d4f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42d4f4:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  42d4fb:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42d4ff:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
  42d505:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42d509:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%rdi)
  42d510:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  42d514:	75 5a                	jne    42d570 <sha256_starts_wrap+0x90>
  42d516:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d51a:	c7 40 08 67 e6 09 6a 	movl   $0x6a09e667,0x8(%rax)
  42d521:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d525:	c7 40 0c 85 ae 67 bb 	movl   $0xbb67ae85,0xc(%rax)
  42d52c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d530:	c7 40 10 72 f3 6e 3c 	movl   $0x3c6ef372,0x10(%rax)
  42d537:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d53b:	c7 40 14 3a f5 4f a5 	movl   $0xa54ff53a,0x14(%rax)
  42d542:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d546:	c7 40 18 7f 52 0e 51 	movl   $0x510e527f,0x18(%rax)
  42d54d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d551:	c7 40 1c 8c 68 05 9b 	movl   $0x9b05688c,0x1c(%rax)
  42d558:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d55c:	c7 40 20 ab d9 83 1f 	movl   $0x1f83d9ab,0x20(%rax)
  42d563:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d567:	c7 40 24 19 cd e0 5b 	movl   $0x5be0cd19,0x24(%rax)
  42d56e:	eb 58                	jmp    42d5c8 <sha256_starts_wrap+0xe8>
  42d570:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d574:	c7 40 08 d8 9e 05 c1 	movl   $0xc1059ed8,0x8(%rax)
  42d57b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d57f:	c7 40 0c 07 d5 7c 36 	movl   $0x367cd507,0xc(%rax)
  42d586:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d58a:	c7 40 10 17 dd 70 30 	movl   $0x3070dd17,0x10(%rax)
  42d591:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d595:	c7 40 14 39 59 0e f7 	movl   $0xf70e5939,0x14(%rax)
  42d59c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d5a0:	c7 40 18 31 0b c0 ff 	movl   $0xffc00b31,0x18(%rax)
  42d5a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d5ab:	c7 40 1c 11 15 58 68 	movl   $0x68581511,0x1c(%rax)
  42d5b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d5b6:	c7 40 20 a7 8f f9 64 	movl   $0x64f98fa7,0x20(%rax)
  42d5bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d5c1:	c7 40 24 a4 4f fa be 	movl   $0xbefa4fa4,0x24(%rax)
  42d5c8:	8b 45 f4             	mov    -0xc(%rbp),%eax
  42d5cb:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  42d5cf:	89 41 68             	mov    %eax,0x68(%rcx)
  42d5d2:	e8 7f 83 01 00       	callq  445956 <writeback_cache>
  42d5d7:	31 c0                	xor    %eax,%eax
  42d5d9:	48 83 c4 20          	add    $0x20,%rsp
  42d5dd:	5d                   	pop    %rbp
  42d5de:	c3                   	retq   
  42d5df:	90                   	nop

000000000042d5e0 <sha256_wrap>:
  42d5e0:	55                   	push   %rbp
  42d5e1:	48 89 e5             	mov    %rsp,%rbp
  42d5e4:	48 83 ec 20          	sub    $0x20,%rsp
  42d5e8:	31 c9                	xor    %ecx,%ecx
  42d5ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42d5ee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  42d5f2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  42d5f6:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42d5fa:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  42d5fe:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  42d602:	e8 69 4f 01 00       	callq  442570 <mbedtls_sha256_ret>
  42d607:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  42d60a:	e8 47 83 01 00       	callq  445956 <writeback_cache>
  42d60f:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  42d612:	48 83 c4 20          	add    $0x20,%rsp
  42d616:	5d                   	pop    %rbp
  42d617:	c3                   	retq   
  42d618:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  42d61f:	00 

000000000042d620 <mbedtls_oid_get_attr_short_name>:
  42d620:	55                   	push   %rbp
  42d621:	48 89 e5             	mov    %rsp,%rbp
  42d624:	48 83 ec 30          	sub    $0x30,%rsp
  42d628:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  42d62c:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  42d630:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  42d634:	e8 47 00 00 00       	callq  42d680 <oid_x520_attr_from_asn1>
  42d639:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  42d63d:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  42d642:	75 09                	jne    42d64d <mbedtls_oid_get_attr_short_name+0x2d>
  42d644:	c7 45 fc d2 ff ff ff 	movl   $0xffffffd2,-0x4(%rbp)
  42d64b:	eb 16                	jmp    42d663 <mbedtls_oid_get_attr_short_name+0x43>
  42d64d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42d651:	48 8b 40 20          	mov    0x20(%rax),%rax
  42d655:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  42d659:	48 89 01             	mov    %rax,(%rcx)
  42d65c:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  42d663:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42d666:	89 45 dc             	mov    %eax,-0x24(%rbp)
  42d669:	e8 e8 82 01 00       	callq  445956 <writeback_cache>
  42d66e:	8b 45 dc             	mov    -0x24(%rbp),%eax
  42d671:	48 83 c4 30          	add    $0x30,%rsp
  42d675:	5d                   	pop    %rbp
  42d676:	c3                   	retq   
  42d677:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  42d67e:	00 00 

000000000042d680 <oid_x520_attr_from_asn1>:
  42d680:	55                   	push   %rbp
  42d681:	48 89 e5             	mov    %rsp,%rbp
  42d684:	48 83 ec 30          	sub    $0x30,%rsp
  42d688:	48 b8 d0 da 44 00 00 	movabs $0x44dad0,%rax
  42d68f:	00 00 00 
  42d692:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  42d696:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42d69a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42d69e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  42d6a2:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  42d6a7:	74 07                	je     42d6b0 <oid_x520_attr_from_asn1+0x30>
  42d6a9:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  42d6ae:	75 0a                	jne    42d6ba <oid_x520_attr_from_asn1+0x3a>
  42d6b0:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  42d6b7:	00 
  42d6b8:	eb 67                	jmp    42d721 <oid_x520_attr_from_asn1+0xa1>
  42d6ba:	eb 00                	jmp    42d6bc <oid_x520_attr_from_asn1+0x3c>
  42d6bc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42d6c0:	48 83 38 00          	cmpq   $0x0,(%rax)
  42d6c4:	74 53                	je     42d719 <oid_x520_attr_from_asn1+0x99>
  42d6c6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42d6ca:	48 8b 40 08          	mov    0x8(%rax),%rax
  42d6ce:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  42d6d2:	48 3b 41 08          	cmp    0x8(%rcx),%rax
  42d6d6:	75 2b                	jne    42d703 <oid_x520_attr_from_asn1+0x83>
  42d6d8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42d6dc:	48 8b 38             	mov    (%rax),%rdi
  42d6df:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42d6e3:	48 8b 70 10          	mov    0x10(%rax),%rsi
  42d6e7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42d6eb:	48 8b 50 08          	mov    0x8(%rax),%rdx
  42d6ef:	e8 dc 3a fd ff       	callq  4011d0 <memcmp@plt>
  42d6f4:	83 f8 00             	cmp    $0x0,%eax
  42d6f7:	75 0a                	jne    42d703 <oid_x520_attr_from_asn1+0x83>
  42d6f9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42d6fd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42d701:	eb 1e                	jmp    42d721 <oid_x520_attr_from_asn1+0xa1>
  42d703:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42d707:	48 83 c0 28          	add    $0x28,%rax
  42d70b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42d70f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42d713:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  42d717:	eb a3                	jmp    42d6bc <oid_x520_attr_from_asn1+0x3c>
  42d719:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  42d720:	00 
  42d721:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d725:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  42d729:	e8 28 82 01 00       	callq  445956 <writeback_cache>
  42d72e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42d732:	48 83 c4 30          	add    $0x30,%rsp
  42d736:	5d                   	pop    %rbp
  42d737:	c3                   	retq   
  42d738:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  42d73f:	00 

000000000042d740 <mbedtls_oid_get_extended_key_usage>:
  42d740:	55                   	push   %rbp
  42d741:	48 89 e5             	mov    %rsp,%rbp
  42d744:	48 83 ec 30          	sub    $0x30,%rsp
  42d748:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  42d74c:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  42d750:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  42d754:	e8 47 00 00 00       	callq  42d7a0 <oid_ext_key_usage_from_asn1>
  42d759:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  42d75d:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  42d762:	75 09                	jne    42d76d <mbedtls_oid_get_extended_key_usage+0x2d>
  42d764:	c7 45 fc d2 ff ff ff 	movl   $0xffffffd2,-0x4(%rbp)
  42d76b:	eb 16                	jmp    42d783 <mbedtls_oid_get_extended_key_usage+0x43>
  42d76d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42d771:	48 8b 40 18          	mov    0x18(%rax),%rax
  42d775:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  42d779:	48 89 01             	mov    %rax,(%rcx)
  42d77c:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  42d783:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42d786:	89 45 dc             	mov    %eax,-0x24(%rbp)
  42d789:	e8 c8 81 01 00       	callq  445956 <writeback_cache>
  42d78e:	8b 45 dc             	mov    -0x24(%rbp),%eax
  42d791:	48 83 c4 30          	add    $0x30,%rsp
  42d795:	5d                   	pop    %rbp
  42d796:	c3                   	retq   
  42d797:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  42d79e:	00 00 

000000000042d7a0 <oid_ext_key_usage_from_asn1>:
  42d7a0:	55                   	push   %rbp
  42d7a1:	48 89 e5             	mov    %rsp,%rbp
  42d7a4:	48 83 ec 30          	sub    $0x30,%rsp
  42d7a8:	48 b8 e0 de 44 00 00 	movabs $0x44dee0,%rax
  42d7af:	00 00 00 
  42d7b2:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  42d7b6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42d7ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42d7be:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  42d7c2:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  42d7c7:	74 07                	je     42d7d0 <oid_ext_key_usage_from_asn1+0x30>
  42d7c9:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  42d7ce:	75 0a                	jne    42d7da <oid_ext_key_usage_from_asn1+0x3a>
  42d7d0:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  42d7d7:	00 
  42d7d8:	eb 67                	jmp    42d841 <oid_ext_key_usage_from_asn1+0xa1>
  42d7da:	eb 00                	jmp    42d7dc <oid_ext_key_usage_from_asn1+0x3c>
  42d7dc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42d7e0:	48 83 38 00          	cmpq   $0x0,(%rax)
  42d7e4:	74 53                	je     42d839 <oid_ext_key_usage_from_asn1+0x99>
  42d7e6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42d7ea:	48 8b 40 08          	mov    0x8(%rax),%rax
  42d7ee:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  42d7f2:	48 3b 41 08          	cmp    0x8(%rcx),%rax
  42d7f6:	75 2b                	jne    42d823 <oid_ext_key_usage_from_asn1+0x83>
  42d7f8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42d7fc:	48 8b 38             	mov    (%rax),%rdi
  42d7ff:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42d803:	48 8b 70 10          	mov    0x10(%rax),%rsi
  42d807:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42d80b:	48 8b 50 08          	mov    0x8(%rax),%rdx
  42d80f:	e8 bc 39 fd ff       	callq  4011d0 <memcmp@plt>
  42d814:	83 f8 00             	cmp    $0x0,%eax
  42d817:	75 0a                	jne    42d823 <oid_ext_key_usage_from_asn1+0x83>
  42d819:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42d81d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42d821:	eb 1e                	jmp    42d841 <oid_ext_key_usage_from_asn1+0xa1>
  42d823:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42d827:	48 83 c0 20          	add    $0x20,%rax
  42d82b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42d82f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42d833:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  42d837:	eb a3                	jmp    42d7dc <oid_ext_key_usage_from_asn1+0x3c>
  42d839:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  42d840:	00 
  42d841:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d845:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  42d849:	e8 08 81 01 00       	callq  445956 <writeback_cache>
  42d84e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42d852:	48 83 c4 30          	add    $0x30,%rsp
  42d856:	5d                   	pop    %rbp
  42d857:	c3                   	retq   
  42d858:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  42d85f:	00 

000000000042d860 <mbedtls_oid_get_sig_alg_desc>:
  42d860:	55                   	push   %rbp
  42d861:	48 89 e5             	mov    %rsp,%rbp
  42d864:	48 83 ec 30          	sub    $0x30,%rsp
  42d868:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  42d86c:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  42d870:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  42d874:	e8 47 00 00 00       	callq  42d8c0 <oid_sig_alg_from_asn1>
  42d879:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  42d87d:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  42d882:	75 09                	jne    42d88d <mbedtls_oid_get_sig_alg_desc+0x2d>
  42d884:	c7 45 fc d2 ff ff ff 	movl   $0xffffffd2,-0x4(%rbp)
  42d88b:	eb 16                	jmp    42d8a3 <mbedtls_oid_get_sig_alg_desc+0x43>
  42d88d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42d891:	48 8b 40 18          	mov    0x18(%rax),%rax
  42d895:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  42d899:	48 89 01             	mov    %rax,(%rcx)
  42d89c:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  42d8a3:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42d8a6:	89 45 dc             	mov    %eax,-0x24(%rbp)
  42d8a9:	e8 a8 80 01 00       	callq  445956 <writeback_cache>
  42d8ae:	8b 45 dc             	mov    -0x24(%rbp),%eax
  42d8b1:	48 83 c4 30          	add    $0x30,%rsp
  42d8b5:	5d                   	pop    %rbp
  42d8b6:	c3                   	retq   
  42d8b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  42d8be:	00 00 

000000000042d8c0 <oid_sig_alg_from_asn1>:
  42d8c0:	55                   	push   %rbp
  42d8c1:	48 89 e5             	mov    %rsp,%rbp
  42d8c4:	48 83 ec 30          	sub    $0x30,%rsp
  42d8c8:	48 b8 c0 df 44 00 00 	movabs $0x44dfc0,%rax
  42d8cf:	00 00 00 
  42d8d2:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  42d8d6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42d8da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42d8de:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  42d8e2:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  42d8e7:	74 07                	je     42d8f0 <oid_sig_alg_from_asn1+0x30>
  42d8e9:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  42d8ee:	75 0a                	jne    42d8fa <oid_sig_alg_from_asn1+0x3a>
  42d8f0:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  42d8f7:	00 
  42d8f8:	eb 67                	jmp    42d961 <oid_sig_alg_from_asn1+0xa1>
  42d8fa:	eb 00                	jmp    42d8fc <oid_sig_alg_from_asn1+0x3c>
  42d8fc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42d900:	48 83 38 00          	cmpq   $0x0,(%rax)
  42d904:	74 53                	je     42d959 <oid_sig_alg_from_asn1+0x99>
  42d906:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42d90a:	48 8b 40 08          	mov    0x8(%rax),%rax
  42d90e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  42d912:	48 3b 41 08          	cmp    0x8(%rcx),%rax
  42d916:	75 2b                	jne    42d943 <oid_sig_alg_from_asn1+0x83>
  42d918:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42d91c:	48 8b 38             	mov    (%rax),%rdi
  42d91f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42d923:	48 8b 70 10          	mov    0x10(%rax),%rsi
  42d927:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42d92b:	48 8b 50 08          	mov    0x8(%rax),%rdx
  42d92f:	e8 9c 38 fd ff       	callq  4011d0 <memcmp@plt>
  42d934:	83 f8 00             	cmp    $0x0,%eax
  42d937:	75 0a                	jne    42d943 <oid_sig_alg_from_asn1+0x83>
  42d939:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42d93d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42d941:	eb 1e                	jmp    42d961 <oid_sig_alg_from_asn1+0xa1>
  42d943:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42d947:	48 83 c0 28          	add    $0x28,%rax
  42d94b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42d94f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42d953:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  42d957:	eb a3                	jmp    42d8fc <oid_sig_alg_from_asn1+0x3c>
  42d959:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  42d960:	00 
  42d961:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42d965:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  42d969:	e8 e8 7f 01 00       	callq  445956 <writeback_cache>
  42d96e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42d972:	48 83 c4 30          	add    $0x30,%rsp
  42d976:	5d                   	pop    %rbp
  42d977:	c3                   	retq   
  42d978:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  42d97f:	00 

000000000042d980 <oid_cipher_alg_from_asn1>:
  42d980:	55                   	push   %rbp
  42d981:	48 89 e5             	mov    %rsp,%rbp
  42d984:	48 83 ec 30          	sub    $0x30,%rsp
  42d988:	48 b8 80 e1 44 00 00 	movabs $0x44e180,%rax
  42d98f:	00 00 00 
  42d992:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  42d996:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42d99a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42d99e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  42d9a2:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  42d9a7:	74 07                	je     42d9b0 <oid_cipher_alg_from_asn1+0x30>
  42d9a9:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  42d9ae:	75 0a                	jne    42d9ba <oid_cipher_alg_from_asn1+0x3a>
  42d9b0:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  42d9b7:	00 
  42d9b8:	eb 67                	jmp    42da21 <oid_cipher_alg_from_asn1+0xa1>
  42d9ba:	eb 00                	jmp    42d9bc <oid_cipher_alg_from_asn1+0x3c>
  42d9bc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42d9c0:	48 83 38 00          	cmpq   $0x0,(%rax)
  42d9c4:	74 53                	je     42da19 <oid_cipher_alg_from_asn1+0x99>
  42d9c6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42d9ca:	48 8b 40 08          	mov    0x8(%rax),%rax
  42d9ce:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  42d9d2:	48 3b 41 08          	cmp    0x8(%rcx),%rax
  42d9d6:	75 2b                	jne    42da03 <oid_cipher_alg_from_asn1+0x83>
  42d9d8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42d9dc:	48 8b 38             	mov    (%rax),%rdi
  42d9df:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42d9e3:	48 8b 70 10          	mov    0x10(%rax),%rsi
  42d9e7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42d9eb:	48 8b 50 08          	mov    0x8(%rax),%rdx
  42d9ef:	e8 dc 37 fd ff       	callq  4011d0 <memcmp@plt>
  42d9f4:	83 f8 00             	cmp    $0x0,%eax
  42d9f7:	75 0a                	jne    42da03 <oid_cipher_alg_from_asn1+0x83>
  42d9f9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42d9fd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42da01:	eb 1e                	jmp    42da21 <oid_cipher_alg_from_asn1+0xa1>
  42da03:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42da07:	48 83 c0 28          	add    $0x28,%rax
  42da0b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42da0f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42da13:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  42da17:	eb a3                	jmp    42d9bc <oid_cipher_alg_from_asn1+0x3c>
  42da19:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  42da20:	00 
  42da21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42da25:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  42da29:	e8 28 7f 01 00       	callq  445956 <writeback_cache>
  42da2e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42da32:	48 83 c4 30          	add    $0x30,%rsp
  42da36:	5d                   	pop    %rbp
  42da37:	c3                   	retq   
  42da38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  42da3f:	00 

000000000042da40 <oid_md_alg_from_asn1>:
  42da40:	55                   	push   %rbp
  42da41:	48 89 e5             	mov    %rsp,%rbp
  42da44:	48 83 ec 30          	sub    $0x30,%rsp
  42da48:	48 b8 00 e2 44 00 00 	movabs $0x44e200,%rax
  42da4f:	00 00 00 
  42da52:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  42da56:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42da5a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42da5e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  42da62:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  42da67:	74 07                	je     42da70 <oid_md_alg_from_asn1+0x30>
  42da69:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  42da6e:	75 0a                	jne    42da7a <oid_md_alg_from_asn1+0x3a>
  42da70:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  42da77:	00 
  42da78:	eb 67                	jmp    42dae1 <oid_md_alg_from_asn1+0xa1>
  42da7a:	eb 00                	jmp    42da7c <oid_md_alg_from_asn1+0x3c>
  42da7c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42da80:	48 83 38 00          	cmpq   $0x0,(%rax)
  42da84:	74 53                	je     42dad9 <oid_md_alg_from_asn1+0x99>
  42da86:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42da8a:	48 8b 40 08          	mov    0x8(%rax),%rax
  42da8e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  42da92:	48 3b 41 08          	cmp    0x8(%rcx),%rax
  42da96:	75 2b                	jne    42dac3 <oid_md_alg_from_asn1+0x83>
  42da98:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42da9c:	48 8b 38             	mov    (%rax),%rdi
  42da9f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42daa3:	48 8b 70 10          	mov    0x10(%rax),%rsi
  42daa7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42daab:	48 8b 50 08          	mov    0x8(%rax),%rdx
  42daaf:	e8 1c 37 fd ff       	callq  4011d0 <memcmp@plt>
  42dab4:	83 f8 00             	cmp    $0x0,%eax
  42dab7:	75 0a                	jne    42dac3 <oid_md_alg_from_asn1+0x83>
  42dab9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42dabd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42dac1:	eb 1e                	jmp    42dae1 <oid_md_alg_from_asn1+0xa1>
  42dac3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42dac7:	48 83 c0 28          	add    $0x28,%rax
  42dacb:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42dacf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42dad3:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  42dad7:	eb a3                	jmp    42da7c <oid_md_alg_from_asn1+0x3c>
  42dad9:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  42dae0:	00 
  42dae1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42dae5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  42dae9:	e8 68 7e 01 00       	callq  445956 <writeback_cache>
  42daee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42daf2:	48 83 c4 30          	add    $0x30,%rsp
  42daf6:	5d                   	pop    %rbp
  42daf7:	c3                   	retq   
  42daf8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  42daff:	00 

000000000042db00 <oid_md_hmac_from_asn1>:
  42db00:	55                   	push   %rbp
  42db01:	48 89 e5             	mov    %rsp,%rbp
  42db04:	48 83 ec 30          	sub    $0x30,%rsp
  42db08:	48 b8 d0 e2 44 00 00 	movabs $0x44e2d0,%rax
  42db0f:	00 00 00 
  42db12:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  42db16:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42db1a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42db1e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  42db22:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  42db27:	74 07                	je     42db30 <oid_md_hmac_from_asn1+0x30>
  42db29:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  42db2e:	75 0a                	jne    42db3a <oid_md_hmac_from_asn1+0x3a>
  42db30:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  42db37:	00 
  42db38:	eb 67                	jmp    42dba1 <oid_md_hmac_from_asn1+0xa1>
  42db3a:	eb 00                	jmp    42db3c <oid_md_hmac_from_asn1+0x3c>
  42db3c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42db40:	48 83 38 00          	cmpq   $0x0,(%rax)
  42db44:	74 53                	je     42db99 <oid_md_hmac_from_asn1+0x99>
  42db46:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42db4a:	48 8b 40 08          	mov    0x8(%rax),%rax
  42db4e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  42db52:	48 3b 41 08          	cmp    0x8(%rcx),%rax
  42db56:	75 2b                	jne    42db83 <oid_md_hmac_from_asn1+0x83>
  42db58:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42db5c:	48 8b 38             	mov    (%rax),%rdi
  42db5f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42db63:	48 8b 70 10          	mov    0x10(%rax),%rsi
  42db67:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42db6b:	48 8b 50 08          	mov    0x8(%rax),%rdx
  42db6f:	e8 5c 36 fd ff       	callq  4011d0 <memcmp@plt>
  42db74:	83 f8 00             	cmp    $0x0,%eax
  42db77:	75 0a                	jne    42db83 <oid_md_hmac_from_asn1+0x83>
  42db79:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42db7d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42db81:	eb 1e                	jmp    42dba1 <oid_md_hmac_from_asn1+0xa1>
  42db83:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42db87:	48 83 c0 28          	add    $0x28,%rax
  42db8b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42db8f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42db93:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  42db97:	eb a3                	jmp    42db3c <oid_md_hmac_from_asn1+0x3c>
  42db99:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  42dba0:	00 
  42dba1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42dba5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  42dba9:	e8 a8 7d 01 00       	callq  445956 <writeback_cache>
  42dbae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42dbb2:	48 83 c4 30          	add    $0x30,%rsp
  42dbb6:	5d                   	pop    %rbp
  42dbb7:	c3                   	retq   
  42dbb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  42dbbf:	00 

000000000042dbc0 <mbedtls_pem_init>:
  42dbc0:	55                   	push   %rbp
  42dbc1:	48 89 e5             	mov    %rsp,%rbp
  42dbc4:	48 83 ec 10          	sub    $0x10,%rsp
  42dbc8:	31 f6                	xor    %esi,%esi
  42dbca:	b8 18 00 00 00       	mov    $0x18,%eax
  42dbcf:	89 c2                	mov    %eax,%edx
  42dbd1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42dbd5:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42dbd9:	e8 42 34 fd ff       	callq  401020 <memset@plt>
  42dbde:	e8 73 7d 01 00       	callq  445956 <writeback_cache>
  42dbe3:	48 83 c4 10          	add    $0x10,%rsp
  42dbe7:	5d                   	pop    %rbp
  42dbe8:	c3                   	retq   
  42dbe9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000042dbf0 <mbedtls_pem_read_buffer>:
  42dbf0:	55                   	push   %rbp
  42dbf1:	48 89 e5             	mov    %rsp,%rbp
  42dbf4:	53                   	push   %rbx
  42dbf5:	48 81 ec 18 06 00 00 	sub    $0x618,%rsp
  42dbfc:	48 8b 45 10          	mov    0x10(%rbp),%rax
  42dc00:	48 89 bd d8 fa ff ff 	mov    %rdi,-0x528(%rbp)
  42dc07:	48 89 b5 d0 fa ff ff 	mov    %rsi,-0x530(%rbp)
  42dc0e:	48 89 95 c8 fa ff ff 	mov    %rdx,-0x538(%rbp)
  42dc15:	48 89 8d c0 fa ff ff 	mov    %rcx,-0x540(%rbp)
  42dc1c:	4c 89 85 b8 fa ff ff 	mov    %r8,-0x548(%rbp)
  42dc23:	4c 89 8d b0 fa ff ff 	mov    %r9,-0x550(%rbp)
  42dc2a:	c7 85 6c fa ff ff 00 	movl   $0x0,-0x594(%rbp)
  42dc31:	00 00 00 
  42dc34:	48 83 bd d8 fa ff ff 	cmpq   $0x0,-0x528(%rbp)
  42dc3b:	00 
  42dc3c:	48 89 85 60 fa ff ff 	mov    %rax,-0x5a0(%rbp)
  42dc43:	75 0f                	jne    42dc54 <mbedtls_pem_read_buffer+0x64>
  42dc45:	c7 85 e4 fa ff ff 80 	movl   $0xffffeb80,-0x51c(%rbp)
  42dc4c:	eb ff ff 
  42dc4f:	e9 9d 0e 00 00       	jmpq   42eaf1 <mbedtls_pem_read_buffer+0xf01>
  42dc54:	48 8b 85 c0 fa ff ff 	mov    -0x540(%rbp),%rax
  42dc5b:	48 8b 8d d0 fa ff ff 	mov    -0x530(%rbp),%rcx
  42dc62:	48 89 85 00 fb ff ff 	mov    %rax,-0x500(%rbp)
  42dc69:	48 89 8d f8 fa ff ff 	mov    %rcx,-0x508(%rbp)
  42dc70:	48 8b 85 00 fb ff ff 	mov    -0x500(%rbp),%rax
  42dc77:	80 38 00             	cmpb   $0x0,(%rax)
  42dc7a:	0f 84 d7 00 00 00    	je     42dd57 <mbedtls_pem_read_buffer+0x167>
  42dc80:	48 8b 85 00 fb ff ff 	mov    -0x500(%rbp),%rax
  42dc87:	48 89 85 f0 fa ff ff 	mov    %rax,-0x510(%rbp)
  42dc8e:	48 8b 85 f8 fa ff ff 	mov    -0x508(%rbp),%rax
  42dc95:	48 89 85 e8 fa ff ff 	mov    %rax,-0x518(%rbp)
  42dc9c:	31 c0                	xor    %eax,%eax
  42dc9e:	88 c1                	mov    %al,%cl
  42dca0:	48 8b 95 00 fb ff ff 	mov    -0x500(%rbp),%rdx
  42dca7:	0f be 02             	movsbl (%rdx),%eax
  42dcaa:	83 f8 00             	cmp    $0x0,%eax
  42dcad:	88 8d 5f fa ff ff    	mov    %cl,-0x5a1(%rbp)
  42dcb3:	74 3a                	je     42dcef <mbedtls_pem_read_buffer+0xff>
  42dcb5:	31 c0                	xor    %eax,%eax
  42dcb7:	88 c1                	mov    %al,%cl
  42dcb9:	48 8b 95 e8 fa ff ff 	mov    -0x518(%rbp),%rdx
  42dcc0:	0f be 02             	movsbl (%rdx),%eax
  42dcc3:	83 f8 00             	cmp    $0x0,%eax
  42dcc6:	88 8d 5f fa ff ff    	mov    %cl,-0x5a1(%rbp)
  42dccc:	74 21                	je     42dcef <mbedtls_pem_read_buffer+0xff>
  42dcce:	48 8b 85 00 fb ff ff 	mov    -0x500(%rbp),%rax
  42dcd5:	0f be 08             	movsbl (%rax),%ecx
  42dcd8:	48 8b 85 e8 fa ff ff 	mov    -0x518(%rbp),%rax
  42dcdf:	0f be 10             	movsbl (%rax),%edx
  42dce2:	39 d1                	cmp    %edx,%ecx
  42dce4:	40 0f 94 c6          	sete   %sil
  42dce8:	40 88 b5 5f fa ff ff 	mov    %sil,-0x5a1(%rbp)
  42dcef:	8a 85 5f fa ff ff    	mov    -0x5a1(%rbp),%al
  42dcf5:	a8 01                	test   $0x1,%al
  42dcf7:	75 02                	jne    42dcfb <mbedtls_pem_read_buffer+0x10b>
  42dcf9:	eb 29                	jmp    42dd24 <mbedtls_pem_read_buffer+0x134>
  42dcfb:	48 8b 85 00 fb ff ff 	mov    -0x500(%rbp),%rax
  42dd02:	48 83 c0 01          	add    $0x1,%rax
  42dd06:	48 89 85 00 fb ff ff 	mov    %rax,-0x500(%rbp)
  42dd0d:	48 8b 85 e8 fa ff ff 	mov    -0x518(%rbp),%rax
  42dd14:	48 83 c0 01          	add    $0x1,%rax
  42dd18:	48 89 85 e8 fa ff ff 	mov    %rax,-0x518(%rbp)
  42dd1f:	e9 78 ff ff ff       	jmpq   42dc9c <mbedtls_pem_read_buffer+0xac>
  42dd24:	48 8b 85 e8 fa ff ff 	mov    -0x518(%rbp),%rax
  42dd2b:	80 38 00             	cmpb   $0x0,(%rax)
  42dd2e:	75 10                	jne    42dd40 <mbedtls_pem_read_buffer+0x150>
  42dd30:	48 8b 85 f0 fa ff ff 	mov    -0x510(%rbp),%rax
  42dd37:	48 89 85 08 fb ff ff 	mov    %rax,-0x4f8(%rbp)
  42dd3e:	eb 22                	jmp    42dd62 <mbedtls_pem_read_buffer+0x172>
  42dd40:	48 8b 85 f0 fa ff ff 	mov    -0x510(%rbp),%rax
  42dd47:	48 83 c0 01          	add    $0x1,%rax
  42dd4b:	48 89 85 00 fb ff ff 	mov    %rax,-0x500(%rbp)
  42dd52:	e9 19 ff ff ff       	jmpq   42dc70 <mbedtls_pem_read_buffer+0x80>
  42dd57:	48 c7 85 08 fb ff ff 	movq   $0x0,-0x4f8(%rbp)
  42dd5e:	00 00 00 00 
  42dd62:	48 8b 85 08 fb ff ff 	mov    -0x4f8(%rbp),%rax
  42dd69:	48 89 85 90 fa ff ff 	mov    %rax,-0x570(%rbp)
  42dd70:	48 83 bd 90 fa ff ff 	cmpq   $0x0,-0x570(%rbp)
  42dd77:	00 
  42dd78:	75 0f                	jne    42dd89 <mbedtls_pem_read_buffer+0x199>
  42dd7a:	c7 85 e4 fa ff ff 80 	movl   $0xffffef80,-0x51c(%rbp)
  42dd81:	ef ff ff 
  42dd84:	e9 68 0d 00 00       	jmpq   42eaf1 <mbedtls_pem_read_buffer+0xf01>
  42dd89:	48 8b 85 c0 fa ff ff 	mov    -0x540(%rbp),%rax
  42dd90:	48 8b 8d c8 fa ff ff 	mov    -0x538(%rbp),%rcx
  42dd97:	48 89 85 38 fb ff ff 	mov    %rax,-0x4c8(%rbp)
  42dd9e:	48 89 8d 30 fb ff ff 	mov    %rcx,-0x4d0(%rbp)
  42dda5:	48 8b 85 38 fb ff ff 	mov    -0x4c8(%rbp),%rax
  42ddac:	80 38 00             	cmpb   $0x0,(%rax)
  42ddaf:	0f 84 d7 00 00 00    	je     42de8c <mbedtls_pem_read_buffer+0x29c>
  42ddb5:	48 8b 85 38 fb ff ff 	mov    -0x4c8(%rbp),%rax
  42ddbc:	48 89 85 28 fb ff ff 	mov    %rax,-0x4d8(%rbp)
  42ddc3:	48 8b 85 30 fb ff ff 	mov    -0x4d0(%rbp),%rax
  42ddca:	48 89 85 20 fb ff ff 	mov    %rax,-0x4e0(%rbp)
  42ddd1:	31 c0                	xor    %eax,%eax
  42ddd3:	88 c1                	mov    %al,%cl
  42ddd5:	48 8b 95 38 fb ff ff 	mov    -0x4c8(%rbp),%rdx
  42dddc:	0f be 02             	movsbl (%rdx),%eax
  42dddf:	83 f8 00             	cmp    $0x0,%eax
  42dde2:	88 8d 5e fa ff ff    	mov    %cl,-0x5a2(%rbp)
  42dde8:	74 3a                	je     42de24 <mbedtls_pem_read_buffer+0x234>
  42ddea:	31 c0                	xor    %eax,%eax
  42ddec:	88 c1                	mov    %al,%cl
  42ddee:	48 8b 95 20 fb ff ff 	mov    -0x4e0(%rbp),%rdx
  42ddf5:	0f be 02             	movsbl (%rdx),%eax
  42ddf8:	83 f8 00             	cmp    $0x0,%eax
  42ddfb:	88 8d 5e fa ff ff    	mov    %cl,-0x5a2(%rbp)
  42de01:	74 21                	je     42de24 <mbedtls_pem_read_buffer+0x234>
  42de03:	48 8b 85 38 fb ff ff 	mov    -0x4c8(%rbp),%rax
  42de0a:	0f be 08             	movsbl (%rax),%ecx
  42de0d:	48 8b 85 20 fb ff ff 	mov    -0x4e0(%rbp),%rax
  42de14:	0f be 10             	movsbl (%rax),%edx
  42de17:	39 d1                	cmp    %edx,%ecx
  42de19:	40 0f 94 c6          	sete   %sil
  42de1d:	40 88 b5 5e fa ff ff 	mov    %sil,-0x5a2(%rbp)
  42de24:	8a 85 5e fa ff ff    	mov    -0x5a2(%rbp),%al
  42de2a:	a8 01                	test   $0x1,%al
  42de2c:	75 02                	jne    42de30 <mbedtls_pem_read_buffer+0x240>
  42de2e:	eb 29                	jmp    42de59 <mbedtls_pem_read_buffer+0x269>
  42de30:	48 8b 85 38 fb ff ff 	mov    -0x4c8(%rbp),%rax
  42de37:	48 83 c0 01          	add    $0x1,%rax
  42de3b:	48 89 85 38 fb ff ff 	mov    %rax,-0x4c8(%rbp)
  42de42:	48 8b 85 20 fb ff ff 	mov    -0x4e0(%rbp),%rax
  42de49:	48 83 c0 01          	add    $0x1,%rax
  42de4d:	48 89 85 20 fb ff ff 	mov    %rax,-0x4e0(%rbp)
  42de54:	e9 78 ff ff ff       	jmpq   42ddd1 <mbedtls_pem_read_buffer+0x1e1>
  42de59:	48 8b 85 20 fb ff ff 	mov    -0x4e0(%rbp),%rax
  42de60:	80 38 00             	cmpb   $0x0,(%rax)
  42de63:	75 10                	jne    42de75 <mbedtls_pem_read_buffer+0x285>
  42de65:	48 8b 85 28 fb ff ff 	mov    -0x4d8(%rbp),%rax
  42de6c:	48 89 85 40 fb ff ff 	mov    %rax,-0x4c0(%rbp)
  42de73:	eb 22                	jmp    42de97 <mbedtls_pem_read_buffer+0x2a7>
  42de75:	48 8b 85 28 fb ff ff 	mov    -0x4d8(%rbp),%rax
  42de7c:	48 83 c0 01          	add    $0x1,%rax
  42de80:	48 89 85 38 fb ff ff 	mov    %rax,-0x4c8(%rbp)
  42de87:	e9 19 ff ff ff       	jmpq   42dda5 <mbedtls_pem_read_buffer+0x1b5>
  42de8c:	48 c7 85 40 fb ff ff 	movq   $0x0,-0x4c0(%rbp)
  42de93:	00 00 00 00 
  42de97:	48 8b 85 40 fb ff ff 	mov    -0x4c0(%rbp),%rax
  42de9e:	48 89 85 88 fa ff ff 	mov    %rax,-0x578(%rbp)
  42dea5:	48 83 bd 88 fa ff ff 	cmpq   $0x0,-0x578(%rbp)
  42deac:	00 
  42dead:	74 10                	je     42debf <mbedtls_pem_read_buffer+0x2cf>
  42deaf:	48 8b 85 88 fa ff ff 	mov    -0x578(%rbp),%rax
  42deb6:	48 3b 85 90 fa ff ff 	cmp    -0x570(%rbp),%rax
  42debd:	77 0f                	ja     42dece <mbedtls_pem_read_buffer+0x2de>
  42debf:	c7 85 e4 fa ff ff 80 	movl   $0xffffef80,-0x51c(%rbp)
  42dec6:	ef ff ff 
  42dec9:	e9 23 0c 00 00       	jmpq   42eaf1 <mbedtls_pem_read_buffer+0xf01>
  42dece:	48 8b bd d0 fa ff ff 	mov    -0x530(%rbp),%rdi
  42ded5:	e8 f6 31 fd ff       	callq  4010d0 <strlen@plt>
  42deda:	48 03 85 90 fa ff ff 	add    -0x570(%rbp),%rax
  42dee1:	48 89 85 90 fa ff ff 	mov    %rax,-0x570(%rbp)
  42dee8:	48 8b 85 90 fa ff ff 	mov    -0x570(%rbp),%rax
  42deef:	0f b6 08             	movzbl (%rax),%ecx
  42def2:	83 f9 20             	cmp    $0x20,%ecx
  42def5:	75 12                	jne    42df09 <mbedtls_pem_read_buffer+0x319>
  42def7:	48 8b 85 90 fa ff ff 	mov    -0x570(%rbp),%rax
  42defe:	48 83 c0 01          	add    $0x1,%rax
  42df02:	48 89 85 90 fa ff ff 	mov    %rax,-0x570(%rbp)
  42df09:	48 8b 85 90 fa ff ff 	mov    -0x570(%rbp),%rax
  42df10:	0f b6 08             	movzbl (%rax),%ecx
  42df13:	83 f9 0d             	cmp    $0xd,%ecx
  42df16:	75 12                	jne    42df2a <mbedtls_pem_read_buffer+0x33a>
  42df18:	48 8b 85 90 fa ff ff 	mov    -0x570(%rbp),%rax
  42df1f:	48 83 c0 01          	add    $0x1,%rax
  42df23:	48 89 85 90 fa ff ff 	mov    %rax,-0x570(%rbp)
  42df2a:	48 8b 85 90 fa ff ff 	mov    -0x570(%rbp),%rax
  42df31:	0f b6 08             	movzbl (%rax),%ecx
  42df34:	83 f9 0a             	cmp    $0xa,%ecx
  42df37:	75 14                	jne    42df4d <mbedtls_pem_read_buffer+0x35d>
  42df39:	48 8b 85 90 fa ff ff 	mov    -0x570(%rbp),%rax
  42df40:	48 83 c0 01          	add    $0x1,%rax
  42df44:	48 89 85 90 fa ff ff 	mov    %rax,-0x570(%rbp)
  42df4b:	eb 0f                	jmp    42df5c <mbedtls_pem_read_buffer+0x36c>
  42df4d:	c7 85 e4 fa ff ff 80 	movl   $0xffffef80,-0x51c(%rbp)
  42df54:	ef ff ff 
  42df57:	e9 95 0b 00 00       	jmpq   42eaf1 <mbedtls_pem_read_buffer+0xf01>
  42df5c:	48 8b 85 88 fa ff ff 	mov    -0x578(%rbp),%rax
  42df63:	48 89 85 80 fa ff ff 	mov    %rax,-0x580(%rbp)
  42df6a:	48 8b bd c8 fa ff ff 	mov    -0x538(%rbp),%rdi
  42df71:	e8 5a 31 fd ff       	callq  4010d0 <strlen@plt>
  42df76:	48 03 85 80 fa ff ff 	add    -0x580(%rbp),%rax
  42df7d:	48 89 85 80 fa ff ff 	mov    %rax,-0x580(%rbp)
  42df84:	48 8b 85 80 fa ff ff 	mov    -0x580(%rbp),%rax
  42df8b:	0f b6 08             	movzbl (%rax),%ecx
  42df8e:	83 f9 20             	cmp    $0x20,%ecx
  42df91:	75 12                	jne    42dfa5 <mbedtls_pem_read_buffer+0x3b5>
  42df93:	48 8b 85 80 fa ff ff 	mov    -0x580(%rbp),%rax
  42df9a:	48 83 c0 01          	add    $0x1,%rax
  42df9e:	48 89 85 80 fa ff ff 	mov    %rax,-0x580(%rbp)
  42dfa5:	48 8b 85 80 fa ff ff 	mov    -0x580(%rbp),%rax
  42dfac:	0f b6 08             	movzbl (%rax),%ecx
  42dfaf:	83 f9 0d             	cmp    $0xd,%ecx
  42dfb2:	75 12                	jne    42dfc6 <mbedtls_pem_read_buffer+0x3d6>
  42dfb4:	48 8b 85 80 fa ff ff 	mov    -0x580(%rbp),%rax
  42dfbb:	48 83 c0 01          	add    $0x1,%rax
  42dfbf:	48 89 85 80 fa ff ff 	mov    %rax,-0x580(%rbp)
  42dfc6:	48 8b 85 80 fa ff ff 	mov    -0x580(%rbp),%rax
  42dfcd:	0f b6 08             	movzbl (%rax),%ecx
  42dfd0:	83 f9 0a             	cmp    $0xa,%ecx
  42dfd3:	75 12                	jne    42dfe7 <mbedtls_pem_read_buffer+0x3f7>
  42dfd5:	48 8b 85 80 fa ff ff 	mov    -0x580(%rbp),%rax
  42dfdc:	48 83 c0 01          	add    $0x1,%rax
  42dfe0:	48 89 85 80 fa ff ff 	mov    %rax,-0x580(%rbp)
  42dfe7:	48 8b 85 80 fa ff ff 	mov    -0x580(%rbp),%rax
  42dfee:	48 8b 8d c0 fa ff ff 	mov    -0x540(%rbp),%rcx
  42dff5:	48 29 c8             	sub    %rcx,%rax
  42dff8:	48 8b 4d 10          	mov    0x10(%rbp),%rcx
  42dffc:	48 89 01             	mov    %rax,(%rcx)
  42dfff:	c7 85 a8 fa ff ff 00 	movl   $0x0,-0x558(%rbp)
  42e006:	00 00 00 
  42e009:	48 8b 85 88 fa ff ff 	mov    -0x578(%rbp),%rax
  42e010:	48 8b 8d 90 fa ff ff 	mov    -0x570(%rbp),%rcx
  42e017:	48 29 c8             	sub    %rcx,%rax
  42e01a:	48 83 f8 16          	cmp    $0x16,%rax
  42e01e:	0f 8c dd 03 00 00    	jl     42e401 <mbedtls_pem_read_buffer+0x811>
  42e024:	48 be 10 8b 44 00 00 	movabs $0x448b10,%rsi
  42e02b:	00 00 00 
  42e02e:	48 8b bd 90 fa ff ff 	mov    -0x570(%rbp),%rdi
  42e035:	b8 16 00 00 00       	mov    $0x16,%eax
  42e03a:	89 c2                	mov    %eax,%edx
  42e03c:	e8 8f 31 fd ff       	callq  4011d0 <memcmp@plt>
  42e041:	83 f8 00             	cmp    $0x0,%eax
  42e044:	0f 85 b7 03 00 00    	jne    42e401 <mbedtls_pem_read_buffer+0x811>
  42e04a:	8b 85 a8 fa ff ff    	mov    -0x558(%rbp),%eax
  42e050:	83 c0 01             	add    $0x1,%eax
  42e053:	89 85 a8 fa ff ff    	mov    %eax,-0x558(%rbp)
  42e059:	48 8b 8d 90 fa ff ff 	mov    -0x570(%rbp),%rcx
  42e060:	48 83 c1 16          	add    $0x16,%rcx
  42e064:	48 89 8d 90 fa ff ff 	mov    %rcx,-0x570(%rbp)
  42e06b:	48 8b 8d 90 fa ff ff 	mov    -0x570(%rbp),%rcx
  42e072:	0f b6 01             	movzbl (%rcx),%eax
  42e075:	83 f8 0d             	cmp    $0xd,%eax
  42e078:	75 12                	jne    42e08c <mbedtls_pem_read_buffer+0x49c>
  42e07a:	48 8b 85 90 fa ff ff 	mov    -0x570(%rbp),%rax
  42e081:	48 83 c0 01          	add    $0x1,%rax
  42e085:	48 89 85 90 fa ff ff 	mov    %rax,-0x570(%rbp)
  42e08c:	48 8b 85 90 fa ff ff 	mov    -0x570(%rbp),%rax
  42e093:	0f b6 08             	movzbl (%rax),%ecx
  42e096:	83 f9 0a             	cmp    $0xa,%ecx
  42e099:	75 14                	jne    42e0af <mbedtls_pem_read_buffer+0x4bf>
  42e09b:	48 8b 85 90 fa ff ff 	mov    -0x570(%rbp),%rax
  42e0a2:	48 83 c0 01          	add    $0x1,%rax
  42e0a6:	48 89 85 90 fa ff ff 	mov    %rax,-0x570(%rbp)
  42e0ad:	eb 0f                	jmp    42e0be <mbedtls_pem_read_buffer+0x4ce>
  42e0af:	c7 85 e4 fa ff ff 00 	movl   $0xffffef00,-0x51c(%rbp)
  42e0b6:	ef ff ff 
  42e0b9:	e9 33 0a 00 00       	jmpq   42eaf1 <mbedtls_pem_read_buffer+0xf01>
  42e0be:	48 8b 85 88 fa ff ff 	mov    -0x578(%rbp),%rax
  42e0c5:	48 8b 8d 90 fa ff ff 	mov    -0x570(%rbp),%rcx
  42e0cc:	48 29 c8             	sub    %rcx,%rax
  42e0cf:	48 83 f8 17          	cmp    $0x17,%rax
  42e0d3:	0f 8c 9a 00 00 00    	jl     42e173 <mbedtls_pem_read_buffer+0x583>
  42e0d9:	48 be 30 8b 44 00 00 	movabs $0x448b30,%rsi
  42e0e0:	00 00 00 
  42e0e3:	48 8b bd 90 fa ff ff 	mov    -0x570(%rbp),%rdi
  42e0ea:	b8 17 00 00 00       	mov    $0x17,%eax
  42e0ef:	89 c2                	mov    %eax,%edx
  42e0f1:	e8 da 30 fd ff       	callq  4011d0 <memcmp@plt>
  42e0f6:	83 f8 00             	cmp    $0x0,%eax
  42e0f9:	75 78                	jne    42e173 <mbedtls_pem_read_buffer+0x583>
  42e0fb:	c7 85 6c fa ff ff 25 	movl   $0x25,-0x594(%rbp)
  42e102:	00 00 00 
  42e105:	48 8b 85 90 fa ff ff 	mov    -0x570(%rbp),%rax
  42e10c:	48 83 c0 17          	add    $0x17,%rax
  42e110:	48 89 85 90 fa ff ff 	mov    %rax,-0x570(%rbp)
  42e117:	48 8b 85 88 fa ff ff 	mov    -0x578(%rbp),%rax
  42e11e:	48 8b 8d 90 fa ff ff 	mov    -0x570(%rbp),%rcx
  42e125:	48 29 c8             	sub    %rcx,%rax
  42e128:	48 83 f8 10          	cmp    $0x10,%rax
  42e12c:	7c 1f                	jl     42e14d <mbedtls_pem_read_buffer+0x55d>
  42e12e:	b8 08 00 00 00       	mov    $0x8,%eax
  42e133:	89 c2                	mov    %eax,%edx
  42e135:	48 8d b5 70 fa ff ff 	lea    -0x590(%rbp),%rsi
  42e13c:	48 8b bd 90 fa ff ff 	mov    -0x570(%rbp),%rdi
  42e143:	e8 d8 09 00 00       	callq  42eb20 <pem_get_iv>
  42e148:	83 f8 00             	cmp    $0x0,%eax
  42e14b:	74 0f                	je     42e15c <mbedtls_pem_read_buffer+0x56c>
  42e14d:	c7 85 e4 fa ff ff 00 	movl   $0xffffee00,-0x51c(%rbp)
  42e154:	ee ff ff 
  42e157:	e9 95 09 00 00       	jmpq   42eaf1 <mbedtls_pem_read_buffer+0xf01>
  42e15c:	48 8b 85 90 fa ff ff 	mov    -0x570(%rbp),%rax
  42e163:	48 83 c0 10          	add    $0x10,%rax
  42e167:	48 89 85 90 fa ff ff 	mov    %rax,-0x570(%rbp)
  42e16e:	e9 b2 00 00 00       	jmpq   42e225 <mbedtls_pem_read_buffer+0x635>
  42e173:	48 8b 85 88 fa ff ff 	mov    -0x578(%rbp),%rax
  42e17a:	48 8b 8d 90 fa ff ff 	mov    -0x570(%rbp),%rcx
  42e181:	48 29 c8             	sub    %rcx,%rax
  42e184:	48 83 f8 12          	cmp    $0x12,%rax
  42e188:	0f 8c 95 00 00 00    	jl     42e223 <mbedtls_pem_read_buffer+0x633>
  42e18e:	48 be 50 8b 44 00 00 	movabs $0x448b50,%rsi
  42e195:	00 00 00 
  42e198:	48 8b bd 90 fa ff ff 	mov    -0x570(%rbp),%rdi
  42e19f:	b8 12 00 00 00       	mov    $0x12,%eax
  42e1a4:	89 c2                	mov    %eax,%edx
  42e1a6:	e8 25 30 fd ff       	callq  4011d0 <memcmp@plt>
  42e1ab:	83 f8 00             	cmp    $0x0,%eax
  42e1ae:	75 73                	jne    42e223 <mbedtls_pem_read_buffer+0x633>
  42e1b0:	c7 85 6c fa ff ff 21 	movl   $0x21,-0x594(%rbp)
  42e1b7:	00 00 00 
  42e1ba:	48 8b 85 90 fa ff ff 	mov    -0x570(%rbp),%rax
  42e1c1:	48 83 c0 12          	add    $0x12,%rax
  42e1c5:	48 89 85 90 fa ff ff 	mov    %rax,-0x570(%rbp)
  42e1cc:	48 8b 85 88 fa ff ff 	mov    -0x578(%rbp),%rax
  42e1d3:	48 8b 8d 90 fa ff ff 	mov    -0x570(%rbp),%rcx
  42e1da:	48 29 c8             	sub    %rcx,%rax
  42e1dd:	48 83 f8 10          	cmp    $0x10,%rax
  42e1e1:	7c 1f                	jl     42e202 <mbedtls_pem_read_buffer+0x612>
  42e1e3:	b8 08 00 00 00       	mov    $0x8,%eax
  42e1e8:	89 c2                	mov    %eax,%edx
  42e1ea:	48 8d b5 70 fa ff ff 	lea    -0x590(%rbp),%rsi
  42e1f1:	48 8b bd 90 fa ff ff 	mov    -0x570(%rbp),%rdi
  42e1f8:	e8 23 09 00 00       	callq  42eb20 <pem_get_iv>
  42e1fd:	83 f8 00             	cmp    $0x0,%eax
  42e200:	74 0f                	je     42e211 <mbedtls_pem_read_buffer+0x621>
  42e202:	c7 85 e4 fa ff ff 00 	movl   $0xffffee00,-0x51c(%rbp)
  42e209:	ee ff ff 
  42e20c:	e9 e0 08 00 00       	jmpq   42eaf1 <mbedtls_pem_read_buffer+0xf01>
  42e211:	48 8b 85 90 fa ff ff 	mov    -0x570(%rbp),%rax
  42e218:	48 83 c0 10          	add    $0x10,%rax
  42e21c:	48 89 85 90 fa ff ff 	mov    %rax,-0x570(%rbp)
  42e223:	eb 00                	jmp    42e225 <mbedtls_pem_read_buffer+0x635>
  42e225:	48 8b 85 88 fa ff ff 	mov    -0x578(%rbp),%rax
  42e22c:	48 8b 8d 90 fa ff ff 	mov    -0x570(%rbp),%rcx
  42e233:	48 29 c8             	sub    %rcx,%rax
  42e236:	48 83 f8 0e          	cmp    $0xe,%rax
  42e23a:	0f 8c 54 01 00 00    	jl     42e394 <mbedtls_pem_read_buffer+0x7a4>
  42e240:	48 be 70 8b 44 00 00 	movabs $0x448b70,%rsi
  42e247:	00 00 00 
  42e24a:	48 8b bd 90 fa ff ff 	mov    -0x570(%rbp),%rdi
  42e251:	b8 0e 00 00 00       	mov    $0xe,%eax
  42e256:	89 c2                	mov    %eax,%edx
  42e258:	e8 73 2f fd ff       	callq  4011d0 <memcmp@plt>
  42e25d:	83 f8 00             	cmp    $0x0,%eax
  42e260:	0f 85 2e 01 00 00    	jne    42e394 <mbedtls_pem_read_buffer+0x7a4>
  42e266:	48 8b 85 88 fa ff ff 	mov    -0x578(%rbp),%rax
  42e26d:	48 8b 8d 90 fa ff ff 	mov    -0x570(%rbp),%rcx
  42e274:	48 29 c8             	sub    %rcx,%rax
  42e277:	48 83 f8 16          	cmp    $0x16,%rax
  42e27b:	7d 0f                	jge    42e28c <mbedtls_pem_read_buffer+0x69c>
  42e27d:	c7 85 e4 fa ff ff 80 	movl   $0xffffed80,-0x51c(%rbp)
  42e284:	ed ff ff 
  42e287:	e9 65 08 00 00       	jmpq   42eaf1 <mbedtls_pem_read_buffer+0xf01>
  42e28c:	48 be 80 8b 44 00 00 	movabs $0x448b80,%rsi
  42e293:	00 00 00 
  42e296:	48 8b bd 90 fa ff ff 	mov    -0x570(%rbp),%rdi
  42e29d:	b8 16 00 00 00       	mov    $0x16,%eax
  42e2a2:	89 c2                	mov    %eax,%edx
  42e2a4:	e8 27 2f fd ff       	callq  4011d0 <memcmp@plt>
  42e2a9:	83 f8 00             	cmp    $0x0,%eax
  42e2ac:	75 0c                	jne    42e2ba <mbedtls_pem_read_buffer+0x6ca>
  42e2ae:	c7 85 6c fa ff ff 05 	movl   $0x5,-0x594(%rbp)
  42e2b5:	00 00 00 
  42e2b8:	eb 6f                	jmp    42e329 <mbedtls_pem_read_buffer+0x739>
  42e2ba:	48 be a0 8b 44 00 00 	movabs $0x448ba0,%rsi
  42e2c1:	00 00 00 
  42e2c4:	48 8b bd 90 fa ff ff 	mov    -0x570(%rbp),%rdi
  42e2cb:	b8 16 00 00 00       	mov    $0x16,%eax
  42e2d0:	89 c2                	mov    %eax,%edx
  42e2d2:	e8 f9 2e fd ff       	callq  4011d0 <memcmp@plt>
  42e2d7:	83 f8 00             	cmp    $0x0,%eax
  42e2da:	75 0c                	jne    42e2e8 <mbedtls_pem_read_buffer+0x6f8>
  42e2dc:	c7 85 6c fa ff ff 06 	movl   $0x6,-0x594(%rbp)
  42e2e3:	00 00 00 
  42e2e6:	eb 3f                	jmp    42e327 <mbedtls_pem_read_buffer+0x737>
  42e2e8:	48 be c0 8b 44 00 00 	movabs $0x448bc0,%rsi
  42e2ef:	00 00 00 
  42e2f2:	48 8b bd 90 fa ff ff 	mov    -0x570(%rbp),%rdi
  42e2f9:	b8 16 00 00 00       	mov    $0x16,%eax
  42e2fe:	89 c2                	mov    %eax,%edx
  42e300:	e8 cb 2e fd ff       	callq  4011d0 <memcmp@plt>
  42e305:	83 f8 00             	cmp    $0x0,%eax
  42e308:	75 0c                	jne    42e316 <mbedtls_pem_read_buffer+0x726>
  42e30a:	c7 85 6c fa ff ff 07 	movl   $0x7,-0x594(%rbp)
  42e311:	00 00 00 
  42e314:	eb 0f                	jmp    42e325 <mbedtls_pem_read_buffer+0x735>
  42e316:	c7 85 e4 fa ff ff 80 	movl   $0xffffed80,-0x51c(%rbp)
  42e31d:	ed ff ff 
  42e320:	e9 cc 07 00 00       	jmpq   42eaf1 <mbedtls_pem_read_buffer+0xf01>
  42e325:	eb 00                	jmp    42e327 <mbedtls_pem_read_buffer+0x737>
  42e327:	eb 00                	jmp    42e329 <mbedtls_pem_read_buffer+0x739>
  42e329:	eb 00                	jmp    42e32b <mbedtls_pem_read_buffer+0x73b>
  42e32b:	48 8b 85 90 fa ff ff 	mov    -0x570(%rbp),%rax
  42e332:	48 83 c0 16          	add    $0x16,%rax
  42e336:	48 89 85 90 fa ff ff 	mov    %rax,-0x570(%rbp)
  42e33d:	48 8b 85 88 fa ff ff 	mov    -0x578(%rbp),%rax
  42e344:	48 8b 8d 90 fa ff ff 	mov    -0x570(%rbp),%rcx
  42e34b:	48 29 c8             	sub    %rcx,%rax
  42e34e:	48 83 f8 20          	cmp    $0x20,%rax
  42e352:	7c 1f                	jl     42e373 <mbedtls_pem_read_buffer+0x783>
  42e354:	b8 10 00 00 00       	mov    $0x10,%eax
  42e359:	89 c2                	mov    %eax,%edx
  42e35b:	48 8d b5 70 fa ff ff 	lea    -0x590(%rbp),%rsi
  42e362:	48 8b bd 90 fa ff ff 	mov    -0x570(%rbp),%rdi
  42e369:	e8 b2 07 00 00       	callq  42eb20 <pem_get_iv>
  42e36e:	83 f8 00             	cmp    $0x0,%eax
  42e371:	74 0f                	je     42e382 <mbedtls_pem_read_buffer+0x792>
  42e373:	c7 85 e4 fa ff ff 00 	movl   $0xffffee00,-0x51c(%rbp)
  42e37a:	ee ff ff 
  42e37d:	e9 6f 07 00 00       	jmpq   42eaf1 <mbedtls_pem_read_buffer+0xf01>
  42e382:	48 8b 85 90 fa ff ff 	mov    -0x570(%rbp),%rax
  42e389:	48 83 c0 20          	add    $0x20,%rax
  42e38d:	48 89 85 90 fa ff ff 	mov    %rax,-0x570(%rbp)
  42e394:	83 bd 6c fa ff ff 00 	cmpl   $0x0,-0x594(%rbp)
  42e39b:	75 0f                	jne    42e3ac <mbedtls_pem_read_buffer+0x7bc>
  42e39d:	c7 85 e4 fa ff ff 80 	movl   $0xffffed80,-0x51c(%rbp)
  42e3a4:	ed ff ff 
  42e3a7:	e9 45 07 00 00       	jmpq   42eaf1 <mbedtls_pem_read_buffer+0xf01>
  42e3ac:	48 8b 85 90 fa ff ff 	mov    -0x570(%rbp),%rax
  42e3b3:	0f b6 08             	movzbl (%rax),%ecx
  42e3b6:	83 f9 0d             	cmp    $0xd,%ecx
  42e3b9:	75 12                	jne    42e3cd <mbedtls_pem_read_buffer+0x7dd>
  42e3bb:	48 8b 85 90 fa ff ff 	mov    -0x570(%rbp),%rax
  42e3c2:	48 83 c0 01          	add    $0x1,%rax
  42e3c6:	48 89 85 90 fa ff ff 	mov    %rax,-0x570(%rbp)
  42e3cd:	48 8b 85 90 fa ff ff 	mov    -0x570(%rbp),%rax
  42e3d4:	0f b6 08             	movzbl (%rax),%ecx
  42e3d7:	83 f9 0a             	cmp    $0xa,%ecx
  42e3da:	75 14                	jne    42e3f0 <mbedtls_pem_read_buffer+0x800>
  42e3dc:	48 8b 85 90 fa ff ff 	mov    -0x570(%rbp),%rax
  42e3e3:	48 83 c0 01          	add    $0x1,%rax
  42e3e7:	48 89 85 90 fa ff ff 	mov    %rax,-0x570(%rbp)
  42e3ee:	eb 0f                	jmp    42e3ff <mbedtls_pem_read_buffer+0x80f>
  42e3f0:	c7 85 e4 fa ff ff 00 	movl   $0xffffef00,-0x51c(%rbp)
  42e3f7:	ef ff ff 
  42e3fa:	e9 f2 06 00 00       	jmpq   42eaf1 <mbedtls_pem_read_buffer+0xf01>
  42e3ff:	eb 00                	jmp    42e401 <mbedtls_pem_read_buffer+0x811>
  42e401:	48 8b 85 90 fa ff ff 	mov    -0x570(%rbp),%rax
  42e408:	48 3b 85 88 fa ff ff 	cmp    -0x578(%rbp),%rax
  42e40f:	72 0f                	jb     42e420 <mbedtls_pem_read_buffer+0x830>
  42e411:	c7 85 e4 fa ff ff 00 	movl   $0xffffef00,-0x51c(%rbp)
  42e418:	ef ff ff 
  42e41b:	e9 d1 06 00 00       	jmpq   42eaf1 <mbedtls_pem_read_buffer+0xf01>
  42e420:	31 c0                	xor    %eax,%eax
  42e422:	89 c1                	mov    %eax,%ecx
  42e424:	48 8b 95 90 fa ff ff 	mov    -0x570(%rbp),%rdx
  42e42b:	48 8b b5 88 fa ff ff 	mov    -0x578(%rbp),%rsi
  42e432:	48 8b bd 90 fa ff ff 	mov    -0x570(%rbp),%rdi
  42e439:	48 29 fe             	sub    %rdi,%rsi
  42e43c:	48 89 cf             	mov    %rcx,%rdi
  42e43f:	48 89 b5 50 fa ff ff 	mov    %rsi,-0x5b0(%rbp)
  42e446:	48 89 ce             	mov    %rcx,%rsi
  42e449:	48 8d 8d a0 fa ff ff 	lea    -0x560(%rbp),%rcx
  42e450:	48 89 95 48 fa ff ff 	mov    %rdx,-0x5b8(%rbp)
  42e457:	48 89 ca             	mov    %rcx,%rdx
  42e45a:	48 8b 8d 48 fa ff ff 	mov    -0x5b8(%rbp),%rcx
  42e461:	4c 8b 85 50 fa ff ff 	mov    -0x5b0(%rbp),%r8
  42e468:	e8 e3 68 01 00       	callq  444d50 <mbedtls_base64_decode>
  42e46d:	89 85 ac fa ff ff    	mov    %eax,-0x554(%rbp)
  42e473:	83 bd ac fa ff ff d4 	cmpl   $0xffffffd4,-0x554(%rbp)
  42e47a:	75 16                	jne    42e492 <mbedtls_pem_read_buffer+0x8a2>
  42e47c:	8b 85 ac fa ff ff    	mov    -0x554(%rbp),%eax
  42e482:	05 00 ef ff ff       	add    $0xffffef00,%eax
  42e487:	89 85 e4 fa ff ff    	mov    %eax,-0x51c(%rbp)
  42e48d:	e9 5f 06 00 00       	jmpq   42eaf1 <mbedtls_pem_read_buffer+0xf01>
  42e492:	b8 01 00 00 00       	mov    $0x1,%eax
  42e497:	89 c7                	mov    %eax,%edi
  42e499:	48 8b b5 a0 fa ff ff 	mov    -0x560(%rbp),%rsi
  42e4a0:	e8 45 83 01 00       	callq  4467ea <aes_calloc>
  42e4a5:	48 89 85 98 fa ff ff 	mov    %rax,-0x568(%rbp)
  42e4ac:	48 83 f8 00          	cmp    $0x0,%rax
  42e4b0:	75 0f                	jne    42e4c1 <mbedtls_pem_read_buffer+0x8d1>
  42e4b2:	c7 85 e4 fa ff ff 80 	movl   $0xffffee80,-0x51c(%rbp)
  42e4b9:	ee ff ff 
  42e4bc:	e9 30 06 00 00       	jmpq   42eaf1 <mbedtls_pem_read_buffer+0xf01>
  42e4c1:	48 8b bd 98 fa ff ff 	mov    -0x568(%rbp),%rdi
  42e4c8:	48 8b b5 a0 fa ff ff 	mov    -0x560(%rbp),%rsi
  42e4cf:	48 8b 8d 90 fa ff ff 	mov    -0x570(%rbp),%rcx
  42e4d6:	48 8b 85 88 fa ff ff 	mov    -0x578(%rbp),%rax
  42e4dd:	48 8b 95 90 fa ff ff 	mov    -0x570(%rbp),%rdx
  42e4e4:	48 29 d0             	sub    %rdx,%rax
  42e4e7:	48 8d 95 a0 fa ff ff 	lea    -0x560(%rbp),%rdx
  42e4ee:	49 89 c0             	mov    %rax,%r8
  42e4f1:	e8 5a 68 01 00       	callq  444d50 <mbedtls_base64_decode>
  42e4f6:	89 85 ac fa ff ff    	mov    %eax,-0x554(%rbp)
  42e4fc:	83 f8 00             	cmp    $0x0,%eax
  42e4ff:	74 60                	je     42e561 <mbedtls_pem_read_buffer+0x971>
  42e501:	31 f6                	xor    %esi,%esi
  42e503:	48 8b 85 98 fa ff ff 	mov    -0x568(%rbp),%rax
  42e50a:	48 8b 8d a0 fa ff ff 	mov    -0x560(%rbp),%rcx
  42e511:	48 89 85 50 fb ff ff 	mov    %rax,-0x4b0(%rbp)
  42e518:	48 89 8d 48 fb ff ff 	mov    %rcx,-0x4b8(%rbp)
  42e51f:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  42e526:	00 
  42e527:	48 8b bd 50 fb ff ff 	mov    -0x4b0(%rbp),%rdi
  42e52e:	48 8b 95 48 fb ff ff 	mov    -0x4b8(%rbp),%rdx
  42e535:	ff d0                	callq  *%rax
  42e537:	48 8b bd 98 fa ff ff 	mov    -0x568(%rbp),%rdi
  42e53e:	48 89 85 40 fa ff ff 	mov    %rax,-0x5c0(%rbp)
  42e545:	e8 96 2b fd ff       	callq  4010e0 <free@plt>
  42e54a:	8b b5 ac fa ff ff    	mov    -0x554(%rbp),%esi
  42e550:	81 c6 00 ef ff ff    	add    $0xffffef00,%esi
  42e556:	89 b5 e4 fa ff ff    	mov    %esi,-0x51c(%rbp)
  42e55c:	e9 90 05 00 00       	jmpq   42eaf1 <mbedtls_pem_read_buffer+0xf01>
  42e561:	83 bd a8 fa ff ff 00 	cmpl   $0x0,-0x558(%rbp)
  42e568:	0f 84 56 05 00 00    	je     42eac4 <mbedtls_pem_read_buffer+0xed4>
  42e56e:	48 83 bd b8 fa ff ff 	cmpq   $0x0,-0x548(%rbp)
  42e575:	00 
  42e576:	75 58                	jne    42e5d0 <mbedtls_pem_read_buffer+0x9e0>
  42e578:	31 f6                	xor    %esi,%esi
  42e57a:	48 8b 85 98 fa ff ff 	mov    -0x568(%rbp),%rax
  42e581:	48 8b 8d a0 fa ff ff 	mov    -0x560(%rbp),%rcx
  42e588:	48 89 85 60 fb ff ff 	mov    %rax,-0x4a0(%rbp)
  42e58f:	48 89 8d 58 fb ff ff 	mov    %rcx,-0x4a8(%rbp)
  42e596:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  42e59d:	00 
  42e59e:	48 8b bd 60 fb ff ff 	mov    -0x4a0(%rbp),%rdi
  42e5a5:	48 8b 95 58 fb ff ff 	mov    -0x4a8(%rbp),%rdx
  42e5ac:	ff d0                	callq  *%rax
  42e5ae:	48 8b bd 98 fa ff ff 	mov    -0x568(%rbp),%rdi
  42e5b5:	48 89 85 38 fa ff ff 	mov    %rax,-0x5c8(%rbp)
  42e5bc:	e8 1f 2b fd ff       	callq  4010e0 <free@plt>
  42e5c1:	c7 85 e4 fa ff ff 00 	movl   $0xffffed00,-0x51c(%rbp)
  42e5c8:	ed ff ff 
  42e5cb:	e9 21 05 00 00       	jmpq   42eaf1 <mbedtls_pem_read_buffer+0xf01>
  42e5d0:	c7 85 ac fa ff ff 00 	movl   $0x0,-0x554(%rbp)
  42e5d7:	00 00 00 
  42e5da:	83 bd 6c fa ff ff 25 	cmpl   $0x25,-0x594(%rbp)
  42e5e1:	0f 85 0b 02 00 00    	jne    42e7f2 <mbedtls_pem_read_buffer+0xc02>
  42e5e7:	b8 18 00 00 00       	mov    $0x18,%eax
  42e5ec:	89 c6                	mov    %eax,%esi
  42e5ee:	48 8d bd 70 fb ff ff 	lea    -0x490(%rbp),%rdi
  42e5f5:	31 c0                	xor    %eax,%eax
  42e5f7:	b9 80 01 00 00       	mov    $0x180,%ecx
  42e5fc:	89 ca                	mov    %ecx,%edx
  42e5fe:	4c 8d 85 70 fa ff ff 	lea    -0x590(%rbp),%r8
  42e605:	4c 8b 8d 98 fa ff ff 	mov    -0x568(%rbp),%r9
  42e60c:	4c 8b 95 a0 fa ff ff 	mov    -0x560(%rbp),%r10
  42e613:	4c 8b 9d b8 fa ff ff 	mov    -0x548(%rbp),%r11
  42e61a:	48 8b 9d b0 fa ff ff 	mov    -0x550(%rbp),%rbx
  42e621:	4c 89 85 30 fd ff ff 	mov    %r8,-0x2d0(%rbp)
  42e628:	4c 89 8d 28 fd ff ff 	mov    %r9,-0x2d8(%rbp)
  42e62f:	4c 89 95 20 fd ff ff 	mov    %r10,-0x2e0(%rbp)
  42e636:	4c 89 9d 18 fd ff ff 	mov    %r11,-0x2e8(%rbp)
  42e63d:	48 89 9d 10 fd ff ff 	mov    %rbx,-0x2f0(%rbp)
  42e644:	4c 8d 85 90 fb ff ff 	lea    -0x470(%rbp),%r8
  42e64b:	4c 89 85 38 fd ff ff 	mov    %r8,-0x2c8(%rbp)
  42e652:	4c 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%r8
  42e659:	48 89 bd 30 fa ff ff 	mov    %rdi,-0x5d0(%rbp)
  42e660:	4c 89 c7             	mov    %r8,%rdi
  42e663:	48 89 b5 28 fa ff ff 	mov    %rsi,-0x5d8(%rbp)
  42e66a:	89 c6                	mov    %eax,%esi
  42e66c:	e8 af 29 fd ff       	callq  401020 <memset@plt>
  42e671:	48 8b 95 30 fd ff ff 	mov    -0x2d0(%rbp),%rdx
  42e678:	48 8b 8d 18 fd ff ff 	mov    -0x2e8(%rbp),%rcx
  42e67f:	4c 8b 85 10 fd ff ff 	mov    -0x2f0(%rbp),%r8
  42e686:	48 8b bd 30 fa ff ff 	mov    -0x5d0(%rbp),%rdi
  42e68d:	48 8b b5 28 fa ff ff 	mov    -0x5d8(%rbp),%rsi
  42e694:	e8 47 07 00 00       	callq  42ede0 <pem_pbkdf1>
  42e699:	89 85 6c fb ff ff    	mov    %eax,-0x494(%rbp)
  42e69f:	83 f8 00             	cmp    $0x0,%eax
  42e6a2:	74 05                	je     42e6a9 <mbedtls_pem_read_buffer+0xab9>
  42e6a4:	e9 aa 00 00 00       	jmpq   42e753 <mbedtls_pem_read_buffer+0xb63>
  42e6a9:	48 8d bd 50 fd ff ff 	lea    -0x2b0(%rbp),%rdi
  42e6b0:	48 8d 85 70 fb ff ff 	lea    -0x490(%rbp),%rax
  42e6b7:	48 8d 8d 90 fb ff ff 	lea    -0x470(%rbp),%rcx
  42e6be:	48 89 8d e0 fe ff ff 	mov    %rcx,-0x120(%rbp)
  42e6c5:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
  42e6cc:	48 8b b5 e0 fe ff ff 	mov    -0x120(%rbp),%rsi
  42e6d3:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
  42e6da:	e8 91 ac ff ff       	callq  429370 <des3_set3key>
  42e6df:	31 f6                	xor    %esi,%esi
  42e6e1:	48 8d 85 50 fd ff ff 	lea    -0x2b0(%rbp),%rax
  42e6e8:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
  42e6ef:	48 c7 85 e8 fe ff ff 	movq   $0x180,-0x118(%rbp)
  42e6f6:	80 01 00 00 
  42e6fa:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  42e701:	00 
  42e702:	48 8b bd f0 fe ff ff 	mov    -0x110(%rbp),%rdi
  42e709:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
  42e710:	ff d0                	callq  *%rax
  42e712:	31 f6                	xor    %esi,%esi
  42e714:	c7 85 6c fb ff ff 00 	movl   $0x0,-0x494(%rbp)
  42e71b:	00 00 00 
  42e71e:	48 8b 95 20 fd ff ff 	mov    -0x2e0(%rbp),%rdx
  42e725:	48 8b 8d 30 fd ff ff 	mov    -0x2d0(%rbp),%rcx
  42e72c:	4c 8b 85 28 fd ff ff 	mov    -0x2d8(%rbp),%r8
  42e733:	4c 8b 8d 28 fd ff ff 	mov    -0x2d8(%rbp),%r9
  42e73a:	48 8d bd 90 fb ff ff 	lea    -0x470(%rbp),%rdi
  42e741:	48 89 85 20 fa ff ff 	mov    %rax,-0x5e0(%rbp)
  42e748:	e8 13 bc ff ff       	callq  42a360 <mbedtls_des3_crypt_cbc>
  42e74d:	89 85 6c fb ff ff    	mov    %eax,-0x494(%rbp)
  42e753:	48 8d 85 90 fb ff ff 	lea    -0x470(%rbp),%rax
  42e75a:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
  42e761:	48 83 bd f8 fe ff ff 	cmpq   $0x0,-0x108(%rbp)
  42e768:	00 
  42e769:	75 02                	jne    42e76d <mbedtls_pem_read_buffer+0xb7d>
  42e76b:	eb 3a                	jmp    42e7a7 <mbedtls_pem_read_buffer+0xbb7>
  42e76d:	31 f6                	xor    %esi,%esi
  42e76f:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  42e776:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
  42e77d:	48 c7 85 00 ff ff ff 	movq   $0x180,-0x100(%rbp)
  42e784:	80 01 00 00 
  42e788:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  42e78f:	00 
  42e790:	48 8b bd 08 ff ff ff 	mov    -0xf8(%rbp),%rdi
  42e797:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
  42e79e:	ff d0                	callq  *%rax
  42e7a0:	48 89 85 18 fa ff ff 	mov    %rax,-0x5e8(%rbp)
  42e7a7:	31 f6                	xor    %esi,%esi
  42e7a9:	48 8d 85 70 fb ff ff 	lea    -0x490(%rbp),%rax
  42e7b0:	48 89 85 48 fd ff ff 	mov    %rax,-0x2b8(%rbp)
  42e7b7:	48 c7 85 40 fd ff ff 	movq   $0x18,-0x2c0(%rbp)
  42e7be:	18 00 00 00 
  42e7c2:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  42e7c9:	00 
  42e7ca:	48 8b bd 48 fd ff ff 	mov    -0x2b8(%rbp),%rdi
  42e7d1:	48 8b 95 40 fd ff ff 	mov    -0x2c0(%rbp),%rdx
  42e7d8:	ff d0                	callq  *%rax
  42e7da:	8b b5 6c fb ff ff    	mov    -0x494(%rbp),%esi
  42e7e0:	89 b5 ac fa ff ff    	mov    %esi,-0x554(%rbp)
  42e7e6:	48 89 85 10 fa ff ff 	mov    %rax,-0x5f0(%rbp)
  42e7ed:	e9 6d 01 00 00       	jmpq   42e95f <mbedtls_pem_read_buffer+0xd6f>
  42e7f2:	83 bd 6c fa ff ff 21 	cmpl   $0x21,-0x594(%rbp)
  42e7f9:	0f 85 5e 01 00 00    	jne    42e95d <mbedtls_pem_read_buffer+0xd6d>
  42e7ff:	b8 08 00 00 00       	mov    $0x8,%eax
  42e804:	89 c6                	mov    %eax,%esi
  42e806:	48 8d bd 18 ff ff ff 	lea    -0xe8(%rbp),%rdi
  42e80d:	31 c0                	xor    %eax,%eax
  42e80f:	b9 80 00 00 00       	mov    $0x80,%ecx
  42e814:	89 ca                	mov    %ecx,%edx
  42e816:	4c 8d 85 70 fa ff ff 	lea    -0x590(%rbp),%r8
  42e81d:	4c 8b 8d 98 fa ff ff 	mov    -0x568(%rbp),%r9
  42e824:	4c 8b 95 a0 fa ff ff 	mov    -0x560(%rbp),%r10
  42e82b:	4c 8b 9d b8 fa ff ff 	mov    -0x548(%rbp),%r11
  42e832:	48 8b 9d b0 fa ff ff 	mov    -0x550(%rbp),%rbx
  42e839:	4c 89 45 c0          	mov    %r8,-0x40(%rbp)
  42e83d:	4c 89 4d b8          	mov    %r9,-0x48(%rbp)
  42e841:	4c 89 55 b0          	mov    %r10,-0x50(%rbp)
  42e845:	4c 89 5d a8          	mov    %r11,-0x58(%rbp)
  42e849:	48 89 5d a0          	mov    %rbx,-0x60(%rbp)
  42e84d:	4c 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%r8
  42e854:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
  42e858:	4c 8b 45 c8          	mov    -0x38(%rbp),%r8
  42e85c:	48 89 bd 08 fa ff ff 	mov    %rdi,-0x5f8(%rbp)
  42e863:	4c 89 c7             	mov    %r8,%rdi
  42e866:	48 89 b5 00 fa ff ff 	mov    %rsi,-0x600(%rbp)
  42e86d:	89 c6                	mov    %eax,%esi
  42e86f:	e8 ac 27 fd ff       	callq  401020 <memset@plt>
  42e874:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  42e878:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
  42e87c:	4c 8b 45 a0          	mov    -0x60(%rbp),%r8
  42e880:	48 8b bd 08 fa ff ff 	mov    -0x5f8(%rbp),%rdi
  42e887:	48 8b b5 00 fa ff ff 	mov    -0x600(%rbp),%rsi
  42e88e:	e8 4d 05 00 00       	callq  42ede0 <pem_pbkdf1>
  42e893:	89 85 14 ff ff ff    	mov    %eax,-0xec(%rbp)
  42e899:	83 f8 00             	cmp    $0x0,%eax
  42e89c:	74 02                	je     42e8a0 <mbedtls_pem_read_buffer+0xcb0>
  42e89e:	eb 44                	jmp    42e8e4 <mbedtls_pem_read_buffer+0xcf4>
  42e8a0:	48 8d b5 18 ff ff ff 	lea    -0xe8(%rbp),%rsi
  42e8a7:	48 8d bd 20 ff ff ff 	lea    -0xe0(%rbp),%rdi
  42e8ae:	e8 7d a8 ff ff       	callq  429130 <mbedtls_des_setkey_dec>
  42e8b3:	89 85 14 ff ff ff    	mov    %eax,-0xec(%rbp)
  42e8b9:	83 f8 00             	cmp    $0x0,%eax
  42e8bc:	74 02                	je     42e8c0 <mbedtls_pem_read_buffer+0xcd0>
  42e8be:	eb 24                	jmp    42e8e4 <mbedtls_pem_read_buffer+0xcf4>
  42e8c0:	31 f6                	xor    %esi,%esi
  42e8c2:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
  42e8c6:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  42e8ca:	4c 8b 45 b8          	mov    -0x48(%rbp),%r8
  42e8ce:	4c 8b 4d b8          	mov    -0x48(%rbp),%r9
  42e8d2:	48 8d bd 20 ff ff ff 	lea    -0xe0(%rbp),%rdi
  42e8d9:	e8 82 b0 ff ff       	callq  429960 <mbedtls_des_crypt_cbc>
  42e8de:	89 85 14 ff ff ff    	mov    %eax,-0xec(%rbp)
  42e8e4:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  42e8eb:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  42e8ef:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  42e8f4:	75 02                	jne    42e8f8 <mbedtls_pem_read_buffer+0xd08>
  42e8f6:	eb 2b                	jmp    42e923 <mbedtls_pem_read_buffer+0xd33>
  42e8f8:	31 f6                	xor    %esi,%esi
  42e8fa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42e8fe:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42e902:	48 c7 45 e8 80 00 00 	movq   $0x80,-0x18(%rbp)
  42e909:	00 
  42e90a:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  42e911:	00 
  42e912:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  42e916:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  42e91a:	ff d0                	callq  *%rax
  42e91c:	48 89 85 f8 f9 ff ff 	mov    %rax,-0x608(%rbp)
  42e923:	31 f6                	xor    %esi,%esi
  42e925:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
  42e92c:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  42e930:	48 c7 45 d0 08 00 00 	movq   $0x8,-0x30(%rbp)
  42e937:	00 
  42e938:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  42e93f:	00 
  42e940:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  42e944:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  42e948:	ff d0                	callq  *%rax
  42e94a:	8b b5 14 ff ff ff    	mov    -0xec(%rbp),%esi
  42e950:	89 b5 ac fa ff ff    	mov    %esi,-0x554(%rbp)
  42e956:	48 89 85 f0 f9 ff ff 	mov    %rax,-0x610(%rbp)
  42e95d:	eb 00                	jmp    42e95f <mbedtls_pem_read_buffer+0xd6f>
  42e95f:	83 bd 6c fa ff ff 05 	cmpl   $0x5,-0x594(%rbp)
  42e966:	75 35                	jne    42e99d <mbedtls_pem_read_buffer+0xdad>
  42e968:	48 8d bd 70 fa ff ff 	lea    -0x590(%rbp),%rdi
  42e96f:	48 8b 95 98 fa ff ff 	mov    -0x568(%rbp),%rdx
  42e976:	48 8b 8d a0 fa ff ff 	mov    -0x560(%rbp),%rcx
  42e97d:	4c 8b 85 b8 fa ff ff 	mov    -0x548(%rbp),%r8
  42e984:	4c 8b 8d b0 fa ff ff 	mov    -0x550(%rbp),%r9
  42e98b:	be 10 00 00 00       	mov    $0x10,%esi
  42e990:	e8 eb 02 00 00       	callq  42ec80 <pem_aes_decrypt>
  42e995:	89 85 ac fa ff ff    	mov    %eax,-0x554(%rbp)
  42e99b:	eb 7e                	jmp    42ea1b <mbedtls_pem_read_buffer+0xe2b>
  42e99d:	83 bd 6c fa ff ff 06 	cmpl   $0x6,-0x594(%rbp)
  42e9a4:	75 35                	jne    42e9db <mbedtls_pem_read_buffer+0xdeb>
  42e9a6:	48 8d bd 70 fa ff ff 	lea    -0x590(%rbp),%rdi
  42e9ad:	48 8b 95 98 fa ff ff 	mov    -0x568(%rbp),%rdx
  42e9b4:	48 8b 8d a0 fa ff ff 	mov    -0x560(%rbp),%rcx
  42e9bb:	4c 8b 85 b8 fa ff ff 	mov    -0x548(%rbp),%r8
  42e9c2:	4c 8b 8d b0 fa ff ff 	mov    -0x550(%rbp),%r9
  42e9c9:	be 18 00 00 00       	mov    $0x18,%esi
  42e9ce:	e8 ad 02 00 00       	callq  42ec80 <pem_aes_decrypt>
  42e9d3:	89 85 ac fa ff ff    	mov    %eax,-0x554(%rbp)
  42e9d9:	eb 3e                	jmp    42ea19 <mbedtls_pem_read_buffer+0xe29>
  42e9db:	83 bd 6c fa ff ff 07 	cmpl   $0x7,-0x594(%rbp)
  42e9e2:	75 33                	jne    42ea17 <mbedtls_pem_read_buffer+0xe27>
  42e9e4:	48 8d bd 70 fa ff ff 	lea    -0x590(%rbp),%rdi
  42e9eb:	48 8b 95 98 fa ff ff 	mov    -0x568(%rbp),%rdx
  42e9f2:	48 8b 8d a0 fa ff ff 	mov    -0x560(%rbp),%rcx
  42e9f9:	4c 8b 85 b8 fa ff ff 	mov    -0x548(%rbp),%r8
  42ea00:	4c 8b 8d b0 fa ff ff 	mov    -0x550(%rbp),%r9
  42ea07:	be 20 00 00 00       	mov    $0x20,%esi
  42ea0c:	e8 6f 02 00 00       	callq  42ec80 <pem_aes_decrypt>
  42ea11:	89 85 ac fa ff ff    	mov    %eax,-0x554(%rbp)
  42ea17:	eb 00                	jmp    42ea19 <mbedtls_pem_read_buffer+0xe29>
  42ea19:	eb 00                	jmp    42ea1b <mbedtls_pem_read_buffer+0xe2b>
  42ea1b:	83 bd ac fa ff ff 00 	cmpl   $0x0,-0x554(%rbp)
  42ea22:	74 1d                	je     42ea41 <mbedtls_pem_read_buffer+0xe51>
  42ea24:	48 8b bd 98 fa ff ff 	mov    -0x568(%rbp),%rdi
  42ea2b:	e8 b0 26 fd ff       	callq  4010e0 <free@plt>
  42ea30:	8b 85 ac fa ff ff    	mov    -0x554(%rbp),%eax
  42ea36:	89 85 e4 fa ff ff    	mov    %eax,-0x51c(%rbp)
  42ea3c:	e9 b0 00 00 00       	jmpq   42eaf1 <mbedtls_pem_read_buffer+0xf01>
  42ea41:	48 83 bd a0 fa ff ff 	cmpq   $0x2,-0x560(%rbp)
  42ea48:	02 
  42ea49:	76 22                	jbe    42ea6d <mbedtls_pem_read_buffer+0xe7d>
  42ea4b:	48 8b 85 98 fa ff ff 	mov    -0x568(%rbp),%rax
  42ea52:	0f b6 08             	movzbl (%rax),%ecx
  42ea55:	83 f9 30             	cmp    $0x30,%ecx
  42ea58:	75 13                	jne    42ea6d <mbedtls_pem_read_buffer+0xe7d>
  42ea5a:	48 8b 85 98 fa ff ff 	mov    -0x568(%rbp),%rax
  42ea61:	0f b6 48 01          	movzbl 0x1(%rax),%ecx
  42ea65:	81 f9 83 00 00 00    	cmp    $0x83,%ecx
  42ea6b:	7e 55                	jle    42eac2 <mbedtls_pem_read_buffer+0xed2>
  42ea6d:	31 f6                	xor    %esi,%esi
  42ea6f:	48 8b 85 98 fa ff ff 	mov    -0x568(%rbp),%rax
  42ea76:	48 8b 8d a0 fa ff ff 	mov    -0x560(%rbp),%rcx
  42ea7d:	48 89 85 18 fb ff ff 	mov    %rax,-0x4e8(%rbp)
  42ea84:	48 89 8d 10 fb ff ff 	mov    %rcx,-0x4f0(%rbp)
  42ea8b:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  42ea92:	00 
  42ea93:	48 8b bd 18 fb ff ff 	mov    -0x4e8(%rbp),%rdi
  42ea9a:	48 8b 95 10 fb ff ff 	mov    -0x4f0(%rbp),%rdx
  42eaa1:	ff d0                	callq  *%rax
  42eaa3:	48 8b bd 98 fa ff ff 	mov    -0x568(%rbp),%rdi
  42eaaa:	48 89 85 e8 f9 ff ff 	mov    %rax,-0x618(%rbp)
  42eab1:	e8 2a 26 fd ff       	callq  4010e0 <free@plt>
  42eab6:	c7 85 e4 fa ff ff 80 	movl   $0xffffec80,-0x51c(%rbp)
  42eabd:	ec ff ff 
  42eac0:	eb 2f                	jmp    42eaf1 <mbedtls_pem_read_buffer+0xf01>
  42eac2:	eb 00                	jmp    42eac4 <mbedtls_pem_read_buffer+0xed4>
  42eac4:	48 8b 85 98 fa ff ff 	mov    -0x568(%rbp),%rax
  42eacb:	48 8b 8d d8 fa ff ff 	mov    -0x528(%rbp),%rcx
  42ead2:	48 89 01             	mov    %rax,(%rcx)
  42ead5:	48 8b 85 a0 fa ff ff 	mov    -0x560(%rbp),%rax
  42eadc:	48 8b 8d d8 fa ff ff 	mov    -0x528(%rbp),%rcx
  42eae3:	48 89 41 08          	mov    %rax,0x8(%rcx)
  42eae7:	c7 85 e4 fa ff ff 00 	movl   $0x0,-0x51c(%rbp)
  42eaee:	00 00 00 
  42eaf1:	8b 85 e4 fa ff ff    	mov    -0x51c(%rbp),%eax
  42eaf7:	89 85 e4 f9 ff ff    	mov    %eax,-0x61c(%rbp)
  42eafd:	e8 54 6e 01 00       	callq  445956 <writeback_cache>
  42eb02:	8b 85 e4 f9 ff ff    	mov    -0x61c(%rbp),%eax
  42eb08:	48 81 c4 18 06 00 00 	add    $0x618,%rsp
  42eb0f:	5b                   	pop    %rbx
  42eb10:	5d                   	pop    %rbp
  42eb11:	c3                   	retq   
  42eb12:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  42eb19:	1f 84 00 00 00 00 00 

000000000042eb20 <pem_get_iv>:
  42eb20:	55                   	push   %rbp
  42eb21:	48 89 e5             	mov    %rsp,%rbp
  42eb24:	48 83 ec 50          	sub    $0x50,%rsp
  42eb28:	31 c0                	xor    %eax,%eax
  42eb2a:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  42eb2e:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  42eb32:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
  42eb36:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  42eb3a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  42eb3e:	89 c6                	mov    %eax,%esi
  42eb40:	e8 db 24 fd ff       	callq  401020 <memset@plt>
  42eb45:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
  42eb4c:	00 
  42eb4d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42eb51:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  42eb55:	48 c1 e1 01          	shl    $0x1,%rcx
  42eb59:	48 39 c8             	cmp    %rcx,%rax
  42eb5c:	0f 83 00 01 00 00    	jae    42ec62 <pem_get_iv+0x142>
  42eb62:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42eb66:	0f b6 08             	movzbl (%rax),%ecx
  42eb69:	83 f9 30             	cmp    $0x30,%ecx
  42eb6c:	7c 1f                	jl     42eb8d <pem_get_iv+0x6d>
  42eb6e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42eb72:	0f b6 08             	movzbl (%rax),%ecx
  42eb75:	83 f9 39             	cmp    $0x39,%ecx
  42eb78:	7f 13                	jg     42eb8d <pem_get_iv+0x6d>
  42eb7a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42eb7e:	0f b6 08             	movzbl (%rax),%ecx
  42eb81:	83 e9 30             	sub    $0x30,%ecx
  42eb84:	48 63 c1             	movslq %ecx,%rax
  42eb87:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  42eb8b:	eb 63                	jmp    42ebf0 <pem_get_iv+0xd0>
  42eb8d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42eb91:	0f b6 08             	movzbl (%rax),%ecx
  42eb94:	83 f9 41             	cmp    $0x41,%ecx
  42eb97:	7c 1f                	jl     42ebb8 <pem_get_iv+0x98>
  42eb99:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42eb9d:	0f b6 08             	movzbl (%rax),%ecx
  42eba0:	83 f9 46             	cmp    $0x46,%ecx
  42eba3:	7f 13                	jg     42ebb8 <pem_get_iv+0x98>
  42eba5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42eba9:	0f b6 08             	movzbl (%rax),%ecx
  42ebac:	83 e9 37             	sub    $0x37,%ecx
  42ebaf:	48 63 c1             	movslq %ecx,%rax
  42ebb2:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  42ebb6:	eb 36                	jmp    42ebee <pem_get_iv+0xce>
  42ebb8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42ebbc:	0f b6 08             	movzbl (%rax),%ecx
  42ebbf:	83 f9 61             	cmp    $0x61,%ecx
  42ebc2:	7c 1f                	jl     42ebe3 <pem_get_iv+0xc3>
  42ebc4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42ebc8:	0f b6 08             	movzbl (%rax),%ecx
  42ebcb:	83 f9 66             	cmp    $0x66,%ecx
  42ebce:	7f 13                	jg     42ebe3 <pem_get_iv+0xc3>
  42ebd0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42ebd4:	0f b6 08             	movzbl (%rax),%ecx
  42ebd7:	83 e9 57             	sub    $0x57,%ecx
  42ebda:	48 63 c1             	movslq %ecx,%rax
  42ebdd:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  42ebe1:	eb 09                	jmp    42ebec <pem_get_iv+0xcc>
  42ebe3:	c7 45 fc 00 ee ff ff 	movl   $0xffffee00,-0x4(%rbp)
  42ebea:	eb 7d                	jmp    42ec69 <pem_get_iv+0x149>
  42ebec:	eb 00                	jmp    42ebee <pem_get_iv+0xce>
  42ebee:	eb 00                	jmp    42ebf0 <pem_get_iv+0xd0>
  42ebf0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42ebf4:	48 83 e0 01          	and    $0x1,%rax
  42ebf8:	48 83 f8 00          	cmp    $0x0,%rax
  42ebfc:	74 0a                	je     42ec08 <pem_get_iv+0xe8>
  42ebfe:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42ec02:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  42ec06:	eb 0c                	jmp    42ec14 <pem_get_iv+0xf4>
  42ec08:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42ec0c:	48 c1 e0 04          	shl    $0x4,%rax
  42ec10:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  42ec14:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  42ec18:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  42ec1c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ec20:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  42ec24:	48 c1 e9 01          	shr    $0x1,%rcx
  42ec28:	0f b6 14 08          	movzbl (%rax,%rcx,1),%edx
  42ec2c:	89 d0                	mov    %edx,%eax
  42ec2e:	48 0b 45 c8          	or     -0x38(%rbp),%rax
  42ec32:	40 88 c6             	mov    %al,%sil
  42ec35:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42ec39:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  42ec3d:	48 c1 e9 01          	shr    $0x1,%rcx
  42ec41:	40 88 34 08          	mov    %sil,(%rax,%rcx,1)
  42ec45:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42ec49:	48 83 c0 01          	add    $0x1,%rax
  42ec4d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  42ec51:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42ec55:	48 83 c0 01          	add    $0x1,%rax
  42ec59:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42ec5d:	e9 eb fe ff ff       	jmpq   42eb4d <pem_get_iv+0x2d>
  42ec62:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  42ec69:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42ec6c:	89 45 bc             	mov    %eax,-0x44(%rbp)
  42ec6f:	e8 e2 6c 01 00       	callq  445956 <writeback_cache>
  42ec74:	8b 45 bc             	mov    -0x44(%rbp),%eax
  42ec77:	48 83 c4 50          	add    $0x50,%rsp
  42ec7b:	5d                   	pop    %rbp
  42ec7c:	c3                   	retq   
  42ec7d:	0f 1f 00             	nopl   (%rax)

000000000042ec80 <pem_aes_decrypt>:
  42ec80:	55                   	push   %rbp
  42ec81:	48 89 e5             	mov    %rsp,%rbp
  42ec84:	53                   	push   %rbx
  42ec85:	48 81 ec d8 01 00 00 	sub    $0x1d8,%rsp
  42ec8c:	48 8d 85 50 fe ff ff 	lea    -0x1b0(%rbp),%rax
  42ec93:	45 31 d2             	xor    %r10d,%r10d
  42ec96:	41 bb 20 01 00 00    	mov    $0x120,%r11d
  42ec9c:	44 89 db             	mov    %r11d,%ebx
  42ec9f:	48 89 7d c0          	mov    %rdi,-0x40(%rbp)
  42eca3:	89 75 bc             	mov    %esi,-0x44(%rbp)
  42eca6:	48 89 55 b0          	mov    %rdx,-0x50(%rbp)
  42ecaa:	48 89 4d a8          	mov    %rcx,-0x58(%rbp)
  42ecae:	4c 89 45 a0          	mov    %r8,-0x60(%rbp)
  42ecb2:	4c 89 4d 98          	mov    %r9,-0x68(%rbp)
  42ecb6:	48 8d 8d 78 fe ff ff 	lea    -0x188(%rbp),%rcx
  42ecbd:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
  42ecc1:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  42ecc5:	48 89 cf             	mov    %rcx,%rdi
  42ecc8:	44 89 d6             	mov    %r10d,%esi
  42eccb:	48 89 da             	mov    %rbx,%rdx
  42ecce:	48 89 85 40 fe ff ff 	mov    %rax,-0x1c0(%rbp)
  42ecd5:	e8 46 23 fd ff       	callq  401020 <memset@plt>
  42ecda:	8b 75 bc             	mov    -0x44(%rbp),%esi
  42ecdd:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  42ece1:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
  42ece5:	4c 8b 45 98          	mov    -0x68(%rbp),%r8
  42ece9:	48 8b bd 40 fe ff ff 	mov    -0x1c0(%rbp),%rdi
  42ecf0:	e8 eb 00 00 00       	callq  42ede0 <pem_pbkdf1>
  42ecf5:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
  42ecfb:	83 f8 00             	cmp    $0x0,%eax
  42ecfe:	74 02                	je     42ed02 <pem_aes_decrypt+0x82>
  42ed00:	eb 4c                	jmp    42ed4e <pem_aes_decrypt+0xce>
  42ed02:	48 8d b5 50 fe ff ff 	lea    -0x1b0(%rbp),%rsi
  42ed09:	8b 45 bc             	mov    -0x44(%rbp),%eax
  42ed0c:	c1 e0 03             	shl    $0x3,%eax
  42ed0f:	48 8d bd 78 fe ff ff 	lea    -0x188(%rbp),%rdi
  42ed16:	89 c2                	mov    %eax,%edx
  42ed18:	e8 e3 45 01 00       	callq  443300 <mbedtls_aes_setkey_dec>
  42ed1d:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
  42ed23:	83 f8 00             	cmp    $0x0,%eax
  42ed26:	74 02                	je     42ed2a <pem_aes_decrypt+0xaa>
  42ed28:	eb 24                	jmp    42ed4e <pem_aes_decrypt+0xce>
  42ed2a:	31 f6                	xor    %esi,%esi
  42ed2c:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
  42ed30:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  42ed34:	4c 8b 45 b0          	mov    -0x50(%rbp),%r8
  42ed38:	4c 8b 4d b0          	mov    -0x50(%rbp),%r9
  42ed3c:	48 8d bd 78 fe ff ff 	lea    -0x188(%rbp),%rdi
  42ed43:	e8 58 5d 01 00       	callq  444aa0 <mbedtls_aes_crypt_cbc>
  42ed48:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
  42ed4e:	48 8d 85 78 fe ff ff 	lea    -0x188(%rbp),%rax
  42ed55:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  42ed59:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  42ed5e:	75 02                	jne    42ed62 <pem_aes_decrypt+0xe2>
  42ed60:	eb 2b                	jmp    42ed8d <pem_aes_decrypt+0x10d>
  42ed62:	31 f6                	xor    %esi,%esi
  42ed64:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42ed68:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42ed6c:	48 c7 45 e8 20 01 00 	movq   $0x120,-0x18(%rbp)
  42ed73:	00 
  42ed74:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  42ed7b:	00 
  42ed7c:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  42ed80:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  42ed84:	ff d0                	callq  *%rax
  42ed86:	48 89 85 38 fe ff ff 	mov    %rax,-0x1c8(%rbp)
  42ed8d:	31 f6                	xor    %esi,%esi
  42ed8f:	48 8d 85 50 fe ff ff 	lea    -0x1b0(%rbp),%rax
  42ed96:	8b 4d bc             	mov    -0x44(%rbp),%ecx
  42ed99:	89 ca                	mov    %ecx,%edx
  42ed9b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  42ed9f:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
  42eda3:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  42edaa:	00 
  42edab:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  42edaf:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  42edb3:	ff d0                	callq  *%rax
  42edb5:	8b 8d 4c fe ff ff    	mov    -0x1b4(%rbp),%ecx
  42edbb:	48 89 85 30 fe ff ff 	mov    %rax,-0x1d0(%rbp)
  42edc2:	89 8d 2c fe ff ff    	mov    %ecx,-0x1d4(%rbp)
  42edc8:	e8 89 6b 01 00       	callq  445956 <writeback_cache>
  42edcd:	8b 85 2c fe ff ff    	mov    -0x1d4(%rbp),%eax
  42edd3:	48 81 c4 d8 01 00 00 	add    $0x1d8,%rsp
  42edda:	5b                   	pop    %rbx
  42eddb:	5d                   	pop    %rbp
  42eddc:	c3                   	retq   
  42eddd:	0f 1f 00             	nopl   (%rax)

000000000042ede0 <pem_pbkdf1>:
  42ede0:	55                   	push   %rbp
  42ede1:	48 89 e5             	mov    %rsp,%rbp
  42ede4:	48 81 ec 00 01 00 00 	sub    $0x100,%rsp
  42edeb:	31 c0                	xor    %eax,%eax
  42eded:	41 b9 58 00 00 00    	mov    $0x58,%r9d
  42edf3:	45 89 ca             	mov    %r9d,%r10d
  42edf6:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  42edfa:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
  42edfe:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
  42ee02:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
  42ee06:	4c 89 45 98          	mov    %r8,-0x68(%rbp)
  42ee0a:	48 8d 8d 40 ff ff ff 	lea    -0xc0(%rbp),%rcx
  42ee11:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
  42ee15:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  42ee19:	48 89 d7             	mov    %rdx,%rdi
  42ee1c:	89 c6                	mov    %eax,%esi
  42ee1e:	4c 89 d2             	mov    %r10,%rdx
  42ee21:	48 89 8d 18 ff ff ff 	mov    %rcx,-0xe8(%rbp)
  42ee28:	e8 f3 21 fd ff       	callq  401020 <memset@plt>
  42ee2d:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
  42ee34:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  42ee38:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  42ee3c:	c7 02 00 00 00 00    	movl   $0x0,(%rdx)
  42ee42:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  42ee46:	c7 42 04 00 00 00 00 	movl   $0x0,0x4(%rdx)
  42ee4d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  42ee51:	c7 42 08 01 23 45 67 	movl   $0x67452301,0x8(%rdx)
  42ee58:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  42ee5c:	c7 42 0c 89 ab cd ef 	movl   $0xefcdab89,0xc(%rdx)
  42ee63:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  42ee67:	c7 42 10 fe dc ba 98 	movl   $0x98badcfe,0x10(%rdx)
  42ee6e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  42ee72:	c7 42 14 76 54 32 10 	movl   $0x10325476,0x14(%rdx)
  42ee79:	c7 85 24 ff ff ff 00 	movl   $0x0,-0xdc(%rbp)
  42ee80:	00 00 00 
  42ee83:	eb 05                	jmp    42ee8a <pem_pbkdf1+0xaa>
  42ee85:	e9 d5 01 00 00       	jmpq   42f05f <pem_pbkdf1+0x27f>
  42ee8a:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
  42ee8e:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  42ee92:	48 8d bd 40 ff ff ff 	lea    -0xc0(%rbp),%rdi
  42ee99:	e8 52 d8 ff ff       	callq  42c6f0 <mbedtls_md5_update_ret>
  42ee9e:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%rbp)
  42eea4:	83 f8 00             	cmp    $0x0,%eax
  42eea7:	74 05                	je     42eeae <pem_pbkdf1+0xce>
  42eea9:	e9 b1 01 00 00       	jmpq   42f05f <pem_pbkdf1+0x27f>
  42eeae:	b8 08 00 00 00       	mov    $0x8,%eax
  42eeb3:	89 c2                	mov    %eax,%edx
  42eeb5:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
  42eeb9:	48 8d bd 40 ff ff ff 	lea    -0xc0(%rbp),%rdi
  42eec0:	e8 2b d8 ff ff       	callq  42c6f0 <mbedtls_md5_update_ret>
  42eec5:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%rbp)
  42eecb:	83 f8 00             	cmp    $0x0,%eax
  42eece:	74 05                	je     42eed5 <pem_pbkdf1+0xf5>
  42eed0:	e9 8a 01 00 00       	jmpq   42f05f <pem_pbkdf1+0x27f>
  42eed5:	48 8d b5 30 ff ff ff 	lea    -0xd0(%rbp),%rsi
  42eedc:	48 8d bd 40 ff ff ff 	lea    -0xc0(%rbp),%rdi
  42eee3:	e8 88 d9 ff ff       	callq  42c870 <mbedtls_md5_finish_ret>
  42eee8:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%rbp)
  42eeee:	83 f8 00             	cmp    $0x0,%eax
  42eef1:	74 05                	je     42eef8 <pem_pbkdf1+0x118>
  42eef3:	e9 67 01 00 00       	jmpq   42f05f <pem_pbkdf1+0x27f>
  42eef8:	48 83 7d b0 10       	cmpq   $0x10,-0x50(%rbp)
  42eefd:	77 19                	ja     42ef18 <pem_pbkdf1+0x138>
  42eeff:	48 8d b5 30 ff ff ff 	lea    -0xd0(%rbp),%rsi
  42ef06:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
  42ef0a:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
  42ef0e:	e8 5d 22 fd ff       	callq  401170 <memcpy@plt>
  42ef13:	e9 47 01 00 00       	jmpq   42f05f <pem_pbkdf1+0x27f>
  42ef18:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  42ef1c:	48 8b 8d 30 ff ff ff 	mov    -0xd0(%rbp),%rcx
  42ef23:	48 89 08             	mov    %rcx,(%rax)
  42ef26:	48 8b 8d 38 ff ff ff 	mov    -0xc8(%rbp),%rcx
  42ef2d:	48 89 48 08          	mov    %rcx,0x8(%rax)
  42ef31:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
  42ef38:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42ef3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42ef40:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  42ef46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42ef4a:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
  42ef51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42ef55:	c7 40 08 01 23 45 67 	movl   $0x67452301,0x8(%rax)
  42ef5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42ef60:	c7 40 0c 89 ab cd ef 	movl   $0xefcdab89,0xc(%rax)
  42ef67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42ef6b:	c7 40 10 fe dc ba 98 	movl   $0x98badcfe,0x10(%rax)
  42ef72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42ef76:	c7 40 14 76 54 32 10 	movl   $0x10325476,0x14(%rax)
  42ef7d:	c7 85 24 ff ff ff 00 	movl   $0x0,-0xdc(%rbp)
  42ef84:	00 00 00 
  42ef87:	eb 05                	jmp    42ef8e <pem_pbkdf1+0x1ae>
  42ef89:	e9 d1 00 00 00       	jmpq   42f05f <pem_pbkdf1+0x27f>
  42ef8e:	b8 10 00 00 00       	mov    $0x10,%eax
  42ef93:	89 c2                	mov    %eax,%edx
  42ef95:	48 8d b5 30 ff ff ff 	lea    -0xd0(%rbp),%rsi
  42ef9c:	48 8d bd 40 ff ff ff 	lea    -0xc0(%rbp),%rdi
  42efa3:	e8 48 d7 ff ff       	callq  42c6f0 <mbedtls_md5_update_ret>
  42efa8:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%rbp)
  42efae:	83 f8 00             	cmp    $0x0,%eax
  42efb1:	74 05                	je     42efb8 <pem_pbkdf1+0x1d8>
  42efb3:	e9 a7 00 00 00       	jmpq   42f05f <pem_pbkdf1+0x27f>
  42efb8:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
  42efbc:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  42efc0:	48 8d bd 40 ff ff ff 	lea    -0xc0(%rbp),%rdi
  42efc7:	e8 24 d7 ff ff       	callq  42c6f0 <mbedtls_md5_update_ret>
  42efcc:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%rbp)
  42efd2:	83 f8 00             	cmp    $0x0,%eax
  42efd5:	74 05                	je     42efdc <pem_pbkdf1+0x1fc>
  42efd7:	e9 83 00 00 00       	jmpq   42f05f <pem_pbkdf1+0x27f>
  42efdc:	b8 08 00 00 00       	mov    $0x8,%eax
  42efe1:	89 c2                	mov    %eax,%edx
  42efe3:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
  42efe7:	48 8d bd 40 ff ff ff 	lea    -0xc0(%rbp),%rdi
  42efee:	e8 fd d6 ff ff       	callq  42c6f0 <mbedtls_md5_update_ret>
  42eff3:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%rbp)
  42eff9:	83 f8 00             	cmp    $0x0,%eax
  42effc:	74 02                	je     42f000 <pem_pbkdf1+0x220>
  42effe:	eb 5f                	jmp    42f05f <pem_pbkdf1+0x27f>
  42f000:	48 8d b5 30 ff ff ff 	lea    -0xd0(%rbp),%rsi
  42f007:	48 8d bd 40 ff ff ff 	lea    -0xc0(%rbp),%rdi
  42f00e:	e8 5d d8 ff ff       	callq  42c870 <mbedtls_md5_finish_ret>
  42f013:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%rbp)
  42f019:	83 f8 00             	cmp    $0x0,%eax
  42f01c:	74 02                	je     42f020 <pem_pbkdf1+0x240>
  42f01e:	eb 3f                	jmp    42f05f <pem_pbkdf1+0x27f>
  42f020:	48 c7 85 28 ff ff ff 	movq   $0x10,-0xd8(%rbp)
  42f027:	10 00 00 00 
  42f02b:	48 83 7d b0 20       	cmpq   $0x20,-0x50(%rbp)
  42f030:	73 0f                	jae    42f041 <pem_pbkdf1+0x261>
  42f032:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  42f036:	48 83 e8 10          	sub    $0x10,%rax
  42f03a:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
  42f041:	48 8d b5 30 ff ff ff 	lea    -0xd0(%rbp),%rsi
  42f048:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  42f04c:	48 83 c0 10          	add    $0x10,%rax
  42f050:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
  42f057:	48 89 c7             	mov    %rax,%rdi
  42f05a:	e8 11 21 fd ff       	callq  401170 <memcpy@plt>
  42f05f:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
  42f066:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  42f06a:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  42f06f:	75 02                	jne    42f073 <pem_pbkdf1+0x293>
  42f071:	eb 2b                	jmp    42f09e <pem_pbkdf1+0x2be>
  42f073:	31 f6                	xor    %esi,%esi
  42f075:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42f079:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42f07d:	48 c7 45 e8 58 00 00 	movq   $0x58,-0x18(%rbp)
  42f084:	00 
  42f085:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  42f08c:	00 
  42f08d:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  42f091:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  42f095:	ff d0                	callq  *%rax
  42f097:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
  42f09e:	31 f6                	xor    %esi,%esi
  42f0a0:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  42f0a7:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  42f0ab:	48 c7 45 c8 10 00 00 	movq   $0x10,-0x38(%rbp)
  42f0b2:	00 
  42f0b3:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  42f0ba:	00 
  42f0bb:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  42f0bf:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  42f0c3:	ff d0                	callq  *%rax
  42f0c5:	8b b5 24 ff ff ff    	mov    -0xdc(%rbp),%esi
  42f0cb:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
  42f0d2:	89 b5 04 ff ff ff    	mov    %esi,-0xfc(%rbp)
  42f0d8:	e8 79 68 01 00       	callq  445956 <writeback_cache>
  42f0dd:	8b 85 04 ff ff ff    	mov    -0xfc(%rbp),%eax
  42f0e3:	48 81 c4 00 01 00 00 	add    $0x100,%rsp
  42f0ea:	5d                   	pop    %rbp
  42f0eb:	c3                   	retq   
  42f0ec:	0f 1f 40 00          	nopl   0x0(%rax)

000000000042f0f0 <mbedtls_pem_free>:
  42f0f0:	55                   	push   %rbp
  42f0f1:	48 89 e5             	mov    %rsp,%rbp
  42f0f4:	48 83 ec 40          	sub    $0x40,%rsp
  42f0f8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  42f0fc:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  42f100:	48 83 3f 00          	cmpq   $0x0,(%rdi)
  42f104:	74 3b                	je     42f141 <mbedtls_pem_free+0x51>
  42f106:	31 f6                	xor    %esi,%esi
  42f108:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42f10c:	48 8b 00             	mov    (%rax),%rax
  42f10f:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  42f113:	48 8b 49 08          	mov    0x8(%rcx),%rcx
  42f117:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42f11b:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  42f11f:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  42f126:	00 
  42f127:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  42f12b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  42f12f:	ff d0                	callq  *%rax
  42f131:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  42f135:	48 8b 39             	mov    (%rcx),%rdi
  42f138:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  42f13c:	e8 9f 1f fd ff       	callq  4010e0 <free@plt>
  42f141:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42f145:	48 8b 78 10          	mov    0x10(%rax),%rdi
  42f149:	e8 92 1f fd ff       	callq  4010e0 <free@plt>
  42f14e:	31 f6                	xor    %esi,%esi
  42f150:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42f154:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42f158:	48 c7 45 f0 18 00 00 	movq   $0x18,-0x10(%rbp)
  42f15f:	00 
  42f160:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  42f167:	00 
  42f168:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42f16c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  42f170:	ff d0                	callq  *%rax
  42f172:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  42f176:	e8 db 67 01 00       	callq  445956 <writeback_cache>
  42f17b:	48 83 c4 40          	add    $0x40,%rsp
  42f17f:	5d                   	pop    %rbp
  42f180:	c3                   	retq   
  42f181:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  42f188:	0f 1f 84 00 00 00 00 
  42f18f:	00 

000000000042f190 <mbedtls_pk_free>:
  42f190:	55                   	push   %rbp
  42f191:	48 89 e5             	mov    %rsp,%rbp
  42f194:	48 83 ec 20          	sub    $0x20,%rsp
  42f198:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42f19c:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  42f1a1:	75 02                	jne    42f1a5 <mbedtls_pk_free+0x15>
  42f1a3:	eb 4a                	jmp    42f1ef <mbedtls_pk_free+0x5f>
  42f1a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42f1a9:	48 83 38 00          	cmpq   $0x0,(%rax)
  42f1ad:	74 18                	je     42f1c7 <mbedtls_pk_free+0x37>
  42f1af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42f1b3:	48 8b 00             	mov    (%rax),%rax
  42f1b6:	48 8b 80 a0 00 00 00 	mov    0xa0(%rax),%rax
  42f1bd:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  42f1c1:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  42f1c5:	ff d0                	callq  *%rax
  42f1c7:	31 f6                	xor    %esi,%esi
  42f1c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42f1cd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42f1d1:	48 c7 45 f0 10 00 00 	movq   $0x10,-0x10(%rbp)
  42f1d8:	00 
  42f1d9:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  42f1e0:	00 
  42f1e1:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42f1e5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  42f1e9:	ff d0                	callq  *%rax
  42f1eb:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  42f1ef:	e8 62 67 01 00       	callq  445956 <writeback_cache>
  42f1f4:	48 83 c4 20          	add    $0x20,%rsp
  42f1f8:	5d                   	pop    %rbp
  42f1f9:	c3                   	retq   
  42f1fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000042f200 <mbedtls_pk_info_from_type>:
  42f200:	55                   	push   %rbp
  42f201:	48 89 e5             	mov    %rsp,%rbp
  42f204:	48 83 ec 20          	sub    $0x20,%rsp
  42f208:	89 7d f4             	mov    %edi,-0xc(%rbp)
  42f20b:	8b 7d f4             	mov    -0xc(%rbp),%edi
  42f20e:	83 ef 01             	sub    $0x1,%edi
  42f211:	89 7d f0             	mov    %edi,-0x10(%rbp)
  42f214:	75 12                	jne    42f228 <mbedtls_pk_info_from_type+0x28>
  42f216:	eb 00                	jmp    42f218 <mbedtls_pk_info_from_type+0x18>
  42f218:	48 b8 00 33 45 00 00 	movabs $0x453300,%rax
  42f21f:	00 00 00 
  42f222:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42f226:	eb 08                	jmp    42f230 <mbedtls_pk_info_from_type+0x30>
  42f228:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  42f22f:	00 
  42f230:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42f234:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42f238:	e8 19 67 01 00       	callq  445956 <writeback_cache>
  42f23d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42f241:	48 83 c4 20          	add    $0x20,%rsp
  42f245:	5d                   	pop    %rbp
  42f246:	c3                   	retq   
  42f247:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  42f24e:	00 00 

000000000042f250 <mbedtls_pk_setup>:
  42f250:	55                   	push   %rbp
  42f251:	48 89 e5             	mov    %rsp,%rbp
  42f254:	48 83 ec 20          	sub    $0x20,%rsp
  42f258:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  42f25c:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  42f260:	eb 00                	jmp    42f262 <mbedtls_pk_setup+0x12>
  42f262:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  42f267:	74 0a                	je     42f273 <mbedtls_pk_setup+0x23>
  42f269:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42f26d:	48 83 38 00          	cmpq   $0x0,(%rax)
  42f271:	74 09                	je     42f27c <mbedtls_pk_setup+0x2c>
  42f273:	c7 45 fc 80 c1 ff ff 	movl   $0xffffc180,-0x4(%rbp)
  42f27a:	eb 3d                	jmp    42f2b9 <mbedtls_pk_setup+0x69>
  42f27c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42f280:	48 05 90 00 00 00    	add    $0x90,%rax
  42f286:	48 89 c7             	mov    %rax,%rdi
  42f289:	e8 ba 6e 01 00       	callq  446148 <getDecryptedValueQWord>
  42f28e:	ff d0                	callq  *%rax
  42f290:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  42f294:	48 89 47 08          	mov    %rax,0x8(%rdi)
  42f298:	48 83 f8 00          	cmp    $0x0,%rax
  42f29c:	75 09                	jne    42f2a7 <mbedtls_pk_setup+0x57>
  42f29e:	c7 45 fc 80 c0 ff ff 	movl   $0xffffc080,-0x4(%rbp)
  42f2a5:	eb 12                	jmp    42f2b9 <mbedtls_pk_setup+0x69>
  42f2a7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42f2ab:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  42f2af:	48 89 01             	mov    %rax,(%rcx)
  42f2b2:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  42f2b9:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42f2bc:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  42f2bf:	e8 92 66 01 00       	callq  445956 <writeback_cache>
  42f2c4:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  42f2c7:	48 83 c4 20          	add    $0x20,%rsp
  42f2cb:	5d                   	pop    %rbp
  42f2cc:	c3                   	retq   
  42f2cd:	0f 1f 00             	nopl   (%rax)

000000000042f2d0 <mbedtls_pk_can_do>:
  42f2d0:	55                   	push   %rbp
  42f2d1:	48 89 e5             	mov    %rsp,%rbp
  42f2d4:	48 83 ec 20          	sub    $0x20,%rsp
  42f2d8:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  42f2dc:	89 75 ec             	mov    %esi,-0x14(%rbp)
  42f2df:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  42f2e4:	74 0a                	je     42f2f0 <mbedtls_pk_can_do+0x20>
  42f2e6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42f2ea:	48 83 38 00          	cmpq   $0x0,(%rax)
  42f2ee:	75 09                	jne    42f2f9 <mbedtls_pk_can_do+0x29>
  42f2f0:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  42f2f7:	eb 13                	jmp    42f30c <mbedtls_pk_can_do+0x3c>
  42f2f9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42f2fd:	48 8b 00             	mov    (%rax),%rax
  42f300:	48 8b 40 30          	mov    0x30(%rax),%rax
  42f304:	8b 7d ec             	mov    -0x14(%rbp),%edi
  42f307:	ff d0                	callq  *%rax
  42f309:	89 45 fc             	mov    %eax,-0x4(%rbp)
  42f30c:	8b 45 fc             	mov    -0x4(%rbp),%eax
  42f30f:	89 45 e8             	mov    %eax,-0x18(%rbp)
  42f312:	e8 3f 66 01 00       	callq  445956 <writeback_cache>
  42f317:	8b 45 e8             	mov    -0x18(%rbp),%eax
  42f31a:	48 83 c4 20          	add    $0x20,%rsp
  42f31e:	5d                   	pop    %rbp
  42f31f:	c3                   	retq   

000000000042f320 <mbedtls_pk_verify>:
  42f320:	55                   	push   %rbp
  42f321:	48 89 e5             	mov    %rsp,%rbp
  42f324:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
  42f32b:	48 89 7d 80          	mov    %rdi,-0x80(%rbp)
  42f32f:	89 b5 7c ff ff ff    	mov    %esi,-0x84(%rbp)
  42f335:	48 89 95 70 ff ff ff 	mov    %rdx,-0x90(%rbp)
  42f33c:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
  42f343:	4c 89 85 60 ff ff ff 	mov    %r8,-0xa0(%rbp)
  42f34a:	4c 89 8d 58 ff ff ff 	mov    %r9,-0xa8(%rbp)
  42f351:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
  42f355:	8b b5 7c ff ff ff    	mov    -0x84(%rbp),%esi
  42f35b:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
  42f362:	48 8b bd 68 ff ff ff 	mov    -0x98(%rbp),%rdi
  42f369:	4c 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%r8
  42f370:	4c 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%r9
  42f377:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
  42f37b:	89 75 b4             	mov    %esi,-0x4c(%rbp)
  42f37e:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
  42f382:	48 89 7d a0          	mov    %rdi,-0x60(%rbp)
  42f386:	4c 89 45 98          	mov    %r8,-0x68(%rbp)
  42f38a:	4c 89 4d 90          	mov    %r9,-0x70(%rbp)
  42f38e:	48 c7 45 88 00 00 00 	movq   $0x0,-0x78(%rbp)
  42f395:	00 
  42f396:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  42f39a:	48 83 39 00          	cmpq   $0x0,(%rcx)
  42f39e:	0f 84 f3 00 00 00    	je     42f497 <mbedtls_pk_verify+0x177>
  42f3a4:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  42f3a7:	89 45 dc             	mov    %eax,-0x24(%rbp)
  42f3aa:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
  42f3ae:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  42f3b2:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  42f3b6:	48 83 39 00          	cmpq   $0x0,(%rcx)
  42f3ba:	74 0c                	je     42f3c8 <mbedtls_pk_verify+0xa8>
  42f3bc:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
  42f3c3:	e9 c7 00 00 00       	jmpq   42f48f <mbedtls_pk_verify+0x16f>
  42f3c8:	8b 45 dc             	mov    -0x24(%rbp),%eax
  42f3cb:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  42f3ce:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  42f3d1:	83 c0 fd             	add    $0xfffffffd,%eax
  42f3d4:	89 c1                	mov    %eax,%ecx
  42f3d6:	83 e8 03             	sub    $0x3,%eax
  42f3d9:	48 89 8d 50 ff ff ff 	mov    %rcx,-0xb0(%rbp)
  42f3e0:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
  42f3e6:	77 51                	ja     42f439 <mbedtls_pk_verify+0x119>
  42f3e8:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
  42f3ef:	48 8b 0c c5 58 6d 44 	mov    0x446d58(,%rax,8),%rcx
  42f3f6:	00 
  42f3f7:	ff e1                	jmpq   *%rcx
  42f3f9:	48 b8 50 d9 44 00 00 	movabs $0x44d950,%rax
  42f400:	00 00 00 
  42f403:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42f407:	eb 38                	jmp    42f441 <mbedtls_pk_verify+0x121>
  42f409:	48 b8 b0 d9 44 00 00 	movabs $0x44d9b0,%rax
  42f410:	00 00 00 
  42f413:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42f417:	eb 28                	jmp    42f441 <mbedtls_pk_verify+0x121>
  42f419:	48 b8 10 da 44 00 00 	movabs $0x44da10,%rax
  42f420:	00 00 00 
  42f423:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42f427:	eb 18                	jmp    42f441 <mbedtls_pk_verify+0x121>
  42f429:	48 b8 70 da 44 00 00 	movabs $0x44da70,%rax
  42f430:	00 00 00 
  42f433:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42f437:	eb 08                	jmp    42f441 <mbedtls_pk_verify+0x121>
  42f439:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
  42f440:	00 
  42f441:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42f445:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  42f449:	48 83 f8 00          	cmp    $0x0,%rax
  42f44d:	75 09                	jne    42f458 <mbedtls_pk_verify+0x138>
  42f44f:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%rbp)
  42f456:	eb 37                	jmp    42f48f <mbedtls_pk_verify+0x16f>
  42f458:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42f45c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42f460:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  42f465:	75 06                	jne    42f46d <mbedtls_pk_verify+0x14d>
  42f467:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
  42f46b:	eb 0c                	jmp    42f479 <mbedtls_pk_verify+0x159>
  42f46d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42f471:	8b 48 10             	mov    0x10(%rax),%ecx
  42f474:	88 ca                	mov    %cl,%dl
  42f476:	88 55 ff             	mov    %dl,-0x1(%rbp)
  42f479:	8a 45 ff             	mov    -0x1(%rbp),%al
  42f47c:	0f b6 c8             	movzbl %al,%ecx
  42f47f:	89 ca                	mov    %ecx,%edx
  42f481:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  42f485:	48 89 16             	mov    %rdx,(%rsi)
  42f488:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
  42f48f:	8b 45 e0             	mov    -0x20(%rbp),%eax
  42f492:	83 f8 00             	cmp    $0x0,%eax
  42f495:	74 09                	je     42f4a0 <mbedtls_pk_verify+0x180>
  42f497:	c7 45 c4 80 c1 ff ff 	movl   $0xffffc180,-0x3c(%rbp)
  42f49e:	eb 55                	jmp    42f4f5 <mbedtls_pk_verify+0x1d5>
  42f4a0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  42f4a4:	48 8b 00             	mov    (%rax),%rax
  42f4a7:	48 83 c0 40          	add    $0x40,%rax
  42f4ab:	48 89 c7             	mov    %rax,%rdi
  42f4ae:	e8 95 6c 01 00       	callq  446148 <getDecryptedValueQWord>
  42f4b3:	48 83 f8 00          	cmp    $0x0,%rax
  42f4b7:	75 09                	jne    42f4c2 <mbedtls_pk_verify+0x1a2>
  42f4b9:	c7 45 c4 00 c1 ff ff 	movl   $0xffffc100,-0x3c(%rbp)
  42f4c0:	eb 33                	jmp    42f4f5 <mbedtls_pk_verify+0x1d5>
  42f4c2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  42f4c6:	48 8b 00             	mov    (%rax),%rax
  42f4c9:	48 83 c0 40          	add    $0x40,%rax
  42f4cd:	48 89 c7             	mov    %rax,%rdi
  42f4d0:	e8 73 6c 01 00       	callq  446148 <getDecryptedValueQWord>
  42f4d5:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
  42f4d9:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
  42f4dd:	8b 75 b4             	mov    -0x4c(%rbp),%esi
  42f4e0:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
  42f4e4:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
  42f4e8:	4c 8b 45 98          	mov    -0x68(%rbp),%r8
  42f4ec:	4c 8b 4d 90          	mov    -0x70(%rbp),%r9
  42f4f0:	ff d0                	callq  *%rax
  42f4f2:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  42f4f5:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  42f4f8:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
  42f4fe:	e8 53 64 01 00       	callq  445956 <writeback_cache>
  42f503:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
  42f509:	48 81 c4 c0 00 00 00 	add    $0xc0,%rsp
  42f510:	5d                   	pop    %rbp
  42f511:	c3                   	retq   
  42f512:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  42f519:	1f 84 00 00 00 00 00 

000000000042f520 <mbedtls_pk_sign_restartable>:
  42f520:	55                   	push   %rbp
  42f521:	48 89 e5             	mov    %rsp,%rbp
  42f524:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
  42f52b:	48 8b 45 20          	mov    0x20(%rbp),%rax
  42f52f:	4c 8b 55 18          	mov    0x18(%rbp),%r10
  42f533:	4c 8b 5d 10          	mov    0x10(%rbp),%r11
  42f537:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  42f53b:	89 75 b4             	mov    %esi,-0x4c(%rbp)
  42f53e:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
  42f542:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
  42f546:	4c 89 45 98          	mov    %r8,-0x68(%rbp)
  42f54a:	4c 89 4d 90          	mov    %r9,-0x70(%rbp)
  42f54e:	4c 89 5d 88          	mov    %r11,-0x78(%rbp)
  42f552:	4c 89 55 80          	mov    %r10,-0x80(%rbp)
  42f556:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  42f55d:	eb 00                	jmp    42f55f <mbedtls_pk_sign_restartable+0x3f>
  42f55f:	eb 00                	jmp    42f561 <mbedtls_pk_sign_restartable+0x41>
  42f561:	eb 00                	jmp    42f563 <mbedtls_pk_sign_restartable+0x43>
  42f563:	eb 00                	jmp    42f565 <mbedtls_pk_sign_restartable+0x45>
  42f565:	eb 00                	jmp    42f567 <mbedtls_pk_sign_restartable+0x47>
  42f567:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  42f56b:	48 89 c7             	mov    %rax,%rdi
  42f56e:	e8 d5 6b 01 00       	callq  446148 <getDecryptedValueQWord>
  42f573:	48 83 f8 00          	cmp    $0x0,%rax
  42f577:	0f 84 f3 00 00 00    	je     42f670 <mbedtls_pk_sign_restartable+0x150>
  42f57d:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  42f580:	89 45 dc             	mov    %eax,-0x24(%rbp)
  42f583:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
  42f587:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  42f58b:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  42f58f:	48 83 39 00          	cmpq   $0x0,(%rcx)
  42f593:	74 0c                	je     42f5a1 <mbedtls_pk_sign_restartable+0x81>
  42f595:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
  42f59c:	e9 c7 00 00 00       	jmpq   42f668 <mbedtls_pk_sign_restartable+0x148>
  42f5a1:	8b 45 dc             	mov    -0x24(%rbp),%eax
  42f5a4:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  42f5a7:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  42f5aa:	83 c0 fd             	add    $0xfffffffd,%eax
  42f5ad:	89 c1                	mov    %eax,%ecx
  42f5af:	83 e8 03             	sub    $0x3,%eax
  42f5b2:	48 89 8d 70 ff ff ff 	mov    %rcx,-0x90(%rbp)
  42f5b9:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)
  42f5bf:	77 51                	ja     42f612 <mbedtls_pk_sign_restartable+0xf2>
  42f5c1:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  42f5c8:	48 8b 0c c5 78 6d 44 	mov    0x446d78(,%rax,8),%rcx
  42f5cf:	00 
  42f5d0:	ff e1                	jmpq   *%rcx
  42f5d2:	48 b8 50 d9 44 00 00 	movabs $0x44d950,%rax
  42f5d9:	00 00 00 
  42f5dc:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42f5e0:	eb 38                	jmp    42f61a <mbedtls_pk_sign_restartable+0xfa>
  42f5e2:	48 b8 b0 d9 44 00 00 	movabs $0x44d9b0,%rax
  42f5e9:	00 00 00 
  42f5ec:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42f5f0:	eb 28                	jmp    42f61a <mbedtls_pk_sign_restartable+0xfa>
  42f5f2:	48 b8 10 da 44 00 00 	movabs $0x44da10,%rax
  42f5f9:	00 00 00 
  42f5fc:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42f600:	eb 18                	jmp    42f61a <mbedtls_pk_sign_restartable+0xfa>
  42f602:	48 b8 70 da 44 00 00 	movabs $0x44da70,%rax
  42f609:	00 00 00 
  42f60c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42f610:	eb 08                	jmp    42f61a <mbedtls_pk_sign_restartable+0xfa>
  42f612:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
  42f619:	00 
  42f61a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42f61e:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  42f622:	48 83 f8 00          	cmp    $0x0,%rax
  42f626:	75 09                	jne    42f631 <mbedtls_pk_sign_restartable+0x111>
  42f628:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%rbp)
  42f62f:	eb 37                	jmp    42f668 <mbedtls_pk_sign_restartable+0x148>
  42f631:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  42f635:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  42f639:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  42f63e:	75 06                	jne    42f646 <mbedtls_pk_sign_restartable+0x126>
  42f640:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
  42f644:	eb 0c                	jmp    42f652 <mbedtls_pk_sign_restartable+0x132>
  42f646:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42f64a:	8b 48 10             	mov    0x10(%rax),%ecx
  42f64d:	88 ca                	mov    %cl,%dl
  42f64f:	88 55 ff             	mov    %dl,-0x1(%rbp)
  42f652:	8a 45 ff             	mov    -0x1(%rbp),%al
  42f655:	0f b6 c8             	movzbl %al,%ecx
  42f658:	89 ca                	mov    %ecx,%edx
  42f65a:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  42f65e:	48 89 16             	mov    %rdx,(%rsi)
  42f661:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
  42f668:	8b 45 e0             	mov    -0x20(%rbp),%eax
  42f66b:	83 f8 00             	cmp    $0x0,%eax
  42f66e:	74 0c                	je     42f67c <mbedtls_pk_sign_restartable+0x15c>
  42f670:	c7 45 c4 80 c1 ff ff 	movl   $0xffffc180,-0x3c(%rbp)
  42f677:	e9 94 00 00 00       	jmpq   42f710 <mbedtls_pk_sign_restartable+0x1f0>
  42f67c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  42f680:	48 89 c7             	mov    %rax,%rdi
  42f683:	e8 c0 6a 01 00       	callq  446148 <getDecryptedValueQWord>
  42f688:	48 83 c0 50          	add    $0x50,%rax
  42f68c:	48 89 c7             	mov    %rax,%rdi
  42f68f:	e8 b4 6a 01 00       	callq  446148 <getDecryptedValueQWord>
  42f694:	48 83 f8 00          	cmp    $0x0,%rax
  42f698:	75 09                	jne    42f6a3 <mbedtls_pk_sign_restartable+0x183>
  42f69a:	c7 45 c4 00 c1 ff ff 	movl   $0xffffc100,-0x3c(%rbp)
  42f6a1:	eb 6d                	jmp    42f710 <mbedtls_pk_sign_restartable+0x1f0>
  42f6a3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  42f6a7:	48 89 c7             	mov    %rax,%rdi
  42f6aa:	e8 99 6a 01 00       	callq  446148 <getDecryptedValueQWord>
  42f6af:	48 83 c0 50          	add    $0x50,%rax
  42f6b3:	48 89 c7             	mov    %rax,%rdi
  42f6b6:	e8 8d 6a 01 00       	callq  446148 <getDecryptedValueQWord>
  42f6bb:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
  42f6bf:	48 83 c7 08          	add    $0x8,%rdi
  42f6c3:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
  42f6ca:	e8 79 6a 01 00       	callq  446148 <getDecryptedValueQWord>
  42f6cf:	8b 75 b4             	mov    -0x4c(%rbp),%esi
  42f6d2:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
  42f6d6:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
  42f6da:	4c 8b 45 98          	mov    -0x68(%rbp),%r8
  42f6de:	4c 8b 4d 90          	mov    -0x70(%rbp),%r9
  42f6e2:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
  42f6e6:	4c 8b 55 18          	mov    0x18(%rbp),%r10
  42f6ea:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
  42f6f1:	48 89 c7             	mov    %rax,%rdi
  42f6f4:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
  42f6fb:	48 89 04 24          	mov    %rax,(%rsp)
  42f6ff:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
  42f704:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  42f70b:	ff d0                	callq  *%rax
  42f70d:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  42f710:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  42f713:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
  42f719:	e8 38 62 01 00       	callq  445956 <writeback_cache>
  42f71e:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
  42f724:	48 81 c4 c0 00 00 00 	add    $0xc0,%rsp
  42f72b:	5d                   	pop    %rbp
  42f72c:	c3                   	retq   
  42f72d:	0f 1f 00             	nopl   (%rax)

000000000042f730 <mbedtls_pk_get_bitlen>:
  42f730:	55                   	push   %rbp
  42f731:	48 89 e5             	mov    %rsp,%rbp
  42f734:	48 83 ec 20          	sub    $0x20,%rsp
  42f738:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  42f73c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  42f741:	74 0a                	je     42f74d <mbedtls_pk_get_bitlen+0x1d>
  42f743:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42f747:	48 83 38 00          	cmpq   $0x0,(%rax)
  42f74b:	75 0a                	jne    42f757 <mbedtls_pk_get_bitlen+0x27>
  42f74d:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  42f754:	00 
  42f755:	eb 19                	jmp    42f770 <mbedtls_pk_get_bitlen+0x40>
  42f757:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42f75b:	48 8b 00             	mov    (%rax),%rax
  42f75e:	48 8b 40 20          	mov    0x20(%rax),%rax
  42f762:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  42f766:	48 8b 79 08          	mov    0x8(%rcx),%rdi
  42f76a:	ff d0                	callq  *%rax
  42f76c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42f770:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42f774:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42f778:	e8 d9 61 01 00       	callq  445956 <writeback_cache>
  42f77d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42f781:	48 83 c4 20          	add    $0x20,%rsp
  42f785:	5d                   	pop    %rbp
  42f786:	c3                   	retq   
  42f787:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  42f78e:	00 00 

000000000042f790 <mbedtls_pk_get_name>:
  42f790:	55                   	push   %rbp
  42f791:	48 89 e5             	mov    %rsp,%rbp
  42f794:	48 83 ec 20          	sub    $0x20,%rsp
  42f798:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  42f79c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  42f7a1:	74 0a                	je     42f7ad <mbedtls_pk_get_name+0x1d>
  42f7a3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42f7a7:	48 83 38 00          	cmpq   $0x0,(%rax)
  42f7ab:	75 10                	jne    42f7bd <mbedtls_pk_get_name+0x2d>
  42f7ad:	48 b8 e0 8b 44 00 00 	movabs $0x448be0,%rax
  42f7b4:	00 00 00 
  42f7b7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42f7bb:	eb 0f                	jmp    42f7cc <mbedtls_pk_get_name+0x3c>
  42f7bd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42f7c1:	48 8b 00             	mov    (%rax),%rax
  42f7c4:	48 8b 40 10          	mov    0x10(%rax),%rax
  42f7c8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42f7cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42f7d0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42f7d4:	e8 7d 61 01 00       	callq  445956 <writeback_cache>
  42f7d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42f7dd:	48 83 c4 20          	add    $0x20,%rsp
  42f7e1:	5d                   	pop    %rbp
  42f7e2:	c3                   	retq   
  42f7e3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  42f7ea:	84 00 00 00 00 00 

000000000042f7f0 <rsa_get_bitlen>:
  42f7f0:	55                   	push   %rbp
  42f7f1:	48 89 e5             	mov    %rsp,%rbp
  42f7f4:	48 83 ec 20          	sub    $0x20,%rsp
  42f7f8:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  42f7fc:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  42f800:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  42f804:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  42f808:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  42f80c:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42f810:	48 83 c7 08          	add    $0x8,%rdi
  42f814:	e8 2f 69 01 00       	callq  446148 <getDecryptedValueQWord>
  42f819:	48 c1 e0 03          	shl    $0x3,%rax
  42f81d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  42f821:	e8 30 61 01 00       	callq  445956 <writeback_cache>
  42f826:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42f82a:	48 83 c4 20          	add    $0x20,%rsp
  42f82e:	5d                   	pop    %rbp
  42f82f:	c3                   	retq   

000000000042f830 <rsa_can_do>:
  42f830:	55                   	push   %rbp
  42f831:	48 89 e5             	mov    %rsp,%rbp
  42f834:	48 83 ec 10          	sub    $0x10,%rsp
  42f838:	89 7d fc             	mov    %edi,-0x4(%rbp)
  42f83b:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
  42f83f:	b0 01                	mov    $0x1,%al
  42f841:	88 45 fb             	mov    %al,-0x5(%rbp)
  42f844:	74 0a                	je     42f850 <rsa_can_do+0x20>
  42f846:	83 7d fc 06          	cmpl   $0x6,-0x4(%rbp)
  42f84a:	0f 94 c0             	sete   %al
  42f84d:	88 45 fb             	mov    %al,-0x5(%rbp)
  42f850:	8a 45 fb             	mov    -0x5(%rbp),%al
  42f853:	24 01                	and    $0x1,%al
  42f855:	0f b6 c0             	movzbl %al,%eax
  42f858:	89 45 f4             	mov    %eax,-0xc(%rbp)
  42f85b:	e8 f6 60 01 00       	callq  445956 <writeback_cache>
  42f860:	8b 45 f4             	mov    -0xc(%rbp),%eax
  42f863:	48 83 c4 10          	add    $0x10,%rsp
  42f867:	5d                   	pop    %rbp
  42f868:	c3                   	retq   
  42f869:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000042f870 <rsa_verify_wrap>:
  42f870:	55                   	push   %rbp
  42f871:	48 89 e5             	mov    %rsp,%rbp
  42f874:	48 81 ec 70 01 00 00 	sub    $0x170,%rsp
  42f87b:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
  42f882:	89 b5 f4 fe ff ff    	mov    %esi,-0x10c(%rbp)
  42f888:	48 89 95 e8 fe ff ff 	mov    %rdx,-0x118(%rbp)
  42f88f:	48 89 8d e0 fe ff ff 	mov    %rcx,-0x120(%rbp)
  42f896:	4c 89 85 d8 fe ff ff 	mov    %r8,-0x128(%rbp)
  42f89d:	4c 89 8d d0 fe ff ff 	mov    %r9,-0x130(%rbp)
  42f8a4:	48 8b 8d f8 fe ff ff 	mov    -0x108(%rbp),%rcx
  42f8ab:	48 89 8d c0 fe ff ff 	mov    %rcx,-0x140(%rbp)
  42f8b2:	48 8b 8d c0 fe ff ff 	mov    -0x140(%rbp),%rcx
  42f8b9:	48 89 8d 08 ff ff ff 	mov    %rcx,-0xf8(%rbp)
  42f8c0:	48 8b 8d 08 ff ff ff 	mov    -0xf8(%rbp),%rcx
  42f8c7:	48 83 c1 08          	add    $0x8,%rcx
  42f8cb:	48 89 cf             	mov    %rcx,%rdi
  42f8ce:	e8 75 68 01 00       	callq  446148 <getDecryptedValueQWord>
  42f8d3:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
  42f8da:	83 bd f4 fe ff ff 00 	cmpl   $0x0,-0x10c(%rbp)
  42f8e1:	75 1f                	jne    42f902 <rsa_verify_wrap+0x92>
  42f8e3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  42f8e8:	89 c1                	mov    %eax,%ecx
  42f8ea:	48 3b 8d e0 fe ff ff 	cmp    -0x120(%rbp),%rcx
  42f8f1:	73 0f                	jae    42f902 <rsa_verify_wrap+0x92>
  42f8f3:	c7 85 04 ff ff ff 80 	movl   $0xffffc180,-0xfc(%rbp)
  42f8fa:	c1 ff ff 
  42f8fd:	e9 c9 03 00 00       	jmpq   42fccb <rsa_verify_wrap+0x45b>
  42f902:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
  42f909:	48 3b 85 b8 fe ff ff 	cmp    -0x148(%rbp),%rax
  42f910:	73 0f                	jae    42f921 <rsa_verify_wrap+0xb1>
  42f912:	c7 85 04 ff ff ff 80 	movl   $0xffffbc80,-0xfc(%rbp)
  42f919:	bc ff ff 
  42f91c:	e9 aa 03 00 00       	jmpq   42fccb <rsa_verify_wrap+0x45b>
  42f921:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  42f928:	8b 8d f4 fe ff ff    	mov    -0x10c(%rbp),%ecx
  42f92e:	48 8b 95 e0 fe ff ff 	mov    -0x120(%rbp),%rdx
  42f935:	89 d6                	mov    %edx,%esi
  42f937:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
  42f93e:	48 8b bd d8 fe ff ff 	mov    -0x128(%rbp),%rdi
  42f945:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
  42f94c:	48 c7 85 38 ff ff ff 	movq   $0x0,-0xc8(%rbp)
  42f953:	00 00 00 00 
  42f957:	48 c7 85 30 ff ff ff 	movq   $0x0,-0xd0(%rbp)
  42f95e:	00 00 00 00 
  42f962:	c7 85 2c ff ff ff 00 	movl   $0x0,-0xd4(%rbp)
  42f969:	00 00 00 
  42f96c:	89 8d 28 ff ff ff    	mov    %ecx,-0xd8(%rbp)
  42f972:	89 b5 24 ff ff ff    	mov    %esi,-0xdc(%rbp)
  42f978:	48 89 95 18 ff ff ff 	mov    %rdx,-0xe8(%rbp)
  42f97f:	48 89 bd 10 ff ff ff 	mov    %rdi,-0xf0(%rbp)
  42f986:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
  42f98d:	48 05 48 01 00 00    	add    $0x148,%rax
  42f993:	48 89 c7             	mov    %rax,%rdi
  42f996:	e8 b3 66 01 00       	callq  44604e <getDecryptedValueDWord>
  42f99b:	83 f8 00             	cmp    $0x0,%eax
  42f99e:	0f 85 d8 02 00 00    	jne    42fc7c <rsa_verify_wrap+0x40c>
  42f9a4:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
  42f9ab:	48 8b 8d 38 ff ff ff 	mov    -0xc8(%rbp),%rcx
  42f9b2:	48 8b 95 30 ff ff ff 	mov    -0xd0(%rbp),%rdx
  42f9b9:	8b b5 2c ff ff ff    	mov    -0xd4(%rbp),%esi
  42f9bf:	8b bd 28 ff ff ff    	mov    -0xd8(%rbp),%edi
  42f9c5:	44 8b 85 24 ff ff ff 	mov    -0xdc(%rbp),%r8d
  42f9cc:	4c 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%r9
  42f9d3:	4c 8b 95 10 ff ff ff 	mov    -0xf0(%rbp),%r10
  42f9da:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  42f9de:	48 89 4d 98          	mov    %rcx,-0x68(%rbp)
  42f9e2:	48 89 55 90          	mov    %rdx,-0x70(%rbp)
  42f9e6:	89 75 8c             	mov    %esi,-0x74(%rbp)
  42f9e9:	89 7d 88             	mov    %edi,-0x78(%rbp)
  42f9ec:	44 89 45 84          	mov    %r8d,-0x7c(%rbp)
  42f9f0:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
  42f9f7:	4c 89 95 70 ff ff ff 	mov    %r10,-0x90(%rbp)
  42f9fe:	c7 85 6c ff ff ff 00 	movl   $0x0,-0x94(%rbp)
  42fa05:	00 00 00 
  42fa08:	48 c7 85 58 ff ff ff 	movq   $0x0,-0xa8(%rbp)
  42fa0f:	00 00 00 00 
  42fa13:	48 c7 85 50 ff ff ff 	movq   $0x0,-0xb0(%rbp)
  42fa1a:	00 00 00 00 
  42fa1e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  42fa22:	48 83 c0 08          	add    $0x8,%rax
  42fa26:	48 89 c7             	mov    %rax,%rdi
  42fa29:	e8 1a 67 01 00       	callq  446148 <getDecryptedValueQWord>
  42fa2e:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
  42fa35:	83 7d 8c 01          	cmpl   $0x1,-0x74(%rbp)
  42fa39:	75 23                	jne    42fa5e <rsa_verify_wrap+0x1ee>
  42fa3b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  42fa3f:	48 05 48 01 00 00    	add    $0x148,%rax
  42fa45:	48 89 c7             	mov    %rax,%rdi
  42fa48:	e8 01 66 01 00       	callq  44604e <getDecryptedValueDWord>
  42fa4d:	83 f8 00             	cmp    $0x0,%eax
  42fa50:	74 0c                	je     42fa5e <rsa_verify_wrap+0x1ee>
  42fa52:	c7 45 a8 80 bf ff ff 	movl   $0xffffbf80,-0x58(%rbp)
  42fa59:	e9 13 02 00 00       	jmpq   42fc71 <rsa_verify_wrap+0x401>
  42fa5e:	b8 01 00 00 00       	mov    $0x1,%eax
  42fa63:	89 c7                	mov    %eax,%edi
  42fa65:	48 8b b5 60 ff ff ff 	mov    -0xa0(%rbp),%rsi
  42fa6c:	e8 79 6d 01 00       	callq  4467ea <aes_calloc>
  42fa71:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
  42fa78:	48 83 f8 00          	cmp    $0x0,%rax
  42fa7c:	74 20                	je     42fa9e <rsa_verify_wrap+0x22e>
  42fa7e:	b8 01 00 00 00       	mov    $0x1,%eax
  42fa83:	89 c7                	mov    %eax,%edi
  42fa85:	48 8b b5 60 ff ff ff 	mov    -0xa0(%rbp),%rsi
  42fa8c:	e8 59 6d 01 00       	callq  4467ea <aes_calloc>
  42fa91:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
  42fa98:	48 83 f8 00          	cmp    $0x0,%rax
  42fa9c:	75 0f                	jne    42faad <rsa_verify_wrap+0x23d>
  42fa9e:	c7 85 6c ff ff ff f0 	movl   $0xfffffff0,-0x94(%rbp)
  42faa5:	ff ff ff 
  42faa8:	e9 2d 01 00 00       	jmpq   42fbda <rsa_verify_wrap+0x36a>
  42faad:	8b 7d 88             	mov    -0x78(%rbp),%edi
  42fab0:	8b 75 84             	mov    -0x7c(%rbp),%esi
  42fab3:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
  42faba:	48 8b 8d 60 ff ff ff 	mov    -0xa0(%rbp),%rcx
  42fac1:	4c 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%r8
  42fac8:	e8 73 c8 00 00       	callq  43c340 <rsa_rsassa_pkcs1_v15_encode>
  42facd:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)
  42fad3:	83 f8 00             	cmp    $0x0,%eax
  42fad6:	74 05                	je     42fadd <rsa_verify_wrap+0x26d>
  42fad8:	e9 fd 00 00 00       	jmpq   42fbda <rsa_verify_wrap+0x36a>
  42fadd:	83 7d 8c 00          	cmpl   $0x0,-0x74(%rbp)
  42fae1:	75 1f                	jne    42fb02 <rsa_verify_wrap+0x292>
  42fae3:	48 8b 7d a0          	mov    -0x60(%rbp),%rdi
  42fae7:	48 8b b5 70 ff ff ff 	mov    -0x90(%rbp),%rsi
  42faee:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  42faf5:	e8 76 a3 00 00       	callq  439e70 <mbedtls_rsa_public>
  42fafa:	89 85 b4 fe ff ff    	mov    %eax,-0x14c(%rbp)
  42fb00:	eb 25                	jmp    42fb27 <rsa_verify_wrap+0x2b7>
  42fb02:	48 8b 7d a0          	mov    -0x60(%rbp),%rdi
  42fb06:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
  42fb0a:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
  42fb0e:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx
  42fb15:	4c 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%r8
  42fb1c:	e8 5f a6 00 00       	callq  43a180 <mbedtls_rsa_private>
  42fb21:	89 85 b4 fe ff ff    	mov    %eax,-0x14c(%rbp)
  42fb27:	8b 85 b4 fe ff ff    	mov    -0x14c(%rbp),%eax
  42fb2d:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)
  42fb33:	83 bd 6c ff ff ff 00 	cmpl   $0x0,-0x94(%rbp)
  42fb3a:	74 05                	je     42fb41 <rsa_verify_wrap+0x2d1>
  42fb3c:	e9 99 00 00 00       	jmpq   42fbda <rsa_verify_wrap+0x36a>
  42fb41:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
  42fb48:	48 8b 8d 50 ff ff ff 	mov    -0xb0(%rbp),%rcx
  42fb4f:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
  42fb56:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  42fb5a:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  42fb5e:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  42fb62:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  42fb66:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  42fb6a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  42fb6e:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  42fb72:	c6 45 af 00          	movb   $0x0,-0x51(%rbp)
  42fb76:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
  42fb7d:	00 
  42fb7e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  42fb82:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
  42fb86:	73 35                	jae    42fbbd <rsa_verify_wrap+0x34d>
  42fb88:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  42fb8c:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  42fb90:	0f b6 14 08          	movzbl (%rax,%rcx,1),%edx
  42fb94:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  42fb98:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  42fb9c:	0f b6 34 08          	movzbl (%rax,%rcx,1),%esi
  42fba0:	31 f2                	xor    %esi,%edx
  42fba2:	0f b6 75 af          	movzbl -0x51(%rbp),%esi
  42fba6:	09 d6                	or     %edx,%esi
  42fba8:	40 88 f7             	mov    %sil,%dil
  42fbab:	40 88 7d af          	mov    %dil,-0x51(%rbp)
  42fbaf:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  42fbb3:	48 83 c0 01          	add    $0x1,%rax
  42fbb7:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  42fbbb:	eb c1                	jmp    42fb7e <rsa_verify_wrap+0x30e>
  42fbbd:	0f b6 45 af          	movzbl -0x51(%rbp),%eax
  42fbc1:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)
  42fbc7:	83 f8 00             	cmp    $0x0,%eax
  42fbca:	74 0c                	je     42fbd8 <rsa_verify_wrap+0x368>
  42fbcc:	c7 85 6c ff ff ff 80 	movl   $0xffffbc80,-0x94(%rbp)
  42fbd3:	bc ff ff 
  42fbd6:	eb 02                	jmp    42fbda <rsa_verify_wrap+0x36a>
  42fbd8:	eb 00                	jmp    42fbda <rsa_verify_wrap+0x36a>
  42fbda:	48 83 bd 58 ff ff ff 	cmpq   $0x0,-0xa8(%rbp)
  42fbe1:	00 
  42fbe2:	74 3d                	je     42fc21 <rsa_verify_wrap+0x3b1>
  42fbe4:	31 f6                	xor    %esi,%esi
  42fbe6:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
  42fbed:	48 8b 8d 60 ff ff ff 	mov    -0xa0(%rbp),%rcx
  42fbf4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  42fbf8:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
  42fbfc:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  42fc03:	00 
  42fc04:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  42fc08:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  42fc0c:	ff d0                	callq  *%rax
  42fc0e:	48 8b bd 58 ff ff ff 	mov    -0xa8(%rbp),%rdi
  42fc15:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
  42fc1c:	e8 bf 14 fd ff       	callq  4010e0 <free@plt>
  42fc21:	48 83 bd 50 ff ff ff 	cmpq   $0x0,-0xb0(%rbp)
  42fc28:	00 
  42fc29:	74 3d                	je     42fc68 <rsa_verify_wrap+0x3f8>
  42fc2b:	31 f6                	xor    %esi,%esi
  42fc2d:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
  42fc34:	48 8b 8d 60 ff ff ff 	mov    -0xa0(%rbp),%rcx
  42fc3b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  42fc3f:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  42fc43:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  42fc4a:	00 
  42fc4b:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  42fc4f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  42fc53:	ff d0                	callq  *%rax
  42fc55:	48 8b bd 50 ff ff ff 	mov    -0xb0(%rbp),%rdi
  42fc5c:	48 89 85 a0 fe ff ff 	mov    %rax,-0x160(%rbp)
  42fc63:	e8 78 14 fd ff       	callq  4010e0 <free@plt>
  42fc68:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
  42fc6e:	89 45 a8             	mov    %eax,-0x58(%rbp)
  42fc71:	8b 45 a8             	mov    -0x58(%rbp),%eax
  42fc74:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
  42fc7a:	eb 0a                	jmp    42fc86 <rsa_verify_wrap+0x416>
  42fc7c:	c7 85 4c ff ff ff 00 	movl   $0xffffbf00,-0xb4(%rbp)
  42fc83:	bf ff ff 
  42fc86:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
  42fc8c:	89 85 cc fe ff ff    	mov    %eax,-0x134(%rbp)
  42fc92:	83 f8 00             	cmp    $0x0,%eax
  42fc95:	74 0e                	je     42fca5 <rsa_verify_wrap+0x435>
  42fc97:	8b 85 cc fe ff ff    	mov    -0x134(%rbp),%eax
  42fc9d:	89 85 04 ff ff ff    	mov    %eax,-0xfc(%rbp)
  42fca3:	eb 26                	jmp    42fccb <rsa_verify_wrap+0x45b>
  42fca5:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
  42fcac:	48 3b 85 b8 fe ff ff 	cmp    -0x148(%rbp),%rax
  42fcb3:	76 0c                	jbe    42fcc1 <rsa_verify_wrap+0x451>
  42fcb5:	c7 85 04 ff ff ff 00 	movl   $0xffffc700,-0xfc(%rbp)
  42fcbc:	c7 ff ff 
  42fcbf:	eb 0a                	jmp    42fccb <rsa_verify_wrap+0x45b>
  42fcc1:	c7 85 04 ff ff ff 00 	movl   $0x0,-0xfc(%rbp)
  42fcc8:	00 00 00 
  42fccb:	8b 85 04 ff ff ff    	mov    -0xfc(%rbp),%eax
  42fcd1:	89 85 9c fe ff ff    	mov    %eax,-0x164(%rbp)
  42fcd7:	e8 7a 5c 01 00       	callq  445956 <writeback_cache>
  42fcdc:	8b 85 9c fe ff ff    	mov    -0x164(%rbp),%eax
  42fce2:	48 81 c4 70 01 00 00 	add    $0x170,%rsp
  42fce9:	5d                   	pop    %rbp
  42fcea:	c3                   	retq   
  42fceb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000042fcf0 <rsa_sign_wrap>:
  42fcf0:	55                   	push   %rbp
  42fcf1:	48 89 e5             	mov    %rsp,%rbp
  42fcf4:	48 81 ec 60 01 00 00 	sub    $0x160,%rsp
  42fcfb:	48 8b 45 18          	mov    0x18(%rbp),%rax
  42fcff:	4c 8b 55 10          	mov    0x10(%rbp),%r10
  42fd03:	48 89 bd 20 ff ff ff 	mov    %rdi,-0xe0(%rbp)
  42fd0a:	89 b5 1c ff ff ff    	mov    %esi,-0xe4(%rbp)
  42fd10:	48 89 95 10 ff ff ff 	mov    %rdx,-0xf0(%rbp)
  42fd17:	48 89 8d 08 ff ff ff 	mov    %rcx,-0xf8(%rbp)
  42fd1e:	4c 89 85 00 ff ff ff 	mov    %r8,-0x100(%rbp)
  42fd25:	4c 89 8d f8 fe ff ff 	mov    %r9,-0x108(%rbp)
  42fd2c:	48 8b 8d 20 ff ff ff 	mov    -0xe0(%rbp),%rcx
  42fd33:	48 89 8d f0 fe ff ff 	mov    %rcx,-0x110(%rbp)
  42fd3a:	83 bd 1c ff ff ff 00 	cmpl   $0x0,-0xe4(%rbp)
  42fd41:	4c 89 95 e8 fe ff ff 	mov    %r10,-0x118(%rbp)
  42fd48:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
  42fd4f:	75 1f                	jne    42fd70 <rsa_sign_wrap+0x80>
  42fd51:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  42fd56:	89 c1                	mov    %eax,%ecx
  42fd58:	48 3b 8d 08 ff ff ff 	cmp    -0xf8(%rbp),%rcx
  42fd5f:	73 0f                	jae    42fd70 <rsa_sign_wrap+0x80>
  42fd61:	c7 85 2c ff ff ff 80 	movl   $0xffffc180,-0xd4(%rbp)
  42fd68:	c1 ff ff 
  42fd6b:	e9 a8 03 00 00       	jmpq   430118 <rsa_sign_wrap+0x428>
  42fd70:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
  42fd77:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
  42fd7e:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
  42fd85:	48 83 c0 08          	add    $0x8,%rax
  42fd89:	48 89 c7             	mov    %rax,%rdi
  42fd8c:	e8 b7 63 01 00       	callq  446148 <getDecryptedValueQWord>
  42fd91:	48 8b bd f8 fe ff ff 	mov    -0x108(%rbp),%rdi
  42fd98:	48 89 07             	mov    %rax,(%rdi)
  42fd9b:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
  42fda2:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
  42fda6:	48 8b 4d 18          	mov    0x18(%rbp),%rcx
  42fdaa:	8b 95 1c ff ff ff    	mov    -0xe4(%rbp),%edx
  42fdb0:	48 8b b5 08 ff ff ff 	mov    -0xf8(%rbp),%rsi
  42fdb7:	41 89 f0             	mov    %esi,%r8d
  42fdba:	48 8b b5 10 ff ff ff 	mov    -0xf0(%rbp),%rsi
  42fdc1:	4c 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%r9
  42fdc8:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
  42fdcf:	48 89 bd 60 ff ff ff 	mov    %rdi,-0xa0(%rbp)
  42fdd6:	48 89 8d 58 ff ff ff 	mov    %rcx,-0xa8(%rbp)
  42fddd:	c7 85 54 ff ff ff 01 	movl   $0x1,-0xac(%rbp)
  42fde4:	00 00 00 
  42fde7:	89 95 50 ff ff ff    	mov    %edx,-0xb0(%rbp)
  42fded:	44 89 85 4c ff ff ff 	mov    %r8d,-0xb4(%rbp)
  42fdf4:	48 89 b5 40 ff ff ff 	mov    %rsi,-0xc0(%rbp)
  42fdfb:	4c 89 8d 38 ff ff ff 	mov    %r9,-0xc8(%rbp)
  42fe02:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  42fe09:	48 05 48 01 00 00    	add    $0x148,%rax
  42fe0f:	48 89 c7             	mov    %rax,%rdi
  42fe12:	e8 37 62 01 00       	callq  44604e <getDecryptedValueDWord>
  42fe17:	83 f8 00             	cmp    $0x0,%eax
  42fe1a:	0f 85 e2 02 00 00    	jne    430102 <rsa_sign_wrap+0x412>
  42fe20:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  42fe27:	48 8b 8d 60 ff ff ff 	mov    -0xa0(%rbp),%rcx
  42fe2e:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  42fe35:	8b b5 54 ff ff ff    	mov    -0xac(%rbp),%esi
  42fe3b:	8b bd 50 ff ff ff    	mov    -0xb0(%rbp),%edi
  42fe41:	44 8b 85 4c ff ff ff 	mov    -0xb4(%rbp),%r8d
  42fe48:	4c 8b 8d 40 ff ff ff 	mov    -0xc0(%rbp),%r9
  42fe4f:	4c 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%r10
  42fe56:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  42fe5a:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
  42fe5e:	48 89 55 b0          	mov    %rdx,-0x50(%rbp)
  42fe62:	89 75 ac             	mov    %esi,-0x54(%rbp)
  42fe65:	89 7d a8             	mov    %edi,-0x58(%rbp)
  42fe68:	44 89 45 a4          	mov    %r8d,-0x5c(%rbp)
  42fe6c:	4c 89 4d 98          	mov    %r9,-0x68(%rbp)
  42fe70:	4c 89 55 90          	mov    %r10,-0x70(%rbp)
  42fe74:	48 c7 45 80 00 00 00 	movq   $0x0,-0x80(%rbp)
  42fe7b:	00 
  42fe7c:	48 c7 85 78 ff ff ff 	movq   $0x0,-0x88(%rbp)
  42fe83:	00 00 00 00 
  42fe87:	83 7d ac 01          	cmpl   $0x1,-0x54(%rbp)
  42fe8b:	75 23                	jne    42feb0 <rsa_sign_wrap+0x1c0>
  42fe8d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  42fe91:	48 05 48 01 00 00    	add    $0x148,%rax
  42fe97:	48 89 c7             	mov    %rax,%rdi
  42fe9a:	e8 af 61 01 00       	callq  44604e <getDecryptedValueDWord>
  42fe9f:	83 f8 00             	cmp    $0x0,%eax
  42fea2:	74 0c                	je     42feb0 <rsa_sign_wrap+0x1c0>
  42fea4:	c7 45 c8 80 bf ff ff 	movl   $0xffffbf80,-0x38(%rbp)
  42feab:	e9 47 02 00 00       	jmpq   4300f7 <rsa_sign_wrap+0x407>
  42feb0:	8b 7d a8             	mov    -0x58(%rbp),%edi
  42feb3:	8b 75 a4             	mov    -0x5c(%rbp),%esi
  42feb6:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  42feba:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  42febe:	48 83 c0 08          	add    $0x8,%rax
  42fec2:	89 bd dc fe ff ff    	mov    %edi,-0x124(%rbp)
  42fec8:	48 89 c7             	mov    %rax,%rdi
  42fecb:	48 89 95 d0 fe ff ff 	mov    %rdx,-0x130(%rbp)
  42fed2:	89 b5 cc fe ff ff    	mov    %esi,-0x134(%rbp)
  42fed8:	e8 6b 62 01 00       	callq  446148 <getDecryptedValueQWord>
  42fedd:	4c 8b 45 90          	mov    -0x70(%rbp),%r8
  42fee1:	8b bd dc fe ff ff    	mov    -0x124(%rbp),%edi
  42fee7:	8b b5 cc fe ff ff    	mov    -0x134(%rbp),%esi
  42feed:	48 8b 95 d0 fe ff ff 	mov    -0x130(%rbp),%rdx
  42fef4:	48 89 c1             	mov    %rax,%rcx
  42fef7:	e8 44 c4 00 00       	callq  43c340 <rsa_rsassa_pkcs1_v15_encode>
  42fefc:	89 45 8c             	mov    %eax,-0x74(%rbp)
  42feff:	83 f8 00             	cmp    $0x0,%eax
  42ff02:	74 0b                	je     42ff0f <rsa_sign_wrap+0x21f>
  42ff04:	8b 45 8c             	mov    -0x74(%rbp),%eax
  42ff07:	89 45 c8             	mov    %eax,-0x38(%rbp)
  42ff0a:	e9 e8 01 00 00       	jmpq   4300f7 <rsa_sign_wrap+0x407>
  42ff0f:	83 7d ac 00          	cmpl   $0x0,-0x54(%rbp)
  42ff13:	75 19                	jne    42ff2e <rsa_sign_wrap+0x23e>
  42ff15:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  42ff19:	48 8b 75 90          	mov    -0x70(%rbp),%rsi
  42ff1d:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
  42ff21:	e8 4a 9f 00 00       	callq  439e70 <mbedtls_rsa_public>
  42ff26:	89 45 c8             	mov    %eax,-0x38(%rbp)
  42ff29:	e9 c9 01 00 00       	jmpq   4300f7 <rsa_sign_wrap+0x407>
  42ff2e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  42ff32:	48 83 c0 08          	add    $0x8,%rax
  42ff36:	48 89 c7             	mov    %rax,%rdi
  42ff39:	e8 0a 62 01 00       	callq  446148 <getDecryptedValueQWord>
  42ff3e:	b9 01 00 00 00       	mov    $0x1,%ecx
  42ff43:	89 cf                	mov    %ecx,%edi
  42ff45:	48 89 c6             	mov    %rax,%rsi
  42ff48:	e8 9d 68 01 00       	callq  4467ea <aes_calloc>
  42ff4d:	48 89 45 80          	mov    %rax,-0x80(%rbp)
  42ff51:	48 83 7d 80 00       	cmpq   $0x0,-0x80(%rbp)
  42ff56:	75 0c                	jne    42ff64 <rsa_sign_wrap+0x274>
  42ff58:	c7 45 c8 f0 ff ff ff 	movl   $0xfffffff0,-0x38(%rbp)
  42ff5f:	e9 93 01 00 00       	jmpq   4300f7 <rsa_sign_wrap+0x407>
  42ff64:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  42ff68:	48 83 c0 08          	add    $0x8,%rax
  42ff6c:	48 89 c7             	mov    %rax,%rdi
  42ff6f:	e8 d4 61 01 00       	callq  446148 <getDecryptedValueQWord>
  42ff74:	b9 01 00 00 00       	mov    $0x1,%ecx
  42ff79:	89 cf                	mov    %ecx,%edi
  42ff7b:	48 89 c6             	mov    %rax,%rsi
  42ff7e:	e8 67 68 01 00       	callq  4467ea <aes_calloc>
  42ff83:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  42ff8a:	48 83 bd 78 ff ff ff 	cmpq   $0x0,-0x88(%rbp)
  42ff91:	00 
  42ff92:	75 15                	jne    42ffa9 <rsa_sign_wrap+0x2b9>
  42ff94:	48 8b 7d 80          	mov    -0x80(%rbp),%rdi
  42ff98:	e8 43 11 fd ff       	callq  4010e0 <free@plt>
  42ff9d:	c7 45 c8 f0 ff ff ff 	movl   $0xfffffff0,-0x38(%rbp)
  42ffa4:	e9 4e 01 00 00       	jmpq   4300f7 <rsa_sign_wrap+0x407>
  42ffa9:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  42ffad:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  42ffb1:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
  42ffb5:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  42ffb9:	4c 8b 45 80          	mov    -0x80(%rbp),%r8
  42ffbd:	e8 be a1 00 00       	callq  43a180 <mbedtls_rsa_private>
  42ffc2:	89 45 8c             	mov    %eax,-0x74(%rbp)
  42ffc5:	83 f8 00             	cmp    $0x0,%eax
  42ffc8:	74 05                	je     42ffcf <rsa_sign_wrap+0x2df>
  42ffca:	e9 0d 01 00 00       	jmpq   4300dc <rsa_sign_wrap+0x3ec>
  42ffcf:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  42ffd3:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
  42ffd7:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
  42ffde:	e8 8d 9e 00 00       	callq  439e70 <mbedtls_rsa_public>
  42ffe3:	89 45 8c             	mov    %eax,-0x74(%rbp)
  42ffe6:	83 f8 00             	cmp    $0x0,%eax
  42ffe9:	74 05                	je     42fff0 <rsa_sign_wrap+0x300>
  42ffeb:	e9 ec 00 00 00       	jmpq   4300dc <rsa_sign_wrap+0x3ec>
  42fff0:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  42fff7:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  42fffb:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  42ffff:	48 83 c2 08          	add    $0x8,%rdx
  430003:	48 89 d7             	mov    %rdx,%rdi
  430006:	48 89 85 c0 fe ff ff 	mov    %rax,-0x140(%rbp)
  43000d:	48 89 8d b8 fe ff ff 	mov    %rcx,-0x148(%rbp)
  430014:	e8 2f 61 01 00       	callq  446148 <getDecryptedValueQWord>
  430019:	48 8b 8d c0 fe ff ff 	mov    -0x140(%rbp),%rcx
  430020:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
  430024:	48 8b 8d b8 fe ff ff 	mov    -0x148(%rbp),%rcx
  43002b:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
  43002f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  430033:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  430037:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  43003b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43003f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  430043:	c6 45 cf 00          	movb   $0x0,-0x31(%rbp)
  430047:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
  43004e:	00 
  43004f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  430053:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
  430057:	73 35                	jae    43008e <rsa_sign_wrap+0x39e>
  430059:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  43005d:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  430061:	0f b6 14 08          	movzbl (%rax,%rcx,1),%edx
  430065:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  430069:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  43006d:	0f b6 34 08          	movzbl (%rax,%rcx,1),%esi
  430071:	31 f2                	xor    %esi,%edx
  430073:	0f b6 75 cf          	movzbl -0x31(%rbp),%esi
  430077:	09 d6                	or     %edx,%esi
  430079:	40 88 f7             	mov    %sil,%dil
  43007c:	40 88 7d cf          	mov    %dil,-0x31(%rbp)
  430080:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  430084:	48 83 c0 01          	add    $0x1,%rax
  430088:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  43008c:	eb c1                	jmp    43004f <rsa_sign_wrap+0x35f>
  43008e:	0f b6 45 cf          	movzbl -0x31(%rbp),%eax
  430092:	83 f8 00             	cmp    $0x0,%eax
  430095:	74 09                	je     4300a0 <rsa_sign_wrap+0x3b0>
  430097:	c7 45 8c 00 bd ff ff 	movl   $0xffffbd00,-0x74(%rbp)
  43009e:	eb 3c                	jmp    4300dc <rsa_sign_wrap+0x3ec>
  4300a0:	48 8b 7d 90          	mov    -0x70(%rbp),%rdi
  4300a4:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
  4300a8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4300ac:	48 83 c0 08          	add    $0x8,%rax
  4300b0:	48 89 bd b0 fe ff ff 	mov    %rdi,-0x150(%rbp)
  4300b7:	48 89 c7             	mov    %rax,%rdi
  4300ba:	48 89 b5 a8 fe ff ff 	mov    %rsi,-0x158(%rbp)
  4300c1:	e8 82 60 01 00       	callq  446148 <getDecryptedValueQWord>
  4300c6:	48 8b bd b0 fe ff ff 	mov    -0x150(%rbp),%rdi
  4300cd:	48 8b b5 a8 fe ff ff 	mov    -0x158(%rbp),%rsi
  4300d4:	48 89 c2             	mov    %rax,%rdx
  4300d7:	e8 94 10 fd ff       	callq  401170 <memcpy@plt>
  4300dc:	48 8b 7d 80          	mov    -0x80(%rbp),%rdi
  4300e0:	e8 fb 0f fd ff       	callq  4010e0 <free@plt>
  4300e5:	48 8b bd 78 ff ff ff 	mov    -0x88(%rbp),%rdi
  4300ec:	e8 ef 0f fd ff       	callq  4010e0 <free@plt>
  4300f1:	8b 45 8c             	mov    -0x74(%rbp),%eax
  4300f4:	89 45 c8             	mov    %eax,-0x38(%rbp)
  4300f7:	8b 45 c8             	mov    -0x38(%rbp),%eax
  4300fa:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
  430100:	eb 0a                	jmp    43010c <rsa_sign_wrap+0x41c>
  430102:	c7 85 74 ff ff ff 00 	movl   $0xffffbf00,-0x8c(%rbp)
  430109:	bf ff ff 
  43010c:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
  430112:	89 85 2c ff ff ff    	mov    %eax,-0xd4(%rbp)
  430118:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
  43011e:	89 85 a4 fe ff ff    	mov    %eax,-0x15c(%rbp)
  430124:	e8 2d 58 01 00       	callq  445956 <writeback_cache>
  430129:	8b 85 a4 fe ff ff    	mov    -0x15c(%rbp),%eax
  43012f:	48 81 c4 60 01 00 00 	add    $0x160,%rsp
  430136:	5d                   	pop    %rbp
  430137:	c3                   	retq   
  430138:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  43013f:	00 

0000000000430140 <rsa_decrypt_wrap>:
  430140:	55                   	push   %rbp
  430141:	48 89 e5             	mov    %rsp,%rbp
  430144:	48 81 ec 90 06 00 00 	sub    $0x690,%rsp
  43014b:	48 8b 45 18          	mov    0x18(%rbp),%rax
  43014f:	4c 8b 55 10          	mov    0x10(%rbp),%r10
  430153:	48 89 bd d8 f9 ff ff 	mov    %rdi,-0x628(%rbp)
  43015a:	48 89 b5 d0 f9 ff ff 	mov    %rsi,-0x630(%rbp)
  430161:	48 89 95 c8 f9 ff ff 	mov    %rdx,-0x638(%rbp)
  430168:	48 89 8d c0 f9 ff ff 	mov    %rcx,-0x640(%rbp)
  43016f:	4c 89 85 b8 f9 ff ff 	mov    %r8,-0x648(%rbp)
  430176:	4c 89 8d b0 f9 ff ff 	mov    %r9,-0x650(%rbp)
  43017d:	48 8b 8d d8 f9 ff ff 	mov    -0x628(%rbp),%rcx
  430184:	48 89 8d a8 f9 ff ff 	mov    %rcx,-0x658(%rbp)
  43018b:	48 8b 8d c8 f9 ff ff 	mov    -0x638(%rbp),%rcx
  430192:	48 8b 95 a8 f9 ff ff 	mov    -0x658(%rbp),%rdx
  430199:	48 89 95 e8 f9 ff ff 	mov    %rdx,-0x618(%rbp)
  4301a0:	48 8b 95 e8 f9 ff ff 	mov    -0x618(%rbp),%rdx
  4301a7:	48 83 c2 08          	add    $0x8,%rdx
  4301ab:	48 89 d7             	mov    %rdx,%rdi
  4301ae:	4c 89 95 a0 f9 ff ff 	mov    %r10,-0x660(%rbp)
  4301b5:	48 89 85 98 f9 ff ff 	mov    %rax,-0x668(%rbp)
  4301bc:	48 89 8d 90 f9 ff ff 	mov    %rcx,-0x670(%rbp)
  4301c3:	e8 80 5f 01 00       	callq  446148 <getDecryptedValueQWord>
  4301c8:	48 8b 8d 90 f9 ff ff 	mov    -0x670(%rbp),%rcx
  4301cf:	48 39 c1             	cmp    %rax,%rcx
  4301d2:	74 0f                	je     4301e3 <rsa_decrypt_wrap+0xa3>
  4301d4:	c7 85 e4 f9 ff ff 80 	movl   $0xffffbf80,-0x61c(%rbp)
  4301db:	bf ff ff 
  4301de:	e9 92 0a 00 00       	jmpq   430c75 <rsa_decrypt_wrap+0xb35>
  4301e3:	48 8b 85 a8 f9 ff ff 	mov    -0x658(%rbp),%rax
  4301ea:	48 8b 4d 10          	mov    0x10(%rbp),%rcx
  4301ee:	48 8b 55 18          	mov    0x18(%rbp),%rdx
  4301f2:	48 8b b5 b8 f9 ff ff 	mov    -0x648(%rbp),%rsi
  4301f9:	48 8b bd d0 f9 ff ff 	mov    -0x630(%rbp),%rdi
  430200:	4c 8b 85 c0 f9 ff ff 	mov    -0x640(%rbp),%r8
  430207:	4c 8b 8d b0 f9 ff ff 	mov    -0x650(%rbp),%r9
  43020e:	48 89 85 28 fa ff ff 	mov    %rax,-0x5d8(%rbp)
  430215:	48 89 8d 20 fa ff ff 	mov    %rcx,-0x5e0(%rbp)
  43021c:	48 89 95 18 fa ff ff 	mov    %rdx,-0x5e8(%rbp)
  430223:	c7 85 14 fa ff ff 01 	movl   $0x1,-0x5ec(%rbp)
  43022a:	00 00 00 
  43022d:	48 89 b5 08 fa ff ff 	mov    %rsi,-0x5f8(%rbp)
  430234:	48 89 bd 00 fa ff ff 	mov    %rdi,-0x600(%rbp)
  43023b:	4c 89 85 f8 f9 ff ff 	mov    %r8,-0x608(%rbp)
  430242:	4c 89 8d f0 f9 ff ff 	mov    %r9,-0x610(%rbp)
  430249:	48 8b 85 28 fa ff ff 	mov    -0x5d8(%rbp),%rax
  430250:	48 05 48 01 00 00    	add    $0x148,%rax
  430256:	48 89 c7             	mov    %rax,%rdi
  430259:	e8 f0 5d 01 00       	callq  44604e <getDecryptedValueDWord>
  43025e:	83 f8 00             	cmp    $0x0,%eax
  430261:	0f 85 f8 09 00 00    	jne    430c5f <rsa_decrypt_wrap+0xb1f>
  430267:	48 8b 85 28 fa ff ff 	mov    -0x5d8(%rbp),%rax
  43026e:	48 8b 8d 20 fa ff ff 	mov    -0x5e0(%rbp),%rcx
  430275:	48 8b 95 18 fa ff ff 	mov    -0x5e8(%rbp),%rdx
  43027c:	8b b5 14 fa ff ff    	mov    -0x5ec(%rbp),%esi
  430282:	48 8b bd 08 fa ff ff 	mov    -0x5f8(%rbp),%rdi
  430289:	4c 8b 85 00 fa ff ff 	mov    -0x600(%rbp),%r8
  430290:	4c 8b 8d f8 f9 ff ff 	mov    -0x608(%rbp),%r9
  430297:	4c 8b 95 f0 f9 ff ff 	mov    -0x610(%rbp),%r10
  43029e:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
  4302a5:	48 89 8d a0 fe ff ff 	mov    %rcx,-0x160(%rbp)
  4302ac:	48 89 95 98 fe ff ff 	mov    %rdx,-0x168(%rbp)
  4302b3:	89 b5 94 fe ff ff    	mov    %esi,-0x16c(%rbp)
  4302b9:	48 89 bd 88 fe ff ff 	mov    %rdi,-0x178(%rbp)
  4302c0:	4c 89 85 80 fe ff ff 	mov    %r8,-0x180(%rbp)
  4302c7:	4c 89 8d 78 fe ff ff 	mov    %r9,-0x188(%rbp)
  4302ce:	4c 89 95 70 fe ff ff 	mov    %r10,-0x190(%rbp)
  4302d5:	48 c7 85 48 fa ff ff 	movq   $0x0,-0x5b8(%rbp)
  4302dc:	00 00 00 00 
  4302e0:	c7 85 44 fa ff ff 00 	movl   $0x0,-0x5bc(%rbp)
  4302e7:	00 00 00 
  4302ea:	c6 85 43 fa ff ff 00 	movb   $0x0,-0x5bd(%rbp)
  4302f1:	48 c7 85 38 fa ff ff 	movq   $0x0,-0x5c8(%rbp)
  4302f8:	00 00 00 00 
  4302fc:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
  430303:	48 83 c0 08          	add    $0x8,%rax
  430307:	48 89 c7             	mov    %rax,%rdi
  43030a:	e8 39 5e 01 00       	callq  446148 <getDecryptedValueQWord>
  43030f:	48 89 85 60 fe ff ff 	mov    %rax,-0x1a0(%rbp)
  430316:	48 8b 85 70 fe ff ff 	mov    -0x190(%rbp),%rax
  43031d:	48 8b 8d 60 fe ff ff 	mov    -0x1a0(%rbp),%rcx
  430324:	48 83 e9 0b          	sub    $0xb,%rcx
  430328:	48 39 c8             	cmp    %rcx,%rax
  43032b:	76 14                	jbe    430341 <rsa_decrypt_wrap+0x201>
  43032d:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
  430334:	48 83 e8 0b          	sub    $0xb,%rax
  430338:	48 89 85 88 f9 ff ff 	mov    %rax,-0x678(%rbp)
  43033f:	eb 0e                	jmp    43034f <rsa_decrypt_wrap+0x20f>
  430341:	48 8b 85 70 fe ff ff 	mov    -0x190(%rbp),%rax
  430348:	48 89 85 88 f9 ff ff 	mov    %rax,-0x678(%rbp)
  43034f:	48 8b 85 88 f9 ff ff 	mov    -0x678(%rbp),%rax
  430356:	48 89 85 50 fe ff ff 	mov    %rax,-0x1b0(%rbp)
  43035d:	83 bd 94 fe ff ff 01 	cmpl   $0x1,-0x16c(%rbp)
  430364:	75 29                	jne    43038f <rsa_decrypt_wrap+0x24f>
  430366:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
  43036d:	48 05 48 01 00 00    	add    $0x148,%rax
  430373:	48 89 c7             	mov    %rax,%rdi
  430376:	e8 d3 5c 01 00       	callq  44604e <getDecryptedValueDWord>
  43037b:	83 f8 00             	cmp    $0x0,%eax
  43037e:	74 0f                	je     43038f <rsa_decrypt_wrap+0x24f>
  430380:	c7 85 b0 fe ff ff 80 	movl   $0xffffbf80,-0x150(%rbp)
  430387:	bf ff ff 
  43038a:	e9 c2 08 00 00       	jmpq   430c51 <rsa_decrypt_wrap+0xb11>
  43038f:	48 83 bd 60 fe ff ff 	cmpq   $0x10,-0x1a0(%rbp)
  430396:	10 
  430397:	72 0d                	jb     4303a6 <rsa_decrypt_wrap+0x266>
  430399:	48 81 bd 60 fe ff ff 	cmpq   $0x400,-0x1a0(%rbp)
  4303a0:	00 04 00 00 
  4303a4:	76 0f                	jbe    4303b5 <rsa_decrypt_wrap+0x275>
  4303a6:	c7 85 b0 fe ff ff 80 	movl   $0xffffbf80,-0x150(%rbp)
  4303ad:	bf ff ff 
  4303b0:	e9 9c 08 00 00       	jmpq   430c51 <rsa_decrypt_wrap+0xb11>
  4303b5:	83 bd 94 fe ff ff 00 	cmpl   $0x0,-0x16c(%rbp)
  4303bc:	75 22                	jne    4303e0 <rsa_decrypt_wrap+0x2a0>
  4303be:	48 8d 95 50 fa ff ff 	lea    -0x5b0(%rbp),%rdx
  4303c5:	48 8b bd a8 fe ff ff 	mov    -0x158(%rbp),%rdi
  4303cc:	48 8b b5 80 fe ff ff 	mov    -0x180(%rbp),%rsi
  4303d3:	e8 98 9a 00 00       	callq  439e70 <mbedtls_rsa_public>
  4303d8:	89 85 84 f9 ff ff    	mov    %eax,-0x67c(%rbp)
  4303de:	eb 2e                	jmp    43040e <rsa_decrypt_wrap+0x2ce>
  4303e0:	4c 8d 85 50 fa ff ff 	lea    -0x5b0(%rbp),%r8
  4303e7:	48 8b bd a8 fe ff ff 	mov    -0x158(%rbp),%rdi
  4303ee:	48 8b b5 a0 fe ff ff 	mov    -0x160(%rbp),%rsi
  4303f5:	48 8b 95 98 fe ff ff 	mov    -0x168(%rbp),%rdx
  4303fc:	48 8b 8d 80 fe ff ff 	mov    -0x180(%rbp),%rcx
  430403:	e8 78 9d 00 00       	callq  43a180 <mbedtls_rsa_private>
  430408:	89 85 84 f9 ff ff    	mov    %eax,-0x67c(%rbp)
  43040e:	8b 85 84 f9 ff ff    	mov    -0x67c(%rbp),%eax
  430414:	89 85 6c fe ff ff    	mov    %eax,-0x194(%rbp)
  43041a:	83 bd 6c fe ff ff 00 	cmpl   $0x0,-0x194(%rbp)
  430421:	74 05                	je     430428 <rsa_decrypt_wrap+0x2e8>
  430423:	e9 e3 07 00 00       	jmpq   430c0b <rsa_decrypt_wrap+0xacb>
  430428:	0f b6 85 50 fa ff ff 	movzbl -0x5b0(%rbp),%eax
  43042f:	0b 85 44 fa ff ff    	or     -0x5bc(%rbp),%eax
  430435:	89 85 44 fa ff ff    	mov    %eax,-0x5bc(%rbp)
  43043b:	83 bd 94 fe ff ff 01 	cmpl   $0x1,-0x16c(%rbp)
  430442:	0f 85 c7 00 00 00    	jne    43050f <rsa_decrypt_wrap+0x3cf>
  430448:	0f b6 85 51 fa ff ff 	movzbl -0x5af(%rbp),%eax
  43044f:	83 f0 02             	xor    $0x2,%eax
  430452:	0b 85 44 fa ff ff    	or     -0x5bc(%rbp),%eax
  430458:	89 85 44 fa ff ff    	mov    %eax,-0x5bc(%rbp)
  43045e:	48 c7 85 58 fe ff ff 	movq   $0x2,-0x1a8(%rbp)
  430465:	02 00 00 00 
  430469:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
  430470:	48 3b 85 60 fe ff ff 	cmp    -0x1a0(%rbp),%rax
  430477:	0f 83 8d 00 00 00    	jae    43050a <rsa_decrypt_wrap+0x3ca>
  43047d:	31 c0                	xor    %eax,%eax
  43047f:	48 8b 8d 58 fe ff ff 	mov    -0x1a8(%rbp),%rcx
  430486:	0f b6 94 0d 50 fa ff 	movzbl -0x5b0(%rbp,%rcx,1),%edx
  43048d:	ff 
  43048e:	48 8b 8d 58 fe ff ff 	mov    -0x1a8(%rbp),%rcx
  430495:	0f b6 b4 0d 50 fa ff 	movzbl -0x5b0(%rbp,%rcx,1),%esi
  43049c:	ff 
  43049d:	89 c7                	mov    %eax,%edi
  43049f:	29 f7                	sub    %esi,%edi
  4304a1:	41 88 f8             	mov    %dil,%r8b
  4304a4:	41 0f b6 f0          	movzbl %r8b,%esi
  4304a8:	09 f2                	or     %esi,%edx
  4304aa:	c1 fa 07             	sar    $0x7,%edx
  4304ad:	83 f2 01             	xor    $0x1,%edx
  4304b0:	0f b6 b5 43 fa ff ff 	movzbl -0x5bd(%rbp),%esi
  4304b7:	09 d6                	or     %edx,%esi
  4304b9:	41 88 f0             	mov    %sil,%r8b
  4304bc:	44 88 85 43 fa ff ff 	mov    %r8b,-0x5bd(%rbp)
  4304c3:	0f b6 95 43 fa ff ff 	movzbl -0x5bd(%rbp),%edx
  4304ca:	0f b6 b5 43 fa ff ff 	movzbl -0x5bd(%rbp),%esi
  4304d1:	29 f0                	sub    %esi,%eax
  4304d3:	41 88 c0             	mov    %al,%r8b
  4304d6:	41 0f b6 c0          	movzbl %r8b,%eax
  4304da:	09 c2                	or     %eax,%edx
  4304dc:	c1 fa 07             	sar    $0x7,%edx
  4304df:	83 f2 01             	xor    $0x1,%edx
  4304e2:	48 63 ca             	movslq %edx,%rcx
  4304e5:	48 03 8d 48 fa ff ff 	add    -0x5b8(%rbp),%rcx
  4304ec:	48 89 8d 48 fa ff ff 	mov    %rcx,-0x5b8(%rbp)
  4304f3:	48 8b 8d 58 fe ff ff 	mov    -0x1a8(%rbp),%rcx
  4304fa:	48 83 c1 01          	add    $0x1,%rcx
  4304fe:	48 89 8d 58 fe ff ff 	mov    %rcx,-0x1a8(%rbp)
  430505:	e9 5f ff ff ff       	jmpq   430469 <rsa_decrypt_wrap+0x329>
  43050a:	e9 a9 01 00 00       	jmpq   4306b8 <rsa_decrypt_wrap+0x578>
  43050f:	0f b6 85 51 fa ff ff 	movzbl -0x5af(%rbp),%eax
  430516:	83 f0 01             	xor    $0x1,%eax
  430519:	0b 85 44 fa ff ff    	or     -0x5bc(%rbp),%eax
  43051f:	89 85 44 fa ff ff    	mov    %eax,-0x5bc(%rbp)
  430525:	48 c7 85 58 fe ff ff 	movq   $0x2,-0x1a8(%rbp)
  43052c:	02 00 00 00 
  430530:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
  430537:	48 3b 85 60 fe ff ff 	cmp    -0x1a0(%rbp),%rax
  43053e:	0f 83 72 01 00 00    	jae    4306b6 <rsa_decrypt_wrap+0x576>
  430544:	31 c0                	xor    %eax,%eax
  430546:	48 8b 8d 58 fe ff ff 	mov    -0x1a8(%rbp),%rcx
  43054d:	0f b6 94 0d 50 fa ff 	movzbl -0x5b0(%rbp,%rcx,1),%edx
  430554:	ff 
  430555:	89 95 c0 fe ff ff    	mov    %edx,-0x140(%rbp)
  43055b:	c7 85 bc fe ff ff 00 	movl   $0x0,-0x144(%rbp)
  430562:	00 00 00 
  430565:	c7 85 b8 fe ff ff 01 	movl   $0x1,-0x148(%rbp)
  43056c:	00 00 00 
  43056f:	8b 95 c0 fe ff ff    	mov    -0x140(%rbp),%edx
  430575:	89 95 c4 fe ff ff    	mov    %edx,-0x13c(%rbp)
  43057b:	8b 95 c4 fe ff ff    	mov    -0x13c(%rbp),%edx
  430581:	89 c6                	mov    %eax,%esi
  430583:	2b b5 c4 fe ff ff    	sub    -0x13c(%rbp),%esi
  430589:	09 f2                	or     %esi,%edx
  43058b:	c1 ea 1f             	shr    $0x1f,%edx
  43058e:	89 c6                	mov    %eax,%esi
  430590:	29 d6                	sub    %edx,%esi
  430592:	89 b5 b4 fe ff ff    	mov    %esi,-0x14c(%rbp)
  430598:	8b 95 b4 fe ff ff    	mov    -0x14c(%rbp),%edx
  43059e:	23 95 bc fe ff ff    	and    -0x144(%rbp),%edx
  4305a4:	8b b5 b4 fe ff ff    	mov    -0x14c(%rbp),%esi
  4305aa:	83 f6 ff             	xor    $0xffffffff,%esi
  4305ad:	23 b5 b8 fe ff ff    	and    -0x148(%rbp),%esi
  4305b3:	09 f2                	or     %esi,%edx
  4305b5:	0f b6 b5 43 fa ff ff 	movzbl -0x5bd(%rbp),%esi
  4305bc:	09 d6                	or     %edx,%esi
  4305be:	40 88 f7             	mov    %sil,%dil
  4305c1:	40 88 bd 43 fa ff ff 	mov    %dil,-0x5bd(%rbp)
  4305c8:	0f b6 95 43 fa ff ff 	movzbl -0x5bd(%rbp),%edx
  4305cf:	89 95 e8 fe ff ff    	mov    %edx,-0x118(%rbp)
  4305d5:	c7 85 e4 fe ff ff 00 	movl   $0x0,-0x11c(%rbp)
  4305dc:	00 00 00 
  4305df:	c7 85 e0 fe ff ff 01 	movl   $0x1,-0x120(%rbp)
  4305e6:	00 00 00 
  4305e9:	8b 95 e8 fe ff ff    	mov    -0x118(%rbp),%edx
  4305ef:	89 95 ec fe ff ff    	mov    %edx,-0x114(%rbp)
  4305f5:	8b 95 ec fe ff ff    	mov    -0x114(%rbp),%edx
  4305fb:	89 c6                	mov    %eax,%esi
  4305fd:	2b b5 ec fe ff ff    	sub    -0x114(%rbp),%esi
  430603:	09 f2                	or     %esi,%edx
  430605:	c1 ea 1f             	shr    $0x1f,%edx
  430608:	89 c6                	mov    %eax,%esi
  43060a:	29 d6                	sub    %edx,%esi
  43060c:	89 b5 dc fe ff ff    	mov    %esi,-0x124(%rbp)
  430612:	8b 95 dc fe ff ff    	mov    -0x124(%rbp),%edx
  430618:	23 95 e4 fe ff ff    	and    -0x11c(%rbp),%edx
  43061e:	8b b5 dc fe ff ff    	mov    -0x124(%rbp),%esi
  430624:	83 f6 ff             	xor    $0xffffffff,%esi
  430627:	23 b5 e0 fe ff ff    	and    -0x120(%rbp),%esi
  43062d:	09 f2                	or     %esi,%edx
  43062f:	89 d2                	mov    %edx,%edx
  430631:	89 d1                	mov    %edx,%ecx
  430633:	48 03 8d 48 fa ff ff 	add    -0x5b8(%rbp),%rcx
  43063a:	48 89 8d 48 fa ff ff 	mov    %rcx,-0x5b8(%rbp)
  430641:	0f b6 95 43 fa ff ff 	movzbl -0x5bd(%rbp),%edx
  430648:	48 8b 8d 58 fe ff ff 	mov    -0x1a8(%rbp),%rcx
  43064f:	0f b6 b4 0d 50 fa ff 	movzbl -0x5b0(%rbp,%rcx,1),%esi
  430656:	ff 
  430657:	81 f6 ff 00 00 00    	xor    $0xff,%esi
  43065d:	89 55 f8             	mov    %edx,-0x8(%rbp)
  430660:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  430667:	89 75 f0             	mov    %esi,-0x10(%rbp)
  43066a:	8b 55 f8             	mov    -0x8(%rbp),%edx
  43066d:	89 55 fc             	mov    %edx,-0x4(%rbp)
  430670:	8b 55 fc             	mov    -0x4(%rbp),%edx
  430673:	89 c6                	mov    %eax,%esi
  430675:	2b 75 fc             	sub    -0x4(%rbp),%esi
  430678:	09 f2                	or     %esi,%edx
  43067a:	c1 ea 1f             	shr    $0x1f,%edx
  43067d:	29 d0                	sub    %edx,%eax
  43067f:	89 45 ec             	mov    %eax,-0x14(%rbp)
  430682:	8b 45 ec             	mov    -0x14(%rbp),%eax
  430685:	23 45 f4             	and    -0xc(%rbp),%eax
  430688:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43068b:	83 f2 ff             	xor    $0xffffffff,%edx
  43068e:	23 55 f0             	and    -0x10(%rbp),%edx
  430691:	09 d0                	or     %edx,%eax
  430693:	0b 85 44 fa ff ff    	or     -0x5bc(%rbp),%eax
  430699:	89 85 44 fa ff ff    	mov    %eax,-0x5bc(%rbp)
  43069f:	48 8b 8d 58 fe ff ff 	mov    -0x1a8(%rbp),%rcx
  4306a6:	48 83 c1 01          	add    $0x1,%rcx
  4306aa:	48 89 8d 58 fe ff ff 	mov    %rcx,-0x1a8(%rbp)
  4306b1:	e9 7a fe ff ff       	jmpq   430530 <rsa_decrypt_wrap+0x3f0>
  4306b6:	eb 00                	jmp    4306b8 <rsa_decrypt_wrap+0x578>
  4306b8:	31 c0                	xor    %eax,%eax
  4306ba:	0f b6 8d 43 fa ff ff 	movzbl -0x5bd(%rbp),%ecx
  4306c1:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  4306c4:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
  4306cb:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%rbp)
  4306d2:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  4306d5:	89 4d e8             	mov    %ecx,-0x18(%rbp)
  4306d8:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  4306db:	89 c2                	mov    %eax,%edx
  4306dd:	2b 55 e8             	sub    -0x18(%rbp),%edx
  4306e0:	09 d1                	or     %edx,%ecx
  4306e2:	c1 e9 1f             	shr    $0x1f,%ecx
  4306e5:	89 c2                	mov    %eax,%edx
  4306e7:	29 ca                	sub    %ecx,%edx
  4306e9:	89 55 d8             	mov    %edx,-0x28(%rbp)
  4306ec:	8b 4d d8             	mov    -0x28(%rbp),%ecx
  4306ef:	23 4d e0             	and    -0x20(%rbp),%ecx
  4306f2:	8b 55 d8             	mov    -0x28(%rbp),%edx
  4306f5:	83 f2 ff             	xor    $0xffffffff,%edx
  4306f8:	23 55 dc             	and    -0x24(%rbp),%edx
  4306fb:	09 d1                	or     %edx,%ecx
  4306fd:	0b 8d 44 fa ff ff    	or     -0x5bc(%rbp),%ecx
  430703:	89 8d 44 fa ff ff    	mov    %ecx,-0x5bc(%rbp)
  430709:	48 8b b5 48 fa ff ff 	mov    -0x5b8(%rbp),%rsi
  430710:	48 c7 45 d0 08 00 00 	movq   $0x8,-0x30(%rbp)
  430717:	00 
  430718:	48 89 75 c8          	mov    %rsi,-0x38(%rbp)
  43071c:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  430720:	48 2b 75 d0          	sub    -0x30(%rbp),%rsi
  430724:	48 c1 ee 3f          	shr    $0x3f,%rsi
  430728:	89 f1                	mov    %esi,%ecx
  43072a:	0b 8d 44 fa ff ff    	or     -0x5bc(%rbp),%ecx
  430730:	89 8d 44 fa ff ff    	mov    %ecx,-0x5bc(%rbp)
  430736:	8b 8d 44 fa ff ff    	mov    -0x5bc(%rbp),%ecx
  43073c:	48 8b b5 50 fe ff ff 	mov    -0x1b0(%rbp),%rsi
  430743:	89 f2                	mov    %esi,%edx
  430745:	48 8b b5 60 fe ff ff 	mov    -0x1a0(%rbp),%rsi
  43074c:	48 2b b5 48 fa ff ff 	sub    -0x5b8(%rbp),%rsi
  430753:	48 83 ee 03          	sub    $0x3,%rsi
  430757:	89 f7                	mov    %esi,%edi
  430759:	89 4d c0             	mov    %ecx,-0x40(%rbp)
  43075c:	89 55 bc             	mov    %edx,-0x44(%rbp)
  43075f:	89 7d b8             	mov    %edi,-0x48(%rbp)
  430762:	8b 4d c0             	mov    -0x40(%rbp),%ecx
  430765:	89 4d c4             	mov    %ecx,-0x3c(%rbp)
  430768:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
  43076b:	89 c2                	mov    %eax,%edx
  43076d:	2b 55 c4             	sub    -0x3c(%rbp),%edx
  430770:	09 d1                	or     %edx,%ecx
  430772:	c1 e9 1f             	shr    $0x1f,%ecx
  430775:	89 c2                	mov    %eax,%edx
  430777:	29 ca                	sub    %ecx,%edx
  430779:	89 55 b4             	mov    %edx,-0x4c(%rbp)
  43077c:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
  43077f:	23 4d bc             	and    -0x44(%rbp),%ecx
  430782:	8b 55 b4             	mov    -0x4c(%rbp),%edx
  430785:	83 f2 ff             	xor    $0xffffffff,%edx
  430788:	23 55 b8             	and    -0x48(%rbp),%edx
  43078b:	09 d1                	or     %edx,%ecx
  43078d:	89 c9                	mov    %ecx,%ecx
  43078f:	89 ce                	mov    %ecx,%esi
  430791:	48 89 b5 38 fa ff ff 	mov    %rsi,-0x5c8(%rbp)
  430798:	48 8b b5 38 fa ff ff 	mov    -0x5c8(%rbp),%rsi
  43079f:	4c 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%r8
  4307a6:	48 89 75 a8          	mov    %rsi,-0x58(%rbp)
  4307aa:	4c 89 45 a0          	mov    %r8,-0x60(%rbp)
  4307ae:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
  4307b2:	48 2b 75 a8          	sub    -0x58(%rbp),%rsi
  4307b6:	48 c1 ee 3f          	shr    $0x3f,%rsi
  4307ba:	89 f1                	mov    %esi,%ecx
  4307bc:	89 8d 34 fa ff ff    	mov    %ecx,-0x5cc(%rbp)
  4307c2:	8b 8d 44 fa ff ff    	mov    -0x5bc(%rbp),%ecx
  4307c8:	8b 95 34 fa ff ff    	mov    -0x5cc(%rbp),%edx
  4307ce:	89 55 98             	mov    %edx,-0x68(%rbp)
  4307d1:	c7 45 94 00 44 00 00 	movl   $0x4400,-0x6c(%rbp)
  4307d8:	c7 45 90 00 00 00 00 	movl   $0x0,-0x70(%rbp)
  4307df:	8b 55 98             	mov    -0x68(%rbp),%edx
  4307e2:	89 55 9c             	mov    %edx,-0x64(%rbp)
  4307e5:	8b 55 9c             	mov    -0x64(%rbp),%edx
  4307e8:	89 c7                	mov    %eax,%edi
  4307ea:	2b 7d 9c             	sub    -0x64(%rbp),%edi
  4307ed:	09 fa                	or     %edi,%edx
  4307ef:	c1 ea 1f             	shr    $0x1f,%edx
  4307f2:	89 c7                	mov    %eax,%edi
  4307f4:	29 d7                	sub    %edx,%edi
  4307f6:	89 7d 8c             	mov    %edi,-0x74(%rbp)
  4307f9:	8b 55 8c             	mov    -0x74(%rbp),%edx
  4307fc:	23 55 94             	and    -0x6c(%rbp),%edx
  4307ff:	8b 7d 8c             	mov    -0x74(%rbp),%edi
  430802:	83 f7 ff             	xor    $0xffffffff,%edi
  430805:	23 7d 90             	and    -0x70(%rbp),%edi
  430808:	09 fa                	or     %edi,%edx
  43080a:	89 4d 84             	mov    %ecx,-0x7c(%rbp)
  43080d:	c7 45 80 00 41 00 00 	movl   $0x4100,-0x80(%rbp)
  430814:	89 95 7c ff ff ff    	mov    %edx,-0x84(%rbp)
  43081a:	8b 4d 84             	mov    -0x7c(%rbp),%ecx
  43081d:	89 4d 88             	mov    %ecx,-0x78(%rbp)
  430820:	8b 4d 88             	mov    -0x78(%rbp),%ecx
  430823:	89 c2                	mov    %eax,%edx
  430825:	2b 55 88             	sub    -0x78(%rbp),%edx
  430828:	09 d1                	or     %edx,%ecx
  43082a:	c1 e9 1f             	shr    $0x1f,%ecx
  43082d:	89 c2                	mov    %eax,%edx
  43082f:	29 ca                	sub    %ecx,%edx
  430831:	89 95 78 ff ff ff    	mov    %edx,-0x88(%rbp)
  430837:	8b 8d 78 ff ff ff    	mov    -0x88(%rbp),%ecx
  43083d:	23 4d 80             	and    -0x80(%rbp),%ecx
  430840:	8b 95 78 ff ff ff    	mov    -0x88(%rbp),%edx
  430846:	83 f2 ff             	xor    $0xffffffff,%edx
  430849:	23 95 7c ff ff ff    	and    -0x84(%rbp),%edx
  43084f:	09 d1                	or     %edx,%ecx
  430851:	89 c2                	mov    %eax,%edx
  430853:	29 ca                	sub    %ecx,%edx
  430855:	89 95 6c fe ff ff    	mov    %edx,-0x194(%rbp)
  43085b:	8b 8d 44 fa ff ff    	mov    -0x5bc(%rbp),%ecx
  430861:	0b 8d 34 fa ff ff    	or     -0x5cc(%rbp),%ecx
  430867:	89 8d 74 ff ff ff    	mov    %ecx,-0x8c(%rbp)
  43086d:	8b 8d 74 ff ff ff    	mov    -0x8c(%rbp),%ecx
  430873:	89 c2                	mov    %eax,%edx
  430875:	2b 95 74 ff ff ff    	sub    -0x8c(%rbp),%edx
  43087b:	09 d1                	or     %edx,%ecx
  43087d:	c1 e9 1f             	shr    $0x1f,%ecx
  430880:	29 c8                	sub    %ecx,%eax
  430882:	89 85 44 fa ff ff    	mov    %eax,-0x5bc(%rbp)
  430888:	48 c7 85 58 fe ff ff 	movq   $0xb,-0x1a8(%rbp)
  43088f:	0b 00 00 00 
  430893:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
  43089a:	48 3b 85 60 fe ff ff 	cmp    -0x1a0(%rbp),%rax
  4308a1:	73 39                	jae    4308dc <rsa_decrypt_wrap+0x79c>
  4308a3:	8b 85 44 fa ff ff    	mov    -0x5bc(%rbp),%eax
  4308a9:	83 f0 ff             	xor    $0xffffffff,%eax
  4308ac:	48 8b 8d 58 fe ff ff 	mov    -0x1a8(%rbp),%rcx
  4308b3:	0f b6 94 0d 50 fa ff 	movzbl -0x5b0(%rbp,%rcx,1),%edx
  4308ba:	ff 
  4308bb:	21 c2                	and    %eax,%edx
  4308bd:	40 88 d6             	mov    %dl,%sil
  4308c0:	40 88 b4 0d 50 fa ff 	mov    %sil,-0x5b0(%rbp,%rcx,1)
  4308c7:	ff 
  4308c8:	48 8b 8d 58 fe ff ff 	mov    -0x1a8(%rbp),%rcx
  4308cf:	48 83 c1 01          	add    $0x1,%rcx
  4308d3:	48 89 8d 58 fe ff ff 	mov    %rcx,-0x1a8(%rbp)
  4308da:	eb b7                	jmp    430893 <rsa_decrypt_wrap+0x753>
  4308dc:	31 c0                	xor    %eax,%eax
  4308de:	89 c1                	mov    %eax,%ecx
  4308e0:	48 8d 95 50 fa ff ff 	lea    -0x5b0(%rbp),%rdx
  4308e7:	31 c0                	xor    %eax,%eax
  4308e9:	8b b5 34 fa ff ff    	mov    -0x5cc(%rbp),%esi
  4308ef:	48 8b bd 50 fe ff ff 	mov    -0x1b0(%rbp),%rdi
  4308f6:	41 89 f8             	mov    %edi,%r8d
  4308f9:	48 8b bd 38 fa ff ff 	mov    -0x5c8(%rbp),%rdi
  430900:	41 89 f9             	mov    %edi,%r9d
  430903:	89 b5 6c ff ff ff    	mov    %esi,-0x94(%rbp)
  430909:	44 89 85 68 ff ff ff 	mov    %r8d,-0x98(%rbp)
  430910:	44 89 8d 64 ff ff ff 	mov    %r9d,-0x9c(%rbp)
  430917:	8b b5 6c ff ff ff    	mov    -0x94(%rbp),%esi
  43091d:	89 b5 70 ff ff ff    	mov    %esi,-0x90(%rbp)
  430923:	8b b5 70 ff ff ff    	mov    -0x90(%rbp),%esi
  430929:	41 89 c0             	mov    %eax,%r8d
  43092c:	44 2b 85 70 ff ff ff 	sub    -0x90(%rbp),%r8d
  430933:	44 09 c6             	or     %r8d,%esi
  430936:	c1 ee 1f             	shr    $0x1f,%esi
  430939:	29 f0                	sub    %esi,%eax
  43093b:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%rbp)
  430941:	8b 85 60 ff ff ff    	mov    -0xa0(%rbp),%eax
  430947:	23 85 68 ff ff ff    	and    -0x98(%rbp),%eax
  43094d:	8b b5 60 ff ff ff    	mov    -0xa0(%rbp),%esi
  430953:	83 f6 ff             	xor    $0xffffffff,%esi
  430956:	23 b5 64 ff ff ff    	and    -0x9c(%rbp),%esi
  43095c:	09 f0                	or     %esi,%eax
  43095e:	89 c0                	mov    %eax,%eax
  430960:	89 c7                	mov    %eax,%edi
  430962:	48 89 bd 38 fa ff ff 	mov    %rdi,-0x5c8(%rbp)
  430969:	48 03 95 60 fe ff ff 	add    -0x1a0(%rbp),%rdx
  430970:	48 2b 8d 50 fe ff ff 	sub    -0x1b0(%rbp),%rcx
  430977:	48 01 ca             	add    %rcx,%rdx
  43097a:	48 8b 8d 50 fe ff ff 	mov    -0x1b0(%rbp),%rcx
  430981:	48 8b bd 50 fe ff ff 	mov    -0x1b0(%rbp),%rdi
  430988:	48 2b bd 38 fa ff ff 	sub    -0x5c8(%rbp),%rdi
  43098f:	48 89 95 20 ff ff ff 	mov    %rdx,-0xe0(%rbp)
  430996:	48 89 8d 18 ff ff ff 	mov    %rcx,-0xe8(%rbp)
  43099d:	48 89 bd 10 ff ff ff 	mov    %rdi,-0xf0(%rbp)
  4309a4:	48 8b 8d 20 ff ff ff 	mov    -0xe0(%rbp),%rcx
  4309ab:	48 89 8d 08 ff ff ff 	mov    %rcx,-0xf8(%rbp)
  4309b2:	48 83 bd 18 ff ff ff 	cmpq   $0x0,-0xe8(%rbp)
  4309b9:	00 
  4309ba:	75 05                	jne    4309c1 <rsa_decrypt_wrap+0x881>
  4309bc:	e9 04 02 00 00       	jmpq   430bc5 <rsa_decrypt_wrap+0xa85>
  4309c1:	48 c7 85 00 ff ff ff 	movq   $0x0,-0x100(%rbp)
  4309c8:	00 00 00 00 
  4309cc:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
  4309d3:	48 3b 85 18 ff ff ff 	cmp    -0xe8(%rbp),%rax
  4309da:	0f 83 e5 01 00 00    	jae    430bc5 <rsa_decrypt_wrap+0xa85>
  4309e0:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  4309e7:	48 2b 85 10 ff ff ff 	sub    -0xf0(%rbp),%rax
  4309ee:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  4309f5:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
  4309fc:	48 89 8d 28 ff ff ff 	mov    %rcx,-0xd8(%rbp)
  430a03:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  430a0a:	48 2b 85 30 ff ff ff 	sub    -0xd0(%rbp),%rax
  430a11:	48 c1 e8 3f          	shr    $0x3f,%rax
  430a15:	89 c2                	mov    %eax,%edx
  430a17:	89 95 f4 fe ff ff    	mov    %edx,-0x10c(%rbp)
  430a1d:	48 c7 85 f8 fe ff ff 	movq   $0x0,-0x108(%rbp)
  430a24:	00 00 00 00 
  430a28:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  430a2f:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
  430a36:	48 83 e9 01          	sub    $0x1,%rcx
  430a3a:	48 39 c8             	cmp    %rcx,%rax
  430a3d:	0f 83 d2 00 00 00    	jae    430b15 <rsa_decrypt_wrap+0x9d5>
  430a43:	31 c0                	xor    %eax,%eax
  430a45:	48 8b 8d 08 ff ff ff 	mov    -0xf8(%rbp),%rcx
  430a4c:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  430a53:	40 8a 34 11          	mov    (%rcx,%rdx,1),%sil
  430a57:	40 88 b5 f3 fe ff ff 	mov    %sil,-0x10d(%rbp)
  430a5e:	48 8b 8d 08 ff ff ff 	mov    -0xf8(%rbp),%rcx
  430a65:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  430a6c:	40 8a 74 11 01       	mov    0x1(%rcx,%rdx,1),%sil
  430a71:	40 88 b5 f2 fe ff ff 	mov    %sil,-0x10e(%rbp)
  430a78:	8b bd f4 fe ff ff    	mov    -0x10c(%rbp),%edi
  430a7e:	44 0f b6 85 f3 fe ff 	movzbl -0x10d(%rbp),%r8d
  430a85:	ff 
  430a86:	44 0f b6 8d f2 fe ff 	movzbl -0x10e(%rbp),%r9d
  430a8d:	ff 
  430a8e:	89 bd 58 ff ff ff    	mov    %edi,-0xa8(%rbp)
  430a94:	44 89 85 54 ff ff ff 	mov    %r8d,-0xac(%rbp)
  430a9b:	44 89 8d 50 ff ff ff 	mov    %r9d,-0xb0(%rbp)
  430aa2:	8b bd 58 ff ff ff    	mov    -0xa8(%rbp),%edi
  430aa8:	89 bd 5c ff ff ff    	mov    %edi,-0xa4(%rbp)
  430aae:	8b bd 5c ff ff ff    	mov    -0xa4(%rbp),%edi
  430ab4:	41 89 c0             	mov    %eax,%r8d
  430ab7:	44 2b 85 5c ff ff ff 	sub    -0xa4(%rbp),%r8d
  430abe:	44 09 c7             	or     %r8d,%edi
  430ac1:	c1 ef 1f             	shr    $0x1f,%edi
  430ac4:	29 f8                	sub    %edi,%eax
  430ac6:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
  430acc:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
  430ad2:	23 85 54 ff ff ff    	and    -0xac(%rbp),%eax
  430ad8:	8b bd 4c ff ff ff    	mov    -0xb4(%rbp),%edi
  430ade:	83 f7 ff             	xor    $0xffffffff,%edi
  430ae1:	23 bd 50 ff ff ff    	and    -0xb0(%rbp),%edi
  430ae7:	09 f8                	or     %edi,%eax
  430ae9:	40 88 c6             	mov    %al,%sil
  430aec:	48 8b 8d 08 ff ff ff 	mov    -0xf8(%rbp),%rcx
  430af3:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  430afa:	40 88 34 11          	mov    %sil,(%rcx,%rdx,1)
  430afe:	48 8b 8d f8 fe ff ff 	mov    -0x108(%rbp),%rcx
  430b05:	48 83 c1 01          	add    $0x1,%rcx
  430b09:	48 89 8d f8 fe ff ff 	mov    %rcx,-0x108(%rbp)
  430b10:	e9 13 ff ff ff       	jmpq   430a28 <rsa_decrypt_wrap+0x8e8>
  430b15:	31 c0                	xor    %eax,%eax
  430b17:	8b 8d f4 fe ff ff    	mov    -0x10c(%rbp),%ecx
  430b1d:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
  430b24:	48 8b b5 18 ff ff ff 	mov    -0xe8(%rbp),%rsi
  430b2b:	48 83 ee 01          	sub    $0x1,%rsi
  430b2f:	40 8a 3c 32          	mov    (%rdx,%rsi,1),%dil
  430b33:	44 0f b6 c7          	movzbl %dil,%r8d
  430b37:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  430b3d:	44 89 85 40 ff ff ff 	mov    %r8d,-0xc0(%rbp)
  430b44:	c7 85 3c ff ff ff 00 	movl   $0x0,-0xc4(%rbp)
  430b4b:	00 00 00 
  430b4e:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  430b54:	89 8d 48 ff ff ff    	mov    %ecx,-0xb8(%rbp)
  430b5a:	8b 8d 48 ff ff ff    	mov    -0xb8(%rbp),%ecx
  430b60:	41 89 c0             	mov    %eax,%r8d
  430b63:	44 2b 85 48 ff ff ff 	sub    -0xb8(%rbp),%r8d
  430b6a:	44 09 c1             	or     %r8d,%ecx
  430b6d:	c1 e9 1f             	shr    $0x1f,%ecx
  430b70:	29 c8                	sub    %ecx,%eax
  430b72:	89 85 38 ff ff ff    	mov    %eax,-0xc8(%rbp)
  430b78:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax
  430b7e:	23 85 40 ff ff ff    	and    -0xc0(%rbp),%eax
  430b84:	8b 8d 38 ff ff ff    	mov    -0xc8(%rbp),%ecx
  430b8a:	83 f1 ff             	xor    $0xffffffff,%ecx
  430b8d:	23 8d 3c ff ff ff    	and    -0xc4(%rbp),%ecx
  430b93:	09 c8                	or     %ecx,%eax
  430b95:	40 88 c7             	mov    %al,%dil
  430b98:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
  430b9f:	48 8b b5 18 ff ff ff 	mov    -0xe8(%rbp),%rsi
  430ba6:	48 83 ee 01          	sub    $0x1,%rsi
  430baa:	40 88 3c 32          	mov    %dil,(%rdx,%rsi,1)
  430bae:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
  430bb5:	48 83 c2 01          	add    $0x1,%rdx
  430bb9:	48 89 95 00 ff ff ff 	mov    %rdx,-0x100(%rbp)
  430bc0:	e9 07 fe ff ff       	jmpq   4309cc <rsa_decrypt_wrap+0x88c>
  430bc5:	31 c0                	xor    %eax,%eax
  430bc7:	89 c1                	mov    %eax,%ecx
  430bc9:	48 8d 95 50 fa ff ff 	lea    -0x5b0(%rbp),%rdx
  430bd0:	48 8b bd 78 fe ff ff 	mov    -0x188(%rbp),%rdi
  430bd7:	48 03 95 60 fe ff ff 	add    -0x1a0(%rbp),%rdx
  430bde:	48 2b 8d 50 fe ff ff 	sub    -0x1b0(%rbp),%rcx
  430be5:	48 01 ca             	add    %rcx,%rdx
  430be8:	48 8b 8d 50 fe ff ff 	mov    -0x1b0(%rbp),%rcx
  430bef:	48 89 d6             	mov    %rdx,%rsi
  430bf2:	48 89 ca             	mov    %rcx,%rdx
  430bf5:	e8 76 05 fd ff       	callq  401170 <memcpy@plt>
  430bfa:	48 8b 8d 38 fa ff ff 	mov    -0x5c8(%rbp),%rcx
  430c01:	48 8b 95 88 fe ff ff 	mov    -0x178(%rbp),%rdx
  430c08:	48 89 0a             	mov    %rcx,(%rdx)
  430c0b:	31 f6                	xor    %esi,%esi
  430c0d:	48 8d 85 50 fa ff ff 	lea    -0x5b0(%rbp),%rax
  430c14:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
  430c1b:	48 c7 85 c8 fe ff ff 	movq   $0x400,-0x138(%rbp)
  430c22:	00 04 00 00 
  430c26:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  430c2d:	00 
  430c2e:	48 8b bd d0 fe ff ff 	mov    -0x130(%rbp),%rdi
  430c35:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
  430c3c:	ff d0                	callq  *%rax
  430c3e:	8b b5 6c fe ff ff    	mov    -0x194(%rbp),%esi
  430c44:	89 b5 b0 fe ff ff    	mov    %esi,-0x150(%rbp)
  430c4a:	48 89 85 78 f9 ff ff 	mov    %rax,-0x688(%rbp)
  430c51:	8b 85 b0 fe ff ff    	mov    -0x150(%rbp),%eax
  430c57:	89 85 30 fa ff ff    	mov    %eax,-0x5d0(%rbp)
  430c5d:	eb 0a                	jmp    430c69 <rsa_decrypt_wrap+0xb29>
  430c5f:	c7 85 30 fa ff ff 00 	movl   $0xffffbf00,-0x5d0(%rbp)
  430c66:	bf ff ff 
  430c69:	8b 85 30 fa ff ff    	mov    -0x5d0(%rbp),%eax
  430c6f:	89 85 e4 f9 ff ff    	mov    %eax,-0x61c(%rbp)
  430c75:	8b 85 e4 f9 ff ff    	mov    -0x61c(%rbp),%eax
  430c7b:	89 85 74 f9 ff ff    	mov    %eax,-0x68c(%rbp)
  430c81:	e8 d0 4c 01 00       	callq  445956 <writeback_cache>
  430c86:	8b 85 74 f9 ff ff    	mov    -0x68c(%rbp),%eax
  430c8c:	48 81 c4 90 06 00 00 	add    $0x690,%rsp
  430c93:	5d                   	pop    %rbp
  430c94:	c3                   	retq   
  430c95:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  430c9c:	00 00 00 00 

0000000000430ca0 <rsa_encrypt_wrap>:
  430ca0:	55                   	push   %rbp
  430ca1:	48 89 e5             	mov    %rsp,%rbp
  430ca4:	48 81 ec 10 01 00 00 	sub    $0x110,%rsp
  430cab:	48 8b 45 18          	mov    0x18(%rbp),%rax
  430caf:	4c 8b 55 10          	mov    0x10(%rbp),%r10
  430cb3:	48 89 bd 48 ff ff ff 	mov    %rdi,-0xb8(%rbp)
  430cba:	48 89 b5 40 ff ff ff 	mov    %rsi,-0xc0(%rbp)
  430cc1:	48 89 95 38 ff ff ff 	mov    %rdx,-0xc8(%rbp)
  430cc8:	48 89 8d 30 ff ff ff 	mov    %rcx,-0xd0(%rbp)
  430ccf:	4c 89 85 28 ff ff ff 	mov    %r8,-0xd8(%rbp)
  430cd6:	4c 89 8d 20 ff ff ff 	mov    %r9,-0xe0(%rbp)
  430cdd:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
  430ce4:	48 89 8d 18 ff ff ff 	mov    %rcx,-0xe8(%rbp)
  430ceb:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
  430cf2:	48 89 8d 58 ff ff ff 	mov    %rcx,-0xa8(%rbp)
  430cf9:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
  430d00:	48 83 c1 08          	add    $0x8,%rcx
  430d04:	48 89 cf             	mov    %rcx,%rdi
  430d07:	4c 89 95 10 ff ff ff 	mov    %r10,-0xf0(%rbp)
  430d0e:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
  430d15:	e8 2e 54 01 00       	callq  446148 <getDecryptedValueQWord>
  430d1a:	48 8b 8d 28 ff ff ff 	mov    -0xd8(%rbp),%rcx
  430d21:	48 89 01             	mov    %rax,(%rcx)
  430d24:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  430d2b:	48 8b 00             	mov    (%rax),%rax
  430d2e:	48 3b 85 20 ff ff ff 	cmp    -0xe0(%rbp),%rax
  430d35:	76 0f                	jbe    430d46 <rsa_encrypt_wrap+0xa6>
  430d37:	c7 85 54 ff ff ff 00 	movl   $0xffffbc00,-0xac(%rbp)
  430d3e:	bc ff ff 
  430d41:	e9 db 02 00 00       	jmpq   431021 <rsa_encrypt_wrap+0x381>
  430d46:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  430d4d:	48 8b 4d 10          	mov    0x10(%rbp),%rcx
  430d51:	48 8b 55 18          	mov    0x18(%rbp),%rdx
  430d55:	48 8b b5 38 ff ff ff 	mov    -0xc8(%rbp),%rsi
  430d5c:	48 8b bd 40 ff ff ff 	mov    -0xc0(%rbp),%rdi
  430d63:	4c 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%r8
  430d6a:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  430d6e:	48 89 4d 88          	mov    %rcx,-0x78(%rbp)
  430d72:	48 89 55 80          	mov    %rdx,-0x80(%rbp)
  430d76:	c7 85 7c ff ff ff 00 	movl   $0x0,-0x84(%rbp)
  430d7d:	00 00 00 
  430d80:	48 89 b5 70 ff ff ff 	mov    %rsi,-0x90(%rbp)
  430d87:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
  430d8e:	4c 89 85 60 ff ff ff 	mov    %r8,-0xa0(%rbp)
  430d95:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  430d99:	48 05 48 01 00 00    	add    $0x148,%rax
  430d9f:	48 89 c7             	mov    %rax,%rdi
  430da2:	e8 a7 52 01 00       	callq  44604e <getDecryptedValueDWord>
  430da7:	83 f8 00             	cmp    $0x0,%eax
  430daa:	0f 85 61 02 00 00    	jne    431011 <rsa_encrypt_wrap+0x371>
  430db0:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  430db4:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
  430db8:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
  430dbc:	8b b5 7c ff ff ff    	mov    -0x84(%rbp),%esi
  430dc2:	48 8b bd 70 ff ff ff 	mov    -0x90(%rbp),%rdi
  430dc9:	4c 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%r8
  430dd0:	4c 8b 8d 60 ff ff ff 	mov    -0xa0(%rbp),%r9
  430dd7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  430ddb:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
  430ddf:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
  430de3:	89 75 dc             	mov    %esi,-0x24(%rbp)
  430de6:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
  430dea:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
  430dee:	4c 89 4d c0          	mov    %r9,-0x40(%rbp)
  430df2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  430df6:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  430dfa:	83 7d dc 01          	cmpl   $0x1,-0x24(%rbp)
  430dfe:	75 23                	jne    430e23 <rsa_encrypt_wrap+0x183>
  430e00:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  430e04:	48 05 48 01 00 00    	add    $0x148,%rax
  430e0a:	48 89 c7             	mov    %rax,%rdi
  430e0d:	e8 3c 52 01 00       	callq  44604e <getDecryptedValueDWord>
  430e12:	83 f8 00             	cmp    $0x0,%eax
  430e15:	74 0c                	je     430e23 <rsa_encrypt_wrap+0x183>
  430e17:	c7 45 fc 80 bf ff ff 	movl   $0xffffbf80,-0x4(%rbp)
  430e1e:	e9 e6 01 00 00       	jmpq   431009 <rsa_encrypt_wrap+0x369>
  430e23:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  430e27:	48 83 c0 08          	add    $0x8,%rax
  430e2b:	48 89 c7             	mov    %rax,%rdi
  430e2e:	e8 15 53 01 00       	callq  446148 <getDecryptedValueQWord>
  430e33:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  430e37:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  430e3b:	48 83 c0 0b          	add    $0xb,%rax
  430e3f:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
  430e43:	72 11                	jb     430e56 <rsa_encrypt_wrap+0x1b6>
  430e45:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  430e49:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  430e4d:	48 83 c1 0b          	add    $0xb,%rcx
  430e51:	48 39 c8             	cmp    %rcx,%rax
  430e54:	73 0c                	jae    430e62 <rsa_encrypt_wrap+0x1c2>
  430e56:	c7 45 fc 80 bf ff ff 	movl   $0xffffbf80,-0x4(%rbp)
  430e5d:	e9 a7 01 00 00       	jmpq   431009 <rsa_encrypt_wrap+0x369>
  430e62:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  430e66:	48 83 e8 03          	sub    $0x3,%rax
  430e6a:	48 2b 45 d0          	sub    -0x30(%rbp),%rax
  430e6e:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  430e72:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  430e76:	48 89 c1             	mov    %rax,%rcx
  430e79:	48 83 c1 01          	add    $0x1,%rcx
  430e7d:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
  430e81:	c6 00 00             	movb   $0x0,(%rax)
  430e84:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
  430e88:	0f 85 d4 00 00 00    	jne    430f62 <rsa_encrypt_wrap+0x2c2>
  430e8e:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  430e93:	75 0c                	jne    430ea1 <rsa_encrypt_wrap+0x201>
  430e95:	c7 45 fc 80 bf ff ff 	movl   $0xffffbf80,-0x4(%rbp)
  430e9c:	e9 68 01 00 00       	jmpq   431009 <rsa_encrypt_wrap+0x369>
  430ea1:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  430ea5:	48 89 c1             	mov    %rax,%rcx
  430ea8:	48 83 c1 01          	add    $0x1,%rcx
  430eac:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
  430eb0:	c6 00 02             	movb   $0x2,(%rax)
  430eb3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  430eb7:	48 89 c1             	mov    %rax,%rcx
  430eba:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
  430ebe:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
  430ec2:	48 83 f8 00          	cmp    $0x0,%rax
  430ec6:	0f 86 94 00 00 00    	jbe    430f60 <rsa_encrypt_wrap+0x2c0>
  430ecc:	c7 45 9c 64 00 00 00 	movl   $0x64,-0x64(%rbp)
  430ed3:	b8 01 00 00 00       	mov    $0x1,%eax
  430ed8:	89 c2                	mov    %eax,%edx
  430eda:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  430ede:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  430ee2:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
  430ee6:	ff d1                	callq  *%rcx
  430ee8:	45 31 c0             	xor    %r8d,%r8d
  430eeb:	45 88 c1             	mov    %r8b,%r9b
  430eee:	89 45 ac             	mov    %eax,-0x54(%rbp)
  430ef1:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
  430ef5:	0f b6 01             	movzbl (%rcx),%eax
  430ef8:	83 f8 00             	cmp    $0x0,%eax
  430efb:	44 88 8d 07 ff ff ff 	mov    %r9b,-0xf9(%rbp)
  430f02:	75 25                	jne    430f29 <rsa_encrypt_wrap+0x289>
  430f04:	31 c0                	xor    %eax,%eax
  430f06:	88 c1                	mov    %al,%cl
  430f08:	8b 45 9c             	mov    -0x64(%rbp),%eax
  430f0b:	83 c0 ff             	add    $0xffffffff,%eax
  430f0e:	89 45 9c             	mov    %eax,-0x64(%rbp)
  430f11:	83 f8 00             	cmp    $0x0,%eax
  430f14:	88 8d 07 ff ff ff    	mov    %cl,-0xf9(%rbp)
  430f1a:	74 0d                	je     430f29 <rsa_encrypt_wrap+0x289>
  430f1c:	83 7d ac 00          	cmpl   $0x0,-0x54(%rbp)
  430f20:	0f 94 c0             	sete   %al
  430f23:	88 85 07 ff ff ff    	mov    %al,-0xf9(%rbp)
  430f29:	8a 85 07 ff ff ff    	mov    -0xf9(%rbp),%al
  430f2f:	a8 01                	test   $0x1,%al
  430f31:	75 a0                	jne    430ed3 <rsa_encrypt_wrap+0x233>
  430f33:	83 7d 9c 00          	cmpl   $0x0,-0x64(%rbp)
  430f37:	74 06                	je     430f3f <rsa_encrypt_wrap+0x29f>
  430f39:	83 7d ac 00          	cmpl   $0x0,-0x54(%rbp)
  430f3d:	74 10                	je     430f4f <rsa_encrypt_wrap+0x2af>
  430f3f:	8b 45 ac             	mov    -0x54(%rbp),%eax
  430f42:	05 80 bb ff ff       	add    $0xffffbb80,%eax
  430f47:	89 45 fc             	mov    %eax,-0x4(%rbp)
  430f4a:	e9 ba 00 00 00       	jmpq   431009 <rsa_encrypt_wrap+0x369>
  430f4f:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  430f53:	48 83 c0 01          	add    $0x1,%rax
  430f57:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  430f5b:	e9 53 ff ff ff       	jmpq   430eb3 <rsa_encrypt_wrap+0x213>
  430f60:	eb 3d                	jmp    430f9f <rsa_encrypt_wrap+0x2ff>
  430f62:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  430f66:	48 89 c1             	mov    %rax,%rcx
  430f69:	48 83 c1 01          	add    $0x1,%rcx
  430f6d:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
  430f71:	c6 00 01             	movb   $0x1,(%rax)
  430f74:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  430f78:	48 89 c1             	mov    %rax,%rcx
  430f7b:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
  430f7f:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
  430f83:	48 83 f8 00          	cmp    $0x0,%rax
  430f87:	76 14                	jbe    430f9d <rsa_encrypt_wrap+0x2fd>
  430f89:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  430f8d:	48 89 c1             	mov    %rax,%rcx
  430f90:	48 83 c1 01          	add    $0x1,%rcx
  430f94:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
  430f98:	c6 00 ff             	movb   $0xff,(%rax)
  430f9b:	eb d7                	jmp    430f74 <rsa_encrypt_wrap+0x2d4>
  430f9d:	eb 00                	jmp    430f9f <rsa_encrypt_wrap+0x2ff>
  430f9f:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  430fa3:	48 89 c1             	mov    %rax,%rcx
  430fa6:	48 83 c1 01          	add    $0x1,%rcx
  430faa:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
  430fae:	c6 00 00             	movb   $0x0,(%rax)
  430fb1:	48 8b 7d a0          	mov    -0x60(%rbp),%rdi
  430fb5:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  430fb9:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  430fbd:	e8 ae 01 fd ff       	callq  401170 <memcpy@plt>
  430fc2:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
  430fc6:	75 19                	jne    430fe1 <rsa_encrypt_wrap+0x341>
  430fc8:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  430fcc:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
  430fd0:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  430fd4:	e8 97 8e 00 00       	callq  439e70 <mbedtls_rsa_public>
  430fd9:	89 85 00 ff ff ff    	mov    %eax,-0x100(%rbp)
  430fdf:	eb 1f                	jmp    431000 <rsa_encrypt_wrap+0x360>
  430fe1:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  430fe5:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  430fe9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  430fed:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  430ff1:	4c 8b 45 c0          	mov    -0x40(%rbp),%r8
  430ff5:	e8 86 91 00 00       	callq  43a180 <mbedtls_rsa_private>
  430ffa:	89 85 00 ff ff ff    	mov    %eax,-0x100(%rbp)
  431000:	8b 85 00 ff ff ff    	mov    -0x100(%rbp),%eax
  431006:	89 45 fc             	mov    %eax,-0x4(%rbp)
  431009:	8b 45 fc             	mov    -0x4(%rbp),%eax
  43100c:	89 45 98             	mov    %eax,-0x68(%rbp)
  43100f:	eb 07                	jmp    431018 <rsa_encrypt_wrap+0x378>
  431011:	c7 45 98 00 bf ff ff 	movl   $0xffffbf00,-0x68(%rbp)
  431018:	8b 45 98             	mov    -0x68(%rbp),%eax
  43101b:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
  431021:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
  431027:	89 85 fc fe ff ff    	mov    %eax,-0x104(%rbp)
  43102d:	e8 24 49 01 00       	callq  445956 <writeback_cache>
  431032:	8b 85 fc fe ff ff    	mov    -0x104(%rbp),%eax
  431038:	48 81 c4 10 01 00 00 	add    $0x110,%rsp
  43103f:	5d                   	pop    %rbp
  431040:	c3                   	retq   
  431041:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  431048:	0f 1f 84 00 00 00 00 
  43104f:	00 

0000000000431050 <rsa_check_pair_wrap>:
  431050:	55                   	push   %rbp
  431051:	48 89 e5             	mov    %rsp,%rbp
  431054:	48 81 ec e0 0b 00 00 	sub    $0xbe0,%rsp
  43105b:	48 89 bd 90 f9 ff ff 	mov    %rdi,-0x670(%rbp)
  431062:	48 89 b5 88 f9 ff ff 	mov    %rsi,-0x678(%rbp)
  431069:	48 8b b5 90 f9 ff ff 	mov    -0x670(%rbp),%rsi
  431070:	48 8b bd 88 f9 ff ff 	mov    -0x678(%rbp),%rdi
  431077:	48 89 b5 a0 f9 ff ff 	mov    %rsi,-0x660(%rbp)
  43107e:	48 89 bd 98 f9 ff ff 	mov    %rdi,-0x668(%rbp)
  431085:	48 8b bd a0 f9 ff ff 	mov    -0x660(%rbp),%rdi
  43108c:	e8 af 8c 00 00       	callq  439d40 <mbedtls_rsa_check_pubkey>
  431091:	83 f8 00             	cmp    $0x0,%eax
  431094:	0f 85 79 20 00 00    	jne    433113 <rsa_check_pair_wrap+0x20c3>
  43109a:	48 8b 85 98 f9 ff ff 	mov    -0x668(%rbp),%rax
  4310a1:	48 89 85 b0 f9 ff ff 	mov    %rax,-0x650(%rbp)
  4310a8:	48 8b bd b0 f9 ff ff 	mov    -0x650(%rbp),%rdi
  4310af:	e8 8c 8c 00 00       	callq  439d40 <mbedtls_rsa_check_pubkey>
  4310b4:	83 f8 00             	cmp    $0x0,%eax
  4310b7:	75 1a                	jne    4310d3 <rsa_check_pair_wrap+0x83>
  4310b9:	48 8b bd b0 f9 ff ff 	mov    -0x650(%rbp),%rdi
  4310c0:	b8 01 00 00 00       	mov    $0x1,%eax
  4310c5:	89 c6                	mov    %eax,%esi
  4310c7:	89 c2                	mov    %eax,%edx
  4310c9:	e8 d2 81 00 00       	callq  4392a0 <rsa_check_context>
  4310ce:	83 f8 00             	cmp    $0x0,%eax
  4310d1:	74 0f                	je     4310e2 <rsa_check_pair_wrap+0x92>
  4310d3:	c7 85 bc f9 ff ff 00 	movl   $0xffffbe00,-0x644(%rbp)
  4310da:	be ff ff 
  4310dd:	e9 26 20 00 00       	jmpq   433108 <rsa_check_pair_wrap+0x20b8>
  4310e2:	48 8b 85 b0 f9 ff ff 	mov    -0x650(%rbp),%rax
  4310e9:	48 83 c0 10          	add    $0x10,%rax
  4310ed:	48 8b 8d b0 f9 ff ff 	mov    -0x650(%rbp),%rcx
  4310f4:	48 83 c1 58          	add    $0x58,%rcx
  4310f8:	48 8b 95 b0 f9 ff ff 	mov    -0x650(%rbp),%rdx
  4310ff:	48 83 c2 70          	add    $0x70,%rdx
  431103:	48 8b b5 b0 f9 ff ff 	mov    -0x650(%rbp),%rsi
  43110a:	48 83 c6 40          	add    $0x40,%rsi
  43110e:	48 8b bd b0 f9 ff ff 	mov    -0x650(%rbp),%rdi
  431115:	48 83 c7 28          	add    $0x28,%rdi
  431119:	48 89 85 80 f9 ff ff 	mov    %rax,-0x680(%rbp)
  431120:	48 89 8d 78 f9 ff ff 	mov    %rcx,-0x688(%rbp)
  431127:	48 89 95 70 f9 ff ff 	mov    %rdx,-0x690(%rbp)
  43112e:	48 89 b5 68 f9 ff ff 	mov    %rsi,-0x698(%rbp)
  431135:	48 89 bd 60 f9 ff ff 	mov    %rdi,-0x6a0(%rbp)
  43113c:	e8 15 48 01 00       	callq  445956 <writeback_cache>
  431141:	e8 10 48 01 00       	callq  445956 <writeback_cache>
  431146:	48 8b 85 80 f9 ff ff 	mov    -0x680(%rbp),%rax
  43114d:	48 89 85 50 fa ff ff 	mov    %rax,-0x5b0(%rbp)
  431154:	48 8b 85 78 f9 ff ff 	mov    -0x688(%rbp),%rax
  43115b:	48 89 85 48 fa ff ff 	mov    %rax,-0x5b8(%rbp)
  431162:	48 8b 85 70 f9 ff ff 	mov    -0x690(%rbp),%rax
  431169:	48 89 85 40 fa ff ff 	mov    %rax,-0x5c0(%rbp)
  431170:	48 8b 85 68 f9 ff ff 	mov    -0x698(%rbp),%rax
  431177:	48 89 85 38 fa ff ff 	mov    %rax,-0x5c8(%rbp)
  43117e:	48 8b 85 60 f9 ff ff 	mov    -0x6a0(%rbp),%rax
  431185:	48 89 85 30 fa ff ff 	mov    %rax,-0x5d0(%rbp)
  43118c:	48 c7 85 28 fa ff ff 	movq   $0x0,-0x5d8(%rbp)
  431193:	00 00 00 00 
  431197:	48 c7 85 20 fa ff ff 	movq   $0x0,-0x5e0(%rbp)
  43119e:	00 00 00 00 
  4311a2:	c7 85 1c fa ff ff 00 	movl   $0x0,-0x5e4(%rbp)
  4311a9:	00 00 00 
  4311ac:	48 8d 85 f0 f9 ff ff 	lea    -0x610(%rbp),%rax
  4311b3:	48 89 85 58 fa ff ff 	mov    %rax,-0x5a8(%rbp)
  4311ba:	48 8b 85 58 fa ff ff 	mov    -0x5a8(%rbp),%rax
  4311c1:	48 89 c7             	mov    %rax,%rdi
  4311c4:	be 01 00 00 00       	mov    $0x1,%esi
  4311c9:	e8 30 4a 01 00       	callq  445bfe <setEncryptedValueDWord>
  4311ce:	31 f6                	xor    %esi,%esi
  4311d0:	48 8b 8d 58 fa ff ff 	mov    -0x5a8(%rbp),%rcx
  4311d7:	48 83 c1 08          	add    $0x8,%rcx
  4311db:	48 89 cf             	mov    %rcx,%rdi
  4311de:	48 89 85 58 f9 ff ff 	mov    %rax,-0x6a8(%rbp)
  4311e5:	e8 12 4b 01 00       	callq  445cfc <setEncryptedValueQWord>
  4311ea:	45 31 c0             	xor    %r8d,%r8d
  4311ed:	44 89 c6             	mov    %r8d,%esi
  4311f0:	48 8b 8d 58 fa ff ff 	mov    -0x5a8(%rbp),%rcx
  4311f7:	48 83 c1 10          	add    $0x10,%rcx
  4311fb:	48 89 cf             	mov    %rcx,%rdi
  4311fe:	48 89 85 50 f9 ff ff 	mov    %rax,-0x6b0(%rbp)
  431205:	e8 f2 4a 01 00       	callq  445cfc <setEncryptedValueQWord>
  43120a:	48 8d 8d c0 f9 ff ff 	lea    -0x640(%rbp),%rcx
  431211:	48 89 8d 88 fa ff ff 	mov    %rcx,-0x578(%rbp)
  431218:	48 8b 8d 88 fa ff ff 	mov    -0x578(%rbp),%rcx
  43121f:	48 89 cf             	mov    %rcx,%rdi
  431222:	be 01 00 00 00       	mov    $0x1,%esi
  431227:	48 89 85 48 f9 ff ff 	mov    %rax,-0x6b8(%rbp)
  43122e:	e8 cb 49 01 00       	callq  445bfe <setEncryptedValueDWord>
  431233:	31 f6                	xor    %esi,%esi
  431235:	48 8b 8d 88 fa ff ff 	mov    -0x578(%rbp),%rcx
  43123c:	48 83 c1 08          	add    $0x8,%rcx
  431240:	48 89 cf             	mov    %rcx,%rdi
  431243:	48 89 85 40 f9 ff ff 	mov    %rax,-0x6c0(%rbp)
  43124a:	e8 ad 4a 01 00       	callq  445cfc <setEncryptedValueQWord>
  43124f:	45 31 c0             	xor    %r8d,%r8d
  431252:	44 89 c6             	mov    %r8d,%esi
  431255:	48 8b 8d 88 fa ff ff 	mov    -0x578(%rbp),%rcx
  43125c:	48 83 c1 10          	add    $0x10,%rcx
  431260:	48 89 cf             	mov    %rcx,%rdi
  431263:	48 89 85 38 f9 ff ff 	mov    %rax,-0x6c8(%rbp)
  43126a:	e8 8d 4a 01 00       	callq  445cfc <setEncryptedValueQWord>
  43126f:	48 83 bd 48 fa ff ff 	cmpq   $0x0,-0x5b8(%rbp)
  431276:	00 
  431277:	48 89 85 30 f9 ff ff 	mov    %rax,-0x6d0(%rbp)
  43127e:	0f 84 85 01 00 00    	je     431409 <rsa_check_pair_wrap+0x3b9>
  431284:	48 83 bd 40 fa ff ff 	cmpq   $0x0,-0x5c0(%rbp)
  43128b:	00 
  43128c:	0f 84 77 01 00 00    	je     431409 <rsa_check_pair_wrap+0x3b9>
  431292:	48 83 bd 50 fa ff ff 	cmpq   $0x0,-0x5b0(%rbp)
  431299:	00 
  43129a:	0f 84 69 01 00 00    	je     431409 <rsa_check_pair_wrap+0x3b9>
  4312a0:	48 8b b5 48 fa ff ff 	mov    -0x5b8(%rbp),%rsi
  4312a7:	48 8b 95 40 fa ff ff 	mov    -0x5c0(%rbp),%rdx
  4312ae:	48 8d bd f0 f9 ff ff 	lea    -0x610(%rbp),%rdi
  4312b5:	e8 06 b3 fe ff       	callq  41c5c0 <mbedtls_mpi_mul_mpi>
  4312ba:	89 85 1c fa ff ff    	mov    %eax,-0x5e4(%rbp)
  4312c0:	83 f8 00             	cmp    $0x0,%eax
  4312c3:	74 05                	je     4312ca <rsa_check_pair_wrap+0x27a>
  4312c5:	e9 d4 0d 00 00       	jmpq   43209e <rsa_check_pair_wrap+0x104e>
  4312ca:	48 8b 85 50 fa ff ff 	mov    -0x5b0(%rbp),%rax
  4312d1:	48 89 85 28 f9 ff ff 	mov    %rax,-0x6d8(%rbp)
  4312d8:	e8 79 46 01 00       	callq  445956 <writeback_cache>
  4312dd:	48 8b 85 28 f9 ff ff 	mov    -0x6d8(%rbp),%rax
  4312e4:	48 89 85 e8 fa ff ff 	mov    %rax,-0x518(%rbp)
  4312eb:	48 c7 85 e0 fa ff ff 	movq   $0x1,-0x520(%rbp)
  4312f2:	01 00 00 00 
  4312f6:	48 83 bd e0 fa ff ff 	cmpq   $0x0,-0x520(%rbp)
  4312fd:	00 
  4312fe:	7d 14                	jge    431314 <rsa_check_pair_wrap+0x2c4>
  431300:	31 c0                	xor    %eax,%eax
  431302:	89 c1                	mov    %eax,%ecx
  431304:	48 2b 8d e0 fa ff ff 	sub    -0x520(%rbp),%rcx
  43130b:	48 89 8d 20 f9 ff ff 	mov    %rcx,-0x6e0(%rbp)
  431312:	eb 0e                	jmp    431322 <rsa_check_pair_wrap+0x2d2>
  431314:	48 8b 85 e0 fa ff ff 	mov    -0x520(%rbp),%rax
  43131b:	48 89 85 20 f9 ff ff 	mov    %rax,-0x6e0(%rbp)
  431322:	48 8b 85 20 f9 ff ff 	mov    -0x6e0(%rbp),%rax
  431329:	48 8d 8d 90 fa ff ff 	lea    -0x570(%rbp),%rcx
  431330:	48 89 cf             	mov    %rcx,%rdi
  431333:	48 89 c6             	mov    %rax,%rsi
  431336:	e8 c1 49 01 00       	callq  445cfc <setEncryptedValueQWord>
  43133b:	48 8d 8d b0 fa ff ff 	lea    -0x550(%rbp),%rcx
  431342:	48 8b b5 e0 fa ff ff 	mov    -0x520(%rbp),%rsi
  431349:	48 83 fe 00          	cmp    $0x0,%rsi
  43134d:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  431352:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  431358:	44 0f 4c c2          	cmovl  %edx,%r8d
  43135c:	48 89 cf             	mov    %rcx,%rdi
  43135f:	44 89 c6             	mov    %r8d,%esi
  431362:	48 89 85 18 f9 ff ff 	mov    %rax,-0x6e8(%rbp)
  431369:	e8 90 48 01 00       	callq  445bfe <setEncryptedValueDWord>
  43136e:	ba 01 00 00 00       	mov    $0x1,%edx
  431373:	89 d6                	mov    %edx,%esi
  431375:	48 8d 8d b0 fa ff ff 	lea    -0x550(%rbp),%rcx
  43137c:	48 83 c1 08          	add    $0x8,%rcx
  431380:	48 89 cf             	mov    %rcx,%rdi
  431383:	48 89 85 10 f9 ff ff 	mov    %rax,-0x6f0(%rbp)
  43138a:	e8 6d 49 01 00       	callq  445cfc <setEncryptedValueQWord>
  43138f:	48 8d b5 90 fa ff ff 	lea    -0x570(%rbp),%rsi
  431396:	48 8d 8d b0 fa ff ff 	lea    -0x550(%rbp),%rcx
  43139d:	48 83 c1 10          	add    $0x10,%rcx
  4313a1:	48 89 cf             	mov    %rcx,%rdi
  4313a4:	48 89 85 08 f9 ff ff 	mov    %rax,-0x6f8(%rbp)
  4313ab:	e8 4c 49 01 00       	callq  445cfc <setEncryptedValueQWord>
  4313b0:	48 8b bd e8 fa ff ff 	mov    -0x518(%rbp),%rdi
  4313b7:	48 8d b5 b0 fa ff ff 	lea    -0x550(%rbp),%rsi
  4313be:	48 89 85 00 f9 ff ff 	mov    %rax,-0x700(%rbp)
  4313c5:	e8 86 d6 fe ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  4313ca:	89 85 fc f8 ff ff    	mov    %eax,-0x704(%rbp)
  4313d0:	e8 81 45 01 00       	callq  445956 <writeback_cache>
  4313d5:	8b 85 fc f8 ff ff    	mov    -0x704(%rbp),%eax
  4313db:	83 f8 00             	cmp    $0x0,%eax
  4313de:	7e 18                	jle    4313f8 <rsa_check_pair_wrap+0x3a8>
  4313e0:	48 8b b5 50 fa ff ff 	mov    -0x5b0(%rbp),%rsi
  4313e7:	48 8d bd f0 f9 ff ff 	lea    -0x610(%rbp),%rdi
  4313ee:	e8 5d d6 fe ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  4313f3:	83 f8 00             	cmp    $0x0,%eax
  4313f6:	74 0f                	je     431407 <rsa_check_pair_wrap+0x3b7>
  4313f8:	c7 85 1c fa ff ff 00 	movl   $0xffffbe00,-0x5e4(%rbp)
  4313ff:	be ff ff 
  431402:	e9 97 0c 00 00       	jmpq   43209e <rsa_check_pair_wrap+0x104e>
  431407:	eb 00                	jmp    431409 <rsa_check_pair_wrap+0x3b9>
  431409:	48 83 bd 50 fa ff ff 	cmpq   $0x0,-0x5b0(%rbp)
  431410:	00 
  431411:	0f 84 8d 02 00 00    	je     4316a4 <rsa_check_pair_wrap+0x654>
  431417:	48 83 bd 38 fa ff ff 	cmpq   $0x0,-0x5c8(%rbp)
  43141e:	00 
  43141f:	0f 84 7f 02 00 00    	je     4316a4 <rsa_check_pair_wrap+0x654>
  431425:	48 83 bd 30 fa ff ff 	cmpq   $0x0,-0x5d0(%rbp)
  43142c:	00 
  43142d:	0f 84 71 02 00 00    	je     4316a4 <rsa_check_pair_wrap+0x654>
  431433:	48 8b 85 38 fa ff ff 	mov    -0x5c8(%rbp),%rax
  43143a:	48 89 85 f0 f8 ff ff 	mov    %rax,-0x710(%rbp)
  431441:	e8 10 45 01 00       	callq  445956 <writeback_cache>
  431446:	48 8b 85 f0 f8 ff ff 	mov    -0x710(%rbp),%rax
  43144d:	48 89 85 28 fb ff ff 	mov    %rax,-0x4d8(%rbp)
  431454:	48 c7 85 20 fb ff ff 	movq   $0x1,-0x4e0(%rbp)
  43145b:	01 00 00 00 
  43145f:	48 83 bd 20 fb ff ff 	cmpq   $0x0,-0x4e0(%rbp)
  431466:	00 
  431467:	7d 14                	jge    43147d <rsa_check_pair_wrap+0x42d>
  431469:	31 c0                	xor    %eax,%eax
  43146b:	89 c1                	mov    %eax,%ecx
  43146d:	48 2b 8d 20 fb ff ff 	sub    -0x4e0(%rbp),%rcx
  431474:	48 89 8d e8 f8 ff ff 	mov    %rcx,-0x718(%rbp)
  43147b:	eb 0e                	jmp    43148b <rsa_check_pair_wrap+0x43b>
  43147d:	48 8b 85 20 fb ff ff 	mov    -0x4e0(%rbp),%rax
  431484:	48 89 85 e8 f8 ff ff 	mov    %rax,-0x718(%rbp)
  43148b:	48 8b 85 e8 f8 ff ff 	mov    -0x718(%rbp),%rax
  431492:	48 8d 8d 90 fa ff ff 	lea    -0x570(%rbp),%rcx
  431499:	48 89 cf             	mov    %rcx,%rdi
  43149c:	48 89 c6             	mov    %rax,%rsi
  43149f:	e8 58 48 01 00       	callq  445cfc <setEncryptedValueQWord>
  4314a4:	48 8d 8d f0 fa ff ff 	lea    -0x510(%rbp),%rcx
  4314ab:	48 8b b5 20 fb ff ff 	mov    -0x4e0(%rbp),%rsi
  4314b2:	48 83 fe 00          	cmp    $0x0,%rsi
  4314b6:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  4314bb:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  4314c1:	44 0f 4c c2          	cmovl  %edx,%r8d
  4314c5:	48 89 cf             	mov    %rcx,%rdi
  4314c8:	44 89 c6             	mov    %r8d,%esi
  4314cb:	48 89 85 e0 f8 ff ff 	mov    %rax,-0x720(%rbp)
  4314d2:	e8 27 47 01 00       	callq  445bfe <setEncryptedValueDWord>
  4314d7:	ba 01 00 00 00       	mov    $0x1,%edx
  4314dc:	89 d6                	mov    %edx,%esi
  4314de:	48 8d 8d f0 fa ff ff 	lea    -0x510(%rbp),%rcx
  4314e5:	48 83 c1 08          	add    $0x8,%rcx
  4314e9:	48 89 cf             	mov    %rcx,%rdi
  4314ec:	48 89 85 d8 f8 ff ff 	mov    %rax,-0x728(%rbp)
  4314f3:	e8 04 48 01 00       	callq  445cfc <setEncryptedValueQWord>
  4314f8:	48 8d b5 90 fa ff ff 	lea    -0x570(%rbp),%rsi
  4314ff:	48 8d 8d f0 fa ff ff 	lea    -0x510(%rbp),%rcx
  431506:	48 83 c1 10          	add    $0x10,%rcx
  43150a:	48 89 cf             	mov    %rcx,%rdi
  43150d:	48 89 85 d0 f8 ff ff 	mov    %rax,-0x730(%rbp)
  431514:	e8 e3 47 01 00       	callq  445cfc <setEncryptedValueQWord>
  431519:	48 8b bd 28 fb ff ff 	mov    -0x4d8(%rbp),%rdi
  431520:	48 8d b5 f0 fa ff ff 	lea    -0x510(%rbp),%rsi
  431527:	48 89 85 c8 f8 ff ff 	mov    %rax,-0x738(%rbp)
  43152e:	e8 1d d5 fe ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  431533:	89 85 c4 f8 ff ff    	mov    %eax,-0x73c(%rbp)
  431539:	e8 18 44 01 00       	callq  445956 <writeback_cache>
  43153e:	8b 85 c4 f8 ff ff    	mov    -0x73c(%rbp),%eax
  431544:	83 f8 00             	cmp    $0x0,%eax
  431547:	0f 8e 46 01 00 00    	jle    431693 <rsa_check_pair_wrap+0x643>
  43154d:	48 8b 85 30 fa ff ff 	mov    -0x5d0(%rbp),%rax
  431554:	48 89 85 b8 f8 ff ff 	mov    %rax,-0x748(%rbp)
  43155b:	e8 f6 43 01 00       	callq  445956 <writeback_cache>
  431560:	48 8b 85 b8 f8 ff ff 	mov    -0x748(%rbp),%rax
  431567:	48 89 85 68 fb ff ff 	mov    %rax,-0x498(%rbp)
  43156e:	48 c7 85 60 fb ff ff 	movq   $0x1,-0x4a0(%rbp)
  431575:	01 00 00 00 
  431579:	48 83 bd 60 fb ff ff 	cmpq   $0x0,-0x4a0(%rbp)
  431580:	00 
  431581:	7d 14                	jge    431597 <rsa_check_pair_wrap+0x547>
  431583:	31 c0                	xor    %eax,%eax
  431585:	89 c1                	mov    %eax,%ecx
  431587:	48 2b 8d 60 fb ff ff 	sub    -0x4a0(%rbp),%rcx
  43158e:	48 89 8d b0 f8 ff ff 	mov    %rcx,-0x750(%rbp)
  431595:	eb 0e                	jmp    4315a5 <rsa_check_pair_wrap+0x555>
  431597:	48 8b 85 60 fb ff ff 	mov    -0x4a0(%rbp),%rax
  43159e:	48 89 85 b0 f8 ff ff 	mov    %rax,-0x750(%rbp)
  4315a5:	48 8b 85 b0 f8 ff ff 	mov    -0x750(%rbp),%rax
  4315ac:	48 8d 8d 90 fa ff ff 	lea    -0x570(%rbp),%rcx
  4315b3:	48 89 cf             	mov    %rcx,%rdi
  4315b6:	48 89 c6             	mov    %rax,%rsi
  4315b9:	e8 3e 47 01 00       	callq  445cfc <setEncryptedValueQWord>
  4315be:	48 8d 8d 30 fb ff ff 	lea    -0x4d0(%rbp),%rcx
  4315c5:	48 8b b5 60 fb ff ff 	mov    -0x4a0(%rbp),%rsi
  4315cc:	48 83 fe 00          	cmp    $0x0,%rsi
  4315d0:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  4315d5:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  4315db:	44 0f 4c c2          	cmovl  %edx,%r8d
  4315df:	48 89 cf             	mov    %rcx,%rdi
  4315e2:	44 89 c6             	mov    %r8d,%esi
  4315e5:	48 89 85 a8 f8 ff ff 	mov    %rax,-0x758(%rbp)
  4315ec:	e8 0d 46 01 00       	callq  445bfe <setEncryptedValueDWord>
  4315f1:	ba 01 00 00 00       	mov    $0x1,%edx
  4315f6:	89 d6                	mov    %edx,%esi
  4315f8:	48 8d 8d 30 fb ff ff 	lea    -0x4d0(%rbp),%rcx
  4315ff:	48 83 c1 08          	add    $0x8,%rcx
  431603:	48 89 cf             	mov    %rcx,%rdi
  431606:	48 89 85 a0 f8 ff ff 	mov    %rax,-0x760(%rbp)
  43160d:	e8 ea 46 01 00       	callq  445cfc <setEncryptedValueQWord>
  431612:	48 8d b5 90 fa ff ff 	lea    -0x570(%rbp),%rsi
  431619:	48 8d 8d 30 fb ff ff 	lea    -0x4d0(%rbp),%rcx
  431620:	48 83 c1 10          	add    $0x10,%rcx
  431624:	48 89 cf             	mov    %rcx,%rdi
  431627:	48 89 85 98 f8 ff ff 	mov    %rax,-0x768(%rbp)
  43162e:	e8 c9 46 01 00       	callq  445cfc <setEncryptedValueQWord>
  431633:	48 8b bd 68 fb ff ff 	mov    -0x498(%rbp),%rdi
  43163a:	48 8d b5 30 fb ff ff 	lea    -0x4d0(%rbp),%rsi
  431641:	48 89 85 90 f8 ff ff 	mov    %rax,-0x770(%rbp)
  431648:	e8 03 d4 fe ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  43164d:	89 85 8c f8 ff ff    	mov    %eax,-0x774(%rbp)
  431653:	e8 fe 42 01 00       	callq  445956 <writeback_cache>
  431658:	8b 85 8c f8 ff ff    	mov    -0x774(%rbp),%eax
  43165e:	83 f8 00             	cmp    $0x0,%eax
  431661:	7e 30                	jle    431693 <rsa_check_pair_wrap+0x643>
  431663:	48 8b bd 38 fa ff ff 	mov    -0x5c8(%rbp),%rdi
  43166a:	48 8b b5 50 fa ff ff 	mov    -0x5b0(%rbp),%rsi
  431671:	e8 da d3 fe ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  431676:	83 f8 00             	cmp    $0x0,%eax
  431679:	7d 18                	jge    431693 <rsa_check_pair_wrap+0x643>
  43167b:	48 8b bd 30 fa ff ff 	mov    -0x5d0(%rbp),%rdi
  431682:	48 8b b5 50 fa ff ff 	mov    -0x5b0(%rbp),%rsi
  431689:	e8 c2 d3 fe ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  43168e:	83 f8 00             	cmp    $0x0,%eax
  431691:	7c 0f                	jl     4316a2 <rsa_check_pair_wrap+0x652>
  431693:	c7 85 1c fa ff ff 00 	movl   $0xffffbe00,-0x5e4(%rbp)
  43169a:	be ff ff 
  43169d:	e9 fc 09 00 00       	jmpq   43209e <rsa_check_pair_wrap+0x104e>
  4316a2:	eb 00                	jmp    4316a4 <rsa_check_pair_wrap+0x654>
  4316a4:	48 83 bd 48 fa ff ff 	cmpq   $0x0,-0x5b8(%rbp)
  4316ab:	00 
  4316ac:	0f 84 ea 09 00 00    	je     43209c <rsa_check_pair_wrap+0x104c>
  4316b2:	48 83 bd 40 fa ff ff 	cmpq   $0x0,-0x5c0(%rbp)
  4316b9:	00 
  4316ba:	0f 84 dc 09 00 00    	je     43209c <rsa_check_pair_wrap+0x104c>
  4316c0:	48 83 bd 38 fa ff ff 	cmpq   $0x0,-0x5c8(%rbp)
  4316c7:	00 
  4316c8:	0f 84 ce 09 00 00    	je     43209c <rsa_check_pair_wrap+0x104c>
  4316ce:	48 83 bd 30 fa ff ff 	cmpq   $0x0,-0x5d0(%rbp)
  4316d5:	00 
  4316d6:	0f 84 c0 09 00 00    	je     43209c <rsa_check_pair_wrap+0x104c>
  4316dc:	48 8b 85 48 fa ff ff 	mov    -0x5b8(%rbp),%rax
  4316e3:	48 89 85 80 f8 ff ff 	mov    %rax,-0x780(%rbp)
  4316ea:	e8 67 42 01 00       	callq  445956 <writeback_cache>
  4316ef:	48 8b 85 80 f8 ff ff 	mov    -0x780(%rbp),%rax
  4316f6:	48 89 85 a8 fb ff ff 	mov    %rax,-0x458(%rbp)
  4316fd:	48 c7 85 a0 fb ff ff 	movq   $0x1,-0x460(%rbp)
  431704:	01 00 00 00 
  431708:	48 83 bd a0 fb ff ff 	cmpq   $0x0,-0x460(%rbp)
  43170f:	00 
  431710:	7d 14                	jge    431726 <rsa_check_pair_wrap+0x6d6>
  431712:	31 c0                	xor    %eax,%eax
  431714:	89 c1                	mov    %eax,%ecx
  431716:	48 2b 8d a0 fb ff ff 	sub    -0x460(%rbp),%rcx
  43171d:	48 89 8d 78 f8 ff ff 	mov    %rcx,-0x788(%rbp)
  431724:	eb 0e                	jmp    431734 <rsa_check_pair_wrap+0x6e4>
  431726:	48 8b 85 a0 fb ff ff 	mov    -0x460(%rbp),%rax
  43172d:	48 89 85 78 f8 ff ff 	mov    %rax,-0x788(%rbp)
  431734:	48 8b 85 78 f8 ff ff 	mov    -0x788(%rbp),%rax
  43173b:	48 8d 8d 90 fa ff ff 	lea    -0x570(%rbp),%rcx
  431742:	48 89 cf             	mov    %rcx,%rdi
  431745:	48 89 c6             	mov    %rax,%rsi
  431748:	e8 af 45 01 00       	callq  445cfc <setEncryptedValueQWord>
  43174d:	48 8d 8d 70 fb ff ff 	lea    -0x490(%rbp),%rcx
  431754:	48 8b b5 a0 fb ff ff 	mov    -0x460(%rbp),%rsi
  43175b:	48 83 fe 00          	cmp    $0x0,%rsi
  43175f:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  431764:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  43176a:	44 0f 4c c2          	cmovl  %edx,%r8d
  43176e:	48 89 cf             	mov    %rcx,%rdi
  431771:	44 89 c6             	mov    %r8d,%esi
  431774:	48 89 85 70 f8 ff ff 	mov    %rax,-0x790(%rbp)
  43177b:	e8 7e 44 01 00       	callq  445bfe <setEncryptedValueDWord>
  431780:	ba 01 00 00 00       	mov    $0x1,%edx
  431785:	89 d6                	mov    %edx,%esi
  431787:	48 8d 8d 70 fb ff ff 	lea    -0x490(%rbp),%rcx
  43178e:	48 83 c1 08          	add    $0x8,%rcx
  431792:	48 89 cf             	mov    %rcx,%rdi
  431795:	48 89 85 68 f8 ff ff 	mov    %rax,-0x798(%rbp)
  43179c:	e8 5b 45 01 00       	callq  445cfc <setEncryptedValueQWord>
  4317a1:	48 8d b5 90 fa ff ff 	lea    -0x570(%rbp),%rsi
  4317a8:	48 8d 8d 70 fb ff ff 	lea    -0x490(%rbp),%rcx
  4317af:	48 83 c1 10          	add    $0x10,%rcx
  4317b3:	48 89 cf             	mov    %rcx,%rdi
  4317b6:	48 89 85 60 f8 ff ff 	mov    %rax,-0x7a0(%rbp)
  4317bd:	e8 3a 45 01 00       	callq  445cfc <setEncryptedValueQWord>
  4317c2:	48 8b bd a8 fb ff ff 	mov    -0x458(%rbp),%rdi
  4317c9:	48 8d b5 70 fb ff ff 	lea    -0x490(%rbp),%rsi
  4317d0:	48 89 85 58 f8 ff ff 	mov    %rax,-0x7a8(%rbp)
  4317d7:	e8 74 d2 fe ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  4317dc:	89 85 54 f8 ff ff    	mov    %eax,-0x7ac(%rbp)
  4317e2:	e8 6f 41 01 00       	callq  445956 <writeback_cache>
  4317e7:	8b 85 54 f8 ff ff    	mov    -0x7ac(%rbp),%eax
  4317ed:	83 f8 00             	cmp    $0x0,%eax
  4317f0:	0f 8e 16 01 00 00    	jle    43190c <rsa_check_pair_wrap+0x8bc>
  4317f6:	48 8b 85 40 fa ff ff 	mov    -0x5c0(%rbp),%rax
  4317fd:	48 89 85 48 f8 ff ff 	mov    %rax,-0x7b8(%rbp)
  431804:	e8 4d 41 01 00       	callq  445956 <writeback_cache>
  431809:	48 8b 85 48 f8 ff ff 	mov    -0x7b8(%rbp),%rax
  431810:	48 89 85 e8 fb ff ff 	mov    %rax,-0x418(%rbp)
  431817:	48 c7 85 e0 fb ff ff 	movq   $0x1,-0x420(%rbp)
  43181e:	01 00 00 00 
  431822:	48 83 bd e0 fb ff ff 	cmpq   $0x0,-0x420(%rbp)
  431829:	00 
  43182a:	7d 14                	jge    431840 <rsa_check_pair_wrap+0x7f0>
  43182c:	31 c0                	xor    %eax,%eax
  43182e:	89 c1                	mov    %eax,%ecx
  431830:	48 2b 8d e0 fb ff ff 	sub    -0x420(%rbp),%rcx
  431837:	48 89 8d 40 f8 ff ff 	mov    %rcx,-0x7c0(%rbp)
  43183e:	eb 0e                	jmp    43184e <rsa_check_pair_wrap+0x7fe>
  431840:	48 8b 85 e0 fb ff ff 	mov    -0x420(%rbp),%rax
  431847:	48 89 85 40 f8 ff ff 	mov    %rax,-0x7c0(%rbp)
  43184e:	48 8b 85 40 f8 ff ff 	mov    -0x7c0(%rbp),%rax
  431855:	48 8d 8d 90 fa ff ff 	lea    -0x570(%rbp),%rcx
  43185c:	48 89 cf             	mov    %rcx,%rdi
  43185f:	48 89 c6             	mov    %rax,%rsi
  431862:	e8 95 44 01 00       	callq  445cfc <setEncryptedValueQWord>
  431867:	48 8d 8d b0 fb ff ff 	lea    -0x450(%rbp),%rcx
  43186e:	48 8b b5 e0 fb ff ff 	mov    -0x420(%rbp),%rsi
  431875:	48 83 fe 00          	cmp    $0x0,%rsi
  431879:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  43187e:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  431884:	44 0f 4c c2          	cmovl  %edx,%r8d
  431888:	48 89 cf             	mov    %rcx,%rdi
  43188b:	44 89 c6             	mov    %r8d,%esi
  43188e:	48 89 85 38 f8 ff ff 	mov    %rax,-0x7c8(%rbp)
  431895:	e8 64 43 01 00       	callq  445bfe <setEncryptedValueDWord>
  43189a:	ba 01 00 00 00       	mov    $0x1,%edx
  43189f:	89 d6                	mov    %edx,%esi
  4318a1:	48 8d 8d b0 fb ff ff 	lea    -0x450(%rbp),%rcx
  4318a8:	48 83 c1 08          	add    $0x8,%rcx
  4318ac:	48 89 cf             	mov    %rcx,%rdi
  4318af:	48 89 85 30 f8 ff ff 	mov    %rax,-0x7d0(%rbp)
  4318b6:	e8 41 44 01 00       	callq  445cfc <setEncryptedValueQWord>
  4318bb:	48 8d b5 90 fa ff ff 	lea    -0x570(%rbp),%rsi
  4318c2:	48 8d 8d b0 fb ff ff 	lea    -0x450(%rbp),%rcx
  4318c9:	48 83 c1 10          	add    $0x10,%rcx
  4318cd:	48 89 cf             	mov    %rcx,%rdi
  4318d0:	48 89 85 28 f8 ff ff 	mov    %rax,-0x7d8(%rbp)
  4318d7:	e8 20 44 01 00       	callq  445cfc <setEncryptedValueQWord>
  4318dc:	48 8b bd e8 fb ff ff 	mov    -0x418(%rbp),%rdi
  4318e3:	48 8d b5 b0 fb ff ff 	lea    -0x450(%rbp),%rsi
  4318ea:	48 89 85 20 f8 ff ff 	mov    %rax,-0x7e0(%rbp)
  4318f1:	e8 5a d1 fe ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  4318f6:	89 85 1c f8 ff ff    	mov    %eax,-0x7e4(%rbp)
  4318fc:	e8 55 40 01 00       	callq  445956 <writeback_cache>
  431901:	8b 85 1c f8 ff ff    	mov    -0x7e4(%rbp),%eax
  431907:	83 f8 00             	cmp    $0x0,%eax
  43190a:	7f 0f                	jg     43191b <rsa_check_pair_wrap+0x8cb>
  43190c:	c7 85 1c fa ff ff 00 	movl   $0xffffbe00,-0x5e4(%rbp)
  431913:	be ff ff 
  431916:	e9 83 07 00 00       	jmpq   43209e <rsa_check_pair_wrap+0x104e>
  43191b:	48 8b b5 38 fa ff ff 	mov    -0x5c8(%rbp),%rsi
  431922:	48 8b 95 30 fa ff ff 	mov    -0x5d0(%rbp),%rdx
  431929:	48 8d bd f0 f9 ff ff 	lea    -0x610(%rbp),%rdi
  431930:	e8 8b ac fe ff       	callq  41c5c0 <mbedtls_mpi_mul_mpi>
  431935:	89 85 1c fa ff ff    	mov    %eax,-0x5e4(%rbp)
  43193b:	83 f8 00             	cmp    $0x0,%eax
  43193e:	74 05                	je     431945 <rsa_check_pair_wrap+0x8f5>
  431940:	e9 59 07 00 00       	jmpq   43209e <rsa_check_pair_wrap+0x104e>
  431945:	e8 0c 40 01 00       	callq  445956 <writeback_cache>
  43194a:	48 8d 85 f0 f9 ff ff 	lea    -0x610(%rbp),%rax
  431951:	48 89 85 28 fc ff ff 	mov    %rax,-0x3d8(%rbp)
  431958:	48 89 85 20 fc ff ff 	mov    %rax,-0x3e0(%rbp)
  43195f:	48 c7 85 18 fc ff ff 	movq   $0x1,-0x3e8(%rbp)
  431966:	01 00 00 00 
  43196a:	48 83 bd 18 fc ff ff 	cmpq   $0x0,-0x3e8(%rbp)
  431971:	00 
  431972:	7d 14                	jge    431988 <rsa_check_pair_wrap+0x938>
  431974:	31 c0                	xor    %eax,%eax
  431976:	89 c1                	mov    %eax,%ecx
  431978:	48 2b 8d 18 fc ff ff 	sub    -0x3e8(%rbp),%rcx
  43197f:	48 89 8d 10 f8 ff ff 	mov    %rcx,-0x7f0(%rbp)
  431986:	eb 0e                	jmp    431996 <rsa_check_pair_wrap+0x946>
  431988:	48 8b 85 18 fc ff ff 	mov    -0x3e8(%rbp),%rax
  43198f:	48 89 85 10 f8 ff ff 	mov    %rax,-0x7f0(%rbp)
  431996:	48 8b 85 10 f8 ff ff 	mov    -0x7f0(%rbp),%rax
  43199d:	48 8d 8d 90 fa ff ff 	lea    -0x570(%rbp),%rcx
  4319a4:	48 89 cf             	mov    %rcx,%rdi
  4319a7:	48 89 c6             	mov    %rax,%rsi
  4319aa:	e8 4d 43 01 00       	callq  445cfc <setEncryptedValueQWord>
  4319af:	48 8d 8d f0 fb ff ff 	lea    -0x410(%rbp),%rcx
  4319b6:	48 8b b5 18 fc ff ff 	mov    -0x3e8(%rbp),%rsi
  4319bd:	48 83 fe 00          	cmp    $0x0,%rsi
  4319c1:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  4319c6:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  4319cc:	44 0f 4c c2          	cmovl  %edx,%r8d
  4319d0:	48 89 cf             	mov    %rcx,%rdi
  4319d3:	44 89 c6             	mov    %r8d,%esi
  4319d6:	48 89 85 08 f8 ff ff 	mov    %rax,-0x7f8(%rbp)
  4319dd:	e8 1c 42 01 00       	callq  445bfe <setEncryptedValueDWord>
  4319e2:	ba 01 00 00 00       	mov    $0x1,%edx
  4319e7:	89 d6                	mov    %edx,%esi
  4319e9:	48 8d 8d f0 fb ff ff 	lea    -0x410(%rbp),%rcx
  4319f0:	48 83 c1 08          	add    $0x8,%rcx
  4319f4:	48 89 cf             	mov    %rcx,%rdi
  4319f7:	48 89 85 00 f8 ff ff 	mov    %rax,-0x800(%rbp)
  4319fe:	e8 f9 42 01 00       	callq  445cfc <setEncryptedValueQWord>
  431a03:	48 8d b5 90 fa ff ff 	lea    -0x570(%rbp),%rsi
  431a0a:	48 8d 8d f0 fb ff ff 	lea    -0x410(%rbp),%rcx
  431a11:	48 83 c1 10          	add    $0x10,%rcx
  431a15:	48 89 cf             	mov    %rcx,%rdi
  431a18:	48 89 85 f8 f7 ff ff 	mov    %rax,-0x808(%rbp)
  431a1f:	e8 d8 42 01 00       	callq  445cfc <setEncryptedValueQWord>
  431a24:	48 8b bd 28 fc ff ff 	mov    -0x3d8(%rbp),%rdi
  431a2b:	48 8b b5 20 fc ff ff 	mov    -0x3e0(%rbp),%rsi
  431a32:	48 8d 95 f0 fb ff ff 	lea    -0x410(%rbp),%rdx
  431a39:	48 89 85 f0 f7 ff ff 	mov    %rax,-0x810(%rbp)
  431a40:	e8 eb 9e fe ff       	callq  41b930 <mbedtls_mpi_sub_mpi>
  431a45:	89 85 ec f7 ff ff    	mov    %eax,-0x814(%rbp)
  431a4b:	e8 06 3f 01 00       	callq  445956 <writeback_cache>
  431a50:	8b 85 ec f7 ff ff    	mov    -0x814(%rbp),%eax
  431a56:	89 85 1c fa ff ff    	mov    %eax,-0x5e4(%rbp)
  431a5c:	83 f8 00             	cmp    $0x0,%eax
  431a5f:	74 05                	je     431a66 <rsa_check_pair_wrap+0xa16>
  431a61:	e9 38 06 00 00       	jmpq   43209e <rsa_check_pair_wrap+0x104e>
  431a66:	48 8b 85 48 fa ff ff 	mov    -0x5b8(%rbp),%rax
  431a6d:	48 89 85 e0 f7 ff ff 	mov    %rax,-0x820(%rbp)
  431a74:	e8 dd 3e 01 00       	callq  445956 <writeback_cache>
  431a79:	48 8d 85 c0 f9 ff ff 	lea    -0x640(%rbp),%rax
  431a80:	48 89 85 68 fc ff ff 	mov    %rax,-0x398(%rbp)
  431a87:	48 8b 85 e0 f7 ff ff 	mov    -0x820(%rbp),%rax
  431a8e:	48 89 85 60 fc ff ff 	mov    %rax,-0x3a0(%rbp)
  431a95:	48 c7 85 58 fc ff ff 	movq   $0x1,-0x3a8(%rbp)
  431a9c:	01 00 00 00 
  431aa0:	48 83 bd 58 fc ff ff 	cmpq   $0x0,-0x3a8(%rbp)
  431aa7:	00 
  431aa8:	7d 14                	jge    431abe <rsa_check_pair_wrap+0xa6e>
  431aaa:	31 c0                	xor    %eax,%eax
  431aac:	89 c1                	mov    %eax,%ecx
  431aae:	48 2b 8d 58 fc ff ff 	sub    -0x3a8(%rbp),%rcx
  431ab5:	48 89 8d d8 f7 ff ff 	mov    %rcx,-0x828(%rbp)
  431abc:	eb 0e                	jmp    431acc <rsa_check_pair_wrap+0xa7c>
  431abe:	48 8b 85 58 fc ff ff 	mov    -0x3a8(%rbp),%rax
  431ac5:	48 89 85 d8 f7 ff ff 	mov    %rax,-0x828(%rbp)
  431acc:	48 8b 85 d8 f7 ff ff 	mov    -0x828(%rbp),%rax
  431ad3:	48 8d 8d 90 fa ff ff 	lea    -0x570(%rbp),%rcx
  431ada:	48 89 cf             	mov    %rcx,%rdi
  431add:	48 89 c6             	mov    %rax,%rsi
  431ae0:	e8 17 42 01 00       	callq  445cfc <setEncryptedValueQWord>
  431ae5:	48 8d 8d 30 fc ff ff 	lea    -0x3d0(%rbp),%rcx
  431aec:	48 8b b5 58 fc ff ff 	mov    -0x3a8(%rbp),%rsi
  431af3:	48 83 fe 00          	cmp    $0x0,%rsi
  431af7:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  431afc:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  431b02:	44 0f 4c c2          	cmovl  %edx,%r8d
  431b06:	48 89 cf             	mov    %rcx,%rdi
  431b09:	44 89 c6             	mov    %r8d,%esi
  431b0c:	48 89 85 d0 f7 ff ff 	mov    %rax,-0x830(%rbp)
  431b13:	e8 e6 40 01 00       	callq  445bfe <setEncryptedValueDWord>
  431b18:	ba 01 00 00 00       	mov    $0x1,%edx
  431b1d:	89 d6                	mov    %edx,%esi
  431b1f:	48 8d 8d 30 fc ff ff 	lea    -0x3d0(%rbp),%rcx
  431b26:	48 83 c1 08          	add    $0x8,%rcx
  431b2a:	48 89 cf             	mov    %rcx,%rdi
  431b2d:	48 89 85 c8 f7 ff ff 	mov    %rax,-0x838(%rbp)
  431b34:	e8 c3 41 01 00       	callq  445cfc <setEncryptedValueQWord>
  431b39:	48 8d b5 90 fa ff ff 	lea    -0x570(%rbp),%rsi
  431b40:	48 8d 8d 30 fc ff ff 	lea    -0x3d0(%rbp),%rcx
  431b47:	48 83 c1 10          	add    $0x10,%rcx
  431b4b:	48 89 cf             	mov    %rcx,%rdi
  431b4e:	48 89 85 c0 f7 ff ff 	mov    %rax,-0x840(%rbp)
  431b55:	e8 a2 41 01 00       	callq  445cfc <setEncryptedValueQWord>
  431b5a:	48 8b bd 68 fc ff ff 	mov    -0x398(%rbp),%rdi
  431b61:	48 8b b5 60 fc ff ff 	mov    -0x3a0(%rbp),%rsi
  431b68:	48 8d 95 30 fc ff ff 	lea    -0x3d0(%rbp),%rdx
  431b6f:	48 89 85 b8 f7 ff ff 	mov    %rax,-0x848(%rbp)
  431b76:	e8 b5 9d fe ff       	callq  41b930 <mbedtls_mpi_sub_mpi>
  431b7b:	89 85 b4 f7 ff ff    	mov    %eax,-0x84c(%rbp)
  431b81:	e8 d0 3d 01 00       	callq  445956 <writeback_cache>
  431b86:	8b 85 b4 f7 ff ff    	mov    -0x84c(%rbp),%eax
  431b8c:	89 85 1c fa ff ff    	mov    %eax,-0x5e4(%rbp)
  431b92:	83 f8 00             	cmp    $0x0,%eax
  431b95:	74 05                	je     431b9c <rsa_check_pair_wrap+0xb4c>
  431b97:	e9 02 05 00 00       	jmpq   43209e <rsa_check_pair_wrap+0x104e>
  431b9c:	48 8d 85 f0 f9 ff ff 	lea    -0x610(%rbp),%rax
  431ba3:	48 89 c7             	mov    %rax,%rdi
  431ba6:	48 89 c6             	mov    %rax,%rsi
  431ba9:	48 8d 95 c0 f9 ff ff 	lea    -0x640(%rbp),%rdx
  431bb0:	e8 db fd fe ff       	callq  421990 <mbedtls_mpi_mod_mpi>
  431bb5:	89 85 1c fa ff ff    	mov    %eax,-0x5e4(%rbp)
  431bbb:	83 f8 00             	cmp    $0x0,%eax
  431bbe:	74 05                	je     431bc5 <rsa_check_pair_wrap+0xb75>
  431bc0:	e9 d9 04 00 00       	jmpq   43209e <rsa_check_pair_wrap+0x104e>
  431bc5:	e8 8c 3d 01 00       	callq  445956 <writeback_cache>
  431bca:	48 8d 85 f0 f9 ff ff 	lea    -0x610(%rbp),%rax
  431bd1:	48 89 85 a8 fc ff ff 	mov    %rax,-0x358(%rbp)
  431bd8:	48 c7 85 a0 fc ff ff 	movq   $0x0,-0x360(%rbp)
  431bdf:	00 00 00 00 
  431be3:	48 83 bd a0 fc ff ff 	cmpq   $0x0,-0x360(%rbp)
  431bea:	00 
  431beb:	7d 14                	jge    431c01 <rsa_check_pair_wrap+0xbb1>
  431bed:	31 c0                	xor    %eax,%eax
  431bef:	89 c1                	mov    %eax,%ecx
  431bf1:	48 2b 8d a0 fc ff ff 	sub    -0x360(%rbp),%rcx
  431bf8:	48 89 8d a8 f7 ff ff 	mov    %rcx,-0x858(%rbp)
  431bff:	eb 0e                	jmp    431c0f <rsa_check_pair_wrap+0xbbf>
  431c01:	48 8b 85 a0 fc ff ff 	mov    -0x360(%rbp),%rax
  431c08:	48 89 85 a8 f7 ff ff 	mov    %rax,-0x858(%rbp)
  431c0f:	48 8b 85 a8 f7 ff ff 	mov    -0x858(%rbp),%rax
  431c16:	48 8d 8d 90 fa ff ff 	lea    -0x570(%rbp),%rcx
  431c1d:	48 89 cf             	mov    %rcx,%rdi
  431c20:	48 89 c6             	mov    %rax,%rsi
  431c23:	e8 d4 40 01 00       	callq  445cfc <setEncryptedValueQWord>
  431c28:	48 8d 8d 70 fc ff ff 	lea    -0x390(%rbp),%rcx
  431c2f:	48 8b b5 a0 fc ff ff 	mov    -0x360(%rbp),%rsi
  431c36:	48 83 fe 00          	cmp    $0x0,%rsi
  431c3a:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  431c3f:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  431c45:	44 0f 4c c2          	cmovl  %edx,%r8d
  431c49:	48 89 cf             	mov    %rcx,%rdi
  431c4c:	44 89 c6             	mov    %r8d,%esi
  431c4f:	48 89 85 a0 f7 ff ff 	mov    %rax,-0x860(%rbp)
  431c56:	e8 a3 3f 01 00       	callq  445bfe <setEncryptedValueDWord>
  431c5b:	ba 01 00 00 00       	mov    $0x1,%edx
  431c60:	89 d6                	mov    %edx,%esi
  431c62:	48 8d 8d 70 fc ff ff 	lea    -0x390(%rbp),%rcx
  431c69:	48 83 c1 08          	add    $0x8,%rcx
  431c6d:	48 89 cf             	mov    %rcx,%rdi
  431c70:	48 89 85 98 f7 ff ff 	mov    %rax,-0x868(%rbp)
  431c77:	e8 80 40 01 00       	callq  445cfc <setEncryptedValueQWord>
  431c7c:	48 8d b5 90 fa ff ff 	lea    -0x570(%rbp),%rsi
  431c83:	48 8d 8d 70 fc ff ff 	lea    -0x390(%rbp),%rcx
  431c8a:	48 83 c1 10          	add    $0x10,%rcx
  431c8e:	48 89 cf             	mov    %rcx,%rdi
  431c91:	48 89 85 90 f7 ff ff 	mov    %rax,-0x870(%rbp)
  431c98:	e8 5f 40 01 00       	callq  445cfc <setEncryptedValueQWord>
  431c9d:	48 8b bd a8 fc ff ff 	mov    -0x358(%rbp),%rdi
  431ca4:	48 8d b5 70 fc ff ff 	lea    -0x390(%rbp),%rsi
  431cab:	48 89 85 88 f7 ff ff 	mov    %rax,-0x878(%rbp)
  431cb2:	e8 99 cd fe ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  431cb7:	89 85 84 f7 ff ff    	mov    %eax,-0x87c(%rbp)
  431cbd:	e8 94 3c 01 00       	callq  445956 <writeback_cache>
  431cc2:	8b 85 84 f7 ff ff    	mov    -0x87c(%rbp),%eax
  431cc8:	83 f8 00             	cmp    $0x0,%eax
  431ccb:	74 0f                	je     431cdc <rsa_check_pair_wrap+0xc8c>
  431ccd:	c7 85 1c fa ff ff 00 	movl   $0xffffbe00,-0x5e4(%rbp)
  431cd4:	be ff ff 
  431cd7:	e9 c2 03 00 00       	jmpq   43209e <rsa_check_pair_wrap+0x104e>
  431cdc:	48 8b b5 38 fa ff ff 	mov    -0x5c8(%rbp),%rsi
  431ce3:	48 8b 95 30 fa ff ff 	mov    -0x5d0(%rbp),%rdx
  431cea:	48 8d bd f0 f9 ff ff 	lea    -0x610(%rbp),%rdi
  431cf1:	e8 ca a8 fe ff       	callq  41c5c0 <mbedtls_mpi_mul_mpi>
  431cf6:	89 85 1c fa ff ff    	mov    %eax,-0x5e4(%rbp)
  431cfc:	83 f8 00             	cmp    $0x0,%eax
  431cff:	74 05                	je     431d06 <rsa_check_pair_wrap+0xcb6>
  431d01:	e9 98 03 00 00       	jmpq   43209e <rsa_check_pair_wrap+0x104e>
  431d06:	e8 4b 3c 01 00       	callq  445956 <writeback_cache>
  431d0b:	48 8d 85 f0 f9 ff ff 	lea    -0x610(%rbp),%rax
  431d12:	48 89 85 e8 fc ff ff 	mov    %rax,-0x318(%rbp)
  431d19:	48 89 85 e0 fc ff ff 	mov    %rax,-0x320(%rbp)
  431d20:	48 c7 85 d8 fc ff ff 	movq   $0x1,-0x328(%rbp)
  431d27:	01 00 00 00 
  431d2b:	48 83 bd d8 fc ff ff 	cmpq   $0x0,-0x328(%rbp)
  431d32:	00 
  431d33:	7d 14                	jge    431d49 <rsa_check_pair_wrap+0xcf9>
  431d35:	31 c0                	xor    %eax,%eax
  431d37:	89 c1                	mov    %eax,%ecx
  431d39:	48 2b 8d d8 fc ff ff 	sub    -0x328(%rbp),%rcx
  431d40:	48 89 8d 78 f7 ff ff 	mov    %rcx,-0x888(%rbp)
  431d47:	eb 0e                	jmp    431d57 <rsa_check_pair_wrap+0xd07>
  431d49:	48 8b 85 d8 fc ff ff 	mov    -0x328(%rbp),%rax
  431d50:	48 89 85 78 f7 ff ff 	mov    %rax,-0x888(%rbp)
  431d57:	48 8b 85 78 f7 ff ff 	mov    -0x888(%rbp),%rax
  431d5e:	48 8d 8d 90 fa ff ff 	lea    -0x570(%rbp),%rcx
  431d65:	48 89 cf             	mov    %rcx,%rdi
  431d68:	48 89 c6             	mov    %rax,%rsi
  431d6b:	e8 8c 3f 01 00       	callq  445cfc <setEncryptedValueQWord>
  431d70:	48 8d 8d b0 fc ff ff 	lea    -0x350(%rbp),%rcx
  431d77:	48 8b b5 d8 fc ff ff 	mov    -0x328(%rbp),%rsi
  431d7e:	48 83 fe 00          	cmp    $0x0,%rsi
  431d82:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  431d87:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  431d8d:	44 0f 4c c2          	cmovl  %edx,%r8d
  431d91:	48 89 cf             	mov    %rcx,%rdi
  431d94:	44 89 c6             	mov    %r8d,%esi
  431d97:	48 89 85 70 f7 ff ff 	mov    %rax,-0x890(%rbp)
  431d9e:	e8 5b 3e 01 00       	callq  445bfe <setEncryptedValueDWord>
  431da3:	ba 01 00 00 00       	mov    $0x1,%edx
  431da8:	89 d6                	mov    %edx,%esi
  431daa:	48 8d 8d b0 fc ff ff 	lea    -0x350(%rbp),%rcx
  431db1:	48 83 c1 08          	add    $0x8,%rcx
  431db5:	48 89 cf             	mov    %rcx,%rdi
  431db8:	48 89 85 68 f7 ff ff 	mov    %rax,-0x898(%rbp)
  431dbf:	e8 38 3f 01 00       	callq  445cfc <setEncryptedValueQWord>
  431dc4:	48 8d b5 90 fa ff ff 	lea    -0x570(%rbp),%rsi
  431dcb:	48 8d 8d b0 fc ff ff 	lea    -0x350(%rbp),%rcx
  431dd2:	48 83 c1 10          	add    $0x10,%rcx
  431dd6:	48 89 cf             	mov    %rcx,%rdi
  431dd9:	48 89 85 60 f7 ff ff 	mov    %rax,-0x8a0(%rbp)
  431de0:	e8 17 3f 01 00       	callq  445cfc <setEncryptedValueQWord>
  431de5:	48 8b bd e8 fc ff ff 	mov    -0x318(%rbp),%rdi
  431dec:	48 8b b5 e0 fc ff ff 	mov    -0x320(%rbp),%rsi
  431df3:	48 8d 95 b0 fc ff ff 	lea    -0x350(%rbp),%rdx
  431dfa:	48 89 85 58 f7 ff ff 	mov    %rax,-0x8a8(%rbp)
  431e01:	e8 2a 9b fe ff       	callq  41b930 <mbedtls_mpi_sub_mpi>
  431e06:	89 85 54 f7 ff ff    	mov    %eax,-0x8ac(%rbp)
  431e0c:	e8 45 3b 01 00       	callq  445956 <writeback_cache>
  431e11:	8b 85 54 f7 ff ff    	mov    -0x8ac(%rbp),%eax
  431e17:	89 85 1c fa ff ff    	mov    %eax,-0x5e4(%rbp)
  431e1d:	83 f8 00             	cmp    $0x0,%eax
  431e20:	74 05                	je     431e27 <rsa_check_pair_wrap+0xdd7>
  431e22:	e9 77 02 00 00       	jmpq   43209e <rsa_check_pair_wrap+0x104e>
  431e27:	48 8b 85 40 fa ff ff 	mov    -0x5c0(%rbp),%rax
  431e2e:	48 89 85 48 f7 ff ff 	mov    %rax,-0x8b8(%rbp)
  431e35:	e8 1c 3b 01 00       	callq  445956 <writeback_cache>
  431e3a:	48 8d 85 c0 f9 ff ff 	lea    -0x640(%rbp),%rax
  431e41:	48 89 85 28 fd ff ff 	mov    %rax,-0x2d8(%rbp)
  431e48:	48 8b 85 48 f7 ff ff 	mov    -0x8b8(%rbp),%rax
  431e4f:	48 89 85 20 fd ff ff 	mov    %rax,-0x2e0(%rbp)
  431e56:	48 c7 85 18 fd ff ff 	movq   $0x1,-0x2e8(%rbp)
  431e5d:	01 00 00 00 
  431e61:	48 83 bd 18 fd ff ff 	cmpq   $0x0,-0x2e8(%rbp)
  431e68:	00 
  431e69:	7d 14                	jge    431e7f <rsa_check_pair_wrap+0xe2f>
  431e6b:	31 c0                	xor    %eax,%eax
  431e6d:	89 c1                	mov    %eax,%ecx
  431e6f:	48 2b 8d 18 fd ff ff 	sub    -0x2e8(%rbp),%rcx
  431e76:	48 89 8d 40 f7 ff ff 	mov    %rcx,-0x8c0(%rbp)
  431e7d:	eb 0e                	jmp    431e8d <rsa_check_pair_wrap+0xe3d>
  431e7f:	48 8b 85 18 fd ff ff 	mov    -0x2e8(%rbp),%rax
  431e86:	48 89 85 40 f7 ff ff 	mov    %rax,-0x8c0(%rbp)
  431e8d:	48 8b 85 40 f7 ff ff 	mov    -0x8c0(%rbp),%rax
  431e94:	48 8d 8d 90 fa ff ff 	lea    -0x570(%rbp),%rcx
  431e9b:	48 89 cf             	mov    %rcx,%rdi
  431e9e:	48 89 c6             	mov    %rax,%rsi
  431ea1:	e8 56 3e 01 00       	callq  445cfc <setEncryptedValueQWord>
  431ea6:	48 8d 8d f0 fc ff ff 	lea    -0x310(%rbp),%rcx
  431ead:	48 8b b5 18 fd ff ff 	mov    -0x2e8(%rbp),%rsi
  431eb4:	48 83 fe 00          	cmp    $0x0,%rsi
  431eb8:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  431ebd:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  431ec3:	44 0f 4c c2          	cmovl  %edx,%r8d
  431ec7:	48 89 cf             	mov    %rcx,%rdi
  431eca:	44 89 c6             	mov    %r8d,%esi
  431ecd:	48 89 85 38 f7 ff ff 	mov    %rax,-0x8c8(%rbp)
  431ed4:	e8 25 3d 01 00       	callq  445bfe <setEncryptedValueDWord>
  431ed9:	ba 01 00 00 00       	mov    $0x1,%edx
  431ede:	89 d6                	mov    %edx,%esi
  431ee0:	48 8d 8d f0 fc ff ff 	lea    -0x310(%rbp),%rcx
  431ee7:	48 83 c1 08          	add    $0x8,%rcx
  431eeb:	48 89 cf             	mov    %rcx,%rdi
  431eee:	48 89 85 30 f7 ff ff 	mov    %rax,-0x8d0(%rbp)
  431ef5:	e8 02 3e 01 00       	callq  445cfc <setEncryptedValueQWord>
  431efa:	48 8d b5 90 fa ff ff 	lea    -0x570(%rbp),%rsi
  431f01:	48 8d 8d f0 fc ff ff 	lea    -0x310(%rbp),%rcx
  431f08:	48 83 c1 10          	add    $0x10,%rcx
  431f0c:	48 89 cf             	mov    %rcx,%rdi
  431f0f:	48 89 85 28 f7 ff ff 	mov    %rax,-0x8d8(%rbp)
  431f16:	e8 e1 3d 01 00       	callq  445cfc <setEncryptedValueQWord>
  431f1b:	48 8b bd 28 fd ff ff 	mov    -0x2d8(%rbp),%rdi
  431f22:	48 8b b5 20 fd ff ff 	mov    -0x2e0(%rbp),%rsi
  431f29:	48 8d 95 f0 fc ff ff 	lea    -0x310(%rbp),%rdx
  431f30:	48 89 85 20 f7 ff ff 	mov    %rax,-0x8e0(%rbp)
  431f37:	e8 f4 99 fe ff       	callq  41b930 <mbedtls_mpi_sub_mpi>
  431f3c:	89 85 1c f7 ff ff    	mov    %eax,-0x8e4(%rbp)
  431f42:	e8 0f 3a 01 00       	callq  445956 <writeback_cache>
  431f47:	8b 85 1c f7 ff ff    	mov    -0x8e4(%rbp),%eax
  431f4d:	89 85 1c fa ff ff    	mov    %eax,-0x5e4(%rbp)
  431f53:	83 f8 00             	cmp    $0x0,%eax
  431f56:	74 05                	je     431f5d <rsa_check_pair_wrap+0xf0d>
  431f58:	e9 41 01 00 00       	jmpq   43209e <rsa_check_pair_wrap+0x104e>
  431f5d:	48 8d 85 f0 f9 ff ff 	lea    -0x610(%rbp),%rax
  431f64:	48 89 c7             	mov    %rax,%rdi
  431f67:	48 89 c6             	mov    %rax,%rsi
  431f6a:	48 8d 95 c0 f9 ff ff 	lea    -0x640(%rbp),%rdx
  431f71:	e8 1a fa fe ff       	callq  421990 <mbedtls_mpi_mod_mpi>
  431f76:	89 85 1c fa ff ff    	mov    %eax,-0x5e4(%rbp)
  431f7c:	83 f8 00             	cmp    $0x0,%eax
  431f7f:	74 05                	je     431f86 <rsa_check_pair_wrap+0xf36>
  431f81:	e9 18 01 00 00       	jmpq   43209e <rsa_check_pair_wrap+0x104e>
  431f86:	e8 cb 39 01 00       	callq  445956 <writeback_cache>
  431f8b:	48 8d 85 f0 f9 ff ff 	lea    -0x610(%rbp),%rax
  431f92:	48 89 85 60 fd ff ff 	mov    %rax,-0x2a0(%rbp)
  431f99:	48 c7 85 58 fd ff ff 	movq   $0x0,-0x2a8(%rbp)
  431fa0:	00 00 00 00 
  431fa4:	48 83 bd 58 fd ff ff 	cmpq   $0x0,-0x2a8(%rbp)
  431fab:	00 
  431fac:	7d 14                	jge    431fc2 <rsa_check_pair_wrap+0xf72>
  431fae:	31 c0                	xor    %eax,%eax
  431fb0:	89 c1                	mov    %eax,%ecx
  431fb2:	48 2b 8d 58 fd ff ff 	sub    -0x2a8(%rbp),%rcx
  431fb9:	48 89 8d 10 f7 ff ff 	mov    %rcx,-0x8f0(%rbp)
  431fc0:	eb 0e                	jmp    431fd0 <rsa_check_pair_wrap+0xf80>
  431fc2:	48 8b 85 58 fd ff ff 	mov    -0x2a8(%rbp),%rax
  431fc9:	48 89 85 10 f7 ff ff 	mov    %rax,-0x8f0(%rbp)
  431fd0:	48 8b 85 10 f7 ff ff 	mov    -0x8f0(%rbp),%rax
  431fd7:	48 8d 8d 90 fa ff ff 	lea    -0x570(%rbp),%rcx
  431fde:	48 89 cf             	mov    %rcx,%rdi
  431fe1:	48 89 c6             	mov    %rax,%rsi
  431fe4:	e8 13 3d 01 00       	callq  445cfc <setEncryptedValueQWord>
  431fe9:	48 8d 8d 30 fd ff ff 	lea    -0x2d0(%rbp),%rcx
  431ff0:	48 8b b5 58 fd ff ff 	mov    -0x2a8(%rbp),%rsi
  431ff7:	48 83 fe 00          	cmp    $0x0,%rsi
  431ffb:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  432000:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  432006:	44 0f 4c c2          	cmovl  %edx,%r8d
  43200a:	48 89 cf             	mov    %rcx,%rdi
  43200d:	44 89 c6             	mov    %r8d,%esi
  432010:	48 89 85 08 f7 ff ff 	mov    %rax,-0x8f8(%rbp)
  432017:	e8 e2 3b 01 00       	callq  445bfe <setEncryptedValueDWord>
  43201c:	ba 01 00 00 00       	mov    $0x1,%edx
  432021:	89 d6                	mov    %edx,%esi
  432023:	48 8d 8d 30 fd ff ff 	lea    -0x2d0(%rbp),%rcx
  43202a:	48 83 c1 08          	add    $0x8,%rcx
  43202e:	48 89 cf             	mov    %rcx,%rdi
  432031:	48 89 85 00 f7 ff ff 	mov    %rax,-0x900(%rbp)
  432038:	e8 bf 3c 01 00       	callq  445cfc <setEncryptedValueQWord>
  43203d:	48 8d b5 90 fa ff ff 	lea    -0x570(%rbp),%rsi
  432044:	48 8d 8d 30 fd ff ff 	lea    -0x2d0(%rbp),%rcx
  43204b:	48 83 c1 10          	add    $0x10,%rcx
  43204f:	48 89 cf             	mov    %rcx,%rdi
  432052:	48 89 85 f8 f6 ff ff 	mov    %rax,-0x908(%rbp)
  432059:	e8 9e 3c 01 00       	callq  445cfc <setEncryptedValueQWord>
  43205e:	48 8b bd 60 fd ff ff 	mov    -0x2a0(%rbp),%rdi
  432065:	48 8d b5 30 fd ff ff 	lea    -0x2d0(%rbp),%rsi
  43206c:	48 89 85 f0 f6 ff ff 	mov    %rax,-0x910(%rbp)
  432073:	e8 d8 c9 fe ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  432078:	89 85 ec f6 ff ff    	mov    %eax,-0x914(%rbp)
  43207e:	e8 d3 38 01 00       	callq  445956 <writeback_cache>
  432083:	8b 85 ec f6 ff ff    	mov    -0x914(%rbp),%eax
  432089:	83 f8 00             	cmp    $0x0,%eax
  43208c:	74 0c                	je     43209a <rsa_check_pair_wrap+0x104a>
  43208e:	c7 85 1c fa ff ff 00 	movl   $0xffffbe00,-0x5e4(%rbp)
  432095:	be ff ff 
  432098:	eb 04                	jmp    43209e <rsa_check_pair_wrap+0x104e>
  43209a:	eb 00                	jmp    43209c <rsa_check_pair_wrap+0x104c>
  43209c:	eb 00                	jmp    43209e <rsa_check_pair_wrap+0x104e>
  43209e:	48 8d 85 f0 f9 ff ff 	lea    -0x610(%rbp),%rax
  4320a5:	48 89 85 68 fd ff ff 	mov    %rax,-0x298(%rbp)
  4320ac:	48 83 bd 68 fd ff ff 	cmpq   $0x0,-0x298(%rbp)
  4320b3:	00 
  4320b4:	75 05                	jne    4320bb <rsa_check_pair_wrap+0x106b>
  4320b6:	e9 6c 01 00 00       	jmpq   432227 <rsa_check_pair_wrap+0x11d7>
  4320bb:	48 8b 85 68 fd ff ff 	mov    -0x298(%rbp),%rax
  4320c2:	48 83 c0 10          	add    $0x10,%rax
  4320c6:	48 89 c7             	mov    %rax,%rdi
  4320c9:	e8 7a 40 01 00       	callq  446148 <getDecryptedValueQWord>
  4320ce:	48 83 f8 00          	cmp    $0x0,%rax
  4320d2:	0f 84 00 01 00 00    	je     4321d8 <rsa_check_pair_wrap+0x1188>
  4320d8:	48 8b 85 68 fd ff ff 	mov    -0x298(%rbp),%rax
  4320df:	48 83 c0 10          	add    $0x10,%rax
  4320e3:	48 89 c7             	mov    %rax,%rdi
  4320e6:	e8 5d 40 01 00       	callq  446148 <getDecryptedValueQWord>
  4320eb:	48 8b bd 68 fd ff ff 	mov    -0x298(%rbp),%rdi
  4320f2:	48 83 c7 08          	add    $0x8,%rdi
  4320f6:	48 89 85 e0 f6 ff ff 	mov    %rax,-0x920(%rbp)
  4320fd:	e8 46 40 01 00       	callq  446148 <getDecryptedValueQWord>
  432102:	48 8b bd e0 f6 ff ff 	mov    -0x920(%rbp),%rdi
  432109:	48 89 bd 78 fd ff ff 	mov    %rdi,-0x288(%rbp)
  432110:	48 89 85 70 fd ff ff 	mov    %rax,-0x290(%rbp)
  432117:	48 8b 85 78 fd ff ff 	mov    -0x288(%rbp),%rax
  43211e:	48 8b 8d 70 fd ff ff 	mov    -0x290(%rbp),%rcx
  432125:	48 c1 e1 03          	shl    $0x3,%rcx
  432129:	48 89 85 88 fd ff ff 	mov    %rax,-0x278(%rbp)
  432130:	48 89 8d 80 fd ff ff 	mov    %rcx,-0x280(%rbp)
  432137:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  43213e:	00 
  43213f:	48 8b 8d 88 fd ff ff 	mov    -0x278(%rbp),%rcx
  432146:	48 8b 95 80 fd ff ff 	mov    -0x280(%rbp),%rdx
  43214d:	48 89 85 d8 f6 ff ff 	mov    %rax,-0x928(%rbp)
  432154:	48 89 8d d0 f6 ff ff 	mov    %rcx,-0x930(%rbp)
  43215b:	48 89 95 c8 f6 ff ff 	mov    %rdx,-0x938(%rbp)
  432162:	e8 ef 37 01 00       	callq  445956 <writeback_cache>
  432167:	48 8b bd d0 f6 ff ff 	mov    -0x930(%rbp),%rdi
  43216e:	48 8b b5 c8 f6 ff ff 	mov    -0x938(%rbp),%rsi
  432175:	e8 6b 45 01 00       	callq  4466e5 <decryptArrayForLibCall>
  43217a:	31 f6                	xor    %esi,%esi
  43217c:	48 8b bd d0 f6 ff ff 	mov    -0x930(%rbp),%rdi
  432183:	48 8b 95 c8 f6 ff ff 	mov    -0x938(%rbp),%rdx
  43218a:	48 8b 85 d8 f6 ff ff 	mov    -0x928(%rbp),%rax
  432191:	ff d0                	callq  *%rax
  432193:	48 8b bd d0 f6 ff ff 	mov    -0x930(%rbp),%rdi
  43219a:	48 8b b5 c8 f6 ff ff 	mov    -0x938(%rbp),%rsi
  4321a1:	48 89 85 c0 f6 ff ff 	mov    %rax,-0x940(%rbp)
  4321a8:	e8 a9 42 01 00       	callq  446456 <encryptArrayForLibCall>
  4321ad:	48 8b 85 68 fd ff ff 	mov    -0x298(%rbp),%rax
  4321b4:	48 83 c0 10          	add    $0x10,%rax
  4321b8:	48 89 c7             	mov    %rax,%rdi
  4321bb:	e8 88 3f 01 00       	callq  446148 <getDecryptedValueQWord>
  4321c0:	48 89 85 b8 f6 ff ff 	mov    %rax,-0x948(%rbp)
  4321c7:	e8 8a 37 01 00       	callq  445956 <writeback_cache>
  4321cc:	48 8b bd b8 f6 ff ff 	mov    -0x948(%rbp),%rdi
  4321d3:	e8 08 ef fc ff       	callq  4010e0 <free@plt>
  4321d8:	48 8b 85 68 fd ff ff 	mov    -0x298(%rbp),%rax
  4321df:	48 89 c7             	mov    %rax,%rdi
  4321e2:	be 01 00 00 00       	mov    $0x1,%esi
  4321e7:	e8 12 3a 01 00       	callq  445bfe <setEncryptedValueDWord>
  4321ec:	31 f6                	xor    %esi,%esi
  4321ee:	48 8b bd 68 fd ff ff 	mov    -0x298(%rbp),%rdi
  4321f5:	48 83 c7 08          	add    $0x8,%rdi
  4321f9:	48 89 85 b0 f6 ff ff 	mov    %rax,-0x950(%rbp)
  432200:	e8 f7 3a 01 00       	callq  445cfc <setEncryptedValueQWord>
  432205:	31 c9                	xor    %ecx,%ecx
  432207:	89 ce                	mov    %ecx,%esi
  432209:	48 8b bd 68 fd ff ff 	mov    -0x298(%rbp),%rdi
  432210:	48 83 c7 10          	add    $0x10,%rdi
  432214:	48 89 85 a8 f6 ff ff 	mov    %rax,-0x958(%rbp)
  43221b:	e8 dc 3a 01 00       	callq  445cfc <setEncryptedValueQWord>
  432220:	48 89 85 a0 f6 ff ff 	mov    %rax,-0x960(%rbp)
  432227:	48 8d 85 c0 f9 ff ff 	lea    -0x640(%rbp),%rax
  43222e:	48 89 85 60 fa ff ff 	mov    %rax,-0x5a0(%rbp)
  432235:	48 83 bd 60 fa ff ff 	cmpq   $0x0,-0x5a0(%rbp)
  43223c:	00 
  43223d:	75 05                	jne    432244 <rsa_check_pair_wrap+0x11f4>
  43223f:	e9 6c 01 00 00       	jmpq   4323b0 <rsa_check_pair_wrap+0x1360>
  432244:	48 8b 85 60 fa ff ff 	mov    -0x5a0(%rbp),%rax
  43224b:	48 83 c0 10          	add    $0x10,%rax
  43224f:	48 89 c7             	mov    %rax,%rdi
  432252:	e8 f1 3e 01 00       	callq  446148 <getDecryptedValueQWord>
  432257:	48 83 f8 00          	cmp    $0x0,%rax
  43225b:	0f 84 00 01 00 00    	je     432361 <rsa_check_pair_wrap+0x1311>
  432261:	48 8b 85 60 fa ff ff 	mov    -0x5a0(%rbp),%rax
  432268:	48 83 c0 10          	add    $0x10,%rax
  43226c:	48 89 c7             	mov    %rax,%rdi
  43226f:	e8 d4 3e 01 00       	callq  446148 <getDecryptedValueQWord>
  432274:	48 8b bd 60 fa ff ff 	mov    -0x5a0(%rbp),%rdi
  43227b:	48 83 c7 08          	add    $0x8,%rdi
  43227f:	48 89 85 98 f6 ff ff 	mov    %rax,-0x968(%rbp)
  432286:	e8 bd 3e 01 00       	callq  446148 <getDecryptedValueQWord>
  43228b:	48 8b bd 98 f6 ff ff 	mov    -0x968(%rbp),%rdi
  432292:	48 89 bd 70 fa ff ff 	mov    %rdi,-0x590(%rbp)
  432299:	48 89 85 68 fa ff ff 	mov    %rax,-0x598(%rbp)
  4322a0:	48 8b 85 70 fa ff ff 	mov    -0x590(%rbp),%rax
  4322a7:	48 8b 8d 68 fa ff ff 	mov    -0x598(%rbp),%rcx
  4322ae:	48 c1 e1 03          	shl    $0x3,%rcx
  4322b2:	48 89 85 80 fa ff ff 	mov    %rax,-0x580(%rbp)
  4322b9:	48 89 8d 78 fa ff ff 	mov    %rcx,-0x588(%rbp)
  4322c0:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  4322c7:	00 
  4322c8:	48 8b 8d 80 fa ff ff 	mov    -0x580(%rbp),%rcx
  4322cf:	48 8b 95 78 fa ff ff 	mov    -0x588(%rbp),%rdx
  4322d6:	48 89 85 90 f6 ff ff 	mov    %rax,-0x970(%rbp)
  4322dd:	48 89 8d 88 f6 ff ff 	mov    %rcx,-0x978(%rbp)
  4322e4:	48 89 95 80 f6 ff ff 	mov    %rdx,-0x980(%rbp)
  4322eb:	e8 66 36 01 00       	callq  445956 <writeback_cache>
  4322f0:	48 8b bd 88 f6 ff ff 	mov    -0x978(%rbp),%rdi
  4322f7:	48 8b b5 80 f6 ff ff 	mov    -0x980(%rbp),%rsi
  4322fe:	e8 e2 43 01 00       	callq  4466e5 <decryptArrayForLibCall>
  432303:	31 f6                	xor    %esi,%esi
  432305:	48 8b bd 88 f6 ff ff 	mov    -0x978(%rbp),%rdi
  43230c:	48 8b 95 80 f6 ff ff 	mov    -0x980(%rbp),%rdx
  432313:	48 8b 85 90 f6 ff ff 	mov    -0x970(%rbp),%rax
  43231a:	ff d0                	callq  *%rax
  43231c:	48 8b bd 88 f6 ff ff 	mov    -0x978(%rbp),%rdi
  432323:	48 8b b5 80 f6 ff ff 	mov    -0x980(%rbp),%rsi
  43232a:	48 89 85 78 f6 ff ff 	mov    %rax,-0x988(%rbp)
  432331:	e8 20 41 01 00       	callq  446456 <encryptArrayForLibCall>
  432336:	48 8b 85 60 fa ff ff 	mov    -0x5a0(%rbp),%rax
  43233d:	48 83 c0 10          	add    $0x10,%rax
  432341:	48 89 c7             	mov    %rax,%rdi
  432344:	e8 ff 3d 01 00       	callq  446148 <getDecryptedValueQWord>
  432349:	48 89 85 70 f6 ff ff 	mov    %rax,-0x990(%rbp)
  432350:	e8 01 36 01 00       	callq  445956 <writeback_cache>
  432355:	48 8b bd 70 f6 ff ff 	mov    -0x990(%rbp),%rdi
  43235c:	e8 7f ed fc ff       	callq  4010e0 <free@plt>
  432361:	48 8b 85 60 fa ff ff 	mov    -0x5a0(%rbp),%rax
  432368:	48 89 c7             	mov    %rax,%rdi
  43236b:	be 01 00 00 00       	mov    $0x1,%esi
  432370:	e8 89 38 01 00       	callq  445bfe <setEncryptedValueDWord>
  432375:	31 f6                	xor    %esi,%esi
  432377:	48 8b bd 60 fa ff ff 	mov    -0x5a0(%rbp),%rdi
  43237e:	48 83 c7 08          	add    $0x8,%rdi
  432382:	48 89 85 68 f6 ff ff 	mov    %rax,-0x998(%rbp)
  432389:	e8 6e 39 01 00       	callq  445cfc <setEncryptedValueQWord>
  43238e:	31 c9                	xor    %ecx,%ecx
  432390:	89 ce                	mov    %ecx,%esi
  432392:	48 8b bd 60 fa ff ff 	mov    -0x5a0(%rbp),%rdi
  432399:	48 83 c7 10          	add    $0x10,%rdi
  43239d:	48 89 85 60 f6 ff ff 	mov    %rax,-0x9a0(%rbp)
  4323a4:	e8 53 39 01 00       	callq  445cfc <setEncryptedValueQWord>
  4323a9:	48 89 85 58 f6 ff ff 	mov    %rax,-0x9a8(%rbp)
  4323b0:	83 bd 1c fa ff ff 00 	cmpl   $0x0,-0x5e4(%rbp)
  4323b7:	74 1d                	je     4323d6 <rsa_check_pair_wrap+0x1386>
  4323b9:	81 bd 1c fa ff ff 00 	cmpl   $0xffffbe00,-0x5e4(%rbp)
  4323c0:	be ff ff 
  4323c3:	74 11                	je     4323d6 <rsa_check_pair_wrap+0x1386>
  4323c5:	8b 85 1c fa ff ff    	mov    -0x5e4(%rbp),%eax
  4323cb:	05 00 be ff ff       	add    $0xffffbe00,%eax
  4323d0:	89 85 1c fa ff ff    	mov    %eax,-0x5e4(%rbp)
  4323d6:	8b 85 1c fa ff ff    	mov    -0x5e4(%rbp),%eax
  4323dc:	89 85 54 f6 ff ff    	mov    %eax,-0x9ac(%rbp)
  4323e2:	e8 6f 35 01 00       	callq  445956 <writeback_cache>
  4323e7:	e8 6a 35 01 00       	callq  445956 <writeback_cache>
  4323ec:	8b 85 54 f6 ff ff    	mov    -0x9ac(%rbp),%eax
  4323f2:	83 f8 00             	cmp    $0x0,%eax
  4323f5:	74 0f                	je     432406 <rsa_check_pair_wrap+0x13b6>
  4323f7:	c7 85 bc f9 ff ff 00 	movl   $0xffffbe00,-0x644(%rbp)
  4323fe:	be ff ff 
  432401:	e9 02 0d 00 00       	jmpq   433108 <rsa_check_pair_wrap+0x20b8>
  432406:	48 8b 85 b0 f9 ff ff 	mov    -0x650(%rbp),%rax
  43240d:	48 83 c0 58          	add    $0x58,%rax
  432411:	48 8b 8d b0 f9 ff ff 	mov    -0x650(%rbp),%rcx
  432418:	48 83 c1 70          	add    $0x70,%rcx
  43241c:	48 8b 95 b0 f9 ff ff 	mov    -0x650(%rbp),%rdx
  432423:	48 83 c2 40          	add    $0x40,%rdx
  432427:	48 8b b5 b0 f9 ff ff 	mov    -0x650(%rbp),%rsi
  43242e:	48 81 c6 88 00 00 00 	add    $0x88,%rsi
  432435:	48 8b bd b0 f9 ff ff 	mov    -0x650(%rbp),%rdi
  43243c:	48 81 c7 a0 00 00 00 	add    $0xa0,%rdi
  432443:	4c 8b 85 b0 f9 ff ff 	mov    -0x650(%rbp),%r8
  43244a:	49 81 c0 b8 00 00 00 	add    $0xb8,%r8
  432451:	48 89 85 48 f6 ff ff 	mov    %rax,-0x9b8(%rbp)
  432458:	48 89 8d 40 f6 ff ff 	mov    %rcx,-0x9c0(%rbp)
  43245f:	48 89 95 38 f6 ff ff 	mov    %rdx,-0x9c8(%rbp)
  432466:	48 89 b5 30 f6 ff ff 	mov    %rsi,-0x9d0(%rbp)
  43246d:	48 89 bd 28 f6 ff ff 	mov    %rdi,-0x9d8(%rbp)
  432474:	4c 89 85 20 f6 ff ff 	mov    %r8,-0x9e0(%rbp)
  43247b:	e8 d6 34 01 00       	callq  445956 <writeback_cache>
  432480:	e8 d1 34 01 00       	callq  445956 <writeback_cache>
  432485:	48 8b 85 48 f6 ff ff 	mov    -0x9b8(%rbp),%rax
  43248c:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
  432493:	48 8b 85 40 f6 ff ff 	mov    -0x9c0(%rbp),%rax
  43249a:	48 89 85 18 fe ff ff 	mov    %rax,-0x1e8(%rbp)
  4324a1:	48 8b 85 38 f6 ff ff 	mov    -0x9c8(%rbp),%rax
  4324a8:	48 89 85 10 fe ff ff 	mov    %rax,-0x1f0(%rbp)
  4324af:	48 8b 85 30 f6 ff ff 	mov    -0x9d0(%rbp),%rax
  4324b6:	48 89 85 08 fe ff ff 	mov    %rax,-0x1f8(%rbp)
  4324bd:	48 8b 85 28 f6 ff ff 	mov    -0x9d8(%rbp),%rax
  4324c4:	48 89 85 00 fe ff ff 	mov    %rax,-0x200(%rbp)
  4324cb:	48 8b 85 20 f6 ff ff 	mov    -0x9e0(%rbp),%rax
  4324d2:	48 89 85 f8 fd ff ff 	mov    %rax,-0x208(%rbp)
  4324d9:	c7 85 f4 fd ff ff 00 	movl   $0x0,-0x20c(%rbp)
  4324e0:	00 00 00 
  4324e3:	48 8d 85 c0 fd ff ff 	lea    -0x240(%rbp),%rax
  4324ea:	48 89 85 28 fe ff ff 	mov    %rax,-0x1d8(%rbp)
  4324f1:	48 8b 85 28 fe ff ff 	mov    -0x1d8(%rbp),%rax
  4324f8:	48 89 c7             	mov    %rax,%rdi
  4324fb:	be 01 00 00 00       	mov    $0x1,%esi
  432500:	e8 f9 36 01 00       	callq  445bfe <setEncryptedValueDWord>
  432505:	31 f6                	xor    %esi,%esi
  432507:	48 8b 8d 28 fe ff ff 	mov    -0x1d8(%rbp),%rcx
  43250e:	48 83 c1 08          	add    $0x8,%rcx
  432512:	48 89 cf             	mov    %rcx,%rdi
  432515:	48 89 85 18 f6 ff ff 	mov    %rax,-0x9e8(%rbp)
  43251c:	e8 db 37 01 00       	callq  445cfc <setEncryptedValueQWord>
  432521:	45 31 c9             	xor    %r9d,%r9d
  432524:	44 89 ce             	mov    %r9d,%esi
  432527:	48 8b 8d 28 fe ff ff 	mov    -0x1d8(%rbp),%rcx
  43252e:	48 83 c1 10          	add    $0x10,%rcx
  432532:	48 89 cf             	mov    %rcx,%rdi
  432535:	48 89 85 10 f6 ff ff 	mov    %rax,-0x9f0(%rbp)
  43253c:	e8 bb 37 01 00       	callq  445cfc <setEncryptedValueQWord>
  432541:	48 8d 8d 90 fd ff ff 	lea    -0x270(%rbp),%rcx
  432548:	48 89 8d 58 fe ff ff 	mov    %rcx,-0x1a8(%rbp)
  43254f:	48 8b 8d 58 fe ff ff 	mov    -0x1a8(%rbp),%rcx
  432556:	48 89 cf             	mov    %rcx,%rdi
  432559:	be 01 00 00 00       	mov    $0x1,%esi
  43255e:	48 89 85 08 f6 ff ff 	mov    %rax,-0x9f8(%rbp)
  432565:	e8 94 36 01 00       	callq  445bfe <setEncryptedValueDWord>
  43256a:	31 f6                	xor    %esi,%esi
  43256c:	48 8b 8d 58 fe ff ff 	mov    -0x1a8(%rbp),%rcx
  432573:	48 83 c1 08          	add    $0x8,%rcx
  432577:	48 89 cf             	mov    %rcx,%rdi
  43257a:	48 89 85 00 f6 ff ff 	mov    %rax,-0xa00(%rbp)
  432581:	e8 76 37 01 00       	callq  445cfc <setEncryptedValueQWord>
  432586:	45 31 c9             	xor    %r9d,%r9d
  432589:	44 89 ce             	mov    %r9d,%esi
  43258c:	48 8b 8d 58 fe ff ff 	mov    -0x1a8(%rbp),%rcx
  432593:	48 83 c1 10          	add    $0x10,%rcx
  432597:	48 89 cf             	mov    %rcx,%rdi
  43259a:	48 89 85 f8 f5 ff ff 	mov    %rax,-0xa08(%rbp)
  4325a1:	e8 56 37 01 00       	callq  445cfc <setEncryptedValueQWord>
  4325a6:	48 83 bd 08 fe ff ff 	cmpq   $0x0,-0x1f8(%rbp)
  4325ad:	00 
  4325ae:	48 89 85 f0 f5 ff ff 	mov    %rax,-0xa10(%rbp)
  4325b5:	0f 84 bb 02 00 00    	je     432876 <rsa_check_pair_wrap+0x1826>
  4325bb:	48 83 bd 20 fe ff ff 	cmpq   $0x0,-0x1e0(%rbp)
  4325c2:	00 
  4325c3:	75 0f                	jne    4325d4 <rsa_check_pair_wrap+0x1584>
  4325c5:	c7 85 f4 fd ff ff 80 	movl   $0xffffbf80,-0x20c(%rbp)
  4325cc:	bf ff ff 
  4325cf:	e9 ec 07 00 00       	jmpq   432dc0 <rsa_check_pair_wrap+0x1d70>
  4325d4:	48 8b 85 20 fe ff ff 	mov    -0x1e0(%rbp),%rax
  4325db:	48 89 85 e8 f5 ff ff 	mov    %rax,-0xa18(%rbp)
  4325e2:	e8 6f 33 01 00       	callq  445956 <writeback_cache>
  4325e7:	48 8d 85 c0 fd ff ff 	lea    -0x240(%rbp),%rax
  4325ee:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
  4325f5:	48 8b 85 e8 f5 ff ff 	mov    -0xa18(%rbp),%rax
  4325fc:	48 89 85 90 fe ff ff 	mov    %rax,-0x170(%rbp)
  432603:	48 c7 85 88 fe ff ff 	movq   $0x1,-0x178(%rbp)
  43260a:	01 00 00 00 
  43260e:	48 83 bd 88 fe ff ff 	cmpq   $0x0,-0x178(%rbp)
  432615:	00 
  432616:	7d 14                	jge    43262c <rsa_check_pair_wrap+0x15dc>
  432618:	31 c0                	xor    %eax,%eax
  43261a:	89 c1                	mov    %eax,%ecx
  43261c:	48 2b 8d 88 fe ff ff 	sub    -0x178(%rbp),%rcx
  432623:	48 89 8d e0 f5 ff ff 	mov    %rcx,-0xa20(%rbp)
  43262a:	eb 0e                	jmp    43263a <rsa_check_pair_wrap+0x15ea>
  43262c:	48 8b 85 88 fe ff ff 	mov    -0x178(%rbp),%rax
  432633:	48 89 85 e0 f5 ff ff 	mov    %rax,-0xa20(%rbp)
  43263a:	48 8b 85 e0 f5 ff ff 	mov    -0xa20(%rbp),%rax
  432641:	48 8d 8d 90 fa ff ff 	lea    -0x570(%rbp),%rcx
  432648:	48 89 cf             	mov    %rcx,%rdi
  43264b:	48 89 c6             	mov    %rax,%rsi
  43264e:	e8 a9 36 01 00       	callq  445cfc <setEncryptedValueQWord>
  432653:	48 8d 8d 60 fe ff ff 	lea    -0x1a0(%rbp),%rcx
  43265a:	48 8b b5 88 fe ff ff 	mov    -0x178(%rbp),%rsi
  432661:	48 83 fe 00          	cmp    $0x0,%rsi
  432665:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  43266a:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  432670:	44 0f 4c c2          	cmovl  %edx,%r8d
  432674:	48 89 cf             	mov    %rcx,%rdi
  432677:	44 89 c6             	mov    %r8d,%esi
  43267a:	48 89 85 d8 f5 ff ff 	mov    %rax,-0xa28(%rbp)
  432681:	e8 78 35 01 00       	callq  445bfe <setEncryptedValueDWord>
  432686:	ba 01 00 00 00       	mov    $0x1,%edx
  43268b:	89 d6                	mov    %edx,%esi
  43268d:	48 8d 8d 60 fe ff ff 	lea    -0x1a0(%rbp),%rcx
  432694:	48 83 c1 08          	add    $0x8,%rcx
  432698:	48 89 cf             	mov    %rcx,%rdi
  43269b:	48 89 85 d0 f5 ff ff 	mov    %rax,-0xa30(%rbp)
  4326a2:	e8 55 36 01 00       	callq  445cfc <setEncryptedValueQWord>
  4326a7:	48 8d b5 90 fa ff ff 	lea    -0x570(%rbp),%rsi
  4326ae:	48 8d 8d 60 fe ff ff 	lea    -0x1a0(%rbp),%rcx
  4326b5:	48 83 c1 10          	add    $0x10,%rcx
  4326b9:	48 89 cf             	mov    %rcx,%rdi
  4326bc:	48 89 85 c8 f5 ff ff 	mov    %rax,-0xa38(%rbp)
  4326c3:	e8 34 36 01 00       	callq  445cfc <setEncryptedValueQWord>
  4326c8:	48 8b bd 98 fe ff ff 	mov    -0x168(%rbp),%rdi
  4326cf:	48 8b b5 90 fe ff ff 	mov    -0x170(%rbp),%rsi
  4326d6:	48 8d 95 60 fe ff ff 	lea    -0x1a0(%rbp),%rdx
  4326dd:	48 89 85 c0 f5 ff ff 	mov    %rax,-0xa40(%rbp)
  4326e4:	e8 47 92 fe ff       	callq  41b930 <mbedtls_mpi_sub_mpi>
  4326e9:	89 85 bc f5 ff ff    	mov    %eax,-0xa44(%rbp)
  4326ef:	e8 62 32 01 00       	callq  445956 <writeback_cache>
  4326f4:	8b 85 bc f5 ff ff    	mov    -0xa44(%rbp),%eax
  4326fa:	89 85 f4 fd ff ff    	mov    %eax,-0x20c(%rbp)
  432700:	83 f8 00             	cmp    $0x0,%eax
  432703:	74 05                	je     43270a <rsa_check_pair_wrap+0x16ba>
  432705:	e9 b6 06 00 00       	jmpq   432dc0 <rsa_check_pair_wrap+0x1d70>
  43270a:	48 8b b5 08 fe ff ff 	mov    -0x1f8(%rbp),%rsi
  432711:	48 8b 95 10 fe ff ff 	mov    -0x1f0(%rbp),%rdx
  432718:	48 8d bd 90 fd ff ff 	lea    -0x270(%rbp),%rdi
  43271f:	e8 0c 92 fe ff       	callq  41b930 <mbedtls_mpi_sub_mpi>
  432724:	89 85 f4 fd ff ff    	mov    %eax,-0x20c(%rbp)
  43272a:	83 f8 00             	cmp    $0x0,%eax
  43272d:	74 05                	je     432734 <rsa_check_pair_wrap+0x16e4>
  43272f:	e9 8c 06 00 00       	jmpq   432dc0 <rsa_check_pair_wrap+0x1d70>
  432734:	48 8d 85 90 fd ff ff 	lea    -0x270(%rbp),%rax
  43273b:	48 89 c7             	mov    %rax,%rdi
  43273e:	48 89 c6             	mov    %rax,%rsi
  432741:	48 8d 95 c0 fd ff ff 	lea    -0x240(%rbp),%rdx
  432748:	e8 43 f2 fe ff       	callq  421990 <mbedtls_mpi_mod_mpi>
  43274d:	89 85 f4 fd ff ff    	mov    %eax,-0x20c(%rbp)
  432753:	83 f8 00             	cmp    $0x0,%eax
  432756:	74 05                	je     43275d <rsa_check_pair_wrap+0x170d>
  432758:	e9 63 06 00 00       	jmpq   432dc0 <rsa_check_pair_wrap+0x1d70>
  43275d:	e8 f4 31 01 00       	callq  445956 <writeback_cache>
  432762:	48 8d 85 90 fd ff ff 	lea    -0x270(%rbp),%rax
  432769:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
  432770:	48 c7 85 d0 fe ff ff 	movq   $0x0,-0x130(%rbp)
  432777:	00 00 00 00 
  43277b:	48 83 bd d0 fe ff ff 	cmpq   $0x0,-0x130(%rbp)
  432782:	00 
  432783:	7d 14                	jge    432799 <rsa_check_pair_wrap+0x1749>
  432785:	31 c0                	xor    %eax,%eax
  432787:	89 c1                	mov    %eax,%ecx
  432789:	48 2b 8d d0 fe ff ff 	sub    -0x130(%rbp),%rcx
  432790:	48 89 8d b0 f5 ff ff 	mov    %rcx,-0xa50(%rbp)
  432797:	eb 0e                	jmp    4327a7 <rsa_check_pair_wrap+0x1757>
  432799:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
  4327a0:	48 89 85 b0 f5 ff ff 	mov    %rax,-0xa50(%rbp)
  4327a7:	48 8b 85 b0 f5 ff ff 	mov    -0xa50(%rbp),%rax
  4327ae:	48 8d 8d 90 fa ff ff 	lea    -0x570(%rbp),%rcx
  4327b5:	48 89 cf             	mov    %rcx,%rdi
  4327b8:	48 89 c6             	mov    %rax,%rsi
  4327bb:	e8 3c 35 01 00       	callq  445cfc <setEncryptedValueQWord>
  4327c0:	48 8d 8d a0 fe ff ff 	lea    -0x160(%rbp),%rcx
  4327c7:	48 8b b5 d0 fe ff ff 	mov    -0x130(%rbp),%rsi
  4327ce:	48 83 fe 00          	cmp    $0x0,%rsi
  4327d2:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  4327d7:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  4327dd:	44 0f 4c c2          	cmovl  %edx,%r8d
  4327e1:	48 89 cf             	mov    %rcx,%rdi
  4327e4:	44 89 c6             	mov    %r8d,%esi
  4327e7:	48 89 85 a8 f5 ff ff 	mov    %rax,-0xa58(%rbp)
  4327ee:	e8 0b 34 01 00       	callq  445bfe <setEncryptedValueDWord>
  4327f3:	ba 01 00 00 00       	mov    $0x1,%edx
  4327f8:	89 d6                	mov    %edx,%esi
  4327fa:	48 8d 8d a0 fe ff ff 	lea    -0x160(%rbp),%rcx
  432801:	48 83 c1 08          	add    $0x8,%rcx
  432805:	48 89 cf             	mov    %rcx,%rdi
  432808:	48 89 85 a0 f5 ff ff 	mov    %rax,-0xa60(%rbp)
  43280f:	e8 e8 34 01 00       	callq  445cfc <setEncryptedValueQWord>
  432814:	48 8d b5 90 fa ff ff 	lea    -0x570(%rbp),%rsi
  43281b:	48 8d 8d a0 fe ff ff 	lea    -0x160(%rbp),%rcx
  432822:	48 83 c1 10          	add    $0x10,%rcx
  432826:	48 89 cf             	mov    %rcx,%rdi
  432829:	48 89 85 98 f5 ff ff 	mov    %rax,-0xa68(%rbp)
  432830:	e8 c7 34 01 00       	callq  445cfc <setEncryptedValueQWord>
  432835:	48 8b bd d8 fe ff ff 	mov    -0x128(%rbp),%rdi
  43283c:	48 8d b5 a0 fe ff ff 	lea    -0x160(%rbp),%rsi
  432843:	48 89 85 90 f5 ff ff 	mov    %rax,-0xa70(%rbp)
  43284a:	e8 01 c2 fe ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  43284f:	89 85 8c f5 ff ff    	mov    %eax,-0xa74(%rbp)
  432855:	e8 fc 30 01 00       	callq  445956 <writeback_cache>
  43285a:	8b 85 8c f5 ff ff    	mov    -0xa74(%rbp),%eax
  432860:	83 f8 00             	cmp    $0x0,%eax
  432863:	74 0f                	je     432874 <rsa_check_pair_wrap+0x1824>
  432865:	c7 85 f4 fd ff ff 00 	movl   $0xffffbe00,-0x20c(%rbp)
  43286c:	be ff ff 
  43286f:	e9 4c 05 00 00       	jmpq   432dc0 <rsa_check_pair_wrap+0x1d70>
  432874:	eb 00                	jmp    432876 <rsa_check_pair_wrap+0x1826>
  432876:	48 83 bd 00 fe ff ff 	cmpq   $0x0,-0x200(%rbp)
  43287d:	00 
  43287e:	0f 84 bb 02 00 00    	je     432b3f <rsa_check_pair_wrap+0x1aef>
  432884:	48 83 bd 18 fe ff ff 	cmpq   $0x0,-0x1e8(%rbp)
  43288b:	00 
  43288c:	75 0f                	jne    43289d <rsa_check_pair_wrap+0x184d>
  43288e:	c7 85 f4 fd ff ff 80 	movl   $0xffffbf80,-0x20c(%rbp)
  432895:	bf ff ff 
  432898:	e9 23 05 00 00       	jmpq   432dc0 <rsa_check_pair_wrap+0x1d70>
  43289d:	48 8b 85 18 fe ff ff 	mov    -0x1e8(%rbp),%rax
  4328a4:	48 89 85 80 f5 ff ff 	mov    %rax,-0xa80(%rbp)
  4328ab:	e8 a6 30 01 00       	callq  445956 <writeback_cache>
  4328b0:	48 8d 85 c0 fd ff ff 	lea    -0x240(%rbp),%rax
  4328b7:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
  4328be:	48 8b 85 80 f5 ff ff 	mov    -0xa80(%rbp),%rax
  4328c5:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
  4328cc:	48 c7 85 08 ff ff ff 	movq   $0x1,-0xf8(%rbp)
  4328d3:	01 00 00 00 
  4328d7:	48 83 bd 08 ff ff ff 	cmpq   $0x0,-0xf8(%rbp)
  4328de:	00 
  4328df:	7d 14                	jge    4328f5 <rsa_check_pair_wrap+0x18a5>
  4328e1:	31 c0                	xor    %eax,%eax
  4328e3:	89 c1                	mov    %eax,%ecx
  4328e5:	48 2b 8d 08 ff ff ff 	sub    -0xf8(%rbp),%rcx
  4328ec:	48 89 8d 78 f5 ff ff 	mov    %rcx,-0xa88(%rbp)
  4328f3:	eb 0e                	jmp    432903 <rsa_check_pair_wrap+0x18b3>
  4328f5:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
  4328fc:	48 89 85 78 f5 ff ff 	mov    %rax,-0xa88(%rbp)
  432903:	48 8b 85 78 f5 ff ff 	mov    -0xa88(%rbp),%rax
  43290a:	48 8d 8d 90 fa ff ff 	lea    -0x570(%rbp),%rcx
  432911:	48 89 cf             	mov    %rcx,%rdi
  432914:	48 89 c6             	mov    %rax,%rsi
  432917:	e8 e0 33 01 00       	callq  445cfc <setEncryptedValueQWord>
  43291c:	48 8d 8d e0 fe ff ff 	lea    -0x120(%rbp),%rcx
  432923:	48 8b b5 08 ff ff ff 	mov    -0xf8(%rbp),%rsi
  43292a:	48 83 fe 00          	cmp    $0x0,%rsi
  43292e:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  432933:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  432939:	44 0f 4c c2          	cmovl  %edx,%r8d
  43293d:	48 89 cf             	mov    %rcx,%rdi
  432940:	44 89 c6             	mov    %r8d,%esi
  432943:	48 89 85 70 f5 ff ff 	mov    %rax,-0xa90(%rbp)
  43294a:	e8 af 32 01 00       	callq  445bfe <setEncryptedValueDWord>
  43294f:	ba 01 00 00 00       	mov    $0x1,%edx
  432954:	89 d6                	mov    %edx,%esi
  432956:	48 8d 8d e0 fe ff ff 	lea    -0x120(%rbp),%rcx
  43295d:	48 83 c1 08          	add    $0x8,%rcx
  432961:	48 89 cf             	mov    %rcx,%rdi
  432964:	48 89 85 68 f5 ff ff 	mov    %rax,-0xa98(%rbp)
  43296b:	e8 8c 33 01 00       	callq  445cfc <setEncryptedValueQWord>
  432970:	48 8d b5 90 fa ff ff 	lea    -0x570(%rbp),%rsi
  432977:	48 8d 8d e0 fe ff ff 	lea    -0x120(%rbp),%rcx
  43297e:	48 83 c1 10          	add    $0x10,%rcx
  432982:	48 89 cf             	mov    %rcx,%rdi
  432985:	48 89 85 60 f5 ff ff 	mov    %rax,-0xaa0(%rbp)
  43298c:	e8 6b 33 01 00       	callq  445cfc <setEncryptedValueQWord>
  432991:	48 8b bd 18 ff ff ff 	mov    -0xe8(%rbp),%rdi
  432998:	48 8b b5 10 ff ff ff 	mov    -0xf0(%rbp),%rsi
  43299f:	48 8d 95 e0 fe ff ff 	lea    -0x120(%rbp),%rdx
  4329a6:	48 89 85 58 f5 ff ff 	mov    %rax,-0xaa8(%rbp)
  4329ad:	e8 7e 8f fe ff       	callq  41b930 <mbedtls_mpi_sub_mpi>
  4329b2:	89 85 54 f5 ff ff    	mov    %eax,-0xaac(%rbp)
  4329b8:	e8 99 2f 01 00       	callq  445956 <writeback_cache>
  4329bd:	8b 85 54 f5 ff ff    	mov    -0xaac(%rbp),%eax
  4329c3:	89 85 f4 fd ff ff    	mov    %eax,-0x20c(%rbp)
  4329c9:	83 f8 00             	cmp    $0x0,%eax
  4329cc:	74 05                	je     4329d3 <rsa_check_pair_wrap+0x1983>
  4329ce:	e9 ed 03 00 00       	jmpq   432dc0 <rsa_check_pair_wrap+0x1d70>
  4329d3:	48 8b b5 00 fe ff ff 	mov    -0x200(%rbp),%rsi
  4329da:	48 8b 95 10 fe ff ff 	mov    -0x1f0(%rbp),%rdx
  4329e1:	48 8d bd 90 fd ff ff 	lea    -0x270(%rbp),%rdi
  4329e8:	e8 43 8f fe ff       	callq  41b930 <mbedtls_mpi_sub_mpi>
  4329ed:	89 85 f4 fd ff ff    	mov    %eax,-0x20c(%rbp)
  4329f3:	83 f8 00             	cmp    $0x0,%eax
  4329f6:	74 05                	je     4329fd <rsa_check_pair_wrap+0x19ad>
  4329f8:	e9 c3 03 00 00       	jmpq   432dc0 <rsa_check_pair_wrap+0x1d70>
  4329fd:	48 8d 85 90 fd ff ff 	lea    -0x270(%rbp),%rax
  432a04:	48 89 c7             	mov    %rax,%rdi
  432a07:	48 89 c6             	mov    %rax,%rsi
  432a0a:	48 8d 95 c0 fd ff ff 	lea    -0x240(%rbp),%rdx
  432a11:	e8 7a ef fe ff       	callq  421990 <mbedtls_mpi_mod_mpi>
  432a16:	89 85 f4 fd ff ff    	mov    %eax,-0x20c(%rbp)
  432a1c:	83 f8 00             	cmp    $0x0,%eax
  432a1f:	74 05                	je     432a26 <rsa_check_pair_wrap+0x19d6>
  432a21:	e9 9a 03 00 00       	jmpq   432dc0 <rsa_check_pair_wrap+0x1d70>
  432a26:	e8 2b 2f 01 00       	callq  445956 <writeback_cache>
  432a2b:	48 8d 85 90 fd ff ff 	lea    -0x270(%rbp),%rax
  432a32:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
  432a39:	48 c7 85 50 ff ff ff 	movq   $0x0,-0xb0(%rbp)
  432a40:	00 00 00 00 
  432a44:	48 83 bd 50 ff ff ff 	cmpq   $0x0,-0xb0(%rbp)
  432a4b:	00 
  432a4c:	7d 14                	jge    432a62 <rsa_check_pair_wrap+0x1a12>
  432a4e:	31 c0                	xor    %eax,%eax
  432a50:	89 c1                	mov    %eax,%ecx
  432a52:	48 2b 8d 50 ff ff ff 	sub    -0xb0(%rbp),%rcx
  432a59:	48 89 8d 48 f5 ff ff 	mov    %rcx,-0xab8(%rbp)
  432a60:	eb 0e                	jmp    432a70 <rsa_check_pair_wrap+0x1a20>
  432a62:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
  432a69:	48 89 85 48 f5 ff ff 	mov    %rax,-0xab8(%rbp)
  432a70:	48 8b 85 48 f5 ff ff 	mov    -0xab8(%rbp),%rax
  432a77:	48 8d 8d 90 fa ff ff 	lea    -0x570(%rbp),%rcx
  432a7e:	48 89 cf             	mov    %rcx,%rdi
  432a81:	48 89 c6             	mov    %rax,%rsi
  432a84:	e8 73 32 01 00       	callq  445cfc <setEncryptedValueQWord>
  432a89:	48 8d 8d 20 ff ff ff 	lea    -0xe0(%rbp),%rcx
  432a90:	48 8b b5 50 ff ff ff 	mov    -0xb0(%rbp),%rsi
  432a97:	48 83 fe 00          	cmp    $0x0,%rsi
  432a9b:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  432aa0:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  432aa6:	44 0f 4c c2          	cmovl  %edx,%r8d
  432aaa:	48 89 cf             	mov    %rcx,%rdi
  432aad:	44 89 c6             	mov    %r8d,%esi
  432ab0:	48 89 85 40 f5 ff ff 	mov    %rax,-0xac0(%rbp)
  432ab7:	e8 42 31 01 00       	callq  445bfe <setEncryptedValueDWord>
  432abc:	ba 01 00 00 00       	mov    $0x1,%edx
  432ac1:	89 d6                	mov    %edx,%esi
  432ac3:	48 8d 8d 20 ff ff ff 	lea    -0xe0(%rbp),%rcx
  432aca:	48 83 c1 08          	add    $0x8,%rcx
  432ace:	48 89 cf             	mov    %rcx,%rdi
  432ad1:	48 89 85 38 f5 ff ff 	mov    %rax,-0xac8(%rbp)
  432ad8:	e8 1f 32 01 00       	callq  445cfc <setEncryptedValueQWord>
  432add:	48 8d b5 90 fa ff ff 	lea    -0x570(%rbp),%rsi
  432ae4:	48 8d 8d 20 ff ff ff 	lea    -0xe0(%rbp),%rcx
  432aeb:	48 83 c1 10          	add    $0x10,%rcx
  432aef:	48 89 cf             	mov    %rcx,%rdi
  432af2:	48 89 85 30 f5 ff ff 	mov    %rax,-0xad0(%rbp)
  432af9:	e8 fe 31 01 00       	callq  445cfc <setEncryptedValueQWord>
  432afe:	48 8b bd 58 ff ff ff 	mov    -0xa8(%rbp),%rdi
  432b05:	48 8d b5 20 ff ff ff 	lea    -0xe0(%rbp),%rsi
  432b0c:	48 89 85 28 f5 ff ff 	mov    %rax,-0xad8(%rbp)
  432b13:	e8 38 bf fe ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  432b18:	89 85 24 f5 ff ff    	mov    %eax,-0xadc(%rbp)
  432b1e:	e8 33 2e 01 00       	callq  445956 <writeback_cache>
  432b23:	8b 85 24 f5 ff ff    	mov    -0xadc(%rbp),%eax
  432b29:	83 f8 00             	cmp    $0x0,%eax
  432b2c:	74 0f                	je     432b3d <rsa_check_pair_wrap+0x1aed>
  432b2e:	c7 85 f4 fd ff ff 00 	movl   $0xffffbe00,-0x20c(%rbp)
  432b35:	be ff ff 
  432b38:	e9 83 02 00 00       	jmpq   432dc0 <rsa_check_pair_wrap+0x1d70>
  432b3d:	eb 00                	jmp    432b3f <rsa_check_pair_wrap+0x1aef>
  432b3f:	48 83 bd f8 fd ff ff 	cmpq   $0x0,-0x208(%rbp)
  432b46:	00 
  432b47:	0f 84 71 02 00 00    	je     432dbe <rsa_check_pair_wrap+0x1d6e>
  432b4d:	48 83 bd 20 fe ff ff 	cmpq   $0x0,-0x1e0(%rbp)
  432b54:	00 
  432b55:	74 0a                	je     432b61 <rsa_check_pair_wrap+0x1b11>
  432b57:	48 83 bd 18 fe ff ff 	cmpq   $0x0,-0x1e8(%rbp)
  432b5e:	00 
  432b5f:	75 0f                	jne    432b70 <rsa_check_pair_wrap+0x1b20>
  432b61:	c7 85 f4 fd ff ff 80 	movl   $0xffffbf80,-0x20c(%rbp)
  432b68:	bf ff ff 
  432b6b:	e9 50 02 00 00       	jmpq   432dc0 <rsa_check_pair_wrap+0x1d70>
  432b70:	48 8b b5 f8 fd ff ff 	mov    -0x208(%rbp),%rsi
  432b77:	48 8b 95 18 fe ff ff 	mov    -0x1e8(%rbp),%rdx
  432b7e:	48 8d bd c0 fd ff ff 	lea    -0x240(%rbp),%rdi
  432b85:	e8 36 9a fe ff       	callq  41c5c0 <mbedtls_mpi_mul_mpi>
  432b8a:	89 85 f4 fd ff ff    	mov    %eax,-0x20c(%rbp)
  432b90:	83 f8 00             	cmp    $0x0,%eax
  432b93:	74 05                	je     432b9a <rsa_check_pair_wrap+0x1b4a>
  432b95:	e9 26 02 00 00       	jmpq   432dc0 <rsa_check_pair_wrap+0x1d70>
  432b9a:	e8 b7 2d 01 00       	callq  445956 <writeback_cache>
  432b9f:	48 8d 85 c0 fd ff ff 	lea    -0x240(%rbp),%rax
  432ba6:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  432baa:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  432bae:	48 c7 45 88 01 00 00 	movq   $0x1,-0x78(%rbp)
  432bb5:	00 
  432bb6:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
  432bbb:	7d 11                	jge    432bce <rsa_check_pair_wrap+0x1b7e>
  432bbd:	31 c0                	xor    %eax,%eax
  432bbf:	89 c1                	mov    %eax,%ecx
  432bc1:	48 2b 4d 88          	sub    -0x78(%rbp),%rcx
  432bc5:	48 89 8d 18 f5 ff ff 	mov    %rcx,-0xae8(%rbp)
  432bcc:	eb 0b                	jmp    432bd9 <rsa_check_pair_wrap+0x1b89>
  432bce:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  432bd2:	48 89 85 18 f5 ff ff 	mov    %rax,-0xae8(%rbp)
  432bd9:	48 8b 85 18 f5 ff ff 	mov    -0xae8(%rbp),%rax
  432be0:	48 8d 8d 90 fa ff ff 	lea    -0x570(%rbp),%rcx
  432be7:	48 89 cf             	mov    %rcx,%rdi
  432bea:	48 89 c6             	mov    %rax,%rsi
  432bed:	e8 0a 31 01 00       	callq  445cfc <setEncryptedValueQWord>
  432bf2:	48 8d 8d 60 ff ff ff 	lea    -0xa0(%rbp),%rcx
  432bf9:	48 8b 75 88          	mov    -0x78(%rbp),%rsi
  432bfd:	48 83 fe 00          	cmp    $0x0,%rsi
  432c01:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  432c06:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  432c0c:	44 0f 4c c2          	cmovl  %edx,%r8d
  432c10:	48 89 cf             	mov    %rcx,%rdi
  432c13:	44 89 c6             	mov    %r8d,%esi
  432c16:	48 89 85 10 f5 ff ff 	mov    %rax,-0xaf0(%rbp)
  432c1d:	e8 dc 2f 01 00       	callq  445bfe <setEncryptedValueDWord>
  432c22:	ba 01 00 00 00       	mov    $0x1,%edx
  432c27:	89 d6                	mov    %edx,%esi
  432c29:	48 8d 8d 60 ff ff ff 	lea    -0xa0(%rbp),%rcx
  432c30:	48 83 c1 08          	add    $0x8,%rcx
  432c34:	48 89 cf             	mov    %rcx,%rdi
  432c37:	48 89 85 08 f5 ff ff 	mov    %rax,-0xaf8(%rbp)
  432c3e:	e8 b9 30 01 00       	callq  445cfc <setEncryptedValueQWord>
  432c43:	48 8d b5 90 fa ff ff 	lea    -0x570(%rbp),%rsi
  432c4a:	48 8d 8d 60 ff ff ff 	lea    -0xa0(%rbp),%rcx
  432c51:	48 83 c1 10          	add    $0x10,%rcx
  432c55:	48 89 cf             	mov    %rcx,%rdi
  432c58:	48 89 85 00 f5 ff ff 	mov    %rax,-0xb00(%rbp)
  432c5f:	e8 98 30 01 00       	callq  445cfc <setEncryptedValueQWord>
  432c64:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
  432c68:	48 8b 75 90          	mov    -0x70(%rbp),%rsi
  432c6c:	48 8d 95 60 ff ff ff 	lea    -0xa0(%rbp),%rdx
  432c73:	48 89 85 f8 f4 ff ff 	mov    %rax,-0xb08(%rbp)
  432c7a:	e8 b1 8c fe ff       	callq  41b930 <mbedtls_mpi_sub_mpi>
  432c7f:	89 85 f4 f4 ff ff    	mov    %eax,-0xb0c(%rbp)
  432c85:	e8 cc 2c 01 00       	callq  445956 <writeback_cache>
  432c8a:	8b 85 f4 f4 ff ff    	mov    -0xb0c(%rbp),%eax
  432c90:	89 85 f4 fd ff ff    	mov    %eax,-0x20c(%rbp)
  432c96:	83 f8 00             	cmp    $0x0,%eax
  432c99:	74 05                	je     432ca0 <rsa_check_pair_wrap+0x1c50>
  432c9b:	e9 20 01 00 00       	jmpq   432dc0 <rsa_check_pair_wrap+0x1d70>
  432ca0:	48 8b 95 20 fe ff ff 	mov    -0x1e0(%rbp),%rdx
  432ca7:	48 8d 85 c0 fd ff ff 	lea    -0x240(%rbp),%rax
  432cae:	48 89 c7             	mov    %rax,%rdi
  432cb1:	48 89 c6             	mov    %rax,%rsi
  432cb4:	e8 d7 ec fe ff       	callq  421990 <mbedtls_mpi_mod_mpi>
  432cb9:	89 85 f4 fd ff ff    	mov    %eax,-0x20c(%rbp)
  432cbf:	83 f8 00             	cmp    $0x0,%eax
  432cc2:	74 05                	je     432cc9 <rsa_check_pair_wrap+0x1c79>
  432cc4:	e9 f7 00 00 00       	jmpq   432dc0 <rsa_check_pair_wrap+0x1d70>
  432cc9:	e8 88 2c 01 00       	callq  445956 <writeback_cache>
  432cce:	48 8d 85 c0 fd ff ff 	lea    -0x240(%rbp),%rax
  432cd5:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  432cd9:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
  432ce0:	00 
  432ce1:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  432ce6:	7d 11                	jge    432cf9 <rsa_check_pair_wrap+0x1ca9>
  432ce8:	31 c0                	xor    %eax,%eax
  432cea:	89 c1                	mov    %eax,%ecx
  432cec:	48 2b 4d c8          	sub    -0x38(%rbp),%rcx
  432cf0:	48 89 8d e8 f4 ff ff 	mov    %rcx,-0xb18(%rbp)
  432cf7:	eb 0b                	jmp    432d04 <rsa_check_pair_wrap+0x1cb4>
  432cf9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  432cfd:	48 89 85 e8 f4 ff ff 	mov    %rax,-0xb18(%rbp)
  432d04:	48 8b 85 e8 f4 ff ff 	mov    -0xb18(%rbp),%rax
  432d0b:	48 8d 8d 90 fa ff ff 	lea    -0x570(%rbp),%rcx
  432d12:	48 89 cf             	mov    %rcx,%rdi
  432d15:	48 89 c6             	mov    %rax,%rsi
  432d18:	e8 df 2f 01 00       	callq  445cfc <setEncryptedValueQWord>
  432d1d:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
  432d21:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  432d25:	48 83 fe 00          	cmp    $0x0,%rsi
  432d29:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  432d2e:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  432d34:	44 0f 4c c2          	cmovl  %edx,%r8d
  432d38:	48 89 cf             	mov    %rcx,%rdi
  432d3b:	44 89 c6             	mov    %r8d,%esi
  432d3e:	48 89 85 e0 f4 ff ff 	mov    %rax,-0xb20(%rbp)
  432d45:	e8 b4 2e 01 00       	callq  445bfe <setEncryptedValueDWord>
  432d4a:	ba 01 00 00 00       	mov    $0x1,%edx
  432d4f:	89 d6                	mov    %edx,%esi
  432d51:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
  432d55:	48 83 c1 08          	add    $0x8,%rcx
  432d59:	48 89 cf             	mov    %rcx,%rdi
  432d5c:	48 89 85 d8 f4 ff ff 	mov    %rax,-0xb28(%rbp)
  432d63:	e8 94 2f 01 00       	callq  445cfc <setEncryptedValueQWord>
  432d68:	48 8d b5 90 fa ff ff 	lea    -0x570(%rbp),%rsi
  432d6f:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
  432d73:	48 83 c1 10          	add    $0x10,%rcx
  432d77:	48 89 cf             	mov    %rcx,%rdi
  432d7a:	48 89 85 d0 f4 ff ff 	mov    %rax,-0xb30(%rbp)
  432d81:	e8 76 2f 01 00       	callq  445cfc <setEncryptedValueQWord>
  432d86:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  432d8a:	48 8d 75 a0          	lea    -0x60(%rbp),%rsi
  432d8e:	48 89 85 c8 f4 ff ff 	mov    %rax,-0xb38(%rbp)
  432d95:	e8 b6 bc fe ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  432d9a:	89 85 c4 f4 ff ff    	mov    %eax,-0xb3c(%rbp)
  432da0:	e8 b1 2b 01 00       	callq  445956 <writeback_cache>
  432da5:	8b 85 c4 f4 ff ff    	mov    -0xb3c(%rbp),%eax
  432dab:	83 f8 00             	cmp    $0x0,%eax
  432dae:	74 0c                	je     432dbc <rsa_check_pair_wrap+0x1d6c>
  432db0:	c7 85 f4 fd ff ff 00 	movl   $0xffffbe00,-0x20c(%rbp)
  432db7:	be ff ff 
  432dba:	eb 04                	jmp    432dc0 <rsa_check_pair_wrap+0x1d70>
  432dbc:	eb 00                	jmp    432dbe <rsa_check_pair_wrap+0x1d6e>
  432dbe:	eb 00                	jmp    432dc0 <rsa_check_pair_wrap+0x1d70>
  432dc0:	83 bd f4 fd ff ff 00 	cmpl   $0x0,-0x20c(%rbp)
  432dc7:	74 29                	je     432df2 <rsa_check_pair_wrap+0x1da2>
  432dc9:	81 bd f4 fd ff ff 00 	cmpl   $0xffffbe00,-0x20c(%rbp)
  432dd0:	be ff ff 
  432dd3:	74 1d                	je     432df2 <rsa_check_pair_wrap+0x1da2>
  432dd5:	81 bd f4 fd ff ff 80 	cmpl   $0xffffbf80,-0x20c(%rbp)
  432ddc:	bf ff ff 
  432ddf:	74 11                	je     432df2 <rsa_check_pair_wrap+0x1da2>
  432de1:	8b 85 f4 fd ff ff    	mov    -0x20c(%rbp),%eax
  432de7:	05 00 be ff ff       	add    $0xffffbe00,%eax
  432dec:	89 85 f4 fd ff ff    	mov    %eax,-0x20c(%rbp)
  432df2:	48 8d 85 c0 fd ff ff 	lea    -0x240(%rbp),%rax
  432df9:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  432dfd:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  432e02:	75 05                	jne    432e09 <rsa_check_pair_wrap+0x1db9>
  432e04:	e9 3f 01 00 00       	jmpq   432f48 <rsa_check_pair_wrap+0x1ef8>
  432e09:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  432e0d:	48 83 c0 10          	add    $0x10,%rax
  432e11:	48 89 c7             	mov    %rax,%rdi
  432e14:	e8 2f 33 01 00       	callq  446148 <getDecryptedValueQWord>
  432e19:	48 83 f8 00          	cmp    $0x0,%rax
  432e1d:	0f 84 df 00 00 00    	je     432f02 <rsa_check_pair_wrap+0x1eb2>
  432e23:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  432e27:	48 83 c0 10          	add    $0x10,%rax
  432e2b:	48 89 c7             	mov    %rax,%rdi
  432e2e:	e8 15 33 01 00       	callq  446148 <getDecryptedValueQWord>
  432e33:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  432e37:	48 83 c7 08          	add    $0x8,%rdi
  432e3b:	48 89 85 b8 f4 ff ff 	mov    %rax,-0xb48(%rbp)
  432e42:	e8 01 33 01 00       	callq  446148 <getDecryptedValueQWord>
  432e47:	48 8b bd b8 f4 ff ff 	mov    -0xb48(%rbp),%rdi
  432e4e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  432e52:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  432e56:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  432e5a:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  432e5e:	48 c1 e1 03          	shl    $0x3,%rcx
  432e62:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  432e66:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
  432e6a:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  432e71:	00 
  432e72:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  432e76:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  432e7a:	48 89 85 b0 f4 ff ff 	mov    %rax,-0xb50(%rbp)
  432e81:	48 89 8d a8 f4 ff ff 	mov    %rcx,-0xb58(%rbp)
  432e88:	48 89 95 a0 f4 ff ff 	mov    %rdx,-0xb60(%rbp)
  432e8f:	e8 c2 2a 01 00       	callq  445956 <writeback_cache>
  432e94:	48 8b bd a8 f4 ff ff 	mov    -0xb58(%rbp),%rdi
  432e9b:	48 8b b5 a0 f4 ff ff 	mov    -0xb60(%rbp),%rsi
  432ea2:	e8 3e 38 01 00       	callq  4466e5 <decryptArrayForLibCall>
  432ea7:	31 f6                	xor    %esi,%esi
  432ea9:	48 8b bd a8 f4 ff ff 	mov    -0xb58(%rbp),%rdi
  432eb0:	48 8b 95 a0 f4 ff ff 	mov    -0xb60(%rbp),%rdx
  432eb7:	48 8b 85 b0 f4 ff ff 	mov    -0xb50(%rbp),%rax
  432ebe:	ff d0                	callq  *%rax
  432ec0:	48 8b bd a8 f4 ff ff 	mov    -0xb58(%rbp),%rdi
  432ec7:	48 8b b5 a0 f4 ff ff 	mov    -0xb60(%rbp),%rsi
  432ece:	48 89 85 98 f4 ff ff 	mov    %rax,-0xb68(%rbp)
  432ed5:	e8 7c 35 01 00       	callq  446456 <encryptArrayForLibCall>
  432eda:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  432ede:	48 83 c0 10          	add    $0x10,%rax
  432ee2:	48 89 c7             	mov    %rax,%rdi
  432ee5:	e8 5e 32 01 00       	callq  446148 <getDecryptedValueQWord>
  432eea:	48 89 85 90 f4 ff ff 	mov    %rax,-0xb70(%rbp)
  432ef1:	e8 60 2a 01 00       	callq  445956 <writeback_cache>
  432ef6:	48 8b bd 90 f4 ff ff 	mov    -0xb70(%rbp),%rdi
  432efd:	e8 de e1 fc ff       	callq  4010e0 <free@plt>
  432f02:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  432f06:	48 89 c7             	mov    %rax,%rdi
  432f09:	be 01 00 00 00       	mov    $0x1,%esi
  432f0e:	e8 eb 2c 01 00       	callq  445bfe <setEncryptedValueDWord>
  432f13:	31 f6                	xor    %esi,%esi
  432f15:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  432f19:	48 83 c7 08          	add    $0x8,%rdi
  432f1d:	48 89 85 88 f4 ff ff 	mov    %rax,-0xb78(%rbp)
  432f24:	e8 d3 2d 01 00       	callq  445cfc <setEncryptedValueQWord>
  432f29:	31 c9                	xor    %ecx,%ecx
  432f2b:	89 ce                	mov    %ecx,%esi
  432f2d:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  432f31:	48 83 c7 10          	add    $0x10,%rdi
  432f35:	48 89 85 80 f4 ff ff 	mov    %rax,-0xb80(%rbp)
  432f3c:	e8 bb 2d 01 00       	callq  445cfc <setEncryptedValueQWord>
  432f41:	48 89 85 78 f4 ff ff 	mov    %rax,-0xb88(%rbp)
  432f48:	48 8d 85 90 fd ff ff 	lea    -0x270(%rbp),%rax
  432f4f:	48 89 85 30 fe ff ff 	mov    %rax,-0x1d0(%rbp)
  432f56:	48 83 bd 30 fe ff ff 	cmpq   $0x0,-0x1d0(%rbp)
  432f5d:	00 
  432f5e:	75 05                	jne    432f65 <rsa_check_pair_wrap+0x1f15>
  432f60:	e9 6c 01 00 00       	jmpq   4330d1 <rsa_check_pair_wrap+0x2081>
  432f65:	48 8b 85 30 fe ff ff 	mov    -0x1d0(%rbp),%rax
  432f6c:	48 83 c0 10          	add    $0x10,%rax
  432f70:	48 89 c7             	mov    %rax,%rdi
  432f73:	e8 d0 31 01 00       	callq  446148 <getDecryptedValueQWord>
  432f78:	48 83 f8 00          	cmp    $0x0,%rax
  432f7c:	0f 84 00 01 00 00    	je     433082 <rsa_check_pair_wrap+0x2032>
  432f82:	48 8b 85 30 fe ff ff 	mov    -0x1d0(%rbp),%rax
  432f89:	48 83 c0 10          	add    $0x10,%rax
  432f8d:	48 89 c7             	mov    %rax,%rdi
  432f90:	e8 b3 31 01 00       	callq  446148 <getDecryptedValueQWord>
  432f95:	48 8b bd 30 fe ff ff 	mov    -0x1d0(%rbp),%rdi
  432f9c:	48 83 c7 08          	add    $0x8,%rdi
  432fa0:	48 89 85 70 f4 ff ff 	mov    %rax,-0xb90(%rbp)
  432fa7:	e8 9c 31 01 00       	callq  446148 <getDecryptedValueQWord>
  432fac:	48 8b bd 70 f4 ff ff 	mov    -0xb90(%rbp),%rdi
  432fb3:	48 89 bd 40 fe ff ff 	mov    %rdi,-0x1c0(%rbp)
  432fba:	48 89 85 38 fe ff ff 	mov    %rax,-0x1c8(%rbp)
  432fc1:	48 8b 85 40 fe ff ff 	mov    -0x1c0(%rbp),%rax
  432fc8:	48 8b 8d 38 fe ff ff 	mov    -0x1c8(%rbp),%rcx
  432fcf:	48 c1 e1 03          	shl    $0x3,%rcx
  432fd3:	48 89 85 50 fe ff ff 	mov    %rax,-0x1b0(%rbp)
  432fda:	48 89 8d 48 fe ff ff 	mov    %rcx,-0x1b8(%rbp)
  432fe1:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  432fe8:	00 
  432fe9:	48 8b 8d 50 fe ff ff 	mov    -0x1b0(%rbp),%rcx
  432ff0:	48 8b 95 48 fe ff ff 	mov    -0x1b8(%rbp),%rdx
  432ff7:	48 89 85 68 f4 ff ff 	mov    %rax,-0xb98(%rbp)
  432ffe:	48 89 8d 60 f4 ff ff 	mov    %rcx,-0xba0(%rbp)
  433005:	48 89 95 58 f4 ff ff 	mov    %rdx,-0xba8(%rbp)
  43300c:	e8 45 29 01 00       	callq  445956 <writeback_cache>
  433011:	48 8b bd 60 f4 ff ff 	mov    -0xba0(%rbp),%rdi
  433018:	48 8b b5 58 f4 ff ff 	mov    -0xba8(%rbp),%rsi
  43301f:	e8 c1 36 01 00       	callq  4466e5 <decryptArrayForLibCall>
  433024:	31 f6                	xor    %esi,%esi
  433026:	48 8b bd 60 f4 ff ff 	mov    -0xba0(%rbp),%rdi
  43302d:	48 8b 95 58 f4 ff ff 	mov    -0xba8(%rbp),%rdx
  433034:	48 8b 85 68 f4 ff ff 	mov    -0xb98(%rbp),%rax
  43303b:	ff d0                	callq  *%rax
  43303d:	48 8b bd 60 f4 ff ff 	mov    -0xba0(%rbp),%rdi
  433044:	48 8b b5 58 f4 ff ff 	mov    -0xba8(%rbp),%rsi
  43304b:	48 89 85 50 f4 ff ff 	mov    %rax,-0xbb0(%rbp)
  433052:	e8 ff 33 01 00       	callq  446456 <encryptArrayForLibCall>
  433057:	48 8b 85 30 fe ff ff 	mov    -0x1d0(%rbp),%rax
  43305e:	48 83 c0 10          	add    $0x10,%rax
  433062:	48 89 c7             	mov    %rax,%rdi
  433065:	e8 de 30 01 00       	callq  446148 <getDecryptedValueQWord>
  43306a:	48 89 85 48 f4 ff ff 	mov    %rax,-0xbb8(%rbp)
  433071:	e8 e0 28 01 00       	callq  445956 <writeback_cache>
  433076:	48 8b bd 48 f4 ff ff 	mov    -0xbb8(%rbp),%rdi
  43307d:	e8 5e e0 fc ff       	callq  4010e0 <free@plt>
  433082:	48 8b 85 30 fe ff ff 	mov    -0x1d0(%rbp),%rax
  433089:	48 89 c7             	mov    %rax,%rdi
  43308c:	be 01 00 00 00       	mov    $0x1,%esi
  433091:	e8 68 2b 01 00       	callq  445bfe <setEncryptedValueDWord>
  433096:	31 f6                	xor    %esi,%esi
  433098:	48 8b bd 30 fe ff ff 	mov    -0x1d0(%rbp),%rdi
  43309f:	48 83 c7 08          	add    $0x8,%rdi
  4330a3:	48 89 85 40 f4 ff ff 	mov    %rax,-0xbc0(%rbp)
  4330aa:	e8 4d 2c 01 00       	callq  445cfc <setEncryptedValueQWord>
  4330af:	31 c9                	xor    %ecx,%ecx
  4330b1:	89 ce                	mov    %ecx,%esi
  4330b3:	48 8b bd 30 fe ff ff 	mov    -0x1d0(%rbp),%rdi
  4330ba:	48 83 c7 10          	add    $0x10,%rdi
  4330be:	48 89 85 38 f4 ff ff 	mov    %rax,-0xbc8(%rbp)
  4330c5:	e8 32 2c 01 00       	callq  445cfc <setEncryptedValueQWord>
  4330ca:	48 89 85 30 f4 ff ff 	mov    %rax,-0xbd0(%rbp)
  4330d1:	8b 85 f4 fd ff ff    	mov    -0x20c(%rbp),%eax
  4330d7:	89 85 2c f4 ff ff    	mov    %eax,-0xbd4(%rbp)
  4330dd:	e8 74 28 01 00       	callq  445956 <writeback_cache>
  4330e2:	e8 6f 28 01 00       	callq  445956 <writeback_cache>
  4330e7:	8b 85 2c f4 ff ff    	mov    -0xbd4(%rbp),%eax
  4330ed:	83 f8 00             	cmp    $0x0,%eax
  4330f0:	74 0c                	je     4330fe <rsa_check_pair_wrap+0x20ae>
  4330f2:	c7 85 bc f9 ff ff 00 	movl   $0xffffbe00,-0x644(%rbp)
  4330f9:	be ff ff 
  4330fc:	eb 0a                	jmp    433108 <rsa_check_pair_wrap+0x20b8>
  4330fe:	c7 85 bc f9 ff ff 00 	movl   $0x0,-0x644(%rbp)
  433105:	00 00 00 
  433108:	8b 85 bc f9 ff ff    	mov    -0x644(%rbp),%eax
  43310e:	83 f8 00             	cmp    $0x0,%eax
  433111:	74 0c                	je     43311f <rsa_check_pair_wrap+0x20cf>
  433113:	c7 85 ac f9 ff ff 00 	movl   $0xffffbe00,-0x654(%rbp)
  43311a:	be ff ff 
  43311d:	eb 62                	jmp    433181 <rsa_check_pair_wrap+0x2131>
  43311f:	48 8b 85 a0 f9 ff ff 	mov    -0x660(%rbp),%rax
  433126:	48 83 c0 10          	add    $0x10,%rax
  43312a:	48 8b 8d 98 f9 ff ff 	mov    -0x668(%rbp),%rcx
  433131:	48 83 c1 10          	add    $0x10,%rcx
  433135:	48 89 c7             	mov    %rax,%rdi
  433138:	48 89 ce             	mov    %rcx,%rsi
  43313b:	e8 10 b9 fe ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  433140:	83 f8 00             	cmp    $0x0,%eax
  433143:	75 26                	jne    43316b <rsa_check_pair_wrap+0x211b>
  433145:	48 8b 85 a0 f9 ff ff 	mov    -0x660(%rbp),%rax
  43314c:	48 83 c0 28          	add    $0x28,%rax
  433150:	48 8b 8d 98 f9 ff ff 	mov    -0x668(%rbp),%rcx
  433157:	48 83 c1 28          	add    $0x28,%rcx
  43315b:	48 89 c7             	mov    %rax,%rdi
  43315e:	48 89 ce             	mov    %rcx,%rsi
  433161:	e8 ea b8 fe ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  433166:	83 f8 00             	cmp    $0x0,%eax
  433169:	74 0c                	je     433177 <rsa_check_pair_wrap+0x2127>
  43316b:	c7 85 ac f9 ff ff 00 	movl   $0xffffbe00,-0x654(%rbp)
  433172:	be ff ff 
  433175:	eb 0a                	jmp    433181 <rsa_check_pair_wrap+0x2131>
  433177:	c7 85 ac f9 ff ff 00 	movl   $0x0,-0x654(%rbp)
  43317e:	00 00 00 
  433181:	8b 85 ac f9 ff ff    	mov    -0x654(%rbp),%eax
  433187:	89 85 28 f4 ff ff    	mov    %eax,-0xbd8(%rbp)
  43318d:	e8 c4 27 01 00       	callq  445956 <writeback_cache>
  433192:	8b 85 28 f4 ff ff    	mov    -0xbd8(%rbp),%eax
  433198:	48 81 c4 e0 0b 00 00 	add    $0xbe0,%rsp
  43319f:	5d                   	pop    %rbp
  4331a0:	c3                   	retq   
  4331a1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  4331a8:	0f 1f 84 00 00 00 00 
  4331af:	00 

00000000004331b0 <rsa_alloc_wrap>:
  4331b0:	55                   	push   %rbp
  4331b1:	48 89 e5             	mov    %rsp,%rbp
  4331b4:	48 83 ec 60          	sub    $0x60,%rsp
  4331b8:	e8 99 27 01 00       	callq  445956 <writeback_cache>
  4331bd:	b8 01 00 00 00       	mov    $0x1,%eax
  4331c2:	89 c7                	mov    %eax,%edi
  4331c4:	b8 50 01 00 00       	mov    $0x150,%eax
  4331c9:	89 c6                	mov    %eax,%esi
  4331cb:	e8 1a 36 01 00       	callq  4467ea <aes_calloc>
  4331d0:	b9 50 01 00 00       	mov    $0x150,%ecx
  4331d5:	89 ce                	mov    %ecx,%esi
  4331d7:	48 89 c7             	mov    %rax,%rdi
  4331da:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  4331de:	e8 73 32 01 00       	callq  446456 <encryptArrayForLibCall>
  4331e3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4331e7:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  4331eb:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  4331f0:	0f 84 a2 00 00 00    	je     433298 <rsa_alloc_wrap+0xe8>
  4331f6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4331fa:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4331fe:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
  433205:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
  43320c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  433210:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  433214:	e8 3d 27 01 00       	callq  445956 <writeback_cache>
  433219:	b9 50 01 00 00       	mov    $0x150,%ecx
  43321e:	89 ce                	mov    %ecx,%esi
  433220:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  433224:	e8 bc 34 01 00       	callq  4466e5 <decryptArrayForLibCall>
  433229:	b9 50 01 00 00       	mov    $0x150,%ecx
  43322e:	89 c8                	mov    %ecx,%eax
  433230:	31 f6                	xor    %esi,%esi
  433232:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  433236:	48 89 c2             	mov    %rax,%rdx
  433239:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  43323d:	e8 de dd fc ff       	callq  401020 <memset@plt>
  433242:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  433246:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
  43324a:	e8 07 32 01 00       	callq  446456 <encryptArrayForLibCall>
  43324f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  433253:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  433256:	44 8b 45 e0          	mov    -0x20(%rbp),%r8d
  43325a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43325e:	89 4d f4             	mov    %ecx,-0xc(%rbp)
  433261:	44 89 45 f0          	mov    %r8d,-0x10(%rbp)
  433265:	8b 75 f4             	mov    -0xc(%rbp),%esi
  433268:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43326c:	48 05 48 01 00 00    	add    $0x148,%rax
  433272:	48 89 c7             	mov    %rax,%rdi
  433275:	e8 84 29 01 00       	callq  445bfe <setEncryptedValueDWord>
  43327a:	8b 75 f0             	mov    -0x10(%rbp),%esi
  43327d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  433281:	48 81 c2 4c 01 00 00 	add    $0x14c,%rdx
  433288:	48 89 d7             	mov    %rdx,%rdi
  43328b:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  43328f:	e8 6a 29 01 00       	callq  445bfe <setEncryptedValueDWord>
  433294:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  433298:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  43329c:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  4332a0:	e8 b1 26 01 00       	callq  445956 <writeback_cache>
  4332a5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  4332a9:	48 83 c4 60          	add    $0x60,%rsp
  4332ad:	5d                   	pop    %rbp
  4332ae:	c3                   	retq   
  4332af:	90                   	nop

00000000004332b0 <rsa_free_wrap>:
  4332b0:	55                   	push   %rbp
  4332b1:	48 89 e5             	mov    %rsp,%rbp
  4332b4:	48 83 ec 10          	sub    $0x10,%rsp
  4332b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4332bc:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  4332c0:	e8 6b 95 00 00       	callq  43c830 <mbedtls_rsa_free>
  4332c5:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  4332c9:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  4332cd:	e8 84 26 01 00       	callq  445956 <writeback_cache>
  4332d2:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  4332d6:	e8 05 de fc ff       	callq  4010e0 <free@plt>
  4332db:	e8 76 26 01 00       	callq  445956 <writeback_cache>
  4332e0:	48 83 c4 10          	add    $0x10,%rsp
  4332e4:	5d                   	pop    %rbp
  4332e5:	c3                   	retq   
  4332e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4332ed:	00 00 00 

00000000004332f0 <rsa_debug>:
  4332f0:	55                   	push   %rbp
  4332f1:	48 89 e5             	mov    %rsp,%rbp
  4332f4:	48 83 ec 10          	sub    $0x10,%rsp
  4332f8:	48 b8 00 8c 44 00 00 	movabs $0x448c00,%rax
  4332ff:	00 00 00 
  433302:	48 b9 f0 8b 44 00 00 	movabs $0x448bf0,%rcx
  433309:	00 00 00 
  43330c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  433310:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  433314:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  433318:	c7 06 01 00 00 00    	movl   $0x1,(%rsi)
  43331e:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  433322:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
  433326:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  43332a:	48 83 c1 10          	add    $0x10,%rcx
  43332e:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  433332:	48 89 4e 10          	mov    %rcx,0x10(%rsi)
  433336:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  43333a:	48 83 c1 18          	add    $0x18,%rcx
  43333e:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
  433342:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  433346:	c7 01 01 00 00 00    	movl   $0x1,(%rcx)
  43334c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  433350:	48 89 41 08          	mov    %rax,0x8(%rcx)
  433354:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  433358:	48 83 c0 28          	add    $0x28,%rax
  43335c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  433360:	48 89 41 10          	mov    %rax,0x10(%rcx)
  433364:	e8 ed 25 01 00       	callq  445956 <writeback_cache>
  433369:	48 83 c4 10          	add    $0x10,%rsp
  43336d:	5d                   	pop    %rbp
  43336e:	c3                   	retq   
  43336f:	90                   	nop

0000000000433370 <mbedtls_pk_load_file>:
  433370:	55                   	push   %rbp
  433371:	48 89 e5             	mov    %rsp,%rbp
  433374:	48 83 ec 50          	sub    $0x50,%rsp
  433378:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  43337c:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  433380:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
  433384:	eb 00                	jmp    433386 <mbedtls_pk_load_file+0x16>
  433386:	eb 00                	jmp    433388 <mbedtls_pk_load_file+0x18>
  433388:	eb 00                	jmp    43338a <mbedtls_pk_load_file+0x1a>
  43338a:	eb 00                	jmp    43338c <mbedtls_pk_load_file+0x1c>
  43338c:	eb 00                	jmp    43338e <mbedtls_pk_load_file+0x1e>
  43338e:	48 be 50 7e 44 00 00 	movabs $0x447e50,%rsi
  433395:	00 00 00 
  433398:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  43339c:	e8 7f de fc ff       	callq  401220 <fopen64@plt>
  4333a1:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  4333a5:	48 83 f8 00          	cmp    $0x0,%rax
  4333a9:	75 0c                	jne    4333b7 <mbedtls_pk_load_file+0x47>
  4333ab:	c7 45 fc 00 c2 ff ff 	movl   $0xffffc200,-0x4(%rbp)
  4333b2:	e9 57 01 00 00       	jmpq   43350e <mbedtls_pk_load_file+0x19e>
  4333b7:	31 c0                	xor    %eax,%eax
  4333b9:	89 c6                	mov    %eax,%esi
  4333bb:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  4333bf:	ba 02 00 00 00       	mov    $0x2,%edx
  4333c4:	e8 a7 de fc ff       	callq  401270 <fseek@plt>
  4333c9:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  4333cd:	89 45 cc             	mov    %eax,-0x34(%rbp)
  4333d0:	e8 ab de fc ff       	callq  401280 <ftell@plt>
  4333d5:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  4333d9:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  4333dd:	75 18                	jne    4333f7 <mbedtls_pk_load_file+0x87>
  4333df:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  4333e3:	e8 58 de fc ff       	callq  401240 <fclose@plt>
  4333e8:	c7 45 fc 00 c2 ff ff 	movl   $0xffffc200,-0x4(%rbp)
  4333ef:	89 45 c8             	mov    %eax,-0x38(%rbp)
  4333f2:	e9 17 01 00 00       	jmpq   43350e <mbedtls_pk_load_file+0x19e>
  4333f7:	31 c0                	xor    %eax,%eax
  4333f9:	89 c6                	mov    %eax,%esi
  4333fb:	31 d2                	xor    %edx,%edx
  4333fd:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  433401:	e8 6a de fc ff       	callq  401270 <fseek@plt>
  433406:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  43340a:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  43340e:	48 89 37             	mov    %rsi,(%rdi)
  433411:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  433415:	48 8b 36             	mov    (%rsi),%rsi
  433418:	48 83 c6 01          	add    $0x1,%rsi
  43341c:	48 83 fe 00          	cmp    $0x0,%rsi
  433420:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  433423:	74 27                	je     43344c <mbedtls_pk_load_file+0xdc>
  433425:	b8 01 00 00 00       	mov    $0x1,%eax
  43342a:	89 c7                	mov    %eax,%edi
  43342c:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  433430:	48 8b 09             	mov    (%rcx),%rcx
  433433:	48 83 c1 01          	add    $0x1,%rcx
  433437:	48 89 ce             	mov    %rcx,%rsi
  43343a:	e8 ab 33 01 00       	callq  4467ea <aes_calloc>
  43343f:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  433443:	48 89 01             	mov    %rax,(%rcx)
  433446:	48 83 f8 00          	cmp    $0x0,%rax
  43344a:	75 18                	jne    433464 <mbedtls_pk_load_file+0xf4>
  43344c:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  433450:	e8 eb dd fc ff       	callq  401240 <fclose@plt>
  433455:	c7 45 fc 80 c0 ff ff 	movl   $0xffffc080,-0x4(%rbp)
  43345c:	89 45 c0             	mov    %eax,-0x40(%rbp)
  43345f:	e9 aa 00 00 00       	jmpq   43350e <mbedtls_pk_load_file+0x19e>
  433464:	b8 01 00 00 00       	mov    $0x1,%eax
  433469:	89 c6                	mov    %eax,%esi
  43346b:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  43346f:	48 8b 39             	mov    (%rcx),%rdi
  433472:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  433476:	48 8b 11             	mov    (%rcx),%rdx
  433479:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  43347d:	e8 de dd fc ff       	callq  401260 <fread@plt>
  433482:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  433486:	48 3b 01             	cmp    (%rcx),%rax
  433489:	74 34                	je     4334bf <mbedtls_pk_load_file+0x14f>
  43348b:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  43348f:	e8 ac dd fc ff       	callq  401240 <fclose@plt>
  433494:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  433498:	48 8b 3f             	mov    (%rdi),%rdi
  43349b:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  43349f:	48 8b 31             	mov    (%rcx),%rsi
  4334a2:	89 45 bc             	mov    %eax,-0x44(%rbp)
  4334a5:	e8 c6 2b 00 00       	callq  436070 <mbedtls_platform_zeroize>
  4334aa:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4334ae:	48 8b 39             	mov    (%rcx),%rdi
  4334b1:	e8 2a dc fc ff       	callq  4010e0 <free@plt>
  4334b6:	c7 45 fc 00 c2 ff ff 	movl   $0xffffc200,-0x4(%rbp)
  4334bd:	eb 4f                	jmp    43350e <mbedtls_pk_load_file+0x19e>
  4334bf:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  4334c3:	e8 78 dd fc ff       	callq  401240 <fclose@plt>
  4334c8:	48 be 10 8c 44 00 00 	movabs $0x448c10,%rsi
  4334cf:	00 00 00 
  4334d2:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  4334d6:	48 8b 3f             	mov    (%rdi),%rdi
  4334d9:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  4334dd:	48 8b 09             	mov    (%rcx),%rcx
  4334e0:	c6 04 0f 00          	movb   $0x0,(%rdi,%rcx,1)
  4334e4:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4334e8:	48 8b 39             	mov    (%rcx),%rdi
  4334eb:	89 45 b8             	mov    %eax,-0x48(%rbp)
  4334ee:	e8 4d 1f 01 00       	callq  445440 <strstr>
  4334f3:	48 83 f8 00          	cmp    $0x0,%rax
  4334f7:	74 0e                	je     433507 <mbedtls_pk_load_file+0x197>
  4334f9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4334fd:	48 8b 08             	mov    (%rax),%rcx
  433500:	48 83 c1 01          	add    $0x1,%rcx
  433504:	48 89 08             	mov    %rcx,(%rax)
  433507:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  43350e:	8b 45 fc             	mov    -0x4(%rbp),%eax
  433511:	89 45 b4             	mov    %eax,-0x4c(%rbp)
  433514:	e8 3d 24 01 00       	callq  445956 <writeback_cache>
  433519:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  43351c:	48 83 c4 50          	add    $0x50,%rsp
  433520:	5d                   	pop    %rbp
  433521:	c3                   	retq   
  433522:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  433529:	1f 84 00 00 00 00 00 

0000000000433530 <mbedtls_pk_parse_key>:
  433530:	55                   	push   %rbp
  433531:	48 89 e5             	mov    %rsp,%rbp
  433534:	48 81 ec f0 02 00 00 	sub    $0x2f0,%rsp
  43353b:	48 89 bd b8 fe ff ff 	mov    %rdi,-0x148(%rbp)
  433542:	48 89 b5 b0 fe ff ff 	mov    %rsi,-0x150(%rbp)
  433549:	48 89 95 a8 fe ff ff 	mov    %rdx,-0x158(%rbp)
  433550:	48 89 8d a0 fe ff ff 	mov    %rcx,-0x160(%rbp)
  433557:	4c 89 85 98 fe ff ff 	mov    %r8,-0x168(%rbp)
  43355e:	eb 00                	jmp    433560 <mbedtls_pk_parse_key+0x30>
  433560:	48 83 bd a8 fe ff ff 	cmpq   $0x0,-0x158(%rbp)
  433567:	00 
  433568:	75 0f                	jne    433579 <mbedtls_pk_parse_key+0x49>
  43356a:	c7 85 c4 fe ff ff 00 	movl   $0xffffc300,-0x13c(%rbp)
  433571:	c3 ff ff 
  433574:	e9 b3 0a 00 00       	jmpq   43402c <mbedtls_pk_parse_key+0xafc>
  433579:	eb 00                	jmp    43357b <mbedtls_pk_parse_key+0x4b>
  43357b:	eb 00                	jmp    43357d <mbedtls_pk_parse_key+0x4d>
  43357d:	31 f6                	xor    %esi,%esi
  43357f:	b8 18 00 00 00       	mov    $0x18,%eax
  433584:	89 c2                	mov    %eax,%edx
  433586:	48 8d 8d 68 fe ff ff 	lea    -0x198(%rbp),%rcx
  43358d:	48 89 8d c8 fe ff ff 	mov    %rcx,-0x138(%rbp)
  433594:	48 8b 8d c8 fe ff ff 	mov    -0x138(%rbp),%rcx
  43359b:	48 89 cf             	mov    %rcx,%rdi
  43359e:	e8 7d da fc ff       	callq  401020 <memset@plt>
  4335a3:	48 8b 8d b0 fe ff ff 	mov    -0x150(%rbp),%rcx
  4335aa:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
  4335b1:	48 83 ea 01          	sub    $0x1,%rdx
  4335b5:	0f b6 04 11          	movzbl (%rcx,%rdx,1),%eax
  4335b9:	83 f8 00             	cmp    $0x0,%eax
  4335bc:	74 0c                	je     4335ca <mbedtls_pk_parse_key+0x9a>
  4335be:	c7 85 94 fe ff ff 80 	movl   $0xffffef80,-0x16c(%rbp)
  4335c5:	ef ff ff 
  4335c8:	eb 46                	jmp    433610 <mbedtls_pk_parse_key+0xe0>
  4335ca:	48 ba 40 8c 44 00 00 	movabs $0x448c40,%rdx
  4335d1:	00 00 00 
  4335d4:	48 be 20 8c 44 00 00 	movabs $0x448c20,%rsi
  4335db:	00 00 00 
  4335de:	48 8b 8d b0 fe ff ff 	mov    -0x150(%rbp),%rcx
  4335e5:	4c 8b 85 a0 fe ff ff 	mov    -0x160(%rbp),%r8
  4335ec:	4c 8b 8d 98 fe ff ff 	mov    -0x168(%rbp),%r9
  4335f3:	48 8d bd 68 fe ff ff 	lea    -0x198(%rbp),%rdi
  4335fa:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
  433601:	48 89 04 24          	mov    %rax,(%rsp)
  433605:	e8 e6 a5 ff ff       	callq  42dbf0 <mbedtls_pem_read_buffer>
  43360a:	89 85 94 fe ff ff    	mov    %eax,-0x16c(%rbp)
  433610:	83 bd 94 fe ff ff 00 	cmpl   $0x0,-0x16c(%rbp)
  433617:	0f 85 4d 03 00 00    	jne    43396a <mbedtls_pk_parse_key+0x43a>
  43361d:	c7 85 f4 fe ff ff 01 	movl   $0x1,-0x10c(%rbp)
  433624:	00 00 00 
  433627:	83 bd f4 fe ff ff 01 	cmpl   $0x1,-0x10c(%rbp)
  43362e:	75 13                	jne    433643 <mbedtls_pk_parse_key+0x113>
  433630:	48 b8 00 33 45 00 00 	movabs $0x453300,%rax
  433637:	00 00 00 
  43363a:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
  433641:	eb 0b                	jmp    43364e <mbedtls_pk_parse_key+0x11e>
  433643:	48 c7 85 f8 fe ff ff 	movq   $0x0,-0x108(%rbp)
  43364a:	00 00 00 00 
  43364e:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  433655:	48 89 85 88 fe ff ff 	mov    %rax,-0x178(%rbp)
  43365c:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  433663:	48 8b 8d 88 fe ff ff 	mov    -0x178(%rbp),%rcx
  43366a:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
  433671:	48 89 8d 00 ff ff ff 	mov    %rcx,-0x100(%rbp)
  433678:	48 83 bd 00 ff ff ff 	cmpq   $0x0,-0x100(%rbp)
  43367f:	00 
  433680:	74 15                	je     433697 <mbedtls_pk_parse_key+0x167>
  433682:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
  433689:	48 89 c7             	mov    %rax,%rdi
  43368c:	e8 b7 2a 01 00       	callq  446148 <getDecryptedValueQWord>
  433691:	48 83 f8 00          	cmp    $0x0,%rax
  433695:	74 0c                	je     4336a3 <mbedtls_pk_parse_key+0x173>
  433697:	c7 85 14 ff ff ff 80 	movl   $0xffffc180,-0xec(%rbp)
  43369e:	c1 ff ff 
  4336a1:	eb 78                	jmp    43371b <mbedtls_pk_parse_key+0x1eb>
  4336a3:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
  4336aa:	48 05 90 00 00 00    	add    $0x90,%rax
  4336b0:	48 89 c7             	mov    %rax,%rdi
  4336b3:	e8 90 2a 01 00       	callq  446148 <getDecryptedValueQWord>
  4336b8:	ff d0                	callq  *%rax
  4336ba:	48 8b bd 08 ff ff ff 	mov    -0xf8(%rbp),%rdi
  4336c1:	48 83 c7 08          	add    $0x8,%rdi
  4336c5:	48 89 c6             	mov    %rax,%rsi
  4336c8:	48 89 85 60 fe ff ff 	mov    %rax,-0x1a0(%rbp)
  4336cf:	e8 28 26 01 00       	callq  445cfc <setEncryptedValueQWord>
  4336d4:	48 8b b5 60 fe ff ff 	mov    -0x1a0(%rbp),%rsi
  4336db:	48 83 fe 00          	cmp    $0x0,%rsi
  4336df:	48 89 85 58 fe ff ff 	mov    %rax,-0x1a8(%rbp)
  4336e6:	75 0c                	jne    4336f4 <mbedtls_pk_parse_key+0x1c4>
  4336e8:	c7 85 14 ff ff ff 80 	movl   $0xffffc080,-0xec(%rbp)
  4336ef:	c0 ff ff 
  4336f2:	eb 27                	jmp    43371b <mbedtls_pk_parse_key+0x1eb>
  4336f4:	48 8b b5 00 ff ff ff 	mov    -0x100(%rbp),%rsi
  4336fb:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
  433702:	48 89 c7             	mov    %rax,%rdi
  433705:	e8 f2 25 01 00       	callq  445cfc <setEncryptedValueQWord>
  43370a:	c7 85 14 ff ff ff 00 	movl   $0x0,-0xec(%rbp)
  433711:	00 00 00 
  433714:	48 89 85 50 fe ff ff 	mov    %rax,-0x1b0(%rbp)
  43371b:	8b 85 14 ff ff ff    	mov    -0xec(%rbp),%eax
  433721:	89 85 94 fe ff ff    	mov    %eax,-0x16c(%rbp)
  433727:	83 f8 00             	cmp    $0x0,%eax
  43372a:	75 74                	jne    4337a0 <mbedtls_pk_parse_key+0x270>
  43372c:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  433733:	48 89 c1             	mov    %rax,%rcx
  433736:	48 89 cf             	mov    %rcx,%rdi
  433739:	48 89 85 48 fe ff ff 	mov    %rax,-0x1b8(%rbp)
  433740:	e8 03 2a 01 00       	callq  446148 <getDecryptedValueQWord>
  433745:	48 8b 8d 48 fe ff ff 	mov    -0x1b8(%rbp),%rcx
  43374c:	48 83 c1 08          	add    $0x8,%rcx
  433750:	48 89 cf             	mov    %rcx,%rdi
  433753:	48 89 85 40 fe ff ff 	mov    %rax,-0x1c0(%rbp)
  43375a:	e8 e9 29 01 00       	callq  446148 <getDecryptedValueQWord>
  43375f:	48 8b 8d 40 fe ff ff 	mov    -0x1c0(%rbp),%rcx
  433766:	48 89 8d 18 ff ff ff 	mov    %rcx,-0xe8(%rbp)
  43376d:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
  433774:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
  43377b:	48 8b b5 68 fe ff ff 	mov    -0x198(%rbp),%rsi
  433782:	48 8b 95 70 fe ff ff 	mov    -0x190(%rbp),%rdx
  433789:	48 89 c7             	mov    %rax,%rdi
  43378c:	e8 ef 08 00 00       	callq  434080 <pk_parse_key_pkcs1_der>
  433791:	89 85 94 fe ff ff    	mov    %eax,-0x16c(%rbp)
  433797:	83 f8 00             	cmp    $0x0,%eax
  43379a:	0f 84 01 01 00 00    	je     4338a1 <mbedtls_pk_parse_key+0x371>
  4337a0:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  4337a7:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
  4337ae:	48 83 bd 28 ff ff ff 	cmpq   $0x0,-0xd8(%rbp)
  4337b5:	00 
  4337b6:	75 05                	jne    4337bd <mbedtls_pk_parse_key+0x28d>
  4337b8:	e9 e4 00 00 00       	jmpq   4338a1 <mbedtls_pk_parse_key+0x371>
  4337bd:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4337c4:	48 89 c7             	mov    %rax,%rdi
  4337c7:	e8 7c 29 01 00       	callq  446148 <getDecryptedValueQWord>
  4337cc:	48 83 f8 00          	cmp    $0x0,%rax
  4337d0:	74 40                	je     433812 <mbedtls_pk_parse_key+0x2e2>
  4337d2:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4337d9:	48 89 c7             	mov    %rax,%rdi
  4337dc:	e8 67 29 01 00       	callq  446148 <getDecryptedValueQWord>
  4337e1:	48 05 a0 00 00 00    	add    $0xa0,%rax
  4337e7:	48 89 c7             	mov    %rax,%rdi
  4337ea:	e8 59 29 01 00       	callq  446148 <getDecryptedValueQWord>
  4337ef:	48 8b bd 28 ff ff ff 	mov    -0xd8(%rbp),%rdi
  4337f6:	48 83 c7 08          	add    $0x8,%rdi
  4337fa:	48 89 85 38 fe ff ff 	mov    %rax,-0x1c8(%rbp)
  433801:	e8 42 29 01 00       	callq  446148 <getDecryptedValueQWord>
  433806:	48 89 c7             	mov    %rax,%rdi
  433809:	48 8b 85 38 fe ff ff 	mov    -0x1c8(%rbp),%rax
  433810:	ff d0                	callq  *%rax
  433812:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  433819:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
  433820:	48 c7 85 30 ff ff ff 	movq   $0x10,-0xd0(%rbp)
  433827:	10 00 00 00 
  43382b:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  433832:	00 
  433833:	48 8b 8d 38 ff ff ff 	mov    -0xc8(%rbp),%rcx
  43383a:	48 8b 95 30 ff ff ff 	mov    -0xd0(%rbp),%rdx
  433841:	48 89 85 30 fe ff ff 	mov    %rax,-0x1d0(%rbp)
  433848:	48 89 8d 28 fe ff ff 	mov    %rcx,-0x1d8(%rbp)
  43384f:	48 89 95 20 fe ff ff 	mov    %rdx,-0x1e0(%rbp)
  433856:	e8 fb 20 01 00       	callq  445956 <writeback_cache>
  43385b:	48 8b bd 28 fe ff ff 	mov    -0x1d8(%rbp),%rdi
  433862:	48 8b b5 20 fe ff ff 	mov    -0x1e0(%rbp),%rsi
  433869:	e8 77 2e 01 00       	callq  4466e5 <decryptArrayForLibCall>
  43386e:	31 f6                	xor    %esi,%esi
  433870:	48 8b bd 28 fe ff ff 	mov    -0x1d8(%rbp),%rdi
  433877:	48 8b 95 20 fe ff ff 	mov    -0x1e0(%rbp),%rdx
  43387e:	48 8b 85 30 fe ff ff 	mov    -0x1d0(%rbp),%rax
  433885:	ff d0                	callq  *%rax
  433887:	48 8b bd 28 fe ff ff 	mov    -0x1d8(%rbp),%rdi
  43388e:	48 8b b5 20 fe ff ff 	mov    -0x1e0(%rbp),%rsi
  433895:	48 89 85 18 fe ff ff 	mov    %rax,-0x1e8(%rbp)
  43389c:	e8 b5 2b 01 00       	callq  446456 <encryptArrayForLibCall>
  4338a1:	48 8d 85 68 fe ff ff 	lea    -0x198(%rbp),%rax
  4338a8:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
  4338af:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
  4338b6:	48 83 38 00          	cmpq   $0x0,(%rax)
  4338ba:	74 53                	je     43390f <mbedtls_pk_parse_key+0x3df>
  4338bc:	31 f6                	xor    %esi,%esi
  4338be:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
  4338c5:	48 8b 00             	mov    (%rax),%rax
  4338c8:	48 8b 8d 40 ff ff ff 	mov    -0xc0(%rbp),%rcx
  4338cf:	48 8b 49 08          	mov    0x8(%rcx),%rcx
  4338d3:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
  4338da:	48 89 8d 48 ff ff ff 	mov    %rcx,-0xb8(%rbp)
  4338e1:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  4338e8:	00 
  4338e9:	48 8b bd 50 ff ff ff 	mov    -0xb0(%rbp),%rdi
  4338f0:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
  4338f7:	ff d0                	callq  *%rax
  4338f9:	48 8b 8d 40 ff ff ff 	mov    -0xc0(%rbp),%rcx
  433900:	48 8b 39             	mov    (%rcx),%rdi
  433903:	48 89 85 10 fe ff ff 	mov    %rax,-0x1f0(%rbp)
  43390a:	e8 d1 d7 fc ff       	callq  4010e0 <free@plt>
  43390f:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
  433916:	48 8b 78 10          	mov    0x10(%rax),%rdi
  43391a:	e8 c1 d7 fc ff       	callq  4010e0 <free@plt>
  43391f:	31 f6                	xor    %esi,%esi
  433921:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
  433928:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
  43392f:	48 c7 85 58 ff ff ff 	movq   $0x18,-0xa8(%rbp)
  433936:	18 00 00 00 
  43393a:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  433941:	00 
  433942:	48 8b bd 60 ff ff ff 	mov    -0xa0(%rbp),%rdi
  433949:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  433950:	ff d0                	callq  *%rax
  433952:	8b b5 94 fe ff ff    	mov    -0x16c(%rbp),%esi
  433958:	89 b5 c4 fe ff ff    	mov    %esi,-0x13c(%rbp)
  43395e:	48 89 85 08 fe ff ff 	mov    %rax,-0x1f8(%rbp)
  433965:	e9 c2 06 00 00       	jmpq   43402c <mbedtls_pk_parse_key+0xafc>
  43396a:	81 bd 94 fe ff ff 80 	cmpl   $0xffffec80,-0x16c(%rbp)
  433971:	ec ff ff 
  433974:	75 0f                	jne    433985 <mbedtls_pk_parse_key+0x455>
  433976:	c7 85 c4 fe ff ff 80 	movl   $0xffffc480,-0x13c(%rbp)
  43397d:	c4 ff ff 
  433980:	e9 a7 06 00 00       	jmpq   43402c <mbedtls_pk_parse_key+0xafc>
  433985:	81 bd 94 fe ff ff 00 	cmpl   $0xffffed00,-0x16c(%rbp)
  43398c:	ed ff ff 
  43398f:	75 0f                	jne    4339a0 <mbedtls_pk_parse_key+0x470>
  433991:	c7 85 c4 fe ff ff 00 	movl   $0xffffc400,-0x13c(%rbp)
  433998:	c4 ff ff 
  43399b:	e9 8c 06 00 00       	jmpq   43402c <mbedtls_pk_parse_key+0xafc>
  4339a0:	81 bd 94 fe ff ff 80 	cmpl   $0xffffef80,-0x16c(%rbp)
  4339a7:	ef ff ff 
  4339aa:	74 11                	je     4339bd <mbedtls_pk_parse_key+0x48d>
  4339ac:	8b 85 94 fe ff ff    	mov    -0x16c(%rbp),%eax
  4339b2:	89 85 c4 fe ff ff    	mov    %eax,-0x13c(%rbp)
  4339b8:	e9 6f 06 00 00       	jmpq   43402c <mbedtls_pk_parse_key+0xafc>
  4339bd:	eb 00                	jmp    4339bf <mbedtls_pk_parse_key+0x48f>
  4339bf:	eb 00                	jmp    4339c1 <mbedtls_pk_parse_key+0x491>
  4339c1:	eb 00                	jmp    4339c3 <mbedtls_pk_parse_key+0x493>
  4339c3:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
  4339ca:	48 8b 8d a8 fe ff ff 	mov    -0x158(%rbp),%rcx
  4339d1:	48 83 e9 01          	sub    $0x1,%rcx
  4339d5:	0f b6 14 08          	movzbl (%rax,%rcx,1),%edx
  4339d9:	83 fa 00             	cmp    $0x0,%edx
  4339dc:	74 0c                	je     4339ea <mbedtls_pk_parse_key+0x4ba>
  4339de:	c7 85 94 fe ff ff 80 	movl   $0xffffef80,-0x16c(%rbp)
  4339e5:	ef ff ff 
  4339e8:	eb 65                	jmp    433a4f <mbedtls_pk_parse_key+0x51f>
  4339ea:	31 c0                	xor    %eax,%eax
  4339ec:	89 c1                	mov    %eax,%ecx
  4339ee:	48 ba 80 8c 44 00 00 	movabs $0x448c80,%rdx
  4339f5:	00 00 00 
  4339f8:	48 be 60 8c 44 00 00 	movabs $0x448c60,%rsi
  4339ff:	00 00 00 
  433a02:	48 8b bd b0 fe ff ff 	mov    -0x150(%rbp),%rdi
  433a09:	4c 8d 85 68 fe ff ff 	lea    -0x198(%rbp),%r8
  433a10:	48 89 bd 00 fe ff ff 	mov    %rdi,-0x200(%rbp)
  433a17:	4c 89 c7             	mov    %r8,%rdi
  433a1a:	4c 8b 85 00 fe ff ff 	mov    -0x200(%rbp),%r8
  433a21:	48 89 8d f8 fd ff ff 	mov    %rcx,-0x208(%rbp)
  433a28:	4c 89 c1             	mov    %r8,%rcx
  433a2b:	4c 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%r8
  433a32:	4c 8b 8d f8 fd ff ff 	mov    -0x208(%rbp),%r9
  433a39:	4c 8d 95 80 fe ff ff 	lea    -0x180(%rbp),%r10
  433a40:	4c 89 14 24          	mov    %r10,(%rsp)
  433a44:	e8 a7 a1 ff ff       	callq  42dbf0 <mbedtls_pem_read_buffer>
  433a49:	89 85 94 fe ff ff    	mov    %eax,-0x16c(%rbp)
  433a4f:	83 bd 94 fe ff ff 00 	cmpl   $0x0,-0x16c(%rbp)
  433a56:	0f 85 c6 01 00 00    	jne    433c22 <mbedtls_pk_parse_key+0x6f2>
  433a5c:	48 8b bd b8 fe ff ff 	mov    -0x148(%rbp),%rdi
  433a63:	48 8b b5 68 fe ff ff 	mov    -0x198(%rbp),%rsi
  433a6a:	48 8b 95 70 fe ff ff 	mov    -0x190(%rbp),%rdx
  433a71:	e8 fa 13 00 00       	callq  434e70 <pk_parse_key_pkcs8_unencrypted_der>
  433a76:	89 85 94 fe ff ff    	mov    %eax,-0x16c(%rbp)
  433a7c:	83 f8 00             	cmp    $0x0,%eax
  433a7f:	0f 84 01 01 00 00    	je     433b86 <mbedtls_pk_parse_key+0x656>
  433a85:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  433a8c:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
  433a93:	48 83 bd 68 ff ff ff 	cmpq   $0x0,-0x98(%rbp)
  433a9a:	00 
  433a9b:	75 05                	jne    433aa2 <mbedtls_pk_parse_key+0x572>
  433a9d:	e9 e4 00 00 00       	jmpq   433b86 <mbedtls_pk_parse_key+0x656>
  433aa2:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  433aa9:	48 89 c7             	mov    %rax,%rdi
  433aac:	e8 97 26 01 00       	callq  446148 <getDecryptedValueQWord>
  433ab1:	48 83 f8 00          	cmp    $0x0,%rax
  433ab5:	74 40                	je     433af7 <mbedtls_pk_parse_key+0x5c7>
  433ab7:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  433abe:	48 89 c7             	mov    %rax,%rdi
  433ac1:	e8 82 26 01 00       	callq  446148 <getDecryptedValueQWord>
  433ac6:	48 05 a0 00 00 00    	add    $0xa0,%rax
  433acc:	48 89 c7             	mov    %rax,%rdi
  433acf:	e8 74 26 01 00       	callq  446148 <getDecryptedValueQWord>
  433ad4:	48 8b bd 68 ff ff ff 	mov    -0x98(%rbp),%rdi
  433adb:	48 83 c7 08          	add    $0x8,%rdi
  433adf:	48 89 85 f0 fd ff ff 	mov    %rax,-0x210(%rbp)
  433ae6:	e8 5d 26 01 00       	callq  446148 <getDecryptedValueQWord>
  433aeb:	48 89 c7             	mov    %rax,%rdi
  433aee:	48 8b 85 f0 fd ff ff 	mov    -0x210(%rbp),%rax
  433af5:	ff d0                	callq  *%rax
  433af7:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  433afe:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  433b05:	48 c7 85 70 ff ff ff 	movq   $0x10,-0x90(%rbp)
  433b0c:	10 00 00 00 
  433b10:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  433b17:	00 
  433b18:	48 8b 8d 78 ff ff ff 	mov    -0x88(%rbp),%rcx
  433b1f:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
  433b26:	48 89 85 e8 fd ff ff 	mov    %rax,-0x218(%rbp)
  433b2d:	48 89 8d e0 fd ff ff 	mov    %rcx,-0x220(%rbp)
  433b34:	48 89 95 d8 fd ff ff 	mov    %rdx,-0x228(%rbp)
  433b3b:	e8 16 1e 01 00       	callq  445956 <writeback_cache>
  433b40:	48 8b bd e0 fd ff ff 	mov    -0x220(%rbp),%rdi
  433b47:	48 8b b5 d8 fd ff ff 	mov    -0x228(%rbp),%rsi
  433b4e:	e8 92 2b 01 00       	callq  4466e5 <decryptArrayForLibCall>
  433b53:	31 f6                	xor    %esi,%esi
  433b55:	48 8b bd e0 fd ff ff 	mov    -0x220(%rbp),%rdi
  433b5c:	48 8b 95 d8 fd ff ff 	mov    -0x228(%rbp),%rdx
  433b63:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
  433b6a:	ff d0                	callq  *%rax
  433b6c:	48 8b bd e0 fd ff ff 	mov    -0x220(%rbp),%rdi
  433b73:	48 8b b5 d8 fd ff ff 	mov    -0x228(%rbp),%rsi
  433b7a:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
  433b81:	e8 d0 28 01 00       	callq  446456 <encryptArrayForLibCall>
  433b86:	48 8d 85 68 fe ff ff 	lea    -0x198(%rbp),%rax
  433b8d:	48 89 45 80          	mov    %rax,-0x80(%rbp)
  433b91:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  433b95:	48 83 38 00          	cmpq   $0x0,(%rax)
  433b99:	74 3e                	je     433bd9 <mbedtls_pk_parse_key+0x6a9>
  433b9b:	31 f6                	xor    %esi,%esi
  433b9d:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  433ba1:	48 8b 00             	mov    (%rax),%rax
  433ba4:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
  433ba8:	48 8b 49 08          	mov    0x8(%rcx),%rcx
  433bac:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  433bb0:	48 89 4d 88          	mov    %rcx,-0x78(%rbp)
  433bb4:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  433bbb:	00 
  433bbc:	48 8b 7d 90          	mov    -0x70(%rbp),%rdi
  433bc0:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
  433bc4:	ff d0                	callq  *%rax
  433bc6:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
  433bca:	48 8b 39             	mov    (%rcx),%rdi
  433bcd:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
  433bd4:	e8 07 d5 fc ff       	callq  4010e0 <free@plt>
  433bd9:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  433bdd:	48 8b 78 10          	mov    0x10(%rax),%rdi
  433be1:	e8 fa d4 fc ff       	callq  4010e0 <free@plt>
  433be6:	31 f6                	xor    %esi,%esi
  433be8:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  433bec:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  433bf0:	48 c7 45 98 18 00 00 	movq   $0x18,-0x68(%rbp)
  433bf7:	00 
  433bf8:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  433bff:	00 
  433c00:	48 8b 7d a0          	mov    -0x60(%rbp),%rdi
  433c04:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  433c08:	ff d0                	callq  *%rax
  433c0a:	8b b5 94 fe ff ff    	mov    -0x16c(%rbp),%esi
  433c10:	89 b5 c4 fe ff ff    	mov    %esi,-0x13c(%rbp)
  433c16:	48 89 85 c0 fd ff ff 	mov    %rax,-0x240(%rbp)
  433c1d:	e9 0a 04 00 00       	jmpq   43402c <mbedtls_pk_parse_key+0xafc>
  433c22:	81 bd 94 fe ff ff 80 	cmpl   $0xffffef80,-0x16c(%rbp)
  433c29:	ef ff ff 
  433c2c:	74 11                	je     433c3f <mbedtls_pk_parse_key+0x70f>
  433c2e:	8b 85 94 fe ff ff    	mov    -0x16c(%rbp),%eax
  433c34:	89 85 c4 fe ff ff    	mov    %eax,-0x13c(%rbp)
  433c3a:	e9 ed 03 00 00       	jmpq   43402c <mbedtls_pk_parse_key+0xafc>
  433c3f:	eb 00                	jmp    433c41 <mbedtls_pk_parse_key+0x711>
  433c41:	48 8b bd b8 fe ff ff 	mov    -0x148(%rbp),%rdi
  433c48:	48 8b b5 b0 fe ff ff 	mov    -0x150(%rbp),%rsi
  433c4f:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
  433c56:	e8 15 12 00 00       	callq  434e70 <pk_parse_key_pkcs8_unencrypted_der>
  433c5b:	89 85 94 fe ff ff    	mov    %eax,-0x16c(%rbp)
  433c61:	83 f8 00             	cmp    $0x0,%eax
  433c64:	75 0f                	jne    433c75 <mbedtls_pk_parse_key+0x745>
  433c66:	c7 85 c4 fe ff ff 00 	movl   $0x0,-0x13c(%rbp)
  433c6d:	00 00 00 
  433c70:	e9 b7 03 00 00       	jmpq   43402c <mbedtls_pk_parse_key+0xafc>
  433c75:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  433c7c:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  433c80:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
  433c85:	75 05                	jne    433c8c <mbedtls_pk_parse_key+0x75c>
  433c87:	e9 cc 00 00 00       	jmpq   433d58 <mbedtls_pk_parse_key+0x828>
  433c8c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  433c90:	48 89 c7             	mov    %rax,%rdi
  433c93:	e8 b0 24 01 00       	callq  446148 <getDecryptedValueQWord>
  433c98:	48 83 f8 00          	cmp    $0x0,%rax
  433c9c:	74 3a                	je     433cd8 <mbedtls_pk_parse_key+0x7a8>
  433c9e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  433ca2:	48 89 c7             	mov    %rax,%rdi
  433ca5:	e8 9e 24 01 00       	callq  446148 <getDecryptedValueQWord>
  433caa:	48 05 a0 00 00 00    	add    $0xa0,%rax
  433cb0:	48 89 c7             	mov    %rax,%rdi
  433cb3:	e8 90 24 01 00       	callq  446148 <getDecryptedValueQWord>
  433cb8:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
  433cbc:	48 83 c7 08          	add    $0x8,%rdi
  433cc0:	48 89 85 b8 fd ff ff 	mov    %rax,-0x248(%rbp)
  433cc7:	e8 7c 24 01 00       	callq  446148 <getDecryptedValueQWord>
  433ccc:	48 89 c7             	mov    %rax,%rdi
  433ccf:	48 8b 85 b8 fd ff ff 	mov    -0x248(%rbp),%rax
  433cd6:	ff d0                	callq  *%rax
  433cd8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  433cdc:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  433ce0:	48 c7 45 b0 10 00 00 	movq   $0x10,-0x50(%rbp)
  433ce7:	00 
  433ce8:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  433cef:	00 
  433cf0:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  433cf4:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
  433cf8:	48 89 85 b0 fd ff ff 	mov    %rax,-0x250(%rbp)
  433cff:	48 89 8d a8 fd ff ff 	mov    %rcx,-0x258(%rbp)
  433d06:	48 89 95 a0 fd ff ff 	mov    %rdx,-0x260(%rbp)
  433d0d:	e8 44 1c 01 00       	callq  445956 <writeback_cache>
  433d12:	48 8b bd a8 fd ff ff 	mov    -0x258(%rbp),%rdi
  433d19:	48 8b b5 a0 fd ff ff 	mov    -0x260(%rbp),%rsi
  433d20:	e8 c0 29 01 00       	callq  4466e5 <decryptArrayForLibCall>
  433d25:	31 f6                	xor    %esi,%esi
  433d27:	48 8b bd a8 fd ff ff 	mov    -0x258(%rbp),%rdi
  433d2e:	48 8b 95 a0 fd ff ff 	mov    -0x260(%rbp),%rdx
  433d35:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
  433d3c:	ff d0                	callq  *%rax
  433d3e:	48 8b bd a8 fd ff ff 	mov    -0x258(%rbp),%rdi
  433d45:	48 8b b5 a0 fd ff ff 	mov    -0x260(%rbp),%rsi
  433d4c:	48 89 85 98 fd ff ff 	mov    %rax,-0x268(%rbp)
  433d53:	e8 fe 26 01 00       	callq  446456 <encryptArrayForLibCall>
  433d58:	31 c0                	xor    %eax,%eax
  433d5a:	89 c6                	mov    %eax,%esi
  433d5c:	48 8b 8d b8 fe ff ff 	mov    -0x148(%rbp),%rcx
  433d63:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
  433d67:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  433d6b:	48 89 cf             	mov    %rcx,%rdi
  433d6e:	e8 89 1f 01 00       	callq  445cfc <setEncryptedValueQWord>
  433d73:	31 d2                	xor    %edx,%edx
  433d75:	89 d6                	mov    %edx,%esi
  433d77:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  433d7b:	48 83 c1 08          	add    $0x8,%rcx
  433d7f:	48 89 cf             	mov    %rcx,%rdi
  433d82:	48 89 85 90 fd ff ff 	mov    %rax,-0x270(%rbp)
  433d89:	e8 6e 1f 01 00       	callq  445cfc <setEncryptedValueQWord>
  433d8e:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%rbp)
  433d95:	83 7d cc 01          	cmpl   $0x1,-0x34(%rbp)
  433d99:	48 89 85 88 fd ff ff 	mov    %rax,-0x278(%rbp)
  433da0:	75 10                	jne    433db2 <mbedtls_pk_parse_key+0x882>
  433da2:	48 b8 00 33 45 00 00 	movabs $0x453300,%rax
  433da9:	00 00 00 
  433dac:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  433db0:	eb 08                	jmp    433dba <mbedtls_pk_parse_key+0x88a>
  433db2:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
  433db9:	00 
  433dba:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  433dbe:	48 89 85 88 fe ff ff 	mov    %rax,-0x178(%rbp)
  433dc5:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  433dcc:	48 8b 8d 88 fe ff ff 	mov    -0x178(%rbp),%rcx
  433dd3:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  433dd7:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  433ddb:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  433de0:	74 12                	je     433df4 <mbedtls_pk_parse_key+0x8c4>
  433de2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  433de6:	48 89 c7             	mov    %rax,%rdi
  433de9:	e8 5a 23 01 00       	callq  446148 <getDecryptedValueQWord>
  433dee:	48 83 f8 00          	cmp    $0x0,%rax
  433df2:	74 09                	je     433dfd <mbedtls_pk_parse_key+0x8cd>
  433df4:	c7 45 ec 80 c1 ff ff 	movl   $0xffffc180,-0x14(%rbp)
  433dfb:	eb 66                	jmp    433e63 <mbedtls_pk_parse_key+0x933>
  433dfd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  433e01:	48 05 90 00 00 00    	add    $0x90,%rax
  433e07:	48 89 c7             	mov    %rax,%rdi
  433e0a:	e8 39 23 01 00       	callq  446148 <getDecryptedValueQWord>
  433e0f:	ff d0                	callq  *%rax
  433e11:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  433e15:	48 83 c7 08          	add    $0x8,%rdi
  433e19:	48 89 c6             	mov    %rax,%rsi
  433e1c:	48 89 85 80 fd ff ff 	mov    %rax,-0x280(%rbp)
  433e23:	e8 d4 1e 01 00       	callq  445cfc <setEncryptedValueQWord>
  433e28:	48 8b b5 80 fd ff ff 	mov    -0x280(%rbp),%rsi
  433e2f:	48 83 fe 00          	cmp    $0x0,%rsi
  433e33:	48 89 85 78 fd ff ff 	mov    %rax,-0x288(%rbp)
  433e3a:	75 09                	jne    433e45 <mbedtls_pk_parse_key+0x915>
  433e3c:	c7 45 ec 80 c0 ff ff 	movl   $0xffffc080,-0x14(%rbp)
  433e43:	eb 1e                	jmp    433e63 <mbedtls_pk_parse_key+0x933>
  433e45:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  433e49:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  433e4d:	48 89 c7             	mov    %rax,%rdi
  433e50:	e8 a7 1e 01 00       	callq  445cfc <setEncryptedValueQWord>
  433e55:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  433e5c:	48 89 85 70 fd ff ff 	mov    %rax,-0x290(%rbp)
  433e63:	8b 45 ec             	mov    -0x14(%rbp),%eax
  433e66:	83 f8 00             	cmp    $0x0,%eax
  433e69:	75 70                	jne    433edb <mbedtls_pk_parse_key+0x9ab>
  433e6b:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  433e72:	48 89 c1             	mov    %rax,%rcx
  433e75:	48 89 cf             	mov    %rcx,%rdi
  433e78:	48 89 85 68 fd ff ff 	mov    %rax,-0x298(%rbp)
  433e7f:	e8 c4 22 01 00       	callq  446148 <getDecryptedValueQWord>
  433e84:	48 8b 8d 68 fd ff ff 	mov    -0x298(%rbp),%rcx
  433e8b:	48 83 c1 08          	add    $0x8,%rcx
  433e8f:	48 89 cf             	mov    %rcx,%rdi
  433e92:	48 89 85 60 fd ff ff 	mov    %rax,-0x2a0(%rbp)
  433e99:	e8 aa 22 01 00       	callq  446148 <getDecryptedValueQWord>
  433e9e:	48 8b 8d 60 fd ff ff 	mov    -0x2a0(%rbp),%rcx
  433ea5:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
  433ea9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  433ead:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  433eb1:	48 8b b5 b0 fe ff ff 	mov    -0x150(%rbp),%rsi
  433eb8:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
  433ebf:	48 89 c7             	mov    %rax,%rdi
  433ec2:	e8 b9 01 00 00       	callq  434080 <pk_parse_key_pkcs1_der>
  433ec7:	83 f8 00             	cmp    $0x0,%eax
  433eca:	75 0f                	jne    433edb <mbedtls_pk_parse_key+0x9ab>
  433ecc:	c7 85 c4 fe ff ff 00 	movl   $0x0,-0x13c(%rbp)
  433ed3:	00 00 00 
  433ed6:	e9 51 01 00 00       	jmpq   43402c <mbedtls_pk_parse_key+0xafc>
  433edb:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  433ee2:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
  433ee9:	48 83 bd d8 fe ff ff 	cmpq   $0x0,-0x128(%rbp)
  433ef0:	00 
  433ef1:	75 05                	jne    433ef8 <mbedtls_pk_parse_key+0x9c8>
  433ef3:	e9 e4 00 00 00       	jmpq   433fdc <mbedtls_pk_parse_key+0xaac>
  433ef8:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
  433eff:	48 89 c7             	mov    %rax,%rdi
  433f02:	e8 41 22 01 00       	callq  446148 <getDecryptedValueQWord>
  433f07:	48 83 f8 00          	cmp    $0x0,%rax
  433f0b:	74 40                	je     433f4d <mbedtls_pk_parse_key+0xa1d>
  433f0d:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
  433f14:	48 89 c7             	mov    %rax,%rdi
  433f17:	e8 2c 22 01 00       	callq  446148 <getDecryptedValueQWord>
  433f1c:	48 05 a0 00 00 00    	add    $0xa0,%rax
  433f22:	48 89 c7             	mov    %rax,%rdi
  433f25:	e8 1e 22 01 00       	callq  446148 <getDecryptedValueQWord>
  433f2a:	48 8b bd d8 fe ff ff 	mov    -0x128(%rbp),%rdi
  433f31:	48 83 c7 08          	add    $0x8,%rdi
  433f35:	48 89 85 58 fd ff ff 	mov    %rax,-0x2a8(%rbp)
  433f3c:	e8 07 22 01 00       	callq  446148 <getDecryptedValueQWord>
  433f41:	48 89 c7             	mov    %rax,%rdi
  433f44:	48 8b 85 58 fd ff ff 	mov    -0x2a8(%rbp),%rax
  433f4b:	ff d0                	callq  *%rax
  433f4d:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
  433f54:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
  433f5b:	48 c7 85 e0 fe ff ff 	movq   $0x10,-0x120(%rbp)
  433f62:	10 00 00 00 
  433f66:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  433f6d:	00 
  433f6e:	48 8b 8d e8 fe ff ff 	mov    -0x118(%rbp),%rcx
  433f75:	48 8b 95 e0 fe ff ff 	mov    -0x120(%rbp),%rdx
  433f7c:	48 89 85 50 fd ff ff 	mov    %rax,-0x2b0(%rbp)
  433f83:	48 89 8d 48 fd ff ff 	mov    %rcx,-0x2b8(%rbp)
  433f8a:	48 89 95 40 fd ff ff 	mov    %rdx,-0x2c0(%rbp)
  433f91:	e8 c0 19 01 00       	callq  445956 <writeback_cache>
  433f96:	48 8b bd 48 fd ff ff 	mov    -0x2b8(%rbp),%rdi
  433f9d:	48 8b b5 40 fd ff ff 	mov    -0x2c0(%rbp),%rsi
  433fa4:	e8 3c 27 01 00       	callq  4466e5 <decryptArrayForLibCall>
  433fa9:	31 f6                	xor    %esi,%esi
  433fab:	48 8b bd 48 fd ff ff 	mov    -0x2b8(%rbp),%rdi
  433fb2:	48 8b 95 40 fd ff ff 	mov    -0x2c0(%rbp),%rdx
  433fb9:	48 8b 85 50 fd ff ff 	mov    -0x2b0(%rbp),%rax
  433fc0:	ff d0                	callq  *%rax
  433fc2:	48 8b bd 48 fd ff ff 	mov    -0x2b8(%rbp),%rdi
  433fc9:	48 8b b5 40 fd ff ff 	mov    -0x2c0(%rbp),%rsi
  433fd0:	48 89 85 38 fd ff ff 	mov    %rax,-0x2c8(%rbp)
  433fd7:	e8 7a 24 01 00       	callq  446456 <encryptArrayForLibCall>
  433fdc:	31 c0                	xor    %eax,%eax
  433fde:	89 c6                	mov    %eax,%esi
  433fe0:	48 8b 8d b8 fe ff ff 	mov    -0x148(%rbp),%rcx
  433fe7:	48 89 8d d0 fe ff ff 	mov    %rcx,-0x130(%rbp)
  433fee:	48 8b 8d d0 fe ff ff 	mov    -0x130(%rbp),%rcx
  433ff5:	48 89 cf             	mov    %rcx,%rdi
  433ff8:	e8 ff 1c 01 00       	callq  445cfc <setEncryptedValueQWord>
  433ffd:	31 d2                	xor    %edx,%edx
  433fff:	89 d6                	mov    %edx,%esi
  434001:	48 8b 8d d0 fe ff ff 	mov    -0x130(%rbp),%rcx
  434008:	48 83 c1 08          	add    $0x8,%rcx
  43400c:	48 89 cf             	mov    %rcx,%rdi
  43400f:	48 89 85 30 fd ff ff 	mov    %rax,-0x2d0(%rbp)
  434016:	e8 e1 1c 01 00       	callq  445cfc <setEncryptedValueQWord>
  43401b:	c7 85 c4 fe ff ff 00 	movl   $0xffffc300,-0x13c(%rbp)
  434022:	c3 ff ff 
  434025:	48 89 85 28 fd ff ff 	mov    %rax,-0x2d8(%rbp)
  43402c:	8b 85 c4 fe ff ff    	mov    -0x13c(%rbp),%eax
  434032:	89 85 24 fd ff ff    	mov    %eax,-0x2dc(%rbp)
  434038:	e8 19 19 01 00       	callq  445956 <writeback_cache>
  43403d:	8b 85 24 fd ff ff    	mov    -0x2dc(%rbp),%eax
  434043:	48 81 c4 f0 02 00 00 	add    $0x2f0,%rsp
  43404a:	5d                   	pop    %rbp
  43404b:	c3                   	retq   
  43404c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000434050 <mbedtls_pk_rsa>:
  434050:	55                   	push   %rbp
  434051:	48 89 e5             	mov    %rsp,%rbp
  434054:	48 83 ec 20          	sub    $0x20,%rsp
  434058:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  43405c:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)
  434060:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  434064:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  434068:	e8 e9 18 01 00       	callq  445956 <writeback_cache>
  43406d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  434071:	48 83 c4 20          	add    $0x20,%rsp
  434075:	5d                   	pop    %rbp
  434076:	c3                   	retq   
  434077:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  43407e:	00 00 

0000000000434080 <pk_parse_key_pkcs1_der>:
  434080:	55                   	push   %rbp
  434081:	48 89 e5             	mov    %rsp,%rbp
  434084:	48 81 ec 50 03 00 00 	sub    $0x350,%rsp
  43408b:	48 89 bd 00 fe ff ff 	mov    %rdi,-0x200(%rbp)
  434092:	48 89 b5 f8 fd ff ff 	mov    %rsi,-0x208(%rbp)
  434099:	48 89 95 f0 fd ff ff 	mov    %rdx,-0x210(%rbp)
  4340a0:	48 8d 95 a0 fd ff ff 	lea    -0x260(%rbp),%rdx
  4340a7:	48 89 95 10 fe ff ff 	mov    %rdx,-0x1f0(%rbp)
  4340ae:	48 8b 95 10 fe ff ff 	mov    -0x1f0(%rbp),%rdx
  4340b5:	48 89 d7             	mov    %rdx,%rdi
  4340b8:	be 01 00 00 00       	mov    $0x1,%esi
  4340bd:	e8 3c 1b 01 00       	callq  445bfe <setEncryptedValueDWord>
  4340c2:	31 f6                	xor    %esi,%esi
  4340c4:	48 8b 95 10 fe ff ff 	mov    -0x1f0(%rbp),%rdx
  4340cb:	48 83 c2 08          	add    $0x8,%rdx
  4340cf:	48 89 d7             	mov    %rdx,%rdi
  4340d2:	48 89 85 98 fd ff ff 	mov    %rax,-0x268(%rbp)
  4340d9:	e8 1e 1c 01 00       	callq  445cfc <setEncryptedValueQWord>
  4340de:	31 c9                	xor    %ecx,%ecx
  4340e0:	89 ce                	mov    %ecx,%esi
  4340e2:	48 8b 95 10 fe ff ff 	mov    -0x1f0(%rbp),%rdx
  4340e9:	48 83 c2 10          	add    $0x10,%rdx
  4340ed:	48 89 d7             	mov    %rdx,%rdi
  4340f0:	48 89 85 90 fd ff ff 	mov    %rax,-0x270(%rbp)
  4340f7:	e8 00 1c 01 00       	callq  445cfc <setEncryptedValueQWord>
  4340fc:	48 8b 95 f8 fd ff ff 	mov    -0x208(%rbp),%rdx
  434103:	48 89 95 d8 fd ff ff 	mov    %rdx,-0x228(%rbp)
  43410a:	48 8b 95 d8 fd ff ff 	mov    -0x228(%rbp),%rdx
  434111:	48 03 95 f0 fd ff ff 	add    -0x210(%rbp),%rdx
  434118:	48 89 95 d0 fd ff ff 	mov    %rdx,-0x230(%rbp)
  43411f:	48 8b 95 d0 fd ff ff 	mov    -0x230(%rbp),%rdx
  434126:	48 8d b5 d8 fd ff ff 	lea    -0x228(%rbp),%rsi
  43412d:	48 89 b5 30 fe ff ff 	mov    %rsi,-0x1d0(%rbp)
  434134:	48 89 95 28 fe ff ff 	mov    %rdx,-0x1d8(%rbp)
  43413b:	48 8d 95 e0 fd ff ff 	lea    -0x220(%rbp),%rdx
  434142:	48 89 95 20 fe ff ff 	mov    %rdx,-0x1e0(%rbp)
  434149:	c7 85 1c fe ff ff 30 	movl   $0x30,-0x1e4(%rbp)
  434150:	00 00 00 
  434153:	48 8b 95 28 fe ff ff 	mov    -0x1d8(%rbp),%rdx
  43415a:	48 8b b5 30 fe ff ff 	mov    -0x1d0(%rbp),%rsi
  434161:	48 8b 36             	mov    (%rsi),%rsi
  434164:	48 29 f2             	sub    %rsi,%rdx
  434167:	48 83 fa 01          	cmp    $0x1,%rdx
  43416b:	48 89 85 88 fd ff ff 	mov    %rax,-0x278(%rbp)
  434172:	7d 0c                	jge    434180 <pk_parse_key_pkcs1_der+0x100>
  434174:	c7 85 38 fe ff ff a0 	movl   $0xffffffa0,-0x1c8(%rbp)
  43417b:	ff ff ff 
  43417e:	eb 52                	jmp    4341d2 <pk_parse_key_pkcs1_der+0x152>
  434180:	48 8b 85 30 fe ff ff 	mov    -0x1d0(%rbp),%rax
  434187:	48 8b 00             	mov    (%rax),%rax
  43418a:	0f b6 08             	movzbl (%rax),%ecx
  43418d:	3b 8d 1c fe ff ff    	cmp    -0x1e4(%rbp),%ecx
  434193:	74 0c                	je     4341a1 <pk_parse_key_pkcs1_der+0x121>
  434195:	c7 85 38 fe ff ff 9e 	movl   $0xffffff9e,-0x1c8(%rbp)
  43419c:	ff ff ff 
  43419f:	eb 31                	jmp    4341d2 <pk_parse_key_pkcs1_der+0x152>
  4341a1:	48 8b 85 30 fe ff ff 	mov    -0x1d0(%rbp),%rax
  4341a8:	48 8b 08             	mov    (%rax),%rcx
  4341ab:	48 83 c1 01          	add    $0x1,%rcx
  4341af:	48 89 08             	mov    %rcx,(%rax)
  4341b2:	48 8b bd 30 fe ff ff 	mov    -0x1d0(%rbp),%rdi
  4341b9:	48 8b b5 28 fe ff ff 	mov    -0x1d8(%rbp),%rsi
  4341c0:	48 8b 95 20 fe ff ff 	mov    -0x1e0(%rbp),%rdx
  4341c7:	e8 04 5f fe ff       	callq  41a0d0 <mbedtls_asn1_get_len>
  4341cc:	89 85 38 fe ff ff    	mov    %eax,-0x1c8(%rbp)
  4341d2:	8b 85 38 fe ff ff    	mov    -0x1c8(%rbp),%eax
  4341d8:	89 85 ec fd ff ff    	mov    %eax,-0x214(%rbp)
  4341de:	83 f8 00             	cmp    $0x0,%eax
  4341e1:	74 16                	je     4341f9 <pk_parse_key_pkcs1_der+0x179>
  4341e3:	8b 85 ec fd ff ff    	mov    -0x214(%rbp),%eax
  4341e9:	05 00 c3 ff ff       	add    $0xffffc300,%eax
  4341ee:	89 85 0c fe ff ff    	mov    %eax,-0x1f4(%rbp)
  4341f4:	e9 54 0c 00 00       	jmpq   434e4d <pk_parse_key_pkcs1_der+0xdcd>
  4341f9:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
  434200:	48 03 85 e0 fd ff ff 	add    -0x220(%rbp),%rax
  434207:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
  43420e:	48 8b b5 d0 fd ff ff 	mov    -0x230(%rbp),%rsi
  434215:	48 8d bd d8 fd ff ff 	lea    -0x228(%rbp),%rdi
  43421c:	48 8d 95 e8 fd ff ff 	lea    -0x218(%rbp),%rdx
  434223:	e8 28 61 fe ff       	callq  41a350 <mbedtls_asn1_get_int>
  434228:	89 85 ec fd ff ff    	mov    %eax,-0x214(%rbp)
  43422e:	83 f8 00             	cmp    $0x0,%eax
  434231:	74 16                	je     434249 <pk_parse_key_pkcs1_der+0x1c9>
  434233:	8b 85 ec fd ff ff    	mov    -0x214(%rbp),%eax
  434239:	05 00 c3 ff ff       	add    $0xffffc300,%eax
  43423e:	89 85 0c fe ff ff    	mov    %eax,-0x1f4(%rbp)
  434244:	e9 04 0c 00 00       	jmpq   434e4d <pk_parse_key_pkcs1_der+0xdcd>
  434249:	83 bd e8 fd ff ff 00 	cmpl   $0x0,-0x218(%rbp)
  434250:	74 0f                	je     434261 <pk_parse_key_pkcs1_der+0x1e1>
  434252:	c7 85 0c fe ff ff 80 	movl   $0xffffc280,-0x1f4(%rbp)
  434259:	c2 ff ff 
  43425c:	e9 ec 0b 00 00       	jmpq   434e4d <pk_parse_key_pkcs1_der+0xdcd>
  434261:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
  434268:	48 8d 8d d8 fd ff ff 	lea    -0x228(%rbp),%rcx
  43426f:	48 89 8d 50 fe ff ff 	mov    %rcx,-0x1b0(%rbp)
  434276:	48 89 85 48 fe ff ff 	mov    %rax,-0x1b8(%rbp)
  43427d:	48 8d 85 e0 fd ff ff 	lea    -0x220(%rbp),%rax
  434284:	48 89 85 40 fe ff ff 	mov    %rax,-0x1c0(%rbp)
  43428b:	c7 85 3c fe ff ff 02 	movl   $0x2,-0x1c4(%rbp)
  434292:	00 00 00 
  434295:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
  43429c:	48 8b 8d 50 fe ff ff 	mov    -0x1b0(%rbp),%rcx
  4342a3:	48 8b 09             	mov    (%rcx),%rcx
  4342a6:	48 29 c8             	sub    %rcx,%rax
  4342a9:	48 83 f8 01          	cmp    $0x1,%rax
  4342ad:	7d 0c                	jge    4342bb <pk_parse_key_pkcs1_der+0x23b>
  4342af:	c7 85 58 fe ff ff a0 	movl   $0xffffffa0,-0x1a8(%rbp)
  4342b6:	ff ff ff 
  4342b9:	eb 52                	jmp    43430d <pk_parse_key_pkcs1_der+0x28d>
  4342bb:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
  4342c2:	48 8b 00             	mov    (%rax),%rax
  4342c5:	0f b6 08             	movzbl (%rax),%ecx
  4342c8:	3b 8d 3c fe ff ff    	cmp    -0x1c4(%rbp),%ecx
  4342ce:	74 0c                	je     4342dc <pk_parse_key_pkcs1_der+0x25c>
  4342d0:	c7 85 58 fe ff ff 9e 	movl   $0xffffff9e,-0x1a8(%rbp)
  4342d7:	ff ff ff 
  4342da:	eb 31                	jmp    43430d <pk_parse_key_pkcs1_der+0x28d>
  4342dc:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
  4342e3:	48 8b 08             	mov    (%rax),%rcx
  4342e6:	48 83 c1 01          	add    $0x1,%rcx
  4342ea:	48 89 08             	mov    %rcx,(%rax)
  4342ed:	48 8b bd 50 fe ff ff 	mov    -0x1b0(%rbp),%rdi
  4342f4:	48 8b b5 48 fe ff ff 	mov    -0x1b8(%rbp),%rsi
  4342fb:	48 8b 95 40 fe ff ff 	mov    -0x1c0(%rbp),%rdx
  434302:	e8 c9 5d fe ff       	callq  41a0d0 <mbedtls_asn1_get_len>
  434307:	89 85 58 fe ff ff    	mov    %eax,-0x1a8(%rbp)
  43430d:	8b 85 58 fe ff ff    	mov    -0x1a8(%rbp),%eax
  434313:	89 85 ec fd ff ff    	mov    %eax,-0x214(%rbp)
  434319:	83 f8 00             	cmp    $0x0,%eax
  43431c:	75 6a                	jne    434388 <pk_parse_key_pkcs1_der+0x308>
  43431e:	31 c0                	xor    %eax,%eax
  434320:	89 c1                	mov    %eax,%ecx
  434322:	48 8b bd 00 fe ff ff 	mov    -0x200(%rbp),%rdi
  434329:	48 8b b5 d8 fd ff ff 	mov    -0x228(%rbp),%rsi
  434330:	48 8b 95 e0 fd ff ff 	mov    -0x220(%rbp),%rdx
  434337:	48 89 8d 80 fd ff ff 	mov    %rcx,-0x280(%rbp)
  43433e:	4c 8b 85 80 fd ff ff 	mov    -0x280(%rbp),%r8
  434345:	4c 8b 8d 80 fd ff ff 	mov    -0x280(%rbp),%r9
  43434c:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
  434353:	00 
  434354:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
  43435b:	00 00 
  43435d:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
  434364:	00 00 
  434366:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
  43436d:	00 00 
  43436f:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
  434376:	00 00 
  434378:	e8 33 1d 00 00       	callq  4360b0 <mbedtls_rsa_import_raw>
  43437d:	89 85 ec fd ff ff    	mov    %eax,-0x214(%rbp)
  434383:	83 f8 00             	cmp    $0x0,%eax
  434386:	74 05                	je     43438d <pk_parse_key_pkcs1_der+0x30d>
  434388:	e9 fb 08 00 00       	jmpq   434c88 <pk_parse_key_pkcs1_der+0xc08>
  43438d:	48 8b 85 e0 fd ff ff 	mov    -0x220(%rbp),%rax
  434394:	48 03 85 d8 fd ff ff 	add    -0x228(%rbp),%rax
  43439b:	48 89 85 d8 fd ff ff 	mov    %rax,-0x228(%rbp)
  4343a2:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
  4343a9:	48 8d 8d d8 fd ff ff 	lea    -0x228(%rbp),%rcx
  4343b0:	48 89 8d 70 fe ff ff 	mov    %rcx,-0x190(%rbp)
  4343b7:	48 89 85 68 fe ff ff 	mov    %rax,-0x198(%rbp)
  4343be:	48 8d 85 e0 fd ff ff 	lea    -0x220(%rbp),%rax
  4343c5:	48 89 85 60 fe ff ff 	mov    %rax,-0x1a0(%rbp)
  4343cc:	c7 85 5c fe ff ff 02 	movl   $0x2,-0x1a4(%rbp)
  4343d3:	00 00 00 
  4343d6:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
  4343dd:	48 8b 8d 70 fe ff ff 	mov    -0x190(%rbp),%rcx
  4343e4:	48 8b 09             	mov    (%rcx),%rcx
  4343e7:	48 29 c8             	sub    %rcx,%rax
  4343ea:	48 83 f8 01          	cmp    $0x1,%rax
  4343ee:	7d 0c                	jge    4343fc <pk_parse_key_pkcs1_der+0x37c>
  4343f0:	c7 85 78 fe ff ff a0 	movl   $0xffffffa0,-0x188(%rbp)
  4343f7:	ff ff ff 
  4343fa:	eb 52                	jmp    43444e <pk_parse_key_pkcs1_der+0x3ce>
  4343fc:	48 8b 85 70 fe ff ff 	mov    -0x190(%rbp),%rax
  434403:	48 8b 00             	mov    (%rax),%rax
  434406:	0f b6 08             	movzbl (%rax),%ecx
  434409:	3b 8d 5c fe ff ff    	cmp    -0x1a4(%rbp),%ecx
  43440f:	74 0c                	je     43441d <pk_parse_key_pkcs1_der+0x39d>
  434411:	c7 85 78 fe ff ff 9e 	movl   $0xffffff9e,-0x188(%rbp)
  434418:	ff ff ff 
  43441b:	eb 31                	jmp    43444e <pk_parse_key_pkcs1_der+0x3ce>
  43441d:	48 8b 85 70 fe ff ff 	mov    -0x190(%rbp),%rax
  434424:	48 8b 08             	mov    (%rax),%rcx
  434427:	48 83 c1 01          	add    $0x1,%rcx
  43442b:	48 89 08             	mov    %rcx,(%rax)
  43442e:	48 8b bd 70 fe ff ff 	mov    -0x190(%rbp),%rdi
  434435:	48 8b b5 68 fe ff ff 	mov    -0x198(%rbp),%rsi
  43443c:	48 8b 95 60 fe ff ff 	mov    -0x1a0(%rbp),%rdx
  434443:	e8 88 5c fe ff       	callq  41a0d0 <mbedtls_asn1_get_len>
  434448:	89 85 78 fe ff ff    	mov    %eax,-0x188(%rbp)
  43444e:	8b 85 78 fe ff ff    	mov    -0x188(%rbp),%eax
  434454:	89 85 ec fd ff ff    	mov    %eax,-0x214(%rbp)
  43445a:	83 f8 00             	cmp    $0x0,%eax
  43445d:	0f 85 84 00 00 00    	jne    4344e7 <pk_parse_key_pkcs1_der+0x467>
  434463:	31 c0                	xor    %eax,%eax
  434465:	89 c1                	mov    %eax,%ecx
  434467:	48 8b bd 00 fe ff ff 	mov    -0x200(%rbp),%rdi
  43446e:	48 8b 95 d8 fd ff ff 	mov    -0x228(%rbp),%rdx
  434475:	48 8b b5 e0 fd ff ff 	mov    -0x220(%rbp),%rsi
  43447c:	48 89 b5 78 fd ff ff 	mov    %rsi,-0x288(%rbp)
  434483:	48 89 ce             	mov    %rcx,%rsi
  434486:	48 89 95 70 fd ff ff 	mov    %rdx,-0x290(%rbp)
  43448d:	48 89 ca             	mov    %rcx,%rdx
  434490:	48 89 8d 68 fd ff ff 	mov    %rcx,-0x298(%rbp)
  434497:	4c 8b 85 68 fd ff ff 	mov    -0x298(%rbp),%r8
  43449e:	4c 8b 8d 68 fd ff ff 	mov    -0x298(%rbp),%r9
  4344a5:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
  4344ac:	00 
  4344ad:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
  4344b4:	00 00 
  4344b6:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
  4344bd:	00 00 
  4344bf:	4c 8b 95 70 fd ff ff 	mov    -0x290(%rbp),%r10
  4344c6:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
  4344cb:	4c 8b 95 78 fd ff ff 	mov    -0x288(%rbp),%r10
  4344d2:	4c 89 54 24 20       	mov    %r10,0x20(%rsp)
  4344d7:	e8 d4 1b 00 00       	callq  4360b0 <mbedtls_rsa_import_raw>
  4344dc:	89 85 ec fd ff ff    	mov    %eax,-0x214(%rbp)
  4344e2:	83 f8 00             	cmp    $0x0,%eax
  4344e5:	74 05                	je     4344ec <pk_parse_key_pkcs1_der+0x46c>
  4344e7:	e9 9c 07 00 00       	jmpq   434c88 <pk_parse_key_pkcs1_der+0xc08>
  4344ec:	48 8b 85 e0 fd ff ff 	mov    -0x220(%rbp),%rax
  4344f3:	48 03 85 d8 fd ff ff 	add    -0x228(%rbp),%rax
  4344fa:	48 89 85 d8 fd ff ff 	mov    %rax,-0x228(%rbp)
  434501:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
  434508:	48 8d 8d d8 fd ff ff 	lea    -0x228(%rbp),%rcx
  43450f:	48 89 8d 90 fe ff ff 	mov    %rcx,-0x170(%rbp)
  434516:	48 89 85 88 fe ff ff 	mov    %rax,-0x178(%rbp)
  43451d:	48 8d 85 e0 fd ff ff 	lea    -0x220(%rbp),%rax
  434524:	48 89 85 80 fe ff ff 	mov    %rax,-0x180(%rbp)
  43452b:	c7 85 7c fe ff ff 02 	movl   $0x2,-0x184(%rbp)
  434532:	00 00 00 
  434535:	48 8b 85 88 fe ff ff 	mov    -0x178(%rbp),%rax
  43453c:	48 8b 8d 90 fe ff ff 	mov    -0x170(%rbp),%rcx
  434543:	48 8b 09             	mov    (%rcx),%rcx
  434546:	48 29 c8             	sub    %rcx,%rax
  434549:	48 83 f8 01          	cmp    $0x1,%rax
  43454d:	7d 0c                	jge    43455b <pk_parse_key_pkcs1_der+0x4db>
  43454f:	c7 85 98 fe ff ff a0 	movl   $0xffffffa0,-0x168(%rbp)
  434556:	ff ff ff 
  434559:	eb 52                	jmp    4345ad <pk_parse_key_pkcs1_der+0x52d>
  43455b:	48 8b 85 90 fe ff ff 	mov    -0x170(%rbp),%rax
  434562:	48 8b 00             	mov    (%rax),%rax
  434565:	0f b6 08             	movzbl (%rax),%ecx
  434568:	3b 8d 7c fe ff ff    	cmp    -0x184(%rbp),%ecx
  43456e:	74 0c                	je     43457c <pk_parse_key_pkcs1_der+0x4fc>
  434570:	c7 85 98 fe ff ff 9e 	movl   $0xffffff9e,-0x168(%rbp)
  434577:	ff ff ff 
  43457a:	eb 31                	jmp    4345ad <pk_parse_key_pkcs1_der+0x52d>
  43457c:	48 8b 85 90 fe ff ff 	mov    -0x170(%rbp),%rax
  434583:	48 8b 08             	mov    (%rax),%rcx
  434586:	48 83 c1 01          	add    $0x1,%rcx
  43458a:	48 89 08             	mov    %rcx,(%rax)
  43458d:	48 8b bd 90 fe ff ff 	mov    -0x170(%rbp),%rdi
  434594:	48 8b b5 88 fe ff ff 	mov    -0x178(%rbp),%rsi
  43459b:	48 8b 95 80 fe ff ff 	mov    -0x180(%rbp),%rdx
  4345a2:	e8 29 5b fe ff       	callq  41a0d0 <mbedtls_asn1_get_len>
  4345a7:	89 85 98 fe ff ff    	mov    %eax,-0x168(%rbp)
  4345ad:	8b 85 98 fe ff ff    	mov    -0x168(%rbp),%eax
  4345b3:	89 85 ec fd ff ff    	mov    %eax,-0x214(%rbp)
  4345b9:	83 f8 00             	cmp    $0x0,%eax
  4345bc:	0f 85 84 00 00 00    	jne    434646 <pk_parse_key_pkcs1_der+0x5c6>
  4345c2:	31 c0                	xor    %eax,%eax
  4345c4:	89 c1                	mov    %eax,%ecx
  4345c6:	48 8b bd 00 fe ff ff 	mov    -0x200(%rbp),%rdi
  4345cd:	48 8b 95 d8 fd ff ff 	mov    -0x228(%rbp),%rdx
  4345d4:	48 8b b5 e0 fd ff ff 	mov    -0x220(%rbp),%rsi
  4345db:	48 89 b5 60 fd ff ff 	mov    %rsi,-0x2a0(%rbp)
  4345e2:	48 89 ce             	mov    %rcx,%rsi
  4345e5:	48 89 95 58 fd ff ff 	mov    %rdx,-0x2a8(%rbp)
  4345ec:	48 89 ca             	mov    %rcx,%rdx
  4345ef:	48 89 8d 50 fd ff ff 	mov    %rcx,-0x2b0(%rbp)
  4345f6:	4c 8b 85 50 fd ff ff 	mov    -0x2b0(%rbp),%r8
  4345fd:	4c 8b 8d 50 fd ff ff 	mov    -0x2b0(%rbp),%r9
  434604:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
  43460b:	00 
  43460c:	4c 8b 95 58 fd ff ff 	mov    -0x2a8(%rbp),%r10
  434613:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
  434618:	4c 8b 95 60 fd ff ff 	mov    -0x2a0(%rbp),%r10
  43461f:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
  434624:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
  43462b:	00 00 
  43462d:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
  434634:	00 00 
  434636:	e8 75 1a 00 00       	callq  4360b0 <mbedtls_rsa_import_raw>
  43463b:	89 85 ec fd ff ff    	mov    %eax,-0x214(%rbp)
  434641:	83 f8 00             	cmp    $0x0,%eax
  434644:	74 05                	je     43464b <pk_parse_key_pkcs1_der+0x5cb>
  434646:	e9 3d 06 00 00       	jmpq   434c88 <pk_parse_key_pkcs1_der+0xc08>
  43464b:	48 8b 85 e0 fd ff ff 	mov    -0x220(%rbp),%rax
  434652:	48 03 85 d8 fd ff ff 	add    -0x228(%rbp),%rax
  434659:	48 89 85 d8 fd ff ff 	mov    %rax,-0x228(%rbp)
  434660:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
  434667:	48 8d 8d d8 fd ff ff 	lea    -0x228(%rbp),%rcx
  43466e:	48 89 8d b0 fe ff ff 	mov    %rcx,-0x150(%rbp)
  434675:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
  43467c:	48 8d 85 e0 fd ff ff 	lea    -0x220(%rbp),%rax
  434683:	48 89 85 a0 fe ff ff 	mov    %rax,-0x160(%rbp)
  43468a:	c7 85 9c fe ff ff 02 	movl   $0x2,-0x164(%rbp)
  434691:	00 00 00 
  434694:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
  43469b:	48 8b 8d b0 fe ff ff 	mov    -0x150(%rbp),%rcx
  4346a2:	48 8b 09             	mov    (%rcx),%rcx
  4346a5:	48 29 c8             	sub    %rcx,%rax
  4346a8:	48 83 f8 01          	cmp    $0x1,%rax
  4346ac:	7d 0c                	jge    4346ba <pk_parse_key_pkcs1_der+0x63a>
  4346ae:	c7 85 b8 fe ff ff a0 	movl   $0xffffffa0,-0x148(%rbp)
  4346b5:	ff ff ff 
  4346b8:	eb 52                	jmp    43470c <pk_parse_key_pkcs1_der+0x68c>
  4346ba:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
  4346c1:	48 8b 00             	mov    (%rax),%rax
  4346c4:	0f b6 08             	movzbl (%rax),%ecx
  4346c7:	3b 8d 9c fe ff ff    	cmp    -0x164(%rbp),%ecx
  4346cd:	74 0c                	je     4346db <pk_parse_key_pkcs1_der+0x65b>
  4346cf:	c7 85 b8 fe ff ff 9e 	movl   $0xffffff9e,-0x148(%rbp)
  4346d6:	ff ff ff 
  4346d9:	eb 31                	jmp    43470c <pk_parse_key_pkcs1_der+0x68c>
  4346db:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
  4346e2:	48 8b 08             	mov    (%rax),%rcx
  4346e5:	48 83 c1 01          	add    $0x1,%rcx
  4346e9:	48 89 08             	mov    %rcx,(%rax)
  4346ec:	48 8b bd b0 fe ff ff 	mov    -0x150(%rbp),%rdi
  4346f3:	48 8b b5 a8 fe ff ff 	mov    -0x158(%rbp),%rsi
  4346fa:	48 8b 95 a0 fe ff ff 	mov    -0x160(%rbp),%rdx
  434701:	e8 ca 59 fe ff       	callq  41a0d0 <mbedtls_asn1_get_len>
  434706:	89 85 b8 fe ff ff    	mov    %eax,-0x148(%rbp)
  43470c:	8b 85 b8 fe ff ff    	mov    -0x148(%rbp),%eax
  434712:	89 85 ec fd ff ff    	mov    %eax,-0x214(%rbp)
  434718:	83 f8 00             	cmp    $0x0,%eax
  43471b:	75 7a                	jne    434797 <pk_parse_key_pkcs1_der+0x717>
  43471d:	31 c0                	xor    %eax,%eax
  43471f:	89 c1                	mov    %eax,%ecx
  434721:	48 8b bd 00 fe ff ff 	mov    -0x200(%rbp),%rdi
  434728:	48 8b 95 d8 fd ff ff 	mov    -0x228(%rbp),%rdx
  43472f:	4c 8b 85 e0 fd ff ff 	mov    -0x220(%rbp),%r8
  434736:	48 89 ce             	mov    %rcx,%rsi
  434739:	48 89 95 48 fd ff ff 	mov    %rdx,-0x2b8(%rbp)
  434740:	48 89 ca             	mov    %rcx,%rdx
  434743:	4c 8b 8d 48 fd ff ff 	mov    -0x2b8(%rbp),%r9
  43474a:	48 89 8d 40 fd ff ff 	mov    %rcx,-0x2c0(%rbp)
  434751:	4c 89 c9             	mov    %r9,%rcx
  434754:	4c 8b 8d 40 fd ff ff 	mov    -0x2c0(%rbp),%r9
  43475b:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
  434762:	00 
  434763:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
  43476a:	00 00 
  43476c:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
  434773:	00 00 
  434775:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
  43477c:	00 00 
  43477e:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
  434785:	00 00 
  434787:	e8 24 19 00 00       	callq  4360b0 <mbedtls_rsa_import_raw>
  43478c:	89 85 ec fd ff ff    	mov    %eax,-0x214(%rbp)
  434792:	83 f8 00             	cmp    $0x0,%eax
  434795:	74 05                	je     43479c <pk_parse_key_pkcs1_der+0x71c>
  434797:	e9 ec 04 00 00       	jmpq   434c88 <pk_parse_key_pkcs1_der+0xc08>
  43479c:	48 8b 85 e0 fd ff ff 	mov    -0x220(%rbp),%rax
  4347a3:	48 03 85 d8 fd ff ff 	add    -0x228(%rbp),%rax
  4347aa:	48 89 85 d8 fd ff ff 	mov    %rax,-0x228(%rbp)
  4347b1:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
  4347b8:	48 8d 8d d8 fd ff ff 	lea    -0x228(%rbp),%rcx
  4347bf:	48 89 8d d0 fe ff ff 	mov    %rcx,-0x130(%rbp)
  4347c6:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
  4347cd:	48 8d 85 e0 fd ff ff 	lea    -0x220(%rbp),%rax
  4347d4:	48 89 85 c0 fe ff ff 	mov    %rax,-0x140(%rbp)
  4347db:	c7 85 bc fe ff ff 02 	movl   $0x2,-0x144(%rbp)
  4347e2:	00 00 00 
  4347e5:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  4347ec:	48 8b 8d d0 fe ff ff 	mov    -0x130(%rbp),%rcx
  4347f3:	48 8b 09             	mov    (%rcx),%rcx
  4347f6:	48 29 c8             	sub    %rcx,%rax
  4347f9:	48 83 f8 01          	cmp    $0x1,%rax
  4347fd:	7d 0c                	jge    43480b <pk_parse_key_pkcs1_der+0x78b>
  4347ff:	c7 85 dc fe ff ff a0 	movl   $0xffffffa0,-0x124(%rbp)
  434806:	ff ff ff 
  434809:	eb 52                	jmp    43485d <pk_parse_key_pkcs1_der+0x7dd>
  43480b:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
  434812:	48 8b 00             	mov    (%rax),%rax
  434815:	0f b6 08             	movzbl (%rax),%ecx
  434818:	3b 8d bc fe ff ff    	cmp    -0x144(%rbp),%ecx
  43481e:	74 0c                	je     43482c <pk_parse_key_pkcs1_der+0x7ac>
  434820:	c7 85 dc fe ff ff 9e 	movl   $0xffffff9e,-0x124(%rbp)
  434827:	ff ff ff 
  43482a:	eb 31                	jmp    43485d <pk_parse_key_pkcs1_der+0x7dd>
  43482c:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
  434833:	48 8b 08             	mov    (%rax),%rcx
  434836:	48 83 c1 01          	add    $0x1,%rcx
  43483a:	48 89 08             	mov    %rcx,(%rax)
  43483d:	48 8b bd d0 fe ff ff 	mov    -0x130(%rbp),%rdi
  434844:	48 8b b5 c8 fe ff ff 	mov    -0x138(%rbp),%rsi
  43484b:	48 8b 95 c0 fe ff ff 	mov    -0x140(%rbp),%rdx
  434852:	e8 79 58 fe ff       	callq  41a0d0 <mbedtls_asn1_get_len>
  434857:	89 85 dc fe ff ff    	mov    %eax,-0x124(%rbp)
  43485d:	8b 85 dc fe ff ff    	mov    -0x124(%rbp),%eax
  434863:	89 85 ec fd ff ff    	mov    %eax,-0x214(%rbp)
  434869:	83 f8 00             	cmp    $0x0,%eax
  43486c:	75 73                	jne    4348e1 <pk_parse_key_pkcs1_der+0x861>
  43486e:	31 c0                	xor    %eax,%eax
  434870:	89 c1                	mov    %eax,%ecx
  434872:	48 8b bd 00 fe ff ff 	mov    -0x200(%rbp),%rdi
  434879:	4c 8b 8d d8 fd ff ff 	mov    -0x228(%rbp),%r9
  434880:	48 8b 95 e0 fd ff ff 	mov    -0x220(%rbp),%rdx
  434887:	48 89 ce             	mov    %rcx,%rsi
  43488a:	48 89 95 38 fd ff ff 	mov    %rdx,-0x2c8(%rbp)
  434891:	48 89 ca             	mov    %rcx,%rdx
  434894:	48 89 8d 30 fd ff ff 	mov    %rcx,-0x2d0(%rbp)
  43489b:	4c 8b 85 30 fd ff ff 	mov    -0x2d0(%rbp),%r8
  4348a2:	4c 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%r10
  4348a9:	4c 89 14 24          	mov    %r10,(%rsp)
  4348ad:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
  4348b4:	00 00 
  4348b6:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
  4348bd:	00 00 
  4348bf:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
  4348c6:	00 00 
  4348c8:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
  4348cf:	00 00 
  4348d1:	e8 da 17 00 00       	callq  4360b0 <mbedtls_rsa_import_raw>
  4348d6:	89 85 ec fd ff ff    	mov    %eax,-0x214(%rbp)
  4348dc:	83 f8 00             	cmp    $0x0,%eax
  4348df:	74 05                	je     4348e6 <pk_parse_key_pkcs1_der+0x866>
  4348e1:	e9 a2 03 00 00       	jmpq   434c88 <pk_parse_key_pkcs1_der+0xc08>
  4348e6:	48 8b 85 e0 fd ff ff 	mov    -0x220(%rbp),%rax
  4348ed:	48 03 85 d8 fd ff ff 	add    -0x228(%rbp),%rax
  4348f4:	48 89 85 d8 fd ff ff 	mov    %rax,-0x228(%rbp)
  4348fb:	48 8b bd 00 fe ff ff 	mov    -0x200(%rbp),%rdi
  434902:	e8 69 19 00 00       	callq  436270 <mbedtls_rsa_complete>
  434907:	89 85 ec fd ff ff    	mov    %eax,-0x214(%rbp)
  43490d:	83 f8 00             	cmp    $0x0,%eax
  434910:	74 05                	je     434917 <pk_parse_key_pkcs1_der+0x897>
  434912:	e9 71 03 00 00       	jmpq   434c88 <pk_parse_key_pkcs1_der+0xc08>
  434917:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
  43491e:	48 8d 8d d8 fd ff ff 	lea    -0x228(%rbp),%rcx
  434925:	48 89 8d 00 ff ff ff 	mov    %rcx,-0x100(%rbp)
  43492c:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
  434933:	48 8d 85 a0 fd ff ff 	lea    -0x260(%rbp),%rax
  43493a:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
  434941:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
  434948:	48 8b 8d f8 fe ff ff 	mov    -0x108(%rbp),%rcx
  43494f:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  434953:	48 89 4d a8          	mov    %rcx,-0x58(%rbp)
  434957:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
  43495e:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  434962:	c7 45 9c 02 00 00 00 	movl   $0x2,-0x64(%rbp)
  434969:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  43496d:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  434971:	48 8b 09             	mov    (%rcx),%rcx
  434974:	48 29 c8             	sub    %rcx,%rax
  434977:	48 83 f8 01          	cmp    $0x1,%rax
  43497b:	7d 09                	jge    434986 <pk_parse_key_pkcs1_der+0x906>
  43497d:	c7 45 b8 a0 ff ff ff 	movl   $0xffffffa0,-0x48(%rbp)
  434984:	eb 3a                	jmp    4349c0 <pk_parse_key_pkcs1_der+0x940>
  434986:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  43498a:	48 8b 00             	mov    (%rax),%rax
  43498d:	0f b6 08             	movzbl (%rax),%ecx
  434990:	3b 4d 9c             	cmp    -0x64(%rbp),%ecx
  434993:	74 09                	je     43499e <pk_parse_key_pkcs1_der+0x91e>
  434995:	c7 45 b8 9e ff ff ff 	movl   $0xffffff9e,-0x48(%rbp)
  43499c:	eb 22                	jmp    4349c0 <pk_parse_key_pkcs1_der+0x940>
  43499e:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  4349a2:	48 8b 08             	mov    (%rax),%rcx
  4349a5:	48 83 c1 01          	add    $0x1,%rcx
  4349a9:	48 89 08             	mov    %rcx,(%rax)
  4349ac:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
  4349b0:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
  4349b4:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
  4349b8:	e8 13 57 fe ff       	callq  41a0d0 <mbedtls_asn1_get_len>
  4349bd:	89 45 b8             	mov    %eax,-0x48(%rbp)
  4349c0:	8b 45 b8             	mov    -0x48(%rbp),%eax
  4349c3:	89 85 ec fe ff ff    	mov    %eax,-0x114(%rbp)
  4349c9:	83 f8 00             	cmp    $0x0,%eax
  4349cc:	74 0e                	je     4349dc <pk_parse_key_pkcs1_der+0x95c>
  4349ce:	8b 85 ec fe ff ff    	mov    -0x114(%rbp),%eax
  4349d4:	89 85 0c ff ff ff    	mov    %eax,-0xf4(%rbp)
  4349da:	eb 43                	jmp    434a1f <pk_parse_key_pkcs1_der+0x99f>
  4349dc:	48 8b bd f0 fe ff ff 	mov    -0x110(%rbp),%rdi
  4349e3:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
  4349ea:	48 8b 30             	mov    (%rax),%rsi
  4349ed:	48 8b 95 e0 fe ff ff 	mov    -0x120(%rbp),%rdx
  4349f4:	e8 d7 c9 fe ff       	callq  4213d0 <mbedtls_mpi_read_binary>
  4349f9:	89 85 ec fe ff ff    	mov    %eax,-0x114(%rbp)
  4349ff:	48 8b 95 e0 fe ff ff 	mov    -0x120(%rbp),%rdx
  434a06:	48 8b b5 00 ff ff ff 	mov    -0x100(%rbp),%rsi
  434a0d:	48 03 16             	add    (%rsi),%rdx
  434a10:	48 89 16             	mov    %rdx,(%rsi)
  434a13:	8b 85 ec fe ff ff    	mov    -0x114(%rbp),%eax
  434a19:	89 85 0c ff ff ff    	mov    %eax,-0xf4(%rbp)
  434a1f:	8b 85 0c ff ff ff    	mov    -0xf4(%rbp),%eax
  434a25:	89 85 ec fd ff ff    	mov    %eax,-0x214(%rbp)
  434a2b:	83 f8 00             	cmp    $0x0,%eax
  434a2e:	0f 85 36 02 00 00    	jne    434c6a <pk_parse_key_pkcs1_der+0xbea>
  434a34:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
  434a3b:	48 8d 8d d8 fd ff ff 	lea    -0x228(%rbp),%rcx
  434a42:	48 89 8d 30 ff ff ff 	mov    %rcx,-0xd0(%rbp)
  434a49:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
  434a50:	48 8d 85 a0 fd ff ff 	lea    -0x260(%rbp),%rax
  434a57:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
  434a5e:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
  434a65:	48 8b 8d 28 ff ff ff 	mov    -0xd8(%rbp),%rcx
  434a6c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  434a70:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
  434a74:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
  434a7b:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  434a7f:	c7 45 bc 02 00 00 00 	movl   $0x2,-0x44(%rbp)
  434a86:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  434a8a:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  434a8e:	48 8b 09             	mov    (%rcx),%rcx
  434a91:	48 29 c8             	sub    %rcx,%rax
  434a94:	48 83 f8 01          	cmp    $0x1,%rax
  434a98:	7d 09                	jge    434aa3 <pk_parse_key_pkcs1_der+0xa23>
  434a9a:	c7 45 d8 a0 ff ff ff 	movl   $0xffffffa0,-0x28(%rbp)
  434aa1:	eb 3a                	jmp    434add <pk_parse_key_pkcs1_der+0xa5d>
  434aa3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  434aa7:	48 8b 00             	mov    (%rax),%rax
  434aaa:	0f b6 08             	movzbl (%rax),%ecx
  434aad:	3b 4d bc             	cmp    -0x44(%rbp),%ecx
  434ab0:	74 09                	je     434abb <pk_parse_key_pkcs1_der+0xa3b>
  434ab2:	c7 45 d8 9e ff ff ff 	movl   $0xffffff9e,-0x28(%rbp)
  434ab9:	eb 22                	jmp    434add <pk_parse_key_pkcs1_der+0xa5d>
  434abb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  434abf:	48 8b 08             	mov    (%rax),%rcx
  434ac2:	48 83 c1 01          	add    $0x1,%rcx
  434ac6:	48 89 08             	mov    %rcx,(%rax)
  434ac9:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  434acd:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  434ad1:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  434ad5:	e8 f6 55 fe ff       	callq  41a0d0 <mbedtls_asn1_get_len>
  434ada:	89 45 d8             	mov    %eax,-0x28(%rbp)
  434add:	8b 45 d8             	mov    -0x28(%rbp),%eax
  434ae0:	89 85 1c ff ff ff    	mov    %eax,-0xe4(%rbp)
  434ae6:	83 f8 00             	cmp    $0x0,%eax
  434ae9:	74 0e                	je     434af9 <pk_parse_key_pkcs1_der+0xa79>
  434aeb:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax
  434af1:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
  434af7:	eb 43                	jmp    434b3c <pk_parse_key_pkcs1_der+0xabc>
  434af9:	48 8b bd 20 ff ff ff 	mov    -0xe0(%rbp),%rdi
  434b00:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
  434b07:	48 8b 30             	mov    (%rax),%rsi
  434b0a:	48 8b 95 10 ff ff ff 	mov    -0xf0(%rbp),%rdx
  434b11:	e8 ba c8 fe ff       	callq  4213d0 <mbedtls_mpi_read_binary>
  434b16:	89 85 1c ff ff ff    	mov    %eax,-0xe4(%rbp)
  434b1c:	48 8b 95 10 ff ff ff 	mov    -0xf0(%rbp),%rdx
  434b23:	48 8b b5 30 ff ff ff 	mov    -0xd0(%rbp),%rsi
  434b2a:	48 03 16             	add    (%rsi),%rdx
  434b2d:	48 89 16             	mov    %rdx,(%rsi)
  434b30:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax
  434b36:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
  434b3c:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
  434b42:	89 85 ec fd ff ff    	mov    %eax,-0x214(%rbp)
  434b48:	83 f8 00             	cmp    $0x0,%eax
  434b4b:	0f 85 19 01 00 00    	jne    434c6a <pk_parse_key_pkcs1_der+0xbea>
  434b51:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
  434b58:	48 8d 8d d8 fd ff ff 	lea    -0x228(%rbp),%rcx
  434b5f:	48 89 8d 60 ff ff ff 	mov    %rcx,-0xa0(%rbp)
  434b66:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
  434b6d:	48 8d 85 a0 fd ff ff 	lea    -0x260(%rbp),%rax
  434b74:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
  434b7b:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  434b82:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
  434b89:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  434b8d:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
  434b91:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
  434b98:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  434b9c:	c7 45 dc 02 00 00 00 	movl   $0x2,-0x24(%rbp)
  434ba3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  434ba7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  434bab:	48 8b 09             	mov    (%rcx),%rcx
  434bae:	48 29 c8             	sub    %rcx,%rax
  434bb1:	48 83 f8 01          	cmp    $0x1,%rax
  434bb5:	7d 09                	jge    434bc0 <pk_parse_key_pkcs1_der+0xb40>
  434bb7:	c7 45 fc a0 ff ff ff 	movl   $0xffffffa0,-0x4(%rbp)
  434bbe:	eb 3a                	jmp    434bfa <pk_parse_key_pkcs1_der+0xb7a>
  434bc0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  434bc4:	48 8b 00             	mov    (%rax),%rax
  434bc7:	0f b6 08             	movzbl (%rax),%ecx
  434bca:	3b 4d dc             	cmp    -0x24(%rbp),%ecx
  434bcd:	74 09                	je     434bd8 <pk_parse_key_pkcs1_der+0xb58>
  434bcf:	c7 45 fc 9e ff ff ff 	movl   $0xffffff9e,-0x4(%rbp)
  434bd6:	eb 22                	jmp    434bfa <pk_parse_key_pkcs1_der+0xb7a>
  434bd8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  434bdc:	48 8b 08             	mov    (%rax),%rcx
  434bdf:	48 83 c1 01          	add    $0x1,%rcx
  434be3:	48 89 08             	mov    %rcx,(%rax)
  434be6:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  434bea:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  434bee:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  434bf2:	e8 d9 54 fe ff       	callq  41a0d0 <mbedtls_asn1_get_len>
  434bf7:	89 45 fc             	mov    %eax,-0x4(%rbp)
  434bfa:	8b 45 fc             	mov    -0x4(%rbp),%eax
  434bfd:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
  434c03:	83 f8 00             	cmp    $0x0,%eax
  434c06:	74 0e                	je     434c16 <pk_parse_key_pkcs1_der+0xb96>
  434c08:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
  434c0e:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)
  434c14:	eb 43                	jmp    434c59 <pk_parse_key_pkcs1_der+0xbd9>
  434c16:	48 8b bd 50 ff ff ff 	mov    -0xb0(%rbp),%rdi
  434c1d:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  434c24:	48 8b 30             	mov    (%rax),%rsi
  434c27:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
  434c2e:	e8 9d c7 fe ff       	callq  4213d0 <mbedtls_mpi_read_binary>
  434c33:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
  434c39:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
  434c40:	48 8b b5 60 ff ff ff 	mov    -0xa0(%rbp),%rsi
  434c47:	48 03 16             	add    (%rsi),%rdx
  434c4a:	48 89 16             	mov    %rdx,(%rsi)
  434c4d:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
  434c53:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)
  434c59:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
  434c5f:	89 85 ec fd ff ff    	mov    %eax,-0x214(%rbp)
  434c65:	83 f8 00             	cmp    $0x0,%eax
  434c68:	74 02                	je     434c6c <pk_parse_key_pkcs1_der+0xbec>
  434c6a:	eb 1c                	jmp    434c88 <pk_parse_key_pkcs1_der+0xc08>
  434c6c:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
  434c73:	48 3b 85 d0 fd ff ff 	cmp    -0x230(%rbp),%rax
  434c7a:	74 0a                	je     434c86 <pk_parse_key_pkcs1_der+0xc06>
  434c7c:	c7 85 ec fd ff ff 9a 	movl   $0xffffc29a,-0x214(%rbp)
  434c83:	c2 ff ff 
  434c86:	eb 00                	jmp    434c88 <pk_parse_key_pkcs1_der+0xc08>
  434c88:	48 8d 85 a0 fd ff ff 	lea    -0x260(%rbp),%rax
  434c8f:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
  434c96:	48 83 bd 70 ff ff ff 	cmpq   $0x0,-0x90(%rbp)
  434c9d:	00 
  434c9e:	75 05                	jne    434ca5 <pk_parse_key_pkcs1_der+0xc25>
  434ca0:	e9 5a 01 00 00       	jmpq   434dff <pk_parse_key_pkcs1_der+0xd7f>
  434ca5:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  434cac:	48 83 c0 10          	add    $0x10,%rax
  434cb0:	48 89 c7             	mov    %rax,%rdi
  434cb3:	e8 90 14 01 00       	callq  446148 <getDecryptedValueQWord>
  434cb8:	48 83 f8 00          	cmp    $0x0,%rax
  434cbc:	0f 84 ee 00 00 00    	je     434db0 <pk_parse_key_pkcs1_der+0xd30>
  434cc2:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  434cc9:	48 83 c0 10          	add    $0x10,%rax
  434ccd:	48 89 c7             	mov    %rax,%rdi
  434cd0:	e8 73 14 01 00       	callq  446148 <getDecryptedValueQWord>
  434cd5:	48 8b bd 70 ff ff ff 	mov    -0x90(%rbp),%rdi
  434cdc:	48 83 c7 08          	add    $0x8,%rdi
  434ce0:	48 89 85 28 fd ff ff 	mov    %rax,-0x2d8(%rbp)
  434ce7:	e8 5c 14 01 00       	callq  446148 <getDecryptedValueQWord>
  434cec:	48 8b bd 28 fd ff ff 	mov    -0x2d8(%rbp),%rdi
  434cf3:	48 89 7d 80          	mov    %rdi,-0x80(%rbp)
  434cf7:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  434cfe:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  434d02:	48 8b 8d 78 ff ff ff 	mov    -0x88(%rbp),%rcx
  434d09:	48 c1 e1 03          	shl    $0x3,%rcx
  434d0d:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  434d11:	48 89 4d 88          	mov    %rcx,-0x78(%rbp)
  434d15:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  434d1c:	00 
  434d1d:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  434d21:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
  434d25:	48 89 85 20 fd ff ff 	mov    %rax,-0x2e0(%rbp)
  434d2c:	48 89 8d 18 fd ff ff 	mov    %rcx,-0x2e8(%rbp)
  434d33:	48 89 95 10 fd ff ff 	mov    %rdx,-0x2f0(%rbp)
  434d3a:	e8 17 0c 01 00       	callq  445956 <writeback_cache>
  434d3f:	48 8b bd 18 fd ff ff 	mov    -0x2e8(%rbp),%rdi
  434d46:	48 8b b5 10 fd ff ff 	mov    -0x2f0(%rbp),%rsi
  434d4d:	e8 93 19 01 00       	callq  4466e5 <decryptArrayForLibCall>
  434d52:	31 f6                	xor    %esi,%esi
  434d54:	48 8b bd 18 fd ff ff 	mov    -0x2e8(%rbp),%rdi
  434d5b:	48 8b 95 10 fd ff ff 	mov    -0x2f0(%rbp),%rdx
  434d62:	48 8b 85 20 fd ff ff 	mov    -0x2e0(%rbp),%rax
  434d69:	ff d0                	callq  *%rax
  434d6b:	48 8b bd 18 fd ff ff 	mov    -0x2e8(%rbp),%rdi
  434d72:	48 8b b5 10 fd ff ff 	mov    -0x2f0(%rbp),%rsi
  434d79:	48 89 85 08 fd ff ff 	mov    %rax,-0x2f8(%rbp)
  434d80:	e8 d1 16 01 00       	callq  446456 <encryptArrayForLibCall>
  434d85:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  434d8c:	48 83 c0 10          	add    $0x10,%rax
  434d90:	48 89 c7             	mov    %rax,%rdi
  434d93:	e8 b0 13 01 00       	callq  446148 <getDecryptedValueQWord>
  434d98:	48 89 85 00 fd ff ff 	mov    %rax,-0x300(%rbp)
  434d9f:	e8 b2 0b 01 00       	callq  445956 <writeback_cache>
  434da4:	48 8b bd 00 fd ff ff 	mov    -0x300(%rbp),%rdi
  434dab:	e8 30 c3 fc ff       	callq  4010e0 <free@plt>
  434db0:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  434db7:	48 89 c7             	mov    %rax,%rdi
  434dba:	be 01 00 00 00       	mov    $0x1,%esi
  434dbf:	e8 3a 0e 01 00       	callq  445bfe <setEncryptedValueDWord>
  434dc4:	31 f6                	xor    %esi,%esi
  434dc6:	48 8b bd 70 ff ff ff 	mov    -0x90(%rbp),%rdi
  434dcd:	48 83 c7 08          	add    $0x8,%rdi
  434dd1:	48 89 85 f8 fc ff ff 	mov    %rax,-0x308(%rbp)
  434dd8:	e8 1f 0f 01 00       	callq  445cfc <setEncryptedValueQWord>
  434ddd:	31 c9                	xor    %ecx,%ecx
  434ddf:	89 ce                	mov    %ecx,%esi
  434de1:	48 8b bd 70 ff ff ff 	mov    -0x90(%rbp),%rdi
  434de8:	48 83 c7 10          	add    $0x10,%rdi
  434dec:	48 89 85 f0 fc ff ff 	mov    %rax,-0x310(%rbp)
  434df3:	e8 04 0f 01 00       	callq  445cfc <setEncryptedValueQWord>
  434df8:	48 89 85 e8 fc ff ff 	mov    %rax,-0x318(%rbp)
  434dff:	83 bd ec fd ff ff 00 	cmpl   $0x0,-0x214(%rbp)
  434e06:	74 39                	je     434e41 <pk_parse_key_pkcs1_der+0xdc1>
  434e08:	8b 85 ec fd ff ff    	mov    -0x214(%rbp),%eax
  434e0e:	25 80 ff 00 00       	and    $0xff80,%eax
  434e13:	83 f8 00             	cmp    $0x0,%eax
  434e16:	75 13                	jne    434e2b <pk_parse_key_pkcs1_der+0xdab>
  434e18:	8b 85 ec fd ff ff    	mov    -0x214(%rbp),%eax
  434e1e:	05 00 c3 ff ff       	add    $0xffffc300,%eax
  434e23:	89 85 ec fd ff ff    	mov    %eax,-0x214(%rbp)
  434e29:	eb 0a                	jmp    434e35 <pk_parse_key_pkcs1_der+0xdb5>
  434e2b:	c7 85 ec fd ff ff 00 	movl   $0xffffc300,-0x214(%rbp)
  434e32:	c3 ff ff 
  434e35:	48 8b bd 00 fe ff ff 	mov    -0x200(%rbp),%rdi
  434e3c:	e8 ef 79 00 00       	callq  43c830 <mbedtls_rsa_free>
  434e41:	8b 85 ec fd ff ff    	mov    -0x214(%rbp),%eax
  434e47:	89 85 0c fe ff ff    	mov    %eax,-0x1f4(%rbp)
  434e4d:	8b 85 0c fe ff ff    	mov    -0x1f4(%rbp),%eax
  434e53:	89 85 e4 fc ff ff    	mov    %eax,-0x31c(%rbp)
  434e59:	e8 f8 0a 01 00       	callq  445956 <writeback_cache>
  434e5e:	8b 85 e4 fc ff ff    	mov    -0x31c(%rbp),%eax
  434e64:	48 81 c4 50 03 00 00 	add    $0x350,%rsp
  434e6b:	5d                   	pop    %rbp
  434e6c:	c3                   	retq   
  434e6d:	0f 1f 00             	nopl   (%rax)

0000000000434e70 <pk_parse_key_pkcs8_unencrypted_der>:
  434e70:	55                   	push   %rbp
  434e71:	48 89 e5             	mov    %rsp,%rbp
  434e74:	48 81 ec 50 01 00 00 	sub    $0x150,%rsp
  434e7b:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
  434e82:	48 89 b5 60 ff ff ff 	mov    %rsi,-0xa0(%rbp)
  434e89:	48 89 95 58 ff ff ff 	mov    %rdx,-0xa8(%rbp)
  434e90:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
  434e97:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)
  434e9e:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
  434ea5:	48 03 95 58 ff ff ff 	add    -0xa8(%rbp),%rdx
  434eac:	48 89 95 20 ff ff ff 	mov    %rdx,-0xe0(%rbp)
  434eb3:	c7 85 1c ff ff ff 00 	movl   $0x0,-0xe4(%rbp)
  434eba:	00 00 00 
  434ebd:	48 8b 95 20 ff ff ff 	mov    -0xe0(%rbp),%rdx
  434ec4:	48 8d b5 28 ff ff ff 	lea    -0xd8(%rbp),%rsi
  434ecb:	48 89 75 88          	mov    %rsi,-0x78(%rbp)
  434ecf:	48 89 55 80          	mov    %rdx,-0x80(%rbp)
  434ed3:	48 8d 95 48 ff ff ff 	lea    -0xb8(%rbp),%rdx
  434eda:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
  434ee1:	c7 85 74 ff ff ff 30 	movl   $0x30,-0x8c(%rbp)
  434ee8:	00 00 00 
  434eeb:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
  434eef:	48 8b 75 88          	mov    -0x78(%rbp),%rsi
  434ef3:	48 8b 36             	mov    (%rsi),%rsi
  434ef6:	48 29 f2             	sub    %rsi,%rdx
  434ef9:	48 83 fa 01          	cmp    $0x1,%rdx
  434efd:	7d 09                	jge    434f08 <pk_parse_key_pkcs8_unencrypted_der+0x98>
  434eff:	c7 45 90 a0 ff ff ff 	movl   $0xffffffa0,-0x70(%rbp)
  434f06:	eb 40                	jmp    434f48 <pk_parse_key_pkcs8_unencrypted_der+0xd8>
  434f08:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  434f0c:	48 8b 00             	mov    (%rax),%rax
  434f0f:	0f b6 08             	movzbl (%rax),%ecx
  434f12:	3b 8d 74 ff ff ff    	cmp    -0x8c(%rbp),%ecx
  434f18:	74 09                	je     434f23 <pk_parse_key_pkcs8_unencrypted_der+0xb3>
  434f1a:	c7 45 90 9e ff ff ff 	movl   $0xffffff9e,-0x70(%rbp)
  434f21:	eb 25                	jmp    434f48 <pk_parse_key_pkcs8_unencrypted_der+0xd8>
  434f23:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  434f27:	48 8b 08             	mov    (%rax),%rcx
  434f2a:	48 83 c1 01          	add    $0x1,%rcx
  434f2e:	48 89 08             	mov    %rcx,(%rax)
  434f31:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
  434f35:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
  434f39:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
  434f40:	e8 8b 51 fe ff       	callq  41a0d0 <mbedtls_asn1_get_len>
  434f45:	89 45 90             	mov    %eax,-0x70(%rbp)
  434f48:	8b 45 90             	mov    -0x70(%rbp),%eax
  434f4b:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
  434f51:	83 f8 00             	cmp    $0x0,%eax
  434f54:	74 16                	je     434f6c <pk_parse_key_pkcs8_unencrypted_der+0xfc>
  434f56:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
  434f5c:	05 00 c3 ff ff       	add    $0xffffc300,%eax
  434f61:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
  434f67:	e9 f2 03 00 00       	jmpq   43535e <pk_parse_key_pkcs8_unencrypted_der+0x4ee>
  434f6c:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  434f73:	48 03 85 48 ff ff ff 	add    -0xb8(%rbp),%rax
  434f7a:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
  434f81:	48 8b b5 20 ff ff ff 	mov    -0xe0(%rbp),%rsi
  434f88:	48 8d bd 28 ff ff ff 	lea    -0xd8(%rbp),%rdi
  434f8f:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
  434f96:	e8 b5 53 fe ff       	callq  41a350 <mbedtls_asn1_get_int>
  434f9b:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
  434fa1:	83 f8 00             	cmp    $0x0,%eax
  434fa4:	74 16                	je     434fbc <pk_parse_key_pkcs8_unencrypted_der+0x14c>
  434fa6:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
  434fac:	05 00 c3 ff ff       	add    $0xffffc300,%eax
  434fb1:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
  434fb7:	e9 a2 03 00 00       	jmpq   43535e <pk_parse_key_pkcs8_unencrypted_der+0x4ee>
  434fbc:	83 bd 50 ff ff ff 00 	cmpl   $0x0,-0xb0(%rbp)
  434fc3:	74 16                	je     434fdb <pk_parse_key_pkcs8_unencrypted_der+0x16b>
  434fc5:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
  434fcb:	05 80 c2 ff ff       	add    $0xffffc280,%eax
  434fd0:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
  434fd6:	e9 83 03 00 00       	jmpq   43535e <pk_parse_key_pkcs8_unencrypted_der+0x4ee>
  434fdb:	48 8b b5 20 ff ff ff 	mov    -0xe0(%rbp),%rsi
  434fe2:	48 8d bd 28 ff ff ff 	lea    -0xd8(%rbp),%rdi
  434fe9:	48 8d 95 1c ff ff ff 	lea    -0xe4(%rbp),%rdx
  434ff0:	48 8d 8d 30 ff ff ff 	lea    -0xd0(%rbp),%rcx
  434ff7:	e8 84 03 00 00       	callq  435380 <pk_get_pk_alg>
  434ffc:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
  435002:	83 f8 00             	cmp    $0x0,%eax
  435005:	74 16                	je     43501d <pk_parse_key_pkcs8_unencrypted_der+0x1ad>
  435007:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
  43500d:	05 00 c3 ff ff       	add    $0xffffc300,%eax
  435012:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
  435018:	e9 41 03 00 00       	jmpq   43535e <pk_parse_key_pkcs8_unencrypted_der+0x4ee>
  43501d:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
  435024:	48 8d 8d 28 ff ff ff 	lea    -0xd8(%rbp),%rcx
  43502b:	48 89 4d a8          	mov    %rcx,-0x58(%rbp)
  43502f:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  435033:	48 8d 85 48 ff ff ff 	lea    -0xb8(%rbp),%rax
  43503a:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  43503e:	c7 45 94 04 00 00 00 	movl   $0x4,-0x6c(%rbp)
  435045:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  435049:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
  43504d:	48 8b 09             	mov    (%rcx),%rcx
  435050:	48 29 c8             	sub    %rcx,%rax
  435053:	48 83 f8 01          	cmp    $0x1,%rax
  435057:	7d 09                	jge    435062 <pk_parse_key_pkcs8_unencrypted_der+0x1f2>
  435059:	c7 45 b0 a0 ff ff ff 	movl   $0xffffffa0,-0x50(%rbp)
  435060:	eb 3a                	jmp    43509c <pk_parse_key_pkcs8_unencrypted_der+0x22c>
  435062:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  435066:	48 8b 00             	mov    (%rax),%rax
  435069:	0f b6 08             	movzbl (%rax),%ecx
  43506c:	3b 4d 94             	cmp    -0x6c(%rbp),%ecx
  43506f:	74 09                	je     43507a <pk_parse_key_pkcs8_unencrypted_der+0x20a>
  435071:	c7 45 b0 9e ff ff ff 	movl   $0xffffff9e,-0x50(%rbp)
  435078:	eb 22                	jmp    43509c <pk_parse_key_pkcs8_unencrypted_der+0x22c>
  43507a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  43507e:	48 8b 08             	mov    (%rax),%rcx
  435081:	48 83 c1 01          	add    $0x1,%rcx
  435085:	48 89 08             	mov    %rcx,(%rax)
  435088:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
  43508c:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
  435090:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  435094:	e8 37 50 fe ff       	callq  41a0d0 <mbedtls_asn1_get_len>
  435099:	89 45 b0             	mov    %eax,-0x50(%rbp)
  43509c:	8b 45 b0             	mov    -0x50(%rbp),%eax
  43509f:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
  4350a5:	83 f8 00             	cmp    $0x0,%eax
  4350a8:	74 16                	je     4350c0 <pk_parse_key_pkcs8_unencrypted_der+0x250>
  4350aa:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
  4350b0:	05 00 c3 ff ff       	add    $0xffffc300,%eax
  4350b5:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
  4350bb:	e9 9e 02 00 00       	jmpq   43535e <pk_parse_key_pkcs8_unencrypted_der+0x4ee>
  4350c0:	48 83 bd 48 ff ff ff 	cmpq   $0x1,-0xb8(%rbp)
  4350c7:	01 
  4350c8:	73 0f                	jae    4350d9 <pk_parse_key_pkcs8_unencrypted_der+0x269>
  4350ca:	c7 85 70 ff ff ff a0 	movl   $0xffffc2a0,-0x90(%rbp)
  4350d1:	c2 ff ff 
  4350d4:	e9 85 02 00 00       	jmpq   43535e <pk_parse_key_pkcs8_unencrypted_der+0x4ee>
  4350d9:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax
  4350df:	89 45 b4             	mov    %eax,-0x4c(%rbp)
  4350e2:	83 7d b4 01          	cmpl   $0x1,-0x4c(%rbp)
  4350e6:	75 10                	jne    4350f8 <pk_parse_key_pkcs8_unencrypted_der+0x288>
  4350e8:	48 b8 00 33 45 00 00 	movabs $0x453300,%rax
  4350ef:	00 00 00 
  4350f2:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  4350f6:	eb 08                	jmp    435100 <pk_parse_key_pkcs8_unencrypted_der+0x290>
  4350f8:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
  4350ff:	00 
  435100:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  435104:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
  43510b:	48 83 f8 00          	cmp    $0x0,%rax
  43510f:	75 0f                	jne    435120 <pk_parse_key_pkcs8_unencrypted_der+0x2b0>
  435111:	c7 85 70 ff ff ff 80 	movl   $0xffffc380,-0x90(%rbp)
  435118:	c3 ff ff 
  43511b:	e9 3e 02 00 00       	jmpq   43535e <pk_parse_key_pkcs8_unencrypted_der+0x4ee>
  435120:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  435127:	48 8b 8d 10 ff ff ff 	mov    -0xf0(%rbp),%rcx
  43512e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  435132:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  435136:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  43513b:	74 12                	je     43514f <pk_parse_key_pkcs8_unencrypted_der+0x2df>
  43513d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  435141:	48 89 c7             	mov    %rax,%rdi
  435144:	e8 ff 0f 01 00       	callq  446148 <getDecryptedValueQWord>
  435149:	48 83 f8 00          	cmp    $0x0,%rax
  43514d:	74 09                	je     435158 <pk_parse_key_pkcs8_unencrypted_der+0x2e8>
  43514f:	c7 45 ec 80 c1 ff ff 	movl   $0xffffc180,-0x14(%rbp)
  435156:	eb 66                	jmp    4351be <pk_parse_key_pkcs8_unencrypted_der+0x34e>
  435158:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  43515c:	48 05 90 00 00 00    	add    $0x90,%rax
  435162:	48 89 c7             	mov    %rax,%rdi
  435165:	e8 de 0f 01 00       	callq  446148 <getDecryptedValueQWord>
  43516a:	ff d0                	callq  *%rax
  43516c:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  435170:	48 83 c7 08          	add    $0x8,%rdi
  435174:	48 89 c6             	mov    %rax,%rsi
  435177:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
  43517e:	e8 79 0b 01 00       	callq  445cfc <setEncryptedValueQWord>
  435183:	48 8b b5 08 ff ff ff 	mov    -0xf8(%rbp),%rsi
  43518a:	48 83 fe 00          	cmp    $0x0,%rsi
  43518e:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
  435195:	75 09                	jne    4351a0 <pk_parse_key_pkcs8_unencrypted_der+0x330>
  435197:	c7 45 ec 80 c0 ff ff 	movl   $0xffffc080,-0x14(%rbp)
  43519e:	eb 1e                	jmp    4351be <pk_parse_key_pkcs8_unencrypted_der+0x34e>
  4351a0:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  4351a4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4351a8:	48 89 c7             	mov    %rax,%rdi
  4351ab:	e8 4c 0b 01 00       	callq  445cfc <setEncryptedValueQWord>
  4351b0:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  4351b7:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
  4351be:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4351c1:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
  4351c7:	83 f8 00             	cmp    $0x0,%eax
  4351ca:	74 11                	je     4351dd <pk_parse_key_pkcs8_unencrypted_der+0x36d>
  4351cc:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
  4351d2:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
  4351d8:	e9 81 01 00 00       	jmpq   43535e <pk_parse_key_pkcs8_unencrypted_der+0x4ee>
  4351dd:	83 bd 1c ff ff ff 01 	cmpl   $0x1,-0xe4(%rbp)
  4351e4:	0f 85 5e 01 00 00    	jne    435348 <pk_parse_key_pkcs8_unencrypted_der+0x4d8>
  4351ea:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  4351f1:	48 89 c1             	mov    %rax,%rcx
  4351f4:	48 89 cf             	mov    %rcx,%rdi
  4351f7:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
  4351fe:	e8 45 0f 01 00       	callq  446148 <getDecryptedValueQWord>
  435203:	48 8b 8d f0 fe ff ff 	mov    -0x110(%rbp),%rcx
  43520a:	48 83 c1 08          	add    $0x8,%rcx
  43520e:	48 89 cf             	mov    %rcx,%rdi
  435211:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
  435218:	e8 2b 0f 01 00       	callq  446148 <getDecryptedValueQWord>
  43521d:	48 8b 8d e8 fe ff ff 	mov    -0x118(%rbp),%rcx
  435224:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
  435228:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43522c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  435230:	48 8b b5 28 ff ff ff 	mov    -0xd8(%rbp),%rsi
  435237:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
  43523e:	48 89 c7             	mov    %rax,%rdi
  435241:	e8 3a ee ff ff       	callq  434080 <pk_parse_key_pkcs1_der>
  435246:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
  43524c:	83 f8 00             	cmp    $0x0,%eax
  43524f:	0f 84 f1 00 00 00    	je     435346 <pk_parse_key_pkcs8_unencrypted_der+0x4d6>
  435255:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  43525c:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  435260:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  435265:	75 05                	jne    43526c <pk_parse_key_pkcs8_unencrypted_der+0x3fc>
  435267:	e9 cc 00 00 00       	jmpq   435338 <pk_parse_key_pkcs8_unencrypted_der+0x4c8>
  43526c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  435270:	48 89 c7             	mov    %rax,%rdi
  435273:	e8 d0 0e 01 00       	callq  446148 <getDecryptedValueQWord>
  435278:	48 83 f8 00          	cmp    $0x0,%rax
  43527c:	74 3a                	je     4352b8 <pk_parse_key_pkcs8_unencrypted_der+0x448>
  43527e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  435282:	48 89 c7             	mov    %rax,%rdi
  435285:	e8 be 0e 01 00       	callq  446148 <getDecryptedValueQWord>
  43528a:	48 05 a0 00 00 00    	add    $0xa0,%rax
  435290:	48 89 c7             	mov    %rax,%rdi
  435293:	e8 b0 0e 01 00       	callq  446148 <getDecryptedValueQWord>
  435298:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  43529c:	48 83 c7 08          	add    $0x8,%rdi
  4352a0:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
  4352a7:	e8 9c 0e 01 00       	callq  446148 <getDecryptedValueQWord>
  4352ac:	48 89 c7             	mov    %rax,%rdi
  4352af:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
  4352b6:	ff d0                	callq  *%rax
  4352b8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4352bc:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  4352c0:	48 c7 45 c8 10 00 00 	movq   $0x10,-0x38(%rbp)
  4352c7:	00 
  4352c8:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  4352cf:	00 
  4352d0:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  4352d4:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  4352d8:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
  4352df:	48 89 8d d0 fe ff ff 	mov    %rcx,-0x130(%rbp)
  4352e6:	48 89 95 c8 fe ff ff 	mov    %rdx,-0x138(%rbp)
  4352ed:	e8 64 06 01 00       	callq  445956 <writeback_cache>
  4352f2:	48 8b bd d0 fe ff ff 	mov    -0x130(%rbp),%rdi
  4352f9:	48 8b b5 c8 fe ff ff 	mov    -0x138(%rbp),%rsi
  435300:	e8 e0 13 01 00       	callq  4466e5 <decryptArrayForLibCall>
  435305:	31 f6                	xor    %esi,%esi
  435307:	48 8b bd d0 fe ff ff 	mov    -0x130(%rbp),%rdi
  43530e:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
  435315:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
  43531c:	ff d0                	callq  *%rax
  43531e:	48 8b bd d0 fe ff ff 	mov    -0x130(%rbp),%rdi
  435325:	48 8b b5 c8 fe ff ff 	mov    -0x138(%rbp),%rsi
  43532c:	48 89 85 c0 fe ff ff 	mov    %rax,-0x140(%rbp)
  435333:	e8 1e 11 01 00       	callq  446456 <encryptArrayForLibCall>
  435338:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
  43533e:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
  435344:	eb 18                	jmp    43535e <pk_parse_key_pkcs8_unencrypted_der+0x4ee>
  435346:	eb 0c                	jmp    435354 <pk_parse_key_pkcs8_unencrypted_der+0x4e4>
  435348:	c7 85 70 ff ff ff 80 	movl   $0xffffc380,-0x90(%rbp)
  43534f:	c3 ff ff 
  435352:	eb 0a                	jmp    43535e <pk_parse_key_pkcs8_unencrypted_der+0x4ee>
  435354:	c7 85 70 ff ff ff 00 	movl   $0x0,-0x90(%rbp)
  43535b:	00 00 00 
  43535e:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
  435364:	89 85 bc fe ff ff    	mov    %eax,-0x144(%rbp)
  43536a:	e8 e7 05 01 00       	callq  445956 <writeback_cache>
  43536f:	8b 85 bc fe ff ff    	mov    -0x144(%rbp),%eax
  435375:	48 81 c4 50 01 00 00 	add    $0x150,%rsp
  43537c:	5d                   	pop    %rbp
  43537d:	c3                   	retq   
  43537e:	66 90                	xchg   %ax,%ax

0000000000435380 <pk_get_pk_alg>:
  435380:	55                   	push   %rbp
  435381:	48 89 e5             	mov    %rsp,%rbp
  435384:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
  43538b:	31 c0                	xor    %eax,%eax
  43538d:	41 b8 18 00 00 00    	mov    $0x18,%r8d
  435393:	45 89 c1             	mov    %r8d,%r9d
  435396:	48 89 7d b0          	mov    %rdi,-0x50(%rbp)
  43539a:	48 89 75 a8          	mov    %rsi,-0x58(%rbp)
  43539e:	48 89 55 a0          	mov    %rdx,-0x60(%rbp)
  4353a2:	48 89 4d 98          	mov    %rcx,-0x68(%rbp)
  4353a6:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
  4353aa:	48 89 cf             	mov    %rcx,%rdi
  4353ad:	89 c6                	mov    %eax,%esi
  4353af:	4c 89 ca             	mov    %r9,%rdx
  4353b2:	e8 69 bc fc ff       	callq  401020 <memset@plt>
  4353b7:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
  4353bb:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
  4353bf:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
  4353c3:	48 8d 95 78 ff ff ff 	lea    -0x88(%rbp),%rdx
  4353ca:	e8 01 52 fe ff       	callq  41a5d0 <mbedtls_asn1_get_alg>
  4353cf:	89 45 94             	mov    %eax,-0x6c(%rbp)
  4353d2:	83 f8 00             	cmp    $0x0,%eax
  4353d5:	74 10                	je     4353e7 <pk_get_pk_alg+0x67>
  4353d7:	8b 45 94             	mov    -0x6c(%rbp),%eax
  4353da:	05 80 c5 ff ff       	add    $0xffffc580,%eax
  4353df:	89 45 bc             	mov    %eax,-0x44(%rbp)
  4353e2:	e9 23 01 00 00       	jmpq   43550a <pk_get_pk_alg+0x18a>
  4353e7:	48 b8 e0 e0 44 00 00 	movabs $0x44e0e0,%rax
  4353ee:	00 00 00 
  4353f1:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
  4353f5:	48 8d 95 78 ff ff ff 	lea    -0x88(%rbp),%rdx
  4353fc:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
  435400:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
  435404:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  435408:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
  43540c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  435410:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  435414:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  435418:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  43541d:	74 07                	je     435426 <pk_get_pk_alg+0xa6>
  43541f:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  435424:	75 0a                	jne    435430 <pk_get_pk_alg+0xb0>
  435426:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  43542d:	00 
  43542e:	eb 67                	jmp    435497 <pk_get_pk_alg+0x117>
  435430:	eb 00                	jmp    435432 <pk_get_pk_alg+0xb2>
  435432:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  435436:	48 83 38 00          	cmpq   $0x0,(%rax)
  43543a:	74 53                	je     43548f <pk_get_pk_alg+0x10f>
  43543c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  435440:	48 8b 40 08          	mov    0x8(%rax),%rax
  435444:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  435448:	48 3b 41 08          	cmp    0x8(%rcx),%rax
  43544c:	75 2b                	jne    435479 <pk_get_pk_alg+0xf9>
  43544e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  435452:	48 8b 38             	mov    (%rax),%rdi
  435455:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  435459:	48 8b 70 10          	mov    0x10(%rax),%rsi
  43545d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  435461:	48 8b 50 08          	mov    0x8(%rax),%rdx
  435465:	e8 66 bd fc ff       	callq  4011d0 <memcmp@plt>
  43546a:	83 f8 00             	cmp    $0x0,%eax
  43546d:	75 0a                	jne    435479 <pk_get_pk_alg+0xf9>
  43546f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  435473:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  435477:	eb 1e                	jmp    435497 <pk_get_pk_alg+0x117>
  435479:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43547d:	48 83 c0 28          	add    $0x28,%rax
  435481:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  435485:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  435489:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  43548d:	eb a3                	jmp    435432 <pk_get_pk_alg+0xb2>
  43548f:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  435496:	00 
  435497:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43549b:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  43549f:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  4354a4:	75 09                	jne    4354af <pk_get_pk_alg+0x12f>
  4354a6:	c7 45 dc d2 ff ff ff 	movl   $0xffffffd2,-0x24(%rbp)
  4354ad:	eb 14                	jmp    4354c3 <pk_get_pk_alg+0x143>
  4354af:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4354b3:	8b 48 20             	mov    0x20(%rax),%ecx
  4354b6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4354ba:	89 08                	mov    %ecx,(%rax)
  4354bc:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
  4354c3:	8b 45 dc             	mov    -0x24(%rbp),%eax
  4354c6:	83 f8 00             	cmp    $0x0,%eax
  4354c9:	74 09                	je     4354d4 <pk_get_pk_alg+0x154>
  4354cb:	c7 45 bc 80 c3 ff ff 	movl   $0xffffc380,-0x44(%rbp)
  4354d2:	eb 36                	jmp    43550a <pk_get_pk_alg+0x18a>
  4354d4:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  4354d8:	83 38 01             	cmpl   $0x1,(%rax)
  4354db:	75 26                	jne    435503 <pk_get_pk_alg+0x183>
  4354dd:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  4354e1:	83 38 05             	cmpl   $0x5,(%rax)
  4354e4:	74 09                	je     4354ef <pk_get_pk_alg+0x16f>
  4354e6:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  4354ea:	83 38 00             	cmpl   $0x0,(%rax)
  4354ed:	75 0b                	jne    4354fa <pk_get_pk_alg+0x17a>
  4354ef:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  4354f3:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
  4354f8:	74 09                	je     435503 <pk_get_pk_alg+0x183>
  4354fa:	c7 45 bc 80 c5 ff ff 	movl   $0xffffc580,-0x44(%rbp)
  435501:	eb 07                	jmp    43550a <pk_get_pk_alg+0x18a>
  435503:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%rbp)
  43550a:	8b 45 bc             	mov    -0x44(%rbp),%eax
  43550d:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
  435513:	e8 3e 04 01 00       	callq  445956 <writeback_cache>
  435518:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
  43551e:	48 81 c4 90 00 00 00 	add    $0x90,%rsp
  435525:	5d                   	pop    %rbp
  435526:	c3                   	retq   
  435527:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  43552e:	00 00 

0000000000435530 <mbedtls_pk_parse_public_key>:
  435530:	55                   	push   %rbp
  435531:	48 89 e5             	mov    %rsp,%rbp
  435534:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
  43553b:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  43553f:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  435543:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
  435547:	eb 00                	jmp    435549 <mbedtls_pk_parse_public_key+0x19>
  435549:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  43554e:	75 0c                	jne    43555c <mbedtls_pk_parse_public_key+0x2c>
  435550:	c7 45 fc 00 c3 ff ff 	movl   $0xffffc300,-0x4(%rbp)
  435557:	e9 d2 02 00 00       	jmpq   43582e <mbedtls_pk_parse_public_key+0x2fe>
  43555c:	eb 00                	jmp    43555e <mbedtls_pk_parse_public_key+0x2e>
  43555e:	eb 00                	jmp    435560 <mbedtls_pk_parse_public_key+0x30>
  435560:	48 8d 7d a8          	lea    -0x58(%rbp),%rdi
  435564:	e8 57 86 ff ff       	callq  42dbc0 <mbedtls_pem_init>
  435569:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  43556d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  435571:	48 83 e8 01          	sub    $0x1,%rax
  435575:	0f b6 0c 07          	movzbl (%rdi,%rax,1),%ecx
  435579:	83 f9 00             	cmp    $0x0,%ecx
  43557c:	74 09                	je     435587 <mbedtls_pk_parse_public_key+0x57>
  43557e:	c7 45 dc 80 ef ff ff 	movl   $0xffffef80,-0x24(%rbp)
  435585:	eb 4a                	jmp    4355d1 <mbedtls_pk_parse_public_key+0xa1>
  435587:	31 c0                	xor    %eax,%eax
  435589:	89 c1                	mov    %eax,%ecx
  43558b:	48 ba c0 8c 44 00 00 	movabs $0x448cc0,%rdx
  435592:	00 00 00 
  435595:	48 be a0 8c 44 00 00 	movabs $0x448ca0,%rsi
  43559c:	00 00 00 
  43559f:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  4355a3:	4c 8d 45 a8          	lea    -0x58(%rbp),%r8
  4355a7:	48 89 7d a0          	mov    %rdi,-0x60(%rbp)
  4355ab:	4c 89 c7             	mov    %r8,%rdi
  4355ae:	4c 8b 45 a0          	mov    -0x60(%rbp),%r8
  4355b2:	48 89 4d 98          	mov    %rcx,-0x68(%rbp)
  4355b6:	4c 89 c1             	mov    %r8,%rcx
  4355b9:	4c 8b 45 98          	mov    -0x68(%rbp),%r8
  4355bd:	4c 8b 4d 98          	mov    -0x68(%rbp),%r9
  4355c1:	4c 8d 55 c0          	lea    -0x40(%rbp),%r10
  4355c5:	4c 89 14 24          	mov    %r10,(%rsp)
  4355c9:	e8 22 86 ff ff       	callq  42dbf0 <mbedtls_pem_read_buffer>
  4355ce:	89 45 dc             	mov    %eax,-0x24(%rbp)
  4355d1:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
  4355d5:	0f 85 99 00 00 00    	jne    435674 <mbedtls_pk_parse_public_key+0x144>
  4355db:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  4355df:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  4355e3:	bf 01 00 00 00       	mov    $0x1,%edi
  4355e8:	e8 13 9c ff ff       	callq  42f200 <mbedtls_pk_info_from_type>
  4355ed:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  4355f1:	48 83 f8 00          	cmp    $0x0,%rax
  4355f5:	75 0c                	jne    435603 <mbedtls_pk_parse_public_key+0xd3>
  4355f7:	c7 45 fc 80 c3 ff ff 	movl   $0xffffc380,-0x4(%rbp)
  4355fe:	e9 2b 02 00 00       	jmpq   43582e <mbedtls_pk_parse_public_key+0x2fe>
  435603:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  435607:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  43560b:	e8 40 9c ff ff       	callq  42f250 <mbedtls_pk_setup>
  435610:	89 45 dc             	mov    %eax,-0x24(%rbp)
  435613:	83 f8 00             	cmp    $0x0,%eax
  435616:	74 0b                	je     435623 <mbedtls_pk_parse_public_key+0xf3>
  435618:	8b 45 dc             	mov    -0x24(%rbp),%eax
  43561b:	89 45 fc             	mov    %eax,-0x4(%rbp)
  43561e:	e9 0b 02 00 00       	jmpq   43582e <mbedtls_pk_parse_public_key+0x2fe>
  435623:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  435627:	48 03 45 b0          	add    -0x50(%rbp),%rax
  43562b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  43562f:	48 8b 39             	mov    (%rcx),%rdi
  435632:	48 8b 71 08          	mov    0x8(%rcx),%rsi
  435636:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  43563a:	e8 11 ea ff ff       	callq  434050 <mbedtls_pk_rsa>
  43563f:	48 8d 7d d0          	lea    -0x30(%rbp),%rdi
  435643:	48 8b 75 90          	mov    -0x70(%rbp),%rsi
  435647:	48 89 c2             	mov    %rax,%rdx
  43564a:	e8 01 02 00 00       	callq  435850 <pk_get_rsapubkey>
  43564f:	89 45 dc             	mov    %eax,-0x24(%rbp)
  435652:	83 f8 00             	cmp    $0x0,%eax
  435655:	74 09                	je     435660 <mbedtls_pk_parse_public_key+0x130>
  435657:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  43565b:	e8 30 9b ff ff       	callq  42f190 <mbedtls_pk_free>
  435660:	48 8d 7d a8          	lea    -0x58(%rbp),%rdi
  435664:	e8 87 9a ff ff       	callq  42f0f0 <mbedtls_pem_free>
  435669:	8b 45 dc             	mov    -0x24(%rbp),%eax
  43566c:	89 45 fc             	mov    %eax,-0x4(%rbp)
  43566f:	e9 ba 01 00 00       	jmpq   43582e <mbedtls_pk_parse_public_key+0x2fe>
  435674:	81 7d dc 80 ef ff ff 	cmpl   $0xffffef80,-0x24(%rbp)
  43567b:	74 14                	je     435691 <mbedtls_pk_parse_public_key+0x161>
  43567d:	48 8d 7d a8          	lea    -0x58(%rbp),%rdi
  435681:	e8 6a 9a ff ff       	callq  42f0f0 <mbedtls_pem_free>
  435686:	8b 45 dc             	mov    -0x24(%rbp),%eax
  435689:	89 45 fc             	mov    %eax,-0x4(%rbp)
  43568c:	e9 9d 01 00 00       	jmpq   43582e <mbedtls_pk_parse_public_key+0x2fe>
  435691:	eb 00                	jmp    435693 <mbedtls_pk_parse_public_key+0x163>
  435693:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  435697:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  43569b:	48 83 e9 01          	sub    $0x1,%rcx
  43569f:	0f b6 14 08          	movzbl (%rax,%rcx,1),%edx
  4356a3:	83 fa 00             	cmp    $0x0,%edx
  4356a6:	74 09                	je     4356b1 <mbedtls_pk_parse_public_key+0x181>
  4356a8:	c7 45 dc 80 ef ff ff 	movl   $0xffffef80,-0x24(%rbp)
  4356af:	eb 4a                	jmp    4356fb <mbedtls_pk_parse_public_key+0x1cb>
  4356b1:	31 c0                	xor    %eax,%eax
  4356b3:	89 c1                	mov    %eax,%ecx
  4356b5:	48 ba 00 8d 44 00 00 	movabs $0x448d00,%rdx
  4356bc:	00 00 00 
  4356bf:	48 be e0 8c 44 00 00 	movabs $0x448ce0,%rsi
  4356c6:	00 00 00 
  4356c9:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  4356cd:	4c 8d 45 a8          	lea    -0x58(%rbp),%r8
  4356d1:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
  4356d5:	4c 89 c7             	mov    %r8,%rdi
  4356d8:	4c 8b 45 88          	mov    -0x78(%rbp),%r8
  4356dc:	48 89 4d 80          	mov    %rcx,-0x80(%rbp)
  4356e0:	4c 89 c1             	mov    %r8,%rcx
  4356e3:	4c 8b 45 80          	mov    -0x80(%rbp),%r8
  4356e7:	4c 8b 4d 80          	mov    -0x80(%rbp),%r9
  4356eb:	4c 8d 55 c0          	lea    -0x40(%rbp),%r10
  4356ef:	4c 89 14 24          	mov    %r10,(%rsp)
  4356f3:	e8 f8 84 ff ff       	callq  42dbf0 <mbedtls_pem_read_buffer>
  4356f8:	89 45 dc             	mov    %eax,-0x24(%rbp)
  4356fb:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
  4356ff:	75 37                	jne    435738 <mbedtls_pk_parse_public_key+0x208>
  435701:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  435705:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  435709:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  43570d:	48 03 45 b0          	add    -0x50(%rbp),%rax
  435711:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  435715:	48 8d 7d d0          	lea    -0x30(%rbp),%rdi
  435719:	48 89 c6             	mov    %rax,%rsi
  43571c:	e8 bf 04 00 00       	callq  435be0 <mbedtls_pk_parse_subpubkey>
  435721:	89 45 dc             	mov    %eax,-0x24(%rbp)
  435724:	48 8d 7d a8          	lea    -0x58(%rbp),%rdi
  435728:	e8 c3 99 ff ff       	callq  42f0f0 <mbedtls_pem_free>
  43572d:	8b 45 dc             	mov    -0x24(%rbp),%eax
  435730:	89 45 fc             	mov    %eax,-0x4(%rbp)
  435733:	e9 f6 00 00 00       	jmpq   43582e <mbedtls_pk_parse_public_key+0x2fe>
  435738:	81 7d dc 80 ef ff ff 	cmpl   $0xffffef80,-0x24(%rbp)
  43573f:	74 14                	je     435755 <mbedtls_pk_parse_public_key+0x225>
  435741:	48 8d 7d a8          	lea    -0x58(%rbp),%rdi
  435745:	e8 a6 99 ff ff       	callq  42f0f0 <mbedtls_pem_free>
  43574a:	8b 45 dc             	mov    -0x24(%rbp),%eax
  43574d:	89 45 fc             	mov    %eax,-0x4(%rbp)
  435750:	e9 d9 00 00 00       	jmpq   43582e <mbedtls_pk_parse_public_key+0x2fe>
  435755:	eb 00                	jmp    435757 <mbedtls_pk_parse_public_key+0x227>
  435757:	48 8d 7d a8          	lea    -0x58(%rbp),%rdi
  43575b:	e8 90 99 ff ff       	callq  42f0f0 <mbedtls_pem_free>
  435760:	bf 01 00 00 00       	mov    $0x1,%edi
  435765:	e8 96 9a ff ff       	callq  42f200 <mbedtls_pk_info_from_type>
  43576a:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  43576e:	48 83 f8 00          	cmp    $0x0,%rax
  435772:	75 0c                	jne    435780 <mbedtls_pk_parse_public_key+0x250>
  435774:	c7 45 fc 80 c3 ff ff 	movl   $0xffffc380,-0x4(%rbp)
  43577b:	e9 ae 00 00 00       	jmpq   43582e <mbedtls_pk_parse_public_key+0x2fe>
  435780:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  435784:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  435788:	e8 c3 9a ff ff       	callq  42f250 <mbedtls_pk_setup>
  43578d:	89 45 dc             	mov    %eax,-0x24(%rbp)
  435790:	83 f8 00             	cmp    $0x0,%eax
  435793:	74 0b                	je     4357a0 <mbedtls_pk_parse_public_key+0x270>
  435795:	8b 45 dc             	mov    -0x24(%rbp),%eax
  435798:	89 45 fc             	mov    %eax,-0x4(%rbp)
  43579b:	e9 8e 00 00 00       	jmpq   43582e <mbedtls_pk_parse_public_key+0x2fe>
  4357a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4357a4:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  4357a8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4357ac:	48 03 45 e0          	add    -0x20(%rbp),%rax
  4357b0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  4357b4:	48 8b 39             	mov    (%rcx),%rdi
  4357b7:	48 8b 71 08          	mov    0x8(%rcx),%rsi
  4357bb:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  4357c2:	e8 89 e8 ff ff       	callq  434050 <mbedtls_pk_rsa>
  4357c7:	48 8d 7d d0          	lea    -0x30(%rbp),%rdi
  4357cb:	48 8b b5 78 ff ff ff 	mov    -0x88(%rbp),%rsi
  4357d2:	48 89 c2             	mov    %rax,%rdx
  4357d5:	e8 76 00 00 00       	callq  435850 <pk_get_rsapubkey>
  4357da:	89 45 dc             	mov    %eax,-0x24(%rbp)
  4357dd:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
  4357e1:	75 08                	jne    4357eb <mbedtls_pk_parse_public_key+0x2bb>
  4357e3:	8b 45 dc             	mov    -0x24(%rbp),%eax
  4357e6:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4357e9:	eb 43                	jmp    43582e <mbedtls_pk_parse_public_key+0x2fe>
  4357eb:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  4357ef:	e8 9c 99 ff ff       	callq  42f190 <mbedtls_pk_free>
  4357f4:	81 7d dc 9e c4 ff ff 	cmpl   $0xffffc49e,-0x24(%rbp)
  4357fb:	74 08                	je     435805 <mbedtls_pk_parse_public_key+0x2d5>
  4357fd:	8b 45 dc             	mov    -0x24(%rbp),%eax
  435800:	89 45 fc             	mov    %eax,-0x4(%rbp)
  435803:	eb 29                	jmp    43582e <mbedtls_pk_parse_public_key+0x2fe>
  435805:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  435809:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  43580d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  435811:	48 03 45 e0          	add    -0x20(%rbp),%rax
  435815:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  435819:	48 8d 7d d0          	lea    -0x30(%rbp),%rdi
  43581d:	48 89 c6             	mov    %rax,%rsi
  435820:	e8 bb 03 00 00       	callq  435be0 <mbedtls_pk_parse_subpubkey>
  435825:	89 45 dc             	mov    %eax,-0x24(%rbp)
  435828:	8b 45 dc             	mov    -0x24(%rbp),%eax
  43582b:	89 45 fc             	mov    %eax,-0x4(%rbp)
  43582e:	8b 45 fc             	mov    -0x4(%rbp),%eax
  435831:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
  435837:	e8 1a 01 01 00       	callq  445956 <writeback_cache>
  43583c:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
  435842:	48 81 c4 a0 00 00 00 	add    $0xa0,%rsp
  435849:	5d                   	pop    %rbp
  43584a:	c3                   	retq   
  43584b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000435850 <pk_get_rsapubkey>:
  435850:	55                   	push   %rbp
  435851:	48 89 e5             	mov    %rsp,%rbp
  435854:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
  43585b:	48 89 7d 90          	mov    %rdi,-0x70(%rbp)
  43585f:	48 89 75 88          	mov    %rsi,-0x78(%rbp)
  435863:	48 89 55 80          	mov    %rdx,-0x80(%rbp)
  435867:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
  43586b:	48 8b 75 88          	mov    -0x78(%rbp),%rsi
  43586f:	48 89 55 b0          	mov    %rdx,-0x50(%rbp)
  435873:	48 89 75 a8          	mov    %rsi,-0x58(%rbp)
  435877:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
  43587e:	48 89 55 a0          	mov    %rdx,-0x60(%rbp)
  435882:	c7 45 9c 30 00 00 00 	movl   $0x30,-0x64(%rbp)
  435889:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
  43588d:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
  435891:	48 8b 36             	mov    (%rsi),%rsi
  435894:	48 29 f2             	sub    %rsi,%rdx
  435897:	48 83 fa 01          	cmp    $0x1,%rdx
  43589b:	7d 09                	jge    4358a6 <pk_get_rsapubkey+0x56>
  43589d:	c7 45 b8 a0 ff ff ff 	movl   $0xffffffa0,-0x48(%rbp)
  4358a4:	eb 3a                	jmp    4358e0 <pk_get_rsapubkey+0x90>
  4358a6:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  4358aa:	48 8b 00             	mov    (%rax),%rax
  4358ad:	0f b6 08             	movzbl (%rax),%ecx
  4358b0:	3b 4d 9c             	cmp    -0x64(%rbp),%ecx
  4358b3:	74 09                	je     4358be <pk_get_rsapubkey+0x6e>
  4358b5:	c7 45 b8 9e ff ff ff 	movl   $0xffffff9e,-0x48(%rbp)
  4358bc:	eb 22                	jmp    4358e0 <pk_get_rsapubkey+0x90>
  4358be:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  4358c2:	48 8b 08             	mov    (%rax),%rcx
  4358c5:	48 83 c1 01          	add    $0x1,%rcx
  4358c9:	48 89 08             	mov    %rcx,(%rax)
  4358cc:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
  4358d0:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
  4358d4:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
  4358d8:	e8 f3 47 fe ff       	callq  41a0d0 <mbedtls_asn1_get_len>
  4358dd:	89 45 b8             	mov    %eax,-0x48(%rbp)
  4358e0:	8b 45 b8             	mov    -0x48(%rbp),%eax
  4358e3:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
  4358e9:	83 f8 00             	cmp    $0x0,%eax
  4358ec:	74 13                	je     435901 <pk_get_rsapubkey+0xb1>
  4358ee:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
  4358f4:	05 00 c5 ff ff       	add    $0xffffc500,%eax
  4358f9:	89 45 98             	mov    %eax,-0x68(%rbp)
  4358fc:	e9 b5 02 00 00       	jmpq   435bb6 <pk_get_rsapubkey+0x366>
  435901:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  435905:	48 8b 00             	mov    (%rax),%rax
  435908:	48 03 85 70 ff ff ff 	add    -0x90(%rbp),%rax
  43590f:	48 3b 45 88          	cmp    -0x78(%rbp),%rax
  435913:	74 0c                	je     435921 <pk_get_rsapubkey+0xd1>
  435915:	c7 45 98 9a c4 ff ff 	movl   $0xffffc49a,-0x68(%rbp)
  43591c:	e9 95 02 00 00       	jmpq   435bb6 <pk_get_rsapubkey+0x366>
  435921:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  435925:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
  435929:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  43592d:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
  435931:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
  435938:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  43593c:	c7 45 bc 02 00 00 00 	movl   $0x2,-0x44(%rbp)
  435943:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  435947:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  43594b:	48 8b 09             	mov    (%rcx),%rcx
  43594e:	48 29 c8             	sub    %rcx,%rax
  435951:	48 83 f8 01          	cmp    $0x1,%rax
  435955:	7d 09                	jge    435960 <pk_get_rsapubkey+0x110>
  435957:	c7 45 d8 a0 ff ff ff 	movl   $0xffffffa0,-0x28(%rbp)
  43595e:	eb 3a                	jmp    43599a <pk_get_rsapubkey+0x14a>
  435960:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  435964:	48 8b 00             	mov    (%rax),%rax
  435967:	0f b6 08             	movzbl (%rax),%ecx
  43596a:	3b 4d bc             	cmp    -0x44(%rbp),%ecx
  43596d:	74 09                	je     435978 <pk_get_rsapubkey+0x128>
  43596f:	c7 45 d8 9e ff ff ff 	movl   $0xffffff9e,-0x28(%rbp)
  435976:	eb 22                	jmp    43599a <pk_get_rsapubkey+0x14a>
  435978:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  43597c:	48 8b 08             	mov    (%rax),%rcx
  43597f:	48 83 c1 01          	add    $0x1,%rcx
  435983:	48 89 08             	mov    %rcx,(%rax)
  435986:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  43598a:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  43598e:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  435992:	e8 39 47 fe ff       	callq  41a0d0 <mbedtls_asn1_get_len>
  435997:	89 45 d8             	mov    %eax,-0x28(%rbp)
  43599a:	8b 45 d8             	mov    -0x28(%rbp),%eax
  43599d:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
  4359a3:	83 f8 00             	cmp    $0x0,%eax
  4359a6:	74 13                	je     4359bb <pk_get_rsapubkey+0x16b>
  4359a8:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
  4359ae:	05 00 c5 ff ff       	add    $0xffffc500,%eax
  4359b3:	89 45 98             	mov    %eax,-0x68(%rbp)
  4359b6:	e9 fb 01 00 00       	jmpq   435bb6 <pk_get_rsapubkey+0x366>
  4359bb:	31 c0                	xor    %eax,%eax
  4359bd:	89 c1                	mov    %eax,%ecx
  4359bf:	48 8b 7d 80          	mov    -0x80(%rbp),%rdi
  4359c3:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
  4359c7:	48 8b 32             	mov    (%rdx),%rsi
  4359ca:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
  4359d1:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
  4359d8:	4c 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%r8
  4359df:	4c 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%r9
  4359e6:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
  4359ed:	00 
  4359ee:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
  4359f5:	00 00 
  4359f7:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
  4359fe:	00 00 
  435a00:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
  435a07:	00 00 
  435a09:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
  435a10:	00 00 
  435a12:	e8 99 06 00 00       	callq  4360b0 <mbedtls_rsa_import_raw>
  435a17:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
  435a1d:	83 f8 00             	cmp    $0x0,%eax
  435a20:	74 0c                	je     435a2e <pk_get_rsapubkey+0x1de>
  435a22:	c7 45 98 00 c5 ff ff 	movl   $0xffffc500,-0x68(%rbp)
  435a29:	e9 88 01 00 00       	jmpq   435bb6 <pk_get_rsapubkey+0x366>
  435a2e:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  435a35:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  435a39:	48 03 01             	add    (%rcx),%rax
  435a3c:	48 89 01             	mov    %rax,(%rcx)
  435a3f:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  435a43:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
  435a47:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  435a4b:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
  435a4f:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
  435a56:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  435a5a:	c7 45 dc 02 00 00 00 	movl   $0x2,-0x24(%rbp)
  435a61:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  435a65:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  435a69:	48 8b 09             	mov    (%rcx),%rcx
  435a6c:	48 29 c8             	sub    %rcx,%rax
  435a6f:	48 83 f8 01          	cmp    $0x1,%rax
  435a73:	7d 09                	jge    435a7e <pk_get_rsapubkey+0x22e>
  435a75:	c7 45 fc a0 ff ff ff 	movl   $0xffffffa0,-0x4(%rbp)
  435a7c:	eb 3a                	jmp    435ab8 <pk_get_rsapubkey+0x268>
  435a7e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  435a82:	48 8b 00             	mov    (%rax),%rax
  435a85:	0f b6 08             	movzbl (%rax),%ecx
  435a88:	3b 4d dc             	cmp    -0x24(%rbp),%ecx
  435a8b:	74 09                	je     435a96 <pk_get_rsapubkey+0x246>
  435a8d:	c7 45 fc 9e ff ff ff 	movl   $0xffffff9e,-0x4(%rbp)
  435a94:	eb 22                	jmp    435ab8 <pk_get_rsapubkey+0x268>
  435a96:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  435a9a:	48 8b 08             	mov    (%rax),%rcx
  435a9d:	48 83 c1 01          	add    $0x1,%rcx
  435aa1:	48 89 08             	mov    %rcx,(%rax)
  435aa4:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  435aa8:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  435aac:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  435ab0:	e8 1b 46 fe ff       	callq  41a0d0 <mbedtls_asn1_get_len>
  435ab5:	89 45 fc             	mov    %eax,-0x4(%rbp)
  435ab8:	8b 45 fc             	mov    -0x4(%rbp),%eax
  435abb:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
  435ac1:	83 f8 00             	cmp    $0x0,%eax
  435ac4:	74 13                	je     435ad9 <pk_get_rsapubkey+0x289>
  435ac6:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
  435acc:	05 00 c5 ff ff       	add    $0xffffc500,%eax
  435ad1:	89 45 98             	mov    %eax,-0x68(%rbp)
  435ad4:	e9 dd 00 00 00       	jmpq   435bb6 <pk_get_rsapubkey+0x366>
  435ad9:	31 c0                	xor    %eax,%eax
  435adb:	89 c1                	mov    %eax,%ecx
  435add:	48 8b 7d 80          	mov    -0x80(%rbp),%rdi
  435ae1:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
  435ae5:	48 8b 12             	mov    (%rdx),%rdx
  435ae8:	48 8b b5 70 ff ff ff 	mov    -0x90(%rbp),%rsi
  435aef:	48 89 b5 60 ff ff ff 	mov    %rsi,-0xa0(%rbp)
  435af6:	48 89 ce             	mov    %rcx,%rsi
  435af9:	48 89 95 58 ff ff ff 	mov    %rdx,-0xa8(%rbp)
  435b00:	48 89 ca             	mov    %rcx,%rdx
  435b03:	48 89 8d 50 ff ff ff 	mov    %rcx,-0xb0(%rbp)
  435b0a:	4c 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%r8
  435b11:	4c 8b 8d 50 ff ff ff 	mov    -0xb0(%rbp),%r9
  435b18:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
  435b1f:	00 
  435b20:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
  435b27:	00 00 
  435b29:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
  435b30:	00 00 
  435b32:	4c 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%r10
  435b39:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
  435b3e:	4c 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%r10
  435b45:	4c 89 54 24 20       	mov    %r10,0x20(%rsp)
  435b4a:	e8 61 05 00 00       	callq  4360b0 <mbedtls_rsa_import_raw>
  435b4f:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
  435b55:	83 f8 00             	cmp    $0x0,%eax
  435b58:	74 09                	je     435b63 <pk_get_rsapubkey+0x313>
  435b5a:	c7 45 98 00 c5 ff ff 	movl   $0xffffc500,-0x68(%rbp)
  435b61:	eb 53                	jmp    435bb6 <pk_get_rsapubkey+0x366>
  435b63:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  435b6a:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  435b6e:	48 03 01             	add    (%rcx),%rax
  435b71:	48 89 01             	mov    %rax,(%rcx)
  435b74:	48 8b 7d 80          	mov    -0x80(%rbp),%rdi
  435b78:	e8 f3 06 00 00       	callq  436270 <mbedtls_rsa_complete>
  435b7d:	83 f8 00             	cmp    $0x0,%eax
  435b80:	75 0e                	jne    435b90 <pk_get_rsapubkey+0x340>
  435b82:	48 8b 7d 80          	mov    -0x80(%rbp),%rdi
  435b86:	e8 b5 41 00 00       	callq  439d40 <mbedtls_rsa_check_pubkey>
  435b8b:	83 f8 00             	cmp    $0x0,%eax
  435b8e:	74 09                	je     435b99 <pk_get_rsapubkey+0x349>
  435b90:	c7 45 98 00 c5 ff ff 	movl   $0xffffc500,-0x68(%rbp)
  435b97:	eb 1d                	jmp    435bb6 <pk_get_rsapubkey+0x366>
  435b99:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  435b9d:	48 8b 00             	mov    (%rax),%rax
  435ba0:	48 3b 45 88          	cmp    -0x78(%rbp),%rax
  435ba4:	74 09                	je     435baf <pk_get_rsapubkey+0x35f>
  435ba6:	c7 45 98 9a c4 ff ff 	movl   $0xffffc49a,-0x68(%rbp)
  435bad:	eb 07                	jmp    435bb6 <pk_get_rsapubkey+0x366>
  435baf:	c7 45 98 00 00 00 00 	movl   $0x0,-0x68(%rbp)
  435bb6:	8b 45 98             	mov    -0x68(%rbp),%eax
  435bb9:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
  435bbf:	e8 92 fd 00 00       	callq  445956 <writeback_cache>
  435bc4:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
  435bca:	48 81 c4 e0 00 00 00 	add    $0xe0,%rsp
  435bd1:	5d                   	pop    %rbp
  435bd2:	c3                   	retq   
  435bd3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  435bda:	84 00 00 00 00 00 

0000000000435be0 <mbedtls_pk_parse_subpubkey>:
  435be0:	55                   	push   %rbp
  435be1:	48 89 e5             	mov    %rsp,%rbp
  435be4:	48 81 ec 10 01 00 00 	sub    $0x110,%rsp
  435beb:	48 89 bd 48 ff ff ff 	mov    %rdi,-0xb8(%rbp)
  435bf2:	48 89 b5 40 ff ff ff 	mov    %rsi,-0xc0(%rbp)
  435bf9:	48 89 95 38 ff ff ff 	mov    %rdx,-0xc8(%rbp)
  435c00:	c7 85 0c ff ff ff 00 	movl   $0x0,-0xf4(%rbp)
  435c07:	00 00 00 
  435c0a:	eb 00                	jmp    435c0c <mbedtls_pk_parse_subpubkey+0x2c>
  435c0c:	eb 00                	jmp    435c0e <mbedtls_pk_parse_subpubkey+0x2e>
  435c0e:	eb 00                	jmp    435c10 <mbedtls_pk_parse_subpubkey+0x30>
  435c10:	eb 00                	jmp    435c12 <mbedtls_pk_parse_subpubkey+0x32>
  435c12:	eb 00                	jmp    435c14 <mbedtls_pk_parse_subpubkey+0x34>
  435c14:	eb 00                	jmp    435c16 <mbedtls_pk_parse_subpubkey+0x36>
  435c16:	eb 00                	jmp    435c18 <mbedtls_pk_parse_subpubkey+0x38>
  435c18:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  435c1f:	48 8b 8d 40 ff ff ff 	mov    -0xc0(%rbp),%rcx
  435c26:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
  435c2d:	48 89 8d 60 ff ff ff 	mov    %rcx,-0xa0(%rbp)
  435c34:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
  435c3b:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
  435c42:	c7 85 54 ff ff ff 30 	movl   $0x30,-0xac(%rbp)
  435c49:	00 00 00 
  435c4c:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  435c53:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
  435c5a:	48 8b 09             	mov    (%rcx),%rcx
  435c5d:	48 29 c8             	sub    %rcx,%rax
  435c60:	48 83 f8 01          	cmp    $0x1,%rax
  435c64:	7d 0c                	jge    435c72 <mbedtls_pk_parse_subpubkey+0x92>
  435c66:	c7 85 70 ff ff ff a0 	movl   $0xffffffa0,-0x90(%rbp)
  435c6d:	ff ff ff 
  435c70:	eb 52                	jmp    435cc4 <mbedtls_pk_parse_subpubkey+0xe4>
  435c72:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  435c79:	48 8b 00             	mov    (%rax),%rax
  435c7c:	0f b6 08             	movzbl (%rax),%ecx
  435c7f:	3b 8d 54 ff ff ff    	cmp    -0xac(%rbp),%ecx
  435c85:	74 0c                	je     435c93 <mbedtls_pk_parse_subpubkey+0xb3>
  435c87:	c7 85 70 ff ff ff 9e 	movl   $0xffffff9e,-0x90(%rbp)
  435c8e:	ff ff ff 
  435c91:	eb 31                	jmp    435cc4 <mbedtls_pk_parse_subpubkey+0xe4>
  435c93:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  435c9a:	48 8b 08             	mov    (%rax),%rcx
  435c9d:	48 83 c1 01          	add    $0x1,%rcx
  435ca1:	48 89 08             	mov    %rcx,(%rax)
  435ca4:	48 8b bd 68 ff ff ff 	mov    -0x98(%rbp),%rdi
  435cab:	48 8b b5 60 ff ff ff 	mov    -0xa0(%rbp),%rsi
  435cb2:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  435cb9:	e8 12 44 fe ff       	callq  41a0d0 <mbedtls_asn1_get_len>
  435cbe:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
  435cc4:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
  435cca:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%rbp)
  435cd0:	83 f8 00             	cmp    $0x0,%eax
  435cd3:	74 16                	je     435ceb <mbedtls_pk_parse_subpubkey+0x10b>
  435cd5:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
  435cdb:	05 00 c3 ff ff       	add    $0xffffc300,%eax
  435ce0:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
  435ce6:	e9 5c 03 00 00       	jmpq   436047 <mbedtls_pk_parse_subpubkey+0x467>
  435ceb:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  435cf2:	48 8b 00             	mov    (%rax),%rax
  435cf5:	48 03 85 28 ff ff ff 	add    -0xd8(%rbp),%rax
  435cfc:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
  435d03:	48 8b bd 48 ff ff ff 	mov    -0xb8(%rbp),%rdi
  435d0a:	48 8b b5 40 ff ff ff 	mov    -0xc0(%rbp),%rsi
  435d11:	48 8d 95 0c ff ff ff 	lea    -0xf4(%rbp),%rdx
  435d18:	48 8d 8d 10 ff ff ff 	lea    -0xf0(%rbp),%rcx
  435d1f:	e8 5c f6 ff ff       	callq  435380 <pk_get_pk_alg>
  435d24:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%rbp)
  435d2a:	83 f8 00             	cmp    $0x0,%eax
  435d2d:	74 11                	je     435d40 <mbedtls_pk_parse_subpubkey+0x160>
  435d2f:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
  435d35:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
  435d3b:	e9 07 03 00 00       	jmpq   436047 <mbedtls_pk_parse_subpubkey+0x467>
  435d40:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  435d47:	48 8b 8d 40 ff ff ff 	mov    -0xc0(%rbp),%rcx
  435d4e:	48 89 45 88          	mov    %rax,-0x78(%rbp)
  435d52:	48 89 4d 80          	mov    %rcx,-0x80(%rbp)
  435d56:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
  435d5d:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  435d64:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  435d68:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
  435d6c:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
  435d73:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  435d77:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
  435d7b:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  435d7f:	c7 45 94 03 00 00 00 	movl   $0x3,-0x6c(%rbp)
  435d86:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  435d8a:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
  435d8e:	48 8b 09             	mov    (%rcx),%rcx
  435d91:	48 29 c8             	sub    %rcx,%rax
  435d94:	48 83 f8 01          	cmp    $0x1,%rax
  435d98:	7d 09                	jge    435da3 <mbedtls_pk_parse_subpubkey+0x1c3>
  435d9a:	c7 45 b0 a0 ff ff ff 	movl   $0xffffffa0,-0x50(%rbp)
  435da1:	eb 3a                	jmp    435ddd <mbedtls_pk_parse_subpubkey+0x1fd>
  435da3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  435da7:	48 8b 00             	mov    (%rax),%rax
  435daa:	0f b6 08             	movzbl (%rax),%ecx
  435dad:	3b 4d 94             	cmp    -0x6c(%rbp),%ecx
  435db0:	74 09                	je     435dbb <mbedtls_pk_parse_subpubkey+0x1db>
  435db2:	c7 45 b0 9e ff ff ff 	movl   $0xffffff9e,-0x50(%rbp)
  435db9:	eb 22                	jmp    435ddd <mbedtls_pk_parse_subpubkey+0x1fd>
  435dbb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  435dbf:	48 8b 08             	mov    (%rax),%rcx
  435dc2:	48 83 c1 01          	add    $0x1,%rcx
  435dc6:	48 89 08             	mov    %rcx,(%rax)
  435dc9:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
  435dcd:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
  435dd1:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  435dd5:	e8 f6 42 fe ff       	callq  41a0d0 <mbedtls_asn1_get_len>
  435dda:	89 45 b0             	mov    %eax,-0x50(%rbp)
  435ddd:	8b 45 b0             	mov    -0x50(%rbp),%eax
  435de0:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
  435de6:	83 f8 00             	cmp    $0x0,%eax
  435de9:	74 0b                	je     435df6 <mbedtls_pk_parse_subpubkey+0x216>
  435deb:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
  435df1:	89 45 90             	mov    %eax,-0x70(%rbp)
  435df4:	eb 43                	jmp    435e39 <mbedtls_pk_parse_subpubkey+0x259>
  435df6:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  435dfd:	48 8b 08             	mov    (%rax),%rcx
  435e00:	48 89 ca             	mov    %rcx,%rdx
  435e03:	48 83 c2 ff          	add    $0xffffffffffffffff,%rdx
  435e07:	48 89 10             	mov    %rdx,(%rax)
  435e0a:	48 83 f9 02          	cmp    $0x2,%rcx
  435e0e:	72 19                	jb     435e29 <mbedtls_pk_parse_subpubkey+0x249>
  435e10:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  435e14:	48 8b 08             	mov    (%rax),%rcx
  435e17:	48 89 ca             	mov    %rcx,%rdx
  435e1a:	48 83 c2 01          	add    $0x1,%rdx
  435e1e:	48 89 10             	mov    %rdx,(%rax)
  435e21:	0f b6 31             	movzbl (%rcx),%esi
  435e24:	83 fe 00             	cmp    $0x0,%esi
  435e27:	74 09                	je     435e32 <mbedtls_pk_parse_subpubkey+0x252>
  435e29:	c7 45 90 98 ff ff ff 	movl   $0xffffff98,-0x70(%rbp)
  435e30:	eb 07                	jmp    435e39 <mbedtls_pk_parse_subpubkey+0x259>
  435e32:	c7 45 90 00 00 00 00 	movl   $0x0,-0x70(%rbp)
  435e39:	8b 45 90             	mov    -0x70(%rbp),%eax
  435e3c:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%rbp)
  435e42:	83 f8 00             	cmp    $0x0,%eax
  435e45:	74 16                	je     435e5d <mbedtls_pk_parse_subpubkey+0x27d>
  435e47:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
  435e4d:	05 00 c5 ff ff       	add    $0xffffc500,%eax
  435e52:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
  435e58:	e9 ea 01 00 00       	jmpq   436047 <mbedtls_pk_parse_subpubkey+0x467>
  435e5d:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  435e64:	48 8b 00             	mov    (%rax),%rax
  435e67:	48 03 85 28 ff ff ff 	add    -0xd8(%rbp),%rax
  435e6e:	48 3b 85 40 ff ff ff 	cmp    -0xc0(%rbp),%rax
  435e75:	74 0f                	je     435e86 <mbedtls_pk_parse_subpubkey+0x2a6>
  435e77:	c7 85 50 ff ff ff 9a 	movl   $0xffffc49a,-0xb0(%rbp)
  435e7e:	c4 ff ff 
  435e81:	e9 c1 01 00 00       	jmpq   436047 <mbedtls_pk_parse_subpubkey+0x467>
  435e86:	8b 85 0c ff ff ff    	mov    -0xf4(%rbp),%eax
  435e8c:	89 45 b4             	mov    %eax,-0x4c(%rbp)
  435e8f:	83 7d b4 01          	cmpl   $0x1,-0x4c(%rbp)
  435e93:	75 10                	jne    435ea5 <mbedtls_pk_parse_subpubkey+0x2c5>
  435e95:	48 b8 00 33 45 00 00 	movabs $0x453300,%rax
  435e9c:	00 00 00 
  435e9f:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  435ea3:	eb 08                	jmp    435ead <mbedtls_pk_parse_subpubkey+0x2cd>
  435ea5:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
  435eac:	00 
  435ead:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  435eb1:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
  435eb8:	48 83 f8 00          	cmp    $0x0,%rax
  435ebc:	75 0f                	jne    435ecd <mbedtls_pk_parse_subpubkey+0x2ed>
  435ebe:	c7 85 50 ff ff ff 80 	movl   $0xffffc380,-0xb0(%rbp)
  435ec5:	c3 ff ff 
  435ec8:	e9 7a 01 00 00       	jmpq   436047 <mbedtls_pk_parse_subpubkey+0x467>
  435ecd:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  435ed4:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  435edb:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  435edf:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  435ee3:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  435ee8:	74 0a                	je     435ef4 <mbedtls_pk_parse_subpubkey+0x314>
  435eea:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  435eee:	48 83 38 00          	cmpq   $0x0,(%rax)
  435ef2:	74 09                	je     435efd <mbedtls_pk_parse_subpubkey+0x31d>
  435ef4:	c7 45 ec 80 c1 ff ff 	movl   $0xffffc180,-0x14(%rbp)
  435efb:	eb 3d                	jmp    435f3a <mbedtls_pk_parse_subpubkey+0x35a>
  435efd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  435f01:	48 05 90 00 00 00    	add    $0x90,%rax
  435f07:	48 89 c7             	mov    %rax,%rdi
  435f0a:	e8 39 02 01 00       	callq  446148 <getDecryptedValueQWord>
  435f0f:	ff d0                	callq  *%rax
  435f11:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  435f15:	48 89 47 08          	mov    %rax,0x8(%rdi)
  435f19:	48 83 f8 00          	cmp    $0x0,%rax
  435f1d:	75 09                	jne    435f28 <mbedtls_pk_parse_subpubkey+0x348>
  435f1f:	c7 45 ec 80 c0 ff ff 	movl   $0xffffc080,-0x14(%rbp)
  435f26:	eb 12                	jmp    435f3a <mbedtls_pk_parse_subpubkey+0x35a>
  435f28:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  435f2c:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  435f30:	48 89 01             	mov    %rax,(%rcx)
  435f33:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  435f3a:	8b 45 ec             	mov    -0x14(%rbp),%eax
  435f3d:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%rbp)
  435f43:	83 f8 00             	cmp    $0x0,%eax
  435f46:	74 11                	je     435f59 <mbedtls_pk_parse_subpubkey+0x379>
  435f48:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
  435f4e:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
  435f54:	e9 ee 00 00 00       	jmpq   436047 <mbedtls_pk_parse_subpubkey+0x467>
  435f59:	83 bd 0c ff ff ff 01 	cmpl   $0x1,-0xf4(%rbp)
  435f60:	75 38                	jne    435f9a <mbedtls_pk_parse_subpubkey+0x3ba>
  435f62:	48 8b bd 48 ff ff ff 	mov    -0xb8(%rbp),%rdi
  435f69:	48 8b b5 40 ff ff ff 	mov    -0xc0(%rbp),%rsi
  435f70:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  435f77:	48 8b 08             	mov    (%rax),%rcx
  435f7a:	48 8b 40 08          	mov    0x8(%rax),%rax
  435f7e:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
  435f82:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  435f86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  435f8a:	48 89 c2             	mov    %rax,%rdx
  435f8d:	e8 be f8 ff ff       	callq  435850 <pk_get_rsapubkey>
  435f92:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%rbp)
  435f98:	eb 0a                	jmp    435fa4 <mbedtls_pk_parse_subpubkey+0x3c4>
  435f9a:	c7 85 34 ff ff ff 80 	movl   $0xffffc380,-0xcc(%rbp)
  435fa1:	c3 ff ff 
  435fa4:	83 bd 34 ff ff ff 00 	cmpl   $0x0,-0xcc(%rbp)
  435fab:	75 1d                	jne    435fca <mbedtls_pk_parse_subpubkey+0x3ea>
  435fad:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  435fb4:	48 8b 00             	mov    (%rax),%rax
  435fb7:	48 3b 85 40 ff ff ff 	cmp    -0xc0(%rbp),%rax
  435fbe:	74 0a                	je     435fca <mbedtls_pk_parse_subpubkey+0x3ea>
  435fc0:	c7 85 34 ff ff ff 9a 	movl   $0xffffc49a,-0xcc(%rbp)
  435fc7:	c4 ff ff 
  435fca:	83 bd 34 ff ff ff 00 	cmpl   $0x0,-0xcc(%rbp)
  435fd1:	74 68                	je     43603b <mbedtls_pk_parse_subpubkey+0x45b>
  435fd3:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  435fda:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  435fde:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  435fe3:	75 02                	jne    435fe7 <mbedtls_pk_parse_subpubkey+0x407>
  435fe5:	eb 54                	jmp    43603b <mbedtls_pk_parse_subpubkey+0x45b>
  435fe7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  435feb:	48 83 38 00          	cmpq   $0x0,(%rax)
  435fef:	74 1f                	je     436010 <mbedtls_pk_parse_subpubkey+0x430>
  435ff1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  435ff5:	48 8b 00             	mov    (%rax),%rax
  435ff8:	48 05 a0 00 00 00    	add    $0xa0,%rax
  435ffe:	48 89 c7             	mov    %rax,%rdi
  436001:	e8 42 01 01 00       	callq  446148 <getDecryptedValueQWord>
  436006:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  43600a:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
  43600e:	ff d0                	callq  *%rax
  436010:	31 f6                	xor    %esi,%esi
  436012:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  436016:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  43601a:	48 c7 45 c8 10 00 00 	movq   $0x10,-0x38(%rbp)
  436021:	00 
  436022:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  436029:	00 
  43602a:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  43602e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  436032:	ff d0                	callq  *%rax
  436034:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
  43603b:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
  436041:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
  436047:	8b 85 50 ff ff ff    	mov    -0xb0(%rbp),%eax
  43604d:	89 85 f4 fe ff ff    	mov    %eax,-0x10c(%rbp)
  436053:	e8 fe f8 00 00       	callq  445956 <writeback_cache>
  436058:	8b 85 f4 fe ff ff    	mov    -0x10c(%rbp),%eax
  43605e:	48 81 c4 10 01 00 00 	add    $0x110,%rsp
  436065:	5d                   	pop    %rbp
  436066:	c3                   	retq   
  436067:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  43606e:	00 00 

0000000000436070 <mbedtls_platform_zeroize>:
  436070:	55                   	push   %rbp
  436071:	48 89 e5             	mov    %rsp,%rbp
  436074:	48 83 ec 20          	sub    $0x20,%rsp
  436078:	31 c0                	xor    %eax,%eax
  43607a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  43607e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  436082:	48 8b 34 25 70 e3 44 	mov    0x44e370,%rsi
  436089:	00 
  43608a:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  43608e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  436092:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  436096:	89 c6                	mov    %eax,%esi
  436098:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  43609c:	ff d1                	callq  *%rcx
  43609e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  4360a2:	e8 af f8 00 00       	callq  445956 <writeback_cache>
  4360a7:	48 83 c4 20          	add    $0x20,%rsp
  4360ab:	5d                   	pop    %rbp
  4360ac:	c3                   	retq   
  4360ad:	0f 1f 00             	nopl   (%rax)

00000000004360b0 <mbedtls_rsa_import_raw>:
  4360b0:	55                   	push   %rbp
  4360b1:	48 89 e5             	mov    %rsp,%rbp
  4360b4:	41 56                	push   %r14
  4360b6:	53                   	push   %rbx
  4360b7:	48 81 ec 80 00 00 00 	sub    $0x80,%rsp
  4360be:	48 8b 45 30          	mov    0x30(%rbp),%rax
  4360c2:	4c 8b 55 28          	mov    0x28(%rbp),%r10
  4360c6:	4c 8b 5d 20          	mov    0x20(%rbp),%r11
  4360ca:	48 8b 5d 18          	mov    0x18(%rbp),%rbx
  4360ce:	4c 8b 75 10          	mov    0x10(%rbp),%r14
  4360d2:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  4360d6:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  4360da:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  4360de:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
  4360e2:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
  4360e6:	4c 89 4d b0          	mov    %r9,-0x50(%rbp)
  4360ea:	c7 45 ac 00 00 00 00 	movl   $0x0,-0x54(%rbp)
  4360f1:	4c 89 75 a0          	mov    %r14,-0x60(%rbp)
  4360f5:	48 89 5d 98          	mov    %rbx,-0x68(%rbp)
  4360f9:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  4360fd:	4c 89 55 88          	mov    %r10,-0x78(%rbp)
  436101:	4c 89 5d 80          	mov    %r11,-0x80(%rbp)
  436105:	eb 00                	jmp    436107 <mbedtls_rsa_import_raw+0x57>
  436107:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  43610c:	74 5d                	je     43616b <mbedtls_rsa_import_raw+0xbb>
  43610e:	eb 00                	jmp    436110 <mbedtls_rsa_import_raw+0x60>
  436110:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  436114:	48 83 c0 10          	add    $0x10,%rax
  436118:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  43611c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  436120:	48 89 c7             	mov    %rax,%rdi
  436123:	e8 a8 b2 fe ff       	callq  4213d0 <mbedtls_mpi_read_binary>
  436128:	89 45 ac             	mov    %eax,-0x54(%rbp)
  43612b:	83 f8 00             	cmp    $0x0,%eax
  43612e:	74 05                	je     436135 <mbedtls_rsa_import_raw+0x85>
  436130:	e9 f7 00 00 00       	jmpq   43622c <mbedtls_rsa_import_raw+0x17c>
  436135:	eb 00                	jmp    436137 <mbedtls_rsa_import_raw+0x87>
  436137:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  43613b:	48 83 c0 10          	add    $0x10,%rax
  43613f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  436143:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  436147:	e8 84 50 fe ff       	callq  41b1d0 <mbedtls_mpi_bitlen>
  43614c:	48 83 c0 07          	add    $0x7,%rax
  436150:	48 c1 e8 03          	shr    $0x3,%rax
  436154:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  436158:	48 83 c7 08          	add    $0x8,%rdi
  43615c:	48 89 c6             	mov    %rax,%rsi
  43615f:	e8 98 fb 00 00       	callq  445cfc <setEncryptedValueQWord>
  436164:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  43616b:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  436170:	74 2b                	je     43619d <mbedtls_rsa_import_raw+0xed>
  436172:	eb 00                	jmp    436174 <mbedtls_rsa_import_raw+0xc4>
  436174:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  436178:	48 83 c0 58          	add    $0x58,%rax
  43617c:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
  436180:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  436184:	48 89 c7             	mov    %rax,%rdi
  436187:	e8 44 b2 fe ff       	callq  4213d0 <mbedtls_mpi_read_binary>
  43618c:	89 45 ac             	mov    %eax,-0x54(%rbp)
  43618f:	83 f8 00             	cmp    $0x0,%eax
  436192:	74 05                	je     436199 <mbedtls_rsa_import_raw+0xe9>
  436194:	e9 93 00 00 00       	jmpq   43622c <mbedtls_rsa_import_raw+0x17c>
  436199:	eb 00                	jmp    43619b <mbedtls_rsa_import_raw+0xeb>
  43619b:	eb 00                	jmp    43619d <mbedtls_rsa_import_raw+0xed>
  43619d:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
  4361a2:	74 28                	je     4361cc <mbedtls_rsa_import_raw+0x11c>
  4361a4:	eb 00                	jmp    4361a6 <mbedtls_rsa_import_raw+0xf6>
  4361a6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4361aa:	48 83 c0 70          	add    $0x70,%rax
  4361ae:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
  4361b2:	48 8b 55 10          	mov    0x10(%rbp),%rdx
  4361b6:	48 89 c7             	mov    %rax,%rdi
  4361b9:	e8 12 b2 fe ff       	callq  4213d0 <mbedtls_mpi_read_binary>
  4361be:	89 45 ac             	mov    %eax,-0x54(%rbp)
  4361c1:	83 f8 00             	cmp    $0x0,%eax
  4361c4:	74 02                	je     4361c8 <mbedtls_rsa_import_raw+0x118>
  4361c6:	eb 64                	jmp    43622c <mbedtls_rsa_import_raw+0x17c>
  4361c8:	eb 00                	jmp    4361ca <mbedtls_rsa_import_raw+0x11a>
  4361ca:	eb 00                	jmp    4361cc <mbedtls_rsa_import_raw+0x11c>
  4361cc:	48 83 7d 18 00       	cmpq   $0x0,0x18(%rbp)
  4361d1:	74 28                	je     4361fb <mbedtls_rsa_import_raw+0x14b>
  4361d3:	eb 00                	jmp    4361d5 <mbedtls_rsa_import_raw+0x125>
  4361d5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4361d9:	48 83 c0 40          	add    $0x40,%rax
  4361dd:	48 8b 75 18          	mov    0x18(%rbp),%rsi
  4361e1:	48 8b 55 20          	mov    0x20(%rbp),%rdx
  4361e5:	48 89 c7             	mov    %rax,%rdi
  4361e8:	e8 e3 b1 fe ff       	callq  4213d0 <mbedtls_mpi_read_binary>
  4361ed:	89 45 ac             	mov    %eax,-0x54(%rbp)
  4361f0:	83 f8 00             	cmp    $0x0,%eax
  4361f3:	74 02                	je     4361f7 <mbedtls_rsa_import_raw+0x147>
  4361f5:	eb 35                	jmp    43622c <mbedtls_rsa_import_raw+0x17c>
  4361f7:	eb 00                	jmp    4361f9 <mbedtls_rsa_import_raw+0x149>
  4361f9:	eb 00                	jmp    4361fb <mbedtls_rsa_import_raw+0x14b>
  4361fb:	48 83 7d 28 00       	cmpq   $0x0,0x28(%rbp)
  436200:	74 28                	je     43622a <mbedtls_rsa_import_raw+0x17a>
  436202:	eb 00                	jmp    436204 <mbedtls_rsa_import_raw+0x154>
  436204:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  436208:	48 83 c0 28          	add    $0x28,%rax
  43620c:	48 8b 75 28          	mov    0x28(%rbp),%rsi
  436210:	48 8b 55 30          	mov    0x30(%rbp),%rdx
  436214:	48 89 c7             	mov    %rax,%rdi
  436217:	e8 b4 b1 fe ff       	callq  4213d0 <mbedtls_mpi_read_binary>
  43621c:	89 45 ac             	mov    %eax,-0x54(%rbp)
  43621f:	83 f8 00             	cmp    $0x0,%eax
  436222:	74 02                	je     436226 <mbedtls_rsa_import_raw+0x176>
  436224:	eb 06                	jmp    43622c <mbedtls_rsa_import_raw+0x17c>
  436226:	eb 00                	jmp    436228 <mbedtls_rsa_import_raw+0x178>
  436228:	eb 00                	jmp    43622a <mbedtls_rsa_import_raw+0x17a>
  43622a:	eb 00                	jmp    43622c <mbedtls_rsa_import_raw+0x17c>
  43622c:	83 7d ac 00          	cmpl   $0x0,-0x54(%rbp)
  436230:	74 0d                	je     43623f <mbedtls_rsa_import_raw+0x18f>
  436232:	8b 45 ac             	mov    -0x54(%rbp),%eax
  436235:	05 80 bf ff ff       	add    $0xffffbf80,%eax
  43623a:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  43623d:	eb 07                	jmp    436246 <mbedtls_rsa_import_raw+0x196>
  43623f:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
  436246:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  436249:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
  43624f:	e8 02 f7 00 00       	callq  445956 <writeback_cache>
  436254:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
  43625a:	48 81 c4 80 00 00 00 	add    $0x80,%rsp
  436261:	5b                   	pop    %rbx
  436262:	41 5e                	pop    %r14
  436264:	5d                   	pop    %rbp
  436265:	c3                   	retq   
  436266:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  43626d:	00 00 00 

0000000000436270 <mbedtls_rsa_complete>:
  436270:	55                   	push   %rbp
  436271:	48 89 e5             	mov    %rsp,%rbp
  436274:	48 81 ec d0 10 00 00 	sub    $0x10d0,%rsp
  43627b:	48 89 bd 00 f7 ff ff 	mov    %rdi,-0x900(%rbp)
  436282:	c7 85 fc f6 ff ff 00 	movl   $0x0,-0x904(%rbp)
  436289:	00 00 00 
  43628c:	eb 00                	jmp    43628e <mbedtls_rsa_complete+0x1e>
  43628e:	48 8b 85 00 f7 ff ff 	mov    -0x900(%rbp),%rax
  436295:	48 83 c0 10          	add    $0x10,%rax
  436299:	48 89 85 c8 f6 ff ff 	mov    %rax,-0x938(%rbp)
  4362a0:	e8 b1 f6 00 00       	callq  445956 <writeback_cache>
  4362a5:	48 8b 85 c8 f6 ff ff 	mov    -0x938(%rbp),%rax
  4362ac:	48 89 85 68 f7 ff ff 	mov    %rax,-0x898(%rbp)
  4362b3:	48 c7 85 60 f7 ff ff 	movq   $0x0,-0x8a0(%rbp)
  4362ba:	00 00 00 00 
  4362be:	48 83 bd 60 f7 ff ff 	cmpq   $0x0,-0x8a0(%rbp)
  4362c5:	00 
  4362c6:	7d 14                	jge    4362dc <mbedtls_rsa_complete+0x6c>
  4362c8:	31 c0                	xor    %eax,%eax
  4362ca:	89 c1                	mov    %eax,%ecx
  4362cc:	48 2b 8d 60 f7 ff ff 	sub    -0x8a0(%rbp),%rcx
  4362d3:	48 89 8d c0 f6 ff ff 	mov    %rcx,-0x940(%rbp)
  4362da:	eb 0e                	jmp    4362ea <mbedtls_rsa_complete+0x7a>
  4362dc:	48 8b 85 60 f7 ff ff 	mov    -0x8a0(%rbp),%rax
  4362e3:	48 89 85 c0 f6 ff ff 	mov    %rax,-0x940(%rbp)
  4362ea:	48 8b 85 c0 f6 ff ff 	mov    -0x940(%rbp),%rax
  4362f1:	48 8d 8d 10 f7 ff ff 	lea    -0x8f0(%rbp),%rcx
  4362f8:	48 89 cf             	mov    %rcx,%rdi
  4362fb:	48 89 c6             	mov    %rax,%rsi
  4362fe:	e8 f9 f9 00 00       	callq  445cfc <setEncryptedValueQWord>
  436303:	48 8d 8d 30 f7 ff ff 	lea    -0x8d0(%rbp),%rcx
  43630a:	48 8b b5 60 f7 ff ff 	mov    -0x8a0(%rbp),%rsi
  436311:	48 83 fe 00          	cmp    $0x0,%rsi
  436315:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  43631a:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  436320:	44 0f 4c c2          	cmovl  %edx,%r8d
  436324:	48 89 cf             	mov    %rcx,%rdi
  436327:	44 89 c6             	mov    %r8d,%esi
  43632a:	48 89 85 b8 f6 ff ff 	mov    %rax,-0x948(%rbp)
  436331:	e8 c8 f8 00 00       	callq  445bfe <setEncryptedValueDWord>
  436336:	ba 01 00 00 00       	mov    $0x1,%edx
  43633b:	89 d6                	mov    %edx,%esi
  43633d:	48 8d 8d 30 f7 ff ff 	lea    -0x8d0(%rbp),%rcx
  436344:	48 83 c1 08          	add    $0x8,%rcx
  436348:	48 89 cf             	mov    %rcx,%rdi
  43634b:	48 89 85 b0 f6 ff ff 	mov    %rax,-0x950(%rbp)
  436352:	e8 a5 f9 00 00       	callq  445cfc <setEncryptedValueQWord>
  436357:	48 8d b5 10 f7 ff ff 	lea    -0x8f0(%rbp),%rsi
  43635e:	48 8d 8d 30 f7 ff ff 	lea    -0x8d0(%rbp),%rcx
  436365:	48 83 c1 10          	add    $0x10,%rcx
  436369:	48 89 cf             	mov    %rcx,%rdi
  43636c:	48 89 85 a8 f6 ff ff 	mov    %rax,-0x958(%rbp)
  436373:	e8 84 f9 00 00       	callq  445cfc <setEncryptedValueQWord>
  436378:	48 8b bd 68 f7 ff ff 	mov    -0x898(%rbp),%rdi
  43637f:	48 8d b5 30 f7 ff ff 	lea    -0x8d0(%rbp),%rsi
  436386:	48 89 85 a0 f6 ff ff 	mov    %rax,-0x960(%rbp)
  43638d:	e8 be 86 fe ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  436392:	89 85 9c f6 ff ff    	mov    %eax,-0x964(%rbp)
  436398:	e8 b9 f5 00 00       	callq  445956 <writeback_cache>
  43639d:	8b 85 9c f6 ff ff    	mov    -0x964(%rbp),%eax
  4363a3:	83 f8 00             	cmp    $0x0,%eax
  4363a6:	41 0f 95 c1          	setne  %r9b
  4363aa:	41 80 e1 01          	and    $0x1,%r9b
  4363ae:	41 0f b6 d1          	movzbl %r9b,%edx
  4363b2:	89 95 f8 f6 ff ff    	mov    %edx,-0x908(%rbp)
  4363b8:	48 8b 8d 00 f7 ff ff 	mov    -0x900(%rbp),%rcx
  4363bf:	48 83 c1 58          	add    $0x58,%rcx
  4363c3:	48 89 8d 90 f6 ff ff 	mov    %rcx,-0x970(%rbp)
  4363ca:	e8 87 f5 00 00       	callq  445956 <writeback_cache>
  4363cf:	48 8b 8d 90 f6 ff ff 	mov    -0x970(%rbp),%rcx
  4363d6:	48 89 8d a8 f7 ff ff 	mov    %rcx,-0x858(%rbp)
  4363dd:	48 c7 85 a0 f7 ff ff 	movq   $0x0,-0x860(%rbp)
  4363e4:	00 00 00 00 
  4363e8:	48 83 bd a0 f7 ff ff 	cmpq   $0x0,-0x860(%rbp)
  4363ef:	00 
  4363f0:	7d 14                	jge    436406 <mbedtls_rsa_complete+0x196>
  4363f2:	31 c0                	xor    %eax,%eax
  4363f4:	89 c1                	mov    %eax,%ecx
  4363f6:	48 2b 8d a0 f7 ff ff 	sub    -0x860(%rbp),%rcx
  4363fd:	48 89 8d 88 f6 ff ff 	mov    %rcx,-0x978(%rbp)
  436404:	eb 0e                	jmp    436414 <mbedtls_rsa_complete+0x1a4>
  436406:	48 8b 85 a0 f7 ff ff 	mov    -0x860(%rbp),%rax
  43640d:	48 89 85 88 f6 ff ff 	mov    %rax,-0x978(%rbp)
  436414:	48 8b 85 88 f6 ff ff 	mov    -0x978(%rbp),%rax
  43641b:	48 8d 8d 10 f7 ff ff 	lea    -0x8f0(%rbp),%rcx
  436422:	48 89 cf             	mov    %rcx,%rdi
  436425:	48 89 c6             	mov    %rax,%rsi
  436428:	e8 cf f8 00 00       	callq  445cfc <setEncryptedValueQWord>
  43642d:	48 8d 8d 70 f7 ff ff 	lea    -0x890(%rbp),%rcx
  436434:	48 8b b5 a0 f7 ff ff 	mov    -0x860(%rbp),%rsi
  43643b:	48 83 fe 00          	cmp    $0x0,%rsi
  43643f:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  436444:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  43644a:	44 0f 4c c2          	cmovl  %edx,%r8d
  43644e:	48 89 cf             	mov    %rcx,%rdi
  436451:	44 89 c6             	mov    %r8d,%esi
  436454:	48 89 85 80 f6 ff ff 	mov    %rax,-0x980(%rbp)
  43645b:	e8 9e f7 00 00       	callq  445bfe <setEncryptedValueDWord>
  436460:	ba 01 00 00 00       	mov    $0x1,%edx
  436465:	89 d6                	mov    %edx,%esi
  436467:	48 8d 8d 70 f7 ff ff 	lea    -0x890(%rbp),%rcx
  43646e:	48 83 c1 08          	add    $0x8,%rcx
  436472:	48 89 cf             	mov    %rcx,%rdi
  436475:	48 89 85 78 f6 ff ff 	mov    %rax,-0x988(%rbp)
  43647c:	e8 7b f8 00 00       	callq  445cfc <setEncryptedValueQWord>
  436481:	48 8d b5 10 f7 ff ff 	lea    -0x8f0(%rbp),%rsi
  436488:	48 8d 8d 70 f7 ff ff 	lea    -0x890(%rbp),%rcx
  43648f:	48 83 c1 10          	add    $0x10,%rcx
  436493:	48 89 cf             	mov    %rcx,%rdi
  436496:	48 89 85 70 f6 ff ff 	mov    %rax,-0x990(%rbp)
  43649d:	e8 5a f8 00 00       	callq  445cfc <setEncryptedValueQWord>
  4364a2:	48 8b bd a8 f7 ff ff 	mov    -0x858(%rbp),%rdi
  4364a9:	48 8d b5 70 f7 ff ff 	lea    -0x890(%rbp),%rsi
  4364b0:	48 89 85 68 f6 ff ff 	mov    %rax,-0x998(%rbp)
  4364b7:	e8 94 85 fe ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  4364bc:	89 85 64 f6 ff ff    	mov    %eax,-0x99c(%rbp)
  4364c2:	e8 8f f4 00 00       	callq  445956 <writeback_cache>
  4364c7:	8b 85 64 f6 ff ff    	mov    -0x99c(%rbp),%eax
  4364cd:	83 f8 00             	cmp    $0x0,%eax
  4364d0:	41 0f 95 c1          	setne  %r9b
  4364d4:	41 80 e1 01          	and    $0x1,%r9b
  4364d8:	41 0f b6 d1          	movzbl %r9b,%edx
  4364dc:	89 95 f4 f6 ff ff    	mov    %edx,-0x90c(%rbp)
  4364e2:	48 8b 8d 00 f7 ff ff 	mov    -0x900(%rbp),%rcx
  4364e9:	48 83 c1 70          	add    $0x70,%rcx
  4364ed:	48 89 8d 58 f6 ff ff 	mov    %rcx,-0x9a8(%rbp)
  4364f4:	e8 5d f4 00 00       	callq  445956 <writeback_cache>
  4364f9:	48 8b 8d 58 f6 ff ff 	mov    -0x9a8(%rbp),%rcx
  436500:	48 89 8d e8 f7 ff ff 	mov    %rcx,-0x818(%rbp)
  436507:	48 c7 85 e0 f7 ff ff 	movq   $0x0,-0x820(%rbp)
  43650e:	00 00 00 00 
  436512:	48 83 bd e0 f7 ff ff 	cmpq   $0x0,-0x820(%rbp)
  436519:	00 
  43651a:	7d 14                	jge    436530 <mbedtls_rsa_complete+0x2c0>
  43651c:	31 c0                	xor    %eax,%eax
  43651e:	89 c1                	mov    %eax,%ecx
  436520:	48 2b 8d e0 f7 ff ff 	sub    -0x820(%rbp),%rcx
  436527:	48 89 8d 50 f6 ff ff 	mov    %rcx,-0x9b0(%rbp)
  43652e:	eb 0e                	jmp    43653e <mbedtls_rsa_complete+0x2ce>
  436530:	48 8b 85 e0 f7 ff ff 	mov    -0x820(%rbp),%rax
  436537:	48 89 85 50 f6 ff ff 	mov    %rax,-0x9b0(%rbp)
  43653e:	48 8b 85 50 f6 ff ff 	mov    -0x9b0(%rbp),%rax
  436545:	48 8d 8d 10 f7 ff ff 	lea    -0x8f0(%rbp),%rcx
  43654c:	48 89 cf             	mov    %rcx,%rdi
  43654f:	48 89 c6             	mov    %rax,%rsi
  436552:	e8 a5 f7 00 00       	callq  445cfc <setEncryptedValueQWord>
  436557:	48 8d 8d b0 f7 ff ff 	lea    -0x850(%rbp),%rcx
  43655e:	48 8b b5 e0 f7 ff ff 	mov    -0x820(%rbp),%rsi
  436565:	48 83 fe 00          	cmp    $0x0,%rsi
  436569:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  43656e:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  436574:	44 0f 4c c2          	cmovl  %edx,%r8d
  436578:	48 89 cf             	mov    %rcx,%rdi
  43657b:	44 89 c6             	mov    %r8d,%esi
  43657e:	48 89 85 48 f6 ff ff 	mov    %rax,-0x9b8(%rbp)
  436585:	e8 74 f6 00 00       	callq  445bfe <setEncryptedValueDWord>
  43658a:	ba 01 00 00 00       	mov    $0x1,%edx
  43658f:	89 d6                	mov    %edx,%esi
  436591:	48 8d 8d b0 f7 ff ff 	lea    -0x850(%rbp),%rcx
  436598:	48 83 c1 08          	add    $0x8,%rcx
  43659c:	48 89 cf             	mov    %rcx,%rdi
  43659f:	48 89 85 40 f6 ff ff 	mov    %rax,-0x9c0(%rbp)
  4365a6:	e8 51 f7 00 00       	callq  445cfc <setEncryptedValueQWord>
  4365ab:	48 8d b5 10 f7 ff ff 	lea    -0x8f0(%rbp),%rsi
  4365b2:	48 8d 8d b0 f7 ff ff 	lea    -0x850(%rbp),%rcx
  4365b9:	48 83 c1 10          	add    $0x10,%rcx
  4365bd:	48 89 cf             	mov    %rcx,%rdi
  4365c0:	48 89 85 38 f6 ff ff 	mov    %rax,-0x9c8(%rbp)
  4365c7:	e8 30 f7 00 00       	callq  445cfc <setEncryptedValueQWord>
  4365cc:	48 8b bd e8 f7 ff ff 	mov    -0x818(%rbp),%rdi
  4365d3:	48 8d b5 b0 f7 ff ff 	lea    -0x850(%rbp),%rsi
  4365da:	48 89 85 30 f6 ff ff 	mov    %rax,-0x9d0(%rbp)
  4365e1:	e8 6a 84 fe ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  4365e6:	89 85 2c f6 ff ff    	mov    %eax,-0x9d4(%rbp)
  4365ec:	e8 65 f3 00 00       	callq  445956 <writeback_cache>
  4365f1:	8b 85 2c f6 ff ff    	mov    -0x9d4(%rbp),%eax
  4365f7:	83 f8 00             	cmp    $0x0,%eax
  4365fa:	41 0f 95 c1          	setne  %r9b
  4365fe:	41 80 e1 01          	and    $0x1,%r9b
  436602:	41 0f b6 d1          	movzbl %r9b,%edx
  436606:	89 95 f0 f6 ff ff    	mov    %edx,-0x910(%rbp)
  43660c:	48 8b 8d 00 f7 ff ff 	mov    -0x900(%rbp),%rcx
  436613:	48 83 c1 40          	add    $0x40,%rcx
  436617:	48 89 8d 20 f6 ff ff 	mov    %rcx,-0x9e0(%rbp)
  43661e:	e8 33 f3 00 00       	callq  445956 <writeback_cache>
  436623:	48 8b 8d 20 f6 ff ff 	mov    -0x9e0(%rbp),%rcx
  43662a:	48 89 8d 28 f8 ff ff 	mov    %rcx,-0x7d8(%rbp)
  436631:	48 c7 85 20 f8 ff ff 	movq   $0x0,-0x7e0(%rbp)
  436638:	00 00 00 00 
  43663c:	48 83 bd 20 f8 ff ff 	cmpq   $0x0,-0x7e0(%rbp)
  436643:	00 
  436644:	7d 14                	jge    43665a <mbedtls_rsa_complete+0x3ea>
  436646:	31 c0                	xor    %eax,%eax
  436648:	89 c1                	mov    %eax,%ecx
  43664a:	48 2b 8d 20 f8 ff ff 	sub    -0x7e0(%rbp),%rcx
  436651:	48 89 8d 18 f6 ff ff 	mov    %rcx,-0x9e8(%rbp)
  436658:	eb 0e                	jmp    436668 <mbedtls_rsa_complete+0x3f8>
  43665a:	48 8b 85 20 f8 ff ff 	mov    -0x7e0(%rbp),%rax
  436661:	48 89 85 18 f6 ff ff 	mov    %rax,-0x9e8(%rbp)
  436668:	48 8b 85 18 f6 ff ff 	mov    -0x9e8(%rbp),%rax
  43666f:	48 8d 8d 10 f7 ff ff 	lea    -0x8f0(%rbp),%rcx
  436676:	48 89 cf             	mov    %rcx,%rdi
  436679:	48 89 c6             	mov    %rax,%rsi
  43667c:	e8 7b f6 00 00       	callq  445cfc <setEncryptedValueQWord>
  436681:	48 8d 8d f0 f7 ff ff 	lea    -0x810(%rbp),%rcx
  436688:	48 8b b5 20 f8 ff ff 	mov    -0x7e0(%rbp),%rsi
  43668f:	48 83 fe 00          	cmp    $0x0,%rsi
  436693:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  436698:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  43669e:	44 0f 4c c2          	cmovl  %edx,%r8d
  4366a2:	48 89 cf             	mov    %rcx,%rdi
  4366a5:	44 89 c6             	mov    %r8d,%esi
  4366a8:	48 89 85 10 f6 ff ff 	mov    %rax,-0x9f0(%rbp)
  4366af:	e8 4a f5 00 00       	callq  445bfe <setEncryptedValueDWord>
  4366b4:	ba 01 00 00 00       	mov    $0x1,%edx
  4366b9:	89 d6                	mov    %edx,%esi
  4366bb:	48 8d 8d f0 f7 ff ff 	lea    -0x810(%rbp),%rcx
  4366c2:	48 83 c1 08          	add    $0x8,%rcx
  4366c6:	48 89 cf             	mov    %rcx,%rdi
  4366c9:	48 89 85 08 f6 ff ff 	mov    %rax,-0x9f8(%rbp)
  4366d0:	e8 27 f6 00 00       	callq  445cfc <setEncryptedValueQWord>
  4366d5:	48 8d b5 10 f7 ff ff 	lea    -0x8f0(%rbp),%rsi
  4366dc:	48 8d 8d f0 f7 ff ff 	lea    -0x810(%rbp),%rcx
  4366e3:	48 83 c1 10          	add    $0x10,%rcx
  4366e7:	48 89 cf             	mov    %rcx,%rdi
  4366ea:	48 89 85 00 f6 ff ff 	mov    %rax,-0xa00(%rbp)
  4366f1:	e8 06 f6 00 00       	callq  445cfc <setEncryptedValueQWord>
  4366f6:	48 8b bd 28 f8 ff ff 	mov    -0x7d8(%rbp),%rdi
  4366fd:	48 8d b5 f0 f7 ff ff 	lea    -0x810(%rbp),%rsi
  436704:	48 89 85 f8 f5 ff ff 	mov    %rax,-0xa08(%rbp)
  43670b:	e8 40 83 fe ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  436710:	89 85 f4 f5 ff ff    	mov    %eax,-0xa0c(%rbp)
  436716:	e8 3b f2 00 00       	callq  445956 <writeback_cache>
  43671b:	8b 85 f4 f5 ff ff    	mov    -0xa0c(%rbp),%eax
  436721:	83 f8 00             	cmp    $0x0,%eax
  436724:	41 0f 95 c1          	setne  %r9b
  436728:	41 80 e1 01          	and    $0x1,%r9b
  43672c:	41 0f b6 d1          	movzbl %r9b,%edx
  436730:	89 95 ec f6 ff ff    	mov    %edx,-0x914(%rbp)
  436736:	48 8b 8d 00 f7 ff ff 	mov    -0x900(%rbp),%rcx
  43673d:	48 83 c1 28          	add    $0x28,%rcx
  436741:	48 89 8d e8 f5 ff ff 	mov    %rcx,-0xa18(%rbp)
  436748:	e8 09 f2 00 00       	callq  445956 <writeback_cache>
  43674d:	48 8b 8d e8 f5 ff ff 	mov    -0xa18(%rbp),%rcx
  436754:	48 89 8d 68 f8 ff ff 	mov    %rcx,-0x798(%rbp)
  43675b:	48 c7 85 60 f8 ff ff 	movq   $0x0,-0x7a0(%rbp)
  436762:	00 00 00 00 
  436766:	48 83 bd 60 f8 ff ff 	cmpq   $0x0,-0x7a0(%rbp)
  43676d:	00 
  43676e:	7d 14                	jge    436784 <mbedtls_rsa_complete+0x514>
  436770:	31 c0                	xor    %eax,%eax
  436772:	89 c1                	mov    %eax,%ecx
  436774:	48 2b 8d 60 f8 ff ff 	sub    -0x7a0(%rbp),%rcx
  43677b:	48 89 8d e0 f5 ff ff 	mov    %rcx,-0xa20(%rbp)
  436782:	eb 0e                	jmp    436792 <mbedtls_rsa_complete+0x522>
  436784:	48 8b 85 60 f8 ff ff 	mov    -0x7a0(%rbp),%rax
  43678b:	48 89 85 e0 f5 ff ff 	mov    %rax,-0xa20(%rbp)
  436792:	48 8b 85 e0 f5 ff ff 	mov    -0xa20(%rbp),%rax
  436799:	48 8d 8d 10 f7 ff ff 	lea    -0x8f0(%rbp),%rcx
  4367a0:	48 89 cf             	mov    %rcx,%rdi
  4367a3:	48 89 c6             	mov    %rax,%rsi
  4367a6:	e8 51 f5 00 00       	callq  445cfc <setEncryptedValueQWord>
  4367ab:	48 8d 8d 30 f8 ff ff 	lea    -0x7d0(%rbp),%rcx
  4367b2:	48 8b b5 60 f8 ff ff 	mov    -0x7a0(%rbp),%rsi
  4367b9:	48 83 fe 00          	cmp    $0x0,%rsi
  4367bd:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  4367c2:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  4367c8:	44 0f 4c c2          	cmovl  %edx,%r8d
  4367cc:	48 89 cf             	mov    %rcx,%rdi
  4367cf:	44 89 c6             	mov    %r8d,%esi
  4367d2:	48 89 85 d8 f5 ff ff 	mov    %rax,-0xa28(%rbp)
  4367d9:	e8 20 f4 00 00       	callq  445bfe <setEncryptedValueDWord>
  4367de:	ba 01 00 00 00       	mov    $0x1,%edx
  4367e3:	89 d6                	mov    %edx,%esi
  4367e5:	48 8d 8d 30 f8 ff ff 	lea    -0x7d0(%rbp),%rcx
  4367ec:	48 83 c1 08          	add    $0x8,%rcx
  4367f0:	48 89 cf             	mov    %rcx,%rdi
  4367f3:	48 89 85 d0 f5 ff ff 	mov    %rax,-0xa30(%rbp)
  4367fa:	e8 fd f4 00 00       	callq  445cfc <setEncryptedValueQWord>
  4367ff:	48 8d b5 10 f7 ff ff 	lea    -0x8f0(%rbp),%rsi
  436806:	48 8d 8d 30 f8 ff ff 	lea    -0x7d0(%rbp),%rcx
  43680d:	48 83 c1 10          	add    $0x10,%rcx
  436811:	48 89 cf             	mov    %rcx,%rdi
  436814:	48 89 85 c8 f5 ff ff 	mov    %rax,-0xa38(%rbp)
  43681b:	e8 dc f4 00 00       	callq  445cfc <setEncryptedValueQWord>
  436820:	48 8b bd 68 f8 ff ff 	mov    -0x798(%rbp),%rdi
  436827:	48 8d b5 30 f8 ff ff 	lea    -0x7d0(%rbp),%rsi
  43682e:	48 89 85 c0 f5 ff ff 	mov    %rax,-0xa40(%rbp)
  436835:	e8 16 82 fe ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  43683a:	89 85 bc f5 ff ff    	mov    %eax,-0xa44(%rbp)
  436840:	e8 11 f1 00 00       	callq  445956 <writeback_cache>
  436845:	31 c0                	xor    %eax,%eax
  436847:	41 88 c1             	mov    %al,%r9b
  43684a:	8b 85 bc f5 ff ff    	mov    -0xa44(%rbp),%eax
  436850:	83 f8 00             	cmp    $0x0,%eax
  436853:	41 0f 95 c2          	setne  %r10b
  436857:	41 80 e2 01          	and    $0x1,%r10b
  43685b:	41 0f b6 d2          	movzbl %r10b,%edx
  43685f:	89 95 e8 f6 ff ff    	mov    %edx,-0x918(%rbp)
  436865:	83 bd f4 f6 ff ff 00 	cmpl   $0x0,-0x90c(%rbp)
  43686c:	44 88 8d bb f5 ff ff 	mov    %r9b,-0xa45(%rbp)
  436873:	74 36                	je     4368ab <mbedtls_rsa_complete+0x63b>
  436875:	31 c0                	xor    %eax,%eax
  436877:	88 c1                	mov    %al,%cl
  436879:	83 bd f0 f6 ff ff 00 	cmpl   $0x0,-0x910(%rbp)
  436880:	88 8d bb f5 ff ff    	mov    %cl,-0xa45(%rbp)
  436886:	74 23                	je     4368ab <mbedtls_rsa_complete+0x63b>
  436888:	31 c0                	xor    %eax,%eax
  43688a:	88 c1                	mov    %al,%cl
  43688c:	83 bd ec f6 ff ff 00 	cmpl   $0x0,-0x914(%rbp)
  436893:	88 8d bb f5 ff ff    	mov    %cl,-0xa45(%rbp)
  436899:	74 10                	je     4368ab <mbedtls_rsa_complete+0x63b>
  43689b:	83 bd e8 f6 ff ff 00 	cmpl   $0x0,-0x918(%rbp)
  4368a2:	0f 95 c0             	setne  %al
  4368a5:	88 85 bb f5 ff ff    	mov    %al,-0xa45(%rbp)
  4368ab:	8a 85 bb f5 ff ff    	mov    -0xa45(%rbp),%al
  4368b1:	31 c9                	xor    %ecx,%ecx
  4368b3:	88 ca                	mov    %cl,%dl
  4368b5:	24 01                	and    $0x1,%al
  4368b7:	0f b6 c8             	movzbl %al,%ecx
  4368ba:	89 8d e4 f6 ff ff    	mov    %ecx,-0x91c(%rbp)
  4368c0:	83 bd f8 f6 ff ff 00 	cmpl   $0x0,-0x908(%rbp)
  4368c7:	88 95 ba f5 ff ff    	mov    %dl,-0xa46(%rbp)
  4368cd:	74 49                	je     436918 <mbedtls_rsa_complete+0x6a8>
  4368cf:	31 c0                	xor    %eax,%eax
  4368d1:	88 c1                	mov    %al,%cl
  4368d3:	83 bd f4 f6 ff ff 00 	cmpl   $0x0,-0x90c(%rbp)
  4368da:	88 8d ba f5 ff ff    	mov    %cl,-0xa46(%rbp)
  4368e0:	75 36                	jne    436918 <mbedtls_rsa_complete+0x6a8>
  4368e2:	31 c0                	xor    %eax,%eax
  4368e4:	88 c1                	mov    %al,%cl
  4368e6:	83 bd f0 f6 ff ff 00 	cmpl   $0x0,-0x910(%rbp)
  4368ed:	88 8d ba f5 ff ff    	mov    %cl,-0xa46(%rbp)
  4368f3:	75 23                	jne    436918 <mbedtls_rsa_complete+0x6a8>
  4368f5:	31 c0                	xor    %eax,%eax
  4368f7:	88 c1                	mov    %al,%cl
  4368f9:	83 bd ec f6 ff ff 00 	cmpl   $0x0,-0x914(%rbp)
  436900:	88 8d ba f5 ff ff    	mov    %cl,-0xa46(%rbp)
  436906:	74 10                	je     436918 <mbedtls_rsa_complete+0x6a8>
  436908:	83 bd e8 f6 ff ff 00 	cmpl   $0x0,-0x918(%rbp)
  43690f:	0f 95 c0             	setne  %al
  436912:	88 85 ba f5 ff ff    	mov    %al,-0xa46(%rbp)
  436918:	8a 85 ba f5 ff ff    	mov    -0xa46(%rbp),%al
  43691e:	31 c9                	xor    %ecx,%ecx
  436920:	88 ca                	mov    %cl,%dl
  436922:	24 01                	and    $0x1,%al
  436924:	0f b6 c8             	movzbl %al,%ecx
  436927:	89 8d e0 f6 ff ff    	mov    %ecx,-0x920(%rbp)
  43692d:	83 bd f4 f6 ff ff 00 	cmpl   $0x0,-0x90c(%rbp)
  436934:	88 95 b9 f5 ff ff    	mov    %dl,-0xa47(%rbp)
  43693a:	74 36                	je     436972 <mbedtls_rsa_complete+0x702>
  43693c:	31 c0                	xor    %eax,%eax
  43693e:	88 c1                	mov    %al,%cl
  436940:	83 bd f0 f6 ff ff 00 	cmpl   $0x0,-0x910(%rbp)
  436947:	88 8d b9 f5 ff ff    	mov    %cl,-0xa47(%rbp)
  43694d:	74 23                	je     436972 <mbedtls_rsa_complete+0x702>
  43694f:	31 c0                	xor    %eax,%eax
  436951:	88 c1                	mov    %al,%cl
  436953:	83 bd ec f6 ff ff 00 	cmpl   $0x0,-0x914(%rbp)
  43695a:	88 8d b9 f5 ff ff    	mov    %cl,-0xa47(%rbp)
  436960:	75 10                	jne    436972 <mbedtls_rsa_complete+0x702>
  436962:	83 bd e8 f6 ff ff 00 	cmpl   $0x0,-0x918(%rbp)
  436969:	0f 95 c0             	setne  %al
  43696c:	88 85 b9 f5 ff ff    	mov    %al,-0xa47(%rbp)
  436972:	8a 85 b9 f5 ff ff    	mov    -0xa47(%rbp),%al
  436978:	31 c9                	xor    %ecx,%ecx
  43697a:	88 ca                	mov    %cl,%dl
  43697c:	24 01                	and    $0x1,%al
  43697e:	0f b6 c8             	movzbl %al,%ecx
  436981:	89 8d dc f6 ff ff    	mov    %ecx,-0x924(%rbp)
  436987:	83 bd f8 f6 ff ff 00 	cmpl   $0x0,-0x908(%rbp)
  43698e:	88 95 b8 f5 ff ff    	mov    %dl,-0xa48(%rbp)
  436994:	74 49                	je     4369df <mbedtls_rsa_complete+0x76f>
  436996:	31 c0                	xor    %eax,%eax
  436998:	88 c1                	mov    %al,%cl
  43699a:	83 bd f4 f6 ff ff 00 	cmpl   $0x0,-0x90c(%rbp)
  4369a1:	88 8d b8 f5 ff ff    	mov    %cl,-0xa48(%rbp)
  4369a7:	75 36                	jne    4369df <mbedtls_rsa_complete+0x76f>
  4369a9:	31 c0                	xor    %eax,%eax
  4369ab:	88 c1                	mov    %al,%cl
  4369ad:	83 bd f0 f6 ff ff 00 	cmpl   $0x0,-0x910(%rbp)
  4369b4:	88 8d b8 f5 ff ff    	mov    %cl,-0xa48(%rbp)
  4369ba:	75 23                	jne    4369df <mbedtls_rsa_complete+0x76f>
  4369bc:	31 c0                	xor    %eax,%eax
  4369be:	88 c1                	mov    %al,%cl
  4369c0:	83 bd ec f6 ff ff 00 	cmpl   $0x0,-0x914(%rbp)
  4369c7:	88 8d b8 f5 ff ff    	mov    %cl,-0xa48(%rbp)
  4369cd:	75 10                	jne    4369df <mbedtls_rsa_complete+0x76f>
  4369cf:	83 bd e8 f6 ff ff 00 	cmpl   $0x0,-0x918(%rbp)
  4369d6:	0f 95 c0             	setne  %al
  4369d9:	88 85 b8 f5 ff ff    	mov    %al,-0xa48(%rbp)
  4369df:	8a 85 b8 f5 ff ff    	mov    -0xa48(%rbp),%al
  4369e5:	24 01                	and    $0x1,%al
  4369e7:	0f b6 c8             	movzbl %al,%ecx
  4369ea:	89 8d d8 f6 ff ff    	mov    %ecx,-0x928(%rbp)
  4369f0:	83 bd e4 f6 ff ff 00 	cmpl   $0x0,-0x91c(%rbp)
  4369f7:	b0 01                	mov    $0x1,%al
  4369f9:	88 85 b7 f5 ff ff    	mov    %al,-0xa49(%rbp)
  4369ff:	75 21                	jne    436a22 <mbedtls_rsa_complete+0x7b2>
  436a01:	83 bd e0 f6 ff ff 00 	cmpl   $0x0,-0x920(%rbp)
  436a08:	b0 01                	mov    $0x1,%al
  436a0a:	88 85 b7 f5 ff ff    	mov    %al,-0xa49(%rbp)
  436a10:	75 10                	jne    436a22 <mbedtls_rsa_complete+0x7b2>
  436a12:	83 bd dc f6 ff ff 00 	cmpl   $0x0,-0x924(%rbp)
  436a19:	0f 95 c0             	setne  %al
  436a1c:	88 85 b7 f5 ff ff    	mov    %al,-0xa49(%rbp)
  436a22:	8a 85 b7 f5 ff ff    	mov    -0xa49(%rbp),%al
  436a28:	24 01                	and    $0x1,%al
  436a2a:	0f b6 c8             	movzbl %al,%ecx
  436a2d:	89 8d d4 f6 ff ff    	mov    %ecx,-0x92c(%rbp)
  436a33:	83 bd d4 f6 ff ff 00 	cmpl   $0x0,-0x92c(%rbp)
  436a3a:	75 18                	jne    436a54 <mbedtls_rsa_complete+0x7e4>
  436a3c:	83 bd d8 f6 ff ff 00 	cmpl   $0x0,-0x928(%rbp)
  436a43:	75 0f                	jne    436a54 <mbedtls_rsa_complete+0x7e4>
  436a45:	c7 85 0c f7 ff ff 80 	movl   $0xffffbf80,-0x8f4(%rbp)
  436a4c:	bf ff ff 
  436a4f:	e9 21 28 00 00       	jmpq   439275 <mbedtls_rsa_complete+0x3005>
  436a54:	83 bd f8 f6 ff ff 00 	cmpl   $0x0,-0x908(%rbp)
  436a5b:	0f 85 a7 00 00 00    	jne    436b08 <mbedtls_rsa_complete+0x898>
  436a61:	83 bd f4 f6 ff ff 00 	cmpl   $0x0,-0x90c(%rbp)
  436a68:	0f 84 9a 00 00 00    	je     436b08 <mbedtls_rsa_complete+0x898>
  436a6e:	83 bd f0 f6 ff ff 00 	cmpl   $0x0,-0x910(%rbp)
  436a75:	0f 84 8d 00 00 00    	je     436b08 <mbedtls_rsa_complete+0x898>
  436a7b:	48 8b 85 00 f7 ff ff 	mov    -0x900(%rbp),%rax
  436a82:	48 83 c0 10          	add    $0x10,%rax
  436a86:	48 8b 8d 00 f7 ff ff 	mov    -0x900(%rbp),%rcx
  436a8d:	48 83 c1 58          	add    $0x58,%rcx
  436a91:	48 8b 95 00 f7 ff ff 	mov    -0x900(%rbp),%rdx
  436a98:	48 83 c2 70          	add    $0x70,%rdx
  436a9c:	48 89 c7             	mov    %rax,%rdi
  436a9f:	48 89 ce             	mov    %rcx,%rsi
  436aa2:	e8 19 5b fe ff       	callq  41c5c0 <mbedtls_mpi_mul_mpi>
  436aa7:	89 85 fc f6 ff ff    	mov    %eax,-0x904(%rbp)
  436aad:	83 f8 00             	cmp    $0x0,%eax
  436ab0:	74 16                	je     436ac8 <mbedtls_rsa_complete+0x858>
  436ab2:	8b 85 fc f6 ff ff    	mov    -0x904(%rbp),%eax
  436ab8:	05 80 bf ff ff       	add    $0xffffbf80,%eax
  436abd:	89 85 0c f7 ff ff    	mov    %eax,-0x8f4(%rbp)
  436ac3:	e9 ad 27 00 00       	jmpq   439275 <mbedtls_rsa_complete+0x3005>
  436ac8:	48 8b 85 00 f7 ff ff 	mov    -0x900(%rbp),%rax
  436acf:	48 83 c0 10          	add    $0x10,%rax
  436ad3:	48 89 85 70 f8 ff ff 	mov    %rax,-0x790(%rbp)
  436ada:	48 8b bd 70 f8 ff ff 	mov    -0x790(%rbp),%rdi
  436ae1:	e8 ea 46 fe ff       	callq  41b1d0 <mbedtls_mpi_bitlen>
  436ae6:	48 83 c0 07          	add    $0x7,%rax
  436aea:	48 c1 e8 03          	shr    $0x3,%rax
  436aee:	48 8b bd 00 f7 ff ff 	mov    -0x900(%rbp),%rdi
  436af5:	48 83 c7 08          	add    $0x8,%rdi
  436af9:	48 89 c6             	mov    %rax,%rsi
  436afc:	e8 fb f1 00 00       	callq  445cfc <setEncryptedValueQWord>
  436b01:	48 89 85 a8 f5 ff ff 	mov    %rax,-0xa58(%rbp)
  436b08:	83 bd e0 f6 ff ff 00 	cmpl   $0x0,-0x920(%rbp)
  436b0f:	0f 84 23 15 00 00    	je     438038 <mbedtls_rsa_complete+0x1dc8>
  436b15:	48 8b 85 00 f7 ff ff 	mov    -0x900(%rbp),%rax
  436b1c:	48 83 c0 10          	add    $0x10,%rax
  436b20:	48 8b 8d 00 f7 ff ff 	mov    -0x900(%rbp),%rcx
  436b27:	48 83 c1 28          	add    $0x28,%rcx
  436b2b:	48 8b 95 00 f7 ff ff 	mov    -0x900(%rbp),%rdx
  436b32:	48 83 c2 40          	add    $0x40,%rdx
  436b36:	48 8b b5 00 f7 ff ff 	mov    -0x900(%rbp),%rsi
  436b3d:	48 83 c6 58          	add    $0x58,%rsi
  436b41:	48 8b bd 00 f7 ff ff 	mov    -0x900(%rbp),%rdi
  436b48:	48 83 c7 70          	add    $0x70,%rdi
  436b4c:	48 89 85 a0 f5 ff ff 	mov    %rax,-0xa60(%rbp)
  436b53:	48 89 8d 98 f5 ff ff 	mov    %rcx,-0xa68(%rbp)
  436b5a:	48 89 95 90 f5 ff ff 	mov    %rdx,-0xa70(%rbp)
  436b61:	48 89 b5 88 f5 ff ff 	mov    %rsi,-0xa78(%rbp)
  436b68:	48 89 bd 80 f5 ff ff 	mov    %rdi,-0xa80(%rbp)
  436b6f:	e8 e2 ed 00 00       	callq  445956 <writeback_cache>
  436b74:	e8 dd ed 00 00       	callq  445956 <writeback_cache>
  436b79:	41 b8 36 00 00 00    	mov    $0x36,%r8d
  436b7f:	44 89 c2             	mov    %r8d,%edx
  436b82:	48 be 40 e5 44 00 00 	movabs $0x44e540,%rsi
  436b89:	00 00 00 
  436b8c:	48 8b 85 a0 f5 ff ff 	mov    -0xa60(%rbp),%rax
  436b93:	48 89 85 50 f9 ff ff 	mov    %rax,-0x6b0(%rbp)
  436b9a:	48 8b 85 98 f5 ff ff 	mov    -0xa68(%rbp),%rax
  436ba1:	48 89 85 48 f9 ff ff 	mov    %rax,-0x6b8(%rbp)
  436ba8:	48 8b 85 90 f5 ff ff 	mov    -0xa70(%rbp),%rax
  436baf:	48 89 85 40 f9 ff ff 	mov    %rax,-0x6c0(%rbp)
  436bb6:	48 8b 85 88 f5 ff ff 	mov    -0xa78(%rbp),%rax
  436bbd:	48 89 85 38 f9 ff ff 	mov    %rax,-0x6c8(%rbp)
  436bc4:	48 8b 85 80 f5 ff ff 	mov    -0xa80(%rbp),%rax
  436bcb:	48 89 85 30 f9 ff ff 	mov    %rax,-0x6d0(%rbp)
  436bd2:	c7 85 2c f9 ff ff 00 	movl   $0x0,-0x6d4(%rbp)
  436bd9:	00 00 00 
  436bdc:	48 8d 85 80 f8 ff ff 	lea    -0x780(%rbp),%rax
  436be3:	48 89 c7             	mov    %rax,%rdi
  436be6:	e8 85 a5 fc ff       	callq  401170 <memcpy@plt>
  436beb:	48 c7 85 78 f8 ff ff 	movq   $0x36,-0x788(%rbp)
  436bf2:	36 00 00 00 
  436bf6:	48 83 bd 38 f9 ff ff 	cmpq   $0x0,-0x6c8(%rbp)
  436bfd:	00 
  436bfe:	74 3c                	je     436c3c <mbedtls_rsa_complete+0x9cc>
  436c00:	48 83 bd 30 f9 ff ff 	cmpq   $0x0,-0x6d0(%rbp)
  436c07:	00 
  436c08:	74 32                	je     436c3c <mbedtls_rsa_complete+0x9cc>
  436c0a:	48 8b 85 38 f9 ff ff 	mov    -0x6c8(%rbp),%rax
  436c11:	48 83 c0 10          	add    $0x10,%rax
  436c15:	48 89 c7             	mov    %rax,%rdi
  436c18:	e8 2b f5 00 00       	callq  446148 <getDecryptedValueQWord>
  436c1d:	48 83 f8 00          	cmp    $0x0,%rax
  436c21:	75 19                	jne    436c3c <mbedtls_rsa_complete+0x9cc>
  436c23:	48 8b 85 30 f9 ff ff 	mov    -0x6d0(%rbp),%rax
  436c2a:	48 83 c0 10          	add    $0x10,%rax
  436c2e:	48 89 c7             	mov    %rax,%rdi
  436c31:	e8 12 f5 00 00       	callq  446148 <getDecryptedValueQWord>
  436c36:	48 83 f8 00          	cmp    $0x0,%rax
  436c3a:	74 0f                	je     436c4b <mbedtls_rsa_complete+0x9db>
  436c3c:	c7 85 5c f9 ff ff fc 	movl   $0xfffffffc,-0x6a4(%rbp)
  436c43:	ff ff ff 
  436c46:	e9 a7 13 00 00       	jmpq   437ff2 <mbedtls_rsa_complete+0x1d82>
  436c4b:	48 8b 85 50 f9 ff ff 	mov    -0x6b0(%rbp),%rax
  436c52:	48 89 85 78 f5 ff ff 	mov    %rax,-0xa88(%rbp)
  436c59:	e8 f8 ec 00 00       	callq  445956 <writeback_cache>
  436c5e:	48 8b 85 78 f5 ff ff 	mov    -0xa88(%rbp),%rax
  436c65:	48 89 85 98 f9 ff ff 	mov    %rax,-0x668(%rbp)
  436c6c:	48 c7 85 90 f9 ff ff 	movq   $0x0,-0x670(%rbp)
  436c73:	00 00 00 00 
  436c77:	48 83 bd 90 f9 ff ff 	cmpq   $0x0,-0x670(%rbp)
  436c7e:	00 
  436c7f:	7d 14                	jge    436c95 <mbedtls_rsa_complete+0xa25>
  436c81:	31 c0                	xor    %eax,%eax
  436c83:	89 c1                	mov    %eax,%ecx
  436c85:	48 2b 8d 90 f9 ff ff 	sub    -0x670(%rbp),%rcx
  436c8c:	48 89 8d 70 f5 ff ff 	mov    %rcx,-0xa90(%rbp)
  436c93:	eb 0e                	jmp    436ca3 <mbedtls_rsa_complete+0xa33>
  436c95:	48 8b 85 90 f9 ff ff 	mov    -0x670(%rbp),%rax
  436c9c:	48 89 85 70 f5 ff ff 	mov    %rax,-0xa90(%rbp)
  436ca3:	48 8b 85 70 f5 ff ff 	mov    -0xa90(%rbp),%rax
  436caa:	48 8d 8d 10 f7 ff ff 	lea    -0x8f0(%rbp),%rcx
  436cb1:	48 89 cf             	mov    %rcx,%rdi
  436cb4:	48 89 c6             	mov    %rax,%rsi
  436cb7:	e8 40 f0 00 00       	callq  445cfc <setEncryptedValueQWord>
  436cbc:	48 8d 8d 60 f9 ff ff 	lea    -0x6a0(%rbp),%rcx
  436cc3:	48 8b b5 90 f9 ff ff 	mov    -0x670(%rbp),%rsi
  436cca:	48 83 fe 00          	cmp    $0x0,%rsi
  436cce:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  436cd3:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  436cd9:	44 0f 4c c2          	cmovl  %edx,%r8d
  436cdd:	48 89 cf             	mov    %rcx,%rdi
  436ce0:	44 89 c6             	mov    %r8d,%esi
  436ce3:	48 89 85 68 f5 ff ff 	mov    %rax,-0xa98(%rbp)
  436cea:	e8 0f ef 00 00       	callq  445bfe <setEncryptedValueDWord>
  436cef:	ba 01 00 00 00       	mov    $0x1,%edx
  436cf4:	89 d6                	mov    %edx,%esi
  436cf6:	48 8d 8d 60 f9 ff ff 	lea    -0x6a0(%rbp),%rcx
  436cfd:	48 83 c1 08          	add    $0x8,%rcx
  436d01:	48 89 cf             	mov    %rcx,%rdi
  436d04:	48 89 85 60 f5 ff ff 	mov    %rax,-0xaa0(%rbp)
  436d0b:	e8 ec ef 00 00       	callq  445cfc <setEncryptedValueQWord>
  436d10:	48 8d b5 10 f7 ff ff 	lea    -0x8f0(%rbp),%rsi
  436d17:	48 8d 8d 60 f9 ff ff 	lea    -0x6a0(%rbp),%rcx
  436d1e:	48 83 c1 10          	add    $0x10,%rcx
  436d22:	48 89 cf             	mov    %rcx,%rdi
  436d25:	48 89 85 58 f5 ff ff 	mov    %rax,-0xaa8(%rbp)
  436d2c:	e8 cb ef 00 00       	callq  445cfc <setEncryptedValueQWord>
  436d31:	48 8b bd 98 f9 ff ff 	mov    -0x668(%rbp),%rdi
  436d38:	48 8d b5 60 f9 ff ff 	lea    -0x6a0(%rbp),%rsi
  436d3f:	48 89 85 50 f5 ff ff 	mov    %rax,-0xab0(%rbp)
  436d46:	e8 05 7d fe ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  436d4b:	89 85 4c f5 ff ff    	mov    %eax,-0xab4(%rbp)
  436d51:	e8 00 ec 00 00       	callq  445956 <writeback_cache>
  436d56:	8b 85 4c f5 ff ff    	mov    -0xab4(%rbp),%eax
  436d5c:	83 f8 00             	cmp    $0x0,%eax
  436d5f:	0f 8e 64 02 00 00    	jle    436fc9 <mbedtls_rsa_complete+0xd59>
  436d65:	48 8b 85 40 f9 ff ff 	mov    -0x6c0(%rbp),%rax
  436d6c:	48 89 85 40 f5 ff ff 	mov    %rax,-0xac0(%rbp)
  436d73:	e8 de eb 00 00       	callq  445956 <writeback_cache>
  436d78:	48 8b 85 40 f5 ff ff 	mov    -0xac0(%rbp),%rax
  436d7f:	48 89 85 d8 f9 ff ff 	mov    %rax,-0x628(%rbp)
  436d86:	48 c7 85 d0 f9 ff ff 	movq   $0x1,-0x630(%rbp)
  436d8d:	01 00 00 00 
  436d91:	48 83 bd d0 f9 ff ff 	cmpq   $0x0,-0x630(%rbp)
  436d98:	00 
  436d99:	7d 14                	jge    436daf <mbedtls_rsa_complete+0xb3f>
  436d9b:	31 c0                	xor    %eax,%eax
  436d9d:	89 c1                	mov    %eax,%ecx
  436d9f:	48 2b 8d d0 f9 ff ff 	sub    -0x630(%rbp),%rcx
  436da6:	48 89 8d 38 f5 ff ff 	mov    %rcx,-0xac8(%rbp)
  436dad:	eb 0e                	jmp    436dbd <mbedtls_rsa_complete+0xb4d>
  436daf:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
  436db6:	48 89 85 38 f5 ff ff 	mov    %rax,-0xac8(%rbp)
  436dbd:	48 8b 85 38 f5 ff ff 	mov    -0xac8(%rbp),%rax
  436dc4:	48 8d 8d 10 f7 ff ff 	lea    -0x8f0(%rbp),%rcx
  436dcb:	48 89 cf             	mov    %rcx,%rdi
  436dce:	48 89 c6             	mov    %rax,%rsi
  436dd1:	e8 26 ef 00 00       	callq  445cfc <setEncryptedValueQWord>
  436dd6:	48 8d 8d a0 f9 ff ff 	lea    -0x660(%rbp),%rcx
  436ddd:	48 8b b5 d0 f9 ff ff 	mov    -0x630(%rbp),%rsi
  436de4:	48 83 fe 00          	cmp    $0x0,%rsi
  436de8:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  436ded:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  436df3:	44 0f 4c c2          	cmovl  %edx,%r8d
  436df7:	48 89 cf             	mov    %rcx,%rdi
  436dfa:	44 89 c6             	mov    %r8d,%esi
  436dfd:	48 89 85 30 f5 ff ff 	mov    %rax,-0xad0(%rbp)
  436e04:	e8 f5 ed 00 00       	callq  445bfe <setEncryptedValueDWord>
  436e09:	ba 01 00 00 00       	mov    $0x1,%edx
  436e0e:	89 d6                	mov    %edx,%esi
  436e10:	48 8d 8d a0 f9 ff ff 	lea    -0x660(%rbp),%rcx
  436e17:	48 83 c1 08          	add    $0x8,%rcx
  436e1b:	48 89 cf             	mov    %rcx,%rdi
  436e1e:	48 89 85 28 f5 ff ff 	mov    %rax,-0xad8(%rbp)
  436e25:	e8 d2 ee 00 00       	callq  445cfc <setEncryptedValueQWord>
  436e2a:	48 8d b5 10 f7 ff ff 	lea    -0x8f0(%rbp),%rsi
  436e31:	48 8d 8d a0 f9 ff ff 	lea    -0x660(%rbp),%rcx
  436e38:	48 83 c1 10          	add    $0x10,%rcx
  436e3c:	48 89 cf             	mov    %rcx,%rdi
  436e3f:	48 89 85 20 f5 ff ff 	mov    %rax,-0xae0(%rbp)
  436e46:	e8 b1 ee 00 00       	callq  445cfc <setEncryptedValueQWord>
  436e4b:	48 8b bd d8 f9 ff ff 	mov    -0x628(%rbp),%rdi
  436e52:	48 8d b5 a0 f9 ff ff 	lea    -0x660(%rbp),%rsi
  436e59:	48 89 85 18 f5 ff ff 	mov    %rax,-0xae8(%rbp)
  436e60:	e8 eb 7b fe ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  436e65:	89 85 14 f5 ff ff    	mov    %eax,-0xaec(%rbp)
  436e6b:	e8 e6 ea 00 00       	callq  445956 <writeback_cache>
  436e70:	8b 85 14 f5 ff ff    	mov    -0xaec(%rbp),%eax
  436e76:	83 f8 00             	cmp    $0x0,%eax
  436e79:	0f 8e 4a 01 00 00    	jle    436fc9 <mbedtls_rsa_complete+0xd59>
  436e7f:	48 8b bd 40 f9 ff ff 	mov    -0x6c0(%rbp),%rdi
  436e86:	48 8b b5 50 f9 ff ff 	mov    -0x6b0(%rbp),%rsi
  436e8d:	e8 be 7b fe ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  436e92:	83 f8 00             	cmp    $0x0,%eax
  436e95:	0f 8d 2e 01 00 00    	jge    436fc9 <mbedtls_rsa_complete+0xd59>
  436e9b:	48 8b 85 48 f9 ff ff 	mov    -0x6b8(%rbp),%rax
  436ea2:	48 89 85 08 f5 ff ff 	mov    %rax,-0xaf8(%rbp)
  436ea9:	e8 a8 ea 00 00       	callq  445956 <writeback_cache>
  436eae:	48 8b 85 08 f5 ff ff 	mov    -0xaf8(%rbp),%rax
  436eb5:	48 89 85 10 fa ff ff 	mov    %rax,-0x5f0(%rbp)
  436ebc:	48 c7 85 08 fa ff ff 	movq   $0x1,-0x5f8(%rbp)
  436ec3:	01 00 00 00 
  436ec7:	48 83 bd 08 fa ff ff 	cmpq   $0x0,-0x5f8(%rbp)
  436ece:	00 
  436ecf:	7d 14                	jge    436ee5 <mbedtls_rsa_complete+0xc75>
  436ed1:	31 c0                	xor    %eax,%eax
  436ed3:	89 c1                	mov    %eax,%ecx
  436ed5:	48 2b 8d 08 fa ff ff 	sub    -0x5f8(%rbp),%rcx
  436edc:	48 89 8d 00 f5 ff ff 	mov    %rcx,-0xb00(%rbp)
  436ee3:	eb 0e                	jmp    436ef3 <mbedtls_rsa_complete+0xc83>
  436ee5:	48 8b 85 08 fa ff ff 	mov    -0x5f8(%rbp),%rax
  436eec:	48 89 85 00 f5 ff ff 	mov    %rax,-0xb00(%rbp)
  436ef3:	48 8b 85 00 f5 ff ff 	mov    -0xb00(%rbp),%rax
  436efa:	48 8d 8d 10 f7 ff ff 	lea    -0x8f0(%rbp),%rcx
  436f01:	48 89 cf             	mov    %rcx,%rdi
  436f04:	48 89 c6             	mov    %rax,%rsi
  436f07:	e8 f0 ed 00 00       	callq  445cfc <setEncryptedValueQWord>
  436f0c:	48 8d 8d e0 f9 ff ff 	lea    -0x620(%rbp),%rcx
  436f13:	48 8b b5 08 fa ff ff 	mov    -0x5f8(%rbp),%rsi
  436f1a:	48 83 fe 00          	cmp    $0x0,%rsi
  436f1e:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  436f23:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  436f29:	44 0f 4c c2          	cmovl  %edx,%r8d
  436f2d:	48 89 cf             	mov    %rcx,%rdi
  436f30:	44 89 c6             	mov    %r8d,%esi
  436f33:	48 89 85 f8 f4 ff ff 	mov    %rax,-0xb08(%rbp)
  436f3a:	e8 bf ec 00 00       	callq  445bfe <setEncryptedValueDWord>
  436f3f:	ba 01 00 00 00       	mov    $0x1,%edx
  436f44:	89 d6                	mov    %edx,%esi
  436f46:	48 8d 8d e0 f9 ff ff 	lea    -0x620(%rbp),%rcx
  436f4d:	48 83 c1 08          	add    $0x8,%rcx
  436f51:	48 89 cf             	mov    %rcx,%rdi
  436f54:	48 89 85 f0 f4 ff ff 	mov    %rax,-0xb10(%rbp)
  436f5b:	e8 9c ed 00 00       	callq  445cfc <setEncryptedValueQWord>
  436f60:	48 8d b5 10 f7 ff ff 	lea    -0x8f0(%rbp),%rsi
  436f67:	48 8d 8d e0 f9 ff ff 	lea    -0x620(%rbp),%rcx
  436f6e:	48 83 c1 10          	add    $0x10,%rcx
  436f72:	48 89 cf             	mov    %rcx,%rdi
  436f75:	48 89 85 e8 f4 ff ff 	mov    %rax,-0xb18(%rbp)
  436f7c:	e8 7b ed 00 00       	callq  445cfc <setEncryptedValueQWord>
  436f81:	48 8b bd 10 fa ff ff 	mov    -0x5f0(%rbp),%rdi
  436f88:	48 8d b5 e0 f9 ff ff 	lea    -0x620(%rbp),%rsi
  436f8f:	48 89 85 e0 f4 ff ff 	mov    %rax,-0xb20(%rbp)
  436f96:	e8 b5 7a fe ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  436f9b:	89 85 dc f4 ff ff    	mov    %eax,-0xb24(%rbp)
  436fa1:	e8 b0 e9 00 00       	callq  445956 <writeback_cache>
  436fa6:	8b 85 dc f4 ff ff    	mov    -0xb24(%rbp),%eax
  436fac:	83 f8 00             	cmp    $0x0,%eax
  436faf:	7e 18                	jle    436fc9 <mbedtls_rsa_complete+0xd59>
  436fb1:	48 8b bd 48 f9 ff ff 	mov    -0x6b8(%rbp),%rdi
  436fb8:	48 8b b5 50 f9 ff ff 	mov    -0x6b0(%rbp),%rsi
  436fbf:	e8 8c 7a fe ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  436fc4:	83 f8 00             	cmp    $0x0,%eax
  436fc7:	7c 0f                	jl     436fd8 <mbedtls_rsa_complete+0xd68>
  436fc9:	c7 85 5c f9 ff ff fc 	movl   $0xfffffffc,-0x6a4(%rbp)
  436fd0:	ff ff ff 
  436fd3:	e9 1a 10 00 00       	jmpq   437ff2 <mbedtls_rsa_complete+0x1d82>
  436fd8:	48 8d 85 c0 f8 ff ff 	lea    -0x740(%rbp),%rax
  436fdf:	48 89 85 18 fa ff ff 	mov    %rax,-0x5e8(%rbp)
  436fe6:	48 8b 85 18 fa ff ff 	mov    -0x5e8(%rbp),%rax
  436fed:	48 89 c7             	mov    %rax,%rdi
  436ff0:	be 01 00 00 00       	mov    $0x1,%esi
  436ff5:	e8 04 ec 00 00       	callq  445bfe <setEncryptedValueDWord>
  436ffa:	31 f6                	xor    %esi,%esi
  436ffc:	48 8b bd 18 fa ff ff 	mov    -0x5e8(%rbp),%rdi
  437003:	48 83 c7 08          	add    $0x8,%rdi
  437007:	48 89 85 d0 f4 ff ff 	mov    %rax,-0xb30(%rbp)
  43700e:	e8 e9 ec 00 00       	callq  445cfc <setEncryptedValueQWord>
  437013:	31 c9                	xor    %ecx,%ecx
  437015:	89 ce                	mov    %ecx,%esi
  437017:	48 8b bd 18 fa ff ff 	mov    -0x5e8(%rbp),%rdi
  43701e:	48 83 c7 10          	add    $0x10,%rdi
  437022:	48 89 85 c8 f4 ff ff 	mov    %rax,-0xb38(%rbp)
  437029:	e8 ce ec 00 00       	callq  445cfc <setEncryptedValueQWord>
  43702e:	48 8d b5 f0 f8 ff ff 	lea    -0x710(%rbp),%rsi
  437035:	48 89 b5 48 fa ff ff 	mov    %rsi,-0x5b8(%rbp)
  43703c:	48 8b b5 48 fa ff ff 	mov    -0x5b8(%rbp),%rsi
  437043:	48 89 f7             	mov    %rsi,%rdi
  437046:	be 01 00 00 00       	mov    $0x1,%esi
  43704b:	48 89 85 c0 f4 ff ff 	mov    %rax,-0xb40(%rbp)
  437052:	e8 a7 eb 00 00       	callq  445bfe <setEncryptedValueDWord>
  437057:	31 c9                	xor    %ecx,%ecx
  437059:	89 ce                	mov    %ecx,%esi
  43705b:	48 8b bd 48 fa ff ff 	mov    -0x5b8(%rbp),%rdi
  437062:	48 83 c7 08          	add    $0x8,%rdi
  437066:	48 89 85 b8 f4 ff ff 	mov    %rax,-0xb48(%rbp)
  43706d:	e8 8a ec 00 00       	callq  445cfc <setEncryptedValueQWord>
  437072:	31 c9                	xor    %ecx,%ecx
  437074:	89 ce                	mov    %ecx,%esi
  437076:	48 8b bd 48 fa ff ff 	mov    -0x5b8(%rbp),%rdi
  43707d:	48 83 c7 10          	add    $0x10,%rdi
  437081:	48 89 85 b0 f4 ff ff 	mov    %rax,-0xb50(%rbp)
  437088:	e8 6f ec 00 00       	callq  445cfc <setEncryptedValueQWord>
  43708d:	48 8b b5 40 f9 ff ff 	mov    -0x6c0(%rbp),%rsi
  437094:	48 8b 95 48 f9 ff ff 	mov    -0x6b8(%rbp),%rdx
  43709b:	48 8d bd f0 f8 ff ff 	lea    -0x710(%rbp),%rdi
  4370a2:	48 89 85 a8 f4 ff ff 	mov    %rax,-0xb58(%rbp)
  4370a9:	e8 12 55 fe ff       	callq  41c5c0 <mbedtls_mpi_mul_mpi>
  4370ae:	89 85 2c f9 ff ff    	mov    %eax,-0x6d4(%rbp)
  4370b4:	83 f8 00             	cmp    $0x0,%eax
  4370b7:	74 05                	je     4370be <mbedtls_rsa_complete+0xe4e>
  4370b9:	e9 16 0c 00 00       	jmpq   437cd4 <mbedtls_rsa_complete+0x1a64>
  4370be:	e8 93 e8 00 00       	callq  445956 <writeback_cache>
  4370c3:	48 8d 85 f0 f8 ff ff 	lea    -0x710(%rbp),%rax
  4370ca:	48 89 85 90 fa ff ff 	mov    %rax,-0x570(%rbp)
  4370d1:	48 89 85 88 fa ff ff 	mov    %rax,-0x578(%rbp)
  4370d8:	48 c7 85 80 fa ff ff 	movq   $0x1,-0x580(%rbp)
  4370df:	01 00 00 00 
  4370e3:	48 83 bd 80 fa ff ff 	cmpq   $0x0,-0x580(%rbp)
  4370ea:	00 
  4370eb:	7d 14                	jge    437101 <mbedtls_rsa_complete+0xe91>
  4370ed:	31 c0                	xor    %eax,%eax
  4370ef:	89 c1                	mov    %eax,%ecx
  4370f1:	48 2b 8d 80 fa ff ff 	sub    -0x580(%rbp),%rcx
  4370f8:	48 89 8d a0 f4 ff ff 	mov    %rcx,-0xb60(%rbp)
  4370ff:	eb 0e                	jmp    43710f <mbedtls_rsa_complete+0xe9f>
  437101:	48 8b 85 80 fa ff ff 	mov    -0x580(%rbp),%rax
  437108:	48 89 85 a0 f4 ff ff 	mov    %rax,-0xb60(%rbp)
  43710f:	48 8b 85 a0 f4 ff ff 	mov    -0xb60(%rbp),%rax
  437116:	48 8d 8d 10 f7 ff ff 	lea    -0x8f0(%rbp),%rcx
  43711d:	48 89 cf             	mov    %rcx,%rdi
  437120:	48 89 c6             	mov    %rax,%rsi
  437123:	e8 d4 eb 00 00       	callq  445cfc <setEncryptedValueQWord>
  437128:	48 8d 8d 50 fa ff ff 	lea    -0x5b0(%rbp),%rcx
  43712f:	48 8b b5 80 fa ff ff 	mov    -0x580(%rbp),%rsi
  437136:	48 83 fe 00          	cmp    $0x0,%rsi
  43713a:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  43713f:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  437145:	44 0f 4c c2          	cmovl  %edx,%r8d
  437149:	48 89 cf             	mov    %rcx,%rdi
  43714c:	44 89 c6             	mov    %r8d,%esi
  43714f:	48 89 85 98 f4 ff ff 	mov    %rax,-0xb68(%rbp)
  437156:	e8 a3 ea 00 00       	callq  445bfe <setEncryptedValueDWord>
  43715b:	ba 01 00 00 00       	mov    $0x1,%edx
  437160:	89 d6                	mov    %edx,%esi
  437162:	48 8d 8d 50 fa ff ff 	lea    -0x5b0(%rbp),%rcx
  437169:	48 83 c1 08          	add    $0x8,%rcx
  43716d:	48 89 cf             	mov    %rcx,%rdi
  437170:	48 89 85 90 f4 ff ff 	mov    %rax,-0xb70(%rbp)
  437177:	e8 80 eb 00 00       	callq  445cfc <setEncryptedValueQWord>
  43717c:	48 8d b5 10 f7 ff ff 	lea    -0x8f0(%rbp),%rsi
  437183:	48 8d 8d 50 fa ff ff 	lea    -0x5b0(%rbp),%rcx
  43718a:	48 83 c1 10          	add    $0x10,%rcx
  43718e:	48 89 cf             	mov    %rcx,%rdi
  437191:	48 89 85 88 f4 ff ff 	mov    %rax,-0xb78(%rbp)
  437198:	e8 5f eb 00 00       	callq  445cfc <setEncryptedValueQWord>
  43719d:	48 8b bd 90 fa ff ff 	mov    -0x570(%rbp),%rdi
  4371a4:	48 8b b5 88 fa ff ff 	mov    -0x578(%rbp),%rsi
  4371ab:	48 8d 95 50 fa ff ff 	lea    -0x5b0(%rbp),%rdx
  4371b2:	48 89 85 80 f4 ff ff 	mov    %rax,-0xb80(%rbp)
  4371b9:	e8 72 47 fe ff       	callq  41b930 <mbedtls_mpi_sub_mpi>
  4371be:	89 85 7c f4 ff ff    	mov    %eax,-0xb84(%rbp)
  4371c4:	e8 8d e7 00 00       	callq  445956 <writeback_cache>
  4371c9:	8b 85 7c f4 ff ff    	mov    -0xb84(%rbp),%eax
  4371cf:	89 85 2c f9 ff ff    	mov    %eax,-0x6d4(%rbp)
  4371d5:	83 f8 00             	cmp    $0x0,%eax
  4371d8:	74 05                	je     4371df <mbedtls_rsa_complete+0xf6f>
  4371da:	e9 f5 0a 00 00       	jmpq   437cd4 <mbedtls_rsa_complete+0x1a64>
  4371df:	48 8d 85 f0 f8 ff ff 	lea    -0x710(%rbp),%rax
  4371e6:	48 89 85 b0 fa ff ff 	mov    %rax,-0x550(%rbp)
  4371ed:	48 c7 85 98 fa ff ff 	movq   $0x0,-0x568(%rbp)
  4371f4:	00 00 00 00 
  4371f8:	48 c7 85 a8 fa ff ff 	movq   $0x0,-0x558(%rbp)
  4371ff:	00 00 00 00 
  437203:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
  43720a:	48 8b 8d b0 fa ff ff 	mov    -0x550(%rbp),%rcx
  437211:	48 83 c1 08          	add    $0x8,%rcx
  437215:	48 89 cf             	mov    %rcx,%rdi
  437218:	48 89 85 70 f4 ff ff 	mov    %rax,-0xb90(%rbp)
  43721f:	e8 24 ef 00 00       	callq  446148 <getDecryptedValueQWord>
  437224:	48 8b 8d 70 f4 ff ff 	mov    -0xb90(%rbp),%rcx
  43722b:	48 39 c1             	cmp    %rax,%rcx
  43722e:	0f 83 9f 00 00 00    	jae    4372d3 <mbedtls_rsa_complete+0x1063>
  437234:	48 c7 85 a0 fa ff ff 	movq   $0x0,-0x560(%rbp)
  43723b:	00 00 00 00 
  43723f:	48 83 bd a0 fa ff ff 	cmpq   $0x40,-0x560(%rbp)
  437246:	40 
  437247:	73 73                	jae    4372bc <mbedtls_rsa_complete+0x104c>
  437249:	48 8b 85 b0 fa ff ff 	mov    -0x550(%rbp),%rax
  437250:	48 83 c0 10          	add    $0x10,%rax
  437254:	48 89 c7             	mov    %rax,%rdi
  437257:	e8 ec ee 00 00       	callq  446148 <getDecryptedValueQWord>
  43725c:	48 8b bd a8 fa ff ff 	mov    -0x558(%rbp),%rdi
  437263:	48 c1 e7 03          	shl    $0x3,%rdi
  437267:	48 01 f8             	add    %rdi,%rax
  43726a:	48 89 c7             	mov    %rax,%rdi
  43726d:	e8 d6 ee 00 00       	callq  446148 <getDecryptedValueQWord>
  437272:	48 8b 8d a0 fa ff ff 	mov    -0x560(%rbp),%rcx
  437279:	48 d3 e8             	shr    %cl,%rax
  43727c:	48 83 e0 01          	and    $0x1,%rax
  437280:	48 83 f8 00          	cmp    $0x0,%rax
  437284:	74 10                	je     437296 <mbedtls_rsa_complete+0x1026>
  437286:	48 8b 85 98 fa ff ff 	mov    -0x568(%rbp),%rax
  43728d:	48 89 85 b8 fa ff ff 	mov    %rax,-0x548(%rbp)
  437294:	eb 48                	jmp    4372de <mbedtls_rsa_complete+0x106e>
  437296:	48 8b 85 a0 fa ff ff 	mov    -0x560(%rbp),%rax
  43729d:	48 83 c0 01          	add    $0x1,%rax
  4372a1:	48 89 85 a0 fa ff ff 	mov    %rax,-0x560(%rbp)
  4372a8:	48 8b 85 98 fa ff ff 	mov    -0x568(%rbp),%rax
  4372af:	48 83 c0 01          	add    $0x1,%rax
  4372b3:	48 89 85 98 fa ff ff 	mov    %rax,-0x568(%rbp)
  4372ba:	eb 83                	jmp    43723f <mbedtls_rsa_complete+0xfcf>
  4372bc:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
  4372c3:	48 83 c0 01          	add    $0x1,%rax
  4372c7:	48 89 85 a8 fa ff ff 	mov    %rax,-0x558(%rbp)
  4372ce:	e9 30 ff ff ff       	jmpq   437203 <mbedtls_rsa_complete+0xf93>
  4372d3:	48 c7 85 b8 fa ff ff 	movq   $0x0,-0x548(%rbp)
  4372da:	00 00 00 00 
  4372de:	48 8b 85 b8 fa ff ff 	mov    -0x548(%rbp),%rax
  4372e5:	66 89 c1             	mov    %ax,%cx
  4372e8:	66 89 8d 26 f9 ff ff 	mov    %cx,-0x6da(%rbp)
  4372ef:	0f b7 d1             	movzwl %cx,%edx
  4372f2:	83 fa 00             	cmp    $0x0,%edx
  4372f5:	75 0f                	jne    437306 <mbedtls_rsa_complete+0x1096>
  4372f7:	c7 85 2c f9 ff ff fc 	movl   $0xfffffffc,-0x6d4(%rbp)
  4372fe:	ff ff ff 
  437301:	e9 ce 09 00 00       	jmpq   437cd4 <mbedtls_rsa_complete+0x1a64>
  437306:	0f b7 85 26 f9 ff ff 	movzwl -0x6da(%rbp),%eax
  43730d:	89 c6                	mov    %eax,%esi
  43730f:	48 8d bd f0 f8 ff ff 	lea    -0x710(%rbp),%rdi
  437316:	e8 b5 9c fe ff       	callq  420fd0 <mbedtls_mpi_shift_r>
  43731b:	89 85 2c f9 ff ff    	mov    %eax,-0x6d4(%rbp)
  437321:	83 f8 00             	cmp    $0x0,%eax
  437324:	74 05                	je     43732b <mbedtls_rsa_complete+0x10bb>
  437326:	e9 a9 09 00 00       	jmpq   437cd4 <mbedtls_rsa_complete+0x1a64>
  43732b:	66 c7 85 2a f9 ff ff 	movw   $0x0,-0x6d6(%rbp)
  437332:	00 00 
  437334:	48 8b 85 50 f9 ff ff 	mov    -0x6b0(%rbp),%rax
  43733b:	48 83 c0 10          	add    $0x10,%rax
  43733f:	48 89 c7             	mov    %rax,%rdi
  437342:	e8 01 ee 00 00       	callq  446148 <getDecryptedValueQWord>
  437347:	48 89 c7             	mov    %rax,%rdi
  43734a:	e8 f9 ed 00 00       	callq  446148 <getDecryptedValueQWord>
  43734f:	48 83 e0 07          	and    $0x7,%rax
  437353:	48 83 f8 01          	cmp    $0x1,%rax
  437357:	75 09                	jne    437362 <mbedtls_rsa_complete+0x10f2>
  437359:	66 c7 85 2a f9 ff ff 	movw   $0x1,-0x6d6(%rbp)
  437360:	01 00 
  437362:	eb 00                	jmp    437364 <mbedtls_rsa_complete+0x10f4>
  437364:	0f b7 85 2a f9 ff ff 	movzwl -0x6d6(%rbp),%eax
  43736b:	89 c1                	mov    %eax,%ecx
  43736d:	48 83 f9 36          	cmp    $0x36,%rcx
  437371:	0f 83 53 09 00 00    	jae    437cca <mbedtls_rsa_complete+0x1a5a>
  437377:	b8 01 00 00 00       	mov    $0x1,%eax
  43737c:	89 c6                	mov    %eax,%esi
  43737e:	0f b7 85 2a f9 ff ff 	movzwl -0x6d6(%rbp),%eax
  437385:	89 c1                	mov    %eax,%ecx
  437387:	0f b6 84 0d 80 f8 ff 	movzbl -0x780(%rbp,%rcx,1),%eax
  43738e:	ff 
  43738f:	89 c1                	mov    %eax,%ecx
  437391:	48 8d 95 c0 f8 ff ff 	lea    -0x740(%rbp),%rdx
  437398:	48 89 95 f8 fa ff ff 	mov    %rdx,-0x508(%rbp)
  43739f:	48 89 8d f0 fa ff ff 	mov    %rcx,-0x510(%rbp)
  4373a6:	48 8b bd f8 fa ff ff 	mov    -0x508(%rbp),%rdi
  4373ad:	e8 8e 37 fe ff       	callq  41ab40 <mbedtls_mpi_grow>
  4373b2:	89 85 ec fa ff ff    	mov    %eax,-0x514(%rbp)
  4373b8:	83 f8 00             	cmp    $0x0,%eax
  4373bb:	74 05                	je     4373c2 <mbedtls_rsa_complete+0x1152>
  4373bd:	e9 0b 01 00 00       	jmpq   4374cd <mbedtls_rsa_complete+0x125d>
  4373c2:	48 8b 85 f8 fa ff ff 	mov    -0x508(%rbp),%rax
  4373c9:	48 83 c0 10          	add    $0x10,%rax
  4373cd:	48 89 c7             	mov    %rax,%rdi
  4373d0:	e8 73 ed 00 00       	callq  446148 <getDecryptedValueQWord>
  4373d5:	48 8b bd f8 fa ff ff 	mov    -0x508(%rbp),%rdi
  4373dc:	48 83 c7 08          	add    $0x8,%rdi
  4373e0:	48 89 85 68 f4 ff ff 	mov    %rax,-0xb98(%rbp)
  4373e7:	e8 5c ed 00 00       	callq  446148 <getDecryptedValueQWord>
  4373ec:	48 c1 e0 03          	shl    $0x3,%rax
  4373f0:	48 89 85 60 f4 ff ff 	mov    %rax,-0xba0(%rbp)
  4373f7:	e8 5a e5 00 00       	callq  445956 <writeback_cache>
  4373fc:	48 8b bd 68 f4 ff ff 	mov    -0xb98(%rbp),%rdi
  437403:	48 8b b5 60 f4 ff ff 	mov    -0xba0(%rbp),%rsi
  43740a:	e8 d6 f2 00 00       	callq  4466e5 <decryptArrayForLibCall>
  43740f:	31 f6                	xor    %esi,%esi
  437411:	48 8b bd 68 f4 ff ff 	mov    -0xb98(%rbp),%rdi
  437418:	48 8b 95 60 f4 ff ff 	mov    -0xba0(%rbp),%rdx
  43741f:	e8 fc 9b fc ff       	callq  401020 <memset@plt>
  437424:	48 8b bd 68 f4 ff ff 	mov    -0xb98(%rbp),%rdi
  43742b:	48 8b b5 60 f4 ff ff 	mov    -0xba0(%rbp),%rsi
  437432:	e8 1f f0 00 00       	callq  446456 <encryptArrayForLibCall>
  437437:	48 83 bd f0 fa ff ff 	cmpq   $0x0,-0x510(%rbp)
  43743e:	00 
  43743f:	7d 14                	jge    437455 <mbedtls_rsa_complete+0x11e5>
  437441:	31 c0                	xor    %eax,%eax
  437443:	89 c1                	mov    %eax,%ecx
  437445:	48 2b 8d f0 fa ff ff 	sub    -0x510(%rbp),%rcx
  43744c:	48 89 8d 58 f4 ff ff 	mov    %rcx,-0xba8(%rbp)
  437453:	eb 0e                	jmp    437463 <mbedtls_rsa_complete+0x11f3>
  437455:	48 8b 85 f0 fa ff ff 	mov    -0x510(%rbp),%rax
  43745c:	48 89 85 58 f4 ff ff 	mov    %rax,-0xba8(%rbp)
  437463:	48 8b 85 58 f4 ff ff 	mov    -0xba8(%rbp),%rax
  43746a:	48 8b 8d f8 fa ff ff 	mov    -0x508(%rbp),%rcx
  437471:	48 83 c1 10          	add    $0x10,%rcx
  437475:	48 89 cf             	mov    %rcx,%rdi
  437478:	48 89 85 50 f4 ff ff 	mov    %rax,-0xbb0(%rbp)
  43747f:	e8 c4 ec 00 00       	callq  446148 <getDecryptedValueQWord>
  437484:	48 89 c7             	mov    %rax,%rdi
  437487:	48 8b b5 50 f4 ff ff 	mov    -0xbb0(%rbp),%rsi
  43748e:	e8 69 e8 00 00       	callq  445cfc <setEncryptedValueQWord>
  437493:	48 8b 8d f0 fa ff ff 	mov    -0x510(%rbp),%rcx
  43749a:	48 83 f9 00          	cmp    $0x0,%rcx
  43749e:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  4374a3:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  4374a9:	44 0f 4c c2          	cmovl  %edx,%r8d
  4374ad:	48 8b 8d f8 fa ff ff 	mov    -0x508(%rbp),%rcx
  4374b4:	48 89 cf             	mov    %rcx,%rdi
  4374b7:	44 89 c6             	mov    %r8d,%esi
  4374ba:	48 89 85 48 f4 ff ff 	mov    %rax,-0xbb8(%rbp)
  4374c1:	e8 38 e7 00 00       	callq  445bfe <setEncryptedValueDWord>
  4374c6:	48 89 85 40 f4 ff ff 	mov    %rax,-0xbc0(%rbp)
  4374cd:	48 8b bd 38 f9 ff ff 	mov    -0x6c8(%rbp),%rdi
  4374d4:	48 8b 95 50 f9 ff ff 	mov    -0x6b0(%rbp),%rdx
  4374db:	48 8d b5 c0 f8 ff ff 	lea    -0x740(%rbp),%rsi
  4374e2:	e8 89 c7 fe ff       	callq  423c70 <mbedtls_mpi_gcd>
  4374e7:	89 85 2c f9 ff ff    	mov    %eax,-0x6d4(%rbp)
  4374ed:	83 f8 00             	cmp    $0x0,%eax
  4374f0:	74 05                	je     4374f7 <mbedtls_rsa_complete+0x1287>
  4374f2:	e9 dd 07 00 00       	jmpq   437cd4 <mbedtls_rsa_complete+0x1a64>
  4374f7:	48 8b 85 38 f9 ff ff 	mov    -0x6c8(%rbp),%rax
  4374fe:	48 89 85 38 f4 ff ff 	mov    %rax,-0xbc8(%rbp)
  437505:	e8 4c e4 00 00       	callq  445956 <writeback_cache>
  43750a:	48 8b 85 38 f4 ff ff 	mov    -0xbc8(%rbp),%rax
  437511:	48 89 85 38 fb ff ff 	mov    %rax,-0x4c8(%rbp)
  437518:	48 c7 85 30 fb ff ff 	movq   $0x1,-0x4d0(%rbp)
  43751f:	01 00 00 00 
  437523:	48 83 bd 30 fb ff ff 	cmpq   $0x0,-0x4d0(%rbp)
  43752a:	00 
  43752b:	7d 14                	jge    437541 <mbedtls_rsa_complete+0x12d1>
  43752d:	31 c0                	xor    %eax,%eax
  43752f:	89 c1                	mov    %eax,%ecx
  437531:	48 2b 8d 30 fb ff ff 	sub    -0x4d0(%rbp),%rcx
  437538:	48 89 8d 30 f4 ff ff 	mov    %rcx,-0xbd0(%rbp)
  43753f:	eb 0e                	jmp    43754f <mbedtls_rsa_complete+0x12df>
  437541:	48 8b 85 30 fb ff ff 	mov    -0x4d0(%rbp),%rax
  437548:	48 89 85 30 f4 ff ff 	mov    %rax,-0xbd0(%rbp)
  43754f:	48 8b 85 30 f4 ff ff 	mov    -0xbd0(%rbp),%rax
  437556:	48 8d 8d 10 f7 ff ff 	lea    -0x8f0(%rbp),%rcx
  43755d:	48 89 cf             	mov    %rcx,%rdi
  437560:	48 89 c6             	mov    %rax,%rsi
  437563:	e8 94 e7 00 00       	callq  445cfc <setEncryptedValueQWord>
  437568:	48 8d 8d 00 fb ff ff 	lea    -0x500(%rbp),%rcx
  43756f:	48 8b b5 30 fb ff ff 	mov    -0x4d0(%rbp),%rsi
  437576:	48 83 fe 00          	cmp    $0x0,%rsi
  43757a:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  43757f:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  437585:	44 0f 4c c2          	cmovl  %edx,%r8d
  437589:	48 89 cf             	mov    %rcx,%rdi
  43758c:	44 89 c6             	mov    %r8d,%esi
  43758f:	48 89 85 28 f4 ff ff 	mov    %rax,-0xbd8(%rbp)
  437596:	e8 63 e6 00 00       	callq  445bfe <setEncryptedValueDWord>
  43759b:	ba 01 00 00 00       	mov    $0x1,%edx
  4375a0:	89 d6                	mov    %edx,%esi
  4375a2:	48 8d 8d 00 fb ff ff 	lea    -0x500(%rbp),%rcx
  4375a9:	48 83 c1 08          	add    $0x8,%rcx
  4375ad:	48 89 cf             	mov    %rcx,%rdi
  4375b0:	48 89 85 20 f4 ff ff 	mov    %rax,-0xbe0(%rbp)
  4375b7:	e8 40 e7 00 00       	callq  445cfc <setEncryptedValueQWord>
  4375bc:	48 8d b5 10 f7 ff ff 	lea    -0x8f0(%rbp),%rsi
  4375c3:	48 8d 8d 00 fb ff ff 	lea    -0x500(%rbp),%rcx
  4375ca:	48 83 c1 10          	add    $0x10,%rcx
  4375ce:	48 89 cf             	mov    %rcx,%rdi
  4375d1:	48 89 85 18 f4 ff ff 	mov    %rax,-0xbe8(%rbp)
  4375d8:	e8 1f e7 00 00       	callq  445cfc <setEncryptedValueQWord>
  4375dd:	48 8b bd 38 fb ff ff 	mov    -0x4c8(%rbp),%rdi
  4375e4:	48 8d b5 00 fb ff ff 	lea    -0x500(%rbp),%rsi
  4375eb:	48 89 85 10 f4 ff ff 	mov    %rax,-0xbf0(%rbp)
  4375f2:	e8 59 74 fe ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  4375f7:	89 85 0c f4 ff ff    	mov    %eax,-0xbf4(%rbp)
  4375fd:	e8 54 e3 00 00       	callq  445956 <writeback_cache>
  437602:	8b 85 0c f4 ff ff    	mov    -0xbf4(%rbp),%eax
  437608:	83 f8 00             	cmp    $0x0,%eax
  43760b:	74 05                	je     437612 <mbedtls_rsa_complete+0x13a2>
  43760d:	e9 a1 06 00 00       	jmpq   437cb3 <mbedtls_rsa_complete+0x1a43>
  437612:	48 8b 8d 50 f9 ff ff 	mov    -0x6b0(%rbp),%rcx
  437619:	4c 8b 85 30 f9 ff ff 	mov    -0x6d0(%rbp),%r8
  437620:	48 8d 85 c0 f8 ff ff 	lea    -0x740(%rbp),%rax
  437627:	48 89 c7             	mov    %rax,%rdi
  43762a:	48 89 c6             	mov    %rax,%rsi
  43762d:	48 8d 95 f0 f8 ff ff 	lea    -0x710(%rbp),%rdx
  437634:	e8 57 a6 fe ff       	callq  421c90 <mbedtls_mpi_exp_mod>
  437639:	89 85 2c f9 ff ff    	mov    %eax,-0x6d4(%rbp)
  43763f:	83 f8 00             	cmp    $0x0,%eax
  437642:	74 05                	je     437649 <mbedtls_rsa_complete+0x13d9>
  437644:	e9 8b 06 00 00       	jmpq   437cd4 <mbedtls_rsa_complete+0x1a64>
  437649:	66 c7 85 28 f9 ff ff 	movw   $0x1,-0x6d8(%rbp)
  437650:	01 00 
  437652:	0f b7 85 28 f9 ff ff 	movzwl -0x6d8(%rbp),%eax
  437659:	0f b7 8d 26 f9 ff ff 	movzwl -0x6da(%rbp),%ecx
  437660:	39 c8                	cmp    %ecx,%eax
  437662:	0f 8f 3f 05 00 00    	jg     437ba7 <mbedtls_rsa_complete+0x1937>
  437668:	e8 e9 e2 00 00       	callq  445956 <writeback_cache>
  43766d:	48 8d 85 c0 f8 ff ff 	lea    -0x740(%rbp),%rax
  437674:	48 89 85 78 fb ff ff 	mov    %rax,-0x488(%rbp)
  43767b:	48 c7 85 70 fb ff ff 	movq   $0x1,-0x490(%rbp)
  437682:	01 00 00 00 
  437686:	48 83 bd 70 fb ff ff 	cmpq   $0x0,-0x490(%rbp)
  43768d:	00 
  43768e:	7d 14                	jge    4376a4 <mbedtls_rsa_complete+0x1434>
  437690:	31 c0                	xor    %eax,%eax
  437692:	89 c1                	mov    %eax,%ecx
  437694:	48 2b 8d 70 fb ff ff 	sub    -0x490(%rbp),%rcx
  43769b:	48 89 8d 00 f4 ff ff 	mov    %rcx,-0xc00(%rbp)
  4376a2:	eb 0e                	jmp    4376b2 <mbedtls_rsa_complete+0x1442>
  4376a4:	48 8b 85 70 fb ff ff 	mov    -0x490(%rbp),%rax
  4376ab:	48 89 85 00 f4 ff ff 	mov    %rax,-0xc00(%rbp)
  4376b2:	48 8b 85 00 f4 ff ff 	mov    -0xc00(%rbp),%rax
  4376b9:	48 8d 8d 10 f7 ff ff 	lea    -0x8f0(%rbp),%rcx
  4376c0:	48 89 cf             	mov    %rcx,%rdi
  4376c3:	48 89 c6             	mov    %rax,%rsi
  4376c6:	e8 31 e6 00 00       	callq  445cfc <setEncryptedValueQWord>
  4376cb:	48 8d 8d 40 fb ff ff 	lea    -0x4c0(%rbp),%rcx
  4376d2:	48 8b b5 70 fb ff ff 	mov    -0x490(%rbp),%rsi
  4376d9:	48 83 fe 00          	cmp    $0x0,%rsi
  4376dd:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  4376e2:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  4376e8:	44 0f 4c c2          	cmovl  %edx,%r8d
  4376ec:	48 89 cf             	mov    %rcx,%rdi
  4376ef:	44 89 c6             	mov    %r8d,%esi
  4376f2:	48 89 85 f8 f3 ff ff 	mov    %rax,-0xc08(%rbp)
  4376f9:	e8 00 e5 00 00       	callq  445bfe <setEncryptedValueDWord>
  4376fe:	ba 01 00 00 00       	mov    $0x1,%edx
  437703:	89 d6                	mov    %edx,%esi
  437705:	48 8d 8d 40 fb ff ff 	lea    -0x4c0(%rbp),%rcx
  43770c:	48 83 c1 08          	add    $0x8,%rcx
  437710:	48 89 cf             	mov    %rcx,%rdi
  437713:	48 89 85 f0 f3 ff ff 	mov    %rax,-0xc10(%rbp)
  43771a:	e8 dd e5 00 00       	callq  445cfc <setEncryptedValueQWord>
  43771f:	48 8d b5 10 f7 ff ff 	lea    -0x8f0(%rbp),%rsi
  437726:	48 8d 8d 40 fb ff ff 	lea    -0x4c0(%rbp),%rcx
  43772d:	48 83 c1 10          	add    $0x10,%rcx
  437731:	48 89 cf             	mov    %rcx,%rdi
  437734:	48 89 85 e8 f3 ff ff 	mov    %rax,-0xc18(%rbp)
  43773b:	e8 bc e5 00 00       	callq  445cfc <setEncryptedValueQWord>
  437740:	48 8b bd 78 fb ff ff 	mov    -0x488(%rbp),%rdi
  437747:	48 8d b5 40 fb ff ff 	lea    -0x4c0(%rbp),%rsi
  43774e:	48 89 85 e0 f3 ff ff 	mov    %rax,-0xc20(%rbp)
  437755:	e8 f6 72 fe ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  43775a:	89 85 dc f3 ff ff    	mov    %eax,-0xc24(%rbp)
  437760:	e8 f1 e1 00 00       	callq  445956 <writeback_cache>
  437765:	8b 85 dc f3 ff ff    	mov    -0xc24(%rbp),%eax
  43776b:	83 f8 00             	cmp    $0x0,%eax
  43776e:	75 05                	jne    437775 <mbedtls_rsa_complete+0x1505>
  437770:	e9 32 04 00 00       	jmpq   437ba7 <mbedtls_rsa_complete+0x1937>
  437775:	e8 dc e1 00 00       	callq  445956 <writeback_cache>
  43777a:	48 8d 85 c0 f8 ff ff 	lea    -0x740(%rbp),%rax
  437781:	48 89 85 b8 fb ff ff 	mov    %rax,-0x448(%rbp)
  437788:	48 89 85 b0 fb ff ff 	mov    %rax,-0x450(%rbp)
  43778f:	48 c7 85 a8 fb ff ff 	movq   $0x1,-0x458(%rbp)
  437796:	01 00 00 00 
  43779a:	48 83 bd a8 fb ff ff 	cmpq   $0x0,-0x458(%rbp)
  4377a1:	00 
  4377a2:	7d 14                	jge    4377b8 <mbedtls_rsa_complete+0x1548>
  4377a4:	31 c0                	xor    %eax,%eax
  4377a6:	89 c1                	mov    %eax,%ecx
  4377a8:	48 2b 8d a8 fb ff ff 	sub    -0x458(%rbp),%rcx
  4377af:	48 89 8d d0 f3 ff ff 	mov    %rcx,-0xc30(%rbp)
  4377b6:	eb 0e                	jmp    4377c6 <mbedtls_rsa_complete+0x1556>
  4377b8:	48 8b 85 a8 fb ff ff 	mov    -0x458(%rbp),%rax
  4377bf:	48 89 85 d0 f3 ff ff 	mov    %rax,-0xc30(%rbp)
  4377c6:	48 8b 85 d0 f3 ff ff 	mov    -0xc30(%rbp),%rax
  4377cd:	48 8d 8d 10 f7 ff ff 	lea    -0x8f0(%rbp),%rcx
  4377d4:	48 89 cf             	mov    %rcx,%rdi
  4377d7:	48 89 c6             	mov    %rax,%rsi
  4377da:	e8 1d e5 00 00       	callq  445cfc <setEncryptedValueQWord>
  4377df:	48 8d 8d 80 fb ff ff 	lea    -0x480(%rbp),%rcx
  4377e6:	48 8b b5 a8 fb ff ff 	mov    -0x458(%rbp),%rsi
  4377ed:	48 83 fe 00          	cmp    $0x0,%rsi
  4377f1:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  4377f6:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  4377fc:	44 0f 4c c2          	cmovl  %edx,%r8d
  437800:	48 89 cf             	mov    %rcx,%rdi
  437803:	44 89 c6             	mov    %r8d,%esi
  437806:	48 89 85 c8 f3 ff ff 	mov    %rax,-0xc38(%rbp)
  43780d:	e8 ec e3 00 00       	callq  445bfe <setEncryptedValueDWord>
  437812:	ba 01 00 00 00       	mov    $0x1,%edx
  437817:	89 d6                	mov    %edx,%esi
  437819:	48 8d 8d 80 fb ff ff 	lea    -0x480(%rbp),%rcx
  437820:	48 83 c1 08          	add    $0x8,%rcx
  437824:	48 89 cf             	mov    %rcx,%rdi
  437827:	48 89 85 c0 f3 ff ff 	mov    %rax,-0xc40(%rbp)
  43782e:	e8 c9 e4 00 00       	callq  445cfc <setEncryptedValueQWord>
  437833:	48 8d b5 10 f7 ff ff 	lea    -0x8f0(%rbp),%rsi
  43783a:	48 8d 8d 80 fb ff ff 	lea    -0x480(%rbp),%rcx
  437841:	48 83 c1 10          	add    $0x10,%rcx
  437845:	48 89 cf             	mov    %rcx,%rdi
  437848:	48 89 85 b8 f3 ff ff 	mov    %rax,-0xc48(%rbp)
  43784f:	e8 a8 e4 00 00       	callq  445cfc <setEncryptedValueQWord>
  437854:	48 8b bd b8 fb ff ff 	mov    -0x448(%rbp),%rdi
  43785b:	48 8b b5 b0 fb ff ff 	mov    -0x450(%rbp),%rsi
  437862:	48 8d 95 80 fb ff ff 	lea    -0x480(%rbp),%rdx
  437869:	48 89 85 b0 f3 ff ff 	mov    %rax,-0xc50(%rbp)
  437870:	e8 2b 4c fe ff       	callq  41c4a0 <mbedtls_mpi_add_mpi>
  437875:	89 85 ac f3 ff ff    	mov    %eax,-0xc54(%rbp)
  43787b:	e8 d6 e0 00 00       	callq  445956 <writeback_cache>
  437880:	8b 85 ac f3 ff ff    	mov    -0xc54(%rbp),%eax
  437886:	89 85 2c f9 ff ff    	mov    %eax,-0x6d4(%rbp)
  43788c:	83 f8 00             	cmp    $0x0,%eax
  43788f:	74 05                	je     437896 <mbedtls_rsa_complete+0x1626>
  437891:	e9 3e 04 00 00       	jmpq   437cd4 <mbedtls_rsa_complete+0x1a64>
  437896:	48 8b bd 38 f9 ff ff 	mov    -0x6c8(%rbp),%rdi
  43789d:	48 8b 95 50 f9 ff ff 	mov    -0x6b0(%rbp),%rdx
  4378a4:	48 8d b5 c0 f8 ff ff 	lea    -0x740(%rbp),%rsi
  4378ab:	e8 c0 c3 fe ff       	callq  423c70 <mbedtls_mpi_gcd>
  4378b0:	89 85 2c f9 ff ff    	mov    %eax,-0x6d4(%rbp)
  4378b6:	83 f8 00             	cmp    $0x0,%eax
  4378b9:	74 05                	je     4378c0 <mbedtls_rsa_complete+0x1650>
  4378bb:	e9 14 04 00 00       	jmpq   437cd4 <mbedtls_rsa_complete+0x1a64>
  4378c0:	48 8b 85 38 f9 ff ff 	mov    -0x6c8(%rbp),%rax
  4378c7:	48 89 85 a0 f3 ff ff 	mov    %rax,-0xc60(%rbp)
  4378ce:	e8 83 e0 00 00       	callq  445956 <writeback_cache>
  4378d3:	48 8b 85 a0 f3 ff ff 	mov    -0xc60(%rbp),%rax
  4378da:	48 89 85 f8 fb ff ff 	mov    %rax,-0x408(%rbp)
  4378e1:	48 c7 85 f0 fb ff ff 	movq   $0x1,-0x410(%rbp)
  4378e8:	01 00 00 00 
  4378ec:	48 83 bd f0 fb ff ff 	cmpq   $0x0,-0x410(%rbp)
  4378f3:	00 
  4378f4:	7d 14                	jge    43790a <mbedtls_rsa_complete+0x169a>
  4378f6:	31 c0                	xor    %eax,%eax
  4378f8:	89 c1                	mov    %eax,%ecx
  4378fa:	48 2b 8d f0 fb ff ff 	sub    -0x410(%rbp),%rcx
  437901:	48 89 8d 98 f3 ff ff 	mov    %rcx,-0xc68(%rbp)
  437908:	eb 0e                	jmp    437918 <mbedtls_rsa_complete+0x16a8>
  43790a:	48 8b 85 f0 fb ff ff 	mov    -0x410(%rbp),%rax
  437911:	48 89 85 98 f3 ff ff 	mov    %rax,-0xc68(%rbp)
  437918:	48 8b 85 98 f3 ff ff 	mov    -0xc68(%rbp),%rax
  43791f:	48 8d 8d 10 f7 ff ff 	lea    -0x8f0(%rbp),%rcx
  437926:	48 89 cf             	mov    %rcx,%rdi
  437929:	48 89 c6             	mov    %rax,%rsi
  43792c:	e8 cb e3 00 00       	callq  445cfc <setEncryptedValueQWord>
  437931:	48 8d 8d c0 fb ff ff 	lea    -0x440(%rbp),%rcx
  437938:	48 8b b5 f0 fb ff ff 	mov    -0x410(%rbp),%rsi
  43793f:	48 83 fe 00          	cmp    $0x0,%rsi
  437943:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  437948:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  43794e:	44 0f 4c c2          	cmovl  %edx,%r8d
  437952:	48 89 cf             	mov    %rcx,%rdi
  437955:	44 89 c6             	mov    %r8d,%esi
  437958:	48 89 85 90 f3 ff ff 	mov    %rax,-0xc70(%rbp)
  43795f:	e8 9a e2 00 00       	callq  445bfe <setEncryptedValueDWord>
  437964:	ba 01 00 00 00       	mov    $0x1,%edx
  437969:	89 d6                	mov    %edx,%esi
  43796b:	48 8d 8d c0 fb ff ff 	lea    -0x440(%rbp),%rcx
  437972:	48 83 c1 08          	add    $0x8,%rcx
  437976:	48 89 cf             	mov    %rcx,%rdi
  437979:	48 89 85 88 f3 ff ff 	mov    %rax,-0xc78(%rbp)
  437980:	e8 77 e3 00 00       	callq  445cfc <setEncryptedValueQWord>
  437985:	48 8d b5 10 f7 ff ff 	lea    -0x8f0(%rbp),%rsi
  43798c:	48 8d 8d c0 fb ff ff 	lea    -0x440(%rbp),%rcx
  437993:	48 83 c1 10          	add    $0x10,%rcx
  437997:	48 89 cf             	mov    %rcx,%rdi
  43799a:	48 89 85 80 f3 ff ff 	mov    %rax,-0xc80(%rbp)
  4379a1:	e8 56 e3 00 00       	callq  445cfc <setEncryptedValueQWord>
  4379a6:	48 8b bd f8 fb ff ff 	mov    -0x408(%rbp),%rdi
  4379ad:	48 8d b5 c0 fb ff ff 	lea    -0x440(%rbp),%rsi
  4379b4:	48 89 85 78 f3 ff ff 	mov    %rax,-0xc88(%rbp)
  4379bb:	e8 90 70 fe ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  4379c0:	89 85 74 f3 ff ff    	mov    %eax,-0xc8c(%rbp)
  4379c6:	e8 8b df 00 00       	callq  445956 <writeback_cache>
  4379cb:	8b 85 74 f3 ff ff    	mov    -0xc8c(%rbp),%eax
  4379d1:	83 f8 01             	cmp    $0x1,%eax
  4379d4:	75 4b                	jne    437a21 <mbedtls_rsa_complete+0x17b1>
  4379d6:	48 8b bd 38 f9 ff ff 	mov    -0x6c8(%rbp),%rdi
  4379dd:	48 8b b5 50 f9 ff ff 	mov    -0x6b0(%rbp),%rsi
  4379e4:	e8 67 70 fe ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  4379e9:	83 f8 ff             	cmp    $0xffffffff,%eax
  4379ec:	75 33                	jne    437a21 <mbedtls_rsa_complete+0x17b1>
  4379ee:	31 c0                	xor    %eax,%eax
  4379f0:	89 c6                	mov    %eax,%esi
  4379f2:	48 8b bd 30 f9 ff ff 	mov    -0x6d0(%rbp),%rdi
  4379f9:	48 8b 95 50 f9 ff ff 	mov    -0x6b0(%rbp),%rdx
  437a00:	48 8b 8d 38 f9 ff ff 	mov    -0x6c8(%rbp),%rcx
  437a07:	e8 e4 72 fe ff       	callq  41ecf0 <mbedtls_mpi_div_mpi>
  437a0c:	89 85 2c f9 ff ff    	mov    %eax,-0x6d4(%rbp)
  437a12:	83 f8 00             	cmp    $0x0,%eax
  437a15:	74 05                	je     437a1c <mbedtls_rsa_complete+0x17ac>
  437a17:	e9 b8 02 00 00       	jmpq   437cd4 <mbedtls_rsa_complete+0x1a64>
  437a1c:	e9 b3 02 00 00       	jmpq   437cd4 <mbedtls_rsa_complete+0x1a64>
  437a21:	e8 30 df 00 00       	callq  445956 <writeback_cache>
  437a26:	48 8d 85 c0 f8 ff ff 	lea    -0x740(%rbp),%rax
  437a2d:	48 89 85 38 fc ff ff 	mov    %rax,-0x3c8(%rbp)
  437a34:	48 89 85 30 fc ff ff 	mov    %rax,-0x3d0(%rbp)
  437a3b:	48 c7 85 28 fc ff ff 	movq   $0x1,-0x3d8(%rbp)
  437a42:	01 00 00 00 
  437a46:	48 83 bd 28 fc ff ff 	cmpq   $0x0,-0x3d8(%rbp)
  437a4d:	00 
  437a4e:	7d 14                	jge    437a64 <mbedtls_rsa_complete+0x17f4>
  437a50:	31 c0                	xor    %eax,%eax
  437a52:	89 c1                	mov    %eax,%ecx
  437a54:	48 2b 8d 28 fc ff ff 	sub    -0x3d8(%rbp),%rcx
  437a5b:	48 89 8d 68 f3 ff ff 	mov    %rcx,-0xc98(%rbp)
  437a62:	eb 0e                	jmp    437a72 <mbedtls_rsa_complete+0x1802>
  437a64:	48 8b 85 28 fc ff ff 	mov    -0x3d8(%rbp),%rax
  437a6b:	48 89 85 68 f3 ff ff 	mov    %rax,-0xc98(%rbp)
  437a72:	48 8b 85 68 f3 ff ff 	mov    -0xc98(%rbp),%rax
  437a79:	48 8d 8d 10 f7 ff ff 	lea    -0x8f0(%rbp),%rcx
  437a80:	48 89 cf             	mov    %rcx,%rdi
  437a83:	48 89 c6             	mov    %rax,%rsi
  437a86:	e8 71 e2 00 00       	callq  445cfc <setEncryptedValueQWord>
  437a8b:	48 8d 8d 00 fc ff ff 	lea    -0x400(%rbp),%rcx
  437a92:	48 8b b5 28 fc ff ff 	mov    -0x3d8(%rbp),%rsi
  437a99:	48 83 fe 00          	cmp    $0x0,%rsi
  437a9d:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  437aa2:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  437aa8:	44 0f 4c c2          	cmovl  %edx,%r8d
  437aac:	48 89 cf             	mov    %rcx,%rdi
  437aaf:	44 89 c6             	mov    %r8d,%esi
  437ab2:	48 89 85 60 f3 ff ff 	mov    %rax,-0xca0(%rbp)
  437ab9:	e8 40 e1 00 00       	callq  445bfe <setEncryptedValueDWord>
  437abe:	ba 01 00 00 00       	mov    $0x1,%edx
  437ac3:	89 d6                	mov    %edx,%esi
  437ac5:	48 8d 8d 00 fc ff ff 	lea    -0x400(%rbp),%rcx
  437acc:	48 83 c1 08          	add    $0x8,%rcx
  437ad0:	48 89 cf             	mov    %rcx,%rdi
  437ad3:	48 89 85 58 f3 ff ff 	mov    %rax,-0xca8(%rbp)
  437ada:	e8 1d e2 00 00       	callq  445cfc <setEncryptedValueQWord>
  437adf:	48 8d b5 10 f7 ff ff 	lea    -0x8f0(%rbp),%rsi
  437ae6:	48 8d 8d 00 fc ff ff 	lea    -0x400(%rbp),%rcx
  437aed:	48 83 c1 10          	add    $0x10,%rcx
  437af1:	48 89 cf             	mov    %rcx,%rdi
  437af4:	48 89 85 50 f3 ff ff 	mov    %rax,-0xcb0(%rbp)
  437afb:	e8 fc e1 00 00       	callq  445cfc <setEncryptedValueQWord>
  437b00:	48 8b bd 38 fc ff ff 	mov    -0x3c8(%rbp),%rdi
  437b07:	48 8b b5 30 fc ff ff 	mov    -0x3d0(%rbp),%rsi
  437b0e:	48 8d 95 00 fc ff ff 	lea    -0x400(%rbp),%rdx
  437b15:	48 89 85 48 f3 ff ff 	mov    %rax,-0xcb8(%rbp)
  437b1c:	e8 0f 3e fe ff       	callq  41b930 <mbedtls_mpi_sub_mpi>
  437b21:	89 85 44 f3 ff ff    	mov    %eax,-0xcbc(%rbp)
  437b27:	e8 2a de 00 00       	callq  445956 <writeback_cache>
  437b2c:	8b 85 44 f3 ff ff    	mov    -0xcbc(%rbp),%eax
  437b32:	89 85 2c f9 ff ff    	mov    %eax,-0x6d4(%rbp)
  437b38:	83 f8 00             	cmp    $0x0,%eax
  437b3b:	74 05                	je     437b42 <mbedtls_rsa_complete+0x18d2>
  437b3d:	e9 92 01 00 00       	jmpq   437cd4 <mbedtls_rsa_complete+0x1a64>
  437b42:	48 8d 85 c0 f8 ff ff 	lea    -0x740(%rbp),%rax
  437b49:	48 89 c7             	mov    %rax,%rdi
  437b4c:	48 89 c6             	mov    %rax,%rsi
  437b4f:	48 89 c2             	mov    %rax,%rdx
  437b52:	e8 69 4a fe ff       	callq  41c5c0 <mbedtls_mpi_mul_mpi>
  437b57:	89 85 2c f9 ff ff    	mov    %eax,-0x6d4(%rbp)
  437b5d:	83 f8 00             	cmp    $0x0,%eax
  437b60:	74 05                	je     437b67 <mbedtls_rsa_complete+0x18f7>
  437b62:	e9 6d 01 00 00       	jmpq   437cd4 <mbedtls_rsa_complete+0x1a64>
  437b67:	48 8b 95 50 f9 ff ff 	mov    -0x6b0(%rbp),%rdx
  437b6e:	48 8d 85 c0 f8 ff ff 	lea    -0x740(%rbp),%rax
  437b75:	48 89 c7             	mov    %rax,%rdi
  437b78:	48 89 c6             	mov    %rax,%rsi
  437b7b:	e8 10 9e fe ff       	callq  421990 <mbedtls_mpi_mod_mpi>
  437b80:	89 85 2c f9 ff ff    	mov    %eax,-0x6d4(%rbp)
  437b86:	83 f8 00             	cmp    $0x0,%eax
  437b89:	74 05                	je     437b90 <mbedtls_rsa_complete+0x1920>
  437b8b:	e9 44 01 00 00       	jmpq   437cd4 <mbedtls_rsa_complete+0x1a64>
  437b90:	66 8b 85 28 f9 ff ff 	mov    -0x6d8(%rbp),%ax
  437b97:	66 83 c0 01          	add    $0x1,%ax
  437b9b:	66 89 85 28 f9 ff ff 	mov    %ax,-0x6d8(%rbp)
  437ba2:	e9 ab fa ff ff       	jmpq   437652 <mbedtls_rsa_complete+0x13e2>
  437ba7:	e8 aa dd 00 00       	callq  445956 <writeback_cache>
  437bac:	48 8d 85 c0 f8 ff ff 	lea    -0x740(%rbp),%rax
  437bb3:	48 89 85 78 fc ff ff 	mov    %rax,-0x388(%rbp)
  437bba:	48 c7 85 70 fc ff ff 	movq   $0x1,-0x390(%rbp)
  437bc1:	01 00 00 00 
  437bc5:	48 83 bd 70 fc ff ff 	cmpq   $0x0,-0x390(%rbp)
  437bcc:	00 
  437bcd:	7d 14                	jge    437be3 <mbedtls_rsa_complete+0x1973>
  437bcf:	31 c0                	xor    %eax,%eax
  437bd1:	89 c1                	mov    %eax,%ecx
  437bd3:	48 2b 8d 70 fc ff ff 	sub    -0x390(%rbp),%rcx
  437bda:	48 89 8d 38 f3 ff ff 	mov    %rcx,-0xcc8(%rbp)
  437be1:	eb 0e                	jmp    437bf1 <mbedtls_rsa_complete+0x1981>
  437be3:	48 8b 85 70 fc ff ff 	mov    -0x390(%rbp),%rax
  437bea:	48 89 85 38 f3 ff ff 	mov    %rax,-0xcc8(%rbp)
  437bf1:	48 8b 85 38 f3 ff ff 	mov    -0xcc8(%rbp),%rax
  437bf8:	48 8d 8d 10 f7 ff ff 	lea    -0x8f0(%rbp),%rcx
  437bff:	48 89 cf             	mov    %rcx,%rdi
  437c02:	48 89 c6             	mov    %rax,%rsi
  437c05:	e8 f2 e0 00 00       	callq  445cfc <setEncryptedValueQWord>
  437c0a:	48 8d 8d 40 fc ff ff 	lea    -0x3c0(%rbp),%rcx
  437c11:	48 8b b5 70 fc ff ff 	mov    -0x390(%rbp),%rsi
  437c18:	48 83 fe 00          	cmp    $0x0,%rsi
  437c1c:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  437c21:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  437c27:	44 0f 4c c2          	cmovl  %edx,%r8d
  437c2b:	48 89 cf             	mov    %rcx,%rdi
  437c2e:	44 89 c6             	mov    %r8d,%esi
  437c31:	48 89 85 30 f3 ff ff 	mov    %rax,-0xcd0(%rbp)
  437c38:	e8 c1 df 00 00       	callq  445bfe <setEncryptedValueDWord>
  437c3d:	ba 01 00 00 00       	mov    $0x1,%edx
  437c42:	89 d6                	mov    %edx,%esi
  437c44:	48 8d 8d 40 fc ff ff 	lea    -0x3c0(%rbp),%rcx
  437c4b:	48 83 c1 08          	add    $0x8,%rcx
  437c4f:	48 89 cf             	mov    %rcx,%rdi
  437c52:	48 89 85 28 f3 ff ff 	mov    %rax,-0xcd8(%rbp)
  437c59:	e8 9e e0 00 00       	callq  445cfc <setEncryptedValueQWord>
  437c5e:	48 8d b5 10 f7 ff ff 	lea    -0x8f0(%rbp),%rsi
  437c65:	48 8d 8d 40 fc ff ff 	lea    -0x3c0(%rbp),%rcx
  437c6c:	48 83 c1 10          	add    $0x10,%rcx
  437c70:	48 89 cf             	mov    %rcx,%rdi
  437c73:	48 89 85 20 f3 ff ff 	mov    %rax,-0xce0(%rbp)
  437c7a:	e8 7d e0 00 00       	callq  445cfc <setEncryptedValueQWord>
  437c7f:	48 8b bd 78 fc ff ff 	mov    -0x388(%rbp),%rdi
  437c86:	48 8d b5 40 fc ff ff 	lea    -0x3c0(%rbp),%rsi
  437c8d:	48 89 85 18 f3 ff ff 	mov    %rax,-0xce8(%rbp)
  437c94:	e8 b7 6d fe ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  437c99:	89 85 14 f3 ff ff    	mov    %eax,-0xcec(%rbp)
  437c9f:	e8 b2 dc 00 00       	callq  445956 <writeback_cache>
  437ca4:	8b 85 14 f3 ff ff    	mov    -0xcec(%rbp),%eax
  437caa:	83 f8 00             	cmp    $0x0,%eax
  437cad:	74 02                	je     437cb1 <mbedtls_rsa_complete+0x1a41>
  437caf:	eb 19                	jmp    437cca <mbedtls_rsa_complete+0x1a5a>
  437cb1:	eb 00                	jmp    437cb3 <mbedtls_rsa_complete+0x1a43>
  437cb3:	66 8b 85 2a f9 ff ff 	mov    -0x6d6(%rbp),%ax
  437cba:	66 83 c0 01          	add    $0x1,%ax
  437cbe:	66 89 85 2a f9 ff ff 	mov    %ax,-0x6d6(%rbp)
  437cc5:	e9 9a f6 ff ff       	jmpq   437364 <mbedtls_rsa_complete+0x10f4>
  437cca:	c7 85 2c f9 ff ff fc 	movl   $0xfffffffc,-0x6d4(%rbp)
  437cd1:	ff ff ff 
  437cd4:	48 8d 85 c0 f8 ff ff 	lea    -0x740(%rbp),%rax
  437cdb:	48 89 85 c0 fa ff ff 	mov    %rax,-0x540(%rbp)
  437ce2:	48 83 bd c0 fa ff ff 	cmpq   $0x0,-0x540(%rbp)
  437ce9:	00 
  437cea:	75 05                	jne    437cf1 <mbedtls_rsa_complete+0x1a81>
  437cec:	e9 6c 01 00 00       	jmpq   437e5d <mbedtls_rsa_complete+0x1bed>
  437cf1:	48 8b 85 c0 fa ff ff 	mov    -0x540(%rbp),%rax
  437cf8:	48 83 c0 10          	add    $0x10,%rax
  437cfc:	48 89 c7             	mov    %rax,%rdi
  437cff:	e8 44 e4 00 00       	callq  446148 <getDecryptedValueQWord>
  437d04:	48 83 f8 00          	cmp    $0x0,%rax
  437d08:	0f 84 00 01 00 00    	je     437e0e <mbedtls_rsa_complete+0x1b9e>
  437d0e:	48 8b 85 c0 fa ff ff 	mov    -0x540(%rbp),%rax
  437d15:	48 83 c0 10          	add    $0x10,%rax
  437d19:	48 89 c7             	mov    %rax,%rdi
  437d1c:	e8 27 e4 00 00       	callq  446148 <getDecryptedValueQWord>
  437d21:	48 8b bd c0 fa ff ff 	mov    -0x540(%rbp),%rdi
  437d28:	48 83 c7 08          	add    $0x8,%rdi
  437d2c:	48 89 85 08 f3 ff ff 	mov    %rax,-0xcf8(%rbp)
  437d33:	e8 10 e4 00 00       	callq  446148 <getDecryptedValueQWord>
  437d38:	48 8b bd 08 f3 ff ff 	mov    -0xcf8(%rbp),%rdi
  437d3f:	48 89 bd d0 fa ff ff 	mov    %rdi,-0x530(%rbp)
  437d46:	48 89 85 c8 fa ff ff 	mov    %rax,-0x538(%rbp)
  437d4d:	48 8b 85 d0 fa ff ff 	mov    -0x530(%rbp),%rax
  437d54:	48 8b 8d c8 fa ff ff 	mov    -0x538(%rbp),%rcx
  437d5b:	48 c1 e1 03          	shl    $0x3,%rcx
  437d5f:	48 89 85 e0 fa ff ff 	mov    %rax,-0x520(%rbp)
  437d66:	48 89 8d d8 fa ff ff 	mov    %rcx,-0x528(%rbp)
  437d6d:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  437d74:	00 
  437d75:	48 8b 8d e0 fa ff ff 	mov    -0x520(%rbp),%rcx
  437d7c:	48 8b 95 d8 fa ff ff 	mov    -0x528(%rbp),%rdx
  437d83:	48 89 85 00 f3 ff ff 	mov    %rax,-0xd00(%rbp)
  437d8a:	48 89 8d f8 f2 ff ff 	mov    %rcx,-0xd08(%rbp)
  437d91:	48 89 95 f0 f2 ff ff 	mov    %rdx,-0xd10(%rbp)
  437d98:	e8 b9 db 00 00       	callq  445956 <writeback_cache>
  437d9d:	48 8b bd f8 f2 ff ff 	mov    -0xd08(%rbp),%rdi
  437da4:	48 8b b5 f0 f2 ff ff 	mov    -0xd10(%rbp),%rsi
  437dab:	e8 35 e9 00 00       	callq  4466e5 <decryptArrayForLibCall>
  437db0:	31 f6                	xor    %esi,%esi
  437db2:	48 8b bd f8 f2 ff ff 	mov    -0xd08(%rbp),%rdi
  437db9:	48 8b 95 f0 f2 ff ff 	mov    -0xd10(%rbp),%rdx
  437dc0:	48 8b 85 00 f3 ff ff 	mov    -0xd00(%rbp),%rax
  437dc7:	ff d0                	callq  *%rax
  437dc9:	48 8b bd f8 f2 ff ff 	mov    -0xd08(%rbp),%rdi
  437dd0:	48 8b b5 f0 f2 ff ff 	mov    -0xd10(%rbp),%rsi
  437dd7:	48 89 85 e8 f2 ff ff 	mov    %rax,-0xd18(%rbp)
  437dde:	e8 73 e6 00 00       	callq  446456 <encryptArrayForLibCall>
  437de3:	48 8b 85 c0 fa ff ff 	mov    -0x540(%rbp),%rax
  437dea:	48 83 c0 10          	add    $0x10,%rax
  437dee:	48 89 c7             	mov    %rax,%rdi
  437df1:	e8 52 e3 00 00       	callq  446148 <getDecryptedValueQWord>
  437df6:	48 89 85 e0 f2 ff ff 	mov    %rax,-0xd20(%rbp)
  437dfd:	e8 54 db 00 00       	callq  445956 <writeback_cache>
  437e02:	48 8b bd e0 f2 ff ff 	mov    -0xd20(%rbp),%rdi
  437e09:	e8 d2 92 fc ff       	callq  4010e0 <free@plt>
  437e0e:	48 8b 85 c0 fa ff ff 	mov    -0x540(%rbp),%rax
  437e15:	48 89 c7             	mov    %rax,%rdi
  437e18:	be 01 00 00 00       	mov    $0x1,%esi
  437e1d:	e8 dc dd 00 00       	callq  445bfe <setEncryptedValueDWord>
  437e22:	31 f6                	xor    %esi,%esi
  437e24:	48 8b bd c0 fa ff ff 	mov    -0x540(%rbp),%rdi
  437e2b:	48 83 c7 08          	add    $0x8,%rdi
  437e2f:	48 89 85 d8 f2 ff ff 	mov    %rax,-0xd28(%rbp)
  437e36:	e8 c1 de 00 00       	callq  445cfc <setEncryptedValueQWord>
  437e3b:	31 c9                	xor    %ecx,%ecx
  437e3d:	89 ce                	mov    %ecx,%esi
  437e3f:	48 8b bd c0 fa ff ff 	mov    -0x540(%rbp),%rdi
  437e46:	48 83 c7 10          	add    $0x10,%rdi
  437e4a:	48 89 85 d0 f2 ff ff 	mov    %rax,-0xd30(%rbp)
  437e51:	e8 a6 de 00 00       	callq  445cfc <setEncryptedValueQWord>
  437e56:	48 89 85 c8 f2 ff ff 	mov    %rax,-0xd38(%rbp)
  437e5d:	48 8d 85 f0 f8 ff ff 	lea    -0x710(%rbp),%rax
  437e64:	48 89 85 20 fa ff ff 	mov    %rax,-0x5e0(%rbp)
  437e6b:	48 83 bd 20 fa ff ff 	cmpq   $0x0,-0x5e0(%rbp)
  437e72:	00 
  437e73:	75 05                	jne    437e7a <mbedtls_rsa_complete+0x1c0a>
  437e75:	e9 6c 01 00 00       	jmpq   437fe6 <mbedtls_rsa_complete+0x1d76>
  437e7a:	48 8b 85 20 fa ff ff 	mov    -0x5e0(%rbp),%rax
  437e81:	48 83 c0 10          	add    $0x10,%rax
  437e85:	48 89 c7             	mov    %rax,%rdi
  437e88:	e8 bb e2 00 00       	callq  446148 <getDecryptedValueQWord>
  437e8d:	48 83 f8 00          	cmp    $0x0,%rax
  437e91:	0f 84 00 01 00 00    	je     437f97 <mbedtls_rsa_complete+0x1d27>
  437e97:	48 8b 85 20 fa ff ff 	mov    -0x5e0(%rbp),%rax
  437e9e:	48 83 c0 10          	add    $0x10,%rax
  437ea2:	48 89 c7             	mov    %rax,%rdi
  437ea5:	e8 9e e2 00 00       	callq  446148 <getDecryptedValueQWord>
  437eaa:	48 8b bd 20 fa ff ff 	mov    -0x5e0(%rbp),%rdi
  437eb1:	48 83 c7 08          	add    $0x8,%rdi
  437eb5:	48 89 85 c0 f2 ff ff 	mov    %rax,-0xd40(%rbp)
  437ebc:	e8 87 e2 00 00       	callq  446148 <getDecryptedValueQWord>
  437ec1:	48 8b bd c0 f2 ff ff 	mov    -0xd40(%rbp),%rdi
  437ec8:	48 89 bd 30 fa ff ff 	mov    %rdi,-0x5d0(%rbp)
  437ecf:	48 89 85 28 fa ff ff 	mov    %rax,-0x5d8(%rbp)
  437ed6:	48 8b 85 30 fa ff ff 	mov    -0x5d0(%rbp),%rax
  437edd:	48 8b 8d 28 fa ff ff 	mov    -0x5d8(%rbp),%rcx
  437ee4:	48 c1 e1 03          	shl    $0x3,%rcx
  437ee8:	48 89 85 40 fa ff ff 	mov    %rax,-0x5c0(%rbp)
  437eef:	48 89 8d 38 fa ff ff 	mov    %rcx,-0x5c8(%rbp)
  437ef6:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  437efd:	00 
  437efe:	48 8b 8d 40 fa ff ff 	mov    -0x5c0(%rbp),%rcx
  437f05:	48 8b 95 38 fa ff ff 	mov    -0x5c8(%rbp),%rdx
  437f0c:	48 89 85 b8 f2 ff ff 	mov    %rax,-0xd48(%rbp)
  437f13:	48 89 8d b0 f2 ff ff 	mov    %rcx,-0xd50(%rbp)
  437f1a:	48 89 95 a8 f2 ff ff 	mov    %rdx,-0xd58(%rbp)
  437f21:	e8 30 da 00 00       	callq  445956 <writeback_cache>
  437f26:	48 8b bd b0 f2 ff ff 	mov    -0xd50(%rbp),%rdi
  437f2d:	48 8b b5 a8 f2 ff ff 	mov    -0xd58(%rbp),%rsi
  437f34:	e8 ac e7 00 00       	callq  4466e5 <decryptArrayForLibCall>
  437f39:	31 f6                	xor    %esi,%esi
  437f3b:	48 8b bd b0 f2 ff ff 	mov    -0xd50(%rbp),%rdi
  437f42:	48 8b 95 a8 f2 ff ff 	mov    -0xd58(%rbp),%rdx
  437f49:	48 8b 85 b8 f2 ff ff 	mov    -0xd48(%rbp),%rax
  437f50:	ff d0                	callq  *%rax
  437f52:	48 8b bd b0 f2 ff ff 	mov    -0xd50(%rbp),%rdi
  437f59:	48 8b b5 a8 f2 ff ff 	mov    -0xd58(%rbp),%rsi
  437f60:	48 89 85 a0 f2 ff ff 	mov    %rax,-0xd60(%rbp)
  437f67:	e8 ea e4 00 00       	callq  446456 <encryptArrayForLibCall>
  437f6c:	48 8b 85 20 fa ff ff 	mov    -0x5e0(%rbp),%rax
  437f73:	48 83 c0 10          	add    $0x10,%rax
  437f77:	48 89 c7             	mov    %rax,%rdi
  437f7a:	e8 c9 e1 00 00       	callq  446148 <getDecryptedValueQWord>
  437f7f:	48 89 85 98 f2 ff ff 	mov    %rax,-0xd68(%rbp)
  437f86:	e8 cb d9 00 00       	callq  445956 <writeback_cache>
  437f8b:	48 8b bd 98 f2 ff ff 	mov    -0xd68(%rbp),%rdi
  437f92:	e8 49 91 fc ff       	callq  4010e0 <free@plt>
  437f97:	48 8b 85 20 fa ff ff 	mov    -0x5e0(%rbp),%rax
  437f9e:	48 89 c7             	mov    %rax,%rdi
  437fa1:	be 01 00 00 00       	mov    $0x1,%esi
  437fa6:	e8 53 dc 00 00       	callq  445bfe <setEncryptedValueDWord>
  437fab:	31 f6                	xor    %esi,%esi
  437fad:	48 8b bd 20 fa ff ff 	mov    -0x5e0(%rbp),%rdi
  437fb4:	48 83 c7 08          	add    $0x8,%rdi
  437fb8:	48 89 85 90 f2 ff ff 	mov    %rax,-0xd70(%rbp)
  437fbf:	e8 38 dd 00 00       	callq  445cfc <setEncryptedValueQWord>
  437fc4:	31 c9                	xor    %ecx,%ecx
  437fc6:	89 ce                	mov    %ecx,%esi
  437fc8:	48 8b bd 20 fa ff ff 	mov    -0x5e0(%rbp),%rdi
  437fcf:	48 83 c7 10          	add    $0x10,%rdi
  437fd3:	48 89 85 88 f2 ff ff 	mov    %rax,-0xd78(%rbp)
  437fda:	e8 1d dd 00 00       	callq  445cfc <setEncryptedValueQWord>
  437fdf:	48 89 85 80 f2 ff ff 	mov    %rax,-0xd80(%rbp)
  437fe6:	8b 85 2c f9 ff ff    	mov    -0x6d4(%rbp),%eax
  437fec:	89 85 5c f9 ff ff    	mov    %eax,-0x6a4(%rbp)
  437ff2:	8b 85 5c f9 ff ff    	mov    -0x6a4(%rbp),%eax
  437ff8:	89 85 7c f2 ff ff    	mov    %eax,-0xd84(%rbp)
  437ffe:	e8 53 d9 00 00       	callq  445956 <writeback_cache>
  438003:	e8 4e d9 00 00       	callq  445956 <writeback_cache>
  438008:	8b 85 7c f2 ff ff    	mov    -0xd84(%rbp),%eax
  43800e:	89 85 fc f6 ff ff    	mov    %eax,-0x904(%rbp)
  438014:	83 bd fc f6 ff ff 00 	cmpl   $0x0,-0x904(%rbp)
  43801b:	74 16                	je     438033 <mbedtls_rsa_complete+0x1dc3>
  43801d:	8b 85 fc f6 ff ff    	mov    -0x904(%rbp),%eax
  438023:	05 80 bf ff ff       	add    $0xffffbf80,%eax
  438028:	89 85 0c f7 ff ff    	mov    %eax,-0x8f4(%rbp)
  43802e:	e9 42 12 00 00       	jmpq   439275 <mbedtls_rsa_complete+0x3005>
  438033:	e9 51 0c 00 00       	jmpq   438c89 <mbedtls_rsa_complete+0x2a19>
  438038:	83 bd dc f6 ff ff 00 	cmpl   $0x0,-0x924(%rbp)
  43803f:	0f 84 42 0c 00 00    	je     438c87 <mbedtls_rsa_complete+0x2a17>
  438045:	48 8b 85 00 f7 ff ff 	mov    -0x900(%rbp),%rax
  43804c:	48 83 c0 58          	add    $0x58,%rax
  438050:	48 8b 8d 00 f7 ff ff 	mov    -0x900(%rbp),%rcx
  438057:	48 83 c1 70          	add    $0x70,%rcx
  43805b:	48 8b 95 00 f7 ff ff 	mov    -0x900(%rbp),%rdx
  438062:	48 83 c2 28          	add    $0x28,%rdx
  438066:	48 8b b5 00 f7 ff ff 	mov    -0x900(%rbp),%rsi
  43806d:	48 83 c6 40          	add    $0x40,%rsi
  438071:	48 89 85 70 f2 ff ff 	mov    %rax,-0xd90(%rbp)
  438078:	48 89 8d 68 f2 ff ff 	mov    %rcx,-0xd98(%rbp)
  43807f:	48 89 95 60 f2 ff ff 	mov    %rdx,-0xda0(%rbp)
  438086:	48 89 b5 58 f2 ff ff 	mov    %rsi,-0xda8(%rbp)
  43808d:	e8 c4 d8 00 00       	callq  445956 <writeback_cache>
  438092:	e8 bf d8 00 00       	callq  445956 <writeback_cache>
  438097:	48 8b 85 70 f2 ff ff 	mov    -0xd90(%rbp),%rax
  43809e:	48 89 85 00 fd ff ff 	mov    %rax,-0x300(%rbp)
  4380a5:	48 8b 85 68 f2 ff ff 	mov    -0xd98(%rbp),%rax
  4380ac:	48 89 85 f8 fc ff ff 	mov    %rax,-0x308(%rbp)
  4380b3:	48 8b 85 60 f2 ff ff 	mov    -0xda0(%rbp),%rax
  4380ba:	48 89 85 f0 fc ff ff 	mov    %rax,-0x310(%rbp)
  4380c1:	48 8b 85 58 f2 ff ff 	mov    -0xda8(%rbp),%rax
  4380c8:	48 89 85 e8 fc ff ff 	mov    %rax,-0x318(%rbp)
  4380cf:	c7 85 e4 fc ff ff 00 	movl   $0x0,-0x31c(%rbp)
  4380d6:	00 00 00 
  4380d9:	48 83 bd e8 fc ff ff 	cmpq   $0x0,-0x318(%rbp)
  4380e0:	00 
  4380e1:	0f 84 16 01 00 00    	je     4381fd <mbedtls_rsa_complete+0x1f8d>
  4380e7:	48 8b 85 e8 fc ff ff 	mov    -0x318(%rbp),%rax
  4380ee:	48 89 85 50 f2 ff ff 	mov    %rax,-0xdb0(%rbp)
  4380f5:	e8 5c d8 00 00       	callq  445956 <writeback_cache>
  4380fa:	48 8b 85 50 f2 ff ff 	mov    -0xdb0(%rbp),%rax
  438101:	48 89 85 48 fd ff ff 	mov    %rax,-0x2b8(%rbp)
  438108:	48 c7 85 40 fd ff ff 	movq   $0x0,-0x2c0(%rbp)
  43810f:	00 00 00 00 
  438113:	48 83 bd 40 fd ff ff 	cmpq   $0x0,-0x2c0(%rbp)
  43811a:	00 
  43811b:	7d 14                	jge    438131 <mbedtls_rsa_complete+0x1ec1>
  43811d:	31 c0                	xor    %eax,%eax
  43811f:	89 c1                	mov    %eax,%ecx
  438121:	48 2b 8d 40 fd ff ff 	sub    -0x2c0(%rbp),%rcx
  438128:	48 89 8d 48 f2 ff ff 	mov    %rcx,-0xdb8(%rbp)
  43812f:	eb 0e                	jmp    43813f <mbedtls_rsa_complete+0x1ecf>
  438131:	48 8b 85 40 fd ff ff 	mov    -0x2c0(%rbp),%rax
  438138:	48 89 85 48 f2 ff ff 	mov    %rax,-0xdb8(%rbp)
  43813f:	48 8b 85 48 f2 ff ff 	mov    -0xdb8(%rbp),%rax
  438146:	48 8d 8d 10 f7 ff ff 	lea    -0x8f0(%rbp),%rcx
  43814d:	48 89 cf             	mov    %rcx,%rdi
  438150:	48 89 c6             	mov    %rax,%rsi
  438153:	e8 a4 db 00 00       	callq  445cfc <setEncryptedValueQWord>
  438158:	48 8d 8d 10 fd ff ff 	lea    -0x2f0(%rbp),%rcx
  43815f:	48 8b b5 40 fd ff ff 	mov    -0x2c0(%rbp),%rsi
  438166:	48 83 fe 00          	cmp    $0x0,%rsi
  43816a:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  43816f:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  438175:	44 0f 4c c2          	cmovl  %edx,%r8d
  438179:	48 89 cf             	mov    %rcx,%rdi
  43817c:	44 89 c6             	mov    %r8d,%esi
  43817f:	48 89 85 40 f2 ff ff 	mov    %rax,-0xdc0(%rbp)
  438186:	e8 73 da 00 00       	callq  445bfe <setEncryptedValueDWord>
  43818b:	ba 01 00 00 00       	mov    $0x1,%edx
  438190:	89 d6                	mov    %edx,%esi
  438192:	48 8d 8d 10 fd ff ff 	lea    -0x2f0(%rbp),%rcx
  438199:	48 83 c1 08          	add    $0x8,%rcx
  43819d:	48 89 cf             	mov    %rcx,%rdi
  4381a0:	48 89 85 38 f2 ff ff 	mov    %rax,-0xdc8(%rbp)
  4381a7:	e8 50 db 00 00       	callq  445cfc <setEncryptedValueQWord>
  4381ac:	48 8d b5 10 f7 ff ff 	lea    -0x8f0(%rbp),%rsi
  4381b3:	48 8d 8d 10 fd ff ff 	lea    -0x2f0(%rbp),%rcx
  4381ba:	48 83 c1 10          	add    $0x10,%rcx
  4381be:	48 89 cf             	mov    %rcx,%rdi
  4381c1:	48 89 85 30 f2 ff ff 	mov    %rax,-0xdd0(%rbp)
  4381c8:	e8 2f db 00 00       	callq  445cfc <setEncryptedValueQWord>
  4381cd:	48 8b bd 48 fd ff ff 	mov    -0x2b8(%rbp),%rdi
  4381d4:	48 8d b5 10 fd ff ff 	lea    -0x2f0(%rbp),%rsi
  4381db:	48 89 85 28 f2 ff ff 	mov    %rax,-0xdd8(%rbp)
  4381e2:	e8 69 68 fe ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  4381e7:	89 85 24 f2 ff ff    	mov    %eax,-0xddc(%rbp)
  4381ed:	e8 64 d7 00 00       	callq  445956 <writeback_cache>
  4381f2:	8b 85 24 f2 ff ff    	mov    -0xddc(%rbp),%eax
  4381f8:	83 f8 00             	cmp    $0x0,%eax
  4381fb:	74 0f                	je     43820c <mbedtls_rsa_complete+0x1f9c>
  4381fd:	c7 85 0c fd ff ff fc 	movl   $0xfffffffc,-0x2f4(%rbp)
  438204:	ff ff ff 
  438207:	e9 3c 0a 00 00       	jmpq   438c48 <mbedtls_rsa_complete+0x29d8>
  43820c:	48 8b 85 00 fd ff ff 	mov    -0x300(%rbp),%rax
  438213:	48 89 85 18 f2 ff ff 	mov    %rax,-0xde8(%rbp)
  43821a:	e8 37 d7 00 00       	callq  445956 <writeback_cache>
  43821f:	48 8b 85 18 f2 ff ff 	mov    -0xde8(%rbp),%rax
  438226:	48 89 85 88 fd ff ff 	mov    %rax,-0x278(%rbp)
  43822d:	48 c7 85 80 fd ff ff 	movq   $0x1,-0x280(%rbp)
  438234:	01 00 00 00 
  438238:	48 83 bd 80 fd ff ff 	cmpq   $0x0,-0x280(%rbp)
  43823f:	00 
  438240:	7d 14                	jge    438256 <mbedtls_rsa_complete+0x1fe6>
  438242:	31 c0                	xor    %eax,%eax
  438244:	89 c1                	mov    %eax,%ecx
  438246:	48 2b 8d 80 fd ff ff 	sub    -0x280(%rbp),%rcx
  43824d:	48 89 8d 10 f2 ff ff 	mov    %rcx,-0xdf0(%rbp)
  438254:	eb 0e                	jmp    438264 <mbedtls_rsa_complete+0x1ff4>
  438256:	48 8b 85 80 fd ff ff 	mov    -0x280(%rbp),%rax
  43825d:	48 89 85 10 f2 ff ff 	mov    %rax,-0xdf0(%rbp)
  438264:	48 8b 85 10 f2 ff ff 	mov    -0xdf0(%rbp),%rax
  43826b:	48 8d 8d 10 f7 ff ff 	lea    -0x8f0(%rbp),%rcx
  438272:	48 89 cf             	mov    %rcx,%rdi
  438275:	48 89 c6             	mov    %rax,%rsi
  438278:	e8 7f da 00 00       	callq  445cfc <setEncryptedValueQWord>
  43827d:	48 8d 8d 50 fd ff ff 	lea    -0x2b0(%rbp),%rcx
  438284:	48 8b b5 80 fd ff ff 	mov    -0x280(%rbp),%rsi
  43828b:	48 83 fe 00          	cmp    $0x0,%rsi
  43828f:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  438294:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  43829a:	44 0f 4c c2          	cmovl  %edx,%r8d
  43829e:	48 89 cf             	mov    %rcx,%rdi
  4382a1:	44 89 c6             	mov    %r8d,%esi
  4382a4:	48 89 85 08 f2 ff ff 	mov    %rax,-0xdf8(%rbp)
  4382ab:	e8 4e d9 00 00       	callq  445bfe <setEncryptedValueDWord>
  4382b0:	ba 01 00 00 00       	mov    $0x1,%edx
  4382b5:	89 d6                	mov    %edx,%esi
  4382b7:	48 8d 8d 50 fd ff ff 	lea    -0x2b0(%rbp),%rcx
  4382be:	48 83 c1 08          	add    $0x8,%rcx
  4382c2:	48 89 cf             	mov    %rcx,%rdi
  4382c5:	48 89 85 00 f2 ff ff 	mov    %rax,-0xe00(%rbp)
  4382cc:	e8 2b da 00 00       	callq  445cfc <setEncryptedValueQWord>
  4382d1:	48 8d b5 10 f7 ff ff 	lea    -0x8f0(%rbp),%rsi
  4382d8:	48 8d 8d 50 fd ff ff 	lea    -0x2b0(%rbp),%rcx
  4382df:	48 83 c1 10          	add    $0x10,%rcx
  4382e3:	48 89 cf             	mov    %rcx,%rdi
  4382e6:	48 89 85 f8 f1 ff ff 	mov    %rax,-0xe08(%rbp)
  4382ed:	e8 0a da 00 00       	callq  445cfc <setEncryptedValueQWord>
  4382f2:	48 8b bd 88 fd ff ff 	mov    -0x278(%rbp),%rdi
  4382f9:	48 8d b5 50 fd ff ff 	lea    -0x2b0(%rbp),%rsi
  438300:	48 89 85 f0 f1 ff ff 	mov    %rax,-0xe10(%rbp)
  438307:	e8 44 67 fe ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  43830c:	89 85 ec f1 ff ff    	mov    %eax,-0xe14(%rbp)
  438312:	e8 3f d6 00 00       	callq  445956 <writeback_cache>
  438317:	8b 85 ec f1 ff ff    	mov    -0xe14(%rbp),%eax
  43831d:	83 f8 00             	cmp    $0x0,%eax
  438320:	0f 8e 30 02 00 00    	jle    438556 <mbedtls_rsa_complete+0x22e6>
  438326:	48 8b 85 f8 fc ff ff 	mov    -0x308(%rbp),%rax
  43832d:	48 89 85 e0 f1 ff ff 	mov    %rax,-0xe20(%rbp)
  438334:	e8 1d d6 00 00       	callq  445956 <writeback_cache>
  438339:	48 8b 85 e0 f1 ff ff 	mov    -0xe20(%rbp),%rax
  438340:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
  438347:	48 c7 85 c0 fd ff ff 	movq   $0x1,-0x240(%rbp)
  43834e:	01 00 00 00 
  438352:	48 83 bd c0 fd ff ff 	cmpq   $0x0,-0x240(%rbp)
  438359:	00 
  43835a:	7d 14                	jge    438370 <mbedtls_rsa_complete+0x2100>
  43835c:	31 c0                	xor    %eax,%eax
  43835e:	89 c1                	mov    %eax,%ecx
  438360:	48 2b 8d c0 fd ff ff 	sub    -0x240(%rbp),%rcx
  438367:	48 89 8d d8 f1 ff ff 	mov    %rcx,-0xe28(%rbp)
  43836e:	eb 0e                	jmp    43837e <mbedtls_rsa_complete+0x210e>
  438370:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
  438377:	48 89 85 d8 f1 ff ff 	mov    %rax,-0xe28(%rbp)
  43837e:	48 8b 85 d8 f1 ff ff 	mov    -0xe28(%rbp),%rax
  438385:	48 8d 8d 10 f7 ff ff 	lea    -0x8f0(%rbp),%rcx
  43838c:	48 89 cf             	mov    %rcx,%rdi
  43838f:	48 89 c6             	mov    %rax,%rsi
  438392:	e8 65 d9 00 00       	callq  445cfc <setEncryptedValueQWord>
  438397:	48 8d 8d 90 fd ff ff 	lea    -0x270(%rbp),%rcx
  43839e:	48 8b b5 c0 fd ff ff 	mov    -0x240(%rbp),%rsi
  4383a5:	48 83 fe 00          	cmp    $0x0,%rsi
  4383a9:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  4383ae:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  4383b4:	44 0f 4c c2          	cmovl  %edx,%r8d
  4383b8:	48 89 cf             	mov    %rcx,%rdi
  4383bb:	44 89 c6             	mov    %r8d,%esi
  4383be:	48 89 85 d0 f1 ff ff 	mov    %rax,-0xe30(%rbp)
  4383c5:	e8 34 d8 00 00       	callq  445bfe <setEncryptedValueDWord>
  4383ca:	ba 01 00 00 00       	mov    $0x1,%edx
  4383cf:	89 d6                	mov    %edx,%esi
  4383d1:	48 8d 8d 90 fd ff ff 	lea    -0x270(%rbp),%rcx
  4383d8:	48 83 c1 08          	add    $0x8,%rcx
  4383dc:	48 89 cf             	mov    %rcx,%rdi
  4383df:	48 89 85 c8 f1 ff ff 	mov    %rax,-0xe38(%rbp)
  4383e6:	e8 11 d9 00 00       	callq  445cfc <setEncryptedValueQWord>
  4383eb:	48 8d b5 10 f7 ff ff 	lea    -0x8f0(%rbp),%rsi
  4383f2:	48 8d 8d 90 fd ff ff 	lea    -0x270(%rbp),%rcx
  4383f9:	48 83 c1 10          	add    $0x10,%rcx
  4383fd:	48 89 cf             	mov    %rcx,%rdi
  438400:	48 89 85 c0 f1 ff ff 	mov    %rax,-0xe40(%rbp)
  438407:	e8 f0 d8 00 00       	callq  445cfc <setEncryptedValueQWord>
  43840c:	48 8b bd c8 fd ff ff 	mov    -0x238(%rbp),%rdi
  438413:	48 8d b5 90 fd ff ff 	lea    -0x270(%rbp),%rsi
  43841a:	48 89 85 b8 f1 ff ff 	mov    %rax,-0xe48(%rbp)
  438421:	e8 2a 66 fe ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  438426:	89 85 b4 f1 ff ff    	mov    %eax,-0xe4c(%rbp)
  43842c:	e8 25 d5 00 00       	callq  445956 <writeback_cache>
  438431:	8b 85 b4 f1 ff ff    	mov    -0xe4c(%rbp),%eax
  438437:	83 f8 00             	cmp    $0x0,%eax
  43843a:	0f 8e 16 01 00 00    	jle    438556 <mbedtls_rsa_complete+0x22e6>
  438440:	48 8b 85 f0 fc ff ff 	mov    -0x310(%rbp),%rax
  438447:	48 89 85 a8 f1 ff ff 	mov    %rax,-0xe58(%rbp)
  43844e:	e8 03 d5 00 00       	callq  445956 <writeback_cache>
  438453:	48 8b 85 a8 f1 ff ff 	mov    -0xe58(%rbp),%rax
  43845a:	48 89 85 00 fe ff ff 	mov    %rax,-0x200(%rbp)
  438461:	48 c7 85 f8 fd ff ff 	movq   $0x0,-0x208(%rbp)
  438468:	00 00 00 00 
  43846c:	48 83 bd f8 fd ff ff 	cmpq   $0x0,-0x208(%rbp)
  438473:	00 
  438474:	7d 14                	jge    43848a <mbedtls_rsa_complete+0x221a>
  438476:	31 c0                	xor    %eax,%eax
  438478:	89 c1                	mov    %eax,%ecx
  43847a:	48 2b 8d f8 fd ff ff 	sub    -0x208(%rbp),%rcx
  438481:	48 89 8d a0 f1 ff ff 	mov    %rcx,-0xe60(%rbp)
  438488:	eb 0e                	jmp    438498 <mbedtls_rsa_complete+0x2228>
  43848a:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
  438491:	48 89 85 a0 f1 ff ff 	mov    %rax,-0xe60(%rbp)
  438498:	48 8b 85 a0 f1 ff ff 	mov    -0xe60(%rbp),%rax
  43849f:	48 8d 8d 10 f7 ff ff 	lea    -0x8f0(%rbp),%rcx
  4384a6:	48 89 cf             	mov    %rcx,%rdi
  4384a9:	48 89 c6             	mov    %rax,%rsi
  4384ac:	e8 4b d8 00 00       	callq  445cfc <setEncryptedValueQWord>
  4384b1:	48 8d 8d d0 fd ff ff 	lea    -0x230(%rbp),%rcx
  4384b8:	48 8b b5 f8 fd ff ff 	mov    -0x208(%rbp),%rsi
  4384bf:	48 83 fe 00          	cmp    $0x0,%rsi
  4384c3:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  4384c8:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  4384ce:	44 0f 4c c2          	cmovl  %edx,%r8d
  4384d2:	48 89 cf             	mov    %rcx,%rdi
  4384d5:	44 89 c6             	mov    %r8d,%esi
  4384d8:	48 89 85 98 f1 ff ff 	mov    %rax,-0xe68(%rbp)
  4384df:	e8 1a d7 00 00       	callq  445bfe <setEncryptedValueDWord>
  4384e4:	ba 01 00 00 00       	mov    $0x1,%edx
  4384e9:	89 d6                	mov    %edx,%esi
  4384eb:	48 8d 8d d0 fd ff ff 	lea    -0x230(%rbp),%rcx
  4384f2:	48 83 c1 08          	add    $0x8,%rcx
  4384f6:	48 89 cf             	mov    %rcx,%rdi
  4384f9:	48 89 85 90 f1 ff ff 	mov    %rax,-0xe70(%rbp)
  438500:	e8 f7 d7 00 00       	callq  445cfc <setEncryptedValueQWord>
  438505:	48 8d b5 10 f7 ff ff 	lea    -0x8f0(%rbp),%rsi
  43850c:	48 8d 8d d0 fd ff ff 	lea    -0x230(%rbp),%rcx
  438513:	48 83 c1 10          	add    $0x10,%rcx
  438517:	48 89 cf             	mov    %rcx,%rdi
  43851a:	48 89 85 88 f1 ff ff 	mov    %rax,-0xe78(%rbp)
  438521:	e8 d6 d7 00 00       	callq  445cfc <setEncryptedValueQWord>
  438526:	48 8b bd 00 fe ff ff 	mov    -0x200(%rbp),%rdi
  43852d:	48 8d b5 d0 fd ff ff 	lea    -0x230(%rbp),%rsi
  438534:	48 89 85 80 f1 ff ff 	mov    %rax,-0xe80(%rbp)
  43853b:	e8 10 65 fe ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  438540:	89 85 7c f1 ff ff    	mov    %eax,-0xe84(%rbp)
  438546:	e8 0b d4 00 00       	callq  445956 <writeback_cache>
  43854b:	8b 85 7c f1 ff ff    	mov    -0xe84(%rbp),%eax
  438551:	83 f8 00             	cmp    $0x0,%eax
  438554:	75 0f                	jne    438565 <mbedtls_rsa_complete+0x22f5>
  438556:	c7 85 0c fd ff ff fc 	movl   $0xfffffffc,-0x2f4(%rbp)
  43855d:	ff ff ff 
  438560:	e9 e3 06 00 00       	jmpq   438c48 <mbedtls_rsa_complete+0x29d8>
  438565:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
  43856c:	48 89 85 08 fe ff ff 	mov    %rax,-0x1f8(%rbp)
  438573:	48 8b 85 08 fe ff ff 	mov    -0x1f8(%rbp),%rax
  43857a:	48 89 c7             	mov    %rax,%rdi
  43857d:	be 01 00 00 00       	mov    $0x1,%esi
  438582:	e8 77 d6 00 00       	callq  445bfe <setEncryptedValueDWord>
  438587:	31 f6                	xor    %esi,%esi
  438589:	48 8b bd 08 fe ff ff 	mov    -0x1f8(%rbp),%rdi
  438590:	48 83 c7 08          	add    $0x8,%rdi
  438594:	48 89 85 70 f1 ff ff 	mov    %rax,-0xe90(%rbp)
  43859b:	e8 5c d7 00 00       	callq  445cfc <setEncryptedValueQWord>
  4385a0:	31 c9                	xor    %ecx,%ecx
  4385a2:	89 ce                	mov    %ecx,%esi
  4385a4:	48 8b bd 08 fe ff ff 	mov    -0x1f8(%rbp),%rdi
  4385ab:	48 83 c7 10          	add    $0x10,%rdi
  4385af:	48 89 85 68 f1 ff ff 	mov    %rax,-0xe98(%rbp)
  4385b6:	e8 41 d7 00 00       	callq  445cfc <setEncryptedValueQWord>
  4385bb:	48 8d b5 80 fc ff ff 	lea    -0x380(%rbp),%rsi
  4385c2:	48 89 b5 38 fe ff ff 	mov    %rsi,-0x1c8(%rbp)
  4385c9:	48 8b b5 38 fe ff ff 	mov    -0x1c8(%rbp),%rsi
  4385d0:	48 89 f7             	mov    %rsi,%rdi
  4385d3:	be 01 00 00 00       	mov    $0x1,%esi
  4385d8:	48 89 85 60 f1 ff ff 	mov    %rax,-0xea0(%rbp)
  4385df:	e8 1a d6 00 00       	callq  445bfe <setEncryptedValueDWord>
  4385e4:	31 c9                	xor    %ecx,%ecx
  4385e6:	89 ce                	mov    %ecx,%esi
  4385e8:	48 8b bd 38 fe ff ff 	mov    -0x1c8(%rbp),%rdi
  4385ef:	48 83 c7 08          	add    $0x8,%rdi
  4385f3:	48 89 85 58 f1 ff ff 	mov    %rax,-0xea8(%rbp)
  4385fa:	e8 fd d6 00 00       	callq  445cfc <setEncryptedValueQWord>
  4385ff:	31 c9                	xor    %ecx,%ecx
  438601:	89 ce                	mov    %ecx,%esi
  438603:	48 8b bd 38 fe ff ff 	mov    -0x1c8(%rbp),%rdi
  43860a:	48 83 c7 10          	add    $0x10,%rdi
  43860e:	48 89 85 50 f1 ff ff 	mov    %rax,-0xeb0(%rbp)
  438615:	e8 e2 d6 00 00       	callq  445cfc <setEncryptedValueQWord>
  43861a:	48 8b b5 00 fd ff ff 	mov    -0x300(%rbp),%rsi
  438621:	48 89 85 48 f1 ff ff 	mov    %rax,-0xeb8(%rbp)
  438628:	48 89 b5 40 f1 ff ff 	mov    %rsi,-0xec0(%rbp)
  43862f:	e8 22 d3 00 00       	callq  445956 <writeback_cache>
  438634:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
  43863b:	48 89 85 78 fe ff ff 	mov    %rax,-0x188(%rbp)
  438642:	48 8b 85 40 f1 ff ff 	mov    -0xec0(%rbp),%rax
  438649:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
  438650:	48 c7 85 68 fe ff ff 	movq   $0x1,-0x198(%rbp)
  438657:	01 00 00 00 
  43865b:	48 83 bd 68 fe ff ff 	cmpq   $0x0,-0x198(%rbp)
  438662:	00 
  438663:	7d 14                	jge    438679 <mbedtls_rsa_complete+0x2409>
  438665:	31 c0                	xor    %eax,%eax
  438667:	89 c1                	mov    %eax,%ecx
  438669:	48 2b 8d 68 fe ff ff 	sub    -0x198(%rbp),%rcx
  438670:	48 89 8d 38 f1 ff ff 	mov    %rcx,-0xec8(%rbp)
  438677:	eb 0e                	jmp    438687 <mbedtls_rsa_complete+0x2417>
  438679:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
  438680:	48 89 85 38 f1 ff ff 	mov    %rax,-0xec8(%rbp)
  438687:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
  43868e:	48 8d 8d 10 f7 ff ff 	lea    -0x8f0(%rbp),%rcx
  438695:	48 89 cf             	mov    %rcx,%rdi
  438698:	48 89 c6             	mov    %rax,%rsi
  43869b:	e8 5c d6 00 00       	callq  445cfc <setEncryptedValueQWord>
  4386a0:	48 8d 8d 40 fe ff ff 	lea    -0x1c0(%rbp),%rcx
  4386a7:	48 8b b5 68 fe ff ff 	mov    -0x198(%rbp),%rsi
  4386ae:	48 83 fe 00          	cmp    $0x0,%rsi
  4386b2:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  4386b7:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  4386bd:	44 0f 4c c2          	cmovl  %edx,%r8d
  4386c1:	48 89 cf             	mov    %rcx,%rdi
  4386c4:	44 89 c6             	mov    %r8d,%esi
  4386c7:	48 89 85 30 f1 ff ff 	mov    %rax,-0xed0(%rbp)
  4386ce:	e8 2b d5 00 00       	callq  445bfe <setEncryptedValueDWord>
  4386d3:	ba 01 00 00 00       	mov    $0x1,%edx
  4386d8:	89 d6                	mov    %edx,%esi
  4386da:	48 8d 8d 40 fe ff ff 	lea    -0x1c0(%rbp),%rcx
  4386e1:	48 83 c1 08          	add    $0x8,%rcx
  4386e5:	48 89 cf             	mov    %rcx,%rdi
  4386e8:	48 89 85 28 f1 ff ff 	mov    %rax,-0xed8(%rbp)
  4386ef:	e8 08 d6 00 00       	callq  445cfc <setEncryptedValueQWord>
  4386f4:	48 8d b5 10 f7 ff ff 	lea    -0x8f0(%rbp),%rsi
  4386fb:	48 8d 8d 40 fe ff ff 	lea    -0x1c0(%rbp),%rcx
  438702:	48 83 c1 10          	add    $0x10,%rcx
  438706:	48 89 cf             	mov    %rcx,%rdi
  438709:	48 89 85 20 f1 ff ff 	mov    %rax,-0xee0(%rbp)
  438710:	e8 e7 d5 00 00       	callq  445cfc <setEncryptedValueQWord>
  438715:	48 8b bd 78 fe ff ff 	mov    -0x188(%rbp),%rdi
  43871c:	48 8b b5 70 fe ff ff 	mov    -0x190(%rbp),%rsi
  438723:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
  43872a:	48 89 85 18 f1 ff ff 	mov    %rax,-0xee8(%rbp)
  438731:	e8 fa 31 fe ff       	callq  41b930 <mbedtls_mpi_sub_mpi>
  438736:	89 85 14 f1 ff ff    	mov    %eax,-0xeec(%rbp)
  43873c:	e8 15 d2 00 00       	callq  445956 <writeback_cache>
  438741:	8b 85 14 f1 ff ff    	mov    -0xeec(%rbp),%eax
  438747:	89 85 e4 fc ff ff    	mov    %eax,-0x31c(%rbp)
  43874d:	83 f8 00             	cmp    $0x0,%eax
  438750:	74 05                	je     438757 <mbedtls_rsa_complete+0x24e7>
  438752:	e9 d3 01 00 00       	jmpq   43892a <mbedtls_rsa_complete+0x26ba>
  438757:	48 8b 85 f8 fc ff ff 	mov    -0x308(%rbp),%rax
  43875e:	48 89 85 08 f1 ff ff 	mov    %rax,-0xef8(%rbp)
  438765:	e8 ec d1 00 00       	callq  445956 <writeback_cache>
  43876a:	48 8d 85 80 fc ff ff 	lea    -0x380(%rbp),%rax
  438771:	48 89 85 c0 fe ff ff 	mov    %rax,-0x140(%rbp)
  438778:	48 8b 85 08 f1 ff ff 	mov    -0xef8(%rbp),%rax
  43877f:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
  438786:	48 c7 85 b0 fe ff ff 	movq   $0x1,-0x150(%rbp)
  43878d:	01 00 00 00 
  438791:	48 83 bd b0 fe ff ff 	cmpq   $0x0,-0x150(%rbp)
  438798:	00 
  438799:	7d 14                	jge    4387af <mbedtls_rsa_complete+0x253f>
  43879b:	31 c0                	xor    %eax,%eax
  43879d:	89 c1                	mov    %eax,%ecx
  43879f:	48 2b 8d b0 fe ff ff 	sub    -0x150(%rbp),%rcx
  4387a6:	48 89 8d 00 f1 ff ff 	mov    %rcx,-0xf00(%rbp)
  4387ad:	eb 0e                	jmp    4387bd <mbedtls_rsa_complete+0x254d>
  4387af:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
  4387b6:	48 89 85 00 f1 ff ff 	mov    %rax,-0xf00(%rbp)
  4387bd:	48 8b 85 00 f1 ff ff 	mov    -0xf00(%rbp),%rax
  4387c4:	48 8d 8d 10 f7 ff ff 	lea    -0x8f0(%rbp),%rcx
  4387cb:	48 89 cf             	mov    %rcx,%rdi
  4387ce:	48 89 c6             	mov    %rax,%rsi
  4387d1:	e8 26 d5 00 00       	callq  445cfc <setEncryptedValueQWord>
  4387d6:	48 8d 8d 80 fe ff ff 	lea    -0x180(%rbp),%rcx
  4387dd:	48 8b b5 b0 fe ff ff 	mov    -0x150(%rbp),%rsi
  4387e4:	48 83 fe 00          	cmp    $0x0,%rsi
  4387e8:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  4387ed:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  4387f3:	44 0f 4c c2          	cmovl  %edx,%r8d
  4387f7:	48 89 cf             	mov    %rcx,%rdi
  4387fa:	44 89 c6             	mov    %r8d,%esi
  4387fd:	48 89 85 f8 f0 ff ff 	mov    %rax,-0xf08(%rbp)
  438804:	e8 f5 d3 00 00       	callq  445bfe <setEncryptedValueDWord>
  438809:	ba 01 00 00 00       	mov    $0x1,%edx
  43880e:	89 d6                	mov    %edx,%esi
  438810:	48 8d 8d 80 fe ff ff 	lea    -0x180(%rbp),%rcx
  438817:	48 83 c1 08          	add    $0x8,%rcx
  43881b:	48 89 cf             	mov    %rcx,%rdi
  43881e:	48 89 85 f0 f0 ff ff 	mov    %rax,-0xf10(%rbp)
  438825:	e8 d2 d4 00 00       	callq  445cfc <setEncryptedValueQWord>
  43882a:	48 8d b5 10 f7 ff ff 	lea    -0x8f0(%rbp),%rsi
  438831:	48 8d 8d 80 fe ff ff 	lea    -0x180(%rbp),%rcx
  438838:	48 83 c1 10          	add    $0x10,%rcx
  43883c:	48 89 cf             	mov    %rcx,%rdi
  43883f:	48 89 85 e8 f0 ff ff 	mov    %rax,-0xf18(%rbp)
  438846:	e8 b1 d4 00 00       	callq  445cfc <setEncryptedValueQWord>
  43884b:	48 8b bd c0 fe ff ff 	mov    -0x140(%rbp),%rdi
  438852:	48 8b b5 b8 fe ff ff 	mov    -0x148(%rbp),%rsi
  438859:	48 8d 95 80 fe ff ff 	lea    -0x180(%rbp),%rdx
  438860:	48 89 85 e0 f0 ff ff 	mov    %rax,-0xf20(%rbp)
  438867:	e8 c4 30 fe ff       	callq  41b930 <mbedtls_mpi_sub_mpi>
  43886c:	89 85 dc f0 ff ff    	mov    %eax,-0xf24(%rbp)
  438872:	e8 df d0 00 00       	callq  445956 <writeback_cache>
  438877:	8b 85 dc f0 ff ff    	mov    -0xf24(%rbp),%eax
  43887d:	89 85 e4 fc ff ff    	mov    %eax,-0x31c(%rbp)
  438883:	83 f8 00             	cmp    $0x0,%eax
  438886:	74 05                	je     43888d <mbedtls_rsa_complete+0x261d>
  438888:	e9 9d 00 00 00       	jmpq   43892a <mbedtls_rsa_complete+0x26ba>
  43888d:	48 8b bd e8 fc ff ff 	mov    -0x318(%rbp),%rdi
  438894:	48 8d b5 b0 fc ff ff 	lea    -0x350(%rbp),%rsi
  43889b:	48 8d 95 80 fc ff ff 	lea    -0x380(%rbp),%rdx
  4388a2:	e8 c9 b3 fe ff       	callq  423c70 <mbedtls_mpi_gcd>
  4388a7:	89 85 e4 fc ff ff    	mov    %eax,-0x31c(%rbp)
  4388ad:	83 f8 00             	cmp    $0x0,%eax
  4388b0:	74 02                	je     4388b4 <mbedtls_rsa_complete+0x2644>
  4388b2:	eb 76                	jmp    43892a <mbedtls_rsa_complete+0x26ba>
  4388b4:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
  4388bb:	48 89 c7             	mov    %rax,%rdi
  4388be:	48 89 c6             	mov    %rax,%rsi
  4388c1:	48 8d 95 80 fc ff ff 	lea    -0x380(%rbp),%rdx
  4388c8:	e8 f3 3c fe ff       	callq  41c5c0 <mbedtls_mpi_mul_mpi>
  4388cd:	89 85 e4 fc ff ff    	mov    %eax,-0x31c(%rbp)
  4388d3:	83 f8 00             	cmp    $0x0,%eax
  4388d6:	74 02                	je     4388da <mbedtls_rsa_complete+0x266a>
  4388d8:	eb 50                	jmp    43892a <mbedtls_rsa_complete+0x26ba>
  4388da:	31 c0                	xor    %eax,%eax
  4388dc:	89 c6                	mov    %eax,%esi
  4388de:	48 8b 8d e8 fc ff ff 	mov    -0x318(%rbp),%rcx
  4388e5:	48 8d 95 b0 fc ff ff 	lea    -0x350(%rbp),%rdx
  4388ec:	48 89 d7             	mov    %rdx,%rdi
  4388ef:	e8 fc 63 fe ff       	callq  41ecf0 <mbedtls_mpi_div_mpi>
  4388f4:	89 85 e4 fc ff ff    	mov    %eax,-0x31c(%rbp)
  4388fa:	83 f8 00             	cmp    $0x0,%eax
  4388fd:	74 02                	je     438901 <mbedtls_rsa_complete+0x2691>
  4388ff:	eb 29                	jmp    43892a <mbedtls_rsa_complete+0x26ba>
  438901:	48 8b bd e8 fc ff ff 	mov    -0x318(%rbp),%rdi
  438908:	48 8b b5 f0 fc ff ff 	mov    -0x310(%rbp),%rsi
  43890f:	48 8d 95 b0 fc ff ff 	lea    -0x350(%rbp),%rdx
  438916:	e8 55 bf fe ff       	callq  424870 <mbedtls_mpi_inv_mod>
  43891b:	89 85 e4 fc ff ff    	mov    %eax,-0x31c(%rbp)
  438921:	83 f8 00             	cmp    $0x0,%eax
  438924:	74 02                	je     438928 <mbedtls_rsa_complete+0x26b8>
  438926:	eb 02                	jmp    43892a <mbedtls_rsa_complete+0x26ba>
  438928:	eb 00                	jmp    43892a <mbedtls_rsa_complete+0x26ba>
  43892a:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
  438931:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
  438938:	48 83 bd c8 fe ff ff 	cmpq   $0x0,-0x138(%rbp)
  43893f:	00 
  438940:	75 05                	jne    438947 <mbedtls_rsa_complete+0x26d7>
  438942:	e9 6c 01 00 00       	jmpq   438ab3 <mbedtls_rsa_complete+0x2843>
  438947:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  43894e:	48 83 c0 10          	add    $0x10,%rax
  438952:	48 89 c7             	mov    %rax,%rdi
  438955:	e8 ee d7 00 00       	callq  446148 <getDecryptedValueQWord>
  43895a:	48 83 f8 00          	cmp    $0x0,%rax
  43895e:	0f 84 00 01 00 00    	je     438a64 <mbedtls_rsa_complete+0x27f4>
  438964:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  43896b:	48 83 c0 10          	add    $0x10,%rax
  43896f:	48 89 c7             	mov    %rax,%rdi
  438972:	e8 d1 d7 00 00       	callq  446148 <getDecryptedValueQWord>
  438977:	48 8b bd c8 fe ff ff 	mov    -0x138(%rbp),%rdi
  43897e:	48 83 c7 08          	add    $0x8,%rdi
  438982:	48 89 85 d0 f0 ff ff 	mov    %rax,-0xf30(%rbp)
  438989:	e8 ba d7 00 00       	callq  446148 <getDecryptedValueQWord>
  43898e:	48 8b bd d0 f0 ff ff 	mov    -0xf30(%rbp),%rdi
  438995:	48 89 bd d8 fe ff ff 	mov    %rdi,-0x128(%rbp)
  43899c:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
  4389a3:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
  4389aa:	48 8b 8d d0 fe ff ff 	mov    -0x130(%rbp),%rcx
  4389b1:	48 c1 e1 03          	shl    $0x3,%rcx
  4389b5:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
  4389bc:	48 89 8d e0 fe ff ff 	mov    %rcx,-0x120(%rbp)
  4389c3:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  4389ca:	00 
  4389cb:	48 8b 8d e8 fe ff ff 	mov    -0x118(%rbp),%rcx
  4389d2:	48 8b 95 e0 fe ff ff 	mov    -0x120(%rbp),%rdx
  4389d9:	48 89 85 c8 f0 ff ff 	mov    %rax,-0xf38(%rbp)
  4389e0:	48 89 8d c0 f0 ff ff 	mov    %rcx,-0xf40(%rbp)
  4389e7:	48 89 95 b8 f0 ff ff 	mov    %rdx,-0xf48(%rbp)
  4389ee:	e8 63 cf 00 00       	callq  445956 <writeback_cache>
  4389f3:	48 8b bd c0 f0 ff ff 	mov    -0xf40(%rbp),%rdi
  4389fa:	48 8b b5 b8 f0 ff ff 	mov    -0xf48(%rbp),%rsi
  438a01:	e8 df dc 00 00       	callq  4466e5 <decryptArrayForLibCall>
  438a06:	31 f6                	xor    %esi,%esi
  438a08:	48 8b bd c0 f0 ff ff 	mov    -0xf40(%rbp),%rdi
  438a0f:	48 8b 95 b8 f0 ff ff 	mov    -0xf48(%rbp),%rdx
  438a16:	48 8b 85 c8 f0 ff ff 	mov    -0xf38(%rbp),%rax
  438a1d:	ff d0                	callq  *%rax
  438a1f:	48 8b bd c0 f0 ff ff 	mov    -0xf40(%rbp),%rdi
  438a26:	48 8b b5 b8 f0 ff ff 	mov    -0xf48(%rbp),%rsi
  438a2d:	48 89 85 b0 f0 ff ff 	mov    %rax,-0xf50(%rbp)
  438a34:	e8 1d da 00 00       	callq  446456 <encryptArrayForLibCall>
  438a39:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  438a40:	48 83 c0 10          	add    $0x10,%rax
  438a44:	48 89 c7             	mov    %rax,%rdi
  438a47:	e8 fc d6 00 00       	callq  446148 <getDecryptedValueQWord>
  438a4c:	48 89 85 a8 f0 ff ff 	mov    %rax,-0xf58(%rbp)
  438a53:	e8 fe ce 00 00       	callq  445956 <writeback_cache>
  438a58:	48 8b bd a8 f0 ff ff 	mov    -0xf58(%rbp),%rdi
  438a5f:	e8 7c 86 fc ff       	callq  4010e0 <free@plt>
  438a64:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  438a6b:	48 89 c7             	mov    %rax,%rdi
  438a6e:	be 01 00 00 00       	mov    $0x1,%esi
  438a73:	e8 86 d1 00 00       	callq  445bfe <setEncryptedValueDWord>
  438a78:	31 f6                	xor    %esi,%esi
  438a7a:	48 8b bd c8 fe ff ff 	mov    -0x138(%rbp),%rdi
  438a81:	48 83 c7 08          	add    $0x8,%rdi
  438a85:	48 89 85 a0 f0 ff ff 	mov    %rax,-0xf60(%rbp)
  438a8c:	e8 6b d2 00 00       	callq  445cfc <setEncryptedValueQWord>
  438a91:	31 c9                	xor    %ecx,%ecx
  438a93:	89 ce                	mov    %ecx,%esi
  438a95:	48 8b bd c8 fe ff ff 	mov    -0x138(%rbp),%rdi
  438a9c:	48 83 c7 10          	add    $0x10,%rdi
  438aa0:	48 89 85 98 f0 ff ff 	mov    %rax,-0xf68(%rbp)
  438aa7:	e8 50 d2 00 00       	callq  445cfc <setEncryptedValueQWord>
  438aac:	48 89 85 90 f0 ff ff 	mov    %rax,-0xf70(%rbp)
  438ab3:	48 8d 85 80 fc ff ff 	lea    -0x380(%rbp),%rax
  438aba:	48 89 85 10 fe ff ff 	mov    %rax,-0x1f0(%rbp)
  438ac1:	48 83 bd 10 fe ff ff 	cmpq   $0x0,-0x1f0(%rbp)
  438ac8:	00 
  438ac9:	75 05                	jne    438ad0 <mbedtls_rsa_complete+0x2860>
  438acb:	e9 6c 01 00 00       	jmpq   438c3c <mbedtls_rsa_complete+0x29cc>
  438ad0:	48 8b 85 10 fe ff ff 	mov    -0x1f0(%rbp),%rax
  438ad7:	48 83 c0 10          	add    $0x10,%rax
  438adb:	48 89 c7             	mov    %rax,%rdi
  438ade:	e8 65 d6 00 00       	callq  446148 <getDecryptedValueQWord>
  438ae3:	48 83 f8 00          	cmp    $0x0,%rax
  438ae7:	0f 84 00 01 00 00    	je     438bed <mbedtls_rsa_complete+0x297d>
  438aed:	48 8b 85 10 fe ff ff 	mov    -0x1f0(%rbp),%rax
  438af4:	48 83 c0 10          	add    $0x10,%rax
  438af8:	48 89 c7             	mov    %rax,%rdi
  438afb:	e8 48 d6 00 00       	callq  446148 <getDecryptedValueQWord>
  438b00:	48 8b bd 10 fe ff ff 	mov    -0x1f0(%rbp),%rdi
  438b07:	48 83 c7 08          	add    $0x8,%rdi
  438b0b:	48 89 85 88 f0 ff ff 	mov    %rax,-0xf78(%rbp)
  438b12:	e8 31 d6 00 00       	callq  446148 <getDecryptedValueQWord>
  438b17:	48 8b bd 88 f0 ff ff 	mov    -0xf78(%rbp),%rdi
  438b1e:	48 89 bd 20 fe ff ff 	mov    %rdi,-0x1e0(%rbp)
  438b25:	48 89 85 18 fe ff ff 	mov    %rax,-0x1e8(%rbp)
  438b2c:	48 8b 85 20 fe ff ff 	mov    -0x1e0(%rbp),%rax
  438b33:	48 8b 8d 18 fe ff ff 	mov    -0x1e8(%rbp),%rcx
  438b3a:	48 c1 e1 03          	shl    $0x3,%rcx
  438b3e:	48 89 85 30 fe ff ff 	mov    %rax,-0x1d0(%rbp)
  438b45:	48 89 8d 28 fe ff ff 	mov    %rcx,-0x1d8(%rbp)
  438b4c:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  438b53:	00 
  438b54:	48 8b 8d 30 fe ff ff 	mov    -0x1d0(%rbp),%rcx
  438b5b:	48 8b 95 28 fe ff ff 	mov    -0x1d8(%rbp),%rdx
  438b62:	48 89 85 80 f0 ff ff 	mov    %rax,-0xf80(%rbp)
  438b69:	48 89 8d 78 f0 ff ff 	mov    %rcx,-0xf88(%rbp)
  438b70:	48 89 95 70 f0 ff ff 	mov    %rdx,-0xf90(%rbp)
  438b77:	e8 da cd 00 00       	callq  445956 <writeback_cache>
  438b7c:	48 8b bd 78 f0 ff ff 	mov    -0xf88(%rbp),%rdi
  438b83:	48 8b b5 70 f0 ff ff 	mov    -0xf90(%rbp),%rsi
  438b8a:	e8 56 db 00 00       	callq  4466e5 <decryptArrayForLibCall>
  438b8f:	31 f6                	xor    %esi,%esi
  438b91:	48 8b bd 78 f0 ff ff 	mov    -0xf88(%rbp),%rdi
  438b98:	48 8b 95 70 f0 ff ff 	mov    -0xf90(%rbp),%rdx
  438b9f:	48 8b 85 80 f0 ff ff 	mov    -0xf80(%rbp),%rax
  438ba6:	ff d0                	callq  *%rax
  438ba8:	48 8b bd 78 f0 ff ff 	mov    -0xf88(%rbp),%rdi
  438baf:	48 8b b5 70 f0 ff ff 	mov    -0xf90(%rbp),%rsi
  438bb6:	48 89 85 68 f0 ff ff 	mov    %rax,-0xf98(%rbp)
  438bbd:	e8 94 d8 00 00       	callq  446456 <encryptArrayForLibCall>
  438bc2:	48 8b 85 10 fe ff ff 	mov    -0x1f0(%rbp),%rax
  438bc9:	48 83 c0 10          	add    $0x10,%rax
  438bcd:	48 89 c7             	mov    %rax,%rdi
  438bd0:	e8 73 d5 00 00       	callq  446148 <getDecryptedValueQWord>
  438bd5:	48 89 85 60 f0 ff ff 	mov    %rax,-0xfa0(%rbp)
  438bdc:	e8 75 cd 00 00       	callq  445956 <writeback_cache>
  438be1:	48 8b bd 60 f0 ff ff 	mov    -0xfa0(%rbp),%rdi
  438be8:	e8 f3 84 fc ff       	callq  4010e0 <free@plt>
  438bed:	48 8b 85 10 fe ff ff 	mov    -0x1f0(%rbp),%rax
  438bf4:	48 89 c7             	mov    %rax,%rdi
  438bf7:	be 01 00 00 00       	mov    $0x1,%esi
  438bfc:	e8 fd cf 00 00       	callq  445bfe <setEncryptedValueDWord>
  438c01:	31 f6                	xor    %esi,%esi
  438c03:	48 8b bd 10 fe ff ff 	mov    -0x1f0(%rbp),%rdi
  438c0a:	48 83 c7 08          	add    $0x8,%rdi
  438c0e:	48 89 85 58 f0 ff ff 	mov    %rax,-0xfa8(%rbp)
  438c15:	e8 e2 d0 00 00       	callq  445cfc <setEncryptedValueQWord>
  438c1a:	31 c9                	xor    %ecx,%ecx
  438c1c:	89 ce                	mov    %ecx,%esi
  438c1e:	48 8b bd 10 fe ff ff 	mov    -0x1f0(%rbp),%rdi
  438c25:	48 83 c7 10          	add    $0x10,%rdi
  438c29:	48 89 85 50 f0 ff ff 	mov    %rax,-0xfb0(%rbp)
  438c30:	e8 c7 d0 00 00       	callq  445cfc <setEncryptedValueQWord>
  438c35:	48 89 85 48 f0 ff ff 	mov    %rax,-0xfb8(%rbp)
  438c3c:	8b 85 e4 fc ff ff    	mov    -0x31c(%rbp),%eax
  438c42:	89 85 0c fd ff ff    	mov    %eax,-0x2f4(%rbp)
  438c48:	8b 85 0c fd ff ff    	mov    -0x2f4(%rbp),%eax
  438c4e:	89 85 44 f0 ff ff    	mov    %eax,-0xfbc(%rbp)
  438c54:	e8 fd cc 00 00       	callq  445956 <writeback_cache>
  438c59:	e8 f8 cc 00 00       	callq  445956 <writeback_cache>
  438c5e:	8b 85 44 f0 ff ff    	mov    -0xfbc(%rbp),%eax
  438c64:	89 85 fc f6 ff ff    	mov    %eax,-0x904(%rbp)
  438c6a:	83 f8 00             	cmp    $0x0,%eax
  438c6d:	74 16                	je     438c85 <mbedtls_rsa_complete+0x2a15>
  438c6f:	8b 85 fc f6 ff ff    	mov    -0x904(%rbp),%eax
  438c75:	05 80 bf ff ff       	add    $0xffffbf80,%eax
  438c7a:	89 85 0c f7 ff ff    	mov    %eax,-0x8f4(%rbp)
  438c80:	e9 f0 05 00 00       	jmpq   439275 <mbedtls_rsa_complete+0x3005>
  438c85:	eb 00                	jmp    438c87 <mbedtls_rsa_complete+0x2a17>
  438c87:	eb 00                	jmp    438c89 <mbedtls_rsa_complete+0x2a19>
  438c89:	83 bd d4 f6 ff ff 00 	cmpl   $0x0,-0x92c(%rbp)
  438c90:	0f 84 c2 05 00 00    	je     439258 <mbedtls_rsa_complete+0x2fe8>
  438c96:	48 8b 85 00 f7 ff ff 	mov    -0x900(%rbp),%rax
  438c9d:	48 83 c0 58          	add    $0x58,%rax
  438ca1:	48 8b 8d 00 f7 ff ff 	mov    -0x900(%rbp),%rcx
  438ca8:	48 83 c1 70          	add    $0x70,%rcx
  438cac:	48 8b 95 00 f7 ff ff 	mov    -0x900(%rbp),%rdx
  438cb3:	48 83 c2 40          	add    $0x40,%rdx
  438cb7:	48 8b b5 00 f7 ff ff 	mov    -0x900(%rbp),%rsi
  438cbe:	48 81 c6 88 00 00 00 	add    $0x88,%rsi
  438cc5:	48 8b bd 00 f7 ff ff 	mov    -0x900(%rbp),%rdi
  438ccc:	48 81 c7 a0 00 00 00 	add    $0xa0,%rdi
  438cd3:	4c 8b 85 00 f7 ff ff 	mov    -0x900(%rbp),%r8
  438cda:	49 81 c0 b8 00 00 00 	add    $0xb8,%r8
  438ce1:	48 89 85 38 f0 ff ff 	mov    %rax,-0xfc8(%rbp)
  438ce8:	48 89 8d 30 f0 ff ff 	mov    %rcx,-0xfd0(%rbp)
  438cef:	48 89 95 28 f0 ff ff 	mov    %rdx,-0xfd8(%rbp)
  438cf6:	48 89 b5 20 f0 ff ff 	mov    %rsi,-0xfe0(%rbp)
  438cfd:	48 89 bd 18 f0 ff ff 	mov    %rdi,-0xfe8(%rbp)
  438d04:	4c 89 85 10 f0 ff ff 	mov    %r8,-0xff0(%rbp)
  438d0b:	e8 46 cc 00 00       	callq  445956 <writeback_cache>
  438d10:	48 8b 85 38 f0 ff ff 	mov    -0xfc8(%rbp),%rax
  438d17:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  438d1e:	48 8b 85 30 f0 ff ff 	mov    -0xfd0(%rbp),%rax
  438d25:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
  438d2c:	48 8b 85 28 f0 ff ff 	mov    -0xfd8(%rbp),%rax
  438d33:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
  438d3a:	48 8b 85 20 f0 ff ff 	mov    -0xfe0(%rbp),%rax
  438d41:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
  438d48:	48 8b 85 18 f0 ff ff 	mov    -0xfe8(%rbp),%rax
  438d4f:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
  438d56:	48 8b 85 10 f0 ff ff 	mov    -0xff0(%rbp),%rax
  438d5d:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
  438d64:	c7 85 1c ff ff ff 00 	movl   $0x0,-0xe4(%rbp)
  438d6b:	00 00 00 
  438d6e:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
  438d75:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
  438d7c:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
  438d83:	48 89 c7             	mov    %rax,%rdi
  438d86:	be 01 00 00 00       	mov    $0x1,%esi
  438d8b:	e8 6e ce 00 00       	callq  445bfe <setEncryptedValueDWord>
  438d90:	31 f6                	xor    %esi,%esi
  438d92:	48 8b 8d 50 ff ff ff 	mov    -0xb0(%rbp),%rcx
  438d99:	48 83 c1 08          	add    $0x8,%rcx
  438d9d:	48 89 cf             	mov    %rcx,%rdi
  438da0:	48 89 85 08 f0 ff ff 	mov    %rax,-0xff8(%rbp)
  438da7:	e8 50 cf 00 00       	callq  445cfc <setEncryptedValueQWord>
  438dac:	45 31 c9             	xor    %r9d,%r9d
  438daf:	44 89 ce             	mov    %r9d,%esi
  438db2:	48 8b 8d 50 ff ff ff 	mov    -0xb0(%rbp),%rcx
  438db9:	48 83 c1 10          	add    $0x10,%rcx
  438dbd:	48 89 cf             	mov    %rcx,%rdi
  438dc0:	48 89 85 00 f0 ff ff 	mov    %rax,-0x1000(%rbp)
  438dc7:	e8 30 cf 00 00       	callq  445cfc <setEncryptedValueQWord>
  438dcc:	48 83 bd 30 ff ff ff 	cmpq   $0x0,-0xd0(%rbp)
  438dd3:	00 
  438dd4:	48 89 85 f8 ef ff ff 	mov    %rax,-0x1008(%rbp)
  438ddb:	0f 84 3b 01 00 00    	je     438f1c <mbedtls_rsa_complete+0x2cac>
  438de1:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  438de8:	48 89 85 f0 ef ff ff 	mov    %rax,-0x1010(%rbp)
  438def:	e8 62 cb 00 00       	callq  445956 <writeback_cache>
  438df4:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
  438dfb:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  438dff:	48 8b 85 f0 ef ff ff 	mov    -0x1010(%rbp),%rax
  438e06:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  438e0a:	48 c7 45 a8 01 00 00 	movq   $0x1,-0x58(%rbp)
  438e11:	00 
  438e12:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
  438e17:	7d 11                	jge    438e2a <mbedtls_rsa_complete+0x2bba>
  438e19:	31 c0                	xor    %eax,%eax
  438e1b:	89 c1                	mov    %eax,%ecx
  438e1d:	48 2b 4d a8          	sub    -0x58(%rbp),%rcx
  438e21:	48 89 8d e8 ef ff ff 	mov    %rcx,-0x1018(%rbp)
  438e28:	eb 0b                	jmp    438e35 <mbedtls_rsa_complete+0x2bc5>
  438e2a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  438e2e:	48 89 85 e8 ef ff ff 	mov    %rax,-0x1018(%rbp)
  438e35:	48 8b 85 e8 ef ff ff 	mov    -0x1018(%rbp),%rax
  438e3c:	48 8d 8d 10 f7 ff ff 	lea    -0x8f0(%rbp),%rcx
  438e43:	48 89 cf             	mov    %rcx,%rdi
  438e46:	48 89 c6             	mov    %rax,%rsi
  438e49:	e8 ae ce 00 00       	callq  445cfc <setEncryptedValueQWord>
  438e4e:	48 8d 4d 80          	lea    -0x80(%rbp),%rcx
  438e52:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
  438e56:	48 83 fe 00          	cmp    $0x0,%rsi
  438e5a:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  438e5f:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  438e65:	44 0f 4c c2          	cmovl  %edx,%r8d
  438e69:	48 89 cf             	mov    %rcx,%rdi
  438e6c:	44 89 c6             	mov    %r8d,%esi
  438e6f:	48 89 85 e0 ef ff ff 	mov    %rax,-0x1020(%rbp)
  438e76:	e8 83 cd 00 00       	callq  445bfe <setEncryptedValueDWord>
  438e7b:	ba 01 00 00 00       	mov    $0x1,%edx
  438e80:	89 d6                	mov    %edx,%esi
  438e82:	48 8d 4d 80          	lea    -0x80(%rbp),%rcx
  438e86:	48 83 c1 08          	add    $0x8,%rcx
  438e8a:	48 89 cf             	mov    %rcx,%rdi
  438e8d:	48 89 85 d8 ef ff ff 	mov    %rax,-0x1028(%rbp)
  438e94:	e8 63 ce 00 00       	callq  445cfc <setEncryptedValueQWord>
  438e99:	48 8d b5 10 f7 ff ff 	lea    -0x8f0(%rbp),%rsi
  438ea0:	48 8d 4d 80          	lea    -0x80(%rbp),%rcx
  438ea4:	48 83 c1 10          	add    $0x10,%rcx
  438ea8:	48 89 cf             	mov    %rcx,%rdi
  438eab:	48 89 85 d0 ef ff ff 	mov    %rax,-0x1030(%rbp)
  438eb2:	e8 45 ce 00 00       	callq  445cfc <setEncryptedValueQWord>
  438eb7:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
  438ebb:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
  438ebf:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
  438ec3:	48 89 85 c8 ef ff ff 	mov    %rax,-0x1038(%rbp)
  438eca:	e8 61 2a fe ff       	callq  41b930 <mbedtls_mpi_sub_mpi>
  438ecf:	89 85 c4 ef ff ff    	mov    %eax,-0x103c(%rbp)
  438ed5:	e8 7c ca 00 00       	callq  445956 <writeback_cache>
  438eda:	8b 85 c4 ef ff ff    	mov    -0x103c(%rbp),%eax
  438ee0:	89 85 1c ff ff ff    	mov    %eax,-0xe4(%rbp)
  438ee6:	83 f8 00             	cmp    $0x0,%eax
  438ee9:	74 05                	je     438ef0 <mbedtls_rsa_complete+0x2c80>
  438eeb:	e9 a4 01 00 00       	jmpq   439094 <mbedtls_rsa_complete+0x2e24>
  438ef0:	48 8b bd 30 ff ff ff 	mov    -0xd0(%rbp),%rdi
  438ef7:	48 8b b5 38 ff ff ff 	mov    -0xc8(%rbp),%rsi
  438efe:	48 8d 95 f0 fe ff ff 	lea    -0x110(%rbp),%rdx
  438f05:	e8 86 8a fe ff       	callq  421990 <mbedtls_mpi_mod_mpi>
  438f0a:	89 85 1c ff ff ff    	mov    %eax,-0xe4(%rbp)
  438f10:	83 f8 00             	cmp    $0x0,%eax
  438f13:	74 05                	je     438f1a <mbedtls_rsa_complete+0x2caa>
  438f15:	e9 7a 01 00 00       	jmpq   439094 <mbedtls_rsa_complete+0x2e24>
  438f1a:	eb 00                	jmp    438f1c <mbedtls_rsa_complete+0x2cac>
  438f1c:	48 83 bd 28 ff ff ff 	cmpq   $0x0,-0xd8(%rbp)
  438f23:	00 
  438f24:	0f 84 35 01 00 00    	je     43905f <mbedtls_rsa_complete+0x2def>
  438f2a:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
  438f31:	48 89 85 b8 ef ff ff 	mov    %rax,-0x1048(%rbp)
  438f38:	e8 19 ca 00 00       	callq  445956 <writeback_cache>
  438f3d:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
  438f44:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  438f48:	48 8b 85 b8 ef ff ff 	mov    -0x1048(%rbp),%rax
  438f4f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  438f53:	48 c7 45 e8 01 00 00 	movq   $0x1,-0x18(%rbp)
  438f5a:	00 
  438f5b:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  438f60:	7d 11                	jge    438f73 <mbedtls_rsa_complete+0x2d03>
  438f62:	31 c0                	xor    %eax,%eax
  438f64:	89 c1                	mov    %eax,%ecx
  438f66:	48 2b 4d e8          	sub    -0x18(%rbp),%rcx
  438f6a:	48 89 8d b0 ef ff ff 	mov    %rcx,-0x1050(%rbp)
  438f71:	eb 0b                	jmp    438f7e <mbedtls_rsa_complete+0x2d0e>
  438f73:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  438f77:	48 89 85 b0 ef ff ff 	mov    %rax,-0x1050(%rbp)
  438f7e:	48 8b 85 b0 ef ff ff 	mov    -0x1050(%rbp),%rax
  438f85:	48 8d 8d 10 f7 ff ff 	lea    -0x8f0(%rbp),%rcx
  438f8c:	48 89 cf             	mov    %rcx,%rdi
  438f8f:	48 89 c6             	mov    %rax,%rsi
  438f92:	e8 65 cd 00 00       	callq  445cfc <setEncryptedValueQWord>
  438f97:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
  438f9b:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  438f9f:	48 83 fe 00          	cmp    $0x0,%rsi
  438fa3:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  438fa8:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  438fae:	44 0f 4c c2          	cmovl  %edx,%r8d
  438fb2:	48 89 cf             	mov    %rcx,%rdi
  438fb5:	44 89 c6             	mov    %r8d,%esi
  438fb8:	48 89 85 a8 ef ff ff 	mov    %rax,-0x1058(%rbp)
  438fbf:	e8 3a cc 00 00       	callq  445bfe <setEncryptedValueDWord>
  438fc4:	ba 01 00 00 00       	mov    $0x1,%edx
  438fc9:	89 d6                	mov    %edx,%esi
  438fcb:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
  438fcf:	48 83 c1 08          	add    $0x8,%rcx
  438fd3:	48 89 cf             	mov    %rcx,%rdi
  438fd6:	48 89 85 a0 ef ff ff 	mov    %rax,-0x1060(%rbp)
  438fdd:	e8 1a cd 00 00       	callq  445cfc <setEncryptedValueQWord>
  438fe2:	48 8d b5 10 f7 ff ff 	lea    -0x8f0(%rbp),%rsi
  438fe9:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
  438fed:	48 83 c1 10          	add    $0x10,%rcx
  438ff1:	48 89 cf             	mov    %rcx,%rdi
  438ff4:	48 89 85 98 ef ff ff 	mov    %rax,-0x1068(%rbp)
  438ffb:	e8 fc cc 00 00       	callq  445cfc <setEncryptedValueQWord>
  439000:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  439004:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  439008:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
  43900c:	48 89 85 90 ef ff ff 	mov    %rax,-0x1070(%rbp)
  439013:	e8 18 29 fe ff       	callq  41b930 <mbedtls_mpi_sub_mpi>
  439018:	89 85 8c ef ff ff    	mov    %eax,-0x1074(%rbp)
  43901e:	e8 33 c9 00 00       	callq  445956 <writeback_cache>
  439023:	8b 85 8c ef ff ff    	mov    -0x1074(%rbp),%eax
  439029:	89 85 1c ff ff ff    	mov    %eax,-0xe4(%rbp)
  43902f:	83 f8 00             	cmp    $0x0,%eax
  439032:	74 02                	je     439036 <mbedtls_rsa_complete+0x2dc6>
  439034:	eb 5e                	jmp    439094 <mbedtls_rsa_complete+0x2e24>
  439036:	48 8b bd 28 ff ff ff 	mov    -0xd8(%rbp),%rdi
  43903d:	48 8b b5 38 ff ff ff 	mov    -0xc8(%rbp),%rsi
  439044:	48 8d 95 f0 fe ff ff 	lea    -0x110(%rbp),%rdx
  43904b:	e8 40 89 fe ff       	callq  421990 <mbedtls_mpi_mod_mpi>
  439050:	89 85 1c ff ff ff    	mov    %eax,-0xe4(%rbp)
  439056:	83 f8 00             	cmp    $0x0,%eax
  439059:	74 02                	je     43905d <mbedtls_rsa_complete+0x2ded>
  43905b:	eb 37                	jmp    439094 <mbedtls_rsa_complete+0x2e24>
  43905d:	eb 00                	jmp    43905f <mbedtls_rsa_complete+0x2def>
  43905f:	48 83 bd 20 ff ff ff 	cmpq   $0x0,-0xe0(%rbp)
  439066:	00 
  439067:	74 29                	je     439092 <mbedtls_rsa_complete+0x2e22>
  439069:	48 8b bd 20 ff ff ff 	mov    -0xe0(%rbp),%rdi
  439070:	48 8b b5 40 ff ff ff 	mov    -0xc0(%rbp),%rsi
  439077:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
  43907e:	e8 ed b7 fe ff       	callq  424870 <mbedtls_mpi_inv_mod>
  439083:	89 85 1c ff ff ff    	mov    %eax,-0xe4(%rbp)
  439089:	83 f8 00             	cmp    $0x0,%eax
  43908c:	74 02                	je     439090 <mbedtls_rsa_complete+0x2e20>
  43908e:	eb 04                	jmp    439094 <mbedtls_rsa_complete+0x2e24>
  439090:	eb 00                	jmp    439092 <mbedtls_rsa_complete+0x2e22>
  439092:	eb 00                	jmp    439094 <mbedtls_rsa_complete+0x2e24>
  439094:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
  43909b:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
  4390a2:	48 83 bd 58 ff ff ff 	cmpq   $0x0,-0xa8(%rbp)
  4390a9:	00 
  4390aa:	75 05                	jne    4390b1 <mbedtls_rsa_complete+0x2e41>
  4390ac:	e9 6c 01 00 00       	jmpq   43921d <mbedtls_rsa_complete+0x2fad>
  4390b1:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
  4390b8:	48 83 c0 10          	add    $0x10,%rax
  4390bc:	48 89 c7             	mov    %rax,%rdi
  4390bf:	e8 84 d0 00 00       	callq  446148 <getDecryptedValueQWord>
  4390c4:	48 83 f8 00          	cmp    $0x0,%rax
  4390c8:	0f 84 00 01 00 00    	je     4391ce <mbedtls_rsa_complete+0x2f5e>
  4390ce:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
  4390d5:	48 83 c0 10          	add    $0x10,%rax
  4390d9:	48 89 c7             	mov    %rax,%rdi
  4390dc:	e8 67 d0 00 00       	callq  446148 <getDecryptedValueQWord>
  4390e1:	48 8b bd 58 ff ff ff 	mov    -0xa8(%rbp),%rdi
  4390e8:	48 83 c7 08          	add    $0x8,%rdi
  4390ec:	48 89 85 80 ef ff ff 	mov    %rax,-0x1080(%rbp)
  4390f3:	e8 50 d0 00 00       	callq  446148 <getDecryptedValueQWord>
  4390f8:	48 8b bd 80 ef ff ff 	mov    -0x1080(%rbp),%rdi
  4390ff:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
  439106:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
  43910d:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  439114:	48 8b 8d 60 ff ff ff 	mov    -0xa0(%rbp),%rcx
  43911b:	48 c1 e1 03          	shl    $0x3,%rcx
  43911f:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  439126:	48 89 8d 70 ff ff ff 	mov    %rcx,-0x90(%rbp)
  43912d:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  439134:	00 
  439135:	48 8b 8d 78 ff ff ff 	mov    -0x88(%rbp),%rcx
  43913c:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
  439143:	48 89 85 78 ef ff ff 	mov    %rax,-0x1088(%rbp)
  43914a:	48 89 8d 70 ef ff ff 	mov    %rcx,-0x1090(%rbp)
  439151:	48 89 95 68 ef ff ff 	mov    %rdx,-0x1098(%rbp)
  439158:	e8 f9 c7 00 00       	callq  445956 <writeback_cache>
  43915d:	48 8b bd 70 ef ff ff 	mov    -0x1090(%rbp),%rdi
  439164:	48 8b b5 68 ef ff ff 	mov    -0x1098(%rbp),%rsi
  43916b:	e8 75 d5 00 00       	callq  4466e5 <decryptArrayForLibCall>
  439170:	31 f6                	xor    %esi,%esi
  439172:	48 8b bd 70 ef ff ff 	mov    -0x1090(%rbp),%rdi
  439179:	48 8b 95 68 ef ff ff 	mov    -0x1098(%rbp),%rdx
  439180:	48 8b 85 78 ef ff ff 	mov    -0x1088(%rbp),%rax
  439187:	ff d0                	callq  *%rax
  439189:	48 8b bd 70 ef ff ff 	mov    -0x1090(%rbp),%rdi
  439190:	48 8b b5 68 ef ff ff 	mov    -0x1098(%rbp),%rsi
  439197:	48 89 85 60 ef ff ff 	mov    %rax,-0x10a0(%rbp)
  43919e:	e8 b3 d2 00 00       	callq  446456 <encryptArrayForLibCall>
  4391a3:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
  4391aa:	48 83 c0 10          	add    $0x10,%rax
  4391ae:	48 89 c7             	mov    %rax,%rdi
  4391b1:	e8 92 cf 00 00       	callq  446148 <getDecryptedValueQWord>
  4391b6:	48 89 85 58 ef ff ff 	mov    %rax,-0x10a8(%rbp)
  4391bd:	e8 94 c7 00 00       	callq  445956 <writeback_cache>
  4391c2:	48 8b bd 58 ef ff ff 	mov    -0x10a8(%rbp),%rdi
  4391c9:	e8 12 7f fc ff       	callq  4010e0 <free@plt>
  4391ce:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
  4391d5:	48 89 c7             	mov    %rax,%rdi
  4391d8:	be 01 00 00 00       	mov    $0x1,%esi
  4391dd:	e8 1c ca 00 00       	callq  445bfe <setEncryptedValueDWord>
  4391e2:	31 f6                	xor    %esi,%esi
  4391e4:	48 8b bd 58 ff ff ff 	mov    -0xa8(%rbp),%rdi
  4391eb:	48 83 c7 08          	add    $0x8,%rdi
  4391ef:	48 89 85 50 ef ff ff 	mov    %rax,-0x10b0(%rbp)
  4391f6:	e8 01 cb 00 00       	callq  445cfc <setEncryptedValueQWord>
  4391fb:	31 c9                	xor    %ecx,%ecx
  4391fd:	89 ce                	mov    %ecx,%esi
  4391ff:	48 8b bd 58 ff ff ff 	mov    -0xa8(%rbp),%rdi
  439206:	48 83 c7 10          	add    $0x10,%rdi
  43920a:	48 89 85 48 ef ff ff 	mov    %rax,-0x10b8(%rbp)
  439211:	e8 e6 ca 00 00       	callq  445cfc <setEncryptedValueQWord>
  439216:	48 89 85 40 ef ff ff 	mov    %rax,-0x10c0(%rbp)
  43921d:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax
  439223:	89 85 3c ef ff ff    	mov    %eax,-0x10c4(%rbp)
  439229:	e8 28 c7 00 00       	callq  445956 <writeback_cache>
  43922e:	8b 85 3c ef ff ff    	mov    -0x10c4(%rbp),%eax
  439234:	89 85 fc f6 ff ff    	mov    %eax,-0x904(%rbp)
  43923a:	83 bd fc f6 ff ff 00 	cmpl   $0x0,-0x904(%rbp)
  439241:	74 13                	je     439256 <mbedtls_rsa_complete+0x2fe6>
  439243:	8b 85 fc f6 ff ff    	mov    -0x904(%rbp),%eax
  439249:	05 80 bf ff ff       	add    $0xffffbf80,%eax
  43924e:	89 85 0c f7 ff ff    	mov    %eax,-0x8f4(%rbp)
  439254:	eb 1f                	jmp    439275 <mbedtls_rsa_complete+0x3005>
  439256:	eb 00                	jmp    439258 <mbedtls_rsa_complete+0x2fe8>
  439258:	48 8b bd 00 f7 ff ff 	mov    -0x900(%rbp),%rdi
  43925f:	8b b5 d4 f6 ff ff    	mov    -0x92c(%rbp),%esi
  439265:	ba 01 00 00 00       	mov    $0x1,%edx
  43926a:	e8 31 00 00 00       	callq  4392a0 <rsa_check_context>
  43926f:	89 85 0c f7 ff ff    	mov    %eax,-0x8f4(%rbp)
  439275:	8b 85 0c f7 ff ff    	mov    -0x8f4(%rbp),%eax
  43927b:	89 85 38 ef ff ff    	mov    %eax,-0x10c8(%rbp)
  439281:	e8 d0 c6 00 00       	callq  445956 <writeback_cache>
  439286:	8b 85 38 ef ff ff    	mov    -0x10c8(%rbp),%eax
  43928c:	48 81 c4 d0 10 00 00 	add    $0x10d0,%rsp
  439293:	5d                   	pop    %rbp
  439294:	c3                   	retq   
  439295:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  43929c:	00 00 00 00 

00000000004392a0 <rsa_check_context>:
  4392a0:	55                   	push   %rbp
  4392a1:	48 89 e5             	mov    %rsp,%rbp
  4392a4:	48 81 ec c0 03 00 00 	sub    $0x3c0,%rsp
  4392ab:	48 89 bd d8 fd ff ff 	mov    %rdi,-0x228(%rbp)
  4392b2:	89 b5 d4 fd ff ff    	mov    %esi,-0x22c(%rbp)
  4392b8:	89 95 d0 fd ff ff    	mov    %edx,-0x230(%rbp)
  4392be:	48 8b bd d8 fd ff ff 	mov    -0x228(%rbp),%rdi
  4392c5:	48 83 c7 08          	add    $0x8,%rdi
  4392c9:	e8 7a ce 00 00       	callq  446148 <getDecryptedValueQWord>
  4392ce:	48 8b bd d8 fd ff ff 	mov    -0x228(%rbp),%rdi
  4392d5:	48 83 c7 10          	add    $0x10,%rdi
  4392d9:	48 89 bd e8 fd ff ff 	mov    %rdi,-0x218(%rbp)
  4392e0:	48 8b bd e8 fd ff ff 	mov    -0x218(%rbp),%rdi
  4392e7:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
  4392ee:	e8 dd 1e fe ff       	callq  41b1d0 <mbedtls_mpi_bitlen>
  4392f3:	48 83 c0 07          	add    $0x7,%rax
  4392f7:	48 c1 e8 03          	shr    $0x3,%rax
  4392fb:	48 8b bd c8 fd ff ff 	mov    -0x238(%rbp),%rdi
  439302:	48 39 c7             	cmp    %rax,%rdi
  439305:	75 1b                	jne    439322 <rsa_check_context+0x82>
  439307:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
  43930e:	48 83 c0 08          	add    $0x8,%rax
  439312:	48 89 c7             	mov    %rax,%rdi
  439315:	e8 2e ce 00 00       	callq  446148 <getDecryptedValueQWord>
  43931a:	48 3d 00 04 00 00    	cmp    $0x400,%rax
  439320:	76 0f                	jbe    439331 <rsa_check_context+0x91>
  439322:	c7 85 e4 fd ff ff 80 	movl   $0xffffbf80,-0x21c(%rbp)
  439329:	bf ff ff 
  43932c:	e9 e1 09 00 00       	jmpq   439d12 <rsa_check_context+0xa72>
  439331:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
  439338:	48 83 c0 10          	add    $0x10,%rax
  43933c:	48 89 85 c0 fd ff ff 	mov    %rax,-0x240(%rbp)
  439343:	e8 0e c6 00 00       	callq  445956 <writeback_cache>
  439348:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
  43934f:	48 89 85 40 fe ff ff 	mov    %rax,-0x1c0(%rbp)
  439356:	48 c7 85 38 fe ff ff 	movq   $0x0,-0x1c8(%rbp)
  43935d:	00 00 00 00 
  439361:	48 83 bd 38 fe ff ff 	cmpq   $0x0,-0x1c8(%rbp)
  439368:	00 
  439369:	7d 14                	jge    43937f <rsa_check_context+0xdf>
  43936b:	31 c0                	xor    %eax,%eax
  43936d:	89 c1                	mov    %eax,%ecx
  43936f:	48 2b 8d 38 fe ff ff 	sub    -0x1c8(%rbp),%rcx
  439376:	48 89 8d b8 fd ff ff 	mov    %rcx,-0x248(%rbp)
  43937d:	eb 0e                	jmp    43938d <rsa_check_context+0xed>
  43937f:	48 8b 85 38 fe ff ff 	mov    -0x1c8(%rbp),%rax
  439386:	48 89 85 b8 fd ff ff 	mov    %rax,-0x248(%rbp)
  43938d:	48 8b 85 b8 fd ff ff 	mov    -0x248(%rbp),%rax
  439394:	48 8d 8d f0 fd ff ff 	lea    -0x210(%rbp),%rcx
  43939b:	48 89 cf             	mov    %rcx,%rdi
  43939e:	48 89 c6             	mov    %rax,%rsi
  4393a1:	e8 56 c9 00 00       	callq  445cfc <setEncryptedValueQWord>
  4393a6:	48 8d 8d 10 fe ff ff 	lea    -0x1f0(%rbp),%rcx
  4393ad:	48 8b b5 38 fe ff ff 	mov    -0x1c8(%rbp),%rsi
  4393b4:	48 83 fe 00          	cmp    $0x0,%rsi
  4393b8:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  4393bd:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  4393c3:	44 0f 4c c2          	cmovl  %edx,%r8d
  4393c7:	48 89 cf             	mov    %rcx,%rdi
  4393ca:	44 89 c6             	mov    %r8d,%esi
  4393cd:	48 89 85 b0 fd ff ff 	mov    %rax,-0x250(%rbp)
  4393d4:	e8 25 c8 00 00       	callq  445bfe <setEncryptedValueDWord>
  4393d9:	ba 01 00 00 00       	mov    $0x1,%edx
  4393de:	89 d6                	mov    %edx,%esi
  4393e0:	48 8d 8d 10 fe ff ff 	lea    -0x1f0(%rbp),%rcx
  4393e7:	48 83 c1 08          	add    $0x8,%rcx
  4393eb:	48 89 cf             	mov    %rcx,%rdi
  4393ee:	48 89 85 a8 fd ff ff 	mov    %rax,-0x258(%rbp)
  4393f5:	e8 02 c9 00 00       	callq  445cfc <setEncryptedValueQWord>
  4393fa:	48 8d b5 f0 fd ff ff 	lea    -0x210(%rbp),%rsi
  439401:	48 8d 8d 10 fe ff ff 	lea    -0x1f0(%rbp),%rcx
  439408:	48 83 c1 10          	add    $0x10,%rcx
  43940c:	48 89 cf             	mov    %rcx,%rdi
  43940f:	48 89 85 a0 fd ff ff 	mov    %rax,-0x260(%rbp)
  439416:	e8 e1 c8 00 00       	callq  445cfc <setEncryptedValueQWord>
  43941b:	48 8b bd 40 fe ff ff 	mov    -0x1c0(%rbp),%rdi
  439422:	48 8d b5 10 fe ff ff 	lea    -0x1f0(%rbp),%rsi
  439429:	48 89 85 98 fd ff ff 	mov    %rax,-0x268(%rbp)
  439430:	e8 1b 56 fe ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  439435:	89 85 94 fd ff ff    	mov    %eax,-0x26c(%rbp)
  43943b:	e8 16 c5 00 00       	callq  445956 <writeback_cache>
  439440:	8b 85 94 fd ff ff    	mov    -0x26c(%rbp),%eax
  439446:	83 f8 00             	cmp    $0x0,%eax
  439449:	0f 8e 9e 00 00 00    	jle    4394ed <rsa_check_context+0x24d>
  43944f:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
  439456:	48 83 c0 10          	add    $0x10,%rax
  43945a:	48 89 85 50 fe ff ff 	mov    %rax,-0x1b0(%rbp)
  439461:	48 c7 85 48 fe ff ff 	movq   $0x0,-0x1b8(%rbp)
  439468:	00 00 00 00 
  43946c:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
  439473:	48 83 c0 08          	add    $0x8,%rax
  439477:	48 89 c7             	mov    %rax,%rdi
  43947a:	e8 c9 cc 00 00       	callq  446148 <getDecryptedValueQWord>
  43947f:	48 c1 e0 06          	shl    $0x6,%rax
  439483:	48 3b 85 48 fe ff ff 	cmp    -0x1b8(%rbp),%rax
  43948a:	77 0c                	ja     439498 <rsa_check_context+0x1f8>
  43948c:	c7 85 5c fe ff ff 00 	movl   $0x0,-0x1a4(%rbp)
  439493:	00 00 00 
  439496:	eb 4a                	jmp    4394e2 <rsa_check_context+0x242>
  439498:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
  43949f:	48 83 c0 10          	add    $0x10,%rax
  4394a3:	48 89 c7             	mov    %rax,%rdi
  4394a6:	e8 9d cc 00 00       	callq  446148 <getDecryptedValueQWord>
  4394ab:	48 8b bd 48 fe ff ff 	mov    -0x1b8(%rbp),%rdi
  4394b2:	48 c1 ef 06          	shr    $0x6,%rdi
  4394b6:	48 c1 e7 03          	shl    $0x3,%rdi
  4394ba:	48 01 f8             	add    %rdi,%rax
  4394bd:	48 89 c7             	mov    %rax,%rdi
  4394c0:	e8 83 cc 00 00       	callq  446148 <getDecryptedValueQWord>
  4394c5:	48 8b bd 48 fe ff ff 	mov    -0x1b8(%rbp),%rdi
  4394cc:	48 83 e7 3f          	and    $0x3f,%rdi
  4394d0:	48 89 f9             	mov    %rdi,%rcx
  4394d3:	48 d3 e8             	shr    %cl,%rax
  4394d6:	48 83 e0 01          	and    $0x1,%rax
  4394da:	89 c2                	mov    %eax,%edx
  4394dc:	89 95 5c fe ff ff    	mov    %edx,-0x1a4(%rbp)
  4394e2:	8b 85 5c fe ff ff    	mov    -0x1a4(%rbp),%eax
  4394e8:	83 f8 00             	cmp    $0x0,%eax
  4394eb:	75 0f                	jne    4394fc <rsa_check_context+0x25c>
  4394ed:	c7 85 e4 fd ff ff 80 	movl   $0xffffbf80,-0x21c(%rbp)
  4394f4:	bf ff ff 
  4394f7:	e9 16 08 00 00       	jmpq   439d12 <rsa_check_context+0xa72>
  4394fc:	83 bd d4 fd ff ff 00 	cmpl   $0x0,-0x22c(%rbp)
  439503:	0f 84 8b 03 00 00    	je     439894 <rsa_check_context+0x5f4>
  439509:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
  439510:	48 83 c0 58          	add    $0x58,%rax
  439514:	48 89 85 88 fd ff ff 	mov    %rax,-0x278(%rbp)
  43951b:	e8 36 c4 00 00       	callq  445956 <writeback_cache>
  439520:	48 8b 85 88 fd ff ff 	mov    -0x278(%rbp),%rax
  439527:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
  43952e:	48 c7 85 c8 fe ff ff 	movq   $0x0,-0x138(%rbp)
  439535:	00 00 00 00 
  439539:	48 83 bd c8 fe ff ff 	cmpq   $0x0,-0x138(%rbp)
  439540:	00 
  439541:	7d 14                	jge    439557 <rsa_check_context+0x2b7>
  439543:	31 c0                	xor    %eax,%eax
  439545:	89 c1                	mov    %eax,%ecx
  439547:	48 2b 8d c8 fe ff ff 	sub    -0x138(%rbp),%rcx
  43954e:	48 89 8d 80 fd ff ff 	mov    %rcx,-0x280(%rbp)
  439555:	eb 0e                	jmp    439565 <rsa_check_context+0x2c5>
  439557:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  43955e:	48 89 85 80 fd ff ff 	mov    %rax,-0x280(%rbp)
  439565:	48 8b 85 80 fd ff ff 	mov    -0x280(%rbp),%rax
  43956c:	48 8d 8d f0 fd ff ff 	lea    -0x210(%rbp),%rcx
  439573:	48 89 cf             	mov    %rcx,%rdi
  439576:	48 89 c6             	mov    %rax,%rsi
  439579:	e8 7e c7 00 00       	callq  445cfc <setEncryptedValueQWord>
  43957e:	48 8d 8d a0 fe ff ff 	lea    -0x160(%rbp),%rcx
  439585:	48 8b b5 c8 fe ff ff 	mov    -0x138(%rbp),%rsi
  43958c:	48 83 fe 00          	cmp    $0x0,%rsi
  439590:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  439595:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  43959b:	44 0f 4c c2          	cmovl  %edx,%r8d
  43959f:	48 89 cf             	mov    %rcx,%rdi
  4395a2:	44 89 c6             	mov    %r8d,%esi
  4395a5:	48 89 85 78 fd ff ff 	mov    %rax,-0x288(%rbp)
  4395ac:	e8 4d c6 00 00       	callq  445bfe <setEncryptedValueDWord>
  4395b1:	ba 01 00 00 00       	mov    $0x1,%edx
  4395b6:	89 d6                	mov    %edx,%esi
  4395b8:	48 8d 8d a0 fe ff ff 	lea    -0x160(%rbp),%rcx
  4395bf:	48 83 c1 08          	add    $0x8,%rcx
  4395c3:	48 89 cf             	mov    %rcx,%rdi
  4395c6:	48 89 85 70 fd ff ff 	mov    %rax,-0x290(%rbp)
  4395cd:	e8 2a c7 00 00       	callq  445cfc <setEncryptedValueQWord>
  4395d2:	48 8d b5 f0 fd ff ff 	lea    -0x210(%rbp),%rsi
  4395d9:	48 8d 8d a0 fe ff ff 	lea    -0x160(%rbp),%rcx
  4395e0:	48 83 c1 10          	add    $0x10,%rcx
  4395e4:	48 89 cf             	mov    %rcx,%rdi
  4395e7:	48 89 85 68 fd ff ff 	mov    %rax,-0x298(%rbp)
  4395ee:	e8 09 c7 00 00       	callq  445cfc <setEncryptedValueQWord>
  4395f3:	48 8b bd d0 fe ff ff 	mov    -0x130(%rbp),%rdi
  4395fa:	48 8d b5 a0 fe ff ff 	lea    -0x160(%rbp),%rsi
  439601:	48 89 85 60 fd ff ff 	mov    %rax,-0x2a0(%rbp)
  439608:	e8 43 54 fe ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  43960d:	89 85 5c fd ff ff    	mov    %eax,-0x2a4(%rbp)
  439613:	e8 3e c3 00 00       	callq  445956 <writeback_cache>
  439618:	8b 85 5c fd ff ff    	mov    -0x2a4(%rbp),%eax
  43961e:	83 f8 00             	cmp    $0x0,%eax
  439621:	0f 8e 5e 02 00 00    	jle    439885 <rsa_check_context+0x5e5>
  439627:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
  43962e:	48 83 c0 58          	add    $0x58,%rax
  439632:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
  439639:	48 c7 85 d8 fe ff ff 	movq   $0x0,-0x128(%rbp)
  439640:	00 00 00 00 
  439644:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
  43964b:	48 83 c0 08          	add    $0x8,%rax
  43964f:	48 89 c7             	mov    %rax,%rdi
  439652:	e8 f1 ca 00 00       	callq  446148 <getDecryptedValueQWord>
  439657:	48 c1 e0 06          	shl    $0x6,%rax
  43965b:	48 3b 85 d8 fe ff ff 	cmp    -0x128(%rbp),%rax
  439662:	77 0c                	ja     439670 <rsa_check_context+0x3d0>
  439664:	c7 85 ec fe ff ff 00 	movl   $0x0,-0x114(%rbp)
  43966b:	00 00 00 
  43966e:	eb 4a                	jmp    4396ba <rsa_check_context+0x41a>
  439670:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
  439677:	48 83 c0 10          	add    $0x10,%rax
  43967b:	48 89 c7             	mov    %rax,%rdi
  43967e:	e8 c5 ca 00 00       	callq  446148 <getDecryptedValueQWord>
  439683:	48 8b bd d8 fe ff ff 	mov    -0x128(%rbp),%rdi
  43968a:	48 c1 ef 06          	shr    $0x6,%rdi
  43968e:	48 c1 e7 03          	shl    $0x3,%rdi
  439692:	48 01 f8             	add    %rdi,%rax
  439695:	48 89 c7             	mov    %rax,%rdi
  439698:	e8 ab ca 00 00       	callq  446148 <getDecryptedValueQWord>
  43969d:	48 8b bd d8 fe ff ff 	mov    -0x128(%rbp),%rdi
  4396a4:	48 83 e7 3f          	and    $0x3f,%rdi
  4396a8:	48 89 f9             	mov    %rdi,%rcx
  4396ab:	48 d3 e8             	shr    %cl,%rax
  4396ae:	48 83 e0 01          	and    $0x1,%rax
  4396b2:	89 c2                	mov    %eax,%edx
  4396b4:	89 95 ec fe ff ff    	mov    %edx,-0x114(%rbp)
  4396ba:	8b 85 ec fe ff ff    	mov    -0x114(%rbp),%eax
  4396c0:	83 f8 00             	cmp    $0x0,%eax
  4396c3:	0f 84 bc 01 00 00    	je     439885 <rsa_check_context+0x5e5>
  4396c9:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
  4396d0:	48 83 c0 70          	add    $0x70,%rax
  4396d4:	48 89 85 50 fd ff ff 	mov    %rax,-0x2b0(%rbp)
  4396db:	e8 76 c2 00 00       	callq  445956 <writeback_cache>
  4396e0:	48 8b 85 50 fd ff ff 	mov    -0x2b0(%rbp),%rax
  4396e7:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
  4396ee:	48 c7 85 58 ff ff ff 	movq   $0x0,-0xa8(%rbp)
  4396f5:	00 00 00 00 
  4396f9:	48 83 bd 58 ff ff ff 	cmpq   $0x0,-0xa8(%rbp)
  439700:	00 
  439701:	7d 14                	jge    439717 <rsa_check_context+0x477>
  439703:	31 c0                	xor    %eax,%eax
  439705:	89 c1                	mov    %eax,%ecx
  439707:	48 2b 8d 58 ff ff ff 	sub    -0xa8(%rbp),%rcx
  43970e:	48 89 8d 48 fd ff ff 	mov    %rcx,-0x2b8(%rbp)
  439715:	eb 0e                	jmp    439725 <rsa_check_context+0x485>
  439717:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
  43971e:	48 89 85 48 fd ff ff 	mov    %rax,-0x2b8(%rbp)
  439725:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
  43972c:	48 8d 8d f0 fd ff ff 	lea    -0x210(%rbp),%rcx
  439733:	48 89 cf             	mov    %rcx,%rdi
  439736:	48 89 c6             	mov    %rax,%rsi
  439739:	e8 be c5 00 00       	callq  445cfc <setEncryptedValueQWord>
  43973e:	48 8d 8d 30 ff ff ff 	lea    -0xd0(%rbp),%rcx
  439745:	48 8b b5 58 ff ff ff 	mov    -0xa8(%rbp),%rsi
  43974c:	48 83 fe 00          	cmp    $0x0,%rsi
  439750:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  439755:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  43975b:	44 0f 4c c2          	cmovl  %edx,%r8d
  43975f:	48 89 cf             	mov    %rcx,%rdi
  439762:	44 89 c6             	mov    %r8d,%esi
  439765:	48 89 85 40 fd ff ff 	mov    %rax,-0x2c0(%rbp)
  43976c:	e8 8d c4 00 00       	callq  445bfe <setEncryptedValueDWord>
  439771:	ba 01 00 00 00       	mov    $0x1,%edx
  439776:	89 d6                	mov    %edx,%esi
  439778:	48 8d 8d 30 ff ff ff 	lea    -0xd0(%rbp),%rcx
  43977f:	48 83 c1 08          	add    $0x8,%rcx
  439783:	48 89 cf             	mov    %rcx,%rdi
  439786:	48 89 85 38 fd ff ff 	mov    %rax,-0x2c8(%rbp)
  43978d:	e8 6a c5 00 00       	callq  445cfc <setEncryptedValueQWord>
  439792:	48 8d b5 f0 fd ff ff 	lea    -0x210(%rbp),%rsi
  439799:	48 8d 8d 30 ff ff ff 	lea    -0xd0(%rbp),%rcx
  4397a0:	48 83 c1 10          	add    $0x10,%rcx
  4397a4:	48 89 cf             	mov    %rcx,%rdi
  4397a7:	48 89 85 30 fd ff ff 	mov    %rax,-0x2d0(%rbp)
  4397ae:	e8 49 c5 00 00       	callq  445cfc <setEncryptedValueQWord>
  4397b3:	48 8b bd 60 ff ff ff 	mov    -0xa0(%rbp),%rdi
  4397ba:	48 8d b5 30 ff ff ff 	lea    -0xd0(%rbp),%rsi
  4397c1:	48 89 85 28 fd ff ff 	mov    %rax,-0x2d8(%rbp)
  4397c8:	e8 83 52 fe ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  4397cd:	89 85 24 fd ff ff    	mov    %eax,-0x2dc(%rbp)
  4397d3:	e8 7e c1 00 00       	callq  445956 <writeback_cache>
  4397d8:	8b 85 24 fd ff ff    	mov    -0x2dc(%rbp),%eax
  4397de:	83 f8 00             	cmp    $0x0,%eax
  4397e1:	0f 8e 9e 00 00 00    	jle    439885 <rsa_check_context+0x5e5>
  4397e7:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
  4397ee:	48 83 c0 70          	add    $0x70,%rax
  4397f2:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
  4397f9:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
  439800:	00 00 00 00 
  439804:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  43980b:	48 83 c0 08          	add    $0x8,%rax
  43980f:	48 89 c7             	mov    %rax,%rdi
  439812:	e8 31 c9 00 00       	callq  446148 <getDecryptedValueQWord>
  439817:	48 c1 e0 06          	shl    $0x6,%rax
  43981b:	48 3b 85 68 ff ff ff 	cmp    -0x98(%rbp),%rax
  439822:	77 0c                	ja     439830 <rsa_check_context+0x590>
  439824:	c7 85 7c ff ff ff 00 	movl   $0x0,-0x84(%rbp)
  43982b:	00 00 00 
  43982e:	eb 4a                	jmp    43987a <rsa_check_context+0x5da>
  439830:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  439837:	48 83 c0 10          	add    $0x10,%rax
  43983b:	48 89 c7             	mov    %rax,%rdi
  43983e:	e8 05 c9 00 00       	callq  446148 <getDecryptedValueQWord>
  439843:	48 8b bd 68 ff ff ff 	mov    -0x98(%rbp),%rdi
  43984a:	48 c1 ef 06          	shr    $0x6,%rdi
  43984e:	48 c1 e7 03          	shl    $0x3,%rdi
  439852:	48 01 f8             	add    %rdi,%rax
  439855:	48 89 c7             	mov    %rax,%rdi
  439858:	e8 eb c8 00 00       	callq  446148 <getDecryptedValueQWord>
  43985d:	48 8b bd 68 ff ff ff 	mov    -0x98(%rbp),%rdi
  439864:	48 83 e7 3f          	and    $0x3f,%rdi
  439868:	48 89 f9             	mov    %rdi,%rcx
  43986b:	48 d3 e8             	shr    %cl,%rax
  43986e:	48 83 e0 01          	and    $0x1,%rax
  439872:	89 c2                	mov    %eax,%edx
  439874:	89 95 7c ff ff ff    	mov    %edx,-0x84(%rbp)
  43987a:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
  439880:	83 f8 00             	cmp    $0x0,%eax
  439883:	75 0f                	jne    439894 <rsa_check_context+0x5f4>
  439885:	c7 85 e4 fd ff ff 80 	movl   $0xffffbf80,-0x21c(%rbp)
  43988c:	bf ff ff 
  43988f:	e9 7e 04 00 00       	jmpq   439d12 <rsa_check_context+0xa72>
  439894:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
  43989b:	48 83 c0 28          	add    $0x28,%rax
  43989f:	48 89 85 18 fd ff ff 	mov    %rax,-0x2e8(%rbp)
  4398a6:	e8 ab c0 00 00       	callq  445956 <writeback_cache>
  4398ab:	48 8b 85 18 fd ff ff 	mov    -0x2e8(%rbp),%rax
  4398b2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4398b6:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
  4398bd:	00 
  4398be:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  4398c3:	7d 11                	jge    4398d6 <rsa_check_context+0x636>
  4398c5:	31 c0                	xor    %eax,%eax
  4398c7:	89 c1                	mov    %eax,%ecx
  4398c9:	48 2b 4d f0          	sub    -0x10(%rbp),%rcx
  4398cd:	48 89 8d 10 fd ff ff 	mov    %rcx,-0x2f0(%rbp)
  4398d4:	eb 0b                	jmp    4398e1 <rsa_check_context+0x641>
  4398d6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4398da:	48 89 85 10 fd ff ff 	mov    %rax,-0x2f0(%rbp)
  4398e1:	48 8b 85 10 fd ff ff 	mov    -0x2f0(%rbp),%rax
  4398e8:	48 8d 8d f0 fd ff ff 	lea    -0x210(%rbp),%rcx
  4398ef:	48 89 cf             	mov    %rcx,%rdi
  4398f2:	48 89 c6             	mov    %rax,%rsi
  4398f5:	e8 02 c4 00 00       	callq  445cfc <setEncryptedValueQWord>
  4398fa:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
  4398fe:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  439902:	48 83 fe 00          	cmp    $0x0,%rsi
  439906:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  43990b:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  439911:	44 0f 4c c2          	cmovl  %edx,%r8d
  439915:	48 89 cf             	mov    %rcx,%rdi
  439918:	44 89 c6             	mov    %r8d,%esi
  43991b:	48 89 85 08 fd ff ff 	mov    %rax,-0x2f8(%rbp)
  439922:	e8 d7 c2 00 00       	callq  445bfe <setEncryptedValueDWord>
  439927:	ba 01 00 00 00       	mov    $0x1,%edx
  43992c:	89 d6                	mov    %edx,%esi
  43992e:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
  439932:	48 83 c1 08          	add    $0x8,%rcx
  439936:	48 89 cf             	mov    %rcx,%rdi
  439939:	48 89 85 00 fd ff ff 	mov    %rax,-0x300(%rbp)
  439940:	e8 b7 c3 00 00       	callq  445cfc <setEncryptedValueQWord>
  439945:	48 8d b5 f0 fd ff ff 	lea    -0x210(%rbp),%rsi
  43994c:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
  439950:	48 83 c1 10          	add    $0x10,%rcx
  439954:	48 89 cf             	mov    %rcx,%rdi
  439957:	48 89 85 f8 fc ff ff 	mov    %rax,-0x308(%rbp)
  43995e:	e8 99 c3 00 00       	callq  445cfc <setEncryptedValueQWord>
  439963:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  439967:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
  43996b:	48 89 85 f0 fc ff ff 	mov    %rax,-0x310(%rbp)
  439972:	e8 d9 50 fe ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  439977:	89 85 ec fc ff ff    	mov    %eax,-0x314(%rbp)
  43997d:	e8 d4 bf 00 00       	callq  445956 <writeback_cache>
  439982:	8b 85 ec fc ff ff    	mov    -0x314(%rbp),%eax
  439988:	83 f8 00             	cmp    $0x0,%eax
  43998b:	7f 0f                	jg     43999c <rsa_check_context+0x6fc>
  43998d:	c7 85 e4 fd ff ff 80 	movl   $0xffffbf80,-0x21c(%rbp)
  439994:	bf ff ff 
  439997:	e9 76 03 00 00       	jmpq   439d12 <rsa_check_context+0xa72>
  43999c:	83 bd d4 fd ff ff 00 	cmpl   $0x0,-0x22c(%rbp)
  4399a3:	0f 84 2a 02 00 00    	je     439bd3 <rsa_check_context+0x933>
  4399a9:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
  4399b0:	48 05 88 00 00 00    	add    $0x88,%rax
  4399b6:	48 89 85 e0 fc ff ff 	mov    %rax,-0x320(%rbp)
  4399bd:	e8 94 bf 00 00       	callq  445956 <writeback_cache>
  4399c2:	48 8b 85 e0 fc ff ff 	mov    -0x320(%rbp),%rax
  4399c9:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  4399cd:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
  4399d4:	00 
  4399d5:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
  4399da:	7d 11                	jge    4399ed <rsa_check_context+0x74d>
  4399dc:	31 c0                	xor    %eax,%eax
  4399de:	89 c1                	mov    %eax,%ecx
  4399e0:	48 2b 4d b0          	sub    -0x50(%rbp),%rcx
  4399e4:	48 89 8d d8 fc ff ff 	mov    %rcx,-0x328(%rbp)
  4399eb:	eb 0b                	jmp    4399f8 <rsa_check_context+0x758>
  4399ed:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  4399f1:	48 89 85 d8 fc ff ff 	mov    %rax,-0x328(%rbp)
  4399f8:	48 8b 85 d8 fc ff ff 	mov    -0x328(%rbp),%rax
  4399ff:	48 8d 8d f0 fd ff ff 	lea    -0x210(%rbp),%rcx
  439a06:	48 89 cf             	mov    %rcx,%rdi
  439a09:	48 89 c6             	mov    %rax,%rsi
  439a0c:	e8 eb c2 00 00       	callq  445cfc <setEncryptedValueQWord>
  439a11:	48 8d 4d 80          	lea    -0x80(%rbp),%rcx
  439a15:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
  439a19:	48 83 fe 00          	cmp    $0x0,%rsi
  439a1d:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  439a22:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  439a28:	44 0f 4c c2          	cmovl  %edx,%r8d
  439a2c:	48 89 cf             	mov    %rcx,%rdi
  439a2f:	44 89 c6             	mov    %r8d,%esi
  439a32:	48 89 85 d0 fc ff ff 	mov    %rax,-0x330(%rbp)
  439a39:	e8 c0 c1 00 00       	callq  445bfe <setEncryptedValueDWord>
  439a3e:	ba 01 00 00 00       	mov    $0x1,%edx
  439a43:	89 d6                	mov    %edx,%esi
  439a45:	48 8d 4d 80          	lea    -0x80(%rbp),%rcx
  439a49:	48 83 c1 08          	add    $0x8,%rcx
  439a4d:	48 89 cf             	mov    %rcx,%rdi
  439a50:	48 89 85 c8 fc ff ff 	mov    %rax,-0x338(%rbp)
  439a57:	e8 a0 c2 00 00       	callq  445cfc <setEncryptedValueQWord>
  439a5c:	48 8d b5 f0 fd ff ff 	lea    -0x210(%rbp),%rsi
  439a63:	48 8d 4d 80          	lea    -0x80(%rbp),%rcx
  439a67:	48 83 c1 10          	add    $0x10,%rcx
  439a6b:	48 89 cf             	mov    %rcx,%rdi
  439a6e:	48 89 85 c0 fc ff ff 	mov    %rax,-0x340(%rbp)
  439a75:	e8 82 c2 00 00       	callq  445cfc <setEncryptedValueQWord>
  439a7a:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
  439a7e:	48 8d 75 80          	lea    -0x80(%rbp),%rsi
  439a82:	48 89 85 b8 fc ff ff 	mov    %rax,-0x348(%rbp)
  439a89:	e8 c2 4f fe ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  439a8e:	89 85 b4 fc ff ff    	mov    %eax,-0x34c(%rbp)
  439a94:	e8 bd be 00 00       	callq  445956 <writeback_cache>
  439a99:	8b 85 b4 fc ff ff    	mov    -0x34c(%rbp),%eax
  439a9f:	83 f8 00             	cmp    $0x0,%eax
  439aa2:	0f 8e 1c 01 00 00    	jle    439bc4 <rsa_check_context+0x924>
  439aa8:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
  439aaf:	48 05 a0 00 00 00    	add    $0xa0,%rax
  439ab5:	48 89 85 a8 fc ff ff 	mov    %rax,-0x358(%rbp)
  439abc:	e8 95 be 00 00       	callq  445956 <writeback_cache>
  439ac1:	48 8b 85 a8 fc ff ff 	mov    -0x358(%rbp),%rax
  439ac8:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
  439acf:	48 c7 85 20 ff ff ff 	movq   $0x0,-0xe0(%rbp)
  439ad6:	00 00 00 00 
  439ada:	48 83 bd 20 ff ff ff 	cmpq   $0x0,-0xe0(%rbp)
  439ae1:	00 
  439ae2:	7d 14                	jge    439af8 <rsa_check_context+0x858>
  439ae4:	31 c0                	xor    %eax,%eax
  439ae6:	89 c1                	mov    %eax,%ecx
  439ae8:	48 2b 8d 20 ff ff ff 	sub    -0xe0(%rbp),%rcx
  439aef:	48 89 8d a0 fc ff ff 	mov    %rcx,-0x360(%rbp)
  439af6:	eb 0e                	jmp    439b06 <rsa_check_context+0x866>
  439af8:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
  439aff:	48 89 85 a0 fc ff ff 	mov    %rax,-0x360(%rbp)
  439b06:	48 8b 85 a0 fc ff ff 	mov    -0x360(%rbp),%rax
  439b0d:	48 8d 8d f0 fd ff ff 	lea    -0x210(%rbp),%rcx
  439b14:	48 89 cf             	mov    %rcx,%rdi
  439b17:	48 89 c6             	mov    %rax,%rsi
  439b1a:	e8 dd c1 00 00       	callq  445cfc <setEncryptedValueQWord>
  439b1f:	48 8d 8d f0 fe ff ff 	lea    -0x110(%rbp),%rcx
  439b26:	48 8b b5 20 ff ff ff 	mov    -0xe0(%rbp),%rsi
  439b2d:	48 83 fe 00          	cmp    $0x0,%rsi
  439b31:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  439b36:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  439b3c:	44 0f 4c c2          	cmovl  %edx,%r8d
  439b40:	48 89 cf             	mov    %rcx,%rdi
  439b43:	44 89 c6             	mov    %r8d,%esi
  439b46:	48 89 85 98 fc ff ff 	mov    %rax,-0x368(%rbp)
  439b4d:	e8 ac c0 00 00       	callq  445bfe <setEncryptedValueDWord>
  439b52:	ba 01 00 00 00       	mov    $0x1,%edx
  439b57:	89 d6                	mov    %edx,%esi
  439b59:	48 8d 8d f0 fe ff ff 	lea    -0x110(%rbp),%rcx
  439b60:	48 83 c1 08          	add    $0x8,%rcx
  439b64:	48 89 cf             	mov    %rcx,%rdi
  439b67:	48 89 85 90 fc ff ff 	mov    %rax,-0x370(%rbp)
  439b6e:	e8 89 c1 00 00       	callq  445cfc <setEncryptedValueQWord>
  439b73:	48 8d b5 f0 fd ff ff 	lea    -0x210(%rbp),%rsi
  439b7a:	48 8d 8d f0 fe ff ff 	lea    -0x110(%rbp),%rcx
  439b81:	48 83 c1 10          	add    $0x10,%rcx
  439b85:	48 89 cf             	mov    %rcx,%rdi
  439b88:	48 89 85 88 fc ff ff 	mov    %rax,-0x378(%rbp)
  439b8f:	e8 68 c1 00 00       	callq  445cfc <setEncryptedValueQWord>
  439b94:	48 8b bd 28 ff ff ff 	mov    -0xd8(%rbp),%rdi
  439b9b:	48 8d b5 f0 fe ff ff 	lea    -0x110(%rbp),%rsi
  439ba2:	48 89 85 80 fc ff ff 	mov    %rax,-0x380(%rbp)
  439ba9:	e8 a2 4e fe ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  439bae:	89 85 7c fc ff ff    	mov    %eax,-0x384(%rbp)
  439bb4:	e8 9d bd 00 00       	callq  445956 <writeback_cache>
  439bb9:	8b 85 7c fc ff ff    	mov    -0x384(%rbp),%eax
  439bbf:	83 f8 00             	cmp    $0x0,%eax
  439bc2:	7f 0f                	jg     439bd3 <rsa_check_context+0x933>
  439bc4:	c7 85 e4 fd ff ff 80 	movl   $0xffffbf80,-0x21c(%rbp)
  439bcb:	bf ff ff 
  439bce:	e9 3f 01 00 00       	jmpq   439d12 <rsa_check_context+0xa72>
  439bd3:	83 bd d4 fd ff ff 00 	cmpl   $0x0,-0x22c(%rbp)
  439bda:	0f 84 28 01 00 00    	je     439d08 <rsa_check_context+0xa68>
  439be0:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
  439be7:	48 05 b8 00 00 00    	add    $0xb8,%rax
  439bed:	48 89 85 70 fc ff ff 	mov    %rax,-0x390(%rbp)
  439bf4:	e8 5d bd 00 00       	callq  445956 <writeback_cache>
  439bf9:	48 8b 85 70 fc ff ff 	mov    -0x390(%rbp),%rax
  439c00:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
  439c07:	48 c7 85 90 fe ff ff 	movq   $0x0,-0x170(%rbp)
  439c0e:	00 00 00 00 
  439c12:	48 83 bd 90 fe ff ff 	cmpq   $0x0,-0x170(%rbp)
  439c19:	00 
  439c1a:	7d 14                	jge    439c30 <rsa_check_context+0x990>
  439c1c:	31 c0                	xor    %eax,%eax
  439c1e:	89 c1                	mov    %eax,%ecx
  439c20:	48 2b 8d 90 fe ff ff 	sub    -0x170(%rbp),%rcx
  439c27:	48 89 8d 68 fc ff ff 	mov    %rcx,-0x398(%rbp)
  439c2e:	eb 0e                	jmp    439c3e <rsa_check_context+0x99e>
  439c30:	48 8b 85 90 fe ff ff 	mov    -0x170(%rbp),%rax
  439c37:	48 89 85 68 fc ff ff 	mov    %rax,-0x398(%rbp)
  439c3e:	48 8b 85 68 fc ff ff 	mov    -0x398(%rbp),%rax
  439c45:	48 8d 8d f0 fd ff ff 	lea    -0x210(%rbp),%rcx
  439c4c:	48 89 cf             	mov    %rcx,%rdi
  439c4f:	48 89 c6             	mov    %rax,%rsi
  439c52:	e8 a5 c0 00 00       	callq  445cfc <setEncryptedValueQWord>
  439c57:	48 8d 8d 60 fe ff ff 	lea    -0x1a0(%rbp),%rcx
  439c5e:	48 8b b5 90 fe ff ff 	mov    -0x170(%rbp),%rsi
  439c65:	48 83 fe 00          	cmp    $0x0,%rsi
  439c69:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  439c6e:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  439c74:	44 0f 4c c2          	cmovl  %edx,%r8d
  439c78:	48 89 cf             	mov    %rcx,%rdi
  439c7b:	44 89 c6             	mov    %r8d,%esi
  439c7e:	48 89 85 60 fc ff ff 	mov    %rax,-0x3a0(%rbp)
  439c85:	e8 74 bf 00 00       	callq  445bfe <setEncryptedValueDWord>
  439c8a:	ba 01 00 00 00       	mov    $0x1,%edx
  439c8f:	89 d6                	mov    %edx,%esi
  439c91:	48 8d 8d 60 fe ff ff 	lea    -0x1a0(%rbp),%rcx
  439c98:	48 83 c1 08          	add    $0x8,%rcx
  439c9c:	48 89 cf             	mov    %rcx,%rdi
  439c9f:	48 89 85 58 fc ff ff 	mov    %rax,-0x3a8(%rbp)
  439ca6:	e8 51 c0 00 00       	callq  445cfc <setEncryptedValueQWord>
  439cab:	48 8d b5 f0 fd ff ff 	lea    -0x210(%rbp),%rsi
  439cb2:	48 8d 8d 60 fe ff ff 	lea    -0x1a0(%rbp),%rcx
  439cb9:	48 83 c1 10          	add    $0x10,%rcx
  439cbd:	48 89 cf             	mov    %rcx,%rdi
  439cc0:	48 89 85 50 fc ff ff 	mov    %rax,-0x3b0(%rbp)
  439cc7:	e8 30 c0 00 00       	callq  445cfc <setEncryptedValueQWord>
  439ccc:	48 8b bd 98 fe ff ff 	mov    -0x168(%rbp),%rdi
  439cd3:	48 8d b5 60 fe ff ff 	lea    -0x1a0(%rbp),%rsi
  439cda:	48 89 85 48 fc ff ff 	mov    %rax,-0x3b8(%rbp)
  439ce1:	e8 6a 4d fe ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  439ce6:	89 85 44 fc ff ff    	mov    %eax,-0x3bc(%rbp)
  439cec:	e8 65 bc 00 00       	callq  445956 <writeback_cache>
  439cf1:	8b 85 44 fc ff ff    	mov    -0x3bc(%rbp),%eax
  439cf7:	83 f8 00             	cmp    $0x0,%eax
  439cfa:	7f 0c                	jg     439d08 <rsa_check_context+0xa68>
  439cfc:	c7 85 e4 fd ff ff 80 	movl   $0xffffbf80,-0x21c(%rbp)
  439d03:	bf ff ff 
  439d06:	eb 0a                	jmp    439d12 <rsa_check_context+0xa72>
  439d08:	c7 85 e4 fd ff ff 00 	movl   $0x0,-0x21c(%rbp)
  439d0f:	00 00 00 
  439d12:	8b 85 e4 fd ff ff    	mov    -0x21c(%rbp),%eax
  439d18:	89 85 40 fc ff ff    	mov    %eax,-0x3c0(%rbp)
  439d1e:	e8 33 bc 00 00       	callq  445956 <writeback_cache>
  439d23:	8b 85 40 fc ff ff    	mov    -0x3c0(%rbp),%eax
  439d29:	48 81 c4 c0 03 00 00 	add    $0x3c0,%rsp
  439d30:	5d                   	pop    %rbp
  439d31:	c3                   	retq   
  439d32:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  439d39:	1f 84 00 00 00 00 00 

0000000000439d40 <mbedtls_rsa_check_pubkey>:
  439d40:	55                   	push   %rbp
  439d41:	48 89 e5             	mov    %rsp,%rbp
  439d44:	48 83 ec 30          	sub    $0x30,%rsp
  439d48:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  439d4c:	eb 00                	jmp    439d4e <mbedtls_rsa_check_pubkey+0xe>
  439d4e:	31 c0                	xor    %eax,%eax
  439d50:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  439d54:	89 c6                	mov    %eax,%esi
  439d56:	89 c2                	mov    %eax,%edx
  439d58:	e8 43 f5 ff ff       	callq  4392a0 <rsa_check_context>
  439d5d:	83 f8 00             	cmp    $0x0,%eax
  439d60:	74 0c                	je     439d6e <mbedtls_rsa_check_pubkey+0x2e>
  439d62:	c7 45 e4 00 be ff ff 	movl   $0xffffbe00,-0x1c(%rbp)
  439d69:	e9 e7 00 00 00       	jmpq   439e55 <mbedtls_rsa_check_pubkey+0x115>
  439d6e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  439d72:	48 83 c0 10          	add    $0x10,%rax
  439d76:	48 89 c7             	mov    %rax,%rdi
  439d79:	e8 52 14 fe ff       	callq  41b1d0 <mbedtls_mpi_bitlen>
  439d7e:	48 3d 80 00 00 00    	cmp    $0x80,%rax
  439d84:	73 0c                	jae    439d92 <mbedtls_rsa_check_pubkey+0x52>
  439d86:	c7 45 e4 00 be ff ff 	movl   $0xffffbe00,-0x1c(%rbp)
  439d8d:	e9 c3 00 00 00       	jmpq   439e55 <mbedtls_rsa_check_pubkey+0x115>
  439d92:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  439d96:	48 83 c0 28          	add    $0x28,%rax
  439d9a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  439d9e:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
  439da5:	00 
  439da6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  439daa:	48 83 c0 08          	add    $0x8,%rax
  439dae:	48 89 c7             	mov    %rax,%rdi
  439db1:	e8 92 c3 00 00       	callq  446148 <getDecryptedValueQWord>
  439db6:	48 c1 e0 06          	shl    $0x6,%rax
  439dba:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
  439dbe:	77 09                	ja     439dc9 <mbedtls_rsa_check_pubkey+0x89>
  439dc0:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  439dc7:	eb 3e                	jmp    439e07 <mbedtls_rsa_check_pubkey+0xc7>
  439dc9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  439dcd:	48 83 c0 10          	add    $0x10,%rax
  439dd1:	48 89 c7             	mov    %rax,%rdi
  439dd4:	e8 6f c3 00 00       	callq  446148 <getDecryptedValueQWord>
  439dd9:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  439ddd:	48 c1 ef 06          	shr    $0x6,%rdi
  439de1:	48 c1 e7 03          	shl    $0x3,%rdi
  439de5:	48 01 f8             	add    %rdi,%rax
  439de8:	48 89 c7             	mov    %rax,%rdi
  439deb:	e8 58 c3 00 00       	callq  446148 <getDecryptedValueQWord>
  439df0:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  439df4:	48 83 e7 3f          	and    $0x3f,%rdi
  439df8:	48 89 f9             	mov    %rdi,%rcx
  439dfb:	48 d3 e8             	shr    %cl,%rax
  439dfe:	48 83 e0 01          	and    $0x1,%rax
  439e02:	89 c2                	mov    %eax,%edx
  439e04:	89 55 fc             	mov    %edx,-0x4(%rbp)
  439e07:	8b 45 fc             	mov    -0x4(%rbp),%eax
  439e0a:	83 f8 00             	cmp    $0x0,%eax
  439e0d:	74 36                	je     439e45 <mbedtls_rsa_check_pubkey+0x105>
  439e0f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  439e13:	48 83 c0 28          	add    $0x28,%rax
  439e17:	48 89 c7             	mov    %rax,%rdi
  439e1a:	e8 b1 13 fe ff       	callq  41b1d0 <mbedtls_mpi_bitlen>
  439e1f:	48 83 f8 02          	cmp    $0x2,%rax
  439e23:	72 20                	jb     439e45 <mbedtls_rsa_check_pubkey+0x105>
  439e25:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  439e29:	48 83 c0 28          	add    $0x28,%rax
  439e2d:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  439e31:	48 83 c1 10          	add    $0x10,%rcx
  439e35:	48 89 c7             	mov    %rax,%rdi
  439e38:	48 89 ce             	mov    %rcx,%rsi
  439e3b:	e8 10 4c fe ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  439e40:	83 f8 00             	cmp    $0x0,%eax
  439e43:	7c 09                	jl     439e4e <mbedtls_rsa_check_pubkey+0x10e>
  439e45:	c7 45 e4 00 be ff ff 	movl   $0xffffbe00,-0x1c(%rbp)
  439e4c:	eb 07                	jmp    439e55 <mbedtls_rsa_check_pubkey+0x115>
  439e4e:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
  439e55:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  439e58:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  439e5b:	e8 f6 ba 00 00       	callq  445956 <writeback_cache>
  439e60:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  439e63:	48 83 c4 30          	add    $0x30,%rsp
  439e67:	5d                   	pop    %rbp
  439e68:	c3                   	retq   
  439e69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000439e70 <mbedtls_rsa_public>:
  439e70:	55                   	push   %rbp
  439e71:	48 89 e5             	mov    %rsp,%rbp
  439e74:	48 81 ec 10 01 00 00 	sub    $0x110,%rsp
  439e7b:	48 89 7d c0          	mov    %rdi,-0x40(%rbp)
  439e7f:	48 89 75 b8          	mov    %rsi,-0x48(%rbp)
  439e83:	48 89 55 b0          	mov    %rdx,-0x50(%rbp)
  439e87:	eb 00                	jmp    439e89 <mbedtls_rsa_public+0x19>
  439e89:	eb 00                	jmp    439e8b <mbedtls_rsa_public+0x1b>
  439e8b:	eb 00                	jmp    439e8d <mbedtls_rsa_public+0x1d>
  439e8d:	eb 00                	jmp    439e8f <mbedtls_rsa_public+0x1f>
  439e8f:	eb 00                	jmp    439e91 <mbedtls_rsa_public+0x21>
  439e91:	31 c0                	xor    %eax,%eax
  439e93:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  439e97:	89 c6                	mov    %eax,%esi
  439e99:	89 c2                	mov    %eax,%edx
  439e9b:	e8 00 f4 ff ff       	callq  4392a0 <rsa_check_context>
  439ea0:	83 f8 00             	cmp    $0x0,%eax
  439ea3:	74 0c                	je     439eb1 <mbedtls_rsa_public+0x41>
  439ea5:	c7 45 cc 80 bf ff ff 	movl   $0xffffbf80,-0x34(%rbp)
  439eac:	e9 a5 02 00 00       	jmpq   43a156 <mbedtls_rsa_public+0x2e6>
  439eb1:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
  439eb8:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  439ebc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  439ec0:	48 89 c7             	mov    %rax,%rdi
  439ec3:	be 01 00 00 00       	mov    $0x1,%esi
  439ec8:	e8 31 bd 00 00       	callq  445bfe <setEncryptedValueDWord>
  439ecd:	31 f6                	xor    %esi,%esi
  439ecf:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  439ed3:	48 83 c7 08          	add    $0x8,%rdi
  439ed7:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
  439ede:	e8 19 be 00 00       	callq  445cfc <setEncryptedValueQWord>
  439ee3:	31 c9                	xor    %ecx,%ecx
  439ee5:	89 ce                	mov    %ecx,%esi
  439ee7:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  439eeb:	48 83 c7 10          	add    $0x10,%rdi
  439eef:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
  439ef6:	e8 01 be 00 00       	callq  445cfc <setEncryptedValueQWord>
  439efb:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
  439f02:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  439f06:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  439f0a:	48 83 c0 08          	add    $0x8,%rax
  439f0e:	48 89 c7             	mov    %rax,%rdi
  439f11:	48 89 b5 50 ff ff ff 	mov    %rsi,-0xb0(%rbp)
  439f18:	e8 2b c2 00 00       	callq  446148 <getDecryptedValueQWord>
  439f1d:	48 8d bd 70 ff ff ff 	lea    -0x90(%rbp),%rdi
  439f24:	48 8b b5 50 ff ff ff 	mov    -0xb0(%rbp),%rsi
  439f2b:	48 89 c2             	mov    %rax,%rdx
  439f2e:	e8 9d 74 fe ff       	callq  4213d0 <mbedtls_mpi_read_binary>
  439f33:	89 45 ac             	mov    %eax,-0x54(%rbp)
  439f36:	83 f8 00             	cmp    $0x0,%eax
  439f39:	74 05                	je     439f40 <mbedtls_rsa_public+0xd0>
  439f3b:	e9 a6 00 00 00       	jmpq   439fe6 <mbedtls_rsa_public+0x176>
  439f40:	eb 00                	jmp    439f42 <mbedtls_rsa_public+0xd2>
  439f42:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  439f46:	48 83 c0 10          	add    $0x10,%rax
  439f4a:	48 8d bd 70 ff ff ff 	lea    -0x90(%rbp),%rdi
  439f51:	48 89 c6             	mov    %rax,%rsi
  439f54:	e8 f7 4a fe ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  439f59:	83 f8 00             	cmp    $0x0,%eax
  439f5c:	7c 09                	jl     439f67 <mbedtls_rsa_public+0xf7>
  439f5e:	c7 45 ac fc ff ff ff 	movl   $0xfffffffc,-0x54(%rbp)
  439f65:	eb 7f                	jmp    439fe6 <mbedtls_rsa_public+0x176>
  439f67:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  439f6b:	48 83 c0 08          	add    $0x8,%rax
  439f6f:	48 89 c7             	mov    %rax,%rdi
  439f72:	e8 d1 c1 00 00       	callq  446148 <getDecryptedValueQWord>
  439f77:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  439f7b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  439f7f:	48 83 c0 28          	add    $0x28,%rax
  439f83:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  439f87:	48 83 c1 10          	add    $0x10,%rcx
  439f8b:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  439f8f:	48 81 c2 d0 00 00 00 	add    $0xd0,%rdx
  439f96:	48 8d b5 70 ff ff ff 	lea    -0x90(%rbp),%rsi
  439f9d:	48 89 f7             	mov    %rsi,%rdi
  439fa0:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
  439fa7:	48 89 c2             	mov    %rax,%rdx
  439faa:	4c 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%r8
  439fb1:	e8 da 7c fe ff       	callq  421c90 <mbedtls_mpi_exp_mod>
  439fb6:	89 45 ac             	mov    %eax,-0x54(%rbp)
  439fb9:	83 f8 00             	cmp    $0x0,%eax
  439fbc:	74 02                	je     439fc0 <mbedtls_rsa_public+0x150>
  439fbe:	eb 26                	jmp    439fe6 <mbedtls_rsa_public+0x176>
  439fc0:	eb 00                	jmp    439fc2 <mbedtls_rsa_public+0x152>
  439fc2:	eb 00                	jmp    439fc4 <mbedtls_rsa_public+0x154>
  439fc4:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
  439fc8:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
  439fcc:	48 8d bd 70 ff ff ff 	lea    -0x90(%rbp),%rdi
  439fd3:	e8 28 78 fe ff       	callq  421800 <mbedtls_mpi_write_binary>
  439fd8:	89 45 ac             	mov    %eax,-0x54(%rbp)
  439fdb:	83 f8 00             	cmp    $0x0,%eax
  439fde:	74 02                	je     439fe2 <mbedtls_rsa_public+0x172>
  439fe0:	eb 04                	jmp    439fe6 <mbedtls_rsa_public+0x176>
  439fe2:	eb 00                	jmp    439fe4 <mbedtls_rsa_public+0x174>
  439fe4:	eb 00                	jmp    439fe6 <mbedtls_rsa_public+0x176>
  439fe6:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
  439fed:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  439ff1:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  439ff6:	75 05                	jne    439ffd <mbedtls_rsa_public+0x18d>
  439ff8:	e9 3f 01 00 00       	jmpq   43a13c <mbedtls_rsa_public+0x2cc>
  439ffd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  43a001:	48 83 c0 10          	add    $0x10,%rax
  43a005:	48 89 c7             	mov    %rax,%rdi
  43a008:	e8 3b c1 00 00       	callq  446148 <getDecryptedValueQWord>
  43a00d:	48 83 f8 00          	cmp    $0x0,%rax
  43a011:	0f 84 df 00 00 00    	je     43a0f6 <mbedtls_rsa_public+0x286>
  43a017:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  43a01b:	48 83 c0 10          	add    $0x10,%rax
  43a01f:	48 89 c7             	mov    %rax,%rdi
  43a022:	e8 21 c1 00 00       	callq  446148 <getDecryptedValueQWord>
  43a027:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  43a02b:	48 83 c7 08          	add    $0x8,%rdi
  43a02f:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
  43a036:	e8 0d c1 00 00       	callq  446148 <getDecryptedValueQWord>
  43a03b:	48 8b bd 40 ff ff ff 	mov    -0xc0(%rbp),%rdi
  43a042:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  43a046:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  43a04a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43a04e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  43a052:	48 c1 e1 03          	shl    $0x3,%rcx
  43a056:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43a05a:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
  43a05e:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  43a065:	00 
  43a066:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  43a06a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43a06e:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
  43a075:	48 89 8d 30 ff ff ff 	mov    %rcx,-0xd0(%rbp)
  43a07c:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)
  43a083:	e8 ce b8 00 00       	callq  445956 <writeback_cache>
  43a088:	48 8b bd 30 ff ff ff 	mov    -0xd0(%rbp),%rdi
  43a08f:	48 8b b5 28 ff ff ff 	mov    -0xd8(%rbp),%rsi
  43a096:	e8 4a c6 00 00       	callq  4466e5 <decryptArrayForLibCall>
  43a09b:	31 f6                	xor    %esi,%esi
  43a09d:	48 8b bd 30 ff ff ff 	mov    -0xd0(%rbp),%rdi
  43a0a4:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
  43a0ab:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  43a0b2:	ff d0                	callq  *%rax
  43a0b4:	48 8b bd 30 ff ff ff 	mov    -0xd0(%rbp),%rdi
  43a0bb:	48 8b b5 28 ff ff ff 	mov    -0xd8(%rbp),%rsi
  43a0c2:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
  43a0c9:	e8 88 c3 00 00       	callq  446456 <encryptArrayForLibCall>
  43a0ce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  43a0d2:	48 83 c0 10          	add    $0x10,%rax
  43a0d6:	48 89 c7             	mov    %rax,%rdi
  43a0d9:	e8 6a c0 00 00       	callq  446148 <getDecryptedValueQWord>
  43a0de:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
  43a0e5:	e8 6c b8 00 00       	callq  445956 <writeback_cache>
  43a0ea:	48 8b bd 18 ff ff ff 	mov    -0xe8(%rbp),%rdi
  43a0f1:	e8 ea 6f fc ff       	callq  4010e0 <free@plt>
  43a0f6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  43a0fa:	48 89 c7             	mov    %rax,%rdi
  43a0fd:	be 01 00 00 00       	mov    $0x1,%esi
  43a102:	e8 f7 ba 00 00       	callq  445bfe <setEncryptedValueDWord>
  43a107:	31 f6                	xor    %esi,%esi
  43a109:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  43a10d:	48 83 c7 08          	add    $0x8,%rdi
  43a111:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
  43a118:	e8 df bb 00 00       	callq  445cfc <setEncryptedValueQWord>
  43a11d:	31 c9                	xor    %ecx,%ecx
  43a11f:	89 ce                	mov    %ecx,%esi
  43a121:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  43a125:	48 83 c7 10          	add    $0x10,%rdi
  43a129:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
  43a130:	e8 c7 bb 00 00       	callq  445cfc <setEncryptedValueQWord>
  43a135:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
  43a13c:	83 7d ac 00          	cmpl   $0x0,-0x54(%rbp)
  43a140:	74 0d                	je     43a14f <mbedtls_rsa_public+0x2df>
  43a142:	8b 45 ac             	mov    -0x54(%rbp),%eax
  43a145:	05 80 bd ff ff       	add    $0xffffbd80,%eax
  43a14a:	89 45 cc             	mov    %eax,-0x34(%rbp)
  43a14d:	eb 07                	jmp    43a156 <mbedtls_rsa_public+0x2e6>
  43a14f:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
  43a156:	8b 45 cc             	mov    -0x34(%rbp),%eax
  43a159:	89 85 fc fe ff ff    	mov    %eax,-0x104(%rbp)
  43a15f:	e8 f2 b7 00 00       	callq  445956 <writeback_cache>
  43a164:	8b 85 fc fe ff ff    	mov    -0x104(%rbp),%eax
  43a16a:	48 81 c4 10 01 00 00 	add    $0x110,%rsp
  43a171:	5d                   	pop    %rbp
  43a172:	c3                   	retq   
  43a173:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  43a17a:	84 00 00 00 00 00 

000000000043a180 <mbedtls_rsa_private>:
  43a180:	55                   	push   %rbp
  43a181:	48 89 e5             	mov    %rsp,%rbp
  43a184:	48 81 ec a0 0e 00 00 	sub    $0xea0,%rsp
  43a18b:	48 89 bd 40 f8 ff ff 	mov    %rdi,-0x7c0(%rbp)
  43a192:	48 89 b5 38 f8 ff ff 	mov    %rsi,-0x7c8(%rbp)
  43a199:	48 89 95 30 f8 ff ff 	mov    %rdx,-0x7d0(%rbp)
  43a1a0:	48 89 8d 28 f8 ff ff 	mov    %rcx,-0x7d8(%rbp)
  43a1a7:	4c 89 85 20 f8 ff ff 	mov    %r8,-0x7e0(%rbp)
  43a1ae:	48 8b 8d 40 f8 ff ff 	mov    -0x7c0(%rbp),%rcx
  43a1b5:	48 81 c1 88 00 00 00 	add    $0x88,%rcx
  43a1bc:	48 89 8d 88 f6 ff ff 	mov    %rcx,-0x978(%rbp)
  43a1c3:	48 8b 8d 40 f8 ff ff 	mov    -0x7c0(%rbp),%rcx
  43a1ca:	48 81 c1 a0 00 00 00 	add    $0xa0,%rcx
  43a1d1:	48 89 8d 80 f6 ff ff 	mov    %rcx,-0x980(%rbp)
  43a1d8:	eb 00                	jmp    43a1da <mbedtls_rsa_private+0x5a>
  43a1da:	eb 00                	jmp    43a1dc <mbedtls_rsa_private+0x5c>
  43a1dc:	eb 00                	jmp    43a1de <mbedtls_rsa_private+0x5e>
  43a1de:	eb 00                	jmp    43a1e0 <mbedtls_rsa_private+0x60>
  43a1e0:	eb 00                	jmp    43a1e2 <mbedtls_rsa_private+0x62>
  43a1e2:	48 8b bd 40 f8 ff ff 	mov    -0x7c0(%rbp),%rdi
  43a1e9:	48 83 bd 38 f8 ff ff 	cmpq   $0x0,-0x7c8(%rbp)
  43a1f0:	00 
  43a1f1:	0f 95 c0             	setne  %al
  43a1f4:	24 01                	and    $0x1,%al
  43a1f6:	0f b6 d0             	movzbl %al,%edx
  43a1f9:	be 01 00 00 00       	mov    $0x1,%esi
  43a1fe:	e8 9d f0 ff ff       	callq  4392a0 <rsa_check_context>
  43a203:	83 f8 00             	cmp    $0x0,%eax
  43a206:	74 0f                	je     43a217 <mbedtls_rsa_private+0x97>
  43a208:	c7 85 4c f8 ff ff 80 	movl   $0xffffbf80,-0x7b4(%rbp)
  43a20f:	bf ff ff 
  43a212:	e9 ff 20 00 00       	jmpq   43c316 <mbedtls_rsa_private+0x2196>
  43a217:	48 8d 85 e0 f7 ff ff 	lea    -0x820(%rbp),%rax
  43a21e:	48 89 85 50 f8 ff ff 	mov    %rax,-0x7b0(%rbp)
  43a225:	48 8b 85 50 f8 ff ff 	mov    -0x7b0(%rbp),%rax
  43a22c:	48 89 c7             	mov    %rax,%rdi
  43a22f:	be 01 00 00 00       	mov    $0x1,%esi
  43a234:	e8 c5 b9 00 00       	callq  445bfe <setEncryptedValueDWord>
  43a239:	31 f6                	xor    %esi,%esi
  43a23b:	48 8b bd 50 f8 ff ff 	mov    -0x7b0(%rbp),%rdi
  43a242:	48 83 c7 08          	add    $0x8,%rdi
  43a246:	48 89 85 18 f6 ff ff 	mov    %rax,-0x9e8(%rbp)
  43a24d:	e8 aa ba 00 00       	callq  445cfc <setEncryptedValueQWord>
  43a252:	31 c9                	xor    %ecx,%ecx
  43a254:	89 ce                	mov    %ecx,%esi
  43a256:	48 8b bd 50 f8 ff ff 	mov    -0x7b0(%rbp),%rdi
  43a25d:	48 83 c7 10          	add    $0x10,%rdi
  43a261:	48 89 85 10 f6 ff ff 	mov    %rax,-0x9f0(%rbp)
  43a268:	e8 8f ba 00 00       	callq  445cfc <setEncryptedValueQWord>
  43a26d:	48 8d b5 b0 f7 ff ff 	lea    -0x850(%rbp),%rsi
  43a274:	48 89 b5 80 f8 ff ff 	mov    %rsi,-0x780(%rbp)
  43a27b:	48 8b b5 80 f8 ff ff 	mov    -0x780(%rbp),%rsi
  43a282:	48 89 f7             	mov    %rsi,%rdi
  43a285:	be 01 00 00 00       	mov    $0x1,%esi
  43a28a:	48 89 85 08 f6 ff ff 	mov    %rax,-0x9f8(%rbp)
  43a291:	e8 68 b9 00 00       	callq  445bfe <setEncryptedValueDWord>
  43a296:	31 c9                	xor    %ecx,%ecx
  43a298:	89 ce                	mov    %ecx,%esi
  43a29a:	48 8b bd 80 f8 ff ff 	mov    -0x780(%rbp),%rdi
  43a2a1:	48 83 c7 08          	add    $0x8,%rdi
  43a2a5:	48 89 85 00 f6 ff ff 	mov    %rax,-0xa00(%rbp)
  43a2ac:	e8 4b ba 00 00       	callq  445cfc <setEncryptedValueQWord>
  43a2b1:	31 c9                	xor    %ecx,%ecx
  43a2b3:	89 ce                	mov    %ecx,%esi
  43a2b5:	48 8b bd 80 f8 ff ff 	mov    -0x780(%rbp),%rdi
  43a2bc:	48 83 c7 10          	add    $0x10,%rdi
  43a2c0:	48 89 85 f8 f5 ff ff 	mov    %rax,-0xa08(%rbp)
  43a2c7:	e8 30 ba 00 00       	callq  445cfc <setEncryptedValueQWord>
  43a2cc:	48 8d b5 80 f7 ff ff 	lea    -0x880(%rbp),%rsi
  43a2d3:	48 89 b5 88 f8 ff ff 	mov    %rsi,-0x778(%rbp)
  43a2da:	48 8b b5 88 f8 ff ff 	mov    -0x778(%rbp),%rsi
  43a2e1:	48 89 f7             	mov    %rsi,%rdi
  43a2e4:	be 01 00 00 00       	mov    $0x1,%esi
  43a2e9:	48 89 85 f0 f5 ff ff 	mov    %rax,-0xa10(%rbp)
  43a2f0:	e8 09 b9 00 00       	callq  445bfe <setEncryptedValueDWord>
  43a2f5:	31 c9                	xor    %ecx,%ecx
  43a2f7:	89 ce                	mov    %ecx,%esi
  43a2f9:	48 8b bd 88 f8 ff ff 	mov    -0x778(%rbp),%rdi
  43a300:	48 83 c7 08          	add    $0x8,%rdi
  43a304:	48 89 85 e8 f5 ff ff 	mov    %rax,-0xa18(%rbp)
  43a30b:	e8 ec b9 00 00       	callq  445cfc <setEncryptedValueQWord>
  43a310:	31 c9                	xor    %ecx,%ecx
  43a312:	89 ce                	mov    %ecx,%esi
  43a314:	48 8b bd 88 f8 ff ff 	mov    -0x778(%rbp),%rdi
  43a31b:	48 83 c7 10          	add    $0x10,%rdi
  43a31f:	48 89 85 e0 f5 ff ff 	mov    %rax,-0xa20(%rbp)
  43a326:	e8 d1 b9 00 00       	callq  445cfc <setEncryptedValueQWord>
  43a32b:	48 8d b5 50 f7 ff ff 	lea    -0x8b0(%rbp),%rsi
  43a332:	48 89 b5 b8 f8 ff ff 	mov    %rsi,-0x748(%rbp)
  43a339:	48 8b b5 b8 f8 ff ff 	mov    -0x748(%rbp),%rsi
  43a340:	48 89 f7             	mov    %rsi,%rdi
  43a343:	be 01 00 00 00       	mov    $0x1,%esi
  43a348:	48 89 85 d8 f5 ff ff 	mov    %rax,-0xa28(%rbp)
  43a34f:	e8 aa b8 00 00       	callq  445bfe <setEncryptedValueDWord>
  43a354:	31 c9                	xor    %ecx,%ecx
  43a356:	89 ce                	mov    %ecx,%esi
  43a358:	48 8b bd b8 f8 ff ff 	mov    -0x748(%rbp),%rdi
  43a35f:	48 83 c7 08          	add    $0x8,%rdi
  43a363:	48 89 85 d0 f5 ff ff 	mov    %rax,-0xa30(%rbp)
  43a36a:	e8 8d b9 00 00       	callq  445cfc <setEncryptedValueQWord>
  43a36f:	31 c9                	xor    %ecx,%ecx
  43a371:	89 ce                	mov    %ecx,%esi
  43a373:	48 8b bd b8 f8 ff ff 	mov    -0x748(%rbp),%rdi
  43a37a:	48 83 c7 10          	add    $0x10,%rdi
  43a37e:	48 89 85 c8 f5 ff ff 	mov    %rax,-0xa38(%rbp)
  43a385:	e8 72 b9 00 00       	callq  445cfc <setEncryptedValueQWord>
  43a38a:	48 83 bd 38 f8 ff ff 	cmpq   $0x0,-0x7c8(%rbp)
  43a391:	00 
  43a392:	48 89 85 c0 f5 ff ff 	mov    %rax,-0xa40(%rbp)
  43a399:	0f 84 bc 00 00 00    	je     43a45b <mbedtls_rsa_private+0x2db>
  43a39f:	48 8d 85 c0 f6 ff ff 	lea    -0x940(%rbp),%rax
  43a3a6:	48 89 85 c0 f8 ff ff 	mov    %rax,-0x740(%rbp)
  43a3ad:	48 8b 85 c0 f8 ff ff 	mov    -0x740(%rbp),%rax
  43a3b4:	48 89 c7             	mov    %rax,%rdi
  43a3b7:	be 01 00 00 00       	mov    $0x1,%esi
  43a3bc:	e8 3d b8 00 00       	callq  445bfe <setEncryptedValueDWord>
  43a3c1:	31 f6                	xor    %esi,%esi
  43a3c3:	48 8b bd c0 f8 ff ff 	mov    -0x740(%rbp),%rdi
  43a3ca:	48 83 c7 08          	add    $0x8,%rdi
  43a3ce:	48 89 85 b8 f5 ff ff 	mov    %rax,-0xa48(%rbp)
  43a3d5:	e8 22 b9 00 00       	callq  445cfc <setEncryptedValueQWord>
  43a3da:	31 c9                	xor    %ecx,%ecx
  43a3dc:	89 ce                	mov    %ecx,%esi
  43a3de:	48 8b bd c0 f8 ff ff 	mov    -0x740(%rbp),%rdi
  43a3e5:	48 83 c7 10          	add    $0x10,%rdi
  43a3e9:	48 89 85 b0 f5 ff ff 	mov    %rax,-0xa50(%rbp)
  43a3f0:	e8 07 b9 00 00       	callq  445cfc <setEncryptedValueQWord>
  43a3f5:	48 8d b5 90 f6 ff ff 	lea    -0x970(%rbp),%rsi
  43a3fc:	48 89 b5 f0 f8 ff ff 	mov    %rsi,-0x710(%rbp)
  43a403:	48 8b b5 f0 f8 ff ff 	mov    -0x710(%rbp),%rsi
  43a40a:	48 89 f7             	mov    %rsi,%rdi
  43a40d:	be 01 00 00 00       	mov    $0x1,%esi
  43a412:	48 89 85 a8 f5 ff ff 	mov    %rax,-0xa58(%rbp)
  43a419:	e8 e0 b7 00 00       	callq  445bfe <setEncryptedValueDWord>
  43a41e:	31 c9                	xor    %ecx,%ecx
  43a420:	89 ce                	mov    %ecx,%esi
  43a422:	48 8b bd f0 f8 ff ff 	mov    -0x710(%rbp),%rdi
  43a429:	48 83 c7 08          	add    $0x8,%rdi
  43a42d:	48 89 85 a0 f5 ff ff 	mov    %rax,-0xa60(%rbp)
  43a434:	e8 c3 b8 00 00       	callq  445cfc <setEncryptedValueQWord>
  43a439:	31 c9                	xor    %ecx,%ecx
  43a43b:	89 ce                	mov    %ecx,%esi
  43a43d:	48 8b bd f0 f8 ff ff 	mov    -0x710(%rbp),%rdi
  43a444:	48 83 c7 10          	add    $0x10,%rdi
  43a448:	48 89 85 98 f5 ff ff 	mov    %rax,-0xa68(%rbp)
  43a44f:	e8 a8 b8 00 00       	callq  445cfc <setEncryptedValueQWord>
  43a454:	48 89 85 90 f5 ff ff 	mov    %rax,-0xa70(%rbp)
  43a45b:	48 8d 85 20 f7 ff ff 	lea    -0x8e0(%rbp),%rax
  43a462:	48 89 85 f8 f8 ff ff 	mov    %rax,-0x708(%rbp)
  43a469:	48 8b 85 f8 f8 ff ff 	mov    -0x708(%rbp),%rax
  43a470:	48 89 c7             	mov    %rax,%rdi
  43a473:	be 01 00 00 00       	mov    $0x1,%esi
  43a478:	e8 81 b7 00 00       	callq  445bfe <setEncryptedValueDWord>
  43a47d:	31 f6                	xor    %esi,%esi
  43a47f:	48 8b bd f8 f8 ff ff 	mov    -0x708(%rbp),%rdi
  43a486:	48 83 c7 08          	add    $0x8,%rdi
  43a48a:	48 89 85 88 f5 ff ff 	mov    %rax,-0xa78(%rbp)
  43a491:	e8 66 b8 00 00       	callq  445cfc <setEncryptedValueQWord>
  43a496:	31 c9                	xor    %ecx,%ecx
  43a498:	89 ce                	mov    %ecx,%esi
  43a49a:	48 8b bd f8 f8 ff ff 	mov    -0x708(%rbp),%rdi
  43a4a1:	48 83 c7 10          	add    $0x10,%rdi
  43a4a5:	48 89 85 80 f5 ff ff 	mov    %rax,-0xa80(%rbp)
  43a4ac:	e8 4b b8 00 00       	callq  445cfc <setEncryptedValueQWord>
  43a4b1:	48 8d b5 f0 f6 ff ff 	lea    -0x910(%rbp),%rsi
  43a4b8:	48 89 b5 28 f9 ff ff 	mov    %rsi,-0x6d8(%rbp)
  43a4bf:	48 8b b5 28 f9 ff ff 	mov    -0x6d8(%rbp),%rsi
  43a4c6:	48 89 f7             	mov    %rsi,%rdi
  43a4c9:	be 01 00 00 00       	mov    $0x1,%esi
  43a4ce:	48 89 85 78 f5 ff ff 	mov    %rax,-0xa88(%rbp)
  43a4d5:	e8 24 b7 00 00       	callq  445bfe <setEncryptedValueDWord>
  43a4da:	31 c9                	xor    %ecx,%ecx
  43a4dc:	89 ce                	mov    %ecx,%esi
  43a4de:	48 8b bd 28 f9 ff ff 	mov    -0x6d8(%rbp),%rdi
  43a4e5:	48 83 c7 08          	add    $0x8,%rdi
  43a4e9:	48 89 85 70 f5 ff ff 	mov    %rax,-0xa90(%rbp)
  43a4f0:	e8 07 b8 00 00       	callq  445cfc <setEncryptedValueQWord>
  43a4f5:	31 c9                	xor    %ecx,%ecx
  43a4f7:	89 ce                	mov    %ecx,%esi
  43a4f9:	48 8b bd 28 f9 ff ff 	mov    -0x6d8(%rbp),%rdi
  43a500:	48 83 c7 10          	add    $0x10,%rdi
  43a504:	48 89 85 68 f5 ff ff 	mov    %rax,-0xa98(%rbp)
  43a50b:	e8 ec b7 00 00       	callq  445cfc <setEncryptedValueQWord>
  43a510:	48 8d b5 50 f6 ff ff 	lea    -0x9b0(%rbp),%rsi
  43a517:	48 89 b5 30 f9 ff ff 	mov    %rsi,-0x6d0(%rbp)
  43a51e:	48 8b b5 30 f9 ff ff 	mov    -0x6d0(%rbp),%rsi
  43a525:	48 89 f7             	mov    %rsi,%rdi
  43a528:	be 01 00 00 00       	mov    $0x1,%esi
  43a52d:	48 89 85 60 f5 ff ff 	mov    %rax,-0xaa0(%rbp)
  43a534:	e8 c5 b6 00 00       	callq  445bfe <setEncryptedValueDWord>
  43a539:	31 c9                	xor    %ecx,%ecx
  43a53b:	89 ce                	mov    %ecx,%esi
  43a53d:	48 8b bd 30 f9 ff ff 	mov    -0x6d0(%rbp),%rdi
  43a544:	48 83 c7 08          	add    $0x8,%rdi
  43a548:	48 89 85 58 f5 ff ff 	mov    %rax,-0xaa8(%rbp)
  43a54f:	e8 a8 b7 00 00       	callq  445cfc <setEncryptedValueQWord>
  43a554:	31 c9                	xor    %ecx,%ecx
  43a556:	89 ce                	mov    %ecx,%esi
  43a558:	48 8b bd 30 f9 ff ff 	mov    -0x6d0(%rbp),%rdi
  43a55f:	48 83 c7 10          	add    $0x10,%rdi
  43a563:	48 89 85 50 f5 ff ff 	mov    %rax,-0xab0(%rbp)
  43a56a:	e8 8d b7 00 00       	callq  445cfc <setEncryptedValueQWord>
  43a56f:	48 8d b5 20 f6 ff ff 	lea    -0x9e0(%rbp),%rsi
  43a576:	48 89 b5 60 f9 ff ff 	mov    %rsi,-0x6a0(%rbp)
  43a57d:	48 8b b5 60 f9 ff ff 	mov    -0x6a0(%rbp),%rsi
  43a584:	48 89 f7             	mov    %rsi,%rdi
  43a587:	be 01 00 00 00       	mov    $0x1,%esi
  43a58c:	48 89 85 48 f5 ff ff 	mov    %rax,-0xab8(%rbp)
  43a593:	e8 66 b6 00 00       	callq  445bfe <setEncryptedValueDWord>
  43a598:	31 c9                	xor    %ecx,%ecx
  43a59a:	89 ce                	mov    %ecx,%esi
  43a59c:	48 8b bd 60 f9 ff ff 	mov    -0x6a0(%rbp),%rdi
  43a5a3:	48 83 c7 08          	add    $0x8,%rdi
  43a5a7:	48 89 85 40 f5 ff ff 	mov    %rax,-0xac0(%rbp)
  43a5ae:	e8 49 b7 00 00       	callq  445cfc <setEncryptedValueQWord>
  43a5b3:	31 c9                	xor    %ecx,%ecx
  43a5b5:	89 ce                	mov    %ecx,%esi
  43a5b7:	48 8b bd 60 f9 ff ff 	mov    -0x6a0(%rbp),%rdi
  43a5be:	48 83 c7 10          	add    $0x10,%rdi
  43a5c2:	48 89 85 38 f5 ff ff 	mov    %rax,-0xac8(%rbp)
  43a5c9:	e8 2e b7 00 00       	callq  445cfc <setEncryptedValueQWord>
  43a5ce:	48 89 85 30 f5 ff ff 	mov    %rax,-0xad0(%rbp)
  43a5d5:	48 8b b5 28 f8 ff ff 	mov    -0x7d8(%rbp),%rsi
  43a5dc:	48 8b 85 40 f8 ff ff 	mov    -0x7c0(%rbp),%rax
  43a5e3:	48 83 c0 08          	add    $0x8,%rax
  43a5e7:	48 89 c7             	mov    %rax,%rdi
  43a5ea:	48 89 b5 28 f5 ff ff 	mov    %rsi,-0xad8(%rbp)
  43a5f1:	e8 52 bb 00 00       	callq  446148 <getDecryptedValueQWord>
  43a5f6:	48 8d bd e0 f7 ff ff 	lea    -0x820(%rbp),%rdi
  43a5fd:	48 8b b5 28 f5 ff ff 	mov    -0xad8(%rbp),%rsi
  43a604:	48 89 c2             	mov    %rax,%rdx
  43a607:	e8 c4 6d fe ff       	callq  4213d0 <mbedtls_mpi_read_binary>
  43a60c:	89 85 1c f8 ff ff    	mov    %eax,-0x7e4(%rbp)
  43a612:	83 f8 00             	cmp    $0x0,%eax
  43a615:	74 05                	je     43a61c <mbedtls_rsa_private+0x49c>
  43a617:	e9 0b 0e 00 00       	jmpq   43b427 <mbedtls_rsa_private+0x12a7>
  43a61c:	eb 00                	jmp    43a61e <mbedtls_rsa_private+0x49e>
  43a61e:	48 8b 85 40 f8 ff ff 	mov    -0x7c0(%rbp),%rax
  43a625:	48 83 c0 10          	add    $0x10,%rax
  43a629:	48 8d bd e0 f7 ff ff 	lea    -0x820(%rbp),%rdi
  43a630:	48 89 c6             	mov    %rax,%rsi
  43a633:	e8 18 44 fe ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  43a638:	83 f8 00             	cmp    $0x0,%eax
  43a63b:	7c 0f                	jl     43a64c <mbedtls_rsa_private+0x4cc>
  43a63d:	c7 85 1c f8 ff ff fc 	movl   $0xfffffffc,-0x7e4(%rbp)
  43a644:	ff ff ff 
  43a647:	e9 db 0d 00 00       	jmpq   43b427 <mbedtls_rsa_private+0x12a7>
  43a64c:	eb 00                	jmp    43a64e <mbedtls_rsa_private+0x4ce>
  43a64e:	48 8d bd 50 f6 ff ff 	lea    -0x9b0(%rbp),%rdi
  43a655:	48 8d b5 e0 f7 ff ff 	lea    -0x820(%rbp),%rsi
  43a65c:	e8 3f 07 fe ff       	callq  41ada0 <mbedtls_mpi_copy>
  43a661:	89 85 1c f8 ff ff    	mov    %eax,-0x7e4(%rbp)
  43a667:	83 f8 00             	cmp    $0x0,%eax
  43a66a:	74 05                	je     43a671 <mbedtls_rsa_private+0x4f1>
  43a66c:	e9 b6 0d 00 00       	jmpq   43b427 <mbedtls_rsa_private+0x12a7>
  43a671:	eb 00                	jmp    43a673 <mbedtls_rsa_private+0x4f3>
  43a673:	48 83 bd 38 f8 ff ff 	cmpq   $0x0,-0x7c8(%rbp)
  43a67a:	00 
  43a67b:	0f 84 c1 0a 00 00    	je     43b142 <mbedtls_rsa_private+0xfc2>
  43a681:	eb 00                	jmp    43a683 <mbedtls_rsa_private+0x503>
  43a683:	48 8b 85 40 f8 ff ff 	mov    -0x7c0(%rbp),%rax
  43a68a:	48 8b 8d 38 f8 ff ff 	mov    -0x7c8(%rbp),%rcx
  43a691:	48 8b 95 30 f8 ff ff 	mov    -0x7d0(%rbp),%rdx
  43a698:	48 89 85 80 f9 ff ff 	mov    %rax,-0x680(%rbp)
  43a69f:	48 89 8d 78 f9 ff ff 	mov    %rcx,-0x688(%rbp)
  43a6a6:	48 89 95 70 f9 ff ff 	mov    %rdx,-0x690(%rbp)
  43a6ad:	c7 85 68 f9 ff ff 00 	movl   $0x0,-0x698(%rbp)
  43a6b4:	00 00 00 
  43a6b7:	48 8b 85 80 f9 ff ff 	mov    -0x680(%rbp),%rax
  43a6be:	48 05 30 01 00 00    	add    $0x130,%rax
  43a6c4:	48 83 c0 10          	add    $0x10,%rax
  43a6c8:	48 89 c7             	mov    %rax,%rdi
  43a6cb:	e8 78 ba 00 00       	callq  446148 <getDecryptedValueQWord>
  43a6d0:	48 83 f8 00          	cmp    $0x0,%rax
  43a6d4:	0f 84 0f 01 00 00    	je     43a7e9 <mbedtls_rsa_private+0x669>
  43a6da:	48 8b 85 80 f9 ff ff 	mov    -0x680(%rbp),%rax
  43a6e1:	48 05 18 01 00 00    	add    $0x118,%rax
  43a6e7:	48 8b 8d 80 f9 ff ff 	mov    -0x680(%rbp),%rcx
  43a6ee:	48 81 c1 18 01 00 00 	add    $0x118,%rcx
  43a6f5:	48 8b 95 80 f9 ff ff 	mov    -0x680(%rbp),%rdx
  43a6fc:	48 81 c2 18 01 00 00 	add    $0x118,%rdx
  43a703:	48 89 c7             	mov    %rax,%rdi
  43a706:	48 89 ce             	mov    %rcx,%rsi
  43a709:	e8 b2 1e fe ff       	callq  41c5c0 <mbedtls_mpi_mul_mpi>
  43a70e:	89 85 6c f9 ff ff    	mov    %eax,-0x694(%rbp)
  43a714:	83 f8 00             	cmp    $0x0,%eax
  43a717:	74 05                	je     43a71e <mbedtls_rsa_private+0x59e>
  43a719:	e9 2e 04 00 00       	jmpq   43ab4c <mbedtls_rsa_private+0x9cc>
  43a71e:	48 8b 85 80 f9 ff ff 	mov    -0x680(%rbp),%rax
  43a725:	48 05 18 01 00 00    	add    $0x118,%rax
  43a72b:	48 8b 8d 80 f9 ff ff 	mov    -0x680(%rbp),%rcx
  43a732:	48 81 c1 18 01 00 00 	add    $0x118,%rcx
  43a739:	48 8b 95 80 f9 ff ff 	mov    -0x680(%rbp),%rdx
  43a740:	48 83 c2 10          	add    $0x10,%rdx
  43a744:	48 89 c7             	mov    %rax,%rdi
  43a747:	48 89 ce             	mov    %rcx,%rsi
  43a74a:	e8 41 72 fe ff       	callq  421990 <mbedtls_mpi_mod_mpi>
  43a74f:	89 85 6c f9 ff ff    	mov    %eax,-0x694(%rbp)
  43a755:	83 f8 00             	cmp    $0x0,%eax
  43a758:	74 05                	je     43a75f <mbedtls_rsa_private+0x5df>
  43a75a:	e9 ed 03 00 00       	jmpq   43ab4c <mbedtls_rsa_private+0x9cc>
  43a75f:	48 8b 85 80 f9 ff ff 	mov    -0x680(%rbp),%rax
  43a766:	48 05 30 01 00 00    	add    $0x130,%rax
  43a76c:	48 8b 8d 80 f9 ff ff 	mov    -0x680(%rbp),%rcx
  43a773:	48 81 c1 30 01 00 00 	add    $0x130,%rcx
  43a77a:	48 8b 95 80 f9 ff ff 	mov    -0x680(%rbp),%rdx
  43a781:	48 81 c2 30 01 00 00 	add    $0x130,%rdx
  43a788:	48 89 c7             	mov    %rax,%rdi
  43a78b:	48 89 ce             	mov    %rcx,%rsi
  43a78e:	e8 2d 1e fe ff       	callq  41c5c0 <mbedtls_mpi_mul_mpi>
  43a793:	89 85 6c f9 ff ff    	mov    %eax,-0x694(%rbp)
  43a799:	83 f8 00             	cmp    $0x0,%eax
  43a79c:	74 05                	je     43a7a3 <mbedtls_rsa_private+0x623>
  43a79e:	e9 a9 03 00 00       	jmpq   43ab4c <mbedtls_rsa_private+0x9cc>
  43a7a3:	48 8b 85 80 f9 ff ff 	mov    -0x680(%rbp),%rax
  43a7aa:	48 05 30 01 00 00    	add    $0x130,%rax
  43a7b0:	48 8b 8d 80 f9 ff ff 	mov    -0x680(%rbp),%rcx
  43a7b7:	48 81 c1 30 01 00 00 	add    $0x130,%rcx
  43a7be:	48 8b 95 80 f9 ff ff 	mov    -0x680(%rbp),%rdx
  43a7c5:	48 83 c2 10          	add    $0x10,%rdx
  43a7c9:	48 89 c7             	mov    %rax,%rdi
  43a7cc:	48 89 ce             	mov    %rcx,%rsi
  43a7cf:	e8 bc 71 fe ff       	callq  421990 <mbedtls_mpi_mod_mpi>
  43a7d4:	89 85 6c f9 ff ff    	mov    %eax,-0x694(%rbp)
  43a7da:	83 f8 00             	cmp    $0x0,%eax
  43a7dd:	74 05                	je     43a7e4 <mbedtls_rsa_private+0x664>
  43a7df:	e9 68 03 00 00       	jmpq   43ab4c <mbedtls_rsa_private+0x9cc>
  43a7e4:	e9 63 03 00 00       	jmpq   43ab4c <mbedtls_rsa_private+0x9cc>
  43a7e9:	eb 00                	jmp    43a7eb <mbedtls_rsa_private+0x66b>
  43a7eb:	8b 85 68 f9 ff ff    	mov    -0x698(%rbp),%eax
  43a7f1:	89 c1                	mov    %eax,%ecx
  43a7f3:	83 c1 01             	add    $0x1,%ecx
  43a7f6:	89 8d 68 f9 ff ff    	mov    %ecx,-0x698(%rbp)
  43a7fc:	83 f8 0a             	cmp    $0xa,%eax
  43a7ff:	7e 0f                	jle    43a810 <mbedtls_rsa_private+0x690>
  43a801:	c7 85 8c f9 ff ff 80 	movl   $0xffffbb80,-0x674(%rbp)
  43a808:	bb ff ff 
  43a80b:	e9 48 03 00 00       	jmpq   43ab58 <mbedtls_rsa_private+0x9d8>
  43a810:	48 8b 85 80 f9 ff ff 	mov    -0x680(%rbp),%rax
  43a817:	48 05 30 01 00 00    	add    $0x130,%rax
  43a81d:	48 8b 8d 80 f9 ff ff 	mov    -0x680(%rbp),%rcx
  43a824:	48 83 c1 08          	add    $0x8,%rcx
  43a828:	48 89 cf             	mov    %rcx,%rdi
  43a82b:	48 89 85 20 f5 ff ff 	mov    %rax,-0xae0(%rbp)
  43a832:	e8 11 b9 00 00       	callq  446148 <getDecryptedValueQWord>
  43a837:	48 83 e8 01          	sub    $0x1,%rax
  43a83b:	48 8b 8d 78 f9 ff ff 	mov    -0x688(%rbp),%rcx
  43a842:	48 8b bd 70 f9 ff ff 	mov    -0x690(%rbp),%rdi
  43a849:	48 8b 95 20 f5 ff ff 	mov    -0xae0(%rbp),%rdx
  43a850:	48 89 95 b0 fd ff ff 	mov    %rdx,-0x250(%rbp)
  43a857:	48 89 85 a8 fd ff ff 	mov    %rax,-0x258(%rbp)
  43a85e:	48 89 8d a0 fd ff ff 	mov    %rcx,-0x260(%rbp)
  43a865:	48 89 bd 98 fd ff ff 	mov    %rdi,-0x268(%rbp)
  43a86c:	48 81 bd a8 fd ff ff 	cmpq   $0x400,-0x258(%rbp)
  43a873:	00 04 00 00 
  43a877:	76 0f                	jbe    43a888 <mbedtls_rsa_private+0x708>
  43a879:	c7 85 bc fd ff ff fc 	movl   $0xfffffffc,-0x244(%rbp)
  43a880:	ff ff ff 
  43a883:	e9 9a 00 00 00       	jmpq   43a922 <mbedtls_rsa_private+0x7a2>
  43a888:	48 8d b5 90 f9 ff ff 	lea    -0x670(%rbp),%rsi
  43a88f:	48 8b 85 a0 fd ff ff 	mov    -0x260(%rbp),%rax
  43a896:	48 8b bd 98 fd ff ff 	mov    -0x268(%rbp),%rdi
  43a89d:	48 8b 95 a8 fd ff ff 	mov    -0x258(%rbp),%rdx
  43a8a4:	ff d0                	callq  *%rax
  43a8a6:	89 85 94 fd ff ff    	mov    %eax,-0x26c(%rbp)
  43a8ac:	83 f8 00             	cmp    $0x0,%eax
  43a8af:	74 02                	je     43a8b3 <mbedtls_rsa_private+0x733>
  43a8b1:	eb 29                	jmp    43a8dc <mbedtls_rsa_private+0x75c>
  43a8b3:	48 8d b5 90 f9 ff ff 	lea    -0x670(%rbp),%rsi
  43a8ba:	48 8b bd b0 fd ff ff 	mov    -0x250(%rbp),%rdi
  43a8c1:	48 8b 95 a8 fd ff ff 	mov    -0x258(%rbp),%rdx
  43a8c8:	e8 03 6b fe ff       	callq  4213d0 <mbedtls_mpi_read_binary>
  43a8cd:	89 85 94 fd ff ff    	mov    %eax,-0x26c(%rbp)
  43a8d3:	83 f8 00             	cmp    $0x0,%eax
  43a8d6:	74 02                	je     43a8da <mbedtls_rsa_private+0x75a>
  43a8d8:	eb 02                	jmp    43a8dc <mbedtls_rsa_private+0x75c>
  43a8da:	eb 00                	jmp    43a8dc <mbedtls_rsa_private+0x75c>
  43a8dc:	31 f6                	xor    %esi,%esi
  43a8de:	48 8d 85 90 f9 ff ff 	lea    -0x670(%rbp),%rax
  43a8e5:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
  43a8ec:	48 c7 85 c0 fd ff ff 	movq   $0x400,-0x240(%rbp)
  43a8f3:	00 04 00 00 
  43a8f7:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  43a8fe:	00 
  43a8ff:	48 8b bd c8 fd ff ff 	mov    -0x238(%rbp),%rdi
  43a906:	48 8b 95 c0 fd ff ff 	mov    -0x240(%rbp),%rdx
  43a90d:	ff d0                	callq  *%rax
  43a90f:	8b b5 94 fd ff ff    	mov    -0x26c(%rbp),%esi
  43a915:	89 b5 bc fd ff ff    	mov    %esi,-0x244(%rbp)
  43a91b:	48 89 85 18 f5 ff ff 	mov    %rax,-0xae8(%rbp)
  43a922:	8b 85 bc fd ff ff    	mov    -0x244(%rbp),%eax
  43a928:	89 85 6c f9 ff ff    	mov    %eax,-0x694(%rbp)
  43a92e:	83 f8 00             	cmp    $0x0,%eax
  43a931:	74 05                	je     43a938 <mbedtls_rsa_private+0x7b8>
  43a933:	e9 14 02 00 00       	jmpq   43ab4c <mbedtls_rsa_private+0x9cc>
  43a938:	48 8b 85 80 f9 ff ff 	mov    -0x680(%rbp),%rax
  43a93f:	48 05 18 01 00 00    	add    $0x118,%rax
  43a945:	48 8b 8d 80 f9 ff ff 	mov    -0x680(%rbp),%rcx
  43a94c:	48 81 c1 30 01 00 00 	add    $0x130,%rcx
  43a953:	48 8b 95 80 f9 ff ff 	mov    -0x680(%rbp),%rdx
  43a95a:	48 83 c2 10          	add    $0x10,%rdx
  43a95e:	48 89 c7             	mov    %rax,%rdi
  43a961:	48 89 ce             	mov    %rcx,%rsi
  43a964:	e8 07 93 fe ff       	callq  423c70 <mbedtls_mpi_gcd>
  43a969:	89 85 6c f9 ff ff    	mov    %eax,-0x694(%rbp)
  43a96f:	83 f8 00             	cmp    $0x0,%eax
  43a972:	74 05                	je     43a979 <mbedtls_rsa_private+0x7f9>
  43a974:	e9 d3 01 00 00       	jmpq   43ab4c <mbedtls_rsa_private+0x9cc>
  43a979:	48 8b 85 80 f9 ff ff 	mov    -0x680(%rbp),%rax
  43a980:	48 05 18 01 00 00    	add    $0x118,%rax
  43a986:	48 89 85 10 f5 ff ff 	mov    %rax,-0xaf0(%rbp)
  43a98d:	e8 c4 af 00 00       	callq  445956 <writeback_cache>
  43a992:	48 8b 85 10 f5 ff ff 	mov    -0xaf0(%rbp),%rax
  43a999:	48 89 85 28 fe ff ff 	mov    %rax,-0x1d8(%rbp)
  43a9a0:	48 c7 85 20 fe ff ff 	movq   $0x1,-0x1e0(%rbp)
  43a9a7:	01 00 00 00 
  43a9ab:	48 83 bd 20 fe ff ff 	cmpq   $0x0,-0x1e0(%rbp)
  43a9b2:	00 
  43a9b3:	7d 14                	jge    43a9c9 <mbedtls_rsa_private+0x849>
  43a9b5:	31 c0                	xor    %eax,%eax
  43a9b7:	89 c1                	mov    %eax,%ecx
  43a9b9:	48 2b 8d 20 fe ff ff 	sub    -0x1e0(%rbp),%rcx
  43a9c0:	48 89 8d 08 f5 ff ff 	mov    %rcx,-0xaf8(%rbp)
  43a9c7:	eb 0e                	jmp    43a9d7 <mbedtls_rsa_private+0x857>
  43a9c9:	48 8b 85 20 fe ff ff 	mov    -0x1e0(%rbp),%rax
  43a9d0:	48 89 85 08 f5 ff ff 	mov    %rax,-0xaf8(%rbp)
  43a9d7:	48 8b 85 08 f5 ff ff 	mov    -0xaf8(%rbp),%rax
  43a9de:	48 8d 8d d0 fd ff ff 	lea    -0x230(%rbp),%rcx
  43a9e5:	48 89 cf             	mov    %rcx,%rdi
  43a9e8:	48 89 c6             	mov    %rax,%rsi
  43a9eb:	e8 0c b3 00 00       	callq  445cfc <setEncryptedValueQWord>
  43a9f0:	48 8d 8d f0 fd ff ff 	lea    -0x210(%rbp),%rcx
  43a9f7:	48 8b b5 20 fe ff ff 	mov    -0x1e0(%rbp),%rsi
  43a9fe:	48 83 fe 00          	cmp    $0x0,%rsi
  43aa02:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  43aa07:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  43aa0d:	44 0f 4c c2          	cmovl  %edx,%r8d
  43aa11:	48 89 cf             	mov    %rcx,%rdi
  43aa14:	44 89 c6             	mov    %r8d,%esi
  43aa17:	48 89 85 00 f5 ff ff 	mov    %rax,-0xb00(%rbp)
  43aa1e:	e8 db b1 00 00       	callq  445bfe <setEncryptedValueDWord>
  43aa23:	ba 01 00 00 00       	mov    $0x1,%edx
  43aa28:	89 d6                	mov    %edx,%esi
  43aa2a:	48 8d 8d f0 fd ff ff 	lea    -0x210(%rbp),%rcx
  43aa31:	48 83 c1 08          	add    $0x8,%rcx
  43aa35:	48 89 cf             	mov    %rcx,%rdi
  43aa38:	48 89 85 f8 f4 ff ff 	mov    %rax,-0xb08(%rbp)
  43aa3f:	e8 b8 b2 00 00       	callq  445cfc <setEncryptedValueQWord>
  43aa44:	48 8d b5 d0 fd ff ff 	lea    -0x230(%rbp),%rsi
  43aa4b:	48 8d 8d f0 fd ff ff 	lea    -0x210(%rbp),%rcx
  43aa52:	48 83 c1 10          	add    $0x10,%rcx
  43aa56:	48 89 cf             	mov    %rcx,%rdi
  43aa59:	48 89 85 f0 f4 ff ff 	mov    %rax,-0xb10(%rbp)
  43aa60:	e8 97 b2 00 00       	callq  445cfc <setEncryptedValueQWord>
  43aa65:	48 8b bd 28 fe ff ff 	mov    -0x1d8(%rbp),%rdi
  43aa6c:	48 8d b5 f0 fd ff ff 	lea    -0x210(%rbp),%rsi
  43aa73:	48 89 85 e8 f4 ff ff 	mov    %rax,-0xb18(%rbp)
  43aa7a:	e8 d1 3f fe ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  43aa7f:	89 85 e4 f4 ff ff    	mov    %eax,-0xb1c(%rbp)
  43aa85:	e8 cc ae 00 00       	callq  445956 <writeback_cache>
  43aa8a:	8b 85 e4 f4 ff ff    	mov    -0xb1c(%rbp),%eax
  43aa90:	83 f8 00             	cmp    $0x0,%eax
  43aa93:	0f 85 52 fd ff ff    	jne    43a7eb <mbedtls_rsa_private+0x66b>
  43aa99:	48 8b 85 80 f9 ff ff 	mov    -0x680(%rbp),%rax
  43aaa0:	48 05 18 01 00 00    	add    $0x118,%rax
  43aaa6:	48 8b 8d 80 f9 ff ff 	mov    -0x680(%rbp),%rcx
  43aaad:	48 81 c1 30 01 00 00 	add    $0x130,%rcx
  43aab4:	48 8b 95 80 f9 ff ff 	mov    -0x680(%rbp),%rdx
  43aabb:	48 83 c2 10          	add    $0x10,%rdx
  43aabf:	48 89 c7             	mov    %rax,%rdi
  43aac2:	48 89 ce             	mov    %rcx,%rsi
  43aac5:	e8 a6 9d fe ff       	callq  424870 <mbedtls_mpi_inv_mod>
  43aaca:	89 85 6c f9 ff ff    	mov    %eax,-0x694(%rbp)
  43aad0:	83 f8 00             	cmp    $0x0,%eax
  43aad3:	74 02                	je     43aad7 <mbedtls_rsa_private+0x957>
  43aad5:	eb 75                	jmp    43ab4c <mbedtls_rsa_private+0x9cc>
  43aad7:	48 8b 85 80 f9 ff ff 	mov    -0x680(%rbp),%rax
  43aade:	48 05 18 01 00 00    	add    $0x118,%rax
  43aae4:	48 8b 8d 80 f9 ff ff 	mov    -0x680(%rbp),%rcx
  43aaeb:	48 81 c1 18 01 00 00 	add    $0x118,%rcx
  43aaf2:	48 8b 95 80 f9 ff ff 	mov    -0x680(%rbp),%rdx
  43aaf9:	48 83 c2 28          	add    $0x28,%rdx
  43aafd:	48 8b b5 80 f9 ff ff 	mov    -0x680(%rbp),%rsi
  43ab04:	48 83 c6 10          	add    $0x10,%rsi
  43ab08:	48 8b bd 80 f9 ff ff 	mov    -0x680(%rbp),%rdi
  43ab0f:	48 81 c7 d0 00 00 00 	add    $0xd0,%rdi
  43ab16:	48 89 bd d8 f4 ff ff 	mov    %rdi,-0xb28(%rbp)
  43ab1d:	48 89 c7             	mov    %rax,%rdi
  43ab20:	48 89 b5 d0 f4 ff ff 	mov    %rsi,-0xb30(%rbp)
  43ab27:	48 89 ce             	mov    %rcx,%rsi
  43ab2a:	48 8b 8d d0 f4 ff ff 	mov    -0xb30(%rbp),%rcx
  43ab31:	4c 8b 85 d8 f4 ff ff 	mov    -0xb28(%rbp),%r8
  43ab38:	e8 53 71 fe ff       	callq  421c90 <mbedtls_mpi_exp_mod>
  43ab3d:	89 85 6c f9 ff ff    	mov    %eax,-0x694(%rbp)
  43ab43:	83 f8 00             	cmp    $0x0,%eax
  43ab46:	74 02                	je     43ab4a <mbedtls_rsa_private+0x9ca>
  43ab48:	eb 02                	jmp    43ab4c <mbedtls_rsa_private+0x9cc>
  43ab4a:	eb 00                	jmp    43ab4c <mbedtls_rsa_private+0x9cc>
  43ab4c:	8b 85 6c f9 ff ff    	mov    -0x694(%rbp),%eax
  43ab52:	89 85 8c f9 ff ff    	mov    %eax,-0x674(%rbp)
  43ab58:	8b 85 8c f9 ff ff    	mov    -0x674(%rbp),%eax
  43ab5e:	89 85 1c f8 ff ff    	mov    %eax,-0x7e4(%rbp)
  43ab64:	83 f8 00             	cmp    $0x0,%eax
  43ab67:	74 05                	je     43ab6e <mbedtls_rsa_private+0x9ee>
  43ab69:	e9 b9 08 00 00       	jmpq   43b427 <mbedtls_rsa_private+0x12a7>
  43ab6e:	eb 00                	jmp    43ab70 <mbedtls_rsa_private+0x9f0>
  43ab70:	eb 00                	jmp    43ab72 <mbedtls_rsa_private+0x9f2>
  43ab72:	48 8b 85 40 f8 ff ff 	mov    -0x7c0(%rbp),%rax
  43ab79:	48 05 18 01 00 00    	add    $0x118,%rax
  43ab7f:	48 8d 8d e0 f7 ff ff 	lea    -0x820(%rbp),%rcx
  43ab86:	48 89 cf             	mov    %rcx,%rdi
  43ab89:	48 89 ce             	mov    %rcx,%rsi
  43ab8c:	48 89 c2             	mov    %rax,%rdx
  43ab8f:	e8 2c 1a fe ff       	callq  41c5c0 <mbedtls_mpi_mul_mpi>
  43ab94:	89 85 1c f8 ff ff    	mov    %eax,-0x7e4(%rbp)
  43ab9a:	83 f8 00             	cmp    $0x0,%eax
  43ab9d:	74 05                	je     43aba4 <mbedtls_rsa_private+0xa24>
  43ab9f:	e9 83 08 00 00       	jmpq   43b427 <mbedtls_rsa_private+0x12a7>
  43aba4:	eb 00                	jmp    43aba6 <mbedtls_rsa_private+0xa26>
  43aba6:	eb 00                	jmp    43aba8 <mbedtls_rsa_private+0xa28>
  43aba8:	48 8b 85 40 f8 ff ff 	mov    -0x7c0(%rbp),%rax
  43abaf:	48 83 c0 10          	add    $0x10,%rax
  43abb3:	48 8d 8d e0 f7 ff ff 	lea    -0x820(%rbp),%rcx
  43abba:	48 89 cf             	mov    %rcx,%rdi
  43abbd:	48 89 ce             	mov    %rcx,%rsi
  43abc0:	48 89 c2             	mov    %rax,%rdx
  43abc3:	e8 c8 6d fe ff       	callq  421990 <mbedtls_mpi_mod_mpi>
  43abc8:	89 85 1c f8 ff ff    	mov    %eax,-0x7e4(%rbp)
  43abce:	83 f8 00             	cmp    $0x0,%eax
  43abd1:	74 05                	je     43abd8 <mbedtls_rsa_private+0xa58>
  43abd3:	e9 4f 08 00 00       	jmpq   43b427 <mbedtls_rsa_private+0x12a7>
  43abd8:	eb 00                	jmp    43abda <mbedtls_rsa_private+0xa5a>
  43abda:	eb 00                	jmp    43abdc <mbedtls_rsa_private+0xa5c>
  43abdc:	48 8b 85 40 f8 ff ff 	mov    -0x7c0(%rbp),%rax
  43abe3:	48 83 c0 58          	add    $0x58,%rax
  43abe7:	48 89 85 c8 f4 ff ff 	mov    %rax,-0xb38(%rbp)
  43abee:	e8 63 ad 00 00       	callq  445956 <writeback_cache>
  43abf3:	48 8d 85 b0 f7 ff ff 	lea    -0x850(%rbp),%rax
  43abfa:	48 89 85 68 fe ff ff 	mov    %rax,-0x198(%rbp)
  43ac01:	48 8b 85 c8 f4 ff ff 	mov    -0xb38(%rbp),%rax
  43ac08:	48 89 85 60 fe ff ff 	mov    %rax,-0x1a0(%rbp)
  43ac0f:	48 c7 85 58 fe ff ff 	movq   $0x1,-0x1a8(%rbp)
  43ac16:	01 00 00 00 
  43ac1a:	48 83 bd 58 fe ff ff 	cmpq   $0x0,-0x1a8(%rbp)
  43ac21:	00 
  43ac22:	7d 14                	jge    43ac38 <mbedtls_rsa_private+0xab8>
  43ac24:	31 c0                	xor    %eax,%eax
  43ac26:	89 c1                	mov    %eax,%ecx
  43ac28:	48 2b 8d 58 fe ff ff 	sub    -0x1a8(%rbp),%rcx
  43ac2f:	48 89 8d c0 f4 ff ff 	mov    %rcx,-0xb40(%rbp)
  43ac36:	eb 0e                	jmp    43ac46 <mbedtls_rsa_private+0xac6>
  43ac38:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
  43ac3f:	48 89 85 c0 f4 ff ff 	mov    %rax,-0xb40(%rbp)
  43ac46:	48 8b 85 c0 f4 ff ff 	mov    -0xb40(%rbp),%rax
  43ac4d:	48 8d 8d d0 fd ff ff 	lea    -0x230(%rbp),%rcx
  43ac54:	48 89 cf             	mov    %rcx,%rdi
  43ac57:	48 89 c6             	mov    %rax,%rsi
  43ac5a:	e8 9d b0 00 00       	callq  445cfc <setEncryptedValueQWord>
  43ac5f:	48 8d 8d 30 fe ff ff 	lea    -0x1d0(%rbp),%rcx
  43ac66:	48 8b b5 58 fe ff ff 	mov    -0x1a8(%rbp),%rsi
  43ac6d:	48 83 fe 00          	cmp    $0x0,%rsi
  43ac71:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  43ac76:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  43ac7c:	44 0f 4c c2          	cmovl  %edx,%r8d
  43ac80:	48 89 cf             	mov    %rcx,%rdi
  43ac83:	44 89 c6             	mov    %r8d,%esi
  43ac86:	48 89 85 b8 f4 ff ff 	mov    %rax,-0xb48(%rbp)
  43ac8d:	e8 6c af 00 00       	callq  445bfe <setEncryptedValueDWord>
  43ac92:	ba 01 00 00 00       	mov    $0x1,%edx
  43ac97:	89 d6                	mov    %edx,%esi
  43ac99:	48 8d 8d 30 fe ff ff 	lea    -0x1d0(%rbp),%rcx
  43aca0:	48 83 c1 08          	add    $0x8,%rcx
  43aca4:	48 89 cf             	mov    %rcx,%rdi
  43aca7:	48 89 85 b0 f4 ff ff 	mov    %rax,-0xb50(%rbp)
  43acae:	e8 49 b0 00 00       	callq  445cfc <setEncryptedValueQWord>
  43acb3:	48 8d b5 d0 fd ff ff 	lea    -0x230(%rbp),%rsi
  43acba:	48 8d 8d 30 fe ff ff 	lea    -0x1d0(%rbp),%rcx
  43acc1:	48 83 c1 10          	add    $0x10,%rcx
  43acc5:	48 89 cf             	mov    %rcx,%rdi
  43acc8:	48 89 85 a8 f4 ff ff 	mov    %rax,-0xb58(%rbp)
  43accf:	e8 28 b0 00 00       	callq  445cfc <setEncryptedValueQWord>
  43acd4:	48 8b bd 68 fe ff ff 	mov    -0x198(%rbp),%rdi
  43acdb:	48 8b b5 60 fe ff ff 	mov    -0x1a0(%rbp),%rsi
  43ace2:	48 8d 95 30 fe ff ff 	lea    -0x1d0(%rbp),%rdx
  43ace9:	48 89 85 a0 f4 ff ff 	mov    %rax,-0xb60(%rbp)
  43acf0:	e8 3b 0c fe ff       	callq  41b930 <mbedtls_mpi_sub_mpi>
  43acf5:	89 85 9c f4 ff ff    	mov    %eax,-0xb64(%rbp)
  43acfb:	e8 56 ac 00 00       	callq  445956 <writeback_cache>
  43ad00:	8b 85 9c f4 ff ff    	mov    -0xb64(%rbp),%eax
  43ad06:	89 85 1c f8 ff ff    	mov    %eax,-0x7e4(%rbp)
  43ad0c:	83 f8 00             	cmp    $0x0,%eax
  43ad0f:	74 05                	je     43ad16 <mbedtls_rsa_private+0xb96>
  43ad11:	e9 11 07 00 00       	jmpq   43b427 <mbedtls_rsa_private+0x12a7>
  43ad16:	eb 00                	jmp    43ad18 <mbedtls_rsa_private+0xb98>
  43ad18:	eb 00                	jmp    43ad1a <mbedtls_rsa_private+0xb9a>
  43ad1a:	48 8b 85 40 f8 ff ff 	mov    -0x7c0(%rbp),%rax
  43ad21:	48 83 c0 70          	add    $0x70,%rax
  43ad25:	48 89 85 90 f4 ff ff 	mov    %rax,-0xb70(%rbp)
  43ad2c:	e8 25 ac 00 00       	callq  445956 <writeback_cache>
  43ad31:	48 8d 85 80 f7 ff ff 	lea    -0x880(%rbp),%rax
  43ad38:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
  43ad3f:	48 8b 85 90 f4 ff ff 	mov    -0xb70(%rbp),%rax
  43ad46:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
  43ad4d:	48 c7 85 a0 fe ff ff 	movq   $0x1,-0x160(%rbp)
  43ad54:	01 00 00 00 
  43ad58:	48 83 bd a0 fe ff ff 	cmpq   $0x0,-0x160(%rbp)
  43ad5f:	00 
  43ad60:	7d 14                	jge    43ad76 <mbedtls_rsa_private+0xbf6>
  43ad62:	31 c0                	xor    %eax,%eax
  43ad64:	89 c1                	mov    %eax,%ecx
  43ad66:	48 2b 8d a0 fe ff ff 	sub    -0x160(%rbp),%rcx
  43ad6d:	48 89 8d 88 f4 ff ff 	mov    %rcx,-0xb78(%rbp)
  43ad74:	eb 0e                	jmp    43ad84 <mbedtls_rsa_private+0xc04>
  43ad76:	48 8b 85 a0 fe ff ff 	mov    -0x160(%rbp),%rax
  43ad7d:	48 89 85 88 f4 ff ff 	mov    %rax,-0xb78(%rbp)
  43ad84:	48 8b 85 88 f4 ff ff 	mov    -0xb78(%rbp),%rax
  43ad8b:	48 8d 8d d0 fd ff ff 	lea    -0x230(%rbp),%rcx
  43ad92:	48 89 cf             	mov    %rcx,%rdi
  43ad95:	48 89 c6             	mov    %rax,%rsi
  43ad98:	e8 5f af 00 00       	callq  445cfc <setEncryptedValueQWord>
  43ad9d:	48 8d 8d 70 fe ff ff 	lea    -0x190(%rbp),%rcx
  43ada4:	48 8b b5 a0 fe ff ff 	mov    -0x160(%rbp),%rsi
  43adab:	48 83 fe 00          	cmp    $0x0,%rsi
  43adaf:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  43adb4:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  43adba:	44 0f 4c c2          	cmovl  %edx,%r8d
  43adbe:	48 89 cf             	mov    %rcx,%rdi
  43adc1:	44 89 c6             	mov    %r8d,%esi
  43adc4:	48 89 85 80 f4 ff ff 	mov    %rax,-0xb80(%rbp)
  43adcb:	e8 2e ae 00 00       	callq  445bfe <setEncryptedValueDWord>
  43add0:	ba 01 00 00 00       	mov    $0x1,%edx
  43add5:	89 d6                	mov    %edx,%esi
  43add7:	48 8d 8d 70 fe ff ff 	lea    -0x190(%rbp),%rcx
  43adde:	48 83 c1 08          	add    $0x8,%rcx
  43ade2:	48 89 cf             	mov    %rcx,%rdi
  43ade5:	48 89 85 78 f4 ff ff 	mov    %rax,-0xb88(%rbp)
  43adec:	e8 0b af 00 00       	callq  445cfc <setEncryptedValueQWord>
  43adf1:	48 8d b5 d0 fd ff ff 	lea    -0x230(%rbp),%rsi
  43adf8:	48 8d 8d 70 fe ff ff 	lea    -0x190(%rbp),%rcx
  43adff:	48 83 c1 10          	add    $0x10,%rcx
  43ae03:	48 89 cf             	mov    %rcx,%rdi
  43ae06:	48 89 85 70 f4 ff ff 	mov    %rax,-0xb90(%rbp)
  43ae0d:	e8 ea ae 00 00       	callq  445cfc <setEncryptedValueQWord>
  43ae12:	48 8b bd b0 fe ff ff 	mov    -0x150(%rbp),%rdi
  43ae19:	48 8b b5 a8 fe ff ff 	mov    -0x158(%rbp),%rsi
  43ae20:	48 8d 95 70 fe ff ff 	lea    -0x190(%rbp),%rdx
  43ae27:	48 89 85 68 f4 ff ff 	mov    %rax,-0xb98(%rbp)
  43ae2e:	e8 fd 0a fe ff       	callq  41b930 <mbedtls_mpi_sub_mpi>
  43ae33:	89 85 64 f4 ff ff    	mov    %eax,-0xb9c(%rbp)
  43ae39:	e8 18 ab 00 00       	callq  445956 <writeback_cache>
  43ae3e:	8b 85 64 f4 ff ff    	mov    -0xb9c(%rbp),%eax
  43ae44:	89 85 1c f8 ff ff    	mov    %eax,-0x7e4(%rbp)
  43ae4a:	83 f8 00             	cmp    $0x0,%eax
  43ae4d:	74 05                	je     43ae54 <mbedtls_rsa_private+0xcd4>
  43ae4f:	e9 d3 05 00 00       	jmpq   43b427 <mbedtls_rsa_private+0x12a7>
  43ae54:	eb 00                	jmp    43ae56 <mbedtls_rsa_private+0xcd6>
  43ae56:	eb 00                	jmp    43ae58 <mbedtls_rsa_private+0xcd8>
  43ae58:	48 8b 85 38 f8 ff ff 	mov    -0x7c8(%rbp),%rax
  43ae5f:	48 8b 8d 30 f8 ff ff 	mov    -0x7d0(%rbp),%rcx
  43ae66:	48 8d 95 50 f7 ff ff 	lea    -0x8b0(%rbp),%rdx
  43ae6d:	48 89 95 d8 fe ff ff 	mov    %rdx,-0x128(%rbp)
  43ae74:	48 c7 85 d0 fe ff ff 	movq   $0x1c,-0x130(%rbp)
  43ae7b:	1c 00 00 00 
  43ae7f:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
  43ae86:	48 89 8d c0 fe ff ff 	mov    %rcx,-0x140(%rbp)
  43ae8d:	48 81 bd d0 fe ff ff 	cmpq   $0x400,-0x130(%rbp)
  43ae94:	00 04 00 00 
  43ae98:	76 0f                	jbe    43aea9 <mbedtls_rsa_private+0xd29>
  43ae9a:	c7 85 e4 fe ff ff fc 	movl   $0xfffffffc,-0x11c(%rbp)
  43aea1:	ff ff ff 
  43aea4:	e9 9a 00 00 00       	jmpq   43af43 <mbedtls_rsa_private+0xdc3>
  43aea9:	48 8d b5 90 f9 ff ff 	lea    -0x670(%rbp),%rsi
  43aeb0:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  43aeb7:	48 8b bd c0 fe ff ff 	mov    -0x140(%rbp),%rdi
  43aebe:	48 8b 95 d0 fe ff ff 	mov    -0x130(%rbp),%rdx
  43aec5:	ff d0                	callq  *%rax
  43aec7:	89 85 bc fe ff ff    	mov    %eax,-0x144(%rbp)
  43aecd:	83 f8 00             	cmp    $0x0,%eax
  43aed0:	74 02                	je     43aed4 <mbedtls_rsa_private+0xd54>
  43aed2:	eb 29                	jmp    43aefd <mbedtls_rsa_private+0xd7d>
  43aed4:	48 8d b5 90 f9 ff ff 	lea    -0x670(%rbp),%rsi
  43aedb:	48 8b bd d8 fe ff ff 	mov    -0x128(%rbp),%rdi
  43aee2:	48 8b 95 d0 fe ff ff 	mov    -0x130(%rbp),%rdx
  43aee9:	e8 e2 64 fe ff       	callq  4213d0 <mbedtls_mpi_read_binary>
  43aeee:	89 85 bc fe ff ff    	mov    %eax,-0x144(%rbp)
  43aef4:	83 f8 00             	cmp    $0x0,%eax
  43aef7:	74 02                	je     43aefb <mbedtls_rsa_private+0xd7b>
  43aef9:	eb 02                	jmp    43aefd <mbedtls_rsa_private+0xd7d>
  43aefb:	eb 00                	jmp    43aefd <mbedtls_rsa_private+0xd7d>
  43aefd:	31 f6                	xor    %esi,%esi
  43aeff:	48 8d 85 90 f9 ff ff 	lea    -0x670(%rbp),%rax
  43af06:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
  43af0d:	48 c7 85 e8 fe ff ff 	movq   $0x400,-0x118(%rbp)
  43af14:	00 04 00 00 
  43af18:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  43af1f:	00 
  43af20:	48 8b bd f0 fe ff ff 	mov    -0x110(%rbp),%rdi
  43af27:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
  43af2e:	ff d0                	callq  *%rax
  43af30:	8b b5 bc fe ff ff    	mov    -0x144(%rbp),%esi
  43af36:	89 b5 e4 fe ff ff    	mov    %esi,-0x11c(%rbp)
  43af3c:	48 89 85 58 f4 ff ff 	mov    %rax,-0xba8(%rbp)
  43af43:	8b 85 e4 fe ff ff    	mov    -0x11c(%rbp),%eax
  43af49:	89 85 1c f8 ff ff    	mov    %eax,-0x7e4(%rbp)
  43af4f:	83 f8 00             	cmp    $0x0,%eax
  43af52:	74 05                	je     43af59 <mbedtls_rsa_private+0xdd9>
  43af54:	e9 ce 04 00 00       	jmpq   43b427 <mbedtls_rsa_private+0x12a7>
  43af59:	eb 00                	jmp    43af5b <mbedtls_rsa_private+0xddb>
  43af5b:	eb 00                	jmp    43af5d <mbedtls_rsa_private+0xddd>
  43af5d:	48 8d bd c0 f6 ff ff 	lea    -0x940(%rbp),%rdi
  43af64:	48 8d b5 b0 f7 ff ff 	lea    -0x850(%rbp),%rsi
  43af6b:	48 8d 95 50 f7 ff ff 	lea    -0x8b0(%rbp),%rdx
  43af72:	e8 49 16 fe ff       	callq  41c5c0 <mbedtls_mpi_mul_mpi>
  43af77:	89 85 1c f8 ff ff    	mov    %eax,-0x7e4(%rbp)
  43af7d:	83 f8 00             	cmp    $0x0,%eax
  43af80:	74 05                	je     43af87 <mbedtls_rsa_private+0xe07>
  43af82:	e9 a0 04 00 00       	jmpq   43b427 <mbedtls_rsa_private+0x12a7>
  43af87:	eb 00                	jmp    43af89 <mbedtls_rsa_private+0xe09>
  43af89:	eb 00                	jmp    43af8b <mbedtls_rsa_private+0xe0b>
  43af8b:	48 8b 85 40 f8 ff ff 	mov    -0x7c0(%rbp),%rax
  43af92:	48 05 88 00 00 00    	add    $0x88,%rax
  43af98:	48 8d 8d c0 f6 ff ff 	lea    -0x940(%rbp),%rcx
  43af9f:	48 89 cf             	mov    %rcx,%rdi
  43afa2:	48 89 ce             	mov    %rcx,%rsi
  43afa5:	48 89 c2             	mov    %rax,%rdx
  43afa8:	e8 f3 14 fe ff       	callq  41c4a0 <mbedtls_mpi_add_mpi>
  43afad:	89 85 1c f8 ff ff    	mov    %eax,-0x7e4(%rbp)
  43afb3:	83 f8 00             	cmp    $0x0,%eax
  43afb6:	74 05                	je     43afbd <mbedtls_rsa_private+0xe3d>
  43afb8:	e9 6a 04 00 00       	jmpq   43b427 <mbedtls_rsa_private+0x12a7>
  43afbd:	eb 00                	jmp    43afbf <mbedtls_rsa_private+0xe3f>
  43afbf:	48 8d 85 c0 f6 ff ff 	lea    -0x940(%rbp),%rax
  43afc6:	48 89 85 88 f6 ff ff 	mov    %rax,-0x978(%rbp)
  43afcd:	48 8b 85 38 f8 ff ff 	mov    -0x7c8(%rbp),%rax
  43afd4:	48 8b 8d 30 f8 ff ff 	mov    -0x7d0(%rbp),%rcx
  43afdb:	48 8d 95 50 f7 ff ff 	lea    -0x8b0(%rbp),%rdx
  43afe2:	48 89 95 18 ff ff ff 	mov    %rdx,-0xe8(%rbp)
  43afe9:	48 c7 85 10 ff ff ff 	movq   $0x1c,-0xf0(%rbp)
  43aff0:	1c 00 00 00 
  43aff4:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
  43affb:	48 89 8d 00 ff ff ff 	mov    %rcx,-0x100(%rbp)
  43b002:	48 81 bd 10 ff ff ff 	cmpq   $0x400,-0xf0(%rbp)
  43b009:	00 04 00 00 
  43b00d:	76 0f                	jbe    43b01e <mbedtls_rsa_private+0xe9e>
  43b00f:	c7 85 24 ff ff ff fc 	movl   $0xfffffffc,-0xdc(%rbp)
  43b016:	ff ff ff 
  43b019:	e9 9a 00 00 00       	jmpq   43b0b8 <mbedtls_rsa_private+0xf38>
  43b01e:	48 8d b5 90 f9 ff ff 	lea    -0x670(%rbp),%rsi
  43b025:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
  43b02c:	48 8b bd 00 ff ff ff 	mov    -0x100(%rbp),%rdi
  43b033:	48 8b 95 10 ff ff ff 	mov    -0xf0(%rbp),%rdx
  43b03a:	ff d0                	callq  *%rax
  43b03c:	89 85 fc fe ff ff    	mov    %eax,-0x104(%rbp)
  43b042:	83 f8 00             	cmp    $0x0,%eax
  43b045:	74 02                	je     43b049 <mbedtls_rsa_private+0xec9>
  43b047:	eb 29                	jmp    43b072 <mbedtls_rsa_private+0xef2>
  43b049:	48 8d b5 90 f9 ff ff 	lea    -0x670(%rbp),%rsi
  43b050:	48 8b bd 18 ff ff ff 	mov    -0xe8(%rbp),%rdi
  43b057:	48 8b 95 10 ff ff ff 	mov    -0xf0(%rbp),%rdx
  43b05e:	e8 6d 63 fe ff       	callq  4213d0 <mbedtls_mpi_read_binary>
  43b063:	89 85 fc fe ff ff    	mov    %eax,-0x104(%rbp)
  43b069:	83 f8 00             	cmp    $0x0,%eax
  43b06c:	74 02                	je     43b070 <mbedtls_rsa_private+0xef0>
  43b06e:	eb 02                	jmp    43b072 <mbedtls_rsa_private+0xef2>
  43b070:	eb 00                	jmp    43b072 <mbedtls_rsa_private+0xef2>
  43b072:	31 f6                	xor    %esi,%esi
  43b074:	48 8d 85 90 f9 ff ff 	lea    -0x670(%rbp),%rax
  43b07b:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
  43b082:	48 c7 85 28 ff ff ff 	movq   $0x400,-0xd8(%rbp)
  43b089:	00 04 00 00 
  43b08d:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  43b094:	00 
  43b095:	48 8b bd 30 ff ff ff 	mov    -0xd0(%rbp),%rdi
  43b09c:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
  43b0a3:	ff d0                	callq  *%rax
  43b0a5:	8b b5 fc fe ff ff    	mov    -0x104(%rbp),%esi
  43b0ab:	89 b5 24 ff ff ff    	mov    %esi,-0xdc(%rbp)
  43b0b1:	48 89 85 50 f4 ff ff 	mov    %rax,-0xbb0(%rbp)
  43b0b8:	8b 85 24 ff ff ff    	mov    -0xdc(%rbp),%eax
  43b0be:	89 85 1c f8 ff ff    	mov    %eax,-0x7e4(%rbp)
  43b0c4:	83 f8 00             	cmp    $0x0,%eax
  43b0c7:	74 05                	je     43b0ce <mbedtls_rsa_private+0xf4e>
  43b0c9:	e9 59 03 00 00       	jmpq   43b427 <mbedtls_rsa_private+0x12a7>
  43b0ce:	eb 00                	jmp    43b0d0 <mbedtls_rsa_private+0xf50>
  43b0d0:	eb 00                	jmp    43b0d2 <mbedtls_rsa_private+0xf52>
  43b0d2:	48 8d bd 90 f6 ff ff 	lea    -0x970(%rbp),%rdi
  43b0d9:	48 8d b5 80 f7 ff ff 	lea    -0x880(%rbp),%rsi
  43b0e0:	48 8d 95 50 f7 ff ff 	lea    -0x8b0(%rbp),%rdx
  43b0e7:	e8 d4 14 fe ff       	callq  41c5c0 <mbedtls_mpi_mul_mpi>
  43b0ec:	89 85 1c f8 ff ff    	mov    %eax,-0x7e4(%rbp)
  43b0f2:	83 f8 00             	cmp    $0x0,%eax
  43b0f5:	74 05                	je     43b0fc <mbedtls_rsa_private+0xf7c>
  43b0f7:	e9 2b 03 00 00       	jmpq   43b427 <mbedtls_rsa_private+0x12a7>
  43b0fc:	eb 00                	jmp    43b0fe <mbedtls_rsa_private+0xf7e>
  43b0fe:	eb 00                	jmp    43b100 <mbedtls_rsa_private+0xf80>
  43b100:	48 8b 85 40 f8 ff ff 	mov    -0x7c0(%rbp),%rax
  43b107:	48 05 a0 00 00 00    	add    $0xa0,%rax
  43b10d:	48 8d 8d 90 f6 ff ff 	lea    -0x970(%rbp),%rcx
  43b114:	48 89 cf             	mov    %rcx,%rdi
  43b117:	48 89 ce             	mov    %rcx,%rsi
  43b11a:	48 89 c2             	mov    %rax,%rdx
  43b11d:	e8 7e 13 fe ff       	callq  41c4a0 <mbedtls_mpi_add_mpi>
  43b122:	89 85 1c f8 ff ff    	mov    %eax,-0x7e4(%rbp)
  43b128:	83 f8 00             	cmp    $0x0,%eax
  43b12b:	74 05                	je     43b132 <mbedtls_rsa_private+0xfb2>
  43b12d:	e9 f5 02 00 00       	jmpq   43b427 <mbedtls_rsa_private+0x12a7>
  43b132:	eb 00                	jmp    43b134 <mbedtls_rsa_private+0xfb4>
  43b134:	48 8d 85 90 f6 ff ff 	lea    -0x970(%rbp),%rax
  43b13b:	48 89 85 80 f6 ff ff 	mov    %rax,-0x980(%rbp)
  43b142:	eb 00                	jmp    43b144 <mbedtls_rsa_private+0xfc4>
  43b144:	48 8b 95 88 f6 ff ff 	mov    -0x978(%rbp),%rdx
  43b14b:	48 8b 85 40 f8 ff ff 	mov    -0x7c0(%rbp),%rax
  43b152:	48 83 c0 58          	add    $0x58,%rax
  43b156:	48 8b 8d 40 f8 ff ff 	mov    -0x7c0(%rbp),%rcx
  43b15d:	48 81 c1 e8 00 00 00 	add    $0xe8,%rcx
  43b164:	48 8d bd 20 f7 ff ff 	lea    -0x8e0(%rbp),%rdi
  43b16b:	48 8d b5 e0 f7 ff ff 	lea    -0x820(%rbp),%rsi
  43b172:	48 89 8d 48 f4 ff ff 	mov    %rcx,-0xbb8(%rbp)
  43b179:	48 89 c1             	mov    %rax,%rcx
  43b17c:	4c 8b 85 48 f4 ff ff 	mov    -0xbb8(%rbp),%r8
  43b183:	e8 08 6b fe ff       	callq  421c90 <mbedtls_mpi_exp_mod>
  43b188:	89 85 1c f8 ff ff    	mov    %eax,-0x7e4(%rbp)
  43b18e:	83 f8 00             	cmp    $0x0,%eax
  43b191:	74 05                	je     43b198 <mbedtls_rsa_private+0x1018>
  43b193:	e9 8f 02 00 00       	jmpq   43b427 <mbedtls_rsa_private+0x12a7>
  43b198:	eb 00                	jmp    43b19a <mbedtls_rsa_private+0x101a>
  43b19a:	eb 00                	jmp    43b19c <mbedtls_rsa_private+0x101c>
  43b19c:	48 8b 95 80 f6 ff ff 	mov    -0x980(%rbp),%rdx
  43b1a3:	48 8b 85 40 f8 ff ff 	mov    -0x7c0(%rbp),%rax
  43b1aa:	48 83 c0 70          	add    $0x70,%rax
  43b1ae:	48 8b 8d 40 f8 ff ff 	mov    -0x7c0(%rbp),%rcx
  43b1b5:	48 81 c1 00 01 00 00 	add    $0x100,%rcx
  43b1bc:	48 8d bd f0 f6 ff ff 	lea    -0x910(%rbp),%rdi
  43b1c3:	48 8d b5 e0 f7 ff ff 	lea    -0x820(%rbp),%rsi
  43b1ca:	48 89 8d 40 f4 ff ff 	mov    %rcx,-0xbc0(%rbp)
  43b1d1:	48 89 c1             	mov    %rax,%rcx
  43b1d4:	4c 8b 85 40 f4 ff ff 	mov    -0xbc0(%rbp),%r8
  43b1db:	e8 b0 6a fe ff       	callq  421c90 <mbedtls_mpi_exp_mod>
  43b1e0:	89 85 1c f8 ff ff    	mov    %eax,-0x7e4(%rbp)
  43b1e6:	83 f8 00             	cmp    $0x0,%eax
  43b1e9:	74 05                	je     43b1f0 <mbedtls_rsa_private+0x1070>
  43b1eb:	e9 37 02 00 00       	jmpq   43b427 <mbedtls_rsa_private+0x12a7>
  43b1f0:	eb 00                	jmp    43b1f2 <mbedtls_rsa_private+0x1072>
  43b1f2:	eb 00                	jmp    43b1f4 <mbedtls_rsa_private+0x1074>
  43b1f4:	48 8d bd e0 f7 ff ff 	lea    -0x820(%rbp),%rdi
  43b1fb:	48 8d b5 20 f7 ff ff 	lea    -0x8e0(%rbp),%rsi
  43b202:	48 8d 95 f0 f6 ff ff 	lea    -0x910(%rbp),%rdx
  43b209:	e8 22 07 fe ff       	callq  41b930 <mbedtls_mpi_sub_mpi>
  43b20e:	89 85 1c f8 ff ff    	mov    %eax,-0x7e4(%rbp)
  43b214:	83 f8 00             	cmp    $0x0,%eax
  43b217:	74 05                	je     43b21e <mbedtls_rsa_private+0x109e>
  43b219:	e9 09 02 00 00       	jmpq   43b427 <mbedtls_rsa_private+0x12a7>
  43b21e:	eb 00                	jmp    43b220 <mbedtls_rsa_private+0x10a0>
  43b220:	eb 00                	jmp    43b222 <mbedtls_rsa_private+0x10a2>
  43b222:	48 8b 85 40 f8 ff ff 	mov    -0x7c0(%rbp),%rax
  43b229:	48 05 b8 00 00 00    	add    $0xb8,%rax
  43b22f:	48 8d bd 20 f7 ff ff 	lea    -0x8e0(%rbp),%rdi
  43b236:	48 8d b5 e0 f7 ff ff 	lea    -0x820(%rbp),%rsi
  43b23d:	48 89 c2             	mov    %rax,%rdx
  43b240:	e8 7b 13 fe ff       	callq  41c5c0 <mbedtls_mpi_mul_mpi>
  43b245:	89 85 1c f8 ff ff    	mov    %eax,-0x7e4(%rbp)
  43b24b:	83 f8 00             	cmp    $0x0,%eax
  43b24e:	74 05                	je     43b255 <mbedtls_rsa_private+0x10d5>
  43b250:	e9 d2 01 00 00       	jmpq   43b427 <mbedtls_rsa_private+0x12a7>
  43b255:	eb 00                	jmp    43b257 <mbedtls_rsa_private+0x10d7>
  43b257:	eb 00                	jmp    43b259 <mbedtls_rsa_private+0x10d9>
  43b259:	48 8b 85 40 f8 ff ff 	mov    -0x7c0(%rbp),%rax
  43b260:	48 83 c0 58          	add    $0x58,%rax
  43b264:	48 8d bd e0 f7 ff ff 	lea    -0x820(%rbp),%rdi
  43b26b:	48 8d b5 20 f7 ff ff 	lea    -0x8e0(%rbp),%rsi
  43b272:	48 89 c2             	mov    %rax,%rdx
  43b275:	e8 16 67 fe ff       	callq  421990 <mbedtls_mpi_mod_mpi>
  43b27a:	89 85 1c f8 ff ff    	mov    %eax,-0x7e4(%rbp)
  43b280:	83 f8 00             	cmp    $0x0,%eax
  43b283:	74 05                	je     43b28a <mbedtls_rsa_private+0x110a>
  43b285:	e9 9d 01 00 00       	jmpq   43b427 <mbedtls_rsa_private+0x12a7>
  43b28a:	eb 00                	jmp    43b28c <mbedtls_rsa_private+0x110c>
  43b28c:	eb 00                	jmp    43b28e <mbedtls_rsa_private+0x110e>
  43b28e:	48 8b 85 40 f8 ff ff 	mov    -0x7c0(%rbp),%rax
  43b295:	48 83 c0 70          	add    $0x70,%rax
  43b299:	48 8d bd 20 f7 ff ff 	lea    -0x8e0(%rbp),%rdi
  43b2a0:	48 8d b5 e0 f7 ff ff 	lea    -0x820(%rbp),%rsi
  43b2a7:	48 89 c2             	mov    %rax,%rdx
  43b2aa:	e8 11 13 fe ff       	callq  41c5c0 <mbedtls_mpi_mul_mpi>
  43b2af:	89 85 1c f8 ff ff    	mov    %eax,-0x7e4(%rbp)
  43b2b5:	83 f8 00             	cmp    $0x0,%eax
  43b2b8:	74 05                	je     43b2bf <mbedtls_rsa_private+0x113f>
  43b2ba:	e9 68 01 00 00       	jmpq   43b427 <mbedtls_rsa_private+0x12a7>
  43b2bf:	eb 00                	jmp    43b2c1 <mbedtls_rsa_private+0x1141>
  43b2c1:	eb 00                	jmp    43b2c3 <mbedtls_rsa_private+0x1143>
  43b2c3:	48 8d bd e0 f7 ff ff 	lea    -0x820(%rbp),%rdi
  43b2ca:	48 8d b5 f0 f6 ff ff 	lea    -0x910(%rbp),%rsi
  43b2d1:	48 8d 95 20 f7 ff ff 	lea    -0x8e0(%rbp),%rdx
  43b2d8:	e8 c3 11 fe ff       	callq  41c4a0 <mbedtls_mpi_add_mpi>
  43b2dd:	89 85 1c f8 ff ff    	mov    %eax,-0x7e4(%rbp)
  43b2e3:	83 f8 00             	cmp    $0x0,%eax
  43b2e6:	74 05                	je     43b2ed <mbedtls_rsa_private+0x116d>
  43b2e8:	e9 3a 01 00 00       	jmpq   43b427 <mbedtls_rsa_private+0x12a7>
  43b2ed:	eb 00                	jmp    43b2ef <mbedtls_rsa_private+0x116f>
  43b2ef:	48 83 bd 38 f8 ff ff 	cmpq   $0x0,-0x7c8(%rbp)
  43b2f6:	00 
  43b2f7:	74 6c                	je     43b365 <mbedtls_rsa_private+0x11e5>
  43b2f9:	eb 00                	jmp    43b2fb <mbedtls_rsa_private+0x117b>
  43b2fb:	48 8b 85 40 f8 ff ff 	mov    -0x7c0(%rbp),%rax
  43b302:	48 05 30 01 00 00    	add    $0x130,%rax
  43b308:	48 8d 8d e0 f7 ff ff 	lea    -0x820(%rbp),%rcx
  43b30f:	48 89 cf             	mov    %rcx,%rdi
  43b312:	48 89 ce             	mov    %rcx,%rsi
  43b315:	48 89 c2             	mov    %rax,%rdx
  43b318:	e8 a3 12 fe ff       	callq  41c5c0 <mbedtls_mpi_mul_mpi>
  43b31d:	89 85 1c f8 ff ff    	mov    %eax,-0x7e4(%rbp)
  43b323:	83 f8 00             	cmp    $0x0,%eax
  43b326:	74 05                	je     43b32d <mbedtls_rsa_private+0x11ad>
  43b328:	e9 fa 00 00 00       	jmpq   43b427 <mbedtls_rsa_private+0x12a7>
  43b32d:	eb 00                	jmp    43b32f <mbedtls_rsa_private+0x11af>
  43b32f:	eb 00                	jmp    43b331 <mbedtls_rsa_private+0x11b1>
  43b331:	48 8b 85 40 f8 ff ff 	mov    -0x7c0(%rbp),%rax
  43b338:	48 83 c0 10          	add    $0x10,%rax
  43b33c:	48 8d 8d e0 f7 ff ff 	lea    -0x820(%rbp),%rcx
  43b343:	48 89 cf             	mov    %rcx,%rdi
  43b346:	48 89 ce             	mov    %rcx,%rsi
  43b349:	48 89 c2             	mov    %rax,%rdx
  43b34c:	e8 3f 66 fe ff       	callq  421990 <mbedtls_mpi_mod_mpi>
  43b351:	89 85 1c f8 ff ff    	mov    %eax,-0x7e4(%rbp)
  43b357:	83 f8 00             	cmp    $0x0,%eax
  43b35a:	74 05                	je     43b361 <mbedtls_rsa_private+0x11e1>
  43b35c:	e9 c6 00 00 00       	jmpq   43b427 <mbedtls_rsa_private+0x12a7>
  43b361:	eb 00                	jmp    43b363 <mbedtls_rsa_private+0x11e3>
  43b363:	eb 00                	jmp    43b365 <mbedtls_rsa_private+0x11e5>
  43b365:	eb 00                	jmp    43b367 <mbedtls_rsa_private+0x11e7>
  43b367:	48 8b 85 40 f8 ff ff 	mov    -0x7c0(%rbp),%rax
  43b36e:	48 83 c0 28          	add    $0x28,%rax
  43b372:	48 8b 8d 40 f8 ff ff 	mov    -0x7c0(%rbp),%rcx
  43b379:	48 83 c1 10          	add    $0x10,%rcx
  43b37d:	48 8b 95 40 f8 ff ff 	mov    -0x7c0(%rbp),%rdx
  43b384:	48 81 c2 d0 00 00 00 	add    $0xd0,%rdx
  43b38b:	48 8d bd 20 f6 ff ff 	lea    -0x9e0(%rbp),%rdi
  43b392:	48 8d b5 e0 f7 ff ff 	lea    -0x820(%rbp),%rsi
  43b399:	48 89 95 38 f4 ff ff 	mov    %rdx,-0xbc8(%rbp)
  43b3a0:	48 89 c2             	mov    %rax,%rdx
  43b3a3:	4c 8b 85 38 f4 ff ff 	mov    -0xbc8(%rbp),%r8
  43b3aa:	e8 e1 68 fe ff       	callq  421c90 <mbedtls_mpi_exp_mod>
  43b3af:	89 85 1c f8 ff ff    	mov    %eax,-0x7e4(%rbp)
  43b3b5:	83 f8 00             	cmp    $0x0,%eax
  43b3b8:	74 02                	je     43b3bc <mbedtls_rsa_private+0x123c>
  43b3ba:	eb 6b                	jmp    43b427 <mbedtls_rsa_private+0x12a7>
  43b3bc:	eb 00                	jmp    43b3be <mbedtls_rsa_private+0x123e>
  43b3be:	48 8d bd 20 f6 ff ff 	lea    -0x9e0(%rbp),%rdi
  43b3c5:	48 8d b5 50 f6 ff ff 	lea    -0x9b0(%rbp),%rsi
  43b3cc:	e8 7f 36 fe ff       	callq  41ea50 <mbedtls_mpi_cmp_mpi>
  43b3d1:	83 f8 00             	cmp    $0x0,%eax
  43b3d4:	74 0c                	je     43b3e2 <mbedtls_rsa_private+0x1262>
  43b3d6:	c7 85 1c f8 ff ff 80 	movl   $0xffffbc80,-0x7e4(%rbp)
  43b3dd:	bc ff ff 
  43b3e0:	eb 45                	jmp    43b427 <mbedtls_rsa_private+0x12a7>
  43b3e2:	48 8b 85 40 f8 ff ff 	mov    -0x7c0(%rbp),%rax
  43b3e9:	48 83 c0 08          	add    $0x8,%rax
  43b3ed:	48 89 c7             	mov    %rax,%rdi
  43b3f0:	e8 53 ad 00 00       	callq  446148 <getDecryptedValueQWord>
  43b3f5:	48 89 85 10 f8 ff ff 	mov    %rax,-0x7f0(%rbp)
  43b3fc:	48 8b b5 20 f8 ff ff 	mov    -0x7e0(%rbp),%rsi
  43b403:	48 8b 95 10 f8 ff ff 	mov    -0x7f0(%rbp),%rdx
  43b40a:	48 8d bd e0 f7 ff ff 	lea    -0x820(%rbp),%rdi
  43b411:	e8 ea 63 fe ff       	callq  421800 <mbedtls_mpi_write_binary>
  43b416:	89 85 1c f8 ff ff    	mov    %eax,-0x7e4(%rbp)
  43b41c:	83 f8 00             	cmp    $0x0,%eax
  43b41f:	74 02                	je     43b423 <mbedtls_rsa_private+0x12a3>
  43b421:	eb 04                	jmp    43b427 <mbedtls_rsa_private+0x12a7>
  43b423:	eb 00                	jmp    43b425 <mbedtls_rsa_private+0x12a5>
  43b425:	eb 00                	jmp    43b427 <mbedtls_rsa_private+0x12a7>
  43b427:	48 8d 85 b0 f7 ff ff 	lea    -0x850(%rbp),%rax
  43b42e:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
  43b435:	48 83 bd 38 ff ff ff 	cmpq   $0x0,-0xc8(%rbp)
  43b43c:	00 
  43b43d:	75 05                	jne    43b444 <mbedtls_rsa_private+0x12c4>
  43b43f:	e9 6c 01 00 00       	jmpq   43b5b0 <mbedtls_rsa_private+0x1430>
  43b444:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  43b44b:	48 83 c0 10          	add    $0x10,%rax
  43b44f:	48 89 c7             	mov    %rax,%rdi
  43b452:	e8 f1 ac 00 00       	callq  446148 <getDecryptedValueQWord>
  43b457:	48 83 f8 00          	cmp    $0x0,%rax
  43b45b:	0f 84 00 01 00 00    	je     43b561 <mbedtls_rsa_private+0x13e1>
  43b461:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  43b468:	48 83 c0 10          	add    $0x10,%rax
  43b46c:	48 89 c7             	mov    %rax,%rdi
  43b46f:	e8 d4 ac 00 00       	callq  446148 <getDecryptedValueQWord>
  43b474:	48 8b bd 38 ff ff ff 	mov    -0xc8(%rbp),%rdi
  43b47b:	48 83 c7 08          	add    $0x8,%rdi
  43b47f:	48 89 85 30 f4 ff ff 	mov    %rax,-0xbd0(%rbp)
  43b486:	e8 bd ac 00 00       	callq  446148 <getDecryptedValueQWord>
  43b48b:	48 8b bd 30 f4 ff ff 	mov    -0xbd0(%rbp),%rdi
  43b492:	48 89 bd 48 ff ff ff 	mov    %rdi,-0xb8(%rbp)
  43b499:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
  43b4a0:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  43b4a7:	48 8b 8d 40 ff ff ff 	mov    -0xc0(%rbp),%rcx
  43b4ae:	48 c1 e1 03          	shl    $0x3,%rcx
  43b4b2:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
  43b4b9:	48 89 8d 50 ff ff ff 	mov    %rcx,-0xb0(%rbp)
  43b4c0:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  43b4c7:	00 
  43b4c8:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
  43b4cf:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
  43b4d6:	48 89 85 28 f4 ff ff 	mov    %rax,-0xbd8(%rbp)
  43b4dd:	48 89 8d 20 f4 ff ff 	mov    %rcx,-0xbe0(%rbp)
  43b4e4:	48 89 95 18 f4 ff ff 	mov    %rdx,-0xbe8(%rbp)
  43b4eb:	e8 66 a4 00 00       	callq  445956 <writeback_cache>
  43b4f0:	48 8b bd 20 f4 ff ff 	mov    -0xbe0(%rbp),%rdi
  43b4f7:	48 8b b5 18 f4 ff ff 	mov    -0xbe8(%rbp),%rsi
  43b4fe:	e8 e2 b1 00 00       	callq  4466e5 <decryptArrayForLibCall>
  43b503:	31 f6                	xor    %esi,%esi
  43b505:	48 8b bd 20 f4 ff ff 	mov    -0xbe0(%rbp),%rdi
  43b50c:	48 8b 95 18 f4 ff ff 	mov    -0xbe8(%rbp),%rdx
  43b513:	48 8b 85 28 f4 ff ff 	mov    -0xbd8(%rbp),%rax
  43b51a:	ff d0                	callq  *%rax
  43b51c:	48 8b bd 20 f4 ff ff 	mov    -0xbe0(%rbp),%rdi
  43b523:	48 8b b5 18 f4 ff ff 	mov    -0xbe8(%rbp),%rsi
  43b52a:	48 89 85 10 f4 ff ff 	mov    %rax,-0xbf0(%rbp)
  43b531:	e8 20 af 00 00       	callq  446456 <encryptArrayForLibCall>
  43b536:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  43b53d:	48 83 c0 10          	add    $0x10,%rax
  43b541:	48 89 c7             	mov    %rax,%rdi
  43b544:	e8 ff ab 00 00       	callq  446148 <getDecryptedValueQWord>
  43b549:	48 89 85 08 f4 ff ff 	mov    %rax,-0xbf8(%rbp)
  43b550:	e8 01 a4 00 00       	callq  445956 <writeback_cache>
  43b555:	48 8b bd 08 f4 ff ff 	mov    -0xbf8(%rbp),%rdi
  43b55c:	e8 7f 5b fc ff       	callq  4010e0 <free@plt>
  43b561:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  43b568:	48 89 c7             	mov    %rax,%rdi
  43b56b:	be 01 00 00 00       	mov    $0x1,%esi
  43b570:	e8 89 a6 00 00       	callq  445bfe <setEncryptedValueDWord>
  43b575:	31 f6                	xor    %esi,%esi
  43b577:	48 8b bd 38 ff ff ff 	mov    -0xc8(%rbp),%rdi
  43b57e:	48 83 c7 08          	add    $0x8,%rdi
  43b582:	48 89 85 00 f4 ff ff 	mov    %rax,-0xc00(%rbp)
  43b589:	e8 6e a7 00 00       	callq  445cfc <setEncryptedValueQWord>
  43b58e:	31 c9                	xor    %ecx,%ecx
  43b590:	89 ce                	mov    %ecx,%esi
  43b592:	48 8b bd 38 ff ff ff 	mov    -0xc8(%rbp),%rdi
  43b599:	48 83 c7 10          	add    $0x10,%rdi
  43b59d:	48 89 85 f8 f3 ff ff 	mov    %rax,-0xc08(%rbp)
  43b5a4:	e8 53 a7 00 00       	callq  445cfc <setEncryptedValueQWord>
  43b5a9:	48 89 85 f0 f3 ff ff 	mov    %rax,-0xc10(%rbp)
  43b5b0:	48 8d 85 80 f7 ff ff 	lea    -0x880(%rbp),%rax
  43b5b7:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
  43b5be:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
  43b5c5:	00 
  43b5c6:	75 05                	jne    43b5cd <mbedtls_rsa_private+0x144d>
  43b5c8:	e9 66 01 00 00       	jmpq   43b733 <mbedtls_rsa_private+0x15b3>
  43b5cd:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  43b5d4:	48 83 c0 10          	add    $0x10,%rax
  43b5d8:	48 89 c7             	mov    %rax,%rdi
  43b5db:	e8 68 ab 00 00       	callq  446148 <getDecryptedValueQWord>
  43b5e0:	48 83 f8 00          	cmp    $0x0,%rax
  43b5e4:	0f 84 fa 00 00 00    	je     43b6e4 <mbedtls_rsa_private+0x1564>
  43b5ea:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  43b5f1:	48 83 c0 10          	add    $0x10,%rax
  43b5f5:	48 89 c7             	mov    %rax,%rdi
  43b5f8:	e8 4b ab 00 00       	callq  446148 <getDecryptedValueQWord>
  43b5fd:	48 8b bd 60 ff ff ff 	mov    -0xa0(%rbp),%rdi
  43b604:	48 83 c7 08          	add    $0x8,%rdi
  43b608:	48 89 85 e8 f3 ff ff 	mov    %rax,-0xc18(%rbp)
  43b60f:	e8 34 ab 00 00       	callq  446148 <getDecryptedValueQWord>
  43b614:	48 8b bd e8 f3 ff ff 	mov    -0xc18(%rbp),%rdi
  43b61b:	48 89 bd 70 ff ff ff 	mov    %rdi,-0x90(%rbp)
  43b622:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
  43b629:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  43b630:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
  43b637:	48 c1 e1 03          	shl    $0x3,%rcx
  43b63b:	48 89 45 80          	mov    %rax,-0x80(%rbp)
  43b63f:	48 89 8d 78 ff ff ff 	mov    %rcx,-0x88(%rbp)
  43b646:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  43b64d:	00 
  43b64e:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
  43b652:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
  43b659:	48 89 85 e0 f3 ff ff 	mov    %rax,-0xc20(%rbp)
  43b660:	48 89 8d d8 f3 ff ff 	mov    %rcx,-0xc28(%rbp)
  43b667:	48 89 95 d0 f3 ff ff 	mov    %rdx,-0xc30(%rbp)
  43b66e:	e8 e3 a2 00 00       	callq  445956 <writeback_cache>
  43b673:	48 8b bd d8 f3 ff ff 	mov    -0xc28(%rbp),%rdi
  43b67a:	48 8b b5 d0 f3 ff ff 	mov    -0xc30(%rbp),%rsi
  43b681:	e8 5f b0 00 00       	callq  4466e5 <decryptArrayForLibCall>
  43b686:	31 f6                	xor    %esi,%esi
  43b688:	48 8b bd d8 f3 ff ff 	mov    -0xc28(%rbp),%rdi
  43b68f:	48 8b 95 d0 f3 ff ff 	mov    -0xc30(%rbp),%rdx
  43b696:	48 8b 85 e0 f3 ff ff 	mov    -0xc20(%rbp),%rax
  43b69d:	ff d0                	callq  *%rax
  43b69f:	48 8b bd d8 f3 ff ff 	mov    -0xc28(%rbp),%rdi
  43b6a6:	48 8b b5 d0 f3 ff ff 	mov    -0xc30(%rbp),%rsi
  43b6ad:	48 89 85 c8 f3 ff ff 	mov    %rax,-0xc38(%rbp)
  43b6b4:	e8 9d ad 00 00       	callq  446456 <encryptArrayForLibCall>
  43b6b9:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  43b6c0:	48 83 c0 10          	add    $0x10,%rax
  43b6c4:	48 89 c7             	mov    %rax,%rdi
  43b6c7:	e8 7c aa 00 00       	callq  446148 <getDecryptedValueQWord>
  43b6cc:	48 89 85 c0 f3 ff ff 	mov    %rax,-0xc40(%rbp)
  43b6d3:	e8 7e a2 00 00       	callq  445956 <writeback_cache>
  43b6d8:	48 8b bd c0 f3 ff ff 	mov    -0xc40(%rbp),%rdi
  43b6df:	e8 fc 59 fc ff       	callq  4010e0 <free@plt>
  43b6e4:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  43b6eb:	48 89 c7             	mov    %rax,%rdi
  43b6ee:	be 01 00 00 00       	mov    $0x1,%esi
  43b6f3:	e8 06 a5 00 00       	callq  445bfe <setEncryptedValueDWord>
  43b6f8:	31 f6                	xor    %esi,%esi
  43b6fa:	48 8b bd 60 ff ff ff 	mov    -0xa0(%rbp),%rdi
  43b701:	48 83 c7 08          	add    $0x8,%rdi
  43b705:	48 89 85 b8 f3 ff ff 	mov    %rax,-0xc48(%rbp)
  43b70c:	e8 eb a5 00 00       	callq  445cfc <setEncryptedValueQWord>
  43b711:	31 c9                	xor    %ecx,%ecx
  43b713:	89 ce                	mov    %ecx,%esi
  43b715:	48 8b bd 60 ff ff ff 	mov    -0xa0(%rbp),%rdi
  43b71c:	48 83 c7 10          	add    $0x10,%rdi
  43b720:	48 89 85 b0 f3 ff ff 	mov    %rax,-0xc50(%rbp)
  43b727:	e8 d0 a5 00 00       	callq  445cfc <setEncryptedValueQWord>
  43b72c:	48 89 85 a8 f3 ff ff 	mov    %rax,-0xc58(%rbp)
  43b733:	48 8d 85 50 f7 ff ff 	lea    -0x8b0(%rbp),%rax
  43b73a:	48 89 45 88          	mov    %rax,-0x78(%rbp)
  43b73e:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
  43b743:	75 05                	jne    43b74a <mbedtls_rsa_private+0x15ca>
  43b745:	e9 3f 01 00 00       	jmpq   43b889 <mbedtls_rsa_private+0x1709>
  43b74a:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  43b74e:	48 83 c0 10          	add    $0x10,%rax
  43b752:	48 89 c7             	mov    %rax,%rdi
  43b755:	e8 ee a9 00 00       	callq  446148 <getDecryptedValueQWord>
  43b75a:	48 83 f8 00          	cmp    $0x0,%rax
  43b75e:	0f 84 df 00 00 00    	je     43b843 <mbedtls_rsa_private+0x16c3>
  43b764:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  43b768:	48 83 c0 10          	add    $0x10,%rax
  43b76c:	48 89 c7             	mov    %rax,%rdi
  43b76f:	e8 d4 a9 00 00       	callq  446148 <getDecryptedValueQWord>
  43b774:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
  43b778:	48 83 c7 08          	add    $0x8,%rdi
  43b77c:	48 89 85 a0 f3 ff ff 	mov    %rax,-0xc60(%rbp)
  43b783:	e8 c0 a9 00 00       	callq  446148 <getDecryptedValueQWord>
  43b788:	48 8b bd a0 f3 ff ff 	mov    -0xc60(%rbp),%rdi
  43b78f:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
  43b793:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  43b797:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  43b79b:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  43b79f:	48 c1 e1 03          	shl    $0x3,%rcx
  43b7a3:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  43b7a7:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
  43b7ab:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  43b7b2:	00 
  43b7b3:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
  43b7b7:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
  43b7bb:	48 89 85 98 f3 ff ff 	mov    %rax,-0xc68(%rbp)
  43b7c2:	48 89 8d 90 f3 ff ff 	mov    %rcx,-0xc70(%rbp)
  43b7c9:	48 89 95 88 f3 ff ff 	mov    %rdx,-0xc78(%rbp)
  43b7d0:	e8 81 a1 00 00       	callq  445956 <writeback_cache>
  43b7d5:	48 8b bd 90 f3 ff ff 	mov    -0xc70(%rbp),%rdi
  43b7dc:	48 8b b5 88 f3 ff ff 	mov    -0xc78(%rbp),%rsi
  43b7e3:	e8 fd ae 00 00       	callq  4466e5 <decryptArrayForLibCall>
  43b7e8:	31 f6                	xor    %esi,%esi
  43b7ea:	48 8b bd 90 f3 ff ff 	mov    -0xc70(%rbp),%rdi
  43b7f1:	48 8b 95 88 f3 ff ff 	mov    -0xc78(%rbp),%rdx
  43b7f8:	48 8b 85 98 f3 ff ff 	mov    -0xc68(%rbp),%rax
  43b7ff:	ff d0                	callq  *%rax
  43b801:	48 8b bd 90 f3 ff ff 	mov    -0xc70(%rbp),%rdi
  43b808:	48 8b b5 88 f3 ff ff 	mov    -0xc78(%rbp),%rsi
  43b80f:	48 89 85 80 f3 ff ff 	mov    %rax,-0xc80(%rbp)
  43b816:	e8 3b ac 00 00       	callq  446456 <encryptArrayForLibCall>
  43b81b:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  43b81f:	48 83 c0 10          	add    $0x10,%rax
  43b823:	48 89 c7             	mov    %rax,%rdi
  43b826:	e8 1d a9 00 00       	callq  446148 <getDecryptedValueQWord>
  43b82b:	48 89 85 78 f3 ff ff 	mov    %rax,-0xc88(%rbp)
  43b832:	e8 1f a1 00 00       	callq  445956 <writeback_cache>
  43b837:	48 8b bd 78 f3 ff ff 	mov    -0xc88(%rbp),%rdi
  43b83e:	e8 9d 58 fc ff       	callq  4010e0 <free@plt>
  43b843:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  43b847:	48 89 c7             	mov    %rax,%rdi
  43b84a:	be 01 00 00 00       	mov    $0x1,%esi
  43b84f:	e8 aa a3 00 00       	callq  445bfe <setEncryptedValueDWord>
  43b854:	31 f6                	xor    %esi,%esi
  43b856:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
  43b85a:	48 83 c7 08          	add    $0x8,%rdi
  43b85e:	48 89 85 70 f3 ff ff 	mov    %rax,-0xc90(%rbp)
  43b865:	e8 92 a4 00 00       	callq  445cfc <setEncryptedValueQWord>
  43b86a:	31 c9                	xor    %ecx,%ecx
  43b86c:	89 ce                	mov    %ecx,%esi
  43b86e:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
  43b872:	48 83 c7 10          	add    $0x10,%rdi
  43b876:	48 89 85 68 f3 ff ff 	mov    %rax,-0xc98(%rbp)
  43b87d:	e8 7a a4 00 00       	callq  445cfc <setEncryptedValueQWord>
  43b882:	48 89 85 60 f3 ff ff 	mov    %rax,-0xca0(%rbp)
  43b889:	48 83 bd 38 f8 ff ff 	cmpq   $0x0,-0x7c8(%rbp)
  43b890:	00 
  43b891:	0f 84 ac 02 00 00    	je     43bb43 <mbedtls_rsa_private+0x19c3>
  43b897:	48 8d 85 c0 f6 ff ff 	lea    -0x940(%rbp),%rax
  43b89e:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  43b8a2:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
  43b8a7:	75 05                	jne    43b8ae <mbedtls_rsa_private+0x172e>
  43b8a9:	e9 3f 01 00 00       	jmpq   43b9ed <mbedtls_rsa_private+0x186d>
  43b8ae:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  43b8b2:	48 83 c0 10          	add    $0x10,%rax
  43b8b6:	48 89 c7             	mov    %rax,%rdi
  43b8b9:	e8 8a a8 00 00       	callq  446148 <getDecryptedValueQWord>
  43b8be:	48 83 f8 00          	cmp    $0x0,%rax
  43b8c2:	0f 84 df 00 00 00    	je     43b9a7 <mbedtls_rsa_private+0x1827>
  43b8c8:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  43b8cc:	48 83 c0 10          	add    $0x10,%rax
  43b8d0:	48 89 c7             	mov    %rax,%rdi
  43b8d3:	e8 70 a8 00 00       	callq  446148 <getDecryptedValueQWord>
  43b8d8:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
  43b8dc:	48 83 c7 08          	add    $0x8,%rdi
  43b8e0:	48 89 85 58 f3 ff ff 	mov    %rax,-0xca8(%rbp)
  43b8e7:	e8 5c a8 00 00       	callq  446148 <getDecryptedValueQWord>
  43b8ec:	48 8b bd 58 f3 ff ff 	mov    -0xca8(%rbp),%rdi
  43b8f3:	48 89 7d c0          	mov    %rdi,-0x40(%rbp)
  43b8f7:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  43b8fb:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  43b8ff:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  43b903:	48 c1 e1 03          	shl    $0x3,%rcx
  43b907:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  43b90b:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
  43b90f:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  43b916:	00 
  43b917:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  43b91b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  43b91f:	48 89 85 50 f3 ff ff 	mov    %rax,-0xcb0(%rbp)
  43b926:	48 89 8d 48 f3 ff ff 	mov    %rcx,-0xcb8(%rbp)
  43b92d:	48 89 95 40 f3 ff ff 	mov    %rdx,-0xcc0(%rbp)
  43b934:	e8 1d a0 00 00       	callq  445956 <writeback_cache>
  43b939:	48 8b bd 48 f3 ff ff 	mov    -0xcb8(%rbp),%rdi
  43b940:	48 8b b5 40 f3 ff ff 	mov    -0xcc0(%rbp),%rsi
  43b947:	e8 99 ad 00 00       	callq  4466e5 <decryptArrayForLibCall>
  43b94c:	31 f6                	xor    %esi,%esi
  43b94e:	48 8b bd 48 f3 ff ff 	mov    -0xcb8(%rbp),%rdi
  43b955:	48 8b 95 40 f3 ff ff 	mov    -0xcc0(%rbp),%rdx
  43b95c:	48 8b 85 50 f3 ff ff 	mov    -0xcb0(%rbp),%rax
  43b963:	ff d0                	callq  *%rax
  43b965:	48 8b bd 48 f3 ff ff 	mov    -0xcb8(%rbp),%rdi
  43b96c:	48 8b b5 40 f3 ff ff 	mov    -0xcc0(%rbp),%rsi
  43b973:	48 89 85 38 f3 ff ff 	mov    %rax,-0xcc8(%rbp)
  43b97a:	e8 d7 aa 00 00       	callq  446456 <encryptArrayForLibCall>
  43b97f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  43b983:	48 83 c0 10          	add    $0x10,%rax
  43b987:	48 89 c7             	mov    %rax,%rdi
  43b98a:	e8 b9 a7 00 00       	callq  446148 <getDecryptedValueQWord>
  43b98f:	48 89 85 30 f3 ff ff 	mov    %rax,-0xcd0(%rbp)
  43b996:	e8 bb 9f 00 00       	callq  445956 <writeback_cache>
  43b99b:	48 8b bd 30 f3 ff ff 	mov    -0xcd0(%rbp),%rdi
  43b9a2:	e8 39 57 fc ff       	callq  4010e0 <free@plt>
  43b9a7:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  43b9ab:	48 89 c7             	mov    %rax,%rdi
  43b9ae:	be 01 00 00 00       	mov    $0x1,%esi
  43b9b3:	e8 46 a2 00 00       	callq  445bfe <setEncryptedValueDWord>
  43b9b8:	31 f6                	xor    %esi,%esi
  43b9ba:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
  43b9be:	48 83 c7 08          	add    $0x8,%rdi
  43b9c2:	48 89 85 28 f3 ff ff 	mov    %rax,-0xcd8(%rbp)
  43b9c9:	e8 2e a3 00 00       	callq  445cfc <setEncryptedValueQWord>
  43b9ce:	31 c9                	xor    %ecx,%ecx
  43b9d0:	89 ce                	mov    %ecx,%esi
  43b9d2:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
  43b9d6:	48 83 c7 10          	add    $0x10,%rdi
  43b9da:	48 89 85 20 f3 ff ff 	mov    %rax,-0xce0(%rbp)
  43b9e1:	e8 16 a3 00 00       	callq  445cfc <setEncryptedValueQWord>
  43b9e6:	48 89 85 18 f3 ff ff 	mov    %rax,-0xce8(%rbp)
  43b9ed:	48 8d 85 90 f6 ff ff 	lea    -0x970(%rbp),%rax
  43b9f4:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  43b9f8:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  43b9fd:	75 05                	jne    43ba04 <mbedtls_rsa_private+0x1884>
  43b9ff:	e9 3f 01 00 00       	jmpq   43bb43 <mbedtls_rsa_private+0x19c3>
  43ba04:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  43ba08:	48 83 c0 10          	add    $0x10,%rax
  43ba0c:	48 89 c7             	mov    %rax,%rdi
  43ba0f:	e8 34 a7 00 00       	callq  446148 <getDecryptedValueQWord>
  43ba14:	48 83 f8 00          	cmp    $0x0,%rax
  43ba18:	0f 84 df 00 00 00    	je     43bafd <mbedtls_rsa_private+0x197d>
  43ba1e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  43ba22:	48 83 c0 10          	add    $0x10,%rax
  43ba26:	48 89 c7             	mov    %rax,%rdi
  43ba29:	e8 1a a7 00 00       	callq  446148 <getDecryptedValueQWord>
  43ba2e:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  43ba32:	48 83 c7 08          	add    $0x8,%rdi
  43ba36:	48 89 85 10 f3 ff ff 	mov    %rax,-0xcf0(%rbp)
  43ba3d:	e8 06 a7 00 00       	callq  446148 <getDecryptedValueQWord>
  43ba42:	48 8b bd 10 f3 ff ff 	mov    -0xcf0(%rbp),%rdi
  43ba49:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  43ba4d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  43ba51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43ba55:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  43ba59:	48 c1 e1 03          	shl    $0x3,%rcx
  43ba5d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43ba61:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
  43ba65:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  43ba6c:	00 
  43ba6d:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  43ba71:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43ba75:	48 89 85 08 f3 ff ff 	mov    %rax,-0xcf8(%rbp)
  43ba7c:	48 89 8d 00 f3 ff ff 	mov    %rcx,-0xd00(%rbp)
  43ba83:	48 89 95 f8 f2 ff ff 	mov    %rdx,-0xd08(%rbp)
  43ba8a:	e8 c7 9e 00 00       	callq  445956 <writeback_cache>
  43ba8f:	48 8b bd 00 f3 ff ff 	mov    -0xd00(%rbp),%rdi
  43ba96:	48 8b b5 f8 f2 ff ff 	mov    -0xd08(%rbp),%rsi
  43ba9d:	e8 43 ac 00 00       	callq  4466e5 <decryptArrayForLibCall>
  43baa2:	31 f6                	xor    %esi,%esi
  43baa4:	48 8b bd 00 f3 ff ff 	mov    -0xd00(%rbp),%rdi
  43baab:	48 8b 95 f8 f2 ff ff 	mov    -0xd08(%rbp),%rdx
  43bab2:	48 8b 85 08 f3 ff ff 	mov    -0xcf8(%rbp),%rax
  43bab9:	ff d0                	callq  *%rax
  43babb:	48 8b bd 00 f3 ff ff 	mov    -0xd00(%rbp),%rdi
  43bac2:	48 8b b5 f8 f2 ff ff 	mov    -0xd08(%rbp),%rsi
  43bac9:	48 89 85 f0 f2 ff ff 	mov    %rax,-0xd10(%rbp)
  43bad0:	e8 81 a9 00 00       	callq  446456 <encryptArrayForLibCall>
  43bad5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  43bad9:	48 83 c0 10          	add    $0x10,%rax
  43badd:	48 89 c7             	mov    %rax,%rdi
  43bae0:	e8 63 a6 00 00       	callq  446148 <getDecryptedValueQWord>
  43bae5:	48 89 85 e8 f2 ff ff 	mov    %rax,-0xd18(%rbp)
  43baec:	e8 65 9e 00 00       	callq  445956 <writeback_cache>
  43baf1:	48 8b bd e8 f2 ff ff 	mov    -0xd18(%rbp),%rdi
  43baf8:	e8 e3 55 fc ff       	callq  4010e0 <free@plt>
  43bafd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  43bb01:	48 89 c7             	mov    %rax,%rdi
  43bb04:	be 01 00 00 00       	mov    $0x1,%esi
  43bb09:	e8 f0 a0 00 00       	callq  445bfe <setEncryptedValueDWord>
  43bb0e:	31 f6                	xor    %esi,%esi
  43bb10:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  43bb14:	48 83 c7 08          	add    $0x8,%rdi
  43bb18:	48 89 85 e0 f2 ff ff 	mov    %rax,-0xd20(%rbp)
  43bb1f:	e8 d8 a1 00 00       	callq  445cfc <setEncryptedValueQWord>
  43bb24:	31 c9                	xor    %ecx,%ecx
  43bb26:	89 ce                	mov    %ecx,%esi
  43bb28:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  43bb2c:	48 83 c7 10          	add    $0x10,%rdi
  43bb30:	48 89 85 d8 f2 ff ff 	mov    %rax,-0xd28(%rbp)
  43bb37:	e8 c0 a1 00 00       	callq  445cfc <setEncryptedValueQWord>
  43bb3c:	48 89 85 d0 f2 ff ff 	mov    %rax,-0xd30(%rbp)
  43bb43:	48 8d 85 e0 f7 ff ff 	lea    -0x820(%rbp),%rax
  43bb4a:	48 89 85 38 f9 ff ff 	mov    %rax,-0x6c8(%rbp)
  43bb51:	48 83 bd 38 f9 ff ff 	cmpq   $0x0,-0x6c8(%rbp)
  43bb58:	00 
  43bb59:	75 05                	jne    43bb60 <mbedtls_rsa_private+0x19e0>
  43bb5b:	e9 6c 01 00 00       	jmpq   43bccc <mbedtls_rsa_private+0x1b4c>
  43bb60:	48 8b 85 38 f9 ff ff 	mov    -0x6c8(%rbp),%rax
  43bb67:	48 83 c0 10          	add    $0x10,%rax
  43bb6b:	48 89 c7             	mov    %rax,%rdi
  43bb6e:	e8 d5 a5 00 00       	callq  446148 <getDecryptedValueQWord>
  43bb73:	48 83 f8 00          	cmp    $0x0,%rax
  43bb77:	0f 84 00 01 00 00    	je     43bc7d <mbedtls_rsa_private+0x1afd>
  43bb7d:	48 8b 85 38 f9 ff ff 	mov    -0x6c8(%rbp),%rax
  43bb84:	48 83 c0 10          	add    $0x10,%rax
  43bb88:	48 89 c7             	mov    %rax,%rdi
  43bb8b:	e8 b8 a5 00 00       	callq  446148 <getDecryptedValueQWord>
  43bb90:	48 8b bd 38 f9 ff ff 	mov    -0x6c8(%rbp),%rdi
  43bb97:	48 83 c7 08          	add    $0x8,%rdi
  43bb9b:	48 89 85 c8 f2 ff ff 	mov    %rax,-0xd38(%rbp)
  43bba2:	e8 a1 a5 00 00       	callq  446148 <getDecryptedValueQWord>
  43bba7:	48 8b bd c8 f2 ff ff 	mov    -0xd38(%rbp),%rdi
  43bbae:	48 89 bd 48 f9 ff ff 	mov    %rdi,-0x6b8(%rbp)
  43bbb5:	48 89 85 40 f9 ff ff 	mov    %rax,-0x6c0(%rbp)
  43bbbc:	48 8b 85 48 f9 ff ff 	mov    -0x6b8(%rbp),%rax
  43bbc3:	48 8b 8d 40 f9 ff ff 	mov    -0x6c0(%rbp),%rcx
  43bbca:	48 c1 e1 03          	shl    $0x3,%rcx
  43bbce:	48 89 85 58 f9 ff ff 	mov    %rax,-0x6a8(%rbp)
  43bbd5:	48 89 8d 50 f9 ff ff 	mov    %rcx,-0x6b0(%rbp)
  43bbdc:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  43bbe3:	00 
  43bbe4:	48 8b 8d 58 f9 ff ff 	mov    -0x6a8(%rbp),%rcx
  43bbeb:	48 8b 95 50 f9 ff ff 	mov    -0x6b0(%rbp),%rdx
  43bbf2:	48 89 85 c0 f2 ff ff 	mov    %rax,-0xd40(%rbp)
  43bbf9:	48 89 8d b8 f2 ff ff 	mov    %rcx,-0xd48(%rbp)
  43bc00:	48 89 95 b0 f2 ff ff 	mov    %rdx,-0xd50(%rbp)
  43bc07:	e8 4a 9d 00 00       	callq  445956 <writeback_cache>
  43bc0c:	48 8b bd b8 f2 ff ff 	mov    -0xd48(%rbp),%rdi
  43bc13:	48 8b b5 b0 f2 ff ff 	mov    -0xd50(%rbp),%rsi
  43bc1a:	e8 c6 aa 00 00       	callq  4466e5 <decryptArrayForLibCall>
  43bc1f:	31 f6                	xor    %esi,%esi
  43bc21:	48 8b bd b8 f2 ff ff 	mov    -0xd48(%rbp),%rdi
  43bc28:	48 8b 95 b0 f2 ff ff 	mov    -0xd50(%rbp),%rdx
  43bc2f:	48 8b 85 c0 f2 ff ff 	mov    -0xd40(%rbp),%rax
  43bc36:	ff d0                	callq  *%rax
  43bc38:	48 8b bd b8 f2 ff ff 	mov    -0xd48(%rbp),%rdi
  43bc3f:	48 8b b5 b0 f2 ff ff 	mov    -0xd50(%rbp),%rsi
  43bc46:	48 89 85 a8 f2 ff ff 	mov    %rax,-0xd58(%rbp)
  43bc4d:	e8 04 a8 00 00       	callq  446456 <encryptArrayForLibCall>
  43bc52:	48 8b 85 38 f9 ff ff 	mov    -0x6c8(%rbp),%rax
  43bc59:	48 83 c0 10          	add    $0x10,%rax
  43bc5d:	48 89 c7             	mov    %rax,%rdi
  43bc60:	e8 e3 a4 00 00       	callq  446148 <getDecryptedValueQWord>
  43bc65:	48 89 85 a0 f2 ff ff 	mov    %rax,-0xd60(%rbp)
  43bc6c:	e8 e5 9c 00 00       	callq  445956 <writeback_cache>
  43bc71:	48 8b bd a0 f2 ff ff 	mov    -0xd60(%rbp),%rdi
  43bc78:	e8 63 54 fc ff       	callq  4010e0 <free@plt>
  43bc7d:	48 8b 85 38 f9 ff ff 	mov    -0x6c8(%rbp),%rax
  43bc84:	48 89 c7             	mov    %rax,%rdi
  43bc87:	be 01 00 00 00       	mov    $0x1,%esi
  43bc8c:	e8 6d 9f 00 00       	callq  445bfe <setEncryptedValueDWord>
  43bc91:	31 f6                	xor    %esi,%esi
  43bc93:	48 8b bd 38 f9 ff ff 	mov    -0x6c8(%rbp),%rdi
  43bc9a:	48 83 c7 08          	add    $0x8,%rdi
  43bc9e:	48 89 85 98 f2 ff ff 	mov    %rax,-0xd68(%rbp)
  43bca5:	e8 52 a0 00 00       	callq  445cfc <setEncryptedValueQWord>
  43bcaa:	31 c9                	xor    %ecx,%ecx
  43bcac:	89 ce                	mov    %ecx,%esi
  43bcae:	48 8b bd 38 f9 ff ff 	mov    -0x6c8(%rbp),%rdi
  43bcb5:	48 83 c7 10          	add    $0x10,%rdi
  43bcb9:	48 89 85 90 f2 ff ff 	mov    %rax,-0xd70(%rbp)
  43bcc0:	e8 37 a0 00 00       	callq  445cfc <setEncryptedValueQWord>
  43bcc5:	48 89 85 88 f2 ff ff 	mov    %rax,-0xd78(%rbp)
  43bccc:	48 8d 85 20 f7 ff ff 	lea    -0x8e0(%rbp),%rax
  43bcd3:	48 89 85 00 f9 ff ff 	mov    %rax,-0x700(%rbp)
  43bcda:	48 83 bd 00 f9 ff ff 	cmpq   $0x0,-0x700(%rbp)
  43bce1:	00 
  43bce2:	75 05                	jne    43bce9 <mbedtls_rsa_private+0x1b69>
  43bce4:	e9 6c 01 00 00       	jmpq   43be55 <mbedtls_rsa_private+0x1cd5>
  43bce9:	48 8b 85 00 f9 ff ff 	mov    -0x700(%rbp),%rax
  43bcf0:	48 83 c0 10          	add    $0x10,%rax
  43bcf4:	48 89 c7             	mov    %rax,%rdi
  43bcf7:	e8 4c a4 00 00       	callq  446148 <getDecryptedValueQWord>
  43bcfc:	48 83 f8 00          	cmp    $0x0,%rax
  43bd00:	0f 84 00 01 00 00    	je     43be06 <mbedtls_rsa_private+0x1c86>
  43bd06:	48 8b 85 00 f9 ff ff 	mov    -0x700(%rbp),%rax
  43bd0d:	48 83 c0 10          	add    $0x10,%rax
  43bd11:	48 89 c7             	mov    %rax,%rdi
  43bd14:	e8 2f a4 00 00       	callq  446148 <getDecryptedValueQWord>
  43bd19:	48 8b bd 00 f9 ff ff 	mov    -0x700(%rbp),%rdi
  43bd20:	48 83 c7 08          	add    $0x8,%rdi
  43bd24:	48 89 85 80 f2 ff ff 	mov    %rax,-0xd80(%rbp)
  43bd2b:	e8 18 a4 00 00       	callq  446148 <getDecryptedValueQWord>
  43bd30:	48 8b bd 80 f2 ff ff 	mov    -0xd80(%rbp),%rdi
  43bd37:	48 89 bd 10 f9 ff ff 	mov    %rdi,-0x6f0(%rbp)
  43bd3e:	48 89 85 08 f9 ff ff 	mov    %rax,-0x6f8(%rbp)
  43bd45:	48 8b 85 10 f9 ff ff 	mov    -0x6f0(%rbp),%rax
  43bd4c:	48 8b 8d 08 f9 ff ff 	mov    -0x6f8(%rbp),%rcx
  43bd53:	48 c1 e1 03          	shl    $0x3,%rcx
  43bd57:	48 89 85 20 f9 ff ff 	mov    %rax,-0x6e0(%rbp)
  43bd5e:	48 89 8d 18 f9 ff ff 	mov    %rcx,-0x6e8(%rbp)
  43bd65:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  43bd6c:	00 
  43bd6d:	48 8b 8d 20 f9 ff ff 	mov    -0x6e0(%rbp),%rcx
  43bd74:	48 8b 95 18 f9 ff ff 	mov    -0x6e8(%rbp),%rdx
  43bd7b:	48 89 85 78 f2 ff ff 	mov    %rax,-0xd88(%rbp)
  43bd82:	48 89 8d 70 f2 ff ff 	mov    %rcx,-0xd90(%rbp)
  43bd89:	48 89 95 68 f2 ff ff 	mov    %rdx,-0xd98(%rbp)
  43bd90:	e8 c1 9b 00 00       	callq  445956 <writeback_cache>
  43bd95:	48 8b bd 70 f2 ff ff 	mov    -0xd90(%rbp),%rdi
  43bd9c:	48 8b b5 68 f2 ff ff 	mov    -0xd98(%rbp),%rsi
  43bda3:	e8 3d a9 00 00       	callq  4466e5 <decryptArrayForLibCall>
  43bda8:	31 f6                	xor    %esi,%esi
  43bdaa:	48 8b bd 70 f2 ff ff 	mov    -0xd90(%rbp),%rdi
  43bdb1:	48 8b 95 68 f2 ff ff 	mov    -0xd98(%rbp),%rdx
  43bdb8:	48 8b 85 78 f2 ff ff 	mov    -0xd88(%rbp),%rax
  43bdbf:	ff d0                	callq  *%rax
  43bdc1:	48 8b bd 70 f2 ff ff 	mov    -0xd90(%rbp),%rdi
  43bdc8:	48 8b b5 68 f2 ff ff 	mov    -0xd98(%rbp),%rsi
  43bdcf:	48 89 85 60 f2 ff ff 	mov    %rax,-0xda0(%rbp)
  43bdd6:	e8 7b a6 00 00       	callq  446456 <encryptArrayForLibCall>
  43bddb:	48 8b 85 00 f9 ff ff 	mov    -0x700(%rbp),%rax
  43bde2:	48 83 c0 10          	add    $0x10,%rax
  43bde6:	48 89 c7             	mov    %rax,%rdi
  43bde9:	e8 5a a3 00 00       	callq  446148 <getDecryptedValueQWord>
  43bdee:	48 89 85 58 f2 ff ff 	mov    %rax,-0xda8(%rbp)
  43bdf5:	e8 5c 9b 00 00       	callq  445956 <writeback_cache>
  43bdfa:	48 8b bd 58 f2 ff ff 	mov    -0xda8(%rbp),%rdi
  43be01:	e8 da 52 fc ff       	callq  4010e0 <free@plt>
  43be06:	48 8b 85 00 f9 ff ff 	mov    -0x700(%rbp),%rax
  43be0d:	48 89 c7             	mov    %rax,%rdi
  43be10:	be 01 00 00 00       	mov    $0x1,%esi
  43be15:	e8 e4 9d 00 00       	callq  445bfe <setEncryptedValueDWord>
  43be1a:	31 f6                	xor    %esi,%esi
  43be1c:	48 8b bd 00 f9 ff ff 	mov    -0x700(%rbp),%rdi
  43be23:	48 83 c7 08          	add    $0x8,%rdi
  43be27:	48 89 85 50 f2 ff ff 	mov    %rax,-0xdb0(%rbp)
  43be2e:	e8 c9 9e 00 00       	callq  445cfc <setEncryptedValueQWord>
  43be33:	31 c9                	xor    %ecx,%ecx
  43be35:	89 ce                	mov    %ecx,%esi
  43be37:	48 8b bd 00 f9 ff ff 	mov    -0x700(%rbp),%rdi
  43be3e:	48 83 c7 10          	add    $0x10,%rdi
  43be42:	48 89 85 48 f2 ff ff 	mov    %rax,-0xdb8(%rbp)
  43be49:	e8 ae 9e 00 00       	callq  445cfc <setEncryptedValueQWord>
  43be4e:	48 89 85 40 f2 ff ff 	mov    %rax,-0xdc0(%rbp)
  43be55:	48 8d 85 f0 f6 ff ff 	lea    -0x910(%rbp),%rax
  43be5c:	48 89 85 c8 f8 ff ff 	mov    %rax,-0x738(%rbp)
  43be63:	48 83 bd c8 f8 ff ff 	cmpq   $0x0,-0x738(%rbp)
  43be6a:	00 
  43be6b:	75 05                	jne    43be72 <mbedtls_rsa_private+0x1cf2>
  43be6d:	e9 6c 01 00 00       	jmpq   43bfde <mbedtls_rsa_private+0x1e5e>
  43be72:	48 8b 85 c8 f8 ff ff 	mov    -0x738(%rbp),%rax
  43be79:	48 83 c0 10          	add    $0x10,%rax
  43be7d:	48 89 c7             	mov    %rax,%rdi
  43be80:	e8 c3 a2 00 00       	callq  446148 <getDecryptedValueQWord>
  43be85:	48 83 f8 00          	cmp    $0x0,%rax
  43be89:	0f 84 00 01 00 00    	je     43bf8f <mbedtls_rsa_private+0x1e0f>
  43be8f:	48 8b 85 c8 f8 ff ff 	mov    -0x738(%rbp),%rax
  43be96:	48 83 c0 10          	add    $0x10,%rax
  43be9a:	48 89 c7             	mov    %rax,%rdi
  43be9d:	e8 a6 a2 00 00       	callq  446148 <getDecryptedValueQWord>
  43bea2:	48 8b bd c8 f8 ff ff 	mov    -0x738(%rbp),%rdi
  43bea9:	48 83 c7 08          	add    $0x8,%rdi
  43bead:	48 89 85 38 f2 ff ff 	mov    %rax,-0xdc8(%rbp)
  43beb4:	e8 8f a2 00 00       	callq  446148 <getDecryptedValueQWord>
  43beb9:	48 8b bd 38 f2 ff ff 	mov    -0xdc8(%rbp),%rdi
  43bec0:	48 89 bd d8 f8 ff ff 	mov    %rdi,-0x728(%rbp)
  43bec7:	48 89 85 d0 f8 ff ff 	mov    %rax,-0x730(%rbp)
  43bece:	48 8b 85 d8 f8 ff ff 	mov    -0x728(%rbp),%rax
  43bed5:	48 8b 8d d0 f8 ff ff 	mov    -0x730(%rbp),%rcx
  43bedc:	48 c1 e1 03          	shl    $0x3,%rcx
  43bee0:	48 89 85 e8 f8 ff ff 	mov    %rax,-0x718(%rbp)
  43bee7:	48 89 8d e0 f8 ff ff 	mov    %rcx,-0x720(%rbp)
  43beee:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  43bef5:	00 
  43bef6:	48 8b 8d e8 f8 ff ff 	mov    -0x718(%rbp),%rcx
  43befd:	48 8b 95 e0 f8 ff ff 	mov    -0x720(%rbp),%rdx
  43bf04:	48 89 85 30 f2 ff ff 	mov    %rax,-0xdd0(%rbp)
  43bf0b:	48 89 8d 28 f2 ff ff 	mov    %rcx,-0xdd8(%rbp)
  43bf12:	48 89 95 20 f2 ff ff 	mov    %rdx,-0xde0(%rbp)
  43bf19:	e8 38 9a 00 00       	callq  445956 <writeback_cache>
  43bf1e:	48 8b bd 28 f2 ff ff 	mov    -0xdd8(%rbp),%rdi
  43bf25:	48 8b b5 20 f2 ff ff 	mov    -0xde0(%rbp),%rsi
  43bf2c:	e8 b4 a7 00 00       	callq  4466e5 <decryptArrayForLibCall>
  43bf31:	31 f6                	xor    %esi,%esi
  43bf33:	48 8b bd 28 f2 ff ff 	mov    -0xdd8(%rbp),%rdi
  43bf3a:	48 8b 95 20 f2 ff ff 	mov    -0xde0(%rbp),%rdx
  43bf41:	48 8b 85 30 f2 ff ff 	mov    -0xdd0(%rbp),%rax
  43bf48:	ff d0                	callq  *%rax
  43bf4a:	48 8b bd 28 f2 ff ff 	mov    -0xdd8(%rbp),%rdi
  43bf51:	48 8b b5 20 f2 ff ff 	mov    -0xde0(%rbp),%rsi
  43bf58:	48 89 85 18 f2 ff ff 	mov    %rax,-0xde8(%rbp)
  43bf5f:	e8 f2 a4 00 00       	callq  446456 <encryptArrayForLibCall>
  43bf64:	48 8b 85 c8 f8 ff ff 	mov    -0x738(%rbp),%rax
  43bf6b:	48 83 c0 10          	add    $0x10,%rax
  43bf6f:	48 89 c7             	mov    %rax,%rdi
  43bf72:	e8 d1 a1 00 00       	callq  446148 <getDecryptedValueQWord>
  43bf77:	48 89 85 10 f2 ff ff 	mov    %rax,-0xdf0(%rbp)
  43bf7e:	e8 d3 99 00 00       	callq  445956 <writeback_cache>
  43bf83:	48 8b bd 10 f2 ff ff 	mov    -0xdf0(%rbp),%rdi
  43bf8a:	e8 51 51 fc ff       	callq  4010e0 <free@plt>
  43bf8f:	48 8b 85 c8 f8 ff ff 	mov    -0x738(%rbp),%rax
  43bf96:	48 89 c7             	mov    %rax,%rdi
  43bf99:	be 01 00 00 00       	mov    $0x1,%esi
  43bf9e:	e8 5b 9c 00 00       	callq  445bfe <setEncryptedValueDWord>
  43bfa3:	31 f6                	xor    %esi,%esi
  43bfa5:	48 8b bd c8 f8 ff ff 	mov    -0x738(%rbp),%rdi
  43bfac:	48 83 c7 08          	add    $0x8,%rdi
  43bfb0:	48 89 85 08 f2 ff ff 	mov    %rax,-0xdf8(%rbp)
  43bfb7:	e8 40 9d 00 00       	callq  445cfc <setEncryptedValueQWord>
  43bfbc:	31 c9                	xor    %ecx,%ecx
  43bfbe:	89 ce                	mov    %ecx,%esi
  43bfc0:	48 8b bd c8 f8 ff ff 	mov    -0x738(%rbp),%rdi
  43bfc7:	48 83 c7 10          	add    $0x10,%rdi
  43bfcb:	48 89 85 00 f2 ff ff 	mov    %rax,-0xe00(%rbp)
  43bfd2:	e8 25 9d 00 00       	callq  445cfc <setEncryptedValueQWord>
  43bfd7:	48 89 85 f8 f1 ff ff 	mov    %rax,-0xe08(%rbp)
  43bfde:	48 8d 85 20 f6 ff ff 	lea    -0x9e0(%rbp),%rax
  43bfe5:	48 89 85 90 f8 ff ff 	mov    %rax,-0x770(%rbp)
  43bfec:	48 83 bd 90 f8 ff ff 	cmpq   $0x0,-0x770(%rbp)
  43bff3:	00 
  43bff4:	75 05                	jne    43bffb <mbedtls_rsa_private+0x1e7b>
  43bff6:	e9 6c 01 00 00       	jmpq   43c167 <mbedtls_rsa_private+0x1fe7>
  43bffb:	48 8b 85 90 f8 ff ff 	mov    -0x770(%rbp),%rax
  43c002:	48 83 c0 10          	add    $0x10,%rax
  43c006:	48 89 c7             	mov    %rax,%rdi
  43c009:	e8 3a a1 00 00       	callq  446148 <getDecryptedValueQWord>
  43c00e:	48 83 f8 00          	cmp    $0x0,%rax
  43c012:	0f 84 00 01 00 00    	je     43c118 <mbedtls_rsa_private+0x1f98>
  43c018:	48 8b 85 90 f8 ff ff 	mov    -0x770(%rbp),%rax
  43c01f:	48 83 c0 10          	add    $0x10,%rax
  43c023:	48 89 c7             	mov    %rax,%rdi
  43c026:	e8 1d a1 00 00       	callq  446148 <getDecryptedValueQWord>
  43c02b:	48 8b bd 90 f8 ff ff 	mov    -0x770(%rbp),%rdi
  43c032:	48 83 c7 08          	add    $0x8,%rdi
  43c036:	48 89 85 f0 f1 ff ff 	mov    %rax,-0xe10(%rbp)
  43c03d:	e8 06 a1 00 00       	callq  446148 <getDecryptedValueQWord>
  43c042:	48 8b bd f0 f1 ff ff 	mov    -0xe10(%rbp),%rdi
  43c049:	48 89 bd a0 f8 ff ff 	mov    %rdi,-0x760(%rbp)
  43c050:	48 89 85 98 f8 ff ff 	mov    %rax,-0x768(%rbp)
  43c057:	48 8b 85 a0 f8 ff ff 	mov    -0x760(%rbp),%rax
  43c05e:	48 8b 8d 98 f8 ff ff 	mov    -0x768(%rbp),%rcx
  43c065:	48 c1 e1 03          	shl    $0x3,%rcx
  43c069:	48 89 85 b0 f8 ff ff 	mov    %rax,-0x750(%rbp)
  43c070:	48 89 8d a8 f8 ff ff 	mov    %rcx,-0x758(%rbp)
  43c077:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  43c07e:	00 
  43c07f:	48 8b 8d b0 f8 ff ff 	mov    -0x750(%rbp),%rcx
  43c086:	48 8b 95 a8 f8 ff ff 	mov    -0x758(%rbp),%rdx
  43c08d:	48 89 85 e8 f1 ff ff 	mov    %rax,-0xe18(%rbp)
  43c094:	48 89 8d e0 f1 ff ff 	mov    %rcx,-0xe20(%rbp)
  43c09b:	48 89 95 d8 f1 ff ff 	mov    %rdx,-0xe28(%rbp)
  43c0a2:	e8 af 98 00 00       	callq  445956 <writeback_cache>
  43c0a7:	48 8b bd e0 f1 ff ff 	mov    -0xe20(%rbp),%rdi
  43c0ae:	48 8b b5 d8 f1 ff ff 	mov    -0xe28(%rbp),%rsi
  43c0b5:	e8 2b a6 00 00       	callq  4466e5 <decryptArrayForLibCall>
  43c0ba:	31 f6                	xor    %esi,%esi
  43c0bc:	48 8b bd e0 f1 ff ff 	mov    -0xe20(%rbp),%rdi
  43c0c3:	48 8b 95 d8 f1 ff ff 	mov    -0xe28(%rbp),%rdx
  43c0ca:	48 8b 85 e8 f1 ff ff 	mov    -0xe18(%rbp),%rax
  43c0d1:	ff d0                	callq  *%rax
  43c0d3:	48 8b bd e0 f1 ff ff 	mov    -0xe20(%rbp),%rdi
  43c0da:	48 8b b5 d8 f1 ff ff 	mov    -0xe28(%rbp),%rsi
  43c0e1:	48 89 85 d0 f1 ff ff 	mov    %rax,-0xe30(%rbp)
  43c0e8:	e8 69 a3 00 00       	callq  446456 <encryptArrayForLibCall>
  43c0ed:	48 8b 85 90 f8 ff ff 	mov    -0x770(%rbp),%rax
  43c0f4:	48 83 c0 10          	add    $0x10,%rax
  43c0f8:	48 89 c7             	mov    %rax,%rdi
  43c0fb:	e8 48 a0 00 00       	callq  446148 <getDecryptedValueQWord>
  43c100:	48 89 85 c8 f1 ff ff 	mov    %rax,-0xe38(%rbp)
  43c107:	e8 4a 98 00 00       	callq  445956 <writeback_cache>
  43c10c:	48 8b bd c8 f1 ff ff 	mov    -0xe38(%rbp),%rdi
  43c113:	e8 c8 4f fc ff       	callq  4010e0 <free@plt>
  43c118:	48 8b 85 90 f8 ff ff 	mov    -0x770(%rbp),%rax
  43c11f:	48 89 c7             	mov    %rax,%rdi
  43c122:	be 01 00 00 00       	mov    $0x1,%esi
  43c127:	e8 d2 9a 00 00       	callq  445bfe <setEncryptedValueDWord>
  43c12c:	31 f6                	xor    %esi,%esi
  43c12e:	48 8b bd 90 f8 ff ff 	mov    -0x770(%rbp),%rdi
  43c135:	48 83 c7 08          	add    $0x8,%rdi
  43c139:	48 89 85 c0 f1 ff ff 	mov    %rax,-0xe40(%rbp)
  43c140:	e8 b7 9b 00 00       	callq  445cfc <setEncryptedValueQWord>
  43c145:	31 c9                	xor    %ecx,%ecx
  43c147:	89 ce                	mov    %ecx,%esi
  43c149:	48 8b bd 90 f8 ff ff 	mov    -0x770(%rbp),%rdi
  43c150:	48 83 c7 10          	add    $0x10,%rdi
  43c154:	48 89 85 b8 f1 ff ff 	mov    %rax,-0xe48(%rbp)
  43c15b:	e8 9c 9b 00 00       	callq  445cfc <setEncryptedValueQWord>
  43c160:	48 89 85 b0 f1 ff ff 	mov    %rax,-0xe50(%rbp)
  43c167:	48 8d 85 50 f6 ff ff 	lea    -0x9b0(%rbp),%rax
  43c16e:	48 89 85 58 f8 ff ff 	mov    %rax,-0x7a8(%rbp)
  43c175:	48 83 bd 58 f8 ff ff 	cmpq   $0x0,-0x7a8(%rbp)
  43c17c:	00 
  43c17d:	75 05                	jne    43c184 <mbedtls_rsa_private+0x2004>
  43c17f:	e9 6c 01 00 00       	jmpq   43c2f0 <mbedtls_rsa_private+0x2170>
  43c184:	48 8b 85 58 f8 ff ff 	mov    -0x7a8(%rbp),%rax
  43c18b:	48 83 c0 10          	add    $0x10,%rax
  43c18f:	48 89 c7             	mov    %rax,%rdi
  43c192:	e8 b1 9f 00 00       	callq  446148 <getDecryptedValueQWord>
  43c197:	48 83 f8 00          	cmp    $0x0,%rax
  43c19b:	0f 84 00 01 00 00    	je     43c2a1 <mbedtls_rsa_private+0x2121>
  43c1a1:	48 8b 85 58 f8 ff ff 	mov    -0x7a8(%rbp),%rax
  43c1a8:	48 83 c0 10          	add    $0x10,%rax
  43c1ac:	48 89 c7             	mov    %rax,%rdi
  43c1af:	e8 94 9f 00 00       	callq  446148 <getDecryptedValueQWord>
  43c1b4:	48 8b bd 58 f8 ff ff 	mov    -0x7a8(%rbp),%rdi
  43c1bb:	48 83 c7 08          	add    $0x8,%rdi
  43c1bf:	48 89 85 a8 f1 ff ff 	mov    %rax,-0xe58(%rbp)
  43c1c6:	e8 7d 9f 00 00       	callq  446148 <getDecryptedValueQWord>
  43c1cb:	48 8b bd a8 f1 ff ff 	mov    -0xe58(%rbp),%rdi
  43c1d2:	48 89 bd 68 f8 ff ff 	mov    %rdi,-0x798(%rbp)
  43c1d9:	48 89 85 60 f8 ff ff 	mov    %rax,-0x7a0(%rbp)
  43c1e0:	48 8b 85 68 f8 ff ff 	mov    -0x798(%rbp),%rax
  43c1e7:	48 8b 8d 60 f8 ff ff 	mov    -0x7a0(%rbp),%rcx
  43c1ee:	48 c1 e1 03          	shl    $0x3,%rcx
  43c1f2:	48 89 85 78 f8 ff ff 	mov    %rax,-0x788(%rbp)
  43c1f9:	48 89 8d 70 f8 ff ff 	mov    %rcx,-0x790(%rbp)
  43c200:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  43c207:	00 
  43c208:	48 8b 8d 78 f8 ff ff 	mov    -0x788(%rbp),%rcx
  43c20f:	48 8b 95 70 f8 ff ff 	mov    -0x790(%rbp),%rdx
  43c216:	48 89 85 a0 f1 ff ff 	mov    %rax,-0xe60(%rbp)
  43c21d:	48 89 8d 98 f1 ff ff 	mov    %rcx,-0xe68(%rbp)
  43c224:	48 89 95 90 f1 ff ff 	mov    %rdx,-0xe70(%rbp)
  43c22b:	e8 26 97 00 00       	callq  445956 <writeback_cache>
  43c230:	48 8b bd 98 f1 ff ff 	mov    -0xe68(%rbp),%rdi
  43c237:	48 8b b5 90 f1 ff ff 	mov    -0xe70(%rbp),%rsi
  43c23e:	e8 a2 a4 00 00       	callq  4466e5 <decryptArrayForLibCall>
  43c243:	31 f6                	xor    %esi,%esi
  43c245:	48 8b bd 98 f1 ff ff 	mov    -0xe68(%rbp),%rdi
  43c24c:	48 8b 95 90 f1 ff ff 	mov    -0xe70(%rbp),%rdx
  43c253:	48 8b 85 a0 f1 ff ff 	mov    -0xe60(%rbp),%rax
  43c25a:	ff d0                	callq  *%rax
  43c25c:	48 8b bd 98 f1 ff ff 	mov    -0xe68(%rbp),%rdi
  43c263:	48 8b b5 90 f1 ff ff 	mov    -0xe70(%rbp),%rsi
  43c26a:	48 89 85 88 f1 ff ff 	mov    %rax,-0xe78(%rbp)
  43c271:	e8 e0 a1 00 00       	callq  446456 <encryptArrayForLibCall>
  43c276:	48 8b 85 58 f8 ff ff 	mov    -0x7a8(%rbp),%rax
  43c27d:	48 83 c0 10          	add    $0x10,%rax
  43c281:	48 89 c7             	mov    %rax,%rdi
  43c284:	e8 bf 9e 00 00       	callq  446148 <getDecryptedValueQWord>
  43c289:	48 89 85 80 f1 ff ff 	mov    %rax,-0xe80(%rbp)
  43c290:	e8 c1 96 00 00       	callq  445956 <writeback_cache>
  43c295:	48 8b bd 80 f1 ff ff 	mov    -0xe80(%rbp),%rdi
  43c29c:	e8 3f 4e fc ff       	callq  4010e0 <free@plt>
  43c2a1:	48 8b 85 58 f8 ff ff 	mov    -0x7a8(%rbp),%rax
  43c2a8:	48 89 c7             	mov    %rax,%rdi
  43c2ab:	be 01 00 00 00       	mov    $0x1,%esi
  43c2b0:	e8 49 99 00 00       	callq  445bfe <setEncryptedValueDWord>
  43c2b5:	31 f6                	xor    %esi,%esi
  43c2b7:	48 8b bd 58 f8 ff ff 	mov    -0x7a8(%rbp),%rdi
  43c2be:	48 83 c7 08          	add    $0x8,%rdi
  43c2c2:	48 89 85 78 f1 ff ff 	mov    %rax,-0xe88(%rbp)
  43c2c9:	e8 2e 9a 00 00       	callq  445cfc <setEncryptedValueQWord>
  43c2ce:	31 c9                	xor    %ecx,%ecx
  43c2d0:	89 ce                	mov    %ecx,%esi
  43c2d2:	48 8b bd 58 f8 ff ff 	mov    -0x7a8(%rbp),%rdi
  43c2d9:	48 83 c7 10          	add    $0x10,%rdi
  43c2dd:	48 89 85 70 f1 ff ff 	mov    %rax,-0xe90(%rbp)
  43c2e4:	e8 13 9a 00 00       	callq  445cfc <setEncryptedValueQWord>
  43c2e9:	48 89 85 68 f1 ff ff 	mov    %rax,-0xe98(%rbp)
  43c2f0:	83 bd 1c f8 ff ff 00 	cmpl   $0x0,-0x7e4(%rbp)
  43c2f7:	74 13                	je     43c30c <mbedtls_rsa_private+0x218c>
  43c2f9:	8b 85 1c f8 ff ff    	mov    -0x7e4(%rbp),%eax
  43c2ff:	05 00 bd ff ff       	add    $0xffffbd00,%eax
  43c304:	89 85 4c f8 ff ff    	mov    %eax,-0x7b4(%rbp)
  43c30a:	eb 0a                	jmp    43c316 <mbedtls_rsa_private+0x2196>
  43c30c:	c7 85 4c f8 ff ff 00 	movl   $0x0,-0x7b4(%rbp)
  43c313:	00 00 00 
  43c316:	8b 85 4c f8 ff ff    	mov    -0x7b4(%rbp),%eax
  43c31c:	89 85 64 f1 ff ff    	mov    %eax,-0xe9c(%rbp)
  43c322:	e8 2f 96 00 00       	callq  445956 <writeback_cache>
  43c327:	8b 85 64 f1 ff ff    	mov    -0xe9c(%rbp),%eax
  43c32d:	48 81 c4 a0 0e 00 00 	add    $0xea0,%rsp
  43c334:	5d                   	pop    %rbp
  43c335:	c3                   	retq   
  43c336:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  43c33d:	00 00 00 

000000000043c340 <rsa_rsassa_pkcs1_v15_encode>:
  43c340:	55                   	push   %rbp
  43c341:	48 89 e5             	mov    %rsp,%rbp
  43c344:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
  43c34b:	89 7d ac             	mov    %edi,-0x54(%rbp)
  43c34e:	89 75 a8             	mov    %esi,-0x58(%rbp)
  43c351:	48 89 55 a0          	mov    %rdx,-0x60(%rbp)
  43c355:	48 89 4d 98          	mov    %rcx,-0x68(%rbp)
  43c359:	4c 89 45 90          	mov    %r8,-0x70(%rbp)
  43c35d:	48 c7 45 88 00 00 00 	movq   $0x0,-0x78(%rbp)
  43c364:	00 
  43c365:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
  43c369:	48 89 4d 80          	mov    %rcx,-0x80(%rbp)
  43c36d:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  43c371:	48 89 8d 78 ff ff ff 	mov    %rcx,-0x88(%rbp)
  43c378:	48 c7 85 70 ff ff ff 	movq   $0x0,-0x90(%rbp)
  43c37f:	00 00 00 00 
  43c383:	83 7d ac 00          	cmpl   $0x0,-0x54(%rbp)
  43c387:	0f 84 dc 01 00 00    	je     43c569 <rsa_rsassa_pkcs1_v15_encode+0x229>
  43c38d:	8b 45 ac             	mov    -0x54(%rbp),%eax
  43c390:	89 45 b4             	mov    %eax,-0x4c(%rbp)
  43c393:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  43c396:	83 c0 fd             	add    $0xfffffffd,%eax
  43c399:	89 c1                	mov    %eax,%ecx
  43c39b:	83 e8 03             	sub    $0x3,%eax
  43c39e:	48 89 8d 60 ff ff ff 	mov    %rcx,-0xa0(%rbp)
  43c3a5:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%rbp)
  43c3ab:	77 51                	ja     43c3fe <rsa_rsassa_pkcs1_v15_encode+0xbe>
  43c3ad:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  43c3b4:	48 8b 0c c5 98 6d 44 	mov    0x446d98(,%rax,8),%rcx
  43c3bb:	00 
  43c3bc:	ff e1                	jmpq   *%rcx
  43c3be:	48 b8 50 d9 44 00 00 	movabs $0x44d950,%rax
  43c3c5:	00 00 00 
  43c3c8:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  43c3cc:	eb 38                	jmp    43c406 <rsa_rsassa_pkcs1_v15_encode+0xc6>
  43c3ce:	48 b8 b0 d9 44 00 00 	movabs $0x44d9b0,%rax
  43c3d5:	00 00 00 
  43c3d8:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  43c3dc:	eb 28                	jmp    43c406 <rsa_rsassa_pkcs1_v15_encode+0xc6>
  43c3de:	48 b8 10 da 44 00 00 	movabs $0x44da10,%rax
  43c3e5:	00 00 00 
  43c3e8:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  43c3ec:	eb 18                	jmp    43c406 <rsa_rsassa_pkcs1_v15_encode+0xc6>
  43c3ee:	48 b8 70 da 44 00 00 	movabs $0x44da70,%rax
  43c3f5:	00 00 00 
  43c3f8:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  43c3fc:	eb 08                	jmp    43c406 <rsa_rsassa_pkcs1_v15_encode+0xc6>
  43c3fe:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
  43c405:	00 
  43c406:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  43c40a:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
  43c411:	48 83 bd 68 ff ff ff 	cmpq   $0x0,-0x98(%rbp)
  43c418:	00 
  43c419:	75 0c                	jne    43c427 <rsa_rsassa_pkcs1_v15_encode+0xe7>
  43c41b:	c7 45 b0 80 bf ff ff 	movl   $0xffffbf80,-0x50(%rbp)
  43c422:	e9 e7 03 00 00       	jmpq   43c80e <rsa_rsassa_pkcs1_v15_encode+0x4ce>
  43c427:	48 b8 00 e2 44 00 00 	movabs $0x44e200,%rax
  43c42e:	00 00 00 
  43c431:	8b 4d ac             	mov    -0x54(%rbp),%ecx
  43c434:	89 4d e8             	mov    %ecx,-0x18(%rbp)
  43c437:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
  43c43e:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
  43c442:	48 8d 55 88          	lea    -0x78(%rbp),%rdx
  43c446:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  43c44a:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  43c44e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  43c452:	48 83 38 00          	cmpq   $0x0,(%rax)
  43c456:	74 40                	je     43c498 <rsa_rsassa_pkcs1_v15_encode+0x158>
  43c458:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  43c45c:	8b 48 20             	mov    0x20(%rax),%ecx
  43c45f:	3b 4d e8             	cmp    -0x18(%rbp),%ecx
  43c462:	75 26                	jne    43c48a <rsa_rsassa_pkcs1_v15_encode+0x14a>
  43c464:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  43c468:	48 8b 00             	mov    (%rax),%rax
  43c46b:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  43c46f:	48 89 01             	mov    %rax,(%rcx)
  43c472:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  43c476:	48 8b 40 08          	mov    0x8(%rax),%rax
  43c47a:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  43c47e:	48 89 01             	mov    %rax,(%rcx)
  43c481:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  43c488:	eb 15                	jmp    43c49f <rsa_rsassa_pkcs1_v15_encode+0x15f>
  43c48a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  43c48e:	48 83 c0 28          	add    $0x28,%rax
  43c492:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  43c496:	eb b6                	jmp    43c44e <rsa_rsassa_pkcs1_v15_encode+0x10e>
  43c498:	c7 45 ec d2 ff ff ff 	movl   $0xffffffd2,-0x14(%rbp)
  43c49f:	8b 45 ec             	mov    -0x14(%rbp),%eax
  43c4a2:	83 f8 00             	cmp    $0x0,%eax
  43c4a5:	74 0c                	je     43c4b3 <rsa_rsassa_pkcs1_v15_encode+0x173>
  43c4a7:	c7 45 b0 80 bf ff ff 	movl   $0xffffbf80,-0x50(%rbp)
  43c4ae:	e9 5b 03 00 00       	jmpq   43c80e <rsa_rsassa_pkcs1_v15_encode+0x4ce>
  43c4b3:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  43c4ba:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  43c4be:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  43c4c3:	75 06                	jne    43c4cb <rsa_rsassa_pkcs1_v15_encode+0x18b>
  43c4c5:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
  43c4c9:	eb 0c                	jmp    43c4d7 <rsa_rsassa_pkcs1_v15_encode+0x197>
  43c4cb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43c4cf:	8b 48 10             	mov    0x10(%rax),%ecx
  43c4d2:	88 ca                	mov    %cl,%dl
  43c4d4:	88 55 ff             	mov    %dl,-0x1(%rbp)
  43c4d7:	8a 45 ff             	mov    -0x1(%rbp),%al
  43c4da:	0f b6 c8             	movzbl %al,%ecx
  43c4dd:	89 4d a8             	mov    %ecx,-0x58(%rbp)
  43c4e0:	8b 4d a8             	mov    -0x58(%rbp),%ecx
  43c4e3:	83 c1 08             	add    $0x8,%ecx
  43c4e6:	89 c9                	mov    %ecx,%ecx
  43c4e8:	89 ca                	mov    %ecx,%edx
  43c4ea:	48 03 55 88          	add    -0x78(%rbp),%rdx
  43c4ee:	48 81 fa 80 00 00 00 	cmp    $0x80,%rdx
  43c4f5:	73 28                	jae    43c51f <rsa_rsassa_pkcs1_v15_encode+0x1df>
  43c4f7:	8b 45 a8             	mov    -0x58(%rbp),%eax
  43c4fa:	83 c0 0a             	add    $0xa,%eax
  43c4fd:	3b 45 a8             	cmp    -0x58(%rbp),%eax
  43c500:	72 1d                	jb     43c51f <rsa_rsassa_pkcs1_v15_encode+0x1df>
  43c502:	8b 45 a8             	mov    -0x58(%rbp),%eax
  43c505:	83 c0 0a             	add    $0xa,%eax
  43c508:	89 c0                	mov    %eax,%eax
  43c50a:	89 c1                	mov    %eax,%ecx
  43c50c:	48 03 4d 88          	add    -0x78(%rbp),%rcx
  43c510:	8b 45 a8             	mov    -0x58(%rbp),%eax
  43c513:	83 c0 0a             	add    $0xa,%eax
  43c516:	89 c0                	mov    %eax,%eax
  43c518:	89 c2                	mov    %eax,%edx
  43c51a:	48 39 d1             	cmp    %rdx,%rcx
  43c51d:	73 0c                	jae    43c52b <rsa_rsassa_pkcs1_v15_encode+0x1eb>
  43c51f:	c7 45 b0 80 bf ff ff 	movl   $0xffffbf80,-0x50(%rbp)
  43c526:	e9 e3 02 00 00       	jmpq   43c80e <rsa_rsassa_pkcs1_v15_encode+0x4ce>
  43c52b:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  43c52f:	8b 4d a8             	mov    -0x58(%rbp),%ecx
  43c532:	83 c1 0a             	add    $0xa,%ecx
  43c535:	89 c9                	mov    %ecx,%ecx
  43c537:	89 ca                	mov    %ecx,%edx
  43c539:	48 03 55 88          	add    -0x78(%rbp),%rdx
  43c53d:	48 39 d0             	cmp    %rdx,%rax
  43c540:	73 0c                	jae    43c54e <rsa_rsassa_pkcs1_v15_encode+0x20e>
  43c542:	c7 45 b0 80 bf ff ff 	movl   $0xffffbf80,-0x50(%rbp)
  43c549:	e9 c0 02 00 00       	jmpq   43c80e <rsa_rsassa_pkcs1_v15_encode+0x4ce>
  43c54e:	8b 45 a8             	mov    -0x58(%rbp),%eax
  43c551:	83 c0 0a             	add    $0xa,%eax
  43c554:	89 c0                	mov    %eax,%eax
  43c556:	89 c1                	mov    %eax,%ecx
  43c558:	48 03 4d 88          	add    -0x78(%rbp),%rcx
  43c55c:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
  43c560:	48 29 ca             	sub    %rcx,%rdx
  43c563:	48 89 55 80          	mov    %rdx,-0x80(%rbp)
  43c567:	eb 2a                	jmp    43c593 <rsa_rsassa_pkcs1_v15_encode+0x253>
  43c569:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  43c56d:	8b 4d a8             	mov    -0x58(%rbp),%ecx
  43c570:	89 ca                	mov    %ecx,%edx
  43c572:	48 39 d0             	cmp    %rdx,%rax
  43c575:	73 0c                	jae    43c583 <rsa_rsassa_pkcs1_v15_encode+0x243>
  43c577:	c7 45 b0 80 bf ff ff 	movl   $0xffffbf80,-0x50(%rbp)
  43c57e:	e9 8b 02 00 00       	jmpq   43c80e <rsa_rsassa_pkcs1_v15_encode+0x4ce>
  43c583:	8b 45 a8             	mov    -0x58(%rbp),%eax
  43c586:	89 c1                	mov    %eax,%ecx
  43c588:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
  43c58c:	48 29 ca             	sub    %rcx,%rdx
  43c58f:	48 89 55 80          	mov    %rdx,-0x80(%rbp)
  43c593:	48 83 7d 80 0b       	cmpq   $0xb,-0x80(%rbp)
  43c598:	73 0c                	jae    43c5a6 <rsa_rsassa_pkcs1_v15_encode+0x266>
  43c59a:	c7 45 b0 80 bf ff ff 	movl   $0xffffbf80,-0x50(%rbp)
  43c5a1:	e9 68 02 00 00       	jmpq   43c80e <rsa_rsassa_pkcs1_v15_encode+0x4ce>
  43c5a6:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  43c5aa:	48 83 e8 03          	sub    $0x3,%rax
  43c5ae:	48 89 45 80          	mov    %rax,-0x80(%rbp)
  43c5b2:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  43c5b9:	48 89 c1             	mov    %rax,%rcx
  43c5bc:	48 83 c1 01          	add    $0x1,%rcx
  43c5c0:	48 89 8d 78 ff ff ff 	mov    %rcx,-0x88(%rbp)
  43c5c7:	c6 00 00             	movb   $0x0,(%rax)
  43c5ca:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  43c5d1:	48 89 c1             	mov    %rax,%rcx
  43c5d4:	48 83 c1 01          	add    $0x1,%rcx
  43c5d8:	48 89 8d 78 ff ff ff 	mov    %rcx,-0x88(%rbp)
  43c5df:	c6 00 01             	movb   $0x1,(%rax)
  43c5e2:	48 8b bd 78 ff ff ff 	mov    -0x88(%rbp),%rdi
  43c5e9:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
  43c5ed:	be ff 00 00 00       	mov    $0xff,%esi
  43c5f2:	e8 29 4a fc ff       	callq  401020 <memset@plt>
  43c5f7:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  43c5fb:	48 03 85 78 ff ff ff 	add    -0x88(%rbp),%rax
  43c602:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  43c609:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  43c610:	48 89 c1             	mov    %rax,%rcx
  43c613:	48 83 c1 01          	add    $0x1,%rcx
  43c617:	48 89 8d 78 ff ff ff 	mov    %rcx,-0x88(%rbp)
  43c61e:	c6 00 00             	movb   $0x0,(%rax)
  43c621:	83 7d ac 00          	cmpl   $0x0,-0x54(%rbp)
  43c625:	75 21                	jne    43c648 <rsa_rsassa_pkcs1_v15_encode+0x308>
  43c627:	48 8b bd 78 ff ff ff 	mov    -0x88(%rbp),%rdi
  43c62e:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
  43c632:	8b 45 a8             	mov    -0x58(%rbp),%eax
  43c635:	89 c2                	mov    %eax,%edx
  43c637:	e8 34 4b fc ff       	callq  401170 <memcpy@plt>
  43c63c:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
  43c643:	e9 c6 01 00 00       	jmpq   43c80e <rsa_rsassa_pkcs1_v15_encode+0x4ce>
  43c648:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  43c64f:	48 89 c1             	mov    %rax,%rcx
  43c652:	48 83 c1 01          	add    $0x1,%rcx
  43c656:	48 89 8d 78 ff ff ff 	mov    %rcx,-0x88(%rbp)
  43c65d:	c6 00 30             	movb   $0x30,(%rax)
  43c660:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  43c664:	48 83 c0 08          	add    $0x8,%rax
  43c668:	8b 55 a8             	mov    -0x58(%rbp),%edx
  43c66b:	89 d1                	mov    %edx,%ecx
  43c66d:	48 01 c8             	add    %rcx,%rax
  43c670:	40 88 c6             	mov    %al,%sil
  43c673:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  43c67a:	48 89 c1             	mov    %rax,%rcx
  43c67d:	48 83 c1 01          	add    $0x1,%rcx
  43c681:	48 89 8d 78 ff ff ff 	mov    %rcx,-0x88(%rbp)
  43c688:	40 88 30             	mov    %sil,(%rax)
  43c68b:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  43c692:	48 89 c1             	mov    %rax,%rcx
  43c695:	48 83 c1 01          	add    $0x1,%rcx
  43c699:	48 89 8d 78 ff ff ff 	mov    %rcx,-0x88(%rbp)
  43c6a0:	c6 00 30             	movb   $0x30,(%rax)
  43c6a3:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  43c6a7:	48 83 c0 04          	add    $0x4,%rax
  43c6ab:	40 88 c6             	mov    %al,%sil
  43c6ae:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  43c6b5:	48 89 c1             	mov    %rax,%rcx
  43c6b8:	48 83 c1 01          	add    $0x1,%rcx
  43c6bc:	48 89 8d 78 ff ff ff 	mov    %rcx,-0x88(%rbp)
  43c6c3:	40 88 30             	mov    %sil,(%rax)
  43c6c6:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  43c6cd:	48 89 c1             	mov    %rax,%rcx
  43c6d0:	48 83 c1 01          	add    $0x1,%rcx
  43c6d4:	48 89 8d 78 ff ff ff 	mov    %rcx,-0x88(%rbp)
  43c6db:	c6 00 06             	movb   $0x6,(%rax)
  43c6de:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  43c6e2:	40 88 c6             	mov    %al,%sil
  43c6e5:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  43c6ec:	48 89 c1             	mov    %rax,%rcx
  43c6ef:	48 83 c1 01          	add    $0x1,%rcx
  43c6f3:	48 89 8d 78 ff ff ff 	mov    %rcx,-0x88(%rbp)
  43c6fa:	40 88 30             	mov    %sil,(%rax)
  43c6fd:	48 8b bd 78 ff ff ff 	mov    -0x88(%rbp),%rdi
  43c704:	48 8b b5 70 ff ff ff 	mov    -0x90(%rbp),%rsi
  43c70b:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
  43c70f:	e8 5c 4a fc ff       	callq  401170 <memcpy@plt>
  43c714:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  43c718:	48 03 85 78 ff ff ff 	add    -0x88(%rbp),%rax
  43c71f:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  43c726:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  43c72d:	48 89 c1             	mov    %rax,%rcx
  43c730:	48 83 c1 01          	add    $0x1,%rcx
  43c734:	48 89 8d 78 ff ff ff 	mov    %rcx,-0x88(%rbp)
  43c73b:	c6 00 05             	movb   $0x5,(%rax)
  43c73e:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  43c745:	48 89 c1             	mov    %rax,%rcx
  43c748:	48 83 c1 01          	add    $0x1,%rcx
  43c74c:	48 89 8d 78 ff ff ff 	mov    %rcx,-0x88(%rbp)
  43c753:	c6 00 00             	movb   $0x0,(%rax)
  43c756:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  43c75d:	48 89 c1             	mov    %rax,%rcx
  43c760:	48 83 c1 01          	add    $0x1,%rcx
  43c764:	48 89 8d 78 ff ff ff 	mov    %rcx,-0x88(%rbp)
  43c76b:	c6 00 04             	movb   $0x4,(%rax)
  43c76e:	44 8b 45 a8          	mov    -0x58(%rbp),%r8d
  43c772:	45 88 c1             	mov    %r8b,%r9b
  43c775:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  43c77c:	48 89 c1             	mov    %rax,%rcx
  43c77f:	48 83 c1 01          	add    $0x1,%rcx
  43c783:	48 89 8d 78 ff ff ff 	mov    %rcx,-0x88(%rbp)
  43c78a:	44 88 08             	mov    %r9b,(%rax)
  43c78d:	48 8b bd 78 ff ff ff 	mov    -0x88(%rbp),%rdi
  43c794:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
  43c798:	44 8b 45 a8          	mov    -0x58(%rbp),%r8d
  43c79c:	44 89 c2             	mov    %r8d,%edx
  43c79f:	e8 cc 49 fc ff       	callq  401170 <memcpy@plt>
  43c7a4:	44 8b 45 a8          	mov    -0x58(%rbp),%r8d
  43c7a8:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  43c7af:	45 89 c0             	mov    %r8d,%r8d
  43c7b2:	44 89 c1             	mov    %r8d,%ecx
  43c7b5:	48 01 c8             	add    %rcx,%rax
  43c7b8:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  43c7bf:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  43c7c6:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  43c7ca:	48 03 4d 98          	add    -0x68(%rbp),%rcx
  43c7ce:	48 39 c8             	cmp    %rcx,%rax
  43c7d1:	74 34                	je     43c807 <rsa_rsassa_pkcs1_v15_encode+0x4c7>
  43c7d3:	31 f6                	xor    %esi,%esi
  43c7d5:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  43c7d9:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
  43c7dd:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  43c7e1:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
  43c7e5:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  43c7ec:	00 
  43c7ed:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  43c7f1:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  43c7f5:	ff d0                	callq  *%rax
  43c7f7:	c7 45 b0 80 bf ff ff 	movl   $0xffffbf80,-0x50(%rbp)
  43c7fe:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
  43c805:	eb 07                	jmp    43c80e <rsa_rsassa_pkcs1_v15_encode+0x4ce>
  43c807:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
  43c80e:	8b 45 b0             	mov    -0x50(%rbp),%eax
  43c811:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
  43c817:	e8 3a 91 00 00       	callq  445956 <writeback_cache>
  43c81c:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
  43c822:	48 81 c4 c0 00 00 00 	add    $0xc0,%rsp
  43c829:	5d                   	pop    %rbp
  43c82a:	c3                   	retq   
  43c82b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000043c830 <mbedtls_rsa_free>:
  43c830:	55                   	push   %rbp
  43c831:	48 89 e5             	mov    %rsp,%rbp
  43c834:	48 81 ec c0 05 00 00 	sub    $0x5c0,%rsp
  43c83b:	48 89 bd f0 fd ff ff 	mov    %rdi,-0x210(%rbp)
  43c842:	48 83 bd f0 fd ff ff 	cmpq   $0x0,-0x210(%rbp)
  43c849:	00 
  43c84a:	75 05                	jne    43c851 <mbedtls_rsa_free+0x21>
  43c84c:	e9 9a 13 00 00       	jmpq   43dbeb <mbedtls_rsa_free+0x13bb>
  43c851:	48 8b 85 f0 fd ff ff 	mov    -0x210(%rbp),%rax
  43c858:	48 05 18 01 00 00    	add    $0x118,%rax
  43c85e:	48 89 85 f8 fd ff ff 	mov    %rax,-0x208(%rbp)
  43c865:	48 83 bd f8 fd ff ff 	cmpq   $0x0,-0x208(%rbp)
  43c86c:	00 
  43c86d:	75 05                	jne    43c874 <mbedtls_rsa_free+0x44>
  43c86f:	e9 6c 01 00 00       	jmpq   43c9e0 <mbedtls_rsa_free+0x1b0>
  43c874:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
  43c87b:	48 83 c0 10          	add    $0x10,%rax
  43c87f:	48 89 c7             	mov    %rax,%rdi
  43c882:	e8 c1 98 00 00       	callq  446148 <getDecryptedValueQWord>
  43c887:	48 83 f8 00          	cmp    $0x0,%rax
  43c88b:	0f 84 00 01 00 00    	je     43c991 <mbedtls_rsa_free+0x161>
  43c891:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
  43c898:	48 83 c0 10          	add    $0x10,%rax
  43c89c:	48 89 c7             	mov    %rax,%rdi
  43c89f:	e8 a4 98 00 00       	callq  446148 <getDecryptedValueQWord>
  43c8a4:	48 8b bd f8 fd ff ff 	mov    -0x208(%rbp),%rdi
  43c8ab:	48 83 c7 08          	add    $0x8,%rdi
  43c8af:	48 89 85 e8 fd ff ff 	mov    %rax,-0x218(%rbp)
  43c8b6:	e8 8d 98 00 00       	callq  446148 <getDecryptedValueQWord>
  43c8bb:	48 8b bd e8 fd ff ff 	mov    -0x218(%rbp),%rdi
  43c8c2:	48 89 bd 08 fe ff ff 	mov    %rdi,-0x1f8(%rbp)
  43c8c9:	48 89 85 00 fe ff ff 	mov    %rax,-0x200(%rbp)
  43c8d0:	48 8b 85 08 fe ff ff 	mov    -0x1f8(%rbp),%rax
  43c8d7:	48 8b 8d 00 fe ff ff 	mov    -0x200(%rbp),%rcx
  43c8de:	48 c1 e1 03          	shl    $0x3,%rcx
  43c8e2:	48 89 85 18 fe ff ff 	mov    %rax,-0x1e8(%rbp)
  43c8e9:	48 89 8d 10 fe ff ff 	mov    %rcx,-0x1f0(%rbp)
  43c8f0:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  43c8f7:	00 
  43c8f8:	48 8b 8d 18 fe ff ff 	mov    -0x1e8(%rbp),%rcx
  43c8ff:	48 8b 95 10 fe ff ff 	mov    -0x1f0(%rbp),%rdx
  43c906:	48 89 85 e0 fd ff ff 	mov    %rax,-0x220(%rbp)
  43c90d:	48 89 8d d8 fd ff ff 	mov    %rcx,-0x228(%rbp)
  43c914:	48 89 95 d0 fd ff ff 	mov    %rdx,-0x230(%rbp)
  43c91b:	e8 36 90 00 00       	callq  445956 <writeback_cache>
  43c920:	48 8b bd d8 fd ff ff 	mov    -0x228(%rbp),%rdi
  43c927:	48 8b b5 d0 fd ff ff 	mov    -0x230(%rbp),%rsi
  43c92e:	e8 b2 9d 00 00       	callq  4466e5 <decryptArrayForLibCall>
  43c933:	31 f6                	xor    %esi,%esi
  43c935:	48 8b bd d8 fd ff ff 	mov    -0x228(%rbp),%rdi
  43c93c:	48 8b 95 d0 fd ff ff 	mov    -0x230(%rbp),%rdx
  43c943:	48 8b 85 e0 fd ff ff 	mov    -0x220(%rbp),%rax
  43c94a:	ff d0                	callq  *%rax
  43c94c:	48 8b bd d8 fd ff ff 	mov    -0x228(%rbp),%rdi
  43c953:	48 8b b5 d0 fd ff ff 	mov    -0x230(%rbp),%rsi
  43c95a:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
  43c961:	e8 f0 9a 00 00       	callq  446456 <encryptArrayForLibCall>
  43c966:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
  43c96d:	48 83 c0 10          	add    $0x10,%rax
  43c971:	48 89 c7             	mov    %rax,%rdi
  43c974:	e8 cf 97 00 00       	callq  446148 <getDecryptedValueQWord>
  43c979:	48 89 85 c0 fd ff ff 	mov    %rax,-0x240(%rbp)
  43c980:	e8 d1 8f 00 00       	callq  445956 <writeback_cache>
  43c985:	48 8b bd c0 fd ff ff 	mov    -0x240(%rbp),%rdi
  43c98c:	e8 4f 47 fc ff       	callq  4010e0 <free@plt>
  43c991:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
  43c998:	48 89 c7             	mov    %rax,%rdi
  43c99b:	be 01 00 00 00       	mov    $0x1,%esi
  43c9a0:	e8 59 92 00 00       	callq  445bfe <setEncryptedValueDWord>
  43c9a5:	31 f6                	xor    %esi,%esi
  43c9a7:	48 8b bd f8 fd ff ff 	mov    -0x208(%rbp),%rdi
  43c9ae:	48 83 c7 08          	add    $0x8,%rdi
  43c9b2:	48 89 85 b8 fd ff ff 	mov    %rax,-0x248(%rbp)
  43c9b9:	e8 3e 93 00 00       	callq  445cfc <setEncryptedValueQWord>
  43c9be:	31 c9                	xor    %ecx,%ecx
  43c9c0:	89 ce                	mov    %ecx,%esi
  43c9c2:	48 8b bd f8 fd ff ff 	mov    -0x208(%rbp),%rdi
  43c9c9:	48 83 c7 10          	add    $0x10,%rdi
  43c9cd:	48 89 85 b0 fd ff ff 	mov    %rax,-0x250(%rbp)
  43c9d4:	e8 23 93 00 00       	callq  445cfc <setEncryptedValueQWord>
  43c9d9:	48 89 85 a8 fd ff ff 	mov    %rax,-0x258(%rbp)
  43c9e0:	48 8b 85 f0 fd ff ff 	mov    -0x210(%rbp),%rax
  43c9e7:	48 05 30 01 00 00    	add    $0x130,%rax
  43c9ed:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
  43c9f4:	48 83 bd 20 fe ff ff 	cmpq   $0x0,-0x1e0(%rbp)
  43c9fb:	00 
  43c9fc:	75 05                	jne    43ca03 <mbedtls_rsa_free+0x1d3>
  43c9fe:	e9 6c 01 00 00       	jmpq   43cb6f <mbedtls_rsa_free+0x33f>
  43ca03:	48 8b 85 20 fe ff ff 	mov    -0x1e0(%rbp),%rax
  43ca0a:	48 83 c0 10          	add    $0x10,%rax
  43ca0e:	48 89 c7             	mov    %rax,%rdi
  43ca11:	e8 32 97 00 00       	callq  446148 <getDecryptedValueQWord>
  43ca16:	48 83 f8 00          	cmp    $0x0,%rax
  43ca1a:	0f 84 00 01 00 00    	je     43cb20 <mbedtls_rsa_free+0x2f0>
  43ca20:	48 8b 85 20 fe ff ff 	mov    -0x1e0(%rbp),%rax
  43ca27:	48 83 c0 10          	add    $0x10,%rax
  43ca2b:	48 89 c7             	mov    %rax,%rdi
  43ca2e:	e8 15 97 00 00       	callq  446148 <getDecryptedValueQWord>
  43ca33:	48 8b bd 20 fe ff ff 	mov    -0x1e0(%rbp),%rdi
  43ca3a:	48 83 c7 08          	add    $0x8,%rdi
  43ca3e:	48 89 85 a0 fd ff ff 	mov    %rax,-0x260(%rbp)
  43ca45:	e8 fe 96 00 00       	callq  446148 <getDecryptedValueQWord>
  43ca4a:	48 8b bd a0 fd ff ff 	mov    -0x260(%rbp),%rdi
  43ca51:	48 89 bd 30 fe ff ff 	mov    %rdi,-0x1d0(%rbp)
  43ca58:	48 89 85 28 fe ff ff 	mov    %rax,-0x1d8(%rbp)
  43ca5f:	48 8b 85 30 fe ff ff 	mov    -0x1d0(%rbp),%rax
  43ca66:	48 8b 8d 28 fe ff ff 	mov    -0x1d8(%rbp),%rcx
  43ca6d:	48 c1 e1 03          	shl    $0x3,%rcx
  43ca71:	48 89 85 40 fe ff ff 	mov    %rax,-0x1c0(%rbp)
  43ca78:	48 89 8d 38 fe ff ff 	mov    %rcx,-0x1c8(%rbp)
  43ca7f:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  43ca86:	00 
  43ca87:	48 8b 8d 40 fe ff ff 	mov    -0x1c0(%rbp),%rcx
  43ca8e:	48 8b 95 38 fe ff ff 	mov    -0x1c8(%rbp),%rdx
  43ca95:	48 89 85 98 fd ff ff 	mov    %rax,-0x268(%rbp)
  43ca9c:	48 89 8d 90 fd ff ff 	mov    %rcx,-0x270(%rbp)
  43caa3:	48 89 95 88 fd ff ff 	mov    %rdx,-0x278(%rbp)
  43caaa:	e8 a7 8e 00 00       	callq  445956 <writeback_cache>
  43caaf:	48 8b bd 90 fd ff ff 	mov    -0x270(%rbp),%rdi
  43cab6:	48 8b b5 88 fd ff ff 	mov    -0x278(%rbp),%rsi
  43cabd:	e8 23 9c 00 00       	callq  4466e5 <decryptArrayForLibCall>
  43cac2:	31 f6                	xor    %esi,%esi
  43cac4:	48 8b bd 90 fd ff ff 	mov    -0x270(%rbp),%rdi
  43cacb:	48 8b 95 88 fd ff ff 	mov    -0x278(%rbp),%rdx
  43cad2:	48 8b 85 98 fd ff ff 	mov    -0x268(%rbp),%rax
  43cad9:	ff d0                	callq  *%rax
  43cadb:	48 8b bd 90 fd ff ff 	mov    -0x270(%rbp),%rdi
  43cae2:	48 8b b5 88 fd ff ff 	mov    -0x278(%rbp),%rsi
  43cae9:	48 89 85 80 fd ff ff 	mov    %rax,-0x280(%rbp)
  43caf0:	e8 61 99 00 00       	callq  446456 <encryptArrayForLibCall>
  43caf5:	48 8b 85 20 fe ff ff 	mov    -0x1e0(%rbp),%rax
  43cafc:	48 83 c0 10          	add    $0x10,%rax
  43cb00:	48 89 c7             	mov    %rax,%rdi
  43cb03:	e8 40 96 00 00       	callq  446148 <getDecryptedValueQWord>
  43cb08:	48 89 85 78 fd ff ff 	mov    %rax,-0x288(%rbp)
  43cb0f:	e8 42 8e 00 00       	callq  445956 <writeback_cache>
  43cb14:	48 8b bd 78 fd ff ff 	mov    -0x288(%rbp),%rdi
  43cb1b:	e8 c0 45 fc ff       	callq  4010e0 <free@plt>
  43cb20:	48 8b 85 20 fe ff ff 	mov    -0x1e0(%rbp),%rax
  43cb27:	48 89 c7             	mov    %rax,%rdi
  43cb2a:	be 01 00 00 00       	mov    $0x1,%esi
  43cb2f:	e8 ca 90 00 00       	callq  445bfe <setEncryptedValueDWord>
  43cb34:	31 f6                	xor    %esi,%esi
  43cb36:	48 8b bd 20 fe ff ff 	mov    -0x1e0(%rbp),%rdi
  43cb3d:	48 83 c7 08          	add    $0x8,%rdi
  43cb41:	48 89 85 70 fd ff ff 	mov    %rax,-0x290(%rbp)
  43cb48:	e8 af 91 00 00       	callq  445cfc <setEncryptedValueQWord>
  43cb4d:	31 c9                	xor    %ecx,%ecx
  43cb4f:	89 ce                	mov    %ecx,%esi
  43cb51:	48 8b bd 20 fe ff ff 	mov    -0x1e0(%rbp),%rdi
  43cb58:	48 83 c7 10          	add    $0x10,%rdi
  43cb5c:	48 89 85 68 fd ff ff 	mov    %rax,-0x298(%rbp)
  43cb63:	e8 94 91 00 00       	callq  445cfc <setEncryptedValueQWord>
  43cb68:	48 89 85 60 fd ff ff 	mov    %rax,-0x2a0(%rbp)
  43cb6f:	48 8b 85 f0 fd ff ff 	mov    -0x210(%rbp),%rax
  43cb76:	48 05 d0 00 00 00    	add    $0xd0,%rax
  43cb7c:	48 89 85 48 fe ff ff 	mov    %rax,-0x1b8(%rbp)
  43cb83:	48 83 bd 48 fe ff ff 	cmpq   $0x0,-0x1b8(%rbp)
  43cb8a:	00 
  43cb8b:	75 05                	jne    43cb92 <mbedtls_rsa_free+0x362>
  43cb8d:	e9 6c 01 00 00       	jmpq   43ccfe <mbedtls_rsa_free+0x4ce>
  43cb92:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
  43cb99:	48 83 c0 10          	add    $0x10,%rax
  43cb9d:	48 89 c7             	mov    %rax,%rdi
  43cba0:	e8 a3 95 00 00       	callq  446148 <getDecryptedValueQWord>
  43cba5:	48 83 f8 00          	cmp    $0x0,%rax
  43cba9:	0f 84 00 01 00 00    	je     43ccaf <mbedtls_rsa_free+0x47f>
  43cbaf:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
  43cbb6:	48 83 c0 10          	add    $0x10,%rax
  43cbba:	48 89 c7             	mov    %rax,%rdi
  43cbbd:	e8 86 95 00 00       	callq  446148 <getDecryptedValueQWord>
  43cbc2:	48 8b bd 48 fe ff ff 	mov    -0x1b8(%rbp),%rdi
  43cbc9:	48 83 c7 08          	add    $0x8,%rdi
  43cbcd:	48 89 85 58 fd ff ff 	mov    %rax,-0x2a8(%rbp)
  43cbd4:	e8 6f 95 00 00       	callq  446148 <getDecryptedValueQWord>
  43cbd9:	48 8b bd 58 fd ff ff 	mov    -0x2a8(%rbp),%rdi
  43cbe0:	48 89 bd 58 fe ff ff 	mov    %rdi,-0x1a8(%rbp)
  43cbe7:	48 89 85 50 fe ff ff 	mov    %rax,-0x1b0(%rbp)
  43cbee:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
  43cbf5:	48 8b 8d 50 fe ff ff 	mov    -0x1b0(%rbp),%rcx
  43cbfc:	48 c1 e1 03          	shl    $0x3,%rcx
  43cc00:	48 89 85 68 fe ff ff 	mov    %rax,-0x198(%rbp)
  43cc07:	48 89 8d 60 fe ff ff 	mov    %rcx,-0x1a0(%rbp)
  43cc0e:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  43cc15:	00 
  43cc16:	48 8b 8d 68 fe ff ff 	mov    -0x198(%rbp),%rcx
  43cc1d:	48 8b 95 60 fe ff ff 	mov    -0x1a0(%rbp),%rdx
  43cc24:	48 89 85 50 fd ff ff 	mov    %rax,-0x2b0(%rbp)
  43cc2b:	48 89 8d 48 fd ff ff 	mov    %rcx,-0x2b8(%rbp)
  43cc32:	48 89 95 40 fd ff ff 	mov    %rdx,-0x2c0(%rbp)
  43cc39:	e8 18 8d 00 00       	callq  445956 <writeback_cache>
  43cc3e:	48 8b bd 48 fd ff ff 	mov    -0x2b8(%rbp),%rdi
  43cc45:	48 8b b5 40 fd ff ff 	mov    -0x2c0(%rbp),%rsi
  43cc4c:	e8 94 9a 00 00       	callq  4466e5 <decryptArrayForLibCall>
  43cc51:	31 f6                	xor    %esi,%esi
  43cc53:	48 8b bd 48 fd ff ff 	mov    -0x2b8(%rbp),%rdi
  43cc5a:	48 8b 95 40 fd ff ff 	mov    -0x2c0(%rbp),%rdx
  43cc61:	48 8b 85 50 fd ff ff 	mov    -0x2b0(%rbp),%rax
  43cc68:	ff d0                	callq  *%rax
  43cc6a:	48 8b bd 48 fd ff ff 	mov    -0x2b8(%rbp),%rdi
  43cc71:	48 8b b5 40 fd ff ff 	mov    -0x2c0(%rbp),%rsi
  43cc78:	48 89 85 38 fd ff ff 	mov    %rax,-0x2c8(%rbp)
  43cc7f:	e8 d2 97 00 00       	callq  446456 <encryptArrayForLibCall>
  43cc84:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
  43cc8b:	48 83 c0 10          	add    $0x10,%rax
  43cc8f:	48 89 c7             	mov    %rax,%rdi
  43cc92:	e8 b1 94 00 00       	callq  446148 <getDecryptedValueQWord>
  43cc97:	48 89 85 30 fd ff ff 	mov    %rax,-0x2d0(%rbp)
  43cc9e:	e8 b3 8c 00 00       	callq  445956 <writeback_cache>
  43cca3:	48 8b bd 30 fd ff ff 	mov    -0x2d0(%rbp),%rdi
  43ccaa:	e8 31 44 fc ff       	callq  4010e0 <free@plt>
  43ccaf:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
  43ccb6:	48 89 c7             	mov    %rax,%rdi
  43ccb9:	be 01 00 00 00       	mov    $0x1,%esi
  43ccbe:	e8 3b 8f 00 00       	callq  445bfe <setEncryptedValueDWord>
  43ccc3:	31 f6                	xor    %esi,%esi
  43ccc5:	48 8b bd 48 fe ff ff 	mov    -0x1b8(%rbp),%rdi
  43cccc:	48 83 c7 08          	add    $0x8,%rdi
  43ccd0:	48 89 85 28 fd ff ff 	mov    %rax,-0x2d8(%rbp)
  43ccd7:	e8 20 90 00 00       	callq  445cfc <setEncryptedValueQWord>
  43ccdc:	31 c9                	xor    %ecx,%ecx
  43ccde:	89 ce                	mov    %ecx,%esi
  43cce0:	48 8b bd 48 fe ff ff 	mov    -0x1b8(%rbp),%rdi
  43cce7:	48 83 c7 10          	add    $0x10,%rdi
  43cceb:	48 89 85 20 fd ff ff 	mov    %rax,-0x2e0(%rbp)
  43ccf2:	e8 05 90 00 00       	callq  445cfc <setEncryptedValueQWord>
  43ccf7:	48 89 85 18 fd ff ff 	mov    %rax,-0x2e8(%rbp)
  43ccfe:	48 8b 85 f0 fd ff ff 	mov    -0x210(%rbp),%rax
  43cd05:	48 83 c0 40          	add    $0x40,%rax
  43cd09:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
  43cd10:	48 83 bd 70 fe ff ff 	cmpq   $0x0,-0x190(%rbp)
  43cd17:	00 
  43cd18:	75 05                	jne    43cd1f <mbedtls_rsa_free+0x4ef>
  43cd1a:	e9 6c 01 00 00       	jmpq   43ce8b <mbedtls_rsa_free+0x65b>
  43cd1f:	48 8b 85 70 fe ff ff 	mov    -0x190(%rbp),%rax
  43cd26:	48 83 c0 10          	add    $0x10,%rax
  43cd2a:	48 89 c7             	mov    %rax,%rdi
  43cd2d:	e8 16 94 00 00       	callq  446148 <getDecryptedValueQWord>
  43cd32:	48 83 f8 00          	cmp    $0x0,%rax
  43cd36:	0f 84 00 01 00 00    	je     43ce3c <mbedtls_rsa_free+0x60c>
  43cd3c:	48 8b 85 70 fe ff ff 	mov    -0x190(%rbp),%rax
  43cd43:	48 83 c0 10          	add    $0x10,%rax
  43cd47:	48 89 c7             	mov    %rax,%rdi
  43cd4a:	e8 f9 93 00 00       	callq  446148 <getDecryptedValueQWord>
  43cd4f:	48 8b bd 70 fe ff ff 	mov    -0x190(%rbp),%rdi
  43cd56:	48 83 c7 08          	add    $0x8,%rdi
  43cd5a:	48 89 85 10 fd ff ff 	mov    %rax,-0x2f0(%rbp)
  43cd61:	e8 e2 93 00 00       	callq  446148 <getDecryptedValueQWord>
  43cd66:	48 8b bd 10 fd ff ff 	mov    -0x2f0(%rbp),%rdi
  43cd6d:	48 89 bd 80 fe ff ff 	mov    %rdi,-0x180(%rbp)
  43cd74:	48 89 85 78 fe ff ff 	mov    %rax,-0x188(%rbp)
  43cd7b:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
  43cd82:	48 8b 8d 78 fe ff ff 	mov    -0x188(%rbp),%rcx
  43cd89:	48 c1 e1 03          	shl    $0x3,%rcx
  43cd8d:	48 89 85 90 fe ff ff 	mov    %rax,-0x170(%rbp)
  43cd94:	48 89 8d 88 fe ff ff 	mov    %rcx,-0x178(%rbp)
  43cd9b:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  43cda2:	00 
  43cda3:	48 8b 8d 90 fe ff ff 	mov    -0x170(%rbp),%rcx
  43cdaa:	48 8b 95 88 fe ff ff 	mov    -0x178(%rbp),%rdx
  43cdb1:	48 89 85 08 fd ff ff 	mov    %rax,-0x2f8(%rbp)
  43cdb8:	48 89 8d 00 fd ff ff 	mov    %rcx,-0x300(%rbp)
  43cdbf:	48 89 95 f8 fc ff ff 	mov    %rdx,-0x308(%rbp)
  43cdc6:	e8 8b 8b 00 00       	callq  445956 <writeback_cache>
  43cdcb:	48 8b bd 00 fd ff ff 	mov    -0x300(%rbp),%rdi
  43cdd2:	48 8b b5 f8 fc ff ff 	mov    -0x308(%rbp),%rsi
  43cdd9:	e8 07 99 00 00       	callq  4466e5 <decryptArrayForLibCall>
  43cdde:	31 f6                	xor    %esi,%esi
  43cde0:	48 8b bd 00 fd ff ff 	mov    -0x300(%rbp),%rdi
  43cde7:	48 8b 95 f8 fc ff ff 	mov    -0x308(%rbp),%rdx
  43cdee:	48 8b 85 08 fd ff ff 	mov    -0x2f8(%rbp),%rax
  43cdf5:	ff d0                	callq  *%rax
  43cdf7:	48 8b bd 00 fd ff ff 	mov    -0x300(%rbp),%rdi
  43cdfe:	48 8b b5 f8 fc ff ff 	mov    -0x308(%rbp),%rsi
  43ce05:	48 89 85 f0 fc ff ff 	mov    %rax,-0x310(%rbp)
  43ce0c:	e8 45 96 00 00       	callq  446456 <encryptArrayForLibCall>
  43ce11:	48 8b 85 70 fe ff ff 	mov    -0x190(%rbp),%rax
  43ce18:	48 83 c0 10          	add    $0x10,%rax
  43ce1c:	48 89 c7             	mov    %rax,%rdi
  43ce1f:	e8 24 93 00 00       	callq  446148 <getDecryptedValueQWord>
  43ce24:	48 89 85 e8 fc ff ff 	mov    %rax,-0x318(%rbp)
  43ce2b:	e8 26 8b 00 00       	callq  445956 <writeback_cache>
  43ce30:	48 8b bd e8 fc ff ff 	mov    -0x318(%rbp),%rdi
  43ce37:	e8 a4 42 fc ff       	callq  4010e0 <free@plt>
  43ce3c:	48 8b 85 70 fe ff ff 	mov    -0x190(%rbp),%rax
  43ce43:	48 89 c7             	mov    %rax,%rdi
  43ce46:	be 01 00 00 00       	mov    $0x1,%esi
  43ce4b:	e8 ae 8d 00 00       	callq  445bfe <setEncryptedValueDWord>
  43ce50:	31 f6                	xor    %esi,%esi
  43ce52:	48 8b bd 70 fe ff ff 	mov    -0x190(%rbp),%rdi
  43ce59:	48 83 c7 08          	add    $0x8,%rdi
  43ce5d:	48 89 85 e0 fc ff ff 	mov    %rax,-0x320(%rbp)
  43ce64:	e8 93 8e 00 00       	callq  445cfc <setEncryptedValueQWord>
  43ce69:	31 c9                	xor    %ecx,%ecx
  43ce6b:	89 ce                	mov    %ecx,%esi
  43ce6d:	48 8b bd 70 fe ff ff 	mov    -0x190(%rbp),%rdi
  43ce74:	48 83 c7 10          	add    $0x10,%rdi
  43ce78:	48 89 85 d8 fc ff ff 	mov    %rax,-0x328(%rbp)
  43ce7f:	e8 78 8e 00 00       	callq  445cfc <setEncryptedValueQWord>
  43ce84:	48 89 85 d0 fc ff ff 	mov    %rax,-0x330(%rbp)
  43ce8b:	48 8b 85 f0 fd ff ff 	mov    -0x210(%rbp),%rax
  43ce92:	48 83 c0 70          	add    $0x70,%rax
  43ce96:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
  43ce9d:	48 83 bd 98 fe ff ff 	cmpq   $0x0,-0x168(%rbp)
  43cea4:	00 
  43cea5:	75 05                	jne    43ceac <mbedtls_rsa_free+0x67c>
  43cea7:	e9 6c 01 00 00       	jmpq   43d018 <mbedtls_rsa_free+0x7e8>
  43ceac:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  43ceb3:	48 83 c0 10          	add    $0x10,%rax
  43ceb7:	48 89 c7             	mov    %rax,%rdi
  43ceba:	e8 89 92 00 00       	callq  446148 <getDecryptedValueQWord>
  43cebf:	48 83 f8 00          	cmp    $0x0,%rax
  43cec3:	0f 84 00 01 00 00    	je     43cfc9 <mbedtls_rsa_free+0x799>
  43cec9:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  43ced0:	48 83 c0 10          	add    $0x10,%rax
  43ced4:	48 89 c7             	mov    %rax,%rdi
  43ced7:	e8 6c 92 00 00       	callq  446148 <getDecryptedValueQWord>
  43cedc:	48 8b bd 98 fe ff ff 	mov    -0x168(%rbp),%rdi
  43cee3:	48 83 c7 08          	add    $0x8,%rdi
  43cee7:	48 89 85 c8 fc ff ff 	mov    %rax,-0x338(%rbp)
  43ceee:	e8 55 92 00 00       	callq  446148 <getDecryptedValueQWord>
  43cef3:	48 8b bd c8 fc ff ff 	mov    -0x338(%rbp),%rdi
  43cefa:	48 89 bd a8 fe ff ff 	mov    %rdi,-0x158(%rbp)
  43cf01:	48 89 85 a0 fe ff ff 	mov    %rax,-0x160(%rbp)
  43cf08:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
  43cf0f:	48 8b 8d a0 fe ff ff 	mov    -0x160(%rbp),%rcx
  43cf16:	48 c1 e1 03          	shl    $0x3,%rcx
  43cf1a:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
  43cf21:	48 89 8d b0 fe ff ff 	mov    %rcx,-0x150(%rbp)
  43cf28:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  43cf2f:	00 
  43cf30:	48 8b 8d b8 fe ff ff 	mov    -0x148(%rbp),%rcx
  43cf37:	48 8b 95 b0 fe ff ff 	mov    -0x150(%rbp),%rdx
  43cf3e:	48 89 85 c0 fc ff ff 	mov    %rax,-0x340(%rbp)
  43cf45:	48 89 8d b8 fc ff ff 	mov    %rcx,-0x348(%rbp)
  43cf4c:	48 89 95 b0 fc ff ff 	mov    %rdx,-0x350(%rbp)
  43cf53:	e8 fe 89 00 00       	callq  445956 <writeback_cache>
  43cf58:	48 8b bd b8 fc ff ff 	mov    -0x348(%rbp),%rdi
  43cf5f:	48 8b b5 b0 fc ff ff 	mov    -0x350(%rbp),%rsi
  43cf66:	e8 7a 97 00 00       	callq  4466e5 <decryptArrayForLibCall>
  43cf6b:	31 f6                	xor    %esi,%esi
  43cf6d:	48 8b bd b8 fc ff ff 	mov    -0x348(%rbp),%rdi
  43cf74:	48 8b 95 b0 fc ff ff 	mov    -0x350(%rbp),%rdx
  43cf7b:	48 8b 85 c0 fc ff ff 	mov    -0x340(%rbp),%rax
  43cf82:	ff d0                	callq  *%rax
  43cf84:	48 8b bd b8 fc ff ff 	mov    -0x348(%rbp),%rdi
  43cf8b:	48 8b b5 b0 fc ff ff 	mov    -0x350(%rbp),%rsi
  43cf92:	48 89 85 a8 fc ff ff 	mov    %rax,-0x358(%rbp)
  43cf99:	e8 b8 94 00 00       	callq  446456 <encryptArrayForLibCall>
  43cf9e:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  43cfa5:	48 83 c0 10          	add    $0x10,%rax
  43cfa9:	48 89 c7             	mov    %rax,%rdi
  43cfac:	e8 97 91 00 00       	callq  446148 <getDecryptedValueQWord>
  43cfb1:	48 89 85 a0 fc ff ff 	mov    %rax,-0x360(%rbp)
  43cfb8:	e8 99 89 00 00       	callq  445956 <writeback_cache>
  43cfbd:	48 8b bd a0 fc ff ff 	mov    -0x360(%rbp),%rdi
  43cfc4:	e8 17 41 fc ff       	callq  4010e0 <free@plt>
  43cfc9:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  43cfd0:	48 89 c7             	mov    %rax,%rdi
  43cfd3:	be 01 00 00 00       	mov    $0x1,%esi
  43cfd8:	e8 21 8c 00 00       	callq  445bfe <setEncryptedValueDWord>
  43cfdd:	31 f6                	xor    %esi,%esi
  43cfdf:	48 8b bd 98 fe ff ff 	mov    -0x168(%rbp),%rdi
  43cfe6:	48 83 c7 08          	add    $0x8,%rdi
  43cfea:	48 89 85 98 fc ff ff 	mov    %rax,-0x368(%rbp)
  43cff1:	e8 06 8d 00 00       	callq  445cfc <setEncryptedValueQWord>
  43cff6:	31 c9                	xor    %ecx,%ecx
  43cff8:	89 ce                	mov    %ecx,%esi
  43cffa:	48 8b bd 98 fe ff ff 	mov    -0x168(%rbp),%rdi
  43d001:	48 83 c7 10          	add    $0x10,%rdi
  43d005:	48 89 85 90 fc ff ff 	mov    %rax,-0x370(%rbp)
  43d00c:	e8 eb 8c 00 00       	callq  445cfc <setEncryptedValueQWord>
  43d011:	48 89 85 88 fc ff ff 	mov    %rax,-0x378(%rbp)
  43d018:	48 8b 85 f0 fd ff ff 	mov    -0x210(%rbp),%rax
  43d01f:	48 83 c0 58          	add    $0x58,%rax
  43d023:	48 89 85 c0 fe ff ff 	mov    %rax,-0x140(%rbp)
  43d02a:	48 83 bd c0 fe ff ff 	cmpq   $0x0,-0x140(%rbp)
  43d031:	00 
  43d032:	75 05                	jne    43d039 <mbedtls_rsa_free+0x809>
  43d034:	e9 6c 01 00 00       	jmpq   43d1a5 <mbedtls_rsa_free+0x975>
  43d039:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  43d040:	48 83 c0 10          	add    $0x10,%rax
  43d044:	48 89 c7             	mov    %rax,%rdi
  43d047:	e8 fc 90 00 00       	callq  446148 <getDecryptedValueQWord>
  43d04c:	48 83 f8 00          	cmp    $0x0,%rax
  43d050:	0f 84 00 01 00 00    	je     43d156 <mbedtls_rsa_free+0x926>
  43d056:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  43d05d:	48 83 c0 10          	add    $0x10,%rax
  43d061:	48 89 c7             	mov    %rax,%rdi
  43d064:	e8 df 90 00 00       	callq  446148 <getDecryptedValueQWord>
  43d069:	48 8b bd c0 fe ff ff 	mov    -0x140(%rbp),%rdi
  43d070:	48 83 c7 08          	add    $0x8,%rdi
  43d074:	48 89 85 80 fc ff ff 	mov    %rax,-0x380(%rbp)
  43d07b:	e8 c8 90 00 00       	callq  446148 <getDecryptedValueQWord>
  43d080:	48 8b bd 80 fc ff ff 	mov    -0x380(%rbp),%rdi
  43d087:	48 89 bd d0 fe ff ff 	mov    %rdi,-0x130(%rbp)
  43d08e:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
  43d095:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
  43d09c:	48 8b 8d c8 fe ff ff 	mov    -0x138(%rbp),%rcx
  43d0a3:	48 c1 e1 03          	shl    $0x3,%rcx
  43d0a7:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
  43d0ae:	48 89 8d d8 fe ff ff 	mov    %rcx,-0x128(%rbp)
  43d0b5:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  43d0bc:	00 
  43d0bd:	48 8b 8d e0 fe ff ff 	mov    -0x120(%rbp),%rcx
  43d0c4:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
  43d0cb:	48 89 85 78 fc ff ff 	mov    %rax,-0x388(%rbp)
  43d0d2:	48 89 8d 70 fc ff ff 	mov    %rcx,-0x390(%rbp)
  43d0d9:	48 89 95 68 fc ff ff 	mov    %rdx,-0x398(%rbp)
  43d0e0:	e8 71 88 00 00       	callq  445956 <writeback_cache>
  43d0e5:	48 8b bd 70 fc ff ff 	mov    -0x390(%rbp),%rdi
  43d0ec:	48 8b b5 68 fc ff ff 	mov    -0x398(%rbp),%rsi
  43d0f3:	e8 ed 95 00 00       	callq  4466e5 <decryptArrayForLibCall>
  43d0f8:	31 f6                	xor    %esi,%esi
  43d0fa:	48 8b bd 70 fc ff ff 	mov    -0x390(%rbp),%rdi
  43d101:	48 8b 95 68 fc ff ff 	mov    -0x398(%rbp),%rdx
  43d108:	48 8b 85 78 fc ff ff 	mov    -0x388(%rbp),%rax
  43d10f:	ff d0                	callq  *%rax
  43d111:	48 8b bd 70 fc ff ff 	mov    -0x390(%rbp),%rdi
  43d118:	48 8b b5 68 fc ff ff 	mov    -0x398(%rbp),%rsi
  43d11f:	48 89 85 60 fc ff ff 	mov    %rax,-0x3a0(%rbp)
  43d126:	e8 2b 93 00 00       	callq  446456 <encryptArrayForLibCall>
  43d12b:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  43d132:	48 83 c0 10          	add    $0x10,%rax
  43d136:	48 89 c7             	mov    %rax,%rdi
  43d139:	e8 0a 90 00 00       	callq  446148 <getDecryptedValueQWord>
  43d13e:	48 89 85 58 fc ff ff 	mov    %rax,-0x3a8(%rbp)
  43d145:	e8 0c 88 00 00       	callq  445956 <writeback_cache>
  43d14a:	48 8b bd 58 fc ff ff 	mov    -0x3a8(%rbp),%rdi
  43d151:	e8 8a 3f fc ff       	callq  4010e0 <free@plt>
  43d156:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  43d15d:	48 89 c7             	mov    %rax,%rdi
  43d160:	be 01 00 00 00       	mov    $0x1,%esi
  43d165:	e8 94 8a 00 00       	callq  445bfe <setEncryptedValueDWord>
  43d16a:	31 f6                	xor    %esi,%esi
  43d16c:	48 8b bd c0 fe ff ff 	mov    -0x140(%rbp),%rdi
  43d173:	48 83 c7 08          	add    $0x8,%rdi
  43d177:	48 89 85 50 fc ff ff 	mov    %rax,-0x3b0(%rbp)
  43d17e:	e8 79 8b 00 00       	callq  445cfc <setEncryptedValueQWord>
  43d183:	31 c9                	xor    %ecx,%ecx
  43d185:	89 ce                	mov    %ecx,%esi
  43d187:	48 8b bd c0 fe ff ff 	mov    -0x140(%rbp),%rdi
  43d18e:	48 83 c7 10          	add    $0x10,%rdi
  43d192:	48 89 85 48 fc ff ff 	mov    %rax,-0x3b8(%rbp)
  43d199:	e8 5e 8b 00 00       	callq  445cfc <setEncryptedValueQWord>
  43d19e:	48 89 85 40 fc ff ff 	mov    %rax,-0x3c0(%rbp)
  43d1a5:	48 8b 85 f0 fd ff ff 	mov    -0x210(%rbp),%rax
  43d1ac:	48 83 c0 28          	add    $0x28,%rax
  43d1b0:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
  43d1b7:	48 83 bd e8 fe ff ff 	cmpq   $0x0,-0x118(%rbp)
  43d1be:	00 
  43d1bf:	75 05                	jne    43d1c6 <mbedtls_rsa_free+0x996>
  43d1c1:	e9 6c 01 00 00       	jmpq   43d332 <mbedtls_rsa_free+0xb02>
  43d1c6:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
  43d1cd:	48 83 c0 10          	add    $0x10,%rax
  43d1d1:	48 89 c7             	mov    %rax,%rdi
  43d1d4:	e8 6f 8f 00 00       	callq  446148 <getDecryptedValueQWord>
  43d1d9:	48 83 f8 00          	cmp    $0x0,%rax
  43d1dd:	0f 84 00 01 00 00    	je     43d2e3 <mbedtls_rsa_free+0xab3>
  43d1e3:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
  43d1ea:	48 83 c0 10          	add    $0x10,%rax
  43d1ee:	48 89 c7             	mov    %rax,%rdi
  43d1f1:	e8 52 8f 00 00       	callq  446148 <getDecryptedValueQWord>
  43d1f6:	48 8b bd e8 fe ff ff 	mov    -0x118(%rbp),%rdi
  43d1fd:	48 83 c7 08          	add    $0x8,%rdi
  43d201:	48 89 85 38 fc ff ff 	mov    %rax,-0x3c8(%rbp)
  43d208:	e8 3b 8f 00 00       	callq  446148 <getDecryptedValueQWord>
  43d20d:	48 8b bd 38 fc ff ff 	mov    -0x3c8(%rbp),%rdi
  43d214:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
  43d21b:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
  43d222:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  43d229:	48 8b 8d f0 fe ff ff 	mov    -0x110(%rbp),%rcx
  43d230:	48 c1 e1 03          	shl    $0x3,%rcx
  43d234:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
  43d23b:	48 89 8d 00 ff ff ff 	mov    %rcx,-0x100(%rbp)
  43d242:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  43d249:	00 
  43d24a:	48 8b 8d 08 ff ff ff 	mov    -0xf8(%rbp),%rcx
  43d251:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
  43d258:	48 89 85 30 fc ff ff 	mov    %rax,-0x3d0(%rbp)
  43d25f:	48 89 8d 28 fc ff ff 	mov    %rcx,-0x3d8(%rbp)
  43d266:	48 89 95 20 fc ff ff 	mov    %rdx,-0x3e0(%rbp)
  43d26d:	e8 e4 86 00 00       	callq  445956 <writeback_cache>
  43d272:	48 8b bd 28 fc ff ff 	mov    -0x3d8(%rbp),%rdi
  43d279:	48 8b b5 20 fc ff ff 	mov    -0x3e0(%rbp),%rsi
  43d280:	e8 60 94 00 00       	callq  4466e5 <decryptArrayForLibCall>
  43d285:	31 f6                	xor    %esi,%esi
  43d287:	48 8b bd 28 fc ff ff 	mov    -0x3d8(%rbp),%rdi
  43d28e:	48 8b 95 20 fc ff ff 	mov    -0x3e0(%rbp),%rdx
  43d295:	48 8b 85 30 fc ff ff 	mov    -0x3d0(%rbp),%rax
  43d29c:	ff d0                	callq  *%rax
  43d29e:	48 8b bd 28 fc ff ff 	mov    -0x3d8(%rbp),%rdi
  43d2a5:	48 8b b5 20 fc ff ff 	mov    -0x3e0(%rbp),%rsi
  43d2ac:	48 89 85 18 fc ff ff 	mov    %rax,-0x3e8(%rbp)
  43d2b3:	e8 9e 91 00 00       	callq  446456 <encryptArrayForLibCall>
  43d2b8:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
  43d2bf:	48 83 c0 10          	add    $0x10,%rax
  43d2c3:	48 89 c7             	mov    %rax,%rdi
  43d2c6:	e8 7d 8e 00 00       	callq  446148 <getDecryptedValueQWord>
  43d2cb:	48 89 85 10 fc ff ff 	mov    %rax,-0x3f0(%rbp)
  43d2d2:	e8 7f 86 00 00       	callq  445956 <writeback_cache>
  43d2d7:	48 8b bd 10 fc ff ff 	mov    -0x3f0(%rbp),%rdi
  43d2de:	e8 fd 3d fc ff       	callq  4010e0 <free@plt>
  43d2e3:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
  43d2ea:	48 89 c7             	mov    %rax,%rdi
  43d2ed:	be 01 00 00 00       	mov    $0x1,%esi
  43d2f2:	e8 07 89 00 00       	callq  445bfe <setEncryptedValueDWord>
  43d2f7:	31 f6                	xor    %esi,%esi
  43d2f9:	48 8b bd e8 fe ff ff 	mov    -0x118(%rbp),%rdi
  43d300:	48 83 c7 08          	add    $0x8,%rdi
  43d304:	48 89 85 08 fc ff ff 	mov    %rax,-0x3f8(%rbp)
  43d30b:	e8 ec 89 00 00       	callq  445cfc <setEncryptedValueQWord>
  43d310:	31 c9                	xor    %ecx,%ecx
  43d312:	89 ce                	mov    %ecx,%esi
  43d314:	48 8b bd e8 fe ff ff 	mov    -0x118(%rbp),%rdi
  43d31b:	48 83 c7 10          	add    $0x10,%rdi
  43d31f:	48 89 85 00 fc ff ff 	mov    %rax,-0x400(%rbp)
  43d326:	e8 d1 89 00 00       	callq  445cfc <setEncryptedValueQWord>
  43d32b:	48 89 85 f8 fb ff ff 	mov    %rax,-0x408(%rbp)
  43d332:	48 8b 85 f0 fd ff ff 	mov    -0x210(%rbp),%rax
  43d339:	48 83 c0 10          	add    $0x10,%rax
  43d33d:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
  43d344:	48 83 bd 10 ff ff ff 	cmpq   $0x0,-0xf0(%rbp)
  43d34b:	00 
  43d34c:	75 05                	jne    43d353 <mbedtls_rsa_free+0xb23>
  43d34e:	e9 6c 01 00 00       	jmpq   43d4bf <mbedtls_rsa_free+0xc8f>
  43d353:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
  43d35a:	48 83 c0 10          	add    $0x10,%rax
  43d35e:	48 89 c7             	mov    %rax,%rdi
  43d361:	e8 e2 8d 00 00       	callq  446148 <getDecryptedValueQWord>
  43d366:	48 83 f8 00          	cmp    $0x0,%rax
  43d36a:	0f 84 00 01 00 00    	je     43d470 <mbedtls_rsa_free+0xc40>
  43d370:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
  43d377:	48 83 c0 10          	add    $0x10,%rax
  43d37b:	48 89 c7             	mov    %rax,%rdi
  43d37e:	e8 c5 8d 00 00       	callq  446148 <getDecryptedValueQWord>
  43d383:	48 8b bd 10 ff ff ff 	mov    -0xf0(%rbp),%rdi
  43d38a:	48 83 c7 08          	add    $0x8,%rdi
  43d38e:	48 89 85 f0 fb ff ff 	mov    %rax,-0x410(%rbp)
  43d395:	e8 ae 8d 00 00       	callq  446148 <getDecryptedValueQWord>
  43d39a:	48 8b bd f0 fb ff ff 	mov    -0x410(%rbp),%rdi
  43d3a1:	48 89 bd 20 ff ff ff 	mov    %rdi,-0xe0(%rbp)
  43d3a8:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
  43d3af:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
  43d3b6:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
  43d3bd:	48 c1 e1 03          	shl    $0x3,%rcx
  43d3c1:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
  43d3c8:	48 89 8d 28 ff ff ff 	mov    %rcx,-0xd8(%rbp)
  43d3cf:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  43d3d6:	00 
  43d3d7:	48 8b 8d 30 ff ff ff 	mov    -0xd0(%rbp),%rcx
  43d3de:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
  43d3e5:	48 89 85 e8 fb ff ff 	mov    %rax,-0x418(%rbp)
  43d3ec:	48 89 8d e0 fb ff ff 	mov    %rcx,-0x420(%rbp)
  43d3f3:	48 89 95 d8 fb ff ff 	mov    %rdx,-0x428(%rbp)
  43d3fa:	e8 57 85 00 00       	callq  445956 <writeback_cache>
  43d3ff:	48 8b bd e0 fb ff ff 	mov    -0x420(%rbp),%rdi
  43d406:	48 8b b5 d8 fb ff ff 	mov    -0x428(%rbp),%rsi
  43d40d:	e8 d3 92 00 00       	callq  4466e5 <decryptArrayForLibCall>
  43d412:	31 f6                	xor    %esi,%esi
  43d414:	48 8b bd e0 fb ff ff 	mov    -0x420(%rbp),%rdi
  43d41b:	48 8b 95 d8 fb ff ff 	mov    -0x428(%rbp),%rdx
  43d422:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
  43d429:	ff d0                	callq  *%rax
  43d42b:	48 8b bd e0 fb ff ff 	mov    -0x420(%rbp),%rdi
  43d432:	48 8b b5 d8 fb ff ff 	mov    -0x428(%rbp),%rsi
  43d439:	48 89 85 d0 fb ff ff 	mov    %rax,-0x430(%rbp)
  43d440:	e8 11 90 00 00       	callq  446456 <encryptArrayForLibCall>
  43d445:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
  43d44c:	48 83 c0 10          	add    $0x10,%rax
  43d450:	48 89 c7             	mov    %rax,%rdi
  43d453:	e8 f0 8c 00 00       	callq  446148 <getDecryptedValueQWord>
  43d458:	48 89 85 c8 fb ff ff 	mov    %rax,-0x438(%rbp)
  43d45f:	e8 f2 84 00 00       	callq  445956 <writeback_cache>
  43d464:	48 8b bd c8 fb ff ff 	mov    -0x438(%rbp),%rdi
  43d46b:	e8 70 3c fc ff       	callq  4010e0 <free@plt>
  43d470:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
  43d477:	48 89 c7             	mov    %rax,%rdi
  43d47a:	be 01 00 00 00       	mov    $0x1,%esi
  43d47f:	e8 7a 87 00 00       	callq  445bfe <setEncryptedValueDWord>
  43d484:	31 f6                	xor    %esi,%esi
  43d486:	48 8b bd 10 ff ff ff 	mov    -0xf0(%rbp),%rdi
  43d48d:	48 83 c7 08          	add    $0x8,%rdi
  43d491:	48 89 85 c0 fb ff ff 	mov    %rax,-0x440(%rbp)
  43d498:	e8 5f 88 00 00       	callq  445cfc <setEncryptedValueQWord>
  43d49d:	31 c9                	xor    %ecx,%ecx
  43d49f:	89 ce                	mov    %ecx,%esi
  43d4a1:	48 8b bd 10 ff ff ff 	mov    -0xf0(%rbp),%rdi
  43d4a8:	48 83 c7 10          	add    $0x10,%rdi
  43d4ac:	48 89 85 b8 fb ff ff 	mov    %rax,-0x448(%rbp)
  43d4b3:	e8 44 88 00 00       	callq  445cfc <setEncryptedValueQWord>
  43d4b8:	48 89 85 b0 fb ff ff 	mov    %rax,-0x450(%rbp)
  43d4bf:	48 8b 85 f0 fd ff ff 	mov    -0x210(%rbp),%rax
  43d4c6:	48 05 00 01 00 00    	add    $0x100,%rax
  43d4cc:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
  43d4d3:	48 83 bd 38 ff ff ff 	cmpq   $0x0,-0xc8(%rbp)
  43d4da:	00 
  43d4db:	75 05                	jne    43d4e2 <mbedtls_rsa_free+0xcb2>
  43d4dd:	e9 6c 01 00 00       	jmpq   43d64e <mbedtls_rsa_free+0xe1e>
  43d4e2:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  43d4e9:	48 83 c0 10          	add    $0x10,%rax
  43d4ed:	48 89 c7             	mov    %rax,%rdi
  43d4f0:	e8 53 8c 00 00       	callq  446148 <getDecryptedValueQWord>
  43d4f5:	48 83 f8 00          	cmp    $0x0,%rax
  43d4f9:	0f 84 00 01 00 00    	je     43d5ff <mbedtls_rsa_free+0xdcf>
  43d4ff:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  43d506:	48 83 c0 10          	add    $0x10,%rax
  43d50a:	48 89 c7             	mov    %rax,%rdi
  43d50d:	e8 36 8c 00 00       	callq  446148 <getDecryptedValueQWord>
  43d512:	48 8b bd 38 ff ff ff 	mov    -0xc8(%rbp),%rdi
  43d519:	48 83 c7 08          	add    $0x8,%rdi
  43d51d:	48 89 85 a8 fb ff ff 	mov    %rax,-0x458(%rbp)
  43d524:	e8 1f 8c 00 00       	callq  446148 <getDecryptedValueQWord>
  43d529:	48 8b bd a8 fb ff ff 	mov    -0x458(%rbp),%rdi
  43d530:	48 89 bd 48 ff ff ff 	mov    %rdi,-0xb8(%rbp)
  43d537:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
  43d53e:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  43d545:	48 8b 8d 40 ff ff ff 	mov    -0xc0(%rbp),%rcx
  43d54c:	48 c1 e1 03          	shl    $0x3,%rcx
  43d550:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
  43d557:	48 89 8d 50 ff ff ff 	mov    %rcx,-0xb0(%rbp)
  43d55e:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  43d565:	00 
  43d566:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
  43d56d:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
  43d574:	48 89 85 a0 fb ff ff 	mov    %rax,-0x460(%rbp)
  43d57b:	48 89 8d 98 fb ff ff 	mov    %rcx,-0x468(%rbp)
  43d582:	48 89 95 90 fb ff ff 	mov    %rdx,-0x470(%rbp)
  43d589:	e8 c8 83 00 00       	callq  445956 <writeback_cache>
  43d58e:	48 8b bd 98 fb ff ff 	mov    -0x468(%rbp),%rdi
  43d595:	48 8b b5 90 fb ff ff 	mov    -0x470(%rbp),%rsi
  43d59c:	e8 44 91 00 00       	callq  4466e5 <decryptArrayForLibCall>
  43d5a1:	31 f6                	xor    %esi,%esi
  43d5a3:	48 8b bd 98 fb ff ff 	mov    -0x468(%rbp),%rdi
  43d5aa:	48 8b 95 90 fb ff ff 	mov    -0x470(%rbp),%rdx
  43d5b1:	48 8b 85 a0 fb ff ff 	mov    -0x460(%rbp),%rax
  43d5b8:	ff d0                	callq  *%rax
  43d5ba:	48 8b bd 98 fb ff ff 	mov    -0x468(%rbp),%rdi
  43d5c1:	48 8b b5 90 fb ff ff 	mov    -0x470(%rbp),%rsi
  43d5c8:	48 89 85 88 fb ff ff 	mov    %rax,-0x478(%rbp)
  43d5cf:	e8 82 8e 00 00       	callq  446456 <encryptArrayForLibCall>
  43d5d4:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  43d5db:	48 83 c0 10          	add    $0x10,%rax
  43d5df:	48 89 c7             	mov    %rax,%rdi
  43d5e2:	e8 61 8b 00 00       	callq  446148 <getDecryptedValueQWord>
  43d5e7:	48 89 85 80 fb ff ff 	mov    %rax,-0x480(%rbp)
  43d5ee:	e8 63 83 00 00       	callq  445956 <writeback_cache>
  43d5f3:	48 8b bd 80 fb ff ff 	mov    -0x480(%rbp),%rdi
  43d5fa:	e8 e1 3a fc ff       	callq  4010e0 <free@plt>
  43d5ff:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  43d606:	48 89 c7             	mov    %rax,%rdi
  43d609:	be 01 00 00 00       	mov    $0x1,%esi
  43d60e:	e8 eb 85 00 00       	callq  445bfe <setEncryptedValueDWord>
  43d613:	31 f6                	xor    %esi,%esi
  43d615:	48 8b bd 38 ff ff ff 	mov    -0xc8(%rbp),%rdi
  43d61c:	48 83 c7 08          	add    $0x8,%rdi
  43d620:	48 89 85 78 fb ff ff 	mov    %rax,-0x488(%rbp)
  43d627:	e8 d0 86 00 00       	callq  445cfc <setEncryptedValueQWord>
  43d62c:	31 c9                	xor    %ecx,%ecx
  43d62e:	89 ce                	mov    %ecx,%esi
  43d630:	48 8b bd 38 ff ff ff 	mov    -0xc8(%rbp),%rdi
  43d637:	48 83 c7 10          	add    $0x10,%rdi
  43d63b:	48 89 85 70 fb ff ff 	mov    %rax,-0x490(%rbp)
  43d642:	e8 b5 86 00 00       	callq  445cfc <setEncryptedValueQWord>
  43d647:	48 89 85 68 fb ff ff 	mov    %rax,-0x498(%rbp)
  43d64e:	48 8b 85 f0 fd ff ff 	mov    -0x210(%rbp),%rax
  43d655:	48 05 e8 00 00 00    	add    $0xe8,%rax
  43d65b:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
  43d662:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
  43d669:	00 
  43d66a:	75 05                	jne    43d671 <mbedtls_rsa_free+0xe41>
  43d66c:	e9 66 01 00 00       	jmpq   43d7d7 <mbedtls_rsa_free+0xfa7>
  43d671:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  43d678:	48 83 c0 10          	add    $0x10,%rax
  43d67c:	48 89 c7             	mov    %rax,%rdi
  43d67f:	e8 c4 8a 00 00       	callq  446148 <getDecryptedValueQWord>
  43d684:	48 83 f8 00          	cmp    $0x0,%rax
  43d688:	0f 84 fa 00 00 00    	je     43d788 <mbedtls_rsa_free+0xf58>
  43d68e:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  43d695:	48 83 c0 10          	add    $0x10,%rax
  43d699:	48 89 c7             	mov    %rax,%rdi
  43d69c:	e8 a7 8a 00 00       	callq  446148 <getDecryptedValueQWord>
  43d6a1:	48 8b bd 60 ff ff ff 	mov    -0xa0(%rbp),%rdi
  43d6a8:	48 83 c7 08          	add    $0x8,%rdi
  43d6ac:	48 89 85 60 fb ff ff 	mov    %rax,-0x4a0(%rbp)
  43d6b3:	e8 90 8a 00 00       	callq  446148 <getDecryptedValueQWord>
  43d6b8:	48 8b bd 60 fb ff ff 	mov    -0x4a0(%rbp),%rdi
  43d6bf:	48 89 bd 70 ff ff ff 	mov    %rdi,-0x90(%rbp)
  43d6c6:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
  43d6cd:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  43d6d4:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
  43d6db:	48 c1 e1 03          	shl    $0x3,%rcx
  43d6df:	48 89 45 80          	mov    %rax,-0x80(%rbp)
  43d6e3:	48 89 8d 78 ff ff ff 	mov    %rcx,-0x88(%rbp)
  43d6ea:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  43d6f1:	00 
  43d6f2:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
  43d6f6:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
  43d6fd:	48 89 85 58 fb ff ff 	mov    %rax,-0x4a8(%rbp)
  43d704:	48 89 8d 50 fb ff ff 	mov    %rcx,-0x4b0(%rbp)
  43d70b:	48 89 95 48 fb ff ff 	mov    %rdx,-0x4b8(%rbp)
  43d712:	e8 3f 82 00 00       	callq  445956 <writeback_cache>
  43d717:	48 8b bd 50 fb ff ff 	mov    -0x4b0(%rbp),%rdi
  43d71e:	48 8b b5 48 fb ff ff 	mov    -0x4b8(%rbp),%rsi
  43d725:	e8 bb 8f 00 00       	callq  4466e5 <decryptArrayForLibCall>
  43d72a:	31 f6                	xor    %esi,%esi
  43d72c:	48 8b bd 50 fb ff ff 	mov    -0x4b0(%rbp),%rdi
  43d733:	48 8b 95 48 fb ff ff 	mov    -0x4b8(%rbp),%rdx
  43d73a:	48 8b 85 58 fb ff ff 	mov    -0x4a8(%rbp),%rax
  43d741:	ff d0                	callq  *%rax
  43d743:	48 8b bd 50 fb ff ff 	mov    -0x4b0(%rbp),%rdi
  43d74a:	48 8b b5 48 fb ff ff 	mov    -0x4b8(%rbp),%rsi
  43d751:	48 89 85 40 fb ff ff 	mov    %rax,-0x4c0(%rbp)
  43d758:	e8 f9 8c 00 00       	callq  446456 <encryptArrayForLibCall>
  43d75d:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  43d764:	48 83 c0 10          	add    $0x10,%rax
  43d768:	48 89 c7             	mov    %rax,%rdi
  43d76b:	e8 d8 89 00 00       	callq  446148 <getDecryptedValueQWord>
  43d770:	48 89 85 38 fb ff ff 	mov    %rax,-0x4c8(%rbp)
  43d777:	e8 da 81 00 00       	callq  445956 <writeback_cache>
  43d77c:	48 8b bd 38 fb ff ff 	mov    -0x4c8(%rbp),%rdi
  43d783:	e8 58 39 fc ff       	callq  4010e0 <free@plt>
  43d788:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  43d78f:	48 89 c7             	mov    %rax,%rdi
  43d792:	be 01 00 00 00       	mov    $0x1,%esi
  43d797:	e8 62 84 00 00       	callq  445bfe <setEncryptedValueDWord>
  43d79c:	31 f6                	xor    %esi,%esi
  43d79e:	48 8b bd 60 ff ff ff 	mov    -0xa0(%rbp),%rdi
  43d7a5:	48 83 c7 08          	add    $0x8,%rdi
  43d7a9:	48 89 85 30 fb ff ff 	mov    %rax,-0x4d0(%rbp)
  43d7b0:	e8 47 85 00 00       	callq  445cfc <setEncryptedValueQWord>
  43d7b5:	31 c9                	xor    %ecx,%ecx
  43d7b7:	89 ce                	mov    %ecx,%esi
  43d7b9:	48 8b bd 60 ff ff ff 	mov    -0xa0(%rbp),%rdi
  43d7c0:	48 83 c7 10          	add    $0x10,%rdi
  43d7c4:	48 89 85 28 fb ff ff 	mov    %rax,-0x4d8(%rbp)
  43d7cb:	e8 2c 85 00 00       	callq  445cfc <setEncryptedValueQWord>
  43d7d0:	48 89 85 20 fb ff ff 	mov    %rax,-0x4e0(%rbp)
  43d7d7:	48 8b 85 f0 fd ff ff 	mov    -0x210(%rbp),%rax
  43d7de:	48 05 b8 00 00 00    	add    $0xb8,%rax
  43d7e4:	48 89 45 88          	mov    %rax,-0x78(%rbp)
  43d7e8:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
  43d7ed:	75 05                	jne    43d7f4 <mbedtls_rsa_free+0xfc4>
  43d7ef:	e9 3f 01 00 00       	jmpq   43d933 <mbedtls_rsa_free+0x1103>
  43d7f4:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  43d7f8:	48 83 c0 10          	add    $0x10,%rax
  43d7fc:	48 89 c7             	mov    %rax,%rdi
  43d7ff:	e8 44 89 00 00       	callq  446148 <getDecryptedValueQWord>
  43d804:	48 83 f8 00          	cmp    $0x0,%rax
  43d808:	0f 84 df 00 00 00    	je     43d8ed <mbedtls_rsa_free+0x10bd>
  43d80e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  43d812:	48 83 c0 10          	add    $0x10,%rax
  43d816:	48 89 c7             	mov    %rax,%rdi
  43d819:	e8 2a 89 00 00       	callq  446148 <getDecryptedValueQWord>
  43d81e:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
  43d822:	48 83 c7 08          	add    $0x8,%rdi
  43d826:	48 89 85 18 fb ff ff 	mov    %rax,-0x4e8(%rbp)
  43d82d:	e8 16 89 00 00       	callq  446148 <getDecryptedValueQWord>
  43d832:	48 8b bd 18 fb ff ff 	mov    -0x4e8(%rbp),%rdi
  43d839:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
  43d83d:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  43d841:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  43d845:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  43d849:	48 c1 e1 03          	shl    $0x3,%rcx
  43d84d:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  43d851:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
  43d855:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  43d85c:	00 
  43d85d:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
  43d861:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
  43d865:	48 89 85 10 fb ff ff 	mov    %rax,-0x4f0(%rbp)
  43d86c:	48 89 8d 08 fb ff ff 	mov    %rcx,-0x4f8(%rbp)
  43d873:	48 89 95 00 fb ff ff 	mov    %rdx,-0x500(%rbp)
  43d87a:	e8 d7 80 00 00       	callq  445956 <writeback_cache>
  43d87f:	48 8b bd 08 fb ff ff 	mov    -0x4f8(%rbp),%rdi
  43d886:	48 8b b5 00 fb ff ff 	mov    -0x500(%rbp),%rsi
  43d88d:	e8 53 8e 00 00       	callq  4466e5 <decryptArrayForLibCall>
  43d892:	31 f6                	xor    %esi,%esi
  43d894:	48 8b bd 08 fb ff ff 	mov    -0x4f8(%rbp),%rdi
  43d89b:	48 8b 95 00 fb ff ff 	mov    -0x500(%rbp),%rdx
  43d8a2:	48 8b 85 10 fb ff ff 	mov    -0x4f0(%rbp),%rax
  43d8a9:	ff d0                	callq  *%rax
  43d8ab:	48 8b bd 08 fb ff ff 	mov    -0x4f8(%rbp),%rdi
  43d8b2:	48 8b b5 00 fb ff ff 	mov    -0x500(%rbp),%rsi
  43d8b9:	48 89 85 f8 fa ff ff 	mov    %rax,-0x508(%rbp)
  43d8c0:	e8 91 8b 00 00       	callq  446456 <encryptArrayForLibCall>
  43d8c5:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  43d8c9:	48 83 c0 10          	add    $0x10,%rax
  43d8cd:	48 89 c7             	mov    %rax,%rdi
  43d8d0:	e8 73 88 00 00       	callq  446148 <getDecryptedValueQWord>
  43d8d5:	48 89 85 f0 fa ff ff 	mov    %rax,-0x510(%rbp)
  43d8dc:	e8 75 80 00 00       	callq  445956 <writeback_cache>
  43d8e1:	48 8b bd f0 fa ff ff 	mov    -0x510(%rbp),%rdi
  43d8e8:	e8 f3 37 fc ff       	callq  4010e0 <free@plt>
  43d8ed:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  43d8f1:	48 89 c7             	mov    %rax,%rdi
  43d8f4:	be 01 00 00 00       	mov    $0x1,%esi
  43d8f9:	e8 00 83 00 00       	callq  445bfe <setEncryptedValueDWord>
  43d8fe:	31 f6                	xor    %esi,%esi
  43d900:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
  43d904:	48 83 c7 08          	add    $0x8,%rdi
  43d908:	48 89 85 e8 fa ff ff 	mov    %rax,-0x518(%rbp)
  43d90f:	e8 e8 83 00 00       	callq  445cfc <setEncryptedValueQWord>
  43d914:	31 c9                	xor    %ecx,%ecx
  43d916:	89 ce                	mov    %ecx,%esi
  43d918:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
  43d91c:	48 83 c7 10          	add    $0x10,%rdi
  43d920:	48 89 85 e0 fa ff ff 	mov    %rax,-0x520(%rbp)
  43d927:	e8 d0 83 00 00       	callq  445cfc <setEncryptedValueQWord>
  43d92c:	48 89 85 d8 fa ff ff 	mov    %rax,-0x528(%rbp)
  43d933:	48 8b 85 f0 fd ff ff 	mov    -0x210(%rbp),%rax
  43d93a:	48 05 a0 00 00 00    	add    $0xa0,%rax
  43d940:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  43d944:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
  43d949:	75 05                	jne    43d950 <mbedtls_rsa_free+0x1120>
  43d94b:	e9 3f 01 00 00       	jmpq   43da8f <mbedtls_rsa_free+0x125f>
  43d950:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  43d954:	48 83 c0 10          	add    $0x10,%rax
  43d958:	48 89 c7             	mov    %rax,%rdi
  43d95b:	e8 e8 87 00 00       	callq  446148 <getDecryptedValueQWord>
  43d960:	48 83 f8 00          	cmp    $0x0,%rax
  43d964:	0f 84 df 00 00 00    	je     43da49 <mbedtls_rsa_free+0x1219>
  43d96a:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  43d96e:	48 83 c0 10          	add    $0x10,%rax
  43d972:	48 89 c7             	mov    %rax,%rdi
  43d975:	e8 ce 87 00 00       	callq  446148 <getDecryptedValueQWord>
  43d97a:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
  43d97e:	48 83 c7 08          	add    $0x8,%rdi
  43d982:	48 89 85 d0 fa ff ff 	mov    %rax,-0x530(%rbp)
  43d989:	e8 ba 87 00 00       	callq  446148 <getDecryptedValueQWord>
  43d98e:	48 8b bd d0 fa ff ff 	mov    -0x530(%rbp),%rdi
  43d995:	48 89 7d c0          	mov    %rdi,-0x40(%rbp)
  43d999:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  43d99d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  43d9a1:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  43d9a5:	48 c1 e1 03          	shl    $0x3,%rcx
  43d9a9:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  43d9ad:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
  43d9b1:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  43d9b8:	00 
  43d9b9:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  43d9bd:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  43d9c1:	48 89 85 c8 fa ff ff 	mov    %rax,-0x538(%rbp)
  43d9c8:	48 89 8d c0 fa ff ff 	mov    %rcx,-0x540(%rbp)
  43d9cf:	48 89 95 b8 fa ff ff 	mov    %rdx,-0x548(%rbp)
  43d9d6:	e8 7b 7f 00 00       	callq  445956 <writeback_cache>
  43d9db:	48 8b bd c0 fa ff ff 	mov    -0x540(%rbp),%rdi
  43d9e2:	48 8b b5 b8 fa ff ff 	mov    -0x548(%rbp),%rsi
  43d9e9:	e8 f7 8c 00 00       	callq  4466e5 <decryptArrayForLibCall>
  43d9ee:	31 f6                	xor    %esi,%esi
  43d9f0:	48 8b bd c0 fa ff ff 	mov    -0x540(%rbp),%rdi
  43d9f7:	48 8b 95 b8 fa ff ff 	mov    -0x548(%rbp),%rdx
  43d9fe:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
  43da05:	ff d0                	callq  *%rax
  43da07:	48 8b bd c0 fa ff ff 	mov    -0x540(%rbp),%rdi
  43da0e:	48 8b b5 b8 fa ff ff 	mov    -0x548(%rbp),%rsi
  43da15:	48 89 85 b0 fa ff ff 	mov    %rax,-0x550(%rbp)
  43da1c:	e8 35 8a 00 00       	callq  446456 <encryptArrayForLibCall>
  43da21:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  43da25:	48 83 c0 10          	add    $0x10,%rax
  43da29:	48 89 c7             	mov    %rax,%rdi
  43da2c:	e8 17 87 00 00       	callq  446148 <getDecryptedValueQWord>
  43da31:	48 89 85 a8 fa ff ff 	mov    %rax,-0x558(%rbp)
  43da38:	e8 19 7f 00 00       	callq  445956 <writeback_cache>
  43da3d:	48 8b bd a8 fa ff ff 	mov    -0x558(%rbp),%rdi
  43da44:	e8 97 36 fc ff       	callq  4010e0 <free@plt>
  43da49:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  43da4d:	48 89 c7             	mov    %rax,%rdi
  43da50:	be 01 00 00 00       	mov    $0x1,%esi
  43da55:	e8 a4 81 00 00       	callq  445bfe <setEncryptedValueDWord>
  43da5a:	31 f6                	xor    %esi,%esi
  43da5c:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
  43da60:	48 83 c7 08          	add    $0x8,%rdi
  43da64:	48 89 85 a0 fa ff ff 	mov    %rax,-0x560(%rbp)
  43da6b:	e8 8c 82 00 00       	callq  445cfc <setEncryptedValueQWord>
  43da70:	31 c9                	xor    %ecx,%ecx
  43da72:	89 ce                	mov    %ecx,%esi
  43da74:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
  43da78:	48 83 c7 10          	add    $0x10,%rdi
  43da7c:	48 89 85 98 fa ff ff 	mov    %rax,-0x568(%rbp)
  43da83:	e8 74 82 00 00       	callq  445cfc <setEncryptedValueQWord>
  43da88:	48 89 85 90 fa ff ff 	mov    %rax,-0x570(%rbp)
  43da8f:	48 8b 85 f0 fd ff ff 	mov    -0x210(%rbp),%rax
  43da96:	48 05 88 00 00 00    	add    $0x88,%rax
  43da9c:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  43daa0:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  43daa5:	75 05                	jne    43daac <mbedtls_rsa_free+0x127c>
  43daa7:	e9 3f 01 00 00       	jmpq   43dbeb <mbedtls_rsa_free+0x13bb>
  43daac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  43dab0:	48 83 c0 10          	add    $0x10,%rax
  43dab4:	48 89 c7             	mov    %rax,%rdi
  43dab7:	e8 8c 86 00 00       	callq  446148 <getDecryptedValueQWord>
  43dabc:	48 83 f8 00          	cmp    $0x0,%rax
  43dac0:	0f 84 df 00 00 00    	je     43dba5 <mbedtls_rsa_free+0x1375>
  43dac6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  43daca:	48 83 c0 10          	add    $0x10,%rax
  43dace:	48 89 c7             	mov    %rax,%rdi
  43dad1:	e8 72 86 00 00       	callq  446148 <getDecryptedValueQWord>
  43dad6:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  43dada:	48 83 c7 08          	add    $0x8,%rdi
  43dade:	48 89 85 88 fa ff ff 	mov    %rax,-0x578(%rbp)
  43dae5:	e8 5e 86 00 00       	callq  446148 <getDecryptedValueQWord>
  43daea:	48 8b bd 88 fa ff ff 	mov    -0x578(%rbp),%rdi
  43daf1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  43daf5:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  43daf9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43dafd:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  43db01:	48 c1 e1 03          	shl    $0x3,%rcx
  43db05:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43db09:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
  43db0d:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  43db14:	00 
  43db15:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  43db19:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43db1d:	48 89 85 80 fa ff ff 	mov    %rax,-0x580(%rbp)
  43db24:	48 89 8d 78 fa ff ff 	mov    %rcx,-0x588(%rbp)
  43db2b:	48 89 95 70 fa ff ff 	mov    %rdx,-0x590(%rbp)
  43db32:	e8 1f 7e 00 00       	callq  445956 <writeback_cache>
  43db37:	48 8b bd 78 fa ff ff 	mov    -0x588(%rbp),%rdi
  43db3e:	48 8b b5 70 fa ff ff 	mov    -0x590(%rbp),%rsi
  43db45:	e8 9b 8b 00 00       	callq  4466e5 <decryptArrayForLibCall>
  43db4a:	31 f6                	xor    %esi,%esi
  43db4c:	48 8b bd 78 fa ff ff 	mov    -0x588(%rbp),%rdi
  43db53:	48 8b 95 70 fa ff ff 	mov    -0x590(%rbp),%rdx
  43db5a:	48 8b 85 80 fa ff ff 	mov    -0x580(%rbp),%rax
  43db61:	ff d0                	callq  *%rax
  43db63:	48 8b bd 78 fa ff ff 	mov    -0x588(%rbp),%rdi
  43db6a:	48 8b b5 70 fa ff ff 	mov    -0x590(%rbp),%rsi
  43db71:	48 89 85 68 fa ff ff 	mov    %rax,-0x598(%rbp)
  43db78:	e8 d9 88 00 00       	callq  446456 <encryptArrayForLibCall>
  43db7d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  43db81:	48 83 c0 10          	add    $0x10,%rax
  43db85:	48 89 c7             	mov    %rax,%rdi
  43db88:	e8 bb 85 00 00       	callq  446148 <getDecryptedValueQWord>
  43db8d:	48 89 85 60 fa ff ff 	mov    %rax,-0x5a0(%rbp)
  43db94:	e8 bd 7d 00 00       	callq  445956 <writeback_cache>
  43db99:	48 8b bd 60 fa ff ff 	mov    -0x5a0(%rbp),%rdi
  43dba0:	e8 3b 35 fc ff       	callq  4010e0 <free@plt>
  43dba5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  43dba9:	48 89 c7             	mov    %rax,%rdi
  43dbac:	be 01 00 00 00       	mov    $0x1,%esi
  43dbb1:	e8 48 80 00 00       	callq  445bfe <setEncryptedValueDWord>
  43dbb6:	31 f6                	xor    %esi,%esi
  43dbb8:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  43dbbc:	48 83 c7 08          	add    $0x8,%rdi
  43dbc0:	48 89 85 58 fa ff ff 	mov    %rax,-0x5a8(%rbp)
  43dbc7:	e8 30 81 00 00       	callq  445cfc <setEncryptedValueQWord>
  43dbcc:	31 c9                	xor    %ecx,%ecx
  43dbce:	89 ce                	mov    %ecx,%esi
  43dbd0:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  43dbd4:	48 83 c7 10          	add    $0x10,%rdi
  43dbd8:	48 89 85 50 fa ff ff 	mov    %rax,-0x5b0(%rbp)
  43dbdf:	e8 18 81 00 00       	callq  445cfc <setEncryptedValueQWord>
  43dbe4:	48 89 85 48 fa ff ff 	mov    %rax,-0x5b8(%rbp)
  43dbeb:	e8 66 7d 00 00       	callq  445956 <writeback_cache>
  43dbf0:	48 81 c4 c0 05 00 00 	add    $0x5c0,%rsp
  43dbf7:	5d                   	pop    %rbp
  43dbf8:	c3                   	retq   
  43dbf9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000043dc00 <mbedtls_sha1_init>:
  43dc00:	55                   	push   %rbp
  43dc01:	48 89 e5             	mov    %rsp,%rbp
  43dc04:	48 83 ec 10          	sub    $0x10,%rsp
  43dc08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  43dc0c:	eb 00                	jmp    43dc0e <mbedtls_sha1_init+0xe>
  43dc0e:	31 f6                	xor    %esi,%esi
  43dc10:	b8 5c 00 00 00       	mov    $0x5c,%eax
  43dc15:	89 c2                	mov    %eax,%edx
  43dc17:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  43dc1b:	48 89 cf             	mov    %rcx,%rdi
  43dc1e:	e8 fd 33 fc ff       	callq  401020 <memset@plt>
  43dc23:	e8 2e 7d 00 00       	callq  445956 <writeback_cache>
  43dc28:	48 83 c4 10          	add    $0x10,%rsp
  43dc2c:	5d                   	pop    %rbp
  43dc2d:	c3                   	retq   
  43dc2e:	66 90                	xchg   %ax,%ax

000000000043dc30 <mbedtls_sha1_free>:
  43dc30:	55                   	push   %rbp
  43dc31:	48 89 e5             	mov    %rsp,%rbp
  43dc34:	48 83 ec 20          	sub    $0x20,%rsp
  43dc38:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  43dc3c:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  43dc41:	75 02                	jne    43dc45 <mbedtls_sha1_free+0x15>
  43dc43:	eb 28                	jmp    43dc6d <mbedtls_sha1_free+0x3d>
  43dc45:	31 f6                	xor    %esi,%esi
  43dc47:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43dc4b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  43dc4f:	48 c7 45 f0 5c 00 00 	movq   $0x5c,-0x10(%rbp)
  43dc56:	00 
  43dc57:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  43dc5e:	00 
  43dc5f:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  43dc63:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  43dc67:	ff d0                	callq  *%rax
  43dc69:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  43dc6d:	e8 e4 7c 00 00       	callq  445956 <writeback_cache>
  43dc72:	48 83 c4 20          	add    $0x20,%rsp
  43dc76:	5d                   	pop    %rbp
  43dc77:	c3                   	retq   
  43dc78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  43dc7f:	00 

000000000043dc80 <mbedtls_sha1_starts_ret>:
  43dc80:	55                   	push   %rbp
  43dc81:	48 89 e5             	mov    %rsp,%rbp
  43dc84:	48 83 ec 10          	sub    $0x10,%rsp
  43dc88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  43dc8c:	eb 00                	jmp    43dc8e <mbedtls_sha1_starts_ret+0xe>
  43dc8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43dc92:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  43dc98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43dc9c:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
  43dca3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43dca7:	c7 40 08 01 23 45 67 	movl   $0x67452301,0x8(%rax)
  43dcae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43dcb2:	c7 40 0c 89 ab cd ef 	movl   $0xefcdab89,0xc(%rax)
  43dcb9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43dcbd:	c7 40 10 fe dc ba 98 	movl   $0x98badcfe,0x10(%rax)
  43dcc4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43dcc8:	c7 40 14 76 54 32 10 	movl   $0x10325476,0x14(%rax)
  43dccf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43dcd3:	c7 40 18 f0 e1 d2 c3 	movl   $0xc3d2e1f0,0x18(%rax)
  43dcda:	e8 77 7c 00 00       	callq  445956 <writeback_cache>
  43dcdf:	31 c0                	xor    %eax,%eax
  43dce1:	48 83 c4 10          	add    $0x10,%rsp
  43dce5:	5d                   	pop    %rbp
  43dce6:	c3                   	retq   
  43dce7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  43dcee:	00 00 

000000000043dcf0 <mbedtls_internal_sha1_process>:
  43dcf0:	55                   	push   %rbp
  43dcf1:	48 89 e5             	mov    %rsp,%rbp
  43dcf4:	48 81 ec 80 00 00 00 	sub    $0x80,%rsp
  43dcfb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  43dcff:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  43dd03:	eb 00                	jmp    43dd05 <mbedtls_internal_sha1_process+0x15>
  43dd05:	eb 00                	jmp    43dd07 <mbedtls_internal_sha1_process+0x17>
  43dd07:	eb 00                	jmp    43dd09 <mbedtls_internal_sha1_process+0x19>
  43dd09:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43dd0d:	0f b6 08             	movzbl (%rax),%ecx
  43dd10:	c1 e1 18             	shl    $0x18,%ecx
  43dd13:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43dd17:	0f b6 50 01          	movzbl 0x1(%rax),%edx
  43dd1b:	c1 e2 10             	shl    $0x10,%edx
  43dd1e:	09 d1                	or     %edx,%ecx
  43dd20:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43dd24:	0f b6 50 02          	movzbl 0x2(%rax),%edx
  43dd28:	c1 e2 08             	shl    $0x8,%edx
  43dd2b:	09 d1                	or     %edx,%ecx
  43dd2d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43dd31:	0f b6 50 03          	movzbl 0x3(%rax),%edx
  43dd35:	09 d1                	or     %edx,%ecx
  43dd37:	89 4d a0             	mov    %ecx,-0x60(%rbp)
  43dd3a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43dd3e:	0f b6 48 04          	movzbl 0x4(%rax),%ecx
  43dd42:	c1 e1 18             	shl    $0x18,%ecx
  43dd45:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43dd49:	0f b6 50 05          	movzbl 0x5(%rax),%edx
  43dd4d:	c1 e2 10             	shl    $0x10,%edx
  43dd50:	09 d1                	or     %edx,%ecx
  43dd52:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43dd56:	0f b6 50 06          	movzbl 0x6(%rax),%edx
  43dd5a:	c1 e2 08             	shl    $0x8,%edx
  43dd5d:	09 d1                	or     %edx,%ecx
  43dd5f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43dd63:	0f b6 50 07          	movzbl 0x7(%rax),%edx
  43dd67:	09 d1                	or     %edx,%ecx
  43dd69:	89 4d a4             	mov    %ecx,-0x5c(%rbp)
  43dd6c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43dd70:	0f b6 48 08          	movzbl 0x8(%rax),%ecx
  43dd74:	c1 e1 18             	shl    $0x18,%ecx
  43dd77:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43dd7b:	0f b6 50 09          	movzbl 0x9(%rax),%edx
  43dd7f:	c1 e2 10             	shl    $0x10,%edx
  43dd82:	09 d1                	or     %edx,%ecx
  43dd84:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43dd88:	0f b6 50 0a          	movzbl 0xa(%rax),%edx
  43dd8c:	c1 e2 08             	shl    $0x8,%edx
  43dd8f:	09 d1                	or     %edx,%ecx
  43dd91:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43dd95:	0f b6 50 0b          	movzbl 0xb(%rax),%edx
  43dd99:	09 d1                	or     %edx,%ecx
  43dd9b:	89 4d a8             	mov    %ecx,-0x58(%rbp)
  43dd9e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43dda2:	0f b6 48 0c          	movzbl 0xc(%rax),%ecx
  43dda6:	c1 e1 18             	shl    $0x18,%ecx
  43dda9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43ddad:	0f b6 50 0d          	movzbl 0xd(%rax),%edx
  43ddb1:	c1 e2 10             	shl    $0x10,%edx
  43ddb4:	09 d1                	or     %edx,%ecx
  43ddb6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43ddba:	0f b6 50 0e          	movzbl 0xe(%rax),%edx
  43ddbe:	c1 e2 08             	shl    $0x8,%edx
  43ddc1:	09 d1                	or     %edx,%ecx
  43ddc3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43ddc7:	0f b6 50 0f          	movzbl 0xf(%rax),%edx
  43ddcb:	09 d1                	or     %edx,%ecx
  43ddcd:	89 4d ac             	mov    %ecx,-0x54(%rbp)
  43ddd0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43ddd4:	0f b6 48 10          	movzbl 0x10(%rax),%ecx
  43ddd8:	c1 e1 18             	shl    $0x18,%ecx
  43dddb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43dddf:	0f b6 50 11          	movzbl 0x11(%rax),%edx
  43dde3:	c1 e2 10             	shl    $0x10,%edx
  43dde6:	09 d1                	or     %edx,%ecx
  43dde8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43ddec:	0f b6 50 12          	movzbl 0x12(%rax),%edx
  43ddf0:	c1 e2 08             	shl    $0x8,%edx
  43ddf3:	09 d1                	or     %edx,%ecx
  43ddf5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43ddf9:	0f b6 50 13          	movzbl 0x13(%rax),%edx
  43ddfd:	09 d1                	or     %edx,%ecx
  43ddff:	89 4d b0             	mov    %ecx,-0x50(%rbp)
  43de02:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43de06:	0f b6 48 14          	movzbl 0x14(%rax),%ecx
  43de0a:	c1 e1 18             	shl    $0x18,%ecx
  43de0d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43de11:	0f b6 50 15          	movzbl 0x15(%rax),%edx
  43de15:	c1 e2 10             	shl    $0x10,%edx
  43de18:	09 d1                	or     %edx,%ecx
  43de1a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43de1e:	0f b6 50 16          	movzbl 0x16(%rax),%edx
  43de22:	c1 e2 08             	shl    $0x8,%edx
  43de25:	09 d1                	or     %edx,%ecx
  43de27:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43de2b:	0f b6 50 17          	movzbl 0x17(%rax),%edx
  43de2f:	09 d1                	or     %edx,%ecx
  43de31:	89 4d b4             	mov    %ecx,-0x4c(%rbp)
  43de34:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43de38:	0f b6 48 18          	movzbl 0x18(%rax),%ecx
  43de3c:	c1 e1 18             	shl    $0x18,%ecx
  43de3f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43de43:	0f b6 50 19          	movzbl 0x19(%rax),%edx
  43de47:	c1 e2 10             	shl    $0x10,%edx
  43de4a:	09 d1                	or     %edx,%ecx
  43de4c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43de50:	0f b6 50 1a          	movzbl 0x1a(%rax),%edx
  43de54:	c1 e2 08             	shl    $0x8,%edx
  43de57:	09 d1                	or     %edx,%ecx
  43de59:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43de5d:	0f b6 50 1b          	movzbl 0x1b(%rax),%edx
  43de61:	09 d1                	or     %edx,%ecx
  43de63:	89 4d b8             	mov    %ecx,-0x48(%rbp)
  43de66:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43de6a:	0f b6 48 1c          	movzbl 0x1c(%rax),%ecx
  43de6e:	c1 e1 18             	shl    $0x18,%ecx
  43de71:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43de75:	0f b6 50 1d          	movzbl 0x1d(%rax),%edx
  43de79:	c1 e2 10             	shl    $0x10,%edx
  43de7c:	09 d1                	or     %edx,%ecx
  43de7e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43de82:	0f b6 50 1e          	movzbl 0x1e(%rax),%edx
  43de86:	c1 e2 08             	shl    $0x8,%edx
  43de89:	09 d1                	or     %edx,%ecx
  43de8b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43de8f:	0f b6 50 1f          	movzbl 0x1f(%rax),%edx
  43de93:	09 d1                	or     %edx,%ecx
  43de95:	89 4d bc             	mov    %ecx,-0x44(%rbp)
  43de98:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43de9c:	0f b6 48 20          	movzbl 0x20(%rax),%ecx
  43dea0:	c1 e1 18             	shl    $0x18,%ecx
  43dea3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43dea7:	0f b6 50 21          	movzbl 0x21(%rax),%edx
  43deab:	c1 e2 10             	shl    $0x10,%edx
  43deae:	09 d1                	or     %edx,%ecx
  43deb0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43deb4:	0f b6 50 22          	movzbl 0x22(%rax),%edx
  43deb8:	c1 e2 08             	shl    $0x8,%edx
  43debb:	09 d1                	or     %edx,%ecx
  43debd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43dec1:	0f b6 50 23          	movzbl 0x23(%rax),%edx
  43dec5:	09 d1                	or     %edx,%ecx
  43dec7:	89 4d c0             	mov    %ecx,-0x40(%rbp)
  43deca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43dece:	0f b6 48 24          	movzbl 0x24(%rax),%ecx
  43ded2:	c1 e1 18             	shl    $0x18,%ecx
  43ded5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43ded9:	0f b6 50 25          	movzbl 0x25(%rax),%edx
  43dedd:	c1 e2 10             	shl    $0x10,%edx
  43dee0:	09 d1                	or     %edx,%ecx
  43dee2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43dee6:	0f b6 50 26          	movzbl 0x26(%rax),%edx
  43deea:	c1 e2 08             	shl    $0x8,%edx
  43deed:	09 d1                	or     %edx,%ecx
  43deef:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43def3:	0f b6 50 27          	movzbl 0x27(%rax),%edx
  43def7:	09 d1                	or     %edx,%ecx
  43def9:	89 4d c4             	mov    %ecx,-0x3c(%rbp)
  43defc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43df00:	0f b6 48 28          	movzbl 0x28(%rax),%ecx
  43df04:	c1 e1 18             	shl    $0x18,%ecx
  43df07:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43df0b:	0f b6 50 29          	movzbl 0x29(%rax),%edx
  43df0f:	c1 e2 10             	shl    $0x10,%edx
  43df12:	09 d1                	or     %edx,%ecx
  43df14:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43df18:	0f b6 50 2a          	movzbl 0x2a(%rax),%edx
  43df1c:	c1 e2 08             	shl    $0x8,%edx
  43df1f:	09 d1                	or     %edx,%ecx
  43df21:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43df25:	0f b6 50 2b          	movzbl 0x2b(%rax),%edx
  43df29:	09 d1                	or     %edx,%ecx
  43df2b:	89 4d c8             	mov    %ecx,-0x38(%rbp)
  43df2e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43df32:	0f b6 48 2c          	movzbl 0x2c(%rax),%ecx
  43df36:	c1 e1 18             	shl    $0x18,%ecx
  43df39:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43df3d:	0f b6 50 2d          	movzbl 0x2d(%rax),%edx
  43df41:	c1 e2 10             	shl    $0x10,%edx
  43df44:	09 d1                	or     %edx,%ecx
  43df46:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43df4a:	0f b6 50 2e          	movzbl 0x2e(%rax),%edx
  43df4e:	c1 e2 08             	shl    $0x8,%edx
  43df51:	09 d1                	or     %edx,%ecx
  43df53:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43df57:	0f b6 50 2f          	movzbl 0x2f(%rax),%edx
  43df5b:	09 d1                	or     %edx,%ecx
  43df5d:	89 4d cc             	mov    %ecx,-0x34(%rbp)
  43df60:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43df64:	0f b6 48 30          	movzbl 0x30(%rax),%ecx
  43df68:	c1 e1 18             	shl    $0x18,%ecx
  43df6b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43df6f:	0f b6 50 31          	movzbl 0x31(%rax),%edx
  43df73:	c1 e2 10             	shl    $0x10,%edx
  43df76:	09 d1                	or     %edx,%ecx
  43df78:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43df7c:	0f b6 50 32          	movzbl 0x32(%rax),%edx
  43df80:	c1 e2 08             	shl    $0x8,%edx
  43df83:	09 d1                	or     %edx,%ecx
  43df85:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43df89:	0f b6 50 33          	movzbl 0x33(%rax),%edx
  43df8d:	09 d1                	or     %edx,%ecx
  43df8f:	89 4d d0             	mov    %ecx,-0x30(%rbp)
  43df92:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43df96:	0f b6 48 34          	movzbl 0x34(%rax),%ecx
  43df9a:	c1 e1 18             	shl    $0x18,%ecx
  43df9d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43dfa1:	0f b6 50 35          	movzbl 0x35(%rax),%edx
  43dfa5:	c1 e2 10             	shl    $0x10,%edx
  43dfa8:	09 d1                	or     %edx,%ecx
  43dfaa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43dfae:	0f b6 50 36          	movzbl 0x36(%rax),%edx
  43dfb2:	c1 e2 08             	shl    $0x8,%edx
  43dfb5:	09 d1                	or     %edx,%ecx
  43dfb7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43dfbb:	0f b6 50 37          	movzbl 0x37(%rax),%edx
  43dfbf:	09 d1                	or     %edx,%ecx
  43dfc1:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  43dfc4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43dfc8:	0f b6 48 38          	movzbl 0x38(%rax),%ecx
  43dfcc:	c1 e1 18             	shl    $0x18,%ecx
  43dfcf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43dfd3:	0f b6 50 39          	movzbl 0x39(%rax),%edx
  43dfd7:	c1 e2 10             	shl    $0x10,%edx
  43dfda:	09 d1                	or     %edx,%ecx
  43dfdc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43dfe0:	0f b6 50 3a          	movzbl 0x3a(%rax),%edx
  43dfe4:	c1 e2 08             	shl    $0x8,%edx
  43dfe7:	09 d1                	or     %edx,%ecx
  43dfe9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43dfed:	0f b6 50 3b          	movzbl 0x3b(%rax),%edx
  43dff1:	09 d1                	or     %edx,%ecx
  43dff3:	89 4d d8             	mov    %ecx,-0x28(%rbp)
  43dff6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43dffa:	0f b6 48 3c          	movzbl 0x3c(%rax),%ecx
  43dffe:	c1 e1 18             	shl    $0x18,%ecx
  43e001:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43e005:	0f b6 50 3d          	movzbl 0x3d(%rax),%edx
  43e009:	c1 e2 10             	shl    $0x10,%edx
  43e00c:	09 d1                	or     %edx,%ecx
  43e00e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43e012:	0f b6 50 3e          	movzbl 0x3e(%rax),%edx
  43e016:	c1 e2 08             	shl    $0x8,%edx
  43e019:	09 d1                	or     %edx,%ecx
  43e01b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43e01f:	0f b6 50 3f          	movzbl 0x3f(%rax),%edx
  43e023:	09 d1                	or     %edx,%ecx
  43e025:	89 4d dc             	mov    %ecx,-0x24(%rbp)
  43e028:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43e02c:	8b 48 08             	mov    0x8(%rax),%ecx
  43e02f:	89 4d 9c             	mov    %ecx,-0x64(%rbp)
  43e032:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43e036:	8b 48 0c             	mov    0xc(%rax),%ecx
  43e039:	89 4d 98             	mov    %ecx,-0x68(%rbp)
  43e03c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43e040:	8b 48 10             	mov    0x10(%rax),%ecx
  43e043:	89 4d 94             	mov    %ecx,-0x6c(%rbp)
  43e046:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43e04a:	8b 48 14             	mov    0x14(%rax),%ecx
  43e04d:	89 4d 90             	mov    %ecx,-0x70(%rbp)
  43e050:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43e054:	8b 48 18             	mov    0x18(%rax),%ecx
  43e057:	89 4d 8c             	mov    %ecx,-0x74(%rbp)
  43e05a:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
  43e05d:	c1 e1 05             	shl    $0x5,%ecx
  43e060:	8b 55 9c             	mov    -0x64(%rbp),%edx
  43e063:	c1 ea 1b             	shr    $0x1b,%edx
  43e066:	09 d1                	or     %edx,%ecx
  43e068:	8b 55 90             	mov    -0x70(%rbp),%edx
  43e06b:	8b 75 98             	mov    -0x68(%rbp),%esi
  43e06e:	8b 7d 94             	mov    -0x6c(%rbp),%edi
  43e071:	33 7d 90             	xor    -0x70(%rbp),%edi
  43e074:	21 fe                	and    %edi,%esi
  43e076:	31 f2                	xor    %esi,%edx
  43e078:	01 d1                	add    %edx,%ecx
  43e07a:	81 c1 99 79 82 5a    	add    $0x5a827999,%ecx
  43e080:	03 4d a0             	add    -0x60(%rbp),%ecx
  43e083:	03 4d 8c             	add    -0x74(%rbp),%ecx
  43e086:	89 4d 8c             	mov    %ecx,-0x74(%rbp)
  43e089:	8b 4d 98             	mov    -0x68(%rbp),%ecx
  43e08c:	c1 e1 1e             	shl    $0x1e,%ecx
  43e08f:	8b 55 98             	mov    -0x68(%rbp),%edx
  43e092:	c1 ea 02             	shr    $0x2,%edx
  43e095:	09 d1                	or     %edx,%ecx
  43e097:	89 4d 98             	mov    %ecx,-0x68(%rbp)
  43e09a:	8b 4d 8c             	mov    -0x74(%rbp),%ecx
  43e09d:	c1 e1 05             	shl    $0x5,%ecx
  43e0a0:	8b 55 8c             	mov    -0x74(%rbp),%edx
  43e0a3:	c1 ea 1b             	shr    $0x1b,%edx
  43e0a6:	09 d1                	or     %edx,%ecx
  43e0a8:	8b 55 94             	mov    -0x6c(%rbp),%edx
  43e0ab:	8b 75 9c             	mov    -0x64(%rbp),%esi
  43e0ae:	8b 7d 98             	mov    -0x68(%rbp),%edi
  43e0b1:	33 7d 94             	xor    -0x6c(%rbp),%edi
  43e0b4:	21 fe                	and    %edi,%esi
  43e0b6:	31 f2                	xor    %esi,%edx
  43e0b8:	01 d1                	add    %edx,%ecx
  43e0ba:	81 c1 99 79 82 5a    	add    $0x5a827999,%ecx
  43e0c0:	03 4d a4             	add    -0x5c(%rbp),%ecx
  43e0c3:	03 4d 90             	add    -0x70(%rbp),%ecx
  43e0c6:	89 4d 90             	mov    %ecx,-0x70(%rbp)
  43e0c9:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
  43e0cc:	c1 e1 1e             	shl    $0x1e,%ecx
  43e0cf:	8b 55 9c             	mov    -0x64(%rbp),%edx
  43e0d2:	c1 ea 02             	shr    $0x2,%edx
  43e0d5:	09 d1                	or     %edx,%ecx
  43e0d7:	89 4d 9c             	mov    %ecx,-0x64(%rbp)
  43e0da:	8b 4d 90             	mov    -0x70(%rbp),%ecx
  43e0dd:	c1 e1 05             	shl    $0x5,%ecx
  43e0e0:	8b 55 90             	mov    -0x70(%rbp),%edx
  43e0e3:	c1 ea 1b             	shr    $0x1b,%edx
  43e0e6:	09 d1                	or     %edx,%ecx
  43e0e8:	8b 55 98             	mov    -0x68(%rbp),%edx
  43e0eb:	8b 75 8c             	mov    -0x74(%rbp),%esi
  43e0ee:	8b 7d 9c             	mov    -0x64(%rbp),%edi
  43e0f1:	33 7d 98             	xor    -0x68(%rbp),%edi
  43e0f4:	21 fe                	and    %edi,%esi
  43e0f6:	31 f2                	xor    %esi,%edx
  43e0f8:	01 d1                	add    %edx,%ecx
  43e0fa:	81 c1 99 79 82 5a    	add    $0x5a827999,%ecx
  43e100:	03 4d a8             	add    -0x58(%rbp),%ecx
  43e103:	03 4d 94             	add    -0x6c(%rbp),%ecx
  43e106:	89 4d 94             	mov    %ecx,-0x6c(%rbp)
  43e109:	8b 4d 8c             	mov    -0x74(%rbp),%ecx
  43e10c:	c1 e1 1e             	shl    $0x1e,%ecx
  43e10f:	8b 55 8c             	mov    -0x74(%rbp),%edx
  43e112:	c1 ea 02             	shr    $0x2,%edx
  43e115:	09 d1                	or     %edx,%ecx
  43e117:	89 4d 8c             	mov    %ecx,-0x74(%rbp)
  43e11a:	8b 4d 94             	mov    -0x6c(%rbp),%ecx
  43e11d:	c1 e1 05             	shl    $0x5,%ecx
  43e120:	8b 55 94             	mov    -0x6c(%rbp),%edx
  43e123:	c1 ea 1b             	shr    $0x1b,%edx
  43e126:	09 d1                	or     %edx,%ecx
  43e128:	8b 55 9c             	mov    -0x64(%rbp),%edx
  43e12b:	8b 75 90             	mov    -0x70(%rbp),%esi
  43e12e:	8b 7d 8c             	mov    -0x74(%rbp),%edi
  43e131:	33 7d 9c             	xor    -0x64(%rbp),%edi
  43e134:	21 fe                	and    %edi,%esi
  43e136:	31 f2                	xor    %esi,%edx
  43e138:	01 d1                	add    %edx,%ecx
  43e13a:	81 c1 99 79 82 5a    	add    $0x5a827999,%ecx
  43e140:	03 4d ac             	add    -0x54(%rbp),%ecx
  43e143:	03 4d 98             	add    -0x68(%rbp),%ecx
  43e146:	89 4d 98             	mov    %ecx,-0x68(%rbp)
  43e149:	8b 4d 90             	mov    -0x70(%rbp),%ecx
  43e14c:	c1 e1 1e             	shl    $0x1e,%ecx
  43e14f:	8b 55 90             	mov    -0x70(%rbp),%edx
  43e152:	c1 ea 02             	shr    $0x2,%edx
  43e155:	09 d1                	or     %edx,%ecx
  43e157:	89 4d 90             	mov    %ecx,-0x70(%rbp)
  43e15a:	8b 4d 98             	mov    -0x68(%rbp),%ecx
  43e15d:	c1 e1 05             	shl    $0x5,%ecx
  43e160:	8b 55 98             	mov    -0x68(%rbp),%edx
  43e163:	c1 ea 1b             	shr    $0x1b,%edx
  43e166:	09 d1                	or     %edx,%ecx
  43e168:	8b 55 8c             	mov    -0x74(%rbp),%edx
  43e16b:	8b 75 94             	mov    -0x6c(%rbp),%esi
  43e16e:	8b 7d 90             	mov    -0x70(%rbp),%edi
  43e171:	33 7d 8c             	xor    -0x74(%rbp),%edi
  43e174:	21 fe                	and    %edi,%esi
  43e176:	31 f2                	xor    %esi,%edx
  43e178:	01 d1                	add    %edx,%ecx
  43e17a:	81 c1 99 79 82 5a    	add    $0x5a827999,%ecx
  43e180:	03 4d b0             	add    -0x50(%rbp),%ecx
  43e183:	03 4d 9c             	add    -0x64(%rbp),%ecx
  43e186:	89 4d 9c             	mov    %ecx,-0x64(%rbp)
  43e189:	8b 4d 94             	mov    -0x6c(%rbp),%ecx
  43e18c:	c1 e1 1e             	shl    $0x1e,%ecx
  43e18f:	8b 55 94             	mov    -0x6c(%rbp),%edx
  43e192:	c1 ea 02             	shr    $0x2,%edx
  43e195:	09 d1                	or     %edx,%ecx
  43e197:	89 4d 94             	mov    %ecx,-0x6c(%rbp)
  43e19a:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
  43e19d:	c1 e1 05             	shl    $0x5,%ecx
  43e1a0:	8b 55 9c             	mov    -0x64(%rbp),%edx
  43e1a3:	c1 ea 1b             	shr    $0x1b,%edx
  43e1a6:	09 d1                	or     %edx,%ecx
  43e1a8:	8b 55 90             	mov    -0x70(%rbp),%edx
  43e1ab:	8b 75 98             	mov    -0x68(%rbp),%esi
  43e1ae:	8b 7d 94             	mov    -0x6c(%rbp),%edi
  43e1b1:	33 7d 90             	xor    -0x70(%rbp),%edi
  43e1b4:	21 fe                	and    %edi,%esi
  43e1b6:	31 f2                	xor    %esi,%edx
  43e1b8:	01 d1                	add    %edx,%ecx
  43e1ba:	81 c1 99 79 82 5a    	add    $0x5a827999,%ecx
  43e1c0:	03 4d b4             	add    -0x4c(%rbp),%ecx
  43e1c3:	03 4d 8c             	add    -0x74(%rbp),%ecx
  43e1c6:	89 4d 8c             	mov    %ecx,-0x74(%rbp)
  43e1c9:	8b 4d 98             	mov    -0x68(%rbp),%ecx
  43e1cc:	c1 e1 1e             	shl    $0x1e,%ecx
  43e1cf:	8b 55 98             	mov    -0x68(%rbp),%edx
  43e1d2:	c1 ea 02             	shr    $0x2,%edx
  43e1d5:	09 d1                	or     %edx,%ecx
  43e1d7:	89 4d 98             	mov    %ecx,-0x68(%rbp)
  43e1da:	8b 4d 8c             	mov    -0x74(%rbp),%ecx
  43e1dd:	c1 e1 05             	shl    $0x5,%ecx
  43e1e0:	8b 55 8c             	mov    -0x74(%rbp),%edx
  43e1e3:	c1 ea 1b             	shr    $0x1b,%edx
  43e1e6:	09 d1                	or     %edx,%ecx
  43e1e8:	8b 55 94             	mov    -0x6c(%rbp),%edx
  43e1eb:	8b 75 9c             	mov    -0x64(%rbp),%esi
  43e1ee:	8b 7d 98             	mov    -0x68(%rbp),%edi
  43e1f1:	33 7d 94             	xor    -0x6c(%rbp),%edi
  43e1f4:	21 fe                	and    %edi,%esi
  43e1f6:	31 f2                	xor    %esi,%edx
  43e1f8:	01 d1                	add    %edx,%ecx
  43e1fa:	81 c1 99 79 82 5a    	add    $0x5a827999,%ecx
  43e200:	03 4d b8             	add    -0x48(%rbp),%ecx
  43e203:	03 4d 90             	add    -0x70(%rbp),%ecx
  43e206:	89 4d 90             	mov    %ecx,-0x70(%rbp)
  43e209:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
  43e20c:	c1 e1 1e             	shl    $0x1e,%ecx
  43e20f:	8b 55 9c             	mov    -0x64(%rbp),%edx
  43e212:	c1 ea 02             	shr    $0x2,%edx
  43e215:	09 d1                	or     %edx,%ecx
  43e217:	89 4d 9c             	mov    %ecx,-0x64(%rbp)
  43e21a:	8b 4d 90             	mov    -0x70(%rbp),%ecx
  43e21d:	c1 e1 05             	shl    $0x5,%ecx
  43e220:	8b 55 90             	mov    -0x70(%rbp),%edx
  43e223:	c1 ea 1b             	shr    $0x1b,%edx
  43e226:	09 d1                	or     %edx,%ecx
  43e228:	8b 55 98             	mov    -0x68(%rbp),%edx
  43e22b:	8b 75 8c             	mov    -0x74(%rbp),%esi
  43e22e:	8b 7d 9c             	mov    -0x64(%rbp),%edi
  43e231:	33 7d 98             	xor    -0x68(%rbp),%edi
  43e234:	21 fe                	and    %edi,%esi
  43e236:	31 f2                	xor    %esi,%edx
  43e238:	01 d1                	add    %edx,%ecx
  43e23a:	81 c1 99 79 82 5a    	add    $0x5a827999,%ecx
  43e240:	03 4d bc             	add    -0x44(%rbp),%ecx
  43e243:	03 4d 94             	add    -0x6c(%rbp),%ecx
  43e246:	89 4d 94             	mov    %ecx,-0x6c(%rbp)
  43e249:	8b 4d 8c             	mov    -0x74(%rbp),%ecx
  43e24c:	c1 e1 1e             	shl    $0x1e,%ecx
  43e24f:	8b 55 8c             	mov    -0x74(%rbp),%edx
  43e252:	c1 ea 02             	shr    $0x2,%edx
  43e255:	09 d1                	or     %edx,%ecx
  43e257:	89 4d 8c             	mov    %ecx,-0x74(%rbp)
  43e25a:	8b 4d 94             	mov    -0x6c(%rbp),%ecx
  43e25d:	c1 e1 05             	shl    $0x5,%ecx
  43e260:	8b 55 94             	mov    -0x6c(%rbp),%edx
  43e263:	c1 ea 1b             	shr    $0x1b,%edx
  43e266:	09 d1                	or     %edx,%ecx
  43e268:	8b 55 9c             	mov    -0x64(%rbp),%edx
  43e26b:	8b 75 90             	mov    -0x70(%rbp),%esi
  43e26e:	8b 7d 8c             	mov    -0x74(%rbp),%edi
  43e271:	33 7d 9c             	xor    -0x64(%rbp),%edi
  43e274:	21 fe                	and    %edi,%esi
  43e276:	31 f2                	xor    %esi,%edx
  43e278:	01 d1                	add    %edx,%ecx
  43e27a:	81 c1 99 79 82 5a    	add    $0x5a827999,%ecx
  43e280:	03 4d c0             	add    -0x40(%rbp),%ecx
  43e283:	03 4d 98             	add    -0x68(%rbp),%ecx
  43e286:	89 4d 98             	mov    %ecx,-0x68(%rbp)
  43e289:	8b 4d 90             	mov    -0x70(%rbp),%ecx
  43e28c:	c1 e1 1e             	shl    $0x1e,%ecx
  43e28f:	8b 55 90             	mov    -0x70(%rbp),%edx
  43e292:	c1 ea 02             	shr    $0x2,%edx
  43e295:	09 d1                	or     %edx,%ecx
  43e297:	89 4d 90             	mov    %ecx,-0x70(%rbp)
  43e29a:	8b 4d 98             	mov    -0x68(%rbp),%ecx
  43e29d:	c1 e1 05             	shl    $0x5,%ecx
  43e2a0:	8b 55 98             	mov    -0x68(%rbp),%edx
  43e2a3:	c1 ea 1b             	shr    $0x1b,%edx
  43e2a6:	09 d1                	or     %edx,%ecx
  43e2a8:	8b 55 8c             	mov    -0x74(%rbp),%edx
  43e2ab:	8b 75 94             	mov    -0x6c(%rbp),%esi
  43e2ae:	8b 7d 90             	mov    -0x70(%rbp),%edi
  43e2b1:	33 7d 8c             	xor    -0x74(%rbp),%edi
  43e2b4:	21 fe                	and    %edi,%esi
  43e2b6:	31 f2                	xor    %esi,%edx
  43e2b8:	01 d1                	add    %edx,%ecx
  43e2ba:	81 c1 99 79 82 5a    	add    $0x5a827999,%ecx
  43e2c0:	03 4d c4             	add    -0x3c(%rbp),%ecx
  43e2c3:	03 4d 9c             	add    -0x64(%rbp),%ecx
  43e2c6:	89 4d 9c             	mov    %ecx,-0x64(%rbp)
  43e2c9:	8b 4d 94             	mov    -0x6c(%rbp),%ecx
  43e2cc:	c1 e1 1e             	shl    $0x1e,%ecx
  43e2cf:	8b 55 94             	mov    -0x6c(%rbp),%edx
  43e2d2:	c1 ea 02             	shr    $0x2,%edx
  43e2d5:	09 d1                	or     %edx,%ecx
  43e2d7:	89 4d 94             	mov    %ecx,-0x6c(%rbp)
  43e2da:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
  43e2dd:	c1 e1 05             	shl    $0x5,%ecx
  43e2e0:	8b 55 9c             	mov    -0x64(%rbp),%edx
  43e2e3:	c1 ea 1b             	shr    $0x1b,%edx
  43e2e6:	09 d1                	or     %edx,%ecx
  43e2e8:	8b 55 90             	mov    -0x70(%rbp),%edx
  43e2eb:	8b 75 98             	mov    -0x68(%rbp),%esi
  43e2ee:	8b 7d 94             	mov    -0x6c(%rbp),%edi
  43e2f1:	33 7d 90             	xor    -0x70(%rbp),%edi
  43e2f4:	21 fe                	and    %edi,%esi
  43e2f6:	31 f2                	xor    %esi,%edx
  43e2f8:	01 d1                	add    %edx,%ecx
  43e2fa:	81 c1 99 79 82 5a    	add    $0x5a827999,%ecx
  43e300:	03 4d c8             	add    -0x38(%rbp),%ecx
  43e303:	03 4d 8c             	add    -0x74(%rbp),%ecx
  43e306:	89 4d 8c             	mov    %ecx,-0x74(%rbp)
  43e309:	8b 4d 98             	mov    -0x68(%rbp),%ecx
  43e30c:	c1 e1 1e             	shl    $0x1e,%ecx
  43e30f:	8b 55 98             	mov    -0x68(%rbp),%edx
  43e312:	c1 ea 02             	shr    $0x2,%edx
  43e315:	09 d1                	or     %edx,%ecx
  43e317:	89 4d 98             	mov    %ecx,-0x68(%rbp)
  43e31a:	8b 4d 8c             	mov    -0x74(%rbp),%ecx
  43e31d:	c1 e1 05             	shl    $0x5,%ecx
  43e320:	8b 55 8c             	mov    -0x74(%rbp),%edx
  43e323:	c1 ea 1b             	shr    $0x1b,%edx
  43e326:	09 d1                	or     %edx,%ecx
  43e328:	8b 55 94             	mov    -0x6c(%rbp),%edx
  43e32b:	8b 75 9c             	mov    -0x64(%rbp),%esi
  43e32e:	8b 7d 98             	mov    -0x68(%rbp),%edi
  43e331:	33 7d 94             	xor    -0x6c(%rbp),%edi
  43e334:	21 fe                	and    %edi,%esi
  43e336:	31 f2                	xor    %esi,%edx
  43e338:	01 d1                	add    %edx,%ecx
  43e33a:	81 c1 99 79 82 5a    	add    $0x5a827999,%ecx
  43e340:	03 4d cc             	add    -0x34(%rbp),%ecx
  43e343:	03 4d 90             	add    -0x70(%rbp),%ecx
  43e346:	89 4d 90             	mov    %ecx,-0x70(%rbp)
  43e349:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
  43e34c:	c1 e1 1e             	shl    $0x1e,%ecx
  43e34f:	8b 55 9c             	mov    -0x64(%rbp),%edx
  43e352:	c1 ea 02             	shr    $0x2,%edx
  43e355:	09 d1                	or     %edx,%ecx
  43e357:	89 4d 9c             	mov    %ecx,-0x64(%rbp)
  43e35a:	8b 4d 90             	mov    -0x70(%rbp),%ecx
  43e35d:	c1 e1 05             	shl    $0x5,%ecx
  43e360:	8b 55 90             	mov    -0x70(%rbp),%edx
  43e363:	c1 ea 1b             	shr    $0x1b,%edx
  43e366:	09 d1                	or     %edx,%ecx
  43e368:	8b 55 98             	mov    -0x68(%rbp),%edx
  43e36b:	8b 75 8c             	mov    -0x74(%rbp),%esi
  43e36e:	8b 7d 9c             	mov    -0x64(%rbp),%edi
  43e371:	33 7d 98             	xor    -0x68(%rbp),%edi
  43e374:	21 fe                	and    %edi,%esi
  43e376:	31 f2                	xor    %esi,%edx
  43e378:	01 d1                	add    %edx,%ecx
  43e37a:	81 c1 99 79 82 5a    	add    $0x5a827999,%ecx
  43e380:	03 4d d0             	add    -0x30(%rbp),%ecx
  43e383:	03 4d 94             	add    -0x6c(%rbp),%ecx
  43e386:	89 4d 94             	mov    %ecx,-0x6c(%rbp)
  43e389:	8b 4d 8c             	mov    -0x74(%rbp),%ecx
  43e38c:	c1 e1 1e             	shl    $0x1e,%ecx
  43e38f:	8b 55 8c             	mov    -0x74(%rbp),%edx
  43e392:	c1 ea 02             	shr    $0x2,%edx
  43e395:	09 d1                	or     %edx,%ecx
  43e397:	89 4d 8c             	mov    %ecx,-0x74(%rbp)
  43e39a:	8b 4d 94             	mov    -0x6c(%rbp),%ecx
  43e39d:	c1 e1 05             	shl    $0x5,%ecx
  43e3a0:	8b 55 94             	mov    -0x6c(%rbp),%edx
  43e3a3:	c1 ea 1b             	shr    $0x1b,%edx
  43e3a6:	09 d1                	or     %edx,%ecx
  43e3a8:	8b 55 9c             	mov    -0x64(%rbp),%edx
  43e3ab:	8b 75 90             	mov    -0x70(%rbp),%esi
  43e3ae:	8b 7d 8c             	mov    -0x74(%rbp),%edi
  43e3b1:	33 7d 9c             	xor    -0x64(%rbp),%edi
  43e3b4:	21 fe                	and    %edi,%esi
  43e3b6:	31 f2                	xor    %esi,%edx
  43e3b8:	01 d1                	add    %edx,%ecx
  43e3ba:	81 c1 99 79 82 5a    	add    $0x5a827999,%ecx
  43e3c0:	03 4d d4             	add    -0x2c(%rbp),%ecx
  43e3c3:	03 4d 98             	add    -0x68(%rbp),%ecx
  43e3c6:	89 4d 98             	mov    %ecx,-0x68(%rbp)
  43e3c9:	8b 4d 90             	mov    -0x70(%rbp),%ecx
  43e3cc:	c1 e1 1e             	shl    $0x1e,%ecx
  43e3cf:	8b 55 90             	mov    -0x70(%rbp),%edx
  43e3d2:	c1 ea 02             	shr    $0x2,%edx
  43e3d5:	09 d1                	or     %edx,%ecx
  43e3d7:	89 4d 90             	mov    %ecx,-0x70(%rbp)
  43e3da:	8b 4d 98             	mov    -0x68(%rbp),%ecx
  43e3dd:	c1 e1 05             	shl    $0x5,%ecx
  43e3e0:	8b 55 98             	mov    -0x68(%rbp),%edx
  43e3e3:	c1 ea 1b             	shr    $0x1b,%edx
  43e3e6:	09 d1                	or     %edx,%ecx
  43e3e8:	8b 55 8c             	mov    -0x74(%rbp),%edx
  43e3eb:	8b 75 94             	mov    -0x6c(%rbp),%esi
  43e3ee:	8b 7d 90             	mov    -0x70(%rbp),%edi
  43e3f1:	33 7d 8c             	xor    -0x74(%rbp),%edi
  43e3f4:	21 fe                	and    %edi,%esi
  43e3f6:	31 f2                	xor    %esi,%edx
  43e3f8:	01 d1                	add    %edx,%ecx
  43e3fa:	81 c1 99 79 82 5a    	add    $0x5a827999,%ecx
  43e400:	03 4d d8             	add    -0x28(%rbp),%ecx
  43e403:	03 4d 9c             	add    -0x64(%rbp),%ecx
  43e406:	89 4d 9c             	mov    %ecx,-0x64(%rbp)
  43e409:	8b 4d 94             	mov    -0x6c(%rbp),%ecx
  43e40c:	c1 e1 1e             	shl    $0x1e,%ecx
  43e40f:	8b 55 94             	mov    -0x6c(%rbp),%edx
  43e412:	c1 ea 02             	shr    $0x2,%edx
  43e415:	09 d1                	or     %edx,%ecx
  43e417:	89 4d 94             	mov    %ecx,-0x6c(%rbp)
  43e41a:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
  43e41d:	c1 e1 05             	shl    $0x5,%ecx
  43e420:	8b 55 9c             	mov    -0x64(%rbp),%edx
  43e423:	c1 ea 1b             	shr    $0x1b,%edx
  43e426:	09 d1                	or     %edx,%ecx
  43e428:	8b 55 90             	mov    -0x70(%rbp),%edx
  43e42b:	8b 75 98             	mov    -0x68(%rbp),%esi
  43e42e:	8b 7d 94             	mov    -0x6c(%rbp),%edi
  43e431:	33 7d 90             	xor    -0x70(%rbp),%edi
  43e434:	21 fe                	and    %edi,%esi
  43e436:	31 f2                	xor    %esi,%edx
  43e438:	01 d1                	add    %edx,%ecx
  43e43a:	81 c1 99 79 82 5a    	add    $0x5a827999,%ecx
  43e440:	03 4d dc             	add    -0x24(%rbp),%ecx
  43e443:	03 4d 8c             	add    -0x74(%rbp),%ecx
  43e446:	89 4d 8c             	mov    %ecx,-0x74(%rbp)
  43e449:	8b 4d 98             	mov    -0x68(%rbp),%ecx
  43e44c:	c1 e1 1e             	shl    $0x1e,%ecx
  43e44f:	8b 55 98             	mov    -0x68(%rbp),%edx
  43e452:	c1 ea 02             	shr    $0x2,%edx
  43e455:	09 d1                	or     %edx,%ecx
  43e457:	89 4d 98             	mov    %ecx,-0x68(%rbp)
  43e45a:	8b 4d 8c             	mov    -0x74(%rbp),%ecx
  43e45d:	c1 e1 05             	shl    $0x5,%ecx
  43e460:	8b 55 8c             	mov    -0x74(%rbp),%edx
  43e463:	c1 ea 1b             	shr    $0x1b,%edx
  43e466:	09 d1                	or     %edx,%ecx
  43e468:	8b 55 94             	mov    -0x6c(%rbp),%edx
  43e46b:	8b 75 9c             	mov    -0x64(%rbp),%esi
  43e46e:	8b 7d 98             	mov    -0x68(%rbp),%edi
  43e471:	33 7d 94             	xor    -0x6c(%rbp),%edi
  43e474:	21 fe                	and    %edi,%esi
  43e476:	31 f2                	xor    %esi,%edx
  43e478:	01 d1                	add    %edx,%ecx
  43e47a:	81 c1 99 79 82 5a    	add    $0x5a827999,%ecx
  43e480:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  43e483:	33 55 c0             	xor    -0x40(%rbp),%edx
  43e486:	33 55 a8             	xor    -0x58(%rbp),%edx
  43e489:	33 55 a0             	xor    -0x60(%rbp),%edx
  43e48c:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43e48f:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43e492:	c1 e2 01             	shl    $0x1,%edx
  43e495:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43e498:	c1 ee 1f             	shr    $0x1f,%esi
  43e49b:	09 f2                	or     %esi,%edx
  43e49d:	89 55 a0             	mov    %edx,-0x60(%rbp)
  43e4a0:	01 d1                	add    %edx,%ecx
  43e4a2:	03 4d 90             	add    -0x70(%rbp),%ecx
  43e4a5:	89 4d 90             	mov    %ecx,-0x70(%rbp)
  43e4a8:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
  43e4ab:	c1 e1 1e             	shl    $0x1e,%ecx
  43e4ae:	8b 55 9c             	mov    -0x64(%rbp),%edx
  43e4b1:	c1 ea 02             	shr    $0x2,%edx
  43e4b4:	09 d1                	or     %edx,%ecx
  43e4b6:	89 4d 9c             	mov    %ecx,-0x64(%rbp)
  43e4b9:	8b 4d 90             	mov    -0x70(%rbp),%ecx
  43e4bc:	c1 e1 05             	shl    $0x5,%ecx
  43e4bf:	8b 55 90             	mov    -0x70(%rbp),%edx
  43e4c2:	c1 ea 1b             	shr    $0x1b,%edx
  43e4c5:	09 d1                	or     %edx,%ecx
  43e4c7:	8b 55 98             	mov    -0x68(%rbp),%edx
  43e4ca:	8b 75 8c             	mov    -0x74(%rbp),%esi
  43e4cd:	8b 7d 9c             	mov    -0x64(%rbp),%edi
  43e4d0:	33 7d 98             	xor    -0x68(%rbp),%edi
  43e4d3:	21 fe                	and    %edi,%esi
  43e4d5:	31 f2                	xor    %esi,%edx
  43e4d7:	01 d1                	add    %edx,%ecx
  43e4d9:	81 c1 99 79 82 5a    	add    $0x5a827999,%ecx
  43e4df:	8b 55 d8             	mov    -0x28(%rbp),%edx
  43e4e2:	33 55 c4             	xor    -0x3c(%rbp),%edx
  43e4e5:	33 55 ac             	xor    -0x54(%rbp),%edx
  43e4e8:	33 55 a4             	xor    -0x5c(%rbp),%edx
  43e4eb:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43e4ee:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43e4f1:	c1 e2 01             	shl    $0x1,%edx
  43e4f4:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43e4f7:	c1 ee 1f             	shr    $0x1f,%esi
  43e4fa:	09 f2                	or     %esi,%edx
  43e4fc:	89 55 a4             	mov    %edx,-0x5c(%rbp)
  43e4ff:	01 d1                	add    %edx,%ecx
  43e501:	03 4d 94             	add    -0x6c(%rbp),%ecx
  43e504:	89 4d 94             	mov    %ecx,-0x6c(%rbp)
  43e507:	8b 4d 8c             	mov    -0x74(%rbp),%ecx
  43e50a:	c1 e1 1e             	shl    $0x1e,%ecx
  43e50d:	8b 55 8c             	mov    -0x74(%rbp),%edx
  43e510:	c1 ea 02             	shr    $0x2,%edx
  43e513:	09 d1                	or     %edx,%ecx
  43e515:	89 4d 8c             	mov    %ecx,-0x74(%rbp)
  43e518:	8b 4d 94             	mov    -0x6c(%rbp),%ecx
  43e51b:	c1 e1 05             	shl    $0x5,%ecx
  43e51e:	8b 55 94             	mov    -0x6c(%rbp),%edx
  43e521:	c1 ea 1b             	shr    $0x1b,%edx
  43e524:	09 d1                	or     %edx,%ecx
  43e526:	8b 55 9c             	mov    -0x64(%rbp),%edx
  43e529:	8b 75 90             	mov    -0x70(%rbp),%esi
  43e52c:	8b 7d 8c             	mov    -0x74(%rbp),%edi
  43e52f:	33 7d 9c             	xor    -0x64(%rbp),%edi
  43e532:	21 fe                	and    %edi,%esi
  43e534:	31 f2                	xor    %esi,%edx
  43e536:	01 d1                	add    %edx,%ecx
  43e538:	81 c1 99 79 82 5a    	add    $0x5a827999,%ecx
  43e53e:	8b 55 dc             	mov    -0x24(%rbp),%edx
  43e541:	33 55 c8             	xor    -0x38(%rbp),%edx
  43e544:	33 55 b0             	xor    -0x50(%rbp),%edx
  43e547:	33 55 a8             	xor    -0x58(%rbp),%edx
  43e54a:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43e54d:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43e550:	c1 e2 01             	shl    $0x1,%edx
  43e553:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43e556:	c1 ee 1f             	shr    $0x1f,%esi
  43e559:	09 f2                	or     %esi,%edx
  43e55b:	89 55 a8             	mov    %edx,-0x58(%rbp)
  43e55e:	01 d1                	add    %edx,%ecx
  43e560:	03 4d 98             	add    -0x68(%rbp),%ecx
  43e563:	89 4d 98             	mov    %ecx,-0x68(%rbp)
  43e566:	8b 4d 90             	mov    -0x70(%rbp),%ecx
  43e569:	c1 e1 1e             	shl    $0x1e,%ecx
  43e56c:	8b 55 90             	mov    -0x70(%rbp),%edx
  43e56f:	c1 ea 02             	shr    $0x2,%edx
  43e572:	09 d1                	or     %edx,%ecx
  43e574:	89 4d 90             	mov    %ecx,-0x70(%rbp)
  43e577:	8b 4d 98             	mov    -0x68(%rbp),%ecx
  43e57a:	c1 e1 05             	shl    $0x5,%ecx
  43e57d:	8b 55 98             	mov    -0x68(%rbp),%edx
  43e580:	c1 ea 1b             	shr    $0x1b,%edx
  43e583:	09 d1                	or     %edx,%ecx
  43e585:	8b 55 8c             	mov    -0x74(%rbp),%edx
  43e588:	8b 75 94             	mov    -0x6c(%rbp),%esi
  43e58b:	8b 7d 90             	mov    -0x70(%rbp),%edi
  43e58e:	33 7d 8c             	xor    -0x74(%rbp),%edi
  43e591:	21 fe                	and    %edi,%esi
  43e593:	31 f2                	xor    %esi,%edx
  43e595:	01 d1                	add    %edx,%ecx
  43e597:	81 c1 99 79 82 5a    	add    $0x5a827999,%ecx
  43e59d:	8b 55 a0             	mov    -0x60(%rbp),%edx
  43e5a0:	33 55 cc             	xor    -0x34(%rbp),%edx
  43e5a3:	33 55 b4             	xor    -0x4c(%rbp),%edx
  43e5a6:	33 55 ac             	xor    -0x54(%rbp),%edx
  43e5a9:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43e5ac:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43e5af:	c1 e2 01             	shl    $0x1,%edx
  43e5b2:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43e5b5:	c1 ee 1f             	shr    $0x1f,%esi
  43e5b8:	09 f2                	or     %esi,%edx
  43e5ba:	89 55 ac             	mov    %edx,-0x54(%rbp)
  43e5bd:	01 d1                	add    %edx,%ecx
  43e5bf:	03 4d 9c             	add    -0x64(%rbp),%ecx
  43e5c2:	89 4d 9c             	mov    %ecx,-0x64(%rbp)
  43e5c5:	8b 4d 94             	mov    -0x6c(%rbp),%ecx
  43e5c8:	c1 e1 1e             	shl    $0x1e,%ecx
  43e5cb:	8b 55 94             	mov    -0x6c(%rbp),%edx
  43e5ce:	c1 ea 02             	shr    $0x2,%edx
  43e5d1:	09 d1                	or     %edx,%ecx
  43e5d3:	89 4d 94             	mov    %ecx,-0x6c(%rbp)
  43e5d6:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
  43e5d9:	c1 e1 05             	shl    $0x5,%ecx
  43e5dc:	8b 55 9c             	mov    -0x64(%rbp),%edx
  43e5df:	c1 ea 1b             	shr    $0x1b,%edx
  43e5e2:	09 d1                	or     %edx,%ecx
  43e5e4:	8b 55 98             	mov    -0x68(%rbp),%edx
  43e5e7:	33 55 94             	xor    -0x6c(%rbp),%edx
  43e5ea:	33 55 90             	xor    -0x70(%rbp),%edx
  43e5ed:	01 d1                	add    %edx,%ecx
  43e5ef:	81 c1 a1 eb d9 6e    	add    $0x6ed9eba1,%ecx
  43e5f5:	8b 55 a4             	mov    -0x5c(%rbp),%edx
  43e5f8:	33 55 d0             	xor    -0x30(%rbp),%edx
  43e5fb:	33 55 b8             	xor    -0x48(%rbp),%edx
  43e5fe:	33 55 b0             	xor    -0x50(%rbp),%edx
  43e601:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43e604:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43e607:	c1 e2 01             	shl    $0x1,%edx
  43e60a:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43e60d:	c1 ee 1f             	shr    $0x1f,%esi
  43e610:	09 f2                	or     %esi,%edx
  43e612:	89 55 b0             	mov    %edx,-0x50(%rbp)
  43e615:	01 d1                	add    %edx,%ecx
  43e617:	03 4d 8c             	add    -0x74(%rbp),%ecx
  43e61a:	89 4d 8c             	mov    %ecx,-0x74(%rbp)
  43e61d:	8b 4d 98             	mov    -0x68(%rbp),%ecx
  43e620:	c1 e1 1e             	shl    $0x1e,%ecx
  43e623:	8b 55 98             	mov    -0x68(%rbp),%edx
  43e626:	c1 ea 02             	shr    $0x2,%edx
  43e629:	09 d1                	or     %edx,%ecx
  43e62b:	89 4d 98             	mov    %ecx,-0x68(%rbp)
  43e62e:	8b 4d 8c             	mov    -0x74(%rbp),%ecx
  43e631:	c1 e1 05             	shl    $0x5,%ecx
  43e634:	8b 55 8c             	mov    -0x74(%rbp),%edx
  43e637:	c1 ea 1b             	shr    $0x1b,%edx
  43e63a:	09 d1                	or     %edx,%ecx
  43e63c:	8b 55 9c             	mov    -0x64(%rbp),%edx
  43e63f:	33 55 98             	xor    -0x68(%rbp),%edx
  43e642:	33 55 94             	xor    -0x6c(%rbp),%edx
  43e645:	01 d1                	add    %edx,%ecx
  43e647:	81 c1 a1 eb d9 6e    	add    $0x6ed9eba1,%ecx
  43e64d:	8b 55 a8             	mov    -0x58(%rbp),%edx
  43e650:	33 55 d4             	xor    -0x2c(%rbp),%edx
  43e653:	33 55 bc             	xor    -0x44(%rbp),%edx
  43e656:	33 55 b4             	xor    -0x4c(%rbp),%edx
  43e659:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43e65c:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43e65f:	c1 e2 01             	shl    $0x1,%edx
  43e662:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43e665:	c1 ee 1f             	shr    $0x1f,%esi
  43e668:	09 f2                	or     %esi,%edx
  43e66a:	89 55 b4             	mov    %edx,-0x4c(%rbp)
  43e66d:	01 d1                	add    %edx,%ecx
  43e66f:	03 4d 90             	add    -0x70(%rbp),%ecx
  43e672:	89 4d 90             	mov    %ecx,-0x70(%rbp)
  43e675:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
  43e678:	c1 e1 1e             	shl    $0x1e,%ecx
  43e67b:	8b 55 9c             	mov    -0x64(%rbp),%edx
  43e67e:	c1 ea 02             	shr    $0x2,%edx
  43e681:	09 d1                	or     %edx,%ecx
  43e683:	89 4d 9c             	mov    %ecx,-0x64(%rbp)
  43e686:	8b 4d 90             	mov    -0x70(%rbp),%ecx
  43e689:	c1 e1 05             	shl    $0x5,%ecx
  43e68c:	8b 55 90             	mov    -0x70(%rbp),%edx
  43e68f:	c1 ea 1b             	shr    $0x1b,%edx
  43e692:	09 d1                	or     %edx,%ecx
  43e694:	8b 55 8c             	mov    -0x74(%rbp),%edx
  43e697:	33 55 9c             	xor    -0x64(%rbp),%edx
  43e69a:	33 55 98             	xor    -0x68(%rbp),%edx
  43e69d:	01 d1                	add    %edx,%ecx
  43e69f:	81 c1 a1 eb d9 6e    	add    $0x6ed9eba1,%ecx
  43e6a5:	8b 55 ac             	mov    -0x54(%rbp),%edx
  43e6a8:	33 55 d8             	xor    -0x28(%rbp),%edx
  43e6ab:	33 55 c0             	xor    -0x40(%rbp),%edx
  43e6ae:	33 55 b8             	xor    -0x48(%rbp),%edx
  43e6b1:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43e6b4:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43e6b7:	c1 e2 01             	shl    $0x1,%edx
  43e6ba:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43e6bd:	c1 ee 1f             	shr    $0x1f,%esi
  43e6c0:	09 f2                	or     %esi,%edx
  43e6c2:	89 55 b8             	mov    %edx,-0x48(%rbp)
  43e6c5:	01 d1                	add    %edx,%ecx
  43e6c7:	03 4d 94             	add    -0x6c(%rbp),%ecx
  43e6ca:	89 4d 94             	mov    %ecx,-0x6c(%rbp)
  43e6cd:	8b 4d 8c             	mov    -0x74(%rbp),%ecx
  43e6d0:	c1 e1 1e             	shl    $0x1e,%ecx
  43e6d3:	8b 55 8c             	mov    -0x74(%rbp),%edx
  43e6d6:	c1 ea 02             	shr    $0x2,%edx
  43e6d9:	09 d1                	or     %edx,%ecx
  43e6db:	89 4d 8c             	mov    %ecx,-0x74(%rbp)
  43e6de:	8b 4d 94             	mov    -0x6c(%rbp),%ecx
  43e6e1:	c1 e1 05             	shl    $0x5,%ecx
  43e6e4:	8b 55 94             	mov    -0x6c(%rbp),%edx
  43e6e7:	c1 ea 1b             	shr    $0x1b,%edx
  43e6ea:	09 d1                	or     %edx,%ecx
  43e6ec:	8b 55 90             	mov    -0x70(%rbp),%edx
  43e6ef:	33 55 8c             	xor    -0x74(%rbp),%edx
  43e6f2:	33 55 9c             	xor    -0x64(%rbp),%edx
  43e6f5:	01 d1                	add    %edx,%ecx
  43e6f7:	81 c1 a1 eb d9 6e    	add    $0x6ed9eba1,%ecx
  43e6fd:	8b 55 b0             	mov    -0x50(%rbp),%edx
  43e700:	33 55 dc             	xor    -0x24(%rbp),%edx
  43e703:	33 55 c4             	xor    -0x3c(%rbp),%edx
  43e706:	33 55 bc             	xor    -0x44(%rbp),%edx
  43e709:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43e70c:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43e70f:	c1 e2 01             	shl    $0x1,%edx
  43e712:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43e715:	c1 ee 1f             	shr    $0x1f,%esi
  43e718:	09 f2                	or     %esi,%edx
  43e71a:	89 55 bc             	mov    %edx,-0x44(%rbp)
  43e71d:	01 d1                	add    %edx,%ecx
  43e71f:	03 4d 98             	add    -0x68(%rbp),%ecx
  43e722:	89 4d 98             	mov    %ecx,-0x68(%rbp)
  43e725:	8b 4d 90             	mov    -0x70(%rbp),%ecx
  43e728:	c1 e1 1e             	shl    $0x1e,%ecx
  43e72b:	8b 55 90             	mov    -0x70(%rbp),%edx
  43e72e:	c1 ea 02             	shr    $0x2,%edx
  43e731:	09 d1                	or     %edx,%ecx
  43e733:	89 4d 90             	mov    %ecx,-0x70(%rbp)
  43e736:	8b 4d 98             	mov    -0x68(%rbp),%ecx
  43e739:	c1 e1 05             	shl    $0x5,%ecx
  43e73c:	8b 55 98             	mov    -0x68(%rbp),%edx
  43e73f:	c1 ea 1b             	shr    $0x1b,%edx
  43e742:	09 d1                	or     %edx,%ecx
  43e744:	8b 55 94             	mov    -0x6c(%rbp),%edx
  43e747:	33 55 90             	xor    -0x70(%rbp),%edx
  43e74a:	33 55 8c             	xor    -0x74(%rbp),%edx
  43e74d:	01 d1                	add    %edx,%ecx
  43e74f:	81 c1 a1 eb d9 6e    	add    $0x6ed9eba1,%ecx
  43e755:	8b 55 b4             	mov    -0x4c(%rbp),%edx
  43e758:	33 55 a0             	xor    -0x60(%rbp),%edx
  43e75b:	33 55 c8             	xor    -0x38(%rbp),%edx
  43e75e:	33 55 c0             	xor    -0x40(%rbp),%edx
  43e761:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43e764:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43e767:	c1 e2 01             	shl    $0x1,%edx
  43e76a:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43e76d:	c1 ee 1f             	shr    $0x1f,%esi
  43e770:	09 f2                	or     %esi,%edx
  43e772:	89 55 c0             	mov    %edx,-0x40(%rbp)
  43e775:	01 d1                	add    %edx,%ecx
  43e777:	03 4d 9c             	add    -0x64(%rbp),%ecx
  43e77a:	89 4d 9c             	mov    %ecx,-0x64(%rbp)
  43e77d:	8b 4d 94             	mov    -0x6c(%rbp),%ecx
  43e780:	c1 e1 1e             	shl    $0x1e,%ecx
  43e783:	8b 55 94             	mov    -0x6c(%rbp),%edx
  43e786:	c1 ea 02             	shr    $0x2,%edx
  43e789:	09 d1                	or     %edx,%ecx
  43e78b:	89 4d 94             	mov    %ecx,-0x6c(%rbp)
  43e78e:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
  43e791:	c1 e1 05             	shl    $0x5,%ecx
  43e794:	8b 55 9c             	mov    -0x64(%rbp),%edx
  43e797:	c1 ea 1b             	shr    $0x1b,%edx
  43e79a:	09 d1                	or     %edx,%ecx
  43e79c:	8b 55 98             	mov    -0x68(%rbp),%edx
  43e79f:	33 55 94             	xor    -0x6c(%rbp),%edx
  43e7a2:	33 55 90             	xor    -0x70(%rbp),%edx
  43e7a5:	01 d1                	add    %edx,%ecx
  43e7a7:	81 c1 a1 eb d9 6e    	add    $0x6ed9eba1,%ecx
  43e7ad:	8b 55 b8             	mov    -0x48(%rbp),%edx
  43e7b0:	33 55 a4             	xor    -0x5c(%rbp),%edx
  43e7b3:	33 55 cc             	xor    -0x34(%rbp),%edx
  43e7b6:	33 55 c4             	xor    -0x3c(%rbp),%edx
  43e7b9:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43e7bc:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43e7bf:	c1 e2 01             	shl    $0x1,%edx
  43e7c2:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43e7c5:	c1 ee 1f             	shr    $0x1f,%esi
  43e7c8:	09 f2                	or     %esi,%edx
  43e7ca:	89 55 c4             	mov    %edx,-0x3c(%rbp)
  43e7cd:	01 d1                	add    %edx,%ecx
  43e7cf:	03 4d 8c             	add    -0x74(%rbp),%ecx
  43e7d2:	89 4d 8c             	mov    %ecx,-0x74(%rbp)
  43e7d5:	8b 4d 98             	mov    -0x68(%rbp),%ecx
  43e7d8:	c1 e1 1e             	shl    $0x1e,%ecx
  43e7db:	8b 55 98             	mov    -0x68(%rbp),%edx
  43e7de:	c1 ea 02             	shr    $0x2,%edx
  43e7e1:	09 d1                	or     %edx,%ecx
  43e7e3:	89 4d 98             	mov    %ecx,-0x68(%rbp)
  43e7e6:	8b 4d 8c             	mov    -0x74(%rbp),%ecx
  43e7e9:	c1 e1 05             	shl    $0x5,%ecx
  43e7ec:	8b 55 8c             	mov    -0x74(%rbp),%edx
  43e7ef:	c1 ea 1b             	shr    $0x1b,%edx
  43e7f2:	09 d1                	or     %edx,%ecx
  43e7f4:	8b 55 9c             	mov    -0x64(%rbp),%edx
  43e7f7:	33 55 98             	xor    -0x68(%rbp),%edx
  43e7fa:	33 55 94             	xor    -0x6c(%rbp),%edx
  43e7fd:	01 d1                	add    %edx,%ecx
  43e7ff:	81 c1 a1 eb d9 6e    	add    $0x6ed9eba1,%ecx
  43e805:	8b 55 bc             	mov    -0x44(%rbp),%edx
  43e808:	33 55 a8             	xor    -0x58(%rbp),%edx
  43e80b:	33 55 d0             	xor    -0x30(%rbp),%edx
  43e80e:	33 55 c8             	xor    -0x38(%rbp),%edx
  43e811:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43e814:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43e817:	c1 e2 01             	shl    $0x1,%edx
  43e81a:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43e81d:	c1 ee 1f             	shr    $0x1f,%esi
  43e820:	09 f2                	or     %esi,%edx
  43e822:	89 55 c8             	mov    %edx,-0x38(%rbp)
  43e825:	01 d1                	add    %edx,%ecx
  43e827:	03 4d 90             	add    -0x70(%rbp),%ecx
  43e82a:	89 4d 90             	mov    %ecx,-0x70(%rbp)
  43e82d:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
  43e830:	c1 e1 1e             	shl    $0x1e,%ecx
  43e833:	8b 55 9c             	mov    -0x64(%rbp),%edx
  43e836:	c1 ea 02             	shr    $0x2,%edx
  43e839:	09 d1                	or     %edx,%ecx
  43e83b:	89 4d 9c             	mov    %ecx,-0x64(%rbp)
  43e83e:	8b 4d 90             	mov    -0x70(%rbp),%ecx
  43e841:	c1 e1 05             	shl    $0x5,%ecx
  43e844:	8b 55 90             	mov    -0x70(%rbp),%edx
  43e847:	c1 ea 1b             	shr    $0x1b,%edx
  43e84a:	09 d1                	or     %edx,%ecx
  43e84c:	8b 55 8c             	mov    -0x74(%rbp),%edx
  43e84f:	33 55 9c             	xor    -0x64(%rbp),%edx
  43e852:	33 55 98             	xor    -0x68(%rbp),%edx
  43e855:	01 d1                	add    %edx,%ecx
  43e857:	81 c1 a1 eb d9 6e    	add    $0x6ed9eba1,%ecx
  43e85d:	8b 55 c0             	mov    -0x40(%rbp),%edx
  43e860:	33 55 ac             	xor    -0x54(%rbp),%edx
  43e863:	33 55 d4             	xor    -0x2c(%rbp),%edx
  43e866:	33 55 cc             	xor    -0x34(%rbp),%edx
  43e869:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43e86c:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43e86f:	c1 e2 01             	shl    $0x1,%edx
  43e872:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43e875:	c1 ee 1f             	shr    $0x1f,%esi
  43e878:	09 f2                	or     %esi,%edx
  43e87a:	89 55 cc             	mov    %edx,-0x34(%rbp)
  43e87d:	01 d1                	add    %edx,%ecx
  43e87f:	03 4d 94             	add    -0x6c(%rbp),%ecx
  43e882:	89 4d 94             	mov    %ecx,-0x6c(%rbp)
  43e885:	8b 4d 8c             	mov    -0x74(%rbp),%ecx
  43e888:	c1 e1 1e             	shl    $0x1e,%ecx
  43e88b:	8b 55 8c             	mov    -0x74(%rbp),%edx
  43e88e:	c1 ea 02             	shr    $0x2,%edx
  43e891:	09 d1                	or     %edx,%ecx
  43e893:	89 4d 8c             	mov    %ecx,-0x74(%rbp)
  43e896:	8b 4d 94             	mov    -0x6c(%rbp),%ecx
  43e899:	c1 e1 05             	shl    $0x5,%ecx
  43e89c:	8b 55 94             	mov    -0x6c(%rbp),%edx
  43e89f:	c1 ea 1b             	shr    $0x1b,%edx
  43e8a2:	09 d1                	or     %edx,%ecx
  43e8a4:	8b 55 90             	mov    -0x70(%rbp),%edx
  43e8a7:	33 55 8c             	xor    -0x74(%rbp),%edx
  43e8aa:	33 55 9c             	xor    -0x64(%rbp),%edx
  43e8ad:	01 d1                	add    %edx,%ecx
  43e8af:	81 c1 a1 eb d9 6e    	add    $0x6ed9eba1,%ecx
  43e8b5:	8b 55 c4             	mov    -0x3c(%rbp),%edx
  43e8b8:	33 55 b0             	xor    -0x50(%rbp),%edx
  43e8bb:	33 55 d8             	xor    -0x28(%rbp),%edx
  43e8be:	33 55 d0             	xor    -0x30(%rbp),%edx
  43e8c1:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43e8c4:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43e8c7:	c1 e2 01             	shl    $0x1,%edx
  43e8ca:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43e8cd:	c1 ee 1f             	shr    $0x1f,%esi
  43e8d0:	09 f2                	or     %esi,%edx
  43e8d2:	89 55 d0             	mov    %edx,-0x30(%rbp)
  43e8d5:	01 d1                	add    %edx,%ecx
  43e8d7:	03 4d 98             	add    -0x68(%rbp),%ecx
  43e8da:	89 4d 98             	mov    %ecx,-0x68(%rbp)
  43e8dd:	8b 4d 90             	mov    -0x70(%rbp),%ecx
  43e8e0:	c1 e1 1e             	shl    $0x1e,%ecx
  43e8e3:	8b 55 90             	mov    -0x70(%rbp),%edx
  43e8e6:	c1 ea 02             	shr    $0x2,%edx
  43e8e9:	09 d1                	or     %edx,%ecx
  43e8eb:	89 4d 90             	mov    %ecx,-0x70(%rbp)
  43e8ee:	8b 4d 98             	mov    -0x68(%rbp),%ecx
  43e8f1:	c1 e1 05             	shl    $0x5,%ecx
  43e8f4:	8b 55 98             	mov    -0x68(%rbp),%edx
  43e8f7:	c1 ea 1b             	shr    $0x1b,%edx
  43e8fa:	09 d1                	or     %edx,%ecx
  43e8fc:	8b 55 94             	mov    -0x6c(%rbp),%edx
  43e8ff:	33 55 90             	xor    -0x70(%rbp),%edx
  43e902:	33 55 8c             	xor    -0x74(%rbp),%edx
  43e905:	01 d1                	add    %edx,%ecx
  43e907:	81 c1 a1 eb d9 6e    	add    $0x6ed9eba1,%ecx
  43e90d:	8b 55 c8             	mov    -0x38(%rbp),%edx
  43e910:	33 55 b4             	xor    -0x4c(%rbp),%edx
  43e913:	33 55 dc             	xor    -0x24(%rbp),%edx
  43e916:	33 55 d4             	xor    -0x2c(%rbp),%edx
  43e919:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43e91c:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43e91f:	c1 e2 01             	shl    $0x1,%edx
  43e922:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43e925:	c1 ee 1f             	shr    $0x1f,%esi
  43e928:	09 f2                	or     %esi,%edx
  43e92a:	89 55 d4             	mov    %edx,-0x2c(%rbp)
  43e92d:	01 d1                	add    %edx,%ecx
  43e92f:	03 4d 9c             	add    -0x64(%rbp),%ecx
  43e932:	89 4d 9c             	mov    %ecx,-0x64(%rbp)
  43e935:	8b 4d 94             	mov    -0x6c(%rbp),%ecx
  43e938:	c1 e1 1e             	shl    $0x1e,%ecx
  43e93b:	8b 55 94             	mov    -0x6c(%rbp),%edx
  43e93e:	c1 ea 02             	shr    $0x2,%edx
  43e941:	09 d1                	or     %edx,%ecx
  43e943:	89 4d 94             	mov    %ecx,-0x6c(%rbp)
  43e946:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
  43e949:	c1 e1 05             	shl    $0x5,%ecx
  43e94c:	8b 55 9c             	mov    -0x64(%rbp),%edx
  43e94f:	c1 ea 1b             	shr    $0x1b,%edx
  43e952:	09 d1                	or     %edx,%ecx
  43e954:	8b 55 98             	mov    -0x68(%rbp),%edx
  43e957:	33 55 94             	xor    -0x6c(%rbp),%edx
  43e95a:	33 55 90             	xor    -0x70(%rbp),%edx
  43e95d:	01 d1                	add    %edx,%ecx
  43e95f:	81 c1 a1 eb d9 6e    	add    $0x6ed9eba1,%ecx
  43e965:	8b 55 cc             	mov    -0x34(%rbp),%edx
  43e968:	33 55 b8             	xor    -0x48(%rbp),%edx
  43e96b:	33 55 a0             	xor    -0x60(%rbp),%edx
  43e96e:	33 55 d8             	xor    -0x28(%rbp),%edx
  43e971:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43e974:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43e977:	c1 e2 01             	shl    $0x1,%edx
  43e97a:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43e97d:	c1 ee 1f             	shr    $0x1f,%esi
  43e980:	09 f2                	or     %esi,%edx
  43e982:	89 55 d8             	mov    %edx,-0x28(%rbp)
  43e985:	01 d1                	add    %edx,%ecx
  43e987:	03 4d 8c             	add    -0x74(%rbp),%ecx
  43e98a:	89 4d 8c             	mov    %ecx,-0x74(%rbp)
  43e98d:	8b 4d 98             	mov    -0x68(%rbp),%ecx
  43e990:	c1 e1 1e             	shl    $0x1e,%ecx
  43e993:	8b 55 98             	mov    -0x68(%rbp),%edx
  43e996:	c1 ea 02             	shr    $0x2,%edx
  43e999:	09 d1                	or     %edx,%ecx
  43e99b:	89 4d 98             	mov    %ecx,-0x68(%rbp)
  43e99e:	8b 4d 8c             	mov    -0x74(%rbp),%ecx
  43e9a1:	c1 e1 05             	shl    $0x5,%ecx
  43e9a4:	8b 55 8c             	mov    -0x74(%rbp),%edx
  43e9a7:	c1 ea 1b             	shr    $0x1b,%edx
  43e9aa:	09 d1                	or     %edx,%ecx
  43e9ac:	8b 55 9c             	mov    -0x64(%rbp),%edx
  43e9af:	33 55 98             	xor    -0x68(%rbp),%edx
  43e9b2:	33 55 94             	xor    -0x6c(%rbp),%edx
  43e9b5:	01 d1                	add    %edx,%ecx
  43e9b7:	81 c1 a1 eb d9 6e    	add    $0x6ed9eba1,%ecx
  43e9bd:	8b 55 d0             	mov    -0x30(%rbp),%edx
  43e9c0:	33 55 bc             	xor    -0x44(%rbp),%edx
  43e9c3:	33 55 a4             	xor    -0x5c(%rbp),%edx
  43e9c6:	33 55 dc             	xor    -0x24(%rbp),%edx
  43e9c9:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43e9cc:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43e9cf:	c1 e2 01             	shl    $0x1,%edx
  43e9d2:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43e9d5:	c1 ee 1f             	shr    $0x1f,%esi
  43e9d8:	09 f2                	or     %esi,%edx
  43e9da:	89 55 dc             	mov    %edx,-0x24(%rbp)
  43e9dd:	01 d1                	add    %edx,%ecx
  43e9df:	03 4d 90             	add    -0x70(%rbp),%ecx
  43e9e2:	89 4d 90             	mov    %ecx,-0x70(%rbp)
  43e9e5:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
  43e9e8:	c1 e1 1e             	shl    $0x1e,%ecx
  43e9eb:	8b 55 9c             	mov    -0x64(%rbp),%edx
  43e9ee:	c1 ea 02             	shr    $0x2,%edx
  43e9f1:	09 d1                	or     %edx,%ecx
  43e9f3:	89 4d 9c             	mov    %ecx,-0x64(%rbp)
  43e9f6:	8b 4d 90             	mov    -0x70(%rbp),%ecx
  43e9f9:	c1 e1 05             	shl    $0x5,%ecx
  43e9fc:	8b 55 90             	mov    -0x70(%rbp),%edx
  43e9ff:	c1 ea 1b             	shr    $0x1b,%edx
  43ea02:	09 d1                	or     %edx,%ecx
  43ea04:	8b 55 8c             	mov    -0x74(%rbp),%edx
  43ea07:	33 55 9c             	xor    -0x64(%rbp),%edx
  43ea0a:	33 55 98             	xor    -0x68(%rbp),%edx
  43ea0d:	01 d1                	add    %edx,%ecx
  43ea0f:	81 c1 a1 eb d9 6e    	add    $0x6ed9eba1,%ecx
  43ea15:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  43ea18:	33 55 c0             	xor    -0x40(%rbp),%edx
  43ea1b:	33 55 a8             	xor    -0x58(%rbp),%edx
  43ea1e:	33 55 a0             	xor    -0x60(%rbp),%edx
  43ea21:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43ea24:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43ea27:	c1 e2 01             	shl    $0x1,%edx
  43ea2a:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43ea2d:	c1 ee 1f             	shr    $0x1f,%esi
  43ea30:	09 f2                	or     %esi,%edx
  43ea32:	89 55 a0             	mov    %edx,-0x60(%rbp)
  43ea35:	01 d1                	add    %edx,%ecx
  43ea37:	03 4d 94             	add    -0x6c(%rbp),%ecx
  43ea3a:	89 4d 94             	mov    %ecx,-0x6c(%rbp)
  43ea3d:	8b 4d 8c             	mov    -0x74(%rbp),%ecx
  43ea40:	c1 e1 1e             	shl    $0x1e,%ecx
  43ea43:	8b 55 8c             	mov    -0x74(%rbp),%edx
  43ea46:	c1 ea 02             	shr    $0x2,%edx
  43ea49:	09 d1                	or     %edx,%ecx
  43ea4b:	89 4d 8c             	mov    %ecx,-0x74(%rbp)
  43ea4e:	8b 4d 94             	mov    -0x6c(%rbp),%ecx
  43ea51:	c1 e1 05             	shl    $0x5,%ecx
  43ea54:	8b 55 94             	mov    -0x6c(%rbp),%edx
  43ea57:	c1 ea 1b             	shr    $0x1b,%edx
  43ea5a:	09 d1                	or     %edx,%ecx
  43ea5c:	8b 55 90             	mov    -0x70(%rbp),%edx
  43ea5f:	33 55 8c             	xor    -0x74(%rbp),%edx
  43ea62:	33 55 9c             	xor    -0x64(%rbp),%edx
  43ea65:	01 d1                	add    %edx,%ecx
  43ea67:	81 c1 a1 eb d9 6e    	add    $0x6ed9eba1,%ecx
  43ea6d:	8b 55 d8             	mov    -0x28(%rbp),%edx
  43ea70:	33 55 c4             	xor    -0x3c(%rbp),%edx
  43ea73:	33 55 ac             	xor    -0x54(%rbp),%edx
  43ea76:	33 55 a4             	xor    -0x5c(%rbp),%edx
  43ea79:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43ea7c:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43ea7f:	c1 e2 01             	shl    $0x1,%edx
  43ea82:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43ea85:	c1 ee 1f             	shr    $0x1f,%esi
  43ea88:	09 f2                	or     %esi,%edx
  43ea8a:	89 55 a4             	mov    %edx,-0x5c(%rbp)
  43ea8d:	01 d1                	add    %edx,%ecx
  43ea8f:	03 4d 98             	add    -0x68(%rbp),%ecx
  43ea92:	89 4d 98             	mov    %ecx,-0x68(%rbp)
  43ea95:	8b 4d 90             	mov    -0x70(%rbp),%ecx
  43ea98:	c1 e1 1e             	shl    $0x1e,%ecx
  43ea9b:	8b 55 90             	mov    -0x70(%rbp),%edx
  43ea9e:	c1 ea 02             	shr    $0x2,%edx
  43eaa1:	09 d1                	or     %edx,%ecx
  43eaa3:	89 4d 90             	mov    %ecx,-0x70(%rbp)
  43eaa6:	8b 4d 98             	mov    -0x68(%rbp),%ecx
  43eaa9:	c1 e1 05             	shl    $0x5,%ecx
  43eaac:	8b 55 98             	mov    -0x68(%rbp),%edx
  43eaaf:	c1 ea 1b             	shr    $0x1b,%edx
  43eab2:	09 d1                	or     %edx,%ecx
  43eab4:	8b 55 94             	mov    -0x6c(%rbp),%edx
  43eab7:	33 55 90             	xor    -0x70(%rbp),%edx
  43eaba:	33 55 8c             	xor    -0x74(%rbp),%edx
  43eabd:	01 d1                	add    %edx,%ecx
  43eabf:	81 c1 a1 eb d9 6e    	add    $0x6ed9eba1,%ecx
  43eac5:	8b 55 dc             	mov    -0x24(%rbp),%edx
  43eac8:	33 55 c8             	xor    -0x38(%rbp),%edx
  43eacb:	33 55 b0             	xor    -0x50(%rbp),%edx
  43eace:	33 55 a8             	xor    -0x58(%rbp),%edx
  43ead1:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43ead4:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43ead7:	c1 e2 01             	shl    $0x1,%edx
  43eada:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43eadd:	c1 ee 1f             	shr    $0x1f,%esi
  43eae0:	09 f2                	or     %esi,%edx
  43eae2:	89 55 a8             	mov    %edx,-0x58(%rbp)
  43eae5:	01 d1                	add    %edx,%ecx
  43eae7:	03 4d 9c             	add    -0x64(%rbp),%ecx
  43eaea:	89 4d 9c             	mov    %ecx,-0x64(%rbp)
  43eaed:	8b 4d 94             	mov    -0x6c(%rbp),%ecx
  43eaf0:	c1 e1 1e             	shl    $0x1e,%ecx
  43eaf3:	8b 55 94             	mov    -0x6c(%rbp),%edx
  43eaf6:	c1 ea 02             	shr    $0x2,%edx
  43eaf9:	09 d1                	or     %edx,%ecx
  43eafb:	89 4d 94             	mov    %ecx,-0x6c(%rbp)
  43eafe:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
  43eb01:	c1 e1 05             	shl    $0x5,%ecx
  43eb04:	8b 55 9c             	mov    -0x64(%rbp),%edx
  43eb07:	c1 ea 1b             	shr    $0x1b,%edx
  43eb0a:	09 d1                	or     %edx,%ecx
  43eb0c:	8b 55 98             	mov    -0x68(%rbp),%edx
  43eb0f:	33 55 94             	xor    -0x6c(%rbp),%edx
  43eb12:	33 55 90             	xor    -0x70(%rbp),%edx
  43eb15:	01 d1                	add    %edx,%ecx
  43eb17:	81 c1 a1 eb d9 6e    	add    $0x6ed9eba1,%ecx
  43eb1d:	8b 55 a0             	mov    -0x60(%rbp),%edx
  43eb20:	33 55 cc             	xor    -0x34(%rbp),%edx
  43eb23:	33 55 b4             	xor    -0x4c(%rbp),%edx
  43eb26:	33 55 ac             	xor    -0x54(%rbp),%edx
  43eb29:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43eb2c:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43eb2f:	c1 e2 01             	shl    $0x1,%edx
  43eb32:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43eb35:	c1 ee 1f             	shr    $0x1f,%esi
  43eb38:	09 f2                	or     %esi,%edx
  43eb3a:	89 55 ac             	mov    %edx,-0x54(%rbp)
  43eb3d:	01 d1                	add    %edx,%ecx
  43eb3f:	03 4d 8c             	add    -0x74(%rbp),%ecx
  43eb42:	89 4d 8c             	mov    %ecx,-0x74(%rbp)
  43eb45:	8b 4d 98             	mov    -0x68(%rbp),%ecx
  43eb48:	c1 e1 1e             	shl    $0x1e,%ecx
  43eb4b:	8b 55 98             	mov    -0x68(%rbp),%edx
  43eb4e:	c1 ea 02             	shr    $0x2,%edx
  43eb51:	09 d1                	or     %edx,%ecx
  43eb53:	89 4d 98             	mov    %ecx,-0x68(%rbp)
  43eb56:	8b 4d 8c             	mov    -0x74(%rbp),%ecx
  43eb59:	c1 e1 05             	shl    $0x5,%ecx
  43eb5c:	8b 55 8c             	mov    -0x74(%rbp),%edx
  43eb5f:	c1 ea 1b             	shr    $0x1b,%edx
  43eb62:	09 d1                	or     %edx,%ecx
  43eb64:	8b 55 9c             	mov    -0x64(%rbp),%edx
  43eb67:	33 55 98             	xor    -0x68(%rbp),%edx
  43eb6a:	33 55 94             	xor    -0x6c(%rbp),%edx
  43eb6d:	01 d1                	add    %edx,%ecx
  43eb6f:	81 c1 a1 eb d9 6e    	add    $0x6ed9eba1,%ecx
  43eb75:	8b 55 a4             	mov    -0x5c(%rbp),%edx
  43eb78:	33 55 d0             	xor    -0x30(%rbp),%edx
  43eb7b:	33 55 b8             	xor    -0x48(%rbp),%edx
  43eb7e:	33 55 b0             	xor    -0x50(%rbp),%edx
  43eb81:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43eb84:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43eb87:	c1 e2 01             	shl    $0x1,%edx
  43eb8a:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43eb8d:	c1 ee 1f             	shr    $0x1f,%esi
  43eb90:	09 f2                	or     %esi,%edx
  43eb92:	89 55 b0             	mov    %edx,-0x50(%rbp)
  43eb95:	01 d1                	add    %edx,%ecx
  43eb97:	03 4d 90             	add    -0x70(%rbp),%ecx
  43eb9a:	89 4d 90             	mov    %ecx,-0x70(%rbp)
  43eb9d:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
  43eba0:	c1 e1 1e             	shl    $0x1e,%ecx
  43eba3:	8b 55 9c             	mov    -0x64(%rbp),%edx
  43eba6:	c1 ea 02             	shr    $0x2,%edx
  43eba9:	09 d1                	or     %edx,%ecx
  43ebab:	89 4d 9c             	mov    %ecx,-0x64(%rbp)
  43ebae:	8b 4d 90             	mov    -0x70(%rbp),%ecx
  43ebb1:	c1 e1 05             	shl    $0x5,%ecx
  43ebb4:	8b 55 90             	mov    -0x70(%rbp),%edx
  43ebb7:	c1 ea 1b             	shr    $0x1b,%edx
  43ebba:	09 d1                	or     %edx,%ecx
  43ebbc:	8b 55 8c             	mov    -0x74(%rbp),%edx
  43ebbf:	33 55 9c             	xor    -0x64(%rbp),%edx
  43ebc2:	33 55 98             	xor    -0x68(%rbp),%edx
  43ebc5:	01 d1                	add    %edx,%ecx
  43ebc7:	81 c1 a1 eb d9 6e    	add    $0x6ed9eba1,%ecx
  43ebcd:	8b 55 a8             	mov    -0x58(%rbp),%edx
  43ebd0:	33 55 d4             	xor    -0x2c(%rbp),%edx
  43ebd3:	33 55 bc             	xor    -0x44(%rbp),%edx
  43ebd6:	33 55 b4             	xor    -0x4c(%rbp),%edx
  43ebd9:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43ebdc:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43ebdf:	c1 e2 01             	shl    $0x1,%edx
  43ebe2:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43ebe5:	c1 ee 1f             	shr    $0x1f,%esi
  43ebe8:	09 f2                	or     %esi,%edx
  43ebea:	89 55 b4             	mov    %edx,-0x4c(%rbp)
  43ebed:	01 d1                	add    %edx,%ecx
  43ebef:	03 4d 94             	add    -0x6c(%rbp),%ecx
  43ebf2:	89 4d 94             	mov    %ecx,-0x6c(%rbp)
  43ebf5:	8b 4d 8c             	mov    -0x74(%rbp),%ecx
  43ebf8:	c1 e1 1e             	shl    $0x1e,%ecx
  43ebfb:	8b 55 8c             	mov    -0x74(%rbp),%edx
  43ebfe:	c1 ea 02             	shr    $0x2,%edx
  43ec01:	09 d1                	or     %edx,%ecx
  43ec03:	89 4d 8c             	mov    %ecx,-0x74(%rbp)
  43ec06:	8b 4d 94             	mov    -0x6c(%rbp),%ecx
  43ec09:	c1 e1 05             	shl    $0x5,%ecx
  43ec0c:	8b 55 94             	mov    -0x6c(%rbp),%edx
  43ec0f:	c1 ea 1b             	shr    $0x1b,%edx
  43ec12:	09 d1                	or     %edx,%ecx
  43ec14:	8b 55 90             	mov    -0x70(%rbp),%edx
  43ec17:	33 55 8c             	xor    -0x74(%rbp),%edx
  43ec1a:	33 55 9c             	xor    -0x64(%rbp),%edx
  43ec1d:	01 d1                	add    %edx,%ecx
  43ec1f:	81 c1 a1 eb d9 6e    	add    $0x6ed9eba1,%ecx
  43ec25:	8b 55 ac             	mov    -0x54(%rbp),%edx
  43ec28:	33 55 d8             	xor    -0x28(%rbp),%edx
  43ec2b:	33 55 c0             	xor    -0x40(%rbp),%edx
  43ec2e:	33 55 b8             	xor    -0x48(%rbp),%edx
  43ec31:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43ec34:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43ec37:	c1 e2 01             	shl    $0x1,%edx
  43ec3a:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43ec3d:	c1 ee 1f             	shr    $0x1f,%esi
  43ec40:	09 f2                	or     %esi,%edx
  43ec42:	89 55 b8             	mov    %edx,-0x48(%rbp)
  43ec45:	01 d1                	add    %edx,%ecx
  43ec47:	03 4d 98             	add    -0x68(%rbp),%ecx
  43ec4a:	89 4d 98             	mov    %ecx,-0x68(%rbp)
  43ec4d:	8b 4d 90             	mov    -0x70(%rbp),%ecx
  43ec50:	c1 e1 1e             	shl    $0x1e,%ecx
  43ec53:	8b 55 90             	mov    -0x70(%rbp),%edx
  43ec56:	c1 ea 02             	shr    $0x2,%edx
  43ec59:	09 d1                	or     %edx,%ecx
  43ec5b:	89 4d 90             	mov    %ecx,-0x70(%rbp)
  43ec5e:	8b 4d 98             	mov    -0x68(%rbp),%ecx
  43ec61:	c1 e1 05             	shl    $0x5,%ecx
  43ec64:	8b 55 98             	mov    -0x68(%rbp),%edx
  43ec67:	c1 ea 1b             	shr    $0x1b,%edx
  43ec6a:	09 d1                	or     %edx,%ecx
  43ec6c:	8b 55 94             	mov    -0x6c(%rbp),%edx
  43ec6f:	33 55 90             	xor    -0x70(%rbp),%edx
  43ec72:	33 55 8c             	xor    -0x74(%rbp),%edx
  43ec75:	01 d1                	add    %edx,%ecx
  43ec77:	81 c1 a1 eb d9 6e    	add    $0x6ed9eba1,%ecx
  43ec7d:	8b 55 b0             	mov    -0x50(%rbp),%edx
  43ec80:	33 55 dc             	xor    -0x24(%rbp),%edx
  43ec83:	33 55 c4             	xor    -0x3c(%rbp),%edx
  43ec86:	33 55 bc             	xor    -0x44(%rbp),%edx
  43ec89:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43ec8c:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43ec8f:	c1 e2 01             	shl    $0x1,%edx
  43ec92:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43ec95:	c1 ee 1f             	shr    $0x1f,%esi
  43ec98:	09 f2                	or     %esi,%edx
  43ec9a:	89 55 bc             	mov    %edx,-0x44(%rbp)
  43ec9d:	01 d1                	add    %edx,%ecx
  43ec9f:	03 4d 9c             	add    -0x64(%rbp),%ecx
  43eca2:	89 4d 9c             	mov    %ecx,-0x64(%rbp)
  43eca5:	8b 4d 94             	mov    -0x6c(%rbp),%ecx
  43eca8:	c1 e1 1e             	shl    $0x1e,%ecx
  43ecab:	8b 55 94             	mov    -0x6c(%rbp),%edx
  43ecae:	c1 ea 02             	shr    $0x2,%edx
  43ecb1:	09 d1                	or     %edx,%ecx
  43ecb3:	89 4d 94             	mov    %ecx,-0x6c(%rbp)
  43ecb6:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
  43ecb9:	c1 e1 05             	shl    $0x5,%ecx
  43ecbc:	8b 55 9c             	mov    -0x64(%rbp),%edx
  43ecbf:	c1 ea 1b             	shr    $0x1b,%edx
  43ecc2:	09 d1                	or     %edx,%ecx
  43ecc4:	8b 55 98             	mov    -0x68(%rbp),%edx
  43ecc7:	23 55 94             	and    -0x6c(%rbp),%edx
  43ecca:	8b 75 90             	mov    -0x70(%rbp),%esi
  43eccd:	8b 7d 98             	mov    -0x68(%rbp),%edi
  43ecd0:	0b 7d 94             	or     -0x6c(%rbp),%edi
  43ecd3:	21 fe                	and    %edi,%esi
  43ecd5:	09 f2                	or     %esi,%edx
  43ecd7:	01 d1                	add    %edx,%ecx
  43ecd9:	81 c1 dc bc 1b 8f    	add    $0x8f1bbcdc,%ecx
  43ecdf:	8b 55 b4             	mov    -0x4c(%rbp),%edx
  43ece2:	33 55 a0             	xor    -0x60(%rbp),%edx
  43ece5:	33 55 c8             	xor    -0x38(%rbp),%edx
  43ece8:	33 55 c0             	xor    -0x40(%rbp),%edx
  43eceb:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43ecee:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43ecf1:	c1 e2 01             	shl    $0x1,%edx
  43ecf4:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43ecf7:	c1 ee 1f             	shr    $0x1f,%esi
  43ecfa:	09 f2                	or     %esi,%edx
  43ecfc:	89 55 c0             	mov    %edx,-0x40(%rbp)
  43ecff:	01 d1                	add    %edx,%ecx
  43ed01:	03 4d 8c             	add    -0x74(%rbp),%ecx
  43ed04:	89 4d 8c             	mov    %ecx,-0x74(%rbp)
  43ed07:	8b 4d 98             	mov    -0x68(%rbp),%ecx
  43ed0a:	c1 e1 1e             	shl    $0x1e,%ecx
  43ed0d:	8b 55 98             	mov    -0x68(%rbp),%edx
  43ed10:	c1 ea 02             	shr    $0x2,%edx
  43ed13:	09 d1                	or     %edx,%ecx
  43ed15:	89 4d 98             	mov    %ecx,-0x68(%rbp)
  43ed18:	8b 4d 8c             	mov    -0x74(%rbp),%ecx
  43ed1b:	c1 e1 05             	shl    $0x5,%ecx
  43ed1e:	8b 55 8c             	mov    -0x74(%rbp),%edx
  43ed21:	c1 ea 1b             	shr    $0x1b,%edx
  43ed24:	09 d1                	or     %edx,%ecx
  43ed26:	8b 55 9c             	mov    -0x64(%rbp),%edx
  43ed29:	23 55 98             	and    -0x68(%rbp),%edx
  43ed2c:	8b 75 94             	mov    -0x6c(%rbp),%esi
  43ed2f:	8b 7d 9c             	mov    -0x64(%rbp),%edi
  43ed32:	0b 7d 98             	or     -0x68(%rbp),%edi
  43ed35:	21 fe                	and    %edi,%esi
  43ed37:	09 f2                	or     %esi,%edx
  43ed39:	01 d1                	add    %edx,%ecx
  43ed3b:	81 c1 dc bc 1b 8f    	add    $0x8f1bbcdc,%ecx
  43ed41:	8b 55 b8             	mov    -0x48(%rbp),%edx
  43ed44:	33 55 a4             	xor    -0x5c(%rbp),%edx
  43ed47:	33 55 cc             	xor    -0x34(%rbp),%edx
  43ed4a:	33 55 c4             	xor    -0x3c(%rbp),%edx
  43ed4d:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43ed50:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43ed53:	c1 e2 01             	shl    $0x1,%edx
  43ed56:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43ed59:	c1 ee 1f             	shr    $0x1f,%esi
  43ed5c:	09 f2                	or     %esi,%edx
  43ed5e:	89 55 c4             	mov    %edx,-0x3c(%rbp)
  43ed61:	01 d1                	add    %edx,%ecx
  43ed63:	03 4d 90             	add    -0x70(%rbp),%ecx
  43ed66:	89 4d 90             	mov    %ecx,-0x70(%rbp)
  43ed69:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
  43ed6c:	c1 e1 1e             	shl    $0x1e,%ecx
  43ed6f:	8b 55 9c             	mov    -0x64(%rbp),%edx
  43ed72:	c1 ea 02             	shr    $0x2,%edx
  43ed75:	09 d1                	or     %edx,%ecx
  43ed77:	89 4d 9c             	mov    %ecx,-0x64(%rbp)
  43ed7a:	8b 4d 90             	mov    -0x70(%rbp),%ecx
  43ed7d:	c1 e1 05             	shl    $0x5,%ecx
  43ed80:	8b 55 90             	mov    -0x70(%rbp),%edx
  43ed83:	c1 ea 1b             	shr    $0x1b,%edx
  43ed86:	09 d1                	or     %edx,%ecx
  43ed88:	8b 55 8c             	mov    -0x74(%rbp),%edx
  43ed8b:	23 55 9c             	and    -0x64(%rbp),%edx
  43ed8e:	8b 75 98             	mov    -0x68(%rbp),%esi
  43ed91:	8b 7d 8c             	mov    -0x74(%rbp),%edi
  43ed94:	0b 7d 9c             	or     -0x64(%rbp),%edi
  43ed97:	21 fe                	and    %edi,%esi
  43ed99:	09 f2                	or     %esi,%edx
  43ed9b:	01 d1                	add    %edx,%ecx
  43ed9d:	81 c1 dc bc 1b 8f    	add    $0x8f1bbcdc,%ecx
  43eda3:	8b 55 bc             	mov    -0x44(%rbp),%edx
  43eda6:	33 55 a8             	xor    -0x58(%rbp),%edx
  43eda9:	33 55 d0             	xor    -0x30(%rbp),%edx
  43edac:	33 55 c8             	xor    -0x38(%rbp),%edx
  43edaf:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43edb2:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43edb5:	c1 e2 01             	shl    $0x1,%edx
  43edb8:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43edbb:	c1 ee 1f             	shr    $0x1f,%esi
  43edbe:	09 f2                	or     %esi,%edx
  43edc0:	89 55 c8             	mov    %edx,-0x38(%rbp)
  43edc3:	01 d1                	add    %edx,%ecx
  43edc5:	03 4d 94             	add    -0x6c(%rbp),%ecx
  43edc8:	89 4d 94             	mov    %ecx,-0x6c(%rbp)
  43edcb:	8b 4d 8c             	mov    -0x74(%rbp),%ecx
  43edce:	c1 e1 1e             	shl    $0x1e,%ecx
  43edd1:	8b 55 8c             	mov    -0x74(%rbp),%edx
  43edd4:	c1 ea 02             	shr    $0x2,%edx
  43edd7:	09 d1                	or     %edx,%ecx
  43edd9:	89 4d 8c             	mov    %ecx,-0x74(%rbp)
  43eddc:	8b 4d 94             	mov    -0x6c(%rbp),%ecx
  43eddf:	c1 e1 05             	shl    $0x5,%ecx
  43ede2:	8b 55 94             	mov    -0x6c(%rbp),%edx
  43ede5:	c1 ea 1b             	shr    $0x1b,%edx
  43ede8:	09 d1                	or     %edx,%ecx
  43edea:	8b 55 90             	mov    -0x70(%rbp),%edx
  43eded:	23 55 8c             	and    -0x74(%rbp),%edx
  43edf0:	8b 75 9c             	mov    -0x64(%rbp),%esi
  43edf3:	8b 7d 90             	mov    -0x70(%rbp),%edi
  43edf6:	0b 7d 8c             	or     -0x74(%rbp),%edi
  43edf9:	21 fe                	and    %edi,%esi
  43edfb:	09 f2                	or     %esi,%edx
  43edfd:	01 d1                	add    %edx,%ecx
  43edff:	81 c1 dc bc 1b 8f    	add    $0x8f1bbcdc,%ecx
  43ee05:	8b 55 c0             	mov    -0x40(%rbp),%edx
  43ee08:	33 55 ac             	xor    -0x54(%rbp),%edx
  43ee0b:	33 55 d4             	xor    -0x2c(%rbp),%edx
  43ee0e:	33 55 cc             	xor    -0x34(%rbp),%edx
  43ee11:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43ee14:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43ee17:	c1 e2 01             	shl    $0x1,%edx
  43ee1a:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43ee1d:	c1 ee 1f             	shr    $0x1f,%esi
  43ee20:	09 f2                	or     %esi,%edx
  43ee22:	89 55 cc             	mov    %edx,-0x34(%rbp)
  43ee25:	01 d1                	add    %edx,%ecx
  43ee27:	03 4d 98             	add    -0x68(%rbp),%ecx
  43ee2a:	89 4d 98             	mov    %ecx,-0x68(%rbp)
  43ee2d:	8b 4d 90             	mov    -0x70(%rbp),%ecx
  43ee30:	c1 e1 1e             	shl    $0x1e,%ecx
  43ee33:	8b 55 90             	mov    -0x70(%rbp),%edx
  43ee36:	c1 ea 02             	shr    $0x2,%edx
  43ee39:	09 d1                	or     %edx,%ecx
  43ee3b:	89 4d 90             	mov    %ecx,-0x70(%rbp)
  43ee3e:	8b 4d 98             	mov    -0x68(%rbp),%ecx
  43ee41:	c1 e1 05             	shl    $0x5,%ecx
  43ee44:	8b 55 98             	mov    -0x68(%rbp),%edx
  43ee47:	c1 ea 1b             	shr    $0x1b,%edx
  43ee4a:	09 d1                	or     %edx,%ecx
  43ee4c:	8b 55 94             	mov    -0x6c(%rbp),%edx
  43ee4f:	23 55 90             	and    -0x70(%rbp),%edx
  43ee52:	8b 75 8c             	mov    -0x74(%rbp),%esi
  43ee55:	8b 7d 94             	mov    -0x6c(%rbp),%edi
  43ee58:	0b 7d 90             	or     -0x70(%rbp),%edi
  43ee5b:	21 fe                	and    %edi,%esi
  43ee5d:	09 f2                	or     %esi,%edx
  43ee5f:	01 d1                	add    %edx,%ecx
  43ee61:	81 c1 dc bc 1b 8f    	add    $0x8f1bbcdc,%ecx
  43ee67:	8b 55 c4             	mov    -0x3c(%rbp),%edx
  43ee6a:	33 55 b0             	xor    -0x50(%rbp),%edx
  43ee6d:	33 55 d8             	xor    -0x28(%rbp),%edx
  43ee70:	33 55 d0             	xor    -0x30(%rbp),%edx
  43ee73:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43ee76:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43ee79:	c1 e2 01             	shl    $0x1,%edx
  43ee7c:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43ee7f:	c1 ee 1f             	shr    $0x1f,%esi
  43ee82:	09 f2                	or     %esi,%edx
  43ee84:	89 55 d0             	mov    %edx,-0x30(%rbp)
  43ee87:	01 d1                	add    %edx,%ecx
  43ee89:	03 4d 9c             	add    -0x64(%rbp),%ecx
  43ee8c:	89 4d 9c             	mov    %ecx,-0x64(%rbp)
  43ee8f:	8b 4d 94             	mov    -0x6c(%rbp),%ecx
  43ee92:	c1 e1 1e             	shl    $0x1e,%ecx
  43ee95:	8b 55 94             	mov    -0x6c(%rbp),%edx
  43ee98:	c1 ea 02             	shr    $0x2,%edx
  43ee9b:	09 d1                	or     %edx,%ecx
  43ee9d:	89 4d 94             	mov    %ecx,-0x6c(%rbp)
  43eea0:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
  43eea3:	c1 e1 05             	shl    $0x5,%ecx
  43eea6:	8b 55 9c             	mov    -0x64(%rbp),%edx
  43eea9:	c1 ea 1b             	shr    $0x1b,%edx
  43eeac:	09 d1                	or     %edx,%ecx
  43eeae:	8b 55 98             	mov    -0x68(%rbp),%edx
  43eeb1:	23 55 94             	and    -0x6c(%rbp),%edx
  43eeb4:	8b 75 90             	mov    -0x70(%rbp),%esi
  43eeb7:	8b 7d 98             	mov    -0x68(%rbp),%edi
  43eeba:	0b 7d 94             	or     -0x6c(%rbp),%edi
  43eebd:	21 fe                	and    %edi,%esi
  43eebf:	09 f2                	or     %esi,%edx
  43eec1:	01 d1                	add    %edx,%ecx
  43eec3:	81 c1 dc bc 1b 8f    	add    $0x8f1bbcdc,%ecx
  43eec9:	8b 55 c8             	mov    -0x38(%rbp),%edx
  43eecc:	33 55 b4             	xor    -0x4c(%rbp),%edx
  43eecf:	33 55 dc             	xor    -0x24(%rbp),%edx
  43eed2:	33 55 d4             	xor    -0x2c(%rbp),%edx
  43eed5:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43eed8:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43eedb:	c1 e2 01             	shl    $0x1,%edx
  43eede:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43eee1:	c1 ee 1f             	shr    $0x1f,%esi
  43eee4:	09 f2                	or     %esi,%edx
  43eee6:	89 55 d4             	mov    %edx,-0x2c(%rbp)
  43eee9:	01 d1                	add    %edx,%ecx
  43eeeb:	03 4d 8c             	add    -0x74(%rbp),%ecx
  43eeee:	89 4d 8c             	mov    %ecx,-0x74(%rbp)
  43eef1:	8b 4d 98             	mov    -0x68(%rbp),%ecx
  43eef4:	c1 e1 1e             	shl    $0x1e,%ecx
  43eef7:	8b 55 98             	mov    -0x68(%rbp),%edx
  43eefa:	c1 ea 02             	shr    $0x2,%edx
  43eefd:	09 d1                	or     %edx,%ecx
  43eeff:	89 4d 98             	mov    %ecx,-0x68(%rbp)
  43ef02:	8b 4d 8c             	mov    -0x74(%rbp),%ecx
  43ef05:	c1 e1 05             	shl    $0x5,%ecx
  43ef08:	8b 55 8c             	mov    -0x74(%rbp),%edx
  43ef0b:	c1 ea 1b             	shr    $0x1b,%edx
  43ef0e:	09 d1                	or     %edx,%ecx
  43ef10:	8b 55 9c             	mov    -0x64(%rbp),%edx
  43ef13:	23 55 98             	and    -0x68(%rbp),%edx
  43ef16:	8b 75 94             	mov    -0x6c(%rbp),%esi
  43ef19:	8b 7d 9c             	mov    -0x64(%rbp),%edi
  43ef1c:	0b 7d 98             	or     -0x68(%rbp),%edi
  43ef1f:	21 fe                	and    %edi,%esi
  43ef21:	09 f2                	or     %esi,%edx
  43ef23:	01 d1                	add    %edx,%ecx
  43ef25:	81 c1 dc bc 1b 8f    	add    $0x8f1bbcdc,%ecx
  43ef2b:	8b 55 cc             	mov    -0x34(%rbp),%edx
  43ef2e:	33 55 b8             	xor    -0x48(%rbp),%edx
  43ef31:	33 55 a0             	xor    -0x60(%rbp),%edx
  43ef34:	33 55 d8             	xor    -0x28(%rbp),%edx
  43ef37:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43ef3a:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43ef3d:	c1 e2 01             	shl    $0x1,%edx
  43ef40:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43ef43:	c1 ee 1f             	shr    $0x1f,%esi
  43ef46:	09 f2                	or     %esi,%edx
  43ef48:	89 55 d8             	mov    %edx,-0x28(%rbp)
  43ef4b:	01 d1                	add    %edx,%ecx
  43ef4d:	03 4d 90             	add    -0x70(%rbp),%ecx
  43ef50:	89 4d 90             	mov    %ecx,-0x70(%rbp)
  43ef53:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
  43ef56:	c1 e1 1e             	shl    $0x1e,%ecx
  43ef59:	8b 55 9c             	mov    -0x64(%rbp),%edx
  43ef5c:	c1 ea 02             	shr    $0x2,%edx
  43ef5f:	09 d1                	or     %edx,%ecx
  43ef61:	89 4d 9c             	mov    %ecx,-0x64(%rbp)
  43ef64:	8b 4d 90             	mov    -0x70(%rbp),%ecx
  43ef67:	c1 e1 05             	shl    $0x5,%ecx
  43ef6a:	8b 55 90             	mov    -0x70(%rbp),%edx
  43ef6d:	c1 ea 1b             	shr    $0x1b,%edx
  43ef70:	09 d1                	or     %edx,%ecx
  43ef72:	8b 55 8c             	mov    -0x74(%rbp),%edx
  43ef75:	23 55 9c             	and    -0x64(%rbp),%edx
  43ef78:	8b 75 98             	mov    -0x68(%rbp),%esi
  43ef7b:	8b 7d 8c             	mov    -0x74(%rbp),%edi
  43ef7e:	0b 7d 9c             	or     -0x64(%rbp),%edi
  43ef81:	21 fe                	and    %edi,%esi
  43ef83:	09 f2                	or     %esi,%edx
  43ef85:	01 d1                	add    %edx,%ecx
  43ef87:	81 c1 dc bc 1b 8f    	add    $0x8f1bbcdc,%ecx
  43ef8d:	8b 55 d0             	mov    -0x30(%rbp),%edx
  43ef90:	33 55 bc             	xor    -0x44(%rbp),%edx
  43ef93:	33 55 a4             	xor    -0x5c(%rbp),%edx
  43ef96:	33 55 dc             	xor    -0x24(%rbp),%edx
  43ef99:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43ef9c:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43ef9f:	c1 e2 01             	shl    $0x1,%edx
  43efa2:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43efa5:	c1 ee 1f             	shr    $0x1f,%esi
  43efa8:	09 f2                	or     %esi,%edx
  43efaa:	89 55 dc             	mov    %edx,-0x24(%rbp)
  43efad:	01 d1                	add    %edx,%ecx
  43efaf:	03 4d 94             	add    -0x6c(%rbp),%ecx
  43efb2:	89 4d 94             	mov    %ecx,-0x6c(%rbp)
  43efb5:	8b 4d 8c             	mov    -0x74(%rbp),%ecx
  43efb8:	c1 e1 1e             	shl    $0x1e,%ecx
  43efbb:	8b 55 8c             	mov    -0x74(%rbp),%edx
  43efbe:	c1 ea 02             	shr    $0x2,%edx
  43efc1:	09 d1                	or     %edx,%ecx
  43efc3:	89 4d 8c             	mov    %ecx,-0x74(%rbp)
  43efc6:	8b 4d 94             	mov    -0x6c(%rbp),%ecx
  43efc9:	c1 e1 05             	shl    $0x5,%ecx
  43efcc:	8b 55 94             	mov    -0x6c(%rbp),%edx
  43efcf:	c1 ea 1b             	shr    $0x1b,%edx
  43efd2:	09 d1                	or     %edx,%ecx
  43efd4:	8b 55 90             	mov    -0x70(%rbp),%edx
  43efd7:	23 55 8c             	and    -0x74(%rbp),%edx
  43efda:	8b 75 9c             	mov    -0x64(%rbp),%esi
  43efdd:	8b 7d 90             	mov    -0x70(%rbp),%edi
  43efe0:	0b 7d 8c             	or     -0x74(%rbp),%edi
  43efe3:	21 fe                	and    %edi,%esi
  43efe5:	09 f2                	or     %esi,%edx
  43efe7:	01 d1                	add    %edx,%ecx
  43efe9:	81 c1 dc bc 1b 8f    	add    $0x8f1bbcdc,%ecx
  43efef:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  43eff2:	33 55 c0             	xor    -0x40(%rbp),%edx
  43eff5:	33 55 a8             	xor    -0x58(%rbp),%edx
  43eff8:	33 55 a0             	xor    -0x60(%rbp),%edx
  43effb:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43effe:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43f001:	c1 e2 01             	shl    $0x1,%edx
  43f004:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43f007:	c1 ee 1f             	shr    $0x1f,%esi
  43f00a:	09 f2                	or     %esi,%edx
  43f00c:	89 55 a0             	mov    %edx,-0x60(%rbp)
  43f00f:	01 d1                	add    %edx,%ecx
  43f011:	03 4d 98             	add    -0x68(%rbp),%ecx
  43f014:	89 4d 98             	mov    %ecx,-0x68(%rbp)
  43f017:	8b 4d 90             	mov    -0x70(%rbp),%ecx
  43f01a:	c1 e1 1e             	shl    $0x1e,%ecx
  43f01d:	8b 55 90             	mov    -0x70(%rbp),%edx
  43f020:	c1 ea 02             	shr    $0x2,%edx
  43f023:	09 d1                	or     %edx,%ecx
  43f025:	89 4d 90             	mov    %ecx,-0x70(%rbp)
  43f028:	8b 4d 98             	mov    -0x68(%rbp),%ecx
  43f02b:	c1 e1 05             	shl    $0x5,%ecx
  43f02e:	8b 55 98             	mov    -0x68(%rbp),%edx
  43f031:	c1 ea 1b             	shr    $0x1b,%edx
  43f034:	09 d1                	or     %edx,%ecx
  43f036:	8b 55 94             	mov    -0x6c(%rbp),%edx
  43f039:	23 55 90             	and    -0x70(%rbp),%edx
  43f03c:	8b 75 8c             	mov    -0x74(%rbp),%esi
  43f03f:	8b 7d 94             	mov    -0x6c(%rbp),%edi
  43f042:	0b 7d 90             	or     -0x70(%rbp),%edi
  43f045:	21 fe                	and    %edi,%esi
  43f047:	09 f2                	or     %esi,%edx
  43f049:	01 d1                	add    %edx,%ecx
  43f04b:	81 c1 dc bc 1b 8f    	add    $0x8f1bbcdc,%ecx
  43f051:	8b 55 d8             	mov    -0x28(%rbp),%edx
  43f054:	33 55 c4             	xor    -0x3c(%rbp),%edx
  43f057:	33 55 ac             	xor    -0x54(%rbp),%edx
  43f05a:	33 55 a4             	xor    -0x5c(%rbp),%edx
  43f05d:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43f060:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43f063:	c1 e2 01             	shl    $0x1,%edx
  43f066:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43f069:	c1 ee 1f             	shr    $0x1f,%esi
  43f06c:	09 f2                	or     %esi,%edx
  43f06e:	89 55 a4             	mov    %edx,-0x5c(%rbp)
  43f071:	01 d1                	add    %edx,%ecx
  43f073:	03 4d 9c             	add    -0x64(%rbp),%ecx
  43f076:	89 4d 9c             	mov    %ecx,-0x64(%rbp)
  43f079:	8b 4d 94             	mov    -0x6c(%rbp),%ecx
  43f07c:	c1 e1 1e             	shl    $0x1e,%ecx
  43f07f:	8b 55 94             	mov    -0x6c(%rbp),%edx
  43f082:	c1 ea 02             	shr    $0x2,%edx
  43f085:	09 d1                	or     %edx,%ecx
  43f087:	89 4d 94             	mov    %ecx,-0x6c(%rbp)
  43f08a:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
  43f08d:	c1 e1 05             	shl    $0x5,%ecx
  43f090:	8b 55 9c             	mov    -0x64(%rbp),%edx
  43f093:	c1 ea 1b             	shr    $0x1b,%edx
  43f096:	09 d1                	or     %edx,%ecx
  43f098:	8b 55 98             	mov    -0x68(%rbp),%edx
  43f09b:	23 55 94             	and    -0x6c(%rbp),%edx
  43f09e:	8b 75 90             	mov    -0x70(%rbp),%esi
  43f0a1:	8b 7d 98             	mov    -0x68(%rbp),%edi
  43f0a4:	0b 7d 94             	or     -0x6c(%rbp),%edi
  43f0a7:	21 fe                	and    %edi,%esi
  43f0a9:	09 f2                	or     %esi,%edx
  43f0ab:	01 d1                	add    %edx,%ecx
  43f0ad:	81 c1 dc bc 1b 8f    	add    $0x8f1bbcdc,%ecx
  43f0b3:	8b 55 dc             	mov    -0x24(%rbp),%edx
  43f0b6:	33 55 c8             	xor    -0x38(%rbp),%edx
  43f0b9:	33 55 b0             	xor    -0x50(%rbp),%edx
  43f0bc:	33 55 a8             	xor    -0x58(%rbp),%edx
  43f0bf:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43f0c2:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43f0c5:	c1 e2 01             	shl    $0x1,%edx
  43f0c8:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43f0cb:	c1 ee 1f             	shr    $0x1f,%esi
  43f0ce:	09 f2                	or     %esi,%edx
  43f0d0:	89 55 a8             	mov    %edx,-0x58(%rbp)
  43f0d3:	01 d1                	add    %edx,%ecx
  43f0d5:	03 4d 8c             	add    -0x74(%rbp),%ecx
  43f0d8:	89 4d 8c             	mov    %ecx,-0x74(%rbp)
  43f0db:	8b 4d 98             	mov    -0x68(%rbp),%ecx
  43f0de:	c1 e1 1e             	shl    $0x1e,%ecx
  43f0e1:	8b 55 98             	mov    -0x68(%rbp),%edx
  43f0e4:	c1 ea 02             	shr    $0x2,%edx
  43f0e7:	09 d1                	or     %edx,%ecx
  43f0e9:	89 4d 98             	mov    %ecx,-0x68(%rbp)
  43f0ec:	8b 4d 8c             	mov    -0x74(%rbp),%ecx
  43f0ef:	c1 e1 05             	shl    $0x5,%ecx
  43f0f2:	8b 55 8c             	mov    -0x74(%rbp),%edx
  43f0f5:	c1 ea 1b             	shr    $0x1b,%edx
  43f0f8:	09 d1                	or     %edx,%ecx
  43f0fa:	8b 55 9c             	mov    -0x64(%rbp),%edx
  43f0fd:	23 55 98             	and    -0x68(%rbp),%edx
  43f100:	8b 75 94             	mov    -0x6c(%rbp),%esi
  43f103:	8b 7d 9c             	mov    -0x64(%rbp),%edi
  43f106:	0b 7d 98             	or     -0x68(%rbp),%edi
  43f109:	21 fe                	and    %edi,%esi
  43f10b:	09 f2                	or     %esi,%edx
  43f10d:	01 d1                	add    %edx,%ecx
  43f10f:	81 c1 dc bc 1b 8f    	add    $0x8f1bbcdc,%ecx
  43f115:	8b 55 a0             	mov    -0x60(%rbp),%edx
  43f118:	33 55 cc             	xor    -0x34(%rbp),%edx
  43f11b:	33 55 b4             	xor    -0x4c(%rbp),%edx
  43f11e:	33 55 ac             	xor    -0x54(%rbp),%edx
  43f121:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43f124:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43f127:	c1 e2 01             	shl    $0x1,%edx
  43f12a:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43f12d:	c1 ee 1f             	shr    $0x1f,%esi
  43f130:	09 f2                	or     %esi,%edx
  43f132:	89 55 ac             	mov    %edx,-0x54(%rbp)
  43f135:	01 d1                	add    %edx,%ecx
  43f137:	03 4d 90             	add    -0x70(%rbp),%ecx
  43f13a:	89 4d 90             	mov    %ecx,-0x70(%rbp)
  43f13d:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
  43f140:	c1 e1 1e             	shl    $0x1e,%ecx
  43f143:	8b 55 9c             	mov    -0x64(%rbp),%edx
  43f146:	c1 ea 02             	shr    $0x2,%edx
  43f149:	09 d1                	or     %edx,%ecx
  43f14b:	89 4d 9c             	mov    %ecx,-0x64(%rbp)
  43f14e:	8b 4d 90             	mov    -0x70(%rbp),%ecx
  43f151:	c1 e1 05             	shl    $0x5,%ecx
  43f154:	8b 55 90             	mov    -0x70(%rbp),%edx
  43f157:	c1 ea 1b             	shr    $0x1b,%edx
  43f15a:	09 d1                	or     %edx,%ecx
  43f15c:	8b 55 8c             	mov    -0x74(%rbp),%edx
  43f15f:	23 55 9c             	and    -0x64(%rbp),%edx
  43f162:	8b 75 98             	mov    -0x68(%rbp),%esi
  43f165:	8b 7d 8c             	mov    -0x74(%rbp),%edi
  43f168:	0b 7d 9c             	or     -0x64(%rbp),%edi
  43f16b:	21 fe                	and    %edi,%esi
  43f16d:	09 f2                	or     %esi,%edx
  43f16f:	01 d1                	add    %edx,%ecx
  43f171:	81 c1 dc bc 1b 8f    	add    $0x8f1bbcdc,%ecx
  43f177:	8b 55 a4             	mov    -0x5c(%rbp),%edx
  43f17a:	33 55 d0             	xor    -0x30(%rbp),%edx
  43f17d:	33 55 b8             	xor    -0x48(%rbp),%edx
  43f180:	33 55 b0             	xor    -0x50(%rbp),%edx
  43f183:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43f186:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43f189:	c1 e2 01             	shl    $0x1,%edx
  43f18c:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43f18f:	c1 ee 1f             	shr    $0x1f,%esi
  43f192:	09 f2                	or     %esi,%edx
  43f194:	89 55 b0             	mov    %edx,-0x50(%rbp)
  43f197:	01 d1                	add    %edx,%ecx
  43f199:	03 4d 94             	add    -0x6c(%rbp),%ecx
  43f19c:	89 4d 94             	mov    %ecx,-0x6c(%rbp)
  43f19f:	8b 4d 8c             	mov    -0x74(%rbp),%ecx
  43f1a2:	c1 e1 1e             	shl    $0x1e,%ecx
  43f1a5:	8b 55 8c             	mov    -0x74(%rbp),%edx
  43f1a8:	c1 ea 02             	shr    $0x2,%edx
  43f1ab:	09 d1                	or     %edx,%ecx
  43f1ad:	89 4d 8c             	mov    %ecx,-0x74(%rbp)
  43f1b0:	8b 4d 94             	mov    -0x6c(%rbp),%ecx
  43f1b3:	c1 e1 05             	shl    $0x5,%ecx
  43f1b6:	8b 55 94             	mov    -0x6c(%rbp),%edx
  43f1b9:	c1 ea 1b             	shr    $0x1b,%edx
  43f1bc:	09 d1                	or     %edx,%ecx
  43f1be:	8b 55 90             	mov    -0x70(%rbp),%edx
  43f1c1:	23 55 8c             	and    -0x74(%rbp),%edx
  43f1c4:	8b 75 9c             	mov    -0x64(%rbp),%esi
  43f1c7:	8b 7d 90             	mov    -0x70(%rbp),%edi
  43f1ca:	0b 7d 8c             	or     -0x74(%rbp),%edi
  43f1cd:	21 fe                	and    %edi,%esi
  43f1cf:	09 f2                	or     %esi,%edx
  43f1d1:	01 d1                	add    %edx,%ecx
  43f1d3:	81 c1 dc bc 1b 8f    	add    $0x8f1bbcdc,%ecx
  43f1d9:	8b 55 a8             	mov    -0x58(%rbp),%edx
  43f1dc:	33 55 d4             	xor    -0x2c(%rbp),%edx
  43f1df:	33 55 bc             	xor    -0x44(%rbp),%edx
  43f1e2:	33 55 b4             	xor    -0x4c(%rbp),%edx
  43f1e5:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43f1e8:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43f1eb:	c1 e2 01             	shl    $0x1,%edx
  43f1ee:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43f1f1:	c1 ee 1f             	shr    $0x1f,%esi
  43f1f4:	09 f2                	or     %esi,%edx
  43f1f6:	89 55 b4             	mov    %edx,-0x4c(%rbp)
  43f1f9:	01 d1                	add    %edx,%ecx
  43f1fb:	03 4d 98             	add    -0x68(%rbp),%ecx
  43f1fe:	89 4d 98             	mov    %ecx,-0x68(%rbp)
  43f201:	8b 4d 90             	mov    -0x70(%rbp),%ecx
  43f204:	c1 e1 1e             	shl    $0x1e,%ecx
  43f207:	8b 55 90             	mov    -0x70(%rbp),%edx
  43f20a:	c1 ea 02             	shr    $0x2,%edx
  43f20d:	09 d1                	or     %edx,%ecx
  43f20f:	89 4d 90             	mov    %ecx,-0x70(%rbp)
  43f212:	8b 4d 98             	mov    -0x68(%rbp),%ecx
  43f215:	c1 e1 05             	shl    $0x5,%ecx
  43f218:	8b 55 98             	mov    -0x68(%rbp),%edx
  43f21b:	c1 ea 1b             	shr    $0x1b,%edx
  43f21e:	09 d1                	or     %edx,%ecx
  43f220:	8b 55 94             	mov    -0x6c(%rbp),%edx
  43f223:	23 55 90             	and    -0x70(%rbp),%edx
  43f226:	8b 75 8c             	mov    -0x74(%rbp),%esi
  43f229:	8b 7d 94             	mov    -0x6c(%rbp),%edi
  43f22c:	0b 7d 90             	or     -0x70(%rbp),%edi
  43f22f:	21 fe                	and    %edi,%esi
  43f231:	09 f2                	or     %esi,%edx
  43f233:	01 d1                	add    %edx,%ecx
  43f235:	81 c1 dc bc 1b 8f    	add    $0x8f1bbcdc,%ecx
  43f23b:	8b 55 ac             	mov    -0x54(%rbp),%edx
  43f23e:	33 55 d8             	xor    -0x28(%rbp),%edx
  43f241:	33 55 c0             	xor    -0x40(%rbp),%edx
  43f244:	33 55 b8             	xor    -0x48(%rbp),%edx
  43f247:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43f24a:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43f24d:	c1 e2 01             	shl    $0x1,%edx
  43f250:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43f253:	c1 ee 1f             	shr    $0x1f,%esi
  43f256:	09 f2                	or     %esi,%edx
  43f258:	89 55 b8             	mov    %edx,-0x48(%rbp)
  43f25b:	01 d1                	add    %edx,%ecx
  43f25d:	03 4d 9c             	add    -0x64(%rbp),%ecx
  43f260:	89 4d 9c             	mov    %ecx,-0x64(%rbp)
  43f263:	8b 4d 94             	mov    -0x6c(%rbp),%ecx
  43f266:	c1 e1 1e             	shl    $0x1e,%ecx
  43f269:	8b 55 94             	mov    -0x6c(%rbp),%edx
  43f26c:	c1 ea 02             	shr    $0x2,%edx
  43f26f:	09 d1                	or     %edx,%ecx
  43f271:	89 4d 94             	mov    %ecx,-0x6c(%rbp)
  43f274:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
  43f277:	c1 e1 05             	shl    $0x5,%ecx
  43f27a:	8b 55 9c             	mov    -0x64(%rbp),%edx
  43f27d:	c1 ea 1b             	shr    $0x1b,%edx
  43f280:	09 d1                	or     %edx,%ecx
  43f282:	8b 55 98             	mov    -0x68(%rbp),%edx
  43f285:	23 55 94             	and    -0x6c(%rbp),%edx
  43f288:	8b 75 90             	mov    -0x70(%rbp),%esi
  43f28b:	8b 7d 98             	mov    -0x68(%rbp),%edi
  43f28e:	0b 7d 94             	or     -0x6c(%rbp),%edi
  43f291:	21 fe                	and    %edi,%esi
  43f293:	09 f2                	or     %esi,%edx
  43f295:	01 d1                	add    %edx,%ecx
  43f297:	81 c1 dc bc 1b 8f    	add    $0x8f1bbcdc,%ecx
  43f29d:	8b 55 b0             	mov    -0x50(%rbp),%edx
  43f2a0:	33 55 dc             	xor    -0x24(%rbp),%edx
  43f2a3:	33 55 c4             	xor    -0x3c(%rbp),%edx
  43f2a6:	33 55 bc             	xor    -0x44(%rbp),%edx
  43f2a9:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43f2ac:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43f2af:	c1 e2 01             	shl    $0x1,%edx
  43f2b2:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43f2b5:	c1 ee 1f             	shr    $0x1f,%esi
  43f2b8:	09 f2                	or     %esi,%edx
  43f2ba:	89 55 bc             	mov    %edx,-0x44(%rbp)
  43f2bd:	01 d1                	add    %edx,%ecx
  43f2bf:	03 4d 8c             	add    -0x74(%rbp),%ecx
  43f2c2:	89 4d 8c             	mov    %ecx,-0x74(%rbp)
  43f2c5:	8b 4d 98             	mov    -0x68(%rbp),%ecx
  43f2c8:	c1 e1 1e             	shl    $0x1e,%ecx
  43f2cb:	8b 55 98             	mov    -0x68(%rbp),%edx
  43f2ce:	c1 ea 02             	shr    $0x2,%edx
  43f2d1:	09 d1                	or     %edx,%ecx
  43f2d3:	89 4d 98             	mov    %ecx,-0x68(%rbp)
  43f2d6:	8b 4d 8c             	mov    -0x74(%rbp),%ecx
  43f2d9:	c1 e1 05             	shl    $0x5,%ecx
  43f2dc:	8b 55 8c             	mov    -0x74(%rbp),%edx
  43f2df:	c1 ea 1b             	shr    $0x1b,%edx
  43f2e2:	09 d1                	or     %edx,%ecx
  43f2e4:	8b 55 9c             	mov    -0x64(%rbp),%edx
  43f2e7:	23 55 98             	and    -0x68(%rbp),%edx
  43f2ea:	8b 75 94             	mov    -0x6c(%rbp),%esi
  43f2ed:	8b 7d 9c             	mov    -0x64(%rbp),%edi
  43f2f0:	0b 7d 98             	or     -0x68(%rbp),%edi
  43f2f3:	21 fe                	and    %edi,%esi
  43f2f5:	09 f2                	or     %esi,%edx
  43f2f7:	01 d1                	add    %edx,%ecx
  43f2f9:	81 c1 dc bc 1b 8f    	add    $0x8f1bbcdc,%ecx
  43f2ff:	8b 55 b4             	mov    -0x4c(%rbp),%edx
  43f302:	33 55 a0             	xor    -0x60(%rbp),%edx
  43f305:	33 55 c8             	xor    -0x38(%rbp),%edx
  43f308:	33 55 c0             	xor    -0x40(%rbp),%edx
  43f30b:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43f30e:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43f311:	c1 e2 01             	shl    $0x1,%edx
  43f314:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43f317:	c1 ee 1f             	shr    $0x1f,%esi
  43f31a:	09 f2                	or     %esi,%edx
  43f31c:	89 55 c0             	mov    %edx,-0x40(%rbp)
  43f31f:	01 d1                	add    %edx,%ecx
  43f321:	03 4d 90             	add    -0x70(%rbp),%ecx
  43f324:	89 4d 90             	mov    %ecx,-0x70(%rbp)
  43f327:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
  43f32a:	c1 e1 1e             	shl    $0x1e,%ecx
  43f32d:	8b 55 9c             	mov    -0x64(%rbp),%edx
  43f330:	c1 ea 02             	shr    $0x2,%edx
  43f333:	09 d1                	or     %edx,%ecx
  43f335:	89 4d 9c             	mov    %ecx,-0x64(%rbp)
  43f338:	8b 4d 90             	mov    -0x70(%rbp),%ecx
  43f33b:	c1 e1 05             	shl    $0x5,%ecx
  43f33e:	8b 55 90             	mov    -0x70(%rbp),%edx
  43f341:	c1 ea 1b             	shr    $0x1b,%edx
  43f344:	09 d1                	or     %edx,%ecx
  43f346:	8b 55 8c             	mov    -0x74(%rbp),%edx
  43f349:	23 55 9c             	and    -0x64(%rbp),%edx
  43f34c:	8b 75 98             	mov    -0x68(%rbp),%esi
  43f34f:	8b 7d 8c             	mov    -0x74(%rbp),%edi
  43f352:	0b 7d 9c             	or     -0x64(%rbp),%edi
  43f355:	21 fe                	and    %edi,%esi
  43f357:	09 f2                	or     %esi,%edx
  43f359:	01 d1                	add    %edx,%ecx
  43f35b:	81 c1 dc bc 1b 8f    	add    $0x8f1bbcdc,%ecx
  43f361:	8b 55 b8             	mov    -0x48(%rbp),%edx
  43f364:	33 55 a4             	xor    -0x5c(%rbp),%edx
  43f367:	33 55 cc             	xor    -0x34(%rbp),%edx
  43f36a:	33 55 c4             	xor    -0x3c(%rbp),%edx
  43f36d:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43f370:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43f373:	c1 e2 01             	shl    $0x1,%edx
  43f376:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43f379:	c1 ee 1f             	shr    $0x1f,%esi
  43f37c:	09 f2                	or     %esi,%edx
  43f37e:	89 55 c4             	mov    %edx,-0x3c(%rbp)
  43f381:	01 d1                	add    %edx,%ecx
  43f383:	03 4d 94             	add    -0x6c(%rbp),%ecx
  43f386:	89 4d 94             	mov    %ecx,-0x6c(%rbp)
  43f389:	8b 4d 8c             	mov    -0x74(%rbp),%ecx
  43f38c:	c1 e1 1e             	shl    $0x1e,%ecx
  43f38f:	8b 55 8c             	mov    -0x74(%rbp),%edx
  43f392:	c1 ea 02             	shr    $0x2,%edx
  43f395:	09 d1                	or     %edx,%ecx
  43f397:	89 4d 8c             	mov    %ecx,-0x74(%rbp)
  43f39a:	8b 4d 94             	mov    -0x6c(%rbp),%ecx
  43f39d:	c1 e1 05             	shl    $0x5,%ecx
  43f3a0:	8b 55 94             	mov    -0x6c(%rbp),%edx
  43f3a3:	c1 ea 1b             	shr    $0x1b,%edx
  43f3a6:	09 d1                	or     %edx,%ecx
  43f3a8:	8b 55 90             	mov    -0x70(%rbp),%edx
  43f3ab:	23 55 8c             	and    -0x74(%rbp),%edx
  43f3ae:	8b 75 9c             	mov    -0x64(%rbp),%esi
  43f3b1:	8b 7d 90             	mov    -0x70(%rbp),%edi
  43f3b4:	0b 7d 8c             	or     -0x74(%rbp),%edi
  43f3b7:	21 fe                	and    %edi,%esi
  43f3b9:	09 f2                	or     %esi,%edx
  43f3bb:	01 d1                	add    %edx,%ecx
  43f3bd:	81 c1 dc bc 1b 8f    	add    $0x8f1bbcdc,%ecx
  43f3c3:	8b 55 bc             	mov    -0x44(%rbp),%edx
  43f3c6:	33 55 a8             	xor    -0x58(%rbp),%edx
  43f3c9:	33 55 d0             	xor    -0x30(%rbp),%edx
  43f3cc:	33 55 c8             	xor    -0x38(%rbp),%edx
  43f3cf:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43f3d2:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43f3d5:	c1 e2 01             	shl    $0x1,%edx
  43f3d8:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43f3db:	c1 ee 1f             	shr    $0x1f,%esi
  43f3de:	09 f2                	or     %esi,%edx
  43f3e0:	89 55 c8             	mov    %edx,-0x38(%rbp)
  43f3e3:	01 d1                	add    %edx,%ecx
  43f3e5:	03 4d 98             	add    -0x68(%rbp),%ecx
  43f3e8:	89 4d 98             	mov    %ecx,-0x68(%rbp)
  43f3eb:	8b 4d 90             	mov    -0x70(%rbp),%ecx
  43f3ee:	c1 e1 1e             	shl    $0x1e,%ecx
  43f3f1:	8b 55 90             	mov    -0x70(%rbp),%edx
  43f3f4:	c1 ea 02             	shr    $0x2,%edx
  43f3f7:	09 d1                	or     %edx,%ecx
  43f3f9:	89 4d 90             	mov    %ecx,-0x70(%rbp)
  43f3fc:	8b 4d 98             	mov    -0x68(%rbp),%ecx
  43f3ff:	c1 e1 05             	shl    $0x5,%ecx
  43f402:	8b 55 98             	mov    -0x68(%rbp),%edx
  43f405:	c1 ea 1b             	shr    $0x1b,%edx
  43f408:	09 d1                	or     %edx,%ecx
  43f40a:	8b 55 94             	mov    -0x6c(%rbp),%edx
  43f40d:	23 55 90             	and    -0x70(%rbp),%edx
  43f410:	8b 75 8c             	mov    -0x74(%rbp),%esi
  43f413:	8b 7d 94             	mov    -0x6c(%rbp),%edi
  43f416:	0b 7d 90             	or     -0x70(%rbp),%edi
  43f419:	21 fe                	and    %edi,%esi
  43f41b:	09 f2                	or     %esi,%edx
  43f41d:	01 d1                	add    %edx,%ecx
  43f41f:	81 c1 dc bc 1b 8f    	add    $0x8f1bbcdc,%ecx
  43f425:	8b 55 c0             	mov    -0x40(%rbp),%edx
  43f428:	33 55 ac             	xor    -0x54(%rbp),%edx
  43f42b:	33 55 d4             	xor    -0x2c(%rbp),%edx
  43f42e:	33 55 cc             	xor    -0x34(%rbp),%edx
  43f431:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43f434:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43f437:	c1 e2 01             	shl    $0x1,%edx
  43f43a:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43f43d:	c1 ee 1f             	shr    $0x1f,%esi
  43f440:	09 f2                	or     %esi,%edx
  43f442:	89 55 cc             	mov    %edx,-0x34(%rbp)
  43f445:	01 d1                	add    %edx,%ecx
  43f447:	03 4d 9c             	add    -0x64(%rbp),%ecx
  43f44a:	89 4d 9c             	mov    %ecx,-0x64(%rbp)
  43f44d:	8b 4d 94             	mov    -0x6c(%rbp),%ecx
  43f450:	c1 e1 1e             	shl    $0x1e,%ecx
  43f453:	8b 55 94             	mov    -0x6c(%rbp),%edx
  43f456:	c1 ea 02             	shr    $0x2,%edx
  43f459:	09 d1                	or     %edx,%ecx
  43f45b:	89 4d 94             	mov    %ecx,-0x6c(%rbp)
  43f45e:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
  43f461:	c1 e1 05             	shl    $0x5,%ecx
  43f464:	8b 55 9c             	mov    -0x64(%rbp),%edx
  43f467:	c1 ea 1b             	shr    $0x1b,%edx
  43f46a:	09 d1                	or     %edx,%ecx
  43f46c:	8b 55 98             	mov    -0x68(%rbp),%edx
  43f46f:	33 55 94             	xor    -0x6c(%rbp),%edx
  43f472:	33 55 90             	xor    -0x70(%rbp),%edx
  43f475:	01 d1                	add    %edx,%ecx
  43f477:	81 c1 d6 c1 62 ca    	add    $0xca62c1d6,%ecx
  43f47d:	8b 55 c4             	mov    -0x3c(%rbp),%edx
  43f480:	33 55 b0             	xor    -0x50(%rbp),%edx
  43f483:	33 55 d8             	xor    -0x28(%rbp),%edx
  43f486:	33 55 d0             	xor    -0x30(%rbp),%edx
  43f489:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43f48c:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43f48f:	c1 e2 01             	shl    $0x1,%edx
  43f492:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43f495:	c1 ee 1f             	shr    $0x1f,%esi
  43f498:	09 f2                	or     %esi,%edx
  43f49a:	89 55 d0             	mov    %edx,-0x30(%rbp)
  43f49d:	01 d1                	add    %edx,%ecx
  43f49f:	03 4d 8c             	add    -0x74(%rbp),%ecx
  43f4a2:	89 4d 8c             	mov    %ecx,-0x74(%rbp)
  43f4a5:	8b 4d 98             	mov    -0x68(%rbp),%ecx
  43f4a8:	c1 e1 1e             	shl    $0x1e,%ecx
  43f4ab:	8b 55 98             	mov    -0x68(%rbp),%edx
  43f4ae:	c1 ea 02             	shr    $0x2,%edx
  43f4b1:	09 d1                	or     %edx,%ecx
  43f4b3:	89 4d 98             	mov    %ecx,-0x68(%rbp)
  43f4b6:	8b 4d 8c             	mov    -0x74(%rbp),%ecx
  43f4b9:	c1 e1 05             	shl    $0x5,%ecx
  43f4bc:	8b 55 8c             	mov    -0x74(%rbp),%edx
  43f4bf:	c1 ea 1b             	shr    $0x1b,%edx
  43f4c2:	09 d1                	or     %edx,%ecx
  43f4c4:	8b 55 9c             	mov    -0x64(%rbp),%edx
  43f4c7:	33 55 98             	xor    -0x68(%rbp),%edx
  43f4ca:	33 55 94             	xor    -0x6c(%rbp),%edx
  43f4cd:	01 d1                	add    %edx,%ecx
  43f4cf:	81 c1 d6 c1 62 ca    	add    $0xca62c1d6,%ecx
  43f4d5:	8b 55 c8             	mov    -0x38(%rbp),%edx
  43f4d8:	33 55 b4             	xor    -0x4c(%rbp),%edx
  43f4db:	33 55 dc             	xor    -0x24(%rbp),%edx
  43f4de:	33 55 d4             	xor    -0x2c(%rbp),%edx
  43f4e1:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43f4e4:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43f4e7:	c1 e2 01             	shl    $0x1,%edx
  43f4ea:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43f4ed:	c1 ee 1f             	shr    $0x1f,%esi
  43f4f0:	09 f2                	or     %esi,%edx
  43f4f2:	89 55 d4             	mov    %edx,-0x2c(%rbp)
  43f4f5:	01 d1                	add    %edx,%ecx
  43f4f7:	03 4d 90             	add    -0x70(%rbp),%ecx
  43f4fa:	89 4d 90             	mov    %ecx,-0x70(%rbp)
  43f4fd:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
  43f500:	c1 e1 1e             	shl    $0x1e,%ecx
  43f503:	8b 55 9c             	mov    -0x64(%rbp),%edx
  43f506:	c1 ea 02             	shr    $0x2,%edx
  43f509:	09 d1                	or     %edx,%ecx
  43f50b:	89 4d 9c             	mov    %ecx,-0x64(%rbp)
  43f50e:	8b 4d 90             	mov    -0x70(%rbp),%ecx
  43f511:	c1 e1 05             	shl    $0x5,%ecx
  43f514:	8b 55 90             	mov    -0x70(%rbp),%edx
  43f517:	c1 ea 1b             	shr    $0x1b,%edx
  43f51a:	09 d1                	or     %edx,%ecx
  43f51c:	8b 55 8c             	mov    -0x74(%rbp),%edx
  43f51f:	33 55 9c             	xor    -0x64(%rbp),%edx
  43f522:	33 55 98             	xor    -0x68(%rbp),%edx
  43f525:	01 d1                	add    %edx,%ecx
  43f527:	81 c1 d6 c1 62 ca    	add    $0xca62c1d6,%ecx
  43f52d:	8b 55 cc             	mov    -0x34(%rbp),%edx
  43f530:	33 55 b8             	xor    -0x48(%rbp),%edx
  43f533:	33 55 a0             	xor    -0x60(%rbp),%edx
  43f536:	33 55 d8             	xor    -0x28(%rbp),%edx
  43f539:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43f53c:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43f53f:	c1 e2 01             	shl    $0x1,%edx
  43f542:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43f545:	c1 ee 1f             	shr    $0x1f,%esi
  43f548:	09 f2                	or     %esi,%edx
  43f54a:	89 55 d8             	mov    %edx,-0x28(%rbp)
  43f54d:	01 d1                	add    %edx,%ecx
  43f54f:	03 4d 94             	add    -0x6c(%rbp),%ecx
  43f552:	89 4d 94             	mov    %ecx,-0x6c(%rbp)
  43f555:	8b 4d 8c             	mov    -0x74(%rbp),%ecx
  43f558:	c1 e1 1e             	shl    $0x1e,%ecx
  43f55b:	8b 55 8c             	mov    -0x74(%rbp),%edx
  43f55e:	c1 ea 02             	shr    $0x2,%edx
  43f561:	09 d1                	or     %edx,%ecx
  43f563:	89 4d 8c             	mov    %ecx,-0x74(%rbp)
  43f566:	8b 4d 94             	mov    -0x6c(%rbp),%ecx
  43f569:	c1 e1 05             	shl    $0x5,%ecx
  43f56c:	8b 55 94             	mov    -0x6c(%rbp),%edx
  43f56f:	c1 ea 1b             	shr    $0x1b,%edx
  43f572:	09 d1                	or     %edx,%ecx
  43f574:	8b 55 90             	mov    -0x70(%rbp),%edx
  43f577:	33 55 8c             	xor    -0x74(%rbp),%edx
  43f57a:	33 55 9c             	xor    -0x64(%rbp),%edx
  43f57d:	01 d1                	add    %edx,%ecx
  43f57f:	81 c1 d6 c1 62 ca    	add    $0xca62c1d6,%ecx
  43f585:	8b 55 d0             	mov    -0x30(%rbp),%edx
  43f588:	33 55 bc             	xor    -0x44(%rbp),%edx
  43f58b:	33 55 a4             	xor    -0x5c(%rbp),%edx
  43f58e:	33 55 dc             	xor    -0x24(%rbp),%edx
  43f591:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43f594:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43f597:	c1 e2 01             	shl    $0x1,%edx
  43f59a:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43f59d:	c1 ee 1f             	shr    $0x1f,%esi
  43f5a0:	09 f2                	or     %esi,%edx
  43f5a2:	89 55 dc             	mov    %edx,-0x24(%rbp)
  43f5a5:	01 d1                	add    %edx,%ecx
  43f5a7:	03 4d 98             	add    -0x68(%rbp),%ecx
  43f5aa:	89 4d 98             	mov    %ecx,-0x68(%rbp)
  43f5ad:	8b 4d 90             	mov    -0x70(%rbp),%ecx
  43f5b0:	c1 e1 1e             	shl    $0x1e,%ecx
  43f5b3:	8b 55 90             	mov    -0x70(%rbp),%edx
  43f5b6:	c1 ea 02             	shr    $0x2,%edx
  43f5b9:	09 d1                	or     %edx,%ecx
  43f5bb:	89 4d 90             	mov    %ecx,-0x70(%rbp)
  43f5be:	8b 4d 98             	mov    -0x68(%rbp),%ecx
  43f5c1:	c1 e1 05             	shl    $0x5,%ecx
  43f5c4:	8b 55 98             	mov    -0x68(%rbp),%edx
  43f5c7:	c1 ea 1b             	shr    $0x1b,%edx
  43f5ca:	09 d1                	or     %edx,%ecx
  43f5cc:	8b 55 94             	mov    -0x6c(%rbp),%edx
  43f5cf:	33 55 90             	xor    -0x70(%rbp),%edx
  43f5d2:	33 55 8c             	xor    -0x74(%rbp),%edx
  43f5d5:	01 d1                	add    %edx,%ecx
  43f5d7:	81 c1 d6 c1 62 ca    	add    $0xca62c1d6,%ecx
  43f5dd:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  43f5e0:	33 55 c0             	xor    -0x40(%rbp),%edx
  43f5e3:	33 55 a8             	xor    -0x58(%rbp),%edx
  43f5e6:	33 55 a0             	xor    -0x60(%rbp),%edx
  43f5e9:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43f5ec:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43f5ef:	c1 e2 01             	shl    $0x1,%edx
  43f5f2:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43f5f5:	c1 ee 1f             	shr    $0x1f,%esi
  43f5f8:	09 f2                	or     %esi,%edx
  43f5fa:	89 55 a0             	mov    %edx,-0x60(%rbp)
  43f5fd:	01 d1                	add    %edx,%ecx
  43f5ff:	03 4d 9c             	add    -0x64(%rbp),%ecx
  43f602:	89 4d 9c             	mov    %ecx,-0x64(%rbp)
  43f605:	8b 4d 94             	mov    -0x6c(%rbp),%ecx
  43f608:	c1 e1 1e             	shl    $0x1e,%ecx
  43f60b:	8b 55 94             	mov    -0x6c(%rbp),%edx
  43f60e:	c1 ea 02             	shr    $0x2,%edx
  43f611:	09 d1                	or     %edx,%ecx
  43f613:	89 4d 94             	mov    %ecx,-0x6c(%rbp)
  43f616:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
  43f619:	c1 e1 05             	shl    $0x5,%ecx
  43f61c:	8b 55 9c             	mov    -0x64(%rbp),%edx
  43f61f:	c1 ea 1b             	shr    $0x1b,%edx
  43f622:	09 d1                	or     %edx,%ecx
  43f624:	8b 55 98             	mov    -0x68(%rbp),%edx
  43f627:	33 55 94             	xor    -0x6c(%rbp),%edx
  43f62a:	33 55 90             	xor    -0x70(%rbp),%edx
  43f62d:	01 d1                	add    %edx,%ecx
  43f62f:	81 c1 d6 c1 62 ca    	add    $0xca62c1d6,%ecx
  43f635:	8b 55 d8             	mov    -0x28(%rbp),%edx
  43f638:	33 55 c4             	xor    -0x3c(%rbp),%edx
  43f63b:	33 55 ac             	xor    -0x54(%rbp),%edx
  43f63e:	33 55 a4             	xor    -0x5c(%rbp),%edx
  43f641:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43f644:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43f647:	c1 e2 01             	shl    $0x1,%edx
  43f64a:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43f64d:	c1 ee 1f             	shr    $0x1f,%esi
  43f650:	09 f2                	or     %esi,%edx
  43f652:	89 55 a4             	mov    %edx,-0x5c(%rbp)
  43f655:	01 d1                	add    %edx,%ecx
  43f657:	03 4d 8c             	add    -0x74(%rbp),%ecx
  43f65a:	89 4d 8c             	mov    %ecx,-0x74(%rbp)
  43f65d:	8b 4d 98             	mov    -0x68(%rbp),%ecx
  43f660:	c1 e1 1e             	shl    $0x1e,%ecx
  43f663:	8b 55 98             	mov    -0x68(%rbp),%edx
  43f666:	c1 ea 02             	shr    $0x2,%edx
  43f669:	09 d1                	or     %edx,%ecx
  43f66b:	89 4d 98             	mov    %ecx,-0x68(%rbp)
  43f66e:	8b 4d 8c             	mov    -0x74(%rbp),%ecx
  43f671:	c1 e1 05             	shl    $0x5,%ecx
  43f674:	8b 55 8c             	mov    -0x74(%rbp),%edx
  43f677:	c1 ea 1b             	shr    $0x1b,%edx
  43f67a:	09 d1                	or     %edx,%ecx
  43f67c:	8b 55 9c             	mov    -0x64(%rbp),%edx
  43f67f:	33 55 98             	xor    -0x68(%rbp),%edx
  43f682:	33 55 94             	xor    -0x6c(%rbp),%edx
  43f685:	01 d1                	add    %edx,%ecx
  43f687:	81 c1 d6 c1 62 ca    	add    $0xca62c1d6,%ecx
  43f68d:	8b 55 dc             	mov    -0x24(%rbp),%edx
  43f690:	33 55 c8             	xor    -0x38(%rbp),%edx
  43f693:	33 55 b0             	xor    -0x50(%rbp),%edx
  43f696:	33 55 a8             	xor    -0x58(%rbp),%edx
  43f699:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43f69c:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43f69f:	c1 e2 01             	shl    $0x1,%edx
  43f6a2:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43f6a5:	c1 ee 1f             	shr    $0x1f,%esi
  43f6a8:	09 f2                	or     %esi,%edx
  43f6aa:	89 55 a8             	mov    %edx,-0x58(%rbp)
  43f6ad:	01 d1                	add    %edx,%ecx
  43f6af:	03 4d 90             	add    -0x70(%rbp),%ecx
  43f6b2:	89 4d 90             	mov    %ecx,-0x70(%rbp)
  43f6b5:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
  43f6b8:	c1 e1 1e             	shl    $0x1e,%ecx
  43f6bb:	8b 55 9c             	mov    -0x64(%rbp),%edx
  43f6be:	c1 ea 02             	shr    $0x2,%edx
  43f6c1:	09 d1                	or     %edx,%ecx
  43f6c3:	89 4d 9c             	mov    %ecx,-0x64(%rbp)
  43f6c6:	8b 4d 90             	mov    -0x70(%rbp),%ecx
  43f6c9:	c1 e1 05             	shl    $0x5,%ecx
  43f6cc:	8b 55 90             	mov    -0x70(%rbp),%edx
  43f6cf:	c1 ea 1b             	shr    $0x1b,%edx
  43f6d2:	09 d1                	or     %edx,%ecx
  43f6d4:	8b 55 8c             	mov    -0x74(%rbp),%edx
  43f6d7:	33 55 9c             	xor    -0x64(%rbp),%edx
  43f6da:	33 55 98             	xor    -0x68(%rbp),%edx
  43f6dd:	01 d1                	add    %edx,%ecx
  43f6df:	81 c1 d6 c1 62 ca    	add    $0xca62c1d6,%ecx
  43f6e5:	8b 55 a0             	mov    -0x60(%rbp),%edx
  43f6e8:	33 55 cc             	xor    -0x34(%rbp),%edx
  43f6eb:	33 55 b4             	xor    -0x4c(%rbp),%edx
  43f6ee:	33 55 ac             	xor    -0x54(%rbp),%edx
  43f6f1:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43f6f4:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43f6f7:	c1 e2 01             	shl    $0x1,%edx
  43f6fa:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43f6fd:	c1 ee 1f             	shr    $0x1f,%esi
  43f700:	09 f2                	or     %esi,%edx
  43f702:	89 55 ac             	mov    %edx,-0x54(%rbp)
  43f705:	01 d1                	add    %edx,%ecx
  43f707:	03 4d 94             	add    -0x6c(%rbp),%ecx
  43f70a:	89 4d 94             	mov    %ecx,-0x6c(%rbp)
  43f70d:	8b 4d 8c             	mov    -0x74(%rbp),%ecx
  43f710:	c1 e1 1e             	shl    $0x1e,%ecx
  43f713:	8b 55 8c             	mov    -0x74(%rbp),%edx
  43f716:	c1 ea 02             	shr    $0x2,%edx
  43f719:	09 d1                	or     %edx,%ecx
  43f71b:	89 4d 8c             	mov    %ecx,-0x74(%rbp)
  43f71e:	8b 4d 94             	mov    -0x6c(%rbp),%ecx
  43f721:	c1 e1 05             	shl    $0x5,%ecx
  43f724:	8b 55 94             	mov    -0x6c(%rbp),%edx
  43f727:	c1 ea 1b             	shr    $0x1b,%edx
  43f72a:	09 d1                	or     %edx,%ecx
  43f72c:	8b 55 90             	mov    -0x70(%rbp),%edx
  43f72f:	33 55 8c             	xor    -0x74(%rbp),%edx
  43f732:	33 55 9c             	xor    -0x64(%rbp),%edx
  43f735:	01 d1                	add    %edx,%ecx
  43f737:	81 c1 d6 c1 62 ca    	add    $0xca62c1d6,%ecx
  43f73d:	8b 55 a4             	mov    -0x5c(%rbp),%edx
  43f740:	33 55 d0             	xor    -0x30(%rbp),%edx
  43f743:	33 55 b8             	xor    -0x48(%rbp),%edx
  43f746:	33 55 b0             	xor    -0x50(%rbp),%edx
  43f749:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43f74c:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43f74f:	c1 e2 01             	shl    $0x1,%edx
  43f752:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43f755:	c1 ee 1f             	shr    $0x1f,%esi
  43f758:	09 f2                	or     %esi,%edx
  43f75a:	89 55 b0             	mov    %edx,-0x50(%rbp)
  43f75d:	01 d1                	add    %edx,%ecx
  43f75f:	03 4d 98             	add    -0x68(%rbp),%ecx
  43f762:	89 4d 98             	mov    %ecx,-0x68(%rbp)
  43f765:	8b 4d 90             	mov    -0x70(%rbp),%ecx
  43f768:	c1 e1 1e             	shl    $0x1e,%ecx
  43f76b:	8b 55 90             	mov    -0x70(%rbp),%edx
  43f76e:	c1 ea 02             	shr    $0x2,%edx
  43f771:	09 d1                	or     %edx,%ecx
  43f773:	89 4d 90             	mov    %ecx,-0x70(%rbp)
  43f776:	8b 4d 98             	mov    -0x68(%rbp),%ecx
  43f779:	c1 e1 05             	shl    $0x5,%ecx
  43f77c:	8b 55 98             	mov    -0x68(%rbp),%edx
  43f77f:	c1 ea 1b             	shr    $0x1b,%edx
  43f782:	09 d1                	or     %edx,%ecx
  43f784:	8b 55 94             	mov    -0x6c(%rbp),%edx
  43f787:	33 55 90             	xor    -0x70(%rbp),%edx
  43f78a:	33 55 8c             	xor    -0x74(%rbp),%edx
  43f78d:	01 d1                	add    %edx,%ecx
  43f78f:	81 c1 d6 c1 62 ca    	add    $0xca62c1d6,%ecx
  43f795:	8b 55 a8             	mov    -0x58(%rbp),%edx
  43f798:	33 55 d4             	xor    -0x2c(%rbp),%edx
  43f79b:	33 55 bc             	xor    -0x44(%rbp),%edx
  43f79e:	33 55 b4             	xor    -0x4c(%rbp),%edx
  43f7a1:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43f7a4:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43f7a7:	c1 e2 01             	shl    $0x1,%edx
  43f7aa:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43f7ad:	c1 ee 1f             	shr    $0x1f,%esi
  43f7b0:	09 f2                	or     %esi,%edx
  43f7b2:	89 55 b4             	mov    %edx,-0x4c(%rbp)
  43f7b5:	01 d1                	add    %edx,%ecx
  43f7b7:	03 4d 9c             	add    -0x64(%rbp),%ecx
  43f7ba:	89 4d 9c             	mov    %ecx,-0x64(%rbp)
  43f7bd:	8b 4d 94             	mov    -0x6c(%rbp),%ecx
  43f7c0:	c1 e1 1e             	shl    $0x1e,%ecx
  43f7c3:	8b 55 94             	mov    -0x6c(%rbp),%edx
  43f7c6:	c1 ea 02             	shr    $0x2,%edx
  43f7c9:	09 d1                	or     %edx,%ecx
  43f7cb:	89 4d 94             	mov    %ecx,-0x6c(%rbp)
  43f7ce:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
  43f7d1:	c1 e1 05             	shl    $0x5,%ecx
  43f7d4:	8b 55 9c             	mov    -0x64(%rbp),%edx
  43f7d7:	c1 ea 1b             	shr    $0x1b,%edx
  43f7da:	09 d1                	or     %edx,%ecx
  43f7dc:	8b 55 98             	mov    -0x68(%rbp),%edx
  43f7df:	33 55 94             	xor    -0x6c(%rbp),%edx
  43f7e2:	33 55 90             	xor    -0x70(%rbp),%edx
  43f7e5:	01 d1                	add    %edx,%ecx
  43f7e7:	81 c1 d6 c1 62 ca    	add    $0xca62c1d6,%ecx
  43f7ed:	8b 55 ac             	mov    -0x54(%rbp),%edx
  43f7f0:	33 55 d8             	xor    -0x28(%rbp),%edx
  43f7f3:	33 55 c0             	xor    -0x40(%rbp),%edx
  43f7f6:	33 55 b8             	xor    -0x48(%rbp),%edx
  43f7f9:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43f7fc:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43f7ff:	c1 e2 01             	shl    $0x1,%edx
  43f802:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43f805:	c1 ee 1f             	shr    $0x1f,%esi
  43f808:	09 f2                	or     %esi,%edx
  43f80a:	89 55 b8             	mov    %edx,-0x48(%rbp)
  43f80d:	01 d1                	add    %edx,%ecx
  43f80f:	03 4d 8c             	add    -0x74(%rbp),%ecx
  43f812:	89 4d 8c             	mov    %ecx,-0x74(%rbp)
  43f815:	8b 4d 98             	mov    -0x68(%rbp),%ecx
  43f818:	c1 e1 1e             	shl    $0x1e,%ecx
  43f81b:	8b 55 98             	mov    -0x68(%rbp),%edx
  43f81e:	c1 ea 02             	shr    $0x2,%edx
  43f821:	09 d1                	or     %edx,%ecx
  43f823:	89 4d 98             	mov    %ecx,-0x68(%rbp)
  43f826:	8b 4d 8c             	mov    -0x74(%rbp),%ecx
  43f829:	c1 e1 05             	shl    $0x5,%ecx
  43f82c:	8b 55 8c             	mov    -0x74(%rbp),%edx
  43f82f:	c1 ea 1b             	shr    $0x1b,%edx
  43f832:	09 d1                	or     %edx,%ecx
  43f834:	8b 55 9c             	mov    -0x64(%rbp),%edx
  43f837:	33 55 98             	xor    -0x68(%rbp),%edx
  43f83a:	33 55 94             	xor    -0x6c(%rbp),%edx
  43f83d:	01 d1                	add    %edx,%ecx
  43f83f:	81 c1 d6 c1 62 ca    	add    $0xca62c1d6,%ecx
  43f845:	8b 55 b0             	mov    -0x50(%rbp),%edx
  43f848:	33 55 dc             	xor    -0x24(%rbp),%edx
  43f84b:	33 55 c4             	xor    -0x3c(%rbp),%edx
  43f84e:	33 55 bc             	xor    -0x44(%rbp),%edx
  43f851:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43f854:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43f857:	c1 e2 01             	shl    $0x1,%edx
  43f85a:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43f85d:	c1 ee 1f             	shr    $0x1f,%esi
  43f860:	09 f2                	or     %esi,%edx
  43f862:	89 55 bc             	mov    %edx,-0x44(%rbp)
  43f865:	01 d1                	add    %edx,%ecx
  43f867:	03 4d 90             	add    -0x70(%rbp),%ecx
  43f86a:	89 4d 90             	mov    %ecx,-0x70(%rbp)
  43f86d:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
  43f870:	c1 e1 1e             	shl    $0x1e,%ecx
  43f873:	8b 55 9c             	mov    -0x64(%rbp),%edx
  43f876:	c1 ea 02             	shr    $0x2,%edx
  43f879:	09 d1                	or     %edx,%ecx
  43f87b:	89 4d 9c             	mov    %ecx,-0x64(%rbp)
  43f87e:	8b 4d 90             	mov    -0x70(%rbp),%ecx
  43f881:	c1 e1 05             	shl    $0x5,%ecx
  43f884:	8b 55 90             	mov    -0x70(%rbp),%edx
  43f887:	c1 ea 1b             	shr    $0x1b,%edx
  43f88a:	09 d1                	or     %edx,%ecx
  43f88c:	8b 55 8c             	mov    -0x74(%rbp),%edx
  43f88f:	33 55 9c             	xor    -0x64(%rbp),%edx
  43f892:	33 55 98             	xor    -0x68(%rbp),%edx
  43f895:	01 d1                	add    %edx,%ecx
  43f897:	81 c1 d6 c1 62 ca    	add    $0xca62c1d6,%ecx
  43f89d:	8b 55 b4             	mov    -0x4c(%rbp),%edx
  43f8a0:	33 55 a0             	xor    -0x60(%rbp),%edx
  43f8a3:	33 55 c8             	xor    -0x38(%rbp),%edx
  43f8a6:	33 55 c0             	xor    -0x40(%rbp),%edx
  43f8a9:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43f8ac:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43f8af:	c1 e2 01             	shl    $0x1,%edx
  43f8b2:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43f8b5:	c1 ee 1f             	shr    $0x1f,%esi
  43f8b8:	09 f2                	or     %esi,%edx
  43f8ba:	89 55 c0             	mov    %edx,-0x40(%rbp)
  43f8bd:	01 d1                	add    %edx,%ecx
  43f8bf:	03 4d 94             	add    -0x6c(%rbp),%ecx
  43f8c2:	89 4d 94             	mov    %ecx,-0x6c(%rbp)
  43f8c5:	8b 4d 8c             	mov    -0x74(%rbp),%ecx
  43f8c8:	c1 e1 1e             	shl    $0x1e,%ecx
  43f8cb:	8b 55 8c             	mov    -0x74(%rbp),%edx
  43f8ce:	c1 ea 02             	shr    $0x2,%edx
  43f8d1:	09 d1                	or     %edx,%ecx
  43f8d3:	89 4d 8c             	mov    %ecx,-0x74(%rbp)
  43f8d6:	8b 4d 94             	mov    -0x6c(%rbp),%ecx
  43f8d9:	c1 e1 05             	shl    $0x5,%ecx
  43f8dc:	8b 55 94             	mov    -0x6c(%rbp),%edx
  43f8df:	c1 ea 1b             	shr    $0x1b,%edx
  43f8e2:	09 d1                	or     %edx,%ecx
  43f8e4:	8b 55 90             	mov    -0x70(%rbp),%edx
  43f8e7:	33 55 8c             	xor    -0x74(%rbp),%edx
  43f8ea:	33 55 9c             	xor    -0x64(%rbp),%edx
  43f8ed:	01 d1                	add    %edx,%ecx
  43f8ef:	81 c1 d6 c1 62 ca    	add    $0xca62c1d6,%ecx
  43f8f5:	8b 55 b8             	mov    -0x48(%rbp),%edx
  43f8f8:	33 55 a4             	xor    -0x5c(%rbp),%edx
  43f8fb:	33 55 cc             	xor    -0x34(%rbp),%edx
  43f8fe:	33 55 c4             	xor    -0x3c(%rbp),%edx
  43f901:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43f904:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43f907:	c1 e2 01             	shl    $0x1,%edx
  43f90a:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43f90d:	c1 ee 1f             	shr    $0x1f,%esi
  43f910:	09 f2                	or     %esi,%edx
  43f912:	89 55 c4             	mov    %edx,-0x3c(%rbp)
  43f915:	01 d1                	add    %edx,%ecx
  43f917:	03 4d 98             	add    -0x68(%rbp),%ecx
  43f91a:	89 4d 98             	mov    %ecx,-0x68(%rbp)
  43f91d:	8b 4d 90             	mov    -0x70(%rbp),%ecx
  43f920:	c1 e1 1e             	shl    $0x1e,%ecx
  43f923:	8b 55 90             	mov    -0x70(%rbp),%edx
  43f926:	c1 ea 02             	shr    $0x2,%edx
  43f929:	09 d1                	or     %edx,%ecx
  43f92b:	89 4d 90             	mov    %ecx,-0x70(%rbp)
  43f92e:	8b 4d 98             	mov    -0x68(%rbp),%ecx
  43f931:	c1 e1 05             	shl    $0x5,%ecx
  43f934:	8b 55 98             	mov    -0x68(%rbp),%edx
  43f937:	c1 ea 1b             	shr    $0x1b,%edx
  43f93a:	09 d1                	or     %edx,%ecx
  43f93c:	8b 55 94             	mov    -0x6c(%rbp),%edx
  43f93f:	33 55 90             	xor    -0x70(%rbp),%edx
  43f942:	33 55 8c             	xor    -0x74(%rbp),%edx
  43f945:	01 d1                	add    %edx,%ecx
  43f947:	81 c1 d6 c1 62 ca    	add    $0xca62c1d6,%ecx
  43f94d:	8b 55 bc             	mov    -0x44(%rbp),%edx
  43f950:	33 55 a8             	xor    -0x58(%rbp),%edx
  43f953:	33 55 d0             	xor    -0x30(%rbp),%edx
  43f956:	33 55 c8             	xor    -0x38(%rbp),%edx
  43f959:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43f95c:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43f95f:	c1 e2 01             	shl    $0x1,%edx
  43f962:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43f965:	c1 ee 1f             	shr    $0x1f,%esi
  43f968:	09 f2                	or     %esi,%edx
  43f96a:	89 55 c8             	mov    %edx,-0x38(%rbp)
  43f96d:	01 d1                	add    %edx,%ecx
  43f96f:	03 4d 9c             	add    -0x64(%rbp),%ecx
  43f972:	89 4d 9c             	mov    %ecx,-0x64(%rbp)
  43f975:	8b 4d 94             	mov    -0x6c(%rbp),%ecx
  43f978:	c1 e1 1e             	shl    $0x1e,%ecx
  43f97b:	8b 55 94             	mov    -0x6c(%rbp),%edx
  43f97e:	c1 ea 02             	shr    $0x2,%edx
  43f981:	09 d1                	or     %edx,%ecx
  43f983:	89 4d 94             	mov    %ecx,-0x6c(%rbp)
  43f986:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
  43f989:	c1 e1 05             	shl    $0x5,%ecx
  43f98c:	8b 55 9c             	mov    -0x64(%rbp),%edx
  43f98f:	c1 ea 1b             	shr    $0x1b,%edx
  43f992:	09 d1                	or     %edx,%ecx
  43f994:	8b 55 98             	mov    -0x68(%rbp),%edx
  43f997:	33 55 94             	xor    -0x6c(%rbp),%edx
  43f99a:	33 55 90             	xor    -0x70(%rbp),%edx
  43f99d:	01 d1                	add    %edx,%ecx
  43f99f:	81 c1 d6 c1 62 ca    	add    $0xca62c1d6,%ecx
  43f9a5:	8b 55 c0             	mov    -0x40(%rbp),%edx
  43f9a8:	33 55 ac             	xor    -0x54(%rbp),%edx
  43f9ab:	33 55 d4             	xor    -0x2c(%rbp),%edx
  43f9ae:	33 55 cc             	xor    -0x34(%rbp),%edx
  43f9b1:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43f9b4:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43f9b7:	c1 e2 01             	shl    $0x1,%edx
  43f9ba:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43f9bd:	c1 ee 1f             	shr    $0x1f,%esi
  43f9c0:	09 f2                	or     %esi,%edx
  43f9c2:	89 55 cc             	mov    %edx,-0x34(%rbp)
  43f9c5:	01 d1                	add    %edx,%ecx
  43f9c7:	03 4d 8c             	add    -0x74(%rbp),%ecx
  43f9ca:	89 4d 8c             	mov    %ecx,-0x74(%rbp)
  43f9cd:	8b 4d 98             	mov    -0x68(%rbp),%ecx
  43f9d0:	c1 e1 1e             	shl    $0x1e,%ecx
  43f9d3:	8b 55 98             	mov    -0x68(%rbp),%edx
  43f9d6:	c1 ea 02             	shr    $0x2,%edx
  43f9d9:	09 d1                	or     %edx,%ecx
  43f9db:	89 4d 98             	mov    %ecx,-0x68(%rbp)
  43f9de:	8b 4d 8c             	mov    -0x74(%rbp),%ecx
  43f9e1:	c1 e1 05             	shl    $0x5,%ecx
  43f9e4:	8b 55 8c             	mov    -0x74(%rbp),%edx
  43f9e7:	c1 ea 1b             	shr    $0x1b,%edx
  43f9ea:	09 d1                	or     %edx,%ecx
  43f9ec:	8b 55 9c             	mov    -0x64(%rbp),%edx
  43f9ef:	33 55 98             	xor    -0x68(%rbp),%edx
  43f9f2:	33 55 94             	xor    -0x6c(%rbp),%edx
  43f9f5:	01 d1                	add    %edx,%ecx
  43f9f7:	81 c1 d6 c1 62 ca    	add    $0xca62c1d6,%ecx
  43f9fd:	8b 55 c4             	mov    -0x3c(%rbp),%edx
  43fa00:	33 55 b0             	xor    -0x50(%rbp),%edx
  43fa03:	33 55 d8             	xor    -0x28(%rbp),%edx
  43fa06:	33 55 d0             	xor    -0x30(%rbp),%edx
  43fa09:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43fa0c:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43fa0f:	c1 e2 01             	shl    $0x1,%edx
  43fa12:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43fa15:	c1 ee 1f             	shr    $0x1f,%esi
  43fa18:	09 f2                	or     %esi,%edx
  43fa1a:	89 55 d0             	mov    %edx,-0x30(%rbp)
  43fa1d:	01 d1                	add    %edx,%ecx
  43fa1f:	03 4d 90             	add    -0x70(%rbp),%ecx
  43fa22:	89 4d 90             	mov    %ecx,-0x70(%rbp)
  43fa25:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
  43fa28:	c1 e1 1e             	shl    $0x1e,%ecx
  43fa2b:	8b 55 9c             	mov    -0x64(%rbp),%edx
  43fa2e:	c1 ea 02             	shr    $0x2,%edx
  43fa31:	09 d1                	or     %edx,%ecx
  43fa33:	89 4d 9c             	mov    %ecx,-0x64(%rbp)
  43fa36:	8b 4d 90             	mov    -0x70(%rbp),%ecx
  43fa39:	c1 e1 05             	shl    $0x5,%ecx
  43fa3c:	8b 55 90             	mov    -0x70(%rbp),%edx
  43fa3f:	c1 ea 1b             	shr    $0x1b,%edx
  43fa42:	09 d1                	or     %edx,%ecx
  43fa44:	8b 55 8c             	mov    -0x74(%rbp),%edx
  43fa47:	33 55 9c             	xor    -0x64(%rbp),%edx
  43fa4a:	33 55 98             	xor    -0x68(%rbp),%edx
  43fa4d:	01 d1                	add    %edx,%ecx
  43fa4f:	81 c1 d6 c1 62 ca    	add    $0xca62c1d6,%ecx
  43fa55:	8b 55 c8             	mov    -0x38(%rbp),%edx
  43fa58:	33 55 b4             	xor    -0x4c(%rbp),%edx
  43fa5b:	33 55 dc             	xor    -0x24(%rbp),%edx
  43fa5e:	33 55 d4             	xor    -0x2c(%rbp),%edx
  43fa61:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43fa64:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43fa67:	c1 e2 01             	shl    $0x1,%edx
  43fa6a:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43fa6d:	c1 ee 1f             	shr    $0x1f,%esi
  43fa70:	09 f2                	or     %esi,%edx
  43fa72:	89 55 d4             	mov    %edx,-0x2c(%rbp)
  43fa75:	01 d1                	add    %edx,%ecx
  43fa77:	03 4d 94             	add    -0x6c(%rbp),%ecx
  43fa7a:	89 4d 94             	mov    %ecx,-0x6c(%rbp)
  43fa7d:	8b 4d 8c             	mov    -0x74(%rbp),%ecx
  43fa80:	c1 e1 1e             	shl    $0x1e,%ecx
  43fa83:	8b 55 8c             	mov    -0x74(%rbp),%edx
  43fa86:	c1 ea 02             	shr    $0x2,%edx
  43fa89:	09 d1                	or     %edx,%ecx
  43fa8b:	89 4d 8c             	mov    %ecx,-0x74(%rbp)
  43fa8e:	8b 4d 94             	mov    -0x6c(%rbp),%ecx
  43fa91:	c1 e1 05             	shl    $0x5,%ecx
  43fa94:	8b 55 94             	mov    -0x6c(%rbp),%edx
  43fa97:	c1 ea 1b             	shr    $0x1b,%edx
  43fa9a:	09 d1                	or     %edx,%ecx
  43fa9c:	8b 55 90             	mov    -0x70(%rbp),%edx
  43fa9f:	33 55 8c             	xor    -0x74(%rbp),%edx
  43faa2:	33 55 9c             	xor    -0x64(%rbp),%edx
  43faa5:	01 d1                	add    %edx,%ecx
  43faa7:	81 c1 d6 c1 62 ca    	add    $0xca62c1d6,%ecx
  43faad:	8b 55 cc             	mov    -0x34(%rbp),%edx
  43fab0:	33 55 b8             	xor    -0x48(%rbp),%edx
  43fab3:	33 55 a0             	xor    -0x60(%rbp),%edx
  43fab6:	33 55 d8             	xor    -0x28(%rbp),%edx
  43fab9:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43fabc:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43fabf:	c1 e2 01             	shl    $0x1,%edx
  43fac2:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43fac5:	c1 ee 1f             	shr    $0x1f,%esi
  43fac8:	09 f2                	or     %esi,%edx
  43faca:	89 55 d8             	mov    %edx,-0x28(%rbp)
  43facd:	01 d1                	add    %edx,%ecx
  43facf:	03 4d 98             	add    -0x68(%rbp),%ecx
  43fad2:	89 4d 98             	mov    %ecx,-0x68(%rbp)
  43fad5:	8b 4d 90             	mov    -0x70(%rbp),%ecx
  43fad8:	c1 e1 1e             	shl    $0x1e,%ecx
  43fadb:	8b 55 90             	mov    -0x70(%rbp),%edx
  43fade:	c1 ea 02             	shr    $0x2,%edx
  43fae1:	09 d1                	or     %edx,%ecx
  43fae3:	89 4d 90             	mov    %ecx,-0x70(%rbp)
  43fae6:	8b 4d 98             	mov    -0x68(%rbp),%ecx
  43fae9:	c1 e1 05             	shl    $0x5,%ecx
  43faec:	8b 55 98             	mov    -0x68(%rbp),%edx
  43faef:	c1 ea 1b             	shr    $0x1b,%edx
  43faf2:	09 d1                	or     %edx,%ecx
  43faf4:	8b 55 94             	mov    -0x6c(%rbp),%edx
  43faf7:	33 55 90             	xor    -0x70(%rbp),%edx
  43fafa:	33 55 8c             	xor    -0x74(%rbp),%edx
  43fafd:	01 d1                	add    %edx,%ecx
  43faff:	81 c1 d6 c1 62 ca    	add    $0xca62c1d6,%ecx
  43fb05:	8b 55 d0             	mov    -0x30(%rbp),%edx
  43fb08:	33 55 bc             	xor    -0x44(%rbp),%edx
  43fb0b:	33 55 a4             	xor    -0x5c(%rbp),%edx
  43fb0e:	33 55 dc             	xor    -0x24(%rbp),%edx
  43fb11:	89 55 ec             	mov    %edx,-0x14(%rbp)
  43fb14:	8b 55 ec             	mov    -0x14(%rbp),%edx
  43fb17:	c1 e2 01             	shl    $0x1,%edx
  43fb1a:	8b 75 ec             	mov    -0x14(%rbp),%esi
  43fb1d:	c1 ee 1f             	shr    $0x1f,%esi
  43fb20:	09 f2                	or     %esi,%edx
  43fb22:	89 55 dc             	mov    %edx,-0x24(%rbp)
  43fb25:	01 d1                	add    %edx,%ecx
  43fb27:	03 4d 9c             	add    -0x64(%rbp),%ecx
  43fb2a:	89 4d 9c             	mov    %ecx,-0x64(%rbp)
  43fb2d:	8b 4d 94             	mov    -0x6c(%rbp),%ecx
  43fb30:	c1 e1 1e             	shl    $0x1e,%ecx
  43fb33:	8b 55 94             	mov    -0x6c(%rbp),%edx
  43fb36:	c1 ea 02             	shr    $0x2,%edx
  43fb39:	09 d1                	or     %edx,%ecx
  43fb3b:	89 4d 94             	mov    %ecx,-0x6c(%rbp)
  43fb3e:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
  43fb41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43fb45:	03 48 08             	add    0x8(%rax),%ecx
  43fb48:	89 48 08             	mov    %ecx,0x8(%rax)
  43fb4b:	8b 4d 98             	mov    -0x68(%rbp),%ecx
  43fb4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43fb52:	03 48 0c             	add    0xc(%rax),%ecx
  43fb55:	89 48 0c             	mov    %ecx,0xc(%rax)
  43fb58:	8b 4d 94             	mov    -0x6c(%rbp),%ecx
  43fb5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43fb5f:	03 48 10             	add    0x10(%rax),%ecx
  43fb62:	89 48 10             	mov    %ecx,0x10(%rax)
  43fb65:	8b 4d 90             	mov    -0x70(%rbp),%ecx
  43fb68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43fb6c:	03 48 14             	add    0x14(%rax),%ecx
  43fb6f:	89 48 14             	mov    %ecx,0x14(%rax)
  43fb72:	8b 4d 8c             	mov    -0x74(%rbp),%ecx
  43fb75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43fb79:	03 48 18             	add    0x18(%rax),%ecx
  43fb7c:	89 48 18             	mov    %ecx,0x18(%rax)
  43fb7f:	e8 d2 5d 00 00       	callq  445956 <writeback_cache>
  43fb84:	31 c0                	xor    %eax,%eax
  43fb86:	48 81 c4 80 00 00 00 	add    $0x80,%rsp
  43fb8d:	5d                   	pop    %rbp
  43fb8e:	c3                   	retq   
  43fb8f:	90                   	nop

000000000043fb90 <mbedtls_sha1_update_ret>:
  43fb90:	55                   	push   %rbp
  43fb91:	48 89 e5             	mov    %rsp,%rbp
  43fb94:	48 83 ec 40          	sub    $0x40,%rsp
  43fb98:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  43fb9c:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  43fba0:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
  43fba4:	eb 00                	jmp    43fba6 <mbedtls_sha1_update_ret+0x16>
  43fba6:	eb 00                	jmp    43fba8 <mbedtls_sha1_update_ret+0x18>
  43fba8:	eb 00                	jmp    43fbaa <mbedtls_sha1_update_ret+0x1a>
  43fbaa:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  43fbaf:	75 0c                	jne    43fbbd <mbedtls_sha1_update_ret+0x2d>
  43fbb1:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  43fbb8:	e9 36 01 00 00       	jmpq   43fcf3 <mbedtls_sha1_update_ret+0x163>
  43fbbd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43fbc1:	8b 08                	mov    (%rax),%ecx
  43fbc3:	83 e1 3f             	and    $0x3f,%ecx
  43fbc6:	89 4d cc             	mov    %ecx,-0x34(%rbp)
  43fbc9:	b9 40 00 00 00       	mov    $0x40,%ecx
  43fbce:	2b 4d cc             	sub    -0x34(%rbp),%ecx
  43fbd1:	89 c9                	mov    %ecx,%ecx
  43fbd3:	89 c8                	mov    %ecx,%eax
  43fbd5:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  43fbd9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  43fbdd:	89 c1                	mov    %eax,%ecx
  43fbdf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43fbe3:	03 08                	add    (%rax),%ecx
  43fbe5:	89 08                	mov    %ecx,(%rax)
  43fbe7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43fbeb:	8b 08                	mov    (%rax),%ecx
  43fbed:	89 08                	mov    %ecx,(%rax)
  43fbef:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43fbf3:	8b 08                	mov    (%rax),%ecx
  43fbf5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  43fbf9:	89 c2                	mov    %eax,%edx
  43fbfb:	39 d1                	cmp    %edx,%ecx
  43fbfd:	73 0d                	jae    43fc0c <mbedtls_sha1_update_ret+0x7c>
  43fbff:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43fc03:	8b 48 04             	mov    0x4(%rax),%ecx
  43fc06:	83 c1 01             	add    $0x1,%ecx
  43fc09:	89 48 04             	mov    %ecx,0x4(%rax)
  43fc0c:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
  43fc10:	74 73                	je     43fc85 <mbedtls_sha1_update_ret+0xf5>
  43fc12:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  43fc16:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
  43fc1a:	72 69                	jb     43fc85 <mbedtls_sha1_update_ret+0xf5>
  43fc1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43fc20:	48 83 c0 1c          	add    $0x1c,%rax
  43fc24:	8b 4d cc             	mov    -0x34(%rbp),%ecx
  43fc27:	89 ca                	mov    %ecx,%edx
  43fc29:	48 01 d0             	add    %rdx,%rax
  43fc2c:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  43fc30:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  43fc34:	48 89 c7             	mov    %rax,%rdi
  43fc37:	e8 34 15 fc ff       	callq  401170 <memcpy@plt>
  43fc3c:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  43fc40:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43fc44:	48 83 c0 1c          	add    $0x1c,%rax
  43fc48:	48 89 c6             	mov    %rax,%rsi
  43fc4b:	e8 a0 e0 ff ff       	callq  43dcf0 <mbedtls_internal_sha1_process>
  43fc50:	89 45 dc             	mov    %eax,-0x24(%rbp)
  43fc53:	83 f8 00             	cmp    $0x0,%eax
  43fc56:	74 0b                	je     43fc63 <mbedtls_sha1_update_ret+0xd3>
  43fc58:	8b 45 dc             	mov    -0x24(%rbp),%eax
  43fc5b:	89 45 fc             	mov    %eax,-0x4(%rbp)
  43fc5e:	e9 90 00 00 00       	jmpq   43fcf3 <mbedtls_sha1_update_ret+0x163>
  43fc63:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  43fc67:	48 03 45 e8          	add    -0x18(%rbp),%rax
  43fc6b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  43fc6f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  43fc73:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  43fc77:	48 29 c1             	sub    %rax,%rcx
  43fc7a:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  43fc7e:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
  43fc85:	eb 00                	jmp    43fc87 <mbedtls_sha1_update_ret+0xf7>
  43fc87:	48 83 7d e0 40       	cmpq   $0x40,-0x20(%rbp)
  43fc8c:	72 37                	jb     43fcc5 <mbedtls_sha1_update_ret+0x135>
  43fc8e:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  43fc92:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  43fc96:	e8 55 e0 ff ff       	callq  43dcf0 <mbedtls_internal_sha1_process>
  43fc9b:	89 45 dc             	mov    %eax,-0x24(%rbp)
  43fc9e:	83 f8 00             	cmp    $0x0,%eax
  43fca1:	74 08                	je     43fcab <mbedtls_sha1_update_ret+0x11b>
  43fca3:	8b 45 dc             	mov    -0x24(%rbp),%eax
  43fca6:	89 45 fc             	mov    %eax,-0x4(%rbp)
  43fca9:	eb 48                	jmp    43fcf3 <mbedtls_sha1_update_ret+0x163>
  43fcab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43fcaf:	48 83 c0 40          	add    $0x40,%rax
  43fcb3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  43fcb7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  43fcbb:	48 83 e8 40          	sub    $0x40,%rax
  43fcbf:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  43fcc3:	eb c2                	jmp    43fc87 <mbedtls_sha1_update_ret+0xf7>
  43fcc5:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  43fcca:	76 20                	jbe    43fcec <mbedtls_sha1_update_ret+0x15c>
  43fccc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43fcd0:	48 83 c0 1c          	add    $0x1c,%rax
  43fcd4:	8b 4d cc             	mov    -0x34(%rbp),%ecx
  43fcd7:	89 ca                	mov    %ecx,%edx
  43fcd9:	48 01 d0             	add    %rdx,%rax
  43fcdc:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  43fce0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  43fce4:	48 89 c7             	mov    %rax,%rdi
  43fce7:	e8 84 14 fc ff       	callq  401170 <memcpy@plt>
  43fcec:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  43fcf3:	8b 45 fc             	mov    -0x4(%rbp),%eax
  43fcf6:	89 45 c8             	mov    %eax,-0x38(%rbp)
  43fcf9:	e8 58 5c 00 00       	callq  445956 <writeback_cache>
  43fcfe:	8b 45 c8             	mov    -0x38(%rbp),%eax
  43fd01:	48 83 c4 40          	add    $0x40,%rsp
  43fd05:	5d                   	pop    %rbp
  43fd06:	c3                   	retq   
  43fd07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  43fd0e:	00 00 

000000000043fd10 <mbedtls_sha1_finish_ret>:
  43fd10:	55                   	push   %rbp
  43fd11:	48 89 e5             	mov    %rsp,%rbp
  43fd14:	48 83 ec 30          	sub    $0x30,%rsp
  43fd18:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  43fd1c:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  43fd20:	eb 00                	jmp    43fd22 <mbedtls_sha1_finish_ret+0x12>
  43fd22:	eb 00                	jmp    43fd24 <mbedtls_sha1_finish_ret+0x14>
  43fd24:	eb 00                	jmp    43fd26 <mbedtls_sha1_finish_ret+0x16>
  43fd26:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43fd2a:	8b 08                	mov    (%rax),%ecx
  43fd2c:	83 e1 3f             	and    $0x3f,%ecx
  43fd2f:	89 4d e0             	mov    %ecx,-0x20(%rbp)
  43fd32:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43fd36:	8b 4d e0             	mov    -0x20(%rbp),%ecx
  43fd39:	89 ca                	mov    %ecx,%edx
  43fd3b:	83 c2 01             	add    $0x1,%edx
  43fd3e:	89 55 e0             	mov    %edx,-0x20(%rbp)
  43fd41:	89 c9                	mov    %ecx,%ecx
  43fd43:	89 ce                	mov    %ecx,%esi
  43fd45:	c6 44 30 1c 80       	movb   $0x80,0x1c(%rax,%rsi,1)
  43fd4a:	83 7d e0 38          	cmpl   $0x38,-0x20(%rbp)
  43fd4e:	77 28                	ja     43fd78 <mbedtls_sha1_finish_ret+0x68>
  43fd50:	31 f6                	xor    %esi,%esi
  43fd52:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43fd56:	48 83 c0 1c          	add    $0x1c,%rax
  43fd5a:	8b 4d e0             	mov    -0x20(%rbp),%ecx
  43fd5d:	89 ca                	mov    %ecx,%edx
  43fd5f:	48 01 d0             	add    %rdx,%rax
  43fd62:	b9 38 00 00 00       	mov    $0x38,%ecx
  43fd67:	2b 4d e0             	sub    -0x20(%rbp),%ecx
  43fd6a:	89 c9                	mov    %ecx,%ecx
  43fd6c:	89 ca                	mov    %ecx,%edx
  43fd6e:	48 89 c7             	mov    %rax,%rdi
  43fd71:	e8 aa 12 fc ff       	callq  401020 <memset@plt>
  43fd76:	eb 66                	jmp    43fdde <mbedtls_sha1_finish_ret+0xce>
  43fd78:	31 f6                	xor    %esi,%esi
  43fd7a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43fd7e:	48 83 c0 1c          	add    $0x1c,%rax
  43fd82:	8b 4d e0             	mov    -0x20(%rbp),%ecx
  43fd85:	89 ca                	mov    %ecx,%edx
  43fd87:	48 01 d0             	add    %rdx,%rax
  43fd8a:	b9 40 00 00 00       	mov    $0x40,%ecx
  43fd8f:	2b 4d e0             	sub    -0x20(%rbp),%ecx
  43fd92:	89 c9                	mov    %ecx,%ecx
  43fd94:	89 ca                	mov    %ecx,%edx
  43fd96:	48 89 c7             	mov    %rax,%rdi
  43fd99:	e8 82 12 fc ff       	callq  401020 <memset@plt>
  43fd9e:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  43fda2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43fda6:	48 83 c0 1c          	add    $0x1c,%rax
  43fdaa:	48 89 c6             	mov    %rax,%rsi
  43fdad:	e8 3e df ff ff       	callq  43dcf0 <mbedtls_internal_sha1_process>
  43fdb2:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  43fdb5:	83 f8 00             	cmp    $0x0,%eax
  43fdb8:	74 0b                	je     43fdc5 <mbedtls_sha1_finish_ret+0xb5>
  43fdba:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  43fdbd:	89 45 fc             	mov    %eax,-0x4(%rbp)
  43fdc0:	e9 59 02 00 00       	jmpq   44001e <mbedtls_sha1_finish_ret+0x30e>
  43fdc5:	31 f6                	xor    %esi,%esi
  43fdc7:	b8 38 00 00 00       	mov    $0x38,%eax
  43fdcc:	89 c2                	mov    %eax,%edx
  43fdce:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  43fdd2:	48 83 c1 1c          	add    $0x1c,%rcx
  43fdd6:	48 89 cf             	mov    %rcx,%rdi
  43fdd9:	e8 42 12 fc ff       	callq  401020 <memset@plt>
  43fdde:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43fde2:	8b 08                	mov    (%rax),%ecx
  43fde4:	c1 e9 1d             	shr    $0x1d,%ecx
  43fde7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43fdeb:	8b 50 04             	mov    0x4(%rax),%edx
  43fdee:	c1 e2 03             	shl    $0x3,%edx
  43fdf1:	09 d1                	or     %edx,%ecx
  43fdf3:	89 4d dc             	mov    %ecx,-0x24(%rbp)
  43fdf6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43fdfa:	8b 08                	mov    (%rax),%ecx
  43fdfc:	c1 e1 03             	shl    $0x3,%ecx
  43fdff:	89 4d d8             	mov    %ecx,-0x28(%rbp)
  43fe02:	8b 4d dc             	mov    -0x24(%rbp),%ecx
  43fe05:	c1 e9 18             	shr    $0x18,%ecx
  43fe08:	40 88 ce             	mov    %cl,%sil
  43fe0b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43fe0f:	40 88 70 54          	mov    %sil,0x54(%rax)
  43fe13:	8b 4d dc             	mov    -0x24(%rbp),%ecx
  43fe16:	c1 e9 10             	shr    $0x10,%ecx
  43fe19:	40 88 ce             	mov    %cl,%sil
  43fe1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43fe20:	40 88 70 55          	mov    %sil,0x55(%rax)
  43fe24:	8b 4d dc             	mov    -0x24(%rbp),%ecx
  43fe27:	c1 e9 08             	shr    $0x8,%ecx
  43fe2a:	40 88 ce             	mov    %cl,%sil
  43fe2d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43fe31:	40 88 70 56          	mov    %sil,0x56(%rax)
  43fe35:	8b 4d dc             	mov    -0x24(%rbp),%ecx
  43fe38:	40 88 ce             	mov    %cl,%sil
  43fe3b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43fe3f:	40 88 70 57          	mov    %sil,0x57(%rax)
  43fe43:	8b 4d d8             	mov    -0x28(%rbp),%ecx
  43fe46:	c1 e9 18             	shr    $0x18,%ecx
  43fe49:	40 88 ce             	mov    %cl,%sil
  43fe4c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43fe50:	40 88 70 58          	mov    %sil,0x58(%rax)
  43fe54:	8b 4d d8             	mov    -0x28(%rbp),%ecx
  43fe57:	c1 e9 10             	shr    $0x10,%ecx
  43fe5a:	40 88 ce             	mov    %cl,%sil
  43fe5d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43fe61:	40 88 70 59          	mov    %sil,0x59(%rax)
  43fe65:	8b 4d d8             	mov    -0x28(%rbp),%ecx
  43fe68:	c1 e9 08             	shr    $0x8,%ecx
  43fe6b:	40 88 ce             	mov    %cl,%sil
  43fe6e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43fe72:	40 88 70 5a          	mov    %sil,0x5a(%rax)
  43fe76:	8b 4d d8             	mov    -0x28(%rbp),%ecx
  43fe79:	40 88 ce             	mov    %cl,%sil
  43fe7c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43fe80:	40 88 70 5b          	mov    %sil,0x5b(%rax)
  43fe84:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  43fe88:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43fe8c:	48 83 c0 1c          	add    $0x1c,%rax
  43fe90:	48 89 c6             	mov    %rax,%rsi
  43fe93:	e8 58 de ff ff       	callq  43dcf0 <mbedtls_internal_sha1_process>
  43fe98:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  43fe9b:	83 f8 00             	cmp    $0x0,%eax
  43fe9e:	74 0b                	je     43feab <mbedtls_sha1_finish_ret+0x19b>
  43fea0:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  43fea3:	89 45 fc             	mov    %eax,-0x4(%rbp)
  43fea6:	e9 73 01 00 00       	jmpq   44001e <mbedtls_sha1_finish_ret+0x30e>
  43feab:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43feaf:	8b 48 08             	mov    0x8(%rax),%ecx
  43feb2:	c1 e9 18             	shr    $0x18,%ecx
  43feb5:	88 ca                	mov    %cl,%dl
  43feb7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43febb:	88 10                	mov    %dl,(%rax)
  43febd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43fec1:	8b 48 08             	mov    0x8(%rax),%ecx
  43fec4:	c1 e9 10             	shr    $0x10,%ecx
  43fec7:	88 ca                	mov    %cl,%dl
  43fec9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43fecd:	88 50 01             	mov    %dl,0x1(%rax)
  43fed0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43fed4:	8b 48 08             	mov    0x8(%rax),%ecx
  43fed7:	c1 e9 08             	shr    $0x8,%ecx
  43feda:	88 ca                	mov    %cl,%dl
  43fedc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43fee0:	88 50 02             	mov    %dl,0x2(%rax)
  43fee3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43fee7:	8b 48 08             	mov    0x8(%rax),%ecx
  43feea:	88 ca                	mov    %cl,%dl
  43feec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43fef0:	88 50 03             	mov    %dl,0x3(%rax)
  43fef3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43fef7:	8b 48 0c             	mov    0xc(%rax),%ecx
  43fefa:	c1 e9 18             	shr    $0x18,%ecx
  43fefd:	88 ca                	mov    %cl,%dl
  43feff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43ff03:	88 50 04             	mov    %dl,0x4(%rax)
  43ff06:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43ff0a:	8b 48 0c             	mov    0xc(%rax),%ecx
  43ff0d:	c1 e9 10             	shr    $0x10,%ecx
  43ff10:	88 ca                	mov    %cl,%dl
  43ff12:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43ff16:	88 50 05             	mov    %dl,0x5(%rax)
  43ff19:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43ff1d:	8b 48 0c             	mov    0xc(%rax),%ecx
  43ff20:	c1 e9 08             	shr    $0x8,%ecx
  43ff23:	88 ca                	mov    %cl,%dl
  43ff25:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43ff29:	88 50 06             	mov    %dl,0x6(%rax)
  43ff2c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43ff30:	8b 48 0c             	mov    0xc(%rax),%ecx
  43ff33:	88 ca                	mov    %cl,%dl
  43ff35:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43ff39:	88 50 07             	mov    %dl,0x7(%rax)
  43ff3c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43ff40:	8b 48 10             	mov    0x10(%rax),%ecx
  43ff43:	c1 e9 18             	shr    $0x18,%ecx
  43ff46:	88 ca                	mov    %cl,%dl
  43ff48:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43ff4c:	88 50 08             	mov    %dl,0x8(%rax)
  43ff4f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43ff53:	8b 48 10             	mov    0x10(%rax),%ecx
  43ff56:	c1 e9 10             	shr    $0x10,%ecx
  43ff59:	88 ca                	mov    %cl,%dl
  43ff5b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43ff5f:	88 50 09             	mov    %dl,0x9(%rax)
  43ff62:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43ff66:	8b 48 10             	mov    0x10(%rax),%ecx
  43ff69:	c1 e9 08             	shr    $0x8,%ecx
  43ff6c:	88 ca                	mov    %cl,%dl
  43ff6e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43ff72:	88 50 0a             	mov    %dl,0xa(%rax)
  43ff75:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43ff79:	8b 48 10             	mov    0x10(%rax),%ecx
  43ff7c:	88 ca                	mov    %cl,%dl
  43ff7e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43ff82:	88 50 0b             	mov    %dl,0xb(%rax)
  43ff85:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43ff89:	8b 48 14             	mov    0x14(%rax),%ecx
  43ff8c:	c1 e9 18             	shr    $0x18,%ecx
  43ff8f:	88 ca                	mov    %cl,%dl
  43ff91:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43ff95:	88 50 0c             	mov    %dl,0xc(%rax)
  43ff98:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43ff9c:	8b 48 14             	mov    0x14(%rax),%ecx
  43ff9f:	c1 e9 10             	shr    $0x10,%ecx
  43ffa2:	88 ca                	mov    %cl,%dl
  43ffa4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43ffa8:	88 50 0d             	mov    %dl,0xd(%rax)
  43ffab:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43ffaf:	8b 48 14             	mov    0x14(%rax),%ecx
  43ffb2:	c1 e9 08             	shr    $0x8,%ecx
  43ffb5:	88 ca                	mov    %cl,%dl
  43ffb7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43ffbb:	88 50 0e             	mov    %dl,0xe(%rax)
  43ffbe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43ffc2:	8b 48 14             	mov    0x14(%rax),%ecx
  43ffc5:	88 ca                	mov    %cl,%dl
  43ffc7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43ffcb:	88 50 0f             	mov    %dl,0xf(%rax)
  43ffce:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43ffd2:	8b 48 18             	mov    0x18(%rax),%ecx
  43ffd5:	c1 e9 18             	shr    $0x18,%ecx
  43ffd8:	88 ca                	mov    %cl,%dl
  43ffda:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43ffde:	88 50 10             	mov    %dl,0x10(%rax)
  43ffe1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43ffe5:	8b 48 18             	mov    0x18(%rax),%ecx
  43ffe8:	c1 e9 10             	shr    $0x10,%ecx
  43ffeb:	88 ca                	mov    %cl,%dl
  43ffed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43fff1:	88 50 11             	mov    %dl,0x11(%rax)
  43fff4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43fff8:	8b 48 18             	mov    0x18(%rax),%ecx
  43fffb:	c1 e9 08             	shr    $0x8,%ecx
  43fffe:	88 ca                	mov    %cl,%dl
  440000:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  440004:	88 50 12             	mov    %dl,0x12(%rax)
  440007:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  44000b:	8b 48 18             	mov    0x18(%rax),%ecx
  44000e:	88 ca                	mov    %cl,%dl
  440010:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  440014:	88 50 13             	mov    %dl,0x13(%rax)
  440017:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  44001e:	8b 45 fc             	mov    -0x4(%rbp),%eax
  440021:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  440024:	e8 2d 59 00 00       	callq  445956 <writeback_cache>
  440029:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  44002c:	48 83 c4 30          	add    $0x30,%rsp
  440030:	5d                   	pop    %rbp
  440031:	c3                   	retq   
  440032:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  440039:	1f 84 00 00 00 00 00 

0000000000440040 <mbedtls_sha1_ret>:
  440040:	55                   	push   %rbp
  440041:	48 89 e5             	mov    %rsp,%rbp
  440044:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
  44004b:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
  44004f:	48 89 75 c8          	mov    %rsi,-0x38(%rbp)
  440053:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
  440057:	eb 00                	jmp    440059 <mbedtls_sha1_ret+0x19>
  440059:	eb 00                	jmp    44005b <mbedtls_sha1_ret+0x1b>
  44005b:	eb 00                	jmp    44005d <mbedtls_sha1_ret+0x1d>
  44005d:	31 f6                	xor    %esi,%esi
  44005f:	b8 5c 00 00 00       	mov    $0x5c,%eax
  440064:	89 c2                	mov    %eax,%edx
  440066:	48 8d 8d 60 ff ff ff 	lea    -0xa0(%rbp),%rcx
  44006d:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  440071:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  440075:	48 89 8d 58 ff ff ff 	mov    %rcx,-0xa8(%rbp)
  44007c:	e8 9f 0f fc ff       	callq  401020 <memset@plt>
  440081:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
  440088:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
  44008c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  440090:	c7 02 00 00 00 00    	movl   $0x0,(%rdx)
  440096:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  44009a:	c7 42 04 00 00 00 00 	movl   $0x0,0x4(%rdx)
  4400a1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4400a5:	c7 42 08 01 23 45 67 	movl   $0x67452301,0x8(%rdx)
  4400ac:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4400b0:	c7 42 0c 89 ab cd ef 	movl   $0xefcdab89,0xc(%rdx)
  4400b7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4400bb:	c7 42 10 fe dc ba 98 	movl   $0x98badcfe,0x10(%rdx)
  4400c2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4400c6:	c7 42 14 76 54 32 10 	movl   $0x10325476,0x14(%rdx)
  4400cd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4400d1:	c7 42 18 f0 e1 d2 c3 	movl   $0xc3d2e1f0,0x18(%rdx)
  4400d8:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%rbp)
  4400df:	eb 02                	jmp    4400e3 <mbedtls_sha1_ret+0xa3>
  4400e1:	eb 3a                	jmp    44011d <mbedtls_sha1_ret+0xdd>
  4400e3:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  4400e7:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  4400eb:	48 8d bd 60 ff ff ff 	lea    -0xa0(%rbp),%rdi
  4400f2:	e8 99 fa ff ff       	callq  43fb90 <mbedtls_sha1_update_ret>
  4400f7:	89 45 bc             	mov    %eax,-0x44(%rbp)
  4400fa:	83 f8 00             	cmp    $0x0,%eax
  4400fd:	74 02                	je     440101 <mbedtls_sha1_ret+0xc1>
  4400ff:	eb 1c                	jmp    44011d <mbedtls_sha1_ret+0xdd>
  440101:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
  440105:	48 8d bd 60 ff ff ff 	lea    -0xa0(%rbp),%rdi
  44010c:	e8 ff fb ff ff       	callq  43fd10 <mbedtls_sha1_finish_ret>
  440111:	89 45 bc             	mov    %eax,-0x44(%rbp)
  440114:	83 f8 00             	cmp    $0x0,%eax
  440117:	74 02                	je     44011b <mbedtls_sha1_ret+0xdb>
  440119:	eb 02                	jmp    44011d <mbedtls_sha1_ret+0xdd>
  44011b:	eb 00                	jmp    44011d <mbedtls_sha1_ret+0xdd>
  44011d:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
  440124:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  440128:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  44012d:	75 02                	jne    440131 <mbedtls_sha1_ret+0xf1>
  44012f:	eb 2b                	jmp    44015c <mbedtls_sha1_ret+0x11c>
  440131:	31 f6                	xor    %esi,%esi
  440133:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  440137:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  44013b:	48 c7 45 e8 5c 00 00 	movq   $0x5c,-0x18(%rbp)
  440142:	00 
  440143:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  44014a:	00 
  44014b:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  44014f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  440153:	ff d0                	callq  *%rax
  440155:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
  44015c:	8b 45 bc             	mov    -0x44(%rbp),%eax
  44015f:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
  440165:	e8 ec 57 00 00       	callq  445956 <writeback_cache>
  44016a:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
  440170:	48 81 c4 c0 00 00 00 	add    $0xc0,%rsp
  440177:	5d                   	pop    %rbp
  440178:	c3                   	retq   
  440179:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000440180 <mbedtls_sha256_starts_ret>:
  440180:	55                   	push   %rbp
  440181:	48 89 e5             	mov    %rsp,%rbp
  440184:	48 83 ec 10          	sub    $0x10,%rsp
  440188:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  44018c:	89 75 f4             	mov    %esi,-0xc(%rbp)
  44018f:	eb 00                	jmp    440191 <mbedtls_sha256_starts_ret+0x11>
  440191:	eb 00                	jmp    440193 <mbedtls_sha256_starts_ret+0x13>
  440193:	eb 00                	jmp    440195 <mbedtls_sha256_starts_ret+0x15>
  440195:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  440199:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  44019f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4401a3:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
  4401aa:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  4401ae:	75 5a                	jne    44020a <mbedtls_sha256_starts_ret+0x8a>
  4401b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4401b4:	c7 40 08 67 e6 09 6a 	movl   $0x6a09e667,0x8(%rax)
  4401bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4401bf:	c7 40 0c 85 ae 67 bb 	movl   $0xbb67ae85,0xc(%rax)
  4401c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4401ca:	c7 40 10 72 f3 6e 3c 	movl   $0x3c6ef372,0x10(%rax)
  4401d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4401d5:	c7 40 14 3a f5 4f a5 	movl   $0xa54ff53a,0x14(%rax)
  4401dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4401e0:	c7 40 18 7f 52 0e 51 	movl   $0x510e527f,0x18(%rax)
  4401e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4401eb:	c7 40 1c 8c 68 05 9b 	movl   $0x9b05688c,0x1c(%rax)
  4401f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4401f6:	c7 40 20 ab d9 83 1f 	movl   $0x1f83d9ab,0x20(%rax)
  4401fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  440201:	c7 40 24 19 cd e0 5b 	movl   $0x5be0cd19,0x24(%rax)
  440208:	eb 58                	jmp    440262 <mbedtls_sha256_starts_ret+0xe2>
  44020a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  44020e:	c7 40 08 d8 9e 05 c1 	movl   $0xc1059ed8,0x8(%rax)
  440215:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  440219:	c7 40 0c 07 d5 7c 36 	movl   $0x367cd507,0xc(%rax)
  440220:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  440224:	c7 40 10 17 dd 70 30 	movl   $0x3070dd17,0x10(%rax)
  44022b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  44022f:	c7 40 14 39 59 0e f7 	movl   $0xf70e5939,0x14(%rax)
  440236:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  44023a:	c7 40 18 31 0b c0 ff 	movl   $0xffc00b31,0x18(%rax)
  440241:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  440245:	c7 40 1c 11 15 58 68 	movl   $0x68581511,0x1c(%rax)
  44024c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  440250:	c7 40 20 a7 8f f9 64 	movl   $0x64f98fa7,0x20(%rax)
  440257:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  44025b:	c7 40 24 a4 4f fa be 	movl   $0xbefa4fa4,0x24(%rax)
  440262:	8b 45 f4             	mov    -0xc(%rbp),%eax
  440265:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  440269:	89 41 68             	mov    %eax,0x68(%rcx)
  44026c:	e8 e5 56 00 00       	callq  445956 <writeback_cache>
  440271:	31 c0                	xor    %eax,%eax
  440273:	48 83 c4 10          	add    $0x10,%rsp
  440277:	5d                   	pop    %rbp
  440278:	c3                   	retq   
  440279:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000440280 <mbedtls_internal_sha256_process>:
  440280:	55                   	push   %rbp
  440281:	48 89 e5             	mov    %rsp,%rbp
  440284:	48 81 ec 50 01 00 00 	sub    $0x150,%rsp
  44028b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  44028f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  440293:	eb 00                	jmp    440295 <mbedtls_internal_sha256_process+0x15>
  440295:	eb 00                	jmp    440297 <mbedtls_internal_sha256_process+0x17>
  440297:	eb 00                	jmp    440299 <mbedtls_internal_sha256_process+0x19>
  440299:	c7 85 bc fe ff ff 00 	movl   $0x0,-0x144(%rbp)
  4402a0:	00 00 00 
  4402a3:	83 bd bc fe ff ff 08 	cmpl   $0x8,-0x144(%rbp)
  4402aa:	73 30                	jae    4402dc <mbedtls_internal_sha256_process+0x5c>
  4402ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4402b0:	8b 8d bc fe ff ff    	mov    -0x144(%rbp),%ecx
  4402b6:	89 ca                	mov    %ecx,%edx
  4402b8:	8b 4c 90 08          	mov    0x8(%rax,%rdx,4),%ecx
  4402bc:	8b b5 bc fe ff ff    	mov    -0x144(%rbp),%esi
  4402c2:	89 f0                	mov    %esi,%eax
  4402c4:	89 8c 85 c0 fe ff ff 	mov    %ecx,-0x140(%rbp,%rax,4)
  4402cb:	8b 85 bc fe ff ff    	mov    -0x144(%rbp),%eax
  4402d1:	83 c0 01             	add    $0x1,%eax
  4402d4:	89 85 bc fe ff ff    	mov    %eax,-0x144(%rbp)
  4402da:	eb c7                	jmp    4402a3 <mbedtls_internal_sha256_process+0x23>
  4402dc:	c7 85 bc fe ff ff 00 	movl   $0x0,-0x144(%rbp)
  4402e3:	00 00 00 
  4402e6:	83 bd bc fe ff ff 10 	cmpl   $0x10,-0x144(%rbp)
  4402ed:	0f 83 93 00 00 00    	jae    440386 <mbedtls_internal_sha256_process+0x106>
  4402f3:	eb 00                	jmp    4402f5 <mbedtls_internal_sha256_process+0x75>
  4402f5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4402f9:	8b 8d bc fe ff ff    	mov    -0x144(%rbp),%ecx
  4402ff:	c1 e1 02             	shl    $0x2,%ecx
  440302:	89 c9                	mov    %ecx,%ecx
  440304:	89 ca                	mov    %ecx,%edx
  440306:	0f b6 0c 10          	movzbl (%rax,%rdx,1),%ecx
  44030a:	c1 e1 18             	shl    $0x18,%ecx
  44030d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  440311:	8b b5 bc fe ff ff    	mov    -0x144(%rbp),%esi
  440317:	c1 e6 02             	shl    $0x2,%esi
  44031a:	83 c6 01             	add    $0x1,%esi
  44031d:	89 f6                	mov    %esi,%esi
  44031f:	89 f2                	mov    %esi,%edx
  440321:	0f b6 34 10          	movzbl (%rax,%rdx,1),%esi
  440325:	c1 e6 10             	shl    $0x10,%esi
  440328:	09 f1                	or     %esi,%ecx
  44032a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  44032e:	8b b5 bc fe ff ff    	mov    -0x144(%rbp),%esi
  440334:	c1 e6 02             	shl    $0x2,%esi
  440337:	83 c6 02             	add    $0x2,%esi
  44033a:	89 f6                	mov    %esi,%esi
  44033c:	89 f2                	mov    %esi,%edx
  44033e:	0f b6 34 10          	movzbl (%rax,%rdx,1),%esi
  440342:	c1 e6 08             	shl    $0x8,%esi
  440345:	09 f1                	or     %esi,%ecx
  440347:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  44034b:	8b b5 bc fe ff ff    	mov    -0x144(%rbp),%esi
  440351:	c1 e6 02             	shl    $0x2,%esi
  440354:	83 c6 03             	add    $0x3,%esi
  440357:	89 f6                	mov    %esi,%esi
  440359:	89 f2                	mov    %esi,%edx
  44035b:	0f b6 34 10          	movzbl (%rax,%rdx,1),%esi
  44035f:	09 f1                	or     %esi,%ecx
  440361:	8b b5 bc fe ff ff    	mov    -0x144(%rbp),%esi
  440367:	89 f0                	mov    %esi,%eax
  440369:	89 8c 85 e0 fe ff ff 	mov    %ecx,-0x120(%rbp,%rax,4)
  440370:	eb 00                	jmp    440372 <mbedtls_internal_sha256_process+0xf2>
  440372:	8b 85 bc fe ff ff    	mov    -0x144(%rbp),%eax
  440378:	83 c0 01             	add    $0x1,%eax
  44037b:	89 85 bc fe ff ff    	mov    %eax,-0x144(%rbp)
  440381:	e9 60 ff ff ff       	jmpq   4402e6 <mbedtls_internal_sha256_process+0x66>
  440386:	c7 85 bc fe ff ff 00 	movl   $0x0,-0x144(%rbp)
  44038d:	00 00 00 
  440390:	83 bd bc fe ff ff 10 	cmpl   $0x10,-0x144(%rbp)
  440397:	0f 83 ac 08 00 00    	jae    440c49 <mbedtls_internal_sha256_process+0x9c9>
  44039d:	8b 85 dc fe ff ff    	mov    -0x124(%rbp),%eax
  4403a3:	8b 8d d0 fe ff ff    	mov    -0x130(%rbp),%ecx
  4403a9:	c1 e9 06             	shr    $0x6,%ecx
  4403ac:	8b 95 d0 fe ff ff    	mov    -0x130(%rbp),%edx
  4403b2:	c1 e2 1a             	shl    $0x1a,%edx
  4403b5:	09 d1                	or     %edx,%ecx
  4403b7:	8b 95 d0 fe ff ff    	mov    -0x130(%rbp),%edx
  4403bd:	c1 ea 0b             	shr    $0xb,%edx
  4403c0:	8b b5 d0 fe ff ff    	mov    -0x130(%rbp),%esi
  4403c6:	c1 e6 15             	shl    $0x15,%esi
  4403c9:	09 f2                	or     %esi,%edx
  4403cb:	31 d1                	xor    %edx,%ecx
  4403cd:	8b 95 d0 fe ff ff    	mov    -0x130(%rbp),%edx
  4403d3:	c1 ea 19             	shr    $0x19,%edx
  4403d6:	8b b5 d0 fe ff ff    	mov    -0x130(%rbp),%esi
  4403dc:	c1 e6 07             	shl    $0x7,%esi
  4403df:	09 f2                	or     %esi,%edx
  4403e1:	31 d1                	xor    %edx,%ecx
  4403e3:	01 c8                	add    %ecx,%eax
  4403e5:	8b 8d d8 fe ff ff    	mov    -0x128(%rbp),%ecx
  4403eb:	8b 95 d0 fe ff ff    	mov    -0x130(%rbp),%edx
  4403f1:	8b b5 d4 fe ff ff    	mov    -0x12c(%rbp),%esi
  4403f7:	33 b5 d8 fe ff ff    	xor    -0x128(%rbp),%esi
  4403fd:	21 f2                	and    %esi,%edx
  4403ff:	31 d1                	xor    %edx,%ecx
  440401:	01 c8                	add    %ecx,%eax
  440403:	8b 8d bc fe ff ff    	mov    -0x144(%rbp),%ecx
  440409:	83 c1 00             	add    $0x0,%ecx
  44040c:	89 c9                	mov    %ecx,%ecx
  44040e:	89 cf                	mov    %ecx,%edi
  440410:	03 04 bd 80 e3 44 00 	add    0x44e380(,%rdi,4),%eax
  440417:	8b 8d bc fe ff ff    	mov    -0x144(%rbp),%ecx
  44041d:	83 c1 00             	add    $0x0,%ecx
  440420:	89 c9                	mov    %ecx,%ecx
  440422:	89 cf                	mov    %ecx,%edi
  440424:	03 84 bd e0 fe ff ff 	add    -0x120(%rbp,%rdi,4),%eax
  44042b:	89 45 ec             	mov    %eax,-0x14(%rbp)
  44042e:	8b 85 c0 fe ff ff    	mov    -0x140(%rbp),%eax
  440434:	c1 e8 02             	shr    $0x2,%eax
  440437:	8b 8d c0 fe ff ff    	mov    -0x140(%rbp),%ecx
  44043d:	c1 e1 1e             	shl    $0x1e,%ecx
  440440:	09 c8                	or     %ecx,%eax
  440442:	8b 8d c0 fe ff ff    	mov    -0x140(%rbp),%ecx
  440448:	c1 e9 0d             	shr    $0xd,%ecx
  44044b:	8b 95 c0 fe ff ff    	mov    -0x140(%rbp),%edx
  440451:	c1 e2 13             	shl    $0x13,%edx
  440454:	09 d1                	or     %edx,%ecx
  440456:	31 c8                	xor    %ecx,%eax
  440458:	8b 8d c0 fe ff ff    	mov    -0x140(%rbp),%ecx
  44045e:	c1 e9 16             	shr    $0x16,%ecx
  440461:	8b 95 c0 fe ff ff    	mov    -0x140(%rbp),%edx
  440467:	c1 e2 0a             	shl    $0xa,%edx
  44046a:	09 d1                	or     %edx,%ecx
  44046c:	31 c8                	xor    %ecx,%eax
  44046e:	8b 8d c0 fe ff ff    	mov    -0x140(%rbp),%ecx
  440474:	23 8d c4 fe ff ff    	and    -0x13c(%rbp),%ecx
  44047a:	8b 95 c8 fe ff ff    	mov    -0x138(%rbp),%edx
  440480:	8b b5 c0 fe ff ff    	mov    -0x140(%rbp),%esi
  440486:	0b b5 c4 fe ff ff    	or     -0x13c(%rbp),%esi
  44048c:	21 f2                	and    %esi,%edx
  44048e:	09 d1                	or     %edx,%ecx
  440490:	01 c8                	add    %ecx,%eax
  440492:	89 45 e8             	mov    %eax,-0x18(%rbp)
  440495:	8b 45 ec             	mov    -0x14(%rbp),%eax
  440498:	03 85 cc fe ff ff    	add    -0x134(%rbp),%eax
  44049e:	89 85 cc fe ff ff    	mov    %eax,-0x134(%rbp)
  4404a4:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4404a7:	03 45 e8             	add    -0x18(%rbp),%eax
  4404aa:	89 85 dc fe ff ff    	mov    %eax,-0x124(%rbp)
  4404b0:	8b 85 d8 fe ff ff    	mov    -0x128(%rbp),%eax
  4404b6:	8b 8d cc fe ff ff    	mov    -0x134(%rbp),%ecx
  4404bc:	c1 e9 06             	shr    $0x6,%ecx
  4404bf:	8b 95 cc fe ff ff    	mov    -0x134(%rbp),%edx
  4404c5:	c1 e2 1a             	shl    $0x1a,%edx
  4404c8:	09 d1                	or     %edx,%ecx
  4404ca:	8b 95 cc fe ff ff    	mov    -0x134(%rbp),%edx
  4404d0:	c1 ea 0b             	shr    $0xb,%edx
  4404d3:	8b b5 cc fe ff ff    	mov    -0x134(%rbp),%esi
  4404d9:	c1 e6 15             	shl    $0x15,%esi
  4404dc:	09 f2                	or     %esi,%edx
  4404de:	31 d1                	xor    %edx,%ecx
  4404e0:	8b 95 cc fe ff ff    	mov    -0x134(%rbp),%edx
  4404e6:	c1 ea 19             	shr    $0x19,%edx
  4404e9:	8b b5 cc fe ff ff    	mov    -0x134(%rbp),%esi
  4404ef:	c1 e6 07             	shl    $0x7,%esi
  4404f2:	09 f2                	or     %esi,%edx
  4404f4:	31 d1                	xor    %edx,%ecx
  4404f6:	01 c8                	add    %ecx,%eax
  4404f8:	8b 8d d4 fe ff ff    	mov    -0x12c(%rbp),%ecx
  4404fe:	8b 95 cc fe ff ff    	mov    -0x134(%rbp),%edx
  440504:	8b b5 d0 fe ff ff    	mov    -0x130(%rbp),%esi
  44050a:	33 b5 d4 fe ff ff    	xor    -0x12c(%rbp),%esi
  440510:	21 f2                	and    %esi,%edx
  440512:	31 d1                	xor    %edx,%ecx
  440514:	01 c8                	add    %ecx,%eax
  440516:	8b 8d bc fe ff ff    	mov    -0x144(%rbp),%ecx
  44051c:	83 c1 01             	add    $0x1,%ecx
  44051f:	89 c9                	mov    %ecx,%ecx
  440521:	89 cf                	mov    %ecx,%edi
  440523:	03 04 bd 80 e3 44 00 	add    0x44e380(,%rdi,4),%eax
  44052a:	8b 8d bc fe ff ff    	mov    -0x144(%rbp),%ecx
  440530:	83 c1 01             	add    $0x1,%ecx
  440533:	89 c9                	mov    %ecx,%ecx
  440535:	89 cf                	mov    %ecx,%edi
  440537:	03 84 bd e0 fe ff ff 	add    -0x120(%rbp,%rdi,4),%eax
  44053e:	89 45 ec             	mov    %eax,-0x14(%rbp)
  440541:	8b 85 dc fe ff ff    	mov    -0x124(%rbp),%eax
  440547:	c1 e8 02             	shr    $0x2,%eax
  44054a:	8b 8d dc fe ff ff    	mov    -0x124(%rbp),%ecx
  440550:	c1 e1 1e             	shl    $0x1e,%ecx
  440553:	09 c8                	or     %ecx,%eax
  440555:	8b 8d dc fe ff ff    	mov    -0x124(%rbp),%ecx
  44055b:	c1 e9 0d             	shr    $0xd,%ecx
  44055e:	8b 95 dc fe ff ff    	mov    -0x124(%rbp),%edx
  440564:	c1 e2 13             	shl    $0x13,%edx
  440567:	09 d1                	or     %edx,%ecx
  440569:	31 c8                	xor    %ecx,%eax
  44056b:	8b 8d dc fe ff ff    	mov    -0x124(%rbp),%ecx
  440571:	c1 e9 16             	shr    $0x16,%ecx
  440574:	8b 95 dc fe ff ff    	mov    -0x124(%rbp),%edx
  44057a:	c1 e2 0a             	shl    $0xa,%edx
  44057d:	09 d1                	or     %edx,%ecx
  44057f:	31 c8                	xor    %ecx,%eax
  440581:	8b 8d dc fe ff ff    	mov    -0x124(%rbp),%ecx
  440587:	23 8d c0 fe ff ff    	and    -0x140(%rbp),%ecx
  44058d:	8b 95 c4 fe ff ff    	mov    -0x13c(%rbp),%edx
  440593:	8b b5 dc fe ff ff    	mov    -0x124(%rbp),%esi
  440599:	0b b5 c0 fe ff ff    	or     -0x140(%rbp),%esi
  44059f:	21 f2                	and    %esi,%edx
  4405a1:	09 d1                	or     %edx,%ecx
  4405a3:	01 c8                	add    %ecx,%eax
  4405a5:	89 45 e8             	mov    %eax,-0x18(%rbp)
  4405a8:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4405ab:	03 85 c8 fe ff ff    	add    -0x138(%rbp),%eax
  4405b1:	89 85 c8 fe ff ff    	mov    %eax,-0x138(%rbp)
  4405b7:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4405ba:	03 45 e8             	add    -0x18(%rbp),%eax
  4405bd:	89 85 d8 fe ff ff    	mov    %eax,-0x128(%rbp)
  4405c3:	8b 85 d4 fe ff ff    	mov    -0x12c(%rbp),%eax
  4405c9:	8b 8d c8 fe ff ff    	mov    -0x138(%rbp),%ecx
  4405cf:	c1 e9 06             	shr    $0x6,%ecx
  4405d2:	8b 95 c8 fe ff ff    	mov    -0x138(%rbp),%edx
  4405d8:	c1 e2 1a             	shl    $0x1a,%edx
  4405db:	09 d1                	or     %edx,%ecx
  4405dd:	8b 95 c8 fe ff ff    	mov    -0x138(%rbp),%edx
  4405e3:	c1 ea 0b             	shr    $0xb,%edx
  4405e6:	8b b5 c8 fe ff ff    	mov    -0x138(%rbp),%esi
  4405ec:	c1 e6 15             	shl    $0x15,%esi
  4405ef:	09 f2                	or     %esi,%edx
  4405f1:	31 d1                	xor    %edx,%ecx
  4405f3:	8b 95 c8 fe ff ff    	mov    -0x138(%rbp),%edx
  4405f9:	c1 ea 19             	shr    $0x19,%edx
  4405fc:	8b b5 c8 fe ff ff    	mov    -0x138(%rbp),%esi
  440602:	c1 e6 07             	shl    $0x7,%esi
  440605:	09 f2                	or     %esi,%edx
  440607:	31 d1                	xor    %edx,%ecx
  440609:	01 c8                	add    %ecx,%eax
  44060b:	8b 8d d0 fe ff ff    	mov    -0x130(%rbp),%ecx
  440611:	8b 95 c8 fe ff ff    	mov    -0x138(%rbp),%edx
  440617:	8b b5 cc fe ff ff    	mov    -0x134(%rbp),%esi
  44061d:	33 b5 d0 fe ff ff    	xor    -0x130(%rbp),%esi
  440623:	21 f2                	and    %esi,%edx
  440625:	31 d1                	xor    %edx,%ecx
  440627:	01 c8                	add    %ecx,%eax
  440629:	8b 8d bc fe ff ff    	mov    -0x144(%rbp),%ecx
  44062f:	83 c1 02             	add    $0x2,%ecx
  440632:	89 c9                	mov    %ecx,%ecx
  440634:	89 cf                	mov    %ecx,%edi
  440636:	03 04 bd 80 e3 44 00 	add    0x44e380(,%rdi,4),%eax
  44063d:	8b 8d bc fe ff ff    	mov    -0x144(%rbp),%ecx
  440643:	83 c1 02             	add    $0x2,%ecx
  440646:	89 c9                	mov    %ecx,%ecx
  440648:	89 cf                	mov    %ecx,%edi
  44064a:	03 84 bd e0 fe ff ff 	add    -0x120(%rbp,%rdi,4),%eax
  440651:	89 45 ec             	mov    %eax,-0x14(%rbp)
  440654:	8b 85 d8 fe ff ff    	mov    -0x128(%rbp),%eax
  44065a:	c1 e8 02             	shr    $0x2,%eax
  44065d:	8b 8d d8 fe ff ff    	mov    -0x128(%rbp),%ecx
  440663:	c1 e1 1e             	shl    $0x1e,%ecx
  440666:	09 c8                	or     %ecx,%eax
  440668:	8b 8d d8 fe ff ff    	mov    -0x128(%rbp),%ecx
  44066e:	c1 e9 0d             	shr    $0xd,%ecx
  440671:	8b 95 d8 fe ff ff    	mov    -0x128(%rbp),%edx
  440677:	c1 e2 13             	shl    $0x13,%edx
  44067a:	09 d1                	or     %edx,%ecx
  44067c:	31 c8                	xor    %ecx,%eax
  44067e:	8b 8d d8 fe ff ff    	mov    -0x128(%rbp),%ecx
  440684:	c1 e9 16             	shr    $0x16,%ecx
  440687:	8b 95 d8 fe ff ff    	mov    -0x128(%rbp),%edx
  44068d:	c1 e2 0a             	shl    $0xa,%edx
  440690:	09 d1                	or     %edx,%ecx
  440692:	31 c8                	xor    %ecx,%eax
  440694:	8b 8d d8 fe ff ff    	mov    -0x128(%rbp),%ecx
  44069a:	23 8d dc fe ff ff    	and    -0x124(%rbp),%ecx
  4406a0:	8b 95 c0 fe ff ff    	mov    -0x140(%rbp),%edx
  4406a6:	8b b5 d8 fe ff ff    	mov    -0x128(%rbp),%esi
  4406ac:	0b b5 dc fe ff ff    	or     -0x124(%rbp),%esi
  4406b2:	21 f2                	and    %esi,%edx
  4406b4:	09 d1                	or     %edx,%ecx
  4406b6:	01 c8                	add    %ecx,%eax
  4406b8:	89 45 e8             	mov    %eax,-0x18(%rbp)
  4406bb:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4406be:	03 85 c4 fe ff ff    	add    -0x13c(%rbp),%eax
  4406c4:	89 85 c4 fe ff ff    	mov    %eax,-0x13c(%rbp)
  4406ca:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4406cd:	03 45 e8             	add    -0x18(%rbp),%eax
  4406d0:	89 85 d4 fe ff ff    	mov    %eax,-0x12c(%rbp)
  4406d6:	8b 85 d0 fe ff ff    	mov    -0x130(%rbp),%eax
  4406dc:	8b 8d c4 fe ff ff    	mov    -0x13c(%rbp),%ecx
  4406e2:	c1 e9 06             	shr    $0x6,%ecx
  4406e5:	8b 95 c4 fe ff ff    	mov    -0x13c(%rbp),%edx
  4406eb:	c1 e2 1a             	shl    $0x1a,%edx
  4406ee:	09 d1                	or     %edx,%ecx
  4406f0:	8b 95 c4 fe ff ff    	mov    -0x13c(%rbp),%edx
  4406f6:	c1 ea 0b             	shr    $0xb,%edx
  4406f9:	8b b5 c4 fe ff ff    	mov    -0x13c(%rbp),%esi
  4406ff:	c1 e6 15             	shl    $0x15,%esi
  440702:	09 f2                	or     %esi,%edx
  440704:	31 d1                	xor    %edx,%ecx
  440706:	8b 95 c4 fe ff ff    	mov    -0x13c(%rbp),%edx
  44070c:	c1 ea 19             	shr    $0x19,%edx
  44070f:	8b b5 c4 fe ff ff    	mov    -0x13c(%rbp),%esi
  440715:	c1 e6 07             	shl    $0x7,%esi
  440718:	09 f2                	or     %esi,%edx
  44071a:	31 d1                	xor    %edx,%ecx
  44071c:	01 c8                	add    %ecx,%eax
  44071e:	8b 8d cc fe ff ff    	mov    -0x134(%rbp),%ecx
  440724:	8b 95 c4 fe ff ff    	mov    -0x13c(%rbp),%edx
  44072a:	8b b5 c8 fe ff ff    	mov    -0x138(%rbp),%esi
  440730:	33 b5 cc fe ff ff    	xor    -0x134(%rbp),%esi
  440736:	21 f2                	and    %esi,%edx
  440738:	31 d1                	xor    %edx,%ecx
  44073a:	01 c8                	add    %ecx,%eax
  44073c:	8b 8d bc fe ff ff    	mov    -0x144(%rbp),%ecx
  440742:	83 c1 03             	add    $0x3,%ecx
  440745:	89 c9                	mov    %ecx,%ecx
  440747:	89 cf                	mov    %ecx,%edi
  440749:	03 04 bd 80 e3 44 00 	add    0x44e380(,%rdi,4),%eax
  440750:	8b 8d bc fe ff ff    	mov    -0x144(%rbp),%ecx
  440756:	83 c1 03             	add    $0x3,%ecx
  440759:	89 c9                	mov    %ecx,%ecx
  44075b:	89 cf                	mov    %ecx,%edi
  44075d:	03 84 bd e0 fe ff ff 	add    -0x120(%rbp,%rdi,4),%eax
  440764:	89 45 ec             	mov    %eax,-0x14(%rbp)
  440767:	8b 85 d4 fe ff ff    	mov    -0x12c(%rbp),%eax
  44076d:	c1 e8 02             	shr    $0x2,%eax
  440770:	8b 8d d4 fe ff ff    	mov    -0x12c(%rbp),%ecx
  440776:	c1 e1 1e             	shl    $0x1e,%ecx
  440779:	09 c8                	or     %ecx,%eax
  44077b:	8b 8d d4 fe ff ff    	mov    -0x12c(%rbp),%ecx
  440781:	c1 e9 0d             	shr    $0xd,%ecx
  440784:	8b 95 d4 fe ff ff    	mov    -0x12c(%rbp),%edx
  44078a:	c1 e2 13             	shl    $0x13,%edx
  44078d:	09 d1                	or     %edx,%ecx
  44078f:	31 c8                	xor    %ecx,%eax
  440791:	8b 8d d4 fe ff ff    	mov    -0x12c(%rbp),%ecx
  440797:	c1 e9 16             	shr    $0x16,%ecx
  44079a:	8b 95 d4 fe ff ff    	mov    -0x12c(%rbp),%edx
  4407a0:	c1 e2 0a             	shl    $0xa,%edx
  4407a3:	09 d1                	or     %edx,%ecx
  4407a5:	31 c8                	xor    %ecx,%eax
  4407a7:	8b 8d d4 fe ff ff    	mov    -0x12c(%rbp),%ecx
  4407ad:	23 8d d8 fe ff ff    	and    -0x128(%rbp),%ecx
  4407b3:	8b 95 dc fe ff ff    	mov    -0x124(%rbp),%edx
  4407b9:	8b b5 d4 fe ff ff    	mov    -0x12c(%rbp),%esi
  4407bf:	0b b5 d8 fe ff ff    	or     -0x128(%rbp),%esi
  4407c5:	21 f2                	and    %esi,%edx
  4407c7:	09 d1                	or     %edx,%ecx
  4407c9:	01 c8                	add    %ecx,%eax
  4407cb:	89 45 e8             	mov    %eax,-0x18(%rbp)
  4407ce:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4407d1:	03 85 c0 fe ff ff    	add    -0x140(%rbp),%eax
  4407d7:	89 85 c0 fe ff ff    	mov    %eax,-0x140(%rbp)
  4407dd:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4407e0:	03 45 e8             	add    -0x18(%rbp),%eax
  4407e3:	89 85 d0 fe ff ff    	mov    %eax,-0x130(%rbp)
  4407e9:	8b 85 cc fe ff ff    	mov    -0x134(%rbp),%eax
  4407ef:	8b 8d c0 fe ff ff    	mov    -0x140(%rbp),%ecx
  4407f5:	c1 e9 06             	shr    $0x6,%ecx
  4407f8:	8b 95 c0 fe ff ff    	mov    -0x140(%rbp),%edx
  4407fe:	c1 e2 1a             	shl    $0x1a,%edx
  440801:	09 d1                	or     %edx,%ecx
  440803:	8b 95 c0 fe ff ff    	mov    -0x140(%rbp),%edx
  440809:	c1 ea 0b             	shr    $0xb,%edx
  44080c:	8b b5 c0 fe ff ff    	mov    -0x140(%rbp),%esi
  440812:	c1 e6 15             	shl    $0x15,%esi
  440815:	09 f2                	or     %esi,%edx
  440817:	31 d1                	xor    %edx,%ecx
  440819:	8b 95 c0 fe ff ff    	mov    -0x140(%rbp),%edx
  44081f:	c1 ea 19             	shr    $0x19,%edx
  440822:	8b b5 c0 fe ff ff    	mov    -0x140(%rbp),%esi
  440828:	c1 e6 07             	shl    $0x7,%esi
  44082b:	09 f2                	or     %esi,%edx
  44082d:	31 d1                	xor    %edx,%ecx
  44082f:	01 c8                	add    %ecx,%eax
  440831:	8b 8d c8 fe ff ff    	mov    -0x138(%rbp),%ecx
  440837:	8b 95 c0 fe ff ff    	mov    -0x140(%rbp),%edx
  44083d:	8b b5 c4 fe ff ff    	mov    -0x13c(%rbp),%esi
  440843:	33 b5 c8 fe ff ff    	xor    -0x138(%rbp),%esi
  440849:	21 f2                	and    %esi,%edx
  44084b:	31 d1                	xor    %edx,%ecx
  44084d:	01 c8                	add    %ecx,%eax
  44084f:	8b 8d bc fe ff ff    	mov    -0x144(%rbp),%ecx
  440855:	83 c1 04             	add    $0x4,%ecx
  440858:	89 c9                	mov    %ecx,%ecx
  44085a:	89 cf                	mov    %ecx,%edi
  44085c:	03 04 bd 80 e3 44 00 	add    0x44e380(,%rdi,4),%eax
  440863:	8b 8d bc fe ff ff    	mov    -0x144(%rbp),%ecx
  440869:	83 c1 04             	add    $0x4,%ecx
  44086c:	89 c9                	mov    %ecx,%ecx
  44086e:	89 cf                	mov    %ecx,%edi
  440870:	03 84 bd e0 fe ff ff 	add    -0x120(%rbp,%rdi,4),%eax
  440877:	89 45 ec             	mov    %eax,-0x14(%rbp)
  44087a:	8b 85 d0 fe ff ff    	mov    -0x130(%rbp),%eax
  440880:	c1 e8 02             	shr    $0x2,%eax
  440883:	8b 8d d0 fe ff ff    	mov    -0x130(%rbp),%ecx
  440889:	c1 e1 1e             	shl    $0x1e,%ecx
  44088c:	09 c8                	or     %ecx,%eax
  44088e:	8b 8d d0 fe ff ff    	mov    -0x130(%rbp),%ecx
  440894:	c1 e9 0d             	shr    $0xd,%ecx
  440897:	8b 95 d0 fe ff ff    	mov    -0x130(%rbp),%edx
  44089d:	c1 e2 13             	shl    $0x13,%edx
  4408a0:	09 d1                	or     %edx,%ecx
  4408a2:	31 c8                	xor    %ecx,%eax
  4408a4:	8b 8d d0 fe ff ff    	mov    -0x130(%rbp),%ecx
  4408aa:	c1 e9 16             	shr    $0x16,%ecx
  4408ad:	8b 95 d0 fe ff ff    	mov    -0x130(%rbp),%edx
  4408b3:	c1 e2 0a             	shl    $0xa,%edx
  4408b6:	09 d1                	or     %edx,%ecx
  4408b8:	31 c8                	xor    %ecx,%eax
  4408ba:	8b 8d d0 fe ff ff    	mov    -0x130(%rbp),%ecx
  4408c0:	23 8d d4 fe ff ff    	and    -0x12c(%rbp),%ecx
  4408c6:	8b 95 d8 fe ff ff    	mov    -0x128(%rbp),%edx
  4408cc:	8b b5 d0 fe ff ff    	mov    -0x130(%rbp),%esi
  4408d2:	0b b5 d4 fe ff ff    	or     -0x12c(%rbp),%esi
  4408d8:	21 f2                	and    %esi,%edx
  4408da:	09 d1                	or     %edx,%ecx
  4408dc:	01 c8                	add    %ecx,%eax
  4408de:	89 45 e8             	mov    %eax,-0x18(%rbp)
  4408e1:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4408e4:	03 85 dc fe ff ff    	add    -0x124(%rbp),%eax
  4408ea:	89 85 dc fe ff ff    	mov    %eax,-0x124(%rbp)
  4408f0:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4408f3:	03 45 e8             	add    -0x18(%rbp),%eax
  4408f6:	89 85 cc fe ff ff    	mov    %eax,-0x134(%rbp)
  4408fc:	8b 85 c8 fe ff ff    	mov    -0x138(%rbp),%eax
  440902:	8b 8d dc fe ff ff    	mov    -0x124(%rbp),%ecx
  440908:	c1 e9 06             	shr    $0x6,%ecx
  44090b:	8b 95 dc fe ff ff    	mov    -0x124(%rbp),%edx
  440911:	c1 e2 1a             	shl    $0x1a,%edx
  440914:	09 d1                	or     %edx,%ecx
  440916:	8b 95 dc fe ff ff    	mov    -0x124(%rbp),%edx
  44091c:	c1 ea 0b             	shr    $0xb,%edx
  44091f:	8b b5 dc fe ff ff    	mov    -0x124(%rbp),%esi
  440925:	c1 e6 15             	shl    $0x15,%esi
  440928:	09 f2                	or     %esi,%edx
  44092a:	31 d1                	xor    %edx,%ecx
  44092c:	8b 95 dc fe ff ff    	mov    -0x124(%rbp),%edx
  440932:	c1 ea 19             	shr    $0x19,%edx
  440935:	8b b5 dc fe ff ff    	mov    -0x124(%rbp),%esi
  44093b:	c1 e6 07             	shl    $0x7,%esi
  44093e:	09 f2                	or     %esi,%edx
  440940:	31 d1                	xor    %edx,%ecx
  440942:	01 c8                	add    %ecx,%eax
  440944:	8b 8d c4 fe ff ff    	mov    -0x13c(%rbp),%ecx
  44094a:	8b 95 dc fe ff ff    	mov    -0x124(%rbp),%edx
  440950:	8b b5 c0 fe ff ff    	mov    -0x140(%rbp),%esi
  440956:	33 b5 c4 fe ff ff    	xor    -0x13c(%rbp),%esi
  44095c:	21 f2                	and    %esi,%edx
  44095e:	31 d1                	xor    %edx,%ecx
  440960:	01 c8                	add    %ecx,%eax
  440962:	8b 8d bc fe ff ff    	mov    -0x144(%rbp),%ecx
  440968:	83 c1 05             	add    $0x5,%ecx
  44096b:	89 c9                	mov    %ecx,%ecx
  44096d:	89 cf                	mov    %ecx,%edi
  44096f:	03 04 bd 80 e3 44 00 	add    0x44e380(,%rdi,4),%eax
  440976:	8b 8d bc fe ff ff    	mov    -0x144(%rbp),%ecx
  44097c:	83 c1 05             	add    $0x5,%ecx
  44097f:	89 c9                	mov    %ecx,%ecx
  440981:	89 cf                	mov    %ecx,%edi
  440983:	03 84 bd e0 fe ff ff 	add    -0x120(%rbp,%rdi,4),%eax
  44098a:	89 45 ec             	mov    %eax,-0x14(%rbp)
  44098d:	8b 85 cc fe ff ff    	mov    -0x134(%rbp),%eax
  440993:	c1 e8 02             	shr    $0x2,%eax
  440996:	8b 8d cc fe ff ff    	mov    -0x134(%rbp),%ecx
  44099c:	c1 e1 1e             	shl    $0x1e,%ecx
  44099f:	09 c8                	or     %ecx,%eax
  4409a1:	8b 8d cc fe ff ff    	mov    -0x134(%rbp),%ecx
  4409a7:	c1 e9 0d             	shr    $0xd,%ecx
  4409aa:	8b 95 cc fe ff ff    	mov    -0x134(%rbp),%edx
  4409b0:	c1 e2 13             	shl    $0x13,%edx
  4409b3:	09 d1                	or     %edx,%ecx
  4409b5:	31 c8                	xor    %ecx,%eax
  4409b7:	8b 8d cc fe ff ff    	mov    -0x134(%rbp),%ecx
  4409bd:	c1 e9 16             	shr    $0x16,%ecx
  4409c0:	8b 95 cc fe ff ff    	mov    -0x134(%rbp),%edx
  4409c6:	c1 e2 0a             	shl    $0xa,%edx
  4409c9:	09 d1                	or     %edx,%ecx
  4409cb:	31 c8                	xor    %ecx,%eax
  4409cd:	8b 8d cc fe ff ff    	mov    -0x134(%rbp),%ecx
  4409d3:	23 8d d0 fe ff ff    	and    -0x130(%rbp),%ecx
  4409d9:	8b 95 d4 fe ff ff    	mov    -0x12c(%rbp),%edx
  4409df:	8b b5 cc fe ff ff    	mov    -0x134(%rbp),%esi
  4409e5:	0b b5 d0 fe ff ff    	or     -0x130(%rbp),%esi
  4409eb:	21 f2                	and    %esi,%edx
  4409ed:	09 d1                	or     %edx,%ecx
  4409ef:	01 c8                	add    %ecx,%eax
  4409f1:	89 45 e8             	mov    %eax,-0x18(%rbp)
  4409f4:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4409f7:	03 85 d8 fe ff ff    	add    -0x128(%rbp),%eax
  4409fd:	89 85 d8 fe ff ff    	mov    %eax,-0x128(%rbp)
  440a03:	8b 45 ec             	mov    -0x14(%rbp),%eax
  440a06:	03 45 e8             	add    -0x18(%rbp),%eax
  440a09:	89 85 c8 fe ff ff    	mov    %eax,-0x138(%rbp)
  440a0f:	8b 85 c4 fe ff ff    	mov    -0x13c(%rbp),%eax
  440a15:	8b 8d d8 fe ff ff    	mov    -0x128(%rbp),%ecx
  440a1b:	c1 e9 06             	shr    $0x6,%ecx
  440a1e:	8b 95 d8 fe ff ff    	mov    -0x128(%rbp),%edx
  440a24:	c1 e2 1a             	shl    $0x1a,%edx
  440a27:	09 d1                	or     %edx,%ecx
  440a29:	8b 95 d8 fe ff ff    	mov    -0x128(%rbp),%edx
  440a2f:	c1 ea 0b             	shr    $0xb,%edx
  440a32:	8b b5 d8 fe ff ff    	mov    -0x128(%rbp),%esi
  440a38:	c1 e6 15             	shl    $0x15,%esi
  440a3b:	09 f2                	or     %esi,%edx
  440a3d:	31 d1                	xor    %edx,%ecx
  440a3f:	8b 95 d8 fe ff ff    	mov    -0x128(%rbp),%edx
  440a45:	c1 ea 19             	shr    $0x19,%edx
  440a48:	8b b5 d8 fe ff ff    	mov    -0x128(%rbp),%esi
  440a4e:	c1 e6 07             	shl    $0x7,%esi
  440a51:	09 f2                	or     %esi,%edx
  440a53:	31 d1                	xor    %edx,%ecx
  440a55:	01 c8                	add    %ecx,%eax
  440a57:	8b 8d c0 fe ff ff    	mov    -0x140(%rbp),%ecx
  440a5d:	8b 95 d8 fe ff ff    	mov    -0x128(%rbp),%edx
  440a63:	8b b5 dc fe ff ff    	mov    -0x124(%rbp),%esi
  440a69:	33 b5 c0 fe ff ff    	xor    -0x140(%rbp),%esi
  440a6f:	21 f2                	and    %esi,%edx
  440a71:	31 d1                	xor    %edx,%ecx
  440a73:	01 c8                	add    %ecx,%eax
  440a75:	8b 8d bc fe ff ff    	mov    -0x144(%rbp),%ecx
  440a7b:	83 c1 06             	add    $0x6,%ecx
  440a7e:	89 c9                	mov    %ecx,%ecx
  440a80:	89 cf                	mov    %ecx,%edi
  440a82:	03 04 bd 80 e3 44 00 	add    0x44e380(,%rdi,4),%eax
  440a89:	8b 8d bc fe ff ff    	mov    -0x144(%rbp),%ecx
  440a8f:	83 c1 06             	add    $0x6,%ecx
  440a92:	89 c9                	mov    %ecx,%ecx
  440a94:	89 cf                	mov    %ecx,%edi
  440a96:	03 84 bd e0 fe ff ff 	add    -0x120(%rbp,%rdi,4),%eax
  440a9d:	89 45 ec             	mov    %eax,-0x14(%rbp)
  440aa0:	8b 85 c8 fe ff ff    	mov    -0x138(%rbp),%eax
  440aa6:	c1 e8 02             	shr    $0x2,%eax
  440aa9:	8b 8d c8 fe ff ff    	mov    -0x138(%rbp),%ecx
  440aaf:	c1 e1 1e             	shl    $0x1e,%ecx
  440ab2:	09 c8                	or     %ecx,%eax
  440ab4:	8b 8d c8 fe ff ff    	mov    -0x138(%rbp),%ecx
  440aba:	c1 e9 0d             	shr    $0xd,%ecx
  440abd:	8b 95 c8 fe ff ff    	mov    -0x138(%rbp),%edx
  440ac3:	c1 e2 13             	shl    $0x13,%edx
  440ac6:	09 d1                	or     %edx,%ecx
  440ac8:	31 c8                	xor    %ecx,%eax
  440aca:	8b 8d c8 fe ff ff    	mov    -0x138(%rbp),%ecx
  440ad0:	c1 e9 16             	shr    $0x16,%ecx
  440ad3:	8b 95 c8 fe ff ff    	mov    -0x138(%rbp),%edx
  440ad9:	c1 e2 0a             	shl    $0xa,%edx
  440adc:	09 d1                	or     %edx,%ecx
  440ade:	31 c8                	xor    %ecx,%eax
  440ae0:	8b 8d c8 fe ff ff    	mov    -0x138(%rbp),%ecx
  440ae6:	23 8d cc fe ff ff    	and    -0x134(%rbp),%ecx
  440aec:	8b 95 d0 fe ff ff    	mov    -0x130(%rbp),%edx
  440af2:	8b b5 c8 fe ff ff    	mov    -0x138(%rbp),%esi
  440af8:	0b b5 cc fe ff ff    	or     -0x134(%rbp),%esi
  440afe:	21 f2                	and    %esi,%edx
  440b00:	09 d1                	or     %edx,%ecx
  440b02:	01 c8                	add    %ecx,%eax
  440b04:	89 45 e8             	mov    %eax,-0x18(%rbp)
  440b07:	8b 45 ec             	mov    -0x14(%rbp),%eax
  440b0a:	03 85 d4 fe ff ff    	add    -0x12c(%rbp),%eax
  440b10:	89 85 d4 fe ff ff    	mov    %eax,-0x12c(%rbp)
  440b16:	8b 45 ec             	mov    -0x14(%rbp),%eax
  440b19:	03 45 e8             	add    -0x18(%rbp),%eax
  440b1c:	89 85 c4 fe ff ff    	mov    %eax,-0x13c(%rbp)
  440b22:	8b 85 c0 fe ff ff    	mov    -0x140(%rbp),%eax
  440b28:	8b 8d d4 fe ff ff    	mov    -0x12c(%rbp),%ecx
  440b2e:	c1 e9 06             	shr    $0x6,%ecx
  440b31:	8b 95 d4 fe ff ff    	mov    -0x12c(%rbp),%edx
  440b37:	c1 e2 1a             	shl    $0x1a,%edx
  440b3a:	09 d1                	or     %edx,%ecx
  440b3c:	8b 95 d4 fe ff ff    	mov    -0x12c(%rbp),%edx
  440b42:	c1 ea 0b             	shr    $0xb,%edx
  440b45:	8b b5 d4 fe ff ff    	mov    -0x12c(%rbp),%esi
  440b4b:	c1 e6 15             	shl    $0x15,%esi
  440b4e:	09 f2                	or     %esi,%edx
  440b50:	31 d1                	xor    %edx,%ecx
  440b52:	8b 95 d4 fe ff ff    	mov    -0x12c(%rbp),%edx
  440b58:	c1 ea 19             	shr    $0x19,%edx
  440b5b:	8b b5 d4 fe ff ff    	mov    -0x12c(%rbp),%esi
  440b61:	c1 e6 07             	shl    $0x7,%esi
  440b64:	09 f2                	or     %esi,%edx
  440b66:	31 d1                	xor    %edx,%ecx
  440b68:	01 c8                	add    %ecx,%eax
  440b6a:	8b 8d dc fe ff ff    	mov    -0x124(%rbp),%ecx
  440b70:	8b 95 d4 fe ff ff    	mov    -0x12c(%rbp),%edx
  440b76:	8b b5 d8 fe ff ff    	mov    -0x128(%rbp),%esi
  440b7c:	33 b5 dc fe ff ff    	xor    -0x124(%rbp),%esi
  440b82:	21 f2                	and    %esi,%edx
  440b84:	31 d1                	xor    %edx,%ecx
  440b86:	01 c8                	add    %ecx,%eax
  440b88:	8b 8d bc fe ff ff    	mov    -0x144(%rbp),%ecx
  440b8e:	83 c1 07             	add    $0x7,%ecx
  440b91:	89 c9                	mov    %ecx,%ecx
  440b93:	89 cf                	mov    %ecx,%edi
  440b95:	03 04 bd 80 e3 44 00 	add    0x44e380(,%rdi,4),%eax
  440b9c:	8b 8d bc fe ff ff    	mov    -0x144(%rbp),%ecx
  440ba2:	83 c1 07             	add    $0x7,%ecx
  440ba5:	89 c9                	mov    %ecx,%ecx
  440ba7:	89 cf                	mov    %ecx,%edi
  440ba9:	03 84 bd e0 fe ff ff 	add    -0x120(%rbp,%rdi,4),%eax
  440bb0:	89 45 ec             	mov    %eax,-0x14(%rbp)
  440bb3:	8b 85 c4 fe ff ff    	mov    -0x13c(%rbp),%eax
  440bb9:	c1 e8 02             	shr    $0x2,%eax
  440bbc:	8b 8d c4 fe ff ff    	mov    -0x13c(%rbp),%ecx
  440bc2:	c1 e1 1e             	shl    $0x1e,%ecx
  440bc5:	09 c8                	or     %ecx,%eax
  440bc7:	8b 8d c4 fe ff ff    	mov    -0x13c(%rbp),%ecx
  440bcd:	c1 e9 0d             	shr    $0xd,%ecx
  440bd0:	8b 95 c4 fe ff ff    	mov    -0x13c(%rbp),%edx
  440bd6:	c1 e2 13             	shl    $0x13,%edx
  440bd9:	09 d1                	or     %edx,%ecx
  440bdb:	31 c8                	xor    %ecx,%eax
  440bdd:	8b 8d c4 fe ff ff    	mov    -0x13c(%rbp),%ecx
  440be3:	c1 e9 16             	shr    $0x16,%ecx
  440be6:	8b 95 c4 fe ff ff    	mov    -0x13c(%rbp),%edx
  440bec:	c1 e2 0a             	shl    $0xa,%edx
  440bef:	09 d1                	or     %edx,%ecx
  440bf1:	31 c8                	xor    %ecx,%eax
  440bf3:	8b 8d c4 fe ff ff    	mov    -0x13c(%rbp),%ecx
  440bf9:	23 8d c8 fe ff ff    	and    -0x138(%rbp),%ecx
  440bff:	8b 95 cc fe ff ff    	mov    -0x134(%rbp),%edx
  440c05:	8b b5 c4 fe ff ff    	mov    -0x13c(%rbp),%esi
  440c0b:	0b b5 c8 fe ff ff    	or     -0x138(%rbp),%esi
  440c11:	21 f2                	and    %esi,%edx
  440c13:	09 d1                	or     %edx,%ecx
  440c15:	01 c8                	add    %ecx,%eax
  440c17:	89 45 e8             	mov    %eax,-0x18(%rbp)
  440c1a:	8b 45 ec             	mov    -0x14(%rbp),%eax
  440c1d:	03 85 d0 fe ff ff    	add    -0x130(%rbp),%eax
  440c23:	89 85 d0 fe ff ff    	mov    %eax,-0x130(%rbp)
  440c29:	8b 45 ec             	mov    -0x14(%rbp),%eax
  440c2c:	03 45 e8             	add    -0x18(%rbp),%eax
  440c2f:	89 85 c0 fe ff ff    	mov    %eax,-0x140(%rbp)
  440c35:	8b 85 bc fe ff ff    	mov    -0x144(%rbp),%eax
  440c3b:	83 c0 08             	add    $0x8,%eax
  440c3e:	89 85 bc fe ff ff    	mov    %eax,-0x144(%rbp)
  440c44:	e9 47 f7 ff ff       	jmpq   440390 <mbedtls_internal_sha256_process+0x110>
  440c49:	c7 85 bc fe ff ff 10 	movl   $0x10,-0x144(%rbp)
  440c50:	00 00 00 
  440c53:	83 bd bc fe ff ff 40 	cmpl   $0x40,-0x144(%rbp)
  440c5a:	0f 83 1c 13 00 00    	jae    441f7c <mbedtls_internal_sha256_process+0x1cfc>
  440c60:	8b 85 dc fe ff ff    	mov    -0x124(%rbp),%eax
  440c66:	8b 8d d0 fe ff ff    	mov    -0x130(%rbp),%ecx
  440c6c:	c1 e9 06             	shr    $0x6,%ecx
  440c6f:	8b 95 d0 fe ff ff    	mov    -0x130(%rbp),%edx
  440c75:	c1 e2 1a             	shl    $0x1a,%edx
  440c78:	09 d1                	or     %edx,%ecx
  440c7a:	8b 95 d0 fe ff ff    	mov    -0x130(%rbp),%edx
  440c80:	c1 ea 0b             	shr    $0xb,%edx
  440c83:	8b b5 d0 fe ff ff    	mov    -0x130(%rbp),%esi
  440c89:	c1 e6 15             	shl    $0x15,%esi
  440c8c:	09 f2                	or     %esi,%edx
  440c8e:	31 d1                	xor    %edx,%ecx
  440c90:	8b 95 d0 fe ff ff    	mov    -0x130(%rbp),%edx
  440c96:	c1 ea 19             	shr    $0x19,%edx
  440c99:	8b b5 d0 fe ff ff    	mov    -0x130(%rbp),%esi
  440c9f:	c1 e6 07             	shl    $0x7,%esi
  440ca2:	09 f2                	or     %esi,%edx
  440ca4:	31 d1                	xor    %edx,%ecx
  440ca6:	01 c8                	add    %ecx,%eax
  440ca8:	8b 8d d8 fe ff ff    	mov    -0x128(%rbp),%ecx
  440cae:	8b 95 d0 fe ff ff    	mov    -0x130(%rbp),%edx
  440cb4:	8b b5 d4 fe ff ff    	mov    -0x12c(%rbp),%esi
  440cba:	33 b5 d8 fe ff ff    	xor    -0x128(%rbp),%esi
  440cc0:	21 f2                	and    %esi,%edx
  440cc2:	31 d1                	xor    %edx,%ecx
  440cc4:	01 c8                	add    %ecx,%eax
  440cc6:	8b 8d bc fe ff ff    	mov    -0x144(%rbp),%ecx
  440ccc:	83 c1 00             	add    $0x0,%ecx
  440ccf:	89 c9                	mov    %ecx,%ecx
  440cd1:	89 cf                	mov    %ecx,%edi
  440cd3:	03 04 bd 80 e3 44 00 	add    0x44e380(,%rdi,4),%eax
  440cda:	8b 8d bc fe ff ff    	mov    -0x144(%rbp),%ecx
  440ce0:	83 c1 00             	add    $0x0,%ecx
  440ce3:	83 e9 02             	sub    $0x2,%ecx
  440ce6:	89 c9                	mov    %ecx,%ecx
  440ce8:	89 cf                	mov    %ecx,%edi
  440cea:	8b 8c bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%ecx
  440cf1:	c1 e9 11             	shr    $0x11,%ecx
  440cf4:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  440cfa:	83 c2 00             	add    $0x0,%edx
  440cfd:	83 ea 02             	sub    $0x2,%edx
  440d00:	89 d2                	mov    %edx,%edx
  440d02:	89 d7                	mov    %edx,%edi
  440d04:	8b 94 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%edx
  440d0b:	c1 e2 0f             	shl    $0xf,%edx
  440d0e:	09 d1                	or     %edx,%ecx
  440d10:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  440d16:	83 c2 00             	add    $0x0,%edx
  440d19:	83 ea 02             	sub    $0x2,%edx
  440d1c:	89 d2                	mov    %edx,%edx
  440d1e:	89 d7                	mov    %edx,%edi
  440d20:	8b 94 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%edx
  440d27:	c1 ea 13             	shr    $0x13,%edx
  440d2a:	8b b5 bc fe ff ff    	mov    -0x144(%rbp),%esi
  440d30:	83 c6 00             	add    $0x0,%esi
  440d33:	83 ee 02             	sub    $0x2,%esi
  440d36:	89 f6                	mov    %esi,%esi
  440d38:	89 f7                	mov    %esi,%edi
  440d3a:	8b b4 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%esi
  440d41:	c1 e6 0d             	shl    $0xd,%esi
  440d44:	09 f2                	or     %esi,%edx
  440d46:	31 d1                	xor    %edx,%ecx
  440d48:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  440d4e:	83 c2 00             	add    $0x0,%edx
  440d51:	83 ea 02             	sub    $0x2,%edx
  440d54:	89 d2                	mov    %edx,%edx
  440d56:	89 d7                	mov    %edx,%edi
  440d58:	8b 94 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%edx
  440d5f:	c1 ea 0a             	shr    $0xa,%edx
  440d62:	31 d1                	xor    %edx,%ecx
  440d64:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  440d6a:	83 c2 00             	add    $0x0,%edx
  440d6d:	83 ea 07             	sub    $0x7,%edx
  440d70:	89 d2                	mov    %edx,%edx
  440d72:	89 d7                	mov    %edx,%edi
  440d74:	03 8c bd e0 fe ff ff 	add    -0x120(%rbp,%rdi,4),%ecx
  440d7b:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  440d81:	83 c2 00             	add    $0x0,%edx
  440d84:	83 ea 0f             	sub    $0xf,%edx
  440d87:	89 d2                	mov    %edx,%edx
  440d89:	89 d7                	mov    %edx,%edi
  440d8b:	8b 94 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%edx
  440d92:	c1 ea 07             	shr    $0x7,%edx
  440d95:	8b b5 bc fe ff ff    	mov    -0x144(%rbp),%esi
  440d9b:	83 c6 00             	add    $0x0,%esi
  440d9e:	83 ee 0f             	sub    $0xf,%esi
  440da1:	89 f6                	mov    %esi,%esi
  440da3:	89 f7                	mov    %esi,%edi
  440da5:	8b b4 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%esi
  440dac:	c1 e6 19             	shl    $0x19,%esi
  440daf:	09 f2                	or     %esi,%edx
  440db1:	8b b5 bc fe ff ff    	mov    -0x144(%rbp),%esi
  440db7:	83 c6 00             	add    $0x0,%esi
  440dba:	83 ee 0f             	sub    $0xf,%esi
  440dbd:	89 f6                	mov    %esi,%esi
  440dbf:	89 f7                	mov    %esi,%edi
  440dc1:	8b b4 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%esi
  440dc8:	c1 ee 12             	shr    $0x12,%esi
  440dcb:	44 8b 85 bc fe ff ff 	mov    -0x144(%rbp),%r8d
  440dd2:	41 83 c0 00          	add    $0x0,%r8d
  440dd6:	41 83 e8 0f          	sub    $0xf,%r8d
  440dda:	45 89 c0             	mov    %r8d,%r8d
  440ddd:	44 89 c7             	mov    %r8d,%edi
  440de0:	44 8b 84 bd e0 fe ff 	mov    -0x120(%rbp,%rdi,4),%r8d
  440de7:	ff 
  440de8:	41 c1 e0 0e          	shl    $0xe,%r8d
  440dec:	44 09 c6             	or     %r8d,%esi
  440def:	31 f2                	xor    %esi,%edx
  440df1:	8b b5 bc fe ff ff    	mov    -0x144(%rbp),%esi
  440df7:	83 c6 00             	add    $0x0,%esi
  440dfa:	83 ee 0f             	sub    $0xf,%esi
  440dfd:	89 f6                	mov    %esi,%esi
  440dff:	89 f7                	mov    %esi,%edi
  440e01:	8b b4 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%esi
  440e08:	c1 ee 03             	shr    $0x3,%esi
  440e0b:	31 f2                	xor    %esi,%edx
  440e0d:	01 d1                	add    %edx,%ecx
  440e0f:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  440e15:	83 c2 00             	add    $0x0,%edx
  440e18:	83 ea 10             	sub    $0x10,%edx
  440e1b:	89 d2                	mov    %edx,%edx
  440e1d:	89 d7                	mov    %edx,%edi
  440e1f:	03 8c bd e0 fe ff ff 	add    -0x120(%rbp,%rdi,4),%ecx
  440e26:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  440e2c:	83 c2 00             	add    $0x0,%edx
  440e2f:	89 d2                	mov    %edx,%edx
  440e31:	89 d7                	mov    %edx,%edi
  440e33:	89 8c bd e0 fe ff ff 	mov    %ecx,-0x120(%rbp,%rdi,4)
  440e3a:	01 c8                	add    %ecx,%eax
  440e3c:	89 45 ec             	mov    %eax,-0x14(%rbp)
  440e3f:	8b 85 c0 fe ff ff    	mov    -0x140(%rbp),%eax
  440e45:	c1 e8 02             	shr    $0x2,%eax
  440e48:	8b 8d c0 fe ff ff    	mov    -0x140(%rbp),%ecx
  440e4e:	c1 e1 1e             	shl    $0x1e,%ecx
  440e51:	09 c8                	or     %ecx,%eax
  440e53:	8b 8d c0 fe ff ff    	mov    -0x140(%rbp),%ecx
  440e59:	c1 e9 0d             	shr    $0xd,%ecx
  440e5c:	8b 95 c0 fe ff ff    	mov    -0x140(%rbp),%edx
  440e62:	c1 e2 13             	shl    $0x13,%edx
  440e65:	09 d1                	or     %edx,%ecx
  440e67:	31 c8                	xor    %ecx,%eax
  440e69:	8b 8d c0 fe ff ff    	mov    -0x140(%rbp),%ecx
  440e6f:	c1 e9 16             	shr    $0x16,%ecx
  440e72:	8b 95 c0 fe ff ff    	mov    -0x140(%rbp),%edx
  440e78:	c1 e2 0a             	shl    $0xa,%edx
  440e7b:	09 d1                	or     %edx,%ecx
  440e7d:	31 c8                	xor    %ecx,%eax
  440e7f:	8b 8d c0 fe ff ff    	mov    -0x140(%rbp),%ecx
  440e85:	23 8d c4 fe ff ff    	and    -0x13c(%rbp),%ecx
  440e8b:	8b 95 c8 fe ff ff    	mov    -0x138(%rbp),%edx
  440e91:	8b b5 c0 fe ff ff    	mov    -0x140(%rbp),%esi
  440e97:	0b b5 c4 fe ff ff    	or     -0x13c(%rbp),%esi
  440e9d:	21 f2                	and    %esi,%edx
  440e9f:	09 d1                	or     %edx,%ecx
  440ea1:	01 c8                	add    %ecx,%eax
  440ea3:	89 45 e8             	mov    %eax,-0x18(%rbp)
  440ea6:	8b 45 ec             	mov    -0x14(%rbp),%eax
  440ea9:	03 85 cc fe ff ff    	add    -0x134(%rbp),%eax
  440eaf:	89 85 cc fe ff ff    	mov    %eax,-0x134(%rbp)
  440eb5:	8b 45 ec             	mov    -0x14(%rbp),%eax
  440eb8:	03 45 e8             	add    -0x18(%rbp),%eax
  440ebb:	89 85 dc fe ff ff    	mov    %eax,-0x124(%rbp)
  440ec1:	8b 85 d8 fe ff ff    	mov    -0x128(%rbp),%eax
  440ec7:	8b 8d cc fe ff ff    	mov    -0x134(%rbp),%ecx
  440ecd:	c1 e9 06             	shr    $0x6,%ecx
  440ed0:	8b 95 cc fe ff ff    	mov    -0x134(%rbp),%edx
  440ed6:	c1 e2 1a             	shl    $0x1a,%edx
  440ed9:	09 d1                	or     %edx,%ecx
  440edb:	8b 95 cc fe ff ff    	mov    -0x134(%rbp),%edx
  440ee1:	c1 ea 0b             	shr    $0xb,%edx
  440ee4:	8b b5 cc fe ff ff    	mov    -0x134(%rbp),%esi
  440eea:	c1 e6 15             	shl    $0x15,%esi
  440eed:	09 f2                	or     %esi,%edx
  440eef:	31 d1                	xor    %edx,%ecx
  440ef1:	8b 95 cc fe ff ff    	mov    -0x134(%rbp),%edx
  440ef7:	c1 ea 19             	shr    $0x19,%edx
  440efa:	8b b5 cc fe ff ff    	mov    -0x134(%rbp),%esi
  440f00:	c1 e6 07             	shl    $0x7,%esi
  440f03:	09 f2                	or     %esi,%edx
  440f05:	31 d1                	xor    %edx,%ecx
  440f07:	01 c8                	add    %ecx,%eax
  440f09:	8b 8d d4 fe ff ff    	mov    -0x12c(%rbp),%ecx
  440f0f:	8b 95 cc fe ff ff    	mov    -0x134(%rbp),%edx
  440f15:	8b b5 d0 fe ff ff    	mov    -0x130(%rbp),%esi
  440f1b:	33 b5 d4 fe ff ff    	xor    -0x12c(%rbp),%esi
  440f21:	21 f2                	and    %esi,%edx
  440f23:	31 d1                	xor    %edx,%ecx
  440f25:	01 c8                	add    %ecx,%eax
  440f27:	8b 8d bc fe ff ff    	mov    -0x144(%rbp),%ecx
  440f2d:	83 c1 01             	add    $0x1,%ecx
  440f30:	89 c9                	mov    %ecx,%ecx
  440f32:	89 cf                	mov    %ecx,%edi
  440f34:	03 04 bd 80 e3 44 00 	add    0x44e380(,%rdi,4),%eax
  440f3b:	8b 8d bc fe ff ff    	mov    -0x144(%rbp),%ecx
  440f41:	83 c1 01             	add    $0x1,%ecx
  440f44:	83 e9 02             	sub    $0x2,%ecx
  440f47:	89 c9                	mov    %ecx,%ecx
  440f49:	89 cf                	mov    %ecx,%edi
  440f4b:	8b 8c bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%ecx
  440f52:	c1 e9 11             	shr    $0x11,%ecx
  440f55:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  440f5b:	83 c2 01             	add    $0x1,%edx
  440f5e:	83 ea 02             	sub    $0x2,%edx
  440f61:	89 d2                	mov    %edx,%edx
  440f63:	89 d7                	mov    %edx,%edi
  440f65:	8b 94 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%edx
  440f6c:	c1 e2 0f             	shl    $0xf,%edx
  440f6f:	09 d1                	or     %edx,%ecx
  440f71:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  440f77:	83 c2 01             	add    $0x1,%edx
  440f7a:	83 ea 02             	sub    $0x2,%edx
  440f7d:	89 d2                	mov    %edx,%edx
  440f7f:	89 d7                	mov    %edx,%edi
  440f81:	8b 94 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%edx
  440f88:	c1 ea 13             	shr    $0x13,%edx
  440f8b:	8b b5 bc fe ff ff    	mov    -0x144(%rbp),%esi
  440f91:	83 c6 01             	add    $0x1,%esi
  440f94:	83 ee 02             	sub    $0x2,%esi
  440f97:	89 f6                	mov    %esi,%esi
  440f99:	89 f7                	mov    %esi,%edi
  440f9b:	8b b4 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%esi
  440fa2:	c1 e6 0d             	shl    $0xd,%esi
  440fa5:	09 f2                	or     %esi,%edx
  440fa7:	31 d1                	xor    %edx,%ecx
  440fa9:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  440faf:	83 c2 01             	add    $0x1,%edx
  440fb2:	83 ea 02             	sub    $0x2,%edx
  440fb5:	89 d2                	mov    %edx,%edx
  440fb7:	89 d7                	mov    %edx,%edi
  440fb9:	8b 94 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%edx
  440fc0:	c1 ea 0a             	shr    $0xa,%edx
  440fc3:	31 d1                	xor    %edx,%ecx
  440fc5:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  440fcb:	83 c2 01             	add    $0x1,%edx
  440fce:	83 ea 07             	sub    $0x7,%edx
  440fd1:	89 d2                	mov    %edx,%edx
  440fd3:	89 d7                	mov    %edx,%edi
  440fd5:	03 8c bd e0 fe ff ff 	add    -0x120(%rbp,%rdi,4),%ecx
  440fdc:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  440fe2:	83 c2 01             	add    $0x1,%edx
  440fe5:	83 ea 0f             	sub    $0xf,%edx
  440fe8:	89 d2                	mov    %edx,%edx
  440fea:	89 d7                	mov    %edx,%edi
  440fec:	8b 94 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%edx
  440ff3:	c1 ea 07             	shr    $0x7,%edx
  440ff6:	8b b5 bc fe ff ff    	mov    -0x144(%rbp),%esi
  440ffc:	83 c6 01             	add    $0x1,%esi
  440fff:	83 ee 0f             	sub    $0xf,%esi
  441002:	89 f6                	mov    %esi,%esi
  441004:	89 f7                	mov    %esi,%edi
  441006:	8b b4 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%esi
  44100d:	c1 e6 19             	shl    $0x19,%esi
  441010:	09 f2                	or     %esi,%edx
  441012:	8b b5 bc fe ff ff    	mov    -0x144(%rbp),%esi
  441018:	83 c6 01             	add    $0x1,%esi
  44101b:	83 ee 0f             	sub    $0xf,%esi
  44101e:	89 f6                	mov    %esi,%esi
  441020:	89 f7                	mov    %esi,%edi
  441022:	8b b4 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%esi
  441029:	c1 ee 12             	shr    $0x12,%esi
  44102c:	44 8b 85 bc fe ff ff 	mov    -0x144(%rbp),%r8d
  441033:	41 83 c0 01          	add    $0x1,%r8d
  441037:	41 83 e8 0f          	sub    $0xf,%r8d
  44103b:	45 89 c0             	mov    %r8d,%r8d
  44103e:	44 89 c7             	mov    %r8d,%edi
  441041:	44 8b 84 bd e0 fe ff 	mov    -0x120(%rbp,%rdi,4),%r8d
  441048:	ff 
  441049:	41 c1 e0 0e          	shl    $0xe,%r8d
  44104d:	44 09 c6             	or     %r8d,%esi
  441050:	31 f2                	xor    %esi,%edx
  441052:	8b b5 bc fe ff ff    	mov    -0x144(%rbp),%esi
  441058:	83 c6 01             	add    $0x1,%esi
  44105b:	83 ee 0f             	sub    $0xf,%esi
  44105e:	89 f6                	mov    %esi,%esi
  441060:	89 f7                	mov    %esi,%edi
  441062:	8b b4 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%esi
  441069:	c1 ee 03             	shr    $0x3,%esi
  44106c:	31 f2                	xor    %esi,%edx
  44106e:	01 d1                	add    %edx,%ecx
  441070:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  441076:	83 c2 01             	add    $0x1,%edx
  441079:	83 ea 10             	sub    $0x10,%edx
  44107c:	89 d2                	mov    %edx,%edx
  44107e:	89 d7                	mov    %edx,%edi
  441080:	03 8c bd e0 fe ff ff 	add    -0x120(%rbp,%rdi,4),%ecx
  441087:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  44108d:	83 c2 01             	add    $0x1,%edx
  441090:	89 d2                	mov    %edx,%edx
  441092:	89 d7                	mov    %edx,%edi
  441094:	89 8c bd e0 fe ff ff 	mov    %ecx,-0x120(%rbp,%rdi,4)
  44109b:	01 c8                	add    %ecx,%eax
  44109d:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4410a0:	8b 85 dc fe ff ff    	mov    -0x124(%rbp),%eax
  4410a6:	c1 e8 02             	shr    $0x2,%eax
  4410a9:	8b 8d dc fe ff ff    	mov    -0x124(%rbp),%ecx
  4410af:	c1 e1 1e             	shl    $0x1e,%ecx
  4410b2:	09 c8                	or     %ecx,%eax
  4410b4:	8b 8d dc fe ff ff    	mov    -0x124(%rbp),%ecx
  4410ba:	c1 e9 0d             	shr    $0xd,%ecx
  4410bd:	8b 95 dc fe ff ff    	mov    -0x124(%rbp),%edx
  4410c3:	c1 e2 13             	shl    $0x13,%edx
  4410c6:	09 d1                	or     %edx,%ecx
  4410c8:	31 c8                	xor    %ecx,%eax
  4410ca:	8b 8d dc fe ff ff    	mov    -0x124(%rbp),%ecx
  4410d0:	c1 e9 16             	shr    $0x16,%ecx
  4410d3:	8b 95 dc fe ff ff    	mov    -0x124(%rbp),%edx
  4410d9:	c1 e2 0a             	shl    $0xa,%edx
  4410dc:	09 d1                	or     %edx,%ecx
  4410de:	31 c8                	xor    %ecx,%eax
  4410e0:	8b 8d dc fe ff ff    	mov    -0x124(%rbp),%ecx
  4410e6:	23 8d c0 fe ff ff    	and    -0x140(%rbp),%ecx
  4410ec:	8b 95 c4 fe ff ff    	mov    -0x13c(%rbp),%edx
  4410f2:	8b b5 dc fe ff ff    	mov    -0x124(%rbp),%esi
  4410f8:	0b b5 c0 fe ff ff    	or     -0x140(%rbp),%esi
  4410fe:	21 f2                	and    %esi,%edx
  441100:	09 d1                	or     %edx,%ecx
  441102:	01 c8                	add    %ecx,%eax
  441104:	89 45 e8             	mov    %eax,-0x18(%rbp)
  441107:	8b 45 ec             	mov    -0x14(%rbp),%eax
  44110a:	03 85 c8 fe ff ff    	add    -0x138(%rbp),%eax
  441110:	89 85 c8 fe ff ff    	mov    %eax,-0x138(%rbp)
  441116:	8b 45 ec             	mov    -0x14(%rbp),%eax
  441119:	03 45 e8             	add    -0x18(%rbp),%eax
  44111c:	89 85 d8 fe ff ff    	mov    %eax,-0x128(%rbp)
  441122:	8b 85 d4 fe ff ff    	mov    -0x12c(%rbp),%eax
  441128:	8b 8d c8 fe ff ff    	mov    -0x138(%rbp),%ecx
  44112e:	c1 e9 06             	shr    $0x6,%ecx
  441131:	8b 95 c8 fe ff ff    	mov    -0x138(%rbp),%edx
  441137:	c1 e2 1a             	shl    $0x1a,%edx
  44113a:	09 d1                	or     %edx,%ecx
  44113c:	8b 95 c8 fe ff ff    	mov    -0x138(%rbp),%edx
  441142:	c1 ea 0b             	shr    $0xb,%edx
  441145:	8b b5 c8 fe ff ff    	mov    -0x138(%rbp),%esi
  44114b:	c1 e6 15             	shl    $0x15,%esi
  44114e:	09 f2                	or     %esi,%edx
  441150:	31 d1                	xor    %edx,%ecx
  441152:	8b 95 c8 fe ff ff    	mov    -0x138(%rbp),%edx
  441158:	c1 ea 19             	shr    $0x19,%edx
  44115b:	8b b5 c8 fe ff ff    	mov    -0x138(%rbp),%esi
  441161:	c1 e6 07             	shl    $0x7,%esi
  441164:	09 f2                	or     %esi,%edx
  441166:	31 d1                	xor    %edx,%ecx
  441168:	01 c8                	add    %ecx,%eax
  44116a:	8b 8d d0 fe ff ff    	mov    -0x130(%rbp),%ecx
  441170:	8b 95 c8 fe ff ff    	mov    -0x138(%rbp),%edx
  441176:	8b b5 cc fe ff ff    	mov    -0x134(%rbp),%esi
  44117c:	33 b5 d0 fe ff ff    	xor    -0x130(%rbp),%esi
  441182:	21 f2                	and    %esi,%edx
  441184:	31 d1                	xor    %edx,%ecx
  441186:	01 c8                	add    %ecx,%eax
  441188:	8b 8d bc fe ff ff    	mov    -0x144(%rbp),%ecx
  44118e:	83 c1 02             	add    $0x2,%ecx
  441191:	89 c9                	mov    %ecx,%ecx
  441193:	89 cf                	mov    %ecx,%edi
  441195:	03 04 bd 80 e3 44 00 	add    0x44e380(,%rdi,4),%eax
  44119c:	8b 8d bc fe ff ff    	mov    -0x144(%rbp),%ecx
  4411a2:	83 c1 02             	add    $0x2,%ecx
  4411a5:	83 e9 02             	sub    $0x2,%ecx
  4411a8:	89 c9                	mov    %ecx,%ecx
  4411aa:	89 cf                	mov    %ecx,%edi
  4411ac:	8b 8c bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%ecx
  4411b3:	c1 e9 11             	shr    $0x11,%ecx
  4411b6:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  4411bc:	83 c2 02             	add    $0x2,%edx
  4411bf:	83 ea 02             	sub    $0x2,%edx
  4411c2:	89 d2                	mov    %edx,%edx
  4411c4:	89 d7                	mov    %edx,%edi
  4411c6:	8b 94 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%edx
  4411cd:	c1 e2 0f             	shl    $0xf,%edx
  4411d0:	09 d1                	or     %edx,%ecx
  4411d2:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  4411d8:	83 c2 02             	add    $0x2,%edx
  4411db:	83 ea 02             	sub    $0x2,%edx
  4411de:	89 d2                	mov    %edx,%edx
  4411e0:	89 d7                	mov    %edx,%edi
  4411e2:	8b 94 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%edx
  4411e9:	c1 ea 13             	shr    $0x13,%edx
  4411ec:	8b b5 bc fe ff ff    	mov    -0x144(%rbp),%esi
  4411f2:	83 c6 02             	add    $0x2,%esi
  4411f5:	83 ee 02             	sub    $0x2,%esi
  4411f8:	89 f6                	mov    %esi,%esi
  4411fa:	89 f7                	mov    %esi,%edi
  4411fc:	8b b4 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%esi
  441203:	c1 e6 0d             	shl    $0xd,%esi
  441206:	09 f2                	or     %esi,%edx
  441208:	31 d1                	xor    %edx,%ecx
  44120a:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  441210:	83 c2 02             	add    $0x2,%edx
  441213:	83 ea 02             	sub    $0x2,%edx
  441216:	89 d2                	mov    %edx,%edx
  441218:	89 d7                	mov    %edx,%edi
  44121a:	8b 94 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%edx
  441221:	c1 ea 0a             	shr    $0xa,%edx
  441224:	31 d1                	xor    %edx,%ecx
  441226:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  44122c:	83 c2 02             	add    $0x2,%edx
  44122f:	83 ea 07             	sub    $0x7,%edx
  441232:	89 d2                	mov    %edx,%edx
  441234:	89 d7                	mov    %edx,%edi
  441236:	03 8c bd e0 fe ff ff 	add    -0x120(%rbp,%rdi,4),%ecx
  44123d:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  441243:	83 c2 02             	add    $0x2,%edx
  441246:	83 ea 0f             	sub    $0xf,%edx
  441249:	89 d2                	mov    %edx,%edx
  44124b:	89 d7                	mov    %edx,%edi
  44124d:	8b 94 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%edx
  441254:	c1 ea 07             	shr    $0x7,%edx
  441257:	8b b5 bc fe ff ff    	mov    -0x144(%rbp),%esi
  44125d:	83 c6 02             	add    $0x2,%esi
  441260:	83 ee 0f             	sub    $0xf,%esi
  441263:	89 f6                	mov    %esi,%esi
  441265:	89 f7                	mov    %esi,%edi
  441267:	8b b4 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%esi
  44126e:	c1 e6 19             	shl    $0x19,%esi
  441271:	09 f2                	or     %esi,%edx
  441273:	8b b5 bc fe ff ff    	mov    -0x144(%rbp),%esi
  441279:	83 c6 02             	add    $0x2,%esi
  44127c:	83 ee 0f             	sub    $0xf,%esi
  44127f:	89 f6                	mov    %esi,%esi
  441281:	89 f7                	mov    %esi,%edi
  441283:	8b b4 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%esi
  44128a:	c1 ee 12             	shr    $0x12,%esi
  44128d:	44 8b 85 bc fe ff ff 	mov    -0x144(%rbp),%r8d
  441294:	41 83 c0 02          	add    $0x2,%r8d
  441298:	41 83 e8 0f          	sub    $0xf,%r8d
  44129c:	45 89 c0             	mov    %r8d,%r8d
  44129f:	44 89 c7             	mov    %r8d,%edi
  4412a2:	44 8b 84 bd e0 fe ff 	mov    -0x120(%rbp,%rdi,4),%r8d
  4412a9:	ff 
  4412aa:	41 c1 e0 0e          	shl    $0xe,%r8d
  4412ae:	44 09 c6             	or     %r8d,%esi
  4412b1:	31 f2                	xor    %esi,%edx
  4412b3:	8b b5 bc fe ff ff    	mov    -0x144(%rbp),%esi
  4412b9:	83 c6 02             	add    $0x2,%esi
  4412bc:	83 ee 0f             	sub    $0xf,%esi
  4412bf:	89 f6                	mov    %esi,%esi
  4412c1:	89 f7                	mov    %esi,%edi
  4412c3:	8b b4 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%esi
  4412ca:	c1 ee 03             	shr    $0x3,%esi
  4412cd:	31 f2                	xor    %esi,%edx
  4412cf:	01 d1                	add    %edx,%ecx
  4412d1:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  4412d7:	83 c2 02             	add    $0x2,%edx
  4412da:	83 ea 10             	sub    $0x10,%edx
  4412dd:	89 d2                	mov    %edx,%edx
  4412df:	89 d7                	mov    %edx,%edi
  4412e1:	03 8c bd e0 fe ff ff 	add    -0x120(%rbp,%rdi,4),%ecx
  4412e8:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  4412ee:	83 c2 02             	add    $0x2,%edx
  4412f1:	89 d2                	mov    %edx,%edx
  4412f3:	89 d7                	mov    %edx,%edi
  4412f5:	89 8c bd e0 fe ff ff 	mov    %ecx,-0x120(%rbp,%rdi,4)
  4412fc:	01 c8                	add    %ecx,%eax
  4412fe:	89 45 ec             	mov    %eax,-0x14(%rbp)
  441301:	8b 85 d8 fe ff ff    	mov    -0x128(%rbp),%eax
  441307:	c1 e8 02             	shr    $0x2,%eax
  44130a:	8b 8d d8 fe ff ff    	mov    -0x128(%rbp),%ecx
  441310:	c1 e1 1e             	shl    $0x1e,%ecx
  441313:	09 c8                	or     %ecx,%eax
  441315:	8b 8d d8 fe ff ff    	mov    -0x128(%rbp),%ecx
  44131b:	c1 e9 0d             	shr    $0xd,%ecx
  44131e:	8b 95 d8 fe ff ff    	mov    -0x128(%rbp),%edx
  441324:	c1 e2 13             	shl    $0x13,%edx
  441327:	09 d1                	or     %edx,%ecx
  441329:	31 c8                	xor    %ecx,%eax
  44132b:	8b 8d d8 fe ff ff    	mov    -0x128(%rbp),%ecx
  441331:	c1 e9 16             	shr    $0x16,%ecx
  441334:	8b 95 d8 fe ff ff    	mov    -0x128(%rbp),%edx
  44133a:	c1 e2 0a             	shl    $0xa,%edx
  44133d:	09 d1                	or     %edx,%ecx
  44133f:	31 c8                	xor    %ecx,%eax
  441341:	8b 8d d8 fe ff ff    	mov    -0x128(%rbp),%ecx
  441347:	23 8d dc fe ff ff    	and    -0x124(%rbp),%ecx
  44134d:	8b 95 c0 fe ff ff    	mov    -0x140(%rbp),%edx
  441353:	8b b5 d8 fe ff ff    	mov    -0x128(%rbp),%esi
  441359:	0b b5 dc fe ff ff    	or     -0x124(%rbp),%esi
  44135f:	21 f2                	and    %esi,%edx
  441361:	09 d1                	or     %edx,%ecx
  441363:	01 c8                	add    %ecx,%eax
  441365:	89 45 e8             	mov    %eax,-0x18(%rbp)
  441368:	8b 45 ec             	mov    -0x14(%rbp),%eax
  44136b:	03 85 c4 fe ff ff    	add    -0x13c(%rbp),%eax
  441371:	89 85 c4 fe ff ff    	mov    %eax,-0x13c(%rbp)
  441377:	8b 45 ec             	mov    -0x14(%rbp),%eax
  44137a:	03 45 e8             	add    -0x18(%rbp),%eax
  44137d:	89 85 d4 fe ff ff    	mov    %eax,-0x12c(%rbp)
  441383:	8b 85 d0 fe ff ff    	mov    -0x130(%rbp),%eax
  441389:	8b 8d c4 fe ff ff    	mov    -0x13c(%rbp),%ecx
  44138f:	c1 e9 06             	shr    $0x6,%ecx
  441392:	8b 95 c4 fe ff ff    	mov    -0x13c(%rbp),%edx
  441398:	c1 e2 1a             	shl    $0x1a,%edx
  44139b:	09 d1                	or     %edx,%ecx
  44139d:	8b 95 c4 fe ff ff    	mov    -0x13c(%rbp),%edx
  4413a3:	c1 ea 0b             	shr    $0xb,%edx
  4413a6:	8b b5 c4 fe ff ff    	mov    -0x13c(%rbp),%esi
  4413ac:	c1 e6 15             	shl    $0x15,%esi
  4413af:	09 f2                	or     %esi,%edx
  4413b1:	31 d1                	xor    %edx,%ecx
  4413b3:	8b 95 c4 fe ff ff    	mov    -0x13c(%rbp),%edx
  4413b9:	c1 ea 19             	shr    $0x19,%edx
  4413bc:	8b b5 c4 fe ff ff    	mov    -0x13c(%rbp),%esi
  4413c2:	c1 e6 07             	shl    $0x7,%esi
  4413c5:	09 f2                	or     %esi,%edx
  4413c7:	31 d1                	xor    %edx,%ecx
  4413c9:	01 c8                	add    %ecx,%eax
  4413cb:	8b 8d cc fe ff ff    	mov    -0x134(%rbp),%ecx
  4413d1:	8b 95 c4 fe ff ff    	mov    -0x13c(%rbp),%edx
  4413d7:	8b b5 c8 fe ff ff    	mov    -0x138(%rbp),%esi
  4413dd:	33 b5 cc fe ff ff    	xor    -0x134(%rbp),%esi
  4413e3:	21 f2                	and    %esi,%edx
  4413e5:	31 d1                	xor    %edx,%ecx
  4413e7:	01 c8                	add    %ecx,%eax
  4413e9:	8b 8d bc fe ff ff    	mov    -0x144(%rbp),%ecx
  4413ef:	83 c1 03             	add    $0x3,%ecx
  4413f2:	89 c9                	mov    %ecx,%ecx
  4413f4:	89 cf                	mov    %ecx,%edi
  4413f6:	03 04 bd 80 e3 44 00 	add    0x44e380(,%rdi,4),%eax
  4413fd:	8b 8d bc fe ff ff    	mov    -0x144(%rbp),%ecx
  441403:	83 c1 03             	add    $0x3,%ecx
  441406:	83 e9 02             	sub    $0x2,%ecx
  441409:	89 c9                	mov    %ecx,%ecx
  44140b:	89 cf                	mov    %ecx,%edi
  44140d:	8b 8c bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%ecx
  441414:	c1 e9 11             	shr    $0x11,%ecx
  441417:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  44141d:	83 c2 03             	add    $0x3,%edx
  441420:	83 ea 02             	sub    $0x2,%edx
  441423:	89 d2                	mov    %edx,%edx
  441425:	89 d7                	mov    %edx,%edi
  441427:	8b 94 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%edx
  44142e:	c1 e2 0f             	shl    $0xf,%edx
  441431:	09 d1                	or     %edx,%ecx
  441433:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  441439:	83 c2 03             	add    $0x3,%edx
  44143c:	83 ea 02             	sub    $0x2,%edx
  44143f:	89 d2                	mov    %edx,%edx
  441441:	89 d7                	mov    %edx,%edi
  441443:	8b 94 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%edx
  44144a:	c1 ea 13             	shr    $0x13,%edx
  44144d:	8b b5 bc fe ff ff    	mov    -0x144(%rbp),%esi
  441453:	83 c6 03             	add    $0x3,%esi
  441456:	83 ee 02             	sub    $0x2,%esi
  441459:	89 f6                	mov    %esi,%esi
  44145b:	89 f7                	mov    %esi,%edi
  44145d:	8b b4 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%esi
  441464:	c1 e6 0d             	shl    $0xd,%esi
  441467:	09 f2                	or     %esi,%edx
  441469:	31 d1                	xor    %edx,%ecx
  44146b:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  441471:	83 c2 03             	add    $0x3,%edx
  441474:	83 ea 02             	sub    $0x2,%edx
  441477:	89 d2                	mov    %edx,%edx
  441479:	89 d7                	mov    %edx,%edi
  44147b:	8b 94 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%edx
  441482:	c1 ea 0a             	shr    $0xa,%edx
  441485:	31 d1                	xor    %edx,%ecx
  441487:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  44148d:	83 c2 03             	add    $0x3,%edx
  441490:	83 ea 07             	sub    $0x7,%edx
  441493:	89 d2                	mov    %edx,%edx
  441495:	89 d7                	mov    %edx,%edi
  441497:	03 8c bd e0 fe ff ff 	add    -0x120(%rbp,%rdi,4),%ecx
  44149e:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  4414a4:	83 c2 03             	add    $0x3,%edx
  4414a7:	83 ea 0f             	sub    $0xf,%edx
  4414aa:	89 d2                	mov    %edx,%edx
  4414ac:	89 d7                	mov    %edx,%edi
  4414ae:	8b 94 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%edx
  4414b5:	c1 ea 07             	shr    $0x7,%edx
  4414b8:	8b b5 bc fe ff ff    	mov    -0x144(%rbp),%esi
  4414be:	83 c6 03             	add    $0x3,%esi
  4414c1:	83 ee 0f             	sub    $0xf,%esi
  4414c4:	89 f6                	mov    %esi,%esi
  4414c6:	89 f7                	mov    %esi,%edi
  4414c8:	8b b4 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%esi
  4414cf:	c1 e6 19             	shl    $0x19,%esi
  4414d2:	09 f2                	or     %esi,%edx
  4414d4:	8b b5 bc fe ff ff    	mov    -0x144(%rbp),%esi
  4414da:	83 c6 03             	add    $0x3,%esi
  4414dd:	83 ee 0f             	sub    $0xf,%esi
  4414e0:	89 f6                	mov    %esi,%esi
  4414e2:	89 f7                	mov    %esi,%edi
  4414e4:	8b b4 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%esi
  4414eb:	c1 ee 12             	shr    $0x12,%esi
  4414ee:	44 8b 85 bc fe ff ff 	mov    -0x144(%rbp),%r8d
  4414f5:	41 83 c0 03          	add    $0x3,%r8d
  4414f9:	41 83 e8 0f          	sub    $0xf,%r8d
  4414fd:	45 89 c0             	mov    %r8d,%r8d
  441500:	44 89 c7             	mov    %r8d,%edi
  441503:	44 8b 84 bd e0 fe ff 	mov    -0x120(%rbp,%rdi,4),%r8d
  44150a:	ff 
  44150b:	41 c1 e0 0e          	shl    $0xe,%r8d
  44150f:	44 09 c6             	or     %r8d,%esi
  441512:	31 f2                	xor    %esi,%edx
  441514:	8b b5 bc fe ff ff    	mov    -0x144(%rbp),%esi
  44151a:	83 c6 03             	add    $0x3,%esi
  44151d:	83 ee 0f             	sub    $0xf,%esi
  441520:	89 f6                	mov    %esi,%esi
  441522:	89 f7                	mov    %esi,%edi
  441524:	8b b4 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%esi
  44152b:	c1 ee 03             	shr    $0x3,%esi
  44152e:	31 f2                	xor    %esi,%edx
  441530:	01 d1                	add    %edx,%ecx
  441532:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  441538:	83 c2 03             	add    $0x3,%edx
  44153b:	83 ea 10             	sub    $0x10,%edx
  44153e:	89 d2                	mov    %edx,%edx
  441540:	89 d7                	mov    %edx,%edi
  441542:	03 8c bd e0 fe ff ff 	add    -0x120(%rbp,%rdi,4),%ecx
  441549:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  44154f:	83 c2 03             	add    $0x3,%edx
  441552:	89 d2                	mov    %edx,%edx
  441554:	89 d7                	mov    %edx,%edi
  441556:	89 8c bd e0 fe ff ff 	mov    %ecx,-0x120(%rbp,%rdi,4)
  44155d:	01 c8                	add    %ecx,%eax
  44155f:	89 45 ec             	mov    %eax,-0x14(%rbp)
  441562:	8b 85 d4 fe ff ff    	mov    -0x12c(%rbp),%eax
  441568:	c1 e8 02             	shr    $0x2,%eax
  44156b:	8b 8d d4 fe ff ff    	mov    -0x12c(%rbp),%ecx
  441571:	c1 e1 1e             	shl    $0x1e,%ecx
  441574:	09 c8                	or     %ecx,%eax
  441576:	8b 8d d4 fe ff ff    	mov    -0x12c(%rbp),%ecx
  44157c:	c1 e9 0d             	shr    $0xd,%ecx
  44157f:	8b 95 d4 fe ff ff    	mov    -0x12c(%rbp),%edx
  441585:	c1 e2 13             	shl    $0x13,%edx
  441588:	09 d1                	or     %edx,%ecx
  44158a:	31 c8                	xor    %ecx,%eax
  44158c:	8b 8d d4 fe ff ff    	mov    -0x12c(%rbp),%ecx
  441592:	c1 e9 16             	shr    $0x16,%ecx
  441595:	8b 95 d4 fe ff ff    	mov    -0x12c(%rbp),%edx
  44159b:	c1 e2 0a             	shl    $0xa,%edx
  44159e:	09 d1                	or     %edx,%ecx
  4415a0:	31 c8                	xor    %ecx,%eax
  4415a2:	8b 8d d4 fe ff ff    	mov    -0x12c(%rbp),%ecx
  4415a8:	23 8d d8 fe ff ff    	and    -0x128(%rbp),%ecx
  4415ae:	8b 95 dc fe ff ff    	mov    -0x124(%rbp),%edx
  4415b4:	8b b5 d4 fe ff ff    	mov    -0x12c(%rbp),%esi
  4415ba:	0b b5 d8 fe ff ff    	or     -0x128(%rbp),%esi
  4415c0:	21 f2                	and    %esi,%edx
  4415c2:	09 d1                	or     %edx,%ecx
  4415c4:	01 c8                	add    %ecx,%eax
  4415c6:	89 45 e8             	mov    %eax,-0x18(%rbp)
  4415c9:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4415cc:	03 85 c0 fe ff ff    	add    -0x140(%rbp),%eax
  4415d2:	89 85 c0 fe ff ff    	mov    %eax,-0x140(%rbp)
  4415d8:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4415db:	03 45 e8             	add    -0x18(%rbp),%eax
  4415de:	89 85 d0 fe ff ff    	mov    %eax,-0x130(%rbp)
  4415e4:	8b 85 cc fe ff ff    	mov    -0x134(%rbp),%eax
  4415ea:	8b 8d c0 fe ff ff    	mov    -0x140(%rbp),%ecx
  4415f0:	c1 e9 06             	shr    $0x6,%ecx
  4415f3:	8b 95 c0 fe ff ff    	mov    -0x140(%rbp),%edx
  4415f9:	c1 e2 1a             	shl    $0x1a,%edx
  4415fc:	09 d1                	or     %edx,%ecx
  4415fe:	8b 95 c0 fe ff ff    	mov    -0x140(%rbp),%edx
  441604:	c1 ea 0b             	shr    $0xb,%edx
  441607:	8b b5 c0 fe ff ff    	mov    -0x140(%rbp),%esi
  44160d:	c1 e6 15             	shl    $0x15,%esi
  441610:	09 f2                	or     %esi,%edx
  441612:	31 d1                	xor    %edx,%ecx
  441614:	8b 95 c0 fe ff ff    	mov    -0x140(%rbp),%edx
  44161a:	c1 ea 19             	shr    $0x19,%edx
  44161d:	8b b5 c0 fe ff ff    	mov    -0x140(%rbp),%esi
  441623:	c1 e6 07             	shl    $0x7,%esi
  441626:	09 f2                	or     %esi,%edx
  441628:	31 d1                	xor    %edx,%ecx
  44162a:	01 c8                	add    %ecx,%eax
  44162c:	8b 8d c8 fe ff ff    	mov    -0x138(%rbp),%ecx
  441632:	8b 95 c0 fe ff ff    	mov    -0x140(%rbp),%edx
  441638:	8b b5 c4 fe ff ff    	mov    -0x13c(%rbp),%esi
  44163e:	33 b5 c8 fe ff ff    	xor    -0x138(%rbp),%esi
  441644:	21 f2                	and    %esi,%edx
  441646:	31 d1                	xor    %edx,%ecx
  441648:	01 c8                	add    %ecx,%eax
  44164a:	8b 8d bc fe ff ff    	mov    -0x144(%rbp),%ecx
  441650:	83 c1 04             	add    $0x4,%ecx
  441653:	89 c9                	mov    %ecx,%ecx
  441655:	89 cf                	mov    %ecx,%edi
  441657:	03 04 bd 80 e3 44 00 	add    0x44e380(,%rdi,4),%eax
  44165e:	8b 8d bc fe ff ff    	mov    -0x144(%rbp),%ecx
  441664:	83 c1 04             	add    $0x4,%ecx
  441667:	83 e9 02             	sub    $0x2,%ecx
  44166a:	89 c9                	mov    %ecx,%ecx
  44166c:	89 cf                	mov    %ecx,%edi
  44166e:	8b 8c bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%ecx
  441675:	c1 e9 11             	shr    $0x11,%ecx
  441678:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  44167e:	83 c2 04             	add    $0x4,%edx
  441681:	83 ea 02             	sub    $0x2,%edx
  441684:	89 d2                	mov    %edx,%edx
  441686:	89 d7                	mov    %edx,%edi
  441688:	8b 94 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%edx
  44168f:	c1 e2 0f             	shl    $0xf,%edx
  441692:	09 d1                	or     %edx,%ecx
  441694:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  44169a:	83 c2 04             	add    $0x4,%edx
  44169d:	83 ea 02             	sub    $0x2,%edx
  4416a0:	89 d2                	mov    %edx,%edx
  4416a2:	89 d7                	mov    %edx,%edi
  4416a4:	8b 94 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%edx
  4416ab:	c1 ea 13             	shr    $0x13,%edx
  4416ae:	8b b5 bc fe ff ff    	mov    -0x144(%rbp),%esi
  4416b4:	83 c6 04             	add    $0x4,%esi
  4416b7:	83 ee 02             	sub    $0x2,%esi
  4416ba:	89 f6                	mov    %esi,%esi
  4416bc:	89 f7                	mov    %esi,%edi
  4416be:	8b b4 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%esi
  4416c5:	c1 e6 0d             	shl    $0xd,%esi
  4416c8:	09 f2                	or     %esi,%edx
  4416ca:	31 d1                	xor    %edx,%ecx
  4416cc:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  4416d2:	83 c2 04             	add    $0x4,%edx
  4416d5:	83 ea 02             	sub    $0x2,%edx
  4416d8:	89 d2                	mov    %edx,%edx
  4416da:	89 d7                	mov    %edx,%edi
  4416dc:	8b 94 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%edx
  4416e3:	c1 ea 0a             	shr    $0xa,%edx
  4416e6:	31 d1                	xor    %edx,%ecx
  4416e8:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  4416ee:	83 c2 04             	add    $0x4,%edx
  4416f1:	83 ea 07             	sub    $0x7,%edx
  4416f4:	89 d2                	mov    %edx,%edx
  4416f6:	89 d7                	mov    %edx,%edi
  4416f8:	03 8c bd e0 fe ff ff 	add    -0x120(%rbp,%rdi,4),%ecx
  4416ff:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  441705:	83 c2 04             	add    $0x4,%edx
  441708:	83 ea 0f             	sub    $0xf,%edx
  44170b:	89 d2                	mov    %edx,%edx
  44170d:	89 d7                	mov    %edx,%edi
  44170f:	8b 94 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%edx
  441716:	c1 ea 07             	shr    $0x7,%edx
  441719:	8b b5 bc fe ff ff    	mov    -0x144(%rbp),%esi
  44171f:	83 c6 04             	add    $0x4,%esi
  441722:	83 ee 0f             	sub    $0xf,%esi
  441725:	89 f6                	mov    %esi,%esi
  441727:	89 f7                	mov    %esi,%edi
  441729:	8b b4 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%esi
  441730:	c1 e6 19             	shl    $0x19,%esi
  441733:	09 f2                	or     %esi,%edx
  441735:	8b b5 bc fe ff ff    	mov    -0x144(%rbp),%esi
  44173b:	83 c6 04             	add    $0x4,%esi
  44173e:	83 ee 0f             	sub    $0xf,%esi
  441741:	89 f6                	mov    %esi,%esi
  441743:	89 f7                	mov    %esi,%edi
  441745:	8b b4 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%esi
  44174c:	c1 ee 12             	shr    $0x12,%esi
  44174f:	44 8b 85 bc fe ff ff 	mov    -0x144(%rbp),%r8d
  441756:	41 83 c0 04          	add    $0x4,%r8d
  44175a:	41 83 e8 0f          	sub    $0xf,%r8d
  44175e:	45 89 c0             	mov    %r8d,%r8d
  441761:	44 89 c7             	mov    %r8d,%edi
  441764:	44 8b 84 bd e0 fe ff 	mov    -0x120(%rbp,%rdi,4),%r8d
  44176b:	ff 
  44176c:	41 c1 e0 0e          	shl    $0xe,%r8d
  441770:	44 09 c6             	or     %r8d,%esi
  441773:	31 f2                	xor    %esi,%edx
  441775:	8b b5 bc fe ff ff    	mov    -0x144(%rbp),%esi
  44177b:	83 c6 04             	add    $0x4,%esi
  44177e:	83 ee 0f             	sub    $0xf,%esi
  441781:	89 f6                	mov    %esi,%esi
  441783:	89 f7                	mov    %esi,%edi
  441785:	8b b4 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%esi
  44178c:	c1 ee 03             	shr    $0x3,%esi
  44178f:	31 f2                	xor    %esi,%edx
  441791:	01 d1                	add    %edx,%ecx
  441793:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  441799:	83 c2 04             	add    $0x4,%edx
  44179c:	83 ea 10             	sub    $0x10,%edx
  44179f:	89 d2                	mov    %edx,%edx
  4417a1:	89 d7                	mov    %edx,%edi
  4417a3:	03 8c bd e0 fe ff ff 	add    -0x120(%rbp,%rdi,4),%ecx
  4417aa:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  4417b0:	83 c2 04             	add    $0x4,%edx
  4417b3:	89 d2                	mov    %edx,%edx
  4417b5:	89 d7                	mov    %edx,%edi
  4417b7:	89 8c bd e0 fe ff ff 	mov    %ecx,-0x120(%rbp,%rdi,4)
  4417be:	01 c8                	add    %ecx,%eax
  4417c0:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4417c3:	8b 85 d0 fe ff ff    	mov    -0x130(%rbp),%eax
  4417c9:	c1 e8 02             	shr    $0x2,%eax
  4417cc:	8b 8d d0 fe ff ff    	mov    -0x130(%rbp),%ecx
  4417d2:	c1 e1 1e             	shl    $0x1e,%ecx
  4417d5:	09 c8                	or     %ecx,%eax
  4417d7:	8b 8d d0 fe ff ff    	mov    -0x130(%rbp),%ecx
  4417dd:	c1 e9 0d             	shr    $0xd,%ecx
  4417e0:	8b 95 d0 fe ff ff    	mov    -0x130(%rbp),%edx
  4417e6:	c1 e2 13             	shl    $0x13,%edx
  4417e9:	09 d1                	or     %edx,%ecx
  4417eb:	31 c8                	xor    %ecx,%eax
  4417ed:	8b 8d d0 fe ff ff    	mov    -0x130(%rbp),%ecx
  4417f3:	c1 e9 16             	shr    $0x16,%ecx
  4417f6:	8b 95 d0 fe ff ff    	mov    -0x130(%rbp),%edx
  4417fc:	c1 e2 0a             	shl    $0xa,%edx
  4417ff:	09 d1                	or     %edx,%ecx
  441801:	31 c8                	xor    %ecx,%eax
  441803:	8b 8d d0 fe ff ff    	mov    -0x130(%rbp),%ecx
  441809:	23 8d d4 fe ff ff    	and    -0x12c(%rbp),%ecx
  44180f:	8b 95 d8 fe ff ff    	mov    -0x128(%rbp),%edx
  441815:	8b b5 d0 fe ff ff    	mov    -0x130(%rbp),%esi
  44181b:	0b b5 d4 fe ff ff    	or     -0x12c(%rbp),%esi
  441821:	21 f2                	and    %esi,%edx
  441823:	09 d1                	or     %edx,%ecx
  441825:	01 c8                	add    %ecx,%eax
  441827:	89 45 e8             	mov    %eax,-0x18(%rbp)
  44182a:	8b 45 ec             	mov    -0x14(%rbp),%eax
  44182d:	03 85 dc fe ff ff    	add    -0x124(%rbp),%eax
  441833:	89 85 dc fe ff ff    	mov    %eax,-0x124(%rbp)
  441839:	8b 45 ec             	mov    -0x14(%rbp),%eax
  44183c:	03 45 e8             	add    -0x18(%rbp),%eax
  44183f:	89 85 cc fe ff ff    	mov    %eax,-0x134(%rbp)
  441845:	8b 85 c8 fe ff ff    	mov    -0x138(%rbp),%eax
  44184b:	8b 8d dc fe ff ff    	mov    -0x124(%rbp),%ecx
  441851:	c1 e9 06             	shr    $0x6,%ecx
  441854:	8b 95 dc fe ff ff    	mov    -0x124(%rbp),%edx
  44185a:	c1 e2 1a             	shl    $0x1a,%edx
  44185d:	09 d1                	or     %edx,%ecx
  44185f:	8b 95 dc fe ff ff    	mov    -0x124(%rbp),%edx
  441865:	c1 ea 0b             	shr    $0xb,%edx
  441868:	8b b5 dc fe ff ff    	mov    -0x124(%rbp),%esi
  44186e:	c1 e6 15             	shl    $0x15,%esi
  441871:	09 f2                	or     %esi,%edx
  441873:	31 d1                	xor    %edx,%ecx
  441875:	8b 95 dc fe ff ff    	mov    -0x124(%rbp),%edx
  44187b:	c1 ea 19             	shr    $0x19,%edx
  44187e:	8b b5 dc fe ff ff    	mov    -0x124(%rbp),%esi
  441884:	c1 e6 07             	shl    $0x7,%esi
  441887:	09 f2                	or     %esi,%edx
  441889:	31 d1                	xor    %edx,%ecx
  44188b:	01 c8                	add    %ecx,%eax
  44188d:	8b 8d c4 fe ff ff    	mov    -0x13c(%rbp),%ecx
  441893:	8b 95 dc fe ff ff    	mov    -0x124(%rbp),%edx
  441899:	8b b5 c0 fe ff ff    	mov    -0x140(%rbp),%esi
  44189f:	33 b5 c4 fe ff ff    	xor    -0x13c(%rbp),%esi
  4418a5:	21 f2                	and    %esi,%edx
  4418a7:	31 d1                	xor    %edx,%ecx
  4418a9:	01 c8                	add    %ecx,%eax
  4418ab:	8b 8d bc fe ff ff    	mov    -0x144(%rbp),%ecx
  4418b1:	83 c1 05             	add    $0x5,%ecx
  4418b4:	89 c9                	mov    %ecx,%ecx
  4418b6:	89 cf                	mov    %ecx,%edi
  4418b8:	03 04 bd 80 e3 44 00 	add    0x44e380(,%rdi,4),%eax
  4418bf:	8b 8d bc fe ff ff    	mov    -0x144(%rbp),%ecx
  4418c5:	83 c1 05             	add    $0x5,%ecx
  4418c8:	83 e9 02             	sub    $0x2,%ecx
  4418cb:	89 c9                	mov    %ecx,%ecx
  4418cd:	89 cf                	mov    %ecx,%edi
  4418cf:	8b 8c bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%ecx
  4418d6:	c1 e9 11             	shr    $0x11,%ecx
  4418d9:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  4418df:	83 c2 05             	add    $0x5,%edx
  4418e2:	83 ea 02             	sub    $0x2,%edx
  4418e5:	89 d2                	mov    %edx,%edx
  4418e7:	89 d7                	mov    %edx,%edi
  4418e9:	8b 94 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%edx
  4418f0:	c1 e2 0f             	shl    $0xf,%edx
  4418f3:	09 d1                	or     %edx,%ecx
  4418f5:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  4418fb:	83 c2 05             	add    $0x5,%edx
  4418fe:	83 ea 02             	sub    $0x2,%edx
  441901:	89 d2                	mov    %edx,%edx
  441903:	89 d7                	mov    %edx,%edi
  441905:	8b 94 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%edx
  44190c:	c1 ea 13             	shr    $0x13,%edx
  44190f:	8b b5 bc fe ff ff    	mov    -0x144(%rbp),%esi
  441915:	83 c6 05             	add    $0x5,%esi
  441918:	83 ee 02             	sub    $0x2,%esi
  44191b:	89 f6                	mov    %esi,%esi
  44191d:	89 f7                	mov    %esi,%edi
  44191f:	8b b4 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%esi
  441926:	c1 e6 0d             	shl    $0xd,%esi
  441929:	09 f2                	or     %esi,%edx
  44192b:	31 d1                	xor    %edx,%ecx
  44192d:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  441933:	83 c2 05             	add    $0x5,%edx
  441936:	83 ea 02             	sub    $0x2,%edx
  441939:	89 d2                	mov    %edx,%edx
  44193b:	89 d7                	mov    %edx,%edi
  44193d:	8b 94 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%edx
  441944:	c1 ea 0a             	shr    $0xa,%edx
  441947:	31 d1                	xor    %edx,%ecx
  441949:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  44194f:	83 c2 05             	add    $0x5,%edx
  441952:	83 ea 07             	sub    $0x7,%edx
  441955:	89 d2                	mov    %edx,%edx
  441957:	89 d7                	mov    %edx,%edi
  441959:	03 8c bd e0 fe ff ff 	add    -0x120(%rbp,%rdi,4),%ecx
  441960:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  441966:	83 c2 05             	add    $0x5,%edx
  441969:	83 ea 0f             	sub    $0xf,%edx
  44196c:	89 d2                	mov    %edx,%edx
  44196e:	89 d7                	mov    %edx,%edi
  441970:	8b 94 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%edx
  441977:	c1 ea 07             	shr    $0x7,%edx
  44197a:	8b b5 bc fe ff ff    	mov    -0x144(%rbp),%esi
  441980:	83 c6 05             	add    $0x5,%esi
  441983:	83 ee 0f             	sub    $0xf,%esi
  441986:	89 f6                	mov    %esi,%esi
  441988:	89 f7                	mov    %esi,%edi
  44198a:	8b b4 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%esi
  441991:	c1 e6 19             	shl    $0x19,%esi
  441994:	09 f2                	or     %esi,%edx
  441996:	8b b5 bc fe ff ff    	mov    -0x144(%rbp),%esi
  44199c:	83 c6 05             	add    $0x5,%esi
  44199f:	83 ee 0f             	sub    $0xf,%esi
  4419a2:	89 f6                	mov    %esi,%esi
  4419a4:	89 f7                	mov    %esi,%edi
  4419a6:	8b b4 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%esi
  4419ad:	c1 ee 12             	shr    $0x12,%esi
  4419b0:	44 8b 85 bc fe ff ff 	mov    -0x144(%rbp),%r8d
  4419b7:	41 83 c0 05          	add    $0x5,%r8d
  4419bb:	41 83 e8 0f          	sub    $0xf,%r8d
  4419bf:	45 89 c0             	mov    %r8d,%r8d
  4419c2:	44 89 c7             	mov    %r8d,%edi
  4419c5:	44 8b 84 bd e0 fe ff 	mov    -0x120(%rbp,%rdi,4),%r8d
  4419cc:	ff 
  4419cd:	41 c1 e0 0e          	shl    $0xe,%r8d
  4419d1:	44 09 c6             	or     %r8d,%esi
  4419d4:	31 f2                	xor    %esi,%edx
  4419d6:	8b b5 bc fe ff ff    	mov    -0x144(%rbp),%esi
  4419dc:	83 c6 05             	add    $0x5,%esi
  4419df:	83 ee 0f             	sub    $0xf,%esi
  4419e2:	89 f6                	mov    %esi,%esi
  4419e4:	89 f7                	mov    %esi,%edi
  4419e6:	8b b4 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%esi
  4419ed:	c1 ee 03             	shr    $0x3,%esi
  4419f0:	31 f2                	xor    %esi,%edx
  4419f2:	01 d1                	add    %edx,%ecx
  4419f4:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  4419fa:	83 c2 05             	add    $0x5,%edx
  4419fd:	83 ea 10             	sub    $0x10,%edx
  441a00:	89 d2                	mov    %edx,%edx
  441a02:	89 d7                	mov    %edx,%edi
  441a04:	03 8c bd e0 fe ff ff 	add    -0x120(%rbp,%rdi,4),%ecx
  441a0b:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  441a11:	83 c2 05             	add    $0x5,%edx
  441a14:	89 d2                	mov    %edx,%edx
  441a16:	89 d7                	mov    %edx,%edi
  441a18:	89 8c bd e0 fe ff ff 	mov    %ecx,-0x120(%rbp,%rdi,4)
  441a1f:	01 c8                	add    %ecx,%eax
  441a21:	89 45 ec             	mov    %eax,-0x14(%rbp)
  441a24:	8b 85 cc fe ff ff    	mov    -0x134(%rbp),%eax
  441a2a:	c1 e8 02             	shr    $0x2,%eax
  441a2d:	8b 8d cc fe ff ff    	mov    -0x134(%rbp),%ecx
  441a33:	c1 e1 1e             	shl    $0x1e,%ecx
  441a36:	09 c8                	or     %ecx,%eax
  441a38:	8b 8d cc fe ff ff    	mov    -0x134(%rbp),%ecx
  441a3e:	c1 e9 0d             	shr    $0xd,%ecx
  441a41:	8b 95 cc fe ff ff    	mov    -0x134(%rbp),%edx
  441a47:	c1 e2 13             	shl    $0x13,%edx
  441a4a:	09 d1                	or     %edx,%ecx
  441a4c:	31 c8                	xor    %ecx,%eax
  441a4e:	8b 8d cc fe ff ff    	mov    -0x134(%rbp),%ecx
  441a54:	c1 e9 16             	shr    $0x16,%ecx
  441a57:	8b 95 cc fe ff ff    	mov    -0x134(%rbp),%edx
  441a5d:	c1 e2 0a             	shl    $0xa,%edx
  441a60:	09 d1                	or     %edx,%ecx
  441a62:	31 c8                	xor    %ecx,%eax
  441a64:	8b 8d cc fe ff ff    	mov    -0x134(%rbp),%ecx
  441a6a:	23 8d d0 fe ff ff    	and    -0x130(%rbp),%ecx
  441a70:	8b 95 d4 fe ff ff    	mov    -0x12c(%rbp),%edx
  441a76:	8b b5 cc fe ff ff    	mov    -0x134(%rbp),%esi
  441a7c:	0b b5 d0 fe ff ff    	or     -0x130(%rbp),%esi
  441a82:	21 f2                	and    %esi,%edx
  441a84:	09 d1                	or     %edx,%ecx
  441a86:	01 c8                	add    %ecx,%eax
  441a88:	89 45 e8             	mov    %eax,-0x18(%rbp)
  441a8b:	8b 45 ec             	mov    -0x14(%rbp),%eax
  441a8e:	03 85 d8 fe ff ff    	add    -0x128(%rbp),%eax
  441a94:	89 85 d8 fe ff ff    	mov    %eax,-0x128(%rbp)
  441a9a:	8b 45 ec             	mov    -0x14(%rbp),%eax
  441a9d:	03 45 e8             	add    -0x18(%rbp),%eax
  441aa0:	89 85 c8 fe ff ff    	mov    %eax,-0x138(%rbp)
  441aa6:	8b 85 c4 fe ff ff    	mov    -0x13c(%rbp),%eax
  441aac:	8b 8d d8 fe ff ff    	mov    -0x128(%rbp),%ecx
  441ab2:	c1 e9 06             	shr    $0x6,%ecx
  441ab5:	8b 95 d8 fe ff ff    	mov    -0x128(%rbp),%edx
  441abb:	c1 e2 1a             	shl    $0x1a,%edx
  441abe:	09 d1                	or     %edx,%ecx
  441ac0:	8b 95 d8 fe ff ff    	mov    -0x128(%rbp),%edx
  441ac6:	c1 ea 0b             	shr    $0xb,%edx
  441ac9:	8b b5 d8 fe ff ff    	mov    -0x128(%rbp),%esi
  441acf:	c1 e6 15             	shl    $0x15,%esi
  441ad2:	09 f2                	or     %esi,%edx
  441ad4:	31 d1                	xor    %edx,%ecx
  441ad6:	8b 95 d8 fe ff ff    	mov    -0x128(%rbp),%edx
  441adc:	c1 ea 19             	shr    $0x19,%edx
  441adf:	8b b5 d8 fe ff ff    	mov    -0x128(%rbp),%esi
  441ae5:	c1 e6 07             	shl    $0x7,%esi
  441ae8:	09 f2                	or     %esi,%edx
  441aea:	31 d1                	xor    %edx,%ecx
  441aec:	01 c8                	add    %ecx,%eax
  441aee:	8b 8d c0 fe ff ff    	mov    -0x140(%rbp),%ecx
  441af4:	8b 95 d8 fe ff ff    	mov    -0x128(%rbp),%edx
  441afa:	8b b5 dc fe ff ff    	mov    -0x124(%rbp),%esi
  441b00:	33 b5 c0 fe ff ff    	xor    -0x140(%rbp),%esi
  441b06:	21 f2                	and    %esi,%edx
  441b08:	31 d1                	xor    %edx,%ecx
  441b0a:	01 c8                	add    %ecx,%eax
  441b0c:	8b 8d bc fe ff ff    	mov    -0x144(%rbp),%ecx
  441b12:	83 c1 06             	add    $0x6,%ecx
  441b15:	89 c9                	mov    %ecx,%ecx
  441b17:	89 cf                	mov    %ecx,%edi
  441b19:	03 04 bd 80 e3 44 00 	add    0x44e380(,%rdi,4),%eax
  441b20:	8b 8d bc fe ff ff    	mov    -0x144(%rbp),%ecx
  441b26:	83 c1 06             	add    $0x6,%ecx
  441b29:	83 e9 02             	sub    $0x2,%ecx
  441b2c:	89 c9                	mov    %ecx,%ecx
  441b2e:	89 cf                	mov    %ecx,%edi
  441b30:	8b 8c bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%ecx
  441b37:	c1 e9 11             	shr    $0x11,%ecx
  441b3a:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  441b40:	83 c2 06             	add    $0x6,%edx
  441b43:	83 ea 02             	sub    $0x2,%edx
  441b46:	89 d2                	mov    %edx,%edx
  441b48:	89 d7                	mov    %edx,%edi
  441b4a:	8b 94 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%edx
  441b51:	c1 e2 0f             	shl    $0xf,%edx
  441b54:	09 d1                	or     %edx,%ecx
  441b56:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  441b5c:	83 c2 06             	add    $0x6,%edx
  441b5f:	83 ea 02             	sub    $0x2,%edx
  441b62:	89 d2                	mov    %edx,%edx
  441b64:	89 d7                	mov    %edx,%edi
  441b66:	8b 94 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%edx
  441b6d:	c1 ea 13             	shr    $0x13,%edx
  441b70:	8b b5 bc fe ff ff    	mov    -0x144(%rbp),%esi
  441b76:	83 c6 06             	add    $0x6,%esi
  441b79:	83 ee 02             	sub    $0x2,%esi
  441b7c:	89 f6                	mov    %esi,%esi
  441b7e:	89 f7                	mov    %esi,%edi
  441b80:	8b b4 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%esi
  441b87:	c1 e6 0d             	shl    $0xd,%esi
  441b8a:	09 f2                	or     %esi,%edx
  441b8c:	31 d1                	xor    %edx,%ecx
  441b8e:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  441b94:	83 c2 06             	add    $0x6,%edx
  441b97:	83 ea 02             	sub    $0x2,%edx
  441b9a:	89 d2                	mov    %edx,%edx
  441b9c:	89 d7                	mov    %edx,%edi
  441b9e:	8b 94 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%edx
  441ba5:	c1 ea 0a             	shr    $0xa,%edx
  441ba8:	31 d1                	xor    %edx,%ecx
  441baa:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  441bb0:	83 c2 06             	add    $0x6,%edx
  441bb3:	83 ea 07             	sub    $0x7,%edx
  441bb6:	89 d2                	mov    %edx,%edx
  441bb8:	89 d7                	mov    %edx,%edi
  441bba:	03 8c bd e0 fe ff ff 	add    -0x120(%rbp,%rdi,4),%ecx
  441bc1:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  441bc7:	83 c2 06             	add    $0x6,%edx
  441bca:	83 ea 0f             	sub    $0xf,%edx
  441bcd:	89 d2                	mov    %edx,%edx
  441bcf:	89 d7                	mov    %edx,%edi
  441bd1:	8b 94 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%edx
  441bd8:	c1 ea 07             	shr    $0x7,%edx
  441bdb:	8b b5 bc fe ff ff    	mov    -0x144(%rbp),%esi
  441be1:	83 c6 06             	add    $0x6,%esi
  441be4:	83 ee 0f             	sub    $0xf,%esi
  441be7:	89 f6                	mov    %esi,%esi
  441be9:	89 f7                	mov    %esi,%edi
  441beb:	8b b4 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%esi
  441bf2:	c1 e6 19             	shl    $0x19,%esi
  441bf5:	09 f2                	or     %esi,%edx
  441bf7:	8b b5 bc fe ff ff    	mov    -0x144(%rbp),%esi
  441bfd:	83 c6 06             	add    $0x6,%esi
  441c00:	83 ee 0f             	sub    $0xf,%esi
  441c03:	89 f6                	mov    %esi,%esi
  441c05:	89 f7                	mov    %esi,%edi
  441c07:	8b b4 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%esi
  441c0e:	c1 ee 12             	shr    $0x12,%esi
  441c11:	44 8b 85 bc fe ff ff 	mov    -0x144(%rbp),%r8d
  441c18:	41 83 c0 06          	add    $0x6,%r8d
  441c1c:	41 83 e8 0f          	sub    $0xf,%r8d
  441c20:	45 89 c0             	mov    %r8d,%r8d
  441c23:	44 89 c7             	mov    %r8d,%edi
  441c26:	44 8b 84 bd e0 fe ff 	mov    -0x120(%rbp,%rdi,4),%r8d
  441c2d:	ff 
  441c2e:	41 c1 e0 0e          	shl    $0xe,%r8d
  441c32:	44 09 c6             	or     %r8d,%esi
  441c35:	31 f2                	xor    %esi,%edx
  441c37:	8b b5 bc fe ff ff    	mov    -0x144(%rbp),%esi
  441c3d:	83 c6 06             	add    $0x6,%esi
  441c40:	83 ee 0f             	sub    $0xf,%esi
  441c43:	89 f6                	mov    %esi,%esi
  441c45:	89 f7                	mov    %esi,%edi
  441c47:	8b b4 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%esi
  441c4e:	c1 ee 03             	shr    $0x3,%esi
  441c51:	31 f2                	xor    %esi,%edx
  441c53:	01 d1                	add    %edx,%ecx
  441c55:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  441c5b:	83 c2 06             	add    $0x6,%edx
  441c5e:	83 ea 10             	sub    $0x10,%edx
  441c61:	89 d2                	mov    %edx,%edx
  441c63:	89 d7                	mov    %edx,%edi
  441c65:	03 8c bd e0 fe ff ff 	add    -0x120(%rbp,%rdi,4),%ecx
  441c6c:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  441c72:	83 c2 06             	add    $0x6,%edx
  441c75:	89 d2                	mov    %edx,%edx
  441c77:	89 d7                	mov    %edx,%edi
  441c79:	89 8c bd e0 fe ff ff 	mov    %ecx,-0x120(%rbp,%rdi,4)
  441c80:	01 c8                	add    %ecx,%eax
  441c82:	89 45 ec             	mov    %eax,-0x14(%rbp)
  441c85:	8b 85 c8 fe ff ff    	mov    -0x138(%rbp),%eax
  441c8b:	c1 e8 02             	shr    $0x2,%eax
  441c8e:	8b 8d c8 fe ff ff    	mov    -0x138(%rbp),%ecx
  441c94:	c1 e1 1e             	shl    $0x1e,%ecx
  441c97:	09 c8                	or     %ecx,%eax
  441c99:	8b 8d c8 fe ff ff    	mov    -0x138(%rbp),%ecx
  441c9f:	c1 e9 0d             	shr    $0xd,%ecx
  441ca2:	8b 95 c8 fe ff ff    	mov    -0x138(%rbp),%edx
  441ca8:	c1 e2 13             	shl    $0x13,%edx
  441cab:	09 d1                	or     %edx,%ecx
  441cad:	31 c8                	xor    %ecx,%eax
  441caf:	8b 8d c8 fe ff ff    	mov    -0x138(%rbp),%ecx
  441cb5:	c1 e9 16             	shr    $0x16,%ecx
  441cb8:	8b 95 c8 fe ff ff    	mov    -0x138(%rbp),%edx
  441cbe:	c1 e2 0a             	shl    $0xa,%edx
  441cc1:	09 d1                	or     %edx,%ecx
  441cc3:	31 c8                	xor    %ecx,%eax
  441cc5:	8b 8d c8 fe ff ff    	mov    -0x138(%rbp),%ecx
  441ccb:	23 8d cc fe ff ff    	and    -0x134(%rbp),%ecx
  441cd1:	8b 95 d0 fe ff ff    	mov    -0x130(%rbp),%edx
  441cd7:	8b b5 c8 fe ff ff    	mov    -0x138(%rbp),%esi
  441cdd:	0b b5 cc fe ff ff    	or     -0x134(%rbp),%esi
  441ce3:	21 f2                	and    %esi,%edx
  441ce5:	09 d1                	or     %edx,%ecx
  441ce7:	01 c8                	add    %ecx,%eax
  441ce9:	89 45 e8             	mov    %eax,-0x18(%rbp)
  441cec:	8b 45 ec             	mov    -0x14(%rbp),%eax
  441cef:	03 85 d4 fe ff ff    	add    -0x12c(%rbp),%eax
  441cf5:	89 85 d4 fe ff ff    	mov    %eax,-0x12c(%rbp)
  441cfb:	8b 45 ec             	mov    -0x14(%rbp),%eax
  441cfe:	03 45 e8             	add    -0x18(%rbp),%eax
  441d01:	89 85 c4 fe ff ff    	mov    %eax,-0x13c(%rbp)
  441d07:	8b 85 c0 fe ff ff    	mov    -0x140(%rbp),%eax
  441d0d:	8b 8d d4 fe ff ff    	mov    -0x12c(%rbp),%ecx
  441d13:	c1 e9 06             	shr    $0x6,%ecx
  441d16:	8b 95 d4 fe ff ff    	mov    -0x12c(%rbp),%edx
  441d1c:	c1 e2 1a             	shl    $0x1a,%edx
  441d1f:	09 d1                	or     %edx,%ecx
  441d21:	8b 95 d4 fe ff ff    	mov    -0x12c(%rbp),%edx
  441d27:	c1 ea 0b             	shr    $0xb,%edx
  441d2a:	8b b5 d4 fe ff ff    	mov    -0x12c(%rbp),%esi
  441d30:	c1 e6 15             	shl    $0x15,%esi
  441d33:	09 f2                	or     %esi,%edx
  441d35:	31 d1                	xor    %edx,%ecx
  441d37:	8b 95 d4 fe ff ff    	mov    -0x12c(%rbp),%edx
  441d3d:	c1 ea 19             	shr    $0x19,%edx
  441d40:	8b b5 d4 fe ff ff    	mov    -0x12c(%rbp),%esi
  441d46:	c1 e6 07             	shl    $0x7,%esi
  441d49:	09 f2                	or     %esi,%edx
  441d4b:	31 d1                	xor    %edx,%ecx
  441d4d:	01 c8                	add    %ecx,%eax
  441d4f:	8b 8d dc fe ff ff    	mov    -0x124(%rbp),%ecx
  441d55:	8b 95 d4 fe ff ff    	mov    -0x12c(%rbp),%edx
  441d5b:	8b b5 d8 fe ff ff    	mov    -0x128(%rbp),%esi
  441d61:	33 b5 dc fe ff ff    	xor    -0x124(%rbp),%esi
  441d67:	21 f2                	and    %esi,%edx
  441d69:	31 d1                	xor    %edx,%ecx
  441d6b:	01 c8                	add    %ecx,%eax
  441d6d:	8b 8d bc fe ff ff    	mov    -0x144(%rbp),%ecx
  441d73:	83 c1 07             	add    $0x7,%ecx
  441d76:	89 c9                	mov    %ecx,%ecx
  441d78:	89 cf                	mov    %ecx,%edi
  441d7a:	03 04 bd 80 e3 44 00 	add    0x44e380(,%rdi,4),%eax
  441d81:	8b 8d bc fe ff ff    	mov    -0x144(%rbp),%ecx
  441d87:	83 c1 07             	add    $0x7,%ecx
  441d8a:	83 e9 02             	sub    $0x2,%ecx
  441d8d:	89 c9                	mov    %ecx,%ecx
  441d8f:	89 cf                	mov    %ecx,%edi
  441d91:	8b 8c bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%ecx
  441d98:	c1 e9 11             	shr    $0x11,%ecx
  441d9b:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  441da1:	83 c2 07             	add    $0x7,%edx
  441da4:	83 ea 02             	sub    $0x2,%edx
  441da7:	89 d2                	mov    %edx,%edx
  441da9:	89 d7                	mov    %edx,%edi
  441dab:	8b 94 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%edx
  441db2:	c1 e2 0f             	shl    $0xf,%edx
  441db5:	09 d1                	or     %edx,%ecx
  441db7:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  441dbd:	83 c2 07             	add    $0x7,%edx
  441dc0:	83 ea 02             	sub    $0x2,%edx
  441dc3:	89 d2                	mov    %edx,%edx
  441dc5:	89 d7                	mov    %edx,%edi
  441dc7:	8b 94 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%edx
  441dce:	c1 ea 13             	shr    $0x13,%edx
  441dd1:	8b b5 bc fe ff ff    	mov    -0x144(%rbp),%esi
  441dd7:	83 c6 07             	add    $0x7,%esi
  441dda:	83 ee 02             	sub    $0x2,%esi
  441ddd:	89 f6                	mov    %esi,%esi
  441ddf:	89 f7                	mov    %esi,%edi
  441de1:	8b b4 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%esi
  441de8:	c1 e6 0d             	shl    $0xd,%esi
  441deb:	09 f2                	or     %esi,%edx
  441ded:	31 d1                	xor    %edx,%ecx
  441def:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  441df5:	83 c2 07             	add    $0x7,%edx
  441df8:	83 ea 02             	sub    $0x2,%edx
  441dfb:	89 d2                	mov    %edx,%edx
  441dfd:	89 d7                	mov    %edx,%edi
  441dff:	8b 94 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%edx
  441e06:	c1 ea 0a             	shr    $0xa,%edx
  441e09:	31 d1                	xor    %edx,%ecx
  441e0b:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  441e11:	83 c2 07             	add    $0x7,%edx
  441e14:	83 ea 07             	sub    $0x7,%edx
  441e17:	89 d2                	mov    %edx,%edx
  441e19:	89 d7                	mov    %edx,%edi
  441e1b:	03 8c bd e0 fe ff ff 	add    -0x120(%rbp,%rdi,4),%ecx
  441e22:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  441e28:	83 c2 07             	add    $0x7,%edx
  441e2b:	83 ea 0f             	sub    $0xf,%edx
  441e2e:	89 d2                	mov    %edx,%edx
  441e30:	89 d7                	mov    %edx,%edi
  441e32:	8b 94 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%edx
  441e39:	c1 ea 07             	shr    $0x7,%edx
  441e3c:	8b b5 bc fe ff ff    	mov    -0x144(%rbp),%esi
  441e42:	83 c6 07             	add    $0x7,%esi
  441e45:	83 ee 0f             	sub    $0xf,%esi
  441e48:	89 f6                	mov    %esi,%esi
  441e4a:	89 f7                	mov    %esi,%edi
  441e4c:	8b b4 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%esi
  441e53:	c1 e6 19             	shl    $0x19,%esi
  441e56:	09 f2                	or     %esi,%edx
  441e58:	8b b5 bc fe ff ff    	mov    -0x144(%rbp),%esi
  441e5e:	83 c6 07             	add    $0x7,%esi
  441e61:	83 ee 0f             	sub    $0xf,%esi
  441e64:	89 f6                	mov    %esi,%esi
  441e66:	89 f7                	mov    %esi,%edi
  441e68:	8b b4 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%esi
  441e6f:	c1 ee 12             	shr    $0x12,%esi
  441e72:	44 8b 85 bc fe ff ff 	mov    -0x144(%rbp),%r8d
  441e79:	41 83 c0 07          	add    $0x7,%r8d
  441e7d:	41 83 e8 0f          	sub    $0xf,%r8d
  441e81:	45 89 c0             	mov    %r8d,%r8d
  441e84:	44 89 c7             	mov    %r8d,%edi
  441e87:	44 8b 84 bd e0 fe ff 	mov    -0x120(%rbp,%rdi,4),%r8d
  441e8e:	ff 
  441e8f:	41 c1 e0 0e          	shl    $0xe,%r8d
  441e93:	44 09 c6             	or     %r8d,%esi
  441e96:	31 f2                	xor    %esi,%edx
  441e98:	8b b5 bc fe ff ff    	mov    -0x144(%rbp),%esi
  441e9e:	83 c6 07             	add    $0x7,%esi
  441ea1:	83 ee 0f             	sub    $0xf,%esi
  441ea4:	89 f6                	mov    %esi,%esi
  441ea6:	89 f7                	mov    %esi,%edi
  441ea8:	8b b4 bd e0 fe ff ff 	mov    -0x120(%rbp,%rdi,4),%esi
  441eaf:	c1 ee 03             	shr    $0x3,%esi
  441eb2:	31 f2                	xor    %esi,%edx
  441eb4:	01 d1                	add    %edx,%ecx
  441eb6:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  441ebc:	83 c2 07             	add    $0x7,%edx
  441ebf:	83 ea 10             	sub    $0x10,%edx
  441ec2:	89 d2                	mov    %edx,%edx
  441ec4:	89 d7                	mov    %edx,%edi
  441ec6:	03 8c bd e0 fe ff ff 	add    -0x120(%rbp,%rdi,4),%ecx
  441ecd:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  441ed3:	83 c2 07             	add    $0x7,%edx
  441ed6:	89 d2                	mov    %edx,%edx
  441ed8:	89 d7                	mov    %edx,%edi
  441eda:	89 8c bd e0 fe ff ff 	mov    %ecx,-0x120(%rbp,%rdi,4)
  441ee1:	01 c8                	add    %ecx,%eax
  441ee3:	89 45 ec             	mov    %eax,-0x14(%rbp)
  441ee6:	8b 85 c4 fe ff ff    	mov    -0x13c(%rbp),%eax
  441eec:	c1 e8 02             	shr    $0x2,%eax
  441eef:	8b 8d c4 fe ff ff    	mov    -0x13c(%rbp),%ecx
  441ef5:	c1 e1 1e             	shl    $0x1e,%ecx
  441ef8:	09 c8                	or     %ecx,%eax
  441efa:	8b 8d c4 fe ff ff    	mov    -0x13c(%rbp),%ecx
  441f00:	c1 e9 0d             	shr    $0xd,%ecx
  441f03:	8b 95 c4 fe ff ff    	mov    -0x13c(%rbp),%edx
  441f09:	c1 e2 13             	shl    $0x13,%edx
  441f0c:	09 d1                	or     %edx,%ecx
  441f0e:	31 c8                	xor    %ecx,%eax
  441f10:	8b 8d c4 fe ff ff    	mov    -0x13c(%rbp),%ecx
  441f16:	c1 e9 16             	shr    $0x16,%ecx
  441f19:	8b 95 c4 fe ff ff    	mov    -0x13c(%rbp),%edx
  441f1f:	c1 e2 0a             	shl    $0xa,%edx
  441f22:	09 d1                	or     %edx,%ecx
  441f24:	31 c8                	xor    %ecx,%eax
  441f26:	8b 8d c4 fe ff ff    	mov    -0x13c(%rbp),%ecx
  441f2c:	23 8d c8 fe ff ff    	and    -0x138(%rbp),%ecx
  441f32:	8b 95 cc fe ff ff    	mov    -0x134(%rbp),%edx
  441f38:	8b b5 c4 fe ff ff    	mov    -0x13c(%rbp),%esi
  441f3e:	0b b5 c8 fe ff ff    	or     -0x138(%rbp),%esi
  441f44:	21 f2                	and    %esi,%edx
  441f46:	09 d1                	or     %edx,%ecx
  441f48:	01 c8                	add    %ecx,%eax
  441f4a:	89 45 e8             	mov    %eax,-0x18(%rbp)
  441f4d:	8b 45 ec             	mov    -0x14(%rbp),%eax
  441f50:	03 85 d0 fe ff ff    	add    -0x130(%rbp),%eax
  441f56:	89 85 d0 fe ff ff    	mov    %eax,-0x130(%rbp)
  441f5c:	8b 45 ec             	mov    -0x14(%rbp),%eax
  441f5f:	03 45 e8             	add    -0x18(%rbp),%eax
  441f62:	89 85 c0 fe ff ff    	mov    %eax,-0x140(%rbp)
  441f68:	8b 85 bc fe ff ff    	mov    -0x144(%rbp),%eax
  441f6e:	83 c0 08             	add    $0x8,%eax
  441f71:	89 85 bc fe ff ff    	mov    %eax,-0x144(%rbp)
  441f77:	e9 d7 ec ff ff       	jmpq   440c53 <mbedtls_internal_sha256_process+0x9d3>
  441f7c:	c7 85 bc fe ff ff 00 	movl   $0x0,-0x144(%rbp)
  441f83:	00 00 00 
  441f86:	83 bd bc fe ff ff 08 	cmpl   $0x8,-0x144(%rbp)
  441f8d:	73 34                	jae    441fc3 <mbedtls_internal_sha256_process+0x1d43>
  441f8f:	8b 85 bc fe ff ff    	mov    -0x144(%rbp),%eax
  441f95:	89 c1                	mov    %eax,%ecx
  441f97:	8b 84 8d c0 fe ff ff 	mov    -0x140(%rbp,%rcx,4),%eax
  441f9e:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  441fa2:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  441fa8:	89 d6                	mov    %edx,%esi
  441faa:	03 44 b1 08          	add    0x8(%rcx,%rsi,4),%eax
  441fae:	89 44 b1 08          	mov    %eax,0x8(%rcx,%rsi,4)
  441fb2:	8b 85 bc fe ff ff    	mov    -0x144(%rbp),%eax
  441fb8:	83 c0 01             	add    $0x1,%eax
  441fbb:	89 85 bc fe ff ff    	mov    %eax,-0x144(%rbp)
  441fc1:	eb c3                	jmp    441f86 <mbedtls_internal_sha256_process+0x1d06>
  441fc3:	e8 8e 39 00 00       	callq  445956 <writeback_cache>
  441fc8:	31 c0                	xor    %eax,%eax
  441fca:	48 81 c4 50 01 00 00 	add    $0x150,%rsp
  441fd1:	5d                   	pop    %rbp
  441fd2:	c3                   	retq   
  441fd3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  441fda:	84 00 00 00 00 00 

0000000000441fe0 <mbedtls_sha256_update_ret>:
  441fe0:	55                   	push   %rbp
  441fe1:	48 89 e5             	mov    %rsp,%rbp
  441fe4:	48 83 ec 40          	sub    $0x40,%rsp
  441fe8:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  441fec:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  441ff0:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
  441ff4:	eb 00                	jmp    441ff6 <mbedtls_sha256_update_ret+0x16>
  441ff6:	eb 00                	jmp    441ff8 <mbedtls_sha256_update_ret+0x18>
  441ff8:	eb 00                	jmp    441ffa <mbedtls_sha256_update_ret+0x1a>
  441ffa:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  441fff:	75 0c                	jne    44200d <mbedtls_sha256_update_ret+0x2d>
  442001:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  442008:	e9 36 01 00 00       	jmpq   442143 <mbedtls_sha256_update_ret+0x163>
  44200d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  442011:	8b 08                	mov    (%rax),%ecx
  442013:	83 e1 3f             	and    $0x3f,%ecx
  442016:	89 4d cc             	mov    %ecx,-0x34(%rbp)
  442019:	b9 40 00 00 00       	mov    $0x40,%ecx
  44201e:	2b 4d cc             	sub    -0x34(%rbp),%ecx
  442021:	89 c9                	mov    %ecx,%ecx
  442023:	89 c8                	mov    %ecx,%eax
  442025:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  442029:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  44202d:	89 c1                	mov    %eax,%ecx
  44202f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  442033:	03 08                	add    (%rax),%ecx
  442035:	89 08                	mov    %ecx,(%rax)
  442037:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  44203b:	8b 08                	mov    (%rax),%ecx
  44203d:	89 08                	mov    %ecx,(%rax)
  44203f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  442043:	8b 08                	mov    (%rax),%ecx
  442045:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  442049:	89 c2                	mov    %eax,%edx
  44204b:	39 d1                	cmp    %edx,%ecx
  44204d:	73 0d                	jae    44205c <mbedtls_sha256_update_ret+0x7c>
  44204f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  442053:	8b 48 04             	mov    0x4(%rax),%ecx
  442056:	83 c1 01             	add    $0x1,%ecx
  442059:	89 48 04             	mov    %ecx,0x4(%rax)
  44205c:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
  442060:	74 73                	je     4420d5 <mbedtls_sha256_update_ret+0xf5>
  442062:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  442066:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
  44206a:	72 69                	jb     4420d5 <mbedtls_sha256_update_ret+0xf5>
  44206c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  442070:	48 83 c0 28          	add    $0x28,%rax
  442074:	8b 4d cc             	mov    -0x34(%rbp),%ecx
  442077:	89 ca                	mov    %ecx,%edx
  442079:	48 01 d0             	add    %rdx,%rax
  44207c:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  442080:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  442084:	48 89 c7             	mov    %rax,%rdi
  442087:	e8 e4 f0 fb ff       	callq  401170 <memcpy@plt>
  44208c:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  442090:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  442094:	48 83 c0 28          	add    $0x28,%rax
  442098:	48 89 c6             	mov    %rax,%rsi
  44209b:	e8 e0 e1 ff ff       	callq  440280 <mbedtls_internal_sha256_process>
  4420a0:	89 45 dc             	mov    %eax,-0x24(%rbp)
  4420a3:	83 f8 00             	cmp    $0x0,%eax
  4420a6:	74 0b                	je     4420b3 <mbedtls_sha256_update_ret+0xd3>
  4420a8:	8b 45 dc             	mov    -0x24(%rbp),%eax
  4420ab:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4420ae:	e9 90 00 00 00       	jmpq   442143 <mbedtls_sha256_update_ret+0x163>
  4420b3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4420b7:	48 03 45 e8          	add    -0x18(%rbp),%rax
  4420bb:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4420bf:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4420c3:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  4420c7:	48 29 c1             	sub    %rax,%rcx
  4420ca:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  4420ce:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
  4420d5:	eb 00                	jmp    4420d7 <mbedtls_sha256_update_ret+0xf7>
  4420d7:	48 83 7d e0 40       	cmpq   $0x40,-0x20(%rbp)
  4420dc:	72 37                	jb     442115 <mbedtls_sha256_update_ret+0x135>
  4420de:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  4420e2:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  4420e6:	e8 95 e1 ff ff       	callq  440280 <mbedtls_internal_sha256_process>
  4420eb:	89 45 dc             	mov    %eax,-0x24(%rbp)
  4420ee:	83 f8 00             	cmp    $0x0,%eax
  4420f1:	74 08                	je     4420fb <mbedtls_sha256_update_ret+0x11b>
  4420f3:	8b 45 dc             	mov    -0x24(%rbp),%eax
  4420f6:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4420f9:	eb 48                	jmp    442143 <mbedtls_sha256_update_ret+0x163>
  4420fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4420ff:	48 83 c0 40          	add    $0x40,%rax
  442103:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  442107:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  44210b:	48 83 e8 40          	sub    $0x40,%rax
  44210f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  442113:	eb c2                	jmp    4420d7 <mbedtls_sha256_update_ret+0xf7>
  442115:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  44211a:	76 20                	jbe    44213c <mbedtls_sha256_update_ret+0x15c>
  44211c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  442120:	48 83 c0 28          	add    $0x28,%rax
  442124:	8b 4d cc             	mov    -0x34(%rbp),%ecx
  442127:	89 ca                	mov    %ecx,%edx
  442129:	48 01 d0             	add    %rdx,%rax
  44212c:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  442130:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  442134:	48 89 c7             	mov    %rax,%rdi
  442137:	e8 34 f0 fb ff       	callq  401170 <memcpy@plt>
  44213c:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  442143:	8b 45 fc             	mov    -0x4(%rbp),%eax
  442146:	89 45 c8             	mov    %eax,-0x38(%rbp)
  442149:	e8 08 38 00 00       	callq  445956 <writeback_cache>
  44214e:	8b 45 c8             	mov    -0x38(%rbp),%eax
  442151:	48 83 c4 40          	add    $0x40,%rsp
  442155:	5d                   	pop    %rbp
  442156:	c3                   	retq   
  442157:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  44215e:	00 00 

0000000000442160 <mbedtls_sha256_finish_ret>:
  442160:	55                   	push   %rbp
  442161:	48 89 e5             	mov    %rsp,%rbp
  442164:	48 83 ec 30          	sub    $0x30,%rsp
  442168:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  44216c:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  442170:	eb 00                	jmp    442172 <mbedtls_sha256_finish_ret+0x12>
  442172:	eb 00                	jmp    442174 <mbedtls_sha256_finish_ret+0x14>
  442174:	eb 00                	jmp    442176 <mbedtls_sha256_finish_ret+0x16>
  442176:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  44217a:	8b 08                	mov    (%rax),%ecx
  44217c:	83 e1 3f             	and    $0x3f,%ecx
  44217f:	89 4d e0             	mov    %ecx,-0x20(%rbp)
  442182:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  442186:	8b 4d e0             	mov    -0x20(%rbp),%ecx
  442189:	89 ca                	mov    %ecx,%edx
  44218b:	83 c2 01             	add    $0x1,%edx
  44218e:	89 55 e0             	mov    %edx,-0x20(%rbp)
  442191:	89 c9                	mov    %ecx,%ecx
  442193:	89 ce                	mov    %ecx,%esi
  442195:	c6 44 30 28 80       	movb   $0x80,0x28(%rax,%rsi,1)
  44219a:	83 7d e0 38          	cmpl   $0x38,-0x20(%rbp)
  44219e:	77 28                	ja     4421c8 <mbedtls_sha256_finish_ret+0x68>
  4421a0:	31 f6                	xor    %esi,%esi
  4421a2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4421a6:	48 83 c0 28          	add    $0x28,%rax
  4421aa:	8b 4d e0             	mov    -0x20(%rbp),%ecx
  4421ad:	89 ca                	mov    %ecx,%edx
  4421af:	48 01 d0             	add    %rdx,%rax
  4421b2:	b9 38 00 00 00       	mov    $0x38,%ecx
  4421b7:	2b 4d e0             	sub    -0x20(%rbp),%ecx
  4421ba:	89 c9                	mov    %ecx,%ecx
  4421bc:	89 ca                	mov    %ecx,%edx
  4421be:	48 89 c7             	mov    %rax,%rdi
  4421c1:	e8 5a ee fb ff       	callq  401020 <memset@plt>
  4421c6:	eb 66                	jmp    44222e <mbedtls_sha256_finish_ret+0xce>
  4421c8:	31 f6                	xor    %esi,%esi
  4421ca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4421ce:	48 83 c0 28          	add    $0x28,%rax
  4421d2:	8b 4d e0             	mov    -0x20(%rbp),%ecx
  4421d5:	89 ca                	mov    %ecx,%edx
  4421d7:	48 01 d0             	add    %rdx,%rax
  4421da:	b9 40 00 00 00       	mov    $0x40,%ecx
  4421df:	2b 4d e0             	sub    -0x20(%rbp),%ecx
  4421e2:	89 c9                	mov    %ecx,%ecx
  4421e4:	89 ca                	mov    %ecx,%edx
  4421e6:	48 89 c7             	mov    %rax,%rdi
  4421e9:	e8 32 ee fb ff       	callq  401020 <memset@plt>
  4421ee:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  4421f2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4421f6:	48 83 c0 28          	add    $0x28,%rax
  4421fa:	48 89 c6             	mov    %rax,%rsi
  4421fd:	e8 7e e0 ff ff       	callq  440280 <mbedtls_internal_sha256_process>
  442202:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  442205:	83 f8 00             	cmp    $0x0,%eax
  442208:	74 0b                	je     442215 <mbedtls_sha256_finish_ret+0xb5>
  44220a:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  44220d:	89 45 fc             	mov    %eax,-0x4(%rbp)
  442210:	e9 42 03 00 00       	jmpq   442557 <mbedtls_sha256_finish_ret+0x3f7>
  442215:	31 f6                	xor    %esi,%esi
  442217:	b8 38 00 00 00       	mov    $0x38,%eax
  44221c:	89 c2                	mov    %eax,%edx
  44221e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  442222:	48 83 c1 28          	add    $0x28,%rcx
  442226:	48 89 cf             	mov    %rcx,%rdi
  442229:	e8 f2 ed fb ff       	callq  401020 <memset@plt>
  44222e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  442232:	8b 08                	mov    (%rax),%ecx
  442234:	c1 e9 1d             	shr    $0x1d,%ecx
  442237:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  44223b:	8b 50 04             	mov    0x4(%rax),%edx
  44223e:	c1 e2 03             	shl    $0x3,%edx
  442241:	09 d1                	or     %edx,%ecx
  442243:	89 4d dc             	mov    %ecx,-0x24(%rbp)
  442246:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  44224a:	8b 08                	mov    (%rax),%ecx
  44224c:	c1 e1 03             	shl    $0x3,%ecx
  44224f:	89 4d d8             	mov    %ecx,-0x28(%rbp)
  442252:	8b 45 dc             	mov    -0x24(%rbp),%eax
  442255:	c1 e8 18             	shr    $0x18,%eax
  442258:	88 c1                	mov    %al,%cl
  44225a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  44225e:	88 4a 60             	mov    %cl,0x60(%rdx)
  442261:	8b 45 dc             	mov    -0x24(%rbp),%eax
  442264:	c1 e8 10             	shr    $0x10,%eax
  442267:	88 c1                	mov    %al,%cl
  442269:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  44226d:	88 4a 61             	mov    %cl,0x61(%rdx)
  442270:	8b 45 dc             	mov    -0x24(%rbp),%eax
  442273:	c1 e8 08             	shr    $0x8,%eax
  442276:	88 c1                	mov    %al,%cl
  442278:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  44227c:	88 4a 62             	mov    %cl,0x62(%rdx)
  44227f:	8b 45 dc             	mov    -0x24(%rbp),%eax
  442282:	88 c1                	mov    %al,%cl
  442284:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  442288:	88 4a 63             	mov    %cl,0x63(%rdx)
  44228b:	eb 00                	jmp    44228d <mbedtls_sha256_finish_ret+0x12d>
  44228d:	8b 45 d8             	mov    -0x28(%rbp),%eax
  442290:	c1 e8 18             	shr    $0x18,%eax
  442293:	88 c1                	mov    %al,%cl
  442295:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  442299:	88 4a 64             	mov    %cl,0x64(%rdx)
  44229c:	8b 45 d8             	mov    -0x28(%rbp),%eax
  44229f:	c1 e8 10             	shr    $0x10,%eax
  4422a2:	88 c1                	mov    %al,%cl
  4422a4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4422a8:	88 4a 65             	mov    %cl,0x65(%rdx)
  4422ab:	8b 45 d8             	mov    -0x28(%rbp),%eax
  4422ae:	c1 e8 08             	shr    $0x8,%eax
  4422b1:	88 c1                	mov    %al,%cl
  4422b3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4422b7:	88 4a 66             	mov    %cl,0x66(%rdx)
  4422ba:	8b 45 d8             	mov    -0x28(%rbp),%eax
  4422bd:	88 c1                	mov    %al,%cl
  4422bf:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4422c3:	88 4a 67             	mov    %cl,0x67(%rdx)
  4422c6:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  4422ca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4422ce:	48 83 c0 28          	add    $0x28,%rax
  4422d2:	48 89 c6             	mov    %rax,%rsi
  4422d5:	e8 a6 df ff ff       	callq  440280 <mbedtls_internal_sha256_process>
  4422da:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  4422dd:	83 f8 00             	cmp    $0x0,%eax
  4422e0:	74 0b                	je     4422ed <mbedtls_sha256_finish_ret+0x18d>
  4422e2:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  4422e5:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4422e8:	e9 6a 02 00 00       	jmpq   442557 <mbedtls_sha256_finish_ret+0x3f7>
  4422ed:	eb 00                	jmp    4422ef <mbedtls_sha256_finish_ret+0x18f>
  4422ef:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4422f3:	8b 48 08             	mov    0x8(%rax),%ecx
  4422f6:	c1 e9 18             	shr    $0x18,%ecx
  4422f9:	88 ca                	mov    %cl,%dl
  4422fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4422ff:	88 10                	mov    %dl,(%rax)
  442301:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  442305:	8b 48 08             	mov    0x8(%rax),%ecx
  442308:	c1 e9 10             	shr    $0x10,%ecx
  44230b:	88 ca                	mov    %cl,%dl
  44230d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  442311:	88 50 01             	mov    %dl,0x1(%rax)
  442314:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  442318:	8b 48 08             	mov    0x8(%rax),%ecx
  44231b:	c1 e9 08             	shr    $0x8,%ecx
  44231e:	88 ca                	mov    %cl,%dl
  442320:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  442324:	88 50 02             	mov    %dl,0x2(%rax)
  442327:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  44232b:	8b 48 08             	mov    0x8(%rax),%ecx
  44232e:	88 ca                	mov    %cl,%dl
  442330:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  442334:	88 50 03             	mov    %dl,0x3(%rax)
  442337:	eb 00                	jmp    442339 <mbedtls_sha256_finish_ret+0x1d9>
  442339:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  44233d:	8b 48 0c             	mov    0xc(%rax),%ecx
  442340:	c1 e9 18             	shr    $0x18,%ecx
  442343:	88 ca                	mov    %cl,%dl
  442345:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  442349:	88 50 04             	mov    %dl,0x4(%rax)
  44234c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  442350:	8b 48 0c             	mov    0xc(%rax),%ecx
  442353:	c1 e9 10             	shr    $0x10,%ecx
  442356:	88 ca                	mov    %cl,%dl
  442358:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  44235c:	88 50 05             	mov    %dl,0x5(%rax)
  44235f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  442363:	8b 48 0c             	mov    0xc(%rax),%ecx
  442366:	c1 e9 08             	shr    $0x8,%ecx
  442369:	88 ca                	mov    %cl,%dl
  44236b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  44236f:	88 50 06             	mov    %dl,0x6(%rax)
  442372:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  442376:	8b 48 0c             	mov    0xc(%rax),%ecx
  442379:	88 ca                	mov    %cl,%dl
  44237b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  44237f:	88 50 07             	mov    %dl,0x7(%rax)
  442382:	eb 00                	jmp    442384 <mbedtls_sha256_finish_ret+0x224>
  442384:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  442388:	8b 48 10             	mov    0x10(%rax),%ecx
  44238b:	c1 e9 18             	shr    $0x18,%ecx
  44238e:	88 ca                	mov    %cl,%dl
  442390:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  442394:	88 50 08             	mov    %dl,0x8(%rax)
  442397:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  44239b:	8b 48 10             	mov    0x10(%rax),%ecx
  44239e:	c1 e9 10             	shr    $0x10,%ecx
  4423a1:	88 ca                	mov    %cl,%dl
  4423a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4423a7:	88 50 09             	mov    %dl,0x9(%rax)
  4423aa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4423ae:	8b 48 10             	mov    0x10(%rax),%ecx
  4423b1:	c1 e9 08             	shr    $0x8,%ecx
  4423b4:	88 ca                	mov    %cl,%dl
  4423b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4423ba:	88 50 0a             	mov    %dl,0xa(%rax)
  4423bd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4423c1:	8b 48 10             	mov    0x10(%rax),%ecx
  4423c4:	88 ca                	mov    %cl,%dl
  4423c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4423ca:	88 50 0b             	mov    %dl,0xb(%rax)
  4423cd:	eb 00                	jmp    4423cf <mbedtls_sha256_finish_ret+0x26f>
  4423cf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4423d3:	8b 48 14             	mov    0x14(%rax),%ecx
  4423d6:	c1 e9 18             	shr    $0x18,%ecx
  4423d9:	88 ca                	mov    %cl,%dl
  4423db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4423df:	88 50 0c             	mov    %dl,0xc(%rax)
  4423e2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4423e6:	8b 48 14             	mov    0x14(%rax),%ecx
  4423e9:	c1 e9 10             	shr    $0x10,%ecx
  4423ec:	88 ca                	mov    %cl,%dl
  4423ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4423f2:	88 50 0d             	mov    %dl,0xd(%rax)
  4423f5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4423f9:	8b 48 14             	mov    0x14(%rax),%ecx
  4423fc:	c1 e9 08             	shr    $0x8,%ecx
  4423ff:	88 ca                	mov    %cl,%dl
  442401:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  442405:	88 50 0e             	mov    %dl,0xe(%rax)
  442408:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  44240c:	8b 48 14             	mov    0x14(%rax),%ecx
  44240f:	88 ca                	mov    %cl,%dl
  442411:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  442415:	88 50 0f             	mov    %dl,0xf(%rax)
  442418:	eb 00                	jmp    44241a <mbedtls_sha256_finish_ret+0x2ba>
  44241a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  44241e:	8b 48 18             	mov    0x18(%rax),%ecx
  442421:	c1 e9 18             	shr    $0x18,%ecx
  442424:	88 ca                	mov    %cl,%dl
  442426:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  44242a:	88 50 10             	mov    %dl,0x10(%rax)
  44242d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  442431:	8b 48 18             	mov    0x18(%rax),%ecx
  442434:	c1 e9 10             	shr    $0x10,%ecx
  442437:	88 ca                	mov    %cl,%dl
  442439:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  44243d:	88 50 11             	mov    %dl,0x11(%rax)
  442440:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  442444:	8b 48 18             	mov    0x18(%rax),%ecx
  442447:	c1 e9 08             	shr    $0x8,%ecx
  44244a:	88 ca                	mov    %cl,%dl
  44244c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  442450:	88 50 12             	mov    %dl,0x12(%rax)
  442453:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  442457:	8b 48 18             	mov    0x18(%rax),%ecx
  44245a:	88 ca                	mov    %cl,%dl
  44245c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  442460:	88 50 13             	mov    %dl,0x13(%rax)
  442463:	eb 00                	jmp    442465 <mbedtls_sha256_finish_ret+0x305>
  442465:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  442469:	8b 48 1c             	mov    0x1c(%rax),%ecx
  44246c:	c1 e9 18             	shr    $0x18,%ecx
  44246f:	88 ca                	mov    %cl,%dl
  442471:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  442475:	88 50 14             	mov    %dl,0x14(%rax)
  442478:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  44247c:	8b 48 1c             	mov    0x1c(%rax),%ecx
  44247f:	c1 e9 10             	shr    $0x10,%ecx
  442482:	88 ca                	mov    %cl,%dl
  442484:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  442488:	88 50 15             	mov    %dl,0x15(%rax)
  44248b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  44248f:	8b 48 1c             	mov    0x1c(%rax),%ecx
  442492:	c1 e9 08             	shr    $0x8,%ecx
  442495:	88 ca                	mov    %cl,%dl
  442497:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  44249b:	88 50 16             	mov    %dl,0x16(%rax)
  44249e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4424a2:	8b 48 1c             	mov    0x1c(%rax),%ecx
  4424a5:	88 ca                	mov    %cl,%dl
  4424a7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4424ab:	88 50 17             	mov    %dl,0x17(%rax)
  4424ae:	eb 00                	jmp    4424b0 <mbedtls_sha256_finish_ret+0x350>
  4424b0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4424b4:	8b 48 20             	mov    0x20(%rax),%ecx
  4424b7:	c1 e9 18             	shr    $0x18,%ecx
  4424ba:	88 ca                	mov    %cl,%dl
  4424bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4424c0:	88 50 18             	mov    %dl,0x18(%rax)
  4424c3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4424c7:	8b 48 20             	mov    0x20(%rax),%ecx
  4424ca:	c1 e9 10             	shr    $0x10,%ecx
  4424cd:	88 ca                	mov    %cl,%dl
  4424cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4424d3:	88 50 19             	mov    %dl,0x19(%rax)
  4424d6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4424da:	8b 48 20             	mov    0x20(%rax),%ecx
  4424dd:	c1 e9 08             	shr    $0x8,%ecx
  4424e0:	88 ca                	mov    %cl,%dl
  4424e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4424e6:	88 50 1a             	mov    %dl,0x1a(%rax)
  4424e9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4424ed:	8b 48 20             	mov    0x20(%rax),%ecx
  4424f0:	88 ca                	mov    %cl,%dl
  4424f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4424f6:	88 50 1b             	mov    %dl,0x1b(%rax)
  4424f9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4424fd:	83 78 68 00          	cmpl   $0x0,0x68(%rax)
  442501:	75 4d                	jne    442550 <mbedtls_sha256_finish_ret+0x3f0>
  442503:	eb 00                	jmp    442505 <mbedtls_sha256_finish_ret+0x3a5>
  442505:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  442509:	8b 48 24             	mov    0x24(%rax),%ecx
  44250c:	c1 e9 18             	shr    $0x18,%ecx
  44250f:	88 ca                	mov    %cl,%dl
  442511:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  442515:	88 50 1c             	mov    %dl,0x1c(%rax)
  442518:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  44251c:	8b 48 24             	mov    0x24(%rax),%ecx
  44251f:	c1 e9 10             	shr    $0x10,%ecx
  442522:	88 ca                	mov    %cl,%dl
  442524:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  442528:	88 50 1d             	mov    %dl,0x1d(%rax)
  44252b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  44252f:	8b 48 24             	mov    0x24(%rax),%ecx
  442532:	c1 e9 08             	shr    $0x8,%ecx
  442535:	88 ca                	mov    %cl,%dl
  442537:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  44253b:	88 50 1e             	mov    %dl,0x1e(%rax)
  44253e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  442542:	8b 48 24             	mov    0x24(%rax),%ecx
  442545:	88 ca                	mov    %cl,%dl
  442547:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  44254b:	88 50 1f             	mov    %dl,0x1f(%rax)
  44254e:	eb 00                	jmp    442550 <mbedtls_sha256_finish_ret+0x3f0>
  442550:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  442557:	8b 45 fc             	mov    -0x4(%rbp),%eax
  44255a:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  44255d:	e8 f4 33 00 00       	callq  445956 <writeback_cache>
  442562:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  442565:	48 83 c4 30          	add    $0x30,%rsp
  442569:	5d                   	pop    %rbp
  44256a:	c3                   	retq   
  44256b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000442570 <mbedtls_sha256_ret>:
  442570:	55                   	push   %rbp
  442571:	48 89 e5             	mov    %rsp,%rbp
  442574:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
  44257b:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  44257f:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  442583:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
  442587:	89 4d b4             	mov    %ecx,-0x4c(%rbp)
  44258a:	eb 00                	jmp    44258c <mbedtls_sha256_ret+0x1c>
  44258c:	eb 00                	jmp    44258e <mbedtls_sha256_ret+0x1e>
  44258e:	eb 00                	jmp    442590 <mbedtls_sha256_ret+0x20>
  442590:	eb 00                	jmp    442592 <mbedtls_sha256_ret+0x22>
  442592:	eb 00                	jmp    442594 <mbedtls_sha256_ret+0x24>
  442594:	31 f6                	xor    %esi,%esi
  442596:	b8 6c 00 00 00       	mov    $0x6c,%eax
  44259b:	89 c2                	mov    %eax,%edx
  44259d:	48 8d 8d 40 ff ff ff 	lea    -0xc0(%rbp),%rcx
  4425a4:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  4425a8:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  4425ac:	48 89 8d 38 ff ff ff 	mov    %rcx,-0xc8(%rbp)
  4425b3:	e8 68 ea fb ff       	callq  401020 <memset@plt>
  4425b8:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  4425bb:	48 8b 8d 38 ff ff ff 	mov    -0xc8(%rbp),%rcx
  4425c2:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
  4425c6:	89 45 f4             	mov    %eax,-0xc(%rbp)
  4425c9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4425cd:	c7 02 00 00 00 00    	movl   $0x0,(%rdx)
  4425d3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4425d7:	c7 42 04 00 00 00 00 	movl   $0x0,0x4(%rdx)
  4425de:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  4425e2:	75 5a                	jne    44263e <mbedtls_sha256_ret+0xce>
  4425e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4425e8:	c7 40 08 67 e6 09 6a 	movl   $0x6a09e667,0x8(%rax)
  4425ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4425f3:	c7 40 0c 85 ae 67 bb 	movl   $0xbb67ae85,0xc(%rax)
  4425fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4425fe:	c7 40 10 72 f3 6e 3c 	movl   $0x3c6ef372,0x10(%rax)
  442605:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  442609:	c7 40 14 3a f5 4f a5 	movl   $0xa54ff53a,0x14(%rax)
  442610:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  442614:	c7 40 18 7f 52 0e 51 	movl   $0x510e527f,0x18(%rax)
  44261b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  44261f:	c7 40 1c 8c 68 05 9b 	movl   $0x9b05688c,0x1c(%rax)
  442626:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  44262a:	c7 40 20 ab d9 83 1f 	movl   $0x1f83d9ab,0x20(%rax)
  442631:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  442635:	c7 40 24 19 cd e0 5b 	movl   $0x5be0cd19,0x24(%rax)
  44263c:	eb 58                	jmp    442696 <mbedtls_sha256_ret+0x126>
  44263e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  442642:	c7 40 08 d8 9e 05 c1 	movl   $0xc1059ed8,0x8(%rax)
  442649:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  44264d:	c7 40 0c 07 d5 7c 36 	movl   $0x367cd507,0xc(%rax)
  442654:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  442658:	c7 40 10 17 dd 70 30 	movl   $0x3070dd17,0x10(%rax)
  44265f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  442663:	c7 40 14 39 59 0e f7 	movl   $0xf70e5939,0x14(%rax)
  44266a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  44266e:	c7 40 18 31 0b c0 ff 	movl   $0xffc00b31,0x18(%rax)
  442675:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  442679:	c7 40 1c 11 15 58 68 	movl   $0x68581511,0x1c(%rax)
  442680:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  442684:	c7 40 20 a7 8f f9 64 	movl   $0x64f98fa7,0x20(%rax)
  44268b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  44268f:	c7 40 24 a4 4f fa be 	movl   $0xbefa4fa4,0x24(%rax)
  442696:	8b 45 f4             	mov    -0xc(%rbp),%eax
  442699:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  44269d:	89 41 68             	mov    %eax,0x68(%rcx)
  4426a0:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
  4426a7:	eb 02                	jmp    4426ab <mbedtls_sha256_ret+0x13b>
  4426a9:	eb 3a                	jmp    4426e5 <mbedtls_sha256_ret+0x175>
  4426ab:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  4426af:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  4426b3:	48 8d bd 40 ff ff ff 	lea    -0xc0(%rbp),%rdi
  4426ba:	e8 21 f9 ff ff       	callq  441fe0 <mbedtls_sha256_update_ret>
  4426bf:	89 45 b0             	mov    %eax,-0x50(%rbp)
  4426c2:	83 f8 00             	cmp    $0x0,%eax
  4426c5:	74 02                	je     4426c9 <mbedtls_sha256_ret+0x159>
  4426c7:	eb 1c                	jmp    4426e5 <mbedtls_sha256_ret+0x175>
  4426c9:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  4426cd:	48 8d bd 40 ff ff ff 	lea    -0xc0(%rbp),%rdi
  4426d4:	e8 87 fa ff ff       	callq  442160 <mbedtls_sha256_finish_ret>
  4426d9:	89 45 b0             	mov    %eax,-0x50(%rbp)
  4426dc:	83 f8 00             	cmp    $0x0,%eax
  4426df:	74 02                	je     4426e3 <mbedtls_sha256_ret+0x173>
  4426e1:	eb 02                	jmp    4426e5 <mbedtls_sha256_ret+0x175>
  4426e3:	eb 00                	jmp    4426e5 <mbedtls_sha256_ret+0x175>
  4426e5:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
  4426ec:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  4426f0:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  4426f5:	75 02                	jne    4426f9 <mbedtls_sha256_ret+0x189>
  4426f7:	eb 2b                	jmp    442724 <mbedtls_sha256_ret+0x1b4>
  4426f9:	31 f6                	xor    %esi,%esi
  4426fb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4426ff:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  442703:	48 c7 45 e0 6c 00 00 	movq   $0x6c,-0x20(%rbp)
  44270a:	00 
  44270b:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  442712:	00 
  442713:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  442717:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  44271b:	ff d0                	callq  *%rax
  44271d:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
  442724:	8b 45 b0             	mov    -0x50(%rbp),%eax
  442727:	89 85 2c ff ff ff    	mov    %eax,-0xd4(%rbp)
  44272d:	e8 24 32 00 00       	callq  445956 <writeback_cache>
  442732:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
  442738:	48 81 c4 e0 00 00 00 	add    $0xe0,%rsp
  44273f:	5d                   	pop    %rbp
  442740:	c3                   	retq   
  442741:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  442748:	0f 1f 84 00 00 00 00 
  44274f:	00 

0000000000442750 <mbedtls_aes_setkey_enc>:
  442750:	55                   	push   %rbp
  442751:	48 89 e5             	mov    %rsp,%rbp
  442754:	48 81 ec 80 08 00 00 	sub    $0x880,%rsp
  44275b:	48 89 bd e0 f7 ff ff 	mov    %rdi,-0x820(%rbp)
  442762:	48 89 b5 d8 f7 ff ff 	mov    %rsi,-0x828(%rbp)
  442769:	89 95 d4 f7 ff ff    	mov    %edx,-0x82c(%rbp)
  44276f:	eb 00                	jmp    442771 <mbedtls_aes_setkey_enc+0x21>
  442771:	eb 00                	jmp    442773 <mbedtls_aes_setkey_enc+0x23>
  442773:	eb 00                	jmp    442775 <mbedtls_aes_setkey_enc+0x25>
  442775:	8b 85 d4 f7 ff ff    	mov    -0x82c(%rbp),%eax
  44277b:	89 c1                	mov    %eax,%ecx
  44277d:	81 e9 80 00 00 00    	sub    $0x80,%ecx
  442783:	89 85 c4 f7 ff ff    	mov    %eax,-0x83c(%rbp)
  442789:	89 8d c0 f7 ff ff    	mov    %ecx,-0x840(%rbp)
  44278f:	74 2c                	je     4427bd <mbedtls_aes_setkey_enc+0x6d>
  442791:	eb 00                	jmp    442793 <mbedtls_aes_setkey_enc+0x43>
  442793:	8b 85 c4 f7 ff ff    	mov    -0x83c(%rbp),%eax
  442799:	2d c0 00 00 00       	sub    $0xc0,%eax
  44279e:	89 85 bc f7 ff ff    	mov    %eax,-0x844(%rbp)
  4427a4:	74 26                	je     4427cc <mbedtls_aes_setkey_enc+0x7c>
  4427a6:	eb 00                	jmp    4427a8 <mbedtls_aes_setkey_enc+0x58>
  4427a8:	8b 85 c4 f7 ff ff    	mov    -0x83c(%rbp),%eax
  4427ae:	2d 00 01 00 00       	sub    $0x100,%eax
  4427b3:	89 85 b8 f7 ff ff    	mov    %eax,-0x848(%rbp)
  4427b9:	74 20                	je     4427db <mbedtls_aes_setkey_enc+0x8b>
  4427bb:	eb 2d                	jmp    4427ea <mbedtls_aes_setkey_enc+0x9a>
  4427bd:	48 8b 85 e0 f7 ff ff 	mov    -0x820(%rbp),%rax
  4427c4:	c7 00 0a 00 00 00    	movl   $0xa,(%rax)
  4427ca:	eb 2d                	jmp    4427f9 <mbedtls_aes_setkey_enc+0xa9>
  4427cc:	48 8b 85 e0 f7 ff ff 	mov    -0x820(%rbp),%rax
  4427d3:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
  4427d9:	eb 1e                	jmp    4427f9 <mbedtls_aes_setkey_enc+0xa9>
  4427db:	48 8b 85 e0 f7 ff ff 	mov    -0x820(%rbp),%rax
  4427e2:	c7 00 0e 00 00 00    	movl   $0xe,(%rax)
  4427e8:	eb 0f                	jmp    4427f9 <mbedtls_aes_setkey_enc+0xa9>
  4427ea:	c7 85 ec f7 ff ff e0 	movl   $0xffffffe0,-0x814(%rbp)
  4427f1:	ff ff ff 
  4427f4:	e9 e4 0a 00 00       	jmpq   4432dd <mbedtls_aes_setkey_enc+0xb8d>
  4427f9:	83 3c 25 80 34 45 00 	cmpl   $0x0,0x453480
  442800:	00 
  442801:	0f 85 98 04 00 00    	jne    442c9f <mbedtls_aes_setkey_enc+0x54f>
  442807:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  44280e:	c7 45 f8 01 00 00 00 	movl   $0x1,-0x8(%rbp)
  442815:	81 7d fc 00 01 00 00 	cmpl   $0x100,-0x4(%rbp)
  44281c:	7d 53                	jge    442871 <mbedtls_aes_setkey_enc+0x121>
  44281e:	31 c0                	xor    %eax,%eax
  442820:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  442823:	48 63 55 fc          	movslq -0x4(%rbp),%rdx
  442827:	89 8c 95 f0 fb ff ff 	mov    %ecx,-0x410(%rbp,%rdx,4)
  44282e:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  442831:	48 63 55 f8          	movslq -0x8(%rbp),%rdx
  442835:	89 8c 95 f0 f7 ff ff 	mov    %ecx,-0x810(%rbp,%rdx,4)
  44283c:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  44283f:	8b 75 f8             	mov    -0x8(%rbp),%esi
  442842:	c1 e6 01             	shl    $0x1,%esi
  442845:	8b 7d f8             	mov    -0x8(%rbp),%edi
  442848:	81 e7 80 00 00 00    	and    $0x80,%edi
  44284e:	83 ff 00             	cmp    $0x0,%edi
  442851:	bf 1b 00 00 00       	mov    $0x1b,%edi
  442856:	0f 45 c7             	cmovne %edi,%eax
  442859:	31 c6                	xor    %eax,%esi
  44285b:	31 f1                	xor    %esi,%ecx
  44285d:	81 e1 ff 00 00 00    	and    $0xff,%ecx
  442863:	89 4d f8             	mov    %ecx,-0x8(%rbp)
  442866:	8b 45 fc             	mov    -0x4(%rbp),%eax
  442869:	83 c0 01             	add    $0x1,%eax
  44286c:	89 45 fc             	mov    %eax,-0x4(%rbp)
  44286f:	eb a4                	jmp    442815 <mbedtls_aes_setkey_enc+0xc5>
  442871:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  442878:	c7 45 f8 01 00 00 00 	movl   $0x1,-0x8(%rbp)
  44287f:	83 7d fc 0a          	cmpl   $0xa,-0x4(%rbp)
  442883:	7d 40                	jge    4428c5 <mbedtls_aes_setkey_enc+0x175>
  442885:	31 c0                	xor    %eax,%eax
  442887:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  44288a:	48 63 55 fc          	movslq -0x4(%rbp),%rdx
  44288e:	89 0c 95 90 34 45 00 	mov    %ecx,0x453490(,%rdx,4)
  442895:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  442898:	c1 e1 01             	shl    $0x1,%ecx
  44289b:	8b 75 f8             	mov    -0x8(%rbp),%esi
  44289e:	81 e6 80 00 00 00    	and    $0x80,%esi
  4428a4:	83 fe 00             	cmp    $0x0,%esi
  4428a7:	be 1b 00 00 00       	mov    $0x1b,%esi
  4428ac:	0f 45 c6             	cmovne %esi,%eax
  4428af:	31 c1                	xor    %eax,%ecx
  4428b1:	81 e1 ff 00 00 00    	and    $0xff,%ecx
  4428b7:	89 4d f8             	mov    %ecx,-0x8(%rbp)
  4428ba:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4428bd:	83 c0 01             	add    $0x1,%eax
  4428c0:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4428c3:	eb ba                	jmp    44287f <mbedtls_aes_setkey_enc+0x12f>
  4428c5:	c6 04 25 c0 34 45 00 	movb   $0x63,0x4534c0
  4428cc:	63 
  4428cd:	c6 04 25 23 36 45 00 	movb   $0x0,0x453623
  4428d4:	00 
  4428d5:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  4428dc:	81 7d fc 00 01 00 00 	cmpl   $0x100,-0x4(%rbp)
  4428e3:	0f 8d d8 00 00 00    	jge    4429c1 <mbedtls_aes_setkey_enc+0x271>
  4428e9:	48 63 45 fc          	movslq -0x4(%rbp),%rax
  4428ed:	b9 ff 00 00 00       	mov    $0xff,%ecx
  4428f2:	2b 8c 85 f0 f7 ff ff 	sub    -0x810(%rbp,%rax,4),%ecx
  4428f9:	48 63 c1             	movslq %ecx,%rax
  4428fc:	8b 8c 85 f0 fb ff ff 	mov    -0x410(%rbp,%rax,4),%ecx
  442903:	89 4d f8             	mov    %ecx,-0x8(%rbp)
  442906:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  442909:	89 4d f4             	mov    %ecx,-0xc(%rbp)
  44290c:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  44290f:	c1 e1 01             	shl    $0x1,%ecx
  442912:	8b 55 f4             	mov    -0xc(%rbp),%edx
  442915:	c1 fa 07             	sar    $0x7,%edx
  442918:	09 d1                	or     %edx,%ecx
  44291a:	81 e1 ff 00 00 00    	and    $0xff,%ecx
  442920:	89 4d f4             	mov    %ecx,-0xc(%rbp)
  442923:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  442926:	33 4d f8             	xor    -0x8(%rbp),%ecx
  442929:	89 4d f8             	mov    %ecx,-0x8(%rbp)
  44292c:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  44292f:	c1 e1 01             	shl    $0x1,%ecx
  442932:	8b 55 f4             	mov    -0xc(%rbp),%edx
  442935:	c1 fa 07             	sar    $0x7,%edx
  442938:	09 d1                	or     %edx,%ecx
  44293a:	81 e1 ff 00 00 00    	and    $0xff,%ecx
  442940:	89 4d f4             	mov    %ecx,-0xc(%rbp)
  442943:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  442946:	33 4d f8             	xor    -0x8(%rbp),%ecx
  442949:	89 4d f8             	mov    %ecx,-0x8(%rbp)
  44294c:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  44294f:	c1 e1 01             	shl    $0x1,%ecx
  442952:	8b 55 f4             	mov    -0xc(%rbp),%edx
  442955:	c1 fa 07             	sar    $0x7,%edx
  442958:	09 d1                	or     %edx,%ecx
  44295a:	81 e1 ff 00 00 00    	and    $0xff,%ecx
  442960:	89 4d f4             	mov    %ecx,-0xc(%rbp)
  442963:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  442966:	33 4d f8             	xor    -0x8(%rbp),%ecx
  442969:	89 4d f8             	mov    %ecx,-0x8(%rbp)
  44296c:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  44296f:	c1 e1 01             	shl    $0x1,%ecx
  442972:	8b 55 f4             	mov    -0xc(%rbp),%edx
  442975:	c1 fa 07             	sar    $0x7,%edx
  442978:	09 d1                	or     %edx,%ecx
  44297a:	81 e1 ff 00 00 00    	and    $0xff,%ecx
  442980:	89 4d f4             	mov    %ecx,-0xc(%rbp)
  442983:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  442986:	83 f1 63             	xor    $0x63,%ecx
  442989:	33 4d f8             	xor    -0x8(%rbp),%ecx
  44298c:	89 4d f8             	mov    %ecx,-0x8(%rbp)
  44298f:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  442992:	40 88 ce             	mov    %cl,%sil
  442995:	48 63 45 fc          	movslq -0x4(%rbp),%rax
  442999:	40 88 34 05 c0 34 45 	mov    %sil,0x4534c0(,%rax,1)
  4429a0:	00 
  4429a1:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  4429a4:	40 88 ce             	mov    %cl,%sil
  4429a7:	48 63 45 f8          	movslq -0x8(%rbp),%rax
  4429ab:	40 88 34 05 c0 35 45 	mov    %sil,0x4535c0(,%rax,1)
  4429b2:	00 
  4429b3:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  4429b6:	83 c1 01             	add    $0x1,%ecx
  4429b9:	89 4d fc             	mov    %ecx,-0x4(%rbp)
  4429bc:	e9 1b ff ff ff       	jmpq   4428dc <mbedtls_aes_setkey_enc+0x18c>
  4429c1:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  4429c8:	81 7d fc 00 01 00 00 	cmpl   $0x100,-0x4(%rbp)
  4429cf:	0f 8d bf 02 00 00    	jge    442c94 <mbedtls_aes_setkey_enc+0x544>
  4429d5:	31 c0                	xor    %eax,%eax
  4429d7:	48 63 4d fc          	movslq -0x4(%rbp),%rcx
  4429db:	0f b6 14 0d c0 34 45 	movzbl 0x4534c0(,%rcx,1),%edx
  4429e2:	00 
  4429e3:	89 55 f8             	mov    %edx,-0x8(%rbp)
  4429e6:	8b 55 f8             	mov    -0x8(%rbp),%edx
  4429e9:	c1 e2 01             	shl    $0x1,%edx
  4429ec:	8b 75 f8             	mov    -0x8(%rbp),%esi
  4429ef:	81 e6 80 00 00 00    	and    $0x80,%esi
  4429f5:	83 fe 00             	cmp    $0x0,%esi
  4429f8:	be 1b 00 00 00       	mov    $0x1b,%esi
  4429fd:	0f 45 c6             	cmovne %esi,%eax
  442a00:	31 c2                	xor    %eax,%edx
  442a02:	81 e2 ff 00 00 00    	and    $0xff,%edx
  442a08:	89 55 f4             	mov    %edx,-0xc(%rbp)
  442a0b:	8b 45 f4             	mov    -0xc(%rbp),%eax
  442a0e:	33 45 f8             	xor    -0x8(%rbp),%eax
  442a11:	25 ff 00 00 00       	and    $0xff,%eax
  442a16:	89 45 f0             	mov    %eax,-0x10(%rbp)
  442a19:	8b 45 f4             	mov    -0xc(%rbp),%eax
  442a1c:	8b 55 f8             	mov    -0x8(%rbp),%edx
  442a1f:	c1 e2 08             	shl    $0x8,%edx
  442a22:	31 d0                	xor    %edx,%eax
  442a24:	8b 55 f8             	mov    -0x8(%rbp),%edx
  442a27:	c1 e2 10             	shl    $0x10,%edx
  442a2a:	31 d0                	xor    %edx,%eax
  442a2c:	8b 55 f0             	mov    -0x10(%rbp),%edx
  442a2f:	c1 e2 18             	shl    $0x18,%edx
  442a32:	31 d0                	xor    %edx,%eax
  442a34:	48 63 4d fc          	movslq -0x4(%rbp),%rcx
  442a38:	89 04 8d c0 36 45 00 	mov    %eax,0x4536c0(,%rcx,4)
  442a3f:	48 63 4d fc          	movslq -0x4(%rbp),%rcx
  442a43:	8b 04 8d c0 36 45 00 	mov    0x4536c0(,%rcx,4),%eax
  442a4a:	c1 e0 08             	shl    $0x8,%eax
  442a4d:	48 63 4d fc          	movslq -0x4(%rbp),%rcx
  442a51:	8b 14 8d c0 36 45 00 	mov    0x4536c0(,%rcx,4),%edx
  442a58:	c1 ea 18             	shr    $0x18,%edx
  442a5b:	09 d0                	or     %edx,%eax
  442a5d:	48 63 4d fc          	movslq -0x4(%rbp),%rcx
  442a61:	89 04 8d c0 3a 45 00 	mov    %eax,0x453ac0(,%rcx,4)
  442a68:	48 63 4d fc          	movslq -0x4(%rbp),%rcx
  442a6c:	8b 04 8d c0 3a 45 00 	mov    0x453ac0(,%rcx,4),%eax
  442a73:	c1 e0 08             	shl    $0x8,%eax
  442a76:	48 63 4d fc          	movslq -0x4(%rbp),%rcx
  442a7a:	8b 14 8d c0 3a 45 00 	mov    0x453ac0(,%rcx,4),%edx
  442a81:	c1 ea 18             	shr    $0x18,%edx
  442a84:	09 d0                	or     %edx,%eax
  442a86:	48 63 4d fc          	movslq -0x4(%rbp),%rcx
  442a8a:	89 04 8d c0 3e 45 00 	mov    %eax,0x453ec0(,%rcx,4)
  442a91:	48 63 4d fc          	movslq -0x4(%rbp),%rcx
  442a95:	8b 04 8d c0 3e 45 00 	mov    0x453ec0(,%rcx,4),%eax
  442a9c:	c1 e0 08             	shl    $0x8,%eax
  442a9f:	48 63 4d fc          	movslq -0x4(%rbp),%rcx
  442aa3:	8b 14 8d c0 3e 45 00 	mov    0x453ec0(,%rcx,4),%edx
  442aaa:	c1 ea 18             	shr    $0x18,%edx
  442aad:	09 d0                	or     %edx,%eax
  442aaf:	48 63 4d fc          	movslq -0x4(%rbp),%rcx
  442ab3:	89 04 8d c0 42 45 00 	mov    %eax,0x4542c0(,%rcx,4)
  442aba:	48 63 4d fc          	movslq -0x4(%rbp),%rcx
  442abe:	0f b6 04 0d c0 35 45 	movzbl 0x4535c0(,%rcx,1),%eax
  442ac5:	00 
  442ac6:	89 45 f8             	mov    %eax,-0x8(%rbp)
  442ac9:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
  442acd:	74 2b                	je     442afa <mbedtls_aes_setkey_enc+0x3aa>
  442acf:	8b 85 28 f8 ff ff    	mov    -0x7d8(%rbp),%eax
  442ad5:	48 63 4d f8          	movslq -0x8(%rbp),%rcx
  442ad9:	03 84 8d f0 f7 ff ff 	add    -0x810(%rbp,%rcx,4),%eax
  442ae0:	99                   	cltd   
  442ae1:	be ff 00 00 00       	mov    $0xff,%esi
  442ae6:	f7 fe                	idiv   %esi
  442ae8:	48 63 ca             	movslq %edx,%rcx
  442aeb:	8b 94 8d f0 fb ff ff 	mov    -0x410(%rbp,%rcx,4),%edx
  442af2:	89 95 b4 f7 ff ff    	mov    %edx,-0x84c(%rbp)
  442af8:	eb 0a                	jmp    442b04 <mbedtls_aes_setkey_enc+0x3b4>
  442afa:	31 c0                	xor    %eax,%eax
  442afc:	89 85 b4 f7 ff ff    	mov    %eax,-0x84c(%rbp)
  442b02:	eb 00                	jmp    442b04 <mbedtls_aes_setkey_enc+0x3b4>
  442b04:	8b 85 b4 f7 ff ff    	mov    -0x84c(%rbp),%eax
  442b0a:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
  442b0e:	89 85 b0 f7 ff ff    	mov    %eax,-0x850(%rbp)
  442b14:	74 2b                	je     442b41 <mbedtls_aes_setkey_enc+0x3f1>
  442b16:	8b 85 14 f8 ff ff    	mov    -0x7ec(%rbp),%eax
  442b1c:	48 63 4d f8          	movslq -0x8(%rbp),%rcx
  442b20:	03 84 8d f0 f7 ff ff 	add    -0x810(%rbp,%rcx,4),%eax
  442b27:	99                   	cltd   
  442b28:	be ff 00 00 00       	mov    $0xff,%esi
  442b2d:	f7 fe                	idiv   %esi
  442b2f:	48 63 ca             	movslq %edx,%rcx
  442b32:	8b 94 8d f0 fb ff ff 	mov    -0x410(%rbp,%rcx,4),%edx
  442b39:	89 95 ac f7 ff ff    	mov    %edx,-0x854(%rbp)
  442b3f:	eb 0a                	jmp    442b4b <mbedtls_aes_setkey_enc+0x3fb>
  442b41:	31 c0                	xor    %eax,%eax
  442b43:	89 85 ac f7 ff ff    	mov    %eax,-0x854(%rbp)
  442b49:	eb 00                	jmp    442b4b <mbedtls_aes_setkey_enc+0x3fb>
  442b4b:	8b 85 ac f7 ff ff    	mov    -0x854(%rbp),%eax
  442b51:	c1 e0 08             	shl    $0x8,%eax
  442b54:	8b 8d b0 f7 ff ff    	mov    -0x850(%rbp),%ecx
  442b5a:	31 c1                	xor    %eax,%ecx
  442b5c:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
  442b60:	89 8d a8 f7 ff ff    	mov    %ecx,-0x858(%rbp)
  442b66:	74 2b                	je     442b93 <mbedtls_aes_setkey_enc+0x443>
  442b68:	8b 85 24 f8 ff ff    	mov    -0x7dc(%rbp),%eax
  442b6e:	48 63 4d f8          	movslq -0x8(%rbp),%rcx
  442b72:	03 84 8d f0 f7 ff ff 	add    -0x810(%rbp,%rcx,4),%eax
  442b79:	99                   	cltd   
  442b7a:	be ff 00 00 00       	mov    $0xff,%esi
  442b7f:	f7 fe                	idiv   %esi
  442b81:	48 63 ca             	movslq %edx,%rcx
  442b84:	8b 94 8d f0 fb ff ff 	mov    -0x410(%rbp,%rcx,4),%edx
  442b8b:	89 95 a4 f7 ff ff    	mov    %edx,-0x85c(%rbp)
  442b91:	eb 0a                	jmp    442b9d <mbedtls_aes_setkey_enc+0x44d>
  442b93:	31 c0                	xor    %eax,%eax
  442b95:	89 85 a4 f7 ff ff    	mov    %eax,-0x85c(%rbp)
  442b9b:	eb 00                	jmp    442b9d <mbedtls_aes_setkey_enc+0x44d>
  442b9d:	8b 85 a4 f7 ff ff    	mov    -0x85c(%rbp),%eax
  442ba3:	c1 e0 10             	shl    $0x10,%eax
  442ba6:	8b 8d a8 f7 ff ff    	mov    -0x858(%rbp),%ecx
  442bac:	31 c1                	xor    %eax,%ecx
  442bae:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
  442bb2:	89 8d a0 f7 ff ff    	mov    %ecx,-0x860(%rbp)
  442bb8:	74 2b                	je     442be5 <mbedtls_aes_setkey_enc+0x495>
  442bba:	8b 85 1c f8 ff ff    	mov    -0x7e4(%rbp),%eax
  442bc0:	48 63 4d f8          	movslq -0x8(%rbp),%rcx
  442bc4:	03 84 8d f0 f7 ff ff 	add    -0x810(%rbp,%rcx,4),%eax
  442bcb:	99                   	cltd   
  442bcc:	be ff 00 00 00       	mov    $0xff,%esi
  442bd1:	f7 fe                	idiv   %esi
  442bd3:	48 63 ca             	movslq %edx,%rcx
  442bd6:	8b 94 8d f0 fb ff ff 	mov    -0x410(%rbp,%rcx,4),%edx
  442bdd:	89 95 9c f7 ff ff    	mov    %edx,-0x864(%rbp)
  442be3:	eb 0a                	jmp    442bef <mbedtls_aes_setkey_enc+0x49f>
  442be5:	31 c0                	xor    %eax,%eax
  442be7:	89 85 9c f7 ff ff    	mov    %eax,-0x864(%rbp)
  442bed:	eb 00                	jmp    442bef <mbedtls_aes_setkey_enc+0x49f>
  442bef:	8b 85 9c f7 ff ff    	mov    -0x864(%rbp),%eax
  442bf5:	c1 e0 18             	shl    $0x18,%eax
  442bf8:	8b 8d a0 f7 ff ff    	mov    -0x860(%rbp),%ecx
  442bfe:	31 c1                	xor    %eax,%ecx
  442c00:	48 63 55 fc          	movslq -0x4(%rbp),%rdx
  442c04:	89 0c 95 c0 46 45 00 	mov    %ecx,0x4546c0(,%rdx,4)
  442c0b:	48 63 55 fc          	movslq -0x4(%rbp),%rdx
  442c0f:	8b 04 95 c0 46 45 00 	mov    0x4546c0(,%rdx,4),%eax
  442c16:	c1 e0 08             	shl    $0x8,%eax
  442c19:	48 63 55 fc          	movslq -0x4(%rbp),%rdx
  442c1d:	8b 0c 95 c0 46 45 00 	mov    0x4546c0(,%rdx,4),%ecx
  442c24:	c1 e9 18             	shr    $0x18,%ecx
  442c27:	09 c8                	or     %ecx,%eax
  442c29:	48 63 55 fc          	movslq -0x4(%rbp),%rdx
  442c2d:	89 04 95 c0 4a 45 00 	mov    %eax,0x454ac0(,%rdx,4)
  442c34:	48 63 55 fc          	movslq -0x4(%rbp),%rdx
  442c38:	8b 04 95 c0 4a 45 00 	mov    0x454ac0(,%rdx,4),%eax
  442c3f:	c1 e0 08             	shl    $0x8,%eax
  442c42:	48 63 55 fc          	movslq -0x4(%rbp),%rdx
  442c46:	8b 0c 95 c0 4a 45 00 	mov    0x454ac0(,%rdx,4),%ecx
  442c4d:	c1 e9 18             	shr    $0x18,%ecx
  442c50:	09 c8                	or     %ecx,%eax
  442c52:	48 63 55 fc          	movslq -0x4(%rbp),%rdx
  442c56:	89 04 95 c0 4e 45 00 	mov    %eax,0x454ec0(,%rdx,4)
  442c5d:	48 63 55 fc          	movslq -0x4(%rbp),%rdx
  442c61:	8b 04 95 c0 4e 45 00 	mov    0x454ec0(,%rdx,4),%eax
  442c68:	c1 e0 08             	shl    $0x8,%eax
  442c6b:	48 63 55 fc          	movslq -0x4(%rbp),%rdx
  442c6f:	8b 0c 95 c0 4e 45 00 	mov    0x454ec0(,%rdx,4),%ecx
  442c76:	c1 e9 18             	shr    $0x18,%ecx
  442c79:	09 c8                	or     %ecx,%eax
  442c7b:	48 63 55 fc          	movslq -0x4(%rbp),%rdx
  442c7f:	89 04 95 c0 52 45 00 	mov    %eax,0x4552c0(,%rdx,4)
  442c86:	8b 45 fc             	mov    -0x4(%rbp),%eax
  442c89:	83 c0 01             	add    $0x1,%eax
  442c8c:	89 45 fc             	mov    %eax,-0x4(%rbp)
  442c8f:	e9 34 fd ff ff       	jmpq   4429c8 <mbedtls_aes_setkey_enc+0x278>
  442c94:	c7 04 25 80 34 45 00 	movl   $0x1,0x453480
  442c9b:	01 00 00 00 
  442c9f:	48 8b 85 e0 f7 ff ff 	mov    -0x820(%rbp),%rax
  442ca6:	48 83 c0 10          	add    $0x10,%rax
  442caa:	48 89 85 c8 f7 ff ff 	mov    %rax,-0x838(%rbp)
  442cb1:	48 8b 8d e0 f7 ff ff 	mov    -0x820(%rbp),%rcx
  442cb8:	48 89 41 08          	mov    %rax,0x8(%rcx)
  442cbc:	c7 85 d0 f7 ff ff 00 	movl   $0x0,-0x830(%rbp)
  442cc3:	00 00 00 
  442cc6:	8b 85 d0 f7 ff ff    	mov    -0x830(%rbp),%eax
  442ccc:	8b 8d d4 f7 ff ff    	mov    -0x82c(%rbp),%ecx
  442cd2:	c1 e9 05             	shr    $0x5,%ecx
  442cd5:	39 c8                	cmp    %ecx,%eax
  442cd7:	0f 83 9e 00 00 00    	jae    442d7b <mbedtls_aes_setkey_enc+0x62b>
  442cdd:	48 8b 85 d8 f7 ff ff 	mov    -0x828(%rbp),%rax
  442ce4:	8b 8d d0 f7 ff ff    	mov    -0x830(%rbp),%ecx
  442cea:	c1 e1 02             	shl    $0x2,%ecx
  442ced:	89 c9                	mov    %ecx,%ecx
  442cef:	89 ca                	mov    %ecx,%edx
  442cf1:	0f b6 0c 10          	movzbl (%rax,%rdx,1),%ecx
  442cf5:	48 8b 85 d8 f7 ff ff 	mov    -0x828(%rbp),%rax
  442cfc:	8b b5 d0 f7 ff ff    	mov    -0x830(%rbp),%esi
  442d02:	c1 e6 02             	shl    $0x2,%esi
  442d05:	83 c6 01             	add    $0x1,%esi
  442d08:	89 f6                	mov    %esi,%esi
  442d0a:	89 f2                	mov    %esi,%edx
  442d0c:	0f b6 34 10          	movzbl (%rax,%rdx,1),%esi
  442d10:	c1 e6 08             	shl    $0x8,%esi
  442d13:	09 f1                	or     %esi,%ecx
  442d15:	48 8b 85 d8 f7 ff ff 	mov    -0x828(%rbp),%rax
  442d1c:	8b b5 d0 f7 ff ff    	mov    -0x830(%rbp),%esi
  442d22:	c1 e6 02             	shl    $0x2,%esi
  442d25:	83 c6 02             	add    $0x2,%esi
  442d28:	89 f6                	mov    %esi,%esi
  442d2a:	89 f2                	mov    %esi,%edx
  442d2c:	0f b6 34 10          	movzbl (%rax,%rdx,1),%esi
  442d30:	c1 e6 10             	shl    $0x10,%esi
  442d33:	09 f1                	or     %esi,%ecx
  442d35:	48 8b 85 d8 f7 ff ff 	mov    -0x828(%rbp),%rax
  442d3c:	8b b5 d0 f7 ff ff    	mov    -0x830(%rbp),%esi
  442d42:	c1 e6 02             	shl    $0x2,%esi
  442d45:	83 c6 03             	add    $0x3,%esi
  442d48:	89 f6                	mov    %esi,%esi
  442d4a:	89 f2                	mov    %esi,%edx
  442d4c:	0f b6 34 10          	movzbl (%rax,%rdx,1),%esi
  442d50:	c1 e6 18             	shl    $0x18,%esi
  442d53:	09 f1                	or     %esi,%ecx
  442d55:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  442d5c:	8b b5 d0 f7 ff ff    	mov    -0x830(%rbp),%esi
  442d62:	89 f2                	mov    %esi,%edx
  442d64:	89 0c 90             	mov    %ecx,(%rax,%rdx,4)
  442d67:	8b 85 d0 f7 ff ff    	mov    -0x830(%rbp),%eax
  442d6d:	83 c0 01             	add    $0x1,%eax
  442d70:	89 85 d0 f7 ff ff    	mov    %eax,-0x830(%rbp)
  442d76:	e9 4b ff ff ff       	jmpq   442cc6 <mbedtls_aes_setkey_enc+0x576>
  442d7b:	48 8b 85 e0 f7 ff ff 	mov    -0x820(%rbp),%rax
  442d82:	8b 08                	mov    (%rax),%ecx
  442d84:	89 ca                	mov    %ecx,%edx
  442d86:	83 ea 0a             	sub    $0xa,%edx
  442d89:	89 8d 98 f7 ff ff    	mov    %ecx,-0x868(%rbp)
  442d8f:	89 95 94 f7 ff ff    	mov    %edx,-0x86c(%rbp)
  442d95:	74 33                	je     442dca <mbedtls_aes_setkey_enc+0x67a>
  442d97:	eb 00                	jmp    442d99 <mbedtls_aes_setkey_enc+0x649>
  442d99:	8b 85 98 f7 ff ff    	mov    -0x868(%rbp),%eax
  442d9f:	83 e8 0c             	sub    $0xc,%eax
  442da2:	89 85 90 f7 ff ff    	mov    %eax,-0x870(%rbp)
  442da8:	0f 84 64 01 00 00    	je     442f12 <mbedtls_aes_setkey_enc+0x7c2>
  442dae:	eb 00                	jmp    442db0 <mbedtls_aes_setkey_enc+0x660>
  442db0:	8b 85 98 f7 ff ff    	mov    -0x868(%rbp),%eax
  442db6:	83 e8 0e             	sub    $0xe,%eax
  442db9:	89 85 8c f7 ff ff    	mov    %eax,-0x874(%rbp)
  442dbf:	0f 84 d1 02 00 00    	je     443096 <mbedtls_aes_setkey_enc+0x946>
  442dc5:	e9 09 05 00 00       	jmpq   4432d3 <mbedtls_aes_setkey_enc+0xb83>
  442dca:	c7 85 d0 f7 ff ff 00 	movl   $0x0,-0x830(%rbp)
  442dd1:	00 00 00 
  442dd4:	83 bd d0 f7 ff ff 0a 	cmpl   $0xa,-0x830(%rbp)
  442ddb:	0f 83 2c 01 00 00    	jae    442f0d <mbedtls_aes_setkey_enc+0x7bd>
  442de1:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  442de8:	8b 08                	mov    (%rax),%ecx
  442dea:	8b 95 d0 f7 ff ff    	mov    -0x830(%rbp),%edx
  442df0:	89 d0                	mov    %edx,%eax
  442df2:	33 0c 85 90 34 45 00 	xor    0x453490(,%rax,4),%ecx
  442df9:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  442e00:	8b 50 0c             	mov    0xc(%rax),%edx
  442e03:	c1 ea 08             	shr    $0x8,%edx
  442e06:	81 e2 ff 00 00 00    	and    $0xff,%edx
  442e0c:	89 d2                	mov    %edx,%edx
  442e0e:	89 d0                	mov    %edx,%eax
  442e10:	0f b6 14 05 c0 34 45 	movzbl 0x4534c0(,%rax,1),%edx
  442e17:	00 
  442e18:	31 d1                	xor    %edx,%ecx
  442e1a:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  442e21:	8b 50 0c             	mov    0xc(%rax),%edx
  442e24:	c1 ea 10             	shr    $0x10,%edx
  442e27:	81 e2 ff 00 00 00    	and    $0xff,%edx
  442e2d:	89 d2                	mov    %edx,%edx
  442e2f:	89 d0                	mov    %edx,%eax
  442e31:	0f b6 14 05 c0 34 45 	movzbl 0x4534c0(,%rax,1),%edx
  442e38:	00 
  442e39:	c1 e2 08             	shl    $0x8,%edx
  442e3c:	31 d1                	xor    %edx,%ecx
  442e3e:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  442e45:	8b 50 0c             	mov    0xc(%rax),%edx
  442e48:	c1 ea 18             	shr    $0x18,%edx
  442e4b:	81 e2 ff 00 00 00    	and    $0xff,%edx
  442e51:	89 d2                	mov    %edx,%edx
  442e53:	89 d0                	mov    %edx,%eax
  442e55:	0f b6 14 05 c0 34 45 	movzbl 0x4534c0(,%rax,1),%edx
  442e5c:	00 
  442e5d:	c1 e2 10             	shl    $0x10,%edx
  442e60:	31 d1                	xor    %edx,%ecx
  442e62:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  442e69:	8b 50 0c             	mov    0xc(%rax),%edx
  442e6c:	81 e2 ff 00 00 00    	and    $0xff,%edx
  442e72:	89 d2                	mov    %edx,%edx
  442e74:	89 d0                	mov    %edx,%eax
  442e76:	0f b6 14 05 c0 34 45 	movzbl 0x4534c0(,%rax,1),%edx
  442e7d:	00 
  442e7e:	c1 e2 18             	shl    $0x18,%edx
  442e81:	31 d1                	xor    %edx,%ecx
  442e83:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  442e8a:	89 48 10             	mov    %ecx,0x10(%rax)
  442e8d:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  442e94:	8b 48 04             	mov    0x4(%rax),%ecx
  442e97:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  442e9e:	33 48 10             	xor    0x10(%rax),%ecx
  442ea1:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  442ea8:	89 48 14             	mov    %ecx,0x14(%rax)
  442eab:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  442eb2:	8b 48 08             	mov    0x8(%rax),%ecx
  442eb5:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  442ebc:	33 48 14             	xor    0x14(%rax),%ecx
  442ebf:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  442ec6:	89 48 18             	mov    %ecx,0x18(%rax)
  442ec9:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  442ed0:	8b 48 0c             	mov    0xc(%rax),%ecx
  442ed3:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  442eda:	33 48 18             	xor    0x18(%rax),%ecx
  442edd:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  442ee4:	89 48 1c             	mov    %ecx,0x1c(%rax)
  442ee7:	8b 85 d0 f7 ff ff    	mov    -0x830(%rbp),%eax
  442eed:	83 c0 01             	add    $0x1,%eax
  442ef0:	89 85 d0 f7 ff ff    	mov    %eax,-0x830(%rbp)
  442ef6:	48 8b 8d c8 f7 ff ff 	mov    -0x838(%rbp),%rcx
  442efd:	48 83 c1 10          	add    $0x10,%rcx
  442f01:	48 89 8d c8 f7 ff ff 	mov    %rcx,-0x838(%rbp)
  442f08:	e9 c7 fe ff ff       	jmpq   442dd4 <mbedtls_aes_setkey_enc+0x684>
  442f0d:	e9 c1 03 00 00       	jmpq   4432d3 <mbedtls_aes_setkey_enc+0xb83>
  442f12:	c7 85 d0 f7 ff ff 00 	movl   $0x0,-0x830(%rbp)
  442f19:	00 00 00 
  442f1c:	83 bd d0 f7 ff ff 08 	cmpl   $0x8,-0x830(%rbp)
  442f23:	0f 83 68 01 00 00    	jae    443091 <mbedtls_aes_setkey_enc+0x941>
  442f29:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  442f30:	8b 08                	mov    (%rax),%ecx
  442f32:	8b 95 d0 f7 ff ff    	mov    -0x830(%rbp),%edx
  442f38:	89 d0                	mov    %edx,%eax
  442f3a:	33 0c 85 90 34 45 00 	xor    0x453490(,%rax,4),%ecx
  442f41:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  442f48:	8b 50 14             	mov    0x14(%rax),%edx
  442f4b:	c1 ea 08             	shr    $0x8,%edx
  442f4e:	81 e2 ff 00 00 00    	and    $0xff,%edx
  442f54:	89 d2                	mov    %edx,%edx
  442f56:	89 d0                	mov    %edx,%eax
  442f58:	0f b6 14 05 c0 34 45 	movzbl 0x4534c0(,%rax,1),%edx
  442f5f:	00 
  442f60:	31 d1                	xor    %edx,%ecx
  442f62:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  442f69:	8b 50 14             	mov    0x14(%rax),%edx
  442f6c:	c1 ea 10             	shr    $0x10,%edx
  442f6f:	81 e2 ff 00 00 00    	and    $0xff,%edx
  442f75:	89 d2                	mov    %edx,%edx
  442f77:	89 d0                	mov    %edx,%eax
  442f79:	0f b6 14 05 c0 34 45 	movzbl 0x4534c0(,%rax,1),%edx
  442f80:	00 
  442f81:	c1 e2 08             	shl    $0x8,%edx
  442f84:	31 d1                	xor    %edx,%ecx
  442f86:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  442f8d:	8b 50 14             	mov    0x14(%rax),%edx
  442f90:	c1 ea 18             	shr    $0x18,%edx
  442f93:	81 e2 ff 00 00 00    	and    $0xff,%edx
  442f99:	89 d2                	mov    %edx,%edx
  442f9b:	89 d0                	mov    %edx,%eax
  442f9d:	0f b6 14 05 c0 34 45 	movzbl 0x4534c0(,%rax,1),%edx
  442fa4:	00 
  442fa5:	c1 e2 10             	shl    $0x10,%edx
  442fa8:	31 d1                	xor    %edx,%ecx
  442faa:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  442fb1:	8b 50 14             	mov    0x14(%rax),%edx
  442fb4:	81 e2 ff 00 00 00    	and    $0xff,%edx
  442fba:	89 d2                	mov    %edx,%edx
  442fbc:	89 d0                	mov    %edx,%eax
  442fbe:	0f b6 14 05 c0 34 45 	movzbl 0x4534c0(,%rax,1),%edx
  442fc5:	00 
  442fc6:	c1 e2 18             	shl    $0x18,%edx
  442fc9:	31 d1                	xor    %edx,%ecx
  442fcb:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  442fd2:	89 48 18             	mov    %ecx,0x18(%rax)
  442fd5:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  442fdc:	8b 48 04             	mov    0x4(%rax),%ecx
  442fdf:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  442fe6:	33 48 18             	xor    0x18(%rax),%ecx
  442fe9:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  442ff0:	89 48 1c             	mov    %ecx,0x1c(%rax)
  442ff3:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  442ffa:	8b 48 08             	mov    0x8(%rax),%ecx
  442ffd:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  443004:	33 48 1c             	xor    0x1c(%rax),%ecx
  443007:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  44300e:	89 48 20             	mov    %ecx,0x20(%rax)
  443011:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  443018:	8b 48 0c             	mov    0xc(%rax),%ecx
  44301b:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  443022:	33 48 20             	xor    0x20(%rax),%ecx
  443025:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  44302c:	89 48 24             	mov    %ecx,0x24(%rax)
  44302f:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  443036:	8b 48 10             	mov    0x10(%rax),%ecx
  443039:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  443040:	33 48 24             	xor    0x24(%rax),%ecx
  443043:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  44304a:	89 48 28             	mov    %ecx,0x28(%rax)
  44304d:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  443054:	8b 48 14             	mov    0x14(%rax),%ecx
  443057:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  44305e:	33 48 28             	xor    0x28(%rax),%ecx
  443061:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  443068:	89 48 2c             	mov    %ecx,0x2c(%rax)
  44306b:	8b 85 d0 f7 ff ff    	mov    -0x830(%rbp),%eax
  443071:	83 c0 01             	add    $0x1,%eax
  443074:	89 85 d0 f7 ff ff    	mov    %eax,-0x830(%rbp)
  44307a:	48 8b 8d c8 f7 ff ff 	mov    -0x838(%rbp),%rcx
  443081:	48 83 c1 18          	add    $0x18,%rcx
  443085:	48 89 8d c8 f7 ff ff 	mov    %rcx,-0x838(%rbp)
  44308c:	e9 8b fe ff ff       	jmpq   442f1c <mbedtls_aes_setkey_enc+0x7cc>
  443091:	e9 3d 02 00 00       	jmpq   4432d3 <mbedtls_aes_setkey_enc+0xb83>
  443096:	c7 85 d0 f7 ff ff 00 	movl   $0x0,-0x830(%rbp)
  44309d:	00 00 00 
  4430a0:	83 bd d0 f7 ff ff 07 	cmpl   $0x7,-0x830(%rbp)
  4430a7:	0f 83 24 02 00 00    	jae    4432d1 <mbedtls_aes_setkey_enc+0xb81>
  4430ad:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  4430b4:	8b 08                	mov    (%rax),%ecx
  4430b6:	8b 95 d0 f7 ff ff    	mov    -0x830(%rbp),%edx
  4430bc:	89 d0                	mov    %edx,%eax
  4430be:	33 0c 85 90 34 45 00 	xor    0x453490(,%rax,4),%ecx
  4430c5:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  4430cc:	8b 50 1c             	mov    0x1c(%rax),%edx
  4430cf:	c1 ea 08             	shr    $0x8,%edx
  4430d2:	81 e2 ff 00 00 00    	and    $0xff,%edx
  4430d8:	89 d2                	mov    %edx,%edx
  4430da:	89 d0                	mov    %edx,%eax
  4430dc:	0f b6 14 05 c0 34 45 	movzbl 0x4534c0(,%rax,1),%edx
  4430e3:	00 
  4430e4:	31 d1                	xor    %edx,%ecx
  4430e6:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  4430ed:	8b 50 1c             	mov    0x1c(%rax),%edx
  4430f0:	c1 ea 10             	shr    $0x10,%edx
  4430f3:	81 e2 ff 00 00 00    	and    $0xff,%edx
  4430f9:	89 d2                	mov    %edx,%edx
  4430fb:	89 d0                	mov    %edx,%eax
  4430fd:	0f b6 14 05 c0 34 45 	movzbl 0x4534c0(,%rax,1),%edx
  443104:	00 
  443105:	c1 e2 08             	shl    $0x8,%edx
  443108:	31 d1                	xor    %edx,%ecx
  44310a:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  443111:	8b 50 1c             	mov    0x1c(%rax),%edx
  443114:	c1 ea 18             	shr    $0x18,%edx
  443117:	81 e2 ff 00 00 00    	and    $0xff,%edx
  44311d:	89 d2                	mov    %edx,%edx
  44311f:	89 d0                	mov    %edx,%eax
  443121:	0f b6 14 05 c0 34 45 	movzbl 0x4534c0(,%rax,1),%edx
  443128:	00 
  443129:	c1 e2 10             	shl    $0x10,%edx
  44312c:	31 d1                	xor    %edx,%ecx
  44312e:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  443135:	8b 50 1c             	mov    0x1c(%rax),%edx
  443138:	81 e2 ff 00 00 00    	and    $0xff,%edx
  44313e:	89 d2                	mov    %edx,%edx
  443140:	89 d0                	mov    %edx,%eax
  443142:	0f b6 14 05 c0 34 45 	movzbl 0x4534c0(,%rax,1),%edx
  443149:	00 
  44314a:	c1 e2 18             	shl    $0x18,%edx
  44314d:	31 d1                	xor    %edx,%ecx
  44314f:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  443156:	89 48 20             	mov    %ecx,0x20(%rax)
  443159:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  443160:	8b 48 04             	mov    0x4(%rax),%ecx
  443163:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  44316a:	33 48 20             	xor    0x20(%rax),%ecx
  44316d:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  443174:	89 48 24             	mov    %ecx,0x24(%rax)
  443177:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  44317e:	8b 48 08             	mov    0x8(%rax),%ecx
  443181:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  443188:	33 48 24             	xor    0x24(%rax),%ecx
  44318b:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  443192:	89 48 28             	mov    %ecx,0x28(%rax)
  443195:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  44319c:	8b 48 0c             	mov    0xc(%rax),%ecx
  44319f:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  4431a6:	33 48 28             	xor    0x28(%rax),%ecx
  4431a9:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  4431b0:	89 48 2c             	mov    %ecx,0x2c(%rax)
  4431b3:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  4431ba:	8b 48 10             	mov    0x10(%rax),%ecx
  4431bd:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  4431c4:	8b 50 2c             	mov    0x2c(%rax),%edx
  4431c7:	81 e2 ff 00 00 00    	and    $0xff,%edx
  4431cd:	89 d2                	mov    %edx,%edx
  4431cf:	89 d0                	mov    %edx,%eax
  4431d1:	0f b6 14 05 c0 34 45 	movzbl 0x4534c0(,%rax,1),%edx
  4431d8:	00 
  4431d9:	31 d1                	xor    %edx,%ecx
  4431db:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  4431e2:	8b 50 2c             	mov    0x2c(%rax),%edx
  4431e5:	c1 ea 08             	shr    $0x8,%edx
  4431e8:	81 e2 ff 00 00 00    	and    $0xff,%edx
  4431ee:	89 d2                	mov    %edx,%edx
  4431f0:	89 d0                	mov    %edx,%eax
  4431f2:	0f b6 14 05 c0 34 45 	movzbl 0x4534c0(,%rax,1),%edx
  4431f9:	00 
  4431fa:	c1 e2 08             	shl    $0x8,%edx
  4431fd:	31 d1                	xor    %edx,%ecx
  4431ff:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  443206:	8b 50 2c             	mov    0x2c(%rax),%edx
  443209:	c1 ea 10             	shr    $0x10,%edx
  44320c:	81 e2 ff 00 00 00    	and    $0xff,%edx
  443212:	89 d2                	mov    %edx,%edx
  443214:	89 d0                	mov    %edx,%eax
  443216:	0f b6 14 05 c0 34 45 	movzbl 0x4534c0(,%rax,1),%edx
  44321d:	00 
  44321e:	c1 e2 10             	shl    $0x10,%edx
  443221:	31 d1                	xor    %edx,%ecx
  443223:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  44322a:	8b 50 2c             	mov    0x2c(%rax),%edx
  44322d:	c1 ea 18             	shr    $0x18,%edx
  443230:	81 e2 ff 00 00 00    	and    $0xff,%edx
  443236:	89 d2                	mov    %edx,%edx
  443238:	89 d0                	mov    %edx,%eax
  44323a:	0f b6 14 05 c0 34 45 	movzbl 0x4534c0(,%rax,1),%edx
  443241:	00 
  443242:	c1 e2 18             	shl    $0x18,%edx
  443245:	31 d1                	xor    %edx,%ecx
  443247:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  44324e:	89 48 30             	mov    %ecx,0x30(%rax)
  443251:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  443258:	8b 48 14             	mov    0x14(%rax),%ecx
  44325b:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  443262:	33 48 30             	xor    0x30(%rax),%ecx
  443265:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  44326c:	89 48 34             	mov    %ecx,0x34(%rax)
  44326f:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  443276:	8b 48 18             	mov    0x18(%rax),%ecx
  443279:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  443280:	33 48 34             	xor    0x34(%rax),%ecx
  443283:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  44328a:	89 48 38             	mov    %ecx,0x38(%rax)
  44328d:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  443294:	8b 48 1c             	mov    0x1c(%rax),%ecx
  443297:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  44329e:	33 48 38             	xor    0x38(%rax),%ecx
  4432a1:	48 8b 85 c8 f7 ff ff 	mov    -0x838(%rbp),%rax
  4432a8:	89 48 3c             	mov    %ecx,0x3c(%rax)
  4432ab:	8b 85 d0 f7 ff ff    	mov    -0x830(%rbp),%eax
  4432b1:	83 c0 01             	add    $0x1,%eax
  4432b4:	89 85 d0 f7 ff ff    	mov    %eax,-0x830(%rbp)
  4432ba:	48 8b 8d c8 f7 ff ff 	mov    -0x838(%rbp),%rcx
  4432c1:	48 83 c1 20          	add    $0x20,%rcx
  4432c5:	48 89 8d c8 f7 ff ff 	mov    %rcx,-0x838(%rbp)
  4432cc:	e9 cf fd ff ff       	jmpq   4430a0 <mbedtls_aes_setkey_enc+0x950>
  4432d1:	eb 00                	jmp    4432d3 <mbedtls_aes_setkey_enc+0xb83>
  4432d3:	c7 85 ec f7 ff ff 00 	movl   $0x0,-0x814(%rbp)
  4432da:	00 00 00 
  4432dd:	8b 85 ec f7 ff ff    	mov    -0x814(%rbp),%eax
  4432e3:	89 85 88 f7 ff ff    	mov    %eax,-0x878(%rbp)
  4432e9:	e8 68 26 00 00       	callq  445956 <writeback_cache>
  4432ee:	8b 85 88 f7 ff ff    	mov    -0x878(%rbp),%eax
  4432f4:	48 81 c4 80 08 00 00 	add    $0x880,%rsp
  4432fb:	5d                   	pop    %rbp
  4432fc:	c3                   	retq   
  4432fd:	0f 1f 00             	nopl   (%rax)

0000000000443300 <mbedtls_aes_setkey_dec>:
  443300:	55                   	push   %rbp
  443301:	48 89 e5             	mov    %rsp,%rbp
  443304:	48 81 ec 90 01 00 00 	sub    $0x190,%rsp
  44330b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  44330f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  443313:	89 55 cc             	mov    %edx,-0x34(%rbp)
  443316:	eb 00                	jmp    443318 <mbedtls_aes_setkey_dec+0x18>
  443318:	eb 00                	jmp    44331a <mbedtls_aes_setkey_dec+0x1a>
  44331a:	eb 00                	jmp    44331c <mbedtls_aes_setkey_dec+0x1c>
  44331c:	31 f6                	xor    %esi,%esi
  44331e:	b8 20 01 00 00       	mov    $0x120,%eax
  443323:	89 c2                	mov    %eax,%edx
  443325:	48 8d 8d a0 fe ff ff 	lea    -0x160(%rbp),%rcx
  44332c:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  443330:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  443334:	48 89 8d 88 fe ff ff 	mov    %rcx,-0x178(%rbp)
  44333b:	e8 e0 dc fb ff       	callq  401020 <memset@plt>
  443340:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  443344:	48 83 c1 10          	add    $0x10,%rcx
  443348:	48 89 8d 98 fe ff ff 	mov    %rcx,-0x168(%rbp)
  44334f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  443353:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  443357:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  44335b:	8b 55 cc             	mov    -0x34(%rbp),%edx
  44335e:	48 8b bd 88 fe ff ff 	mov    -0x178(%rbp),%rdi
  443365:	e8 e6 f3 ff ff       	callq  442750 <mbedtls_aes_setkey_enc>
  44336a:	89 45 c0             	mov    %eax,-0x40(%rbp)
  44336d:	83 f8 00             	cmp    $0x0,%eax
  443370:	74 05                	je     443377 <mbedtls_aes_setkey_dec+0x77>
  443372:	e9 c8 02 00 00       	jmpq   44363f <mbedtls_aes_setkey_dec+0x33f>
  443377:	8b 85 a0 fe ff ff    	mov    -0x160(%rbp),%eax
  44337d:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  443381:	89 01                	mov    %eax,(%rcx)
  443383:	48 8b 8d a8 fe ff ff 	mov    -0x158(%rbp),%rcx
  44338a:	8b 85 a0 fe ff ff    	mov    -0x160(%rbp),%eax
  443390:	c1 e0 02             	shl    $0x2,%eax
  443393:	48 63 d0             	movslq %eax,%rdx
  443396:	48 c1 e2 02          	shl    $0x2,%rdx
  44339a:	48 01 d1             	add    %rdx,%rcx
  44339d:	48 89 8d 90 fe ff ff 	mov    %rcx,-0x170(%rbp)
  4433a4:	48 8b 8d 90 fe ff ff 	mov    -0x170(%rbp),%rcx
  4433ab:	48 89 ca             	mov    %rcx,%rdx
  4433ae:	48 83 c2 04          	add    $0x4,%rdx
  4433b2:	48 89 95 90 fe ff ff 	mov    %rdx,-0x170(%rbp)
  4433b9:	8b 01                	mov    (%rcx),%eax
  4433bb:	48 8b 8d 98 fe ff ff 	mov    -0x168(%rbp),%rcx
  4433c2:	48 89 ca             	mov    %rcx,%rdx
  4433c5:	48 83 c2 04          	add    $0x4,%rdx
  4433c9:	48 89 95 98 fe ff ff 	mov    %rdx,-0x168(%rbp)
  4433d0:	89 01                	mov    %eax,(%rcx)
  4433d2:	48 8b 8d 90 fe ff ff 	mov    -0x170(%rbp),%rcx
  4433d9:	48 89 ca             	mov    %rcx,%rdx
  4433dc:	48 83 c2 04          	add    $0x4,%rdx
  4433e0:	48 89 95 90 fe ff ff 	mov    %rdx,-0x170(%rbp)
  4433e7:	8b 01                	mov    (%rcx),%eax
  4433e9:	48 8b 8d 98 fe ff ff 	mov    -0x168(%rbp),%rcx
  4433f0:	48 89 ca             	mov    %rcx,%rdx
  4433f3:	48 83 c2 04          	add    $0x4,%rdx
  4433f7:	48 89 95 98 fe ff ff 	mov    %rdx,-0x168(%rbp)
  4433fe:	89 01                	mov    %eax,(%rcx)
  443400:	48 8b 8d 90 fe ff ff 	mov    -0x170(%rbp),%rcx
  443407:	48 89 ca             	mov    %rcx,%rdx
  44340a:	48 83 c2 04          	add    $0x4,%rdx
  44340e:	48 89 95 90 fe ff ff 	mov    %rdx,-0x170(%rbp)
  443415:	8b 01                	mov    (%rcx),%eax
  443417:	48 8b 8d 98 fe ff ff 	mov    -0x168(%rbp),%rcx
  44341e:	48 89 ca             	mov    %rcx,%rdx
  443421:	48 83 c2 04          	add    $0x4,%rdx
  443425:	48 89 95 98 fe ff ff 	mov    %rdx,-0x168(%rbp)
  44342c:	89 01                	mov    %eax,(%rcx)
  44342e:	48 8b 8d 90 fe ff ff 	mov    -0x170(%rbp),%rcx
  443435:	48 89 ca             	mov    %rcx,%rdx
  443438:	48 83 c2 04          	add    $0x4,%rdx
  44343c:	48 89 95 90 fe ff ff 	mov    %rdx,-0x170(%rbp)
  443443:	8b 01                	mov    (%rcx),%eax
  443445:	48 8b 8d 98 fe ff ff 	mov    -0x168(%rbp),%rcx
  44344c:	48 89 ca             	mov    %rcx,%rdx
  44344f:	48 83 c2 04          	add    $0x4,%rdx
  443453:	48 89 95 98 fe ff ff 	mov    %rdx,-0x168(%rbp)
  44345a:	89 01                	mov    %eax,(%rcx)
  44345c:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  443460:	8b 01                	mov    (%rcx),%eax
  443462:	83 e8 01             	sub    $0x1,%eax
  443465:	89 45 c8             	mov    %eax,-0x38(%rbp)
  443468:	48 8b 8d 90 fe ff ff 	mov    -0x170(%rbp),%rcx
  44346f:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
  443473:	48 89 8d 90 fe ff ff 	mov    %rcx,-0x170(%rbp)
  44347a:	83 7d c8 00          	cmpl   $0x0,-0x38(%rbp)
  44347e:	0f 8e 03 01 00 00    	jle    443587 <mbedtls_aes_setkey_dec+0x287>
  443484:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
  44348b:	83 7d c4 04          	cmpl   $0x4,-0x3c(%rbp)
  44348f:	0f 8d d0 00 00 00    	jge    443565 <mbedtls_aes_setkey_dec+0x265>
  443495:	48 8b 85 90 fe ff ff 	mov    -0x170(%rbp),%rax
  44349c:	8b 08                	mov    (%rax),%ecx
  44349e:	81 e1 ff 00 00 00    	and    $0xff,%ecx
  4434a4:	89 c9                	mov    %ecx,%ecx
  4434a6:	89 c8                	mov    %ecx,%eax
  4434a8:	0f b6 0c 05 c0 34 45 	movzbl 0x4534c0(,%rax,1),%ecx
  4434af:	00 
  4434b0:	89 c8                	mov    %ecx,%eax
  4434b2:	8b 0c 85 c0 46 45 00 	mov    0x4546c0(,%rax,4),%ecx
  4434b9:	48 8b 85 90 fe ff ff 	mov    -0x170(%rbp),%rax
  4434c0:	8b 10                	mov    (%rax),%edx
  4434c2:	c1 ea 08             	shr    $0x8,%edx
  4434c5:	81 e2 ff 00 00 00    	and    $0xff,%edx
  4434cb:	89 d2                	mov    %edx,%edx
  4434cd:	89 d0                	mov    %edx,%eax
  4434cf:	0f b6 14 05 c0 34 45 	movzbl 0x4534c0(,%rax,1),%edx
  4434d6:	00 
  4434d7:	89 d0                	mov    %edx,%eax
  4434d9:	33 0c 85 c0 4a 45 00 	xor    0x454ac0(,%rax,4),%ecx
  4434e0:	48 8b 85 90 fe ff ff 	mov    -0x170(%rbp),%rax
  4434e7:	8b 10                	mov    (%rax),%edx
  4434e9:	c1 ea 10             	shr    $0x10,%edx
  4434ec:	81 e2 ff 00 00 00    	and    $0xff,%edx
  4434f2:	89 d2                	mov    %edx,%edx
  4434f4:	89 d0                	mov    %edx,%eax
  4434f6:	0f b6 14 05 c0 34 45 	movzbl 0x4534c0(,%rax,1),%edx
  4434fd:	00 
  4434fe:	89 d0                	mov    %edx,%eax
  443500:	33 0c 85 c0 4e 45 00 	xor    0x454ec0(,%rax,4),%ecx
  443507:	48 8b 85 90 fe ff ff 	mov    -0x170(%rbp),%rax
  44350e:	8b 10                	mov    (%rax),%edx
  443510:	c1 ea 18             	shr    $0x18,%edx
  443513:	81 e2 ff 00 00 00    	and    $0xff,%edx
  443519:	89 d2                	mov    %edx,%edx
  44351b:	89 d0                	mov    %edx,%eax
  44351d:	0f b6 14 05 c0 34 45 	movzbl 0x4534c0(,%rax,1),%edx
  443524:	00 
  443525:	89 d0                	mov    %edx,%eax
  443527:	33 0c 85 c0 52 45 00 	xor    0x4552c0(,%rax,4),%ecx
  44352e:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  443535:	48 89 c6             	mov    %rax,%rsi
  443538:	48 83 c6 04          	add    $0x4,%rsi
  44353c:	48 89 b5 98 fe ff ff 	mov    %rsi,-0x168(%rbp)
  443543:	89 08                	mov    %ecx,(%rax)
  443545:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  443548:	83 c0 01             	add    $0x1,%eax
  44354b:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  44354e:	48 8b 8d 90 fe ff ff 	mov    -0x170(%rbp),%rcx
  443555:	48 83 c1 04          	add    $0x4,%rcx
  443559:	48 89 8d 90 fe ff ff 	mov    %rcx,-0x170(%rbp)
  443560:	e9 26 ff ff ff       	jmpq   44348b <mbedtls_aes_setkey_dec+0x18b>
  443565:	eb 00                	jmp    443567 <mbedtls_aes_setkey_dec+0x267>
  443567:	8b 45 c8             	mov    -0x38(%rbp),%eax
  44356a:	83 c0 ff             	add    $0xffffffff,%eax
  44356d:	89 45 c8             	mov    %eax,-0x38(%rbp)
  443570:	48 8b 8d 90 fe ff ff 	mov    -0x170(%rbp),%rcx
  443577:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
  44357b:	48 89 8d 90 fe ff ff 	mov    %rcx,-0x170(%rbp)
  443582:	e9 f3 fe ff ff       	jmpq   44347a <mbedtls_aes_setkey_dec+0x17a>
  443587:	48 8b 85 90 fe ff ff 	mov    -0x170(%rbp),%rax
  44358e:	48 89 c1             	mov    %rax,%rcx
  443591:	48 83 c1 04          	add    $0x4,%rcx
  443595:	48 89 8d 90 fe ff ff 	mov    %rcx,-0x170(%rbp)
  44359c:	8b 10                	mov    (%rax),%edx
  44359e:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  4435a5:	48 89 c1             	mov    %rax,%rcx
  4435a8:	48 83 c1 04          	add    $0x4,%rcx
  4435ac:	48 89 8d 98 fe ff ff 	mov    %rcx,-0x168(%rbp)
  4435b3:	89 10                	mov    %edx,(%rax)
  4435b5:	48 8b 85 90 fe ff ff 	mov    -0x170(%rbp),%rax
  4435bc:	48 89 c1             	mov    %rax,%rcx
  4435bf:	48 83 c1 04          	add    $0x4,%rcx
  4435c3:	48 89 8d 90 fe ff ff 	mov    %rcx,-0x170(%rbp)
  4435ca:	8b 10                	mov    (%rax),%edx
  4435cc:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  4435d3:	48 89 c1             	mov    %rax,%rcx
  4435d6:	48 83 c1 04          	add    $0x4,%rcx
  4435da:	48 89 8d 98 fe ff ff 	mov    %rcx,-0x168(%rbp)
  4435e1:	89 10                	mov    %edx,(%rax)
  4435e3:	48 8b 85 90 fe ff ff 	mov    -0x170(%rbp),%rax
  4435ea:	48 89 c1             	mov    %rax,%rcx
  4435ed:	48 83 c1 04          	add    $0x4,%rcx
  4435f1:	48 89 8d 90 fe ff ff 	mov    %rcx,-0x170(%rbp)
  4435f8:	8b 10                	mov    (%rax),%edx
  4435fa:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  443601:	48 89 c1             	mov    %rax,%rcx
  443604:	48 83 c1 04          	add    $0x4,%rcx
  443608:	48 89 8d 98 fe ff ff 	mov    %rcx,-0x168(%rbp)
  44360f:	89 10                	mov    %edx,(%rax)
  443611:	48 8b 85 90 fe ff ff 	mov    -0x170(%rbp),%rax
  443618:	48 89 c1             	mov    %rax,%rcx
  44361b:	48 83 c1 04          	add    $0x4,%rcx
  44361f:	48 89 8d 90 fe ff ff 	mov    %rcx,-0x170(%rbp)
  443626:	8b 10                	mov    (%rax),%edx
  443628:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  44362f:	48 89 c1             	mov    %rax,%rcx
  443632:	48 83 c1 04          	add    $0x4,%rcx
  443636:	48 89 8d 98 fe ff ff 	mov    %rcx,-0x168(%rbp)
  44363d:	89 10                	mov    %edx,(%rax)
  44363f:	48 8d 85 a0 fe ff ff 	lea    -0x160(%rbp),%rax
  443646:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  44364a:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  44364f:	75 02                	jne    443653 <mbedtls_aes_setkey_dec+0x353>
  443651:	eb 2b                	jmp    44367e <mbedtls_aes_setkey_dec+0x37e>
  443653:	31 f6                	xor    %esi,%esi
  443655:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  443659:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  44365d:	48 c7 45 f0 20 01 00 	movq   $0x120,-0x10(%rbp)
  443664:	00 
  443665:	48 8b 04 25 70 e3 44 	mov    0x44e370,%rax
  44366c:	00 
  44366d:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  443671:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  443675:	ff d0                	callq  *%rax
  443677:	48 89 85 80 fe ff ff 	mov    %rax,-0x180(%rbp)
  44367e:	8b 45 c0             	mov    -0x40(%rbp),%eax
  443681:	89 85 7c fe ff ff    	mov    %eax,-0x184(%rbp)
  443687:	e8 ca 22 00 00       	callq  445956 <writeback_cache>
  44368c:	8b 85 7c fe ff ff    	mov    -0x184(%rbp),%eax
  443692:	48 81 c4 90 01 00 00 	add    $0x190,%rsp
  443699:	5d                   	pop    %rbp
  44369a:	c3                   	retq   
  44369b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000004436a0 <mbedtls_internal_aes_encrypt>:
  4436a0:	55                   	push   %rbp
  4436a1:	48 89 e5             	mov    %rsp,%rbp
  4436a4:	48 83 ec 50          	sub    $0x50,%rsp
  4436a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4436ac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  4436b0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  4436b4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4436b8:	48 8b 52 08          	mov    0x8(%rdx),%rdx
  4436bc:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4436c0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4436c4:	0f b6 02             	movzbl (%rdx),%eax
  4436c7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4436cb:	0f b6 4a 01          	movzbl 0x1(%rdx),%ecx
  4436cf:	c1 e1 08             	shl    $0x8,%ecx
  4436d2:	09 c8                	or     %ecx,%eax
  4436d4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4436d8:	0f b6 4a 02          	movzbl 0x2(%rdx),%ecx
  4436dc:	c1 e1 10             	shl    $0x10,%ecx
  4436df:	09 c8                	or     %ecx,%eax
  4436e1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4436e5:	0f b6 4a 03          	movzbl 0x3(%rdx),%ecx
  4436e9:	c1 e1 18             	shl    $0x18,%ecx
  4436ec:	09 c8                	or     %ecx,%eax
  4436ee:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  4436f1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4436f5:	48 89 d6             	mov    %rdx,%rsi
  4436f8:	48 83 c6 04          	add    $0x4,%rsi
  4436fc:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
  443700:	8b 02                	mov    (%rdx),%eax
  443702:	33 45 d4             	xor    -0x2c(%rbp),%eax
  443705:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  443708:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  44370c:	0f b6 42 04          	movzbl 0x4(%rdx),%eax
  443710:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  443714:	0f b6 4a 05          	movzbl 0x5(%rdx),%ecx
  443718:	c1 e1 08             	shl    $0x8,%ecx
  44371b:	09 c8                	or     %ecx,%eax
  44371d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  443721:	0f b6 4a 06          	movzbl 0x6(%rdx),%ecx
  443725:	c1 e1 10             	shl    $0x10,%ecx
  443728:	09 c8                	or     %ecx,%eax
  44372a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  44372e:	0f b6 4a 07          	movzbl 0x7(%rdx),%ecx
  443732:	c1 e1 18             	shl    $0x18,%ecx
  443735:	09 c8                	or     %ecx,%eax
  443737:	89 45 d0             	mov    %eax,-0x30(%rbp)
  44373a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  44373e:	48 89 d6             	mov    %rdx,%rsi
  443741:	48 83 c6 04          	add    $0x4,%rsi
  443745:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
  443749:	8b 02                	mov    (%rdx),%eax
  44374b:	33 45 d0             	xor    -0x30(%rbp),%eax
  44374e:	89 45 d0             	mov    %eax,-0x30(%rbp)
  443751:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  443755:	0f b6 42 08          	movzbl 0x8(%rdx),%eax
  443759:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  44375d:	0f b6 4a 09          	movzbl 0x9(%rdx),%ecx
  443761:	c1 e1 08             	shl    $0x8,%ecx
  443764:	09 c8                	or     %ecx,%eax
  443766:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  44376a:	0f b6 4a 0a          	movzbl 0xa(%rdx),%ecx
  44376e:	c1 e1 10             	shl    $0x10,%ecx
  443771:	09 c8                	or     %ecx,%eax
  443773:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  443777:	0f b6 4a 0b          	movzbl 0xb(%rdx),%ecx
  44377b:	c1 e1 18             	shl    $0x18,%ecx
  44377e:	09 c8                	or     %ecx,%eax
  443780:	89 45 cc             	mov    %eax,-0x34(%rbp)
  443783:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  443787:	48 89 d6             	mov    %rdx,%rsi
  44378a:	48 83 c6 04          	add    $0x4,%rsi
  44378e:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
  443792:	8b 02                	mov    (%rdx),%eax
  443794:	33 45 cc             	xor    -0x34(%rbp),%eax
  443797:	89 45 cc             	mov    %eax,-0x34(%rbp)
  44379a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  44379e:	0f b6 42 0c          	movzbl 0xc(%rdx),%eax
  4437a2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4437a6:	0f b6 4a 0d          	movzbl 0xd(%rdx),%ecx
  4437aa:	c1 e1 08             	shl    $0x8,%ecx
  4437ad:	09 c8                	or     %ecx,%eax
  4437af:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4437b3:	0f b6 4a 0e          	movzbl 0xe(%rdx),%ecx
  4437b7:	c1 e1 10             	shl    $0x10,%ecx
  4437ba:	09 c8                	or     %ecx,%eax
  4437bc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4437c0:	0f b6 4a 0f          	movzbl 0xf(%rdx),%ecx
  4437c4:	c1 e1 18             	shl    $0x18,%ecx
  4437c7:	09 c8                	or     %ecx,%eax
  4437c9:	89 45 c8             	mov    %eax,-0x38(%rbp)
  4437cc:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4437d0:	48 89 d6             	mov    %rdx,%rsi
  4437d3:	48 83 c6 04          	add    $0x4,%rsi
  4437d7:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
  4437db:	8b 02                	mov    (%rdx),%eax
  4437dd:	33 45 c8             	xor    -0x38(%rbp),%eax
  4437e0:	89 45 c8             	mov    %eax,-0x38(%rbp)
  4437e3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4437e7:	8b 02                	mov    (%rdx),%eax
  4437e9:	c1 f8 01             	sar    $0x1,%eax
  4437ec:	83 e8 01             	sub    $0x1,%eax
  4437ef:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  4437f2:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  4437f6:	0f 8e 76 03 00 00    	jle    443b72 <mbedtls_internal_aes_encrypt+0x4d2>
  4437fc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  443800:	48 89 c1             	mov    %rax,%rcx
  443803:	48 83 c1 04          	add    $0x4,%rcx
  443807:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  44380b:	8b 10                	mov    (%rax),%edx
  44380d:	8b 75 d4             	mov    -0x2c(%rbp),%esi
  443810:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443816:	89 f6                	mov    %esi,%esi
  443818:	89 f0                	mov    %esi,%eax
  44381a:	33 14 85 c0 36 45 00 	xor    0x4536c0(,%rax,4),%edx
  443821:	8b 75 d0             	mov    -0x30(%rbp),%esi
  443824:	c1 ee 08             	shr    $0x8,%esi
  443827:	81 e6 ff 00 00 00    	and    $0xff,%esi
  44382d:	89 f6                	mov    %esi,%esi
  44382f:	89 f0                	mov    %esi,%eax
  443831:	33 14 85 c0 3a 45 00 	xor    0x453ac0(,%rax,4),%edx
  443838:	8b 75 cc             	mov    -0x34(%rbp),%esi
  44383b:	c1 ee 10             	shr    $0x10,%esi
  44383e:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443844:	89 f6                	mov    %esi,%esi
  443846:	89 f0                	mov    %esi,%eax
  443848:	33 14 85 c0 3e 45 00 	xor    0x453ec0(,%rax,4),%edx
  44384f:	8b 75 c8             	mov    -0x38(%rbp),%esi
  443852:	c1 ee 18             	shr    $0x18,%esi
  443855:	81 e6 ff 00 00 00    	and    $0xff,%esi
  44385b:	89 f6                	mov    %esi,%esi
  44385d:	89 f0                	mov    %esi,%eax
  44385f:	33 14 85 c0 42 45 00 	xor    0x4542c0(,%rax,4),%edx
  443866:	89 55 c4             	mov    %edx,-0x3c(%rbp)
  443869:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  44386d:	48 89 c1             	mov    %rax,%rcx
  443870:	48 83 c1 04          	add    $0x4,%rcx
  443874:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  443878:	8b 10                	mov    (%rax),%edx
  44387a:	8b 75 d0             	mov    -0x30(%rbp),%esi
  44387d:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443883:	89 f6                	mov    %esi,%esi
  443885:	89 f0                	mov    %esi,%eax
  443887:	33 14 85 c0 36 45 00 	xor    0x4536c0(,%rax,4),%edx
  44388e:	8b 75 cc             	mov    -0x34(%rbp),%esi
  443891:	c1 ee 08             	shr    $0x8,%esi
  443894:	81 e6 ff 00 00 00    	and    $0xff,%esi
  44389a:	89 f6                	mov    %esi,%esi
  44389c:	89 f0                	mov    %esi,%eax
  44389e:	33 14 85 c0 3a 45 00 	xor    0x453ac0(,%rax,4),%edx
  4438a5:	8b 75 c8             	mov    -0x38(%rbp),%esi
  4438a8:	c1 ee 10             	shr    $0x10,%esi
  4438ab:	81 e6 ff 00 00 00    	and    $0xff,%esi
  4438b1:	89 f6                	mov    %esi,%esi
  4438b3:	89 f0                	mov    %esi,%eax
  4438b5:	33 14 85 c0 3e 45 00 	xor    0x453ec0(,%rax,4),%edx
  4438bc:	8b 75 d4             	mov    -0x2c(%rbp),%esi
  4438bf:	c1 ee 18             	shr    $0x18,%esi
  4438c2:	81 e6 ff 00 00 00    	and    $0xff,%esi
  4438c8:	89 f6                	mov    %esi,%esi
  4438ca:	89 f0                	mov    %esi,%eax
  4438cc:	33 14 85 c0 42 45 00 	xor    0x4542c0(,%rax,4),%edx
  4438d3:	89 55 c0             	mov    %edx,-0x40(%rbp)
  4438d6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4438da:	48 89 c1             	mov    %rax,%rcx
  4438dd:	48 83 c1 04          	add    $0x4,%rcx
  4438e1:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  4438e5:	8b 10                	mov    (%rax),%edx
  4438e7:	8b 75 cc             	mov    -0x34(%rbp),%esi
  4438ea:	81 e6 ff 00 00 00    	and    $0xff,%esi
  4438f0:	89 f6                	mov    %esi,%esi
  4438f2:	89 f0                	mov    %esi,%eax
  4438f4:	33 14 85 c0 36 45 00 	xor    0x4536c0(,%rax,4),%edx
  4438fb:	8b 75 c8             	mov    -0x38(%rbp),%esi
  4438fe:	c1 ee 08             	shr    $0x8,%esi
  443901:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443907:	89 f6                	mov    %esi,%esi
  443909:	89 f0                	mov    %esi,%eax
  44390b:	33 14 85 c0 3a 45 00 	xor    0x453ac0(,%rax,4),%edx
  443912:	8b 75 d4             	mov    -0x2c(%rbp),%esi
  443915:	c1 ee 10             	shr    $0x10,%esi
  443918:	81 e6 ff 00 00 00    	and    $0xff,%esi
  44391e:	89 f6                	mov    %esi,%esi
  443920:	89 f0                	mov    %esi,%eax
  443922:	33 14 85 c0 3e 45 00 	xor    0x453ec0(,%rax,4),%edx
  443929:	8b 75 d0             	mov    -0x30(%rbp),%esi
  44392c:	c1 ee 18             	shr    $0x18,%esi
  44392f:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443935:	89 f6                	mov    %esi,%esi
  443937:	89 f0                	mov    %esi,%eax
  443939:	33 14 85 c0 42 45 00 	xor    0x4542c0(,%rax,4),%edx
  443940:	89 55 bc             	mov    %edx,-0x44(%rbp)
  443943:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  443947:	48 89 c1             	mov    %rax,%rcx
  44394a:	48 83 c1 04          	add    $0x4,%rcx
  44394e:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  443952:	8b 10                	mov    (%rax),%edx
  443954:	8b 75 c8             	mov    -0x38(%rbp),%esi
  443957:	81 e6 ff 00 00 00    	and    $0xff,%esi
  44395d:	89 f6                	mov    %esi,%esi
  44395f:	89 f0                	mov    %esi,%eax
  443961:	33 14 85 c0 36 45 00 	xor    0x4536c0(,%rax,4),%edx
  443968:	8b 75 d4             	mov    -0x2c(%rbp),%esi
  44396b:	c1 ee 08             	shr    $0x8,%esi
  44396e:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443974:	89 f6                	mov    %esi,%esi
  443976:	89 f0                	mov    %esi,%eax
  443978:	33 14 85 c0 3a 45 00 	xor    0x453ac0(,%rax,4),%edx
  44397f:	8b 75 d0             	mov    -0x30(%rbp),%esi
  443982:	c1 ee 10             	shr    $0x10,%esi
  443985:	81 e6 ff 00 00 00    	and    $0xff,%esi
  44398b:	89 f6                	mov    %esi,%esi
  44398d:	89 f0                	mov    %esi,%eax
  44398f:	33 14 85 c0 3e 45 00 	xor    0x453ec0(,%rax,4),%edx
  443996:	8b 75 cc             	mov    -0x34(%rbp),%esi
  443999:	c1 ee 18             	shr    $0x18,%esi
  44399c:	81 e6 ff 00 00 00    	and    $0xff,%esi
  4439a2:	89 f6                	mov    %esi,%esi
  4439a4:	89 f0                	mov    %esi,%eax
  4439a6:	33 14 85 c0 42 45 00 	xor    0x4542c0(,%rax,4),%edx
  4439ad:	89 55 b8             	mov    %edx,-0x48(%rbp)
  4439b0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4439b4:	48 89 c1             	mov    %rax,%rcx
  4439b7:	48 83 c1 04          	add    $0x4,%rcx
  4439bb:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  4439bf:	8b 10                	mov    (%rax),%edx
  4439c1:	8b 75 c4             	mov    -0x3c(%rbp),%esi
  4439c4:	81 e6 ff 00 00 00    	and    $0xff,%esi
  4439ca:	89 f6                	mov    %esi,%esi
  4439cc:	89 f0                	mov    %esi,%eax
  4439ce:	33 14 85 c0 36 45 00 	xor    0x4536c0(,%rax,4),%edx
  4439d5:	8b 75 c0             	mov    -0x40(%rbp),%esi
  4439d8:	c1 ee 08             	shr    $0x8,%esi
  4439db:	81 e6 ff 00 00 00    	and    $0xff,%esi
  4439e1:	89 f6                	mov    %esi,%esi
  4439e3:	89 f0                	mov    %esi,%eax
  4439e5:	33 14 85 c0 3a 45 00 	xor    0x453ac0(,%rax,4),%edx
  4439ec:	8b 75 bc             	mov    -0x44(%rbp),%esi
  4439ef:	c1 ee 10             	shr    $0x10,%esi
  4439f2:	81 e6 ff 00 00 00    	and    $0xff,%esi
  4439f8:	89 f6                	mov    %esi,%esi
  4439fa:	89 f0                	mov    %esi,%eax
  4439fc:	33 14 85 c0 3e 45 00 	xor    0x453ec0(,%rax,4),%edx
  443a03:	8b 75 b8             	mov    -0x48(%rbp),%esi
  443a06:	c1 ee 18             	shr    $0x18,%esi
  443a09:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443a0f:	89 f6                	mov    %esi,%esi
  443a11:	89 f0                	mov    %esi,%eax
  443a13:	33 14 85 c0 42 45 00 	xor    0x4542c0(,%rax,4),%edx
  443a1a:	89 55 d4             	mov    %edx,-0x2c(%rbp)
  443a1d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  443a21:	48 89 c1             	mov    %rax,%rcx
  443a24:	48 83 c1 04          	add    $0x4,%rcx
  443a28:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  443a2c:	8b 10                	mov    (%rax),%edx
  443a2e:	8b 75 c0             	mov    -0x40(%rbp),%esi
  443a31:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443a37:	89 f6                	mov    %esi,%esi
  443a39:	89 f0                	mov    %esi,%eax
  443a3b:	33 14 85 c0 36 45 00 	xor    0x4536c0(,%rax,4),%edx
  443a42:	8b 75 bc             	mov    -0x44(%rbp),%esi
  443a45:	c1 ee 08             	shr    $0x8,%esi
  443a48:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443a4e:	89 f6                	mov    %esi,%esi
  443a50:	89 f0                	mov    %esi,%eax
  443a52:	33 14 85 c0 3a 45 00 	xor    0x453ac0(,%rax,4),%edx
  443a59:	8b 75 b8             	mov    -0x48(%rbp),%esi
  443a5c:	c1 ee 10             	shr    $0x10,%esi
  443a5f:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443a65:	89 f6                	mov    %esi,%esi
  443a67:	89 f0                	mov    %esi,%eax
  443a69:	33 14 85 c0 3e 45 00 	xor    0x453ec0(,%rax,4),%edx
  443a70:	8b 75 c4             	mov    -0x3c(%rbp),%esi
  443a73:	c1 ee 18             	shr    $0x18,%esi
  443a76:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443a7c:	89 f6                	mov    %esi,%esi
  443a7e:	89 f0                	mov    %esi,%eax
  443a80:	33 14 85 c0 42 45 00 	xor    0x4542c0(,%rax,4),%edx
  443a87:	89 55 d0             	mov    %edx,-0x30(%rbp)
  443a8a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  443a8e:	48 89 c1             	mov    %rax,%rcx
  443a91:	48 83 c1 04          	add    $0x4,%rcx
  443a95:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  443a99:	8b 10                	mov    (%rax),%edx
  443a9b:	8b 75 bc             	mov    -0x44(%rbp),%esi
  443a9e:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443aa4:	89 f6                	mov    %esi,%esi
  443aa6:	89 f0                	mov    %esi,%eax
  443aa8:	33 14 85 c0 36 45 00 	xor    0x4536c0(,%rax,4),%edx
  443aaf:	8b 75 b8             	mov    -0x48(%rbp),%esi
  443ab2:	c1 ee 08             	shr    $0x8,%esi
  443ab5:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443abb:	89 f6                	mov    %esi,%esi
  443abd:	89 f0                	mov    %esi,%eax
  443abf:	33 14 85 c0 3a 45 00 	xor    0x453ac0(,%rax,4),%edx
  443ac6:	8b 75 c4             	mov    -0x3c(%rbp),%esi
  443ac9:	c1 ee 10             	shr    $0x10,%esi
  443acc:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443ad2:	89 f6                	mov    %esi,%esi
  443ad4:	89 f0                	mov    %esi,%eax
  443ad6:	33 14 85 c0 3e 45 00 	xor    0x453ec0(,%rax,4),%edx
  443add:	8b 75 c0             	mov    -0x40(%rbp),%esi
  443ae0:	c1 ee 18             	shr    $0x18,%esi
  443ae3:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443ae9:	89 f6                	mov    %esi,%esi
  443aeb:	89 f0                	mov    %esi,%eax
  443aed:	33 14 85 c0 42 45 00 	xor    0x4542c0(,%rax,4),%edx
  443af4:	89 55 cc             	mov    %edx,-0x34(%rbp)
  443af7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  443afb:	48 89 c1             	mov    %rax,%rcx
  443afe:	48 83 c1 04          	add    $0x4,%rcx
  443b02:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  443b06:	8b 10                	mov    (%rax),%edx
  443b08:	8b 75 b8             	mov    -0x48(%rbp),%esi
  443b0b:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443b11:	89 f6                	mov    %esi,%esi
  443b13:	89 f0                	mov    %esi,%eax
  443b15:	33 14 85 c0 36 45 00 	xor    0x4536c0(,%rax,4),%edx
  443b1c:	8b 75 c4             	mov    -0x3c(%rbp),%esi
  443b1f:	c1 ee 08             	shr    $0x8,%esi
  443b22:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443b28:	89 f6                	mov    %esi,%esi
  443b2a:	89 f0                	mov    %esi,%eax
  443b2c:	33 14 85 c0 3a 45 00 	xor    0x453ac0(,%rax,4),%edx
  443b33:	8b 75 c0             	mov    -0x40(%rbp),%esi
  443b36:	c1 ee 10             	shr    $0x10,%esi
  443b39:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443b3f:	89 f6                	mov    %esi,%esi
  443b41:	89 f0                	mov    %esi,%eax
  443b43:	33 14 85 c0 3e 45 00 	xor    0x453ec0(,%rax,4),%edx
  443b4a:	8b 75 bc             	mov    -0x44(%rbp),%esi
  443b4d:	c1 ee 18             	shr    $0x18,%esi
  443b50:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443b56:	89 f6                	mov    %esi,%esi
  443b58:	89 f0                	mov    %esi,%eax
  443b5a:	33 14 85 c0 42 45 00 	xor    0x4542c0(,%rax,4),%edx
  443b61:	89 55 c8             	mov    %edx,-0x38(%rbp)
  443b64:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  443b67:	83 c0 ff             	add    $0xffffffff,%eax
  443b6a:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  443b6d:	e9 80 fc ff ff       	jmpq   4437f2 <mbedtls_internal_aes_encrypt+0x152>
  443b72:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  443b76:	48 89 c1             	mov    %rax,%rcx
  443b79:	48 83 c1 04          	add    $0x4,%rcx
  443b7d:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  443b81:	8b 10                	mov    (%rax),%edx
  443b83:	8b 75 d4             	mov    -0x2c(%rbp),%esi
  443b86:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443b8c:	89 f6                	mov    %esi,%esi
  443b8e:	89 f0                	mov    %esi,%eax
  443b90:	33 14 85 c0 36 45 00 	xor    0x4536c0(,%rax,4),%edx
  443b97:	8b 75 d0             	mov    -0x30(%rbp),%esi
  443b9a:	c1 ee 08             	shr    $0x8,%esi
  443b9d:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443ba3:	89 f6                	mov    %esi,%esi
  443ba5:	89 f0                	mov    %esi,%eax
  443ba7:	33 14 85 c0 3a 45 00 	xor    0x453ac0(,%rax,4),%edx
  443bae:	8b 75 cc             	mov    -0x34(%rbp),%esi
  443bb1:	c1 ee 10             	shr    $0x10,%esi
  443bb4:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443bba:	89 f6                	mov    %esi,%esi
  443bbc:	89 f0                	mov    %esi,%eax
  443bbe:	33 14 85 c0 3e 45 00 	xor    0x453ec0(,%rax,4),%edx
  443bc5:	8b 75 c8             	mov    -0x38(%rbp),%esi
  443bc8:	c1 ee 18             	shr    $0x18,%esi
  443bcb:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443bd1:	89 f6                	mov    %esi,%esi
  443bd3:	89 f0                	mov    %esi,%eax
  443bd5:	33 14 85 c0 42 45 00 	xor    0x4542c0(,%rax,4),%edx
  443bdc:	89 55 c4             	mov    %edx,-0x3c(%rbp)
  443bdf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  443be3:	48 89 c1             	mov    %rax,%rcx
  443be6:	48 83 c1 04          	add    $0x4,%rcx
  443bea:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  443bee:	8b 10                	mov    (%rax),%edx
  443bf0:	8b 75 d0             	mov    -0x30(%rbp),%esi
  443bf3:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443bf9:	89 f6                	mov    %esi,%esi
  443bfb:	89 f0                	mov    %esi,%eax
  443bfd:	33 14 85 c0 36 45 00 	xor    0x4536c0(,%rax,4),%edx
  443c04:	8b 75 cc             	mov    -0x34(%rbp),%esi
  443c07:	c1 ee 08             	shr    $0x8,%esi
  443c0a:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443c10:	89 f6                	mov    %esi,%esi
  443c12:	89 f0                	mov    %esi,%eax
  443c14:	33 14 85 c0 3a 45 00 	xor    0x453ac0(,%rax,4),%edx
  443c1b:	8b 75 c8             	mov    -0x38(%rbp),%esi
  443c1e:	c1 ee 10             	shr    $0x10,%esi
  443c21:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443c27:	89 f6                	mov    %esi,%esi
  443c29:	89 f0                	mov    %esi,%eax
  443c2b:	33 14 85 c0 3e 45 00 	xor    0x453ec0(,%rax,4),%edx
  443c32:	8b 75 d4             	mov    -0x2c(%rbp),%esi
  443c35:	c1 ee 18             	shr    $0x18,%esi
  443c38:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443c3e:	89 f6                	mov    %esi,%esi
  443c40:	89 f0                	mov    %esi,%eax
  443c42:	33 14 85 c0 42 45 00 	xor    0x4542c0(,%rax,4),%edx
  443c49:	89 55 c0             	mov    %edx,-0x40(%rbp)
  443c4c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  443c50:	48 89 c1             	mov    %rax,%rcx
  443c53:	48 83 c1 04          	add    $0x4,%rcx
  443c57:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  443c5b:	8b 10                	mov    (%rax),%edx
  443c5d:	8b 75 cc             	mov    -0x34(%rbp),%esi
  443c60:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443c66:	89 f6                	mov    %esi,%esi
  443c68:	89 f0                	mov    %esi,%eax
  443c6a:	33 14 85 c0 36 45 00 	xor    0x4536c0(,%rax,4),%edx
  443c71:	8b 75 c8             	mov    -0x38(%rbp),%esi
  443c74:	c1 ee 08             	shr    $0x8,%esi
  443c77:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443c7d:	89 f6                	mov    %esi,%esi
  443c7f:	89 f0                	mov    %esi,%eax
  443c81:	33 14 85 c0 3a 45 00 	xor    0x453ac0(,%rax,4),%edx
  443c88:	8b 75 d4             	mov    -0x2c(%rbp),%esi
  443c8b:	c1 ee 10             	shr    $0x10,%esi
  443c8e:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443c94:	89 f6                	mov    %esi,%esi
  443c96:	89 f0                	mov    %esi,%eax
  443c98:	33 14 85 c0 3e 45 00 	xor    0x453ec0(,%rax,4),%edx
  443c9f:	8b 75 d0             	mov    -0x30(%rbp),%esi
  443ca2:	c1 ee 18             	shr    $0x18,%esi
  443ca5:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443cab:	89 f6                	mov    %esi,%esi
  443cad:	89 f0                	mov    %esi,%eax
  443caf:	33 14 85 c0 42 45 00 	xor    0x4542c0(,%rax,4),%edx
  443cb6:	89 55 bc             	mov    %edx,-0x44(%rbp)
  443cb9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  443cbd:	48 89 c1             	mov    %rax,%rcx
  443cc0:	48 83 c1 04          	add    $0x4,%rcx
  443cc4:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  443cc8:	8b 10                	mov    (%rax),%edx
  443cca:	8b 75 c8             	mov    -0x38(%rbp),%esi
  443ccd:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443cd3:	89 f6                	mov    %esi,%esi
  443cd5:	89 f0                	mov    %esi,%eax
  443cd7:	33 14 85 c0 36 45 00 	xor    0x4536c0(,%rax,4),%edx
  443cde:	8b 75 d4             	mov    -0x2c(%rbp),%esi
  443ce1:	c1 ee 08             	shr    $0x8,%esi
  443ce4:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443cea:	89 f6                	mov    %esi,%esi
  443cec:	89 f0                	mov    %esi,%eax
  443cee:	33 14 85 c0 3a 45 00 	xor    0x453ac0(,%rax,4),%edx
  443cf5:	8b 75 d0             	mov    -0x30(%rbp),%esi
  443cf8:	c1 ee 10             	shr    $0x10,%esi
  443cfb:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443d01:	89 f6                	mov    %esi,%esi
  443d03:	89 f0                	mov    %esi,%eax
  443d05:	33 14 85 c0 3e 45 00 	xor    0x453ec0(,%rax,4),%edx
  443d0c:	8b 75 cc             	mov    -0x34(%rbp),%esi
  443d0f:	c1 ee 18             	shr    $0x18,%esi
  443d12:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443d18:	89 f6                	mov    %esi,%esi
  443d1a:	89 f0                	mov    %esi,%eax
  443d1c:	33 14 85 c0 42 45 00 	xor    0x4542c0(,%rax,4),%edx
  443d23:	89 55 b8             	mov    %edx,-0x48(%rbp)
  443d26:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  443d2a:	48 89 c1             	mov    %rax,%rcx
  443d2d:	48 83 c1 04          	add    $0x4,%rcx
  443d31:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  443d35:	8b 10                	mov    (%rax),%edx
  443d37:	8b 75 c4             	mov    -0x3c(%rbp),%esi
  443d3a:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443d40:	89 f6                	mov    %esi,%esi
  443d42:	89 f0                	mov    %esi,%eax
  443d44:	0f b6 34 05 c0 34 45 	movzbl 0x4534c0(,%rax,1),%esi
  443d4b:	00 
  443d4c:	31 f2                	xor    %esi,%edx
  443d4e:	8b 75 c0             	mov    -0x40(%rbp),%esi
  443d51:	c1 ee 08             	shr    $0x8,%esi
  443d54:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443d5a:	89 f6                	mov    %esi,%esi
  443d5c:	89 f0                	mov    %esi,%eax
  443d5e:	0f b6 34 05 c0 34 45 	movzbl 0x4534c0(,%rax,1),%esi
  443d65:	00 
  443d66:	c1 e6 08             	shl    $0x8,%esi
  443d69:	31 f2                	xor    %esi,%edx
  443d6b:	8b 75 bc             	mov    -0x44(%rbp),%esi
  443d6e:	c1 ee 10             	shr    $0x10,%esi
  443d71:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443d77:	89 f6                	mov    %esi,%esi
  443d79:	89 f0                	mov    %esi,%eax
  443d7b:	0f b6 34 05 c0 34 45 	movzbl 0x4534c0(,%rax,1),%esi
  443d82:	00 
  443d83:	c1 e6 10             	shl    $0x10,%esi
  443d86:	31 f2                	xor    %esi,%edx
  443d88:	8b 75 b8             	mov    -0x48(%rbp),%esi
  443d8b:	c1 ee 18             	shr    $0x18,%esi
  443d8e:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443d94:	89 f6                	mov    %esi,%esi
  443d96:	89 f0                	mov    %esi,%eax
  443d98:	0f b6 34 05 c0 34 45 	movzbl 0x4534c0(,%rax,1),%esi
  443d9f:	00 
  443da0:	c1 e6 18             	shl    $0x18,%esi
  443da3:	31 f2                	xor    %esi,%edx
  443da5:	89 55 d4             	mov    %edx,-0x2c(%rbp)
  443da8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  443dac:	48 89 c1             	mov    %rax,%rcx
  443daf:	48 83 c1 04          	add    $0x4,%rcx
  443db3:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  443db7:	8b 10                	mov    (%rax),%edx
  443db9:	8b 75 c0             	mov    -0x40(%rbp),%esi
  443dbc:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443dc2:	89 f6                	mov    %esi,%esi
  443dc4:	89 f0                	mov    %esi,%eax
  443dc6:	0f b6 34 05 c0 34 45 	movzbl 0x4534c0(,%rax,1),%esi
  443dcd:	00 
  443dce:	31 f2                	xor    %esi,%edx
  443dd0:	8b 75 bc             	mov    -0x44(%rbp),%esi
  443dd3:	c1 ee 08             	shr    $0x8,%esi
  443dd6:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443ddc:	89 f6                	mov    %esi,%esi
  443dde:	89 f0                	mov    %esi,%eax
  443de0:	0f b6 34 05 c0 34 45 	movzbl 0x4534c0(,%rax,1),%esi
  443de7:	00 
  443de8:	c1 e6 08             	shl    $0x8,%esi
  443deb:	31 f2                	xor    %esi,%edx
  443ded:	8b 75 b8             	mov    -0x48(%rbp),%esi
  443df0:	c1 ee 10             	shr    $0x10,%esi
  443df3:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443df9:	89 f6                	mov    %esi,%esi
  443dfb:	89 f0                	mov    %esi,%eax
  443dfd:	0f b6 34 05 c0 34 45 	movzbl 0x4534c0(,%rax,1),%esi
  443e04:	00 
  443e05:	c1 e6 10             	shl    $0x10,%esi
  443e08:	31 f2                	xor    %esi,%edx
  443e0a:	8b 75 c4             	mov    -0x3c(%rbp),%esi
  443e0d:	c1 ee 18             	shr    $0x18,%esi
  443e10:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443e16:	89 f6                	mov    %esi,%esi
  443e18:	89 f0                	mov    %esi,%eax
  443e1a:	0f b6 34 05 c0 34 45 	movzbl 0x4534c0(,%rax,1),%esi
  443e21:	00 
  443e22:	c1 e6 18             	shl    $0x18,%esi
  443e25:	31 f2                	xor    %esi,%edx
  443e27:	89 55 d0             	mov    %edx,-0x30(%rbp)
  443e2a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  443e2e:	48 89 c1             	mov    %rax,%rcx
  443e31:	48 83 c1 04          	add    $0x4,%rcx
  443e35:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  443e39:	8b 10                	mov    (%rax),%edx
  443e3b:	8b 75 bc             	mov    -0x44(%rbp),%esi
  443e3e:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443e44:	89 f6                	mov    %esi,%esi
  443e46:	89 f0                	mov    %esi,%eax
  443e48:	0f b6 34 05 c0 34 45 	movzbl 0x4534c0(,%rax,1),%esi
  443e4f:	00 
  443e50:	31 f2                	xor    %esi,%edx
  443e52:	8b 75 b8             	mov    -0x48(%rbp),%esi
  443e55:	c1 ee 08             	shr    $0x8,%esi
  443e58:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443e5e:	89 f6                	mov    %esi,%esi
  443e60:	89 f0                	mov    %esi,%eax
  443e62:	0f b6 34 05 c0 34 45 	movzbl 0x4534c0(,%rax,1),%esi
  443e69:	00 
  443e6a:	c1 e6 08             	shl    $0x8,%esi
  443e6d:	31 f2                	xor    %esi,%edx
  443e6f:	8b 75 c4             	mov    -0x3c(%rbp),%esi
  443e72:	c1 ee 10             	shr    $0x10,%esi
  443e75:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443e7b:	89 f6                	mov    %esi,%esi
  443e7d:	89 f0                	mov    %esi,%eax
  443e7f:	0f b6 34 05 c0 34 45 	movzbl 0x4534c0(,%rax,1),%esi
  443e86:	00 
  443e87:	c1 e6 10             	shl    $0x10,%esi
  443e8a:	31 f2                	xor    %esi,%edx
  443e8c:	8b 75 c0             	mov    -0x40(%rbp),%esi
  443e8f:	c1 ee 18             	shr    $0x18,%esi
  443e92:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443e98:	89 f6                	mov    %esi,%esi
  443e9a:	89 f0                	mov    %esi,%eax
  443e9c:	0f b6 34 05 c0 34 45 	movzbl 0x4534c0(,%rax,1),%esi
  443ea3:	00 
  443ea4:	c1 e6 18             	shl    $0x18,%esi
  443ea7:	31 f2                	xor    %esi,%edx
  443ea9:	89 55 cc             	mov    %edx,-0x34(%rbp)
  443eac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  443eb0:	48 89 c1             	mov    %rax,%rcx
  443eb3:	48 83 c1 04          	add    $0x4,%rcx
  443eb7:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  443ebb:	8b 10                	mov    (%rax),%edx
  443ebd:	8b 75 b8             	mov    -0x48(%rbp),%esi
  443ec0:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443ec6:	89 f6                	mov    %esi,%esi
  443ec8:	89 f0                	mov    %esi,%eax
  443eca:	0f b6 34 05 c0 34 45 	movzbl 0x4534c0(,%rax,1),%esi
  443ed1:	00 
  443ed2:	31 f2                	xor    %esi,%edx
  443ed4:	8b 75 c4             	mov    -0x3c(%rbp),%esi
  443ed7:	c1 ee 08             	shr    $0x8,%esi
  443eda:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443ee0:	89 f6                	mov    %esi,%esi
  443ee2:	89 f0                	mov    %esi,%eax
  443ee4:	0f b6 34 05 c0 34 45 	movzbl 0x4534c0(,%rax,1),%esi
  443eeb:	00 
  443eec:	c1 e6 08             	shl    $0x8,%esi
  443eef:	31 f2                	xor    %esi,%edx
  443ef1:	8b 75 c0             	mov    -0x40(%rbp),%esi
  443ef4:	c1 ee 10             	shr    $0x10,%esi
  443ef7:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443efd:	89 f6                	mov    %esi,%esi
  443eff:	89 f0                	mov    %esi,%eax
  443f01:	0f b6 34 05 c0 34 45 	movzbl 0x4534c0(,%rax,1),%esi
  443f08:	00 
  443f09:	c1 e6 10             	shl    $0x10,%esi
  443f0c:	31 f2                	xor    %esi,%edx
  443f0e:	8b 75 bc             	mov    -0x44(%rbp),%esi
  443f11:	c1 ee 18             	shr    $0x18,%esi
  443f14:	81 e6 ff 00 00 00    	and    $0xff,%esi
  443f1a:	89 f6                	mov    %esi,%esi
  443f1c:	89 f0                	mov    %esi,%eax
  443f1e:	0f b6 34 05 c0 34 45 	movzbl 0x4534c0(,%rax,1),%esi
  443f25:	00 
  443f26:	c1 e6 18             	shl    $0x18,%esi
  443f29:	31 f2                	xor    %esi,%edx
  443f2b:	89 55 c8             	mov    %edx,-0x38(%rbp)
  443f2e:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  443f31:	81 e2 ff 00 00 00    	and    $0xff,%edx
  443f37:	40 88 d7             	mov    %dl,%dil
  443f3a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  443f3e:	40 88 38             	mov    %dil,(%rax)
  443f41:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  443f44:	c1 ea 08             	shr    $0x8,%edx
  443f47:	81 e2 ff 00 00 00    	and    $0xff,%edx
  443f4d:	40 88 d7             	mov    %dl,%dil
  443f50:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  443f54:	40 88 78 01          	mov    %dil,0x1(%rax)
  443f58:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  443f5b:	c1 ea 10             	shr    $0x10,%edx
  443f5e:	81 e2 ff 00 00 00    	and    $0xff,%edx
  443f64:	40 88 d7             	mov    %dl,%dil
  443f67:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  443f6b:	40 88 78 02          	mov    %dil,0x2(%rax)
  443f6f:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  443f72:	c1 ea 18             	shr    $0x18,%edx
  443f75:	81 e2 ff 00 00 00    	and    $0xff,%edx
  443f7b:	40 88 d7             	mov    %dl,%dil
  443f7e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  443f82:	40 88 78 03          	mov    %dil,0x3(%rax)
  443f86:	8b 55 d0             	mov    -0x30(%rbp),%edx
  443f89:	81 e2 ff 00 00 00    	and    $0xff,%edx
  443f8f:	40 88 d7             	mov    %dl,%dil
  443f92:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  443f96:	40 88 78 04          	mov    %dil,0x4(%rax)
  443f9a:	8b 55 d0             	mov    -0x30(%rbp),%edx
  443f9d:	c1 ea 08             	shr    $0x8,%edx
  443fa0:	81 e2 ff 00 00 00    	and    $0xff,%edx
  443fa6:	40 88 d7             	mov    %dl,%dil
  443fa9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  443fad:	40 88 78 05          	mov    %dil,0x5(%rax)
  443fb1:	8b 55 d0             	mov    -0x30(%rbp),%edx
  443fb4:	c1 ea 10             	shr    $0x10,%edx
  443fb7:	81 e2 ff 00 00 00    	and    $0xff,%edx
  443fbd:	40 88 d7             	mov    %dl,%dil
  443fc0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  443fc4:	40 88 78 06          	mov    %dil,0x6(%rax)
  443fc8:	8b 55 d0             	mov    -0x30(%rbp),%edx
  443fcb:	c1 ea 18             	shr    $0x18,%edx
  443fce:	81 e2 ff 00 00 00    	and    $0xff,%edx
  443fd4:	40 88 d7             	mov    %dl,%dil
  443fd7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  443fdb:	40 88 78 07          	mov    %dil,0x7(%rax)
  443fdf:	8b 55 cc             	mov    -0x34(%rbp),%edx
  443fe2:	81 e2 ff 00 00 00    	and    $0xff,%edx
  443fe8:	40 88 d7             	mov    %dl,%dil
  443feb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  443fef:	40 88 78 08          	mov    %dil,0x8(%rax)
  443ff3:	8b 55 cc             	mov    -0x34(%rbp),%edx
  443ff6:	c1 ea 08             	shr    $0x8,%edx
  443ff9:	81 e2 ff 00 00 00    	and    $0xff,%edx
  443fff:	40 88 d7             	mov    %dl,%dil
  444002:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  444006:	40 88 78 09          	mov    %dil,0x9(%rax)
  44400a:	8b 55 cc             	mov    -0x34(%rbp),%edx
  44400d:	c1 ea 10             	shr    $0x10,%edx
  444010:	81 e2 ff 00 00 00    	and    $0xff,%edx
  444016:	40 88 d7             	mov    %dl,%dil
  444019:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  44401d:	40 88 78 0a          	mov    %dil,0xa(%rax)
  444021:	8b 55 cc             	mov    -0x34(%rbp),%edx
  444024:	c1 ea 18             	shr    $0x18,%edx
  444027:	81 e2 ff 00 00 00    	and    $0xff,%edx
  44402d:	40 88 d7             	mov    %dl,%dil
  444030:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  444034:	40 88 78 0b          	mov    %dil,0xb(%rax)
  444038:	8b 55 c8             	mov    -0x38(%rbp),%edx
  44403b:	81 e2 ff 00 00 00    	and    $0xff,%edx
  444041:	40 88 d7             	mov    %dl,%dil
  444044:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  444048:	40 88 78 0c          	mov    %dil,0xc(%rax)
  44404c:	8b 55 c8             	mov    -0x38(%rbp),%edx
  44404f:	c1 ea 08             	shr    $0x8,%edx
  444052:	81 e2 ff 00 00 00    	and    $0xff,%edx
  444058:	40 88 d7             	mov    %dl,%dil
  44405b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  44405f:	40 88 78 0d          	mov    %dil,0xd(%rax)
  444063:	8b 55 c8             	mov    -0x38(%rbp),%edx
  444066:	c1 ea 10             	shr    $0x10,%edx
  444069:	81 e2 ff 00 00 00    	and    $0xff,%edx
  44406f:	40 88 d7             	mov    %dl,%dil
  444072:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  444076:	40 88 78 0e          	mov    %dil,0xe(%rax)
  44407a:	8b 55 c8             	mov    -0x38(%rbp),%edx
  44407d:	c1 ea 18             	shr    $0x18,%edx
  444080:	81 e2 ff 00 00 00    	and    $0xff,%edx
  444086:	40 88 d7             	mov    %dl,%dil
  444089:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  44408d:	40 88 78 0f          	mov    %dil,0xf(%rax)
  444091:	e8 c0 18 00 00       	callq  445956 <writeback_cache>
  444096:	31 c0                	xor    %eax,%eax
  444098:	48 83 c4 50          	add    $0x50,%rsp
  44409c:	5d                   	pop    %rbp
  44409d:	c3                   	retq   
  44409e:	66 90                	xchg   %ax,%ax

00000000004440a0 <mbedtls_internal_aes_decrypt>:
  4440a0:	55                   	push   %rbp
  4440a1:	48 89 e5             	mov    %rsp,%rbp
  4440a4:	48 83 ec 50          	sub    $0x50,%rsp
  4440a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4440ac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  4440b0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  4440b4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4440b8:	48 8b 52 08          	mov    0x8(%rdx),%rdx
  4440bc:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4440c0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4440c4:	0f b6 02             	movzbl (%rdx),%eax
  4440c7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4440cb:	0f b6 4a 01          	movzbl 0x1(%rdx),%ecx
  4440cf:	c1 e1 08             	shl    $0x8,%ecx
  4440d2:	09 c8                	or     %ecx,%eax
  4440d4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4440d8:	0f b6 4a 02          	movzbl 0x2(%rdx),%ecx
  4440dc:	c1 e1 10             	shl    $0x10,%ecx
  4440df:	09 c8                	or     %ecx,%eax
  4440e1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4440e5:	0f b6 4a 03          	movzbl 0x3(%rdx),%ecx
  4440e9:	c1 e1 18             	shl    $0x18,%ecx
  4440ec:	09 c8                	or     %ecx,%eax
  4440ee:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  4440f1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4440f5:	48 89 d6             	mov    %rdx,%rsi
  4440f8:	48 83 c6 04          	add    $0x4,%rsi
  4440fc:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
  444100:	8b 02                	mov    (%rdx),%eax
  444102:	33 45 d4             	xor    -0x2c(%rbp),%eax
  444105:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  444108:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  44410c:	0f b6 42 04          	movzbl 0x4(%rdx),%eax
  444110:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  444114:	0f b6 4a 05          	movzbl 0x5(%rdx),%ecx
  444118:	c1 e1 08             	shl    $0x8,%ecx
  44411b:	09 c8                	or     %ecx,%eax
  44411d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  444121:	0f b6 4a 06          	movzbl 0x6(%rdx),%ecx
  444125:	c1 e1 10             	shl    $0x10,%ecx
  444128:	09 c8                	or     %ecx,%eax
  44412a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  44412e:	0f b6 4a 07          	movzbl 0x7(%rdx),%ecx
  444132:	c1 e1 18             	shl    $0x18,%ecx
  444135:	09 c8                	or     %ecx,%eax
  444137:	89 45 d0             	mov    %eax,-0x30(%rbp)
  44413a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  44413e:	48 89 d6             	mov    %rdx,%rsi
  444141:	48 83 c6 04          	add    $0x4,%rsi
  444145:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
  444149:	8b 02                	mov    (%rdx),%eax
  44414b:	33 45 d0             	xor    -0x30(%rbp),%eax
  44414e:	89 45 d0             	mov    %eax,-0x30(%rbp)
  444151:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  444155:	0f b6 42 08          	movzbl 0x8(%rdx),%eax
  444159:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  44415d:	0f b6 4a 09          	movzbl 0x9(%rdx),%ecx
  444161:	c1 e1 08             	shl    $0x8,%ecx
  444164:	09 c8                	or     %ecx,%eax
  444166:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  44416a:	0f b6 4a 0a          	movzbl 0xa(%rdx),%ecx
  44416e:	c1 e1 10             	shl    $0x10,%ecx
  444171:	09 c8                	or     %ecx,%eax
  444173:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  444177:	0f b6 4a 0b          	movzbl 0xb(%rdx),%ecx
  44417b:	c1 e1 18             	shl    $0x18,%ecx
  44417e:	09 c8                	or     %ecx,%eax
  444180:	89 45 cc             	mov    %eax,-0x34(%rbp)
  444183:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  444187:	48 89 d6             	mov    %rdx,%rsi
  44418a:	48 83 c6 04          	add    $0x4,%rsi
  44418e:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
  444192:	8b 02                	mov    (%rdx),%eax
  444194:	33 45 cc             	xor    -0x34(%rbp),%eax
  444197:	89 45 cc             	mov    %eax,-0x34(%rbp)
  44419a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  44419e:	0f b6 42 0c          	movzbl 0xc(%rdx),%eax
  4441a2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4441a6:	0f b6 4a 0d          	movzbl 0xd(%rdx),%ecx
  4441aa:	c1 e1 08             	shl    $0x8,%ecx
  4441ad:	09 c8                	or     %ecx,%eax
  4441af:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4441b3:	0f b6 4a 0e          	movzbl 0xe(%rdx),%ecx
  4441b7:	c1 e1 10             	shl    $0x10,%ecx
  4441ba:	09 c8                	or     %ecx,%eax
  4441bc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4441c0:	0f b6 4a 0f          	movzbl 0xf(%rdx),%ecx
  4441c4:	c1 e1 18             	shl    $0x18,%ecx
  4441c7:	09 c8                	or     %ecx,%eax
  4441c9:	89 45 c8             	mov    %eax,-0x38(%rbp)
  4441cc:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4441d0:	48 89 d6             	mov    %rdx,%rsi
  4441d3:	48 83 c6 04          	add    $0x4,%rsi
  4441d7:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
  4441db:	8b 02                	mov    (%rdx),%eax
  4441dd:	33 45 c8             	xor    -0x38(%rbp),%eax
  4441e0:	89 45 c8             	mov    %eax,-0x38(%rbp)
  4441e3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4441e7:	8b 02                	mov    (%rdx),%eax
  4441e9:	c1 f8 01             	sar    $0x1,%eax
  4441ec:	83 e8 01             	sub    $0x1,%eax
  4441ef:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  4441f2:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  4441f6:	0f 8e 76 03 00 00    	jle    444572 <mbedtls_internal_aes_decrypt+0x4d2>
  4441fc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  444200:	48 89 c1             	mov    %rax,%rcx
  444203:	48 83 c1 04          	add    $0x4,%rcx
  444207:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  44420b:	8b 10                	mov    (%rax),%edx
  44420d:	8b 75 d4             	mov    -0x2c(%rbp),%esi
  444210:	81 e6 ff 00 00 00    	and    $0xff,%esi
  444216:	89 f6                	mov    %esi,%esi
  444218:	89 f0                	mov    %esi,%eax
  44421a:	33 14 85 c0 46 45 00 	xor    0x4546c0(,%rax,4),%edx
  444221:	8b 75 c8             	mov    -0x38(%rbp),%esi
  444224:	c1 ee 08             	shr    $0x8,%esi
  444227:	81 e6 ff 00 00 00    	and    $0xff,%esi
  44422d:	89 f6                	mov    %esi,%esi
  44422f:	89 f0                	mov    %esi,%eax
  444231:	33 14 85 c0 4a 45 00 	xor    0x454ac0(,%rax,4),%edx
  444238:	8b 75 cc             	mov    -0x34(%rbp),%esi
  44423b:	c1 ee 10             	shr    $0x10,%esi
  44423e:	81 e6 ff 00 00 00    	and    $0xff,%esi
  444244:	89 f6                	mov    %esi,%esi
  444246:	89 f0                	mov    %esi,%eax
  444248:	33 14 85 c0 4e 45 00 	xor    0x454ec0(,%rax,4),%edx
  44424f:	8b 75 d0             	mov    -0x30(%rbp),%esi
  444252:	c1 ee 18             	shr    $0x18,%esi
  444255:	81 e6 ff 00 00 00    	and    $0xff,%esi
  44425b:	89 f6                	mov    %esi,%esi
  44425d:	89 f0                	mov    %esi,%eax
  44425f:	33 14 85 c0 52 45 00 	xor    0x4552c0(,%rax,4),%edx
  444266:	89 55 c4             	mov    %edx,-0x3c(%rbp)
  444269:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  44426d:	48 89 c1             	mov    %rax,%rcx
  444270:	48 83 c1 04          	add    $0x4,%rcx
  444274:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  444278:	8b 10                	mov    (%rax),%edx
  44427a:	8b 75 d0             	mov    -0x30(%rbp),%esi
  44427d:	81 e6 ff 00 00 00    	and    $0xff,%esi
  444283:	89 f6                	mov    %esi,%esi
  444285:	89 f0                	mov    %esi,%eax
  444287:	33 14 85 c0 46 45 00 	xor    0x4546c0(,%rax,4),%edx
  44428e:	8b 75 d4             	mov    -0x2c(%rbp),%esi
  444291:	c1 ee 08             	shr    $0x8,%esi
  444294:	81 e6 ff 00 00 00    	and    $0xff,%esi
  44429a:	89 f6                	mov    %esi,%esi
  44429c:	89 f0                	mov    %esi,%eax
  44429e:	33 14 85 c0 4a 45 00 	xor    0x454ac0(,%rax,4),%edx
  4442a5:	8b 75 c8             	mov    -0x38(%rbp),%esi
  4442a8:	c1 ee 10             	shr    $0x10,%esi
  4442ab:	81 e6 ff 00 00 00    	and    $0xff,%esi
  4442b1:	89 f6                	mov    %esi,%esi
  4442b3:	89 f0                	mov    %esi,%eax
  4442b5:	33 14 85 c0 4e 45 00 	xor    0x454ec0(,%rax,4),%edx
  4442bc:	8b 75 cc             	mov    -0x34(%rbp),%esi
  4442bf:	c1 ee 18             	shr    $0x18,%esi
  4442c2:	81 e6 ff 00 00 00    	and    $0xff,%esi
  4442c8:	89 f6                	mov    %esi,%esi
  4442ca:	89 f0                	mov    %esi,%eax
  4442cc:	33 14 85 c0 52 45 00 	xor    0x4552c0(,%rax,4),%edx
  4442d3:	89 55 c0             	mov    %edx,-0x40(%rbp)
  4442d6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4442da:	48 89 c1             	mov    %rax,%rcx
  4442dd:	48 83 c1 04          	add    $0x4,%rcx
  4442e1:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  4442e5:	8b 10                	mov    (%rax),%edx
  4442e7:	8b 75 cc             	mov    -0x34(%rbp),%esi
  4442ea:	81 e6 ff 00 00 00    	and    $0xff,%esi
  4442f0:	89 f6                	mov    %esi,%esi
  4442f2:	89 f0                	mov    %esi,%eax
  4442f4:	33 14 85 c0 46 45 00 	xor    0x4546c0(,%rax,4),%edx
  4442fb:	8b 75 d0             	mov    -0x30(%rbp),%esi
  4442fe:	c1 ee 08             	shr    $0x8,%esi
  444301:	81 e6 ff 00 00 00    	and    $0xff,%esi
  444307:	89 f6                	mov    %esi,%esi
  444309:	89 f0                	mov    %esi,%eax
  44430b:	33 14 85 c0 4a 45 00 	xor    0x454ac0(,%rax,4),%edx
  444312:	8b 75 d4             	mov    -0x2c(%rbp),%esi
  444315:	c1 ee 10             	shr    $0x10,%esi
  444318:	81 e6 ff 00 00 00    	and    $0xff,%esi
  44431e:	89 f6                	mov    %esi,%esi
  444320:	89 f0                	mov    %esi,%eax
  444322:	33 14 85 c0 4e 45 00 	xor    0x454ec0(,%rax,4),%edx
  444329:	8b 75 c8             	mov    -0x38(%rbp),%esi
  44432c:	c1 ee 18             	shr    $0x18,%esi
  44432f:	81 e6 ff 00 00 00    	and    $0xff,%esi
  444335:	89 f6                	mov    %esi,%esi
  444337:	89 f0                	mov    %esi,%eax
  444339:	33 14 85 c0 52 45 00 	xor    0x4552c0(,%rax,4),%edx
  444340:	89 55 bc             	mov    %edx,-0x44(%rbp)
  444343:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  444347:	48 89 c1             	mov    %rax,%rcx
  44434a:	48 83 c1 04          	add    $0x4,%rcx
  44434e:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  444352:	8b 10                	mov    (%rax),%edx
  444354:	8b 75 c8             	mov    -0x38(%rbp),%esi
  444357:	81 e6 ff 00 00 00    	and    $0xff,%esi
  44435d:	89 f6                	mov    %esi,%esi
  44435f:	89 f0                	mov    %esi,%eax
  444361:	33 14 85 c0 46 45 00 	xor    0x4546c0(,%rax,4),%edx
  444368:	8b 75 cc             	mov    -0x34(%rbp),%esi
  44436b:	c1 ee 08             	shr    $0x8,%esi
  44436e:	81 e6 ff 00 00 00    	and    $0xff,%esi
  444374:	89 f6                	mov    %esi,%esi
  444376:	89 f0                	mov    %esi,%eax
  444378:	33 14 85 c0 4a 45 00 	xor    0x454ac0(,%rax,4),%edx
  44437f:	8b 75 d0             	mov    -0x30(%rbp),%esi
  444382:	c1 ee 10             	shr    $0x10,%esi
  444385:	81 e6 ff 00 00 00    	and    $0xff,%esi
  44438b:	89 f6                	mov    %esi,%esi
  44438d:	89 f0                	mov    %esi,%eax
  44438f:	33 14 85 c0 4e 45 00 	xor    0x454ec0(,%rax,4),%edx
  444396:	8b 75 d4             	mov    -0x2c(%rbp),%esi
  444399:	c1 ee 18             	shr    $0x18,%esi
  44439c:	81 e6 ff 00 00 00    	and    $0xff,%esi
  4443a2:	89 f6                	mov    %esi,%esi
  4443a4:	89 f0                	mov    %esi,%eax
  4443a6:	33 14 85 c0 52 45 00 	xor    0x4552c0(,%rax,4),%edx
  4443ad:	89 55 b8             	mov    %edx,-0x48(%rbp)
  4443b0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4443b4:	48 89 c1             	mov    %rax,%rcx
  4443b7:	48 83 c1 04          	add    $0x4,%rcx
  4443bb:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  4443bf:	8b 10                	mov    (%rax),%edx
  4443c1:	8b 75 c4             	mov    -0x3c(%rbp),%esi
  4443c4:	81 e6 ff 00 00 00    	and    $0xff,%esi
  4443ca:	89 f6                	mov    %esi,%esi
  4443cc:	89 f0                	mov    %esi,%eax
  4443ce:	33 14 85 c0 46 45 00 	xor    0x4546c0(,%rax,4),%edx
  4443d5:	8b 75 b8             	mov    -0x48(%rbp),%esi
  4443d8:	c1 ee 08             	shr    $0x8,%esi
  4443db:	81 e6 ff 00 00 00    	and    $0xff,%esi
  4443e1:	89 f6                	mov    %esi,%esi
  4443e3:	89 f0                	mov    %esi,%eax
  4443e5:	33 14 85 c0 4a 45 00 	xor    0x454ac0(,%rax,4),%edx
  4443ec:	8b 75 bc             	mov    -0x44(%rbp),%esi
  4443ef:	c1 ee 10             	shr    $0x10,%esi
  4443f2:	81 e6 ff 00 00 00    	and    $0xff,%esi
  4443f8:	89 f6                	mov    %esi,%esi
  4443fa:	89 f0                	mov    %esi,%eax
  4443fc:	33 14 85 c0 4e 45 00 	xor    0x454ec0(,%rax,4),%edx
  444403:	8b 75 c0             	mov    -0x40(%rbp),%esi
  444406:	c1 ee 18             	shr    $0x18,%esi
  444409:	81 e6 ff 00 00 00    	and    $0xff,%esi
  44440f:	89 f6                	mov    %esi,%esi
  444411:	89 f0                	mov    %esi,%eax
  444413:	33 14 85 c0 52 45 00 	xor    0x4552c0(,%rax,4),%edx
  44441a:	89 55 d4             	mov    %edx,-0x2c(%rbp)
  44441d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  444421:	48 89 c1             	mov    %rax,%rcx
  444424:	48 83 c1 04          	add    $0x4,%rcx
  444428:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  44442c:	8b 10                	mov    (%rax),%edx
  44442e:	8b 75 c0             	mov    -0x40(%rbp),%esi
  444431:	81 e6 ff 00 00 00    	and    $0xff,%esi
  444437:	89 f6                	mov    %esi,%esi
  444439:	89 f0                	mov    %esi,%eax
  44443b:	33 14 85 c0 46 45 00 	xor    0x4546c0(,%rax,4),%edx
  444442:	8b 75 c4             	mov    -0x3c(%rbp),%esi
  444445:	c1 ee 08             	shr    $0x8,%esi
  444448:	81 e6 ff 00 00 00    	and    $0xff,%esi
  44444e:	89 f6                	mov    %esi,%esi
  444450:	89 f0                	mov    %esi,%eax
  444452:	33 14 85 c0 4a 45 00 	xor    0x454ac0(,%rax,4),%edx
  444459:	8b 75 b8             	mov    -0x48(%rbp),%esi
  44445c:	c1 ee 10             	shr    $0x10,%esi
  44445f:	81 e6 ff 00 00 00    	and    $0xff,%esi
  444465:	89 f6                	mov    %esi,%esi
  444467:	89 f0                	mov    %esi,%eax
  444469:	33 14 85 c0 4e 45 00 	xor    0x454ec0(,%rax,4),%edx
  444470:	8b 75 bc             	mov    -0x44(%rbp),%esi
  444473:	c1 ee 18             	shr    $0x18,%esi
  444476:	81 e6 ff 00 00 00    	and    $0xff,%esi
  44447c:	89 f6                	mov    %esi,%esi
  44447e:	89 f0                	mov    %esi,%eax
  444480:	33 14 85 c0 52 45 00 	xor    0x4552c0(,%rax,4),%edx
  444487:	89 55 d0             	mov    %edx,-0x30(%rbp)
  44448a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  44448e:	48 89 c1             	mov    %rax,%rcx
  444491:	48 83 c1 04          	add    $0x4,%rcx
  444495:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  444499:	8b 10                	mov    (%rax),%edx
  44449b:	8b 75 bc             	mov    -0x44(%rbp),%esi
  44449e:	81 e6 ff 00 00 00    	and    $0xff,%esi
  4444a4:	89 f6                	mov    %esi,%esi
  4444a6:	89 f0                	mov    %esi,%eax
  4444a8:	33 14 85 c0 46 45 00 	xor    0x4546c0(,%rax,4),%edx
  4444af:	8b 75 c0             	mov    -0x40(%rbp),%esi
  4444b2:	c1 ee 08             	shr    $0x8,%esi
  4444b5:	81 e6 ff 00 00 00    	and    $0xff,%esi
  4444bb:	89 f6                	mov    %esi,%esi
  4444bd:	89 f0                	mov    %esi,%eax
  4444bf:	33 14 85 c0 4a 45 00 	xor    0x454ac0(,%rax,4),%edx
  4444c6:	8b 75 c4             	mov    -0x3c(%rbp),%esi
  4444c9:	c1 ee 10             	shr    $0x10,%esi
  4444cc:	81 e6 ff 00 00 00    	and    $0xff,%esi
  4444d2:	89 f6                	mov    %esi,%esi
  4444d4:	89 f0                	mov    %esi,%eax
  4444d6:	33 14 85 c0 4e 45 00 	xor    0x454ec0(,%rax,4),%edx
  4444dd:	8b 75 b8             	mov    -0x48(%rbp),%esi
  4444e0:	c1 ee 18             	shr    $0x18,%esi
  4444e3:	81 e6 ff 00 00 00    	and    $0xff,%esi
  4444e9:	89 f6                	mov    %esi,%esi
  4444eb:	89 f0                	mov    %esi,%eax
  4444ed:	33 14 85 c0 52 45 00 	xor    0x4552c0(,%rax,4),%edx
  4444f4:	89 55 cc             	mov    %edx,-0x34(%rbp)
  4444f7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4444fb:	48 89 c1             	mov    %rax,%rcx
  4444fe:	48 83 c1 04          	add    $0x4,%rcx
  444502:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  444506:	8b 10                	mov    (%rax),%edx
  444508:	8b 75 b8             	mov    -0x48(%rbp),%esi
  44450b:	81 e6 ff 00 00 00    	and    $0xff,%esi
  444511:	89 f6                	mov    %esi,%esi
  444513:	89 f0                	mov    %esi,%eax
  444515:	33 14 85 c0 46 45 00 	xor    0x4546c0(,%rax,4),%edx
  44451c:	8b 75 bc             	mov    -0x44(%rbp),%esi
  44451f:	c1 ee 08             	shr    $0x8,%esi
  444522:	81 e6 ff 00 00 00    	and    $0xff,%esi
  444528:	89 f6                	mov    %esi,%esi
  44452a:	89 f0                	mov    %esi,%eax
  44452c:	33 14 85 c0 4a 45 00 	xor    0x454ac0(,%rax,4),%edx
  444533:	8b 75 c0             	mov    -0x40(%rbp),%esi
  444536:	c1 ee 10             	shr    $0x10,%esi
  444539:	81 e6 ff 00 00 00    	and    $0xff,%esi
  44453f:	89 f6                	mov    %esi,%esi
  444541:	89 f0                	mov    %esi,%eax
  444543:	33 14 85 c0 4e 45 00 	xor    0x454ec0(,%rax,4),%edx
  44454a:	8b 75 c4             	mov    -0x3c(%rbp),%esi
  44454d:	c1 ee 18             	shr    $0x18,%esi
  444550:	81 e6 ff 00 00 00    	and    $0xff,%esi
  444556:	89 f6                	mov    %esi,%esi
  444558:	89 f0                	mov    %esi,%eax
  44455a:	33 14 85 c0 52 45 00 	xor    0x4552c0(,%rax,4),%edx
  444561:	89 55 c8             	mov    %edx,-0x38(%rbp)
  444564:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  444567:	83 c0 ff             	add    $0xffffffff,%eax
  44456a:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  44456d:	e9 80 fc ff ff       	jmpq   4441f2 <mbedtls_internal_aes_decrypt+0x152>
  444572:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  444576:	48 89 c1             	mov    %rax,%rcx
  444579:	48 83 c1 04          	add    $0x4,%rcx
  44457d:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  444581:	8b 10                	mov    (%rax),%edx
  444583:	8b 75 d4             	mov    -0x2c(%rbp),%esi
  444586:	81 e6 ff 00 00 00    	and    $0xff,%esi
  44458c:	89 f6                	mov    %esi,%esi
  44458e:	89 f0                	mov    %esi,%eax
  444590:	33 14 85 c0 46 45 00 	xor    0x4546c0(,%rax,4),%edx
  444597:	8b 75 c8             	mov    -0x38(%rbp),%esi
  44459a:	c1 ee 08             	shr    $0x8,%esi
  44459d:	81 e6 ff 00 00 00    	and    $0xff,%esi
  4445a3:	89 f6                	mov    %esi,%esi
  4445a5:	89 f0                	mov    %esi,%eax
  4445a7:	33 14 85 c0 4a 45 00 	xor    0x454ac0(,%rax,4),%edx
  4445ae:	8b 75 cc             	mov    -0x34(%rbp),%esi
  4445b1:	c1 ee 10             	shr    $0x10,%esi
  4445b4:	81 e6 ff 00 00 00    	and    $0xff,%esi
  4445ba:	89 f6                	mov    %esi,%esi
  4445bc:	89 f0                	mov    %esi,%eax
  4445be:	33 14 85 c0 4e 45 00 	xor    0x454ec0(,%rax,4),%edx
  4445c5:	8b 75 d0             	mov    -0x30(%rbp),%esi
  4445c8:	c1 ee 18             	shr    $0x18,%esi
  4445cb:	81 e6 ff 00 00 00    	and    $0xff,%esi
  4445d1:	89 f6                	mov    %esi,%esi
  4445d3:	89 f0                	mov    %esi,%eax
  4445d5:	33 14 85 c0 52 45 00 	xor    0x4552c0(,%rax,4),%edx
  4445dc:	89 55 c4             	mov    %edx,-0x3c(%rbp)
  4445df:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4445e3:	48 89 c1             	mov    %rax,%rcx
  4445e6:	48 83 c1 04          	add    $0x4,%rcx
  4445ea:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  4445ee:	8b 10                	mov    (%rax),%edx
  4445f0:	8b 75 d0             	mov    -0x30(%rbp),%esi
  4445f3:	81 e6 ff 00 00 00    	and    $0xff,%esi
  4445f9:	89 f6                	mov    %esi,%esi
  4445fb:	89 f0                	mov    %esi,%eax
  4445fd:	33 14 85 c0 46 45 00 	xor    0x4546c0(,%rax,4),%edx
  444604:	8b 75 d4             	mov    -0x2c(%rbp),%esi
  444607:	c1 ee 08             	shr    $0x8,%esi
  44460a:	81 e6 ff 00 00 00    	and    $0xff,%esi
  444610:	89 f6                	mov    %esi,%esi
  444612:	89 f0                	mov    %esi,%eax
  444614:	33 14 85 c0 4a 45 00 	xor    0x454ac0(,%rax,4),%edx
  44461b:	8b 75 c8             	mov    -0x38(%rbp),%esi
  44461e:	c1 ee 10             	shr    $0x10,%esi
  444621:	81 e6 ff 00 00 00    	and    $0xff,%esi
  444627:	89 f6                	mov    %esi,%esi
  444629:	89 f0                	mov    %esi,%eax
  44462b:	33 14 85 c0 4e 45 00 	xor    0x454ec0(,%rax,4),%edx
  444632:	8b 75 cc             	mov    -0x34(%rbp),%esi
  444635:	c1 ee 18             	shr    $0x18,%esi
  444638:	81 e6 ff 00 00 00    	and    $0xff,%esi
  44463e:	89 f6                	mov    %esi,%esi
  444640:	89 f0                	mov    %esi,%eax
  444642:	33 14 85 c0 52 45 00 	xor    0x4552c0(,%rax,4),%edx
  444649:	89 55 c0             	mov    %edx,-0x40(%rbp)
  44464c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  444650:	48 89 c1             	mov    %rax,%rcx
  444653:	48 83 c1 04          	add    $0x4,%rcx
  444657:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  44465b:	8b 10                	mov    (%rax),%edx
  44465d:	8b 75 cc             	mov    -0x34(%rbp),%esi
  444660:	81 e6 ff 00 00 00    	and    $0xff,%esi
  444666:	89 f6                	mov    %esi,%esi
  444668:	89 f0                	mov    %esi,%eax
  44466a:	33 14 85 c0 46 45 00 	xor    0x4546c0(,%rax,4),%edx
  444671:	8b 75 d0             	mov    -0x30(%rbp),%esi
  444674:	c1 ee 08             	shr    $0x8,%esi
  444677:	81 e6 ff 00 00 00    	and    $0xff,%esi
  44467d:	89 f6                	mov    %esi,%esi
  44467f:	89 f0                	mov    %esi,%eax
  444681:	33 14 85 c0 4a 45 00 	xor    0x454ac0(,%rax,4),%edx
  444688:	8b 75 d4             	mov    -0x2c(%rbp),%esi
  44468b:	c1 ee 10             	shr    $0x10,%esi
  44468e:	81 e6 ff 00 00 00    	and    $0xff,%esi
  444694:	89 f6                	mov    %esi,%esi
  444696:	89 f0                	mov    %esi,%eax
  444698:	33 14 85 c0 4e 45 00 	xor    0x454ec0(,%rax,4),%edx
  44469f:	8b 75 c8             	mov    -0x38(%rbp),%esi
  4446a2:	c1 ee 18             	shr    $0x18,%esi
  4446a5:	81 e6 ff 00 00 00    	and    $0xff,%esi
  4446ab:	89 f6                	mov    %esi,%esi
  4446ad:	89 f0                	mov    %esi,%eax
  4446af:	33 14 85 c0 52 45 00 	xor    0x4552c0(,%rax,4),%edx
  4446b6:	89 55 bc             	mov    %edx,-0x44(%rbp)
  4446b9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4446bd:	48 89 c1             	mov    %rax,%rcx
  4446c0:	48 83 c1 04          	add    $0x4,%rcx
  4446c4:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  4446c8:	8b 10                	mov    (%rax),%edx
  4446ca:	8b 75 c8             	mov    -0x38(%rbp),%esi
  4446cd:	81 e6 ff 00 00 00    	and    $0xff,%esi
  4446d3:	89 f6                	mov    %esi,%esi
  4446d5:	89 f0                	mov    %esi,%eax
  4446d7:	33 14 85 c0 46 45 00 	xor    0x4546c0(,%rax,4),%edx
  4446de:	8b 75 cc             	mov    -0x34(%rbp),%esi
  4446e1:	c1 ee 08             	shr    $0x8,%esi
  4446e4:	81 e6 ff 00 00 00    	and    $0xff,%esi
  4446ea:	89 f6                	mov    %esi,%esi
  4446ec:	89 f0                	mov    %esi,%eax
  4446ee:	33 14 85 c0 4a 45 00 	xor    0x454ac0(,%rax,4),%edx
  4446f5:	8b 75 d0             	mov    -0x30(%rbp),%esi
  4446f8:	c1 ee 10             	shr    $0x10,%esi
  4446fb:	81 e6 ff 00 00 00    	and    $0xff,%esi
  444701:	89 f6                	mov    %esi,%esi
  444703:	89 f0                	mov    %esi,%eax
  444705:	33 14 85 c0 4e 45 00 	xor    0x454ec0(,%rax,4),%edx
  44470c:	8b 75 d4             	mov    -0x2c(%rbp),%esi
  44470f:	c1 ee 18             	shr    $0x18,%esi
  444712:	81 e6 ff 00 00 00    	and    $0xff,%esi
  444718:	89 f6                	mov    %esi,%esi
  44471a:	89 f0                	mov    %esi,%eax
  44471c:	33 14 85 c0 52 45 00 	xor    0x4552c0(,%rax,4),%edx
  444723:	89 55 b8             	mov    %edx,-0x48(%rbp)
  444726:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  44472a:	48 89 c1             	mov    %rax,%rcx
  44472d:	48 83 c1 04          	add    $0x4,%rcx
  444731:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  444735:	8b 10                	mov    (%rax),%edx
  444737:	8b 75 c4             	mov    -0x3c(%rbp),%esi
  44473a:	81 e6 ff 00 00 00    	and    $0xff,%esi
  444740:	89 f6                	mov    %esi,%esi
  444742:	89 f0                	mov    %esi,%eax
  444744:	0f b6 34 05 c0 35 45 	movzbl 0x4535c0(,%rax,1),%esi
  44474b:	00 
  44474c:	31 f2                	xor    %esi,%edx
  44474e:	8b 75 b8             	mov    -0x48(%rbp),%esi
  444751:	c1 ee 08             	shr    $0x8,%esi
  444754:	81 e6 ff 00 00 00    	and    $0xff,%esi
  44475a:	89 f6                	mov    %esi,%esi
  44475c:	89 f0                	mov    %esi,%eax
  44475e:	0f b6 34 05 c0 35 45 	movzbl 0x4535c0(,%rax,1),%esi
  444765:	00 
  444766:	c1 e6 08             	shl    $0x8,%esi
  444769:	31 f2                	xor    %esi,%edx
  44476b:	8b 75 bc             	mov    -0x44(%rbp),%esi
  44476e:	c1 ee 10             	shr    $0x10,%esi
  444771:	81 e6 ff 00 00 00    	and    $0xff,%esi
  444777:	89 f6                	mov    %esi,%esi
  444779:	89 f0                	mov    %esi,%eax
  44477b:	0f b6 34 05 c0 35 45 	movzbl 0x4535c0(,%rax,1),%esi
  444782:	00 
  444783:	c1 e6 10             	shl    $0x10,%esi
  444786:	31 f2                	xor    %esi,%edx
  444788:	8b 75 c0             	mov    -0x40(%rbp),%esi
  44478b:	c1 ee 18             	shr    $0x18,%esi
  44478e:	81 e6 ff 00 00 00    	and    $0xff,%esi
  444794:	89 f6                	mov    %esi,%esi
  444796:	89 f0                	mov    %esi,%eax
  444798:	0f b6 34 05 c0 35 45 	movzbl 0x4535c0(,%rax,1),%esi
  44479f:	00 
  4447a0:	c1 e6 18             	shl    $0x18,%esi
  4447a3:	31 f2                	xor    %esi,%edx
  4447a5:	89 55 d4             	mov    %edx,-0x2c(%rbp)
  4447a8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4447ac:	48 89 c1             	mov    %rax,%rcx
  4447af:	48 83 c1 04          	add    $0x4,%rcx
  4447b3:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  4447b7:	8b 10                	mov    (%rax),%edx
  4447b9:	8b 75 c0             	mov    -0x40(%rbp),%esi
  4447bc:	81 e6 ff 00 00 00    	and    $0xff,%esi
  4447c2:	89 f6                	mov    %esi,%esi
  4447c4:	89 f0                	mov    %esi,%eax
  4447c6:	0f b6 34 05 c0 35 45 	movzbl 0x4535c0(,%rax,1),%esi
  4447cd:	00 
  4447ce:	31 f2                	xor    %esi,%edx
  4447d0:	8b 75 c4             	mov    -0x3c(%rbp),%esi
  4447d3:	c1 ee 08             	shr    $0x8,%esi
  4447d6:	81 e6 ff 00 00 00    	and    $0xff,%esi
  4447dc:	89 f6                	mov    %esi,%esi
  4447de:	89 f0                	mov    %esi,%eax
  4447e0:	0f b6 34 05 c0 35 45 	movzbl 0x4535c0(,%rax,1),%esi
  4447e7:	00 
  4447e8:	c1 e6 08             	shl    $0x8,%esi
  4447eb:	31 f2                	xor    %esi,%edx
  4447ed:	8b 75 b8             	mov    -0x48(%rbp),%esi
  4447f0:	c1 ee 10             	shr    $0x10,%esi
  4447f3:	81 e6 ff 00 00 00    	and    $0xff,%esi
  4447f9:	89 f6                	mov    %esi,%esi
  4447fb:	89 f0                	mov    %esi,%eax
  4447fd:	0f b6 34 05 c0 35 45 	movzbl 0x4535c0(,%rax,1),%esi
  444804:	00 
  444805:	c1 e6 10             	shl    $0x10,%esi
  444808:	31 f2                	xor    %esi,%edx
  44480a:	8b 75 bc             	mov    -0x44(%rbp),%esi
  44480d:	c1 ee 18             	shr    $0x18,%esi
  444810:	81 e6 ff 00 00 00    	and    $0xff,%esi
  444816:	89 f6                	mov    %esi,%esi
  444818:	89 f0                	mov    %esi,%eax
  44481a:	0f b6 34 05 c0 35 45 	movzbl 0x4535c0(,%rax,1),%esi
  444821:	00 
  444822:	c1 e6 18             	shl    $0x18,%esi
  444825:	31 f2                	xor    %esi,%edx
  444827:	89 55 d0             	mov    %edx,-0x30(%rbp)
  44482a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  44482e:	48 89 c1             	mov    %rax,%rcx
  444831:	48 83 c1 04          	add    $0x4,%rcx
  444835:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  444839:	8b 10                	mov    (%rax),%edx
  44483b:	8b 75 bc             	mov    -0x44(%rbp),%esi
  44483e:	81 e6 ff 00 00 00    	and    $0xff,%esi
  444844:	89 f6                	mov    %esi,%esi
  444846:	89 f0                	mov    %esi,%eax
  444848:	0f b6 34 05 c0 35 45 	movzbl 0x4535c0(,%rax,1),%esi
  44484f:	00 
  444850:	31 f2                	xor    %esi,%edx
  444852:	8b 75 c0             	mov    -0x40(%rbp),%esi
  444855:	c1 ee 08             	shr    $0x8,%esi
  444858:	81 e6 ff 00 00 00    	and    $0xff,%esi
  44485e:	89 f6                	mov    %esi,%esi
  444860:	89 f0                	mov    %esi,%eax
  444862:	0f b6 34 05 c0 35 45 	movzbl 0x4535c0(,%rax,1),%esi
  444869:	00 
  44486a:	c1 e6 08             	shl    $0x8,%esi
  44486d:	31 f2                	xor    %esi,%edx
  44486f:	8b 75 c4             	mov    -0x3c(%rbp),%esi
  444872:	c1 ee 10             	shr    $0x10,%esi
  444875:	81 e6 ff 00 00 00    	and    $0xff,%esi
  44487b:	89 f6                	mov    %esi,%esi
  44487d:	89 f0                	mov    %esi,%eax
  44487f:	0f b6 34 05 c0 35 45 	movzbl 0x4535c0(,%rax,1),%esi
  444886:	00 
  444887:	c1 e6 10             	shl    $0x10,%esi
  44488a:	31 f2                	xor    %esi,%edx
  44488c:	8b 75 b8             	mov    -0x48(%rbp),%esi
  44488f:	c1 ee 18             	shr    $0x18,%esi
  444892:	81 e6 ff 00 00 00    	and    $0xff,%esi
  444898:	89 f6                	mov    %esi,%esi
  44489a:	89 f0                	mov    %esi,%eax
  44489c:	0f b6 34 05 c0 35 45 	movzbl 0x4535c0(,%rax,1),%esi
  4448a3:	00 
  4448a4:	c1 e6 18             	shl    $0x18,%esi
  4448a7:	31 f2                	xor    %esi,%edx
  4448a9:	89 55 cc             	mov    %edx,-0x34(%rbp)
  4448ac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4448b0:	48 89 c1             	mov    %rax,%rcx
  4448b3:	48 83 c1 04          	add    $0x4,%rcx
  4448b7:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  4448bb:	8b 10                	mov    (%rax),%edx
  4448bd:	8b 75 b8             	mov    -0x48(%rbp),%esi
  4448c0:	81 e6 ff 00 00 00    	and    $0xff,%esi
  4448c6:	89 f6                	mov    %esi,%esi
  4448c8:	89 f0                	mov    %esi,%eax
  4448ca:	0f b6 34 05 c0 35 45 	movzbl 0x4535c0(,%rax,1),%esi
  4448d1:	00 
  4448d2:	31 f2                	xor    %esi,%edx
  4448d4:	8b 75 bc             	mov    -0x44(%rbp),%esi
  4448d7:	c1 ee 08             	shr    $0x8,%esi
  4448da:	81 e6 ff 00 00 00    	and    $0xff,%esi
  4448e0:	89 f6                	mov    %esi,%esi
  4448e2:	89 f0                	mov    %esi,%eax
  4448e4:	0f b6 34 05 c0 35 45 	movzbl 0x4535c0(,%rax,1),%esi
  4448eb:	00 
  4448ec:	c1 e6 08             	shl    $0x8,%esi
  4448ef:	31 f2                	xor    %esi,%edx
  4448f1:	8b 75 c0             	mov    -0x40(%rbp),%esi
  4448f4:	c1 ee 10             	shr    $0x10,%esi
  4448f7:	81 e6 ff 00 00 00    	and    $0xff,%esi
  4448fd:	89 f6                	mov    %esi,%esi
  4448ff:	89 f0                	mov    %esi,%eax
  444901:	0f b6 34 05 c0 35 45 	movzbl 0x4535c0(,%rax,1),%esi
  444908:	00 
  444909:	c1 e6 10             	shl    $0x10,%esi
  44490c:	31 f2                	xor    %esi,%edx
  44490e:	8b 75 c4             	mov    -0x3c(%rbp),%esi
  444911:	c1 ee 18             	shr    $0x18,%esi
  444914:	81 e6 ff 00 00 00    	and    $0xff,%esi
  44491a:	89 f6                	mov    %esi,%esi
  44491c:	89 f0                	mov    %esi,%eax
  44491e:	0f b6 34 05 c0 35 45 	movzbl 0x4535c0(,%rax,1),%esi
  444925:	00 
  444926:	c1 e6 18             	shl    $0x18,%esi
  444929:	31 f2                	xor    %esi,%edx
  44492b:	89 55 c8             	mov    %edx,-0x38(%rbp)
  44492e:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  444931:	81 e2 ff 00 00 00    	and    $0xff,%edx
  444937:	40 88 d7             	mov    %dl,%dil
  44493a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  44493e:	40 88 38             	mov    %dil,(%rax)
  444941:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  444944:	c1 ea 08             	shr    $0x8,%edx
  444947:	81 e2 ff 00 00 00    	and    $0xff,%edx
  44494d:	40 88 d7             	mov    %dl,%dil
  444950:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  444954:	40 88 78 01          	mov    %dil,0x1(%rax)
  444958:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  44495b:	c1 ea 10             	shr    $0x10,%edx
  44495e:	81 e2 ff 00 00 00    	and    $0xff,%edx
  444964:	40 88 d7             	mov    %dl,%dil
  444967:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  44496b:	40 88 78 02          	mov    %dil,0x2(%rax)
  44496f:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  444972:	c1 ea 18             	shr    $0x18,%edx
  444975:	81 e2 ff 00 00 00    	and    $0xff,%edx
  44497b:	40 88 d7             	mov    %dl,%dil
  44497e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  444982:	40 88 78 03          	mov    %dil,0x3(%rax)
  444986:	8b 55 d0             	mov    -0x30(%rbp),%edx
  444989:	81 e2 ff 00 00 00    	and    $0xff,%edx
  44498f:	40 88 d7             	mov    %dl,%dil
  444992:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  444996:	40 88 78 04          	mov    %dil,0x4(%rax)
  44499a:	8b 55 d0             	mov    -0x30(%rbp),%edx
  44499d:	c1 ea 08             	shr    $0x8,%edx
  4449a0:	81 e2 ff 00 00 00    	and    $0xff,%edx
  4449a6:	40 88 d7             	mov    %dl,%dil
  4449a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4449ad:	40 88 78 05          	mov    %dil,0x5(%rax)
  4449b1:	8b 55 d0             	mov    -0x30(%rbp),%edx
  4449b4:	c1 ea 10             	shr    $0x10,%edx
  4449b7:	81 e2 ff 00 00 00    	and    $0xff,%edx
  4449bd:	40 88 d7             	mov    %dl,%dil
  4449c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4449c4:	40 88 78 06          	mov    %dil,0x6(%rax)
  4449c8:	8b 55 d0             	mov    -0x30(%rbp),%edx
  4449cb:	c1 ea 18             	shr    $0x18,%edx
  4449ce:	81 e2 ff 00 00 00    	and    $0xff,%edx
  4449d4:	40 88 d7             	mov    %dl,%dil
  4449d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4449db:	40 88 78 07          	mov    %dil,0x7(%rax)
  4449df:	8b 55 cc             	mov    -0x34(%rbp),%edx
  4449e2:	81 e2 ff 00 00 00    	and    $0xff,%edx
  4449e8:	40 88 d7             	mov    %dl,%dil
  4449eb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4449ef:	40 88 78 08          	mov    %dil,0x8(%rax)
  4449f3:	8b 55 cc             	mov    -0x34(%rbp),%edx
  4449f6:	c1 ea 08             	shr    $0x8,%edx
  4449f9:	81 e2 ff 00 00 00    	and    $0xff,%edx
  4449ff:	40 88 d7             	mov    %dl,%dil
  444a02:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  444a06:	40 88 78 09          	mov    %dil,0x9(%rax)
  444a0a:	8b 55 cc             	mov    -0x34(%rbp),%edx
  444a0d:	c1 ea 10             	shr    $0x10,%edx
  444a10:	81 e2 ff 00 00 00    	and    $0xff,%edx
  444a16:	40 88 d7             	mov    %dl,%dil
  444a19:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  444a1d:	40 88 78 0a          	mov    %dil,0xa(%rax)
  444a21:	8b 55 cc             	mov    -0x34(%rbp),%edx
  444a24:	c1 ea 18             	shr    $0x18,%edx
  444a27:	81 e2 ff 00 00 00    	and    $0xff,%edx
  444a2d:	40 88 d7             	mov    %dl,%dil
  444a30:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  444a34:	40 88 78 0b          	mov    %dil,0xb(%rax)
  444a38:	8b 55 c8             	mov    -0x38(%rbp),%edx
  444a3b:	81 e2 ff 00 00 00    	and    $0xff,%edx
  444a41:	40 88 d7             	mov    %dl,%dil
  444a44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  444a48:	40 88 78 0c          	mov    %dil,0xc(%rax)
  444a4c:	8b 55 c8             	mov    -0x38(%rbp),%edx
  444a4f:	c1 ea 08             	shr    $0x8,%edx
  444a52:	81 e2 ff 00 00 00    	and    $0xff,%edx
  444a58:	40 88 d7             	mov    %dl,%dil
  444a5b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  444a5f:	40 88 78 0d          	mov    %dil,0xd(%rax)
  444a63:	8b 55 c8             	mov    -0x38(%rbp),%edx
  444a66:	c1 ea 10             	shr    $0x10,%edx
  444a69:	81 e2 ff 00 00 00    	and    $0xff,%edx
  444a6f:	40 88 d7             	mov    %dl,%dil
  444a72:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  444a76:	40 88 78 0e          	mov    %dil,0xe(%rax)
  444a7a:	8b 55 c8             	mov    -0x38(%rbp),%edx
  444a7d:	c1 ea 18             	shr    $0x18,%edx
  444a80:	81 e2 ff 00 00 00    	and    $0xff,%edx
  444a86:	40 88 d7             	mov    %dl,%dil
  444a89:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  444a8d:	40 88 78 0f          	mov    %dil,0xf(%rax)
  444a91:	e8 c0 0e 00 00       	callq  445956 <writeback_cache>
  444a96:	31 c0                	xor    %eax,%eax
  444a98:	48 83 c4 50          	add    $0x50,%rsp
  444a9c:	5d                   	pop    %rbp
  444a9d:	c3                   	retq   
  444a9e:	66 90                	xchg   %ax,%ax

0000000000444aa0 <mbedtls_aes_crypt_cbc>:
  444aa0:	55                   	push   %rbp
  444aa1:	48 89 e5             	mov    %rsp,%rbp
  444aa4:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
  444aab:	48 89 7d a0          	mov    %rdi,-0x60(%rbp)
  444aaf:	89 75 9c             	mov    %esi,-0x64(%rbp)
  444ab2:	48 89 55 90          	mov    %rdx,-0x70(%rbp)
  444ab6:	48 89 4d 88          	mov    %rcx,-0x78(%rbp)
  444aba:	4c 89 45 80          	mov    %r8,-0x80(%rbp)
  444abe:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
  444ac5:	eb 00                	jmp    444ac7 <mbedtls_aes_crypt_cbc+0x27>
  444ac7:	eb 00                	jmp    444ac9 <mbedtls_aes_crypt_cbc+0x29>
  444ac9:	eb 00                	jmp    444acb <mbedtls_aes_crypt_cbc+0x2b>
  444acb:	eb 00                	jmp    444acd <mbedtls_aes_crypt_cbc+0x2d>
  444acd:	eb 00                	jmp    444acf <mbedtls_aes_crypt_cbc+0x2f>
  444acf:	eb 00                	jmp    444ad1 <mbedtls_aes_crypt_cbc+0x31>
  444ad1:	eb 00                	jmp    444ad3 <mbedtls_aes_crypt_cbc+0x33>
  444ad3:	eb 00                	jmp    444ad5 <mbedtls_aes_crypt_cbc+0x35>
  444ad5:	eb 00                	jmp    444ad7 <mbedtls_aes_crypt_cbc+0x37>
  444ad7:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  444adb:	48 83 e0 0f          	and    $0xf,%rax
  444adf:	48 83 f8 00          	cmp    $0x0,%rax
  444ae3:	74 0c                	je     444af1 <mbedtls_aes_crypt_cbc+0x51>
  444ae5:	c7 45 ac de ff ff ff 	movl   $0xffffffde,-0x54(%rbp)
  444aec:	e9 35 02 00 00       	jmpq   444d26 <mbedtls_aes_crypt_cbc+0x286>
  444af1:	83 7d 9c 00          	cmpl   $0x0,-0x64(%rbp)
  444af5:	0f 85 20 01 00 00    	jne    444c1b <mbedtls_aes_crypt_cbc+0x17b>
  444afb:	eb 00                	jmp    444afd <mbedtls_aes_crypt_cbc+0x5d>
  444afd:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
  444b02:	0f 86 0e 01 00 00    	jbe    444c16 <mbedtls_aes_crypt_cbc+0x176>
  444b08:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  444b0c:	48 8b 08             	mov    (%rax),%rcx
  444b0f:	48 89 8d 60 ff ff ff 	mov    %rcx,-0xa0(%rbp)
  444b16:	48 8b 40 08          	mov    0x8(%rax),%rax
  444b1a:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
  444b21:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  444b25:	8b 55 9c             	mov    -0x64(%rbp),%edx
  444b28:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
  444b2c:	48 8b b5 78 ff ff ff 	mov    -0x88(%rbp),%rsi
  444b33:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  444b37:	89 55 c4             	mov    %edx,-0x3c(%rbp)
  444b3a:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
  444b3e:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
  444b42:	83 7d c4 01          	cmpl   $0x1,-0x3c(%rbp)
  444b46:	75 16                	jne    444b5e <mbedtls_aes_crypt_cbc+0xbe>
  444b48:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  444b4c:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  444b50:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
  444b54:	e8 47 eb ff ff       	callq  4436a0 <mbedtls_internal_aes_encrypt>
  444b59:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  444b5c:	eb 14                	jmp    444b72 <mbedtls_aes_crypt_cbc+0xd2>
  444b5e:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  444b62:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  444b66:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
  444b6a:	e8 31 f5 ff ff       	callq  4440a0 <mbedtls_internal_aes_decrypt>
  444b6f:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  444b72:	c7 85 74 ff ff ff 00 	movl   $0x0,-0x8c(%rbp)
  444b79:	00 00 00 
  444b7c:	83 bd 74 ff ff ff 10 	cmpl   $0x10,-0x8c(%rbp)
  444b83:	7d 49                	jge    444bce <mbedtls_aes_crypt_cbc+0x12e>
  444b85:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  444b8c:	48 63 8d 74 ff ff ff 	movslq -0x8c(%rbp),%rcx
  444b93:	0f b6 14 08          	movzbl (%rax,%rcx,1),%edx
  444b97:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  444b9b:	48 63 8d 74 ff ff ff 	movslq -0x8c(%rbp),%rcx
  444ba2:	0f b6 34 08          	movzbl (%rax,%rcx,1),%esi
  444ba6:	31 f2                	xor    %esi,%edx
  444ba8:	40 88 d7             	mov    %dl,%dil
  444bab:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  444bb2:	48 63 8d 74 ff ff ff 	movslq -0x8c(%rbp),%rcx
  444bb9:	40 88 3c 08          	mov    %dil,(%rax,%rcx,1)
  444bbd:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
  444bc3:	83 c0 01             	add    $0x1,%eax
  444bc6:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
  444bcc:	eb ae                	jmp    444b7c <mbedtls_aes_crypt_cbc+0xdc>
  444bce:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  444bd2:	48 8b 8d 60 ff ff ff 	mov    -0xa0(%rbp),%rcx
  444bd9:	48 89 08             	mov    %rcx,(%rax)
  444bdc:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
  444be3:	48 89 48 08          	mov    %rcx,0x8(%rax)
  444be7:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  444beb:	48 83 c0 10          	add    $0x10,%rax
  444bef:	48 89 45 80          	mov    %rax,-0x80(%rbp)
  444bf3:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  444bfa:	48 83 c0 10          	add    $0x10,%rax
  444bfe:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  444c05:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  444c09:	48 83 e8 10          	sub    $0x10,%rax
  444c0d:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  444c11:	e9 e7 fe ff ff       	jmpq   444afd <mbedtls_aes_crypt_cbc+0x5d>
  444c16:	e9 04 01 00 00       	jmpq   444d1f <mbedtls_aes_crypt_cbc+0x27f>
  444c1b:	eb 00                	jmp    444c1d <mbedtls_aes_crypt_cbc+0x17d>
  444c1d:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
  444c22:	0f 86 f5 00 00 00    	jbe    444d1d <mbedtls_aes_crypt_cbc+0x27d>
  444c28:	c7 85 74 ff ff ff 00 	movl   $0x0,-0x8c(%rbp)
  444c2f:	00 00 00 
  444c32:	83 bd 74 ff ff ff 10 	cmpl   $0x10,-0x8c(%rbp)
  444c39:	7d 46                	jge    444c81 <mbedtls_aes_crypt_cbc+0x1e1>
  444c3b:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  444c3f:	48 63 8d 74 ff ff ff 	movslq -0x8c(%rbp),%rcx
  444c46:	0f b6 14 08          	movzbl (%rax,%rcx,1),%edx
  444c4a:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  444c4e:	48 63 8d 74 ff ff ff 	movslq -0x8c(%rbp),%rcx
  444c55:	0f b6 34 08          	movzbl (%rax,%rcx,1),%esi
  444c59:	31 f2                	xor    %esi,%edx
  444c5b:	40 88 d7             	mov    %dl,%dil
  444c5e:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  444c65:	48 63 8d 74 ff ff ff 	movslq -0x8c(%rbp),%rcx
  444c6c:	40 88 3c 08          	mov    %dil,(%rax,%rcx,1)
  444c70:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
  444c76:	83 c0 01             	add    $0x1,%eax
  444c79:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
  444c7f:	eb b1                	jmp    444c32 <mbedtls_aes_crypt_cbc+0x192>
  444c81:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  444c85:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
  444c88:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
  444c8f:	48 8b b5 78 ff ff ff 	mov    -0x88(%rbp),%rsi
  444c96:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  444c9a:	89 4d ec             	mov    %ecx,-0x14(%rbp)
  444c9d:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
  444ca1:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
  444ca5:	83 7d ec 01          	cmpl   $0x1,-0x14(%rbp)
  444ca9:	75 16                	jne    444cc1 <mbedtls_aes_crypt_cbc+0x221>
  444cab:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  444caf:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  444cb3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  444cb7:	e8 e4 e9 ff ff       	callq  4436a0 <mbedtls_internal_aes_encrypt>
  444cbc:	89 45 fc             	mov    %eax,-0x4(%rbp)
  444cbf:	eb 14                	jmp    444cd5 <mbedtls_aes_crypt_cbc+0x235>
  444cc1:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  444cc5:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  444cc9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  444ccd:	e8 ce f3 ff ff       	callq  4440a0 <mbedtls_internal_aes_decrypt>
  444cd2:	89 45 fc             	mov    %eax,-0x4(%rbp)
  444cd5:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  444cd9:	48 8b 8d 78 ff ff ff 	mov    -0x88(%rbp),%rcx
  444ce0:	48 8b 11             	mov    (%rcx),%rdx
  444ce3:	48 89 10             	mov    %rdx,(%rax)
  444ce6:	48 8b 49 08          	mov    0x8(%rcx),%rcx
  444cea:	48 89 48 08          	mov    %rcx,0x8(%rax)
  444cee:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  444cf2:	48 83 c0 10          	add    $0x10,%rax
  444cf6:	48 89 45 80          	mov    %rax,-0x80(%rbp)
  444cfa:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  444d01:	48 83 c0 10          	add    $0x10,%rax
  444d05:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  444d0c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  444d10:	48 83 e8 10          	sub    $0x10,%rax
  444d14:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  444d18:	e9 00 ff ff ff       	jmpq   444c1d <mbedtls_aes_crypt_cbc+0x17d>
  444d1d:	eb 00                	jmp    444d1f <mbedtls_aes_crypt_cbc+0x27f>
  444d1f:	c7 45 ac 00 00 00 00 	movl   $0x0,-0x54(%rbp)
  444d26:	8b 45 ac             	mov    -0x54(%rbp),%eax
  444d29:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%rbp)
  444d2f:	e8 22 0c 00 00       	callq  445956 <writeback_cache>
  444d34:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
  444d3a:	48 81 c4 b0 00 00 00 	add    $0xb0,%rsp
  444d41:	5d                   	pop    %rbp
  444d42:	c3                   	retq   
  444d43:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  444d4a:	84 00 00 00 00 00 

0000000000444d50 <mbedtls_base64_decode>:
  444d50:	55                   	push   %rbp
  444d51:	48 89 e5             	mov    %rsp,%rbp
  444d54:	48 83 ec 60          	sub    $0x60,%rsp
  444d58:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  444d5c:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  444d60:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
  444d64:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  444d68:	4c 89 45 d0          	mov    %r8,-0x30(%rbp)
  444d6c:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%rbp)
  444d73:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
  444d7a:	00 
  444d7b:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
  444d82:	00 
  444d83:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  444d87:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
  444d8b:	0f 83 69 01 00 00    	jae    444efa <mbedtls_base64_decode+0x1aa>
  444d91:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%rbp)
  444d98:	31 c0                	xor    %eax,%eax
  444d9a:	88 c1                	mov    %al,%cl
  444d9c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  444da0:	48 3b 55 d0          	cmp    -0x30(%rbp),%rdx
  444da4:	88 4d af             	mov    %cl,-0x51(%rbp)
  444da7:	73 17                	jae    444dc0 <mbedtls_base64_decode+0x70>
  444da9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  444dad:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  444db1:	0f b6 14 08          	movzbl (%rax,%rcx,1),%edx
  444db5:	83 fa 20             	cmp    $0x20,%edx
  444db8:	40 0f 94 c6          	sete   %sil
  444dbc:	40 88 75 af          	mov    %sil,-0x51(%rbp)
  444dc0:	8a 45 af             	mov    -0x51(%rbp),%al
  444dc3:	a8 01                	test   $0x1,%al
  444dc5:	75 02                	jne    444dc9 <mbedtls_base64_decode+0x79>
  444dc7:	eb 17                	jmp    444de0 <mbedtls_base64_decode+0x90>
  444dc9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  444dcd:	48 83 c0 01          	add    $0x1,%rax
  444dd1:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  444dd5:	8b 4d b8             	mov    -0x48(%rbp),%ecx
  444dd8:	83 c1 01             	add    $0x1,%ecx
  444ddb:	89 4d b8             	mov    %ecx,-0x48(%rbp)
  444dde:	eb b8                	jmp    444d98 <mbedtls_base64_decode+0x48>
  444de0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  444de4:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
  444de8:	75 05                	jne    444def <mbedtls_base64_decode+0x9f>
  444dea:	e9 0b 01 00 00       	jmpq   444efa <mbedtls_base64_decode+0x1aa>
  444def:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  444df3:	48 2b 45 c8          	sub    -0x38(%rbp),%rax
  444df7:	48 83 f8 02          	cmp    $0x2,%rax
  444dfb:	72 28                	jb     444e25 <mbedtls_base64_decode+0xd5>
  444dfd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  444e01:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  444e05:	0f b6 14 08          	movzbl (%rax,%rcx,1),%edx
  444e09:	83 fa 0d             	cmp    $0xd,%edx
  444e0c:	75 17                	jne    444e25 <mbedtls_base64_decode+0xd5>
  444e0e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  444e12:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  444e16:	0f b6 54 08 01       	movzbl 0x1(%rax,%rcx,1),%edx
  444e1b:	83 fa 0a             	cmp    $0xa,%edx
  444e1e:	75 05                	jne    444e25 <mbedtls_base64_decode+0xd5>
  444e20:	e9 c4 00 00 00       	jmpq   444ee9 <mbedtls_base64_decode+0x199>
  444e25:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  444e29:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  444e2d:	0f b6 14 08          	movzbl (%rax,%rcx,1),%edx
  444e31:	83 fa 0a             	cmp    $0xa,%edx
  444e34:	75 05                	jne    444e3b <mbedtls_base64_decode+0xeb>
  444e36:	e9 ae 00 00 00       	jmpq   444ee9 <mbedtls_base64_decode+0x199>
  444e3b:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
  444e3f:	74 0c                	je     444e4d <mbedtls_base64_decode+0xfd>
  444e41:	c7 45 fc d4 ff ff ff 	movl   $0xffffffd4,-0x4(%rbp)
  444e48:	e9 6e 02 00 00       	jmpq   4450bb <mbedtls_base64_decode+0x36b>
  444e4d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  444e51:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  444e55:	0f b6 14 08          	movzbl (%rax,%rcx,1),%edx
  444e59:	83 fa 3d             	cmp    $0x3d,%edx
  444e5c:	75 1a                	jne    444e78 <mbedtls_base64_decode+0x128>
  444e5e:	8b 45 bc             	mov    -0x44(%rbp),%eax
  444e61:	83 c0 01             	add    $0x1,%eax
  444e64:	89 45 bc             	mov    %eax,-0x44(%rbp)
  444e67:	83 f8 02             	cmp    $0x2,%eax
  444e6a:	76 0c                	jbe    444e78 <mbedtls_base64_decode+0x128>
  444e6c:	c7 45 fc d4 ff ff ff 	movl   $0xffffffd4,-0x4(%rbp)
  444e73:	e9 43 02 00 00       	jmpq   4450bb <mbedtls_base64_decode+0x36b>
  444e78:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  444e7c:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  444e80:	0f b6 14 08          	movzbl (%rax,%rcx,1),%edx
  444e84:	83 fa 7f             	cmp    $0x7f,%edx
  444e87:	7f 1b                	jg     444ea4 <mbedtls_base64_decode+0x154>
  444e89:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  444e8d:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  444e91:	0f b6 14 08          	movzbl (%rax,%rcx,1),%edx
  444e95:	89 d0                	mov    %edx,%eax
  444e97:	0f b6 14 05 c0 e4 44 	movzbl 0x44e4c0(,%rax,1),%edx
  444e9e:	00 
  444e9f:	83 fa 7f             	cmp    $0x7f,%edx
  444ea2:	75 0c                	jne    444eb0 <mbedtls_base64_decode+0x160>
  444ea4:	c7 45 fc d4 ff ff ff 	movl   $0xffffffd4,-0x4(%rbp)
  444eab:	e9 0b 02 00 00       	jmpq   4450bb <mbedtls_base64_decode+0x36b>
  444eb0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  444eb4:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  444eb8:	0f b6 14 08          	movzbl (%rax,%rcx,1),%edx
  444ebc:	89 d0                	mov    %edx,%eax
  444ebe:	0f b6 14 05 c0 e4 44 	movzbl 0x44e4c0(,%rax,1),%edx
  444ec5:	00 
  444ec6:	83 fa 40             	cmp    $0x40,%edx
  444ec9:	7d 12                	jge    444edd <mbedtls_base64_decode+0x18d>
  444ecb:	83 7d bc 00          	cmpl   $0x0,-0x44(%rbp)
  444ecf:	74 0c                	je     444edd <mbedtls_base64_decode+0x18d>
  444ed1:	c7 45 fc d4 ff ff ff 	movl   $0xffffffd4,-0x4(%rbp)
  444ed8:	e9 de 01 00 00       	jmpq   4450bb <mbedtls_base64_decode+0x36b>
  444edd:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  444ee1:	48 83 c0 01          	add    $0x1,%rax
  444ee5:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  444ee9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  444eed:	48 83 c0 01          	add    $0x1,%rax
  444ef1:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  444ef5:	e9 89 fe ff ff       	jmpq   444d83 <mbedtls_base64_decode+0x33>
  444efa:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  444eff:	75 17                	jne    444f18 <mbedtls_base64_decode+0x1c8>
  444f01:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  444f05:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  444f0c:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  444f13:	e9 a3 01 00 00       	jmpq   4450bb <mbedtls_base64_decode+0x36b>
  444f18:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  444f1c:	48 c1 e8 03          	shr    $0x3,%rax
  444f20:	48 6b c0 06          	imul   $0x6,%rax,%rax
  444f24:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  444f28:	48 83 e1 07          	and    $0x7,%rcx
  444f2c:	48 6b c9 06          	imul   $0x6,%rcx,%rcx
  444f30:	48 83 c1 07          	add    $0x7,%rcx
  444f34:	48 c1 e9 03          	shr    $0x3,%rcx
  444f38:	48 01 c8             	add    %rcx,%rax
  444f3b:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  444f3f:	8b 55 bc             	mov    -0x44(%rbp),%edx
  444f42:	89 d0                	mov    %edx,%eax
  444f44:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  444f48:	48 29 c1             	sub    %rax,%rcx
  444f4b:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
  444f4f:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  444f54:	74 0a                	je     444f60 <mbedtls_base64_decode+0x210>
  444f56:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  444f5a:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
  444f5e:	73 17                	jae    444f77 <mbedtls_base64_decode+0x227>
  444f60:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  444f64:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  444f68:	48 89 01             	mov    %rax,(%rcx)
  444f6b:	c7 45 fc d6 ff ff ff 	movl   $0xffffffd6,-0x4(%rbp)
  444f72:	e9 44 01 00 00       	jmpq   4450bb <mbedtls_base64_decode+0x36b>
  444f77:	c7 45 bc 03 00 00 00 	movl   $0x3,-0x44(%rbp)
  444f7e:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%rbp)
  444f85:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
  444f8c:	00 
  444f8d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  444f91:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  444f95:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  444f9a:	0f 86 02 01 00 00    	jbe    4450a2 <mbedtls_base64_decode+0x352>
  444fa0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  444fa4:	0f b6 08             	movzbl (%rax),%ecx
  444fa7:	83 f9 0d             	cmp    $0xd,%ecx
  444faa:	74 18                	je     444fc4 <mbedtls_base64_decode+0x274>
  444fac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  444fb0:	0f b6 08             	movzbl (%rax),%ecx
  444fb3:	83 f9 0a             	cmp    $0xa,%ecx
  444fb6:	74 0c                	je     444fc4 <mbedtls_base64_decode+0x274>
  444fb8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  444fbc:	0f b6 08             	movzbl (%rax),%ecx
  444fbf:	83 f9 20             	cmp    $0x20,%ecx
  444fc2:	75 05                	jne    444fc9 <mbedtls_base64_decode+0x279>
  444fc4:	e9 bc 00 00 00       	jmpq   445085 <mbedtls_base64_decode+0x335>
  444fc9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  444fcd:	0f b6 08             	movzbl (%rax),%ecx
  444fd0:	89 c8                	mov    %ecx,%eax
  444fd2:	0f b6 0c 05 c0 e4 44 	movzbl 0x44e4c0(,%rax,1),%ecx
  444fd9:	00 
  444fda:	83 f9 40             	cmp    $0x40,%ecx
  444fdd:	0f 94 c2             	sete   %dl
  444fe0:	80 e2 01             	and    $0x1,%dl
  444fe3:	0f b6 ca             	movzbl %dl,%ecx
  444fe6:	8b 75 bc             	mov    -0x44(%rbp),%esi
  444fe9:	29 ce                	sub    %ecx,%esi
  444feb:	89 75 bc             	mov    %esi,-0x44(%rbp)
  444fee:	8b 4d b8             	mov    -0x48(%rbp),%ecx
  444ff1:	c1 e1 06             	shl    $0x6,%ecx
  444ff4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  444ff8:	0f b6 30             	movzbl (%rax),%esi
  444ffb:	89 f0                	mov    %esi,%eax
  444ffd:	0f b6 34 05 c0 e4 44 	movzbl 0x44e4c0(,%rax,1),%esi
  445004:	00 
  445005:	83 e6 3f             	and    $0x3f,%esi
  445008:	09 f1                	or     %esi,%ecx
  44500a:	89 4d b8             	mov    %ecx,-0x48(%rbp)
  44500d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  445011:	48 83 c0 01          	add    $0x1,%rax
  445015:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  445019:	48 83 f8 04          	cmp    $0x4,%rax
  44501d:	75 64                	jne    445083 <mbedtls_base64_decode+0x333>
  44501f:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
  445026:	00 
  445027:	83 7d bc 00          	cmpl   $0x0,-0x44(%rbp)
  44502b:	76 19                	jbe    445046 <mbedtls_base64_decode+0x2f6>
  44502d:	8b 45 b8             	mov    -0x48(%rbp),%eax
  445030:	c1 e8 10             	shr    $0x10,%eax
  445033:	88 c1                	mov    %al,%cl
  445035:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
  445039:	48 89 d6             	mov    %rdx,%rsi
  44503c:	48 83 c6 01          	add    $0x1,%rsi
  445040:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
  445044:	88 0a                	mov    %cl,(%rdx)
  445046:	83 7d bc 01          	cmpl   $0x1,-0x44(%rbp)
  44504a:	76 19                	jbe    445065 <mbedtls_base64_decode+0x315>
  44504c:	8b 45 b8             	mov    -0x48(%rbp),%eax
  44504f:	c1 e8 08             	shr    $0x8,%eax
  445052:	88 c1                	mov    %al,%cl
  445054:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
  445058:	48 89 d6             	mov    %rdx,%rsi
  44505b:	48 83 c6 01          	add    $0x1,%rsi
  44505f:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
  445063:	88 0a                	mov    %cl,(%rdx)
  445065:	83 7d bc 02          	cmpl   $0x2,-0x44(%rbp)
  445069:	76 16                	jbe    445081 <mbedtls_base64_decode+0x331>
  44506b:	8b 45 b8             	mov    -0x48(%rbp),%eax
  44506e:	88 c1                	mov    %al,%cl
  445070:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
  445074:	48 89 d6             	mov    %rdx,%rsi
  445077:	48 83 c6 01          	add    $0x1,%rsi
  44507b:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
  44507f:	88 0a                	mov    %cl,(%rdx)
  445081:	eb 00                	jmp    445083 <mbedtls_base64_decode+0x333>
  445083:	eb 00                	jmp    445085 <mbedtls_base64_decode+0x335>
  445085:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  445089:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
  44508d:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  445091:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  445095:	48 83 c0 01          	add    $0x1,%rax
  445099:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  44509d:	e9 f3 fe ff ff       	jmpq   444f95 <mbedtls_base64_decode+0x245>
  4450a2:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  4450a6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  4450aa:	48 29 c8             	sub    %rcx,%rax
  4450ad:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  4450b1:	48 89 01             	mov    %rax,(%rcx)
  4450b4:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  4450bb:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4450be:	89 45 a8             	mov    %eax,-0x58(%rbp)
  4450c1:	e8 90 08 00 00       	callq  445956 <writeback_cache>
  4450c6:	8b 45 a8             	mov    -0x58(%rbp),%eax
  4450c9:	48 83 c4 60          	add    $0x60,%rsp
  4450cd:	5d                   	pop    %rbp
  4450ce:	c3                   	retq   
  4450cf:	90                   	nop

00000000004450d0 <internal_memset>:
  4450d0:	55                   	push   %rbp
  4450d1:	48 89 e5             	mov    %rsp,%rbp
  4450d4:	48 83 ec 20          	sub    $0x20,%rsp
  4450d8:	88 c8                	mov    %cl,%al
  4450da:	41 88 f0             	mov    %sil,%r8b
  4450dd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4450e1:	44 88 45 f7          	mov    %r8b,-0x9(%rbp)
  4450e5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  4450e9:	24 01                	and    $0x1,%al
  4450eb:	88 45 e7             	mov    %al,-0x19(%rbp)
  4450ee:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  4450f3:	76 23                	jbe    445118 <internal_memset+0x48>
  4450f5:	8a 45 f7             	mov    -0x9(%rbp),%al
  4450f8:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  4450fc:	88 01                	mov    %al,(%rcx)
  4450fe:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  445102:	48 83 c1 01          	add    $0x1,%rcx
  445106:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
  44510a:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  44510e:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
  445112:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
  445116:	eb d6                	jmp    4450ee <internal_memset+0x1e>
  445118:	e8 39 08 00 00       	callq  445956 <writeback_cache>
  44511d:	48 83 c4 20          	add    $0x20,%rsp
  445121:	5d                   	pop    %rbp
  445122:	c3                   	retq   
  445123:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  44512a:	84 00 00 00 00 00 

0000000000445130 <internal_memcmp>:
  445130:	55                   	push   %rbp
  445131:	48 89 e5             	mov    %rsp,%rbp
  445134:	48 83 ec 30          	sub    $0x30,%rsp
  445138:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  44513c:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  445140:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
  445144:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  445149:	75 09                	jne    445154 <internal_memcmp+0x24>
  44514b:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  445152:	eb 69                	jmp    4451bd <internal_memcmp+0x8d>
  445154:	eb 00                	jmp    445156 <internal_memcmp+0x26>
  445156:	31 c0                	xor    %eax,%eax
  445158:	88 c1                	mov    %al,%cl
  44515a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  44515e:	48 83 c2 ff          	add    $0xffffffffffffffff,%rdx
  445162:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
  445166:	48 83 fa 00          	cmp    $0x0,%rdx
  44516a:	88 4d df             	mov    %cl,-0x21(%rbp)
  44516d:	74 18                	je     445187 <internal_memcmp+0x57>
  44516f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  445173:	0f be 08             	movsbl (%rax),%ecx
  445176:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  44517a:	0f be 10             	movsbl (%rax),%edx
  44517d:	39 d1                	cmp    %edx,%ecx
  44517f:	40 0f 94 c6          	sete   %sil
  445183:	40 88 75 df          	mov    %sil,-0x21(%rbp)
  445187:	8a 45 df             	mov    -0x21(%rbp),%al
  44518a:	a8 01                	test   $0x1,%al
  44518c:	75 02                	jne    445190 <internal_memcmp+0x60>
  44518e:	eb 1a                	jmp    4451aa <internal_memcmp+0x7a>
  445190:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  445194:	48 83 c0 01          	add    $0x1,%rax
  445198:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  44519c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4451a0:	48 83 c0 01          	add    $0x1,%rax
  4451a4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4451a8:	eb ac                	jmp    445156 <internal_memcmp+0x26>
  4451aa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4451ae:	0f b6 08             	movzbl (%rax),%ecx
  4451b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4451b5:	0f b6 10             	movzbl (%rax),%edx
  4451b8:	29 d1                	sub    %edx,%ecx
  4451ba:	89 4d fc             	mov    %ecx,-0x4(%rbp)
  4451bd:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4451c0:	89 45 d8             	mov    %eax,-0x28(%rbp)
  4451c3:	e8 8e 07 00 00       	callq  445956 <writeback_cache>
  4451c8:	8b 45 d8             	mov    -0x28(%rbp),%eax
  4451cb:	48 83 c4 30          	add    $0x30,%rsp
  4451cf:	5d                   	pop    %rbp
  4451d0:	c3                   	retq   
  4451d1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  4451d8:	0f 1f 84 00 00 00 00 
  4451df:	00 

00000000004451e0 <internal_memcpy>:
  4451e0:	55                   	push   %rbp
  4451e1:	48 89 e5             	mov    %rsp,%rbp
  4451e4:	48 83 ec 20          	sub    $0x20,%rsp
  4451e8:	88 c8                	mov    %cl,%al
  4451ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4451ee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  4451f2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  4451f6:	24 01                	and    $0x1,%al
  4451f8:	88 45 e7             	mov    %al,-0x19(%rbp)
  4451fb:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  445200:	76 32                	jbe    445234 <internal_memcpy+0x54>
  445202:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  445206:	8a 08                	mov    (%rax),%cl
  445208:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  44520c:	88 08                	mov    %cl,(%rax)
  44520e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  445212:	48 83 c0 01          	add    $0x1,%rax
  445216:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  44521a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  44521e:	48 83 c0 01          	add    $0x1,%rax
  445222:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  445226:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  44522a:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
  44522e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  445232:	eb c7                	jmp    4451fb <internal_memcpy+0x1b>
  445234:	e8 1d 07 00 00       	callq  445956 <writeback_cache>
  445239:	48 83 c4 20          	add    $0x20,%rsp
  44523d:	5d                   	pop    %rbp
  44523e:	c3                   	retq   
  44523f:	90                   	nop

0000000000445240 <internal_strlen>:
  445240:	55                   	push   %rbp
  445241:	48 89 e5             	mov    %rsp,%rbp
  445244:	48 83 ec 20          	sub    $0x20,%rsp
  445248:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  44524c:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  445253:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  445257:	0f be 08             	movsbl (%rax),%ecx
  44525a:	83 f9 00             	cmp    $0x0,%ecx
  44525d:	74 17                	je     445276 <internal_strlen+0x36>
  44525f:	8b 45 ec             	mov    -0x14(%rbp),%eax
  445262:	83 c0 01             	add    $0x1,%eax
  445265:	89 45 ec             	mov    %eax,-0x14(%rbp)
  445268:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  44526c:	48 83 c1 01          	add    $0x1,%rcx
  445270:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
  445274:	eb dd                	jmp    445253 <internal_strlen+0x13>
  445276:	8b 45 fc             	mov    -0x4(%rbp),%eax
  445279:	89 45 e8             	mov    %eax,-0x18(%rbp)
  44527c:	e8 d5 06 00 00       	callq  445956 <writeback_cache>
  445281:	8b 45 e8             	mov    -0x18(%rbp),%eax
  445284:	48 83 c4 20          	add    $0x20,%rsp
  445288:	5d                   	pop    %rbp
  445289:	c3                   	retq   
  44528a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000445290 <internal_strcat>:
  445290:	55                   	push   %rbp
  445291:	48 89 e5             	mov    %rsp,%rbp
  445294:	48 83 ec 40          	sub    $0x40,%rsp
  445298:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
  44529c:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
  4452a0:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  4452a4:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  4452a8:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  4452ac:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  4452b3:	48 89 75 c8          	mov    %rsi,-0x38(%rbp)
  4452b7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4452bb:	0f be 08             	movsbl (%rax),%ecx
  4452be:	83 f9 00             	cmp    $0x0,%ecx
  4452c1:	74 17                	je     4452da <internal_strcat+0x4a>
  4452c3:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4452c6:	83 c0 01             	add    $0x1,%eax
  4452c9:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4452cc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  4452d0:	48 83 c1 01          	add    $0x1,%rcx
  4452d4:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
  4452d8:	eb dd                	jmp    4452b7 <internal_strcat+0x27>
  4452da:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4452dd:	48 63 c8             	movslq %eax,%rcx
  4452e0:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  4452e4:	48 01 ca             	add    %rcx,%rdx
  4452e7:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
  4452eb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4452ef:	0f be 08             	movsbl (%rax),%ecx
  4452f2:	83 f9 00             	cmp    $0x0,%ecx
  4452f5:	74 24                	je     44531b <internal_strcat+0x8b>
  4452f7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4452fb:	48 89 c1             	mov    %rax,%rcx
  4452fe:	48 83 c1 01          	add    $0x1,%rcx
  445302:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  445306:	8a 10                	mov    (%rax),%dl
  445308:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  44530c:	48 89 c1             	mov    %rax,%rcx
  44530f:	48 83 c1 01          	add    $0x1,%rcx
  445313:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  445317:	88 10                	mov    %dl,(%rax)
  445319:	eb d0                	jmp    4452eb <internal_strcat+0x5b>
  44531b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  44531f:	c6 00 00             	movb   $0x0,(%rax)
  445322:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  445326:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  44532a:	e8 27 06 00 00       	callq  445956 <writeback_cache>
  44532f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  445333:	48 83 c4 40          	add    $0x40,%rsp
  445337:	5d                   	pop    %rbp
  445338:	c3                   	retq   
  445339:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000445340 <internal_strcpy>:
  445340:	55                   	push   %rbp
  445341:	48 89 e5             	mov    %rsp,%rbp
  445344:	48 83 ec 30          	sub    $0x30,%rsp
  445348:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  44534c:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  445350:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  445355:	75 0a                	jne    445361 <internal_strcpy+0x21>
  445357:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  44535e:	00 
  44535f:	eb 49                	jmp    4453aa <internal_strcpy+0x6a>
  445361:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  445365:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  445369:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  44536d:	0f be 08             	movsbl (%rax),%ecx
  445370:	83 f9 00             	cmp    $0x0,%ecx
  445373:	74 26                	je     44539b <internal_strcpy+0x5b>
  445375:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  445379:	8a 08                	mov    (%rax),%cl
  44537b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  44537f:	88 08                	mov    %cl,(%rax)
  445381:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  445385:	48 83 c0 01          	add    $0x1,%rax
  445389:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  44538d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  445391:	48 83 c0 01          	add    $0x1,%rax
  445395:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  445399:	eb ce                	jmp    445369 <internal_strcpy+0x29>
  44539b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  44539f:	c6 00 00             	movb   $0x0,(%rax)
  4453a2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4453a6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4453aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4453ae:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  4453b2:	e8 9f 05 00 00       	callq  445956 <writeback_cache>
  4453b7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4453bb:	48 83 c4 30          	add    $0x30,%rsp
  4453bf:	5d                   	pop    %rbp
  4453c0:	c3                   	retq   
  4453c1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  4453c8:	0f 1f 84 00 00 00 00 
  4453cf:	00 

00000000004453d0 <internal_strcmp>:
  4453d0:	55                   	push   %rbp
  4453d1:	48 89 e5             	mov    %rsp,%rbp
  4453d4:	48 83 ec 20          	sub    $0x20,%rsp
  4453d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4453dc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  4453e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4453e4:	80 38 00             	cmpb   $0x0,(%rax)
  4453e7:	74 2e                	je     445417 <internal_strcmp+0x47>
  4453e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4453ed:	0f be 08             	movsbl (%rax),%ecx
  4453f0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4453f4:	0f be 10             	movsbl (%rax),%edx
  4453f7:	39 d1                	cmp    %edx,%ecx
  4453f9:	74 02                	je     4453fd <internal_strcmp+0x2d>
  4453fb:	eb 1a                	jmp    445417 <internal_strcmp+0x47>
  4453fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  445401:	48 83 c0 01          	add    $0x1,%rax
  445405:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  445409:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  44540d:	48 83 c0 01          	add    $0x1,%rax
  445411:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  445415:	eb c9                	jmp    4453e0 <internal_strcmp+0x10>
  445417:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  44541b:	0f b6 08             	movzbl (%rax),%ecx
  44541e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  445422:	0f b6 10             	movzbl (%rax),%edx
  445425:	29 d1                	sub    %edx,%ecx
  445427:	89 4d ec             	mov    %ecx,-0x14(%rbp)
  44542a:	e8 27 05 00 00       	callq  445956 <writeback_cache>
  44542f:	8b 45 ec             	mov    -0x14(%rbp),%eax
  445432:	48 83 c4 20          	add    $0x20,%rsp
  445436:	5d                   	pop    %rbp
  445437:	c3                   	retq   
  445438:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  44543f:	00 

0000000000445440 <strstr>:
  445440:	55                   	push   %rbp
  445441:	48 89 e5             	mov    %rsp,%rbp
  445444:	48 83 ec 40          	sub    $0x40,%rsp
  445448:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  44544c:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  445450:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  445454:	80 38 00             	cmpb   $0x0,(%rax)
  445457:	0f 84 95 00 00 00    	je     4454f2 <strstr+0xb2>
  44545d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  445461:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  445465:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  445469:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  44546d:	31 c0                	xor    %eax,%eax
  44546f:	88 c1                	mov    %al,%cl
  445471:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  445475:	0f be 02             	movsbl (%rdx),%eax
  445478:	83 f8 00             	cmp    $0x0,%eax
  44547b:	88 4d d7             	mov    %cl,-0x29(%rbp)
  44547e:	74 2b                	je     4454ab <strstr+0x6b>
  445480:	31 c0                	xor    %eax,%eax
  445482:	88 c1                	mov    %al,%cl
  445484:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  445488:	0f be 02             	movsbl (%rdx),%eax
  44548b:	83 f8 00             	cmp    $0x0,%eax
  44548e:	88 4d d7             	mov    %cl,-0x29(%rbp)
  445491:	74 18                	je     4454ab <strstr+0x6b>
  445493:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  445497:	0f be 08             	movsbl (%rax),%ecx
  44549a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  44549e:	0f be 10             	movsbl (%rax),%edx
  4454a1:	39 d1                	cmp    %edx,%ecx
  4454a3:	40 0f 94 c6          	sete   %sil
  4454a7:	40 88 75 d7          	mov    %sil,-0x29(%rbp)
  4454ab:	8a 45 d7             	mov    -0x29(%rbp),%al
  4454ae:	a8 01                	test   $0x1,%al
  4454b0:	75 02                	jne    4454b4 <strstr+0x74>
  4454b2:	eb 1a                	jmp    4454ce <strstr+0x8e>
  4454b4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4454b8:	48 83 c0 01          	add    $0x1,%rax
  4454bc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4454c0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4454c4:	48 83 c0 01          	add    $0x1,%rax
  4454c8:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  4454cc:	eb 9f                	jmp    44546d <strstr+0x2d>
  4454ce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4454d2:	80 38 00             	cmpb   $0x0,(%rax)
  4454d5:	75 0a                	jne    4454e1 <strstr+0xa1>
  4454d7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4454db:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4454df:	eb 19                	jmp    4454fa <strstr+0xba>
  4454e1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4454e5:	48 83 c0 01          	add    $0x1,%rax
  4454e9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4454ed:	e9 5e ff ff ff       	jmpq   445450 <strstr+0x10>
  4454f2:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  4454f9:	00 
  4454fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4454fe:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  445502:	e8 4f 04 00 00       	callq  445956 <writeback_cache>
  445507:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  44550b:	48 83 c4 40          	add    $0x40,%rsp
  44550f:	5d                   	pop    %rbp
  445510:	c3                   	retq   

0000000000445511 <populate_keys>:
  445511:	49 c7 c2 62 62 62 62 	mov    $0x62626262,%r10
  445518:	66 4d 0f 3a 22 fa 00 	pinsrq $0x0,%r10,%xmm15
  44551f:	49 c7 c2 00 00 00 00 	mov    $0x0,%r10
  445526:	66 4d 0f 3a 22 fa 01 	pinsrq $0x1,%r10,%xmm15
  44552d:	c4 c3 55 38 ef 01    	vinserti128 $0x1,%xmm15,%ymm5,%ymm5
  445533:	49 ba 00 01 01 01 00 	movabs $0x101010001010100,%r10
  44553a:	01 01 01 
  44553d:	66 4d 0f 3a 22 fa 00 	pinsrq $0x0,%r10,%xmm15
  445544:	49 ba 00 01 01 01 00 	movabs $0x101010001010100,%r10
  44554b:	01 01 01 
  44554e:	66 4d 0f 3a 22 fa 01 	pinsrq $0x1,%r10,%xmm15
  445555:	c4 c3 4d 38 f7 01    	vinserti128 $0x1,%xmm15,%ymm6,%ymm6
  44555b:	49 ba 7e 7d 7d 62 7e 	movabs $0x637c7c7e627d7d7e,%r10
  445562:	7c 7c 63 
  445565:	66 4d 0f 3a 22 fa 00 	pinsrq $0x0,%r10,%xmm15
  44556c:	49 ba 7e 7d 7d 62 7e 	movabs $0x637c7c7e627d7d7e,%r10
  445573:	7c 7c 63 
  445576:	66 4d 0f 3a 22 fa 01 	pinsrq $0x1,%r10,%xmm15
  44557d:	c4 c3 45 38 ff 01    	vinserti128 $0x1,%xmm15,%ymm7,%ymm7
  445583:	49 ba 6a 6d 86 91 14 	movabs $0xf2fa111491866d6a,%r10
  44558a:	11 fa f2 
  44558d:	66 4d 0f 3a 22 fa 00 	pinsrq $0x0,%r10,%xmm15
  445594:	49 ba 6a 6c 87 90 14 	movabs $0xf3fb101490876c6a,%r10
  44559b:	10 fb f3 
  44559e:	66 4d 0f 3a 22 fa 01 	pinsrq $0x1,%r10,%xmm15
  4455a5:	c4 43 3d 38 c7 01    	vinserti128 $0x1,%xmm15,%ymm8,%ymm8
  4455ab:	49 ba a8 62 8b 6b bc 	movabs $0x997173bc6b8b62a8,%r10
  4455b2:	73 71 99 
  4455b5:	66 4d 0f 3a 22 fa 00 	pinsrq $0x0,%r10,%xmm15
  4455bc:	49 ba d6 1f f6 09 c2 	movabs $0xfa0d0fc209f61fd6,%r10
  4455c3:	0f 0d fa 
  4455c6:	66 4d 0f 3a 22 fa 01 	pinsrq $0x1,%r10,%xmm15
  4455cd:	c4 43 35 38 cf 01    	vinserti128 $0x1,%xmm15,%ymm9,%ymm9
  4455d3:	49 ba ce b5 a6 4e 72 	movabs $0xd7d7c6724ea6b5ce,%r10
  4455da:	c6 d7 d7 
  4455dd:	66 4d 0f 3a 22 fa 00 	pinsrq $0x0,%r10,%xmm15
  4455e4:	49 ba a4 d9 21 de 66 	movabs $0x242cd666de21d9a4,%r10
  4455eb:	d6 2c 24 
  4455ee:	66 4d 0f 3a 22 fa 01 	pinsrq $0x1,%r10,%xmm15
  4455f5:	c4 43 2d 38 d7 01    	vinserti128 $0x1,%xmm15,%ymm10,%ymm10
  4455fb:	49 ba 18 c4 90 7d 6a 	movabs $0xaa47026a7d90c418,%r10
  445602:	02 47 aa 
  445605:	66 4d 0f 3a 22 fa 00 	pinsrq $0x0,%r10,%xmm15
  44560c:	49 ba ce db 66 74 a8 	movabs $0x504a0da87466dbce,%r10
  445613:	0d 4a 50 
  445616:	66 4d 0f 3a 22 fa 01 	pinsrq $0x1,%r10,%xmm15
  44561d:	c4 43 25 38 df 01    	vinserti128 $0x1,%xmm15,%ymm11,%ymm11
  445623:	49 ba 8f 12 c3 bf e5 	movabs $0x158410e5bfc3128f,%r10
  44562a:	10 84 15 
  44562d:	66 4d 0f 3a 22 fa 00 	pinsrq $0x0,%r10,%xmm15
  445634:	49 ba 2b cb e2 61 83 	movabs $0x31a8c68361e2cb2b,%r10
  44563b:	c6 a8 31 
  44563e:	66 4d 0f 3a 22 fa 01 	pinsrq $0x1,%r10,%xmm15
  445645:	c4 43 1d 38 e7 01    	vinserti128 $0x1,%xmm15,%ymm12,%ymm12
  44564b:	49 ba bb d0 04 53 5e 	movabs $0x4680c05e5304d0bb,%r10
  445652:	c0 80 46 
  445655:	66 4d 0f 3a 22 fa 00 	pinsrq $0x0,%r10,%xmm15
  44565c:	49 ba 75 0b 62 27 f6 	movabs $0x16cacdf627620b75,%r10
  445663:	cd ca 16 
  445666:	66 4d 0f 3a 22 fa 01 	pinsrq $0x1,%r10,%xmm15
  44566d:	c4 43 15 38 ef 01    	vinserti128 $0x1,%xmm15,%ymm13,%ymm13
  445673:	49 ba 1d a4 43 11 43 	movabs $0x57c364431143a41d,%r10
  44567a:	64 c3 57 
  44567d:	66 4d 0f 3a 22 fa 00 	pinsrq $0x0,%r10,%xmm15
  445684:	49 ba 36 6f a1 70 c0 	movabs $0x666ba2c070a16f36,%r10
  44568b:	a2 6b 66 
  44568e:	66 4d 0f 3a 22 fa 01 	pinsrq $0x1,%r10,%xmm15
  445695:	c4 43 0d 38 f7 01    	vinserti128 $0x1,%xmm15,%ymm14,%ymm14
  44569b:	49 ba 11 db 70 ab 52 	movabs $0xfcb3bf52ab70db11,%r10
  4456a2:	bf b3 fc 
  4456a5:	66 4d 0f 3a 22 fa 00 	pinsrq $0x0,%r10,%xmm15
  4456ac:	49 ba 64 d0 12 8c a4 	movabs $0xea7972a48c12d064,%r10
  4456b3:	72 79 ea 
  4456b6:	66 4d 0f 3a 22 fa 01 	pinsrq $0x1,%r10,%xmm15
  4456bd:	c4 43 05 38 ff 01    	vinserti128 $0x1,%xmm15,%ymm15,%ymm15
  4456c3:	c3                   	retq   

00000000004456c4 <decrypt_cache>:
  4456c4:	f3 44 0f 6f 37       	movdqu (%rdi),%xmm14
  4456c9:	c4 63 7d 39 f8 01    	vextracti128 $0x1,%ymm15,%xmm0
  4456cf:	66 44 0f ef f0       	pxor   %xmm0,%xmm14
  4456d4:	c4 63 7d 39 f0 01    	vextracti128 $0x1,%ymm14,%xmm0
  4456da:	c4 e2 79 db c0       	vaesimc %xmm0,%xmm0
  4456df:	66 44 0f 38 de f0    	aesdec %xmm0,%xmm14
  4456e5:	c4 63 7d 39 e8 01    	vextracti128 $0x1,%ymm13,%xmm0
  4456eb:	c4 e2 79 db c0       	vaesimc %xmm0,%xmm0
  4456f0:	66 44 0f 38 de f0    	aesdec %xmm0,%xmm14
  4456f6:	c4 63 7d 39 e0 01    	vextracti128 $0x1,%ymm12,%xmm0
  4456fc:	c4 e2 79 db c0       	vaesimc %xmm0,%xmm0
  445701:	66 44 0f 38 de f0    	aesdec %xmm0,%xmm14
  445707:	c4 63 7d 39 d8 01    	vextracti128 $0x1,%ymm11,%xmm0
  44570d:	c4 e2 79 db c0       	vaesimc %xmm0,%xmm0
  445712:	66 44 0f 38 de f0    	aesdec %xmm0,%xmm14
  445718:	c4 63 7d 39 d0 01    	vextracti128 $0x1,%ymm10,%xmm0
  44571e:	c4 e2 79 db c0       	vaesimc %xmm0,%xmm0
  445723:	66 44 0f 38 de f0    	aesdec %xmm0,%xmm14
  445729:	c4 63 7d 39 c8 01    	vextracti128 $0x1,%ymm9,%xmm0
  44572f:	c4 e2 79 db c0       	vaesimc %xmm0,%xmm0
  445734:	66 44 0f 38 de f0    	aesdec %xmm0,%xmm14
  44573a:	c4 63 7d 39 c0 01    	vextracti128 $0x1,%ymm8,%xmm0
  445740:	c4 e2 79 db c0       	vaesimc %xmm0,%xmm0
  445745:	66 44 0f 38 de f0    	aesdec %xmm0,%xmm14
  44574b:	c4 e3 7d 39 f8 01    	vextracti128 $0x1,%ymm7,%xmm0
  445751:	c4 e2 79 db c0       	vaesimc %xmm0,%xmm0
  445756:	66 44 0f 38 de f0    	aesdec %xmm0,%xmm14
  44575c:	c4 e3 7d 39 f0 01    	vextracti128 $0x1,%ymm6,%xmm0
  445762:	c4 e2 79 db c0       	vaesimc %xmm0,%xmm0
  445767:	66 44 0f 38 de f0    	aesdec %xmm0,%xmm14
  44576d:	c4 e3 7d 39 e8 01    	vextracti128 $0x1,%ymm5,%xmm0
  445773:	66 44 0f 38 df f0    	aesdeclast %xmm0,%xmm14
  445779:	66 45 0f 6f fe       	movdqa %xmm14,%xmm15
  44577e:	c3                   	retq   

000000000044577f <encrypt_cache>:
  44577f:	66 45 0f 6f f7       	movdqa %xmm15,%xmm14
  445784:	c4 e3 7d 39 e8 01    	vextracti128 $0x1,%ymm5,%xmm0
  44578a:	66 44 0f ef f0       	pxor   %xmm0,%xmm14
  44578f:	c4 e3 7d 39 f0 01    	vextracti128 $0x1,%ymm6,%xmm0
  445795:	66 44 0f 38 dc f0    	aesenc %xmm0,%xmm14
  44579b:	c4 e3 7d 39 f8 01    	vextracti128 $0x1,%ymm7,%xmm0
  4457a1:	66 44 0f 38 dc f0    	aesenc %xmm0,%xmm14
  4457a7:	c4 63 7d 39 c0 01    	vextracti128 $0x1,%ymm8,%xmm0
  4457ad:	66 44 0f 38 dc f0    	aesenc %xmm0,%xmm14
  4457b3:	c4 63 7d 39 c8 01    	vextracti128 $0x1,%ymm9,%xmm0
  4457b9:	66 44 0f 38 dc f0    	aesenc %xmm0,%xmm14
  4457bf:	c4 63 7d 39 d0 01    	vextracti128 $0x1,%ymm10,%xmm0
  4457c5:	66 44 0f 38 dc f0    	aesenc %xmm0,%xmm14
  4457cb:	c4 63 7d 39 d8 01    	vextracti128 $0x1,%ymm11,%xmm0
  4457d1:	66 44 0f 38 dc f0    	aesenc %xmm0,%xmm14
  4457d7:	c4 63 7d 39 e0 01    	vextracti128 $0x1,%ymm12,%xmm0
  4457dd:	66 44 0f 38 dc f0    	aesenc %xmm0,%xmm14
  4457e3:	c4 63 7d 39 e8 01    	vextracti128 $0x1,%ymm13,%xmm0
  4457e9:	66 44 0f 38 dc f0    	aesenc %xmm0,%xmm14
  4457ef:	c4 63 7d 39 f0 01    	vextracti128 $0x1,%ymm14,%xmm0
  4457f5:	66 44 0f 38 dc f0    	aesenc %xmm0,%xmm14
  4457fb:	c4 63 7d 39 f8 01    	vextracti128 $0x1,%ymm15,%xmm0
  445801:	66 44 0f 38 dd f0    	aesenclast %xmm0,%xmm14
  445807:	f3 44 0f 7f 37       	movdqu %xmm14,(%rdi)
  44580c:	c3                   	retq   

000000000044580d <encrypt_memory>:
  44580d:	f3 44 0f 6f 37       	movdqu (%rdi),%xmm14
  445812:	c4 e3 7d 39 e8 01    	vextracti128 $0x1,%ymm5,%xmm0
  445818:	66 44 0f ef f0       	pxor   %xmm0,%xmm14
  44581d:	c4 e3 7d 39 f0 01    	vextracti128 $0x1,%ymm6,%xmm0
  445823:	66 44 0f 38 dc f0    	aesenc %xmm0,%xmm14
  445829:	c4 e3 7d 39 f8 01    	vextracti128 $0x1,%ymm7,%xmm0
  44582f:	66 44 0f 38 dc f0    	aesenc %xmm0,%xmm14
  445835:	c4 63 7d 39 c0 01    	vextracti128 $0x1,%ymm8,%xmm0
  44583b:	66 44 0f 38 dc f0    	aesenc %xmm0,%xmm14
  445841:	c4 63 7d 39 c8 01    	vextracti128 $0x1,%ymm9,%xmm0
  445847:	66 44 0f 38 dc f0    	aesenc %xmm0,%xmm14
  44584d:	c4 63 7d 39 d0 01    	vextracti128 $0x1,%ymm10,%xmm0
  445853:	66 44 0f 38 dc f0    	aesenc %xmm0,%xmm14
  445859:	c4 63 7d 39 d8 01    	vextracti128 $0x1,%ymm11,%xmm0
  44585f:	66 44 0f 38 dc f0    	aesenc %xmm0,%xmm14
  445865:	c4 63 7d 39 e0 01    	vextracti128 $0x1,%ymm12,%xmm0
  44586b:	66 44 0f 38 dc f0    	aesenc %xmm0,%xmm14
  445871:	c4 63 7d 39 e8 01    	vextracti128 $0x1,%ymm13,%xmm0
  445877:	66 44 0f 38 dc f0    	aesenc %xmm0,%xmm14
  44587d:	c4 63 7d 39 f0 01    	vextracti128 $0x1,%ymm14,%xmm0
  445883:	66 44 0f 38 dc f0    	aesenc %xmm0,%xmm14
  445889:	c4 63 7d 39 f8 01    	vextracti128 $0x1,%ymm15,%xmm0
  44588f:	66 44 0f 38 dd f0    	aesenclast %xmm0,%xmm14
  445895:	f3 44 0f 7f 37       	movdqu %xmm14,(%rdi)
  44589a:	c3                   	retq   

000000000044589b <decrypt_memory>:
  44589b:	f3 44 0f 6f 37       	movdqu (%rdi),%xmm14
  4458a0:	c4 63 7d 39 f8 01    	vextracti128 $0x1,%ymm15,%xmm0
  4458a6:	66 44 0f ef f0       	pxor   %xmm0,%xmm14
  4458ab:	c4 63 7d 39 f0 01    	vextracti128 $0x1,%ymm14,%xmm0
  4458b1:	66 0f 38 db c0       	aesimc %xmm0,%xmm0
  4458b6:	66 44 0f 38 de f0    	aesdec %xmm0,%xmm14
  4458bc:	c4 63 7d 39 e8 01    	vextracti128 $0x1,%ymm13,%xmm0
  4458c2:	66 0f 38 db c0       	aesimc %xmm0,%xmm0
  4458c7:	66 44 0f 38 de f0    	aesdec %xmm0,%xmm14
  4458cd:	c4 63 7d 39 e0 01    	vextracti128 $0x1,%ymm12,%xmm0
  4458d3:	66 0f 38 db c0       	aesimc %xmm0,%xmm0
  4458d8:	66 44 0f 38 de f0    	aesdec %xmm0,%xmm14
  4458de:	c4 63 7d 39 d8 01    	vextracti128 $0x1,%ymm11,%xmm0
  4458e4:	66 0f 38 db c0       	aesimc %xmm0,%xmm0
  4458e9:	66 44 0f 38 de f0    	aesdec %xmm0,%xmm14
  4458ef:	c4 63 7d 39 d0 01    	vextracti128 $0x1,%ymm10,%xmm0
  4458f5:	66 0f 38 db c0       	aesimc %xmm0,%xmm0
  4458fa:	66 44 0f 38 de f0    	aesdec %xmm0,%xmm14
  445900:	c4 63 7d 39 c8 01    	vextracti128 $0x1,%ymm9,%xmm0
  445906:	66 0f 38 db c0       	aesimc %xmm0,%xmm0
  44590b:	66 44 0f 38 de f0    	aesdec %xmm0,%xmm14
  445911:	c4 63 7d 39 c0 01    	vextracti128 $0x1,%ymm8,%xmm0
  445917:	66 0f 38 db c0       	aesimc %xmm0,%xmm0
  44591c:	66 44 0f 38 de f0    	aesdec %xmm0,%xmm14
  445922:	c4 e3 7d 39 f8 01    	vextracti128 $0x1,%ymm7,%xmm0
  445928:	66 0f 38 db c0       	aesimc %xmm0,%xmm0
  44592d:	66 44 0f 38 de f0    	aesdec %xmm0,%xmm14
  445933:	c4 e3 7d 39 f0 01    	vextracti128 $0x1,%ymm6,%xmm0
  445939:	66 0f 38 db c0       	aesimc %xmm0,%xmm0
  44593e:	66 44 0f 38 de f0    	aesdec %xmm0,%xmm14
  445944:	c4 e3 7d 39 e8 01    	vextracti128 $0x1,%ymm5,%xmm0
  44594a:	66 44 0f 38 df f0    	aesdeclast %xmm0,%xmm14
  445950:	f3 44 0f 7f 37       	movdqu %xmm14,(%rdi)
  445955:	c3                   	retq   

0000000000445956 <writeback_cache>:
  445956:	55                   	push   %rbp
  445957:	48 89 e5             	mov    %rsp,%rbp
  44595a:	48 8b 05 cf fd 00 00 	mov    0xfdcf(%rip),%rax        # 455730 <lastAddr>
  445961:	48 85 c0             	test   %rax,%rax
  445964:	74 19                	je     44597f <writeback_cache+0x29>
  445966:	8b 05 e4 fd 00 00    	mov    0xfde4(%rip),%eax        # 455750 <dirty>
  44596c:	85 c0                	test   %eax,%eax
  44596e:	74 0f                	je     44597f <writeback_cache+0x29>
  445970:	48 8b 05 b9 fd 00 00 	mov    0xfdb9(%rip),%rax        # 455730 <lastAddr>
  445977:	48 89 c7             	mov    %rax,%rdi
  44597a:	e8 00 fe ff ff       	callq  44577f <encrypt_cache>
  44597f:	48 c7 05 a6 fd 00 00 	movq   $0x0,0xfda6(%rip)        # 455730 <lastAddr>
  445986:	00 00 00 00 
  44598a:	c7 05 bc fd 00 00 00 	movl   $0x0,0xfdbc(%rip)        # 455750 <dirty>
  445991:	00 00 00 
  445994:	90                   	nop
  445995:	5d                   	pop    %rbp
  445996:	c3                   	retq   

0000000000445997 <setEncryptedValueByte>:
  445997:	55                   	push   %rbp
  445998:	48 89 e5             	mov    %rsp,%rbp
  44599b:	48 83 ec 20          	sub    $0x20,%rsp
  44599f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4459a3:	89 f0                	mov    %esi,%eax
  4459a5:	88 45 e4             	mov    %al,-0x1c(%rbp)
  4459a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4459ac:	83 e0 0f             	and    $0xf,%eax
  4459af:	89 45 f0             	mov    %eax,-0x10(%rbp)
  4459b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4459b6:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
  4459ba:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4459be:	48 8b 05 6b fd 00 00 	mov    0xfd6b(%rip),%rax        # 455730 <lastAddr>
  4459c5:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
  4459c9:	74 3c                	je     445a07 <setEncryptedValueByte+0x70>
  4459cb:	48 8b 05 5e fd 00 00 	mov    0xfd5e(%rip),%rax        # 455730 <lastAddr>
  4459d2:	48 85 c0             	test   %rax,%rax
  4459d5:	74 19                	je     4459f0 <setEncryptedValueByte+0x59>
  4459d7:	8b 05 73 fd 00 00    	mov    0xfd73(%rip),%eax        # 455750 <dirty>
  4459dd:	85 c0                	test   %eax,%eax
  4459df:	74 0f                	je     4459f0 <setEncryptedValueByte+0x59>
  4459e1:	48 8b 05 48 fd 00 00 	mov    0xfd48(%rip),%rax        # 455730 <lastAddr>
  4459e8:	48 89 c7             	mov    %rax,%rdi
  4459eb:	e8 8f fd ff ff       	callq  44577f <encrypt_cache>
  4459f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4459f4:	48 89 05 35 fd 00 00 	mov    %rax,0xfd35(%rip)        # 455730 <lastAddr>
  4459fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4459ff:	48 89 c7             	mov    %rax,%rdi
  445a02:	e8 bd fc ff ff       	callq  4456c4 <decrypt_cache>
  445a07:	0f b6 45 e4          	movzbl -0x1c(%rbp),%eax
  445a0b:	89 45 f4             	mov    %eax,-0xc(%rbp)
  445a0e:	c7 05 38 fd 00 00 01 	movl   $0x1,0xfd38(%rip)        # 455750 <dirty>
  445a15:	00 00 00 
  445a18:	83 7d f0 0f          	cmpl   $0xf,-0x10(%rbp)
  445a1c:	0f 87 db 00 00 00    	ja     445afd <setEncryptedValueByte+0x166>
  445a22:	8b 45 f0             	mov    -0x10(%rbp),%eax
  445a25:	48 8b 04 c5 78 e5 44 	mov    0x44e578(,%rax,8),%rax
  445a2c:	00 
  445a2d:	ff e0                	jmpq   *%rax
  445a2f:	8b 45 f4             	mov    -0xc(%rbp),%eax
  445a32:	66 44 0f 3a 20 f8 00 	pinsrb $0x0,%eax,%xmm15
  445a39:	e9 bf 00 00 00       	jmpq   445afd <setEncryptedValueByte+0x166>
  445a3e:	8b 45 f4             	mov    -0xc(%rbp),%eax
  445a41:	66 44 0f 3a 20 f8 01 	pinsrb $0x1,%eax,%xmm15
  445a48:	e9 b0 00 00 00       	jmpq   445afd <setEncryptedValueByte+0x166>
  445a4d:	8b 45 f4             	mov    -0xc(%rbp),%eax
  445a50:	66 44 0f 3a 20 f8 02 	pinsrb $0x2,%eax,%xmm15
  445a57:	e9 a1 00 00 00       	jmpq   445afd <setEncryptedValueByte+0x166>
  445a5c:	8b 45 f4             	mov    -0xc(%rbp),%eax
  445a5f:	66 44 0f 3a 20 f8 03 	pinsrb $0x3,%eax,%xmm15
  445a66:	e9 92 00 00 00       	jmpq   445afd <setEncryptedValueByte+0x166>
  445a6b:	8b 45 f4             	mov    -0xc(%rbp),%eax
  445a6e:	66 44 0f 3a 20 f8 04 	pinsrb $0x4,%eax,%xmm15
  445a75:	e9 83 00 00 00       	jmpq   445afd <setEncryptedValueByte+0x166>
  445a7a:	8b 45 f4             	mov    -0xc(%rbp),%eax
  445a7d:	66 44 0f 3a 20 f8 05 	pinsrb $0x5,%eax,%xmm15
  445a84:	eb 77                	jmp    445afd <setEncryptedValueByte+0x166>
  445a86:	8b 45 f4             	mov    -0xc(%rbp),%eax
  445a89:	66 44 0f 3a 20 f8 06 	pinsrb $0x6,%eax,%xmm15
  445a90:	eb 6b                	jmp    445afd <setEncryptedValueByte+0x166>
  445a92:	8b 45 f4             	mov    -0xc(%rbp),%eax
  445a95:	66 44 0f 3a 20 f8 07 	pinsrb $0x7,%eax,%xmm15
  445a9c:	eb 5f                	jmp    445afd <setEncryptedValueByte+0x166>
  445a9e:	8b 45 f4             	mov    -0xc(%rbp),%eax
  445aa1:	66 44 0f 3a 20 f8 08 	pinsrb $0x8,%eax,%xmm15
  445aa8:	eb 53                	jmp    445afd <setEncryptedValueByte+0x166>
  445aaa:	8b 45 f4             	mov    -0xc(%rbp),%eax
  445aad:	66 44 0f 3a 20 f8 09 	pinsrb $0x9,%eax,%xmm15
  445ab4:	eb 47                	jmp    445afd <setEncryptedValueByte+0x166>
  445ab6:	8b 45 f4             	mov    -0xc(%rbp),%eax
  445ab9:	66 44 0f 3a 20 f8 0a 	pinsrb $0xa,%eax,%xmm15
  445ac0:	eb 3b                	jmp    445afd <setEncryptedValueByte+0x166>
  445ac2:	8b 45 f4             	mov    -0xc(%rbp),%eax
  445ac5:	66 44 0f 3a 20 f8 0b 	pinsrb $0xb,%eax,%xmm15
  445acc:	eb 2f                	jmp    445afd <setEncryptedValueByte+0x166>
  445ace:	8b 45 f4             	mov    -0xc(%rbp),%eax
  445ad1:	66 44 0f 3a 20 f8 0c 	pinsrb $0xc,%eax,%xmm15
  445ad8:	eb 23                	jmp    445afd <setEncryptedValueByte+0x166>
  445ada:	8b 45 f4             	mov    -0xc(%rbp),%eax
  445add:	66 44 0f 3a 20 f8 0d 	pinsrb $0xd,%eax,%xmm15
  445ae4:	eb 17                	jmp    445afd <setEncryptedValueByte+0x166>
  445ae6:	8b 45 f4             	mov    -0xc(%rbp),%eax
  445ae9:	66 44 0f 3a 20 f8 0e 	pinsrb $0xe,%eax,%xmm15
  445af0:	eb 0b                	jmp    445afd <setEncryptedValueByte+0x166>
  445af2:	8b 45 f4             	mov    -0xc(%rbp),%eax
  445af5:	66 44 0f 3a 20 f8 0f 	pinsrb $0xf,%eax,%xmm15
  445afc:	90                   	nop
  445afd:	90                   	nop
  445afe:	c9                   	leaveq 
  445aff:	c3                   	retq   

0000000000445b00 <setEncryptedValueWord>:
  445b00:	55                   	push   %rbp
  445b01:	48 89 e5             	mov    %rsp,%rbp
  445b04:	48 83 ec 20          	sub    $0x20,%rsp
  445b08:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  445b0c:	89 f0                	mov    %esi,%eax
  445b0e:	66 89 45 e4          	mov    %ax,-0x1c(%rbp)
  445b12:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  445b16:	83 e0 0f             	and    $0xf,%eax
  445b19:	89 45 f0             	mov    %eax,-0x10(%rbp)
  445b1c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  445b20:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
  445b24:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  445b28:	48 8b 05 01 fc 00 00 	mov    0xfc01(%rip),%rax        # 455730 <lastAddr>
  445b2f:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
  445b33:	74 3c                	je     445b71 <setEncryptedValueWord+0x71>
  445b35:	48 8b 05 f4 fb 00 00 	mov    0xfbf4(%rip),%rax        # 455730 <lastAddr>
  445b3c:	48 85 c0             	test   %rax,%rax
  445b3f:	74 19                	je     445b5a <setEncryptedValueWord+0x5a>
  445b41:	8b 05 09 fc 00 00    	mov    0xfc09(%rip),%eax        # 455750 <dirty>
  445b47:	85 c0                	test   %eax,%eax
  445b49:	74 0f                	je     445b5a <setEncryptedValueWord+0x5a>
  445b4b:	48 8b 05 de fb 00 00 	mov    0xfbde(%rip),%rax        # 455730 <lastAddr>
  445b52:	48 89 c7             	mov    %rax,%rdi
  445b55:	e8 25 fc ff ff       	callq  44577f <encrypt_cache>
  445b5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  445b5e:	48 89 05 cb fb 00 00 	mov    %rax,0xfbcb(%rip)        # 455730 <lastAddr>
  445b65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  445b69:	48 89 c7             	mov    %rax,%rdi
  445b6c:	e8 53 fb ff ff       	callq  4456c4 <decrypt_cache>
  445b71:	c7 05 d5 fb 00 00 01 	movl   $0x1,0xfbd5(%rip)        # 455750 <dirty>
  445b78:	00 00 00 
  445b7b:	8b 45 f0             	mov    -0x10(%rbp),%eax
  445b7e:	89 c2                	mov    %eax,%edx
  445b80:	c1 ea 1f             	shr    $0x1f,%edx
  445b83:	01 d0                	add    %edx,%eax
  445b85:	d1 f8                	sar    %eax
  445b87:	89 45 f0             	mov    %eax,-0x10(%rbp)
  445b8a:	0f b7 45 e4          	movzwl -0x1c(%rbp),%eax
  445b8e:	89 45 f4             	mov    %eax,-0xc(%rbp)
  445b91:	83 7d f0 07          	cmpl   $0x7,-0x10(%rbp)
  445b95:	77 64                	ja     445bfb <setEncryptedValueWord+0xfb>
  445b97:	8b 45 f0             	mov    -0x10(%rbp),%eax
  445b9a:	48 8b 04 c5 f8 e5 44 	mov    0x44e5f8(,%rax,8),%rax
  445ba1:	00 
  445ba2:	ff e0                	jmpq   *%rax
  445ba4:	8b 45 f4             	mov    -0xc(%rbp),%eax
  445ba7:	66 44 0f c4 f8 00    	pinsrw $0x0,%eax,%xmm15
  445bad:	eb 4c                	jmp    445bfb <setEncryptedValueWord+0xfb>
  445baf:	8b 45 f4             	mov    -0xc(%rbp),%eax
  445bb2:	66 44 0f c4 f8 01    	pinsrw $0x1,%eax,%xmm15
  445bb8:	eb 41                	jmp    445bfb <setEncryptedValueWord+0xfb>
  445bba:	8b 45 f4             	mov    -0xc(%rbp),%eax
  445bbd:	66 44 0f c4 f8 02    	pinsrw $0x2,%eax,%xmm15
  445bc3:	eb 36                	jmp    445bfb <setEncryptedValueWord+0xfb>
  445bc5:	8b 45 f4             	mov    -0xc(%rbp),%eax
  445bc8:	66 44 0f c4 f8 03    	pinsrw $0x3,%eax,%xmm15
  445bce:	eb 2b                	jmp    445bfb <setEncryptedValueWord+0xfb>
  445bd0:	8b 45 f4             	mov    -0xc(%rbp),%eax
  445bd3:	66 44 0f c4 f8 04    	pinsrw $0x4,%eax,%xmm15
  445bd9:	eb 20                	jmp    445bfb <setEncryptedValueWord+0xfb>
  445bdb:	8b 45 f4             	mov    -0xc(%rbp),%eax
  445bde:	66 44 0f c4 f8 05    	pinsrw $0x5,%eax,%xmm15
  445be4:	eb 15                	jmp    445bfb <setEncryptedValueWord+0xfb>
  445be6:	8b 45 f4             	mov    -0xc(%rbp),%eax
  445be9:	66 44 0f c4 f8 06    	pinsrw $0x6,%eax,%xmm15
  445bef:	eb 0a                	jmp    445bfb <setEncryptedValueWord+0xfb>
  445bf1:	8b 45 f4             	mov    -0xc(%rbp),%eax
  445bf4:	66 44 0f c4 f8 07    	pinsrw $0x7,%eax,%xmm15
  445bfa:	90                   	nop
  445bfb:	90                   	nop
  445bfc:	c9                   	leaveq 
  445bfd:	c3                   	retq   

0000000000445bfe <setEncryptedValueDWord>:
  445bfe:	55                   	push   %rbp
  445bff:	48 89 e5             	mov    %rsp,%rbp
  445c02:	48 83 ec 20          	sub    $0x20,%rsp
  445c06:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  445c0a:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  445c0d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  445c11:	83 e0 0f             	and    $0xf,%eax
  445c14:	89 45 f4             	mov    %eax,-0xc(%rbp)
  445c17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  445c1b:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
  445c1f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  445c23:	48 8b 05 06 fb 00 00 	mov    0xfb06(%rip),%rax        # 455730 <lastAddr>
  445c2a:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
  445c2e:	74 3c                	je     445c6c <setEncryptedValueDWord+0x6e>
  445c30:	48 8b 05 f9 fa 00 00 	mov    0xfaf9(%rip),%rax        # 455730 <lastAddr>
  445c37:	48 85 c0             	test   %rax,%rax
  445c3a:	74 19                	je     445c55 <setEncryptedValueDWord+0x57>
  445c3c:	8b 05 0e fb 00 00    	mov    0xfb0e(%rip),%eax        # 455750 <dirty>
  445c42:	85 c0                	test   %eax,%eax
  445c44:	74 0f                	je     445c55 <setEncryptedValueDWord+0x57>
  445c46:	48 8b 05 e3 fa 00 00 	mov    0xfae3(%rip),%rax        # 455730 <lastAddr>
  445c4d:	48 89 c7             	mov    %rax,%rdi
  445c50:	e8 2a fb ff ff       	callq  44577f <encrypt_cache>
  445c55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  445c59:	48 89 05 d0 fa 00 00 	mov    %rax,0xfad0(%rip)        # 455730 <lastAddr>
  445c60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  445c64:	48 89 c7             	mov    %rax,%rdi
  445c67:	e8 58 fa ff ff       	callq  4456c4 <decrypt_cache>
  445c6c:	c7 05 da fa 00 00 01 	movl   $0x1,0xfada(%rip)        # 455750 <dirty>
  445c73:	00 00 00 
  445c76:	8b 45 f4             	mov    -0xc(%rbp),%eax
  445c79:	8d 50 03             	lea    0x3(%rax),%edx
  445c7c:	85 c0                	test   %eax,%eax
  445c7e:	0f 48 c2             	cmovs  %edx,%eax
  445c81:	c1 f8 02             	sar    $0x2,%eax
  445c84:	89 45 f4             	mov    %eax,-0xc(%rbp)
  445c87:	83 7d f4 07          	cmpl   $0x7,-0xc(%rbp)
  445c8b:	77 6c                	ja     445cf9 <setEncryptedValueDWord+0xfb>
  445c8d:	8b 45 f4             	mov    -0xc(%rbp),%eax
  445c90:	48 8b 04 c5 38 e6 44 	mov    0x44e638(,%rax,8),%rax
  445c97:	00 
  445c98:	ff e0                	jmpq   *%rax
  445c9a:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  445c9d:	66 44 0f 3a 22 f8 00 	pinsrd $0x0,%eax,%xmm15
  445ca4:	eb 53                	jmp    445cf9 <setEncryptedValueDWord+0xfb>
  445ca6:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  445ca9:	66 44 0f 3a 22 f8 01 	pinsrd $0x1,%eax,%xmm15
  445cb0:	eb 47                	jmp    445cf9 <setEncryptedValueDWord+0xfb>
  445cb2:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  445cb5:	66 44 0f 3a 22 f8 02 	pinsrd $0x2,%eax,%xmm15
  445cbc:	eb 3b                	jmp    445cf9 <setEncryptedValueDWord+0xfb>
  445cbe:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  445cc1:	66 44 0f 3a 22 f8 03 	pinsrd $0x3,%eax,%xmm15
  445cc8:	eb 2f                	jmp    445cf9 <setEncryptedValueDWord+0xfb>
  445cca:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  445ccd:	66 44 0f 3a 22 f8 04 	pinsrd $0x4,%eax,%xmm15
  445cd4:	eb 23                	jmp    445cf9 <setEncryptedValueDWord+0xfb>
  445cd6:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  445cd9:	66 44 0f 3a 22 f8 05 	pinsrd $0x5,%eax,%xmm15
  445ce0:	eb 17                	jmp    445cf9 <setEncryptedValueDWord+0xfb>
  445ce2:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  445ce5:	66 44 0f 3a 22 f8 06 	pinsrd $0x6,%eax,%xmm15
  445cec:	eb 0b                	jmp    445cf9 <setEncryptedValueDWord+0xfb>
  445cee:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  445cf1:	66 44 0f 3a 22 f8 07 	pinsrd $0x7,%eax,%xmm15
  445cf8:	90                   	nop
  445cf9:	90                   	nop
  445cfa:	c9                   	leaveq 
  445cfb:	c3                   	retq   

0000000000445cfc <setEncryptedValueQWord>:
  445cfc:	55                   	push   %rbp
  445cfd:	48 89 e5             	mov    %rsp,%rbp
  445d00:	48 83 ec 20          	sub    $0x20,%rsp
  445d04:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  445d08:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  445d0c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  445d10:	83 e0 0f             	and    $0xf,%eax
  445d13:	89 45 f4             	mov    %eax,-0xc(%rbp)
  445d16:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  445d1a:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
  445d1e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  445d22:	48 8b 05 07 fa 00 00 	mov    0xfa07(%rip),%rax        # 455730 <lastAddr>
  445d29:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
  445d2d:	74 3c                	je     445d6b <setEncryptedValueQWord+0x6f>
  445d2f:	48 8b 05 fa f9 00 00 	mov    0xf9fa(%rip),%rax        # 455730 <lastAddr>
  445d36:	48 85 c0             	test   %rax,%rax
  445d39:	74 19                	je     445d54 <setEncryptedValueQWord+0x58>
  445d3b:	8b 05 0f fa 00 00    	mov    0xfa0f(%rip),%eax        # 455750 <dirty>
  445d41:	85 c0                	test   %eax,%eax
  445d43:	74 0f                	je     445d54 <setEncryptedValueQWord+0x58>
  445d45:	48 8b 05 e4 f9 00 00 	mov    0xf9e4(%rip),%rax        # 455730 <lastAddr>
  445d4c:	48 89 c7             	mov    %rax,%rdi
  445d4f:	e8 2b fa ff ff       	callq  44577f <encrypt_cache>
  445d54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  445d58:	48 89 05 d1 f9 00 00 	mov    %rax,0xf9d1(%rip)        # 455730 <lastAddr>
  445d5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  445d63:	48 89 c7             	mov    %rax,%rdi
  445d66:	e8 59 f9 ff ff       	callq  4456c4 <decrypt_cache>
  445d6b:	c7 05 db f9 00 00 01 	movl   $0x1,0xf9db(%rip)        # 455750 <dirty>
  445d72:	00 00 00 
  445d75:	8b 45 f4             	mov    -0xc(%rbp),%eax
  445d78:	8d 50 07             	lea    0x7(%rax),%edx
  445d7b:	85 c0                	test   %eax,%eax
  445d7d:	0f 48 c2             	cmovs  %edx,%eax
  445d80:	c1 f8 03             	sar    $0x3,%eax
  445d83:	89 45 f4             	mov    %eax,-0xc(%rbp)
  445d86:	83 7d f4 07          	cmpl   $0x7,-0xc(%rbp)
  445d8a:	77 74                	ja     445e00 <setEncryptedValueQWord+0x104>
  445d8c:	8b 45 f4             	mov    -0xc(%rbp),%eax
  445d8f:	48 8b 04 c5 78 e6 44 	mov    0x44e678(,%rax,8),%rax
  445d96:	00 
  445d97:	ff e0                	jmpq   *%rax
  445d99:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  445d9d:	66 4c 0f 3a 22 f8 00 	pinsrq $0x0,%rax,%xmm15
  445da4:	eb 5a                	jmp    445e00 <setEncryptedValueQWord+0x104>
  445da6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  445daa:	66 4c 0f 3a 22 f8 01 	pinsrq $0x1,%rax,%xmm15
  445db1:	eb 4d                	jmp    445e00 <setEncryptedValueQWord+0x104>
  445db3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  445db7:	66 4c 0f 3a 22 f8 02 	pinsrq $0x2,%rax,%xmm15
  445dbe:	eb 40                	jmp    445e00 <setEncryptedValueQWord+0x104>
  445dc0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  445dc4:	66 4c 0f 3a 22 f8 03 	pinsrq $0x3,%rax,%xmm15
  445dcb:	eb 33                	jmp    445e00 <setEncryptedValueQWord+0x104>
  445dcd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  445dd1:	66 4c 0f 3a 22 f8 04 	pinsrq $0x4,%rax,%xmm15
  445dd8:	eb 26                	jmp    445e00 <setEncryptedValueQWord+0x104>
  445dda:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  445dde:	66 4c 0f 3a 22 f8 05 	pinsrq $0x5,%rax,%xmm15
  445de5:	eb 19                	jmp    445e00 <setEncryptedValueQWord+0x104>
  445de7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  445deb:	66 4c 0f 3a 22 f8 06 	pinsrq $0x6,%rax,%xmm15
  445df2:	eb 0c                	jmp    445e00 <setEncryptedValueQWord+0x104>
  445df4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  445df8:	66 4c 0f 3a 22 f8 07 	pinsrq $0x7,%rax,%xmm15
  445dff:	90                   	nop
  445e00:	90                   	nop
  445e01:	c9                   	leaveq 
  445e02:	c3                   	retq   

0000000000445e03 <getDecryptedValueByte>:
  445e03:	55                   	push   %rbp
  445e04:	48 89 e5             	mov    %rsp,%rbp
  445e07:	53                   	push   %rbx
  445e08:	48 83 ec 28          	sub    $0x28,%rsp
  445e0c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  445e10:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  445e14:	83 e0 0f             	and    $0xf,%eax
  445e17:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  445e1a:	bb 00 00 00 00       	mov    $0x0,%ebx
  445e1f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  445e23:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
  445e27:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  445e2b:	48 8b 05 fe f8 00 00 	mov    0xf8fe(%rip),%rax        # 455730 <lastAddr>
  445e32:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
  445e36:	74 46                	je     445e7e <getDecryptedValueByte+0x7b>
  445e38:	48 8b 05 f1 f8 00 00 	mov    0xf8f1(%rip),%rax        # 455730 <lastAddr>
  445e3f:	48 85 c0             	test   %rax,%rax
  445e42:	74 23                	je     445e67 <getDecryptedValueByte+0x64>
  445e44:	8b 05 06 f9 00 00    	mov    0xf906(%rip),%eax        # 455750 <dirty>
  445e4a:	85 c0                	test   %eax,%eax
  445e4c:	74 19                	je     445e67 <getDecryptedValueByte+0x64>
  445e4e:	48 8b 05 db f8 00 00 	mov    0xf8db(%rip),%rax        # 455730 <lastAddr>
  445e55:	48 89 c7             	mov    %rax,%rdi
  445e58:	e8 22 f9 ff ff       	callq  44577f <encrypt_cache>
  445e5d:	c7 05 e9 f8 00 00 00 	movl   $0x0,0xf8e9(%rip)        # 455750 <dirty>
  445e64:	00 00 00 
  445e67:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  445e6b:	48 89 05 be f8 00 00 	mov    %rax,0xf8be(%rip)        # 455730 <lastAddr>
  445e72:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  445e76:	48 89 c7             	mov    %rax,%rdi
  445e79:	e8 46 f8 ff ff       	callq  4456c4 <decrypt_cache>
  445e7e:	83 7d e4 0f          	cmpl   $0xf,-0x1c(%rbp)
  445e82:	0f 87 c8 00 00 00    	ja     445f50 <getDecryptedValueByte+0x14d>
  445e88:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  445e8b:	48 8b 04 c5 b8 e6 44 	mov    0x44e6b8(,%rax,8),%rax
  445e92:	00 
  445e93:	ff e0                	jmpq   *%rax
  445e95:	66 44 0f 3a 14 f8 00 	pextrb $0x0,%xmm15,%eax
  445e9c:	89 c3                	mov    %eax,%ebx
  445e9e:	e9 ad 00 00 00       	jmpq   445f50 <getDecryptedValueByte+0x14d>
  445ea3:	66 44 0f 3a 14 f8 01 	pextrb $0x1,%xmm15,%eax
  445eaa:	89 c3                	mov    %eax,%ebx
  445eac:	e9 9f 00 00 00       	jmpq   445f50 <getDecryptedValueByte+0x14d>
  445eb1:	66 44 0f 3a 14 f8 02 	pextrb $0x2,%xmm15,%eax
  445eb8:	89 c3                	mov    %eax,%ebx
  445eba:	e9 91 00 00 00       	jmpq   445f50 <getDecryptedValueByte+0x14d>
  445ebf:	66 44 0f 3a 14 f8 03 	pextrb $0x3,%xmm15,%eax
  445ec6:	89 c3                	mov    %eax,%ebx
  445ec8:	e9 83 00 00 00       	jmpq   445f50 <getDecryptedValueByte+0x14d>
  445ecd:	66 44 0f 3a 14 f8 04 	pextrb $0x4,%xmm15,%eax
  445ed4:	89 c3                	mov    %eax,%ebx
  445ed6:	eb 78                	jmp    445f50 <getDecryptedValueByte+0x14d>
  445ed8:	66 44 0f 3a 14 f8 05 	pextrb $0x5,%xmm15,%eax
  445edf:	89 c3                	mov    %eax,%ebx
  445ee1:	eb 6d                	jmp    445f50 <getDecryptedValueByte+0x14d>
  445ee3:	66 44 0f 3a 14 f8 06 	pextrb $0x6,%xmm15,%eax
  445eea:	89 c3                	mov    %eax,%ebx
  445eec:	eb 62                	jmp    445f50 <getDecryptedValueByte+0x14d>
  445eee:	66 44 0f 3a 14 f8 07 	pextrb $0x7,%xmm15,%eax
  445ef5:	89 c3                	mov    %eax,%ebx
  445ef7:	eb 57                	jmp    445f50 <getDecryptedValueByte+0x14d>
  445ef9:	66 44 0f 3a 14 f8 08 	pextrb $0x8,%xmm15,%eax
  445f00:	89 c3                	mov    %eax,%ebx
  445f02:	eb 4c                	jmp    445f50 <getDecryptedValueByte+0x14d>
  445f04:	66 44 0f 3a 14 f8 09 	pextrb $0x9,%xmm15,%eax
  445f0b:	89 c3                	mov    %eax,%ebx
  445f0d:	eb 41                	jmp    445f50 <getDecryptedValueByte+0x14d>
  445f0f:	66 44 0f 3a 14 f8 0a 	pextrb $0xa,%xmm15,%eax
  445f16:	89 c3                	mov    %eax,%ebx
  445f18:	eb 36                	jmp    445f50 <getDecryptedValueByte+0x14d>
  445f1a:	66 44 0f 3a 14 f8 0b 	pextrb $0xb,%xmm15,%eax
  445f21:	89 c3                	mov    %eax,%ebx
  445f23:	eb 2b                	jmp    445f50 <getDecryptedValueByte+0x14d>
  445f25:	66 44 0f 3a 14 f8 0c 	pextrb $0xc,%xmm15,%eax
  445f2c:	89 c3                	mov    %eax,%ebx
  445f2e:	eb 20                	jmp    445f50 <getDecryptedValueByte+0x14d>
  445f30:	66 44 0f 3a 14 f8 0d 	pextrb $0xd,%xmm15,%eax
  445f37:	89 c3                	mov    %eax,%ebx
  445f39:	eb 15                	jmp    445f50 <getDecryptedValueByte+0x14d>
  445f3b:	66 44 0f 3a 14 f8 0e 	pextrb $0xe,%xmm15,%eax
  445f42:	89 c3                	mov    %eax,%ebx
  445f44:	eb 0a                	jmp    445f50 <getDecryptedValueByte+0x14d>
  445f46:	66 44 0f 3a 14 f8 0f 	pextrb $0xf,%xmm15,%eax
  445f4d:	89 c3                	mov    %eax,%ebx
  445f4f:	90                   	nop
  445f50:	89 d8                	mov    %ebx,%eax
  445f52:	48 83 c4 28          	add    $0x28,%rsp
  445f56:	5b                   	pop    %rbx
  445f57:	5d                   	pop    %rbp
  445f58:	c3                   	retq   

0000000000445f59 <getDecryptedValueWord>:
  445f59:	55                   	push   %rbp
  445f5a:	48 89 e5             	mov    %rsp,%rbp
  445f5d:	53                   	push   %rbx
  445f5e:	48 83 ec 28          	sub    $0x28,%rsp
  445f62:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  445f66:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  445f6a:	83 e0 0f             	and    $0xf,%eax
  445f6d:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  445f70:	bb 00 00 00 00       	mov    $0x0,%ebx
  445f75:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  445f79:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
  445f7d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  445f81:	48 8b 05 a8 f7 00 00 	mov    0xf7a8(%rip),%rax        # 455730 <lastAddr>
  445f88:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
  445f8c:	74 46                	je     445fd4 <getDecryptedValueWord+0x7b>
  445f8e:	48 8b 05 9b f7 00 00 	mov    0xf79b(%rip),%rax        # 455730 <lastAddr>
  445f95:	48 85 c0             	test   %rax,%rax
  445f98:	74 23                	je     445fbd <getDecryptedValueWord+0x64>
  445f9a:	8b 05 b0 f7 00 00    	mov    0xf7b0(%rip),%eax        # 455750 <dirty>
  445fa0:	85 c0                	test   %eax,%eax
  445fa2:	74 19                	je     445fbd <getDecryptedValueWord+0x64>
  445fa4:	48 8b 05 85 f7 00 00 	mov    0xf785(%rip),%rax        # 455730 <lastAddr>
  445fab:	48 89 c7             	mov    %rax,%rdi
  445fae:	e8 cc f7 ff ff       	callq  44577f <encrypt_cache>
  445fb3:	c7 05 93 f7 00 00 00 	movl   $0x0,0xf793(%rip)        # 455750 <dirty>
  445fba:	00 00 00 
  445fbd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  445fc1:	48 89 05 68 f7 00 00 	mov    %rax,0xf768(%rip)        # 455730 <lastAddr>
  445fc8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  445fcc:	48 89 c7             	mov    %rax,%rdi
  445fcf:	e8 f0 f6 ff ff       	callq  4456c4 <decrypt_cache>
  445fd4:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  445fd7:	89 c2                	mov    %eax,%edx
  445fd9:	c1 ea 1f             	shr    $0x1f,%edx
  445fdc:	01 d0                	add    %edx,%eax
  445fde:	d1 f8                	sar    %eax
  445fe0:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  445fe3:	83 7d e4 07          	cmpl   $0x7,-0x1c(%rbp)
  445fe7:	77 5c                	ja     446045 <getDecryptedValueWord+0xec>
  445fe9:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  445fec:	48 8b 04 c5 38 e7 44 	mov    0x44e738(,%rax,8),%rax
  445ff3:	00 
  445ff4:	ff e0                	jmpq   *%rax
  445ff6:	66 41 0f c5 c7 00    	pextrw $0x0,%xmm15,%eax
  445ffc:	89 c3                	mov    %eax,%ebx
  445ffe:	eb 45                	jmp    446045 <getDecryptedValueWord+0xec>
  446000:	66 41 0f c5 c7 01    	pextrw $0x1,%xmm15,%eax
  446006:	89 c3                	mov    %eax,%ebx
  446008:	eb 3b                	jmp    446045 <getDecryptedValueWord+0xec>
  44600a:	66 41 0f c5 c7 02    	pextrw $0x2,%xmm15,%eax
  446010:	89 c3                	mov    %eax,%ebx
  446012:	eb 31                	jmp    446045 <getDecryptedValueWord+0xec>
  446014:	66 41 0f c5 c7 03    	pextrw $0x3,%xmm15,%eax
  44601a:	89 c3                	mov    %eax,%ebx
  44601c:	eb 27                	jmp    446045 <getDecryptedValueWord+0xec>
  44601e:	66 41 0f c5 c7 04    	pextrw $0x4,%xmm15,%eax
  446024:	89 c3                	mov    %eax,%ebx
  446026:	eb 1d                	jmp    446045 <getDecryptedValueWord+0xec>
  446028:	66 41 0f c5 c7 05    	pextrw $0x5,%xmm15,%eax
  44602e:	89 c3                	mov    %eax,%ebx
  446030:	eb 13                	jmp    446045 <getDecryptedValueWord+0xec>
  446032:	66 41 0f c5 c7 06    	pextrw $0x6,%xmm15,%eax
  446038:	89 c3                	mov    %eax,%ebx
  44603a:	eb 09                	jmp    446045 <getDecryptedValueWord+0xec>
  44603c:	66 41 0f c5 c7 07    	pextrw $0x7,%xmm15,%eax
  446042:	89 c3                	mov    %eax,%ebx
  446044:	90                   	nop
  446045:	89 d8                	mov    %ebx,%eax
  446047:	48 83 c4 28          	add    $0x28,%rsp
  44604b:	5b                   	pop    %rbx
  44604c:	5d                   	pop    %rbp
  44604d:	c3                   	retq   

000000000044604e <getDecryptedValueDWord>:
  44604e:	55                   	push   %rbp
  44604f:	48 89 e5             	mov    %rsp,%rbp
  446052:	53                   	push   %rbx
  446053:	48 83 ec 28          	sub    $0x28,%rsp
  446057:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  44605b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  44605f:	83 e0 0f             	and    $0xf,%eax
  446062:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  446065:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  446069:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
  44606d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  446071:	48 8b 05 b8 f6 00 00 	mov    0xf6b8(%rip),%rax        # 455730 <lastAddr>
  446078:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
  44607c:	74 46                	je     4460c4 <getDecryptedValueDWord+0x76>
  44607e:	48 8b 05 ab f6 00 00 	mov    0xf6ab(%rip),%rax        # 455730 <lastAddr>
  446085:	48 85 c0             	test   %rax,%rax
  446088:	74 23                	je     4460ad <getDecryptedValueDWord+0x5f>
  44608a:	8b 05 c0 f6 00 00    	mov    0xf6c0(%rip),%eax        # 455750 <dirty>
  446090:	85 c0                	test   %eax,%eax
  446092:	74 19                	je     4460ad <getDecryptedValueDWord+0x5f>
  446094:	48 8b 05 95 f6 00 00 	mov    0xf695(%rip),%rax        # 455730 <lastAddr>
  44609b:	48 89 c7             	mov    %rax,%rdi
  44609e:	e8 dc f6 ff ff       	callq  44577f <encrypt_cache>
  4460a3:	c7 05 a3 f6 00 00 00 	movl   $0x0,0xf6a3(%rip)        # 455750 <dirty>
  4460aa:	00 00 00 
  4460ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4460b1:	48 89 05 78 f6 00 00 	mov    %rax,0xf678(%rip)        # 455730 <lastAddr>
  4460b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4460bc:	48 89 c7             	mov    %rax,%rdi
  4460bf:	e8 00 f6 ff ff       	callq  4456c4 <decrypt_cache>
  4460c4:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  4460c7:	8d 50 03             	lea    0x3(%rax),%edx
  4460ca:	85 c0                	test   %eax,%eax
  4460cc:	0f 48 c2             	cmovs  %edx,%eax
  4460cf:	c1 f8 02             	sar    $0x2,%eax
  4460d2:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  4460d5:	83 7d e4 07          	cmpl   $0x7,-0x1c(%rbp)
  4460d9:	77 64                	ja     44613f <getDecryptedValueDWord+0xf1>
  4460db:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  4460de:	48 8b 04 c5 78 e7 44 	mov    0x44e778(,%rax,8),%rax
  4460e5:	00 
  4460e6:	ff e0                	jmpq   *%rax
  4460e8:	66 44 0f 3a 16 f8 00 	pextrd $0x0,%xmm15,%eax
  4460ef:	89 c3                	mov    %eax,%ebx
  4460f1:	eb 4c                	jmp    44613f <getDecryptedValueDWord+0xf1>
  4460f3:	66 44 0f 3a 16 f8 01 	pextrd $0x1,%xmm15,%eax
  4460fa:	89 c3                	mov    %eax,%ebx
  4460fc:	eb 41                	jmp    44613f <getDecryptedValueDWord+0xf1>
  4460fe:	66 44 0f 3a 16 f8 02 	pextrd $0x2,%xmm15,%eax
  446105:	89 c3                	mov    %eax,%ebx
  446107:	eb 36                	jmp    44613f <getDecryptedValueDWord+0xf1>
  446109:	66 44 0f 3a 16 f8 03 	pextrd $0x3,%xmm15,%eax
  446110:	89 c3                	mov    %eax,%ebx
  446112:	eb 2b                	jmp    44613f <getDecryptedValueDWord+0xf1>
  446114:	66 44 0f 3a 16 f8 04 	pextrd $0x4,%xmm15,%eax
  44611b:	89 c3                	mov    %eax,%ebx
  44611d:	eb 20                	jmp    44613f <getDecryptedValueDWord+0xf1>
  44611f:	66 44 0f 3a 16 f8 05 	pextrd $0x5,%xmm15,%eax
  446126:	89 c3                	mov    %eax,%ebx
  446128:	eb 15                	jmp    44613f <getDecryptedValueDWord+0xf1>
  44612a:	66 44 0f 3a 16 f8 06 	pextrd $0x6,%xmm15,%eax
  446131:	89 c3                	mov    %eax,%ebx
  446133:	eb 0a                	jmp    44613f <getDecryptedValueDWord+0xf1>
  446135:	66 44 0f 3a 16 f8 07 	pextrd $0x7,%xmm15,%eax
  44613c:	89 c3                	mov    %eax,%ebx
  44613e:	90                   	nop
  44613f:	89 d8                	mov    %ebx,%eax
  446141:	48 83 c4 28          	add    $0x28,%rsp
  446145:	5b                   	pop    %rbx
  446146:	5d                   	pop    %rbp
  446147:	c3                   	retq   

0000000000446148 <getDecryptedValueQWord>:
  446148:	55                   	push   %rbp
  446149:	48 89 e5             	mov    %rsp,%rbp
  44614c:	53                   	push   %rbx
  44614d:	48 83 ec 28          	sub    $0x28,%rsp
  446151:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  446155:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  446159:	83 e0 0f             	and    $0xf,%eax
  44615c:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  44615f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  446163:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
  446167:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  44616b:	48 8b 05 be f5 00 00 	mov    0xf5be(%rip),%rax        # 455730 <lastAddr>
  446172:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
  446176:	74 46                	je     4461be <getDecryptedValueQWord+0x76>
  446178:	48 8b 05 b1 f5 00 00 	mov    0xf5b1(%rip),%rax        # 455730 <lastAddr>
  44617f:	48 85 c0             	test   %rax,%rax
  446182:	74 23                	je     4461a7 <getDecryptedValueQWord+0x5f>
  446184:	8b 05 c6 f5 00 00    	mov    0xf5c6(%rip),%eax        # 455750 <dirty>
  44618a:	85 c0                	test   %eax,%eax
  44618c:	74 19                	je     4461a7 <getDecryptedValueQWord+0x5f>
  44618e:	48 8b 05 9b f5 00 00 	mov    0xf59b(%rip),%rax        # 455730 <lastAddr>
  446195:	48 89 c7             	mov    %rax,%rdi
  446198:	e8 e2 f5 ff ff       	callq  44577f <encrypt_cache>
  44619d:	c7 05 a9 f5 00 00 00 	movl   $0x0,0xf5a9(%rip)        # 455750 <dirty>
  4461a4:	00 00 00 
  4461a7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4461ab:	48 89 05 7e f5 00 00 	mov    %rax,0xf57e(%rip)        # 455730 <lastAddr>
  4461b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4461b6:	48 89 c7             	mov    %rax,%rdi
  4461b9:	e8 06 f5 ff ff       	callq  4456c4 <decrypt_cache>
  4461be:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  4461c1:	8d 50 07             	lea    0x7(%rax),%edx
  4461c4:	85 c0                	test   %eax,%eax
  4461c6:	0f 48 c2             	cmovs  %edx,%eax
  4461c9:	c1 f8 03             	sar    $0x3,%eax
  4461cc:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  4461cf:	83 7d e4 07          	cmpl   $0x7,-0x1c(%rbp)
  4461d3:	77 6c                	ja     446241 <getDecryptedValueQWord+0xf9>
  4461d5:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  4461d8:	48 8b 04 c5 b8 e7 44 	mov    0x44e7b8(,%rax,8),%rax
  4461df:	00 
  4461e0:	ff e0                	jmpq   *%rax
  4461e2:	66 4c 0f 3a 16 f8 00 	pextrq $0x0,%xmm15,%rax
  4461e9:	48 89 c3             	mov    %rax,%rbx
  4461ec:	eb 53                	jmp    446241 <getDecryptedValueQWord+0xf9>
  4461ee:	66 4c 0f 3a 16 f8 01 	pextrq $0x1,%xmm15,%rax
  4461f5:	48 89 c3             	mov    %rax,%rbx
  4461f8:	eb 47                	jmp    446241 <getDecryptedValueQWord+0xf9>
  4461fa:	66 4c 0f 3a 16 f8 02 	pextrq $0x2,%xmm15,%rax
  446201:	48 89 c3             	mov    %rax,%rbx
  446204:	eb 3b                	jmp    446241 <getDecryptedValueQWord+0xf9>
  446206:	66 4c 0f 3a 16 f8 03 	pextrq $0x3,%xmm15,%rax
  44620d:	48 89 c3             	mov    %rax,%rbx
  446210:	eb 2f                	jmp    446241 <getDecryptedValueQWord+0xf9>
  446212:	66 4c 0f 3a 16 f8 04 	pextrq $0x4,%xmm15,%rax
  446219:	48 89 c3             	mov    %rax,%rbx
  44621c:	eb 23                	jmp    446241 <getDecryptedValueQWord+0xf9>
  44621e:	66 4c 0f 3a 16 f8 05 	pextrq $0x5,%xmm15,%rax
  446225:	48 89 c3             	mov    %rax,%rbx
  446228:	eb 17                	jmp    446241 <getDecryptedValueQWord+0xf9>
  44622a:	66 4c 0f 3a 16 f8 06 	pextrq $0x6,%xmm15,%rax
  446231:	48 89 c3             	mov    %rax,%rbx
  446234:	eb 0b                	jmp    446241 <getDecryptedValueQWord+0xf9>
  446236:	66 4c 0f 3a 16 f8 07 	pextrq $0x7,%xmm15,%rax
  44623d:	48 89 c3             	mov    %rax,%rbx
  446240:	90                   	nop
  446241:	48 89 d8             	mov    %rbx,%rax
  446244:	48 83 c4 28          	add    $0x28,%rsp
  446248:	5b                   	pop    %rbx
  446249:	5d                   	pop    %rbp
  44624a:	c3                   	retq   

000000000044624b <encrypt_globals>:
  44624b:	55                   	push   %rbp
  44624c:	48 89 e5             	mov    %rsp,%rbp
  44624f:	48 83 ec 20          	sub    $0x20,%rsp
  446253:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  446257:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  44625b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  44625f:	48 83 c0 0f          	add    $0xf,%rax
  446263:	48 8d 50 0f          	lea    0xf(%rax),%rdx
  446267:	48 85 c0             	test   %rax,%rax
  44626a:	48 0f 48 c2          	cmovs  %rdx,%rax
  44626e:	48 c1 f8 04          	sar    $0x4,%rax
  446272:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  446276:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  44627d:	eb 1c                	jmp    44629b <encrypt_globals+0x50>
  44627f:	8b 45 f4             	mov    -0xc(%rbp),%eax
  446282:	c1 e0 04             	shl    $0x4,%eax
  446285:	48 63 d0             	movslq %eax,%rdx
  446288:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  44628c:	48 01 d0             	add    %rdx,%rax
  44628f:	48 89 c7             	mov    %rax,%rdi
  446292:	e8 76 f5 ff ff       	callq  44580d <encrypt_memory>
  446297:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  44629b:	8b 45 f4             	mov    -0xc(%rbp),%eax
  44629e:	48 98                	cltq   
  4462a0:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
  4462a4:	7c d9                	jl     44627f <encrypt_globals+0x34>
  4462a6:	90                   	nop
  4462a7:	c9                   	leaveq 
  4462a8:	c3                   	retq   

00000000004462a9 <encryptStringAfterLibCall>:
  4462a9:	55                   	push   %rbp
  4462aa:	48 89 e5             	mov    %rsp,%rbp
  4462ad:	48 83 ec 20          	sub    $0x20,%rsp
  4462b1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4462b5:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  4462ba:	0f 84 bb 00 00 00    	je     44637b <encryptStringAfterLibCall+0xd2>
  4462c0:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  4462c7:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  4462ce:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  4462d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4462d9:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
  4462dd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4462e1:	48 8b 05 48 f4 00 00 	mov    0xf448(%rip),%rax        # 455730 <lastAddr>
  4462e8:	48 85 c0             	test   %rax,%rax
  4462eb:	74 19                	je     446306 <encryptStringAfterLibCall+0x5d>
  4462ed:	8b 05 5d f4 00 00    	mov    0xf45d(%rip),%eax        # 455750 <dirty>
  4462f3:	85 c0                	test   %eax,%eax
  4462f5:	74 0f                	je     446306 <encryptStringAfterLibCall+0x5d>
  4462f7:	48 8b 05 32 f4 00 00 	mov    0xf432(%rip),%rax        # 455730 <lastAddr>
  4462fe:	48 89 c7             	mov    %rax,%rdi
  446301:	e8 79 f4 ff ff       	callq  44577f <encrypt_cache>
  446306:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  44630d:	eb 1f                	jmp    44632e <encryptStringAfterLibCall+0x85>
  44630f:	8b 45 f4             	mov    -0xc(%rbp),%eax
  446312:	48 63 d0             	movslq %eax,%rdx
  446315:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  446319:	48 01 d0             	add    %rdx,%rax
  44631c:	0f b6 00             	movzbl (%rax),%eax
  44631f:	84 c0                	test   %al,%al
  446321:	75 07                	jne    44632a <encryptStringAfterLibCall+0x81>
  446323:	c7 45 f8 01 00 00 00 	movl   $0x1,-0x8(%rbp)
  44632a:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  44632e:	83 7d f4 0f          	cmpl   $0xf,-0xc(%rbp)
  446332:	7e db                	jle    44630f <encryptStringAfterLibCall+0x66>
  446334:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  446338:	48 89 c7             	mov    %rax,%rdi
  44633b:	e8 cd f4 ff ff       	callq  44580d <encrypt_memory>
  446340:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
  446344:	75 38                	jne    44637e <encryptStringAfterLibCall+0xd5>
  446346:	48 83 45 e8 10       	addq   $0x10,-0x18(%rbp)
  44634b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  446352:	eb 1f                	jmp    446373 <encryptStringAfterLibCall+0xca>
  446354:	8b 45 f4             	mov    -0xc(%rbp),%eax
  446357:	48 63 d0             	movslq %eax,%rdx
  44635a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  44635e:	48 01 d0             	add    %rdx,%rax
  446361:	0f b6 00             	movzbl (%rax),%eax
  446364:	84 c0                	test   %al,%al
  446366:	75 07                	jne    44636f <encryptStringAfterLibCall+0xc6>
  446368:	c7 45 f8 01 00 00 00 	movl   $0x1,-0x8(%rbp)
  44636f:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  446373:	83 7d f4 0f          	cmpl   $0xf,-0xc(%rbp)
  446377:	7e db                	jle    446354 <encryptStringAfterLibCall+0xab>
  446379:	eb b9                	jmp    446334 <encryptStringAfterLibCall+0x8b>
  44637b:	90                   	nop
  44637c:	eb 01                	jmp    44637f <encryptStringAfterLibCall+0xd6>
  44637e:	90                   	nop
  44637f:	c9                   	leaveq 
  446380:	c3                   	retq   

0000000000446381 <decryptStringBeforeLibCall>:
  446381:	55                   	push   %rbp
  446382:	48 89 e5             	mov    %rsp,%rbp
  446385:	48 83 ec 20          	sub    $0x20,%rsp
  446389:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  44638d:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  446392:	0f 84 92 00 00 00    	je     44642a <decryptStringBeforeLibCall+0xa9>
  446398:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  44639f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  4463a6:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  4463ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4463b1:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
  4463b5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4463b9:	48 8b 05 70 f3 00 00 	mov    0xf370(%rip),%rax        # 455730 <lastAddr>
  4463c0:	48 85 c0             	test   %rax,%rax
  4463c3:	74 19                	je     4463de <decryptStringBeforeLibCall+0x5d>
  4463c5:	8b 05 85 f3 00 00    	mov    0xf385(%rip),%eax        # 455750 <dirty>
  4463cb:	85 c0                	test   %eax,%eax
  4463cd:	74 0f                	je     4463de <decryptStringBeforeLibCall+0x5d>
  4463cf:	48 8b 05 5a f3 00 00 	mov    0xf35a(%rip),%rax        # 455730 <lastAddr>
  4463d6:	48 89 c7             	mov    %rax,%rdi
  4463d9:	e8 a1 f3 ff ff       	callq  44577f <encrypt_cache>
  4463de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4463e2:	48 89 c7             	mov    %rax,%rdi
  4463e5:	b8 00 00 00 00       	mov    $0x0,%eax
  4463ea:	e8 ac f4 ff ff       	callq  44589b <decrypt_memory>
  4463ef:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  4463f6:	eb 1f                	jmp    446417 <decryptStringBeforeLibCall+0x96>
  4463f8:	8b 45 f4             	mov    -0xc(%rbp),%eax
  4463fb:	48 63 d0             	movslq %eax,%rdx
  4463fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  446402:	48 01 d0             	add    %rdx,%rax
  446405:	0f b6 00             	movzbl (%rax),%eax
  446408:	84 c0                	test   %al,%al
  44640a:	75 07                	jne    446413 <decryptStringBeforeLibCall+0x92>
  44640c:	c7 45 f8 01 00 00 00 	movl   $0x1,-0x8(%rbp)
  446413:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  446417:	83 7d f4 0f          	cmpl   $0xf,-0xc(%rbp)
  44641b:	7e db                	jle    4463f8 <decryptStringBeforeLibCall+0x77>
  44641d:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
  446421:	75 0a                	jne    44642d <decryptStringBeforeLibCall+0xac>
  446423:	48 83 45 e8 10       	addq   $0x10,-0x18(%rbp)
  446428:	eb b4                	jmp    4463de <decryptStringBeforeLibCall+0x5d>
  44642a:	90                   	nop
  44642b:	eb 01                	jmp    44642e <decryptStringBeforeLibCall+0xad>
  44642d:	90                   	nop
  44642e:	c9                   	leaveq 
  44642f:	c3                   	retq   

0000000000446430 <encryptStringPtrAfterLibCall>:
  446430:	55                   	push   %rbp
  446431:	48 89 e5             	mov    %rsp,%rbp
  446434:	48 83 ec 20          	sub    $0x20,%rsp
  446438:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  44643c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  446440:	48 8b 00             	mov    (%rax),%rax
  446443:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  446447:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  44644b:	48 89 c7             	mov    %rax,%rdi
  44644e:	e8 56 fe ff ff       	callq  4462a9 <encryptStringAfterLibCall>
  446453:	90                   	nop
  446454:	c9                   	leaveq 
  446455:	c3                   	retq   

0000000000446456 <encryptArrayForLibCall>:
  446456:	55                   	push   %rbp
  446457:	48 89 e5             	mov    %rsp,%rbp
  44645a:	48 83 ec 30          	sub    $0x30,%rsp
  44645e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  446462:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  446465:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  44646a:	0f 84 92 00 00 00    	je     446502 <encryptArrayForLibCall+0xac>
  446470:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  446474:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
  446478:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  44647c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  446480:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  446484:	48 29 c2             	sub    %rax,%rdx
  446487:	48 89 d0             	mov    %rdx,%rax
  44648a:	89 c2                	mov    %eax,%edx
  44648c:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  44648f:	01 d0                	add    %edx,%eax
  446491:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  446494:	48 8b 05 95 f2 00 00 	mov    0xf295(%rip),%rax        # 455730 <lastAddr>
  44649b:	48 85 c0             	test   %rax,%rax
  44649e:	74 19                	je     4464b9 <encryptArrayForLibCall+0x63>
  4464a0:	8b 05 aa f2 00 00    	mov    0xf2aa(%rip),%eax        # 455750 <dirty>
  4464a6:	85 c0                	test   %eax,%eax
  4464a8:	74 0f                	je     4464b9 <encryptArrayForLibCall+0x63>
  4464aa:	48 8b 05 7f f2 00 00 	mov    0xf27f(%rip),%rax        # 455730 <lastAddr>
  4464b1:	48 89 c7             	mov    %rax,%rdi
  4464b4:	e8 c6 f2 ff ff       	callq  44577f <encrypt_cache>
  4464b9:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  4464bc:	83 c0 0f             	add    $0xf,%eax
  4464bf:	8d 50 0f             	lea    0xf(%rax),%edx
  4464c2:	85 c0                	test   %eax,%eax
  4464c4:	0f 48 c2             	cmovs  %edx,%eax
  4464c7:	c1 f8 04             	sar    $0x4,%eax
  4464ca:	48 98                	cltq   
  4464cc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4464d0:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  4464d7:	eb 1c                	jmp    4464f5 <encryptArrayForLibCall+0x9f>
  4464d9:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4464dc:	c1 e0 04             	shl    $0x4,%eax
  4464df:	48 63 d0             	movslq %eax,%rdx
  4464e2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4464e6:	48 01 d0             	add    %rdx,%rax
  4464e9:	48 89 c7             	mov    %rax,%rdi
  4464ec:	e8 1c f3 ff ff       	callq  44580d <encrypt_memory>
  4464f1:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  4464f5:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4464f8:	48 98                	cltq   
  4464fa:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
  4464fe:	7c d9                	jl     4464d9 <encryptArrayForLibCall+0x83>
  446500:	eb 01                	jmp    446503 <encryptArrayForLibCall+0xad>
  446502:	90                   	nop
  446503:	c9                   	leaveq 
  446504:	c3                   	retq   

0000000000446505 <encryptArrayPtrAfterLibCall>:
  446505:	55                   	push   %rbp
  446506:	48 89 e5             	mov    %rsp,%rbp
  446509:	48 83 ec 20          	sub    $0x20,%rsp
  44650d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  446511:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  446515:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  446519:	48 8b 00             	mov    (%rax),%rax
  44651c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  446520:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  446524:	89 c2                	mov    %eax,%edx
  446526:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  44652a:	89 d6                	mov    %edx,%esi
  44652c:	48 89 c7             	mov    %rax,%rdi
  44652f:	e8 22 ff ff ff       	callq  446456 <encryptArrayForLibCall>
  446534:	90                   	nop
  446535:	c9                   	leaveq 
  446536:	c3                   	retq   

0000000000446537 <decryptVaArgListBeforeLibCall>:
  446537:	55                   	push   %rbp
  446538:	48 89 e5             	mov    %rsp,%rbp
  44653b:	48 83 ec 40          	sub    $0x40,%rsp
  44653f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  446543:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  446547:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  44654e:	00 00 
  446550:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  446554:	31 c0                	xor    %eax,%eax
  446556:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
  44655d:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  446561:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  446565:	48 8b 0a             	mov    (%rdx),%rcx
  446568:	48 89 08             	mov    %rcx,(%rax)
  44656b:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
  44656f:	48 89 48 08          	mov    %rcx,0x8(%rax)
  446573:	48 8b 52 10          	mov    0x10(%rdx),%rdx
  446577:	48 89 50 10          	mov    %rdx,0x10(%rax)
  44657b:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
  446582:	00 
  446583:	eb 14                	jmp    446599 <decryptVaArgListBeforeLibCall+0x62>
  446585:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  446589:	0f b6 00             	movzbl (%rax),%eax
  44658c:	3c 25                	cmp    $0x25,%al
  44658e:	75 04                	jne    446594 <decryptVaArgListBeforeLibCall+0x5d>
  446590:	83 45 d0 01          	addl   $0x1,-0x30(%rbp)
  446594:	48 83 45 c8 01       	addq   $0x1,-0x38(%rbp)
  446599:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  44659d:	0f b6 00             	movzbl (%rax),%eax
  4465a0:	84 c0                	test   %al,%al
  4465a2:	75 e1                	jne    446585 <decryptVaArgListBeforeLibCall+0x4e>
  4465a4:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
  4465ab:	eb 42                	jmp    4465ef <decryptVaArgListBeforeLibCall+0xb8>
  4465ad:	8b 45 e0             	mov    -0x20(%rbp),%eax
  4465b0:	83 f8 30             	cmp    $0x30,%eax
  4465b3:	73 17                	jae    4465cc <decryptVaArgListBeforeLibCall+0x95>
  4465b5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4465b9:	8b 55 e0             	mov    -0x20(%rbp),%edx
  4465bc:	89 d2                	mov    %edx,%edx
  4465be:	48 01 d0             	add    %rdx,%rax
  4465c1:	8b 55 e0             	mov    -0x20(%rbp),%edx
  4465c4:	83 c2 08             	add    $0x8,%edx
  4465c7:	89 55 e0             	mov    %edx,-0x20(%rbp)
  4465ca:	eb 0c                	jmp    4465d8 <decryptVaArgListBeforeLibCall+0xa1>
  4465cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4465d0:	48 8d 50 08          	lea    0x8(%rax),%rdx
  4465d4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  4465d8:	48 8b 00             	mov    (%rax),%rax
  4465db:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  4465df:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4465e3:	48 89 c7             	mov    %rax,%rdi
  4465e6:	e8 96 fd ff ff       	callq  446381 <decryptStringBeforeLibCall>
  4465eb:	83 45 d4 01          	addl   $0x1,-0x2c(%rbp)
  4465ef:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  4465f2:	3b 45 d0             	cmp    -0x30(%rbp),%eax
  4465f5:	7c b6                	jl     4465ad <decryptVaArgListBeforeLibCall+0x76>
  4465f7:	90                   	nop
  4465f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4465fc:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  446603:	00 00 
  446605:	74 05                	je     44660c <decryptVaArgListBeforeLibCall+0xd5>
  446607:	e8 84 ac fb ff       	callq  401290 <__stack_chk_fail@plt>
  44660c:	c9                   	leaveq 
  44660d:	c3                   	retq   

000000000044660e <encryptVaArgListAfterLibCall>:
  44660e:	55                   	push   %rbp
  44660f:	48 89 e5             	mov    %rsp,%rbp
  446612:	48 83 ec 40          	sub    $0x40,%rsp
  446616:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  44661a:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  44661e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  446625:	00 00 
  446627:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  44662b:	31 c0                	xor    %eax,%eax
  44662d:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  446631:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  446635:	48 8b 0a             	mov    (%rdx),%rcx
  446638:	48 89 08             	mov    %rcx,(%rax)
  44663b:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
  44663f:	48 89 48 08          	mov    %rcx,0x8(%rax)
  446643:	48 8b 52 10          	mov    0x10(%rdx),%rdx
  446647:	48 89 50 10          	mov    %rdx,0x10(%rax)
  44664b:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
  446652:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
  446659:	00 
  44665a:	eb 14                	jmp    446670 <encryptVaArgListAfterLibCall+0x62>
  44665c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  446660:	0f b6 00             	movzbl (%rax),%eax
  446663:	3c 25                	cmp    $0x25,%al
  446665:	75 04                	jne    44666b <encryptVaArgListAfterLibCall+0x5d>
  446667:	83 45 d0 01          	addl   $0x1,-0x30(%rbp)
  44666b:	48 83 45 c8 01       	addq   $0x1,-0x38(%rbp)
  446670:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  446674:	0f b6 00             	movzbl (%rax),%eax
  446677:	84 c0                	test   %al,%al
  446679:	75 e1                	jne    44665c <encryptVaArgListAfterLibCall+0x4e>
  44667b:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
  446682:	eb 42                	jmp    4466c6 <encryptVaArgListAfterLibCall+0xb8>
  446684:	8b 45 e0             	mov    -0x20(%rbp),%eax
  446687:	83 f8 30             	cmp    $0x30,%eax
  44668a:	73 17                	jae    4466a3 <encryptVaArgListAfterLibCall+0x95>
  44668c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  446690:	8b 55 e0             	mov    -0x20(%rbp),%edx
  446693:	89 d2                	mov    %edx,%edx
  446695:	48 01 d0             	add    %rdx,%rax
  446698:	8b 55 e0             	mov    -0x20(%rbp),%edx
  44669b:	83 c2 08             	add    $0x8,%edx
  44669e:	89 55 e0             	mov    %edx,-0x20(%rbp)
  4466a1:	eb 0c                	jmp    4466af <encryptVaArgListAfterLibCall+0xa1>
  4466a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4466a7:	48 8d 50 08          	lea    0x8(%rax),%rdx
  4466ab:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  4466af:	48 8b 00             	mov    (%rax),%rax
  4466b2:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  4466b6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4466ba:	48 89 c7             	mov    %rax,%rdi
  4466bd:	e8 e7 fb ff ff       	callq  4462a9 <encryptStringAfterLibCall>
  4466c2:	83 45 d4 01          	addl   $0x1,-0x2c(%rbp)
  4466c6:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  4466c9:	3b 45 d0             	cmp    -0x30(%rbp),%eax
  4466cc:	7c b6                	jl     446684 <encryptVaArgListAfterLibCall+0x76>
  4466ce:	90                   	nop
  4466cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4466d3:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  4466da:	00 00 
  4466dc:	74 05                	je     4466e3 <encryptVaArgListAfterLibCall+0xd5>
  4466de:	e8 ad ab fb ff       	callq  401290 <__stack_chk_fail@plt>
  4466e3:	c9                   	leaveq 
  4466e4:	c3                   	retq   

00000000004466e5 <decryptArrayForLibCall>:
  4466e5:	55                   	push   %rbp
  4466e6:	48 89 e5             	mov    %rsp,%rbp
  4466e9:	48 83 ec 30          	sub    $0x30,%rsp
  4466ed:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  4466f1:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  4466f4:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  4466f9:	0f 84 97 00 00 00    	je     446796 <decryptArrayForLibCall+0xb1>
  4466ff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  446703:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
  446707:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  44670b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  44670f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  446713:	48 29 c2             	sub    %rax,%rdx
  446716:	48 89 d0             	mov    %rdx,%rax
  446719:	89 c2                	mov    %eax,%edx
  44671b:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  44671e:	01 d0                	add    %edx,%eax
  446720:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  446723:	48 8b 05 06 f0 00 00 	mov    0xf006(%rip),%rax        # 455730 <lastAddr>
  44672a:	48 85 c0             	test   %rax,%rax
  44672d:	74 19                	je     446748 <decryptArrayForLibCall+0x63>
  44672f:	8b 05 1b f0 00 00    	mov    0xf01b(%rip),%eax        # 455750 <dirty>
  446735:	85 c0                	test   %eax,%eax
  446737:	74 0f                	je     446748 <decryptArrayForLibCall+0x63>
  446739:	48 8b 05 f0 ef 00 00 	mov    0xeff0(%rip),%rax        # 455730 <lastAddr>
  446740:	48 89 c7             	mov    %rax,%rdi
  446743:	e8 37 f0 ff ff       	callq  44577f <encrypt_cache>
  446748:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  44674b:	83 c0 0f             	add    $0xf,%eax
  44674e:	8d 50 0f             	lea    0xf(%rax),%edx
  446751:	85 c0                	test   %eax,%eax
  446753:	0f 48 c2             	cmovs  %edx,%eax
  446756:	c1 f8 04             	sar    $0x4,%eax
  446759:	48 98                	cltq   
  44675b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  44675f:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  446766:	eb 21                	jmp    446789 <decryptArrayForLibCall+0xa4>
  446768:	8b 45 ec             	mov    -0x14(%rbp),%eax
  44676b:	c1 e0 04             	shl    $0x4,%eax
  44676e:	48 63 d0             	movslq %eax,%rdx
  446771:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  446775:	48 01 d0             	add    %rdx,%rax
  446778:	48 89 c7             	mov    %rax,%rdi
  44677b:	b8 00 00 00 00       	mov    $0x0,%eax
  446780:	e8 16 f1 ff ff       	callq  44589b <decrypt_memory>
  446785:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  446789:	8b 45 ec             	mov    -0x14(%rbp),%eax
  44678c:	48 98                	cltq   
  44678e:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
  446792:	7c d4                	jl     446768 <decryptArrayForLibCall+0x83>
  446794:	eb 01                	jmp    446797 <decryptArrayForLibCall+0xb2>
  446796:	90                   	nop
  446797:	c9                   	leaveq 
  446798:	c3                   	retq   

0000000000446799 <aes_malloc>:
  446799:	55                   	push   %rbp
  44679a:	48 89 e5             	mov    %rsp,%rbp
  44679d:	48 83 ec 20          	sub    $0x20,%rsp
  4467a1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4467a5:	48 c7 45 f0 ff ff ff 	movq   $0xffffffffffffffff,-0x10(%rbp)
  4467ac:	ff 
  4467ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4467b1:	83 e0 0f             	and    $0xf,%eax
  4467b4:	48 85 c0             	test   %rax,%rax
  4467b7:	75 0a                	jne    4467c3 <aes_malloc+0x2a>
  4467b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4467bd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4467c1:	eb 0c                	jmp    4467cf <aes_malloc+0x36>
  4467c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4467c7:	48 83 c0 10          	add    $0x10,%rax
  4467cb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4467cf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4467d3:	48 89 c6             	mov    %rax,%rsi
  4467d6:	bf 10 00 00 00       	mov    $0x10,%edi
  4467db:	e8 c0 aa fb ff       	callq  4012a0 <aligned_alloc@plt>
  4467e0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4467e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4467e8:	c9                   	leaveq 
  4467e9:	c3                   	retq   

00000000004467ea <aes_calloc>:
  4467ea:	55                   	push   %rbp
  4467eb:	48 89 e5             	mov    %rsp,%rbp
  4467ee:	48 83 ec 30          	sub    $0x30,%rsp
  4467f2:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  4467f6:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  4467fa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4467fe:	48 0f af 45 d0       	imul   -0x30(%rbp),%rax
  446803:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  446807:	48 c7 45 e8 ff ff ff 	movq   $0xffffffffffffffff,-0x18(%rbp)
  44680e:	ff 
  44680f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  446813:	83 e0 0f             	and    $0xf,%eax
  446816:	48 85 c0             	test   %rax,%rax
  446819:	75 0a                	jne    446825 <aes_calloc+0x3b>
  44681b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  44681f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  446823:	eb 0c                	jmp    446831 <aes_calloc+0x47>
  446825:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  446829:	48 83 c0 10          	add    $0x10,%rax
  44682d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  446831:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  446835:	48 89 c6             	mov    %rax,%rsi
  446838:	bf 10 00 00 00       	mov    $0x10,%edi
  44683d:	e8 5e aa fb ff       	callq  4012a0 <aligned_alloc@plt>
  446842:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  446846:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  44684a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  44684e:	be 00 00 00 00       	mov    $0x0,%esi
  446853:	48 89 c7             	mov    %rax,%rdi
  446856:	e8 c5 a7 fb ff       	callq  401020 <memset@plt>
  44685b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  44685f:	c9                   	leaveq 
  446860:	c3                   	retq   

0000000000446861 <clonereaddir>:
  446861:	55                   	push   %rbp
  446862:	48 89 e5             	mov    %rsp,%rbp
  446865:	48 83 ec 20          	sub    $0x20,%rsp
  446869:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  44686d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  446871:	48 89 c7             	mov    %rax,%rdi
  446874:	e8 37 aa fb ff       	callq  4012b0 <readdir@plt>
  446879:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  44687d:	bf 18 01 00 00       	mov    $0x118,%edi
  446882:	e8 12 ff ff ff       	callq  446799 <aes_malloc>
  446887:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  44688b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  44688f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  446893:	ba 18 01 00 00       	mov    $0x118,%edx
  446898:	48 89 ce             	mov    %rcx,%rsi
  44689b:	48 89 c7             	mov    %rax,%rdi
  44689e:	e8 cd a8 fb ff       	callq  401170 <memcpy@plt>
  4468a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4468a7:	c9                   	leaveq 
  4468a8:	c3                   	retq   

00000000004468a9 <aes_strdup>:
  4468a9:	55                   	push   %rbp
  4468aa:	48 89 e5             	mov    %rsp,%rbp
  4468ad:	48 83 ec 20          	sub    $0x20,%rsp
  4468b1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4468b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4468b9:	48 89 c7             	mov    %rax,%rdi
  4468bc:	e8 0f a8 fb ff       	callq  4010d0 <strlen@plt>
  4468c1:	48 89 c7             	mov    %rax,%rdi
  4468c4:	e8 d0 fe ff ff       	callq  446799 <aes_malloc>
  4468c9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4468cd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4468d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4468d5:	48 89 d6             	mov    %rdx,%rsi
  4468d8:	48 89 c7             	mov    %rax,%rdi
  4468db:	e8 e0 a9 fb ff       	callq  4012c0 <strcpy@plt>
  4468e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4468e4:	c9                   	leaveq 
  4468e5:	c3                   	retq   

00000000004468e6 <cloneenv>:
  4468e6:	55                   	push   %rbp
  4468e7:	48 89 e5             	mov    %rsp,%rbp
  4468ea:	48 83 ec 20          	sub    $0x20,%rsp
  4468ee:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4468f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4468f6:	48 89 c7             	mov    %rax,%rdi
  4468f9:	e8 d2 a9 fb ff       	callq  4012d0 <getenv@plt>
  4468fe:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  446902:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  446907:	74 16                	je     44691f <cloneenv+0x39>
  446909:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  44690d:	48 89 c7             	mov    %rax,%rdi
  446910:	e8 bb a9 fb ff       	callq  4012d0 <getenv@plt>
  446915:	48 89 c7             	mov    %rax,%rdi
  446918:	e8 8c ff ff ff       	callq  4468a9 <aes_strdup>
  44691d:	eb 05                	jmp    446924 <cloneenv+0x3e>
  44691f:	b8 00 00 00 00       	mov    $0x0,%eax
  446924:	c9                   	leaveq 
  446925:	c3                   	retq   

0000000000446926 <asprintf128>:
  446926:	55                   	push   %rbp
  446927:	48 89 e5             	mov    %rsp,%rbp
  44692a:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
  446931:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
  446938:	48 89 b5 10 ff ff ff 	mov    %rsi,-0xf0(%rbp)
  44693f:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
  446946:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
  44694d:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
  446954:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
  44695b:	84 c0                	test   %al,%al
  44695d:	74 20                	je     44697f <asprintf128+0x59>
  44695f:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
  446963:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
  446967:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
  44696b:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
  44696f:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
  446973:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
  446977:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
  44697b:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
  44697f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  446986:	00 00 
  446988:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  44698f:	31 c0                	xor    %eax,%eax
  446991:	c7 85 30 ff ff ff 10 	movl   $0x10,-0xd0(%rbp)
  446998:	00 00 00 
  44699b:	c7 85 34 ff ff ff 30 	movl   $0x30,-0xcc(%rbp)
  4469a2:	00 00 00 
  4469a5:	48 8d 45 10          	lea    0x10(%rbp),%rax
  4469a9:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
  4469b0:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
  4469b7:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
  4469be:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
  4469c5:	48 8b 8d 10 ff ff ff 	mov    -0xf0(%rbp),%rcx
  4469cc:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  4469d3:	48 89 ce             	mov    %rcx,%rsi
  4469d6:	48 89 c7             	mov    %rax,%rdi
  4469d9:	e8 02 a9 fb ff       	callq  4012e0 <vasprintf@plt>
  4469de:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%rbp)
  4469e4:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  4469eb:	48 8b 00             	mov    (%rax),%rax
  4469ee:	48 89 c7             	mov    %rax,%rdi
  4469f1:	e8 da a6 fb ff       	callq  4010d0 <strlen@plt>
  4469f6:	be 01 00 00 00       	mov    $0x1,%esi
  4469fb:	48 89 c7             	mov    %rax,%rdi
  4469fe:	e8 e7 fd ff ff       	callq  4467ea <aes_calloc>
  446a03:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
  446a0a:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  446a11:	48 8b 10             	mov    (%rax),%rdx
  446a14:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  446a1b:	48 89 d6             	mov    %rdx,%rsi
  446a1e:	48 89 c7             	mov    %rax,%rdi
  446a21:	e8 9a a8 fb ff       	callq  4012c0 <strcpy@plt>
  446a26:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  446a2d:	48 8b 00             	mov    (%rax),%rax
  446a30:	48 89 c7             	mov    %rax,%rdi
  446a33:	e8 a8 a6 fb ff       	callq  4010e0 <free@plt>
  446a38:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  446a3f:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
  446a46:	48 89 10             	mov    %rdx,(%rax)
  446a49:	8b 85 24 ff ff ff    	mov    -0xdc(%rbp),%eax
  446a4f:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
  446a56:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  446a5d:	00 00 
  446a5f:	74 05                	je     446a66 <asprintf128+0x140>
  446a61:	e8 2a a8 fb ff       	callq  401290 <__stack_chk_fail@plt>
  446a66:	c9                   	leaveq 
  446a67:	c3                   	retq   

0000000000446a68 <vasprintf128>:
  446a68:	55                   	push   %rbp
  446a69:	48 89 e5             	mov    %rsp,%rbp
  446a6c:	48 83 ec 30          	sub    $0x30,%rsp
  446a70:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  446a74:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  446a78:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  446a7c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  446a80:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  446a84:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  446a88:	48 89 ce             	mov    %rcx,%rsi
  446a8b:	48 89 c7             	mov    %rax,%rdi
  446a8e:	e8 4d a8 fb ff       	callq  4012e0 <vasprintf@plt>
  446a93:	89 45 f4             	mov    %eax,-0xc(%rbp)
  446a96:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  446a9a:	48 8b 00             	mov    (%rax),%rax
  446a9d:	48 89 c7             	mov    %rax,%rdi
  446aa0:	e8 2b a6 fb ff       	callq  4010d0 <strlen@plt>
  446aa5:	be 01 00 00 00       	mov    $0x1,%esi
  446aaa:	48 89 c7             	mov    %rax,%rdi
  446aad:	e8 38 fd ff ff       	callq  4467ea <aes_calloc>
  446ab2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  446ab6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  446aba:	48 8b 10             	mov    (%rax),%rdx
  446abd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  446ac1:	48 89 d6             	mov    %rdx,%rsi
  446ac4:	48 89 c7             	mov    %rax,%rdi
  446ac7:	e8 f4 a7 fb ff       	callq  4012c0 <strcpy@plt>
  446acc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  446ad0:	48 8b 00             	mov    (%rax),%rax
  446ad3:	48 89 c7             	mov    %rax,%rdi
  446ad6:	e8 05 a6 fb ff       	callq  4010e0 <free@plt>
  446adb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  446adf:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  446ae3:	48 89 10             	mov    %rdx,(%rax)
  446ae6:	8b 45 f4             	mov    -0xc(%rbp),%eax
  446ae9:	c9                   	leaveq 
  446aea:	c3                   	retq   
  446aeb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000446af0 <__libc_csu_init>:
  446af0:	41 57                	push   %r15
  446af2:	41 56                	push   %r14
  446af4:	41 89 ff             	mov    %edi,%r15d
  446af7:	41 55                	push   %r13
  446af9:	41 54                	push   %r12
  446afb:	4c 8d 25 f6 c2 00 00 	lea    0xc2f6(%rip),%r12        # 452df8 <__frame_dummy_init_array_entry>
  446b02:	55                   	push   %rbp
  446b03:	48 8d 2d f6 c2 00 00 	lea    0xc2f6(%rip),%rbp        # 452e00 <__init_array_end>
  446b0a:	53                   	push   %rbx
  446b0b:	49 89 f6             	mov    %rsi,%r14
  446b0e:	49 89 d5             	mov    %rdx,%r13
  446b11:	4c 29 e5             	sub    %r12,%rbp
  446b14:	48 83 ec 08          	sub    $0x8,%rsp
  446b18:	48 c1 fd 03          	sar    $0x3,%rbp
  446b1c:	e8 97 a4 fb ff       	callq  400fb8 <_init>
  446b21:	48 85 ed             	test   %rbp,%rbp
  446b24:	74 20                	je     446b46 <__libc_csu_init+0x56>
  446b26:	31 db                	xor    %ebx,%ebx
  446b28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  446b2f:	00 
  446b30:	4c 89 ea             	mov    %r13,%rdx
  446b33:	4c 89 f6             	mov    %r14,%rsi
  446b36:	44 89 ff             	mov    %r15d,%edi
  446b39:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  446b3d:	48 83 c3 01          	add    $0x1,%rbx
  446b41:	48 39 eb             	cmp    %rbp,%rbx
  446b44:	75 ea                	jne    446b30 <__libc_csu_init+0x40>
  446b46:	48 83 c4 08          	add    $0x8,%rsp
  446b4a:	5b                   	pop    %rbx
  446b4b:	5d                   	pop    %rbp
  446b4c:	41 5c                	pop    %r12
  446b4e:	41 5d                	pop    %r13
  446b50:	41 5e                	pop    %r14
  446b52:	41 5f                	pop    %r15
  446b54:	c3                   	retq   
  446b55:	90                   	nop
  446b56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  446b5d:	00 00 00 

0000000000446b60 <__libc_csu_fini>:
  446b60:	f3 c3                	repz retq 
  446b62:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  446b69:	1f 84 00 00 00 00 00 

0000000000446b70 <stat64>:
  446b70:	48 89 f2             	mov    %rsi,%rdx
  446b73:	48 89 fe             	mov    %rdi,%rsi
  446b76:	bf 01 00 00 00       	mov    $0x1,%edi
  446b7b:	e9 90 a4 fb ff       	jmpq   401010 <__xstat64@plt>

Disassembly of section .fini:

0000000000446b80 <_fini>:
  446b80:	48 83 ec 08          	sub    $0x8,%rsp
  446b84:	48 83 c4 08          	add    $0x8,%rsp
  446b88:	c3                   	retq   
