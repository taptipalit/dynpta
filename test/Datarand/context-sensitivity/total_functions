define dso_local i32 @main(i32 %argc, i8** %argv) #0 !dbg !97794 {
define internal i64 @ngx_get_options(i32 %argc, i8** %argv) #0 !dbg !98107 {
define internal void @ngx_show_version_info() #0 !dbg !98273 {
define internal i64 @ngx_save_argv(%struct.ngx_cycle_s* %cycle, i32 %argc, i8** %argv) #0 !dbg !98304 {
define internal i64 @ngx_process_options(%struct.ngx_cycle_s* %cycle) #0 !dbg !98379 {
define internal i64 @ngx_add_inherited_sockets(%struct.ngx_cycle_s* %cycle) #0 !dbg !98539 {
define internal void @ngx_write_stdout(i8* %text) #4 !dbg !98651 {
define internal i64 @ngx_write_fd(i32 %fd, i8* %buf, i64 %n) #4 !dbg !98660 {
define internal i8* @ngx_set_worker_processes(%struct.ngx_conf_s* %cf, %struct.ngx_command_s* %cmd, i8* %conf) #0 !dbg !98674 {
define internal i8* @ngx_set_user(%struct.ngx_conf_s* %cf, %struct.ngx_command_s* %cmd, i8* %conf) #0 !dbg !98727 {
define internal i8* @ngx_set_priority(%struct.ngx_conf_s* %cf, %struct.ngx_command_s* %cmd, i8* %conf) #0 !dbg !98840 {
define internal i8* @ngx_set_cpu_affinity(%struct.ngx_conf_s* %cf, %struct.ngx_command_s* %cmd, i8* %conf) #0 !dbg !98919 {
define internal i8* @ngx_set_env(%struct.ngx_conf_s* %cf, %struct.ngx_command_s* %cmd, i8* %conf) #0 !dbg !99101 {
define internal i8* @ngx_load_module(%struct.ngx_conf_s* %cf, %struct.ngx_command_s* %cmd, i8* %conf) #0 !dbg !99162 {
define internal void @ngx_unload_module(i8* %data) #0 !dbg !99295 {
define internal i8* @ngx_core_module_create_conf(%struct.ngx_cycle_s* %cycle) #0 !dbg !99311 {
define internal i8* @ngx_core_module_init_conf(%struct.ngx_cycle_s* %cycle, i8* %conf) #0 !dbg !99370 {
define internal i64 @ngx_array_init(%struct.ngx_array_t* %array, %struct.ngx_pool_s* %pool, i64 %n, i64 %size) #4 !dbg !99627 {
define internal void @ngx_write_stderr(i8* %text) #4 !dbg !99670 {
define dso_local i8** @ngx_set_environment(%struct.ngx_cycle_s* %cycle, i64* %last) #0 !dbg !99677 {
define internal void @ngx_cleanup_environment(i8* %data) #0 !dbg !99960 {
define dso_local i32 @ngx_exec_new_binary(%struct.ngx_cycle_s* %cycle, i8** %argv) #0 !dbg !99976 {
define dso_local %struct.cpu_set_t* @ngx_get_cpu_affinity(i64 %n) #0 !dbg !2218 {
define dso_local void @ngx_log_error_core(i64 %level, %struct.ngx_log_s* %log, i32 %err, i8* %fmt, ...) #0 !dbg !100218 {
define dso_local i8* @ngx_log_errno(i8* %buf, i8* %last, i32 %err) #0 !dbg !100442 {
define internal i64 @ngx_write_fd.6(i32 %fd, i8* %buf, i64 %n) #4 !dbg !100491 {
define dso_local void @ngx_log_abort(i32 %err, i8* %fmt, ...) #0 !dbg !100503 {
define dso_local void @ngx_log_stderr(i32 %err, i8* %fmt, ...) #0 !dbg !100525 {
define dso_local %struct.ngx_log_s* @ngx_log_init(i8* %prefix) #0 !dbg !100579 {
define dso_local i64 @ngx_log_open_default(%struct.ngx_cycle_s* %cycle) #0 !dbg !4181 {
define dso_local %struct.ngx_log_s* @ngx_log_get_file_log(%struct.ngx_log_s* %head) #0 !dbg !100739 {
define internal void @ngx_log_insert(%struct.ngx_log_s* %log, %struct.ngx_log_s* %new_log) #0 !dbg !100771 {
define dso_local i64 @ngx_log_redirect_stderr(%struct.ngx_cycle_s* %cycle) #0 !dbg !100833 {
define dso_local i8* @ngx_log_set_log(%struct.ngx_conf_s* %cf, %struct.ngx_log_s** %head) #0 !dbg !100867 {
define internal i8* @ngx_log_set_levels(%struct.ngx_conf_s* %cf, %struct.ngx_log_s* %log) #0 !dbg !101042 {
define internal i8* @ngx_error_log(%struct.ngx_conf_s* %cf, %struct.ngx_command_s* %cmd, i8* %conf) #0 !dbg !101183 {
define dso_local %struct.ngx_pool_s* @ngx_create_pool(i64 %size, %struct.ngx_log_s* %log) #0 !dbg !101199 {
define dso_local void @ngx_destroy_pool(%struct.ngx_pool_s* %pool) #0 !dbg !101273 {
define dso_local void @ngx_reset_pool(%struct.ngx_pool_s* %pool) #0 !dbg !101367 {
define dso_local i8* @ngx_palloc(%struct.ngx_pool_s* %pool, i64 %size) #0 !dbg !101437 {
define internal i8* @ngx_palloc_small(%struct.ngx_pool_s* %pool, i64 %size, i64 %align) #4 !dbg !101460 {
define internal i8* @ngx_palloc_large(%struct.ngx_pool_s* %pool, i64 %size) #0 !dbg !101521 {
define internal i8* @ngx_palloc_block(%struct.ngx_pool_s* %pool, i64 %size) #0 !dbg !101606 {
define dso_local i8* @ngx_pnalloc(%struct.ngx_pool_s* %pool, i64 %size) #0 !dbg !101707 {
define dso_local i8* @ngx_pmemalign(%struct.ngx_pool_s* %pool, i64 %size, i64 %alignment) #0 !dbg !101728 {
define dso_local i64 @ngx_pfree(%struct.ngx_pool_s* %pool, i8* %p) #0 !dbg !101780 {
define dso_local i8* @ngx_pcalloc(%struct.ngx_pool_s* %pool, i64 %size) #0 !dbg !101821 {
define dso_local %struct.ngx_pool_cleanup_s* @ngx_pool_cleanup_add(%struct.ngx_pool_s* %p, i64 %size) #0 !dbg !101840 {
define dso_local void @ngx_pool_run_cleanup_file(%struct.ngx_pool_s* %p, i32 %fd) #0 !dbg !101896 {
define dso_local void @ngx_pool_cleanup_file(i8* %data) #0 !dbg !101955 {
define dso_local void @ngx_pool_delete_file(i8* %data) #0 !dbg !101973 {
define dso_local %struct.ngx_array_t* @ngx_array_create(%struct.ngx_pool_s* %p, i64 %n, i64 %size) #0 !dbg !102010 {
define internal i64 @ngx_array_init.102(%struct.ngx_array_t* %array, %struct.ngx_pool_s* %pool, i64 %n, i64 %size) #4 !dbg !102186 {
define dso_local void @ngx_array_destroy(%struct.ngx_array_t* %a) #0 !dbg !102229 {
define dso_local i8* @ngx_array_push(%struct.ngx_array_t* %a) #0 !dbg !102282 {
define dso_local i8* @ngx_array_push_n(%struct.ngx_array_t* %a, i64 %n) #0 !dbg !102380 {
define dso_local %struct.ngx_list_t* @ngx_list_create(%struct.ngx_pool_s* %pool, i64 %n, i64 %size) #0 !dbg !102500 {
define internal i64 @ngx_list_init(%struct.ngx_list_t* %list, %struct.ngx_pool_s* %pool, i64 %n, i64 %size) #4 !dbg !102683 {
define dso_local i8* @ngx_list_push(%struct.ngx_list_t* %l) #0 !dbg !102738 {
define dso_local i8* @ngx_hash_find(%struct.ngx_hash_t* %hash, i64 %key, i8* %name, i64 %len) #0 !dbg !102818 {
define dso_local i8* @ngx_hash_find_wc_head(%struct.ngx_hash_wildcard_t* %hwc, i8* %name, i64 %len) #0 !dbg !102895 {
define dso_local i8* @ngx_hash_find_wc_tail(%struct.ngx_hash_wildcard_t* %hwc, i8* %name, i64 %len) #0 !dbg !103029 {
define dso_local i8* @ngx_hash_find_combined(%struct.ngx_hash_combined_t* %hash, i64 %key, i8* %name, i64 %len) #0 !dbg !103119 {
define dso_local i64 @ngx_hash_init(%struct.ngx_hash_init_t* %hinit, %struct.ngx_hash_key_t* %names, i64 %nelts) #0 !dbg !103213 {
define dso_local i64 @ngx_hash_wildcard_init(%struct.ngx_hash_init_t* %hinit, %struct.ngx_hash_key_t* %names, i64 %nelts) #0 !dbg !103849 {
define internal i64 @ngx_array_init.108(%struct.ngx_array_t* %array, %struct.ngx_pool_s* %pool, i64 %n, i64 %size) #4 !dbg !104194 {
define dso_local i64 @ngx_hash_key(i8* %data, i64 %len) #0 !dbg !104238 {
define dso_local i64 @ngx_hash_key_lc(i8* %data, i64 %len) #0 !dbg !104266 {
define dso_local i64 @ngx_hash_strlow(i8* %dst, i8* %src, i64 %n) #0 !dbg !104294 {
define dso_local i64 @ngx_hash_keys_array_init(%struct.ngx_hash_keys_arrays_t* %ha, i64 %type) #0 !dbg !104320 {
define dso_local i64 @ngx_hash_add_key(%struct.ngx_hash_keys_arrays_t* %ha, %struct.ngx_str_t* %key, i8* %value, i64 %flags) #0 !dbg !104440 {
define dso_local %struct.ngx_buf_s* @ngx_create_temp_buf(%struct.ngx_pool_s* %pool, i64 %size) #0 !dbg !105026 {
define dso_local %struct.ngx_chain_s* @ngx_alloc_chain_link(%struct.ngx_pool_s* %pool) #0 !dbg !105214 {
define dso_local %struct.ngx_chain_s* @ngx_create_chain_of_bufs(%struct.ngx_pool_s* %pool, %struct.timespec* %bufs) #0 !dbg !105248 {
define dso_local i64 @ngx_chain_add_copy(%struct.ngx_pool_s* %pool, %struct.ngx_chain_s** %chain, %struct.ngx_chain_s* %in) #0 !dbg !105358 {
define dso_local %struct.ngx_chain_s* @ngx_chain_get_free_buf(%struct.ngx_pool_s* %p, %struct.ngx_chain_s** %free) #0 !dbg !105426 {
define dso_local void @ngx_chain_update_chains(%struct.ngx_pool_s* %p, %struct.ngx_chain_s** %free, %struct.ngx_chain_s** %busy, %struct.ngx_chain_s** %out, i8* %tag) #0 !dbg !105478 {
define dso_local i64 @ngx_chain_coalesce_file(%struct.ngx_chain_s** %in, i64 %limit) #0 !dbg !105591 {
define dso_local %struct.ngx_chain_s* @ngx_chain_update_sent(%struct.ngx_chain_s* %in, i64 %sent) #0 !dbg !105713 {
define dso_local %struct.ngx_queue_s* @ngx_queue_middle(%struct.ngx_queue_s* %queue) #0 !dbg !105807 {
define dso_local void @ngx_queue_sort(%struct.ngx_queue_s* %queue, i64 (%struct.ngx_queue_s*, %struct.ngx_queue_s*)* %cmp) #0 !dbg !105865 {
define dso_local i64 @ngx_output_chain(%struct.ngx_output_chain_ctx_s* %ctx, %struct.ngx_chain_s* %in) #0 !dbg !105933 {
define internal i64 @ngx_output_chain_as_is(%struct.ngx_output_chain_ctx_s* %ctx, %struct.ngx_buf_s* %buf) #4 !dbg !106309 {
define internal i64 @ngx_output_chain_add_copy(%struct.ngx_pool_s* %pool, %struct.ngx_chain_s** %chain, %struct.ngx_chain_s* %in) #0 !dbg !106371 {
define internal i64 @ngx_output_chain_align_file_buf(%struct.ngx_output_chain_ctx_s* %ctx, i64 %bsize) #0 !dbg !106438 {
define internal i64 @ngx_output_chain_get_buf(%struct.ngx_output_chain_ctx_s* %ctx, i64 %bsize) #0 !dbg !106529 {
define internal i64 @ngx_output_chain_copy_buf(%struct.ngx_output_chain_ctx_s* %ctx) #0 !dbg !106671 {
define dso_local i64 @ngx_chain_writer(i8* %data, %struct.ngx_chain_s* %in) #0 !dbg !106920 {
define dso_local void @ngx_strlow(i8* %dst, i8* %src, i64 %n) #0 !dbg !108794 {
define dso_local i64 @ngx_strnlen(i8* %p, i64 %n) #0 !dbg !108815 {
define dso_local i8* @ngx_cpystrn(i8* %dst, i8* %src, i64 %n) #0 !dbg !108849 {
define dso_local i8* @ngx_pstrdup(%struct.ngx_pool_s* %pool, %struct.ngx_str_t* %src) #0 !dbg !108887 {
define dso_local i8* @ngx_sprintf(i8* %buf, i8* %fmt, ...) #0 !dbg !109040 {
define dso_local i8* @ngx_vslprintf(i8* %buf, i8* %last, i8* %fmt, %struct.__va_list_tag* %args) #0 !dbg !109070 {
define internal i8* @ngx_sprintf_num(i8* %buf, i8* %last, i64 %ui64, i8 zeroext %zero, i64 %hexadecimal, i64 %width) #0 !dbg !4211 {
define dso_local i8* @ngx_snprintf(i8* %buf, i64 %max, i8* %fmt, ...) #0 !dbg !109693 {
define dso_local i8* @ngx_slprintf(i8* %buf, i8* %last, i8* %fmt, ...) #0 !dbg !109718 {
define dso_local i64 @ngx_strcasecmp(i8* %s1, i8* %s2) #0 !dbg !109741 {
define dso_local i64 @ngx_strncasecmp(i8* %s1, i8* %s2, i64 %n) #0 !dbg !109804 {
define dso_local i8* @ngx_strnstr(i8* %s1, i8* %s2, i64 %len) #0 !dbg !109869 {
define dso_local i8* @ngx_strstrn(i8* %s1, i8* %s2, i64 %n) #0 !dbg !109929 {
define dso_local i8* @ngx_strcasestrn(i8* %s1, i8* %s2, i64 %n) #0 !dbg !109970 {
define dso_local i8* @ngx_strlcasestrn(i8* %s1, i8* %last, i8* %s2, i64 %n) #0 !dbg !110036 {
define dso_local i64 @ngx_rstrncmp(i8* %s1, i8* %s2, i64 %n) #0 !dbg !110109 {
define dso_local i64 @ngx_rstrncasecmp(i8* %s1, i8* %s2, i64 %n) #0 !dbg !110153 {
define dso_local i64 @ngx_memn2cmp(i8* %s1, i8* %s2, i64 %n1, i64 %n2) #0 !dbg !110223 {
define dso_local i64 @ngx_dns_strcmp(i8* %s1, i8* %s2) #0 !dbg !110269 {
define dso_local i64 @ngx_filename_cmp(i8* %s1, i8* %s2, i64 %n) #0 !dbg !110340 {
define dso_local i64 @ngx_atoi(i8* %line, i64 %n) #0 !dbg !110405 {
define dso_local i64 @ngx_atofp(i8* %line, i64 %n, i64 %point) #0 !dbg !110477 {
define dso_local i64 @ngx_atosz(i8* %line, i64 %n) #0 !dbg !110590 {
define dso_local i64 @ngx_atoof(i8* %line, i64 %n) #0 !dbg !110662 {
define dso_local i64 @ngx_atotm(i8* %line, i64 %n) #0 !dbg !110734 {
define dso_local i64 @ngx_hextoi(i8* %line, i64 %n) #0 !dbg !110804 {
define dso_local i8* @ngx_hex_dump(i8* %dst, i8* %src, i64 %len) #0 !dbg !4257 {
define dso_local void @ngx_encode_base64(%struct.ngx_str_t* %dst, %struct.ngx_str_t* %src) #0 !dbg !4263 {
define internal void @ngx_encode_base64_internal(%struct.ngx_str_t* %dst, %struct.ngx_str_t* %src, i8* %basis, i64 %padding) #0 !dbg !110919 {
define dso_local void @ngx_encode_base64url(%struct.ngx_str_t* %dst, %struct.ngx_str_t* %src) #0 !dbg !4272 {
define dso_local i64 @ngx_decode_base64(%struct.ngx_str_t* %dst, %struct.ngx_str_t* %src) #0 !dbg !4275 {
define internal i64 @ngx_decode_base64_internal(%struct.ngx_str_t* %dst, %struct.ngx_str_t* %src, i8* %basis) #0 !dbg !111060 {
define dso_local i64 @ngx_decode_base64url(%struct.ngx_str_t* %dst, %struct.ngx_str_t* %src) #0 !dbg !4281 {
define dso_local i32 @ngx_utf8_decode(i8** %p, i64 %n) #0 !dbg !111206 {
define dso_local i64 @ngx_utf8_length(i8* %p, i64 %n) #0 !dbg !111298 {
define dso_local i8* @ngx_utf8_cpystrn(i8* %dst, i8* %src, i64 %n, i64 %len) #0 !dbg !111348 {
define dso_local i64 @ngx_escape_uri(i8* %dst, i8* %src, i64 %size, i64 %type) #0 !dbg !4284 {
define dso_local void @ngx_unescape_uri(i8** %dst, i8** %src, i64 %size, i64 %type) #0 !dbg !4219 {
define dso_local i64 @ngx_escape_html(i8* %dst, i8* %src, i64 %size) #0 !dbg !111749 {
define dso_local i64 @ngx_escape_json(i8* %dst, i8* %src, i64 %size) #0 !dbg !111849 {
define dso_local void @ngx_str_rbtree_insert_value(%struct.ngx_rbtree_node_s* %temp, %struct.ngx_rbtree_node_s* %node, %struct.ngx_rbtree_node_s* %sentinel) #0 !dbg !111978 {
define dso_local %struct.ngx_str_node_t* @ngx_str_rbtree_lookup(%struct.ngx_rbtree_s* %rbtree, %struct.ngx_str_t* %val, i32 %hash) #0 !dbg !112089 {
define dso_local void @ngx_sort(i8* %base, i64 %n, i64 %size, i64 (i8*, i8*)* %cmp) #0 !dbg !112195 {
define dso_local void @ngx_explicit_memzero(i8* %buf, i64 %n) #0 !dbg !112277 {
define dso_local i64 @ngx_parse_size(%struct.ngx_str_t* %line) #0 !dbg !112287 {
define dso_local i64 @ngx_parse_offset(%struct.ngx_str_t* %line) #0 !dbg !112350 {
define dso_local i64 @ngx_parse_time(%struct.ngx_str_t* %line, i64 %is_sec) #0 !dbg !95311 {
define dso_local i64 @ngx_parse_http_time(i8* %value, i64 %len) #0 !dbg !4312 {
define dso_local i32 @ngx_inet_addr(i8* %text, i64 %len) #0 !dbg !113352 {
define dso_local i64 @ngx_inet6_addr(i8* %p, i64 %len, i8* %addr) #0 !dbg !113444 {
define dso_local i64 @ngx_sock_ntop(%struct.sockaddr* %sa, i32 %socklen, i8* %text, i64 %len, i64 %port) #0 !dbg !113692 {
define dso_local i64 @ngx_inet6_ntop(i8* %p, i8* %text, i64 %len) #0 !dbg !113826 {
define dso_local i64 @ngx_inet_ntop(i32 %family, i8* %addr, i8* %text, i64 %len) #0 !dbg !114010 {
define dso_local i64 @ngx_ptocidr(%struct.ngx_str_t* %text, %struct.ngx_cidr_t* %cidr) #0 !dbg !114045 {
define internal i8* @ngx_strlchr(i8* %p, i8* %last, i8 zeroext %c) #4 !dbg !114306 {
define dso_local i64 @ngx_cidr_match(%struct.sockaddr* %sa, %struct.ngx_array_t* %cidrs) #0 !dbg !114334 {
define dso_local i64 @ngx_parse_addr(%struct.ngx_pool_s* %pool, %struct.ngx_addr_t* %addr, i8* %text, i64 %len) #0 !dbg !114633 {
define dso_local i64 @ngx_parse_addr_port(%struct.ngx_pool_s* %pool, %struct.ngx_addr_t* %addr, i8* %text, i64 %len) #0 !dbg !114733 {
define dso_local void @ngx_inet_set_port(%struct.sockaddr* %sa, i16 zeroext %port) #0 !dbg !114850 {
define dso_local i64 @ngx_parse_url(%struct.ngx_pool_s* %pool, %struct.ngx_url_t* %u) #0 !dbg !114885 {
define internal i64 @ngx_parse_unix_domain_url(%struct.ngx_pool_s* %pool, %struct.ngx_url_t* %u) #0 !dbg !114961 {
define internal i64 @ngx_parse_inet6_url(%struct.ngx_pool_s* %pool, %struct.ngx_url_t* %u) #0 !dbg !115128 {
define internal i64 @ngx_parse_inet_url(%struct.ngx_pool_s* %pool, %struct.ngx_url_t* %u) #0 !dbg !115421 {
define dso_local i64 @ngx_inet_resolve_host(%struct.ngx_pool_s* %pool, %struct.ngx_url_t* %u) #0 !dbg !115868 {
define dso_local i64 @ngx_cmp_sockaddr(%struct.sockaddr* %sa1, i32 %slen1, %struct.sockaddr* %sa2, i32 %slen2, i64 %cmp_port) #0 !dbg !116187 {
define dso_local zeroext i16 @ngx_inet_get_port(%struct.sockaddr* %sa) #0 !dbg !116316 {
define dso_local i64 @ngx_get_full_name(%struct.ngx_pool_s* %pool, %struct.ngx_str_t* %prefix, %struct.ngx_str_t* %name) #0 !dbg !116345 {
define internal i64 @ngx_test_full_name(%struct.ngx_str_t* %name) #0 !dbg !116538 {
define dso_local i64 @ngx_write_chain_to_temp_file(%struct.ngx_temp_file_t* %tf, %struct.ngx_chain_s* %chain) #0 !dbg !116552 {
define dso_local i64 @ngx_create_temp_file(%struct.ngx_file_s* %file, %struct.ngx_path_t* %path, %struct.ngx_pool_s* %pool, i64 %persistent, i64 %clean, i64 %access) #0 !dbg !116623 {
define dso_local i64 @ngx_next_temp_number(i64 %collision) #0 !dbg !116826 {
define dso_local void @ngx_create_hashed_filename(%struct.ngx_path_t* %path, i8* %file, i64 %len) #0 !dbg !116844 {
define dso_local i64 @ngx_create_path(%struct.ngx_file_s* %file, %struct.ngx_path_t* %path) #0 !dbg !116906 {
define dso_local i32 @ngx_create_full_path(i8* %dir, i64 %access) #0 !dbg !116978 {
define dso_local i8* @ngx_conf_set_path_slot(%struct.ngx_conf_s.512* %cf, %struct.ngx_command_s.506* %cmd, i8* %conf) #0 !dbg !117039 {
define dso_local i64 @ngx_add_path(%struct.ngx_conf_s.512* %cf, %struct.ngx_path_t** %slot) #0 !dbg !118970 {
define dso_local i8* @ngx_conf_merge_path_value(%struct.ngx_conf_s.512* %cf, %struct.ngx_path_t** %path, %struct.ngx_path_t* %prev, %struct.ngx_path_init_t* %init) #0 !dbg !119132 {
define dso_local i8* @ngx_conf_set_access_slot(%struct.ngx_conf_s.512* %cf, %struct.ngx_command_s.506* %cmd, i8* %conf) #0 !dbg !119237 {
define dso_local i64 @ngx_create_paths(%struct.ngx_cycle_s.510* %cycle, i32 %user) #0 !dbg !119359 {
define dso_local i64 @ngx_ext_rename_file(%struct.ngx_str_t* %src, %struct.ngx_str_t* %to, %struct.ngx_ext_rename_file_t* %ext) #0 !dbg !119473 {
define dso_local i64 @ngx_copy_file(i8* %from, i8* %to, %struct.ngx_copy_file_t* %cf) #0 !dbg !119700 {
define internal i64 @ngx_write_fd.171(i32 %fd, i8* %buf, i64 %n) #4 !dbg !119956 {
define dso_local i64 @ngx_walk_tree(%struct.ngx_tree_ctx_s* %ctx, %struct.ngx_str_t* %tree) #0 !dbg !119968 {
define internal i64 @ngx_de_info(i8* %name, %struct.ngx_dir_t* %dir) #4 !dbg !120328 {
define dso_local i64 @ngx_crc32_table_init() #0 !dbg !120344 {
define dso_local i32 @ngx_murmur_hash2(i8* %data, i64 %len) #0 !dbg !120381 {
define dso_local void @ngx_md5_init(%struct.ngx_md5_t* %ctx) #0 !dbg !120447 {
define dso_local void @ngx_md5_update(%struct.ngx_md5_t* %ctx, i8* %data, i64 %size) #0 !dbg !120480 {
define internal i8* @ngx_md5_body(%struct.ngx_md5_t* %ctx, i8* %data, i64 %size) #0 !dbg !120543 {
define dso_local void @ngx_md5_final(i8* %result, %struct.ngx_md5_t* %ctx) #0 !dbg !120689 {
define dso_local void @ngx_sha1_init(%struct.ngx_sha1_t* %ctx) #0 !dbg !120881 {
define dso_local void @ngx_sha1_update(%struct.ngx_sha1_t* %ctx, i8* %data, i64 %size) #0 !dbg !120918 {
define internal i8* @ngx_sha1_body(%struct.ngx_sha1_t* %ctx, i8* %data, i64 %size) #0 !dbg !120981 {
define dso_local void @ngx_sha1_final(i8* %result, %struct.ngx_sha1_t* %ctx) #0 !dbg !121201 {
define dso_local void @ngx_rbtree_insert(%struct.ngx_rbtree_s* %tree, %struct.ngx_rbtree_node_s* %node) #0 !dbg !121416 {
define internal void @ngx_rbtree_left_rotate(%struct.ngx_rbtree_node_s** %root, %struct.ngx_rbtree_node_s* %sentinel, %struct.ngx_rbtree_node_s* %node) #4 !dbg !121594 {
define internal void @ngx_rbtree_right_rotate(%struct.ngx_rbtree_node_s** %root, %struct.ngx_rbtree_node_s* %sentinel, %struct.ngx_rbtree_node_s* %node) #4 !dbg !121671 {
define dso_local void @ngx_rbtree_insert_value(%struct.ngx_rbtree_node_s* %temp, %struct.ngx_rbtree_node_s* %node, %struct.ngx_rbtree_node_s* %sentinel) #0 !dbg !121746 {
define dso_local void @ngx_rbtree_insert_timer_value(%struct.ngx_rbtree_node_s* %temp, %struct.ngx_rbtree_node_s* %node, %struct.ngx_rbtree_node_s* %sentinel) #0 !dbg !121802 {
define dso_local void @ngx_rbtree_delete(%struct.ngx_rbtree_s* %tree, %struct.ngx_rbtree_node_s* %node) #0 !dbg !121859 {
define internal %struct.ngx_rbtree_node_s* @ngx_rbtree_min(%struct.ngx_rbtree_node_s* %node, %struct.ngx_rbtree_node_s* %sentinel) #4 !dbg !122235 {
define dso_local %struct.ngx_rbtree_node_s* @ngx_rbtree_next(%struct.ngx_rbtree_s* %tree, %struct.ngx_rbtree_node_s* %node) #0 !dbg !122255 {
define dso_local %struct.ngx_radix_tree_t* @ngx_radix_tree_create(%struct.ngx_pool_s* %pool, i64 %preallocate) #0 !dbg !122316 {
define internal %struct.ngx_radix_node_s* @ngx_radix_alloc(%struct.ngx_radix_tree_t* %tree) #0 !dbg !122578 {
define dso_local i64 @ngx_radix32tree_insert(%struct.ngx_radix_tree_t* %tree, i32 %key, i32 %mask, i64 %value) #0 !dbg !122640 {
define dso_local i64 @ngx_radix32tree_delete(%struct.ngx_radix_tree_t* %tree, i32 %key, i32 %mask) #0 !dbg !122764 {
define dso_local i64 @ngx_radix32tree_find(%struct.ngx_radix_tree_t* %tree, i32 %key) #0 !dbg !122893 {
define dso_local i64 @ngx_radix128tree_insert(%struct.ngx_radix_tree_t* %tree, i8* %key, i8* %mask, i64 %value) #0 !dbg !122943 {
define dso_local i64 @ngx_radix128tree_delete(%struct.ngx_radix_tree_t* %tree, i8* %key, i8* %mask) #0 !dbg !123100 {
define dso_local i64 @ngx_radix128tree_find(%struct.ngx_radix_tree_t* %tree, i8* %key) #0 !dbg !123247 {
define dso_local void @ngx_slab_sizes_init() #0 !dbg !123309 {
define dso_local void @ngx_slab_init(%struct.ngx_slab_pool_t* %pool) #0 !dbg !123332 {
define dso_local i8* @ngx_slab_alloc(%struct.ngx_slab_pool_t* %pool, i64 %size) #0 !dbg !123546 {
define dso_local i8* @ngx_slab_alloc_locked(%struct.ngx_slab_pool_t* %pool, i64 %size) #0 !dbg !123567 {
define internal %struct.ngx_slab_page_s* @ngx_slab_alloc_pages(%struct.ngx_slab_pool_t* %pool, i64 %pages) #0 !dbg !124170 {
define internal void @ngx_slab_error(%struct.ngx_slab_pool_t* %pool, i64 %level, i8* %text) #0 !dbg !124335 {
define dso_local i8* @ngx_slab_calloc(%struct.ngx_slab_pool_t* %pool, i64 %size) #0 !dbg !124348 {
define dso_local i8* @ngx_slab_calloc_locked(%struct.ngx_slab_pool_t* %pool, i64 %size) #0 !dbg !124367 {
define dso_local void @ngx_slab_free(%struct.ngx_slab_pool_t* %pool, i8* %p) #0 !dbg !124386 {
define dso_local void @ngx_slab_free_locked(%struct.ngx_slab_pool_t* %pool, i8* %p) #0 !dbg !124403 {
define internal void @ngx_slab_free_pages(%struct.ngx_slab_pool_t* %pool, %struct.ngx_slab_page_s* %page, i64 %pages) #0 !dbg !124855 {
define dso_local void @ngx_time_init() #0 !dbg !125057 {
define dso_local void @ngx_time_update() #0 !dbg !125066 {
define internal i64 @ngx_monotonic_time(i64 %sec, i64 %msec) #0 !dbg !125257 {
define dso_local void @ngx_gmtime(i64 %t, %struct.tm* %tp) #0 !dbg !125281 {
define dso_local void @ngx_time_sigsafe_update() #0 !dbg !125448 {
define dso_local i8* @ngx_http_time(i8* %buf, i64 %t) #0 !dbg !125531 {
define dso_local i8* @ngx_http_cookie_time(i8* %buf, i64 %t) #0 !dbg !125555 {
define dso_local i64 @ngx_next_time(i64 %when) #0 !dbg !125585 {
define dso_local i64 @ngx_shmtx_create(%struct.ngx_shmtx_t* %mtx, %struct.timespec* %addr, i8* %name) #0 !dbg !125646 {
define dso_local void @ngx_shmtx_destroy(%struct.ngx_shmtx_t* %mtx) #0 !dbg !125712 {
define dso_local i64 @ngx_shmtx_trylock(%struct.ngx_shmtx_t* %mtx) #0 !dbg !125735 {
define dso_local void @ngx_shmtx_lock(%struct.ngx_shmtx_t* %mtx) #0 !dbg !125748 {
define dso_local void @ngx_shmtx_unlock(%struct.ngx_shmtx_t* %mtx) #0 !dbg !125861 {
define internal void @ngx_shmtx_wakeup(%struct.ngx_shmtx_t* %mtx) #0 !dbg !125879 {
define dso_local i64 @ngx_shmtx_force_unlock(%struct.ngx_shmtx_t* %mtx, i32 %pid) #0 !dbg !125925 {
define dso_local %struct.ngx_listening_s.881* @ngx_create_listening(%struct.ngx_conf_s.970* %cf, %struct.sockaddr* %sockaddr, i32 %socklen) #0 !dbg !125941 {
define dso_local i64 @ngx_clone_listening(%struct.ngx_cycle_s.968* %cycle, %struct.ngx_listening_s.881* %ls) #0 !dbg !126062 {
define dso_local i64 @ngx_set_inherited_sockets(%struct.ngx_cycle_s.968* %cycle) #0 !dbg !126123 {
define dso_local i64 @ngx_open_listening_sockets(%struct.ngx_cycle_s.968* %cycle) #0 !dbg !126457 {
define dso_local void @ngx_configure_listening_sockets(%struct.ngx_cycle_s.968* %cycle) #0 !dbg !126867 {
define dso_local void @ngx_close_listening_sockets(%struct.ngx_cycle_s.968* %cycle) #0 !dbg !127204 {
define dso_local void @ngx_free_connection(%struct.ngx_connection_s.965* %c) #0 !dbg !127328 {
define dso_local %struct.ngx_connection_s.965* @ngx_get_connection(i32 %s, %struct.ngx_log_s* %log) #0 !dbg !127362 {
define internal void @ngx_drain_connections(%struct.ngx_cycle_s.968* %cycle) #0 !dbg !127499 {
define dso_local void @ngx_close_connection(%struct.ngx_connection_s.965* %c) #0 !dbg !127544 {
define internal void @ngx_event_del_timer(%struct.ngx_event_s* %ev) #4 !dbg !127703 {
define dso_local void @ngx_reusable_connection(%struct.ngx_connection_s.965* %c, i64 %reusable) #0 !dbg !127714 {
define dso_local void @ngx_close_idle_connections(%struct.ngx_cycle_s.968* %cycle) #0 !dbg !127745 {
define dso_local i64 @ngx_connection_local_sockaddr(%struct.ngx_connection_s.965* %c, %struct.ngx_str_t* %s, i64 %port) #0 !dbg !127794 {
define dso_local i64 @ngx_connection_error(%struct.ngx_connection_s.965* %c, i32 %err, i8* %text) #0 !dbg !127936 {
define dso_local i64 @ngx_tcp_nodelay(%struct.ngx_connection_s.965* %c) #0 !dbg !128005 {
define dso_local %struct.ngx_cycle_s* @ngx_init_cycle(%struct.ngx_cycle_s* %old_cycle) #0 !dbg !128037 {
define internal i64 @ngx_array_init.272(%struct.ngx_array_t* %array, %struct.ngx_pool_s* %pool, i64 %n, i64 %size) #4 !dbg !129948 {
define internal i64 @ngx_list_init.273(%struct.ngx_list_t* %list, %struct.ngx_pool_s* %pool, i64 %n, i64 %size) #4 !dbg !129991 {
define internal void @ngx_destroy_cycle_pools(%struct.ngx_conf_s* %conf) #0 !dbg !130047 {
define dso_local i64 @ngx_create_pidfile(%struct.ngx_str_t* %name, %struct.ngx_log_s* %log) #0 !dbg !130059 {
define dso_local void @ngx_delete_pidfile(%struct.ngx_cycle_s* %cycle) #0 !dbg !130135 {
define internal i64 @ngx_test_lockfile(i8* %file, %struct.ngx_log_s* %log) #0 !dbg !130163 {
define internal i64 @ngx_init_zone_pool(%struct.ngx_cycle_s* %cycle, %struct.ngx_shm_zone_s* %zn) #0 !dbg !130171 {
define internal void @ngx_clean_old_cycles(%struct.ngx_event_s* %ev) #0 !dbg !130240 {
define internal void @ngx_event_add_timer(%struct.ngx_event_s* %ev, i64 %timer) #4 !dbg !130341 {
define internal void @ngx_event_del_timer.291(%struct.ngx_event_s* %ev) #4 !dbg !130388 {
define dso_local i64 @ngx_signal_process(%struct.ngx_cycle_s* %cycle, i8* %sig) #0 !dbg !130398 {
define dso_local void @ngx_reopen_files(%struct.ngx_cycle_s* %cycle, i32 %user) #0 !dbg !130491 {
define dso_local %struct.ngx_shm_zone_s* @ngx_shared_memory_add(%struct.ngx_conf_s* %cf, %struct.ngx_str_t* %name, i64 %size, i8* %tag) #0 !dbg !130711 {
define dso_local void @ngx_set_shutdown_timer(%struct.ngx_cycle_s* %cycle) #0 !dbg !130894 {
define internal void @ngx_shutdown_timer_handler(%struct.ngx_event_s* %ev) #0 !dbg !130919 {
define dso_local void @ngx_spinlock(i64* %lock, i64 %value, i64 %spin) #0 !dbg !130993 {
define dso_local void @ngx_rwlock_wlock(i64* %lock) #0 !dbg !131070 {
define dso_local void @ngx_rwlock_rlock(i64* %lock) #0 !dbg !131142 {
define dso_local void @ngx_rwlock_unlock(i64* %lock) #0 !dbg !131218 {
define dso_local void @ngx_rwlock_downgrade(i64* %lock) #0 !dbg !131250 {
define dso_local void @ngx_cpuinfo() #0 !dbg !131263 {
define internal void @ngx_cpuid(i32 %i, i32* %buf) #4 !dbg !131335 {
define dso_local i8* @ngx_conf_param(%struct.ngx_conf_s* %cf) #0 !dbg !131366 {
define dso_local i8* @ngx_conf_parse(%struct.ngx_conf_s* %cf, %struct.ngx_str_t* %filename) #0 !dbg !8652 {
define dso_local void @ngx_conf_log_error(i64 %level, %struct.ngx_conf_s* %cf, i32 %err, i8* %fmt, ...) #0 !dbg !131734 {
define internal i64 @ngx_conf_add_dump(%struct.ngx_conf_s* %cf, %struct.ngx_str_t* %filename) #0 !dbg !131810 {
define internal i64 @ngx_conf_read_token(%struct.ngx_conf_s* %cf) #0 !dbg !131947 {
define internal i64 @ngx_conf_handler(%struct.ngx_conf_s* %cf, i64 %last) #0 !dbg !132533 {
define internal i32 @ngx_crc32_long(i8* %p, i64 %len) #4 !dbg !132848 {
define dso_local i8* @ngx_conf_include(%struct.ngx_conf_s* %cf, %struct.ngx_command_s* %cmd, i8* %conf) #0 !dbg !132875 {
define dso_local i64 @ngx_conf_full_name(%struct.ngx_cycle_s* %cycle, %struct.ngx_str_t* %name, i64 %conf_prefix) #0 !dbg !133022 {
define dso_local %struct.ngx_open_file_s* @ngx_conf_open_file(%struct.ngx_cycle_s* %cycle, %struct.ngx_str_t* %name) #0 !dbg !133045 {
define dso_local i8* @ngx_conf_set_flag_slot(%struct.ngx_conf_s* %cf, %struct.ngx_command_s* %cmd, i8* %conf) #0 !dbg !133173 {
define dso_local i8* @ngx_conf_set_str_slot(%struct.ngx_conf_s* %cf, %struct.ngx_command_s* %cmd, i8* %conf) #0 !dbg !133260 {
define dso_local i8* @ngx_conf_set_str_array_slot(%struct.ngx_conf_s* %cf, %struct.ngx_command_s* %cmd, i8* %conf) #0 !dbg !133310 {
define dso_local i8* @ngx_conf_set_keyval_slot(%struct.ngx_conf_s* %cf, %struct.ngx_command_s* %cmd, i8* %conf) #0 !dbg !133385 {
define dso_local i8* @ngx_conf_set_num_slot(%struct.ngx_conf_s* %cf, %struct.ngx_command_s* %cmd, i8* %conf) #0 !dbg !133470 {
define dso_local i8* @ngx_conf_set_size_slot(%struct.ngx_conf_s* %cf, %struct.ngx_command_s* %cmd, i8* %conf) #0 !dbg !133533 {
define dso_local i8* @ngx_conf_set_off_slot(%struct.ngx_conf_s* %cf, %struct.ngx_command_s* %cmd, i8* %conf) #0 !dbg !133593 {
define dso_local i8* @ngx_conf_set_msec_slot(%struct.ngx_conf_s* %cf, %struct.ngx_command_s* %cmd, i8* %conf) #0 !dbg !133653 {
define dso_local i8* @ngx_conf_set_sec_slot(%struct.ngx_conf_s* %cf, %struct.ngx_command_s* %cmd, i8* %conf) #0 !dbg !133713 {
define dso_local i8* @ngx_conf_set_bufs_slot(%struct.ngx_conf_s* %cf, %struct.ngx_command_s* %cmd, i8* %conf) #0 !dbg !133773 {
define dso_local i8* @ngx_conf_set_enum_slot(%struct.ngx_conf_s* %cf, %struct.ngx_command_s* %cmd, i8* %conf) #0 !dbg !133840 {
define dso_local i8* @ngx_conf_set_bitmask_slot(%struct.ngx_conf_s* %cf, %struct.ngx_command_s* %cmd, i8* %conf) #0 !dbg !133931 {
define dso_local i8* @ngx_conf_deprecated(%struct.ngx_conf_s* %cf, i8* %post, i8* %data) #0 !dbg !134061 {
define dso_local i8* @ngx_conf_check_num_bounds(%struct.ngx_conf_s* %cf, i8* %post, i8* %data) #0 !dbg !134085 {
define internal void @ngx_conf_flush_files(%struct.ngx_cycle_s* %cycle) #0 !dbg !134148 {
define dso_local i64 @ngx_preinit_modules() #0 !dbg !134212 {
define dso_local i64 @ngx_cycle_modules(%struct.ngx_cycle_s* %cycle) #0 !dbg !134245 {
define dso_local i64 @ngx_init_modules(%struct.ngx_cycle_s* %cycle) #0 !dbg !136178 {
define dso_local i64 @ngx_count_modules(%struct.ngx_cycle_s* %cycle, i64 %type) #0 !dbg !136217 {
define internal i64 @ngx_module_ctx_index(%struct.ngx_cycle_s* %cycle, i64 %type, i64 %index) #0 !dbg !136364 {
define dso_local i64 @ngx_add_module(%struct.ngx_conf_s* %cf, %struct.ngx_str_t* %file, %struct.ngx_module_s* %module, i8** %order) #0 !dbg !136462 {
define internal i64 @ngx_module_index(%struct.ngx_cycle_s* %cycle) #0 !dbg !136696 {
define dso_local %struct.ngx_resolver_s* @ngx_resolver_create(%struct.ngx_conf_s.1429* %cf, %struct.ngx_str_t* %names, i64 %n) #0 !dbg !136777 {
define internal void @ngx_resolver_cleanup(i8* %data) #0 !dbg !138865 {
define internal void @ngx_resolver_rbtree_insert_value(%struct.ngx_rbtree_node_s* %temp, %struct.ngx_rbtree_node_s* %node, %struct.ngx_rbtree_node_s* %sentinel) #0 !dbg !138980 {
define internal void @ngx_resolver_rbtree_insert_addr6_value(%struct.ngx_rbtree_node_s* %temp, %struct.ngx_rbtree_node_s* %node, %struct.ngx_rbtree_node_s* %sentinel) #0 !dbg !139075 {
define internal void @ngx_resolver_resend_handler(%struct.ngx_event_s* %ev) #0 !dbg !139161 {
define internal i64 @ngx_array_init.385(%struct.ngx_array_t* %array, %struct.ngx_pool_s* %pool, i64 %n, i64 %size) #4 !dbg !139265 {
define internal i64 @ngx_resolver_resend(%struct.ngx_resolver_s* %r, %struct.ngx_rbtree_s* %tree, %struct.ngx_queue_s* %queue) #0 !dbg !139308 {
define internal void @ngx_event_add_timer.393(%struct.ngx_event_s* %ev, i64 %timer) #4 !dbg !139395 {
define internal void @ngx_event_del_timer.394(%struct.ngx_event_s* %ev) #4 !dbg !139442 {
define internal i64 @ngx_resolver_send_query(%struct.ngx_resolver_s* %r, %struct.ngx_resolver_node_t* %rn) #0 !dbg !139452 {
define internal void @ngx_resolver_free_node(%struct.ngx_resolver_s* %r, %struct.ngx_resolver_node_t* %rn) #0 !dbg !139564 {
define internal void @ngx_resolver_free_locked(%struct.ngx_resolver_s* %r, i8* %p) #0 !dbg !139685 {
define internal i8* @ngx_resolver_log_error(%struct.ngx_log_s* %log, i8* %buf, i64 %len) #0 !dbg !139695 {
define internal i64 @ngx_resolver_send_tcp_query(%struct.ngx_resolver_s* %r, %struct.ngx_resolver_connection_t* %rec, i8* %query, i16 zeroext %qlen) #0 !dbg !139740 {
define internal i64 @ngx_resolver_send_udp_query(%struct.ngx_resolver_s* %r, %struct.ngx_resolver_connection_t* %rec, i8* %query, i16 zeroext %qlen) #0 !dbg !139953 {
define internal i64 @ngx_udp_connect(%struct.ngx_resolver_connection_t* %rec) #0 !dbg !140025 {
define internal void @ngx_resolver_udp_read(%struct.ngx_event_s* %rev) #0 !dbg !140150 {
define internal void @ngx_resolver_process_response(%struct.ngx_resolver_s* %r, i8* %buf, i64 %n, i64 %tcp) #0 !dbg !140193 {
define internal void @ngx_resolver_process_a(%struct.ngx_resolver_s* %r, i8* %buf, i64 %n, i64 %ident, i64 %code, i64 %qtype, i64 %nan, i64 %trunc, i64 %ans) #0 !dbg !140498 {
define internal void @ngx_resolver_process_srv(%struct.ngx_resolver_s* %r, i8* %buf, i64 %n, i64 %ident, i64 %code, i64 %nan, i64 %trunc, i64 %ans) #0 !dbg !141625 {
define internal void @ngx_resolver_process_ptr(%struct.ngx_resolver_s* %r, i8* %buf, i64 %n, i64 %ident, i64 %code, i64 %nan) #0 !dbg !142390 {
define dso_local i8* @ngx_resolver_strerror(i64 %err) #0 !dbg !10598 {
define internal i64 @ngx_resolver_copy(%struct.ngx_resolver_s* %r, %struct.ngx_str_t* %name, i8* %buf, i8* %src, i8* %last) #0 !dbg !142988 {
define internal %struct.ngx_resolver_node_t* @ngx_resolver_lookup_addr(%struct.ngx_resolver_s* %r, i32 %addr) #0 !dbg !143166 {
define internal i32 @ngx_crc32_short(i8* %p, i64 %len) #4 !dbg !143218 {
define internal %struct.ngx_resolver_node_t* @ngx_resolver_lookup_addr6(%struct.ngx_resolver_s* %r, %struct.in6_addr* %addr, i32 %hash) #0 !dbg !143259 {
define internal void @ngx_resolver_free(%struct.ngx_resolver_s* %r, i8* %p) #0 !dbg !143334 {
define internal i8* @ngx_resolver_dup(%struct.ngx_resolver_s* %r, i8* %src, i64 %size) #0 !dbg !143342 {
define internal i8* @ngx_resolver_alloc(%struct.ngx_resolver_s* %r, i64 %size) #0 !dbg !143368 {
define internal %struct.ngx_resolver_node_t* @ngx_resolver_lookup_srv(%struct.ngx_resolver_s* %r, %struct.ngx_str_t* %name, i32 %hash) #0 !dbg !143384 {
define internal i8* @ngx_resolver_calloc(%struct.ngx_resolver_s* %r, i64 %size) #0 !dbg !143467 {
define internal i64 @ngx_resolver_cmp_srvs(i8* %one, i8* %two) #0 !dbg !143486 {
define internal void @ngx_resolver_resolve_srv_names(%struct.ngx_resolver_ctx_s* %ctx, %struct.ngx_resolver_node_t* %rn) #0 !dbg !143515 {
define internal i64 @ngx_resolve_name_locked(%struct.ngx_resolver_s* %r, %struct.ngx_resolver_ctx_s* %ctx, %struct.ngx_str_t* %name) #0 !dbg !143724 {
define internal %struct.ngx_resolver_node_t* @ngx_resolver_lookup_name(%struct.ngx_resolver_s* %r, %struct.ngx_str_t* %name, i32 %hash) #0 !dbg !144461 {
define internal %struct.ngx_resolver_addr_t* @ngx_resolver_export(%struct.ngx_resolver_s* %r, %struct.ngx_resolver_node_t* %rn, i64 %rotate) #0 !dbg !144542 {
define internal i64 @ngx_resolver_set_timeout(%struct.ngx_resolver_s* %r, %struct.ngx_resolver_ctx_s* %ctx) #0 !dbg !144752 {
define internal i64 @ngx_resolver_create_srv_query(%struct.ngx_resolver_s* %r, %struct.ngx_resolver_node_t* %rn, %struct.ngx_str_t* %name) #0 !dbg !144812 {
define internal i64 @ngx_resolver_create_name_query(%struct.ngx_resolver_s* %r, %struct.ngx_resolver_node_t* %rn, %struct.ngx_str_t* %name) #0 !dbg !145006 {
define internal i64 @ngx_resolver_resend_empty(%struct.ngx_resolver_s* %r) #0 !dbg !145251 {
define internal void @ngx_resolver_timeout_handler(%struct.ngx_event_s* %ev) #0 !dbg !145264 {
define dso_local %struct.ngx_resolver_ctx_s* @ngx_resolve_start(%struct.ngx_resolver_s* %r, %struct.ngx_resolver_ctx_s* %temp) #0 !dbg !145279 {
define internal void @ngx_resolver_srv_names_handler(%struct.ngx_resolver_ctx_s* %cctx) #0 !dbg !145374 {
define dso_local i64 @ngx_resolve_name(%struct.ngx_resolver_ctx_s* %ctx) #0 !dbg !145516 {
define internal i8* @ngx_strlchr.427(i8* %p, i8* %last, i8 zeroext %c) #4 !dbg !145672 {
define dso_local void @ngx_resolve_name_done(%struct.ngx_resolver_ctx_s* %ctx) #0 !dbg !145698 {
define internal void @ngx_resolver_report_srv(%struct.ngx_resolver_s* %r, %struct.ngx_resolver_ctx_s* %ctx) #0 !dbg !145898 {
define internal void @ngx_resolver_expire(%struct.ngx_resolver_s* %r, %struct.ngx_rbtree_s* %tree, %struct.ngx_queue_s* %queue) #0 !dbg !146242 {
define internal i64 @ngx_tcp_connect(%struct.ngx_resolver_connection_t* %rec) #0 !dbg !146300 {
define internal void @ngx_resolver_tcp_write(%struct.ngx_event_s* %wev) #0 !dbg !146534 {
define internal void @ngx_resolver_tcp_read(%struct.ngx_event_s* %rev) #0 !dbg !146653 {
define internal void @ngx_resolver_cleanup_tree(%struct.ngx_resolver_s* %r, %struct.ngx_rbtree_s* %tree) #0 !dbg !146799 {
define internal %struct.ngx_rbtree_node_s* @ngx_rbtree_min.445(%struct.ngx_rbtree_node_s* %node, %struct.ngx_rbtree_node_s* %sentinel) #4 !dbg !146873 {
define dso_local i64 @ngx_resolve_addr(%struct.ngx_resolver_ctx_s* %ctx) #0 !dbg !146893 {
define internal i64 @ngx_resolver_create_addr_query(%struct.ngx_resolver_s* %r, %struct.ngx_resolver_node_t* %rn, %struct.ngx_resolver_addr_t* %addr) #0 !dbg !147293 {
define dso_local void @ngx_resolve_addr_done(%struct.ngx_resolver_ctx_s* %ctx) #0 !dbg !147483 {
define dso_local %struct.ngx_open_file_cache_t* @ngx_open_file_cache_init(%struct.ngx_pool_s* %pool, i64 %max, i64 %inactive) #0 !dbg !147634 {
define internal void @ngx_open_file_cache_rbtree_insert_value(%struct.ngx_rbtree_node_s* %temp, %struct.ngx_rbtree_node_s* %node, %struct.ngx_rbtree_node_s* %sentinel) #0 !dbg !147782 {
define internal void @ngx_open_file_cache_cleanup(i8* %data) #0 !dbg !147871 {
define internal void @ngx_close_cached_file(%struct.ngx_open_file_cache_t* %cache, %struct.ngx_cached_open_file_s* %file, i64 %min_uses, %struct.ngx_log_s* %log) #0 !dbg !147957 {
define internal void @ngx_open_file_del_event(%struct.ngx_cached_open_file_s* %file) #0 !dbg !148032 {
define dso_local i64 @ngx_open_cached_file(%struct.ngx_open_file_cache_t* %cache, %struct.ngx_str_t* %name, %struct.ngx_open_file_info_t* %of, %struct.ngx_pool_s* %pool) #0 !dbg !148063 {
define internal i64 @ngx_file_info_wrapper(%struct.ngx_str_t* %name, %struct.ngx_open_file_info_t* %of, %struct.stat* %fi, %struct.ngx_log_s* %log) #0 !dbg !148850 {
define internal i64 @ngx_open_and_stat_file(%struct.ngx_str_t* %name, %struct.ngx_open_file_info_t* %of, %struct.ngx_log_s* %log) #0 !dbg !148927 {
define internal i32 @ngx_crc32_long.454(i8* %p, i64 %len) #4 !dbg !149138 {
define internal %struct.ngx_cached_open_file_s* @ngx_open_file_lookup(%struct.ngx_open_file_cache_t* %cache, %struct.ngx_str_t* %name, i32 %hash) #0 !dbg !149164 {
define internal void @ngx_open_file_add_event(%struct.ngx_open_file_cache_t* %cache, %struct.ngx_cached_open_file_s* %file, %struct.ngx_open_file_info_t* %of, %struct.ngx_log_s* %log) #0 !dbg !149240 {
define internal void @ngx_expire_old_cached_files(%struct.ngx_open_file_cache_t* %cache, i64 %n, %struct.ngx_log_s* %log) #0 !dbg !149363 {
define internal void @ngx_open_file_cleanup(i8* %data) #0 !dbg !149441 {
define internal void @ngx_open_file_cache_remove(%struct.ngx_event_s* %ev) #0 !dbg !149466 {
define internal i32 @ngx_open_file_wrapper(%struct.ngx_str_t* %name, %struct.ngx_open_file_info_t* %of, i64 %mode, i64 %create, i64 %access, %struct.ngx_log_s* %log) #0 !dbg !149511 {
define internal i8* @ngx_strlchr.462(i8* %p, i8* %last, i8 zeroext %c) #4 !dbg !149777 {
define internal i32 @ngx_openat_file_owner(i32 %at_fd, i8* %name, i64 %mode, i64 %create, i64 %access, %struct.ngx_log_s* %log) #0 !dbg !149803 {
define internal i64 @ngx_file_o_path_info(i32 %fd, %struct.stat* %fi, %struct.ngx_log_s* %log) #0 !dbg !11020 {
define dso_local i8* @ngx_proxy_protocol_read(%struct.ngx_connection_s* %c, i8* %buf, i8* %last) #0 !dbg !11173 {
define internal i8* @ngx_proxy_protocol_v2_read(%struct.ngx_connection_s* %c, i8* %buf, i8* %last) #0 !dbg !150167 {
define dso_local i8* @ngx_proxy_protocol_write(%struct.ngx_connection_s* %c, i8* %buf, i8* %last) #0 !dbg !150390 {
define dso_local i8* @ngx_syslog_process_conf(%struct.ngx_conf_s.1766* %cf, %struct.ngx_syslog_peer_t* %peer) #0 !dbg !150466 {
define internal i8* @ngx_syslog_parse_args(%struct.ngx_conf_s.1766* %cf, %struct.ngx_syslog_peer_t* %peer) #0 !dbg !152430 {
define internal void @ngx_syslog_cleanup(i8* %data) #0 !dbg !152785 {
define dso_local i8* @ngx_syslog_add_header(%struct.ngx_syslog_peer_t* %peer, i8* %buf) #0 !dbg !152815 {
define dso_local void @ngx_syslog_writer(%struct.ngx_log_s* %log, i64 %level, i8* %buf, i64 %len) #0 !dbg !152851 {
define dso_local i64 @ngx_syslog_send(%struct.ngx_syslog_peer_t* %peer, i8* %buf, i64 %len) #0 !dbg !152923 {
define internal i64 @ngx_syslog_init_peer(%struct.ngx_syslog_peer_t* %peer) #0 !dbg !152999 {
define dso_local void @ngx_process_events_and_timers(%struct.ngx_cycle_s* %cycle) #0 !dbg !153070 {
define dso_local i64 @ngx_handle_read_event(%struct.ngx_event_s* %rev, i64 %flags) #0 !dbg !153156 {
define dso_local i64 @ngx_handle_write_event(%struct.ngx_event_s* %wev, i64 %lowat) #0 !dbg !153268 {
define dso_local i64 @ngx_send_lowat(%struct.ngx_connection_s* %c, i64 %lowat) #0 !dbg !153396 {
define internal i8* @ngx_events_block(%struct.ngx_conf_s* %cf, %struct.ngx_command_s* %cmd, i8* %conf) #0 !dbg !153434 {
define internal i8* @ngx_event_init_conf(%struct.ngx_cycle_s* %cycle, i8* %conf) #0 !dbg !153637 {
define internal i64 @ngx_event_module_init(%struct.ngx_cycle_s* %cycle) #0 !dbg !153716 {
define internal i64 @ngx_event_process_init(%struct.ngx_cycle_s* %cycle) #0 !dbg !153898 {
define internal void @ngx_timer_signal_handler(i32 %signo) #0 !dbg !154481 {
define internal i8* @ngx_event_connections(%struct.ngx_conf_s* %cf, %struct.ngx_command_s* %cmd, i8* %conf) #0 !dbg !154486 {
define internal i8* @ngx_event_use(%struct.ngx_conf_s* %cf, %struct.ngx_command_s* %cmd, i8* %conf) #0 !dbg !154535 {
define internal i8* @ngx_event_debug_connection(%struct.ngx_conf_s* %cf, %struct.ngx_command_s* %cmd, i8* %conf) #0 !dbg !154661 {
define internal i8* @ngx_event_core_create_conf(%struct.ngx_cycle_s* %cycle) #0 !dbg !154671 {
define internal i8* @ngx_event_core_init_conf(%struct.ngx_cycle_s* %cycle, i8* %conf) #0 !dbg !154707 {
define dso_local i64 @ngx_event_timer_init(%struct.ngx_log_s* %log) #0 !dbg !154835 {
define dso_local i64 @ngx_event_find_timer() #0 !dbg !154842 {
define internal %struct.ngx_rbtree_node_s* @ngx_rbtree_min.582(%struct.ngx_rbtree_node_s* %node, %struct.ngx_rbtree_node_s* %sentinel) #4 !dbg !154877 {
define dso_local void @ngx_event_expire_timers() #0 !dbg !154897 {
define dso_local i64 @ngx_event_no_timers_left() #0 !dbg !154956 {
define dso_local void @ngx_event_process_posted(%struct.ngx_cycle_s* %cycle, %struct.ngx_queue_s* %posted) #0 !dbg !155006 {
define dso_local void @ngx_event_accept(%struct.ngx_event_s.2028* %ev) #0 !dbg !15424 {
define dso_local i64 @ngx_enable_accept_events(%struct.ngx_cycle_s.2121* %cycle) #0 !dbg !157434 {
define internal i64 @ngx_disable_accept_events(%struct.ngx_cycle_s.2121* %cycle, i64 %all) #0 !dbg !157487 {
define internal void @ngx_event_add_timer.595(%struct.ngx_event_s.2028* %ev, i64 %timer) #4 !dbg !157553 {
define internal void @ngx_close_accepted_connection(%struct.ngx_connection_s.2113* %c) #0 !dbg !157600 {
define internal void @ngx_event_del_timer.599(%struct.ngx_event_s.2028* %ev) #4 !dbg !157633 {
define dso_local i64 @ngx_trylock_accept_mutex(%struct.ngx_cycle_s.2121* %cycle) #0 !dbg !157643 {
define dso_local i8* @ngx_accept_log_error(%struct.ngx_log_s* %log, i8* %buf, i64 %len) #0 !dbg !157684 {
define dso_local void @ngx_event_recvmsg(%struct.ngx_event_s.2028* %ev) #0 !dbg !17379 {
define internal %struct.ngx_connection_s.2113* @ngx_lookup_udp_connection(%struct.ngx_listening_s.2031* %ls, %struct.sockaddr* %sockaddr, i32 %socklen, %struct.sockaddr* %local_sockaddr, i32 %local_socklen) #0 !dbg !158321 {
define internal void @ngx_close_accepted_udp_connection(%struct.ngx_connection_s.2113* %c) #0 !dbg !158468 {
define internal i64 @ngx_udp_shared_recv(%struct.ngx_connection_s.2113* %c, i8* %buf, i64 %size) #0 !dbg !158486 {
define internal i64 @ngx_insert_udp_connection(%struct.ngx_connection_s.2113* %c) #0 !dbg !158531 {
define internal void @ngx_crc32_update(i32* %crc, i8* %p, i64 %len) #4 !dbg !158618 {
define dso_local void @ngx_delete_udp_connection(i8* %data) #0 !dbg !158651 {
define dso_local void @ngx_udp_rbtree_insert_value(%struct.ngx_rbtree_node_s* %temp, %struct.ngx_rbtree_node_s* %node, %struct.ngx_rbtree_node_s* %sentinel) #0 !dbg !158675 {
define dso_local i64 @ngx_event_connect_peer(%struct.ngx_peer_connection_s* %pc) #0 !dbg !19418 {
define internal i64 @ngx_event_connect_set_transparent(%struct.ngx_peer_connection_s* %pc, i32 %s) #0 !dbg !159265 {
define dso_local i64 @ngx_event_get_peer(%struct.ngx_peer_connection_s* %pc, i8* %data) #0 !dbg !159299 {
define dso_local i64 @ngx_event_pipe(%struct.ngx_event_pipe_s* %p, i64 %do_write) #0 !dbg !159305 {
define internal i64 @ngx_event_pipe_write_to_downstream(%struct.ngx_event_pipe_s* %p) #0 !dbg !161384 {
define internal i64 @ngx_event_pipe_read_upstream(%struct.ngx_event_pipe_s* %p) #0 !dbg !161868 {
define internal void @ngx_event_add_timer.623(%struct.ngx_event_s* %ev, i64 %timer) #4 !dbg !162510 {
define internal void @ngx_event_del_timer.624(%struct.ngx_event_s* %ev) #4 !dbg !162557 {
define internal i64 @ngx_event_pipe_write_chain_to_temp_file(%struct.ngx_event_pipe_s* %p) #0 !dbg !162567 {
define internal void @ngx_event_pipe_remove_shadow_links(%struct.ngx_buf_s* %buf) #4 !dbg !162972 {
define internal i64 @ngx_event_pipe_drain_chains(%struct.ngx_event_pipe_s* %p) #0 !dbg !163027 {
define dso_local i64 @ngx_event_pipe_add_free_buf(%struct.ngx_event_pipe_s* %p, %struct.ngx_buf_s* %b) #0 !dbg !163125 {
define dso_local i64 @ngx_event_pipe_copy_input_filter(%struct.ngx_event_pipe_s* %p, %struct.ngx_buf_s* %buf) #0 !dbg !163234 {
define dso_local void @ngx_timezone_update() #0 !dbg !163324 {
define dso_local void @ngx_localtime(i64 %s, %struct.tm* %tm) #0 !dbg !163354 {
define dso_local void @ngx_libc_localtime(i64 %s, %struct.tm* %tm) #0 !dbg !163372 {
define dso_local void @ngx_libc_gmtime(i64 %s, %struct.tm* %tm) #0 !dbg !163382 {
define dso_local i8* @ngx_strerror(i32 %err, i8* %errstr, i64 %size) #0 !dbg !163390 {
define dso_local i64 @ngx_strerror_init() #0 !dbg !163412 {
define dso_local i8* @ngx_alloc(i64 %size, %struct.ngx_log_s* %log) #0 !dbg !163479 {
define dso_local i8* @ngx_calloc(i64 %size, %struct.ngx_log_s* %log) #0 !dbg !163540 {
define dso_local i8* @ngx_memalign(i64 %alignment, i64 %size, %struct.ngx_log_s* %log) #0 !dbg !163559 {
define dso_local i64 @ngx_read_file(%struct.ngx_file_s* %file, i8* %buf, i64 %size, i64 %offset) #0 !dbg !163587 {
define dso_local i64 @ngx_write_file(%struct.ngx_file_s* %file, i8* %buf, i64 %size, i64 %offset) #0 !dbg !163695 {
define dso_local i32 @ngx_open_tempfile(i8* %name, i64 %persistent, i64 %access) #0 !dbg !163764 {
define dso_local i64 @ngx_write_chain_to_file(%struct.ngx_file_s* %file, %struct.ngx_chain_s* %cl, i64 %offset, %struct.ngx_pool_s* %pool) #0 !dbg !163792 {
define internal %struct.ngx_chain_s* @ngx_chain_to_iovec(%struct.ngx_iovec_t* %vec, %struct.ngx_chain_s* %cl) #0 !dbg !163963 {
define internal i64 @ngx_writev_file(%struct.ngx_file_s* %file, %struct.ngx_iovec_t* %vec, i64 %offset) #0 !dbg !164065 {
define dso_local i64 @ngx_set_file_time(i8* %name, i32 %fd, i64 %s) #0 !dbg !164123 {
define dso_local i64 @ngx_create_file_mapping(%struct.ngx_file_mapping_t* %fm) #0 !dbg !164163 {
define dso_local void @ngx_close_file_mapping(%struct.ngx_file_mapping_t* %fm) #0 !dbg !164235 {
define dso_local i64 @ngx_open_dir(%struct.ngx_str_t* %name, %struct.ngx_dir_t* %dir) #0 !dbg !164265 {
define dso_local i64 @ngx_read_dir(%struct.ngx_dir_t* %dir) #0 !dbg !164308 {
define dso_local i64 @ngx_open_glob(%struct.ngx_glob_t* %gl) #0 !dbg !164333 {
define dso_local i64 @ngx_read_glob(%struct.ngx_glob_t* %gl, %struct.ngx_str_t* %name) #0 !dbg !164392 {
define dso_local void @ngx_close_glob(%struct.ngx_glob_t* %gl) #0 !dbg !164430 {
define dso_local i32 @ngx_trylock_fd(i32 %fd) #0 !dbg !164439 {
define dso_local i32 @ngx_lock_fd(i32 %fd) #0 !dbg !164470 {
define dso_local i32 @ngx_unlock_fd(i32 %fd) #0 !dbg !164490 {
define dso_local i64 @ngx_read_ahead(i32 %fd, i64 %n) #0 !dbg !164510 {
define dso_local i64 @ngx_directio_on(i32 %fd) #0 !dbg !164531 {
define dso_local i64 @ngx_directio_off(i32 %fd) #0 !dbg !164553 {
define dso_local i64 @ngx_fs_bsize(i8* %name) #0 !dbg !164573 {
define dso_local i32 @ngx_nonblocking(i32 %s) #0 !dbg !164621 {
define dso_local i32 @ngx_blocking(i32 %s) #0 !dbg !164632 {
define dso_local i32 @ngx_tcp_nopush(i32 %s) #0 !dbg !164641 {
define dso_local i32 @ngx_tcp_push(i32 %s) #0 !dbg !164651 {
define dso_local i64 @ngx_unix_recv(%struct.ngx_connection_s.2590* %c, i8* %buf, i64 %size) #0 !dbg !164661 {
define dso_local i64 @ngx_readv_chain(%struct.ngx_connection_s.2692* %c, %struct.ngx_chain_s* %chain, i64 %limit) #0 !dbg !166605 {
define dso_local i64 @ngx_udp_unix_recv(%struct.ngx_connection_s.2795* %c, i8* %buf, i64 %size) #0 !dbg !168669 {
define dso_local i64 @ngx_unix_send(%struct.ngx_connection_s.2897* %c, i8* %buf, i64 %size) #0 !dbg !170542 {
define dso_local %struct.ngx_chain_s* @ngx_writev_chain(%struct.ngx_connection_s.2999* %c, %struct.ngx_chain_s* %in, i64 %limit) #0 !dbg !172439 {
define dso_local %struct.ngx_chain_s* @ngx_output_chain_to_iovec(%struct.ngx_iovec_t* %vec, %struct.ngx_chain_s* %in, i64 %limit, %struct.ngx_log_s* %log) #0 !dbg !174292 {
define dso_local i64 @ngx_writev(%struct.ngx_connection_s.2999* %c, %struct.ngx_iovec_t* %vec) #0 !dbg !174432 {
define dso_local i64 @ngx_udp_unix_send(%struct.ngx_connection_s.3102* %c, i8* %buf, i64 %size) #0 !dbg !174475 {
define dso_local %struct.ngx_chain_s* @ngx_udp_unix_sendmsg_chain(%struct.ngx_connection_s.3204* %c, %struct.ngx_chain_s* %in, i64 %limit) #0 !dbg !176360 {
define internal %struct.ngx_chain_s* @ngx_udp_output_chain_to_iovec(%struct.ngx_iovec_t* %vec, %struct.ngx_chain_s* %in, %struct.ngx_log_s* %log) #0 !dbg !178204 {
define internal i64 @ngx_sendmsg(%struct.ngx_connection_s.3204* %c, %struct.ngx_iovec_t* %vec) #0 !dbg !178362 {
define dso_local i64 @ngx_write_channel(i32 %s, %struct.ngx_channel_t* %ch, i64 %size, %struct.ngx_log_s* %log) #0 !dbg !178537 {
define dso_local i64 @ngx_read_channel(i32 %s, %struct.ngx_channel_t* %ch, i64 %size, %struct.ngx_log_s* %log) #0 !dbg !178701 {
define dso_local i64 @ngx_add_channel_event(%struct.ngx_cycle_s* %cycle, i32 %fd, i64 %event, void (%struct.ngx_event_s*)* %handler) #0 !dbg !178826 {
define dso_local void @ngx_close_channel(i32* %fd, %struct.ngx_log_s* %log) #0 !dbg !180828 {
define dso_local i64 @ngx_shm_alloc(%struct.ngx_shm_t* %shm) #0 !dbg !180857 {
define dso_local void @ngx_shm_free(%struct.ngx_shm_t* %shm) #0 !dbg !180927 {
define dso_local i32 @ngx_spawn_process(%struct.ngx_cycle_s* %cycle, void (%struct.ngx_cycle_s*, i8*)* %proc, i8* %data, i8* %name, i64 %respawn) #0 !dbg !180946 {
define dso_local i32 @ngx_execute(%struct.ngx_cycle_s* %cycle, %struct.ngx_exec_ctx_t* %ctx) #0 !dbg !181291 {
define internal void @ngx_execute_proc(%struct.ngx_cycle_s* %cycle, i8* %data) #0 !dbg !181312 {
define dso_local i64 @ngx_init_signals(%struct.ngx_log_s* %log) #0 !dbg !181337 {
define internal void @ngx_signal_handler(i32 %signo, %struct.siginfo_t* %siginfo, i8* %ucontext) #0 !dbg !181404 {
define internal void @ngx_process_get_status() #0 !dbg !181548 {
define internal void @ngx_unlock_mutexes(i32 %pid) #0 !dbg !181682 {
define dso_local void @ngx_debug_point() #0 !dbg !181782 {
define dso_local i64 @ngx_os_signal_process(%struct.ngx_cycle_s* %cycle, i8* %name, i32 %pid) #0 !dbg !181796 {
define dso_local i64 @ngx_daemon(%struct.ngx_log_s* %log) #0 !dbg !181841 {
define dso_local void @ngx_setaffinity(%struct.cpu_set_t* %cpu_affinity, %struct.ngx_log_s* %log) #0 !dbg !181958 {
define dso_local i64 @ngx_init_setproctitle(%struct.ngx_log_s* %log) #0 !dbg !182046 {
define dso_local void @ngx_setproctitle(i8* %title) #0 !dbg !182194 {
define dso_local i64 @ngx_os_init(%struct.ngx_log_s* %log) #0 !dbg !182223 {
define dso_local void @ngx_os_status(%struct.ngx_log_s* %log) #0 !dbg !182316 {
define dso_local i8* @ngx_dlerror() #0 !dbg !182333 {
define dso_local void @ngx_master_process_cycle(%struct.ngx_cycle_s.3665* %cycle) #0 !dbg !182349 {
define internal void @ngx_start_worker_processes(%struct.ngx_cycle_s.3665* %cycle, i64 %n, i64 %type) #0 !dbg !182718 {
define internal void @ngx_start_cache_manager_processes(%struct.ngx_cycle_s.3665* %cycle, i64 %respawn) #0 !dbg !182779 {
define internal i64 @ngx_reap_children(%struct.ngx_cycle_s.3665* %cycle) #0 !dbg !182902 {
define internal void @ngx_master_process_exit(%struct.ngx_cycle_s.3665* %cycle) #0 !dbg !183128 {
define internal void @ngx_signal_worker_processes(%struct.ngx_cycle_s.3665* %cycle, i32 %signo) #0 !dbg !183190 {
define internal void @ngx_pass_open_channel(%struct.ngx_cycle_s.3665* %cycle, %struct.ngx_channel_t* %ch) #0 !dbg !183336 {
define internal void @ngx_cache_manager_process_cycle(%struct.ngx_cycle_s.3665* %cycle, i8* %data) #0 !dbg !183385 {
define internal void @ngx_cache_loader_process_handler(%struct.ngx_event_s* %ev) #0 !dbg !183462 {
define internal void @ngx_cache_manager_process_handler(%struct.ngx_event_s* %ev) #0 !dbg !183516 {
define internal void @ngx_event_add_timer.841(%struct.ngx_event_s* %ev, i64 %timer) #4 !dbg !183581 {
define internal void @ngx_event_del_timer.842(%struct.ngx_event_s* %ev) #4 !dbg !183628 {
define internal void @ngx_worker_process_init(%struct.ngx_cycle_s.3665* %cycle, i64 %worker) #0 !dbg !183638 {
define internal void @ngx_channel_handler(%struct.ngx_event_s* %ev) #0 !dbg !184042 {
define internal void @ngx_worker_process_cycle(%struct.ngx_cycle_s.3665* %cycle, i8* %data) #0 !dbg !184150 {
define internal void @ngx_worker_process_exit(%struct.ngx_cycle_s.3665* %cycle) #0 !dbg !184236 {
define dso_local void @ngx_single_process_cycle(%struct.ngx_cycle_s.3665* %cycle) #0 !dbg !184359 {
define dso_local i64 @ngx_os_specific_init(%struct.ngx_log_s* %log) #0 !dbg !184483 {
define dso_local void @ngx_os_specific_status(%struct.ngx_log_s* %log) #0 !dbg !184518 {
define internal i8* @ngx_epoll_create_conf(%struct.ngx_cycle_s* %cycle) #0 !dbg !184527 {
define internal i8* @ngx_epoll_init_conf(%struct.ngx_cycle_s* %cycle, i8* %conf) #0 !dbg !184557 {
define internal i64 @ngx_epoll_add_event(%struct.ngx_event_s* %ev, i64 %event, i64 %flags) #0 !dbg !184576 {
define internal i64 @ngx_epoll_del_event(%struct.ngx_event_s* %ev, i64 %event, i64 %flags) #0 !dbg !184660 {
define internal i64 @ngx_epoll_add_connection(%struct.ngx_connection_s* %c) #0 !dbg !184751 {
define internal i64 @ngx_epoll_del_connection(%struct.ngx_connection_s* %c, i64 %flags) #0 !dbg !184790 {
define internal i64 @ngx_epoll_notify(void (%struct.ngx_event_s*)* %handler) #0 !dbg !31339 {
define internal i64 @ngx_epoll_process_events(%struct.ngx_cycle_s* %cycle, i64 %timer, i64 %flags) #0 !dbg !184858 {
define internal i64 @ngx_epoll_init(%struct.ngx_cycle_s* %cycle, i64 %timer) #0 !dbg !185084 {
define internal void @ngx_epoll_done(%struct.ngx_cycle_s* %cycle) #0 !dbg !185160 {
define internal i64 @ngx_epoll_notify_init(%struct.ngx_log_s* %log) #0 !dbg !185190 {
define internal void @ngx_epoll_test_rdhup(%struct.ngx_cycle_s* %cycle) #0 !dbg !185243 {
define internal void @ngx_epoll_notify_handler(%struct.ngx_event_s* %ev) #0 !dbg !185338 {
define dso_local %struct.ngx_chain_s* @ngx_linux_sendfile_chain(%struct.ngx_connection_s.2999* %c, %struct.ngx_chain_s* %in, i64 %limit) #0 !dbg !185381 {
define internal i64 @ngx_linux_sendfile(%struct.ngx_connection_s.2999* %c, %struct.ngx_buf_s* %file, i64 %size) #0 !dbg !187380 {
define dso_local i64 @ngx_ssl_init(%struct.ngx_log_s* %log) #0 !dbg !187439 {
define dso_local void @ngx_ssl_error(i64 %level, %struct.ngx_log_s* %log, i32 %err, i8* %fmt, ...) #0 !dbg !187528 {
define dso_local i64 @ngx_ssl_create(%struct.ngx_ssl_s* %ssl, i64 %protocols, i8* %data) #0 !dbg !187666 {
define internal void @ngx_ssl_info_callback(%struct.ssl_st* %ssl_conn, i32 %where, i32 %ret) #0 !dbg !187782 {
define dso_local i64 @ngx_ssl_certificates(%struct.ngx_conf_s* %cf, %struct.ngx_ssl_s* %ssl, %struct.ngx_array_t* %certs, %struct.ngx_array_t* %keys, %struct.ngx_array_t* %passwords) #0 !dbg !187852 {
define dso_local i64 @ngx_ssl_certificate(%struct.ngx_conf_s* %cf, %struct.ngx_ssl_s* %ssl, %struct.ngx_str_t* %cert, %struct.ngx_str_t* %key, %struct.ngx_array_t* %passwords) #0 !dbg !187907 {
define internal %struct.x509_st* @ngx_ssl_load_certificate(%struct.ngx_pool_s* %pool, i8** %err, %struct.ngx_str_t* %cert, %struct.stack_st_SSL_CIPHER** %chain) #0 !dbg !188074 {
define internal %struct.evp_pkey_st* @ngx_ssl_load_certificate_key(%struct.ngx_pool_s* %pool, i8** %err, %struct.ngx_str_t* %key, %struct.ngx_array_t* %passwords) #0 !dbg !188201 {
define internal i32 @ngx_ssl_password_callback(i8* %buf, i32 %size, i32 %rwflag, i8* %userdata) #0 !dbg !188361 {
define dso_local i64 @ngx_ssl_connection_certificate(%struct.ngx_connection_s* %c, %struct.ngx_pool_s* %pool, %struct.ngx_str_t* %cert, %struct.ngx_str_t* %key, %struct.ngx_array_t* %passwords) #0 !dbg !188407 {
define dso_local i64 @ngx_ssl_ciphers(%struct.ngx_conf_s* %cf, %struct.ngx_ssl_s* %ssl, %struct.ngx_str_t* %ciphers, i64 %prefer_server_ciphers) #0 !dbg !188526 {
define dso_local %struct.rsa_st* @ngx_ssl_rsa512_key_callback(%struct.ssl_st* %ssl_conn, i32 %is_export, i32 %key_length) #0 !dbg !33385 {
define dso_local i64 @ngx_ssl_client_certificate(%struct.ngx_conf_s* %cf, %struct.ngx_ssl_s* %ssl, %struct.ngx_str_t* %cert, i64 %depth) #0 !dbg !188585 {
define internal i32 @ngx_ssl_verify_callback(i32 %ok, %struct.x509_store_ctx_st* %x509_store) #0 !dbg !188659 {
define dso_local i64 @ngx_ssl_trusted_certificate(%struct.ngx_conf_s* %cf, %struct.ngx_ssl_s* %ssl, %struct.ngx_str_t* %cert, i64 %depth) #0 !dbg !188665 {
define dso_local i64 @ngx_ssl_crl(%struct.ngx_conf_s* %cf, %struct.ngx_ssl_s* %ssl, %struct.ngx_str_t* %crl) #0 !dbg !188712 {
define dso_local %struct.ngx_array_t* @ngx_ssl_read_password_file(%struct.ngx_conf_s* %cf, %struct.ngx_str_t* %file) #0 !dbg !188838 {
define internal void @ngx_ssl_passwords_cleanup(i8* %data) #0 !dbg !189087 {
define internal i8* @ngx_strlchr.955(i8* %p, i8* %last, i8 zeroext %c) #4 !dbg !189123 {
define dso_local %struct.ngx_array_t* @ngx_ssl_preserve_passwords(%struct.ngx_conf_s* %cf, %struct.ngx_array_t* %passwords) #0 !dbg !33390 {
define dso_local i64 @ngx_ssl_dhparam(%struct.ngx_conf_s* %cf, %struct.ngx_ssl_s* %ssl, %struct.ngx_str_t* %file) #0 !dbg !189253 {
define dso_local i64 @ngx_ssl_ecdh_curve(%struct.ngx_conf_s* %cf, %struct.ngx_ssl_s* %ssl, %struct.ngx_str_t* %name) #0 !dbg !189318 {
define dso_local i64 @ngx_ssl_early_data(%struct.ngx_conf_s* %cf, %struct.ngx_ssl_s* %ssl, i64 %enable) #0 !dbg !189346 {
define dso_local i64 @ngx_ssl_client_session_cache(%struct.ngx_conf_s* %cf, %struct.ngx_ssl_s* %ssl, i64 %enable) #0 !dbg !189365 {
define internal i32 @ngx_ssl_new_client_session(%struct.ssl_st* %ssl_conn, %struct.ssl_session_st* %sess) #0 !dbg !189383 {
define dso_local i64 @ngx_ssl_create_connection(%struct.ngx_ssl_s* %ssl, %struct.ngx_connection_s* %c, i64 %flags) #0 !dbg !189415 {
define dso_local %struct.ssl_session_st* @ngx_ssl_get_session(%struct.ngx_connection_s* %c) #0 !dbg !189514 {
define dso_local %struct.ssl_session_st* @ngx_ssl_get0_session(%struct.ngx_connection_s* %c) #0 !dbg !189524 {
define dso_local i64 @ngx_ssl_set_session(%struct.ngx_connection_s* %c, %struct.ssl_session_st* %session) #0 !dbg !189543 {
define dso_local i64 @ngx_ssl_handshake(%struct.ngx_connection_s* %c) #0 !dbg !189570 {
define internal void @ngx_ssl_clear_error(%struct.ngx_log_s* %log) #0 !dbg !189759 {
define dso_local i64 @ngx_ssl_recv(%struct.ngx_connection_s* %c, i8* %buf, i64 %size) #0 !dbg !189773 {
define dso_local i64 @ngx_ssl_write(%struct.ngx_connection_s* %c, i8* %data, i64 %size) #0 !dbg !189910 {
define dso_local i64 @ngx_ssl_recv_chain(%struct.ngx_connection_s* %c, %struct.ngx_chain_s* %cl, i64 %limit) #0 !dbg !190090 {
define dso_local %struct.ngx_chain_s* @ngx_ssl_send_chain(%struct.ngx_connection_s* %c, %struct.ngx_chain_s* %in, i64 %limit) #0 !dbg !190213 {
define internal void @ngx_ssl_handshake_handler(%struct.ngx_event_s* %ev) #0 !dbg !190606 {
define internal void @ngx_ssl_connection_error(%struct.ngx_connection_s* %c, i32 %sslerr, i32 %err, i8* %text) #0 !dbg !190636 {
define internal void @ngx_ssl_read_handler(%struct.ngx_event_s* %rev) #0 !dbg !190880 {
define internal i64 @ngx_ssl_handle_recv(%struct.ngx_connection_s* %c, i32 %n) #0 !dbg !190894 {
define internal void @ngx_ssl_write_handler(%struct.ngx_event_s* %wev) #0 !dbg !191089 {
define dso_local void @ngx_ssl_free_buffer(%struct.ngx_connection_s* %c) #0 !dbg !191103 {
define dso_local i64 @ngx_ssl_shutdown(%struct.ngx_connection_s* %c) #0 !dbg !191136 {
define internal void @ngx_ssl_shutdown_handler(%struct.ngx_event_s* %ev) #0 !dbg !191314 {
define internal void @ngx_event_add_timer.973(%struct.ngx_event_s* %ev, i64 %timer) #4 !dbg !191347 {
define internal void @ngx_event_del_timer.975(%struct.ngx_event_s* %ev) #4 !dbg !191394 {
define dso_local i64 @ngx_ssl_session_cache(%struct.ngx_ssl_s* %ssl, %struct.ngx_str_t* %sess_ctx, %struct.ngx_array_t* %certificates, i64 %builtin_session_cache, %struct.ngx_shm_zone_s* %shm_zone, i64 %timeout) #0 !dbg !191404 {
define internal i64 @ngx_ssl_session_id_context(%struct.ngx_ssl_s* %ssl, %struct.ngx_str_t* %sess_ctx, %struct.ngx_array_t* %certificates) #0 !dbg !191524 {
define internal i32 @ngx_ssl_new_session(%struct.ssl_st* %ssl_conn, %struct.ssl_session_st* %sess) #0 !dbg !191755 {
define internal %struct.ssl_session_st* @ngx_ssl_get_cached_session(%struct.ssl_st* %ssl_conn, i8* %id, i32 %len, i32* %copy) #0 !dbg !191954 {
define internal void @ngx_ssl_remove_session(%struct.ssl_ctx_st* %ssl, %struct.ssl_session_st* %sess) #0 !dbg !192126 {
define internal i32 @ngx_crc32_short.976(i8* %p, i64 %len) #4 !dbg !192260 {
define internal void @ngx_ssl_expire_sessions(%struct.ngx_ssl_session_cache_t* %cache, %struct.ngx_slab_pool_t* %shpool, i64 %n) #0 !dbg !192301 {
define dso_local i64 @ngx_ssl_session_cache_init(%struct.ngx_shm_zone_s* %shm_zone, i8* %data) #0 !dbg !192358 {
define internal void @ngx_ssl_session_rbtree_insert_value(%struct.ngx_rbtree_node_s* %temp, %struct.ngx_rbtree_node_s* %node, %struct.ngx_rbtree_node_s* %sentinel) #0 !dbg !192444 {
define dso_local void @ngx_ssl_remove_cached_session(%struct.ssl_ctx_st* %ssl, %struct.ssl_session_st* %sess) #0 !dbg !192543 {
define dso_local i64 @ngx_ssl_session_ticket_keys(%struct.ngx_conf_s* %cf, %struct.ngx_ssl_s* %ssl, %struct.ngx_array_t* %paths) #0 !dbg !192555 {
define internal void @ngx_ssl_session_ticket_keys_cleanup(i8* %data) #0 !dbg !192804 {
define internal i32 @ngx_ssl_session_ticket_key_callback(%struct.ssl_st* %ssl_conn, i8* %name, i8* %iv, %struct.evp_cipher_ctx_st* %ectx, %struct.hmac_ctx_st* %hctx, i32 %enc) #0 !dbg !192817 {
define dso_local void @ngx_ssl_cleanup_ctx(i8* %data) #0 !dbg !193001 {
define dso_local i64 @ngx_ssl_check_host(%struct.ngx_connection_s* %c, %struct.ngx_str_t* %name) #0 !dbg !193033 {
define dso_local i64 @ngx_ssl_get_protocol(%struct.ngx_connection_s* %c, %struct.ngx_pool_s* %pool, %struct.ngx_str_t* %s) #0 !dbg !193079 {
define dso_local i64 @ngx_ssl_get_cipher_name(%struct.ngx_connection_s* %c, %struct.ngx_pool_s* %pool, %struct.ngx_str_t* %s) #0 !dbg !193096 {
define dso_local i64 @ngx_ssl_get_ciphers(%struct.ngx_connection_s* %c, %struct.ngx_pool_s* %pool, %struct.ngx_str_t* %s) #0 !dbg !193108 {
define dso_local i64 @ngx_ssl_get_curves(%struct.ngx_connection_s* %c, %struct.ngx_pool_s* %pool, %struct.ngx_str_t* %s) #0 !dbg !193257 {
define dso_local i64 @ngx_ssl_get_session_id(%struct.ngx_connection_s* %c, %struct.ngx_pool_s* %pool, %struct.ngx_str_t* %s) #0 !dbg !193385 {
define dso_local i64 @ngx_ssl_get_session_reused(%struct.ngx_connection_s* %c, %struct.ngx_pool_s* %pool, %struct.ngx_str_t* %s) #0 !dbg !193443 {
define dso_local i64 @ngx_ssl_get_early_data(%struct.ngx_connection_s* %c, %struct.ngx_pool_s* %pool, %struct.ngx_str_t* %s) #0 !dbg !193459 {
define dso_local i64 @ngx_ssl_get_server_name(%struct.ngx_connection_s* %c, %struct.ngx_pool_s* %pool, %struct.ngx_str_t* %s) #0 !dbg !193470 {
define dso_local i64 @ngx_ssl_get_raw_certificate(%struct.ngx_connection_s* %c, %struct.ngx_pool_s* %pool, %struct.ngx_str_t* %s) #0 !dbg !193516 {
define dso_local i64 @ngx_ssl_get_certificate(%struct.ngx_connection_s* %c, %struct.ngx_pool_s* %pool, %struct.ngx_str_t* %s) #0 !dbg !193603 {
define dso_local i64 @ngx_ssl_get_escaped_certificate(%struct.ngx_connection_s* %c, %struct.ngx_pool_s* %pool, %struct.ngx_str_t* %s) #0 !dbg !193714 {
define dso_local i64 @ngx_ssl_get_subject_dn(%struct.ngx_connection_s* %c, %struct.ngx_pool_s* %pool, %struct.ngx_str_t* %s) #0 !dbg !193774 {
define dso_local i64 @ngx_ssl_get_issuer_dn(%struct.ngx_connection_s* %c, %struct.ngx_pool_s* %pool, %struct.ngx_str_t* %s) #0 !dbg !193864 {
define dso_local i64 @ngx_ssl_get_subject_dn_legacy(%struct.ngx_connection_s* %c, %struct.ngx_pool_s* %pool, %struct.ngx_str_t* %s) #0 !dbg !193954 {
define dso_local i64 @ngx_ssl_get_issuer_dn_legacy(%struct.ngx_connection_s* %c, %struct.ngx_pool_s* %pool, %struct.ngx_str_t* %s) #0 !dbg !194036 {
define dso_local i64 @ngx_ssl_get_serial_number(%struct.ngx_connection_s* %c, %struct.ngx_pool_s* %pool, %struct.ngx_str_t* %s) #0 !dbg !194118 {
define dso_local i64 @ngx_ssl_get_fingerprint(%struct.ngx_connection_s* %c, %struct.ngx_pool_s* %pool, %struct.ngx_str_t* %s) #0 !dbg !194194 {
define dso_local i64 @ngx_ssl_get_client_verify(%struct.ngx_connection_s* %c, %struct.ngx_pool_s* %pool, %struct.ngx_str_t* %s) #0 !dbg !194263 {
define dso_local i64 @ngx_ssl_get_client_v_start(%struct.ngx_connection_s* %c, %struct.ngx_pool_s* %pool, %struct.ngx_str_t* %s) #0 !dbg !194331 {
define dso_local i64 @ngx_ssl_get_client_v_end(%struct.ngx_connection_s* %c, %struct.ngx_pool_s* %pool, %struct.ngx_str_t* %s) #0 !dbg !194406 {
define dso_local i64 @ngx_ssl_get_client_v_remain(%struct.ngx_connection_s* %c, %struct.ngx_pool_s* %pool, %struct.ngx_str_t* %s) #0 !dbg !194481 {
define internal i64 @ngx_ssl_parse_time(%struct.asn1_string_st* %asn1time) #0 !dbg !194563 {
define internal void @ngx_openssl_exit(%struct.ngx_cycle_s* %cycle) #0 !dbg !194601 {
define internal i8* @ngx_openssl_engine(%struct.ngx_conf_s* %cf, %struct.ngx_command_s* %cmd, i8* %conf) #0 !dbg !194607 {
define internal i8* @ngx_openssl_create_conf(%struct.ngx_cycle_s* %cycle) #0 !dbg !194670 {
define dso_local i64 @ngx_ssl_stapling(%struct.ngx_conf_s.4223* %cf, %struct.ngx_ssl_s* %ssl, %struct.ngx_str_t* %file, %struct.ngx_str_t* %responder, i64 %verify) #0 !dbg !194688 {
define internal i64 @ngx_ssl_stapling_certificate(%struct.ngx_conf_s.4223* %cf, %struct.ngx_ssl_s* %ssl, %struct.x509_st* %cert, %struct.ngx_str_t* %file, %struct.ngx_str_t* %responder, i64 %verify) #0 !dbg !194874 {
define internal i32 @ngx_ssl_certificate_status_callback(%struct.ssl_st* %ssl_conn, i8* %data) #0 !dbg !195030 {
define internal void @ngx_ssl_stapling_update(%struct.ngx_ssl_stapling_t* %staple) #0 !dbg !195093 {
define internal %struct.ngx_ssl_ocsp_ctx_s* @ngx_ssl_ocsp_start() #0 !dbg !195186 {
define internal void @ngx_ssl_stapling_ocsp_handler(%struct.ngx_ssl_ocsp_ctx_s* %ctx) #0 !dbg !195259 {
define internal void @ngx_ssl_ocsp_request(%struct.ngx_ssl_ocsp_ctx_s* %ctx) #0 !dbg !195571 {
define internal i64 @ngx_ssl_ocsp_create_request(%struct.ngx_ssl_ocsp_ctx_s* %ctx) #0 !dbg !195759 {
define internal void @ngx_ssl_ocsp_error(%struct.ngx_ssl_ocsp_ctx_s* %ctx) #0 !dbg !196039 {
define internal void @ngx_ssl_ocsp_resolve_handler(%struct.ngx_resolver_ctx_s* %resolve) #0 !dbg !196049 {
define internal void @ngx_ssl_ocsp_connect(%struct.ngx_ssl_ocsp_ctx_s* %ctx) #0 !dbg !196183 {
define internal void @ngx_ssl_ocsp_read_handler(%struct.ngx_event_s* %rev) #0 !dbg !196295 {
define internal void @ngx_ssl_ocsp_write_handler(%struct.ngx_event_s* %wev) #0 !dbg !196427 {
define internal i64 @ngx_ssl_ocsp_process_status_line(%struct.ngx_ssl_ocsp_ctx_s* %ctx) #0 !dbg !196527 {
define internal void @ngx_event_add_timer.1010(%struct.ngx_event_s* %ev, i64 %timer) #4 !dbg !196558 {
define internal void @ngx_event_del_timer.1011(%struct.ngx_event_s* %ev) #4 !dbg !196605 {
define internal i64 @ngx_ssl_ocsp_parse_status_line(%struct.ngx_ssl_ocsp_ctx_s* %ctx) #0 !dbg !95828 {
define internal i64 @ngx_ssl_ocsp_process_headers(%struct.ngx_ssl_ocsp_ctx_s* %ctx) #0 !dbg !196841 {
define internal i64 @ngx_ssl_ocsp_parse_header_line(%struct.ngx_ssl_ocsp_ctx_s* %ctx) #0 !dbg !97758 {
define internal i64 @ngx_ssl_ocsp_process_body(%struct.ngx_ssl_ocsp_ctx_s* %ctx) #0 !dbg !197185 {
define internal void @ngx_ssl_ocsp_dummy_handler(%struct.ngx_event_s* %ev) #0 !dbg !197199 {
define internal i64 @ngx_ssl_stapling_time(%struct.asn1_string_st* %asn1time) #0 !dbg !197203 {
define internal void @ngx_ssl_ocsp_done(%struct.ngx_ssl_ocsp_ctx_s* %ctx) #0 !dbg !197241 {
define internal i8* @ngx_ssl_ocsp_log_error(%struct.ngx_log_s* %log, i8* %buf, i64 %len) #0 !dbg !197259 {
define internal void @ngx_ssl_stapling_cleanup(i8* %data) #0 !dbg !197354 {
define internal i64 @ngx_ssl_stapling_file(%struct.ngx_conf_s.4223* %cf, %struct.ngx_ssl_s* %ssl, %struct.ngx_ssl_stapling_t* %staple, %struct.ngx_str_t* %file) #0 !dbg !197381 {
define internal i64 @ngx_ssl_stapling_issuer(%struct.ngx_conf_s.4223* %cf, %struct.ngx_ssl_s* %ssl, %struct.ngx_ssl_stapling_t* %staple) #0 !dbg !197508 {
define internal i64 @ngx_ssl_stapling_responder(%struct.ngx_conf_s.4223* %cf, %struct.ngx_ssl_s* %ssl, %struct.ngx_ssl_stapling_t* %staple, %struct.ngx_str_t* %responder) #0 !dbg !197640 {
define dso_local i64 @ngx_ssl_stapling_resolver(%struct.ngx_conf_s.4223* %cf, %struct.ngx_ssl_s* %ssl, %struct.ngx_resolver_s* %resolver, i64 %resolver_timeout) #0 !dbg !197830 {
define dso_local i64 @ngx_http_add_location(%struct.ngx_conf_s* %cf, %struct.ngx_queue_s** %locations, %struct.ngx_http_core_loc_conf_s* %clcf) #0 !dbg !197877 {
define dso_local i64 @ngx_http_add_listen(%struct.ngx_conf_s* %cf, %struct.ngx_http_core_srv_conf_t* %cscf, %struct.ngx_http_listen_opt_t* %lsopt) #0 !dbg !197969 {
define internal i64 @ngx_http_add_addresses(%struct.ngx_conf_s* %cf, %struct.ngx_http_core_srv_conf_t* %cscf, %struct.ngx_http_conf_port_t* %port, %struct.ngx_http_listen_opt_t* %lsopt) #0 !dbg !198150 {
define internal i64 @ngx_http_add_address(%struct.ngx_conf_s* %cf, %struct.ngx_http_core_srv_conf_t* %cscf, %struct.ngx_http_conf_port_t* %port, %struct.ngx_http_listen_opt_t* %lsopt) #0 !dbg !198315 {
define internal i64 @ngx_array_init.1056(%struct.ngx_array_t* %array, %struct.ngx_pool_s* %pool, i64 %n, i64 %size) #4 !dbg !198386 {
define internal i64 @ngx_http_add_server(%struct.ngx_conf_s* %cf, %struct.ngx_http_core_srv_conf_t* %cscf, %struct.ngx_http_conf_addr_t* %addr) #0 !dbg !198429 {
define dso_local i8* @ngx_http_types_slot(%struct.ngx_conf_s* %cf, %struct.ngx_command_s* %cmd, i8* %conf) #0 !dbg !198510 {
define dso_local i8* @ngx_http_merge_types(%struct.ngx_conf_s* %cf, %struct.ngx_array_t** %keys, %struct.ngx_hash_t* %types_hash, %struct.ngx_array_t** %prev_keys, %struct.ngx_hash_t* %prev_types_hash, %struct.ngx_str_t* %default_types) #0 !dbg !198706 {
define dso_local i64 @ngx_http_set_default_types(%struct.ngx_conf_s* %cf, %struct.ngx_array_t** %types, %struct.ngx_str_t* %default_type) #0 !dbg !198846 {
define internal i8* @ngx_http_block(%struct.ngx_conf_s* %cf, %struct.ngx_command_s* %cmd, i8* %conf) #0 !dbg !198903 {
define internal i8* @ngx_http_merge_servers(%struct.ngx_conf_s* %cf, %struct.ngx_http_core_main_conf_t* %cmcf, %struct.ngx_http_module_t* %module, i64 %ctx_index) #0 !dbg !199400 {
define internal i64 @ngx_http_init_locations(%struct.ngx_conf_s* %cf, %struct.ngx_http_core_srv_conf_t* %cscf, %struct.ngx_http_core_loc_conf_s* %pclcf) #0 !dbg !199539 {
define internal i64 @ngx_http_init_static_location_trees(%struct.ngx_conf_s* %cf, %struct.ngx_http_core_loc_conf_s* %pclcf) #0 !dbg !199690 {
define internal i64 @ngx_http_init_phases(%struct.ngx_conf_s* %cf, %struct.ngx_http_core_main_conf_t* %cmcf) #0 !dbg !199779 {
define internal i64 @ngx_http_init_headers_in_hash(%struct.ngx_conf_s* %cf, %struct.ngx_http_core_main_conf_t* %cmcf) #0 !dbg !199876 {
define internal i64 @ngx_http_init_phase_handlers(%struct.ngx_conf_s* %cf, %struct.ngx_http_core_main_conf_t* %cmcf) #0 !dbg !199978 {
define internal i64 @ngx_http_optimize_servers(%struct.ngx_conf_s* %cf, %struct.ngx_http_core_main_conf_t* %cmcf, %struct.ngx_array_t* %ports) #0 !dbg !200201 {
define internal i64 @ngx_http_cmp_conf_addrs(i8* %one, i8* %two) #0 !dbg !200303 {
define internal i64 @ngx_http_server_names(%struct.ngx_conf_s* %cf, %struct.ngx_http_core_main_conf_t* %cmcf, %struct.ngx_http_conf_addr_t* %addr) #0 !dbg !200356 {
define internal i64 @ngx_http_init_listening(%struct.ngx_conf_s* %cf, %struct.ngx_http_conf_port_t* %port) #0 !dbg !200588 {
define internal %struct.ngx_listening_s* @ngx_http_add_listening(%struct.ngx_conf_s* %cf, %struct.ngx_http_conf_addr_t* %addr) #0 !dbg !200717 {
define internal i64 @ngx_http_add_addrs6(%struct.ngx_conf_s* %cf, %struct.srtp_protection_profile_st* %hport, %struct.ngx_http_conf_addr_t* %addr) #0 !dbg !200855 {
define internal i64 @ngx_http_add_addrs(%struct.ngx_conf_s* %cf, %struct.srtp_protection_profile_st* %hport, %struct.ngx_http_conf_addr_t* %addr) #0 !dbg !201021 {
define internal i32 @ngx_http_cmp_dns_wildcards(i8* %one, i8* %two) #0 !dbg !201187 {
define internal i64 @ngx_http_join_exact_locations(%struct.ngx_conf_s* %cf, %struct.ngx_queue_s* %locations) #0 !dbg !201210 {
define internal void @ngx_http_create_locations_list(%struct.ngx_queue_s* %locations, %struct.ngx_queue_s* %q) #0 !dbg !201293 {
define internal %struct.ngx_http_location_tree_node_s* @ngx_http_create_locations_tree(%struct.ngx_conf_s* %cf, %struct.ngx_queue_s* %locations, i64 %prefix) #0 !dbg !201411 {
define internal i64 @ngx_http_cmp_locations(%struct.ngx_queue_s* %one, %struct.ngx_queue_s* %two) #0 !dbg !201562 {
define internal i8* @ngx_http_merge_locations(%struct.ngx_conf_s* %cf, %struct.ngx_queue_s* %locations, i8** %loc_conf, %struct.ngx_http_module_t* %module, i64 %ctx_index) #0 !dbg !201681 {
define dso_local void @ngx_http_handler(%struct.ngx_http_request_s.4566* %r) #0 !dbg !201785 {
define dso_local void @ngx_http_core_run_phases(%struct.ngx_http_request_s.4566* %r) #0 !dbg !203108 {
define internal i8* @ngx_http_core_server(%struct.ngx_conf_s.1429* %cf, %struct.ngx_command_s.1430* %cmd, i8* %dummy) #0 !dbg !203147 {
define internal i8* @ngx_http_core_location(%struct.ngx_conf_s.1429* %cf, %struct.ngx_command_s.1430* %cmd, i8* %dummy) #0 !dbg !203447 {
define internal i8* @ngx_http_core_listen(%struct.ngx_conf_s.1429* %cf, %struct.ngx_command_s.1430* %cmd, i8* %conf) #0 !dbg !203894 {
define internal i8* @ngx_http_core_server_name(%struct.ngx_conf_s.1429* %cf, %struct.ngx_command_s.1430* %cmd, i8* %conf) #0 !dbg !204468 {
define internal i8* @ngx_http_core_types(%struct.ngx_conf_s.1429* %cf, %struct.ngx_command_s.1430* %cmd, i8* %conf) #0 !dbg !204604 {
define internal i8* @ngx_http_core_root(%struct.ngx_conf_s.1429* %cf, %struct.ngx_command_s.1430* %cmd, i8* %conf) #0 !dbg !204655 {
define internal i8* @ngx_http_core_limit_except(%struct.ngx_conf_s.1429* %cf, %struct.ngx_command_s.1430* %cmd, i8* %conf) #0 !dbg !204851 {
define internal i8* @ngx_http_core_set_aio(%struct.ngx_conf_s.1429* %cf, %struct.ngx_command_s.1430* %cmd, i8* %conf) #0 !dbg !205100 {
define internal i8* @ngx_http_core_directio(%struct.ngx_conf_s.1429* %cf, %struct.ngx_command_s.1430* %cmd, i8* %conf) #0 !dbg !205158 {
define internal i8* @ngx_http_core_keepalive(%struct.ngx_conf_s.1429* %cf, %struct.ngx_command_s.1430* %cmd, i8* %conf) #0 !dbg !205204 {
define internal i8* @ngx_http_core_internal(%struct.ngx_conf_s.1429* %cf, %struct.ngx_command_s.1430* %cmd, i8* %conf) #0 !dbg !205261 {
define internal i8* @ngx_http_core_error_page(%struct.ngx_conf_s.1429* %cf, %struct.ngx_command_s.1430* %cmd, i8* %conf) #0 !dbg !205283 {
define internal i8* @ngx_http_core_error_log(%struct.ngx_conf_s.1429* %cf, %struct.ngx_command_s.1430* %cmd, i8* %conf) #0 !dbg !205565 {
define internal i8* @ngx_http_core_open_file_cache(%struct.ngx_conf_s.1429* %cf, %struct.ngx_command_s.1430* %cmd, i8* %conf) #0 !dbg !205580 {
define internal i8* @ngx_http_core_resolver(%struct.ngx_conf_s.1429* %cf, %struct.ngx_command_s.1430* %cmd, i8* %conf) #0 !dbg !205722 {
define internal i8* @ngx_http_disable_symlinks(%struct.ngx_conf_s.1429* %cf, %struct.ngx_command_s.1430* %cmd, i8* %conf) #0 !dbg !205763 {
define internal i8* @ngx_http_core_lowat_check(%struct.ngx_conf_s.1429* %cf, i8* %post, i8* %data) #0 !dbg !205924 {
define internal i8* @ngx_http_core_type(%struct.ngx_conf_s.1429* %cf, %struct.ngx_command_s.1430* %dummy, i8* %conf) #0 !dbg !205939 {
define internal i8* @ngx_strlchr.1143(i8* %p, i8* %last, i8 zeroext %c) #4 !dbg !206092 {
define internal i64 @ngx_http_core_regex_location(%struct.ngx_conf_s.1429* %cf, %struct.ngx_http_core_loc_conf_s.4556* %clcf, %struct.ngx_str_t* %regex, i64 %caseless) #0 !dbg !206118 {
define internal i8* @ngx_http_core_pool_size(%struct.ngx_conf_s.1429* %cf, i8* %post, i8* %data) #0 !dbg !206133 {
define internal i64 @ngx_http_core_preconfiguration(%struct.ngx_conf_s.1429* %cf) #0 !dbg !206163 {
define internal i64 @ngx_http_core_postconfiguration(%struct.ngx_conf_s.1429* %cf) #0 !dbg !206169 {
define internal i8* @ngx_http_core_create_main_conf(%struct.ngx_conf_s.1429* %cf) #0 !dbg !206174 {
define internal i8* @ngx_http_core_init_main_conf(%struct.ngx_conf_s.1429* %cf, i8* %conf) #0 !dbg !206214 {
define internal i8* @ngx_http_core_create_srv_conf(%struct.ngx_conf_s.1429* %cf) #0 !dbg !206264 {
define internal i8* @ngx_http_core_merge_srv_conf(%struct.ngx_conf_s.1429* %cf, i8* %parent, i8* %child) #0 !dbg !206327 {
define internal i8* @ngx_http_core_create_loc_conf(%struct.ngx_conf_s.1429* %cf) #0 !dbg !206458 {
define internal i8* @ngx_http_core_merge_loc_conf(%struct.ngx_conf_s.1429* %cf, i8* %parent, i8* %child) #0 !dbg !206633 {
define internal i64 @ngx_array_init.1156(%struct.ngx_array_t* %array, %struct.ngx_pool_s* %pool, i64 %n, i64 %size) #4 !dbg !207256 {
define dso_local i64 @ngx_http_core_generic_phase(%struct.ngx_http_request_s.4566* %r, %struct.ngx_http_phase_handler_s.4572* %ph) #0 !dbg !207299 {
define dso_local i64 @ngx_http_core_rewrite_phase(%struct.ngx_http_request_s.4566* %r, %struct.ngx_http_phase_handler_s.4572* %ph) #0 !dbg !207344 {
define dso_local i64 @ngx_http_core_find_config_phase(%struct.ngx_http_request_s.4566* %r, %struct.ngx_http_phase_handler_s.4572* %ph) #0 !dbg !207375 {
define internal i64 @ngx_http_core_find_location(%struct.ngx_http_request_s.4566* %r) #0 !dbg !207554 {
define dso_local void @ngx_http_update_location_config(%struct.ngx_http_request_s.4566* %r) #0 !dbg !207590 {
define internal i64 @ngx_http_core_find_static_location(%struct.ngx_http_request_s.4566* %r, %struct.ngx_http_location_tree_node_s.4554* %node) #0 !dbg !207769 {
define dso_local i64 @ngx_http_core_post_rewrite_phase(%struct.ngx_http_request_s.4566* %r, %struct.ngx_http_phase_handler_s.4572* %ph) #0 !dbg !207930 {
define dso_local i64 @ngx_http_core_access_phase(%struct.ngx_http_request_s.4566* %r, %struct.ngx_http_phase_handler_s.4572* %ph) #0 !dbg !207976 {
define dso_local i64 @ngx_http_core_post_access_phase(%struct.ngx_http_request_s.4566* %r, %struct.ngx_http_phase_handler_s.4572* %ph) #0 !dbg !208093 {
define dso_local i64 @ngx_http_core_content_phase(%struct.ngx_http_request_s.4566* %r, %struct.ngx_http_phase_handler_s.4572* %ph) #0 !dbg !208128 {
define dso_local i8* @ngx_http_map_uri_to_path(%struct.ngx_http_request_s.4566* %r, %struct.ngx_str_t* %path, i64* %root_length, i64 %reserved) #0 !dbg !208207 {
define dso_local i8* @ngx_http_test_content_type(%struct.ngx_http_request_s.4566* %r, %struct.ngx_hash_t* %types_hash) #0 !dbg !208377 {
define dso_local i64 @ngx_http_set_content_type(%struct.ngx_http_request_s.4566* %r) #0 !dbg !208477 {
define dso_local void @ngx_http_set_exten(%struct.ngx_http_request_s.4566* %r) #0 !dbg !208610 {
define dso_local i64 @ngx_http_set_etag(%struct.ngx_http_request_s.4566* %r) #0 !dbg !208679 {
define dso_local void @ngx_http_weak_etag(%struct.ngx_http_request_s.4566* %r) #0 !dbg !208752 {
define dso_local i64 @ngx_http_send_response(%struct.ngx_http_request_s.4566* %r, i64 %status, %struct.ngx_str_t* %ct, %struct.ngx_http_complex_value_t* %cv) #0 !dbg !208852 {
define dso_local i64 @ngx_http_send_header(%struct.ngx_http_request_s.4566* %r) #0 !dbg !209047 {
define dso_local i64 @ngx_http_output_filter(%struct.ngx_http_request_s.4566* %r, %struct.ngx_chain_s* %in) #0 !dbg !209086 {
define dso_local i64 @ngx_http_auth_basic_user(%struct.ngx_http_request_s.4566* %r) #0 !dbg !209115 {
define dso_local i64 @ngx_http_subrequest(%struct.ngx_http_request_s.4566* %r, %struct.ngx_str_t* %uri, %struct.ngx_str_t* %args, %struct.ngx_http_request_s.4566** %psr, %struct.ngx_http_post_subrequest_t.4550* %ps, i64 %flags) #0 !dbg !209300 {
define internal i64 @ngx_list_init.1186(%struct.ngx_list_t* %list, %struct.ngx_pool_s* %pool, i64 %n, i64 %size) #4 !dbg !209731 {
define dso_local i64 @ngx_http_internal_redirect(%struct.ngx_http_request_s.4566* %r, %struct.ngx_str_t* %uri, %struct.ngx_str_t* %args) #0 !dbg !209787 {
define dso_local i64 @ngx_http_named_location(%struct.ngx_http_request_s.4566* %r, %struct.ngx_str_t* %name) #0 !dbg !209865 {
define dso_local %struct.ngx_http_cleanup_s* @ngx_http_cleanup_add(%struct.ngx_http_request_s.4566* %r, i64 %size) #0 !dbg !209985 {
define dso_local i64 @ngx_http_set_disable_symlinks(%struct.ngx_http_request_s.4566* %r, %struct.ngx_http_core_loc_conf_s.4556* %clcf, %struct.ngx_str_t* %path, %struct.ngx_open_file_info_t* %of) #0 !dbg !210046 {
define dso_local i64 @ngx_http_get_forwarded_addr(%struct.ngx_http_request_s.4566* %r, %struct.ngx_addr_t* %addr, %struct.ngx_array_t* %headers, %struct.ngx_str_t* %value, %struct.ngx_array_t* %proxies, i32 %recursive) #0 !dbg !210165 {
define internal i64 @ngx_http_get_forwarded_addr_internal(%struct.ngx_http_request_s.4566* %r, %struct.ngx_addr_t* %addr, i8* %xff, i64 %xfflen, %struct.ngx_array_t* %proxies, i32 %recursive) #0 !dbg !210256 {
define dso_local i64 @ngx_http_special_response_handler(%struct.ngx_http_request_s.4754* %r, i64 %error) #0 !dbg !210385 {
define internal i64 @ngx_http_send_error_page(%struct.ngx_http_request_s.4754* %r, %struct.ngx_http_err_page_t* %err_page) #0 !dbg !213740 {
define internal i64 @ngx_http_send_refresh(%struct.ngx_http_request_s.4754* %r) #0 !dbg !213911 {
define internal i64 @ngx_http_send_special_response(%struct.ngx_http_request_s.4754* %r, %struct.ngx_http_core_loc_conf_s.4744* %clcf, i64 %err) #0 !dbg !214076 {
define dso_local i64 @ngx_http_filter_finalize_request(%struct.ngx_http_request_s.4754* %r, %struct.ngx_module_s.1431* %m, i64 %error) #0 !dbg !214345 {
define dso_local void @ngx_http_clean_header(%struct.ngx_http_request_s.4754* %r) #0 !dbg !214397 {
define dso_local void @ngx_http_init_connection(%struct.ngx_connection_s* %c) #0 !dbg !214431 {
define dso_local void @ngx_http_close_connection(%struct.ngx_connection_s* %c) #0 !dbg !214784 {
define internal i8* @ngx_http_log_error(%struct.ngx_log_s* %log, i8* %buf, i64 %len) #0 !dbg !214817 {
define internal void @ngx_http_wait_request_handler(%struct.ngx_event_s* %rev) #0 !dbg !214889 {
define dso_local void @ngx_http_empty_handler(%struct.ngx_event_s* %wev) #0 !dbg !215155 {
define internal void @ngx_http_ssl_handshake(%struct.ngx_event_s* %rev) #0 !dbg !215159 {
define internal void @ngx_event_add_timer.1198(%struct.ngx_event_s* %ev, i64 %timer) #4 !dbg !215408 {
define internal void @ngx_event_del_timer.1199(%struct.ngx_event_s* %ev) #4 !dbg !215455 {
define internal void @ngx_http_ssl_handshake_handler(%struct.ngx_connection_s* %c) #0 !dbg !215465 {
define dso_local %struct.ngx_http_request_s.4927* @ngx_http_create_request(%struct.ngx_connection_s* %c) #0 !dbg !215509 {
define internal void @ngx_http_process_request_line(%struct.ngx_event_s* %rev) #0 !dbg !215554 {
define internal void @ngx_http_close_request(%struct.ngx_http_request_s.4927* %r, i64 %rc) #0 !dbg !215883 {
define internal i64 @ngx_http_read_request_header(%struct.ngx_http_request_s.4927* %r) #0 !dbg !215924 {
define dso_local i64 @ngx_http_process_request_uri(%struct.ngx_http_request_s.4927* %r) #0 !dbg !216042 {
define internal i64 @ngx_http_validate_host(%struct.ngx_str_t* %host, %struct.ngx_pool_s* %pool, i64 %alloc) #0 !dbg !38963 {
define dso_local void @ngx_http_finalize_request(%struct.ngx_http_request_s.4927* %r, i64 %rc) #0 !dbg !216367 {
define internal i64 @ngx_http_set_virtual_server(%struct.ngx_http_request_s.4927* %r, %struct.ngx_str_t* %host) #0 !dbg !216765 {
define dso_local void @ngx_http_process_request(%struct.ngx_http_request_s.4927* %r) #0 !dbg !216879 {
define internal i64 @ngx_list_init.1207(%struct.ngx_list_t* %list, %struct.ngx_pool_s* %pool, i64 %n, i64 %size) #4 !dbg !217007 {
define internal void @ngx_http_process_request_headers(%struct.ngx_event_s* %rev) #0 !dbg !217063 {
define internal i64 @ngx_http_alloc_large_header_buffer(%struct.ngx_http_request_s.4927* %r, i64 %request_line) #0 !dbg !217458 {
define dso_local void @ngx_http_run_posted_requests(%struct.ngx_connection_s* %c) #0 !dbg !217848 {
define dso_local i64 @ngx_http_process_request_header(%struct.ngx_http_request_s.4927* %r) #0 !dbg !217896 {
define internal void @ngx_http_request_handler(%struct.ngx_event_s* %ev) #0 !dbg !218071 {
define dso_local void @ngx_http_block_reading(%struct.ngx_http_request_s.4927* %r) #0 !dbg !218130 {
define internal void @ngx_http_terminate_request(%struct.ngx_http_request_s.4927* %r, i64 %rc) #0 !dbg !218156 {
define internal void @ngx_http_request_finalizer(%struct.ngx_http_request_s.4927* %r) #0 !dbg !218255 {
define internal void @ngx_http_terminate_handler(%struct.ngx_http_request_s.4927* %r) #0 !dbg !218261 {
define dso_local i64 @ngx_http_post_request(%struct.ngx_http_request_s.4927* %r, %struct.ngx_http_posted_request_s.4912* %pr) #0 !dbg !218270 {
define internal i64 @ngx_http_find_virtual_server(%struct.ngx_connection_s* %c, %struct.ngx_http_virtual_names_t.4922* %virtual_names, %struct.ngx_str_t* %host, %struct.ngx_http_request_s.4927* %r, %struct.ngx_http_core_srv_conf_t.4918** %cscfp) #0 !dbg !218328 {
define internal void @ngx_http_finalize_connection(%struct.ngx_http_request_s.4927* %r) #0 !dbg !218373 {
define internal i64 @ngx_http_post_action(%struct.ngx_http_request_s.4927* %r) #0 !dbg !218483 {
define internal void @ngx_http_log_request(%struct.ngx_http_request_s.4927* %r) #0 !dbg !218543 {
define internal i64 @ngx_http_set_write_handler(%struct.ngx_http_request_s.4927* %r) #0 !dbg !218585 {
define dso_local void @ngx_http_request_empty_handler(%struct.ngx_http_request_s.4927* %r) #0 !dbg !218641 {
define dso_local void @ngx_http_test_reading(%struct.ngx_http_request_s.4927* %r) #0 !dbg !218645 {
define internal void @ngx_http_writer(%struct.ngx_http_request_s.4927* %r) #0 !dbg !218771 {
define internal void @ngx_http_set_keepalive(%struct.ngx_http_request_s.4927* %r) #0 !dbg !218891 {
define internal void @ngx_http_set_lingering_close(%struct.ngx_http_request_s.4927* %r) #0 !dbg !219312 {
define internal void @ngx_http_lingering_close_handler(%struct.ngx_event_s* %rev) #0 !dbg !219401 {
define dso_local void @ngx_http_free_request(%struct.ngx_http_request_s.4927* %r, i64 %rc) #0 !dbg !219499 {
define internal void @ngx_http_keepalive_handler(%struct.ngx_event_s* %rev) #0 !dbg !219648 {
define internal %struct.ngx_http_request_s.4927* @ngx_http_alloc_request(%struct.ngx_connection_s* %c) #0 !dbg !219832 {
define internal i8* @ngx_http_log_error_handler(%struct.ngx_http_request_s.4927* %r, %struct.ngx_http_request_s.4927* %sr, i8* %buf, i64 %len) #0 !dbg !220054 {
define dso_local i32 @ngx_http_ssl_servername(%struct.ssl_st* %ssl_conn, i32* %ad, i8* %arg) #0 !dbg !220262 {
define dso_local i32 @ngx_http_ssl_certificate(%struct.ssl_st* %ssl_conn, i8* %arg) #0 !dbg !220402 {
define dso_local i64 @ngx_http_send_special(%struct.ngx_http_request_s.4927* %r, i64 %flags) #0 !dbg !220516 {
define internal i64 @ngx_http_process_host(%struct.ngx_http_request_s.4927* %r, %struct.ngx_table_elt_t* %h, i64 %offset) #0 !dbg !220578 {
define internal i64 @ngx_http_process_connection(%struct.ngx_http_request_s.4927* %r, %struct.ngx_table_elt_t* %h, i64 %offset) #0 !dbg !220648 {
define internal i64 @ngx_http_process_unique_header_line(%struct.ngx_http_request_s.4927* %r, %struct.ngx_table_elt_t* %h, i64 %offset) #0 !dbg !220680 {
define internal i64 @ngx_http_process_user_agent(%struct.ngx_http_request_s.4927* %r, %struct.ngx_table_elt_t* %h, i64 %offset) #0 !dbg !220713 {
define internal i64 @ngx_http_process_header_line(%struct.ngx_http_request_s.4927* %r, %struct.ngx_table_elt_t* %h, i64 %offset) #0 !dbg !220862 {
define internal i64 @ngx_http_process_multi_header_lines(%struct.ngx_http_request_s.4927* %r, %struct.ngx_table_elt_t* %h, i64 %offset) #0 !dbg !220889 {
define internal i64 @ngx_array_init.1279(%struct.ngx_array_t* %array, %struct.ngx_pool_s* %pool, i64 %n, i64 %size) #4 !dbg !220941 {
define dso_local i64 @ngx_http_parse_request_line(%struct.ngx_http_request_s.4754* %r, %struct.ngx_buf_s* %b) #0 !dbg !42168 {
define dso_local i64 @ngx_http_parse_header_line(%struct.ngx_http_request_s.4754* %r, %struct.ngx_buf_s* %b, i64 %allow_underscores) #0 !dbg !45345 {
define dso_local i64 @ngx_http_parse_uri(%struct.ngx_http_request_s.4754* %r) #0 !dbg !45357 {
define dso_local i64 @ngx_http_parse_complex_uri(%struct.ngx_http_request_s.4754* %r, i64 %merge_slashes) #0 !dbg !45363 {
define dso_local i64 @ngx_http_parse_status_line(%struct.ngx_http_request_s.4754* %r, %struct.ngx_buf_s* %b, %struct.ngx_http_status_t* %status) #0 !dbg !45373 {
define dso_local i64 @ngx_http_parse_unsafe_uri(%struct.ngx_http_request_s.4754* %r, %struct.ngx_str_t* %uri, %struct.ngx_str_t* %args, i64* %flags) #0 !dbg !223268 {
define dso_local i64 @ngx_http_parse_multi_header_lines(%struct.ngx_array_t* %headers, %struct.ngx_str_t* %name, %struct.ngx_str_t* %value) #0 !dbg !223515 {
define dso_local i64 @ngx_http_parse_set_cookie_lines(%struct.ngx_array_t* %headers, %struct.ngx_str_t* %name, %struct.ngx_str_t* %value) #0 !dbg !223724 {
define dso_local i64 @ngx_http_arg(%struct.ngx_http_request_s.4754* %r, i8* %name, i64 %len, %struct.ngx_str_t* %value) #0 !dbg !223871 {
define internal i8* @ngx_strlchr.1300(i8* %p, i8* %last, i8 zeroext %c) #4 !dbg !223985 {
define dso_local void @ngx_http_split_args(%struct.ngx_http_request_s.4754* %r, %struct.ngx_str_t* %uri, %struct.ngx_str_t* %args) #0 !dbg !224011 {
define dso_local i64 @ngx_http_parse_chunked(%struct.ngx_http_request_s.4754* %r, %struct.ngx_buf_s* %b, %struct.ngx_time_t* %ctx) #0 !dbg !45399 {
define internal i8* @ngx_http_log_set_format(%struct.ngx_conf_s.1429* %cf, %struct.ngx_command_s.1430* %cmd, i8* %conf) #0 !dbg !224389 {
define internal i8* @ngx_http_log_set_log(%struct.ngx_conf_s.1429* %cf, %struct.ngx_command_s.1430* %cmd, i8* %conf) #0 !dbg !224509 {
define internal i8* @ngx_http_log_open_file_cache(%struct.ngx_conf_s.1429* %cf, %struct.ngx_command_s.1430* %cmd, i8* %conf) #0 !dbg !225173 {
define internal void @ngx_http_log_flush_handler(%struct.ngx_event_s* %ev) #0 !dbg !225377 {
define internal void @ngx_http_log_flush(%struct.ngx_open_file_s* %file, %struct.ngx_log_s* %log) #0 !dbg !225386 {
define internal i64 @ngx_write_fd.1330(i32 %fd, i8* %buf, i64 %n) #4 !dbg !225457 {
define internal void @ngx_event_del_timer.1333(%struct.ngx_event_s* %ev) #4 !dbg !225469 {
define internal i8* @ngx_http_log_compile_format(%struct.ngx_conf_s.1429* %cf, %struct.ngx_array_t* %flushes, %struct.ngx_array_t* %ops, %struct.ngx_array_t* %args, i64 %s) #0 !dbg !225479 {
define internal i64 @ngx_http_log_variable_compile(%struct.ngx_conf_s.1429* %cf, %struct.ngx_http_log_op_s* %op, %struct.ngx_str_t* %value, i64 %escape) #0 !dbg !225878 {
define internal i8* @ngx_http_log_copy_short(%struct.ngx_http_request_s.5283* %r, i8* %buf, %struct.ngx_http_log_op_s* %op) #0 !dbg !225934 {
define internal i8* @ngx_http_log_copy_long(%struct.ngx_http_request_s.5283* %r, i8* %buf, %struct.ngx_http_log_op_s* %op) #0 !dbg !225964 {
define internal i64 @ngx_http_log_json_variable_getlen(%struct.ngx_http_request_s.5283* %r, i64 %data) #0 !dbg !225973 {
define internal i8* @ngx_http_log_json_variable(%struct.ngx_http_request_s.5283* %r, i8* %buf, %struct.ngx_http_log_op_s* %op) #0 !dbg !226011 {
define internal i64 @ngx_http_log_unescaped_variable_getlen(%struct.ngx_http_request_s.5283* %r, i64 %data) #0 !dbg !226053 {
define internal i8* @ngx_http_log_unescaped_variable(%struct.ngx_http_request_s.5283* %r, i8* %buf, %struct.ngx_http_log_op_s* %op) #0 !dbg !226080 {
define internal i64 @ngx_http_log_variable_getlen(%struct.ngx_http_request_s.5283* %r, i64 %data) #0 !dbg !226107 {
define internal i8* @ngx_http_log_variable(%struct.ngx_http_request_s.5283* %r, i8* %buf, %struct.ngx_http_log_op_s* %op) #0 !dbg !226146 {
define internal i64 @ngx_http_log_escape(i8* %dst, i8* %src, i64 %size) #0 !dbg !48634 {
define internal i8* @ngx_http_log_pipe(%struct.ngx_http_request_s.5283* %r, i8* %buf, %struct.ngx_http_log_op_s* %op) #0 !dbg !226273 {
define internal i8* @ngx_http_log_time(%struct.ngx_http_request_s.5283* %r, i8* %buf, %struct.ngx_http_log_op_s* %op) #0 !dbg !226294 {
define internal i8* @ngx_http_log_iso8601(%struct.ngx_http_request_s.5283* %r, i8* %buf, %struct.ngx_http_log_op_s* %op) #0 !dbg !226303 {
define internal i8* @ngx_http_log_msec(%struct.ngx_http_request_s.5283* %r, i8* %buf, %struct.ngx_http_log_op_s* %op) #0 !dbg !226312 {
define internal i8* @ngx_http_log_request_time(%struct.ngx_http_request_s.5283* %r, i8* %buf, %struct.ngx_http_log_op_s* %op) #0 !dbg !226330 {
define internal i8* @ngx_http_log_status(%struct.ngx_http_request_s.5283* %r, i8* %buf, %struct.ngx_http_log_op_s* %op) #0 !dbg !226365 {
define internal i8* @ngx_http_log_bytes_sent(%struct.ngx_http_request_s.5283* %r, i8* %buf, %struct.ngx_http_log_op_s* %op) #0 !dbg !226408 {
define internal i8* @ngx_http_log_body_bytes_sent(%struct.ngx_http_request_s.5283* %r, i8* %buf, %struct.ngx_http_log_op_s* %op) #0 !dbg !226421 {
define internal i8* @ngx_http_log_request_length(%struct.ngx_http_request_s.5283* %r, i8* %buf, %struct.ngx_http_log_op_s* %op) #0 !dbg !226452 {
define internal i64 @ngx_http_log_init(%struct.ngx_conf_s.1429* %cf) #0 !dbg !226464 {
define internal i8* @ngx_http_log_create_main_conf(%struct.ngx_conf_s.1429* %cf) #0 !dbg !226589 {
define internal i8* @ngx_http_log_create_loc_conf(%struct.ngx_conf_s.1429* %cf) #0 !dbg !226646 {
define internal i8* @ngx_http_log_merge_loc_conf(%struct.ngx_conf_s.1429* %cf, i8* %parent, i8* %child) #0 !dbg !226667 {
define internal i64 @ngx_array_init.1355(%struct.ngx_array_t* %array, %struct.ngx_pool_s* %pool, i64 %n, i64 %size) #4 !dbg !226798 {
define internal i64 @ngx_http_log_handler(%struct.ngx_http_request_s.5283* %r) #0 !dbg !226841 {
define internal void @ngx_http_log_write(%struct.ngx_http_request_s.5283* %r, %struct.ngx_http_log_t* %log, i8* %buf, i64 %len) #0 !dbg !227222 {
define internal void @ngx_event_add_timer.1356(%struct.ngx_event_s* %ev, i64 %timer) #4 !dbg !227329 {
define internal i64 @ngx_http_log_script_write(%struct.ngx_http_request_s.5283* %r, %struct.ngx_http_log_script_t* %script, i8** %name, i8* %buf, i64 %len) #0 !dbg !227376 {
define dso_local i64 @ngx_http_read_client_request_body(%struct.ngx_http_request_s.4754* %r, void (%struct.ngx_http_request_s.4754*)* %post_handler) #0 !dbg !227585 {
define internal i64 @ngx_http_test_expect(%struct.ngx_http_request_s.4754* %r) #0 !dbg !231067 {
define internal i64 @ngx_http_request_body_filter(%struct.ngx_http_request_s.4754* %r, %struct.ngx_chain_s* %in) #0 !dbg !231127 {
define internal void @ngx_http_read_client_request_body_handler(%struct.ngx_http_request_s.4754* %r) #0 !dbg !231150 {
define internal i64 @ngx_http_do_read_client_request_body(%struct.ngx_http_request_s.4754* %r) #0 !dbg !231182 {
define internal void @ngx_event_del_timer.1363(%struct.ngx_event_s* %ev) #4 !dbg !231513 {
define internal void @ngx_event_add_timer.1365(%struct.ngx_event_s* %ev, i64 %timer) #4 !dbg !231523 {
define internal i64 @ngx_http_request_body_chunked_filter(%struct.ngx_http_request_s.4754* %r, %struct.ngx_chain_s* %in) #0 !dbg !231570 {
define internal i64 @ngx_http_request_body_length_filter(%struct.ngx_http_request_s.4754* %r, %struct.ngx_chain_s* %in) #0 !dbg !231866 {
define dso_local i64 @ngx_http_read_unbuffered_request_body(%struct.ngx_http_request_s.4754* %r) #0 !dbg !232044 {
define dso_local i64 @ngx_http_discard_request_body(%struct.ngx_http_request_s.4754* %r) #0 !dbg !232076 {
define internal i64 @ngx_http_discard_request_body_filter(%struct.ngx_http_request_s.4754* %r, %struct.ngx_buf_s* %b) #0 !dbg !232204 {
define internal i64 @ngx_http_read_discarded_request_body(%struct.ngx_http_request_s.4754* %r) #0 !dbg !232381 {
define dso_local void @ngx_http_discarded_request_body_handler(%struct.ngx_http_request_s.4754* %r) #0 !dbg !232475 {
define dso_local i64 @ngx_http_request_body_save_filter(%struct.ngx_http_request_s.4754* %r, %struct.ngx_chain_s* %in) #0 !dbg !232598 {
define internal i64 @ngx_http_write_request_body(%struct.ngx_http_request_s.4754* %r) #0 !dbg !232717 {
define dso_local %struct.ngx_http_variable_s* @ngx_http_add_variable(%struct.ngx_conf_s.1429* %cf, %struct.ngx_str_t* %name, i64 %flags) #0 !dbg !232885 {
define internal %struct.ngx_http_variable_s* @ngx_http_add_prefix_variable(%struct.ngx_conf_s.1429* %cf, %struct.ngx_str_t* %name, i64 %flags) #0 !dbg !233137 {
define dso_local i64 @ngx_http_get_variable_index(%struct.ngx_conf_s.1429* %cf, %struct.ngx_str_t* %name) #0 !dbg !233277 {
define internal i64 @ngx_array_init.1382(%struct.ngx_array_t* %array, %struct.ngx_pool_s* %pool, i64 %n, i64 %size) #4 !dbg !233425 {
define dso_local %struct.ngx_variable_value_t* @ngx_http_get_indexed_variable(%struct.ngx_http_request_s.4754* %r, i64 %index) #0 !dbg !233468 {
define dso_local %struct.ngx_variable_value_t* @ngx_http_get_flushed_variable(%struct.ngx_http_request_s.4754* %r, i64 %index) #0 !dbg !233568 {
define dso_local %struct.ngx_variable_value_t* @ngx_http_get_variable(%struct.ngx_http_request_s.4754* %r, %struct.ngx_str_t* %name, i64 %key) #0 !dbg !233606 {
define dso_local i64 @ngx_http_variable_unknown_header(%struct.ngx_variable_value_t* %v, %struct.ngx_str_t* %var, %struct.ngx_list_part_s* %part, i64 %prefix) #0 !dbg !233773 {
define dso_local i8* @ngx_http_map_find(%struct.ngx_http_request_s.4754* %r, %struct.ngx_http_map_t* %map, %struct.ngx_str_t* %match) #0 !dbg !233939 {
define dso_local i64 @ngx_http_variables_add_core_vars(%struct.ngx_conf_s.1429* %cf) #0 !dbg !234003 {
define internal i64 @ngx_http_variable_header(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !234091 {
define internal i64 @ngx_http_variable_cookies(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !234137 {
define internal i64 @ngx_http_variable_content_length(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !234149 {
define internal i64 @ngx_http_variable_host(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !234249 {
define internal i64 @ngx_http_variable_binary_remote_addr(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !234305 {
define internal i64 @ngx_http_variable_remote_addr(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !234395 {
define internal i64 @ngx_http_variable_remote_port(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !234426 {
define internal i64 @ngx_http_variable_proxy_protocol_addr(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !234486 {
define internal i64 @ngx_http_variable_proxy_protocol_port(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !234517 {
define internal i64 @ngx_http_variable_server_addr(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !234576 {
define internal i64 @ngx_http_variable_server_port(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !234633 {
define internal i64 @ngx_http_variable_request(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !234701 {
define internal i64 @ngx_http_variable_scheme(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !234746 {
define internal i64 @ngx_http_variable_https(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !234792 {
define internal i64 @ngx_http_variable_request_line(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !234825 {
define internal i64 @ngx_http_variable_document_root(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !234919 {
define internal i64 @ngx_http_variable_realpath_root(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !235004 {
define internal void @ngx_http_variable_set_args(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !235106 {
define internal i64 @ngx_http_variable_is_args(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !235129 {
define internal i64 @ngx_http_variable_request_filename(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !235163 {
define internal i64 @ngx_http_variable_server_name(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !235202 {
define internal i64 @ngx_http_variable_request_method(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !235235 {
define internal i64 @ngx_http_variable_remote_user(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !235278 {
define internal i64 @ngx_http_variable_bytes_sent(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !235330 {
define internal i64 @ngx_http_variable_body_bytes_sent(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !235374 {
define internal i64 @ngx_http_variable_pipe(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !235432 {
define internal i64 @ngx_http_variable_request_completion(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !235457 {
define internal i64 @ngx_http_variable_request_body(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !235489 {
define internal i64 @ngx_http_variable_request_body_file(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !235642 {
define internal i64 @ngx_http_variable_request_length(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !235693 {
define internal i64 @ngx_http_variable_request_time(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !235736 {
define internal i64 @ngx_http_variable_request_id(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !235802 {
define internal i64 @ngx_http_variable_status(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !235865 {
define internal i64 @ngx_http_variable_sent_content_type(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !235938 {
define internal i64 @ngx_http_variable_sent_content_length(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !235981 {
define internal i64 @ngx_http_variable_sent_location(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !236068 {
define internal i64 @ngx_http_variable_sent_last_modified(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !236118 {
define internal i64 @ngx_http_variable_sent_connection(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !236205 {
define internal i64 @ngx_http_variable_sent_keep_alive(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !236255 {
define internal i64 @ngx_http_variable_sent_transfer_encoding(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !236317 {
define internal i64 @ngx_http_variable_headers(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !236350 {
define internal void @ngx_http_variable_request_set_size(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !236362 {
define internal i64 @ngx_http_variable_request_get_size(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !236405 {
define internal i64 @ngx_http_variable_connection(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !236455 {
define internal i64 @ngx_http_variable_connection_requests(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !236499 {
define internal i64 @ngx_http_variable_nginx_version(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !236543 {
define internal i64 @ngx_http_variable_hostname(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !236566 {
define internal i64 @ngx_http_variable_pid(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !236595 {
define internal i64 @ngx_http_variable_msec(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !236637 {
define internal i64 @ngx_http_variable_time_iso8601(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !236686 {
define internal i64 @ngx_http_variable_time_local(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !236727 {
define internal i64 @ngx_http_variable_tcpinfo(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !236768 {
define internal i64 @ngx_http_variable_unknown_header_in(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !236883 {
define internal i64 @ngx_http_variable_unknown_header_out(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !236899 {
define internal i64 @ngx_http_variable_unknown_trailer_out(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !236915 {
define internal i64 @ngx_http_variable_cookie(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !236931 {
define internal i64 @ngx_http_variable_argument(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !236989 {
define internal i64 @ngx_http_variable_headers_internal(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data, i8 zeroext %sep) #0 !dbg !237047 {
define dso_local i64 @ngx_http_variables_init_vars(%struct.ngx_conf_s.1429* %cf) #0 !dbg !237211 {
define dso_local void @ngx_http_script_flush_complex_value(%struct.ngx_http_request_s.4754* %r, %struct.ngx_http_complex_value_t* %val) #0 !dbg !237507 {
define dso_local i64 @ngx_http_complex_value(%struct.ngx_http_request_s.4754* %r, %struct.ngx_http_complex_value_t* %val, %struct.ngx_str_t* %value) #0 !dbg !237554 {
define dso_local i64 @ngx_http_compile_complex_value(%struct.ngx_http_compile_complex_value_t* %ccv) #0 !dbg !237649 {
define internal i64 @ngx_array_init.1490(%struct.ngx_array_t* %array, %struct.ngx_pool_s* %pool, i64 %n, i64 %size) #4 !dbg !237931 {
define dso_local i64 @ngx_http_script_compile(%struct.ngx_http_script_compile_t* %sc) #0 !dbg !237974 {
define internal i64 @ngx_http_script_init_arrays(%struct.ngx_http_script_compile_t* %sc) #0 !dbg !238260 {
define internal i64 @ngx_http_script_add_var_code(%struct.ngx_http_script_compile_t* %sc, %struct.ngx_str_t* %name) #0 !dbg !238367 {
define internal i64 @ngx_http_script_add_args_code(%struct.ngx_http_script_compile_t* %sc) #0 !dbg !238452 {
define internal i64 @ngx_http_script_add_copy_code(%struct.ngx_http_script_compile_t* %sc, %struct.ngx_str_t* %value, i64 %last) #0 !dbg !238488 {
define internal i64 @ngx_http_script_done(%struct.ngx_http_script_compile_t* %sc) #0 !dbg !238578 {
define internal i64 @ngx_http_script_add_full_name_code(%struct.ngx_http_script_compile_t* %sc) #0 !dbg !238661 {
define dso_local i8* @ngx_http_script_add_code(%struct.ngx_array_t* %codes, i64 %size, i8* %code) #0 !dbg !238709 {
define internal i64 @ngx_http_script_full_name_len_code(%struct.ngx_http_script_engine_t* %e) #0 !dbg !238761 {
define internal void @ngx_http_script_full_name_code(%struct.ngx_http_script_engine_t* %e) #0 !dbg !238782 {
define dso_local i64 @ngx_http_script_copy_len_code(%struct.ngx_http_script_engine_t* %e) #0 !dbg !238838 {
define dso_local void @ngx_http_script_copy_code(%struct.ngx_http_script_engine_t* %e) #0 !dbg !238853 {
define dso_local i64 @ngx_http_script_mark_args_code(%struct.ngx_http_script_engine_t* %e) #0 !dbg !238887 {
define dso_local void @ngx_http_script_start_args_code(%struct.ngx_http_script_engine_t* %e) #0 !dbg !238897 {
define dso_local i64 @ngx_http_script_copy_var_len_code(%struct.ngx_http_script_engine_t* %e) #0 !dbg !238912 {
define dso_local void @ngx_http_script_copy_var_code(%struct.ngx_http_script_engine_t* %e) #0 !dbg !238957 {
define dso_local i8* @ngx_http_set_complex_value_slot(%struct.ngx_conf_s.1429* %cf, %struct.ngx_command_s.1430* %cmd, i8* %conf) #0 !dbg !239014 {
define dso_local i64 @ngx_http_test_predicates(%struct.ngx_http_request_s.4754* %r, %struct.ngx_array_t* %predicates) #0 !dbg !239078 {
define dso_local i64 @ngx_http_test_required_predicates(%struct.ngx_http_request_s.4754* %r, %struct.ngx_array_t* %predicates) #0 !dbg !239139 {
define dso_local i8* @ngx_http_set_predicate_slot(%struct.ngx_conf_s.1429* %cf, %struct.ngx_command_s.1430* %cmd, i8* %conf) #0 !dbg !239198 {
define dso_local i64 @ngx_http_script_variables_count(%struct.ngx_str_t* %value) #0 !dbg !239292 {
define dso_local i8* @ngx_http_script_run(%struct.ngx_http_request_s.4754* %r, %struct.ngx_str_t* %value, i8* %code_lengths, i64 %len, i8* %code_values) #0 !dbg !239328 {
define dso_local void @ngx_http_script_flush_no_cacheable_variables(%struct.ngx_http_request_s.4754* %r, %struct.ngx_array_t* %indices) #0 !dbg !239498 {
define dso_local i8* @ngx_http_script_start_code(%struct.ngx_pool_s* %pool, %struct.ngx_array_t** %codes, i64 %size) #0 !dbg !239554 {
define dso_local void @ngx_http_script_return_code(%struct.ngx_http_script_engine_t* %e) #0 !dbg !239587 {
define dso_local void @ngx_http_script_break_code(%struct.ngx_http_script_engine_t* %e) #0 !dbg !239632 {
define dso_local void @ngx_http_script_if_code(%struct.ngx_http_script_engine_t* %e) #0 !dbg !239643 {
define dso_local void @ngx_http_script_equal_code(%struct.ngx_http_script_engine_t* %e) #0 !dbg !239696 {
define dso_local void @ngx_http_script_not_equal_code(%struct.ngx_http_script_engine_t* %e) #0 !dbg !239733 {
define dso_local void @ngx_http_script_file_code(%struct.ngx_http_script_engine_t* %e) #0 !dbg !239770 {
define dso_local void @ngx_http_script_complex_value_code(%struct.ngx_http_script_engine_t* %e) #0 !dbg !240000 {
define dso_local void @ngx_http_script_value_code(%struct.ngx_http_script_engine_t* %e) #0 !dbg !240104 {
define dso_local void @ngx_http_script_set_var_code(%struct.ngx_http_script_engine_t* %e) #0 !dbg !240133 {
define dso_local void @ngx_http_script_var_set_handler_code(%struct.ngx_http_script_engine_t* %e) #0 !dbg !240190 {
define dso_local void @ngx_http_script_var_code(%struct.ngx_http_script_engine_t* %e) #0 !dbg !240214 {
define dso_local void @ngx_http_script_nop_code(%struct.ngx_http_script_engine_t* %e) #0 !dbg !240256 {
define dso_local i64 @ngx_http_upstream_create(%struct.ngx_http_request_s.6001* %r) #0 !dbg !240263 {
define internal void @ngx_http_upstream_cleanup(i8* %data) #0 !dbg !240324 {
define internal void @ngx_http_upstream_finalize_request(%struct.ngx_http_request_s.6001* %r, %struct.ngx_http_upstream_s.5980* %u, i64 %rc) #0 !dbg !240335 {
define internal i64 @ngx_http_upstream_process_trailers(%struct.ngx_http_request_s.6001* %r, %struct.ngx_http_upstream_s.5980* %u) #0 !dbg !240693 {
define dso_local void @ngx_http_upstream_init(%struct.ngx_http_request_s.6001* %r) #0 !dbg !240790 {
define internal void @ngx_event_del_timer.1507(%struct.ngx_event_s* %ev) #4 !dbg !240834 {
define internal void @ngx_http_upstream_init_request(%struct.ngx_http_request_s.6001* %r) #0 !dbg !240844 {
define internal i64 @ngx_http_upstream_cache(%struct.ngx_http_request_s.6001* %r, %struct.ngx_http_upstream_s.5980* %u) #0 !dbg !241421 {
define internal i64 @ngx_http_upstream_cache_send(%struct.ngx_http_request_s.6001* %r, %struct.ngx_http_upstream_s.5980* %u) #0 !dbg !241713 {
define internal i64 @ngx_http_upstream_cache_background_update(%struct.ngx_http_request_s.6001* %r, %struct.ngx_http_upstream_s.5980* %u) #0 !dbg !241823 {
define internal void @ngx_http_upstream_rd_check_broken_connection(%struct.ngx_http_request_s.6001* %r) #0 !dbg !241867 {
define internal void @ngx_http_upstream_wr_check_broken_connection(%struct.ngx_http_request_s.6001* %r) #0 !dbg !241876 {
define internal i64 @ngx_http_upstream_set_local(%struct.ngx_http_request_s.6001* %r, %struct.ngx_http_upstream_s.5980* %u, %struct.ngx_http_upstream_local_t* %local) #0 !dbg !241885 {
define internal void @ngx_http_upstream_connect(%struct.ngx_http_request_s.6001* %r, %struct.ngx_http_upstream_s.5980* %u) #0 !dbg !241986 {
define internal void @ngx_http_upstream_resolve_handler(%struct.ngx_resolver_ctx_s* %ctx) #0 !dbg !242345 {
define internal void @ngx_http_upstream_next(%struct.ngx_http_request_s.6001* %r, %struct.ngx_http_upstream_s.5980* %u, i64 %ft_type) #0 !dbg !242450 {
define internal void @ngx_http_upstream_handler(%struct.ngx_event_s* %ev) #0 !dbg !242731 {
define internal void @ngx_http_upstream_send_request_handler(%struct.ngx_http_request_s.6001* %r, %struct.ngx_http_upstream_s.5980* %u) #0 !dbg !242786 {
define internal void @ngx_http_upstream_process_header(%struct.ngx_http_request_s.6001* %r, %struct.ngx_http_upstream_s.5980* %u) #0 !dbg !242841 {
define internal i64 @ngx_http_upstream_reinit(%struct.ngx_http_request_s.6001* %r, %struct.ngx_http_upstream_s.5980* %u) #0 !dbg !243155 {
define internal void @ngx_event_add_timer.1514(%struct.ngx_event_s* %ev, i64 %timer) #4 !dbg !243355 {
define internal void @ngx_http_upstream_ssl_init_connection(%struct.ngx_http_request_s.6001* %r, %struct.ngx_http_upstream_s.5980* %u, %struct.ngx_connection_s* %c) #0 !dbg !243402 {
define internal void @ngx_http_upstream_send_request(%struct.ngx_http_request_s.6001* %r, %struct.ngx_http_upstream_s.5980* %u, i64 %do_write) #0 !dbg !243546 {
define internal i64 @ngx_http_upstream_test_connect(%struct.ngx_connection_s* %c) #0 !dbg !243779 {
define internal i64 @ngx_http_upstream_send_request_body(%struct.ngx_http_request_s.6001* %r, %struct.ngx_http_upstream_s.5980* %u, i64 %do_write) #0 !dbg !243816 {
define internal void @ngx_http_upstream_dummy_handler(%struct.ngx_http_request_s.6001* %r, %struct.ngx_http_upstream_s.5980* %u) #0 !dbg !244056 {
define internal void @ngx_http_upstream_read_request_handler(%struct.ngx_http_request_s.6001* %r) #0 !dbg !244062 {
define internal i64 @ngx_http_upstream_ssl_name(%struct.ngx_http_request_s.6001* %r, %struct.ngx_http_upstream_s.5980* %u, %struct.ngx_connection_s* %c) #0 !dbg !244092 {
define internal void @ngx_http_upstream_ssl_save_session(%struct.ngx_connection_s* %c) #0 !dbg !244235 {
define internal void @ngx_http_upstream_ssl_handshake_handler(%struct.ngx_connection_s* %c) #0 !dbg !244267 {
define internal void @ngx_http_upstream_ssl_handshake(%struct.ngx_http_request_s.6001* %r, %struct.ngx_http_upstream_s.5980* %u, %struct.ngx_connection_s* %c) #0 !dbg !244293 {
define internal i8* @ngx_strlchr.1521(i8* %p, i8* %last, i8 zeroext %c) #4 !dbg !244367 {
define internal i64 @ngx_list_init.1523(%struct.ngx_list_t* %list, %struct.ngx_pool_s* %pool, i64 %n, i64 %size) #4 !dbg !244393 {
define internal i64 @ngx_http_upstream_test_next(%struct.ngx_http_request_s.6001* %r, %struct.ngx_http_upstream_s.5980* %u) #0 !dbg !244449 {
define internal i64 @ngx_http_upstream_intercept_errors(%struct.ngx_http_request_s.6001* %r, %struct.ngx_http_upstream_s.5980* %u) #0 !dbg !244751 {
define internal i64 @ngx_http_upstream_process_headers(%struct.ngx_http_request_s.6001* %r, %struct.ngx_http_upstream_s.5980* %u) #0 !dbg !244934 {
define internal void @ngx_http_upstream_send_response(%struct.ngx_http_request_s.6001* %r, %struct.ngx_http_upstream_s.5980* %u) #0 !dbg !245288 {
define internal void @ngx_http_upstream_upgrade(%struct.ngx_http_request_s.6001* %r, %struct.ngx_http_upstream_s.5980* %u) #0 !dbg !246110 {
define internal i64 @ngx_http_upstream_non_buffered_filter_init(i8* %data) #0 !dbg !246222 {
define internal i64 @ngx_http_upstream_non_buffered_filter(i8* %data, i64 %bytes) #0 !dbg !246226 {
define internal void @ngx_http_upstream_process_non_buffered_upstream(%struct.ngx_http_request_s.6001* %r, %struct.ngx_http_upstream_s.5980* %u) #0 !dbg !246329 {
define internal void @ngx_http_upstream_process_non_buffered_downstream(%struct.ngx_http_request_s.6001* %r) #0 !dbg !246359 {
define internal i64 @ngx_http_upstream_output_filter(i8* %data, %struct.ngx_chain_s* %chain) #0 !dbg !246398 {
define internal void @ngx_http_upstream_process_upstream(%struct.ngx_http_request_s.6001* %r, %struct.ngx_http_upstream_s.5980* %u) #0 !dbg !246426 {
define internal void @ngx_http_upstream_process_downstream(%struct.ngx_http_request_s.6001* %r) #0 !dbg !246493 {
define internal void @ngx_http_upstream_process_request(%struct.ngx_http_request_s.6001* %r, %struct.ngx_http_upstream_s.5980* %u) #0 !dbg !246567 {
define internal void @ngx_http_upstream_store(%struct.ngx_http_request_s.6001* %r, %struct.ngx_http_upstream_s.5980* %u) #0 !dbg !246764 {
define internal void @ngx_http_upstream_process_non_buffered_request(%struct.ngx_http_request_s.6001* %r, i64 %do_write) #0 !dbg !246954 {
define internal void @ngx_http_upstream_upgraded_read_upstream(%struct.ngx_http_request_s.6001* %r, %struct.ngx_http_upstream_s.5980* %u) #0 !dbg !247251 {
define internal void @ngx_http_upstream_upgraded_write_upstream(%struct.ngx_http_request_s.6001* %r, %struct.ngx_http_upstream_s.5980* %u) #0 !dbg !247259 {
define internal void @ngx_http_upstream_upgraded_read_downstream(%struct.ngx_http_request_s.6001* %r) #0 !dbg !247267 {
define internal void @ngx_http_upstream_upgraded_write_downstream(%struct.ngx_http_request_s.6001* %r) #0 !dbg !247273 {
define internal void @ngx_http_upstream_process_upgraded(%struct.ngx_http_request_s.6001* %r, i64 %from_upstream, i64 %do_write) #0 !dbg !247279 {
define internal i64 @ngx_http_upstream_copy_header_line(%struct.ngx_http_request_s.6001* %r, %struct.ngx_table_elt_t* %h, i64 %offset) #0 !dbg !247750 {
define internal i8* @ngx_http_upstream(%struct.ngx_conf_s.1429* %cf, %struct.ngx_command_s.1430* %cmd, i8* %dummy) #0 !dbg !247792 {
define internal i8* @ngx_http_upstream_server(%struct.ngx_conf_s.1429* %cf, %struct.ngx_command_s.1430* %cmd, i8* %conf) #0 !dbg !248064 {
define dso_local %struct.ngx_http_upstream_srv_conf_s.5959* @ngx_http_upstream_add(%struct.ngx_conf_s.1429* %cf, %struct.ngx_url_t* %u, i64 %flags) #0 !dbg !248354 {
define internal i64 @ngx_http_upstream_add_variables(%struct.ngx_conf_s.1429* %cf) #0 !dbg !248632 {
define internal i8* @ngx_http_upstream_create_main_conf(%struct.ngx_conf_s.1429* %cf) #0 !dbg !248679 {
define internal i8* @ngx_http_upstream_init_main_conf(%struct.ngx_conf_s.1429* %cf, i8* %conf) #0 !dbg !248707 {
define internal i64 @ngx_array_init.1549(%struct.ngx_array_t* %array, %struct.ngx_pool_s* %pool, i64 %n, i64 %size) #4 !dbg !248863 {
define internal i64 @ngx_http_upstream_process_header_line(%struct.ngx_http_request_s.6001* %r, %struct.ngx_table_elt_t* %h, i64 %offset) #0 !dbg !248906 {
define internal i64 @ngx_http_upstream_copy_content_type(%struct.ngx_http_request_s.6001* %r, %struct.ngx_table_elt_t* %h, i64 %offset) #0 !dbg !248934 {
define internal i64 @ngx_http_upstream_process_content_length(%struct.ngx_http_request_s.6001* %r, %struct.ngx_table_elt_t* %h, i64 %offset) #0 !dbg !249057 {
define internal i64 @ngx_http_upstream_ignore_header_line(%struct.ngx_http_request_s.6001* %r, %struct.ngx_table_elt_t* %h, i64 %offset) #0 !dbg !249086 {
define internal i64 @ngx_http_upstream_process_last_modified(%struct.ngx_http_request_s.6001* %r, %struct.ngx_table_elt_t* %h, i64 %offset) #0 !dbg !249094 {
define internal i64 @ngx_http_upstream_copy_last_modified(%struct.ngx_http_request_s.6001* %r, %struct.ngx_table_elt_t* %h, i64 %offset) #0 !dbg !249123 {
define internal i64 @ngx_http_upstream_rewrite_location(%struct.ngx_http_request_s.6001* %r, %struct.ngx_table_elt_t* %h, i64 %offset) #0 !dbg !249161 {
define internal i64 @ngx_http_upstream_rewrite_refresh(%struct.ngx_http_request_s.6001* %r, %struct.ngx_table_elt_t* %h, i64 %offset) #0 !dbg !249232 {
define internal i64 @ngx_http_upstream_process_set_cookie(%struct.ngx_http_request_s.6001* %r, %struct.ngx_table_elt_t* %h, i64 %offset) #0 !dbg !249315 {
define internal i64 @ngx_http_upstream_rewrite_set_cookie(%struct.ngx_http_request_s.6001* %r, %struct.ngx_table_elt_t* %h, i64 %offset) #0 !dbg !249376 {
define internal i64 @ngx_http_upstream_process_cache_control(%struct.ngx_http_request_s.6001* %r, %struct.ngx_table_elt_t* %h, i64 %offset) #0 !dbg !249423 {
define internal i64 @ngx_http_upstream_copy_multi_header_lines(%struct.ngx_http_request_s.6001* %r, %struct.ngx_table_elt_t* %h, i64 %offset) #0 !dbg !249768 {
define internal i64 @ngx_http_upstream_process_expires(%struct.ngx_http_request_s.6001* %r, %struct.ngx_table_elt_t* %h, i64 %offset) #0 !dbg !249832 {
define internal i64 @ngx_http_upstream_copy_allow_ranges(%struct.ngx_http_request_s.6001* %r, %struct.ngx_table_elt_t* %h, i64 %offset) #0 !dbg !249903 {
define internal i64 @ngx_http_upstream_process_connection(%struct.ngx_http_request_s.6001* %r, %struct.ngx_table_elt_t* %h, i64 %offset) #0 !dbg !249963 {
define internal i64 @ngx_http_upstream_process_vary(%struct.ngx_http_request_s.6001* %r, %struct.ngx_table_elt_t* %h, i64 %offset) #0 !dbg !249998 {
define internal i64 @ngx_http_upstream_process_accel_expires(%struct.ngx_http_request_s.6001* %r, %struct.ngx_table_elt_t* %h, i64 %offset) #0 !dbg !250058 {
define internal i64 @ngx_http_upstream_process_limit_rate(%struct.ngx_http_request_s.6001* %r, %struct.ngx_table_elt_t* %h, i64 %offset) #0 !dbg !250148 {
define internal i64 @ngx_http_upstream_process_buffering(%struct.ngx_http_request_s.6001* %r, %struct.ngx_table_elt_t* %h, i64 %offset) #0 !dbg !250195 {
define internal i64 @ngx_http_upstream_process_charset(%struct.ngx_http_request_s.6001* %r, %struct.ngx_table_elt_t* %h, i64 %offset) #0 !dbg !250283 {
define internal i64 @ngx_http_upstream_process_transfer_encoding(%struct.ngx_http_request_s.6001* %r, %struct.ngx_table_elt_t* %h, i64 %offset) #0 !dbg !250307 {
define internal i64 @ngx_http_upstream_addr_variable(%struct.ngx_http_request_s.6001* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !250342 {
define internal i64 @ngx_http_upstream_status_variable(%struct.ngx_http_request_s.6001* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !250496 {
define internal i64 @ngx_http_upstream_response_time_variable(%struct.ngx_http_request_s.6001* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !250630 {
define internal i64 @ngx_http_upstream_response_length_variable(%struct.ngx_http_request_s.6001* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !250793 {
define internal i64 @ngx_http_upstream_cache_status(%struct.ngx_http_request_s.6001* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !250942 {
define internal i64 @ngx_http_upstream_cache_last_modified(%struct.ngx_http_request_s.6001* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !250994 {
define internal i64 @ngx_http_upstream_cache_etag(%struct.ngx_http_request_s.6001* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !251063 {
define internal i64 @ngx_http_upstream_header_variable(%struct.ngx_http_request_s.6001* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !251121 {
define internal i64 @ngx_http_upstream_trailer_variable(%struct.ngx_http_request_s.6001* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !251149 {
define internal i64 @ngx_http_upstream_cookie_variable(%struct.ngx_http_request_s.6001* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !251177 {
define internal void @ngx_http_upstream_check_broken_connection(%struct.ngx_http_request_s.6001* %r, %struct.ngx_event_s* %ev) #0 !dbg !251246 {
define internal i64 @ngx_http_upstream_cache_get(%struct.ngx_http_request_s.6001* %r, %struct.ngx_http_upstream_s.5980* %u, %struct.ngx_http_file_cache_s** %cache) #0 !dbg !251484 {
define internal i64 @ngx_http_upstream_cache_check_range(%struct.ngx_http_request_s.6001* %r, %struct.ngx_http_upstream_s.5980* %u) #0 !dbg !251583 {
define dso_local i8* @ngx_http_upstream_bind_set_slot(%struct.ngx_conf_s.1429* %cf, %struct.ngx_command_s.1430* %cmd, i8* %conf) #0 !dbg !251687 {
define dso_local i8* @ngx_http_upstream_param_set_slot(%struct.ngx_conf_s.1429* %cf, %struct.ngx_command_s.1430* %cmd, i8* %conf) #0 !dbg !251866 {
define dso_local i64 @ngx_http_upstream_hide_headers_hash(%struct.ngx_conf_s.1429* %cf, %struct.ngx_http_upstream_conf_t.5965* %conf, %struct.ngx_http_upstream_conf_t.5965* %prev, %struct.ngx_str_t* %default_hide_headers, %struct.ngx_hash_init_t* %hash) #0 !dbg !251959 {
define dso_local i64 @ngx_http_upstream_init_round_robin(%struct.ngx_conf_s.6125* %cf, %struct.ngx_http_upstream_srv_conf_s.6187* %us) #0 !dbg !252290 {
define dso_local i64 @ngx_http_upstream_init_round_robin_peer(%struct.ngx_http_request_s.6185* %r, %struct.ngx_http_upstream_srv_conf_s.6187* %us) #0 !dbg !256174 {
define dso_local i64 @ngx_http_upstream_get_round_robin_peer(%struct.ngx_peer_connection_s* %pc, i8* %data) #0 !dbg !256316 {
define dso_local void @ngx_http_upstream_free_round_robin_peer(%struct.ngx_peer_connection_s* %pc, i8* %data, i64 %state) #0 !dbg !256456 {
define dso_local i64 @ngx_http_upstream_set_round_robin_peer_session(%struct.ngx_peer_connection_s* %pc, i8* %data) #0 !dbg !256567 {
define dso_local void @ngx_http_upstream_save_round_robin_peer_session(%struct.ngx_peer_connection_s* %pc, i8* %data) #0 !dbg !256594 {
define internal %struct.ngx_http_upstream_rr_peer_s* @ngx_http_upstream_get_peer(%struct.ngx_http_upstream_rr_peer_data_t* %rrp) #0 !dbg !256636 {
define dso_local i64 @ngx_http_upstream_create_round_robin_peer(%struct.ngx_http_request_s.6185* %r, %struct.ngx_http_upstream_resolved_t* %ur) #0 !dbg !256815 {
define internal i64 @ngx_http_upstream_empty_set_session(%struct.ngx_peer_connection_s* %pc, i8* %data) #0 !dbg !257140 {
define internal void @ngx_http_upstream_empty_save_session(%struct.ngx_peer_connection_s* %pc, i8* %data) #0 !dbg !257146 {
define dso_local i64 @ngx_http_file_cache_new(%struct.ngx_http_request_s.6001* %r) #0 !dbg !257152 {
define internal i64 @ngx_array_init.1632(%struct.ngx_array_t* %array, %struct.ngx_pool_s* %pool, i64 %n, i64 %size) #4 !dbg !257195 {
define dso_local i64 @ngx_http_file_cache_create(%struct.ngx_http_request_s.6001* %r) #0 !dbg !257238 {
define internal void @ngx_http_file_cache_cleanup(i8* %data) #0 !dbg !257289 {
define internal i64 @ngx_http_file_cache_exists(%struct.ngx_http_file_cache_s* %cache, %struct.ngx_http_cache_s* %c) #0 !dbg !257316 {
define internal i64 @ngx_http_file_cache_name(%struct.ngx_http_request_s.6001* %r, %struct.ngx_path_t* %path) #0 !dbg !257513 {
define internal %struct.ngx_http_file_cache_node_t* @ngx_http_file_cache_lookup(%struct.ngx_http_file_cache_s* %cache, i8* %key) #0 !dbg !257603 {
define internal void @ngx_http_file_cache_set_watermark(%struct.ngx_http_file_cache_s* %cache) #0 !dbg !257682 {
define internal i64 @ngx_http_file_cache_forced_expire(%struct.ngx_http_file_cache_s* %cache) #0 !dbg !257700 {
define internal void @ngx_http_file_cache_delete(%struct.ngx_http_file_cache_s* %cache, %struct.ngx_queue_s* %q, i8* %name) #0 !dbg !257841 {
define dso_local void @ngx_http_file_cache_free(%struct.ngx_http_cache_s* %c, %struct.ngx_temp_file_t* %tf) #0 !dbg !257966 {
define internal void @ngx_event_del_timer.1641(%struct.ngx_event_s* %ev) #4 !dbg !258120 {
define dso_local void @ngx_http_file_cache_create_key(%struct.ngx_http_request_s.6001* %r) #0 !dbg !258130 {
define internal void @ngx_crc32_update.1644(i32* %crc, i8* %p, i64 %len) #4 !dbg !258210 {
define dso_local i64 @ngx_http_file_cache_open(%struct.ngx_http_request_s.6001* %r) #0 !dbg !258241 {
define internal i64 @ngx_http_file_cache_read(%struct.ngx_http_request_s.6001* %r, %struct.ngx_http_cache_s* %c) #0 !dbg !258514 {
define internal i64 @ngx_http_file_cache_lock(%struct.ngx_http_request_s.6001* %r, %struct.ngx_http_cache_s* %c) #0 !dbg !258854 {
define internal void @ngx_http_file_cache_lock_wait_handler(%struct.ngx_event_s* %ev) #0 !dbg !258985 {
define internal void @ngx_event_add_timer.1648(%struct.ngx_event_s* %ev, i64 %timer) #4 !dbg !259006 {
define internal void @ngx_http_file_cache_lock_wait(%struct.ngx_http_request_s.6001* %r, %struct.ngx_http_cache_s* %c) #0 !dbg !259053 {
define internal i64 @ngx_http_file_cache_aio_read(%struct.ngx_http_request_s.6001* %r, %struct.ngx_http_cache_s* %c) #0 !dbg !259139 {
define internal void @ngx_http_file_cache_vary(%struct.ngx_http_request_s.6001* %r, i8* %vary, i64 %len, i8* %hash) #0 !dbg !259155 {
define internal i64 @ngx_http_file_cache_reopen(%struct.ngx_http_request_s.6001* %r, %struct.ngx_http_cache_s* %c) #0 !dbg !259254 {
define internal void @ngx_http_file_cache_vary_header(%struct.ngx_http_request_s.6001* %r, %struct.ngx_md5_t* %md5, %struct.ngx_str_t* %name) #0 !dbg !259311 {
define dso_local i64 @ngx_http_file_cache_set_header(%struct.ngx_http_request_s.6001* %r, i8* %buf) #0 !dbg !259553 {
define internal i64 @ngx_http_file_cache_update_variant(%struct.ngx_http_request_s.6001* %r, %struct.ngx_http_cache_s* %c) #0 !dbg !259720 {
define dso_local void @ngx_http_file_cache_update(%struct.ngx_http_request_s.6001* %r, %struct.ngx_temp_file_t* %tf) #0 !dbg !259790 {
define dso_local void @ngx_http_file_cache_update_header(%struct.ngx_http_request_s.6001* %r) #0 !dbg !259948 {
define dso_local i64 @ngx_http_cache_send(%struct.ngx_http_request_s.6001* %r) #0 !dbg !260172 {
define dso_local i64 @ngx_http_file_cache_valid(%struct.ngx_array_t* %cache_valid, i64 %status) #0 !dbg !260299 {
define dso_local i8* @ngx_http_file_cache_set_slot(%struct.ngx_conf_s.1429* %cf, %struct.ngx_command_s.1430* %cmd, i8* %conf) #0 !dbg !260365 {
define internal i64 @ngx_http_file_cache_manager(i8* %data) #0 !dbg !261074 {
define internal void @ngx_http_file_cache_loader(i8* %data) #0 !dbg !261202 {
define internal i64 @ngx_http_file_cache_init(%struct.ngx_shm_zone_s* %shm_zone, i8* %data) #0 !dbg !261297 {
define internal void @ngx_http_file_cache_rbtree_insert_value(%struct.ngx_rbtree_node_s* %temp, %struct.ngx_rbtree_node_s* %node, %struct.ngx_rbtree_node_s* %sentinel) #0 !dbg !261514 {
define internal i64 @ngx_http_file_cache_manage_file(%struct.ngx_tree_ctx_s.6368* %ctx, %struct.ngx_str_t* %path) #0 !dbg !261603 {
define internal i64 @ngx_http_file_cache_manage_directory(%struct.ngx_tree_ctx_s.6368* %ctx, %struct.ngx_str_t* %path) #0 !dbg !261657 {
define internal i64 @ngx_http_file_cache_noop(%struct.ngx_tree_ctx_s.6368* %ctx, %struct.ngx_str_t* %path) #0 !dbg !261674 {
define internal i64 @ngx_http_file_cache_delete_file(%struct.ngx_tree_ctx_s.6368* %ctx, %struct.ngx_str_t* %path) #0 !dbg !261680 {
define internal i64 @ngx_http_file_cache_add_file(%struct.ngx_tree_ctx_s.6368* %ctx, %struct.ngx_str_t* %name) #0 !dbg !261695 {
define internal void @ngx_http_file_cache_loader_sleep(%struct.ngx_http_file_cache_s* %cache) #0 !dbg !261800 {
define internal i64 @ngx_http_file_cache_add(%struct.ngx_http_file_cache_s* %cache, %struct.ngx_http_cache_s* %c) #0 !dbg !261813 {
define internal i64 @ngx_http_file_cache_expire(%struct.ngx_http_file_cache_s* %cache) #0 !dbg !261911 {
define dso_local i8* @ngx_http_file_cache_valid_set_slot(%struct.ngx_conf_s.1429* %cf, %struct.ngx_command_s.1430* %cmd, i8* %conf) #0 !dbg !61545 {
define dso_local i64 @ngx_http_write_filter(%struct.ngx_http_request_s.6543* %r, %struct.ngx_chain_s* %in) #0 !dbg !262253 {
define internal void @ngx_event_add_timer.1723(%struct.ngx_event_s* %ev, i64 %timer) #4 !dbg !263975 {
define internal void @ngx_event_del_timer.1724(%struct.ngx_event_s* %ev) #4 !dbg !264022 {
define internal i64 @ngx_http_write_filter_init(%struct.ngx_conf_s.1429* %cf) #0 !dbg !264032 {
define internal i64 @ngx_http_header_filter_init(%struct.ngx_conf_s.1429* %cf) #0 !dbg !264037 {
define internal i64 @ngx_http_header_filter(%struct.ngx_http_request_s.6716* %r) #0 !dbg !264042 {
define internal i64 @ngx_http_chunked_filter_init(%struct.ngx_conf_s.1429* %cf) #0 !dbg !266270 {
define internal i64 @ngx_http_chunked_header_filter(%struct.ngx_http_request_s.6889* %r) #0 !dbg !266280 {
define internal i64 @ngx_http_chunked_body_filter(%struct.ngx_http_request_s.6889* %r, %struct.ngx_chain_s* %in) #0 !dbg !266385 {
define internal %struct.ngx_chain_s* @ngx_http_chunked_create_trailers(%struct.ngx_http_request_s.6889* %r, %struct.ngx_http_chunked_filter_ctx_t* %ctx) #0 !dbg !266655 {
define internal i64 @ngx_http_range_header_filter_init(%struct.ngx_conf_s.1429* %cf) #0 !dbg !266906 {
define internal i64 @ngx_http_range_header_filter(%struct.ngx_http_request_s.7062* %r) #0 !dbg !266913 {
define internal i64 @ngx_http_range_parse(%struct.ngx_http_request_s.7062* %r, %struct.ngx_http_range_filter_ctx_t* %ctx, i64 %ranges) #0 !dbg !267158 {
define internal i64 @ngx_http_range_singlepart_header(%struct.ngx_http_request_s.7062* %r, %struct.ngx_http_range_filter_ctx_t* %ctx) #0 !dbg !267517 {
define internal i64 @ngx_http_range_multipart_header(%struct.ngx_http_request_s.7062* %r, %struct.ngx_http_range_filter_ctx_t* %ctx) #0 !dbg !267639 {
define internal i64 @ngx_http_range_not_satisfiable(%struct.ngx_http_request_s.7062* %r) #0 !dbg !267932 {
define internal i64 @ngx_http_range_body_filter_init(%struct.ngx_conf_s.1429* %cf) #0 !dbg !268005 {
define internal i64 @ngx_http_range_body_filter(%struct.ngx_http_request_s.7062* %r, %struct.ngx_chain_s* %in) #0 !dbg !268012 {
define internal i64 @ngx_http_range_singlepart_body(%struct.ngx_http_request_s.7062* %r, %struct.ngx_http_range_filter_ctx_t* %ctx, %struct.ngx_chain_s* %in) #0 !dbg !268074 {
define internal i64 @ngx_http_range_test_overlapped(%struct.ngx_http_request_s.7062* %r, %struct.ngx_http_range_filter_ctx_t* %ctx, %struct.ngx_chain_s* %in) #0 !dbg !268276 {
define internal i64 @ngx_http_range_multipart_body(%struct.ngx_http_request_s.7062* %r, %struct.ngx_http_range_filter_ctx_t* %ctx, %struct.ngx_chain_s* %in) #0 !dbg !268361 {
define internal i64 @ngx_array_init.1806(%struct.ngx_array_t* %array, %struct.ngx_pool_s* %pool, i64 %n, i64 %size) #4 !dbg !268675 {
define internal i8* @ngx_http_headers_expires(%struct.ngx_conf_s.1429* %cf, %struct.ngx_command_s.1430* %cmd, i8* %conf) #0 !dbg !268718 {
define internal i8* @ngx_http_headers_add(%struct.ngx_conf_s.1429* %cf, %struct.ngx_command_s.1430* %cmd, i8* %conf) #0 !dbg !268848 {
define internal i64 @ngx_http_add_header(%struct.ngx_http_request_s.7235* %r, %struct.ngx_http_header_val_s* %hv, %struct.ngx_str_t* %value) #0 !dbg !269023 {
define internal i64 @ngx_http_add_multi_header_lines(%struct.ngx_http_request_s.7235* %r, %struct.ngx_http_header_val_s* %hv, %struct.ngx_str_t* %value) #0 !dbg !269062 {
define internal i64 @ngx_http_set_last_modified(%struct.ngx_http_request_s.7235* %r, %struct.ngx_http_header_val_s* %hv, %struct.ngx_str_t* %value) #0 !dbg !269142 {
define internal i64 @ngx_http_set_response_header(%struct.ngx_http_request_s.7235* %r, %struct.ngx_http_header_val_s* %hv, %struct.ngx_str_t* %value) #0 !dbg !269172 {
define internal i64 @ngx_array_init.1817(%struct.ngx_array_t* %array, %struct.ngx_pool_s* %pool, i64 %n, i64 %size) #4 !dbg !269247 {
define internal i64 @ngx_http_parse_expires(%struct.ngx_str_t* %value, i32* %expires, i64* %expires_time, i8** %err) #0 !dbg !269290 {
define internal i64 @ngx_http_headers_filter_init(%struct.ngx_conf_s.1429* %cf) #0 !dbg !269449 {
define internal i8* @ngx_http_headers_create_conf(%struct.ngx_conf_s.1429* %cf) #0 !dbg !269459 {
define internal i8* @ngx_http_headers_merge_conf(%struct.ngx_conf_s.1429* %cf, i8* %parent, i8* %child) #0 !dbg !269480 {
define internal i64 @ngx_http_headers_filter(%struct.ngx_http_request_s.7235* %r) #0 !dbg !269550 {
define internal i64 @ngx_http_trailers_filter(%struct.ngx_http_request_s.7235* %r, %struct.ngx_chain_s* %in) #0 !dbg !269716 {
define internal i64 @ngx_http_set_expires(%struct.ngx_http_request_s.7235* %r, %struct.ngx_http_headers_conf_t* %conf) #0 !dbg !269868 {
define internal i64 @ngx_http_copy_filter_init(%struct.ngx_conf_s.1429* %cf) #0 !dbg !270181 {
define internal i8* @ngx_http_copy_filter_create_conf(%struct.ngx_conf_s.1429* %cf) #0 !dbg !270188 {
define internal i8* @ngx_http_copy_filter_merge_conf(%struct.ngx_conf_s.1429* %cf, i8* %parent, i8* %child) #0 !dbg !270215 {
define internal i64 @ngx_http_copy_filter(%struct.ngx_http_request_s.7410* %r, %struct.ngx_chain_s* %in) #0 !dbg !270240 {
define internal i64 @ngx_http_not_modified_filter_init(%struct.ngx_conf_s.1429* %cf) #0 !dbg !270361 {
define internal i64 @ngx_http_not_modified_header_filter(%struct.ngx_http_request_s.7583* %r) #0 !dbg !270368 {
define internal i64 @ngx_http_test_if_unmodified(%struct.ngx_http_request_s.7583* %r) #0 !dbg !270500 {
define internal i64 @ngx_http_test_if_match(%struct.ngx_http_request_s.7583* %r, %struct.ngx_table_elt_t* %header, i64 %weak) #0 !dbg !270538 {
define internal i64 @ngx_http_test_if_modified(%struct.ngx_http_request_s.7583* %r) #0 !dbg !270724 {
define internal i64 @ngx_http_static_init(%struct.ngx_conf_s.1429* %cf) #0 !dbg !270784 {
define internal i64 @ngx_http_static_handler(%struct.ngx_http_request_s.7756* %r) #0 !dbg !272058 {
define internal i8* @ngx_http_index_set_index(%struct.ngx_conf_s.1429* %cf, %struct.ngx_command_s.1430* %cmd, i8* %conf) #0 !dbg !272504 {
define internal i64 @ngx_http_index_init(%struct.ngx_conf_s.1429* %cf) #0 !dbg !272726 {
define internal i8* @ngx_http_index_create_loc_conf(%struct.ngx_conf_s.1429* %cf) #0 !dbg !272804 {
define internal i8* @ngx_http_index_merge_loc_conf(%struct.ngx_conf_s.1429* %cf, i8* %parent, i8* %child) #0 !dbg !272828 {
define internal i64 @ngx_http_index_handler(%struct.ngx_http_request_s.7935* %r) #0 !dbg !272909 {
define internal i64 @ngx_http_index_error(%struct.ngx_http_request_s.7935* %r, %struct.ngx_http_core_loc_conf_s.7925* %clcf, i8* %file, i32 %err) #0 !dbg !273318 {
define internal i64 @ngx_http_index_test_dir(%struct.ngx_http_request_s.7935* %r, %struct.ngx_http_core_loc_conf_s.7925* %clcf, i8* %path, i8* %last) #0 !dbg !273349 {
define internal i8* @ngx_http_try_files(%struct.ngx_conf_s.1429* %cf, %struct.ngx_command_s.1430* %cmd, i8* %conf) #0 !dbg !273477 {
define internal i64 @ngx_http_try_files_init(%struct.ngx_conf_s.1429* %cf) #0 !dbg !273732 {
define internal i8* @ngx_http_try_files_create_loc_conf(%struct.ngx_conf_s.1429* %cf) #0 !dbg !273810 {
define internal i64 @ngx_http_try_files_handler(%struct.ngx_http_request_s.8116* %r) #0 !dbg !273828 {
define internal i8* @ngx_http_ssl_enable(%struct.ngx_conf_s.1429* %cf, %struct.ngx_command_s.1430* %cmd, i8* %conf) #0 !dbg !274269 {
define internal i8* @ngx_http_ssl_password_file(%struct.ngx_conf_s.1429* %cf, %struct.ngx_command_s.1430* %cmd, i8* %conf) #0 !dbg !274343 {
define internal i8* @ngx_http_ssl_session_cache(%struct.ngx_conf_s.1429* %cf, %struct.ngx_command_s.1430* %cmd, i8* %conf) #0 !dbg !274381 {
define internal i64 @ngx_http_ssl_add_variables(%struct.ngx_conf_s.1429* %cf) #0 !dbg !274609 {
define internal i64 @ngx_http_ssl_init(%struct.ngx_conf_s.1429* %cf) #0 !dbg !274656 {
define internal i8* @ngx_http_ssl_create_srv_conf(%struct.ngx_conf_s.1429* %cf) #0 !dbg !274928 {
define internal i8* @ngx_http_ssl_merge_srv_conf(%struct.ngx_conf_s.1429* %cf, i8* %parent, i8* %child) #0 !dbg !274991 {
define internal i32 @ngx_http_ssl_alpn_select(%struct.ssl_st* %ssl_conn, i8** %out, i8* %outlen, i8* %in, i32 %inlen, i8* %arg) #0 !dbg !275535 {
define internal i32 @ngx_http_ssl_npn_advertised(%struct.ssl_st* %ssl_conn, i8** %out, i32* %outlen, i8* %arg) #0 !dbg !275569 {
define internal i64 @ngx_http_ssl_compile_certificates(%struct.ngx_conf_s.1429* %cf, %struct.ngx_http_ssl_srv_conf_t* %conf) #0 !dbg !275583 {
define internal i64 @ngx_http_ssl_static_variable(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !275768 {
define internal i64 @ngx_http_ssl_variable(%struct.ngx_http_request_s.4754* %r, %struct.ngx_variable_value_t* %v, i64 %data) #0 !dbg !275829 {
define dso_local %struct.ssl_method_st.8503* @SSLv23_method() #0 {
define internal %struct.ssl_method_st.8503* @ssl23_get_method(i32 %ver) #0 {
define dso_local %struct.ssl_method_st.8503* @SSLv23_server_method() #0 {
define dso_local i32 @ssl23_accept(%struct.ssl_st.8501* %s) #0 {
define internal %struct.ssl_method_st.8503* @ssl23_get_server_method(i32 %ver) #0 {
define dso_local i32 @ssl23_get_client_hello(%struct.ssl_st.8501* %s) #0 {
define dso_local %struct.ssl_method_st.8503* @SSLv23_client_method() #0 {
define dso_local i32 @ssl23_connect(%struct.ssl_st.8501* %s) #0 {
define internal %struct.ssl_method_st.8503* @ssl23_get_client_method(i32 %ver) #0 {
define internal i32 @ssl23_client_hello(%struct.ssl_st.8501* %s) #0 {
define internal i32 @ssl23_get_server_hello(%struct.ssl_st.8501* %s) #0 {
define internal i32 @ssl23_no_ssl2_ciphers(%struct.ssl_st.8501* %s) #0 {
define dso_local i32 @ssl_fill_hello_random(%struct.ssl_st.8501* %s, i32 %server, i8* %result, i32 %len) #0 {
define dso_local i64 @ssl23_default_timeout() #0 {
define dso_local i32 @ssl23_num_ciphers() #0 {
define dso_local %struct.ssl_cipher_st* @ssl23_get_cipher(i32 %u) #0 {
define dso_local %struct.ssl_cipher_st* @ssl23_get_cipher_by_char(i8* %p) #0 {
define dso_local i32 @ssl23_put_cipher_by_char(%struct.ssl_cipher_st* %c, i8* %p) #0 {
define dso_local i32 @ssl23_read(%struct.ssl_st.8765* %s, i8* %buf, i32 %len) #0 {
define dso_local i32 @ssl23_peek(%struct.ssl_st.8765* %s, i8* %buf, i32 %len) #0 {
define dso_local i32 @ssl23_write(%struct.ssl_st.8765* %s, i8* %buf, i32 %len) #0 {
define dso_local i32 @ssl23_write_bytes(%struct.ssl_st.8853* %s) #0 {
define dso_local i32 @ssl23_read_bytes(%struct.ssl_st.8853* %s, i32 %n) #0 {
define dso_local %struct.ssl_method_st.8503* @TLSv1_2_method() #0 {
define internal %struct.ssl_method_st.8503* @tls1_get_method(i32 %ver) #0 {
define dso_local %struct.ssl_method_st.8503* @TLSv1_1_method() #0 {
define dso_local %struct.ssl_method_st.8503* @TLSv1_method() #0 {
define dso_local %struct.ssl_method_st.8503* @TLSv1_2_server_method() #0 {
define internal %struct.ssl_method_st.8503* @tls1_get_server_method(i32 %ver) #0 {
define dso_local %struct.ssl_method_st.8503* @TLSv1_1_server_method() #0 {
define dso_local %struct.ssl_method_st.8503* @TLSv1_server_method() #0 {
define dso_local %struct.ssl_method_st.8503* @TLSv1_2_client_method() #0 {
define internal %struct.ssl_method_st.8503* @tls1_get_client_method(i32 %ver) #0 {
define dso_local %struct.ssl_method_st.8503* @TLSv1_1_client_method() #0 {
define dso_local %struct.ssl_method_st.8503* @TLSv1_client_method() #0 {
define dso_local i64 @tls1_default_timeout() #0 {
define dso_local i32 @tls1_new(%struct.ssl_st.9204* %s) #0 {
define dso_local void @tls1_free(%struct.ssl_st.9204* %s) #0 {
define dso_local void @tls1_clear(%struct.ssl_st.9204* %s) #0 {
define dso_local i32 @tls1_ec_curve_id2nid(i32 %curve_id) #0 {
define dso_local i32 @tls1_ec_nid2curve_id(i32 %nid) #0 {
define dso_local i32 @tls1_check_curve(%struct.ssl_st.9204* %s, i8* %p, i64 %len) #0 {
define internal i32 @tls1_get_curvelist(%struct.ssl_st.9204* %s, i32 %sess, i8** %pcurves, i64* %num_curves) #0 {
define dso_local i32 @tls1_shared_curve(%struct.ssl_st.9204* %s, i32 %nmatch) #0 {
define dso_local i32 @tls1_set_curves(i8** %pext, i64* %pextlen, i32* %curves, i64 %ncurves) #0 {
define dso_local i32 @tls1_set_curves_list(i8** %pext, i64* %pextlen, i8* %str) #0 {
define internal i32 @nid_cb(i8* %elem, i32 %len, i8* %arg) #0 {
define dso_local i32 @tls1_check_ec_tmp_key(%struct.ssl_st.9204* %s, i64 %cid) #0 {
define internal i32 @tls1_check_ec_key(%struct.ssl_st.9204* %s, i8* %curve_id, i8* %comp_id) #0 {
define internal i32 @tls1_set_ec_id(i8* %curve_id, i8* %comp_id, %struct.ec_key_st* %ec) #0 {
define dso_local i64 @tls12_get_psigalgs(%struct.ssl_st.9204* %s, i32 %sent, i8** %psigs) #0 {
define dso_local i32 @tls12_check_peer_sigalg(%struct.env_md_st** %pmd, %struct.ssl_st.9204* %s, i8* %sig, %struct.evp_pkey_st* %pkey) #0 {
define dso_local i32 @tls12_get_sigid(%struct.evp_pkey_st* %pk) #0 {
define dso_local %struct.env_md_st* @tls12_get_hash(i8 zeroext %hash_alg) #0 {
define internal i32 @tls12_find_id(i32 %nid, %struct.ngx_in_cidr_t* %table, i64 %tlen) #0 {
define dso_local void @ssl_set_client_disabled(%struct.ssl_st.9204* %s) #0 {
define dso_local i8* @ssl_add_clienthello_tlsext(%struct.ssl_st.9204* %s, i8* %buf, i8* %limit, i32* %al) #0 {
define internal void @tls1_get_formatlist(%struct.ssl_st.9204* %s, i8** %pformats, i64* %num_formats) #0 {
define dso_local i8* @ssl_add_serverhello_tlsext(%struct.ssl_st.9204* %s, i8* %buf, i8* %limit, i32* %al) #0 {
define dso_local i32 @ssl_parse_clienthello_tlsext(%struct.ssl_st.9204* %s, i8** %p, i8* %limit) #0 {
define internal i32 @ssl_scan_clienthello_tlsext(%struct.ssl_st.9204* %s, i8** %p, i8* %limit, i32* %al) #0 {
define internal i32 @ssl_check_clienthello_tlsext_early(%struct.ssl_st.9204* %s) #0 {
define internal i32 @ssl_scan_clienthello_custom_tlsext(%struct.ssl_st.9204* %s, i8* %data, i8* %limit, i32* %al) #0 {
define internal void @ssl_check_for_safari(%struct.ssl_st.9204* %s, i8* %data, i8* %limit) #0 {
define dso_local i32 @tls1_save_sigalgs(%struct.ssl_st.9204* %s, i8* %data, i32 %dsize) #0 {
define internal i32 @tls1_alpn_handle_client_hello(%struct.ssl_st.9204* %s, i8* %data, i32 %data_len, i32* %al) #0 {
define dso_local i32 @ssl_prepare_clienthello_tlsext(%struct.ssl_st.9204* %s) #0 {
define dso_local i32 @ssl_prepare_serverhello_tlsext(%struct.ssl_st.9204* %s) #0 {
define dso_local i32 @tls1_set_server_sigalgs(%struct.ssl_st.9204* %s) #0 {
define dso_local i32 @tls1_process_sigalgs(%struct.ssl_st.9204* %s) #0 {
define internal i32 @tls1_set_shared_sigalgs(%struct.ssl_st.9204* %s) #0 {
define internal i32 @tls12_get_pkey_idx(i8 zeroext %sig_alg) #0 {
define internal i32 @tls12_get_hash_nid(i8 zeroext %hash_alg) #0 {
define internal i32 @tls12_find_nid(i32 %id, %struct.ngx_in_cidr_t* %table, i64 %tlen) #0 {
define internal i32 @tls12_do_shared_sigalgs(%struct.tls_sigalgs_st* %shsig, i8* %pref, i64 %preflen, i8* %allow, i64 %allowlen) #0 {
define internal void @tls1_lookup_sigalg(i32* %phash_nid, i32* %psign_nid, i32* %psignhash_nid, i8* %data) #0 {
define dso_local i32 @ssl_check_clienthello_tlsext_late(%struct.ssl_st.9204* %s, i32* %al) #0 {
define internal i32 @tls1_alpn_handle_client_hello_late(%struct.ssl_st.9204* %s, i32* %al) #0 {
define dso_local i32 @ssl_check_serverhello_tlsext(%struct.ssl_st.9204* %s) #0 {
define dso_local i32 @ssl_parse_serverhello_tlsext(%struct.ssl_st.9204* %s, i8** %p, i8* %d, i32 %n) #0 {
define internal i32 @ssl_scan_serverhello_tlsext(%struct.ssl_st.9204* %s, i8** %p, i8* %d, i32 %n, i32* %al) #0 {
define internal signext i8 @ssl_next_proto_validate(i8* %d, i32 %len) #0 {
define dso_local i32 @tls1_process_ticket(%struct.ssl_st.9204* %s, i8* %session_id, i32 %len, i8* %limit, %struct.ssl_session_st** %ret) #0 {
define internal i32 @tls_decrypt_ticket(%struct.ssl_st.9204* %s, i8* %etick, i32 %eticklen, i8* %sess_id, i32 %sesslen, %struct.ssl_session_st** %psess) #0 {
define dso_local i32 @tls12_get_sigandhash(i8* %p, %struct.evp_pkey_st* %pk, %struct.env_md_st* %md) #0 {
define dso_local i32 @SSL_get_sigalgs(%struct.ssl_st.9204* %s, i32 %idx, i32* %psign, i32* %phash, i32* %psignhash, i8* %rsig, i8* %rhash) #0 {
define dso_local i32 @SSL_get_shared_sigalgs(%struct.ssl_st.9204* %s, i32 %idx, i32* %psign, i32* %phash, i32* %psignhash, i8* %rsig, i8* %rhash) #0 {
define dso_local i32 @tls1_process_heartbeat(%struct.ssl_st.9204* %s) #0 {
define dso_local i32 @tls1_heartbeat(%struct.ssl_st.9204* %s) #0 {
define dso_local i32 @tls1_set_sigalgs_list(%struct.cert_st.9173* %c, i8* %str, i32 %client) #0 {
define internal i32 @sig_cb(i8* %elem, i32 %len, i8* %arg) #0 {
define dso_local i32 @tls1_set_sigalgs(%struct.cert_st.9173* %c, i32* %psig_nids, i64 %salglen, i32 %client) #0 {
define dso_local i32 @tls1_check_chain(%struct.ssl_st.9204* %s, %struct.x509_st* %x, %struct.evp_pkey_st* %pk, %struct.stack_st_SSL_CIPHER* %chain, i32 %idx) #0 {
define internal i32 @tls1_check_sig_alg(%struct.cert_st.9173* %c, %struct.x509_st* %x, i32 %default_nid) #0 {
define internal i32 @tls1_check_cert_param(%struct.ssl_st.9204* %s, %struct.x509_st* %x, i32 %set_ee_md) #0 {
define internal i32 @ssl_check_ca_name(%struct.stack_st_SSL_CIPHER* %names, %struct.x509_st* %x) #0 {
define dso_local void @tls1_set_cert_validity(%struct.ssl_st.9204* %s) #0 {
define dso_local i32 @SSL_check_chain(%struct.ssl_st.9204* %s, %struct.x509_st* %x, %struct.evp_pkey_st* %pk, %struct.stack_st_SSL_CIPHER* %chain) #0 {
define dso_local i32 @tls1_change_cipher_state(%struct.ssl_st.9204* %s, i32 %which) #0 {
define internal i32 @tls1_PRF(i64 %digest_mask, i8* %seed1, i32 %seed1_len, i8* %seed2, i32 %seed2_len, i8* %seed3, i32 %seed3_len, i8* %seed4, i32 %seed4_len, i8* %seed5, i32 %seed5_len, i8* %sec, i32 %slen, i8* %out1, i8* %out2, i32 %olen) #0 {
define internal i32 @tls1_P_hash(%struct.env_md_st* %md, i8* %sec, i32 %sec_len, i8* %seed1, i32 %seed1_len, i8* %seed2, i32 %seed2_len, i8* %seed3, i32 %seed3_len, i8* %seed4, i32 %seed4_len, i8* %seed5, i32 %seed5_len, i8* %out, i32 %olen) #0 {
define dso_local i32 @tls1_setup_key_block(%struct.ssl_st.9204* %s) #0 {
define internal i32 @tls1_generate_key_block(%struct.ssl_st.9204* %s, i8* %km, i8* %tmp, i32 %num) #0 {
define dso_local i32 @tls1_enc(%struct.ssl_st.9204* %s, i32 %send) #0 {
define dso_local i32 @tls1_cert_verify_mac(%struct.ssl_st.9204* %s, i32 %md_nid, i8* %out) #0 {
define dso_local i32 @tls1_final_finish_mac(%struct.ssl_st.9204* %s, i8* %str, i32 %slen, i8* %out) #0 {
define dso_local i32 @tls1_mac(%struct.ssl_st.9204* %ssl, i8* %md, i32 %send) #0 {
define dso_local i32 @tls1_generate_master_secret(%struct.ssl_st.9204* %s, i8* %out, i8* %p, i32 %len) #0 {
define dso_local i32 @tls1_export_keying_material(%struct.ssl_st.9204* %s, i8* %out, i64 %olen, i8* %label, i64 %llen, i8* %context, i64 %contextlen, i32 %use_context) #0 {
define dso_local i32 @tls1_alert_code(i32 %code) #0 {
define dso_local void @custom_ext_init(%struct.custom_ext_methods.9382* %exts) #0 {
define dso_local i32 @custom_ext_parse(%struct.ssl_st.9380* %s, i32 %server, i32 %ext_type, i8* %ext_data, i64 %ext_size, i32* %al) #0 {
define internal %struct.custom_ext_method.9381* @custom_ext_find(%struct.custom_ext_methods.9382* %exts, i32 %ext_type) #0 {
define dso_local i32 @custom_ext_add(%struct.ssl_st.9380* %s, i32 %server, i8** %pret, i8* %limit, i32* %al) #0 {
define dso_local i32 @custom_exts_copy_flags(%struct.custom_ext_methods.9382* %dst, %struct.custom_ext_methods.9382* %src) #0 {
define dso_local i32 @custom_exts_copy(%struct.custom_ext_methods.9382* %dst, %struct.custom_ext_methods.9382* %src) #0 {
define dso_local void @custom_exts_free(%struct.custom_ext_methods.9382* %exts) #0 {
define dso_local i32 @SSL_CTX_add_client_custom_ext(%struct.ssl_ctx_st.9356* %ctx, i32 %ext_type, i32 (%struct.ssl_st.9380*, i32, i8**, i64*, i32*, i8*)* %add_cb, void (%struct.ssl_st.9380*, i32, i8*, i8*)* %free_cb, i8* %add_arg, i32 (%struct.ssl_st.9380*, i32, i8*, i64, i32*, i8*)* %parse_cb, i8* %parse_arg) #0 {
define internal i32 @custom_ext_meth_add(%struct.custom_ext_methods.9382* %exts, i32 %ext_type, i32 (%struct.ssl_st.9380*, i32, i8**, i64*, i32*, i8*)* %add_cb, void (%struct.ssl_st.9380*, i32, i8*, i8*)* %free_cb, i8* %add_arg, i32 (%struct.ssl_st.9380*, i32, i8*, i64, i32*, i8*)* %parse_cb, i8* %parse_arg) #0 {
define dso_local i32 @SSL_extension_supported(i32 %ext_type) #0 {
define dso_local i32 @SSL_CTX_add_server_custom_ext(%struct.ssl_ctx_st.9356* %ctx, i32 %ext_type, i32 (%struct.ssl_st.9380*, i32, i8**, i64*, i32*, i8*)* %add_cb, void (%struct.ssl_st.9380*, i32, i8*, i8*)* %free_cb, i8* %add_arg, i32 (%struct.ssl_st.9380*, i32, i8*, i64, i32*, i8*)* %parse_cb, i8* %parse_arg) #0 {
define dso_local i32 @SSL_CTX_set_tlsext_use_srtp(%struct.ssl_ctx_st.8498* %ctx, i8* %profiles) #0 {
define internal i32 @ssl_ctx_make_profiles(i8* %profiles_string, %struct.stack_st_SSL_CIPHER** %out) #0 {
define internal i32 @find_profile_by_name(i8* %profile_name, %struct.srtp_protection_profile_st** %pptr, i32 %len) #0 {
define dso_local i32 @SSL_set_tlsext_use_srtp(%struct.ssl_st.8501* %s, i8* %profiles) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @SSL_get_srtp_profiles(%struct.ssl_st.8501* %s) #0 {
define dso_local %struct.srtp_protection_profile_st* @SSL_get_selected_srtp_profile(%struct.ssl_st.8501* %s) #0 {
define dso_local i32 @ssl_add_clienthello_use_srtp_ext(%struct.ssl_st.8501* %s, i8* %p, i32* %len, i32 %maxlen) #0 {
define dso_local i32 @ssl_parse_clienthello_use_srtp_ext(%struct.ssl_st.8501* %s, i8* %d, i32 %len, i32* %al) #0 {
define dso_local i32 @ssl_add_serverhello_use_srtp_ext(%struct.ssl_st.8501* %s, i8* %p, i32* %len, i32 %maxlen) #0 {
define dso_local i32 @ssl_parse_serverhello_use_srtp_ext(%struct.ssl_st.8501* %s, i8* %d, i32 %len, i32* %al) #0 {
define dso_local i32 @ssl_undefined_function(%struct.ssl_st.9204* %s) #0 {
define dso_local i32 @SSL_clear(%struct.ssl_st.9204* %s) #0 {
define dso_local void @ssl_clear_cipher_ctx(%struct.ssl_st.9204* %s) #0 {
define dso_local void @ssl_clear_hash_ctx(%struct.env_md_ctx_st** %hash) #0 {
define dso_local i32 @SSL_CTX_set_ssl_version(%struct.ssl_ctx_st.9180* %ctx, %struct.ssl_method_st.9182* %meth) #0 {
define dso_local %struct.ssl_st.9204* @SSL_new(%struct.ssl_ctx_st.9180* %ctx) #0 {
define dso_local void @SSL_free(%struct.ssl_st.9204* %s) #0 {
define dso_local void @SSL_CTX_free(%struct.ssl_ctx_st.9180* %a) #0 {
define internal void @ssl_buf_freelist_free(%struct.ssl3_buf_freelist_st* %list) #0 {
define dso_local i32 @SSL_CTX_set_session_id_context(%struct.ssl_ctx_st.9180* %ctx, i8* %sid_ctx, i32 %sid_ctx_len) #0 {
define dso_local i32 @SSL_set_session_id_context(%struct.ssl_st.9204* %ssl, i8* %sid_ctx, i32 %sid_ctx_len) #0 {
define dso_local i32 @SSL_CTX_set_generate_session_id(%struct.ssl_ctx_st.9180* %ctx, i32 (%struct.ssl_st.9204*, i8*, i32*)* %cb) #0 {
define dso_local i32 @SSL_set_generate_session_id(%struct.ssl_st.9204* %ssl, i32 (%struct.ssl_st.9204*, i8*, i32*)* %cb) #0 {
define dso_local i32 @SSL_has_matching_session_id(%struct.ssl_st.9204* %ssl, i8* %id, i32 %id_len) #0 {
define dso_local i32 @SSL_CTX_set_purpose(%struct.ssl_ctx_st.9180* %s, i32 %purpose) #0 {
define dso_local i32 @SSL_set_purpose(%struct.ssl_st.9204* %s, i32 %purpose) #0 {
define dso_local i32 @SSL_CTX_set_trust(%struct.ssl_ctx_st.9180* %s, i32 %trust) #0 {
define dso_local i32 @SSL_set_trust(%struct.ssl_st.9204* %s, i32 %trust) #0 {
define dso_local i32 @SSL_CTX_set1_param(%struct.ssl_ctx_st.9180* %ctx, %struct.X509_VERIFY_PARAM_st* %vpm) #0 {
define dso_local i32 @SSL_set1_param(%struct.ssl_st.9204* %ssl, %struct.X509_VERIFY_PARAM_st* %vpm) #0 {
define dso_local %struct.X509_VERIFY_PARAM_st* @SSL_CTX_get0_param(%struct.ssl_ctx_st.9180* %ctx) #0 {
define dso_local %struct.X509_VERIFY_PARAM_st* @SSL_get0_param(%struct.ssl_st.9204* %ssl) #0 {
define dso_local void @SSL_certs_clear(%struct.ssl_st.9204* %s) #0 {
define dso_local void @SSL_set_bio(%struct.ssl_st.9204* %s, %struct.bio_st* %rbio, %struct.bio_st* %wbio) #0 {
define dso_local %struct.bio_st* @SSL_get_rbio(%struct.ssl_st.9204* %s) #0 {
define dso_local %struct.bio_st* @SSL_get_wbio(%struct.ssl_st.9204* %s) #0 {
define dso_local i32 @SSL_get_fd(%struct.ssl_st.9204* %s) #0 {
define dso_local i32 @SSL_get_rfd(%struct.ssl_st.9204* %s) #0 {
define dso_local i32 @SSL_get_wfd(%struct.ssl_st.9204* %s) #0 {
define dso_local i32 @SSL_set_fd(%struct.ssl_st.9204* %s, i32 %fd) #0 {
define dso_local i32 @SSL_set_wfd(%struct.ssl_st.9204* %s, i32 %fd) #0 {
define dso_local i32 @SSL_set_rfd(%struct.ssl_st.9204* %s, i32 %fd) #0 {
define dso_local i64 @SSL_get_finished(%struct.ssl_st.9204* %s, i8* %buf, i64 %count) #0 {
define dso_local i64 @SSL_get_peer_finished(%struct.ssl_st.9204* %s, i8* %buf, i64 %count) #0 {
define dso_local i32 @SSL_get_verify_mode(%struct.ssl_st.9204* %s) #0 {
define dso_local i32 @SSL_get_verify_depth(%struct.ssl_st.9204* %s) #0 {
define dso_local i32 (i32, %struct.x509_store_ctx_st*)* @SSL_get_verify_callback(%struct.ssl_st.9204* %s) #0 {
define dso_local i32 @SSL_CTX_get_verify_mode(%struct.ssl_ctx_st.9180* %ctx) #0 {
define dso_local i32 @SSL_CTX_get_verify_depth(%struct.ssl_ctx_st.9180* %ctx) #0 {
define dso_local i32 (i32, %struct.x509_store_ctx_st*)* @SSL_CTX_get_verify_callback(%struct.ssl_ctx_st.9180* %ctx) #0 {
define dso_local void @SSL_set_verify(%struct.ssl_st.9204* %s, i32 %mode, i32 (i32, %struct.x509_store_ctx_st*)* %callback) #0 {
define dso_local void @SSL_set_verify_depth(%struct.ssl_st.9204* %s, i32 %depth) #0 {
define dso_local void @SSL_set_read_ahead(%struct.ssl_st.9204* %s, i32 %yes) #0 {
define dso_local i32 @SSL_get_read_ahead(%struct.ssl_st.9204* %s) #0 {
define dso_local i32 @SSL_pending(%struct.ssl_st.9204* %s) #0 {
define dso_local %struct.x509_st* @SSL_get_peer_certificate(%struct.ssl_st.9204* %s) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @SSL_get_peer_cert_chain(%struct.ssl_st.9204* %s) #0 {
define dso_local void @SSL_copy_session_id(%struct.ssl_st.9204* %t, %struct.ssl_st.9204* %f) #0 {
define dso_local i32 @SSL_CTX_check_private_key(%struct.ssl_ctx_st.9180* %ctx) #0 {
define dso_local i32 @SSL_check_private_key(%struct.ssl_st.9204* %ssl) #0 {
define dso_local i32 @SSL_accept(%struct.ssl_st.9204* %s) #0 {
define dso_local void @SSL_set_accept_state(%struct.ssl_st.9204* %s) #0 {
define dso_local i32 @SSL_connect(%struct.ssl_st.9204* %s) #0 {
define dso_local void @SSL_set_connect_state(%struct.ssl_st.9204* %s) #0 {
define dso_local i64 @SSL_get_default_timeout(%struct.ssl_st.9204* %s) #0 {
define dso_local i32 @SSL_read(%struct.ssl_st.9204* %s, i8* %buf, i32 %num) #0 {
define dso_local i32 @SSL_peek(%struct.ssl_st.9204* %s, i8* %buf, i32 %num) #0 {
define dso_local i32 @SSL_write(%struct.ssl_st.9204* %s, i8* %buf, i32 %num) #0 {
define dso_local i32 @SSL_shutdown(%struct.ssl_st.9204* %s) #0 {
define dso_local i32 @SSL_state(%struct.ssl_st.9204* %ssl) #0 {
define dso_local i32 @SSL_renegotiate(%struct.ssl_st.9204* %s) #0 {
define dso_local i32 @SSL_renegotiate_abbreviated(%struct.ssl_st.9204* %s) #0 {
define dso_local i32 @SSL_renegotiate_pending(%struct.ssl_st.9204* %s) #0 {
define dso_local i64 @SSL_ctrl(%struct.ssl_st.9204* %s, i32 %cmd, i64 %larg, i8* %parg) #0 {
define dso_local i64 @SSL_callback_ctrl(%struct.ssl_st.9204* %s, i32 %cmd, void ()* %fp) #0 {
define dso_local %struct.lhash_st_SSL_SESSION* @SSL_CTX_sessions(%struct.ssl_ctx_st.9180* %ctx) #0 {
define dso_local i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st.9180* %ctx, i32 %cmd, i64 %larg, i8* %parg) #0 {
define dso_local i64 @SSL_CTX_callback_ctrl(%struct.ssl_ctx_st.9180* %ctx, i32 %cmd, void ()* %fp) #0 {
define dso_local i32 @ssl_cipher_id_cmp(%struct.ssl_cipher_st* %a, %struct.ssl_cipher_st* %b) #0 {
define dso_local i32 @ssl_cipher_ptr_id_cmp(%struct.ssl_cipher_st** %ap, %struct.ssl_cipher_st** %bp) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @SSL_get_ciphers(%struct.ssl_st.9204* %s) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @ssl_get_ciphers_by_id(%struct.ssl_st.9204* %s) #0 {
define dso_local i8* @SSL_get_cipher_list(%struct.ssl_st.9204* %s, i32 %n) #0 {
define dso_local i32 @SSL_CTX_set_cipher_list(%struct.ssl_ctx_st.9180* %ctx, i8* %str) #0 {
define dso_local i32 @SSL_set_cipher_list(%struct.ssl_st.9204* %s, i8* %str) #0 {
define dso_local i8* @SSL_get_shared_ciphers(%struct.ssl_st.9204* %s, i8* %buf, i32 %size) #0 {
define dso_local i32 @ssl_cipher_list_to_bytes(%struct.ssl_st.9204* %s, %struct.stack_st_SSL_CIPHER* %sk, i8* %p, i32 (%struct.ssl_cipher_st*, i8*)* %put_cb) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @ssl_bytes_to_cipher_list(%struct.ssl_st.9204* %s, i8* %p, i32 %num, %struct.stack_st_SSL_CIPHER** %skp) #0 {
define dso_local i8* @SSL_get_servername(%struct.ssl_st.9204* %s, i32 %type) #0 {
define dso_local i32 @SSL_get_servername_type(%struct.ssl_st.9204* %s) #0 {
define dso_local i32 @SSL_select_next_proto(i8** %out, i8* %outlen, i8* %server, i32 %server_len, i8* %client, i32 %client_len) #0 {
define dso_local void @SSL_get0_next_proto_negotiated(%struct.ssl_st.9204* %s, i8** %data, i32* %len) #0 {
define dso_local void @SSL_CTX_set_next_protos_advertised_cb(%struct.ssl_ctx_st.9180* %ctx, i32 (%struct.ssl_st.9204*, i8**, i32*, i8*)* %cb, i8* %arg) #0 {
define dso_local void @SSL_CTX_set_next_proto_select_cb(%struct.ssl_ctx_st.9180* %ctx, i32 (%struct.ssl_st.9204*, i8**, i8*, i8*, i32, i8*)* %cb, i8* %arg) #0 {
define dso_local i32 @SSL_CTX_set_alpn_protos(%struct.ssl_ctx_st.9180* %ctx, i8* %protos, i32 %protos_len) #0 {
define dso_local i32 @SSL_set_alpn_protos(%struct.ssl_st.9204* %ssl, i8* %protos, i32 %protos_len) #0 {
define dso_local void @SSL_CTX_set_alpn_select_cb(%struct.ssl_ctx_st.9180* %ctx, i32 (%struct.ssl_st.9204*, i8**, i8*, i8*, i32, i8*)* %cb, i8* %arg) #0 {
define dso_local void @SSL_get0_alpn_selected(%struct.ssl_st.9204* %ssl, i8** %data, i32* %len) #0 {
define dso_local i32 @SSL_export_keying_material(%struct.ssl_st.9204* %s, i8* %out, i64 %olen, i8* %label, i64 %llen, i8* %context, i64 %contextlen, i32 %use_context) #0 {
define dso_local %struct.ssl_ctx_st.9180* @SSL_CTX_new(%struct.ssl_method_st.9182* %meth) #0 {
define internal i64 @ssl_session_LHASH_HASH(i8* %arg) #0 {
define internal i32 @ssl_session_LHASH_COMP(i8* %arg1, i8* %arg2) #0 {
define internal i32 @ssl_session_cmp(%struct.ssl_session_st* %a, %struct.ssl_session_st* %b) #0 {
define internal i64 @ssl_session_hash(%struct.ssl_session_st* %a) #0 {
define dso_local void @SSL_CTX_set_default_passwd_cb(%struct.ssl_ctx_st.9180* %ctx, i32 (i8*, i32, i32, i8*)* %cb) #0 {
define dso_local void @SSL_CTX_set_default_passwd_cb_userdata(%struct.ssl_ctx_st.9180* %ctx, i8* %u) #0 {
define dso_local void @SSL_CTX_set_cert_verify_callback(%struct.ssl_ctx_st.9180* %ctx, i32 (%struct.x509_store_ctx_st*, i8*)* %cb, i8* %arg) #0 {
define dso_local void @SSL_CTX_set_verify(%struct.ssl_ctx_st.9180* %ctx, i32 %mode, i32 (i32, %struct.x509_store_ctx_st*)* %cb) #0 {
define dso_local void @SSL_CTX_set_verify_depth(%struct.ssl_ctx_st.9180* %ctx, i32 %depth) #0 {
define dso_local void @SSL_CTX_set_cert_cb(%struct.ssl_ctx_st.9180* %c, i32 (%struct.ssl_st.9204*, i8*)* %cb, i8* %arg) #0 {
define dso_local void @SSL_set_cert_cb(%struct.ssl_st.9204* %s, i32 (%struct.ssl_st.9204*, i8*)* %cb, i8* %arg) #0 {
define dso_local void @ssl_set_cert_masks(%struct.cert_st.9173* %c, %struct.ssl_cipher_st* %cipher) #0 {
define dso_local i32 @ssl_check_srvr_ecc_cert_and_alg(%struct.x509_st* %x, %struct.ssl_st.9204* %s) #0 {
define dso_local %struct.cert_pkey_st* @ssl_get_server_send_pkey(%struct.ssl_st.9204* %s) #0 {
define internal i32 @ssl_get_server_cert_index(%struct.ssl_st.9204* %s) #0 {
define dso_local %struct.evp_pkey_st* @ssl_get_sign_pkey(%struct.ssl_st.9204* %s, %struct.ssl_cipher_st* %cipher, %struct.env_md_st** %pmd) #0 {
define dso_local i32 @ssl_get_server_cert_serverinfo(%struct.ssl_st.9204* %s, i8** %serverinfo, i64* %serverinfo_length) #0 {
define dso_local void @ssl_update_cache(%struct.ssl_st.9204* %s, i32 %mode) #0 {
define dso_local %struct.ssl_method_st.9182* @SSL_CTX_get_ssl_method(%struct.ssl_ctx_st.9180* %ctx) #0 {
define dso_local %struct.ssl_method_st.9182* @SSL_get_ssl_method(%struct.ssl_st.9204* %s) #0 {
define dso_local i32 @SSL_set_ssl_method(%struct.ssl_st.9204* %s, %struct.ssl_method_st.9182* %meth) #0 {
define dso_local i32 @SSL_get_error(%struct.ssl_st.9204* %s, i32 %i) #0 {
define dso_local i32 @SSL_want(%struct.ssl_st.9204* %s) #0 {
define dso_local i32 @SSL_do_handshake(%struct.ssl_st.9204* %s) #0 {
define dso_local i32 @ssl_undefined_void_function() #0 {
define dso_local i32 @ssl_undefined_const_function(%struct.ssl_st.9204* %s) #0 {
define dso_local %struct.ssl_method_st.9182* @ssl_bad_method(i32 %ver) #0 {
define dso_local i8* @SSL_get_version(%struct.ssl_st.9204* %s) #0 {
define dso_local %struct.ssl_st.9204* @SSL_dup(%struct.ssl_st.9204* %s) #0 {
define dso_local %struct.ssl_ctx_st.9180* @SSL_get_SSL_CTX(%struct.ssl_st.9204* %ssl) #0 {
define dso_local void (%struct.ssl_st.9204*, i32, i32)* @SSL_get_info_callback(%struct.ssl_st.9204* %ssl) #0 {
define dso_local void @SSL_set_info_callback(%struct.ssl_st.9204* %ssl, void (%struct.ssl_st.9204*, i32, i32)* %cb) #0 {
define dso_local %struct.x509_st* @SSL_get_certificate(%struct.ssl_st.9204* %s) #0 {
define dso_local %struct.evp_pkey_st* @SSL_get_privatekey(%struct.ssl_st.9204* %s) #0 {
define dso_local %struct.x509_st* @SSL_CTX_get0_certificate(%struct.ssl_ctx_st.9180* %ctx) #0 {
define dso_local %struct.evp_pkey_st* @SSL_CTX_get0_privatekey(%struct.ssl_ctx_st.9180* %ctx) #0 {
define dso_local %struct.ssl_cipher_st* @SSL_get_current_cipher(%struct.ssl_st.9204* %s) #0 {
define dso_local %struct.comp_method_st* @SSL_get_current_compression(%struct.ssl_st.9204* %s) #0 {
define dso_local %struct.comp_method_st* @SSL_get_current_expansion(%struct.ssl_st.9204* %s) #0 {
define dso_local i32 @ssl_init_wbio_buffer(%struct.ssl_st.9204* %s, i32 %push) #0 {
define dso_local void @ssl_free_wbio_buffer(%struct.ssl_st.9204* %s) #0 {
define dso_local void @SSL_CTX_set_quiet_shutdown(%struct.ssl_ctx_st.9180* %ctx, i32 %mode) #0 {
define dso_local i32 @SSL_CTX_get_quiet_shutdown(%struct.ssl_ctx_st.9180* %ctx) #0 {
define dso_local void @SSL_set_quiet_shutdown(%struct.ssl_st.9204* %s, i32 %mode) #0 {
define dso_local i32 @SSL_get_quiet_shutdown(%struct.ssl_st.9204* %s) #0 {
define dso_local void @SSL_set_shutdown(%struct.ssl_st.9204* %s, i32 %mode) #0 {
define dso_local i32 @SSL_get_shutdown(%struct.ssl_st.9204* %s) #0 {
define dso_local i32 @SSL_version(%struct.ssl_st.9204* %s) #0 {
define dso_local %struct.ssl_ctx_st.9180* @SSL_set_SSL_CTX(%struct.ssl_st.9204* %ssl, %struct.ssl_ctx_st.9180* %ctx) #0 {
define dso_local i32 @SSL_CTX_set_default_verify_paths(%struct.ssl_ctx_st.9180* %ctx) #0 {
define dso_local i32 @SSL_CTX_load_verify_locations(%struct.ssl_ctx_st.9180* %ctx, i8* %CAfile, i8* %CApath) #0 {
define dso_local void @SSL_set_state(%struct.ssl_st.9204* %ssl, i32 %state) #0 {
define dso_local void @SSL_set_verify_result(%struct.ssl_st.9204* %ssl, i64 %arg) #0 {
define dso_local i64 @SSL_get_verify_result(%struct.ssl_st.9204* %ssl) #0 {
define dso_local i32 @SSL_get_ex_new_index(i64 %argl, i8* %argp, i32 (i8*, i8*, %struct.crypto_ex_data_st*, i32, i64, i8*)* %new_func, i32 (%struct.crypto_ex_data_st*, %struct.crypto_ex_data_st*, i8*, i32, i64, i8*)* %dup_func, void (i8*, i8*, %struct.crypto_ex_data_st*, i32, i64, i8*)* %free_func) #0 {
define dso_local i32 @SSL_set_ex_data(%struct.ssl_st.9204* %s, i32 %idx, i8* %arg) #0 {
define dso_local i8* @SSL_get_ex_data(%struct.ssl_st.9204* %s, i32 %idx) #0 {
define dso_local i32 @SSL_CTX_get_ex_new_index(i64 %argl, i8* %argp, i32 (i8*, i8*, %struct.crypto_ex_data_st*, i32, i64, i8*)* %new_func, i32 (%struct.crypto_ex_data_st*, %struct.crypto_ex_data_st*, i8*, i32, i64, i8*)* %dup_func, void (i8*, i8*, %struct.crypto_ex_data_st*, i32, i64, i8*)* %free_func) #0 {
define dso_local i32 @SSL_CTX_set_ex_data(%struct.ssl_ctx_st.9180* %s, i32 %idx, i8* %arg) #0 {
define dso_local i8* @SSL_CTX_get_ex_data(%struct.ssl_ctx_st.9180* %s, i32 %idx) #0 {
define dso_local i32 @ssl_ok(%struct.ssl_st.9204* %s) #0 {
define dso_local %struct.x509_store_st* @SSL_CTX_get_cert_store(%struct.ssl_ctx_st.9180* %ctx) #0 {
define dso_local void @SSL_CTX_set_cert_store(%struct.ssl_ctx_st.9180* %ctx, %struct.x509_store_st* %store) #0 {
define dso_local void @SSL_CTX_set_tmp_rsa_callback(%struct.ssl_ctx_st.9180* %ctx, %struct.rsa_st* (%struct.ssl_st.9204*, i32, i32)* %cb) #0 {
define dso_local void @SSL_set_tmp_rsa_callback(%struct.ssl_st.9204* %ssl, %struct.rsa_st* (%struct.ssl_st.9204*, i32, i32)* %cb) #0 {
define dso_local void @SSL_CTX_set_tmp_dh_callback(%struct.ssl_ctx_st.9180* %ctx, %struct.dh_st* (%struct.ssl_st.9204*, i32, i32)* %dh) #0 {
define dso_local void @SSL_set_tmp_dh_callback(%struct.ssl_st.9204* %ssl, %struct.dh_st* (%struct.ssl_st.9204*, i32, i32)* %dh) #0 {
define dso_local void @SSL_CTX_set_tmp_ecdh_callback(%struct.ssl_ctx_st.9180* %ctx, %struct.ec_key_st* (%struct.ssl_st.9204*, i32, i32)* %ecdh) #0 {
define dso_local void @SSL_set_tmp_ecdh_callback(%struct.ssl_st.9204* %ssl, %struct.ec_key_st* (%struct.ssl_st.9204*, i32, i32)* %ecdh) #0 {
define dso_local i32 @SSL_CTX_use_psk_identity_hint(%struct.ssl_ctx_st.9180* %ctx, i8* %identity_hint) #0 {
define dso_local i32 @SSL_use_psk_identity_hint(%struct.ssl_st.9204* %s, i8* %identity_hint) #0 {
define dso_local i8* @SSL_get_psk_identity_hint(%struct.ssl_st.9204* %s) #0 {
define dso_local i8* @SSL_get_psk_identity(%struct.ssl_st.9204* %s) #0 {
define dso_local void @SSL_set_psk_client_callback(%struct.ssl_st.9204* %s, i32 (%struct.ssl_st.9204*, i8*, i8*, i32, i8*, i32)* %cb) #0 {
define dso_local void @SSL_CTX_set_psk_client_callback(%struct.ssl_ctx_st.9180* %ctx, i32 (%struct.ssl_st.9204*, i8*, i8*, i32, i8*, i32)* %cb) #0 {
define dso_local void @SSL_set_psk_server_callback(%struct.ssl_st.9204* %s, i32 (%struct.ssl_st.9204*, i8*, i8*, i32)* %cb) #0 {
define dso_local void @SSL_CTX_set_psk_server_callback(%struct.ssl_ctx_st.9180* %ctx, i32 (%struct.ssl_st.9204*, i8*, i8*, i32)* %cb) #0 {
define dso_local void @SSL_CTX_set_msg_callback(%struct.ssl_ctx_st.9180* %ctx, void (i32, i32, i32, i8*, i64, %struct.ssl_st.9204*, i8*)* %cb) #0 {
define dso_local void @SSL_set_msg_callback(%struct.ssl_st.9204* %ssl, void (i32, i32, i32, i8*, i64, %struct.ssl_st.9204*, i8*)* %cb) #0 {
define dso_local %struct.env_md_ctx_st* @ssl_replace_hash(%struct.env_md_ctx_st** %hash, %struct.env_md_st* %md) #0 {
define dso_local void @SSL_set_debug(%struct.ssl_st.9204* %s, i32 %debug) #0 {
define dso_local i32 @SSL_cache_hit(%struct.ssl_st.9204* %s) #0 {
define dso_local i32 @SSL_is_server(%struct.ssl_st.9204* %s) #0 {
define dso_local %struct.ssl_cipher_st* @OBJ_bsearch_ssl_cipher_id(%struct.ssl_cipher_st* %key, %struct.ssl_cipher_st* %base, i32 %num) #0 {
define internal i32 @ssl_cipher_id_cmp_BSEARCH_CMP_FN(i8* %a_, i8* %b_) #0 {
define dso_local void @SSL_load_error_strings() #0 {
define dso_local i32 @SSL_get_ex_data_X509_STORE_CTX_idx() #0 {
define dso_local void @ssl_cert_set_default_md(%struct.cert_st.9349* %cert) #0 {
define dso_local %struct.cert_st.9349* @ssl_cert_new() #0 {
define dso_local %struct.cert_st.9349* @ssl_cert_dup(%struct.cert_st.9349* %cert) #0 {
define dso_local void @ssl_cert_clear_certs(%struct.cert_st.9349* %c) #0 {
define dso_local void @ssl_cert_free(%struct.cert_st.9349* %c) #0 {
define dso_local i32 @ssl_cert_inst(%struct.cert_st.9349** %o) #0 {
define dso_local i32 @ssl_cert_set0_chain(%struct.cert_st.9349* %c, %struct.stack_st_SSL_CIPHER* %chain) #0 {
define dso_local i32 @ssl_cert_set1_chain(%struct.cert_st.9349* %c, %struct.stack_st_SSL_CIPHER* %chain) #0 {
define dso_local i32 @ssl_cert_add0_chain_cert(%struct.cert_st.9349* %c, %struct.x509_st* %x) #0 {
define dso_local i32 @ssl_cert_add1_chain_cert(%struct.cert_st.9349* %c, %struct.x509_st* %x) #0 {
define dso_local i32 @ssl_cert_select_current(%struct.cert_st.9349* %c, %struct.x509_st* %x) #0 {
define dso_local i32 @ssl_cert_set_current(%struct.cert_st.9349* %c, i64 %op) #0 {
define dso_local void @ssl_cert_set_cert_cb(%struct.cert_st.9349* %c, i32 (%struct.ssl_st.9380*, i8*)* %cb, i8* %arg) #0 {
define dso_local %struct.sess_cert_st* @ssl_sess_cert_new() #0 {
define dso_local void @ssl_sess_cert_free(%struct.sess_cert_st* %sc) #0 {
define dso_local i32 @ssl_set_peer_cert_type(%struct.sess_cert_st* %sc, i32 %type) #0 {
define dso_local i32 @ssl_verify_cert_chain(%struct.ssl_st.9380* %s, %struct.stack_st_SSL_CIPHER* %sk) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @SSL_dup_CA_list(%struct.stack_st_SSL_CIPHER* %sk) #0 {
define dso_local void @SSL_set_client_CA_list(%struct.ssl_st.9380* %s, %struct.stack_st_SSL_CIPHER* %name_list) #0 {
define internal void @set_client_CA_list(%struct.stack_st_SSL_CIPHER** %ca_list, %struct.stack_st_SSL_CIPHER* %name_list) #0 {
define dso_local void @SSL_CTX_set_client_CA_list(%struct.ssl_ctx_st.9356* %ctx, %struct.stack_st_SSL_CIPHER* %name_list) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @SSL_CTX_get_client_CA_list(%struct.ssl_ctx_st.9356* %ctx) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @SSL_get_client_CA_list(%struct.ssl_st.9380* %s) #0 {
define dso_local i32 @SSL_add_client_CA(%struct.ssl_st.9380* %ssl, %struct.x509_st* %x) #0 {
define internal i32 @add_client_CA(%struct.stack_st_SSL_CIPHER** %sk, %struct.x509_st* %x) #0 {
define dso_local i32 @SSL_CTX_add_client_CA(%struct.ssl_ctx_st.9356* %ctx, %struct.x509_st* %x) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @SSL_load_client_CA_file(i8* %file) #0 {
define internal i32 @xname_cmp(%struct.X509_name_st** %a, %struct.X509_name_st** %b) #0 {
define dso_local i32 @SSL_add_file_cert_subjects_to_stack(%struct.stack_st_SSL_CIPHER* %stack, i8* %file) #0 {
define dso_local i32 @SSL_add_dir_cert_subjects_to_stack(%struct.stack_st_SSL_CIPHER* %stack, i8* %dir) #0 {
define dso_local i32 @ssl_add_cert_chain(%struct.ssl_st.9380* %s, %struct.cert_pkey_st* %cpk, i64* %l) #0 {
define internal i32 @ssl_add_cert_to_buf(%struct.buf_mem_st* %buf, i64* %l, %struct.x509_st* %x) #0 {
define dso_local i32 @ssl_build_cert_chain(%struct.cert_st.9349* %c, %struct.x509_store_st* %chain_store, i32 %flags) #0 {
define dso_local i32 @ssl_cert_set_cert_store(%struct.cert_st.9349* %c, %struct.x509_store_st* %store, i32 %chain, i32 %ref) #0 {
define dso_local %struct.ssl_session_st* @SSL_get_session(%struct.ssl_st.9740* %ssl) #0 {
define dso_local %struct.ssl_session_st* @SSL_get1_session(%struct.ssl_st.9740* %ssl) #0 {
define dso_local i32 @SSL_SESSION_get_ex_new_index(i64 %argl, i8* %argp, i32 (i8*, i8*, %struct.crypto_ex_data_st*, i32, i64, i8*)* %new_func, i32 (%struct.crypto_ex_data_st*, %struct.crypto_ex_data_st*, i8*, i32, i64, i8*)* %dup_func, void (i8*, i8*, %struct.crypto_ex_data_st*, i32, i64, i8*)* %free_func) #0 {
define dso_local i32 @SSL_SESSION_set_ex_data(%struct.ssl_session_st* %s, i32 %idx, i8* %arg) #0 {
define dso_local i8* @SSL_SESSION_get_ex_data(%struct.ssl_session_st* %s, i32 %idx) #0 {
define dso_local %struct.ssl_session_st* @SSL_SESSION_new() #0 {
define dso_local %struct.ssl_session_st* @ssl_session_dup(%struct.ssl_session_st* %src, i32 %ticket) #0 {
define dso_local void @SSL_SESSION_free(%struct.ssl_session_st* %ss) #0 {
define dso_local i8* @SSL_SESSION_get_id(%struct.ssl_session_st* %s, i32* %len) #0 {
define dso_local i32 @SSL_SESSION_get_compress_id(%struct.ssl_session_st* %s) #0 {
define dso_local i32 @ssl_get_new_session(%struct.ssl_st.9740* %s, i32 %session) #0 {
define internal i32 @def_generate_session_id(%struct.ssl_st.9740* %ssl, i8* %id, i32* %id_len) #0 {
define dso_local i32 @ssl_get_prev_session(%struct.ssl_st.9740* %s, i8* %session_id, i32 %len, i8* %limit) #0 {
define dso_local i32 @SSL_CTX_add_session(%struct.ssl_ctx_st.9716* %ctx, %struct.ssl_session_st* %c) #0 {
define dso_local i32 @SSL_CTX_remove_session(%struct.ssl_ctx_st.9716* %ctx, %struct.ssl_session_st* %c) #0 {
define internal i32 @remove_session_lock(%struct.ssl_ctx_st.9716* %ctx, %struct.ssl_session_st* %c, i32 %lck) #0 {
define internal void @SSL_SESSION_list_remove(%struct.ssl_ctx_st.9716* %ctx, %struct.ssl_session_st* %s) #0 {
define internal void @SSL_SESSION_list_add(%struct.ssl_ctx_st.9716* %ctx, %struct.ssl_session_st* %s) #0 {
define dso_local i32 @SSL_set_session(%struct.ssl_st.9740* %s, %struct.ssl_session_st* %session) #0 {
define dso_local i64 @SSL_SESSION_set_timeout(%struct.ssl_session_st* %s, i64 %t) #0 {
define dso_local i64 @SSL_SESSION_get_timeout(%struct.ssl_session_st* %s) #0 {
define dso_local i64 @SSL_SESSION_get_time(%struct.ssl_session_st* %s) #0 {
define dso_local i64 @SSL_SESSION_set_time(%struct.ssl_session_st* %s, i64 %t) #0 {
define dso_local %struct.x509_st* @SSL_SESSION_get0_peer(%struct.ssl_session_st* %s) #0 {
define dso_local i32 @SSL_SESSION_set1_id_context(%struct.ssl_session_st* %s, i8* %sid_ctx, i32 %sid_ctx_len) #0 {
define dso_local i64 @SSL_CTX_set_timeout(%struct.ssl_ctx_st.9716* %s, i64 %t) #0 {
define dso_local i64 @SSL_CTX_get_timeout(%struct.ssl_ctx_st.9716* %s) #0 {
define dso_local i32 @SSL_set_session_secret_cb(%struct.ssl_st.9740* %s, i32 (%struct.ssl_st.9740*, i8*, i32*, %struct.stack_st_SSL_CIPHER*, %struct.ssl_cipher_st**, i8*)* %tls_session_secret_cb, i8* %arg) #0 {
define dso_local i32 @SSL_set_session_ticket_ext_cb(%struct.ssl_st.9740* %s, i32 (%struct.ssl_st.9740*, i8*, i32, i8*)* %cb, i8* %arg) #0 {
define dso_local i32 @SSL_set_session_ticket_ext(%struct.ssl_st.9740* %s, i8* %ext_data, i32 %ext_len) #0 {
define dso_local void @SSL_CTX_flush_sessions(%struct.ssl_ctx_st.9716* %s, i64 %t) #0 {
define internal void @timeout_LHASH_DOALL_ARG(i8* %arg1, i8* %arg2) #0 {
define internal void @timeout_doall_arg(%struct.ssl_session_st* %s, %struct.timeout_param_st* %p) #0 {
define dso_local i32 @ssl_clear_bad_session(%struct.ssl_st.9740* %s) #0 {
define dso_local void @SSL_CTX_sess_set_new_cb(%struct.ssl_ctx_st.9716* %ctx, i32 (%struct.ssl_st.9740*, %struct.ssl_session_st*)* %cb) #0 {
define dso_local i32 (%struct.ssl_st.9740*, %struct.ssl_session_st*)* @SSL_CTX_sess_get_new_cb(%struct.ssl_ctx_st.9716* %ctx) #0 {
define dso_local void @SSL_CTX_sess_set_remove_cb(%struct.ssl_ctx_st.9716* %ctx, void (%struct.ssl_ctx_st.9716*, %struct.ssl_session_st*)* %cb) #0 {
define dso_local void (%struct.ssl_ctx_st.9716*, %struct.ssl_session_st*)* @SSL_CTX_sess_get_remove_cb(%struct.ssl_ctx_st.9716* %ctx) #0 {
define dso_local void @SSL_CTX_sess_set_get_cb(%struct.ssl_ctx_st.9716* %ctx, %struct.ssl_session_st* (%struct.ssl_st.9740*, i8*, i32, i32*)* %cb) #0 {
define dso_local %struct.ssl_session_st* (%struct.ssl_st.9740*, i8*, i32, i32*)* @SSL_CTX_sess_get_get_cb(%struct.ssl_ctx_st.9716* %ctx) #0 {
define dso_local void @SSL_CTX_set_info_callback(%struct.ssl_ctx_st.9716* %ctx, void (%struct.ssl_st.9740*, i32, i32)* %cb) #0 {
define dso_local void (%struct.ssl_st.9740*, i32, i32)* @SSL_CTX_get_info_callback(%struct.ssl_ctx_st.9716* %ctx) #0 {
define dso_local void @SSL_CTX_set_client_cert_cb(%struct.ssl_ctx_st.9716* %ctx, i32 (%struct.ssl_st.9740*, %struct.x509_st**, %struct.evp_pkey_st**)* %cb) #0 {
define dso_local i32 (%struct.ssl_st.9740*, %struct.x509_st**, %struct.evp_pkey_st**)* @SSL_CTX_get_client_cert_cb(%struct.ssl_ctx_st.9716* %ctx) #0 {
define dso_local i32 @SSL_CTX_set_client_cert_engine(%struct.ssl_ctx_st.9716* %ctx, %struct.engine_st* %e) #0 {
define dso_local void @SSL_CTX_set_cookie_generate_cb(%struct.ssl_ctx_st.9716* %ctx, i32 (%struct.ssl_st.9740*, i8*, i32*)* %cb) #0 {
define dso_local void @SSL_CTX_set_cookie_verify_cb(%struct.ssl_ctx_st.9716* %ctx, i32 (%struct.ssl_st.9740*, i8*, i32)* %cb) #0 {
define dso_local %struct.ssl_session_st* @PEM_read_bio_SSL_SESSION(%struct.bio_st* %bp, %struct.ssl_session_st** %x, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local %struct.ssl_session_st* @PEM_read_SSL_SESSION(%struct._IO_FILE* %fp, %struct.ssl_session_st** %x, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local i32 @PEM_write_bio_SSL_SESSION(%struct.bio_st* %bp, %struct.ssl_session_st* %x) #0 {
define dso_local i32 @PEM_write_SSL_SESSION(%struct._IO_FILE* %fp, %struct.ssl_session_st* %x) #0 {
define dso_local void @ssl_load_ciphers() #0 {
define internal i32 @get_optional_pkey_id(i8* %pkey_name) #0 {
define dso_local i32 @ssl_cipher_get_evp(%struct.ssl_session_st* %s, %struct.evp_cipher_st** %enc, %struct.env_md_st** %md, i32* %mac_pkey_type, i32* %mac_secret_size, %struct.ssl_comp_st** %comp) #0 {
define internal void @load_builtin_compressions() #0 {
define internal i32 @sk_comp_cmp(%struct.ssl_comp_st** %a, %struct.ssl_comp_st** %b) #0 {
define dso_local i32 @ssl_get_handshake_digest(i32 %idx, i64* %mask, %struct.env_md_st** %md) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @ssl_create_cipher_list(%struct.ssl_method_st.8503* %ssl_method, %struct.stack_st_SSL_CIPHER** %cipher_list, %struct.stack_st_SSL_CIPHER** %cipher_list_by_id, i8* %rule_str, %struct.cert_st* %c) #0 {
define internal i32 @check_suiteb_cipher_list(%struct.ssl_method_st.8503* %meth, %struct.cert_st* %c, i8** %prule_str) #0 {
define internal void @ssl_cipher_get_disabled(i64* %mkey, i64* %auth, i64* %enc, i64* %mac, i64* %ssl) #0 {
define internal void @ssl_cipher_collect_ciphers(%struct.ssl_method_st.8503* %ssl_method, i32 %num_of_ciphers, i64 %disabled_mkey, i64 %disabled_auth, i64 %disabled_enc, i64 %disabled_mac, i64 %disabled_ssl, %struct.cipher_order_st* %co_list, %struct.cipher_order_st** %head_p, %struct.cipher_order_st** %tail_p) #0 {
define internal void @ssl_cipher_apply_rule(i64 %cipher_id, i64 %alg_mkey, i64 %alg_auth, i64 %alg_enc, i64 %alg_mac, i64 %alg_ssl, i64 %algo_strength, i32 %rule, i32 %strength_bits, %struct.cipher_order_st** %head_p, %struct.cipher_order_st** %tail_p) #0 {
define internal i32 @ssl_cipher_strength_sort(%struct.cipher_order_st** %head_p, %struct.cipher_order_st** %tail_p) #0 {
define internal void @ssl_cipher_collect_aliases(%struct.ssl_cipher_st** %ca_list, i32 %num_of_group_aliases, i64 %disabled_mkey, i64 %disabled_auth, i64 %disabled_enc, i64 %disabled_mac, i64 %disabled_ssl, %struct.cipher_order_st* %head) #0 {
define internal i32 @ssl_cipher_process_rulestr(i8* %rule_str, %struct.cipher_order_st** %head_p, %struct.cipher_order_st** %tail_p, %struct.ssl_cipher_st** %ca_list) #0 {
define internal void @ll_append_tail(%struct.cipher_order_st** %head, %struct.cipher_order_st* %curr, %struct.cipher_order_st** %tail) #0 {
define internal void @ll_append_head(%struct.cipher_order_st** %head, %struct.cipher_order_st* %curr, %struct.cipher_order_st** %tail) #0 {
define dso_local i8* @SSL_CIPHER_description(%struct.ssl_cipher_st* %cipher, i8* %buf, i32 %len) #0 {
define dso_local i8* @SSL_CIPHER_get_version(%struct.ssl_cipher_st* %c) #0 {
define dso_local i8* @SSL_CIPHER_get_name(%struct.ssl_cipher_st* %c) #0 {
define dso_local i32 @SSL_CIPHER_get_bits(%struct.ssl_cipher_st* %c, i32* %alg_bits) #0 {
define dso_local i64 @SSL_CIPHER_get_id(%struct.ssl_cipher_st* %c) #0 {
define dso_local %struct.ssl_comp_st* @ssl3_comp_find(%struct.stack_st_SSL_CIPHER* %sk, i32 %n) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @SSL_COMP_get_compression_methods() #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @SSL_COMP_set0_compression_methods(%struct.stack_st_SSL_CIPHER* %meths) #0 {
define dso_local void @SSL_COMP_free_compression_methods() #0 {
define internal void @cmeth_free(%struct.ssl_comp_st* %cm) #0 {
define dso_local i32 @SSL_COMP_add_compression_method(i32 %id, %struct.comp_method_st* %cm) #0 {
define dso_local i8* @SSL_COMP_get_name(%struct.comp_method_st* %comp) #0 {
define dso_local i32 @ssl_cipher_get_cert_index(%struct.ssl_cipher_st* %c) #0 {
define dso_local %struct.ssl_cipher_st* @ssl_get_cipher_by_char(%struct.ssl_st.8501* %ssl, i8* %ptr) #0 {
define dso_local %struct.ssl_cipher_st* @SSL_CIPHER_find(%struct.ssl_st.8501* %ssl, i8* %ptr) #0 {
define dso_local i32 @SSL_use_certificate(%struct.ssl_st.9380* %ssl, %struct.x509_st* %x) #0 {
define internal i32 @ssl_set_cert(%struct.cert_st.9349* %c, %struct.x509_st* %x) #0 {
define dso_local i32 @SSL_use_certificate_file(%struct.ssl_st.9380* %ssl, i8* %file, i32 %type) #0 {
define dso_local i32 @SSL_use_certificate_ASN1(%struct.ssl_st.9380* %ssl, i8* %d, i32 %len) #0 {
define dso_local i32 @SSL_use_RSAPrivateKey(%struct.ssl_st.9380* %ssl, %struct.rsa_st* %rsa) #0 {
define internal i32 @ssl_set_pkey(%struct.cert_st.9349* %c, %struct.evp_pkey_st* %pkey) #0 {
define dso_local i32 @SSL_use_RSAPrivateKey_file(%struct.ssl_st.9380* %ssl, i8* %file, i32 %type) #0 {
define dso_local i32 @SSL_use_RSAPrivateKey_ASN1(%struct.ssl_st.9380* %ssl, i8* %d, i64 %len) #0 {
define dso_local i32 @SSL_use_PrivateKey(%struct.ssl_st.9380* %ssl, %struct.evp_pkey_st* %pkey) #0 {
define dso_local i32 @SSL_use_PrivateKey_file(%struct.ssl_st.9380* %ssl, i8* %file, i32 %type) #0 {
define dso_local i32 @SSL_use_PrivateKey_ASN1(i32 %type, %struct.ssl_st.9380* %ssl, i8* %d, i64 %len) #0 {
define dso_local i32 @SSL_CTX_use_certificate(%struct.ssl_ctx_st.9356* %ctx, %struct.x509_st* %x) #0 {
define dso_local i32 @SSL_CTX_use_certificate_file(%struct.ssl_ctx_st.9356* %ctx, i8* %file, i32 %type) #0 {
define dso_local i32 @SSL_CTX_use_certificate_ASN1(%struct.ssl_ctx_st.9356* %ctx, i32 %len, i8* %d) #0 {
define dso_local i32 @SSL_CTX_use_RSAPrivateKey(%struct.ssl_ctx_st.9356* %ctx, %struct.rsa_st* %rsa) #0 {
define dso_local i32 @SSL_CTX_use_RSAPrivateKey_file(%struct.ssl_ctx_st.9356* %ctx, i8* %file, i32 %type) #0 {
define dso_local i32 @SSL_CTX_use_RSAPrivateKey_ASN1(%struct.ssl_ctx_st.9356* %ctx, i8* %d, i64 %len) #0 {
define dso_local i32 @SSL_CTX_use_PrivateKey(%struct.ssl_ctx_st.9356* %ctx, %struct.evp_pkey_st* %pkey) #0 {
define dso_local i32 @SSL_CTX_use_PrivateKey_file(%struct.ssl_ctx_st.9356* %ctx, i8* %file, i32 %type) #0 {
define dso_local i32 @SSL_CTX_use_PrivateKey_ASN1(i32 %type, %struct.ssl_ctx_st.9356* %ctx, i8* %d, i64 %len) #0 {
define dso_local i32 @SSL_CTX_use_certificate_chain_file(%struct.ssl_ctx_st.9356* %ctx, i8* %file) #0 {
define dso_local i32 @SSL_CTX_use_serverinfo(%struct.ssl_ctx_st.9356* %ctx, i8* %serverinfo, i64 %serverinfo_length) #0 {
define internal i32 @serverinfo_process_buffer(i8* %serverinfo, i64 %serverinfo_length, %struct.ssl_ctx_st.9356* %ctx) #0 {
define internal i32 @serverinfo_srv_add_cb(%struct.ssl_st.9380* %s, i32 %ext_type, i8** %out, i64* %outlen, i32* %al, i8* %arg) #0 {
define internal i32 @serverinfo_srv_parse_cb(%struct.ssl_st.9380* %s, i32 %ext_type, i8* %in, i64 %inlen, i32* %al, i8* %arg) #0 {
define internal i32 @serverinfo_find_extension(i8* %serverinfo, i64 %serverinfo_length, i32 %extension_type, i8** %extension_data, i64* %extension_length) #0 {
define dso_local i32 @SSL_CTX_use_serverinfo_file(%struct.ssl_ctx_st.9356* %ctx, i8* %file) #0 {
define dso_local i32 @i2d_SSL_SESSION(%struct.ssl_session_st* %in, i8** %pp) #0 {
define dso_local %struct.ssl_session_st* @d2i_SSL_SESSION(%struct.ssl_session_st** %a, i8** %pp, i64 %length) #0 {
define dso_local i32 @SSL_library_init() #0 {
define dso_local void @ERR_load_SSL_strings() #0 {
define dso_local i32 @ssl_add_clienthello_renegotiate_ext(%struct.ssl_st.10059* %s, i8* %p, i32* %len, i32 %maxlen) #0 {
define dso_local i32 @ssl_parse_clienthello_renegotiate_ext(%struct.ssl_st.10059* %s, i8* %d, i32 %len, i32* %al) #0 {
define dso_local i32 @ssl_add_serverhello_renegotiate_ext(%struct.ssl_st.10059* %s, i8* %p, i32* %len, i32 %maxlen) #0 {
define dso_local i32 @ssl_parse_serverhello_renegotiate_ext(%struct.ssl_st.10059* %s, i8* %d, i32 %len, i32* %al) #0 {
define dso_local i32 @SSL_CTX_SRP_CTX_free(%struct.ssl_ctx_st.8498* %ctx) #0 {
define dso_local i32 @SSL_SRP_CTX_free(%struct.ssl_st.8501* %s) #0 {
define dso_local i32 @SSL_SRP_CTX_init(%struct.ssl_st.8501* %s) #0 {
define dso_local i32 @SSL_CTX_SRP_CTX_init(%struct.ssl_ctx_st.8498* %ctx) #0 {
define dso_local i32 @SSL_srp_server_param_with_username(%struct.ssl_st.8501* %s, i32* %ad) #0 {
define dso_local i32 @SSL_set_srp_server_param_pw(%struct.ssl_st.8501* %s, i8* %user, i8* %pass, i8* %grp) #0 {
define dso_local i32 @SSL_set_srp_server_param(%struct.ssl_st.8501* %s, %struct.bignum_st* %N, %struct.bignum_st* %g, %struct.bignum_st* %sa, %struct.bignum_st* %v, i8* %info) #0 {
define dso_local i32 @SRP_generate_server_master_secret(%struct.ssl_st.8501* %s, i8* %master_key) #0 {
define dso_local i32 @SRP_generate_client_master_secret(%struct.ssl_st.8501* %s, i8* %master_key) #0 {
define dso_local i32 @srp_verify_server_param(%struct.ssl_st.8501* %s, i32* %al) #0 {
define dso_local i32 @SRP_Calc_A_param(%struct.ssl_st.8501* %s) #0 {
define dso_local %struct.bignum_st* @SSL_get_srp_g(%struct.ssl_st.8501* %s) #0 {
define dso_local %struct.bignum_st* @SSL_get_srp_N(%struct.ssl_st.8501* %s) #0 {
define dso_local i8* @SSL_get_srp_username(%struct.ssl_st.8501* %s) #0 {
define dso_local i8* @SSL_get_srp_userinfo(%struct.ssl_st.8501* %s) #0 {
define dso_local i32 @SSL_CTX_set_srp_username(%struct.ssl_ctx_st.8498* %ctx, i8* %name) #0 {
define dso_local i32 @SSL_CTX_set_srp_password(%struct.ssl_ctx_st.8498* %ctx, i8* %password) #0 {
define dso_local i32 @SSL_CTX_set_srp_strength(%struct.ssl_ctx_st.8498* %ctx, i32 %strength) #0 {
define dso_local i32 @SSL_CTX_set_srp_verify_param_callback(%struct.ssl_ctx_st.8498* %ctx, i32 (%struct.ssl_st.8501*, i8*)* %cb) #0 {
define dso_local i32 @SSL_CTX_set_srp_cb_arg(%struct.ssl_ctx_st.8498* %ctx, i8* %arg) #0 {
define dso_local i32 @SSL_CTX_set_srp_username_callback(%struct.ssl_ctx_st.8498* %ctx, i32 (%struct.ssl_st.8501*, i32*, i8*)* %cb) #0 {
define dso_local i32 @SSL_CTX_set_srp_client_pwd_callback(%struct.ssl_ctx_st.8498* %ctx, i8* (%struct.ssl_st.8501*, i8*)* %cb) #0 {
define dso_local %struct.ssl_method_st.8503* @SSLv3_method() #0 {
define internal %struct.ssl_method_st.8503* @ssl3_get_method(i32 %ver) #0 {
define dso_local %struct.ssl_method_st.8503* @SSLv3_server_method() #0 {
define dso_local i32 @ssl3_accept(%struct.ssl_st.8501* %s) #0 {
define internal %struct.ssl_method_st.8503* @ssl3_get_server_method(i32 %ver) #0 {
define dso_local i32 @ssl3_send_hello_request(%struct.ssl_st.8501* %s) #0 {
define dso_local i32 @ssl3_get_client_hello(%struct.ssl_st.8501* %s) #0 {
define internal i32 @ssl_check_srp_ext_ClientHello(%struct.ssl_st.8501* %s, i32* %al) #0 {
define dso_local i32 @ssl3_send_server_hello(%struct.ssl_st.8501* %s) #0 {
define dso_local i32 @ssl3_send_server_certificate(%struct.ssl_st.8501* %s) #0 {
define dso_local i32 @ssl3_send_server_key_exchange(%struct.ssl_st.8501* %s) #0 {
define dso_local i32 @ssl3_send_certificate_request(%struct.ssl_st.8501* %s) #0 {
define dso_local i32 @ssl3_send_server_done(%struct.ssl_st.8501* %s) #0 {
define dso_local i32 @ssl3_get_client_certificate(%struct.ssl_st.8501* %s) #0 {
define dso_local i32 @ssl3_get_client_key_exchange(%struct.ssl_st.8501* %s) #0 {
define dso_local i32 @ssl3_get_cert_verify(%struct.ssl_st.8501* %s) #0 {
define dso_local i32 @ssl3_get_next_proto(%struct.ssl_st.8501* %s) #0 {
define dso_local i32 @ssl3_send_newsession_ticket(%struct.ssl_st.8501* %s) #0 {
define dso_local i32 @ssl3_send_cert_status(%struct.ssl_st.8501* %s) #0 {
define internal zeroext i8 @constant_time_eq_int_8(i32 %a, i32 %b) #4 {
define internal zeroext i8 @constant_time_is_zero_8(i32 %a) #4 {
define internal zeroext i8 @constant_time_eq_8(i32 %a, i32 %b) #4 {
define internal zeroext i8 @constant_time_select_8(i8 zeroext %mask, i8 zeroext %a, i8 zeroext %b) #4 {
define internal i32 @constant_time_select(i32 %mask, i32 %a, i32 %b) #4 {
define internal i32 @constant_time_eq(i32 %a, i32 %b) #4 {
define internal i32 @constant_time_is_zero(i32 %a) #4 {
define internal i32 @constant_time_msb(i32 %a) #4 {
define dso_local %struct.ssl_method_st.8503* @SSLv3_client_method() #0 {
define dso_local i32 @ssl3_connect(%struct.ssl_st.8501* %s) #0 {
define internal %struct.ssl_method_st.8503* @ssl3_get_client_method(i32 %ver) #0 {
define dso_local i32 @ssl3_client_hello(%struct.ssl_st.8501* %s) #0 {
define dso_local i32 @ssl3_get_server_hello(%struct.ssl_st.8501* %s) #0 {
define internal i32 @ssl3_check_finished(%struct.ssl_st.8501* %s) #0 {
define dso_local i32 @ssl3_get_server_certificate(%struct.ssl_st.8501* %s) #0 {
define dso_local i32 @ssl3_get_key_exchange(%struct.ssl_st.8501* %s) #0 {
define dso_local i32 @ssl3_check_cert_and_algorithm(%struct.ssl_st.8501* %s) #0 {
define dso_local i32 @ssl3_get_certificate_request(%struct.ssl_st.8501* %s) #0 {
define dso_local i32 @ssl3_get_server_done(%struct.ssl_st.8501* %s) #0 {
define dso_local i32 @ssl3_send_client_certificate(%struct.ssl_st.8501* %s) #0 {
define dso_local i32 @ssl3_send_client_key_exchange(%struct.ssl_st.8501* %s) #0 {
define dso_local i32 @ssl3_send_client_verify(%struct.ssl_st.8501* %s) #0 {
define dso_local i32 @ssl3_send_next_proto(%struct.ssl_st.8501* %s) #0 {
define dso_local i32 @ssl3_get_new_session_ticket(%struct.ssl_st.8501* %s) #0 {
define dso_local i32 @ssl3_get_cert_status(%struct.ssl_st.8501* %s) #0 {
define internal %struct.dh_st* @get_server_static_dh_key(%struct.sess_cert_st* %scert) #0 {
define internal i32 @ssl3_check_client_certificate(%struct.ssl_st.8501* %s) #0 {
define dso_local i32 @ssl_do_client_cert_cb(%struct.ssl_st.8501* %s, %struct.x509_st** %px509, %struct.evp_pkey_st** %ppkey) #0 {
define internal i32 @ca_dn_cmp(%struct.X509_name_st** %a, %struct.X509_name_st** %b) #0 {
define dso_local void @ssl3_set_handshake_header(%struct.ssl_st.9204* %s, i32 %htype, i64 %len) #0 {
define dso_local i32 @ssl3_handshake_write(%struct.ssl_st.9204* %s) #0 {
define dso_local i64 @ssl3_default_timeout() #0 {
define dso_local i32 @ssl3_num_ciphers() #0 {
define dso_local %struct.ssl_cipher_st* @ssl3_get_cipher(i32 %u) #0 {
define dso_local i32 @ssl3_pending(%struct.ssl_st.9204* %s) #0 {
define dso_local i32 @ssl3_new(%struct.ssl_st.9204* %s) #0 {
define dso_local void @ssl3_free(%struct.ssl_st.9204* %s) #0 {
define dso_local void @ssl3_clear(%struct.ssl_st.9204* %s) #0 {
define dso_local i64 @ssl3_ctrl(%struct.ssl_st.9204* %s, i32 %cmd, i64 %larg, i8* %parg) #0 {
define internal i32 @ssl3_set_req_cert_type(%struct.cert_st.9173* %c, i8* %p, i64 %len) #0 {
define dso_local i64 @ssl3_callback_ctrl(%struct.ssl_st.9204* %s, i32 %cmd, void ()* %fp) #0 {
define dso_local i64 @ssl3_ctx_ctrl(%struct.ssl_ctx_st.9180* %ctx, i32 %cmd, i64 %larg, i8* %parg) #0 {
define internal i8* @srp_password_from_info_cb(%struct.ssl_st.9204* %s, i8* %arg) #0 {
define dso_local i64 @ssl3_ctx_callback_ctrl(%struct.ssl_ctx_st.9180* %ctx, i32 %cmd, void ()* %fp) #0 {
define dso_local %struct.ssl_cipher_st* @ssl3_get_cipher_by_char(i8* %p) #0 {
define dso_local i32 @ssl3_put_cipher_by_char(%struct.ssl_cipher_st* %c, i8* %p) #0 {
define dso_local %struct.ssl_cipher_st* @ssl3_choose_cipher(%struct.ssl_st.9204* %s, %struct.stack_st_SSL_CIPHER* %clnt, %struct.stack_st_SSL_CIPHER* %srvr) #0 {
define dso_local i32 @ssl3_get_req_cert_type(%struct.ssl_st.9204* %s, i8* %p) #0 {
define dso_local i32 @ssl3_shutdown(%struct.ssl_st.9204* %s) #0 {
define dso_local i32 @ssl3_write(%struct.ssl_st.9204* %s, i8* %buf, i32 %len) #0 {
define dso_local i32 @ssl3_renegotiate_check(%struct.ssl_st.9204* %s) #0 {
define dso_local i32 @ssl3_read(%struct.ssl_st.9204* %s, i8* %buf, i32 %len) #0 {
define internal i32 @ssl3_read_internal(%struct.ssl_st.9204* %s, i8* %buf, i32 %len, i32 %peek) #0 {
define dso_local i32 @ssl3_peek(%struct.ssl_st.9204* %s, i8* %buf, i32 %len) #0 {
define dso_local i32 @ssl3_renegotiate(%struct.ssl_st.9204* %s) #0 {
define dso_local i64 @ssl_get_algorithm2(%struct.ssl_st.9204* %s) #0 {
define dso_local i32 @ssl3_change_cipher_state(%struct.ssl_st.9204* %s, i32 %which) #0 {
define dso_local i32 @ssl3_setup_key_block(%struct.ssl_st.9204* %s) #0 {
define dso_local void @ssl3_cleanup_key_block(%struct.ssl_st.9204* %s) #0 {
define internal i32 @ssl3_generate_key_block(%struct.ssl_st.9204* %s, i8* %km, i32 %num) #0 {
define dso_local i32 @ssl3_enc(%struct.ssl_st.9204* %s, i32 %send) #0 {
define dso_local i32 @ssl3_init_finished_mac(%struct.ssl_st.9204* %s) #0 {
define dso_local void @ssl3_free_digest_list(%struct.ssl_st.9204* %s) #0 {
define dso_local void @ssl3_finish_mac(%struct.ssl_st.9204* %s, i8* %buf, i32 %len) #0 {
define dso_local i32 @ssl3_digest_cached_records(%struct.ssl_st.9204* %s) #0 {
define dso_local i32 @ssl3_cert_verify_mac(%struct.ssl_st.9204* %s, i32 %md_nid, i8* %p) #0 {
define internal i32 @ssl3_handshake_mac(%struct.ssl_st.9204* %s, i32 %md_nid, i8* %sender, i32 %len, i8* %p) #0 {
define dso_local i32 @ssl3_final_finish_mac(%struct.ssl_st.9204* %s, i8* %sender, i32 %len, i8* %p) #0 {
define dso_local i32 @n_ssl3_mac(%struct.ssl_st.9204* %ssl, i8* %md, i32 %send) #0 {
define dso_local void @ssl3_record_sequence_update(i8* %seq) #0 {
define dso_local i32 @ssl3_generate_master_secret(%struct.ssl_st.9204* %s, i8* %out, i8* %p, i32 %len) #0 {
define dso_local i32 @ssl3_alert_code(i32 %code) #0 {
define dso_local i32 @ssl3_read_n(%struct.ssl_st.9740* %s, i32 %n, i32 %max, i32 %extend) #0 {
define dso_local i32 @ssl3_do_uncompress(%struct.ssl_st.9740* %ssl) #0 {
define dso_local i32 @ssl3_do_compress(%struct.ssl_st.9740* %ssl) #0 {
define dso_local i32 @ssl3_write_bytes(%struct.ssl_st.9740* %s, i32 %type, i8* %buf_, i32 %len) #0 {
define dso_local i32 @ssl3_write_pending(%struct.ssl_st.9740* %s, i32 %type, i8* %buf, i32 %len) #0 {
define internal i32 @do_ssl3_write(%struct.ssl_st.9740* %s, i32 %type, i8* %buf, i32 %len, i32 %create_empty_fragment) #0 {
define dso_local i32 @ssl3_read_bytes(%struct.ssl_st.9740* %s, i32 %type, i8* %buf, i32 %len, i32 %peek) #0 {
define internal i32 @ssl3_get_record(%struct.ssl_st.9740* %s) #0 {
define dso_local i32 @ssl3_send_alert(%struct.ssl_st.9740* %s, i32 %level, i32 %desc) #0 {
define dso_local i32 @ssl3_do_change_cipher_spec(%struct.ssl_st.9740* %s) #0 {
define dso_local i32 @ssl3_dispatch_alert(%struct.ssl_st.9740* %s) #0 {
define dso_local i32 @ssl3_do_write(%struct.ssl_st.9204* %s, i32 %type) #0 {
define dso_local i32 @ssl3_send_finished(%struct.ssl_st.9204* %s, i32 %a, i32 %b, i8* %sender, i32 %slen) #0 {
define dso_local i32 @ssl3_get_finished(%struct.ssl_st.9204* %s, i32 %a, i32 %b) #0 {
define dso_local i32 @ssl3_send_change_cipher_spec(%struct.ssl_st.9204* %s, i32 %a, i32 %b) #0 {
define dso_local i64 @ssl3_output_cert_chain(%struct.ssl_st.9204* %s, %struct.cert_pkey_st* %cpk) #0 {
define dso_local i64 @ssl3_get_message(%struct.ssl_st.9204* %s, i32 %st1, i32 %stn, i32 %mt, i64 %max, i32* %ok) #0 {
define internal void @ssl3_take_mac(%struct.ssl_st.9204* %s) #0 {
define dso_local i32 @ssl_cert_type(%struct.x509_st* %x, %struct.evp_pkey_st* %pkey) #0 {
define dso_local i32 @ssl_verify_alarm_type(i64 %type) #0 {
define dso_local i32 @ssl3_setup_read_buffer(%struct.ssl_st.9204* %s) #0 {
define internal i8* @freelist_extract(%struct.ssl_ctx_st.9180* %ctx, i32 %for_read, i32 %sz) #0 {
define dso_local i32 @ssl3_setup_write_buffer(%struct.ssl_st.9204* %s) #0 {
define dso_local i32 @ssl3_setup_buffers(%struct.ssl_st.9204* %s) #0 {
define dso_local i32 @ssl3_release_write_buffer(%struct.ssl_st.9204* %s) #0 {
define internal void @freelist_insert(%struct.ssl_ctx_st.9180* %ctx, i32 %for_read, i64 %sz, i8* %mem) #0 {
define dso_local i32 @ssl3_release_read_buffer(%struct.ssl_st.9204* %s) #0 {
define dso_local i32 @ssl3_cbc_remove_padding(%struct.ssl_st.10852* %s, %struct.ssl3_record_st* %rec, i32 %block_size, i32 %mac_size) #0 {
define internal i32 @constant_time_ge(i32 %a, i32 %b) #4 {
define internal i32 @constant_time_select_int(i32 %mask, i32 %a, i32 %b) #4 {
define internal i32 @constant_time_select.3001(i32 %mask, i32 %a, i32 %b) #4 {
define internal i32 @constant_time_lt(i32 %a, i32 %b) #4 {
define internal i32 @constant_time_msb.3002(i32 %a) #4 {
define dso_local i32 @tls1_cbc_remove_padding(%struct.ssl_st.10852* %s, %struct.ssl3_record_st* %rec, i32 %block_size, i32 %mac_size) #0 {
define internal zeroext i8 @constant_time_ge_8(i32 %a, i32 %b) #4 {
define internal i32 @constant_time_eq.3006(i32 %a, i32 %b) #4 {
define internal i32 @constant_time_is_zero.3007(i32 %a) #4 {
define dso_local void @ssl3_cbc_copy_mac(i8* %out, %struct.ssl3_record_st* %rec, i32 %md_size, i32 %orig_len) #0 {
define dso_local signext i8 @ssl3_cbc_record_digest_supported(%struct.env_md_ctx_st* %ctx) #0 {
define dso_local i32 @ssl3_cbc_digest_record(%struct.env_md_ctx_st* %ctx, i8* %md_out, i64* %md_out_size, i8* %header, i8* %data, i64 %data_plus_mac_size, i64 %data_plus_mac_plus_padding_size, i8* %mac_secret, i32 %mac_secret_length, i8 signext %is_sslv3) #0 {
define internal void @tls1_md5_final_raw(i8* %ctx, i8* %md_out) #0 {
define internal void @tls1_sha1_final_raw(i8* %ctx, i8* %md_out) #0 {
define internal void @tls1_sha256_final_raw(i8* %ctx, i8* %md_out) #0 {
define internal void @tls1_sha512_final_raw(i8* %ctx, i8* %md_out) #0 {
define internal zeroext i8 @constant_time_eq_8.3022(i32 %a, i32 %b) #4 {
define internal zeroext i8 @constant_time_select_8.3023(i8 zeroext %mask, i8 zeroext %a, i8 zeroext %b) #4 {
define dso_local %struct.ssl_method_st.8503* @DTLSv1_server_method() #0 {
define dso_local i32 @dtls1_accept(%struct.ssl_st.8501* %s) #0 {
define internal %struct.ssl_method_st.8503* @dtls1_get_server_method(i32 %ver) #0 {
define dso_local %struct.ssl_method_st.8503* @DTLS_server_method() #0 {
define dso_local %struct.ssl_method_st.8503* @DTLSv1_2_server_method() #0 {
define internal i32 @dtls1_send_hello_verify_request(%struct.ssl_st.8501* %s) #0 {
define dso_local %struct.ssl_method_st.8503* @DTLSv1_client_method() #0 {
define dso_local i32 @dtls1_connect(%struct.ssl_st.8501* %s) #0 {
define internal %struct.ssl_method_st.8503* @dtls1_get_client_method(i32 %ver) #0 {
define dso_local %struct.ssl_method_st.8503* @DTLS_client_method() #0 {
define dso_local %struct.ssl_method_st.8503* @DTLSv1_2_client_method() #0 {
define internal i32 @dtls1_get_hello_verify(%struct.ssl_st.8501* %s) #0 {
define dso_local i64 @dtls1_default_timeout() #0 {
define dso_local i32 @dtls1_new(%struct.ssl_st.9204* %s) #0 {
define dso_local void @dtls1_clear_received_buffer(%struct.ssl_st.9204* %s) #0 {
define dso_local void @dtls1_clear_sent_buffer(%struct.ssl_st.9204* %s) #0 {
define dso_local void @dtls1_free(%struct.ssl_st.9204* %s) #0 {
define internal void @dtls1_clear_queues(%struct.ssl_st.9204* %s) #0 {
define dso_local void @dtls1_clear(%struct.ssl_st.9204* %s) #0 {
define dso_local i64 @dtls1_ctrl(%struct.ssl_st.9204* %s, i32 %cmd, i64 %larg, i8* %parg) #0 {
define dso_local %struct.timespec* @dtls1_get_timeout(%struct.ssl_st.9204* %s, %struct.timespec* %timeleft) #0 {
define dso_local i32 @dtls1_handle_timeout(%struct.ssl_st.9204* %s) #0 {
define dso_local i32 @dtls1_listen(%struct.ssl_st.9204* %s, %struct.sockaddr* %client) #0 {
define dso_local i32 @dtls1_is_timer_expired(%struct.ssl_st.9204* %s) #0 {
define dso_local void @dtls1_double_timeout(%struct.ssl_st.9204* %s) #0 {
define dso_local i32 @dtls1_check_timeout_num(%struct.ssl_st.9204* %s) #0 {
define dso_local void @dtls1_start_timer(%struct.ssl_st.9204* %s) #0 {
define internal void @get_current_time(%struct.timespec* %t) #0 {
define dso_local %struct.ssl_cipher_st* @dtls1_get_cipher(i32 %u) #0 {
define dso_local void @dtls1_stop_timer(%struct.ssl_st.9204* %s) #0 {
define internal void @dtls1_set_handshake_header(%struct.ssl_st.9204* %s, i32 %htype, i64 %len) #0 {
define internal i32 @dtls1_handshake_write(%struct.ssl_st.9204* %s) #0 {
define dso_local i32 @dtls1_get_record(%struct.ssl_st.11205* %s) #0 {
define internal i32 @dtls1_process_buffered_records(%struct.ssl_st.11205* %s) #0 {
define internal i32 @dtls1_retrieve_buffered_record(%struct.ssl_st.11205* %s, %struct.record_pqueue_st* %queue) #0 {
define internal %struct.dtls1_bitmap_st* @dtls1_get_bitmap(%struct.ssl_st.11205* %s, %struct.ssl3_record_st* %rr, i32* %is_next_epoch) #0 {
define internal i32 @dtls1_record_replay_check(%struct.ssl_st.11205* %s, %struct.dtls1_bitmap_st* %bitmap) #0 {
define internal i32 @dtls1_buffer_record(%struct.ssl_st.11205* %s, %struct.record_pqueue_st* %queue, i8* %priority) #0 {
define internal i32 @dtls1_process_record(%struct.ssl_st.11205* %s, %struct.dtls1_bitmap_st* %bitmap) #0 {
define internal void @dtls1_record_bitmap_update(%struct.ssl_st.11205* %s, %struct.dtls1_bitmap_st* %bitmap) #0 {
define internal i32 @satsub64be(i8* %v1, i8* %v2) #0 {
define internal i32 @dtls1_copy_record(%struct.ssl_st.11205* %s, %struct._pitem* %item) #0 {
define dso_local i32 @dtls1_read_bytes(%struct.ssl_st.11205* %s, i32 %type, i8* %buf, i32 %len, i32 %peek) #0 {
define internal i32 @have_handshake_fragment(%struct.ssl_st.11205* %s, i32 %type, i8* %buf, i32 %len, i32 %peek) #0 {
define dso_local void @dtls1_reset_seq_numbers(%struct.ssl_st.11205* %s, i32 %rw) #0 {
define dso_local i32 @dtls1_write_app_data_bytes(%struct.ssl_st.11205* %s, i32 %type, i8* %buf_, i32 %len) #0 {
define dso_local i32 @dtls1_write_bytes(%struct.ssl_st.11205* %s, i32 %type, i8* %buf, i32 %len) #0 {
define dso_local i32 @do_dtls1_write(%struct.ssl_st.11205* %s, i32 %type, i8* %buf, i32 %len, i32 %create_empty_fragment) #0 {
define dso_local i32 @dtls1_dispatch_alert(%struct.ssl_st.11205* %s) #0 {
define dso_local void @dtls1_hm_fragment_free(%struct.hm_fragment_st* %frag) #0 {
define dso_local i32 @dtls1_do_write(%struct.ssl_st.9204* %s, i32 %type) #0 {
define internal i32 @dtls1_query_mtu(%struct.ssl_st.9204* %s) #0 {
define dso_local i32 @dtls1_min_mtu(%struct.ssl_st.9204* %s) #0 {
define internal void @dtls1_fix_message_header(%struct.ssl_st.9204* %s, i64 %frag_off, i64 %frag_len) #0 {
define internal i8* @dtls1_write_message_header(%struct.ssl_st.9204* %s, i8* %p) #0 {
define dso_local i32 @dtls1_link_min_mtu() #0 {
define dso_local i64 @dtls1_get_message(%struct.ssl_st.9204* %s, i32 %st1, i32 %stn, i32 %mt, i64 %max, i32* %ok) #0 {
define internal i64 @dtls1_get_message_fragment(%struct.ssl_st.9204* %s, i32 %st1, i32 %stn, i64 %max, i32* %ok) #0 {
define internal i32 @dtls1_retrieve_buffered_fragment(%struct.ssl_st.9204* %s, i64 %max, i32* %ok) #0 {
define dso_local void @dtls1_get_message_header(i8* %data, %struct.hm_header_st* %msg_hdr) #0 {
define internal i32 @dtls1_process_out_of_seq_message(%struct.ssl_st.9204* %s, %struct.hm_header_st* %msg_hdr, i32* %ok) #0 {
define internal i32 @dtls1_reassemble_fragment(%struct.ssl_st.9204* %s, %struct.hm_header_st* %msg_hdr, i32* %ok) #0 {
define internal i32 @dtls1_preprocess_fragment(%struct.ssl_st.9204* %s, %struct.hm_header_st* %msg_hdr, i32 %max) #0 {
define internal i64 @dtls1_max_handshake_message_len(%struct.ssl_st.9204* %s) #0 {
define internal %struct.hm_fragment_st* @dtls1_hm_fragment_new(i64 %frag_len, i32 %reassembly) #0 {
define dso_local i32 @dtls1_send_change_cipher_spec(%struct.ssl_st.9204* %s, i32 %a, i32 %b) #0 {
define internal void @dtls1_set_message_header_int(%struct.ssl_st.9204* %s, i8 zeroext %mt, i64 %len, i16 zeroext %seq_num, i64 %frag_off, i64 %frag_len) #0 {
define dso_local i32 @dtls1_buffer_message(%struct.ssl_st.9204* %s, i32 %is_ccs) #0 {
define dso_local i32 @dtls1_get_queue_priority(i16 zeroext %seq, i32 %is_ccs) #0 {
define dso_local i32 @dtls1_read_failed(%struct.ssl_st.9204* %s, i32 %code) #0 {
define dso_local i32 @dtls1_retransmit_buffered_messages(%struct.ssl_st.9204* %s) #0 {
define dso_local i32 @dtls1_retransmit_message(%struct.ssl_st.9204* %s, i16 zeroext %seq, i64 %frag_off, i32* %found) #0 {
define dso_local i8* @dtls1_set_message_header(%struct.ssl_st.9204* %s, i8* %p, i8 zeroext %mt, i64 %len, i64 %frag_off, i64 %frag_len) #0 {
define dso_local void @dtls1_get_ccs_header(i8* %data, %struct.ccs_header_st* %ccs_hdr) #0 {
define dso_local i32 @dtls1_shutdown(%struct.ssl_st.9204* %s) #0 {
define dso_local i32 @dtls1_process_heartbeat(%struct.ssl_st.9204* %s) #0 {
define dso_local i32 @dtls1_heartbeat(%struct.ssl_st.9204* %s) #0 {
define dso_local %struct.ssl_method_st.8503* @DTLSv1_method() #0 {
define internal %struct.ssl_method_st.8503* @dtls1_get_method(i32 %ver) #0 {
define dso_local %struct.ssl_method_st.8503* @DTLS_method() #0 {
define dso_local %struct.ssl_method_st.8503* @DTLSv1_2_method() #0 {
define dso_local i32 @CRYPTO_get_new_lockid(i8* %name) #0 {
define dso_local i32 @CRYPTO_num_locks() #0 {
define dso_local i32 @CRYPTO_get_new_dynlockid() #0 {
define dso_local void @CRYPTO_lock(i32 %mode, i32 %type, i8* %file, i32 %line) #0 {
define dso_local %struct.CRYPTO_dynlock_value* @CRYPTO_get_dynlock_value(i32 %i) #0 {
define dso_local void @OpenSSLDie(i8* %file, i32 %line, i8* %assertion) #0 {
define dso_local void @CRYPTO_destroy_dynlockid(i32 %i) #0 {
define dso_local void @OPENSSL_showfatal(i8* %fmta, ...) #0 {
define dso_local %struct.CRYPTO_dynlock_value* (i8*, i32)* @CRYPTO_get_dynlock_create_callback() #0 {
define dso_local void (i32, %struct.CRYPTO_dynlock_value*, i8*, i32)* @CRYPTO_get_dynlock_lock_callback() #0 {
define dso_local void (%struct.CRYPTO_dynlock_value*, i8*, i32)* @CRYPTO_get_dynlock_destroy_callback() #0 {
define dso_local void @CRYPTO_set_dynlock_create_callback(%struct.CRYPTO_dynlock_value* (i8*, i32)* %func) #0 {
define dso_local void @CRYPTO_set_dynlock_lock_callback(void (i32, %struct.CRYPTO_dynlock_value*, i8*, i32)* %func) #0 {
define dso_local void @CRYPTO_set_dynlock_destroy_callback(void (%struct.CRYPTO_dynlock_value*, i8*, i32)* %func) #0 {
define dso_local void (i32, i32, i8*, i32)* @CRYPTO_get_locking_callback() #0 {
define dso_local i32 (i32*, i32, i32, i8*, i32)* @CRYPTO_get_add_lock_callback() #0 {
define dso_local void @CRYPTO_set_locking_callback(void (i32, i32, i8*, i32)* %func) #0 {
define dso_local void @CRYPTO_set_add_lock_callback(i32 (i32*, i32, i32, i8*, i32)* %func) #0 {
define dso_local void @CRYPTO_THREADID_set_numeric(%struct.srtp_protection_profile_st* %id, i64 %val) #0 {
define dso_local void @CRYPTO_THREADID_set_pointer(%struct.srtp_protection_profile_st* %id, i8* %ptr) #0 {
define dso_local i32 @CRYPTO_THREADID_set_callback(void (%struct.srtp_protection_profile_st*)* %func) #0 {
define dso_local void (%struct.srtp_protection_profile_st*)* @CRYPTO_THREADID_get_callback() #0 {
define dso_local void @CRYPTO_THREADID_current(%struct.srtp_protection_profile_st* %id) #0 {
define dso_local i32 @CRYPTO_THREADID_cmp(%struct.srtp_protection_profile_st* %a, %struct.srtp_protection_profile_st* %b) #0 {
define dso_local void @CRYPTO_THREADID_cpy(%struct.srtp_protection_profile_st* %dest, %struct.srtp_protection_profile_st* %src) #0 {
define dso_local i64 @CRYPTO_THREADID_hash(%struct.srtp_protection_profile_st* %id) #0 {
define dso_local i64 ()* @CRYPTO_get_id_callback() #0 {
define dso_local void @CRYPTO_set_id_callback(i64 ()* %func) #0 {
define dso_local i64 @CRYPTO_thread_id() #0 {
define dso_local i32 @CRYPTO_add_lock(i32* %pointer, i32 %amount, i32 %type, i8* %file, i32 %line) #0 {
define dso_local i8* @CRYPTO_get_lock_name(i32 %type) #0 {
define dso_local i64* @OPENSSL_ia32cap_loc() #0 {
define dso_local void @OPENSSL_cpuid_setup() #0 {
define dso_local i32 @OPENSSL_isservice() #0 {
define dso_local i8* @OPENSSL_stderr() #0 {
define dso_local i32 @CRYPTO_memcmp(i8* %in_a, i8* %in_b, i64 %len) #0 {
define dso_local i32 @CRYPTO_set_mem_functions(i8* (i64)* %m, i8* (i8*, i64)* %r, void (i8*)* %f) #0 {
define internal i8* @default_malloc_ex(i64 %num, i8* %file, i32 %line) #0 {
define internal i8* @default_realloc_ex(i8* %str, i64 %num, i8* %file, i32 %line) #0 {
define internal i8* @default_malloc_locked_ex(i64 %num, i8* %file, i32 %line) #0 {
define dso_local i32 @CRYPTO_set_mem_ex_functions(i8* (i64, i8*, i32)* %m, i8* (i8*, i64, i8*, i32)* %r, void (i8*)* %f) #0 {
define dso_local i32 @CRYPTO_set_locked_mem_functions(i8* (i64)* %m, void (i8*)* %f) #0 {
define dso_local i32 @CRYPTO_set_locked_mem_ex_functions(i8* (i64, i8*, i32)* %m, void (i8*)* %f) #0 {
define dso_local i32 @CRYPTO_set_mem_debug_functions(void (i8*, i32, i8*, i32, i32)* %m, void (i8*, i8*, i32, i8*, i32, i32)* %r, void (i8*, i32)* %f, void (i64)* %so, i64 ()* %go) #0 {
define dso_local void @CRYPTO_get_mem_functions(i8* (i64)** %m, i8* (i8*, i64)** %r, void (i8*)** %f) #0 {
define dso_local void @CRYPTO_get_mem_ex_functions(i8* (i64, i8*, i32)** %m, i8* (i8*, i64, i8*, i32)** %r, void (i8*)** %f) #0 {
define dso_local void @CRYPTO_get_locked_mem_functions(i8* (i64)** %m, void (i8*)** %f) #0 {
define dso_local void @CRYPTO_get_locked_mem_ex_functions(i8* (i64, i8*, i32)** %m, void (i8*)** %f) #0 {
define dso_local void @CRYPTO_get_mem_debug_functions(void (i8*, i32, i8*, i32, i32)** %m, void (i8*, i8*, i32, i8*, i32, i32)** %r, void (i8*, i32)** %f, void (i64)** %so, i64 ()** %go) #0 {
define dso_local i8* @CRYPTO_malloc_locked(i32 %num, i8* %file, i32 %line) #0 {
define dso_local void @CRYPTO_free_locked(i8* %str) #0 {
define dso_local i8* @CRYPTO_malloc(i32 %num, i8* %file, i32 %line) #0 {
define dso_local i8* @CRYPTO_strdup(i8* %str, i8* %file, i32 %line) #0 {
define dso_local i8* @CRYPTO_realloc(i8* %str, i32 %num, i8* %file, i32 %line) #0 {
define dso_local i8* @CRYPTO_realloc_clean(i8* %str, i32 %old_len, i32 %num, i8* %file, i32 %line) #0 {
define dso_local void @CRYPTO_free(i8* %str) #0 {
define dso_local i8* @CRYPTO_remalloc(i8* %a, i32 %num, i8* %file, i32 %line) #0 {
define dso_local void @CRYPTO_set_mem_debug_options(i64 %bits) #0 {
define dso_local i64 @CRYPTO_get_mem_debug_options() #0 {
define dso_local i32 @CRYPTO_mem_ctrl(i32 %mode) #0 {
define dso_local i32 @CRYPTO_is_mem_check_on() #0 {
define dso_local void @CRYPTO_dbg_set_options(i64 %bits) #0 {
define dso_local i64 @CRYPTO_dbg_get_options() #0 {
define dso_local i32 @CRYPTO_push_info_(i8* %info, i8* %file, i32 %line) #0 {
define internal i64 @app_info_LHASH_HASH(i8* %arg) #0 {
define internal i32 @app_info_LHASH_COMP(i8* %arg1, i8* %arg2) #0 {
define internal i32 @app_info_cmp(i8* %a_void, i8* %b_void) #0 {
define internal i64 @app_info_hash(%struct.app_mem_info_st* %a) #0 {
define dso_local i32 @CRYPTO_pop_info() #0 {
define internal %struct.app_mem_info_st* @pop_info() #0 {
define dso_local i32 @CRYPTO_remove_all_info() #0 {
define dso_local void @CRYPTO_dbg_malloc(i8* %addr, i32 %num, i8* %file, i32 %line, i32 %before_p) #0 {
define internal i64 @mem_LHASH_HASH(i8* %arg) #0 {
define internal i32 @mem_LHASH_COMP(i8* %arg1, i8* %arg2) #0 {
define internal i32 @mem_cmp(%struct.mem_st* %a, %struct.mem_st* %b) #0 {
define internal i64 @mem_hash(%struct.mem_st* %a) #0 {
define dso_local void @CRYPTO_dbg_free(i8* %addr, i32 %before_p) #0 {
define internal void @app_info_free(%struct.app_mem_info_st* %inf) #0 {
define dso_local void @CRYPTO_dbg_realloc(i8* %addr1, i8* %addr2, i32 %num, i8* %file, i32 %line, i32 %before_p) #0 {
define dso_local void @CRYPTO_mem_leaks(%struct.bio_st* %b) #0 {
define internal void @print_leak_LHASH_DOALL_ARG(i8* %arg1, i8* %arg2) #0 {
define internal void @print_leak_doall_arg(%struct.mem_st* %m, %struct.mem_leak_st* %l) #0 {
define dso_local void @CRYPTO_mem_leaks_fp(%struct._IO_FILE* %fp) #0 {
define dso_local void @CRYPTO_mem_leaks_cb(i8* (i64, i8*, i32, i32, i8*)* %cb) #0 {
define internal void @cb_leak_LHASH_DOALL_ARG(i8* %arg1, i8* %arg2) #0 {
define internal void @cb_leak_doall_arg(%struct.mem_st* %m, i8* (i64, i8*, i32, i32, i8*)** %cb) #0 {
define dso_local i8* @SSLeay_version(i32 %t) #0 {
define dso_local i64 @SSLeay() #0 {
define dso_local %struct.st_CRYPTO_EX_DATA_IMPL* @CRYPTO_get_ex_data_implementation() #0 {
define internal void @impl_check() #0 {
define internal i32 @int_new_class() #0 {
define internal void @int_cleanup() #0 {
define internal i32 @int_get_new_index(i32 %class_index, i64 %argl, i8* %argp, i32 (i8*, i8*, %struct.crypto_ex_data_st*, i32, i64, i8*)* %new_func, i32 (%struct.crypto_ex_data_st*, %struct.crypto_ex_data_st*, i8*, i32, i64, i8*)* %dup_func, void (i8*, i8*, %struct.crypto_ex_data_st*, i32, i64, i8*)* %free_func) #0 {
define internal i32 @int_new_ex_data(i32 %class_index, i8* %obj, %struct.crypto_ex_data_st* %ad) #0 {
define internal i32 @int_dup_ex_data(i32 %class_index, %struct.crypto_ex_data_st* %to, %struct.crypto_ex_data_st* %from) #0 {
define internal void @int_free_ex_data(i32 %class_index, i8* %obj, %struct.crypto_ex_data_st* %ad) #0 {
define internal %struct.st_ex_class_item* @def_get_class(i32 %class_index) #0 {
define dso_local i8* @CRYPTO_get_ex_data(%struct.crypto_ex_data_st* %ad, i32 %idx) #0 {
define internal i32 @ex_data_check() #0 {
define internal i64 @ex_class_item_LHASH_HASH(i8* %arg) #0 {
define internal i32 @ex_class_item_LHASH_COMP(i8* %arg1, i8* %arg2) #0 {
define internal i32 @ex_class_item_cmp(%struct.st_ex_class_item* %a, %struct.st_ex_class_item* %b) #0 {
define internal i64 @ex_class_item_hash(%struct.st_ex_class_item* %a) #0 {
define dso_local i32 @CRYPTO_set_ex_data(%struct.crypto_ex_data_st* %ad, i32 %idx, i8* %val) #0 {
define internal i32 @def_add_index(%struct.st_ex_class_item* %item, i64 %argl, i8* %argp, i32 (i8*, i8*, %struct.crypto_ex_data_st*, i32, i64, i8*)* %new_func, i32 (%struct.crypto_ex_data_st*, %struct.crypto_ex_data_st*, i8*, i32, i64, i8*)* %dup_func, void (i8*, i8*, %struct.crypto_ex_data_st*, i32, i64, i8*)* %free_func) #0 {
define internal void @def_cleanup_cb(i8* %a_void) #0 {
define internal void @def_cleanup_util_cb(%struct.crypto_ex_data_func_st* %funcs) #0 {
define dso_local i32 @CRYPTO_set_ex_data_implementation(%struct.st_CRYPTO_EX_DATA_IMPL* %i) #0 {
define dso_local i32 @CRYPTO_ex_data_new_class() #0 {
define dso_local void @CRYPTO_cleanup_all_ex_data() #0 {
define dso_local i32 @CRYPTO_get_ex_new_index(i32 %class_index, i64 %argl, i8* %argp, i32 (i8*, i8*, %struct.crypto_ex_data_st*, i32, i64, i8*)* %new_func, i32 (%struct.crypto_ex_data_st*, %struct.crypto_ex_data_st*, i8*, i32, i64, i8*)* %dup_func, void (i8*, i8*, %struct.crypto_ex_data_st*, i32, i64, i8*)* %free_func) #0 {
define dso_local i32 @CRYPTO_new_ex_data(i32 %class_index, i8* %obj, %struct.crypto_ex_data_st* %ad) #0 {
define dso_local i32 @CRYPTO_dup_ex_data(i32 %class_index, %struct.crypto_ex_data_st* %to, %struct.crypto_ex_data_st* %from) #0 {
define dso_local void @CRYPTO_free_ex_data(i32 %class_index, i8* %obj, %struct.crypto_ex_data_st* %ad) #0 {
define dso_local i8* @OPENSSL_DIR_read(%struct.OPENSSL_dir_context_st** %ctx, i8* %directory) #0 {
define dso_local i32 @OPENSSL_DIR_end(%struct.OPENSSL_dir_context_st** %ctx) #0 {
define dso_local void @OPENSSL_init() #0 {
define dso_local void @OPENSSL_cleanse(i8* %ptr, i64 %len) #0 {
define dso_local i32 @OBJ_NAME_init() #0 {
define internal i64 @obj_name_LHASH_HASH(i8* %arg) #0 {
define internal i32 @obj_name_LHASH_COMP(i8* %arg1, i8* %arg2) #0 {
define internal i32 @obj_name_cmp(i8* %a_void, i8* %b_void) #0 {
define internal i64 @obj_name_hash(i8* %a_void) #0 {
define dso_local i32 @OBJ_NAME_new_index(i64 (i8*)* %hash_func, i32 (i8*, i8*)* %cmp_func, void (i8*, i32, i8*)* %free_func) #0 {
define dso_local i8* @OBJ_NAME_get(i8* %name, i32 %type) #0 {
define dso_local i32 @OBJ_NAME_add(i8* %name, i32 %type, i8* %data) #0 {
define dso_local i32 @OBJ_NAME_remove(i8* %name, i32 %type) #0 {
define dso_local void @OBJ_NAME_do_all(i32 %type, void (%struct.__va_list_tag*, i8*)* %fn, i8* %arg) #0 {
define internal void @do_all_fn_LHASH_DOALL_ARG(i8* %arg1, i8* %arg2) #0 {
define internal void @do_all_fn_doall_arg(%struct.__va_list_tag* %name, %struct.doall* %d) #0 {
define dso_local void @OBJ_NAME_do_all_sorted(i32 %type, void (%struct.__va_list_tag*, i8*)* %fn, i8* %arg) #0 {
define internal void @do_all_sorted_fn(%struct.__va_list_tag* %name, i8* %d_) #0 {
define internal i32 @do_all_sorted_cmp(i8* %n1_, i8* %n2_) #0 {
define dso_local void @OBJ_NAME_cleanup(i32 %type) #0 {
define internal void @names_lh_free_LHASH_DOALL(i8* %arg) #0 {
define internal void @name_funcs_free(%struct.name_funcs_st* %ptr) #0 {
define internal void @names_lh_free_doall(%struct.__va_list_tag* %onp) #0 {
define dso_local void @check_defer(i32 %nid) #0 {
define dso_local void @OBJ_cleanup() #0 {
define internal void @cleanup1_LHASH_DOALL(i8* %arg) #0 {
define internal void @cleanup2_LHASH_DOALL(i8* %arg) #0 {
define internal void @cleanup3_LHASH_DOALL(i8* %arg) #0 {
define internal void @cleanup3_doall(%struct.added_obj_st* %a) #0 {
define internal void @cleanup2_doall(%struct.added_obj_st* %a) #0 {
define internal void @cleanup1_doall(%struct.added_obj_st* %a) #0 {
define dso_local i32 @OBJ_new_nid(i32 %num) #0 {
define dso_local i32 @OBJ_add_object(%struct.asn1_object_st* %obj) #0 {
define internal i32 @init_added() #0 {
define internal i64 @added_obj_LHASH_HASH(i8* %arg) #0 {
define internal i32 @added_obj_LHASH_COMP(i8* %arg1, i8* %arg2) #0 {
define internal i32 @added_obj_cmp(%struct.added_obj_st* %ca, %struct.added_obj_st* %cb) #0 {
define internal i64 @added_obj_hash(%struct.added_obj_st* %ca) #0 {
define dso_local %struct.asn1_object_st* @OBJ_nid2obj(i32 %n) #0 {
define dso_local i8* @OBJ_nid2sn(i32 %n) #0 {
define dso_local i8* @OBJ_nid2ln(i32 %n) #0 {
define dso_local i32 @OBJ_obj2nid(%struct.asn1_object_st* %a) #0 {
define internal i32* @OBJ_bsearch_obj(%struct.asn1_object_st** %key, i32* %base, i32 %num) #0 {
define internal i32 @obj_cmp_BSEARCH_CMP_FN(i8* %a_, i8* %b_) #0 {
define dso_local i8* @OBJ_bsearch_(i8* %key, i8* %base, i32 %num, i32 %size, i32 (i8*, i8*)* %cmp) #0 {
define dso_local i8* @OBJ_bsearch_ex_(i8* %key, i8* %base_, i32 %num, i32 %size, i32 (i8*, i8*)* %cmp, i32 %flags) #0 {
define internal i32 @obj_cmp(%struct.asn1_object_st** %ap, i32* %bp) #0 {
define dso_local %struct.asn1_object_st* @OBJ_txt2obj(i8* %s, i32 %no_name) #0 {
define dso_local i32 @OBJ_sn2nid(i8* %s) #0 {
define dso_local i32 @OBJ_ln2nid(i8* %s) #0 {
define internal i32* @OBJ_bsearch_ln(%struct.asn1_object_st** %key, i32* %base, i32 %num) #0 {
define internal i32 @ln_cmp_BSEARCH_CMP_FN(i8* %a_, i8* %b_) #0 {
define internal i32 @ln_cmp(%struct.asn1_object_st** %a, i32* %b) #0 {
define internal i32* @OBJ_bsearch_sn(%struct.asn1_object_st** %key, i32* %base, i32 %num) #0 {
define internal i32 @sn_cmp_BSEARCH_CMP_FN(i8* %a_, i8* %b_) #0 {
define internal i32 @sn_cmp(%struct.asn1_object_st** %a, i32* %b) #0 {
define dso_local i32 @OBJ_obj2txt(i8* %buf, i32 %buf_len, %struct.asn1_object_st* %a, i32 %no_name) #0 {
define dso_local i32 @OBJ_txt2nid(i8* %s) #0 {
define dso_local i32 @OBJ_create_objects(%struct.bio_st.11416* %in) #0 {
define dso_local i32 @OBJ_create(i8* %oid, i8* %sn, i8* %ln) #0 {
define dso_local %struct.asn1_object_st* @OBJ_dup(%struct.asn1_object_st* %o) #0 {
define dso_local i32 @OBJ_cmp(%struct.asn1_object_st* %a, %struct.asn1_object_st* %b) #0 {
define dso_local i32 @OBJ_find_sigid_algs(i32 %signid, i32* %pdig_nid, i32* %ppkey_nid) #0 {
define internal %struct.dtls1_timeout_st* @OBJ_bsearch_sig(%struct.dtls1_timeout_st* %key, %struct.dtls1_timeout_st* %base, i32 %num) #0 {
define internal i32 @sig_cmp_BSEARCH_CMP_FN(i8* %a_, i8* %b_) #0 {
define internal i32 @sig_cmp(%struct.dtls1_timeout_st* %a, %struct.dtls1_timeout_st* %b) #0 {
define dso_local i32 @OBJ_find_sigid_by_algs(i32* %psignid, i32 %dig_nid, i32 %pkey_nid) #0 {
define internal %struct.dtls1_timeout_st** @OBJ_bsearch_sigx(%struct.dtls1_timeout_st** %key, %struct.dtls1_timeout_st** %base, i32 %num) #0 {
define internal i32 @sigx_cmp_BSEARCH_CMP_FN(i8* %a_, i8* %b_) #0 {
define internal i32 @sigx_cmp(%struct.dtls1_timeout_st** %a, %struct.dtls1_timeout_st** %b) #0 {
define dso_local i32 @OBJ_add_sigid(i32 %signid, i32 %dig_id, i32 %pkey_id) #0 {
define internal i32 @sig_sk_cmp(%struct.dtls1_timeout_st** %a, %struct.dtls1_timeout_st** %b) #0 {
define dso_local void @OBJ_sigid_free() #0 {
define internal void @sid_free(%struct.dtls1_timeout_st* %tt) #0 {
define dso_local i32 @MD5_Update(%struct.MD5state_st* %c, i8* %data_, i64 %len) #0 {
define dso_local void @md5_block_data_order(%struct.MD5state_st* %c, i8* %data_, i64 %num) #0 {
define dso_local void @MD5_Transform(%struct.MD5state_st* %c, i8* %data) #0 {
define dso_local i32 @MD5_Final(i8* %md, %struct.MD5state_st* %c) #0 {
define dso_local i32 @MD5_Init(%struct.MD5state_st* %c) #0 {
define dso_local i32 @SHA1_Update(%struct.SHAstate_st* %c, i8* %data_, i64 %len) #0 {
define internal void @sha1_block_data_order(%struct.SHAstate_st* %c, i8* %p, i64 %num) #0 {
define dso_local void @SHA1_Transform(%struct.SHAstate_st* %c, i8* %data) #0 {
define dso_local i32 @SHA1_Final(i8* %md, %struct.SHAstate_st* %c) #0 {
define dso_local i32 @SHA1_Init(%struct.SHAstate_st* %c) #0 {
define dso_local i32 @SHA224_Init(%struct.SHA256state_st* %c) #0 {
define dso_local i32 @SHA256_Init(%struct.SHA256state_st* %c) #0 {
define dso_local i8* @SHA224(i8* %d, i64 %n, i8* %md) #0 {
define dso_local i32 @SHA256_Update(%struct.SHA256state_st* %c, i8* %data_, i64 %len) #0 {
define dso_local i32 @SHA256_Final(i8* %md, %struct.SHA256state_st* %c) #0 {
define internal void @sha256_block_data_order(%struct.SHA256state_st* %ctx, i8* %in, i64 %num) #0 {
define dso_local i8* @SHA256(i8* %d, i64 %n, i8* %md) #0 {
define dso_local i32 @SHA224_Update(%struct.SHA256state_st* %c, i8* %data, i64 %len) #0 {
define dso_local i32 @SHA224_Final(i8* %md, %struct.SHA256state_st* %c) #0 {
define dso_local void @SHA256_Transform(%struct.SHA256state_st* %c, i8* %data) #0 {
define dso_local i32 @SHA384_Init(%struct.SHA512state_st* %c) #0 {
define dso_local i32 @SHA512_Init(%struct.SHA512state_st* %c) #0 {
define dso_local i32 @SHA512_Final(i8* %md, %struct.SHA512state_st* %c) #0 {
define internal void @sha512_block_data_order(%struct.SHA512state_st* %ctx, i8* %in, i64 %num) #0 {
define dso_local i32 @SHA384_Final(i8* %md, %struct.SHA512state_st* %c) #0 {
define dso_local i32 @SHA512_Update(%struct.SHA512state_st* %c, i8* %_data, i64 %len) #0 {
define dso_local i32 @SHA384_Update(%struct.SHA512state_st* %c, i8* %data, i64 %len) #0 {
define dso_local void @SHA512_Transform(%struct.SHA512state_st* %c, i8* %data) #0 {
define dso_local i8* @SHA384(i8* %d, i64 %n, i8* %md) #0 {
define dso_local i8* @SHA512(i8* %d, i64 %n, i8* %md) #0 {
define dso_local i32 @HMAC_Init_ex(%struct.hmac_ctx_st* %ctx, i8* %key, i32 %len, %struct.env_md_st* %md, %struct.engine_st* %impl) #0 {
define dso_local i32 @HMAC_Init(%struct.hmac_ctx_st* %ctx, i8* %key, i32 %len, %struct.env_md_st* %md) #0 {
define dso_local void @HMAC_CTX_init(%struct.hmac_ctx_st* %ctx) #0 {
define dso_local i32 @HMAC_Update(%struct.hmac_ctx_st* %ctx, i8* %data, i64 %len) #0 {
define dso_local i32 @HMAC_Final(%struct.hmac_ctx_st* %ctx, i8* %md, i32* %len) #0 {
define dso_local i32 @HMAC_CTX_copy(%struct.hmac_ctx_st* %dctx, %struct.hmac_ctx_st* %sctx) #0 {
define dso_local void @HMAC_CTX_cleanup(%struct.hmac_ctx_st* %ctx) #0 {
define dso_local i8* @HMAC(%struct.env_md_st* %evp_md, i8* %key, i32 %key_len, i8* %d, i64 %n, i8* %md, i32* %md_len) #0 {
define dso_local void @HMAC_CTX_set_flags(%struct.hmac_ctx_st* %ctx, i64 %flags) #0 {
define dso_local void @BN_set_params(i32 %mult, i32 %high, i32 %low, i32 %mont) #0 {
define dso_local i32 @BN_get_params(i32 %which) #0 {
define dso_local %struct.bignum_st* @BN_value_one() #0 {
define dso_local i32 @BN_num_bits_word(i64 %l) #0 {
define dso_local i32 @BN_num_bits(%struct.bignum_st* %a) #0 {
define dso_local void @BN_clear_free(%struct.bignum_st* %a) #0 {
define dso_local void @BN_free(%struct.bignum_st* %a) #0 {
define dso_local void @BN_init(%struct.bignum_st* %a) #0 {
define dso_local %struct.bignum_st* @BN_new() #0 {
define dso_local %struct.bignum_st* @bn_dup_expand(%struct.bignum_st* %b, i32 %words) #0 {
define internal i64* @bn_expand_internal(%struct.bignum_st* %b, i32 %words) #0 {
define dso_local %struct.bignum_st* @BN_dup(%struct.bignum_st* %a) #0 {
define dso_local %struct.bignum_st* @BN_copy(%struct.bignum_st* %a, %struct.bignum_st* %b) #0 {
define dso_local %struct.bignum_st* @bn_expand2(%struct.bignum_st* %b, i32 %words) #0 {
define dso_local void @BN_swap(%struct.bignum_st* %a, %struct.bignum_st* %b) #0 {
define dso_local void @BN_clear(%struct.bignum_st* %a) #0 {
define dso_local i64 @BN_get_word(%struct.bignum_st* %a) #0 {
define dso_local i32 @BN_set_word(%struct.bignum_st* %a, i64 %w) #0 {
define dso_local %struct.bignum_st* @BN_bin2bn(i8* %s, i32 %len, %struct.bignum_st* %ret) #0 {
define dso_local i32 @bn_bn2binpad(%struct.bignum_st* %a, i8* %to, i32 %tolen) #0 {
define internal i32 @bn2binpad(%struct.bignum_st* %a, i8* %to, i32 %tolen) #0 {
define dso_local i32 @BN_bn2bin(%struct.bignum_st* %a, i8* %to) #0 {
define dso_local i32 @BN_ucmp(%struct.bignum_st* %a, %struct.bignum_st* %b) #0 {
define dso_local i32 @BN_cmp(%struct.bignum_st* %a, %struct.bignum_st* %b) #0 {
define dso_local i32 @BN_set_bit(%struct.bignum_st* %a, i32 %n) #0 {
define dso_local i32 @BN_clear_bit(%struct.bignum_st* %a, i32 %n) #0 {
define dso_local i32 @BN_is_bit_set(%struct.bignum_st* %a, i32 %n) #0 {
define dso_local i32 @BN_mask_bits(%struct.bignum_st* %a, i32 %n) #0 {
define dso_local void @BN_set_negative(%struct.bignum_st* %a, i32 %b) #0 {
define dso_local i32 @bn_cmp_words(i64* %a, i64* %b, i32 %n) #0 {
define dso_local i32 @bn_cmp_part_words(i64* %a, i64* %b, i32 %cl, i32 %dl) #0 {
define dso_local void @BN_consttime_swap(i64 %condition, %struct.bignum_st* %a, %struct.bignum_st* %b, i32 %nwords) #0 {
define dso_local void @BN_CTX_init(%struct.bignum_ctx* %ctx) #0 {
define internal void @BN_POOL_reset(%struct.bignum_pool* %p) #0 {
define internal void @BN_STACK_reset(%struct.bignum_ctx_stack* %st) #0 {
define dso_local %struct.bignum_ctx* @BN_CTX_new() #0 {
define internal void @BN_POOL_init(%struct.bignum_pool* %p) #0 {
define internal void @BN_STACK_init(%struct.bignum_ctx_stack* %st) #0 {
define dso_local void @BN_CTX_free(%struct.bignum_ctx* %ctx) #0 {
define internal void @BN_STACK_finish(%struct.bignum_ctx_stack* %st) #0 {
define internal void @BN_POOL_finish(%struct.bignum_pool* %p) #0 {
define dso_local void @BN_CTX_start(%struct.bignum_ctx* %ctx) #0 {
define internal i32 @BN_STACK_push(%struct.bignum_ctx_stack* %st, i32 %idx) #0 {
define dso_local void @BN_CTX_end(%struct.bignum_ctx* %ctx) #0 {
define internal i32 @BN_STACK_pop(%struct.bignum_ctx_stack* %st) #0 {
define internal void @BN_POOL_release(%struct.bignum_pool* %p, i32 %num) #0 {
define dso_local %struct.bignum_st* @BN_CTX_get(%struct.bignum_ctx* %ctx) #0 {
define internal %struct.bignum_st* @BN_POOL_get(%struct.bignum_pool* %p) #0 {
define dso_local i8* @BN_bn2hex(%struct.bignum_st* %a) #0 {
define dso_local i8* @BN_bn2dec(%struct.bignum_st* %a) #0 {
define dso_local i32 @BN_hex2bn(%struct.bignum_st** %bn, i8* %a) #0 {
define dso_local i32 @BN_dec2bn(%struct.bignum_st** %bn, i8* %a) #0 {
define dso_local i32 @BN_asc2bn(%struct.bignum_st** %bn, i8* %a) #0 {
define dso_local i32 @BN_print_fp(%struct._IO_FILE* %fp, %struct.bignum_st* %a) #0 {
define dso_local i32 @BN_print(%struct.bio_st* %bp, %struct.bignum_st* %a) #0 {
define dso_local i8* @BN_options() #0 {
define dso_local i32 @BN_lshift1(%struct.bignum_st* %r, %struct.bignum_st* %a) #0 {
define dso_local i32 @BN_rshift1(%struct.bignum_st* %r, %struct.bignum_st* %a) #0 {
define dso_local i32 @BN_lshift(%struct.bignum_st* %r, %struct.bignum_st* %a, i32 %n) #0 {
define dso_local i32 @BN_rshift(%struct.bignum_st* %r, %struct.bignum_st* %a, i32 %n) #0 {
define dso_local i64 @BN_mod_word(%struct.bignum_st* %a, i64 %w) #0 {
define dso_local i64 @BN_div_word(%struct.bignum_st* %a, i64 %w) #0 {
define dso_local i32 @BN_add_word(%struct.bignum_st* %a, i64 %w) #0 {
define dso_local i32 @BN_sub_word(%struct.bignum_st* %a, i64 %w) #0 {
define dso_local i32 @BN_mul_word(%struct.bignum_st* %a, i64 %w) #0 {
define dso_local i64 @bn_mul_add_words(i64* %rp, i64* %ap, i32 %num, i64 %w) #0 {
define dso_local i64 @bn_mul_words(i64* %rp, i64* %ap, i32 %num, i64 %w) #0 {
define dso_local void @bn_sqr_words(i64* %r, i64* %a, i32 %n) #0 {
define dso_local i64 @bn_div_words(i64 %h, i64 %l, i64 %d) #0 {
define dso_local i64 @bn_add_words(i64* %r, i64* %a, i64* %b, i32 %n) #0 {
define dso_local i64 @bn_sub_words(i64* %r, i64* %a, i64* %b, i32 %n) #0 {
define dso_local void @bn_mul_comba8(i64* %r, i64* %a, i64* %b) #0 {
define dso_local void @bn_mul_comba4(i64* %r, i64* %a, i64* %b) #0 {
define dso_local void @bn_sqr_comba8(i64* %r, i64* %a) #0 {
define dso_local void @bn_sqr_comba4(i64* %r, i64* %a) #0 {
define dso_local i32 @bn_mul_mont(i64* %rp, i64* %ap, i64* %bp, i64* %np, i64* %n0, i32 %num) #0 {
define dso_local %struct.ec_group_st* @EC_GROUP_new(%struct.ec_method_st* %meth) #0 {
define dso_local void @EC_GROUP_free(%struct.ec_group_st* %group) #0 {
define dso_local void @EC_EX_DATA_free_all_data(%struct.ec_extra_data_st** %ex_data) #0 {
define dso_local void @EC_POINT_free(%struct.ec_point_st* %point) #0 {
define dso_local void @EC_GROUP_clear_free(%struct.ec_group_st* %group) #0 {
define dso_local void @EC_EX_DATA_clear_free_all_data(%struct.ec_extra_data_st** %ex_data) #0 {
define dso_local void @EC_POINT_clear_free(%struct.ec_point_st* %point) #0 {
define dso_local i32 @EC_GROUP_copy(%struct.ec_group_st* %dest, %struct.ec_group_st* %src) #0 {
define dso_local i32 @EC_EX_DATA_set_data(%struct.ec_extra_data_st** %ex_data, i8* %data, i8* (i8*)* %dup_func, void (i8*)* %free_func, void (i8*)* %clear_free_func) #0 {
define dso_local %struct.ec_point_st* @EC_POINT_new(%struct.ec_group_st* %group) #0 {
define dso_local i32 @EC_POINT_copy(%struct.ec_point_st* %dest, %struct.ec_point_st* %src) #0 {
define dso_local %struct.ec_group_st* @EC_GROUP_dup(%struct.ec_group_st* %a) #0 {
define dso_local %struct.ec_method_st* @EC_GROUP_method_of(%struct.ec_group_st* %group) #0 {
define dso_local i32 @EC_METHOD_get_field_type(%struct.ec_method_st* %meth) #0 {
define dso_local i32 @EC_GROUP_set_generator(%struct.ec_group_st* %group, %struct.ec_point_st* %generator, %struct.bignum_st* %order, %struct.bignum_st* %cofactor) #0 {
define internal i32 @ec_precompute_mont_data(%struct.ec_group_st* %group) #0 {
define dso_local %struct.ec_point_st* @EC_GROUP_get0_generator(%struct.ec_group_st* %group) #0 {
define dso_local %struct.bn_mont_ctx_st* @EC_GROUP_get_mont_data(%struct.ec_group_st* %group) #0 {
define dso_local i32 @EC_GROUP_get_order(%struct.ec_group_st* %group, %struct.bignum_st* %order, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @EC_GROUP_get_cofactor(%struct.ec_group_st* %group, %struct.bignum_st* %cofactor, %struct.bignum_ctx* %ctx) #0 {
define dso_local void @EC_GROUP_set_curve_name(%struct.ec_group_st* %group, i32 %nid) #0 {
define dso_local i32 @EC_GROUP_get_curve_name(%struct.ec_group_st* %group) #0 {
define dso_local void @EC_GROUP_set_asn1_flag(%struct.ec_group_st* %group, i32 %flag) #0 {
define dso_local i32 @EC_GROUP_get_asn1_flag(%struct.ec_group_st* %group) #0 {
define dso_local void @EC_GROUP_set_point_conversion_form(%struct.ec_group_st* %group, i32 %form) #0 {
define dso_local i32 @EC_GROUP_get_point_conversion_form(%struct.ec_group_st* %group) #0 {
define dso_local i64 @EC_GROUP_set_seed(%struct.ec_group_st* %group, i8* %p, i64 %len) #0 {
define dso_local i8* @EC_GROUP_get0_seed(%struct.ec_group_st* %group) #0 {
define dso_local i64 @EC_GROUP_get_seed_len(%struct.ec_group_st* %group) #0 {
define dso_local i32 @EC_GROUP_set_curve_GFp(%struct.ec_group_st* %group, %struct.bignum_st* %p, %struct.bignum_st* %a, %struct.bignum_st* %b, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @EC_GROUP_get_curve_GFp(%struct.ec_group_st* %group, %struct.bignum_st* %p, %struct.bignum_st* %a, %struct.bignum_st* %b, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @EC_GROUP_set_curve_GF2m(%struct.ec_group_st* %group, %struct.bignum_st* %p, %struct.bignum_st* %a, %struct.bignum_st* %b, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @EC_GROUP_get_curve_GF2m(%struct.ec_group_st* %group, %struct.bignum_st* %p, %struct.bignum_st* %a, %struct.bignum_st* %b, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @EC_GROUP_get_degree(%struct.ec_group_st* %group) #0 {
define dso_local i32 @EC_GROUP_check_discriminant(%struct.ec_group_st* %group, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @EC_GROUP_cmp(%struct.ec_group_st* %a, %struct.ec_group_st* %b, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @EC_POINT_cmp(%struct.ec_group_st* %group, %struct.ec_point_st* %a, %struct.ec_point_st* %b, %struct.bignum_ctx* %ctx) #0 {
define dso_local i8* @EC_EX_DATA_get_data(%struct.ec_extra_data_st* %ex_data, i8* (i8*)* %dup_func, void (i8*)* %free_func, void (i8*)* %clear_free_func) #0 {
define dso_local void @EC_EX_DATA_free_data(%struct.ec_extra_data_st** %ex_data, i8* (i8*)* %dup_func, void (i8*)* %free_func, void (i8*)* %clear_free_func) #0 {
define dso_local void @EC_EX_DATA_clear_free_data(%struct.ec_extra_data_st** %ex_data, i8* (i8*)* %dup_func, void (i8*)* %free_func, void (i8*)* %clear_free_func) #0 {
define dso_local %struct.ec_point_st* @EC_POINT_dup(%struct.ec_point_st* %a, %struct.ec_group_st* %group) #0 {
define dso_local %struct.ec_method_st* @EC_POINT_method_of(%struct.ec_point_st* %point) #0 {
define dso_local i32 @EC_POINT_set_to_infinity(%struct.ec_group_st* %group, %struct.ec_point_st* %point) #0 {
define dso_local i32 @EC_POINT_set_Jprojective_coordinates_GFp(%struct.ec_group_st* %group, %struct.ec_point_st* %point, %struct.bignum_st* %x, %struct.bignum_st* %y, %struct.bignum_st* %z, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @EC_POINT_get_Jprojective_coordinates_GFp(%struct.ec_group_st* %group, %struct.ec_point_st* %point, %struct.bignum_st* %x, %struct.bignum_st* %y, %struct.bignum_st* %z, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @EC_POINT_set_affine_coordinates_GFp(%struct.ec_group_st* %group, %struct.ec_point_st* %point, %struct.bignum_st* %x, %struct.bignum_st* %y, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @EC_POINT_set_affine_coordinates_GF2m(%struct.ec_group_st* %group, %struct.ec_point_st* %point, %struct.bignum_st* %x, %struct.bignum_st* %y, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @EC_POINT_get_affine_coordinates_GFp(%struct.ec_group_st* %group, %struct.ec_point_st* %point, %struct.bignum_st* %x, %struct.bignum_st* %y, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @EC_POINT_get_affine_coordinates_GF2m(%struct.ec_group_st* %group, %struct.ec_point_st* %point, %struct.bignum_st* %x, %struct.bignum_st* %y, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @EC_POINT_add(%struct.ec_group_st* %group, %struct.ec_point_st* %r, %struct.ec_point_st* %a, %struct.ec_point_st* %b, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @EC_POINT_dbl(%struct.ec_group_st* %group, %struct.ec_point_st* %r, %struct.ec_point_st* %a, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @EC_POINT_invert(%struct.ec_group_st* %group, %struct.ec_point_st* %a, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @EC_POINT_is_at_infinity(%struct.ec_group_st* %group, %struct.ec_point_st* %point) #0 {
define dso_local i32 @EC_POINT_is_on_curve(%struct.ec_group_st* %group, %struct.ec_point_st* %point, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @EC_POINT_make_affine(%struct.ec_group_st* %group, %struct.ec_point_st* %point, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @EC_POINTs_make_affine(%struct.ec_group_st* %group, i64 %num, %struct.ec_point_st** %points, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @EC_POINTs_mul(%struct.ec_group_st* %group, %struct.ec_point_st* %r, %struct.bignum_st* %scalar, i64 %num, %struct.ec_point_st** %points, %struct.bignum_st** %scalars, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @EC_POINT_mul(%struct.ec_group_st* %group, %struct.ec_point_st* %r, %struct.bignum_st* %g_scalar, %struct.ec_point_st* %point, %struct.bignum_st* %p_scalar, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @EC_GROUP_precompute_mult(%struct.ec_group_st* %group, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @EC_GROUP_have_precompute_mult(%struct.ec_group_st* %group) #0 {
define dso_local i32 @ec_wNAF_mul(%struct.ec_group_st.11455* %group, %struct.ec_point_st.11451* %r, %struct.bignum_st* %scalar, i64 %num, %struct.ec_point_st.11451** %points, %struct.bignum_st** %scalars, %struct.bignum_ctx* %ctx) #0 {
define internal i32 @ec_mul_consttime(%struct.ec_group_st.11455* %group, %struct.ec_point_st.11451* %r, %struct.bignum_st* %scalar, %struct.ec_point_st.11451* %point, %struct.bignum_ctx* %ctx) #0 {
define internal i8* @ec_pre_comp_dup(i8* %src_) #0 {
define internal void @ec_pre_comp_free(i8* %pre_) #0 {
define internal void @ec_pre_comp_clear_free(i8* %pre_) #0 {
define internal i8* @compute_wNAF(%struct.bignum_st* %scalar, i32 %w, i64* %ret_len) #0 {
define dso_local i32 @ec_wNAF_precompute_mult(%struct.ec_group_st.11455* %group, %struct.bignum_ctx* %ctx) #0 {
define internal %struct.ec_pre_comp_st* @ec_pre_comp_new(%struct.ec_group_st.11455* %group) #0 {
define dso_local i32 @ec_wNAF_have_precompute_mult(%struct.ec_group_st.11455* %group) #0 {
define dso_local %struct.ec_group_st* @EC_GROUP_new_by_curve_name(i32 %nid) #0 {
define internal %struct.ec_group_st* @ec_group_new_from_data(%struct._ec_list_element_st* byval align 8 %curve) #0 {
define dso_local i64 @EC_get_builtin_curves(%struct.ngx_variable_value_t* %r, i64 %nitems) #0 {
define dso_local i8* @EC_curve_nid2nist(i32 %nid) #0 {
define dso_local i32 @EC_curve_nist2nid(i8* %name) #0 {
define dso_local %struct.ec_key_st* @EC_KEY_new() #0 {
define dso_local %struct.ec_key_st* @EC_KEY_new_by_curve_name(i32 %nid) #0 {
define dso_local void @EC_KEY_free(%struct.ec_key_st* %r) #0 {
define dso_local %struct.ec_key_st* @EC_KEY_copy(%struct.ec_key_st* %dest, %struct.ec_key_st* %src) #0 {
define dso_local %struct.ec_key_st* @EC_KEY_dup(%struct.ec_key_st* %ec_key) #0 {
define dso_local i32 @EC_KEY_up_ref(%struct.ec_key_st* %r) #0 {
define dso_local i32 @EC_KEY_generate_key(%struct.ec_key_st* %eckey) #0 {
define dso_local i32 @EC_KEY_check_key(%struct.ec_key_st* %eckey) #0 {
define dso_local i32 @EC_KEY_set_public_key_affine_coordinates(%struct.ec_key_st* %key, %struct.bignum_st* %x, %struct.bignum_st* %y) #0 {
define dso_local i32 @EC_KEY_set_public_key(%struct.ec_key_st* %key, %struct.ec_point_st* %pub_key) #0 {
define dso_local %struct.ec_group_st* @EC_KEY_get0_group(%struct.ec_key_st* %key) #0 {
define dso_local i32 @EC_KEY_set_group(%struct.ec_key_st* %key, %struct.ec_group_st* %group) #0 {
define dso_local %struct.bignum_st* @EC_KEY_get0_private_key(%struct.ec_key_st* %key) #0 {
define dso_local i32 @EC_KEY_set_private_key(%struct.ec_key_st* %key, %struct.bignum_st* %priv_key) #0 {
define dso_local %struct.ec_point_st* @EC_KEY_get0_public_key(%struct.ec_key_st* %key) #0 {
define dso_local i32 @EC_KEY_get_enc_flags(%struct.ec_key_st* %key) #0 {
define dso_local void @EC_KEY_set_enc_flags(%struct.ec_key_st* %key, i32 %flags) #0 {
define dso_local i32 @EC_KEY_get_conv_form(%struct.ec_key_st* %key) #0 {
define dso_local void @EC_KEY_set_conv_form(%struct.ec_key_st* %key, i32 %cform) #0 {
define dso_local i8* @EC_KEY_get_key_method_data(%struct.ec_key_st* %key, i8* (i8*)* %dup_func, void (i8*)* %free_func, void (i8*)* %clear_free_func) #0 {
define dso_local i8* @EC_KEY_insert_key_method_data(%struct.ec_key_st* %key, i8* %data, i8* (i8*)* %dup_func, void (i8*)* %free_func, void (i8*)* %clear_free_func) #0 {
define dso_local void @EC_KEY_set_asn1_flag(%struct.ec_key_st* %key, i32 %flag) #0 {
define dso_local i32 @EC_KEY_precompute_mult(%struct.ec_key_st* %key, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @EC_KEY_get_flags(%struct.ec_key_st* %key) #0 {
define dso_local void @EC_KEY_set_flags(%struct.ec_key_st* %key, i32 %flags) #0 {
define dso_local void @EC_KEY_clear_flags(%struct.ec_key_st* %key, i32 %flags) #0 {
define dso_local i32 @EC_POINT_set_compressed_coordinates_GFp(%struct.ec_group_st.11481* %group, %struct.ec_point_st.11477* %point, %struct.bignum_st* %x, i32 %y_bit, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @EC_POINT_set_compressed_coordinates_GF2m(%struct.ec_group_st.11481* %group, %struct.ec_point_st.11477* %point, %struct.bignum_st* %x, i32 %y_bit, %struct.bignum_ctx* %ctx) #0 {
define dso_local i64 @EC_POINT_point2oct(%struct.ec_group_st.11481* %group, %struct.ec_point_st.11477* %point, i32 %form, i8* %buf, i64 %len, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @EC_POINT_oct2point(%struct.ec_group_st.11481* %group, %struct.ec_point_st.11477* %point, i8* %buf, i64 %len, %struct.bignum_ctx* %ctx) #0 {
define dso_local %struct.rsa_st* @RSA_new() #0 {
define dso_local %struct.rsa_st* @RSA_new_method(%struct.engine_st* %engine) #0 {
define dso_local %struct.rsa_meth_st* @RSA_get_default_method() #0 {
define dso_local void @RSA_set_default_method(%struct.rsa_meth_st* %meth) #0 {
define dso_local %struct.rsa_meth_st* @RSA_get_method(%struct.rsa_st* %rsa) #0 {
define dso_local i32 @RSA_set_method(%struct.rsa_st* %rsa, %struct.rsa_meth_st* %meth) #0 {
define dso_local void @RSA_free(%struct.rsa_st* %r) #0 {
define dso_local i32 @RSA_up_ref(%struct.rsa_st* %r) #0 {
define dso_local i32 @RSA_get_ex_new_index(i64 %argl, i8* %argp, i32 (i8*, i8*, %struct.crypto_ex_data_st*, i32, i64, i8*)* %new_func, i32 (%struct.crypto_ex_data_st*, %struct.crypto_ex_data_st*, i8*, i32, i64, i8*)* %dup_func, void (i8*, i8*, %struct.crypto_ex_data_st*, i32, i64, i8*)* %free_func) #0 {
define dso_local i32 @RSA_set_ex_data(%struct.rsa_st* %r, i32 %idx, i8* %arg) #0 {
define dso_local i8* @RSA_get_ex_data(%struct.rsa_st* %r, i32 %idx) #0 {
define dso_local i32 @RSA_memory_lock(%struct.rsa_st* %r) #0 {
define dso_local i32 @RSA_sign(i32 %type, i8* %m, i32 %m_len, i8* %sigret, i32* %siglen, %struct.rsa_st* %rsa) #0 {
define dso_local i32 @int_rsa_verify(i32 %dtype, i8* %m, i32 %m_len, i8* %rm, i64* %prm_len, i8* %sigbuf, i64 %siglen, %struct.rsa_st* %rsa) #0 {
define internal i32 @rsa_check_digestinfo(%struct.X509_sig_st* %sig, i8* %dinfo, i32 %dinfolen) #0 {
define dso_local i32 @RSA_verify(i32 %dtype, i8* %m, i32 %m_len, i8* %sigbuf, i32 %siglen, %struct.rsa_st* %rsa) #0 {
define dso_local %struct.rsa_pss_params_st* @d2i_RSA_PSS_PARAMS(%struct.rsa_pss_params_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_RSA_PSS_PARAMS(%struct.rsa_pss_params_st* %a, i8** %out) #0 {
define dso_local %struct.rsa_pss_params_st* @RSA_PSS_PARAMS_new() #0 {
define dso_local void @RSA_PSS_PARAMS_free(%struct.rsa_pss_params_st* %a) #0 {
define dso_local %struct.rsa_oaep_params_st* @d2i_RSA_OAEP_PARAMS(%struct.rsa_oaep_params_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_RSA_OAEP_PARAMS(%struct.rsa_oaep_params_st* %a, i8** %out) #0 {
define dso_local %struct.rsa_oaep_params_st* @RSA_OAEP_PARAMS_new() #0 {
define dso_local void @RSA_OAEP_PARAMS_free(%struct.rsa_oaep_params_st* %a) #0 {
define dso_local %struct.rsa_st* @d2i_RSAPrivateKey(%struct.rsa_st** %a, i8** %in, i64 %len) #0 {
define internal i32 @rsa_cb(i32 %operation, %struct.ASN1_VALUE_st** %pval, %struct.ASN1_ITEM_st* %it, i8* %exarg) #0 {
define dso_local i32 @i2d_RSAPrivateKey(%struct.rsa_st* %a, i8** %out) #0 {
define dso_local %struct.rsa_st* @d2i_RSAPublicKey(%struct.rsa_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_RSAPublicKey(%struct.rsa_st* %a, i8** %out) #0 {
define dso_local %struct.rsa_st* @RSAPublicKey_dup(%struct.rsa_st* %rsa) #0 {
define dso_local %struct.rsa_st* @RSAPrivateKey_dup(%struct.rsa_st* %rsa) #0 {
define dso_local %struct.rsa_st* @RSA_generate_key(i32 %bits, i64 %e_value, void (i32, i32, i8*)* %callback, i8* %cb_arg) #0 {
define dso_local i32 @RSA_size(%struct.rsa_st* %r) #0 {
define dso_local i32 @RSA_public_encrypt(i32 %flen, i8* %from, i8* %to, %struct.rsa_st* %rsa, i32 %padding) #0 {
define dso_local i32 @RSA_private_encrypt(i32 %flen, i8* %from, i8* %to, %struct.rsa_st* %rsa, i32 %padding) #0 {
define dso_local i32 @RSA_private_decrypt(i32 %flen, i8* %from, i8* %to, %struct.rsa_st* %rsa, i32 %padding) #0 {
define dso_local i32 @RSA_public_decrypt(i32 %flen, i8* %from, i8* %to, %struct.rsa_st* %rsa, i32 %padding) #0 {
define dso_local i32 @RSA_flags(%struct.rsa_st* %r) #0 {
define dso_local void @RSA_blinding_off(%struct.rsa_st* %rsa) #0 {
define dso_local i32 @RSA_blinding_on(%struct.rsa_st* %rsa, %struct.bignum_ctx* %ctx) #0 {
define dso_local %struct.bn_blinding_st* @RSA_setup_blinding(%struct.rsa_st* %rsa, %struct.bignum_ctx* %in_ctx) #0 {
define internal %struct.bignum_st* @rsa_get_public_exp(%struct.bignum_st* %d, %struct.bignum_st* %p, %struct.bignum_st* %q, %struct.bignum_ctx* %ctx) #0 {
define dso_local %struct.ECDSA_SIG_st* @ECDSA_do_sign(i8* %dgst, i32 %dlen, %struct.ec_key_st* %eckey) #0 {
define dso_local %struct.ECDSA_SIG_st* @ECDSA_do_sign_ex(i8* %dgst, i32 %dlen, %struct.bignum_st* %kinv, %struct.bignum_st* %rp, %struct.ec_key_st* %eckey) #0 {
define dso_local i32 @ECDSA_sign(i32 %type, i8* %dgst, i32 %dlen, i8* %sig, i32* %siglen, %struct.ec_key_st* %eckey) #0 {
define dso_local i32 @ECDSA_sign_ex(i32 %type, i8* %dgst, i32 %dlen, i8* %sig, i32* %siglen, %struct.bignum_st* %kinv, %struct.bignum_st* %r, %struct.ec_key_st* %eckey) #0 {
define dso_local i32 @ECDSA_sign_setup(%struct.ec_key_st* %eckey, %struct.bignum_ctx* %ctx_in, %struct.bignum_st** %kinvp, %struct.bignum_st** %rp) #0 {
define dso_local i32 @ECDSA_do_verify(i8* %dgst, i32 %dgst_len, %struct.ECDSA_SIG_st* %sig, %struct.ec_key_st* %eckey) #0 {
define dso_local i32 @ECDSA_verify(i32 %type, i8* %dgst, i32 %dgst_len, i8* %sigbuf, i32 %sig_len, %struct.ec_key_st* %eckey) #0 {
define dso_local i32 @DH_generate_key(%struct.dh_st.11574* %dh) #0 {
define dso_local i32 @DH_compute_key(i8* %key, %struct.bignum_st* %pub_key, %struct.dh_st.11574* %dh) #0 {
define dso_local i32 @DH_compute_key_padded(i8* %key, %struct.bignum_st* %pub_key, %struct.dh_st.11574* %dh) #0 {
define dso_local %struct.dh_method.11572* @DH_OpenSSL() #0 {
define internal i32 @generate_key(%struct.dh_st.11574* %dh) #0 {
define internal i32 @compute_key(i8* %key, %struct.bignum_st* %pub_key, %struct.dh_st.11574* %dh) #0 {
define internal i32 @dh_bn_mod_exp(%struct.dh_st.11574* %dh, %struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %p, %struct.bignum_st* %m, %struct.bignum_ctx* %ctx, %struct.bn_mont_ctx_st* %m_ctx) #0 {
define internal i32 @dh_init(%struct.dh_st.11574* %dh) #0 {
define internal i32 @dh_finish(%struct.dh_st.11574* %dh) #0 {
define dso_local void @DH_set_default_method(%struct.dh_method* %meth) #0 {
define dso_local %struct.dh_method* @DH_get_default_method() #0 {
define dso_local i32 @DH_set_method(%struct.dh_st* %dh, %struct.dh_method* %meth) #0 {
define dso_local %struct.dh_st* @DH_new() #0 {
define dso_local %struct.dh_st* @DH_new_method(%struct.engine_st* %engine) #0 {
define dso_local void @DH_free(%struct.dh_st* %r) #0 {
define dso_local i32 @DH_up_ref(%struct.dh_st* %r) #0 {
define dso_local i32 @DH_get_ex_new_index(i64 %argl, i8* %argp, i32 (i8*, i8*, %struct.crypto_ex_data_st*, i32, i64, i8*)* %new_func, i32 (%struct.crypto_ex_data_st*, %struct.crypto_ex_data_st*, i8*, i32, i64, i8*)* %dup_func, void (i8*, i8*, %struct.crypto_ex_data_st*, i32, i64, i8*)* %free_func) #0 {
define dso_local i32 @DH_set_ex_data(%struct.dh_st* %d, i32 %idx, i8* %arg) #0 {
define dso_local i8* @DH_get_ex_data(%struct.dh_st* %d, i32 %idx) #0 {
define dso_local i32 @DH_size(%struct.dh_st* %dh) #0 {
define dso_local i32 @DH_check(%struct.dh_st* %dh, i32* %ret) #0 {
define dso_local i32 @DH_check_pub_key(%struct.dh_st* %dh, %struct.bignum_st* %pub_key, i32* %ret) #0 {
define dso_local %struct.dh_st* @DHparams_dup(%struct.dh_st* %dh) #0 {
define internal i32 @int_dh_param_copy(%struct.dh_st* %to, %struct.dh_st* %from, i32 %is_x942) #0 {
define internal i32 @int_dh_bn_cpy(%struct.bignum_st** %dst, %struct.bignum_st* %src) #0 {
define dso_local i32 @DHparams_print(%struct.bio_st* %bp, %struct.dh_st* %x) #0 {
define internal i32 @do_dh_print(%struct.bio_st* %bp, %struct.dh_st* %x, i32 %indent, %struct.asn1_pctx_st* %ctx, i32 %ptype) #0 {
define internal void @update_buflen(%struct.bignum_st* %b, i64* %pbuflen) #0 {
define internal i32 @dh_pub_decode(%struct.evp_pkey_st* %pkey, %struct.X509_pubkey_st* %pubkey) #0 {
define internal i32 @dh_pub_encode(%struct.X509_pubkey_st* %pk, %struct.evp_pkey_st* %pkey) #0 {
define internal i32 @dh_pub_cmp(%struct.evp_pkey_st* %a, %struct.evp_pkey_st* %b) #0 {
define internal i32 @dh_public_print(%struct.bio_st* %bp, %struct.evp_pkey_st* %pkey, i32 %indent, %struct.asn1_pctx_st* %ctx) #0 {
define internal i32 @dh_priv_decode(%struct.evp_pkey_st* %pkey, %struct.pkcs8_priv_key_info_st* %p8) #0 {
define internal i32 @dh_priv_encode(%struct.pkcs8_priv_key_info_st* %p8, %struct.evp_pkey_st* %pkey) #0 {
define internal i32 @dh_private_print(%struct.bio_st* %bp, %struct.evp_pkey_st* %pkey, i32 %indent, %struct.asn1_pctx_st* %ctx) #0 {
define internal i32 @int_dh_size(%struct.evp_pkey_st* %pkey) #0 {
define internal i32 @dh_bits(%struct.evp_pkey_st* %pkey) #0 {
define internal i32 @dh_param_decode(%struct.evp_pkey_st* %pkey, i8** %pder, i32 %derlen) #0 {
define internal i32 @dh_param_encode(%struct.evp_pkey_st* %pkey, i8** %pder) #0 {
define internal i32 @dh_missing_parameters(%struct.evp_pkey_st* %a) #0 {
define internal i32 @dh_copy_parameters(%struct.evp_pkey_st* %to, %struct.evp_pkey_st* %from) #0 {
define internal i32 @dh_cmp_parameters(%struct.evp_pkey_st* %a, %struct.evp_pkey_st* %b) #0 {
define internal i32 @dh_param_print(%struct.bio_st* %bp, %struct.evp_pkey_st* %pkey, i32 %indent, %struct.asn1_pctx_st* %ctx) #0 {
define internal void @int_dh_free(%struct.evp_pkey_st* %pkey) #0 {
define internal i32 @dh_pkey_ctrl(%struct.evp_pkey_st* %pkey, i32 %op, i64 %arg1, i8* %arg2) #0 {
define internal i32 @dh_cms_decrypt(%struct.CMS_RecipientInfo_st* %ri) #0 {
define internal i32 @dh_cms_encrypt(%struct.CMS_RecipientInfo_st* %ri) #0 {
define internal i32 @dh_cms_set_peerkey(%struct.evp_pkey_ctx_st* %pctx, %struct.X509_algor_st* %alg, %struct.asn1_string_st* %pubkey) #0 {
define internal i32 @dh_cms_set_shared_info(%struct.evp_pkey_ctx_st* %pctx, %struct.CMS_RecipientInfo_st* %ri) #0 {
define internal i32 @i2d_dhp(%struct.evp_pkey_st* %pkey, %struct.dh_st* %a, i8** %pp) #0 {
define internal %struct.dh_st* @d2i_dhp(%struct.evp_pkey_st* %pkey, i8** %pp, i64 %length) #0 {
define dso_local i32 @ECDH_compute_key(i8* %out, i64 %outlen, %struct.ec_point_st* %pub_key, %struct.ec_key_st* %eckey, i8* (i8*, i64, i8*, i64*)* %KDF) #0 {
define dso_local %struct.engine_st* @ENGINE_new() #0 {
define dso_local void @engine_set_all_null(%struct.engine_st* %e) #0 {
define dso_local i32 @engine_free_util(%struct.engine_st* %e, i32 %locked) #0 {
define dso_local i32 @ENGINE_free(%struct.engine_st* %e) #0 {
define dso_local void @engine_cleanup_add_first(void ()* %cb) #0 {
define internal i32 @int_cleanup_check(i32 %create) #0 {
define internal %struct.st_engine_cleanup_item* @int_cleanup_item(void ()* %cb) #0 {
define dso_local void @engine_cleanup_add_last(void ()* %cb) #0 {
define dso_local void @ENGINE_cleanup() #0 {
define internal void @engine_cleanup_cb_free(%struct.st_engine_cleanup_item* %item) #0 {
define dso_local i32 @ENGINE_get_ex_new_index(i64 %argl, i8* %argp, i32 (i8*, i8*, %struct.crypto_ex_data_st*, i32, i64, i8*)* %new_func, i32 (%struct.crypto_ex_data_st*, %struct.crypto_ex_data_st*, i8*, i32, i64, i8*)* %dup_func, void (i8*, i8*, %struct.crypto_ex_data_st*, i32, i64, i8*)* %free_func) #0 {
define dso_local i32 @ENGINE_set_ex_data(%struct.engine_st* %e, i32 %idx, i8* %arg) #0 {
define dso_local i8* @ENGINE_get_ex_data(%struct.engine_st* %e, i32 %idx) #0 {
define dso_local i32 @ENGINE_set_id(%struct.engine_st* %e, i8* %id) #0 {
define dso_local i32 @ENGINE_set_name(%struct.engine_st* %e, i8* %name) #0 {
define dso_local i32 @ENGINE_set_destroy_function(%struct.engine_st* %e, i32 (%struct.engine_st*)* %destroy_f) #0 {
define dso_local i32 @ENGINE_set_init_function(%struct.engine_st* %e, i32 (%struct.engine_st*)* %init_f) #0 {
define dso_local i32 @ENGINE_set_finish_function(%struct.engine_st* %e, i32 (%struct.engine_st*)* %finish_f) #0 {
define dso_local i32 @ENGINE_set_ctrl_function(%struct.engine_st* %e, i32 (%struct.engine_st*, i32, i64, i8*, void ()*)* %ctrl_f) #0 {
define dso_local i32 @ENGINE_set_flags(%struct.engine_st* %e, i32 %flags) #0 {
define dso_local i32 @ENGINE_set_cmd_defns(%struct.engine_st* %e, %struct.ENGINE_CMD_DEFN_st* %defns) #0 {
define dso_local i8* @ENGINE_get_id(%struct.engine_st* %e) #0 {
define dso_local i8* @ENGINE_get_name(%struct.engine_st* %e) #0 {
define dso_local i32 (%struct.engine_st*)* @ENGINE_get_destroy_function(%struct.engine_st* %e) #0 {
define dso_local i32 (%struct.engine_st*)* @ENGINE_get_init_function(%struct.engine_st* %e) #0 {
define dso_local i32 (%struct.engine_st*)* @ENGINE_get_finish_function(%struct.engine_st* %e) #0 {
define dso_local i32 (%struct.engine_st*, i32, i64, i8*, void ()*)* @ENGINE_get_ctrl_function(%struct.engine_st* %e) #0 {
define dso_local i32 @ENGINE_get_flags(%struct.engine_st* %e) #0 {
define dso_local %struct.ENGINE_CMD_DEFN_st* @ENGINE_get_cmd_defns(%struct.engine_st* %e) #0 {
define dso_local i8* @ENGINE_get_static_state() #0 {
define dso_local %struct.engine_st* @ENGINE_get_first() #0 {
define dso_local %struct.engine_st* @ENGINE_get_last() #0 {
define dso_local %struct.engine_st* @ENGINE_get_next(%struct.engine_st* %e) #0 {
define dso_local %struct.engine_st* @ENGINE_get_prev(%struct.engine_st* %e) #0 {
define dso_local i32 @ENGINE_add(%struct.engine_st* %e) #0 {
define internal i32 @engine_list_add(%struct.engine_st* %e) #0 {
define internal void @engine_list_cleanup() #0 {
define dso_local i32 @ENGINE_remove(%struct.engine_st* %e) #0 {
define internal i32 @engine_list_remove(%struct.engine_st* %e) #0 {
define dso_local %struct.engine_st* @ENGINE_by_id(i8* %id) #0 {
define internal void @engine_cpy(%struct.engine_st* %dest, %struct.engine_st* %src) #0 {
define dso_local i32 @ENGINE_up_ref(%struct.engine_st* %e) #0 {
define dso_local i32 @engine_unlocked_init(%struct.engine_st.11761* %e) #0 {
define dso_local i32 @engine_unlocked_finish(%struct.engine_st.11761* %e, i32 %unlock_for_handlers) #0 {
define dso_local i32 @ENGINE_init(%struct.engine_st.11761* %e) #0 {
define dso_local i32 @ENGINE_finish(%struct.engine_st.11761* %e) #0 {
define dso_local i32 @ENGINE_ctrl(%struct.engine_st.11809* %e, i32 %cmd, i64 %i, i8* %p, void ()* %f) #0 {
define internal i32 @int_ctrl_helper(%struct.engine_st.11809* %e, i32 %cmd, i64 %i, i8* %p, void ()* %f) #0 {
define internal i32 @int_ctrl_cmd_is_null(%struct.ENGINE_CMD_DEFN_st* %defn) #0 {
define internal i32 @int_ctrl_cmd_by_name(%struct.ENGINE_CMD_DEFN_st* %defn, i8* %s) #0 {
define internal i32 @int_ctrl_cmd_by_num(%struct.ENGINE_CMD_DEFN_st* %defn, i32 %num) #0 {
define dso_local i32 @ENGINE_cmd_is_executable(%struct.engine_st.11809* %e, i32 %cmd) #0 {
define dso_local i32 @ENGINE_ctrl_cmd(%struct.engine_st.11809* %e, i8* %cmd_name, i64 %i, i8* %p, void ()* %f, i32 %cmd_optional) #0 {
define dso_local i32 @ENGINE_ctrl_cmd_string(%struct.engine_st.11809* %e, i8* %cmd_name, i8* %arg, i32 %cmd_optional) #0 {
define dso_local i32 @ENGINE_set_load_privkey_function(%struct.engine_st* %e, %struct.evp_pkey_st* (%struct.engine_st*, i8*, %struct.ui_method_st*, i8*)* %loadpriv_f) #0 {
define dso_local i32 @ENGINE_set_load_pubkey_function(%struct.engine_st* %e, %struct.evp_pkey_st* (%struct.engine_st*, i8*, %struct.ui_method_st*, i8*)* %loadpub_f) #0 {
define dso_local i32 @ENGINE_set_load_ssl_client_cert_function(%struct.engine_st* %e, i32 (%struct.engine_st*, %struct.ssl_st*, %struct.stack_st_SSL_CIPHER*, %struct.x509_st**, %struct.evp_pkey_st**, %struct.stack_st_SSL_CIPHER**, %struct.ui_method_st*, i8*)* %loadssl_f) #0 {
define dso_local %struct.evp_pkey_st* (%struct.engine_st*, i8*, %struct.ui_method_st*, i8*)* @ENGINE_get_load_privkey_function(%struct.engine_st* %e) #0 {
define dso_local %struct.evp_pkey_st* (%struct.engine_st*, i8*, %struct.ui_method_st*, i8*)* @ENGINE_get_load_pubkey_function(%struct.engine_st* %e) #0 {
define dso_local i32 (%struct.engine_st*, %struct.ssl_st*, %struct.stack_st_SSL_CIPHER*, %struct.x509_st**, %struct.evp_pkey_st**, %struct.stack_st_SSL_CIPHER**, %struct.ui_method_st*, i8*)* @ENGINE_get_ssl_client_cert_function(%struct.engine_st* %e) #0 {
define dso_local %struct.evp_pkey_st* @ENGINE_load_private_key(%struct.engine_st* %e, i8* %key_id, %struct.ui_method_st* %ui_method, i8* %callback_data) #0 {
define dso_local %struct.evp_pkey_st* @ENGINE_load_public_key(%struct.engine_st* %e, i8* %key_id, %struct.ui_method_st* %ui_method, i8* %callback_data) #0 {
define dso_local i32 @ENGINE_load_ssl_client_cert(%struct.engine_st* %e, %struct.ssl_st* %s, %struct.stack_st_SSL_CIPHER* %ca_dn, %struct.x509_st** %pcert, %struct.evp_pkey_st** %ppkey, %struct.stack_st_SSL_CIPHER** %pother, %struct.ui_method_st* %ui_method, i8* %callback_data) #0 {
define dso_local i32 @ENGINE_set_default(%struct.engine_st* %e, i32 %flags) #0 {
define dso_local i32 @ENGINE_set_default_string(%struct.engine_st* %e, i8* %def_list) #0 {
define internal i32 @int_def_cb(i8* %alg, i32 %len, i8* %arg) #0 {
define dso_local i32 @ENGINE_register_complete(%struct.engine_st* %e) #0 {
define dso_local i32 @ENGINE_register_all_complete() #0 {
define dso_local void @ENGINE_unregister_RSA(%struct.engine_st* %e) #0 {
define dso_local i32 @ENGINE_register_RSA(%struct.engine_st* %e) #0 {
define internal void @engine_unregister_all_RSA() #0 {
define dso_local void @ENGINE_register_all_RSA() #0 {
define dso_local i32 @ENGINE_set_default_RSA(%struct.engine_st* %e) #0 {
define dso_local %struct.engine_st* @ENGINE_get_default_RSA() #0 {
define dso_local %struct.rsa_meth_st* @ENGINE_get_RSA(%struct.engine_st* %e) #0 {
define dso_local i32 @ENGINE_set_RSA(%struct.engine_st* %e, %struct.rsa_meth_st* %rsa_meth) #0 {
define dso_local void @ENGINE_unregister_ECDSA(%struct.engine_st* %e) #0 {
define dso_local i32 @ENGINE_register_ECDSA(%struct.engine_st* %e) #0 {
define internal void @engine_unregister_all_ECDSA() #0 {
define dso_local void @ENGINE_register_all_ECDSA() #0 {
define dso_local i32 @ENGINE_set_default_ECDSA(%struct.engine_st* %e) #0 {
define dso_local %struct.engine_st* @ENGINE_get_default_ECDSA() #0 {
define dso_local %struct.ecdsa_method* @ENGINE_get_ECDSA(%struct.engine_st* %e) #0 {
define dso_local i32 @ENGINE_set_ECDSA(%struct.engine_st* %e, %struct.ecdsa_method* %ecdsa_meth) #0 {
define dso_local void @ENGINE_unregister_DH(%struct.engine_st* %e) #0 {
define dso_local i32 @ENGINE_register_DH(%struct.engine_st* %e) #0 {
define internal void @engine_unregister_all_DH() #0 {
define dso_local void @ENGINE_register_all_DH() #0 {
define dso_local i32 @ENGINE_set_default_DH(%struct.engine_st* %e) #0 {
define dso_local %struct.engine_st* @ENGINE_get_default_DH() #0 {
define dso_local %struct.dh_method* @ENGINE_get_DH(%struct.engine_st* %e) #0 {
define dso_local i32 @ENGINE_set_DH(%struct.engine_st* %e, %struct.dh_method* %dh_meth) #0 {
define dso_local void @ENGINE_unregister_ECDH(%struct.engine_st* %e) #0 {
define dso_local i32 @ENGINE_register_ECDH(%struct.engine_st* %e) #0 {
define internal void @engine_unregister_all_ECDH() #0 {
define dso_local void @ENGINE_register_all_ECDH() #0 {
define dso_local i32 @ENGINE_set_default_ECDH(%struct.engine_st* %e) #0 {
define dso_local %struct.engine_st* @ENGINE_get_default_ECDH() #0 {
define dso_local %struct.ecdh_method* @ENGINE_get_ECDH(%struct.engine_st* %e) #0 {
define dso_local i32 @ENGINE_set_ECDH(%struct.engine_st* %e, %struct.ecdh_method* %ecdh_meth) #0 {
define dso_local void @ENGINE_unregister_RAND(%struct.engine_st* %e) #0 {
define dso_local i32 @ENGINE_register_RAND(%struct.engine_st* %e) #0 {
define internal void @engine_unregister_all_RAND() #0 {
define dso_local void @ENGINE_register_all_RAND() #0 {
define dso_local i32 @ENGINE_set_default_RAND(%struct.engine_st* %e) #0 {
define dso_local %struct.engine_st* @ENGINE_get_default_RAND() #0 {
define dso_local %struct.rand_meth_st* @ENGINE_get_RAND(%struct.engine_st* %e) #0 {
define dso_local i32 @ENGINE_set_RAND(%struct.engine_st* %e, %struct.rand_meth_st* %rand_meth) #0 {
define dso_local void @ENGINE_unregister_ciphers(%struct.engine_st* %e) #0 {
define dso_local i32 @ENGINE_register_ciphers(%struct.engine_st* %e) #0 {
define internal void @engine_unregister_all_ciphers() #0 {
define dso_local void @ENGINE_register_all_ciphers() #0 {
define dso_local i32 @ENGINE_set_default_ciphers(%struct.engine_st* %e) #0 {
define dso_local %struct.engine_st* @ENGINE_get_cipher_engine(i32 %nid) #0 {
define dso_local %struct.evp_cipher_st* @ENGINE_get_cipher(%struct.engine_st* %e, i32 %nid) #0 {
define dso_local i32 (%struct.engine_st*, %struct.evp_cipher_st**, i32**, i32)* @ENGINE_get_ciphers(%struct.engine_st* %e) #0 {
define dso_local i32 @ENGINE_set_ciphers(%struct.engine_st* %e, i32 (%struct.engine_st*, %struct.evp_cipher_st**, i32**, i32)* %f) #0 {
define dso_local void @ENGINE_unregister_digests(%struct.engine_st* %e) #0 {
define dso_local i32 @ENGINE_register_digests(%struct.engine_st* %e) #0 {
define internal void @engine_unregister_all_digests() #0 {
define dso_local void @ENGINE_register_all_digests() #0 {
define dso_local i32 @ENGINE_set_default_digests(%struct.engine_st* %e) #0 {
define dso_local %struct.engine_st* @ENGINE_get_digest_engine(i32 %nid) #0 {
define dso_local %struct.env_md_st* @ENGINE_get_digest(%struct.engine_st* %e, i32 %nid) #0 {
define dso_local i32 (%struct.engine_st*, %struct.env_md_st**, i32**, i32)* @ENGINE_get_digests(%struct.engine_st* %e) #0 {
define dso_local i32 @ENGINE_set_digests(%struct.engine_st* %e, i32 (%struct.engine_st*, %struct.env_md_st**, i32**, i32)* %f) #0 {
define dso_local void @ENGINE_unregister_pkey_meths(%struct.engine_st* %e) #0 {
define dso_local i32 @ENGINE_register_pkey_meths(%struct.engine_st* %e) #0 {
define internal void @engine_unregister_all_pkey_meths() #0 {
define dso_local void @ENGINE_register_all_pkey_meths() #0 {
define dso_local i32 @ENGINE_set_default_pkey_meths(%struct.engine_st* %e) #0 {
define dso_local %struct.engine_st* @ENGINE_get_pkey_meth_engine(i32 %nid) #0 {
define dso_local %struct.evp_pkey_method_st* @ENGINE_get_pkey_meth(%struct.engine_st* %e, i32 %nid) #0 {
define dso_local i32 (%struct.engine_st*, %struct.evp_pkey_method_st**, i32**, i32)* @ENGINE_get_pkey_meths(%struct.engine_st* %e) #0 {
define dso_local i32 @ENGINE_set_pkey_meths(%struct.engine_st* %e, i32 (%struct.engine_st*, %struct.evp_pkey_method_st**, i32**, i32)* %f) #0 {
define dso_local void @engine_pkey_meths_free(%struct.engine_st* %e) #0 {
define dso_local void @ENGINE_unregister_pkey_asn1_meths(%struct.engine_st.12350* %e) #0 {
define dso_local i32 @ENGINE_register_pkey_asn1_meths(%struct.engine_st.12350* %e) #0 {
define internal void @engine_unregister_all_pkey_asn1_meths() #0 {
define dso_local void @ENGINE_register_all_pkey_asn1_meths() #0 {
define dso_local i32 @ENGINE_set_default_pkey_asn1_meths(%struct.engine_st.12350* %e) #0 {
define dso_local %struct.engine_st.12350* @ENGINE_get_pkey_asn1_meth_engine(i32 %nid) #0 {
define dso_local %struct.evp_pkey_asn1_method_st.12334* @ENGINE_get_pkey_asn1_meth(%struct.engine_st.12350* %e, i32 %nid) #0 {
define dso_local i32 (%struct.engine_st.12350*, %struct.evp_pkey_asn1_method_st.12334**, i32**, i32)* @ENGINE_get_pkey_asn1_meths(%struct.engine_st.12350* %e) #0 {
define dso_local i32 @ENGINE_set_pkey_asn1_meths(%struct.engine_st.12350* %e, i32 (%struct.engine_st.12350*, %struct.evp_pkey_asn1_method_st.12334**, i32**, i32)* %f) #0 {
define dso_local void @engine_pkey_asn1_meths_free(%struct.engine_st.12350* %e) #0 {
define dso_local %struct.evp_pkey_asn1_method_st.12334* @ENGINE_get_pkey_asn1_meth_str(%struct.engine_st.12350* %e, i8* %str, i32 %len) #0 {
define dso_local %struct.evp_pkey_asn1_method_st.12334* @ENGINE_pkey_asn1_find_str(%struct.engine_st.12350** %pe, i8* %str, i32 %len) #0 {
define internal void @look_str_cb(i32 %nid, %struct.stack_st_SSL_CIPHER* %sk, %struct.engine_st.12350* %def, i8* %arg) #0 {
define dso_local %struct.buf_mem_st* @BUF_MEM_new() #0 {
define dso_local void @BUF_MEM_free(%struct.buf_mem_st* %a) #0 {
define dso_local i32 @BUF_MEM_grow(%struct.buf_mem_st* %str, i64 %len) #0 {
define dso_local i32 @BUF_MEM_grow_clean(%struct.buf_mem_st* %str, i64 %len) #0 {
define dso_local void @BUF_reverse(i8* %out, i8* %in, i64 %size) #0 {
define dso_local i64 @BUF_strnlen(i8* %str, i64 %maxlen) #0 {
define dso_local i8* @BUF_strdup(i8* %str) #0 {
define dso_local i8* @BUF_strndup(i8* %str, i64 %siz) #0 {
define dso_local i8* @BUF_memdup(i8* %data, i64 %siz) #0 {
define dso_local i64 @BUF_strlcpy(i8* %dst, i8* %src, i64 %size) #0 {
define dso_local i64 @BUF_strlcat(i8* %dst, i8* %src, i64 %size) #0 {
define dso_local %struct.bio_st* @BIO_new(%struct.bio_method_st* %method) #0 {
define dso_local i32 @BIO_set(%struct.bio_st* %bio, %struct.bio_method_st* %method) #0 {
define dso_local i32 @BIO_free(%struct.bio_st* %a) #0 {
define dso_local void @BIO_vfree(%struct.bio_st* %a) #0 {
define dso_local void @BIO_clear_flags(%struct.bio_st* %b, i32 %flags) #0 {
define dso_local i32 @BIO_test_flags(%struct.bio_st* %b, i32 %flags) #0 {
define dso_local void @BIO_set_flags(%struct.bio_st* %b, i32 %flags) #0 {
define dso_local i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)* @BIO_get_callback(%struct.bio_st* %b) #0 {
define dso_local void @BIO_set_callback(%struct.bio_st* %b, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)* %cb) #0 {
define dso_local void @BIO_set_callback_arg(%struct.bio_st* %b, i8* %arg) #0 {
define dso_local i8* @BIO_get_callback_arg(%struct.bio_st* %b) #0 {
define dso_local i8* @BIO_method_name(%struct.bio_st* %b) #0 {
define dso_local i32 @BIO_method_type(%struct.bio_st* %b) #0 {
define dso_local i32 @BIO_read(%struct.bio_st* %b, i8* %out, i32 %outl) #0 {
define dso_local i32 @BIO_write(%struct.bio_st* %b, i8* %in, i32 %inl) #0 {
define dso_local i32 @BIO_puts(%struct.bio_st* %b, i8* %in) #0 {
define dso_local i32 @BIO_gets(%struct.bio_st* %b, i8* %in, i32 %inl) #0 {
define dso_local i32 @BIO_indent(%struct.bio_st* %b, i32 %indent, i32 %max) #0 {
define dso_local i64 @BIO_int_ctrl(%struct.bio_st* %b, i32 %cmd, i64 %larg, i32 %iarg) #0 {
define dso_local i64 @BIO_ctrl(%struct.bio_st* %b, i32 %cmd, i64 %larg, i8* %parg) #0 {
define dso_local i8* @BIO_ptr_ctrl(%struct.bio_st* %b, i32 %cmd, i64 %larg) #0 {
define dso_local i64 @BIO_callback_ctrl(%struct.bio_st* %b, i32 %cmd, void (%struct.bio_st*, i32, i8*, i32, i64, i64)* %fp) #0 {
define dso_local i64 @BIO_ctrl_pending(%struct.bio_st* %bio) #0 {
define dso_local i64 @BIO_ctrl_wpending(%struct.bio_st* %bio) #0 {
define dso_local %struct.bio_st* @BIO_push(%struct.bio_st* %b, %struct.bio_st* %bio) #0 {
define dso_local %struct.bio_st* @BIO_pop(%struct.bio_st* %b) #0 {
define dso_local %struct.bio_st* @BIO_get_retry_BIO(%struct.bio_st* %bio, i32* %reason) #0 {
define dso_local i32 @BIO_get_retry_reason(%struct.bio_st* %bio) #0 {
define dso_local %struct.bio_st* @BIO_find_type(%struct.bio_st* %bio, i32 %type) #0 {
define dso_local %struct.bio_st* @BIO_next(%struct.bio_st* %b) #0 {
define dso_local void @BIO_free_all(%struct.bio_st* %bio) #0 {
define dso_local %struct.bio_st* @BIO_dup_chain(%struct.bio_st* %in) #0 {
define dso_local void @BIO_copy_next_retry(%struct.bio_st* %b) #0 {
define dso_local i32 @BIO_get_ex_new_index(i64 %argl, i8* %argp, i32 (i8*, i8*, %struct.crypto_ex_data_st*, i32, i64, i8*)* %new_func, i32 (%struct.crypto_ex_data_st*, %struct.crypto_ex_data_st*, i8*, i32, i64, i8*)* %dup_func, void (i8*, i8*, %struct.crypto_ex_data_st*, i32, i64, i8*)* %free_func) #0 {
define dso_local i32 @BIO_set_ex_data(%struct.bio_st* %bio, i32 %idx, i8* %data) #0 {
define dso_local i8* @BIO_get_ex_data(%struct.bio_st* %bio, i32 %idx) #0 {
define dso_local i64 @BIO_number_read(%struct.bio_st* %bio) #0 {
define dso_local i64 @BIO_number_written(%struct.bio_st* %bio) #0 {
define dso_local %struct.bio_method_st* @BIO_s_mem() #0 {
define internal i32 @mem_write(%struct.bio_st* %b, i8* %in, i32 %inl) #0 {
define internal i32 @mem_read(%struct.bio_st* %b, i8* %out, i32 %outl) #0 {
define internal i32 @mem_puts(%struct.bio_st* %bp, i8* %str) #0 {
define internal i32 @mem_gets(%struct.bio_st* %bp, i8* %buf, i32 %size) #0 {
define internal i64 @mem_ctrl(%struct.bio_st* %b, i32 %cmd, i64 %num, i8* %ptr) #0 {
define internal i32 @mem_new(%struct.bio_st* %bi) #0 {
define internal i32 @mem_free(%struct.bio_st* %a) #0 {
define dso_local %struct.bio_st* @BIO_new_mem_buf(i8* %buf, i32 %len) #0 {
define dso_local %struct.bio_st* @BIO_new_file(i8* %filename, i8* %mode) #0 {
define internal %struct._IO_FILE* @file_fopen(i8* %filename, i8* %mode) #0 {
define dso_local %struct.bio_method_st* @BIO_s_file() #0 {
define internal i32 @file_write(%struct.bio_st* %b, i8* %in, i32 %inl) #0 {
define internal i32 @file_read(%struct.bio_st* %b, i8* %out, i32 %outl) #0 {
define internal i32 @file_puts(%struct.bio_st* %bp, i8* %str) #0 {
define internal i32 @file_gets(%struct.bio_st* %bp, i8* %buf, i32 %size) #0 {
define internal i64 @file_ctrl(%struct.bio_st* %b, i32 %cmd, i64 %num, i8* %ptr) #0 {
define internal i32 @file_new(%struct.bio_st* %bi) #0 {
define internal i32 @file_free(%struct.bio_st* %a) #0 {
define dso_local %struct.bio_st* @BIO_new_fp(%struct._IO_FILE* %stream, i32 %close_flag) #0 {
define dso_local %struct.bio_method_st* @BIO_s_socket() #0 {
define internal i32 @sock_write(%struct.bio_st* %b, i8* %in, i32 %inl) #0 {
define internal i32 @sock_read(%struct.bio_st* %b, i8* %out, i32 %outl) #0 {
define internal i32 @sock_puts(%struct.bio_st* %bp, i8* %str) #0 {
define internal i64 @sock_ctrl(%struct.bio_st* %b, i32 %cmd, i64 %num, i8* %ptr) #0 {
define internal i32 @sock_new(%struct.bio_st* %bi) #0 {
define internal i32 @sock_free(%struct.bio_st* %a) #0 {
define dso_local i32 @BIO_sock_should_retry(i32 %i) #0 {
define dso_local i32 @BIO_sock_non_fatal_error(i32 %err) #0 {
define dso_local %struct.bio_st* @BIO_new_socket(i32 %fd, i32 %close_flag) #0 {
define dso_local %struct.bio_method_st* @BIO_f_buffer() #0 {
define internal i32 @buffer_write(%struct.bio_st* %b, i8* %in, i32 %inl) #0 {
define internal i32 @buffer_read(%struct.bio_st* %b, i8* %out, i32 %outl) #0 {
define internal i32 @buffer_puts(%struct.bio_st* %b, i8* %str) #0 {
define internal i32 @buffer_gets(%struct.bio_st* %b, i8* %buf, i32 %size) #0 {
define internal i64 @buffer_ctrl(%struct.bio_st* %b, i32 %cmd, i64 %num, i8* %ptr) #0 {
define internal i32 @buffer_new(%struct.bio_st* %bi) #0 {
define internal i32 @buffer_free(%struct.bio_st* %a) #0 {
define internal i64 @buffer_callback_ctrl(%struct.bio_st* %b, i32 %cmd, void (%struct.bio_st*, i32, i8*, i32, i64, i64)* %fp) #0 {
define dso_local i32 @BIO_printf(%struct.bio_st* %bio, i8* %format, ...) #0 {
define dso_local i32 @BIO_vprintf(%struct.bio_st* %bio, i8* %format, %struct.__va_list_tag* %args) #0 {
define internal i32 @_dopr(i8** %sbuffer, i8** %buffer, i64* %maxlen, i64* %retlen, i32* %truncated, i8* %format, %struct.__va_list_tag* %args) #0 {
define internal i32 @doapr_outch(i8** %sbuffer, i8** %buffer, i64* %currlen, i64* %maxlen, i32 %c) #0 {
define internal i32 @fmtint(i8** %sbuffer, i8** %buffer, i64* %currlen, i64* %maxlen, i64 %value, i32 %base, i32 %min, i32 %max, i32 %flags) #0 {
define internal i32 @fmtfp(i8** %sbuffer, i8** %buffer, i64* %currlen, i64* %maxlen, double %fvalue, i32 %min, i32 %max, i32 %flags) #0 {
define internal i32 @fmtstr(i8** %sbuffer, i8** %buffer, i64* %currlen, i64* %maxlen, i8* %value, i32 %flags, i32 %min, i32 %max) #0 {
define internal double @abs_val(double %value) #0 {
define internal double @pow_10(i32 %in_exp) #0 {
define internal i64 @roundv(double %value) #0 {
define dso_local i32 @BIO_snprintf(i8* %buf, i64 %n, i8* %format, ...) #0 {
define dso_local i32 @BIO_vsnprintf(i8* %buf, i64 %n, i8* %format, %struct.__va_list_tag* %args) #0 {
define dso_local i32 (i8*, i8*)* @sk_set_cmp_func(%struct.stack_st* %sk, i32 (i8*, i8*)* %c) #0 {
define dso_local %struct.stack_st* @sk_dup(%struct.stack_st* %sk) #0 {
define dso_local %struct.stack_st* @sk_new(i32 (i8*, i8*)* %c) #0 {
define dso_local void @sk_free(%struct.stack_st* %st) #0 {
define dso_local %struct.stack_st* @sk_deep_copy(%struct.stack_st* %sk, i8* (i8*)* %copy_func, void (i8*)* %free_func) #0 {
define dso_local %struct.stack_st* @sk_new_null() #0 {
define dso_local i32 @sk_insert(%struct.stack_st* %st, i8* %data, i32 %loc) #0 {
define dso_local i8* @sk_delete_ptr(%struct.stack_st* %st, i8* %p) #0 {
define dso_local i8* @sk_delete(%struct.stack_st* %st, i32 %loc) #0 {
define dso_local i32 @sk_find(%struct.stack_st* %st, i8* %data) #0 {
define internal i32 @internal_find(%struct.stack_st* %st, i8* %data, i32 %ret_val_options) #0 {
define dso_local void @sk_sort(%struct.stack_st* %st) #0 {
define dso_local i32 @sk_find_ex(%struct.stack_st* %st, i8* %data) #0 {
define dso_local i32 @sk_push(%struct.stack_st* %st, i8* %data) #0 {
define dso_local i32 @sk_unshift(%struct.stack_st* %st, i8* %data) #0 {
define dso_local i8* @sk_shift(%struct.stack_st* %st) #0 {
define dso_local i8* @sk_pop(%struct.stack_st* %st) #0 {
define dso_local void @sk_zero(%struct.stack_st* %st) #0 {
define dso_local void @sk_pop_free(%struct.stack_st* %st, void (i8*)* %func) #0 {
define dso_local i32 @sk_num(%struct.stack_st* %st) #0 {
define dso_local i8* @sk_value(%struct.stack_st* %st, i32 %i) #0 {
define dso_local i8* @sk_set(%struct.stack_st* %st, i32 %i, i8* %value) #0 {
define dso_local i32 @sk_is_sorted(%struct.stack_st* %st) #0 {
define dso_local %struct.lhash_st* @lh_new(i64 (i8*)* %h, i32 (i8*, i8*)* %c) #0 {
define dso_local i64 @lh_strhash(i8* %c) #0 {
define dso_local void @lh_free(%struct.lhash_st* %lh) #0 {
define dso_local i8* @lh_insert(%struct.lhash_st* %lh, i8* %data) #0 {
define internal i32 @expand(%struct.lhash_st* %lh) #0 {
define internal %struct.lhash_node_st** @getrn(%struct.lhash_st* %lh, i8* %data, i64* %rhash) #0 {
define dso_local i8* @lh_delete(%struct.lhash_st* %lh, i8* %data) #0 {
define internal void @contract(%struct.lhash_st* %lh) #0 {
define dso_local i8* @lh_retrieve(%struct.lhash_st* %lh, i8* %data) #0 {
define dso_local void @lh_doall(%struct.lhash_st* %lh, void (i8*)* %func) #0 {
define internal void @doall_util_fn(%struct.lhash_st* %lh, i32 %use_arg, void (i8*)* %func, void (i8*, i8*)* %func_arg, i8* %arg) #0 {
define dso_local void @lh_doall_arg(%struct.lhash_st* %lh, void (i8*, i8*)* %func, i8* %arg) #0 {
define dso_local i64 @lh_num_items(%struct.lhash_st* %lh) #0 {
define dso_local i32 @RAND_set_rand_method(%struct.rand_meth_st* %meth) #0 {
define dso_local %struct.rand_meth_st* @RAND_get_rand_method() #0 {
define dso_local i32 @RAND_set_rand_engine(%struct.engine_st.11761* %engine) #0 {
define dso_local void @RAND_cleanup() #0 {
define dso_local void @RAND_seed(i8* %buf, i32 %num) #0 {
define dso_local void @RAND_add(i8* %buf, i32 %num, double %entropy) #0 {
define dso_local i32 @RAND_bytes(i8* %buf, i32 %num) #0 {
define dso_local i32 @RAND_pseudo_bytes(i8* %buf, i32 %num) #0 {
define dso_local i32 @RAND_status() #0 {
define dso_local %struct.st_ERR_FNS* @ERR_get_implementation() #0 {
define internal void @err_fns_check() #0 {
define internal %struct.lhash_st_SSL_SESSION* @int_err_get(i32 %create) #0 {
define internal void @int_err_del() #0 {
define internal %struct.ngx_str_t* @int_err_get_item(%struct.ngx_str_t* %d) #0 {
define internal %struct.ngx_str_t* @int_err_set_item(%struct.ngx_str_t* %d) #0 {
define internal %struct.ngx_str_t* @int_err_del_item(%struct.ngx_str_t* %d) #0 {
define internal %struct.lhash_st_SSL_SESSION* @int_thread_get(i32 %create) #0 {
define internal void @int_thread_release(%struct.lhash_st_SSL_SESSION** %hash) #0 {
define internal %struct.err_state_st* @int_thread_get_item(%struct.err_state_st* %d) #0 {
define internal %struct.err_state_st* @int_thread_set_item(%struct.err_state_st* %d) #0 {
define internal void @int_thread_del_item(%struct.err_state_st* %d) #0 {
define internal i32 @int_err_get_next_lib() #0 {
define internal void @ERR_STATE_free(%struct.err_state_st* %s) #0 {
define internal i64 @err_state_LHASH_HASH(i8* %arg) #0 {
define internal i32 @err_state_LHASH_COMP(i8* %arg1, i8* %arg2) #0 {
define internal i32 @err_state_cmp(%struct.err_state_st* %a, %struct.err_state_st* %b) #0 {
define internal i64 @err_state_hash(%struct.err_state_st* %a) #0 {
define internal i64 @err_string_data_LHASH_HASH(i8* %arg) #0 {
define internal i32 @err_string_data_LHASH_COMP(i8* %arg1, i8* %arg2) #0 {
define internal i32 @err_string_data_cmp(%struct.ngx_str_t* %a, %struct.ngx_str_t* %b) #0 {
define internal i64 @err_string_data_hash(%struct.ngx_str_t* %a) #0 {
define dso_local i32 @ERR_set_implementation(%struct.st_ERR_FNS* %fns) #0 {
define dso_local void @ERR_load_ERR_strings() #0 {
define internal void @err_load_strings(i32 %lib, %struct.ngx_str_t* %str) #0 {
define internal void @build_SYS_str_reasons() #0 {
define dso_local void @ERR_load_strings(i32 %lib, %struct.ngx_str_t* %str) #0 {
define dso_local void @ERR_unload_strings(i32 %lib, %struct.ngx_str_t* %str) #0 {
define dso_local void @ERR_free_strings() #0 {
define dso_local void @ERR_put_error(i32 %lib, i32 %func, i32 %reason, i8* %file, i32 %line) #0 {
define dso_local %struct.err_state_st* @ERR_get_state() #0 {
define dso_local void @ERR_clear_error() #0 {
define dso_local i64 @ERR_get_error() #0 {
define internal i64 @get_error_values(i32 %inc, i32 %top, i8** %file, i32* %line, i8** %data, i32* %flags) #0 {
define dso_local i64 @ERR_get_error_line(i8** %file, i32* %line) #0 {
define dso_local i64 @ERR_get_error_line_data(i8** %file, i32* %line, i8** %data, i32* %flags) #0 {
define dso_local i64 @ERR_peek_error() #0 {
define dso_local i64 @ERR_peek_error_line(i8** %file, i32* %line) #0 {
define dso_local i64 @ERR_peek_error_line_data(i8** %file, i32* %line, i8** %data, i32* %flags) #0 {
define dso_local i64 @ERR_peek_last_error() #0 {
define dso_local i64 @ERR_peek_last_error_line(i8** %file, i32* %line) #0 {
define dso_local i64 @ERR_peek_last_error_line_data(i8** %file, i32* %line, i8** %data, i32* %flags) #0 {
define dso_local void @ERR_error_string_n(i64 %e, i8* %buf, i64 %len) #0 {
define dso_local i8* @ERR_lib_error_string(i64 %e) #0 {
define dso_local i8* @ERR_func_error_string(i64 %e) #0 {
define dso_local i8* @ERR_reason_error_string(i64 %e) #0 {
define dso_local i8* @ERR_error_string(i64 %e, i8* %ret) #0 {
define dso_local %struct.lhash_st_SSL_SESSION* @ERR_get_string_table() #0 {
define dso_local %struct.lhash_st_SSL_SESSION* @ERR_get_err_state_table() #0 {
define dso_local void @ERR_release_err_state_table(%struct.lhash_st_SSL_SESSION** %hash) #0 {
define dso_local void @ERR_remove_thread_state(%struct.srtp_protection_profile_st* %id) #0 {
define dso_local void @ERR_remove_state(i64 %pid) #0 {
define dso_local i32 @ERR_get_next_error_library() #0 {
define dso_local void @ERR_set_error_data(i8* %data, i32 %flags) #0 {
define dso_local void @ERR_add_error_data(i32 %num, ...) #0 {
define dso_local void @ERR_add_error_vdata(i32 %num, %struct.__va_list_tag* %args) #0 {
define dso_local i32 @ERR_set_mark() #0 {
define dso_local i32 @ERR_pop_to_mark() #0 {
define dso_local void @err_clear_last_constant_time(i32 %clear) #0 {
define dso_local void @ERR_load_crypto_strings() #0 {
define dso_local void @EVP_MD_CTX_init(%struct.env_md_ctx_st* %ctx) #0 {
define dso_local %struct.env_md_ctx_st* @EVP_MD_CTX_create() #0 {
define dso_local i32 @EVP_DigestInit(%struct.env_md_ctx_st* %ctx, %struct.env_md_st* %type) #0 {
define dso_local i32 @EVP_DigestInit_ex(%struct.env_md_ctx_st* %ctx, %struct.env_md_st* %type, %struct.engine_st* %impl) #0 {
define dso_local i32 @EVP_DigestUpdate(%struct.env_md_ctx_st* %ctx, i8* %data, i64 %count) #0 {
define dso_local i32 @EVP_DigestFinal(%struct.env_md_ctx_st* %ctx, i8* %md, i32* %size) #0 {
define dso_local i32 @EVP_DigestFinal_ex(%struct.env_md_ctx_st* %ctx, i8* %md, i32* %size) #0 {
define dso_local i32 @EVP_MD_CTX_cleanup(%struct.env_md_ctx_st* %ctx) #0 {
define dso_local i32 @EVP_MD_CTX_copy(%struct.env_md_ctx_st* %out, %struct.env_md_ctx_st* %in) #0 {
define dso_local i32 @EVP_MD_CTX_copy_ex(%struct.env_md_ctx_st* %out, %struct.env_md_ctx_st* %in) #0 {
define dso_local i32 @EVP_Digest(i8* %data, i64 %count, i8* %md, i32* %size, %struct.env_md_st* %type, %struct.engine_st* %impl) #0 {
define dso_local void @EVP_MD_CTX_destroy(%struct.env_md_ctx_st* %ctx) #0 {
define dso_local void @EVP_CIPHER_CTX_init(%struct.evp_cipher_ctx_st* %ctx) #0 {
define dso_local %struct.evp_cipher_ctx_st* @EVP_CIPHER_CTX_new() #0 {
define dso_local i32 @EVP_CipherInit(%struct.evp_cipher_ctx_st* %ctx, %struct.evp_cipher_st* %cipher, i8* %key, i8* %iv, i32 %enc) #0 {
define dso_local i32 @EVP_CipherInit_ex(%struct.evp_cipher_ctx_st* %ctx, %struct.evp_cipher_st* %cipher, %struct.engine_st* %impl, i8* %key, i8* %iv, i32 %enc) #0 {
define dso_local i32 @EVP_CIPHER_CTX_cleanup(%struct.evp_cipher_ctx_st* %c) #0 {
define dso_local i32 @EVP_CIPHER_CTX_ctrl(%struct.evp_cipher_ctx_st* %ctx, i32 %type, i32 %arg, i8* %ptr) #0 {
define dso_local i32 @EVP_CipherUpdate(%struct.evp_cipher_ctx_st* %ctx, i8* %out, i32* %outl, i8* %in, i32 %inl) #0 {
define dso_local i32 @EVP_EncryptUpdate(%struct.evp_cipher_ctx_st* %ctx, i8* %out, i32* %outl, i8* %in, i32 %inl) #0 {
define dso_local i32 @EVP_DecryptUpdate(%struct.evp_cipher_ctx_st* %ctx, i8* %out, i32* %outl, i8* %in, i32 %inl) #0 {
define internal i32 @evp_EncryptDecryptUpdate(%struct.evp_cipher_ctx_st* %ctx, i8* %out, i32* %outl, i8* %in, i32 %inl) #0 {
define dso_local i32 @EVP_CipherFinal_ex(%struct.evp_cipher_ctx_st* %ctx, i8* %out, i32* %outl) #0 {
define dso_local i32 @EVP_EncryptFinal_ex(%struct.evp_cipher_ctx_st* %ctx, i8* %out, i32* %outl) #0 {
define dso_local i32 @EVP_DecryptFinal_ex(%struct.evp_cipher_ctx_st* %ctx, i8* %out, i32* %outl) #0 {
define dso_local i32 @EVP_CipherFinal(%struct.evp_cipher_ctx_st* %ctx, i8* %out, i32* %outl) #0 {
define dso_local i32 @EVP_EncryptFinal(%struct.evp_cipher_ctx_st* %ctx, i8* %out, i32* %outl) #0 {
define dso_local i32 @EVP_DecryptFinal(%struct.evp_cipher_ctx_st* %ctx, i8* %out, i32* %outl) #0 {
define dso_local i32 @EVP_EncryptInit(%struct.evp_cipher_ctx_st* %ctx, %struct.evp_cipher_st* %cipher, i8* %key, i8* %iv) #0 {
define dso_local i32 @EVP_EncryptInit_ex(%struct.evp_cipher_ctx_st* %ctx, %struct.evp_cipher_st* %cipher, %struct.engine_st* %impl, i8* %key, i8* %iv) #0 {
define dso_local i32 @EVP_DecryptInit(%struct.evp_cipher_ctx_st* %ctx, %struct.evp_cipher_st* %cipher, i8* %key, i8* %iv) #0 {
define dso_local i32 @EVP_DecryptInit_ex(%struct.evp_cipher_ctx_st* %ctx, %struct.evp_cipher_st* %cipher, %struct.engine_st* %impl, i8* %key, i8* %iv) #0 {
define dso_local void @EVP_CIPHER_CTX_free(%struct.evp_cipher_ctx_st* %ctx) #0 {
define dso_local i32 @EVP_CIPHER_CTX_set_key_length(%struct.evp_cipher_ctx_st* %c, i32 %keylen) #0 {
define dso_local i32 @EVP_CIPHER_CTX_set_padding(%struct.evp_cipher_ctx_st* %ctx, i32 %pad) #0 {
define dso_local i32 @EVP_CIPHER_CTX_rand_key(%struct.evp_cipher_ctx_st* %ctx, i8* %key) #0 {
define dso_local i32 @EVP_CIPHER_CTX_copy(%struct.evp_cipher_ctx_st* %out, %struct.evp_cipher_ctx_st* %in) #0 {
define dso_local %struct.evp_cipher_st* @EVP_idea_cbc() #0 {
define internal i32 @idea_init_key(%struct.evp_cipher_ctx_st* %ctx, i8* %key, i8* %iv, i32 %enc) #0 {
define internal i32 @idea_cbc_cipher(%struct.evp_cipher_ctx_st* %ctx, i8* %out, i8* %in, i64 %inl) #0 {
define dso_local %struct.evp_cipher_st* @EVP_idea_cfb64() #0 {
define internal i32 @idea_cfb64_cipher(%struct.evp_cipher_ctx_st* %ctx, i8* %out, i8* %in, i64 %inl) #0 {
define dso_local %struct.evp_cipher_st* @EVP_idea_ofb() #0 {
define internal i32 @idea_ofb_cipher(%struct.evp_cipher_ctx_st* %ctx, i8* %out, i8* %in, i64 %inl) #0 {
define dso_local %struct.evp_cipher_st* @EVP_idea_ecb() #0 {
define internal i32 @idea_ecb_cipher(%struct.evp_cipher_ctx_st* %ctx, i8* %out, i8* %in, i64 %inl) #0 {
define dso_local %struct.evp_cipher_st* @EVP_camellia_128_cbc() #0 {
define internal i32 @camellia_init_key(%struct.evp_cipher_ctx_st* %ctx, i8* %key, i8* %iv, i32 %enc) #0 {
define internal i32 @camellia_cbc_cipher(%struct.evp_cipher_ctx_st* %ctx, i8* %out, i8* %in, i64 %len) #0 {
define dso_local %struct.evp_cipher_st* @EVP_camellia_128_ecb() #0 {
define internal i32 @camellia_ecb_cipher(%struct.evp_cipher_ctx_st* %ctx, i8* %out, i8* %in, i64 %len) #0 {
define dso_local %struct.evp_cipher_st* @EVP_camellia_128_ofb() #0 {
define internal i32 @camellia_ofb_cipher(%struct.evp_cipher_ctx_st* %ctx, i8* %out, i8* %in, i64 %len) #0 {
define dso_local %struct.evp_cipher_st* @EVP_camellia_128_cfb128() #0 {
define internal i32 @camellia_cfb_cipher(%struct.evp_cipher_ctx_st* %ctx, i8* %out, i8* %in, i64 %len) #0 {
define dso_local %struct.evp_cipher_st* @EVP_camellia_128_cfb1() #0 {
define internal i32 @camellia_cfb1_cipher(%struct.evp_cipher_ctx_st* %ctx, i8* %out, i8* %in, i64 %len) #0 {
define dso_local %struct.evp_cipher_st* @EVP_camellia_128_cfb8() #0 {
define internal i32 @camellia_cfb8_cipher(%struct.evp_cipher_ctx_st* %ctx, i8* %out, i8* %in, i64 %len) #0 {
define dso_local %struct.evp_cipher_st* @EVP_camellia_192_cbc() #0 {
define dso_local %struct.evp_cipher_st* @EVP_camellia_192_ecb() #0 {
define dso_local %struct.evp_cipher_st* @EVP_camellia_192_ofb() #0 {
define dso_local %struct.evp_cipher_st* @EVP_camellia_192_cfb128() #0 {
define dso_local %struct.evp_cipher_st* @EVP_camellia_192_cfb1() #0 {
define dso_local %struct.evp_cipher_st* @EVP_camellia_192_cfb8() #0 {
define dso_local %struct.evp_cipher_st* @EVP_camellia_256_cbc() #0 {
define dso_local %struct.evp_cipher_st* @EVP_camellia_256_ecb() #0 {
define dso_local %struct.evp_cipher_st* @EVP_camellia_256_ofb() #0 {
define dso_local %struct.evp_cipher_st* @EVP_camellia_256_cfb128() #0 {
define dso_local %struct.evp_cipher_st* @EVP_camellia_256_cfb1() #0 {
define dso_local %struct.evp_cipher_st* @EVP_camellia_256_cfb8() #0 {
define dso_local %struct.evp_cipher_st* @EVP_aes_128_cbc() #0 {
define internal i32 @aes_init_key(%struct.evp_cipher_ctx_st* %ctx, i8* %key, i8* %iv, i32 %enc) #0 {
define internal i32 @aes_cbc_cipher(%struct.evp_cipher_ctx_st* %ctx, i8* %out, i8* %in, i64 %len) #0 {
define dso_local %struct.evp_cipher_st* @EVP_aes_128_ecb() #0 {
define internal i32 @aes_ecb_cipher(%struct.evp_cipher_ctx_st* %ctx, i8* %out, i8* %in, i64 %len) #0 {
define dso_local %struct.evp_cipher_st* @EVP_aes_128_ofb() #0 {
define internal i32 @aes_ofb_cipher(%struct.evp_cipher_ctx_st* %ctx, i8* %out, i8* %in, i64 %len) #0 {
define dso_local %struct.evp_cipher_st* @EVP_aes_128_cfb128() #0 {
define internal i32 @aes_cfb_cipher(%struct.evp_cipher_ctx_st* %ctx, i8* %out, i8* %in, i64 %len) #0 {
define dso_local %struct.evp_cipher_st* @EVP_aes_128_cfb1() #0 {
define internal i32 @aes_cfb1_cipher(%struct.evp_cipher_ctx_st* %ctx, i8* %out, i8* %in, i64 %len) #0 {
define dso_local %struct.evp_cipher_st* @EVP_aes_128_cfb8() #0 {
define internal i32 @aes_cfb8_cipher(%struct.evp_cipher_ctx_st* %ctx, i8* %out, i8* %in, i64 %len) #0 {
define dso_local %struct.evp_cipher_st* @EVP_aes_128_ctr() #0 {
define internal i32 @aes_ctr_cipher(%struct.evp_cipher_ctx_st* %ctx, i8* %out, i8* %in, i64 %len) #0 {
define dso_local %struct.evp_cipher_st* @EVP_aes_192_cbc() #0 {
define dso_local %struct.evp_cipher_st* @EVP_aes_192_ecb() #0 {
define dso_local %struct.evp_cipher_st* @EVP_aes_192_ofb() #0 {
define dso_local %struct.evp_cipher_st* @EVP_aes_192_cfb128() #0 {
define dso_local %struct.evp_cipher_st* @EVP_aes_192_cfb1() #0 {
define dso_local %struct.evp_cipher_st* @EVP_aes_192_cfb8() #0 {
define dso_local %struct.evp_cipher_st* @EVP_aes_192_ctr() #0 {
define dso_local %struct.evp_cipher_st* @EVP_aes_256_cbc() #0 {
define dso_local %struct.evp_cipher_st* @EVP_aes_256_ecb() #0 {
define dso_local %struct.evp_cipher_st* @EVP_aes_256_ofb() #0 {
define dso_local %struct.evp_cipher_st* @EVP_aes_256_cfb128() #0 {
define dso_local %struct.evp_cipher_st* @EVP_aes_256_cfb1() #0 {
define dso_local %struct.evp_cipher_st* @EVP_aes_256_cfb8() #0 {
define dso_local %struct.evp_cipher_st* @EVP_aes_256_ctr() #0 {
define dso_local %struct.evp_cipher_st* @EVP_aes_128_gcm() #0 {
define internal i32 @aes_gcm_init_key(%struct.evp_cipher_ctx_st* %ctx, i8* %key, i8* %iv, i32 %enc) #0 {
define internal i32 @aes_gcm_cipher(%struct.evp_cipher_ctx_st* %ctx, i8* %out, i8* %in, i64 %len) #0 {
define internal i32 @aes_gcm_cleanup(%struct.evp_cipher_ctx_st* %c) #0 {
define internal i32 @aes_gcm_ctrl(%struct.evp_cipher_ctx_st* %c, i32 %type, i32 %arg, i8* %ptr) #0 {
define internal void @ctr64_inc(i8* %counter) #0 {
define internal i32 @aes_gcm_tls_cipher(%struct.evp_cipher_ctx_st* %ctx, i8* %out, i8* %in, i64 %len) #0 {
define dso_local %struct.evp_cipher_st* @EVP_aes_192_gcm() #0 {
define dso_local %struct.evp_cipher_st* @EVP_aes_256_gcm() #0 {
define dso_local %struct.evp_cipher_st* @EVP_aes_128_xts() #0 {
define internal i32 @aes_xts_init_key(%struct.evp_cipher_ctx_st* %ctx, i8* %key, i8* %iv, i32 %enc) #0 {
define internal i32 @aes_xts_cipher(%struct.evp_cipher_ctx_st* %ctx, i8* %out, i8* %in, i64 %len) #0 {
define internal i32 @aes_xts_ctrl(%struct.evp_cipher_ctx_st* %c, i32 %type, i32 %arg, i8* %ptr) #0 {
define dso_local %struct.evp_cipher_st* @EVP_aes_256_xts() #0 {
define dso_local %struct.evp_cipher_st* @EVP_aes_128_ccm() #0 {
define internal i32 @aes_ccm_init_key(%struct.evp_cipher_ctx_st* %ctx, i8* %key, i8* %iv, i32 %enc) #0 {
define internal i32 @aes_ccm_cipher(%struct.evp_cipher_ctx_st* %ctx, i8* %out, i8* %in, i64 %len) #0 {
define internal i32 @aes_ccm_ctrl(%struct.evp_cipher_ctx_st* %c, i32 %type, i32 %arg, i8* %ptr) #0 {
define dso_local %struct.evp_cipher_st* @EVP_aes_192_ccm() #0 {
define dso_local %struct.evp_cipher_st* @EVP_aes_256_ccm() #0 {
define dso_local %struct.evp_cipher_st* @EVP_aes_128_wrap() #0 {
define internal i32 @aes_wrap_init_key(%struct.evp_cipher_ctx_st* %ctx, i8* %key, i8* %iv, i32 %enc) #0 {
define internal i32 @aes_wrap_cipher(%struct.evp_cipher_ctx_st* %ctx, i8* %out, i8* %in, i64 %inlen) #0 {
define dso_local %struct.evp_cipher_st* @EVP_aes_192_wrap() #0 {
define dso_local %struct.evp_cipher_st* @EVP_aes_256_wrap() #0 {
define dso_local i32 @EVP_add_cipher(%struct.evp_cipher_st* %c) #0 {
define dso_local i32 @EVP_add_digest(%struct.env_md_st* %md) #0 {
define dso_local %struct.evp_cipher_st* @EVP_get_cipherbyname(i8* %name) #0 {
define dso_local %struct.env_md_st* @EVP_get_digestbyname(i8* %name) #0 {
define dso_local void @EVP_cleanup() #0 {
define dso_local void @EVP_CIPHER_do_all(void (%struct.evp_cipher_st*, i8*, i8*, i8*)* %fn, i8* %arg) #0 {
define internal void @do_all_cipher_fn(%struct.__va_list_tag* %nm, i8* %arg) #0 {
define dso_local void @EVP_CIPHER_do_all_sorted(void (%struct.evp_cipher_st*, i8*, i8*, i8*)* %fn, i8* %arg) #0 {
define dso_local void @EVP_MD_do_all(void (%struct.env_md_st*, i8*, i8*, i8*)* %fn, i8* %arg) #0 {
define internal void @do_all_md_fn(%struct.__va_list_tag* %nm, i8* %arg) #0 {
define dso_local void @EVP_MD_do_all_sorted(void (%struct.env_md_st*, i8*, i8*, i8*)* %fn, i8* %arg) #0 {
define dso_local %struct.evp_cipher_st* @EVP_seed_cbc() #0 {
define internal i32 @seed_init_key(%struct.evp_cipher_ctx_st* %ctx, i8* %key, i8* %iv, i32 %enc) #0 {
define internal i32 @seed_cbc_cipher(%struct.evp_cipher_ctx_st* %ctx, i8* %out, i8* %in, i64 %inl) #0 {
define dso_local %struct.evp_cipher_st* @EVP_seed_cfb128() #0 {
define internal i32 @seed_cfb128_cipher(%struct.evp_cipher_ctx_st* %ctx, i8* %out, i8* %in, i64 %inl) #0 {
define dso_local %struct.evp_cipher_st* @EVP_seed_ofb() #0 {
define internal i32 @seed_ofb_cipher(%struct.evp_cipher_ctx_st* %ctx, i8* %out, i8* %in, i64 %inl) #0 {
define dso_local %struct.evp_cipher_st* @EVP_seed_ecb() #0 {
define internal i32 @seed_ecb_cipher(%struct.evp_cipher_ctx_st* %ctx, i8* %out, i8* %in, i64 %inl) #0 {
define dso_local %struct.env_md_st* @EVP_md5() #0 {
define internal i32 @init(%struct.env_md_ctx_st* %ctx) #0 {
define internal i32 @update(%struct.env_md_ctx_st* %ctx, i8* %data, i64 %count) #0 {
define internal i32 @final(%struct.env_md_ctx_st* %ctx, i8* %md) #0 {
define dso_local %struct.env_md_st* @EVP_sha1() #0 {
define internal i32 @init.4603(%struct.env_md_ctx_st* %ctx) #0 {
define internal i32 @update.4604(%struct.env_md_ctx_st* %ctx, i8* %data, i64 %count) #0 {
define internal i32 @final.4605(%struct.env_md_ctx_st* %ctx, i8* %md) #0 {
define dso_local %struct.env_md_st* @EVP_sha224() #0 {
define internal i32 @init224(%struct.env_md_ctx_st* %ctx) #0 {
define internal i32 @update256(%struct.env_md_ctx_st* %ctx, i8* %data, i64 %count) #0 {
define internal i32 @final256(%struct.env_md_ctx_st* %ctx, i8* %md) #0 {
define dso_local %struct.env_md_st* @EVP_sha256() #0 {
define internal i32 @init256(%struct.env_md_ctx_st* %ctx) #0 {
define dso_local %struct.env_md_st* @EVP_sha384() #0 {
define internal i32 @init384(%struct.env_md_ctx_st* %ctx) #0 {
define internal i32 @update512(%struct.env_md_ctx_st* %ctx, i8* %data, i64 %count) #0 {
define internal i32 @final512(%struct.env_md_ctx_st* %ctx, i8* %md) #0 {
define dso_local %struct.env_md_st* @EVP_sha512() #0 {
define internal i32 @init512(%struct.env_md_ctx_st* %ctx) #0 {
define dso_local %struct.env_md_st* @EVP_ecdsa() #0 {
define internal i32 @init.4616(%struct.env_md_ctx_st* %ctx) #0 {
define internal i32 @update.4617(%struct.env_md_ctx_st* %ctx, i8* %data, i64 %count) #0 {
define internal i32 @final.4618(%struct.env_md_ctx_st* %ctx, i8* %md) #0 {
define dso_local i32 @EVP_SignFinal(%struct.env_md_ctx_st* %ctx, i8* %sigret, i32* %siglen, %struct.evp_pkey_st* %pkey) #0 {
define dso_local i32 @EVP_VerifyFinal(%struct.env_md_ctx_st* %ctx, i8* %sigbuf, i32 %siglen, %struct.evp_pkey_st* %pkey) #0 {
define dso_local i32 @EVP_PKEY_bits(%struct.evp_pkey_st.12512* %pkey) #0 {
define dso_local i32 @EVP_PKEY_size(%struct.evp_pkey_st.12512* %pkey) #0 {
define dso_local i32 @EVP_PKEY_save_parameters(%struct.evp_pkey_st.12512* %pkey, i32 %mode) #0 {
define dso_local i32 @EVP_PKEY_copy_parameters(%struct.evp_pkey_st.12512* %to, %struct.evp_pkey_st.12512* %from) #0 {
define dso_local i32 @EVP_PKEY_missing_parameters(%struct.evp_pkey_st.12512* %pkey) #0 {
define dso_local i32 @EVP_PKEY_cmp_parameters(%struct.evp_pkey_st.12512* %a, %struct.evp_pkey_st.12512* %b) #0 {
define dso_local i32 @EVP_PKEY_cmp(%struct.evp_pkey_st.12512* %a, %struct.evp_pkey_st.12512* %b) #0 {
define dso_local %struct.evp_pkey_st.12512* @EVP_PKEY_new() #0 {
define dso_local i32 @EVP_PKEY_set_type(%struct.evp_pkey_st.12512* %pkey, i32 %type) #0 {
define internal i32 @pkey_set_type(%struct.evp_pkey_st.12512* %pkey, i32 %type, i8* %str, i32 %len) #0 {
define internal void @EVP_PKEY_free_it(%struct.evp_pkey_st.12512* %x) #0 {
define dso_local i32 @EVP_PKEY_set_type_str(%struct.evp_pkey_st.12512* %pkey, i8* %str, i32 %len) #0 {
define dso_local i32 @EVP_PKEY_assign(%struct.evp_pkey_st.12512* %pkey, i32 %type, i8* %key) #0 {
define dso_local i8* @EVP_PKEY_get0(%struct.evp_pkey_st.12512* %pkey) #0 {
define dso_local i32 @EVP_PKEY_set1_RSA(%struct.evp_pkey_st.12512* %pkey, %struct.rsa_st* %key) #0 {
define dso_local %struct.rsa_st* @EVP_PKEY_get1_RSA(%struct.evp_pkey_st.12512* %pkey) #0 {
define dso_local i32 @EVP_PKEY_set1_EC_KEY(%struct.evp_pkey_st.12512* %pkey, %struct.ec_key_st* %key) #0 {
define dso_local %struct.ec_key_st* @EVP_PKEY_get1_EC_KEY(%struct.evp_pkey_st.12512* %pkey) #0 {
define dso_local i32 @EVP_PKEY_set1_DH(%struct.evp_pkey_st.12512* %pkey, %struct.dh_st* %key) #0 {
define dso_local %struct.dh_st* @EVP_PKEY_get1_DH(%struct.evp_pkey_st.12512* %pkey) #0 {
define dso_local i32 @EVP_PKEY_type(i32 %type) #0 {
define dso_local i32 @EVP_PKEY_id(%struct.evp_pkey_st.12512* %pkey) #0 {
define dso_local i32 @EVP_PKEY_base_id(%struct.evp_pkey_st.12512* %pkey) #0 {
define dso_local void @EVP_PKEY_free(%struct.evp_pkey_st.12512* %x) #0 {
define dso_local i32 @EVP_PKEY_print_public(%struct.bio_st* %out, %struct.evp_pkey_st.12512* %pkey, i32 %indent, %struct.asn1_pctx_st* %pctx) #0 {
define internal i32 @unsup_alg(%struct.bio_st* %out, %struct.evp_pkey_st.12512* %pkey, i32 %indent, i8* %kstr) #0 {
define dso_local i32 @EVP_PKEY_print_private(%struct.bio_st* %out, %struct.evp_pkey_st.12512* %pkey, i32 %indent, %struct.asn1_pctx_st* %pctx) #0 {
define dso_local i32 @EVP_PKEY_print_params(%struct.bio_st* %out, %struct.evp_pkey_st.12512* %pkey, i32 %indent, %struct.asn1_pctx_st* %pctx) #0 {
define dso_local i32 @EVP_PKEY_get_default_digest_nid(%struct.evp_pkey_st.12512* %pkey, i32* %pnid) #0 {
define dso_local void @ERR_load_EVP_strings() #0 {
define dso_local %struct.evp_cipher_st* @EVP_enc_null() #0 {
define internal i32 @null_init_key(%struct.evp_cipher_ctx_st* %ctx, i8* %key, i8* %iv, i32 %enc) #0 {
define internal i32 @null_cipher(%struct.evp_cipher_ctx_st* %ctx, i8* %out, i8* %in, i64 %inl) #0 {
define dso_local void @OPENSSL_add_all_algorithms_noconf() #0 {
define dso_local void @OpenSSL_add_all_ciphers() #0 {
define dso_local void @OpenSSL_add_all_digests() #0 {
define dso_local i32 @EVP_CIPHER_param_to_asn1(%struct.evp_cipher_ctx_st.12541* %c, %struct.asn1_type_st* %type) #0 {
define dso_local i64 @EVP_CIPHER_CTX_flags(%struct.evp_cipher_ctx_st.12541* %ctx) #0 {
define dso_local i32 @EVP_CIPHER_CTX_nid(%struct.evp_cipher_ctx_st.12541* %ctx) #0 {
define dso_local i32 @EVP_CIPHER_set_asn1_iv(%struct.evp_cipher_ctx_st.12541* %c, %struct.asn1_type_st* %type) #0 {
define dso_local i32 @EVP_CIPHER_CTX_iv_length(%struct.evp_cipher_ctx_st.12541* %ctx) #0 {
define dso_local i32 @EVP_CIPHER_asn1_to_param(%struct.evp_cipher_ctx_st.12541* %c, %struct.asn1_type_st* %type) #0 {
define dso_local i32 @EVP_CIPHER_get_asn1_iv(%struct.evp_cipher_ctx_st.12541* %c, %struct.asn1_type_st* %type) #0 {
define dso_local i32 @EVP_CIPHER_type(%struct.evp_cipher_st.12539* %ctx) #0 {
define dso_local i32 @EVP_CIPHER_nid(%struct.evp_cipher_st.12539* %cipher) #0 {
define dso_local i32 @EVP_CIPHER_block_size(%struct.evp_cipher_st.12539* %e) #0 {
define dso_local i32 @EVP_CIPHER_CTX_block_size(%struct.evp_cipher_ctx_st.12541* %ctx) #0 {
define dso_local i32 @EVP_Cipher(%struct.evp_cipher_ctx_st.12541* %ctx, i8* %out, i8* %in, i32 %inl) #0 {
define dso_local %struct.evp_cipher_st.12539* @EVP_CIPHER_CTX_cipher(%struct.evp_cipher_ctx_st.12541* %ctx) #0 {
define dso_local i64 @EVP_CIPHER_flags(%struct.evp_cipher_st.12539* %cipher) #0 {
define dso_local i8* @EVP_CIPHER_CTX_get_app_data(%struct.evp_cipher_ctx_st.12541* %ctx) #0 {
define dso_local void @EVP_CIPHER_CTX_set_app_data(%struct.evp_cipher_ctx_st.12541* %ctx, i8* %data) #0 {
define dso_local i32 @EVP_CIPHER_iv_length(%struct.evp_cipher_st.12539* %cipher) #0 {
define dso_local i32 @EVP_CIPHER_key_length(%struct.evp_cipher_st.12539* %cipher) #0 {
define dso_local i32 @EVP_CIPHER_CTX_key_length(%struct.evp_cipher_ctx_st.12541* %ctx) #0 {
define dso_local i32 @EVP_MD_block_size(%struct.env_md_st* %md) #0 {
define dso_local i32 @EVP_MD_type(%struct.env_md_st* %md) #0 {
define dso_local i32 @EVP_MD_pkey_type(%struct.env_md_st* %md) #0 {
define dso_local i32 @EVP_MD_size(%struct.env_md_st* %md) #0 {
define dso_local i64 @EVP_MD_flags(%struct.env_md_st* %md) #0 {
define dso_local %struct.env_md_st* @EVP_MD_CTX_md(%struct.env_md_ctx_st* %ctx) #0 {
define dso_local void @EVP_MD_CTX_set_flags(%struct.env_md_ctx_st* %ctx, i32 %flags) #0 {
define dso_local void @EVP_MD_CTX_clear_flags(%struct.env_md_ctx_st* %ctx, i32 %flags) #0 {
define dso_local i32 @EVP_MD_CTX_test_flags(%struct.env_md_ctx_st* %ctx, i32 %flags) #0 {
define dso_local void @EVP_CIPHER_CTX_set_flags(%struct.evp_cipher_ctx_st.12541* %ctx, i32 %flags) #0 {
define dso_local void @EVP_CIPHER_CTX_clear_flags(%struct.evp_cipher_ctx_st.12541* %ctx, i32 %flags) #0 {
define dso_local i32 @EVP_CIPHER_CTX_test_flags(%struct.evp_cipher_ctx_st.12541* %ctx, i32 %flags) #0 {
define dso_local i32 @EVP_PBE_CipherInit(%struct.asn1_object_st* %pbe_obj, i8* %pass, i32 %passlen, %struct.asn1_type_st* %param, %struct.evp_cipher_ctx_st* %ctx, i32 %en_de) #0 {
define dso_local i32 @EVP_PBE_find(i32 %type, i32 %pbe_nid, i32* %pcnid, i32* %pmnid, i32 (%struct.evp_cipher_ctx_st*, i8*, i32, %struct.asn1_type_st*, %struct.evp_cipher_st*, %struct.env_md_st*, i32)** %pkeygen) #0 {
define internal %struct.EVP_PBE_CTL* @OBJ_bsearch_pbe2(%struct.EVP_PBE_CTL* %key, %struct.EVP_PBE_CTL* %base, i32 %num) #0 {
define internal i32 @pbe2_cmp_BSEARCH_CMP_FN(i8* %a_, i8* %b_) #0 {
define internal i32 @pbe2_cmp(%struct.EVP_PBE_CTL* %pbe1, %struct.EVP_PBE_CTL* %pbe2) #0 {
define dso_local i32 @EVP_PBE_alg_add_type(i32 %pbe_type, i32 %pbe_nid, i32 %cipher_nid, i32 %md_nid, i32 (%struct.evp_cipher_ctx_st*, i8*, i32, %struct.asn1_type_st*, %struct.evp_cipher_st*, %struct.env_md_st*, i32)* %keygen) #0 {
define internal i32 @pbe_cmp(%struct.EVP_PBE_CTL** %a, %struct.EVP_PBE_CTL** %b) #0 {
define dso_local i32 @EVP_PBE_alg_add(i32 %nid, %struct.evp_cipher_st* %cipher, %struct.env_md_st* %md, i32 (%struct.evp_cipher_ctx_st*, i8*, i32, %struct.asn1_type_st*, %struct.evp_cipher_st*, %struct.env_md_st*, i32)* %keygen) #0 {
define dso_local void @EVP_PBE_cleanup() #0 {
define internal void @free_evp_pbe_ctl(%struct.EVP_PBE_CTL* %pbe) #0 {
define dso_local void @PKCS5_PBE_add() #0 {
define dso_local i32 @PKCS5_PBE_keyivgen(%struct.evp_cipher_ctx_st* %cctx, i8* %pass, i32 %passlen, %struct.asn1_type_st* %param, %struct.evp_cipher_st* %cipher, %struct.env_md_st* %md, i32 %en_de) #0 {
define dso_local i32 @PKCS5_PBKDF2_HMAC(i8* %pass, i32 %passlen, i8* %salt, i32 %saltlen, i32 %iter, %struct.env_md_st* %digest, i32 %keylen, i8* %out) #0 {
define dso_local i32 @PKCS5_PBKDF2_HMAC_SHA1(i8* %pass, i32 %passlen, i8* %salt, i32 %saltlen, i32 %iter, i32 %keylen, i8* %out) #0 {
define dso_local i32 @PKCS5_v2_PBE_keyivgen(%struct.evp_cipher_ctx_st* %ctx, i8* %pass, i32 %passlen, %struct.asn1_type_st* %param, %struct.evp_cipher_st* %c, %struct.env_md_st* %md, i32 %en_de) #0 {
define dso_local i32 @PKCS5_v2_PBKDF2_keyivgen(%struct.evp_cipher_ctx_st* %ctx, i8* %pass, i32 %passlen, %struct.asn1_type_st* %param, %struct.evp_cipher_st* %c, %struct.env_md_st* %md, i32 %en_de) #0 {
define dso_local %struct.evp_pkey_method_st.12608* @EVP_PKEY_meth_find(i32 %type) #0 {
define internal %struct.evp_pkey_method_st.12608** @OBJ_bsearch_pmeth(%struct.evp_pkey_method_st.12608** %key, %struct.evp_pkey_method_st.12608** %base, i32 %num) #0 {
define internal i32 @pmeth_cmp_BSEARCH_CMP_FN(i8* %a_, i8* %b_) #0 {
define internal i32 @pmeth_cmp(%struct.evp_pkey_method_st.12608** %a, %struct.evp_pkey_method_st.12608** %b) #0 {
define dso_local %struct.evp_pkey_method_st.12608* @EVP_PKEY_meth_new(i32 %id, i32 %flags) #0 {
define dso_local void @EVP_PKEY_meth_get0_info(i32* %ppkey_id, i32* %pflags, %struct.evp_pkey_method_st.12608* %meth) #0 {
define dso_local void @EVP_PKEY_meth_copy(%struct.evp_pkey_method_st.12608* %dst, %struct.evp_pkey_method_st.12608* %src) #0 {
define dso_local void @EVP_PKEY_meth_free(%struct.evp_pkey_method_st.12608* %pmeth) #0 {
define dso_local %struct.evp_pkey_ctx_st.12607* @EVP_PKEY_CTX_new(%struct.evp_pkey_st.12606* %pkey, %struct.engine_st.11761* %e) #0 {
define internal %struct.evp_pkey_ctx_st.12607* @int_ctx_new(%struct.evp_pkey_st.12606* %pkey, %struct.engine_st.11761* %e, i32 %id) #0 {
define dso_local void @EVP_PKEY_CTX_free(%struct.evp_pkey_ctx_st.12607* %ctx) #0 {
define dso_local %struct.evp_pkey_ctx_st.12607* @EVP_PKEY_CTX_new_id(i32 %id, %struct.engine_st.11761* %e) #0 {
define dso_local %struct.evp_pkey_ctx_st.12607* @EVP_PKEY_CTX_dup(%struct.evp_pkey_ctx_st.12607* %pctx) #0 {
define dso_local i32 @EVP_PKEY_meth_add0(%struct.evp_pkey_method_st.12608* %pmeth) #0 {
define dso_local i32 @EVP_PKEY_CTX_ctrl(%struct.evp_pkey_ctx_st.12607* %ctx, i32 %keytype, i32 %optype, i32 %cmd, i32 %p1, i8* %p2) #0 {
define dso_local i32 @EVP_PKEY_CTX_ctrl_str(%struct.evp_pkey_ctx_st.12607* %ctx, i8* %name, i8* %value) #0 {
define dso_local i32 @EVP_PKEY_CTX_get_operation(%struct.evp_pkey_ctx_st.12607* %ctx) #0 {
define dso_local void @EVP_PKEY_CTX_set0_keygen_info(%struct.evp_pkey_ctx_st.12607* %ctx, i32* %dat, i32 %datlen) #0 {
define dso_local void @EVP_PKEY_CTX_set_data(%struct.evp_pkey_ctx_st.12607* %ctx, i8* %data) #0 {
define dso_local i8* @EVP_PKEY_CTX_get_data(%struct.evp_pkey_ctx_st.12607* %ctx) #0 {
define dso_local %struct.evp_pkey_st.12606* @EVP_PKEY_CTX_get0_pkey(%struct.evp_pkey_ctx_st.12607* %ctx) #0 {
define dso_local %struct.evp_pkey_st.12606* @EVP_PKEY_CTX_get0_peerkey(%struct.evp_pkey_ctx_st.12607* %ctx) #0 {
define dso_local void @EVP_PKEY_CTX_set_app_data(%struct.evp_pkey_ctx_st.12607* %ctx, i8* %data) #0 {
define dso_local i8* @EVP_PKEY_CTX_get_app_data(%struct.evp_pkey_ctx_st.12607* %ctx) #0 {
define dso_local void @EVP_PKEY_meth_set_init(%struct.evp_pkey_method_st.12608* %pmeth, i32 (%struct.evp_pkey_ctx_st.12607*)* %init) #0 {
define dso_local void @EVP_PKEY_meth_set_copy(%struct.evp_pkey_method_st.12608* %pmeth, i32 (%struct.evp_pkey_ctx_st.12607*, %struct.evp_pkey_ctx_st.12607*)* %copy) #0 {
define dso_local void @EVP_PKEY_meth_set_cleanup(%struct.evp_pkey_method_st.12608* %pmeth, void (%struct.evp_pkey_ctx_st.12607*)* %cleanup) #0 {
define dso_local void @EVP_PKEY_meth_set_paramgen(%struct.evp_pkey_method_st.12608* %pmeth, i32 (%struct.evp_pkey_ctx_st.12607*)* %paramgen_init, i32 (%struct.evp_pkey_ctx_st.12607*, %struct.evp_pkey_st.12606*)* %paramgen) #0 {
define dso_local void @EVP_PKEY_meth_set_keygen(%struct.evp_pkey_method_st.12608* %pmeth, i32 (%struct.evp_pkey_ctx_st.12607*)* %keygen_init, i32 (%struct.evp_pkey_ctx_st.12607*, %struct.evp_pkey_st.12606*)* %keygen) #0 {
define dso_local void @EVP_PKEY_meth_set_sign(%struct.evp_pkey_method_st.12608* %pmeth, i32 (%struct.evp_pkey_ctx_st.12607*)* %sign_init, i32 (%struct.evp_pkey_ctx_st.12607*, i8*, i64*, i8*, i64)* %sign) #0 {
define dso_local void @EVP_PKEY_meth_set_verify(%struct.evp_pkey_method_st.12608* %pmeth, i32 (%struct.evp_pkey_ctx_st.12607*)* %verify_init, i32 (%struct.evp_pkey_ctx_st.12607*, i8*, i64, i8*, i64)* %verify) #0 {
define dso_local void @EVP_PKEY_meth_set_verify_recover(%struct.evp_pkey_method_st.12608* %pmeth, i32 (%struct.evp_pkey_ctx_st.12607*)* %verify_recover_init, i32 (%struct.evp_pkey_ctx_st.12607*, i8*, i64*, i8*, i64)* %verify_recover) #0 {
define dso_local void @EVP_PKEY_meth_set_signctx(%struct.evp_pkey_method_st.12608* %pmeth, i32 (%struct.evp_pkey_ctx_st.12607*, %struct.env_md_ctx_st.12602*)* %signctx_init, i32 (%struct.evp_pkey_ctx_st.12607*, i8*, i64*, %struct.env_md_ctx_st.12602*)* %signctx) #0 {
define dso_local void @EVP_PKEY_meth_set_verifyctx(%struct.evp_pkey_method_st.12608* %pmeth, i32 (%struct.evp_pkey_ctx_st.12607*, %struct.env_md_ctx_st.12602*)* %verifyctx_init, i32 (%struct.evp_pkey_ctx_st.12607*, i8*, i32, %struct.env_md_ctx_st.12602*)* %verifyctx) #0 {
define dso_local void @EVP_PKEY_meth_set_encrypt(%struct.evp_pkey_method_st.12608* %pmeth, i32 (%struct.evp_pkey_ctx_st.12607*)* %encrypt_init, i32 (%struct.evp_pkey_ctx_st.12607*, i8*, i64*, i8*, i64)* %encryptfn) #0 {
define dso_local void @EVP_PKEY_meth_set_decrypt(%struct.evp_pkey_method_st.12608* %pmeth, i32 (%struct.evp_pkey_ctx_st.12607*)* %decrypt_init, i32 (%struct.evp_pkey_ctx_st.12607*, i8*, i64*, i8*, i64)* %decrypt) #0 {
define dso_local void @EVP_PKEY_meth_set_derive(%struct.evp_pkey_method_st.12608* %pmeth, i32 (%struct.evp_pkey_ctx_st.12607*)* %derive_init, i32 (%struct.evp_pkey_ctx_st.12607*, i8*, i64*)* %derive) #0 {
define dso_local void @EVP_PKEY_meth_set_ctrl(%struct.evp_pkey_method_st.12608* %pmeth, i32 (%struct.evp_pkey_ctx_st.12607*, i32, i32, i8*)* %ctrl, i32 (%struct.evp_pkey_ctx_st.12607*, i8*, i8*)* %ctrl_str) #0 {
define dso_local void @EVP_PKEY_meth_get_init(%struct.evp_pkey_method_st.12608* %pmeth, i32 (%struct.evp_pkey_ctx_st.12607*)** %pinit) #0 {
define dso_local void @EVP_PKEY_meth_get_copy(%struct.evp_pkey_method_st.12608* %pmeth, i32 (%struct.evp_pkey_ctx_st.12607*, %struct.evp_pkey_ctx_st.12607*)** %pcopy) #0 {
define dso_local void @EVP_PKEY_meth_get_cleanup(%struct.evp_pkey_method_st.12608* %pmeth, void (%struct.evp_pkey_ctx_st.12607*)** %pcleanup) #0 {
define dso_local void @EVP_PKEY_meth_get_paramgen(%struct.evp_pkey_method_st.12608* %pmeth, i32 (%struct.evp_pkey_ctx_st.12607*)** %pparamgen_init, i32 (%struct.evp_pkey_ctx_st.12607*, %struct.evp_pkey_st.12606*)** %pparamgen) #0 {
define dso_local void @EVP_PKEY_meth_get_keygen(%struct.evp_pkey_method_st.12608* %pmeth, i32 (%struct.evp_pkey_ctx_st.12607*)** %pkeygen_init, i32 (%struct.evp_pkey_ctx_st.12607*, %struct.evp_pkey_st.12606*)** %pkeygen) #0 {
define dso_local void @EVP_PKEY_meth_get_sign(%struct.evp_pkey_method_st.12608* %pmeth, i32 (%struct.evp_pkey_ctx_st.12607*)** %psign_init, i32 (%struct.evp_pkey_ctx_st.12607*, i8*, i64*, i8*, i64)** %psign) #0 {
define dso_local void @EVP_PKEY_meth_get_verify(%struct.evp_pkey_method_st.12608* %pmeth, i32 (%struct.evp_pkey_ctx_st.12607*)** %pverify_init, i32 (%struct.evp_pkey_ctx_st.12607*, i8*, i64, i8*, i64)** %pverify) #0 {
define dso_local void @EVP_PKEY_meth_get_verify_recover(%struct.evp_pkey_method_st.12608* %pmeth, i32 (%struct.evp_pkey_ctx_st.12607*)** %pverify_recover_init, i32 (%struct.evp_pkey_ctx_st.12607*, i8*, i64*, i8*, i64)** %pverify_recover) #0 {
define dso_local void @EVP_PKEY_meth_get_signctx(%struct.evp_pkey_method_st.12608* %pmeth, i32 (%struct.evp_pkey_ctx_st.12607*, %struct.env_md_ctx_st.12602*)** %psignctx_init, i32 (%struct.evp_pkey_ctx_st.12607*, i8*, i64*, %struct.env_md_ctx_st.12602*)** %psignctx) #0 {
define dso_local void @EVP_PKEY_meth_get_verifyctx(%struct.evp_pkey_method_st.12608* %pmeth, i32 (%struct.evp_pkey_ctx_st.12607*, %struct.env_md_ctx_st.12602*)** %pverifyctx_init, i32 (%struct.evp_pkey_ctx_st.12607*, i8*, i32, %struct.env_md_ctx_st.12602*)** %pverifyctx) #0 {
define dso_local void @EVP_PKEY_meth_get_encrypt(%struct.evp_pkey_method_st.12608* %pmeth, i32 (%struct.evp_pkey_ctx_st.12607*)** %pencrypt_init, i32 (%struct.evp_pkey_ctx_st.12607*, i8*, i64*, i8*, i64)** %pencryptfn) #0 {
define dso_local void @EVP_PKEY_meth_get_decrypt(%struct.evp_pkey_method_st.12608* %pmeth, i32 (%struct.evp_pkey_ctx_st.12607*)** %pdecrypt_init, i32 (%struct.evp_pkey_ctx_st.12607*, i8*, i64*, i8*, i64)** %pdecrypt) #0 {
define dso_local void @EVP_PKEY_meth_get_derive(%struct.evp_pkey_method_st.12608* %pmeth, i32 (%struct.evp_pkey_ctx_st.12607*)** %pderive_init, i32 (%struct.evp_pkey_ctx_st.12607*, i8*, i64*)** %pderive) #0 {
define dso_local void @EVP_PKEY_meth_get_ctrl(%struct.evp_pkey_method_st.12608* %pmeth, i32 (%struct.evp_pkey_ctx_st.12607*, i32, i32, i8*)** %pctrl, i32 (%struct.evp_pkey_ctx_st.12607*, i8*, i8*)** %pctrl_str) #0 {
define dso_local i32 @EVP_PKEY_sign_init(%struct.evp_pkey_ctx_st.12616* %ctx) #0 {
define dso_local i32 @EVP_PKEY_sign(%struct.evp_pkey_ctx_st.12616* %ctx, i8* %sig, i64* %siglen, i8* %tbs, i64 %tbslen) #0 {
define dso_local i32 @EVP_PKEY_verify_init(%struct.evp_pkey_ctx_st.12616* %ctx) #0 {
define dso_local i32 @EVP_PKEY_verify(%struct.evp_pkey_ctx_st.12616* %ctx, i8* %sig, i64 %siglen, i8* %tbs, i64 %tbslen) #0 {
define dso_local i32 @EVP_PKEY_verify_recover_init(%struct.evp_pkey_ctx_st.12616* %ctx) #0 {
define dso_local i32 @EVP_PKEY_verify_recover(%struct.evp_pkey_ctx_st.12616* %ctx, i8* %rout, i64* %routlen, i8* %sig, i64 %siglen) #0 {
define dso_local i32 @EVP_PKEY_encrypt_init(%struct.evp_pkey_ctx_st.12616* %ctx) #0 {
define dso_local i32 @EVP_PKEY_encrypt(%struct.evp_pkey_ctx_st.12616* %ctx, i8* %out, i64* %outlen, i8* %in, i64 %inlen) #0 {
define dso_local i32 @EVP_PKEY_decrypt_init(%struct.evp_pkey_ctx_st.12616* %ctx) #0 {
define dso_local i32 @EVP_PKEY_decrypt(%struct.evp_pkey_ctx_st.12616* %ctx, i8* %out, i64* %outlen, i8* %in, i64 %inlen) #0 {
define dso_local i32 @EVP_PKEY_derive_init(%struct.evp_pkey_ctx_st.12616* %ctx) #0 {
define dso_local i32 @EVP_PKEY_derive_set_peer(%struct.evp_pkey_ctx_st.12616* %ctx, %struct.evp_pkey_st.12512* %peer) #0 {
define dso_local i32 @EVP_PKEY_derive(%struct.evp_pkey_ctx_st.12616* %ctx, i8* %key, i64* %pkeylen) #0 {
define dso_local i32 @EVP_PKEY_paramgen_init(%struct.evp_pkey_ctx_st.12624* %ctx) #0 {
define dso_local i32 @EVP_PKEY_paramgen(%struct.evp_pkey_ctx_st.12624* %ctx, %struct.evp_pkey_st.12512** %ppkey) #0 {
define dso_local i32 @EVP_PKEY_keygen_init(%struct.evp_pkey_ctx_st.12624* %ctx) #0 {
define dso_local i32 @EVP_PKEY_keygen(%struct.evp_pkey_ctx_st.12624* %ctx, %struct.evp_pkey_st.12512** %ppkey) #0 {
define dso_local void @EVP_PKEY_CTX_set_cb(%struct.evp_pkey_ctx_st.12624* %ctx, i32 (%struct.evp_pkey_ctx_st.12624*)* %cb) #0 {
define dso_local i32 (%struct.evp_pkey_ctx_st.12624*)* @EVP_PKEY_CTX_get_cb(%struct.evp_pkey_ctx_st.12624* %ctx) #0 {
define dso_local void @evp_pkey_set_cb_translate(%struct.bn_gencb_st* %cb, %struct.evp_pkey_ctx_st.12624* %ctx) #0 {
define internal i32 @trans_cb(i32 %a, i32 %b, %struct.bn_gencb_st* %gcb) #0 {
define dso_local i32 @EVP_PKEY_CTX_get_keygen_info(%struct.evp_pkey_ctx_st.12624* %ctx, i32 %idx) #0 {
define dso_local %struct.evp_pkey_st.12512* @EVP_PKEY_new_mac_key(i32 %type, %struct.engine_st* %e, i8* %key, i32 %keylen) #0 {
define dso_local i32 @EVP_DigestSignInit(%struct.env_md_ctx_st* %ctx, %struct.evp_pkey_ctx_st** %pctx, %struct.env_md_st* %type, %struct.engine_st* %e, %struct.evp_pkey_st* %pkey) #0 {
define internal i32 @do_sigver_init(%struct.env_md_ctx_st* %ctx, %struct.evp_pkey_ctx_st** %pctx, %struct.env_md_st* %type, %struct.engine_st* %e, %struct.evp_pkey_st* %pkey, i32 %ver) #0 {
define dso_local i32 @EVP_DigestVerifyInit(%struct.env_md_ctx_st* %ctx, %struct.evp_pkey_ctx_st** %pctx, %struct.env_md_st* %type, %struct.engine_st* %e, %struct.evp_pkey_st* %pkey) #0 {
define dso_local i32 @EVP_DigestSignFinal(%struct.env_md_ctx_st* %ctx, i8* %sigret, i64* %siglen) #0 {
define dso_local i32 @EVP_DigestVerifyFinal(%struct.env_md_ctx_st* %ctx, i8* %sig, i64 %siglen) #0 {
define dso_local %struct.evp_cipher_st* @EVP_aes_128_cbc_hmac_sha1() #0 {
define dso_local %struct.evp_cipher_st* @EVP_aes_256_cbc_hmac_sha1() #0 {
define dso_local %struct.evp_cipher_st* @EVP_aes_128_cbc_hmac_sha256() #0 {
define dso_local %struct.evp_cipher_st* @EVP_aes_256_cbc_hmac_sha256() #0 {
define dso_local i32 @i2d_ASN1_OBJECT(%struct.asn1_object_st* %a, i8** %pp) #0 {
define dso_local i32 @a2d_ASN1_OBJECT(i8* %out, i32 %olen, i8* %buf, i32 %num) #0 {
define dso_local i32 @i2t_ASN1_OBJECT(i8* %buf, i32 %buf_len, %struct.asn1_object_st* %a) #0 {
define dso_local i32 @i2a_ASN1_OBJECT(%struct.bio_st* %bp, %struct.asn1_object_st* %a) #0 {
define dso_local %struct.asn1_object_st* @d2i_ASN1_OBJECT(%struct.asn1_object_st** %a, i8** %pp, i64 %length) #0 {
define dso_local %struct.asn1_object_st* @c2i_ASN1_OBJECT(%struct.asn1_object_st** %a, i8** %pp, i64 %len) #0 {
define dso_local %struct.asn1_object_st* @ASN1_OBJECT_new() #0 {
define dso_local void @ASN1_OBJECT_free(%struct.asn1_object_st* %a) #0 {
define dso_local %struct.asn1_object_st* @ASN1_OBJECT_create(i32 %nid, i8* %data, i32 %len, i8* %sn, i8* %ln) #0 {
define dso_local %struct.asn1_string_st* @ASN1_INTEGER_dup(%struct.asn1_string_st* %x) #0 {
define dso_local i32 @ASN1_INTEGER_cmp(%struct.asn1_string_st* %x, %struct.asn1_string_st* %y) #0 {
define dso_local i32 @i2c_ASN1_INTEGER(%struct.asn1_string_st* %a, i8** %pp) #0 {
define dso_local %struct.asn1_string_st* @c2i_ASN1_INTEGER(%struct.asn1_string_st** %a, i8** %pp, i64 %len) #0 {
define dso_local %struct.asn1_string_st* @d2i_ASN1_UINTEGER(%struct.asn1_string_st** %a, i8** %pp, i64 %length) #0 {
define dso_local i32 @ASN1_INTEGER_set(%struct.asn1_string_st* %a, i64 %v) #0 {
define dso_local i64 @ASN1_INTEGER_get(%struct.asn1_string_st* %a) #0 {
define dso_local %struct.asn1_string_st* @BN_to_ASN1_INTEGER(%struct.bignum_st* %bn, %struct.asn1_string_st* %ai) #0 {
define dso_local %struct.bignum_st* @ASN1_INTEGER_to_BN(%struct.asn1_string_st* %ai, %struct.bignum_st* %bn) #0 {
define dso_local i32 @ASN1_TYPE_get(%struct.asn1_type_st* %a) #0 {
define dso_local void @ASN1_TYPE_set(%struct.asn1_type_st* %a, i32 %type, i8* %value) #0 {
define dso_local i32 @ASN1_TYPE_set1(%struct.asn1_type_st* %a, i32 %type, i8* %value) #0 {
define dso_local i32 @ASN1_TYPE_cmp(%struct.asn1_type_st* %a, %struct.asn1_type_st* %b) #0 {
define dso_local i8* @ASN1_dup(i32 (i8*, i8**)* %i2d, i8* (i8**, i8**, i64)* %d2i, i8* %x) #0 {
define dso_local i8* @ASN1_item_dup(%struct.ASN1_ITEM_st* %it, i8* %x) #0 {
define dso_local i8* @ASN1_d2i_fp(i8* ()* %xnew, i8* (i8**, i8**, i64)* %d2i, %struct._IO_FILE* %in, i8** %x) #0 {
define dso_local i8* @ASN1_d2i_bio(i8* ()* %xnew, i8* (i8**, i8**, i64)* %d2i, %struct.bio_st* %in, i8** %x) #0 {
define internal i32 @asn1_d2i_read_bio(%struct.bio_st* %in, %struct.buf_mem_st** %pb) #0 {
define dso_local i8* @ASN1_item_d2i_bio(%struct.ASN1_ITEM_st* %it, %struct.bio_st* %in, i8* %x) #0 {
define dso_local i8* @ASN1_item_d2i_fp(%struct.ASN1_ITEM_st* %it, %struct._IO_FILE* %in, i8* %x) #0 {
define dso_local i32 @X509_NAME_print_ex(%struct.bio_st* %out, %struct.X509_name_st* %nm, i32 %indent, i64 %flags) #0 {
define internal i32 @send_bio_chars(i8* %arg, i8* %buf, i32 %len) #0 {
define internal i32 @do_name_ex(i32 (i8*, i8*, i32)* %io_ch, i8* %arg, %struct.X509_name_st* %n, i32 %indent, i64 %flags) #0 {
define internal i32 @do_indent(i32 (i8*, i8*, i32)* %io_ch, i8* %arg, i32 %indent) #0 {
define internal i32 @do_print_ex(i32 (i8*, i8*, i32)* %io_ch, i8* %arg, i64 %lflags, %struct.asn1_string_st* %str) #0 {
define internal i32 @do_dump(i64 %lflags, i32 (i8*, i8*, i32)* %io_ch, i8* %arg, %struct.asn1_string_st* %str) #0 {
define internal i32 @do_buf(i8* %buf, i32 %buflen, i32 %type, i8 zeroext %flags, i8* %quotes, i32 (i8*, i8*, i32)* %io_ch, i8* %arg) #0 {
define internal i32 @do_esc_char(i64 %c, i8 zeroext %flags, i8* %do_quotes, i32 (i8*, i8*, i32)* %io_ch, i8* %arg) #0 {
define internal i32 @do_hex_dump(i32 (i8*, i8*, i32)* %io_ch, i8* %arg, i8* %buf, i32 %buflen) #0 {
define dso_local i32 @X509_NAME_print_ex_fp(%struct._IO_FILE* %fp, %struct.X509_name_st* %nm, i32 %indent, i64 %flags) #0 {
define internal i32 @send_fp_chars(i8* %arg, i8* %buf, i32 %len) #0 {
define dso_local i32 @ASN1_STRING_print_ex(%struct.bio_st* %out, %struct.asn1_string_st* %str, i64 %flags) #0 {
define dso_local i32 @ASN1_STRING_print_ex_fp(%struct._IO_FILE* %fp, %struct.asn1_string_st* %str, i64 %flags) #0 {
define dso_local i32 @ASN1_STRING_to_UTF8(i8** %out, %struct.asn1_string_st* %in) #0 {
define dso_local %struct.X509_algor_st* @d2i_X509_ALGOR(%struct.X509_algor_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_X509_ALGOR(%struct.X509_algor_st* %a, i8** %out) #0 {
define dso_local %struct.X509_algor_st* @X509_ALGOR_new() #0 {
define dso_local void @X509_ALGOR_free(%struct.X509_algor_st* %a) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @d2i_X509_ALGORS(%struct.stack_st_SSL_CIPHER** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_X509_ALGORS(%struct.stack_st_SSL_CIPHER* %a, i8** %out) #0 {
define dso_local %struct.X509_algor_st* @X509_ALGOR_dup(%struct.X509_algor_st* %x) #0 {
define dso_local i32 @X509_ALGOR_set0(%struct.X509_algor_st* %alg, %struct.asn1_object_st* %aobj, i32 %ptype, i8* %pval) #0 {
define dso_local void @X509_ALGOR_get0(%struct.asn1_object_st** %paobj, i32* %pptype, i8** %ppval, %struct.X509_algor_st* %algor) #0 {
define dso_local void @X509_ALGOR_set_md(%struct.X509_algor_st* %alg, %struct.env_md_st* %md) #0 {
define dso_local i32 @X509_ALGOR_cmp(%struct.X509_algor_st* %a, %struct.X509_algor_st* %b) #0 {
define dso_local %struct.X509_pubkey_st.12498* @d2i_X509_PUBKEY(%struct.X509_pubkey_st.12498** %a, i8** %in, i64 %len) #0 {
define internal i32 @pubkey_cb(i32 %operation, %struct.ASN1_VALUE_st** %pval, %struct.ASN1_ITEM_st* %it, i8* %exarg) #0 {
define dso_local i32 @i2d_X509_PUBKEY(%struct.X509_pubkey_st.12498* %a, i8** %out) #0 {
define dso_local %struct.X509_pubkey_st.12498* @X509_PUBKEY_new() #0 {
define dso_local void @X509_PUBKEY_free(%struct.X509_pubkey_st.12498* %a) #0 {
define dso_local i32 @X509_PUBKEY_set(%struct.X509_pubkey_st.12498** %x, %struct.evp_pkey_st.12512* %pkey) #0 {
define dso_local %struct.evp_pkey_st.12512* @X509_PUBKEY_get(%struct.X509_pubkey_st.12498* %key) #0 {
define dso_local %struct.evp_pkey_st.12512* @d2i_PUBKEY(%struct.evp_pkey_st.12512** %a, i8** %pp, i64 %length) #0 {
define dso_local i32 @i2d_PUBKEY(%struct.evp_pkey_st.12512* %a, i8** %pp) #0 {
define dso_local %struct.rsa_st* @d2i_RSA_PUBKEY(%struct.rsa_st** %a, i8** %pp, i64 %length) #0 {
define dso_local i32 @i2d_RSA_PUBKEY(%struct.rsa_st* %a, i8** %pp) #0 {
define dso_local %struct.ec_key_st* @d2i_EC_PUBKEY(%struct.ec_key_st** %a, i8** %pp, i64 %length) #0 {
define dso_local i32 @i2d_EC_PUBKEY(%struct.ec_key_st* %a, i8** %pp) #0 {
define dso_local i32 @X509_PUBKEY_set0_param(%struct.X509_pubkey_st.12498* %pub, %struct.asn1_object_st* %aobj, i32 %ptype, i8* %pval, i8* %penc, i32 %penclen) #0 {
define dso_local i32 @X509_PUBKEY_get0_param(%struct.asn1_object_st** %ppkalg, i8** %pk, i32* %ppklen, %struct.X509_algor_st** %pa, %struct.X509_pubkey_st.12498* %pub) #0 {
define dso_local %struct.X509_sig_st* @d2i_X509_SIG(%struct.X509_sig_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_X509_SIG(%struct.X509_sig_st* %a, i8** %out) #0 {
define dso_local %struct.X509_sig_st* @X509_SIG_new() #0 {
define dso_local void @X509_SIG_free(%struct.X509_sig_st* %a) #0 {
define dso_local %struct.x509_attributes_st* @d2i_X509_ATTRIBUTE(%struct.x509_attributes_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_X509_ATTRIBUTE(%struct.x509_attributes_st* %a, i8** %out) #0 {
define dso_local %struct.x509_attributes_st* @X509_ATTRIBUTE_new() #0 {
define dso_local void @X509_ATTRIBUTE_free(%struct.x509_attributes_st* %a) #0 {
define dso_local %struct.x509_attributes_st* @X509_ATTRIBUTE_dup(%struct.x509_attributes_st* %x) #0 {
define dso_local %struct.x509_attributes_st* @X509_ATTRIBUTE_create(i32 %nid, i32 %atrtype, i8* %value) #0 {
define internal i32 @bn_new(%struct.ASN1_VALUE_st** %pval, %struct.ASN1_ITEM_st* %it) #0 {
define internal void @bn_free(%struct.ASN1_VALUE_st** %pval, %struct.ASN1_ITEM_st* %it) #0 {
define internal i32 @bn_c2i(%struct.ASN1_VALUE_st** %pval, i8* %cont, i32 %len, i32 %utype, i8* %free_cont, %struct.ASN1_ITEM_st* %it) #0 {
define internal i32 @bn_i2c(%struct.ASN1_VALUE_st** %pval, i8* %cont, i32* %putype, %struct.ASN1_ITEM_st* %it) #0 {
define internal i32 @bn_print(%struct.bio_st* %out, %struct.ASN1_VALUE_st** %pval, %struct.ASN1_ITEM_st* %it, i32 %indent, %struct.asn1_pctx_st* %pctx) #0 {
define internal i32 @long_new(%struct.ASN1_VALUE_st** %pval, %struct.ASN1_ITEM_st* %it) #0 {
define internal void @long_free(%struct.ASN1_VALUE_st** %pval, %struct.ASN1_ITEM_st* %it) #0 {
define internal i32 @long_c2i(%struct.ASN1_VALUE_st** %pval, i8* %cont, i32 %len, i32 %utype, i8* %free_cont, %struct.ASN1_ITEM_st* %it) #0 {
define internal i32 @long_i2c(%struct.ASN1_VALUE_st** %pval, i8* %cont, i32* %putype, %struct.ASN1_ITEM_st* %it) #0 {
define internal i32 @long_print(%struct.bio_st* %out, %struct.ASN1_VALUE_st** %pval, %struct.ASN1_ITEM_st* %it, i32 %indent, %struct.asn1_pctx_st* %pctx) #0 {
define dso_local %struct.X509_name_entry_st* @d2i_X509_NAME_ENTRY(%struct.X509_name_entry_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_X509_NAME_ENTRY(%struct.X509_name_entry_st* %a, i8** %out) #0 {
define dso_local %struct.X509_name_entry_st* @X509_NAME_ENTRY_new() #0 {
define dso_local void @X509_NAME_ENTRY_free(%struct.X509_name_entry_st* %a) #0 {
define dso_local %struct.X509_name_entry_st* @X509_NAME_ENTRY_dup(%struct.X509_name_entry_st* %x) #0 {
define dso_local %struct.X509_name_st* @d2i_X509_NAME(%struct.X509_name_st** %a, i8** %in, i64 %len) #0 {
define internal i32 @x509_name_ex_new(%struct.ASN1_VALUE_st** %val, %struct.ASN1_ITEM_st* %it) #0 {
define internal void @x509_name_ex_free(%struct.ASN1_VALUE_st** %pval, %struct.ASN1_ITEM_st* %it) #0 {
define internal i32 @x509_name_ex_d2i(%struct.ASN1_VALUE_st** %val, i8** %in, i64 %len, %struct.ASN1_ITEM_st* %it, i32 %tag, i32 %aclass, i8 signext %opt, %struct.ASN1_TLC_st* %ctx) #0 {
define internal i32 @x509_name_ex_i2d(%struct.ASN1_VALUE_st** %val, i8** %out, %struct.ASN1_ITEM_st* %it, i32 %tag, i32 %aclass) #0 {
define internal i32 @x509_name_ex_print(%struct.bio_st* %out, %struct.ASN1_VALUE_st** %pval, i32 %indent, i8* %fname, %struct.asn1_pctx_st* %pctx) #0 {
define internal i32 @x509_name_encode(%struct.X509_name_st* %a) #0 {
define internal i32 @x509_name_canon(%struct.X509_name_st* %a) #0 {
define internal i32 @asn1_string_canon(%struct.asn1_string_st* %out, %struct.asn1_string_st* %in) #0 {
define internal i32 @i2d_name_canon(%struct.stack_st_SSL_CIPHER* %_intname, i8** %in) #0 {
define internal void @local_sk_X509_NAME_ENTRY_pop_free(%struct.stack_st_SSL_CIPHER* %ne) #0 {
define internal void @local_sk_X509_NAME_ENTRY_free(%struct.stack_st_SSL_CIPHER* %ne) #0 {
define dso_local void @X509_NAME_free(%struct.X509_name_st* %a) #0 {
define dso_local i32 @i2d_X509_NAME(%struct.X509_name_st* %a, i8** %out) #0 {
define dso_local %struct.X509_name_st* @X509_NAME_new() #0 {
define dso_local %struct.X509_name_st* @X509_NAME_dup(%struct.X509_name_st* %x) #0 {
define dso_local i32 @X509_NAME_set(%struct.X509_name_st** %xn, %struct.X509_name_st* %name) #0 {
define dso_local %struct.x509_cinf_st* @d2i_X509_CINF(%struct.x509_cinf_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_X509_CINF(%struct.x509_cinf_st* %a, i8** %out) #0 {
define dso_local %struct.x509_cinf_st* @X509_CINF_new() #0 {
define dso_local void @X509_CINF_free(%struct.x509_cinf_st* %a) #0 {
define dso_local %struct.x509_st* @d2i_X509(%struct.x509_st** %a, i8** %in, i64 %len) #0 {
define internal i32 @x509_cb(i32 %operation, %struct.ASN1_VALUE_st** %pval, %struct.ASN1_ITEM_st* %it, i8* %exarg) #0 {
define dso_local i32 @i2d_X509(%struct.x509_st* %a, i8** %out) #0 {
define dso_local %struct.x509_st* @X509_new() #0 {
define dso_local void @X509_free(%struct.x509_st* %a) #0 {
define dso_local %struct.x509_st* @X509_dup(%struct.x509_st* %x) #0 {
define dso_local i32 @X509_get_ex_new_index(i64 %argl, i8* %argp, i32 (i8*, i8*, %struct.crypto_ex_data_st*, i32, i64, i8*)* %new_func, i32 (%struct.crypto_ex_data_st*, %struct.crypto_ex_data_st*, i8*, i32, i64, i8*)* %dup_func, void (i8*, i8*, %struct.crypto_ex_data_st*, i32, i64, i8*)* %free_func) #0 {
define dso_local i32 @X509_set_ex_data(%struct.x509_st* %r, i32 %idx, i8* %arg) #0 {
define dso_local i8* @X509_get_ex_data(%struct.x509_st* %r, i32 %idx) #0 {
define dso_local %struct.x509_st* @d2i_X509_AUX(%struct.x509_st** %a, i8** %pp, i64 %length) #0 {
define dso_local i32 @i2d_X509_AUX(%struct.x509_st* %a, i8** %pp) #0 {
define internal i32 @i2d_x509_aux_internal(%struct.x509_st* %a, i8** %pp) #0 {
define dso_local i32 @i2d_re_X509_tbs(%struct.x509_st* %x, i8** %pp) #0 {
define dso_local void @X509_get0_signature(%struct.asn1_string_st** %psig, %struct.X509_algor_st** %palg, %struct.x509_st* %x) #0 {
define dso_local i32 @X509_get_signature_nid(%struct.x509_st* %x) #0 {
define dso_local %struct.x509_cert_aux_st* @d2i_X509_CERT_AUX(%struct.x509_cert_aux_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_X509_CERT_AUX(%struct.x509_cert_aux_st* %a, i8** %out) #0 {
define dso_local %struct.x509_cert_aux_st* @X509_CERT_AUX_new() #0 {
define dso_local void @X509_CERT_AUX_free(%struct.x509_cert_aux_st* %a) #0 {
define dso_local i32 @X509_alias_set1(%struct.x509_st.12835* %x, i8* %name, i32 %len) #0 {
define internal %struct.x509_cert_aux_st* @aux_get(%struct.x509_st.12835* %x) #0 {
define dso_local i32 @X509_keyid_set1(%struct.x509_st.12835* %x, i8* %id, i32 %len) #0 {
define dso_local i8* @X509_alias_get0(%struct.x509_st.12835* %x, i32* %len) #0 {
define dso_local i8* @X509_keyid_get0(%struct.x509_st.12835* %x, i32* %len) #0 {
define dso_local i32 @X509_add1_trust_object(%struct.x509_st.12835* %x, %struct.asn1_object_st* %obj) #0 {
define dso_local i32 @X509_add1_reject_object(%struct.x509_st.12835* %x, %struct.asn1_object_st* %obj) #0 {
define dso_local void @X509_trust_clear(%struct.x509_st.12835* %x) #0 {
define dso_local void @X509_reject_clear(%struct.x509_st.12835* %x) #0 {
define dso_local %struct.x509_cert_pair_st* @d2i_X509_CERT_PAIR(%struct.x509_cert_pair_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_X509_CERT_PAIR(%struct.x509_cert_pair_st* %a, i8** %out) #0 {
define dso_local %struct.x509_cert_pair_st* @X509_CERT_PAIR_new() #0 {
define dso_local void @X509_CERT_PAIR_free(%struct.x509_cert_pair_st* %a) #0 {
define dso_local %struct.evp_pkey_st.12512* @d2i_PrivateKey(i32 %type, %struct.evp_pkey_st.12512** %a, i8** %pp, i64 %length) #0 {
define dso_local %struct.evp_pkey_st.12512* @d2i_AutoPrivateKey(%struct.evp_pkey_st.12512** %a, i8** %pp, i64 %length) #0 {
define dso_local i32 @X509_print_fp(%struct._IO_FILE* %fp, %struct.x509_st.12889* %x) #0 {
define dso_local i32 @X509_print_ex_fp(%struct._IO_FILE* %fp, %struct.x509_st.12889* %x, i64 %nmflag, i64 %cflag) #0 {
define dso_local i32 @X509_print_ex(%struct.bio_st* %bp, %struct.x509_st.12889* %x, i64 %nmflags, i64 %cflag) #0 {
define dso_local i32 @X509_signature_print(%struct.bio_st* %bp, %struct.X509_algor_st* %sigalg, %struct.asn1_string_st* %sig) #0 {
define dso_local i32 @ASN1_TIME_print(%struct.bio_st* %bp, %struct.asn1_string_st* %tm) #0 {
define dso_local i32 @X509_signature_dump(%struct.bio_st* %bp, %struct.asn1_string_st* %sig, i32 %indent) #0 {
define dso_local i32 @ASN1_UTCTIME_print(%struct.bio_st* %bp, %struct.asn1_string_st* %tm) #0 {
define dso_local i32 @ASN1_GENERALIZEDTIME_print(%struct.bio_st* %bp, %struct.asn1_string_st* %tm) #0 {
define dso_local i32 @X509_print(%struct.bio_st* %bp, %struct.x509_st.12889* %x) #0 {
define dso_local i32 @X509_ocspid_print(%struct.bio_st* %bp, %struct.x509_st.12889* %x) #0 {
define dso_local i32 @ASN1_STRING_print(%struct.bio_st* %bp, %struct.asn1_string_st* %v) #0 {
define dso_local i32 @X509_NAME_print(%struct.bio_st* %bp, %struct.X509_name_st* %name, i32 %obase) #0 {
define dso_local i32 @X509_CERT_AUX_print(%struct.bio_st* %out, %struct.x509_cert_aux_st* %aux, i32 %indent) #0 {
define dso_local i32 @ASN1_bn_print(%struct.bio_st* %bp, i8* %number, %struct.bignum_st* %num, i8* %buf, i32 %off) #0 {
define dso_local %struct.ASN1_VALUE_st* @ASN1_item_new(%struct.ASN1_ITEM_st* %it) #0 {
define dso_local i32 @ASN1_item_ex_new(%struct.ASN1_VALUE_st** %pval, %struct.ASN1_ITEM_st* %it) #0 {
define internal i32 @asn1_item_ex_combine_new(%struct.ASN1_VALUE_st** %pval, %struct.ASN1_ITEM_st* %it, i32 %combine) #0 {
define dso_local i32 @ASN1_template_new(%struct.ASN1_VALUE_st** %pval, %struct.ASN1_TEMPLATE_st* %tt) #0 {
define dso_local i32 @ASN1_primitive_new(%struct.ASN1_VALUE_st** %pval, %struct.ASN1_ITEM_st* %it) #0 {
define internal void @asn1_template_clear(%struct.ASN1_VALUE_st** %pval, %struct.ASN1_TEMPLATE_st* %tt) #0 {
define internal void @asn1_item_clear(%struct.ASN1_VALUE_st** %pval, %struct.ASN1_ITEM_st* %it) #0 {
define internal void @asn1_primitive_clear(%struct.ASN1_VALUE_st** %pval, %struct.ASN1_ITEM_st* %it) #0 {
define dso_local void @ASN1_item_free(%struct.ASN1_VALUE_st* %val, %struct.ASN1_ITEM_st* %it) #0 {
define dso_local void @asn1_item_combine_free(%struct.ASN1_VALUE_st** %pval, %struct.ASN1_ITEM_st* %it, i32 %combine) #0 {
define dso_local void @ASN1_template_free(%struct.ASN1_VALUE_st** %pval, %struct.ASN1_TEMPLATE_st* %tt) #0 {
define dso_local void @ASN1_primitive_free(%struct.ASN1_VALUE_st** %pval, %struct.ASN1_ITEM_st* %it) #0 {
define dso_local void @ASN1_item_ex_free(%struct.ASN1_VALUE_st** %pval, %struct.ASN1_ITEM_st* %it) #0 {
define dso_local i32 @ASN1_item_ndef_i2d(%struct.ASN1_VALUE_st* %val, i8** %out, %struct.ASN1_ITEM_st* %it) #0 {
define internal i32 @asn1_item_flags_i2d(%struct.ASN1_VALUE_st* %val, i8** %out, %struct.ASN1_ITEM_st* %it, i32 %flags) #0 {
define dso_local i32 @ASN1_item_ex_i2d(%struct.ASN1_VALUE_st** %pval, i8** %out, %struct.ASN1_ITEM_st* %it, i32 %tag, i32 %aclass) #0 {
define internal i32 @asn1_template_ex_i2d(%struct.ASN1_VALUE_st** %pval, i8** %out, %struct.ASN1_TEMPLATE_st* %tt, i32 %tag, i32 %iclass) #0 {
define internal i32 @asn1_i2d_ex_primitive(%struct.ASN1_VALUE_st** %pval, i8** %out, %struct.ASN1_ITEM_st* %it, i32 %tag, i32 %aclass) #0 {
define dso_local i32 @asn1_ex_i2c(%struct.ASN1_VALUE_st** %pval, i8* %cout, i32* %putype, %struct.ASN1_ITEM_st* %it) #0 {
define internal i32 @asn1_set_seq_out(%struct.stack_st_SSL_CIPHER* %sk, i8** %out, i32 %skcontlen, %struct.ASN1_ITEM_st* %item, i32 %do_sort, i32 %iclass) #0 {
define internal i32 @der_cmp(i8* %a, i8* %b) #0 {
define dso_local i32 @ASN1_item_i2d(%struct.ASN1_VALUE_st* %val, i8** %out, %struct.ASN1_ITEM_st* %it) #0 {
define dso_local i32 @ASN1_template_i2d(%struct.ASN1_VALUE_st** %pval, i8** %out, %struct.ASN1_TEMPLATE_st* %tt) #0 {
define dso_local i64 @ASN1_tag2bit(i32 %tag) #0 {
define dso_local %struct.ASN1_VALUE_st* @ASN1_item_d2i(%struct.ASN1_VALUE_st** %pval, i8** %in, i64 %len, %struct.ASN1_ITEM_st* %it) #0 {
define dso_local i32 @ASN1_item_ex_d2i(%struct.ASN1_VALUE_st** %pval, i8** %in, i64 %len, %struct.ASN1_ITEM_st* %it, i32 %tag, i32 %aclass, i8 signext %opt, %struct.ASN1_TLC_st* %ctx) #0 {
define internal i32 @asn1_item_ex_d2i(%struct.ASN1_VALUE_st** %pval, i8** %in, i64 %len, %struct.ASN1_ITEM_st* %it, i32 %tag, i32 %aclass, i8 signext %opt, %struct.ASN1_TLC_st* %ctx, i32 %depth) #0 {
define internal i32 @asn1_template_ex_d2i(%struct.ASN1_VALUE_st** %val, i8** %in, i64 %inlen, %struct.ASN1_TEMPLATE_st* %tt, i8 signext %opt, %struct.ASN1_TLC_st* %ctx, i32 %depth) #0 {
define internal i32 @asn1_d2i_ex_primitive(%struct.ASN1_VALUE_st** %pval, i8** %in, i64 %inlen, %struct.ASN1_ITEM_st* %it, i32 %tag, i32 %aclass, i8 signext %opt, %struct.ASN1_TLC_st* %ctx) #0 {
define internal i32 @asn1_check_tlen(i64* %olen, i32* %otag, i8* %oclass, i8* %inf, i8* %cst, i8** %in, i64 %len, i32 %exptag, i32 %expclass, i8 signext %opt, %struct.ASN1_TLC_st* %ctx) #0 {
define internal i32 @asn1_check_eoc(i8** %in, i64 %len) #0 {
define internal i32 @asn1_find_end(i8** %in, i64 %len, i8 signext %inf) #0 {
define internal i32 @asn1_collect(%struct.buf_mem_st* %buf, i8** %in, i64 %len, i8 signext %inf, i32 %tag, i32 %aclass, i32 %depth) #0 {
define dso_local i32 @asn1_ex_c2i(%struct.ASN1_VALUE_st** %pval, i8* %cont, i32 %len, i32 %utype, i8* %free_cont, %struct.ASN1_ITEM_st* %it) #0 {
define internal i32 @collect_data(%struct.buf_mem_st* %buf, i8** %p, i64 %plen) #0 {
define internal i32 @asn1_template_noexp_d2i(%struct.ASN1_VALUE_st** %val, i8** %in, i64 %len, %struct.ASN1_TEMPLATE_st* %tt, i8 signext %opt, %struct.ASN1_TLC_st* %ctx, i32 %depth) #0 {
define dso_local i32 @ASN1_template_d2i(%struct.ASN1_VALUE_st** %pval, i8** %in, i64 %len, %struct.ASN1_TEMPLATE_st* %tt) #0 {
define dso_local i32 @asn1_get_choice_selector(%struct.ASN1_VALUE_st** %pval, %struct.ASN1_ITEM_st* %it) #0 {
define dso_local i32 @asn1_set_choice_selector(%struct.ASN1_VALUE_st** %pval, i32 %value, %struct.ASN1_ITEM_st* %it) #0 {
define dso_local i32 @asn1_do_lock(%struct.ASN1_VALUE_st** %pval, i32 %op, %struct.ASN1_ITEM_st* %it) #0 {
define dso_local void @asn1_enc_init(%struct.ASN1_VALUE_st** %pval, %struct.ASN1_ITEM_st* %it) #0 {
define internal %struct.ASN1_ENCODING_st* @asn1_get_enc_ptr(%struct.ASN1_VALUE_st** %pval, %struct.ASN1_ITEM_st* %it) #0 {
define dso_local void @asn1_enc_free(%struct.ASN1_VALUE_st** %pval, %struct.ASN1_ITEM_st* %it) #0 {
define dso_local i32 @asn1_enc_save(%struct.ASN1_VALUE_st** %pval, i8* %in, i32 %inlen, %struct.ASN1_ITEM_st* %it) #0 {
define dso_local i32 @asn1_enc_restore(i32* %len, i8** %out, %struct.ASN1_VALUE_st** %pval, %struct.ASN1_ITEM_st* %it) #0 {
define dso_local %struct.ASN1_VALUE_st** @asn1_get_field_ptr(%struct.ASN1_VALUE_st** %pval, %struct.ASN1_TEMPLATE_st* %tt) #0 {
define dso_local %struct.ASN1_TEMPLATE_st* @asn1_do_adb(%struct.ASN1_VALUE_st** %pval, %struct.ASN1_TEMPLATE_st* %tt, i32 %nullerr) #0 {
define dso_local %struct.asn1_string_st* @d2i_ASN1_INTEGER(%struct.asn1_string_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_ASN1_INTEGER(%struct.asn1_string_st* %a, i8** %out) #0 {
define dso_local %struct.asn1_string_st* @ASN1_INTEGER_new() #0 {
define dso_local void @ASN1_INTEGER_free(%struct.asn1_string_st* %a) #0 {
define dso_local %struct.asn1_string_st* @d2i_ASN1_ENUMERATED(%struct.asn1_string_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_ASN1_ENUMERATED(%struct.asn1_string_st* %a, i8** %out) #0 {
define dso_local %struct.asn1_string_st* @ASN1_ENUMERATED_new() #0 {
define dso_local void @ASN1_ENUMERATED_free(%struct.asn1_string_st* %a) #0 {
define dso_local %struct.asn1_string_st* @d2i_ASN1_BIT_STRING(%struct.asn1_string_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_ASN1_BIT_STRING(%struct.asn1_string_st* %a, i8** %out) #0 {
define dso_local %struct.asn1_string_st* @ASN1_BIT_STRING_new() #0 {
define dso_local void @ASN1_BIT_STRING_free(%struct.asn1_string_st* %a) #0 {
define dso_local %struct.asn1_string_st* @d2i_ASN1_OCTET_STRING(%struct.asn1_string_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_ASN1_OCTET_STRING(%struct.asn1_string_st* %a, i8** %out) #0 {
define dso_local %struct.asn1_string_st* @ASN1_OCTET_STRING_new() #0 {
define dso_local void @ASN1_OCTET_STRING_free(%struct.asn1_string_st* %a) #0 {
define dso_local i32* @d2i_ASN1_NULL(i32** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_ASN1_NULL(i32* %a, i8** %out) #0 {
define dso_local i32* @ASN1_NULL_new() #0 {
define dso_local void @ASN1_NULL_free(i32* %a) #0 {
define dso_local %struct.asn1_string_st* @d2i_ASN1_UTF8STRING(%struct.asn1_string_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_ASN1_UTF8STRING(%struct.asn1_string_st* %a, i8** %out) #0 {
define dso_local %struct.asn1_string_st* @ASN1_UTF8STRING_new() #0 {
define dso_local void @ASN1_UTF8STRING_free(%struct.asn1_string_st* %a) #0 {
define dso_local %struct.asn1_string_st* @d2i_ASN1_PRINTABLESTRING(%struct.asn1_string_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_ASN1_PRINTABLESTRING(%struct.asn1_string_st* %a, i8** %out) #0 {
define dso_local %struct.asn1_string_st* @ASN1_PRINTABLESTRING_new() #0 {
define dso_local void @ASN1_PRINTABLESTRING_free(%struct.asn1_string_st* %a) #0 {
define dso_local %struct.asn1_string_st* @d2i_ASN1_T61STRING(%struct.asn1_string_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_ASN1_T61STRING(%struct.asn1_string_st* %a, i8** %out) #0 {
define dso_local %struct.asn1_string_st* @ASN1_T61STRING_new() #0 {
define dso_local void @ASN1_T61STRING_free(%struct.asn1_string_st* %a) #0 {
define dso_local %struct.asn1_string_st* @d2i_ASN1_IA5STRING(%struct.asn1_string_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_ASN1_IA5STRING(%struct.asn1_string_st* %a, i8** %out) #0 {
define dso_local %struct.asn1_string_st* @ASN1_IA5STRING_new() #0 {
define dso_local void @ASN1_IA5STRING_free(%struct.asn1_string_st* %a) #0 {
define dso_local %struct.asn1_string_st* @d2i_ASN1_GENERALSTRING(%struct.asn1_string_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_ASN1_GENERALSTRING(%struct.asn1_string_st* %a, i8** %out) #0 {
define dso_local %struct.asn1_string_st* @ASN1_GENERALSTRING_new() #0 {
define dso_local void @ASN1_GENERALSTRING_free(%struct.asn1_string_st* %a) #0 {
define dso_local %struct.asn1_string_st* @d2i_ASN1_UTCTIME(%struct.asn1_string_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_ASN1_UTCTIME(%struct.asn1_string_st* %a, i8** %out) #0 {
define dso_local %struct.asn1_string_st* @ASN1_UTCTIME_new() #0 {
define dso_local void @ASN1_UTCTIME_free(%struct.asn1_string_st* %a) #0 {
define dso_local %struct.asn1_string_st* @d2i_ASN1_GENERALIZEDTIME(%struct.asn1_string_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_ASN1_GENERALIZEDTIME(%struct.asn1_string_st* %a, i8** %out) #0 {
define dso_local %struct.asn1_string_st* @ASN1_GENERALIZEDTIME_new() #0 {
define dso_local void @ASN1_GENERALIZEDTIME_free(%struct.asn1_string_st* %a) #0 {
define dso_local %struct.asn1_string_st* @d2i_ASN1_VISIBLESTRING(%struct.asn1_string_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_ASN1_VISIBLESTRING(%struct.asn1_string_st* %a, i8** %out) #0 {
define dso_local %struct.asn1_string_st* @ASN1_VISIBLESTRING_new() #0 {
define dso_local void @ASN1_VISIBLESTRING_free(%struct.asn1_string_st* %a) #0 {
define dso_local %struct.asn1_string_st* @d2i_ASN1_UNIVERSALSTRING(%struct.asn1_string_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_ASN1_UNIVERSALSTRING(%struct.asn1_string_st* %a, i8** %out) #0 {
define dso_local %struct.asn1_string_st* @ASN1_UNIVERSALSTRING_new() #0 {
define dso_local void @ASN1_UNIVERSALSTRING_free(%struct.asn1_string_st* %a) #0 {
define dso_local %struct.asn1_string_st* @d2i_ASN1_BMPSTRING(%struct.asn1_string_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_ASN1_BMPSTRING(%struct.asn1_string_st* %a, i8** %out) #0 {
define dso_local %struct.asn1_string_st* @ASN1_BMPSTRING_new() #0 {
define dso_local void @ASN1_BMPSTRING_free(%struct.asn1_string_st* %a) #0 {
define dso_local %struct.asn1_type_st* @d2i_ASN1_TYPE(%struct.asn1_type_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_ASN1_TYPE(%struct.asn1_type_st* %a, i8** %out) #0 {
define dso_local %struct.asn1_type_st* @ASN1_TYPE_new() #0 {
define dso_local void @ASN1_TYPE_free(%struct.asn1_type_st* %a) #0 {
define dso_local %struct.asn1_string_st* @d2i_ASN1_PRINTABLE(%struct.asn1_string_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_ASN1_PRINTABLE(%struct.asn1_string_st* %a, i8** %out) #0 {
define dso_local %struct.asn1_string_st* @ASN1_PRINTABLE_new() #0 {
define dso_local void @ASN1_PRINTABLE_free(%struct.asn1_string_st* %a) #0 {
define dso_local %struct.asn1_string_st* @d2i_DISPLAYTEXT(%struct.asn1_string_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_DISPLAYTEXT(%struct.asn1_string_st* %a, i8** %out) #0 {
define dso_local %struct.asn1_string_st* @DISPLAYTEXT_new() #0 {
define dso_local void @DISPLAYTEXT_free(%struct.asn1_string_st* %a) #0 {
define dso_local %struct.asn1_string_st* @d2i_DIRECTORYSTRING(%struct.asn1_string_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_DIRECTORYSTRING(%struct.asn1_string_st* %a, i8** %out) #0 {
define dso_local %struct.asn1_string_st* @DIRECTORYSTRING_new() #0 {
define dso_local void @DIRECTORYSTRING_free(%struct.asn1_string_st* %a) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @d2i_ASN1_SEQUENCE_ANY(%struct.stack_st_SSL_CIPHER** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_ASN1_SEQUENCE_ANY(%struct.stack_st_SSL_CIPHER* %a, i8** %out) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @d2i_ASN1_SET_ANY(%struct.stack_st_SSL_CIPHER** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_ASN1_SET_ANY(%struct.stack_st_SSL_CIPHER* %a, i8** %out) #0 {
define dso_local i32 @EVP_PKEY_asn1_get_count() #0 {
define dso_local %struct.evp_pkey_asn1_method_st.12510* @EVP_PKEY_asn1_get0(i32 %idx) #0 {
define dso_local %struct.evp_pkey_asn1_method_st.12510* @EVP_PKEY_asn1_find(%struct.engine_st** %pe, i32 %type) #0 {
define internal %struct.evp_pkey_asn1_method_st.12510* @pkey_asn1_find(i32 %type) #0 {
define internal %struct.evp_pkey_asn1_method_st.12510** @OBJ_bsearch_ameth(%struct.evp_pkey_asn1_method_st.12510** %key, %struct.evp_pkey_asn1_method_st.12510** %base, i32 %num) #0 {
define internal i32 @ameth_cmp_BSEARCH_CMP_FN(i8* %a_, i8* %b_) #0 {
define internal i32 @ameth_cmp(%struct.evp_pkey_asn1_method_st.12510** %a, %struct.evp_pkey_asn1_method_st.12510** %b) #0 {
define dso_local %struct.evp_pkey_asn1_method_st.12510* @EVP_PKEY_asn1_find_str(%struct.engine_st** %pe, i8* %str, i32 %len) #0 {
define dso_local i32 @EVP_PKEY_asn1_add0(%struct.evp_pkey_asn1_method_st.12510* %ameth) #0 {
define dso_local i32 @EVP_PKEY_asn1_add_alias(i32 %to, i32 %from) #0 {
define dso_local %struct.evp_pkey_asn1_method_st.12510* @EVP_PKEY_asn1_new(i32 %id, i32 %flags, i8* %pem_str, i8* %info) #0 {
define dso_local void @EVP_PKEY_asn1_free(%struct.evp_pkey_asn1_method_st.12510* %ameth) #0 {
define dso_local i32 @EVP_PKEY_asn1_get0_info(i32* %ppkey_id, i32* %ppkey_base_id, i32* %ppkey_flags, i8** %pinfo, i8** %ppem_str, %struct.evp_pkey_asn1_method_st.12510* %ameth) #0 {
define dso_local %struct.evp_pkey_asn1_method_st.12510* @EVP_PKEY_get0_asn1(%struct.evp_pkey_st.12512* %pkey) #0 {
define dso_local void @EVP_PKEY_asn1_copy(%struct.evp_pkey_asn1_method_st.12510* %dst, %struct.evp_pkey_asn1_method_st.12510* %src) #0 {
define dso_local void @EVP_PKEY_asn1_set_public(%struct.evp_pkey_asn1_method_st.12510* %ameth, i32 (%struct.evp_pkey_st.12512*, %struct.X509_pubkey_st.12498*)* %pub_decode, i32 (%struct.X509_pubkey_st.12498*, %struct.evp_pkey_st.12512*)* %pub_encode, i32 (%struct.evp_pkey_st.12512*, %struct.evp_pkey_st.12512*)* %pub_cmp, i32 (%struct.bio_st*, %struct.evp_pkey_st.12512*, i32, %struct.asn1_pctx_st*)* %pub_print, i32 (%struct.evp_pkey_st.12512*)* %pkey_size, i32 (%struct.evp_pkey_st.12512*)* %pkey_bits) #0 {
define dso_local void @EVP_PKEY_asn1_set_private(%struct.evp_pkey_asn1_method_st.12510* %ameth, i32 (%struct.evp_pkey_st.12512*, %struct.pkcs8_priv_key_info_st*)* %priv_decode, i32 (%struct.pkcs8_priv_key_info_st*, %struct.evp_pkey_st.12512*)* %priv_encode, i32 (%struct.bio_st*, %struct.evp_pkey_st.12512*, i32, %struct.asn1_pctx_st*)* %priv_print) #0 {
define dso_local void @EVP_PKEY_asn1_set_param(%struct.evp_pkey_asn1_method_st.12510* %ameth, i32 (%struct.evp_pkey_st.12512*, i8**, i32)* %param_decode, i32 (%struct.evp_pkey_st.12512*, i8**)* %param_encode, i32 (%struct.evp_pkey_st.12512*)* %param_missing, i32 (%struct.evp_pkey_st.12512*, %struct.evp_pkey_st.12512*)* %param_copy, i32 (%struct.evp_pkey_st.12512*, %struct.evp_pkey_st.12512*)* %param_cmp, i32 (%struct.bio_st*, %struct.evp_pkey_st.12512*, i32, %struct.asn1_pctx_st*)* %param_print) #0 {
define dso_local void @EVP_PKEY_asn1_set_free(%struct.evp_pkey_asn1_method_st.12510* %ameth, void (%struct.evp_pkey_st.12512*)* %pkey_free) #0 {
define dso_local void @EVP_PKEY_asn1_set_ctrl(%struct.evp_pkey_asn1_method_st.12510* %ameth, i32 (%struct.evp_pkey_st.12512*, i32, i64, i8*)* %pkey_ctrl) #0 {
define dso_local void @EVP_PKEY_asn1_set_item(%struct.evp_pkey_asn1_method_st.12510* %ameth, i32 (%struct.env_md_ctx_st*, %struct.ASN1_ITEM_st*, i8*, %struct.X509_algor_st*, %struct.asn1_string_st*, %struct.evp_pkey_st.12512*)* %item_verify, i32 (%struct.env_md_ctx_st*, %struct.ASN1_ITEM_st*, i8*, %struct.X509_algor_st*, %struct.X509_algor_st*, %struct.asn1_string_st*)* %item_sign) #0 {
define dso_local i32 @i2a_ASN1_INTEGER(%struct.bio_st* %bp, %struct.asn1_string_st* %a) #0 {
define dso_local i32 @a2i_ASN1_INTEGER(%struct.bio_st* %bp, %struct.asn1_string_st* %bs, i8* %buf, i32 %size) #0 {
define dso_local %struct.X509_extension_st* @d2i_X509_EXTENSION(%struct.X509_extension_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_X509_EXTENSION(%struct.X509_extension_st* %a, i8** %out) #0 {
define dso_local %struct.X509_extension_st* @X509_EXTENSION_new() #0 {
define dso_local void @X509_EXTENSION_free(%struct.X509_extension_st* %a) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @d2i_X509_EXTENSIONS(%struct.stack_st_SSL_CIPHER** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_X509_EXTENSIONS(%struct.stack_st_SSL_CIPHER* %a, i8** %out) #0 {
define dso_local %struct.X509_extension_st* @X509_EXTENSION_dup(%struct.X509_extension_st* %x) #0 {
define dso_local i32 @ASN1_parse(%struct.bio_st* %bp, i8* %pp, i64 %len, i32 %indent) #0 {
define internal i32 @asn1_parse2(%struct.bio_st* %bp, i8** %pp, i64 %length, i32 %offset, i32 %depth, i32 %indent, i32 %dump) #0 {
define internal i32 @asn1_print_info(%struct.bio_st* %bp, i32 %tag, i32 %xclass, i32 %constructed, i32 %indent) #0 {
define dso_local i8* @ASN1_tag2str(i32 %tag) #0 {
define dso_local i32 @ASN1_parse_dump(%struct.bio_st* %bp, i8* %pp, i64 %len, i32 %indent, i32 %dump) #0 {
define dso_local i32 @ASN1_check_infinite_end(i8** %p, i64 %len) #0 {
define internal i32 @_asn1_check_infinite_end(i8** %p, i64 %len) #0 {
define dso_local i32 @ASN1_const_check_infinite_end(i8** %p, i64 %len) #0 {
define dso_local i32 @ASN1_get_object(i8** %pp, i64* %plength, i32* %ptag, i32* %pclass, i64 %omax) #0 {
define internal i32 @asn1_get_length(i8** %pp, i32* %inf, i64* %rl, i64 %max) #0 {
define dso_local void @ASN1_put_object(i8** %pp, i32 %constructed, i32 %length, i32 %tag, i32 %xclass) #0 {
define internal void @asn1_put_length(i8** %pp, i32 %length) #0 {
define dso_local i32 @ASN1_put_eoc(i8** %pp) #0 {
define dso_local i32 @ASN1_object_size(i32 %constructed, i32 %length, i32 %tag) #0 {
define dso_local i32 @asn1_Finish(%struct.asn1_const_ctx_st* %c) #0 {
define internal i32 @_asn1_Finish(%struct.asn1_const_ctx_st* %c) #0 {
define dso_local i32 @asn1_const_Finish(%struct.asn1_const_ctx_st* %c) #0 {
define dso_local i32 @asn1_GetSequence(%struct.asn1_const_ctx_st* %c, i64* %length) #0 {
define dso_local i32 @ASN1_STRING_copy(%struct.asn1_string_st* %dst, %struct.asn1_string_st* %str) #0 {
define dso_local i32 @ASN1_STRING_set(%struct.asn1_string_st* %str, i8* %_data, i32 %len) #0 {
define dso_local %struct.asn1_string_st* @ASN1_STRING_dup(%struct.asn1_string_st* %str) #0 {
define dso_local %struct.asn1_string_st* @ASN1_STRING_new() #0 {
define dso_local void @ASN1_STRING_free(%struct.asn1_string_st* %a) #0 {
define dso_local %struct.asn1_string_st* @ASN1_STRING_type_new(i32 %type) #0 {
define dso_local void @ASN1_STRING_set0(%struct.asn1_string_st* %str, i8* %data, i32 %len) #0 {
define dso_local void @ASN1_STRING_clear_free(%struct.asn1_string_st* %a) #0 {
define dso_local i32 @ASN1_STRING_cmp(%struct.asn1_string_st* %a, %struct.asn1_string_st* %b) #0 {
define dso_local void @asn1_add_error(i8* %address, i32 %offset) #0 {
define dso_local i32 @ASN1_STRING_length(%struct.asn1_string_st* %x) #0 {
define dso_local void @ASN1_STRING_length_set(%struct.asn1_string_st* %x, i32 %len) #0 {
define dso_local i32 @ASN1_STRING_type(%struct.asn1_string_st* %x) #0 {
define dso_local i8* @ASN1_STRING_data(%struct.asn1_string_st* %x) #0 {
define dso_local void @ERR_load_ASN1_strings() #0 {
define dso_local i32 @ASN1_TYPE_set_octetstring(%struct.asn1_type_st* %a, i8* %data, i32 %len) #0 {
define dso_local i32 @ASN1_TYPE_get_octetstring(%struct.asn1_type_st* %a, i8* %data, i32 %max_len) #0 {
define dso_local i32 @ASN1_TYPE_set_int_octetstring(%struct.asn1_type_st* %a, i64 %num, i8* %data, i32 %len) #0 {
define dso_local i32 @ASN1_TYPE_get_int_octetstring(%struct.asn1_type_st* %a, i64* %num, i8* %data, i32 %max_len) #0 {
define dso_local %struct.X509_val_st* @d2i_PBEPARAM(%struct.X509_val_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_PBEPARAM(%struct.X509_val_st* %a, i8** %out) #0 {
define dso_local %struct.X509_val_st* @PBEPARAM_new() #0 {
define dso_local void @PBEPARAM_free(%struct.X509_val_st* %a) #0 {
define dso_local i32 @PKCS5_pbe_set0_algor(%struct.X509_algor_st* %algor, i32 %alg, i32 %iter, i8* %salt, i32 %saltlen) #0 {
define dso_local %struct.X509_algor_st* @PKCS5_pbe_set(i32 %alg, i32 %iter, i8* %salt, i32 %saltlen) #0 {
define dso_local %struct.PBE2PARAM_st* @d2i_PBE2PARAM(%struct.PBE2PARAM_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_PBE2PARAM(%struct.PBE2PARAM_st* %a, i8** %out) #0 {
define dso_local %struct.PBE2PARAM_st* @PBE2PARAM_new() #0 {
define dso_local void @PBE2PARAM_free(%struct.PBE2PARAM_st* %a) #0 {
define dso_local %struct.PBKDF2PARAM_st* @d2i_PBKDF2PARAM(%struct.PBKDF2PARAM_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_PBKDF2PARAM(%struct.PBKDF2PARAM_st* %a, i8** %out) #0 {
define dso_local %struct.PBKDF2PARAM_st* @PBKDF2PARAM_new() #0 {
define dso_local void @PBKDF2PARAM_free(%struct.PBKDF2PARAM_st* %a) #0 {
define dso_local %struct.X509_algor_st* @PKCS5_pbe2_set_iv(%struct.evp_cipher_st* %cipher, i32 %iter, i8* %salt, i32 %saltlen, i8* %aiv, i32 %prf_nid) #0 {
define dso_local %struct.X509_algor_st* @PKCS5_pbkdf2_set(i32 %iter, i8* %salt, i32 %saltlen, i32 %prf_nid, i32 %keylen) #0 {
define dso_local %struct.X509_algor_st* @PKCS5_pbe2_set(%struct.evp_cipher_st* %cipher, i32 %iter, i8* %salt, i32 %saltlen) #0 {
define dso_local %struct.pkcs8_priv_key_info_st* @d2i_PKCS8_PRIV_KEY_INFO(%struct.pkcs8_priv_key_info_st** %a, i8** %in, i64 %len) #0 {
define internal i32 @pkey_cb(i32 %operation, %struct.ASN1_VALUE_st** %pval, %struct.ASN1_ITEM_st* %it, i8* %exarg) #0 {
define dso_local i32 @i2d_PKCS8_PRIV_KEY_INFO(%struct.pkcs8_priv_key_info_st* %a, i8** %out) #0 {
define dso_local %struct.pkcs8_priv_key_info_st* @PKCS8_PRIV_KEY_INFO_new() #0 {
define dso_local void @PKCS8_PRIV_KEY_INFO_free(%struct.pkcs8_priv_key_info_st* %a) #0 {
define dso_local i32 @PKCS8_pkey_set0(%struct.pkcs8_priv_key_info_st* %priv, %struct.asn1_object_st* %aobj, i32 %version, i32 %ptype, i8* %pval, i8* %penc, i32 %penclen) #0 {
define dso_local i32 @PKCS8_pkey_get0(%struct.asn1_object_st** %ppkalg, i8** %pk, i32* %ppklen, %struct.X509_algor_st** %pa, %struct.pkcs8_priv_key_info_st* %p8) #0 {
define dso_local i32 @PEM_def_callback(i8* %buf, i32 %num, i32 %rwflag, i8* %userdata) #0 {
define dso_local void @PEM_proc_type(i8* %buf, i32 %type) #0 {
define dso_local void @PEM_dek_info(i8* %buf, i8* %type, i32 %len, i8* %str) #0 {
define dso_local i8* @PEM_ASN1_read(i8* (i8**, i8**, i64)* %d2i, i8* %name, %struct._IO_FILE* %fp, i8** %x, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local i32 @PEM_bytes_read_bio(i8** %pdata, i64* %plen, i8** %pnm, i8* %name, %struct.bio_st* %bp, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local i32 @PEM_read_bio(%struct.bio_st* %bp, i8** %name, i8** %header, i8** %data, i64* %len) #0 {
define internal i32 @check_pem(i8* %nm, i8* %name) #0 {
define dso_local i32 @PEM_get_EVP_CIPHER_INFO(i8* %header, %struct.evp_cipher_info_st* %cipher) #0 {
define dso_local i32 @PEM_do_header(%struct.evp_cipher_info_st* %cipher, i8* %data, i64* %plen, i32 (i8*, i32, i32, i8*)* %callback, i8* %u) #0 {
define internal i32 @load_iv(i8** %fromp, i8* %to, i32 %num) #0 {
define dso_local i32 @pem_check_suffix(i8* %pem_str, i8* %suffix) #0 {
define dso_local i32 @PEM_ASN1_write(i32 (i8*, i8**)* %i2d, i8* %name, %struct._IO_FILE* %fp, i8* %x, %struct.evp_cipher_st* %enc, i8* %kstr, i32 %klen, i32 (i8*, i32, i32, i8*)* %callback, i8* %u) #0 {
define dso_local i32 @PEM_ASN1_write_bio(i32 (i8*, i8**)* %i2d, i8* %name, %struct.bio_st* %bp, i8* %x, %struct.evp_cipher_st* %enc, i8* %kstr, i32 %klen, i32 (i8*, i32, i32, i8*)* %callback, i8* %u) #0 {
define dso_local i32 @PEM_write_bio(%struct.bio_st* %bp, i8* %name, i8* %header, i8* %data, i64 %len) #0 {
define dso_local i32 @PEM_write(%struct._IO_FILE* %fp, i8* %name, i8* %header, i8* %data, i64 %len) #0 {
define dso_local i32 @PEM_read(%struct._IO_FILE* %fp, i8** %name, i8** %header, i8** %data, i64* %len) #0 {
define dso_local %struct.X509_req_st* @PEM_read_bio_X509_REQ(%struct.bio_st* %bp, %struct.X509_req_st** %x, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local %struct.X509_req_st* @PEM_read_X509_REQ(%struct._IO_FILE* %fp, %struct.X509_req_st** %x, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local i32 @PEM_write_bio_X509_REQ(%struct.bio_st* %bp, %struct.X509_req_st* %x) #0 {
define dso_local i32 @PEM_write_X509_REQ(%struct._IO_FILE* %fp, %struct.X509_req_st* %x) #0 {
define dso_local i32 @PEM_write_bio_X509_REQ_NEW(%struct.bio_st* %bp, %struct.X509_req_st* %x) #0 {
define dso_local i32 @PEM_write_X509_REQ_NEW(%struct._IO_FILE* %fp, %struct.X509_req_st* %x) #0 {
define dso_local %struct.X509_crl_st* @PEM_read_bio_X509_CRL(%struct.bio_st* %bp, %struct.X509_crl_st** %x, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local %struct.X509_crl_st* @PEM_read_X509_CRL(%struct._IO_FILE* %fp, %struct.X509_crl_st** %x, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local i32 @PEM_write_bio_X509_CRL(%struct.bio_st* %bp, %struct.X509_crl_st* %x) #0 {
define dso_local i32 @PEM_write_X509_CRL(%struct._IO_FILE* %fp, %struct.X509_crl_st* %x) #0 {
define dso_local %struct.pkcs7_st* @PEM_read_bio_PKCS7(%struct.bio_st* %bp, %struct.pkcs7_st** %x, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local %struct.pkcs7_st* @PEM_read_PKCS7(%struct._IO_FILE* %fp, %struct.pkcs7_st** %x, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local i32 @PEM_write_bio_PKCS7(%struct.bio_st* %bp, %struct.pkcs7_st* %x) #0 {
define dso_local i32 @PEM_write_PKCS7(%struct._IO_FILE* %fp, %struct.pkcs7_st* %x) #0 {
define dso_local %struct.Netscape_certificate_sequence* @PEM_read_bio_NETSCAPE_CERT_SEQUENCE(%struct.bio_st* %bp, %struct.Netscape_certificate_sequence** %x, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local %struct.Netscape_certificate_sequence* @PEM_read_NETSCAPE_CERT_SEQUENCE(%struct._IO_FILE* %fp, %struct.Netscape_certificate_sequence** %x, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local i32 @PEM_write_bio_NETSCAPE_CERT_SEQUENCE(%struct.bio_st* %bp, %struct.Netscape_certificate_sequence* %x) #0 {
define dso_local i32 @PEM_write_NETSCAPE_CERT_SEQUENCE(%struct._IO_FILE* %fp, %struct.Netscape_certificate_sequence* %x) #0 {
define dso_local %struct.rsa_st* @PEM_read_bio_RSAPrivateKey(%struct.bio_st* %bp, %struct.rsa_st** %rsa, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define internal %struct.rsa_st* @pkey_get_rsa(%struct.evp_pkey_st* %key, %struct.rsa_st** %rsa) #0 {
define dso_local %struct.rsa_st* @PEM_read_RSAPrivateKey(%struct._IO_FILE* %fp, %struct.rsa_st** %rsa, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local i32 @PEM_write_bio_RSAPrivateKey(%struct.bio_st* %bp, %struct.rsa_st* %x, %struct.evp_cipher_st* %enc, i8* %kstr, i32 %klen, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local i32 @PEM_write_RSAPrivateKey(%struct._IO_FILE* %fp, %struct.rsa_st* %x, %struct.evp_cipher_st* %enc, i8* %kstr, i32 %klen, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local %struct.rsa_st* @PEM_read_bio_RSAPublicKey(%struct.bio_st* %bp, %struct.rsa_st** %x, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local %struct.rsa_st* @PEM_read_RSAPublicKey(%struct._IO_FILE* %fp, %struct.rsa_st** %x, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local i32 @PEM_write_bio_RSAPublicKey(%struct.bio_st* %bp, %struct.rsa_st* %x) #0 {
define dso_local i32 @PEM_write_RSAPublicKey(%struct._IO_FILE* %fp, %struct.rsa_st* %x) #0 {
define dso_local %struct.rsa_st* @PEM_read_bio_RSA_PUBKEY(%struct.bio_st* %bp, %struct.rsa_st** %x, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local %struct.rsa_st* @PEM_read_RSA_PUBKEY(%struct._IO_FILE* %fp, %struct.rsa_st** %x, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local i32 @PEM_write_bio_RSA_PUBKEY(%struct.bio_st* %bp, %struct.rsa_st* %x) #0 {
define dso_local i32 @PEM_write_RSA_PUBKEY(%struct._IO_FILE* %fp, %struct.rsa_st* %x) #0 {
define dso_local %struct.ec_key_st* @PEM_read_bio_ECPrivateKey(%struct.bio_st* %bp, %struct.ec_key_st** %key, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define internal %struct.ec_key_st* @pkey_get_eckey(%struct.evp_pkey_st* %key, %struct.ec_key_st** %eckey) #0 {
define dso_local %struct.ec_group_st* @PEM_read_bio_ECPKParameters(%struct.bio_st* %bp, %struct.ec_group_st** %x, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local %struct.ec_group_st* @PEM_read_ECPKParameters(%struct._IO_FILE* %fp, %struct.ec_group_st** %x, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local i32 @PEM_write_bio_ECPKParameters(%struct.bio_st* %bp, %struct.ec_group_st* %x) #0 {
define dso_local i32 @PEM_write_ECPKParameters(%struct._IO_FILE* %fp, %struct.ec_group_st* %x) #0 {
define dso_local i32 @PEM_write_bio_ECPrivateKey(%struct.bio_st* %bp, %struct.ec_key_st* %x, %struct.evp_cipher_st* %enc, i8* %kstr, i32 %klen, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local i32 @PEM_write_ECPrivateKey(%struct._IO_FILE* %fp, %struct.ec_key_st* %x, %struct.evp_cipher_st* %enc, i8* %kstr, i32 %klen, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local %struct.ec_key_st* @PEM_read_bio_EC_PUBKEY(%struct.bio_st* %bp, %struct.ec_key_st** %x, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local %struct.ec_key_st* @PEM_read_EC_PUBKEY(%struct._IO_FILE* %fp, %struct.ec_key_st** %x, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local i32 @PEM_write_bio_EC_PUBKEY(%struct.bio_st* %bp, %struct.ec_key_st* %x) #0 {
define dso_local i32 @PEM_write_EC_PUBKEY(%struct._IO_FILE* %fp, %struct.ec_key_st* %x) #0 {
define dso_local %struct.ec_key_st* @PEM_read_ECPrivateKey(%struct._IO_FILE* %fp, %struct.ec_key_st** %eckey, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local i32 @PEM_write_bio_DHparams(%struct.bio_st* %bp, %struct.dh_st* %x) #0 {
define dso_local i32 @PEM_write_DHparams(%struct._IO_FILE* %fp, %struct.dh_st* %x) #0 {
define dso_local i32 @PEM_write_bio_DHxparams(%struct.bio_st* %bp, %struct.dh_st* %x) #0 {
define dso_local i32 @PEM_write_DHxparams(%struct._IO_FILE* %fp, %struct.dh_st* %x) #0 {
define dso_local %struct.evp_pkey_st* @PEM_read_bio_PUBKEY(%struct.bio_st* %bp, %struct.evp_pkey_st** %x, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local %struct.evp_pkey_st* @PEM_read_PUBKEY(%struct._IO_FILE* %fp, %struct.evp_pkey_st** %x, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local i32 @PEM_write_bio_PUBKEY(%struct.bio_st* %bp, %struct.evp_pkey_st* %x) #0 {
define dso_local i32 @PEM_write_PUBKEY(%struct._IO_FILE* %fp, %struct.evp_pkey_st* %x) #0 {
define dso_local void @ERR_load_PEM_strings() #0 {
define dso_local %struct.x509_st* @PEM_read_bio_X509(%struct.bio_st* %bp, %struct.x509_st** %x, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local %struct.x509_st* @PEM_read_X509(%struct._IO_FILE* %fp, %struct.x509_st** %x, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local i32 @PEM_write_bio_X509(%struct.bio_st* %bp, %struct.x509_st* %x) #0 {
define dso_local i32 @PEM_write_X509(%struct._IO_FILE* %fp, %struct.x509_st* %x) #0 {
define dso_local %struct.x509_st* @PEM_read_bio_X509_AUX(%struct.bio_st* %bp, %struct.x509_st** %x, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local %struct.x509_st* @PEM_read_X509_AUX(%struct._IO_FILE* %fp, %struct.x509_st** %x, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local i32 @PEM_write_bio_X509_AUX(%struct.bio_st* %bp, %struct.x509_st* %x) #0 {
define dso_local i32 @PEM_write_X509_AUX(%struct._IO_FILE* %fp, %struct.x509_st* %x) #0 {
define dso_local %struct.x509_cert_pair_st.13186* @PEM_read_bio_X509_CERT_PAIR(%struct.bio_st* %bp, %struct.x509_cert_pair_st.13186** %x, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local %struct.x509_cert_pair_st.13186* @PEM_read_X509_CERT_PAIR(%struct._IO_FILE* %fp, %struct.x509_cert_pair_st.13186** %x, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local i32 @PEM_write_bio_X509_CERT_PAIR(%struct.bio_st* %bp, %struct.x509_cert_pair_st.13186* %x) #0 {
define dso_local i32 @PEM_write_X509_CERT_PAIR(%struct._IO_FILE* %fp, %struct.x509_cert_pair_st.13186* %x) #0 {
define dso_local i8* @PEM_ASN1_read_bio(i8* (i8**, i8**, i64)* %d2i, i8* %name, %struct.bio_st* %bp, i8** %x, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local %struct.evp_pkey_st.12512* @PEM_read_bio_PrivateKey(%struct.bio_st* %bp, %struct.evp_pkey_st.12512** %x, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local i32 @PEM_write_bio_PrivateKey(%struct.bio_st* %bp, %struct.evp_pkey_st.12512* %x, %struct.evp_cipher_st* %enc, i8* %kstr, i32 %klen, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local %struct.evp_pkey_st.12512* @PEM_read_bio_Parameters(%struct.bio_st* %bp, %struct.evp_pkey_st.12512** %x) #0 {
define dso_local i32 @PEM_write_bio_Parameters(%struct.bio_st* %bp, %struct.evp_pkey_st.12512* %x) #0 {
define dso_local %struct.evp_pkey_st.12512* @PEM_read_PrivateKey(%struct._IO_FILE* %fp, %struct.evp_pkey_st.12512** %x, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local i32 @PEM_write_PrivateKey(%struct._IO_FILE* %fp, %struct.evp_pkey_st.12512* %x, %struct.evp_cipher_st* %enc, i8* %kstr, i32 %klen, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local %struct.dh_st* @PEM_read_bio_DHparams(%struct.bio_st* %bp, %struct.dh_st** %x, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local %struct.dh_st* @PEM_read_DHparams(%struct._IO_FILE* %fp, %struct.dh_st** %x, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local i32 @X509_STORE_set_default_paths(%struct.x509_store_st* %ctx) #0 {
define dso_local i32 @X509_STORE_load_locations(%struct.x509_store_st* %ctx, i8* %file, i8* %path) #0 {
define dso_local i32 @X509_issuer_and_serial_cmp(%struct.x509_st* %a, %struct.x509_st* %b) #0 {
define dso_local i32 @X509_NAME_cmp(%struct.X509_name_st* %a, %struct.X509_name_st* %b) #0 {
define dso_local i64 @X509_issuer_and_serial_hash(%struct.x509_st* %a) #0 {
define dso_local i32 @X509_issuer_name_cmp(%struct.x509_st* %a, %struct.x509_st* %b) #0 {
define dso_local i32 @X509_subject_name_cmp(%struct.x509_st* %a, %struct.x509_st* %b) #0 {
define dso_local i32 @X509_CRL_cmp(%struct.X509_crl_st* %a, %struct.X509_crl_st* %b) #0 {
define dso_local i32 @X509_CRL_match(%struct.X509_crl_st* %a, %struct.X509_crl_st* %b) #0 {
define dso_local %struct.X509_name_st* @X509_get_issuer_name(%struct.x509_st* %a) #0 {
define dso_local i64 @X509_issuer_name_hash(%struct.x509_st* %x) #0 {
define dso_local i64 @X509_NAME_hash(%struct.X509_name_st* %x) #0 {
define dso_local i64 @X509_issuer_name_hash_old(%struct.x509_st* %x) #0 {
define dso_local i64 @X509_NAME_hash_old(%struct.X509_name_st* %x) #0 {
define dso_local %struct.X509_name_st* @X509_get_subject_name(%struct.x509_st* %a) #0 {
define dso_local %struct.asn1_string_st* @X509_get_serialNumber(%struct.x509_st* %a) #0 {
define dso_local i64 @X509_subject_name_hash(%struct.x509_st* %x) #0 {
define dso_local i64 @X509_subject_name_hash_old(%struct.x509_st* %x) #0 {
define dso_local i32 @X509_cmp(%struct.x509_st* %a, %struct.x509_st* %b) #0 {
define dso_local %struct.x509_st* @X509_find_by_issuer_and_serial(%struct.stack_st_SSL_CIPHER* %sk, %struct.X509_name_st* %name, %struct.asn1_string_st* %serial) #0 {
define dso_local %struct.x509_st* @X509_find_by_subject(%struct.stack_st_SSL_CIPHER* %sk, %struct.X509_name_st* %name) #0 {
define dso_local %struct.evp_pkey_st* @X509_get_pubkey(%struct.x509_st* %x) #0 {
define dso_local %struct.asn1_string_st* @X509_get0_pubkey_bitstr(%struct.x509_st* %x) #0 {
define dso_local i32 @X509_check_private_key(%struct.x509_st* %x, %struct.evp_pkey_st* %k) #0 {
define dso_local i32 @X509_chain_check_suiteb(i32* %perror_depth, %struct.x509_st* %x, %struct.stack_st_SSL_CIPHER* %chain, i64 %flags) #0 {
define internal i32 @check_suite_b(%struct.evp_pkey_st* %pkey, i32 %sign_nid, i64* %pflags) #0 {
define dso_local i32 @X509_CRL_check_suiteb(%struct.X509_crl_st* %crl, %struct.evp_pkey_st* %pk, i64 %flags) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @X509_chain_up_ref(%struct.stack_st_SSL_CIPHER* %chain) #0 {
define dso_local i8* @X509_NAME_oneline(%struct.X509_name_st* %a, i8* %buf, i32 %len) #0 {
define dso_local i32 @X509_verify_cert(%struct.x509_store_ctx_st.13337* %ctx) #0 {
define internal i32 @cert_self_signed(%struct.x509_st* %x) #0 {
define internal %struct.x509_st* @find_issuer(%struct.x509_store_ctx_st.13337* %ctx, %struct.stack_st_SSL_CIPHER* %sk, %struct.x509_st* %x) #0 {
define internal i32 @check_trust(%struct.x509_store_ctx_st.13337* %ctx) #0 {
define internal i32 @check_chain_extensions(%struct.x509_store_ctx_st.13337* %ctx) #0 {
define internal i32 @check_name_constraints(%struct.x509_store_ctx_st.13337* %ctx) #0 {
define internal i32 @check_id(%struct.x509_store_ctx_st.13337* %ctx) #0 {
define dso_local i32 @X509_get_pubkey_parameters(%struct.evp_pkey_st* %pkey, %struct.stack_st_SSL_CIPHER* %chain) #0 {
define internal i32 @internal_verify(%struct.x509_store_ctx_st.13337* %ctx) #0 {
define internal i32 @check_cert_time(%struct.x509_store_ctx_st.13337* %ctx, %struct.x509_st* %x) #0 {
define dso_local i32 @X509_cmp_time(%struct.asn1_string_st* %ctm, i64* %cmp_time) #0 {
define dso_local %struct.asn1_string_st* @X509_time_adj(%struct.asn1_string_st* %s, i64 %offset_sec, i64* %in_tm) #0 {
define dso_local %struct.asn1_string_st* @X509_time_adj_ex(%struct.asn1_string_st* %s, i32 %offset_day, i64 %offset_sec, i64* %in_tm) #0 {
define internal i32 @check_hosts(%struct.x509_st* %x, %struct.X509_VERIFY_PARAM_ID_st* %id) #0 {
define internal i32 @check_id_error(%struct.x509_store_ctx_st.13337* %ctx, i32 %errcode) #0 {
define internal %struct.x509_st* @lookup_cert_match(%struct.x509_store_ctx_st.13337* %ctx, %struct.x509_st* %x) #0 {
define dso_local i32 @X509_cmp_current_time(%struct.asn1_string_st* %ctm) #0 {
define dso_local %struct.asn1_string_st* @X509_gmtime_adj(%struct.asn1_string_st* %s, i64 %adj) #0 {
define dso_local %struct.X509_crl_st* @X509_CRL_diff(%struct.X509_crl_st* %base, %struct.X509_crl_st* %newer, %struct.evp_pkey_st* %skey, %struct.env_md_st* %md, i32 %flags) #0 {
define internal i32 @crl_extension_match(%struct.X509_crl_st* %a, %struct.X509_crl_st* %b, i32 %nid) #0 {
define dso_local i32 @X509_STORE_CTX_get_ex_new_index(i64 %argl, i8* %argp, i32 (i8*, i8*, %struct.crypto_ex_data_st*, i32, i64, i8*)* %new_func, i32 (%struct.crypto_ex_data_st*, %struct.crypto_ex_data_st*, i8*, i32, i64, i8*)* %dup_func, void (i8*, i8*, %struct.crypto_ex_data_st*, i32, i64, i8*)* %free_func) #0 {
define dso_local i32 @X509_STORE_CTX_set_ex_data(%struct.x509_store_ctx_st.13337* %ctx, i32 %idx, i8* %data) #0 {
define dso_local i8* @X509_STORE_CTX_get_ex_data(%struct.x509_store_ctx_st.13337* %ctx, i32 %idx) #0 {
define dso_local i32 @X509_STORE_CTX_get_error(%struct.x509_store_ctx_st.13337* %ctx) #0 {
define dso_local void @X509_STORE_CTX_set_error(%struct.x509_store_ctx_st.13337* %ctx, i32 %err) #0 {
define dso_local i32 @X509_STORE_CTX_get_error_depth(%struct.x509_store_ctx_st.13337* %ctx) #0 {
define dso_local %struct.x509_st* @X509_STORE_CTX_get_current_cert(%struct.x509_store_ctx_st.13337* %ctx) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @X509_STORE_CTX_get_chain(%struct.x509_store_ctx_st.13337* %ctx) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @X509_STORE_CTX_get1_chain(%struct.x509_store_ctx_st.13337* %ctx) #0 {
define dso_local %struct.x509_st* @X509_STORE_CTX_get0_current_issuer(%struct.x509_store_ctx_st.13337* %ctx) #0 {
define dso_local %struct.X509_crl_st* @X509_STORE_CTX_get0_current_crl(%struct.x509_store_ctx_st.13337* %ctx) #0 {
define dso_local %struct.x509_store_ctx_st.13337* @X509_STORE_CTX_get0_parent_ctx(%struct.x509_store_ctx_st.13337* %ctx) #0 {
define dso_local void @X509_STORE_CTX_set_cert(%struct.x509_store_ctx_st.13337* %ctx, %struct.x509_st* %x) #0 {
define dso_local void @X509_STORE_CTX_set_chain(%struct.x509_store_ctx_st.13337* %ctx, %struct.stack_st_SSL_CIPHER* %sk) #0 {
define dso_local void @X509_STORE_CTX_set0_crls(%struct.x509_store_ctx_st.13337* %ctx, %struct.stack_st_SSL_CIPHER* %sk) #0 {
define dso_local i32 @X509_STORE_CTX_set_purpose(%struct.x509_store_ctx_st.13337* %ctx, i32 %purpose) #0 {
define dso_local i32 @X509_STORE_CTX_purpose_inherit(%struct.x509_store_ctx_st.13337* %ctx, i32 %def_purpose, i32 %purpose, i32 %trust) #0 {
define dso_local i32 @X509_STORE_CTX_set_trust(%struct.x509_store_ctx_st.13337* %ctx, i32 %trust) #0 {
define dso_local %struct.x509_store_ctx_st.13337* @X509_STORE_CTX_new() #0 {
define dso_local void @X509_STORE_CTX_free(%struct.x509_store_ctx_st.13337* %ctx) #0 {
define dso_local void @X509_STORE_CTX_cleanup(%struct.x509_store_ctx_st.13337* %ctx) #0 {
define dso_local i32 @X509_STORE_CTX_init(%struct.x509_store_ctx_st.13337* %ctx, %struct.x509_store_st.13335* %store, %struct.x509_st* %x509, %struct.stack_st_SSL_CIPHER* %chain) #0 {
define internal i32 @check_issued(%struct.x509_store_ctx_st.13337* %ctx, %struct.x509_st* %x, %struct.x509_st* %issuer) #0 {
define internal i32 @null_callback(i32 %ok, %struct.x509_store_ctx_st.13337* %e) #0 {
define internal i32 @check_revocation(%struct.x509_store_ctx_st.13337* %ctx) #0 {
define internal i32 @check_crl(%struct.x509_store_ctx_st.13337* %ctx, %struct.X509_crl_st* %crl) #0 {
define internal i32 @cert_crl(%struct.x509_store_ctx_st.13337* %ctx, %struct.X509_crl_st* %crl, %struct.x509_st* %x) #0 {
define internal i32 @check_policy(%struct.x509_store_ctx_st.13337* %ctx) #0 {
define internal i32 @check_crl_path(%struct.x509_store_ctx_st.13337* %ctx, %struct.x509_st* %x) #0 {
define internal i32 @check_crl_time(%struct.x509_store_ctx_st.13337* %ctx, %struct.X509_crl_st* %crl, i32 %notify) #0 {
define dso_local void @X509_STORE_CTX_set0_param(%struct.x509_store_ctx_st.13337* %ctx, %struct.X509_VERIFY_PARAM_st* %param) #0 {
define internal i32 @check_crl_chain(%struct.x509_store_ctx_st.13337* %ctx, %struct.stack_st_SSL_CIPHER* %cert_path, %struct.stack_st_SSL_CIPHER* %crl_path) #0 {
define internal i32 @check_cert(%struct.x509_store_ctx_st.13337* %ctx) #0 {
define internal i32 @get_crl_delta(%struct.x509_store_ctx_st.13337* %ctx, %struct.X509_crl_st** %pcrl, %struct.X509_crl_st** %pdcrl, %struct.x509_st* %x) #0 {
define internal i32 @get_crl_sk(%struct.x509_store_ctx_st.13337* %ctx, %struct.X509_crl_st** %pcrl, %struct.X509_crl_st** %pdcrl, %struct.x509_st** %pissuer, i32* %pscore, i32* %preasons, %struct.stack_st_SSL_CIPHER* %crls) #0 {
define internal i32 @get_crl_score(%struct.x509_store_ctx_st.13337* %ctx, %struct.x509_st** %pissuer, i32* %preasons, %struct.X509_crl_st* %crl, %struct.x509_st* %x) #0 {
define internal void @get_delta_sk(%struct.x509_store_ctx_st.13337* %ctx, %struct.X509_crl_st** %dcrl, i32* %pscore, %struct.X509_crl_st* %base, %struct.stack_st_SSL_CIPHER* %crls) #0 {
define internal i32 @check_delta_base(%struct.X509_crl_st* %delta, %struct.X509_crl_st* %base) #0 {
define internal void @crl_akid_check(%struct.x509_store_ctx_st.13337* %ctx, %struct.X509_crl_st* %crl, %struct.x509_st** %pissuer, i32* %pcrl_score) #0 {
define internal i32 @crl_crldp_check(%struct.x509_st* %x, %struct.X509_crl_st* %crl, i32 %crl_score, i32* %preasons) #0 {
define internal i32 @crldp_check_crlissuer(%struct.DIST_POINT_st* %dp, %struct.X509_crl_st* %crl, i32 %crl_score) #0 {
define internal i32 @idp_check_dp(%struct.DIST_POINT_NAME_st* %a, %struct.DIST_POINT_NAME_st* %b) #0 {
define dso_local void @X509_STORE_CTX_trusted_stack(%struct.x509_store_ctx_st.13337* %ctx, %struct.stack_st_SSL_CIPHER* %sk) #0 {
define internal i32 @get_issuer_sk(%struct.x509_st** %issuer, %struct.x509_store_ctx_st.13337* %ctx, %struct.x509_st* %x) #0 {
define dso_local void @X509_STORE_CTX_set_depth(%struct.x509_store_ctx_st.13337* %ctx, i32 %depth) #0 {
define dso_local void @X509_STORE_CTX_set_flags(%struct.x509_store_ctx_st.13337* %ctx, i64 %flags) #0 {
define dso_local void @X509_STORE_CTX_set_time(%struct.x509_store_ctx_st.13337* %ctx, i64 %flags, i64 %t) #0 {
define dso_local void @X509_STORE_CTX_set_verify_cb(%struct.x509_store_ctx_st.13337* %ctx, i32 (i32, %struct.x509_store_ctx_st.13337*)* %verify_cb) #0 {
define dso_local %struct.X509_POLICY_TREE_st* @X509_STORE_CTX_get0_policy_tree(%struct.x509_store_ctx_st.13337* %ctx) #0 {
define dso_local i32 @X509_STORE_CTX_get_explicit_policy(%struct.x509_store_ctx_st.13337* %ctx) #0 {
define dso_local i32 @X509_STORE_CTX_set_default(%struct.x509_store_ctx_st.13337* %ctx, i8* %name) #0 {
define dso_local %struct.X509_VERIFY_PARAM_st* @X509_STORE_CTX_get0_param(%struct.x509_store_ctx_st.13337* %ctx) #0 {
define dso_local i32 @X509_CRL_set_version(%struct.X509_crl_st* %x, i64 %version) #0 {
define dso_local i32 @X509_CRL_set_issuer_name(%struct.X509_crl_st* %x, %struct.X509_name_st* %name) #0 {
define dso_local i32 @X509_CRL_set_lastUpdate(%struct.X509_crl_st* %x, %struct.asn1_string_st* %tm) #0 {
define dso_local i32 @X509_CRL_set_nextUpdate(%struct.X509_crl_st* %x, %struct.asn1_string_st* %tm) #0 {
define dso_local i32 @X509_CRL_sort(%struct.X509_crl_st* %c) #0 {
define dso_local i32 @X509_REVOKED_set_revocationDate(%struct.x509_revoked_st* %x, %struct.asn1_string_st* %tm) #0 {
define dso_local i32 @X509_REVOKED_set_serialNumber(%struct.x509_revoked_st* %x, %struct.asn1_string_st* %serial) #0 {
define dso_local void @ERR_load_X509_strings() #0 {
define dso_local i32 @X509_NAME_get_text_by_NID(%struct.X509_name_st* %name, i32 %nid, i8* %buf, i32 %len) #0 {
define dso_local i32 @X509_NAME_get_text_by_OBJ(%struct.X509_name_st* %name, %struct.asn1_object_st* %obj, i8* %buf, i32 %len) #0 {
define dso_local i32 @X509_NAME_get_index_by_OBJ(%struct.X509_name_st* %name, %struct.asn1_object_st* %obj, i32 %lastpos) #0 {
define dso_local %struct.X509_name_entry_st* @X509_NAME_get_entry(%struct.X509_name_st* %name, i32 %loc) #0 {
define dso_local %struct.asn1_string_st* @X509_NAME_ENTRY_get_data(%struct.X509_name_entry_st* %ne) #0 {
define dso_local i32 @X509_NAME_entry_count(%struct.X509_name_st* %name) #0 {
define dso_local i32 @X509_NAME_get_index_by_NID(%struct.X509_name_st* %name, i32 %nid, i32 %lastpos) #0 {
define dso_local %struct.X509_name_entry_st* @X509_NAME_delete_entry(%struct.X509_name_st* %name, i32 %loc) #0 {
define dso_local i32 @X509_NAME_add_entry_by_OBJ(%struct.X509_name_st* %name, %struct.asn1_object_st* %obj, i32 %type, i8* %bytes, i32 %len, i32 %loc, i32 %set) #0 {
define dso_local %struct.X509_name_entry_st* @X509_NAME_ENTRY_create_by_OBJ(%struct.X509_name_entry_st** %ne, %struct.asn1_object_st* %obj, i32 %type, i8* %bytes, i32 %len) #0 {
define dso_local i32 @X509_NAME_add_entry(%struct.X509_name_st* %name, %struct.X509_name_entry_st* %ne, i32 %loc, i32 %set) #0 {
define dso_local i32 @X509_NAME_ENTRY_set_object(%struct.X509_name_entry_st* %ne, %struct.asn1_object_st* %obj) #0 {
define dso_local i32 @X509_NAME_ENTRY_set_data(%struct.X509_name_entry_st* %ne, i32 %type, i8* %bytes, i32 %len) #0 {
define dso_local i32 @X509_NAME_add_entry_by_NID(%struct.X509_name_st* %name, i32 %nid, i32 %type, i8* %bytes, i32 %len, i32 %loc, i32 %set) #0 {
define dso_local %struct.X509_name_entry_st* @X509_NAME_ENTRY_create_by_NID(%struct.X509_name_entry_st** %ne, i32 %nid, i32 %type, i8* %bytes, i32 %len) #0 {
define dso_local i32 @X509_NAME_add_entry_by_txt(%struct.X509_name_st* %name, i8* %field, i32 %type, i8* %bytes, i32 %len, i32 %loc, i32 %set) #0 {
define dso_local %struct.X509_name_entry_st* @X509_NAME_ENTRY_create_by_txt(%struct.X509_name_entry_st** %ne, i8* %field, i32 %type, i8* %bytes, i32 %len) #0 {
define dso_local %struct.asn1_object_st* @X509_NAME_ENTRY_get_object(%struct.X509_name_entry_st* %ne) #0 {
define dso_local i32 @X509v3_get_ext_count(%struct.stack_st_SSL_CIPHER* %x) #0 {
define dso_local i32 @X509v3_get_ext_by_NID(%struct.stack_st_SSL_CIPHER* %x, i32 %nid, i32 %lastpos) #0 {
define dso_local i32 @X509v3_get_ext_by_OBJ(%struct.stack_st_SSL_CIPHER* %sk, %struct.asn1_object_st* %obj, i32 %lastpos) #0 {
define dso_local i32 @X509v3_get_ext_by_critical(%struct.stack_st_SSL_CIPHER* %sk, i32 %crit, i32 %lastpos) #0 {
define dso_local %struct.X509_extension_st* @X509v3_get_ext(%struct.stack_st_SSL_CIPHER* %x, i32 %loc) #0 {
define dso_local %struct.X509_extension_st* @X509v3_delete_ext(%struct.stack_st_SSL_CIPHER* %x, i32 %loc) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @X509v3_add_ext(%struct.stack_st_SSL_CIPHER** %x, %struct.X509_extension_st* %ex, i32 %loc) #0 {
define dso_local %struct.X509_extension_st* @X509_EXTENSION_create_by_NID(%struct.X509_extension_st** %ex, i32 %nid, i32 %crit, %struct.asn1_string_st* %data) #0 {
define dso_local %struct.X509_extension_st* @X509_EXTENSION_create_by_OBJ(%struct.X509_extension_st** %ex, %struct.asn1_object_st* %obj, i32 %crit, %struct.asn1_string_st* %data) #0 {
define dso_local i32 @X509_EXTENSION_set_object(%struct.X509_extension_st* %ex, %struct.asn1_object_st* %obj) #0 {
define dso_local i32 @X509_EXTENSION_set_critical(%struct.X509_extension_st* %ex, i32 %crit) #0 {
define dso_local i32 @X509_EXTENSION_set_data(%struct.X509_extension_st* %ex, %struct.asn1_string_st* %data) #0 {
define dso_local %struct.asn1_object_st* @X509_EXTENSION_get_object(%struct.X509_extension_st* %ex) #0 {
define dso_local %struct.asn1_string_st* @X509_EXTENSION_get_data(%struct.X509_extension_st* %ex) #0 {
define dso_local i32 @X509_EXTENSION_get_critical(%struct.X509_extension_st* %ex) #0 {
define dso_local i32 @X509_CRL_get_ext_count(%struct.X509_crl_st* %x) #0 {
define dso_local i32 @X509_CRL_get_ext_by_NID(%struct.X509_crl_st* %x, i32 %nid, i32 %lastpos) #0 {
define dso_local i32 @X509_CRL_get_ext_by_OBJ(%struct.X509_crl_st* %x, %struct.asn1_object_st* %obj, i32 %lastpos) #0 {
define dso_local i32 @X509_CRL_get_ext_by_critical(%struct.X509_crl_st* %x, i32 %crit, i32 %lastpos) #0 {
define dso_local %struct.X509_extension_st* @X509_CRL_get_ext(%struct.X509_crl_st* %x, i32 %loc) #0 {
define dso_local %struct.X509_extension_st* @X509_CRL_delete_ext(%struct.X509_crl_st* %x, i32 %loc) #0 {
define dso_local i8* @X509_CRL_get_ext_d2i(%struct.X509_crl_st* %x, i32 %nid, i32* %crit, i32* %idx) #0 {
define dso_local i32 @X509_CRL_add1_ext_i2d(%struct.X509_crl_st* %x, i32 %nid, i8* %value, i32 %crit, i64 %flags) #0 {
define dso_local i32 @X509_CRL_add_ext(%struct.X509_crl_st* %x, %struct.X509_extension_st* %ex, i32 %loc) #0 {
define dso_local i32 @X509_get_ext_count(%struct.x509_st* %x) #0 {
define dso_local i32 @X509_get_ext_by_NID(%struct.x509_st* %x, i32 %nid, i32 %lastpos) #0 {
define dso_local i32 @X509_get_ext_by_OBJ(%struct.x509_st* %x, %struct.asn1_object_st* %obj, i32 %lastpos) #0 {
define dso_local i32 @X509_get_ext_by_critical(%struct.x509_st* %x, i32 %crit, i32 %lastpos) #0 {
define dso_local %struct.X509_extension_st* @X509_get_ext(%struct.x509_st* %x, i32 %loc) #0 {
define dso_local %struct.X509_extension_st* @X509_delete_ext(%struct.x509_st* %x, i32 %loc) #0 {
define dso_local i32 @X509_add_ext(%struct.x509_st* %x, %struct.X509_extension_st* %ex, i32 %loc) #0 {
define dso_local i8* @X509_get_ext_d2i(%struct.x509_st* %x, i32 %nid, i32* %crit, i32* %idx) #0 {
define dso_local i32 @X509_add1_ext_i2d(%struct.x509_st* %x, i32 %nid, i8* %value, i32 %crit, i64 %flags) #0 {
define dso_local i32 @X509_REVOKED_get_ext_count(%struct.x509_revoked_st* %x) #0 {
define dso_local i32 @X509_REVOKED_get_ext_by_NID(%struct.x509_revoked_st* %x, i32 %nid, i32 %lastpos) #0 {
define dso_local i32 @X509_REVOKED_get_ext_by_OBJ(%struct.x509_revoked_st* %x, %struct.asn1_object_st* %obj, i32 %lastpos) #0 {
define dso_local i32 @X509_REVOKED_get_ext_by_critical(%struct.x509_revoked_st* %x, i32 %crit, i32 %lastpos) #0 {
define dso_local %struct.X509_extension_st* @X509_REVOKED_get_ext(%struct.x509_revoked_st* %x, i32 %loc) #0 {
define dso_local %struct.X509_extension_st* @X509_REVOKED_delete_ext(%struct.x509_revoked_st* %x, i32 %loc) #0 {
define dso_local i32 @X509_REVOKED_add_ext(%struct.x509_revoked_st* %x, %struct.X509_extension_st* %ex, i32 %loc) #0 {
define dso_local i8* @X509_REVOKED_get_ext_d2i(%struct.x509_revoked_st* %x, i32 %nid, i32* %crit, i32* %idx) #0 {
define dso_local i32 @X509_REVOKED_add1_ext_i2d(%struct.x509_revoked_st* %x, i32 %nid, i8* %value, i32 %crit, i64 %flags) #0 {
define dso_local i32 @X509_certificate_type(%struct.x509_st* %x, %struct.evp_pkey_st* %pkey) #0 {
define dso_local %struct.x509_lookup_st* @X509_LOOKUP_new(%struct.x509_lookup_method_st* %method) #0 {
define dso_local void @X509_LOOKUP_free(%struct.x509_lookup_st* %ctx) #0 {
define dso_local i32 @X509_LOOKUP_init(%struct.x509_lookup_st* %ctx) #0 {
define dso_local i32 @X509_LOOKUP_shutdown(%struct.x509_lookup_st* %ctx) #0 {
define dso_local i32 @X509_LOOKUP_ctrl(%struct.x509_lookup_st* %ctx, i32 %cmd, i8* %argc, i64 %argl, i8** %ret) #0 {
define dso_local i32 @X509_LOOKUP_by_subject(%struct.x509_lookup_st* %ctx, i32 %type, %struct.X509_name_st* %name, %struct.asn1_type_st* %ret) #0 {
define dso_local i32 @X509_LOOKUP_by_issuer_serial(%struct.x509_lookup_st* %ctx, i32 %type, %struct.X509_name_st* %name, %struct.asn1_string_st* %serial, %struct.asn1_type_st* %ret) #0 {
define dso_local i32 @X509_LOOKUP_by_fingerprint(%struct.x509_lookup_st* %ctx, i32 %type, i8* %bytes, i32 %len, %struct.asn1_type_st* %ret) #0 {
define dso_local i32 @X509_LOOKUP_by_alias(%struct.x509_lookup_st* %ctx, i32 %type, i8* %str, i32 %len, %struct.asn1_type_st* %ret) #0 {
define dso_local %struct.x509_store_st* @X509_STORE_new() #0 {
define internal i32 @x509_object_cmp(%struct.asn1_type_st** %a, %struct.asn1_type_st** %b) #0 {
define dso_local void @X509_STORE_free(%struct.x509_store_st* %vfy) #0 {
define internal void @cleanup(%struct.asn1_type_st* %a) #0 {
define dso_local %struct.x509_lookup_st* @X509_STORE_add_lookup(%struct.x509_store_st* %v, %struct.x509_lookup_method_st* %m) #0 {
define dso_local i32 @X509_STORE_get_by_subject(%struct.x509_store_ctx_st* %vs, i32 %type, %struct.X509_name_st* %name, %struct.asn1_type_st* %ret) #0 {
define dso_local %struct.asn1_type_st* @X509_OBJECT_retrieve_by_subject(%struct.stack_st_SSL_CIPHER* %h, i32 %type, %struct.X509_name_st* %name) #0 {
define dso_local void @X509_OBJECT_up_ref_count(%struct.asn1_type_st* %a) #0 {
define dso_local i32 @X509_OBJECT_idx_by_subject(%struct.stack_st_SSL_CIPHER* %h, i32 %type, %struct.X509_name_st* %name) #0 {
define internal i32 @x509_object_idx_cnt(%struct.stack_st_SSL_CIPHER* %h, i32 %type, %struct.X509_name_st* %name, i32* %pnmatch) #0 {
define dso_local i32 @X509_STORE_add_cert(%struct.x509_store_st* %ctx, %struct.x509_st* %x) #0 {
define dso_local %struct.asn1_type_st* @X509_OBJECT_retrieve_match(%struct.stack_st_SSL_CIPHER* %h, %struct.asn1_type_st* %x) #0 {
define dso_local void @X509_OBJECT_free_contents(%struct.asn1_type_st* %a) #0 {
define dso_local i32 @X509_STORE_add_crl(%struct.x509_store_st* %ctx, %struct.X509_crl_st* %x) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @X509_STORE_get1_certs(%struct.x509_store_ctx_st* %ctx, %struct.X509_name_st* %nm) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @X509_STORE_get1_crls(%struct.x509_store_ctx_st* %ctx, %struct.X509_name_st* %nm) #0 {
define dso_local i32 @X509_STORE_CTX_get1_issuer(%struct.x509_st** %issuer, %struct.x509_store_ctx_st* %ctx, %struct.x509_st* %x) #0 {
define dso_local i32 @X509_STORE_set_flags(%struct.x509_store_st* %ctx, i64 %flags) #0 {
define dso_local i32 @X509_STORE_set_depth(%struct.x509_store_st* %ctx, i32 %depth) #0 {
define dso_local i32 @X509_STORE_set_purpose(%struct.x509_store_st* %ctx, i32 %purpose) #0 {
define dso_local i32 @X509_STORE_set_trust(%struct.x509_store_st* %ctx, i32 %trust) #0 {
define dso_local i32 @X509_STORE_set1_param(%struct.x509_store_st* %ctx, %struct.X509_VERIFY_PARAM_st* %param) #0 {
define dso_local void @X509_STORE_set_verify_cb(%struct.x509_store_st* %ctx, i32 (i32, %struct.x509_store_ctx_st*)* %verify_cb) #0 {
define dso_local void @X509_STORE_set_lookup_crls_cb(%struct.x509_store_st* %ctx, %struct.stack_st_SSL_CIPHER* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)* %cb) #0 {
define dso_local %struct.x509_store_st* @X509_STORE_CTX_get0_store(%struct.x509_store_ctx_st* %ctx) #0 {
define dso_local i32 @X509_verify(%struct.x509_st* %a, %struct.evp_pkey_st* %r) #0 {
define dso_local i32 @X509_REQ_verify(%struct.X509_req_st* %a, %struct.evp_pkey_st* %r) #0 {
define dso_local i32 @NETSCAPE_SPKI_verify(%struct.Netscape_spki_st* %a, %struct.evp_pkey_st* %r) #0 {
define dso_local i32 @X509_sign(%struct.x509_st* %x, %struct.evp_pkey_st* %pkey, %struct.env_md_st* %md) #0 {
define dso_local i32 @X509_sign_ctx(%struct.x509_st* %x, %struct.env_md_ctx_st* %ctx) #0 {
define dso_local i32 @X509_http_nbio(%struct.ocsp_req_ctx_st* %rctx, %struct.x509_st** %pcert) #0 {
define dso_local i32 @X509_REQ_sign(%struct.X509_req_st* %x, %struct.evp_pkey_st* %pkey, %struct.env_md_st* %md) #0 {
define dso_local i32 @X509_REQ_sign_ctx(%struct.X509_req_st* %x, %struct.env_md_ctx_st* %ctx) #0 {
define dso_local i32 @X509_CRL_sign(%struct.X509_crl_st* %x, %struct.evp_pkey_st* %pkey, %struct.env_md_st* %md) #0 {
define dso_local i32 @X509_CRL_sign_ctx(%struct.X509_crl_st* %x, %struct.env_md_ctx_st* %ctx) #0 {
define dso_local i32 @X509_CRL_http_nbio(%struct.ocsp_req_ctx_st* %rctx, %struct.X509_crl_st** %pcrl) #0 {
define dso_local i32 @NETSCAPE_SPKI_sign(%struct.Netscape_spki_st* %x, %struct.evp_pkey_st* %pkey, %struct.env_md_st* %md) #0 {
define dso_local %struct.x509_st* @d2i_X509_fp(%struct._IO_FILE* %fp, %struct.x509_st** %x509) #0 {
define dso_local i32 @i2d_X509_fp(%struct._IO_FILE* %fp, %struct.x509_st* %x509) #0 {
define dso_local %struct.x509_st* @d2i_X509_bio(%struct.bio_st* %bp, %struct.x509_st** %x509) #0 {
define dso_local i32 @i2d_X509_bio(%struct.bio_st* %bp, %struct.x509_st* %x509) #0 {
define dso_local %struct.X509_crl_st* @d2i_X509_CRL_fp(%struct._IO_FILE* %fp, %struct.X509_crl_st** %crl) #0 {
define dso_local i32 @i2d_X509_CRL_fp(%struct._IO_FILE* %fp, %struct.X509_crl_st* %crl) #0 {
define dso_local %struct.X509_crl_st* @d2i_X509_CRL_bio(%struct.bio_st* %bp, %struct.X509_crl_st** %crl) #0 {
define dso_local i32 @i2d_X509_CRL_bio(%struct.bio_st* %bp, %struct.X509_crl_st* %crl) #0 {
define dso_local %struct.pkcs7_st* @d2i_PKCS7_fp(%struct._IO_FILE* %fp, %struct.pkcs7_st** %p7) #0 {
define dso_local i32 @i2d_PKCS7_fp(%struct._IO_FILE* %fp, %struct.pkcs7_st* %p7) #0 {
define dso_local %struct.pkcs7_st* @d2i_PKCS7_bio(%struct.bio_st* %bp, %struct.pkcs7_st** %p7) #0 {
define dso_local i32 @i2d_PKCS7_bio(%struct.bio_st* %bp, %struct.pkcs7_st* %p7) #0 {
define dso_local %struct.X509_req_st* @d2i_X509_REQ_fp(%struct._IO_FILE* %fp, %struct.X509_req_st** %req) #0 {
define dso_local i32 @i2d_X509_REQ_fp(%struct._IO_FILE* %fp, %struct.X509_req_st* %req) #0 {
define dso_local %struct.X509_req_st* @d2i_X509_REQ_bio(%struct.bio_st* %bp, %struct.X509_req_st** %req) #0 {
define dso_local i32 @i2d_X509_REQ_bio(%struct.bio_st* %bp, %struct.X509_req_st* %req) #0 {
define dso_local %struct.rsa_st* @d2i_RSAPrivateKey_fp(%struct._IO_FILE* %fp, %struct.rsa_st** %rsa) #0 {
define dso_local i32 @i2d_RSAPrivateKey_fp(%struct._IO_FILE* %fp, %struct.rsa_st* %rsa) #0 {
define dso_local %struct.rsa_st* @d2i_RSAPublicKey_fp(%struct._IO_FILE* %fp, %struct.rsa_st** %rsa) #0 {
define dso_local %struct.rsa_st* @d2i_RSA_PUBKEY_fp(%struct._IO_FILE* %fp, %struct.rsa_st** %rsa) #0 {
define dso_local i32 @i2d_RSAPublicKey_fp(%struct._IO_FILE* %fp, %struct.rsa_st* %rsa) #0 {
define dso_local i32 @i2d_RSA_PUBKEY_fp(%struct._IO_FILE* %fp, %struct.rsa_st* %rsa) #0 {
define dso_local %struct.rsa_st* @d2i_RSAPrivateKey_bio(%struct.bio_st* %bp, %struct.rsa_st** %rsa) #0 {
define dso_local i32 @i2d_RSAPrivateKey_bio(%struct.bio_st* %bp, %struct.rsa_st* %rsa) #0 {
define dso_local %struct.rsa_st* @d2i_RSAPublicKey_bio(%struct.bio_st* %bp, %struct.rsa_st** %rsa) #0 {
define dso_local %struct.rsa_st* @d2i_RSA_PUBKEY_bio(%struct.bio_st* %bp, %struct.rsa_st** %rsa) #0 {
define dso_local i32 @i2d_RSAPublicKey_bio(%struct.bio_st* %bp, %struct.rsa_st* %rsa) #0 {
define dso_local i32 @i2d_RSA_PUBKEY_bio(%struct.bio_st* %bp, %struct.rsa_st* %rsa) #0 {
define dso_local %struct.ec_key_st* @d2i_EC_PUBKEY_fp(%struct._IO_FILE* %fp, %struct.ec_key_st** %eckey) #0 {
define dso_local i32 @i2d_EC_PUBKEY_fp(%struct._IO_FILE* %fp, %struct.ec_key_st* %eckey) #0 {
define dso_local %struct.ec_key_st* @d2i_ECPrivateKey_fp(%struct._IO_FILE* %fp, %struct.ec_key_st** %eckey) #0 {
define dso_local i32 @i2d_ECPrivateKey_fp(%struct._IO_FILE* %fp, %struct.ec_key_st* %eckey) #0 {
define dso_local %struct.ec_key_st* @d2i_EC_PUBKEY_bio(%struct.bio_st* %bp, %struct.ec_key_st** %eckey) #0 {
define dso_local i32 @i2d_EC_PUBKEY_bio(%struct.bio_st* %bp, %struct.ec_key_st* %ecdsa) #0 {
define dso_local %struct.ec_key_st* @d2i_ECPrivateKey_bio(%struct.bio_st* %bp, %struct.ec_key_st** %eckey) #0 {
define dso_local i32 @i2d_ECPrivateKey_bio(%struct.bio_st* %bp, %struct.ec_key_st* %eckey) #0 {
define dso_local i32 @X509_pubkey_digest(%struct.x509_st* %data, %struct.env_md_st* %type, i8* %md, i32* %len) #0 {
define dso_local i32 @X509_digest(%struct.x509_st* %data, %struct.env_md_st* %type, i8* %md, i32* %len) #0 {
define dso_local i32 @X509_CRL_digest(%struct.X509_crl_st* %data, %struct.env_md_st* %type, i8* %md, i32* %len) #0 {
define dso_local i32 @X509_REQ_digest(%struct.X509_req_st* %data, %struct.env_md_st* %type, i8* %md, i32* %len) #0 {
define dso_local i32 @X509_NAME_digest(%struct.X509_name_st* %data, %struct.env_md_st* %type, i8* %md, i32* %len) #0 {
define dso_local i32 @PKCS7_ISSUER_AND_SERIAL_digest(%struct.pkcs7_issuer_and_serial_st* %data, %struct.env_md_st* %type, i8* %md, i32* %len) #0 {
define dso_local %struct.X509_sig_st* @d2i_PKCS8_fp(%struct._IO_FILE* %fp, %struct.X509_sig_st** %p8) #0 {
define dso_local i32 @i2d_PKCS8_fp(%struct._IO_FILE* %fp, %struct.X509_sig_st* %p8) #0 {
define dso_local %struct.X509_sig_st* @d2i_PKCS8_bio(%struct.bio_st* %bp, %struct.X509_sig_st** %p8) #0 {
define dso_local i32 @i2d_PKCS8_bio(%struct.bio_st* %bp, %struct.X509_sig_st* %p8) #0 {
define dso_local %struct.pkcs8_priv_key_info_st* @d2i_PKCS8_PRIV_KEY_INFO_fp(%struct._IO_FILE* %fp, %struct.pkcs8_priv_key_info_st** %p8inf) #0 {
define dso_local i32 @i2d_PKCS8_PRIV_KEY_INFO_fp(%struct._IO_FILE* %fp, %struct.pkcs8_priv_key_info_st* %p8inf) #0 {
define dso_local i32 @i2d_PKCS8PrivateKeyInfo_fp(%struct._IO_FILE* %fp, %struct.evp_pkey_st* %key) #0 {
define dso_local i32 @i2d_PrivateKey_fp(%struct._IO_FILE* %fp, %struct.evp_pkey_st* %pkey) #0 {
define dso_local %struct.evp_pkey_st* @d2i_PrivateKey_fp(%struct._IO_FILE* %fp, %struct.evp_pkey_st** %a) #0 {
define dso_local i32 @i2d_PUBKEY_fp(%struct._IO_FILE* %fp, %struct.evp_pkey_st* %pkey) #0 {
define dso_local %struct.evp_pkey_st* @d2i_PUBKEY_fp(%struct._IO_FILE* %fp, %struct.evp_pkey_st** %a) #0 {
define dso_local %struct.pkcs8_priv_key_info_st* @d2i_PKCS8_PRIV_KEY_INFO_bio(%struct.bio_st* %bp, %struct.pkcs8_priv_key_info_st** %p8inf) #0 {
define dso_local i32 @i2d_PKCS8_PRIV_KEY_INFO_bio(%struct.bio_st* %bp, %struct.pkcs8_priv_key_info_st* %p8inf) #0 {
define dso_local i32 @i2d_PKCS8PrivateKeyInfo_bio(%struct.bio_st* %bp, %struct.evp_pkey_st* %key) #0 {
define dso_local i32 @i2d_PrivateKey_bio(%struct.bio_st* %bp, %struct.evp_pkey_st* %pkey) #0 {
define dso_local %struct.evp_pkey_st* @d2i_PrivateKey_bio(%struct.bio_st* %bp, %struct.evp_pkey_st** %a) #0 {
define dso_local i32 @i2d_PUBKEY_bio(%struct.bio_st* %bp, %struct.evp_pkey_st* %pkey) #0 {
define dso_local %struct.evp_pkey_st* @d2i_PUBKEY_bio(%struct.bio_st* %bp, %struct.evp_pkey_st** %a) #0 {
define dso_local i8* @X509_verify_cert_error_string(i64 %n) #0 {
define dso_local i32 (i32, %struct.x509_st*, i32)* @X509_TRUST_set_default(i32 (i32, %struct.x509_st*, i32)* %trust) #0 {
define internal i32 @obj_trust(i32 %id, %struct.x509_st* %x, i32 %flags) #0 {
define dso_local i32 @X509_check_trust(%struct.x509_st* %x, i32 %id, i32 %flags) #0 {
define internal i32 @trust_compat(%struct.x509_trust_st* %trust, %struct.x509_st* %x, i32 %flags) #0 {
define dso_local i32 @X509_TRUST_get_by_id(i32 %id) #0 {
define dso_local %struct.x509_trust_st* @X509_TRUST_get0(i32 %idx) #0 {
define internal i32 @trust_1oidany(%struct.x509_trust_st* %trust, %struct.x509_st* %x, i32 %flags) #0 {
define internal i32 @trust_1oid(%struct.x509_trust_st* %trust, %struct.x509_st* %x, i32 %flags) #0 {
define dso_local i32 @X509_TRUST_get_count() #0 {
define dso_local i32 @X509_TRUST_set(i32* %t, i32 %trust) #0 {
define dso_local i32 @X509_TRUST_add(i32 %id, i32 %flags, i32 (%struct.x509_trust_st*, %struct.x509_st*, i32)* %ck, i8* %name, i32 %arg1, i8* %arg2) #0 {
define internal i32 @tr_cmp(%struct.x509_trust_st** %a, %struct.x509_trust_st** %b) #0 {
define dso_local void @X509_TRUST_cleanup() #0 {
define internal void @trtable_free(%struct.x509_trust_st* %p) #0 {
define dso_local i32 @X509_TRUST_get_flags(%struct.x509_trust_st* %xp) #0 {
define dso_local i8* @X509_TRUST_get0_name(%struct.x509_trust_st* %xp) #0 {
define dso_local i32 @X509_TRUST_get_trust(%struct.x509_trust_st* %xp) #0 {
define dso_local %struct.x509_lookup_method_st.13551* @X509_LOOKUP_file() #0 {
define internal i32 @by_file_ctrl(%struct.x509_lookup_st.13582* %ctx, i32 %cmd, i8* %argp, i64 %argl, i8** %ret) #0 {
define dso_local i32 @X509_load_cert_crl_file(%struct.x509_lookup_st.13582* %ctx, i8* %file, i32 %type) #0 {
define dso_local i32 @X509_load_cert_file(%struct.x509_lookup_st.13582* %ctx, i8* %file, i32 %type) #0 {
define dso_local i32 @X509_load_crl_file(%struct.x509_lookup_st.13582* %ctx, i8* %file, i32 %type) #0 {
define dso_local %struct.x509_lookup_method_st.13551* @X509_LOOKUP_hash_dir() #0 {
define internal i32 @new_dir(%struct.x509_lookup_st.13582* %lu) #0 {
define internal void @free_dir(%struct.x509_lookup_st.13582* %lu) #0 {
define internal i32 @dir_ctrl(%struct.x509_lookup_st.13582* %ctx, i32 %cmd, i8* %argp, i64 %argl, i8** %retp) #0 {
define internal i32 @get_cert_by_subject(%struct.x509_lookup_st.13582* %xl, i32 %type, %struct.X509_name_st* %name, %struct.asn1_type_st* %ret) #0 {
define internal i32 @add_cert_dir(%struct.lookup_dir_st* %ctx, i8* %dir, i32 %type) #0 {
define internal i32 @by_dir_hash_cmp(%struct.lookup_dir_hashes_st** %a, %struct.lookup_dir_hashes_st** %b) #0 {
define internal void @by_dir_entry_free(%struct.lookup_dir_entry_st* %ent) #0 {
define internal void @by_dir_hash_free(%struct.lookup_dir_hashes_st* %hash) #0 {
define dso_local %struct.X509_VERIFY_PARAM_st* @X509_VERIFY_PARAM_new() #0 {
define internal void @x509_verify_param_zero(%struct.X509_VERIFY_PARAM_st* %param) #0 {
define internal void @str_free(i8* %s) #0 {
define dso_local void @X509_VERIFY_PARAM_free(%struct.X509_VERIFY_PARAM_st* %param) #0 {
define dso_local i32 @X509_VERIFY_PARAM_inherit(%struct.X509_VERIFY_PARAM_st* %dest, %struct.X509_VERIFY_PARAM_st* %src) #0 {
define dso_local i32 @X509_VERIFY_PARAM_set1_policies(%struct.X509_VERIFY_PARAM_st* %param, %struct.stack_st_SSL_CIPHER* %policies) #0 {
define internal i8* @str_copy(i8* %s) #0 {
define dso_local i32 @X509_VERIFY_PARAM_set1_email(%struct.X509_VERIFY_PARAM_st* %param, i8* %email, i64 %emaillen) #0 {
define dso_local i32 @X509_VERIFY_PARAM_set1_ip(%struct.X509_VERIFY_PARAM_st* %param, i8* %ip, i64 %iplen) #0 {
define internal i32 @int_x509_param_set1(i8** %pdest, i64* %pdestlen, i8* %src, i64 %srclen) #0 {
define dso_local i32 @X509_VERIFY_PARAM_set1(%struct.X509_VERIFY_PARAM_st* %to, %struct.X509_VERIFY_PARAM_st* %from) #0 {
define dso_local i32 @X509_VERIFY_PARAM_set1_name(%struct.X509_VERIFY_PARAM_st* %param, i8* %name) #0 {
define dso_local i32 @X509_VERIFY_PARAM_set_flags(%struct.X509_VERIFY_PARAM_st* %param, i64 %flags) #0 {
define dso_local i32 @X509_VERIFY_PARAM_clear_flags(%struct.X509_VERIFY_PARAM_st* %param, i64 %flags) #0 {
define dso_local i64 @X509_VERIFY_PARAM_get_flags(%struct.X509_VERIFY_PARAM_st* %param) #0 {
define dso_local i32 @X509_VERIFY_PARAM_set_purpose(%struct.X509_VERIFY_PARAM_st* %param, i32 %purpose) #0 {
define dso_local i32 @X509_VERIFY_PARAM_set_trust(%struct.X509_VERIFY_PARAM_st* %param, i32 %trust) #0 {
define dso_local void @X509_VERIFY_PARAM_set_depth(%struct.X509_VERIFY_PARAM_st* %param, i32 %depth) #0 {
define dso_local void @X509_VERIFY_PARAM_set_time(%struct.X509_VERIFY_PARAM_st* %param, i64 %t) #0 {
define dso_local i32 @X509_VERIFY_PARAM_add0_policy(%struct.X509_VERIFY_PARAM_st* %param, %struct.asn1_object_st* %policy) #0 {
define dso_local i32 @X509_VERIFY_PARAM_set1_host(%struct.X509_VERIFY_PARAM_st* %param, i8* %name, i64 %namelen) #0 {
define internal i32 @int_x509_param_set_hosts(%struct.X509_VERIFY_PARAM_ID_st* %id, i32 %mode, i8* %name, i64 %namelen) #0 {
define dso_local i32 @X509_VERIFY_PARAM_add1_host(%struct.X509_VERIFY_PARAM_st* %param, i8* %name, i64 %namelen) #0 {
define dso_local void @X509_VERIFY_PARAM_set_hostflags(%struct.X509_VERIFY_PARAM_st* %param, i32 %flags) #0 {
define dso_local i8* @X509_VERIFY_PARAM_get0_peername(%struct.X509_VERIFY_PARAM_st* %param) #0 {
define dso_local i32 @X509_VERIFY_PARAM_set1_ip_asc(%struct.X509_VERIFY_PARAM_st* %param, i8* %ipasc) #0 {
define dso_local i32 @X509_VERIFY_PARAM_get_depth(%struct.X509_VERIFY_PARAM_st* %param) #0 {
define dso_local i8* @X509_VERIFY_PARAM_get0_name(%struct.X509_VERIFY_PARAM_st* %param) #0 {
define dso_local i32 @X509_VERIFY_PARAM_add0_table(%struct.X509_VERIFY_PARAM_st* %param) #0 {
define internal i32 @param_cmp(%struct.X509_VERIFY_PARAM_st** %a, %struct.X509_VERIFY_PARAM_st** %b) #0 {
define dso_local i32 @X509_VERIFY_PARAM_get_count() #0 {
define dso_local %struct.X509_VERIFY_PARAM_st* @X509_VERIFY_PARAM_get0(i32 %id) #0 {
define dso_local %struct.X509_VERIFY_PARAM_st* @X509_VERIFY_PARAM_lookup(i8* %name) #0 {
define internal %struct.X509_VERIFY_PARAM_st* @OBJ_bsearch_table(%struct.X509_VERIFY_PARAM_st* %key, %struct.X509_VERIFY_PARAM_st* %base, i32 %num) #0 {
define internal i32 @table_cmp_BSEARCH_CMP_FN(i8* %a_, i8* %b_) #0 {
define internal i32 @table_cmp(%struct.X509_VERIFY_PARAM_st* %a, %struct.X509_VERIFY_PARAM_st* %b) #0 {
define dso_local void @X509_VERIFY_PARAM_table_cleanup() #0 {
define dso_local i32 @X509V3_EXT_add(%struct.v3_ext_method* %ext) #0 {
define internal i32 @ext_cmp(%struct.v3_ext_method** %a, %struct.v3_ext_method** %b) #0 {
define dso_local %struct.v3_ext_method* @X509V3_EXT_get_nid(i32 %nid) #0 {
define internal %struct.v3_ext_method** @OBJ_bsearch_ext(%struct.v3_ext_method** %key, %struct.v3_ext_method** %base, i32 %num) #0 {
define internal i32 @ext_cmp_BSEARCH_CMP_FN(i8* %a_, i8* %b_) #0 {
define dso_local %struct.v3_ext_method* @X509V3_EXT_get(%struct.X509_extension_st* %ext) #0 {
define dso_local i32 @X509V3_EXT_free(i32 %nid, i8* %ext_data) #0 {
define dso_local i32 @X509V3_EXT_add_list(%struct.v3_ext_method* %extlist) #0 {
define dso_local i32 @X509V3_EXT_add_alias(i32 %nid_to, i32 %nid_from) #0 {
define dso_local void @X509V3_EXT_cleanup() #0 {
define internal void @ext_list_free(%struct.v3_ext_method* %ext) #0 {
define dso_local i32 @X509V3_add_standard_extensions() #0 {
define dso_local i8* @X509V3_EXT_d2i(%struct.X509_extension_st* %ext) #0 {
define dso_local i8* @X509V3_get_d2i(%struct.stack_st_SSL_CIPHER* %x, i32 %nid, i32* %crit, i32* %idx) #0 {
define dso_local i32 @X509V3_add1_i2d(%struct.stack_st_SSL_CIPHER** %x, i32 %nid, i8* %value, i32 %crit, i64 %flags) #0 {
define dso_local void @X509V3_EXT_val_prn(%struct.bio_st* %out, %struct.stack_st_SSL_CIPHER* %val, i32 %indent, i32 %ml) #0 {
define dso_local i32 @X509V3_EXT_print(%struct.bio_st* %out, %struct.X509_extension_st* %ext, i64 %flag, i32 %indent) #0 {
define internal i32 @unknown_ext_print(%struct.bio_st* %out, %struct.X509_extension_st* %ext, i64 %flag, i32 %indent, i32 %supported) #0 {
define dso_local i32 @X509V3_extensions_print(%struct.bio_st* %bp, i8* %title, %struct.stack_st_SSL_CIPHER* %exts, i64 %flag, i32 %indent) #0 {
define dso_local i32 @X509V3_EXT_print_fp(%struct._IO_FILE* %fp, %struct.X509_extension_st* %ext, i32 %flag, i32 %indent) #0 {
define dso_local i32 @X509V3_add_value(i8* %name, i8* %value, %struct.stack_st_SSL_CIPHER** %extlist) #0 {
define dso_local i32 @X509V3_add_value_uchar(i8* %name, i8* %value, %struct.stack_st_SSL_CIPHER** %extlist) #0 {
define dso_local void @X509V3_conf_free(%struct.CONF_VALUE* %conf) #0 {
define dso_local i32 @X509V3_add_value_bool(i8* %name, i32 %asn1_bool, %struct.stack_st_SSL_CIPHER** %extlist) #0 {
define dso_local i32 @X509V3_add_value_bool_nf(i8* %name, i32 %asn1_bool, %struct.stack_st_SSL_CIPHER** %extlist) #0 {
define dso_local i8* @i2s_ASN1_ENUMERATED(%struct.v3_ext_method* %method, %struct.asn1_string_st* %a) #0 {
define dso_local i8* @i2s_ASN1_INTEGER(%struct.v3_ext_method* %method, %struct.asn1_string_st* %a) #0 {
define dso_local %struct.asn1_string_st* @s2i_ASN1_INTEGER(%struct.v3_ext_method* %method, i8* %value) #0 {
define dso_local i32 @X509V3_add_value_int(i8* %name, %struct.asn1_string_st* %aint, %struct.stack_st_SSL_CIPHER** %extlist) #0 {
define dso_local i32 @X509V3_get_value_bool(%struct.CONF_VALUE* %value, i32* %asn1_bool) #0 {
define dso_local i32 @X509V3_get_value_int(%struct.CONF_VALUE* %value, %struct.asn1_string_st** %aint) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @X509V3_parse_list(i8* %line) #0 {
define internal i8* @strip_spaces(i8* %name) #0 {
define dso_local i8* @hex_to_string(i8* %buffer, i64 %len) #0 {
define dso_local i8* @string_to_hex(i8* %str, i64* %len) #0 {
define dso_local i32 @name_cmp(i8* %name, i8* %cmp) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @X509_get1_email(%struct.x509_st* %x) #0 {
define internal %struct.stack_st_SSL_CIPHER* @get_email(%struct.X509_name_st* %name, %struct.stack_st_SSL_CIPHER* %gens) #0 {
define internal i32 @append_ia5(%struct.stack_st_SSL_CIPHER** %sk, %struct.asn1_string_st* %email) #0 {
define internal i32 @sk_strcmp(i8** %a, i8** %b) #0 {
define dso_local void @X509_email_free(%struct.stack_st_SSL_CIPHER* %sk) #0 {
define internal void @str_free.6268(i8* %str) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @X509_get1_ocsp(%struct.x509_st* %x) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @X509_REQ_get1_email(%struct.X509_req_st* %x) #0 {
define dso_local i32 @X509_check_host(%struct.x509_st* %x, i8* %chk, i64 %chklen, i32 %flags, i8** %peername) #0 {
define internal i32 @do_x509_check(%struct.x509_st* %x, i8* %chk, i64 %chklen, i32 %flags, i32 %check_type, i8** %peername) #0 {
define internal i32 @equal_email(i8* %a, i64 %a_len, i8* %b, i64 %b_len, i32 %unused_flags) #0 {
define internal i32 @equal_nocase(i8* %pattern, i64 %pattern_len, i8* %subject, i64 %subject_len, i32 %flags) #0 {
define internal i32 @equal_wildcard(i8* %pattern, i64 %pattern_len, i8* %subject, i64 %subject_len, i32 %flags) #0 {
define internal i32 @equal_case(i8* %pattern, i64 %pattern_len, i8* %subject, i64 %subject_len, i32 %flags) #0 {
define internal i32 @do_check_string(%struct.asn1_string_st* %a, i32 %cmp_type, i32 (i8*, i64, i8*, i64, i32)* %equal, i32 %flags, i8* %b, i64 %blen, i8** %peername) #0 {
define internal void @skip_prefix(i8** %p, i64* %plen, i8* %subject, i64 %subject_len, i32 %flags) #0 {
define internal i8* @valid_star(i8* %p, i64 %len, i32 %flags) #0 {
define internal i32 @wildcard_match(i8* %prefix, i64 %prefix_len, i8* %suffix, i64 %suffix_len, i8* %subject, i64 %subject_len, i32 %flags) #0 {
define dso_local i32 @X509_check_email(%struct.x509_st* %x, i8* %chk, i64 %chklen, i32 %flags) #0 {
define dso_local i32 @X509_check_ip(%struct.x509_st* %x, i8* %chk, i64 %chklen, i32 %flags) #0 {
define dso_local i32 @X509_check_ip_asc(%struct.x509_st* %x, i8* %ipasc, i32 %flags) #0 {
define dso_local i32 @a2i_ipadd(i8* %ipout, i8* %ipasc) #0 {
define internal i32 @ipv6_from_asc(i8* %v6, i8* %in) #0 {
define internal i32 @ipv4_from_asc(i8* %v4, i8* %in) #0 {
define internal i32 @ipv6_cb(i8* %elem, i32 %len, i8* %usr) #0 {
define internal i32 @ipv6_hex(i8* %out, i8* %in, i32 %inlen) #0 {
define dso_local %struct.asn1_string_st* @a2i_IPADDRESS(i8* %ipasc) #0 {
define dso_local %struct.asn1_string_st* @a2i_IPADDRESS_NC(i8* %ipasc) #0 {
define dso_local i32 @X509V3_NAME_from_section(%struct.X509_name_st* %nm, %struct.stack_st_SSL_CIPHER* %dn_sk, i64 %chtype) #0 {
define dso_local void @ERR_load_X509V3_strings() #0 {
define dso_local %struct.X509_algor_st* @d2i_OTHERNAME(%struct.X509_algor_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_OTHERNAME(%struct.X509_algor_st* %a, i8** %out) #0 {
define dso_local %struct.X509_algor_st* @OTHERNAME_new() #0 {
define dso_local void @OTHERNAME_free(%struct.X509_algor_st* %a) #0 {
define dso_local %struct.X509_val_st* @d2i_EDIPARTYNAME(%struct.X509_val_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_EDIPARTYNAME(%struct.X509_val_st* %a, i8** %out) #0 {
define dso_local %struct.X509_val_st* @EDIPARTYNAME_new() #0 {
define dso_local void @EDIPARTYNAME_free(%struct.X509_val_st* %a) #0 {
define dso_local %struct.asn1_type_st* @d2i_GENERAL_NAME(%struct.asn1_type_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_GENERAL_NAME(%struct.asn1_type_st* %a, i8** %out) #0 {
define dso_local %struct.asn1_type_st* @GENERAL_NAME_new() #0 {
define dso_local void @GENERAL_NAME_free(%struct.asn1_type_st* %a) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @d2i_GENERAL_NAMES(%struct.stack_st_SSL_CIPHER** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_GENERAL_NAMES(%struct.stack_st_SSL_CIPHER* %a, i8** %out) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @GENERAL_NAMES_new() #0 {
define dso_local void @GENERAL_NAMES_free(%struct.stack_st_SSL_CIPHER* %a) #0 {
define dso_local %struct.asn1_type_st* @GENERAL_NAME_dup(%struct.asn1_type_st* %a) #0 {
define dso_local i32 @GENERAL_NAME_cmp(%struct.asn1_type_st* %a, %struct.asn1_type_st* %b) #0 {
define dso_local i32 @OTHERNAME_cmp(%struct.X509_algor_st* %a, %struct.X509_algor_st* %b) #0 {
define dso_local void @GENERAL_NAME_set0_value(%struct.asn1_type_st* %a, i32 %type, i8* %value) #0 {
define dso_local i8* @GENERAL_NAME_get0_value(%struct.asn1_type_st* %a, i32* %ptype) #0 {
define dso_local i32 @GENERAL_NAME_set0_othername(%struct.asn1_type_st* %gen, %struct.asn1_object_st* %oid, %struct.asn1_type_st* %value) #0 {
define dso_local i32 @GENERAL_NAME_get0_otherName(%struct.asn1_type_st* %gen, %struct.asn1_object_st** %poid, %struct.asn1_type_st** %pvalue) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @i2v_GENERAL_NAMES(%struct.v3_ext_method.13809* %method, %struct.stack_st_SSL_CIPHER* %gens, %struct.stack_st_SSL_CIPHER* %ret) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @i2v_GENERAL_NAME(%struct.v3_ext_method.13809* %method, %struct.asn1_type_st* %gen, %struct.stack_st_SSL_CIPHER* %ret) #0 {
define dso_local i32 @GENERAL_NAME_print(%struct.bio_st* %out, %struct.asn1_type_st* %gen) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @v2i_GENERAL_NAMES(%struct.v3_ext_method.13809* %method, %struct.v3_ext_ctx* %ctx, %struct.stack_st_SSL_CIPHER* %nval) #0 {
define dso_local %struct.asn1_type_st* @v2i_GENERAL_NAME(%struct.v3_ext_method.13809* %method, %struct.v3_ext_ctx* %ctx, %struct.CONF_VALUE* %cnf) #0 {
define dso_local %struct.asn1_type_st* @v2i_GENERAL_NAME_ex(%struct.asn1_type_st* %out, %struct.v3_ext_method.13809* %method, %struct.v3_ext_ctx* %ctx, %struct.CONF_VALUE* %cnf, i32 %is_nc) #0 {
define dso_local %struct.asn1_type_st* @a2i_GENERAL_NAME(%struct.asn1_type_st* %out, %struct.v3_ext_method.13809* %method, %struct.v3_ext_ctx* %ctx, i32 %gen_type, i8* %value, i32 %is_nc) #0 {
define internal i32 @do_dirname(%struct.asn1_type_st* %gen, i8* %value, %struct.v3_ext_ctx* %ctx) #0 {
define internal i32 @do_othername(%struct.asn1_type_st* %gen, i8* %value, %struct.v3_ext_ctx* %ctx) #0 {
define internal %struct.stack_st_SSL_CIPHER* @v2i_subject_alt(%struct.v3_ext_method.13809* %method, %struct.v3_ext_ctx* %ctx, %struct.stack_st_SSL_CIPHER* %nval) #0 {
define internal %struct.stack_st_SSL_CIPHER* @v2i_issuer_alt(%struct.v3_ext_method.13809* %method, %struct.v3_ext_ctx* %ctx, %struct.stack_st_SSL_CIPHER* %nval) #0 {
define internal i32 @copy_issuer(%struct.v3_ext_ctx* %ctx, %struct.stack_st_SSL_CIPHER* %gens) #0 {
define internal i32 @copy_email(%struct.v3_ext_ctx* %ctx, %struct.stack_st_SSL_CIPHER* %gens, i32 %move_p) #0 {
define dso_local i8* @i2s_ASN1_OCTET_STRING(%struct.v3_ext_method.13852* %method, %struct.asn1_string_st* %oct) #0 {
define dso_local %struct.asn1_string_st* @s2i_ASN1_OCTET_STRING(%struct.v3_ext_method.13852* %method, %struct.v3_ext_ctx* %ctx, i8* %str) #0 {
define internal %struct.asn1_string_st* @s2i_skey_id(%struct.v3_ext_method.13852* %method, %struct.v3_ext_ctx* %ctx, i8* %str) #0 {
define internal %struct.stack_st_SSL_CIPHER* @i2v_AUTHORITY_KEYID(%struct.v3_ext_method.13809* %method, %struct.AUTHORITY_KEYID_st* %akeyid, %struct.stack_st_SSL_CIPHER* %extlist) #0 {
define internal %struct.AUTHORITY_KEYID_st* @v2i_AUTHORITY_KEYID(%struct.v3_ext_method.13809* %method, %struct.v3_ext_ctx* %ctx, %struct.stack_st_SSL_CIPHER* %values) #0 {
define dso_local %struct.X509_val_st* @d2i_PKEY_USAGE_PERIOD(%struct.X509_val_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_PKEY_USAGE_PERIOD(%struct.X509_val_st* %a, i8** %out) #0 {
define dso_local %struct.X509_val_st* @PKEY_USAGE_PERIOD_new() #0 {
define dso_local void @PKEY_USAGE_PERIOD_free(%struct.X509_val_st* %a) #0 {
define internal i32 @i2r_PKEY_USAGE_PERIOD(%struct.v3_ext_method.13938* %method, %struct.X509_val_st* %usage, %struct.bio_st* %out, i32 %indent) #0 {
define internal i8* @s2i_asn1_int(%struct.v3_ext_method.13978* %meth, %struct.v3_ext_ctx* %ctx, i8* %value) #0 {
define dso_local i8* @i2s_ASN1_ENUMERATED_TABLE(%struct.v3_ext_method.14017* %method, %struct.asn1_string_st* %e) #0 {
define dso_local %struct.X509_val_st* @d2i_SXNETID(%struct.X509_val_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_SXNETID(%struct.X509_val_st* %a, i8** %out) #0 {
define dso_local %struct.X509_val_st* @SXNETID_new() #0 {
define dso_local void @SXNETID_free(%struct.X509_val_st* %a) #0 {
define dso_local %struct.SXNET_st* @d2i_SXNET(%struct.SXNET_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_SXNET(%struct.SXNET_st* %a, i8** %out) #0 {
define dso_local %struct.SXNET_st* @SXNET_new() #0 {
define dso_local void @SXNET_free(%struct.SXNET_st* %a) #0 {
define dso_local i32 @SXNET_add_id_asc(%struct.SXNET_st** %psx, i8* %zone, i8* %user, i32 %userlen) #0 {
define dso_local i32 @SXNET_add_id_INTEGER(%struct.SXNET_st** %psx, %struct.asn1_string_st* %zone, i8* %user, i32 %userlen) #0 {
define dso_local %struct.asn1_string_st* @SXNET_get_id_INTEGER(%struct.SXNET_st* %sx, %struct.asn1_string_st* %zone) #0 {
define dso_local i32 @SXNET_add_id_ulong(%struct.SXNET_st** %psx, i64 %lzone, i8* %user, i32 %userlen) #0 {
define dso_local %struct.asn1_string_st* @SXNET_get_id_asc(%struct.SXNET_st* %sx, i8* %zone) #0 {
define dso_local %struct.asn1_string_st* @SXNET_get_id_ulong(%struct.SXNET_st* %sx, i64 %lzone) #0 {
define internal %struct.SXNET_st* @sxnet_v2i(%struct.v3_ext_method.14057* %method, %struct.v3_ext_ctx* %ctx, %struct.stack_st_SSL_CIPHER* %nval) #0 {
define internal i32 @sxnet_i2r(%struct.v3_ext_method.14057* %method, %struct.SXNET_st* %sx, %struct.bio_st* %out, i32 %indent) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @d2i_CERTIFICATEPOLICIES(%struct.stack_st_SSL_CIPHER** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_CERTIFICATEPOLICIES(%struct.stack_st_SSL_CIPHER* %a, i8** %out) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @CERTIFICATEPOLICIES_new() #0 {
define dso_local void @CERTIFICATEPOLICIES_free(%struct.stack_st_SSL_CIPHER* %a) #0 {
define dso_local %struct.Netscape_certificate_sequence* @d2i_POLICYINFO(%struct.Netscape_certificate_sequence** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_POLICYINFO(%struct.Netscape_certificate_sequence* %a, i8** %out) #0 {
define dso_local %struct.Netscape_certificate_sequence* @POLICYINFO_new() #0 {
define dso_local void @POLICYINFO_free(%struct.Netscape_certificate_sequence* %a) #0 {
define dso_local %struct.POLICYQUALINFO_st* @d2i_POLICYQUALINFO(%struct.POLICYQUALINFO_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_POLICYQUALINFO(%struct.POLICYQUALINFO_st* %a, i8** %out) #0 {
define dso_local %struct.POLICYQUALINFO_st* @POLICYQUALINFO_new() #0 {
define dso_local void @POLICYQUALINFO_free(%struct.POLICYQUALINFO_st* %a) #0 {
define dso_local %struct.USERNOTICE_st* @d2i_USERNOTICE(%struct.USERNOTICE_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_USERNOTICE(%struct.USERNOTICE_st* %a, i8** %out) #0 {
define dso_local %struct.USERNOTICE_st* @USERNOTICE_new() #0 {
define dso_local void @USERNOTICE_free(%struct.USERNOTICE_st* %a) #0 {
define dso_local %struct.SXNET_st* @d2i_NOTICEREF(%struct.SXNET_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_NOTICEREF(%struct.SXNET_st* %a, i8** %out) #0 {
define dso_local %struct.SXNET_st* @NOTICEREF_new() #0 {
define dso_local void @NOTICEREF_free(%struct.SXNET_st* %a) #0 {
define dso_local void @X509_POLICY_NODE_print(%struct.bio_st* %out, %struct.X509_POLICY_NODE_st* %node, i32 %indent) #0 {
define internal void @print_qualifiers(%struct.bio_st* %out, %struct.stack_st_SSL_CIPHER* %quals, i32 %indent) #0 {
define internal void @print_notice(%struct.bio_st* %out, %struct.USERNOTICE_st* %notice, i32 %indent) #0 {
define internal i32 @i2r_certpol(%struct.v3_ext_method.14099* %method, %struct.stack_st_SSL_CIPHER* %pol, %struct.bio_st* %out, i32 %indent) #0 {
define internal %struct.stack_st_SSL_CIPHER* @r2i_certpol(%struct.v3_ext_method.14099* %method, %struct.v3_ext_ctx* %ctx, i8* %value) #0 {
define internal %struct.Netscape_certificate_sequence* @policy_section(%struct.v3_ext_ctx* %ctx, %struct.stack_st_SSL_CIPHER* %polstrs, i32 %ia5org) #0 {
define internal %struct.POLICYQUALINFO_st* @notice_section(%struct.v3_ext_ctx* %ctx, %struct.stack_st_SSL_CIPHER* %unot, i32 %ia5org) #0 {
define internal i32 @nref_nos(%struct.stack_st_SSL_CIPHER* %nnums, %struct.stack_st_SSL_CIPHER* %nos) #0 {
define dso_local %struct.DIST_POINT_NAME_st* @d2i_DIST_POINT_NAME(%struct.DIST_POINT_NAME_st** %a, i8** %in, i64 %len) #0 {
define internal i32 @dpn_cb(i32 %operation, %struct.ASN1_VALUE_st** %pval, %struct.ASN1_ITEM_st* %it, i8* %exarg) #0 {
define dso_local i32 @i2d_DIST_POINT_NAME(%struct.DIST_POINT_NAME_st* %a, i8** %out) #0 {
define dso_local %struct.DIST_POINT_NAME_st* @DIST_POINT_NAME_new() #0 {
define dso_local void @DIST_POINT_NAME_free(%struct.DIST_POINT_NAME_st* %a) #0 {
define dso_local %struct.DIST_POINT_st* @d2i_DIST_POINT(%struct.DIST_POINT_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_DIST_POINT(%struct.DIST_POINT_st* %a, i8** %out) #0 {
define dso_local %struct.DIST_POINT_st* @DIST_POINT_new() #0 {
define dso_local void @DIST_POINT_free(%struct.DIST_POINT_st* %a) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @d2i_CRL_DIST_POINTS(%struct.stack_st_SSL_CIPHER** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_CRL_DIST_POINTS(%struct.stack_st_SSL_CIPHER* %a, i8** %out) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @CRL_DIST_POINTS_new() #0 {
define dso_local void @CRL_DIST_POINTS_free(%struct.stack_st_SSL_CIPHER* %a) #0 {
define dso_local %struct.ISSUING_DIST_POINT_st* @d2i_ISSUING_DIST_POINT(%struct.ISSUING_DIST_POINT_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_ISSUING_DIST_POINT(%struct.ISSUING_DIST_POINT_st* %a, i8** %out) #0 {
define dso_local %struct.ISSUING_DIST_POINT_st* @ISSUING_DIST_POINT_new() #0 {
define dso_local void @ISSUING_DIST_POINT_free(%struct.ISSUING_DIST_POINT_st* %a) #0 {
define dso_local i32 @DIST_POINT_set_dpname(%struct.DIST_POINT_NAME_st* %dpn, %struct.X509_name_st* %iname) #0 {
define internal i8* @v2i_crld(%struct.v3_ext_method.13809* %method, %struct.v3_ext_ctx* %ctx, %struct.stack_st_SSL_CIPHER* %nval) #0 {
define internal i32 @i2r_crldp(%struct.v3_ext_method.13809* %method, i8* %pcrldp, %struct.bio_st* %out, i32 %indent) #0 {
define internal i32 @print_distpoint(%struct.bio_st* %out, %struct.DIST_POINT_NAME_st* %dpn, i32 %indent) #0 {
define internal i32 @print_reasons(%struct.bio_st* %out, i8* %rname, %struct.asn1_string_st* %rflags, i32 %indent) #0 {
define internal i32 @print_gens(%struct.bio_st* %out, %struct.stack_st_SSL_CIPHER* %gens, i32 %indent) #0 {
define internal %struct.DIST_POINT_st* @crldp_from_section(%struct.v3_ext_ctx* %ctx, %struct.stack_st_SSL_CIPHER* %nval) #0 {
define internal i32 @set_dist_point_name(%struct.DIST_POINT_NAME_st** %pdp, %struct.v3_ext_ctx* %ctx, %struct.CONF_VALUE* %cnf) #0 {
define internal i32 @set_reasons(%struct.asn1_string_st** %preas, i8* %value) #0 {
define internal %struct.stack_st_SSL_CIPHER* @gnames_from_sectname(%struct.v3_ext_ctx* %ctx, i8* %sect) #0 {
define internal i8* @v2i_idp(%struct.v3_ext_method.13809* %method, %struct.v3_ext_ctx* %ctx, %struct.stack_st_SSL_CIPHER* %nval) #0 {
define internal i32 @i2r_idp(%struct.v3_ext_method.13809* %method, i8* %pidp, %struct.bio_st* %out, i32 %indent) #0 {
define dso_local i32 @X509_check_purpose(%struct.x509_st* %x, i32 %id, i32 %ca) #0 {
define internal void @x509v3_cache_extensions(%struct.x509_st* %x) #0 {
define dso_local i32 @X509_PURPOSE_get_by_id(i32 %purpose) #0 {
define dso_local %struct.x509_purpose_st* @X509_PURPOSE_get0(i32 %idx) #0 {
define internal i32 @check_purpose_ssl_client(%struct.x509_purpose_st* %xp, %struct.x509_st* %x, i32 %ca) #0 {
define internal i32 @check_purpose_ssl_server(%struct.x509_purpose_st* %xp, %struct.x509_st* %x, i32 %ca) #0 {
define internal i32 @check_purpose_ns_ssl_server(%struct.x509_purpose_st* %xp, %struct.x509_st* %x, i32 %ca) #0 {
define internal i32 @check_purpose_smime_sign(%struct.x509_purpose_st* %xp, %struct.x509_st* %x, i32 %ca) #0 {
define internal i32 @check_purpose_smime_encrypt(%struct.x509_purpose_st* %xp, %struct.x509_st* %x, i32 %ca) #0 {
define internal i32 @check_purpose_crl_sign(%struct.x509_purpose_st* %xp, %struct.x509_st* %x, i32 %ca) #0 {
define internal i32 @no_check(%struct.x509_purpose_st* %xp, %struct.x509_st* %x, i32 %ca) #0 {
define internal i32 @ocsp_helper(%struct.x509_purpose_st* %xp, %struct.x509_st* %x, i32 %ca) #0 {
define internal i32 @check_purpose_timestamp_sign(%struct.x509_purpose_st* %xp, %struct.x509_st* %x, i32 %ca) #0 {
define internal i32 @check_ca(%struct.x509_st* %x) #0 {
define internal i32 @purpose_smime(%struct.x509_st* %x, i32 %ca) #0 {
define internal i32 @check_ssl_ca(%struct.x509_st* %x) #0 {
define dso_local i32 @X509_check_akid(%struct.x509_st* %issuer, %struct.AUTHORITY_KEYID_st* %akid) #0 {
define internal void @setup_crldp(%struct.x509_st* %x) #0 {
define dso_local i32 @X509_supported_extension(%struct.X509_extension_st* %ex) #0 {
define internal i32* @OBJ_bsearch_nid(i32* %key, i32* %base, i32 %num) #0 {
define internal i32 @nid_cmp_BSEARCH_CMP_FN(i8* %a_, i8* %b_) #0 {
define internal i32 @nid_cmp(i32* %a, i32* %b) #0 {
define internal void @setup_dp(%struct.x509_st* %x, %struct.DIST_POINT_st* %dp) #0 {
define dso_local i32 @X509_PURPOSE_set(i32* %p, i32 %purpose) #0 {
define dso_local i32 @X509_PURPOSE_get_count() #0 {
define dso_local i32 @X509_PURPOSE_get_by_sname(i8* %sname) #0 {
define dso_local i32 @X509_PURPOSE_add(i32 %id, i32 %trust, i32 %flags, i32 (%struct.x509_purpose_st*, %struct.x509_st*, i32)* %ck, i8* %name, i8* %sname, i8* %arg) #0 {
define internal i32 @xp_cmp(%struct.x509_purpose_st** %a, %struct.x509_purpose_st** %b) #0 {
define dso_local void @X509_PURPOSE_cleanup() #0 {
define internal void @xptable_free(%struct.x509_purpose_st* %p) #0 {
define dso_local i32 @X509_PURPOSE_get_id(%struct.x509_purpose_st* %xp) #0 {
define dso_local i8* @X509_PURPOSE_get0_name(%struct.x509_purpose_st* %xp) #0 {
define dso_local i8* @X509_PURPOSE_get0_sname(%struct.x509_purpose_st* %xp) #0 {
define dso_local i32 @X509_PURPOSE_get_trust(%struct.x509_purpose_st* %xp) #0 {
define dso_local i32 @X509_check_ca(%struct.x509_st* %x) #0 {
define dso_local i32 @X509_check_issued(%struct.x509_st* %issuer, %struct.x509_st* %subject) #0 {
define dso_local %struct.X509_algor_st* @d2i_ACCESS_DESCRIPTION(%struct.X509_algor_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_ACCESS_DESCRIPTION(%struct.X509_algor_st* %a, i8** %out) #0 {
define dso_local %struct.X509_algor_st* @ACCESS_DESCRIPTION_new() #0 {
define dso_local void @ACCESS_DESCRIPTION_free(%struct.X509_algor_st* %a) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @d2i_AUTHORITY_INFO_ACCESS(%struct.stack_st_SSL_CIPHER** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_AUTHORITY_INFO_ACCESS(%struct.stack_st_SSL_CIPHER* %a, i8** %out) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @AUTHORITY_INFO_ACCESS_new() #0 {
define dso_local void @AUTHORITY_INFO_ACCESS_free(%struct.stack_st_SSL_CIPHER* %a) #0 {
define dso_local i32 @i2a_ACCESS_DESCRIPTION(%struct.bio_st* %bp, %struct.X509_algor_st* %a) #0 {
define internal %struct.stack_st_SSL_CIPHER* @i2v_AUTHORITY_INFO_ACCESS(%struct.v3_ext_method.13809* %method, %struct.stack_st_SSL_CIPHER* %ainfo, %struct.stack_st_SSL_CIPHER* %ret) #0 {
define internal %struct.stack_st_SSL_CIPHER* @v2i_AUTHORITY_INFO_ACCESS(%struct.v3_ext_method.13809* %method, %struct.v3_ext_ctx* %ctx, %struct.stack_st_SSL_CIPHER* %nval) #0 {
define internal i32 @i2r_ocsp_crlid(%struct.v3_ext_method.14267* %method, i8* %in, %struct.bio_st* %bp, i32 %ind) #0 {
define internal i32 @i2r_ocsp_acutoff(%struct.v3_ext_method.14267* %method, i8* %cutoff, %struct.bio_st* %bp, i32 %ind) #0 {
define internal i32 @i2r_object(%struct.v3_ext_method.14267* %method, i8* %oid, %struct.bio_st* %bp, i32 %ind) #0 {
define internal i8* @ocsp_nonce_new() #0 {
define internal void @ocsp_nonce_free(i8* %a) #0 {
define internal i8* @d2i_ocsp_nonce(i8* %a, i8** %pp, i64 %length) #0 {
define internal i32 @i2d_ocsp_nonce(i8* %a, i8** %pp) #0 {
define internal i32 @i2r_ocsp_nonce(%struct.v3_ext_method.14267* %method, i8* %nonce, %struct.bio_st* %out, i32 %indent) #0 {
define internal i8* @s2i_ocsp_nocheck(%struct.v3_ext_method.14267* %method, %struct.v3_ext_ctx* %ctx, i8* %str) #0 {
define internal i32 @i2r_ocsp_nocheck(%struct.v3_ext_method.14267* %method, i8* %nocheck, %struct.bio_st* %out, i32 %indent) #0 {
define internal i32 @i2r_ocsp_serviceloc(%struct.v3_ext_method.14267* %method, i8* %in, %struct.bio_st* %bp, i32 %ind) #0 {
define dso_local %struct.AUTHORITY_KEYID_st* @d2i_AUTHORITY_KEYID(%struct.AUTHORITY_KEYID_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_AUTHORITY_KEYID(%struct.AUTHORITY_KEYID_st* %a, i8** %out) #0 {
define dso_local %struct.AUTHORITY_KEYID_st* @AUTHORITY_KEYID_new() #0 {
define dso_local void @AUTHORITY_KEYID_free(%struct.AUTHORITY_KEYID_st* %a) #0 {
define dso_local %struct.POLICY_MAPPING_st* @POLICY_MAPPING_new() #0 {
define dso_local void @POLICY_MAPPING_free(%struct.POLICY_MAPPING_st* %a) #0 {
define internal %struct.stack_st_SSL_CIPHER* @i2v_POLICY_MAPPINGS(%struct.v3_ext_method.14315* %method, i8* %a, %struct.stack_st_SSL_CIPHER* %ext_list) #0 {
define internal i8* @v2i_POLICY_MAPPINGS(%struct.v3_ext_method.14315* %method, %struct.v3_ext_ctx* %ctx, %struct.stack_st_SSL_CIPHER* %nval) #0 {
define dso_local %struct.X509_val_st* @POLICY_CONSTRAINTS_new() #0 {
define dso_local void @POLICY_CONSTRAINTS_free(%struct.X509_val_st* %a) #0 {
define internal %struct.stack_st_SSL_CIPHER* @i2v_POLICY_CONSTRAINTS(%struct.v3_ext_method.14357* %method, i8* %a, %struct.stack_st_SSL_CIPHER* %extlist) #0 {
define internal i8* @v2i_POLICY_CONSTRAINTS(%struct.v3_ext_method.14357* %method, %struct.v3_ext_ctx* %ctx, %struct.stack_st_SSL_CIPHER* %values) #0 {
define dso_local %struct.GENERAL_SUBTREE_st* @GENERAL_SUBTREE_new() #0 {
define dso_local void @GENERAL_SUBTREE_free(%struct.GENERAL_SUBTREE_st* %a) #0 {
define dso_local %struct.NAME_CONSTRAINTS_st* @NAME_CONSTRAINTS_new() #0 {
define dso_local void @NAME_CONSTRAINTS_free(%struct.NAME_CONSTRAINTS_st* %a) #0 {
define dso_local i32 @NAME_CONSTRAINTS_check(%struct.x509_st* %x, %struct.NAME_CONSTRAINTS_st* %nc) #0 {
define internal i32 @nc_match(%struct.asn1_type_st* %gen, %struct.NAME_CONSTRAINTS_st* %nc) #0 {
define internal i32 @nc_match_single(%struct.asn1_type_st* %gen, %struct.asn1_type_st* %base) #0 {
define internal i32 @nc_dn(%struct.X509_name_st* %nm, %struct.X509_name_st* %base) #0 {
define internal i32 @nc_dns(%struct.asn1_string_st* %dns, %struct.asn1_string_st* %base) #0 {
define internal i32 @nc_email(%struct.asn1_string_st* %eml, %struct.asn1_string_st* %base) #0 {
define internal i32 @nc_uri(%struct.asn1_string_st* %uri, %struct.asn1_string_st* %base) #0 {
define internal i32 @ia5ncasecmp(i8* %s1, i8* %s2, i64 %n) #0 {
define internal i32 @ia5casecmp(i8* %s1, i8* %s2) #0 {
define internal i8* @v2i_NAME_CONSTRAINTS(%struct.v3_ext_method.13809* %method, %struct.v3_ext_ctx* %ctx, %struct.stack_st_SSL_CIPHER* %nval) #0 {
define internal i32 @i2r_NAME_CONSTRAINTS(%struct.v3_ext_method.13809* %method, i8* %a, %struct.bio_st* %bp, i32 %ind) #0 {
define internal i32 @do_i2r_name_constraints(%struct.v3_ext_method.13809* %method, %struct.stack_st_SSL_CIPHER* %trees, %struct.bio_st* %bp, i32 %ind, i8* %name) #0 {
define internal i32 @print_nc_ipadd(%struct.bio_st* %bp, %struct.asn1_string_st* %ip) #0 {
define dso_local %struct.ocsp_resp_bytes_st* @d2i_PROXY_POLICY(%struct.ocsp_resp_bytes_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_PROXY_POLICY(%struct.ocsp_resp_bytes_st* %a, i8** %out) #0 {
define dso_local %struct.ocsp_resp_bytes_st* @PROXY_POLICY_new() #0 {
define dso_local void @PROXY_POLICY_free(%struct.ocsp_resp_bytes_st* %a) #0 {
define dso_local %struct.ocsp_response_st* @d2i_PROXY_CERT_INFO_EXTENSION(%struct.ocsp_response_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_PROXY_CERT_INFO_EXTENSION(%struct.ocsp_response_st* %a, i8** %out) #0 {
define dso_local %struct.ocsp_response_st* @PROXY_CERT_INFO_EXTENSION_new() #0 {
define dso_local void @PROXY_CERT_INFO_EXTENSION_free(%struct.ocsp_response_st* %a) #0 {
define internal i32 @i2r_pci(%struct.v3_ext_method.14447* %method, %struct.ocsp_response_st* %pci, %struct.bio_st* %out, i32 %indent) #0 {
define internal %struct.ocsp_response_st* @r2i_pci(%struct.v3_ext_method.14447* %method, %struct.v3_ext_ctx* %ctx, i8* %value) #0 {
define internal i32 @process_pci_value(%struct.CONF_VALUE* %val, %struct.asn1_object_st** %language, %struct.asn1_string_st** %pathlen, %struct.asn1_string_st** %policy) #0 {
define dso_local void @policy_cache_free(%struct.X509_POLICY_CACHE_st* %cache) #0 {
define dso_local %struct.X509_POLICY_CACHE_st* @policy_cache_set(%struct.x509_st* %x) #0 {
define internal i32 @policy_cache_new(%struct.x509_st* %x) #0 {
define internal i32 @policy_cache_set_int(i64* %out, %struct.asn1_string_st* %value) #0 {
define internal i32 @policy_cache_create(%struct.x509_st* %x, %struct.stack_st_SSL_CIPHER* %policies, i32 %crit) #0 {
define internal i32 @policy_data_cmp(%struct.X509_POLICY_DATA_st** %a, %struct.X509_POLICY_DATA_st** %b) #0 {
define dso_local %struct.X509_POLICY_DATA_st* @policy_cache_find_data(%struct.X509_POLICY_CACHE_st* %cache, %struct.asn1_object_st* %id) #0 {
define dso_local void @policy_data_free(%struct.X509_POLICY_DATA_st* %data) #0 {
define dso_local %struct.X509_POLICY_DATA_st* @policy_data_new(%struct.Netscape_certificate_sequence* %policy, %struct.asn1_object_st* %cid, i32 %crit) #0 {
define dso_local i32 @policy_cache_set_mapping(%struct.x509_st* %x, %struct.stack_st_SSL_CIPHER* %maps) #0 {
define dso_local void @X509_policy_tree_free(%struct.X509_POLICY_TREE_st* %tree) #0 {
define internal void @exnode_free(%struct.X509_POLICY_NODE_st* %node) #0 {
define dso_local i32 @X509_policy_check(%struct.X509_POLICY_TREE_st** %ptree, i32* %pexplicit_policy, %struct.stack_st_SSL_CIPHER* %certs, %struct.stack_st_SSL_CIPHER* %policy_oids, i32 %flags) #0 {
define internal i32 @tree_init(%struct.X509_POLICY_TREE_st** %ptree, %struct.stack_st_SSL_CIPHER* %certs, i32 %flags) #0 {
define internal i32 @tree_evaluate(%struct.X509_POLICY_TREE_st* %tree) #0 {
define internal i32 @tree_calculate_authority_set(%struct.X509_POLICY_TREE_st* %tree, %struct.stack_st_SSL_CIPHER** %pnodes) #0 {
define internal i32 @tree_calculate_user_set(%struct.X509_POLICY_TREE_st* %tree, %struct.stack_st_SSL_CIPHER* %policy_oids, %struct.stack_st_SSL_CIPHER* %auth_nodes) #0 {
define internal i32 @tree_add_auth_node(%struct.stack_st_SSL_CIPHER** %pnodes, %struct.X509_POLICY_NODE_st* %pcy) #0 {
define internal i32 @tree_link_nodes(%struct.X509_POLICY_LEVEL_st* %curr, %struct.X509_POLICY_CACHE_st* %cache) #0 {
define internal i32 @tree_link_any(%struct.X509_POLICY_LEVEL_st* %curr, %struct.X509_POLICY_CACHE_st* %cache, %struct.X509_POLICY_TREE_st* %tree) #0 {
define internal i32 @tree_prune(%struct.X509_POLICY_TREE_st* %tree, %struct.X509_POLICY_LEVEL_st* %curr) #0 {
define internal i32 @tree_link_unmatched(%struct.X509_POLICY_LEVEL_st* %curr, %struct.X509_POLICY_CACHE_st* %cache, %struct.X509_POLICY_NODE_st* %node, %struct.X509_POLICY_TREE_st* %tree) #0 {
define internal i32 @tree_add_unmatched(%struct.X509_POLICY_LEVEL_st* %curr, %struct.X509_POLICY_CACHE_st* %cache, %struct.asn1_object_st* %id, %struct.X509_POLICY_NODE_st* %node, %struct.X509_POLICY_TREE_st* %tree) #0 {
define internal i32 @tree_link_matching_nodes(%struct.X509_POLICY_LEVEL_st* %curr, %struct.X509_POLICY_DATA_st* %data) #0 {
define dso_local i32 @X509_policy_tree_level_count(%struct.X509_POLICY_TREE_st* %tree) #0 {
define dso_local %struct.X509_POLICY_LEVEL_st* @X509_policy_tree_get0_level(%struct.X509_POLICY_TREE_st* %tree, i32 %i) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @X509_policy_tree_get0_policies(%struct.X509_POLICY_TREE_st* %tree) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @X509_policy_tree_get0_user_policies(%struct.X509_POLICY_TREE_st* %tree) #0 {
define dso_local i32 @X509_policy_level_node_count(%struct.X509_POLICY_LEVEL_st* %level) #0 {
define dso_local %struct.X509_POLICY_NODE_st* @X509_policy_level_get0_node(%struct.X509_POLICY_LEVEL_st* %level, i32 %i) #0 {
define dso_local %struct.asn1_object_st* @X509_policy_node_get0_policy(%struct.X509_POLICY_NODE_st* %node) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @X509_policy_node_get0_qualifiers(%struct.X509_POLICY_NODE_st* %node) #0 {
define dso_local %struct.X509_POLICY_NODE_st* @X509_policy_node_get0_parent(%struct.X509_POLICY_NODE_st* %node) #0 {
define internal void @SCT_LIST_free(%struct.stack_st_SSL_CIPHER* %a) #0 {
define internal %struct.stack_st_SSL_CIPHER* @d2i_SCT_LIST(%struct.stack_st_SSL_CIPHER** %a, i8** %pp, i64 %length) #0 {
define internal i32 @i2r_SCT_LIST(%struct.v3_ext_method.14599* %method, %struct.stack_st_SSL_CIPHER* %sct_list, %struct.bio_st* %out, i32 %indent) #0 {
define internal void @timestamp_print(%struct.bio_st* %out, i64 %timestamp) #0 {
define internal void @tls12_signature_print(%struct.bio_st* %out, i8 zeroext %hash_alg, i8 zeroext %sig_alg) #0 {
define internal void @SCT_free(%struct.SCT_st* %sct) #0 {
define dso_local void @ERR_load_CONF_strings() #0 {
define dso_local i32 @CONF_modules_load(%struct.conf_st* %cnf, i8* %appname, i64 %flags) #0 {
define internal i32 @module_run(%struct.conf_st* %cnf, i8* %name, i8* %value, i64 %flags) #0 {
define internal %struct.conf_module_st* @module_find(i8* %name) #0 {
define internal %struct.conf_module_st* @module_load_dso(%struct.conf_st* %cnf, i8* %name, i8* %value, i64 %flags) #0 {
define internal i32 @module_init(%struct.conf_module_st* %pmod, i8* %name, i8* %value, %struct.conf_st* %cnf) #0 {
define internal %struct.conf_module_st* @module_add(%struct.dso_st* %dso, i8* %name, i32 (%struct.conf_imodule_st*, %struct.conf_st*)* %ifunc, void (%struct.conf_imodule_st*)* %ffunc) #0 {
define dso_local i32 @CONF_modules_load_file(i8* %filename, i8* %appname, i64 %flags) #0 {
define dso_local i8* @CONF_get1_default_config_file() #0 {
define dso_local void @CONF_modules_unload(i32 %all) #0 {
define dso_local void @CONF_modules_finish() #0 {
define internal void @module_free(%struct.conf_module_st* %md) #0 {
define internal void @module_finish(%struct.conf_imodule_st* %imod) #0 {
define dso_local i32 @CONF_module_add(i8* %name, i32 (%struct.conf_imodule_st*, %struct.conf_st*)* %ifunc, void (%struct.conf_imodule_st*)* %ffunc) #0 {
define dso_local void @CONF_modules_free() #0 {
define dso_local i8* @CONF_imodule_get_name(%struct.conf_imodule_st* %md) #0 {
define dso_local i8* @CONF_imodule_get_value(%struct.conf_imodule_st* %md) #0 {
define dso_local i8* @CONF_imodule_get_usr_data(%struct.conf_imodule_st* %md) #0 {
define dso_local void @CONF_imodule_set_usr_data(%struct.conf_imodule_st* %md, i8* %usr_data) #0 {
define dso_local %struct.conf_module_st* @CONF_imodule_get_module(%struct.conf_imodule_st* %md) #0 {
define dso_local i64 @CONF_imodule_get_flags(%struct.conf_imodule_st* %md) #0 {
define dso_local void @CONF_imodule_set_flags(%struct.conf_imodule_st* %md, i64 %flags) #0 {
define dso_local i8* @CONF_module_get_usr_data(%struct.conf_module_st* %pmod) #0 {
define dso_local void @CONF_module_set_usr_data(%struct.conf_module_st* %pmod, i8* %usr_data) #0 {
define dso_local i32 @CONF_parse_list(i8* %list_, i32 %sep, i32 %nospc, i32 (i8*, i32, i8*)* %list_cb, i8* %arg) #0 {
define dso_local void @OPENSSL_config(i8* %config_name) #0 {
define dso_local void @OPENSSL_no_config() #0 {
define dso_local %struct.pkcs7_st* @d2i_PKCS7(%struct.pkcs7_st** %a, i8** %in, i64 %len) #0 {
define internal i32 @pk7_cb(i32 %operation, %struct.ASN1_VALUE_st** %pval, %struct.ASN1_ITEM_st* %it, i8* %exarg) #0 {
define internal i32 @si_cb(i32 %operation, %struct.ASN1_VALUE_st** %pval, %struct.ASN1_ITEM_st* %it, i8* %exarg) #0 {
define internal i32 @ri_cb(i32 %operation, %struct.ASN1_VALUE_st** %pval, %struct.ASN1_ITEM_st* %it, i8* %exarg) #0 {
define dso_local i32 @i2d_PKCS7(%struct.pkcs7_st* %a, i8** %out) #0 {
define dso_local %struct.pkcs7_st* @PKCS7_new() #0 {
define dso_local void @PKCS7_free(%struct.pkcs7_st* %a) #0 {
define dso_local i32 @i2d_PKCS7_NDEF(%struct.pkcs7_st* %a, i8** %out) #0 {
define dso_local %struct.pkcs7_st* @PKCS7_dup(%struct.pkcs7_st* %x) #0 {
define dso_local %struct.pkcs7_signed_st* @d2i_PKCS7_SIGNED(%struct.pkcs7_signed_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_PKCS7_SIGNED(%struct.pkcs7_signed_st* %a, i8** %out) #0 {
define dso_local %struct.pkcs7_signed_st* @PKCS7_SIGNED_new() #0 {
define dso_local void @PKCS7_SIGNED_free(%struct.pkcs7_signed_st* %a) #0 {
define dso_local %struct.pkcs7_signer_info_st* @d2i_PKCS7_SIGNER_INFO(%struct.pkcs7_signer_info_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_PKCS7_SIGNER_INFO(%struct.pkcs7_signer_info_st* %a, i8** %out) #0 {
define dso_local %struct.pkcs7_signer_info_st* @PKCS7_SIGNER_INFO_new() #0 {
define dso_local void @PKCS7_SIGNER_INFO_free(%struct.pkcs7_signer_info_st* %a) #0 {
define dso_local %struct.pkcs7_issuer_and_serial_st* @d2i_PKCS7_ISSUER_AND_SERIAL(%struct.pkcs7_issuer_and_serial_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_PKCS7_ISSUER_AND_SERIAL(%struct.pkcs7_issuer_and_serial_st* %a, i8** %out) #0 {
define dso_local %struct.pkcs7_issuer_and_serial_st* @PKCS7_ISSUER_AND_SERIAL_new() #0 {
define dso_local void @PKCS7_ISSUER_AND_SERIAL_free(%struct.pkcs7_issuer_and_serial_st* %a) #0 {
define dso_local %struct.pkcs7_enveloped_st* @d2i_PKCS7_ENVELOPE(%struct.pkcs7_enveloped_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_PKCS7_ENVELOPE(%struct.pkcs7_enveloped_st* %a, i8** %out) #0 {
define dso_local %struct.pkcs7_enveloped_st* @PKCS7_ENVELOPE_new() #0 {
define dso_local void @PKCS7_ENVELOPE_free(%struct.pkcs7_enveloped_st* %a) #0 {
define dso_local %struct.pkcs7_recip_info_st* @d2i_PKCS7_RECIP_INFO(%struct.pkcs7_recip_info_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_PKCS7_RECIP_INFO(%struct.pkcs7_recip_info_st* %a, i8** %out) #0 {
define dso_local %struct.pkcs7_recip_info_st* @PKCS7_RECIP_INFO_new() #0 {
define dso_local void @PKCS7_RECIP_INFO_free(%struct.pkcs7_recip_info_st* %a) #0 {
define dso_local %struct.pkcs7_enc_content_st* @d2i_PKCS7_ENC_CONTENT(%struct.pkcs7_enc_content_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_PKCS7_ENC_CONTENT(%struct.pkcs7_enc_content_st* %a, i8** %out) #0 {
define dso_local %struct.pkcs7_enc_content_st* @PKCS7_ENC_CONTENT_new() #0 {
define dso_local void @PKCS7_ENC_CONTENT_free(%struct.pkcs7_enc_content_st* %a) #0 {
define dso_local %struct.pkcs7_signedandenveloped_st* @d2i_PKCS7_SIGN_ENVELOPE(%struct.pkcs7_signedandenveloped_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_PKCS7_SIGN_ENVELOPE(%struct.pkcs7_signedandenveloped_st* %a, i8** %out) #0 {
define dso_local %struct.pkcs7_signedandenveloped_st* @PKCS7_SIGN_ENVELOPE_new() #0 {
define dso_local void @PKCS7_SIGN_ENVELOPE_free(%struct.pkcs7_signedandenveloped_st* %a) #0 {
define dso_local %struct.pkcs7_encrypted_st* @d2i_PKCS7_ENCRYPT(%struct.pkcs7_encrypted_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_PKCS7_ENCRYPT(%struct.pkcs7_encrypted_st* %a, i8** %out) #0 {
define dso_local %struct.pkcs7_encrypted_st* @PKCS7_ENCRYPT_new() #0 {
define dso_local void @PKCS7_ENCRYPT_free(%struct.pkcs7_encrypted_st* %a) #0 {
define dso_local %struct.pkcs7_digest_st* @d2i_PKCS7_DIGEST(%struct.pkcs7_digest_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_PKCS7_DIGEST(%struct.pkcs7_digest_st* %a, i8** %out) #0 {
define dso_local %struct.pkcs7_digest_st* @PKCS7_DIGEST_new() #0 {
define dso_local void @PKCS7_DIGEST_free(%struct.pkcs7_digest_st* %a) #0 {
define dso_local i32 @PKCS7_print_ctx(%struct.bio_st* %out, %struct.pkcs7_st* %x, i32 %indent, %struct.asn1_pctx_st* %pctx) #0 {
define dso_local i64 @PKCS7_ctrl(%struct.pkcs7_st* %p7, i32 %cmd, i64 %larg, i8* %parg) #0 {
define dso_local i32 @PKCS7_content_new(%struct.pkcs7_st* %p7, i32 %type) #0 {
define dso_local i32 @PKCS7_set_type(%struct.pkcs7_st* %p7, i32 %type) #0 {
define dso_local i32 @PKCS7_set_content(%struct.pkcs7_st* %p7, %struct.pkcs7_st* %p7_data) #0 {
define dso_local i32 @PKCS7_set0_type_other(%struct.pkcs7_st* %p7, i32 %type, %struct.asn1_type_st* %other) #0 {
define dso_local i32 @PKCS7_add_signer(%struct.pkcs7_st* %p7, %struct.pkcs7_signer_info_st* %psi) #0 {
define dso_local i32 @PKCS7_add_certificate(%struct.pkcs7_st* %p7, %struct.x509_st.14640* %x509) #0 {
define dso_local i32 @PKCS7_add_crl(%struct.pkcs7_st* %p7, %struct.X509_crl_st* %crl) #0 {
define dso_local i32 @PKCS7_SIGNER_INFO_set(%struct.pkcs7_signer_info_st* %p7i, %struct.x509_st.14640* %x509, %struct.evp_pkey_st.12512* %pkey, %struct.env_md_st* %dgst) #0 {
define dso_local %struct.pkcs7_signer_info_st* @PKCS7_add_signature(%struct.pkcs7_st* %p7, %struct.x509_st.14640* %x509, %struct.evp_pkey_st.12512* %pkey, %struct.env_md_st* %dgst) #0 {
define dso_local i32 @PKCS7_set_digest(%struct.pkcs7_st* %p7, %struct.env_md_st* %md) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @PKCS7_get_signer_info(%struct.pkcs7_st* %p7) #0 {
define dso_local void @PKCS7_SIGNER_INFO_get0_algs(%struct.pkcs7_signer_info_st* %si, %struct.evp_pkey_st.12512** %pk, %struct.X509_algor_st** %pdig, %struct.X509_algor_st** %psig) #0 {
define dso_local void @PKCS7_RECIP_INFO_get0_alg(%struct.pkcs7_recip_info_st* %ri, %struct.X509_algor_st** %penc) #0 {
define dso_local %struct.pkcs7_recip_info_st* @PKCS7_add_recipient(%struct.pkcs7_st* %p7, %struct.x509_st.14640* %x509) #0 {
define dso_local i32 @PKCS7_RECIP_INFO_set(%struct.pkcs7_recip_info_st* %p7i, %struct.x509_st.14640* %x509) #0 {
define dso_local i32 @PKCS7_add_recipient_info(%struct.pkcs7_st* %p7, %struct.pkcs7_recip_info_st* %ri) #0 {
define dso_local %struct.x509_st.14640* @PKCS7_cert_from_signer_info(%struct.pkcs7_st* %p7, %struct.pkcs7_signer_info_st* %si) #0 {
define dso_local i32 @PKCS7_set_cipher(%struct.pkcs7_st* %p7, %struct.evp_cipher_st* %cipher) #0 {
define dso_local i32 @PKCS7_stream(i8*** %boundary, %struct.pkcs7_st* %p7) #0 {
define dso_local void @ERR_load_PKCS7_strings() #0 {
define dso_local %struct.bio_st* @PKCS7_dataInit(%struct.pkcs7_st* %p7, %struct.bio_st* %bio) #0 {
define internal %struct.asn1_string_st* @PKCS7_get_octet_string(%struct.pkcs7_st* %p7) #0 {
define internal i32 @PKCS7_bio_add_digest(%struct.bio_st** %pbio, %struct.X509_algor_st* %alg) #0 {
define internal i32 @pkcs7_encode_rinfo(%struct.pkcs7_recip_info_st.14727* %ri, i8* %key, i32 %keylen) #0 {
define internal i32 @PKCS7_type_is_other(%struct.pkcs7_st* %p7) #0 {
define dso_local %struct.bio_st* @PKCS7_dataDecode(%struct.pkcs7_st* %p7, %struct.evp_pkey_st.12512* %pkey, %struct.bio_st* %in_bio, %struct.x509_st.14726* %pcert) #0 {
define internal i32 @pkcs7_cmp_ri(%struct.pkcs7_recip_info_st.14727* %ri, %struct.x509_st.14726* %pcert) #0 {
define internal i32 @pkcs7_decrypt_rinfo(i8** %pek, i32* %peklen, %struct.pkcs7_recip_info_st.14727* %ri, %struct.evp_pkey_st.12512* %pkey) #0 {
define dso_local i32 @PKCS7_dataFinal(%struct.pkcs7_st* %p7, %struct.bio_st* %bio) #0 {
define internal %struct.bio_st* @PKCS7_find_digest(%struct.env_md_ctx_st** %pmd, %struct.bio_st* %bio, i32 %nid) #0 {
define internal i32 @do_pkcs7_signed_attrib(%struct.pkcs7_signer_info_st* %si, %struct.env_md_ctx_st* %mctx) #0 {
define dso_local %struct.asn1_type_st* @PKCS7_get_signed_attribute(%struct.pkcs7_signer_info_st* %si, i32 %nid) #0 {
define dso_local i32 @PKCS7_SIGNER_INFO_sign(%struct.pkcs7_signer_info_st* %si) #0 {
define internal %struct.asn1_type_st* @get_attribute(%struct.stack_st_SSL_CIPHER* %sk, i32 %nid) #0 {
define dso_local i32 @PKCS7_dataVerify(%struct.x509_store_st.14744* %cert_store, %struct.x509_store_ctx_st.14743* %ctx, %struct.bio_st* %bio, %struct.pkcs7_st* %p7, %struct.pkcs7_signer_info_st* %si) #0 {
define dso_local i32 @PKCS7_signatureVerify(%struct.bio_st* %bio, %struct.pkcs7_st* %p7, %struct.pkcs7_signer_info_st* %si, %struct.x509_st.14726* %x509) #0 {
define dso_local %struct.asn1_string_st* @PKCS7_digest_from_attributes(%struct.stack_st_SSL_CIPHER* %sk) #0 {
define dso_local %struct.pkcs7_issuer_and_serial_st* @PKCS7_get_issuer_and_serial(%struct.pkcs7_st* %p7, i32 %idx) #0 {
define dso_local %struct.asn1_type_st* @PKCS7_get_attribute(%struct.pkcs7_signer_info_st* %si, i32 %nid) #0 {
define dso_local i32 @PKCS7_set_signed_attributes(%struct.pkcs7_signer_info_st* %p7si, %struct.stack_st_SSL_CIPHER* %sk) #0 {
define dso_local i32 @PKCS7_set_attributes(%struct.pkcs7_signer_info_st* %p7si, %struct.stack_st_SSL_CIPHER* %sk) #0 {
define dso_local i32 @PKCS7_add_signed_attribute(%struct.pkcs7_signer_info_st* %p7si, i32 %nid, i32 %atrtype, i8* %value) #0 {
define internal i32 @add_attribute(%struct.stack_st_SSL_CIPHER** %sk, i32 %nid, i32 %atrtype, i8* %value) #0 {
define dso_local i32 @PKCS7_add_attribute(%struct.pkcs7_signer_info_st* %p7si, i32 %nid, i32 %atrtype, i8* %value) #0 {
define dso_local i32 @PKCS7_add_attrib_smimecap(%struct.pkcs7_signer_info_st* %si, %struct.stack_st_SSL_CIPHER* %cap) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @PKCS7_get_smimecap(%struct.pkcs7_signer_info_st* %si) #0 {
define dso_local i32 @PKCS7_simple_smimecap(%struct.stack_st_SSL_CIPHER* %sk, i32 %nid, i32 %arg) #0 {
define dso_local i32 @PKCS7_add_attrib_content_type(%struct.pkcs7_signer_info_st* %si, %struct.asn1_object_st* %coid) #0 {
define dso_local i32 @PKCS7_add0_attrib_signing_time(%struct.pkcs7_signer_info_st* %si, %struct.asn1_string_st* %t) #0 {
define dso_local i32 @PKCS7_add1_attrib_digest(%struct.pkcs7_signer_info_st* %si, i8* %md, i32 %mdlen) #0 {
define dso_local void @PKCS12_PBE_add() #0 {
define dso_local i32 @PKCS12_PBE_keyivgen(%struct.evp_cipher_ctx_st* %ctx, i8* %pass, i32 %passlen, %struct.asn1_type_st* %param, %struct.evp_cipher_st* %cipher, %struct.env_md_st* %md, i32 %en_de) #0 {
define dso_local i32 @PKCS12_key_gen_asc(i8* %pass, i32 %passlen, i8* %salt, i32 %saltlen, i32 %id, i32 %iter, i32 %n, i8* %out, %struct.env_md_st* %md_type) #0 {
define dso_local i32 @PKCS12_key_gen_uni(i8* %pass, i32 %passlen, i8* %salt, i32 %saltlen, i32 %id, i32 %iter, i32 %n, i8* %out, %struct.env_md_st* %md_type) #0 {
define dso_local i8* @OPENSSL_asc2uni(i8* %asc, i32 %asclen, i8** %uni, i32* %unilen) #0 {
define dso_local i8* @OPENSSL_uni2asc(i8* %uni, i32 %unilen) #0 {
define dso_local i32 @i2d_PKCS12_bio(%struct.bio_st* %bp, %struct.PKCS12* %p12) #0 {
define dso_local i32 @i2d_PKCS12_fp(%struct._IO_FILE* %fp, %struct.PKCS12* %p12) #0 {
define dso_local %struct.PKCS12* @d2i_PKCS12_bio(%struct.bio_st* %bp, %struct.PKCS12** %p12) #0 {
define dso_local %struct.PKCS12* @d2i_PKCS12_fp(%struct._IO_FILE* %fp, %struct.PKCS12** %p12) #0 {
define dso_local %struct.PKCS12_SAFEBAG* @PKCS12_x5092certbag(%struct.x509_st* %x509) #0 {
define dso_local %struct.PKCS12_SAFEBAG* @PKCS12_x509crl2certbag(%struct.X509_crl_st* %crl) #0 {
define dso_local %struct.x509_st* @PKCS12_certbag2x509(%struct.PKCS12_SAFEBAG* %bag) #0 {
define dso_local %struct.X509_crl_st* @PKCS12_certbag2x509crl(%struct.PKCS12_SAFEBAG* %bag) #0 {
define dso_local void @ERR_load_PKCS12_strings() #0 {
define dso_local %struct.pkcs8_priv_key_info_st* @PKCS8_decrypt(%struct.X509_sig_st* %p8, i8* %pass, i32 %passlen) #0 {
define dso_local %struct.comp_ctx_st* @COMP_CTX_new(%struct.comp_method_st* %meth) #0 {
define dso_local void @COMP_CTX_free(%struct.comp_ctx_st* %ctx) #0 {
define dso_local i32 @COMP_compress_block(%struct.comp_ctx_st* %ctx, i8* %out, i32 %olen, i8* %in, i32 %ilen) #0 {
define dso_local i32 @COMP_expand_block(%struct.comp_ctx_st* %ctx, i8* %out, i32 %olen, i8* %in, i32 %ilen) #0 {
define dso_local void @ERR_load_COMP_strings() #0 {
define dso_local %struct.comp_method_st* @COMP_zlib() #0 {
define dso_local void @COMP_zlib_cleanup() #0 {
define dso_local %struct.ocsp_signature_st* @d2i_OCSP_SIGNATURE(%struct.ocsp_signature_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_OCSP_SIGNATURE(%struct.ocsp_signature_st* %a, i8** %out) #0 {
define dso_local %struct.ocsp_signature_st* @OCSP_SIGNATURE_new() #0 {
define dso_local void @OCSP_SIGNATURE_free(%struct.ocsp_signature_st* %a) #0 {
define dso_local %struct.ocsp_cert_id_st* @d2i_OCSP_CERTID(%struct.ocsp_cert_id_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_OCSP_CERTID(%struct.ocsp_cert_id_st* %a, i8** %out) #0 {
define dso_local %struct.ocsp_cert_id_st* @OCSP_CERTID_new() #0 {
define dso_local void @OCSP_CERTID_free(%struct.ocsp_cert_id_st* %a) #0 {
define dso_local %struct.ocsp_one_request_st* @d2i_OCSP_ONEREQ(%struct.ocsp_one_request_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_OCSP_ONEREQ(%struct.ocsp_one_request_st* %a, i8** %out) #0 {
define dso_local %struct.ocsp_one_request_st* @OCSP_ONEREQ_new() #0 {
define dso_local void @OCSP_ONEREQ_free(%struct.ocsp_one_request_st* %a) #0 {
define dso_local %struct.ocsp_req_info_st* @d2i_OCSP_REQINFO(%struct.ocsp_req_info_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_OCSP_REQINFO(%struct.ocsp_req_info_st* %a, i8** %out) #0 {
define dso_local %struct.ocsp_req_info_st* @OCSP_REQINFO_new() #0 {
define dso_local void @OCSP_REQINFO_free(%struct.ocsp_req_info_st* %a) #0 {
define dso_local %struct.ocsp_request_st* @d2i_OCSP_REQUEST(%struct.ocsp_request_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_OCSP_REQUEST(%struct.ocsp_request_st* %a, i8** %out) #0 {
define dso_local %struct.ocsp_request_st* @OCSP_REQUEST_new() #0 {
define dso_local void @OCSP_REQUEST_free(%struct.ocsp_request_st* %a) #0 {
define dso_local %struct.ocsp_resp_bytes_st* @d2i_OCSP_RESPBYTES(%struct.ocsp_resp_bytes_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_OCSP_RESPBYTES(%struct.ocsp_resp_bytes_st* %a, i8** %out) #0 {
define dso_local %struct.ocsp_resp_bytes_st* @OCSP_RESPBYTES_new() #0 {
define dso_local void @OCSP_RESPBYTES_free(%struct.ocsp_resp_bytes_st* %a) #0 {
define dso_local %struct.ocsp_response_st* @d2i_OCSP_RESPONSE(%struct.ocsp_response_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_OCSP_RESPONSE(%struct.ocsp_response_st* %a, i8** %out) #0 {
define dso_local %struct.ocsp_response_st* @OCSP_RESPONSE_new() #0 {
define dso_local void @OCSP_RESPONSE_free(%struct.ocsp_response_st* %a) #0 {
define dso_local %struct.ocsp_responder_id_st* @d2i_OCSP_RESPID(%struct.ocsp_responder_id_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_OCSP_RESPID(%struct.ocsp_responder_id_st* %a, i8** %out) #0 {
define dso_local %struct.ocsp_responder_id_st* @OCSP_RESPID_new() #0 {
define dso_local void @OCSP_RESPID_free(%struct.ocsp_responder_id_st* %a) #0 {
define dso_local %struct.X509_val_st* @d2i_OCSP_REVOKEDINFO(%struct.X509_val_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_OCSP_REVOKEDINFO(%struct.X509_val_st* %a, i8** %out) #0 {
define dso_local %struct.X509_val_st* @OCSP_REVOKEDINFO_new() #0 {
define dso_local void @OCSP_REVOKEDINFO_free(%struct.X509_val_st* %a) #0 {
define dso_local %struct.ocsp_cert_status_st* @d2i_OCSP_CERTSTATUS(%struct.ocsp_cert_status_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_OCSP_CERTSTATUS(%struct.ocsp_cert_status_st* %a, i8** %out) #0 {
define dso_local %struct.ocsp_cert_status_st* @OCSP_CERTSTATUS_new() #0 {
define dso_local void @OCSP_CERTSTATUS_free(%struct.ocsp_cert_status_st* %a) #0 {
define dso_local %struct.ocsp_single_response_st* @d2i_OCSP_SINGLERESP(%struct.ocsp_single_response_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_OCSP_SINGLERESP(%struct.ocsp_single_response_st* %a, i8** %out) #0 {
define dso_local %struct.ocsp_single_response_st* @OCSP_SINGLERESP_new() #0 {
define dso_local void @OCSP_SINGLERESP_free(%struct.ocsp_single_response_st* %a) #0 {
define dso_local %struct.ocsp_response_data_st* @d2i_OCSP_RESPDATA(%struct.ocsp_response_data_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_OCSP_RESPDATA(%struct.ocsp_response_data_st* %a, i8** %out) #0 {
define dso_local %struct.ocsp_response_data_st* @OCSP_RESPDATA_new() #0 {
define dso_local void @OCSP_RESPDATA_free(%struct.ocsp_response_data_st* %a) #0 {
define dso_local %struct.ocsp_basic_response_st* @d2i_OCSP_BASICRESP(%struct.ocsp_basic_response_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_OCSP_BASICRESP(%struct.ocsp_basic_response_st* %a, i8** %out) #0 {
define dso_local %struct.ocsp_basic_response_st* @OCSP_BASICRESP_new() #0 {
define dso_local void @OCSP_BASICRESP_free(%struct.ocsp_basic_response_st* %a) #0 {
define dso_local %struct.ocsp_crl_id_st* @d2i_OCSP_CRLID(%struct.ocsp_crl_id_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_OCSP_CRLID(%struct.ocsp_crl_id_st* %a, i8** %out) #0 {
define dso_local %struct.ocsp_crl_id_st* @OCSP_CRLID_new() #0 {
define dso_local void @OCSP_CRLID_free(%struct.ocsp_crl_id_st* %a) #0 {
define dso_local %struct.ocsp_service_locator_st* @d2i_OCSP_SERVICELOC(%struct.ocsp_service_locator_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_OCSP_SERVICELOC(%struct.ocsp_service_locator_st* %a, i8** %out) #0 {
define dso_local %struct.ocsp_service_locator_st* @OCSP_SERVICELOC_new() #0 {
define dso_local void @OCSP_SERVICELOC_free(%struct.ocsp_service_locator_st* %a) #0 {
define dso_local %struct.ocsp_req_ctx_st* @OCSP_REQ_CTX_new(%struct.bio_st* %io, i32 %maxline) #0 {
define dso_local void @OCSP_REQ_CTX_free(%struct.ocsp_req_ctx_st* %rctx) #0 {
define dso_local %struct.bio_st* @OCSP_REQ_CTX_get0_mem_bio(%struct.ocsp_req_ctx_st* %rctx) #0 {
define dso_local void @OCSP_set_max_response_length(%struct.ocsp_req_ctx_st* %rctx, i64 %len) #0 {
define dso_local i32 @OCSP_REQ_CTX_i2d(%struct.ocsp_req_ctx_st* %rctx, %struct.ASN1_ITEM_st* %it, %struct.ASN1_VALUE_st* %val) #0 {
define dso_local i32 @OCSP_REQ_CTX_nbio_d2i(%struct.ocsp_req_ctx_st* %rctx, %struct.ASN1_VALUE_st** %pval, %struct.ASN1_ITEM_st* %it) #0 {
define dso_local i32 @OCSP_REQ_CTX_nbio(%struct.ocsp_req_ctx_st* %rctx) #0 {
define internal i32 @parse_http_line1(i8* %line) #0 {
define dso_local i32 @OCSP_REQ_CTX_http(%struct.ocsp_req_ctx_st* %rctx, i8* %op, i8* %path) #0 {
define dso_local i32 @OCSP_REQ_CTX_set1_req(%struct.ocsp_req_ctx_st* %rctx, %struct.ocsp_request_st* %req) #0 {
define dso_local i32 @OCSP_REQ_CTX_add1_header(%struct.ocsp_req_ctx_st* %rctx, i8* %name, i8* %value) #0 {
define dso_local %struct.ocsp_req_ctx_st* @OCSP_sendreq_new(%struct.bio_st* %io, i8* %path, %struct.ocsp_request_st* %req, i32 %maxline) #0 {
define dso_local i32 @OCSP_sendreq_nbio(%struct.ocsp_response_st** %presp, %struct.ocsp_req_ctx_st* %rctx) #0 {
define dso_local %struct.ocsp_response_st* @OCSP_sendreq_bio(%struct.bio_st* %b, i8* %path, %struct.ocsp_request_st* %req) #0 {
define dso_local %struct.ocsp_cert_id_st* @OCSP_cert_to_id(%struct.env_md_st* %dgst, %struct.x509_st* %subject, %struct.x509_st* %issuer) #0 {
define dso_local %struct.ocsp_cert_id_st* @OCSP_cert_id_new(%struct.env_md_st* %dgst, %struct.X509_name_st* %issuerName, %struct.asn1_string_st* %issuerKey, %struct.asn1_string_st* %serialNumber) #0 {
define dso_local i32 @OCSP_id_issuer_cmp(%struct.ocsp_cert_id_st* %a, %struct.ocsp_cert_id_st* %b) #0 {
define dso_local i32 @OCSP_id_cmp(%struct.ocsp_cert_id_st* %a, %struct.ocsp_cert_id_st* %b) #0 {
define dso_local i32 @OCSP_parse_url(i8* %url, i8** %phost, i8** %pport, i8** %ppath, i32* %pssl) #0 {
define dso_local %struct.ocsp_cert_id_st* @OCSP_CERTID_dup(%struct.ocsp_cert_id_st* %x) #0 {
define dso_local %struct.ocsp_one_request_st* @OCSP_request_add0_id(%struct.ocsp_request_st* %req, %struct.ocsp_cert_id_st* %cid) #0 {
define dso_local i32 @OCSP_request_set1_name(%struct.ocsp_request_st* %req, %struct.X509_name_st* %nm) #0 {
define dso_local i32 @OCSP_request_add1_cert(%struct.ocsp_request_st* %req, %struct.x509_st* %cert) #0 {
define dso_local i32 @OCSP_request_sign(%struct.ocsp_request_st* %req, %struct.x509_st* %signer, %struct.evp_pkey_st* %key, %struct.env_md_st* %dgst, %struct.stack_st_SSL_CIPHER* %certs, i64 %flags) #0 {
define dso_local i32 @OCSP_response_status(%struct.ocsp_response_st* %resp) #0 {
define dso_local %struct.ocsp_basic_response_st* @OCSP_response_get1_basic(%struct.ocsp_response_st* %resp) #0 {
define dso_local i32 @OCSP_resp_count(%struct.ocsp_basic_response_st* %bs) #0 {
define dso_local %struct.ocsp_single_response_st* @OCSP_resp_get0(%struct.ocsp_basic_response_st* %bs, i32 %idx) #0 {
define dso_local i32 @OCSP_resp_find(%struct.ocsp_basic_response_st* %bs, %struct.ocsp_cert_id_st* %id, i32 %last) #0 {
define dso_local i32 @OCSP_single_get0_status(%struct.ocsp_single_response_st* %single, i32* %reason, %struct.asn1_string_st** %revtime, %struct.asn1_string_st** %thisupd, %struct.asn1_string_st** %nextupd) #0 {
define dso_local i32 @OCSP_resp_find_status(%struct.ocsp_basic_response_st* %bs, %struct.ocsp_cert_id_st* %id, i32* %status, i32* %reason, %struct.asn1_string_st** %revtime, %struct.asn1_string_st** %thisupd, %struct.asn1_string_st** %nextupd) #0 {
define dso_local i32 @OCSP_check_validity(%struct.asn1_string_st* %thisupd, %struct.asn1_string_st* %nextupd, i64 %nsec, i64 %maxsec) #0 {
define dso_local i8* @OCSP_response_status_str(i64 %s) #0 {
define internal i8* @table2string(i64 %s, %struct.ngx_str_t* %ts, i32 %len) #0 {
define dso_local i8* @OCSP_cert_status_str(i64 %s) #0 {
define dso_local i8* @OCSP_crl_reason_str(i64 %s) #0 {
define dso_local i32 @OCSP_REQUEST_print(%struct.bio_st* %bp, %struct.ocsp_request_st* %o, i64 %flags) #0 {
define internal i32 @ocsp_certid_print(%struct.bio_st* %bp, %struct.ocsp_cert_id_st* %a, i32 %indent) #0 {
define dso_local i32 @OCSP_RESPONSE_print(%struct.bio_st* %bp, %struct.ocsp_response_st* %o, i64 %flags) #0 {
define dso_local i32 @OCSP_basic_verify(%struct.ocsp_basic_response_st* %bs, %struct.stack_st_SSL_CIPHER* %certs, %struct.x509_store_st* %st, i64 %flags) #0 {
define internal i32 @ocsp_find_signer(%struct.x509_st** %psigner, %struct.ocsp_basic_response_st* %bs, %struct.stack_st_SSL_CIPHER* %certs, %struct.x509_store_st* %st, i64 %flags) #0 {
define internal i32 @ocsp_check_issuer(%struct.ocsp_basic_response_st* %bs, %struct.stack_st_SSL_CIPHER* %chain, i64 %flags) #0 {
define internal i32 @ocsp_check_ids(%struct.stack_st_SSL_CIPHER* %sresp, %struct.ocsp_cert_id_st** %ret) #0 {
define internal i32 @ocsp_match_issuerid(%struct.x509_st* %cert, %struct.ocsp_cert_id_st* %cid, %struct.stack_st_SSL_CIPHER* %sresp) #0 {
define internal i32 @ocsp_check_delegated(%struct.x509_st* %x, i32 %flags) #0 {
define internal %struct.x509_st* @ocsp_find_signer_sk(%struct.stack_st_SSL_CIPHER* %certs, %struct.ocsp_responder_id_st* %id) #0 {
define dso_local i32 @OCSP_request_verify(%struct.ocsp_request_st* %req, %struct.stack_st_SSL_CIPHER* %certs, %struct.x509_store_st* %store, i64 %flags) #0 {
define internal i32 @ocsp_req_find_signer(%struct.x509_st** %psigner, %struct.ocsp_request_st* %req, %struct.X509_name_st* %nm, %struct.stack_st_SSL_CIPHER* %certs, %struct.x509_store_st* %st, i64 %flags) #0 {
define dso_local void @ERR_load_OCSP_strings() #0 {
define dso_local void @ERR_load_UI_strings() #0 {
define dso_local void @ERR_load_CMS_strings() #0 {
define dso_local %struct.CMS_EnvelopedData_st* @cms_get0_enveloped(%struct.POLICYQUALINFO_st* %cms) #0 {
define dso_local i32 @cms_env_asn1_ctrl(%struct.CMS_RecipientInfo_st* %ri, i32 %cmd) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @CMS_get0_RecipientInfos(%struct.POLICYQUALINFO_st* %cms) #0 {
define dso_local i32 @CMS_RecipientInfo_type(%struct.CMS_RecipientInfo_st* %ri) #0 {
define dso_local %struct.evp_pkey_ctx_st.12607* @CMS_RecipientInfo_get0_pkey_ctx(%struct.CMS_RecipientInfo_st* %ri) #0 {
define dso_local %struct.POLICYQUALINFO_st* @CMS_EnvelopedData_create(%struct.evp_cipher_st.15059* %cipher) #0 {
define internal %struct.CMS_EnvelopedData_st* @cms_enveloped_data_init(%struct.POLICYQUALINFO_st* %cms) #0 {
define dso_local %struct.CMS_RecipientInfo_st* @CMS_add1_recipient_cert(%struct.POLICYQUALINFO_st* %cms, %struct.x509_st.15085* %recip, i32 %flags) #0 {
define dso_local i32 @cms_pkey_get_ri_type(%struct.evp_pkey_st.12606* %pk) #0 {
define internal i32 @cms_RecipientInfo_ktri_init(%struct.CMS_RecipientInfo_st* %ri, %struct.x509_st.15085* %recip, %struct.evp_pkey_st.12606* %pk, i32 %flags) #0 {
define dso_local i32 @CMS_RecipientInfo_ktri_get0_algs(%struct.CMS_RecipientInfo_st* %ri, %struct.evp_pkey_st.12606** %pk, %struct.x509_st.15085** %recip, %struct.X509_algor_st** %palg) #0 {
define dso_local i32 @CMS_RecipientInfo_ktri_get0_signer_id(%struct.CMS_RecipientInfo_st* %ri, %struct.asn1_string_st** %keyid, %struct.X509_name_st** %issuer, %struct.asn1_string_st** %sno) #0 {
define dso_local i32 @CMS_RecipientInfo_ktri_cert_cmp(%struct.CMS_RecipientInfo_st* %ri, %struct.x509_st.15085* %cert) #0 {
define dso_local i32 @CMS_RecipientInfo_set0_pkey(%struct.CMS_RecipientInfo_st* %ri, %struct.evp_pkey_st.12606* %pkey) #0 {
define dso_local i32 @CMS_RecipientInfo_kekri_id_cmp(%struct.CMS_RecipientInfo_st* %ri, i8* %id, i64 %idlen) #0 {
define dso_local %struct.CMS_RecipientInfo_st* @CMS_add0_recipient_key(%struct.POLICYQUALINFO_st* %cms, i32 %nid, i8* %key, i64 %keylen, i8* %id, i64 %idlen, %struct.asn1_string_st* %date, %struct.asn1_object_st* %otherTypeId, %struct.asn1_type_st* %otherType) #0 {
define internal i64 @aes_wrap_keylen(i32 %nid) #0 {
define dso_local i32 @CMS_RecipientInfo_kekri_get0_id(%struct.CMS_RecipientInfo_st* %ri, %struct.X509_algor_st** %palg, %struct.asn1_string_st** %pid, %struct.asn1_string_st** %pdate, %struct.asn1_object_st** %potherid, %struct.asn1_type_st** %pothertype) #0 {
define dso_local i32 @CMS_RecipientInfo_set0_key(%struct.CMS_RecipientInfo_st* %ri, i8* %key, i64 %keylen) #0 {
define dso_local i32 @CMS_RecipientInfo_decrypt(%struct.POLICYQUALINFO_st* %cms, %struct.CMS_RecipientInfo_st* %ri) #0 {
define internal i32 @cms_RecipientInfo_ktri_decrypt(%struct.POLICYQUALINFO_st* %cms, %struct.CMS_RecipientInfo_st* %ri) #0 {
define internal i32 @cms_RecipientInfo_kekri_decrypt(%struct.POLICYQUALINFO_st* %cms, %struct.CMS_RecipientInfo_st* %ri) #0 {
define dso_local i32 @CMS_RecipientInfo_encrypt(%struct.POLICYQUALINFO_st* %cms, %struct.CMS_RecipientInfo_st* %ri) #0 {
define internal i32 @cms_RecipientInfo_ktri_encrypt(%struct.POLICYQUALINFO_st* %cms, %struct.CMS_RecipientInfo_st* %ri) #0 {
define internal i32 @cms_RecipientInfo_kekri_encrypt(%struct.POLICYQUALINFO_st* %cms, %struct.CMS_RecipientInfo_st* %ri) #0 {
define dso_local %struct.bio_st* @cms_EnvelopedData_init_bio(%struct.POLICYQUALINFO_st* %cms) #0 {
define internal void @cms_env_set_version(%struct.CMS_EnvelopedData_st* %env) #0 {
define internal void @cms_env_set_originfo_version(%struct.CMS_EnvelopedData_st* %env) #0 {
define dso_local %struct.bio_st* @cms_EncryptedContent_init_bio(%struct.CMS_EncryptedContentInfo_st* %ec) #0 {
define dso_local i32 @cms_EncryptedContent_init(%struct.CMS_EncryptedContentInfo_st* %ec, %struct.evp_cipher_st.15059* %cipher, i8* %key, i64 %keylen) #0 {
define dso_local i32 @CMS_EncryptedData_set1_key(%struct.POLICYQUALINFO_st* %cms, %struct.evp_cipher_st.15059* %ciph, i8* %key, i64 %keylen) #0 {
define dso_local %struct.bio_st* @cms_EncryptedData_init_bio(%struct.POLICYQUALINFO_st* %cms) #0 {
define dso_local i32 @CMS_RecipientInfo_set0_password(%struct.CMS_RecipientInfo_st* %ri, i8* %pass, i64 %passlen) #0 {
define dso_local %struct.CMS_RecipientInfo_st* @CMS_add0_recipient_password(%struct.POLICYQUALINFO_st* %cms, i32 %iter, i32 %wrap_nid, i32 %pbe_nid, i8* %pass, i64 %passlen, %struct.evp_cipher_st.15059* %kekciph) #0 {
define dso_local i32 @cms_RecipientInfo_pwri_crypt(%struct.POLICYQUALINFO_st* %cms, %struct.CMS_RecipientInfo_st* %ri, i32 %en_de) #0 {
define internal i32 @kek_wrap_key(i8* %out, i64* %outlen, i8* %in, i64 %inlen, %struct.evp_cipher_ctx_st.15058* %ctx) #0 {
define internal i32 @kek_unwrap_key(i8* %out, i64* %outlen, i8* %in, i64 %inlen, %struct.evp_cipher_ctx_st.15058* %ctx) #0 {
define dso_local i32 @CMS_RecipientInfo_kari_get0_alg(%struct.CMS_RecipientInfo_st* %ri, %struct.X509_algor_st** %palg, %struct.asn1_string_st** %pukm) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @CMS_RecipientInfo_kari_get0_reks(%struct.CMS_RecipientInfo_st* %ri) #0 {
define dso_local i32 @CMS_RecipientInfo_kari_get0_orig_id(%struct.CMS_RecipientInfo_st* %ri, %struct.X509_algor_st** %pubalg, %struct.asn1_string_st** %pubkey, %struct.asn1_string_st** %keyid, %struct.X509_name_st** %issuer, %struct.asn1_string_st** %sno) #0 {
define dso_local i32 @CMS_RecipientInfo_kari_orig_id_cmp(%struct.CMS_RecipientInfo_st* %ri, %struct.x509_st.15085* %cert) #0 {
define dso_local i32 @CMS_RecipientEncryptedKey_get0_id(%struct.CMS_RecipientEncryptedKey_st* %rek, %struct.asn1_string_st** %keyid, %struct.asn1_string_st** %tm, %struct.X509_algor_st** %other, %struct.X509_name_st** %issuer, %struct.asn1_string_st** %sno) #0 {
define dso_local i32 @CMS_RecipientEncryptedKey_cert_cmp(%struct.CMS_RecipientEncryptedKey_st* %rek, %struct.x509_st.15085* %cert) #0 {
define dso_local i32 @CMS_RecipientInfo_kari_set0_pkey(%struct.CMS_RecipientInfo_st* %ri, %struct.evp_pkey_st.12606* %pk) #0 {
define dso_local %struct.evp_cipher_ctx_st.15058* @CMS_RecipientInfo_kari_get0_ctx(%struct.CMS_RecipientInfo_st* %ri) #0 {
define dso_local i32 @CMS_RecipientInfo_kari_decrypt(%struct.POLICYQUALINFO_st* %cms, %struct.CMS_RecipientInfo_st* %ri, %struct.CMS_RecipientEncryptedKey_st* %rek) #0 {
define internal i32 @cms_kek_cipher(i8** %pout, i64* %poutlen, i8* %in, i64 %inlen, %struct.CMS_KeyAgreeRecipientInfo_st* %kari, i32 %enc) #0 {
define dso_local i32 @cms_RecipientInfo_kari_init(%struct.CMS_RecipientInfo_st* %ri, %struct.x509_st.15085* %recip, %struct.evp_pkey_st.12606* %pk, i32 %flags) #0 {
define internal i32 @cms_kari_create_ephemeral_key(%struct.CMS_KeyAgreeRecipientInfo_st* %kari, %struct.evp_pkey_st.12606* %pk) #0 {
define dso_local i32 @cms_RecipientInfo_kari_encrypt(%struct.POLICYQUALINFO_st* %cms, %struct.CMS_RecipientInfo_st* %ri) #0 {
define internal i32 @cms_wrap_init(%struct.CMS_KeyAgreeRecipientInfo_st* %kari, %struct.evp_cipher_st.15059* %cipher) #0 {
define dso_local %struct._pitem* @pitem_new(i8* %prio64be, i8* %data) #0 {
define dso_local void @pitem_free(%struct._pitem* %item) #0 {
define dso_local %struct._pqueue* @pqueue_new() #0 {
define dso_local void @pqueue_free(%struct._pqueue* %pq) #0 {
define dso_local %struct._pitem* @pqueue_insert(%struct._pqueue* %pq, %struct._pitem* %item) #0 {
define dso_local %struct._pitem* @pqueue_peek(%struct._pqueue* %pq) #0 {
define dso_local %struct._pitem* @pqueue_pop(%struct._pqueue* %pq) #0 {
define dso_local %struct._pitem* @pqueue_find(%struct._pqueue* %pq, i8* %prio64be) #0 {
define dso_local void @pqueue_print(%struct._pqueue* %pq) #0 {
define dso_local %struct._pitem* @pqueue_iterator(%struct._pqueue* %pq) #0 {
define dso_local %struct._pitem* @pqueue_next(%struct._pitem** %item) #0 {
define dso_local i32 @pqueue_size(%struct._pqueue* %pq) #0 {
define dso_local void @ERR_load_TS_strings() #0 {
define dso_local %struct.bignum_st* @SRP_Calc_u(%struct.bignum_st* %A, %struct.bignum_st* %B, %struct.bignum_st* %N) #0 {
define dso_local %struct.bignum_st* @SRP_Calc_server_key(%struct.bignum_st* %A, %struct.bignum_st* %v, %struct.bignum_st* %u, %struct.bignum_st* %b, %struct.bignum_st* %N) #0 {
define dso_local %struct.bignum_st* @SRP_Calc_B(%struct.bignum_st* %b, %struct.bignum_st* %N, %struct.bignum_st* %g, %struct.bignum_st* %v) #0 {
define internal %struct.bignum_st* @srp_Calc_k(%struct.bignum_st* %N, %struct.bignum_st* %g) #0 {
define dso_local %struct.bignum_st* @SRP_Calc_x(%struct.bignum_st* %s, i8* %user, i8* %pass) #0 {
define dso_local %struct.bignum_st* @SRP_Calc_A(%struct.bignum_st* %a, %struct.bignum_st* %N, %struct.bignum_st* %g) #0 {
define dso_local %struct.bignum_st* @SRP_Calc_client_key(%struct.bignum_st* %N, %struct.bignum_st* %B, %struct.bignum_st* %g, %struct.bignum_st* %x, %struct.bignum_st* %a, %struct.bignum_st* %u) #0 {
define dso_local i32 @SRP_Verify_B_mod_N(%struct.bignum_st* %B, %struct.bignum_st* %N) #0 {
define dso_local i32 @SRP_Verify_A_mod_N(%struct.bignum_st* %A, %struct.bignum_st* %N) #0 {
define dso_local i8* @SRP_check_known_gN_param(%struct.bignum_st* %g, %struct.bignum_st* %N) #0 {
define dso_local %struct.SRP_gN_st* @SRP_get_default_gN(i8* %id) #0 {
define dso_local void @SRP_user_pwd_free(%struct.SRP_user_pwd_st* %user_pwd) #0 {
define dso_local %struct.SRP_VBASE_st* @SRP_VBASE_new(i8* %seed_key) #0 {
define dso_local i32 @SRP_VBASE_free(%struct.SRP_VBASE_st* %vb) #0 {
define dso_local i32 @SRP_VBASE_init(%struct.SRP_VBASE_st* %vb, i8* %verifier_file) #0 {
define internal %struct.bignum_st* @SRP_gN_place_bn(%struct.stack_st_SSL_CIPHER* %gN_cache, i8* %ch) #0 {
define internal %struct.SRP_gN_st* @SRP_get_gN_by_id(i8* %id, %struct.stack_st_SSL_CIPHER* %gN_tab) #0 {
define internal %struct.SRP_user_pwd_st* @SRP_user_pwd_new() #0 {
define internal void @SRP_user_pwd_set_gN(%struct.SRP_user_pwd_st* %vinfo, %struct.bignum_st* %g, %struct.bignum_st* %N) #0 {
define internal i32 @SRP_user_pwd_set_ids(%struct.SRP_user_pwd_st* %vinfo, i8* %id, i8* %info) #0 {
define internal i32 @SRP_user_pwd_set_sv(%struct.SRP_user_pwd_st* %vinfo, i8* %s, i8* %v) #0 {
define internal i32 @t_fromb64(i8* %a, i64 %alen, i8* %src) #0 {
define internal %struct.SRP_gN_cache_st* @SRP_gN_new_init(i8* %ch) #0 {
define internal void @SRP_gN_free(%struct.SRP_gN_cache_st* %gN_cache) #0 {
define dso_local %struct.SRP_user_pwd_st* @SRP_VBASE_get_by_user(%struct.SRP_VBASE_st* %vb, i8* %username) #0 {
define internal %struct.SRP_user_pwd_st* @find_user(%struct.SRP_VBASE_st* %vb, i8* %username) #0 {
define dso_local %struct.SRP_user_pwd_st* @SRP_VBASE_get1_by_user(%struct.SRP_VBASE_st* %vb, i8* %username) #0 {
define internal %struct.SRP_user_pwd_st* @srp_user_pwd_dup(%struct.SRP_user_pwd_st* %src) #0 {
define internal i32 @SRP_user_pwd_set_sv_BN(%struct.SRP_user_pwd_st* %vinfo, %struct.bignum_st* %s, %struct.bignum_st* %v) #0 {
define dso_local i8* @SRP_create_verifier(i8* %user, i8* %pass, i8** %salt, i8** %verifier, i8* %N, i8* %g) #0 {
define dso_local i32 @SRP_create_verifier_BN(i8* %user, i8* %pass, %struct.bignum_st** %salt, %struct.bignum_st** %verifier, %struct.bignum_st* %N, %struct.bignum_st* %g) #0 {
define internal i8* @t_tob64(i8* %dst, i8* %src, i32 %size) #0 {
define internal i32 @cmac_size(%struct.evp_pkey_st* %pkey) #0 {
define internal void @cmac_key_free(%struct.evp_pkey_st* %pkey) #0 {
define internal i32 @pkey_cmac_init(%struct.evp_pkey_ctx_st.15259* %ctx) #0 {
define internal i32 @pkey_cmac_copy(%struct.evp_pkey_ctx_st.15259* %dst, %struct.evp_pkey_ctx_st.15259* %src) #0 {
define internal void @pkey_cmac_cleanup(%struct.evp_pkey_ctx_st.15259* %ctx) #0 {
define internal i32 @pkey_cmac_keygen(%struct.evp_pkey_ctx_st.15259* %ctx, %struct.evp_pkey_st.12512* %pkey) #0 {
define internal i32 @cmac_signctx_init(%struct.evp_pkey_ctx_st.15259* %ctx, %struct.env_md_ctx_st.15257* %mctx) #0 {
define internal i32 @cmac_signctx(%struct.evp_pkey_ctx_st.15259* %ctx, i8* %sig, i64* %siglen, %struct.env_md_ctx_st.15257* %mctx) #0 {
define internal i32 @pkey_cmac_ctrl(%struct.evp_pkey_ctx_st.15259* %ctx, i32 %type, i32 %p1, i8* %p2) #0 {
define internal i32 @pkey_cmac_ctrl_str(%struct.evp_pkey_ctx_st.15259* %ctx, i8* %type, i8* %value) #0 {
define internal i32 @int_update(%struct.env_md_ctx_st.15257* %ctx, i8* %data, i64 %count) #0 {
define dso_local void @ERR_load_CRYPTO_strings() #0 {
define dso_local i8* @ossl_safe_getenv(i8* %name) #0 {
define dso_local void @ERR_load_OBJ_strings() #0 {
define internal i32 @hmac_size(%struct.evp_pkey_st* %pkey) #0 {
define internal void @hmac_key_free(%struct.evp_pkey_st* %pkey) #0 {
define internal i32 @hmac_pkey_ctrl(%struct.evp_pkey_st* %pkey, i32 %op, i64 %arg1, i8* %arg2) #0 {
define internal i32 @old_hmac_decode(%struct.evp_pkey_st* %pkey, i8** %pder, i32 %derlen) #0 {
define internal i32 @old_hmac_encode(%struct.evp_pkey_st* %pkey, i8** %pder) #0 {
define internal i32 @pkey_hmac_init(%struct.evp_pkey_ctx_st.15290* %ctx) #0 {
define internal i32 @pkey_hmac_copy(%struct.evp_pkey_ctx_st.15290* %dst, %struct.evp_pkey_ctx_st.15290* %src) #0 {
define internal void @pkey_hmac_cleanup(%struct.evp_pkey_ctx_st.15290* %ctx) #0 {
define internal i32 @pkey_hmac_keygen(%struct.evp_pkey_ctx_st.15290* %ctx, %struct.evp_pkey_st.12512* %pkey) #0 {
define internal i32 @hmac_signctx_init(%struct.evp_pkey_ctx_st.15290* %ctx, %struct.env_md_ctx_st.15288* %mctx) #0 {
define internal i32 @hmac_signctx(%struct.evp_pkey_ctx_st.15290* %ctx, i8* %sig, i64* %siglen, %struct.env_md_ctx_st.15288* %mctx) #0 {
define internal i32 @pkey_hmac_ctrl(%struct.evp_pkey_ctx_st.15290* %ctx, i32 %type, i32 %p1, i8* %p2) #0 {
define internal i32 @pkey_hmac_ctrl_str(%struct.evp_pkey_ctx_st.15290* %ctx, i8* %type, i8* %value) #0 {
define internal i32 @int_update.7760(%struct.env_md_ctx_st.15288* %ctx, i8* %data, i64 %count) #0 {
define dso_local i8* @AES_options() #0 {
define dso_local i32 @AES_set_encrypt_key(i8* %userKey, i32 %bits, %struct.aes_key_st* %key) #0 {
define dso_local i32 @AES_set_decrypt_key(i8* %userKey, i32 %bits, %struct.aes_key_st* %key) #0 {
define dso_local i32 @AES_wrap_key(%struct.aes_key_st* %key, i8* %iv, i8* %out, i8* %in, i32 %inlen) #0 {
define dso_local i32 @AES_unwrap_key(%struct.aes_key_st* %key, i8* %iv, i8* %out, i8* %in, i32 %inlen) #0 {
define dso_local i32 @private_AES_set_encrypt_key(i8* %userKey, i32 %bits, %struct.aes_key_st* %key) #0 {
define dso_local i32 @private_AES_set_decrypt_key(i8* %userKey, i32 %bits, %struct.aes_key_st* %key) #0 {
define dso_local void @AES_encrypt(i8* %in, i8* %out, %struct.aes_key_st* %key) #0 {
define dso_local void @AES_decrypt(i8* %in, i8* %out, %struct.aes_key_st* %key) #0 {
define dso_local void @AES_cbc_encrypt(i8* %in, i8* %out, i64 %len, %struct.aes_key_st* %key, i8* %ivec, i32 %enc) #0 {
define dso_local void @idea_cbc_encrypt(i8* %in, i8* %out, i64 %length, %struct.idea_key_st* %ks, i8* %iv, i32 %encrypt) #0 {
define dso_local void @idea_encrypt(i64* %d, %struct.idea_key_st* %key) #0 {
define dso_local void @idea_cfb64_encrypt(i8* %in, i8* %out, i64 %length, %struct.idea_key_st* %schedule, i8* %ivec, i32* %num, i32 %encrypt) #0 {
define dso_local void @idea_ofb64_encrypt(i8* %in, i8* %out, i64 %length, %struct.idea_key_st* %schedule, i8* %ivec, i32* %num) #0 {
define dso_local i8* @idea_options() #0 {
define dso_local void @idea_ecb_encrypt(i8* %in, i8* %out, %struct.idea_key_st* %ks) #0 {
define dso_local void @idea_set_encrypt_key(i8* %key, %struct.idea_key_st* %ks) #0 {
define dso_local void @idea_set_decrypt_key(%struct.idea_key_st* %ek, %struct.idea_key_st* %dk) #0 {
define internal i32 @inverse(i32 %xin) #0 {
define dso_local i32 @Camellia_set_key(i8* %userKey, i32 %bits, %struct.camellia_key_st* %key) #0 {
define dso_local i32 @private_Camellia_set_key(i8* %userKey, i32 %bits, %struct.camellia_key_st* %key) #0 {
define dso_local void @Camellia_encrypt(i8* %in, i8* %out, %struct.camellia_key_st* %key) #0 {
define dso_local void @Camellia_decrypt(i8* %in, i8* %out, %struct.camellia_key_st* %key) #0 {
define dso_local void @Camellia_cbc_encrypt(i8* %in, i8* %out, i64 %len, %struct.camellia_key_st* %key, i8* %ivec, i32 %enc) #0 {
define dso_local void @SEED_set_key(i8* %rawkey, %struct.seed_key_st* %ks) #0 {
define dso_local void @SEED_encrypt(i8* %s, i8* %d, %struct.seed_key_st* %ks) #0 {
define dso_local void @SEED_decrypt(i8* %s, i8* %d, %struct.seed_key_st* %ks) #0 {
define dso_local void @SEED_ecb_encrypt(i8* %in, i8* %out, %struct.seed_key_st* %ks, i32 %enc) #0 {
define dso_local void @SEED_cbc_encrypt(i8* %in, i8* %out, i64 %len, %struct.seed_key_st* %ks, i8* %ivec, i32 %enc) #0 {
define dso_local void @SEED_cfb128_encrypt(i8* %in, i8* %out, i64 %len, %struct.seed_key_st* %ks, i8* %ivec, i32* %num, i32 %enc) #0 {
define dso_local void @SEED_ofb128_encrypt(i8* %in, i8* %out, i64 %len, %struct.seed_key_st* %ks, i8* %ivec, i32* %num) #0 {
define dso_local void @CRYPTO_cbc128_encrypt(i8* %in, i8* %out, i64 %len, i8* %key, i8* %ivec, void (i8*, i8*, i8*)* %block) #0 {
define dso_local void @CRYPTO_cbc128_decrypt(i8* %in, i8* %out, i64 %len, i8* %key, i8* %ivec, void (i8*, i8*, i8*)* %block) #0 {
define dso_local void @CRYPTO_ctr128_encrypt(i8* %in, i8* %out, i64 %len, i8* %key, i8* %ivec, i8* %ecount_buf, i32* %num, void (i8*, i8*, i8*)* %block) #0 {
define internal void @ctr128_inc_aligned(i8* %counter) #0 {
define internal void @ctr128_inc(i8* %counter) #0 {
define dso_local void @CRYPTO_ctr128_encrypt_ctr32(i8* %in, i8* %out, i64 %len, i8* %key, i8* %ivec, i8* %ecount_buf, i32* %num, void (i8*, i8*, i64, i8*, i8*)* %func) #0 {
define internal void @ctr96_inc(i8* %counter) #0 {
define dso_local void @CRYPTO_cfb128_encrypt(i8* %in, i8* %out, i64 %len, i8* %key, i8* %ivec, i32* %num, i32 %enc, void (i8*, i8*, i8*)* %block) #0 {
define dso_local void @CRYPTO_cfb128_1_encrypt(i8* %in, i8* %out, i64 %bits, i8* %key, i8* %ivec, i32* %num, i32 %enc, void (i8*, i8*, i8*)* %block) #0 {
define internal void @cfbr_encrypt_block(i8* %in, i8* %out, i32 %nbits, i8* %key, i8* %ivec, i32 %enc, void (i8*, i8*, i8*)* %block) #0 {
define dso_local void @CRYPTO_cfb128_8_encrypt(i8* %in, i8* %out, i64 %length, i8* %key, i8* %ivec, i32* %num, i32 %enc, void (i8*, i8*, i8*)* %block) #0 {
define dso_local void @CRYPTO_ofb128_encrypt(i8* %in, i8* %out, i64 %len, i8* %key, i8* %ivec, i32* %num, void (i8*, i8*, i8*)* %block) #0 {
define dso_local void @CRYPTO_gcm128_init(%struct.gcm128_context* %ctx, i8* %key, void (i8*, i8*, i8*)* %block) #0 {
define internal void @gcm_init_4bit(%struct.timespec* %Htable, i64* %H) #0 {
define dso_local void @CRYPTO_gcm128_setiv(%struct.gcm128_context* %ctx, i8* %iv, i64 %len) #0 {
define internal void @gcm_gmult_4bit(i64* %Xi, %struct.timespec* %Htable) #0 {
define dso_local i32 @CRYPTO_gcm128_aad(%struct.gcm128_context* %ctx, i8* %aad, i64 %len) #0 {
define internal void @gcm_ghash_4bit(i64* %Xi, %struct.timespec* %Htable, i8* %inp, i64 %len) #0 {
define dso_local i32 @CRYPTO_gcm128_encrypt(%struct.gcm128_context* %ctx, i8* %in, i8* %out, i64 %len) #0 {
define dso_local i32 @CRYPTO_gcm128_decrypt(%struct.gcm128_context* %ctx, i8* %in, i8* %out, i64 %len) #0 {
define dso_local i32 @CRYPTO_gcm128_encrypt_ctr32(%struct.gcm128_context* %ctx, i8* %in, i8* %out, i64 %len, void (i8*, i8*, i64, i8*, i8*)* %stream) #0 {
define dso_local i32 @CRYPTO_gcm128_decrypt_ctr32(%struct.gcm128_context* %ctx, i8* %in, i8* %out, i64 %len, void (i8*, i8*, i64, i8*, i8*)* %stream) #0 {
define dso_local i32 @CRYPTO_gcm128_finish(%struct.gcm128_context* %ctx, i8* %tag, i64 %len) #0 {
define dso_local void @CRYPTO_gcm128_tag(%struct.gcm128_context* %ctx, i8* %tag, i64 %len) #0 {
define dso_local %struct.gcm128_context* @CRYPTO_gcm128_new(i8* %key, void (i8*, i8*, i8*)* %block) #0 {
define dso_local void @CRYPTO_gcm128_release(%struct.gcm128_context* %ctx) #0 {
define dso_local void @CRYPTO_ccm128_init(%struct.ccm128_context* %ctx, i32 %M, i32 %L, i8* %key, void (i8*, i8*, i8*)* %block) #0 {
define dso_local i32 @CRYPTO_ccm128_setiv(%struct.ccm128_context* %ctx, i8* %nonce, i64 %nlen, i64 %mlen) #0 {
define dso_local void @CRYPTO_ccm128_aad(%struct.ccm128_context* %ctx, i8* %aad, i64 %alen) #0 {
define dso_local i32 @CRYPTO_ccm128_encrypt(%struct.ccm128_context* %ctx, i8* %inp, i8* %out, i64 %len) #0 {
define internal void @ctr64_inc.7857(i8* %counter) #0 {
define dso_local i32 @CRYPTO_ccm128_decrypt(%struct.ccm128_context* %ctx, i8* %inp, i8* %out, i64 %len) #0 {
define dso_local i32 @CRYPTO_ccm128_encrypt_ccm64(%struct.ccm128_context* %ctx, i8* %inp, i8* %out, i64 %len, void (i8*, i8*, i64, i8*, i8*, i8*)* %stream) #0 {
define internal void @ctr64_add(i8* %counter, i64 %inc) #0 {
define dso_local i32 @CRYPTO_ccm128_decrypt_ccm64(%struct.ccm128_context* %ctx, i8* %inp, i8* %out, i64 %len, void (i8*, i8*, i64, i8*, i8*, i8*)* %stream) #0 {
define dso_local i64 @CRYPTO_ccm128_tag(%struct.ccm128_context* %ctx, i8* %tag, i64 %len) #0 {
define dso_local i32 @CRYPTO_xts128_encrypt(%struct.xts128_context* %ctx, i8* %iv, i8* %inp, i8* %out, i64 %len, i32 %enc) #0 {
define dso_local i64 @CRYPTO_128_wrap(i8* %key, i8* %iv, i8* %out, i8* %in, i64 %inlen, void (i8*, i8*, i8*)* %block) #0 {
define dso_local i64 @CRYPTO_128_unwrap(i8* %key, i8* %iv, i8* %out, i8* %in, i64 %inlen, void (i8*, i8*, i8*)* %block) #0 {
define dso_local i32 @BN_add(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %b) #0 {
define dso_local i32 @BN_usub(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %b) #0 {
define dso_local i32 @BN_uadd(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %b) #0 {
define dso_local i32 @BN_sub(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %b) #0 {
define dso_local i32 @BN_div(%struct.bignum_st* %dv, %struct.bignum_st* %rm, %struct.bignum_st* %num, %struct.bignum_st* %divisor, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @BN_exp(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %p, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @BN_mod_exp(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %p, %struct.bignum_st* %m, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @BN_mod_exp_mont_word(%struct.bignum_st* %rr, i64 %a, %struct.bignum_st* %p, %struct.bignum_st* %m, %struct.bignum_ctx* %ctx, %struct.bn_mont_ctx_st* %in_mont) #0 {
define dso_local i32 @BN_mod_exp_mont(%struct.bignum_st* %rr, %struct.bignum_st* %a, %struct.bignum_st* %p, %struct.bignum_st* %m, %struct.bignum_ctx* %ctx, %struct.bn_mont_ctx_st* %in_mont) #0 {
define dso_local i32 @BN_mod_exp_recp(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %p, %struct.bignum_st* %m, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @BN_mod_exp_mont_consttime(%struct.bignum_st* %rr, %struct.bignum_st* %a, %struct.bignum_st* %p, %struct.bignum_st* %m, %struct.bignum_ctx* %ctx, %struct.bn_mont_ctx_st* %in_mont) #0 {
define internal i32 @MOD_EXP_CTIME_COPY_TO_PREBUF(%struct.bignum_st* %b, i32 %top, i8* %buf, i32 %idx, i32 %window) #0 {
define internal i32 @MOD_EXP_CTIME_COPY_FROM_PREBUF(%struct.bignum_st* %b, i32 %top, i8* %buf, i32 %idx, i32 %window) #0 {
define internal i32 @constant_time_eq_int(i32 %a, i32 %b) #4 {
define internal i32 @constant_time_eq.7887(i32 %a, i32 %b) #4 {
define internal i32 @constant_time_is_zero.7888(i32 %a) #4 {
define internal i32 @constant_time_msb.7889(i32 %a) #4 {
define dso_local i32 @BN_mod_exp_simple(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %p, %struct.bignum_st* %m, %struct.bignum_ctx* %ctx) #0 {
define dso_local i64 @bn_sub_part_words(i64* %r, i64* %a, i64* %b, i32 %cl, i32 %dl) #0 {
define dso_local i64 @bn_add_part_words(i64* %r, i64* %a, i64* %b, i32 %cl, i32 %dl) #0 {
define dso_local void @bn_mul_recursive(i64* %r, i64* %a, i64* %b, i32 %n2, i32 %dna, i32 %dnb, i64* %t) #0 {
define dso_local void @bn_mul_normal(i64* %r, i64* %a, i32 %na, i64* %b, i32 %nb) #0 {
define dso_local void @bn_mul_part_recursive(i64* %r, i64* %a, i64* %b, i32 %n, i32 %tna, i32 %tnb, i64* %t) #0 {
define dso_local void @bn_mul_low_recursive(i64* %r, i64* %a, i64* %b, i32 %n2, i64* %t) #0 {
define dso_local void @bn_mul_low_normal(i64* %r, i64* %a, i64* %b, i32 %n) #0 {
define dso_local void @bn_mul_high(i64* %r, i64* %a, i64* %b, i64* %l, i32 %n2, i64* %t) #0 {
define dso_local i32 @BN_mul(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %b, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @bn_mul_fixed_top(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %b, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @BN_nnmod(%struct.bignum_st* %r, %struct.bignum_st* %m, %struct.bignum_st* %d, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @BN_mod_add(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %b, %struct.bignum_st* %m, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @bn_mod_add_fixed_top(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %b, %struct.bignum_st* %m) #0 {
define dso_local i32 @BN_mod_add_quick(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %b, %struct.bignum_st* %m) #0 {
define dso_local i32 @BN_mod_sub(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %b, %struct.bignum_st* %m, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @bn_mod_sub_fixed_top(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %b, %struct.bignum_st* %m) #0 {
define dso_local i32 @BN_mod_sub_quick(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %b, %struct.bignum_st* %m) #0 {
define dso_local i32 @BN_mod_mul(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %b, %struct.bignum_st* %m, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @BN_mod_sqr(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %m, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @BN_mod_lshift1(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %m, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @BN_mod_lshift1_quick(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %m) #0 {
define dso_local i32 @BN_mod_lshift(%struct.bignum_st* %r, %struct.bignum_st* %a, i32 %n, %struct.bignum_st* %m, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @BN_mod_lshift_quick(%struct.bignum_st* %r, %struct.bignum_st* %a, i32 %n, %struct.bignum_st* %m) #0 {
define dso_local i32 @BN_rand(%struct.bignum_st* %rnd, i32 %bits, i32 %top, i32 %bottom) #0 {
define internal i32 @bnrand(i32 %pseudorand, %struct.bignum_st* %rnd, i32 %bits, i32 %top, i32 %bottom) #0 {
define dso_local i32 @BN_pseudo_rand(%struct.bignum_st* %rnd, i32 %bits, i32 %top, i32 %bottom) #0 {
define dso_local i32 @BN_bntest_rand(%struct.bignum_st* %rnd, i32 %bits, i32 %top, i32 %bottom) #0 {
define dso_local i32 @BN_rand_range(%struct.bignum_st* %r, %struct.bignum_st* %range) #0 {
define internal i32 @bn_rand_range(i32 %pseudo, %struct.bignum_st* %r, %struct.bignum_st* %range) #0 {
define dso_local i32 @BN_pseudo_rand_range(%struct.bignum_st* %r, %struct.bignum_st* %range) #0 {
define dso_local %struct.bn_blinding_st* @BN_BLINDING_new(%struct.bignum_st* %A, %struct.bignum_st* %Ai, %struct.bignum_st* %mod) #0 {
define dso_local void @BN_BLINDING_free(%struct.bn_blinding_st* %r) #0 {
define dso_local i32 @BN_BLINDING_update(%struct.bn_blinding_st* %b, %struct.bignum_ctx* %ctx) #0 {
define dso_local %struct.bn_blinding_st* @BN_BLINDING_create_param(%struct.bn_blinding_st* %b, %struct.bignum_st* %e, %struct.bignum_st* %m, %struct.bignum_ctx* %ctx, i32 (%struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_ctx*, %struct.bn_mont_ctx_st*)* %bn_mod_exp, %struct.bn_mont_ctx_st* %m_ctx) #0 {
define dso_local i32 @BN_BLINDING_convert(%struct.bignum_st* %n, %struct.bn_blinding_st* %b, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @BN_BLINDING_convert_ex(%struct.bignum_st* %n, %struct.bignum_st* %r, %struct.bn_blinding_st* %b, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @BN_BLINDING_invert(%struct.bignum_st* %n, %struct.bn_blinding_st* %b, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @BN_BLINDING_invert_ex(%struct.bignum_st* %n, %struct.bignum_st* %r, %struct.bn_blinding_st* %b, %struct.bignum_ctx* %ctx) #0 {
define dso_local i64 @BN_BLINDING_get_thread_id(%struct.bn_blinding_st* %b) #0 {
define dso_local void @BN_BLINDING_set_thread_id(%struct.bn_blinding_st* %b, i64 %n) #0 {
define dso_local %struct.srtp_protection_profile_st* @BN_BLINDING_thread_id(%struct.bn_blinding_st* %b) #0 {
define dso_local i64 @BN_BLINDING_get_flags(%struct.bn_blinding_st* %b) #0 {
define dso_local void @BN_BLINDING_set_flags(%struct.bn_blinding_st* %b, i64 %flags) #0 {
define dso_local i32 @BN_gcd(%struct.bignum_st* %r, %struct.bignum_st* %in_a, %struct.bignum_st* %in_b, %struct.bignum_ctx* %ctx) #0 {
define internal %struct.bignum_st* @euclid(%struct.bignum_st* %a, %struct.bignum_st* %b) #0 {
define dso_local %struct.bignum_st* @BN_mod_inverse(%struct.bignum_st* %in, %struct.bignum_st* %a, %struct.bignum_st* %n, %struct.bignum_ctx* %ctx) #0 {
define internal %struct.bignum_st* @BN_mod_inverse_no_branch(%struct.bignum_st* %in, %struct.bignum_st* %a, %struct.bignum_st* %n, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @BN_GENCB_call(%struct.bn_gencb_st* %cb, i32 %a, i32 %b) #0 {
define dso_local i32 @BN_generate_prime_ex(%struct.bignum_st* %ret, i32 %bits, i32 %safe, %struct.bignum_st* %add, %struct.bignum_st* %rem, %struct.bn_gencb_st* %cb) #0 {
define internal i32 @probable_prime(%struct.bignum_st* %rnd, i32 %bits) #0 {
define internal i32 @probable_prime_dh_safe(%struct.bignum_st* %p, i32 %bits, %struct.bignum_st* %padd, %struct.bignum_st* %rem, %struct.bignum_ctx* %ctx) #0 {
define internal i32 @probable_prime_dh(%struct.bignum_st* %rnd, i32 %bits, %struct.bignum_st* %add, %struct.bignum_st* %rem, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @BN_is_prime_fasttest_ex(%struct.bignum_st* %a, i32 %checks, %struct.bignum_ctx* %ctx_passed, i32 %do_trial_division, %struct.bn_gencb_st* %cb) #0 {
define internal i32 @witness(%struct.bignum_st* %w, %struct.bignum_st* %a, %struct.bignum_st* %a1, %struct.bignum_st* %a1_odd, i32 %k, %struct.bignum_ctx* %ctx, %struct.bn_mont_ctx_st* %mont) #0 {
define dso_local i32 @BN_is_prime_ex(%struct.bignum_st* %a, i32 %checks, %struct.bignum_ctx* %ctx_passed, %struct.bn_gencb_st* %cb) #0 {
define dso_local void @ERR_load_BN_strings() #0 {
define dso_local i32 @BN_sqr(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @bn_sqr_fixed_top(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_ctx* %ctx) #0 {
define dso_local void @bn_sqr_normal(i64* %r, i64* %a, i32 %n, i64* %tmp) #0 {
define dso_local void @bn_sqr_recursive(i64* %r, i64* %a, i32 %n2, i64* %t) #0 {
define dso_local void @BN_RECP_CTX_init(%struct.bn_recp_ctx_st* %recp) #0 {
define dso_local %struct.bn_recp_ctx_st* @BN_RECP_CTX_new() #0 {
define dso_local void @BN_RECP_CTX_free(%struct.bn_recp_ctx_st* %recp) #0 {
define dso_local i32 @BN_RECP_CTX_set(%struct.bn_recp_ctx_st* %recp, %struct.bignum_st* %d, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @BN_mod_mul_reciprocal(%struct.bignum_st* %r, %struct.bignum_st* %x, %struct.bignum_st* %y, %struct.bn_recp_ctx_st* %recp, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @BN_div_recp(%struct.bignum_st* %dv, %struct.bignum_st* %rem, %struct.bignum_st* %m, %struct.bn_recp_ctx_st* %recp, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @BN_reciprocal(%struct.bignum_st* %r, %struct.bignum_st* %m, i32 %len, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @BN_mod_mul_montgomery(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %b, %struct.bn_mont_ctx_st* %mont, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @bn_mul_mont_fixed_top(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %b, %struct.bn_mont_ctx_st* %mont, %struct.bignum_ctx* %ctx) #0 {
define internal i32 @bn_from_montgomery_word(%struct.bignum_st* %ret, %struct.bignum_st* %r, %struct.bn_mont_ctx_st* %mont) #0 {
define dso_local i32 @BN_from_montgomery(%struct.bignum_st* %ret, %struct.bignum_st* %a, %struct.bn_mont_ctx_st* %mont, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @bn_from_mont_fixed_top(%struct.bignum_st* %ret, %struct.bignum_st* %a, %struct.bn_mont_ctx_st* %mont, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @bn_to_mont_fixed_top(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bn_mont_ctx_st* %mont, %struct.bignum_ctx* %ctx) #0 {
define dso_local %struct.bn_mont_ctx_st* @BN_MONT_CTX_new() #0 {
define dso_local void @BN_MONT_CTX_init(%struct.bn_mont_ctx_st* %ctx) #0 {
define dso_local void @BN_MONT_CTX_free(%struct.bn_mont_ctx_st* %mont) #0 {
define dso_local i32 @BN_MONT_CTX_set(%struct.bn_mont_ctx_st* %mont, %struct.bignum_st* %mod, %struct.bignum_ctx* %ctx) #0 {
define dso_local %struct.bn_mont_ctx_st* @BN_MONT_CTX_copy(%struct.bn_mont_ctx_st* %to, %struct.bn_mont_ctx_st* %from) #0 {
define dso_local %struct.bn_mont_ctx_st* @BN_MONT_CTX_set_locked(%struct.bn_mont_ctx_st** %pmont, i32 %lock, %struct.bignum_st* %mod, %struct.bignum_ctx* %ctx) #0 {
define dso_local %struct.ec_group_st* @EC_GROUP_new_curve_GFp(%struct.bignum_st* %p, %struct.bignum_st* %a, %struct.bignum_st* %b, %struct.bignum_ctx* %ctx) #0 {
define dso_local %struct.ec_group_st* @EC_GROUP_new_curve_GF2m(%struct.bignum_st* %p, %struct.bignum_st* %a, %struct.bignum_st* %b, %struct.bignum_ctx* %ctx) #0 {
define dso_local void @ERR_load_EC_strings() #0 {
define dso_local i32 @EC_GROUP_get_basis_type(%struct.ec_group_st.15383* %group) #0 {
define dso_local i32 @EC_GROUP_get_trinomial_basis(%struct.ec_group_st.15383* %group, i32* %k) #0 {
define dso_local i32 @EC_GROUP_get_pentanomial_basis(%struct.ec_group_st.15383* %group, i32* %k1, i32* %k2, i32* %k3) #0 {
define dso_local %struct.ngx_time_t* @X9_62_PENTANOMIAL_new() #0 {
define dso_local void @X9_62_PENTANOMIAL_free(%struct.ngx_time_t* %a) #0 {
define dso_local %struct.x9_62_characteristic_two_st* @X9_62_CHARACTERISTIC_TWO_new() #0 {
define dso_local void @X9_62_CHARACTERISTIC_TWO_free(%struct.x9_62_characteristic_two_st* %a) #0 {
define dso_local %struct.ec_parameters_st* @ECPARAMETERS_new() #0 {
define dso_local void @ECPARAMETERS_free(%struct.ec_parameters_st* %a) #0 {
define dso_local %struct.ecpk_parameters_st* @d2i_ECPKPARAMETERS(%struct.ecpk_parameters_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_ECPKPARAMETERS(%struct.ecpk_parameters_st* %a, i8** %out) #0 {
define dso_local %struct.ecpk_parameters_st* @ECPKPARAMETERS_new() #0 {
define dso_local void @ECPKPARAMETERS_free(%struct.ecpk_parameters_st* %a) #0 {
define dso_local %struct.ec_privatekey_st* @d2i_EC_PRIVATEKEY(%struct.ec_privatekey_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_EC_PRIVATEKEY(%struct.ec_privatekey_st* %a, i8** %out) #0 {
define dso_local %struct.ec_privatekey_st* @EC_PRIVATEKEY_new() #0 {
define dso_local void @EC_PRIVATEKEY_free(%struct.ec_privatekey_st* %a) #0 {
define dso_local %struct.ec_group_st.15383* @d2i_ECPKParameters(%struct.ec_group_st.15383** %a, i8** %in, i64 %len) #0 {
define internal %struct.ec_group_st.15383* @ec_asn1_pkparameters2group(%struct.ecpk_parameters_st* %params) #0 {
define internal %struct.ec_group_st.15383* @ec_asn1_parameters2group(%struct.ec_parameters_st* %params) #0 {
define dso_local i32 @i2d_ECPKParameters(%struct.ec_group_st.15383* %a, i8** %out) #0 {
define internal %struct.ecpk_parameters_st* @ec_asn1_group2pkparameters(%struct.ec_group_st.15383* %group, %struct.ecpk_parameters_st* %params) #0 {
define internal %struct.ec_parameters_st* @ec_asn1_group2parameters(%struct.ec_group_st.15383* %group, %struct.ec_parameters_st* %param) #0 {
define internal i32 @ec_asn1_group2fieldid(%struct.ec_group_st.15383* %group, %struct.x9_62_fieldid_st* %field) #0 {
define internal i32 @ec_asn1_group2curve(%struct.ec_group_st.15383* %group, %struct.ocsp_crl_id_st* %curve) #0 {
define dso_local %struct.ec_key_st.15390* @d2i_ECPrivateKey(%struct.ec_key_st.15390** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_ECPrivateKey(%struct.ec_key_st.15390* %a, i8** %out) #0 {
define dso_local i32 @i2d_ECParameters(%struct.ec_key_st.15390* %a, i8** %out) #0 {
define dso_local %struct.ec_key_st.15390* @d2i_ECParameters(%struct.ec_key_st.15390** %a, i8** %in, i64 %len) #0 {
define dso_local %struct.ec_key_st.15390* @o2i_ECPublicKey(%struct.ec_key_st.15390** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2o_ECPublicKey(%struct.ec_key_st.15390* %a, i8** %out) #0 {
define dso_local %struct.ec_method_st* @EC_GF2m_simple_method() #0 {
define dso_local i32 @ec_GF2m_simple_group_init(%struct.ec_group_st* %group) #0 {
define dso_local void @ec_GF2m_simple_group_finish(%struct.ec_group_st* %group) #0 {
define dso_local void @ec_GF2m_simple_group_clear_finish(%struct.ec_group_st* %group) #0 {
define dso_local i32 @ec_GF2m_simple_group_copy(%struct.ec_group_st* %dest, %struct.ec_group_st* %src) #0 {
define dso_local i32 @ec_GF2m_simple_group_set_curve(%struct.ec_group_st* %group, %struct.bignum_st* %p, %struct.bignum_st* %a, %struct.bignum_st* %b, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @ec_GF2m_simple_group_get_curve(%struct.ec_group_st* %group, %struct.bignum_st* %p, %struct.bignum_st* %a, %struct.bignum_st* %b, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @ec_GF2m_simple_group_get_degree(%struct.ec_group_st* %group) #0 {
define dso_local i32 @ec_GF2m_simple_group_check_discriminant(%struct.ec_group_st* %group, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @ec_GF2m_simple_point_init(%struct.ec_point_st* %point) #0 {
define dso_local void @ec_GF2m_simple_point_finish(%struct.ec_point_st* %point) #0 {
define dso_local void @ec_GF2m_simple_point_clear_finish(%struct.ec_point_st* %point) #0 {
define dso_local i32 @ec_GF2m_simple_point_copy(%struct.ec_point_st* %dest, %struct.ec_point_st* %src) #0 {
define dso_local i32 @ec_GF2m_simple_point_set_to_infinity(%struct.ec_group_st* %group, %struct.ec_point_st* %point) #0 {
define dso_local i32 @ec_GF2m_simple_point_set_affine_coordinates(%struct.ec_group_st* %group, %struct.ec_point_st* %point, %struct.bignum_st* %x, %struct.bignum_st* %y, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @ec_GF2m_simple_point_get_affine_coordinates(%struct.ec_group_st* %group, %struct.ec_point_st* %point, %struct.bignum_st* %x, %struct.bignum_st* %y, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @ec_GF2m_simple_add(%struct.ec_group_st* %group, %struct.ec_point_st* %r, %struct.ec_point_st* %a, %struct.ec_point_st* %b, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @ec_GF2m_simple_dbl(%struct.ec_group_st* %group, %struct.ec_point_st* %r, %struct.ec_point_st* %a, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @ec_GF2m_simple_invert(%struct.ec_group_st* %group, %struct.ec_point_st* %point, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @ec_GF2m_simple_is_at_infinity(%struct.ec_group_st* %group, %struct.ec_point_st* %point) #0 {
define dso_local i32 @ec_GF2m_simple_is_on_curve(%struct.ec_group_st* %group, %struct.ec_point_st* %point, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @ec_GF2m_simple_cmp(%struct.ec_group_st* %group, %struct.ec_point_st* %a, %struct.ec_point_st* %b, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @ec_GF2m_simple_make_affine(%struct.ec_group_st* %group, %struct.ec_point_st* %point, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @ec_GF2m_simple_points_make_affine(%struct.ec_group_st* %group, i64 %num, %struct.ec_point_st** %points, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @ec_GF2m_simple_field_mul(%struct.ec_group_st* %group, %struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %b, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @ec_GF2m_simple_field_sqr(%struct.ec_group_st* %group, %struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @ec_GF2m_simple_field_div(%struct.ec_group_st* %group, %struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %b, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @ec_GF2m_simple_mul(%struct.ec_group_st.11455* %group, %struct.ec_point_st.11451* %r, %struct.bignum_st* %scalar, i64 %num, %struct.ec_point_st.11451** %points, %struct.bignum_st** %scalars, %struct.bignum_ctx* %ctx) #0 {
define internal i32 @ec_GF2m_montgomery_point_multiply(%struct.ec_group_st.11455* %group, %struct.ec_point_st.11451* %r, %struct.bignum_st* %scalar, %struct.ec_point_st.11451* %point, %struct.bignum_ctx* %ctx) #0 {
define internal i32 @gf2m_Madd(%struct.ec_group_st.11455* %group, %struct.bignum_st* %x, %struct.bignum_st* %x1, %struct.bignum_st* %z1, %struct.bignum_st* %x2, %struct.bignum_st* %z2, %struct.bignum_ctx* %ctx) #0 {
define internal i32 @gf2m_Mdouble(%struct.ec_group_st.11455* %group, %struct.bignum_st* %x, %struct.bignum_st* %z, %struct.bignum_ctx* %ctx) #0 {
define internal i32 @gf2m_Mxy(%struct.ec_group_st.11455* %group, %struct.bignum_st* %x, %struct.bignum_st* %y, %struct.bignum_st* %x1, %struct.bignum_st* %z1, %struct.bignum_st* %x2, %struct.bignum_st* %z2, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @ec_GF2m_precompute_mult(%struct.ec_group_st.11455* %group, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @ec_GF2m_have_precompute_mult(%struct.ec_group_st.11455* %group) #0 {
define internal i32 @eckey_pub_decode(%struct.evp_pkey_st.15427* %pkey, %struct.X509_pubkey_st.15412* %pubkey) #0 {
define internal i32 @eckey_pub_encode(%struct.X509_pubkey_st.15412* %pk, %struct.evp_pkey_st.15427* %pkey) #0 {
define internal i32 @eckey_pub_cmp(%struct.evp_pkey_st.15427* %a, %struct.evp_pkey_st.15427* %b) #0 {
define internal i32 @eckey_pub_print(%struct.bio_st* %bp, %struct.evp_pkey_st.15427* %pkey, i32 %indent, %struct.asn1_pctx_st* %ctx) #0 {
define internal i32 @eckey_priv_decode(%struct.evp_pkey_st.15427* %pkey, %struct.pkcs8_priv_key_info_st* %p8) #0 {
define internal i32 @eckey_priv_encode(%struct.pkcs8_priv_key_info_st* %p8, %struct.evp_pkey_st.15427* %pkey) #0 {
define internal i32 @eckey_priv_print(%struct.bio_st* %bp, %struct.evp_pkey_st.15427* %pkey, i32 %indent, %struct.asn1_pctx_st* %ctx) #0 {
define internal i32 @int_ec_size(%struct.evp_pkey_st.15427* %pkey) #0 {
define internal i32 @ec_bits(%struct.evp_pkey_st.15427* %pkey) #0 {
define internal i32 @eckey_param_decode(%struct.evp_pkey_st.15427* %pkey, i8** %pder, i32 %derlen) #0 {
define internal i32 @eckey_param_encode(%struct.evp_pkey_st.15427* %pkey, i8** %pder) #0 {
define internal i32 @ec_missing_parameters(%struct.evp_pkey_st.15427* %pkey) #0 {
define internal i32 @ec_copy_parameters(%struct.evp_pkey_st.15427* %to, %struct.evp_pkey_st.15427* %from) #0 {
define internal i32 @ec_cmp_parameters(%struct.evp_pkey_st.15427* %a, %struct.evp_pkey_st.15427* %b) #0 {
define internal i32 @eckey_param_print(%struct.bio_st* %bp, %struct.evp_pkey_st.15427* %pkey, i32 %indent, %struct.asn1_pctx_st* %ctx) #0 {
define internal void @int_ec_free(%struct.evp_pkey_st.15427* %pkey) #0 {
define internal i32 @ec_pkey_ctrl(%struct.evp_pkey_st.15427* %pkey, i32 %op, i64 %arg1, i8* %arg2) #0 {
define internal i32 @old_ec_priv_decode(%struct.evp_pkey_st.15427* %pkey, i8** %pder, i32 %derlen) #0 {
define internal i32 @old_ec_priv_encode(%struct.evp_pkey_st.15427* %pkey, i8** %pder) #0 {
define internal i32 @ecdh_cms_decrypt(%struct.CMS_RecipientInfo_st* %ri) #0 {
define internal i32 @ecdh_cms_encrypt(%struct.CMS_RecipientInfo_st* %ri) #0 {
define internal i32 @ecdh_cms_set_peerkey(%struct.evp_pkey_ctx_st.12607* %pctx, %struct.X509_algor_st* %alg, %struct.asn1_string_st* %pubkey) #0 {
define internal i32 @ecdh_cms_set_shared_info(%struct.evp_pkey_ctx_st.12607* %pctx, %struct.CMS_RecipientInfo_st* %ri) #0 {
define internal i32 @ecdh_cms_set_kdf_param(%struct.evp_pkey_ctx_st.12607* %pctx, i32 %eckdf_nid) #0 {
define internal %struct.ec_key_st* @eckey_type2param(i32 %ptype, i8* %pval) #0 {
define internal i32 @do_EC_KEY_print(%struct.bio_st* %bp, %struct.ec_key_st* %x, i32 %off, i32 %ktype) #0 {
define internal i32 @eckey_param2type(i32* %pptype, i8** %ppval, %struct.ec_key_st* %ec_key) #0 {
define internal i32 @pkey_ec_init(%struct.evp_pkey_ctx_st.15461* %ctx) #0 {
define internal i32 @pkey_ec_copy(%struct.evp_pkey_ctx_st.15461* %dst, %struct.evp_pkey_ctx_st.15461* %src) #0 {
define internal void @pkey_ec_cleanup(%struct.evp_pkey_ctx_st.15461* %ctx) #0 {
define internal i32 @pkey_ec_paramgen(%struct.evp_pkey_ctx_st.15461* %ctx, %struct.evp_pkey_st.12512* %pkey) #0 {
define internal i32 @pkey_ec_keygen(%struct.evp_pkey_ctx_st.15461* %ctx, %struct.evp_pkey_st.12512* %pkey) #0 {
define internal i32 @pkey_ec_sign(%struct.evp_pkey_ctx_st.15461* %ctx, i8* %sig, i64* %siglen, i8* %tbs, i64 %tbslen) #0 {
define internal i32 @pkey_ec_verify(%struct.evp_pkey_ctx_st.15461* %ctx, i8* %sig, i64 %siglen, i8* %tbs, i64 %tbslen) #0 {
define internal i32 @pkey_ec_kdf_derive(%struct.evp_pkey_ctx_st.15461* %ctx, i8* %key, i64* %keylen) #0 {
define internal i32 @pkey_ec_ctrl(%struct.evp_pkey_ctx_st.15461* %ctx, i32 %type, i32 %p1, i8* %p2) #0 {
define internal i32 @pkey_ec_ctrl_str(%struct.evp_pkey_ctx_st.15461* %ctx, i8* %type, i8* %value) #0 {
define internal i32 @pkey_ec_derive(%struct.evp_pkey_ctx_st.15461* %ctx, i8* %key, i64* %keylen) #0 {
define dso_local i32 @ECPKParameters_print_fp(%struct._IO_FILE* %fp, %struct.ec_group_st* %x, i32 %off) #0 {
define dso_local i32 @ECPKParameters_print(%struct.bio_st* %bp, %struct.ec_group_st* %x, i32 %off) #0 {
define internal i32 @print_bin(%struct.bio_st* %fp, i8* %name, i8* %buf, i64 %len, i32 %off) #0 {
define dso_local i32 @EC_KEY_print_fp(%struct._IO_FILE* %fp, %struct.ec_key_st* %x, i32 %off) #0 {
define dso_local i32 @EC_KEY_print(%struct.bio_st* %bp, %struct.ec_key_st* %x, i32 %off) #0 {
define dso_local i32 @ECParameters_print_fp(%struct._IO_FILE* %fp, %struct.ec_key_st* %x) #0 {
define dso_local i32 @ECParameters_print(%struct.bio_st* %bp, %struct.ec_key_st* %x) #0 {
define dso_local i32 @ec_GFp_simple_set_compressed_coordinates(%struct.ec_group_st.11481* %group, %struct.ec_point_st.11477* %point, %struct.bignum_st* %x_, i32 %y_bit, %struct.bignum_ctx* %ctx) #0 {
define dso_local i64 @ec_GFp_simple_point2oct(%struct.ec_group_st.11481* %group, %struct.ec_point_st.11477* %point, i32 %form, i8* %buf, i64 %len, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @ec_GFp_simple_oct2point(%struct.ec_group_st.11481* %group, %struct.ec_point_st.11477* %point, i8* %buf, i64 %len, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @ec_GF2m_simple_set_compressed_coordinates(%struct.ec_group_st.11481* %group, %struct.ec_point_st.11477* %point, %struct.bignum_st* %x_, i32 %y_bit, %struct.bignum_ctx* %ctx) #0 {
define dso_local i64 @ec_GF2m_simple_point2oct(%struct.ec_group_st.11481* %group, %struct.ec_point_st.11477* %point, i32 %form, i8* %buf, i64 %len, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @ec_GF2m_simple_oct2point(%struct.ec_group_st.11481* %group, %struct.ec_point_st.11477* %point, i8* %buf, i64 %len, %struct.bignum_ctx* %ctx) #0 {
define dso_local %struct.rsa_meth_st* @RSA_PKCS1_SSLeay() #0 {
define internal i32 @RSA_eay_public_encrypt(i32 %flen, i8* %from, i8* %to, %struct.rsa_st* %rsa, i32 %padding) #0 {
define internal i32 @RSA_eay_public_decrypt(i32 %flen, i8* %from, i8* %to, %struct.rsa_st* %rsa, i32 %padding) #0 {
define internal i32 @RSA_eay_private_encrypt(i32 %flen, i8* %from, i8* %to, %struct.rsa_st* %rsa, i32 %padding) #0 {
define internal i32 @RSA_eay_private_decrypt(i32 %flen, i8* %from, i8* %to, %struct.rsa_st* %rsa, i32 %padding) #0 {
define internal i32 @RSA_eay_mod_exp(%struct.bignum_st* %r0, %struct.bignum_st* %I, %struct.rsa_st* %rsa, %struct.bignum_ctx* %ctx) #0 {
define internal i32 @RSA_eay_init(%struct.rsa_st* %rsa) #0 {
define internal i32 @RSA_eay_finish(%struct.rsa_st* %rsa) #0 {
define internal %struct.bn_blinding_st* @rsa_get_blinding(%struct.rsa_st* %rsa, i32* %local, %struct.bignum_ctx* %ctx) #0 {
define internal i32 @rsa_blinding_convert(%struct.bn_blinding_st* %b, %struct.bignum_st* %f, %struct.bignum_st* %unblind, %struct.bignum_ctx* %ctx) #0 {
define internal i32 @rsa_blinding_invert(%struct.bn_blinding_st* %b, %struct.bignum_st* %f, %struct.bignum_st* %unblind, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @RSA_generate_key_ex(%struct.rsa_st.15520* %rsa, i32 %bits, %struct.bignum_st* %e_value, %struct.bn_gencb_st* %cb) #0 {
define internal i32 @rsa_builtin_keygen(%struct.rsa_st.15520* %rsa, i32 %bits, %struct.bignum_st* %e_value, %struct.bn_gencb_st* %cb) #0 {
define dso_local void @ERR_load_RSA_strings() #0 {
define dso_local i32 @RSA_padding_add_PKCS1_type_1(i8* %to, i32 %tlen, i8* %from, i32 %flen) #0 {
define dso_local i32 @RSA_padding_check_PKCS1_type_1(i8* %to, i32 %tlen, i8* %from, i32 %flen, i32 %num) #0 {
define dso_local i32 @RSA_padding_add_PKCS1_type_2(i8* %to, i32 %tlen, i8* %from, i32 %flen) #0 {
define dso_local i32 @RSA_padding_check_PKCS1_type_2(i8* %to, i32 %tlen, i8* %from, i32 %flen, i32 %num) #0 {
define internal i32 @constant_time_is_zero.8473(i32 %a) #4 {
define internal i32 @constant_time_eq.8474(i32 %a, i32 %b) #4 {
define internal i32 @constant_time_select_int.8475(i32 %mask, i32 %a, i32 %b) #4 {
define internal i32 @constant_time_ge.8476(i32 %a, i32 %b) #4 {
define internal i32 @constant_time_lt.8477(i32 %a, i32 %b) #4 {
define internal zeroext i8 @constant_time_select_8.8478(i8 zeroext %mask, i8 zeroext %a, i8 zeroext %b) #4 {
define internal i32 @constant_time_select.8479(i32 %mask, i32 %a, i32 %b) #4 {
define internal i32 @constant_time_msb.8480(i32 %a) #4 {
define dso_local i32 @RSA_padding_add_SSLv23(i8* %to, i32 %tlen, i8* %from, i32 %flen) #0 {
define dso_local i32 @RSA_padding_check_SSLv23(i8* %to, i32 %tlen, i8* %from, i32 %flen, i32 %num) #0 {
define internal i32 @constant_time_is_zero.8486(i32 %a) #4 {
define internal i32 @constant_time_eq.8487(i32 %a, i32 %b) #4 {
define internal i32 @constant_time_select_int.8488(i32 %mask, i32 %a, i32 %b) #4 {
define internal i32 @constant_time_ge.8489(i32 %a, i32 %b) #4 {
define internal i32 @constant_time_lt.8490(i32 %a, i32 %b) #4 {
define internal zeroext i8 @constant_time_select_8.8491(i8 zeroext %mask, i8 zeroext %a, i8 zeroext %b) #4 {
define internal i32 @constant_time_select.8492(i32 %mask, i32 %a, i32 %b) #4 {
define internal i32 @constant_time_msb.8493(i32 %a) #4 {
define dso_local i32 @RSA_padding_add_none(i8* %to, i32 %tlen, i8* %from, i32 %flen) #0 {
define dso_local i32 @RSA_padding_check_none(i8* %to, i32 %tlen, i8* %from, i32 %flen, i32 %num) #0 {
define dso_local i32 @RSA_padding_add_PKCS1_OAEP(i8* %to, i32 %tlen, i8* %from, i32 %flen, i8* %param, i32 %plen) #0 {
define dso_local i32 @RSA_padding_add_PKCS1_OAEP_mgf1(i8* %to, i32 %tlen, i8* %from, i32 %flen, i8* %param, i32 %plen, %struct.env_md_st* %md, %struct.env_md_st* %mgf1md) #0 {
define dso_local i32 @PKCS1_MGF1(i8* %mask, i64 %len, i8* %seed, i64 %seedlen, %struct.env_md_st* %dgst) #0 {
define dso_local i32 @RSA_padding_check_PKCS1_OAEP(i8* %to, i32 %tlen, i8* %from, i32 %flen, i32 %num, i8* %param, i32 %plen) #0 {
define dso_local i32 @RSA_padding_check_PKCS1_OAEP_mgf1(i8* %to, i32 %tlen, i8* %from, i32 %flen, i32 %num, i8* %param, i32 %plen, %struct.env_md_st* %md, %struct.env_md_st* %mgf1md) #0 {
define internal i32 @constant_time_is_zero.8502(i32 %a) #4 {
define internal i32 @constant_time_eq.8503(i32 %a, i32 %b) #4 {
define internal i32 @constant_time_select_int.8504(i32 %mask, i32 %a, i32 %b) #4 {
define internal i32 @constant_time_ge.8505(i32 %a, i32 %b) #4 {
define internal i32 @constant_time_lt.8506(i32 %a, i32 %b) #4 {
define internal zeroext i8 @constant_time_select_8.8507(i8 zeroext %mask, i8 zeroext %a, i8 zeroext %b) #4 {
define internal i32 @constant_time_select.8508(i32 %mask, i32 %a, i32 %b) #4 {
define internal i32 @constant_time_msb.8509(i32 %a) #4 {
define dso_local i32 @RSA_padding_add_X931(i8* %to, i32 %tlen, i8* %from, i32 %flen) #0 {
define dso_local i32 @RSA_padding_check_X931(i8* %to, i32 %tlen, i8* %from, i32 %flen, i32 %num) #0 {
define dso_local i32 @RSA_X931_hash_id(i32 %nid) #0 {
define internal i32 @rsa_pub_decode(%struct.evp_pkey_st.15547* %pkey, %struct.X509_pubkey_st.15532* %pubkey) #0 {
define internal i32 @rsa_pub_encode(%struct.X509_pubkey_st.15532* %pk, %struct.evp_pkey_st.15547* %pkey) #0 {
define internal i32 @rsa_pub_cmp(%struct.evp_pkey_st.15547* %a, %struct.evp_pkey_st.15547* %b) #0 {
define internal i32 @rsa_pub_print(%struct.bio_st* %bp, %struct.evp_pkey_st.15547* %pkey, i32 %indent, %struct.asn1_pctx_st* %ctx) #0 {
define internal i32 @rsa_priv_decode(%struct.evp_pkey_st.15547* %pkey, %struct.pkcs8_priv_key_info_st* %p8) #0 {
define internal i32 @rsa_priv_encode(%struct.pkcs8_priv_key_info_st* %p8, %struct.evp_pkey_st.15547* %pkey) #0 {
define internal i32 @rsa_priv_print(%struct.bio_st* %bp, %struct.evp_pkey_st.15547* %pkey, i32 %indent, %struct.asn1_pctx_st* %ctx) #0 {
define internal i32 @int_rsa_size(%struct.evp_pkey_st.15547* %pkey) #0 {
define internal i32 @rsa_bits(%struct.evp_pkey_st.15547* %pkey) #0 {
define internal i32 @rsa_sig_print(%struct.bio_st* %bp, %struct.X509_algor_st* %sigalg, %struct.asn1_string_st* %sig, i32 %indent, %struct.asn1_pctx_st* %pctx) #0 {
define internal void @int_rsa_free(%struct.evp_pkey_st.15547* %pkey) #0 {
define internal i32 @rsa_pkey_ctrl(%struct.evp_pkey_st.15547* %pkey, i32 %op, i64 %arg1, i8* %arg2) #0 {
define internal i32 @old_rsa_priv_decode(%struct.evp_pkey_st.15547* %pkey, i8** %pder, i32 %derlen) #0 {
define internal i32 @old_rsa_priv_encode(%struct.evp_pkey_st.15547* %pkey, i8** %pder) #0 {
define internal i32 @rsa_item_verify(%struct.env_md_ctx_st.15542* %ctx, %struct.ASN1_ITEM_st* %it, i8* %asn, %struct.X509_algor_st* %sigalg, %struct.asn1_string_st* %sig, %struct.evp_pkey_st.15547* %pkey) #0 {
define internal i32 @rsa_item_sign(%struct.env_md_ctx_st.15542* %ctx, %struct.ASN1_ITEM_st* %it, i8* %asn, %struct.X509_algor_st* %alg1, %struct.X509_algor_st* %alg2, %struct.asn1_string_st* %sig) #0 {
define internal %struct.asn1_string_st* @rsa_ctx_to_pss(%struct.evp_pkey_ctx_st.12607* %pkctx) #0 {
define internal i32 @rsa_md_to_algor(%struct.X509_algor_st** %palg, %struct.env_md_st.15539* %md) #0 {
define internal i32 @rsa_md_to_mgf1(%struct.X509_algor_st** %palg, %struct.env_md_st.15539* %mgf1md) #0 {
define internal i32 @rsa_pss_to_ctx(%struct.env_md_ctx_st.15542* %ctx, %struct.evp_pkey_ctx_st.12607* %pkctx, %struct.X509_algor_st* %sigalg, %struct.evp_pkey_st.15547* %pkey) #0 {
define internal %struct.rsa_pss_params_st* @rsa_pss_decode(%struct.X509_algor_st* %alg, %struct.X509_algor_st** %pmaskHash) #0 {
define internal %struct.env_md_st.15539* @rsa_mgf1_to_md(%struct.X509_algor_st* %alg, %struct.X509_algor_st* %maskHash) #0 {
define internal %struct.env_md_st.15539* @rsa_algor_to_md(%struct.X509_algor_st* %alg) #0 {
define internal %struct.X509_algor_st* @rsa_mgf1_decode(%struct.X509_algor_st* %alg) #0 {
define internal i32 @rsa_cms_sign(%struct.CMS_SignerInfo_st* %si) #0 {
define internal i32 @rsa_cms_verify(%struct.CMS_SignerInfo_st* %si) #0 {
define internal i32 @rsa_cms_encrypt(%struct.CMS_RecipientInfo_st* %ri) #0 {
define internal i32 @rsa_cms_decrypt(%struct.CMS_RecipientInfo_st* %ri) #0 {
define internal %struct.rsa_oaep_params_st* @rsa_oaep_decode(%struct.X509_algor_st* %alg, %struct.X509_algor_st** %pmaskHash) #0 {
define internal i32 @rsa_pss_param_print(%struct.bio_st* %bp, %struct.rsa_pss_params_st* %pss, %struct.X509_algor_st* %maskHash, i32 %indent) #0 {
define internal i32 @do_rsa_print(%struct.bio_st* %bp, %struct.rsa_st* %x, i32 %off, i32 %priv) #0 {
define internal void @update_buflen.8534(%struct.bignum_st* %b, i64* %pbuflen) #0 {
define internal i32 @pkey_rsa_init(%struct.evp_pkey_ctx_st.12624* %ctx) #0 {
define internal i32 @pkey_rsa_copy(%struct.evp_pkey_ctx_st.12624* %dst, %struct.evp_pkey_ctx_st.12624* %src) #0 {
define internal void @pkey_rsa_cleanup(%struct.evp_pkey_ctx_st.12624* %ctx) #0 {
define internal i32 @pkey_rsa_keygen(%struct.evp_pkey_ctx_st.12624* %ctx, %struct.evp_pkey_st.12512* %pkey) #0 {
define internal i32 @pkey_rsa_sign(%struct.evp_pkey_ctx_st.12624* %ctx, i8* %sig, i64* %siglen, i8* %tbs, i64 %tbslen) #0 {
define internal i32 @pkey_rsa_verify(%struct.evp_pkey_ctx_st.12624* %ctx, i8* %sig, i64 %siglen, i8* %tbs, i64 %tbslen) #0 {
define internal i32 @pkey_rsa_verifyrecover(%struct.evp_pkey_ctx_st.12624* %ctx, i8* %rout, i64* %routlen, i8* %sig, i64 %siglen) #0 {
define internal i32 @pkey_rsa_encrypt(%struct.evp_pkey_ctx_st.12624* %ctx, i8* %out, i64* %outlen, i8* %in, i64 %inlen) #0 {
define internal i32 @pkey_rsa_decrypt(%struct.evp_pkey_ctx_st.12624* %ctx, i8* %out, i64* %outlen, i8* %in, i64 %inlen) #0 {
define internal i32 @pkey_rsa_ctrl(%struct.evp_pkey_ctx_st.12624* %ctx, i32 %type, i32 %p1, i8* %p2) #0 {
define internal i32 @pkey_rsa_ctrl_str(%struct.evp_pkey_ctx_st.12624* %ctx, i8* %type, i8* %value) #0 {
define internal i32 @check_padding_md(%struct.env_md_st.12621* %md, i32 %padding) #0 {
define internal i32 @setup_tbuf(%struct.RSA_PKEY_CTX* %ctx, %struct.evp_pkey_ctx_st.12624* %pk) #0 {
define dso_local void @ECDSA_set_default_method(%struct.ecdsa_method* %meth) #0 {
define dso_local %struct.ecdsa_method* @ECDSA_get_default_method() #0 {
define dso_local i32 @ECDSA_set_method(%struct.ec_key_st* %eckey, %struct.ecdsa_method* %meth) #0 {
define dso_local %struct.ecdsa_data_st* @ecdsa_check(%struct.ec_key_st* %key) #0 {
define internal i8* @ecdsa_data_dup(i8* %data) #0 {
define internal void @ecdsa_data_free(i8* %data) #0 {
define internal i8* @ecdsa_data_new() #0 {
define internal %struct.ecdsa_data_st* @ECDSA_DATA_new_method(%struct.engine_st* %engine) #0 {
define dso_local i32 @ECDSA_size(%struct.ec_key_st* %r) #0 {
define dso_local i32 @ECDSA_get_ex_new_index(i64 %argl, i8* %argp, i32 (i8*, i8*, %struct.crypto_ex_data_st*, i32, i64, i8*)* %new_func, i32 (%struct.crypto_ex_data_st*, %struct.crypto_ex_data_st*, i8*, i32, i64, i8*)* %dup_func, void (i8*, i8*, %struct.crypto_ex_data_st*, i32, i64, i8*)* %free_func) #0 {
define dso_local i32 @ECDSA_set_ex_data(%struct.ec_key_st* %d, i32 %idx, i8* %arg) #0 {
define dso_local i8* @ECDSA_get_ex_data(%struct.ec_key_st* %d, i32 %idx) #0 {
define dso_local %struct.ecdsa_method* @ECDSA_METHOD_new(%struct.ecdsa_method* %ecdsa_meth) #0 {
define dso_local void @ECDSA_METHOD_set_sign(%struct.ecdsa_method* %ecdsa_method, %struct.ECDSA_SIG_st* (i8*, i32, %struct.bignum_st*, %struct.bignum_st*, %struct.ec_key_st*)* %ecdsa_do_sign) #0 {
define dso_local void @ECDSA_METHOD_set_sign_setup(%struct.ecdsa_method* %ecdsa_method, i32 (%struct.ec_key_st*, %struct.bignum_ctx*, %struct.bignum_st**, %struct.bignum_st**)* %ecdsa_sign_setup) #0 {
define dso_local void @ECDSA_METHOD_set_verify(%struct.ecdsa_method* %ecdsa_method, i32 (i8*, i32, %struct.ECDSA_SIG_st*, %struct.ec_key_st*)* %ecdsa_do_verify) #0 {
define dso_local void @ECDSA_METHOD_set_flags(%struct.ecdsa_method* %ecdsa_method, i32 %flags) #0 {
define dso_local void @ECDSA_METHOD_set_name(%struct.ecdsa_method* %ecdsa_method, i8* %name) #0 {
define dso_local void @ECDSA_METHOD_free(%struct.ecdsa_method* %ecdsa_method) #0 {
define dso_local void @ECDSA_METHOD_set_app_data(%struct.ecdsa_method* %ecdsa_method, i8* %app) #0 {
define dso_local i8* @ECDSA_METHOD_get_app_data(%struct.ecdsa_method* %ecdsa_method) #0 {
define dso_local %struct.ECDSA_SIG_st* @d2i_ECDSA_SIG(%struct.ECDSA_SIG_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_ECDSA_SIG(%struct.ECDSA_SIG_st* %a, i8** %out) #0 {
define dso_local %struct.ECDSA_SIG_st* @ECDSA_SIG_new() #0 {
define dso_local void @ECDSA_SIG_free(%struct.ECDSA_SIG_st* %a) #0 {
define dso_local %struct.ecdsa_method* @ECDSA_OpenSSL() #0 {
define internal %struct.ECDSA_SIG_st* @ecdsa_do_sign(i8* %dgst, i32 %dgst_len, %struct.bignum_st* %in_kinv, %struct.bignum_st* %in_r, %struct.ec_key_st* %eckey) #0 {
define internal i32 @ecdsa_sign_setup(%struct.ec_key_st* %eckey, %struct.bignum_ctx* %ctx_in, %struct.bignum_st** %kinvp, %struct.bignum_st** %rp) #0 {
define internal i32 @ecdsa_do_verify(i8* %dgst, i32 %dgst_len, %struct.ECDSA_SIG_st* %sig, %struct.ec_key_st* %eckey) #0 {
define dso_local void @ERR_load_ECDSA_strings() #0 {
define dso_local %struct.dh_st* @d2i_DHparams(%struct.dh_st** %a, i8** %in, i64 %len) #0 {
define internal i32 @dh_cb(i32 %operation, %struct.ASN1_VALUE_st** %pval, %struct.ASN1_ITEM_st* %it, i8* %exarg) #0 {
define dso_local i32 @i2d_DHparams(%struct.dh_st* %a, i8** %out) #0 {
define dso_local %struct.int_dhx942_dh* @d2i_int_dhx(%struct.int_dhx942_dh** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_int_dhx(%struct.int_dhx942_dh* %a, i8** %out) #0 {
define dso_local %struct.dh_st* @d2i_DHxparams(%struct.dh_st** %a, i8** %pp, i64 %length) #0 {
define dso_local i32 @i2d_DHxparams(%struct.dh_st* %dh, i8** %pp) #0 {
define dso_local void @ERR_load_DH_strings() #0 {
define internal i32 @pkey_dh_init(%struct.evp_pkey_ctx_st.12624* %ctx) #0 {
define internal i32 @pkey_dh_copy(%struct.evp_pkey_ctx_st.12624* %dst, %struct.evp_pkey_ctx_st.12624* %src) #0 {
define internal void @pkey_dh_cleanup(%struct.evp_pkey_ctx_st.12624* %ctx) #0 {
define internal i32 @pkey_dh_paramgen(%struct.evp_pkey_ctx_st.12624* %ctx, %struct.evp_pkey_st.12512* %pkey) #0 {
define internal i32 @pkey_dh_keygen(%struct.evp_pkey_ctx_st.12624* %ctx, %struct.evp_pkey_st.12512* %pkey) #0 {
define internal i32 @pkey_dh_derive(%struct.evp_pkey_ctx_st.12624* %ctx, i8* %key, i64* %keylen) #0 {
define internal i32 @pkey_dh_ctrl(%struct.evp_pkey_ctx_st.12624* %ctx, i32 %type, i32 %p1, i8* %p2) #0 {
define internal i32 @pkey_dh_ctrl_str(%struct.evp_pkey_ctx_st.12624* %ctx, i8* %type, i8* %value) #0 {
define dso_local %struct.dh_st* @DH_get_1024_160() #0 {
define dso_local %struct.dh_st* @DH_get_2048_224() #0 {
define dso_local %struct.dh_st* @DH_get_2048_256() #0 {
define dso_local i32 @DH_KDF_X9_42(i8* %out, i64 %outlen, i8* %Z, i64 %Zlen, %struct.asn1_object_st* %key_oid, i8* %ukm, i64 %ukmlen, %struct.env_md_st.12621* %md) #0 {
define internal i32 @dh_sharedinfo_encode(i8** %pder, i8** %pctr, %struct.asn1_object_st* %key_oid, i64 %outlen, i8* %ukm, i64 %ukmlen) #0 {
define internal i32 @skip_asn1(i8** %pp, i64* %plen, i32 %exptag) #0 {
define dso_local void @ECDH_set_default_method(%struct.ecdh_method* %meth) #0 {
define dso_local %struct.ecdh_method* @ECDH_get_default_method() #0 {
define dso_local i32 @ECDH_set_method(%struct.ec_key_st* %eckey, %struct.ecdh_method* %meth) #0 {
define dso_local %struct.ecdh_data_st* @ecdh_check(%struct.ec_key_st* %key) #0 {
define internal i8* @ecdh_data_dup(i8* %data) #0 {
define internal void @ecdh_data_free(i8* %data) #0 {
define internal i8* @ecdh_data_new() #0 {
define internal %struct.ecdh_data_st* @ECDH_DATA_new_method(%struct.engine_st* %engine) #0 {
define dso_local i32 @ECDH_get_ex_new_index(i64 %argl, i8* %argp, i32 (i8*, i8*, %struct.crypto_ex_data_st*, i32, i64, i8*)* %new_func, i32 (%struct.crypto_ex_data_st*, %struct.crypto_ex_data_st*, i8*, i32, i64, i8*)* %dup_func, void (i8*, i8*, %struct.crypto_ex_data_st*, i32, i64, i8*)* %free_func) #0 {
define dso_local i32 @ECDH_set_ex_data(%struct.ec_key_st* %d, i32 %idx, i8* %arg) #0 {
define dso_local i8* @ECDH_get_ex_data(%struct.ec_key_st* %d, i32 %idx) #0 {
define dso_local %struct.ecdh_method* @ECDH_OpenSSL() #0 {
define internal i32 @ecdh_compute_key(i8* %out, i64 %outlen, %struct.ec_point_st* %pub_key, %struct.ec_key_st* %ecdh, i8* (i8*, i64, i8*, i64*)* %KDF) #0 {
define dso_local void @ERR_load_ECDH_strings() #0 {
define dso_local i32 @ECDH_KDF_X9_62(i8* %out, i64 %outlen, i8* %Z, i64 %Zlen, i8* %sinfo, i64 %sinfolen, %struct.env_md_st.15458* %md) #0 {
define dso_local void @ERR_load_DSO_strings() #0 {
define dso_local %struct.dso_st* @DSO_new() #0 {
define dso_local %struct.dso_st* @DSO_new_method(%struct.dso_meth_st* %meth) #0 {
define dso_local void @DSO_set_default_method(%struct.dso_meth_st* %meth) #0 {
define dso_local %struct.dso_meth_st* @DSO_get_default_method() #0 {
define dso_local %struct.dso_meth_st* @DSO_get_method(%struct.dso_st* %dso) #0 {
define dso_local %struct.dso_meth_st* @DSO_set_method(%struct.dso_st* %dso, %struct.dso_meth_st* %meth) #0 {
define dso_local i32 @DSO_free(%struct.dso_st* %dso) #0 {
define dso_local i32 @DSO_flags(%struct.dso_st* %dso) #0 {
define dso_local i32 @DSO_up_ref(%struct.dso_st* %dso) #0 {
define dso_local %struct.dso_st* @DSO_load(%struct.dso_st* %dso, i8* %filename, %struct.dso_meth_st* %meth, i32 %flags) #0 {
define dso_local i64 @DSO_ctrl(%struct.dso_st* %dso, i32 %cmd, i64 %larg, i8* %parg) #0 {
define dso_local i32 @DSO_set_filename(%struct.dso_st* %dso, i8* %filename) #0 {
define dso_local i8* @DSO_bind_var(%struct.dso_st* %dso, i8* %symname) #0 {
define dso_local void ()* @DSO_bind_func(%struct.dso_st* %dso, i8* %symname) #0 {
define dso_local i32 @DSO_set_name_converter(%struct.dso_st* %dso, i8* (%struct.dso_st*, i8*)* %cb, i8* (%struct.dso_st*, i8*)** %oldcb) #0 {
define dso_local i8* @DSO_get_filename(%struct.dso_st* %dso) #0 {
define dso_local i8* @DSO_merge(%struct.dso_st* %dso, i8* %filespec1, i8* %filespec2) #0 {
define dso_local i8* @DSO_convert_filename(%struct.dso_st* %dso, i8* %filename) #0 {
define dso_local i8* @DSO_get_loaded_filename(%struct.dso_st* %dso) #0 {
define dso_local i32 @DSO_pathbyaddr(i8* %addr, i8* %path, i32 %sz) #0 {
define dso_local i8* @DSO_global_lookup(i8* %name) #0 {
define dso_local %struct.dso_meth_st* @DSO_METHOD_openssl() #0 {
define dso_local void @ERR_load_ENGINE_strings() #0 {
define dso_local i32 @ENGINE_get_table_flags() #0 {
define dso_local void @ENGINE_set_table_flags(i32 %flags) #0 {
define dso_local i32 @engine_table_register(%struct.st_engine_table** %table, void ()* %cleanup, %struct.engine_st* %e, i32* %nids, i32 %num_nids, i32 %setdefault) #0 {
define internal i32 @int_table_check(%struct.st_engine_table** %t, i32 %create) #0 {
define internal i64 @engine_pile_LHASH_HASH(i8* %arg) #0 {
define internal i32 @engine_pile_LHASH_COMP(i8* %arg1, i8* %arg2) #0 {
define internal i32 @engine_pile_cmp(%struct.st_engine_pile* %a, %struct.st_engine_pile* %b) #0 {
define internal i64 @engine_pile_hash(%struct.st_engine_pile* %c) #0 {
define dso_local void @engine_table_unregister(%struct.st_engine_table** %table, %struct.engine_st* %e) #0 {
define internal void @int_unregister_cb_LHASH_DOALL_ARG(i8* %arg1, i8* %arg2) #0 {
define internal void @int_unregister_cb_doall_arg(%struct.st_engine_pile* %pile, %struct.engine_st* %e) #0 {
define dso_local void @engine_table_cleanup(%struct.st_engine_table** %table) #0 {
define internal void @int_cleanup_cb_LHASH_DOALL(i8* %arg) #0 {
define internal void @int_cleanup_cb_doall(%struct.st_engine_pile* %p) #0 {
define dso_local %struct.engine_st* @engine_table_select(%struct.st_engine_table** %table, i32 %nid) #0 {
define dso_local void @engine_table_doall(%struct.st_engine_table* %table, void (i32, %struct.stack_st_SSL_CIPHER*, %struct.engine_st*, i8*)* %cb, i8* %arg) #0 {
define internal void @int_cb_LHASH_DOALL_ARG(i8* %arg1, i8* %arg2) #0 {
define internal void @int_cb_doall_arg(%struct.st_engine_pile* %pile, %struct.st_engine_pile_doall* %dall) #0 {
define dso_local void @ENGINE_load_builtin_engines() #0 {
define dso_local void @ENGINE_load_dynamic() #0 {
define internal %struct.engine_st* @engine_dynamic() #0 {
define internal i32 @dynamic_init(%struct.engine_st* %e) #0 {
define internal i32 @dynamic_finish(%struct.engine_st* %e) #0 {
define internal i32 @dynamic_ctrl(%struct.engine_st* %e, i32 %cmd, i64 %i, i8* %p, void ()* %f) #0 {
define internal %struct.st_dynamic_data_ctx* @dynamic_get_data_ctx(%struct.engine_st* %e) #0 {
define internal i32 @dynamic_load(%struct.engine_st* %e, %struct.st_dynamic_data_ctx* %ctx) #0 {
define internal i32 @int_load(%struct.st_dynamic_data_ctx* %ctx) #0 {
define internal void @dynamic_data_ctx_free_func(i8* %parent, i8* %ptr, %struct.crypto_ex_data_st* %ad, i32 %idx, i64 %argl, i8* %argp) #0 {
define internal i32 @dynamic_set_data_ctx(%struct.engine_st* %e, %struct.st_dynamic_data_ctx** %ctx) #0 {
define internal void @int_free_str(i8* %s) #0 {
define dso_local void @ENGINE_load_rdrand() #0 {
define dso_local void @ERR_load_BUF_strings() #0 {
define dso_local void @ERR_load_BIO_strings() #0 {
define dso_local %struct.bio_method_st* @BIO_s_null() #0 {
define internal i32 @null_write(%struct.bio_st* %b, i8* %in, i32 %inl) #0 {
define internal i32 @null_read(%struct.bio_st* %b, i8* %out, i32 %outl) #0 {
define internal i32 @null_puts(%struct.bio_st* %bp, i8* %str) #0 {
define internal i32 @null_gets(%struct.bio_st* %bp, i8* %buf, i32 %size) #0 {
define internal i64 @null_ctrl(%struct.bio_st* %b, i32 %cmd, i64 %num, i8* %ptr) #0 {
define internal i32 @null_new(%struct.bio_st* %bi) #0 {
define internal i32 @null_free(%struct.bio_st* %a) #0 {
define dso_local i32 @BIO_dump_cb(i32 (i8*, i64, i8*)* %cb, i8* %u, i8* %s, i32 %len) #0 {
define dso_local i32 @BIO_dump_indent_cb(i32 (i8*, i64, i8*)* %cb, i8* %u, i8* %s, i32 %len, i32 %indent) #0 {
define dso_local i32 @BIO_dump_fp(%struct._IO_FILE* %fp, i8* %s, i32 %len) #0 {
define internal i32 @write_fp(i8* %data, i64 %len, i8* %fp) #0 {
define dso_local i32 @BIO_dump_indent_fp(%struct._IO_FILE* %fp, i8* %s, i32 %len, i32 %indent) #0 {
define dso_local i32 @BIO_dump(%struct.bio_st.15813* %bp, i8* %s, i32 %len) #0 {
define internal i32 @write_bio(i8* %data, i64 %len, i8* %bp) #0 {
define dso_local i32 @BIO_dump_indent(%struct.bio_st.15813* %bp, i8* %s, i32 %len, i32 %indent) #0 {
define dso_local i32 @BIO_hex_string(%struct.bio_st.15813* %out, i32 %indent, i32 %width, i8* %data, i32 %datalen) #0 {
define dso_local %struct.rand_meth_st* @RAND_SSLeay() #0 {
define internal void @ssleay_rand_seed(i8* %buf, i32 %num) #0 {
define internal i32 @ssleay_rand_nopseudo_bytes(i8* %buf, i32 %num) #0 {
define internal void @ssleay_rand_cleanup() #0 {
define internal void @ssleay_rand_add(i8* %buf, i32 %num, double %add) #0 {
define internal i32 @ssleay_rand_pseudo_bytes(i8* %buf, i32 %num) #0 {
define internal i32 @ssleay_rand_status() #0 {
define dso_local i32 @ssleay_rand_bytes(i8* %buf, i32 %num, i32 %pseudo, i32 %lock) #0 {
define dso_local i32 @ssleay_rand_bytes_from_system(i8* %buf, i32 %num) #0 {
define dso_local void @ERR_load_RAND_strings() #0 {
define dso_local i32 @RAND_poll() #0 {
define dso_local void @ERR_print_errors_cb(i32 (i8*, i64, i8*)* %cb, i8* %u) #0 {
define dso_local void @ERR_print_errors_fp(%struct._IO_FILE* %fp) #0 {
define internal i32 @print_fp(i8* %str, i64 %len, i8* %fp) #0 {
define dso_local void @ERR_print_errors(%struct.bio_st* %bp) #0 {
define internal i32 @print_bio(i8* %str, i64 %len, i8* %bp) #0 {
define dso_local void @EVP_EncodeInit(%struct.evp_Encode_Ctx_st* %ctx) #0 {
define dso_local void @EVP_EncodeUpdate(%struct.evp_Encode_Ctx_st* %ctx, i8* %out, i32* %outl, i8* %in, i32 %inl) #0 {
define dso_local i32 @EVP_EncodeBlock(i8* %t, i8* %f, i32 %dlen) #0 {
define dso_local void @EVP_EncodeFinal(%struct.evp_Encode_Ctx_st* %ctx, i8* %out, i32* %outl) #0 {
define dso_local void @EVP_DecodeInit(%struct.evp_Encode_Ctx_st* %ctx) #0 {
define dso_local i32 @EVP_DecodeUpdate(%struct.evp_Encode_Ctx_st* %ctx, i8* %out, i32* %outl, i8* %in, i32 %inl) #0 {
define internal zeroext i8 @conv_ascii2bin(i8 zeroext %a) #0 {
define dso_local i32 @EVP_DecodeBlock(i8* %t, i8* %f, i32 %n) #0 {
define dso_local i32 @EVP_DecodeFinal(%struct.evp_Encode_Ctx_st* %ctx, i8* %out, i32* %outl) #0 {
define dso_local void @EVP_set_pw_prompt(i8* %prompt) #0 {
define dso_local i8* @EVP_get_pw_prompt() #0 {
define dso_local i32 @EVP_read_pw_string(i8* %buf, i32 %len, i8* %prompt, i32 %verify) #0 {
define dso_local i32 @EVP_read_pw_string_min(i8* %buf, i32 %min, i32 %len, i8* %prompt, i32 %verify) #0 {
define dso_local i32 @EVP_BytesToKey(%struct.evp_cipher_st* %type, %struct.env_md_st* %md, i8* %salt, i8* %data, i32 %datal, i32 %count, i8* %key, i8* %iv) #0 {
define dso_local %struct.env_md_st* @EVP_md4() #0 {
define internal i32 @init.9033(%struct.env_md_ctx_st* %ctx) #0 {
define internal i32 @update.9034(%struct.env_md_ctx_st* %ctx, i8* %data, i64 %count) #0 {
define internal i32 @final.9035(%struct.env_md_ctx_st* %ctx, i8* %md) #0 {
define dso_local %struct.env_md_st* @EVP_sha() #0 {
define internal i32 @init.9038(%struct.env_md_ctx_st* %ctx) #0 {
define internal i32 @update.9039(%struct.env_md_ctx_st* %ctx, i8* %data, i64 %count) #0 {
define internal i32 @final.9040(%struct.env_md_ctx_st* %ctx, i8* %md) #0 {
define dso_local %struct.env_md_st* @EVP_whirlpool() #0 {
define internal i32 @init.9043(%struct.env_md_ctx_st* %ctx) #0 {
define internal i32 @update.9044(%struct.env_md_ctx_st* %ctx, i8* %data, i64 %count) #0 {
define internal i32 @final.9045(%struct.env_md_ctx_st* %ctx, i8* %md) #0 {
define dso_local %struct.env_md_st* @EVP_ripemd160() #0 {
define internal i32 @init.9048(%struct.env_md_ctx_st* %ctx) #0 {
define internal i32 @update.9049(%struct.env_md_ctx_st* %ctx, i8* %data, i64 %count) #0 {
define internal i32 @final.9050(%struct.env_md_ctx_st* %ctx, i8* %md) #0 {
define dso_local %struct.bio_method_st* @BIO_f_md() #0 {
define internal i32 @md_write(%struct.bio_st* %b, i8* %in, i32 %inl) #0 {
define internal i32 @md_read(%struct.bio_st* %b, i8* %out, i32 %outl) #0 {
define internal i32 @md_gets(%struct.bio_st* %bp, i8* %buf, i32 %size) #0 {
define internal i64 @md_ctrl(%struct.bio_st* %b, i32 %cmd, i64 %num, i8* %ptr) #0 {
define internal i32 @md_new(%struct.bio_st* %bi) #0 {
define internal i32 @md_free(%struct.bio_st* %a) #0 {
define internal i64 @md_callback_ctrl(%struct.bio_st* %b, i32 %cmd, void (%struct.bio_st*, i32, i8*, i32, i64, i64)* %fp) #0 {
define dso_local %struct.bio_method_st* @BIO_f_cipher() #0 {
define internal i32 @enc_write(%struct.bio_st* %b, i8* %in, i32 %inl) #0 {
define internal i32 @enc_read(%struct.bio_st* %b, i8* %out, i32 %outl) #0 {
define internal i64 @enc_ctrl(%struct.bio_st* %b, i32 %cmd, i64 %num, i8* %ptr) #0 {
define internal i32 @enc_new(%struct.bio_st* %bi) #0 {
define internal i32 @enc_free(%struct.bio_st* %a) #0 {
define internal i64 @enc_callback_ctrl(%struct.bio_st* %b, i32 %cmd, void (%struct.bio_st*, i32, i8*, i32, i64, i64)* %fp) #0 {
define dso_local void @BIO_set_cipher(%struct.bio_st* %b, %struct.evp_cipher_st* %c, i8* %k, i8* %i, i32 %e) #0 {
define dso_local %struct.evp_pkey_st.12512* @EVP_PKCS82PKEY(%struct.pkcs8_priv_key_info_st* %p8) #0 {
define dso_local %struct.pkcs8_priv_key_info_st* @EVP_PKEY2PKCS8(%struct.evp_pkey_st.12512* %pkey) #0 {
define dso_local %struct.pkcs8_priv_key_info_st* @EVP_PKEY2PKCS8_broken(%struct.evp_pkey_st.12512* %pkey, i32 %broken) #0 {
define dso_local %struct.pkcs8_priv_key_info_st* @PKCS8_set_broken(%struct.pkcs8_priv_key_info_st* %p8, i32 %broken) #0 {
define dso_local i32 @EVP_PKEY_get_attr_count(%struct.evp_pkey_st.12512* %key) #0 {
define dso_local i32 @EVP_PKEY_get_attr_by_NID(%struct.evp_pkey_st.12512* %key, i32 %nid, i32 %lastpos) #0 {
define dso_local i32 @EVP_PKEY_get_attr_by_OBJ(%struct.evp_pkey_st.12512* %key, %struct.asn1_object_st* %obj, i32 %lastpos) #0 {
define dso_local %struct.x509_attributes_st* @EVP_PKEY_get_attr(%struct.evp_pkey_st.12512* %key, i32 %loc) #0 {
define dso_local %struct.x509_attributes_st* @EVP_PKEY_delete_attr(%struct.evp_pkey_st.12512* %key, i32 %loc) #0 {
define dso_local i32 @EVP_PKEY_add1_attr(%struct.evp_pkey_st.12512* %key, %struct.x509_attributes_st* %attr) #0 {
define dso_local i32 @EVP_PKEY_add1_attr_by_OBJ(%struct.evp_pkey_st.12512* %key, %struct.asn1_object_st* %obj, i32 %type, i8* %bytes, i32 %len) #0 {
define dso_local i32 @EVP_PKEY_add1_attr_by_NID(%struct.evp_pkey_st.12512* %key, i32 %nid, i32 %type, i8* %bytes, i32 %len) #0 {
define dso_local i32 @EVP_PKEY_add1_attr_by_txt(%struct.evp_pkey_st.12512* %key, i8* %attrname, i32 %type, i8* %bytes, i32 %len) #0 {
define dso_local i32 @ASN1_BIT_STRING_set(%struct.asn1_string_st* %x, i8* %d, i32 %len) #0 {
define dso_local i32 @i2c_ASN1_BIT_STRING(%struct.asn1_string_st* %a, i8** %pp) #0 {
define dso_local %struct.asn1_string_st* @c2i_ASN1_BIT_STRING(%struct.asn1_string_st** %a, i8** %pp, i64 %len) #0 {
define dso_local i32 @ASN1_BIT_STRING_set_bit(%struct.asn1_string_st* %a, i32 %n, i32 %value) #0 {
define dso_local i32 @ASN1_BIT_STRING_get_bit(%struct.asn1_string_st* %a, i32 %n) #0 {
define dso_local i32 @ASN1_BIT_STRING_check(%struct.asn1_string_st* %a, i8* %flags, i32 %flags_len) #0 {
define dso_local i32 @asn1_utctime_to_tm(%struct.tm* %tm, %struct.asn1_string_st* %d) #0 {
define dso_local i32 @ASN1_UTCTIME_check(%struct.asn1_string_st* %d) #0 {
define dso_local i32 @ASN1_UTCTIME_set_string(%struct.asn1_string_st* %s, i8* %str) #0 {
define dso_local %struct.asn1_string_st* @ASN1_UTCTIME_set(%struct.asn1_string_st* %s, i64 %t) #0 {
define dso_local %struct.asn1_string_st* @ASN1_UTCTIME_adj(%struct.asn1_string_st* %s, i64 %t, i32 %offset_day, i64 %offset_sec) #0 {
define dso_local i32 @ASN1_UTCTIME_cmp_time_t(%struct.asn1_string_st* %s, i64 %t) #0 {
define dso_local i32 @asn1_generalizedtime_to_tm(%struct.tm* %tm, %struct.asn1_string_st* %d) #0 {
define dso_local i32 @ASN1_GENERALIZEDTIME_check(%struct.asn1_string_st* %d) #0 {
define dso_local i32 @ASN1_GENERALIZEDTIME_set_string(%struct.asn1_string_st* %s, i8* %str) #0 {
define dso_local %struct.asn1_string_st* @ASN1_GENERALIZEDTIME_set(%struct.asn1_string_st* %s, i64 %t) #0 {
define dso_local %struct.asn1_string_st* @ASN1_GENERALIZEDTIME_adj(%struct.asn1_string_st* %s, i64 %t, i32 %offset_day, i64 %offset_sec) #0 {
define dso_local %struct.asn1_string_st* @d2i_ASN1_TIME(%struct.asn1_string_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_ASN1_TIME(%struct.asn1_string_st* %a, i8** %out) #0 {
define dso_local %struct.asn1_string_st* @ASN1_TIME_new() #0 {
define dso_local void @ASN1_TIME_free(%struct.asn1_string_st* %a) #0 {
define dso_local %struct.asn1_string_st* @ASN1_TIME_set(%struct.asn1_string_st* %s, i64 %t) #0 {
define dso_local %struct.asn1_string_st* @ASN1_TIME_adj(%struct.asn1_string_st* %s, i64 %t, i32 %offset_day, i64 %offset_sec) #0 {
define dso_local i32 @ASN1_TIME_check(%struct.asn1_string_st* %t) #0 {
define dso_local %struct.asn1_string_st* @ASN1_TIME_to_generalizedtime(%struct.asn1_string_st* %t, %struct.asn1_string_st** %out) #0 {
define dso_local i32 @ASN1_TIME_set_string(%struct.asn1_string_st* %s, i8* %str) #0 {
define dso_local i32 @ASN1_TIME_diff(i32* %pday, i32* %psec, %struct.asn1_string_st* %from, %struct.asn1_string_st* %to) #0 {
define internal i32 @asn1_time_to_tm(%struct.tm* %tm, %struct.asn1_string_st* %t) #0 {
define dso_local %struct.asn1_string_st* @ASN1_OCTET_STRING_dup(%struct.asn1_string_st* %x) #0 {
define dso_local i32 @ASN1_OCTET_STRING_cmp(%struct.asn1_string_st* %a, %struct.asn1_string_st* %b) #0 {
define dso_local i32 @ASN1_OCTET_STRING_set(%struct.asn1_string_st* %x, i8* %d, i32 %len) #0 {
define dso_local i32 @ASN1_PRINTABLE_type(i8* %s, i32 %len) #0 {
define dso_local i32 @ASN1_UNIVERSALSTRING_to_string(%struct.asn1_string_st* %s) #0 {
define dso_local i32 @ASN1_i2d_fp(i32 (i8*, i8**)* %i2d, %struct._IO_FILE* %out, i8* %x) #0 {
define dso_local i32 @ASN1_i2d_bio(i32 (i8*, i8**)* %i2d, %struct.bio_st* %out, i8* %x) #0 {
define dso_local i32 @ASN1_item_i2d_fp(%struct.ASN1_ITEM_st* %it, %struct._IO_FILE* %out, i8* %x) #0 {
define dso_local i32 @ASN1_item_i2d_bio(%struct.ASN1_ITEM_st* %it, %struct.bio_st* %out, i8* %x) #0 {
define dso_local i32 @ASN1_ENUMERATED_set(%struct.asn1_string_st* %a, i64 %v) #0 {
define dso_local i64 @ASN1_ENUMERATED_get(%struct.asn1_string_st* %a) #0 {
define dso_local %struct.asn1_string_st* @BN_to_ASN1_ENUMERATED(%struct.bignum_st* %bn, %struct.asn1_string_st* %ai) #0 {
define dso_local %struct.bignum_st* @ASN1_ENUMERATED_to_BN(%struct.asn1_string_st* %ai, %struct.bignum_st* %bn) #0 {
define dso_local i32 @UTF8_getc(i8* %str, i32 %len, i64* %val) #0 {
define dso_local i32 @UTF8_putc(i8* %str, i32 %len, i64 %value) #0 {
define dso_local i32 @ASN1_sign(i32 (i8*, i8**)* %i2d, %struct.X509_algor_st* %algor1, %struct.X509_algor_st* %algor2, %struct.asn1_string_st* %signature, i8* %data, %struct.evp_pkey_st.12512* %pkey, %struct.env_md_st* %type) #0 {
define dso_local i32 @ASN1_item_sign(%struct.ASN1_ITEM_st* %it, %struct.X509_algor_st* %algor1, %struct.X509_algor_st* %algor2, %struct.asn1_string_st* %signature, i8* %asn, %struct.evp_pkey_st.12512* %pkey, %struct.env_md_st* %type) #0 {
define dso_local i32 @ASN1_item_sign_ctx(%struct.ASN1_ITEM_st* %it, %struct.X509_algor_st* %algor1, %struct.X509_algor_st* %algor2, %struct.asn1_string_st* %signature, i8* %asn, %struct.env_md_ctx_st* %ctx) #0 {
define dso_local i32 @ASN1_digest(i32 (i8*, i8**)* %i2d, %struct.env_md_st* %type, i8* %data, i8* %md, i32* %len) #0 {
define dso_local i32 @ASN1_item_digest(%struct.ASN1_ITEM_st* %it, %struct.env_md_st* %type, i8* %asn, i8* %md, i32* %len) #0 {
define dso_local i32 @ASN1_verify(i32 (i8*, i8**)* %i2d, %struct.X509_algor_st* %a, %struct.asn1_string_st* %signature, i8* %data, %struct.evp_pkey_st.16008* %pkey) #0 {
define dso_local i32 @ASN1_item_verify(%struct.ASN1_ITEM_st* %it, %struct.X509_algor_st* %a, %struct.asn1_string_st* %signature, i8* %asn, %struct.evp_pkey_st.16008* %pkey) #0 {
define dso_local i32 @ASN1_mbstring_copy(%struct.asn1_string_st** %out, i8* %in, i32 %len, i32 %inform, i64 %mask) #0 {
define dso_local i32 @ASN1_mbstring_ncopy(%struct.asn1_string_st** %out, i8* %in, i32 %len, i32 %inform, i64 %mask, i64 %minsize, i64 %maxsize) #0 {
define internal i32 @in_utf8(i64 %value, i8* %arg) #0 {
define internal i32 @traverse_string(i8* %p, i32 %len, i32 %inform, i32 (i64, i8*)* %rfunc, i8* %arg) #0 {
define internal i32 @type_str(i64 %value, i8* %arg) #0 {
define internal i32 @cpy_asc(i64 %value, i8* %arg) #0 {
define internal i32 @cpy_bmp(i64 %value, i8* %arg) #0 {
define internal i32 @cpy_univ(i64 %value, i8* %arg) #0 {
define internal i32 @out_utf8(i64 %value, i8* %arg) #0 {
define internal i32 @cpy_utf8(i64 %value, i8* %arg) #0 {
define internal i32 @is_printable(i64 %value) #0 {
define dso_local %struct.X509_val_st* @d2i_X509_VAL(%struct.X509_val_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_X509_VAL(%struct.X509_val_st* %a, i8** %out) #0 {
define dso_local %struct.X509_val_st* @X509_VAL_new() #0 {
define dso_local void @X509_VAL_free(%struct.X509_val_st* %a) #0 {
define dso_local %struct.X509_req_info_st* @d2i_X509_REQ_INFO(%struct.X509_req_info_st** %a, i8** %in, i64 %len) #0 {
define internal i32 @rinf_cb(i32 %operation, %struct.ASN1_VALUE_st** %pval, %struct.ASN1_ITEM_st* %it, i8* %exarg) #0 {
define dso_local i32 @i2d_X509_REQ_INFO(%struct.X509_req_info_st* %a, i8** %out) #0 {
define dso_local %struct.X509_req_info_st* @X509_REQ_INFO_new() #0 {
define dso_local void @X509_REQ_INFO_free(%struct.X509_req_info_st* %a) #0 {
define dso_local %struct.X509_req_st* @d2i_X509_REQ(%struct.X509_req_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_X509_REQ(%struct.X509_req_st* %a, i8** %out) #0 {
define dso_local %struct.X509_req_st* @X509_REQ_new() #0 {
define dso_local void @X509_REQ_free(%struct.X509_req_st* %a) #0 {
define dso_local %struct.X509_req_st* @X509_REQ_dup(%struct.X509_req_st* %x) #0 {
define dso_local %struct.x509_revoked_st* @d2i_X509_REVOKED(%struct.x509_revoked_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_X509_REVOKED(%struct.x509_revoked_st* %a, i8** %out) #0 {
define dso_local %struct.x509_revoked_st* @X509_REVOKED_new() #0 {
define dso_local void @X509_REVOKED_free(%struct.x509_revoked_st* %a) #0 {
define dso_local %struct.x509_revoked_st* @X509_REVOKED_dup(%struct.x509_revoked_st* %x) #0 {
define dso_local %struct.X509_crl_info_st* @d2i_X509_CRL_INFO(%struct.X509_crl_info_st** %a, i8** %in, i64 %len) #0 {
define internal i32 @crl_inf_cb(i32 %operation, %struct.ASN1_VALUE_st** %pval, %struct.ASN1_ITEM_st* %it, i8* %exarg) #0 {
define internal i32 @X509_REVOKED_cmp(%struct.x509_revoked_st** %a, %struct.x509_revoked_st** %b) #0 {
define dso_local i32 @i2d_X509_CRL_INFO(%struct.X509_crl_info_st* %a, i8** %out) #0 {
define dso_local %struct.X509_crl_info_st* @X509_CRL_INFO_new() #0 {
define dso_local void @X509_CRL_INFO_free(%struct.X509_crl_info_st* %a) #0 {
define dso_local %struct.X509_crl_st.16056* @d2i_X509_CRL(%struct.X509_crl_st.16056** %a, i8** %in, i64 %len) #0 {
define internal i32 @crl_cb(i32 %operation, %struct.ASN1_VALUE_st** %pval, %struct.ASN1_ITEM_st* %it, i8* %exarg) #0 {
define internal void @setup_idp(%struct.X509_crl_st.16056* %crl, %struct.ISSUING_DIST_POINT_st* %idp) #0 {
define internal i32 @crl_set_issuers(%struct.X509_crl_st.16056* %crl) #0 {
define internal i32 @def_crl_lookup(%struct.X509_crl_st.16056* %crl, %struct.x509_revoked_st** %ret, %struct.asn1_string_st* %serial, %struct.X509_name_st* %issuer) #0 {
define internal i32 @def_crl_verify(%struct.X509_crl_st.16056* %crl, %struct.evp_pkey_st.16008* %r) #0 {
define internal i32 @crl_revoked_issuer_match(%struct.X509_crl_st.16056* %crl, %struct.X509_name_st* %nm, %struct.x509_revoked_st* %rev) #0 {
define dso_local i32 @i2d_X509_CRL(%struct.X509_crl_st.16056* %a, i8** %out) #0 {
define dso_local %struct.X509_crl_st.16056* @X509_CRL_new() #0 {
define dso_local void @X509_CRL_free(%struct.X509_crl_st.16056* %a) #0 {
define dso_local %struct.X509_crl_st.16056* @X509_CRL_dup(%struct.X509_crl_st.16056* %x) #0 {
define dso_local i32 @X509_CRL_add0_revoked(%struct.X509_crl_st.16056* %crl, %struct.x509_revoked_st* %rev) #0 {
define dso_local i32 @X509_CRL_verify(%struct.X509_crl_st.16056* %crl, %struct.evp_pkey_st.16008* %r) #0 {
define dso_local i32 @X509_CRL_get0_by_serial(%struct.X509_crl_st.16056* %crl, %struct.x509_revoked_st** %ret, %struct.asn1_string_st* %serial) #0 {
define dso_local i32 @X509_CRL_get0_by_cert(%struct.X509_crl_st.16056* %crl, %struct.x509_revoked_st** %ret, %struct.x509_st.16078* %x) #0 {
define dso_local void @X509_CRL_set_default_method(%struct.x509_crl_method_st.16071* %meth) #0 {
define dso_local %struct.x509_crl_method_st.16071* @X509_CRL_METHOD_new(i32 (%struct.X509_crl_st.16056*)* %crl_init, i32 (%struct.X509_crl_st.16056*)* %crl_free, i32 (%struct.X509_crl_st.16056*, %struct.x509_revoked_st**, %struct.asn1_string_st*, %struct.X509_name_st*)* %crl_lookup, i32 (%struct.X509_crl_st.16056*, %struct.evp_pkey_st.16008*)* %crl_verify) #0 {
define dso_local void @X509_CRL_METHOD_free(%struct.x509_crl_method_st.16071* %m) #0 {
define dso_local void @X509_CRL_set_meth_data(%struct.X509_crl_st.16056* %crl, i8* %dat) #0 {
define dso_local i8* @X509_CRL_get_meth_data(%struct.X509_crl_st.16056* %crl) #0 {
define dso_local %struct.X509_info_st* @X509_INFO_new() #0 {
define dso_local void @X509_INFO_free(%struct.X509_info_st* %x) #0 {
define dso_local %struct.Netscape_spkac_st* @d2i_NETSCAPE_SPKAC(%struct.Netscape_spkac_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_NETSCAPE_SPKAC(%struct.Netscape_spkac_st* %a, i8** %out) #0 {
define dso_local %struct.Netscape_spkac_st* @NETSCAPE_SPKAC_new() #0 {
define dso_local void @NETSCAPE_SPKAC_free(%struct.Netscape_spkac_st* %a) #0 {
define dso_local %struct.Netscape_spki_st* @d2i_NETSCAPE_SPKI(%struct.Netscape_spki_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_NETSCAPE_SPKI(%struct.Netscape_spki_st* %a, i8** %out) #0 {
define dso_local %struct.Netscape_spki_st* @NETSCAPE_SPKI_new() #0 {
define dso_local void @NETSCAPE_SPKI_free(%struct.Netscape_spki_st* %a) #0 {
define dso_local %struct.Netscape_certificate_sequence* @d2i_NETSCAPE_CERT_SEQUENCE(%struct.Netscape_certificate_sequence** %a, i8** %in, i64 %len) #0 {
define internal i32 @nsseq_cb(i32 %operation, %struct.ASN1_VALUE_st** %pval, %struct.ASN1_ITEM_st* %it, i8* %exarg) #0 {
define dso_local i32 @i2d_NETSCAPE_CERT_SEQUENCE(%struct.Netscape_certificate_sequence* %a, i8** %out) #0 {
define dso_local %struct.Netscape_certificate_sequence* @NETSCAPE_CERT_SEQUENCE_new() #0 {
define dso_local void @NETSCAPE_CERT_SEQUENCE_free(%struct.Netscape_certificate_sequence* %a) #0 {
define dso_local i32 @i2d_PrivateKey(%struct.evp_pkey_st.12512* %a, i8** %pp) #0 {
define dso_local %struct.asn1_pctx_st* @ASN1_PCTX_new() #0 {
define dso_local void @ASN1_PCTX_free(%struct.asn1_pctx_st* %p) #0 {
define dso_local i64 @ASN1_PCTX_get_flags(%struct.asn1_pctx_st* %p) #0 {
define dso_local void @ASN1_PCTX_set_flags(%struct.asn1_pctx_st* %p, i64 %flags) #0 {
define dso_local i64 @ASN1_PCTX_get_nm_flags(%struct.asn1_pctx_st* %p) #0 {
define dso_local void @ASN1_PCTX_set_nm_flags(%struct.asn1_pctx_st* %p, i64 %flags) #0 {
define dso_local i64 @ASN1_PCTX_get_cert_flags(%struct.asn1_pctx_st* %p) #0 {
define dso_local void @ASN1_PCTX_set_cert_flags(%struct.asn1_pctx_st* %p, i64 %flags) #0 {
define dso_local i64 @ASN1_PCTX_get_oid_flags(%struct.asn1_pctx_st* %p) #0 {
define dso_local void @ASN1_PCTX_set_oid_flags(%struct.asn1_pctx_st* %p, i64 %flags) #0 {
define dso_local i64 @ASN1_PCTX_get_str_flags(%struct.asn1_pctx_st* %p) #0 {
define dso_local void @ASN1_PCTX_set_str_flags(%struct.asn1_pctx_st* %p, i64 %flags) #0 {
define dso_local i32 @ASN1_item_print(%struct.bio_st* %out, %struct.ASN1_VALUE_st* %ifld, i32 %indent, %struct.ASN1_ITEM_st* %it, %struct.asn1_pctx_st* %pctx) #0 {
define internal i32 @asn1_item_print_ctx(%struct.bio_st* %out, %struct.ASN1_VALUE_st** %fld, i32 %indent, %struct.ASN1_ITEM_st* %it, i8* %fname, i8* %sname, i32 %nohdr, %struct.asn1_pctx_st* %pctx) #0 {
define internal i32 @asn1_print_fsname(%struct.bio_st* %out, i32 %indent, i8* %fname, i8* %sname, %struct.asn1_pctx_st* %pctx) #0 {
define dso_local i32 @asn1_template_print_ctx(%struct.bio_st* %out, %struct.ASN1_VALUE_st** %fld, i32 %indent, %struct.ASN1_TEMPLATE_st* %tt, %struct.asn1_pctx_st* %pctx) #0 {
define internal i32 @asn1_primitive_print(%struct.bio_st* %out, %struct.ASN1_VALUE_st** %fld, %struct.ASN1_ITEM_st* %it, i32 %indent, i8* %fname, i8* %sname, %struct.asn1_pctx_st* %pctx) #0 {
define internal i32 @asn1_print_boolean_ctx(%struct.bio_st* %out, i32 %boolval, %struct.asn1_pctx_st* %pctx) #0 {
define internal i32 @asn1_print_integer_ctx(%struct.bio_st* %out, %struct.asn1_string_st* %str, %struct.asn1_pctx_st* %pctx) #0 {
define internal i32 @asn1_print_oid_ctx(%struct.bio_st* %out, %struct.asn1_object_st* %oid, %struct.asn1_pctx_st* %pctx) #0 {
define internal i32 @asn1_print_obstring_ctx(%struct.bio_st* %out, %struct.asn1_string_st* %str, i32 %indent, %struct.asn1_pctx_st* %pctx) #0 {
define dso_local i32 @i2a_ASN1_STRING(%struct.bio_st* %bp, %struct.asn1_string_st* %a, i32 %type) #0 {
define dso_local i32 @a2i_ASN1_STRING(%struct.bio_st* %bp, %struct.asn1_string_st* %bs, i8* %buf, i32 %size) #0 {
define dso_local i32 @i2d_X509_PKEY(%struct.private_key_st* %a, i8** %pp) #0 {
define dso_local %struct.private_key_st* @d2i_X509_PKEY(%struct.private_key_st** %a, i8** %pp, i64 %length) #0 {
define dso_local %struct.private_key_st* @X509_PKEY_new() #0 {
define dso_local void @X509_PKEY_free(%struct.private_key_st* %x) #0 {
define dso_local i32 @i2d_ASN1_BOOLEAN(i32 %a, i8** %pp) #0 {
define dso_local i32 @d2i_ASN1_BOOLEAN(i32* %a, i8** %pp, i64 %length) #0 {
define dso_local %struct.asn1_type_st* @ASN1_generate_nconf(i8* %str, %struct.conf_st* %nconf) #0 {
define dso_local %struct.asn1_type_st* @ASN1_generate_v3(i8* %str, %struct.v3_ext_ctx* %cnf) #0 {
define internal %struct.asn1_type_st* @generate_v3(i8* %str, %struct.v3_ext_ctx* %cnf, i32 %depth, i32* %perr) #0 {
define internal i32 @asn1_cb(i8* %elem, i32 %len, i8* %bitstr) #0 {
define internal %struct.asn1_type_st* @asn1_multi(i32 %utype, i8* %section, %struct.v3_ext_ctx* %cnf, i32 %depth, i32* %perr) #0 {
define internal %struct.asn1_type_st* @asn1_str2type(i8* %str, i32 %format, i32 %utype) #0 {
define internal i32 @bitstr_cb(i8* %elem, i32 %len, i8* %bitstr) #0 {
define internal i32 @asn1_str2tag(i8* %tagstr, i32 %len) #0 {
define internal i32 @parse_tagging(i8* %vstart, i32 %vlen, i32* %ptag, i32* %pclass) #0 {
define internal i32 @append_exp(%struct.tag_exp_arg* %arg, i32 %exp_tag, i32 %exp_class, i32 %exp_constructed, i32 %exp_pad, i32 %imp_ok) #0 {
define dso_local %struct.asn1_string_st* @d2i_ASN1_type_bytes(%struct.asn1_string_st** %a, i8** %pp, i64 %length, i32 %type) #0 {
define dso_local i32 @i2d_ASN1_bytes(%struct.asn1_string_st* %a, i8** %pp, i32 %tag, i32 %xclass) #0 {
define dso_local %struct.asn1_string_st* @d2i_ASN1_bytes(%struct.asn1_string_st** %a, i8** %pp, i64 %length, i32 %Ptag, i32 %Pclass) #0 {
define internal %struct.asn1_string_st* @int_d2i_ASN1_bytes(%struct.asn1_string_st** %a, i8** %pp, i64 %length, i32 %Ptag, i32 %Pclass, i32 %depth, i32* %perr) #0 {
define internal i32 @asn1_collate_primitive(%struct.asn1_string_st* %a, %struct.asn1_const_ctx_st* %c, i32 %depth) #0 {
define dso_local void @ASN1_STRING_set_default_mask(i64 %mask) #0 {
define dso_local i64 @ASN1_STRING_get_default_mask() #0 {
define dso_local i32 @ASN1_STRING_set_default_mask_asc(i8* %p) #0 {
define dso_local %struct.asn1_string_st* @ASN1_STRING_set_by_NID(%struct.asn1_string_st** %out, i8* %in, i32 %inlen, i32 %inform, i32 %nid) #0 {
define dso_local %struct.asn1_string_table_st* @ASN1_STRING_TABLE_get(i32 %nid) #0 {
define internal %struct.asn1_string_table_st* @OBJ_bsearch_table.9330(%struct.asn1_string_table_st* %key, %struct.asn1_string_table_st* %base, i32 %num) #0 {
define internal i32 @table_cmp_BSEARCH_CMP_FN.9331(i8* %a_, i8* %b_) #0 {
define internal i32 @table_cmp.9332(%struct.asn1_string_table_st* %a, %struct.asn1_string_table_st* %b) #0 {
define dso_local i32 @ASN1_STRING_TABLE_add(i32 %nid, i64 %minsize, i64 %maxsize, i64 %mask, i64 %flags) #0 {
define internal i32 @sk_table_cmp(%struct.asn1_string_table_st** %a, %struct.asn1_string_table_st** %b) #0 {
define dso_local void @ASN1_STRING_TABLE_cleanup() #0 {
define internal void @st_free(%struct.asn1_string_table_st* %tbl) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @ASN1_seq_unpack(i8* %buf, i32 %len, i8* (i8**, i8**, i64)* %d2i, void (i8*)* %free_func) #0 {
define dso_local i8* @ASN1_seq_pack(%struct.stack_st_SSL_CIPHER* %safes, i32 (i8*, i8**)* %i2d, i8** %buf, i32* %len) #0 {
define dso_local i8* @ASN1_unpack_string(%struct.asn1_string_st* %oct, i8* (i8**, i8**, i64)* %d2i) #0 {
define dso_local %struct.asn1_string_st* @ASN1_pack_string(i8* %obj, i32 (i8*, i8**)* %i2d, %struct.asn1_string_st** %oct) #0 {
define dso_local %struct.asn1_string_st* @ASN1_item_pack(i8* %obj, %struct.ASN1_ITEM_st* %it, %struct.asn1_string_st** %oct) #0 {
define dso_local i8* @ASN1_item_unpack(%struct.asn1_string_st* %oct, %struct.ASN1_ITEM_st* %it) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @PEM_X509_INFO_read(%struct._IO_FILE* %fp, %struct.stack_st_SSL_CIPHER* %sk, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @PEM_X509_INFO_read_bio(%struct.bio_st* %bp, %struct.stack_st_SSL_CIPHER* %sk, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local i32 @PEM_X509_INFO_write_bio(%struct.bio_st* %bp, %struct.X509_info_st* %xi, %struct.evp_cipher_st* %enc, i8* %kstr, i32 %klen, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local i32 @PEM_write_bio_PKCS8PrivateKey_nid(%struct.bio_st* %bp, %struct.evp_pkey_st.12512* %x, i32 %nid, i8* %kstr, i32 %klen, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define internal i32 @do_pk8pkey(%struct.bio_st* %bp, %struct.evp_pkey_st.12512* %x, i32 %isder, i32 %nid, %struct.evp_cipher_st* %enc, i8* %kstr, i32 %klen, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local i32 @PEM_write_bio_PKCS8(%struct.bio_st* %bp, %struct.X509_sig_st* %x) #0 {
define dso_local i32 @PEM_write_bio_PKCS8_PRIV_KEY_INFO(%struct.bio_st* %bp, %struct.pkcs8_priv_key_info_st* %x) #0 {
define dso_local i32 @PEM_write_bio_PKCS8PrivateKey(%struct.bio_st* %bp, %struct.evp_pkey_st.12512* %x, %struct.evp_cipher_st* %enc, i8* %kstr, i32 %klen, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local i32 @i2d_PKCS8PrivateKey_bio(%struct.bio_st* %bp, %struct.evp_pkey_st.12512* %x, %struct.evp_cipher_st* %enc, i8* %kstr, i32 %klen, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local i32 @i2d_PKCS8PrivateKey_nid_bio(%struct.bio_st* %bp, %struct.evp_pkey_st.12512* %x, i32 %nid, i8* %kstr, i32 %klen, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local %struct.evp_pkey_st.12512* @d2i_PKCS8PrivateKey_bio(%struct.bio_st* %bp, %struct.evp_pkey_st.12512** %x, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local i32 @i2d_PKCS8PrivateKey_fp(%struct._IO_FILE* %fp, %struct.evp_pkey_st.12512* %x, %struct.evp_cipher_st* %enc, i8* %kstr, i32 %klen, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define internal i32 @do_pk8pkey_fp(%struct._IO_FILE* %fp, %struct.evp_pkey_st.12512* %x, i32 %isder, i32 %nid, %struct.evp_cipher_st* %enc, i8* %kstr, i32 %klen, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local i32 @i2d_PKCS8PrivateKey_nid_fp(%struct._IO_FILE* %fp, %struct.evp_pkey_st.12512* %x, i32 %nid, i8* %kstr, i32 %klen, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local i32 @PEM_write_PKCS8PrivateKey_nid(%struct._IO_FILE* %fp, %struct.evp_pkey_st.12512* %x, i32 %nid, i8* %kstr, i32 %klen, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local i32 @PEM_write_PKCS8PrivateKey(%struct._IO_FILE* %fp, %struct.evp_pkey_st.12512* %x, %struct.evp_cipher_st* %enc, i8* %kstr, i32 %klen, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local %struct.evp_pkey_st.12512* @d2i_PKCS8PrivateKey_fp(%struct._IO_FILE* %fp, %struct.evp_pkey_st.12512** %x, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local %struct.X509_sig_st* @PEM_read_bio_PKCS8(%struct.bio_st* %bp, %struct.X509_sig_st** %x, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local %struct.X509_sig_st* @PEM_read_PKCS8(%struct._IO_FILE* %fp, %struct.X509_sig_st** %x, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local i32 @PEM_write_PKCS8(%struct._IO_FILE* %fp, %struct.X509_sig_st* %x) #0 {
define dso_local %struct.pkcs8_priv_key_info_st* @PEM_read_bio_PKCS8_PRIV_KEY_INFO(%struct.bio_st* %bp, %struct.pkcs8_priv_key_info_st** %x, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local %struct.pkcs8_priv_key_info_st* @PEM_read_PKCS8_PRIV_KEY_INFO(%struct._IO_FILE* %fp, %struct.pkcs8_priv_key_info_st** %x, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local i32 @PEM_write_PKCS8_PRIV_KEY_INFO(%struct._IO_FILE* %fp, %struct.pkcs8_priv_key_info_st* %x) #0 {
define dso_local i8* @X509_get_default_private_dir() #0 {
define dso_local i8* @X509_get_default_cert_area() #0 {
define dso_local i8* @X509_get_default_cert_dir() #0 {
define dso_local i8* @X509_get_default_cert_file() #0 {
define dso_local i8* @X509_get_default_cert_dir_env() #0 {
define dso_local i8* @X509_get_default_cert_file_env() #0 {
define dso_local %struct.X509_req_st* @X509_to_X509_REQ(%struct.x509_st* %x, %struct.evp_pkey_st* %pkey, %struct.env_md_st* %md) #0 {
define dso_local %struct.evp_pkey_st* @X509_REQ_get_pubkey(%struct.X509_req_st* %req) #0 {
define dso_local i32 @X509_REQ_check_private_key(%struct.X509_req_st* %x, %struct.evp_pkey_st* %k) #0 {
define dso_local i32 @X509_REQ_extension_nid(i32 %req_nid) #0 {
define dso_local i32* @X509_REQ_get_extension_nids() #0 {
define dso_local void @X509_REQ_set_extension_nids(i32* %nids) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @X509_REQ_get_extensions(%struct.X509_req_st* %req) #0 {
define dso_local i32 @X509_REQ_get_attr_by_NID(%struct.X509_req_st* %req, i32 %nid, i32 %lastpos) #0 {
define dso_local %struct.x509_attributes_st* @X509_REQ_get_attr(%struct.X509_req_st* %req, i32 %loc) #0 {
define dso_local i32 @X509_REQ_add_extensions_nid(%struct.X509_req_st* %req, %struct.stack_st_SSL_CIPHER* %exts, i32 %nid) #0 {
define dso_local i32 @X509_REQ_add_extensions(%struct.X509_req_st* %req, %struct.stack_st_SSL_CIPHER* %exts) #0 {
define dso_local i32 @X509_REQ_get_attr_count(%struct.X509_req_st* %req) #0 {
define dso_local i32 @X509_REQ_get_attr_by_OBJ(%struct.X509_req_st* %req, %struct.asn1_object_st* %obj, i32 %lastpos) #0 {
define dso_local %struct.x509_attributes_st* @X509_REQ_delete_attr(%struct.X509_req_st* %req, i32 %loc) #0 {
define dso_local i32 @X509_REQ_add1_attr(%struct.X509_req_st* %req, %struct.x509_attributes_st* %attr) #0 {
define dso_local i32 @X509_REQ_add1_attr_by_OBJ(%struct.X509_req_st* %req, %struct.asn1_object_st* %obj, i32 %type, i8* %bytes, i32 %len) #0 {
define dso_local i32 @X509_REQ_add1_attr_by_NID(%struct.X509_req_st* %req, i32 %nid, i32 %type, i8* %bytes, i32 %len) #0 {
define dso_local i32 @X509_REQ_add1_attr_by_txt(%struct.X509_req_st* %req, i8* %attrname, i32 %type, i8* %bytes, i32 %len) #0 {
define dso_local i32 @X509_REQ_set_version(%struct.X509_req_st* %x, i64 %version) #0 {
define dso_local i32 @X509_REQ_set_subject_name(%struct.X509_req_st* %x, %struct.X509_name_st* %name) #0 {
define dso_local i32 @X509_REQ_set_pubkey(%struct.X509_req_st* %x, %struct.evp_pkey_st* %pkey) #0 {
define dso_local i32 @X509at_get_attr_count(%struct.stack_st_SSL_CIPHER* %x) #0 {
define dso_local i32 @X509at_get_attr_by_NID(%struct.stack_st_SSL_CIPHER* %x, i32 %nid, i32 %lastpos) #0 {
define dso_local i32 @X509at_get_attr_by_OBJ(%struct.stack_st_SSL_CIPHER* %sk, %struct.asn1_object_st* %obj, i32 %lastpos) #0 {
define dso_local %struct.x509_attributes_st* @X509at_get_attr(%struct.stack_st_SSL_CIPHER* %x, i32 %loc) #0 {
define dso_local %struct.x509_attributes_st* @X509at_delete_attr(%struct.stack_st_SSL_CIPHER* %x, i32 %loc) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @X509at_add1_attr(%struct.stack_st_SSL_CIPHER** %x, %struct.x509_attributes_st* %attr) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @X509at_add1_attr_by_OBJ(%struct.stack_st_SSL_CIPHER** %x, %struct.asn1_object_st* %obj, i32 %type, i8* %bytes, i32 %len) #0 {
define dso_local %struct.x509_attributes_st* @X509_ATTRIBUTE_create_by_OBJ(%struct.x509_attributes_st** %attr, %struct.asn1_object_st* %obj, i32 %atrtype, i8* %data, i32 %len) #0 {
define dso_local i32 @X509_ATTRIBUTE_set1_object(%struct.x509_attributes_st* %attr, %struct.asn1_object_st* %obj) #0 {
define dso_local i32 @X509_ATTRIBUTE_set1_data(%struct.x509_attributes_st* %attr, i32 %attrtype, i8* %data, i32 %len) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @X509at_add1_attr_by_NID(%struct.stack_st_SSL_CIPHER** %x, i32 %nid, i32 %type, i8* %bytes, i32 %len) #0 {
define dso_local %struct.x509_attributes_st* @X509_ATTRIBUTE_create_by_NID(%struct.x509_attributes_st** %attr, i32 %nid, i32 %atrtype, i8* %data, i32 %len) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @X509at_add1_attr_by_txt(%struct.stack_st_SSL_CIPHER** %x, i8* %attrname, i32 %type, i8* %bytes, i32 %len) #0 {
define dso_local %struct.x509_attributes_st* @X509_ATTRIBUTE_create_by_txt(%struct.x509_attributes_st** %attr, i8* %atrname, i32 %type, i8* %bytes, i32 %len) #0 {
define dso_local i8* @X509at_get0_data_by_OBJ(%struct.stack_st_SSL_CIPHER* %x, %struct.asn1_object_st* %obj, i32 %lastpos, i32 %type) #0 {
define dso_local i32 @X509_ATTRIBUTE_count(%struct.x509_attributes_st* %attr) #0 {
define dso_local i8* @X509_ATTRIBUTE_get0_data(%struct.x509_attributes_st* %attr, i32 %idx, i32 %atrtype, i8* %data) #0 {
define dso_local %struct.asn1_type_st* @X509_ATTRIBUTE_get0_type(%struct.x509_attributes_st* %attr, i32 %idx) #0 {
define dso_local %struct.asn1_object_st* @X509_ATTRIBUTE_get0_object(%struct.x509_attributes_st* %attr) #0 {
define dso_local %struct.BASIC_CONSTRAINTS_st* @d2i_BASIC_CONSTRAINTS(%struct.BASIC_CONSTRAINTS_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_BASIC_CONSTRAINTS(%struct.BASIC_CONSTRAINTS_st* %a, i8** %out) #0 {
define dso_local %struct.BASIC_CONSTRAINTS_st* @BASIC_CONSTRAINTS_new() #0 {
define dso_local void @BASIC_CONSTRAINTS_free(%struct.BASIC_CONSTRAINTS_st* %a) #0 {
define internal %struct.stack_st_SSL_CIPHER* @i2v_BASIC_CONSTRAINTS(%struct.v3_ext_method.16442* %method, %struct.BASIC_CONSTRAINTS_st* %bcons, %struct.stack_st_SSL_CIPHER* %extlist) #0 {
define internal %struct.BASIC_CONSTRAINTS_st* @v2i_BASIC_CONSTRAINTS(%struct.v3_ext_method.16442* %method, %struct.v3_ext_ctx* %ctx, %struct.stack_st_SSL_CIPHER* %values) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @i2v_ASN1_BIT_STRING(%struct.v3_ext_method.16485* %method, %struct.asn1_string_st* %bits, %struct.stack_st_SSL_CIPHER* %ret) #0 {
define dso_local %struct.asn1_string_st* @v2i_ASN1_BIT_STRING(%struct.v3_ext_method.16485* %method, %struct.v3_ext_ctx* %ctx, %struct.stack_st_SSL_CIPHER* %nval) #0 {
define dso_local %struct.X509_extension_st* @X509V3_EXT_nconf(%struct.conf_st* %conf, %struct.v3_ext_ctx* %ctx, i8* %name, i8* %value) #0 {
define internal i32 @v3_check_critical(i8** %value) #0 {
define internal i32 @v3_check_generic(i8** %value) #0 {
define internal %struct.X509_extension_st* @v3_generic_extension(i8* %ext, i8* %value, i32 %crit, i32 %gen_type, %struct.v3_ext_ctx* %ctx) #0 {
define internal %struct.X509_extension_st* @do_ext_nconf(%struct.conf_st* %conf, %struct.v3_ext_ctx* %ctx, i32 %ext_nid, i32 %crit, i8* %value) #0 {
define internal %struct.X509_extension_st* @do_ext_i2d(%struct.v3_ext_method* %method, i32 %ext_nid, i32 %crit, i8* %ext_struc) #0 {
define internal i8* @generic_asn1(i8* %value, %struct.v3_ext_ctx* %ctx, i64* %ext_len) #0 {
define dso_local %struct.X509_extension_st* @X509V3_EXT_nconf_nid(%struct.conf_st* %conf, %struct.v3_ext_ctx* %ctx, i32 %ext_nid, i8* %value) #0 {
define dso_local %struct.X509_extension_st* @X509V3_EXT_i2d(i32 %ext_nid, i32 %crit, i8* %ext_struc) #0 {
define dso_local i32 @X509V3_EXT_add_nconf_sk(%struct.conf_st* %conf, %struct.v3_ext_ctx* %ctx, i8* %section, %struct.stack_st_SSL_CIPHER** %sk) #0 {
define dso_local i32 @X509V3_EXT_add_nconf(%struct.conf_st* %conf, %struct.v3_ext_ctx* %ctx, i8* %section, %struct.x509_st* %cert) #0 {
define dso_local i32 @X509V3_EXT_CRL_add_nconf(%struct.conf_st* %conf, %struct.v3_ext_ctx* %ctx, i8* %section, %struct.X509_crl_st* %crl) #0 {
define dso_local i32 @X509V3_EXT_REQ_add_nconf(%struct.conf_st* %conf, %struct.v3_ext_ctx* %ctx, i8* %section, %struct.X509_req_st* %req) #0 {
define dso_local i8* @X509V3_get_string(%struct.v3_ext_ctx* %ctx, i8* %name, i8* %section) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @X509V3_get_section(%struct.v3_ext_ctx* %ctx, i8* %section) #0 {
define dso_local void @X509V3_string_free(%struct.v3_ext_ctx* %ctx, i8* %str) #0 {
define dso_local void @X509V3_section_free(%struct.v3_ext_ctx* %ctx, %struct.stack_st_SSL_CIPHER* %section) #0 {
define dso_local void @X509V3_set_nconf(%struct.v3_ext_ctx* %ctx, %struct.conf_st* %conf) #0 {
define internal i8* @nconf_get_string(i8* %db, i8* %section, i8* %value) #0 {
define internal %struct.stack_st_SSL_CIPHER* @nconf_get_section(i8* %db, i8* %section) #0 {
define dso_local void @X509V3_set_ctx(%struct.v3_ext_ctx* %ctx, %struct.x509_st* %issuer, %struct.x509_st* %subj, %struct.X509_req_st* %req, %struct.X509_crl_st* %crl, i32 %flags) #0 {
define dso_local %struct.X509_extension_st* @X509V3_EXT_conf(%struct.lhash_st_SSL_SESSION* %conf, %struct.v3_ext_ctx* %ctx, i8* %name, i8* %value) #0 {
define dso_local %struct.X509_extension_st* @X509V3_EXT_conf_nid(%struct.lhash_st_SSL_SESSION* %conf, %struct.v3_ext_ctx* %ctx, i32 %ext_nid, i8* %value) #0 {
define dso_local void @X509V3_set_conf_lhash(%struct.v3_ext_ctx* %ctx, %struct.lhash_st_SSL_SESSION* %lhash) #0 {
define internal i8* @conf_lhash_get_string(i8* %db, i8* %section, i8* %value) #0 {
define internal %struct.stack_st_SSL_CIPHER* @conf_lhash_get_section(i8* %db, i8* %section) #0 {
define dso_local i32 @X509V3_EXT_add_conf(%struct.lhash_st_SSL_SESSION* %conf, %struct.v3_ext_ctx* %ctx, i8* %section, %struct.x509_st* %cert) #0 {
define dso_local i32 @X509V3_EXT_CRL_add_conf(%struct.lhash_st_SSL_SESSION* %conf, %struct.v3_ext_ctx* %ctx, i8* %section, %struct.X509_crl_st* %crl) #0 {
define dso_local i32 @X509V3_EXT_REQ_add_conf(%struct.lhash_st_SSL_SESSION* %conf, %struct.v3_ext_ctx* %ctx, i8* %section, %struct.X509_req_st* %req) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @d2i_EXTENDED_KEY_USAGE(%struct.stack_st_SSL_CIPHER** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_EXTENDED_KEY_USAGE(%struct.stack_st_SSL_CIPHER* %a, i8** %out) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @EXTENDED_KEY_USAGE_new() #0 {
define dso_local void @EXTENDED_KEY_USAGE_free(%struct.stack_st_SSL_CIPHER* %a) #0 {
define internal %struct.stack_st_SSL_CIPHER* @i2v_EXTENDED_KEY_USAGE(%struct.v3_ext_method.16570* %method, i8* %a, %struct.stack_st_SSL_CIPHER* %ext_list) #0 {
define internal i8* @v2i_EXTENDED_KEY_USAGE(%struct.v3_ext_method.16570* %method, %struct.v3_ext_ctx* %ctx, %struct.stack_st_SSL_CIPHER* %nval) #0 {
define internal i8* @i2s_ASN1_IA5STRING(%struct.v3_ext_method.16611* %method, %struct.asn1_string_st* %ia5) #0 {
define internal %struct.asn1_string_st* @s2i_ASN1_IA5STRING(%struct.v3_ext_method.16611* %method, %struct.v3_ext_ctx* %ctx, i8* %str) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @policy_node_cmp_new() #0 {
define internal i32 @node_cmp(%struct.X509_POLICY_NODE_st** %a, %struct.X509_POLICY_NODE_st** %b) #0 {
define dso_local %struct.X509_POLICY_NODE_st* @tree_find_sk(%struct.stack_st_SSL_CIPHER* %nodes, %struct.asn1_object_st* %id) #0 {
define dso_local %struct.X509_POLICY_NODE_st* @level_find_node(%struct.X509_POLICY_LEVEL_st* %level, %struct.X509_POLICY_NODE_st* %parent, %struct.asn1_object_st* %id) #0 {
define dso_local %struct.X509_POLICY_NODE_st* @level_add_node(%struct.X509_POLICY_LEVEL_st* %level, %struct.X509_POLICY_DATA_st* %data, %struct.X509_POLICY_NODE_st* %parent, %struct.X509_POLICY_TREE_st* %tree) #0 {
define dso_local void @policy_node_free(%struct.X509_POLICY_NODE_st* %node) #0 {
define dso_local i32 @policy_node_match(%struct.X509_POLICY_LEVEL_st* %lvl, %struct.X509_POLICY_NODE_st* %node, %struct.asn1_object_st* %oid) #0 {
define dso_local void @CONF_set_nconf(%struct.conf_st* %conf, %struct.lhash_st_SSL_SESSION* %hash) #0 {
define dso_local i32 @CONF_set_default_method(%struct.conf_method_st* %meth) #0 {
define dso_local %struct.lhash_st_SSL_SESSION* @CONF_load(%struct.lhash_st_SSL_SESSION* %conf, i8* %file, i64* %eline) #0 {
define dso_local %struct.lhash_st_SSL_SESSION* @CONF_load_bio(%struct.lhash_st_SSL_SESSION* %conf, %struct.bio_st* %bp, i64* %eline) #0 {
define dso_local i32 @NCONF_load_bio(%struct.conf_st* %conf, %struct.bio_st* %bp, i64* %eline) #0 {
define dso_local %struct.lhash_st_SSL_SESSION* @CONF_load_fp(%struct.lhash_st_SSL_SESSION* %conf, %struct._IO_FILE* %fp, i64* %eline) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @CONF_get_section(%struct.lhash_st_SSL_SESSION* %conf, i8* %section) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @NCONF_get_section(%struct.conf_st* %conf, i8* %section) #0 {
define dso_local i8* @CONF_get_string(%struct.lhash_st_SSL_SESSION* %conf, i8* %group, i8* %name) #0 {
define dso_local i8* @NCONF_get_string(%struct.conf_st* %conf, i8* %group, i8* %name) #0 {
define dso_local i64 @CONF_get_number(%struct.lhash_st_SSL_SESSION* %conf, i8* %group, i8* %name) #0 {
define dso_local i32 @NCONF_get_number_e(%struct.conf_st* %conf, i8* %group, i8* %name, i64* %result) #0 {
define dso_local void @CONF_free(%struct.lhash_st_SSL_SESSION* %conf) #0 {
define dso_local void @NCONF_free_data(%struct.conf_st* %conf) #0 {
define dso_local i32 @CONF_dump_fp(%struct.lhash_st_SSL_SESSION* %conf, %struct._IO_FILE* %out) #0 {
define dso_local i32 @CONF_dump_bio(%struct.lhash_st_SSL_SESSION* %conf, %struct.bio_st* %out) #0 {
define dso_local i32 @NCONF_dump_bio(%struct.conf_st* %conf, %struct.bio_st* %out) #0 {
define dso_local %struct.conf_st* @NCONF_new(%struct.conf_method_st* %meth) #0 {
define dso_local void @NCONF_free(%struct.conf_st* %conf) #0 {
define dso_local i32 @NCONF_load(%struct.conf_st* %conf, i8* %file, i64* %eline) #0 {
define dso_local i32 @NCONF_load_fp(%struct.conf_st* %conf, %struct._IO_FILE* %fp, i64* %eline) #0 {
define dso_local i32 @NCONF_dump_fp(%struct.conf_st* %conf, %struct._IO_FILE* %out) #0 {
define dso_local %struct.CONF_VALUE* @_CONF_get_section(%struct.conf_st* %conf, i8* %section) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @_CONF_get_section_values(%struct.conf_st* %conf, i8* %section) #0 {
define dso_local i32 @_CONF_add_string(%struct.conf_st* %conf, %struct.CONF_VALUE* %section, %struct.CONF_VALUE* %value) #0 {
define dso_local i8* @_CONF_get_string(%struct.conf_st* %conf, i8* %section, i8* %name) #0 {
define dso_local i32 @_CONF_new_data(%struct.conf_st* %conf) #0 {
define internal i64 @conf_value_LHASH_HASH(i8* %arg) #0 {
define internal i32 @conf_value_LHASH_COMP(i8* %arg1, i8* %arg2) #0 {
define internal i32 @conf_value_cmp(%struct.CONF_VALUE* %a, %struct.CONF_VALUE* %b) #0 {
define internal i64 @conf_value_hash(%struct.CONF_VALUE* %v) #0 {
define dso_local void @_CONF_free_data(%struct.conf_st* %conf) #0 {
define internal void @value_free_hash_LHASH_DOALL_ARG(i8* %arg1, i8* %arg2) #0 {
define internal void @value_free_stack_LHASH_DOALL(i8* %arg) #0 {
define internal void @value_free_stack_doall(%struct.CONF_VALUE* %a) #0 {
define internal void @value_free_hash_doall_arg(%struct.CONF_VALUE* %a, %struct.lhash_st_SSL_SESSION* %conf) #0 {
define dso_local %struct.CONF_VALUE* @_CONF_new_section(%struct.conf_st* %conf, i8* %section) #0 {
define dso_local %struct.conf_method_st* @NCONF_default() #0 {
define internal %struct.conf_st* @def_create(%struct.conf_method_st* %meth) #0 {
define internal i32 @def_init_default(%struct.conf_st* %conf) #0 {
define internal i32 @def_destroy(%struct.conf_st* %conf) #0 {
define internal i32 @def_destroy_data(%struct.conf_st* %conf) #0 {
define internal i32 @def_load_bio(%struct.conf_st* %conf, %struct.bio_st* %in, i64* %line) #0 {
define internal i32 @def_dump(%struct.conf_st* %conf, %struct.bio_st* %out) #0 {
define internal i32 @def_is_number(%struct.conf_st* %conf, i8 signext %c) #0 {
define internal i32 @def_to_int(%struct.conf_st* %conf, i8 signext %c) #0 {
define internal i32 @def_load(%struct.conf_st* %conf, i8* %name, i64* %line) #0 {
define internal void @dump_value_LHASH_DOALL_ARG(i8* %arg1, i8* %arg2) #0 {
define internal void @dump_value_doall_arg(%struct.CONF_VALUE* %a, %struct.bio_st* %out) #0 {
define internal void @clear_comments(%struct.conf_st* %conf, i8* %p) #0 {
define internal i8* @eat_ws(%struct.conf_st* %conf, i8* %p) #0 {
define internal i8* @eat_alpha_numeric(%struct.conf_st* %conf, i8* %p) #0 {
define internal i32 @str_copy.9528(%struct.conf_st* %conf, i8* %section, i8** %pto, i8* %from) #0 {
define internal i8* @scan_dquote(%struct.conf_st* %conf, i8* %p) #0 {
define internal i8* @scan_quote(%struct.conf_st* %conf, i8* %p) #0 {
define dso_local %struct.conf_method_st* @NCONF_WIN32() #0 {
define internal i32 @def_init_WIN32(%struct.conf_st* %conf) #0 {
define dso_local void @OPENSSL_load_builtin_modules() #0 {
define dso_local %struct.txt_db_st* @TXT_DB_read(%struct.bio_st* %in, i32 %num) #0 {
define dso_local i8** @TXT_DB_get_by_index(%struct.txt_db_st* %db, i32 %idx, i8** %value) #0 {
define dso_local i32 @TXT_DB_create_index(%struct.txt_db_st* %db, i32 %field, i32 (i8**)* %qual, i64 (i8*)* %hash, i32 (i8*, i8*)* %cmp) #0 {
define dso_local i64 @TXT_DB_write(%struct.bio_st* %out, %struct.txt_db_st* %db) #0 {
define dso_local i32 @TXT_DB_insert(%struct.txt_db_st* %db, i8** %row) #0 {
define dso_local void @TXT_DB_free(%struct.txt_db_st* %db) #0 {
define dso_local %struct.PKCS12_SAFEBAG* @PKCS12_item_pack_safebag(i8* %obj, %struct.ASN1_ITEM_st* %it, i32 %nid1, i32 %nid2) #0 {
define dso_local %struct.PKCS12_SAFEBAG* @PKCS12_MAKE_KEYBAG(%struct.pkcs8_priv_key_info_st* %p8) #0 {
define dso_local %struct.PKCS12_SAFEBAG* @PKCS12_MAKE_SHKEYBAG(i32 %pbe_nid, i8* %pass, i32 %passlen, i8* %salt, i32 %saltlen, i32 %iter, %struct.pkcs8_priv_key_info_st* %p8) #0 {
define dso_local %struct.pkcs7_st* @PKCS12_pack_p7data(%struct.stack_st_SSL_CIPHER* %sk) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @PKCS12_unpack_p7data(%struct.pkcs7_st* %p7) #0 {
define dso_local %struct.pkcs7_st* @PKCS12_pack_p7encdata(i32 %pbe_nid, i8* %pass, i32 %passlen, i8* %salt, i32 %saltlen, i32 %iter, %struct.stack_st_SSL_CIPHER* %bags) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @PKCS12_unpack_p7encdata(%struct.pkcs7_st* %p7, i8* %pass, i32 %passlen) #0 {
define dso_local %struct.pkcs8_priv_key_info_st* @PKCS12_decrypt_skey(%struct.PKCS12_SAFEBAG* %bag, i8* %pass, i32 %passlen) #0 {
define dso_local i32 @PKCS12_pack_authsafes(%struct.PKCS12* %p12, %struct.stack_st_SSL_CIPHER* %safes) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @PKCS12_unpack_authsafes(%struct.PKCS12* %p12) #0 {
define dso_local %struct.PKCS12* @d2i_PKCS12(%struct.PKCS12** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_PKCS12(%struct.PKCS12* %a, i8** %out) #0 {
define dso_local %struct.PKCS12* @PKCS12_new() #0 {
define dso_local void @PKCS12_free(%struct.PKCS12* %a) #0 {
define dso_local %struct.PKCS12_MAC_DATA* @d2i_PKCS12_MAC_DATA(%struct.PKCS12_MAC_DATA** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_PKCS12_MAC_DATA(%struct.PKCS12_MAC_DATA* %a, i8** %out) #0 {
define dso_local %struct.PKCS12_MAC_DATA* @PKCS12_MAC_DATA_new() #0 {
define dso_local void @PKCS12_MAC_DATA_free(%struct.PKCS12_MAC_DATA* %a) #0 {
define dso_local %struct.POLICYQUALINFO_st* @d2i_PKCS12_BAGS(%struct.POLICYQUALINFO_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_PKCS12_BAGS(%struct.POLICYQUALINFO_st* %a, i8** %out) #0 {
define dso_local %struct.POLICYQUALINFO_st* @PKCS12_BAGS_new() #0 {
define dso_local void @PKCS12_BAGS_free(%struct.POLICYQUALINFO_st* %a) #0 {
define dso_local %struct.PKCS12_SAFEBAG* @d2i_PKCS12_SAFEBAG(%struct.PKCS12_SAFEBAG** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_PKCS12_SAFEBAG(%struct.PKCS12_SAFEBAG* %a, i8** %out) #0 {
define dso_local %struct.PKCS12_SAFEBAG* @PKCS12_SAFEBAG_new() #0 {
define dso_local void @PKCS12_SAFEBAG_free(%struct.PKCS12_SAFEBAG* %a) #0 {
define dso_local i8* @PKCS12_pbe_crypt(%struct.X509_algor_st* %algor, i8* %pass, i32 %passlen, i8* %in, i32 %inlen, i8** %data, i32* %datalen, i32 %en_de) #0 {
define dso_local i8* @PKCS12_item_decrypt_d2i(%struct.X509_algor_st* %algor, %struct.ASN1_ITEM_st* %it, i8* %pass, i32 %passlen, %struct.asn1_string_st* %oct, i32 %zbuf) #0 {
define dso_local %struct.asn1_string_st* @PKCS12_item_i2d_encrypt(%struct.X509_algor_st* %algor, %struct.ASN1_ITEM_st* %it, i8* %pass, i32 %passlen, i8* %obj, i32 %zbuf) #0 {
define dso_local %struct.X509_sig_st* @PKCS8_encrypt(i32 %pbe_nid, %struct.evp_cipher_st* %cipher, i8* %pass, i32 %passlen, i8* %salt, i32 %saltlen, i32 %iter, %struct.pkcs8_priv_key_info_st* %p8inf) #0 {
define dso_local %struct.ui_st* @UI_new() #0 {
define dso_local %struct.ui_st* @UI_new_method(%struct.ui_method_st* %method) #0 {
define dso_local %struct.ui_method_st* @UI_get_default_method() #0 {
define dso_local void @UI_free(%struct.ui_st* %ui) #0 {
define internal void @free_string(%struct.ui_string_st* %uis) #0 {
define dso_local i32 @UI_add_input_string(%struct.ui_st* %ui, i8* %prompt, i32 %flags, i8* %result_buf, i32 %minsize, i32 %maxsize) #0 {
define internal i32 @general_allocate_string(%struct.ui_st* %ui, i8* %prompt, i32 %prompt_freeable, i32 %type, i32 %input_flags, i8* %result_buf, i32 %minsize, i32 %maxsize, i8* %test_buf) #0 {
define internal %struct.ui_string_st* @general_allocate_prompt(%struct.ui_st* %ui, i8* %prompt, i32 %prompt_freeable, i32 %type, i32 %input_flags, i8* %result_buf) #0 {
define internal i32 @allocate_string_stack(%struct.ui_st* %ui) #0 {
define dso_local i32 @UI_dup_input_string(%struct.ui_st* %ui, i8* %prompt, i32 %flags, i8* %result_buf, i32 %minsize, i32 %maxsize) #0 {
define dso_local i32 @UI_add_verify_string(%struct.ui_st* %ui, i8* %prompt, i32 %flags, i8* %result_buf, i32 %minsize, i32 %maxsize, i8* %test_buf) #0 {
define dso_local i32 @UI_dup_verify_string(%struct.ui_st* %ui, i8* %prompt, i32 %flags, i8* %result_buf, i32 %minsize, i32 %maxsize, i8* %test_buf) #0 {
define dso_local i32 @UI_add_input_boolean(%struct.ui_st* %ui, i8* %prompt, i8* %action_desc, i8* %ok_chars, i8* %cancel_chars, i32 %flags, i8* %result_buf) #0 {
define internal i32 @general_allocate_boolean(%struct.ui_st* %ui, i8* %prompt, i8* %action_desc, i8* %ok_chars, i8* %cancel_chars, i32 %prompt_freeable, i32 %type, i32 %input_flags, i8* %result_buf) #0 {
define dso_local i32 @UI_dup_input_boolean(%struct.ui_st* %ui, i8* %prompt, i8* %action_desc, i8* %ok_chars, i8* %cancel_chars, i32 %flags, i8* %result_buf) #0 {
define dso_local i32 @UI_add_info_string(%struct.ui_st* %ui, i8* %text) #0 {
define dso_local i32 @UI_dup_info_string(%struct.ui_st* %ui, i8* %text) #0 {
define dso_local i32 @UI_add_error_string(%struct.ui_st* %ui, i8* %text) #0 {
define dso_local i32 @UI_dup_error_string(%struct.ui_st* %ui, i8* %text) #0 {
define dso_local i8* @UI_construct_prompt(%struct.ui_st* %ui, i8* %object_desc, i8* %object_name) #0 {
define dso_local i8* @UI_add_user_data(%struct.ui_st* %ui, i8* %user_data) #0 {
define dso_local i8* @UI_get0_user_data(%struct.ui_st* %ui) #0 {
define dso_local i8* @UI_get0_result(%struct.ui_st* %ui, i32 %i) #0 {
define dso_local i8* @UI_get0_result_string(%struct.ui_string_st* %uis) #0 {
define dso_local i32 @UI_process(%struct.ui_st* %ui) #0 {
define internal i32 @print_error(i8* %str, i64 %len, %struct.ui_st* %ui) #0 {
define dso_local i32 @UI_ctrl(%struct.ui_st* %ui, i32 %cmd, i64 %i, i8* %p, void ()* %f) #0 {
define dso_local i32 @UI_get_ex_new_index(i64 %argl, i8* %argp, i32 (i8*, i8*, %struct.crypto_ex_data_st*, i32, i64, i8*)* %new_func, i32 (%struct.crypto_ex_data_st*, %struct.crypto_ex_data_st*, i8*, i32, i64, i8*)* %dup_func, void (i8*, i8*, %struct.crypto_ex_data_st*, i32, i64, i8*)* %free_func) #0 {
define dso_local i32 @UI_set_ex_data(%struct.ui_st* %r, i32 %idx, i8* %arg) #0 {
define dso_local i8* @UI_get_ex_data(%struct.ui_st* %r, i32 %idx) #0 {
define dso_local void @UI_set_default_method(%struct.ui_method_st* %meth) #0 {
define dso_local %struct.ui_method_st* @UI_get_method(%struct.ui_st* %ui) #0 {
define dso_local %struct.ui_method_st* @UI_set_method(%struct.ui_st* %ui, %struct.ui_method_st* %meth) #0 {
define dso_local %struct.ui_method_st* @UI_create_method(i8* %name) #0 {
define dso_local void @UI_destroy_method(%struct.ui_method_st* %ui_method) #0 {
define dso_local i32 @UI_method_set_opener(%struct.ui_method_st* %method, i32 (%struct.ui_st*)* %opener) #0 {
define dso_local i32 @UI_method_set_writer(%struct.ui_method_st* %method, i32 (%struct.ui_st*, %struct.ui_string_st*)* %writer) #0 {
define dso_local i32 @UI_method_set_flusher(%struct.ui_method_st* %method, i32 (%struct.ui_st*)* %flusher) #0 {
define dso_local i32 @UI_method_set_reader(%struct.ui_method_st* %method, i32 (%struct.ui_st*, %struct.ui_string_st*)* %reader) #0 {
define dso_local i32 @UI_method_set_closer(%struct.ui_method_st* %method, i32 (%struct.ui_st*)* %closer) #0 {
define dso_local i32 @UI_method_set_prompt_constructor(%struct.ui_method_st* %method, i8* (%struct.ui_st*, i8*, i8*)* %prompt_constructor) #0 {
define dso_local i32 (%struct.ui_st*)* @UI_method_get_opener(%struct.ui_method_st* %method) #0 {
define dso_local i32 (%struct.ui_st*, %struct.ui_string_st*)* @UI_method_get_writer(%struct.ui_method_st* %method) #0 {
define dso_local i32 (%struct.ui_st*)* @UI_method_get_flusher(%struct.ui_method_st* %method) #0 {
define dso_local i32 (%struct.ui_st*, %struct.ui_string_st*)* @UI_method_get_reader(%struct.ui_method_st* %method) #0 {
define dso_local i32 (%struct.ui_st*)* @UI_method_get_closer(%struct.ui_method_st* %method) #0 {
define dso_local i8* (%struct.ui_st*, i8*, i8*)* @UI_method_get_prompt_constructor(%struct.ui_method_st* %method) #0 {
define dso_local i32 @UI_get_string_type(%struct.ui_string_st* %uis) #0 {
define dso_local i32 @UI_get_input_flags(%struct.ui_string_st* %uis) #0 {
define dso_local i8* @UI_get0_output_string(%struct.ui_string_st* %uis) #0 {
define dso_local i8* @UI_get0_action_string(%struct.ui_string_st* %uis) #0 {
define dso_local i8* @UI_get0_test_string(%struct.ui_string_st* %uis) #0 {
define dso_local i32 @UI_get_result_minsize(%struct.ui_string_st* %uis) #0 {
define dso_local i32 @UI_get_result_maxsize(%struct.ui_string_st* %uis) #0 {
define dso_local i32 @UI_set_result(%struct.ui_st* %ui, %struct.ui_string_st* %uis, i8* %result) #0 {
define dso_local %struct.ui_method_st* @UI_OpenSSL() #0 {
define internal i32 @open_console(%struct.ui_st* %ui) #0 {
define internal i32 @write_string(%struct.ui_st* %ui, %struct.ui_string_st* %uis) #0 {
define internal i32 @read_string(%struct.ui_st* %ui, %struct.ui_string_st* %uis) #0 {
define internal i32 @close_console(%struct.ui_st* %ui) #0 {
define internal i32 @read_string_inner(%struct.ui_st* %ui, %struct.ui_string_st* %uis, i32 %echo, i32 %strip_nl) #0 {
define internal void @pushsig() #0 {
define internal i32 @noecho_console(%struct.ui_st* %ui) #0 {
define internal i32 @read_till_nl(%struct._IO_FILE* %in) #0 {
define internal i32 @echo_console(%struct.ui_st* %ui) #0 {
define internal void @popsig() #0 {
define internal void @recsig(i32 %i) #0 {
define dso_local %struct.POLICYQUALINFO_st* @d2i_CMS_ContentInfo(%struct.POLICYQUALINFO_st** %a, i8** %in, i64 %len) #0 {
define dso_local i32 @i2d_CMS_ContentInfo(%struct.POLICYQUALINFO_st* %a, i8** %out) #0 {
define dso_local %struct.POLICYQUALINFO_st* @CMS_ContentInfo_new() #0 {
define dso_local void @CMS_ContentInfo_free(%struct.POLICYQUALINFO_st* %a) #0 {
define dso_local i32 @CMS_ContentInfo_print_ctx(%struct.bio_st* %out, %struct.POLICYQUALINFO_st* %x, i32 %indent, %struct.asn1_pctx_st* %pctx) #0 {
define dso_local %struct.asn1_object_st* @CMS_get0_type(%struct.POLICYQUALINFO_st* %cms) #0 {
define dso_local %struct.POLICYQUALINFO_st* @cms_Data_create() #0 {
define dso_local i32 @CMS_set_detached(%struct.POLICYQUALINFO_st* %cms, i32 %detached) #0 {
define dso_local %struct.asn1_string_st** @CMS_get0_content(%struct.POLICYQUALINFO_st* %cms) #0 {
define dso_local %struct.bio_st* @cms_content_bio(%struct.POLICYQUALINFO_st* %cms) #0 {
define dso_local %struct.bio_st* @CMS_dataInit(%struct.POLICYQUALINFO_st* %cms, %struct.bio_st* %icont) #0 {
define dso_local i32 @CMS_dataFinal(%struct.POLICYQUALINFO_st* %cms, %struct.bio_st* %cmsbio) #0 {
define dso_local %struct.asn1_object_st* @CMS_get0_eContentType(%struct.POLICYQUALINFO_st* %cms) #0 {
define internal %struct.asn1_object_st** @cms_get0_econtent_type(%struct.POLICYQUALINFO_st* %cms) #0 {
define dso_local i32 @CMS_set1_eContentType(%struct.POLICYQUALINFO_st* %cms, %struct.asn1_object_st* %oid) #0 {
define dso_local i32 @CMS_is_detached(%struct.POLICYQUALINFO_st* %cms) #0 {
define dso_local void @cms_DigestAlgorithm_set(%struct.X509_algor_st* %alg, %struct.env_md_st* %md) #0 {
define dso_local %struct.bio_st* @cms_DigestAlgorithm_init_bio(%struct.X509_algor_st* %digestAlgorithm) #0 {
define dso_local i32 @cms_DigestAlgorithm_find_ctx(%struct.env_md_ctx_st* %mctx, %struct.bio_st* %chain, %struct.X509_algor_st* %mdalg) #0 {
define dso_local %struct.CMS_CertificateChoices.16794* @CMS_add0_CertificateChoices(%struct.POLICYQUALINFO_st* %cms) #0 {
define internal %struct.stack_st_CMS_CertificateChoices** @cms_get0_certificate_choices(%struct.POLICYQUALINFO_st* %cms) #0 {
define dso_local i32 @CMS_add0_cert(%struct.POLICYQUALINFO_st* %cms, %struct.x509_st* %cert) #0 {
define dso_local i32 @CMS_add1_cert(%struct.POLICYQUALINFO_st* %cms, %struct.x509_st* %cert) #0 {
define dso_local %struct.CMS_RevocationInfoChoice_st.16804* @CMS_add0_RevocationInfoChoice(%struct.POLICYQUALINFO_st* %cms) #0 {
define internal %struct.stack_st_CMS_RevocationInfoChoice** @cms_get0_revocation_choices(%struct.POLICYQUALINFO_st* %cms) #0 {
define dso_local i32 @CMS_add0_crl(%struct.POLICYQUALINFO_st* %cms, %struct.X509_crl_st.16056* %crl) #0 {
define dso_local i32 @CMS_add1_crl(%struct.POLICYQUALINFO_st* %cms, %struct.X509_crl_st.16056* %crl) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @CMS_get1_certs(%struct.POLICYQUALINFO_st* %cms) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @CMS_get1_crls(%struct.POLICYQUALINFO_st* %cms) #0 {
define dso_local i32 @cms_ias_cert_cmp(%struct.pkcs7_issuer_and_serial_st* %ias, %struct.x509_st* %cert) #0 {
define dso_local i32 @cms_keyid_cert_cmp(%struct.asn1_string_st* %keyid, %struct.x509_st* %cert) #0 {
define dso_local i32 @cms_set1_ias(%struct.pkcs7_issuer_and_serial_st** %pias, %struct.x509_st* %cert) #0 {
define dso_local i32 @cms_set1_keyid(%struct.asn1_string_st** %pkeyid, %struct.x509_st* %cert) #0 {
define dso_local i32 @CMS_SharedInfo_encode(i8** %pder, %struct.X509_algor_st* %kekalg, %struct.asn1_string_st* %ukm, i32 %keylen) #0 {
define internal i32 @cms_si_cb(i32 %operation, %struct.ASN1_VALUE_st** %pval, %struct.ASN1_ITEM_st* %it, i8* %exarg) #0 {
define internal i32 @cms_rek_cb(i32 %operation, %struct.ASN1_VALUE_st** %pval, %struct.ASN1_ITEM_st* %it, i8* %exarg) #0 {
define internal i32 @cms_kari_cb(i32 %operation, %struct.ASN1_VALUE_st** %pval, %struct.ASN1_ITEM_st* %it, i8* %exarg) #0 {
define internal i32 @cms_ri_cb(i32 %operation, %struct.ASN1_VALUE_st** %pval, %struct.ASN1_ITEM_st* %it, i8* %exarg) #0 {
define internal i32 @cms_cb(i32 %operation, %struct.ASN1_VALUE_st** %pval, %struct.ASN1_ITEM_st* %it, i8* %exarg) #0 {
define dso_local i32 @CMS_stream(i8*** %boundary, %struct.POLICYQUALINFO_st* %cms) #0 {
define dso_local %struct.POLICYQUALINFO_st* @d2i_CMS_bio(%struct.bio_st* %bp, %struct.POLICYQUALINFO_st** %cms) #0 {
define dso_local i32 @i2d_CMS_bio(%struct.bio_st* %bp, %struct.POLICYQUALINFO_st* %cms) #0 {
define dso_local %struct.POLICYQUALINFO_st* @PEM_read_bio_CMS(%struct.bio_st* %bp, %struct.POLICYQUALINFO_st** %x, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local %struct.POLICYQUALINFO_st* @PEM_read_CMS(%struct._IO_FILE* %fp, %struct.POLICYQUALINFO_st** %x, i32 (i8*, i32, i32, i8*)* %cb, i8* %u) #0 {
define dso_local i32 @PEM_write_bio_CMS(%struct.bio_st* %bp, %struct.POLICYQUALINFO_st* %x) #0 {
define dso_local i32 @PEM_write_CMS(%struct._IO_FILE* %fp, %struct.POLICYQUALINFO_st* %x) #0 {
define dso_local %struct.bio_st* @BIO_new_CMS(%struct.bio_st* %out, %struct.POLICYQUALINFO_st* %cms) #0 {
define dso_local i32 @i2d_CMS_bio_stream(%struct.bio_st* %out, %struct.POLICYQUALINFO_st* %cms, %struct.bio_st* %in, i32 %flags) #0 {
define dso_local i32 @PEM_write_bio_CMS_stream(%struct.bio_st* %out, %struct.POLICYQUALINFO_st* %cms, %struct.bio_st* %in, i32 %flags) #0 {
define dso_local i32 @SMIME_write_CMS(%struct.bio_st* %bio, %struct.POLICYQUALINFO_st* %cms, %struct.bio_st* %data, i32 %flags) #0 {
define dso_local %struct.POLICYQUALINFO_st* @SMIME_read_CMS(%struct.bio_st* %bio, %struct.bio_st** %bcont) #0 {
define dso_local i32 @CMS_SignedData_init(%struct.POLICYQUALINFO_st* %cms) #0 {
define internal %struct.CMS_SignedData_st* @cms_signed_data_init(%struct.POLICYQUALINFO_st* %cms) #0 {
define internal %struct.CMS_SignedData_st* @cms_get0_signed(%struct.POLICYQUALINFO_st* %cms) #0 {
define dso_local i32 @cms_set1_SignerIdentifier(%struct.CMS_SignerIdentifier_st* %sid, %struct.x509_st.15085* %cert, i32 %type) #0 {
define dso_local i32 @cms_SignerIdentifier_get0_signer_id(%struct.CMS_SignerIdentifier_st* %sid, %struct.asn1_string_st** %keyid, %struct.X509_name_st** %issuer, %struct.asn1_string_st** %sno) #0 {
define dso_local i32 @cms_SignerIdentifier_cert_cmp(%struct.CMS_SignerIdentifier_st* %sid, %struct.x509_st.15085* %cert) #0 {
define dso_local %struct.CMS_SignerInfo_st.16927* @CMS_add1_signer(%struct.POLICYQUALINFO_st* %cms, %struct.x509_st.15085* %signer, %struct.evp_pkey_st.12606* %pk, %struct.env_md_st.12601* %md, i32 %flags) #0 {
define internal i32 @cms_sd_asn1_ctrl(%struct.CMS_SignerInfo_st.16927* %si, i32 %cmd) #0 {
define dso_local i32 @CMS_add_standard_smimecap(%struct.stack_st_SSL_CIPHER** %smcap) #0 {
define dso_local i32 @CMS_add_smimecap(%struct.CMS_SignerInfo_st.16927* %si, %struct.stack_st_SSL_CIPHER* %algs) #0 {
define internal i32 @cms_copy_messageDigest(%struct.POLICYQUALINFO_st* %cms, %struct.CMS_SignerInfo_st.16927* %si) #0 {
define dso_local i32 @CMS_SignerInfo_sign(%struct.CMS_SignerInfo_st.16927* %si) #0 {
define internal i32 @cms_add1_signingTime(%struct.CMS_SignerInfo_st.16927* %si, %struct.asn1_string_st* %t) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @CMS_get0_SignerInfos(%struct.POLICYQUALINFO_st* %cms) #0 {
define internal i32 @cms_add_cipher_smcap(%struct.stack_st_SSL_CIPHER** %sk, i32 %nid, i32 %arg) #0 {
define internal i32 @cms_add_digest_smcap(%struct.stack_st_SSL_CIPHER** %sk, i32 %nid, i32 %arg) #0 {
define dso_local i32 @CMS_add_simple_smimecap(%struct.stack_st_SSL_CIPHER** %algs, i32 %algnid, i32 %keysize) #0 {
define dso_local %struct.evp_pkey_ctx_st.12607* @CMS_SignerInfo_get0_pkey_ctx(%struct.CMS_SignerInfo_st.16927* %si) #0 {
define dso_local %struct.env_md_ctx_st.12602* @CMS_SignerInfo_get0_md_ctx(%struct.CMS_SignerInfo_st.16927* %si) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @CMS_get0_signers(%struct.POLICYQUALINFO_st* %cms) #0 {
define dso_local void @CMS_SignerInfo_set1_signer_cert(%struct.CMS_SignerInfo_st.16927* %si, %struct.x509_st.15085* %signer) #0 {
define dso_local i32 @CMS_SignerInfo_get0_signer_id(%struct.CMS_SignerInfo_st.16927* %si, %struct.asn1_string_st** %keyid, %struct.X509_name_st** %issuer, %struct.asn1_string_st** %sno) #0 {
define dso_local i32 @CMS_SignerInfo_cert_cmp(%struct.CMS_SignerInfo_st.16927* %si, %struct.x509_st.15085* %cert) #0 {
define dso_local i32 @CMS_set1_signers_certs(%struct.POLICYQUALINFO_st* %cms, %struct.stack_st_SSL_CIPHER* %scerts, i32 %flags) #0 {
define dso_local void @CMS_SignerInfo_get0_algs(%struct.CMS_SignerInfo_st.16927* %si, %struct.evp_pkey_st.12606** %pk, %struct.x509_st.15085** %signer, %struct.X509_algor_st** %pdig, %struct.X509_algor_st** %psig) #0 {
define dso_local %struct.asn1_string_st* @CMS_SignerInfo_get0_signature(%struct.CMS_SignerInfo_st.16927* %si) #0 {
define dso_local i32 @cms_SignedData_final(%struct.POLICYQUALINFO_st* %cms, %struct.bio_st* %chain) #0 {
define internal i32 @cms_SignerInfo_content_sign(%struct.POLICYQUALINFO_st* %cms, %struct.CMS_SignerInfo_st.16927* %si, %struct.bio_st* %chain) #0 {
define dso_local i32 @CMS_SignerInfo_verify(%struct.CMS_SignerInfo_st.16927* %si) #0 {
define dso_local %struct.bio_st* @cms_SignedData_init_bio(%struct.POLICYQUALINFO_st* %cms) #0 {
define internal void @cms_sd_set_version(%struct.CMS_SignedData_st* %sd) #0 {
define dso_local i32 @CMS_SignerInfo_verify_content(%struct.CMS_SignerInfo_st.16927* %si, %struct.bio_st* %chain) #0 {
define dso_local %struct.POLICYQUALINFO_st* @cms_DigestedData_create(%struct.env_md_st* %md) #0 {
define dso_local %struct.bio_st* @cms_DigestedData_init_bio(%struct.POLICYQUALINFO_st* %cms) #0 {
define dso_local i32 @cms_DigestedData_do_final(%struct.POLICYQUALINFO_st* %cms, %struct.bio_st* %chain, i32 %verify) #0 {
define dso_local %struct.CMAC_CTX_st* @CMAC_CTX_new() #0 {
define dso_local void @CMAC_CTX_cleanup(%struct.CMAC_CTX_st* %ctx) #0 {
define dso_local %struct.evp_cipher_ctx_st* @CMAC_CTX_get0_cipher_ctx(%struct.CMAC_CTX_st* %ctx) #0 {
define dso_local void @CMAC_CTX_free(%struct.CMAC_CTX_st* %ctx) #0 {
define dso_local i32 @CMAC_CTX_copy(%struct.CMAC_CTX_st* %out, %struct.CMAC_CTX_st* %in) #0 {
define dso_local i32 @CMAC_Init(%struct.CMAC_CTX_st* %ctx, i8* %key, i64 %keylen, %struct.evp_cipher_st* %cipher, %struct.engine_st* %impl) #0 {
define internal void @make_kn(i8* %k1, i8* %l, i32 %bl) #0 {
define dso_local i32 @CMAC_Update(%struct.CMAC_CTX_st* %ctx, i8* %in, i64 %dlen) #0 {
define dso_local i32 @CMAC_Final(%struct.CMAC_CTX_st* %ctx, i8* %out, i64* %poutlen) #0 {
define dso_local i32 @CMAC_resume(%struct.CMAC_CTX_st* %ctx) #0 {
define dso_local void @ENGINE_load_4758cca() #0 {
define internal %struct.engine_st* @engine_4758_cca() #0 {
define internal i32 @bind_helper(%struct.engine_st* %e) #0 {
define internal i32 @ibm_4758_cca_destroy(%struct.engine_st* %e) #0 {
define internal i32 @ibm_4758_cca_init(%struct.engine_st* %e) #0 {
define internal i32 @ibm_4758_cca_finish(%struct.engine_st* %e) #0 {
define internal i32 @ibm_4758_cca_ctrl(%struct.engine_st* %e, i32 %cmd, i64 %i, i8* %p, void ()* %f) #0 {
define internal %struct.evp_pkey_st* @ibm_4758_load_privkey(%struct.engine_st* %e, i8* %key_id, %struct.ui_method_st* %ui_method, i8* %callback_data) #0 {
define internal %struct.evp_pkey_st* @ibm_4758_load_pubkey(%struct.engine_st* %e, i8* %key_id, %struct.ui_method_st* %ui_method, i8* %callback_data) #0 {
define internal void @ERR_load_CCA4758_strings() #0 {
define internal void @ERR_CCA4758_error(i32 %function, i32 %reason, i8* %file, i32 %line) #0 {
define internal i32 @getModulusAndExponent(i8* %token, i64* %exponentLength, i8* %exponent, i64* %modulusLength, i64* %modulusFieldLength, i8* %modulus) #0 {
define internal i64 @set_CCA4758_LIB_NAME(i8* %name) #0 {
define internal void @free_CCA4758_LIB_NAME() #0 {
define internal i8* @get_CCA4758_LIB_NAME() #0 {
define internal void @cca_ex_free(i8* %obj, i8* %item, %struct.crypto_ex_data_st* %ad, i32 %idx, i64 %argl, i8* %argp) #0 {
define internal void @ERR_unload_CCA4758_strings() #0 {
define internal i32 @cca_get_random_bytes(i8* %buf, i32 %num) #0 {
define internal i32 @cca_random_status() #0 {
define internal i32 @cca_rsa_pub_enc(i32 %flen, i8* %from, i8* %to, %struct.rsa_st* %rsa, i32 %padding) #0 {
define internal i32 @cca_rsa_priv_dec(i32 %flen, i8* %from, i8* %to, %struct.rsa_st* %rsa, i32 %padding) #0 {
define internal i32 @cca_rsa_sign(i32 %type, i8* %m, i32 %m_len, i8* %sigret, i32* %siglen, %struct.rsa_st* %rsa) #0 {
define internal i32 @cca_rsa_verify(i32 %type, i8* %m, i32 %m_len, i8* %sigbuf, i32 %siglen, %struct.rsa_st* %rsa) #0 {
define dso_local void @ENGINE_load_aep() #0 {
define internal %struct.engine_st* @engine_aep() #0 {
define internal i32 @bind_aep(%struct.engine_st* %e) #0 {
define internal i32 @aep_init(%struct.engine_st* %e) #0 {
define internal i32 @aep_destroy(%struct.engine_st* %e) #0 {
define internal i32 @aep_finish(%struct.engine_st* %e) #0 {
define internal i32 @aep_ctrl(%struct.engine_st* %e, i32 %cmd, i64 %i, i8* %p, void ()* %f) #0 {
define internal void @ERR_load_AEPHK_strings() #0 {
define internal void @ERR_AEPHK_error(i32 %function, i32 %reason, i8* %file, i32 %line) #0 {
define internal i64 @set_AEP_LIBNAME(i8* %name) #0 {
define internal void @free_AEP_LIBNAME() #0 {
define internal i32 @aep_close_all_connections(i32 %use_engine_lock, i32* %in_use) #0 {
define internal void @ERR_unload_AEPHK_strings() #0 {
define internal i8* @get_AEP_LIBNAME() #0 {
define internal i32 @aep_mod_exp_dh(%struct.dh_st* %dh, %struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %p, %struct.bignum_st* %m, %struct.bignum_ctx* %ctx, %struct.bn_mont_ctx_st* %m_ctx) #0 {
define internal i32 @aep_mod_exp(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %p, %struct.bignum_st* %m, %struct.bignum_ctx* %ctx) #0 {
define internal i32 @aep_get_connection(i32* %phConnection) #0 {
define internal i32 @aep_close_connection(i32 %hConnection) #0 {
define internal i32 @aep_return_connection(i32 %hConnection) #0 {
define internal i32 @GetBigNumSize(i8* %ArbBigNum, i32* %BigNumSize) #0 {
define internal i32 @MakeAEPBigNum(i8* %ArbBigNum, i32 %BigNumSize, i8* %AEP_BigNum) #0 {
define internal i32 @ConvertAEPBigNum(i8* %ArbBigNum, i32 %BigNumSize, i8* %AEP_BigNum) #0 {
define internal i32 @aep_rsa_mod_exp(%struct.bignum_st* %r0, %struct.bignum_st* %I, %struct.rsa_st* %rsa, %struct.bignum_ctx* %ctx) #0 {
define internal i32 @aep_mod_exp_mont(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %p, %struct.bignum_st* %m, %struct.bignum_ctx* %ctx, %struct.bn_mont_ctx_st* %m_ctx) #0 {
define internal i32 @aep_mod_exp_crt(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %p, %struct.bignum_st* %q, %struct.bignum_st* %dmp1, %struct.bignum_st* %dmq1, %struct.bignum_st* %iqmp, %struct.bignum_ctx* %ctx) #0 {
define dso_local void @ENGINE_load_atalla() #0 {
define internal %struct.engine_st* @engine_atalla() #0 {
define internal i32 @bind_helper.9896(%struct.engine_st* %e) #0 {
define internal i32 @atalla_destroy(%struct.engine_st* %e) #0 {
define internal i32 @atalla_init(%struct.engine_st* %e) #0 {
define internal i32 @atalla_finish(%struct.engine_st* %e) #0 {
define internal i32 @atalla_ctrl(%struct.engine_st* %e, i32 %cmd, i64 %i, i8* %p, void ()* %f) #0 {
define internal void @ERR_load_ATALLA_strings() #0 {
define internal void @ERR_ATALLA_error(i32 %function, i32 %reason, i8* %file, i32 %line) #0 {
define internal i64 @set_ATALLA_LIBNAME(i8* %name) #0 {
define internal void @free_ATALLA_LIBNAME() #0 {
define internal i8* @get_ATALLA_LIBNAME() #0 {
define internal void @ERR_unload_ATALLA_strings() #0 {
define internal i32 @atalla_mod_exp_dh(%struct.dh_st* %dh, %struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %p, %struct.bignum_st* %m, %struct.bignum_ctx* %ctx, %struct.bn_mont_ctx_st* %m_ctx) #0 {
define internal i32 @atalla_mod_exp(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %p, %struct.bignum_st* %m, %struct.bignum_ctx* %ctx) #0 {
define internal i32 @atalla_rsa_mod_exp(%struct.bignum_st* %r0, %struct.bignum_st* %I, %struct.rsa_st* %rsa, %struct.bignum_ctx* %ctx) #0 {
define internal i32 @atalla_mod_exp_mont(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %p, %struct.bignum_st* %m, %struct.bignum_ctx* %ctx, %struct.bn_mont_ctx_st* %m_ctx) #0 {
define dso_local void @ENGINE_load_cswift() #0 {
define internal %struct.engine_st* @engine_cswift() #0 {
define internal i32 @bind_helper.9926(%struct.engine_st* %e) #0 {
define internal i32 @cswift_destroy(%struct.engine_st* %e) #0 {
define internal i32 @cswift_init(%struct.engine_st* %e) #0 {
define internal i32 @cswift_finish(%struct.engine_st* %e) #0 {
define internal i32 @cswift_ctrl(%struct.engine_st* %e, i32 %cmd, i64 %i, i8* %p, void ()* %f) #0 {
define internal void @ERR_load_CSWIFT_strings() #0 {
define internal void @ERR_CSWIFT_error(i32 %function, i32 %reason, i8* %file, i32 %line) #0 {
define internal i64 @set_CSWIFT_LIBNAME(i8* %name) #0 {
define internal void @free_CSWIFT_LIBNAME() #0 {
define internal i8* @get_CSWIFT_LIBNAME() #0 {
define internal i32 @get_context(i64* %hac) #0 {
define internal void @release_context(i64 %hac) #0 {
define internal void @ERR_unload_CSWIFT_strings() #0 {
define internal i32 @cswift_rand_bytes(i8* %buf, i32 %num) #0 {
define internal i32 @cswift_rand_status() #0 {
define internal i32 @cswift_mod_exp_dh(%struct.dh_st* %dh, %struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %p, %struct.bignum_st* %m, %struct.bignum_ctx* %ctx, %struct.bn_mont_ctx_st* %m_ctx) #0 {
define internal i32 @cswift_mod_exp(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %p, %struct.bignum_st* %m, %struct.bignum_ctx* %ctx) #0 {
define internal i32 @cswift_rsa_mod_exp(%struct.bignum_st* %r0, %struct.bignum_st* %I, %struct.rsa_st* %rsa, %struct.bignum_ctx* %ctx) #0 {
define internal i32 @cswift_mod_exp_mont(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %p, %struct.bignum_st* %m, %struct.bignum_ctx* %ctx, %struct.bn_mont_ctx_st* %m_ctx) #0 {
define internal i32 @cswift_mod_exp_crt(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %p, %struct.bignum_st* %q, %struct.bignum_st* %dmp1, %struct.bignum_st* %dmq1, %struct.bignum_st* %iqmp, %struct.bignum_ctx* %ctx) #0 {
define internal i32 @cswift_bn_32copy(%struct.ngx_str_t* %out, %struct.bignum_st* %in) #0 {
define dso_local void @ENGINE_load_chil() #0 {
define internal %struct.engine_st* @engine_chil() #0 {
define internal i32 @bind_helper.9964(%struct.engine_st* %e) #0 {
define internal i32 @hwcrhk_destroy(%struct.engine_st* %e) #0 {
define internal i32 @hwcrhk_init(%struct.engine_st* %e) #0 {
define internal i32 @hwcrhk_finish(%struct.engine_st* %e) #0 {
define internal i32 @hwcrhk_ctrl(%struct.engine_st* %e, i32 %cmd, i64 %i, i8* %p, void ()* %f) #0 {
define internal %struct.evp_pkey_st* @hwcrhk_load_privkey(%struct.engine_st* %eng, i8* %key_id, %struct.ui_method_st* %ui_method, i8* %callback_data) #0 {
define internal %struct.evp_pkey_st* @hwcrhk_load_pubkey(%struct.engine_st* %eng, i8* %key_id, %struct.ui_method_st* %ui_method, i8* %callback_data) #0 {
define internal void @ERR_load_HWCRHK_strings() #0 {
define internal void @ERR_HWCRHK_error(i32 %function, i32 %reason, i8* %file, i32 %line) #0 {
define internal i64 @set_HWCRHK_LIBNAME(i8* %name) #0 {
define internal i32 @hwcrhk_get_pass(i8* %prompt_info, i32* %len_io, i8* %buf, %struct.HWCryptoHook_PassphraseContextValue* %ppctx, %struct.HWCryptoHook_CallerContextValue* %cactx) #0 {
define internal i32 @hwcrhk_insert_card(i8* %prompt_info, i8* %wrong_info, %struct.HWCryptoHook_PassphraseContextValue* %ppctx, %struct.HWCryptoHook_CallerContextValue* %cactx) #0 {
define internal void @hwcrhk_log_message(i8* %logstr, i8* %message) #0 {
define internal void @free_HWCRHK_LIBNAME() #0 {
define internal void @release_context.10010(%struct.HWCryptoHook_Context* %hac) #0 {
define internal i8* @get_HWCRHK_LIBNAME() #0 {
define internal i32 @hwcrhk_mutex_init(%struct.lhash_st_SSL_SESSION* %mt, %struct.HWCryptoHook_CallerContextValue* %cactx) #0 {
define internal i32 @hwcrhk_mutex_lock(%struct.lhash_st_SSL_SESSION* %mt) #0 {
define internal void @hwcrhk_mutex_unlock(%struct.lhash_st_SSL_SESSION* %mt) #0 {
define internal void @hwcrhk_mutex_destroy(%struct.lhash_st_SSL_SESSION* %mt) #0 {
define internal i32 @get_context.10011(%struct.HWCryptoHook_Context** %hac, %struct.HWCryptoHook_CallerContextValue* %cac) #0 {
define internal void @ERR_unload_HWCRHK_strings() #0 {
define internal i32 @hwcrhk_rand_bytes(i8* %buf, i32 %num) #0 {
define internal i32 @hwcrhk_rand_status() #0 {
define internal i32 @hwcrhk_mod_exp_dh(%struct.dh_st* %dh, %struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %p, %struct.bignum_st* %m, %struct.bignum_ctx* %ctx, %struct.bn_mont_ctx_st* %m_ctx) #0 {
define internal i32 @hwcrhk_mod_exp(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %p, %struct.bignum_st* %m, %struct.bignum_ctx* %ctx) #0 {
define internal i32 @hwcrhk_rsa_mod_exp(%struct.bignum_st* %r, %struct.bignum_st* %I, %struct.rsa_st* %rsa, %struct.bignum_ctx* %ctx) #0 {
define internal i32 @hwcrhk_mod_exp_mont(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %p, %struct.bignum_st* %m, %struct.bignum_ctx* %ctx, %struct.bn_mont_ctx_st* %m_ctx) #0 {
define internal i32 @hwcrhk_rsa_finish(%struct.rsa_st* %rsa) #0 {
define dso_local void @ENGINE_load_nuron() #0 {
define internal %struct.engine_st* @engine_nuron() #0 {
define internal i32 @bind_helper.10029(%struct.engine_st* %e) #0 {
define internal i32 @nuron_destroy(%struct.engine_st* %e) #0 {
define internal i32 @nuron_init(%struct.engine_st* %e) #0 {
define internal i32 @nuron_finish(%struct.engine_st* %e) #0 {
define internal i32 @nuron_ctrl(%struct.engine_st* %e, i32 %cmd, i64 %i, i8* %p, void ()* %f) #0 {
define internal void @ERR_load_NURON_strings() #0 {
define internal void @ERR_NURON_error(i32 %function, i32 %reason, i8* %file, i32 %line) #0 {
define internal i64 @set_NURON_LIBNAME(i8* %name) #0 {
define internal void @free_NURON_LIBNAME() #0 {
define internal i8* @get_NURON_LIBNAME() #0 {
define internal void @ERR_unload_NURON_strings() #0 {
define internal i32 @nuron_mod_exp_dh(%struct.dh_st* %dh, %struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %p, %struct.bignum_st* %m, %struct.bignum_ctx* %ctx, %struct.bn_mont_ctx_st* %m_ctx) #0 {
define internal i32 @nuron_mod_exp(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %p, %struct.bignum_st* %m, %struct.bignum_ctx* %ctx) #0 {
define internal i32 @nuron_rsa_mod_exp(%struct.bignum_st* %r0, %struct.bignum_st* %I, %struct.rsa_st* %rsa, %struct.bignum_ctx* %ctx) #0 {
define internal i32 @nuron_mod_exp_mont(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %p, %struct.bignum_st* %m, %struct.bignum_ctx* %ctx, %struct.bn_mont_ctx_st* %m_ctx) #0 {
define dso_local void @ENGINE_load_sureware() #0 {
define internal %struct.engine_st* @engine_sureware() #0 {
define internal i32 @bind_sureware(%struct.engine_st* %e) #0 {
define internal i32 @surewarehk_destroy(%struct.engine_st* %e) #0 {
define internal i32 @surewarehk_init(%struct.engine_st* %e) #0 {
define internal i32 @surewarehk_finish(%struct.engine_st* %e) #0 {
define internal i32 @surewarehk_ctrl(%struct.engine_st* %e, i32 %cmd, i64 %i, i8* %p, void ()* %f) #0 {
define internal %struct.evp_pkey_st* @surewarehk_load_privkey(%struct.engine_st* %e, i8* %key_id, %struct.ui_method_st* %ui_method, i8* %callback_data) #0 {
define internal %struct.evp_pkey_st* @surewarehk_load_pubkey(%struct.engine_st* %e, i8* %key_id, %struct.ui_method_st* %ui_method, i8* %callback_data) #0 {
define internal void @ERR_load_SUREWARE_strings() #0 {
define internal void @ERR_SUREWARE_error(i32 %function, i32 %reason, i8* %file, i32 %line) #0 {
define internal %struct.evp_pkey_st* @sureware_load_public(%struct.engine_st* %e, i8* %key_id, i8* %hptr, i64 %el, i8 signext %keytype) #0 {
define internal void @surewarehk_error_handling(i8* %msg, i32 %func, i32 %ret) #0 {
define internal void @surewarehk_ex_free(i8* %obj, i8* %item, %struct.crypto_ex_data_st* %ad, i32 %idx, i64 %argl, i8* %argp) #0 {
define internal void @ERR_unload_SUREWARE_strings() #0 {
define internal void @surewarehk_rand_seed(i8* %buf, i32 %num) #0 {
define internal i32 @surewarehk_rand_bytes(i8* %buf, i32 %num) #0 {
define internal void @surewarehk_rand_add(i8* %buf, i32 %num, double %entropy) #0 {
define internal i32 @surewarehk_modexp_dh(%struct.dh_st* %dh, %struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %p, %struct.bignum_st* %m, %struct.bignum_ctx* %ctx, %struct.bn_mont_ctx_st* %m_ctx) #0 {
define internal i32 @surewarehk_modexp(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %p, %struct.bignum_st* %m, %struct.bignum_ctx* %ctx) #0 {
define internal i32 @surewarehk_rsa_sign(i32 %flen, i8* %from, i8* %to, %struct.rsa_st* %rsa, i32 %padding) #0 {
define internal i32 @surewarehk_rsa_priv_dec(i32 %flen, i8* %from, i8* %to, %struct.rsa_st* %rsa, i32 %padding) #0 {
define internal i32 @surewarehk_mod_exp_mont(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %p, %struct.bignum_st* %m, %struct.bignum_ctx* %ctx, %struct.bn_mont_ctx_st* %m_ctx) #0 {
define dso_local void @ENGINE_load_ubsec() #0 {
define internal %struct.engine_st* @engine_ubsec() #0 {
define internal i32 @bind_helper.10102(%struct.engine_st* %e) #0 {
define internal i32 @ubsec_destroy(%struct.engine_st* %e) #0 {
define internal i32 @ubsec_init(%struct.engine_st* %e) #0 {
define internal i32 @ubsec_finish(%struct.engine_st* %e) #0 {
define internal i32 @ubsec_ctrl(%struct.engine_st* %e, i32 %cmd, i64 %i, i8* %p, void ()* %f) #0 {
define internal void @ERR_load_UBSEC_strings() #0 {
define internal void @ERR_UBSEC_error(i32 %function, i32 %reason, i8* %file, i32 %line) #0 {
define internal i64 @set_UBSEC_LIBNAME(i8* %name) #0 {
define internal void @free_UBSEC_LIBNAME() #0 {
define internal i8* @get_UBSEC_LIBNAME() #0 {
define internal void @ERR_unload_UBSEC_strings() #0 {
define internal i32 @ubsec_dh_generate_key(%struct.dh_st* %dh) #0 {
define internal i32 @ubsec_dh_compute_key(i8* %key, %struct.bignum_st* %pub_key, %struct.dh_st* %dh) #0 {
define internal i32 @ubsec_mod_exp_dh(%struct.dh_st* %dh, %struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %p, %struct.bignum_st* %m, %struct.bignum_ctx* %ctx, %struct.bn_mont_ctx_st* %m_ctx) #0 {
define internal i32 @ubsec_mod_exp(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %p, %struct.bignum_st* %m, %struct.bignum_ctx* %ctx) #0 {
define internal i32 @ubsec_rsa_mod_exp(%struct.bignum_st* %r0, %struct.bignum_st* %I, %struct.rsa_st* %rsa, %struct.bignum_ctx* %ctx) #0 {
define internal i32 @ubsec_mod_exp_mont(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %p, %struct.bignum_st* %m, %struct.bignum_ctx* %ctx, %struct.bn_mont_ctx_st* %m_ctx) #0 {
define internal i32 @ubsec_mod_exp_crt(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %p, %struct.bignum_st* %q, %struct.bignum_st* %dp, %struct.bignum_st* %dq, %struct.bignum_st* %qinv, %struct.bignum_ctx* %ctx) #0 {
define dso_local void @ENGINE_load_padlock() #0 {
define dso_local %struct.tm* @OPENSSL_gmtime(i64* %timer, %struct.tm* %result) #0 {
define dso_local i32 @OPENSSL_gmtime_adj(%struct.tm* %tm, i32 %off_day, i64 %offset_sec) #0 {
define internal i32 @julian_adj(%struct.tm* %tm, i32 %off_day, i64 %offset_sec, i64* %pday, i32* %psec) #0 {
define internal void @julian_to_date(i64 %jd, i32* %y, i32* %m, i32* %d) #0 {
define internal i64 @date_to_julian(i32 %y, i32 %m, i32 %d) #0 {
define dso_local i32 @OPENSSL_gmtime_diff(i32* %pday, i32* %psec, %struct.tm* %from, %struct.tm* %to) #0 {
define dso_local i32 @MD4_Update(%struct.MD5state_st* %c, i8* %data_, i64 %len) #0 {
define dso_local void @md4_block_data_order(%struct.MD5state_st* %c, i8* %data_, i64 %num) #0 {
define dso_local void @MD4_Transform(%struct.MD5state_st* %c, i8* %data) #0 {
define dso_local i32 @MD4_Final(i8* %md, %struct.MD5state_st* %c) #0 {
define dso_local i32 @MD4_Init(%struct.MD5state_st* %c) #0 {
define dso_local i32 @SHA_Update(%struct.SHAstate_st* %c, i8* %data_, i64 %len) #0 {
define internal void @sha_block_data_order(%struct.SHAstate_st* %c, i8* %p, i64 %num) #0 {
define dso_local void @SHA_Transform(%struct.SHAstate_st* %c, i8* %data) #0 {
define dso_local i32 @SHA_Final(i8* %md, %struct.SHAstate_st* %c) #0 {
define dso_local i32 @SHA_Init(%struct.SHAstate_st* %c) #0 {
define dso_local i32 @RIPEMD160_Update(%struct.SHAstate_st* %c, i8* %data_, i64 %len) #0 {
define dso_local void @ripemd160_block_data_order(%struct.SHAstate_st* %ctx, i8* %p, i64 %num) #0 {
define dso_local void @RIPEMD160_Transform(%struct.SHAstate_st* %c, i8* %data) #0 {
define dso_local i32 @RIPEMD160_Final(i8* %md, %struct.SHAstate_st* %c) #0 {
define dso_local i32 @RIPEMD160_Init(%struct.SHAstate_st* %c) #0 {
define dso_local i32 @WHIRLPOOL_Init(%struct.WHIRLPOOL_CTX* %c) #0 {
define dso_local i32 @WHIRLPOOL_Update(%struct.WHIRLPOOL_CTX* %c, i8* %_inp, i64 %bytes) #0 {
define dso_local void @WHIRLPOOL_BitUpdate(%struct.WHIRLPOOL_CTX* %c, i8* %_inp, i64 %bits) #0 {
define dso_local i32 @WHIRLPOOL_Final(i8* %md, %struct.WHIRLPOOL_CTX* %c) #0 {
define dso_local i8* @WHIRLPOOL(i8* %inp, i64 %bytes, i8* %md) #0 {
define dso_local void @whirlpool_block(%struct.WHIRLPOOL_CTX* %ctx, i8* %inp, i64 %n) #0 {
define dso_local i32 @Camellia_Ekeygen(i32 %keyBitLength, i8* %rawKey, i32* %k) #0 {
define dso_local void @Camellia_EncryptBlock_Rounds(i32 %grandRounds, i8* %plaintext, i32* %keyTable, i8* %ciphertext) #0 {
define dso_local void @Camellia_EncryptBlock(i32 %keyBitLength, i8* %plaintext, i32* %keyTable, i8* %ciphertext) #0 {
define dso_local void @Camellia_DecryptBlock_Rounds(i32 %grandRounds, i8* %ciphertext, i32* %keyTable, i8* %plaintext) #0 {
define dso_local void @Camellia_DecryptBlock(i32 %keyBitLength, i8* %plaintext, i32* %keyTable, i8* %ciphertext) #0 {
define dso_local i32 @BN_kronecker(%struct.bignum_st* %a, %struct.bignum_st* %b, %struct.bignum_ctx* %ctx) #0 {
define dso_local %struct.bignum_st* @BN_mod_sqrt(%struct.bignum_st* %in, %struct.bignum_st* %a, %struct.bignum_st* %p, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @BN_GF2m_add(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %b) #0 {
define dso_local i32 @BN_GF2m_mod_arr(%struct.bignum_st* %r, %struct.bignum_st* %a, i32* %p) #0 {
define dso_local i32 @BN_GF2m_mod(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %p) #0 {
define dso_local i32 @BN_GF2m_poly2arr(%struct.bignum_st* %a, i32* %p, i32 %max) #0 {
define dso_local i32 @BN_GF2m_mod_mul_arr(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %b, i32* %p, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @BN_GF2m_mod_sqr_arr(%struct.bignum_st* %r, %struct.bignum_st* %a, i32* %p, %struct.bignum_ctx* %ctx) #0 {
define internal void @bn_GF2m_mul_2x2(i64* %r, i64 %a1, i64 %a0, i64 %b1, i64 %b0) #0 {
define internal void @bn_GF2m_mul_1x1(i64* %r1, i64* %r0, i64 %a, i64 %b) #0 {
define dso_local i32 @BN_GF2m_mod_mul(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %b, %struct.bignum_st* %p, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @BN_GF2m_mod_sqr(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %p, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @BN_GF2m_mod_inv(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %p, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @BN_GF2m_mod_inv_arr(%struct.bignum_st* %r, %struct.bignum_st* %xx, i32* %p, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @BN_GF2m_arr2poly(i32* %p, %struct.bignum_st* %a) #0 {
define dso_local i32 @BN_GF2m_mod_div(%struct.bignum_st* %r, %struct.bignum_st* %y, %struct.bignum_st* %x, %struct.bignum_st* %p, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @BN_GF2m_mod_div_arr(%struct.bignum_st* %r, %struct.bignum_st* %yy, %struct.bignum_st* %xx, i32* %p, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @BN_GF2m_mod_exp_arr(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %b, i32* %p, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @BN_GF2m_mod_exp(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %b, %struct.bignum_st* %p, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @BN_GF2m_mod_sqrt_arr(%struct.bignum_st* %r, %struct.bignum_st* %a, i32* %p, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @BN_GF2m_mod_sqrt(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %p, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @BN_GF2m_mod_solve_quad_arr(%struct.bignum_st* %r, %struct.bignum_st* %a_, i32* %p, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @BN_GF2m_mod_solve_quad(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %p, %struct.bignum_ctx* %ctx) #0 {
define dso_local %struct.ec_method_st* @EC_GFp_mont_method() #0 {
define dso_local i32 @ec_GFp_mont_group_init(%struct.ec_group_st* %group) #0 {
define dso_local void @ec_GFp_mont_group_finish(%struct.ec_group_st* %group) #0 {
define dso_local void @ec_GFp_mont_group_clear_finish(%struct.ec_group_st* %group) #0 {
define dso_local i32 @ec_GFp_mont_group_copy(%struct.ec_group_st* %dest, %struct.ec_group_st* %src) #0 {
define dso_local i32 @ec_GFp_mont_group_set_curve(%struct.ec_group_st* %group, %struct.bignum_st* %p, %struct.bignum_st* %a, %struct.bignum_st* %b, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @ec_GFp_mont_field_mul(%struct.ec_group_st* %group, %struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %b, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @ec_GFp_mont_field_sqr(%struct.ec_group_st* %group, %struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @ec_GFp_mont_field_encode(%struct.ec_group_st* %group, %struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @ec_GFp_mont_field_decode(%struct.ec_group_st* %group, %struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @ec_GFp_mont_field_set_to_one(%struct.ec_group_st* %group, %struct.bignum_st* %r, %struct.bignum_ctx* %ctx) #0 {
define dso_local %struct.ec_method_st* @EC_GFp_nist_method() #0 {
define dso_local i32 @ec_GFp_nist_group_copy(%struct.ec_group_st* %dest, %struct.ec_group_st* %src) #0 {
define dso_local i32 @ec_GFp_nist_group_set_curve(%struct.ec_group_st* %group, %struct.bignum_st* %p, %struct.bignum_st* %a, %struct.bignum_st* %b, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @ec_GFp_nist_field_mul(%struct.ec_group_st* %group, %struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %b, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @ec_GFp_nist_field_sqr(%struct.ec_group_st* %group, %struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_ctx* %ctx) #0 {
define dso_local %struct.bignum_st* @EC_POINT_point2bn(%struct.ec_group_st* %group, %struct.ec_point_st* %point, i32 %form, %struct.bignum_st* %ret, %struct.bignum_ctx* %ctx) #0 {
define dso_local %struct.ec_point_st* @EC_POINT_bn2point(%struct.ec_group_st* %group, %struct.bignum_st* %bn, %struct.ec_point_st* %point, %struct.bignum_ctx* %ctx) #0 {
define dso_local i8* @EC_POINT_point2hex(%struct.ec_group_st* %group, %struct.ec_point_st* %point, i32 %form, %struct.bignum_ctx* %ctx) #0 {
define dso_local %struct.ec_point_st* @EC_POINT_hex2point(%struct.ec_group_st* %group, i8* %buf, %struct.ec_point_st* %point, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @RSA_sign_ASN1_OCTET_STRING(i32 %type, i8* %m, i32 %m_len, i8* %sigret, i32* %siglen, %struct.rsa_st* %rsa) #0 {
define dso_local i32 @RSA_verify_ASN1_OCTET_STRING(i32 %dtype, i8* %m, i32 %m_len, i8* %sigbuf, i32 %siglen, %struct.rsa_st* %rsa) #0 {
define dso_local i32 @RSA_verify_PKCS1_PSS(%struct.rsa_st* %rsa, i8* %mHash, %struct.env_md_st.12621* %Hash, i8* %EM, i32 %sLen) #0 {
define dso_local i32 @RSA_verify_PKCS1_PSS_mgf1(%struct.rsa_st* %rsa, i8* %mHash, %struct.env_md_st.12621* %Hash, %struct.env_md_st.12621* %mgf1Hash, i8* %EM, i32 %sLen) #0 {
define dso_local i32 @RSA_padding_add_PKCS1_PSS(%struct.rsa_st* %rsa, i8* %EM, i8* %mHash, %struct.env_md_st.12621* %Hash, i32 %sLen) #0 {
define dso_local i32 @RSA_padding_add_PKCS1_PSS_mgf1(%struct.rsa_st* %rsa, i8* %EM, i8* %mHash, %struct.env_md_st.12621* %Hash, %struct.env_md_st.12621* %mgf1Hash, i32 %sLen) #0 {
define dso_local i32 @DH_generate_parameters_ex(%struct.dh_st.17191* %ret, i32 %prime_len, i32 %generator, %struct.bn_gencb_st* %cb) #0 {
define internal i32 @dh_builtin_genparams(%struct.dh_st.17191* %ret, i32 %prime_len, i32 %generator, %struct.bn_gencb_st* %cb) #0 {
define dso_local %struct.dso_meth_st* @DSO_METHOD_dlfcn() #0 {
define internal i32 @dlfcn_load(%struct.dso_st* %dso) #0 {
define internal i32 @dlfcn_unload(%struct.dso_st* %dso) #0 {
define internal i8* @dlfcn_bind_var(%struct.dso_st* %dso, i8* %symname) #0 {
define internal void ()* @dlfcn_bind_func(%struct.dso_st* %dso, i8* %symname) #0 {
define internal i8* @dlfcn_name_converter(%struct.dso_st* %dso, i8* %filename) #0 {
define internal i8* @dlfcn_merger(%struct.dso_st* %dso, i8* %filespec1, i8* %filespec2) #0 {
define internal i32 @dlfcn_pathbyaddr(i8* %addr, i8* %path, i32 %sz) #0 {
define internal i8* @dlfcn_globallookup(i8* %name) #0 {
define dso_local void @ENGINE_add_conf_module() #0 {
define internal i32 @int_engine_module_init(%struct.conf_imodule_st* %md, %struct.conf_st* %cnf) #0 {
define internal void @int_engine_module_finish(%struct.conf_imodule_st* %md) #0 {
define internal i32 @int_engine_configure(i8* %name, i8* %value, %struct.conf_st* %cnf) #0 {
define internal i8* @skip_dot(i8* %name) #0 {
define internal i32 @int_engine_init(%struct.engine_st* %e) #0 {
define dso_local i32 @RAND_query_egd_bytes(i8* %path, i8* %buf, i32 %bytes) #0 {
define dso_local i32 @RAND_egd_bytes(i8* %path, i32 %bytes) #0 {
define dso_local i32 @RAND_egd(i8* %path) #0 {
define dso_local void @EVP_add_alg_module() #0 {
define internal i32 @alg_module_init(%struct.conf_imodule_st* %md, %struct.conf_st* %cnf) #0 {
define dso_local i32 @i2d_ASN1_SET(%struct.stack_st_SSL_CIPHER* %a, i8** %pp, i32 (i8*, i8**)* %i2d, i32 %ex_tag, i32 %ex_class, i32 %is_set) #0 {
define internal i32 @SetBlobCmp(i8* %elem1, i8* %elem2) #0 {
define dso_local %struct.stack_st_SSL_CIPHER* @d2i_ASN1_SET(%struct.stack_st_SSL_CIPHER** %a, i8** %pp, i64 %length, i8* (i8**, i8**, i64)* %d2i, void (i8*)* %free_func, i32 %ex_tag, i32 %ex_class) #0 {
define dso_local %struct.bio_st* @BIO_new_NDEF(%struct.bio_st* %out, %struct.ASN1_VALUE_st* %val, %struct.ASN1_ITEM_st* %it) #0 {
define internal i32 @ndef_prefix(%struct.bio_st* %b, i8** %pbuf, i32* %plen, i8* %parg) #0 {
define internal i32 @ndef_prefix_free(%struct.bio_st* %b, i8** %pbuf, i32* %plen, i8* %parg) #0 {
define internal i32 @ndef_suffix(%struct.bio_st* %b, i8** %pbuf, i32* %plen, i8* %parg) #0 {
define internal i32 @ndef_suffix_free(%struct.bio_st* %b, i8** %pbuf, i32* %plen, i8* %parg) #0 {
define dso_local i32 @i2d_ASN1_bio_stream(%struct.bio_st* %out, %struct.ASN1_VALUE_st* %val, %struct.bio_st* %in, i32 %flags, %struct.ASN1_ITEM_st* %it) #0 {
define dso_local i32 @SMIME_crlf_copy(%struct.bio_st* %in, %struct.bio_st* %out, i32 %flags) #0 {
define internal i32 @strip_eol(i8* %linebuf, i32* %plen) #0 {
define dso_local i32 @PEM_write_bio_ASN1_stream(%struct.bio_st* %out, %struct.ASN1_VALUE_st* %val, %struct.bio_st* %in, i32 %flags, i8* %hdr, %struct.ASN1_ITEM_st* %it) #0 {
define internal i32 @B64_write_ASN1(%struct.bio_st* %out, %struct.ASN1_VALUE_st* %val, %struct.bio_st* %in, i32 %flags, %struct.ASN1_ITEM_st* %it) #0 {
define dso_local i32 @SMIME_write_ASN1(%struct.bio_st* %bio, %struct.ASN1_VALUE_st* %val, %struct.bio_st* %data, i32 %flags, i32 %ctype_nid, i32 %econt_nid, %struct.stack_st_SSL_CIPHER* %mdalgs, %struct.ASN1_ITEM_st* %it) #0 {
define internal i32 @asn1_write_micalg(%struct.bio_st* %out, %struct.stack_st_SSL_CIPHER* %mdalgs) #0 {
define internal i32 @asn1_output_data(%struct.bio_st* %out, %struct.bio_st* %data, %struct.ASN1_VALUE_st* %val, i32 %flags, %struct.ASN1_ITEM_st* %it) #0 {
define dso_local %struct.ASN1_VALUE_st* @SMIME_read_ASN1(%struct.bio_st* %bio, %struct.bio_st** %bcont, %struct.ASN1_ITEM_st* %it) #0 {
define internal %struct.stack_st_SSL_CIPHER* @mime_parse_hdr(%struct.bio_st* %bio) #0 {
define internal %struct.MIME_HEADER* @mime_hdr_find(%struct.stack_st_SSL_CIPHER* %hdrs, i8* %name) #0 {
define internal void @mime_hdr_free(%struct.MIME_HEADER* %hdr) #0 {
define internal %struct.MIME_PARAM* @mime_param_find(%struct.MIME_HEADER* %hdr, i8* %name) #0 {
define internal i32 @multi_split(%struct.bio_st* %bio, i8* %bound, %struct.stack_st_SSL_CIPHER** %ret) #0 {
define internal %struct.ASN1_VALUE_st* @b64_read_asn1(%struct.bio_st* %bio, %struct.ASN1_ITEM_st* %it) #0 {
define internal i32 @mime_bound_check(i8* %line, i32 %linelen, i8* %bound, i32 %blen) #0 {
define internal void @mime_param_free(%struct.MIME_PARAM* %param) #0 {
define internal i32 @mime_hdr_cmp(%struct.MIME_HEADER** %a, %struct.MIME_HEADER** %b) #0 {
define internal i8* @strip_ends(i8* %name) #0 {
define internal %struct.MIME_HEADER* @mime_hdr_new(i8* %name, i8* %value) #0 {
define internal i32 @mime_hdr_addparam(%struct.MIME_HEADER* %mhdr, i8* %name, i8* %value) #0 {
define internal i32 @mime_param_cmp(%struct.MIME_PARAM** %a, %struct.MIME_PARAM** %b) #0 {
define internal i8* @strip_start(i8* %name) #0 {
define internal i8* @strip_end(i8* %name) #0 {
define dso_local i32 @SMIME_text(%struct.bio_st* %in, %struct.bio_st* %out) #0 {
define dso_local void @ASN1_add_oid_module() #0 {
define internal i32 @oid_module_init(%struct.conf_imodule_st* %md, %struct.conf_st* %cnf) #0 {
define internal void @oid_module_finish(%struct.conf_imodule_st* %md) #0 {
define internal i32 @do_create(i8* %value, i8* %name) #0 {
define dso_local i32 @CMS_signed_get_attr_count(%struct.CMS_SignerInfo_st.16927* %si) #0 {
define dso_local i32 @CMS_signed_get_attr_by_NID(%struct.CMS_SignerInfo_st.16927* %si, i32 %nid, i32 %lastpos) #0 {
define dso_local i32 @CMS_signed_get_attr_by_OBJ(%struct.CMS_SignerInfo_st.16927* %si, %struct.asn1_object_st* %obj, i32 %lastpos) #0 {
define dso_local %struct.x509_attributes_st* @CMS_signed_get_attr(%struct.CMS_SignerInfo_st.16927* %si, i32 %loc) #0 {
define dso_local %struct.x509_attributes_st* @CMS_signed_delete_attr(%struct.CMS_SignerInfo_st.16927* %si, i32 %loc) #0 {
define dso_local i32 @CMS_signed_add1_attr(%struct.CMS_SignerInfo_st.16927* %si, %struct.x509_attributes_st* %attr) #0 {
define dso_local i32 @CMS_signed_add1_attr_by_OBJ(%struct.CMS_SignerInfo_st.16927* %si, %struct.asn1_object_st* %obj, i32 %type, i8* %bytes, i32 %len) #0 {
define dso_local i32 @CMS_signed_add1_attr_by_NID(%struct.CMS_SignerInfo_st.16927* %si, i32 %nid, i32 %type, i8* %bytes, i32 %len) #0 {
define dso_local i32 @CMS_signed_add1_attr_by_txt(%struct.CMS_SignerInfo_st.16927* %si, i8* %attrname, i32 %type, i8* %bytes, i32 %len) #0 {
define dso_local i8* @CMS_signed_get0_data_by_OBJ(%struct.CMS_SignerInfo_st.16927* %si, %struct.asn1_object_st* %oid, i32 %lastpos, i32 %type) #0 {
define dso_local i32 @CMS_unsigned_get_attr_count(%struct.CMS_SignerInfo_st.16927* %si) #0 {
define dso_local i32 @CMS_unsigned_get_attr_by_NID(%struct.CMS_SignerInfo_st.16927* %si, i32 %nid, i32 %lastpos) #0 {
define dso_local i32 @CMS_unsigned_get_attr_by_OBJ(%struct.CMS_SignerInfo_st.16927* %si, %struct.asn1_object_st* %obj, i32 %lastpos) #0 {
define dso_local %struct.x509_attributes_st* @CMS_unsigned_get_attr(%struct.CMS_SignerInfo_st.16927* %si, i32 %loc) #0 {
define dso_local %struct.x509_attributes_st* @CMS_unsigned_delete_attr(%struct.CMS_SignerInfo_st.16927* %si, i32 %loc) #0 {
define dso_local i32 @CMS_unsigned_add1_attr(%struct.CMS_SignerInfo_st.16927* %si, %struct.x509_attributes_st* %attr) #0 {
define dso_local i32 @CMS_unsigned_add1_attr_by_OBJ(%struct.CMS_SignerInfo_st.16927* %si, %struct.asn1_object_st* %obj, i32 %type, i8* %bytes, i32 %len) #0 {
define dso_local i32 @CMS_unsigned_add1_attr_by_NID(%struct.CMS_SignerInfo_st.16927* %si, i32 %nid, i32 %type, i8* %bytes, i32 %len) #0 {
define dso_local i32 @CMS_unsigned_add1_attr_by_txt(%struct.CMS_SignerInfo_st.16927* %si, i8* %attrname, i32 %type, i8* %bytes, i32 %len) #0 {
define dso_local i8* @CMS_unsigned_get0_data_by_OBJ(%struct.CMS_SignerInfo_st.16927* %si, %struct.asn1_object_st* %oid, i32 %lastpos, i32 %type) #0 {
define dso_local %struct.bignum_st* @BN_get0_nist_prime_192() #0 {
define dso_local %struct.bignum_st* @BN_get0_nist_prime_224() #0 {
define dso_local %struct.bignum_st* @BN_get0_nist_prime_256() #0 {
define dso_local %struct.bignum_st* @BN_get0_nist_prime_384() #0 {
define dso_local %struct.bignum_st* @BN_get0_nist_prime_521() #0 {
define dso_local i32 @BN_nist_mod_192(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %field, %struct.bignum_ctx* %ctx) #0 {
define internal void @nist_cp_bn(i64* %dst, i64* %src, i32 %top) #0 {
define internal void @nist_cp_bn_0(i64* %dst, i64* %src, i32 %top, i32 %max) #0 {
define dso_local i32 @BN_nist_mod_224(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %field, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @BN_nist_mod_256(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %field, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @BN_nist_mod_384(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %field, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @BN_nist_mod_521(%struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %field, %struct.bignum_ctx* %ctx) #0 {
define dso_local %struct.ec_method_st* @EC_GFp_simple_method() #0 {
define dso_local i32 @ec_GFp_simple_group_init(%struct.ec_group_st* %group) #0 {
define dso_local void @ec_GFp_simple_group_finish(%struct.ec_group_st* %group) #0 {
define dso_local void @ec_GFp_simple_group_clear_finish(%struct.ec_group_st* %group) #0 {
define dso_local i32 @ec_GFp_simple_group_copy(%struct.ec_group_st* %dest, %struct.ec_group_st* %src) #0 {
define dso_local i32 @ec_GFp_simple_group_set_curve(%struct.ec_group_st* %group, %struct.bignum_st* %p, %struct.bignum_st* %a, %struct.bignum_st* %b, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @ec_GFp_simple_group_get_curve(%struct.ec_group_st* %group, %struct.bignum_st* %p, %struct.bignum_st* %a, %struct.bignum_st* %b, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @ec_GFp_simple_group_get_degree(%struct.ec_group_st* %group) #0 {
define dso_local i32 @ec_GFp_simple_group_check_discriminant(%struct.ec_group_st* %group, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @ec_GFp_simple_point_init(%struct.ec_point_st* %point) #0 {
define dso_local void @ec_GFp_simple_point_finish(%struct.ec_point_st* %point) #0 {
define dso_local void @ec_GFp_simple_point_clear_finish(%struct.ec_point_st* %point) #0 {
define dso_local i32 @ec_GFp_simple_point_copy(%struct.ec_point_st* %dest, %struct.ec_point_st* %src) #0 {
define dso_local i32 @ec_GFp_simple_point_set_to_infinity(%struct.ec_group_st* %group, %struct.ec_point_st* %point) #0 {
define dso_local i32 @ec_GFp_simple_set_Jprojective_coordinates_GFp(%struct.ec_group_st* %group, %struct.ec_point_st* %point, %struct.bignum_st* %x, %struct.bignum_st* %y, %struct.bignum_st* %z, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @ec_GFp_simple_get_Jprojective_coordinates_GFp(%struct.ec_group_st* %group, %struct.ec_point_st* %point, %struct.bignum_st* %x, %struct.bignum_st* %y, %struct.bignum_st* %z, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @ec_GFp_simple_point_set_affine_coordinates(%struct.ec_group_st* %group, %struct.ec_point_st* %point, %struct.bignum_st* %x, %struct.bignum_st* %y, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @ec_GFp_simple_point_get_affine_coordinates(%struct.ec_group_st* %group, %struct.ec_point_st* %point, %struct.bignum_st* %x, %struct.bignum_st* %y, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @ec_GFp_simple_add(%struct.ec_group_st* %group, %struct.ec_point_st* %r, %struct.ec_point_st* %a, %struct.ec_point_st* %b, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @ec_GFp_simple_dbl(%struct.ec_group_st* %group, %struct.ec_point_st* %r, %struct.ec_point_st* %a, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @ec_GFp_simple_invert(%struct.ec_group_st* %group, %struct.ec_point_st* %point, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @ec_GFp_simple_is_at_infinity(%struct.ec_group_st* %group, %struct.ec_point_st* %point) #0 {
define dso_local i32 @ec_GFp_simple_is_on_curve(%struct.ec_group_st* %group, %struct.ec_point_st* %point, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @ec_GFp_simple_cmp(%struct.ec_group_st* %group, %struct.ec_point_st* %a, %struct.ec_point_st* %b, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @ec_GFp_simple_make_affine(%struct.ec_group_st* %group, %struct.ec_point_st* %point, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @ec_GFp_simple_points_make_affine(%struct.ec_group_st* %group, i64 %num, %struct.ec_point_st** %points, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @ec_GFp_simple_field_mul(%struct.ec_group_st* %group, %struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_st* %b, %struct.bignum_ctx* %ctx) #0 {
define dso_local i32 @ec_GFp_simple_field_sqr(%struct.ec_group_st* %group, %struct.bignum_st* %r, %struct.bignum_st* %a, %struct.bignum_ctx* %ctx) #0 {
define dso_local %struct.bio_method_st* @BIO_f_base64() #0 {
define internal i32 @b64_write(%struct.bio_st* %b, i8* %in, i32 %inl) #0 {
define internal i32 @b64_read(%struct.bio_st* %b, i8* %out, i32 %outl) #0 {
define internal i32 @b64_puts(%struct.bio_st* %b, i8* %str) #0 {
define internal i64 @b64_ctrl(%struct.bio_st* %b, i32 %cmd, i64 %num, i8* %ptr) #0 {
define internal i32 @b64_new(%struct.bio_st* %bi) #0 {
define internal i32 @b64_free(%struct.bio_st* %a) #0 {
define internal i64 @b64_callback_ctrl(%struct.bio_st* %b, i32 %cmd, void (%struct.bio_st*, i32, i8*, i32, i64, i64)* %fp) #0 {
define dso_local %struct.bio_method_st* @BIO_f_asn1() #0 {
define internal i32 @asn1_bio_write(%struct.bio_st* %b, i8* %in, i32 %inl) #0 {
define internal i32 @asn1_bio_read(%struct.bio_st* %b, i8* %in, i32 %inl) #0 {
define internal i32 @asn1_bio_puts(%struct.bio_st* %b, i8* %str) #0 {
define internal i32 @asn1_bio_gets(%struct.bio_st* %b, i8* %str, i32 %size) #0 {
define internal i64 @asn1_bio_ctrl(%struct.bio_st* %b, i32 %cmd, i64 %arg1, i8* %arg2) #0 {
define internal i32 @asn1_bio_new(%struct.bio_st* %b) #0 {
define internal i32 @asn1_bio_free(%struct.bio_st* %b) #0 {
define internal i64 @asn1_bio_callback_ctrl(%struct.bio_st* %b, i32 %cmd, void (%struct.bio_st*, i32, i8*, i32, i64, i64)* %fp) #0 {
define internal i32 @asn1_bio_init(%struct.BIO_ASN1_BUF_CTX_t* %ctx, i32 %size) #0 {
define internal i32 @asn1_bio_setup_ex(%struct.bio_st* %b, %struct.BIO_ASN1_BUF_CTX_t* %ctx, i32 (%struct.bio_st*, i8**, i32*, i8*)* %setup, i32 %ex_state, i32 %other_state) #0 {
define internal i32 @asn1_bio_flush_ex(%struct.bio_st* %b, %struct.BIO_ASN1_BUF_CTX_t* %ctx, i32 (%struct.bio_st*, i8**, i32*, i8*)* %cleanup, i32 %next) #0 {
define dso_local i32 @BIO_asn1_set_prefix(%struct.bio_st* %b, i32 (%struct.bio_st*, i8**, i32*, i8*)* %prefix, i32 (%struct.bio_st*, i8**, i32*, i8*)* %prefix_free) #0 {
define internal i32 @asn1_bio_set_ex(%struct.bio_st* %b, i32 %cmd, i32 (%struct.bio_st*, i8**, i32*, i8*)* %ex_func, i32 (%struct.bio_st*, i8**, i32*, i8*)* %ex_free_func) #0 {
define dso_local i32 @BIO_asn1_get_prefix(%struct.bio_st* %b, i32 (%struct.bio_st*, i8**, i32*, i8*)** %pprefix, i32 (%struct.bio_st*, i8**, i32*, i8*)** %pprefix_free) #0 {
define internal i32 @asn1_bio_get_ex(%struct.bio_st* %b, i32 %cmd, i32 (%struct.bio_st*, i8**, i32*, i8*)** %ex_func, i32 (%struct.bio_st*, i8**, i32*, i8*)** %ex_free_func) #0 {
define dso_local i32 @BIO_asn1_set_suffix(%struct.bio_st* %b, i32 (%struct.bio_st*, i8**, i32*, i8*)* %suffix, i32 (%struct.bio_st*, i8**, i32*, i8*)* %suffix_free) #0 {
define dso_local i32 @BIO_asn1_get_suffix(%struct.bio_st* %b, i32 (%struct.bio_st*, i8**, i32*, i8*)** %psuffix, i32 (%struct.bio_st*, i8**, i32*, i8*)** %psuffix_free) #0 {
